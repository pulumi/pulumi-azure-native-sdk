// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20240301

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The type of the automation rule action.
type ActionType string

const (
	// Modify an object's properties
	ActionTypeModifyProperties = ActionType("ModifyProperties")
	// Run a playbook on an object
	ActionTypeRunPlaybook = ActionType("RunPlaybook")
	// Add a task to an incident object
	ActionTypeAddIncidentTask = ActionType("AddIncidentTask")
)

// Alert detail
type AlertDetail string

const (
	// Alert display name
	AlertDetailDisplayName = AlertDetail("DisplayName")
	// Alert severity
	AlertDetailSeverity = AlertDetail("Severity")
)

func (AlertDetail) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertDetail)(nil)).Elem()
}

func (e AlertDetail) ToAlertDetailOutput() AlertDetailOutput {
	return pulumi.ToOutput(e).(AlertDetailOutput)
}

func (e AlertDetail) ToAlertDetailOutputWithContext(ctx context.Context) AlertDetailOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AlertDetailOutput)
}

func (e AlertDetail) ToAlertDetailPtrOutput() AlertDetailPtrOutput {
	return e.ToAlertDetailPtrOutputWithContext(context.Background())
}

func (e AlertDetail) ToAlertDetailPtrOutputWithContext(ctx context.Context) AlertDetailPtrOutput {
	return AlertDetail(e).ToAlertDetailOutputWithContext(ctx).ToAlertDetailPtrOutputWithContext(ctx)
}

func (e AlertDetail) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AlertDetail) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AlertDetail) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AlertDetail) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AlertDetailOutput struct{ *pulumi.OutputState }

func (AlertDetailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertDetail)(nil)).Elem()
}

func (o AlertDetailOutput) ToAlertDetailOutput() AlertDetailOutput {
	return o
}

func (o AlertDetailOutput) ToAlertDetailOutputWithContext(ctx context.Context) AlertDetailOutput {
	return o
}

func (o AlertDetailOutput) ToAlertDetailPtrOutput() AlertDetailPtrOutput {
	return o.ToAlertDetailPtrOutputWithContext(context.Background())
}

func (o AlertDetailOutput) ToAlertDetailPtrOutputWithContext(ctx context.Context) AlertDetailPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AlertDetail) *AlertDetail {
		return &v
	}).(AlertDetailPtrOutput)
}

func (o AlertDetailOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AlertDetailOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AlertDetail) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AlertDetailOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AlertDetailOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AlertDetail) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AlertDetailPtrOutput struct{ *pulumi.OutputState }

func (AlertDetailPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AlertDetail)(nil)).Elem()
}

func (o AlertDetailPtrOutput) ToAlertDetailPtrOutput() AlertDetailPtrOutput {
	return o
}

func (o AlertDetailPtrOutput) ToAlertDetailPtrOutputWithContext(ctx context.Context) AlertDetailPtrOutput {
	return o
}

func (o AlertDetailPtrOutput) Elem() AlertDetailOutput {
	return o.ApplyT(func(v *AlertDetail) AlertDetail {
		if v != nil {
			return *v
		}
		var ret AlertDetail
		return ret
	}).(AlertDetailOutput)
}

func (o AlertDetailPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AlertDetailPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AlertDetail) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AlertDetailInput is an input type that accepts values of the AlertDetail enum
// A concrete instance of `AlertDetailInput` can be one of the following:
//
//	AlertDetailDisplayName
//	AlertDetailSeverity
type AlertDetailInput interface {
	pulumi.Input

	ToAlertDetailOutput() AlertDetailOutput
	ToAlertDetailOutputWithContext(context.Context) AlertDetailOutput
}

var alertDetailPtrType = reflect.TypeOf((**AlertDetail)(nil)).Elem()

type AlertDetailPtrInput interface {
	pulumi.Input

	ToAlertDetailPtrOutput() AlertDetailPtrOutput
	ToAlertDetailPtrOutputWithContext(context.Context) AlertDetailPtrOutput
}

type alertDetailPtr string

func AlertDetailPtr(v string) AlertDetailPtrInput {
	return (*alertDetailPtr)(&v)
}

func (*alertDetailPtr) ElementType() reflect.Type {
	return alertDetailPtrType
}

func (in *alertDetailPtr) ToAlertDetailPtrOutput() AlertDetailPtrOutput {
	return pulumi.ToOutput(in).(AlertDetailPtrOutput)
}

func (in *alertDetailPtr) ToAlertDetailPtrOutputWithContext(ctx context.Context) AlertDetailPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AlertDetailPtrOutput)
}

// The V3 alert property
type AlertProperty string

const (
	// Alert's link
	AlertPropertyAlertLink = AlertProperty("AlertLink")
	// Confidence level property
	AlertPropertyConfidenceLevel = AlertProperty("ConfidenceLevel")
	// Confidence score
	AlertPropertyConfidenceScore = AlertProperty("ConfidenceScore")
	// Extended links to the alert
	AlertPropertyExtendedLinks = AlertProperty("ExtendedLinks")
	// Product name alert property
	AlertPropertyProductName = AlertProperty("ProductName")
	// Provider name alert property
	AlertPropertyProviderName = AlertProperty("ProviderName")
	// Product component name alert property
	AlertPropertyProductComponentName = AlertProperty("ProductComponentName")
	// Remediation steps alert property
	AlertPropertyRemediationSteps = AlertProperty("RemediationSteps")
	// Techniques alert property
	AlertPropertyTechniques = AlertProperty("Techniques")
)

func (AlertProperty) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertProperty)(nil)).Elem()
}

func (e AlertProperty) ToAlertPropertyOutput() AlertPropertyOutput {
	return pulumi.ToOutput(e).(AlertPropertyOutput)
}

func (e AlertProperty) ToAlertPropertyOutputWithContext(ctx context.Context) AlertPropertyOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AlertPropertyOutput)
}

func (e AlertProperty) ToAlertPropertyPtrOutput() AlertPropertyPtrOutput {
	return e.ToAlertPropertyPtrOutputWithContext(context.Background())
}

func (e AlertProperty) ToAlertPropertyPtrOutputWithContext(ctx context.Context) AlertPropertyPtrOutput {
	return AlertProperty(e).ToAlertPropertyOutputWithContext(ctx).ToAlertPropertyPtrOutputWithContext(ctx)
}

func (e AlertProperty) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AlertProperty) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AlertProperty) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AlertProperty) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AlertPropertyOutput struct{ *pulumi.OutputState }

func (AlertPropertyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertProperty)(nil)).Elem()
}

func (o AlertPropertyOutput) ToAlertPropertyOutput() AlertPropertyOutput {
	return o
}

func (o AlertPropertyOutput) ToAlertPropertyOutputWithContext(ctx context.Context) AlertPropertyOutput {
	return o
}

func (o AlertPropertyOutput) ToAlertPropertyPtrOutput() AlertPropertyPtrOutput {
	return o.ToAlertPropertyPtrOutputWithContext(context.Background())
}

func (o AlertPropertyOutput) ToAlertPropertyPtrOutputWithContext(ctx context.Context) AlertPropertyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AlertProperty) *AlertProperty {
		return &v
	}).(AlertPropertyPtrOutput)
}

func (o AlertPropertyOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AlertPropertyOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AlertProperty) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AlertPropertyOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AlertPropertyOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AlertProperty) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AlertPropertyPtrOutput struct{ *pulumi.OutputState }

func (AlertPropertyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AlertProperty)(nil)).Elem()
}

func (o AlertPropertyPtrOutput) ToAlertPropertyPtrOutput() AlertPropertyPtrOutput {
	return o
}

func (o AlertPropertyPtrOutput) ToAlertPropertyPtrOutputWithContext(ctx context.Context) AlertPropertyPtrOutput {
	return o
}

func (o AlertPropertyPtrOutput) Elem() AlertPropertyOutput {
	return o.ApplyT(func(v *AlertProperty) AlertProperty {
		if v != nil {
			return *v
		}
		var ret AlertProperty
		return ret
	}).(AlertPropertyOutput)
}

func (o AlertPropertyPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AlertPropertyPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AlertProperty) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AlertPropertyInput is an input type that accepts values of the AlertProperty enum
// A concrete instance of `AlertPropertyInput` can be one of the following:
//
//	AlertPropertyAlertLink
//	AlertPropertyConfidenceLevel
//	AlertPropertyConfidenceScore
//	AlertPropertyExtendedLinks
//	AlertPropertyProductName
//	AlertPropertyProviderName
//	AlertPropertyProductComponentName
//	AlertPropertyRemediationSteps
//	AlertPropertyTechniques
type AlertPropertyInput interface {
	pulumi.Input

	ToAlertPropertyOutput() AlertPropertyOutput
	ToAlertPropertyOutputWithContext(context.Context) AlertPropertyOutput
}

var alertPropertyPtrType = reflect.TypeOf((**AlertProperty)(nil)).Elem()

type AlertPropertyPtrInput interface {
	pulumi.Input

	ToAlertPropertyPtrOutput() AlertPropertyPtrOutput
	ToAlertPropertyPtrOutputWithContext(context.Context) AlertPropertyPtrOutput
}

type alertPropertyPtr string

func AlertPropertyPtr(v string) AlertPropertyPtrInput {
	return (*alertPropertyPtr)(&v)
}

func (*alertPropertyPtr) ElementType() reflect.Type {
	return alertPropertyPtrType
}

func (in *alertPropertyPtr) ToAlertPropertyPtrOutput() AlertPropertyPtrOutput {
	return pulumi.ToOutput(in).(AlertPropertyPtrOutput)
}

func (in *alertPropertyPtr) ToAlertPropertyPtrOutputWithContext(ctx context.Context) AlertPropertyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AlertPropertyPtrOutput)
}

// The alert rule kind
type AlertRuleKind string

const (
	AlertRuleKindScheduled                         = AlertRuleKind("Scheduled")
	AlertRuleKindMicrosoftSecurityIncidentCreation = AlertRuleKind("MicrosoftSecurityIncidentCreation")
	AlertRuleKindFusion                            = AlertRuleKind("Fusion")
)

// The severity for alerts created by this alert rule.
type AlertSeverity string

const (
	// High severity
	AlertSeverityHigh = AlertSeverity("High")
	// Medium severity
	AlertSeverityMedium = AlertSeverity("Medium")
	// Low severity
	AlertSeverityLow = AlertSeverity("Low")
	// Informational severity
	AlertSeverityInformational = AlertSeverity("Informational")
)

func (AlertSeverity) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertSeverity)(nil)).Elem()
}

func (e AlertSeverity) ToAlertSeverityOutput() AlertSeverityOutput {
	return pulumi.ToOutput(e).(AlertSeverityOutput)
}

func (e AlertSeverity) ToAlertSeverityOutputWithContext(ctx context.Context) AlertSeverityOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AlertSeverityOutput)
}

func (e AlertSeverity) ToAlertSeverityPtrOutput() AlertSeverityPtrOutput {
	return e.ToAlertSeverityPtrOutputWithContext(context.Background())
}

func (e AlertSeverity) ToAlertSeverityPtrOutputWithContext(ctx context.Context) AlertSeverityPtrOutput {
	return AlertSeverity(e).ToAlertSeverityOutputWithContext(ctx).ToAlertSeverityPtrOutputWithContext(ctx)
}

func (e AlertSeverity) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AlertSeverity) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AlertSeverity) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AlertSeverity) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AlertSeverityOutput struct{ *pulumi.OutputState }

func (AlertSeverityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertSeverity)(nil)).Elem()
}

func (o AlertSeverityOutput) ToAlertSeverityOutput() AlertSeverityOutput {
	return o
}

func (o AlertSeverityOutput) ToAlertSeverityOutputWithContext(ctx context.Context) AlertSeverityOutput {
	return o
}

func (o AlertSeverityOutput) ToAlertSeverityPtrOutput() AlertSeverityPtrOutput {
	return o.ToAlertSeverityPtrOutputWithContext(context.Background())
}

func (o AlertSeverityOutput) ToAlertSeverityPtrOutputWithContext(ctx context.Context) AlertSeverityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AlertSeverity) *AlertSeverity {
		return &v
	}).(AlertSeverityPtrOutput)
}

func (o AlertSeverityOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AlertSeverityOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AlertSeverity) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AlertSeverityOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AlertSeverityOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AlertSeverity) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AlertSeverityPtrOutput struct{ *pulumi.OutputState }

func (AlertSeverityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AlertSeverity)(nil)).Elem()
}

func (o AlertSeverityPtrOutput) ToAlertSeverityPtrOutput() AlertSeverityPtrOutput {
	return o
}

func (o AlertSeverityPtrOutput) ToAlertSeverityPtrOutputWithContext(ctx context.Context) AlertSeverityPtrOutput {
	return o
}

func (o AlertSeverityPtrOutput) Elem() AlertSeverityOutput {
	return o.ApplyT(func(v *AlertSeverity) AlertSeverity {
		if v != nil {
			return *v
		}
		var ret AlertSeverity
		return ret
	}).(AlertSeverityOutput)
}

func (o AlertSeverityPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AlertSeverityPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AlertSeverity) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AlertSeverityInput is an input type that accepts values of the AlertSeverity enum
// A concrete instance of `AlertSeverityInput` can be one of the following:
//
//	AlertSeverityHigh
//	AlertSeverityMedium
//	AlertSeverityLow
//	AlertSeverityInformational
type AlertSeverityInput interface {
	pulumi.Input

	ToAlertSeverityOutput() AlertSeverityOutput
	ToAlertSeverityOutputWithContext(context.Context) AlertSeverityOutput
}

var alertSeverityPtrType = reflect.TypeOf((**AlertSeverity)(nil)).Elem()

type AlertSeverityPtrInput interface {
	pulumi.Input

	ToAlertSeverityPtrOutput() AlertSeverityPtrOutput
	ToAlertSeverityPtrOutputWithContext(context.Context) AlertSeverityPtrOutput
}

type alertSeverityPtr string

func AlertSeverityPtr(v string) AlertSeverityPtrInput {
	return (*alertSeverityPtr)(&v)
}

func (*alertSeverityPtr) ElementType() reflect.Type {
	return alertSeverityPtrType
}

func (in *alertSeverityPtr) ToAlertSeverityPtrOutput() AlertSeverityPtrOutput {
	return pulumi.ToOutput(in).(AlertSeverityPtrOutput)
}

func (in *alertSeverityPtr) ToAlertSeverityPtrOutputWithContext(ctx context.Context) AlertSeverityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AlertSeverityPtrOutput)
}

// The severity for alerts created by this alert rule.
type AttackTactic string

const (
	AttackTacticReconnaissance          = AttackTactic("Reconnaissance")
	AttackTacticResourceDevelopment     = AttackTactic("ResourceDevelopment")
	AttackTacticInitialAccess           = AttackTactic("InitialAccess")
	AttackTacticExecution               = AttackTactic("Execution")
	AttackTacticPersistence             = AttackTactic("Persistence")
	AttackTacticPrivilegeEscalation     = AttackTactic("PrivilegeEscalation")
	AttackTacticDefenseEvasion          = AttackTactic("DefenseEvasion")
	AttackTacticCredentialAccess        = AttackTactic("CredentialAccess")
	AttackTacticDiscovery               = AttackTactic("Discovery")
	AttackTacticLateralMovement         = AttackTactic("LateralMovement")
	AttackTacticCollection              = AttackTactic("Collection")
	AttackTacticExfiltration            = AttackTactic("Exfiltration")
	AttackTacticCommandAndControl       = AttackTactic("CommandAndControl")
	AttackTacticImpact                  = AttackTactic("Impact")
	AttackTacticPreAttack               = AttackTactic("PreAttack")
	AttackTacticImpairProcessControl    = AttackTactic("ImpairProcessControl")
	AttackTacticInhibitResponseFunction = AttackTactic("InhibitResponseFunction")
)

func (AttackTactic) ElementType() reflect.Type {
	return reflect.TypeOf((*AttackTactic)(nil)).Elem()
}

func (e AttackTactic) ToAttackTacticOutput() AttackTacticOutput {
	return pulumi.ToOutput(e).(AttackTacticOutput)
}

func (e AttackTactic) ToAttackTacticOutputWithContext(ctx context.Context) AttackTacticOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AttackTacticOutput)
}

func (e AttackTactic) ToAttackTacticPtrOutput() AttackTacticPtrOutput {
	return e.ToAttackTacticPtrOutputWithContext(context.Background())
}

func (e AttackTactic) ToAttackTacticPtrOutputWithContext(ctx context.Context) AttackTacticPtrOutput {
	return AttackTactic(e).ToAttackTacticOutputWithContext(ctx).ToAttackTacticPtrOutputWithContext(ctx)
}

func (e AttackTactic) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AttackTactic) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AttackTactic) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AttackTactic) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AttackTacticOutput struct{ *pulumi.OutputState }

func (AttackTacticOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AttackTactic)(nil)).Elem()
}

func (o AttackTacticOutput) ToAttackTacticOutput() AttackTacticOutput {
	return o
}

func (o AttackTacticOutput) ToAttackTacticOutputWithContext(ctx context.Context) AttackTacticOutput {
	return o
}

func (o AttackTacticOutput) ToAttackTacticPtrOutput() AttackTacticPtrOutput {
	return o.ToAttackTacticPtrOutputWithContext(context.Background())
}

func (o AttackTacticOutput) ToAttackTacticPtrOutputWithContext(ctx context.Context) AttackTacticPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AttackTactic) *AttackTactic {
		return &v
	}).(AttackTacticPtrOutput)
}

func (o AttackTacticOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AttackTacticOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AttackTactic) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AttackTacticOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AttackTacticOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AttackTactic) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AttackTacticPtrOutput struct{ *pulumi.OutputState }

func (AttackTacticPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AttackTactic)(nil)).Elem()
}

func (o AttackTacticPtrOutput) ToAttackTacticPtrOutput() AttackTacticPtrOutput {
	return o
}

func (o AttackTacticPtrOutput) ToAttackTacticPtrOutputWithContext(ctx context.Context) AttackTacticPtrOutput {
	return o
}

func (o AttackTacticPtrOutput) Elem() AttackTacticOutput {
	return o.ApplyT(func(v *AttackTactic) AttackTactic {
		if v != nil {
			return *v
		}
		var ret AttackTactic
		return ret
	}).(AttackTacticOutput)
}

func (o AttackTacticPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AttackTacticPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AttackTactic) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AttackTacticInput is an input type that accepts values of the AttackTactic enum
// A concrete instance of `AttackTacticInput` can be one of the following:
//
//	AttackTacticReconnaissance
//	AttackTacticResourceDevelopment
//	AttackTacticInitialAccess
//	AttackTacticExecution
//	AttackTacticPersistence
//	AttackTacticPrivilegeEscalation
//	AttackTacticDefenseEvasion
//	AttackTacticCredentialAccess
//	AttackTacticDiscovery
//	AttackTacticLateralMovement
//	AttackTacticCollection
//	AttackTacticExfiltration
//	AttackTacticCommandAndControl
//	AttackTacticImpact
//	AttackTacticPreAttack
//	AttackTacticImpairProcessControl
//	AttackTacticInhibitResponseFunction
type AttackTacticInput interface {
	pulumi.Input

	ToAttackTacticOutput() AttackTacticOutput
	ToAttackTacticOutputWithContext(context.Context) AttackTacticOutput
}

var attackTacticPtrType = reflect.TypeOf((**AttackTactic)(nil)).Elem()

type AttackTacticPtrInput interface {
	pulumi.Input

	ToAttackTacticPtrOutput() AttackTacticPtrOutput
	ToAttackTacticPtrOutputWithContext(context.Context) AttackTacticPtrOutput
}

type attackTacticPtr string

func AttackTacticPtr(v string) AttackTacticPtrInput {
	return (*attackTacticPtr)(&v)
}

func (*attackTacticPtr) ElementType() reflect.Type {
	return attackTacticPtrType
}

func (in *attackTacticPtr) ToAttackTacticPtrOutput() AttackTacticPtrOutput {
	return pulumi.ToOutput(in).(AttackTacticPtrOutput)
}

func (in *attackTacticPtr) ToAttackTacticPtrOutputWithContext(ctx context.Context) AttackTacticPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AttackTacticPtrOutput)
}

// Describes a boolean condition operator.
type AutomationRuleBooleanConditionSupportedOperator string

const (
	// Evaluates as true if all the item conditions are evaluated as true
	AutomationRuleBooleanConditionSupportedOperatorAnd = AutomationRuleBooleanConditionSupportedOperator("And")
	// Evaluates as true if at least one of the item conditions are evaluated as true
	AutomationRuleBooleanConditionSupportedOperatorOr = AutomationRuleBooleanConditionSupportedOperator("Or")
)

func (AutomationRuleBooleanConditionSupportedOperator) ElementType() reflect.Type {
	return reflect.TypeOf((*AutomationRuleBooleanConditionSupportedOperator)(nil)).Elem()
}

func (e AutomationRuleBooleanConditionSupportedOperator) ToAutomationRuleBooleanConditionSupportedOperatorOutput() AutomationRuleBooleanConditionSupportedOperatorOutput {
	return pulumi.ToOutput(e).(AutomationRuleBooleanConditionSupportedOperatorOutput)
}

func (e AutomationRuleBooleanConditionSupportedOperator) ToAutomationRuleBooleanConditionSupportedOperatorOutputWithContext(ctx context.Context) AutomationRuleBooleanConditionSupportedOperatorOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AutomationRuleBooleanConditionSupportedOperatorOutput)
}

func (e AutomationRuleBooleanConditionSupportedOperator) ToAutomationRuleBooleanConditionSupportedOperatorPtrOutput() AutomationRuleBooleanConditionSupportedOperatorPtrOutput {
	return e.ToAutomationRuleBooleanConditionSupportedOperatorPtrOutputWithContext(context.Background())
}

func (e AutomationRuleBooleanConditionSupportedOperator) ToAutomationRuleBooleanConditionSupportedOperatorPtrOutputWithContext(ctx context.Context) AutomationRuleBooleanConditionSupportedOperatorPtrOutput {
	return AutomationRuleBooleanConditionSupportedOperator(e).ToAutomationRuleBooleanConditionSupportedOperatorOutputWithContext(ctx).ToAutomationRuleBooleanConditionSupportedOperatorPtrOutputWithContext(ctx)
}

func (e AutomationRuleBooleanConditionSupportedOperator) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AutomationRuleBooleanConditionSupportedOperator) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AutomationRuleBooleanConditionSupportedOperator) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AutomationRuleBooleanConditionSupportedOperator) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AutomationRuleBooleanConditionSupportedOperatorOutput struct{ *pulumi.OutputState }

func (AutomationRuleBooleanConditionSupportedOperatorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutomationRuleBooleanConditionSupportedOperator)(nil)).Elem()
}

func (o AutomationRuleBooleanConditionSupportedOperatorOutput) ToAutomationRuleBooleanConditionSupportedOperatorOutput() AutomationRuleBooleanConditionSupportedOperatorOutput {
	return o
}

func (o AutomationRuleBooleanConditionSupportedOperatorOutput) ToAutomationRuleBooleanConditionSupportedOperatorOutputWithContext(ctx context.Context) AutomationRuleBooleanConditionSupportedOperatorOutput {
	return o
}

func (o AutomationRuleBooleanConditionSupportedOperatorOutput) ToAutomationRuleBooleanConditionSupportedOperatorPtrOutput() AutomationRuleBooleanConditionSupportedOperatorPtrOutput {
	return o.ToAutomationRuleBooleanConditionSupportedOperatorPtrOutputWithContext(context.Background())
}

func (o AutomationRuleBooleanConditionSupportedOperatorOutput) ToAutomationRuleBooleanConditionSupportedOperatorPtrOutputWithContext(ctx context.Context) AutomationRuleBooleanConditionSupportedOperatorPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AutomationRuleBooleanConditionSupportedOperator) *AutomationRuleBooleanConditionSupportedOperator {
		return &v
	}).(AutomationRuleBooleanConditionSupportedOperatorPtrOutput)
}

func (o AutomationRuleBooleanConditionSupportedOperatorOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AutomationRuleBooleanConditionSupportedOperatorOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AutomationRuleBooleanConditionSupportedOperator) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AutomationRuleBooleanConditionSupportedOperatorOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AutomationRuleBooleanConditionSupportedOperatorOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AutomationRuleBooleanConditionSupportedOperator) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AutomationRuleBooleanConditionSupportedOperatorPtrOutput struct{ *pulumi.OutputState }

func (AutomationRuleBooleanConditionSupportedOperatorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AutomationRuleBooleanConditionSupportedOperator)(nil)).Elem()
}

func (o AutomationRuleBooleanConditionSupportedOperatorPtrOutput) ToAutomationRuleBooleanConditionSupportedOperatorPtrOutput() AutomationRuleBooleanConditionSupportedOperatorPtrOutput {
	return o
}

func (o AutomationRuleBooleanConditionSupportedOperatorPtrOutput) ToAutomationRuleBooleanConditionSupportedOperatorPtrOutputWithContext(ctx context.Context) AutomationRuleBooleanConditionSupportedOperatorPtrOutput {
	return o
}

func (o AutomationRuleBooleanConditionSupportedOperatorPtrOutput) Elem() AutomationRuleBooleanConditionSupportedOperatorOutput {
	return o.ApplyT(func(v *AutomationRuleBooleanConditionSupportedOperator) AutomationRuleBooleanConditionSupportedOperator {
		if v != nil {
			return *v
		}
		var ret AutomationRuleBooleanConditionSupportedOperator
		return ret
	}).(AutomationRuleBooleanConditionSupportedOperatorOutput)
}

func (o AutomationRuleBooleanConditionSupportedOperatorPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AutomationRuleBooleanConditionSupportedOperatorPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AutomationRuleBooleanConditionSupportedOperator) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AutomationRuleBooleanConditionSupportedOperatorInput is an input type that accepts values of the AutomationRuleBooleanConditionSupportedOperator enum
// A concrete instance of `AutomationRuleBooleanConditionSupportedOperatorInput` can be one of the following:
//
//	AutomationRuleBooleanConditionSupportedOperatorAnd
//	AutomationRuleBooleanConditionSupportedOperatorOr
type AutomationRuleBooleanConditionSupportedOperatorInput interface {
	pulumi.Input

	ToAutomationRuleBooleanConditionSupportedOperatorOutput() AutomationRuleBooleanConditionSupportedOperatorOutput
	ToAutomationRuleBooleanConditionSupportedOperatorOutputWithContext(context.Context) AutomationRuleBooleanConditionSupportedOperatorOutput
}

var automationRuleBooleanConditionSupportedOperatorPtrType = reflect.TypeOf((**AutomationRuleBooleanConditionSupportedOperator)(nil)).Elem()

type AutomationRuleBooleanConditionSupportedOperatorPtrInput interface {
	pulumi.Input

	ToAutomationRuleBooleanConditionSupportedOperatorPtrOutput() AutomationRuleBooleanConditionSupportedOperatorPtrOutput
	ToAutomationRuleBooleanConditionSupportedOperatorPtrOutputWithContext(context.Context) AutomationRuleBooleanConditionSupportedOperatorPtrOutput
}

type automationRuleBooleanConditionSupportedOperatorPtr string

func AutomationRuleBooleanConditionSupportedOperatorPtr(v string) AutomationRuleBooleanConditionSupportedOperatorPtrInput {
	return (*automationRuleBooleanConditionSupportedOperatorPtr)(&v)
}

func (*automationRuleBooleanConditionSupportedOperatorPtr) ElementType() reflect.Type {
	return automationRuleBooleanConditionSupportedOperatorPtrType
}

func (in *automationRuleBooleanConditionSupportedOperatorPtr) ToAutomationRuleBooleanConditionSupportedOperatorPtrOutput() AutomationRuleBooleanConditionSupportedOperatorPtrOutput {
	return pulumi.ToOutput(in).(AutomationRuleBooleanConditionSupportedOperatorPtrOutput)
}

func (in *automationRuleBooleanConditionSupportedOperatorPtr) ToAutomationRuleBooleanConditionSupportedOperatorPtrOutputWithContext(ctx context.Context) AutomationRuleBooleanConditionSupportedOperatorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AutomationRuleBooleanConditionSupportedOperatorPtrOutput)
}

type AutomationRulePropertyArrayChangedConditionSupportedArrayType string

const (
	// Evaluate the condition on the alerts
	AutomationRulePropertyArrayChangedConditionSupportedArrayTypeAlerts = AutomationRulePropertyArrayChangedConditionSupportedArrayType("Alerts")
	// Evaluate the condition on the labels
	AutomationRulePropertyArrayChangedConditionSupportedArrayTypeLabels = AutomationRulePropertyArrayChangedConditionSupportedArrayType("Labels")
	// Evaluate the condition on the tactics
	AutomationRulePropertyArrayChangedConditionSupportedArrayTypeTactics = AutomationRulePropertyArrayChangedConditionSupportedArrayType("Tactics")
	// Evaluate the condition on the comments
	AutomationRulePropertyArrayChangedConditionSupportedArrayTypeComments = AutomationRulePropertyArrayChangedConditionSupportedArrayType("Comments")
)

func (AutomationRulePropertyArrayChangedConditionSupportedArrayType) ElementType() reflect.Type {
	return reflect.TypeOf((*AutomationRulePropertyArrayChangedConditionSupportedArrayType)(nil)).Elem()
}

func (e AutomationRulePropertyArrayChangedConditionSupportedArrayType) ToAutomationRulePropertyArrayChangedConditionSupportedArrayTypeOutput() AutomationRulePropertyArrayChangedConditionSupportedArrayTypeOutput {
	return pulumi.ToOutput(e).(AutomationRulePropertyArrayChangedConditionSupportedArrayTypeOutput)
}

func (e AutomationRulePropertyArrayChangedConditionSupportedArrayType) ToAutomationRulePropertyArrayChangedConditionSupportedArrayTypeOutputWithContext(ctx context.Context) AutomationRulePropertyArrayChangedConditionSupportedArrayTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AutomationRulePropertyArrayChangedConditionSupportedArrayTypeOutput)
}

func (e AutomationRulePropertyArrayChangedConditionSupportedArrayType) ToAutomationRulePropertyArrayChangedConditionSupportedArrayTypePtrOutput() AutomationRulePropertyArrayChangedConditionSupportedArrayTypePtrOutput {
	return e.ToAutomationRulePropertyArrayChangedConditionSupportedArrayTypePtrOutputWithContext(context.Background())
}

func (e AutomationRulePropertyArrayChangedConditionSupportedArrayType) ToAutomationRulePropertyArrayChangedConditionSupportedArrayTypePtrOutputWithContext(ctx context.Context) AutomationRulePropertyArrayChangedConditionSupportedArrayTypePtrOutput {
	return AutomationRulePropertyArrayChangedConditionSupportedArrayType(e).ToAutomationRulePropertyArrayChangedConditionSupportedArrayTypeOutputWithContext(ctx).ToAutomationRulePropertyArrayChangedConditionSupportedArrayTypePtrOutputWithContext(ctx)
}

func (e AutomationRulePropertyArrayChangedConditionSupportedArrayType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AutomationRulePropertyArrayChangedConditionSupportedArrayType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AutomationRulePropertyArrayChangedConditionSupportedArrayType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AutomationRulePropertyArrayChangedConditionSupportedArrayType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AutomationRulePropertyArrayChangedConditionSupportedArrayTypeOutput struct{ *pulumi.OutputState }

func (AutomationRulePropertyArrayChangedConditionSupportedArrayTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutomationRulePropertyArrayChangedConditionSupportedArrayType)(nil)).Elem()
}

func (o AutomationRulePropertyArrayChangedConditionSupportedArrayTypeOutput) ToAutomationRulePropertyArrayChangedConditionSupportedArrayTypeOutput() AutomationRulePropertyArrayChangedConditionSupportedArrayTypeOutput {
	return o
}

func (o AutomationRulePropertyArrayChangedConditionSupportedArrayTypeOutput) ToAutomationRulePropertyArrayChangedConditionSupportedArrayTypeOutputWithContext(ctx context.Context) AutomationRulePropertyArrayChangedConditionSupportedArrayTypeOutput {
	return o
}

func (o AutomationRulePropertyArrayChangedConditionSupportedArrayTypeOutput) ToAutomationRulePropertyArrayChangedConditionSupportedArrayTypePtrOutput() AutomationRulePropertyArrayChangedConditionSupportedArrayTypePtrOutput {
	return o.ToAutomationRulePropertyArrayChangedConditionSupportedArrayTypePtrOutputWithContext(context.Background())
}

func (o AutomationRulePropertyArrayChangedConditionSupportedArrayTypeOutput) ToAutomationRulePropertyArrayChangedConditionSupportedArrayTypePtrOutputWithContext(ctx context.Context) AutomationRulePropertyArrayChangedConditionSupportedArrayTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AutomationRulePropertyArrayChangedConditionSupportedArrayType) *AutomationRulePropertyArrayChangedConditionSupportedArrayType {
		return &v
	}).(AutomationRulePropertyArrayChangedConditionSupportedArrayTypePtrOutput)
}

func (o AutomationRulePropertyArrayChangedConditionSupportedArrayTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AutomationRulePropertyArrayChangedConditionSupportedArrayTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AutomationRulePropertyArrayChangedConditionSupportedArrayType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AutomationRulePropertyArrayChangedConditionSupportedArrayTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AutomationRulePropertyArrayChangedConditionSupportedArrayTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AutomationRulePropertyArrayChangedConditionSupportedArrayType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AutomationRulePropertyArrayChangedConditionSupportedArrayTypePtrOutput struct{ *pulumi.OutputState }

func (AutomationRulePropertyArrayChangedConditionSupportedArrayTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AutomationRulePropertyArrayChangedConditionSupportedArrayType)(nil)).Elem()
}

func (o AutomationRulePropertyArrayChangedConditionSupportedArrayTypePtrOutput) ToAutomationRulePropertyArrayChangedConditionSupportedArrayTypePtrOutput() AutomationRulePropertyArrayChangedConditionSupportedArrayTypePtrOutput {
	return o
}

func (o AutomationRulePropertyArrayChangedConditionSupportedArrayTypePtrOutput) ToAutomationRulePropertyArrayChangedConditionSupportedArrayTypePtrOutputWithContext(ctx context.Context) AutomationRulePropertyArrayChangedConditionSupportedArrayTypePtrOutput {
	return o
}

func (o AutomationRulePropertyArrayChangedConditionSupportedArrayTypePtrOutput) Elem() AutomationRulePropertyArrayChangedConditionSupportedArrayTypeOutput {
	return o.ApplyT(func(v *AutomationRulePropertyArrayChangedConditionSupportedArrayType) AutomationRulePropertyArrayChangedConditionSupportedArrayType {
		if v != nil {
			return *v
		}
		var ret AutomationRulePropertyArrayChangedConditionSupportedArrayType
		return ret
	}).(AutomationRulePropertyArrayChangedConditionSupportedArrayTypeOutput)
}

func (o AutomationRulePropertyArrayChangedConditionSupportedArrayTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AutomationRulePropertyArrayChangedConditionSupportedArrayTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AutomationRulePropertyArrayChangedConditionSupportedArrayType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AutomationRulePropertyArrayChangedConditionSupportedArrayTypeInput is an input type that accepts values of the AutomationRulePropertyArrayChangedConditionSupportedArrayType enum
// A concrete instance of `AutomationRulePropertyArrayChangedConditionSupportedArrayTypeInput` can be one of the following:
//
//	AutomationRulePropertyArrayChangedConditionSupportedArrayTypeAlerts
//	AutomationRulePropertyArrayChangedConditionSupportedArrayTypeLabels
//	AutomationRulePropertyArrayChangedConditionSupportedArrayTypeTactics
//	AutomationRulePropertyArrayChangedConditionSupportedArrayTypeComments
type AutomationRulePropertyArrayChangedConditionSupportedArrayTypeInput interface {
	pulumi.Input

	ToAutomationRulePropertyArrayChangedConditionSupportedArrayTypeOutput() AutomationRulePropertyArrayChangedConditionSupportedArrayTypeOutput
	ToAutomationRulePropertyArrayChangedConditionSupportedArrayTypeOutputWithContext(context.Context) AutomationRulePropertyArrayChangedConditionSupportedArrayTypeOutput
}

var automationRulePropertyArrayChangedConditionSupportedArrayTypePtrType = reflect.TypeOf((**AutomationRulePropertyArrayChangedConditionSupportedArrayType)(nil)).Elem()

type AutomationRulePropertyArrayChangedConditionSupportedArrayTypePtrInput interface {
	pulumi.Input

	ToAutomationRulePropertyArrayChangedConditionSupportedArrayTypePtrOutput() AutomationRulePropertyArrayChangedConditionSupportedArrayTypePtrOutput
	ToAutomationRulePropertyArrayChangedConditionSupportedArrayTypePtrOutputWithContext(context.Context) AutomationRulePropertyArrayChangedConditionSupportedArrayTypePtrOutput
}

type automationRulePropertyArrayChangedConditionSupportedArrayTypePtr string

func AutomationRulePropertyArrayChangedConditionSupportedArrayTypePtr(v string) AutomationRulePropertyArrayChangedConditionSupportedArrayTypePtrInput {
	return (*automationRulePropertyArrayChangedConditionSupportedArrayTypePtr)(&v)
}

func (*automationRulePropertyArrayChangedConditionSupportedArrayTypePtr) ElementType() reflect.Type {
	return automationRulePropertyArrayChangedConditionSupportedArrayTypePtrType
}

func (in *automationRulePropertyArrayChangedConditionSupportedArrayTypePtr) ToAutomationRulePropertyArrayChangedConditionSupportedArrayTypePtrOutput() AutomationRulePropertyArrayChangedConditionSupportedArrayTypePtrOutput {
	return pulumi.ToOutput(in).(AutomationRulePropertyArrayChangedConditionSupportedArrayTypePtrOutput)
}

func (in *automationRulePropertyArrayChangedConditionSupportedArrayTypePtr) ToAutomationRulePropertyArrayChangedConditionSupportedArrayTypePtrOutputWithContext(ctx context.Context) AutomationRulePropertyArrayChangedConditionSupportedArrayTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AutomationRulePropertyArrayChangedConditionSupportedArrayTypePtrOutput)
}

type AutomationRulePropertyArrayChangedConditionSupportedChangeType string

const (
	// Evaluate the condition on items added to the array
	AutomationRulePropertyArrayChangedConditionSupportedChangeTypeAdded = AutomationRulePropertyArrayChangedConditionSupportedChangeType("Added")
)

func (AutomationRulePropertyArrayChangedConditionSupportedChangeType) ElementType() reflect.Type {
	return reflect.TypeOf((*AutomationRulePropertyArrayChangedConditionSupportedChangeType)(nil)).Elem()
}

func (e AutomationRulePropertyArrayChangedConditionSupportedChangeType) ToAutomationRulePropertyArrayChangedConditionSupportedChangeTypeOutput() AutomationRulePropertyArrayChangedConditionSupportedChangeTypeOutput {
	return pulumi.ToOutput(e).(AutomationRulePropertyArrayChangedConditionSupportedChangeTypeOutput)
}

func (e AutomationRulePropertyArrayChangedConditionSupportedChangeType) ToAutomationRulePropertyArrayChangedConditionSupportedChangeTypeOutputWithContext(ctx context.Context) AutomationRulePropertyArrayChangedConditionSupportedChangeTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AutomationRulePropertyArrayChangedConditionSupportedChangeTypeOutput)
}

func (e AutomationRulePropertyArrayChangedConditionSupportedChangeType) ToAutomationRulePropertyArrayChangedConditionSupportedChangeTypePtrOutput() AutomationRulePropertyArrayChangedConditionSupportedChangeTypePtrOutput {
	return e.ToAutomationRulePropertyArrayChangedConditionSupportedChangeTypePtrOutputWithContext(context.Background())
}

func (e AutomationRulePropertyArrayChangedConditionSupportedChangeType) ToAutomationRulePropertyArrayChangedConditionSupportedChangeTypePtrOutputWithContext(ctx context.Context) AutomationRulePropertyArrayChangedConditionSupportedChangeTypePtrOutput {
	return AutomationRulePropertyArrayChangedConditionSupportedChangeType(e).ToAutomationRulePropertyArrayChangedConditionSupportedChangeTypeOutputWithContext(ctx).ToAutomationRulePropertyArrayChangedConditionSupportedChangeTypePtrOutputWithContext(ctx)
}

func (e AutomationRulePropertyArrayChangedConditionSupportedChangeType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AutomationRulePropertyArrayChangedConditionSupportedChangeType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AutomationRulePropertyArrayChangedConditionSupportedChangeType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AutomationRulePropertyArrayChangedConditionSupportedChangeType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AutomationRulePropertyArrayChangedConditionSupportedChangeTypeOutput struct{ *pulumi.OutputState }

func (AutomationRulePropertyArrayChangedConditionSupportedChangeTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutomationRulePropertyArrayChangedConditionSupportedChangeType)(nil)).Elem()
}

func (o AutomationRulePropertyArrayChangedConditionSupportedChangeTypeOutput) ToAutomationRulePropertyArrayChangedConditionSupportedChangeTypeOutput() AutomationRulePropertyArrayChangedConditionSupportedChangeTypeOutput {
	return o
}

func (o AutomationRulePropertyArrayChangedConditionSupportedChangeTypeOutput) ToAutomationRulePropertyArrayChangedConditionSupportedChangeTypeOutputWithContext(ctx context.Context) AutomationRulePropertyArrayChangedConditionSupportedChangeTypeOutput {
	return o
}

func (o AutomationRulePropertyArrayChangedConditionSupportedChangeTypeOutput) ToAutomationRulePropertyArrayChangedConditionSupportedChangeTypePtrOutput() AutomationRulePropertyArrayChangedConditionSupportedChangeTypePtrOutput {
	return o.ToAutomationRulePropertyArrayChangedConditionSupportedChangeTypePtrOutputWithContext(context.Background())
}

func (o AutomationRulePropertyArrayChangedConditionSupportedChangeTypeOutput) ToAutomationRulePropertyArrayChangedConditionSupportedChangeTypePtrOutputWithContext(ctx context.Context) AutomationRulePropertyArrayChangedConditionSupportedChangeTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AutomationRulePropertyArrayChangedConditionSupportedChangeType) *AutomationRulePropertyArrayChangedConditionSupportedChangeType {
		return &v
	}).(AutomationRulePropertyArrayChangedConditionSupportedChangeTypePtrOutput)
}

func (o AutomationRulePropertyArrayChangedConditionSupportedChangeTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AutomationRulePropertyArrayChangedConditionSupportedChangeTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AutomationRulePropertyArrayChangedConditionSupportedChangeType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AutomationRulePropertyArrayChangedConditionSupportedChangeTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AutomationRulePropertyArrayChangedConditionSupportedChangeTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AutomationRulePropertyArrayChangedConditionSupportedChangeType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AutomationRulePropertyArrayChangedConditionSupportedChangeTypePtrOutput struct{ *pulumi.OutputState }

func (AutomationRulePropertyArrayChangedConditionSupportedChangeTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AutomationRulePropertyArrayChangedConditionSupportedChangeType)(nil)).Elem()
}

func (o AutomationRulePropertyArrayChangedConditionSupportedChangeTypePtrOutput) ToAutomationRulePropertyArrayChangedConditionSupportedChangeTypePtrOutput() AutomationRulePropertyArrayChangedConditionSupportedChangeTypePtrOutput {
	return o
}

func (o AutomationRulePropertyArrayChangedConditionSupportedChangeTypePtrOutput) ToAutomationRulePropertyArrayChangedConditionSupportedChangeTypePtrOutputWithContext(ctx context.Context) AutomationRulePropertyArrayChangedConditionSupportedChangeTypePtrOutput {
	return o
}

func (o AutomationRulePropertyArrayChangedConditionSupportedChangeTypePtrOutput) Elem() AutomationRulePropertyArrayChangedConditionSupportedChangeTypeOutput {
	return o.ApplyT(func(v *AutomationRulePropertyArrayChangedConditionSupportedChangeType) AutomationRulePropertyArrayChangedConditionSupportedChangeType {
		if v != nil {
			return *v
		}
		var ret AutomationRulePropertyArrayChangedConditionSupportedChangeType
		return ret
	}).(AutomationRulePropertyArrayChangedConditionSupportedChangeTypeOutput)
}

func (o AutomationRulePropertyArrayChangedConditionSupportedChangeTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AutomationRulePropertyArrayChangedConditionSupportedChangeTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AutomationRulePropertyArrayChangedConditionSupportedChangeType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AutomationRulePropertyArrayChangedConditionSupportedChangeTypeInput is an input type that accepts values of the AutomationRulePropertyArrayChangedConditionSupportedChangeType enum
// A concrete instance of `AutomationRulePropertyArrayChangedConditionSupportedChangeTypeInput` can be one of the following:
//
//	AutomationRulePropertyArrayChangedConditionSupportedChangeTypeAdded
type AutomationRulePropertyArrayChangedConditionSupportedChangeTypeInput interface {
	pulumi.Input

	ToAutomationRulePropertyArrayChangedConditionSupportedChangeTypeOutput() AutomationRulePropertyArrayChangedConditionSupportedChangeTypeOutput
	ToAutomationRulePropertyArrayChangedConditionSupportedChangeTypeOutputWithContext(context.Context) AutomationRulePropertyArrayChangedConditionSupportedChangeTypeOutput
}

var automationRulePropertyArrayChangedConditionSupportedChangeTypePtrType = reflect.TypeOf((**AutomationRulePropertyArrayChangedConditionSupportedChangeType)(nil)).Elem()

type AutomationRulePropertyArrayChangedConditionSupportedChangeTypePtrInput interface {
	pulumi.Input

	ToAutomationRulePropertyArrayChangedConditionSupportedChangeTypePtrOutput() AutomationRulePropertyArrayChangedConditionSupportedChangeTypePtrOutput
	ToAutomationRulePropertyArrayChangedConditionSupportedChangeTypePtrOutputWithContext(context.Context) AutomationRulePropertyArrayChangedConditionSupportedChangeTypePtrOutput
}

type automationRulePropertyArrayChangedConditionSupportedChangeTypePtr string

func AutomationRulePropertyArrayChangedConditionSupportedChangeTypePtr(v string) AutomationRulePropertyArrayChangedConditionSupportedChangeTypePtrInput {
	return (*automationRulePropertyArrayChangedConditionSupportedChangeTypePtr)(&v)
}

func (*automationRulePropertyArrayChangedConditionSupportedChangeTypePtr) ElementType() reflect.Type {
	return automationRulePropertyArrayChangedConditionSupportedChangeTypePtrType
}

func (in *automationRulePropertyArrayChangedConditionSupportedChangeTypePtr) ToAutomationRulePropertyArrayChangedConditionSupportedChangeTypePtrOutput() AutomationRulePropertyArrayChangedConditionSupportedChangeTypePtrOutput {
	return pulumi.ToOutput(in).(AutomationRulePropertyArrayChangedConditionSupportedChangeTypePtrOutput)
}

func (in *automationRulePropertyArrayChangedConditionSupportedChangeTypePtr) ToAutomationRulePropertyArrayChangedConditionSupportedChangeTypePtrOutputWithContext(ctx context.Context) AutomationRulePropertyArrayChangedConditionSupportedChangeTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AutomationRulePropertyArrayChangedConditionSupportedChangeTypePtrOutput)
}

// Describes an array condition evaluation type.
type AutomationRulePropertyArrayConditionSupportedArrayConditionType string

const (
	// Evaluate the condition as true if any item fulfills it
	AutomationRulePropertyArrayConditionSupportedArrayConditionTypeAnyItem = AutomationRulePropertyArrayConditionSupportedArrayConditionType("AnyItem")
)

func (AutomationRulePropertyArrayConditionSupportedArrayConditionType) ElementType() reflect.Type {
	return reflect.TypeOf((*AutomationRulePropertyArrayConditionSupportedArrayConditionType)(nil)).Elem()
}

func (e AutomationRulePropertyArrayConditionSupportedArrayConditionType) ToAutomationRulePropertyArrayConditionSupportedArrayConditionTypeOutput() AutomationRulePropertyArrayConditionSupportedArrayConditionTypeOutput {
	return pulumi.ToOutput(e).(AutomationRulePropertyArrayConditionSupportedArrayConditionTypeOutput)
}

func (e AutomationRulePropertyArrayConditionSupportedArrayConditionType) ToAutomationRulePropertyArrayConditionSupportedArrayConditionTypeOutputWithContext(ctx context.Context) AutomationRulePropertyArrayConditionSupportedArrayConditionTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AutomationRulePropertyArrayConditionSupportedArrayConditionTypeOutput)
}

func (e AutomationRulePropertyArrayConditionSupportedArrayConditionType) ToAutomationRulePropertyArrayConditionSupportedArrayConditionTypePtrOutput() AutomationRulePropertyArrayConditionSupportedArrayConditionTypePtrOutput {
	return e.ToAutomationRulePropertyArrayConditionSupportedArrayConditionTypePtrOutputWithContext(context.Background())
}

func (e AutomationRulePropertyArrayConditionSupportedArrayConditionType) ToAutomationRulePropertyArrayConditionSupportedArrayConditionTypePtrOutputWithContext(ctx context.Context) AutomationRulePropertyArrayConditionSupportedArrayConditionTypePtrOutput {
	return AutomationRulePropertyArrayConditionSupportedArrayConditionType(e).ToAutomationRulePropertyArrayConditionSupportedArrayConditionTypeOutputWithContext(ctx).ToAutomationRulePropertyArrayConditionSupportedArrayConditionTypePtrOutputWithContext(ctx)
}

func (e AutomationRulePropertyArrayConditionSupportedArrayConditionType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AutomationRulePropertyArrayConditionSupportedArrayConditionType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AutomationRulePropertyArrayConditionSupportedArrayConditionType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AutomationRulePropertyArrayConditionSupportedArrayConditionType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AutomationRulePropertyArrayConditionSupportedArrayConditionTypeOutput struct{ *pulumi.OutputState }

func (AutomationRulePropertyArrayConditionSupportedArrayConditionTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutomationRulePropertyArrayConditionSupportedArrayConditionType)(nil)).Elem()
}

func (o AutomationRulePropertyArrayConditionSupportedArrayConditionTypeOutput) ToAutomationRulePropertyArrayConditionSupportedArrayConditionTypeOutput() AutomationRulePropertyArrayConditionSupportedArrayConditionTypeOutput {
	return o
}

func (o AutomationRulePropertyArrayConditionSupportedArrayConditionTypeOutput) ToAutomationRulePropertyArrayConditionSupportedArrayConditionTypeOutputWithContext(ctx context.Context) AutomationRulePropertyArrayConditionSupportedArrayConditionTypeOutput {
	return o
}

func (o AutomationRulePropertyArrayConditionSupportedArrayConditionTypeOutput) ToAutomationRulePropertyArrayConditionSupportedArrayConditionTypePtrOutput() AutomationRulePropertyArrayConditionSupportedArrayConditionTypePtrOutput {
	return o.ToAutomationRulePropertyArrayConditionSupportedArrayConditionTypePtrOutputWithContext(context.Background())
}

func (o AutomationRulePropertyArrayConditionSupportedArrayConditionTypeOutput) ToAutomationRulePropertyArrayConditionSupportedArrayConditionTypePtrOutputWithContext(ctx context.Context) AutomationRulePropertyArrayConditionSupportedArrayConditionTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AutomationRulePropertyArrayConditionSupportedArrayConditionType) *AutomationRulePropertyArrayConditionSupportedArrayConditionType {
		return &v
	}).(AutomationRulePropertyArrayConditionSupportedArrayConditionTypePtrOutput)
}

func (o AutomationRulePropertyArrayConditionSupportedArrayConditionTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AutomationRulePropertyArrayConditionSupportedArrayConditionTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AutomationRulePropertyArrayConditionSupportedArrayConditionType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AutomationRulePropertyArrayConditionSupportedArrayConditionTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AutomationRulePropertyArrayConditionSupportedArrayConditionTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AutomationRulePropertyArrayConditionSupportedArrayConditionType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AutomationRulePropertyArrayConditionSupportedArrayConditionTypePtrOutput struct{ *pulumi.OutputState }

func (AutomationRulePropertyArrayConditionSupportedArrayConditionTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AutomationRulePropertyArrayConditionSupportedArrayConditionType)(nil)).Elem()
}

func (o AutomationRulePropertyArrayConditionSupportedArrayConditionTypePtrOutput) ToAutomationRulePropertyArrayConditionSupportedArrayConditionTypePtrOutput() AutomationRulePropertyArrayConditionSupportedArrayConditionTypePtrOutput {
	return o
}

func (o AutomationRulePropertyArrayConditionSupportedArrayConditionTypePtrOutput) ToAutomationRulePropertyArrayConditionSupportedArrayConditionTypePtrOutputWithContext(ctx context.Context) AutomationRulePropertyArrayConditionSupportedArrayConditionTypePtrOutput {
	return o
}

func (o AutomationRulePropertyArrayConditionSupportedArrayConditionTypePtrOutput) Elem() AutomationRulePropertyArrayConditionSupportedArrayConditionTypeOutput {
	return o.ApplyT(func(v *AutomationRulePropertyArrayConditionSupportedArrayConditionType) AutomationRulePropertyArrayConditionSupportedArrayConditionType {
		if v != nil {
			return *v
		}
		var ret AutomationRulePropertyArrayConditionSupportedArrayConditionType
		return ret
	}).(AutomationRulePropertyArrayConditionSupportedArrayConditionTypeOutput)
}

func (o AutomationRulePropertyArrayConditionSupportedArrayConditionTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AutomationRulePropertyArrayConditionSupportedArrayConditionTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AutomationRulePropertyArrayConditionSupportedArrayConditionType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AutomationRulePropertyArrayConditionSupportedArrayConditionTypeInput is an input type that accepts values of the AutomationRulePropertyArrayConditionSupportedArrayConditionType enum
// A concrete instance of `AutomationRulePropertyArrayConditionSupportedArrayConditionTypeInput` can be one of the following:
//
//	AutomationRulePropertyArrayConditionSupportedArrayConditionTypeAnyItem
type AutomationRulePropertyArrayConditionSupportedArrayConditionTypeInput interface {
	pulumi.Input

	ToAutomationRulePropertyArrayConditionSupportedArrayConditionTypeOutput() AutomationRulePropertyArrayConditionSupportedArrayConditionTypeOutput
	ToAutomationRulePropertyArrayConditionSupportedArrayConditionTypeOutputWithContext(context.Context) AutomationRulePropertyArrayConditionSupportedArrayConditionTypeOutput
}

var automationRulePropertyArrayConditionSupportedArrayConditionTypePtrType = reflect.TypeOf((**AutomationRulePropertyArrayConditionSupportedArrayConditionType)(nil)).Elem()

type AutomationRulePropertyArrayConditionSupportedArrayConditionTypePtrInput interface {
	pulumi.Input

	ToAutomationRulePropertyArrayConditionSupportedArrayConditionTypePtrOutput() AutomationRulePropertyArrayConditionSupportedArrayConditionTypePtrOutput
	ToAutomationRulePropertyArrayConditionSupportedArrayConditionTypePtrOutputWithContext(context.Context) AutomationRulePropertyArrayConditionSupportedArrayConditionTypePtrOutput
}

type automationRulePropertyArrayConditionSupportedArrayConditionTypePtr string

func AutomationRulePropertyArrayConditionSupportedArrayConditionTypePtr(v string) AutomationRulePropertyArrayConditionSupportedArrayConditionTypePtrInput {
	return (*automationRulePropertyArrayConditionSupportedArrayConditionTypePtr)(&v)
}

func (*automationRulePropertyArrayConditionSupportedArrayConditionTypePtr) ElementType() reflect.Type {
	return automationRulePropertyArrayConditionSupportedArrayConditionTypePtrType
}

func (in *automationRulePropertyArrayConditionSupportedArrayConditionTypePtr) ToAutomationRulePropertyArrayConditionSupportedArrayConditionTypePtrOutput() AutomationRulePropertyArrayConditionSupportedArrayConditionTypePtrOutput {
	return pulumi.ToOutput(in).(AutomationRulePropertyArrayConditionSupportedArrayConditionTypePtrOutput)
}

func (in *automationRulePropertyArrayConditionSupportedArrayConditionTypePtr) ToAutomationRulePropertyArrayConditionSupportedArrayConditionTypePtrOutputWithContext(ctx context.Context) AutomationRulePropertyArrayConditionSupportedArrayConditionTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AutomationRulePropertyArrayConditionSupportedArrayConditionTypePtrOutput)
}

// Describes an array condition evaluated array type.
type AutomationRulePropertyArrayConditionSupportedArrayType string

const (
	// Evaluate the condition on the custom detail keys
	AutomationRulePropertyArrayConditionSupportedArrayTypeCustomDetails = AutomationRulePropertyArrayConditionSupportedArrayType("CustomDetails")
	// Evaluate the condition on a custom detail's values
	AutomationRulePropertyArrayConditionSupportedArrayTypeCustomDetailValues = AutomationRulePropertyArrayConditionSupportedArrayType("CustomDetailValues")
)

func (AutomationRulePropertyArrayConditionSupportedArrayType) ElementType() reflect.Type {
	return reflect.TypeOf((*AutomationRulePropertyArrayConditionSupportedArrayType)(nil)).Elem()
}

func (e AutomationRulePropertyArrayConditionSupportedArrayType) ToAutomationRulePropertyArrayConditionSupportedArrayTypeOutput() AutomationRulePropertyArrayConditionSupportedArrayTypeOutput {
	return pulumi.ToOutput(e).(AutomationRulePropertyArrayConditionSupportedArrayTypeOutput)
}

func (e AutomationRulePropertyArrayConditionSupportedArrayType) ToAutomationRulePropertyArrayConditionSupportedArrayTypeOutputWithContext(ctx context.Context) AutomationRulePropertyArrayConditionSupportedArrayTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AutomationRulePropertyArrayConditionSupportedArrayTypeOutput)
}

func (e AutomationRulePropertyArrayConditionSupportedArrayType) ToAutomationRulePropertyArrayConditionSupportedArrayTypePtrOutput() AutomationRulePropertyArrayConditionSupportedArrayTypePtrOutput {
	return e.ToAutomationRulePropertyArrayConditionSupportedArrayTypePtrOutputWithContext(context.Background())
}

func (e AutomationRulePropertyArrayConditionSupportedArrayType) ToAutomationRulePropertyArrayConditionSupportedArrayTypePtrOutputWithContext(ctx context.Context) AutomationRulePropertyArrayConditionSupportedArrayTypePtrOutput {
	return AutomationRulePropertyArrayConditionSupportedArrayType(e).ToAutomationRulePropertyArrayConditionSupportedArrayTypeOutputWithContext(ctx).ToAutomationRulePropertyArrayConditionSupportedArrayTypePtrOutputWithContext(ctx)
}

func (e AutomationRulePropertyArrayConditionSupportedArrayType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AutomationRulePropertyArrayConditionSupportedArrayType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AutomationRulePropertyArrayConditionSupportedArrayType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AutomationRulePropertyArrayConditionSupportedArrayType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AutomationRulePropertyArrayConditionSupportedArrayTypeOutput struct{ *pulumi.OutputState }

func (AutomationRulePropertyArrayConditionSupportedArrayTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutomationRulePropertyArrayConditionSupportedArrayType)(nil)).Elem()
}

func (o AutomationRulePropertyArrayConditionSupportedArrayTypeOutput) ToAutomationRulePropertyArrayConditionSupportedArrayTypeOutput() AutomationRulePropertyArrayConditionSupportedArrayTypeOutput {
	return o
}

func (o AutomationRulePropertyArrayConditionSupportedArrayTypeOutput) ToAutomationRulePropertyArrayConditionSupportedArrayTypeOutputWithContext(ctx context.Context) AutomationRulePropertyArrayConditionSupportedArrayTypeOutput {
	return o
}

func (o AutomationRulePropertyArrayConditionSupportedArrayTypeOutput) ToAutomationRulePropertyArrayConditionSupportedArrayTypePtrOutput() AutomationRulePropertyArrayConditionSupportedArrayTypePtrOutput {
	return o.ToAutomationRulePropertyArrayConditionSupportedArrayTypePtrOutputWithContext(context.Background())
}

func (o AutomationRulePropertyArrayConditionSupportedArrayTypeOutput) ToAutomationRulePropertyArrayConditionSupportedArrayTypePtrOutputWithContext(ctx context.Context) AutomationRulePropertyArrayConditionSupportedArrayTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AutomationRulePropertyArrayConditionSupportedArrayType) *AutomationRulePropertyArrayConditionSupportedArrayType {
		return &v
	}).(AutomationRulePropertyArrayConditionSupportedArrayTypePtrOutput)
}

func (o AutomationRulePropertyArrayConditionSupportedArrayTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AutomationRulePropertyArrayConditionSupportedArrayTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AutomationRulePropertyArrayConditionSupportedArrayType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AutomationRulePropertyArrayConditionSupportedArrayTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AutomationRulePropertyArrayConditionSupportedArrayTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AutomationRulePropertyArrayConditionSupportedArrayType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AutomationRulePropertyArrayConditionSupportedArrayTypePtrOutput struct{ *pulumi.OutputState }

func (AutomationRulePropertyArrayConditionSupportedArrayTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AutomationRulePropertyArrayConditionSupportedArrayType)(nil)).Elem()
}

func (o AutomationRulePropertyArrayConditionSupportedArrayTypePtrOutput) ToAutomationRulePropertyArrayConditionSupportedArrayTypePtrOutput() AutomationRulePropertyArrayConditionSupportedArrayTypePtrOutput {
	return o
}

func (o AutomationRulePropertyArrayConditionSupportedArrayTypePtrOutput) ToAutomationRulePropertyArrayConditionSupportedArrayTypePtrOutputWithContext(ctx context.Context) AutomationRulePropertyArrayConditionSupportedArrayTypePtrOutput {
	return o
}

func (o AutomationRulePropertyArrayConditionSupportedArrayTypePtrOutput) Elem() AutomationRulePropertyArrayConditionSupportedArrayTypeOutput {
	return o.ApplyT(func(v *AutomationRulePropertyArrayConditionSupportedArrayType) AutomationRulePropertyArrayConditionSupportedArrayType {
		if v != nil {
			return *v
		}
		var ret AutomationRulePropertyArrayConditionSupportedArrayType
		return ret
	}).(AutomationRulePropertyArrayConditionSupportedArrayTypeOutput)
}

func (o AutomationRulePropertyArrayConditionSupportedArrayTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AutomationRulePropertyArrayConditionSupportedArrayTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AutomationRulePropertyArrayConditionSupportedArrayType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AutomationRulePropertyArrayConditionSupportedArrayTypeInput is an input type that accepts values of the AutomationRulePropertyArrayConditionSupportedArrayType enum
// A concrete instance of `AutomationRulePropertyArrayConditionSupportedArrayTypeInput` can be one of the following:
//
//	AutomationRulePropertyArrayConditionSupportedArrayTypeCustomDetails
//	AutomationRulePropertyArrayConditionSupportedArrayTypeCustomDetailValues
type AutomationRulePropertyArrayConditionSupportedArrayTypeInput interface {
	pulumi.Input

	ToAutomationRulePropertyArrayConditionSupportedArrayTypeOutput() AutomationRulePropertyArrayConditionSupportedArrayTypeOutput
	ToAutomationRulePropertyArrayConditionSupportedArrayTypeOutputWithContext(context.Context) AutomationRulePropertyArrayConditionSupportedArrayTypeOutput
}

var automationRulePropertyArrayConditionSupportedArrayTypePtrType = reflect.TypeOf((**AutomationRulePropertyArrayConditionSupportedArrayType)(nil)).Elem()

type AutomationRulePropertyArrayConditionSupportedArrayTypePtrInput interface {
	pulumi.Input

	ToAutomationRulePropertyArrayConditionSupportedArrayTypePtrOutput() AutomationRulePropertyArrayConditionSupportedArrayTypePtrOutput
	ToAutomationRulePropertyArrayConditionSupportedArrayTypePtrOutputWithContext(context.Context) AutomationRulePropertyArrayConditionSupportedArrayTypePtrOutput
}

type automationRulePropertyArrayConditionSupportedArrayTypePtr string

func AutomationRulePropertyArrayConditionSupportedArrayTypePtr(v string) AutomationRulePropertyArrayConditionSupportedArrayTypePtrInput {
	return (*automationRulePropertyArrayConditionSupportedArrayTypePtr)(&v)
}

func (*automationRulePropertyArrayConditionSupportedArrayTypePtr) ElementType() reflect.Type {
	return automationRulePropertyArrayConditionSupportedArrayTypePtrType
}

func (in *automationRulePropertyArrayConditionSupportedArrayTypePtr) ToAutomationRulePropertyArrayConditionSupportedArrayTypePtrOutput() AutomationRulePropertyArrayConditionSupportedArrayTypePtrOutput {
	return pulumi.ToOutput(in).(AutomationRulePropertyArrayConditionSupportedArrayTypePtrOutput)
}

func (in *automationRulePropertyArrayConditionSupportedArrayTypePtr) ToAutomationRulePropertyArrayConditionSupportedArrayTypePtrOutputWithContext(ctx context.Context) AutomationRulePropertyArrayConditionSupportedArrayTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AutomationRulePropertyArrayConditionSupportedArrayTypePtrOutput)
}

type AutomationRulePropertyChangedConditionSupportedChangedType string

const (
	// Evaluate the condition on the previous value of the property
	AutomationRulePropertyChangedConditionSupportedChangedTypeChangedFrom = AutomationRulePropertyChangedConditionSupportedChangedType("ChangedFrom")
	// Evaluate the condition on the updated value of the property
	AutomationRulePropertyChangedConditionSupportedChangedTypeChangedTo = AutomationRulePropertyChangedConditionSupportedChangedType("ChangedTo")
)

func (AutomationRulePropertyChangedConditionSupportedChangedType) ElementType() reflect.Type {
	return reflect.TypeOf((*AutomationRulePropertyChangedConditionSupportedChangedType)(nil)).Elem()
}

func (e AutomationRulePropertyChangedConditionSupportedChangedType) ToAutomationRulePropertyChangedConditionSupportedChangedTypeOutput() AutomationRulePropertyChangedConditionSupportedChangedTypeOutput {
	return pulumi.ToOutput(e).(AutomationRulePropertyChangedConditionSupportedChangedTypeOutput)
}

func (e AutomationRulePropertyChangedConditionSupportedChangedType) ToAutomationRulePropertyChangedConditionSupportedChangedTypeOutputWithContext(ctx context.Context) AutomationRulePropertyChangedConditionSupportedChangedTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AutomationRulePropertyChangedConditionSupportedChangedTypeOutput)
}

func (e AutomationRulePropertyChangedConditionSupportedChangedType) ToAutomationRulePropertyChangedConditionSupportedChangedTypePtrOutput() AutomationRulePropertyChangedConditionSupportedChangedTypePtrOutput {
	return e.ToAutomationRulePropertyChangedConditionSupportedChangedTypePtrOutputWithContext(context.Background())
}

func (e AutomationRulePropertyChangedConditionSupportedChangedType) ToAutomationRulePropertyChangedConditionSupportedChangedTypePtrOutputWithContext(ctx context.Context) AutomationRulePropertyChangedConditionSupportedChangedTypePtrOutput {
	return AutomationRulePropertyChangedConditionSupportedChangedType(e).ToAutomationRulePropertyChangedConditionSupportedChangedTypeOutputWithContext(ctx).ToAutomationRulePropertyChangedConditionSupportedChangedTypePtrOutputWithContext(ctx)
}

func (e AutomationRulePropertyChangedConditionSupportedChangedType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AutomationRulePropertyChangedConditionSupportedChangedType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AutomationRulePropertyChangedConditionSupportedChangedType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AutomationRulePropertyChangedConditionSupportedChangedType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AutomationRulePropertyChangedConditionSupportedChangedTypeOutput struct{ *pulumi.OutputState }

func (AutomationRulePropertyChangedConditionSupportedChangedTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutomationRulePropertyChangedConditionSupportedChangedType)(nil)).Elem()
}

func (o AutomationRulePropertyChangedConditionSupportedChangedTypeOutput) ToAutomationRulePropertyChangedConditionSupportedChangedTypeOutput() AutomationRulePropertyChangedConditionSupportedChangedTypeOutput {
	return o
}

func (o AutomationRulePropertyChangedConditionSupportedChangedTypeOutput) ToAutomationRulePropertyChangedConditionSupportedChangedTypeOutputWithContext(ctx context.Context) AutomationRulePropertyChangedConditionSupportedChangedTypeOutput {
	return o
}

func (o AutomationRulePropertyChangedConditionSupportedChangedTypeOutput) ToAutomationRulePropertyChangedConditionSupportedChangedTypePtrOutput() AutomationRulePropertyChangedConditionSupportedChangedTypePtrOutput {
	return o.ToAutomationRulePropertyChangedConditionSupportedChangedTypePtrOutputWithContext(context.Background())
}

func (o AutomationRulePropertyChangedConditionSupportedChangedTypeOutput) ToAutomationRulePropertyChangedConditionSupportedChangedTypePtrOutputWithContext(ctx context.Context) AutomationRulePropertyChangedConditionSupportedChangedTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AutomationRulePropertyChangedConditionSupportedChangedType) *AutomationRulePropertyChangedConditionSupportedChangedType {
		return &v
	}).(AutomationRulePropertyChangedConditionSupportedChangedTypePtrOutput)
}

func (o AutomationRulePropertyChangedConditionSupportedChangedTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AutomationRulePropertyChangedConditionSupportedChangedTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AutomationRulePropertyChangedConditionSupportedChangedType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AutomationRulePropertyChangedConditionSupportedChangedTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AutomationRulePropertyChangedConditionSupportedChangedTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AutomationRulePropertyChangedConditionSupportedChangedType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AutomationRulePropertyChangedConditionSupportedChangedTypePtrOutput struct{ *pulumi.OutputState }

func (AutomationRulePropertyChangedConditionSupportedChangedTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AutomationRulePropertyChangedConditionSupportedChangedType)(nil)).Elem()
}

func (o AutomationRulePropertyChangedConditionSupportedChangedTypePtrOutput) ToAutomationRulePropertyChangedConditionSupportedChangedTypePtrOutput() AutomationRulePropertyChangedConditionSupportedChangedTypePtrOutput {
	return o
}

func (o AutomationRulePropertyChangedConditionSupportedChangedTypePtrOutput) ToAutomationRulePropertyChangedConditionSupportedChangedTypePtrOutputWithContext(ctx context.Context) AutomationRulePropertyChangedConditionSupportedChangedTypePtrOutput {
	return o
}

func (o AutomationRulePropertyChangedConditionSupportedChangedTypePtrOutput) Elem() AutomationRulePropertyChangedConditionSupportedChangedTypeOutput {
	return o.ApplyT(func(v *AutomationRulePropertyChangedConditionSupportedChangedType) AutomationRulePropertyChangedConditionSupportedChangedType {
		if v != nil {
			return *v
		}
		var ret AutomationRulePropertyChangedConditionSupportedChangedType
		return ret
	}).(AutomationRulePropertyChangedConditionSupportedChangedTypeOutput)
}

func (o AutomationRulePropertyChangedConditionSupportedChangedTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AutomationRulePropertyChangedConditionSupportedChangedTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AutomationRulePropertyChangedConditionSupportedChangedType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AutomationRulePropertyChangedConditionSupportedChangedTypeInput is an input type that accepts values of the AutomationRulePropertyChangedConditionSupportedChangedType enum
// A concrete instance of `AutomationRulePropertyChangedConditionSupportedChangedTypeInput` can be one of the following:
//
//	AutomationRulePropertyChangedConditionSupportedChangedTypeChangedFrom
//	AutomationRulePropertyChangedConditionSupportedChangedTypeChangedTo
type AutomationRulePropertyChangedConditionSupportedChangedTypeInput interface {
	pulumi.Input

	ToAutomationRulePropertyChangedConditionSupportedChangedTypeOutput() AutomationRulePropertyChangedConditionSupportedChangedTypeOutput
	ToAutomationRulePropertyChangedConditionSupportedChangedTypeOutputWithContext(context.Context) AutomationRulePropertyChangedConditionSupportedChangedTypeOutput
}

var automationRulePropertyChangedConditionSupportedChangedTypePtrType = reflect.TypeOf((**AutomationRulePropertyChangedConditionSupportedChangedType)(nil)).Elem()

type AutomationRulePropertyChangedConditionSupportedChangedTypePtrInput interface {
	pulumi.Input

	ToAutomationRulePropertyChangedConditionSupportedChangedTypePtrOutput() AutomationRulePropertyChangedConditionSupportedChangedTypePtrOutput
	ToAutomationRulePropertyChangedConditionSupportedChangedTypePtrOutputWithContext(context.Context) AutomationRulePropertyChangedConditionSupportedChangedTypePtrOutput
}

type automationRulePropertyChangedConditionSupportedChangedTypePtr string

func AutomationRulePropertyChangedConditionSupportedChangedTypePtr(v string) AutomationRulePropertyChangedConditionSupportedChangedTypePtrInput {
	return (*automationRulePropertyChangedConditionSupportedChangedTypePtr)(&v)
}

func (*automationRulePropertyChangedConditionSupportedChangedTypePtr) ElementType() reflect.Type {
	return automationRulePropertyChangedConditionSupportedChangedTypePtrType
}

func (in *automationRulePropertyChangedConditionSupportedChangedTypePtr) ToAutomationRulePropertyChangedConditionSupportedChangedTypePtrOutput() AutomationRulePropertyChangedConditionSupportedChangedTypePtrOutput {
	return pulumi.ToOutput(in).(AutomationRulePropertyChangedConditionSupportedChangedTypePtrOutput)
}

func (in *automationRulePropertyChangedConditionSupportedChangedTypePtr) ToAutomationRulePropertyChangedConditionSupportedChangedTypePtrOutputWithContext(ctx context.Context) AutomationRulePropertyChangedConditionSupportedChangedTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AutomationRulePropertyChangedConditionSupportedChangedTypePtrOutput)
}

type AutomationRulePropertyChangedConditionSupportedPropertyType string

const (
	// Evaluate the condition on the incident severity
	AutomationRulePropertyChangedConditionSupportedPropertyTypeIncidentSeverity = AutomationRulePropertyChangedConditionSupportedPropertyType("IncidentSeverity")
	// Evaluate the condition on the incident status
	AutomationRulePropertyChangedConditionSupportedPropertyTypeIncidentStatus = AutomationRulePropertyChangedConditionSupportedPropertyType("IncidentStatus")
	// Evaluate the condition on the incident owner
	AutomationRulePropertyChangedConditionSupportedPropertyTypeIncidentOwner = AutomationRulePropertyChangedConditionSupportedPropertyType("IncidentOwner")
)

func (AutomationRulePropertyChangedConditionSupportedPropertyType) ElementType() reflect.Type {
	return reflect.TypeOf((*AutomationRulePropertyChangedConditionSupportedPropertyType)(nil)).Elem()
}

func (e AutomationRulePropertyChangedConditionSupportedPropertyType) ToAutomationRulePropertyChangedConditionSupportedPropertyTypeOutput() AutomationRulePropertyChangedConditionSupportedPropertyTypeOutput {
	return pulumi.ToOutput(e).(AutomationRulePropertyChangedConditionSupportedPropertyTypeOutput)
}

func (e AutomationRulePropertyChangedConditionSupportedPropertyType) ToAutomationRulePropertyChangedConditionSupportedPropertyTypeOutputWithContext(ctx context.Context) AutomationRulePropertyChangedConditionSupportedPropertyTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AutomationRulePropertyChangedConditionSupportedPropertyTypeOutput)
}

func (e AutomationRulePropertyChangedConditionSupportedPropertyType) ToAutomationRulePropertyChangedConditionSupportedPropertyTypePtrOutput() AutomationRulePropertyChangedConditionSupportedPropertyTypePtrOutput {
	return e.ToAutomationRulePropertyChangedConditionSupportedPropertyTypePtrOutputWithContext(context.Background())
}

func (e AutomationRulePropertyChangedConditionSupportedPropertyType) ToAutomationRulePropertyChangedConditionSupportedPropertyTypePtrOutputWithContext(ctx context.Context) AutomationRulePropertyChangedConditionSupportedPropertyTypePtrOutput {
	return AutomationRulePropertyChangedConditionSupportedPropertyType(e).ToAutomationRulePropertyChangedConditionSupportedPropertyTypeOutputWithContext(ctx).ToAutomationRulePropertyChangedConditionSupportedPropertyTypePtrOutputWithContext(ctx)
}

func (e AutomationRulePropertyChangedConditionSupportedPropertyType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AutomationRulePropertyChangedConditionSupportedPropertyType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AutomationRulePropertyChangedConditionSupportedPropertyType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AutomationRulePropertyChangedConditionSupportedPropertyType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AutomationRulePropertyChangedConditionSupportedPropertyTypeOutput struct{ *pulumi.OutputState }

func (AutomationRulePropertyChangedConditionSupportedPropertyTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutomationRulePropertyChangedConditionSupportedPropertyType)(nil)).Elem()
}

func (o AutomationRulePropertyChangedConditionSupportedPropertyTypeOutput) ToAutomationRulePropertyChangedConditionSupportedPropertyTypeOutput() AutomationRulePropertyChangedConditionSupportedPropertyTypeOutput {
	return o
}

func (o AutomationRulePropertyChangedConditionSupportedPropertyTypeOutput) ToAutomationRulePropertyChangedConditionSupportedPropertyTypeOutputWithContext(ctx context.Context) AutomationRulePropertyChangedConditionSupportedPropertyTypeOutput {
	return o
}

func (o AutomationRulePropertyChangedConditionSupportedPropertyTypeOutput) ToAutomationRulePropertyChangedConditionSupportedPropertyTypePtrOutput() AutomationRulePropertyChangedConditionSupportedPropertyTypePtrOutput {
	return o.ToAutomationRulePropertyChangedConditionSupportedPropertyTypePtrOutputWithContext(context.Background())
}

func (o AutomationRulePropertyChangedConditionSupportedPropertyTypeOutput) ToAutomationRulePropertyChangedConditionSupportedPropertyTypePtrOutputWithContext(ctx context.Context) AutomationRulePropertyChangedConditionSupportedPropertyTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AutomationRulePropertyChangedConditionSupportedPropertyType) *AutomationRulePropertyChangedConditionSupportedPropertyType {
		return &v
	}).(AutomationRulePropertyChangedConditionSupportedPropertyTypePtrOutput)
}

func (o AutomationRulePropertyChangedConditionSupportedPropertyTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AutomationRulePropertyChangedConditionSupportedPropertyTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AutomationRulePropertyChangedConditionSupportedPropertyType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AutomationRulePropertyChangedConditionSupportedPropertyTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AutomationRulePropertyChangedConditionSupportedPropertyTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AutomationRulePropertyChangedConditionSupportedPropertyType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AutomationRulePropertyChangedConditionSupportedPropertyTypePtrOutput struct{ *pulumi.OutputState }

func (AutomationRulePropertyChangedConditionSupportedPropertyTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AutomationRulePropertyChangedConditionSupportedPropertyType)(nil)).Elem()
}

func (o AutomationRulePropertyChangedConditionSupportedPropertyTypePtrOutput) ToAutomationRulePropertyChangedConditionSupportedPropertyTypePtrOutput() AutomationRulePropertyChangedConditionSupportedPropertyTypePtrOutput {
	return o
}

func (o AutomationRulePropertyChangedConditionSupportedPropertyTypePtrOutput) ToAutomationRulePropertyChangedConditionSupportedPropertyTypePtrOutputWithContext(ctx context.Context) AutomationRulePropertyChangedConditionSupportedPropertyTypePtrOutput {
	return o
}

func (o AutomationRulePropertyChangedConditionSupportedPropertyTypePtrOutput) Elem() AutomationRulePropertyChangedConditionSupportedPropertyTypeOutput {
	return o.ApplyT(func(v *AutomationRulePropertyChangedConditionSupportedPropertyType) AutomationRulePropertyChangedConditionSupportedPropertyType {
		if v != nil {
			return *v
		}
		var ret AutomationRulePropertyChangedConditionSupportedPropertyType
		return ret
	}).(AutomationRulePropertyChangedConditionSupportedPropertyTypeOutput)
}

func (o AutomationRulePropertyChangedConditionSupportedPropertyTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AutomationRulePropertyChangedConditionSupportedPropertyTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AutomationRulePropertyChangedConditionSupportedPropertyType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AutomationRulePropertyChangedConditionSupportedPropertyTypeInput is an input type that accepts values of the AutomationRulePropertyChangedConditionSupportedPropertyType enum
// A concrete instance of `AutomationRulePropertyChangedConditionSupportedPropertyTypeInput` can be one of the following:
//
//	AutomationRulePropertyChangedConditionSupportedPropertyTypeIncidentSeverity
//	AutomationRulePropertyChangedConditionSupportedPropertyTypeIncidentStatus
//	AutomationRulePropertyChangedConditionSupportedPropertyTypeIncidentOwner
type AutomationRulePropertyChangedConditionSupportedPropertyTypeInput interface {
	pulumi.Input

	ToAutomationRulePropertyChangedConditionSupportedPropertyTypeOutput() AutomationRulePropertyChangedConditionSupportedPropertyTypeOutput
	ToAutomationRulePropertyChangedConditionSupportedPropertyTypeOutputWithContext(context.Context) AutomationRulePropertyChangedConditionSupportedPropertyTypeOutput
}

var automationRulePropertyChangedConditionSupportedPropertyTypePtrType = reflect.TypeOf((**AutomationRulePropertyChangedConditionSupportedPropertyType)(nil)).Elem()

type AutomationRulePropertyChangedConditionSupportedPropertyTypePtrInput interface {
	pulumi.Input

	ToAutomationRulePropertyChangedConditionSupportedPropertyTypePtrOutput() AutomationRulePropertyChangedConditionSupportedPropertyTypePtrOutput
	ToAutomationRulePropertyChangedConditionSupportedPropertyTypePtrOutputWithContext(context.Context) AutomationRulePropertyChangedConditionSupportedPropertyTypePtrOutput
}

type automationRulePropertyChangedConditionSupportedPropertyTypePtr string

func AutomationRulePropertyChangedConditionSupportedPropertyTypePtr(v string) AutomationRulePropertyChangedConditionSupportedPropertyTypePtrInput {
	return (*automationRulePropertyChangedConditionSupportedPropertyTypePtr)(&v)
}

func (*automationRulePropertyChangedConditionSupportedPropertyTypePtr) ElementType() reflect.Type {
	return automationRulePropertyChangedConditionSupportedPropertyTypePtrType
}

func (in *automationRulePropertyChangedConditionSupportedPropertyTypePtr) ToAutomationRulePropertyChangedConditionSupportedPropertyTypePtrOutput() AutomationRulePropertyChangedConditionSupportedPropertyTypePtrOutput {
	return pulumi.ToOutput(in).(AutomationRulePropertyChangedConditionSupportedPropertyTypePtrOutput)
}

func (in *automationRulePropertyChangedConditionSupportedPropertyTypePtr) ToAutomationRulePropertyChangedConditionSupportedPropertyTypePtrOutputWithContext(ctx context.Context) AutomationRulePropertyChangedConditionSupportedPropertyTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AutomationRulePropertyChangedConditionSupportedPropertyTypePtrOutput)
}

type AutomationRulePropertyConditionSupportedOperator string

const (
	// Evaluates if the property equals at least one of the condition values
	AutomationRulePropertyConditionSupportedOperatorEquals = AutomationRulePropertyConditionSupportedOperator("Equals")
	// Evaluates if the property does not equal any of the condition values
	AutomationRulePropertyConditionSupportedOperatorNotEquals = AutomationRulePropertyConditionSupportedOperator("NotEquals")
	// Evaluates if the property contains at least one of the condition values
	AutomationRulePropertyConditionSupportedOperatorContains = AutomationRulePropertyConditionSupportedOperator("Contains")
	// Evaluates if the property does not contain any of the condition values
	AutomationRulePropertyConditionSupportedOperatorNotContains = AutomationRulePropertyConditionSupportedOperator("NotContains")
	// Evaluates if the property starts with any of the condition values
	AutomationRulePropertyConditionSupportedOperatorStartsWith = AutomationRulePropertyConditionSupportedOperator("StartsWith")
	// Evaluates if the property does not start with any of the condition values
	AutomationRulePropertyConditionSupportedOperatorNotStartsWith = AutomationRulePropertyConditionSupportedOperator("NotStartsWith")
	// Evaluates if the property ends with any of the condition values
	AutomationRulePropertyConditionSupportedOperatorEndsWith = AutomationRulePropertyConditionSupportedOperator("EndsWith")
	// Evaluates if the property does not end with any of the condition values
	AutomationRulePropertyConditionSupportedOperatorNotEndsWith = AutomationRulePropertyConditionSupportedOperator("NotEndsWith")
)

func (AutomationRulePropertyConditionSupportedOperator) ElementType() reflect.Type {
	return reflect.TypeOf((*AutomationRulePropertyConditionSupportedOperator)(nil)).Elem()
}

func (e AutomationRulePropertyConditionSupportedOperator) ToAutomationRulePropertyConditionSupportedOperatorOutput() AutomationRulePropertyConditionSupportedOperatorOutput {
	return pulumi.ToOutput(e).(AutomationRulePropertyConditionSupportedOperatorOutput)
}

func (e AutomationRulePropertyConditionSupportedOperator) ToAutomationRulePropertyConditionSupportedOperatorOutputWithContext(ctx context.Context) AutomationRulePropertyConditionSupportedOperatorOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AutomationRulePropertyConditionSupportedOperatorOutput)
}

func (e AutomationRulePropertyConditionSupportedOperator) ToAutomationRulePropertyConditionSupportedOperatorPtrOutput() AutomationRulePropertyConditionSupportedOperatorPtrOutput {
	return e.ToAutomationRulePropertyConditionSupportedOperatorPtrOutputWithContext(context.Background())
}

func (e AutomationRulePropertyConditionSupportedOperator) ToAutomationRulePropertyConditionSupportedOperatorPtrOutputWithContext(ctx context.Context) AutomationRulePropertyConditionSupportedOperatorPtrOutput {
	return AutomationRulePropertyConditionSupportedOperator(e).ToAutomationRulePropertyConditionSupportedOperatorOutputWithContext(ctx).ToAutomationRulePropertyConditionSupportedOperatorPtrOutputWithContext(ctx)
}

func (e AutomationRulePropertyConditionSupportedOperator) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AutomationRulePropertyConditionSupportedOperator) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AutomationRulePropertyConditionSupportedOperator) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AutomationRulePropertyConditionSupportedOperator) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AutomationRulePropertyConditionSupportedOperatorOutput struct{ *pulumi.OutputState }

func (AutomationRulePropertyConditionSupportedOperatorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutomationRulePropertyConditionSupportedOperator)(nil)).Elem()
}

func (o AutomationRulePropertyConditionSupportedOperatorOutput) ToAutomationRulePropertyConditionSupportedOperatorOutput() AutomationRulePropertyConditionSupportedOperatorOutput {
	return o
}

func (o AutomationRulePropertyConditionSupportedOperatorOutput) ToAutomationRulePropertyConditionSupportedOperatorOutputWithContext(ctx context.Context) AutomationRulePropertyConditionSupportedOperatorOutput {
	return o
}

func (o AutomationRulePropertyConditionSupportedOperatorOutput) ToAutomationRulePropertyConditionSupportedOperatorPtrOutput() AutomationRulePropertyConditionSupportedOperatorPtrOutput {
	return o.ToAutomationRulePropertyConditionSupportedOperatorPtrOutputWithContext(context.Background())
}

func (o AutomationRulePropertyConditionSupportedOperatorOutput) ToAutomationRulePropertyConditionSupportedOperatorPtrOutputWithContext(ctx context.Context) AutomationRulePropertyConditionSupportedOperatorPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AutomationRulePropertyConditionSupportedOperator) *AutomationRulePropertyConditionSupportedOperator {
		return &v
	}).(AutomationRulePropertyConditionSupportedOperatorPtrOutput)
}

func (o AutomationRulePropertyConditionSupportedOperatorOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AutomationRulePropertyConditionSupportedOperatorOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AutomationRulePropertyConditionSupportedOperator) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AutomationRulePropertyConditionSupportedOperatorOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AutomationRulePropertyConditionSupportedOperatorOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AutomationRulePropertyConditionSupportedOperator) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AutomationRulePropertyConditionSupportedOperatorPtrOutput struct{ *pulumi.OutputState }

func (AutomationRulePropertyConditionSupportedOperatorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AutomationRulePropertyConditionSupportedOperator)(nil)).Elem()
}

func (o AutomationRulePropertyConditionSupportedOperatorPtrOutput) ToAutomationRulePropertyConditionSupportedOperatorPtrOutput() AutomationRulePropertyConditionSupportedOperatorPtrOutput {
	return o
}

func (o AutomationRulePropertyConditionSupportedOperatorPtrOutput) ToAutomationRulePropertyConditionSupportedOperatorPtrOutputWithContext(ctx context.Context) AutomationRulePropertyConditionSupportedOperatorPtrOutput {
	return o
}

func (o AutomationRulePropertyConditionSupportedOperatorPtrOutput) Elem() AutomationRulePropertyConditionSupportedOperatorOutput {
	return o.ApplyT(func(v *AutomationRulePropertyConditionSupportedOperator) AutomationRulePropertyConditionSupportedOperator {
		if v != nil {
			return *v
		}
		var ret AutomationRulePropertyConditionSupportedOperator
		return ret
	}).(AutomationRulePropertyConditionSupportedOperatorOutput)
}

func (o AutomationRulePropertyConditionSupportedOperatorPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AutomationRulePropertyConditionSupportedOperatorPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AutomationRulePropertyConditionSupportedOperator) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AutomationRulePropertyConditionSupportedOperatorInput is an input type that accepts values of the AutomationRulePropertyConditionSupportedOperator enum
// A concrete instance of `AutomationRulePropertyConditionSupportedOperatorInput` can be one of the following:
//
//	AutomationRulePropertyConditionSupportedOperatorEquals
//	AutomationRulePropertyConditionSupportedOperatorNotEquals
//	AutomationRulePropertyConditionSupportedOperatorContains
//	AutomationRulePropertyConditionSupportedOperatorNotContains
//	AutomationRulePropertyConditionSupportedOperatorStartsWith
//	AutomationRulePropertyConditionSupportedOperatorNotStartsWith
//	AutomationRulePropertyConditionSupportedOperatorEndsWith
//	AutomationRulePropertyConditionSupportedOperatorNotEndsWith
type AutomationRulePropertyConditionSupportedOperatorInput interface {
	pulumi.Input

	ToAutomationRulePropertyConditionSupportedOperatorOutput() AutomationRulePropertyConditionSupportedOperatorOutput
	ToAutomationRulePropertyConditionSupportedOperatorOutputWithContext(context.Context) AutomationRulePropertyConditionSupportedOperatorOutput
}

var automationRulePropertyConditionSupportedOperatorPtrType = reflect.TypeOf((**AutomationRulePropertyConditionSupportedOperator)(nil)).Elem()

type AutomationRulePropertyConditionSupportedOperatorPtrInput interface {
	pulumi.Input

	ToAutomationRulePropertyConditionSupportedOperatorPtrOutput() AutomationRulePropertyConditionSupportedOperatorPtrOutput
	ToAutomationRulePropertyConditionSupportedOperatorPtrOutputWithContext(context.Context) AutomationRulePropertyConditionSupportedOperatorPtrOutput
}

type automationRulePropertyConditionSupportedOperatorPtr string

func AutomationRulePropertyConditionSupportedOperatorPtr(v string) AutomationRulePropertyConditionSupportedOperatorPtrInput {
	return (*automationRulePropertyConditionSupportedOperatorPtr)(&v)
}

func (*automationRulePropertyConditionSupportedOperatorPtr) ElementType() reflect.Type {
	return automationRulePropertyConditionSupportedOperatorPtrType
}

func (in *automationRulePropertyConditionSupportedOperatorPtr) ToAutomationRulePropertyConditionSupportedOperatorPtrOutput() AutomationRulePropertyConditionSupportedOperatorPtrOutput {
	return pulumi.ToOutput(in).(AutomationRulePropertyConditionSupportedOperatorPtrOutput)
}

func (in *automationRulePropertyConditionSupportedOperatorPtr) ToAutomationRulePropertyConditionSupportedOperatorPtrOutputWithContext(ctx context.Context) AutomationRulePropertyConditionSupportedOperatorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AutomationRulePropertyConditionSupportedOperatorPtrOutput)
}

// The property to evaluate in an automation rule property condition.
type AutomationRulePropertyConditionSupportedProperty string

const (
	// The title of the incident
	AutomationRulePropertyConditionSupportedPropertyIncidentTitle = AutomationRulePropertyConditionSupportedProperty("IncidentTitle")
	// The description of the incident
	AutomationRulePropertyConditionSupportedPropertyIncidentDescription = AutomationRulePropertyConditionSupportedProperty("IncidentDescription")
	// The severity of the incident
	AutomationRulePropertyConditionSupportedPropertyIncidentSeverity = AutomationRulePropertyConditionSupportedProperty("IncidentSeverity")
	// The status of the incident
	AutomationRulePropertyConditionSupportedPropertyIncidentStatus = AutomationRulePropertyConditionSupportedProperty("IncidentStatus")
	// The related Analytic rule ids of the incident
	AutomationRulePropertyConditionSupportedPropertyIncidentRelatedAnalyticRuleIds = AutomationRulePropertyConditionSupportedProperty("IncidentRelatedAnalyticRuleIds")
	// The tactics of the incident
	AutomationRulePropertyConditionSupportedPropertyIncidentTactics = AutomationRulePropertyConditionSupportedProperty("IncidentTactics")
	// The labels of the incident
	AutomationRulePropertyConditionSupportedPropertyIncidentLabel = AutomationRulePropertyConditionSupportedProperty("IncidentLabel")
	// The provider name of the incident
	AutomationRulePropertyConditionSupportedPropertyIncidentProviderName = AutomationRulePropertyConditionSupportedProperty("IncidentProviderName")
	// The update source of the incident
	AutomationRulePropertyConditionSupportedPropertyIncidentUpdatedBySource = AutomationRulePropertyConditionSupportedProperty("IncidentUpdatedBySource")
	// The incident custom detail key
	AutomationRulePropertyConditionSupportedPropertyIncidentCustomDetailsKey = AutomationRulePropertyConditionSupportedProperty("IncidentCustomDetailsKey")
	// The incident custom detail value
	AutomationRulePropertyConditionSupportedPropertyIncidentCustomDetailsValue = AutomationRulePropertyConditionSupportedProperty("IncidentCustomDetailsValue")
	// The account Azure Active Directory tenant id
	AutomationRulePropertyConditionSupportedPropertyAccountAadTenantId = AutomationRulePropertyConditionSupportedProperty("AccountAadTenantId")
	// The account Azure Active Directory user id
	AutomationRulePropertyConditionSupportedPropertyAccountAadUserId = AutomationRulePropertyConditionSupportedProperty("AccountAadUserId")
	// The account name
	AutomationRulePropertyConditionSupportedPropertyAccountName = AutomationRulePropertyConditionSupportedProperty("AccountName")
	// The account NetBIOS domain name
	AutomationRulePropertyConditionSupportedPropertyAccountNTDomain = AutomationRulePropertyConditionSupportedProperty("AccountNTDomain")
	// The account Azure Active Directory Passport User ID
	AutomationRulePropertyConditionSupportedPropertyAccountPUID = AutomationRulePropertyConditionSupportedProperty("AccountPUID")
	// The account security identifier
	AutomationRulePropertyConditionSupportedPropertyAccountSid = AutomationRulePropertyConditionSupportedProperty("AccountSid")
	// The account unique identifier
	AutomationRulePropertyConditionSupportedPropertyAccountObjectGuid = AutomationRulePropertyConditionSupportedProperty("AccountObjectGuid")
	// The account user principal name suffix
	AutomationRulePropertyConditionSupportedPropertyAccountUPNSuffix = AutomationRulePropertyConditionSupportedProperty("AccountUPNSuffix")
	// The name of the product of the alert
	AutomationRulePropertyConditionSupportedPropertyAlertProductNames = AutomationRulePropertyConditionSupportedProperty("AlertProductNames")
	// The analytic rule ids of the alert
	AutomationRulePropertyConditionSupportedPropertyAlertAnalyticRuleIds = AutomationRulePropertyConditionSupportedProperty("AlertAnalyticRuleIds")
	// The Azure resource id
	AutomationRulePropertyConditionSupportedPropertyAzureResourceResourceId = AutomationRulePropertyConditionSupportedProperty("AzureResourceResourceId")
	// The Azure resource subscription id
	AutomationRulePropertyConditionSupportedPropertyAzureResourceSubscriptionId = AutomationRulePropertyConditionSupportedProperty("AzureResourceSubscriptionId")
	// The cloud application identifier
	AutomationRulePropertyConditionSupportedPropertyCloudApplicationAppId = AutomationRulePropertyConditionSupportedProperty("CloudApplicationAppId")
	// The cloud application name
	AutomationRulePropertyConditionSupportedPropertyCloudApplicationAppName = AutomationRulePropertyConditionSupportedProperty("CloudApplicationAppName")
	// The dns record domain name
	AutomationRulePropertyConditionSupportedPropertyDNSDomainName = AutomationRulePropertyConditionSupportedProperty("DNSDomainName")
	// The file directory full path
	AutomationRulePropertyConditionSupportedPropertyFileDirectory = AutomationRulePropertyConditionSupportedProperty("FileDirectory")
	// The file name without path
	AutomationRulePropertyConditionSupportedPropertyFileName = AutomationRulePropertyConditionSupportedProperty("FileName")
	// The file hash value
	AutomationRulePropertyConditionSupportedPropertyFileHashValue = AutomationRulePropertyConditionSupportedProperty("FileHashValue")
	// The host Azure resource id
	AutomationRulePropertyConditionSupportedPropertyHostAzureID = AutomationRulePropertyConditionSupportedProperty("HostAzureID")
	// The host name without domain
	AutomationRulePropertyConditionSupportedPropertyHostName = AutomationRulePropertyConditionSupportedProperty("HostName")
	// The host NetBIOS name
	AutomationRulePropertyConditionSupportedPropertyHostNetBiosName = AutomationRulePropertyConditionSupportedProperty("HostNetBiosName")
	// The host NT domain
	AutomationRulePropertyConditionSupportedPropertyHostNTDomain = AutomationRulePropertyConditionSupportedProperty("HostNTDomain")
	// The host operating system
	AutomationRulePropertyConditionSupportedPropertyHostOSVersion = AutomationRulePropertyConditionSupportedProperty("HostOSVersion")
	// "The IoT device id
	AutomationRulePropertyConditionSupportedPropertyIoTDeviceId = AutomationRulePropertyConditionSupportedProperty("IoTDeviceId")
	// The IoT device name
	AutomationRulePropertyConditionSupportedPropertyIoTDeviceName = AutomationRulePropertyConditionSupportedProperty("IoTDeviceName")
	// The IoT device type
	AutomationRulePropertyConditionSupportedPropertyIoTDeviceType = AutomationRulePropertyConditionSupportedProperty("IoTDeviceType")
	// The IoT device vendor
	AutomationRulePropertyConditionSupportedPropertyIoTDeviceVendor = AutomationRulePropertyConditionSupportedProperty("IoTDeviceVendor")
	// The IoT device model
	AutomationRulePropertyConditionSupportedPropertyIoTDeviceModel = AutomationRulePropertyConditionSupportedProperty("IoTDeviceModel")
	// The IoT device operating system
	AutomationRulePropertyConditionSupportedPropertyIoTDeviceOperatingSystem = AutomationRulePropertyConditionSupportedProperty("IoTDeviceOperatingSystem")
	// The IP address
	AutomationRulePropertyConditionSupportedPropertyIPAddress = AutomationRulePropertyConditionSupportedProperty("IPAddress")
	// The mailbox display name
	AutomationRulePropertyConditionSupportedPropertyMailboxDisplayName = AutomationRulePropertyConditionSupportedProperty("MailboxDisplayName")
	// The mailbox primary address
	AutomationRulePropertyConditionSupportedPropertyMailboxPrimaryAddress = AutomationRulePropertyConditionSupportedProperty("MailboxPrimaryAddress")
	// The mailbox user principal name
	AutomationRulePropertyConditionSupportedPropertyMailboxUPN = AutomationRulePropertyConditionSupportedProperty("MailboxUPN")
	// The mail message delivery action
	AutomationRulePropertyConditionSupportedPropertyMailMessageDeliveryAction = AutomationRulePropertyConditionSupportedProperty("MailMessageDeliveryAction")
	// The mail message delivery location
	AutomationRulePropertyConditionSupportedPropertyMailMessageDeliveryLocation = AutomationRulePropertyConditionSupportedProperty("MailMessageDeliveryLocation")
	// The mail message recipient
	AutomationRulePropertyConditionSupportedPropertyMailMessageRecipient = AutomationRulePropertyConditionSupportedProperty("MailMessageRecipient")
	// The mail message sender IP address
	AutomationRulePropertyConditionSupportedPropertyMailMessageSenderIP = AutomationRulePropertyConditionSupportedProperty("MailMessageSenderIP")
	// The mail message subject
	AutomationRulePropertyConditionSupportedPropertyMailMessageSubject = AutomationRulePropertyConditionSupportedProperty("MailMessageSubject")
	// The mail message P1 sender
	AutomationRulePropertyConditionSupportedPropertyMailMessageP1Sender = AutomationRulePropertyConditionSupportedProperty("MailMessageP1Sender")
	// The mail message P2 sender
	AutomationRulePropertyConditionSupportedPropertyMailMessageP2Sender = AutomationRulePropertyConditionSupportedProperty("MailMessageP2Sender")
	// The malware category
	AutomationRulePropertyConditionSupportedPropertyMalwareCategory = AutomationRulePropertyConditionSupportedProperty("MalwareCategory")
	// The malware name
	AutomationRulePropertyConditionSupportedPropertyMalwareName = AutomationRulePropertyConditionSupportedProperty("MalwareName")
	// The process execution command line
	AutomationRulePropertyConditionSupportedPropertyProcessCommandLine = AutomationRulePropertyConditionSupportedProperty("ProcessCommandLine")
	// The process id
	AutomationRulePropertyConditionSupportedPropertyProcessId = AutomationRulePropertyConditionSupportedProperty("ProcessId")
	// The registry key path
	AutomationRulePropertyConditionSupportedPropertyRegistryKey = AutomationRulePropertyConditionSupportedProperty("RegistryKey")
	// The registry key value in string formatted representation
	AutomationRulePropertyConditionSupportedPropertyRegistryValueData = AutomationRulePropertyConditionSupportedProperty("RegistryValueData")
	// The url
	AutomationRulePropertyConditionSupportedPropertyUrl = AutomationRulePropertyConditionSupportedProperty("Url")
)

func (AutomationRulePropertyConditionSupportedProperty) ElementType() reflect.Type {
	return reflect.TypeOf((*AutomationRulePropertyConditionSupportedProperty)(nil)).Elem()
}

func (e AutomationRulePropertyConditionSupportedProperty) ToAutomationRulePropertyConditionSupportedPropertyOutput() AutomationRulePropertyConditionSupportedPropertyOutput {
	return pulumi.ToOutput(e).(AutomationRulePropertyConditionSupportedPropertyOutput)
}

func (e AutomationRulePropertyConditionSupportedProperty) ToAutomationRulePropertyConditionSupportedPropertyOutputWithContext(ctx context.Context) AutomationRulePropertyConditionSupportedPropertyOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AutomationRulePropertyConditionSupportedPropertyOutput)
}

func (e AutomationRulePropertyConditionSupportedProperty) ToAutomationRulePropertyConditionSupportedPropertyPtrOutput() AutomationRulePropertyConditionSupportedPropertyPtrOutput {
	return e.ToAutomationRulePropertyConditionSupportedPropertyPtrOutputWithContext(context.Background())
}

func (e AutomationRulePropertyConditionSupportedProperty) ToAutomationRulePropertyConditionSupportedPropertyPtrOutputWithContext(ctx context.Context) AutomationRulePropertyConditionSupportedPropertyPtrOutput {
	return AutomationRulePropertyConditionSupportedProperty(e).ToAutomationRulePropertyConditionSupportedPropertyOutputWithContext(ctx).ToAutomationRulePropertyConditionSupportedPropertyPtrOutputWithContext(ctx)
}

func (e AutomationRulePropertyConditionSupportedProperty) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AutomationRulePropertyConditionSupportedProperty) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AutomationRulePropertyConditionSupportedProperty) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AutomationRulePropertyConditionSupportedProperty) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AutomationRulePropertyConditionSupportedPropertyOutput struct{ *pulumi.OutputState }

func (AutomationRulePropertyConditionSupportedPropertyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutomationRulePropertyConditionSupportedProperty)(nil)).Elem()
}

func (o AutomationRulePropertyConditionSupportedPropertyOutput) ToAutomationRulePropertyConditionSupportedPropertyOutput() AutomationRulePropertyConditionSupportedPropertyOutput {
	return o
}

func (o AutomationRulePropertyConditionSupportedPropertyOutput) ToAutomationRulePropertyConditionSupportedPropertyOutputWithContext(ctx context.Context) AutomationRulePropertyConditionSupportedPropertyOutput {
	return o
}

func (o AutomationRulePropertyConditionSupportedPropertyOutput) ToAutomationRulePropertyConditionSupportedPropertyPtrOutput() AutomationRulePropertyConditionSupportedPropertyPtrOutput {
	return o.ToAutomationRulePropertyConditionSupportedPropertyPtrOutputWithContext(context.Background())
}

func (o AutomationRulePropertyConditionSupportedPropertyOutput) ToAutomationRulePropertyConditionSupportedPropertyPtrOutputWithContext(ctx context.Context) AutomationRulePropertyConditionSupportedPropertyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AutomationRulePropertyConditionSupportedProperty) *AutomationRulePropertyConditionSupportedProperty {
		return &v
	}).(AutomationRulePropertyConditionSupportedPropertyPtrOutput)
}

func (o AutomationRulePropertyConditionSupportedPropertyOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AutomationRulePropertyConditionSupportedPropertyOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AutomationRulePropertyConditionSupportedProperty) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AutomationRulePropertyConditionSupportedPropertyOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AutomationRulePropertyConditionSupportedPropertyOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AutomationRulePropertyConditionSupportedProperty) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AutomationRulePropertyConditionSupportedPropertyPtrOutput struct{ *pulumi.OutputState }

func (AutomationRulePropertyConditionSupportedPropertyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AutomationRulePropertyConditionSupportedProperty)(nil)).Elem()
}

func (o AutomationRulePropertyConditionSupportedPropertyPtrOutput) ToAutomationRulePropertyConditionSupportedPropertyPtrOutput() AutomationRulePropertyConditionSupportedPropertyPtrOutput {
	return o
}

func (o AutomationRulePropertyConditionSupportedPropertyPtrOutput) ToAutomationRulePropertyConditionSupportedPropertyPtrOutputWithContext(ctx context.Context) AutomationRulePropertyConditionSupportedPropertyPtrOutput {
	return o
}

func (o AutomationRulePropertyConditionSupportedPropertyPtrOutput) Elem() AutomationRulePropertyConditionSupportedPropertyOutput {
	return o.ApplyT(func(v *AutomationRulePropertyConditionSupportedProperty) AutomationRulePropertyConditionSupportedProperty {
		if v != nil {
			return *v
		}
		var ret AutomationRulePropertyConditionSupportedProperty
		return ret
	}).(AutomationRulePropertyConditionSupportedPropertyOutput)
}

func (o AutomationRulePropertyConditionSupportedPropertyPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AutomationRulePropertyConditionSupportedPropertyPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AutomationRulePropertyConditionSupportedProperty) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AutomationRulePropertyConditionSupportedPropertyInput is an input type that accepts values of the AutomationRulePropertyConditionSupportedProperty enum
// A concrete instance of `AutomationRulePropertyConditionSupportedPropertyInput` can be one of the following:
//
//	AutomationRulePropertyConditionSupportedPropertyIncidentTitle
//	AutomationRulePropertyConditionSupportedPropertyIncidentDescription
//	AutomationRulePropertyConditionSupportedPropertyIncidentSeverity
//	AutomationRulePropertyConditionSupportedPropertyIncidentStatus
//	AutomationRulePropertyConditionSupportedPropertyIncidentRelatedAnalyticRuleIds
//	AutomationRulePropertyConditionSupportedPropertyIncidentTactics
//	AutomationRulePropertyConditionSupportedPropertyIncidentLabel
//	AutomationRulePropertyConditionSupportedPropertyIncidentProviderName
//	AutomationRulePropertyConditionSupportedPropertyIncidentUpdatedBySource
//	AutomationRulePropertyConditionSupportedPropertyIncidentCustomDetailsKey
//	AutomationRulePropertyConditionSupportedPropertyIncidentCustomDetailsValue
//	AutomationRulePropertyConditionSupportedPropertyAccountAadTenantId
//	AutomationRulePropertyConditionSupportedPropertyAccountAadUserId
//	AutomationRulePropertyConditionSupportedPropertyAccountName
//	AutomationRulePropertyConditionSupportedPropertyAccountNTDomain
//	AutomationRulePropertyConditionSupportedPropertyAccountPUID
//	AutomationRulePropertyConditionSupportedPropertyAccountSid
//	AutomationRulePropertyConditionSupportedPropertyAccountObjectGuid
//	AutomationRulePropertyConditionSupportedPropertyAccountUPNSuffix
//	AutomationRulePropertyConditionSupportedPropertyAlertProductNames
//	AutomationRulePropertyConditionSupportedPropertyAlertAnalyticRuleIds
//	AutomationRulePropertyConditionSupportedPropertyAzureResourceResourceId
//	AutomationRulePropertyConditionSupportedPropertyAzureResourceSubscriptionId
//	AutomationRulePropertyConditionSupportedPropertyCloudApplicationAppId
//	AutomationRulePropertyConditionSupportedPropertyCloudApplicationAppName
//	AutomationRulePropertyConditionSupportedPropertyDNSDomainName
//	AutomationRulePropertyConditionSupportedPropertyFileDirectory
//	AutomationRulePropertyConditionSupportedPropertyFileName
//	AutomationRulePropertyConditionSupportedPropertyFileHashValue
//	AutomationRulePropertyConditionSupportedPropertyHostAzureID
//	AutomationRulePropertyConditionSupportedPropertyHostName
//	AutomationRulePropertyConditionSupportedPropertyHostNetBiosName
//	AutomationRulePropertyConditionSupportedPropertyHostNTDomain
//	AutomationRulePropertyConditionSupportedPropertyHostOSVersion
//	AutomationRulePropertyConditionSupportedPropertyIoTDeviceId
//	AutomationRulePropertyConditionSupportedPropertyIoTDeviceName
//	AutomationRulePropertyConditionSupportedPropertyIoTDeviceType
//	AutomationRulePropertyConditionSupportedPropertyIoTDeviceVendor
//	AutomationRulePropertyConditionSupportedPropertyIoTDeviceModel
//	AutomationRulePropertyConditionSupportedPropertyIoTDeviceOperatingSystem
//	AutomationRulePropertyConditionSupportedPropertyIPAddress
//	AutomationRulePropertyConditionSupportedPropertyMailboxDisplayName
//	AutomationRulePropertyConditionSupportedPropertyMailboxPrimaryAddress
//	AutomationRulePropertyConditionSupportedPropertyMailboxUPN
//	AutomationRulePropertyConditionSupportedPropertyMailMessageDeliveryAction
//	AutomationRulePropertyConditionSupportedPropertyMailMessageDeliveryLocation
//	AutomationRulePropertyConditionSupportedPropertyMailMessageRecipient
//	AutomationRulePropertyConditionSupportedPropertyMailMessageSenderIP
//	AutomationRulePropertyConditionSupportedPropertyMailMessageSubject
//	AutomationRulePropertyConditionSupportedPropertyMailMessageP1Sender
//	AutomationRulePropertyConditionSupportedPropertyMailMessageP2Sender
//	AutomationRulePropertyConditionSupportedPropertyMalwareCategory
//	AutomationRulePropertyConditionSupportedPropertyMalwareName
//	AutomationRulePropertyConditionSupportedPropertyProcessCommandLine
//	AutomationRulePropertyConditionSupportedPropertyProcessId
//	AutomationRulePropertyConditionSupportedPropertyRegistryKey
//	AutomationRulePropertyConditionSupportedPropertyRegistryValueData
//	AutomationRulePropertyConditionSupportedPropertyUrl
type AutomationRulePropertyConditionSupportedPropertyInput interface {
	pulumi.Input

	ToAutomationRulePropertyConditionSupportedPropertyOutput() AutomationRulePropertyConditionSupportedPropertyOutput
	ToAutomationRulePropertyConditionSupportedPropertyOutputWithContext(context.Context) AutomationRulePropertyConditionSupportedPropertyOutput
}

var automationRulePropertyConditionSupportedPropertyPtrType = reflect.TypeOf((**AutomationRulePropertyConditionSupportedProperty)(nil)).Elem()

type AutomationRulePropertyConditionSupportedPropertyPtrInput interface {
	pulumi.Input

	ToAutomationRulePropertyConditionSupportedPropertyPtrOutput() AutomationRulePropertyConditionSupportedPropertyPtrOutput
	ToAutomationRulePropertyConditionSupportedPropertyPtrOutputWithContext(context.Context) AutomationRulePropertyConditionSupportedPropertyPtrOutput
}

type automationRulePropertyConditionSupportedPropertyPtr string

func AutomationRulePropertyConditionSupportedPropertyPtr(v string) AutomationRulePropertyConditionSupportedPropertyPtrInput {
	return (*automationRulePropertyConditionSupportedPropertyPtr)(&v)
}

func (*automationRulePropertyConditionSupportedPropertyPtr) ElementType() reflect.Type {
	return automationRulePropertyConditionSupportedPropertyPtrType
}

func (in *automationRulePropertyConditionSupportedPropertyPtr) ToAutomationRulePropertyConditionSupportedPropertyPtrOutput() AutomationRulePropertyConditionSupportedPropertyPtrOutput {
	return pulumi.ToOutput(in).(AutomationRulePropertyConditionSupportedPropertyPtrOutput)
}

func (in *automationRulePropertyConditionSupportedPropertyPtr) ToAutomationRulePropertyConditionSupportedPropertyPtrOutputWithContext(ctx context.Context) AutomationRulePropertyConditionSupportedPropertyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AutomationRulePropertyConditionSupportedPropertyPtrOutput)
}

type ConditionType string

const (
	// Evaluate an object property value
	ConditionTypeProperty = ConditionType("Property")
	// Evaluate an object array property value
	ConditionTypePropertyArray = ConditionType("PropertyArray")
	// Evaluate an object property changed value
	ConditionTypePropertyChanged = ConditionType("PropertyChanged")
	// Evaluate an object array property changed value
	ConditionTypePropertyArrayChanged = ConditionType("PropertyArrayChanged")
	// Apply a boolean operator (e.g AND, OR) to conditions
	ConditionTypeBoolean = ConditionType("Boolean")
)

// The data connector kind
type DataConnectorKind string

const (
	DataConnectorKindAzureActiveDirectory                      = DataConnectorKind("AzureActiveDirectory")
	DataConnectorKindAzureSecurityCenter                       = DataConnectorKind("AzureSecurityCenter")
	DataConnectorKindMicrosoftCloudAppSecurity                 = DataConnectorKind("MicrosoftCloudAppSecurity")
	DataConnectorKindThreatIntelligence                        = DataConnectorKind("ThreatIntelligence")
	DataConnectorKindOffice365                                 = DataConnectorKind("Office365")
	DataConnectorKindAmazonWebServicesCloudTrail               = DataConnectorKind("AmazonWebServicesCloudTrail")
	DataConnectorKindAzureAdvancedThreatProtection             = DataConnectorKind("AzureAdvancedThreatProtection")
	DataConnectorKindMicrosoftDefenderAdvancedThreatProtection = DataConnectorKind("MicrosoftDefenderAdvancedThreatProtection")
)

// Describe whether this data type connection is enabled or not.
type DataTypeState string

const (
	DataTypeStateEnabled  = DataTypeState("Enabled")
	DataTypeStateDisabled = DataTypeState("Disabled")
)

func (DataTypeState) ElementType() reflect.Type {
	return reflect.TypeOf((*DataTypeState)(nil)).Elem()
}

func (e DataTypeState) ToDataTypeStateOutput() DataTypeStateOutput {
	return pulumi.ToOutput(e).(DataTypeStateOutput)
}

func (e DataTypeState) ToDataTypeStateOutputWithContext(ctx context.Context) DataTypeStateOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DataTypeStateOutput)
}

func (e DataTypeState) ToDataTypeStatePtrOutput() DataTypeStatePtrOutput {
	return e.ToDataTypeStatePtrOutputWithContext(context.Background())
}

func (e DataTypeState) ToDataTypeStatePtrOutputWithContext(ctx context.Context) DataTypeStatePtrOutput {
	return DataTypeState(e).ToDataTypeStateOutputWithContext(ctx).ToDataTypeStatePtrOutputWithContext(ctx)
}

func (e DataTypeState) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DataTypeState) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DataTypeState) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DataTypeState) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DataTypeStateOutput struct{ *pulumi.OutputState }

func (DataTypeStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataTypeState)(nil)).Elem()
}

func (o DataTypeStateOutput) ToDataTypeStateOutput() DataTypeStateOutput {
	return o
}

func (o DataTypeStateOutput) ToDataTypeStateOutputWithContext(ctx context.Context) DataTypeStateOutput {
	return o
}

func (o DataTypeStateOutput) ToDataTypeStatePtrOutput() DataTypeStatePtrOutput {
	return o.ToDataTypeStatePtrOutputWithContext(context.Background())
}

func (o DataTypeStateOutput) ToDataTypeStatePtrOutputWithContext(ctx context.Context) DataTypeStatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataTypeState) *DataTypeState {
		return &v
	}).(DataTypeStatePtrOutput)
}

func (o DataTypeStateOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DataTypeStateOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DataTypeState) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DataTypeStateOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DataTypeStateOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DataTypeState) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DataTypeStatePtrOutput struct{ *pulumi.OutputState }

func (DataTypeStatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataTypeState)(nil)).Elem()
}

func (o DataTypeStatePtrOutput) ToDataTypeStatePtrOutput() DataTypeStatePtrOutput {
	return o
}

func (o DataTypeStatePtrOutput) ToDataTypeStatePtrOutputWithContext(ctx context.Context) DataTypeStatePtrOutput {
	return o
}

func (o DataTypeStatePtrOutput) Elem() DataTypeStateOutput {
	return o.ApplyT(func(v *DataTypeState) DataTypeState {
		if v != nil {
			return *v
		}
		var ret DataTypeState
		return ret
	}).(DataTypeStateOutput)
}

func (o DataTypeStatePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DataTypeStatePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DataTypeState) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DataTypeStateInput is an input type that accepts values of the DataTypeState enum
// A concrete instance of `DataTypeStateInput` can be one of the following:
//
//	DataTypeStateEnabled
//	DataTypeStateDisabled
type DataTypeStateInput interface {
	pulumi.Input

	ToDataTypeStateOutput() DataTypeStateOutput
	ToDataTypeStateOutputWithContext(context.Context) DataTypeStateOutput
}

var dataTypeStatePtrType = reflect.TypeOf((**DataTypeState)(nil)).Elem()

type DataTypeStatePtrInput interface {
	pulumi.Input

	ToDataTypeStatePtrOutput() DataTypeStatePtrOutput
	ToDataTypeStatePtrOutputWithContext(context.Context) DataTypeStatePtrOutput
}

type dataTypeStatePtr string

func DataTypeStatePtr(v string) DataTypeStatePtrInput {
	return (*dataTypeStatePtr)(&v)
}

func (*dataTypeStatePtr) ElementType() reflect.Type {
	return dataTypeStatePtrType
}

func (in *dataTypeStatePtr) ToDataTypeStatePtrOutput() DataTypeStatePtrOutput {
	return pulumi.ToOutput(in).(DataTypeStatePtrOutput)
}

func (in *dataTypeStatePtr) ToDataTypeStatePtrOutputWithContext(ctx context.Context) DataTypeStatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DataTypeStatePtrOutput)
}

// The V3 type of the mapped entity
type EntityMappingType string

const (
	// User account entity type
	EntityMappingTypeAccount = EntityMappingType("Account")
	// Host entity type
	EntityMappingTypeHost = EntityMappingType("Host")
	// IP address entity type
	EntityMappingTypeIP = EntityMappingType("IP")
	// Malware entity type
	EntityMappingTypeMalware = EntityMappingType("Malware")
	// System file entity type
	EntityMappingTypeFile = EntityMappingType("File")
	// Process entity type
	EntityMappingTypeProcess = EntityMappingType("Process")
	// Cloud app entity type
	EntityMappingTypeCloudApplication = EntityMappingType("CloudApplication")
	// DNS entity type
	EntityMappingTypeDNS = EntityMappingType("DNS")
	// Azure resource entity type
	EntityMappingTypeAzureResource = EntityMappingType("AzureResource")
	// File-hash entity type
	EntityMappingTypeFileHash = EntityMappingType("FileHash")
	// Registry key entity type
	EntityMappingTypeRegistryKey = EntityMappingType("RegistryKey")
	// Registry value entity type
	EntityMappingTypeRegistryValue = EntityMappingType("RegistryValue")
	// Security group entity type
	EntityMappingTypeSecurityGroup = EntityMappingType("SecurityGroup")
	// URL entity type
	EntityMappingTypeURL = EntityMappingType("URL")
	// Mailbox entity type
	EntityMappingTypeMailbox = EntityMappingType("Mailbox")
	// Mail cluster entity type
	EntityMappingTypeMailCluster = EntityMappingType("MailCluster")
	// Mail message entity type
	EntityMappingTypeMailMessage = EntityMappingType("MailMessage")
	// Submission mail entity type
	EntityMappingTypeSubmissionMail = EntityMappingType("SubmissionMail")
)

func (EntityMappingType) ElementType() reflect.Type {
	return reflect.TypeOf((*EntityMappingType)(nil)).Elem()
}

func (e EntityMappingType) ToEntityMappingTypeOutput() EntityMappingTypeOutput {
	return pulumi.ToOutput(e).(EntityMappingTypeOutput)
}

func (e EntityMappingType) ToEntityMappingTypeOutputWithContext(ctx context.Context) EntityMappingTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(EntityMappingTypeOutput)
}

func (e EntityMappingType) ToEntityMappingTypePtrOutput() EntityMappingTypePtrOutput {
	return e.ToEntityMappingTypePtrOutputWithContext(context.Background())
}

func (e EntityMappingType) ToEntityMappingTypePtrOutputWithContext(ctx context.Context) EntityMappingTypePtrOutput {
	return EntityMappingType(e).ToEntityMappingTypeOutputWithContext(ctx).ToEntityMappingTypePtrOutputWithContext(ctx)
}

func (e EntityMappingType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e EntityMappingType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e EntityMappingType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e EntityMappingType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type EntityMappingTypeOutput struct{ *pulumi.OutputState }

func (EntityMappingTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EntityMappingType)(nil)).Elem()
}

func (o EntityMappingTypeOutput) ToEntityMappingTypeOutput() EntityMappingTypeOutput {
	return o
}

func (o EntityMappingTypeOutput) ToEntityMappingTypeOutputWithContext(ctx context.Context) EntityMappingTypeOutput {
	return o
}

func (o EntityMappingTypeOutput) ToEntityMappingTypePtrOutput() EntityMappingTypePtrOutput {
	return o.ToEntityMappingTypePtrOutputWithContext(context.Background())
}

func (o EntityMappingTypeOutput) ToEntityMappingTypePtrOutputWithContext(ctx context.Context) EntityMappingTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EntityMappingType) *EntityMappingType {
		return &v
	}).(EntityMappingTypePtrOutput)
}

func (o EntityMappingTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o EntityMappingTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e EntityMappingType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o EntityMappingTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o EntityMappingTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e EntityMappingType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type EntityMappingTypePtrOutput struct{ *pulumi.OutputState }

func (EntityMappingTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EntityMappingType)(nil)).Elem()
}

func (o EntityMappingTypePtrOutput) ToEntityMappingTypePtrOutput() EntityMappingTypePtrOutput {
	return o
}

func (o EntityMappingTypePtrOutput) ToEntityMappingTypePtrOutputWithContext(ctx context.Context) EntityMappingTypePtrOutput {
	return o
}

func (o EntityMappingTypePtrOutput) Elem() EntityMappingTypeOutput {
	return o.ApplyT(func(v *EntityMappingType) EntityMappingType {
		if v != nil {
			return *v
		}
		var ret EntityMappingType
		return ret
	}).(EntityMappingTypeOutput)
}

func (o EntityMappingTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o EntityMappingTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *EntityMappingType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// EntityMappingTypeInput is an input type that accepts values of the EntityMappingType enum
// A concrete instance of `EntityMappingTypeInput` can be one of the following:
//
//	EntityMappingTypeAccount
//	EntityMappingTypeHost
//	EntityMappingTypeIP
//	EntityMappingTypeMalware
//	EntityMappingTypeFile
//	EntityMappingTypeProcess
//	EntityMappingTypeCloudApplication
//	EntityMappingTypeDNS
//	EntityMappingTypeAzureResource
//	EntityMappingTypeFileHash
//	EntityMappingTypeRegistryKey
//	EntityMappingTypeRegistryValue
//	EntityMappingTypeSecurityGroup
//	EntityMappingTypeURL
//	EntityMappingTypeMailbox
//	EntityMappingTypeMailCluster
//	EntityMappingTypeMailMessage
//	EntityMappingTypeSubmissionMail
type EntityMappingTypeInput interface {
	pulumi.Input

	ToEntityMappingTypeOutput() EntityMappingTypeOutput
	ToEntityMappingTypeOutputWithContext(context.Context) EntityMappingTypeOutput
}

var entityMappingTypePtrType = reflect.TypeOf((**EntityMappingType)(nil)).Elem()

type EntityMappingTypePtrInput interface {
	pulumi.Input

	ToEntityMappingTypePtrOutput() EntityMappingTypePtrOutput
	ToEntityMappingTypePtrOutputWithContext(context.Context) EntityMappingTypePtrOutput
}

type entityMappingTypePtr string

func EntityMappingTypePtr(v string) EntityMappingTypePtrInput {
	return (*entityMappingTypePtr)(&v)
}

func (*entityMappingTypePtr) ElementType() reflect.Type {
	return entityMappingTypePtrType
}

func (in *entityMappingTypePtr) ToEntityMappingTypePtrOutput() EntityMappingTypePtrOutput {
	return pulumi.ToOutput(in).(EntityMappingTypePtrOutput)
}

func (in *entityMappingTypePtr) ToEntityMappingTypePtrOutputWithContext(ctx context.Context) EntityMappingTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(EntityMappingTypePtrOutput)
}

// The event grouping aggregation kinds
type EventGroupingAggregationKind string

const (
	EventGroupingAggregationKindSingleAlert    = EventGroupingAggregationKind("SingleAlert")
	EventGroupingAggregationKindAlertPerResult = EventGroupingAggregationKind("AlertPerResult")
)

func (EventGroupingAggregationKind) ElementType() reflect.Type {
	return reflect.TypeOf((*EventGroupingAggregationKind)(nil)).Elem()
}

func (e EventGroupingAggregationKind) ToEventGroupingAggregationKindOutput() EventGroupingAggregationKindOutput {
	return pulumi.ToOutput(e).(EventGroupingAggregationKindOutput)
}

func (e EventGroupingAggregationKind) ToEventGroupingAggregationKindOutputWithContext(ctx context.Context) EventGroupingAggregationKindOutput {
	return pulumi.ToOutputWithContext(ctx, e).(EventGroupingAggregationKindOutput)
}

func (e EventGroupingAggregationKind) ToEventGroupingAggregationKindPtrOutput() EventGroupingAggregationKindPtrOutput {
	return e.ToEventGroupingAggregationKindPtrOutputWithContext(context.Background())
}

func (e EventGroupingAggregationKind) ToEventGroupingAggregationKindPtrOutputWithContext(ctx context.Context) EventGroupingAggregationKindPtrOutput {
	return EventGroupingAggregationKind(e).ToEventGroupingAggregationKindOutputWithContext(ctx).ToEventGroupingAggregationKindPtrOutputWithContext(ctx)
}

func (e EventGroupingAggregationKind) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e EventGroupingAggregationKind) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e EventGroupingAggregationKind) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e EventGroupingAggregationKind) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type EventGroupingAggregationKindOutput struct{ *pulumi.OutputState }

func (EventGroupingAggregationKindOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EventGroupingAggregationKind)(nil)).Elem()
}

func (o EventGroupingAggregationKindOutput) ToEventGroupingAggregationKindOutput() EventGroupingAggregationKindOutput {
	return o
}

func (o EventGroupingAggregationKindOutput) ToEventGroupingAggregationKindOutputWithContext(ctx context.Context) EventGroupingAggregationKindOutput {
	return o
}

func (o EventGroupingAggregationKindOutput) ToEventGroupingAggregationKindPtrOutput() EventGroupingAggregationKindPtrOutput {
	return o.ToEventGroupingAggregationKindPtrOutputWithContext(context.Background())
}

func (o EventGroupingAggregationKindOutput) ToEventGroupingAggregationKindPtrOutputWithContext(ctx context.Context) EventGroupingAggregationKindPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EventGroupingAggregationKind) *EventGroupingAggregationKind {
		return &v
	}).(EventGroupingAggregationKindPtrOutput)
}

func (o EventGroupingAggregationKindOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o EventGroupingAggregationKindOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e EventGroupingAggregationKind) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o EventGroupingAggregationKindOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o EventGroupingAggregationKindOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e EventGroupingAggregationKind) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type EventGroupingAggregationKindPtrOutput struct{ *pulumi.OutputState }

func (EventGroupingAggregationKindPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EventGroupingAggregationKind)(nil)).Elem()
}

func (o EventGroupingAggregationKindPtrOutput) ToEventGroupingAggregationKindPtrOutput() EventGroupingAggregationKindPtrOutput {
	return o
}

func (o EventGroupingAggregationKindPtrOutput) ToEventGroupingAggregationKindPtrOutputWithContext(ctx context.Context) EventGroupingAggregationKindPtrOutput {
	return o
}

func (o EventGroupingAggregationKindPtrOutput) Elem() EventGroupingAggregationKindOutput {
	return o.ApplyT(func(v *EventGroupingAggregationKind) EventGroupingAggregationKind {
		if v != nil {
			return *v
		}
		var ret EventGroupingAggregationKind
		return ret
	}).(EventGroupingAggregationKindOutput)
}

func (o EventGroupingAggregationKindPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o EventGroupingAggregationKindPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *EventGroupingAggregationKind) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// EventGroupingAggregationKindInput is an input type that accepts values of the EventGroupingAggregationKind enum
// A concrete instance of `EventGroupingAggregationKindInput` can be one of the following:
//
//	EventGroupingAggregationKindSingleAlert
//	EventGroupingAggregationKindAlertPerResult
type EventGroupingAggregationKindInput interface {
	pulumi.Input

	ToEventGroupingAggregationKindOutput() EventGroupingAggregationKindOutput
	ToEventGroupingAggregationKindOutputWithContext(context.Context) EventGroupingAggregationKindOutput
}

var eventGroupingAggregationKindPtrType = reflect.TypeOf((**EventGroupingAggregationKind)(nil)).Elem()

type EventGroupingAggregationKindPtrInput interface {
	pulumi.Input

	ToEventGroupingAggregationKindPtrOutput() EventGroupingAggregationKindPtrOutput
	ToEventGroupingAggregationKindPtrOutputWithContext(context.Context) EventGroupingAggregationKindPtrOutput
}

type eventGroupingAggregationKindPtr string

func EventGroupingAggregationKindPtr(v string) EventGroupingAggregationKindPtrInput {
	return (*eventGroupingAggregationKindPtr)(&v)
}

func (*eventGroupingAggregationKindPtr) ElementType() reflect.Type {
	return eventGroupingAggregationKindPtrType
}

func (in *eventGroupingAggregationKindPtr) ToEventGroupingAggregationKindPtrOutput() EventGroupingAggregationKindPtrOutput {
	return pulumi.ToOutput(in).(EventGroupingAggregationKindPtrOutput)
}

func (in *eventGroupingAggregationKindPtr) ToEventGroupingAggregationKindPtrOutputWithContext(ctx context.Context) EventGroupingAggregationKindPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(EventGroupingAggregationKindPtrOutput)
}

// Flag indicates if this package is in preview.
type Flag string

const (
	FlagTrue  = Flag("true")
	FlagFalse = Flag("false")
)

func (Flag) ElementType() reflect.Type {
	return reflect.TypeOf((*Flag)(nil)).Elem()
}

func (e Flag) ToFlagOutput() FlagOutput {
	return pulumi.ToOutput(e).(FlagOutput)
}

func (e Flag) ToFlagOutputWithContext(ctx context.Context) FlagOutput {
	return pulumi.ToOutputWithContext(ctx, e).(FlagOutput)
}

func (e Flag) ToFlagPtrOutput() FlagPtrOutput {
	return e.ToFlagPtrOutputWithContext(context.Background())
}

func (e Flag) ToFlagPtrOutputWithContext(ctx context.Context) FlagPtrOutput {
	return Flag(e).ToFlagOutputWithContext(ctx).ToFlagPtrOutputWithContext(ctx)
}

func (e Flag) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e Flag) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e Flag) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e Flag) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type FlagOutput struct{ *pulumi.OutputState }

func (FlagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Flag)(nil)).Elem()
}

func (o FlagOutput) ToFlagOutput() FlagOutput {
	return o
}

func (o FlagOutput) ToFlagOutputWithContext(ctx context.Context) FlagOutput {
	return o
}

func (o FlagOutput) ToFlagPtrOutput() FlagPtrOutput {
	return o.ToFlagPtrOutputWithContext(context.Background())
}

func (o FlagOutput) ToFlagPtrOutputWithContext(ctx context.Context) FlagPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Flag) *Flag {
		return &v
	}).(FlagPtrOutput)
}

func (o FlagOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o FlagOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e Flag) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o FlagOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o FlagOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e Flag) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type FlagPtrOutput struct{ *pulumi.OutputState }

func (FlagPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Flag)(nil)).Elem()
}

func (o FlagPtrOutput) ToFlagPtrOutput() FlagPtrOutput {
	return o
}

func (o FlagPtrOutput) ToFlagPtrOutputWithContext(ctx context.Context) FlagPtrOutput {
	return o
}

func (o FlagPtrOutput) Elem() FlagOutput {
	return o.ApplyT(func(v *Flag) Flag {
		if v != nil {
			return *v
		}
		var ret Flag
		return ret
	}).(FlagOutput)
}

func (o FlagPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o FlagPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *Flag) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// FlagInput is an input type that accepts values of the Flag enum
// A concrete instance of `FlagInput` can be one of the following:
//
//	FlagTrue
//	FlagFalse
type FlagInput interface {
	pulumi.Input

	ToFlagOutput() FlagOutput
	ToFlagOutputWithContext(context.Context) FlagOutput
}

var flagPtrType = reflect.TypeOf((**Flag)(nil)).Elem()

type FlagPtrInput interface {
	pulumi.Input

	ToFlagPtrOutput() FlagPtrOutput
	ToFlagPtrOutputWithContext(context.Context) FlagPtrOutput
}

type flagPtr string

func FlagPtr(v string) FlagPtrInput {
	return (*flagPtr)(&v)
}

func (*flagPtr) ElementType() reflect.Type {
	return flagPtrType
}

func (in *flagPtr) ToFlagPtrOutput() FlagPtrOutput {
	return pulumi.ToOutput(in).(FlagPtrOutput)
}

func (in *flagPtr) ToFlagPtrOutputWithContext(ctx context.Context) FlagPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(FlagPtrOutput)
}

// The reason the incident was closed
type IncidentClassification string

const (
	// Incident classification was undetermined
	IncidentClassificationUndetermined = IncidentClassification("Undetermined")
	// Incident was true positive
	IncidentClassificationTruePositive = IncidentClassification("TruePositive")
	// Incident was benign positive
	IncidentClassificationBenignPositive = IncidentClassification("BenignPositive")
	// Incident was false positive
	IncidentClassificationFalsePositive = IncidentClassification("FalsePositive")
)

func (IncidentClassification) ElementType() reflect.Type {
	return reflect.TypeOf((*IncidentClassification)(nil)).Elem()
}

func (e IncidentClassification) ToIncidentClassificationOutput() IncidentClassificationOutput {
	return pulumi.ToOutput(e).(IncidentClassificationOutput)
}

func (e IncidentClassification) ToIncidentClassificationOutputWithContext(ctx context.Context) IncidentClassificationOutput {
	return pulumi.ToOutputWithContext(ctx, e).(IncidentClassificationOutput)
}

func (e IncidentClassification) ToIncidentClassificationPtrOutput() IncidentClassificationPtrOutput {
	return e.ToIncidentClassificationPtrOutputWithContext(context.Background())
}

func (e IncidentClassification) ToIncidentClassificationPtrOutputWithContext(ctx context.Context) IncidentClassificationPtrOutput {
	return IncidentClassification(e).ToIncidentClassificationOutputWithContext(ctx).ToIncidentClassificationPtrOutputWithContext(ctx)
}

func (e IncidentClassification) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e IncidentClassification) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e IncidentClassification) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e IncidentClassification) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type IncidentClassificationOutput struct{ *pulumi.OutputState }

func (IncidentClassificationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IncidentClassification)(nil)).Elem()
}

func (o IncidentClassificationOutput) ToIncidentClassificationOutput() IncidentClassificationOutput {
	return o
}

func (o IncidentClassificationOutput) ToIncidentClassificationOutputWithContext(ctx context.Context) IncidentClassificationOutput {
	return o
}

func (o IncidentClassificationOutput) ToIncidentClassificationPtrOutput() IncidentClassificationPtrOutput {
	return o.ToIncidentClassificationPtrOutputWithContext(context.Background())
}

func (o IncidentClassificationOutput) ToIncidentClassificationPtrOutputWithContext(ctx context.Context) IncidentClassificationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IncidentClassification) *IncidentClassification {
		return &v
	}).(IncidentClassificationPtrOutput)
}

func (o IncidentClassificationOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o IncidentClassificationOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e IncidentClassification) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o IncidentClassificationOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o IncidentClassificationOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e IncidentClassification) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type IncidentClassificationPtrOutput struct{ *pulumi.OutputState }

func (IncidentClassificationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IncidentClassification)(nil)).Elem()
}

func (o IncidentClassificationPtrOutput) ToIncidentClassificationPtrOutput() IncidentClassificationPtrOutput {
	return o
}

func (o IncidentClassificationPtrOutput) ToIncidentClassificationPtrOutputWithContext(ctx context.Context) IncidentClassificationPtrOutput {
	return o
}

func (o IncidentClassificationPtrOutput) Elem() IncidentClassificationOutput {
	return o.ApplyT(func(v *IncidentClassification) IncidentClassification {
		if v != nil {
			return *v
		}
		var ret IncidentClassification
		return ret
	}).(IncidentClassificationOutput)
}

func (o IncidentClassificationPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o IncidentClassificationPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *IncidentClassification) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// IncidentClassificationInput is an input type that accepts values of the IncidentClassification enum
// A concrete instance of `IncidentClassificationInput` can be one of the following:
//
//	IncidentClassificationUndetermined
//	IncidentClassificationTruePositive
//	IncidentClassificationBenignPositive
//	IncidentClassificationFalsePositive
type IncidentClassificationInput interface {
	pulumi.Input

	ToIncidentClassificationOutput() IncidentClassificationOutput
	ToIncidentClassificationOutputWithContext(context.Context) IncidentClassificationOutput
}

var incidentClassificationPtrType = reflect.TypeOf((**IncidentClassification)(nil)).Elem()

type IncidentClassificationPtrInput interface {
	pulumi.Input

	ToIncidentClassificationPtrOutput() IncidentClassificationPtrOutput
	ToIncidentClassificationPtrOutputWithContext(context.Context) IncidentClassificationPtrOutput
}

type incidentClassificationPtr string

func IncidentClassificationPtr(v string) IncidentClassificationPtrInput {
	return (*incidentClassificationPtr)(&v)
}

func (*incidentClassificationPtr) ElementType() reflect.Type {
	return incidentClassificationPtrType
}

func (in *incidentClassificationPtr) ToIncidentClassificationPtrOutput() IncidentClassificationPtrOutput {
	return pulumi.ToOutput(in).(IncidentClassificationPtrOutput)
}

func (in *incidentClassificationPtr) ToIncidentClassificationPtrOutputWithContext(ctx context.Context) IncidentClassificationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(IncidentClassificationPtrOutput)
}

// The classification reason the incident was closed with
type IncidentClassificationReason string

const (
	// Classification reason was suspicious activity
	IncidentClassificationReasonSuspiciousActivity = IncidentClassificationReason("SuspiciousActivity")
	// Classification reason was suspicious but expected
	IncidentClassificationReasonSuspiciousButExpected = IncidentClassificationReason("SuspiciousButExpected")
	// Classification reason was incorrect alert logic
	IncidentClassificationReasonIncorrectAlertLogic = IncidentClassificationReason("IncorrectAlertLogic")
	// Classification reason was inaccurate data
	IncidentClassificationReasonInaccurateData = IncidentClassificationReason("InaccurateData")
)

func (IncidentClassificationReason) ElementType() reflect.Type {
	return reflect.TypeOf((*IncidentClassificationReason)(nil)).Elem()
}

func (e IncidentClassificationReason) ToIncidentClassificationReasonOutput() IncidentClassificationReasonOutput {
	return pulumi.ToOutput(e).(IncidentClassificationReasonOutput)
}

func (e IncidentClassificationReason) ToIncidentClassificationReasonOutputWithContext(ctx context.Context) IncidentClassificationReasonOutput {
	return pulumi.ToOutputWithContext(ctx, e).(IncidentClassificationReasonOutput)
}

func (e IncidentClassificationReason) ToIncidentClassificationReasonPtrOutput() IncidentClassificationReasonPtrOutput {
	return e.ToIncidentClassificationReasonPtrOutputWithContext(context.Background())
}

func (e IncidentClassificationReason) ToIncidentClassificationReasonPtrOutputWithContext(ctx context.Context) IncidentClassificationReasonPtrOutput {
	return IncidentClassificationReason(e).ToIncidentClassificationReasonOutputWithContext(ctx).ToIncidentClassificationReasonPtrOutputWithContext(ctx)
}

func (e IncidentClassificationReason) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e IncidentClassificationReason) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e IncidentClassificationReason) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e IncidentClassificationReason) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type IncidentClassificationReasonOutput struct{ *pulumi.OutputState }

func (IncidentClassificationReasonOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IncidentClassificationReason)(nil)).Elem()
}

func (o IncidentClassificationReasonOutput) ToIncidentClassificationReasonOutput() IncidentClassificationReasonOutput {
	return o
}

func (o IncidentClassificationReasonOutput) ToIncidentClassificationReasonOutputWithContext(ctx context.Context) IncidentClassificationReasonOutput {
	return o
}

func (o IncidentClassificationReasonOutput) ToIncidentClassificationReasonPtrOutput() IncidentClassificationReasonPtrOutput {
	return o.ToIncidentClassificationReasonPtrOutputWithContext(context.Background())
}

func (o IncidentClassificationReasonOutput) ToIncidentClassificationReasonPtrOutputWithContext(ctx context.Context) IncidentClassificationReasonPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IncidentClassificationReason) *IncidentClassificationReason {
		return &v
	}).(IncidentClassificationReasonPtrOutput)
}

func (o IncidentClassificationReasonOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o IncidentClassificationReasonOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e IncidentClassificationReason) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o IncidentClassificationReasonOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o IncidentClassificationReasonOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e IncidentClassificationReason) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type IncidentClassificationReasonPtrOutput struct{ *pulumi.OutputState }

func (IncidentClassificationReasonPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IncidentClassificationReason)(nil)).Elem()
}

func (o IncidentClassificationReasonPtrOutput) ToIncidentClassificationReasonPtrOutput() IncidentClassificationReasonPtrOutput {
	return o
}

func (o IncidentClassificationReasonPtrOutput) ToIncidentClassificationReasonPtrOutputWithContext(ctx context.Context) IncidentClassificationReasonPtrOutput {
	return o
}

func (o IncidentClassificationReasonPtrOutput) Elem() IncidentClassificationReasonOutput {
	return o.ApplyT(func(v *IncidentClassificationReason) IncidentClassificationReason {
		if v != nil {
			return *v
		}
		var ret IncidentClassificationReason
		return ret
	}).(IncidentClassificationReasonOutput)
}

func (o IncidentClassificationReasonPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o IncidentClassificationReasonPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *IncidentClassificationReason) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// IncidentClassificationReasonInput is an input type that accepts values of the IncidentClassificationReason enum
// A concrete instance of `IncidentClassificationReasonInput` can be one of the following:
//
//	IncidentClassificationReasonSuspiciousActivity
//	IncidentClassificationReasonSuspiciousButExpected
//	IncidentClassificationReasonIncorrectAlertLogic
//	IncidentClassificationReasonInaccurateData
type IncidentClassificationReasonInput interface {
	pulumi.Input

	ToIncidentClassificationReasonOutput() IncidentClassificationReasonOutput
	ToIncidentClassificationReasonOutputWithContext(context.Context) IncidentClassificationReasonOutput
}

var incidentClassificationReasonPtrType = reflect.TypeOf((**IncidentClassificationReason)(nil)).Elem()

type IncidentClassificationReasonPtrInput interface {
	pulumi.Input

	ToIncidentClassificationReasonPtrOutput() IncidentClassificationReasonPtrOutput
	ToIncidentClassificationReasonPtrOutputWithContext(context.Context) IncidentClassificationReasonPtrOutput
}

type incidentClassificationReasonPtr string

func IncidentClassificationReasonPtr(v string) IncidentClassificationReasonPtrInput {
	return (*incidentClassificationReasonPtr)(&v)
}

func (*incidentClassificationReasonPtr) ElementType() reflect.Type {
	return incidentClassificationReasonPtrType
}

func (in *incidentClassificationReasonPtr) ToIncidentClassificationReasonPtrOutput() IncidentClassificationReasonPtrOutput {
	return pulumi.ToOutput(in).(IncidentClassificationReasonPtrOutput)
}

func (in *incidentClassificationReasonPtr) ToIncidentClassificationReasonPtrOutputWithContext(ctx context.Context) IncidentClassificationReasonPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(IncidentClassificationReasonPtrOutput)
}

// The severity of the incident
type IncidentSeverity string

const (
	// High severity
	IncidentSeverityHigh = IncidentSeverity("High")
	// Medium severity
	IncidentSeverityMedium = IncidentSeverity("Medium")
	// Low severity
	IncidentSeverityLow = IncidentSeverity("Low")
	// Informational severity
	IncidentSeverityInformational = IncidentSeverity("Informational")
)

func (IncidentSeverity) ElementType() reflect.Type {
	return reflect.TypeOf((*IncidentSeverity)(nil)).Elem()
}

func (e IncidentSeverity) ToIncidentSeverityOutput() IncidentSeverityOutput {
	return pulumi.ToOutput(e).(IncidentSeverityOutput)
}

func (e IncidentSeverity) ToIncidentSeverityOutputWithContext(ctx context.Context) IncidentSeverityOutput {
	return pulumi.ToOutputWithContext(ctx, e).(IncidentSeverityOutput)
}

func (e IncidentSeverity) ToIncidentSeverityPtrOutput() IncidentSeverityPtrOutput {
	return e.ToIncidentSeverityPtrOutputWithContext(context.Background())
}

func (e IncidentSeverity) ToIncidentSeverityPtrOutputWithContext(ctx context.Context) IncidentSeverityPtrOutput {
	return IncidentSeverity(e).ToIncidentSeverityOutputWithContext(ctx).ToIncidentSeverityPtrOutputWithContext(ctx)
}

func (e IncidentSeverity) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e IncidentSeverity) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e IncidentSeverity) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e IncidentSeverity) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type IncidentSeverityOutput struct{ *pulumi.OutputState }

func (IncidentSeverityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IncidentSeverity)(nil)).Elem()
}

func (o IncidentSeverityOutput) ToIncidentSeverityOutput() IncidentSeverityOutput {
	return o
}

func (o IncidentSeverityOutput) ToIncidentSeverityOutputWithContext(ctx context.Context) IncidentSeverityOutput {
	return o
}

func (o IncidentSeverityOutput) ToIncidentSeverityPtrOutput() IncidentSeverityPtrOutput {
	return o.ToIncidentSeverityPtrOutputWithContext(context.Background())
}

func (o IncidentSeverityOutput) ToIncidentSeverityPtrOutputWithContext(ctx context.Context) IncidentSeverityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IncidentSeverity) *IncidentSeverity {
		return &v
	}).(IncidentSeverityPtrOutput)
}

func (o IncidentSeverityOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o IncidentSeverityOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e IncidentSeverity) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o IncidentSeverityOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o IncidentSeverityOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e IncidentSeverity) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type IncidentSeverityPtrOutput struct{ *pulumi.OutputState }

func (IncidentSeverityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IncidentSeverity)(nil)).Elem()
}

func (o IncidentSeverityPtrOutput) ToIncidentSeverityPtrOutput() IncidentSeverityPtrOutput {
	return o
}

func (o IncidentSeverityPtrOutput) ToIncidentSeverityPtrOutputWithContext(ctx context.Context) IncidentSeverityPtrOutput {
	return o
}

func (o IncidentSeverityPtrOutput) Elem() IncidentSeverityOutput {
	return o.ApplyT(func(v *IncidentSeverity) IncidentSeverity {
		if v != nil {
			return *v
		}
		var ret IncidentSeverity
		return ret
	}).(IncidentSeverityOutput)
}

func (o IncidentSeverityPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o IncidentSeverityPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *IncidentSeverity) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// IncidentSeverityInput is an input type that accepts values of the IncidentSeverity enum
// A concrete instance of `IncidentSeverityInput` can be one of the following:
//
//	IncidentSeverityHigh
//	IncidentSeverityMedium
//	IncidentSeverityLow
//	IncidentSeverityInformational
type IncidentSeverityInput interface {
	pulumi.Input

	ToIncidentSeverityOutput() IncidentSeverityOutput
	ToIncidentSeverityOutputWithContext(context.Context) IncidentSeverityOutput
}

var incidentSeverityPtrType = reflect.TypeOf((**IncidentSeverity)(nil)).Elem()

type IncidentSeverityPtrInput interface {
	pulumi.Input

	ToIncidentSeverityPtrOutput() IncidentSeverityPtrOutput
	ToIncidentSeverityPtrOutputWithContext(context.Context) IncidentSeverityPtrOutput
}

type incidentSeverityPtr string

func IncidentSeverityPtr(v string) IncidentSeverityPtrInput {
	return (*incidentSeverityPtr)(&v)
}

func (*incidentSeverityPtr) ElementType() reflect.Type {
	return incidentSeverityPtrType
}

func (in *incidentSeverityPtr) ToIncidentSeverityPtrOutput() IncidentSeverityPtrOutput {
	return pulumi.ToOutput(in).(IncidentSeverityPtrOutput)
}

func (in *incidentSeverityPtr) ToIncidentSeverityPtrOutputWithContext(ctx context.Context) IncidentSeverityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(IncidentSeverityPtrOutput)
}

// The status of the incident
type IncidentStatus string

const (
	// An active incident which isn't being handled currently
	IncidentStatusNew = IncidentStatus("New")
	// An active incident which is being handled
	IncidentStatusActive = IncidentStatus("Active")
	// A non-active incident
	IncidentStatusClosed = IncidentStatus("Closed")
)

func (IncidentStatus) ElementType() reflect.Type {
	return reflect.TypeOf((*IncidentStatus)(nil)).Elem()
}

func (e IncidentStatus) ToIncidentStatusOutput() IncidentStatusOutput {
	return pulumi.ToOutput(e).(IncidentStatusOutput)
}

func (e IncidentStatus) ToIncidentStatusOutputWithContext(ctx context.Context) IncidentStatusOutput {
	return pulumi.ToOutputWithContext(ctx, e).(IncidentStatusOutput)
}

func (e IncidentStatus) ToIncidentStatusPtrOutput() IncidentStatusPtrOutput {
	return e.ToIncidentStatusPtrOutputWithContext(context.Background())
}

func (e IncidentStatus) ToIncidentStatusPtrOutputWithContext(ctx context.Context) IncidentStatusPtrOutput {
	return IncidentStatus(e).ToIncidentStatusOutputWithContext(ctx).ToIncidentStatusPtrOutputWithContext(ctx)
}

func (e IncidentStatus) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e IncidentStatus) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e IncidentStatus) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e IncidentStatus) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type IncidentStatusOutput struct{ *pulumi.OutputState }

func (IncidentStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IncidentStatus)(nil)).Elem()
}

func (o IncidentStatusOutput) ToIncidentStatusOutput() IncidentStatusOutput {
	return o
}

func (o IncidentStatusOutput) ToIncidentStatusOutputWithContext(ctx context.Context) IncidentStatusOutput {
	return o
}

func (o IncidentStatusOutput) ToIncidentStatusPtrOutput() IncidentStatusPtrOutput {
	return o.ToIncidentStatusPtrOutputWithContext(context.Background())
}

func (o IncidentStatusOutput) ToIncidentStatusPtrOutputWithContext(ctx context.Context) IncidentStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IncidentStatus) *IncidentStatus {
		return &v
	}).(IncidentStatusPtrOutput)
}

func (o IncidentStatusOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o IncidentStatusOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e IncidentStatus) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o IncidentStatusOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o IncidentStatusOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e IncidentStatus) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type IncidentStatusPtrOutput struct{ *pulumi.OutputState }

func (IncidentStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IncidentStatus)(nil)).Elem()
}

func (o IncidentStatusPtrOutput) ToIncidentStatusPtrOutput() IncidentStatusPtrOutput {
	return o
}

func (o IncidentStatusPtrOutput) ToIncidentStatusPtrOutputWithContext(ctx context.Context) IncidentStatusPtrOutput {
	return o
}

func (o IncidentStatusPtrOutput) Elem() IncidentStatusOutput {
	return o.ApplyT(func(v *IncidentStatus) IncidentStatus {
		if v != nil {
			return *v
		}
		var ret IncidentStatus
		return ret
	}).(IncidentStatusOutput)
}

func (o IncidentStatusPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o IncidentStatusPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *IncidentStatus) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// IncidentStatusInput is an input type that accepts values of the IncidentStatus enum
// A concrete instance of `IncidentStatusInput` can be one of the following:
//
//	IncidentStatusNew
//	IncidentStatusActive
//	IncidentStatusClosed
type IncidentStatusInput interface {
	pulumi.Input

	ToIncidentStatusOutput() IncidentStatusOutput
	ToIncidentStatusOutputWithContext(context.Context) IncidentStatusOutput
}

var incidentStatusPtrType = reflect.TypeOf((**IncidentStatus)(nil)).Elem()

type IncidentStatusPtrInput interface {
	pulumi.Input

	ToIncidentStatusPtrOutput() IncidentStatusPtrOutput
	ToIncidentStatusPtrOutputWithContext(context.Context) IncidentStatusPtrOutput
}

type incidentStatusPtr string

func IncidentStatusPtr(v string) IncidentStatusPtrInput {
	return (*incidentStatusPtr)(&v)
}

func (*incidentStatusPtr) ElementType() reflect.Type {
	return incidentStatusPtrType
}

func (in *incidentStatusPtr) ToIncidentStatusPtrOutput() IncidentStatusPtrOutput {
	return pulumi.ToOutput(in).(IncidentStatusPtrOutput)
}

func (in *incidentStatusPtr) ToIncidentStatusPtrOutputWithContext(ctx context.Context) IncidentStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(IncidentStatusPtrOutput)
}

// The status of the task
type IncidentTaskStatus string

const (
	// A new task
	IncidentTaskStatusNew = IncidentTaskStatus("New")
	// A completed task
	IncidentTaskStatusCompleted = IncidentTaskStatus("Completed")
)

func (IncidentTaskStatus) ElementType() reflect.Type {
	return reflect.TypeOf((*IncidentTaskStatus)(nil)).Elem()
}

func (e IncidentTaskStatus) ToIncidentTaskStatusOutput() IncidentTaskStatusOutput {
	return pulumi.ToOutput(e).(IncidentTaskStatusOutput)
}

func (e IncidentTaskStatus) ToIncidentTaskStatusOutputWithContext(ctx context.Context) IncidentTaskStatusOutput {
	return pulumi.ToOutputWithContext(ctx, e).(IncidentTaskStatusOutput)
}

func (e IncidentTaskStatus) ToIncidentTaskStatusPtrOutput() IncidentTaskStatusPtrOutput {
	return e.ToIncidentTaskStatusPtrOutputWithContext(context.Background())
}

func (e IncidentTaskStatus) ToIncidentTaskStatusPtrOutputWithContext(ctx context.Context) IncidentTaskStatusPtrOutput {
	return IncidentTaskStatus(e).ToIncidentTaskStatusOutputWithContext(ctx).ToIncidentTaskStatusPtrOutputWithContext(ctx)
}

func (e IncidentTaskStatus) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e IncidentTaskStatus) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e IncidentTaskStatus) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e IncidentTaskStatus) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type IncidentTaskStatusOutput struct{ *pulumi.OutputState }

func (IncidentTaskStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IncidentTaskStatus)(nil)).Elem()
}

func (o IncidentTaskStatusOutput) ToIncidentTaskStatusOutput() IncidentTaskStatusOutput {
	return o
}

func (o IncidentTaskStatusOutput) ToIncidentTaskStatusOutputWithContext(ctx context.Context) IncidentTaskStatusOutput {
	return o
}

func (o IncidentTaskStatusOutput) ToIncidentTaskStatusPtrOutput() IncidentTaskStatusPtrOutput {
	return o.ToIncidentTaskStatusPtrOutputWithContext(context.Background())
}

func (o IncidentTaskStatusOutput) ToIncidentTaskStatusPtrOutputWithContext(ctx context.Context) IncidentTaskStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IncidentTaskStatus) *IncidentTaskStatus {
		return &v
	}).(IncidentTaskStatusPtrOutput)
}

func (o IncidentTaskStatusOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o IncidentTaskStatusOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e IncidentTaskStatus) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o IncidentTaskStatusOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o IncidentTaskStatusOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e IncidentTaskStatus) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type IncidentTaskStatusPtrOutput struct{ *pulumi.OutputState }

func (IncidentTaskStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IncidentTaskStatus)(nil)).Elem()
}

func (o IncidentTaskStatusPtrOutput) ToIncidentTaskStatusPtrOutput() IncidentTaskStatusPtrOutput {
	return o
}

func (o IncidentTaskStatusPtrOutput) ToIncidentTaskStatusPtrOutputWithContext(ctx context.Context) IncidentTaskStatusPtrOutput {
	return o
}

func (o IncidentTaskStatusPtrOutput) Elem() IncidentTaskStatusOutput {
	return o.ApplyT(func(v *IncidentTaskStatus) IncidentTaskStatus {
		if v != nil {
			return *v
		}
		var ret IncidentTaskStatus
		return ret
	}).(IncidentTaskStatusOutput)
}

func (o IncidentTaskStatusPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o IncidentTaskStatusPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *IncidentTaskStatus) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// IncidentTaskStatusInput is an input type that accepts values of the IncidentTaskStatus enum
// A concrete instance of `IncidentTaskStatusInput` can be one of the following:
//
//	IncidentTaskStatusNew
//	IncidentTaskStatusCompleted
type IncidentTaskStatusInput interface {
	pulumi.Input

	ToIncidentTaskStatusOutput() IncidentTaskStatusOutput
	ToIncidentTaskStatusOutputWithContext(context.Context) IncidentTaskStatusOutput
}

var incidentTaskStatusPtrType = reflect.TypeOf((**IncidentTaskStatus)(nil)).Elem()

type IncidentTaskStatusPtrInput interface {
	pulumi.Input

	ToIncidentTaskStatusPtrOutput() IncidentTaskStatusPtrOutput
	ToIncidentTaskStatusPtrOutputWithContext(context.Context) IncidentTaskStatusPtrOutput
}

type incidentTaskStatusPtr string

func IncidentTaskStatusPtr(v string) IncidentTaskStatusPtrInput {
	return (*incidentTaskStatusPtr)(&v)
}

func (*incidentTaskStatusPtr) ElementType() reflect.Type {
	return incidentTaskStatusPtrType
}

func (in *incidentTaskStatusPtr) ToIncidentTaskStatusPtrOutput() IncidentTaskStatusPtrOutput {
	return pulumi.ToOutput(in).(IncidentTaskStatusPtrOutput)
}

func (in *incidentTaskStatusPtr) ToIncidentTaskStatusPtrOutputWithContext(ctx context.Context) IncidentTaskStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(IncidentTaskStatusPtrOutput)
}

// Type of the content item we depend on
type Kind string

const (
	KindDataConnector            = Kind("DataConnector")
	KindDataType                 = Kind("DataType")
	KindWorkbook                 = Kind("Workbook")
	KindWorkbookTemplate         = Kind("WorkbookTemplate")
	KindPlaybook                 = Kind("Playbook")
	KindPlaybookTemplate         = Kind("PlaybookTemplate")
	KindAnalyticsRuleTemplate    = Kind("AnalyticsRuleTemplate")
	KindAnalyticsRule            = Kind("AnalyticsRule")
	KindHuntingQuery             = Kind("HuntingQuery")
	KindInvestigationQuery       = Kind("InvestigationQuery")
	KindParser                   = Kind("Parser")
	KindWatchlist                = Kind("Watchlist")
	KindWatchlistTemplate        = Kind("WatchlistTemplate")
	KindSolution                 = Kind("Solution")
	KindAzureFunction            = Kind("AzureFunction")
	KindLogicAppsCustomConnector = Kind("LogicAppsCustomConnector")
	KindAutomationRule           = Kind("AutomationRule")
)

func (Kind) ElementType() reflect.Type {
	return reflect.TypeOf((*Kind)(nil)).Elem()
}

func (e Kind) ToKindOutput() KindOutput {
	return pulumi.ToOutput(e).(KindOutput)
}

func (e Kind) ToKindOutputWithContext(ctx context.Context) KindOutput {
	return pulumi.ToOutputWithContext(ctx, e).(KindOutput)
}

func (e Kind) ToKindPtrOutput() KindPtrOutput {
	return e.ToKindPtrOutputWithContext(context.Background())
}

func (e Kind) ToKindPtrOutputWithContext(ctx context.Context) KindPtrOutput {
	return Kind(e).ToKindOutputWithContext(ctx).ToKindPtrOutputWithContext(ctx)
}

func (e Kind) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e Kind) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e Kind) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e Kind) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type KindOutput struct{ *pulumi.OutputState }

func (KindOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Kind)(nil)).Elem()
}

func (o KindOutput) ToKindOutput() KindOutput {
	return o
}

func (o KindOutput) ToKindOutputWithContext(ctx context.Context) KindOutput {
	return o
}

func (o KindOutput) ToKindPtrOutput() KindPtrOutput {
	return o.ToKindPtrOutputWithContext(context.Background())
}

func (o KindOutput) ToKindPtrOutputWithContext(ctx context.Context) KindPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Kind) *Kind {
		return &v
	}).(KindPtrOutput)
}

func (o KindOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o KindOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e Kind) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o KindOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o KindOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e Kind) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type KindPtrOutput struct{ *pulumi.OutputState }

func (KindPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Kind)(nil)).Elem()
}

func (o KindPtrOutput) ToKindPtrOutput() KindPtrOutput {
	return o
}

func (o KindPtrOutput) ToKindPtrOutputWithContext(ctx context.Context) KindPtrOutput {
	return o
}

func (o KindPtrOutput) Elem() KindOutput {
	return o.ApplyT(func(v *Kind) Kind {
		if v != nil {
			return *v
		}
		var ret Kind
		return ret
	}).(KindOutput)
}

func (o KindPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o KindPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *Kind) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// KindInput is an input type that accepts values of the Kind enum
// A concrete instance of `KindInput` can be one of the following:
//
//	KindDataConnector
//	KindDataType
//	KindWorkbook
//	KindWorkbookTemplate
//	KindPlaybook
//	KindPlaybookTemplate
//	KindAnalyticsRuleTemplate
//	KindAnalyticsRule
//	KindHuntingQuery
//	KindInvestigationQuery
//	KindParser
//	KindWatchlist
//	KindWatchlistTemplate
//	KindSolution
//	KindAzureFunction
//	KindLogicAppsCustomConnector
//	KindAutomationRule
type KindInput interface {
	pulumi.Input

	ToKindOutput() KindOutput
	ToKindOutputWithContext(context.Context) KindOutput
}

var kindPtrType = reflect.TypeOf((**Kind)(nil)).Elem()

type KindPtrInput interface {
	pulumi.Input

	ToKindPtrOutput() KindPtrOutput
	ToKindPtrOutputWithContext(context.Context) KindPtrOutput
}

type kindPtr string

func KindPtr(v string) KindPtrInput {
	return (*kindPtr)(&v)
}

func (*kindPtr) ElementType() reflect.Type {
	return kindPtrType
}

func (in *kindPtr) ToKindPtrOutput() KindPtrOutput {
	return pulumi.ToOutput(in).(KindPtrOutput)
}

func (in *kindPtr) ToKindPtrOutputWithContext(ctx context.Context) KindPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(KindPtrOutput)
}

// Grouping matching method. When method is Selected at least one of groupByEntities, groupByAlertDetails, groupByCustomDetails must be provided and not empty.
type MatchingMethod string

const (
	// Grouping alerts into a single incident if all the entities match
	MatchingMethodAllEntities = MatchingMethod("AllEntities")
	// Grouping any alerts triggered by this rule into a single incident
	MatchingMethodAnyAlert = MatchingMethod("AnyAlert")
	// Grouping alerts into a single incident if the selected entities, custom details and alert details match
	MatchingMethodSelected = MatchingMethod("Selected")
)

func (MatchingMethod) ElementType() reflect.Type {
	return reflect.TypeOf((*MatchingMethod)(nil)).Elem()
}

func (e MatchingMethod) ToMatchingMethodOutput() MatchingMethodOutput {
	return pulumi.ToOutput(e).(MatchingMethodOutput)
}

func (e MatchingMethod) ToMatchingMethodOutputWithContext(ctx context.Context) MatchingMethodOutput {
	return pulumi.ToOutputWithContext(ctx, e).(MatchingMethodOutput)
}

func (e MatchingMethod) ToMatchingMethodPtrOutput() MatchingMethodPtrOutput {
	return e.ToMatchingMethodPtrOutputWithContext(context.Background())
}

func (e MatchingMethod) ToMatchingMethodPtrOutputWithContext(ctx context.Context) MatchingMethodPtrOutput {
	return MatchingMethod(e).ToMatchingMethodOutputWithContext(ctx).ToMatchingMethodPtrOutputWithContext(ctx)
}

func (e MatchingMethod) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e MatchingMethod) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e MatchingMethod) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e MatchingMethod) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type MatchingMethodOutput struct{ *pulumi.OutputState }

func (MatchingMethodOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MatchingMethod)(nil)).Elem()
}

func (o MatchingMethodOutput) ToMatchingMethodOutput() MatchingMethodOutput {
	return o
}

func (o MatchingMethodOutput) ToMatchingMethodOutputWithContext(ctx context.Context) MatchingMethodOutput {
	return o
}

func (o MatchingMethodOutput) ToMatchingMethodPtrOutput() MatchingMethodPtrOutput {
	return o.ToMatchingMethodPtrOutputWithContext(context.Background())
}

func (o MatchingMethodOutput) ToMatchingMethodPtrOutputWithContext(ctx context.Context) MatchingMethodPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MatchingMethod) *MatchingMethod {
		return &v
	}).(MatchingMethodPtrOutput)
}

func (o MatchingMethodOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o MatchingMethodOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e MatchingMethod) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o MatchingMethodOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o MatchingMethodOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e MatchingMethod) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type MatchingMethodPtrOutput struct{ *pulumi.OutputState }

func (MatchingMethodPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MatchingMethod)(nil)).Elem()
}

func (o MatchingMethodPtrOutput) ToMatchingMethodPtrOutput() MatchingMethodPtrOutput {
	return o
}

func (o MatchingMethodPtrOutput) ToMatchingMethodPtrOutputWithContext(ctx context.Context) MatchingMethodPtrOutput {
	return o
}

func (o MatchingMethodPtrOutput) Elem() MatchingMethodOutput {
	return o.ApplyT(func(v *MatchingMethod) MatchingMethod {
		if v != nil {
			return *v
		}
		var ret MatchingMethod
		return ret
	}).(MatchingMethodOutput)
}

func (o MatchingMethodPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o MatchingMethodPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *MatchingMethod) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// MatchingMethodInput is an input type that accepts values of the MatchingMethod enum
// A concrete instance of `MatchingMethodInput` can be one of the following:
//
//	MatchingMethodAllEntities
//	MatchingMethodAnyAlert
//	MatchingMethodSelected
type MatchingMethodInput interface {
	pulumi.Input

	ToMatchingMethodOutput() MatchingMethodOutput
	ToMatchingMethodOutputWithContext(context.Context) MatchingMethodOutput
}

var matchingMethodPtrType = reflect.TypeOf((**MatchingMethod)(nil)).Elem()

type MatchingMethodPtrInput interface {
	pulumi.Input

	ToMatchingMethodPtrOutput() MatchingMethodPtrOutput
	ToMatchingMethodPtrOutputWithContext(context.Context) MatchingMethodPtrOutput
}

type matchingMethodPtr string

func MatchingMethodPtr(v string) MatchingMethodPtrInput {
	return (*matchingMethodPtr)(&v)
}

func (*matchingMethodPtr) ElementType() reflect.Type {
	return matchingMethodPtrType
}

func (in *matchingMethodPtr) ToMatchingMethodPtrOutput() MatchingMethodPtrOutput {
	return pulumi.ToOutput(in).(MatchingMethodPtrOutput)
}

func (in *matchingMethodPtr) ToMatchingMethodPtrOutputWithContext(ctx context.Context) MatchingMethodPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(MatchingMethodPtrOutput)
}

// The alerts' productName on which the cases will be generated
type MicrosoftSecurityProductName string

const (
	MicrosoftSecurityProductName_Microsoft_Cloud_App_Security               = MicrosoftSecurityProductName("Microsoft Cloud App Security")
	MicrosoftSecurityProductName_Azure_Security_Center                      = MicrosoftSecurityProductName("Azure Security Center")
	MicrosoftSecurityProductName_Azure_Advanced_Threat_Protection           = MicrosoftSecurityProductName("Azure Advanced Threat Protection")
	MicrosoftSecurityProductName_Azure_Active_Directory_Identity_Protection = MicrosoftSecurityProductName("Azure Active Directory Identity Protection")
	MicrosoftSecurityProductName_Azure_Security_Center_for_IoT              = MicrosoftSecurityProductName("Azure Security Center for IoT")
)

func (MicrosoftSecurityProductName) ElementType() reflect.Type {
	return reflect.TypeOf((*MicrosoftSecurityProductName)(nil)).Elem()
}

func (e MicrosoftSecurityProductName) ToMicrosoftSecurityProductNameOutput() MicrosoftSecurityProductNameOutput {
	return pulumi.ToOutput(e).(MicrosoftSecurityProductNameOutput)
}

func (e MicrosoftSecurityProductName) ToMicrosoftSecurityProductNameOutputWithContext(ctx context.Context) MicrosoftSecurityProductNameOutput {
	return pulumi.ToOutputWithContext(ctx, e).(MicrosoftSecurityProductNameOutput)
}

func (e MicrosoftSecurityProductName) ToMicrosoftSecurityProductNamePtrOutput() MicrosoftSecurityProductNamePtrOutput {
	return e.ToMicrosoftSecurityProductNamePtrOutputWithContext(context.Background())
}

func (e MicrosoftSecurityProductName) ToMicrosoftSecurityProductNamePtrOutputWithContext(ctx context.Context) MicrosoftSecurityProductNamePtrOutput {
	return MicrosoftSecurityProductName(e).ToMicrosoftSecurityProductNameOutputWithContext(ctx).ToMicrosoftSecurityProductNamePtrOutputWithContext(ctx)
}

func (e MicrosoftSecurityProductName) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e MicrosoftSecurityProductName) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e MicrosoftSecurityProductName) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e MicrosoftSecurityProductName) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type MicrosoftSecurityProductNameOutput struct{ *pulumi.OutputState }

func (MicrosoftSecurityProductNameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MicrosoftSecurityProductName)(nil)).Elem()
}

func (o MicrosoftSecurityProductNameOutput) ToMicrosoftSecurityProductNameOutput() MicrosoftSecurityProductNameOutput {
	return o
}

func (o MicrosoftSecurityProductNameOutput) ToMicrosoftSecurityProductNameOutputWithContext(ctx context.Context) MicrosoftSecurityProductNameOutput {
	return o
}

func (o MicrosoftSecurityProductNameOutput) ToMicrosoftSecurityProductNamePtrOutput() MicrosoftSecurityProductNamePtrOutput {
	return o.ToMicrosoftSecurityProductNamePtrOutputWithContext(context.Background())
}

func (o MicrosoftSecurityProductNameOutput) ToMicrosoftSecurityProductNamePtrOutputWithContext(ctx context.Context) MicrosoftSecurityProductNamePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MicrosoftSecurityProductName) *MicrosoftSecurityProductName {
		return &v
	}).(MicrosoftSecurityProductNamePtrOutput)
}

func (o MicrosoftSecurityProductNameOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o MicrosoftSecurityProductNameOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e MicrosoftSecurityProductName) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o MicrosoftSecurityProductNameOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o MicrosoftSecurityProductNameOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e MicrosoftSecurityProductName) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type MicrosoftSecurityProductNamePtrOutput struct{ *pulumi.OutputState }

func (MicrosoftSecurityProductNamePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MicrosoftSecurityProductName)(nil)).Elem()
}

func (o MicrosoftSecurityProductNamePtrOutput) ToMicrosoftSecurityProductNamePtrOutput() MicrosoftSecurityProductNamePtrOutput {
	return o
}

func (o MicrosoftSecurityProductNamePtrOutput) ToMicrosoftSecurityProductNamePtrOutputWithContext(ctx context.Context) MicrosoftSecurityProductNamePtrOutput {
	return o
}

func (o MicrosoftSecurityProductNamePtrOutput) Elem() MicrosoftSecurityProductNameOutput {
	return o.ApplyT(func(v *MicrosoftSecurityProductName) MicrosoftSecurityProductName {
		if v != nil {
			return *v
		}
		var ret MicrosoftSecurityProductName
		return ret
	}).(MicrosoftSecurityProductNameOutput)
}

func (o MicrosoftSecurityProductNamePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o MicrosoftSecurityProductNamePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *MicrosoftSecurityProductName) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// MicrosoftSecurityProductNameInput is an input type that accepts values of the MicrosoftSecurityProductName enum
// A concrete instance of `MicrosoftSecurityProductNameInput` can be one of the following:
//
//	MicrosoftSecurityProductName_Microsoft_Cloud_App_Security
//	MicrosoftSecurityProductName_Azure_Security_Center
//	MicrosoftSecurityProductName_Azure_Advanced_Threat_Protection
//	MicrosoftSecurityProductName_Azure_Active_Directory_Identity_Protection
//	MicrosoftSecurityProductName_Azure_Security_Center_for_IoT
type MicrosoftSecurityProductNameInput interface {
	pulumi.Input

	ToMicrosoftSecurityProductNameOutput() MicrosoftSecurityProductNameOutput
	ToMicrosoftSecurityProductNameOutputWithContext(context.Context) MicrosoftSecurityProductNameOutput
}

var microsoftSecurityProductNamePtrType = reflect.TypeOf((**MicrosoftSecurityProductName)(nil)).Elem()

type MicrosoftSecurityProductNamePtrInput interface {
	pulumi.Input

	ToMicrosoftSecurityProductNamePtrOutput() MicrosoftSecurityProductNamePtrOutput
	ToMicrosoftSecurityProductNamePtrOutputWithContext(context.Context) MicrosoftSecurityProductNamePtrOutput
}

type microsoftSecurityProductNamePtr string

func MicrosoftSecurityProductNamePtr(v string) MicrosoftSecurityProductNamePtrInput {
	return (*microsoftSecurityProductNamePtr)(&v)
}

func (*microsoftSecurityProductNamePtr) ElementType() reflect.Type {
	return microsoftSecurityProductNamePtrType
}

func (in *microsoftSecurityProductNamePtr) ToMicrosoftSecurityProductNamePtrOutput() MicrosoftSecurityProductNamePtrOutput {
	return pulumi.ToOutput(in).(MicrosoftSecurityProductNamePtrOutput)
}

func (in *microsoftSecurityProductNamePtr) ToMicrosoftSecurityProductNamePtrOutputWithContext(ctx context.Context) MicrosoftSecurityProductNamePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(MicrosoftSecurityProductNamePtrOutput)
}

// Operator used for list of dependencies in criteria array.
type Operator string

const (
	OperatorAND = Operator("AND")
	OperatorOR  = Operator("OR")
)

func (Operator) ElementType() reflect.Type {
	return reflect.TypeOf((*Operator)(nil)).Elem()
}

func (e Operator) ToOperatorOutput() OperatorOutput {
	return pulumi.ToOutput(e).(OperatorOutput)
}

func (e Operator) ToOperatorOutputWithContext(ctx context.Context) OperatorOutput {
	return pulumi.ToOutputWithContext(ctx, e).(OperatorOutput)
}

func (e Operator) ToOperatorPtrOutput() OperatorPtrOutput {
	return e.ToOperatorPtrOutputWithContext(context.Background())
}

func (e Operator) ToOperatorPtrOutputWithContext(ctx context.Context) OperatorPtrOutput {
	return Operator(e).ToOperatorOutputWithContext(ctx).ToOperatorPtrOutputWithContext(ctx)
}

func (e Operator) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e Operator) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e Operator) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e Operator) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type OperatorOutput struct{ *pulumi.OutputState }

func (OperatorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Operator)(nil)).Elem()
}

func (o OperatorOutput) ToOperatorOutput() OperatorOutput {
	return o
}

func (o OperatorOutput) ToOperatorOutputWithContext(ctx context.Context) OperatorOutput {
	return o
}

func (o OperatorOutput) ToOperatorPtrOutput() OperatorPtrOutput {
	return o.ToOperatorPtrOutputWithContext(context.Background())
}

func (o OperatorOutput) ToOperatorPtrOutputWithContext(ctx context.Context) OperatorPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Operator) *Operator {
		return &v
	}).(OperatorPtrOutput)
}

func (o OperatorOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o OperatorOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e Operator) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o OperatorOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o OperatorOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e Operator) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type OperatorPtrOutput struct{ *pulumi.OutputState }

func (OperatorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Operator)(nil)).Elem()
}

func (o OperatorPtrOutput) ToOperatorPtrOutput() OperatorPtrOutput {
	return o
}

func (o OperatorPtrOutput) ToOperatorPtrOutputWithContext(ctx context.Context) OperatorPtrOutput {
	return o
}

func (o OperatorPtrOutput) Elem() OperatorOutput {
	return o.ApplyT(func(v *Operator) Operator {
		if v != nil {
			return *v
		}
		var ret Operator
		return ret
	}).(OperatorOutput)
}

func (o OperatorPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o OperatorPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *Operator) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// OperatorInput is an input type that accepts values of the Operator enum
// A concrete instance of `OperatorInput` can be one of the following:
//
//	OperatorAND
//	OperatorOR
type OperatorInput interface {
	pulumi.Input

	ToOperatorOutput() OperatorOutput
	ToOperatorOutputWithContext(context.Context) OperatorOutput
}

var operatorPtrType = reflect.TypeOf((**Operator)(nil)).Elem()

type OperatorPtrInput interface {
	pulumi.Input

	ToOperatorPtrOutput() OperatorPtrOutput
	ToOperatorPtrOutputWithContext(context.Context) OperatorPtrOutput
}

type operatorPtr string

func OperatorPtr(v string) OperatorPtrInput {
	return (*operatorPtr)(&v)
}

func (*operatorPtr) ElementType() reflect.Type {
	return operatorPtrType
}

func (in *operatorPtr) ToOperatorPtrOutput() OperatorPtrOutput {
	return pulumi.ToOutput(in).(OperatorPtrOutput)
}

func (in *operatorPtr) ToOperatorPtrOutputWithContext(ctx context.Context) OperatorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(OperatorPtrOutput)
}

// The type of the owner the incident is assigned to.
type OwnerType string

const (
	// The incident owner type is unknown
	OwnerTypeUnknown = OwnerType("Unknown")
	// The incident owner type is an AAD user
	OwnerTypeUser = OwnerType("User")
	// The incident owner type is an AAD group
	OwnerTypeGroup = OwnerType("Group")
)

func (OwnerType) ElementType() reflect.Type {
	return reflect.TypeOf((*OwnerType)(nil)).Elem()
}

func (e OwnerType) ToOwnerTypeOutput() OwnerTypeOutput {
	return pulumi.ToOutput(e).(OwnerTypeOutput)
}

func (e OwnerType) ToOwnerTypeOutputWithContext(ctx context.Context) OwnerTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(OwnerTypeOutput)
}

func (e OwnerType) ToOwnerTypePtrOutput() OwnerTypePtrOutput {
	return e.ToOwnerTypePtrOutputWithContext(context.Background())
}

func (e OwnerType) ToOwnerTypePtrOutputWithContext(ctx context.Context) OwnerTypePtrOutput {
	return OwnerType(e).ToOwnerTypeOutputWithContext(ctx).ToOwnerTypePtrOutputWithContext(ctx)
}

func (e OwnerType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e OwnerType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e OwnerType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e OwnerType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type OwnerTypeOutput struct{ *pulumi.OutputState }

func (OwnerTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OwnerType)(nil)).Elem()
}

func (o OwnerTypeOutput) ToOwnerTypeOutput() OwnerTypeOutput {
	return o
}

func (o OwnerTypeOutput) ToOwnerTypeOutputWithContext(ctx context.Context) OwnerTypeOutput {
	return o
}

func (o OwnerTypeOutput) ToOwnerTypePtrOutput() OwnerTypePtrOutput {
	return o.ToOwnerTypePtrOutputWithContext(context.Background())
}

func (o OwnerTypeOutput) ToOwnerTypePtrOutputWithContext(ctx context.Context) OwnerTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OwnerType) *OwnerType {
		return &v
	}).(OwnerTypePtrOutput)
}

func (o OwnerTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o OwnerTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e OwnerType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o OwnerTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o OwnerTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e OwnerType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type OwnerTypePtrOutput struct{ *pulumi.OutputState }

func (OwnerTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OwnerType)(nil)).Elem()
}

func (o OwnerTypePtrOutput) ToOwnerTypePtrOutput() OwnerTypePtrOutput {
	return o
}

func (o OwnerTypePtrOutput) ToOwnerTypePtrOutputWithContext(ctx context.Context) OwnerTypePtrOutput {
	return o
}

func (o OwnerTypePtrOutput) Elem() OwnerTypeOutput {
	return o.ApplyT(func(v *OwnerType) OwnerType {
		if v != nil {
			return *v
		}
		var ret OwnerType
		return ret
	}).(OwnerTypeOutput)
}

func (o OwnerTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o OwnerTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *OwnerType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// OwnerTypeInput is an input type that accepts values of the OwnerType enum
// A concrete instance of `OwnerTypeInput` can be one of the following:
//
//	OwnerTypeUnknown
//	OwnerTypeUser
//	OwnerTypeGroup
type OwnerTypeInput interface {
	pulumi.Input

	ToOwnerTypeOutput() OwnerTypeOutput
	ToOwnerTypeOutputWithContext(context.Context) OwnerTypeOutput
}

var ownerTypePtrType = reflect.TypeOf((**OwnerType)(nil)).Elem()

type OwnerTypePtrInput interface {
	pulumi.Input

	ToOwnerTypePtrOutput() OwnerTypePtrOutput
	ToOwnerTypePtrOutputWithContext(context.Context) OwnerTypePtrOutput
}

type ownerTypePtr string

func OwnerTypePtr(v string) OwnerTypePtrInput {
	return (*ownerTypePtr)(&v)
}

func (*ownerTypePtr) ElementType() reflect.Type {
	return ownerTypePtrType
}

func (in *ownerTypePtr) ToOwnerTypePtrOutput() OwnerTypePtrOutput {
	return pulumi.ToOutput(in).(OwnerTypePtrOutput)
}

func (in *ownerTypePtr) ToOwnerTypePtrOutputWithContext(ctx context.Context) OwnerTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(OwnerTypePtrOutput)
}

// the packageKind of the package contains this template
type PackageKind string

const (
	PackageKindSolution   = PackageKind("Solution")
	PackageKindStandalone = PackageKind("Standalone")
)

func (PackageKind) ElementType() reflect.Type {
	return reflect.TypeOf((*PackageKind)(nil)).Elem()
}

func (e PackageKind) ToPackageKindOutput() PackageKindOutput {
	return pulumi.ToOutput(e).(PackageKindOutput)
}

func (e PackageKind) ToPackageKindOutputWithContext(ctx context.Context) PackageKindOutput {
	return pulumi.ToOutputWithContext(ctx, e).(PackageKindOutput)
}

func (e PackageKind) ToPackageKindPtrOutput() PackageKindPtrOutput {
	return e.ToPackageKindPtrOutputWithContext(context.Background())
}

func (e PackageKind) ToPackageKindPtrOutputWithContext(ctx context.Context) PackageKindPtrOutput {
	return PackageKind(e).ToPackageKindOutputWithContext(ctx).ToPackageKindPtrOutputWithContext(ctx)
}

func (e PackageKind) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e PackageKind) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e PackageKind) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e PackageKind) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type PackageKindOutput struct{ *pulumi.OutputState }

func (PackageKindOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PackageKind)(nil)).Elem()
}

func (o PackageKindOutput) ToPackageKindOutput() PackageKindOutput {
	return o
}

func (o PackageKindOutput) ToPackageKindOutputWithContext(ctx context.Context) PackageKindOutput {
	return o
}

func (o PackageKindOutput) ToPackageKindPtrOutput() PackageKindPtrOutput {
	return o.ToPackageKindPtrOutputWithContext(context.Background())
}

func (o PackageKindOutput) ToPackageKindPtrOutputWithContext(ctx context.Context) PackageKindPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PackageKind) *PackageKind {
		return &v
	}).(PackageKindPtrOutput)
}

func (o PackageKindOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o PackageKindOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PackageKind) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o PackageKindOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PackageKindOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PackageKind) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type PackageKindPtrOutput struct{ *pulumi.OutputState }

func (PackageKindPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PackageKind)(nil)).Elem()
}

func (o PackageKindPtrOutput) ToPackageKindPtrOutput() PackageKindPtrOutput {
	return o
}

func (o PackageKindPtrOutput) ToPackageKindPtrOutputWithContext(ctx context.Context) PackageKindPtrOutput {
	return o
}

func (o PackageKindPtrOutput) Elem() PackageKindOutput {
	return o.ApplyT(func(v *PackageKind) PackageKind {
		if v != nil {
			return *v
		}
		var ret PackageKind
		return ret
	}).(PackageKindOutput)
}

func (o PackageKindPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PackageKindPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *PackageKind) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// PackageKindInput is an input type that accepts values of the PackageKind enum
// A concrete instance of `PackageKindInput` can be one of the following:
//
//	PackageKindSolution
//	PackageKindStandalone
type PackageKindInput interface {
	pulumi.Input

	ToPackageKindOutput() PackageKindOutput
	ToPackageKindOutputWithContext(context.Context) PackageKindOutput
}

var packageKindPtrType = reflect.TypeOf((**PackageKind)(nil)).Elem()

type PackageKindPtrInput interface {
	pulumi.Input

	ToPackageKindPtrOutput() PackageKindPtrOutput
	ToPackageKindPtrOutputWithContext(context.Context) PackageKindPtrOutput
}

type packageKindPtr string

func PackageKindPtr(v string) PackageKindPtrInput {
	return (*packageKindPtr)(&v)
}

func (*packageKindPtr) ElementType() reflect.Type {
	return packageKindPtrType
}

func (in *packageKindPtr) ToPackageKindPtrOutput() PackageKindPtrOutput {
	return pulumi.ToOutput(in).(PackageKindPtrOutput)
}

func (in *packageKindPtr) ToPackageKindPtrOutputWithContext(ctx context.Context) PackageKindPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(PackageKindPtrOutput)
}

// The kind of repository access credentials
type RepositoryAccessKind string

const (
	RepositoryAccessKindOAuth = RepositoryAccessKind("OAuth")
	RepositoryAccessKindPAT   = RepositoryAccessKind("PAT")
	RepositoryAccessKindApp   = RepositoryAccessKind("App")
)

func (RepositoryAccessKind) ElementType() reflect.Type {
	return reflect.TypeOf((*RepositoryAccessKind)(nil)).Elem()
}

func (e RepositoryAccessKind) ToRepositoryAccessKindOutput() RepositoryAccessKindOutput {
	return pulumi.ToOutput(e).(RepositoryAccessKindOutput)
}

func (e RepositoryAccessKind) ToRepositoryAccessKindOutputWithContext(ctx context.Context) RepositoryAccessKindOutput {
	return pulumi.ToOutputWithContext(ctx, e).(RepositoryAccessKindOutput)
}

func (e RepositoryAccessKind) ToRepositoryAccessKindPtrOutput() RepositoryAccessKindPtrOutput {
	return e.ToRepositoryAccessKindPtrOutputWithContext(context.Background())
}

func (e RepositoryAccessKind) ToRepositoryAccessKindPtrOutputWithContext(ctx context.Context) RepositoryAccessKindPtrOutput {
	return RepositoryAccessKind(e).ToRepositoryAccessKindOutputWithContext(ctx).ToRepositoryAccessKindPtrOutputWithContext(ctx)
}

func (e RepositoryAccessKind) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e RepositoryAccessKind) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e RepositoryAccessKind) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e RepositoryAccessKind) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type RepositoryAccessKindOutput struct{ *pulumi.OutputState }

func (RepositoryAccessKindOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RepositoryAccessKind)(nil)).Elem()
}

func (o RepositoryAccessKindOutput) ToRepositoryAccessKindOutput() RepositoryAccessKindOutput {
	return o
}

func (o RepositoryAccessKindOutput) ToRepositoryAccessKindOutputWithContext(ctx context.Context) RepositoryAccessKindOutput {
	return o
}

func (o RepositoryAccessKindOutput) ToRepositoryAccessKindPtrOutput() RepositoryAccessKindPtrOutput {
	return o.ToRepositoryAccessKindPtrOutputWithContext(context.Background())
}

func (o RepositoryAccessKindOutput) ToRepositoryAccessKindPtrOutputWithContext(ctx context.Context) RepositoryAccessKindPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RepositoryAccessKind) *RepositoryAccessKind {
		return &v
	}).(RepositoryAccessKindPtrOutput)
}

func (o RepositoryAccessKindOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o RepositoryAccessKindOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RepositoryAccessKind) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o RepositoryAccessKindOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RepositoryAccessKindOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RepositoryAccessKind) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type RepositoryAccessKindPtrOutput struct{ *pulumi.OutputState }

func (RepositoryAccessKindPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RepositoryAccessKind)(nil)).Elem()
}

func (o RepositoryAccessKindPtrOutput) ToRepositoryAccessKindPtrOutput() RepositoryAccessKindPtrOutput {
	return o
}

func (o RepositoryAccessKindPtrOutput) ToRepositoryAccessKindPtrOutputWithContext(ctx context.Context) RepositoryAccessKindPtrOutput {
	return o
}

func (o RepositoryAccessKindPtrOutput) Elem() RepositoryAccessKindOutput {
	return o.ApplyT(func(v *RepositoryAccessKind) RepositoryAccessKind {
		if v != nil {
			return *v
		}
		var ret RepositoryAccessKind
		return ret
	}).(RepositoryAccessKindOutput)
}

func (o RepositoryAccessKindPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RepositoryAccessKindPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *RepositoryAccessKind) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// RepositoryAccessKindInput is an input type that accepts values of the RepositoryAccessKind enum
// A concrete instance of `RepositoryAccessKindInput` can be one of the following:
//
//	RepositoryAccessKindOAuth
//	RepositoryAccessKindPAT
//	RepositoryAccessKindApp
type RepositoryAccessKindInput interface {
	pulumi.Input

	ToRepositoryAccessKindOutput() RepositoryAccessKindOutput
	ToRepositoryAccessKindOutputWithContext(context.Context) RepositoryAccessKindOutput
}

var repositoryAccessKindPtrType = reflect.TypeOf((**RepositoryAccessKind)(nil)).Elem()

type RepositoryAccessKindPtrInput interface {
	pulumi.Input

	ToRepositoryAccessKindPtrOutput() RepositoryAccessKindPtrOutput
	ToRepositoryAccessKindPtrOutputWithContext(context.Context) RepositoryAccessKindPtrOutput
}

type repositoryAccessKindPtr string

func RepositoryAccessKindPtr(v string) RepositoryAccessKindPtrInput {
	return (*repositoryAccessKindPtr)(&v)
}

func (*repositoryAccessKindPtr) ElementType() reflect.Type {
	return repositoryAccessKindPtrType
}

func (in *repositoryAccessKindPtr) ToRepositoryAccessKindPtrOutput() RepositoryAccessKindPtrOutput {
	return pulumi.ToOutput(in).(RepositoryAccessKindPtrOutput)
}

func (in *repositoryAccessKindPtr) ToRepositoryAccessKindPtrOutputWithContext(ctx context.Context) RepositoryAccessKindPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(RepositoryAccessKindPtrOutput)
}

// The kind of security ML Analytics Settings
type SecurityMLAnalyticsSettingsKind string

const (
	SecurityMLAnalyticsSettingsKindAnomaly = SecurityMLAnalyticsSettingsKind("Anomaly")
)

// The anomaly SecurityMLAnalyticsSettings status
type SettingsStatus string

const (
	// Anomaly settings status in Production mode
	SettingsStatusProduction = SettingsStatus("Production")
	// Anomaly settings status in Flighting mode
	SettingsStatusFlighting = SettingsStatus("Flighting")
)

func (SettingsStatus) ElementType() reflect.Type {
	return reflect.TypeOf((*SettingsStatus)(nil)).Elem()
}

func (e SettingsStatus) ToSettingsStatusOutput() SettingsStatusOutput {
	return pulumi.ToOutput(e).(SettingsStatusOutput)
}

func (e SettingsStatus) ToSettingsStatusOutputWithContext(ctx context.Context) SettingsStatusOutput {
	return pulumi.ToOutputWithContext(ctx, e).(SettingsStatusOutput)
}

func (e SettingsStatus) ToSettingsStatusPtrOutput() SettingsStatusPtrOutput {
	return e.ToSettingsStatusPtrOutputWithContext(context.Background())
}

func (e SettingsStatus) ToSettingsStatusPtrOutputWithContext(ctx context.Context) SettingsStatusPtrOutput {
	return SettingsStatus(e).ToSettingsStatusOutputWithContext(ctx).ToSettingsStatusPtrOutputWithContext(ctx)
}

func (e SettingsStatus) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e SettingsStatus) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e SettingsStatus) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e SettingsStatus) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type SettingsStatusOutput struct{ *pulumi.OutputState }

func (SettingsStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SettingsStatus)(nil)).Elem()
}

func (o SettingsStatusOutput) ToSettingsStatusOutput() SettingsStatusOutput {
	return o
}

func (o SettingsStatusOutput) ToSettingsStatusOutputWithContext(ctx context.Context) SettingsStatusOutput {
	return o
}

func (o SettingsStatusOutput) ToSettingsStatusPtrOutput() SettingsStatusPtrOutput {
	return o.ToSettingsStatusPtrOutputWithContext(context.Background())
}

func (o SettingsStatusOutput) ToSettingsStatusPtrOutputWithContext(ctx context.Context) SettingsStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SettingsStatus) *SettingsStatus {
		return &v
	}).(SettingsStatusPtrOutput)
}

func (o SettingsStatusOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o SettingsStatusOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SettingsStatus) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o SettingsStatusOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SettingsStatusOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SettingsStatus) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type SettingsStatusPtrOutput struct{ *pulumi.OutputState }

func (SettingsStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SettingsStatus)(nil)).Elem()
}

func (o SettingsStatusPtrOutput) ToSettingsStatusPtrOutput() SettingsStatusPtrOutput {
	return o
}

func (o SettingsStatusPtrOutput) ToSettingsStatusPtrOutputWithContext(ctx context.Context) SettingsStatusPtrOutput {
	return o
}

func (o SettingsStatusPtrOutput) Elem() SettingsStatusOutput {
	return o.ApplyT(func(v *SettingsStatus) SettingsStatus {
		if v != nil {
			return *v
		}
		var ret SettingsStatus
		return ret
	}).(SettingsStatusOutput)
}

func (o SettingsStatusPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SettingsStatusPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *SettingsStatus) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// SettingsStatusInput is an input type that accepts values of the SettingsStatus enum
// A concrete instance of `SettingsStatusInput` can be one of the following:
//
//	SettingsStatusProduction
//	SettingsStatusFlighting
type SettingsStatusInput interface {
	pulumi.Input

	ToSettingsStatusOutput() SettingsStatusOutput
	ToSettingsStatusOutputWithContext(context.Context) SettingsStatusOutput
}

var settingsStatusPtrType = reflect.TypeOf((**SettingsStatus)(nil)).Elem()

type SettingsStatusPtrInput interface {
	pulumi.Input

	ToSettingsStatusPtrOutput() SettingsStatusPtrOutput
	ToSettingsStatusPtrOutputWithContext(context.Context) SettingsStatusPtrOutput
}

type settingsStatusPtr string

func SettingsStatusPtr(v string) SettingsStatusPtrInput {
	return (*settingsStatusPtr)(&v)
}

func (*settingsStatusPtr) ElementType() reflect.Type {
	return settingsStatusPtrType
}

func (in *settingsStatusPtr) ToSettingsStatusPtrOutput() SettingsStatusPtrOutput {
	return pulumi.ToOutput(in).(SettingsStatusPtrOutput)
}

func (in *settingsStatusPtr) ToSettingsStatusPtrOutputWithContext(ctx context.Context) SettingsStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(SettingsStatusPtrOutput)
}

// Source type of the content
type SourceKind string

const (
	SourceKindLocalWorkspace   = SourceKind("LocalWorkspace")
	SourceKindCommunity        = SourceKind("Community")
	SourceKindSolution         = SourceKind("Solution")
	SourceKindSourceRepository = SourceKind("SourceRepository")
)

func (SourceKind) ElementType() reflect.Type {
	return reflect.TypeOf((*SourceKind)(nil)).Elem()
}

func (e SourceKind) ToSourceKindOutput() SourceKindOutput {
	return pulumi.ToOutput(e).(SourceKindOutput)
}

func (e SourceKind) ToSourceKindOutputWithContext(ctx context.Context) SourceKindOutput {
	return pulumi.ToOutputWithContext(ctx, e).(SourceKindOutput)
}

func (e SourceKind) ToSourceKindPtrOutput() SourceKindPtrOutput {
	return e.ToSourceKindPtrOutputWithContext(context.Background())
}

func (e SourceKind) ToSourceKindPtrOutputWithContext(ctx context.Context) SourceKindPtrOutput {
	return SourceKind(e).ToSourceKindOutputWithContext(ctx).ToSourceKindPtrOutputWithContext(ctx)
}

func (e SourceKind) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e SourceKind) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e SourceKind) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e SourceKind) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type SourceKindOutput struct{ *pulumi.OutputState }

func (SourceKindOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SourceKind)(nil)).Elem()
}

func (o SourceKindOutput) ToSourceKindOutput() SourceKindOutput {
	return o
}

func (o SourceKindOutput) ToSourceKindOutputWithContext(ctx context.Context) SourceKindOutput {
	return o
}

func (o SourceKindOutput) ToSourceKindPtrOutput() SourceKindPtrOutput {
	return o.ToSourceKindPtrOutputWithContext(context.Background())
}

func (o SourceKindOutput) ToSourceKindPtrOutputWithContext(ctx context.Context) SourceKindPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SourceKind) *SourceKind {
		return &v
	}).(SourceKindPtrOutput)
}

func (o SourceKindOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o SourceKindOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SourceKind) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o SourceKindOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SourceKindOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SourceKind) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type SourceKindPtrOutput struct{ *pulumi.OutputState }

func (SourceKindPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SourceKind)(nil)).Elem()
}

func (o SourceKindPtrOutput) ToSourceKindPtrOutput() SourceKindPtrOutput {
	return o
}

func (o SourceKindPtrOutput) ToSourceKindPtrOutputWithContext(ctx context.Context) SourceKindPtrOutput {
	return o
}

func (o SourceKindPtrOutput) Elem() SourceKindOutput {
	return o.ApplyT(func(v *SourceKind) SourceKind {
		if v != nil {
			return *v
		}
		var ret SourceKind
		return ret
	}).(SourceKindOutput)
}

func (o SourceKindPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SourceKindPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *SourceKind) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// SourceKindInput is an input type that accepts values of the SourceKind enum
// A concrete instance of `SourceKindInput` can be one of the following:
//
//	SourceKindLocalWorkspace
//	SourceKindCommunity
//	SourceKindSolution
//	SourceKindSourceRepository
type SourceKindInput interface {
	pulumi.Input

	ToSourceKindOutput() SourceKindOutput
	ToSourceKindOutputWithContext(context.Context) SourceKindOutput
}

var sourceKindPtrType = reflect.TypeOf((**SourceKind)(nil)).Elem()

type SourceKindPtrInput interface {
	pulumi.Input

	ToSourceKindPtrOutput() SourceKindPtrOutput
	ToSourceKindPtrOutputWithContext(context.Context) SourceKindPtrOutput
}

type sourceKindPtr string

func SourceKindPtr(v string) SourceKindPtrInput {
	return (*sourceKindPtr)(&v)
}

func (*sourceKindPtr) ElementType() reflect.Type {
	return sourceKindPtrType
}

func (in *sourceKindPtr) ToSourceKindPtrOutput() SourceKindPtrOutput {
	return pulumi.ToOutput(in).(SourceKindPtrOutput)
}

func (in *sourceKindPtr) ToSourceKindPtrOutputWithContext(ctx context.Context) SourceKindPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(SourceKindPtrOutput)
}

// Type of support for content item
type SupportTier string

const (
	SupportTierMicrosoft = SupportTier("Microsoft")
	SupportTierPartner   = SupportTier("Partner")
	SupportTierCommunity = SupportTier("Community")
)

func (SupportTier) ElementType() reflect.Type {
	return reflect.TypeOf((*SupportTier)(nil)).Elem()
}

func (e SupportTier) ToSupportTierOutput() SupportTierOutput {
	return pulumi.ToOutput(e).(SupportTierOutput)
}

func (e SupportTier) ToSupportTierOutputWithContext(ctx context.Context) SupportTierOutput {
	return pulumi.ToOutputWithContext(ctx, e).(SupportTierOutput)
}

func (e SupportTier) ToSupportTierPtrOutput() SupportTierPtrOutput {
	return e.ToSupportTierPtrOutputWithContext(context.Background())
}

func (e SupportTier) ToSupportTierPtrOutputWithContext(ctx context.Context) SupportTierPtrOutput {
	return SupportTier(e).ToSupportTierOutputWithContext(ctx).ToSupportTierPtrOutputWithContext(ctx)
}

func (e SupportTier) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e SupportTier) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e SupportTier) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e SupportTier) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type SupportTierOutput struct{ *pulumi.OutputState }

func (SupportTierOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SupportTier)(nil)).Elem()
}

func (o SupportTierOutput) ToSupportTierOutput() SupportTierOutput {
	return o
}

func (o SupportTierOutput) ToSupportTierOutputWithContext(ctx context.Context) SupportTierOutput {
	return o
}

func (o SupportTierOutput) ToSupportTierPtrOutput() SupportTierPtrOutput {
	return o.ToSupportTierPtrOutputWithContext(context.Background())
}

func (o SupportTierOutput) ToSupportTierPtrOutputWithContext(ctx context.Context) SupportTierPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SupportTier) *SupportTier {
		return &v
	}).(SupportTierPtrOutput)
}

func (o SupportTierOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o SupportTierOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SupportTier) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o SupportTierOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SupportTierOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SupportTier) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type SupportTierPtrOutput struct{ *pulumi.OutputState }

func (SupportTierPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SupportTier)(nil)).Elem()
}

func (o SupportTierPtrOutput) ToSupportTierPtrOutput() SupportTierPtrOutput {
	return o
}

func (o SupportTierPtrOutput) ToSupportTierPtrOutputWithContext(ctx context.Context) SupportTierPtrOutput {
	return o
}

func (o SupportTierPtrOutput) Elem() SupportTierOutput {
	return o.ApplyT(func(v *SupportTier) SupportTier {
		if v != nil {
			return *v
		}
		var ret SupportTier
		return ret
	}).(SupportTierOutput)
}

func (o SupportTierPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SupportTierPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *SupportTier) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// SupportTierInput is an input type that accepts values of the SupportTier enum
// A concrete instance of `SupportTierInput` can be one of the following:
//
//	SupportTierMicrosoft
//	SupportTierPartner
//	SupportTierCommunity
type SupportTierInput interface {
	pulumi.Input

	ToSupportTierOutput() SupportTierOutput
	ToSupportTierOutputWithContext(context.Context) SupportTierOutput
}

var supportTierPtrType = reflect.TypeOf((**SupportTier)(nil)).Elem()

type SupportTierPtrInput interface {
	pulumi.Input

	ToSupportTierPtrOutput() SupportTierPtrOutput
	ToSupportTierPtrOutputWithContext(context.Context) SupportTierPtrOutput
}

type supportTierPtr string

func SupportTierPtr(v string) SupportTierPtrInput {
	return (*supportTierPtr)(&v)
}

func (*supportTierPtr) ElementType() reflect.Type {
	return supportTierPtrType
}

func (in *supportTierPtr) ToSupportTierPtrOutput() SupportTierPtrOutput {
	return pulumi.ToOutput(in).(SupportTierPtrOutput)
}

func (in *supportTierPtr) ToSupportTierPtrOutputWithContext(ctx context.Context) SupportTierPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(SupportTierPtrOutput)
}

// The kind of the entity.
type ThreatIntelligenceResourceInnerKind string

const (
	// Entity represents threat intelligence indicator in the system.
	ThreatIntelligenceResourceInnerKindIndicator = ThreatIntelligenceResourceInnerKind("indicator")
)

// The operation against the threshold that triggers alert rule.
type TriggerOperator string

const (
	TriggerOperatorGreaterThan = TriggerOperator("GreaterThan")
	TriggerOperatorLessThan    = TriggerOperator("LessThan")
	TriggerOperatorEqual       = TriggerOperator("Equal")
	TriggerOperatorNotEqual    = TriggerOperator("NotEqual")
)

func (TriggerOperator) ElementType() reflect.Type {
	return reflect.TypeOf((*TriggerOperator)(nil)).Elem()
}

func (e TriggerOperator) ToTriggerOperatorOutput() TriggerOperatorOutput {
	return pulumi.ToOutput(e).(TriggerOperatorOutput)
}

func (e TriggerOperator) ToTriggerOperatorOutputWithContext(ctx context.Context) TriggerOperatorOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TriggerOperatorOutput)
}

func (e TriggerOperator) ToTriggerOperatorPtrOutput() TriggerOperatorPtrOutput {
	return e.ToTriggerOperatorPtrOutputWithContext(context.Background())
}

func (e TriggerOperator) ToTriggerOperatorPtrOutputWithContext(ctx context.Context) TriggerOperatorPtrOutput {
	return TriggerOperator(e).ToTriggerOperatorOutputWithContext(ctx).ToTriggerOperatorPtrOutputWithContext(ctx)
}

func (e TriggerOperator) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TriggerOperator) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TriggerOperator) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TriggerOperator) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TriggerOperatorOutput struct{ *pulumi.OutputState }

func (TriggerOperatorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TriggerOperator)(nil)).Elem()
}

func (o TriggerOperatorOutput) ToTriggerOperatorOutput() TriggerOperatorOutput {
	return o
}

func (o TriggerOperatorOutput) ToTriggerOperatorOutputWithContext(ctx context.Context) TriggerOperatorOutput {
	return o
}

func (o TriggerOperatorOutput) ToTriggerOperatorPtrOutput() TriggerOperatorPtrOutput {
	return o.ToTriggerOperatorPtrOutputWithContext(context.Background())
}

func (o TriggerOperatorOutput) ToTriggerOperatorPtrOutputWithContext(ctx context.Context) TriggerOperatorPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TriggerOperator) *TriggerOperator {
		return &v
	}).(TriggerOperatorPtrOutput)
}

func (o TriggerOperatorOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TriggerOperatorOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TriggerOperator) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TriggerOperatorOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TriggerOperatorOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TriggerOperator) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TriggerOperatorPtrOutput struct{ *pulumi.OutputState }

func (TriggerOperatorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TriggerOperator)(nil)).Elem()
}

func (o TriggerOperatorPtrOutput) ToTriggerOperatorPtrOutput() TriggerOperatorPtrOutput {
	return o
}

func (o TriggerOperatorPtrOutput) ToTriggerOperatorPtrOutputWithContext(ctx context.Context) TriggerOperatorPtrOutput {
	return o
}

func (o TriggerOperatorPtrOutput) Elem() TriggerOperatorOutput {
	return o.ApplyT(func(v *TriggerOperator) TriggerOperator {
		if v != nil {
			return *v
		}
		var ret TriggerOperator
		return ret
	}).(TriggerOperatorOutput)
}

func (o TriggerOperatorPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TriggerOperatorPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TriggerOperator) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TriggerOperatorInput is an input type that accepts values of the TriggerOperator enum
// A concrete instance of `TriggerOperatorInput` can be one of the following:
//
//	TriggerOperatorGreaterThan
//	TriggerOperatorLessThan
//	TriggerOperatorEqual
//	TriggerOperatorNotEqual
type TriggerOperatorInput interface {
	pulumi.Input

	ToTriggerOperatorOutput() TriggerOperatorOutput
	ToTriggerOperatorOutputWithContext(context.Context) TriggerOperatorOutput
}

var triggerOperatorPtrType = reflect.TypeOf((**TriggerOperator)(nil)).Elem()

type TriggerOperatorPtrInput interface {
	pulumi.Input

	ToTriggerOperatorPtrOutput() TriggerOperatorPtrOutput
	ToTriggerOperatorPtrOutputWithContext(context.Context) TriggerOperatorPtrOutput
}

type triggerOperatorPtr string

func TriggerOperatorPtr(v string) TriggerOperatorPtrInput {
	return (*triggerOperatorPtr)(&v)
}

func (*triggerOperatorPtr) ElementType() reflect.Type {
	return triggerOperatorPtrType
}

func (in *triggerOperatorPtr) ToTriggerOperatorPtrOutput() TriggerOperatorPtrOutput {
	return pulumi.ToOutput(in).(TriggerOperatorPtrOutput)
}

func (in *triggerOperatorPtr) ToTriggerOperatorPtrOutputWithContext(ctx context.Context) TriggerOperatorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TriggerOperatorPtrOutput)
}

type TriggersOn string

const (
	// Trigger on Incidents
	TriggersOnIncidents = TriggersOn("Incidents")
	// Trigger on Alerts
	TriggersOnAlerts = TriggersOn("Alerts")
)

func (TriggersOn) ElementType() reflect.Type {
	return reflect.TypeOf((*TriggersOn)(nil)).Elem()
}

func (e TriggersOn) ToTriggersOnOutput() TriggersOnOutput {
	return pulumi.ToOutput(e).(TriggersOnOutput)
}

func (e TriggersOn) ToTriggersOnOutputWithContext(ctx context.Context) TriggersOnOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TriggersOnOutput)
}

func (e TriggersOn) ToTriggersOnPtrOutput() TriggersOnPtrOutput {
	return e.ToTriggersOnPtrOutputWithContext(context.Background())
}

func (e TriggersOn) ToTriggersOnPtrOutputWithContext(ctx context.Context) TriggersOnPtrOutput {
	return TriggersOn(e).ToTriggersOnOutputWithContext(ctx).ToTriggersOnPtrOutputWithContext(ctx)
}

func (e TriggersOn) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TriggersOn) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TriggersOn) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TriggersOn) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TriggersOnOutput struct{ *pulumi.OutputState }

func (TriggersOnOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TriggersOn)(nil)).Elem()
}

func (o TriggersOnOutput) ToTriggersOnOutput() TriggersOnOutput {
	return o
}

func (o TriggersOnOutput) ToTriggersOnOutputWithContext(ctx context.Context) TriggersOnOutput {
	return o
}

func (o TriggersOnOutput) ToTriggersOnPtrOutput() TriggersOnPtrOutput {
	return o.ToTriggersOnPtrOutputWithContext(context.Background())
}

func (o TriggersOnOutput) ToTriggersOnPtrOutputWithContext(ctx context.Context) TriggersOnPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TriggersOn) *TriggersOn {
		return &v
	}).(TriggersOnPtrOutput)
}

func (o TriggersOnOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TriggersOnOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TriggersOn) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TriggersOnOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TriggersOnOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TriggersOn) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TriggersOnPtrOutput struct{ *pulumi.OutputState }

func (TriggersOnPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TriggersOn)(nil)).Elem()
}

func (o TriggersOnPtrOutput) ToTriggersOnPtrOutput() TriggersOnPtrOutput {
	return o
}

func (o TriggersOnPtrOutput) ToTriggersOnPtrOutputWithContext(ctx context.Context) TriggersOnPtrOutput {
	return o
}

func (o TriggersOnPtrOutput) Elem() TriggersOnOutput {
	return o.ApplyT(func(v *TriggersOn) TriggersOn {
		if v != nil {
			return *v
		}
		var ret TriggersOn
		return ret
	}).(TriggersOnOutput)
}

func (o TriggersOnPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TriggersOnPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TriggersOn) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TriggersOnInput is an input type that accepts values of the TriggersOn enum
// A concrete instance of `TriggersOnInput` can be one of the following:
//
//	TriggersOnIncidents
//	TriggersOnAlerts
type TriggersOnInput interface {
	pulumi.Input

	ToTriggersOnOutput() TriggersOnOutput
	ToTriggersOnOutputWithContext(context.Context) TriggersOnOutput
}

var triggersOnPtrType = reflect.TypeOf((**TriggersOn)(nil)).Elem()

type TriggersOnPtrInput interface {
	pulumi.Input

	ToTriggersOnPtrOutput() TriggersOnPtrOutput
	ToTriggersOnPtrOutputWithContext(context.Context) TriggersOnPtrOutput
}

type triggersOnPtr string

func TriggersOnPtr(v string) TriggersOnPtrInput {
	return (*triggersOnPtr)(&v)
}

func (*triggersOnPtr) ElementType() reflect.Type {
	return triggersOnPtrType
}

func (in *triggersOnPtr) ToTriggersOnPtrOutput() TriggersOnPtrOutput {
	return pulumi.ToOutput(in).(TriggersOnPtrOutput)
}

func (in *triggersOnPtr) ToTriggersOnPtrOutputWithContext(ctx context.Context) TriggersOnPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TriggersOnPtrOutput)
}

type TriggersWhen string

const (
	// Trigger on created objects
	TriggersWhenCreated = TriggersWhen("Created")
	// Trigger on updated objects
	TriggersWhenUpdated = TriggersWhen("Updated")
)

func (TriggersWhen) ElementType() reflect.Type {
	return reflect.TypeOf((*TriggersWhen)(nil)).Elem()
}

func (e TriggersWhen) ToTriggersWhenOutput() TriggersWhenOutput {
	return pulumi.ToOutput(e).(TriggersWhenOutput)
}

func (e TriggersWhen) ToTriggersWhenOutputWithContext(ctx context.Context) TriggersWhenOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TriggersWhenOutput)
}

func (e TriggersWhen) ToTriggersWhenPtrOutput() TriggersWhenPtrOutput {
	return e.ToTriggersWhenPtrOutputWithContext(context.Background())
}

func (e TriggersWhen) ToTriggersWhenPtrOutputWithContext(ctx context.Context) TriggersWhenPtrOutput {
	return TriggersWhen(e).ToTriggersWhenOutputWithContext(ctx).ToTriggersWhenPtrOutputWithContext(ctx)
}

func (e TriggersWhen) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TriggersWhen) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TriggersWhen) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TriggersWhen) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TriggersWhenOutput struct{ *pulumi.OutputState }

func (TriggersWhenOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TriggersWhen)(nil)).Elem()
}

func (o TriggersWhenOutput) ToTriggersWhenOutput() TriggersWhenOutput {
	return o
}

func (o TriggersWhenOutput) ToTriggersWhenOutputWithContext(ctx context.Context) TriggersWhenOutput {
	return o
}

func (o TriggersWhenOutput) ToTriggersWhenPtrOutput() TriggersWhenPtrOutput {
	return o.ToTriggersWhenPtrOutputWithContext(context.Background())
}

func (o TriggersWhenOutput) ToTriggersWhenPtrOutputWithContext(ctx context.Context) TriggersWhenPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TriggersWhen) *TriggersWhen {
		return &v
	}).(TriggersWhenPtrOutput)
}

func (o TriggersWhenOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TriggersWhenOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TriggersWhen) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TriggersWhenOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TriggersWhenOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TriggersWhen) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TriggersWhenPtrOutput struct{ *pulumi.OutputState }

func (TriggersWhenPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TriggersWhen)(nil)).Elem()
}

func (o TriggersWhenPtrOutput) ToTriggersWhenPtrOutput() TriggersWhenPtrOutput {
	return o
}

func (o TriggersWhenPtrOutput) ToTriggersWhenPtrOutputWithContext(ctx context.Context) TriggersWhenPtrOutput {
	return o
}

func (o TriggersWhenPtrOutput) Elem() TriggersWhenOutput {
	return o.ApplyT(func(v *TriggersWhen) TriggersWhen {
		if v != nil {
			return *v
		}
		var ret TriggersWhen
		return ret
	}).(TriggersWhenOutput)
}

func (o TriggersWhenPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TriggersWhenPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TriggersWhen) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TriggersWhenInput is an input type that accepts values of the TriggersWhen enum
// A concrete instance of `TriggersWhenInput` can be one of the following:
//
//	TriggersWhenCreated
//	TriggersWhenUpdated
type TriggersWhenInput interface {
	pulumi.Input

	ToTriggersWhenOutput() TriggersWhenOutput
	ToTriggersWhenOutputWithContext(context.Context) TriggersWhenOutput
}

var triggersWhenPtrType = reflect.TypeOf((**TriggersWhen)(nil)).Elem()

type TriggersWhenPtrInput interface {
	pulumi.Input

	ToTriggersWhenPtrOutput() TriggersWhenPtrOutput
	ToTriggersWhenPtrOutputWithContext(context.Context) TriggersWhenPtrOutput
}

type triggersWhenPtr string

func TriggersWhenPtr(v string) TriggersWhenPtrInput {
	return (*triggersWhenPtr)(&v)
}

func (*triggersWhenPtr) ElementType() reflect.Type {
	return triggersWhenPtrType
}

func (in *triggersWhenPtr) ToTriggersWhenPtrOutput() TriggersWhenPtrOutput {
	return pulumi.ToOutput(in).(TriggersWhenPtrOutput)
}

func (in *triggersWhenPtr) ToTriggersWhenPtrOutputWithContext(ctx context.Context) TriggersWhenPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TriggersWhenPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(AlertDetailOutput{})
	pulumi.RegisterOutputType(AlertDetailPtrOutput{})
	pulumi.RegisterOutputType(AlertPropertyOutput{})
	pulumi.RegisterOutputType(AlertPropertyPtrOutput{})
	pulumi.RegisterOutputType(AlertSeverityOutput{})
	pulumi.RegisterOutputType(AlertSeverityPtrOutput{})
	pulumi.RegisterOutputType(AttackTacticOutput{})
	pulumi.RegisterOutputType(AttackTacticPtrOutput{})
	pulumi.RegisterOutputType(AutomationRuleBooleanConditionSupportedOperatorOutput{})
	pulumi.RegisterOutputType(AutomationRuleBooleanConditionSupportedOperatorPtrOutput{})
	pulumi.RegisterOutputType(AutomationRulePropertyArrayChangedConditionSupportedArrayTypeOutput{})
	pulumi.RegisterOutputType(AutomationRulePropertyArrayChangedConditionSupportedArrayTypePtrOutput{})
	pulumi.RegisterOutputType(AutomationRulePropertyArrayChangedConditionSupportedChangeTypeOutput{})
	pulumi.RegisterOutputType(AutomationRulePropertyArrayChangedConditionSupportedChangeTypePtrOutput{})
	pulumi.RegisterOutputType(AutomationRulePropertyArrayConditionSupportedArrayConditionTypeOutput{})
	pulumi.RegisterOutputType(AutomationRulePropertyArrayConditionSupportedArrayConditionTypePtrOutput{})
	pulumi.RegisterOutputType(AutomationRulePropertyArrayConditionSupportedArrayTypeOutput{})
	pulumi.RegisterOutputType(AutomationRulePropertyArrayConditionSupportedArrayTypePtrOutput{})
	pulumi.RegisterOutputType(AutomationRulePropertyChangedConditionSupportedChangedTypeOutput{})
	pulumi.RegisterOutputType(AutomationRulePropertyChangedConditionSupportedChangedTypePtrOutput{})
	pulumi.RegisterOutputType(AutomationRulePropertyChangedConditionSupportedPropertyTypeOutput{})
	pulumi.RegisterOutputType(AutomationRulePropertyChangedConditionSupportedPropertyTypePtrOutput{})
	pulumi.RegisterOutputType(AutomationRulePropertyConditionSupportedOperatorOutput{})
	pulumi.RegisterOutputType(AutomationRulePropertyConditionSupportedOperatorPtrOutput{})
	pulumi.RegisterOutputType(AutomationRulePropertyConditionSupportedPropertyOutput{})
	pulumi.RegisterOutputType(AutomationRulePropertyConditionSupportedPropertyPtrOutput{})
	pulumi.RegisterOutputType(DataTypeStateOutput{})
	pulumi.RegisterOutputType(DataTypeStatePtrOutput{})
	pulumi.RegisterOutputType(EntityMappingTypeOutput{})
	pulumi.RegisterOutputType(EntityMappingTypePtrOutput{})
	pulumi.RegisterOutputType(EventGroupingAggregationKindOutput{})
	pulumi.RegisterOutputType(EventGroupingAggregationKindPtrOutput{})
	pulumi.RegisterOutputType(FlagOutput{})
	pulumi.RegisterOutputType(FlagPtrOutput{})
	pulumi.RegisterOutputType(IncidentClassificationOutput{})
	pulumi.RegisterOutputType(IncidentClassificationPtrOutput{})
	pulumi.RegisterOutputType(IncidentClassificationReasonOutput{})
	pulumi.RegisterOutputType(IncidentClassificationReasonPtrOutput{})
	pulumi.RegisterOutputType(IncidentSeverityOutput{})
	pulumi.RegisterOutputType(IncidentSeverityPtrOutput{})
	pulumi.RegisterOutputType(IncidentStatusOutput{})
	pulumi.RegisterOutputType(IncidentStatusPtrOutput{})
	pulumi.RegisterOutputType(IncidentTaskStatusOutput{})
	pulumi.RegisterOutputType(IncidentTaskStatusPtrOutput{})
	pulumi.RegisterOutputType(KindOutput{})
	pulumi.RegisterOutputType(KindPtrOutput{})
	pulumi.RegisterOutputType(MatchingMethodOutput{})
	pulumi.RegisterOutputType(MatchingMethodPtrOutput{})
	pulumi.RegisterOutputType(MicrosoftSecurityProductNameOutput{})
	pulumi.RegisterOutputType(MicrosoftSecurityProductNamePtrOutput{})
	pulumi.RegisterOutputType(OperatorOutput{})
	pulumi.RegisterOutputType(OperatorPtrOutput{})
	pulumi.RegisterOutputType(OwnerTypeOutput{})
	pulumi.RegisterOutputType(OwnerTypePtrOutput{})
	pulumi.RegisterOutputType(PackageKindOutput{})
	pulumi.RegisterOutputType(PackageKindPtrOutput{})
	pulumi.RegisterOutputType(RepositoryAccessKindOutput{})
	pulumi.RegisterOutputType(RepositoryAccessKindPtrOutput{})
	pulumi.RegisterOutputType(SettingsStatusOutput{})
	pulumi.RegisterOutputType(SettingsStatusPtrOutput{})
	pulumi.RegisterOutputType(SourceKindOutput{})
	pulumi.RegisterOutputType(SourceKindPtrOutput{})
	pulumi.RegisterOutputType(SupportTierOutput{})
	pulumi.RegisterOutputType(SupportTierPtrOutput{})
	pulumi.RegisterOutputType(TriggerOperatorOutput{})
	pulumi.RegisterOutputType(TriggerOperatorPtrOutput{})
	pulumi.RegisterOutputType(TriggersOnOutput{})
	pulumi.RegisterOutputType(TriggersOnPtrOutput{})
	pulumi.RegisterOutputType(TriggersWhenOutput{})
	pulumi.RegisterOutputType(TriggersWhenPtrOutput{})
}
