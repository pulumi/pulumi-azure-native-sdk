// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20230501preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = utilities.GetEnvOrDefault

// Represents Activity timeline item.
type ActivityTimelineItemResponse struct {
	// The grouping bucket end time.
	BucketEndTimeUTC string `pulumi:"bucketEndTimeUTC"`
	// The grouping bucket start time.
	BucketStartTimeUTC string `pulumi:"bucketStartTimeUTC"`
	// The activity timeline content.
	Content string `pulumi:"content"`
	// The time of the first activity in the grouping bucket.
	FirstActivityTimeUTC string `pulumi:"firstActivityTimeUTC"`
	// The entity query kind
	// Expected value is 'Activity'.
	Kind string `pulumi:"kind"`
	// The time of the last activity in the grouping bucket.
	LastActivityTimeUTC string `pulumi:"lastActivityTimeUTC"`
	// The activity query id.
	QueryId string `pulumi:"queryId"`
	// The activity timeline title.
	Title string `pulumi:"title"`
}

// Represents Activity timeline item.
type ActivityTimelineItemResponseOutput struct{ *pulumi.OutputState }

func (ActivityTimelineItemResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ActivityTimelineItemResponse)(nil)).Elem()
}

func (o ActivityTimelineItemResponseOutput) ToActivityTimelineItemResponseOutput() ActivityTimelineItemResponseOutput {
	return o
}

func (o ActivityTimelineItemResponseOutput) ToActivityTimelineItemResponseOutputWithContext(ctx context.Context) ActivityTimelineItemResponseOutput {
	return o
}

// The grouping bucket end time.
func (o ActivityTimelineItemResponseOutput) BucketEndTimeUTC() pulumi.StringOutput {
	return o.ApplyT(func(v ActivityTimelineItemResponse) string { return v.BucketEndTimeUTC }).(pulumi.StringOutput)
}

// The grouping bucket start time.
func (o ActivityTimelineItemResponseOutput) BucketStartTimeUTC() pulumi.StringOutput {
	return o.ApplyT(func(v ActivityTimelineItemResponse) string { return v.BucketStartTimeUTC }).(pulumi.StringOutput)
}

// The activity timeline content.
func (o ActivityTimelineItemResponseOutput) Content() pulumi.StringOutput {
	return o.ApplyT(func(v ActivityTimelineItemResponse) string { return v.Content }).(pulumi.StringOutput)
}

// The time of the first activity in the grouping bucket.
func (o ActivityTimelineItemResponseOutput) FirstActivityTimeUTC() pulumi.StringOutput {
	return o.ApplyT(func(v ActivityTimelineItemResponse) string { return v.FirstActivityTimeUTC }).(pulumi.StringOutput)
}

// The entity query kind
// Expected value is 'Activity'.
func (o ActivityTimelineItemResponseOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v ActivityTimelineItemResponse) string { return v.Kind }).(pulumi.StringOutput)
}

// The time of the last activity in the grouping bucket.
func (o ActivityTimelineItemResponseOutput) LastActivityTimeUTC() pulumi.StringOutput {
	return o.ApplyT(func(v ActivityTimelineItemResponse) string { return v.LastActivityTimeUTC }).(pulumi.StringOutput)
}

// The activity query id.
func (o ActivityTimelineItemResponseOutput) QueryId() pulumi.StringOutput {
	return o.ApplyT(func(v ActivityTimelineItemResponse) string { return v.QueryId }).(pulumi.StringOutput)
}

// The activity timeline title.
func (o ActivityTimelineItemResponseOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v ActivityTimelineItemResponse) string { return v.Title }).(pulumi.StringOutput)
}

// Represents anomaly timeline item.
type AnomalyTimelineItemResponse struct {
	// The anomaly azure resource id.
	AzureResourceId string `pulumi:"azureResourceId"`
	// The anomaly description.
	Description *string `pulumi:"description"`
	// The anomaly name.
	DisplayName string `pulumi:"displayName"`
	// The anomaly end time.
	EndTimeUtc string `pulumi:"endTimeUtc"`
	// The intent of the anomaly.
	Intent *string `pulumi:"intent"`
	// The entity query kind
	// Expected value is 'Anomaly'.
	Kind string `pulumi:"kind"`
	// The anomaly product name.
	ProductName *string `pulumi:"productName"`
	// The reasons that cause the anomaly.
	Reasons []string `pulumi:"reasons"`
	// The anomaly start time.
	StartTimeUtc string `pulumi:"startTimeUtc"`
	// The techniques of the anomaly.
	Techniques []string `pulumi:"techniques"`
	// The anomaly generated time.
	TimeGenerated string `pulumi:"timeGenerated"`
	// The name of the anomaly vendor.
	Vendor *string `pulumi:"vendor"`
}

// Represents anomaly timeline item.
type AnomalyTimelineItemResponseOutput struct{ *pulumi.OutputState }

func (AnomalyTimelineItemResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnomalyTimelineItemResponse)(nil)).Elem()
}

func (o AnomalyTimelineItemResponseOutput) ToAnomalyTimelineItemResponseOutput() AnomalyTimelineItemResponseOutput {
	return o
}

func (o AnomalyTimelineItemResponseOutput) ToAnomalyTimelineItemResponseOutputWithContext(ctx context.Context) AnomalyTimelineItemResponseOutput {
	return o
}

// The anomaly azure resource id.
func (o AnomalyTimelineItemResponseOutput) AzureResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v AnomalyTimelineItemResponse) string { return v.AzureResourceId }).(pulumi.StringOutput)
}

// The anomaly description.
func (o AnomalyTimelineItemResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AnomalyTimelineItemResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The anomaly name.
func (o AnomalyTimelineItemResponseOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v AnomalyTimelineItemResponse) string { return v.DisplayName }).(pulumi.StringOutput)
}

// The anomaly end time.
func (o AnomalyTimelineItemResponseOutput) EndTimeUtc() pulumi.StringOutput {
	return o.ApplyT(func(v AnomalyTimelineItemResponse) string { return v.EndTimeUtc }).(pulumi.StringOutput)
}

// The intent of the anomaly.
func (o AnomalyTimelineItemResponseOutput) Intent() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AnomalyTimelineItemResponse) *string { return v.Intent }).(pulumi.StringPtrOutput)
}

// The entity query kind
// Expected value is 'Anomaly'.
func (o AnomalyTimelineItemResponseOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v AnomalyTimelineItemResponse) string { return v.Kind }).(pulumi.StringOutput)
}

// The anomaly product name.
func (o AnomalyTimelineItemResponseOutput) ProductName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AnomalyTimelineItemResponse) *string { return v.ProductName }).(pulumi.StringPtrOutput)
}

// The reasons that cause the anomaly.
func (o AnomalyTimelineItemResponseOutput) Reasons() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AnomalyTimelineItemResponse) []string { return v.Reasons }).(pulumi.StringArrayOutput)
}

// The anomaly start time.
func (o AnomalyTimelineItemResponseOutput) StartTimeUtc() pulumi.StringOutput {
	return o.ApplyT(func(v AnomalyTimelineItemResponse) string { return v.StartTimeUtc }).(pulumi.StringOutput)
}

// The techniques of the anomaly.
func (o AnomalyTimelineItemResponseOutput) Techniques() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AnomalyTimelineItemResponse) []string { return v.Techniques }).(pulumi.StringArrayOutput)
}

// The anomaly generated time.
func (o AnomalyTimelineItemResponseOutput) TimeGenerated() pulumi.StringOutput {
	return o.ApplyT(func(v AnomalyTimelineItemResponse) string { return v.TimeGenerated }).(pulumi.StringOutput)
}

// The name of the anomaly vendor.
func (o AnomalyTimelineItemResponseOutput) Vendor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AnomalyTimelineItemResponse) *string { return v.Vendor }).(pulumi.StringPtrOutput)
}

// Resources created in Azure DevOps repository.
type AzureDevOpsResourceInfo struct {
	// Id of the pipeline created for the source-control.
	PipelineId *string `pulumi:"pipelineId"`
	// Id of the service-connection created for the source-control.
	ServiceConnectionId *string `pulumi:"serviceConnectionId"`
}

// AzureDevOpsResourceInfoInput is an input type that accepts AzureDevOpsResourceInfoArgs and AzureDevOpsResourceInfoOutput values.
// You can construct a concrete instance of `AzureDevOpsResourceInfoInput` via:
//
//	AzureDevOpsResourceInfoArgs{...}
type AzureDevOpsResourceInfoInput interface {
	pulumi.Input

	ToAzureDevOpsResourceInfoOutput() AzureDevOpsResourceInfoOutput
	ToAzureDevOpsResourceInfoOutputWithContext(context.Context) AzureDevOpsResourceInfoOutput
}

// Resources created in Azure DevOps repository.
type AzureDevOpsResourceInfoArgs struct {
	// Id of the pipeline created for the source-control.
	PipelineId pulumi.StringPtrInput `pulumi:"pipelineId"`
	// Id of the service-connection created for the source-control.
	ServiceConnectionId pulumi.StringPtrInput `pulumi:"serviceConnectionId"`
}

func (AzureDevOpsResourceInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureDevOpsResourceInfo)(nil)).Elem()
}

func (i AzureDevOpsResourceInfoArgs) ToAzureDevOpsResourceInfoOutput() AzureDevOpsResourceInfoOutput {
	return i.ToAzureDevOpsResourceInfoOutputWithContext(context.Background())
}

func (i AzureDevOpsResourceInfoArgs) ToAzureDevOpsResourceInfoOutputWithContext(ctx context.Context) AzureDevOpsResourceInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureDevOpsResourceInfoOutput)
}

func (i AzureDevOpsResourceInfoArgs) ToAzureDevOpsResourceInfoPtrOutput() AzureDevOpsResourceInfoPtrOutput {
	return i.ToAzureDevOpsResourceInfoPtrOutputWithContext(context.Background())
}

func (i AzureDevOpsResourceInfoArgs) ToAzureDevOpsResourceInfoPtrOutputWithContext(ctx context.Context) AzureDevOpsResourceInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureDevOpsResourceInfoOutput).ToAzureDevOpsResourceInfoPtrOutputWithContext(ctx)
}

// AzureDevOpsResourceInfoPtrInput is an input type that accepts AzureDevOpsResourceInfoArgs, AzureDevOpsResourceInfoPtr and AzureDevOpsResourceInfoPtrOutput values.
// You can construct a concrete instance of `AzureDevOpsResourceInfoPtrInput` via:
//
//	        AzureDevOpsResourceInfoArgs{...}
//
//	or:
//
//	        nil
type AzureDevOpsResourceInfoPtrInput interface {
	pulumi.Input

	ToAzureDevOpsResourceInfoPtrOutput() AzureDevOpsResourceInfoPtrOutput
	ToAzureDevOpsResourceInfoPtrOutputWithContext(context.Context) AzureDevOpsResourceInfoPtrOutput
}

type azureDevOpsResourceInfoPtrType AzureDevOpsResourceInfoArgs

func AzureDevOpsResourceInfoPtr(v *AzureDevOpsResourceInfoArgs) AzureDevOpsResourceInfoPtrInput {
	return (*azureDevOpsResourceInfoPtrType)(v)
}

func (*azureDevOpsResourceInfoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureDevOpsResourceInfo)(nil)).Elem()
}

func (i *azureDevOpsResourceInfoPtrType) ToAzureDevOpsResourceInfoPtrOutput() AzureDevOpsResourceInfoPtrOutput {
	return i.ToAzureDevOpsResourceInfoPtrOutputWithContext(context.Background())
}

func (i *azureDevOpsResourceInfoPtrType) ToAzureDevOpsResourceInfoPtrOutputWithContext(ctx context.Context) AzureDevOpsResourceInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureDevOpsResourceInfoPtrOutput)
}

// Resources created in Azure DevOps repository.
type AzureDevOpsResourceInfoOutput struct{ *pulumi.OutputState }

func (AzureDevOpsResourceInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureDevOpsResourceInfo)(nil)).Elem()
}

func (o AzureDevOpsResourceInfoOutput) ToAzureDevOpsResourceInfoOutput() AzureDevOpsResourceInfoOutput {
	return o
}

func (o AzureDevOpsResourceInfoOutput) ToAzureDevOpsResourceInfoOutputWithContext(ctx context.Context) AzureDevOpsResourceInfoOutput {
	return o
}

func (o AzureDevOpsResourceInfoOutput) ToAzureDevOpsResourceInfoPtrOutput() AzureDevOpsResourceInfoPtrOutput {
	return o.ToAzureDevOpsResourceInfoPtrOutputWithContext(context.Background())
}

func (o AzureDevOpsResourceInfoOutput) ToAzureDevOpsResourceInfoPtrOutputWithContext(ctx context.Context) AzureDevOpsResourceInfoPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AzureDevOpsResourceInfo) *AzureDevOpsResourceInfo {
		return &v
	}).(AzureDevOpsResourceInfoPtrOutput)
}

// Id of the pipeline created for the source-control.
func (o AzureDevOpsResourceInfoOutput) PipelineId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureDevOpsResourceInfo) *string { return v.PipelineId }).(pulumi.StringPtrOutput)
}

// Id of the service-connection created for the source-control.
func (o AzureDevOpsResourceInfoOutput) ServiceConnectionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureDevOpsResourceInfo) *string { return v.ServiceConnectionId }).(pulumi.StringPtrOutput)
}

type AzureDevOpsResourceInfoPtrOutput struct{ *pulumi.OutputState }

func (AzureDevOpsResourceInfoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureDevOpsResourceInfo)(nil)).Elem()
}

func (o AzureDevOpsResourceInfoPtrOutput) ToAzureDevOpsResourceInfoPtrOutput() AzureDevOpsResourceInfoPtrOutput {
	return o
}

func (o AzureDevOpsResourceInfoPtrOutput) ToAzureDevOpsResourceInfoPtrOutputWithContext(ctx context.Context) AzureDevOpsResourceInfoPtrOutput {
	return o
}

func (o AzureDevOpsResourceInfoPtrOutput) Elem() AzureDevOpsResourceInfoOutput {
	return o.ApplyT(func(v *AzureDevOpsResourceInfo) AzureDevOpsResourceInfo {
		if v != nil {
			return *v
		}
		var ret AzureDevOpsResourceInfo
		return ret
	}).(AzureDevOpsResourceInfoOutput)
}

// Id of the pipeline created for the source-control.
func (o AzureDevOpsResourceInfoPtrOutput) PipelineId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureDevOpsResourceInfo) *string {
		if v == nil {
			return nil
		}
		return v.PipelineId
	}).(pulumi.StringPtrOutput)
}

// Id of the service-connection created for the source-control.
func (o AzureDevOpsResourceInfoPtrOutput) ServiceConnectionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureDevOpsResourceInfo) *string {
		if v == nil {
			return nil
		}
		return v.ServiceConnectionId
	}).(pulumi.StringPtrOutput)
}

// Resources created in Azure DevOps repository.
type AzureDevOpsResourceInfoResponse struct {
	// Id of the pipeline created for the source-control.
	PipelineId *string `pulumi:"pipelineId"`
	// Id of the service-connection created for the source-control.
	ServiceConnectionId *string `pulumi:"serviceConnectionId"`
}

// Resources created in Azure DevOps repository.
type AzureDevOpsResourceInfoResponseOutput struct{ *pulumi.OutputState }

func (AzureDevOpsResourceInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureDevOpsResourceInfoResponse)(nil)).Elem()
}

func (o AzureDevOpsResourceInfoResponseOutput) ToAzureDevOpsResourceInfoResponseOutput() AzureDevOpsResourceInfoResponseOutput {
	return o
}

func (o AzureDevOpsResourceInfoResponseOutput) ToAzureDevOpsResourceInfoResponseOutputWithContext(ctx context.Context) AzureDevOpsResourceInfoResponseOutput {
	return o
}

// Id of the pipeline created for the source-control.
func (o AzureDevOpsResourceInfoResponseOutput) PipelineId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureDevOpsResourceInfoResponse) *string { return v.PipelineId }).(pulumi.StringPtrOutput)
}

// Id of the service-connection created for the source-control.
func (o AzureDevOpsResourceInfoResponseOutput) ServiceConnectionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureDevOpsResourceInfoResponse) *string { return v.ServiceConnectionId }).(pulumi.StringPtrOutput)
}

type AzureDevOpsResourceInfoResponsePtrOutput struct{ *pulumi.OutputState }

func (AzureDevOpsResourceInfoResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureDevOpsResourceInfoResponse)(nil)).Elem()
}

func (o AzureDevOpsResourceInfoResponsePtrOutput) ToAzureDevOpsResourceInfoResponsePtrOutput() AzureDevOpsResourceInfoResponsePtrOutput {
	return o
}

func (o AzureDevOpsResourceInfoResponsePtrOutput) ToAzureDevOpsResourceInfoResponsePtrOutputWithContext(ctx context.Context) AzureDevOpsResourceInfoResponsePtrOutput {
	return o
}

func (o AzureDevOpsResourceInfoResponsePtrOutput) Elem() AzureDevOpsResourceInfoResponseOutput {
	return o.ApplyT(func(v *AzureDevOpsResourceInfoResponse) AzureDevOpsResourceInfoResponse {
		if v != nil {
			return *v
		}
		var ret AzureDevOpsResourceInfoResponse
		return ret
	}).(AzureDevOpsResourceInfoResponseOutput)
}

// Id of the pipeline created for the source-control.
func (o AzureDevOpsResourceInfoResponsePtrOutput) PipelineId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureDevOpsResourceInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.PipelineId
	}).(pulumi.StringPtrOutput)
}

// Id of the service-connection created for the source-control.
func (o AzureDevOpsResourceInfoResponsePtrOutput) ServiceConnectionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureDevOpsResourceInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.ServiceConnectionId
	}).(pulumi.StringPtrOutput)
}

// Represents bookmark timeline item.
type BookmarkTimelineItemResponse struct {
	// The bookmark azure resource id.
	AzureResourceId string `pulumi:"azureResourceId"`
	// Describes a user that created the bookmark
	CreatedBy *UserInfoResponse `pulumi:"createdBy"`
	// The bookmark display name.
	DisplayName *string `pulumi:"displayName"`
	// The bookmark end time.
	EndTimeUtc *string `pulumi:"endTimeUtc"`
	// The bookmark event time.
	EventTime *string `pulumi:"eventTime"`
	// The entity query kind
	// Expected value is 'Bookmark'.
	Kind string `pulumi:"kind"`
	// List of labels relevant to this bookmark
	Labels []string `pulumi:"labels"`
	// The notes of the bookmark
	Notes *string `pulumi:"notes"`
	// The bookmark start time.
	StartTimeUtc *string `pulumi:"startTimeUtc"`
}

// Represents bookmark timeline item.
type BookmarkTimelineItemResponseOutput struct{ *pulumi.OutputState }

func (BookmarkTimelineItemResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BookmarkTimelineItemResponse)(nil)).Elem()
}

func (o BookmarkTimelineItemResponseOutput) ToBookmarkTimelineItemResponseOutput() BookmarkTimelineItemResponseOutput {
	return o
}

func (o BookmarkTimelineItemResponseOutput) ToBookmarkTimelineItemResponseOutputWithContext(ctx context.Context) BookmarkTimelineItemResponseOutput {
	return o
}

// The bookmark azure resource id.
func (o BookmarkTimelineItemResponseOutput) AzureResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v BookmarkTimelineItemResponse) string { return v.AzureResourceId }).(pulumi.StringOutput)
}

// Describes a user that created the bookmark
func (o BookmarkTimelineItemResponseOutput) CreatedBy() UserInfoResponsePtrOutput {
	return o.ApplyT(func(v BookmarkTimelineItemResponse) *UserInfoResponse { return v.CreatedBy }).(UserInfoResponsePtrOutput)
}

// The bookmark display name.
func (o BookmarkTimelineItemResponseOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BookmarkTimelineItemResponse) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// The bookmark end time.
func (o BookmarkTimelineItemResponseOutput) EndTimeUtc() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BookmarkTimelineItemResponse) *string { return v.EndTimeUtc }).(pulumi.StringPtrOutput)
}

// The bookmark event time.
func (o BookmarkTimelineItemResponseOutput) EventTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BookmarkTimelineItemResponse) *string { return v.EventTime }).(pulumi.StringPtrOutput)
}

// The entity query kind
// Expected value is 'Bookmark'.
func (o BookmarkTimelineItemResponseOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v BookmarkTimelineItemResponse) string { return v.Kind }).(pulumi.StringOutput)
}

// List of labels relevant to this bookmark
func (o BookmarkTimelineItemResponseOutput) Labels() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BookmarkTimelineItemResponse) []string { return v.Labels }).(pulumi.StringArrayOutput)
}

// The notes of the bookmark
func (o BookmarkTimelineItemResponseOutput) Notes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BookmarkTimelineItemResponse) *string { return v.Notes }).(pulumi.StringPtrOutput)
}

// The bookmark start time.
func (o BookmarkTimelineItemResponseOutput) StartTimeUtc() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BookmarkTimelineItemResponse) *string { return v.StartTimeUtc }).(pulumi.StringPtrOutput)
}

// The mapping of content type to a repo path.
type ContentPathMap struct {
	// Content type.
	ContentType *string `pulumi:"contentType"`
	// The path to the content.
	Path *string `pulumi:"path"`
}

// ContentPathMapInput is an input type that accepts ContentPathMap and ContentPathMapOutput values.
// You can construct a concrete instance of `ContentPathMapInput` via:
//
//	ContentPathMap{ "key": ContentPathArgs{...} }
type ContentPathMapInput interface {
	pulumi.Input

	ToContentPathMapOutput() ContentPathMapOutput
	ToContentPathMapOutputWithContext(context.Context) ContentPathMapOutput
}

// The mapping of content type to a repo path.
type ContentPathMapArgs struct {
	// Content type.
	ContentType pulumi.StringPtrInput `pulumi:"contentType"`
	// The path to the content.
	Path pulumi.StringPtrInput `pulumi:"path"`
}

func (ContentPathMapArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContentPathMap)(nil)).Elem()
}

func (i ContentPathMapArgs) ToContentPathMapOutput() ContentPathMapOutput {
	return i.ToContentPathMapOutputWithContext(context.Background())
}

func (i ContentPathMapArgs) ToContentPathMapOutputWithContext(ctx context.Context) ContentPathMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContentPathMapOutput)
}

// ContentPathMapArrayInput is an input type that accepts ContentPathMapArray and ContentPathMapArrayOutput values.
// You can construct a concrete instance of `ContentPathMapArrayInput` via:
//
//	ContentPathMapArray{ ContentPathMapArgs{...} }
type ContentPathMapArrayInput interface {
	pulumi.Input

	ToContentPathMapArrayOutput() ContentPathMapArrayOutput
	ToContentPathMapArrayOutputWithContext(context.Context) ContentPathMapArrayOutput
}

type ContentPathMapArray []ContentPathMapInput

func (ContentPathMapArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ContentPathMap)(nil)).Elem()
}

func (i ContentPathMapArray) ToContentPathMapArrayOutput() ContentPathMapArrayOutput {
	return i.ToContentPathMapArrayOutputWithContext(context.Background())
}

func (i ContentPathMapArray) ToContentPathMapArrayOutputWithContext(ctx context.Context) ContentPathMapArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContentPathMapArrayOutput)
}

// The mapping of content type to a repo path.
type ContentPathMapOutput struct{ *pulumi.OutputState }

func (ContentPathMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContentPathMap)(nil)).Elem()
}

func (o ContentPathMapOutput) ToContentPathMapOutput() ContentPathMapOutput {
	return o
}

func (o ContentPathMapOutput) ToContentPathMapOutputWithContext(ctx context.Context) ContentPathMapOutput {
	return o
}

// Content type.
func (o ContentPathMapOutput) ContentType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContentPathMap) *string { return v.ContentType }).(pulumi.StringPtrOutput)
}

// The path to the content.
func (o ContentPathMapOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContentPathMap) *string { return v.Path }).(pulumi.StringPtrOutput)
}

type ContentPathMapArrayOutput struct{ *pulumi.OutputState }

func (ContentPathMapArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ContentPathMap)(nil)).Elem()
}

func (o ContentPathMapArrayOutput) ToContentPathMapArrayOutput() ContentPathMapArrayOutput {
	return o
}

func (o ContentPathMapArrayOutput) ToContentPathMapArrayOutputWithContext(ctx context.Context) ContentPathMapArrayOutput {
	return o
}

func (o ContentPathMapArrayOutput) Index(i pulumi.IntInput) ContentPathMapOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ContentPathMap {
		return vs[0].([]ContentPathMap)[vs[1].(int)]
	}).(ContentPathMapOutput)
}

// The mapping of content type to a repo path.
type ContentPathMapResponse struct {
	// Content type.
	ContentType *string `pulumi:"contentType"`
	// The path to the content.
	Path *string `pulumi:"path"`
}

// The mapping of content type to a repo path.
type ContentPathMapResponseOutput struct{ *pulumi.OutputState }

func (ContentPathMapResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContentPathMapResponse)(nil)).Elem()
}

func (o ContentPathMapResponseOutput) ToContentPathMapResponseOutput() ContentPathMapResponseOutput {
	return o
}

func (o ContentPathMapResponseOutput) ToContentPathMapResponseOutputWithContext(ctx context.Context) ContentPathMapResponseOutput {
	return o
}

// Content type.
func (o ContentPathMapResponseOutput) ContentType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContentPathMapResponse) *string { return v.ContentType }).(pulumi.StringPtrOutput)
}

// The path to the content.
func (o ContentPathMapResponseOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContentPathMapResponse) *string { return v.Path }).(pulumi.StringPtrOutput)
}

type ContentPathMapResponseArrayOutput struct{ *pulumi.OutputState }

func (ContentPathMapResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ContentPathMapResponse)(nil)).Elem()
}

func (o ContentPathMapResponseArrayOutput) ToContentPathMapResponseArrayOutput() ContentPathMapResponseArrayOutput {
	return o
}

func (o ContentPathMapResponseArrayOutput) ToContentPathMapResponseArrayOutputWithContext(ctx context.Context) ContentPathMapResponseArrayOutput {
	return o
}

func (o ContentPathMapResponseArrayOutput) Index(i pulumi.IntInput) ContentPathMapResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ContentPathMapResponse {
		return vs[0].([]ContentPathMapResponse)[vs[1].(int)]
	}).(ContentPathMapResponseOutput)
}

// Description about a deployment.
type Deployment struct {
	// Deployment identifier.
	DeploymentId *string `pulumi:"deploymentId"`
	// Url to access repository action logs.
	DeploymentLogsUrl *string `pulumi:"deploymentLogsUrl"`
	// The outcome of the deployment.
	DeploymentResult *string `pulumi:"deploymentResult"`
	// Current status of the deployment.
	DeploymentState *string `pulumi:"deploymentState"`
	// The time when the deployment finished.
	DeploymentTime *string `pulumi:"deploymentTime"`
}

// DeploymentInput is an input type that accepts DeploymentArgs and DeploymentOutput values.
// You can construct a concrete instance of `DeploymentInput` via:
//
//	DeploymentArgs{...}
type DeploymentInput interface {
	pulumi.Input

	ToDeploymentOutput() DeploymentOutput
	ToDeploymentOutputWithContext(context.Context) DeploymentOutput
}

// Description about a deployment.
type DeploymentArgs struct {
	// Deployment identifier.
	DeploymentId pulumi.StringPtrInput `pulumi:"deploymentId"`
	// Url to access repository action logs.
	DeploymentLogsUrl pulumi.StringPtrInput `pulumi:"deploymentLogsUrl"`
	// The outcome of the deployment.
	DeploymentResult pulumi.StringPtrInput `pulumi:"deploymentResult"`
	// Current status of the deployment.
	DeploymentState pulumi.StringPtrInput `pulumi:"deploymentState"`
	// The time when the deployment finished.
	DeploymentTime pulumi.StringPtrInput `pulumi:"deploymentTime"`
}

func (DeploymentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Deployment)(nil)).Elem()
}

func (i DeploymentArgs) ToDeploymentOutput() DeploymentOutput {
	return i.ToDeploymentOutputWithContext(context.Background())
}

func (i DeploymentArgs) ToDeploymentOutputWithContext(ctx context.Context) DeploymentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentOutput)
}

func (i DeploymentArgs) ToDeploymentPtrOutput() DeploymentPtrOutput {
	return i.ToDeploymentPtrOutputWithContext(context.Background())
}

func (i DeploymentArgs) ToDeploymentPtrOutputWithContext(ctx context.Context) DeploymentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentOutput).ToDeploymentPtrOutputWithContext(ctx)
}

// DeploymentPtrInput is an input type that accepts DeploymentArgs, DeploymentPtr and DeploymentPtrOutput values.
// You can construct a concrete instance of `DeploymentPtrInput` via:
//
//	        DeploymentArgs{...}
//
//	or:
//
//	        nil
type DeploymentPtrInput interface {
	pulumi.Input

	ToDeploymentPtrOutput() DeploymentPtrOutput
	ToDeploymentPtrOutputWithContext(context.Context) DeploymentPtrOutput
}

type deploymentPtrType DeploymentArgs

func DeploymentPtr(v *DeploymentArgs) DeploymentPtrInput {
	return (*deploymentPtrType)(v)
}

func (*deploymentPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Deployment)(nil)).Elem()
}

func (i *deploymentPtrType) ToDeploymentPtrOutput() DeploymentPtrOutput {
	return i.ToDeploymentPtrOutputWithContext(context.Background())
}

func (i *deploymentPtrType) ToDeploymentPtrOutputWithContext(ctx context.Context) DeploymentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentPtrOutput)
}

// Description about a deployment.
type DeploymentOutput struct{ *pulumi.OutputState }

func (DeploymentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Deployment)(nil)).Elem()
}

func (o DeploymentOutput) ToDeploymentOutput() DeploymentOutput {
	return o
}

func (o DeploymentOutput) ToDeploymentOutputWithContext(ctx context.Context) DeploymentOutput {
	return o
}

func (o DeploymentOutput) ToDeploymentPtrOutput() DeploymentPtrOutput {
	return o.ToDeploymentPtrOutputWithContext(context.Background())
}

func (o DeploymentOutput) ToDeploymentPtrOutputWithContext(ctx context.Context) DeploymentPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Deployment) *Deployment {
		return &v
	}).(DeploymentPtrOutput)
}

// Deployment identifier.
func (o DeploymentOutput) DeploymentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Deployment) *string { return v.DeploymentId }).(pulumi.StringPtrOutput)
}

// Url to access repository action logs.
func (o DeploymentOutput) DeploymentLogsUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Deployment) *string { return v.DeploymentLogsUrl }).(pulumi.StringPtrOutput)
}

// The outcome of the deployment.
func (o DeploymentOutput) DeploymentResult() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Deployment) *string { return v.DeploymentResult }).(pulumi.StringPtrOutput)
}

// Current status of the deployment.
func (o DeploymentOutput) DeploymentState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Deployment) *string { return v.DeploymentState }).(pulumi.StringPtrOutput)
}

// The time when the deployment finished.
func (o DeploymentOutput) DeploymentTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Deployment) *string { return v.DeploymentTime }).(pulumi.StringPtrOutput)
}

type DeploymentPtrOutput struct{ *pulumi.OutputState }

func (DeploymentPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Deployment)(nil)).Elem()
}

func (o DeploymentPtrOutput) ToDeploymentPtrOutput() DeploymentPtrOutput {
	return o
}

func (o DeploymentPtrOutput) ToDeploymentPtrOutputWithContext(ctx context.Context) DeploymentPtrOutput {
	return o
}

func (o DeploymentPtrOutput) Elem() DeploymentOutput {
	return o.ApplyT(func(v *Deployment) Deployment {
		if v != nil {
			return *v
		}
		var ret Deployment
		return ret
	}).(DeploymentOutput)
}

// Deployment identifier.
func (o DeploymentPtrOutput) DeploymentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Deployment) *string {
		if v == nil {
			return nil
		}
		return v.DeploymentId
	}).(pulumi.StringPtrOutput)
}

// Url to access repository action logs.
func (o DeploymentPtrOutput) DeploymentLogsUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Deployment) *string {
		if v == nil {
			return nil
		}
		return v.DeploymentLogsUrl
	}).(pulumi.StringPtrOutput)
}

// The outcome of the deployment.
func (o DeploymentPtrOutput) DeploymentResult() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Deployment) *string {
		if v == nil {
			return nil
		}
		return v.DeploymentResult
	}).(pulumi.StringPtrOutput)
}

// Current status of the deployment.
func (o DeploymentPtrOutput) DeploymentState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Deployment) *string {
		if v == nil {
			return nil
		}
		return v.DeploymentState
	}).(pulumi.StringPtrOutput)
}

// The time when the deployment finished.
func (o DeploymentPtrOutput) DeploymentTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Deployment) *string {
		if v == nil {
			return nil
		}
		return v.DeploymentTime
	}).(pulumi.StringPtrOutput)
}

// Information regarding a deployment.
type DeploymentInfo struct {
	// Deployment information.
	Deployment *Deployment `pulumi:"deployment"`
	// Status while fetching the last deployment.
	DeploymentFetchStatus *string `pulumi:"deploymentFetchStatus"`
	// Additional details about the deployment that can be shown to the user.
	Message *string `pulumi:"message"`
}

// DeploymentInfoInput is an input type that accepts DeploymentInfoArgs and DeploymentInfoOutput values.
// You can construct a concrete instance of `DeploymentInfoInput` via:
//
//	DeploymentInfoArgs{...}
type DeploymentInfoInput interface {
	pulumi.Input

	ToDeploymentInfoOutput() DeploymentInfoOutput
	ToDeploymentInfoOutputWithContext(context.Context) DeploymentInfoOutput
}

// Information regarding a deployment.
type DeploymentInfoArgs struct {
	// Deployment information.
	Deployment DeploymentPtrInput `pulumi:"deployment"`
	// Status while fetching the last deployment.
	DeploymentFetchStatus pulumi.StringPtrInput `pulumi:"deploymentFetchStatus"`
	// Additional details about the deployment that can be shown to the user.
	Message pulumi.StringPtrInput `pulumi:"message"`
}

func (DeploymentInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentInfo)(nil)).Elem()
}

func (i DeploymentInfoArgs) ToDeploymentInfoOutput() DeploymentInfoOutput {
	return i.ToDeploymentInfoOutputWithContext(context.Background())
}

func (i DeploymentInfoArgs) ToDeploymentInfoOutputWithContext(ctx context.Context) DeploymentInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentInfoOutput)
}

func (i DeploymentInfoArgs) ToDeploymentInfoPtrOutput() DeploymentInfoPtrOutput {
	return i.ToDeploymentInfoPtrOutputWithContext(context.Background())
}

func (i DeploymentInfoArgs) ToDeploymentInfoPtrOutputWithContext(ctx context.Context) DeploymentInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentInfoOutput).ToDeploymentInfoPtrOutputWithContext(ctx)
}

// DeploymentInfoPtrInput is an input type that accepts DeploymentInfoArgs, DeploymentInfoPtr and DeploymentInfoPtrOutput values.
// You can construct a concrete instance of `DeploymentInfoPtrInput` via:
//
//	        DeploymentInfoArgs{...}
//
//	or:
//
//	        nil
type DeploymentInfoPtrInput interface {
	pulumi.Input

	ToDeploymentInfoPtrOutput() DeploymentInfoPtrOutput
	ToDeploymentInfoPtrOutputWithContext(context.Context) DeploymentInfoPtrOutput
}

type deploymentInfoPtrType DeploymentInfoArgs

func DeploymentInfoPtr(v *DeploymentInfoArgs) DeploymentInfoPtrInput {
	return (*deploymentInfoPtrType)(v)
}

func (*deploymentInfoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DeploymentInfo)(nil)).Elem()
}

func (i *deploymentInfoPtrType) ToDeploymentInfoPtrOutput() DeploymentInfoPtrOutput {
	return i.ToDeploymentInfoPtrOutputWithContext(context.Background())
}

func (i *deploymentInfoPtrType) ToDeploymentInfoPtrOutputWithContext(ctx context.Context) DeploymentInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentInfoPtrOutput)
}

// Information regarding a deployment.
type DeploymentInfoOutput struct{ *pulumi.OutputState }

func (DeploymentInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentInfo)(nil)).Elem()
}

func (o DeploymentInfoOutput) ToDeploymentInfoOutput() DeploymentInfoOutput {
	return o
}

func (o DeploymentInfoOutput) ToDeploymentInfoOutputWithContext(ctx context.Context) DeploymentInfoOutput {
	return o
}

func (o DeploymentInfoOutput) ToDeploymentInfoPtrOutput() DeploymentInfoPtrOutput {
	return o.ToDeploymentInfoPtrOutputWithContext(context.Background())
}

func (o DeploymentInfoOutput) ToDeploymentInfoPtrOutputWithContext(ctx context.Context) DeploymentInfoPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DeploymentInfo) *DeploymentInfo {
		return &v
	}).(DeploymentInfoPtrOutput)
}

// Deployment information.
func (o DeploymentInfoOutput) Deployment() DeploymentPtrOutput {
	return o.ApplyT(func(v DeploymentInfo) *Deployment { return v.Deployment }).(DeploymentPtrOutput)
}

// Status while fetching the last deployment.
func (o DeploymentInfoOutput) DeploymentFetchStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentInfo) *string { return v.DeploymentFetchStatus }).(pulumi.StringPtrOutput)
}

// Additional details about the deployment that can be shown to the user.
func (o DeploymentInfoOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentInfo) *string { return v.Message }).(pulumi.StringPtrOutput)
}

type DeploymentInfoPtrOutput struct{ *pulumi.OutputState }

func (DeploymentInfoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeploymentInfo)(nil)).Elem()
}

func (o DeploymentInfoPtrOutput) ToDeploymentInfoPtrOutput() DeploymentInfoPtrOutput {
	return o
}

func (o DeploymentInfoPtrOutput) ToDeploymentInfoPtrOutputWithContext(ctx context.Context) DeploymentInfoPtrOutput {
	return o
}

func (o DeploymentInfoPtrOutput) Elem() DeploymentInfoOutput {
	return o.ApplyT(func(v *DeploymentInfo) DeploymentInfo {
		if v != nil {
			return *v
		}
		var ret DeploymentInfo
		return ret
	}).(DeploymentInfoOutput)
}

// Deployment information.
func (o DeploymentInfoPtrOutput) Deployment() DeploymentPtrOutput {
	return o.ApplyT(func(v *DeploymentInfo) *Deployment {
		if v == nil {
			return nil
		}
		return v.Deployment
	}).(DeploymentPtrOutput)
}

// Status while fetching the last deployment.
func (o DeploymentInfoPtrOutput) DeploymentFetchStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentInfo) *string {
		if v == nil {
			return nil
		}
		return v.DeploymentFetchStatus
	}).(pulumi.StringPtrOutput)
}

// Additional details about the deployment that can be shown to the user.
func (o DeploymentInfoPtrOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentInfo) *string {
		if v == nil {
			return nil
		}
		return v.Message
	}).(pulumi.StringPtrOutput)
}

// Information regarding a deployment.
type DeploymentInfoResponse struct {
	// Deployment information.
	Deployment *DeploymentResponse `pulumi:"deployment"`
	// Status while fetching the last deployment.
	DeploymentFetchStatus *string `pulumi:"deploymentFetchStatus"`
	// Additional details about the deployment that can be shown to the user.
	Message *string `pulumi:"message"`
}

// Information regarding a deployment.
type DeploymentInfoResponseOutput struct{ *pulumi.OutputState }

func (DeploymentInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentInfoResponse)(nil)).Elem()
}

func (o DeploymentInfoResponseOutput) ToDeploymentInfoResponseOutput() DeploymentInfoResponseOutput {
	return o
}

func (o DeploymentInfoResponseOutput) ToDeploymentInfoResponseOutputWithContext(ctx context.Context) DeploymentInfoResponseOutput {
	return o
}

// Deployment information.
func (o DeploymentInfoResponseOutput) Deployment() DeploymentResponsePtrOutput {
	return o.ApplyT(func(v DeploymentInfoResponse) *DeploymentResponse { return v.Deployment }).(DeploymentResponsePtrOutput)
}

// Status while fetching the last deployment.
func (o DeploymentInfoResponseOutput) DeploymentFetchStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentInfoResponse) *string { return v.DeploymentFetchStatus }).(pulumi.StringPtrOutput)
}

// Additional details about the deployment that can be shown to the user.
func (o DeploymentInfoResponseOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentInfoResponse) *string { return v.Message }).(pulumi.StringPtrOutput)
}

type DeploymentInfoResponsePtrOutput struct{ *pulumi.OutputState }

func (DeploymentInfoResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeploymentInfoResponse)(nil)).Elem()
}

func (o DeploymentInfoResponsePtrOutput) ToDeploymentInfoResponsePtrOutput() DeploymentInfoResponsePtrOutput {
	return o
}

func (o DeploymentInfoResponsePtrOutput) ToDeploymentInfoResponsePtrOutputWithContext(ctx context.Context) DeploymentInfoResponsePtrOutput {
	return o
}

func (o DeploymentInfoResponsePtrOutput) Elem() DeploymentInfoResponseOutput {
	return o.ApplyT(func(v *DeploymentInfoResponse) DeploymentInfoResponse {
		if v != nil {
			return *v
		}
		var ret DeploymentInfoResponse
		return ret
	}).(DeploymentInfoResponseOutput)
}

// Deployment information.
func (o DeploymentInfoResponsePtrOutput) Deployment() DeploymentResponsePtrOutput {
	return o.ApplyT(func(v *DeploymentInfoResponse) *DeploymentResponse {
		if v == nil {
			return nil
		}
		return v.Deployment
	}).(DeploymentResponsePtrOutput)
}

// Status while fetching the last deployment.
func (o DeploymentInfoResponsePtrOutput) DeploymentFetchStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.DeploymentFetchStatus
	}).(pulumi.StringPtrOutput)
}

// Additional details about the deployment that can be shown to the user.
func (o DeploymentInfoResponsePtrOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.Message
	}).(pulumi.StringPtrOutput)
}

// Description about a deployment.
type DeploymentResponse struct {
	// Deployment identifier.
	DeploymentId *string `pulumi:"deploymentId"`
	// Url to access repository action logs.
	DeploymentLogsUrl *string `pulumi:"deploymentLogsUrl"`
	// The outcome of the deployment.
	DeploymentResult *string `pulumi:"deploymentResult"`
	// Current status of the deployment.
	DeploymentState *string `pulumi:"deploymentState"`
	// The time when the deployment finished.
	DeploymentTime *string `pulumi:"deploymentTime"`
}

// Description about a deployment.
type DeploymentResponseOutput struct{ *pulumi.OutputState }

func (DeploymentResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentResponse)(nil)).Elem()
}

func (o DeploymentResponseOutput) ToDeploymentResponseOutput() DeploymentResponseOutput {
	return o
}

func (o DeploymentResponseOutput) ToDeploymentResponseOutputWithContext(ctx context.Context) DeploymentResponseOutput {
	return o
}

// Deployment identifier.
func (o DeploymentResponseOutput) DeploymentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentResponse) *string { return v.DeploymentId }).(pulumi.StringPtrOutput)
}

// Url to access repository action logs.
func (o DeploymentResponseOutput) DeploymentLogsUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentResponse) *string { return v.DeploymentLogsUrl }).(pulumi.StringPtrOutput)
}

// The outcome of the deployment.
func (o DeploymentResponseOutput) DeploymentResult() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentResponse) *string { return v.DeploymentResult }).(pulumi.StringPtrOutput)
}

// Current status of the deployment.
func (o DeploymentResponseOutput) DeploymentState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentResponse) *string { return v.DeploymentState }).(pulumi.StringPtrOutput)
}

// The time when the deployment finished.
func (o DeploymentResponseOutput) DeploymentTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentResponse) *string { return v.DeploymentTime }).(pulumi.StringPtrOutput)
}

type DeploymentResponsePtrOutput struct{ *pulumi.OutputState }

func (DeploymentResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeploymentResponse)(nil)).Elem()
}

func (o DeploymentResponsePtrOutput) ToDeploymentResponsePtrOutput() DeploymentResponsePtrOutput {
	return o
}

func (o DeploymentResponsePtrOutput) ToDeploymentResponsePtrOutputWithContext(ctx context.Context) DeploymentResponsePtrOutput {
	return o
}

func (o DeploymentResponsePtrOutput) Elem() DeploymentResponseOutput {
	return o.ApplyT(func(v *DeploymentResponse) DeploymentResponse {
		if v != nil {
			return *v
		}
		var ret DeploymentResponse
		return ret
	}).(DeploymentResponseOutput)
}

// Deployment identifier.
func (o DeploymentResponsePtrOutput) DeploymentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentResponse) *string {
		if v == nil {
			return nil
		}
		return v.DeploymentId
	}).(pulumi.StringPtrOutput)
}

// Url to access repository action logs.
func (o DeploymentResponsePtrOutput) DeploymentLogsUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentResponse) *string {
		if v == nil {
			return nil
		}
		return v.DeploymentLogsUrl
	}).(pulumi.StringPtrOutput)
}

// The outcome of the deployment.
func (o DeploymentResponsePtrOutput) DeploymentResult() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentResponse) *string {
		if v == nil {
			return nil
		}
		return v.DeploymentResult
	}).(pulumi.StringPtrOutput)
}

// Current status of the deployment.
func (o DeploymentResponsePtrOutput) DeploymentState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentResponse) *string {
		if v == nil {
			return nil
		}
		return v.DeploymentState
	}).(pulumi.StringPtrOutput)
}

// The time when the deployment finished.
func (o DeploymentResponsePtrOutput) DeploymentTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentResponse) *string {
		if v == nil {
			return nil
		}
		return v.DeploymentTime
	}).(pulumi.StringPtrOutput)
}

// Entity insight Item.
type EntityInsightItemResponse struct {
	// Query results for table insights query.
	ChartQueryResults []InsightsTableResultResponse `pulumi:"chartQueryResults"`
	// The query id of the insight
	QueryId *string `pulumi:"queryId"`
	// The Time interval that the query actually executed on.
	QueryTimeInterval *EntityInsightItemResponseQueryTimeInterval `pulumi:"queryTimeInterval"`
	// Query results for table insights query.
	TableQueryResults *InsightsTableResultResponse `pulumi:"tableQueryResults"`
}

// Entity insight Item.
type EntityInsightItemResponseOutput struct{ *pulumi.OutputState }

func (EntityInsightItemResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EntityInsightItemResponse)(nil)).Elem()
}

func (o EntityInsightItemResponseOutput) ToEntityInsightItemResponseOutput() EntityInsightItemResponseOutput {
	return o
}

func (o EntityInsightItemResponseOutput) ToEntityInsightItemResponseOutputWithContext(ctx context.Context) EntityInsightItemResponseOutput {
	return o
}

// Query results for table insights query.
func (o EntityInsightItemResponseOutput) ChartQueryResults() InsightsTableResultResponseArrayOutput {
	return o.ApplyT(func(v EntityInsightItemResponse) []InsightsTableResultResponse { return v.ChartQueryResults }).(InsightsTableResultResponseArrayOutput)
}

// The query id of the insight
func (o EntityInsightItemResponseOutput) QueryId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EntityInsightItemResponse) *string { return v.QueryId }).(pulumi.StringPtrOutput)
}

// The Time interval that the query actually executed on.
func (o EntityInsightItemResponseOutput) QueryTimeInterval() EntityInsightItemResponseQueryTimeIntervalPtrOutput {
	return o.ApplyT(func(v EntityInsightItemResponse) *EntityInsightItemResponseQueryTimeInterval {
		return v.QueryTimeInterval
	}).(EntityInsightItemResponseQueryTimeIntervalPtrOutput)
}

// Query results for table insights query.
func (o EntityInsightItemResponseOutput) TableQueryResults() InsightsTableResultResponsePtrOutput {
	return o.ApplyT(func(v EntityInsightItemResponse) *InsightsTableResultResponse { return v.TableQueryResults }).(InsightsTableResultResponsePtrOutput)
}

type EntityInsightItemResponseArrayOutput struct{ *pulumi.OutputState }

func (EntityInsightItemResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EntityInsightItemResponse)(nil)).Elem()
}

func (o EntityInsightItemResponseArrayOutput) ToEntityInsightItemResponseArrayOutput() EntityInsightItemResponseArrayOutput {
	return o
}

func (o EntityInsightItemResponseArrayOutput) ToEntityInsightItemResponseArrayOutputWithContext(ctx context.Context) EntityInsightItemResponseArrayOutput {
	return o
}

func (o EntityInsightItemResponseArrayOutput) Index(i pulumi.IntInput) EntityInsightItemResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EntityInsightItemResponse {
		return vs[0].([]EntityInsightItemResponse)[vs[1].(int)]
	}).(EntityInsightItemResponseOutput)
}

// The Time interval that the query actually executed on.
type EntityInsightItemResponseQueryTimeInterval struct {
	// Insight query end time
	EndTime *string `pulumi:"endTime"`
	// Insight query start time
	StartTime *string `pulumi:"startTime"`
}

// The Time interval that the query actually executed on.
type EntityInsightItemResponseQueryTimeIntervalOutput struct{ *pulumi.OutputState }

func (EntityInsightItemResponseQueryTimeIntervalOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EntityInsightItemResponseQueryTimeInterval)(nil)).Elem()
}

func (o EntityInsightItemResponseQueryTimeIntervalOutput) ToEntityInsightItemResponseQueryTimeIntervalOutput() EntityInsightItemResponseQueryTimeIntervalOutput {
	return o
}

func (o EntityInsightItemResponseQueryTimeIntervalOutput) ToEntityInsightItemResponseQueryTimeIntervalOutputWithContext(ctx context.Context) EntityInsightItemResponseQueryTimeIntervalOutput {
	return o
}

// Insight query end time
func (o EntityInsightItemResponseQueryTimeIntervalOutput) EndTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EntityInsightItemResponseQueryTimeInterval) *string { return v.EndTime }).(pulumi.StringPtrOutput)
}

// Insight query start time
func (o EntityInsightItemResponseQueryTimeIntervalOutput) StartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EntityInsightItemResponseQueryTimeInterval) *string { return v.StartTime }).(pulumi.StringPtrOutput)
}

type EntityInsightItemResponseQueryTimeIntervalPtrOutput struct{ *pulumi.OutputState }

func (EntityInsightItemResponseQueryTimeIntervalPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EntityInsightItemResponseQueryTimeInterval)(nil)).Elem()
}

func (o EntityInsightItemResponseQueryTimeIntervalPtrOutput) ToEntityInsightItemResponseQueryTimeIntervalPtrOutput() EntityInsightItemResponseQueryTimeIntervalPtrOutput {
	return o
}

func (o EntityInsightItemResponseQueryTimeIntervalPtrOutput) ToEntityInsightItemResponseQueryTimeIntervalPtrOutputWithContext(ctx context.Context) EntityInsightItemResponseQueryTimeIntervalPtrOutput {
	return o
}

func (o EntityInsightItemResponseQueryTimeIntervalPtrOutput) Elem() EntityInsightItemResponseQueryTimeIntervalOutput {
	return o.ApplyT(func(v *EntityInsightItemResponseQueryTimeInterval) EntityInsightItemResponseQueryTimeInterval {
		if v != nil {
			return *v
		}
		var ret EntityInsightItemResponseQueryTimeInterval
		return ret
	}).(EntityInsightItemResponseQueryTimeIntervalOutput)
}

// Insight query end time
func (o EntityInsightItemResponseQueryTimeIntervalPtrOutput) EndTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EntityInsightItemResponseQueryTimeInterval) *string {
		if v == nil {
			return nil
		}
		return v.EndTime
	}).(pulumi.StringPtrOutput)
}

// Insight query start time
func (o EntityInsightItemResponseQueryTimeIntervalPtrOutput) StartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EntityInsightItemResponseQueryTimeInterval) *string {
		if v == nil {
			return nil
		}
		return v.StartTime
	}).(pulumi.StringPtrOutput)
}

// GetInsights Query Errors.
type GetInsightsErrorKindResponse struct {
	// the error message
	ErrorMessage string `pulumi:"errorMessage"`
	// the query kind
	Kind string `pulumi:"kind"`
	// the query id
	QueryId *string `pulumi:"queryId"`
}

// GetInsights Query Errors.
type GetInsightsErrorKindResponseOutput struct{ *pulumi.OutputState }

func (GetInsightsErrorKindResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInsightsErrorKindResponse)(nil)).Elem()
}

func (o GetInsightsErrorKindResponseOutput) ToGetInsightsErrorKindResponseOutput() GetInsightsErrorKindResponseOutput {
	return o
}

func (o GetInsightsErrorKindResponseOutput) ToGetInsightsErrorKindResponseOutputWithContext(ctx context.Context) GetInsightsErrorKindResponseOutput {
	return o
}

// the error message
func (o GetInsightsErrorKindResponseOutput) ErrorMessage() pulumi.StringOutput {
	return o.ApplyT(func(v GetInsightsErrorKindResponse) string { return v.ErrorMessage }).(pulumi.StringOutput)
}

// the query kind
func (o GetInsightsErrorKindResponseOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v GetInsightsErrorKindResponse) string { return v.Kind }).(pulumi.StringOutput)
}

// the query id
func (o GetInsightsErrorKindResponseOutput) QueryId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetInsightsErrorKindResponse) *string { return v.QueryId }).(pulumi.StringPtrOutput)
}

type GetInsightsErrorKindResponseArrayOutput struct{ *pulumi.OutputState }

func (GetInsightsErrorKindResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInsightsErrorKindResponse)(nil)).Elem()
}

func (o GetInsightsErrorKindResponseArrayOutput) ToGetInsightsErrorKindResponseArrayOutput() GetInsightsErrorKindResponseArrayOutput {
	return o
}

func (o GetInsightsErrorKindResponseArrayOutput) ToGetInsightsErrorKindResponseArrayOutputWithContext(ctx context.Context) GetInsightsErrorKindResponseArrayOutput {
	return o
}

func (o GetInsightsErrorKindResponseArrayOutput) Index(i pulumi.IntInput) GetInsightsErrorKindResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInsightsErrorKindResponse {
		return vs[0].([]GetInsightsErrorKindResponse)[vs[1].(int)]
	}).(GetInsightsErrorKindResponseOutput)
}

// Get Insights result metadata.
type GetInsightsResultsMetadataResponse struct {
	// information about the failed queries
	Errors []GetInsightsErrorKindResponse `pulumi:"errors"`
	// the total items found for the insights request
	TotalCount int `pulumi:"totalCount"`
}

// Get Insights result metadata.
type GetInsightsResultsMetadataResponseOutput struct{ *pulumi.OutputState }

func (GetInsightsResultsMetadataResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInsightsResultsMetadataResponse)(nil)).Elem()
}

func (o GetInsightsResultsMetadataResponseOutput) ToGetInsightsResultsMetadataResponseOutput() GetInsightsResultsMetadataResponseOutput {
	return o
}

func (o GetInsightsResultsMetadataResponseOutput) ToGetInsightsResultsMetadataResponseOutputWithContext(ctx context.Context) GetInsightsResultsMetadataResponseOutput {
	return o
}

// information about the failed queries
func (o GetInsightsResultsMetadataResponseOutput) Errors() GetInsightsErrorKindResponseArrayOutput {
	return o.ApplyT(func(v GetInsightsResultsMetadataResponse) []GetInsightsErrorKindResponse { return v.Errors }).(GetInsightsErrorKindResponseArrayOutput)
}

// the total items found for the insights request
func (o GetInsightsResultsMetadataResponseOutput) TotalCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetInsightsResultsMetadataResponse) int { return v.TotalCount }).(pulumi.IntOutput)
}

type GetInsightsResultsMetadataResponsePtrOutput struct{ *pulumi.OutputState }

func (GetInsightsResultsMetadataResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetInsightsResultsMetadataResponse)(nil)).Elem()
}

func (o GetInsightsResultsMetadataResponsePtrOutput) ToGetInsightsResultsMetadataResponsePtrOutput() GetInsightsResultsMetadataResponsePtrOutput {
	return o
}

func (o GetInsightsResultsMetadataResponsePtrOutput) ToGetInsightsResultsMetadataResponsePtrOutputWithContext(ctx context.Context) GetInsightsResultsMetadataResponsePtrOutput {
	return o
}

func (o GetInsightsResultsMetadataResponsePtrOutput) Elem() GetInsightsResultsMetadataResponseOutput {
	return o.ApplyT(func(v *GetInsightsResultsMetadataResponse) GetInsightsResultsMetadataResponse {
		if v != nil {
			return *v
		}
		var ret GetInsightsResultsMetadataResponse
		return ret
	}).(GetInsightsResultsMetadataResponseOutput)
}

// information about the failed queries
func (o GetInsightsResultsMetadataResponsePtrOutput) Errors() GetInsightsErrorKindResponseArrayOutput {
	return o.ApplyT(func(v *GetInsightsResultsMetadataResponse) []GetInsightsErrorKindResponse {
		if v == nil {
			return nil
		}
		return v.Errors
	}).(GetInsightsErrorKindResponseArrayOutput)
}

// the total items found for the insights request
func (o GetInsightsResultsMetadataResponsePtrOutput) TotalCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GetInsightsResultsMetadataResponse) *int {
		if v == nil {
			return nil
		}
		return &v.TotalCount
	}).(pulumi.IntPtrOutput)
}

// Resources created in GitHub repository.
type GitHubResourceInfo struct {
	// GitHub application installation id.
	AppInstallationId *string `pulumi:"appInstallationId"`
}

// GitHubResourceInfoInput is an input type that accepts GitHubResourceInfoArgs and GitHubResourceInfoOutput values.
// You can construct a concrete instance of `GitHubResourceInfoInput` via:
//
//	GitHubResourceInfoArgs{...}
type GitHubResourceInfoInput interface {
	pulumi.Input

	ToGitHubResourceInfoOutput() GitHubResourceInfoOutput
	ToGitHubResourceInfoOutputWithContext(context.Context) GitHubResourceInfoOutput
}

// Resources created in GitHub repository.
type GitHubResourceInfoArgs struct {
	// GitHub application installation id.
	AppInstallationId pulumi.StringPtrInput `pulumi:"appInstallationId"`
}

func (GitHubResourceInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GitHubResourceInfo)(nil)).Elem()
}

func (i GitHubResourceInfoArgs) ToGitHubResourceInfoOutput() GitHubResourceInfoOutput {
	return i.ToGitHubResourceInfoOutputWithContext(context.Background())
}

func (i GitHubResourceInfoArgs) ToGitHubResourceInfoOutputWithContext(ctx context.Context) GitHubResourceInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitHubResourceInfoOutput)
}

func (i GitHubResourceInfoArgs) ToGitHubResourceInfoPtrOutput() GitHubResourceInfoPtrOutput {
	return i.ToGitHubResourceInfoPtrOutputWithContext(context.Background())
}

func (i GitHubResourceInfoArgs) ToGitHubResourceInfoPtrOutputWithContext(ctx context.Context) GitHubResourceInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitHubResourceInfoOutput).ToGitHubResourceInfoPtrOutputWithContext(ctx)
}

// GitHubResourceInfoPtrInput is an input type that accepts GitHubResourceInfoArgs, GitHubResourceInfoPtr and GitHubResourceInfoPtrOutput values.
// You can construct a concrete instance of `GitHubResourceInfoPtrInput` via:
//
//	        GitHubResourceInfoArgs{...}
//
//	or:
//
//	        nil
type GitHubResourceInfoPtrInput interface {
	pulumi.Input

	ToGitHubResourceInfoPtrOutput() GitHubResourceInfoPtrOutput
	ToGitHubResourceInfoPtrOutputWithContext(context.Context) GitHubResourceInfoPtrOutput
}

type gitHubResourceInfoPtrType GitHubResourceInfoArgs

func GitHubResourceInfoPtr(v *GitHubResourceInfoArgs) GitHubResourceInfoPtrInput {
	return (*gitHubResourceInfoPtrType)(v)
}

func (*gitHubResourceInfoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GitHubResourceInfo)(nil)).Elem()
}

func (i *gitHubResourceInfoPtrType) ToGitHubResourceInfoPtrOutput() GitHubResourceInfoPtrOutput {
	return i.ToGitHubResourceInfoPtrOutputWithContext(context.Background())
}

func (i *gitHubResourceInfoPtrType) ToGitHubResourceInfoPtrOutputWithContext(ctx context.Context) GitHubResourceInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitHubResourceInfoPtrOutput)
}

// Resources created in GitHub repository.
type GitHubResourceInfoOutput struct{ *pulumi.OutputState }

func (GitHubResourceInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GitHubResourceInfo)(nil)).Elem()
}

func (o GitHubResourceInfoOutput) ToGitHubResourceInfoOutput() GitHubResourceInfoOutput {
	return o
}

func (o GitHubResourceInfoOutput) ToGitHubResourceInfoOutputWithContext(ctx context.Context) GitHubResourceInfoOutput {
	return o
}

func (o GitHubResourceInfoOutput) ToGitHubResourceInfoPtrOutput() GitHubResourceInfoPtrOutput {
	return o.ToGitHubResourceInfoPtrOutputWithContext(context.Background())
}

func (o GitHubResourceInfoOutput) ToGitHubResourceInfoPtrOutputWithContext(ctx context.Context) GitHubResourceInfoPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GitHubResourceInfo) *GitHubResourceInfo {
		return &v
	}).(GitHubResourceInfoPtrOutput)
}

// GitHub application installation id.
func (o GitHubResourceInfoOutput) AppInstallationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitHubResourceInfo) *string { return v.AppInstallationId }).(pulumi.StringPtrOutput)
}

type GitHubResourceInfoPtrOutput struct{ *pulumi.OutputState }

func (GitHubResourceInfoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GitHubResourceInfo)(nil)).Elem()
}

func (o GitHubResourceInfoPtrOutput) ToGitHubResourceInfoPtrOutput() GitHubResourceInfoPtrOutput {
	return o
}

func (o GitHubResourceInfoPtrOutput) ToGitHubResourceInfoPtrOutputWithContext(ctx context.Context) GitHubResourceInfoPtrOutput {
	return o
}

func (o GitHubResourceInfoPtrOutput) Elem() GitHubResourceInfoOutput {
	return o.ApplyT(func(v *GitHubResourceInfo) GitHubResourceInfo {
		if v != nil {
			return *v
		}
		var ret GitHubResourceInfo
		return ret
	}).(GitHubResourceInfoOutput)
}

// GitHub application installation id.
func (o GitHubResourceInfoPtrOutput) AppInstallationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GitHubResourceInfo) *string {
		if v == nil {
			return nil
		}
		return v.AppInstallationId
	}).(pulumi.StringPtrOutput)
}

// Resources created in GitHub repository.
type GitHubResourceInfoResponse struct {
	// GitHub application installation id.
	AppInstallationId *string `pulumi:"appInstallationId"`
}

// Resources created in GitHub repository.
type GitHubResourceInfoResponseOutput struct{ *pulumi.OutputState }

func (GitHubResourceInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GitHubResourceInfoResponse)(nil)).Elem()
}

func (o GitHubResourceInfoResponseOutput) ToGitHubResourceInfoResponseOutput() GitHubResourceInfoResponseOutput {
	return o
}

func (o GitHubResourceInfoResponseOutput) ToGitHubResourceInfoResponseOutputWithContext(ctx context.Context) GitHubResourceInfoResponseOutput {
	return o
}

// GitHub application installation id.
func (o GitHubResourceInfoResponseOutput) AppInstallationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitHubResourceInfoResponse) *string { return v.AppInstallationId }).(pulumi.StringPtrOutput)
}

type GitHubResourceInfoResponsePtrOutput struct{ *pulumi.OutputState }

func (GitHubResourceInfoResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GitHubResourceInfoResponse)(nil)).Elem()
}

func (o GitHubResourceInfoResponsePtrOutput) ToGitHubResourceInfoResponsePtrOutput() GitHubResourceInfoResponsePtrOutput {
	return o
}

func (o GitHubResourceInfoResponsePtrOutput) ToGitHubResourceInfoResponsePtrOutputWithContext(ctx context.Context) GitHubResourceInfoResponsePtrOutput {
	return o
}

func (o GitHubResourceInfoResponsePtrOutput) Elem() GitHubResourceInfoResponseOutput {
	return o.ApplyT(func(v *GitHubResourceInfoResponse) GitHubResourceInfoResponse {
		if v != nil {
			return *v
		}
		var ret GitHubResourceInfoResponse
		return ret
	}).(GitHubResourceInfoResponseOutput)
}

// GitHub application installation id.
func (o GitHubResourceInfoResponsePtrOutput) AppInstallationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GitHubResourceInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.AppInstallationId
	}).(pulumi.StringPtrOutput)
}

// Query results for table insights query.
type InsightsTableResultResponse struct {
	// Columns Metadata of the table
	Columns []InsightsTableResultResponseColumns `pulumi:"columns"`
	// Rows data of the table
	Rows [][]string `pulumi:"rows"`
}

// Query results for table insights query.
type InsightsTableResultResponseOutput struct{ *pulumi.OutputState }

func (InsightsTableResultResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InsightsTableResultResponse)(nil)).Elem()
}

func (o InsightsTableResultResponseOutput) ToInsightsTableResultResponseOutput() InsightsTableResultResponseOutput {
	return o
}

func (o InsightsTableResultResponseOutput) ToInsightsTableResultResponseOutputWithContext(ctx context.Context) InsightsTableResultResponseOutput {
	return o
}

// Columns Metadata of the table
func (o InsightsTableResultResponseOutput) Columns() InsightsTableResultResponseColumnsArrayOutput {
	return o.ApplyT(func(v InsightsTableResultResponse) []InsightsTableResultResponseColumns { return v.Columns }).(InsightsTableResultResponseColumnsArrayOutput)
}

// Rows data of the table
func (o InsightsTableResultResponseOutput) Rows() pulumi.StringArrayArrayOutput {
	return o.ApplyT(func(v InsightsTableResultResponse) [][]string { return v.Rows }).(pulumi.StringArrayArrayOutput)
}

type InsightsTableResultResponsePtrOutput struct{ *pulumi.OutputState }

func (InsightsTableResultResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InsightsTableResultResponse)(nil)).Elem()
}

func (o InsightsTableResultResponsePtrOutput) ToInsightsTableResultResponsePtrOutput() InsightsTableResultResponsePtrOutput {
	return o
}

func (o InsightsTableResultResponsePtrOutput) ToInsightsTableResultResponsePtrOutputWithContext(ctx context.Context) InsightsTableResultResponsePtrOutput {
	return o
}

func (o InsightsTableResultResponsePtrOutput) Elem() InsightsTableResultResponseOutput {
	return o.ApplyT(func(v *InsightsTableResultResponse) InsightsTableResultResponse {
		if v != nil {
			return *v
		}
		var ret InsightsTableResultResponse
		return ret
	}).(InsightsTableResultResponseOutput)
}

// Columns Metadata of the table
func (o InsightsTableResultResponsePtrOutput) Columns() InsightsTableResultResponseColumnsArrayOutput {
	return o.ApplyT(func(v *InsightsTableResultResponse) []InsightsTableResultResponseColumns {
		if v == nil {
			return nil
		}
		return v.Columns
	}).(InsightsTableResultResponseColumnsArrayOutput)
}

// Rows data of the table
func (o InsightsTableResultResponsePtrOutput) Rows() pulumi.StringArrayArrayOutput {
	return o.ApplyT(func(v *InsightsTableResultResponse) [][]string {
		if v == nil {
			return nil
		}
		return v.Rows
	}).(pulumi.StringArrayArrayOutput)
}

type InsightsTableResultResponseArrayOutput struct{ *pulumi.OutputState }

func (InsightsTableResultResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InsightsTableResultResponse)(nil)).Elem()
}

func (o InsightsTableResultResponseArrayOutput) ToInsightsTableResultResponseArrayOutput() InsightsTableResultResponseArrayOutput {
	return o
}

func (o InsightsTableResultResponseArrayOutput) ToInsightsTableResultResponseArrayOutputWithContext(ctx context.Context) InsightsTableResultResponseArrayOutput {
	return o
}

func (o InsightsTableResultResponseArrayOutput) Index(i pulumi.IntInput) InsightsTableResultResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InsightsTableResultResponse {
		return vs[0].([]InsightsTableResultResponse)[vs[1].(int)]
	}).(InsightsTableResultResponseOutput)
}

type InsightsTableResultResponseColumns struct {
	// the name of the colum
	Name *string `pulumi:"name"`
	// the type of the colum
	Type *string `pulumi:"type"`
}

type InsightsTableResultResponseColumnsOutput struct{ *pulumi.OutputState }

func (InsightsTableResultResponseColumnsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InsightsTableResultResponseColumns)(nil)).Elem()
}

func (o InsightsTableResultResponseColumnsOutput) ToInsightsTableResultResponseColumnsOutput() InsightsTableResultResponseColumnsOutput {
	return o
}

func (o InsightsTableResultResponseColumnsOutput) ToInsightsTableResultResponseColumnsOutputWithContext(ctx context.Context) InsightsTableResultResponseColumnsOutput {
	return o
}

// the name of the colum
func (o InsightsTableResultResponseColumnsOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InsightsTableResultResponseColumns) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// the type of the colum
func (o InsightsTableResultResponseColumnsOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InsightsTableResultResponseColumns) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type InsightsTableResultResponseColumnsArrayOutput struct{ *pulumi.OutputState }

func (InsightsTableResultResponseColumnsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InsightsTableResultResponseColumns)(nil)).Elem()
}

func (o InsightsTableResultResponseColumnsArrayOutput) ToInsightsTableResultResponseColumnsArrayOutput() InsightsTableResultResponseColumnsArrayOutput {
	return o
}

func (o InsightsTableResultResponseColumnsArrayOutput) ToInsightsTableResultResponseColumnsArrayOutputWithContext(ctx context.Context) InsightsTableResultResponseColumnsArrayOutput {
	return o
}

func (o InsightsTableResultResponseColumnsArrayOutput) Index(i pulumi.IntInput) InsightsTableResultResponseColumnsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InsightsTableResultResponseColumns {
		return vs[0].([]InsightsTableResultResponseColumns)[vs[1].(int)]
	}).(InsightsTableResultResponseColumnsOutput)
}

// Represents a repository.
type RepoResponse struct {
	// Array of branches.
	Branches []string `pulumi:"branches"`
	// The name of the repository.
	FullName *string `pulumi:"fullName"`
	// The url to access the repository.
	Url *string `pulumi:"url"`
}

// Represents a repository.
type RepoResponseOutput struct{ *pulumi.OutputState }

func (RepoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RepoResponse)(nil)).Elem()
}

func (o RepoResponseOutput) ToRepoResponseOutput() RepoResponseOutput {
	return o
}

func (o RepoResponseOutput) ToRepoResponseOutputWithContext(ctx context.Context) RepoResponseOutput {
	return o
}

// Array of branches.
func (o RepoResponseOutput) Branches() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RepoResponse) []string { return v.Branches }).(pulumi.StringArrayOutput)
}

// The name of the repository.
func (o RepoResponseOutput) FullName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RepoResponse) *string { return v.FullName }).(pulumi.StringPtrOutput)
}

// The url to access the repository.
func (o RepoResponseOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RepoResponse) *string { return v.Url }).(pulumi.StringPtrOutput)
}

type RepoResponseArrayOutput struct{ *pulumi.OutputState }

func (RepoResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RepoResponse)(nil)).Elem()
}

func (o RepoResponseArrayOutput) ToRepoResponseArrayOutput() RepoResponseArrayOutput {
	return o
}

func (o RepoResponseArrayOutput) ToRepoResponseArrayOutputWithContext(ctx context.Context) RepoResponseArrayOutput {
	return o
}

func (o RepoResponseArrayOutput) Index(i pulumi.IntInput) RepoResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RepoResponse {
		return vs[0].([]RepoResponse)[vs[1].(int)]
	}).(RepoResponseOutput)
}

// metadata of a repository.
type Repository struct {
	// Branch name of repository.
	Branch *string `pulumi:"branch"`
	// Url to access repository action logs.
	DeploymentLogsUrl *string `pulumi:"deploymentLogsUrl"`
	// Display url of repository.
	DisplayUrl *string `pulumi:"displayUrl"`
	// Dictionary of source control content type and path mapping.
	PathMapping []ContentPathMap `pulumi:"pathMapping"`
	// Url of repository.
	Url *string `pulumi:"url"`
}

// RepositoryInput is an input type that accepts RepositoryArgs and RepositoryOutput values.
// You can construct a concrete instance of `RepositoryInput` via:
//
//	RepositoryArgs{...}
type RepositoryInput interface {
	pulumi.Input

	ToRepositoryOutput() RepositoryOutput
	ToRepositoryOutputWithContext(context.Context) RepositoryOutput
}

// metadata of a repository.
type RepositoryArgs struct {
	// Branch name of repository.
	Branch pulumi.StringPtrInput `pulumi:"branch"`
	// Url to access repository action logs.
	DeploymentLogsUrl pulumi.StringPtrInput `pulumi:"deploymentLogsUrl"`
	// Display url of repository.
	DisplayUrl pulumi.StringPtrInput `pulumi:"displayUrl"`
	// Dictionary of source control content type and path mapping.
	PathMapping ContentPathMapArrayInput `pulumi:"pathMapping"`
	// Url of repository.
	Url pulumi.StringPtrInput `pulumi:"url"`
}

func (RepositoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Repository)(nil)).Elem()
}

func (i RepositoryArgs) ToRepositoryOutput() RepositoryOutput {
	return i.ToRepositoryOutputWithContext(context.Background())
}

func (i RepositoryArgs) ToRepositoryOutputWithContext(ctx context.Context) RepositoryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RepositoryOutput)
}

// metadata of a repository.
type RepositoryOutput struct{ *pulumi.OutputState }

func (RepositoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Repository)(nil)).Elem()
}

func (o RepositoryOutput) ToRepositoryOutput() RepositoryOutput {
	return o
}

func (o RepositoryOutput) ToRepositoryOutputWithContext(ctx context.Context) RepositoryOutput {
	return o
}

// Branch name of repository.
func (o RepositoryOutput) Branch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Repository) *string { return v.Branch }).(pulumi.StringPtrOutput)
}

// Url to access repository action logs.
func (o RepositoryOutput) DeploymentLogsUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Repository) *string { return v.DeploymentLogsUrl }).(pulumi.StringPtrOutput)
}

// Display url of repository.
func (o RepositoryOutput) DisplayUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Repository) *string { return v.DisplayUrl }).(pulumi.StringPtrOutput)
}

// Dictionary of source control content type and path mapping.
func (o RepositoryOutput) PathMapping() ContentPathMapArrayOutput {
	return o.ApplyT(func(v Repository) []ContentPathMap { return v.PathMapping }).(ContentPathMapArrayOutput)
}

// Url of repository.
func (o RepositoryOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Repository) *string { return v.Url }).(pulumi.StringPtrOutput)
}

// Resources created in user's repository for the source-control.
type RepositoryResourceInfo struct {
	// Resources created in Azure DevOps for this source-control.
	AzureDevOpsResourceInfo *AzureDevOpsResourceInfo `pulumi:"azureDevOpsResourceInfo"`
	// Resources created in GitHub for this source-control.
	GitHubResourceInfo *GitHubResourceInfo `pulumi:"gitHubResourceInfo"`
	// The webhook object created for the source-control.
	Webhook *Webhook `pulumi:"webhook"`
}

// RepositoryResourceInfoInput is an input type that accepts RepositoryResourceInfoArgs and RepositoryResourceInfoOutput values.
// You can construct a concrete instance of `RepositoryResourceInfoInput` via:
//
//	RepositoryResourceInfoArgs{...}
type RepositoryResourceInfoInput interface {
	pulumi.Input

	ToRepositoryResourceInfoOutput() RepositoryResourceInfoOutput
	ToRepositoryResourceInfoOutputWithContext(context.Context) RepositoryResourceInfoOutput
}

// Resources created in user's repository for the source-control.
type RepositoryResourceInfoArgs struct {
	// Resources created in Azure DevOps for this source-control.
	AzureDevOpsResourceInfo AzureDevOpsResourceInfoPtrInput `pulumi:"azureDevOpsResourceInfo"`
	// Resources created in GitHub for this source-control.
	GitHubResourceInfo GitHubResourceInfoPtrInput `pulumi:"gitHubResourceInfo"`
	// The webhook object created for the source-control.
	Webhook WebhookPtrInput `pulumi:"webhook"`
}

func (RepositoryResourceInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RepositoryResourceInfo)(nil)).Elem()
}

func (i RepositoryResourceInfoArgs) ToRepositoryResourceInfoOutput() RepositoryResourceInfoOutput {
	return i.ToRepositoryResourceInfoOutputWithContext(context.Background())
}

func (i RepositoryResourceInfoArgs) ToRepositoryResourceInfoOutputWithContext(ctx context.Context) RepositoryResourceInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RepositoryResourceInfoOutput)
}

func (i RepositoryResourceInfoArgs) ToRepositoryResourceInfoPtrOutput() RepositoryResourceInfoPtrOutput {
	return i.ToRepositoryResourceInfoPtrOutputWithContext(context.Background())
}

func (i RepositoryResourceInfoArgs) ToRepositoryResourceInfoPtrOutputWithContext(ctx context.Context) RepositoryResourceInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RepositoryResourceInfoOutput).ToRepositoryResourceInfoPtrOutputWithContext(ctx)
}

// RepositoryResourceInfoPtrInput is an input type that accepts RepositoryResourceInfoArgs, RepositoryResourceInfoPtr and RepositoryResourceInfoPtrOutput values.
// You can construct a concrete instance of `RepositoryResourceInfoPtrInput` via:
//
//	        RepositoryResourceInfoArgs{...}
//
//	or:
//
//	        nil
type RepositoryResourceInfoPtrInput interface {
	pulumi.Input

	ToRepositoryResourceInfoPtrOutput() RepositoryResourceInfoPtrOutput
	ToRepositoryResourceInfoPtrOutputWithContext(context.Context) RepositoryResourceInfoPtrOutput
}

type repositoryResourceInfoPtrType RepositoryResourceInfoArgs

func RepositoryResourceInfoPtr(v *RepositoryResourceInfoArgs) RepositoryResourceInfoPtrInput {
	return (*repositoryResourceInfoPtrType)(v)
}

func (*repositoryResourceInfoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RepositoryResourceInfo)(nil)).Elem()
}

func (i *repositoryResourceInfoPtrType) ToRepositoryResourceInfoPtrOutput() RepositoryResourceInfoPtrOutput {
	return i.ToRepositoryResourceInfoPtrOutputWithContext(context.Background())
}

func (i *repositoryResourceInfoPtrType) ToRepositoryResourceInfoPtrOutputWithContext(ctx context.Context) RepositoryResourceInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RepositoryResourceInfoPtrOutput)
}

// Resources created in user's repository for the source-control.
type RepositoryResourceInfoOutput struct{ *pulumi.OutputState }

func (RepositoryResourceInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RepositoryResourceInfo)(nil)).Elem()
}

func (o RepositoryResourceInfoOutput) ToRepositoryResourceInfoOutput() RepositoryResourceInfoOutput {
	return o
}

func (o RepositoryResourceInfoOutput) ToRepositoryResourceInfoOutputWithContext(ctx context.Context) RepositoryResourceInfoOutput {
	return o
}

func (o RepositoryResourceInfoOutput) ToRepositoryResourceInfoPtrOutput() RepositoryResourceInfoPtrOutput {
	return o.ToRepositoryResourceInfoPtrOutputWithContext(context.Background())
}

func (o RepositoryResourceInfoOutput) ToRepositoryResourceInfoPtrOutputWithContext(ctx context.Context) RepositoryResourceInfoPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RepositoryResourceInfo) *RepositoryResourceInfo {
		return &v
	}).(RepositoryResourceInfoPtrOutput)
}

// Resources created in Azure DevOps for this source-control.
func (o RepositoryResourceInfoOutput) AzureDevOpsResourceInfo() AzureDevOpsResourceInfoPtrOutput {
	return o.ApplyT(func(v RepositoryResourceInfo) *AzureDevOpsResourceInfo { return v.AzureDevOpsResourceInfo }).(AzureDevOpsResourceInfoPtrOutput)
}

// Resources created in GitHub for this source-control.
func (o RepositoryResourceInfoOutput) GitHubResourceInfo() GitHubResourceInfoPtrOutput {
	return o.ApplyT(func(v RepositoryResourceInfo) *GitHubResourceInfo { return v.GitHubResourceInfo }).(GitHubResourceInfoPtrOutput)
}

// The webhook object created for the source-control.
func (o RepositoryResourceInfoOutput) Webhook() WebhookPtrOutput {
	return o.ApplyT(func(v RepositoryResourceInfo) *Webhook { return v.Webhook }).(WebhookPtrOutput)
}

type RepositoryResourceInfoPtrOutput struct{ *pulumi.OutputState }

func (RepositoryResourceInfoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RepositoryResourceInfo)(nil)).Elem()
}

func (o RepositoryResourceInfoPtrOutput) ToRepositoryResourceInfoPtrOutput() RepositoryResourceInfoPtrOutput {
	return o
}

func (o RepositoryResourceInfoPtrOutput) ToRepositoryResourceInfoPtrOutputWithContext(ctx context.Context) RepositoryResourceInfoPtrOutput {
	return o
}

func (o RepositoryResourceInfoPtrOutput) Elem() RepositoryResourceInfoOutput {
	return o.ApplyT(func(v *RepositoryResourceInfo) RepositoryResourceInfo {
		if v != nil {
			return *v
		}
		var ret RepositoryResourceInfo
		return ret
	}).(RepositoryResourceInfoOutput)
}

// Resources created in Azure DevOps for this source-control.
func (o RepositoryResourceInfoPtrOutput) AzureDevOpsResourceInfo() AzureDevOpsResourceInfoPtrOutput {
	return o.ApplyT(func(v *RepositoryResourceInfo) *AzureDevOpsResourceInfo {
		if v == nil {
			return nil
		}
		return v.AzureDevOpsResourceInfo
	}).(AzureDevOpsResourceInfoPtrOutput)
}

// Resources created in GitHub for this source-control.
func (o RepositoryResourceInfoPtrOutput) GitHubResourceInfo() GitHubResourceInfoPtrOutput {
	return o.ApplyT(func(v *RepositoryResourceInfo) *GitHubResourceInfo {
		if v == nil {
			return nil
		}
		return v.GitHubResourceInfo
	}).(GitHubResourceInfoPtrOutput)
}

// The webhook object created for the source-control.
func (o RepositoryResourceInfoPtrOutput) Webhook() WebhookPtrOutput {
	return o.ApplyT(func(v *RepositoryResourceInfo) *Webhook {
		if v == nil {
			return nil
		}
		return v.Webhook
	}).(WebhookPtrOutput)
}

// Resources created in user's repository for the source-control.
type RepositoryResourceInfoResponse struct {
	// Resources created in Azure DevOps for this source-control.
	AzureDevOpsResourceInfo *AzureDevOpsResourceInfoResponse `pulumi:"azureDevOpsResourceInfo"`
	// Resources created in GitHub for this source-control.
	GitHubResourceInfo *GitHubResourceInfoResponse `pulumi:"gitHubResourceInfo"`
	// The webhook object created for the source-control.
	Webhook *WebhookResponse `pulumi:"webhook"`
}

// Resources created in user's repository for the source-control.
type RepositoryResourceInfoResponseOutput struct{ *pulumi.OutputState }

func (RepositoryResourceInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RepositoryResourceInfoResponse)(nil)).Elem()
}

func (o RepositoryResourceInfoResponseOutput) ToRepositoryResourceInfoResponseOutput() RepositoryResourceInfoResponseOutput {
	return o
}

func (o RepositoryResourceInfoResponseOutput) ToRepositoryResourceInfoResponseOutputWithContext(ctx context.Context) RepositoryResourceInfoResponseOutput {
	return o
}

// Resources created in Azure DevOps for this source-control.
func (o RepositoryResourceInfoResponseOutput) AzureDevOpsResourceInfo() AzureDevOpsResourceInfoResponsePtrOutput {
	return o.ApplyT(func(v RepositoryResourceInfoResponse) *AzureDevOpsResourceInfoResponse {
		return v.AzureDevOpsResourceInfo
	}).(AzureDevOpsResourceInfoResponsePtrOutput)
}

// Resources created in GitHub for this source-control.
func (o RepositoryResourceInfoResponseOutput) GitHubResourceInfo() GitHubResourceInfoResponsePtrOutput {
	return o.ApplyT(func(v RepositoryResourceInfoResponse) *GitHubResourceInfoResponse { return v.GitHubResourceInfo }).(GitHubResourceInfoResponsePtrOutput)
}

// The webhook object created for the source-control.
func (o RepositoryResourceInfoResponseOutput) Webhook() WebhookResponsePtrOutput {
	return o.ApplyT(func(v RepositoryResourceInfoResponse) *WebhookResponse { return v.Webhook }).(WebhookResponsePtrOutput)
}

type RepositoryResourceInfoResponsePtrOutput struct{ *pulumi.OutputState }

func (RepositoryResourceInfoResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RepositoryResourceInfoResponse)(nil)).Elem()
}

func (o RepositoryResourceInfoResponsePtrOutput) ToRepositoryResourceInfoResponsePtrOutput() RepositoryResourceInfoResponsePtrOutput {
	return o
}

func (o RepositoryResourceInfoResponsePtrOutput) ToRepositoryResourceInfoResponsePtrOutputWithContext(ctx context.Context) RepositoryResourceInfoResponsePtrOutput {
	return o
}

func (o RepositoryResourceInfoResponsePtrOutput) Elem() RepositoryResourceInfoResponseOutput {
	return o.ApplyT(func(v *RepositoryResourceInfoResponse) RepositoryResourceInfoResponse {
		if v != nil {
			return *v
		}
		var ret RepositoryResourceInfoResponse
		return ret
	}).(RepositoryResourceInfoResponseOutput)
}

// Resources created in Azure DevOps for this source-control.
func (o RepositoryResourceInfoResponsePtrOutput) AzureDevOpsResourceInfo() AzureDevOpsResourceInfoResponsePtrOutput {
	return o.ApplyT(func(v *RepositoryResourceInfoResponse) *AzureDevOpsResourceInfoResponse {
		if v == nil {
			return nil
		}
		return v.AzureDevOpsResourceInfo
	}).(AzureDevOpsResourceInfoResponsePtrOutput)
}

// Resources created in GitHub for this source-control.
func (o RepositoryResourceInfoResponsePtrOutput) GitHubResourceInfo() GitHubResourceInfoResponsePtrOutput {
	return o.ApplyT(func(v *RepositoryResourceInfoResponse) *GitHubResourceInfoResponse {
		if v == nil {
			return nil
		}
		return v.GitHubResourceInfo
	}).(GitHubResourceInfoResponsePtrOutput)
}

// The webhook object created for the source-control.
func (o RepositoryResourceInfoResponsePtrOutput) Webhook() WebhookResponsePtrOutput {
	return o.ApplyT(func(v *RepositoryResourceInfoResponse) *WebhookResponse {
		if v == nil {
			return nil
		}
		return v.Webhook
	}).(WebhookResponsePtrOutput)
}

// metadata of a repository.
type RepositoryResponse struct {
	// Branch name of repository.
	Branch *string `pulumi:"branch"`
	// Url to access repository action logs.
	DeploymentLogsUrl *string `pulumi:"deploymentLogsUrl"`
	// Display url of repository.
	DisplayUrl *string `pulumi:"displayUrl"`
	// Dictionary of source control content type and path mapping.
	PathMapping []ContentPathMapResponse `pulumi:"pathMapping"`
	// Url of repository.
	Url *string `pulumi:"url"`
}

// metadata of a repository.
type RepositoryResponseOutput struct{ *pulumi.OutputState }

func (RepositoryResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RepositoryResponse)(nil)).Elem()
}

func (o RepositoryResponseOutput) ToRepositoryResponseOutput() RepositoryResponseOutput {
	return o
}

func (o RepositoryResponseOutput) ToRepositoryResponseOutputWithContext(ctx context.Context) RepositoryResponseOutput {
	return o
}

// Branch name of repository.
func (o RepositoryResponseOutput) Branch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RepositoryResponse) *string { return v.Branch }).(pulumi.StringPtrOutput)
}

// Url to access repository action logs.
func (o RepositoryResponseOutput) DeploymentLogsUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RepositoryResponse) *string { return v.DeploymentLogsUrl }).(pulumi.StringPtrOutput)
}

// Display url of repository.
func (o RepositoryResponseOutput) DisplayUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RepositoryResponse) *string { return v.DisplayUrl }).(pulumi.StringPtrOutput)
}

// Dictionary of source control content type and path mapping.
func (o RepositoryResponseOutput) PathMapping() ContentPathMapResponseArrayOutput {
	return o.ApplyT(func(v RepositoryResponse) []ContentPathMapResponse { return v.PathMapping }).(ContentPathMapResponseArrayOutput)
}

// Url of repository.
func (o RepositoryResponseOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RepositoryResponse) *string { return v.Url }).(pulumi.StringPtrOutput)
}

// Represents security alert timeline item.
type SecurityAlertTimelineItemResponse struct {
	// The name of the alert type.
	AlertType string `pulumi:"alertType"`
	// The alert azure resource id.
	AzureResourceId string `pulumi:"azureResourceId"`
	// The alert description.
	Description *string `pulumi:"description"`
	// The alert name.
	DisplayName string `pulumi:"displayName"`
	// The alert end time.
	EndTimeUtc string `pulumi:"endTimeUtc"`
	// The intent of the alert.
	Intent string `pulumi:"intent"`
	// The entity query kind
	// Expected value is 'SecurityAlert'.
	Kind string `pulumi:"kind"`
	// The alert product name.
	ProductName *string `pulumi:"productName"`
	// The alert severity.
	Severity string `pulumi:"severity"`
	// The alert start time.
	StartTimeUtc string `pulumi:"startTimeUtc"`
	// The techniques of the alert.
	Techniques []string `pulumi:"techniques"`
	// The alert generated time.
	TimeGenerated string `pulumi:"timeGenerated"`
}

// Represents security alert timeline item.
type SecurityAlertTimelineItemResponseOutput struct{ *pulumi.OutputState }

func (SecurityAlertTimelineItemResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityAlertTimelineItemResponse)(nil)).Elem()
}

func (o SecurityAlertTimelineItemResponseOutput) ToSecurityAlertTimelineItemResponseOutput() SecurityAlertTimelineItemResponseOutput {
	return o
}

func (o SecurityAlertTimelineItemResponseOutput) ToSecurityAlertTimelineItemResponseOutputWithContext(ctx context.Context) SecurityAlertTimelineItemResponseOutput {
	return o
}

// The name of the alert type.
func (o SecurityAlertTimelineItemResponseOutput) AlertType() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityAlertTimelineItemResponse) string { return v.AlertType }).(pulumi.StringOutput)
}

// The alert azure resource id.
func (o SecurityAlertTimelineItemResponseOutput) AzureResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityAlertTimelineItemResponse) string { return v.AzureResourceId }).(pulumi.StringOutput)
}

// The alert description.
func (o SecurityAlertTimelineItemResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityAlertTimelineItemResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The alert name.
func (o SecurityAlertTimelineItemResponseOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityAlertTimelineItemResponse) string { return v.DisplayName }).(pulumi.StringOutput)
}

// The alert end time.
func (o SecurityAlertTimelineItemResponseOutput) EndTimeUtc() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityAlertTimelineItemResponse) string { return v.EndTimeUtc }).(pulumi.StringOutput)
}

// The intent of the alert.
func (o SecurityAlertTimelineItemResponseOutput) Intent() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityAlertTimelineItemResponse) string { return v.Intent }).(pulumi.StringOutput)
}

// The entity query kind
// Expected value is 'SecurityAlert'.
func (o SecurityAlertTimelineItemResponseOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityAlertTimelineItemResponse) string { return v.Kind }).(pulumi.StringOutput)
}

// The alert product name.
func (o SecurityAlertTimelineItemResponseOutput) ProductName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityAlertTimelineItemResponse) *string { return v.ProductName }).(pulumi.StringPtrOutput)
}

// The alert severity.
func (o SecurityAlertTimelineItemResponseOutput) Severity() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityAlertTimelineItemResponse) string { return v.Severity }).(pulumi.StringOutput)
}

// The alert start time.
func (o SecurityAlertTimelineItemResponseOutput) StartTimeUtc() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityAlertTimelineItemResponse) string { return v.StartTimeUtc }).(pulumi.StringOutput)
}

// The techniques of the alert.
func (o SecurityAlertTimelineItemResponseOutput) Techniques() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecurityAlertTimelineItemResponse) []string { return v.Techniques }).(pulumi.StringArrayOutput)
}

// The alert generated time.
func (o SecurityAlertTimelineItemResponseOutput) TimeGenerated() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityAlertTimelineItemResponse) string { return v.TimeGenerated }).(pulumi.StringOutput)
}

// Metadata pertaining to creation and last modification of the resource.
type SystemDataResponse struct {
	// The timestamp of resource creation (UTC).
	CreatedAt *string `pulumi:"createdAt"`
	// The identity that created the resource.
	CreatedBy *string `pulumi:"createdBy"`
	// The type of identity that created the resource.
	CreatedByType *string `pulumi:"createdByType"`
	// The timestamp of resource last modification (UTC)
	LastModifiedAt *string `pulumi:"lastModifiedAt"`
	// The identity that last modified the resource.
	LastModifiedBy *string `pulumi:"lastModifiedBy"`
	// The type of identity that last modified the resource.
	LastModifiedByType *string `pulumi:"lastModifiedByType"`
}

// Metadata pertaining to creation and last modification of the resource.
type SystemDataResponseOutput struct{ *pulumi.OutputState }

func (SystemDataResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemDataResponse)(nil)).Elem()
}

func (o SystemDataResponseOutput) ToSystemDataResponseOutput() SystemDataResponseOutput {
	return o
}

func (o SystemDataResponseOutput) ToSystemDataResponseOutputWithContext(ctx context.Context) SystemDataResponseOutput {
	return o
}

// The timestamp of resource creation (UTC).
func (o SystemDataResponseOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedAt }).(pulumi.StringPtrOutput)
}

// The identity that created the resource.
func (o SystemDataResponseOutput) CreatedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedBy }).(pulumi.StringPtrOutput)
}

// The type of identity that created the resource.
func (o SystemDataResponseOutput) CreatedByType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedByType }).(pulumi.StringPtrOutput)
}

// The timestamp of resource last modification (UTC)
func (o SystemDataResponseOutput) LastModifiedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedAt }).(pulumi.StringPtrOutput)
}

// The identity that last modified the resource.
func (o SystemDataResponseOutput) LastModifiedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedBy }).(pulumi.StringPtrOutput)
}

// The type of identity that last modified the resource.
func (o SystemDataResponseOutput) LastModifiedByType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedByType }).(pulumi.StringPtrOutput)
}

// timeline aggregation information per kind
type TimelineAggregationResponse struct {
	// the total items found for a kind
	Count int `pulumi:"count"`
	// the query kind
	Kind string `pulumi:"kind"`
}

// timeline aggregation information per kind
type TimelineAggregationResponseOutput struct{ *pulumi.OutputState }

func (TimelineAggregationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TimelineAggregationResponse)(nil)).Elem()
}

func (o TimelineAggregationResponseOutput) ToTimelineAggregationResponseOutput() TimelineAggregationResponseOutput {
	return o
}

func (o TimelineAggregationResponseOutput) ToTimelineAggregationResponseOutputWithContext(ctx context.Context) TimelineAggregationResponseOutput {
	return o
}

// the total items found for a kind
func (o TimelineAggregationResponseOutput) Count() pulumi.IntOutput {
	return o.ApplyT(func(v TimelineAggregationResponse) int { return v.Count }).(pulumi.IntOutput)
}

// the query kind
func (o TimelineAggregationResponseOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v TimelineAggregationResponse) string { return v.Kind }).(pulumi.StringOutput)
}

type TimelineAggregationResponseArrayOutput struct{ *pulumi.OutputState }

func (TimelineAggregationResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TimelineAggregationResponse)(nil)).Elem()
}

func (o TimelineAggregationResponseArrayOutput) ToTimelineAggregationResponseArrayOutput() TimelineAggregationResponseArrayOutput {
	return o
}

func (o TimelineAggregationResponseArrayOutput) ToTimelineAggregationResponseArrayOutputWithContext(ctx context.Context) TimelineAggregationResponseArrayOutput {
	return o
}

func (o TimelineAggregationResponseArrayOutput) Index(i pulumi.IntInput) TimelineAggregationResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TimelineAggregationResponse {
		return vs[0].([]TimelineAggregationResponse)[vs[1].(int)]
	}).(TimelineAggregationResponseOutput)
}

// Timeline Query Errors.
type TimelineErrorResponse struct {
	// the error message
	ErrorMessage string `pulumi:"errorMessage"`
	// the query kind
	Kind string `pulumi:"kind"`
	// the query id
	QueryId *string `pulumi:"queryId"`
}

// Timeline Query Errors.
type TimelineErrorResponseOutput struct{ *pulumi.OutputState }

func (TimelineErrorResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TimelineErrorResponse)(nil)).Elem()
}

func (o TimelineErrorResponseOutput) ToTimelineErrorResponseOutput() TimelineErrorResponseOutput {
	return o
}

func (o TimelineErrorResponseOutput) ToTimelineErrorResponseOutputWithContext(ctx context.Context) TimelineErrorResponseOutput {
	return o
}

// the error message
func (o TimelineErrorResponseOutput) ErrorMessage() pulumi.StringOutput {
	return o.ApplyT(func(v TimelineErrorResponse) string { return v.ErrorMessage }).(pulumi.StringOutput)
}

// the query kind
func (o TimelineErrorResponseOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v TimelineErrorResponse) string { return v.Kind }).(pulumi.StringOutput)
}

// the query id
func (o TimelineErrorResponseOutput) QueryId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TimelineErrorResponse) *string { return v.QueryId }).(pulumi.StringPtrOutput)
}

type TimelineErrorResponseArrayOutput struct{ *pulumi.OutputState }

func (TimelineErrorResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TimelineErrorResponse)(nil)).Elem()
}

func (o TimelineErrorResponseArrayOutput) ToTimelineErrorResponseArrayOutput() TimelineErrorResponseArrayOutput {
	return o
}

func (o TimelineErrorResponseArrayOutput) ToTimelineErrorResponseArrayOutputWithContext(ctx context.Context) TimelineErrorResponseArrayOutput {
	return o
}

func (o TimelineErrorResponseArrayOutput) Index(i pulumi.IntInput) TimelineErrorResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TimelineErrorResponse {
		return vs[0].([]TimelineErrorResponse)[vs[1].(int)]
	}).(TimelineErrorResponseOutput)
}

// Expansion result metadata.
type TimelineResultsMetadataResponse struct {
	// timeline aggregation per kind
	Aggregations []TimelineAggregationResponse `pulumi:"aggregations"`
	// information about the failure queries
	Errors []TimelineErrorResponse `pulumi:"errors"`
	// the total items found for the timeline request
	TotalCount int `pulumi:"totalCount"`
}

// Expansion result metadata.
type TimelineResultsMetadataResponseOutput struct{ *pulumi.OutputState }

func (TimelineResultsMetadataResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TimelineResultsMetadataResponse)(nil)).Elem()
}

func (o TimelineResultsMetadataResponseOutput) ToTimelineResultsMetadataResponseOutput() TimelineResultsMetadataResponseOutput {
	return o
}

func (o TimelineResultsMetadataResponseOutput) ToTimelineResultsMetadataResponseOutputWithContext(ctx context.Context) TimelineResultsMetadataResponseOutput {
	return o
}

// timeline aggregation per kind
func (o TimelineResultsMetadataResponseOutput) Aggregations() TimelineAggregationResponseArrayOutput {
	return o.ApplyT(func(v TimelineResultsMetadataResponse) []TimelineAggregationResponse { return v.Aggregations }).(TimelineAggregationResponseArrayOutput)
}

// information about the failure queries
func (o TimelineResultsMetadataResponseOutput) Errors() TimelineErrorResponseArrayOutput {
	return o.ApplyT(func(v TimelineResultsMetadataResponse) []TimelineErrorResponse { return v.Errors }).(TimelineErrorResponseArrayOutput)
}

// the total items found for the timeline request
func (o TimelineResultsMetadataResponseOutput) TotalCount() pulumi.IntOutput {
	return o.ApplyT(func(v TimelineResultsMetadataResponse) int { return v.TotalCount }).(pulumi.IntOutput)
}

type TimelineResultsMetadataResponsePtrOutput struct{ *pulumi.OutputState }

func (TimelineResultsMetadataResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TimelineResultsMetadataResponse)(nil)).Elem()
}

func (o TimelineResultsMetadataResponsePtrOutput) ToTimelineResultsMetadataResponsePtrOutput() TimelineResultsMetadataResponsePtrOutput {
	return o
}

func (o TimelineResultsMetadataResponsePtrOutput) ToTimelineResultsMetadataResponsePtrOutputWithContext(ctx context.Context) TimelineResultsMetadataResponsePtrOutput {
	return o
}

func (o TimelineResultsMetadataResponsePtrOutput) Elem() TimelineResultsMetadataResponseOutput {
	return o.ApplyT(func(v *TimelineResultsMetadataResponse) TimelineResultsMetadataResponse {
		if v != nil {
			return *v
		}
		var ret TimelineResultsMetadataResponse
		return ret
	}).(TimelineResultsMetadataResponseOutput)
}

// timeline aggregation per kind
func (o TimelineResultsMetadataResponsePtrOutput) Aggregations() TimelineAggregationResponseArrayOutput {
	return o.ApplyT(func(v *TimelineResultsMetadataResponse) []TimelineAggregationResponse {
		if v == nil {
			return nil
		}
		return v.Aggregations
	}).(TimelineAggregationResponseArrayOutput)
}

// information about the failure queries
func (o TimelineResultsMetadataResponsePtrOutput) Errors() TimelineErrorResponseArrayOutput {
	return o.ApplyT(func(v *TimelineResultsMetadataResponse) []TimelineErrorResponse {
		if v == nil {
			return nil
		}
		return v.Errors
	}).(TimelineErrorResponseArrayOutput)
}

// the total items found for the timeline request
func (o TimelineResultsMetadataResponsePtrOutput) TotalCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TimelineResultsMetadataResponse) *int {
		if v == nil {
			return nil
		}
		return &v.TotalCount
	}).(pulumi.IntPtrOutput)
}

// User information that made some action
type UserInfoResponse struct {
	// The email of the user.
	Email string `pulumi:"email"`
	// The name of the user.
	Name string `pulumi:"name"`
	// The object id of the user.
	ObjectId *string `pulumi:"objectId"`
}

// User information that made some action
type UserInfoResponseOutput struct{ *pulumi.OutputState }

func (UserInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserInfoResponse)(nil)).Elem()
}

func (o UserInfoResponseOutput) ToUserInfoResponseOutput() UserInfoResponseOutput {
	return o
}

func (o UserInfoResponseOutput) ToUserInfoResponseOutputWithContext(ctx context.Context) UserInfoResponseOutput {
	return o
}

// The email of the user.
func (o UserInfoResponseOutput) Email() pulumi.StringOutput {
	return o.ApplyT(func(v UserInfoResponse) string { return v.Email }).(pulumi.StringOutput)
}

// The name of the user.
func (o UserInfoResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v UserInfoResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The object id of the user.
func (o UserInfoResponseOutput) ObjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserInfoResponse) *string { return v.ObjectId }).(pulumi.StringPtrOutput)
}

type UserInfoResponsePtrOutput struct{ *pulumi.OutputState }

func (UserInfoResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserInfoResponse)(nil)).Elem()
}

func (o UserInfoResponsePtrOutput) ToUserInfoResponsePtrOutput() UserInfoResponsePtrOutput {
	return o
}

func (o UserInfoResponsePtrOutput) ToUserInfoResponsePtrOutputWithContext(ctx context.Context) UserInfoResponsePtrOutput {
	return o
}

func (o UserInfoResponsePtrOutput) Elem() UserInfoResponseOutput {
	return o.ApplyT(func(v *UserInfoResponse) UserInfoResponse {
		if v != nil {
			return *v
		}
		var ret UserInfoResponse
		return ret
	}).(UserInfoResponseOutput)
}

// The email of the user.
func (o UserInfoResponsePtrOutput) Email() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserInfoResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Email
	}).(pulumi.StringPtrOutput)
}

// The name of the user.
func (o UserInfoResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserInfoResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The object id of the user.
func (o UserInfoResponsePtrOutput) ObjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.ObjectId
	}).(pulumi.StringPtrOutput)
}

// Detail about the webhook object.
type Webhook struct {
	// A flag to instruct the backend service to rotate webhook secret.
	RotateWebhookSecret *bool `pulumi:"rotateWebhookSecret"`
	// Unique identifier for the webhook.
	WebhookId *string `pulumi:"webhookId"`
	// Time when the webhook secret was updated.
	WebhookSecretUpdateTime *string `pulumi:"webhookSecretUpdateTime"`
	// URL that gets invoked by the webhook.
	WebhookUrl *string `pulumi:"webhookUrl"`
}

// WebhookInput is an input type that accepts WebhookArgs and WebhookOutput values.
// You can construct a concrete instance of `WebhookInput` via:
//
//	WebhookArgs{...}
type WebhookInput interface {
	pulumi.Input

	ToWebhookOutput() WebhookOutput
	ToWebhookOutputWithContext(context.Context) WebhookOutput
}

// Detail about the webhook object.
type WebhookArgs struct {
	// A flag to instruct the backend service to rotate webhook secret.
	RotateWebhookSecret pulumi.BoolPtrInput `pulumi:"rotateWebhookSecret"`
	// Unique identifier for the webhook.
	WebhookId pulumi.StringPtrInput `pulumi:"webhookId"`
	// Time when the webhook secret was updated.
	WebhookSecretUpdateTime pulumi.StringPtrInput `pulumi:"webhookSecretUpdateTime"`
	// URL that gets invoked by the webhook.
	WebhookUrl pulumi.StringPtrInput `pulumi:"webhookUrl"`
}

func (WebhookArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Webhook)(nil)).Elem()
}

func (i WebhookArgs) ToWebhookOutput() WebhookOutput {
	return i.ToWebhookOutputWithContext(context.Background())
}

func (i WebhookArgs) ToWebhookOutputWithContext(ctx context.Context) WebhookOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebhookOutput)
}

func (i WebhookArgs) ToWebhookPtrOutput() WebhookPtrOutput {
	return i.ToWebhookPtrOutputWithContext(context.Background())
}

func (i WebhookArgs) ToWebhookPtrOutputWithContext(ctx context.Context) WebhookPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebhookOutput).ToWebhookPtrOutputWithContext(ctx)
}

// WebhookPtrInput is an input type that accepts WebhookArgs, WebhookPtr and WebhookPtrOutput values.
// You can construct a concrete instance of `WebhookPtrInput` via:
//
//	        WebhookArgs{...}
//
//	or:
//
//	        nil
type WebhookPtrInput interface {
	pulumi.Input

	ToWebhookPtrOutput() WebhookPtrOutput
	ToWebhookPtrOutputWithContext(context.Context) WebhookPtrOutput
}

type webhookPtrType WebhookArgs

func WebhookPtr(v *WebhookArgs) WebhookPtrInput {
	return (*webhookPtrType)(v)
}

func (*webhookPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Webhook)(nil)).Elem()
}

func (i *webhookPtrType) ToWebhookPtrOutput() WebhookPtrOutput {
	return i.ToWebhookPtrOutputWithContext(context.Background())
}

func (i *webhookPtrType) ToWebhookPtrOutputWithContext(ctx context.Context) WebhookPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebhookPtrOutput)
}

// Detail about the webhook object.
type WebhookOutput struct{ *pulumi.OutputState }

func (WebhookOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Webhook)(nil)).Elem()
}

func (o WebhookOutput) ToWebhookOutput() WebhookOutput {
	return o
}

func (o WebhookOutput) ToWebhookOutputWithContext(ctx context.Context) WebhookOutput {
	return o
}

func (o WebhookOutput) ToWebhookPtrOutput() WebhookPtrOutput {
	return o.ToWebhookPtrOutputWithContext(context.Background())
}

func (o WebhookOutput) ToWebhookPtrOutputWithContext(ctx context.Context) WebhookPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Webhook) *Webhook {
		return &v
	}).(WebhookPtrOutput)
}

// A flag to instruct the backend service to rotate webhook secret.
func (o WebhookOutput) RotateWebhookSecret() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v Webhook) *bool { return v.RotateWebhookSecret }).(pulumi.BoolPtrOutput)
}

// Unique identifier for the webhook.
func (o WebhookOutput) WebhookId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Webhook) *string { return v.WebhookId }).(pulumi.StringPtrOutput)
}

// Time when the webhook secret was updated.
func (o WebhookOutput) WebhookSecretUpdateTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Webhook) *string { return v.WebhookSecretUpdateTime }).(pulumi.StringPtrOutput)
}

// URL that gets invoked by the webhook.
func (o WebhookOutput) WebhookUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Webhook) *string { return v.WebhookUrl }).(pulumi.StringPtrOutput)
}

type WebhookPtrOutput struct{ *pulumi.OutputState }

func (WebhookPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Webhook)(nil)).Elem()
}

func (o WebhookPtrOutput) ToWebhookPtrOutput() WebhookPtrOutput {
	return o
}

func (o WebhookPtrOutput) ToWebhookPtrOutputWithContext(ctx context.Context) WebhookPtrOutput {
	return o
}

func (o WebhookPtrOutput) Elem() WebhookOutput {
	return o.ApplyT(func(v *Webhook) Webhook {
		if v != nil {
			return *v
		}
		var ret Webhook
		return ret
	}).(WebhookOutput)
}

// A flag to instruct the backend service to rotate webhook secret.
func (o WebhookPtrOutput) RotateWebhookSecret() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Webhook) *bool {
		if v == nil {
			return nil
		}
		return v.RotateWebhookSecret
	}).(pulumi.BoolPtrOutput)
}

// Unique identifier for the webhook.
func (o WebhookPtrOutput) WebhookId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Webhook) *string {
		if v == nil {
			return nil
		}
		return v.WebhookId
	}).(pulumi.StringPtrOutput)
}

// Time when the webhook secret was updated.
func (o WebhookPtrOutput) WebhookSecretUpdateTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Webhook) *string {
		if v == nil {
			return nil
		}
		return v.WebhookSecretUpdateTime
	}).(pulumi.StringPtrOutput)
}

// URL that gets invoked by the webhook.
func (o WebhookPtrOutput) WebhookUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Webhook) *string {
		if v == nil {
			return nil
		}
		return v.WebhookUrl
	}).(pulumi.StringPtrOutput)
}

// Detail about the webhook object.
type WebhookResponse struct {
	// A flag to instruct the backend service to rotate webhook secret.
	RotateWebhookSecret *bool `pulumi:"rotateWebhookSecret"`
	// Unique identifier for the webhook.
	WebhookId *string `pulumi:"webhookId"`
	// Time when the webhook secret was updated.
	WebhookSecretUpdateTime *string `pulumi:"webhookSecretUpdateTime"`
	// URL that gets invoked by the webhook.
	WebhookUrl *string `pulumi:"webhookUrl"`
}

// Detail about the webhook object.
type WebhookResponseOutput struct{ *pulumi.OutputState }

func (WebhookResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebhookResponse)(nil)).Elem()
}

func (o WebhookResponseOutput) ToWebhookResponseOutput() WebhookResponseOutput {
	return o
}

func (o WebhookResponseOutput) ToWebhookResponseOutputWithContext(ctx context.Context) WebhookResponseOutput {
	return o
}

// A flag to instruct the backend service to rotate webhook secret.
func (o WebhookResponseOutput) RotateWebhookSecret() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebhookResponse) *bool { return v.RotateWebhookSecret }).(pulumi.BoolPtrOutput)
}

// Unique identifier for the webhook.
func (o WebhookResponseOutput) WebhookId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebhookResponse) *string { return v.WebhookId }).(pulumi.StringPtrOutput)
}

// Time when the webhook secret was updated.
func (o WebhookResponseOutput) WebhookSecretUpdateTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebhookResponse) *string { return v.WebhookSecretUpdateTime }).(pulumi.StringPtrOutput)
}

// URL that gets invoked by the webhook.
func (o WebhookResponseOutput) WebhookUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebhookResponse) *string { return v.WebhookUrl }).(pulumi.StringPtrOutput)
}

type WebhookResponsePtrOutput struct{ *pulumi.OutputState }

func (WebhookResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebhookResponse)(nil)).Elem()
}

func (o WebhookResponsePtrOutput) ToWebhookResponsePtrOutput() WebhookResponsePtrOutput {
	return o
}

func (o WebhookResponsePtrOutput) ToWebhookResponsePtrOutputWithContext(ctx context.Context) WebhookResponsePtrOutput {
	return o
}

func (o WebhookResponsePtrOutput) Elem() WebhookResponseOutput {
	return o.ApplyT(func(v *WebhookResponse) WebhookResponse {
		if v != nil {
			return *v
		}
		var ret WebhookResponse
		return ret
	}).(WebhookResponseOutput)
}

// A flag to instruct the backend service to rotate webhook secret.
func (o WebhookResponsePtrOutput) RotateWebhookSecret() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WebhookResponse) *bool {
		if v == nil {
			return nil
		}
		return v.RotateWebhookSecret
	}).(pulumi.BoolPtrOutput)
}

// Unique identifier for the webhook.
func (o WebhookResponsePtrOutput) WebhookId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebhookResponse) *string {
		if v == nil {
			return nil
		}
		return v.WebhookId
	}).(pulumi.StringPtrOutput)
}

// Time when the webhook secret was updated.
func (o WebhookResponsePtrOutput) WebhookSecretUpdateTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebhookResponse) *string {
		if v == nil {
			return nil
		}
		return v.WebhookSecretUpdateTime
	}).(pulumi.StringPtrOutput)
}

// URL that gets invoked by the webhook.
func (o WebhookResponsePtrOutput) WebhookUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebhookResponse) *string {
		if v == nil {
			return nil
		}
		return v.WebhookUrl
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(ActivityTimelineItemResponseOutput{})
	pulumi.RegisterOutputType(AnomalyTimelineItemResponseOutput{})
	pulumi.RegisterOutputType(AzureDevOpsResourceInfoOutput{})
	pulumi.RegisterOutputType(AzureDevOpsResourceInfoPtrOutput{})
	pulumi.RegisterOutputType(AzureDevOpsResourceInfoResponseOutput{})
	pulumi.RegisterOutputType(AzureDevOpsResourceInfoResponsePtrOutput{})
	pulumi.RegisterOutputType(BookmarkTimelineItemResponseOutput{})
	pulumi.RegisterOutputType(ContentPathMapOutput{})
	pulumi.RegisterOutputType(ContentPathMapArrayOutput{})
	pulumi.RegisterOutputType(ContentPathMapResponseOutput{})
	pulumi.RegisterOutputType(ContentPathMapResponseArrayOutput{})
	pulumi.RegisterOutputType(DeploymentOutput{})
	pulumi.RegisterOutputType(DeploymentPtrOutput{})
	pulumi.RegisterOutputType(DeploymentInfoOutput{})
	pulumi.RegisterOutputType(DeploymentInfoPtrOutput{})
	pulumi.RegisterOutputType(DeploymentInfoResponseOutput{})
	pulumi.RegisterOutputType(DeploymentInfoResponsePtrOutput{})
	pulumi.RegisterOutputType(DeploymentResponseOutput{})
	pulumi.RegisterOutputType(DeploymentResponsePtrOutput{})
	pulumi.RegisterOutputType(EntityInsightItemResponseOutput{})
	pulumi.RegisterOutputType(EntityInsightItemResponseArrayOutput{})
	pulumi.RegisterOutputType(EntityInsightItemResponseQueryTimeIntervalOutput{})
	pulumi.RegisterOutputType(EntityInsightItemResponseQueryTimeIntervalPtrOutput{})
	pulumi.RegisterOutputType(GetInsightsErrorKindResponseOutput{})
	pulumi.RegisterOutputType(GetInsightsErrorKindResponseArrayOutput{})
	pulumi.RegisterOutputType(GetInsightsResultsMetadataResponseOutput{})
	pulumi.RegisterOutputType(GetInsightsResultsMetadataResponsePtrOutput{})
	pulumi.RegisterOutputType(GitHubResourceInfoOutput{})
	pulumi.RegisterOutputType(GitHubResourceInfoPtrOutput{})
	pulumi.RegisterOutputType(GitHubResourceInfoResponseOutput{})
	pulumi.RegisterOutputType(GitHubResourceInfoResponsePtrOutput{})
	pulumi.RegisterOutputType(InsightsTableResultResponseOutput{})
	pulumi.RegisterOutputType(InsightsTableResultResponsePtrOutput{})
	pulumi.RegisterOutputType(InsightsTableResultResponseArrayOutput{})
	pulumi.RegisterOutputType(InsightsTableResultResponseColumnsOutput{})
	pulumi.RegisterOutputType(InsightsTableResultResponseColumnsArrayOutput{})
	pulumi.RegisterOutputType(RepoResponseOutput{})
	pulumi.RegisterOutputType(RepoResponseArrayOutput{})
	pulumi.RegisterOutputType(RepositoryOutput{})
	pulumi.RegisterOutputType(RepositoryResourceInfoOutput{})
	pulumi.RegisterOutputType(RepositoryResourceInfoPtrOutput{})
	pulumi.RegisterOutputType(RepositoryResourceInfoResponseOutput{})
	pulumi.RegisterOutputType(RepositoryResourceInfoResponsePtrOutput{})
	pulumi.RegisterOutputType(RepositoryResponseOutput{})
	pulumi.RegisterOutputType(SecurityAlertTimelineItemResponseOutput{})
	pulumi.RegisterOutputType(SystemDataResponseOutput{})
	pulumi.RegisterOutputType(TimelineAggregationResponseOutput{})
	pulumi.RegisterOutputType(TimelineAggregationResponseArrayOutput{})
	pulumi.RegisterOutputType(TimelineErrorResponseOutput{})
	pulumi.RegisterOutputType(TimelineErrorResponseArrayOutput{})
	pulumi.RegisterOutputType(TimelineResultsMetadataResponseOutput{})
	pulumi.RegisterOutputType(TimelineResultsMetadataResponsePtrOutput{})
	pulumi.RegisterOutputType(UserInfoResponseOutput{})
	pulumi.RegisterOutputType(UserInfoResponsePtrOutput{})
	pulumi.RegisterOutputType(WebhookOutput{})
	pulumi.RegisterOutputType(WebhookPtrOutput{})
	pulumi.RegisterOutputType(WebhookResponseOutput{})
	pulumi.RegisterOutputType(WebhookResponsePtrOutput{})
}
