// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20190101preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The type of the automation rule action
type AutomationRuleActionType string

const (
	// Modify an object's properties
	AutomationRuleActionTypeModifyProperties = AutomationRuleActionType("ModifyProperties")
	// Run a playbook on an object
	AutomationRuleActionTypeRunPlaybook = AutomationRuleActionType("RunPlaybook")
)

// The type of the automation rule condition
type AutomationRuleConditionType string

const (
	// Evaluate an object property value
	AutomationRuleConditionTypeProperty = AutomationRuleConditionType("Property")
)

// The operator to use for evaluation the condition
type AutomationRulePropertyConditionSupportedOperator string

const (
	// Evaluates if the property equals at least one of the condition values
	AutomationRulePropertyConditionSupportedOperatorEquals = AutomationRulePropertyConditionSupportedOperator("Equals")
	// Evaluates if the property does not equal any of the condition values
	AutomationRulePropertyConditionSupportedOperatorNotEquals = AutomationRulePropertyConditionSupportedOperator("NotEquals")
	// Evaluates if the property contains at least one of the condition values
	AutomationRulePropertyConditionSupportedOperatorContains = AutomationRulePropertyConditionSupportedOperator("Contains")
	// Evaluates if the property does not contain any of the condition values
	AutomationRulePropertyConditionSupportedOperatorNotContains = AutomationRulePropertyConditionSupportedOperator("NotContains")
	// Evaluates if the property starts with any of the condition values
	AutomationRulePropertyConditionSupportedOperatorStartsWith = AutomationRulePropertyConditionSupportedOperator("StartsWith")
	// Evaluates if the property does not start with any of the condition values
	AutomationRulePropertyConditionSupportedOperatorNotStartsWith = AutomationRulePropertyConditionSupportedOperator("NotStartsWith")
	// Evaluates if the property ends with any of the condition values
	AutomationRulePropertyConditionSupportedOperatorEndsWith = AutomationRulePropertyConditionSupportedOperator("EndsWith")
	// Evaluates if the property does not end with any of the condition values
	AutomationRulePropertyConditionSupportedOperatorNotEndsWith = AutomationRulePropertyConditionSupportedOperator("NotEndsWith")
)

func (AutomationRulePropertyConditionSupportedOperator) ElementType() reflect.Type {
	return reflect.TypeOf((*AutomationRulePropertyConditionSupportedOperator)(nil)).Elem()
}

func (e AutomationRulePropertyConditionSupportedOperator) ToAutomationRulePropertyConditionSupportedOperatorOutput() AutomationRulePropertyConditionSupportedOperatorOutput {
	return pulumi.ToOutput(e).(AutomationRulePropertyConditionSupportedOperatorOutput)
}

func (e AutomationRulePropertyConditionSupportedOperator) ToAutomationRulePropertyConditionSupportedOperatorOutputWithContext(ctx context.Context) AutomationRulePropertyConditionSupportedOperatorOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AutomationRulePropertyConditionSupportedOperatorOutput)
}

func (e AutomationRulePropertyConditionSupportedOperator) ToAutomationRulePropertyConditionSupportedOperatorPtrOutput() AutomationRulePropertyConditionSupportedOperatorPtrOutput {
	return e.ToAutomationRulePropertyConditionSupportedOperatorPtrOutputWithContext(context.Background())
}

func (e AutomationRulePropertyConditionSupportedOperator) ToAutomationRulePropertyConditionSupportedOperatorPtrOutputWithContext(ctx context.Context) AutomationRulePropertyConditionSupportedOperatorPtrOutput {
	return AutomationRulePropertyConditionSupportedOperator(e).ToAutomationRulePropertyConditionSupportedOperatorOutputWithContext(ctx).ToAutomationRulePropertyConditionSupportedOperatorPtrOutputWithContext(ctx)
}

func (e AutomationRulePropertyConditionSupportedOperator) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AutomationRulePropertyConditionSupportedOperator) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AutomationRulePropertyConditionSupportedOperator) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AutomationRulePropertyConditionSupportedOperator) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AutomationRulePropertyConditionSupportedOperatorOutput struct{ *pulumi.OutputState }

func (AutomationRulePropertyConditionSupportedOperatorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutomationRulePropertyConditionSupportedOperator)(nil)).Elem()
}

func (o AutomationRulePropertyConditionSupportedOperatorOutput) ToAutomationRulePropertyConditionSupportedOperatorOutput() AutomationRulePropertyConditionSupportedOperatorOutput {
	return o
}

func (o AutomationRulePropertyConditionSupportedOperatorOutput) ToAutomationRulePropertyConditionSupportedOperatorOutputWithContext(ctx context.Context) AutomationRulePropertyConditionSupportedOperatorOutput {
	return o
}

func (o AutomationRulePropertyConditionSupportedOperatorOutput) ToAutomationRulePropertyConditionSupportedOperatorPtrOutput() AutomationRulePropertyConditionSupportedOperatorPtrOutput {
	return o.ToAutomationRulePropertyConditionSupportedOperatorPtrOutputWithContext(context.Background())
}

func (o AutomationRulePropertyConditionSupportedOperatorOutput) ToAutomationRulePropertyConditionSupportedOperatorPtrOutputWithContext(ctx context.Context) AutomationRulePropertyConditionSupportedOperatorPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AutomationRulePropertyConditionSupportedOperator) *AutomationRulePropertyConditionSupportedOperator {
		return &v
	}).(AutomationRulePropertyConditionSupportedOperatorPtrOutput)
}

func (o AutomationRulePropertyConditionSupportedOperatorOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AutomationRulePropertyConditionSupportedOperatorOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AutomationRulePropertyConditionSupportedOperator) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AutomationRulePropertyConditionSupportedOperatorOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AutomationRulePropertyConditionSupportedOperatorOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AutomationRulePropertyConditionSupportedOperator) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AutomationRulePropertyConditionSupportedOperatorPtrOutput struct{ *pulumi.OutputState }

func (AutomationRulePropertyConditionSupportedOperatorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AutomationRulePropertyConditionSupportedOperator)(nil)).Elem()
}

func (o AutomationRulePropertyConditionSupportedOperatorPtrOutput) ToAutomationRulePropertyConditionSupportedOperatorPtrOutput() AutomationRulePropertyConditionSupportedOperatorPtrOutput {
	return o
}

func (o AutomationRulePropertyConditionSupportedOperatorPtrOutput) ToAutomationRulePropertyConditionSupportedOperatorPtrOutputWithContext(ctx context.Context) AutomationRulePropertyConditionSupportedOperatorPtrOutput {
	return o
}

func (o AutomationRulePropertyConditionSupportedOperatorPtrOutput) Elem() AutomationRulePropertyConditionSupportedOperatorOutput {
	return o.ApplyT(func(v *AutomationRulePropertyConditionSupportedOperator) AutomationRulePropertyConditionSupportedOperator {
		if v != nil {
			return *v
		}
		var ret AutomationRulePropertyConditionSupportedOperator
		return ret
	}).(AutomationRulePropertyConditionSupportedOperatorOutput)
}

func (o AutomationRulePropertyConditionSupportedOperatorPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AutomationRulePropertyConditionSupportedOperatorPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AutomationRulePropertyConditionSupportedOperator) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AutomationRulePropertyConditionSupportedOperatorInput is an input type that accepts values of the AutomationRulePropertyConditionSupportedOperator enum
// A concrete instance of `AutomationRulePropertyConditionSupportedOperatorInput` can be one of the following:
//
//	AutomationRulePropertyConditionSupportedOperatorEquals
//	AutomationRulePropertyConditionSupportedOperatorNotEquals
//	AutomationRulePropertyConditionSupportedOperatorContains
//	AutomationRulePropertyConditionSupportedOperatorNotContains
//	AutomationRulePropertyConditionSupportedOperatorStartsWith
//	AutomationRulePropertyConditionSupportedOperatorNotStartsWith
//	AutomationRulePropertyConditionSupportedOperatorEndsWith
//	AutomationRulePropertyConditionSupportedOperatorNotEndsWith
type AutomationRulePropertyConditionSupportedOperatorInput interface {
	pulumi.Input

	ToAutomationRulePropertyConditionSupportedOperatorOutput() AutomationRulePropertyConditionSupportedOperatorOutput
	ToAutomationRulePropertyConditionSupportedOperatorOutputWithContext(context.Context) AutomationRulePropertyConditionSupportedOperatorOutput
}

var automationRulePropertyConditionSupportedOperatorPtrType = reflect.TypeOf((**AutomationRulePropertyConditionSupportedOperator)(nil)).Elem()

type AutomationRulePropertyConditionSupportedOperatorPtrInput interface {
	pulumi.Input

	ToAutomationRulePropertyConditionSupportedOperatorPtrOutput() AutomationRulePropertyConditionSupportedOperatorPtrOutput
	ToAutomationRulePropertyConditionSupportedOperatorPtrOutputWithContext(context.Context) AutomationRulePropertyConditionSupportedOperatorPtrOutput
}

type automationRulePropertyConditionSupportedOperatorPtr string

func AutomationRulePropertyConditionSupportedOperatorPtr(v string) AutomationRulePropertyConditionSupportedOperatorPtrInput {
	return (*automationRulePropertyConditionSupportedOperatorPtr)(&v)
}

func (*automationRulePropertyConditionSupportedOperatorPtr) ElementType() reflect.Type {
	return automationRulePropertyConditionSupportedOperatorPtrType
}

func (in *automationRulePropertyConditionSupportedOperatorPtr) ToAutomationRulePropertyConditionSupportedOperatorPtrOutput() AutomationRulePropertyConditionSupportedOperatorPtrOutput {
	return pulumi.ToOutput(in).(AutomationRulePropertyConditionSupportedOperatorPtrOutput)
}

func (in *automationRulePropertyConditionSupportedOperatorPtr) ToAutomationRulePropertyConditionSupportedOperatorPtrOutputWithContext(ctx context.Context) AutomationRulePropertyConditionSupportedOperatorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AutomationRulePropertyConditionSupportedOperatorPtrOutput)
}

// The property to evaluate
type AutomationRulePropertyConditionSupportedProperty string

const (
	// The title of the incident
	AutomationRulePropertyConditionSupportedPropertyIncidentTitle = AutomationRulePropertyConditionSupportedProperty("IncidentTitle")
	// The description of the incident
	AutomationRulePropertyConditionSupportedPropertyIncidentDescription = AutomationRulePropertyConditionSupportedProperty("IncidentDescription")
	// The severity of the incident
	AutomationRulePropertyConditionSupportedPropertyIncidentSeverity = AutomationRulePropertyConditionSupportedProperty("IncidentSeverity")
	// The status of the incident
	AutomationRulePropertyConditionSupportedPropertyIncidentStatus = AutomationRulePropertyConditionSupportedProperty("IncidentStatus")
	// The tactics of the incident
	AutomationRulePropertyConditionSupportedPropertyIncidentTactics = AutomationRulePropertyConditionSupportedProperty("IncidentTactics")
	// The related Analytic rule ids of the incident
	AutomationRulePropertyConditionSupportedPropertyIncidentRelatedAnalyticRuleIds = AutomationRulePropertyConditionSupportedProperty("IncidentRelatedAnalyticRuleIds")
	// The provider name of the incident
	AutomationRulePropertyConditionSupportedPropertyIncidentProviderName = AutomationRulePropertyConditionSupportedProperty("IncidentProviderName")
	// The account Azure Active Directory tenant id
	AutomationRulePropertyConditionSupportedPropertyAccountAadTenantId = AutomationRulePropertyConditionSupportedProperty("AccountAadTenantId")
	// The account Azure Active Directory user id.
	AutomationRulePropertyConditionSupportedPropertyAccountAadUserId = AutomationRulePropertyConditionSupportedProperty("AccountAadUserId")
	// The account name
	AutomationRulePropertyConditionSupportedPropertyAccountName = AutomationRulePropertyConditionSupportedProperty("AccountName")
	// The account NetBIOS domain name
	AutomationRulePropertyConditionSupportedPropertyAccountNTDomain = AutomationRulePropertyConditionSupportedProperty("AccountNTDomain")
	// The account Azure Active Directory Passport User ID
	AutomationRulePropertyConditionSupportedPropertyAccountPUID = AutomationRulePropertyConditionSupportedProperty("AccountPUID")
	// The account security identifier
	AutomationRulePropertyConditionSupportedPropertyAccountSid = AutomationRulePropertyConditionSupportedProperty("AccountSid")
	// The account unique identifier
	AutomationRulePropertyConditionSupportedPropertyAccountObjectGuid = AutomationRulePropertyConditionSupportedProperty("AccountObjectGuid")
	// The account user principal name suffix
	AutomationRulePropertyConditionSupportedPropertyAccountUPNSuffix = AutomationRulePropertyConditionSupportedProperty("AccountUPNSuffix")
	// The Azure resource id
	AutomationRulePropertyConditionSupportedPropertyAzureResourceResourceId = AutomationRulePropertyConditionSupportedProperty("AzureResourceResourceId")
	// The Azure resource subscription id
	AutomationRulePropertyConditionSupportedPropertyAzureResourceSubscriptionId = AutomationRulePropertyConditionSupportedProperty("AzureResourceSubscriptionId")
	// The cloud application identifier
	AutomationRulePropertyConditionSupportedPropertyCloudApplicationAppId = AutomationRulePropertyConditionSupportedProperty("CloudApplicationAppId")
	// The cloud application name
	AutomationRulePropertyConditionSupportedPropertyCloudApplicationAppName = AutomationRulePropertyConditionSupportedProperty("CloudApplicationAppName")
	// The dns record domain name
	AutomationRulePropertyConditionSupportedPropertyDNSDomainName = AutomationRulePropertyConditionSupportedProperty("DNSDomainName")
	// The file directory full path
	AutomationRulePropertyConditionSupportedPropertyFileDirectory = AutomationRulePropertyConditionSupportedProperty("FileDirectory")
	// The file name without path
	AutomationRulePropertyConditionSupportedPropertyFileName = AutomationRulePropertyConditionSupportedProperty("FileName")
	// The file hash value
	AutomationRulePropertyConditionSupportedPropertyFileHashValue = AutomationRulePropertyConditionSupportedProperty("FileHashValue")
	// The host Azure resource id
	AutomationRulePropertyConditionSupportedPropertyHostAzureID = AutomationRulePropertyConditionSupportedProperty("HostAzureID")
	// The host name without domain
	AutomationRulePropertyConditionSupportedPropertyHostName = AutomationRulePropertyConditionSupportedProperty("HostName")
	// The host NetBIOS name
	AutomationRulePropertyConditionSupportedPropertyHostNetBiosName = AutomationRulePropertyConditionSupportedProperty("HostNetBiosName")
	// The host NT domain
	AutomationRulePropertyConditionSupportedPropertyHostNTDomain = AutomationRulePropertyConditionSupportedProperty("HostNTDomain")
	// The host operating system
	AutomationRulePropertyConditionSupportedPropertyHostOSVersion = AutomationRulePropertyConditionSupportedProperty("HostOSVersion")
	// The IoT device id
	AutomationRulePropertyConditionSupportedPropertyIoTDeviceId = AutomationRulePropertyConditionSupportedProperty("IoTDeviceId")
	// The IoT device name
	AutomationRulePropertyConditionSupportedPropertyIoTDeviceName = AutomationRulePropertyConditionSupportedProperty("IoTDeviceName")
	// The IoT device type
	AutomationRulePropertyConditionSupportedPropertyIoTDeviceType = AutomationRulePropertyConditionSupportedProperty("IoTDeviceType")
	// The IoT device vendor
	AutomationRulePropertyConditionSupportedPropertyIoTDeviceVendor = AutomationRulePropertyConditionSupportedProperty("IoTDeviceVendor")
	// The IoT device model
	AutomationRulePropertyConditionSupportedPropertyIoTDeviceModel = AutomationRulePropertyConditionSupportedProperty("IoTDeviceModel")
	// The IoT device operating system
	AutomationRulePropertyConditionSupportedPropertyIoTDeviceOperatingSystem = AutomationRulePropertyConditionSupportedProperty("IoTDeviceOperatingSystem")
	// The IP address
	AutomationRulePropertyConditionSupportedPropertyIPAddress = AutomationRulePropertyConditionSupportedProperty("IPAddress")
	// The mailbox display name
	AutomationRulePropertyConditionSupportedPropertyMailboxDisplayName = AutomationRulePropertyConditionSupportedProperty("MailboxDisplayName")
	// The mailbox primary address
	AutomationRulePropertyConditionSupportedPropertyMailboxPrimaryAddress = AutomationRulePropertyConditionSupportedProperty("MailboxPrimaryAddress")
	// The mailbox user principal name
	AutomationRulePropertyConditionSupportedPropertyMailboxUPN = AutomationRulePropertyConditionSupportedProperty("MailboxUPN")
	// The mail message delivery action
	AutomationRulePropertyConditionSupportedPropertyMailMessageDeliveryAction = AutomationRulePropertyConditionSupportedProperty("MailMessageDeliveryAction")
	// The mail message delivery location
	AutomationRulePropertyConditionSupportedPropertyMailMessageDeliveryLocation = AutomationRulePropertyConditionSupportedProperty("MailMessageDeliveryLocation")
	// The mail message recipient
	AutomationRulePropertyConditionSupportedPropertyMailMessageRecipient = AutomationRulePropertyConditionSupportedProperty("MailMessageRecipient")
	// The mail message sender IP address
	AutomationRulePropertyConditionSupportedPropertyMailMessageSenderIP = AutomationRulePropertyConditionSupportedProperty("MailMessageSenderIP")
	// The mail message subject
	AutomationRulePropertyConditionSupportedPropertyMailMessageSubject = AutomationRulePropertyConditionSupportedProperty("MailMessageSubject")
	// The mail message P1 sender
	AutomationRulePropertyConditionSupportedPropertyMailMessageP1Sender = AutomationRulePropertyConditionSupportedProperty("MailMessageP1Sender")
	// The mail message P2 sender
	AutomationRulePropertyConditionSupportedPropertyMailMessageP2Sender = AutomationRulePropertyConditionSupportedProperty("MailMessageP2Sender")
	// The malware category
	AutomationRulePropertyConditionSupportedPropertyMalwareCategory = AutomationRulePropertyConditionSupportedProperty("MalwareCategory")
	// The malware name
	AutomationRulePropertyConditionSupportedPropertyMalwareName = AutomationRulePropertyConditionSupportedProperty("MalwareName")
	// The process execution command line
	AutomationRulePropertyConditionSupportedPropertyProcessCommandLine = AutomationRulePropertyConditionSupportedProperty("ProcessCommandLine")
	// The process id
	AutomationRulePropertyConditionSupportedPropertyProcessId = AutomationRulePropertyConditionSupportedProperty("ProcessId")
	// The registry key path
	AutomationRulePropertyConditionSupportedPropertyRegistryKey = AutomationRulePropertyConditionSupportedProperty("RegistryKey")
	// The registry key value in string formatted representation
	AutomationRulePropertyConditionSupportedPropertyRegistryValueData = AutomationRulePropertyConditionSupportedProperty("RegistryValueData")
	// The url
	AutomationRulePropertyConditionSupportedPropertyUrl = AutomationRulePropertyConditionSupportedProperty("Url")
)

func (AutomationRulePropertyConditionSupportedProperty) ElementType() reflect.Type {
	return reflect.TypeOf((*AutomationRulePropertyConditionSupportedProperty)(nil)).Elem()
}

func (e AutomationRulePropertyConditionSupportedProperty) ToAutomationRulePropertyConditionSupportedPropertyOutput() AutomationRulePropertyConditionSupportedPropertyOutput {
	return pulumi.ToOutput(e).(AutomationRulePropertyConditionSupportedPropertyOutput)
}

func (e AutomationRulePropertyConditionSupportedProperty) ToAutomationRulePropertyConditionSupportedPropertyOutputWithContext(ctx context.Context) AutomationRulePropertyConditionSupportedPropertyOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AutomationRulePropertyConditionSupportedPropertyOutput)
}

func (e AutomationRulePropertyConditionSupportedProperty) ToAutomationRulePropertyConditionSupportedPropertyPtrOutput() AutomationRulePropertyConditionSupportedPropertyPtrOutput {
	return e.ToAutomationRulePropertyConditionSupportedPropertyPtrOutputWithContext(context.Background())
}

func (e AutomationRulePropertyConditionSupportedProperty) ToAutomationRulePropertyConditionSupportedPropertyPtrOutputWithContext(ctx context.Context) AutomationRulePropertyConditionSupportedPropertyPtrOutput {
	return AutomationRulePropertyConditionSupportedProperty(e).ToAutomationRulePropertyConditionSupportedPropertyOutputWithContext(ctx).ToAutomationRulePropertyConditionSupportedPropertyPtrOutputWithContext(ctx)
}

func (e AutomationRulePropertyConditionSupportedProperty) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AutomationRulePropertyConditionSupportedProperty) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AutomationRulePropertyConditionSupportedProperty) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AutomationRulePropertyConditionSupportedProperty) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AutomationRulePropertyConditionSupportedPropertyOutput struct{ *pulumi.OutputState }

func (AutomationRulePropertyConditionSupportedPropertyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutomationRulePropertyConditionSupportedProperty)(nil)).Elem()
}

func (o AutomationRulePropertyConditionSupportedPropertyOutput) ToAutomationRulePropertyConditionSupportedPropertyOutput() AutomationRulePropertyConditionSupportedPropertyOutput {
	return o
}

func (o AutomationRulePropertyConditionSupportedPropertyOutput) ToAutomationRulePropertyConditionSupportedPropertyOutputWithContext(ctx context.Context) AutomationRulePropertyConditionSupportedPropertyOutput {
	return o
}

func (o AutomationRulePropertyConditionSupportedPropertyOutput) ToAutomationRulePropertyConditionSupportedPropertyPtrOutput() AutomationRulePropertyConditionSupportedPropertyPtrOutput {
	return o.ToAutomationRulePropertyConditionSupportedPropertyPtrOutputWithContext(context.Background())
}

func (o AutomationRulePropertyConditionSupportedPropertyOutput) ToAutomationRulePropertyConditionSupportedPropertyPtrOutputWithContext(ctx context.Context) AutomationRulePropertyConditionSupportedPropertyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AutomationRulePropertyConditionSupportedProperty) *AutomationRulePropertyConditionSupportedProperty {
		return &v
	}).(AutomationRulePropertyConditionSupportedPropertyPtrOutput)
}

func (o AutomationRulePropertyConditionSupportedPropertyOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AutomationRulePropertyConditionSupportedPropertyOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AutomationRulePropertyConditionSupportedProperty) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AutomationRulePropertyConditionSupportedPropertyOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AutomationRulePropertyConditionSupportedPropertyOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AutomationRulePropertyConditionSupportedProperty) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AutomationRulePropertyConditionSupportedPropertyPtrOutput struct{ *pulumi.OutputState }

func (AutomationRulePropertyConditionSupportedPropertyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AutomationRulePropertyConditionSupportedProperty)(nil)).Elem()
}

func (o AutomationRulePropertyConditionSupportedPropertyPtrOutput) ToAutomationRulePropertyConditionSupportedPropertyPtrOutput() AutomationRulePropertyConditionSupportedPropertyPtrOutput {
	return o
}

func (o AutomationRulePropertyConditionSupportedPropertyPtrOutput) ToAutomationRulePropertyConditionSupportedPropertyPtrOutputWithContext(ctx context.Context) AutomationRulePropertyConditionSupportedPropertyPtrOutput {
	return o
}

func (o AutomationRulePropertyConditionSupportedPropertyPtrOutput) Elem() AutomationRulePropertyConditionSupportedPropertyOutput {
	return o.ApplyT(func(v *AutomationRulePropertyConditionSupportedProperty) AutomationRulePropertyConditionSupportedProperty {
		if v != nil {
			return *v
		}
		var ret AutomationRulePropertyConditionSupportedProperty
		return ret
	}).(AutomationRulePropertyConditionSupportedPropertyOutput)
}

func (o AutomationRulePropertyConditionSupportedPropertyPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AutomationRulePropertyConditionSupportedPropertyPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AutomationRulePropertyConditionSupportedProperty) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AutomationRulePropertyConditionSupportedPropertyInput is an input type that accepts values of the AutomationRulePropertyConditionSupportedProperty enum
// A concrete instance of `AutomationRulePropertyConditionSupportedPropertyInput` can be one of the following:
//
//	AutomationRulePropertyConditionSupportedPropertyIncidentTitle
//	AutomationRulePropertyConditionSupportedPropertyIncidentDescription
//	AutomationRulePropertyConditionSupportedPropertyIncidentSeverity
//	AutomationRulePropertyConditionSupportedPropertyIncidentStatus
//	AutomationRulePropertyConditionSupportedPropertyIncidentTactics
//	AutomationRulePropertyConditionSupportedPropertyIncidentRelatedAnalyticRuleIds
//	AutomationRulePropertyConditionSupportedPropertyIncidentProviderName
//	AutomationRulePropertyConditionSupportedPropertyAccountAadTenantId
//	AutomationRulePropertyConditionSupportedPropertyAccountAadUserId
//	AutomationRulePropertyConditionSupportedPropertyAccountName
//	AutomationRulePropertyConditionSupportedPropertyAccountNTDomain
//	AutomationRulePropertyConditionSupportedPropertyAccountPUID
//	AutomationRulePropertyConditionSupportedPropertyAccountSid
//	AutomationRulePropertyConditionSupportedPropertyAccountObjectGuid
//	AutomationRulePropertyConditionSupportedPropertyAccountUPNSuffix
//	AutomationRulePropertyConditionSupportedPropertyAzureResourceResourceId
//	AutomationRulePropertyConditionSupportedPropertyAzureResourceSubscriptionId
//	AutomationRulePropertyConditionSupportedPropertyCloudApplicationAppId
//	AutomationRulePropertyConditionSupportedPropertyCloudApplicationAppName
//	AutomationRulePropertyConditionSupportedPropertyDNSDomainName
//	AutomationRulePropertyConditionSupportedPropertyFileDirectory
//	AutomationRulePropertyConditionSupportedPropertyFileName
//	AutomationRulePropertyConditionSupportedPropertyFileHashValue
//	AutomationRulePropertyConditionSupportedPropertyHostAzureID
//	AutomationRulePropertyConditionSupportedPropertyHostName
//	AutomationRulePropertyConditionSupportedPropertyHostNetBiosName
//	AutomationRulePropertyConditionSupportedPropertyHostNTDomain
//	AutomationRulePropertyConditionSupportedPropertyHostOSVersion
//	AutomationRulePropertyConditionSupportedPropertyIoTDeviceId
//	AutomationRulePropertyConditionSupportedPropertyIoTDeviceName
//	AutomationRulePropertyConditionSupportedPropertyIoTDeviceType
//	AutomationRulePropertyConditionSupportedPropertyIoTDeviceVendor
//	AutomationRulePropertyConditionSupportedPropertyIoTDeviceModel
//	AutomationRulePropertyConditionSupportedPropertyIoTDeviceOperatingSystem
//	AutomationRulePropertyConditionSupportedPropertyIPAddress
//	AutomationRulePropertyConditionSupportedPropertyMailboxDisplayName
//	AutomationRulePropertyConditionSupportedPropertyMailboxPrimaryAddress
//	AutomationRulePropertyConditionSupportedPropertyMailboxUPN
//	AutomationRulePropertyConditionSupportedPropertyMailMessageDeliveryAction
//	AutomationRulePropertyConditionSupportedPropertyMailMessageDeliveryLocation
//	AutomationRulePropertyConditionSupportedPropertyMailMessageRecipient
//	AutomationRulePropertyConditionSupportedPropertyMailMessageSenderIP
//	AutomationRulePropertyConditionSupportedPropertyMailMessageSubject
//	AutomationRulePropertyConditionSupportedPropertyMailMessageP1Sender
//	AutomationRulePropertyConditionSupportedPropertyMailMessageP2Sender
//	AutomationRulePropertyConditionSupportedPropertyMalwareCategory
//	AutomationRulePropertyConditionSupportedPropertyMalwareName
//	AutomationRulePropertyConditionSupportedPropertyProcessCommandLine
//	AutomationRulePropertyConditionSupportedPropertyProcessId
//	AutomationRulePropertyConditionSupportedPropertyRegistryKey
//	AutomationRulePropertyConditionSupportedPropertyRegistryValueData
//	AutomationRulePropertyConditionSupportedPropertyUrl
type AutomationRulePropertyConditionSupportedPropertyInput interface {
	pulumi.Input

	ToAutomationRulePropertyConditionSupportedPropertyOutput() AutomationRulePropertyConditionSupportedPropertyOutput
	ToAutomationRulePropertyConditionSupportedPropertyOutputWithContext(context.Context) AutomationRulePropertyConditionSupportedPropertyOutput
}

var automationRulePropertyConditionSupportedPropertyPtrType = reflect.TypeOf((**AutomationRulePropertyConditionSupportedProperty)(nil)).Elem()

type AutomationRulePropertyConditionSupportedPropertyPtrInput interface {
	pulumi.Input

	ToAutomationRulePropertyConditionSupportedPropertyPtrOutput() AutomationRulePropertyConditionSupportedPropertyPtrOutput
	ToAutomationRulePropertyConditionSupportedPropertyPtrOutputWithContext(context.Context) AutomationRulePropertyConditionSupportedPropertyPtrOutput
}

type automationRulePropertyConditionSupportedPropertyPtr string

func AutomationRulePropertyConditionSupportedPropertyPtr(v string) AutomationRulePropertyConditionSupportedPropertyPtrInput {
	return (*automationRulePropertyConditionSupportedPropertyPtr)(&v)
}

func (*automationRulePropertyConditionSupportedPropertyPtr) ElementType() reflect.Type {
	return automationRulePropertyConditionSupportedPropertyPtrType
}

func (in *automationRulePropertyConditionSupportedPropertyPtr) ToAutomationRulePropertyConditionSupportedPropertyPtrOutput() AutomationRulePropertyConditionSupportedPropertyPtrOutput {
	return pulumi.ToOutput(in).(AutomationRulePropertyConditionSupportedPropertyPtrOutput)
}

func (in *automationRulePropertyConditionSupportedPropertyPtr) ToAutomationRulePropertyConditionSupportedPropertyPtrOutputWithContext(ctx context.Context) AutomationRulePropertyConditionSupportedPropertyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AutomationRulePropertyConditionSupportedPropertyPtrOutput)
}

// The entity query kind
type EntityTimelineKind string

const (
	// activity
	EntityTimelineKindActivity = EntityTimelineKind("Activity")
	// bookmarks
	EntityTimelineKindBookmark = EntityTimelineKind("Bookmark")
	// security alerts
	EntityTimelineKindSecurityAlert = EntityTimelineKind("SecurityAlert")
)

func (EntityTimelineKind) ElementType() reflect.Type {
	return reflect.TypeOf((*EntityTimelineKind)(nil)).Elem()
}

func (e EntityTimelineKind) ToEntityTimelineKindOutput() EntityTimelineKindOutput {
	return pulumi.ToOutput(e).(EntityTimelineKindOutput)
}

func (e EntityTimelineKind) ToEntityTimelineKindOutputWithContext(ctx context.Context) EntityTimelineKindOutput {
	return pulumi.ToOutputWithContext(ctx, e).(EntityTimelineKindOutput)
}

func (e EntityTimelineKind) ToEntityTimelineKindPtrOutput() EntityTimelineKindPtrOutput {
	return e.ToEntityTimelineKindPtrOutputWithContext(context.Background())
}

func (e EntityTimelineKind) ToEntityTimelineKindPtrOutputWithContext(ctx context.Context) EntityTimelineKindPtrOutput {
	return EntityTimelineKind(e).ToEntityTimelineKindOutputWithContext(ctx).ToEntityTimelineKindPtrOutputWithContext(ctx)
}

func (e EntityTimelineKind) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e EntityTimelineKind) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e EntityTimelineKind) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e EntityTimelineKind) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type EntityTimelineKindOutput struct{ *pulumi.OutputState }

func (EntityTimelineKindOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EntityTimelineKind)(nil)).Elem()
}

func (o EntityTimelineKindOutput) ToEntityTimelineKindOutput() EntityTimelineKindOutput {
	return o
}

func (o EntityTimelineKindOutput) ToEntityTimelineKindOutputWithContext(ctx context.Context) EntityTimelineKindOutput {
	return o
}

func (o EntityTimelineKindOutput) ToEntityTimelineKindPtrOutput() EntityTimelineKindPtrOutput {
	return o.ToEntityTimelineKindPtrOutputWithContext(context.Background())
}

func (o EntityTimelineKindOutput) ToEntityTimelineKindPtrOutputWithContext(ctx context.Context) EntityTimelineKindPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EntityTimelineKind) *EntityTimelineKind {
		return &v
	}).(EntityTimelineKindPtrOutput)
}

func (o EntityTimelineKindOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o EntityTimelineKindOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e EntityTimelineKind) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o EntityTimelineKindOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o EntityTimelineKindOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e EntityTimelineKind) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type EntityTimelineKindPtrOutput struct{ *pulumi.OutputState }

func (EntityTimelineKindPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EntityTimelineKind)(nil)).Elem()
}

func (o EntityTimelineKindPtrOutput) ToEntityTimelineKindPtrOutput() EntityTimelineKindPtrOutput {
	return o
}

func (o EntityTimelineKindPtrOutput) ToEntityTimelineKindPtrOutputWithContext(ctx context.Context) EntityTimelineKindPtrOutput {
	return o
}

func (o EntityTimelineKindPtrOutput) Elem() EntityTimelineKindOutput {
	return o.ApplyT(func(v *EntityTimelineKind) EntityTimelineKind {
		if v != nil {
			return *v
		}
		var ret EntityTimelineKind
		return ret
	}).(EntityTimelineKindOutput)
}

func (o EntityTimelineKindPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o EntityTimelineKindPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *EntityTimelineKind) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// EntityTimelineKindInput is an input type that accepts values of the EntityTimelineKind enum
// A concrete instance of `EntityTimelineKindInput` can be one of the following:
//
//	EntityTimelineKindActivity
//	EntityTimelineKindBookmark
//	EntityTimelineKindSecurityAlert
type EntityTimelineKindInput interface {
	pulumi.Input

	ToEntityTimelineKindOutput() EntityTimelineKindOutput
	ToEntityTimelineKindOutputWithContext(context.Context) EntityTimelineKindOutput
}

var entityTimelineKindPtrType = reflect.TypeOf((**EntityTimelineKind)(nil)).Elem()

type EntityTimelineKindPtrInput interface {
	pulumi.Input

	ToEntityTimelineKindPtrOutput() EntityTimelineKindPtrOutput
	ToEntityTimelineKindPtrOutputWithContext(context.Context) EntityTimelineKindPtrOutput
}

type entityTimelineKindPtr string

func EntityTimelineKindPtr(v string) EntityTimelineKindPtrInput {
	return (*entityTimelineKindPtr)(&v)
}

func (*entityTimelineKindPtr) ElementType() reflect.Type {
	return entityTimelineKindPtrType
}

func (in *entityTimelineKindPtr) ToEntityTimelineKindPtrOutput() EntityTimelineKindPtrOutput {
	return pulumi.ToOutput(in).(EntityTimelineKindPtrOutput)
}

func (in *entityTimelineKindPtr) ToEntityTimelineKindPtrOutputWithContext(ctx context.Context) EntityTimelineKindPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(EntityTimelineKindPtrOutput)
}

// The reason the incident was closed
type IncidentClassification string

const (
	// Incident classification was undetermined
	IncidentClassificationUndetermined = IncidentClassification("Undetermined")
	// Incident was true positive
	IncidentClassificationTruePositive = IncidentClassification("TruePositive")
	// Incident was benign positive
	IncidentClassificationBenignPositive = IncidentClassification("BenignPositive")
	// Incident was false positive
	IncidentClassificationFalsePositive = IncidentClassification("FalsePositive")
)

func (IncidentClassification) ElementType() reflect.Type {
	return reflect.TypeOf((*IncidentClassification)(nil)).Elem()
}

func (e IncidentClassification) ToIncidentClassificationOutput() IncidentClassificationOutput {
	return pulumi.ToOutput(e).(IncidentClassificationOutput)
}

func (e IncidentClassification) ToIncidentClassificationOutputWithContext(ctx context.Context) IncidentClassificationOutput {
	return pulumi.ToOutputWithContext(ctx, e).(IncidentClassificationOutput)
}

func (e IncidentClassification) ToIncidentClassificationPtrOutput() IncidentClassificationPtrOutput {
	return e.ToIncidentClassificationPtrOutputWithContext(context.Background())
}

func (e IncidentClassification) ToIncidentClassificationPtrOutputWithContext(ctx context.Context) IncidentClassificationPtrOutput {
	return IncidentClassification(e).ToIncidentClassificationOutputWithContext(ctx).ToIncidentClassificationPtrOutputWithContext(ctx)
}

func (e IncidentClassification) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e IncidentClassification) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e IncidentClassification) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e IncidentClassification) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type IncidentClassificationOutput struct{ *pulumi.OutputState }

func (IncidentClassificationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IncidentClassification)(nil)).Elem()
}

func (o IncidentClassificationOutput) ToIncidentClassificationOutput() IncidentClassificationOutput {
	return o
}

func (o IncidentClassificationOutput) ToIncidentClassificationOutputWithContext(ctx context.Context) IncidentClassificationOutput {
	return o
}

func (o IncidentClassificationOutput) ToIncidentClassificationPtrOutput() IncidentClassificationPtrOutput {
	return o.ToIncidentClassificationPtrOutputWithContext(context.Background())
}

func (o IncidentClassificationOutput) ToIncidentClassificationPtrOutputWithContext(ctx context.Context) IncidentClassificationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IncidentClassification) *IncidentClassification {
		return &v
	}).(IncidentClassificationPtrOutput)
}

func (o IncidentClassificationOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o IncidentClassificationOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e IncidentClassification) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o IncidentClassificationOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o IncidentClassificationOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e IncidentClassification) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type IncidentClassificationPtrOutput struct{ *pulumi.OutputState }

func (IncidentClassificationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IncidentClassification)(nil)).Elem()
}

func (o IncidentClassificationPtrOutput) ToIncidentClassificationPtrOutput() IncidentClassificationPtrOutput {
	return o
}

func (o IncidentClassificationPtrOutput) ToIncidentClassificationPtrOutputWithContext(ctx context.Context) IncidentClassificationPtrOutput {
	return o
}

func (o IncidentClassificationPtrOutput) Elem() IncidentClassificationOutput {
	return o.ApplyT(func(v *IncidentClassification) IncidentClassification {
		if v != nil {
			return *v
		}
		var ret IncidentClassification
		return ret
	}).(IncidentClassificationOutput)
}

func (o IncidentClassificationPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o IncidentClassificationPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *IncidentClassification) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// IncidentClassificationInput is an input type that accepts values of the IncidentClassification enum
// A concrete instance of `IncidentClassificationInput` can be one of the following:
//
//	IncidentClassificationUndetermined
//	IncidentClassificationTruePositive
//	IncidentClassificationBenignPositive
//	IncidentClassificationFalsePositive
type IncidentClassificationInput interface {
	pulumi.Input

	ToIncidentClassificationOutput() IncidentClassificationOutput
	ToIncidentClassificationOutputWithContext(context.Context) IncidentClassificationOutput
}

var incidentClassificationPtrType = reflect.TypeOf((**IncidentClassification)(nil)).Elem()

type IncidentClassificationPtrInput interface {
	pulumi.Input

	ToIncidentClassificationPtrOutput() IncidentClassificationPtrOutput
	ToIncidentClassificationPtrOutputWithContext(context.Context) IncidentClassificationPtrOutput
}

type incidentClassificationPtr string

func IncidentClassificationPtr(v string) IncidentClassificationPtrInput {
	return (*incidentClassificationPtr)(&v)
}

func (*incidentClassificationPtr) ElementType() reflect.Type {
	return incidentClassificationPtrType
}

func (in *incidentClassificationPtr) ToIncidentClassificationPtrOutput() IncidentClassificationPtrOutput {
	return pulumi.ToOutput(in).(IncidentClassificationPtrOutput)
}

func (in *incidentClassificationPtr) ToIncidentClassificationPtrOutputWithContext(ctx context.Context) IncidentClassificationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(IncidentClassificationPtrOutput)
}

// The classification reason to close the incident with
type IncidentClassificationReason string

const (
	// Classification reason was suspicious activity
	IncidentClassificationReasonSuspiciousActivity = IncidentClassificationReason("SuspiciousActivity")
	// Classification reason was suspicious but expected
	IncidentClassificationReasonSuspiciousButExpected = IncidentClassificationReason("SuspiciousButExpected")
	// Classification reason was incorrect alert logic
	IncidentClassificationReasonIncorrectAlertLogic = IncidentClassificationReason("IncorrectAlertLogic")
	// Classification reason was inaccurate data
	IncidentClassificationReasonInaccurateData = IncidentClassificationReason("InaccurateData")
)

func (IncidentClassificationReason) ElementType() reflect.Type {
	return reflect.TypeOf((*IncidentClassificationReason)(nil)).Elem()
}

func (e IncidentClassificationReason) ToIncidentClassificationReasonOutput() IncidentClassificationReasonOutput {
	return pulumi.ToOutput(e).(IncidentClassificationReasonOutput)
}

func (e IncidentClassificationReason) ToIncidentClassificationReasonOutputWithContext(ctx context.Context) IncidentClassificationReasonOutput {
	return pulumi.ToOutputWithContext(ctx, e).(IncidentClassificationReasonOutput)
}

func (e IncidentClassificationReason) ToIncidentClassificationReasonPtrOutput() IncidentClassificationReasonPtrOutput {
	return e.ToIncidentClassificationReasonPtrOutputWithContext(context.Background())
}

func (e IncidentClassificationReason) ToIncidentClassificationReasonPtrOutputWithContext(ctx context.Context) IncidentClassificationReasonPtrOutput {
	return IncidentClassificationReason(e).ToIncidentClassificationReasonOutputWithContext(ctx).ToIncidentClassificationReasonPtrOutputWithContext(ctx)
}

func (e IncidentClassificationReason) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e IncidentClassificationReason) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e IncidentClassificationReason) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e IncidentClassificationReason) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type IncidentClassificationReasonOutput struct{ *pulumi.OutputState }

func (IncidentClassificationReasonOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IncidentClassificationReason)(nil)).Elem()
}

func (o IncidentClassificationReasonOutput) ToIncidentClassificationReasonOutput() IncidentClassificationReasonOutput {
	return o
}

func (o IncidentClassificationReasonOutput) ToIncidentClassificationReasonOutputWithContext(ctx context.Context) IncidentClassificationReasonOutput {
	return o
}

func (o IncidentClassificationReasonOutput) ToIncidentClassificationReasonPtrOutput() IncidentClassificationReasonPtrOutput {
	return o.ToIncidentClassificationReasonPtrOutputWithContext(context.Background())
}

func (o IncidentClassificationReasonOutput) ToIncidentClassificationReasonPtrOutputWithContext(ctx context.Context) IncidentClassificationReasonPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IncidentClassificationReason) *IncidentClassificationReason {
		return &v
	}).(IncidentClassificationReasonPtrOutput)
}

func (o IncidentClassificationReasonOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o IncidentClassificationReasonOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e IncidentClassificationReason) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o IncidentClassificationReasonOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o IncidentClassificationReasonOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e IncidentClassificationReason) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type IncidentClassificationReasonPtrOutput struct{ *pulumi.OutputState }

func (IncidentClassificationReasonPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IncidentClassificationReason)(nil)).Elem()
}

func (o IncidentClassificationReasonPtrOutput) ToIncidentClassificationReasonPtrOutput() IncidentClassificationReasonPtrOutput {
	return o
}

func (o IncidentClassificationReasonPtrOutput) ToIncidentClassificationReasonPtrOutputWithContext(ctx context.Context) IncidentClassificationReasonPtrOutput {
	return o
}

func (o IncidentClassificationReasonPtrOutput) Elem() IncidentClassificationReasonOutput {
	return o.ApplyT(func(v *IncidentClassificationReason) IncidentClassificationReason {
		if v != nil {
			return *v
		}
		var ret IncidentClassificationReason
		return ret
	}).(IncidentClassificationReasonOutput)
}

func (o IncidentClassificationReasonPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o IncidentClassificationReasonPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *IncidentClassificationReason) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// IncidentClassificationReasonInput is an input type that accepts values of the IncidentClassificationReason enum
// A concrete instance of `IncidentClassificationReasonInput` can be one of the following:
//
//	IncidentClassificationReasonSuspiciousActivity
//	IncidentClassificationReasonSuspiciousButExpected
//	IncidentClassificationReasonIncorrectAlertLogic
//	IncidentClassificationReasonInaccurateData
type IncidentClassificationReasonInput interface {
	pulumi.Input

	ToIncidentClassificationReasonOutput() IncidentClassificationReasonOutput
	ToIncidentClassificationReasonOutputWithContext(context.Context) IncidentClassificationReasonOutput
}

var incidentClassificationReasonPtrType = reflect.TypeOf((**IncidentClassificationReason)(nil)).Elem()

type IncidentClassificationReasonPtrInput interface {
	pulumi.Input

	ToIncidentClassificationReasonPtrOutput() IncidentClassificationReasonPtrOutput
	ToIncidentClassificationReasonPtrOutputWithContext(context.Context) IncidentClassificationReasonPtrOutput
}

type incidentClassificationReasonPtr string

func IncidentClassificationReasonPtr(v string) IncidentClassificationReasonPtrInput {
	return (*incidentClassificationReasonPtr)(&v)
}

func (*incidentClassificationReasonPtr) ElementType() reflect.Type {
	return incidentClassificationReasonPtrType
}

func (in *incidentClassificationReasonPtr) ToIncidentClassificationReasonPtrOutput() IncidentClassificationReasonPtrOutput {
	return pulumi.ToOutput(in).(IncidentClassificationReasonPtrOutput)
}

func (in *incidentClassificationReasonPtr) ToIncidentClassificationReasonPtrOutputWithContext(ctx context.Context) IncidentClassificationReasonPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(IncidentClassificationReasonPtrOutput)
}

// The severity of the incident
type IncidentSeverity string

const (
	// High severity
	IncidentSeverityHigh = IncidentSeverity("High")
	// Medium severity
	IncidentSeverityMedium = IncidentSeverity("Medium")
	// Low severity
	IncidentSeverityLow = IncidentSeverity("Low")
	// Informational severity
	IncidentSeverityInformational = IncidentSeverity("Informational")
)

func (IncidentSeverity) ElementType() reflect.Type {
	return reflect.TypeOf((*IncidentSeverity)(nil)).Elem()
}

func (e IncidentSeverity) ToIncidentSeverityOutput() IncidentSeverityOutput {
	return pulumi.ToOutput(e).(IncidentSeverityOutput)
}

func (e IncidentSeverity) ToIncidentSeverityOutputWithContext(ctx context.Context) IncidentSeverityOutput {
	return pulumi.ToOutputWithContext(ctx, e).(IncidentSeverityOutput)
}

func (e IncidentSeverity) ToIncidentSeverityPtrOutput() IncidentSeverityPtrOutput {
	return e.ToIncidentSeverityPtrOutputWithContext(context.Background())
}

func (e IncidentSeverity) ToIncidentSeverityPtrOutputWithContext(ctx context.Context) IncidentSeverityPtrOutput {
	return IncidentSeverity(e).ToIncidentSeverityOutputWithContext(ctx).ToIncidentSeverityPtrOutputWithContext(ctx)
}

func (e IncidentSeverity) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e IncidentSeverity) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e IncidentSeverity) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e IncidentSeverity) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type IncidentSeverityOutput struct{ *pulumi.OutputState }

func (IncidentSeverityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IncidentSeverity)(nil)).Elem()
}

func (o IncidentSeverityOutput) ToIncidentSeverityOutput() IncidentSeverityOutput {
	return o
}

func (o IncidentSeverityOutput) ToIncidentSeverityOutputWithContext(ctx context.Context) IncidentSeverityOutput {
	return o
}

func (o IncidentSeverityOutput) ToIncidentSeverityPtrOutput() IncidentSeverityPtrOutput {
	return o.ToIncidentSeverityPtrOutputWithContext(context.Background())
}

func (o IncidentSeverityOutput) ToIncidentSeverityPtrOutputWithContext(ctx context.Context) IncidentSeverityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IncidentSeverity) *IncidentSeverity {
		return &v
	}).(IncidentSeverityPtrOutput)
}

func (o IncidentSeverityOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o IncidentSeverityOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e IncidentSeverity) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o IncidentSeverityOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o IncidentSeverityOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e IncidentSeverity) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type IncidentSeverityPtrOutput struct{ *pulumi.OutputState }

func (IncidentSeverityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IncidentSeverity)(nil)).Elem()
}

func (o IncidentSeverityPtrOutput) ToIncidentSeverityPtrOutput() IncidentSeverityPtrOutput {
	return o
}

func (o IncidentSeverityPtrOutput) ToIncidentSeverityPtrOutputWithContext(ctx context.Context) IncidentSeverityPtrOutput {
	return o
}

func (o IncidentSeverityPtrOutput) Elem() IncidentSeverityOutput {
	return o.ApplyT(func(v *IncidentSeverity) IncidentSeverity {
		if v != nil {
			return *v
		}
		var ret IncidentSeverity
		return ret
	}).(IncidentSeverityOutput)
}

func (o IncidentSeverityPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o IncidentSeverityPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *IncidentSeverity) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// IncidentSeverityInput is an input type that accepts values of the IncidentSeverity enum
// A concrete instance of `IncidentSeverityInput` can be one of the following:
//
//	IncidentSeverityHigh
//	IncidentSeverityMedium
//	IncidentSeverityLow
//	IncidentSeverityInformational
type IncidentSeverityInput interface {
	pulumi.Input

	ToIncidentSeverityOutput() IncidentSeverityOutput
	ToIncidentSeverityOutputWithContext(context.Context) IncidentSeverityOutput
}

var incidentSeverityPtrType = reflect.TypeOf((**IncidentSeverity)(nil)).Elem()

type IncidentSeverityPtrInput interface {
	pulumi.Input

	ToIncidentSeverityPtrOutput() IncidentSeverityPtrOutput
	ToIncidentSeverityPtrOutputWithContext(context.Context) IncidentSeverityPtrOutput
}

type incidentSeverityPtr string

func IncidentSeverityPtr(v string) IncidentSeverityPtrInput {
	return (*incidentSeverityPtr)(&v)
}

func (*incidentSeverityPtr) ElementType() reflect.Type {
	return incidentSeverityPtrType
}

func (in *incidentSeverityPtr) ToIncidentSeverityPtrOutput() IncidentSeverityPtrOutput {
	return pulumi.ToOutput(in).(IncidentSeverityPtrOutput)
}

func (in *incidentSeverityPtr) ToIncidentSeverityPtrOutputWithContext(ctx context.Context) IncidentSeverityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(IncidentSeverityPtrOutput)
}

// The status of the incident
type IncidentStatus string

const (
	// An active incident which isn't being handled currently
	IncidentStatusNew = IncidentStatus("New")
	// An active incident which is being handled
	IncidentStatusActive = IncidentStatus("Active")
	// A non-active incident
	IncidentStatusClosed = IncidentStatus("Closed")
)

func (IncidentStatus) ElementType() reflect.Type {
	return reflect.TypeOf((*IncidentStatus)(nil)).Elem()
}

func (e IncidentStatus) ToIncidentStatusOutput() IncidentStatusOutput {
	return pulumi.ToOutput(e).(IncidentStatusOutput)
}

func (e IncidentStatus) ToIncidentStatusOutputWithContext(ctx context.Context) IncidentStatusOutput {
	return pulumi.ToOutputWithContext(ctx, e).(IncidentStatusOutput)
}

func (e IncidentStatus) ToIncidentStatusPtrOutput() IncidentStatusPtrOutput {
	return e.ToIncidentStatusPtrOutputWithContext(context.Background())
}

func (e IncidentStatus) ToIncidentStatusPtrOutputWithContext(ctx context.Context) IncidentStatusPtrOutput {
	return IncidentStatus(e).ToIncidentStatusOutputWithContext(ctx).ToIncidentStatusPtrOutputWithContext(ctx)
}

func (e IncidentStatus) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e IncidentStatus) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e IncidentStatus) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e IncidentStatus) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type IncidentStatusOutput struct{ *pulumi.OutputState }

func (IncidentStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IncidentStatus)(nil)).Elem()
}

func (o IncidentStatusOutput) ToIncidentStatusOutput() IncidentStatusOutput {
	return o
}

func (o IncidentStatusOutput) ToIncidentStatusOutputWithContext(ctx context.Context) IncidentStatusOutput {
	return o
}

func (o IncidentStatusOutput) ToIncidentStatusPtrOutput() IncidentStatusPtrOutput {
	return o.ToIncidentStatusPtrOutputWithContext(context.Background())
}

func (o IncidentStatusOutput) ToIncidentStatusPtrOutputWithContext(ctx context.Context) IncidentStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IncidentStatus) *IncidentStatus {
		return &v
	}).(IncidentStatusPtrOutput)
}

func (o IncidentStatusOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o IncidentStatusOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e IncidentStatus) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o IncidentStatusOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o IncidentStatusOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e IncidentStatus) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type IncidentStatusPtrOutput struct{ *pulumi.OutputState }

func (IncidentStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IncidentStatus)(nil)).Elem()
}

func (o IncidentStatusPtrOutput) ToIncidentStatusPtrOutput() IncidentStatusPtrOutput {
	return o
}

func (o IncidentStatusPtrOutput) ToIncidentStatusPtrOutputWithContext(ctx context.Context) IncidentStatusPtrOutput {
	return o
}

func (o IncidentStatusPtrOutput) Elem() IncidentStatusOutput {
	return o.ApplyT(func(v *IncidentStatus) IncidentStatus {
		if v != nil {
			return *v
		}
		var ret IncidentStatus
		return ret
	}).(IncidentStatusOutput)
}

func (o IncidentStatusPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o IncidentStatusPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *IncidentStatus) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// IncidentStatusInput is an input type that accepts values of the IncidentStatus enum
// A concrete instance of `IncidentStatusInput` can be one of the following:
//
//	IncidentStatusNew
//	IncidentStatusActive
//	IncidentStatusClosed
type IncidentStatusInput interface {
	pulumi.Input

	ToIncidentStatusOutput() IncidentStatusOutput
	ToIncidentStatusOutputWithContext(context.Context) IncidentStatusOutput
}

var incidentStatusPtrType = reflect.TypeOf((**IncidentStatus)(nil)).Elem()

type IncidentStatusPtrInput interface {
	pulumi.Input

	ToIncidentStatusPtrOutput() IncidentStatusPtrOutput
	ToIncidentStatusPtrOutputWithContext(context.Context) IncidentStatusPtrOutput
}

type incidentStatusPtr string

func IncidentStatusPtr(v string) IncidentStatusPtrInput {
	return (*incidentStatusPtr)(&v)
}

func (*incidentStatusPtr) ElementType() reflect.Type {
	return incidentStatusPtrType
}

func (in *incidentStatusPtr) ToIncidentStatusPtrOutput() IncidentStatusPtrOutput {
	return pulumi.ToOutput(in).(IncidentStatusPtrOutput)
}

func (in *incidentStatusPtr) ToIncidentStatusPtrOutputWithContext(ctx context.Context) IncidentStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(IncidentStatusPtrOutput)
}

// The kind of the setting
type SettingKind string

const (
	SettingKindAnomalies       = SettingKind("Anomalies")
	SettingKindEyesOn          = SettingKind("EyesOn")
	SettingKindEntityAnalytics = SettingKind("EntityAnalytics")
	SettingKindUeba            = SettingKind("Ueba")
)

// The source of the watchlist
type Source string

const (
	Source_Local_file     = Source("Local file")
	Source_Remote_storage = Source("Remote storage")
)

func (Source) ElementType() reflect.Type {
	return reflect.TypeOf((*Source)(nil)).Elem()
}

func (e Source) ToSourceOutput() SourceOutput {
	return pulumi.ToOutput(e).(SourceOutput)
}

func (e Source) ToSourceOutputWithContext(ctx context.Context) SourceOutput {
	return pulumi.ToOutputWithContext(ctx, e).(SourceOutput)
}

func (e Source) ToSourcePtrOutput() SourcePtrOutput {
	return e.ToSourcePtrOutputWithContext(context.Background())
}

func (e Source) ToSourcePtrOutputWithContext(ctx context.Context) SourcePtrOutput {
	return Source(e).ToSourceOutputWithContext(ctx).ToSourcePtrOutputWithContext(ctx)
}

func (e Source) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e Source) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e Source) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e Source) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type SourceOutput struct{ *pulumi.OutputState }

func (SourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Source)(nil)).Elem()
}

func (o SourceOutput) ToSourceOutput() SourceOutput {
	return o
}

func (o SourceOutput) ToSourceOutputWithContext(ctx context.Context) SourceOutput {
	return o
}

func (o SourceOutput) ToSourcePtrOutput() SourcePtrOutput {
	return o.ToSourcePtrOutputWithContext(context.Background())
}

func (o SourceOutput) ToSourcePtrOutputWithContext(ctx context.Context) SourcePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Source) *Source {
		return &v
	}).(SourcePtrOutput)
}

func (o SourceOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o SourceOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e Source) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o SourceOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SourceOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e Source) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type SourcePtrOutput struct{ *pulumi.OutputState }

func (SourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Source)(nil)).Elem()
}

func (o SourcePtrOutput) ToSourcePtrOutput() SourcePtrOutput {
	return o
}

func (o SourcePtrOutput) ToSourcePtrOutputWithContext(ctx context.Context) SourcePtrOutput {
	return o
}

func (o SourcePtrOutput) Elem() SourceOutput {
	return o.ApplyT(func(v *Source) Source {
		if v != nil {
			return *v
		}
		var ret Source
		return ret
	}).(SourceOutput)
}

func (o SourcePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SourcePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *Source) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// SourceInput is an input type that accepts values of the Source enum
// A concrete instance of `SourceInput` can be one of the following:
//
//	Source_Local_file
//	Source_Remote_storage
type SourceInput interface {
	pulumi.Input

	ToSourceOutput() SourceOutput
	ToSourceOutputWithContext(context.Context) SourceOutput
}

var sourcePtrType = reflect.TypeOf((**Source)(nil)).Elem()

type SourcePtrInput interface {
	pulumi.Input

	ToSourcePtrOutput() SourcePtrOutput
	ToSourcePtrOutputWithContext(context.Context) SourcePtrOutput
}

type sourcePtr string

func SourcePtr(v string) SourcePtrInput {
	return (*sourcePtr)(&v)
}

func (*sourcePtr) ElementType() reflect.Type {
	return sourcePtrType
}

func (in *sourcePtr) ToSourcePtrOutput() SourcePtrOutput {
	return pulumi.ToOutput(in).(SourcePtrOutput)
}

func (in *sourcePtr) ToSourcePtrOutputWithContext(ctx context.Context) SourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(SourcePtrOutput)
}

// The type of object the automation rule triggers on
type TriggersOn string

const (
	// Trigger on Incidents
	TriggersOnIncidents = TriggersOn("Incidents")
)

func (TriggersOn) ElementType() reflect.Type {
	return reflect.TypeOf((*TriggersOn)(nil)).Elem()
}

func (e TriggersOn) ToTriggersOnOutput() TriggersOnOutput {
	return pulumi.ToOutput(e).(TriggersOnOutput)
}

func (e TriggersOn) ToTriggersOnOutputWithContext(ctx context.Context) TriggersOnOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TriggersOnOutput)
}

func (e TriggersOn) ToTriggersOnPtrOutput() TriggersOnPtrOutput {
	return e.ToTriggersOnPtrOutputWithContext(context.Background())
}

func (e TriggersOn) ToTriggersOnPtrOutputWithContext(ctx context.Context) TriggersOnPtrOutput {
	return TriggersOn(e).ToTriggersOnOutputWithContext(ctx).ToTriggersOnPtrOutputWithContext(ctx)
}

func (e TriggersOn) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TriggersOn) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TriggersOn) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TriggersOn) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TriggersOnOutput struct{ *pulumi.OutputState }

func (TriggersOnOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TriggersOn)(nil)).Elem()
}

func (o TriggersOnOutput) ToTriggersOnOutput() TriggersOnOutput {
	return o
}

func (o TriggersOnOutput) ToTriggersOnOutputWithContext(ctx context.Context) TriggersOnOutput {
	return o
}

func (o TriggersOnOutput) ToTriggersOnPtrOutput() TriggersOnPtrOutput {
	return o.ToTriggersOnPtrOutputWithContext(context.Background())
}

func (o TriggersOnOutput) ToTriggersOnPtrOutputWithContext(ctx context.Context) TriggersOnPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TriggersOn) *TriggersOn {
		return &v
	}).(TriggersOnPtrOutput)
}

func (o TriggersOnOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TriggersOnOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TriggersOn) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TriggersOnOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TriggersOnOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TriggersOn) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TriggersOnPtrOutput struct{ *pulumi.OutputState }

func (TriggersOnPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TriggersOn)(nil)).Elem()
}

func (o TriggersOnPtrOutput) ToTriggersOnPtrOutput() TriggersOnPtrOutput {
	return o
}

func (o TriggersOnPtrOutput) ToTriggersOnPtrOutputWithContext(ctx context.Context) TriggersOnPtrOutput {
	return o
}

func (o TriggersOnPtrOutput) Elem() TriggersOnOutput {
	return o.ApplyT(func(v *TriggersOn) TriggersOn {
		if v != nil {
			return *v
		}
		var ret TriggersOn
		return ret
	}).(TriggersOnOutput)
}

func (o TriggersOnPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TriggersOnPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TriggersOn) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TriggersOnInput is an input type that accepts values of the TriggersOn enum
// A concrete instance of `TriggersOnInput` can be one of the following:
//
//	TriggersOnIncidents
type TriggersOnInput interface {
	pulumi.Input

	ToTriggersOnOutput() TriggersOnOutput
	ToTriggersOnOutputWithContext(context.Context) TriggersOnOutput
}

var triggersOnPtrType = reflect.TypeOf((**TriggersOn)(nil)).Elem()

type TriggersOnPtrInput interface {
	pulumi.Input

	ToTriggersOnPtrOutput() TriggersOnPtrOutput
	ToTriggersOnPtrOutputWithContext(context.Context) TriggersOnPtrOutput
}

type triggersOnPtr string

func TriggersOnPtr(v string) TriggersOnPtrInput {
	return (*triggersOnPtr)(&v)
}

func (*triggersOnPtr) ElementType() reflect.Type {
	return triggersOnPtrType
}

func (in *triggersOnPtr) ToTriggersOnPtrOutput() TriggersOnPtrOutput {
	return pulumi.ToOutput(in).(TriggersOnPtrOutput)
}

func (in *triggersOnPtr) ToTriggersOnPtrOutputWithContext(ctx context.Context) TriggersOnPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TriggersOnPtrOutput)
}

// The type of event the automation rule triggers on
type TriggersWhen string

const (
	// Trigger on created objects
	TriggersWhenCreated = TriggersWhen("Created")
)

func (TriggersWhen) ElementType() reflect.Type {
	return reflect.TypeOf((*TriggersWhen)(nil)).Elem()
}

func (e TriggersWhen) ToTriggersWhenOutput() TriggersWhenOutput {
	return pulumi.ToOutput(e).(TriggersWhenOutput)
}

func (e TriggersWhen) ToTriggersWhenOutputWithContext(ctx context.Context) TriggersWhenOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TriggersWhenOutput)
}

func (e TriggersWhen) ToTriggersWhenPtrOutput() TriggersWhenPtrOutput {
	return e.ToTriggersWhenPtrOutputWithContext(context.Background())
}

func (e TriggersWhen) ToTriggersWhenPtrOutputWithContext(ctx context.Context) TriggersWhenPtrOutput {
	return TriggersWhen(e).ToTriggersWhenOutputWithContext(ctx).ToTriggersWhenPtrOutputWithContext(ctx)
}

func (e TriggersWhen) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TriggersWhen) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TriggersWhen) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TriggersWhen) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TriggersWhenOutput struct{ *pulumi.OutputState }

func (TriggersWhenOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TriggersWhen)(nil)).Elem()
}

func (o TriggersWhenOutput) ToTriggersWhenOutput() TriggersWhenOutput {
	return o
}

func (o TriggersWhenOutput) ToTriggersWhenOutputWithContext(ctx context.Context) TriggersWhenOutput {
	return o
}

func (o TriggersWhenOutput) ToTriggersWhenPtrOutput() TriggersWhenPtrOutput {
	return o.ToTriggersWhenPtrOutputWithContext(context.Background())
}

func (o TriggersWhenOutput) ToTriggersWhenPtrOutputWithContext(ctx context.Context) TriggersWhenPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TriggersWhen) *TriggersWhen {
		return &v
	}).(TriggersWhenPtrOutput)
}

func (o TriggersWhenOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TriggersWhenOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TriggersWhen) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TriggersWhenOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TriggersWhenOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TriggersWhen) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TriggersWhenPtrOutput struct{ *pulumi.OutputState }

func (TriggersWhenPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TriggersWhen)(nil)).Elem()
}

func (o TriggersWhenPtrOutput) ToTriggersWhenPtrOutput() TriggersWhenPtrOutput {
	return o
}

func (o TriggersWhenPtrOutput) ToTriggersWhenPtrOutputWithContext(ctx context.Context) TriggersWhenPtrOutput {
	return o
}

func (o TriggersWhenPtrOutput) Elem() TriggersWhenOutput {
	return o.ApplyT(func(v *TriggersWhen) TriggersWhen {
		if v != nil {
			return *v
		}
		var ret TriggersWhen
		return ret
	}).(TriggersWhenOutput)
}

func (o TriggersWhenPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TriggersWhenPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TriggersWhen) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TriggersWhenInput is an input type that accepts values of the TriggersWhen enum
// A concrete instance of `TriggersWhenInput` can be one of the following:
//
//	TriggersWhenCreated
type TriggersWhenInput interface {
	pulumi.Input

	ToTriggersWhenOutput() TriggersWhenOutput
	ToTriggersWhenOutputWithContext(context.Context) TriggersWhenOutput
}

var triggersWhenPtrType = reflect.TypeOf((**TriggersWhen)(nil)).Elem()

type TriggersWhenPtrInput interface {
	pulumi.Input

	ToTriggersWhenPtrOutput() TriggersWhenPtrOutput
	ToTriggersWhenPtrOutputWithContext(context.Context) TriggersWhenPtrOutput
}

type triggersWhenPtr string

func TriggersWhenPtr(v string) TriggersWhenPtrInput {
	return (*triggersWhenPtr)(&v)
}

func (*triggersWhenPtr) ElementType() reflect.Type {
	return triggersWhenPtrType
}

func (in *triggersWhenPtr) ToTriggersWhenPtrOutput() TriggersWhenPtrOutput {
	return pulumi.ToOutput(in).(TriggersWhenPtrOutput)
}

func (in *triggersWhenPtr) ToTriggersWhenPtrOutputWithContext(ctx context.Context) TriggersWhenPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TriggersWhenPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(AutomationRulePropertyConditionSupportedOperatorOutput{})
	pulumi.RegisterOutputType(AutomationRulePropertyConditionSupportedOperatorPtrOutput{})
	pulumi.RegisterOutputType(AutomationRulePropertyConditionSupportedPropertyOutput{})
	pulumi.RegisterOutputType(AutomationRulePropertyConditionSupportedPropertyPtrOutput{})
	pulumi.RegisterOutputType(EntityTimelineKindOutput{})
	pulumi.RegisterOutputType(EntityTimelineKindPtrOutput{})
	pulumi.RegisterOutputType(IncidentClassificationOutput{})
	pulumi.RegisterOutputType(IncidentClassificationPtrOutput{})
	pulumi.RegisterOutputType(IncidentClassificationReasonOutput{})
	pulumi.RegisterOutputType(IncidentClassificationReasonPtrOutput{})
	pulumi.RegisterOutputType(IncidentSeverityOutput{})
	pulumi.RegisterOutputType(IncidentSeverityPtrOutput{})
	pulumi.RegisterOutputType(IncidentStatusOutput{})
	pulumi.RegisterOutputType(IncidentStatusPtrOutput{})
	pulumi.RegisterOutputType(SourceOutput{})
	pulumi.RegisterOutputType(SourcePtrOutput{})
	pulumi.RegisterOutputType(TriggersOnOutput{})
	pulumi.RegisterOutputType(TriggersOnPtrOutput{})
	pulumi.RegisterOutputType(TriggersWhenOutput{})
	pulumi.RegisterOutputType(TriggersWhenPtrOutput{})
}
