// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20210901preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The Activity query definitions
type ActivityEntityQueriesPropertiesQueryDefinitions struct {
	// The Activity query to run on a given entity
	Query *string `pulumi:"query"`
}

// The Activity query definitions
type ActivityEntityQueriesPropertiesResponseQueryDefinitions struct {
	// The Activity query to run on a given entity
	Query *string `pulumi:"query"`
}

// The Activity query definitions
type ActivityEntityQueriesPropertiesResponseQueryDefinitionsOutput struct{ *pulumi.OutputState }

func (ActivityEntityQueriesPropertiesResponseQueryDefinitionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ActivityEntityQueriesPropertiesResponseQueryDefinitions)(nil)).Elem()
}

func (o ActivityEntityQueriesPropertiesResponseQueryDefinitionsOutput) ToActivityEntityQueriesPropertiesResponseQueryDefinitionsOutput() ActivityEntityQueriesPropertiesResponseQueryDefinitionsOutput {
	return o
}

func (o ActivityEntityQueriesPropertiesResponseQueryDefinitionsOutput) ToActivityEntityQueriesPropertiesResponseQueryDefinitionsOutputWithContext(ctx context.Context) ActivityEntityQueriesPropertiesResponseQueryDefinitionsOutput {
	return o
}

// The Activity query to run on a given entity
func (o ActivityEntityQueriesPropertiesResponseQueryDefinitionsOutput) Query() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ActivityEntityQueriesPropertiesResponseQueryDefinitions) *string { return v.Query }).(pulumi.StringPtrOutput)
}

type ActivityEntityQueriesPropertiesResponseQueryDefinitionsPtrOutput struct{ *pulumi.OutputState }

func (ActivityEntityQueriesPropertiesResponseQueryDefinitionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ActivityEntityQueriesPropertiesResponseQueryDefinitions)(nil)).Elem()
}

func (o ActivityEntityQueriesPropertiesResponseQueryDefinitionsPtrOutput) ToActivityEntityQueriesPropertiesResponseQueryDefinitionsPtrOutput() ActivityEntityQueriesPropertiesResponseQueryDefinitionsPtrOutput {
	return o
}

func (o ActivityEntityQueriesPropertiesResponseQueryDefinitionsPtrOutput) ToActivityEntityQueriesPropertiesResponseQueryDefinitionsPtrOutputWithContext(ctx context.Context) ActivityEntityQueriesPropertiesResponseQueryDefinitionsPtrOutput {
	return o
}

func (o ActivityEntityQueriesPropertiesResponseQueryDefinitionsPtrOutput) Elem() ActivityEntityQueriesPropertiesResponseQueryDefinitionsOutput {
	return o.ApplyT(func(v *ActivityEntityQueriesPropertiesResponseQueryDefinitions) ActivityEntityQueriesPropertiesResponseQueryDefinitions {
		if v != nil {
			return *v
		}
		var ret ActivityEntityQueriesPropertiesResponseQueryDefinitions
		return ret
	}).(ActivityEntityQueriesPropertiesResponseQueryDefinitionsOutput)
}

// The Activity query to run on a given entity
func (o ActivityEntityQueriesPropertiesResponseQueryDefinitionsPtrOutput) Query() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ActivityEntityQueriesPropertiesResponseQueryDefinitions) *string {
		if v == nil {
			return nil
		}
		return v.Query
	}).(pulumi.StringPtrOutput)
}

// Represents Activity timeline item.
type ActivityTimelineItemResponse struct {
	// The grouping bucket end time.
	BucketEndTimeUTC string `pulumi:"bucketEndTimeUTC"`
	// The grouping bucket start time.
	BucketStartTimeUTC string `pulumi:"bucketStartTimeUTC"`
	// The activity timeline content.
	Content string `pulumi:"content"`
	// The time of the first activity in the grouping bucket.
	FirstActivityTimeUTC string `pulumi:"firstActivityTimeUTC"`
	// The entity query kind
	// Expected value is 'Activity'.
	Kind string `pulumi:"kind"`
	// The time of the last activity in the grouping bucket.
	LastActivityTimeUTC string `pulumi:"lastActivityTimeUTC"`
	// The activity query id.
	QueryId string `pulumi:"queryId"`
	// The activity timeline title.
	Title string `pulumi:"title"`
}

// Settings for how to dynamically override alert static details
type AlertDetailsOverride struct {
	// the format containing columns name(s) to override the alert description
	AlertDescriptionFormat *string `pulumi:"alertDescriptionFormat"`
	// the format containing columns name(s) to override the alert name
	AlertDisplayNameFormat *string `pulumi:"alertDisplayNameFormat"`
	// the column name to take the alert severity from
	AlertSeverityColumnName *string `pulumi:"alertSeverityColumnName"`
	// the column name to take the alert tactics from
	AlertTacticsColumnName *string `pulumi:"alertTacticsColumnName"`
}

// Settings for how to dynamically override alert static details
type AlertDetailsOverrideResponse struct {
	// the format containing columns name(s) to override the alert description
	AlertDescriptionFormat *string `pulumi:"alertDescriptionFormat"`
	// the format containing columns name(s) to override the alert name
	AlertDisplayNameFormat *string `pulumi:"alertDisplayNameFormat"`
	// the column name to take the alert severity from
	AlertSeverityColumnName *string `pulumi:"alertSeverityColumnName"`
	// the column name to take the alert tactics from
	AlertTacticsColumnName *string `pulumi:"alertTacticsColumnName"`
}

// Settings for how to dynamically override alert static details
type AlertDetailsOverrideResponseOutput struct{ *pulumi.OutputState }

func (AlertDetailsOverrideResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertDetailsOverrideResponse)(nil)).Elem()
}

func (o AlertDetailsOverrideResponseOutput) ToAlertDetailsOverrideResponseOutput() AlertDetailsOverrideResponseOutput {
	return o
}

func (o AlertDetailsOverrideResponseOutput) ToAlertDetailsOverrideResponseOutputWithContext(ctx context.Context) AlertDetailsOverrideResponseOutput {
	return o
}

// the format containing columns name(s) to override the alert description
func (o AlertDetailsOverrideResponseOutput) AlertDescriptionFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertDetailsOverrideResponse) *string { return v.AlertDescriptionFormat }).(pulumi.StringPtrOutput)
}

// the format containing columns name(s) to override the alert name
func (o AlertDetailsOverrideResponseOutput) AlertDisplayNameFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertDetailsOverrideResponse) *string { return v.AlertDisplayNameFormat }).(pulumi.StringPtrOutput)
}

// the column name to take the alert severity from
func (o AlertDetailsOverrideResponseOutput) AlertSeverityColumnName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertDetailsOverrideResponse) *string { return v.AlertSeverityColumnName }).(pulumi.StringPtrOutput)
}

// the column name to take the alert tactics from
func (o AlertDetailsOverrideResponseOutput) AlertTacticsColumnName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertDetailsOverrideResponse) *string { return v.AlertTacticsColumnName }).(pulumi.StringPtrOutput)
}

type AlertDetailsOverrideResponsePtrOutput struct{ *pulumi.OutputState }

func (AlertDetailsOverrideResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AlertDetailsOverrideResponse)(nil)).Elem()
}

func (o AlertDetailsOverrideResponsePtrOutput) ToAlertDetailsOverrideResponsePtrOutput() AlertDetailsOverrideResponsePtrOutput {
	return o
}

func (o AlertDetailsOverrideResponsePtrOutput) ToAlertDetailsOverrideResponsePtrOutputWithContext(ctx context.Context) AlertDetailsOverrideResponsePtrOutput {
	return o
}

func (o AlertDetailsOverrideResponsePtrOutput) Elem() AlertDetailsOverrideResponseOutput {
	return o.ApplyT(func(v *AlertDetailsOverrideResponse) AlertDetailsOverrideResponse {
		if v != nil {
			return *v
		}
		var ret AlertDetailsOverrideResponse
		return ret
	}).(AlertDetailsOverrideResponseOutput)
}

// the format containing columns name(s) to override the alert description
func (o AlertDetailsOverrideResponsePtrOutput) AlertDescriptionFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AlertDetailsOverrideResponse) *string {
		if v == nil {
			return nil
		}
		return v.AlertDescriptionFormat
	}).(pulumi.StringPtrOutput)
}

// the format containing columns name(s) to override the alert name
func (o AlertDetailsOverrideResponsePtrOutput) AlertDisplayNameFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AlertDetailsOverrideResponse) *string {
		if v == nil {
			return nil
		}
		return v.AlertDisplayNameFormat
	}).(pulumi.StringPtrOutput)
}

// the column name to take the alert severity from
func (o AlertDetailsOverrideResponsePtrOutput) AlertSeverityColumnName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AlertDetailsOverrideResponse) *string {
		if v == nil {
			return nil
		}
		return v.AlertSeverityColumnName
	}).(pulumi.StringPtrOutput)
}

// the column name to take the alert tactics from
func (o AlertDetailsOverrideResponsePtrOutput) AlertTacticsColumnName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AlertDetailsOverrideResponse) *string {
		if v == nil {
			return nil
		}
		return v.AlertTacticsColumnName
	}).(pulumi.StringPtrOutput)
}

// Alerts data type for data connectors.
type AlertsDataTypeOfDataConnector struct {
	// Alerts data type connection.
	Alerts DataConnectorDataTypeCommon `pulumi:"alerts"`
}

// Alerts data type for data connectors.
type AlertsDataTypeOfDataConnectorResponse struct {
	// Alerts data type connection.
	Alerts DataConnectorDataTypeCommonResponse `pulumi:"alerts"`
}

// Alerts data type for data connectors.
type AlertsDataTypeOfDataConnectorResponseOutput struct{ *pulumi.OutputState }

func (AlertsDataTypeOfDataConnectorResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertsDataTypeOfDataConnectorResponse)(nil)).Elem()
}

func (o AlertsDataTypeOfDataConnectorResponseOutput) ToAlertsDataTypeOfDataConnectorResponseOutput() AlertsDataTypeOfDataConnectorResponseOutput {
	return o
}

func (o AlertsDataTypeOfDataConnectorResponseOutput) ToAlertsDataTypeOfDataConnectorResponseOutputWithContext(ctx context.Context) AlertsDataTypeOfDataConnectorResponseOutput {
	return o
}

// Alerts data type connection.
func (o AlertsDataTypeOfDataConnectorResponseOutput) Alerts() DataConnectorDataTypeCommonResponseOutput {
	return o.ApplyT(func(v AlertsDataTypeOfDataConnectorResponse) DataConnectorDataTypeCommonResponse { return v.Alerts }).(DataConnectorDataTypeCommonResponseOutput)
}

type AlertsDataTypeOfDataConnectorResponsePtrOutput struct{ *pulumi.OutputState }

func (AlertsDataTypeOfDataConnectorResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AlertsDataTypeOfDataConnectorResponse)(nil)).Elem()
}

func (o AlertsDataTypeOfDataConnectorResponsePtrOutput) ToAlertsDataTypeOfDataConnectorResponsePtrOutput() AlertsDataTypeOfDataConnectorResponsePtrOutput {
	return o
}

func (o AlertsDataTypeOfDataConnectorResponsePtrOutput) ToAlertsDataTypeOfDataConnectorResponsePtrOutputWithContext(ctx context.Context) AlertsDataTypeOfDataConnectorResponsePtrOutput {
	return o
}

func (o AlertsDataTypeOfDataConnectorResponsePtrOutput) Elem() AlertsDataTypeOfDataConnectorResponseOutput {
	return o.ApplyT(func(v *AlertsDataTypeOfDataConnectorResponse) AlertsDataTypeOfDataConnectorResponse {
		if v != nil {
			return *v
		}
		var ret AlertsDataTypeOfDataConnectorResponse
		return ret
	}).(AlertsDataTypeOfDataConnectorResponseOutput)
}

// Alerts data type connection.
func (o AlertsDataTypeOfDataConnectorResponsePtrOutput) Alerts() DataConnectorDataTypeCommonResponsePtrOutput {
	return o.ApplyT(func(v *AlertsDataTypeOfDataConnectorResponse) *DataConnectorDataTypeCommonResponse {
		if v == nil {
			return nil
		}
		return &v.Alerts
	}).(DataConnectorDataTypeCommonResponsePtrOutput)
}

// Connector Availability Status
type Availability struct {
	// Set connector as preview
	IsPreview *bool `pulumi:"isPreview"`
	// The connector Availability Status
	Status *int `pulumi:"status"`
}

// Connector Availability Status
type AvailabilityResponse struct {
	// Set connector as preview
	IsPreview *bool `pulumi:"isPreview"`
	// The connector Availability Status
	Status *int `pulumi:"status"`
}

// Connector Availability Status
type AvailabilityResponseOutput struct{ *pulumi.OutputState }

func (AvailabilityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AvailabilityResponse)(nil)).Elem()
}

func (o AvailabilityResponseOutput) ToAvailabilityResponseOutput() AvailabilityResponseOutput {
	return o
}

func (o AvailabilityResponseOutput) ToAvailabilityResponseOutputWithContext(ctx context.Context) AvailabilityResponseOutput {
	return o
}

// Set connector as preview
func (o AvailabilityResponseOutput) IsPreview() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AvailabilityResponse) *bool { return v.IsPreview }).(pulumi.BoolPtrOutput)
}

// The connector Availability Status
func (o AvailabilityResponseOutput) Status() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AvailabilityResponse) *int { return v.Status }).(pulumi.IntPtrOutput)
}

type AvailabilityResponsePtrOutput struct{ *pulumi.OutputState }

func (AvailabilityResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AvailabilityResponse)(nil)).Elem()
}

func (o AvailabilityResponsePtrOutput) ToAvailabilityResponsePtrOutput() AvailabilityResponsePtrOutput {
	return o
}

func (o AvailabilityResponsePtrOutput) ToAvailabilityResponsePtrOutputWithContext(ctx context.Context) AvailabilityResponsePtrOutput {
	return o
}

func (o AvailabilityResponsePtrOutput) Elem() AvailabilityResponseOutput {
	return o.ApplyT(func(v *AvailabilityResponse) AvailabilityResponse {
		if v != nil {
			return *v
		}
		var ret AvailabilityResponse
		return ret
	}).(AvailabilityResponseOutput)
}

// Set connector as preview
func (o AvailabilityResponsePtrOutput) IsPreview() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AvailabilityResponse) *bool {
		if v == nil {
			return nil
		}
		return v.IsPreview
	}).(pulumi.BoolPtrOutput)
}

// The connector Availability Status
func (o AvailabilityResponsePtrOutput) Status() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AvailabilityResponse) *int {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.IntPtrOutput)
}

// The available data types for Amazon Web Services CloudTrail data connector.
type AwsCloudTrailDataConnectorDataTypes struct {
	// Logs data type.
	Logs AwsCloudTrailDataConnectorDataTypesLogs `pulumi:"logs"`
}

// Logs data type.
type AwsCloudTrailDataConnectorDataTypesLogs struct {
	// Describe whether this data type connection is enabled or not.
	State string `pulumi:"state"`
}

// The available data types for Amazon Web Services CloudTrail data connector.
type AwsCloudTrailDataConnectorDataTypesResponse struct {
	// Logs data type.
	Logs AwsCloudTrailDataConnectorDataTypesResponseLogs `pulumi:"logs"`
}

// The available data types for Amazon Web Services CloudTrail data connector.
type AwsCloudTrailDataConnectorDataTypesResponseOutput struct{ *pulumi.OutputState }

func (AwsCloudTrailDataConnectorDataTypesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AwsCloudTrailDataConnectorDataTypesResponse)(nil)).Elem()
}

func (o AwsCloudTrailDataConnectorDataTypesResponseOutput) ToAwsCloudTrailDataConnectorDataTypesResponseOutput() AwsCloudTrailDataConnectorDataTypesResponseOutput {
	return o
}

func (o AwsCloudTrailDataConnectorDataTypesResponseOutput) ToAwsCloudTrailDataConnectorDataTypesResponseOutputWithContext(ctx context.Context) AwsCloudTrailDataConnectorDataTypesResponseOutput {
	return o
}

// Logs data type.
func (o AwsCloudTrailDataConnectorDataTypesResponseOutput) Logs() AwsCloudTrailDataConnectorDataTypesResponseLogsOutput {
	return o.ApplyT(func(v AwsCloudTrailDataConnectorDataTypesResponse) AwsCloudTrailDataConnectorDataTypesResponseLogs {
		return v.Logs
	}).(AwsCloudTrailDataConnectorDataTypesResponseLogsOutput)
}

// Logs data type.
type AwsCloudTrailDataConnectorDataTypesResponseLogs struct {
	// Describe whether this data type connection is enabled or not.
	State string `pulumi:"state"`
}

// Logs data type.
type AwsCloudTrailDataConnectorDataTypesResponseLogsOutput struct{ *pulumi.OutputState }

func (AwsCloudTrailDataConnectorDataTypesResponseLogsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AwsCloudTrailDataConnectorDataTypesResponseLogs)(nil)).Elem()
}

func (o AwsCloudTrailDataConnectorDataTypesResponseLogsOutput) ToAwsCloudTrailDataConnectorDataTypesResponseLogsOutput() AwsCloudTrailDataConnectorDataTypesResponseLogsOutput {
	return o
}

func (o AwsCloudTrailDataConnectorDataTypesResponseLogsOutput) ToAwsCloudTrailDataConnectorDataTypesResponseLogsOutputWithContext(ctx context.Context) AwsCloudTrailDataConnectorDataTypesResponseLogsOutput {
	return o
}

// Describe whether this data type connection is enabled or not.
func (o AwsCloudTrailDataConnectorDataTypesResponseLogsOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v AwsCloudTrailDataConnectorDataTypesResponseLogs) string { return v.State }).(pulumi.StringOutput)
}

// The available data types for Amazon Web Services S3 data connector.
type AwsS3DataConnectorDataTypes struct {
	// Logs data type.
	Logs AwsS3DataConnectorDataTypesLogs `pulumi:"logs"`
}

// Logs data type.
type AwsS3DataConnectorDataTypesLogs struct {
	// Describe whether this data type connection is enabled or not.
	State string `pulumi:"state"`
}

// The available data types for Amazon Web Services S3 data connector.
type AwsS3DataConnectorDataTypesResponse struct {
	// Logs data type.
	Logs AwsS3DataConnectorDataTypesResponseLogs `pulumi:"logs"`
}

// The available data types for Amazon Web Services S3 data connector.
type AwsS3DataConnectorDataTypesResponseOutput struct{ *pulumi.OutputState }

func (AwsS3DataConnectorDataTypesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AwsS3DataConnectorDataTypesResponse)(nil)).Elem()
}

func (o AwsS3DataConnectorDataTypesResponseOutput) ToAwsS3DataConnectorDataTypesResponseOutput() AwsS3DataConnectorDataTypesResponseOutput {
	return o
}

func (o AwsS3DataConnectorDataTypesResponseOutput) ToAwsS3DataConnectorDataTypesResponseOutputWithContext(ctx context.Context) AwsS3DataConnectorDataTypesResponseOutput {
	return o
}

// Logs data type.
func (o AwsS3DataConnectorDataTypesResponseOutput) Logs() AwsS3DataConnectorDataTypesResponseLogsOutput {
	return o.ApplyT(func(v AwsS3DataConnectorDataTypesResponse) AwsS3DataConnectorDataTypesResponseLogs { return v.Logs }).(AwsS3DataConnectorDataTypesResponseLogsOutput)
}

// Logs data type.
type AwsS3DataConnectorDataTypesResponseLogs struct {
	// Describe whether this data type connection is enabled or not.
	State string `pulumi:"state"`
}

// Logs data type.
type AwsS3DataConnectorDataTypesResponseLogsOutput struct{ *pulumi.OutputState }

func (AwsS3DataConnectorDataTypesResponseLogsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AwsS3DataConnectorDataTypesResponseLogs)(nil)).Elem()
}

func (o AwsS3DataConnectorDataTypesResponseLogsOutput) ToAwsS3DataConnectorDataTypesResponseLogsOutput() AwsS3DataConnectorDataTypesResponseLogsOutput {
	return o
}

func (o AwsS3DataConnectorDataTypesResponseLogsOutput) ToAwsS3DataConnectorDataTypesResponseLogsOutputWithContext(ctx context.Context) AwsS3DataConnectorDataTypesResponseLogsOutput {
	return o
}

// Describe whether this data type connection is enabled or not.
func (o AwsS3DataConnectorDataTypesResponseLogsOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v AwsS3DataConnectorDataTypesResponseLogs) string { return v.State }).(pulumi.StringOutput)
}

// Represents bookmark timeline item.
type BookmarkTimelineItemResponse struct {
	// The bookmark azure resource id.
	AzureResourceId string `pulumi:"azureResourceId"`
	// Describes a user that created the bookmark
	CreatedBy *UserInfoResponse `pulumi:"createdBy"`
	// The bookmark display name.
	DisplayName *string `pulumi:"displayName"`
	// The bookmark end time.
	EndTimeUtc *string `pulumi:"endTimeUtc"`
	// The bookmark event time.
	EventTime *string `pulumi:"eventTime"`
	// The entity query kind
	// Expected value is 'Bookmark'.
	Kind string `pulumi:"kind"`
	// List of labels relevant to this bookmark
	Labels []string `pulumi:"labels"`
	// The notes of the bookmark
	Notes *string `pulumi:"notes"`
	// The bookmark start time.
	StartTimeUtc *string `pulumi:"startTimeUtc"`
}

// Describe the authentication properties needed to successfully authenticate with the server
type CodelessConnectorPollingAuthProperties struct {
	// A prefix send in the header before the actual token
	ApiKeyIdentifier *string `pulumi:"apiKeyIdentifier"`
	// The header name which the token is sent with
	ApiKeyName *string `pulumi:"apiKeyName"`
	// The authentication type
	AuthType string `pulumi:"authType"`
	// The endpoint used to authorize the user, used in Oauth 2.0 flow
	AuthorizationEndpoint *string `pulumi:"authorizationEndpoint"`
	// The query parameters used in authorization request, used in Oauth 2.0 flow
	AuthorizationEndpointQueryParameters interface{} `pulumi:"authorizationEndpointQueryParameters"`
	// Describes the flow name, for example 'AuthCode' for Oauth 2.0
	FlowName *string `pulumi:"flowName"`
	// Marks if the key should sent in header
	IsApiKeyInPostPayload *string `pulumi:"isApiKeyInPostPayload"`
	// Marks if we should send the client secret in header or payload, used in Oauth 2.0 flow
	IsClientSecretInHeader *bool `pulumi:"isClientSecretInHeader"`
	// The redirect endpoint where we will get the authorization code, used in Oauth 2.0 flow
	RedirectionEndpoint *string `pulumi:"redirectionEndpoint"`
	// The OAuth token scope
	Scope *string `pulumi:"scope"`
	// The endpoint used to issue a token, used in Oauth 2.0 flow
	TokenEndpoint *string `pulumi:"tokenEndpoint"`
	// The query headers used in token request, used in Oauth 2.0 flow
	TokenEndpointHeaders interface{} `pulumi:"tokenEndpointHeaders"`
	// The query parameters used in token request, used in Oauth 2.0 flow
	TokenEndpointQueryParameters interface{} `pulumi:"tokenEndpointQueryParameters"`
}

// Describe the authentication properties needed to successfully authenticate with the server
type CodelessConnectorPollingAuthPropertiesResponse struct {
	// A prefix send in the header before the actual token
	ApiKeyIdentifier *string `pulumi:"apiKeyIdentifier"`
	// The header name which the token is sent with
	ApiKeyName *string `pulumi:"apiKeyName"`
	// The authentication type
	AuthType string `pulumi:"authType"`
	// The endpoint used to authorize the user, used in Oauth 2.0 flow
	AuthorizationEndpoint *string `pulumi:"authorizationEndpoint"`
	// The query parameters used in authorization request, used in Oauth 2.0 flow
	AuthorizationEndpointQueryParameters interface{} `pulumi:"authorizationEndpointQueryParameters"`
	// Describes the flow name, for example 'AuthCode' for Oauth 2.0
	FlowName *string `pulumi:"flowName"`
	// Marks if the key should sent in header
	IsApiKeyInPostPayload *string `pulumi:"isApiKeyInPostPayload"`
	// Marks if we should send the client secret in header or payload, used in Oauth 2.0 flow
	IsClientSecretInHeader *bool `pulumi:"isClientSecretInHeader"`
	// The redirect endpoint where we will get the authorization code, used in Oauth 2.0 flow
	RedirectionEndpoint *string `pulumi:"redirectionEndpoint"`
	// The OAuth token scope
	Scope *string `pulumi:"scope"`
	// The endpoint used to issue a token, used in Oauth 2.0 flow
	TokenEndpoint *string `pulumi:"tokenEndpoint"`
	// The query headers used in token request, used in Oauth 2.0 flow
	TokenEndpointHeaders interface{} `pulumi:"tokenEndpointHeaders"`
	// The query parameters used in token request, used in Oauth 2.0 flow
	TokenEndpointQueryParameters interface{} `pulumi:"tokenEndpointQueryParameters"`
}

// Describe the authentication properties needed to successfully authenticate with the server
type CodelessConnectorPollingAuthPropertiesResponseOutput struct{ *pulumi.OutputState }

func (CodelessConnectorPollingAuthPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CodelessConnectorPollingAuthPropertiesResponse)(nil)).Elem()
}

func (o CodelessConnectorPollingAuthPropertiesResponseOutput) ToCodelessConnectorPollingAuthPropertiesResponseOutput() CodelessConnectorPollingAuthPropertiesResponseOutput {
	return o
}

func (o CodelessConnectorPollingAuthPropertiesResponseOutput) ToCodelessConnectorPollingAuthPropertiesResponseOutputWithContext(ctx context.Context) CodelessConnectorPollingAuthPropertiesResponseOutput {
	return o
}

// A prefix send in the header before the actual token
func (o CodelessConnectorPollingAuthPropertiesResponseOutput) ApiKeyIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CodelessConnectorPollingAuthPropertiesResponse) *string { return v.ApiKeyIdentifier }).(pulumi.StringPtrOutput)
}

// The header name which the token is sent with
func (o CodelessConnectorPollingAuthPropertiesResponseOutput) ApiKeyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CodelessConnectorPollingAuthPropertiesResponse) *string { return v.ApiKeyName }).(pulumi.StringPtrOutput)
}

// The authentication type
func (o CodelessConnectorPollingAuthPropertiesResponseOutput) AuthType() pulumi.StringOutput {
	return o.ApplyT(func(v CodelessConnectorPollingAuthPropertiesResponse) string { return v.AuthType }).(pulumi.StringOutput)
}

// The endpoint used to authorize the user, used in Oauth 2.0 flow
func (o CodelessConnectorPollingAuthPropertiesResponseOutput) AuthorizationEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CodelessConnectorPollingAuthPropertiesResponse) *string { return v.AuthorizationEndpoint }).(pulumi.StringPtrOutput)
}

// The query parameters used in authorization request, used in Oauth 2.0 flow
func (o CodelessConnectorPollingAuthPropertiesResponseOutput) AuthorizationEndpointQueryParameters() pulumi.AnyOutput {
	return o.ApplyT(func(v CodelessConnectorPollingAuthPropertiesResponse) interface{} {
		return v.AuthorizationEndpointQueryParameters
	}).(pulumi.AnyOutput)
}

// Describes the flow name, for example 'AuthCode' for Oauth 2.0
func (o CodelessConnectorPollingAuthPropertiesResponseOutput) FlowName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CodelessConnectorPollingAuthPropertiesResponse) *string { return v.FlowName }).(pulumi.StringPtrOutput)
}

// Marks if the key should sent in header
func (o CodelessConnectorPollingAuthPropertiesResponseOutput) IsApiKeyInPostPayload() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CodelessConnectorPollingAuthPropertiesResponse) *string { return v.IsApiKeyInPostPayload }).(pulumi.StringPtrOutput)
}

// Marks if we should send the client secret in header or payload, used in Oauth 2.0 flow
func (o CodelessConnectorPollingAuthPropertiesResponseOutput) IsClientSecretInHeader() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CodelessConnectorPollingAuthPropertiesResponse) *bool { return v.IsClientSecretInHeader }).(pulumi.BoolPtrOutput)
}

// The redirect endpoint where we will get the authorization code, used in Oauth 2.0 flow
func (o CodelessConnectorPollingAuthPropertiesResponseOutput) RedirectionEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CodelessConnectorPollingAuthPropertiesResponse) *string { return v.RedirectionEndpoint }).(pulumi.StringPtrOutput)
}

// The OAuth token scope
func (o CodelessConnectorPollingAuthPropertiesResponseOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CodelessConnectorPollingAuthPropertiesResponse) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

// The endpoint used to issue a token, used in Oauth 2.0 flow
func (o CodelessConnectorPollingAuthPropertiesResponseOutput) TokenEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CodelessConnectorPollingAuthPropertiesResponse) *string { return v.TokenEndpoint }).(pulumi.StringPtrOutput)
}

// The query headers used in token request, used in Oauth 2.0 flow
func (o CodelessConnectorPollingAuthPropertiesResponseOutput) TokenEndpointHeaders() pulumi.AnyOutput {
	return o.ApplyT(func(v CodelessConnectorPollingAuthPropertiesResponse) interface{} { return v.TokenEndpointHeaders }).(pulumi.AnyOutput)
}

// The query parameters used in token request, used in Oauth 2.0 flow
func (o CodelessConnectorPollingAuthPropertiesResponseOutput) TokenEndpointQueryParameters() pulumi.AnyOutput {
	return o.ApplyT(func(v CodelessConnectorPollingAuthPropertiesResponse) interface{} {
		return v.TokenEndpointQueryParameters
	}).(pulumi.AnyOutput)
}

type CodelessConnectorPollingAuthPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (CodelessConnectorPollingAuthPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CodelessConnectorPollingAuthPropertiesResponse)(nil)).Elem()
}

func (o CodelessConnectorPollingAuthPropertiesResponsePtrOutput) ToCodelessConnectorPollingAuthPropertiesResponsePtrOutput() CodelessConnectorPollingAuthPropertiesResponsePtrOutput {
	return o
}

func (o CodelessConnectorPollingAuthPropertiesResponsePtrOutput) ToCodelessConnectorPollingAuthPropertiesResponsePtrOutputWithContext(ctx context.Context) CodelessConnectorPollingAuthPropertiesResponsePtrOutput {
	return o
}

func (o CodelessConnectorPollingAuthPropertiesResponsePtrOutput) Elem() CodelessConnectorPollingAuthPropertiesResponseOutput {
	return o.ApplyT(func(v *CodelessConnectorPollingAuthPropertiesResponse) CodelessConnectorPollingAuthPropertiesResponse {
		if v != nil {
			return *v
		}
		var ret CodelessConnectorPollingAuthPropertiesResponse
		return ret
	}).(CodelessConnectorPollingAuthPropertiesResponseOutput)
}

// A prefix send in the header before the actual token
func (o CodelessConnectorPollingAuthPropertiesResponsePtrOutput) ApiKeyIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CodelessConnectorPollingAuthPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.ApiKeyIdentifier
	}).(pulumi.StringPtrOutput)
}

// The header name which the token is sent with
func (o CodelessConnectorPollingAuthPropertiesResponsePtrOutput) ApiKeyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CodelessConnectorPollingAuthPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.ApiKeyName
	}).(pulumi.StringPtrOutput)
}

// The authentication type
func (o CodelessConnectorPollingAuthPropertiesResponsePtrOutput) AuthType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CodelessConnectorPollingAuthPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.AuthType
	}).(pulumi.StringPtrOutput)
}

// The endpoint used to authorize the user, used in Oauth 2.0 flow
func (o CodelessConnectorPollingAuthPropertiesResponsePtrOutput) AuthorizationEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CodelessConnectorPollingAuthPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.AuthorizationEndpoint
	}).(pulumi.StringPtrOutput)
}

// The query parameters used in authorization request, used in Oauth 2.0 flow
func (o CodelessConnectorPollingAuthPropertiesResponsePtrOutput) AuthorizationEndpointQueryParameters() pulumi.AnyOutput {
	return o.ApplyT(func(v *CodelessConnectorPollingAuthPropertiesResponse) interface{} {
		if v == nil {
			return nil
		}
		return v.AuthorizationEndpointQueryParameters
	}).(pulumi.AnyOutput)
}

// Describes the flow name, for example 'AuthCode' for Oauth 2.0
func (o CodelessConnectorPollingAuthPropertiesResponsePtrOutput) FlowName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CodelessConnectorPollingAuthPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.FlowName
	}).(pulumi.StringPtrOutput)
}

// Marks if the key should sent in header
func (o CodelessConnectorPollingAuthPropertiesResponsePtrOutput) IsApiKeyInPostPayload() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CodelessConnectorPollingAuthPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.IsApiKeyInPostPayload
	}).(pulumi.StringPtrOutput)
}

// Marks if we should send the client secret in header or payload, used in Oauth 2.0 flow
func (o CodelessConnectorPollingAuthPropertiesResponsePtrOutput) IsClientSecretInHeader() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CodelessConnectorPollingAuthPropertiesResponse) *bool {
		if v == nil {
			return nil
		}
		return v.IsClientSecretInHeader
	}).(pulumi.BoolPtrOutput)
}

// The redirect endpoint where we will get the authorization code, used in Oauth 2.0 flow
func (o CodelessConnectorPollingAuthPropertiesResponsePtrOutput) RedirectionEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CodelessConnectorPollingAuthPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.RedirectionEndpoint
	}).(pulumi.StringPtrOutput)
}

// The OAuth token scope
func (o CodelessConnectorPollingAuthPropertiesResponsePtrOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CodelessConnectorPollingAuthPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.Scope
	}).(pulumi.StringPtrOutput)
}

// The endpoint used to issue a token, used in Oauth 2.0 flow
func (o CodelessConnectorPollingAuthPropertiesResponsePtrOutput) TokenEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CodelessConnectorPollingAuthPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.TokenEndpoint
	}).(pulumi.StringPtrOutput)
}

// The query headers used in token request, used in Oauth 2.0 flow
func (o CodelessConnectorPollingAuthPropertiesResponsePtrOutput) TokenEndpointHeaders() pulumi.AnyOutput {
	return o.ApplyT(func(v *CodelessConnectorPollingAuthPropertiesResponse) interface{} {
		if v == nil {
			return nil
		}
		return v.TokenEndpointHeaders
	}).(pulumi.AnyOutput)
}

// The query parameters used in token request, used in Oauth 2.0 flow
func (o CodelessConnectorPollingAuthPropertiesResponsePtrOutput) TokenEndpointQueryParameters() pulumi.AnyOutput {
	return o.ApplyT(func(v *CodelessConnectorPollingAuthPropertiesResponse) interface{} {
		if v == nil {
			return nil
		}
		return v.TokenEndpointQueryParameters
	}).(pulumi.AnyOutput)
}

// Config to describe the polling config for API poller connector
type CodelessConnectorPollingConfigProperties struct {
	// Describe the authentication type of the poller
	Auth CodelessConnectorPollingAuthProperties `pulumi:"auth"`
	// The poller active status
	IsActive *bool `pulumi:"isActive"`
	// Describe the poll request paging config of the poller
	Paging *CodelessConnectorPollingPagingProperties `pulumi:"paging"`
	// Describe the poll request config parameters of the poller
	Request CodelessConnectorPollingRequestProperties `pulumi:"request"`
	// Describe the response config parameters of the poller
	Response *CodelessConnectorPollingResponseProperties `pulumi:"response"`
}

// Config to describe the polling config for API poller connector
type CodelessConnectorPollingConfigPropertiesResponse struct {
	// Describe the authentication type of the poller
	Auth CodelessConnectorPollingAuthPropertiesResponse `pulumi:"auth"`
	// The poller active status
	IsActive *bool `pulumi:"isActive"`
	// Describe the poll request paging config of the poller
	Paging *CodelessConnectorPollingPagingPropertiesResponse `pulumi:"paging"`
	// Describe the poll request config parameters of the poller
	Request CodelessConnectorPollingRequestPropertiesResponse `pulumi:"request"`
	// Describe the response config parameters of the poller
	Response *CodelessConnectorPollingResponsePropertiesResponse `pulumi:"response"`
}

// Config to describe the polling config for API poller connector
type CodelessConnectorPollingConfigPropertiesResponseOutput struct{ *pulumi.OutputState }

func (CodelessConnectorPollingConfigPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CodelessConnectorPollingConfigPropertiesResponse)(nil)).Elem()
}

func (o CodelessConnectorPollingConfigPropertiesResponseOutput) ToCodelessConnectorPollingConfigPropertiesResponseOutput() CodelessConnectorPollingConfigPropertiesResponseOutput {
	return o
}

func (o CodelessConnectorPollingConfigPropertiesResponseOutput) ToCodelessConnectorPollingConfigPropertiesResponseOutputWithContext(ctx context.Context) CodelessConnectorPollingConfigPropertiesResponseOutput {
	return o
}

// Describe the authentication type of the poller
func (o CodelessConnectorPollingConfigPropertiesResponseOutput) Auth() CodelessConnectorPollingAuthPropertiesResponseOutput {
	return o.ApplyT(func(v CodelessConnectorPollingConfigPropertiesResponse) CodelessConnectorPollingAuthPropertiesResponse {
		return v.Auth
	}).(CodelessConnectorPollingAuthPropertiesResponseOutput)
}

// The poller active status
func (o CodelessConnectorPollingConfigPropertiesResponseOutput) IsActive() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CodelessConnectorPollingConfigPropertiesResponse) *bool { return v.IsActive }).(pulumi.BoolPtrOutput)
}

// Describe the poll request paging config of the poller
func (o CodelessConnectorPollingConfigPropertiesResponseOutput) Paging() CodelessConnectorPollingPagingPropertiesResponsePtrOutput {
	return o.ApplyT(func(v CodelessConnectorPollingConfigPropertiesResponse) *CodelessConnectorPollingPagingPropertiesResponse {
		return v.Paging
	}).(CodelessConnectorPollingPagingPropertiesResponsePtrOutput)
}

// Describe the poll request config parameters of the poller
func (o CodelessConnectorPollingConfigPropertiesResponseOutput) Request() CodelessConnectorPollingRequestPropertiesResponseOutput {
	return o.ApplyT(func(v CodelessConnectorPollingConfigPropertiesResponse) CodelessConnectorPollingRequestPropertiesResponse {
		return v.Request
	}).(CodelessConnectorPollingRequestPropertiesResponseOutput)
}

// Describe the response config parameters of the poller
func (o CodelessConnectorPollingConfigPropertiesResponseOutput) Response() CodelessConnectorPollingResponsePropertiesResponsePtrOutput {
	return o.ApplyT(func(v CodelessConnectorPollingConfigPropertiesResponse) *CodelessConnectorPollingResponsePropertiesResponse {
		return v.Response
	}).(CodelessConnectorPollingResponsePropertiesResponsePtrOutput)
}

type CodelessConnectorPollingConfigPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (CodelessConnectorPollingConfigPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CodelessConnectorPollingConfigPropertiesResponse)(nil)).Elem()
}

func (o CodelessConnectorPollingConfigPropertiesResponsePtrOutput) ToCodelessConnectorPollingConfigPropertiesResponsePtrOutput() CodelessConnectorPollingConfigPropertiesResponsePtrOutput {
	return o
}

func (o CodelessConnectorPollingConfigPropertiesResponsePtrOutput) ToCodelessConnectorPollingConfigPropertiesResponsePtrOutputWithContext(ctx context.Context) CodelessConnectorPollingConfigPropertiesResponsePtrOutput {
	return o
}

func (o CodelessConnectorPollingConfigPropertiesResponsePtrOutput) Elem() CodelessConnectorPollingConfigPropertiesResponseOutput {
	return o.ApplyT(func(v *CodelessConnectorPollingConfigPropertiesResponse) CodelessConnectorPollingConfigPropertiesResponse {
		if v != nil {
			return *v
		}
		var ret CodelessConnectorPollingConfigPropertiesResponse
		return ret
	}).(CodelessConnectorPollingConfigPropertiesResponseOutput)
}

// Describe the authentication type of the poller
func (o CodelessConnectorPollingConfigPropertiesResponsePtrOutput) Auth() CodelessConnectorPollingAuthPropertiesResponsePtrOutput {
	return o.ApplyT(func(v *CodelessConnectorPollingConfigPropertiesResponse) *CodelessConnectorPollingAuthPropertiesResponse {
		if v == nil {
			return nil
		}
		return &v.Auth
	}).(CodelessConnectorPollingAuthPropertiesResponsePtrOutput)
}

// The poller active status
func (o CodelessConnectorPollingConfigPropertiesResponsePtrOutput) IsActive() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CodelessConnectorPollingConfigPropertiesResponse) *bool {
		if v == nil {
			return nil
		}
		return v.IsActive
	}).(pulumi.BoolPtrOutput)
}

// Describe the poll request paging config of the poller
func (o CodelessConnectorPollingConfigPropertiesResponsePtrOutput) Paging() CodelessConnectorPollingPagingPropertiesResponsePtrOutput {
	return o.ApplyT(func(v *CodelessConnectorPollingConfigPropertiesResponse) *CodelessConnectorPollingPagingPropertiesResponse {
		if v == nil {
			return nil
		}
		return v.Paging
	}).(CodelessConnectorPollingPagingPropertiesResponsePtrOutput)
}

// Describe the poll request config parameters of the poller
func (o CodelessConnectorPollingConfigPropertiesResponsePtrOutput) Request() CodelessConnectorPollingRequestPropertiesResponsePtrOutput {
	return o.ApplyT(func(v *CodelessConnectorPollingConfigPropertiesResponse) *CodelessConnectorPollingRequestPropertiesResponse {
		if v == nil {
			return nil
		}
		return &v.Request
	}).(CodelessConnectorPollingRequestPropertiesResponsePtrOutput)
}

// Describe the response config parameters of the poller
func (o CodelessConnectorPollingConfigPropertiesResponsePtrOutput) Response() CodelessConnectorPollingResponsePropertiesResponsePtrOutput {
	return o.ApplyT(func(v *CodelessConnectorPollingConfigPropertiesResponse) *CodelessConnectorPollingResponsePropertiesResponse {
		if v == nil {
			return nil
		}
		return v.Response
	}).(CodelessConnectorPollingResponsePropertiesResponsePtrOutput)
}

// Describe the properties needed to make a pagination call
type CodelessConnectorPollingPagingProperties struct {
	// Defines the name of a next page attribute
	NextPageParaName *string `pulumi:"nextPageParaName"`
	// Defines the path to a next page token JSON
	NextPageTokenJsonPath *string `pulumi:"nextPageTokenJsonPath"`
	// Defines the path to a page count attribute
	PageCountAttributePath *string `pulumi:"pageCountAttributePath"`
	// Defines the paging size
	PageSize *int `pulumi:"pageSize"`
	// Defines the name of the page size parameter
	PageSizeParaName *string `pulumi:"pageSizeParaName"`
	// Defines the path to a paging time stamp attribute
	PageTimeStampAttributePath *string `pulumi:"pageTimeStampAttributePath"`
	// Defines the path to a page total count attribute
	PageTotalCountAttributePath *string `pulumi:"pageTotalCountAttributePath"`
	// Describes the type. could be 'None', 'PageToken', 'PageCount', 'TimeStamp'
	PagingType string `pulumi:"pagingType"`
	// Determines whether to search for the latest time stamp in the events list
	SearchTheLatestTimeStampFromEventsList *string `pulumi:"searchTheLatestTimeStampFromEventsList"`
}

// Describe the properties needed to make a pagination call
type CodelessConnectorPollingPagingPropertiesResponse struct {
	// Defines the name of a next page attribute
	NextPageParaName *string `pulumi:"nextPageParaName"`
	// Defines the path to a next page token JSON
	NextPageTokenJsonPath *string `pulumi:"nextPageTokenJsonPath"`
	// Defines the path to a page count attribute
	PageCountAttributePath *string `pulumi:"pageCountAttributePath"`
	// Defines the paging size
	PageSize *int `pulumi:"pageSize"`
	// Defines the name of the page size parameter
	PageSizeParaName *string `pulumi:"pageSizeParaName"`
	// Defines the path to a paging time stamp attribute
	PageTimeStampAttributePath *string `pulumi:"pageTimeStampAttributePath"`
	// Defines the path to a page total count attribute
	PageTotalCountAttributePath *string `pulumi:"pageTotalCountAttributePath"`
	// Describes the type. could be 'None', 'PageToken', 'PageCount', 'TimeStamp'
	PagingType string `pulumi:"pagingType"`
	// Determines whether to search for the latest time stamp in the events list
	SearchTheLatestTimeStampFromEventsList *string `pulumi:"searchTheLatestTimeStampFromEventsList"`
}

// Describe the properties needed to make a pagination call
type CodelessConnectorPollingPagingPropertiesResponseOutput struct{ *pulumi.OutputState }

func (CodelessConnectorPollingPagingPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CodelessConnectorPollingPagingPropertiesResponse)(nil)).Elem()
}

func (o CodelessConnectorPollingPagingPropertiesResponseOutput) ToCodelessConnectorPollingPagingPropertiesResponseOutput() CodelessConnectorPollingPagingPropertiesResponseOutput {
	return o
}

func (o CodelessConnectorPollingPagingPropertiesResponseOutput) ToCodelessConnectorPollingPagingPropertiesResponseOutputWithContext(ctx context.Context) CodelessConnectorPollingPagingPropertiesResponseOutput {
	return o
}

// Defines the name of a next page attribute
func (o CodelessConnectorPollingPagingPropertiesResponseOutput) NextPageParaName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CodelessConnectorPollingPagingPropertiesResponse) *string { return v.NextPageParaName }).(pulumi.StringPtrOutput)
}

// Defines the path to a next page token JSON
func (o CodelessConnectorPollingPagingPropertiesResponseOutput) NextPageTokenJsonPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CodelessConnectorPollingPagingPropertiesResponse) *string { return v.NextPageTokenJsonPath }).(pulumi.StringPtrOutput)
}

// Defines the path to a page count attribute
func (o CodelessConnectorPollingPagingPropertiesResponseOutput) PageCountAttributePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CodelessConnectorPollingPagingPropertiesResponse) *string { return v.PageCountAttributePath }).(pulumi.StringPtrOutput)
}

// Defines the paging size
func (o CodelessConnectorPollingPagingPropertiesResponseOutput) PageSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v CodelessConnectorPollingPagingPropertiesResponse) *int { return v.PageSize }).(pulumi.IntPtrOutput)
}

// Defines the name of the page size parameter
func (o CodelessConnectorPollingPagingPropertiesResponseOutput) PageSizeParaName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CodelessConnectorPollingPagingPropertiesResponse) *string { return v.PageSizeParaName }).(pulumi.StringPtrOutput)
}

// Defines the path to a paging time stamp attribute
func (o CodelessConnectorPollingPagingPropertiesResponseOutput) PageTimeStampAttributePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CodelessConnectorPollingPagingPropertiesResponse) *string { return v.PageTimeStampAttributePath }).(pulumi.StringPtrOutput)
}

// Defines the path to a page total count attribute
func (o CodelessConnectorPollingPagingPropertiesResponseOutput) PageTotalCountAttributePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CodelessConnectorPollingPagingPropertiesResponse) *string { return v.PageTotalCountAttributePath }).(pulumi.StringPtrOutput)
}

// Describes the type. could be 'None', 'PageToken', 'PageCount', 'TimeStamp'
func (o CodelessConnectorPollingPagingPropertiesResponseOutput) PagingType() pulumi.StringOutput {
	return o.ApplyT(func(v CodelessConnectorPollingPagingPropertiesResponse) string { return v.PagingType }).(pulumi.StringOutput)
}

// Determines whether to search for the latest time stamp in the events list
func (o CodelessConnectorPollingPagingPropertiesResponseOutput) SearchTheLatestTimeStampFromEventsList() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CodelessConnectorPollingPagingPropertiesResponse) *string {
		return v.SearchTheLatestTimeStampFromEventsList
	}).(pulumi.StringPtrOutput)
}

type CodelessConnectorPollingPagingPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (CodelessConnectorPollingPagingPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CodelessConnectorPollingPagingPropertiesResponse)(nil)).Elem()
}

func (o CodelessConnectorPollingPagingPropertiesResponsePtrOutput) ToCodelessConnectorPollingPagingPropertiesResponsePtrOutput() CodelessConnectorPollingPagingPropertiesResponsePtrOutput {
	return o
}

func (o CodelessConnectorPollingPagingPropertiesResponsePtrOutput) ToCodelessConnectorPollingPagingPropertiesResponsePtrOutputWithContext(ctx context.Context) CodelessConnectorPollingPagingPropertiesResponsePtrOutput {
	return o
}

func (o CodelessConnectorPollingPagingPropertiesResponsePtrOutput) Elem() CodelessConnectorPollingPagingPropertiesResponseOutput {
	return o.ApplyT(func(v *CodelessConnectorPollingPagingPropertiesResponse) CodelessConnectorPollingPagingPropertiesResponse {
		if v != nil {
			return *v
		}
		var ret CodelessConnectorPollingPagingPropertiesResponse
		return ret
	}).(CodelessConnectorPollingPagingPropertiesResponseOutput)
}

// Defines the name of a next page attribute
func (o CodelessConnectorPollingPagingPropertiesResponsePtrOutput) NextPageParaName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CodelessConnectorPollingPagingPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.NextPageParaName
	}).(pulumi.StringPtrOutput)
}

// Defines the path to a next page token JSON
func (o CodelessConnectorPollingPagingPropertiesResponsePtrOutput) NextPageTokenJsonPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CodelessConnectorPollingPagingPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.NextPageTokenJsonPath
	}).(pulumi.StringPtrOutput)
}

// Defines the path to a page count attribute
func (o CodelessConnectorPollingPagingPropertiesResponsePtrOutput) PageCountAttributePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CodelessConnectorPollingPagingPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.PageCountAttributePath
	}).(pulumi.StringPtrOutput)
}

// Defines the paging size
func (o CodelessConnectorPollingPagingPropertiesResponsePtrOutput) PageSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CodelessConnectorPollingPagingPropertiesResponse) *int {
		if v == nil {
			return nil
		}
		return v.PageSize
	}).(pulumi.IntPtrOutput)
}

// Defines the name of the page size parameter
func (o CodelessConnectorPollingPagingPropertiesResponsePtrOutput) PageSizeParaName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CodelessConnectorPollingPagingPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.PageSizeParaName
	}).(pulumi.StringPtrOutput)
}

// Defines the path to a paging time stamp attribute
func (o CodelessConnectorPollingPagingPropertiesResponsePtrOutput) PageTimeStampAttributePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CodelessConnectorPollingPagingPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.PageTimeStampAttributePath
	}).(pulumi.StringPtrOutput)
}

// Defines the path to a page total count attribute
func (o CodelessConnectorPollingPagingPropertiesResponsePtrOutput) PageTotalCountAttributePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CodelessConnectorPollingPagingPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.PageTotalCountAttributePath
	}).(pulumi.StringPtrOutput)
}

// Describes the type. could be 'None', 'PageToken', 'PageCount', 'TimeStamp'
func (o CodelessConnectorPollingPagingPropertiesResponsePtrOutput) PagingType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CodelessConnectorPollingPagingPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.PagingType
	}).(pulumi.StringPtrOutput)
}

// Determines whether to search for the latest time stamp in the events list
func (o CodelessConnectorPollingPagingPropertiesResponsePtrOutput) SearchTheLatestTimeStampFromEventsList() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CodelessConnectorPollingPagingPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.SearchTheLatestTimeStampFromEventsList
	}).(pulumi.StringPtrOutput)
}

// Describe the request properties needed to successfully pull from the server
type CodelessConnectorPollingRequestProperties struct {
	// Describe the endpoint we should pull the data from
	ApiEndpoint string `pulumi:"apiEndpoint"`
	// This will be used the query events from the end of the time window
	EndTimeAttributeName *string `pulumi:"endTimeAttributeName"`
	// Describe the headers sent in the poll request
	Headers interface{} `pulumi:"headers"`
	// The http method type we will use in the poll request, GET or POST
	HttpMethod string `pulumi:"httpMethod"`
	// Describe the query parameters sent in the poll request
	QueryParameters interface{} `pulumi:"queryParameters"`
	// For advanced scenarios for example user name/password embedded in nested JSON payload
	QueryParametersTemplate *string `pulumi:"queryParametersTemplate"`
	// The time format will be used the query events in a specific window
	QueryTimeFormat string `pulumi:"queryTimeFormat"`
	// The window interval we will use the pull the data
	QueryWindowInMin int `pulumi:"queryWindowInMin"`
	// Defines the rate limit QPS
	RateLimitQps *int `pulumi:"rateLimitQps"`
	// Describe the amount of time we should try and poll the data in case of failure
	RetryCount *int `pulumi:"retryCount"`
	// This will be used the query events from a start of the time window
	StartTimeAttributeName *string `pulumi:"startTimeAttributeName"`
	// The number of seconds we will consider as a request timeout
	TimeoutInSeconds *int `pulumi:"timeoutInSeconds"`
}

// Describe the request properties needed to successfully pull from the server
type CodelessConnectorPollingRequestPropertiesResponse struct {
	// Describe the endpoint we should pull the data from
	ApiEndpoint string `pulumi:"apiEndpoint"`
	// This will be used the query events from the end of the time window
	EndTimeAttributeName *string `pulumi:"endTimeAttributeName"`
	// Describe the headers sent in the poll request
	Headers interface{} `pulumi:"headers"`
	// The http method type we will use in the poll request, GET or POST
	HttpMethod string `pulumi:"httpMethod"`
	// Describe the query parameters sent in the poll request
	QueryParameters interface{} `pulumi:"queryParameters"`
	// For advanced scenarios for example user name/password embedded in nested JSON payload
	QueryParametersTemplate *string `pulumi:"queryParametersTemplate"`
	// The time format will be used the query events in a specific window
	QueryTimeFormat string `pulumi:"queryTimeFormat"`
	// The window interval we will use the pull the data
	QueryWindowInMin int `pulumi:"queryWindowInMin"`
	// Defines the rate limit QPS
	RateLimitQps *int `pulumi:"rateLimitQps"`
	// Describe the amount of time we should try and poll the data in case of failure
	RetryCount *int `pulumi:"retryCount"`
	// This will be used the query events from a start of the time window
	StartTimeAttributeName *string `pulumi:"startTimeAttributeName"`
	// The number of seconds we will consider as a request timeout
	TimeoutInSeconds *int `pulumi:"timeoutInSeconds"`
}

// Describe the request properties needed to successfully pull from the server
type CodelessConnectorPollingRequestPropertiesResponseOutput struct{ *pulumi.OutputState }

func (CodelessConnectorPollingRequestPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CodelessConnectorPollingRequestPropertiesResponse)(nil)).Elem()
}

func (o CodelessConnectorPollingRequestPropertiesResponseOutput) ToCodelessConnectorPollingRequestPropertiesResponseOutput() CodelessConnectorPollingRequestPropertiesResponseOutput {
	return o
}

func (o CodelessConnectorPollingRequestPropertiesResponseOutput) ToCodelessConnectorPollingRequestPropertiesResponseOutputWithContext(ctx context.Context) CodelessConnectorPollingRequestPropertiesResponseOutput {
	return o
}

// Describe the endpoint we should pull the data from
func (o CodelessConnectorPollingRequestPropertiesResponseOutput) ApiEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v CodelessConnectorPollingRequestPropertiesResponse) string { return v.ApiEndpoint }).(pulumi.StringOutput)
}

// This will be used the query events from the end of the time window
func (o CodelessConnectorPollingRequestPropertiesResponseOutput) EndTimeAttributeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CodelessConnectorPollingRequestPropertiesResponse) *string { return v.EndTimeAttributeName }).(pulumi.StringPtrOutput)
}

// Describe the headers sent in the poll request
func (o CodelessConnectorPollingRequestPropertiesResponseOutput) Headers() pulumi.AnyOutput {
	return o.ApplyT(func(v CodelessConnectorPollingRequestPropertiesResponse) interface{} { return v.Headers }).(pulumi.AnyOutput)
}

// The http method type we will use in the poll request, GET or POST
func (o CodelessConnectorPollingRequestPropertiesResponseOutput) HttpMethod() pulumi.StringOutput {
	return o.ApplyT(func(v CodelessConnectorPollingRequestPropertiesResponse) string { return v.HttpMethod }).(pulumi.StringOutput)
}

// Describe the query parameters sent in the poll request
func (o CodelessConnectorPollingRequestPropertiesResponseOutput) QueryParameters() pulumi.AnyOutput {
	return o.ApplyT(func(v CodelessConnectorPollingRequestPropertiesResponse) interface{} { return v.QueryParameters }).(pulumi.AnyOutput)
}

// For advanced scenarios for example user name/password embedded in nested JSON payload
func (o CodelessConnectorPollingRequestPropertiesResponseOutput) QueryParametersTemplate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CodelessConnectorPollingRequestPropertiesResponse) *string { return v.QueryParametersTemplate }).(pulumi.StringPtrOutput)
}

// The time format will be used the query events in a specific window
func (o CodelessConnectorPollingRequestPropertiesResponseOutput) QueryTimeFormat() pulumi.StringOutput {
	return o.ApplyT(func(v CodelessConnectorPollingRequestPropertiesResponse) string { return v.QueryTimeFormat }).(pulumi.StringOutput)
}

// The window interval we will use the pull the data
func (o CodelessConnectorPollingRequestPropertiesResponseOutput) QueryWindowInMin() pulumi.IntOutput {
	return o.ApplyT(func(v CodelessConnectorPollingRequestPropertiesResponse) int { return v.QueryWindowInMin }).(pulumi.IntOutput)
}

// Defines the rate limit QPS
func (o CodelessConnectorPollingRequestPropertiesResponseOutput) RateLimitQps() pulumi.IntPtrOutput {
	return o.ApplyT(func(v CodelessConnectorPollingRequestPropertiesResponse) *int { return v.RateLimitQps }).(pulumi.IntPtrOutput)
}

// Describe the amount of time we should try and poll the data in case of failure
func (o CodelessConnectorPollingRequestPropertiesResponseOutput) RetryCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v CodelessConnectorPollingRequestPropertiesResponse) *int { return v.RetryCount }).(pulumi.IntPtrOutput)
}

// This will be used the query events from a start of the time window
func (o CodelessConnectorPollingRequestPropertiesResponseOutput) StartTimeAttributeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CodelessConnectorPollingRequestPropertiesResponse) *string { return v.StartTimeAttributeName }).(pulumi.StringPtrOutput)
}

// The number of seconds we will consider as a request timeout
func (o CodelessConnectorPollingRequestPropertiesResponseOutput) TimeoutInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v CodelessConnectorPollingRequestPropertiesResponse) *int { return v.TimeoutInSeconds }).(pulumi.IntPtrOutput)
}

type CodelessConnectorPollingRequestPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (CodelessConnectorPollingRequestPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CodelessConnectorPollingRequestPropertiesResponse)(nil)).Elem()
}

func (o CodelessConnectorPollingRequestPropertiesResponsePtrOutput) ToCodelessConnectorPollingRequestPropertiesResponsePtrOutput() CodelessConnectorPollingRequestPropertiesResponsePtrOutput {
	return o
}

func (o CodelessConnectorPollingRequestPropertiesResponsePtrOutput) ToCodelessConnectorPollingRequestPropertiesResponsePtrOutputWithContext(ctx context.Context) CodelessConnectorPollingRequestPropertiesResponsePtrOutput {
	return o
}

func (o CodelessConnectorPollingRequestPropertiesResponsePtrOutput) Elem() CodelessConnectorPollingRequestPropertiesResponseOutput {
	return o.ApplyT(func(v *CodelessConnectorPollingRequestPropertiesResponse) CodelessConnectorPollingRequestPropertiesResponse {
		if v != nil {
			return *v
		}
		var ret CodelessConnectorPollingRequestPropertiesResponse
		return ret
	}).(CodelessConnectorPollingRequestPropertiesResponseOutput)
}

// Describe the endpoint we should pull the data from
func (o CodelessConnectorPollingRequestPropertiesResponsePtrOutput) ApiEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CodelessConnectorPollingRequestPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ApiEndpoint
	}).(pulumi.StringPtrOutput)
}

// This will be used the query events from the end of the time window
func (o CodelessConnectorPollingRequestPropertiesResponsePtrOutput) EndTimeAttributeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CodelessConnectorPollingRequestPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.EndTimeAttributeName
	}).(pulumi.StringPtrOutput)
}

// Describe the headers sent in the poll request
func (o CodelessConnectorPollingRequestPropertiesResponsePtrOutput) Headers() pulumi.AnyOutput {
	return o.ApplyT(func(v *CodelessConnectorPollingRequestPropertiesResponse) interface{} {
		if v == nil {
			return nil
		}
		return v.Headers
	}).(pulumi.AnyOutput)
}

// The http method type we will use in the poll request, GET or POST
func (o CodelessConnectorPollingRequestPropertiesResponsePtrOutput) HttpMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CodelessConnectorPollingRequestPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.HttpMethod
	}).(pulumi.StringPtrOutput)
}

// Describe the query parameters sent in the poll request
func (o CodelessConnectorPollingRequestPropertiesResponsePtrOutput) QueryParameters() pulumi.AnyOutput {
	return o.ApplyT(func(v *CodelessConnectorPollingRequestPropertiesResponse) interface{} {
		if v == nil {
			return nil
		}
		return v.QueryParameters
	}).(pulumi.AnyOutput)
}

// For advanced scenarios for example user name/password embedded in nested JSON payload
func (o CodelessConnectorPollingRequestPropertiesResponsePtrOutput) QueryParametersTemplate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CodelessConnectorPollingRequestPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.QueryParametersTemplate
	}).(pulumi.StringPtrOutput)
}

// The time format will be used the query events in a specific window
func (o CodelessConnectorPollingRequestPropertiesResponsePtrOutput) QueryTimeFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CodelessConnectorPollingRequestPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.QueryTimeFormat
	}).(pulumi.StringPtrOutput)
}

// The window interval we will use the pull the data
func (o CodelessConnectorPollingRequestPropertiesResponsePtrOutput) QueryWindowInMin() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CodelessConnectorPollingRequestPropertiesResponse) *int {
		if v == nil {
			return nil
		}
		return &v.QueryWindowInMin
	}).(pulumi.IntPtrOutput)
}

// Defines the rate limit QPS
func (o CodelessConnectorPollingRequestPropertiesResponsePtrOutput) RateLimitQps() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CodelessConnectorPollingRequestPropertiesResponse) *int {
		if v == nil {
			return nil
		}
		return v.RateLimitQps
	}).(pulumi.IntPtrOutput)
}

// Describe the amount of time we should try and poll the data in case of failure
func (o CodelessConnectorPollingRequestPropertiesResponsePtrOutput) RetryCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CodelessConnectorPollingRequestPropertiesResponse) *int {
		if v == nil {
			return nil
		}
		return v.RetryCount
	}).(pulumi.IntPtrOutput)
}

// This will be used the query events from a start of the time window
func (o CodelessConnectorPollingRequestPropertiesResponsePtrOutput) StartTimeAttributeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CodelessConnectorPollingRequestPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.StartTimeAttributeName
	}).(pulumi.StringPtrOutput)
}

// The number of seconds we will consider as a request timeout
func (o CodelessConnectorPollingRequestPropertiesResponsePtrOutput) TimeoutInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CodelessConnectorPollingRequestPropertiesResponse) *int {
		if v == nil {
			return nil
		}
		return v.TimeoutInSeconds
	}).(pulumi.IntPtrOutput)
}

// Describes the response from the external server
type CodelessConnectorPollingResponseProperties struct {
	// Describes the path we should extract the data in the response
	EventsJsonPaths []string `pulumi:"eventsJsonPaths"`
	// Describes if the data in the response is Gzip
	IsGzipCompressed *bool `pulumi:"isGzipCompressed"`
	// Describes the path we should extract the status code in the response
	SuccessStatusJsonPath *string `pulumi:"successStatusJsonPath"`
	// Describes the path we should extract the status value in the response
	SuccessStatusValue *string `pulumi:"successStatusValue"`
}

// Describes the response from the external server
type CodelessConnectorPollingResponsePropertiesResponse struct {
	// Describes the path we should extract the data in the response
	EventsJsonPaths []string `pulumi:"eventsJsonPaths"`
	// Describes if the data in the response is Gzip
	IsGzipCompressed *bool `pulumi:"isGzipCompressed"`
	// Describes the path we should extract the status code in the response
	SuccessStatusJsonPath *string `pulumi:"successStatusJsonPath"`
	// Describes the path we should extract the status value in the response
	SuccessStatusValue *string `pulumi:"successStatusValue"`
}

// Describes the response from the external server
type CodelessConnectorPollingResponsePropertiesResponseOutput struct{ *pulumi.OutputState }

func (CodelessConnectorPollingResponsePropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CodelessConnectorPollingResponsePropertiesResponse)(nil)).Elem()
}

func (o CodelessConnectorPollingResponsePropertiesResponseOutput) ToCodelessConnectorPollingResponsePropertiesResponseOutput() CodelessConnectorPollingResponsePropertiesResponseOutput {
	return o
}

func (o CodelessConnectorPollingResponsePropertiesResponseOutput) ToCodelessConnectorPollingResponsePropertiesResponseOutputWithContext(ctx context.Context) CodelessConnectorPollingResponsePropertiesResponseOutput {
	return o
}

// Describes the path we should extract the data in the response
func (o CodelessConnectorPollingResponsePropertiesResponseOutput) EventsJsonPaths() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CodelessConnectorPollingResponsePropertiesResponse) []string { return v.EventsJsonPaths }).(pulumi.StringArrayOutput)
}

// Describes if the data in the response is Gzip
func (o CodelessConnectorPollingResponsePropertiesResponseOutput) IsGzipCompressed() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CodelessConnectorPollingResponsePropertiesResponse) *bool { return v.IsGzipCompressed }).(pulumi.BoolPtrOutput)
}

// Describes the path we should extract the status code in the response
func (o CodelessConnectorPollingResponsePropertiesResponseOutput) SuccessStatusJsonPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CodelessConnectorPollingResponsePropertiesResponse) *string { return v.SuccessStatusJsonPath }).(pulumi.StringPtrOutput)
}

// Describes the path we should extract the status value in the response
func (o CodelessConnectorPollingResponsePropertiesResponseOutput) SuccessStatusValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CodelessConnectorPollingResponsePropertiesResponse) *string { return v.SuccessStatusValue }).(pulumi.StringPtrOutput)
}

type CodelessConnectorPollingResponsePropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (CodelessConnectorPollingResponsePropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CodelessConnectorPollingResponsePropertiesResponse)(nil)).Elem()
}

func (o CodelessConnectorPollingResponsePropertiesResponsePtrOutput) ToCodelessConnectorPollingResponsePropertiesResponsePtrOutput() CodelessConnectorPollingResponsePropertiesResponsePtrOutput {
	return o
}

func (o CodelessConnectorPollingResponsePropertiesResponsePtrOutput) ToCodelessConnectorPollingResponsePropertiesResponsePtrOutputWithContext(ctx context.Context) CodelessConnectorPollingResponsePropertiesResponsePtrOutput {
	return o
}

func (o CodelessConnectorPollingResponsePropertiesResponsePtrOutput) Elem() CodelessConnectorPollingResponsePropertiesResponseOutput {
	return o.ApplyT(func(v *CodelessConnectorPollingResponsePropertiesResponse) CodelessConnectorPollingResponsePropertiesResponse {
		if v != nil {
			return *v
		}
		var ret CodelessConnectorPollingResponsePropertiesResponse
		return ret
	}).(CodelessConnectorPollingResponsePropertiesResponseOutput)
}

// Describes the path we should extract the data in the response
func (o CodelessConnectorPollingResponsePropertiesResponsePtrOutput) EventsJsonPaths() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *CodelessConnectorPollingResponsePropertiesResponse) []string {
		if v == nil {
			return nil
		}
		return v.EventsJsonPaths
	}).(pulumi.StringArrayOutput)
}

// Describes if the data in the response is Gzip
func (o CodelessConnectorPollingResponsePropertiesResponsePtrOutput) IsGzipCompressed() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CodelessConnectorPollingResponsePropertiesResponse) *bool {
		if v == nil {
			return nil
		}
		return v.IsGzipCompressed
	}).(pulumi.BoolPtrOutput)
}

// Describes the path we should extract the status code in the response
func (o CodelessConnectorPollingResponsePropertiesResponsePtrOutput) SuccessStatusJsonPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CodelessConnectorPollingResponsePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.SuccessStatusJsonPath
	}).(pulumi.StringPtrOutput)
}

// Describes the path we should extract the status value in the response
func (o CodelessConnectorPollingResponsePropertiesResponsePtrOutput) SuccessStatusValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CodelessConnectorPollingResponsePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.SuccessStatusValue
	}).(pulumi.StringPtrOutput)
}

// Config to describe the instructions blade
type CodelessUiConnectorConfigProperties struct {
	// Connector Availability Status
	Availability Availability `pulumi:"availability"`
	// Define the way the connector check connectivity
	ConnectivityCriteria []CodelessUiConnectorConfigPropertiesConnectivityCriteria `pulumi:"connectivityCriteria"`
	// An optional custom image to be used when displaying the connector within Azure Sentinel's connector's gallery
	CustomImage *string `pulumi:"customImage"`
	// Data types to check for last data received
	DataTypes []CodelessUiConnectorConfigPropertiesDataTypes `pulumi:"dataTypes"`
	// Connector description
	DescriptionMarkdown string `pulumi:"descriptionMarkdown"`
	// The graph query to show the current data status
	GraphQueries []CodelessUiConnectorConfigPropertiesGraphQueries `pulumi:"graphQueries"`
	// Name of the table the connector will insert the data to
	GraphQueriesTableName string `pulumi:"graphQueriesTableName"`
	// Instruction steps to enable the connector
	InstructionSteps []CodelessUiConnectorConfigPropertiesInstructionSteps `pulumi:"instructionSteps"`
	// Permissions required for the connector
	Permissions Permissions `pulumi:"permissions"`
	// Connector publisher name
	Publisher string `pulumi:"publisher"`
	// The sample queries for the connector
	SampleQueries []CodelessUiConnectorConfigPropertiesSampleQueries `pulumi:"sampleQueries"`
	// Connector blade title
	Title string `pulumi:"title"`
}

type CodelessUiConnectorConfigPropertiesConnectivityCriteria struct {
	// type of connectivity
	Type *string `pulumi:"type"`
	// Queries for checking connectivity
	Value []string `pulumi:"value"`
}

type CodelessUiConnectorConfigPropertiesDataTypes struct {
	// Query for indicate last data received
	LastDataReceivedQuery *string `pulumi:"lastDataReceivedQuery"`
	// Name of the data type to show in the graph. can be use with {{graphQueriesTableName}} placeholder
	Name *string `pulumi:"name"`
}

type CodelessUiConnectorConfigPropertiesGraphQueries struct {
	// The base query for the graph
	BaseQuery *string `pulumi:"baseQuery"`
	// The legend for the graph
	Legend *string `pulumi:"legend"`
	// the metric that the query is checking
	MetricName *string `pulumi:"metricName"`
}

type CodelessUiConnectorConfigPropertiesInstructionSteps struct {
	// Instruction step description
	Description *string `pulumi:"description"`
	// Instruction step details
	Instructions []InstructionStepsInstructions `pulumi:"instructions"`
	// Instruction step title
	Title *string `pulumi:"title"`
}

// Config to describe the instructions blade
type CodelessUiConnectorConfigPropertiesResponse struct {
	// Connector Availability Status
	Availability AvailabilityResponse `pulumi:"availability"`
	// Define the way the connector check connectivity
	ConnectivityCriteria []CodelessUiConnectorConfigPropertiesResponseConnectivityCriteria `pulumi:"connectivityCriteria"`
	// An optional custom image to be used when displaying the connector within Azure Sentinel's connector's gallery
	CustomImage *string `pulumi:"customImage"`
	// Data types to check for last data received
	DataTypes []CodelessUiConnectorConfigPropertiesResponseDataTypes `pulumi:"dataTypes"`
	// Connector description
	DescriptionMarkdown string `pulumi:"descriptionMarkdown"`
	// The graph query to show the current data status
	GraphQueries []CodelessUiConnectorConfigPropertiesResponseGraphQueries `pulumi:"graphQueries"`
	// Name of the table the connector will insert the data to
	GraphQueriesTableName string `pulumi:"graphQueriesTableName"`
	// Instruction steps to enable the connector
	InstructionSteps []CodelessUiConnectorConfigPropertiesResponseInstructionSteps `pulumi:"instructionSteps"`
	// Permissions required for the connector
	Permissions PermissionsResponse `pulumi:"permissions"`
	// Connector publisher name
	Publisher string `pulumi:"publisher"`
	// The sample queries for the connector
	SampleQueries []CodelessUiConnectorConfigPropertiesResponseSampleQueries `pulumi:"sampleQueries"`
	// Connector blade title
	Title string `pulumi:"title"`
}

// Config to describe the instructions blade
type CodelessUiConnectorConfigPropertiesResponseOutput struct{ *pulumi.OutputState }

func (CodelessUiConnectorConfigPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CodelessUiConnectorConfigPropertiesResponse)(nil)).Elem()
}

func (o CodelessUiConnectorConfigPropertiesResponseOutput) ToCodelessUiConnectorConfigPropertiesResponseOutput() CodelessUiConnectorConfigPropertiesResponseOutput {
	return o
}

func (o CodelessUiConnectorConfigPropertiesResponseOutput) ToCodelessUiConnectorConfigPropertiesResponseOutputWithContext(ctx context.Context) CodelessUiConnectorConfigPropertiesResponseOutput {
	return o
}

// Connector Availability Status
func (o CodelessUiConnectorConfigPropertiesResponseOutput) Availability() AvailabilityResponseOutput {
	return o.ApplyT(func(v CodelessUiConnectorConfigPropertiesResponse) AvailabilityResponse { return v.Availability }).(AvailabilityResponseOutput)
}

// Define the way the connector check connectivity
func (o CodelessUiConnectorConfigPropertiesResponseOutput) ConnectivityCriteria() CodelessUiConnectorConfigPropertiesResponseConnectivityCriteriaArrayOutput {
	return o.ApplyT(func(v CodelessUiConnectorConfigPropertiesResponse) []CodelessUiConnectorConfigPropertiesResponseConnectivityCriteria {
		return v.ConnectivityCriteria
	}).(CodelessUiConnectorConfigPropertiesResponseConnectivityCriteriaArrayOutput)
}

// An optional custom image to be used when displaying the connector within Azure Sentinel's connector's gallery
func (o CodelessUiConnectorConfigPropertiesResponseOutput) CustomImage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CodelessUiConnectorConfigPropertiesResponse) *string { return v.CustomImage }).(pulumi.StringPtrOutput)
}

// Data types to check for last data received
func (o CodelessUiConnectorConfigPropertiesResponseOutput) DataTypes() CodelessUiConnectorConfigPropertiesResponseDataTypesArrayOutput {
	return o.ApplyT(func(v CodelessUiConnectorConfigPropertiesResponse) []CodelessUiConnectorConfigPropertiesResponseDataTypes {
		return v.DataTypes
	}).(CodelessUiConnectorConfigPropertiesResponseDataTypesArrayOutput)
}

// Connector description
func (o CodelessUiConnectorConfigPropertiesResponseOutput) DescriptionMarkdown() pulumi.StringOutput {
	return o.ApplyT(func(v CodelessUiConnectorConfigPropertiesResponse) string { return v.DescriptionMarkdown }).(pulumi.StringOutput)
}

// The graph query to show the current data status
func (o CodelessUiConnectorConfigPropertiesResponseOutput) GraphQueries() CodelessUiConnectorConfigPropertiesResponseGraphQueriesArrayOutput {
	return o.ApplyT(func(v CodelessUiConnectorConfigPropertiesResponse) []CodelessUiConnectorConfigPropertiesResponseGraphQueries {
		return v.GraphQueries
	}).(CodelessUiConnectorConfigPropertiesResponseGraphQueriesArrayOutput)
}

// Name of the table the connector will insert the data to
func (o CodelessUiConnectorConfigPropertiesResponseOutput) GraphQueriesTableName() pulumi.StringOutput {
	return o.ApplyT(func(v CodelessUiConnectorConfigPropertiesResponse) string { return v.GraphQueriesTableName }).(pulumi.StringOutput)
}

// Instruction steps to enable the connector
func (o CodelessUiConnectorConfigPropertiesResponseOutput) InstructionSteps() CodelessUiConnectorConfigPropertiesResponseInstructionStepsArrayOutput {
	return o.ApplyT(func(v CodelessUiConnectorConfigPropertiesResponse) []CodelessUiConnectorConfigPropertiesResponseInstructionSteps {
		return v.InstructionSteps
	}).(CodelessUiConnectorConfigPropertiesResponseInstructionStepsArrayOutput)
}

// Permissions required for the connector
func (o CodelessUiConnectorConfigPropertiesResponseOutput) Permissions() PermissionsResponseOutput {
	return o.ApplyT(func(v CodelessUiConnectorConfigPropertiesResponse) PermissionsResponse { return v.Permissions }).(PermissionsResponseOutput)
}

// Connector publisher name
func (o CodelessUiConnectorConfigPropertiesResponseOutput) Publisher() pulumi.StringOutput {
	return o.ApplyT(func(v CodelessUiConnectorConfigPropertiesResponse) string { return v.Publisher }).(pulumi.StringOutput)
}

// The sample queries for the connector
func (o CodelessUiConnectorConfigPropertiesResponseOutput) SampleQueries() CodelessUiConnectorConfigPropertiesResponseSampleQueriesArrayOutput {
	return o.ApplyT(func(v CodelessUiConnectorConfigPropertiesResponse) []CodelessUiConnectorConfigPropertiesResponseSampleQueries {
		return v.SampleQueries
	}).(CodelessUiConnectorConfigPropertiesResponseSampleQueriesArrayOutput)
}

// Connector blade title
func (o CodelessUiConnectorConfigPropertiesResponseOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v CodelessUiConnectorConfigPropertiesResponse) string { return v.Title }).(pulumi.StringOutput)
}

type CodelessUiConnectorConfigPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (CodelessUiConnectorConfigPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CodelessUiConnectorConfigPropertiesResponse)(nil)).Elem()
}

func (o CodelessUiConnectorConfigPropertiesResponsePtrOutput) ToCodelessUiConnectorConfigPropertiesResponsePtrOutput() CodelessUiConnectorConfigPropertiesResponsePtrOutput {
	return o
}

func (o CodelessUiConnectorConfigPropertiesResponsePtrOutput) ToCodelessUiConnectorConfigPropertiesResponsePtrOutputWithContext(ctx context.Context) CodelessUiConnectorConfigPropertiesResponsePtrOutput {
	return o
}

func (o CodelessUiConnectorConfigPropertiesResponsePtrOutput) Elem() CodelessUiConnectorConfigPropertiesResponseOutput {
	return o.ApplyT(func(v *CodelessUiConnectorConfigPropertiesResponse) CodelessUiConnectorConfigPropertiesResponse {
		if v != nil {
			return *v
		}
		var ret CodelessUiConnectorConfigPropertiesResponse
		return ret
	}).(CodelessUiConnectorConfigPropertiesResponseOutput)
}

// Connector Availability Status
func (o CodelessUiConnectorConfigPropertiesResponsePtrOutput) Availability() AvailabilityResponsePtrOutput {
	return o.ApplyT(func(v *CodelessUiConnectorConfigPropertiesResponse) *AvailabilityResponse {
		if v == nil {
			return nil
		}
		return &v.Availability
	}).(AvailabilityResponsePtrOutput)
}

// Define the way the connector check connectivity
func (o CodelessUiConnectorConfigPropertiesResponsePtrOutput) ConnectivityCriteria() CodelessUiConnectorConfigPropertiesResponseConnectivityCriteriaArrayOutput {
	return o.ApplyT(func(v *CodelessUiConnectorConfigPropertiesResponse) []CodelessUiConnectorConfigPropertiesResponseConnectivityCriteria {
		if v == nil {
			return nil
		}
		return v.ConnectivityCriteria
	}).(CodelessUiConnectorConfigPropertiesResponseConnectivityCriteriaArrayOutput)
}

// An optional custom image to be used when displaying the connector within Azure Sentinel's connector's gallery
func (o CodelessUiConnectorConfigPropertiesResponsePtrOutput) CustomImage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CodelessUiConnectorConfigPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.CustomImage
	}).(pulumi.StringPtrOutput)
}

// Data types to check for last data received
func (o CodelessUiConnectorConfigPropertiesResponsePtrOutput) DataTypes() CodelessUiConnectorConfigPropertiesResponseDataTypesArrayOutput {
	return o.ApplyT(func(v *CodelessUiConnectorConfigPropertiesResponse) []CodelessUiConnectorConfigPropertiesResponseDataTypes {
		if v == nil {
			return nil
		}
		return v.DataTypes
	}).(CodelessUiConnectorConfigPropertiesResponseDataTypesArrayOutput)
}

// Connector description
func (o CodelessUiConnectorConfigPropertiesResponsePtrOutput) DescriptionMarkdown() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CodelessUiConnectorConfigPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.DescriptionMarkdown
	}).(pulumi.StringPtrOutput)
}

// The graph query to show the current data status
func (o CodelessUiConnectorConfigPropertiesResponsePtrOutput) GraphQueries() CodelessUiConnectorConfigPropertiesResponseGraphQueriesArrayOutput {
	return o.ApplyT(func(v *CodelessUiConnectorConfigPropertiesResponse) []CodelessUiConnectorConfigPropertiesResponseGraphQueries {
		if v == nil {
			return nil
		}
		return v.GraphQueries
	}).(CodelessUiConnectorConfigPropertiesResponseGraphQueriesArrayOutput)
}

// Name of the table the connector will insert the data to
func (o CodelessUiConnectorConfigPropertiesResponsePtrOutput) GraphQueriesTableName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CodelessUiConnectorConfigPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.GraphQueriesTableName
	}).(pulumi.StringPtrOutput)
}

// Instruction steps to enable the connector
func (o CodelessUiConnectorConfigPropertiesResponsePtrOutput) InstructionSteps() CodelessUiConnectorConfigPropertiesResponseInstructionStepsArrayOutput {
	return o.ApplyT(func(v *CodelessUiConnectorConfigPropertiesResponse) []CodelessUiConnectorConfigPropertiesResponseInstructionSteps {
		if v == nil {
			return nil
		}
		return v.InstructionSteps
	}).(CodelessUiConnectorConfigPropertiesResponseInstructionStepsArrayOutput)
}

// Permissions required for the connector
func (o CodelessUiConnectorConfigPropertiesResponsePtrOutput) Permissions() PermissionsResponsePtrOutput {
	return o.ApplyT(func(v *CodelessUiConnectorConfigPropertiesResponse) *PermissionsResponse {
		if v == nil {
			return nil
		}
		return &v.Permissions
	}).(PermissionsResponsePtrOutput)
}

// Connector publisher name
func (o CodelessUiConnectorConfigPropertiesResponsePtrOutput) Publisher() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CodelessUiConnectorConfigPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Publisher
	}).(pulumi.StringPtrOutput)
}

// The sample queries for the connector
func (o CodelessUiConnectorConfigPropertiesResponsePtrOutput) SampleQueries() CodelessUiConnectorConfigPropertiesResponseSampleQueriesArrayOutput {
	return o.ApplyT(func(v *CodelessUiConnectorConfigPropertiesResponse) []CodelessUiConnectorConfigPropertiesResponseSampleQueries {
		if v == nil {
			return nil
		}
		return v.SampleQueries
	}).(CodelessUiConnectorConfigPropertiesResponseSampleQueriesArrayOutput)
}

// Connector blade title
func (o CodelessUiConnectorConfigPropertiesResponsePtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CodelessUiConnectorConfigPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Title
	}).(pulumi.StringPtrOutput)
}

type CodelessUiConnectorConfigPropertiesResponseConnectivityCriteria struct {
	// type of connectivity
	Type *string `pulumi:"type"`
	// Queries for checking connectivity
	Value []string `pulumi:"value"`
}

type CodelessUiConnectorConfigPropertiesResponseConnectivityCriteriaOutput struct{ *pulumi.OutputState }

func (CodelessUiConnectorConfigPropertiesResponseConnectivityCriteriaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CodelessUiConnectorConfigPropertiesResponseConnectivityCriteria)(nil)).Elem()
}

func (o CodelessUiConnectorConfigPropertiesResponseConnectivityCriteriaOutput) ToCodelessUiConnectorConfigPropertiesResponseConnectivityCriteriaOutput() CodelessUiConnectorConfigPropertiesResponseConnectivityCriteriaOutput {
	return o
}

func (o CodelessUiConnectorConfigPropertiesResponseConnectivityCriteriaOutput) ToCodelessUiConnectorConfigPropertiesResponseConnectivityCriteriaOutputWithContext(ctx context.Context) CodelessUiConnectorConfigPropertiesResponseConnectivityCriteriaOutput {
	return o
}

// type of connectivity
func (o CodelessUiConnectorConfigPropertiesResponseConnectivityCriteriaOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CodelessUiConnectorConfigPropertiesResponseConnectivityCriteria) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// Queries for checking connectivity
func (o CodelessUiConnectorConfigPropertiesResponseConnectivityCriteriaOutput) Value() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CodelessUiConnectorConfigPropertiesResponseConnectivityCriteria) []string { return v.Value }).(pulumi.StringArrayOutput)
}

type CodelessUiConnectorConfigPropertiesResponseConnectivityCriteriaArrayOutput struct{ *pulumi.OutputState }

func (CodelessUiConnectorConfigPropertiesResponseConnectivityCriteriaArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CodelessUiConnectorConfigPropertiesResponseConnectivityCriteria)(nil)).Elem()
}

func (o CodelessUiConnectorConfigPropertiesResponseConnectivityCriteriaArrayOutput) ToCodelessUiConnectorConfigPropertiesResponseConnectivityCriteriaArrayOutput() CodelessUiConnectorConfigPropertiesResponseConnectivityCriteriaArrayOutput {
	return o
}

func (o CodelessUiConnectorConfigPropertiesResponseConnectivityCriteriaArrayOutput) ToCodelessUiConnectorConfigPropertiesResponseConnectivityCriteriaArrayOutputWithContext(ctx context.Context) CodelessUiConnectorConfigPropertiesResponseConnectivityCriteriaArrayOutput {
	return o
}

func (o CodelessUiConnectorConfigPropertiesResponseConnectivityCriteriaArrayOutput) Index(i pulumi.IntInput) CodelessUiConnectorConfigPropertiesResponseConnectivityCriteriaOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CodelessUiConnectorConfigPropertiesResponseConnectivityCriteria {
		return vs[0].([]CodelessUiConnectorConfigPropertiesResponseConnectivityCriteria)[vs[1].(int)]
	}).(CodelessUiConnectorConfigPropertiesResponseConnectivityCriteriaOutput)
}

type CodelessUiConnectorConfigPropertiesResponseDataTypes struct {
	// Query for indicate last data received
	LastDataReceivedQuery *string `pulumi:"lastDataReceivedQuery"`
	// Name of the data type to show in the graph. can be use with {{graphQueriesTableName}} placeholder
	Name *string `pulumi:"name"`
}

type CodelessUiConnectorConfigPropertiesResponseDataTypesOutput struct{ *pulumi.OutputState }

func (CodelessUiConnectorConfigPropertiesResponseDataTypesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CodelessUiConnectorConfigPropertiesResponseDataTypes)(nil)).Elem()
}

func (o CodelessUiConnectorConfigPropertiesResponseDataTypesOutput) ToCodelessUiConnectorConfigPropertiesResponseDataTypesOutput() CodelessUiConnectorConfigPropertiesResponseDataTypesOutput {
	return o
}

func (o CodelessUiConnectorConfigPropertiesResponseDataTypesOutput) ToCodelessUiConnectorConfigPropertiesResponseDataTypesOutputWithContext(ctx context.Context) CodelessUiConnectorConfigPropertiesResponseDataTypesOutput {
	return o
}

// Query for indicate last data received
func (o CodelessUiConnectorConfigPropertiesResponseDataTypesOutput) LastDataReceivedQuery() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CodelessUiConnectorConfigPropertiesResponseDataTypes) *string { return v.LastDataReceivedQuery }).(pulumi.StringPtrOutput)
}

// Name of the data type to show in the graph. can be use with {{graphQueriesTableName}} placeholder
func (o CodelessUiConnectorConfigPropertiesResponseDataTypesOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CodelessUiConnectorConfigPropertiesResponseDataTypes) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type CodelessUiConnectorConfigPropertiesResponseDataTypesArrayOutput struct{ *pulumi.OutputState }

func (CodelessUiConnectorConfigPropertiesResponseDataTypesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CodelessUiConnectorConfigPropertiesResponseDataTypes)(nil)).Elem()
}

func (o CodelessUiConnectorConfigPropertiesResponseDataTypesArrayOutput) ToCodelessUiConnectorConfigPropertiesResponseDataTypesArrayOutput() CodelessUiConnectorConfigPropertiesResponseDataTypesArrayOutput {
	return o
}

func (o CodelessUiConnectorConfigPropertiesResponseDataTypesArrayOutput) ToCodelessUiConnectorConfigPropertiesResponseDataTypesArrayOutputWithContext(ctx context.Context) CodelessUiConnectorConfigPropertiesResponseDataTypesArrayOutput {
	return o
}

func (o CodelessUiConnectorConfigPropertiesResponseDataTypesArrayOutput) Index(i pulumi.IntInput) CodelessUiConnectorConfigPropertiesResponseDataTypesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CodelessUiConnectorConfigPropertiesResponseDataTypes {
		return vs[0].([]CodelessUiConnectorConfigPropertiesResponseDataTypes)[vs[1].(int)]
	}).(CodelessUiConnectorConfigPropertiesResponseDataTypesOutput)
}

type CodelessUiConnectorConfigPropertiesResponseGraphQueries struct {
	// The base query for the graph
	BaseQuery *string `pulumi:"baseQuery"`
	// The legend for the graph
	Legend *string `pulumi:"legend"`
	// the metric that the query is checking
	MetricName *string `pulumi:"metricName"`
}

type CodelessUiConnectorConfigPropertiesResponseGraphQueriesOutput struct{ *pulumi.OutputState }

func (CodelessUiConnectorConfigPropertiesResponseGraphQueriesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CodelessUiConnectorConfigPropertiesResponseGraphQueries)(nil)).Elem()
}

func (o CodelessUiConnectorConfigPropertiesResponseGraphQueriesOutput) ToCodelessUiConnectorConfigPropertiesResponseGraphQueriesOutput() CodelessUiConnectorConfigPropertiesResponseGraphQueriesOutput {
	return o
}

func (o CodelessUiConnectorConfigPropertiesResponseGraphQueriesOutput) ToCodelessUiConnectorConfigPropertiesResponseGraphQueriesOutputWithContext(ctx context.Context) CodelessUiConnectorConfigPropertiesResponseGraphQueriesOutput {
	return o
}

// The base query for the graph
func (o CodelessUiConnectorConfigPropertiesResponseGraphQueriesOutput) BaseQuery() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CodelessUiConnectorConfigPropertiesResponseGraphQueries) *string { return v.BaseQuery }).(pulumi.StringPtrOutput)
}

// The legend for the graph
func (o CodelessUiConnectorConfigPropertiesResponseGraphQueriesOutput) Legend() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CodelessUiConnectorConfigPropertiesResponseGraphQueries) *string { return v.Legend }).(pulumi.StringPtrOutput)
}

// the metric that the query is checking
func (o CodelessUiConnectorConfigPropertiesResponseGraphQueriesOutput) MetricName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CodelessUiConnectorConfigPropertiesResponseGraphQueries) *string { return v.MetricName }).(pulumi.StringPtrOutput)
}

type CodelessUiConnectorConfigPropertiesResponseGraphQueriesArrayOutput struct{ *pulumi.OutputState }

func (CodelessUiConnectorConfigPropertiesResponseGraphQueriesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CodelessUiConnectorConfigPropertiesResponseGraphQueries)(nil)).Elem()
}

func (o CodelessUiConnectorConfigPropertiesResponseGraphQueriesArrayOutput) ToCodelessUiConnectorConfigPropertiesResponseGraphQueriesArrayOutput() CodelessUiConnectorConfigPropertiesResponseGraphQueriesArrayOutput {
	return o
}

func (o CodelessUiConnectorConfigPropertiesResponseGraphQueriesArrayOutput) ToCodelessUiConnectorConfigPropertiesResponseGraphQueriesArrayOutputWithContext(ctx context.Context) CodelessUiConnectorConfigPropertiesResponseGraphQueriesArrayOutput {
	return o
}

func (o CodelessUiConnectorConfigPropertiesResponseGraphQueriesArrayOutput) Index(i pulumi.IntInput) CodelessUiConnectorConfigPropertiesResponseGraphQueriesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CodelessUiConnectorConfigPropertiesResponseGraphQueries {
		return vs[0].([]CodelessUiConnectorConfigPropertiesResponseGraphQueries)[vs[1].(int)]
	}).(CodelessUiConnectorConfigPropertiesResponseGraphQueriesOutput)
}

type CodelessUiConnectorConfigPropertiesResponseInstructionSteps struct {
	// Instruction step description
	Description *string `pulumi:"description"`
	// Instruction step details
	Instructions []InstructionStepsResponseInstructions `pulumi:"instructions"`
	// Instruction step title
	Title *string `pulumi:"title"`
}

type CodelessUiConnectorConfigPropertiesResponseInstructionStepsOutput struct{ *pulumi.OutputState }

func (CodelessUiConnectorConfigPropertiesResponseInstructionStepsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CodelessUiConnectorConfigPropertiesResponseInstructionSteps)(nil)).Elem()
}

func (o CodelessUiConnectorConfigPropertiesResponseInstructionStepsOutput) ToCodelessUiConnectorConfigPropertiesResponseInstructionStepsOutput() CodelessUiConnectorConfigPropertiesResponseInstructionStepsOutput {
	return o
}

func (o CodelessUiConnectorConfigPropertiesResponseInstructionStepsOutput) ToCodelessUiConnectorConfigPropertiesResponseInstructionStepsOutputWithContext(ctx context.Context) CodelessUiConnectorConfigPropertiesResponseInstructionStepsOutput {
	return o
}

// Instruction step description
func (o CodelessUiConnectorConfigPropertiesResponseInstructionStepsOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CodelessUiConnectorConfigPropertiesResponseInstructionSteps) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Instruction step details
func (o CodelessUiConnectorConfigPropertiesResponseInstructionStepsOutput) Instructions() InstructionStepsResponseInstructionsArrayOutput {
	return o.ApplyT(func(v CodelessUiConnectorConfigPropertiesResponseInstructionSteps) []InstructionStepsResponseInstructions {
		return v.Instructions
	}).(InstructionStepsResponseInstructionsArrayOutput)
}

// Instruction step title
func (o CodelessUiConnectorConfigPropertiesResponseInstructionStepsOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CodelessUiConnectorConfigPropertiesResponseInstructionSteps) *string { return v.Title }).(pulumi.StringPtrOutput)
}

type CodelessUiConnectorConfigPropertiesResponseInstructionStepsArrayOutput struct{ *pulumi.OutputState }

func (CodelessUiConnectorConfigPropertiesResponseInstructionStepsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CodelessUiConnectorConfigPropertiesResponseInstructionSteps)(nil)).Elem()
}

func (o CodelessUiConnectorConfigPropertiesResponseInstructionStepsArrayOutput) ToCodelessUiConnectorConfigPropertiesResponseInstructionStepsArrayOutput() CodelessUiConnectorConfigPropertiesResponseInstructionStepsArrayOutput {
	return o
}

func (o CodelessUiConnectorConfigPropertiesResponseInstructionStepsArrayOutput) ToCodelessUiConnectorConfigPropertiesResponseInstructionStepsArrayOutputWithContext(ctx context.Context) CodelessUiConnectorConfigPropertiesResponseInstructionStepsArrayOutput {
	return o
}

func (o CodelessUiConnectorConfigPropertiesResponseInstructionStepsArrayOutput) Index(i pulumi.IntInput) CodelessUiConnectorConfigPropertiesResponseInstructionStepsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CodelessUiConnectorConfigPropertiesResponseInstructionSteps {
		return vs[0].([]CodelessUiConnectorConfigPropertiesResponseInstructionSteps)[vs[1].(int)]
	}).(CodelessUiConnectorConfigPropertiesResponseInstructionStepsOutput)
}

type CodelessUiConnectorConfigPropertiesResponseSampleQueries struct {
	// The sample query description
	Description *string `pulumi:"description"`
	// the sample query
	Query *string `pulumi:"query"`
}

type CodelessUiConnectorConfigPropertiesResponseSampleQueriesOutput struct{ *pulumi.OutputState }

func (CodelessUiConnectorConfigPropertiesResponseSampleQueriesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CodelessUiConnectorConfigPropertiesResponseSampleQueries)(nil)).Elem()
}

func (o CodelessUiConnectorConfigPropertiesResponseSampleQueriesOutput) ToCodelessUiConnectorConfigPropertiesResponseSampleQueriesOutput() CodelessUiConnectorConfigPropertiesResponseSampleQueriesOutput {
	return o
}

func (o CodelessUiConnectorConfigPropertiesResponseSampleQueriesOutput) ToCodelessUiConnectorConfigPropertiesResponseSampleQueriesOutputWithContext(ctx context.Context) CodelessUiConnectorConfigPropertiesResponseSampleQueriesOutput {
	return o
}

// The sample query description
func (o CodelessUiConnectorConfigPropertiesResponseSampleQueriesOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CodelessUiConnectorConfigPropertiesResponseSampleQueries) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// the sample query
func (o CodelessUiConnectorConfigPropertiesResponseSampleQueriesOutput) Query() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CodelessUiConnectorConfigPropertiesResponseSampleQueries) *string { return v.Query }).(pulumi.StringPtrOutput)
}

type CodelessUiConnectorConfigPropertiesResponseSampleQueriesArrayOutput struct{ *pulumi.OutputState }

func (CodelessUiConnectorConfigPropertiesResponseSampleQueriesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CodelessUiConnectorConfigPropertiesResponseSampleQueries)(nil)).Elem()
}

func (o CodelessUiConnectorConfigPropertiesResponseSampleQueriesArrayOutput) ToCodelessUiConnectorConfigPropertiesResponseSampleQueriesArrayOutput() CodelessUiConnectorConfigPropertiesResponseSampleQueriesArrayOutput {
	return o
}

func (o CodelessUiConnectorConfigPropertiesResponseSampleQueriesArrayOutput) ToCodelessUiConnectorConfigPropertiesResponseSampleQueriesArrayOutputWithContext(ctx context.Context) CodelessUiConnectorConfigPropertiesResponseSampleQueriesArrayOutput {
	return o
}

func (o CodelessUiConnectorConfigPropertiesResponseSampleQueriesArrayOutput) Index(i pulumi.IntInput) CodelessUiConnectorConfigPropertiesResponseSampleQueriesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CodelessUiConnectorConfigPropertiesResponseSampleQueries {
		return vs[0].([]CodelessUiConnectorConfigPropertiesResponseSampleQueries)[vs[1].(int)]
	}).(CodelessUiConnectorConfigPropertiesResponseSampleQueriesOutput)
}

type CodelessUiConnectorConfigPropertiesSampleQueries struct {
	// The sample query description
	Description *string `pulumi:"description"`
	// the sample query
	Query *string `pulumi:"query"`
}

// Common field for data type in data connectors.
type DataConnectorDataTypeCommon struct {
	// Describe whether this data type connection is enabled or not.
	State string `pulumi:"state"`
}

// Common field for data type in data connectors.
type DataConnectorDataTypeCommonResponse struct {
	// Describe whether this data type connection is enabled or not.
	State string `pulumi:"state"`
}

// Common field for data type in data connectors.
type DataConnectorDataTypeCommonResponseOutput struct{ *pulumi.OutputState }

func (DataConnectorDataTypeCommonResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataConnectorDataTypeCommonResponse)(nil)).Elem()
}

func (o DataConnectorDataTypeCommonResponseOutput) ToDataConnectorDataTypeCommonResponseOutput() DataConnectorDataTypeCommonResponseOutput {
	return o
}

func (o DataConnectorDataTypeCommonResponseOutput) ToDataConnectorDataTypeCommonResponseOutputWithContext(ctx context.Context) DataConnectorDataTypeCommonResponseOutput {
	return o
}

// Describe whether this data type connection is enabled or not.
func (o DataConnectorDataTypeCommonResponseOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v DataConnectorDataTypeCommonResponse) string { return v.State }).(pulumi.StringOutput)
}

type DataConnectorDataTypeCommonResponsePtrOutput struct{ *pulumi.OutputState }

func (DataConnectorDataTypeCommonResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataConnectorDataTypeCommonResponse)(nil)).Elem()
}

func (o DataConnectorDataTypeCommonResponsePtrOutput) ToDataConnectorDataTypeCommonResponsePtrOutput() DataConnectorDataTypeCommonResponsePtrOutput {
	return o
}

func (o DataConnectorDataTypeCommonResponsePtrOutput) ToDataConnectorDataTypeCommonResponsePtrOutputWithContext(ctx context.Context) DataConnectorDataTypeCommonResponsePtrOutput {
	return o
}

func (o DataConnectorDataTypeCommonResponsePtrOutput) Elem() DataConnectorDataTypeCommonResponseOutput {
	return o.ApplyT(func(v *DataConnectorDataTypeCommonResponse) DataConnectorDataTypeCommonResponse {
		if v != nil {
			return *v
		}
		var ret DataConnectorDataTypeCommonResponse
		return ret
	}).(DataConnectorDataTypeCommonResponseOutput)
}

// Describe whether this data type connection is enabled or not.
func (o DataConnectorDataTypeCommonResponsePtrOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataConnectorDataTypeCommonResponse) *string {
		if v == nil {
			return nil
		}
		return &v.State
	}).(pulumi.StringPtrOutput)
}

// The available data types for Dynamics365 data connector.
type Dynamics365DataConnectorDataTypes struct {
	// Common Data Service data type connection.
	Dynamics365CdsActivities Dynamics365DataConnectorDataTypesDynamics365CdsActivities `pulumi:"dynamics365CdsActivities"`
}

// Common Data Service data type connection.
type Dynamics365DataConnectorDataTypesDynamics365CdsActivities struct {
	// Describe whether this data type connection is enabled or not.
	State string `pulumi:"state"`
}

// The available data types for Dynamics365 data connector.
type Dynamics365DataConnectorDataTypesResponse struct {
	// Common Data Service data type connection.
	Dynamics365CdsActivities Dynamics365DataConnectorDataTypesResponseDynamics365CdsActivities `pulumi:"dynamics365CdsActivities"`
}

// The available data types for Dynamics365 data connector.
type Dynamics365DataConnectorDataTypesResponseOutput struct{ *pulumi.OutputState }

func (Dynamics365DataConnectorDataTypesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Dynamics365DataConnectorDataTypesResponse)(nil)).Elem()
}

func (o Dynamics365DataConnectorDataTypesResponseOutput) ToDynamics365DataConnectorDataTypesResponseOutput() Dynamics365DataConnectorDataTypesResponseOutput {
	return o
}

func (o Dynamics365DataConnectorDataTypesResponseOutput) ToDynamics365DataConnectorDataTypesResponseOutputWithContext(ctx context.Context) Dynamics365DataConnectorDataTypesResponseOutput {
	return o
}

// Common Data Service data type connection.
func (o Dynamics365DataConnectorDataTypesResponseOutput) Dynamics365CdsActivities() Dynamics365DataConnectorDataTypesResponseDynamics365CdsActivitiesOutput {
	return o.ApplyT(func(v Dynamics365DataConnectorDataTypesResponse) Dynamics365DataConnectorDataTypesResponseDynamics365CdsActivities {
		return v.Dynamics365CdsActivities
	}).(Dynamics365DataConnectorDataTypesResponseDynamics365CdsActivitiesOutput)
}

// Common Data Service data type connection.
type Dynamics365DataConnectorDataTypesResponseDynamics365CdsActivities struct {
	// Describe whether this data type connection is enabled or not.
	State string `pulumi:"state"`
}

// Common Data Service data type connection.
type Dynamics365DataConnectorDataTypesResponseDynamics365CdsActivitiesOutput struct{ *pulumi.OutputState }

func (Dynamics365DataConnectorDataTypesResponseDynamics365CdsActivitiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Dynamics365DataConnectorDataTypesResponseDynamics365CdsActivities)(nil)).Elem()
}

func (o Dynamics365DataConnectorDataTypesResponseDynamics365CdsActivitiesOutput) ToDynamics365DataConnectorDataTypesResponseDynamics365CdsActivitiesOutput() Dynamics365DataConnectorDataTypesResponseDynamics365CdsActivitiesOutput {
	return o
}

func (o Dynamics365DataConnectorDataTypesResponseDynamics365CdsActivitiesOutput) ToDynamics365DataConnectorDataTypesResponseDynamics365CdsActivitiesOutputWithContext(ctx context.Context) Dynamics365DataConnectorDataTypesResponseDynamics365CdsActivitiesOutput {
	return o
}

// Describe whether this data type connection is enabled or not.
func (o Dynamics365DataConnectorDataTypesResponseDynamics365CdsActivitiesOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v Dynamics365DataConnectorDataTypesResponseDynamics365CdsActivities) string { return v.State }).(pulumi.StringOutput)
}

// Entity insight Item.
type EntityInsightItemResponse struct {
	// Query results for table insights query.
	ChartQueryResults []InsightsTableResultResponse `pulumi:"chartQueryResults"`
	// The query id of the insight
	QueryId *string `pulumi:"queryId"`
	// The Time interval that the query actually executed on.
	QueryTimeInterval *EntityInsightItemResponseQueryTimeInterval `pulumi:"queryTimeInterval"`
	// Query results for table insights query.
	TableQueryResults *InsightsTableResultResponse `pulumi:"tableQueryResults"`
}

// Entity insight Item.
type EntityInsightItemResponseOutput struct{ *pulumi.OutputState }

func (EntityInsightItemResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EntityInsightItemResponse)(nil)).Elem()
}

func (o EntityInsightItemResponseOutput) ToEntityInsightItemResponseOutput() EntityInsightItemResponseOutput {
	return o
}

func (o EntityInsightItemResponseOutput) ToEntityInsightItemResponseOutputWithContext(ctx context.Context) EntityInsightItemResponseOutput {
	return o
}

// Query results for table insights query.
func (o EntityInsightItemResponseOutput) ChartQueryResults() InsightsTableResultResponseArrayOutput {
	return o.ApplyT(func(v EntityInsightItemResponse) []InsightsTableResultResponse { return v.ChartQueryResults }).(InsightsTableResultResponseArrayOutput)
}

// The query id of the insight
func (o EntityInsightItemResponseOutput) QueryId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EntityInsightItemResponse) *string { return v.QueryId }).(pulumi.StringPtrOutput)
}

// The Time interval that the query actually executed on.
func (o EntityInsightItemResponseOutput) QueryTimeInterval() EntityInsightItemResponseQueryTimeIntervalPtrOutput {
	return o.ApplyT(func(v EntityInsightItemResponse) *EntityInsightItemResponseQueryTimeInterval {
		return v.QueryTimeInterval
	}).(EntityInsightItemResponseQueryTimeIntervalPtrOutput)
}

// Query results for table insights query.
func (o EntityInsightItemResponseOutput) TableQueryResults() InsightsTableResultResponsePtrOutput {
	return o.ApplyT(func(v EntityInsightItemResponse) *InsightsTableResultResponse { return v.TableQueryResults }).(InsightsTableResultResponsePtrOutput)
}

type EntityInsightItemResponseArrayOutput struct{ *pulumi.OutputState }

func (EntityInsightItemResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EntityInsightItemResponse)(nil)).Elem()
}

func (o EntityInsightItemResponseArrayOutput) ToEntityInsightItemResponseArrayOutput() EntityInsightItemResponseArrayOutput {
	return o
}

func (o EntityInsightItemResponseArrayOutput) ToEntityInsightItemResponseArrayOutputWithContext(ctx context.Context) EntityInsightItemResponseArrayOutput {
	return o
}

func (o EntityInsightItemResponseArrayOutput) Index(i pulumi.IntInput) EntityInsightItemResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EntityInsightItemResponse {
		return vs[0].([]EntityInsightItemResponse)[vs[1].(int)]
	}).(EntityInsightItemResponseOutput)
}

// The Time interval that the query actually executed on.
type EntityInsightItemResponseQueryTimeInterval struct {
	// Insight query end time
	EndTime *string `pulumi:"endTime"`
	// Insight query start time
	StartTime *string `pulumi:"startTime"`
}

// The Time interval that the query actually executed on.
type EntityInsightItemResponseQueryTimeIntervalOutput struct{ *pulumi.OutputState }

func (EntityInsightItemResponseQueryTimeIntervalOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EntityInsightItemResponseQueryTimeInterval)(nil)).Elem()
}

func (o EntityInsightItemResponseQueryTimeIntervalOutput) ToEntityInsightItemResponseQueryTimeIntervalOutput() EntityInsightItemResponseQueryTimeIntervalOutput {
	return o
}

func (o EntityInsightItemResponseQueryTimeIntervalOutput) ToEntityInsightItemResponseQueryTimeIntervalOutputWithContext(ctx context.Context) EntityInsightItemResponseQueryTimeIntervalOutput {
	return o
}

// Insight query end time
func (o EntityInsightItemResponseQueryTimeIntervalOutput) EndTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EntityInsightItemResponseQueryTimeInterval) *string { return v.EndTime }).(pulumi.StringPtrOutput)
}

// Insight query start time
func (o EntityInsightItemResponseQueryTimeIntervalOutput) StartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EntityInsightItemResponseQueryTimeInterval) *string { return v.StartTime }).(pulumi.StringPtrOutput)
}

type EntityInsightItemResponseQueryTimeIntervalPtrOutput struct{ *pulumi.OutputState }

func (EntityInsightItemResponseQueryTimeIntervalPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EntityInsightItemResponseQueryTimeInterval)(nil)).Elem()
}

func (o EntityInsightItemResponseQueryTimeIntervalPtrOutput) ToEntityInsightItemResponseQueryTimeIntervalPtrOutput() EntityInsightItemResponseQueryTimeIntervalPtrOutput {
	return o
}

func (o EntityInsightItemResponseQueryTimeIntervalPtrOutput) ToEntityInsightItemResponseQueryTimeIntervalPtrOutputWithContext(ctx context.Context) EntityInsightItemResponseQueryTimeIntervalPtrOutput {
	return o
}

func (o EntityInsightItemResponseQueryTimeIntervalPtrOutput) Elem() EntityInsightItemResponseQueryTimeIntervalOutput {
	return o.ApplyT(func(v *EntityInsightItemResponseQueryTimeInterval) EntityInsightItemResponseQueryTimeInterval {
		if v != nil {
			return *v
		}
		var ret EntityInsightItemResponseQueryTimeInterval
		return ret
	}).(EntityInsightItemResponseQueryTimeIntervalOutput)
}

// Insight query end time
func (o EntityInsightItemResponseQueryTimeIntervalPtrOutput) EndTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EntityInsightItemResponseQueryTimeInterval) *string {
		if v == nil {
			return nil
		}
		return v.EndTime
	}).(pulumi.StringPtrOutput)
}

// Insight query start time
func (o EntityInsightItemResponseQueryTimeIntervalPtrOutput) StartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EntityInsightItemResponseQueryTimeInterval) *string {
		if v == nil {
			return nil
		}
		return v.StartTime
	}).(pulumi.StringPtrOutput)
}

// Single entity mapping for the alert rule
type EntityMapping struct {
	// The V3 type of the mapped entity
	EntityType *string `pulumi:"entityType"`
	// array of field mappings for the given entity mapping
	FieldMappings []FieldMapping `pulumi:"fieldMappings"`
}

// Single entity mapping for the alert rule
type EntityMappingResponse struct {
	// The V3 type of the mapped entity
	EntityType *string `pulumi:"entityType"`
	// array of field mappings for the given entity mapping
	FieldMappings []FieldMappingResponse `pulumi:"fieldMappings"`
}

// Single entity mapping for the alert rule
type EntityMappingResponseOutput struct{ *pulumi.OutputState }

func (EntityMappingResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EntityMappingResponse)(nil)).Elem()
}

func (o EntityMappingResponseOutput) ToEntityMappingResponseOutput() EntityMappingResponseOutput {
	return o
}

func (o EntityMappingResponseOutput) ToEntityMappingResponseOutputWithContext(ctx context.Context) EntityMappingResponseOutput {
	return o
}

// The V3 type of the mapped entity
func (o EntityMappingResponseOutput) EntityType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EntityMappingResponse) *string { return v.EntityType }).(pulumi.StringPtrOutput)
}

// array of field mappings for the given entity mapping
func (o EntityMappingResponseOutput) FieldMappings() FieldMappingResponseArrayOutput {
	return o.ApplyT(func(v EntityMappingResponse) []FieldMappingResponse { return v.FieldMappings }).(FieldMappingResponseArrayOutput)
}

type EntityMappingResponseArrayOutput struct{ *pulumi.OutputState }

func (EntityMappingResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EntityMappingResponse)(nil)).Elem()
}

func (o EntityMappingResponseArrayOutput) ToEntityMappingResponseArrayOutput() EntityMappingResponseArrayOutput {
	return o
}

func (o EntityMappingResponseArrayOutput) ToEntityMappingResponseArrayOutputWithContext(ctx context.Context) EntityMappingResponseArrayOutput {
	return o
}

func (o EntityMappingResponseArrayOutput) Index(i pulumi.IntInput) EntityMappingResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EntityMappingResponse {
		return vs[0].([]EntityMappingResponse)[vs[1].(int)]
	}).(EntityMappingResponseOutput)
}

// Event grouping settings property bag.
type EventGroupingSettings struct {
	// The event grouping aggregation kinds
	AggregationKind *string `pulumi:"aggregationKind"`
}

// Event grouping settings property bag.
type EventGroupingSettingsResponse struct {
	// The event grouping aggregation kinds
	AggregationKind *string `pulumi:"aggregationKind"`
}

// Event grouping settings property bag.
type EventGroupingSettingsResponseOutput struct{ *pulumi.OutputState }

func (EventGroupingSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EventGroupingSettingsResponse)(nil)).Elem()
}

func (o EventGroupingSettingsResponseOutput) ToEventGroupingSettingsResponseOutput() EventGroupingSettingsResponseOutput {
	return o
}

func (o EventGroupingSettingsResponseOutput) ToEventGroupingSettingsResponseOutputWithContext(ctx context.Context) EventGroupingSettingsResponseOutput {
	return o
}

// The event grouping aggregation kinds
func (o EventGroupingSettingsResponseOutput) AggregationKind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EventGroupingSettingsResponse) *string { return v.AggregationKind }).(pulumi.StringPtrOutput)
}

type EventGroupingSettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (EventGroupingSettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EventGroupingSettingsResponse)(nil)).Elem()
}

func (o EventGroupingSettingsResponsePtrOutput) ToEventGroupingSettingsResponsePtrOutput() EventGroupingSettingsResponsePtrOutput {
	return o
}

func (o EventGroupingSettingsResponsePtrOutput) ToEventGroupingSettingsResponsePtrOutputWithContext(ctx context.Context) EventGroupingSettingsResponsePtrOutput {
	return o
}

func (o EventGroupingSettingsResponsePtrOutput) Elem() EventGroupingSettingsResponseOutput {
	return o.ApplyT(func(v *EventGroupingSettingsResponse) EventGroupingSettingsResponse {
		if v != nil {
			return *v
		}
		var ret EventGroupingSettingsResponse
		return ret
	}).(EventGroupingSettingsResponseOutput)
}

// The event grouping aggregation kinds
func (o EventGroupingSettingsResponsePtrOutput) AggregationKind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EventGroupingSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.AggregationKind
	}).(pulumi.StringPtrOutput)
}

// A single field mapping of the mapped entity
type FieldMapping struct {
	// the column name to be mapped to the identifier
	ColumnName *string `pulumi:"columnName"`
	// the V3 identifier of the entity
	Identifier *string `pulumi:"identifier"`
}

// A single field mapping of the mapped entity
type FieldMappingResponse struct {
	// the column name to be mapped to the identifier
	ColumnName *string `pulumi:"columnName"`
	// the V3 identifier of the entity
	Identifier *string `pulumi:"identifier"`
}

// A single field mapping of the mapped entity
type FieldMappingResponseOutput struct{ *pulumi.OutputState }

func (FieldMappingResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FieldMappingResponse)(nil)).Elem()
}

func (o FieldMappingResponseOutput) ToFieldMappingResponseOutput() FieldMappingResponseOutput {
	return o
}

func (o FieldMappingResponseOutput) ToFieldMappingResponseOutputWithContext(ctx context.Context) FieldMappingResponseOutput {
	return o
}

// the column name to be mapped to the identifier
func (o FieldMappingResponseOutput) ColumnName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FieldMappingResponse) *string { return v.ColumnName }).(pulumi.StringPtrOutput)
}

// the V3 identifier of the entity
func (o FieldMappingResponseOutput) Identifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FieldMappingResponse) *string { return v.Identifier }).(pulumi.StringPtrOutput)
}

type FieldMappingResponseArrayOutput struct{ *pulumi.OutputState }

func (FieldMappingResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FieldMappingResponse)(nil)).Elem()
}

func (o FieldMappingResponseArrayOutput) ToFieldMappingResponseArrayOutput() FieldMappingResponseArrayOutput {
	return o
}

func (o FieldMappingResponseArrayOutput) ToFieldMappingResponseArrayOutputWithContext(ctx context.Context) FieldMappingResponseArrayOutput {
	return o
}

func (o FieldMappingResponseArrayOutput) Index(i pulumi.IntInput) FieldMappingResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FieldMappingResponse {
		return vs[0].([]FieldMappingResponse)[vs[1].(int)]
	}).(FieldMappingResponseOutput)
}

// GetInsights Query Errors.
type GetInsightsErrorResponse struct {
	// the error message
	ErrorMessage string `pulumi:"errorMessage"`
	// the query kind
	Kind string `pulumi:"kind"`
	// the query id
	QueryId *string `pulumi:"queryId"`
}

// GetInsights Query Errors.
type GetInsightsErrorResponseOutput struct{ *pulumi.OutputState }

func (GetInsightsErrorResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInsightsErrorResponse)(nil)).Elem()
}

func (o GetInsightsErrorResponseOutput) ToGetInsightsErrorResponseOutput() GetInsightsErrorResponseOutput {
	return o
}

func (o GetInsightsErrorResponseOutput) ToGetInsightsErrorResponseOutputWithContext(ctx context.Context) GetInsightsErrorResponseOutput {
	return o
}

// the error message
func (o GetInsightsErrorResponseOutput) ErrorMessage() pulumi.StringOutput {
	return o.ApplyT(func(v GetInsightsErrorResponse) string { return v.ErrorMessage }).(pulumi.StringOutput)
}

// the query kind
func (o GetInsightsErrorResponseOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v GetInsightsErrorResponse) string { return v.Kind }).(pulumi.StringOutput)
}

// the query id
func (o GetInsightsErrorResponseOutput) QueryId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetInsightsErrorResponse) *string { return v.QueryId }).(pulumi.StringPtrOutput)
}

type GetInsightsErrorResponseArrayOutput struct{ *pulumi.OutputState }

func (GetInsightsErrorResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInsightsErrorResponse)(nil)).Elem()
}

func (o GetInsightsErrorResponseArrayOutput) ToGetInsightsErrorResponseArrayOutput() GetInsightsErrorResponseArrayOutput {
	return o
}

func (o GetInsightsErrorResponseArrayOutput) ToGetInsightsErrorResponseArrayOutputWithContext(ctx context.Context) GetInsightsErrorResponseArrayOutput {
	return o
}

func (o GetInsightsErrorResponseArrayOutput) Index(i pulumi.IntInput) GetInsightsErrorResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInsightsErrorResponse {
		return vs[0].([]GetInsightsErrorResponse)[vs[1].(int)]
	}).(GetInsightsErrorResponseOutput)
}

// Get Insights result metadata.
type GetInsightsResultsMetadataResponse struct {
	// information about the failed queries
	Errors []GetInsightsErrorResponse `pulumi:"errors"`
	// the total items found for the insights request
	TotalCount int `pulumi:"totalCount"`
}

// Get Insights result metadata.
type GetInsightsResultsMetadataResponseOutput struct{ *pulumi.OutputState }

func (GetInsightsResultsMetadataResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInsightsResultsMetadataResponse)(nil)).Elem()
}

func (o GetInsightsResultsMetadataResponseOutput) ToGetInsightsResultsMetadataResponseOutput() GetInsightsResultsMetadataResponseOutput {
	return o
}

func (o GetInsightsResultsMetadataResponseOutput) ToGetInsightsResultsMetadataResponseOutputWithContext(ctx context.Context) GetInsightsResultsMetadataResponseOutput {
	return o
}

// information about the failed queries
func (o GetInsightsResultsMetadataResponseOutput) Errors() GetInsightsErrorResponseArrayOutput {
	return o.ApplyT(func(v GetInsightsResultsMetadataResponse) []GetInsightsErrorResponse { return v.Errors }).(GetInsightsErrorResponseArrayOutput)
}

// the total items found for the insights request
func (o GetInsightsResultsMetadataResponseOutput) TotalCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetInsightsResultsMetadataResponse) int { return v.TotalCount }).(pulumi.IntOutput)
}

type GetInsightsResultsMetadataResponsePtrOutput struct{ *pulumi.OutputState }

func (GetInsightsResultsMetadataResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetInsightsResultsMetadataResponse)(nil)).Elem()
}

func (o GetInsightsResultsMetadataResponsePtrOutput) ToGetInsightsResultsMetadataResponsePtrOutput() GetInsightsResultsMetadataResponsePtrOutput {
	return o
}

func (o GetInsightsResultsMetadataResponsePtrOutput) ToGetInsightsResultsMetadataResponsePtrOutputWithContext(ctx context.Context) GetInsightsResultsMetadataResponsePtrOutput {
	return o
}

func (o GetInsightsResultsMetadataResponsePtrOutput) Elem() GetInsightsResultsMetadataResponseOutput {
	return o.ApplyT(func(v *GetInsightsResultsMetadataResponse) GetInsightsResultsMetadataResponse {
		if v != nil {
			return *v
		}
		var ret GetInsightsResultsMetadataResponse
		return ret
	}).(GetInsightsResultsMetadataResponseOutput)
}

// information about the failed queries
func (o GetInsightsResultsMetadataResponsePtrOutput) Errors() GetInsightsErrorResponseArrayOutput {
	return o.ApplyT(func(v *GetInsightsResultsMetadataResponse) []GetInsightsErrorResponse {
		if v == nil {
			return nil
		}
		return v.Errors
	}).(GetInsightsErrorResponseArrayOutput)
}

// the total items found for the insights request
func (o GetInsightsResultsMetadataResponsePtrOutput) TotalCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GetInsightsResultsMetadataResponse) *int {
		if v == nil {
			return nil
		}
		return &v.TotalCount
	}).(pulumi.IntPtrOutput)
}

// Grouping configuration property bag.
type GroupingConfiguration struct {
	// Grouping enabled
	Enabled bool `pulumi:"enabled"`
	// A list of alert details to group by (when matchingMethod is Selected)
	GroupByAlertDetails []string `pulumi:"groupByAlertDetails"`
	// A list of custom details keys to group by (when matchingMethod is Selected). Only keys defined in the current alert rule may be used.
	GroupByCustomDetails []string `pulumi:"groupByCustomDetails"`
	// A list of entity types to group by (when matchingMethod is Selected). Only entities defined in the current alert rule may be used.
	GroupByEntities []string `pulumi:"groupByEntities"`
	// Limit the group to alerts created within the lookback duration (in ISO 8601 duration format)
	LookbackDuration string `pulumi:"lookbackDuration"`
	// Grouping matching method. When method is Selected at least one of groupByEntities, groupByAlertDetails, groupByCustomDetails must be provided and not empty.
	MatchingMethod string `pulumi:"matchingMethod"`
	// Re-open closed matching incidents
	ReopenClosedIncident bool `pulumi:"reopenClosedIncident"`
}

// Grouping configuration property bag.
type GroupingConfigurationResponse struct {
	// Grouping enabled
	Enabled bool `pulumi:"enabled"`
	// A list of alert details to group by (when matchingMethod is Selected)
	GroupByAlertDetails []string `pulumi:"groupByAlertDetails"`
	// A list of custom details keys to group by (when matchingMethod is Selected). Only keys defined in the current alert rule may be used.
	GroupByCustomDetails []string `pulumi:"groupByCustomDetails"`
	// A list of entity types to group by (when matchingMethod is Selected). Only entities defined in the current alert rule may be used.
	GroupByEntities []string `pulumi:"groupByEntities"`
	// Limit the group to alerts created within the lookback duration (in ISO 8601 duration format)
	LookbackDuration string `pulumi:"lookbackDuration"`
	// Grouping matching method. When method is Selected at least one of groupByEntities, groupByAlertDetails, groupByCustomDetails must be provided and not empty.
	MatchingMethod string `pulumi:"matchingMethod"`
	// Re-open closed matching incidents
	ReopenClosedIncident bool `pulumi:"reopenClosedIncident"`
}

// Grouping configuration property bag.
type GroupingConfigurationResponseOutput struct{ *pulumi.OutputState }

func (GroupingConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupingConfigurationResponse)(nil)).Elem()
}

func (o GroupingConfigurationResponseOutput) ToGroupingConfigurationResponseOutput() GroupingConfigurationResponseOutput {
	return o
}

func (o GroupingConfigurationResponseOutput) ToGroupingConfigurationResponseOutputWithContext(ctx context.Context) GroupingConfigurationResponseOutput {
	return o
}

// Grouping enabled
func (o GroupingConfigurationResponseOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GroupingConfigurationResponse) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// A list of alert details to group by (when matchingMethod is Selected)
func (o GroupingConfigurationResponseOutput) GroupByAlertDetails() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GroupingConfigurationResponse) []string { return v.GroupByAlertDetails }).(pulumi.StringArrayOutput)
}

// A list of custom details keys to group by (when matchingMethod is Selected). Only keys defined in the current alert rule may be used.
func (o GroupingConfigurationResponseOutput) GroupByCustomDetails() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GroupingConfigurationResponse) []string { return v.GroupByCustomDetails }).(pulumi.StringArrayOutput)
}

// A list of entity types to group by (when matchingMethod is Selected). Only entities defined in the current alert rule may be used.
func (o GroupingConfigurationResponseOutput) GroupByEntities() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GroupingConfigurationResponse) []string { return v.GroupByEntities }).(pulumi.StringArrayOutput)
}

// Limit the group to alerts created within the lookback duration (in ISO 8601 duration format)
func (o GroupingConfigurationResponseOutput) LookbackDuration() pulumi.StringOutput {
	return o.ApplyT(func(v GroupingConfigurationResponse) string { return v.LookbackDuration }).(pulumi.StringOutput)
}

// Grouping matching method. When method is Selected at least one of groupByEntities, groupByAlertDetails, groupByCustomDetails must be provided and not empty.
func (o GroupingConfigurationResponseOutput) MatchingMethod() pulumi.StringOutput {
	return o.ApplyT(func(v GroupingConfigurationResponse) string { return v.MatchingMethod }).(pulumi.StringOutput)
}

// Re-open closed matching incidents
func (o GroupingConfigurationResponseOutput) ReopenClosedIncident() pulumi.BoolOutput {
	return o.ApplyT(func(v GroupingConfigurationResponse) bool { return v.ReopenClosedIncident }).(pulumi.BoolOutput)
}

type GroupingConfigurationResponsePtrOutput struct{ *pulumi.OutputState }

func (GroupingConfigurationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GroupingConfigurationResponse)(nil)).Elem()
}

func (o GroupingConfigurationResponsePtrOutput) ToGroupingConfigurationResponsePtrOutput() GroupingConfigurationResponsePtrOutput {
	return o
}

func (o GroupingConfigurationResponsePtrOutput) ToGroupingConfigurationResponsePtrOutputWithContext(ctx context.Context) GroupingConfigurationResponsePtrOutput {
	return o
}

func (o GroupingConfigurationResponsePtrOutput) Elem() GroupingConfigurationResponseOutput {
	return o.ApplyT(func(v *GroupingConfigurationResponse) GroupingConfigurationResponse {
		if v != nil {
			return *v
		}
		var ret GroupingConfigurationResponse
		return ret
	}).(GroupingConfigurationResponseOutput)
}

// Grouping enabled
func (o GroupingConfigurationResponsePtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GroupingConfigurationResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// A list of alert details to group by (when matchingMethod is Selected)
func (o GroupingConfigurationResponsePtrOutput) GroupByAlertDetails() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GroupingConfigurationResponse) []string {
		if v == nil {
			return nil
		}
		return v.GroupByAlertDetails
	}).(pulumi.StringArrayOutput)
}

// A list of custom details keys to group by (when matchingMethod is Selected). Only keys defined in the current alert rule may be used.
func (o GroupingConfigurationResponsePtrOutput) GroupByCustomDetails() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GroupingConfigurationResponse) []string {
		if v == nil {
			return nil
		}
		return v.GroupByCustomDetails
	}).(pulumi.StringArrayOutput)
}

// A list of entity types to group by (when matchingMethod is Selected). Only entities defined in the current alert rule may be used.
func (o GroupingConfigurationResponsePtrOutput) GroupByEntities() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GroupingConfigurationResponse) []string {
		if v == nil {
			return nil
		}
		return v.GroupByEntities
	}).(pulumi.StringArrayOutput)
}

// Limit the group to alerts created within the lookback duration (in ISO 8601 duration format)
func (o GroupingConfigurationResponsePtrOutput) LookbackDuration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GroupingConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return &v.LookbackDuration
	}).(pulumi.StringPtrOutput)
}

// Grouping matching method. When method is Selected at least one of groupByEntities, groupByAlertDetails, groupByCustomDetails must be provided and not empty.
func (o GroupingConfigurationResponsePtrOutput) MatchingMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GroupingConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return &v.MatchingMethod
	}).(pulumi.StringPtrOutput)
}

// Re-open closed matching incidents
func (o GroupingConfigurationResponsePtrOutput) ReopenClosedIncident() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GroupingConfigurationResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.ReopenClosedIncident
	}).(pulumi.BoolPtrOutput)
}

// Incident Configuration property bag.
type IncidentConfiguration struct {
	// Create incidents from alerts triggered by this analytics rule
	CreateIncident bool `pulumi:"createIncident"`
	// Set how the alerts that are triggered by this analytics rule, are grouped into incidents
	GroupingConfiguration *GroupingConfiguration `pulumi:"groupingConfiguration"`
}

// Incident Configuration property bag.
type IncidentConfigurationResponse struct {
	// Create incidents from alerts triggered by this analytics rule
	CreateIncident bool `pulumi:"createIncident"`
	// Set how the alerts that are triggered by this analytics rule, are grouped into incidents
	GroupingConfiguration *GroupingConfigurationResponse `pulumi:"groupingConfiguration"`
}

// Incident Configuration property bag.
type IncidentConfigurationResponseOutput struct{ *pulumi.OutputState }

func (IncidentConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IncidentConfigurationResponse)(nil)).Elem()
}

func (o IncidentConfigurationResponseOutput) ToIncidentConfigurationResponseOutput() IncidentConfigurationResponseOutput {
	return o
}

func (o IncidentConfigurationResponseOutput) ToIncidentConfigurationResponseOutputWithContext(ctx context.Context) IncidentConfigurationResponseOutput {
	return o
}

// Create incidents from alerts triggered by this analytics rule
func (o IncidentConfigurationResponseOutput) CreateIncident() pulumi.BoolOutput {
	return o.ApplyT(func(v IncidentConfigurationResponse) bool { return v.CreateIncident }).(pulumi.BoolOutput)
}

// Set how the alerts that are triggered by this analytics rule, are grouped into incidents
func (o IncidentConfigurationResponseOutput) GroupingConfiguration() GroupingConfigurationResponsePtrOutput {
	return o.ApplyT(func(v IncidentConfigurationResponse) *GroupingConfigurationResponse { return v.GroupingConfiguration }).(GroupingConfigurationResponsePtrOutput)
}

type IncidentConfigurationResponsePtrOutput struct{ *pulumi.OutputState }

func (IncidentConfigurationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IncidentConfigurationResponse)(nil)).Elem()
}

func (o IncidentConfigurationResponsePtrOutput) ToIncidentConfigurationResponsePtrOutput() IncidentConfigurationResponsePtrOutput {
	return o
}

func (o IncidentConfigurationResponsePtrOutput) ToIncidentConfigurationResponsePtrOutputWithContext(ctx context.Context) IncidentConfigurationResponsePtrOutput {
	return o
}

func (o IncidentConfigurationResponsePtrOutput) Elem() IncidentConfigurationResponseOutput {
	return o.ApplyT(func(v *IncidentConfigurationResponse) IncidentConfigurationResponse {
		if v != nil {
			return *v
		}
		var ret IncidentConfigurationResponse
		return ret
	}).(IncidentConfigurationResponseOutput)
}

// Create incidents from alerts triggered by this analytics rule
func (o IncidentConfigurationResponsePtrOutput) CreateIncident() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *IncidentConfigurationResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.CreateIncident
	}).(pulumi.BoolPtrOutput)
}

// Set how the alerts that are triggered by this analytics rule, are grouped into incidents
func (o IncidentConfigurationResponsePtrOutput) GroupingConfiguration() GroupingConfigurationResponsePtrOutput {
	return o.ApplyT(func(v *IncidentConfigurationResponse) *GroupingConfigurationResponse {
		if v == nil {
			return nil
		}
		return v.GroupingConfiguration
	}).(GroupingConfigurationResponsePtrOutput)
}

// Query results for table insights query.
type InsightsTableResultResponse struct {
	// Columns Metadata of the table
	Columns []InsightsTableResultResponseColumns `pulumi:"columns"`
	// Rows data of the table
	Rows [][]string `pulumi:"rows"`
}

// Query results for table insights query.
type InsightsTableResultResponseOutput struct{ *pulumi.OutputState }

func (InsightsTableResultResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InsightsTableResultResponse)(nil)).Elem()
}

func (o InsightsTableResultResponseOutput) ToInsightsTableResultResponseOutput() InsightsTableResultResponseOutput {
	return o
}

func (o InsightsTableResultResponseOutput) ToInsightsTableResultResponseOutputWithContext(ctx context.Context) InsightsTableResultResponseOutput {
	return o
}

// Columns Metadata of the table
func (o InsightsTableResultResponseOutput) Columns() InsightsTableResultResponseColumnsArrayOutput {
	return o.ApplyT(func(v InsightsTableResultResponse) []InsightsTableResultResponseColumns { return v.Columns }).(InsightsTableResultResponseColumnsArrayOutput)
}

// Rows data of the table
func (o InsightsTableResultResponseOutput) Rows() pulumi.StringArrayArrayOutput {
	return o.ApplyT(func(v InsightsTableResultResponse) [][]string { return v.Rows }).(pulumi.StringArrayArrayOutput)
}

type InsightsTableResultResponsePtrOutput struct{ *pulumi.OutputState }

func (InsightsTableResultResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InsightsTableResultResponse)(nil)).Elem()
}

func (o InsightsTableResultResponsePtrOutput) ToInsightsTableResultResponsePtrOutput() InsightsTableResultResponsePtrOutput {
	return o
}

func (o InsightsTableResultResponsePtrOutput) ToInsightsTableResultResponsePtrOutputWithContext(ctx context.Context) InsightsTableResultResponsePtrOutput {
	return o
}

func (o InsightsTableResultResponsePtrOutput) Elem() InsightsTableResultResponseOutput {
	return o.ApplyT(func(v *InsightsTableResultResponse) InsightsTableResultResponse {
		if v != nil {
			return *v
		}
		var ret InsightsTableResultResponse
		return ret
	}).(InsightsTableResultResponseOutput)
}

// Columns Metadata of the table
func (o InsightsTableResultResponsePtrOutput) Columns() InsightsTableResultResponseColumnsArrayOutput {
	return o.ApplyT(func(v *InsightsTableResultResponse) []InsightsTableResultResponseColumns {
		if v == nil {
			return nil
		}
		return v.Columns
	}).(InsightsTableResultResponseColumnsArrayOutput)
}

// Rows data of the table
func (o InsightsTableResultResponsePtrOutput) Rows() pulumi.StringArrayArrayOutput {
	return o.ApplyT(func(v *InsightsTableResultResponse) [][]string {
		if v == nil {
			return nil
		}
		return v.Rows
	}).(pulumi.StringArrayArrayOutput)
}

type InsightsTableResultResponseArrayOutput struct{ *pulumi.OutputState }

func (InsightsTableResultResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InsightsTableResultResponse)(nil)).Elem()
}

func (o InsightsTableResultResponseArrayOutput) ToInsightsTableResultResponseArrayOutput() InsightsTableResultResponseArrayOutput {
	return o
}

func (o InsightsTableResultResponseArrayOutput) ToInsightsTableResultResponseArrayOutputWithContext(ctx context.Context) InsightsTableResultResponseArrayOutput {
	return o
}

func (o InsightsTableResultResponseArrayOutput) Index(i pulumi.IntInput) InsightsTableResultResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InsightsTableResultResponse {
		return vs[0].([]InsightsTableResultResponse)[vs[1].(int)]
	}).(InsightsTableResultResponseOutput)
}

type InsightsTableResultResponseColumns struct {
	// the name of the colum
	Name *string `pulumi:"name"`
	// the type of the colum
	Type *string `pulumi:"type"`
}

type InsightsTableResultResponseColumnsOutput struct{ *pulumi.OutputState }

func (InsightsTableResultResponseColumnsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InsightsTableResultResponseColumns)(nil)).Elem()
}

func (o InsightsTableResultResponseColumnsOutput) ToInsightsTableResultResponseColumnsOutput() InsightsTableResultResponseColumnsOutput {
	return o
}

func (o InsightsTableResultResponseColumnsOutput) ToInsightsTableResultResponseColumnsOutputWithContext(ctx context.Context) InsightsTableResultResponseColumnsOutput {
	return o
}

// the name of the colum
func (o InsightsTableResultResponseColumnsOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InsightsTableResultResponseColumns) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// the type of the colum
func (o InsightsTableResultResponseColumnsOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InsightsTableResultResponseColumns) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type InsightsTableResultResponseColumnsArrayOutput struct{ *pulumi.OutputState }

func (InsightsTableResultResponseColumnsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InsightsTableResultResponseColumns)(nil)).Elem()
}

func (o InsightsTableResultResponseColumnsArrayOutput) ToInsightsTableResultResponseColumnsArrayOutput() InsightsTableResultResponseColumnsArrayOutput {
	return o
}

func (o InsightsTableResultResponseColumnsArrayOutput) ToInsightsTableResultResponseColumnsArrayOutputWithContext(ctx context.Context) InsightsTableResultResponseColumnsArrayOutput {
	return o
}

func (o InsightsTableResultResponseColumnsArrayOutput) Index(i pulumi.IntInput) InsightsTableResultResponseColumnsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InsightsTableResultResponseColumns {
		return vs[0].([]InsightsTableResultResponseColumns)[vs[1].(int)]
	}).(InsightsTableResultResponseColumnsOutput)
}

type InstructionStepsInstructions struct {
	// The parameters for the setting
	Parameters interface{} `pulumi:"parameters"`
	// The kind of the setting
	Type string `pulumi:"type"`
}

type InstructionStepsResponseInstructions struct {
	// The parameters for the setting
	Parameters interface{} `pulumi:"parameters"`
	// The kind of the setting
	Type string `pulumi:"type"`
}

type InstructionStepsResponseInstructionsOutput struct{ *pulumi.OutputState }

func (InstructionStepsResponseInstructionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstructionStepsResponseInstructions)(nil)).Elem()
}

func (o InstructionStepsResponseInstructionsOutput) ToInstructionStepsResponseInstructionsOutput() InstructionStepsResponseInstructionsOutput {
	return o
}

func (o InstructionStepsResponseInstructionsOutput) ToInstructionStepsResponseInstructionsOutputWithContext(ctx context.Context) InstructionStepsResponseInstructionsOutput {
	return o
}

// The parameters for the setting
func (o InstructionStepsResponseInstructionsOutput) Parameters() pulumi.AnyOutput {
	return o.ApplyT(func(v InstructionStepsResponseInstructions) interface{} { return v.Parameters }).(pulumi.AnyOutput)
}

// The kind of the setting
func (o InstructionStepsResponseInstructionsOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v InstructionStepsResponseInstructions) string { return v.Type }).(pulumi.StringOutput)
}

type InstructionStepsResponseInstructionsArrayOutput struct{ *pulumi.OutputState }

func (InstructionStepsResponseInstructionsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstructionStepsResponseInstructions)(nil)).Elem()
}

func (o InstructionStepsResponseInstructionsArrayOutput) ToInstructionStepsResponseInstructionsArrayOutput() InstructionStepsResponseInstructionsArrayOutput {
	return o
}

func (o InstructionStepsResponseInstructionsArrayOutput) ToInstructionStepsResponseInstructionsArrayOutputWithContext(ctx context.Context) InstructionStepsResponseInstructionsArrayOutput {
	return o
}

func (o InstructionStepsResponseInstructionsArrayOutput) Index(i pulumi.IntInput) InstructionStepsResponseInstructionsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InstructionStepsResponseInstructions {
		return vs[0].([]InstructionStepsResponseInstructions)[vs[1].(int)]
	}).(InstructionStepsResponseInstructionsOutput)
}

// The available data types for MCAS (Microsoft Cloud App Security) data connector.
type MCASDataConnectorDataTypes struct {
	// Alerts data type connection.
	Alerts DataConnectorDataTypeCommon `pulumi:"alerts"`
	// Discovery log data type connection.
	DiscoveryLogs *DataConnectorDataTypeCommon `pulumi:"discoveryLogs"`
}

// The available data types for MCAS (Microsoft Cloud App Security) data connector.
type MCASDataConnectorDataTypesResponse struct {
	// Alerts data type connection.
	Alerts DataConnectorDataTypeCommonResponse `pulumi:"alerts"`
	// Discovery log data type connection.
	DiscoveryLogs *DataConnectorDataTypeCommonResponse `pulumi:"discoveryLogs"`
}

// The available data types for MCAS (Microsoft Cloud App Security) data connector.
type MCASDataConnectorDataTypesResponseOutput struct{ *pulumi.OutputState }

func (MCASDataConnectorDataTypesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MCASDataConnectorDataTypesResponse)(nil)).Elem()
}

func (o MCASDataConnectorDataTypesResponseOutput) ToMCASDataConnectorDataTypesResponseOutput() MCASDataConnectorDataTypesResponseOutput {
	return o
}

func (o MCASDataConnectorDataTypesResponseOutput) ToMCASDataConnectorDataTypesResponseOutputWithContext(ctx context.Context) MCASDataConnectorDataTypesResponseOutput {
	return o
}

// Alerts data type connection.
func (o MCASDataConnectorDataTypesResponseOutput) Alerts() DataConnectorDataTypeCommonResponseOutput {
	return o.ApplyT(func(v MCASDataConnectorDataTypesResponse) DataConnectorDataTypeCommonResponse { return v.Alerts }).(DataConnectorDataTypeCommonResponseOutput)
}

// Discovery log data type connection.
func (o MCASDataConnectorDataTypesResponseOutput) DiscoveryLogs() DataConnectorDataTypeCommonResponsePtrOutput {
	return o.ApplyT(func(v MCASDataConnectorDataTypesResponse) *DataConnectorDataTypeCommonResponse {
		return v.DiscoveryLogs
	}).(DataConnectorDataTypeCommonResponsePtrOutput)
}

// The available data types for Microsoft Threat Intelligence Platforms data connector.
type MSTIDataConnectorDataTypes struct {
	// Data type for Microsoft Threat Intelligence Platforms data connector.
	BingSafetyPhishingURL MSTIDataConnectorDataTypesBingSafetyPhishingURL `pulumi:"bingSafetyPhishingURL"`
	// Data type for Microsoft Threat Intelligence Platforms data connector.
	MicrosoftEmergingThreatFeed MSTIDataConnectorDataTypesMicrosoftEmergingThreatFeed `pulumi:"microsoftEmergingThreatFeed"`
}

// Data type for Microsoft Threat Intelligence Platforms data connector.
type MSTIDataConnectorDataTypesBingSafetyPhishingURL struct {
	// lookback period
	LookbackPeriod string `pulumi:"lookbackPeriod"`
	// Describe whether this data type connection is enabled or not.
	State string `pulumi:"state"`
}

// Data type for Microsoft Threat Intelligence Platforms data connector.
type MSTIDataConnectorDataTypesMicrosoftEmergingThreatFeed struct {
	// lookback period
	LookbackPeriod string `pulumi:"lookbackPeriod"`
	// Describe whether this data type connection is enabled or not.
	State string `pulumi:"state"`
}

// The available data types for Microsoft Threat Intelligence Platforms data connector.
type MSTIDataConnectorDataTypesResponse struct {
	// Data type for Microsoft Threat Intelligence Platforms data connector.
	BingSafetyPhishingURL MSTIDataConnectorDataTypesResponseBingSafetyPhishingURL `pulumi:"bingSafetyPhishingURL"`
	// Data type for Microsoft Threat Intelligence Platforms data connector.
	MicrosoftEmergingThreatFeed MSTIDataConnectorDataTypesResponseMicrosoftEmergingThreatFeed `pulumi:"microsoftEmergingThreatFeed"`
}

// The available data types for Microsoft Threat Intelligence Platforms data connector.
type MSTIDataConnectorDataTypesResponseOutput struct{ *pulumi.OutputState }

func (MSTIDataConnectorDataTypesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MSTIDataConnectorDataTypesResponse)(nil)).Elem()
}

func (o MSTIDataConnectorDataTypesResponseOutput) ToMSTIDataConnectorDataTypesResponseOutput() MSTIDataConnectorDataTypesResponseOutput {
	return o
}

func (o MSTIDataConnectorDataTypesResponseOutput) ToMSTIDataConnectorDataTypesResponseOutputWithContext(ctx context.Context) MSTIDataConnectorDataTypesResponseOutput {
	return o
}

// Data type for Microsoft Threat Intelligence Platforms data connector.
func (o MSTIDataConnectorDataTypesResponseOutput) BingSafetyPhishingURL() MSTIDataConnectorDataTypesResponseBingSafetyPhishingURLOutput {
	return o.ApplyT(func(v MSTIDataConnectorDataTypesResponse) MSTIDataConnectorDataTypesResponseBingSafetyPhishingURL {
		return v.BingSafetyPhishingURL
	}).(MSTIDataConnectorDataTypesResponseBingSafetyPhishingURLOutput)
}

// Data type for Microsoft Threat Intelligence Platforms data connector.
func (o MSTIDataConnectorDataTypesResponseOutput) MicrosoftEmergingThreatFeed() MSTIDataConnectorDataTypesResponseMicrosoftEmergingThreatFeedOutput {
	return o.ApplyT(func(v MSTIDataConnectorDataTypesResponse) MSTIDataConnectorDataTypesResponseMicrosoftEmergingThreatFeed {
		return v.MicrosoftEmergingThreatFeed
	}).(MSTIDataConnectorDataTypesResponseMicrosoftEmergingThreatFeedOutput)
}

// Data type for Microsoft Threat Intelligence Platforms data connector.
type MSTIDataConnectorDataTypesResponseBingSafetyPhishingURL struct {
	// lookback period
	LookbackPeriod string `pulumi:"lookbackPeriod"`
	// Describe whether this data type connection is enabled or not.
	State string `pulumi:"state"`
}

// Data type for Microsoft Threat Intelligence Platforms data connector.
type MSTIDataConnectorDataTypesResponseBingSafetyPhishingURLOutput struct{ *pulumi.OutputState }

func (MSTIDataConnectorDataTypesResponseBingSafetyPhishingURLOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MSTIDataConnectorDataTypesResponseBingSafetyPhishingURL)(nil)).Elem()
}

func (o MSTIDataConnectorDataTypesResponseBingSafetyPhishingURLOutput) ToMSTIDataConnectorDataTypesResponseBingSafetyPhishingURLOutput() MSTIDataConnectorDataTypesResponseBingSafetyPhishingURLOutput {
	return o
}

func (o MSTIDataConnectorDataTypesResponseBingSafetyPhishingURLOutput) ToMSTIDataConnectorDataTypesResponseBingSafetyPhishingURLOutputWithContext(ctx context.Context) MSTIDataConnectorDataTypesResponseBingSafetyPhishingURLOutput {
	return o
}

// lookback period
func (o MSTIDataConnectorDataTypesResponseBingSafetyPhishingURLOutput) LookbackPeriod() pulumi.StringOutput {
	return o.ApplyT(func(v MSTIDataConnectorDataTypesResponseBingSafetyPhishingURL) string { return v.LookbackPeriod }).(pulumi.StringOutput)
}

// Describe whether this data type connection is enabled or not.
func (o MSTIDataConnectorDataTypesResponseBingSafetyPhishingURLOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v MSTIDataConnectorDataTypesResponseBingSafetyPhishingURL) string { return v.State }).(pulumi.StringOutput)
}

// Data type for Microsoft Threat Intelligence Platforms data connector.
type MSTIDataConnectorDataTypesResponseMicrosoftEmergingThreatFeed struct {
	// lookback period
	LookbackPeriod string `pulumi:"lookbackPeriod"`
	// Describe whether this data type connection is enabled or not.
	State string `pulumi:"state"`
}

// Data type for Microsoft Threat Intelligence Platforms data connector.
type MSTIDataConnectorDataTypesResponseMicrosoftEmergingThreatFeedOutput struct{ *pulumi.OutputState }

func (MSTIDataConnectorDataTypesResponseMicrosoftEmergingThreatFeedOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MSTIDataConnectorDataTypesResponseMicrosoftEmergingThreatFeed)(nil)).Elem()
}

func (o MSTIDataConnectorDataTypesResponseMicrosoftEmergingThreatFeedOutput) ToMSTIDataConnectorDataTypesResponseMicrosoftEmergingThreatFeedOutput() MSTIDataConnectorDataTypesResponseMicrosoftEmergingThreatFeedOutput {
	return o
}

func (o MSTIDataConnectorDataTypesResponseMicrosoftEmergingThreatFeedOutput) ToMSTIDataConnectorDataTypesResponseMicrosoftEmergingThreatFeedOutputWithContext(ctx context.Context) MSTIDataConnectorDataTypesResponseMicrosoftEmergingThreatFeedOutput {
	return o
}

// lookback period
func (o MSTIDataConnectorDataTypesResponseMicrosoftEmergingThreatFeedOutput) LookbackPeriod() pulumi.StringOutput {
	return o.ApplyT(func(v MSTIDataConnectorDataTypesResponseMicrosoftEmergingThreatFeed) string { return v.LookbackPeriod }).(pulumi.StringOutput)
}

// Describe whether this data type connection is enabled or not.
func (o MSTIDataConnectorDataTypesResponseMicrosoftEmergingThreatFeedOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v MSTIDataConnectorDataTypesResponseMicrosoftEmergingThreatFeed) string { return v.State }).(pulumi.StringOutput)
}

// The available data types for Microsoft Threat Protection Platforms data connector.
type MTPDataConnectorDataTypes struct {
	// Data type for Microsoft Threat Protection Platforms data connector.
	Incidents MTPDataConnectorDataTypesIncidents `pulumi:"incidents"`
}

// Data type for Microsoft Threat Protection Platforms data connector.
type MTPDataConnectorDataTypesIncidents struct {
	// Describe whether this data type connection is enabled or not.
	State string `pulumi:"state"`
}

// The available data types for Microsoft Threat Protection Platforms data connector.
type MTPDataConnectorDataTypesResponse struct {
	// Data type for Microsoft Threat Protection Platforms data connector.
	Incidents MTPDataConnectorDataTypesResponseIncidents `pulumi:"incidents"`
}

// The available data types for Microsoft Threat Protection Platforms data connector.
type MTPDataConnectorDataTypesResponseOutput struct{ *pulumi.OutputState }

func (MTPDataConnectorDataTypesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MTPDataConnectorDataTypesResponse)(nil)).Elem()
}

func (o MTPDataConnectorDataTypesResponseOutput) ToMTPDataConnectorDataTypesResponseOutput() MTPDataConnectorDataTypesResponseOutput {
	return o
}

func (o MTPDataConnectorDataTypesResponseOutput) ToMTPDataConnectorDataTypesResponseOutputWithContext(ctx context.Context) MTPDataConnectorDataTypesResponseOutput {
	return o
}

// Data type for Microsoft Threat Protection Platforms data connector.
func (o MTPDataConnectorDataTypesResponseOutput) Incidents() MTPDataConnectorDataTypesResponseIncidentsOutput {
	return o.ApplyT(func(v MTPDataConnectorDataTypesResponse) MTPDataConnectorDataTypesResponseIncidents {
		return v.Incidents
	}).(MTPDataConnectorDataTypesResponseIncidentsOutput)
}

// Data type for Microsoft Threat Protection Platforms data connector.
type MTPDataConnectorDataTypesResponseIncidents struct {
	// Describe whether this data type connection is enabled or not.
	State string `pulumi:"state"`
}

// Data type for Microsoft Threat Protection Platforms data connector.
type MTPDataConnectorDataTypesResponseIncidentsOutput struct{ *pulumi.OutputState }

func (MTPDataConnectorDataTypesResponseIncidentsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MTPDataConnectorDataTypesResponseIncidents)(nil)).Elem()
}

func (o MTPDataConnectorDataTypesResponseIncidentsOutput) ToMTPDataConnectorDataTypesResponseIncidentsOutput() MTPDataConnectorDataTypesResponseIncidentsOutput {
	return o
}

func (o MTPDataConnectorDataTypesResponseIncidentsOutput) ToMTPDataConnectorDataTypesResponseIncidentsOutputWithContext(ctx context.Context) MTPDataConnectorDataTypesResponseIncidentsOutput {
	return o
}

// Describe whether this data type connection is enabled or not.
func (o MTPDataConnectorDataTypesResponseIncidentsOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v MTPDataConnectorDataTypesResponseIncidents) string { return v.State }).(pulumi.StringOutput)
}

// The available data types for office data connector.
type OfficeDataConnectorDataTypes struct {
	// Exchange data type connection.
	Exchange OfficeDataConnectorDataTypesExchange `pulumi:"exchange"`
	// SharePoint data type connection.
	SharePoint OfficeDataConnectorDataTypesSharePoint `pulumi:"sharePoint"`
	// Teams data type connection.
	Teams OfficeDataConnectorDataTypesTeams `pulumi:"teams"`
}

// Exchange data type connection.
type OfficeDataConnectorDataTypesExchange struct {
	// Describe whether this data type connection is enabled or not.
	State string `pulumi:"state"`
}

// The available data types for office data connector.
type OfficeDataConnectorDataTypesResponse struct {
	// Exchange data type connection.
	Exchange OfficeDataConnectorDataTypesResponseExchange `pulumi:"exchange"`
	// SharePoint data type connection.
	SharePoint OfficeDataConnectorDataTypesResponseSharePoint `pulumi:"sharePoint"`
	// Teams data type connection.
	Teams OfficeDataConnectorDataTypesResponseTeams `pulumi:"teams"`
}

// The available data types for office data connector.
type OfficeDataConnectorDataTypesResponseOutput struct{ *pulumi.OutputState }

func (OfficeDataConnectorDataTypesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OfficeDataConnectorDataTypesResponse)(nil)).Elem()
}

func (o OfficeDataConnectorDataTypesResponseOutput) ToOfficeDataConnectorDataTypesResponseOutput() OfficeDataConnectorDataTypesResponseOutput {
	return o
}

func (o OfficeDataConnectorDataTypesResponseOutput) ToOfficeDataConnectorDataTypesResponseOutputWithContext(ctx context.Context) OfficeDataConnectorDataTypesResponseOutput {
	return o
}

// Exchange data type connection.
func (o OfficeDataConnectorDataTypesResponseOutput) Exchange() OfficeDataConnectorDataTypesResponseExchangeOutput {
	return o.ApplyT(func(v OfficeDataConnectorDataTypesResponse) OfficeDataConnectorDataTypesResponseExchange {
		return v.Exchange
	}).(OfficeDataConnectorDataTypesResponseExchangeOutput)
}

// SharePoint data type connection.
func (o OfficeDataConnectorDataTypesResponseOutput) SharePoint() OfficeDataConnectorDataTypesResponseSharePointOutput {
	return o.ApplyT(func(v OfficeDataConnectorDataTypesResponse) OfficeDataConnectorDataTypesResponseSharePoint {
		return v.SharePoint
	}).(OfficeDataConnectorDataTypesResponseSharePointOutput)
}

// Teams data type connection.
func (o OfficeDataConnectorDataTypesResponseOutput) Teams() OfficeDataConnectorDataTypesResponseTeamsOutput {
	return o.ApplyT(func(v OfficeDataConnectorDataTypesResponse) OfficeDataConnectorDataTypesResponseTeams { return v.Teams }).(OfficeDataConnectorDataTypesResponseTeamsOutput)
}

// Exchange data type connection.
type OfficeDataConnectorDataTypesResponseExchange struct {
	// Describe whether this data type connection is enabled or not.
	State string `pulumi:"state"`
}

// Exchange data type connection.
type OfficeDataConnectorDataTypesResponseExchangeOutput struct{ *pulumi.OutputState }

func (OfficeDataConnectorDataTypesResponseExchangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OfficeDataConnectorDataTypesResponseExchange)(nil)).Elem()
}

func (o OfficeDataConnectorDataTypesResponseExchangeOutput) ToOfficeDataConnectorDataTypesResponseExchangeOutput() OfficeDataConnectorDataTypesResponseExchangeOutput {
	return o
}

func (o OfficeDataConnectorDataTypesResponseExchangeOutput) ToOfficeDataConnectorDataTypesResponseExchangeOutputWithContext(ctx context.Context) OfficeDataConnectorDataTypesResponseExchangeOutput {
	return o
}

// Describe whether this data type connection is enabled or not.
func (o OfficeDataConnectorDataTypesResponseExchangeOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v OfficeDataConnectorDataTypesResponseExchange) string { return v.State }).(pulumi.StringOutput)
}

// SharePoint data type connection.
type OfficeDataConnectorDataTypesResponseSharePoint struct {
	// Describe whether this data type connection is enabled or not.
	State string `pulumi:"state"`
}

// SharePoint data type connection.
type OfficeDataConnectorDataTypesResponseSharePointOutput struct{ *pulumi.OutputState }

func (OfficeDataConnectorDataTypesResponseSharePointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OfficeDataConnectorDataTypesResponseSharePoint)(nil)).Elem()
}

func (o OfficeDataConnectorDataTypesResponseSharePointOutput) ToOfficeDataConnectorDataTypesResponseSharePointOutput() OfficeDataConnectorDataTypesResponseSharePointOutput {
	return o
}

func (o OfficeDataConnectorDataTypesResponseSharePointOutput) ToOfficeDataConnectorDataTypesResponseSharePointOutputWithContext(ctx context.Context) OfficeDataConnectorDataTypesResponseSharePointOutput {
	return o
}

// Describe whether this data type connection is enabled or not.
func (o OfficeDataConnectorDataTypesResponseSharePointOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v OfficeDataConnectorDataTypesResponseSharePoint) string { return v.State }).(pulumi.StringOutput)
}

// Teams data type connection.
type OfficeDataConnectorDataTypesResponseTeams struct {
	// Describe whether this data type connection is enabled or not.
	State string `pulumi:"state"`
}

// Teams data type connection.
type OfficeDataConnectorDataTypesResponseTeamsOutput struct{ *pulumi.OutputState }

func (OfficeDataConnectorDataTypesResponseTeamsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OfficeDataConnectorDataTypesResponseTeams)(nil)).Elem()
}

func (o OfficeDataConnectorDataTypesResponseTeamsOutput) ToOfficeDataConnectorDataTypesResponseTeamsOutput() OfficeDataConnectorDataTypesResponseTeamsOutput {
	return o
}

func (o OfficeDataConnectorDataTypesResponseTeamsOutput) ToOfficeDataConnectorDataTypesResponseTeamsOutputWithContext(ctx context.Context) OfficeDataConnectorDataTypesResponseTeamsOutput {
	return o
}

// Describe whether this data type connection is enabled or not.
func (o OfficeDataConnectorDataTypesResponseTeamsOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v OfficeDataConnectorDataTypesResponseTeams) string { return v.State }).(pulumi.StringOutput)
}

// SharePoint data type connection.
type OfficeDataConnectorDataTypesSharePoint struct {
	// Describe whether this data type connection is enabled or not.
	State string `pulumi:"state"`
}

// Teams data type connection.
type OfficeDataConnectorDataTypesTeams struct {
	// Describe whether this data type connection is enabled or not.
	State string `pulumi:"state"`
}

// Permissions required for the connector
type Permissions struct {
	// Customs permissions required for the connector
	Customs []PermissionsCustoms `pulumi:"customs"`
	// Resource provider permissions required for the connector
	ResourceProvider []PermissionsResourceProvider `pulumi:"resourceProvider"`
}

type PermissionsCustoms struct {
	// Customs permissions description
	Description *string `pulumi:"description"`
	// Customs permissions name
	Name *string `pulumi:"name"`
}

type PermissionsResourceProvider struct {
	// Permission description text
	PermissionsDisplayText *string `pulumi:"permissionsDisplayText"`
	// Provider name
	Provider *string `pulumi:"provider"`
	// Permission provider display name
	ProviderDisplayName *string `pulumi:"providerDisplayName"`
	// Required permissions for the connector
	RequiredPermissions *RequiredPermissions `pulumi:"requiredPermissions"`
	// Permission provider scope
	Scope *string `pulumi:"scope"`
}

// Permissions required for the connector
type PermissionsResponse struct {
	// Customs permissions required for the connector
	Customs []PermissionsResponseCustoms `pulumi:"customs"`
	// Resource provider permissions required for the connector
	ResourceProvider []PermissionsResponseResourceProvider `pulumi:"resourceProvider"`
}

// Permissions required for the connector
type PermissionsResponseOutput struct{ *pulumi.OutputState }

func (PermissionsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PermissionsResponse)(nil)).Elem()
}

func (o PermissionsResponseOutput) ToPermissionsResponseOutput() PermissionsResponseOutput {
	return o
}

func (o PermissionsResponseOutput) ToPermissionsResponseOutputWithContext(ctx context.Context) PermissionsResponseOutput {
	return o
}

// Customs permissions required for the connector
func (o PermissionsResponseOutput) Customs() PermissionsResponseCustomsArrayOutput {
	return o.ApplyT(func(v PermissionsResponse) []PermissionsResponseCustoms { return v.Customs }).(PermissionsResponseCustomsArrayOutput)
}

// Resource provider permissions required for the connector
func (o PermissionsResponseOutput) ResourceProvider() PermissionsResponseResourceProviderArrayOutput {
	return o.ApplyT(func(v PermissionsResponse) []PermissionsResponseResourceProvider { return v.ResourceProvider }).(PermissionsResponseResourceProviderArrayOutput)
}

type PermissionsResponsePtrOutput struct{ *pulumi.OutputState }

func (PermissionsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PermissionsResponse)(nil)).Elem()
}

func (o PermissionsResponsePtrOutput) ToPermissionsResponsePtrOutput() PermissionsResponsePtrOutput {
	return o
}

func (o PermissionsResponsePtrOutput) ToPermissionsResponsePtrOutputWithContext(ctx context.Context) PermissionsResponsePtrOutput {
	return o
}

func (o PermissionsResponsePtrOutput) Elem() PermissionsResponseOutput {
	return o.ApplyT(func(v *PermissionsResponse) PermissionsResponse {
		if v != nil {
			return *v
		}
		var ret PermissionsResponse
		return ret
	}).(PermissionsResponseOutput)
}

// Customs permissions required for the connector
func (o PermissionsResponsePtrOutput) Customs() PermissionsResponseCustomsArrayOutput {
	return o.ApplyT(func(v *PermissionsResponse) []PermissionsResponseCustoms {
		if v == nil {
			return nil
		}
		return v.Customs
	}).(PermissionsResponseCustomsArrayOutput)
}

// Resource provider permissions required for the connector
func (o PermissionsResponsePtrOutput) ResourceProvider() PermissionsResponseResourceProviderArrayOutput {
	return o.ApplyT(func(v *PermissionsResponse) []PermissionsResponseResourceProvider {
		if v == nil {
			return nil
		}
		return v.ResourceProvider
	}).(PermissionsResponseResourceProviderArrayOutput)
}

type PermissionsResponseCustoms struct {
	// Customs permissions description
	Description *string `pulumi:"description"`
	// Customs permissions name
	Name *string `pulumi:"name"`
}

type PermissionsResponseCustomsOutput struct{ *pulumi.OutputState }

func (PermissionsResponseCustomsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PermissionsResponseCustoms)(nil)).Elem()
}

func (o PermissionsResponseCustomsOutput) ToPermissionsResponseCustomsOutput() PermissionsResponseCustomsOutput {
	return o
}

func (o PermissionsResponseCustomsOutput) ToPermissionsResponseCustomsOutputWithContext(ctx context.Context) PermissionsResponseCustomsOutput {
	return o
}

// Customs permissions description
func (o PermissionsResponseCustomsOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PermissionsResponseCustoms) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Customs permissions name
func (o PermissionsResponseCustomsOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PermissionsResponseCustoms) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type PermissionsResponseCustomsArrayOutput struct{ *pulumi.OutputState }

func (PermissionsResponseCustomsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PermissionsResponseCustoms)(nil)).Elem()
}

func (o PermissionsResponseCustomsArrayOutput) ToPermissionsResponseCustomsArrayOutput() PermissionsResponseCustomsArrayOutput {
	return o
}

func (o PermissionsResponseCustomsArrayOutput) ToPermissionsResponseCustomsArrayOutputWithContext(ctx context.Context) PermissionsResponseCustomsArrayOutput {
	return o
}

func (o PermissionsResponseCustomsArrayOutput) Index(i pulumi.IntInput) PermissionsResponseCustomsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PermissionsResponseCustoms {
		return vs[0].([]PermissionsResponseCustoms)[vs[1].(int)]
	}).(PermissionsResponseCustomsOutput)
}

type PermissionsResponseResourceProvider struct {
	// Permission description text
	PermissionsDisplayText *string `pulumi:"permissionsDisplayText"`
	// Provider name
	Provider *string `pulumi:"provider"`
	// Permission provider display name
	ProviderDisplayName *string `pulumi:"providerDisplayName"`
	// Required permissions for the connector
	RequiredPermissions *RequiredPermissionsResponse `pulumi:"requiredPermissions"`
	// Permission provider scope
	Scope *string `pulumi:"scope"`
}

type PermissionsResponseResourceProviderOutput struct{ *pulumi.OutputState }

func (PermissionsResponseResourceProviderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PermissionsResponseResourceProvider)(nil)).Elem()
}

func (o PermissionsResponseResourceProviderOutput) ToPermissionsResponseResourceProviderOutput() PermissionsResponseResourceProviderOutput {
	return o
}

func (o PermissionsResponseResourceProviderOutput) ToPermissionsResponseResourceProviderOutputWithContext(ctx context.Context) PermissionsResponseResourceProviderOutput {
	return o
}

// Permission description text
func (o PermissionsResponseResourceProviderOutput) PermissionsDisplayText() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PermissionsResponseResourceProvider) *string { return v.PermissionsDisplayText }).(pulumi.StringPtrOutput)
}

// Provider name
func (o PermissionsResponseResourceProviderOutput) Provider() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PermissionsResponseResourceProvider) *string { return v.Provider }).(pulumi.StringPtrOutput)
}

// Permission provider display name
func (o PermissionsResponseResourceProviderOutput) ProviderDisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PermissionsResponseResourceProvider) *string { return v.ProviderDisplayName }).(pulumi.StringPtrOutput)
}

// Required permissions for the connector
func (o PermissionsResponseResourceProviderOutput) RequiredPermissions() RequiredPermissionsResponsePtrOutput {
	return o.ApplyT(func(v PermissionsResponseResourceProvider) *RequiredPermissionsResponse { return v.RequiredPermissions }).(RequiredPermissionsResponsePtrOutput)
}

// Permission provider scope
func (o PermissionsResponseResourceProviderOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PermissionsResponseResourceProvider) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

type PermissionsResponseResourceProviderArrayOutput struct{ *pulumi.OutputState }

func (PermissionsResponseResourceProviderArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PermissionsResponseResourceProvider)(nil)).Elem()
}

func (o PermissionsResponseResourceProviderArrayOutput) ToPermissionsResponseResourceProviderArrayOutput() PermissionsResponseResourceProviderArrayOutput {
	return o
}

func (o PermissionsResponseResourceProviderArrayOutput) ToPermissionsResponseResourceProviderArrayOutputWithContext(ctx context.Context) PermissionsResponseResourceProviderArrayOutput {
	return o
}

func (o PermissionsResponseResourceProviderArrayOutput) Index(i pulumi.IntInput) PermissionsResponseResourceProviderOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PermissionsResponseResourceProvider {
		return vs[0].([]PermissionsResponseResourceProvider)[vs[1].(int)]
	}).(PermissionsResponseResourceProviderOutput)
}

// Represents a repository.
type RepoResponse struct {
	// Array of branches.
	Branches []string `pulumi:"branches"`
	// The name of the repository.
	FullName *string `pulumi:"fullName"`
	// The url to access the repository.
	Url *string `pulumi:"url"`
}

// Represents a repository.
type RepoResponseOutput struct{ *pulumi.OutputState }

func (RepoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RepoResponse)(nil)).Elem()
}

func (o RepoResponseOutput) ToRepoResponseOutput() RepoResponseOutput {
	return o
}

func (o RepoResponseOutput) ToRepoResponseOutputWithContext(ctx context.Context) RepoResponseOutput {
	return o
}

// Array of branches.
func (o RepoResponseOutput) Branches() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RepoResponse) []string { return v.Branches }).(pulumi.StringArrayOutput)
}

// The name of the repository.
func (o RepoResponseOutput) FullName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RepoResponse) *string { return v.FullName }).(pulumi.StringPtrOutput)
}

// The url to access the repository.
func (o RepoResponseOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RepoResponse) *string { return v.Url }).(pulumi.StringPtrOutput)
}

type RepoResponseArrayOutput struct{ *pulumi.OutputState }

func (RepoResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RepoResponse)(nil)).Elem()
}

func (o RepoResponseArrayOutput) ToRepoResponseArrayOutput() RepoResponseArrayOutput {
	return o
}

func (o RepoResponseArrayOutput) ToRepoResponseArrayOutputWithContext(ctx context.Context) RepoResponseArrayOutput {
	return o
}

func (o RepoResponseArrayOutput) Index(i pulumi.IntInput) RepoResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RepoResponse {
		return vs[0].([]RepoResponse)[vs[1].(int)]
	}).(RepoResponseOutput)
}

// Required permissions for the connector
type RequiredPermissions struct {
	// action permission
	Action *bool `pulumi:"action"`
	// delete permission
	Delete *bool `pulumi:"delete"`
	// read permission
	Read *bool `pulumi:"read"`
	// write permission
	Write *bool `pulumi:"write"`
}

// Required permissions for the connector
type RequiredPermissionsResponse struct {
	// action permission
	Action *bool `pulumi:"action"`
	// delete permission
	Delete *bool `pulumi:"delete"`
	// read permission
	Read *bool `pulumi:"read"`
	// write permission
	Write *bool `pulumi:"write"`
}

// Required permissions for the connector
type RequiredPermissionsResponseOutput struct{ *pulumi.OutputState }

func (RequiredPermissionsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RequiredPermissionsResponse)(nil)).Elem()
}

func (o RequiredPermissionsResponseOutput) ToRequiredPermissionsResponseOutput() RequiredPermissionsResponseOutput {
	return o
}

func (o RequiredPermissionsResponseOutput) ToRequiredPermissionsResponseOutputWithContext(ctx context.Context) RequiredPermissionsResponseOutput {
	return o
}

// action permission
func (o RequiredPermissionsResponseOutput) Action() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RequiredPermissionsResponse) *bool { return v.Action }).(pulumi.BoolPtrOutput)
}

// delete permission
func (o RequiredPermissionsResponseOutput) Delete() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RequiredPermissionsResponse) *bool { return v.Delete }).(pulumi.BoolPtrOutput)
}

// read permission
func (o RequiredPermissionsResponseOutput) Read() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RequiredPermissionsResponse) *bool { return v.Read }).(pulumi.BoolPtrOutput)
}

// write permission
func (o RequiredPermissionsResponseOutput) Write() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RequiredPermissionsResponse) *bool { return v.Write }).(pulumi.BoolPtrOutput)
}

type RequiredPermissionsResponsePtrOutput struct{ *pulumi.OutputState }

func (RequiredPermissionsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RequiredPermissionsResponse)(nil)).Elem()
}

func (o RequiredPermissionsResponsePtrOutput) ToRequiredPermissionsResponsePtrOutput() RequiredPermissionsResponsePtrOutput {
	return o
}

func (o RequiredPermissionsResponsePtrOutput) ToRequiredPermissionsResponsePtrOutputWithContext(ctx context.Context) RequiredPermissionsResponsePtrOutput {
	return o
}

func (o RequiredPermissionsResponsePtrOutput) Elem() RequiredPermissionsResponseOutput {
	return o.ApplyT(func(v *RequiredPermissionsResponse) RequiredPermissionsResponse {
		if v != nil {
			return *v
		}
		var ret RequiredPermissionsResponse
		return ret
	}).(RequiredPermissionsResponseOutput)
}

// action permission
func (o RequiredPermissionsResponsePtrOutput) Action() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *RequiredPermissionsResponse) *bool {
		if v == nil {
			return nil
		}
		return v.Action
	}).(pulumi.BoolPtrOutput)
}

// delete permission
func (o RequiredPermissionsResponsePtrOutput) Delete() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *RequiredPermissionsResponse) *bool {
		if v == nil {
			return nil
		}
		return v.Delete
	}).(pulumi.BoolPtrOutput)
}

// read permission
func (o RequiredPermissionsResponsePtrOutput) Read() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *RequiredPermissionsResponse) *bool {
		if v == nil {
			return nil
		}
		return v.Read
	}).(pulumi.BoolPtrOutput)
}

// write permission
func (o RequiredPermissionsResponsePtrOutput) Write() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *RequiredPermissionsResponse) *bool {
		if v == nil {
			return nil
		}
		return v.Write
	}).(pulumi.BoolPtrOutput)
}

// Represents security alert timeline item.
type SecurityAlertTimelineItemResponse struct {
	// The name of the alert type.
	AlertType string `pulumi:"alertType"`
	// The alert azure resource id.
	AzureResourceId string `pulumi:"azureResourceId"`
	// The alert description.
	Description *string `pulumi:"description"`
	// The alert name.
	DisplayName string `pulumi:"displayName"`
	// The alert end time.
	EndTimeUtc string `pulumi:"endTimeUtc"`
	// The entity query kind
	// Expected value is 'SecurityAlert'.
	Kind string `pulumi:"kind"`
	// The alert product name.
	ProductName *string `pulumi:"productName"`
	// The alert severity.
	Severity string `pulumi:"severity"`
	// The alert start time.
	StartTimeUtc string `pulumi:"startTimeUtc"`
	// The alert generated time.
	TimeGenerated string `pulumi:"timeGenerated"`
}

// Metadata pertaining to creation and last modification of the resource.
type SystemDataResponse struct {
	// The timestamp of resource creation (UTC).
	CreatedAt *string `pulumi:"createdAt"`
	// The identity that created the resource.
	CreatedBy *string `pulumi:"createdBy"`
	// The type of identity that created the resource.
	CreatedByType *string `pulumi:"createdByType"`
	// The timestamp of resource last modification (UTC)
	LastModifiedAt *string `pulumi:"lastModifiedAt"`
	// The identity that last modified the resource.
	LastModifiedBy *string `pulumi:"lastModifiedBy"`
	// The type of identity that last modified the resource.
	LastModifiedByType *string `pulumi:"lastModifiedByType"`
}

// Metadata pertaining to creation and last modification of the resource.
type SystemDataResponseOutput struct{ *pulumi.OutputState }

func (SystemDataResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemDataResponse)(nil)).Elem()
}

func (o SystemDataResponseOutput) ToSystemDataResponseOutput() SystemDataResponseOutput {
	return o
}

func (o SystemDataResponseOutput) ToSystemDataResponseOutputWithContext(ctx context.Context) SystemDataResponseOutput {
	return o
}

// The timestamp of resource creation (UTC).
func (o SystemDataResponseOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedAt }).(pulumi.StringPtrOutput)
}

// The identity that created the resource.
func (o SystemDataResponseOutput) CreatedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedBy }).(pulumi.StringPtrOutput)
}

// The type of identity that created the resource.
func (o SystemDataResponseOutput) CreatedByType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedByType }).(pulumi.StringPtrOutput)
}

// The timestamp of resource last modification (UTC)
func (o SystemDataResponseOutput) LastModifiedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedAt }).(pulumi.StringPtrOutput)
}

// The identity that last modified the resource.
func (o SystemDataResponseOutput) LastModifiedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedBy }).(pulumi.StringPtrOutput)
}

// The type of identity that last modified the resource.
func (o SystemDataResponseOutput) LastModifiedByType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedByType }).(pulumi.StringPtrOutput)
}

// The available data types for TI (Threat Intelligence) data connector.
type TIDataConnectorDataTypes struct {
	// Data type for indicators connection.
	Indicators TIDataConnectorDataTypesIndicators `pulumi:"indicators"`
}

// Data type for indicators connection.
type TIDataConnectorDataTypesIndicators struct {
	// Describe whether this data type connection is enabled or not.
	State string `pulumi:"state"`
}

// The available data types for TI (Threat Intelligence) data connector.
type TIDataConnectorDataTypesResponse struct {
	// Data type for indicators connection.
	Indicators TIDataConnectorDataTypesResponseIndicators `pulumi:"indicators"`
}

// The available data types for TI (Threat Intelligence) data connector.
type TIDataConnectorDataTypesResponseOutput struct{ *pulumi.OutputState }

func (TIDataConnectorDataTypesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TIDataConnectorDataTypesResponse)(nil)).Elem()
}

func (o TIDataConnectorDataTypesResponseOutput) ToTIDataConnectorDataTypesResponseOutput() TIDataConnectorDataTypesResponseOutput {
	return o
}

func (o TIDataConnectorDataTypesResponseOutput) ToTIDataConnectorDataTypesResponseOutputWithContext(ctx context.Context) TIDataConnectorDataTypesResponseOutput {
	return o
}

// Data type for indicators connection.
func (o TIDataConnectorDataTypesResponseOutput) Indicators() TIDataConnectorDataTypesResponseIndicatorsOutput {
	return o.ApplyT(func(v TIDataConnectorDataTypesResponse) TIDataConnectorDataTypesResponseIndicators {
		return v.Indicators
	}).(TIDataConnectorDataTypesResponseIndicatorsOutput)
}

// Data type for indicators connection.
type TIDataConnectorDataTypesResponseIndicators struct {
	// Describe whether this data type connection is enabled or not.
	State string `pulumi:"state"`
}

// Data type for indicators connection.
type TIDataConnectorDataTypesResponseIndicatorsOutput struct{ *pulumi.OutputState }

func (TIDataConnectorDataTypesResponseIndicatorsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TIDataConnectorDataTypesResponseIndicators)(nil)).Elem()
}

func (o TIDataConnectorDataTypesResponseIndicatorsOutput) ToTIDataConnectorDataTypesResponseIndicatorsOutput() TIDataConnectorDataTypesResponseIndicatorsOutput {
	return o
}

func (o TIDataConnectorDataTypesResponseIndicatorsOutput) ToTIDataConnectorDataTypesResponseIndicatorsOutputWithContext(ctx context.Context) TIDataConnectorDataTypesResponseIndicatorsOutput {
	return o
}

// Describe whether this data type connection is enabled or not.
func (o TIDataConnectorDataTypesResponseIndicatorsOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v TIDataConnectorDataTypesResponseIndicators) string { return v.State }).(pulumi.StringOutput)
}

// Describes external reference
type ThreatIntelligenceExternalReference struct {
	// External reference description
	Description *string `pulumi:"description"`
	// External reference ID
	ExternalId *string `pulumi:"externalId"`
	// External reference hashes
	Hashes map[string]string `pulumi:"hashes"`
	// External reference source name
	SourceName *string `pulumi:"sourceName"`
	// External reference URL
	Url *string `pulumi:"url"`
}

// ThreatIntelligenceExternalReferenceInput is an input type that accepts ThreatIntelligenceExternalReferenceArgs and ThreatIntelligenceExternalReferenceOutput values.
// You can construct a concrete instance of `ThreatIntelligenceExternalReferenceInput` via:
//
//	ThreatIntelligenceExternalReferenceArgs{...}
type ThreatIntelligenceExternalReferenceInput interface {
	pulumi.Input

	ToThreatIntelligenceExternalReferenceOutput() ThreatIntelligenceExternalReferenceOutput
	ToThreatIntelligenceExternalReferenceOutputWithContext(context.Context) ThreatIntelligenceExternalReferenceOutput
}

// Describes external reference
type ThreatIntelligenceExternalReferenceArgs struct {
	// External reference description
	Description pulumi.StringPtrInput `pulumi:"description"`
	// External reference ID
	ExternalId pulumi.StringPtrInput `pulumi:"externalId"`
	// External reference hashes
	Hashes pulumi.StringMapInput `pulumi:"hashes"`
	// External reference source name
	SourceName pulumi.StringPtrInput `pulumi:"sourceName"`
	// External reference URL
	Url pulumi.StringPtrInput `pulumi:"url"`
}

func (ThreatIntelligenceExternalReferenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ThreatIntelligenceExternalReference)(nil)).Elem()
}

func (i ThreatIntelligenceExternalReferenceArgs) ToThreatIntelligenceExternalReferenceOutput() ThreatIntelligenceExternalReferenceOutput {
	return i.ToThreatIntelligenceExternalReferenceOutputWithContext(context.Background())
}

func (i ThreatIntelligenceExternalReferenceArgs) ToThreatIntelligenceExternalReferenceOutputWithContext(ctx context.Context) ThreatIntelligenceExternalReferenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ThreatIntelligenceExternalReferenceOutput)
}

// ThreatIntelligenceExternalReferenceArrayInput is an input type that accepts ThreatIntelligenceExternalReferenceArray and ThreatIntelligenceExternalReferenceArrayOutput values.
// You can construct a concrete instance of `ThreatIntelligenceExternalReferenceArrayInput` via:
//
//	ThreatIntelligenceExternalReferenceArray{ ThreatIntelligenceExternalReferenceArgs{...} }
type ThreatIntelligenceExternalReferenceArrayInput interface {
	pulumi.Input

	ToThreatIntelligenceExternalReferenceArrayOutput() ThreatIntelligenceExternalReferenceArrayOutput
	ToThreatIntelligenceExternalReferenceArrayOutputWithContext(context.Context) ThreatIntelligenceExternalReferenceArrayOutput
}

type ThreatIntelligenceExternalReferenceArray []ThreatIntelligenceExternalReferenceInput

func (ThreatIntelligenceExternalReferenceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ThreatIntelligenceExternalReference)(nil)).Elem()
}

func (i ThreatIntelligenceExternalReferenceArray) ToThreatIntelligenceExternalReferenceArrayOutput() ThreatIntelligenceExternalReferenceArrayOutput {
	return i.ToThreatIntelligenceExternalReferenceArrayOutputWithContext(context.Background())
}

func (i ThreatIntelligenceExternalReferenceArray) ToThreatIntelligenceExternalReferenceArrayOutputWithContext(ctx context.Context) ThreatIntelligenceExternalReferenceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ThreatIntelligenceExternalReferenceArrayOutput)
}

// Describes external reference
type ThreatIntelligenceExternalReferenceOutput struct{ *pulumi.OutputState }

func (ThreatIntelligenceExternalReferenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ThreatIntelligenceExternalReference)(nil)).Elem()
}

func (o ThreatIntelligenceExternalReferenceOutput) ToThreatIntelligenceExternalReferenceOutput() ThreatIntelligenceExternalReferenceOutput {
	return o
}

func (o ThreatIntelligenceExternalReferenceOutput) ToThreatIntelligenceExternalReferenceOutputWithContext(ctx context.Context) ThreatIntelligenceExternalReferenceOutput {
	return o
}

// External reference description
func (o ThreatIntelligenceExternalReferenceOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ThreatIntelligenceExternalReference) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// External reference ID
func (o ThreatIntelligenceExternalReferenceOutput) ExternalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ThreatIntelligenceExternalReference) *string { return v.ExternalId }).(pulumi.StringPtrOutput)
}

// External reference hashes
func (o ThreatIntelligenceExternalReferenceOutput) Hashes() pulumi.StringMapOutput {
	return o.ApplyT(func(v ThreatIntelligenceExternalReference) map[string]string { return v.Hashes }).(pulumi.StringMapOutput)
}

// External reference source name
func (o ThreatIntelligenceExternalReferenceOutput) SourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ThreatIntelligenceExternalReference) *string { return v.SourceName }).(pulumi.StringPtrOutput)
}

// External reference URL
func (o ThreatIntelligenceExternalReferenceOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ThreatIntelligenceExternalReference) *string { return v.Url }).(pulumi.StringPtrOutput)
}

type ThreatIntelligenceExternalReferenceArrayOutput struct{ *pulumi.OutputState }

func (ThreatIntelligenceExternalReferenceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ThreatIntelligenceExternalReference)(nil)).Elem()
}

func (o ThreatIntelligenceExternalReferenceArrayOutput) ToThreatIntelligenceExternalReferenceArrayOutput() ThreatIntelligenceExternalReferenceArrayOutput {
	return o
}

func (o ThreatIntelligenceExternalReferenceArrayOutput) ToThreatIntelligenceExternalReferenceArrayOutputWithContext(ctx context.Context) ThreatIntelligenceExternalReferenceArrayOutput {
	return o
}

func (o ThreatIntelligenceExternalReferenceArrayOutput) Index(i pulumi.IntInput) ThreatIntelligenceExternalReferenceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ThreatIntelligenceExternalReference {
		return vs[0].([]ThreatIntelligenceExternalReference)[vs[1].(int)]
	}).(ThreatIntelligenceExternalReferenceOutput)
}

// Describes threat granular marking model entity
type ThreatIntelligenceGranularMarkingModel struct {
	// Language granular marking model
	Language *string `pulumi:"language"`
	// marking reference granular marking model
	MarkingRef *int `pulumi:"markingRef"`
	// granular marking model selectors
	Selectors []string `pulumi:"selectors"`
}

// ThreatIntelligenceGranularMarkingModelInput is an input type that accepts ThreatIntelligenceGranularMarkingModelArgs and ThreatIntelligenceGranularMarkingModelOutput values.
// You can construct a concrete instance of `ThreatIntelligenceGranularMarkingModelInput` via:
//
//	ThreatIntelligenceGranularMarkingModelArgs{...}
type ThreatIntelligenceGranularMarkingModelInput interface {
	pulumi.Input

	ToThreatIntelligenceGranularMarkingModelOutput() ThreatIntelligenceGranularMarkingModelOutput
	ToThreatIntelligenceGranularMarkingModelOutputWithContext(context.Context) ThreatIntelligenceGranularMarkingModelOutput
}

// Describes threat granular marking model entity
type ThreatIntelligenceGranularMarkingModelArgs struct {
	// Language granular marking model
	Language pulumi.StringPtrInput `pulumi:"language"`
	// marking reference granular marking model
	MarkingRef pulumi.IntPtrInput `pulumi:"markingRef"`
	// granular marking model selectors
	Selectors pulumi.StringArrayInput `pulumi:"selectors"`
}

func (ThreatIntelligenceGranularMarkingModelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ThreatIntelligenceGranularMarkingModel)(nil)).Elem()
}

func (i ThreatIntelligenceGranularMarkingModelArgs) ToThreatIntelligenceGranularMarkingModelOutput() ThreatIntelligenceGranularMarkingModelOutput {
	return i.ToThreatIntelligenceGranularMarkingModelOutputWithContext(context.Background())
}

func (i ThreatIntelligenceGranularMarkingModelArgs) ToThreatIntelligenceGranularMarkingModelOutputWithContext(ctx context.Context) ThreatIntelligenceGranularMarkingModelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ThreatIntelligenceGranularMarkingModelOutput)
}

// ThreatIntelligenceGranularMarkingModelArrayInput is an input type that accepts ThreatIntelligenceGranularMarkingModelArray and ThreatIntelligenceGranularMarkingModelArrayOutput values.
// You can construct a concrete instance of `ThreatIntelligenceGranularMarkingModelArrayInput` via:
//
//	ThreatIntelligenceGranularMarkingModelArray{ ThreatIntelligenceGranularMarkingModelArgs{...} }
type ThreatIntelligenceGranularMarkingModelArrayInput interface {
	pulumi.Input

	ToThreatIntelligenceGranularMarkingModelArrayOutput() ThreatIntelligenceGranularMarkingModelArrayOutput
	ToThreatIntelligenceGranularMarkingModelArrayOutputWithContext(context.Context) ThreatIntelligenceGranularMarkingModelArrayOutput
}

type ThreatIntelligenceGranularMarkingModelArray []ThreatIntelligenceGranularMarkingModelInput

func (ThreatIntelligenceGranularMarkingModelArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ThreatIntelligenceGranularMarkingModel)(nil)).Elem()
}

func (i ThreatIntelligenceGranularMarkingModelArray) ToThreatIntelligenceGranularMarkingModelArrayOutput() ThreatIntelligenceGranularMarkingModelArrayOutput {
	return i.ToThreatIntelligenceGranularMarkingModelArrayOutputWithContext(context.Background())
}

func (i ThreatIntelligenceGranularMarkingModelArray) ToThreatIntelligenceGranularMarkingModelArrayOutputWithContext(ctx context.Context) ThreatIntelligenceGranularMarkingModelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ThreatIntelligenceGranularMarkingModelArrayOutput)
}

// Describes threat granular marking model entity
type ThreatIntelligenceGranularMarkingModelOutput struct{ *pulumi.OutputState }

func (ThreatIntelligenceGranularMarkingModelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ThreatIntelligenceGranularMarkingModel)(nil)).Elem()
}

func (o ThreatIntelligenceGranularMarkingModelOutput) ToThreatIntelligenceGranularMarkingModelOutput() ThreatIntelligenceGranularMarkingModelOutput {
	return o
}

func (o ThreatIntelligenceGranularMarkingModelOutput) ToThreatIntelligenceGranularMarkingModelOutputWithContext(ctx context.Context) ThreatIntelligenceGranularMarkingModelOutput {
	return o
}

// Language granular marking model
func (o ThreatIntelligenceGranularMarkingModelOutput) Language() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ThreatIntelligenceGranularMarkingModel) *string { return v.Language }).(pulumi.StringPtrOutput)
}

// marking reference granular marking model
func (o ThreatIntelligenceGranularMarkingModelOutput) MarkingRef() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ThreatIntelligenceGranularMarkingModel) *int { return v.MarkingRef }).(pulumi.IntPtrOutput)
}

// granular marking model selectors
func (o ThreatIntelligenceGranularMarkingModelOutput) Selectors() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ThreatIntelligenceGranularMarkingModel) []string { return v.Selectors }).(pulumi.StringArrayOutput)
}

type ThreatIntelligenceGranularMarkingModelArrayOutput struct{ *pulumi.OutputState }

func (ThreatIntelligenceGranularMarkingModelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ThreatIntelligenceGranularMarkingModel)(nil)).Elem()
}

func (o ThreatIntelligenceGranularMarkingModelArrayOutput) ToThreatIntelligenceGranularMarkingModelArrayOutput() ThreatIntelligenceGranularMarkingModelArrayOutput {
	return o
}

func (o ThreatIntelligenceGranularMarkingModelArrayOutput) ToThreatIntelligenceGranularMarkingModelArrayOutputWithContext(ctx context.Context) ThreatIntelligenceGranularMarkingModelArrayOutput {
	return o
}

func (o ThreatIntelligenceGranularMarkingModelArrayOutput) Index(i pulumi.IntInput) ThreatIntelligenceGranularMarkingModelOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ThreatIntelligenceGranularMarkingModel {
		return vs[0].([]ThreatIntelligenceGranularMarkingModel)[vs[1].(int)]
	}).(ThreatIntelligenceGranularMarkingModelOutput)
}

// Describes threat kill chain phase entity
type ThreatIntelligenceKillChainPhase struct {
	// Kill chainName name
	KillChainName *string `pulumi:"killChainName"`
	// Phase name
	PhaseName *string `pulumi:"phaseName"`
}

// ThreatIntelligenceKillChainPhaseInput is an input type that accepts ThreatIntelligenceKillChainPhaseArgs and ThreatIntelligenceKillChainPhaseOutput values.
// You can construct a concrete instance of `ThreatIntelligenceKillChainPhaseInput` via:
//
//	ThreatIntelligenceKillChainPhaseArgs{...}
type ThreatIntelligenceKillChainPhaseInput interface {
	pulumi.Input

	ToThreatIntelligenceKillChainPhaseOutput() ThreatIntelligenceKillChainPhaseOutput
	ToThreatIntelligenceKillChainPhaseOutputWithContext(context.Context) ThreatIntelligenceKillChainPhaseOutput
}

// Describes threat kill chain phase entity
type ThreatIntelligenceKillChainPhaseArgs struct {
	// Kill chainName name
	KillChainName pulumi.StringPtrInput `pulumi:"killChainName"`
	// Phase name
	PhaseName pulumi.StringPtrInput `pulumi:"phaseName"`
}

func (ThreatIntelligenceKillChainPhaseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ThreatIntelligenceKillChainPhase)(nil)).Elem()
}

func (i ThreatIntelligenceKillChainPhaseArgs) ToThreatIntelligenceKillChainPhaseOutput() ThreatIntelligenceKillChainPhaseOutput {
	return i.ToThreatIntelligenceKillChainPhaseOutputWithContext(context.Background())
}

func (i ThreatIntelligenceKillChainPhaseArgs) ToThreatIntelligenceKillChainPhaseOutputWithContext(ctx context.Context) ThreatIntelligenceKillChainPhaseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ThreatIntelligenceKillChainPhaseOutput)
}

// ThreatIntelligenceKillChainPhaseArrayInput is an input type that accepts ThreatIntelligenceKillChainPhaseArray and ThreatIntelligenceKillChainPhaseArrayOutput values.
// You can construct a concrete instance of `ThreatIntelligenceKillChainPhaseArrayInput` via:
//
//	ThreatIntelligenceKillChainPhaseArray{ ThreatIntelligenceKillChainPhaseArgs{...} }
type ThreatIntelligenceKillChainPhaseArrayInput interface {
	pulumi.Input

	ToThreatIntelligenceKillChainPhaseArrayOutput() ThreatIntelligenceKillChainPhaseArrayOutput
	ToThreatIntelligenceKillChainPhaseArrayOutputWithContext(context.Context) ThreatIntelligenceKillChainPhaseArrayOutput
}

type ThreatIntelligenceKillChainPhaseArray []ThreatIntelligenceKillChainPhaseInput

func (ThreatIntelligenceKillChainPhaseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ThreatIntelligenceKillChainPhase)(nil)).Elem()
}

func (i ThreatIntelligenceKillChainPhaseArray) ToThreatIntelligenceKillChainPhaseArrayOutput() ThreatIntelligenceKillChainPhaseArrayOutput {
	return i.ToThreatIntelligenceKillChainPhaseArrayOutputWithContext(context.Background())
}

func (i ThreatIntelligenceKillChainPhaseArray) ToThreatIntelligenceKillChainPhaseArrayOutputWithContext(ctx context.Context) ThreatIntelligenceKillChainPhaseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ThreatIntelligenceKillChainPhaseArrayOutput)
}

// Describes threat kill chain phase entity
type ThreatIntelligenceKillChainPhaseOutput struct{ *pulumi.OutputState }

func (ThreatIntelligenceKillChainPhaseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ThreatIntelligenceKillChainPhase)(nil)).Elem()
}

func (o ThreatIntelligenceKillChainPhaseOutput) ToThreatIntelligenceKillChainPhaseOutput() ThreatIntelligenceKillChainPhaseOutput {
	return o
}

func (o ThreatIntelligenceKillChainPhaseOutput) ToThreatIntelligenceKillChainPhaseOutputWithContext(ctx context.Context) ThreatIntelligenceKillChainPhaseOutput {
	return o
}

// Kill chainName name
func (o ThreatIntelligenceKillChainPhaseOutput) KillChainName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ThreatIntelligenceKillChainPhase) *string { return v.KillChainName }).(pulumi.StringPtrOutput)
}

// Phase name
func (o ThreatIntelligenceKillChainPhaseOutput) PhaseName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ThreatIntelligenceKillChainPhase) *string { return v.PhaseName }).(pulumi.StringPtrOutput)
}

type ThreatIntelligenceKillChainPhaseArrayOutput struct{ *pulumi.OutputState }

func (ThreatIntelligenceKillChainPhaseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ThreatIntelligenceKillChainPhase)(nil)).Elem()
}

func (o ThreatIntelligenceKillChainPhaseArrayOutput) ToThreatIntelligenceKillChainPhaseArrayOutput() ThreatIntelligenceKillChainPhaseArrayOutput {
	return o
}

func (o ThreatIntelligenceKillChainPhaseArrayOutput) ToThreatIntelligenceKillChainPhaseArrayOutputWithContext(ctx context.Context) ThreatIntelligenceKillChainPhaseArrayOutput {
	return o
}

func (o ThreatIntelligenceKillChainPhaseArrayOutput) Index(i pulumi.IntInput) ThreatIntelligenceKillChainPhaseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ThreatIntelligenceKillChainPhase {
		return vs[0].([]ThreatIntelligenceKillChainPhase)[vs[1].(int)]
	}).(ThreatIntelligenceKillChainPhaseOutput)
}

// Describes parsed pattern entity
type ThreatIntelligenceParsedPattern struct {
	// Pattern type key
	PatternTypeKey *string `pulumi:"patternTypeKey"`
	// Pattern type keys
	PatternTypeValues []ThreatIntelligenceParsedPatternTypeValue `pulumi:"patternTypeValues"`
}

// ThreatIntelligenceParsedPatternInput is an input type that accepts ThreatIntelligenceParsedPatternArgs and ThreatIntelligenceParsedPatternOutput values.
// You can construct a concrete instance of `ThreatIntelligenceParsedPatternInput` via:
//
//	ThreatIntelligenceParsedPatternArgs{...}
type ThreatIntelligenceParsedPatternInput interface {
	pulumi.Input

	ToThreatIntelligenceParsedPatternOutput() ThreatIntelligenceParsedPatternOutput
	ToThreatIntelligenceParsedPatternOutputWithContext(context.Context) ThreatIntelligenceParsedPatternOutput
}

// Describes parsed pattern entity
type ThreatIntelligenceParsedPatternArgs struct {
	// Pattern type key
	PatternTypeKey pulumi.StringPtrInput `pulumi:"patternTypeKey"`
	// Pattern type keys
	PatternTypeValues ThreatIntelligenceParsedPatternTypeValueArrayInput `pulumi:"patternTypeValues"`
}

func (ThreatIntelligenceParsedPatternArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ThreatIntelligenceParsedPattern)(nil)).Elem()
}

func (i ThreatIntelligenceParsedPatternArgs) ToThreatIntelligenceParsedPatternOutput() ThreatIntelligenceParsedPatternOutput {
	return i.ToThreatIntelligenceParsedPatternOutputWithContext(context.Background())
}

func (i ThreatIntelligenceParsedPatternArgs) ToThreatIntelligenceParsedPatternOutputWithContext(ctx context.Context) ThreatIntelligenceParsedPatternOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ThreatIntelligenceParsedPatternOutput)
}

// ThreatIntelligenceParsedPatternArrayInput is an input type that accepts ThreatIntelligenceParsedPatternArray and ThreatIntelligenceParsedPatternArrayOutput values.
// You can construct a concrete instance of `ThreatIntelligenceParsedPatternArrayInput` via:
//
//	ThreatIntelligenceParsedPatternArray{ ThreatIntelligenceParsedPatternArgs{...} }
type ThreatIntelligenceParsedPatternArrayInput interface {
	pulumi.Input

	ToThreatIntelligenceParsedPatternArrayOutput() ThreatIntelligenceParsedPatternArrayOutput
	ToThreatIntelligenceParsedPatternArrayOutputWithContext(context.Context) ThreatIntelligenceParsedPatternArrayOutput
}

type ThreatIntelligenceParsedPatternArray []ThreatIntelligenceParsedPatternInput

func (ThreatIntelligenceParsedPatternArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ThreatIntelligenceParsedPattern)(nil)).Elem()
}

func (i ThreatIntelligenceParsedPatternArray) ToThreatIntelligenceParsedPatternArrayOutput() ThreatIntelligenceParsedPatternArrayOutput {
	return i.ToThreatIntelligenceParsedPatternArrayOutputWithContext(context.Background())
}

func (i ThreatIntelligenceParsedPatternArray) ToThreatIntelligenceParsedPatternArrayOutputWithContext(ctx context.Context) ThreatIntelligenceParsedPatternArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ThreatIntelligenceParsedPatternArrayOutput)
}

// Describes parsed pattern entity
type ThreatIntelligenceParsedPatternOutput struct{ *pulumi.OutputState }

func (ThreatIntelligenceParsedPatternOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ThreatIntelligenceParsedPattern)(nil)).Elem()
}

func (o ThreatIntelligenceParsedPatternOutput) ToThreatIntelligenceParsedPatternOutput() ThreatIntelligenceParsedPatternOutput {
	return o
}

func (o ThreatIntelligenceParsedPatternOutput) ToThreatIntelligenceParsedPatternOutputWithContext(ctx context.Context) ThreatIntelligenceParsedPatternOutput {
	return o
}

// Pattern type key
func (o ThreatIntelligenceParsedPatternOutput) PatternTypeKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ThreatIntelligenceParsedPattern) *string { return v.PatternTypeKey }).(pulumi.StringPtrOutput)
}

// Pattern type keys
func (o ThreatIntelligenceParsedPatternOutput) PatternTypeValues() ThreatIntelligenceParsedPatternTypeValueArrayOutput {
	return o.ApplyT(func(v ThreatIntelligenceParsedPattern) []ThreatIntelligenceParsedPatternTypeValue {
		return v.PatternTypeValues
	}).(ThreatIntelligenceParsedPatternTypeValueArrayOutput)
}

type ThreatIntelligenceParsedPatternArrayOutput struct{ *pulumi.OutputState }

func (ThreatIntelligenceParsedPatternArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ThreatIntelligenceParsedPattern)(nil)).Elem()
}

func (o ThreatIntelligenceParsedPatternArrayOutput) ToThreatIntelligenceParsedPatternArrayOutput() ThreatIntelligenceParsedPatternArrayOutput {
	return o
}

func (o ThreatIntelligenceParsedPatternArrayOutput) ToThreatIntelligenceParsedPatternArrayOutputWithContext(ctx context.Context) ThreatIntelligenceParsedPatternArrayOutput {
	return o
}

func (o ThreatIntelligenceParsedPatternArrayOutput) Index(i pulumi.IntInput) ThreatIntelligenceParsedPatternOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ThreatIntelligenceParsedPattern {
		return vs[0].([]ThreatIntelligenceParsedPattern)[vs[1].(int)]
	}).(ThreatIntelligenceParsedPatternOutput)
}

// Describes threat kill chain phase entity
type ThreatIntelligenceParsedPatternTypeValue struct {
	// Value of parsed pattern
	Value *string `pulumi:"value"`
	// Type of the value
	ValueType *string `pulumi:"valueType"`
}

// ThreatIntelligenceParsedPatternTypeValueInput is an input type that accepts ThreatIntelligenceParsedPatternTypeValueArgs and ThreatIntelligenceParsedPatternTypeValueOutput values.
// You can construct a concrete instance of `ThreatIntelligenceParsedPatternTypeValueInput` via:
//
//	ThreatIntelligenceParsedPatternTypeValueArgs{...}
type ThreatIntelligenceParsedPatternTypeValueInput interface {
	pulumi.Input

	ToThreatIntelligenceParsedPatternTypeValueOutput() ThreatIntelligenceParsedPatternTypeValueOutput
	ToThreatIntelligenceParsedPatternTypeValueOutputWithContext(context.Context) ThreatIntelligenceParsedPatternTypeValueOutput
}

// Describes threat kill chain phase entity
type ThreatIntelligenceParsedPatternTypeValueArgs struct {
	// Value of parsed pattern
	Value pulumi.StringPtrInput `pulumi:"value"`
	// Type of the value
	ValueType pulumi.StringPtrInput `pulumi:"valueType"`
}

func (ThreatIntelligenceParsedPatternTypeValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ThreatIntelligenceParsedPatternTypeValue)(nil)).Elem()
}

func (i ThreatIntelligenceParsedPatternTypeValueArgs) ToThreatIntelligenceParsedPatternTypeValueOutput() ThreatIntelligenceParsedPatternTypeValueOutput {
	return i.ToThreatIntelligenceParsedPatternTypeValueOutputWithContext(context.Background())
}

func (i ThreatIntelligenceParsedPatternTypeValueArgs) ToThreatIntelligenceParsedPatternTypeValueOutputWithContext(ctx context.Context) ThreatIntelligenceParsedPatternTypeValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ThreatIntelligenceParsedPatternTypeValueOutput)
}

// ThreatIntelligenceParsedPatternTypeValueArrayInput is an input type that accepts ThreatIntelligenceParsedPatternTypeValueArray and ThreatIntelligenceParsedPatternTypeValueArrayOutput values.
// You can construct a concrete instance of `ThreatIntelligenceParsedPatternTypeValueArrayInput` via:
//
//	ThreatIntelligenceParsedPatternTypeValueArray{ ThreatIntelligenceParsedPatternTypeValueArgs{...} }
type ThreatIntelligenceParsedPatternTypeValueArrayInput interface {
	pulumi.Input

	ToThreatIntelligenceParsedPatternTypeValueArrayOutput() ThreatIntelligenceParsedPatternTypeValueArrayOutput
	ToThreatIntelligenceParsedPatternTypeValueArrayOutputWithContext(context.Context) ThreatIntelligenceParsedPatternTypeValueArrayOutput
}

type ThreatIntelligenceParsedPatternTypeValueArray []ThreatIntelligenceParsedPatternTypeValueInput

func (ThreatIntelligenceParsedPatternTypeValueArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ThreatIntelligenceParsedPatternTypeValue)(nil)).Elem()
}

func (i ThreatIntelligenceParsedPatternTypeValueArray) ToThreatIntelligenceParsedPatternTypeValueArrayOutput() ThreatIntelligenceParsedPatternTypeValueArrayOutput {
	return i.ToThreatIntelligenceParsedPatternTypeValueArrayOutputWithContext(context.Background())
}

func (i ThreatIntelligenceParsedPatternTypeValueArray) ToThreatIntelligenceParsedPatternTypeValueArrayOutputWithContext(ctx context.Context) ThreatIntelligenceParsedPatternTypeValueArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ThreatIntelligenceParsedPatternTypeValueArrayOutput)
}

// Describes threat kill chain phase entity
type ThreatIntelligenceParsedPatternTypeValueOutput struct{ *pulumi.OutputState }

func (ThreatIntelligenceParsedPatternTypeValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ThreatIntelligenceParsedPatternTypeValue)(nil)).Elem()
}

func (o ThreatIntelligenceParsedPatternTypeValueOutput) ToThreatIntelligenceParsedPatternTypeValueOutput() ThreatIntelligenceParsedPatternTypeValueOutput {
	return o
}

func (o ThreatIntelligenceParsedPatternTypeValueOutput) ToThreatIntelligenceParsedPatternTypeValueOutputWithContext(ctx context.Context) ThreatIntelligenceParsedPatternTypeValueOutput {
	return o
}

// Value of parsed pattern
func (o ThreatIntelligenceParsedPatternTypeValueOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ThreatIntelligenceParsedPatternTypeValue) *string { return v.Value }).(pulumi.StringPtrOutput)
}

// Type of the value
func (o ThreatIntelligenceParsedPatternTypeValueOutput) ValueType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ThreatIntelligenceParsedPatternTypeValue) *string { return v.ValueType }).(pulumi.StringPtrOutput)
}

type ThreatIntelligenceParsedPatternTypeValueArrayOutput struct{ *pulumi.OutputState }

func (ThreatIntelligenceParsedPatternTypeValueArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ThreatIntelligenceParsedPatternTypeValue)(nil)).Elem()
}

func (o ThreatIntelligenceParsedPatternTypeValueArrayOutput) ToThreatIntelligenceParsedPatternTypeValueArrayOutput() ThreatIntelligenceParsedPatternTypeValueArrayOutput {
	return o
}

func (o ThreatIntelligenceParsedPatternTypeValueArrayOutput) ToThreatIntelligenceParsedPatternTypeValueArrayOutputWithContext(ctx context.Context) ThreatIntelligenceParsedPatternTypeValueArrayOutput {
	return o
}

func (o ThreatIntelligenceParsedPatternTypeValueArrayOutput) Index(i pulumi.IntInput) ThreatIntelligenceParsedPatternTypeValueOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ThreatIntelligenceParsedPatternTypeValue {
		return vs[0].([]ThreatIntelligenceParsedPatternTypeValue)[vs[1].(int)]
	}).(ThreatIntelligenceParsedPatternTypeValueOutput)
}

// The available data types for Threat Intelligence TAXII data connector.
type TiTaxiiDataConnectorDataTypes struct {
	// Data type for TAXII connector.
	TaxiiClient TiTaxiiDataConnectorDataTypesTaxiiClient `pulumi:"taxiiClient"`
}

// The available data types for Threat Intelligence TAXII data connector.
type TiTaxiiDataConnectorDataTypesResponse struct {
	// Data type for TAXII connector.
	TaxiiClient TiTaxiiDataConnectorDataTypesResponseTaxiiClient `pulumi:"taxiiClient"`
}

// The available data types for Threat Intelligence TAXII data connector.
type TiTaxiiDataConnectorDataTypesResponseOutput struct{ *pulumi.OutputState }

func (TiTaxiiDataConnectorDataTypesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TiTaxiiDataConnectorDataTypesResponse)(nil)).Elem()
}

func (o TiTaxiiDataConnectorDataTypesResponseOutput) ToTiTaxiiDataConnectorDataTypesResponseOutput() TiTaxiiDataConnectorDataTypesResponseOutput {
	return o
}

func (o TiTaxiiDataConnectorDataTypesResponseOutput) ToTiTaxiiDataConnectorDataTypesResponseOutputWithContext(ctx context.Context) TiTaxiiDataConnectorDataTypesResponseOutput {
	return o
}

// Data type for TAXII connector.
func (o TiTaxiiDataConnectorDataTypesResponseOutput) TaxiiClient() TiTaxiiDataConnectorDataTypesResponseTaxiiClientOutput {
	return o.ApplyT(func(v TiTaxiiDataConnectorDataTypesResponse) TiTaxiiDataConnectorDataTypesResponseTaxiiClient {
		return v.TaxiiClient
	}).(TiTaxiiDataConnectorDataTypesResponseTaxiiClientOutput)
}

// Data type for TAXII connector.
type TiTaxiiDataConnectorDataTypesResponseTaxiiClient struct {
	// Describe whether this data type connection is enabled or not.
	State string `pulumi:"state"`
}

// Data type for TAXII connector.
type TiTaxiiDataConnectorDataTypesResponseTaxiiClientOutput struct{ *pulumi.OutputState }

func (TiTaxiiDataConnectorDataTypesResponseTaxiiClientOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TiTaxiiDataConnectorDataTypesResponseTaxiiClient)(nil)).Elem()
}

func (o TiTaxiiDataConnectorDataTypesResponseTaxiiClientOutput) ToTiTaxiiDataConnectorDataTypesResponseTaxiiClientOutput() TiTaxiiDataConnectorDataTypesResponseTaxiiClientOutput {
	return o
}

func (o TiTaxiiDataConnectorDataTypesResponseTaxiiClientOutput) ToTiTaxiiDataConnectorDataTypesResponseTaxiiClientOutputWithContext(ctx context.Context) TiTaxiiDataConnectorDataTypesResponseTaxiiClientOutput {
	return o
}

// Describe whether this data type connection is enabled or not.
func (o TiTaxiiDataConnectorDataTypesResponseTaxiiClientOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v TiTaxiiDataConnectorDataTypesResponseTaxiiClient) string { return v.State }).(pulumi.StringOutput)
}

// Data type for TAXII connector.
type TiTaxiiDataConnectorDataTypesTaxiiClient struct {
	// Describe whether this data type connection is enabled or not.
	State string `pulumi:"state"`
}

// timeline aggregation information per kind
type TimelineAggregationResponse struct {
	// the total items found for a kind
	Count int `pulumi:"count"`
	// the query kind
	Kind string `pulumi:"kind"`
}

// timeline aggregation information per kind
type TimelineAggregationResponseOutput struct{ *pulumi.OutputState }

func (TimelineAggregationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TimelineAggregationResponse)(nil)).Elem()
}

func (o TimelineAggregationResponseOutput) ToTimelineAggregationResponseOutput() TimelineAggregationResponseOutput {
	return o
}

func (o TimelineAggregationResponseOutput) ToTimelineAggregationResponseOutputWithContext(ctx context.Context) TimelineAggregationResponseOutput {
	return o
}

// the total items found for a kind
func (o TimelineAggregationResponseOutput) Count() pulumi.IntOutput {
	return o.ApplyT(func(v TimelineAggregationResponse) int { return v.Count }).(pulumi.IntOutput)
}

// the query kind
func (o TimelineAggregationResponseOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v TimelineAggregationResponse) string { return v.Kind }).(pulumi.StringOutput)
}

type TimelineAggregationResponseArrayOutput struct{ *pulumi.OutputState }

func (TimelineAggregationResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TimelineAggregationResponse)(nil)).Elem()
}

func (o TimelineAggregationResponseArrayOutput) ToTimelineAggregationResponseArrayOutput() TimelineAggregationResponseArrayOutput {
	return o
}

func (o TimelineAggregationResponseArrayOutput) ToTimelineAggregationResponseArrayOutputWithContext(ctx context.Context) TimelineAggregationResponseArrayOutput {
	return o
}

func (o TimelineAggregationResponseArrayOutput) Index(i pulumi.IntInput) TimelineAggregationResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TimelineAggregationResponse {
		return vs[0].([]TimelineAggregationResponse)[vs[1].(int)]
	}).(TimelineAggregationResponseOutput)
}

// Timeline Query Errors.
type TimelineErrorResponse struct {
	// the error message
	ErrorMessage string `pulumi:"errorMessage"`
	// the query kind
	Kind string `pulumi:"kind"`
	// the query id
	QueryId *string `pulumi:"queryId"`
}

// Timeline Query Errors.
type TimelineErrorResponseOutput struct{ *pulumi.OutputState }

func (TimelineErrorResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TimelineErrorResponse)(nil)).Elem()
}

func (o TimelineErrorResponseOutput) ToTimelineErrorResponseOutput() TimelineErrorResponseOutput {
	return o
}

func (o TimelineErrorResponseOutput) ToTimelineErrorResponseOutputWithContext(ctx context.Context) TimelineErrorResponseOutput {
	return o
}

// the error message
func (o TimelineErrorResponseOutput) ErrorMessage() pulumi.StringOutput {
	return o.ApplyT(func(v TimelineErrorResponse) string { return v.ErrorMessage }).(pulumi.StringOutput)
}

// the query kind
func (o TimelineErrorResponseOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v TimelineErrorResponse) string { return v.Kind }).(pulumi.StringOutput)
}

// the query id
func (o TimelineErrorResponseOutput) QueryId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TimelineErrorResponse) *string { return v.QueryId }).(pulumi.StringPtrOutput)
}

type TimelineErrorResponseArrayOutput struct{ *pulumi.OutputState }

func (TimelineErrorResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TimelineErrorResponse)(nil)).Elem()
}

func (o TimelineErrorResponseArrayOutput) ToTimelineErrorResponseArrayOutput() TimelineErrorResponseArrayOutput {
	return o
}

func (o TimelineErrorResponseArrayOutput) ToTimelineErrorResponseArrayOutputWithContext(ctx context.Context) TimelineErrorResponseArrayOutput {
	return o
}

func (o TimelineErrorResponseArrayOutput) Index(i pulumi.IntInput) TimelineErrorResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TimelineErrorResponse {
		return vs[0].([]TimelineErrorResponse)[vs[1].(int)]
	}).(TimelineErrorResponseOutput)
}

// Expansion result metadata.
type TimelineResultsMetadataResponse struct {
	// timeline aggregation per kind
	Aggregations []TimelineAggregationResponse `pulumi:"aggregations"`
	// information about the failure queries
	Errors []TimelineErrorResponse `pulumi:"errors"`
	// the total items found for the timeline request
	TotalCount int `pulumi:"totalCount"`
}

// Expansion result metadata.
type TimelineResultsMetadataResponseOutput struct{ *pulumi.OutputState }

func (TimelineResultsMetadataResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TimelineResultsMetadataResponse)(nil)).Elem()
}

func (o TimelineResultsMetadataResponseOutput) ToTimelineResultsMetadataResponseOutput() TimelineResultsMetadataResponseOutput {
	return o
}

func (o TimelineResultsMetadataResponseOutput) ToTimelineResultsMetadataResponseOutputWithContext(ctx context.Context) TimelineResultsMetadataResponseOutput {
	return o
}

// timeline aggregation per kind
func (o TimelineResultsMetadataResponseOutput) Aggregations() TimelineAggregationResponseArrayOutput {
	return o.ApplyT(func(v TimelineResultsMetadataResponse) []TimelineAggregationResponse { return v.Aggregations }).(TimelineAggregationResponseArrayOutput)
}

// information about the failure queries
func (o TimelineResultsMetadataResponseOutput) Errors() TimelineErrorResponseArrayOutput {
	return o.ApplyT(func(v TimelineResultsMetadataResponse) []TimelineErrorResponse { return v.Errors }).(TimelineErrorResponseArrayOutput)
}

// the total items found for the timeline request
func (o TimelineResultsMetadataResponseOutput) TotalCount() pulumi.IntOutput {
	return o.ApplyT(func(v TimelineResultsMetadataResponse) int { return v.TotalCount }).(pulumi.IntOutput)
}

type TimelineResultsMetadataResponsePtrOutput struct{ *pulumi.OutputState }

func (TimelineResultsMetadataResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TimelineResultsMetadataResponse)(nil)).Elem()
}

func (o TimelineResultsMetadataResponsePtrOutput) ToTimelineResultsMetadataResponsePtrOutput() TimelineResultsMetadataResponsePtrOutput {
	return o
}

func (o TimelineResultsMetadataResponsePtrOutput) ToTimelineResultsMetadataResponsePtrOutputWithContext(ctx context.Context) TimelineResultsMetadataResponsePtrOutput {
	return o
}

func (o TimelineResultsMetadataResponsePtrOutput) Elem() TimelineResultsMetadataResponseOutput {
	return o.ApplyT(func(v *TimelineResultsMetadataResponse) TimelineResultsMetadataResponse {
		if v != nil {
			return *v
		}
		var ret TimelineResultsMetadataResponse
		return ret
	}).(TimelineResultsMetadataResponseOutput)
}

// timeline aggregation per kind
func (o TimelineResultsMetadataResponsePtrOutput) Aggregations() TimelineAggregationResponseArrayOutput {
	return o.ApplyT(func(v *TimelineResultsMetadataResponse) []TimelineAggregationResponse {
		if v == nil {
			return nil
		}
		return v.Aggregations
	}).(TimelineAggregationResponseArrayOutput)
}

// information about the failure queries
func (o TimelineResultsMetadataResponsePtrOutput) Errors() TimelineErrorResponseArrayOutput {
	return o.ApplyT(func(v *TimelineResultsMetadataResponse) []TimelineErrorResponse {
		if v == nil {
			return nil
		}
		return v.Errors
	}).(TimelineErrorResponseArrayOutput)
}

// the total items found for the timeline request
func (o TimelineResultsMetadataResponsePtrOutput) TotalCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TimelineResultsMetadataResponse) *int {
		if v == nil {
			return nil
		}
		return &v.TotalCount
	}).(pulumi.IntPtrOutput)
}

// User information that made some action
type UserInfoResponse struct {
	// The email of the user.
	Email string `pulumi:"email"`
	// The name of the user.
	Name string `pulumi:"name"`
	// The object id of the user.
	ObjectId *string `pulumi:"objectId"`
}

func init() {
	pulumi.RegisterOutputType(ActivityEntityQueriesPropertiesResponseQueryDefinitionsOutput{})
	pulumi.RegisterOutputType(ActivityEntityQueriesPropertiesResponseQueryDefinitionsPtrOutput{})
	pulumi.RegisterOutputType(AlertDetailsOverrideResponseOutput{})
	pulumi.RegisterOutputType(AlertDetailsOverrideResponsePtrOutput{})
	pulumi.RegisterOutputType(AlertsDataTypeOfDataConnectorResponseOutput{})
	pulumi.RegisterOutputType(AlertsDataTypeOfDataConnectorResponsePtrOutput{})
	pulumi.RegisterOutputType(AvailabilityResponseOutput{})
	pulumi.RegisterOutputType(AvailabilityResponsePtrOutput{})
	pulumi.RegisterOutputType(AwsCloudTrailDataConnectorDataTypesResponseOutput{})
	pulumi.RegisterOutputType(AwsCloudTrailDataConnectorDataTypesResponseLogsOutput{})
	pulumi.RegisterOutputType(AwsS3DataConnectorDataTypesResponseOutput{})
	pulumi.RegisterOutputType(AwsS3DataConnectorDataTypesResponseLogsOutput{})
	pulumi.RegisterOutputType(CodelessConnectorPollingAuthPropertiesResponseOutput{})
	pulumi.RegisterOutputType(CodelessConnectorPollingAuthPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(CodelessConnectorPollingConfigPropertiesResponseOutput{})
	pulumi.RegisterOutputType(CodelessConnectorPollingConfigPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(CodelessConnectorPollingPagingPropertiesResponseOutput{})
	pulumi.RegisterOutputType(CodelessConnectorPollingPagingPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(CodelessConnectorPollingRequestPropertiesResponseOutput{})
	pulumi.RegisterOutputType(CodelessConnectorPollingRequestPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(CodelessConnectorPollingResponsePropertiesResponseOutput{})
	pulumi.RegisterOutputType(CodelessConnectorPollingResponsePropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(CodelessUiConnectorConfigPropertiesResponseOutput{})
	pulumi.RegisterOutputType(CodelessUiConnectorConfigPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(CodelessUiConnectorConfigPropertiesResponseConnectivityCriteriaOutput{})
	pulumi.RegisterOutputType(CodelessUiConnectorConfigPropertiesResponseConnectivityCriteriaArrayOutput{})
	pulumi.RegisterOutputType(CodelessUiConnectorConfigPropertiesResponseDataTypesOutput{})
	pulumi.RegisterOutputType(CodelessUiConnectorConfigPropertiesResponseDataTypesArrayOutput{})
	pulumi.RegisterOutputType(CodelessUiConnectorConfigPropertiesResponseGraphQueriesOutput{})
	pulumi.RegisterOutputType(CodelessUiConnectorConfigPropertiesResponseGraphQueriesArrayOutput{})
	pulumi.RegisterOutputType(CodelessUiConnectorConfigPropertiesResponseInstructionStepsOutput{})
	pulumi.RegisterOutputType(CodelessUiConnectorConfigPropertiesResponseInstructionStepsArrayOutput{})
	pulumi.RegisterOutputType(CodelessUiConnectorConfigPropertiesResponseSampleQueriesOutput{})
	pulumi.RegisterOutputType(CodelessUiConnectorConfigPropertiesResponseSampleQueriesArrayOutput{})
	pulumi.RegisterOutputType(DataConnectorDataTypeCommonResponseOutput{})
	pulumi.RegisterOutputType(DataConnectorDataTypeCommonResponsePtrOutput{})
	pulumi.RegisterOutputType(Dynamics365DataConnectorDataTypesResponseOutput{})
	pulumi.RegisterOutputType(Dynamics365DataConnectorDataTypesResponseDynamics365CdsActivitiesOutput{})
	pulumi.RegisterOutputType(EntityInsightItemResponseOutput{})
	pulumi.RegisterOutputType(EntityInsightItemResponseArrayOutput{})
	pulumi.RegisterOutputType(EntityInsightItemResponseQueryTimeIntervalOutput{})
	pulumi.RegisterOutputType(EntityInsightItemResponseQueryTimeIntervalPtrOutput{})
	pulumi.RegisterOutputType(EntityMappingResponseOutput{})
	pulumi.RegisterOutputType(EntityMappingResponseArrayOutput{})
	pulumi.RegisterOutputType(EventGroupingSettingsResponseOutput{})
	pulumi.RegisterOutputType(EventGroupingSettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(FieldMappingResponseOutput{})
	pulumi.RegisterOutputType(FieldMappingResponseArrayOutput{})
	pulumi.RegisterOutputType(GetInsightsErrorResponseOutput{})
	pulumi.RegisterOutputType(GetInsightsErrorResponseArrayOutput{})
	pulumi.RegisterOutputType(GetInsightsResultsMetadataResponseOutput{})
	pulumi.RegisterOutputType(GetInsightsResultsMetadataResponsePtrOutput{})
	pulumi.RegisterOutputType(GroupingConfigurationResponseOutput{})
	pulumi.RegisterOutputType(GroupingConfigurationResponsePtrOutput{})
	pulumi.RegisterOutputType(IncidentConfigurationResponseOutput{})
	pulumi.RegisterOutputType(IncidentConfigurationResponsePtrOutput{})
	pulumi.RegisterOutputType(InsightsTableResultResponseOutput{})
	pulumi.RegisterOutputType(InsightsTableResultResponsePtrOutput{})
	pulumi.RegisterOutputType(InsightsTableResultResponseArrayOutput{})
	pulumi.RegisterOutputType(InsightsTableResultResponseColumnsOutput{})
	pulumi.RegisterOutputType(InsightsTableResultResponseColumnsArrayOutput{})
	pulumi.RegisterOutputType(InstructionStepsResponseInstructionsOutput{})
	pulumi.RegisterOutputType(InstructionStepsResponseInstructionsArrayOutput{})
	pulumi.RegisterOutputType(MCASDataConnectorDataTypesResponseOutput{})
	pulumi.RegisterOutputType(MSTIDataConnectorDataTypesResponseOutput{})
	pulumi.RegisterOutputType(MSTIDataConnectorDataTypesResponseBingSafetyPhishingURLOutput{})
	pulumi.RegisterOutputType(MSTIDataConnectorDataTypesResponseMicrosoftEmergingThreatFeedOutput{})
	pulumi.RegisterOutputType(MTPDataConnectorDataTypesResponseOutput{})
	pulumi.RegisterOutputType(MTPDataConnectorDataTypesResponseIncidentsOutput{})
	pulumi.RegisterOutputType(OfficeDataConnectorDataTypesResponseOutput{})
	pulumi.RegisterOutputType(OfficeDataConnectorDataTypesResponseExchangeOutput{})
	pulumi.RegisterOutputType(OfficeDataConnectorDataTypesResponseSharePointOutput{})
	pulumi.RegisterOutputType(OfficeDataConnectorDataTypesResponseTeamsOutput{})
	pulumi.RegisterOutputType(PermissionsResponseOutput{})
	pulumi.RegisterOutputType(PermissionsResponsePtrOutput{})
	pulumi.RegisterOutputType(PermissionsResponseCustomsOutput{})
	pulumi.RegisterOutputType(PermissionsResponseCustomsArrayOutput{})
	pulumi.RegisterOutputType(PermissionsResponseResourceProviderOutput{})
	pulumi.RegisterOutputType(PermissionsResponseResourceProviderArrayOutput{})
	pulumi.RegisterOutputType(RepoResponseOutput{})
	pulumi.RegisterOutputType(RepoResponseArrayOutput{})
	pulumi.RegisterOutputType(RequiredPermissionsResponseOutput{})
	pulumi.RegisterOutputType(RequiredPermissionsResponsePtrOutput{})
	pulumi.RegisterOutputType(SystemDataResponseOutput{})
	pulumi.RegisterOutputType(TIDataConnectorDataTypesResponseOutput{})
	pulumi.RegisterOutputType(TIDataConnectorDataTypesResponseIndicatorsOutput{})
	pulumi.RegisterOutputType(ThreatIntelligenceExternalReferenceOutput{})
	pulumi.RegisterOutputType(ThreatIntelligenceExternalReferenceArrayOutput{})
	pulumi.RegisterOutputType(ThreatIntelligenceGranularMarkingModelOutput{})
	pulumi.RegisterOutputType(ThreatIntelligenceGranularMarkingModelArrayOutput{})
	pulumi.RegisterOutputType(ThreatIntelligenceKillChainPhaseOutput{})
	pulumi.RegisterOutputType(ThreatIntelligenceKillChainPhaseArrayOutput{})
	pulumi.RegisterOutputType(ThreatIntelligenceParsedPatternOutput{})
	pulumi.RegisterOutputType(ThreatIntelligenceParsedPatternArrayOutput{})
	pulumi.RegisterOutputType(ThreatIntelligenceParsedPatternTypeValueOutput{})
	pulumi.RegisterOutputType(ThreatIntelligenceParsedPatternTypeValueArrayOutput{})
	pulumi.RegisterOutputType(TiTaxiiDataConnectorDataTypesResponseOutput{})
	pulumi.RegisterOutputType(TiTaxiiDataConnectorDataTypesResponseTaxiiClientOutput{})
	pulumi.RegisterOutputType(TimelineAggregationResponseOutput{})
	pulumi.RegisterOutputType(TimelineAggregationResponseArrayOutput{})
	pulumi.RegisterOutputType(TimelineErrorResponseOutput{})
	pulumi.RegisterOutputType(TimelineErrorResponseArrayOutput{})
	pulumi.RegisterOutputType(TimelineResultsMetadataResponseOutput{})
	pulumi.RegisterOutputType(TimelineResultsMetadataResponsePtrOutput{})
}
