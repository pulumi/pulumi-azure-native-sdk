// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20230201preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The Activity query definitions
type ActivityEntityQueriesPropertiesQueryDefinitions struct {
	// The Activity query to run on a given entity
	Query *string `pulumi:"query"`
}

// The Activity query definitions
type ActivityEntityQueriesPropertiesResponseQueryDefinitions struct {
	// The Activity query to run on a given entity
	Query *string `pulumi:"query"`
}

// The Activity query definitions
type ActivityEntityQueriesPropertiesResponseQueryDefinitionsOutput struct{ *pulumi.OutputState }

func (ActivityEntityQueriesPropertiesResponseQueryDefinitionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ActivityEntityQueriesPropertiesResponseQueryDefinitions)(nil)).Elem()
}

func (o ActivityEntityQueriesPropertiesResponseQueryDefinitionsOutput) ToActivityEntityQueriesPropertiesResponseQueryDefinitionsOutput() ActivityEntityQueriesPropertiesResponseQueryDefinitionsOutput {
	return o
}

func (o ActivityEntityQueriesPropertiesResponseQueryDefinitionsOutput) ToActivityEntityQueriesPropertiesResponseQueryDefinitionsOutputWithContext(ctx context.Context) ActivityEntityQueriesPropertiesResponseQueryDefinitionsOutput {
	return o
}

// The Activity query to run on a given entity
func (o ActivityEntityQueriesPropertiesResponseQueryDefinitionsOutput) Query() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ActivityEntityQueriesPropertiesResponseQueryDefinitions) *string { return v.Query }).(pulumi.StringPtrOutput)
}

type ActivityEntityQueriesPropertiesResponseQueryDefinitionsPtrOutput struct{ *pulumi.OutputState }

func (ActivityEntityQueriesPropertiesResponseQueryDefinitionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ActivityEntityQueriesPropertiesResponseQueryDefinitions)(nil)).Elem()
}

func (o ActivityEntityQueriesPropertiesResponseQueryDefinitionsPtrOutput) ToActivityEntityQueriesPropertiesResponseQueryDefinitionsPtrOutput() ActivityEntityQueriesPropertiesResponseQueryDefinitionsPtrOutput {
	return o
}

func (o ActivityEntityQueriesPropertiesResponseQueryDefinitionsPtrOutput) ToActivityEntityQueriesPropertiesResponseQueryDefinitionsPtrOutputWithContext(ctx context.Context) ActivityEntityQueriesPropertiesResponseQueryDefinitionsPtrOutput {
	return o
}

func (o ActivityEntityQueriesPropertiesResponseQueryDefinitionsPtrOutput) Elem() ActivityEntityQueriesPropertiesResponseQueryDefinitionsOutput {
	return o.ApplyT(func(v *ActivityEntityQueriesPropertiesResponseQueryDefinitions) ActivityEntityQueriesPropertiesResponseQueryDefinitions {
		if v != nil {
			return *v
		}
		var ret ActivityEntityQueriesPropertiesResponseQueryDefinitions
		return ret
	}).(ActivityEntityQueriesPropertiesResponseQueryDefinitionsOutput)
}

// The Activity query to run on a given entity
func (o ActivityEntityQueriesPropertiesResponseQueryDefinitionsPtrOutput) Query() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ActivityEntityQueriesPropertiesResponseQueryDefinitions) *string {
		if v == nil {
			return nil
		}
		return v.Query
	}).(pulumi.StringPtrOutput)
}

// Represents Activity timeline item.
type ActivityTimelineItemResponse struct {
	// The grouping bucket end time.
	BucketEndTimeUTC string `pulumi:"bucketEndTimeUTC"`
	// The grouping bucket start time.
	BucketStartTimeUTC string `pulumi:"bucketStartTimeUTC"`
	// The activity timeline content.
	Content string `pulumi:"content"`
	// The time of the first activity in the grouping bucket.
	FirstActivityTimeUTC string `pulumi:"firstActivityTimeUTC"`
	// The entity query kind
	// Expected value is 'Activity'.
	Kind string `pulumi:"kind"`
	// The time of the last activity in the grouping bucket.
	LastActivityTimeUTC string `pulumi:"lastActivityTimeUTC"`
	// The activity query id.
	QueryId string `pulumi:"queryId"`
	// The activity timeline title.
	Title string `pulumi:"title"`
}

// Settings for how to dynamically override alert static details
type AlertDetailsOverride struct {
	// the format containing columns name(s) to override the alert description
	AlertDescriptionFormat *string `pulumi:"alertDescriptionFormat"`
	// the format containing columns name(s) to override the alert name
	AlertDisplayNameFormat *string `pulumi:"alertDisplayNameFormat"`
	// List of additional dynamic properties to override
	AlertDynamicProperties []AlertPropertyMapping `pulumi:"alertDynamicProperties"`
	// the column name to take the alert severity from
	AlertSeverityColumnName *string `pulumi:"alertSeverityColumnName"`
	// the column name to take the alert tactics from
	AlertTacticsColumnName *string `pulumi:"alertTacticsColumnName"`
}

// Settings for how to dynamically override alert static details
type AlertDetailsOverrideResponse struct {
	// the format containing columns name(s) to override the alert description
	AlertDescriptionFormat *string `pulumi:"alertDescriptionFormat"`
	// the format containing columns name(s) to override the alert name
	AlertDisplayNameFormat *string `pulumi:"alertDisplayNameFormat"`
	// List of additional dynamic properties to override
	AlertDynamicProperties []AlertPropertyMappingResponse `pulumi:"alertDynamicProperties"`
	// the column name to take the alert severity from
	AlertSeverityColumnName *string `pulumi:"alertSeverityColumnName"`
	// the column name to take the alert tactics from
	AlertTacticsColumnName *string `pulumi:"alertTacticsColumnName"`
}

// Settings for how to dynamically override alert static details
type AlertDetailsOverrideResponseOutput struct{ *pulumi.OutputState }

func (AlertDetailsOverrideResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertDetailsOverrideResponse)(nil)).Elem()
}

func (o AlertDetailsOverrideResponseOutput) ToAlertDetailsOverrideResponseOutput() AlertDetailsOverrideResponseOutput {
	return o
}

func (o AlertDetailsOverrideResponseOutput) ToAlertDetailsOverrideResponseOutputWithContext(ctx context.Context) AlertDetailsOverrideResponseOutput {
	return o
}

// the format containing columns name(s) to override the alert description
func (o AlertDetailsOverrideResponseOutput) AlertDescriptionFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertDetailsOverrideResponse) *string { return v.AlertDescriptionFormat }).(pulumi.StringPtrOutput)
}

// the format containing columns name(s) to override the alert name
func (o AlertDetailsOverrideResponseOutput) AlertDisplayNameFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertDetailsOverrideResponse) *string { return v.AlertDisplayNameFormat }).(pulumi.StringPtrOutput)
}

// List of additional dynamic properties to override
func (o AlertDetailsOverrideResponseOutput) AlertDynamicProperties() AlertPropertyMappingResponseArrayOutput {
	return o.ApplyT(func(v AlertDetailsOverrideResponse) []AlertPropertyMappingResponse { return v.AlertDynamicProperties }).(AlertPropertyMappingResponseArrayOutput)
}

// the column name to take the alert severity from
func (o AlertDetailsOverrideResponseOutput) AlertSeverityColumnName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertDetailsOverrideResponse) *string { return v.AlertSeverityColumnName }).(pulumi.StringPtrOutput)
}

// the column name to take the alert tactics from
func (o AlertDetailsOverrideResponseOutput) AlertTacticsColumnName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertDetailsOverrideResponse) *string { return v.AlertTacticsColumnName }).(pulumi.StringPtrOutput)
}

type AlertDetailsOverrideResponsePtrOutput struct{ *pulumi.OutputState }

func (AlertDetailsOverrideResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AlertDetailsOverrideResponse)(nil)).Elem()
}

func (o AlertDetailsOverrideResponsePtrOutput) ToAlertDetailsOverrideResponsePtrOutput() AlertDetailsOverrideResponsePtrOutput {
	return o
}

func (o AlertDetailsOverrideResponsePtrOutput) ToAlertDetailsOverrideResponsePtrOutputWithContext(ctx context.Context) AlertDetailsOverrideResponsePtrOutput {
	return o
}

func (o AlertDetailsOverrideResponsePtrOutput) Elem() AlertDetailsOverrideResponseOutput {
	return o.ApplyT(func(v *AlertDetailsOverrideResponse) AlertDetailsOverrideResponse {
		if v != nil {
			return *v
		}
		var ret AlertDetailsOverrideResponse
		return ret
	}).(AlertDetailsOverrideResponseOutput)
}

// the format containing columns name(s) to override the alert description
func (o AlertDetailsOverrideResponsePtrOutput) AlertDescriptionFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AlertDetailsOverrideResponse) *string {
		if v == nil {
			return nil
		}
		return v.AlertDescriptionFormat
	}).(pulumi.StringPtrOutput)
}

// the format containing columns name(s) to override the alert name
func (o AlertDetailsOverrideResponsePtrOutput) AlertDisplayNameFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AlertDetailsOverrideResponse) *string {
		if v == nil {
			return nil
		}
		return v.AlertDisplayNameFormat
	}).(pulumi.StringPtrOutput)
}

// List of additional dynamic properties to override
func (o AlertDetailsOverrideResponsePtrOutput) AlertDynamicProperties() AlertPropertyMappingResponseArrayOutput {
	return o.ApplyT(func(v *AlertDetailsOverrideResponse) []AlertPropertyMappingResponse {
		if v == nil {
			return nil
		}
		return v.AlertDynamicProperties
	}).(AlertPropertyMappingResponseArrayOutput)
}

// the column name to take the alert severity from
func (o AlertDetailsOverrideResponsePtrOutput) AlertSeverityColumnName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AlertDetailsOverrideResponse) *string {
		if v == nil {
			return nil
		}
		return v.AlertSeverityColumnName
	}).(pulumi.StringPtrOutput)
}

// the column name to take the alert tactics from
func (o AlertDetailsOverrideResponsePtrOutput) AlertTacticsColumnName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AlertDetailsOverrideResponse) *string {
		if v == nil {
			return nil
		}
		return v.AlertTacticsColumnName
	}).(pulumi.StringPtrOutput)
}

// A single alert property mapping to override
type AlertPropertyMapping struct {
	// The V3 alert property
	AlertProperty *string `pulumi:"alertProperty"`
	// the column name to use to override this property
	Value *string `pulumi:"value"`
}

// A single alert property mapping to override
type AlertPropertyMappingResponse struct {
	// The V3 alert property
	AlertProperty *string `pulumi:"alertProperty"`
	// the column name to use to override this property
	Value *string `pulumi:"value"`
}

// A single alert property mapping to override
type AlertPropertyMappingResponseOutput struct{ *pulumi.OutputState }

func (AlertPropertyMappingResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertPropertyMappingResponse)(nil)).Elem()
}

func (o AlertPropertyMappingResponseOutput) ToAlertPropertyMappingResponseOutput() AlertPropertyMappingResponseOutput {
	return o
}

func (o AlertPropertyMappingResponseOutput) ToAlertPropertyMappingResponseOutputWithContext(ctx context.Context) AlertPropertyMappingResponseOutput {
	return o
}

// The V3 alert property
func (o AlertPropertyMappingResponseOutput) AlertProperty() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertPropertyMappingResponse) *string { return v.AlertProperty }).(pulumi.StringPtrOutput)
}

// the column name to use to override this property
func (o AlertPropertyMappingResponseOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertPropertyMappingResponse) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type AlertPropertyMappingResponseArrayOutput struct{ *pulumi.OutputState }

func (AlertPropertyMappingResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AlertPropertyMappingResponse)(nil)).Elem()
}

func (o AlertPropertyMappingResponseArrayOutput) ToAlertPropertyMappingResponseArrayOutput() AlertPropertyMappingResponseArrayOutput {
	return o
}

func (o AlertPropertyMappingResponseArrayOutput) ToAlertPropertyMappingResponseArrayOutputWithContext(ctx context.Context) AlertPropertyMappingResponseArrayOutput {
	return o
}

func (o AlertPropertyMappingResponseArrayOutput) Index(i pulumi.IntInput) AlertPropertyMappingResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AlertPropertyMappingResponse {
		return vs[0].([]AlertPropertyMappingResponse)[vs[1].(int)]
	}).(AlertPropertyMappingResponseOutput)
}

// Alerts data type for data connectors.
type AlertsDataTypeOfDataConnector struct {
	// Alerts data type connection.
	Alerts DataConnectorDataTypeCommon `pulumi:"alerts"`
}

// Alerts data type for data connectors.
type AlertsDataTypeOfDataConnectorResponse struct {
	// Alerts data type connection.
	Alerts DataConnectorDataTypeCommonResponse `pulumi:"alerts"`
}

// Alerts data type for data connectors.
type AlertsDataTypeOfDataConnectorResponseOutput struct{ *pulumi.OutputState }

func (AlertsDataTypeOfDataConnectorResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertsDataTypeOfDataConnectorResponse)(nil)).Elem()
}

func (o AlertsDataTypeOfDataConnectorResponseOutput) ToAlertsDataTypeOfDataConnectorResponseOutput() AlertsDataTypeOfDataConnectorResponseOutput {
	return o
}

func (o AlertsDataTypeOfDataConnectorResponseOutput) ToAlertsDataTypeOfDataConnectorResponseOutputWithContext(ctx context.Context) AlertsDataTypeOfDataConnectorResponseOutput {
	return o
}

// Alerts data type connection.
func (o AlertsDataTypeOfDataConnectorResponseOutput) Alerts() DataConnectorDataTypeCommonResponseOutput {
	return o.ApplyT(func(v AlertsDataTypeOfDataConnectorResponse) DataConnectorDataTypeCommonResponse { return v.Alerts }).(DataConnectorDataTypeCommonResponseOutput)
}

type AlertsDataTypeOfDataConnectorResponsePtrOutput struct{ *pulumi.OutputState }

func (AlertsDataTypeOfDataConnectorResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AlertsDataTypeOfDataConnectorResponse)(nil)).Elem()
}

func (o AlertsDataTypeOfDataConnectorResponsePtrOutput) ToAlertsDataTypeOfDataConnectorResponsePtrOutput() AlertsDataTypeOfDataConnectorResponsePtrOutput {
	return o
}

func (o AlertsDataTypeOfDataConnectorResponsePtrOutput) ToAlertsDataTypeOfDataConnectorResponsePtrOutputWithContext(ctx context.Context) AlertsDataTypeOfDataConnectorResponsePtrOutput {
	return o
}

func (o AlertsDataTypeOfDataConnectorResponsePtrOutput) Elem() AlertsDataTypeOfDataConnectorResponseOutput {
	return o.ApplyT(func(v *AlertsDataTypeOfDataConnectorResponse) AlertsDataTypeOfDataConnectorResponse {
		if v != nil {
			return *v
		}
		var ret AlertsDataTypeOfDataConnectorResponse
		return ret
	}).(AlertsDataTypeOfDataConnectorResponseOutput)
}

// Alerts data type connection.
func (o AlertsDataTypeOfDataConnectorResponsePtrOutput) Alerts() DataConnectorDataTypeCommonResponsePtrOutput {
	return o.ApplyT(func(v *AlertsDataTypeOfDataConnectorResponse) *DataConnectorDataTypeCommonResponse {
		if v == nil {
			return nil
		}
		return &v.Alerts
	}).(DataConnectorDataTypeCommonResponsePtrOutput)
}

// Represents anomaly timeline item.
type AnomalyTimelineItemResponse struct {
	// The anomaly azure resource id.
	AzureResourceId string `pulumi:"azureResourceId"`
	// The anomaly description.
	Description *string `pulumi:"description"`
	// The anomaly name.
	DisplayName string `pulumi:"displayName"`
	// The anomaly end time.
	EndTimeUtc string `pulumi:"endTimeUtc"`
	// The intent of the anomaly.
	Intent *string `pulumi:"intent"`
	// The entity query kind
	// Expected value is 'Anomaly'.
	Kind string `pulumi:"kind"`
	// The anomaly product name.
	ProductName *string `pulumi:"productName"`
	// The reasons that cause the anomaly.
	Reasons []string `pulumi:"reasons"`
	// The anomaly start time.
	StartTimeUtc string `pulumi:"startTimeUtc"`
	// The techniques of the anomaly.
	Techniques []string `pulumi:"techniques"`
	// The anomaly generated time.
	TimeGenerated string `pulumi:"timeGenerated"`
	// The name of the anomaly vendor.
	Vendor *string `pulumi:"vendor"`
}

// Connector Availability Status
type Availability struct {
	// Set connector as preview
	IsPreview *bool `pulumi:"isPreview"`
	// The connector Availability Status
	Status *int `pulumi:"status"`
}

// Connector Availability Status
type AvailabilityResponse struct {
	// Set connector as preview
	IsPreview *bool `pulumi:"isPreview"`
	// The connector Availability Status
	Status *int `pulumi:"status"`
}

// Connector Availability Status
type AvailabilityResponseOutput struct{ *pulumi.OutputState }

func (AvailabilityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AvailabilityResponse)(nil)).Elem()
}

func (o AvailabilityResponseOutput) ToAvailabilityResponseOutput() AvailabilityResponseOutput {
	return o
}

func (o AvailabilityResponseOutput) ToAvailabilityResponseOutputWithContext(ctx context.Context) AvailabilityResponseOutput {
	return o
}

// Set connector as preview
func (o AvailabilityResponseOutput) IsPreview() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AvailabilityResponse) *bool { return v.IsPreview }).(pulumi.BoolPtrOutput)
}

// The connector Availability Status
func (o AvailabilityResponseOutput) Status() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AvailabilityResponse) *int { return v.Status }).(pulumi.IntPtrOutput)
}

type AvailabilityResponsePtrOutput struct{ *pulumi.OutputState }

func (AvailabilityResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AvailabilityResponse)(nil)).Elem()
}

func (o AvailabilityResponsePtrOutput) ToAvailabilityResponsePtrOutput() AvailabilityResponsePtrOutput {
	return o
}

func (o AvailabilityResponsePtrOutput) ToAvailabilityResponsePtrOutputWithContext(ctx context.Context) AvailabilityResponsePtrOutput {
	return o
}

func (o AvailabilityResponsePtrOutput) Elem() AvailabilityResponseOutput {
	return o.ApplyT(func(v *AvailabilityResponse) AvailabilityResponse {
		if v != nil {
			return *v
		}
		var ret AvailabilityResponse
		return ret
	}).(AvailabilityResponseOutput)
}

// Set connector as preview
func (o AvailabilityResponsePtrOutput) IsPreview() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AvailabilityResponse) *bool {
		if v == nil {
			return nil
		}
		return v.IsPreview
	}).(pulumi.BoolPtrOutput)
}

// The connector Availability Status
func (o AvailabilityResponsePtrOutput) Status() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AvailabilityResponse) *int {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.IntPtrOutput)
}

// The available data types for Amazon Web Services CloudTrail data connector.
type AwsCloudTrailDataConnectorDataTypes struct {
	// Logs data type.
	Logs AwsCloudTrailDataConnectorDataTypesLogs `pulumi:"logs"`
}

// Logs data type.
type AwsCloudTrailDataConnectorDataTypesLogs struct {
	// Describe whether this data type connection is enabled or not.
	State string `pulumi:"state"`
}

// The available data types for Amazon Web Services CloudTrail data connector.
type AwsCloudTrailDataConnectorDataTypesResponse struct {
	// Logs data type.
	Logs AwsCloudTrailDataConnectorDataTypesResponseLogs `pulumi:"logs"`
}

// The available data types for Amazon Web Services CloudTrail data connector.
type AwsCloudTrailDataConnectorDataTypesResponseOutput struct{ *pulumi.OutputState }

func (AwsCloudTrailDataConnectorDataTypesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AwsCloudTrailDataConnectorDataTypesResponse)(nil)).Elem()
}

func (o AwsCloudTrailDataConnectorDataTypesResponseOutput) ToAwsCloudTrailDataConnectorDataTypesResponseOutput() AwsCloudTrailDataConnectorDataTypesResponseOutput {
	return o
}

func (o AwsCloudTrailDataConnectorDataTypesResponseOutput) ToAwsCloudTrailDataConnectorDataTypesResponseOutputWithContext(ctx context.Context) AwsCloudTrailDataConnectorDataTypesResponseOutput {
	return o
}

// Logs data type.
func (o AwsCloudTrailDataConnectorDataTypesResponseOutput) Logs() AwsCloudTrailDataConnectorDataTypesResponseLogsOutput {
	return o.ApplyT(func(v AwsCloudTrailDataConnectorDataTypesResponse) AwsCloudTrailDataConnectorDataTypesResponseLogs {
		return v.Logs
	}).(AwsCloudTrailDataConnectorDataTypesResponseLogsOutput)
}

// Logs data type.
type AwsCloudTrailDataConnectorDataTypesResponseLogs struct {
	// Describe whether this data type connection is enabled or not.
	State string `pulumi:"state"`
}

// Logs data type.
type AwsCloudTrailDataConnectorDataTypesResponseLogsOutput struct{ *pulumi.OutputState }

func (AwsCloudTrailDataConnectorDataTypesResponseLogsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AwsCloudTrailDataConnectorDataTypesResponseLogs)(nil)).Elem()
}

func (o AwsCloudTrailDataConnectorDataTypesResponseLogsOutput) ToAwsCloudTrailDataConnectorDataTypesResponseLogsOutput() AwsCloudTrailDataConnectorDataTypesResponseLogsOutput {
	return o
}

func (o AwsCloudTrailDataConnectorDataTypesResponseLogsOutput) ToAwsCloudTrailDataConnectorDataTypesResponseLogsOutputWithContext(ctx context.Context) AwsCloudTrailDataConnectorDataTypesResponseLogsOutput {
	return o
}

// Describe whether this data type connection is enabled or not.
func (o AwsCloudTrailDataConnectorDataTypesResponseLogsOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v AwsCloudTrailDataConnectorDataTypesResponseLogs) string { return v.State }).(pulumi.StringOutput)
}

// The available data types for Amazon Web Services S3 data connector.
type AwsS3DataConnectorDataTypes struct {
	// Logs data type.
	Logs AwsS3DataConnectorDataTypesLogs `pulumi:"logs"`
}

// Logs data type.
type AwsS3DataConnectorDataTypesLogs struct {
	// Describe whether this data type connection is enabled or not.
	State string `pulumi:"state"`
}

// The available data types for Amazon Web Services S3 data connector.
type AwsS3DataConnectorDataTypesResponse struct {
	// Logs data type.
	Logs AwsS3DataConnectorDataTypesResponseLogs `pulumi:"logs"`
}

// The available data types for Amazon Web Services S3 data connector.
type AwsS3DataConnectorDataTypesResponseOutput struct{ *pulumi.OutputState }

func (AwsS3DataConnectorDataTypesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AwsS3DataConnectorDataTypesResponse)(nil)).Elem()
}

func (o AwsS3DataConnectorDataTypesResponseOutput) ToAwsS3DataConnectorDataTypesResponseOutput() AwsS3DataConnectorDataTypesResponseOutput {
	return o
}

func (o AwsS3DataConnectorDataTypesResponseOutput) ToAwsS3DataConnectorDataTypesResponseOutputWithContext(ctx context.Context) AwsS3DataConnectorDataTypesResponseOutput {
	return o
}

// Logs data type.
func (o AwsS3DataConnectorDataTypesResponseOutput) Logs() AwsS3DataConnectorDataTypesResponseLogsOutput {
	return o.ApplyT(func(v AwsS3DataConnectorDataTypesResponse) AwsS3DataConnectorDataTypesResponseLogs { return v.Logs }).(AwsS3DataConnectorDataTypesResponseLogsOutput)
}

// Logs data type.
type AwsS3DataConnectorDataTypesResponseLogs struct {
	// Describe whether this data type connection is enabled or not.
	State string `pulumi:"state"`
}

// Logs data type.
type AwsS3DataConnectorDataTypesResponseLogsOutput struct{ *pulumi.OutputState }

func (AwsS3DataConnectorDataTypesResponseLogsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AwsS3DataConnectorDataTypesResponseLogs)(nil)).Elem()
}

func (o AwsS3DataConnectorDataTypesResponseLogsOutput) ToAwsS3DataConnectorDataTypesResponseLogsOutput() AwsS3DataConnectorDataTypesResponseLogsOutput {
	return o
}

func (o AwsS3DataConnectorDataTypesResponseLogsOutput) ToAwsS3DataConnectorDataTypesResponseLogsOutputWithContext(ctx context.Context) AwsS3DataConnectorDataTypesResponseLogsOutput {
	return o
}

// Describe whether this data type connection is enabled or not.
func (o AwsS3DataConnectorDataTypesResponseLogsOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v AwsS3DataConnectorDataTypesResponseLogs) string { return v.State }).(pulumi.StringOutput)
}

// Represents bookmark timeline item.
type BookmarkTimelineItemResponse struct {
	// The bookmark azure resource id.
	AzureResourceId string `pulumi:"azureResourceId"`
	// Describes a user that created the bookmark
	CreatedBy *UserInfoResponse `pulumi:"createdBy"`
	// The bookmark display name.
	DisplayName *string `pulumi:"displayName"`
	// The bookmark end time.
	EndTimeUtc *string `pulumi:"endTimeUtc"`
	// The bookmark event time.
	EventTime *string `pulumi:"eventTime"`
	// The entity query kind
	// Expected value is 'Bookmark'.
	Kind string `pulumi:"kind"`
	// List of labels relevant to this bookmark
	Labels []string `pulumi:"labels"`
	// The notes of the bookmark
	Notes *string `pulumi:"notes"`
	// The bookmark start time.
	StartTimeUtc *string `pulumi:"startTimeUtc"`
}

// Describe the authentication properties needed to successfully authenticate with the server
type CodelessConnectorPollingAuthProperties struct {
	// A prefix send in the header before the actual token
	ApiKeyIdentifier *string `pulumi:"apiKeyIdentifier"`
	// The header name which the token is sent with
	ApiKeyName *string `pulumi:"apiKeyName"`
	// The authentication type
	AuthType string `pulumi:"authType"`
	// The endpoint used to authorize the user, used in Oauth 2.0 flow
	AuthorizationEndpoint *string `pulumi:"authorizationEndpoint"`
	// The query parameters used in authorization request, used in Oauth 2.0 flow
	AuthorizationEndpointQueryParameters interface{} `pulumi:"authorizationEndpointQueryParameters"`
	// Describes the flow name, for example 'AuthCode' for Oauth 2.0
	FlowName *string `pulumi:"flowName"`
	// Marks if the key should sent in header
	IsApiKeyInPostPayload *string `pulumi:"isApiKeyInPostPayload"`
	// Marks if we should send the client secret in header or payload, used in Oauth 2.0 flow
	IsClientSecretInHeader *bool `pulumi:"isClientSecretInHeader"`
	// The redirect endpoint where we will get the authorization code, used in Oauth 2.0 flow
	RedirectionEndpoint *string `pulumi:"redirectionEndpoint"`
	// The OAuth token scope
	Scope *string `pulumi:"scope"`
	// The endpoint used to issue a token, used in Oauth 2.0 flow
	TokenEndpoint *string `pulumi:"tokenEndpoint"`
	// The query headers used in token request, used in Oauth 2.0 flow
	TokenEndpointHeaders interface{} `pulumi:"tokenEndpointHeaders"`
	// The query parameters used in token request, used in Oauth 2.0 flow
	TokenEndpointQueryParameters interface{} `pulumi:"tokenEndpointQueryParameters"`
}

// Describe the authentication properties needed to successfully authenticate with the server
type CodelessConnectorPollingAuthPropertiesResponse struct {
	// A prefix send in the header before the actual token
	ApiKeyIdentifier *string `pulumi:"apiKeyIdentifier"`
	// The header name which the token is sent with
	ApiKeyName *string `pulumi:"apiKeyName"`
	// The authentication type
	AuthType string `pulumi:"authType"`
	// The endpoint used to authorize the user, used in Oauth 2.0 flow
	AuthorizationEndpoint *string `pulumi:"authorizationEndpoint"`
	// The query parameters used in authorization request, used in Oauth 2.0 flow
	AuthorizationEndpointQueryParameters interface{} `pulumi:"authorizationEndpointQueryParameters"`
	// Describes the flow name, for example 'AuthCode' for Oauth 2.0
	FlowName *string `pulumi:"flowName"`
	// Marks if the key should sent in header
	IsApiKeyInPostPayload *string `pulumi:"isApiKeyInPostPayload"`
	// Marks if we should send the client secret in header or payload, used in Oauth 2.0 flow
	IsClientSecretInHeader *bool `pulumi:"isClientSecretInHeader"`
	// The redirect endpoint where we will get the authorization code, used in Oauth 2.0 flow
	RedirectionEndpoint *string `pulumi:"redirectionEndpoint"`
	// The OAuth token scope
	Scope *string `pulumi:"scope"`
	// The endpoint used to issue a token, used in Oauth 2.0 flow
	TokenEndpoint *string `pulumi:"tokenEndpoint"`
	// The query headers used in token request, used in Oauth 2.0 flow
	TokenEndpointHeaders interface{} `pulumi:"tokenEndpointHeaders"`
	// The query parameters used in token request, used in Oauth 2.0 flow
	TokenEndpointQueryParameters interface{} `pulumi:"tokenEndpointQueryParameters"`
}

// Describe the authentication properties needed to successfully authenticate with the server
type CodelessConnectorPollingAuthPropertiesResponseOutput struct{ *pulumi.OutputState }

func (CodelessConnectorPollingAuthPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CodelessConnectorPollingAuthPropertiesResponse)(nil)).Elem()
}

func (o CodelessConnectorPollingAuthPropertiesResponseOutput) ToCodelessConnectorPollingAuthPropertiesResponseOutput() CodelessConnectorPollingAuthPropertiesResponseOutput {
	return o
}

func (o CodelessConnectorPollingAuthPropertiesResponseOutput) ToCodelessConnectorPollingAuthPropertiesResponseOutputWithContext(ctx context.Context) CodelessConnectorPollingAuthPropertiesResponseOutput {
	return o
}

// A prefix send in the header before the actual token
func (o CodelessConnectorPollingAuthPropertiesResponseOutput) ApiKeyIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CodelessConnectorPollingAuthPropertiesResponse) *string { return v.ApiKeyIdentifier }).(pulumi.StringPtrOutput)
}

// The header name which the token is sent with
func (o CodelessConnectorPollingAuthPropertiesResponseOutput) ApiKeyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CodelessConnectorPollingAuthPropertiesResponse) *string { return v.ApiKeyName }).(pulumi.StringPtrOutput)
}

// The authentication type
func (o CodelessConnectorPollingAuthPropertiesResponseOutput) AuthType() pulumi.StringOutput {
	return o.ApplyT(func(v CodelessConnectorPollingAuthPropertiesResponse) string { return v.AuthType }).(pulumi.StringOutput)
}

// The endpoint used to authorize the user, used in Oauth 2.0 flow
func (o CodelessConnectorPollingAuthPropertiesResponseOutput) AuthorizationEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CodelessConnectorPollingAuthPropertiesResponse) *string { return v.AuthorizationEndpoint }).(pulumi.StringPtrOutput)
}

// The query parameters used in authorization request, used in Oauth 2.0 flow
func (o CodelessConnectorPollingAuthPropertiesResponseOutput) AuthorizationEndpointQueryParameters() pulumi.AnyOutput {
	return o.ApplyT(func(v CodelessConnectorPollingAuthPropertiesResponse) interface{} {
		return v.AuthorizationEndpointQueryParameters
	}).(pulumi.AnyOutput)
}

// Describes the flow name, for example 'AuthCode' for Oauth 2.0
func (o CodelessConnectorPollingAuthPropertiesResponseOutput) FlowName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CodelessConnectorPollingAuthPropertiesResponse) *string { return v.FlowName }).(pulumi.StringPtrOutput)
}

// Marks if the key should sent in header
func (o CodelessConnectorPollingAuthPropertiesResponseOutput) IsApiKeyInPostPayload() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CodelessConnectorPollingAuthPropertiesResponse) *string { return v.IsApiKeyInPostPayload }).(pulumi.StringPtrOutput)
}

// Marks if we should send the client secret in header or payload, used in Oauth 2.0 flow
func (o CodelessConnectorPollingAuthPropertiesResponseOutput) IsClientSecretInHeader() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CodelessConnectorPollingAuthPropertiesResponse) *bool { return v.IsClientSecretInHeader }).(pulumi.BoolPtrOutput)
}

// The redirect endpoint where we will get the authorization code, used in Oauth 2.0 flow
func (o CodelessConnectorPollingAuthPropertiesResponseOutput) RedirectionEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CodelessConnectorPollingAuthPropertiesResponse) *string { return v.RedirectionEndpoint }).(pulumi.StringPtrOutput)
}

// The OAuth token scope
func (o CodelessConnectorPollingAuthPropertiesResponseOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CodelessConnectorPollingAuthPropertiesResponse) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

// The endpoint used to issue a token, used in Oauth 2.0 flow
func (o CodelessConnectorPollingAuthPropertiesResponseOutput) TokenEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CodelessConnectorPollingAuthPropertiesResponse) *string { return v.TokenEndpoint }).(pulumi.StringPtrOutput)
}

// The query headers used in token request, used in Oauth 2.0 flow
func (o CodelessConnectorPollingAuthPropertiesResponseOutput) TokenEndpointHeaders() pulumi.AnyOutput {
	return o.ApplyT(func(v CodelessConnectorPollingAuthPropertiesResponse) interface{} { return v.TokenEndpointHeaders }).(pulumi.AnyOutput)
}

// The query parameters used in token request, used in Oauth 2.0 flow
func (o CodelessConnectorPollingAuthPropertiesResponseOutput) TokenEndpointQueryParameters() pulumi.AnyOutput {
	return o.ApplyT(func(v CodelessConnectorPollingAuthPropertiesResponse) interface{} {
		return v.TokenEndpointQueryParameters
	}).(pulumi.AnyOutput)
}

type CodelessConnectorPollingAuthPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (CodelessConnectorPollingAuthPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CodelessConnectorPollingAuthPropertiesResponse)(nil)).Elem()
}

func (o CodelessConnectorPollingAuthPropertiesResponsePtrOutput) ToCodelessConnectorPollingAuthPropertiesResponsePtrOutput() CodelessConnectorPollingAuthPropertiesResponsePtrOutput {
	return o
}

func (o CodelessConnectorPollingAuthPropertiesResponsePtrOutput) ToCodelessConnectorPollingAuthPropertiesResponsePtrOutputWithContext(ctx context.Context) CodelessConnectorPollingAuthPropertiesResponsePtrOutput {
	return o
}

func (o CodelessConnectorPollingAuthPropertiesResponsePtrOutput) Elem() CodelessConnectorPollingAuthPropertiesResponseOutput {
	return o.ApplyT(func(v *CodelessConnectorPollingAuthPropertiesResponse) CodelessConnectorPollingAuthPropertiesResponse {
		if v != nil {
			return *v
		}
		var ret CodelessConnectorPollingAuthPropertiesResponse
		return ret
	}).(CodelessConnectorPollingAuthPropertiesResponseOutput)
}

// A prefix send in the header before the actual token
func (o CodelessConnectorPollingAuthPropertiesResponsePtrOutput) ApiKeyIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CodelessConnectorPollingAuthPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.ApiKeyIdentifier
	}).(pulumi.StringPtrOutput)
}

// The header name which the token is sent with
func (o CodelessConnectorPollingAuthPropertiesResponsePtrOutput) ApiKeyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CodelessConnectorPollingAuthPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.ApiKeyName
	}).(pulumi.StringPtrOutput)
}

// The authentication type
func (o CodelessConnectorPollingAuthPropertiesResponsePtrOutput) AuthType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CodelessConnectorPollingAuthPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.AuthType
	}).(pulumi.StringPtrOutput)
}

// The endpoint used to authorize the user, used in Oauth 2.0 flow
func (o CodelessConnectorPollingAuthPropertiesResponsePtrOutput) AuthorizationEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CodelessConnectorPollingAuthPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.AuthorizationEndpoint
	}).(pulumi.StringPtrOutput)
}

// The query parameters used in authorization request, used in Oauth 2.0 flow
func (o CodelessConnectorPollingAuthPropertiesResponsePtrOutput) AuthorizationEndpointQueryParameters() pulumi.AnyOutput {
	return o.ApplyT(func(v *CodelessConnectorPollingAuthPropertiesResponse) interface{} {
		if v == nil {
			return nil
		}
		return v.AuthorizationEndpointQueryParameters
	}).(pulumi.AnyOutput)
}

// Describes the flow name, for example 'AuthCode' for Oauth 2.0
func (o CodelessConnectorPollingAuthPropertiesResponsePtrOutput) FlowName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CodelessConnectorPollingAuthPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.FlowName
	}).(pulumi.StringPtrOutput)
}

// Marks if the key should sent in header
func (o CodelessConnectorPollingAuthPropertiesResponsePtrOutput) IsApiKeyInPostPayload() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CodelessConnectorPollingAuthPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.IsApiKeyInPostPayload
	}).(pulumi.StringPtrOutput)
}

// Marks if we should send the client secret in header or payload, used in Oauth 2.0 flow
func (o CodelessConnectorPollingAuthPropertiesResponsePtrOutput) IsClientSecretInHeader() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CodelessConnectorPollingAuthPropertiesResponse) *bool {
		if v == nil {
			return nil
		}
		return v.IsClientSecretInHeader
	}).(pulumi.BoolPtrOutput)
}

// The redirect endpoint where we will get the authorization code, used in Oauth 2.0 flow
func (o CodelessConnectorPollingAuthPropertiesResponsePtrOutput) RedirectionEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CodelessConnectorPollingAuthPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.RedirectionEndpoint
	}).(pulumi.StringPtrOutput)
}

// The OAuth token scope
func (o CodelessConnectorPollingAuthPropertiesResponsePtrOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CodelessConnectorPollingAuthPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.Scope
	}).(pulumi.StringPtrOutput)
}

// The endpoint used to issue a token, used in Oauth 2.0 flow
func (o CodelessConnectorPollingAuthPropertiesResponsePtrOutput) TokenEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CodelessConnectorPollingAuthPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.TokenEndpoint
	}).(pulumi.StringPtrOutput)
}

// The query headers used in token request, used in Oauth 2.0 flow
func (o CodelessConnectorPollingAuthPropertiesResponsePtrOutput) TokenEndpointHeaders() pulumi.AnyOutput {
	return o.ApplyT(func(v *CodelessConnectorPollingAuthPropertiesResponse) interface{} {
		if v == nil {
			return nil
		}
		return v.TokenEndpointHeaders
	}).(pulumi.AnyOutput)
}

// The query parameters used in token request, used in Oauth 2.0 flow
func (o CodelessConnectorPollingAuthPropertiesResponsePtrOutput) TokenEndpointQueryParameters() pulumi.AnyOutput {
	return o.ApplyT(func(v *CodelessConnectorPollingAuthPropertiesResponse) interface{} {
		if v == nil {
			return nil
		}
		return v.TokenEndpointQueryParameters
	}).(pulumi.AnyOutput)
}

// Config to describe the polling config for API poller connector
type CodelessConnectorPollingConfigProperties struct {
	// Describe the authentication type of the poller
	Auth CodelessConnectorPollingAuthProperties `pulumi:"auth"`
	// The poller active status
	IsActive *bool `pulumi:"isActive"`
	// Describe the poll request paging config of the poller
	Paging *CodelessConnectorPollingPagingProperties `pulumi:"paging"`
	// Describe the poll request config parameters of the poller
	Request CodelessConnectorPollingRequestProperties `pulumi:"request"`
	// Describe the response config parameters of the poller
	Response *CodelessConnectorPollingResponseProperties `pulumi:"response"`
}

// Config to describe the polling config for API poller connector
type CodelessConnectorPollingConfigPropertiesResponse struct {
	// Describe the authentication type of the poller
	Auth CodelessConnectorPollingAuthPropertiesResponse `pulumi:"auth"`
	// The poller active status
	IsActive *bool `pulumi:"isActive"`
	// Describe the poll request paging config of the poller
	Paging *CodelessConnectorPollingPagingPropertiesResponse `pulumi:"paging"`
	// Describe the poll request config parameters of the poller
	Request CodelessConnectorPollingRequestPropertiesResponse `pulumi:"request"`
	// Describe the response config parameters of the poller
	Response *CodelessConnectorPollingResponsePropertiesResponse `pulumi:"response"`
}

// Config to describe the polling config for API poller connector
type CodelessConnectorPollingConfigPropertiesResponseOutput struct{ *pulumi.OutputState }

func (CodelessConnectorPollingConfigPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CodelessConnectorPollingConfigPropertiesResponse)(nil)).Elem()
}

func (o CodelessConnectorPollingConfigPropertiesResponseOutput) ToCodelessConnectorPollingConfigPropertiesResponseOutput() CodelessConnectorPollingConfigPropertiesResponseOutput {
	return o
}

func (o CodelessConnectorPollingConfigPropertiesResponseOutput) ToCodelessConnectorPollingConfigPropertiesResponseOutputWithContext(ctx context.Context) CodelessConnectorPollingConfigPropertiesResponseOutput {
	return o
}

// Describe the authentication type of the poller
func (o CodelessConnectorPollingConfigPropertiesResponseOutput) Auth() CodelessConnectorPollingAuthPropertiesResponseOutput {
	return o.ApplyT(func(v CodelessConnectorPollingConfigPropertiesResponse) CodelessConnectorPollingAuthPropertiesResponse {
		return v.Auth
	}).(CodelessConnectorPollingAuthPropertiesResponseOutput)
}

// The poller active status
func (o CodelessConnectorPollingConfigPropertiesResponseOutput) IsActive() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CodelessConnectorPollingConfigPropertiesResponse) *bool { return v.IsActive }).(pulumi.BoolPtrOutput)
}

// Describe the poll request paging config of the poller
func (o CodelessConnectorPollingConfigPropertiesResponseOutput) Paging() CodelessConnectorPollingPagingPropertiesResponsePtrOutput {
	return o.ApplyT(func(v CodelessConnectorPollingConfigPropertiesResponse) *CodelessConnectorPollingPagingPropertiesResponse {
		return v.Paging
	}).(CodelessConnectorPollingPagingPropertiesResponsePtrOutput)
}

// Describe the poll request config parameters of the poller
func (o CodelessConnectorPollingConfigPropertiesResponseOutput) Request() CodelessConnectorPollingRequestPropertiesResponseOutput {
	return o.ApplyT(func(v CodelessConnectorPollingConfigPropertiesResponse) CodelessConnectorPollingRequestPropertiesResponse {
		return v.Request
	}).(CodelessConnectorPollingRequestPropertiesResponseOutput)
}

// Describe the response config parameters of the poller
func (o CodelessConnectorPollingConfigPropertiesResponseOutput) Response() CodelessConnectorPollingResponsePropertiesResponsePtrOutput {
	return o.ApplyT(func(v CodelessConnectorPollingConfigPropertiesResponse) *CodelessConnectorPollingResponsePropertiesResponse {
		return v.Response
	}).(CodelessConnectorPollingResponsePropertiesResponsePtrOutput)
}

type CodelessConnectorPollingConfigPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (CodelessConnectorPollingConfigPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CodelessConnectorPollingConfigPropertiesResponse)(nil)).Elem()
}

func (o CodelessConnectorPollingConfigPropertiesResponsePtrOutput) ToCodelessConnectorPollingConfigPropertiesResponsePtrOutput() CodelessConnectorPollingConfigPropertiesResponsePtrOutput {
	return o
}

func (o CodelessConnectorPollingConfigPropertiesResponsePtrOutput) ToCodelessConnectorPollingConfigPropertiesResponsePtrOutputWithContext(ctx context.Context) CodelessConnectorPollingConfigPropertiesResponsePtrOutput {
	return o
}

func (o CodelessConnectorPollingConfigPropertiesResponsePtrOutput) Elem() CodelessConnectorPollingConfigPropertiesResponseOutput {
	return o.ApplyT(func(v *CodelessConnectorPollingConfigPropertiesResponse) CodelessConnectorPollingConfigPropertiesResponse {
		if v != nil {
			return *v
		}
		var ret CodelessConnectorPollingConfigPropertiesResponse
		return ret
	}).(CodelessConnectorPollingConfigPropertiesResponseOutput)
}

// Describe the authentication type of the poller
func (o CodelessConnectorPollingConfigPropertiesResponsePtrOutput) Auth() CodelessConnectorPollingAuthPropertiesResponsePtrOutput {
	return o.ApplyT(func(v *CodelessConnectorPollingConfigPropertiesResponse) *CodelessConnectorPollingAuthPropertiesResponse {
		if v == nil {
			return nil
		}
		return &v.Auth
	}).(CodelessConnectorPollingAuthPropertiesResponsePtrOutput)
}

// The poller active status
func (o CodelessConnectorPollingConfigPropertiesResponsePtrOutput) IsActive() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CodelessConnectorPollingConfigPropertiesResponse) *bool {
		if v == nil {
			return nil
		}
		return v.IsActive
	}).(pulumi.BoolPtrOutput)
}

// Describe the poll request paging config of the poller
func (o CodelessConnectorPollingConfigPropertiesResponsePtrOutput) Paging() CodelessConnectorPollingPagingPropertiesResponsePtrOutput {
	return o.ApplyT(func(v *CodelessConnectorPollingConfigPropertiesResponse) *CodelessConnectorPollingPagingPropertiesResponse {
		if v == nil {
			return nil
		}
		return v.Paging
	}).(CodelessConnectorPollingPagingPropertiesResponsePtrOutput)
}

// Describe the poll request config parameters of the poller
func (o CodelessConnectorPollingConfigPropertiesResponsePtrOutput) Request() CodelessConnectorPollingRequestPropertiesResponsePtrOutput {
	return o.ApplyT(func(v *CodelessConnectorPollingConfigPropertiesResponse) *CodelessConnectorPollingRequestPropertiesResponse {
		if v == nil {
			return nil
		}
		return &v.Request
	}).(CodelessConnectorPollingRequestPropertiesResponsePtrOutput)
}

// Describe the response config parameters of the poller
func (o CodelessConnectorPollingConfigPropertiesResponsePtrOutput) Response() CodelessConnectorPollingResponsePropertiesResponsePtrOutput {
	return o.ApplyT(func(v *CodelessConnectorPollingConfigPropertiesResponse) *CodelessConnectorPollingResponsePropertiesResponse {
		if v == nil {
			return nil
		}
		return v.Response
	}).(CodelessConnectorPollingResponsePropertiesResponsePtrOutput)
}

// Describe the properties needed to make a pagination call
type CodelessConnectorPollingPagingProperties struct {
	// Defines the name of a next page attribute
	NextPageParaName *string `pulumi:"nextPageParaName"`
	// Defines the path to a next page token JSON
	NextPageTokenJsonPath *string `pulumi:"nextPageTokenJsonPath"`
	// Defines the path to a page count attribute
	PageCountAttributePath *string `pulumi:"pageCountAttributePath"`
	// Defines the paging size
	PageSize *int `pulumi:"pageSize"`
	// Defines the name of the page size parameter
	PageSizeParaName *string `pulumi:"pageSizeParaName"`
	// Defines the path to a paging time stamp attribute
	PageTimeStampAttributePath *string `pulumi:"pageTimeStampAttributePath"`
	// Defines the path to a page total count attribute
	PageTotalCountAttributePath *string `pulumi:"pageTotalCountAttributePath"`
	// Describes the type. could be 'None', 'PageToken', 'PageCount', 'TimeStamp'
	PagingType string `pulumi:"pagingType"`
	// Determines whether to search for the latest time stamp in the events list
	SearchTheLatestTimeStampFromEventsList *string `pulumi:"searchTheLatestTimeStampFromEventsList"`
}

// Describe the properties needed to make a pagination call
type CodelessConnectorPollingPagingPropertiesResponse struct {
	// Defines the name of a next page attribute
	NextPageParaName *string `pulumi:"nextPageParaName"`
	// Defines the path to a next page token JSON
	NextPageTokenJsonPath *string `pulumi:"nextPageTokenJsonPath"`
	// Defines the path to a page count attribute
	PageCountAttributePath *string `pulumi:"pageCountAttributePath"`
	// Defines the paging size
	PageSize *int `pulumi:"pageSize"`
	// Defines the name of the page size parameter
	PageSizeParaName *string `pulumi:"pageSizeParaName"`
	// Defines the path to a paging time stamp attribute
	PageTimeStampAttributePath *string `pulumi:"pageTimeStampAttributePath"`
	// Defines the path to a page total count attribute
	PageTotalCountAttributePath *string `pulumi:"pageTotalCountAttributePath"`
	// Describes the type. could be 'None', 'PageToken', 'PageCount', 'TimeStamp'
	PagingType string `pulumi:"pagingType"`
	// Determines whether to search for the latest time stamp in the events list
	SearchTheLatestTimeStampFromEventsList *string `pulumi:"searchTheLatestTimeStampFromEventsList"`
}

// Describe the properties needed to make a pagination call
type CodelessConnectorPollingPagingPropertiesResponseOutput struct{ *pulumi.OutputState }

func (CodelessConnectorPollingPagingPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CodelessConnectorPollingPagingPropertiesResponse)(nil)).Elem()
}

func (o CodelessConnectorPollingPagingPropertiesResponseOutput) ToCodelessConnectorPollingPagingPropertiesResponseOutput() CodelessConnectorPollingPagingPropertiesResponseOutput {
	return o
}

func (o CodelessConnectorPollingPagingPropertiesResponseOutput) ToCodelessConnectorPollingPagingPropertiesResponseOutputWithContext(ctx context.Context) CodelessConnectorPollingPagingPropertiesResponseOutput {
	return o
}

// Defines the name of a next page attribute
func (o CodelessConnectorPollingPagingPropertiesResponseOutput) NextPageParaName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CodelessConnectorPollingPagingPropertiesResponse) *string { return v.NextPageParaName }).(pulumi.StringPtrOutput)
}

// Defines the path to a next page token JSON
func (o CodelessConnectorPollingPagingPropertiesResponseOutput) NextPageTokenJsonPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CodelessConnectorPollingPagingPropertiesResponse) *string { return v.NextPageTokenJsonPath }).(pulumi.StringPtrOutput)
}

// Defines the path to a page count attribute
func (o CodelessConnectorPollingPagingPropertiesResponseOutput) PageCountAttributePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CodelessConnectorPollingPagingPropertiesResponse) *string { return v.PageCountAttributePath }).(pulumi.StringPtrOutput)
}

// Defines the paging size
func (o CodelessConnectorPollingPagingPropertiesResponseOutput) PageSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v CodelessConnectorPollingPagingPropertiesResponse) *int { return v.PageSize }).(pulumi.IntPtrOutput)
}

// Defines the name of the page size parameter
func (o CodelessConnectorPollingPagingPropertiesResponseOutput) PageSizeParaName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CodelessConnectorPollingPagingPropertiesResponse) *string { return v.PageSizeParaName }).(pulumi.StringPtrOutput)
}

// Defines the path to a paging time stamp attribute
func (o CodelessConnectorPollingPagingPropertiesResponseOutput) PageTimeStampAttributePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CodelessConnectorPollingPagingPropertiesResponse) *string { return v.PageTimeStampAttributePath }).(pulumi.StringPtrOutput)
}

// Defines the path to a page total count attribute
func (o CodelessConnectorPollingPagingPropertiesResponseOutput) PageTotalCountAttributePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CodelessConnectorPollingPagingPropertiesResponse) *string { return v.PageTotalCountAttributePath }).(pulumi.StringPtrOutput)
}

// Describes the type. could be 'None', 'PageToken', 'PageCount', 'TimeStamp'
func (o CodelessConnectorPollingPagingPropertiesResponseOutput) PagingType() pulumi.StringOutput {
	return o.ApplyT(func(v CodelessConnectorPollingPagingPropertiesResponse) string { return v.PagingType }).(pulumi.StringOutput)
}

// Determines whether to search for the latest time stamp in the events list
func (o CodelessConnectorPollingPagingPropertiesResponseOutput) SearchTheLatestTimeStampFromEventsList() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CodelessConnectorPollingPagingPropertiesResponse) *string {
		return v.SearchTheLatestTimeStampFromEventsList
	}).(pulumi.StringPtrOutput)
}

type CodelessConnectorPollingPagingPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (CodelessConnectorPollingPagingPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CodelessConnectorPollingPagingPropertiesResponse)(nil)).Elem()
}

func (o CodelessConnectorPollingPagingPropertiesResponsePtrOutput) ToCodelessConnectorPollingPagingPropertiesResponsePtrOutput() CodelessConnectorPollingPagingPropertiesResponsePtrOutput {
	return o
}

func (o CodelessConnectorPollingPagingPropertiesResponsePtrOutput) ToCodelessConnectorPollingPagingPropertiesResponsePtrOutputWithContext(ctx context.Context) CodelessConnectorPollingPagingPropertiesResponsePtrOutput {
	return o
}

func (o CodelessConnectorPollingPagingPropertiesResponsePtrOutput) Elem() CodelessConnectorPollingPagingPropertiesResponseOutput {
	return o.ApplyT(func(v *CodelessConnectorPollingPagingPropertiesResponse) CodelessConnectorPollingPagingPropertiesResponse {
		if v != nil {
			return *v
		}
		var ret CodelessConnectorPollingPagingPropertiesResponse
		return ret
	}).(CodelessConnectorPollingPagingPropertiesResponseOutput)
}

// Defines the name of a next page attribute
func (o CodelessConnectorPollingPagingPropertiesResponsePtrOutput) NextPageParaName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CodelessConnectorPollingPagingPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.NextPageParaName
	}).(pulumi.StringPtrOutput)
}

// Defines the path to a next page token JSON
func (o CodelessConnectorPollingPagingPropertiesResponsePtrOutput) NextPageTokenJsonPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CodelessConnectorPollingPagingPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.NextPageTokenJsonPath
	}).(pulumi.StringPtrOutput)
}

// Defines the path to a page count attribute
func (o CodelessConnectorPollingPagingPropertiesResponsePtrOutput) PageCountAttributePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CodelessConnectorPollingPagingPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.PageCountAttributePath
	}).(pulumi.StringPtrOutput)
}

// Defines the paging size
func (o CodelessConnectorPollingPagingPropertiesResponsePtrOutput) PageSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CodelessConnectorPollingPagingPropertiesResponse) *int {
		if v == nil {
			return nil
		}
		return v.PageSize
	}).(pulumi.IntPtrOutput)
}

// Defines the name of the page size parameter
func (o CodelessConnectorPollingPagingPropertiesResponsePtrOutput) PageSizeParaName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CodelessConnectorPollingPagingPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.PageSizeParaName
	}).(pulumi.StringPtrOutput)
}

// Defines the path to a paging time stamp attribute
func (o CodelessConnectorPollingPagingPropertiesResponsePtrOutput) PageTimeStampAttributePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CodelessConnectorPollingPagingPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.PageTimeStampAttributePath
	}).(pulumi.StringPtrOutput)
}

// Defines the path to a page total count attribute
func (o CodelessConnectorPollingPagingPropertiesResponsePtrOutput) PageTotalCountAttributePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CodelessConnectorPollingPagingPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.PageTotalCountAttributePath
	}).(pulumi.StringPtrOutput)
}

// Describes the type. could be 'None', 'PageToken', 'PageCount', 'TimeStamp'
func (o CodelessConnectorPollingPagingPropertiesResponsePtrOutput) PagingType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CodelessConnectorPollingPagingPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.PagingType
	}).(pulumi.StringPtrOutput)
}

// Determines whether to search for the latest time stamp in the events list
func (o CodelessConnectorPollingPagingPropertiesResponsePtrOutput) SearchTheLatestTimeStampFromEventsList() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CodelessConnectorPollingPagingPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.SearchTheLatestTimeStampFromEventsList
	}).(pulumi.StringPtrOutput)
}

// Describe the request properties needed to successfully pull from the server
type CodelessConnectorPollingRequestProperties struct {
	// Describe the endpoint we should pull the data from
	ApiEndpoint string `pulumi:"apiEndpoint"`
	// This will be used the query events from the end of the time window
	EndTimeAttributeName *string `pulumi:"endTimeAttributeName"`
	// Describe the headers sent in the poll request
	Headers interface{} `pulumi:"headers"`
	// The http method type we will use in the poll request, GET or POST
	HttpMethod string `pulumi:"httpMethod"`
	// Describe the query parameters sent in the poll request
	QueryParameters interface{} `pulumi:"queryParameters"`
	// For advanced scenarios for example user name/password embedded in nested JSON payload
	QueryParametersTemplate *string `pulumi:"queryParametersTemplate"`
	// The time format will be used the query events in a specific window
	QueryTimeFormat string `pulumi:"queryTimeFormat"`
	// The window interval we will use the pull the data
	QueryWindowInMin int `pulumi:"queryWindowInMin"`
	// Defines the rate limit QPS
	RateLimitQps *int `pulumi:"rateLimitQps"`
	// Describe the amount of time we should try and poll the data in case of failure
	RetryCount *int `pulumi:"retryCount"`
	// This will be used the query events from a start of the time window
	StartTimeAttributeName *string `pulumi:"startTimeAttributeName"`
	// The number of seconds we will consider as a request timeout
	TimeoutInSeconds *int `pulumi:"timeoutInSeconds"`
}

// Describe the request properties needed to successfully pull from the server
type CodelessConnectorPollingRequestPropertiesResponse struct {
	// Describe the endpoint we should pull the data from
	ApiEndpoint string `pulumi:"apiEndpoint"`
	// This will be used the query events from the end of the time window
	EndTimeAttributeName *string `pulumi:"endTimeAttributeName"`
	// Describe the headers sent in the poll request
	Headers interface{} `pulumi:"headers"`
	// The http method type we will use in the poll request, GET or POST
	HttpMethod string `pulumi:"httpMethod"`
	// Describe the query parameters sent in the poll request
	QueryParameters interface{} `pulumi:"queryParameters"`
	// For advanced scenarios for example user name/password embedded in nested JSON payload
	QueryParametersTemplate *string `pulumi:"queryParametersTemplate"`
	// The time format will be used the query events in a specific window
	QueryTimeFormat string `pulumi:"queryTimeFormat"`
	// The window interval we will use the pull the data
	QueryWindowInMin int `pulumi:"queryWindowInMin"`
	// Defines the rate limit QPS
	RateLimitQps *int `pulumi:"rateLimitQps"`
	// Describe the amount of time we should try and poll the data in case of failure
	RetryCount *int `pulumi:"retryCount"`
	// This will be used the query events from a start of the time window
	StartTimeAttributeName *string `pulumi:"startTimeAttributeName"`
	// The number of seconds we will consider as a request timeout
	TimeoutInSeconds *int `pulumi:"timeoutInSeconds"`
}

// Describe the request properties needed to successfully pull from the server
type CodelessConnectorPollingRequestPropertiesResponseOutput struct{ *pulumi.OutputState }

func (CodelessConnectorPollingRequestPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CodelessConnectorPollingRequestPropertiesResponse)(nil)).Elem()
}

func (o CodelessConnectorPollingRequestPropertiesResponseOutput) ToCodelessConnectorPollingRequestPropertiesResponseOutput() CodelessConnectorPollingRequestPropertiesResponseOutput {
	return o
}

func (o CodelessConnectorPollingRequestPropertiesResponseOutput) ToCodelessConnectorPollingRequestPropertiesResponseOutputWithContext(ctx context.Context) CodelessConnectorPollingRequestPropertiesResponseOutput {
	return o
}

// Describe the endpoint we should pull the data from
func (o CodelessConnectorPollingRequestPropertiesResponseOutput) ApiEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v CodelessConnectorPollingRequestPropertiesResponse) string { return v.ApiEndpoint }).(pulumi.StringOutput)
}

// This will be used the query events from the end of the time window
func (o CodelessConnectorPollingRequestPropertiesResponseOutput) EndTimeAttributeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CodelessConnectorPollingRequestPropertiesResponse) *string { return v.EndTimeAttributeName }).(pulumi.StringPtrOutput)
}

// Describe the headers sent in the poll request
func (o CodelessConnectorPollingRequestPropertiesResponseOutput) Headers() pulumi.AnyOutput {
	return o.ApplyT(func(v CodelessConnectorPollingRequestPropertiesResponse) interface{} { return v.Headers }).(pulumi.AnyOutput)
}

// The http method type we will use in the poll request, GET or POST
func (o CodelessConnectorPollingRequestPropertiesResponseOutput) HttpMethod() pulumi.StringOutput {
	return o.ApplyT(func(v CodelessConnectorPollingRequestPropertiesResponse) string { return v.HttpMethod }).(pulumi.StringOutput)
}

// Describe the query parameters sent in the poll request
func (o CodelessConnectorPollingRequestPropertiesResponseOutput) QueryParameters() pulumi.AnyOutput {
	return o.ApplyT(func(v CodelessConnectorPollingRequestPropertiesResponse) interface{} { return v.QueryParameters }).(pulumi.AnyOutput)
}

// For advanced scenarios for example user name/password embedded in nested JSON payload
func (o CodelessConnectorPollingRequestPropertiesResponseOutput) QueryParametersTemplate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CodelessConnectorPollingRequestPropertiesResponse) *string { return v.QueryParametersTemplate }).(pulumi.StringPtrOutput)
}

// The time format will be used the query events in a specific window
func (o CodelessConnectorPollingRequestPropertiesResponseOutput) QueryTimeFormat() pulumi.StringOutput {
	return o.ApplyT(func(v CodelessConnectorPollingRequestPropertiesResponse) string { return v.QueryTimeFormat }).(pulumi.StringOutput)
}

// The window interval we will use the pull the data
func (o CodelessConnectorPollingRequestPropertiesResponseOutput) QueryWindowInMin() pulumi.IntOutput {
	return o.ApplyT(func(v CodelessConnectorPollingRequestPropertiesResponse) int { return v.QueryWindowInMin }).(pulumi.IntOutput)
}

// Defines the rate limit QPS
func (o CodelessConnectorPollingRequestPropertiesResponseOutput) RateLimitQps() pulumi.IntPtrOutput {
	return o.ApplyT(func(v CodelessConnectorPollingRequestPropertiesResponse) *int { return v.RateLimitQps }).(pulumi.IntPtrOutput)
}

// Describe the amount of time we should try and poll the data in case of failure
func (o CodelessConnectorPollingRequestPropertiesResponseOutput) RetryCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v CodelessConnectorPollingRequestPropertiesResponse) *int { return v.RetryCount }).(pulumi.IntPtrOutput)
}

// This will be used the query events from a start of the time window
func (o CodelessConnectorPollingRequestPropertiesResponseOutput) StartTimeAttributeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CodelessConnectorPollingRequestPropertiesResponse) *string { return v.StartTimeAttributeName }).(pulumi.StringPtrOutput)
}

// The number of seconds we will consider as a request timeout
func (o CodelessConnectorPollingRequestPropertiesResponseOutput) TimeoutInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v CodelessConnectorPollingRequestPropertiesResponse) *int { return v.TimeoutInSeconds }).(pulumi.IntPtrOutput)
}

type CodelessConnectorPollingRequestPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (CodelessConnectorPollingRequestPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CodelessConnectorPollingRequestPropertiesResponse)(nil)).Elem()
}

func (o CodelessConnectorPollingRequestPropertiesResponsePtrOutput) ToCodelessConnectorPollingRequestPropertiesResponsePtrOutput() CodelessConnectorPollingRequestPropertiesResponsePtrOutput {
	return o
}

func (o CodelessConnectorPollingRequestPropertiesResponsePtrOutput) ToCodelessConnectorPollingRequestPropertiesResponsePtrOutputWithContext(ctx context.Context) CodelessConnectorPollingRequestPropertiesResponsePtrOutput {
	return o
}

func (o CodelessConnectorPollingRequestPropertiesResponsePtrOutput) Elem() CodelessConnectorPollingRequestPropertiesResponseOutput {
	return o.ApplyT(func(v *CodelessConnectorPollingRequestPropertiesResponse) CodelessConnectorPollingRequestPropertiesResponse {
		if v != nil {
			return *v
		}
		var ret CodelessConnectorPollingRequestPropertiesResponse
		return ret
	}).(CodelessConnectorPollingRequestPropertiesResponseOutput)
}

// Describe the endpoint we should pull the data from
func (o CodelessConnectorPollingRequestPropertiesResponsePtrOutput) ApiEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CodelessConnectorPollingRequestPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ApiEndpoint
	}).(pulumi.StringPtrOutput)
}

// This will be used the query events from the end of the time window
func (o CodelessConnectorPollingRequestPropertiesResponsePtrOutput) EndTimeAttributeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CodelessConnectorPollingRequestPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.EndTimeAttributeName
	}).(pulumi.StringPtrOutput)
}

// Describe the headers sent in the poll request
func (o CodelessConnectorPollingRequestPropertiesResponsePtrOutput) Headers() pulumi.AnyOutput {
	return o.ApplyT(func(v *CodelessConnectorPollingRequestPropertiesResponse) interface{} {
		if v == nil {
			return nil
		}
		return v.Headers
	}).(pulumi.AnyOutput)
}

// The http method type we will use in the poll request, GET or POST
func (o CodelessConnectorPollingRequestPropertiesResponsePtrOutput) HttpMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CodelessConnectorPollingRequestPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.HttpMethod
	}).(pulumi.StringPtrOutput)
}

// Describe the query parameters sent in the poll request
func (o CodelessConnectorPollingRequestPropertiesResponsePtrOutput) QueryParameters() pulumi.AnyOutput {
	return o.ApplyT(func(v *CodelessConnectorPollingRequestPropertiesResponse) interface{} {
		if v == nil {
			return nil
		}
		return v.QueryParameters
	}).(pulumi.AnyOutput)
}

// For advanced scenarios for example user name/password embedded in nested JSON payload
func (o CodelessConnectorPollingRequestPropertiesResponsePtrOutput) QueryParametersTemplate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CodelessConnectorPollingRequestPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.QueryParametersTemplate
	}).(pulumi.StringPtrOutput)
}

// The time format will be used the query events in a specific window
func (o CodelessConnectorPollingRequestPropertiesResponsePtrOutput) QueryTimeFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CodelessConnectorPollingRequestPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.QueryTimeFormat
	}).(pulumi.StringPtrOutput)
}

// The window interval we will use the pull the data
func (o CodelessConnectorPollingRequestPropertiesResponsePtrOutput) QueryWindowInMin() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CodelessConnectorPollingRequestPropertiesResponse) *int {
		if v == nil {
			return nil
		}
		return &v.QueryWindowInMin
	}).(pulumi.IntPtrOutput)
}

// Defines the rate limit QPS
func (o CodelessConnectorPollingRequestPropertiesResponsePtrOutput) RateLimitQps() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CodelessConnectorPollingRequestPropertiesResponse) *int {
		if v == nil {
			return nil
		}
		return v.RateLimitQps
	}).(pulumi.IntPtrOutput)
}

// Describe the amount of time we should try and poll the data in case of failure
func (o CodelessConnectorPollingRequestPropertiesResponsePtrOutput) RetryCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CodelessConnectorPollingRequestPropertiesResponse) *int {
		if v == nil {
			return nil
		}
		return v.RetryCount
	}).(pulumi.IntPtrOutput)
}

// This will be used the query events from a start of the time window
func (o CodelessConnectorPollingRequestPropertiesResponsePtrOutput) StartTimeAttributeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CodelessConnectorPollingRequestPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.StartTimeAttributeName
	}).(pulumi.StringPtrOutput)
}

// The number of seconds we will consider as a request timeout
func (o CodelessConnectorPollingRequestPropertiesResponsePtrOutput) TimeoutInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CodelessConnectorPollingRequestPropertiesResponse) *int {
		if v == nil {
			return nil
		}
		return v.TimeoutInSeconds
	}).(pulumi.IntPtrOutput)
}

// Describes the response from the external server
type CodelessConnectorPollingResponseProperties struct {
	// Describes the path we should extract the data in the response
	EventsJsonPaths []string `pulumi:"eventsJsonPaths"`
	// Describes if the data in the response is Gzip
	IsGzipCompressed *bool `pulumi:"isGzipCompressed"`
	// Describes the path we should extract the status code in the response
	SuccessStatusJsonPath *string `pulumi:"successStatusJsonPath"`
	// Describes the path we should extract the status value in the response
	SuccessStatusValue *string `pulumi:"successStatusValue"`
}

// Describes the response from the external server
type CodelessConnectorPollingResponsePropertiesResponse struct {
	// Describes the path we should extract the data in the response
	EventsJsonPaths []string `pulumi:"eventsJsonPaths"`
	// Describes if the data in the response is Gzip
	IsGzipCompressed *bool `pulumi:"isGzipCompressed"`
	// Describes the path we should extract the status code in the response
	SuccessStatusJsonPath *string `pulumi:"successStatusJsonPath"`
	// Describes the path we should extract the status value in the response
	SuccessStatusValue *string `pulumi:"successStatusValue"`
}

// Describes the response from the external server
type CodelessConnectorPollingResponsePropertiesResponseOutput struct{ *pulumi.OutputState }

func (CodelessConnectorPollingResponsePropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CodelessConnectorPollingResponsePropertiesResponse)(nil)).Elem()
}

func (o CodelessConnectorPollingResponsePropertiesResponseOutput) ToCodelessConnectorPollingResponsePropertiesResponseOutput() CodelessConnectorPollingResponsePropertiesResponseOutput {
	return o
}

func (o CodelessConnectorPollingResponsePropertiesResponseOutput) ToCodelessConnectorPollingResponsePropertiesResponseOutputWithContext(ctx context.Context) CodelessConnectorPollingResponsePropertiesResponseOutput {
	return o
}

// Describes the path we should extract the data in the response
func (o CodelessConnectorPollingResponsePropertiesResponseOutput) EventsJsonPaths() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CodelessConnectorPollingResponsePropertiesResponse) []string { return v.EventsJsonPaths }).(pulumi.StringArrayOutput)
}

// Describes if the data in the response is Gzip
func (o CodelessConnectorPollingResponsePropertiesResponseOutput) IsGzipCompressed() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CodelessConnectorPollingResponsePropertiesResponse) *bool { return v.IsGzipCompressed }).(pulumi.BoolPtrOutput)
}

// Describes the path we should extract the status code in the response
func (o CodelessConnectorPollingResponsePropertiesResponseOutput) SuccessStatusJsonPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CodelessConnectorPollingResponsePropertiesResponse) *string { return v.SuccessStatusJsonPath }).(pulumi.StringPtrOutput)
}

// Describes the path we should extract the status value in the response
func (o CodelessConnectorPollingResponsePropertiesResponseOutput) SuccessStatusValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CodelessConnectorPollingResponsePropertiesResponse) *string { return v.SuccessStatusValue }).(pulumi.StringPtrOutput)
}

type CodelessConnectorPollingResponsePropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (CodelessConnectorPollingResponsePropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CodelessConnectorPollingResponsePropertiesResponse)(nil)).Elem()
}

func (o CodelessConnectorPollingResponsePropertiesResponsePtrOutput) ToCodelessConnectorPollingResponsePropertiesResponsePtrOutput() CodelessConnectorPollingResponsePropertiesResponsePtrOutput {
	return o
}

func (o CodelessConnectorPollingResponsePropertiesResponsePtrOutput) ToCodelessConnectorPollingResponsePropertiesResponsePtrOutputWithContext(ctx context.Context) CodelessConnectorPollingResponsePropertiesResponsePtrOutput {
	return o
}

func (o CodelessConnectorPollingResponsePropertiesResponsePtrOutput) Elem() CodelessConnectorPollingResponsePropertiesResponseOutput {
	return o.ApplyT(func(v *CodelessConnectorPollingResponsePropertiesResponse) CodelessConnectorPollingResponsePropertiesResponse {
		if v != nil {
			return *v
		}
		var ret CodelessConnectorPollingResponsePropertiesResponse
		return ret
	}).(CodelessConnectorPollingResponsePropertiesResponseOutput)
}

// Describes the path we should extract the data in the response
func (o CodelessConnectorPollingResponsePropertiesResponsePtrOutput) EventsJsonPaths() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *CodelessConnectorPollingResponsePropertiesResponse) []string {
		if v == nil {
			return nil
		}
		return v.EventsJsonPaths
	}).(pulumi.StringArrayOutput)
}

// Describes if the data in the response is Gzip
func (o CodelessConnectorPollingResponsePropertiesResponsePtrOutput) IsGzipCompressed() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CodelessConnectorPollingResponsePropertiesResponse) *bool {
		if v == nil {
			return nil
		}
		return v.IsGzipCompressed
	}).(pulumi.BoolPtrOutput)
}

// Describes the path we should extract the status code in the response
func (o CodelessConnectorPollingResponsePropertiesResponsePtrOutput) SuccessStatusJsonPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CodelessConnectorPollingResponsePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.SuccessStatusJsonPath
	}).(pulumi.StringPtrOutput)
}

// Describes the path we should extract the status value in the response
func (o CodelessConnectorPollingResponsePropertiesResponsePtrOutput) SuccessStatusValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CodelessConnectorPollingResponsePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.SuccessStatusValue
	}).(pulumi.StringPtrOutput)
}

// Config to describe the instructions blade
type CodelessUiConnectorConfigProperties struct {
	// Connector Availability Status
	Availability Availability `pulumi:"availability"`
	// Define the way the connector check connectivity
	ConnectivityCriteria []CodelessUiConnectorConfigPropertiesConnectivityCriteria `pulumi:"connectivityCriteria"`
	// An optional custom image to be used when displaying the connector within Azure Sentinel's connector's gallery
	CustomImage *string `pulumi:"customImage"`
	// Data types to check for last data received
	DataTypes []CodelessUiConnectorConfigPropertiesDataTypes `pulumi:"dataTypes"`
	// Connector description
	DescriptionMarkdown string `pulumi:"descriptionMarkdown"`
	// The graph query to show the current data status
	GraphQueries []CodelessUiConnectorConfigPropertiesGraphQueries `pulumi:"graphQueries"`
	// Name of the table the connector will insert the data to
	GraphQueriesTableName string `pulumi:"graphQueriesTableName"`
	// Instruction steps to enable the connector
	InstructionSteps []CodelessUiConnectorConfigPropertiesInstructionSteps `pulumi:"instructionSteps"`
	// Permissions required for the connector
	Permissions Permissions `pulumi:"permissions"`
	// Connector publisher name
	Publisher string `pulumi:"publisher"`
	// The sample queries for the connector
	SampleQueries []CodelessUiConnectorConfigPropertiesSampleQueries `pulumi:"sampleQueries"`
	// Connector blade title
	Title string `pulumi:"title"`
}

type CodelessUiConnectorConfigPropertiesConnectivityCriteria struct {
	// type of connectivity
	Type *string `pulumi:"type"`
	// Queries for checking connectivity
	Value []string `pulumi:"value"`
}

type CodelessUiConnectorConfigPropertiesDataTypes struct {
	// Query for indicate last data received
	LastDataReceivedQuery *string `pulumi:"lastDataReceivedQuery"`
	// Name of the data type to show in the graph. can be use with {{graphQueriesTableName}} placeholder
	Name *string `pulumi:"name"`
}

type CodelessUiConnectorConfigPropertiesGraphQueries struct {
	// The base query for the graph
	BaseQuery *string `pulumi:"baseQuery"`
	// The legend for the graph
	Legend *string `pulumi:"legend"`
	// the metric that the query is checking
	MetricName *string `pulumi:"metricName"`
}

type CodelessUiConnectorConfigPropertiesInstructionSteps struct {
	// Instruction step description
	Description *string `pulumi:"description"`
	// Instruction step details
	Instructions []InstructionStepsInstructions `pulumi:"instructions"`
	// Instruction step title
	Title *string `pulumi:"title"`
}

// Config to describe the instructions blade
type CodelessUiConnectorConfigPropertiesResponse struct {
	// Connector Availability Status
	Availability AvailabilityResponse `pulumi:"availability"`
	// Define the way the connector check connectivity
	ConnectivityCriteria []CodelessUiConnectorConfigPropertiesResponseConnectivityCriteria `pulumi:"connectivityCriteria"`
	// An optional custom image to be used when displaying the connector within Azure Sentinel's connector's gallery
	CustomImage *string `pulumi:"customImage"`
	// Data types to check for last data received
	DataTypes []CodelessUiConnectorConfigPropertiesResponseDataTypes `pulumi:"dataTypes"`
	// Connector description
	DescriptionMarkdown string `pulumi:"descriptionMarkdown"`
	// The graph query to show the current data status
	GraphQueries []CodelessUiConnectorConfigPropertiesResponseGraphQueries `pulumi:"graphQueries"`
	// Name of the table the connector will insert the data to
	GraphQueriesTableName string `pulumi:"graphQueriesTableName"`
	// Instruction steps to enable the connector
	InstructionSteps []CodelessUiConnectorConfigPropertiesResponseInstructionSteps `pulumi:"instructionSteps"`
	// Permissions required for the connector
	Permissions PermissionsResponse `pulumi:"permissions"`
	// Connector publisher name
	Publisher string `pulumi:"publisher"`
	// The sample queries for the connector
	SampleQueries []CodelessUiConnectorConfigPropertiesResponseSampleQueries `pulumi:"sampleQueries"`
	// Connector blade title
	Title string `pulumi:"title"`
}

// Config to describe the instructions blade
type CodelessUiConnectorConfigPropertiesResponseOutput struct{ *pulumi.OutputState }

func (CodelessUiConnectorConfigPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CodelessUiConnectorConfigPropertiesResponse)(nil)).Elem()
}

func (o CodelessUiConnectorConfigPropertiesResponseOutput) ToCodelessUiConnectorConfigPropertiesResponseOutput() CodelessUiConnectorConfigPropertiesResponseOutput {
	return o
}

func (o CodelessUiConnectorConfigPropertiesResponseOutput) ToCodelessUiConnectorConfigPropertiesResponseOutputWithContext(ctx context.Context) CodelessUiConnectorConfigPropertiesResponseOutput {
	return o
}

// Connector Availability Status
func (o CodelessUiConnectorConfigPropertiesResponseOutput) Availability() AvailabilityResponseOutput {
	return o.ApplyT(func(v CodelessUiConnectorConfigPropertiesResponse) AvailabilityResponse { return v.Availability }).(AvailabilityResponseOutput)
}

// Define the way the connector check connectivity
func (o CodelessUiConnectorConfigPropertiesResponseOutput) ConnectivityCriteria() CodelessUiConnectorConfigPropertiesResponseConnectivityCriteriaArrayOutput {
	return o.ApplyT(func(v CodelessUiConnectorConfigPropertiesResponse) []CodelessUiConnectorConfigPropertiesResponseConnectivityCriteria {
		return v.ConnectivityCriteria
	}).(CodelessUiConnectorConfigPropertiesResponseConnectivityCriteriaArrayOutput)
}

// An optional custom image to be used when displaying the connector within Azure Sentinel's connector's gallery
func (o CodelessUiConnectorConfigPropertiesResponseOutput) CustomImage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CodelessUiConnectorConfigPropertiesResponse) *string { return v.CustomImage }).(pulumi.StringPtrOutput)
}

// Data types to check for last data received
func (o CodelessUiConnectorConfigPropertiesResponseOutput) DataTypes() CodelessUiConnectorConfigPropertiesResponseDataTypesArrayOutput {
	return o.ApplyT(func(v CodelessUiConnectorConfigPropertiesResponse) []CodelessUiConnectorConfigPropertiesResponseDataTypes {
		return v.DataTypes
	}).(CodelessUiConnectorConfigPropertiesResponseDataTypesArrayOutput)
}

// Connector description
func (o CodelessUiConnectorConfigPropertiesResponseOutput) DescriptionMarkdown() pulumi.StringOutput {
	return o.ApplyT(func(v CodelessUiConnectorConfigPropertiesResponse) string { return v.DescriptionMarkdown }).(pulumi.StringOutput)
}

// The graph query to show the current data status
func (o CodelessUiConnectorConfigPropertiesResponseOutput) GraphQueries() CodelessUiConnectorConfigPropertiesResponseGraphQueriesArrayOutput {
	return o.ApplyT(func(v CodelessUiConnectorConfigPropertiesResponse) []CodelessUiConnectorConfigPropertiesResponseGraphQueries {
		return v.GraphQueries
	}).(CodelessUiConnectorConfigPropertiesResponseGraphQueriesArrayOutput)
}

// Name of the table the connector will insert the data to
func (o CodelessUiConnectorConfigPropertiesResponseOutput) GraphQueriesTableName() pulumi.StringOutput {
	return o.ApplyT(func(v CodelessUiConnectorConfigPropertiesResponse) string { return v.GraphQueriesTableName }).(pulumi.StringOutput)
}

// Instruction steps to enable the connector
func (o CodelessUiConnectorConfigPropertiesResponseOutput) InstructionSteps() CodelessUiConnectorConfigPropertiesResponseInstructionStepsArrayOutput {
	return o.ApplyT(func(v CodelessUiConnectorConfigPropertiesResponse) []CodelessUiConnectorConfigPropertiesResponseInstructionSteps {
		return v.InstructionSteps
	}).(CodelessUiConnectorConfigPropertiesResponseInstructionStepsArrayOutput)
}

// Permissions required for the connector
func (o CodelessUiConnectorConfigPropertiesResponseOutput) Permissions() PermissionsResponseOutput {
	return o.ApplyT(func(v CodelessUiConnectorConfigPropertiesResponse) PermissionsResponse { return v.Permissions }).(PermissionsResponseOutput)
}

// Connector publisher name
func (o CodelessUiConnectorConfigPropertiesResponseOutput) Publisher() pulumi.StringOutput {
	return o.ApplyT(func(v CodelessUiConnectorConfigPropertiesResponse) string { return v.Publisher }).(pulumi.StringOutput)
}

// The sample queries for the connector
func (o CodelessUiConnectorConfigPropertiesResponseOutput) SampleQueries() CodelessUiConnectorConfigPropertiesResponseSampleQueriesArrayOutput {
	return o.ApplyT(func(v CodelessUiConnectorConfigPropertiesResponse) []CodelessUiConnectorConfigPropertiesResponseSampleQueries {
		return v.SampleQueries
	}).(CodelessUiConnectorConfigPropertiesResponseSampleQueriesArrayOutput)
}

// Connector blade title
func (o CodelessUiConnectorConfigPropertiesResponseOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v CodelessUiConnectorConfigPropertiesResponse) string { return v.Title }).(pulumi.StringOutput)
}

type CodelessUiConnectorConfigPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (CodelessUiConnectorConfigPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CodelessUiConnectorConfigPropertiesResponse)(nil)).Elem()
}

func (o CodelessUiConnectorConfigPropertiesResponsePtrOutput) ToCodelessUiConnectorConfigPropertiesResponsePtrOutput() CodelessUiConnectorConfigPropertiesResponsePtrOutput {
	return o
}

func (o CodelessUiConnectorConfigPropertiesResponsePtrOutput) ToCodelessUiConnectorConfigPropertiesResponsePtrOutputWithContext(ctx context.Context) CodelessUiConnectorConfigPropertiesResponsePtrOutput {
	return o
}

func (o CodelessUiConnectorConfigPropertiesResponsePtrOutput) Elem() CodelessUiConnectorConfigPropertiesResponseOutput {
	return o.ApplyT(func(v *CodelessUiConnectorConfigPropertiesResponse) CodelessUiConnectorConfigPropertiesResponse {
		if v != nil {
			return *v
		}
		var ret CodelessUiConnectorConfigPropertiesResponse
		return ret
	}).(CodelessUiConnectorConfigPropertiesResponseOutput)
}

// Connector Availability Status
func (o CodelessUiConnectorConfigPropertiesResponsePtrOutput) Availability() AvailabilityResponsePtrOutput {
	return o.ApplyT(func(v *CodelessUiConnectorConfigPropertiesResponse) *AvailabilityResponse {
		if v == nil {
			return nil
		}
		return &v.Availability
	}).(AvailabilityResponsePtrOutput)
}

// Define the way the connector check connectivity
func (o CodelessUiConnectorConfigPropertiesResponsePtrOutput) ConnectivityCriteria() CodelessUiConnectorConfigPropertiesResponseConnectivityCriteriaArrayOutput {
	return o.ApplyT(func(v *CodelessUiConnectorConfigPropertiesResponse) []CodelessUiConnectorConfigPropertiesResponseConnectivityCriteria {
		if v == nil {
			return nil
		}
		return v.ConnectivityCriteria
	}).(CodelessUiConnectorConfigPropertiesResponseConnectivityCriteriaArrayOutput)
}

// An optional custom image to be used when displaying the connector within Azure Sentinel's connector's gallery
func (o CodelessUiConnectorConfigPropertiesResponsePtrOutput) CustomImage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CodelessUiConnectorConfigPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.CustomImage
	}).(pulumi.StringPtrOutput)
}

// Data types to check for last data received
func (o CodelessUiConnectorConfigPropertiesResponsePtrOutput) DataTypes() CodelessUiConnectorConfigPropertiesResponseDataTypesArrayOutput {
	return o.ApplyT(func(v *CodelessUiConnectorConfigPropertiesResponse) []CodelessUiConnectorConfigPropertiesResponseDataTypes {
		if v == nil {
			return nil
		}
		return v.DataTypes
	}).(CodelessUiConnectorConfigPropertiesResponseDataTypesArrayOutput)
}

// Connector description
func (o CodelessUiConnectorConfigPropertiesResponsePtrOutput) DescriptionMarkdown() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CodelessUiConnectorConfigPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.DescriptionMarkdown
	}).(pulumi.StringPtrOutput)
}

// The graph query to show the current data status
func (o CodelessUiConnectorConfigPropertiesResponsePtrOutput) GraphQueries() CodelessUiConnectorConfigPropertiesResponseGraphQueriesArrayOutput {
	return o.ApplyT(func(v *CodelessUiConnectorConfigPropertiesResponse) []CodelessUiConnectorConfigPropertiesResponseGraphQueries {
		if v == nil {
			return nil
		}
		return v.GraphQueries
	}).(CodelessUiConnectorConfigPropertiesResponseGraphQueriesArrayOutput)
}

// Name of the table the connector will insert the data to
func (o CodelessUiConnectorConfigPropertiesResponsePtrOutput) GraphQueriesTableName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CodelessUiConnectorConfigPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.GraphQueriesTableName
	}).(pulumi.StringPtrOutput)
}

// Instruction steps to enable the connector
func (o CodelessUiConnectorConfigPropertiesResponsePtrOutput) InstructionSteps() CodelessUiConnectorConfigPropertiesResponseInstructionStepsArrayOutput {
	return o.ApplyT(func(v *CodelessUiConnectorConfigPropertiesResponse) []CodelessUiConnectorConfigPropertiesResponseInstructionSteps {
		if v == nil {
			return nil
		}
		return v.InstructionSteps
	}).(CodelessUiConnectorConfigPropertiesResponseInstructionStepsArrayOutput)
}

// Permissions required for the connector
func (o CodelessUiConnectorConfigPropertiesResponsePtrOutput) Permissions() PermissionsResponsePtrOutput {
	return o.ApplyT(func(v *CodelessUiConnectorConfigPropertiesResponse) *PermissionsResponse {
		if v == nil {
			return nil
		}
		return &v.Permissions
	}).(PermissionsResponsePtrOutput)
}

// Connector publisher name
func (o CodelessUiConnectorConfigPropertiesResponsePtrOutput) Publisher() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CodelessUiConnectorConfigPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Publisher
	}).(pulumi.StringPtrOutput)
}

// The sample queries for the connector
func (o CodelessUiConnectorConfigPropertiesResponsePtrOutput) SampleQueries() CodelessUiConnectorConfigPropertiesResponseSampleQueriesArrayOutput {
	return o.ApplyT(func(v *CodelessUiConnectorConfigPropertiesResponse) []CodelessUiConnectorConfigPropertiesResponseSampleQueries {
		if v == nil {
			return nil
		}
		return v.SampleQueries
	}).(CodelessUiConnectorConfigPropertiesResponseSampleQueriesArrayOutput)
}

// Connector blade title
func (o CodelessUiConnectorConfigPropertiesResponsePtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CodelessUiConnectorConfigPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Title
	}).(pulumi.StringPtrOutput)
}

type CodelessUiConnectorConfigPropertiesResponseConnectivityCriteria struct {
	// type of connectivity
	Type *string `pulumi:"type"`
	// Queries for checking connectivity
	Value []string `pulumi:"value"`
}

type CodelessUiConnectorConfigPropertiesResponseConnectivityCriteriaOutput struct{ *pulumi.OutputState }

func (CodelessUiConnectorConfigPropertiesResponseConnectivityCriteriaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CodelessUiConnectorConfigPropertiesResponseConnectivityCriteria)(nil)).Elem()
}

func (o CodelessUiConnectorConfigPropertiesResponseConnectivityCriteriaOutput) ToCodelessUiConnectorConfigPropertiesResponseConnectivityCriteriaOutput() CodelessUiConnectorConfigPropertiesResponseConnectivityCriteriaOutput {
	return o
}

func (o CodelessUiConnectorConfigPropertiesResponseConnectivityCriteriaOutput) ToCodelessUiConnectorConfigPropertiesResponseConnectivityCriteriaOutputWithContext(ctx context.Context) CodelessUiConnectorConfigPropertiesResponseConnectivityCriteriaOutput {
	return o
}

// type of connectivity
func (o CodelessUiConnectorConfigPropertiesResponseConnectivityCriteriaOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CodelessUiConnectorConfigPropertiesResponseConnectivityCriteria) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// Queries for checking connectivity
func (o CodelessUiConnectorConfigPropertiesResponseConnectivityCriteriaOutput) Value() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CodelessUiConnectorConfigPropertiesResponseConnectivityCriteria) []string { return v.Value }).(pulumi.StringArrayOutput)
}

type CodelessUiConnectorConfigPropertiesResponseConnectivityCriteriaArrayOutput struct{ *pulumi.OutputState }

func (CodelessUiConnectorConfigPropertiesResponseConnectivityCriteriaArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CodelessUiConnectorConfigPropertiesResponseConnectivityCriteria)(nil)).Elem()
}

func (o CodelessUiConnectorConfigPropertiesResponseConnectivityCriteriaArrayOutput) ToCodelessUiConnectorConfigPropertiesResponseConnectivityCriteriaArrayOutput() CodelessUiConnectorConfigPropertiesResponseConnectivityCriteriaArrayOutput {
	return o
}

func (o CodelessUiConnectorConfigPropertiesResponseConnectivityCriteriaArrayOutput) ToCodelessUiConnectorConfigPropertiesResponseConnectivityCriteriaArrayOutputWithContext(ctx context.Context) CodelessUiConnectorConfigPropertiesResponseConnectivityCriteriaArrayOutput {
	return o
}

func (o CodelessUiConnectorConfigPropertiesResponseConnectivityCriteriaArrayOutput) Index(i pulumi.IntInput) CodelessUiConnectorConfigPropertiesResponseConnectivityCriteriaOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CodelessUiConnectorConfigPropertiesResponseConnectivityCriteria {
		return vs[0].([]CodelessUiConnectorConfigPropertiesResponseConnectivityCriteria)[vs[1].(int)]
	}).(CodelessUiConnectorConfigPropertiesResponseConnectivityCriteriaOutput)
}

type CodelessUiConnectorConfigPropertiesResponseDataTypes struct {
	// Query for indicate last data received
	LastDataReceivedQuery *string `pulumi:"lastDataReceivedQuery"`
	// Name of the data type to show in the graph. can be use with {{graphQueriesTableName}} placeholder
	Name *string `pulumi:"name"`
}

type CodelessUiConnectorConfigPropertiesResponseDataTypesOutput struct{ *pulumi.OutputState }

func (CodelessUiConnectorConfigPropertiesResponseDataTypesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CodelessUiConnectorConfigPropertiesResponseDataTypes)(nil)).Elem()
}

func (o CodelessUiConnectorConfigPropertiesResponseDataTypesOutput) ToCodelessUiConnectorConfigPropertiesResponseDataTypesOutput() CodelessUiConnectorConfigPropertiesResponseDataTypesOutput {
	return o
}

func (o CodelessUiConnectorConfigPropertiesResponseDataTypesOutput) ToCodelessUiConnectorConfigPropertiesResponseDataTypesOutputWithContext(ctx context.Context) CodelessUiConnectorConfigPropertiesResponseDataTypesOutput {
	return o
}

// Query for indicate last data received
func (o CodelessUiConnectorConfigPropertiesResponseDataTypesOutput) LastDataReceivedQuery() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CodelessUiConnectorConfigPropertiesResponseDataTypes) *string { return v.LastDataReceivedQuery }).(pulumi.StringPtrOutput)
}

// Name of the data type to show in the graph. can be use with {{graphQueriesTableName}} placeholder
func (o CodelessUiConnectorConfigPropertiesResponseDataTypesOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CodelessUiConnectorConfigPropertiesResponseDataTypes) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type CodelessUiConnectorConfigPropertiesResponseDataTypesArrayOutput struct{ *pulumi.OutputState }

func (CodelessUiConnectorConfigPropertiesResponseDataTypesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CodelessUiConnectorConfigPropertiesResponseDataTypes)(nil)).Elem()
}

func (o CodelessUiConnectorConfigPropertiesResponseDataTypesArrayOutput) ToCodelessUiConnectorConfigPropertiesResponseDataTypesArrayOutput() CodelessUiConnectorConfigPropertiesResponseDataTypesArrayOutput {
	return o
}

func (o CodelessUiConnectorConfigPropertiesResponseDataTypesArrayOutput) ToCodelessUiConnectorConfigPropertiesResponseDataTypesArrayOutputWithContext(ctx context.Context) CodelessUiConnectorConfigPropertiesResponseDataTypesArrayOutput {
	return o
}

func (o CodelessUiConnectorConfigPropertiesResponseDataTypesArrayOutput) Index(i pulumi.IntInput) CodelessUiConnectorConfigPropertiesResponseDataTypesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CodelessUiConnectorConfigPropertiesResponseDataTypes {
		return vs[0].([]CodelessUiConnectorConfigPropertiesResponseDataTypes)[vs[1].(int)]
	}).(CodelessUiConnectorConfigPropertiesResponseDataTypesOutput)
}

type CodelessUiConnectorConfigPropertiesResponseGraphQueries struct {
	// The base query for the graph
	BaseQuery *string `pulumi:"baseQuery"`
	// The legend for the graph
	Legend *string `pulumi:"legend"`
	// the metric that the query is checking
	MetricName *string `pulumi:"metricName"`
}

type CodelessUiConnectorConfigPropertiesResponseGraphQueriesOutput struct{ *pulumi.OutputState }

func (CodelessUiConnectorConfigPropertiesResponseGraphQueriesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CodelessUiConnectorConfigPropertiesResponseGraphQueries)(nil)).Elem()
}

func (o CodelessUiConnectorConfigPropertiesResponseGraphQueriesOutput) ToCodelessUiConnectorConfigPropertiesResponseGraphQueriesOutput() CodelessUiConnectorConfigPropertiesResponseGraphQueriesOutput {
	return o
}

func (o CodelessUiConnectorConfigPropertiesResponseGraphQueriesOutput) ToCodelessUiConnectorConfigPropertiesResponseGraphQueriesOutputWithContext(ctx context.Context) CodelessUiConnectorConfigPropertiesResponseGraphQueriesOutput {
	return o
}

// The base query for the graph
func (o CodelessUiConnectorConfigPropertiesResponseGraphQueriesOutput) BaseQuery() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CodelessUiConnectorConfigPropertiesResponseGraphQueries) *string { return v.BaseQuery }).(pulumi.StringPtrOutput)
}

// The legend for the graph
func (o CodelessUiConnectorConfigPropertiesResponseGraphQueriesOutput) Legend() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CodelessUiConnectorConfigPropertiesResponseGraphQueries) *string { return v.Legend }).(pulumi.StringPtrOutput)
}

// the metric that the query is checking
func (o CodelessUiConnectorConfigPropertiesResponseGraphQueriesOutput) MetricName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CodelessUiConnectorConfigPropertiesResponseGraphQueries) *string { return v.MetricName }).(pulumi.StringPtrOutput)
}

type CodelessUiConnectorConfigPropertiesResponseGraphQueriesArrayOutput struct{ *pulumi.OutputState }

func (CodelessUiConnectorConfigPropertiesResponseGraphQueriesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CodelessUiConnectorConfigPropertiesResponseGraphQueries)(nil)).Elem()
}

func (o CodelessUiConnectorConfigPropertiesResponseGraphQueriesArrayOutput) ToCodelessUiConnectorConfigPropertiesResponseGraphQueriesArrayOutput() CodelessUiConnectorConfigPropertiesResponseGraphQueriesArrayOutput {
	return o
}

func (o CodelessUiConnectorConfigPropertiesResponseGraphQueriesArrayOutput) ToCodelessUiConnectorConfigPropertiesResponseGraphQueriesArrayOutputWithContext(ctx context.Context) CodelessUiConnectorConfigPropertiesResponseGraphQueriesArrayOutput {
	return o
}

func (o CodelessUiConnectorConfigPropertiesResponseGraphQueriesArrayOutput) Index(i pulumi.IntInput) CodelessUiConnectorConfigPropertiesResponseGraphQueriesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CodelessUiConnectorConfigPropertiesResponseGraphQueries {
		return vs[0].([]CodelessUiConnectorConfigPropertiesResponseGraphQueries)[vs[1].(int)]
	}).(CodelessUiConnectorConfigPropertiesResponseGraphQueriesOutput)
}

type CodelessUiConnectorConfigPropertiesResponseInstructionSteps struct {
	// Instruction step description
	Description *string `pulumi:"description"`
	// Instruction step details
	Instructions []InstructionStepsResponseInstructions `pulumi:"instructions"`
	// Instruction step title
	Title *string `pulumi:"title"`
}

type CodelessUiConnectorConfigPropertiesResponseInstructionStepsOutput struct{ *pulumi.OutputState }

func (CodelessUiConnectorConfigPropertiesResponseInstructionStepsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CodelessUiConnectorConfigPropertiesResponseInstructionSteps)(nil)).Elem()
}

func (o CodelessUiConnectorConfigPropertiesResponseInstructionStepsOutput) ToCodelessUiConnectorConfigPropertiesResponseInstructionStepsOutput() CodelessUiConnectorConfigPropertiesResponseInstructionStepsOutput {
	return o
}

func (o CodelessUiConnectorConfigPropertiesResponseInstructionStepsOutput) ToCodelessUiConnectorConfigPropertiesResponseInstructionStepsOutputWithContext(ctx context.Context) CodelessUiConnectorConfigPropertiesResponseInstructionStepsOutput {
	return o
}

// Instruction step description
func (o CodelessUiConnectorConfigPropertiesResponseInstructionStepsOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CodelessUiConnectorConfigPropertiesResponseInstructionSteps) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Instruction step details
func (o CodelessUiConnectorConfigPropertiesResponseInstructionStepsOutput) Instructions() InstructionStepsResponseInstructionsArrayOutput {
	return o.ApplyT(func(v CodelessUiConnectorConfigPropertiesResponseInstructionSteps) []InstructionStepsResponseInstructions {
		return v.Instructions
	}).(InstructionStepsResponseInstructionsArrayOutput)
}

// Instruction step title
func (o CodelessUiConnectorConfigPropertiesResponseInstructionStepsOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CodelessUiConnectorConfigPropertiesResponseInstructionSteps) *string { return v.Title }).(pulumi.StringPtrOutput)
}

type CodelessUiConnectorConfigPropertiesResponseInstructionStepsArrayOutput struct{ *pulumi.OutputState }

func (CodelessUiConnectorConfigPropertiesResponseInstructionStepsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CodelessUiConnectorConfigPropertiesResponseInstructionSteps)(nil)).Elem()
}

func (o CodelessUiConnectorConfigPropertiesResponseInstructionStepsArrayOutput) ToCodelessUiConnectorConfigPropertiesResponseInstructionStepsArrayOutput() CodelessUiConnectorConfigPropertiesResponseInstructionStepsArrayOutput {
	return o
}

func (o CodelessUiConnectorConfigPropertiesResponseInstructionStepsArrayOutput) ToCodelessUiConnectorConfigPropertiesResponseInstructionStepsArrayOutputWithContext(ctx context.Context) CodelessUiConnectorConfigPropertiesResponseInstructionStepsArrayOutput {
	return o
}

func (o CodelessUiConnectorConfigPropertiesResponseInstructionStepsArrayOutput) Index(i pulumi.IntInput) CodelessUiConnectorConfigPropertiesResponseInstructionStepsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CodelessUiConnectorConfigPropertiesResponseInstructionSteps {
		return vs[0].([]CodelessUiConnectorConfigPropertiesResponseInstructionSteps)[vs[1].(int)]
	}).(CodelessUiConnectorConfigPropertiesResponseInstructionStepsOutput)
}

type CodelessUiConnectorConfigPropertiesResponseSampleQueries struct {
	// The sample query description
	Description *string `pulumi:"description"`
	// the sample query
	Query *string `pulumi:"query"`
}

type CodelessUiConnectorConfigPropertiesResponseSampleQueriesOutput struct{ *pulumi.OutputState }

func (CodelessUiConnectorConfigPropertiesResponseSampleQueriesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CodelessUiConnectorConfigPropertiesResponseSampleQueries)(nil)).Elem()
}

func (o CodelessUiConnectorConfigPropertiesResponseSampleQueriesOutput) ToCodelessUiConnectorConfigPropertiesResponseSampleQueriesOutput() CodelessUiConnectorConfigPropertiesResponseSampleQueriesOutput {
	return o
}

func (o CodelessUiConnectorConfigPropertiesResponseSampleQueriesOutput) ToCodelessUiConnectorConfigPropertiesResponseSampleQueriesOutputWithContext(ctx context.Context) CodelessUiConnectorConfigPropertiesResponseSampleQueriesOutput {
	return o
}

// The sample query description
func (o CodelessUiConnectorConfigPropertiesResponseSampleQueriesOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CodelessUiConnectorConfigPropertiesResponseSampleQueries) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// the sample query
func (o CodelessUiConnectorConfigPropertiesResponseSampleQueriesOutput) Query() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CodelessUiConnectorConfigPropertiesResponseSampleQueries) *string { return v.Query }).(pulumi.StringPtrOutput)
}

type CodelessUiConnectorConfigPropertiesResponseSampleQueriesArrayOutput struct{ *pulumi.OutputState }

func (CodelessUiConnectorConfigPropertiesResponseSampleQueriesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CodelessUiConnectorConfigPropertiesResponseSampleQueries)(nil)).Elem()
}

func (o CodelessUiConnectorConfigPropertiesResponseSampleQueriesArrayOutput) ToCodelessUiConnectorConfigPropertiesResponseSampleQueriesArrayOutput() CodelessUiConnectorConfigPropertiesResponseSampleQueriesArrayOutput {
	return o
}

func (o CodelessUiConnectorConfigPropertiesResponseSampleQueriesArrayOutput) ToCodelessUiConnectorConfigPropertiesResponseSampleQueriesArrayOutputWithContext(ctx context.Context) CodelessUiConnectorConfigPropertiesResponseSampleQueriesArrayOutput {
	return o
}

func (o CodelessUiConnectorConfigPropertiesResponseSampleQueriesArrayOutput) Index(i pulumi.IntInput) CodelessUiConnectorConfigPropertiesResponseSampleQueriesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CodelessUiConnectorConfigPropertiesResponseSampleQueries {
		return vs[0].([]CodelessUiConnectorConfigPropertiesResponseSampleQueries)[vs[1].(int)]
	}).(CodelessUiConnectorConfigPropertiesResponseSampleQueriesOutput)
}

type CodelessUiConnectorConfigPropertiesSampleQueries struct {
	// The sample query description
	Description *string `pulumi:"description"`
	// the sample query
	Query *string `pulumi:"query"`
}

// Common field for data type in data connectors.
type DataConnectorDataTypeCommon struct {
	// Describe whether this data type connection is enabled or not.
	State string `pulumi:"state"`
}

// Common field for data type in data connectors.
type DataConnectorDataTypeCommonResponse struct {
	// Describe whether this data type connection is enabled or not.
	State string `pulumi:"state"`
}

// Common field for data type in data connectors.
type DataConnectorDataTypeCommonResponseOutput struct{ *pulumi.OutputState }

func (DataConnectorDataTypeCommonResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataConnectorDataTypeCommonResponse)(nil)).Elem()
}

func (o DataConnectorDataTypeCommonResponseOutput) ToDataConnectorDataTypeCommonResponseOutput() DataConnectorDataTypeCommonResponseOutput {
	return o
}

func (o DataConnectorDataTypeCommonResponseOutput) ToDataConnectorDataTypeCommonResponseOutputWithContext(ctx context.Context) DataConnectorDataTypeCommonResponseOutput {
	return o
}

// Describe whether this data type connection is enabled or not.
func (o DataConnectorDataTypeCommonResponseOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v DataConnectorDataTypeCommonResponse) string { return v.State }).(pulumi.StringOutput)
}

type DataConnectorDataTypeCommonResponsePtrOutput struct{ *pulumi.OutputState }

func (DataConnectorDataTypeCommonResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataConnectorDataTypeCommonResponse)(nil)).Elem()
}

func (o DataConnectorDataTypeCommonResponsePtrOutput) ToDataConnectorDataTypeCommonResponsePtrOutput() DataConnectorDataTypeCommonResponsePtrOutput {
	return o
}

func (o DataConnectorDataTypeCommonResponsePtrOutput) ToDataConnectorDataTypeCommonResponsePtrOutputWithContext(ctx context.Context) DataConnectorDataTypeCommonResponsePtrOutput {
	return o
}

func (o DataConnectorDataTypeCommonResponsePtrOutput) Elem() DataConnectorDataTypeCommonResponseOutput {
	return o.ApplyT(func(v *DataConnectorDataTypeCommonResponse) DataConnectorDataTypeCommonResponse {
		if v != nil {
			return *v
		}
		var ret DataConnectorDataTypeCommonResponse
		return ret
	}).(DataConnectorDataTypeCommonResponseOutput)
}

// Describe whether this data type connection is enabled or not.
func (o DataConnectorDataTypeCommonResponsePtrOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataConnectorDataTypeCommonResponse) *string {
		if v == nil {
			return nil
		}
		return &v.State
	}).(pulumi.StringPtrOutput)
}

// The available data types for Dynamics365 data connector.
type Dynamics365DataConnectorDataTypes struct {
	// Common Data Service data type connection.
	Dynamics365CdsActivities Dynamics365DataConnectorDataTypesDynamics365CdsActivities `pulumi:"dynamics365CdsActivities"`
}

// Common Data Service data type connection.
type Dynamics365DataConnectorDataTypesDynamics365CdsActivities struct {
	// Describe whether this data type connection is enabled or not.
	State string `pulumi:"state"`
}

// The available data types for Dynamics365 data connector.
type Dynamics365DataConnectorDataTypesResponse struct {
	// Common Data Service data type connection.
	Dynamics365CdsActivities Dynamics365DataConnectorDataTypesResponseDynamics365CdsActivities `pulumi:"dynamics365CdsActivities"`
}

// The available data types for Dynamics365 data connector.
type Dynamics365DataConnectorDataTypesResponseOutput struct{ *pulumi.OutputState }

func (Dynamics365DataConnectorDataTypesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Dynamics365DataConnectorDataTypesResponse)(nil)).Elem()
}

func (o Dynamics365DataConnectorDataTypesResponseOutput) ToDynamics365DataConnectorDataTypesResponseOutput() Dynamics365DataConnectorDataTypesResponseOutput {
	return o
}

func (o Dynamics365DataConnectorDataTypesResponseOutput) ToDynamics365DataConnectorDataTypesResponseOutputWithContext(ctx context.Context) Dynamics365DataConnectorDataTypesResponseOutput {
	return o
}

// Common Data Service data type connection.
func (o Dynamics365DataConnectorDataTypesResponseOutput) Dynamics365CdsActivities() Dynamics365DataConnectorDataTypesResponseDynamics365CdsActivitiesOutput {
	return o.ApplyT(func(v Dynamics365DataConnectorDataTypesResponse) Dynamics365DataConnectorDataTypesResponseDynamics365CdsActivities {
		return v.Dynamics365CdsActivities
	}).(Dynamics365DataConnectorDataTypesResponseDynamics365CdsActivitiesOutput)
}

// Common Data Service data type connection.
type Dynamics365DataConnectorDataTypesResponseDynamics365CdsActivities struct {
	// Describe whether this data type connection is enabled or not.
	State string `pulumi:"state"`
}

// Common Data Service data type connection.
type Dynamics365DataConnectorDataTypesResponseDynamics365CdsActivitiesOutput struct{ *pulumi.OutputState }

func (Dynamics365DataConnectorDataTypesResponseDynamics365CdsActivitiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Dynamics365DataConnectorDataTypesResponseDynamics365CdsActivities)(nil)).Elem()
}

func (o Dynamics365DataConnectorDataTypesResponseDynamics365CdsActivitiesOutput) ToDynamics365DataConnectorDataTypesResponseDynamics365CdsActivitiesOutput() Dynamics365DataConnectorDataTypesResponseDynamics365CdsActivitiesOutput {
	return o
}

func (o Dynamics365DataConnectorDataTypesResponseDynamics365CdsActivitiesOutput) ToDynamics365DataConnectorDataTypesResponseDynamics365CdsActivitiesOutputWithContext(ctx context.Context) Dynamics365DataConnectorDataTypesResponseDynamics365CdsActivitiesOutput {
	return o
}

// Describe whether this data type connection is enabled or not.
func (o Dynamics365DataConnectorDataTypesResponseDynamics365CdsActivitiesOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v Dynamics365DataConnectorDataTypesResponseDynamics365CdsActivities) string { return v.State }).(pulumi.StringOutput)
}

// Entity insight Item.
type EntityInsightItemResponse struct {
	// Query results for table insights query.
	ChartQueryResults []InsightsTableResultResponse `pulumi:"chartQueryResults"`
	// The query id of the insight
	QueryId *string `pulumi:"queryId"`
	// The Time interval that the query actually executed on.
	QueryTimeInterval *EntityInsightItemResponseQueryTimeInterval `pulumi:"queryTimeInterval"`
	// Query results for table insights query.
	TableQueryResults *InsightsTableResultResponse `pulumi:"tableQueryResults"`
}

// Entity insight Item.
type EntityInsightItemResponseOutput struct{ *pulumi.OutputState }

func (EntityInsightItemResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EntityInsightItemResponse)(nil)).Elem()
}

func (o EntityInsightItemResponseOutput) ToEntityInsightItemResponseOutput() EntityInsightItemResponseOutput {
	return o
}

func (o EntityInsightItemResponseOutput) ToEntityInsightItemResponseOutputWithContext(ctx context.Context) EntityInsightItemResponseOutput {
	return o
}

// Query results for table insights query.
func (o EntityInsightItemResponseOutput) ChartQueryResults() InsightsTableResultResponseArrayOutput {
	return o.ApplyT(func(v EntityInsightItemResponse) []InsightsTableResultResponse { return v.ChartQueryResults }).(InsightsTableResultResponseArrayOutput)
}

// The query id of the insight
func (o EntityInsightItemResponseOutput) QueryId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EntityInsightItemResponse) *string { return v.QueryId }).(pulumi.StringPtrOutput)
}

// The Time interval that the query actually executed on.
func (o EntityInsightItemResponseOutput) QueryTimeInterval() EntityInsightItemResponseQueryTimeIntervalPtrOutput {
	return o.ApplyT(func(v EntityInsightItemResponse) *EntityInsightItemResponseQueryTimeInterval {
		return v.QueryTimeInterval
	}).(EntityInsightItemResponseQueryTimeIntervalPtrOutput)
}

// Query results for table insights query.
func (o EntityInsightItemResponseOutput) TableQueryResults() InsightsTableResultResponsePtrOutput {
	return o.ApplyT(func(v EntityInsightItemResponse) *InsightsTableResultResponse { return v.TableQueryResults }).(InsightsTableResultResponsePtrOutput)
}

type EntityInsightItemResponseArrayOutput struct{ *pulumi.OutputState }

func (EntityInsightItemResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EntityInsightItemResponse)(nil)).Elem()
}

func (o EntityInsightItemResponseArrayOutput) ToEntityInsightItemResponseArrayOutput() EntityInsightItemResponseArrayOutput {
	return o
}

func (o EntityInsightItemResponseArrayOutput) ToEntityInsightItemResponseArrayOutputWithContext(ctx context.Context) EntityInsightItemResponseArrayOutput {
	return o
}

func (o EntityInsightItemResponseArrayOutput) Index(i pulumi.IntInput) EntityInsightItemResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EntityInsightItemResponse {
		return vs[0].([]EntityInsightItemResponse)[vs[1].(int)]
	}).(EntityInsightItemResponseOutput)
}

// The Time interval that the query actually executed on.
type EntityInsightItemResponseQueryTimeInterval struct {
	// Insight query end time
	EndTime *string `pulumi:"endTime"`
	// Insight query start time
	StartTime *string `pulumi:"startTime"`
}

// The Time interval that the query actually executed on.
type EntityInsightItemResponseQueryTimeIntervalOutput struct{ *pulumi.OutputState }

func (EntityInsightItemResponseQueryTimeIntervalOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EntityInsightItemResponseQueryTimeInterval)(nil)).Elem()
}

func (o EntityInsightItemResponseQueryTimeIntervalOutput) ToEntityInsightItemResponseQueryTimeIntervalOutput() EntityInsightItemResponseQueryTimeIntervalOutput {
	return o
}

func (o EntityInsightItemResponseQueryTimeIntervalOutput) ToEntityInsightItemResponseQueryTimeIntervalOutputWithContext(ctx context.Context) EntityInsightItemResponseQueryTimeIntervalOutput {
	return o
}

// Insight query end time
func (o EntityInsightItemResponseQueryTimeIntervalOutput) EndTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EntityInsightItemResponseQueryTimeInterval) *string { return v.EndTime }).(pulumi.StringPtrOutput)
}

// Insight query start time
func (o EntityInsightItemResponseQueryTimeIntervalOutput) StartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EntityInsightItemResponseQueryTimeInterval) *string { return v.StartTime }).(pulumi.StringPtrOutput)
}

type EntityInsightItemResponseQueryTimeIntervalPtrOutput struct{ *pulumi.OutputState }

func (EntityInsightItemResponseQueryTimeIntervalPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EntityInsightItemResponseQueryTimeInterval)(nil)).Elem()
}

func (o EntityInsightItemResponseQueryTimeIntervalPtrOutput) ToEntityInsightItemResponseQueryTimeIntervalPtrOutput() EntityInsightItemResponseQueryTimeIntervalPtrOutput {
	return o
}

func (o EntityInsightItemResponseQueryTimeIntervalPtrOutput) ToEntityInsightItemResponseQueryTimeIntervalPtrOutputWithContext(ctx context.Context) EntityInsightItemResponseQueryTimeIntervalPtrOutput {
	return o
}

func (o EntityInsightItemResponseQueryTimeIntervalPtrOutput) Elem() EntityInsightItemResponseQueryTimeIntervalOutput {
	return o.ApplyT(func(v *EntityInsightItemResponseQueryTimeInterval) EntityInsightItemResponseQueryTimeInterval {
		if v != nil {
			return *v
		}
		var ret EntityInsightItemResponseQueryTimeInterval
		return ret
	}).(EntityInsightItemResponseQueryTimeIntervalOutput)
}

// Insight query end time
func (o EntityInsightItemResponseQueryTimeIntervalPtrOutput) EndTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EntityInsightItemResponseQueryTimeInterval) *string {
		if v == nil {
			return nil
		}
		return v.EndTime
	}).(pulumi.StringPtrOutput)
}

// Insight query start time
func (o EntityInsightItemResponseQueryTimeIntervalPtrOutput) StartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EntityInsightItemResponseQueryTimeInterval) *string {
		if v == nil {
			return nil
		}
		return v.StartTime
	}).(pulumi.StringPtrOutput)
}

// Single entity mapping for the alert rule
type EntityMapping struct {
	// The V3 type of the mapped entity
	EntityType *string `pulumi:"entityType"`
	// array of field mappings for the given entity mapping
	FieldMappings []FieldMapping `pulumi:"fieldMappings"`
}

// Single entity mapping for the alert rule
type EntityMappingResponse struct {
	// The V3 type of the mapped entity
	EntityType *string `pulumi:"entityType"`
	// array of field mappings for the given entity mapping
	FieldMappings []FieldMappingResponse `pulumi:"fieldMappings"`
}

// Single entity mapping for the alert rule
type EntityMappingResponseOutput struct{ *pulumi.OutputState }

func (EntityMappingResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EntityMappingResponse)(nil)).Elem()
}

func (o EntityMappingResponseOutput) ToEntityMappingResponseOutput() EntityMappingResponseOutput {
	return o
}

func (o EntityMappingResponseOutput) ToEntityMappingResponseOutputWithContext(ctx context.Context) EntityMappingResponseOutput {
	return o
}

// The V3 type of the mapped entity
func (o EntityMappingResponseOutput) EntityType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EntityMappingResponse) *string { return v.EntityType }).(pulumi.StringPtrOutput)
}

// array of field mappings for the given entity mapping
func (o EntityMappingResponseOutput) FieldMappings() FieldMappingResponseArrayOutput {
	return o.ApplyT(func(v EntityMappingResponse) []FieldMappingResponse { return v.FieldMappings }).(FieldMappingResponseArrayOutput)
}

type EntityMappingResponseArrayOutput struct{ *pulumi.OutputState }

func (EntityMappingResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EntityMappingResponse)(nil)).Elem()
}

func (o EntityMappingResponseArrayOutput) ToEntityMappingResponseArrayOutput() EntityMappingResponseArrayOutput {
	return o
}

func (o EntityMappingResponseArrayOutput) ToEntityMappingResponseArrayOutputWithContext(ctx context.Context) EntityMappingResponseArrayOutput {
	return o
}

func (o EntityMappingResponseArrayOutput) Index(i pulumi.IntInput) EntityMappingResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EntityMappingResponse {
		return vs[0].([]EntityMappingResponse)[vs[1].(int)]
	}).(EntityMappingResponseOutput)
}

// Event grouping settings property bag.
type EventGroupingSettings struct {
	// The event grouping aggregation kinds
	AggregationKind *string `pulumi:"aggregationKind"`
}

// Event grouping settings property bag.
type EventGroupingSettingsResponse struct {
	// The event grouping aggregation kinds
	AggregationKind *string `pulumi:"aggregationKind"`
}

// Event grouping settings property bag.
type EventGroupingSettingsResponseOutput struct{ *pulumi.OutputState }

func (EventGroupingSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EventGroupingSettingsResponse)(nil)).Elem()
}

func (o EventGroupingSettingsResponseOutput) ToEventGroupingSettingsResponseOutput() EventGroupingSettingsResponseOutput {
	return o
}

func (o EventGroupingSettingsResponseOutput) ToEventGroupingSettingsResponseOutputWithContext(ctx context.Context) EventGroupingSettingsResponseOutput {
	return o
}

// The event grouping aggregation kinds
func (o EventGroupingSettingsResponseOutput) AggregationKind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EventGroupingSettingsResponse) *string { return v.AggregationKind }).(pulumi.StringPtrOutput)
}

type EventGroupingSettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (EventGroupingSettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EventGroupingSettingsResponse)(nil)).Elem()
}

func (o EventGroupingSettingsResponsePtrOutput) ToEventGroupingSettingsResponsePtrOutput() EventGroupingSettingsResponsePtrOutput {
	return o
}

func (o EventGroupingSettingsResponsePtrOutput) ToEventGroupingSettingsResponsePtrOutputWithContext(ctx context.Context) EventGroupingSettingsResponsePtrOutput {
	return o
}

func (o EventGroupingSettingsResponsePtrOutput) Elem() EventGroupingSettingsResponseOutput {
	return o.ApplyT(func(v *EventGroupingSettingsResponse) EventGroupingSettingsResponse {
		if v != nil {
			return *v
		}
		var ret EventGroupingSettingsResponse
		return ret
	}).(EventGroupingSettingsResponseOutput)
}

// The event grouping aggregation kinds
func (o EventGroupingSettingsResponsePtrOutput) AggregationKind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EventGroupingSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.AggregationKind
	}).(pulumi.StringPtrOutput)
}

// A single field mapping of the mapped entity
type FieldMapping struct {
	// the column name to be mapped to the identifier
	ColumnName *string `pulumi:"columnName"`
	// the V3 identifier of the entity
	Identifier *string `pulumi:"identifier"`
}

// A single field mapping of the mapped entity
type FieldMappingResponse struct {
	// the column name to be mapped to the identifier
	ColumnName *string `pulumi:"columnName"`
	// the V3 identifier of the entity
	Identifier *string `pulumi:"identifier"`
}

// A single field mapping of the mapped entity
type FieldMappingResponseOutput struct{ *pulumi.OutputState }

func (FieldMappingResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FieldMappingResponse)(nil)).Elem()
}

func (o FieldMappingResponseOutput) ToFieldMappingResponseOutput() FieldMappingResponseOutput {
	return o
}

func (o FieldMappingResponseOutput) ToFieldMappingResponseOutputWithContext(ctx context.Context) FieldMappingResponseOutput {
	return o
}

// the column name to be mapped to the identifier
func (o FieldMappingResponseOutput) ColumnName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FieldMappingResponse) *string { return v.ColumnName }).(pulumi.StringPtrOutput)
}

// the V3 identifier of the entity
func (o FieldMappingResponseOutput) Identifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FieldMappingResponse) *string { return v.Identifier }).(pulumi.StringPtrOutput)
}

type FieldMappingResponseArrayOutput struct{ *pulumi.OutputState }

func (FieldMappingResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FieldMappingResponse)(nil)).Elem()
}

func (o FieldMappingResponseArrayOutput) ToFieldMappingResponseArrayOutput() FieldMappingResponseArrayOutput {
	return o
}

func (o FieldMappingResponseArrayOutput) ToFieldMappingResponseArrayOutputWithContext(ctx context.Context) FieldMappingResponseArrayOutput {
	return o
}

func (o FieldMappingResponseArrayOutput) Index(i pulumi.IntInput) FieldMappingResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FieldMappingResponse {
		return vs[0].([]FieldMappingResponse)[vs[1].(int)]
	}).(FieldMappingResponseOutput)
}

// Represents a Fusion scenario exclusion patterns in Fusion detection.
type FusionScenarioExclusionPattern struct {
	// DateTime when scenario exclusion pattern is added in UTC.
	DateAddedInUTC string `pulumi:"dateAddedInUTC"`
	// Scenario exclusion pattern.
	ExclusionPattern string `pulumi:"exclusionPattern"`
}

// Represents a Fusion scenario exclusion patterns in Fusion detection.
type FusionScenarioExclusionPatternResponse struct {
	// DateTime when scenario exclusion pattern is added in UTC.
	DateAddedInUTC string `pulumi:"dateAddedInUTC"`
	// Scenario exclusion pattern.
	ExclusionPattern string `pulumi:"exclusionPattern"`
}

// Represents a Fusion scenario exclusion patterns in Fusion detection.
type FusionScenarioExclusionPatternResponseOutput struct{ *pulumi.OutputState }

func (FusionScenarioExclusionPatternResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FusionScenarioExclusionPatternResponse)(nil)).Elem()
}

func (o FusionScenarioExclusionPatternResponseOutput) ToFusionScenarioExclusionPatternResponseOutput() FusionScenarioExclusionPatternResponseOutput {
	return o
}

func (o FusionScenarioExclusionPatternResponseOutput) ToFusionScenarioExclusionPatternResponseOutputWithContext(ctx context.Context) FusionScenarioExclusionPatternResponseOutput {
	return o
}

// DateTime when scenario exclusion pattern is added in UTC.
func (o FusionScenarioExclusionPatternResponseOutput) DateAddedInUTC() pulumi.StringOutput {
	return o.ApplyT(func(v FusionScenarioExclusionPatternResponse) string { return v.DateAddedInUTC }).(pulumi.StringOutput)
}

// Scenario exclusion pattern.
func (o FusionScenarioExclusionPatternResponseOutput) ExclusionPattern() pulumi.StringOutput {
	return o.ApplyT(func(v FusionScenarioExclusionPatternResponse) string { return v.ExclusionPattern }).(pulumi.StringOutput)
}

type FusionScenarioExclusionPatternResponseArrayOutput struct{ *pulumi.OutputState }

func (FusionScenarioExclusionPatternResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FusionScenarioExclusionPatternResponse)(nil)).Elem()
}

func (o FusionScenarioExclusionPatternResponseArrayOutput) ToFusionScenarioExclusionPatternResponseArrayOutput() FusionScenarioExclusionPatternResponseArrayOutput {
	return o
}

func (o FusionScenarioExclusionPatternResponseArrayOutput) ToFusionScenarioExclusionPatternResponseArrayOutputWithContext(ctx context.Context) FusionScenarioExclusionPatternResponseArrayOutput {
	return o
}

func (o FusionScenarioExclusionPatternResponseArrayOutput) Index(i pulumi.IntInput) FusionScenarioExclusionPatternResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FusionScenarioExclusionPatternResponse {
		return vs[0].([]FusionScenarioExclusionPatternResponse)[vs[1].(int)]
	}).(FusionScenarioExclusionPatternResponseOutput)
}

// Represents a supported source signal configuration in Fusion detection.
type FusionSourceSettings struct {
	// Determines whether this source signal is enabled or disabled in Fusion detection.
	Enabled bool `pulumi:"enabled"`
	// Name of the Fusion source signal. Refer to Fusion alert rule template for supported values.
	SourceName string `pulumi:"sourceName"`
	// Configuration for all source subtypes under this source signal consumed in fusion detection.
	SourceSubTypes []FusionSourceSubTypeSetting `pulumi:"sourceSubTypes"`
}

// Represents a supported source signal configuration in Fusion detection.
type FusionSourceSettingsResponse struct {
	// Determines whether this source signal is enabled or disabled in Fusion detection.
	Enabled bool `pulumi:"enabled"`
	// Name of the Fusion source signal. Refer to Fusion alert rule template for supported values.
	SourceName string `pulumi:"sourceName"`
	// Configuration for all source subtypes under this source signal consumed in fusion detection.
	SourceSubTypes []FusionSourceSubTypeSettingResponse `pulumi:"sourceSubTypes"`
}

// Represents a supported source signal configuration in Fusion detection.
type FusionSourceSettingsResponseOutput struct{ *pulumi.OutputState }

func (FusionSourceSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FusionSourceSettingsResponse)(nil)).Elem()
}

func (o FusionSourceSettingsResponseOutput) ToFusionSourceSettingsResponseOutput() FusionSourceSettingsResponseOutput {
	return o
}

func (o FusionSourceSettingsResponseOutput) ToFusionSourceSettingsResponseOutputWithContext(ctx context.Context) FusionSourceSettingsResponseOutput {
	return o
}

// Determines whether this source signal is enabled or disabled in Fusion detection.
func (o FusionSourceSettingsResponseOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v FusionSourceSettingsResponse) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// Name of the Fusion source signal. Refer to Fusion alert rule template for supported values.
func (o FusionSourceSettingsResponseOutput) SourceName() pulumi.StringOutput {
	return o.ApplyT(func(v FusionSourceSettingsResponse) string { return v.SourceName }).(pulumi.StringOutput)
}

// Configuration for all source subtypes under this source signal consumed in fusion detection.
func (o FusionSourceSettingsResponseOutput) SourceSubTypes() FusionSourceSubTypeSettingResponseArrayOutput {
	return o.ApplyT(func(v FusionSourceSettingsResponse) []FusionSourceSubTypeSettingResponse { return v.SourceSubTypes }).(FusionSourceSubTypeSettingResponseArrayOutput)
}

type FusionSourceSettingsResponseArrayOutput struct{ *pulumi.OutputState }

func (FusionSourceSettingsResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FusionSourceSettingsResponse)(nil)).Elem()
}

func (o FusionSourceSettingsResponseArrayOutput) ToFusionSourceSettingsResponseArrayOutput() FusionSourceSettingsResponseArrayOutput {
	return o
}

func (o FusionSourceSettingsResponseArrayOutput) ToFusionSourceSettingsResponseArrayOutputWithContext(ctx context.Context) FusionSourceSettingsResponseArrayOutput {
	return o
}

func (o FusionSourceSettingsResponseArrayOutput) Index(i pulumi.IntInput) FusionSourceSettingsResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FusionSourceSettingsResponse {
		return vs[0].([]FusionSourceSettingsResponse)[vs[1].(int)]
	}).(FusionSourceSettingsResponseOutput)
}

// Represents a supported source subtype configuration under a source signal in Fusion detection.
type FusionSourceSubTypeSetting struct {
	// Determines whether this source subtype under source signal is enabled or disabled in Fusion detection.
	Enabled bool `pulumi:"enabled"`
	// Severity configuration for a source subtype consumed in fusion detection.
	SeverityFilters FusionSubTypeSeverityFilter `pulumi:"severityFilters"`
	// The Name of the source subtype under a given source signal in Fusion detection. Refer to Fusion alert rule template for supported values.
	SourceSubTypeName string `pulumi:"sourceSubTypeName"`
}

// Represents a supported source subtype configuration under a source signal in Fusion detection.
type FusionSourceSubTypeSettingResponse struct {
	// Determines whether this source subtype under source signal is enabled or disabled in Fusion detection.
	Enabled bool `pulumi:"enabled"`
	// Severity configuration for a source subtype consumed in fusion detection.
	SeverityFilters FusionSubTypeSeverityFilterResponse `pulumi:"severityFilters"`
	// The display name of source subtype under a source signal consumed in Fusion detection.
	SourceSubTypeDisplayName string `pulumi:"sourceSubTypeDisplayName"`
	// The Name of the source subtype under a given source signal in Fusion detection. Refer to Fusion alert rule template for supported values.
	SourceSubTypeName string `pulumi:"sourceSubTypeName"`
}

// Represents a supported source subtype configuration under a source signal in Fusion detection.
type FusionSourceSubTypeSettingResponseOutput struct{ *pulumi.OutputState }

func (FusionSourceSubTypeSettingResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FusionSourceSubTypeSettingResponse)(nil)).Elem()
}

func (o FusionSourceSubTypeSettingResponseOutput) ToFusionSourceSubTypeSettingResponseOutput() FusionSourceSubTypeSettingResponseOutput {
	return o
}

func (o FusionSourceSubTypeSettingResponseOutput) ToFusionSourceSubTypeSettingResponseOutputWithContext(ctx context.Context) FusionSourceSubTypeSettingResponseOutput {
	return o
}

// Determines whether this source subtype under source signal is enabled or disabled in Fusion detection.
func (o FusionSourceSubTypeSettingResponseOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v FusionSourceSubTypeSettingResponse) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// Severity configuration for a source subtype consumed in fusion detection.
func (o FusionSourceSubTypeSettingResponseOutput) SeverityFilters() FusionSubTypeSeverityFilterResponseOutput {
	return o.ApplyT(func(v FusionSourceSubTypeSettingResponse) FusionSubTypeSeverityFilterResponse {
		return v.SeverityFilters
	}).(FusionSubTypeSeverityFilterResponseOutput)
}

// The display name of source subtype under a source signal consumed in Fusion detection.
func (o FusionSourceSubTypeSettingResponseOutput) SourceSubTypeDisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v FusionSourceSubTypeSettingResponse) string { return v.SourceSubTypeDisplayName }).(pulumi.StringOutput)
}

// The Name of the source subtype under a given source signal in Fusion detection. Refer to Fusion alert rule template for supported values.
func (o FusionSourceSubTypeSettingResponseOutput) SourceSubTypeName() pulumi.StringOutput {
	return o.ApplyT(func(v FusionSourceSubTypeSettingResponse) string { return v.SourceSubTypeName }).(pulumi.StringOutput)
}

type FusionSourceSubTypeSettingResponseArrayOutput struct{ *pulumi.OutputState }

func (FusionSourceSubTypeSettingResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FusionSourceSubTypeSettingResponse)(nil)).Elem()
}

func (o FusionSourceSubTypeSettingResponseArrayOutput) ToFusionSourceSubTypeSettingResponseArrayOutput() FusionSourceSubTypeSettingResponseArrayOutput {
	return o
}

func (o FusionSourceSubTypeSettingResponseArrayOutput) ToFusionSourceSubTypeSettingResponseArrayOutputWithContext(ctx context.Context) FusionSourceSubTypeSettingResponseArrayOutput {
	return o
}

func (o FusionSourceSubTypeSettingResponseArrayOutput) Index(i pulumi.IntInput) FusionSourceSubTypeSettingResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FusionSourceSubTypeSettingResponse {
		return vs[0].([]FusionSourceSubTypeSettingResponse)[vs[1].(int)]
	}).(FusionSourceSubTypeSettingResponseOutput)
}

// Represents severity configuration for a source subtype consumed in Fusion detection.
type FusionSubTypeSeverityFilter struct {
	// Individual Severity configuration settings for a given source subtype consumed in Fusion detection.
	Filters []FusionSubTypeSeverityFiltersItem `pulumi:"filters"`
}

// Represents severity configuration for a source subtype consumed in Fusion detection.
type FusionSubTypeSeverityFilterResponse struct {
	// Individual Severity configuration settings for a given source subtype consumed in Fusion detection.
	Filters []FusionSubTypeSeverityFiltersItemResponse `pulumi:"filters"`
	// Determines whether this source subtype supports severity configuration or not.
	IsSupported bool `pulumi:"isSupported"`
}

// Represents severity configuration for a source subtype consumed in Fusion detection.
type FusionSubTypeSeverityFilterResponseOutput struct{ *pulumi.OutputState }

func (FusionSubTypeSeverityFilterResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FusionSubTypeSeverityFilterResponse)(nil)).Elem()
}

func (o FusionSubTypeSeverityFilterResponseOutput) ToFusionSubTypeSeverityFilterResponseOutput() FusionSubTypeSeverityFilterResponseOutput {
	return o
}

func (o FusionSubTypeSeverityFilterResponseOutput) ToFusionSubTypeSeverityFilterResponseOutputWithContext(ctx context.Context) FusionSubTypeSeverityFilterResponseOutput {
	return o
}

// Individual Severity configuration settings for a given source subtype consumed in Fusion detection.
func (o FusionSubTypeSeverityFilterResponseOutput) Filters() FusionSubTypeSeverityFiltersItemResponseArrayOutput {
	return o.ApplyT(func(v FusionSubTypeSeverityFilterResponse) []FusionSubTypeSeverityFiltersItemResponse {
		return v.Filters
	}).(FusionSubTypeSeverityFiltersItemResponseArrayOutput)
}

// Determines whether this source subtype supports severity configuration or not.
func (o FusionSubTypeSeverityFilterResponseOutput) IsSupported() pulumi.BoolOutput {
	return o.ApplyT(func(v FusionSubTypeSeverityFilterResponse) bool { return v.IsSupported }).(pulumi.BoolOutput)
}

// Represents a Severity filter setting for a given source subtype consumed in Fusion detection.
type FusionSubTypeSeverityFiltersItem struct {
	// Determines whether this severity is enabled or disabled for this source subtype consumed in Fusion detection.
	Enabled bool `pulumi:"enabled"`
	// The Severity for a given source subtype consumed in Fusion detection.
	Severity string `pulumi:"severity"`
}

// Represents a Severity filter setting for a given source subtype consumed in Fusion detection.
type FusionSubTypeSeverityFiltersItemResponse struct {
	// Determines whether this severity is enabled or disabled for this source subtype consumed in Fusion detection.
	Enabled bool `pulumi:"enabled"`
	// The Severity for a given source subtype consumed in Fusion detection.
	Severity string `pulumi:"severity"`
}

// Represents a Severity filter setting for a given source subtype consumed in Fusion detection.
type FusionSubTypeSeverityFiltersItemResponseOutput struct{ *pulumi.OutputState }

func (FusionSubTypeSeverityFiltersItemResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FusionSubTypeSeverityFiltersItemResponse)(nil)).Elem()
}

func (o FusionSubTypeSeverityFiltersItemResponseOutput) ToFusionSubTypeSeverityFiltersItemResponseOutput() FusionSubTypeSeverityFiltersItemResponseOutput {
	return o
}

func (o FusionSubTypeSeverityFiltersItemResponseOutput) ToFusionSubTypeSeverityFiltersItemResponseOutputWithContext(ctx context.Context) FusionSubTypeSeverityFiltersItemResponseOutput {
	return o
}

// Determines whether this severity is enabled or disabled for this source subtype consumed in Fusion detection.
func (o FusionSubTypeSeverityFiltersItemResponseOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v FusionSubTypeSeverityFiltersItemResponse) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// The Severity for a given source subtype consumed in Fusion detection.
func (o FusionSubTypeSeverityFiltersItemResponseOutput) Severity() pulumi.StringOutput {
	return o.ApplyT(func(v FusionSubTypeSeverityFiltersItemResponse) string { return v.Severity }).(pulumi.StringOutput)
}

type FusionSubTypeSeverityFiltersItemResponseArrayOutput struct{ *pulumi.OutputState }

func (FusionSubTypeSeverityFiltersItemResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FusionSubTypeSeverityFiltersItemResponse)(nil)).Elem()
}

func (o FusionSubTypeSeverityFiltersItemResponseArrayOutput) ToFusionSubTypeSeverityFiltersItemResponseArrayOutput() FusionSubTypeSeverityFiltersItemResponseArrayOutput {
	return o
}

func (o FusionSubTypeSeverityFiltersItemResponseArrayOutput) ToFusionSubTypeSeverityFiltersItemResponseArrayOutputWithContext(ctx context.Context) FusionSubTypeSeverityFiltersItemResponseArrayOutput {
	return o
}

func (o FusionSubTypeSeverityFiltersItemResponseArrayOutput) Index(i pulumi.IntInput) FusionSubTypeSeverityFiltersItemResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FusionSubTypeSeverityFiltersItemResponse {
		return vs[0].([]FusionSubTypeSeverityFiltersItemResponse)[vs[1].(int)]
	}).(FusionSubTypeSeverityFiltersItemResponseOutput)
}

// GetInsights Query Errors.
type GetInsightsErrorKindResponse struct {
	// the error message
	ErrorMessage string `pulumi:"errorMessage"`
	// the query kind
	Kind string `pulumi:"kind"`
	// the query id
	QueryId *string `pulumi:"queryId"`
}

// GetInsights Query Errors.
type GetInsightsErrorKindResponseOutput struct{ *pulumi.OutputState }

func (GetInsightsErrorKindResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInsightsErrorKindResponse)(nil)).Elem()
}

func (o GetInsightsErrorKindResponseOutput) ToGetInsightsErrorKindResponseOutput() GetInsightsErrorKindResponseOutput {
	return o
}

func (o GetInsightsErrorKindResponseOutput) ToGetInsightsErrorKindResponseOutputWithContext(ctx context.Context) GetInsightsErrorKindResponseOutput {
	return o
}

// the error message
func (o GetInsightsErrorKindResponseOutput) ErrorMessage() pulumi.StringOutput {
	return o.ApplyT(func(v GetInsightsErrorKindResponse) string { return v.ErrorMessage }).(pulumi.StringOutput)
}

// the query kind
func (o GetInsightsErrorKindResponseOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v GetInsightsErrorKindResponse) string { return v.Kind }).(pulumi.StringOutput)
}

// the query id
func (o GetInsightsErrorKindResponseOutput) QueryId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetInsightsErrorKindResponse) *string { return v.QueryId }).(pulumi.StringPtrOutput)
}

type GetInsightsErrorKindResponseArrayOutput struct{ *pulumi.OutputState }

func (GetInsightsErrorKindResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInsightsErrorKindResponse)(nil)).Elem()
}

func (o GetInsightsErrorKindResponseArrayOutput) ToGetInsightsErrorKindResponseArrayOutput() GetInsightsErrorKindResponseArrayOutput {
	return o
}

func (o GetInsightsErrorKindResponseArrayOutput) ToGetInsightsErrorKindResponseArrayOutputWithContext(ctx context.Context) GetInsightsErrorKindResponseArrayOutput {
	return o
}

func (o GetInsightsErrorKindResponseArrayOutput) Index(i pulumi.IntInput) GetInsightsErrorKindResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInsightsErrorKindResponse {
		return vs[0].([]GetInsightsErrorKindResponse)[vs[1].(int)]
	}).(GetInsightsErrorKindResponseOutput)
}

// Get Insights result metadata.
type GetInsightsResultsMetadataResponse struct {
	// information about the failed queries
	Errors []GetInsightsErrorKindResponse `pulumi:"errors"`
	// the total items found for the insights request
	TotalCount int `pulumi:"totalCount"`
}

// Get Insights result metadata.
type GetInsightsResultsMetadataResponseOutput struct{ *pulumi.OutputState }

func (GetInsightsResultsMetadataResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInsightsResultsMetadataResponse)(nil)).Elem()
}

func (o GetInsightsResultsMetadataResponseOutput) ToGetInsightsResultsMetadataResponseOutput() GetInsightsResultsMetadataResponseOutput {
	return o
}

func (o GetInsightsResultsMetadataResponseOutput) ToGetInsightsResultsMetadataResponseOutputWithContext(ctx context.Context) GetInsightsResultsMetadataResponseOutput {
	return o
}

// information about the failed queries
func (o GetInsightsResultsMetadataResponseOutput) Errors() GetInsightsErrorKindResponseArrayOutput {
	return o.ApplyT(func(v GetInsightsResultsMetadataResponse) []GetInsightsErrorKindResponse { return v.Errors }).(GetInsightsErrorKindResponseArrayOutput)
}

// the total items found for the insights request
func (o GetInsightsResultsMetadataResponseOutput) TotalCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetInsightsResultsMetadataResponse) int { return v.TotalCount }).(pulumi.IntOutput)
}

type GetInsightsResultsMetadataResponsePtrOutput struct{ *pulumi.OutputState }

func (GetInsightsResultsMetadataResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetInsightsResultsMetadataResponse)(nil)).Elem()
}

func (o GetInsightsResultsMetadataResponsePtrOutput) ToGetInsightsResultsMetadataResponsePtrOutput() GetInsightsResultsMetadataResponsePtrOutput {
	return o
}

func (o GetInsightsResultsMetadataResponsePtrOutput) ToGetInsightsResultsMetadataResponsePtrOutputWithContext(ctx context.Context) GetInsightsResultsMetadataResponsePtrOutput {
	return o
}

func (o GetInsightsResultsMetadataResponsePtrOutput) Elem() GetInsightsResultsMetadataResponseOutput {
	return o.ApplyT(func(v *GetInsightsResultsMetadataResponse) GetInsightsResultsMetadataResponse {
		if v != nil {
			return *v
		}
		var ret GetInsightsResultsMetadataResponse
		return ret
	}).(GetInsightsResultsMetadataResponseOutput)
}

// information about the failed queries
func (o GetInsightsResultsMetadataResponsePtrOutput) Errors() GetInsightsErrorKindResponseArrayOutput {
	return o.ApplyT(func(v *GetInsightsResultsMetadataResponse) []GetInsightsErrorKindResponse {
		if v == nil {
			return nil
		}
		return v.Errors
	}).(GetInsightsErrorKindResponseArrayOutput)
}

// the total items found for the insights request
func (o GetInsightsResultsMetadataResponsePtrOutput) TotalCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GetInsightsResultsMetadataResponse) *int {
		if v == nil {
			return nil
		}
		return &v.TotalCount
	}).(pulumi.IntPtrOutput)
}

// Grouping configuration property bag.
type GroupingConfiguration struct {
	// Grouping enabled
	Enabled bool `pulumi:"enabled"`
	// A list of alert details to group by (when matchingMethod is Selected)
	GroupByAlertDetails []string `pulumi:"groupByAlertDetails"`
	// A list of custom details keys to group by (when matchingMethod is Selected). Only keys defined in the current alert rule may be used.
	GroupByCustomDetails []string `pulumi:"groupByCustomDetails"`
	// A list of entity types to group by (when matchingMethod is Selected). Only entities defined in the current alert rule may be used.
	GroupByEntities []string `pulumi:"groupByEntities"`
	// Limit the group to alerts created within the lookback duration (in ISO 8601 duration format)
	LookbackDuration string `pulumi:"lookbackDuration"`
	// Grouping matching method. When method is Selected at least one of groupByEntities, groupByAlertDetails, groupByCustomDetails must be provided and not empty.
	MatchingMethod string `pulumi:"matchingMethod"`
	// Re-open closed matching incidents
	ReopenClosedIncident bool `pulumi:"reopenClosedIncident"`
}

// Grouping configuration property bag.
type GroupingConfigurationResponse struct {
	// Grouping enabled
	Enabled bool `pulumi:"enabled"`
	// A list of alert details to group by (when matchingMethod is Selected)
	GroupByAlertDetails []string `pulumi:"groupByAlertDetails"`
	// A list of custom details keys to group by (when matchingMethod is Selected). Only keys defined in the current alert rule may be used.
	GroupByCustomDetails []string `pulumi:"groupByCustomDetails"`
	// A list of entity types to group by (when matchingMethod is Selected). Only entities defined in the current alert rule may be used.
	GroupByEntities []string `pulumi:"groupByEntities"`
	// Limit the group to alerts created within the lookback duration (in ISO 8601 duration format)
	LookbackDuration string `pulumi:"lookbackDuration"`
	// Grouping matching method. When method is Selected at least one of groupByEntities, groupByAlertDetails, groupByCustomDetails must be provided and not empty.
	MatchingMethod string `pulumi:"matchingMethod"`
	// Re-open closed matching incidents
	ReopenClosedIncident bool `pulumi:"reopenClosedIncident"`
}

// Grouping configuration property bag.
type GroupingConfigurationResponseOutput struct{ *pulumi.OutputState }

func (GroupingConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupingConfigurationResponse)(nil)).Elem()
}

func (o GroupingConfigurationResponseOutput) ToGroupingConfigurationResponseOutput() GroupingConfigurationResponseOutput {
	return o
}

func (o GroupingConfigurationResponseOutput) ToGroupingConfigurationResponseOutputWithContext(ctx context.Context) GroupingConfigurationResponseOutput {
	return o
}

// Grouping enabled
func (o GroupingConfigurationResponseOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GroupingConfigurationResponse) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// A list of alert details to group by (when matchingMethod is Selected)
func (o GroupingConfigurationResponseOutput) GroupByAlertDetails() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GroupingConfigurationResponse) []string { return v.GroupByAlertDetails }).(pulumi.StringArrayOutput)
}

// A list of custom details keys to group by (when matchingMethod is Selected). Only keys defined in the current alert rule may be used.
func (o GroupingConfigurationResponseOutput) GroupByCustomDetails() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GroupingConfigurationResponse) []string { return v.GroupByCustomDetails }).(pulumi.StringArrayOutput)
}

// A list of entity types to group by (when matchingMethod is Selected). Only entities defined in the current alert rule may be used.
func (o GroupingConfigurationResponseOutput) GroupByEntities() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GroupingConfigurationResponse) []string { return v.GroupByEntities }).(pulumi.StringArrayOutput)
}

// Limit the group to alerts created within the lookback duration (in ISO 8601 duration format)
func (o GroupingConfigurationResponseOutput) LookbackDuration() pulumi.StringOutput {
	return o.ApplyT(func(v GroupingConfigurationResponse) string { return v.LookbackDuration }).(pulumi.StringOutput)
}

// Grouping matching method. When method is Selected at least one of groupByEntities, groupByAlertDetails, groupByCustomDetails must be provided and not empty.
func (o GroupingConfigurationResponseOutput) MatchingMethod() pulumi.StringOutput {
	return o.ApplyT(func(v GroupingConfigurationResponse) string { return v.MatchingMethod }).(pulumi.StringOutput)
}

// Re-open closed matching incidents
func (o GroupingConfigurationResponseOutput) ReopenClosedIncident() pulumi.BoolOutput {
	return o.ApplyT(func(v GroupingConfigurationResponse) bool { return v.ReopenClosedIncident }).(pulumi.BoolOutput)
}

type GroupingConfigurationResponsePtrOutput struct{ *pulumi.OutputState }

func (GroupingConfigurationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GroupingConfigurationResponse)(nil)).Elem()
}

func (o GroupingConfigurationResponsePtrOutput) ToGroupingConfigurationResponsePtrOutput() GroupingConfigurationResponsePtrOutput {
	return o
}

func (o GroupingConfigurationResponsePtrOutput) ToGroupingConfigurationResponsePtrOutputWithContext(ctx context.Context) GroupingConfigurationResponsePtrOutput {
	return o
}

func (o GroupingConfigurationResponsePtrOutput) Elem() GroupingConfigurationResponseOutput {
	return o.ApplyT(func(v *GroupingConfigurationResponse) GroupingConfigurationResponse {
		if v != nil {
			return *v
		}
		var ret GroupingConfigurationResponse
		return ret
	}).(GroupingConfigurationResponseOutput)
}

// Grouping enabled
func (o GroupingConfigurationResponsePtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GroupingConfigurationResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// A list of alert details to group by (when matchingMethod is Selected)
func (o GroupingConfigurationResponsePtrOutput) GroupByAlertDetails() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GroupingConfigurationResponse) []string {
		if v == nil {
			return nil
		}
		return v.GroupByAlertDetails
	}).(pulumi.StringArrayOutput)
}

// A list of custom details keys to group by (when matchingMethod is Selected). Only keys defined in the current alert rule may be used.
func (o GroupingConfigurationResponsePtrOutput) GroupByCustomDetails() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GroupingConfigurationResponse) []string {
		if v == nil {
			return nil
		}
		return v.GroupByCustomDetails
	}).(pulumi.StringArrayOutput)
}

// A list of entity types to group by (when matchingMethod is Selected). Only entities defined in the current alert rule may be used.
func (o GroupingConfigurationResponsePtrOutput) GroupByEntities() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GroupingConfigurationResponse) []string {
		if v == nil {
			return nil
		}
		return v.GroupByEntities
	}).(pulumi.StringArrayOutput)
}

// Limit the group to alerts created within the lookback duration (in ISO 8601 duration format)
func (o GroupingConfigurationResponsePtrOutput) LookbackDuration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GroupingConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return &v.LookbackDuration
	}).(pulumi.StringPtrOutput)
}

// Grouping matching method. When method is Selected at least one of groupByEntities, groupByAlertDetails, groupByCustomDetails must be provided and not empty.
func (o GroupingConfigurationResponsePtrOutput) MatchingMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GroupingConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return &v.MatchingMethod
	}).(pulumi.StringPtrOutput)
}

// Re-open closed matching incidents
func (o GroupingConfigurationResponsePtrOutput) ReopenClosedIncident() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GroupingConfigurationResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.ReopenClosedIncident
	}).(pulumi.BoolPtrOutput)
}

// Incident additional data property bag.
type IncidentAdditionalDataResponse struct {
	// List of product names of alerts in the incident
	AlertProductNames []string `pulumi:"alertProductNames"`
	// The number of alerts in the incident
	AlertsCount int `pulumi:"alertsCount"`
	// The number of bookmarks in the incident
	BookmarksCount int `pulumi:"bookmarksCount"`
	// The number of comments in the incident
	CommentsCount int `pulumi:"commentsCount"`
	// The provider incident url to the incident in Microsoft 365 Defender portal
	ProviderIncidentUrl string `pulumi:"providerIncidentUrl"`
	// The tactics associated with incident
	Tactics []string `pulumi:"tactics"`
	// The techniques associated with incident's tactics
	Techniques []string `pulumi:"techniques"`
}

// Incident additional data property bag.
type IncidentAdditionalDataResponseOutput struct{ *pulumi.OutputState }

func (IncidentAdditionalDataResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IncidentAdditionalDataResponse)(nil)).Elem()
}

func (o IncidentAdditionalDataResponseOutput) ToIncidentAdditionalDataResponseOutput() IncidentAdditionalDataResponseOutput {
	return o
}

func (o IncidentAdditionalDataResponseOutput) ToIncidentAdditionalDataResponseOutputWithContext(ctx context.Context) IncidentAdditionalDataResponseOutput {
	return o
}

// List of product names of alerts in the incident
func (o IncidentAdditionalDataResponseOutput) AlertProductNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IncidentAdditionalDataResponse) []string { return v.AlertProductNames }).(pulumi.StringArrayOutput)
}

// The number of alerts in the incident
func (o IncidentAdditionalDataResponseOutput) AlertsCount() pulumi.IntOutput {
	return o.ApplyT(func(v IncidentAdditionalDataResponse) int { return v.AlertsCount }).(pulumi.IntOutput)
}

// The number of bookmarks in the incident
func (o IncidentAdditionalDataResponseOutput) BookmarksCount() pulumi.IntOutput {
	return o.ApplyT(func(v IncidentAdditionalDataResponse) int { return v.BookmarksCount }).(pulumi.IntOutput)
}

// The number of comments in the incident
func (o IncidentAdditionalDataResponseOutput) CommentsCount() pulumi.IntOutput {
	return o.ApplyT(func(v IncidentAdditionalDataResponse) int { return v.CommentsCount }).(pulumi.IntOutput)
}

// The provider incident url to the incident in Microsoft 365 Defender portal
func (o IncidentAdditionalDataResponseOutput) ProviderIncidentUrl() pulumi.StringOutput {
	return o.ApplyT(func(v IncidentAdditionalDataResponse) string { return v.ProviderIncidentUrl }).(pulumi.StringOutput)
}

// The tactics associated with incident
func (o IncidentAdditionalDataResponseOutput) Tactics() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IncidentAdditionalDataResponse) []string { return v.Tactics }).(pulumi.StringArrayOutput)
}

// The techniques associated with incident's tactics
func (o IncidentAdditionalDataResponseOutput) Techniques() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IncidentAdditionalDataResponse) []string { return v.Techniques }).(pulumi.StringArrayOutput)
}

// Incident Configuration property bag.
type IncidentConfiguration struct {
	// Create incidents from alerts triggered by this analytics rule
	CreateIncident bool `pulumi:"createIncident"`
	// Set how the alerts that are triggered by this analytics rule, are grouped into incidents
	GroupingConfiguration *GroupingConfiguration `pulumi:"groupingConfiguration"`
}

// Incident Configuration property bag.
type IncidentConfigurationResponse struct {
	// Create incidents from alerts triggered by this analytics rule
	CreateIncident bool `pulumi:"createIncident"`
	// Set how the alerts that are triggered by this analytics rule, are grouped into incidents
	GroupingConfiguration *GroupingConfigurationResponse `pulumi:"groupingConfiguration"`
}

// Incident Configuration property bag.
type IncidentConfigurationResponseOutput struct{ *pulumi.OutputState }

func (IncidentConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IncidentConfigurationResponse)(nil)).Elem()
}

func (o IncidentConfigurationResponseOutput) ToIncidentConfigurationResponseOutput() IncidentConfigurationResponseOutput {
	return o
}

func (o IncidentConfigurationResponseOutput) ToIncidentConfigurationResponseOutputWithContext(ctx context.Context) IncidentConfigurationResponseOutput {
	return o
}

// Create incidents from alerts triggered by this analytics rule
func (o IncidentConfigurationResponseOutput) CreateIncident() pulumi.BoolOutput {
	return o.ApplyT(func(v IncidentConfigurationResponse) bool { return v.CreateIncident }).(pulumi.BoolOutput)
}

// Set how the alerts that are triggered by this analytics rule, are grouped into incidents
func (o IncidentConfigurationResponseOutput) GroupingConfiguration() GroupingConfigurationResponsePtrOutput {
	return o.ApplyT(func(v IncidentConfigurationResponse) *GroupingConfigurationResponse { return v.GroupingConfiguration }).(GroupingConfigurationResponsePtrOutput)
}

type IncidentConfigurationResponsePtrOutput struct{ *pulumi.OutputState }

func (IncidentConfigurationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IncidentConfigurationResponse)(nil)).Elem()
}

func (o IncidentConfigurationResponsePtrOutput) ToIncidentConfigurationResponsePtrOutput() IncidentConfigurationResponsePtrOutput {
	return o
}

func (o IncidentConfigurationResponsePtrOutput) ToIncidentConfigurationResponsePtrOutputWithContext(ctx context.Context) IncidentConfigurationResponsePtrOutput {
	return o
}

func (o IncidentConfigurationResponsePtrOutput) Elem() IncidentConfigurationResponseOutput {
	return o.ApplyT(func(v *IncidentConfigurationResponse) IncidentConfigurationResponse {
		if v != nil {
			return *v
		}
		var ret IncidentConfigurationResponse
		return ret
	}).(IncidentConfigurationResponseOutput)
}

// Create incidents from alerts triggered by this analytics rule
func (o IncidentConfigurationResponsePtrOutput) CreateIncident() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *IncidentConfigurationResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.CreateIncident
	}).(pulumi.BoolPtrOutput)
}

// Set how the alerts that are triggered by this analytics rule, are grouped into incidents
func (o IncidentConfigurationResponsePtrOutput) GroupingConfiguration() GroupingConfigurationResponsePtrOutput {
	return o.ApplyT(func(v *IncidentConfigurationResponse) *GroupingConfigurationResponse {
		if v == nil {
			return nil
		}
		return v.GroupingConfiguration
	}).(GroupingConfigurationResponsePtrOutput)
}

// Represents an incident label
type IncidentLabel struct {
	// The name of the label
	LabelName string `pulumi:"labelName"`
}

// IncidentLabelInput is an input type that accepts IncidentLabelArgs and IncidentLabelOutput values.
// You can construct a concrete instance of `IncidentLabelInput` via:
//
//	IncidentLabelArgs{...}
type IncidentLabelInput interface {
	pulumi.Input

	ToIncidentLabelOutput() IncidentLabelOutput
	ToIncidentLabelOutputWithContext(context.Context) IncidentLabelOutput
}

// Represents an incident label
type IncidentLabelArgs struct {
	// The name of the label
	LabelName pulumi.StringInput `pulumi:"labelName"`
}

func (IncidentLabelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IncidentLabel)(nil)).Elem()
}

func (i IncidentLabelArgs) ToIncidentLabelOutput() IncidentLabelOutput {
	return i.ToIncidentLabelOutputWithContext(context.Background())
}

func (i IncidentLabelArgs) ToIncidentLabelOutputWithContext(ctx context.Context) IncidentLabelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IncidentLabelOutput)
}

// IncidentLabelArrayInput is an input type that accepts IncidentLabelArray and IncidentLabelArrayOutput values.
// You can construct a concrete instance of `IncidentLabelArrayInput` via:
//
//	IncidentLabelArray{ IncidentLabelArgs{...} }
type IncidentLabelArrayInput interface {
	pulumi.Input

	ToIncidentLabelArrayOutput() IncidentLabelArrayOutput
	ToIncidentLabelArrayOutputWithContext(context.Context) IncidentLabelArrayOutput
}

type IncidentLabelArray []IncidentLabelInput

func (IncidentLabelArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IncidentLabel)(nil)).Elem()
}

func (i IncidentLabelArray) ToIncidentLabelArrayOutput() IncidentLabelArrayOutput {
	return i.ToIncidentLabelArrayOutputWithContext(context.Background())
}

func (i IncidentLabelArray) ToIncidentLabelArrayOutputWithContext(ctx context.Context) IncidentLabelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IncidentLabelArrayOutput)
}

// Represents an incident label
type IncidentLabelOutput struct{ *pulumi.OutputState }

func (IncidentLabelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IncidentLabel)(nil)).Elem()
}

func (o IncidentLabelOutput) ToIncidentLabelOutput() IncidentLabelOutput {
	return o
}

func (o IncidentLabelOutput) ToIncidentLabelOutputWithContext(ctx context.Context) IncidentLabelOutput {
	return o
}

// The name of the label
func (o IncidentLabelOutput) LabelName() pulumi.StringOutput {
	return o.ApplyT(func(v IncidentLabel) string { return v.LabelName }).(pulumi.StringOutput)
}

type IncidentLabelArrayOutput struct{ *pulumi.OutputState }

func (IncidentLabelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IncidentLabel)(nil)).Elem()
}

func (o IncidentLabelArrayOutput) ToIncidentLabelArrayOutput() IncidentLabelArrayOutput {
	return o
}

func (o IncidentLabelArrayOutput) ToIncidentLabelArrayOutputWithContext(ctx context.Context) IncidentLabelArrayOutput {
	return o
}

func (o IncidentLabelArrayOutput) Index(i pulumi.IntInput) IncidentLabelOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IncidentLabel {
		return vs[0].([]IncidentLabel)[vs[1].(int)]
	}).(IncidentLabelOutput)
}

// Represents an incident label
type IncidentLabelResponse struct {
	// The name of the label
	LabelName string `pulumi:"labelName"`
	// The type of the label
	LabelType string `pulumi:"labelType"`
}

// Represents an incident label
type IncidentLabelResponseOutput struct{ *pulumi.OutputState }

func (IncidentLabelResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IncidentLabelResponse)(nil)).Elem()
}

func (o IncidentLabelResponseOutput) ToIncidentLabelResponseOutput() IncidentLabelResponseOutput {
	return o
}

func (o IncidentLabelResponseOutput) ToIncidentLabelResponseOutputWithContext(ctx context.Context) IncidentLabelResponseOutput {
	return o
}

// The name of the label
func (o IncidentLabelResponseOutput) LabelName() pulumi.StringOutput {
	return o.ApplyT(func(v IncidentLabelResponse) string { return v.LabelName }).(pulumi.StringOutput)
}

// The type of the label
func (o IncidentLabelResponseOutput) LabelType() pulumi.StringOutput {
	return o.ApplyT(func(v IncidentLabelResponse) string { return v.LabelType }).(pulumi.StringOutput)
}

type IncidentLabelResponseArrayOutput struct{ *pulumi.OutputState }

func (IncidentLabelResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IncidentLabelResponse)(nil)).Elem()
}

func (o IncidentLabelResponseArrayOutput) ToIncidentLabelResponseArrayOutput() IncidentLabelResponseArrayOutput {
	return o
}

func (o IncidentLabelResponseArrayOutput) ToIncidentLabelResponseArrayOutputWithContext(ctx context.Context) IncidentLabelResponseArrayOutput {
	return o
}

func (o IncidentLabelResponseArrayOutput) Index(i pulumi.IntInput) IncidentLabelResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IncidentLabelResponse {
		return vs[0].([]IncidentLabelResponse)[vs[1].(int)]
	}).(IncidentLabelResponseOutput)
}

// Information on the user an incident is assigned to
type IncidentOwnerInfo struct {
	// The name of the user the incident is assigned to.
	AssignedTo *string `pulumi:"assignedTo"`
	// The email of the user the incident is assigned to.
	Email *string `pulumi:"email"`
	// The object id of the user the incident is assigned to.
	ObjectId *string `pulumi:"objectId"`
	// The type of the owner the incident is assigned to.
	OwnerType *string `pulumi:"ownerType"`
	// The user principal name of the user the incident is assigned to.
	UserPrincipalName *string `pulumi:"userPrincipalName"`
}

// IncidentOwnerInfoInput is an input type that accepts IncidentOwnerInfoArgs and IncidentOwnerInfoOutput values.
// You can construct a concrete instance of `IncidentOwnerInfoInput` via:
//
//	IncidentOwnerInfoArgs{...}
type IncidentOwnerInfoInput interface {
	pulumi.Input

	ToIncidentOwnerInfoOutput() IncidentOwnerInfoOutput
	ToIncidentOwnerInfoOutputWithContext(context.Context) IncidentOwnerInfoOutput
}

// Information on the user an incident is assigned to
type IncidentOwnerInfoArgs struct {
	// The name of the user the incident is assigned to.
	AssignedTo pulumi.StringPtrInput `pulumi:"assignedTo"`
	// The email of the user the incident is assigned to.
	Email pulumi.StringPtrInput `pulumi:"email"`
	// The object id of the user the incident is assigned to.
	ObjectId pulumi.StringPtrInput `pulumi:"objectId"`
	// The type of the owner the incident is assigned to.
	OwnerType pulumi.StringPtrInput `pulumi:"ownerType"`
	// The user principal name of the user the incident is assigned to.
	UserPrincipalName pulumi.StringPtrInput `pulumi:"userPrincipalName"`
}

func (IncidentOwnerInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IncidentOwnerInfo)(nil)).Elem()
}

func (i IncidentOwnerInfoArgs) ToIncidentOwnerInfoOutput() IncidentOwnerInfoOutput {
	return i.ToIncidentOwnerInfoOutputWithContext(context.Background())
}

func (i IncidentOwnerInfoArgs) ToIncidentOwnerInfoOutputWithContext(ctx context.Context) IncidentOwnerInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IncidentOwnerInfoOutput)
}

func (i IncidentOwnerInfoArgs) ToIncidentOwnerInfoPtrOutput() IncidentOwnerInfoPtrOutput {
	return i.ToIncidentOwnerInfoPtrOutputWithContext(context.Background())
}

func (i IncidentOwnerInfoArgs) ToIncidentOwnerInfoPtrOutputWithContext(ctx context.Context) IncidentOwnerInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IncidentOwnerInfoOutput).ToIncidentOwnerInfoPtrOutputWithContext(ctx)
}

// IncidentOwnerInfoPtrInput is an input type that accepts IncidentOwnerInfoArgs, IncidentOwnerInfoPtr and IncidentOwnerInfoPtrOutput values.
// You can construct a concrete instance of `IncidentOwnerInfoPtrInput` via:
//
//	        IncidentOwnerInfoArgs{...}
//
//	or:
//
//	        nil
type IncidentOwnerInfoPtrInput interface {
	pulumi.Input

	ToIncidentOwnerInfoPtrOutput() IncidentOwnerInfoPtrOutput
	ToIncidentOwnerInfoPtrOutputWithContext(context.Context) IncidentOwnerInfoPtrOutput
}

type incidentOwnerInfoPtrType IncidentOwnerInfoArgs

func IncidentOwnerInfoPtr(v *IncidentOwnerInfoArgs) IncidentOwnerInfoPtrInput {
	return (*incidentOwnerInfoPtrType)(v)
}

func (*incidentOwnerInfoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IncidentOwnerInfo)(nil)).Elem()
}

func (i *incidentOwnerInfoPtrType) ToIncidentOwnerInfoPtrOutput() IncidentOwnerInfoPtrOutput {
	return i.ToIncidentOwnerInfoPtrOutputWithContext(context.Background())
}

func (i *incidentOwnerInfoPtrType) ToIncidentOwnerInfoPtrOutputWithContext(ctx context.Context) IncidentOwnerInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IncidentOwnerInfoPtrOutput)
}

// Information on the user an incident is assigned to
type IncidentOwnerInfoOutput struct{ *pulumi.OutputState }

func (IncidentOwnerInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IncidentOwnerInfo)(nil)).Elem()
}

func (o IncidentOwnerInfoOutput) ToIncidentOwnerInfoOutput() IncidentOwnerInfoOutput {
	return o
}

func (o IncidentOwnerInfoOutput) ToIncidentOwnerInfoOutputWithContext(ctx context.Context) IncidentOwnerInfoOutput {
	return o
}

func (o IncidentOwnerInfoOutput) ToIncidentOwnerInfoPtrOutput() IncidentOwnerInfoPtrOutput {
	return o.ToIncidentOwnerInfoPtrOutputWithContext(context.Background())
}

func (o IncidentOwnerInfoOutput) ToIncidentOwnerInfoPtrOutputWithContext(ctx context.Context) IncidentOwnerInfoPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IncidentOwnerInfo) *IncidentOwnerInfo {
		return &v
	}).(IncidentOwnerInfoPtrOutput)
}

// The name of the user the incident is assigned to.
func (o IncidentOwnerInfoOutput) AssignedTo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IncidentOwnerInfo) *string { return v.AssignedTo }).(pulumi.StringPtrOutput)
}

// The email of the user the incident is assigned to.
func (o IncidentOwnerInfoOutput) Email() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IncidentOwnerInfo) *string { return v.Email }).(pulumi.StringPtrOutput)
}

// The object id of the user the incident is assigned to.
func (o IncidentOwnerInfoOutput) ObjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IncidentOwnerInfo) *string { return v.ObjectId }).(pulumi.StringPtrOutput)
}

// The type of the owner the incident is assigned to.
func (o IncidentOwnerInfoOutput) OwnerType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IncidentOwnerInfo) *string { return v.OwnerType }).(pulumi.StringPtrOutput)
}

// The user principal name of the user the incident is assigned to.
func (o IncidentOwnerInfoOutput) UserPrincipalName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IncidentOwnerInfo) *string { return v.UserPrincipalName }).(pulumi.StringPtrOutput)
}

type IncidentOwnerInfoPtrOutput struct{ *pulumi.OutputState }

func (IncidentOwnerInfoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IncidentOwnerInfo)(nil)).Elem()
}

func (o IncidentOwnerInfoPtrOutput) ToIncidentOwnerInfoPtrOutput() IncidentOwnerInfoPtrOutput {
	return o
}

func (o IncidentOwnerInfoPtrOutput) ToIncidentOwnerInfoPtrOutputWithContext(ctx context.Context) IncidentOwnerInfoPtrOutput {
	return o
}

func (o IncidentOwnerInfoPtrOutput) Elem() IncidentOwnerInfoOutput {
	return o.ApplyT(func(v *IncidentOwnerInfo) IncidentOwnerInfo {
		if v != nil {
			return *v
		}
		var ret IncidentOwnerInfo
		return ret
	}).(IncidentOwnerInfoOutput)
}

// The name of the user the incident is assigned to.
func (o IncidentOwnerInfoPtrOutput) AssignedTo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IncidentOwnerInfo) *string {
		if v == nil {
			return nil
		}
		return v.AssignedTo
	}).(pulumi.StringPtrOutput)
}

// The email of the user the incident is assigned to.
func (o IncidentOwnerInfoPtrOutput) Email() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IncidentOwnerInfo) *string {
		if v == nil {
			return nil
		}
		return v.Email
	}).(pulumi.StringPtrOutput)
}

// The object id of the user the incident is assigned to.
func (o IncidentOwnerInfoPtrOutput) ObjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IncidentOwnerInfo) *string {
		if v == nil {
			return nil
		}
		return v.ObjectId
	}).(pulumi.StringPtrOutput)
}

// The type of the owner the incident is assigned to.
func (o IncidentOwnerInfoPtrOutput) OwnerType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IncidentOwnerInfo) *string {
		if v == nil {
			return nil
		}
		return v.OwnerType
	}).(pulumi.StringPtrOutput)
}

// The user principal name of the user the incident is assigned to.
func (o IncidentOwnerInfoPtrOutput) UserPrincipalName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IncidentOwnerInfo) *string {
		if v == nil {
			return nil
		}
		return v.UserPrincipalName
	}).(pulumi.StringPtrOutput)
}

// Information on the user an incident is assigned to
type IncidentOwnerInfoResponse struct {
	// The name of the user the incident is assigned to.
	AssignedTo *string `pulumi:"assignedTo"`
	// The email of the user the incident is assigned to.
	Email *string `pulumi:"email"`
	// The object id of the user the incident is assigned to.
	ObjectId *string `pulumi:"objectId"`
	// The type of the owner the incident is assigned to.
	OwnerType *string `pulumi:"ownerType"`
	// The user principal name of the user the incident is assigned to.
	UserPrincipalName *string `pulumi:"userPrincipalName"`
}

// Information on the user an incident is assigned to
type IncidentOwnerInfoResponseOutput struct{ *pulumi.OutputState }

func (IncidentOwnerInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IncidentOwnerInfoResponse)(nil)).Elem()
}

func (o IncidentOwnerInfoResponseOutput) ToIncidentOwnerInfoResponseOutput() IncidentOwnerInfoResponseOutput {
	return o
}

func (o IncidentOwnerInfoResponseOutput) ToIncidentOwnerInfoResponseOutputWithContext(ctx context.Context) IncidentOwnerInfoResponseOutput {
	return o
}

// The name of the user the incident is assigned to.
func (o IncidentOwnerInfoResponseOutput) AssignedTo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IncidentOwnerInfoResponse) *string { return v.AssignedTo }).(pulumi.StringPtrOutput)
}

// The email of the user the incident is assigned to.
func (o IncidentOwnerInfoResponseOutput) Email() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IncidentOwnerInfoResponse) *string { return v.Email }).(pulumi.StringPtrOutput)
}

// The object id of the user the incident is assigned to.
func (o IncidentOwnerInfoResponseOutput) ObjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IncidentOwnerInfoResponse) *string { return v.ObjectId }).(pulumi.StringPtrOutput)
}

// The type of the owner the incident is assigned to.
func (o IncidentOwnerInfoResponseOutput) OwnerType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IncidentOwnerInfoResponse) *string { return v.OwnerType }).(pulumi.StringPtrOutput)
}

// The user principal name of the user the incident is assigned to.
func (o IncidentOwnerInfoResponseOutput) UserPrincipalName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IncidentOwnerInfoResponse) *string { return v.UserPrincipalName }).(pulumi.StringPtrOutput)
}

type IncidentOwnerInfoResponsePtrOutput struct{ *pulumi.OutputState }

func (IncidentOwnerInfoResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IncidentOwnerInfoResponse)(nil)).Elem()
}

func (o IncidentOwnerInfoResponsePtrOutput) ToIncidentOwnerInfoResponsePtrOutput() IncidentOwnerInfoResponsePtrOutput {
	return o
}

func (o IncidentOwnerInfoResponsePtrOutput) ToIncidentOwnerInfoResponsePtrOutputWithContext(ctx context.Context) IncidentOwnerInfoResponsePtrOutput {
	return o
}

func (o IncidentOwnerInfoResponsePtrOutput) Elem() IncidentOwnerInfoResponseOutput {
	return o.ApplyT(func(v *IncidentOwnerInfoResponse) IncidentOwnerInfoResponse {
		if v != nil {
			return *v
		}
		var ret IncidentOwnerInfoResponse
		return ret
	}).(IncidentOwnerInfoResponseOutput)
}

// The name of the user the incident is assigned to.
func (o IncidentOwnerInfoResponsePtrOutput) AssignedTo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IncidentOwnerInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.AssignedTo
	}).(pulumi.StringPtrOutput)
}

// The email of the user the incident is assigned to.
func (o IncidentOwnerInfoResponsePtrOutput) Email() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IncidentOwnerInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.Email
	}).(pulumi.StringPtrOutput)
}

// The object id of the user the incident is assigned to.
func (o IncidentOwnerInfoResponsePtrOutput) ObjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IncidentOwnerInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.ObjectId
	}).(pulumi.StringPtrOutput)
}

// The type of the owner the incident is assigned to.
func (o IncidentOwnerInfoResponsePtrOutput) OwnerType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IncidentOwnerInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.OwnerType
	}).(pulumi.StringPtrOutput)
}

// The user principal name of the user the incident is assigned to.
func (o IncidentOwnerInfoResponsePtrOutput) UserPrincipalName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IncidentOwnerInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.UserPrincipalName
	}).(pulumi.StringPtrOutput)
}

// Query results for table insights query.
type InsightsTableResultResponse struct {
	// Columns Metadata of the table
	Columns []InsightsTableResultResponseColumns `pulumi:"columns"`
	// Rows data of the table
	Rows [][]string `pulumi:"rows"`
}

// Query results for table insights query.
type InsightsTableResultResponseOutput struct{ *pulumi.OutputState }

func (InsightsTableResultResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InsightsTableResultResponse)(nil)).Elem()
}

func (o InsightsTableResultResponseOutput) ToInsightsTableResultResponseOutput() InsightsTableResultResponseOutput {
	return o
}

func (o InsightsTableResultResponseOutput) ToInsightsTableResultResponseOutputWithContext(ctx context.Context) InsightsTableResultResponseOutput {
	return o
}

// Columns Metadata of the table
func (o InsightsTableResultResponseOutput) Columns() InsightsTableResultResponseColumnsArrayOutput {
	return o.ApplyT(func(v InsightsTableResultResponse) []InsightsTableResultResponseColumns { return v.Columns }).(InsightsTableResultResponseColumnsArrayOutput)
}

// Rows data of the table
func (o InsightsTableResultResponseOutput) Rows() pulumi.StringArrayArrayOutput {
	return o.ApplyT(func(v InsightsTableResultResponse) [][]string { return v.Rows }).(pulumi.StringArrayArrayOutput)
}

type InsightsTableResultResponsePtrOutput struct{ *pulumi.OutputState }

func (InsightsTableResultResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InsightsTableResultResponse)(nil)).Elem()
}

func (o InsightsTableResultResponsePtrOutput) ToInsightsTableResultResponsePtrOutput() InsightsTableResultResponsePtrOutput {
	return o
}

func (o InsightsTableResultResponsePtrOutput) ToInsightsTableResultResponsePtrOutputWithContext(ctx context.Context) InsightsTableResultResponsePtrOutput {
	return o
}

func (o InsightsTableResultResponsePtrOutput) Elem() InsightsTableResultResponseOutput {
	return o.ApplyT(func(v *InsightsTableResultResponse) InsightsTableResultResponse {
		if v != nil {
			return *v
		}
		var ret InsightsTableResultResponse
		return ret
	}).(InsightsTableResultResponseOutput)
}

// Columns Metadata of the table
func (o InsightsTableResultResponsePtrOutput) Columns() InsightsTableResultResponseColumnsArrayOutput {
	return o.ApplyT(func(v *InsightsTableResultResponse) []InsightsTableResultResponseColumns {
		if v == nil {
			return nil
		}
		return v.Columns
	}).(InsightsTableResultResponseColumnsArrayOutput)
}

// Rows data of the table
func (o InsightsTableResultResponsePtrOutput) Rows() pulumi.StringArrayArrayOutput {
	return o.ApplyT(func(v *InsightsTableResultResponse) [][]string {
		if v == nil {
			return nil
		}
		return v.Rows
	}).(pulumi.StringArrayArrayOutput)
}

type InsightsTableResultResponseArrayOutput struct{ *pulumi.OutputState }

func (InsightsTableResultResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InsightsTableResultResponse)(nil)).Elem()
}

func (o InsightsTableResultResponseArrayOutput) ToInsightsTableResultResponseArrayOutput() InsightsTableResultResponseArrayOutput {
	return o
}

func (o InsightsTableResultResponseArrayOutput) ToInsightsTableResultResponseArrayOutputWithContext(ctx context.Context) InsightsTableResultResponseArrayOutput {
	return o
}

func (o InsightsTableResultResponseArrayOutput) Index(i pulumi.IntInput) InsightsTableResultResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InsightsTableResultResponse {
		return vs[0].([]InsightsTableResultResponse)[vs[1].(int)]
	}).(InsightsTableResultResponseOutput)
}

type InsightsTableResultResponseColumns struct {
	// the name of the colum
	Name *string `pulumi:"name"`
	// the type of the colum
	Type *string `pulumi:"type"`
}

type InsightsTableResultResponseColumnsOutput struct{ *pulumi.OutputState }

func (InsightsTableResultResponseColumnsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InsightsTableResultResponseColumns)(nil)).Elem()
}

func (o InsightsTableResultResponseColumnsOutput) ToInsightsTableResultResponseColumnsOutput() InsightsTableResultResponseColumnsOutput {
	return o
}

func (o InsightsTableResultResponseColumnsOutput) ToInsightsTableResultResponseColumnsOutputWithContext(ctx context.Context) InsightsTableResultResponseColumnsOutput {
	return o
}

// the name of the colum
func (o InsightsTableResultResponseColumnsOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InsightsTableResultResponseColumns) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// the type of the colum
func (o InsightsTableResultResponseColumnsOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InsightsTableResultResponseColumns) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type InsightsTableResultResponseColumnsArrayOutput struct{ *pulumi.OutputState }

func (InsightsTableResultResponseColumnsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InsightsTableResultResponseColumns)(nil)).Elem()
}

func (o InsightsTableResultResponseColumnsArrayOutput) ToInsightsTableResultResponseColumnsArrayOutput() InsightsTableResultResponseColumnsArrayOutput {
	return o
}

func (o InsightsTableResultResponseColumnsArrayOutput) ToInsightsTableResultResponseColumnsArrayOutputWithContext(ctx context.Context) InsightsTableResultResponseColumnsArrayOutput {
	return o
}

func (o InsightsTableResultResponseColumnsArrayOutput) Index(i pulumi.IntInput) InsightsTableResultResponseColumnsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InsightsTableResultResponseColumns {
		return vs[0].([]InsightsTableResultResponseColumns)[vs[1].(int)]
	}).(InsightsTableResultResponseColumnsOutput)
}

type InstructionStepsInstructions struct {
	// The parameters for the setting
	Parameters interface{} `pulumi:"parameters"`
	// The kind of the setting
	Type string `pulumi:"type"`
}

type InstructionStepsResponseInstructions struct {
	// The parameters for the setting
	Parameters interface{} `pulumi:"parameters"`
	// The kind of the setting
	Type string `pulumi:"type"`
}

type InstructionStepsResponseInstructionsOutput struct{ *pulumi.OutputState }

func (InstructionStepsResponseInstructionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstructionStepsResponseInstructions)(nil)).Elem()
}

func (o InstructionStepsResponseInstructionsOutput) ToInstructionStepsResponseInstructionsOutput() InstructionStepsResponseInstructionsOutput {
	return o
}

func (o InstructionStepsResponseInstructionsOutput) ToInstructionStepsResponseInstructionsOutputWithContext(ctx context.Context) InstructionStepsResponseInstructionsOutput {
	return o
}

// The parameters for the setting
func (o InstructionStepsResponseInstructionsOutput) Parameters() pulumi.AnyOutput {
	return o.ApplyT(func(v InstructionStepsResponseInstructions) interface{} { return v.Parameters }).(pulumi.AnyOutput)
}

// The kind of the setting
func (o InstructionStepsResponseInstructionsOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v InstructionStepsResponseInstructions) string { return v.Type }).(pulumi.StringOutput)
}

type InstructionStepsResponseInstructionsArrayOutput struct{ *pulumi.OutputState }

func (InstructionStepsResponseInstructionsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstructionStepsResponseInstructions)(nil)).Elem()
}

func (o InstructionStepsResponseInstructionsArrayOutput) ToInstructionStepsResponseInstructionsArrayOutput() InstructionStepsResponseInstructionsArrayOutput {
	return o
}

func (o InstructionStepsResponseInstructionsArrayOutput) ToInstructionStepsResponseInstructionsArrayOutputWithContext(ctx context.Context) InstructionStepsResponseInstructionsArrayOutput {
	return o
}

func (o InstructionStepsResponseInstructionsArrayOutput) Index(i pulumi.IntInput) InstructionStepsResponseInstructionsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InstructionStepsResponseInstructions {
		return vs[0].([]InstructionStepsResponseInstructions)[vs[1].(int)]
	}).(InstructionStepsResponseInstructionsOutput)
}

// The available data types for MCAS (Microsoft Cloud App Security) data connector.
type MCASDataConnectorDataTypes struct {
	// Alerts data type connection.
	Alerts DataConnectorDataTypeCommon `pulumi:"alerts"`
	// Discovery log data type connection.
	DiscoveryLogs *DataConnectorDataTypeCommon `pulumi:"discoveryLogs"`
}

// The available data types for MCAS (Microsoft Cloud App Security) data connector.
type MCASDataConnectorDataTypesResponse struct {
	// Alerts data type connection.
	Alerts DataConnectorDataTypeCommonResponse `pulumi:"alerts"`
	// Discovery log data type connection.
	DiscoveryLogs *DataConnectorDataTypeCommonResponse `pulumi:"discoveryLogs"`
}

// The available data types for MCAS (Microsoft Cloud App Security) data connector.
type MCASDataConnectorDataTypesResponseOutput struct{ *pulumi.OutputState }

func (MCASDataConnectorDataTypesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MCASDataConnectorDataTypesResponse)(nil)).Elem()
}

func (o MCASDataConnectorDataTypesResponseOutput) ToMCASDataConnectorDataTypesResponseOutput() MCASDataConnectorDataTypesResponseOutput {
	return o
}

func (o MCASDataConnectorDataTypesResponseOutput) ToMCASDataConnectorDataTypesResponseOutputWithContext(ctx context.Context) MCASDataConnectorDataTypesResponseOutput {
	return o
}

// Alerts data type connection.
func (o MCASDataConnectorDataTypesResponseOutput) Alerts() DataConnectorDataTypeCommonResponseOutput {
	return o.ApplyT(func(v MCASDataConnectorDataTypesResponse) DataConnectorDataTypeCommonResponse { return v.Alerts }).(DataConnectorDataTypeCommonResponseOutput)
}

// Discovery log data type connection.
func (o MCASDataConnectorDataTypesResponseOutput) DiscoveryLogs() DataConnectorDataTypeCommonResponsePtrOutput {
	return o.ApplyT(func(v MCASDataConnectorDataTypesResponse) *DataConnectorDataTypeCommonResponse {
		return v.DiscoveryLogs
	}).(DataConnectorDataTypeCommonResponsePtrOutput)
}

// The available data types for Microsoft Threat Intelligence Platforms data connector.
type MSTIDataConnectorDataTypes struct {
	// Data type for Microsoft Threat Intelligence Platforms data connector.
	BingSafetyPhishingURL MSTIDataConnectorDataTypesBingSafetyPhishingURL `pulumi:"bingSafetyPhishingURL"`
	// Data type for Microsoft Threat Intelligence Platforms data connector.
	MicrosoftEmergingThreatFeed MSTIDataConnectorDataTypesMicrosoftEmergingThreatFeed `pulumi:"microsoftEmergingThreatFeed"`
}

// Data type for Microsoft Threat Intelligence Platforms data connector.
type MSTIDataConnectorDataTypesBingSafetyPhishingURL struct {
	// lookback period
	LookbackPeriod string `pulumi:"lookbackPeriod"`
	// Describe whether this data type connection is enabled or not.
	State string `pulumi:"state"`
}

// Data type for Microsoft Threat Intelligence Platforms data connector.
type MSTIDataConnectorDataTypesMicrosoftEmergingThreatFeed struct {
	// lookback period
	LookbackPeriod string `pulumi:"lookbackPeriod"`
	// Describe whether this data type connection is enabled or not.
	State string `pulumi:"state"`
}

// The available data types for Microsoft Threat Intelligence Platforms data connector.
type MSTIDataConnectorDataTypesResponse struct {
	// Data type for Microsoft Threat Intelligence Platforms data connector.
	BingSafetyPhishingURL MSTIDataConnectorDataTypesResponseBingSafetyPhishingURL `pulumi:"bingSafetyPhishingURL"`
	// Data type for Microsoft Threat Intelligence Platforms data connector.
	MicrosoftEmergingThreatFeed MSTIDataConnectorDataTypesResponseMicrosoftEmergingThreatFeed `pulumi:"microsoftEmergingThreatFeed"`
}

// The available data types for Microsoft Threat Intelligence Platforms data connector.
type MSTIDataConnectorDataTypesResponseOutput struct{ *pulumi.OutputState }

func (MSTIDataConnectorDataTypesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MSTIDataConnectorDataTypesResponse)(nil)).Elem()
}

func (o MSTIDataConnectorDataTypesResponseOutput) ToMSTIDataConnectorDataTypesResponseOutput() MSTIDataConnectorDataTypesResponseOutput {
	return o
}

func (o MSTIDataConnectorDataTypesResponseOutput) ToMSTIDataConnectorDataTypesResponseOutputWithContext(ctx context.Context) MSTIDataConnectorDataTypesResponseOutput {
	return o
}

// Data type for Microsoft Threat Intelligence Platforms data connector.
func (o MSTIDataConnectorDataTypesResponseOutput) BingSafetyPhishingURL() MSTIDataConnectorDataTypesResponseBingSafetyPhishingURLOutput {
	return o.ApplyT(func(v MSTIDataConnectorDataTypesResponse) MSTIDataConnectorDataTypesResponseBingSafetyPhishingURL {
		return v.BingSafetyPhishingURL
	}).(MSTIDataConnectorDataTypesResponseBingSafetyPhishingURLOutput)
}

// Data type for Microsoft Threat Intelligence Platforms data connector.
func (o MSTIDataConnectorDataTypesResponseOutput) MicrosoftEmergingThreatFeed() MSTIDataConnectorDataTypesResponseMicrosoftEmergingThreatFeedOutput {
	return o.ApplyT(func(v MSTIDataConnectorDataTypesResponse) MSTIDataConnectorDataTypesResponseMicrosoftEmergingThreatFeed {
		return v.MicrosoftEmergingThreatFeed
	}).(MSTIDataConnectorDataTypesResponseMicrosoftEmergingThreatFeedOutput)
}

// Data type for Microsoft Threat Intelligence Platforms data connector.
type MSTIDataConnectorDataTypesResponseBingSafetyPhishingURL struct {
	// lookback period
	LookbackPeriod string `pulumi:"lookbackPeriod"`
	// Describe whether this data type connection is enabled or not.
	State string `pulumi:"state"`
}

// Data type for Microsoft Threat Intelligence Platforms data connector.
type MSTIDataConnectorDataTypesResponseBingSafetyPhishingURLOutput struct{ *pulumi.OutputState }

func (MSTIDataConnectorDataTypesResponseBingSafetyPhishingURLOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MSTIDataConnectorDataTypesResponseBingSafetyPhishingURL)(nil)).Elem()
}

func (o MSTIDataConnectorDataTypesResponseBingSafetyPhishingURLOutput) ToMSTIDataConnectorDataTypesResponseBingSafetyPhishingURLOutput() MSTIDataConnectorDataTypesResponseBingSafetyPhishingURLOutput {
	return o
}

func (o MSTIDataConnectorDataTypesResponseBingSafetyPhishingURLOutput) ToMSTIDataConnectorDataTypesResponseBingSafetyPhishingURLOutputWithContext(ctx context.Context) MSTIDataConnectorDataTypesResponseBingSafetyPhishingURLOutput {
	return o
}

// lookback period
func (o MSTIDataConnectorDataTypesResponseBingSafetyPhishingURLOutput) LookbackPeriod() pulumi.StringOutput {
	return o.ApplyT(func(v MSTIDataConnectorDataTypesResponseBingSafetyPhishingURL) string { return v.LookbackPeriod }).(pulumi.StringOutput)
}

// Describe whether this data type connection is enabled or not.
func (o MSTIDataConnectorDataTypesResponseBingSafetyPhishingURLOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v MSTIDataConnectorDataTypesResponseBingSafetyPhishingURL) string { return v.State }).(pulumi.StringOutput)
}

// Data type for Microsoft Threat Intelligence Platforms data connector.
type MSTIDataConnectorDataTypesResponseMicrosoftEmergingThreatFeed struct {
	// lookback period
	LookbackPeriod string `pulumi:"lookbackPeriod"`
	// Describe whether this data type connection is enabled or not.
	State string `pulumi:"state"`
}

// Data type for Microsoft Threat Intelligence Platforms data connector.
type MSTIDataConnectorDataTypesResponseMicrosoftEmergingThreatFeedOutput struct{ *pulumi.OutputState }

func (MSTIDataConnectorDataTypesResponseMicrosoftEmergingThreatFeedOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MSTIDataConnectorDataTypesResponseMicrosoftEmergingThreatFeed)(nil)).Elem()
}

func (o MSTIDataConnectorDataTypesResponseMicrosoftEmergingThreatFeedOutput) ToMSTIDataConnectorDataTypesResponseMicrosoftEmergingThreatFeedOutput() MSTIDataConnectorDataTypesResponseMicrosoftEmergingThreatFeedOutput {
	return o
}

func (o MSTIDataConnectorDataTypesResponseMicrosoftEmergingThreatFeedOutput) ToMSTIDataConnectorDataTypesResponseMicrosoftEmergingThreatFeedOutputWithContext(ctx context.Context) MSTIDataConnectorDataTypesResponseMicrosoftEmergingThreatFeedOutput {
	return o
}

// lookback period
func (o MSTIDataConnectorDataTypesResponseMicrosoftEmergingThreatFeedOutput) LookbackPeriod() pulumi.StringOutput {
	return o.ApplyT(func(v MSTIDataConnectorDataTypesResponseMicrosoftEmergingThreatFeed) string { return v.LookbackPeriod }).(pulumi.StringOutput)
}

// Describe whether this data type connection is enabled or not.
func (o MSTIDataConnectorDataTypesResponseMicrosoftEmergingThreatFeedOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v MSTIDataConnectorDataTypesResponseMicrosoftEmergingThreatFeed) string { return v.State }).(pulumi.StringOutput)
}

// The available data types for Microsoft Threat Protection Platforms data connector.
type MTPDataConnectorDataTypes struct {
	// Alerts data type for Microsoft Threat Protection Platforms data connector.
	Alerts *MTPDataConnectorDataTypesAlerts `pulumi:"alerts"`
	// Incidents data type for Microsoft Threat Protection Platforms data connector.
	Incidents MTPDataConnectorDataTypesIncidents `pulumi:"incidents"`
}

// Alerts data type for Microsoft Threat Protection Platforms data connector.
type MTPDataConnectorDataTypesAlerts struct {
	// Describe whether this data type connection is enabled or not.
	State string `pulumi:"state"`
}

// Incidents data type for Microsoft Threat Protection Platforms data connector.
type MTPDataConnectorDataTypesIncidents struct {
	// Describe whether this data type connection is enabled or not.
	State string `pulumi:"state"`
}

// The available data types for Microsoft Threat Protection Platforms data connector.
type MTPDataConnectorDataTypesResponse struct {
	// Alerts data type for Microsoft Threat Protection Platforms data connector.
	Alerts *MTPDataConnectorDataTypesResponseAlerts `pulumi:"alerts"`
	// Incidents data type for Microsoft Threat Protection Platforms data connector.
	Incidents MTPDataConnectorDataTypesResponseIncidents `pulumi:"incidents"`
}

// The available data types for Microsoft Threat Protection Platforms data connector.
type MTPDataConnectorDataTypesResponseOutput struct{ *pulumi.OutputState }

func (MTPDataConnectorDataTypesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MTPDataConnectorDataTypesResponse)(nil)).Elem()
}

func (o MTPDataConnectorDataTypesResponseOutput) ToMTPDataConnectorDataTypesResponseOutput() MTPDataConnectorDataTypesResponseOutput {
	return o
}

func (o MTPDataConnectorDataTypesResponseOutput) ToMTPDataConnectorDataTypesResponseOutputWithContext(ctx context.Context) MTPDataConnectorDataTypesResponseOutput {
	return o
}

// Alerts data type for Microsoft Threat Protection Platforms data connector.
func (o MTPDataConnectorDataTypesResponseOutput) Alerts() MTPDataConnectorDataTypesResponseAlertsPtrOutput {
	return o.ApplyT(func(v MTPDataConnectorDataTypesResponse) *MTPDataConnectorDataTypesResponseAlerts { return v.Alerts }).(MTPDataConnectorDataTypesResponseAlertsPtrOutput)
}

// Incidents data type for Microsoft Threat Protection Platforms data connector.
func (o MTPDataConnectorDataTypesResponseOutput) Incidents() MTPDataConnectorDataTypesResponseIncidentsOutput {
	return o.ApplyT(func(v MTPDataConnectorDataTypesResponse) MTPDataConnectorDataTypesResponseIncidents {
		return v.Incidents
	}).(MTPDataConnectorDataTypesResponseIncidentsOutput)
}

// Alerts data type for Microsoft Threat Protection Platforms data connector.
type MTPDataConnectorDataTypesResponseAlerts struct {
	// Describe whether this data type connection is enabled or not.
	State string `pulumi:"state"`
}

// Alerts data type for Microsoft Threat Protection Platforms data connector.
type MTPDataConnectorDataTypesResponseAlertsOutput struct{ *pulumi.OutputState }

func (MTPDataConnectorDataTypesResponseAlertsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MTPDataConnectorDataTypesResponseAlerts)(nil)).Elem()
}

func (o MTPDataConnectorDataTypesResponseAlertsOutput) ToMTPDataConnectorDataTypesResponseAlertsOutput() MTPDataConnectorDataTypesResponseAlertsOutput {
	return o
}

func (o MTPDataConnectorDataTypesResponseAlertsOutput) ToMTPDataConnectorDataTypesResponseAlertsOutputWithContext(ctx context.Context) MTPDataConnectorDataTypesResponseAlertsOutput {
	return o
}

// Describe whether this data type connection is enabled or not.
func (o MTPDataConnectorDataTypesResponseAlertsOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v MTPDataConnectorDataTypesResponseAlerts) string { return v.State }).(pulumi.StringOutput)
}

type MTPDataConnectorDataTypesResponseAlertsPtrOutput struct{ *pulumi.OutputState }

func (MTPDataConnectorDataTypesResponseAlertsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MTPDataConnectorDataTypesResponseAlerts)(nil)).Elem()
}

func (o MTPDataConnectorDataTypesResponseAlertsPtrOutput) ToMTPDataConnectorDataTypesResponseAlertsPtrOutput() MTPDataConnectorDataTypesResponseAlertsPtrOutput {
	return o
}

func (o MTPDataConnectorDataTypesResponseAlertsPtrOutput) ToMTPDataConnectorDataTypesResponseAlertsPtrOutputWithContext(ctx context.Context) MTPDataConnectorDataTypesResponseAlertsPtrOutput {
	return o
}

func (o MTPDataConnectorDataTypesResponseAlertsPtrOutput) Elem() MTPDataConnectorDataTypesResponseAlertsOutput {
	return o.ApplyT(func(v *MTPDataConnectorDataTypesResponseAlerts) MTPDataConnectorDataTypesResponseAlerts {
		if v != nil {
			return *v
		}
		var ret MTPDataConnectorDataTypesResponseAlerts
		return ret
	}).(MTPDataConnectorDataTypesResponseAlertsOutput)
}

// Describe whether this data type connection is enabled or not.
func (o MTPDataConnectorDataTypesResponseAlertsPtrOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MTPDataConnectorDataTypesResponseAlerts) *string {
		if v == nil {
			return nil
		}
		return &v.State
	}).(pulumi.StringPtrOutput)
}

// Incidents data type for Microsoft Threat Protection Platforms data connector.
type MTPDataConnectorDataTypesResponseIncidents struct {
	// Describe whether this data type connection is enabled or not.
	State string `pulumi:"state"`
}

// Incidents data type for Microsoft Threat Protection Platforms data connector.
type MTPDataConnectorDataTypesResponseIncidentsOutput struct{ *pulumi.OutputState }

func (MTPDataConnectorDataTypesResponseIncidentsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MTPDataConnectorDataTypesResponseIncidents)(nil)).Elem()
}

func (o MTPDataConnectorDataTypesResponseIncidentsOutput) ToMTPDataConnectorDataTypesResponseIncidentsOutput() MTPDataConnectorDataTypesResponseIncidentsOutput {
	return o
}

func (o MTPDataConnectorDataTypesResponseIncidentsOutput) ToMTPDataConnectorDataTypesResponseIncidentsOutputWithContext(ctx context.Context) MTPDataConnectorDataTypesResponseIncidentsOutput {
	return o
}

// Describe whether this data type connection is enabled or not.
func (o MTPDataConnectorDataTypesResponseIncidentsOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v MTPDataConnectorDataTypesResponseIncidents) string { return v.State }).(pulumi.StringOutput)
}

// Publisher or creator of the content item.
type MetadataAuthor struct {
	// Email of author contact
	Email *string `pulumi:"email"`
	// Link for author/vendor page
	Link *string `pulumi:"link"`
	// Name of the author. Company or person.
	Name *string `pulumi:"name"`
}

// MetadataAuthorInput is an input type that accepts MetadataAuthorArgs and MetadataAuthorOutput values.
// You can construct a concrete instance of `MetadataAuthorInput` via:
//
//	MetadataAuthorArgs{...}
type MetadataAuthorInput interface {
	pulumi.Input

	ToMetadataAuthorOutput() MetadataAuthorOutput
	ToMetadataAuthorOutputWithContext(context.Context) MetadataAuthorOutput
}

// Publisher or creator of the content item.
type MetadataAuthorArgs struct {
	// Email of author contact
	Email pulumi.StringPtrInput `pulumi:"email"`
	// Link for author/vendor page
	Link pulumi.StringPtrInput `pulumi:"link"`
	// Name of the author. Company or person.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (MetadataAuthorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MetadataAuthor)(nil)).Elem()
}

func (i MetadataAuthorArgs) ToMetadataAuthorOutput() MetadataAuthorOutput {
	return i.ToMetadataAuthorOutputWithContext(context.Background())
}

func (i MetadataAuthorArgs) ToMetadataAuthorOutputWithContext(ctx context.Context) MetadataAuthorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetadataAuthorOutput)
}

func (i MetadataAuthorArgs) ToMetadataAuthorPtrOutput() MetadataAuthorPtrOutput {
	return i.ToMetadataAuthorPtrOutputWithContext(context.Background())
}

func (i MetadataAuthorArgs) ToMetadataAuthorPtrOutputWithContext(ctx context.Context) MetadataAuthorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetadataAuthorOutput).ToMetadataAuthorPtrOutputWithContext(ctx)
}

// MetadataAuthorPtrInput is an input type that accepts MetadataAuthorArgs, MetadataAuthorPtr and MetadataAuthorPtrOutput values.
// You can construct a concrete instance of `MetadataAuthorPtrInput` via:
//
//	        MetadataAuthorArgs{...}
//
//	or:
//
//	        nil
type MetadataAuthorPtrInput interface {
	pulumi.Input

	ToMetadataAuthorPtrOutput() MetadataAuthorPtrOutput
	ToMetadataAuthorPtrOutputWithContext(context.Context) MetadataAuthorPtrOutput
}

type metadataAuthorPtrType MetadataAuthorArgs

func MetadataAuthorPtr(v *MetadataAuthorArgs) MetadataAuthorPtrInput {
	return (*metadataAuthorPtrType)(v)
}

func (*metadataAuthorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MetadataAuthor)(nil)).Elem()
}

func (i *metadataAuthorPtrType) ToMetadataAuthorPtrOutput() MetadataAuthorPtrOutput {
	return i.ToMetadataAuthorPtrOutputWithContext(context.Background())
}

func (i *metadataAuthorPtrType) ToMetadataAuthorPtrOutputWithContext(ctx context.Context) MetadataAuthorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetadataAuthorPtrOutput)
}

// Publisher or creator of the content item.
type MetadataAuthorOutput struct{ *pulumi.OutputState }

func (MetadataAuthorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MetadataAuthor)(nil)).Elem()
}

func (o MetadataAuthorOutput) ToMetadataAuthorOutput() MetadataAuthorOutput {
	return o
}

func (o MetadataAuthorOutput) ToMetadataAuthorOutputWithContext(ctx context.Context) MetadataAuthorOutput {
	return o
}

func (o MetadataAuthorOutput) ToMetadataAuthorPtrOutput() MetadataAuthorPtrOutput {
	return o.ToMetadataAuthorPtrOutputWithContext(context.Background())
}

func (o MetadataAuthorOutput) ToMetadataAuthorPtrOutputWithContext(ctx context.Context) MetadataAuthorPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MetadataAuthor) *MetadataAuthor {
		return &v
	}).(MetadataAuthorPtrOutput)
}

// Email of author contact
func (o MetadataAuthorOutput) Email() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MetadataAuthor) *string { return v.Email }).(pulumi.StringPtrOutput)
}

// Link for author/vendor page
func (o MetadataAuthorOutput) Link() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MetadataAuthor) *string { return v.Link }).(pulumi.StringPtrOutput)
}

// Name of the author. Company or person.
func (o MetadataAuthorOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MetadataAuthor) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type MetadataAuthorPtrOutput struct{ *pulumi.OutputState }

func (MetadataAuthorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MetadataAuthor)(nil)).Elem()
}

func (o MetadataAuthorPtrOutput) ToMetadataAuthorPtrOutput() MetadataAuthorPtrOutput {
	return o
}

func (o MetadataAuthorPtrOutput) ToMetadataAuthorPtrOutputWithContext(ctx context.Context) MetadataAuthorPtrOutput {
	return o
}

func (o MetadataAuthorPtrOutput) Elem() MetadataAuthorOutput {
	return o.ApplyT(func(v *MetadataAuthor) MetadataAuthor {
		if v != nil {
			return *v
		}
		var ret MetadataAuthor
		return ret
	}).(MetadataAuthorOutput)
}

// Email of author contact
func (o MetadataAuthorPtrOutput) Email() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MetadataAuthor) *string {
		if v == nil {
			return nil
		}
		return v.Email
	}).(pulumi.StringPtrOutput)
}

// Link for author/vendor page
func (o MetadataAuthorPtrOutput) Link() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MetadataAuthor) *string {
		if v == nil {
			return nil
		}
		return v.Link
	}).(pulumi.StringPtrOutput)
}

// Name of the author. Company or person.
func (o MetadataAuthorPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MetadataAuthor) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Publisher or creator of the content item.
type MetadataAuthorResponse struct {
	// Email of author contact
	Email *string `pulumi:"email"`
	// Link for author/vendor page
	Link *string `pulumi:"link"`
	// Name of the author. Company or person.
	Name *string `pulumi:"name"`
}

// Publisher or creator of the content item.
type MetadataAuthorResponseOutput struct{ *pulumi.OutputState }

func (MetadataAuthorResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MetadataAuthorResponse)(nil)).Elem()
}

func (o MetadataAuthorResponseOutput) ToMetadataAuthorResponseOutput() MetadataAuthorResponseOutput {
	return o
}

func (o MetadataAuthorResponseOutput) ToMetadataAuthorResponseOutputWithContext(ctx context.Context) MetadataAuthorResponseOutput {
	return o
}

// Email of author contact
func (o MetadataAuthorResponseOutput) Email() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MetadataAuthorResponse) *string { return v.Email }).(pulumi.StringPtrOutput)
}

// Link for author/vendor page
func (o MetadataAuthorResponseOutput) Link() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MetadataAuthorResponse) *string { return v.Link }).(pulumi.StringPtrOutput)
}

// Name of the author. Company or person.
func (o MetadataAuthorResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MetadataAuthorResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type MetadataAuthorResponsePtrOutput struct{ *pulumi.OutputState }

func (MetadataAuthorResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MetadataAuthorResponse)(nil)).Elem()
}

func (o MetadataAuthorResponsePtrOutput) ToMetadataAuthorResponsePtrOutput() MetadataAuthorResponsePtrOutput {
	return o
}

func (o MetadataAuthorResponsePtrOutput) ToMetadataAuthorResponsePtrOutputWithContext(ctx context.Context) MetadataAuthorResponsePtrOutput {
	return o
}

func (o MetadataAuthorResponsePtrOutput) Elem() MetadataAuthorResponseOutput {
	return o.ApplyT(func(v *MetadataAuthorResponse) MetadataAuthorResponse {
		if v != nil {
			return *v
		}
		var ret MetadataAuthorResponse
		return ret
	}).(MetadataAuthorResponseOutput)
}

// Email of author contact
func (o MetadataAuthorResponsePtrOutput) Email() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MetadataAuthorResponse) *string {
		if v == nil {
			return nil
		}
		return v.Email
	}).(pulumi.StringPtrOutput)
}

// Link for author/vendor page
func (o MetadataAuthorResponsePtrOutput) Link() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MetadataAuthorResponse) *string {
		if v == nil {
			return nil
		}
		return v.Link
	}).(pulumi.StringPtrOutput)
}

// Name of the author. Company or person.
func (o MetadataAuthorResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MetadataAuthorResponse) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// ies for the solution content item
type MetadataCategories struct {
	// domain for the solution content item
	Domains []string `pulumi:"domains"`
	// Industry verticals for the solution content item
	Verticals []string `pulumi:"verticals"`
}

// MetadataCategoriesInput is an input type that accepts MetadataCategoriesArgs and MetadataCategoriesOutput values.
// You can construct a concrete instance of `MetadataCategoriesInput` via:
//
//	MetadataCategoriesArgs{...}
type MetadataCategoriesInput interface {
	pulumi.Input

	ToMetadataCategoriesOutput() MetadataCategoriesOutput
	ToMetadataCategoriesOutputWithContext(context.Context) MetadataCategoriesOutput
}

// ies for the solution content item
type MetadataCategoriesArgs struct {
	// domain for the solution content item
	Domains pulumi.StringArrayInput `pulumi:"domains"`
	// Industry verticals for the solution content item
	Verticals pulumi.StringArrayInput `pulumi:"verticals"`
}

func (MetadataCategoriesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MetadataCategories)(nil)).Elem()
}

func (i MetadataCategoriesArgs) ToMetadataCategoriesOutput() MetadataCategoriesOutput {
	return i.ToMetadataCategoriesOutputWithContext(context.Background())
}

func (i MetadataCategoriesArgs) ToMetadataCategoriesOutputWithContext(ctx context.Context) MetadataCategoriesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetadataCategoriesOutput)
}

func (i MetadataCategoriesArgs) ToMetadataCategoriesPtrOutput() MetadataCategoriesPtrOutput {
	return i.ToMetadataCategoriesPtrOutputWithContext(context.Background())
}

func (i MetadataCategoriesArgs) ToMetadataCategoriesPtrOutputWithContext(ctx context.Context) MetadataCategoriesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetadataCategoriesOutput).ToMetadataCategoriesPtrOutputWithContext(ctx)
}

// MetadataCategoriesPtrInput is an input type that accepts MetadataCategoriesArgs, MetadataCategoriesPtr and MetadataCategoriesPtrOutput values.
// You can construct a concrete instance of `MetadataCategoriesPtrInput` via:
//
//	        MetadataCategoriesArgs{...}
//
//	or:
//
//	        nil
type MetadataCategoriesPtrInput interface {
	pulumi.Input

	ToMetadataCategoriesPtrOutput() MetadataCategoriesPtrOutput
	ToMetadataCategoriesPtrOutputWithContext(context.Context) MetadataCategoriesPtrOutput
}

type metadataCategoriesPtrType MetadataCategoriesArgs

func MetadataCategoriesPtr(v *MetadataCategoriesArgs) MetadataCategoriesPtrInput {
	return (*metadataCategoriesPtrType)(v)
}

func (*metadataCategoriesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MetadataCategories)(nil)).Elem()
}

func (i *metadataCategoriesPtrType) ToMetadataCategoriesPtrOutput() MetadataCategoriesPtrOutput {
	return i.ToMetadataCategoriesPtrOutputWithContext(context.Background())
}

func (i *metadataCategoriesPtrType) ToMetadataCategoriesPtrOutputWithContext(ctx context.Context) MetadataCategoriesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetadataCategoriesPtrOutput)
}

// ies for the solution content item
type MetadataCategoriesOutput struct{ *pulumi.OutputState }

func (MetadataCategoriesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MetadataCategories)(nil)).Elem()
}

func (o MetadataCategoriesOutput) ToMetadataCategoriesOutput() MetadataCategoriesOutput {
	return o
}

func (o MetadataCategoriesOutput) ToMetadataCategoriesOutputWithContext(ctx context.Context) MetadataCategoriesOutput {
	return o
}

func (o MetadataCategoriesOutput) ToMetadataCategoriesPtrOutput() MetadataCategoriesPtrOutput {
	return o.ToMetadataCategoriesPtrOutputWithContext(context.Background())
}

func (o MetadataCategoriesOutput) ToMetadataCategoriesPtrOutputWithContext(ctx context.Context) MetadataCategoriesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MetadataCategories) *MetadataCategories {
		return &v
	}).(MetadataCategoriesPtrOutput)
}

// domain for the solution content item
func (o MetadataCategoriesOutput) Domains() pulumi.StringArrayOutput {
	return o.ApplyT(func(v MetadataCategories) []string { return v.Domains }).(pulumi.StringArrayOutput)
}

// Industry verticals for the solution content item
func (o MetadataCategoriesOutput) Verticals() pulumi.StringArrayOutput {
	return o.ApplyT(func(v MetadataCategories) []string { return v.Verticals }).(pulumi.StringArrayOutput)
}

type MetadataCategoriesPtrOutput struct{ *pulumi.OutputState }

func (MetadataCategoriesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MetadataCategories)(nil)).Elem()
}

func (o MetadataCategoriesPtrOutput) ToMetadataCategoriesPtrOutput() MetadataCategoriesPtrOutput {
	return o
}

func (o MetadataCategoriesPtrOutput) ToMetadataCategoriesPtrOutputWithContext(ctx context.Context) MetadataCategoriesPtrOutput {
	return o
}

func (o MetadataCategoriesPtrOutput) Elem() MetadataCategoriesOutput {
	return o.ApplyT(func(v *MetadataCategories) MetadataCategories {
		if v != nil {
			return *v
		}
		var ret MetadataCategories
		return ret
	}).(MetadataCategoriesOutput)
}

// domain for the solution content item
func (o MetadataCategoriesPtrOutput) Domains() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *MetadataCategories) []string {
		if v == nil {
			return nil
		}
		return v.Domains
	}).(pulumi.StringArrayOutput)
}

// Industry verticals for the solution content item
func (o MetadataCategoriesPtrOutput) Verticals() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *MetadataCategories) []string {
		if v == nil {
			return nil
		}
		return v.Verticals
	}).(pulumi.StringArrayOutput)
}

// ies for the solution content item
type MetadataCategoriesResponse struct {
	// domain for the solution content item
	Domains []string `pulumi:"domains"`
	// Industry verticals for the solution content item
	Verticals []string `pulumi:"verticals"`
}

// ies for the solution content item
type MetadataCategoriesResponseOutput struct{ *pulumi.OutputState }

func (MetadataCategoriesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MetadataCategoriesResponse)(nil)).Elem()
}

func (o MetadataCategoriesResponseOutput) ToMetadataCategoriesResponseOutput() MetadataCategoriesResponseOutput {
	return o
}

func (o MetadataCategoriesResponseOutput) ToMetadataCategoriesResponseOutputWithContext(ctx context.Context) MetadataCategoriesResponseOutput {
	return o
}

// domain for the solution content item
func (o MetadataCategoriesResponseOutput) Domains() pulumi.StringArrayOutput {
	return o.ApplyT(func(v MetadataCategoriesResponse) []string { return v.Domains }).(pulumi.StringArrayOutput)
}

// Industry verticals for the solution content item
func (o MetadataCategoriesResponseOutput) Verticals() pulumi.StringArrayOutput {
	return o.ApplyT(func(v MetadataCategoriesResponse) []string { return v.Verticals }).(pulumi.StringArrayOutput)
}

type MetadataCategoriesResponsePtrOutput struct{ *pulumi.OutputState }

func (MetadataCategoriesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MetadataCategoriesResponse)(nil)).Elem()
}

func (o MetadataCategoriesResponsePtrOutput) ToMetadataCategoriesResponsePtrOutput() MetadataCategoriesResponsePtrOutput {
	return o
}

func (o MetadataCategoriesResponsePtrOutput) ToMetadataCategoriesResponsePtrOutputWithContext(ctx context.Context) MetadataCategoriesResponsePtrOutput {
	return o
}

func (o MetadataCategoriesResponsePtrOutput) Elem() MetadataCategoriesResponseOutput {
	return o.ApplyT(func(v *MetadataCategoriesResponse) MetadataCategoriesResponse {
		if v != nil {
			return *v
		}
		var ret MetadataCategoriesResponse
		return ret
	}).(MetadataCategoriesResponseOutput)
}

// domain for the solution content item
func (o MetadataCategoriesResponsePtrOutput) Domains() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *MetadataCategoriesResponse) []string {
		if v == nil {
			return nil
		}
		return v.Domains
	}).(pulumi.StringArrayOutput)
}

// Industry verticals for the solution content item
func (o MetadataCategoriesResponsePtrOutput) Verticals() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *MetadataCategoriesResponse) []string {
		if v == nil {
			return nil
		}
		return v.Verticals
	}).(pulumi.StringArrayOutput)
}

// Dependencies for the content item, what other content items it requires to work.  Can describe more complex dependencies using a recursive/nested structure. For a single dependency an id/kind/version can be supplied or operator/criteria for complex dependencies.
type MetadataDependencies struct {
	// Id of the content item we depend on
	ContentId *string `pulumi:"contentId"`
	// This is the list of dependencies we must fulfill, according to the AND/OR operator
	Criteria []MetadataDependencies `pulumi:"criteria"`
	// Type of the content item we depend on
	Kind *string `pulumi:"kind"`
	// Name of the content item
	Name *string `pulumi:"name"`
	// Operator used for list of dependencies in criteria array.
	Operator *string `pulumi:"operator"`
	// Version of the the content item we depend on.  Can be blank, * or missing to indicate any version fulfills the dependency.  If version does not match our defined numeric format then an exact match is required.
	Version *string `pulumi:"version"`
}

// MetadataDependenciesInput is an input type that accepts MetadataDependenciesArgs and MetadataDependenciesOutput values.
// You can construct a concrete instance of `MetadataDependenciesInput` via:
//
//	MetadataDependenciesArgs{...}
type MetadataDependenciesInput interface {
	pulumi.Input

	ToMetadataDependenciesOutput() MetadataDependenciesOutput
	ToMetadataDependenciesOutputWithContext(context.Context) MetadataDependenciesOutput
}

// Dependencies for the content item, what other content items it requires to work.  Can describe more complex dependencies using a recursive/nested structure. For a single dependency an id/kind/version can be supplied or operator/criteria for complex dependencies.
type MetadataDependenciesArgs struct {
	// Id of the content item we depend on
	ContentId pulumi.StringPtrInput `pulumi:"contentId"`
	// This is the list of dependencies we must fulfill, according to the AND/OR operator
	Criteria MetadataDependenciesArrayInput `pulumi:"criteria"`
	// Type of the content item we depend on
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Name of the content item
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Operator used for list of dependencies in criteria array.
	Operator pulumi.StringPtrInput `pulumi:"operator"`
	// Version of the the content item we depend on.  Can be blank, * or missing to indicate any version fulfills the dependency.  If version does not match our defined numeric format then an exact match is required.
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (MetadataDependenciesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MetadataDependencies)(nil)).Elem()
}

func (i MetadataDependenciesArgs) ToMetadataDependenciesOutput() MetadataDependenciesOutput {
	return i.ToMetadataDependenciesOutputWithContext(context.Background())
}

func (i MetadataDependenciesArgs) ToMetadataDependenciesOutputWithContext(ctx context.Context) MetadataDependenciesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetadataDependenciesOutput)
}

func (i MetadataDependenciesArgs) ToMetadataDependenciesPtrOutput() MetadataDependenciesPtrOutput {
	return i.ToMetadataDependenciesPtrOutputWithContext(context.Background())
}

func (i MetadataDependenciesArgs) ToMetadataDependenciesPtrOutputWithContext(ctx context.Context) MetadataDependenciesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetadataDependenciesOutput).ToMetadataDependenciesPtrOutputWithContext(ctx)
}

// MetadataDependenciesPtrInput is an input type that accepts MetadataDependenciesArgs, MetadataDependenciesPtr and MetadataDependenciesPtrOutput values.
// You can construct a concrete instance of `MetadataDependenciesPtrInput` via:
//
//	        MetadataDependenciesArgs{...}
//
//	or:
//
//	        nil
type MetadataDependenciesPtrInput interface {
	pulumi.Input

	ToMetadataDependenciesPtrOutput() MetadataDependenciesPtrOutput
	ToMetadataDependenciesPtrOutputWithContext(context.Context) MetadataDependenciesPtrOutput
}

type metadataDependenciesPtrType MetadataDependenciesArgs

func MetadataDependenciesPtr(v *MetadataDependenciesArgs) MetadataDependenciesPtrInput {
	return (*metadataDependenciesPtrType)(v)
}

func (*metadataDependenciesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MetadataDependencies)(nil)).Elem()
}

func (i *metadataDependenciesPtrType) ToMetadataDependenciesPtrOutput() MetadataDependenciesPtrOutput {
	return i.ToMetadataDependenciesPtrOutputWithContext(context.Background())
}

func (i *metadataDependenciesPtrType) ToMetadataDependenciesPtrOutputWithContext(ctx context.Context) MetadataDependenciesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetadataDependenciesPtrOutput)
}

// MetadataDependenciesArrayInput is an input type that accepts MetadataDependenciesArray and MetadataDependenciesArrayOutput values.
// You can construct a concrete instance of `MetadataDependenciesArrayInput` via:
//
//	MetadataDependenciesArray{ MetadataDependenciesArgs{...} }
type MetadataDependenciesArrayInput interface {
	pulumi.Input

	ToMetadataDependenciesArrayOutput() MetadataDependenciesArrayOutput
	ToMetadataDependenciesArrayOutputWithContext(context.Context) MetadataDependenciesArrayOutput
}

type MetadataDependenciesArray []MetadataDependenciesInput

func (MetadataDependenciesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MetadataDependencies)(nil)).Elem()
}

func (i MetadataDependenciesArray) ToMetadataDependenciesArrayOutput() MetadataDependenciesArrayOutput {
	return i.ToMetadataDependenciesArrayOutputWithContext(context.Background())
}

func (i MetadataDependenciesArray) ToMetadataDependenciesArrayOutputWithContext(ctx context.Context) MetadataDependenciesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetadataDependenciesArrayOutput)
}

// Dependencies for the content item, what other content items it requires to work.  Can describe more complex dependencies using a recursive/nested structure. For a single dependency an id/kind/version can be supplied or operator/criteria for complex dependencies.
type MetadataDependenciesOutput struct{ *pulumi.OutputState }

func (MetadataDependenciesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MetadataDependencies)(nil)).Elem()
}

func (o MetadataDependenciesOutput) ToMetadataDependenciesOutput() MetadataDependenciesOutput {
	return o
}

func (o MetadataDependenciesOutput) ToMetadataDependenciesOutputWithContext(ctx context.Context) MetadataDependenciesOutput {
	return o
}

func (o MetadataDependenciesOutput) ToMetadataDependenciesPtrOutput() MetadataDependenciesPtrOutput {
	return o.ToMetadataDependenciesPtrOutputWithContext(context.Background())
}

func (o MetadataDependenciesOutput) ToMetadataDependenciesPtrOutputWithContext(ctx context.Context) MetadataDependenciesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MetadataDependencies) *MetadataDependencies {
		return &v
	}).(MetadataDependenciesPtrOutput)
}

// Id of the content item we depend on
func (o MetadataDependenciesOutput) ContentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MetadataDependencies) *string { return v.ContentId }).(pulumi.StringPtrOutput)
}

// This is the list of dependencies we must fulfill, according to the AND/OR operator
func (o MetadataDependenciesOutput) Criteria() MetadataDependenciesArrayOutput {
	return o.ApplyT(func(v MetadataDependencies) []MetadataDependencies { return v.Criteria }).(MetadataDependenciesArrayOutput)
}

// Type of the content item we depend on
func (o MetadataDependenciesOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MetadataDependencies) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Name of the content item
func (o MetadataDependenciesOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MetadataDependencies) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Operator used for list of dependencies in criteria array.
func (o MetadataDependenciesOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MetadataDependencies) *string { return v.Operator }).(pulumi.StringPtrOutput)
}

// Version of the the content item we depend on.  Can be blank, * or missing to indicate any version fulfills the dependency.  If version does not match our defined numeric format then an exact match is required.
func (o MetadataDependenciesOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MetadataDependencies) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type MetadataDependenciesPtrOutput struct{ *pulumi.OutputState }

func (MetadataDependenciesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MetadataDependencies)(nil)).Elem()
}

func (o MetadataDependenciesPtrOutput) ToMetadataDependenciesPtrOutput() MetadataDependenciesPtrOutput {
	return o
}

func (o MetadataDependenciesPtrOutput) ToMetadataDependenciesPtrOutputWithContext(ctx context.Context) MetadataDependenciesPtrOutput {
	return o
}

func (o MetadataDependenciesPtrOutput) Elem() MetadataDependenciesOutput {
	return o.ApplyT(func(v *MetadataDependencies) MetadataDependencies {
		if v != nil {
			return *v
		}
		var ret MetadataDependencies
		return ret
	}).(MetadataDependenciesOutput)
}

// Id of the content item we depend on
func (o MetadataDependenciesPtrOutput) ContentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MetadataDependencies) *string {
		if v == nil {
			return nil
		}
		return v.ContentId
	}).(pulumi.StringPtrOutput)
}

// This is the list of dependencies we must fulfill, according to the AND/OR operator
func (o MetadataDependenciesPtrOutput) Criteria() MetadataDependenciesArrayOutput {
	return o.ApplyT(func(v *MetadataDependencies) []MetadataDependencies {
		if v == nil {
			return nil
		}
		return v.Criteria
	}).(MetadataDependenciesArrayOutput)
}

// Type of the content item we depend on
func (o MetadataDependenciesPtrOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MetadataDependencies) *string {
		if v == nil {
			return nil
		}
		return v.Kind
	}).(pulumi.StringPtrOutput)
}

// Name of the content item
func (o MetadataDependenciesPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MetadataDependencies) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Operator used for list of dependencies in criteria array.
func (o MetadataDependenciesPtrOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MetadataDependencies) *string {
		if v == nil {
			return nil
		}
		return v.Operator
	}).(pulumi.StringPtrOutput)
}

// Version of the the content item we depend on.  Can be blank, * or missing to indicate any version fulfills the dependency.  If version does not match our defined numeric format then an exact match is required.
func (o MetadataDependenciesPtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MetadataDependencies) *string {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.StringPtrOutput)
}

type MetadataDependenciesArrayOutput struct{ *pulumi.OutputState }

func (MetadataDependenciesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MetadataDependencies)(nil)).Elem()
}

func (o MetadataDependenciesArrayOutput) ToMetadataDependenciesArrayOutput() MetadataDependenciesArrayOutput {
	return o
}

func (o MetadataDependenciesArrayOutput) ToMetadataDependenciesArrayOutputWithContext(ctx context.Context) MetadataDependenciesArrayOutput {
	return o
}

func (o MetadataDependenciesArrayOutput) Index(i pulumi.IntInput) MetadataDependenciesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MetadataDependencies {
		return vs[0].([]MetadataDependencies)[vs[1].(int)]
	}).(MetadataDependenciesOutput)
}

// Dependencies for the content item, what other content items it requires to work.  Can describe more complex dependencies using a recursive/nested structure. For a single dependency an id/kind/version can be supplied or operator/criteria for complex dependencies.
type MetadataDependenciesResponse struct {
	// Id of the content item we depend on
	ContentId *string `pulumi:"contentId"`
	// This is the list of dependencies we must fulfill, according to the AND/OR operator
	Criteria []MetadataDependenciesResponse `pulumi:"criteria"`
	// Type of the content item we depend on
	Kind *string `pulumi:"kind"`
	// Name of the content item
	Name *string `pulumi:"name"`
	// Operator used for list of dependencies in criteria array.
	Operator *string `pulumi:"operator"`
	// Version of the the content item we depend on.  Can be blank, * or missing to indicate any version fulfills the dependency.  If version does not match our defined numeric format then an exact match is required.
	Version *string `pulumi:"version"`
}

// Dependencies for the content item, what other content items it requires to work.  Can describe more complex dependencies using a recursive/nested structure. For a single dependency an id/kind/version can be supplied or operator/criteria for complex dependencies.
type MetadataDependenciesResponseOutput struct{ *pulumi.OutputState }

func (MetadataDependenciesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MetadataDependenciesResponse)(nil)).Elem()
}

func (o MetadataDependenciesResponseOutput) ToMetadataDependenciesResponseOutput() MetadataDependenciesResponseOutput {
	return o
}

func (o MetadataDependenciesResponseOutput) ToMetadataDependenciesResponseOutputWithContext(ctx context.Context) MetadataDependenciesResponseOutput {
	return o
}

// Id of the content item we depend on
func (o MetadataDependenciesResponseOutput) ContentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MetadataDependenciesResponse) *string { return v.ContentId }).(pulumi.StringPtrOutput)
}

// This is the list of dependencies we must fulfill, according to the AND/OR operator
func (o MetadataDependenciesResponseOutput) Criteria() MetadataDependenciesResponseArrayOutput {
	return o.ApplyT(func(v MetadataDependenciesResponse) []MetadataDependenciesResponse { return v.Criteria }).(MetadataDependenciesResponseArrayOutput)
}

// Type of the content item we depend on
func (o MetadataDependenciesResponseOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MetadataDependenciesResponse) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Name of the content item
func (o MetadataDependenciesResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MetadataDependenciesResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Operator used for list of dependencies in criteria array.
func (o MetadataDependenciesResponseOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MetadataDependenciesResponse) *string { return v.Operator }).(pulumi.StringPtrOutput)
}

// Version of the the content item we depend on.  Can be blank, * or missing to indicate any version fulfills the dependency.  If version does not match our defined numeric format then an exact match is required.
func (o MetadataDependenciesResponseOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MetadataDependenciesResponse) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type MetadataDependenciesResponsePtrOutput struct{ *pulumi.OutputState }

func (MetadataDependenciesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MetadataDependenciesResponse)(nil)).Elem()
}

func (o MetadataDependenciesResponsePtrOutput) ToMetadataDependenciesResponsePtrOutput() MetadataDependenciesResponsePtrOutput {
	return o
}

func (o MetadataDependenciesResponsePtrOutput) ToMetadataDependenciesResponsePtrOutputWithContext(ctx context.Context) MetadataDependenciesResponsePtrOutput {
	return o
}

func (o MetadataDependenciesResponsePtrOutput) Elem() MetadataDependenciesResponseOutput {
	return o.ApplyT(func(v *MetadataDependenciesResponse) MetadataDependenciesResponse {
		if v != nil {
			return *v
		}
		var ret MetadataDependenciesResponse
		return ret
	}).(MetadataDependenciesResponseOutput)
}

// Id of the content item we depend on
func (o MetadataDependenciesResponsePtrOutput) ContentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MetadataDependenciesResponse) *string {
		if v == nil {
			return nil
		}
		return v.ContentId
	}).(pulumi.StringPtrOutput)
}

// This is the list of dependencies we must fulfill, according to the AND/OR operator
func (o MetadataDependenciesResponsePtrOutput) Criteria() MetadataDependenciesResponseArrayOutput {
	return o.ApplyT(func(v *MetadataDependenciesResponse) []MetadataDependenciesResponse {
		if v == nil {
			return nil
		}
		return v.Criteria
	}).(MetadataDependenciesResponseArrayOutput)
}

// Type of the content item we depend on
func (o MetadataDependenciesResponsePtrOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MetadataDependenciesResponse) *string {
		if v == nil {
			return nil
		}
		return v.Kind
	}).(pulumi.StringPtrOutput)
}

// Name of the content item
func (o MetadataDependenciesResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MetadataDependenciesResponse) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Operator used for list of dependencies in criteria array.
func (o MetadataDependenciesResponsePtrOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MetadataDependenciesResponse) *string {
		if v == nil {
			return nil
		}
		return v.Operator
	}).(pulumi.StringPtrOutput)
}

// Version of the the content item we depend on.  Can be blank, * or missing to indicate any version fulfills the dependency.  If version does not match our defined numeric format then an exact match is required.
func (o MetadataDependenciesResponsePtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MetadataDependenciesResponse) *string {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.StringPtrOutput)
}

type MetadataDependenciesResponseArrayOutput struct{ *pulumi.OutputState }

func (MetadataDependenciesResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MetadataDependenciesResponse)(nil)).Elem()
}

func (o MetadataDependenciesResponseArrayOutput) ToMetadataDependenciesResponseArrayOutput() MetadataDependenciesResponseArrayOutput {
	return o
}

func (o MetadataDependenciesResponseArrayOutput) ToMetadataDependenciesResponseArrayOutputWithContext(ctx context.Context) MetadataDependenciesResponseArrayOutput {
	return o
}

func (o MetadataDependenciesResponseArrayOutput) Index(i pulumi.IntInput) MetadataDependenciesResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MetadataDependenciesResponse {
		return vs[0].([]MetadataDependenciesResponse)[vs[1].(int)]
	}).(MetadataDependenciesResponseOutput)
}

// The original source of the content item, where it comes from.
type MetadataSource struct {
	// Source type of the content
	Kind string `pulumi:"kind"`
	// Name of the content source.  The repo name, solution name, LA workspace name etc.
	Name *string `pulumi:"name"`
	// ID of the content source.  The solution ID, workspace ID, etc
	SourceId *string `pulumi:"sourceId"`
}

// MetadataSourceInput is an input type that accepts MetadataSourceArgs and MetadataSourceOutput values.
// You can construct a concrete instance of `MetadataSourceInput` via:
//
//	MetadataSourceArgs{...}
type MetadataSourceInput interface {
	pulumi.Input

	ToMetadataSourceOutput() MetadataSourceOutput
	ToMetadataSourceOutputWithContext(context.Context) MetadataSourceOutput
}

// The original source of the content item, where it comes from.
type MetadataSourceArgs struct {
	// Source type of the content
	Kind pulumi.StringInput `pulumi:"kind"`
	// Name of the content source.  The repo name, solution name, LA workspace name etc.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// ID of the content source.  The solution ID, workspace ID, etc
	SourceId pulumi.StringPtrInput `pulumi:"sourceId"`
}

func (MetadataSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MetadataSource)(nil)).Elem()
}

func (i MetadataSourceArgs) ToMetadataSourceOutput() MetadataSourceOutput {
	return i.ToMetadataSourceOutputWithContext(context.Background())
}

func (i MetadataSourceArgs) ToMetadataSourceOutputWithContext(ctx context.Context) MetadataSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetadataSourceOutput)
}

func (i MetadataSourceArgs) ToMetadataSourcePtrOutput() MetadataSourcePtrOutput {
	return i.ToMetadataSourcePtrOutputWithContext(context.Background())
}

func (i MetadataSourceArgs) ToMetadataSourcePtrOutputWithContext(ctx context.Context) MetadataSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetadataSourceOutput).ToMetadataSourcePtrOutputWithContext(ctx)
}

// MetadataSourcePtrInput is an input type that accepts MetadataSourceArgs, MetadataSourcePtr and MetadataSourcePtrOutput values.
// You can construct a concrete instance of `MetadataSourcePtrInput` via:
//
//	        MetadataSourceArgs{...}
//
//	or:
//
//	        nil
type MetadataSourcePtrInput interface {
	pulumi.Input

	ToMetadataSourcePtrOutput() MetadataSourcePtrOutput
	ToMetadataSourcePtrOutputWithContext(context.Context) MetadataSourcePtrOutput
}

type metadataSourcePtrType MetadataSourceArgs

func MetadataSourcePtr(v *MetadataSourceArgs) MetadataSourcePtrInput {
	return (*metadataSourcePtrType)(v)
}

func (*metadataSourcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MetadataSource)(nil)).Elem()
}

func (i *metadataSourcePtrType) ToMetadataSourcePtrOutput() MetadataSourcePtrOutput {
	return i.ToMetadataSourcePtrOutputWithContext(context.Background())
}

func (i *metadataSourcePtrType) ToMetadataSourcePtrOutputWithContext(ctx context.Context) MetadataSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetadataSourcePtrOutput)
}

// The original source of the content item, where it comes from.
type MetadataSourceOutput struct{ *pulumi.OutputState }

func (MetadataSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MetadataSource)(nil)).Elem()
}

func (o MetadataSourceOutput) ToMetadataSourceOutput() MetadataSourceOutput {
	return o
}

func (o MetadataSourceOutput) ToMetadataSourceOutputWithContext(ctx context.Context) MetadataSourceOutput {
	return o
}

func (o MetadataSourceOutput) ToMetadataSourcePtrOutput() MetadataSourcePtrOutput {
	return o.ToMetadataSourcePtrOutputWithContext(context.Background())
}

func (o MetadataSourceOutput) ToMetadataSourcePtrOutputWithContext(ctx context.Context) MetadataSourcePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MetadataSource) *MetadataSource {
		return &v
	}).(MetadataSourcePtrOutput)
}

// Source type of the content
func (o MetadataSourceOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v MetadataSource) string { return v.Kind }).(pulumi.StringOutput)
}

// Name of the content source.  The repo name, solution name, LA workspace name etc.
func (o MetadataSourceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MetadataSource) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// ID of the content source.  The solution ID, workspace ID, etc
func (o MetadataSourceOutput) SourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MetadataSource) *string { return v.SourceId }).(pulumi.StringPtrOutput)
}

type MetadataSourcePtrOutput struct{ *pulumi.OutputState }

func (MetadataSourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MetadataSource)(nil)).Elem()
}

func (o MetadataSourcePtrOutput) ToMetadataSourcePtrOutput() MetadataSourcePtrOutput {
	return o
}

func (o MetadataSourcePtrOutput) ToMetadataSourcePtrOutputWithContext(ctx context.Context) MetadataSourcePtrOutput {
	return o
}

func (o MetadataSourcePtrOutput) Elem() MetadataSourceOutput {
	return o.ApplyT(func(v *MetadataSource) MetadataSource {
		if v != nil {
			return *v
		}
		var ret MetadataSource
		return ret
	}).(MetadataSourceOutput)
}

// Source type of the content
func (o MetadataSourcePtrOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MetadataSource) *string {
		if v == nil {
			return nil
		}
		return &v.Kind
	}).(pulumi.StringPtrOutput)
}

// Name of the content source.  The repo name, solution name, LA workspace name etc.
func (o MetadataSourcePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MetadataSource) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// ID of the content source.  The solution ID, workspace ID, etc
func (o MetadataSourcePtrOutput) SourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MetadataSource) *string {
		if v == nil {
			return nil
		}
		return v.SourceId
	}).(pulumi.StringPtrOutput)
}

// The original source of the content item, where it comes from.
type MetadataSourceResponse struct {
	// Source type of the content
	Kind string `pulumi:"kind"`
	// Name of the content source.  The repo name, solution name, LA workspace name etc.
	Name *string `pulumi:"name"`
	// ID of the content source.  The solution ID, workspace ID, etc
	SourceId *string `pulumi:"sourceId"`
}

// The original source of the content item, where it comes from.
type MetadataSourceResponseOutput struct{ *pulumi.OutputState }

func (MetadataSourceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MetadataSourceResponse)(nil)).Elem()
}

func (o MetadataSourceResponseOutput) ToMetadataSourceResponseOutput() MetadataSourceResponseOutput {
	return o
}

func (o MetadataSourceResponseOutput) ToMetadataSourceResponseOutputWithContext(ctx context.Context) MetadataSourceResponseOutput {
	return o
}

// Source type of the content
func (o MetadataSourceResponseOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v MetadataSourceResponse) string { return v.Kind }).(pulumi.StringOutput)
}

// Name of the content source.  The repo name, solution name, LA workspace name etc.
func (o MetadataSourceResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MetadataSourceResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// ID of the content source.  The solution ID, workspace ID, etc
func (o MetadataSourceResponseOutput) SourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MetadataSourceResponse) *string { return v.SourceId }).(pulumi.StringPtrOutput)
}

type MetadataSourceResponsePtrOutput struct{ *pulumi.OutputState }

func (MetadataSourceResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MetadataSourceResponse)(nil)).Elem()
}

func (o MetadataSourceResponsePtrOutput) ToMetadataSourceResponsePtrOutput() MetadataSourceResponsePtrOutput {
	return o
}

func (o MetadataSourceResponsePtrOutput) ToMetadataSourceResponsePtrOutputWithContext(ctx context.Context) MetadataSourceResponsePtrOutput {
	return o
}

func (o MetadataSourceResponsePtrOutput) Elem() MetadataSourceResponseOutput {
	return o.ApplyT(func(v *MetadataSourceResponse) MetadataSourceResponse {
		if v != nil {
			return *v
		}
		var ret MetadataSourceResponse
		return ret
	}).(MetadataSourceResponseOutput)
}

// Source type of the content
func (o MetadataSourceResponsePtrOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MetadataSourceResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Kind
	}).(pulumi.StringPtrOutput)
}

// Name of the content source.  The repo name, solution name, LA workspace name etc.
func (o MetadataSourceResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MetadataSourceResponse) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// ID of the content source.  The solution ID, workspace ID, etc
func (o MetadataSourceResponsePtrOutput) SourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MetadataSourceResponse) *string {
		if v == nil {
			return nil
		}
		return v.SourceId
	}).(pulumi.StringPtrOutput)
}

// Support information for the content item.
type MetadataSupport struct {
	// Email of support contact
	Email *string `pulumi:"email"`
	// Link for support help, like to support page to open a ticket etc.
	Link *string `pulumi:"link"`
	// Name of the support contact. Company or person.
	Name *string `pulumi:"name"`
	// Type of support for content item
	Tier string `pulumi:"tier"`
}

// MetadataSupportInput is an input type that accepts MetadataSupportArgs and MetadataSupportOutput values.
// You can construct a concrete instance of `MetadataSupportInput` via:
//
//	MetadataSupportArgs{...}
type MetadataSupportInput interface {
	pulumi.Input

	ToMetadataSupportOutput() MetadataSupportOutput
	ToMetadataSupportOutputWithContext(context.Context) MetadataSupportOutput
}

// Support information for the content item.
type MetadataSupportArgs struct {
	// Email of support contact
	Email pulumi.StringPtrInput `pulumi:"email"`
	// Link for support help, like to support page to open a ticket etc.
	Link pulumi.StringPtrInput `pulumi:"link"`
	// Name of the support contact. Company or person.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Type of support for content item
	Tier pulumi.StringInput `pulumi:"tier"`
}

func (MetadataSupportArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MetadataSupport)(nil)).Elem()
}

func (i MetadataSupportArgs) ToMetadataSupportOutput() MetadataSupportOutput {
	return i.ToMetadataSupportOutputWithContext(context.Background())
}

func (i MetadataSupportArgs) ToMetadataSupportOutputWithContext(ctx context.Context) MetadataSupportOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetadataSupportOutput)
}

func (i MetadataSupportArgs) ToMetadataSupportPtrOutput() MetadataSupportPtrOutput {
	return i.ToMetadataSupportPtrOutputWithContext(context.Background())
}

func (i MetadataSupportArgs) ToMetadataSupportPtrOutputWithContext(ctx context.Context) MetadataSupportPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetadataSupportOutput).ToMetadataSupportPtrOutputWithContext(ctx)
}

// MetadataSupportPtrInput is an input type that accepts MetadataSupportArgs, MetadataSupportPtr and MetadataSupportPtrOutput values.
// You can construct a concrete instance of `MetadataSupportPtrInput` via:
//
//	        MetadataSupportArgs{...}
//
//	or:
//
//	        nil
type MetadataSupportPtrInput interface {
	pulumi.Input

	ToMetadataSupportPtrOutput() MetadataSupportPtrOutput
	ToMetadataSupportPtrOutputWithContext(context.Context) MetadataSupportPtrOutput
}

type metadataSupportPtrType MetadataSupportArgs

func MetadataSupportPtr(v *MetadataSupportArgs) MetadataSupportPtrInput {
	return (*metadataSupportPtrType)(v)
}

func (*metadataSupportPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MetadataSupport)(nil)).Elem()
}

func (i *metadataSupportPtrType) ToMetadataSupportPtrOutput() MetadataSupportPtrOutput {
	return i.ToMetadataSupportPtrOutputWithContext(context.Background())
}

func (i *metadataSupportPtrType) ToMetadataSupportPtrOutputWithContext(ctx context.Context) MetadataSupportPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetadataSupportPtrOutput)
}

// Support information for the content item.
type MetadataSupportOutput struct{ *pulumi.OutputState }

func (MetadataSupportOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MetadataSupport)(nil)).Elem()
}

func (o MetadataSupportOutput) ToMetadataSupportOutput() MetadataSupportOutput {
	return o
}

func (o MetadataSupportOutput) ToMetadataSupportOutputWithContext(ctx context.Context) MetadataSupportOutput {
	return o
}

func (o MetadataSupportOutput) ToMetadataSupportPtrOutput() MetadataSupportPtrOutput {
	return o.ToMetadataSupportPtrOutputWithContext(context.Background())
}

func (o MetadataSupportOutput) ToMetadataSupportPtrOutputWithContext(ctx context.Context) MetadataSupportPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MetadataSupport) *MetadataSupport {
		return &v
	}).(MetadataSupportPtrOutput)
}

// Email of support contact
func (o MetadataSupportOutput) Email() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MetadataSupport) *string { return v.Email }).(pulumi.StringPtrOutput)
}

// Link for support help, like to support page to open a ticket etc.
func (o MetadataSupportOutput) Link() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MetadataSupport) *string { return v.Link }).(pulumi.StringPtrOutput)
}

// Name of the support contact. Company or person.
func (o MetadataSupportOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MetadataSupport) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Type of support for content item
func (o MetadataSupportOutput) Tier() pulumi.StringOutput {
	return o.ApplyT(func(v MetadataSupport) string { return v.Tier }).(pulumi.StringOutput)
}

type MetadataSupportPtrOutput struct{ *pulumi.OutputState }

func (MetadataSupportPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MetadataSupport)(nil)).Elem()
}

func (o MetadataSupportPtrOutput) ToMetadataSupportPtrOutput() MetadataSupportPtrOutput {
	return o
}

func (o MetadataSupportPtrOutput) ToMetadataSupportPtrOutputWithContext(ctx context.Context) MetadataSupportPtrOutput {
	return o
}

func (o MetadataSupportPtrOutput) Elem() MetadataSupportOutput {
	return o.ApplyT(func(v *MetadataSupport) MetadataSupport {
		if v != nil {
			return *v
		}
		var ret MetadataSupport
		return ret
	}).(MetadataSupportOutput)
}

// Email of support contact
func (o MetadataSupportPtrOutput) Email() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MetadataSupport) *string {
		if v == nil {
			return nil
		}
		return v.Email
	}).(pulumi.StringPtrOutput)
}

// Link for support help, like to support page to open a ticket etc.
func (o MetadataSupportPtrOutput) Link() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MetadataSupport) *string {
		if v == nil {
			return nil
		}
		return v.Link
	}).(pulumi.StringPtrOutput)
}

// Name of the support contact. Company or person.
func (o MetadataSupportPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MetadataSupport) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Type of support for content item
func (o MetadataSupportPtrOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MetadataSupport) *string {
		if v == nil {
			return nil
		}
		return &v.Tier
	}).(pulumi.StringPtrOutput)
}

// Support information for the content item.
type MetadataSupportResponse struct {
	// Email of support contact
	Email *string `pulumi:"email"`
	// Link for support help, like to support page to open a ticket etc.
	Link *string `pulumi:"link"`
	// Name of the support contact. Company or person.
	Name *string `pulumi:"name"`
	// Type of support for content item
	Tier string `pulumi:"tier"`
}

// Support information for the content item.
type MetadataSupportResponseOutput struct{ *pulumi.OutputState }

func (MetadataSupportResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MetadataSupportResponse)(nil)).Elem()
}

func (o MetadataSupportResponseOutput) ToMetadataSupportResponseOutput() MetadataSupportResponseOutput {
	return o
}

func (o MetadataSupportResponseOutput) ToMetadataSupportResponseOutputWithContext(ctx context.Context) MetadataSupportResponseOutput {
	return o
}

// Email of support contact
func (o MetadataSupportResponseOutput) Email() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MetadataSupportResponse) *string { return v.Email }).(pulumi.StringPtrOutput)
}

// Link for support help, like to support page to open a ticket etc.
func (o MetadataSupportResponseOutput) Link() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MetadataSupportResponse) *string { return v.Link }).(pulumi.StringPtrOutput)
}

// Name of the support contact. Company or person.
func (o MetadataSupportResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MetadataSupportResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Type of support for content item
func (o MetadataSupportResponseOutput) Tier() pulumi.StringOutput {
	return o.ApplyT(func(v MetadataSupportResponse) string { return v.Tier }).(pulumi.StringOutput)
}

type MetadataSupportResponsePtrOutput struct{ *pulumi.OutputState }

func (MetadataSupportResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MetadataSupportResponse)(nil)).Elem()
}

func (o MetadataSupportResponsePtrOutput) ToMetadataSupportResponsePtrOutput() MetadataSupportResponsePtrOutput {
	return o
}

func (o MetadataSupportResponsePtrOutput) ToMetadataSupportResponsePtrOutputWithContext(ctx context.Context) MetadataSupportResponsePtrOutput {
	return o
}

func (o MetadataSupportResponsePtrOutput) Elem() MetadataSupportResponseOutput {
	return o.ApplyT(func(v *MetadataSupportResponse) MetadataSupportResponse {
		if v != nil {
			return *v
		}
		var ret MetadataSupportResponse
		return ret
	}).(MetadataSupportResponseOutput)
}

// Email of support contact
func (o MetadataSupportResponsePtrOutput) Email() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MetadataSupportResponse) *string {
		if v == nil {
			return nil
		}
		return v.Email
	}).(pulumi.StringPtrOutput)
}

// Link for support help, like to support page to open a ticket etc.
func (o MetadataSupportResponsePtrOutput) Link() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MetadataSupportResponse) *string {
		if v == nil {
			return nil
		}
		return v.Link
	}).(pulumi.StringPtrOutput)
}

// Name of the support contact. Company or person.
func (o MetadataSupportResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MetadataSupportResponse) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Type of support for content item
func (o MetadataSupportResponsePtrOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MetadataSupportResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Tier
	}).(pulumi.StringPtrOutput)
}

// The available data types for Microsoft Purview Information Protection data connector.
type MicrosoftPurviewInformationProtectionConnectorDataTypes struct {
	// Logs data type.
	Logs MicrosoftPurviewInformationProtectionConnectorDataTypesLogs `pulumi:"logs"`
}

// Logs data type.
type MicrosoftPurviewInformationProtectionConnectorDataTypesLogs struct {
	// Describe whether this data type connection is enabled or not.
	State string `pulumi:"state"`
}

// The available data types for Microsoft Purview Information Protection data connector.
type MicrosoftPurviewInformationProtectionConnectorDataTypesResponse struct {
	// Logs data type.
	Logs MicrosoftPurviewInformationProtectionConnectorDataTypesResponseLogs `pulumi:"logs"`
}

// The available data types for Microsoft Purview Information Protection data connector.
type MicrosoftPurviewInformationProtectionConnectorDataTypesResponseOutput struct{ *pulumi.OutputState }

func (MicrosoftPurviewInformationProtectionConnectorDataTypesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MicrosoftPurviewInformationProtectionConnectorDataTypesResponse)(nil)).Elem()
}

func (o MicrosoftPurviewInformationProtectionConnectorDataTypesResponseOutput) ToMicrosoftPurviewInformationProtectionConnectorDataTypesResponseOutput() MicrosoftPurviewInformationProtectionConnectorDataTypesResponseOutput {
	return o
}

func (o MicrosoftPurviewInformationProtectionConnectorDataTypesResponseOutput) ToMicrosoftPurviewInformationProtectionConnectorDataTypesResponseOutputWithContext(ctx context.Context) MicrosoftPurviewInformationProtectionConnectorDataTypesResponseOutput {
	return o
}

// Logs data type.
func (o MicrosoftPurviewInformationProtectionConnectorDataTypesResponseOutput) Logs() MicrosoftPurviewInformationProtectionConnectorDataTypesResponseLogsOutput {
	return o.ApplyT(func(v MicrosoftPurviewInformationProtectionConnectorDataTypesResponse) MicrosoftPurviewInformationProtectionConnectorDataTypesResponseLogs {
		return v.Logs
	}).(MicrosoftPurviewInformationProtectionConnectorDataTypesResponseLogsOutput)
}

// Logs data type.
type MicrosoftPurviewInformationProtectionConnectorDataTypesResponseLogs struct {
	// Describe whether this data type connection is enabled or not.
	State string `pulumi:"state"`
}

// Logs data type.
type MicrosoftPurviewInformationProtectionConnectorDataTypesResponseLogsOutput struct{ *pulumi.OutputState }

func (MicrosoftPurviewInformationProtectionConnectorDataTypesResponseLogsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MicrosoftPurviewInformationProtectionConnectorDataTypesResponseLogs)(nil)).Elem()
}

func (o MicrosoftPurviewInformationProtectionConnectorDataTypesResponseLogsOutput) ToMicrosoftPurviewInformationProtectionConnectorDataTypesResponseLogsOutput() MicrosoftPurviewInformationProtectionConnectorDataTypesResponseLogsOutput {
	return o
}

func (o MicrosoftPurviewInformationProtectionConnectorDataTypesResponseLogsOutput) ToMicrosoftPurviewInformationProtectionConnectorDataTypesResponseLogsOutputWithContext(ctx context.Context) MicrosoftPurviewInformationProtectionConnectorDataTypesResponseLogsOutput {
	return o
}

// Describe whether this data type connection is enabled or not.
func (o MicrosoftPurviewInformationProtectionConnectorDataTypesResponseLogsOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v MicrosoftPurviewInformationProtectionConnectorDataTypesResponseLogs) string { return v.State }).(pulumi.StringOutput)
}

// Represents the connector's Filtered providers
type MtpFilteredProviders struct {
	// Alerts filtered providers. When filters are not applied, all alerts will stream through the MTP pipeline, still in private preview for all products EXCEPT MDA and MDI, which are in GA state.
	Alerts []string `pulumi:"alerts"`
}

// Represents the connector's Filtered providers
type MtpFilteredProvidersResponse struct {
	// Alerts filtered providers. When filters are not applied, all alerts will stream through the MTP pipeline, still in private preview for all products EXCEPT MDA and MDI, which are in GA state.
	Alerts []string `pulumi:"alerts"`
}

// Represents the connector's Filtered providers
type MtpFilteredProvidersResponseOutput struct{ *pulumi.OutputState }

func (MtpFilteredProvidersResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MtpFilteredProvidersResponse)(nil)).Elem()
}

func (o MtpFilteredProvidersResponseOutput) ToMtpFilteredProvidersResponseOutput() MtpFilteredProvidersResponseOutput {
	return o
}

func (o MtpFilteredProvidersResponseOutput) ToMtpFilteredProvidersResponseOutputWithContext(ctx context.Context) MtpFilteredProvidersResponseOutput {
	return o
}

// Alerts filtered providers. When filters are not applied, all alerts will stream through the MTP pipeline, still in private preview for all products EXCEPT MDA and MDI, which are in GA state.
func (o MtpFilteredProvidersResponseOutput) Alerts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v MtpFilteredProvidersResponse) []string { return v.Alerts }).(pulumi.StringArrayOutput)
}

type MtpFilteredProvidersResponsePtrOutput struct{ *pulumi.OutputState }

func (MtpFilteredProvidersResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MtpFilteredProvidersResponse)(nil)).Elem()
}

func (o MtpFilteredProvidersResponsePtrOutput) ToMtpFilteredProvidersResponsePtrOutput() MtpFilteredProvidersResponsePtrOutput {
	return o
}

func (o MtpFilteredProvidersResponsePtrOutput) ToMtpFilteredProvidersResponsePtrOutputWithContext(ctx context.Context) MtpFilteredProvidersResponsePtrOutput {
	return o
}

func (o MtpFilteredProvidersResponsePtrOutput) Elem() MtpFilteredProvidersResponseOutput {
	return o.ApplyT(func(v *MtpFilteredProvidersResponse) MtpFilteredProvidersResponse {
		if v != nil {
			return *v
		}
		var ret MtpFilteredProvidersResponse
		return ret
	}).(MtpFilteredProvidersResponseOutput)
}

// Alerts filtered providers. When filters are not applied, all alerts will stream through the MTP pipeline, still in private preview for all products EXCEPT MDA and MDI, which are in GA state.
func (o MtpFilteredProvidersResponsePtrOutput) Alerts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *MtpFilteredProvidersResponse) []string {
		if v == nil {
			return nil
		}
		return v.Alerts
	}).(pulumi.StringArrayOutput)
}

// The available data types for Office Microsoft Project data connector.
type Office365ProjectConnectorDataTypes struct {
	// Logs data type.
	Logs Office365ProjectConnectorDataTypesLogs `pulumi:"logs"`
}

// Logs data type.
type Office365ProjectConnectorDataTypesLogs struct {
	// Describe whether this data type connection is enabled or not.
	State string `pulumi:"state"`
}

// The available data types for Office Microsoft Project data connector.
type Office365ProjectConnectorDataTypesResponse struct {
	// Logs data type.
	Logs Office365ProjectConnectorDataTypesResponseLogs `pulumi:"logs"`
}

// The available data types for Office Microsoft Project data connector.
type Office365ProjectConnectorDataTypesResponseOutput struct{ *pulumi.OutputState }

func (Office365ProjectConnectorDataTypesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Office365ProjectConnectorDataTypesResponse)(nil)).Elem()
}

func (o Office365ProjectConnectorDataTypesResponseOutput) ToOffice365ProjectConnectorDataTypesResponseOutput() Office365ProjectConnectorDataTypesResponseOutput {
	return o
}

func (o Office365ProjectConnectorDataTypesResponseOutput) ToOffice365ProjectConnectorDataTypesResponseOutputWithContext(ctx context.Context) Office365ProjectConnectorDataTypesResponseOutput {
	return o
}

// Logs data type.
func (o Office365ProjectConnectorDataTypesResponseOutput) Logs() Office365ProjectConnectorDataTypesResponseLogsOutput {
	return o.ApplyT(func(v Office365ProjectConnectorDataTypesResponse) Office365ProjectConnectorDataTypesResponseLogs {
		return v.Logs
	}).(Office365ProjectConnectorDataTypesResponseLogsOutput)
}

// Logs data type.
type Office365ProjectConnectorDataTypesResponseLogs struct {
	// Describe whether this data type connection is enabled or not.
	State string `pulumi:"state"`
}

// Logs data type.
type Office365ProjectConnectorDataTypesResponseLogsOutput struct{ *pulumi.OutputState }

func (Office365ProjectConnectorDataTypesResponseLogsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Office365ProjectConnectorDataTypesResponseLogs)(nil)).Elem()
}

func (o Office365ProjectConnectorDataTypesResponseLogsOutput) ToOffice365ProjectConnectorDataTypesResponseLogsOutput() Office365ProjectConnectorDataTypesResponseLogsOutput {
	return o
}

func (o Office365ProjectConnectorDataTypesResponseLogsOutput) ToOffice365ProjectConnectorDataTypesResponseLogsOutputWithContext(ctx context.Context) Office365ProjectConnectorDataTypesResponseLogsOutput {
	return o
}

// Describe whether this data type connection is enabled or not.
func (o Office365ProjectConnectorDataTypesResponseLogsOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v Office365ProjectConnectorDataTypesResponseLogs) string { return v.State }).(pulumi.StringOutput)
}

// The available data types for office data connector.
type OfficeDataConnectorDataTypes struct {
	// Exchange data type connection.
	Exchange OfficeDataConnectorDataTypesExchange `pulumi:"exchange"`
	// SharePoint data type connection.
	SharePoint OfficeDataConnectorDataTypesSharePoint `pulumi:"sharePoint"`
	// Teams data type connection.
	Teams OfficeDataConnectorDataTypesTeams `pulumi:"teams"`
}

// Exchange data type connection.
type OfficeDataConnectorDataTypesExchange struct {
	// Describe whether this data type connection is enabled or not.
	State string `pulumi:"state"`
}

// The available data types for office data connector.
type OfficeDataConnectorDataTypesResponse struct {
	// Exchange data type connection.
	Exchange OfficeDataConnectorDataTypesResponseExchange `pulumi:"exchange"`
	// SharePoint data type connection.
	SharePoint OfficeDataConnectorDataTypesResponseSharePoint `pulumi:"sharePoint"`
	// Teams data type connection.
	Teams OfficeDataConnectorDataTypesResponseTeams `pulumi:"teams"`
}

// The available data types for office data connector.
type OfficeDataConnectorDataTypesResponseOutput struct{ *pulumi.OutputState }

func (OfficeDataConnectorDataTypesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OfficeDataConnectorDataTypesResponse)(nil)).Elem()
}

func (o OfficeDataConnectorDataTypesResponseOutput) ToOfficeDataConnectorDataTypesResponseOutput() OfficeDataConnectorDataTypesResponseOutput {
	return o
}

func (o OfficeDataConnectorDataTypesResponseOutput) ToOfficeDataConnectorDataTypesResponseOutputWithContext(ctx context.Context) OfficeDataConnectorDataTypesResponseOutput {
	return o
}

// Exchange data type connection.
func (o OfficeDataConnectorDataTypesResponseOutput) Exchange() OfficeDataConnectorDataTypesResponseExchangeOutput {
	return o.ApplyT(func(v OfficeDataConnectorDataTypesResponse) OfficeDataConnectorDataTypesResponseExchange {
		return v.Exchange
	}).(OfficeDataConnectorDataTypesResponseExchangeOutput)
}

// SharePoint data type connection.
func (o OfficeDataConnectorDataTypesResponseOutput) SharePoint() OfficeDataConnectorDataTypesResponseSharePointOutput {
	return o.ApplyT(func(v OfficeDataConnectorDataTypesResponse) OfficeDataConnectorDataTypesResponseSharePoint {
		return v.SharePoint
	}).(OfficeDataConnectorDataTypesResponseSharePointOutput)
}

// Teams data type connection.
func (o OfficeDataConnectorDataTypesResponseOutput) Teams() OfficeDataConnectorDataTypesResponseTeamsOutput {
	return o.ApplyT(func(v OfficeDataConnectorDataTypesResponse) OfficeDataConnectorDataTypesResponseTeams { return v.Teams }).(OfficeDataConnectorDataTypesResponseTeamsOutput)
}

// Exchange data type connection.
type OfficeDataConnectorDataTypesResponseExchange struct {
	// Describe whether this data type connection is enabled or not.
	State string `pulumi:"state"`
}

// Exchange data type connection.
type OfficeDataConnectorDataTypesResponseExchangeOutput struct{ *pulumi.OutputState }

func (OfficeDataConnectorDataTypesResponseExchangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OfficeDataConnectorDataTypesResponseExchange)(nil)).Elem()
}

func (o OfficeDataConnectorDataTypesResponseExchangeOutput) ToOfficeDataConnectorDataTypesResponseExchangeOutput() OfficeDataConnectorDataTypesResponseExchangeOutput {
	return o
}

func (o OfficeDataConnectorDataTypesResponseExchangeOutput) ToOfficeDataConnectorDataTypesResponseExchangeOutputWithContext(ctx context.Context) OfficeDataConnectorDataTypesResponseExchangeOutput {
	return o
}

// Describe whether this data type connection is enabled or not.
func (o OfficeDataConnectorDataTypesResponseExchangeOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v OfficeDataConnectorDataTypesResponseExchange) string { return v.State }).(pulumi.StringOutput)
}

// SharePoint data type connection.
type OfficeDataConnectorDataTypesResponseSharePoint struct {
	// Describe whether this data type connection is enabled or not.
	State string `pulumi:"state"`
}

// SharePoint data type connection.
type OfficeDataConnectorDataTypesResponseSharePointOutput struct{ *pulumi.OutputState }

func (OfficeDataConnectorDataTypesResponseSharePointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OfficeDataConnectorDataTypesResponseSharePoint)(nil)).Elem()
}

func (o OfficeDataConnectorDataTypesResponseSharePointOutput) ToOfficeDataConnectorDataTypesResponseSharePointOutput() OfficeDataConnectorDataTypesResponseSharePointOutput {
	return o
}

func (o OfficeDataConnectorDataTypesResponseSharePointOutput) ToOfficeDataConnectorDataTypesResponseSharePointOutputWithContext(ctx context.Context) OfficeDataConnectorDataTypesResponseSharePointOutput {
	return o
}

// Describe whether this data type connection is enabled or not.
func (o OfficeDataConnectorDataTypesResponseSharePointOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v OfficeDataConnectorDataTypesResponseSharePoint) string { return v.State }).(pulumi.StringOutput)
}

// Teams data type connection.
type OfficeDataConnectorDataTypesResponseTeams struct {
	// Describe whether this data type connection is enabled or not.
	State string `pulumi:"state"`
}

// Teams data type connection.
type OfficeDataConnectorDataTypesResponseTeamsOutput struct{ *pulumi.OutputState }

func (OfficeDataConnectorDataTypesResponseTeamsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OfficeDataConnectorDataTypesResponseTeams)(nil)).Elem()
}

func (o OfficeDataConnectorDataTypesResponseTeamsOutput) ToOfficeDataConnectorDataTypesResponseTeamsOutput() OfficeDataConnectorDataTypesResponseTeamsOutput {
	return o
}

func (o OfficeDataConnectorDataTypesResponseTeamsOutput) ToOfficeDataConnectorDataTypesResponseTeamsOutputWithContext(ctx context.Context) OfficeDataConnectorDataTypesResponseTeamsOutput {
	return o
}

// Describe whether this data type connection is enabled or not.
func (o OfficeDataConnectorDataTypesResponseTeamsOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v OfficeDataConnectorDataTypesResponseTeams) string { return v.State }).(pulumi.StringOutput)
}

// SharePoint data type connection.
type OfficeDataConnectorDataTypesSharePoint struct {
	// Describe whether this data type connection is enabled or not.
	State string `pulumi:"state"`
}

// Teams data type connection.
type OfficeDataConnectorDataTypesTeams struct {
	// Describe whether this data type connection is enabled or not.
	State string `pulumi:"state"`
}

// The available data types for Office Microsoft PowerBI data connector.
type OfficePowerBIConnectorDataTypes struct {
	// Logs data type.
	Logs OfficePowerBIConnectorDataTypesLogs `pulumi:"logs"`
}

// Logs data type.
type OfficePowerBIConnectorDataTypesLogs struct {
	// Describe whether this data type connection is enabled or not.
	State string `pulumi:"state"`
}

// The available data types for Office Microsoft PowerBI data connector.
type OfficePowerBIConnectorDataTypesResponse struct {
	// Logs data type.
	Logs OfficePowerBIConnectorDataTypesResponseLogs `pulumi:"logs"`
}

// The available data types for Office Microsoft PowerBI data connector.
type OfficePowerBIConnectorDataTypesResponseOutput struct{ *pulumi.OutputState }

func (OfficePowerBIConnectorDataTypesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OfficePowerBIConnectorDataTypesResponse)(nil)).Elem()
}

func (o OfficePowerBIConnectorDataTypesResponseOutput) ToOfficePowerBIConnectorDataTypesResponseOutput() OfficePowerBIConnectorDataTypesResponseOutput {
	return o
}

func (o OfficePowerBIConnectorDataTypesResponseOutput) ToOfficePowerBIConnectorDataTypesResponseOutputWithContext(ctx context.Context) OfficePowerBIConnectorDataTypesResponseOutput {
	return o
}

// Logs data type.
func (o OfficePowerBIConnectorDataTypesResponseOutput) Logs() OfficePowerBIConnectorDataTypesResponseLogsOutput {
	return o.ApplyT(func(v OfficePowerBIConnectorDataTypesResponse) OfficePowerBIConnectorDataTypesResponseLogs {
		return v.Logs
	}).(OfficePowerBIConnectorDataTypesResponseLogsOutput)
}

// Logs data type.
type OfficePowerBIConnectorDataTypesResponseLogs struct {
	// Describe whether this data type connection is enabled or not.
	State string `pulumi:"state"`
}

// Logs data type.
type OfficePowerBIConnectorDataTypesResponseLogsOutput struct{ *pulumi.OutputState }

func (OfficePowerBIConnectorDataTypesResponseLogsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OfficePowerBIConnectorDataTypesResponseLogs)(nil)).Elem()
}

func (o OfficePowerBIConnectorDataTypesResponseLogsOutput) ToOfficePowerBIConnectorDataTypesResponseLogsOutput() OfficePowerBIConnectorDataTypesResponseLogsOutput {
	return o
}

func (o OfficePowerBIConnectorDataTypesResponseLogsOutput) ToOfficePowerBIConnectorDataTypesResponseLogsOutputWithContext(ctx context.Context) OfficePowerBIConnectorDataTypesResponseLogsOutput {
	return o
}

// Describe whether this data type connection is enabled or not.
func (o OfficePowerBIConnectorDataTypesResponseLogsOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v OfficePowerBIConnectorDataTypesResponseLogs) string { return v.State }).(pulumi.StringOutput)
}

// Permissions required for the connector
type Permissions struct {
	// Customs permissions required for the connector
	Customs []PermissionsCustoms `pulumi:"customs"`
	// Resource provider permissions required for the connector
	ResourceProvider []PermissionsResourceProvider `pulumi:"resourceProvider"`
}

type PermissionsCustoms struct {
	// Customs permissions description
	Description *string `pulumi:"description"`
	// Customs permissions name
	Name *string `pulumi:"name"`
}

type PermissionsResourceProvider struct {
	// Permission description text
	PermissionsDisplayText *string `pulumi:"permissionsDisplayText"`
	// Provider name
	Provider *string `pulumi:"provider"`
	// Permission provider display name
	ProviderDisplayName *string `pulumi:"providerDisplayName"`
	// Required permissions for the connector
	RequiredPermissions *RequiredPermissions `pulumi:"requiredPermissions"`
	// Permission provider scope
	Scope *string `pulumi:"scope"`
}

// Permissions required for the connector
type PermissionsResponse struct {
	// Customs permissions required for the connector
	Customs []PermissionsResponseCustoms `pulumi:"customs"`
	// Resource provider permissions required for the connector
	ResourceProvider []PermissionsResponseResourceProvider `pulumi:"resourceProvider"`
}

// Permissions required for the connector
type PermissionsResponseOutput struct{ *pulumi.OutputState }

func (PermissionsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PermissionsResponse)(nil)).Elem()
}

func (o PermissionsResponseOutput) ToPermissionsResponseOutput() PermissionsResponseOutput {
	return o
}

func (o PermissionsResponseOutput) ToPermissionsResponseOutputWithContext(ctx context.Context) PermissionsResponseOutput {
	return o
}

// Customs permissions required for the connector
func (o PermissionsResponseOutput) Customs() PermissionsResponseCustomsArrayOutput {
	return o.ApplyT(func(v PermissionsResponse) []PermissionsResponseCustoms { return v.Customs }).(PermissionsResponseCustomsArrayOutput)
}

// Resource provider permissions required for the connector
func (o PermissionsResponseOutput) ResourceProvider() PermissionsResponseResourceProviderArrayOutput {
	return o.ApplyT(func(v PermissionsResponse) []PermissionsResponseResourceProvider { return v.ResourceProvider }).(PermissionsResponseResourceProviderArrayOutput)
}

type PermissionsResponsePtrOutput struct{ *pulumi.OutputState }

func (PermissionsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PermissionsResponse)(nil)).Elem()
}

func (o PermissionsResponsePtrOutput) ToPermissionsResponsePtrOutput() PermissionsResponsePtrOutput {
	return o
}

func (o PermissionsResponsePtrOutput) ToPermissionsResponsePtrOutputWithContext(ctx context.Context) PermissionsResponsePtrOutput {
	return o
}

func (o PermissionsResponsePtrOutput) Elem() PermissionsResponseOutput {
	return o.ApplyT(func(v *PermissionsResponse) PermissionsResponse {
		if v != nil {
			return *v
		}
		var ret PermissionsResponse
		return ret
	}).(PermissionsResponseOutput)
}

// Customs permissions required for the connector
func (o PermissionsResponsePtrOutput) Customs() PermissionsResponseCustomsArrayOutput {
	return o.ApplyT(func(v *PermissionsResponse) []PermissionsResponseCustoms {
		if v == nil {
			return nil
		}
		return v.Customs
	}).(PermissionsResponseCustomsArrayOutput)
}

// Resource provider permissions required for the connector
func (o PermissionsResponsePtrOutput) ResourceProvider() PermissionsResponseResourceProviderArrayOutput {
	return o.ApplyT(func(v *PermissionsResponse) []PermissionsResponseResourceProvider {
		if v == nil {
			return nil
		}
		return v.ResourceProvider
	}).(PermissionsResponseResourceProviderArrayOutput)
}

type PermissionsResponseCustoms struct {
	// Customs permissions description
	Description *string `pulumi:"description"`
	// Customs permissions name
	Name *string `pulumi:"name"`
}

type PermissionsResponseCustomsOutput struct{ *pulumi.OutputState }

func (PermissionsResponseCustomsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PermissionsResponseCustoms)(nil)).Elem()
}

func (o PermissionsResponseCustomsOutput) ToPermissionsResponseCustomsOutput() PermissionsResponseCustomsOutput {
	return o
}

func (o PermissionsResponseCustomsOutput) ToPermissionsResponseCustomsOutputWithContext(ctx context.Context) PermissionsResponseCustomsOutput {
	return o
}

// Customs permissions description
func (o PermissionsResponseCustomsOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PermissionsResponseCustoms) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Customs permissions name
func (o PermissionsResponseCustomsOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PermissionsResponseCustoms) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type PermissionsResponseCustomsArrayOutput struct{ *pulumi.OutputState }

func (PermissionsResponseCustomsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PermissionsResponseCustoms)(nil)).Elem()
}

func (o PermissionsResponseCustomsArrayOutput) ToPermissionsResponseCustomsArrayOutput() PermissionsResponseCustomsArrayOutput {
	return o
}

func (o PermissionsResponseCustomsArrayOutput) ToPermissionsResponseCustomsArrayOutputWithContext(ctx context.Context) PermissionsResponseCustomsArrayOutput {
	return o
}

func (o PermissionsResponseCustomsArrayOutput) Index(i pulumi.IntInput) PermissionsResponseCustomsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PermissionsResponseCustoms {
		return vs[0].([]PermissionsResponseCustoms)[vs[1].(int)]
	}).(PermissionsResponseCustomsOutput)
}

type PermissionsResponseResourceProvider struct {
	// Permission description text
	PermissionsDisplayText *string `pulumi:"permissionsDisplayText"`
	// Provider name
	Provider *string `pulumi:"provider"`
	// Permission provider display name
	ProviderDisplayName *string `pulumi:"providerDisplayName"`
	// Required permissions for the connector
	RequiredPermissions *RequiredPermissionsResponse `pulumi:"requiredPermissions"`
	// Permission provider scope
	Scope *string `pulumi:"scope"`
}

type PermissionsResponseResourceProviderOutput struct{ *pulumi.OutputState }

func (PermissionsResponseResourceProviderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PermissionsResponseResourceProvider)(nil)).Elem()
}

func (o PermissionsResponseResourceProviderOutput) ToPermissionsResponseResourceProviderOutput() PermissionsResponseResourceProviderOutput {
	return o
}

func (o PermissionsResponseResourceProviderOutput) ToPermissionsResponseResourceProviderOutputWithContext(ctx context.Context) PermissionsResponseResourceProviderOutput {
	return o
}

// Permission description text
func (o PermissionsResponseResourceProviderOutput) PermissionsDisplayText() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PermissionsResponseResourceProvider) *string { return v.PermissionsDisplayText }).(pulumi.StringPtrOutput)
}

// Provider name
func (o PermissionsResponseResourceProviderOutput) Provider() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PermissionsResponseResourceProvider) *string { return v.Provider }).(pulumi.StringPtrOutput)
}

// Permission provider display name
func (o PermissionsResponseResourceProviderOutput) ProviderDisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PermissionsResponseResourceProvider) *string { return v.ProviderDisplayName }).(pulumi.StringPtrOutput)
}

// Required permissions for the connector
func (o PermissionsResponseResourceProviderOutput) RequiredPermissions() RequiredPermissionsResponsePtrOutput {
	return o.ApplyT(func(v PermissionsResponseResourceProvider) *RequiredPermissionsResponse { return v.RequiredPermissions }).(RequiredPermissionsResponsePtrOutput)
}

// Permission provider scope
func (o PermissionsResponseResourceProviderOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PermissionsResponseResourceProvider) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

type PermissionsResponseResourceProviderArrayOutput struct{ *pulumi.OutputState }

func (PermissionsResponseResourceProviderArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PermissionsResponseResourceProvider)(nil)).Elem()
}

func (o PermissionsResponseResourceProviderArrayOutput) ToPermissionsResponseResourceProviderArrayOutput() PermissionsResponseResourceProviderArrayOutput {
	return o
}

func (o PermissionsResponseResourceProviderArrayOutput) ToPermissionsResponseResourceProviderArrayOutputWithContext(ctx context.Context) PermissionsResponseResourceProviderArrayOutput {
	return o
}

func (o PermissionsResponseResourceProviderArrayOutput) Index(i pulumi.IntInput) PermissionsResponseResourceProviderOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PermissionsResponseResourceProvider {
		return vs[0].([]PermissionsResponseResourceProvider)[vs[1].(int)]
	}).(PermissionsResponseResourceProviderOutput)
}

// Represents a repository.
type RepoResponse struct {
	// Array of branches.
	Branches []string `pulumi:"branches"`
	// The name of the repository.
	FullName *string `pulumi:"fullName"`
	// The url to access the repository.
	Url *string `pulumi:"url"`
}

// Represents a repository.
type RepoResponseOutput struct{ *pulumi.OutputState }

func (RepoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RepoResponse)(nil)).Elem()
}

func (o RepoResponseOutput) ToRepoResponseOutput() RepoResponseOutput {
	return o
}

func (o RepoResponseOutput) ToRepoResponseOutputWithContext(ctx context.Context) RepoResponseOutput {
	return o
}

// Array of branches.
func (o RepoResponseOutput) Branches() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RepoResponse) []string { return v.Branches }).(pulumi.StringArrayOutput)
}

// The name of the repository.
func (o RepoResponseOutput) FullName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RepoResponse) *string { return v.FullName }).(pulumi.StringPtrOutput)
}

// The url to access the repository.
func (o RepoResponseOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RepoResponse) *string { return v.Url }).(pulumi.StringPtrOutput)
}

type RepoResponseArrayOutput struct{ *pulumi.OutputState }

func (RepoResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RepoResponse)(nil)).Elem()
}

func (o RepoResponseArrayOutput) ToRepoResponseArrayOutput() RepoResponseArrayOutput {
	return o
}

func (o RepoResponseArrayOutput) ToRepoResponseArrayOutputWithContext(ctx context.Context) RepoResponseArrayOutput {
	return o
}

func (o RepoResponseArrayOutput) Index(i pulumi.IntInput) RepoResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RepoResponse {
		return vs[0].([]RepoResponse)[vs[1].(int)]
	}).(RepoResponseOutput)
}

// Required permissions for the connector
type RequiredPermissions struct {
	// action permission
	Action *bool `pulumi:"action"`
	// delete permission
	Delete *bool `pulumi:"delete"`
	// read permission
	Read *bool `pulumi:"read"`
	// write permission
	Write *bool `pulumi:"write"`
}

// Required permissions for the connector
type RequiredPermissionsResponse struct {
	// action permission
	Action *bool `pulumi:"action"`
	// delete permission
	Delete *bool `pulumi:"delete"`
	// read permission
	Read *bool `pulumi:"read"`
	// write permission
	Write *bool `pulumi:"write"`
}

// Required permissions for the connector
type RequiredPermissionsResponseOutput struct{ *pulumi.OutputState }

func (RequiredPermissionsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RequiredPermissionsResponse)(nil)).Elem()
}

func (o RequiredPermissionsResponseOutput) ToRequiredPermissionsResponseOutput() RequiredPermissionsResponseOutput {
	return o
}

func (o RequiredPermissionsResponseOutput) ToRequiredPermissionsResponseOutputWithContext(ctx context.Context) RequiredPermissionsResponseOutput {
	return o
}

// action permission
func (o RequiredPermissionsResponseOutput) Action() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RequiredPermissionsResponse) *bool { return v.Action }).(pulumi.BoolPtrOutput)
}

// delete permission
func (o RequiredPermissionsResponseOutput) Delete() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RequiredPermissionsResponse) *bool { return v.Delete }).(pulumi.BoolPtrOutput)
}

// read permission
func (o RequiredPermissionsResponseOutput) Read() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RequiredPermissionsResponse) *bool { return v.Read }).(pulumi.BoolPtrOutput)
}

// write permission
func (o RequiredPermissionsResponseOutput) Write() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RequiredPermissionsResponse) *bool { return v.Write }).(pulumi.BoolPtrOutput)
}

type RequiredPermissionsResponsePtrOutput struct{ *pulumi.OutputState }

func (RequiredPermissionsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RequiredPermissionsResponse)(nil)).Elem()
}

func (o RequiredPermissionsResponsePtrOutput) ToRequiredPermissionsResponsePtrOutput() RequiredPermissionsResponsePtrOutput {
	return o
}

func (o RequiredPermissionsResponsePtrOutput) ToRequiredPermissionsResponsePtrOutputWithContext(ctx context.Context) RequiredPermissionsResponsePtrOutput {
	return o
}

func (o RequiredPermissionsResponsePtrOutput) Elem() RequiredPermissionsResponseOutput {
	return o.ApplyT(func(v *RequiredPermissionsResponse) RequiredPermissionsResponse {
		if v != nil {
			return *v
		}
		var ret RequiredPermissionsResponse
		return ret
	}).(RequiredPermissionsResponseOutput)
}

// action permission
func (o RequiredPermissionsResponsePtrOutput) Action() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *RequiredPermissionsResponse) *bool {
		if v == nil {
			return nil
		}
		return v.Action
	}).(pulumi.BoolPtrOutput)
}

// delete permission
func (o RequiredPermissionsResponsePtrOutput) Delete() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *RequiredPermissionsResponse) *bool {
		if v == nil {
			return nil
		}
		return v.Delete
	}).(pulumi.BoolPtrOutput)
}

// read permission
func (o RequiredPermissionsResponsePtrOutput) Read() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *RequiredPermissionsResponse) *bool {
		if v == nil {
			return nil
		}
		return v.Read
	}).(pulumi.BoolPtrOutput)
}

// write permission
func (o RequiredPermissionsResponsePtrOutput) Write() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *RequiredPermissionsResponse) *bool {
		if v == nil {
			return nil
		}
		return v.Write
	}).(pulumi.BoolPtrOutput)
}

// Represents security alert timeline item.
type SecurityAlertTimelineItemResponse struct {
	// The name of the alert type.
	AlertType string `pulumi:"alertType"`
	// The alert azure resource id.
	AzureResourceId string `pulumi:"azureResourceId"`
	// The alert description.
	Description *string `pulumi:"description"`
	// The alert name.
	DisplayName string `pulumi:"displayName"`
	// The alert end time.
	EndTimeUtc string `pulumi:"endTimeUtc"`
	// The intent of the alert.
	Intent string `pulumi:"intent"`
	// The entity query kind
	// Expected value is 'SecurityAlert'.
	Kind string `pulumi:"kind"`
	// The alert product name.
	ProductName *string `pulumi:"productName"`
	// The alert severity.
	Severity string `pulumi:"severity"`
	// The alert start time.
	StartTimeUtc string `pulumi:"startTimeUtc"`
	// The techniques of the alert.
	Techniques []string `pulumi:"techniques"`
	// The alert generated time.
	TimeGenerated string `pulumi:"timeGenerated"`
}

// security ml analytics settings data sources
type SecurityMLAnalyticsSettingsDataSource struct {
	// The connector id that provides the following data types
	ConnectorId *string `pulumi:"connectorId"`
	// The data types used by the security ml analytics settings
	DataTypes []string `pulumi:"dataTypes"`
}

// security ml analytics settings data sources
type SecurityMLAnalyticsSettingsDataSourceResponse struct {
	// The connector id that provides the following data types
	ConnectorId *string `pulumi:"connectorId"`
	// The data types used by the security ml analytics settings
	DataTypes []string `pulumi:"dataTypes"`
}

// security ml analytics settings data sources
type SecurityMLAnalyticsSettingsDataSourceResponseOutput struct{ *pulumi.OutputState }

func (SecurityMLAnalyticsSettingsDataSourceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityMLAnalyticsSettingsDataSourceResponse)(nil)).Elem()
}

func (o SecurityMLAnalyticsSettingsDataSourceResponseOutput) ToSecurityMLAnalyticsSettingsDataSourceResponseOutput() SecurityMLAnalyticsSettingsDataSourceResponseOutput {
	return o
}

func (o SecurityMLAnalyticsSettingsDataSourceResponseOutput) ToSecurityMLAnalyticsSettingsDataSourceResponseOutputWithContext(ctx context.Context) SecurityMLAnalyticsSettingsDataSourceResponseOutput {
	return o
}

// The connector id that provides the following data types
func (o SecurityMLAnalyticsSettingsDataSourceResponseOutput) ConnectorId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityMLAnalyticsSettingsDataSourceResponse) *string { return v.ConnectorId }).(pulumi.StringPtrOutput)
}

// The data types used by the security ml analytics settings
func (o SecurityMLAnalyticsSettingsDataSourceResponseOutput) DataTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecurityMLAnalyticsSettingsDataSourceResponse) []string { return v.DataTypes }).(pulumi.StringArrayOutput)
}

type SecurityMLAnalyticsSettingsDataSourceResponseArrayOutput struct{ *pulumi.OutputState }

func (SecurityMLAnalyticsSettingsDataSourceResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecurityMLAnalyticsSettingsDataSourceResponse)(nil)).Elem()
}

func (o SecurityMLAnalyticsSettingsDataSourceResponseArrayOutput) ToSecurityMLAnalyticsSettingsDataSourceResponseArrayOutput() SecurityMLAnalyticsSettingsDataSourceResponseArrayOutput {
	return o
}

func (o SecurityMLAnalyticsSettingsDataSourceResponseArrayOutput) ToSecurityMLAnalyticsSettingsDataSourceResponseArrayOutputWithContext(ctx context.Context) SecurityMLAnalyticsSettingsDataSourceResponseArrayOutput {
	return o
}

func (o SecurityMLAnalyticsSettingsDataSourceResponseArrayOutput) Index(i pulumi.IntInput) SecurityMLAnalyticsSettingsDataSourceResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SecurityMLAnalyticsSettingsDataSourceResponse {
		return vs[0].([]SecurityMLAnalyticsSettingsDataSourceResponse)[vs[1].(int)]
	}).(SecurityMLAnalyticsSettingsDataSourceResponseOutput)
}

// A single sentinel entity mapping
type SentinelEntityMapping struct {
	// the column name to be mapped to the SentinelEntities
	ColumnName *string `pulumi:"columnName"`
}

// A single sentinel entity mapping
type SentinelEntityMappingResponse struct {
	// the column name to be mapped to the SentinelEntities
	ColumnName *string `pulumi:"columnName"`
}

// A single sentinel entity mapping
type SentinelEntityMappingResponseOutput struct{ *pulumi.OutputState }

func (SentinelEntityMappingResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SentinelEntityMappingResponse)(nil)).Elem()
}

func (o SentinelEntityMappingResponseOutput) ToSentinelEntityMappingResponseOutput() SentinelEntityMappingResponseOutput {
	return o
}

func (o SentinelEntityMappingResponseOutput) ToSentinelEntityMappingResponseOutputWithContext(ctx context.Context) SentinelEntityMappingResponseOutput {
	return o
}

// the column name to be mapped to the SentinelEntities
func (o SentinelEntityMappingResponseOutput) ColumnName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SentinelEntityMappingResponse) *string { return v.ColumnName }).(pulumi.StringPtrOutput)
}

type SentinelEntityMappingResponseArrayOutput struct{ *pulumi.OutputState }

func (SentinelEntityMappingResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SentinelEntityMappingResponse)(nil)).Elem()
}

func (o SentinelEntityMappingResponseArrayOutput) ToSentinelEntityMappingResponseArrayOutput() SentinelEntityMappingResponseArrayOutput {
	return o
}

func (o SentinelEntityMappingResponseArrayOutput) ToSentinelEntityMappingResponseArrayOutputWithContext(ctx context.Context) SentinelEntityMappingResponseArrayOutput {
	return o
}

func (o SentinelEntityMappingResponseArrayOutput) Index(i pulumi.IntInput) SentinelEntityMappingResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SentinelEntityMappingResponse {
		return vs[0].([]SentinelEntityMappingResponse)[vs[1].(int)]
	}).(SentinelEntityMappingResponseOutput)
}

// Metadata pertaining to creation and last modification of the resource.
type SystemDataResponse struct {
	// The timestamp of resource creation (UTC).
	CreatedAt *string `pulumi:"createdAt"`
	// The identity that created the resource.
	CreatedBy *string `pulumi:"createdBy"`
	// The type of identity that created the resource.
	CreatedByType *string `pulumi:"createdByType"`
	// The timestamp of resource last modification (UTC)
	LastModifiedAt *string `pulumi:"lastModifiedAt"`
	// The identity that last modified the resource.
	LastModifiedBy *string `pulumi:"lastModifiedBy"`
	// The type of identity that last modified the resource.
	LastModifiedByType *string `pulumi:"lastModifiedByType"`
}

// Metadata pertaining to creation and last modification of the resource.
type SystemDataResponseOutput struct{ *pulumi.OutputState }

func (SystemDataResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemDataResponse)(nil)).Elem()
}

func (o SystemDataResponseOutput) ToSystemDataResponseOutput() SystemDataResponseOutput {
	return o
}

func (o SystemDataResponseOutput) ToSystemDataResponseOutputWithContext(ctx context.Context) SystemDataResponseOutput {
	return o
}

// The timestamp of resource creation (UTC).
func (o SystemDataResponseOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedAt }).(pulumi.StringPtrOutput)
}

// The identity that created the resource.
func (o SystemDataResponseOutput) CreatedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedBy }).(pulumi.StringPtrOutput)
}

// The type of identity that created the resource.
func (o SystemDataResponseOutput) CreatedByType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedByType }).(pulumi.StringPtrOutput)
}

// The timestamp of resource last modification (UTC)
func (o SystemDataResponseOutput) LastModifiedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedAt }).(pulumi.StringPtrOutput)
}

// The identity that last modified the resource.
func (o SystemDataResponseOutput) LastModifiedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedBy }).(pulumi.StringPtrOutput)
}

// The type of identity that last modified the resource.
func (o SystemDataResponseOutput) LastModifiedByType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedByType }).(pulumi.StringPtrOutput)
}

// The available data types for TI (Threat Intelligence) data connector.
type TIDataConnectorDataTypes struct {
	// Data type for indicators connection.
	Indicators TIDataConnectorDataTypesIndicators `pulumi:"indicators"`
}

// Data type for indicators connection.
type TIDataConnectorDataTypesIndicators struct {
	// Describe whether this data type connection is enabled or not.
	State string `pulumi:"state"`
}

// The available data types for TI (Threat Intelligence) data connector.
type TIDataConnectorDataTypesResponse struct {
	// Data type for indicators connection.
	Indicators TIDataConnectorDataTypesResponseIndicators `pulumi:"indicators"`
}

// The available data types for TI (Threat Intelligence) data connector.
type TIDataConnectorDataTypesResponseOutput struct{ *pulumi.OutputState }

func (TIDataConnectorDataTypesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TIDataConnectorDataTypesResponse)(nil)).Elem()
}

func (o TIDataConnectorDataTypesResponseOutput) ToTIDataConnectorDataTypesResponseOutput() TIDataConnectorDataTypesResponseOutput {
	return o
}

func (o TIDataConnectorDataTypesResponseOutput) ToTIDataConnectorDataTypesResponseOutputWithContext(ctx context.Context) TIDataConnectorDataTypesResponseOutput {
	return o
}

// Data type for indicators connection.
func (o TIDataConnectorDataTypesResponseOutput) Indicators() TIDataConnectorDataTypesResponseIndicatorsOutput {
	return o.ApplyT(func(v TIDataConnectorDataTypesResponse) TIDataConnectorDataTypesResponseIndicators {
		return v.Indicators
	}).(TIDataConnectorDataTypesResponseIndicatorsOutput)
}

// Data type for indicators connection.
type TIDataConnectorDataTypesResponseIndicators struct {
	// Describe whether this data type connection is enabled or not.
	State string `pulumi:"state"`
}

// Data type for indicators connection.
type TIDataConnectorDataTypesResponseIndicatorsOutput struct{ *pulumi.OutputState }

func (TIDataConnectorDataTypesResponseIndicatorsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TIDataConnectorDataTypesResponseIndicators)(nil)).Elem()
}

func (o TIDataConnectorDataTypesResponseIndicatorsOutput) ToTIDataConnectorDataTypesResponseIndicatorsOutput() TIDataConnectorDataTypesResponseIndicatorsOutput {
	return o
}

func (o TIDataConnectorDataTypesResponseIndicatorsOutput) ToTIDataConnectorDataTypesResponseIndicatorsOutputWithContext(ctx context.Context) TIDataConnectorDataTypesResponseIndicatorsOutput {
	return o
}

// Describe whether this data type connection is enabled or not.
func (o TIDataConnectorDataTypesResponseIndicatorsOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v TIDataConnectorDataTypesResponseIndicators) string { return v.State }).(pulumi.StringOutput)
}

// Describes team information
type TeamInformationResponse struct {
	// The description of the team
	Description string `pulumi:"description"`
	// The name of the team
	Name string `pulumi:"name"`
	// The primary channel URL of the team
	PrimaryChannelUrl string `pulumi:"primaryChannelUrl"`
	// The time the team was created
	TeamCreationTimeUtc string `pulumi:"teamCreationTimeUtc"`
	// Team ID
	TeamId string `pulumi:"teamId"`
}

// Describes team information
type TeamInformationResponseOutput struct{ *pulumi.OutputState }

func (TeamInformationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TeamInformationResponse)(nil)).Elem()
}

func (o TeamInformationResponseOutput) ToTeamInformationResponseOutput() TeamInformationResponseOutput {
	return o
}

func (o TeamInformationResponseOutput) ToTeamInformationResponseOutputWithContext(ctx context.Context) TeamInformationResponseOutput {
	return o
}

// The description of the team
func (o TeamInformationResponseOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v TeamInformationResponse) string { return v.Description }).(pulumi.StringOutput)
}

// The name of the team
func (o TeamInformationResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v TeamInformationResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The primary channel URL of the team
func (o TeamInformationResponseOutput) PrimaryChannelUrl() pulumi.StringOutput {
	return o.ApplyT(func(v TeamInformationResponse) string { return v.PrimaryChannelUrl }).(pulumi.StringOutput)
}

// The time the team was created
func (o TeamInformationResponseOutput) TeamCreationTimeUtc() pulumi.StringOutput {
	return o.ApplyT(func(v TeamInformationResponse) string { return v.TeamCreationTimeUtc }).(pulumi.StringOutput)
}

// Team ID
func (o TeamInformationResponseOutput) TeamId() pulumi.StringOutput {
	return o.ApplyT(func(v TeamInformationResponse) string { return v.TeamId }).(pulumi.StringOutput)
}

type TeamInformationResponsePtrOutput struct{ *pulumi.OutputState }

func (TeamInformationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TeamInformationResponse)(nil)).Elem()
}

func (o TeamInformationResponsePtrOutput) ToTeamInformationResponsePtrOutput() TeamInformationResponsePtrOutput {
	return o
}

func (o TeamInformationResponsePtrOutput) ToTeamInformationResponsePtrOutputWithContext(ctx context.Context) TeamInformationResponsePtrOutput {
	return o
}

func (o TeamInformationResponsePtrOutput) Elem() TeamInformationResponseOutput {
	return o.ApplyT(func(v *TeamInformationResponse) TeamInformationResponse {
		if v != nil {
			return *v
		}
		var ret TeamInformationResponse
		return ret
	}).(TeamInformationResponseOutput)
}

// The description of the team
func (o TeamInformationResponsePtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TeamInformationResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Description
	}).(pulumi.StringPtrOutput)
}

// The name of the team
func (o TeamInformationResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TeamInformationResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The primary channel URL of the team
func (o TeamInformationResponsePtrOutput) PrimaryChannelUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TeamInformationResponse) *string {
		if v == nil {
			return nil
		}
		return &v.PrimaryChannelUrl
	}).(pulumi.StringPtrOutput)
}

// The time the team was created
func (o TeamInformationResponsePtrOutput) TeamCreationTimeUtc() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TeamInformationResponse) *string {
		if v == nil {
			return nil
		}
		return &v.TeamCreationTimeUtc
	}).(pulumi.StringPtrOutput)
}

// Team ID
func (o TeamInformationResponsePtrOutput) TeamId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TeamInformationResponse) *string {
		if v == nil {
			return nil
		}
		return &v.TeamId
	}).(pulumi.StringPtrOutput)
}

// The available data types for Threat Intelligence TAXII data connector.
type TiTaxiiDataConnectorDataTypes struct {
	// Data type for TAXII connector.
	TaxiiClient TiTaxiiDataConnectorDataTypesTaxiiClient `pulumi:"taxiiClient"`
}

// The available data types for Threat Intelligence TAXII data connector.
type TiTaxiiDataConnectorDataTypesResponse struct {
	// Data type for TAXII connector.
	TaxiiClient TiTaxiiDataConnectorDataTypesResponseTaxiiClient `pulumi:"taxiiClient"`
}

// The available data types for Threat Intelligence TAXII data connector.
type TiTaxiiDataConnectorDataTypesResponseOutput struct{ *pulumi.OutputState }

func (TiTaxiiDataConnectorDataTypesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TiTaxiiDataConnectorDataTypesResponse)(nil)).Elem()
}

func (o TiTaxiiDataConnectorDataTypesResponseOutput) ToTiTaxiiDataConnectorDataTypesResponseOutput() TiTaxiiDataConnectorDataTypesResponseOutput {
	return o
}

func (o TiTaxiiDataConnectorDataTypesResponseOutput) ToTiTaxiiDataConnectorDataTypesResponseOutputWithContext(ctx context.Context) TiTaxiiDataConnectorDataTypesResponseOutput {
	return o
}

// Data type for TAXII connector.
func (o TiTaxiiDataConnectorDataTypesResponseOutput) TaxiiClient() TiTaxiiDataConnectorDataTypesResponseTaxiiClientOutput {
	return o.ApplyT(func(v TiTaxiiDataConnectorDataTypesResponse) TiTaxiiDataConnectorDataTypesResponseTaxiiClient {
		return v.TaxiiClient
	}).(TiTaxiiDataConnectorDataTypesResponseTaxiiClientOutput)
}

// Data type for TAXII connector.
type TiTaxiiDataConnectorDataTypesResponseTaxiiClient struct {
	// Describe whether this data type connection is enabled or not.
	State string `pulumi:"state"`
}

// Data type for TAXII connector.
type TiTaxiiDataConnectorDataTypesResponseTaxiiClientOutput struct{ *pulumi.OutputState }

func (TiTaxiiDataConnectorDataTypesResponseTaxiiClientOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TiTaxiiDataConnectorDataTypesResponseTaxiiClient)(nil)).Elem()
}

func (o TiTaxiiDataConnectorDataTypesResponseTaxiiClientOutput) ToTiTaxiiDataConnectorDataTypesResponseTaxiiClientOutput() TiTaxiiDataConnectorDataTypesResponseTaxiiClientOutput {
	return o
}

func (o TiTaxiiDataConnectorDataTypesResponseTaxiiClientOutput) ToTiTaxiiDataConnectorDataTypesResponseTaxiiClientOutputWithContext(ctx context.Context) TiTaxiiDataConnectorDataTypesResponseTaxiiClientOutput {
	return o
}

// Describe whether this data type connection is enabled or not.
func (o TiTaxiiDataConnectorDataTypesResponseTaxiiClientOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v TiTaxiiDataConnectorDataTypesResponseTaxiiClient) string { return v.State }).(pulumi.StringOutput)
}

// Data type for TAXII connector.
type TiTaxiiDataConnectorDataTypesTaxiiClient struct {
	// Describe whether this data type connection is enabled or not.
	State string `pulumi:"state"`
}

// timeline aggregation information per kind
type TimelineAggregationResponse struct {
	// the total items found for a kind
	Count int `pulumi:"count"`
	// the query kind
	Kind string `pulumi:"kind"`
}

// timeline aggregation information per kind
type TimelineAggregationResponseOutput struct{ *pulumi.OutputState }

func (TimelineAggregationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TimelineAggregationResponse)(nil)).Elem()
}

func (o TimelineAggregationResponseOutput) ToTimelineAggregationResponseOutput() TimelineAggregationResponseOutput {
	return o
}

func (o TimelineAggregationResponseOutput) ToTimelineAggregationResponseOutputWithContext(ctx context.Context) TimelineAggregationResponseOutput {
	return o
}

// the total items found for a kind
func (o TimelineAggregationResponseOutput) Count() pulumi.IntOutput {
	return o.ApplyT(func(v TimelineAggregationResponse) int { return v.Count }).(pulumi.IntOutput)
}

// the query kind
func (o TimelineAggregationResponseOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v TimelineAggregationResponse) string { return v.Kind }).(pulumi.StringOutput)
}

type TimelineAggregationResponseArrayOutput struct{ *pulumi.OutputState }

func (TimelineAggregationResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TimelineAggregationResponse)(nil)).Elem()
}

func (o TimelineAggregationResponseArrayOutput) ToTimelineAggregationResponseArrayOutput() TimelineAggregationResponseArrayOutput {
	return o
}

func (o TimelineAggregationResponseArrayOutput) ToTimelineAggregationResponseArrayOutputWithContext(ctx context.Context) TimelineAggregationResponseArrayOutput {
	return o
}

func (o TimelineAggregationResponseArrayOutput) Index(i pulumi.IntInput) TimelineAggregationResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TimelineAggregationResponse {
		return vs[0].([]TimelineAggregationResponse)[vs[1].(int)]
	}).(TimelineAggregationResponseOutput)
}

// Timeline Query Errors.
type TimelineErrorResponse struct {
	// the error message
	ErrorMessage string `pulumi:"errorMessage"`
	// the query kind
	Kind string `pulumi:"kind"`
	// the query id
	QueryId *string `pulumi:"queryId"`
}

// Timeline Query Errors.
type TimelineErrorResponseOutput struct{ *pulumi.OutputState }

func (TimelineErrorResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TimelineErrorResponse)(nil)).Elem()
}

func (o TimelineErrorResponseOutput) ToTimelineErrorResponseOutput() TimelineErrorResponseOutput {
	return o
}

func (o TimelineErrorResponseOutput) ToTimelineErrorResponseOutputWithContext(ctx context.Context) TimelineErrorResponseOutput {
	return o
}

// the error message
func (o TimelineErrorResponseOutput) ErrorMessage() pulumi.StringOutput {
	return o.ApplyT(func(v TimelineErrorResponse) string { return v.ErrorMessage }).(pulumi.StringOutput)
}

// the query kind
func (o TimelineErrorResponseOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v TimelineErrorResponse) string { return v.Kind }).(pulumi.StringOutput)
}

// the query id
func (o TimelineErrorResponseOutput) QueryId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TimelineErrorResponse) *string { return v.QueryId }).(pulumi.StringPtrOutput)
}

type TimelineErrorResponseArrayOutput struct{ *pulumi.OutputState }

func (TimelineErrorResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TimelineErrorResponse)(nil)).Elem()
}

func (o TimelineErrorResponseArrayOutput) ToTimelineErrorResponseArrayOutput() TimelineErrorResponseArrayOutput {
	return o
}

func (o TimelineErrorResponseArrayOutput) ToTimelineErrorResponseArrayOutputWithContext(ctx context.Context) TimelineErrorResponseArrayOutput {
	return o
}

func (o TimelineErrorResponseArrayOutput) Index(i pulumi.IntInput) TimelineErrorResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TimelineErrorResponse {
		return vs[0].([]TimelineErrorResponse)[vs[1].(int)]
	}).(TimelineErrorResponseOutput)
}

// Expansion result metadata.
type TimelineResultsMetadataResponse struct {
	// timeline aggregation per kind
	Aggregations []TimelineAggregationResponse `pulumi:"aggregations"`
	// information about the failure queries
	Errors []TimelineErrorResponse `pulumi:"errors"`
	// the total items found for the timeline request
	TotalCount int `pulumi:"totalCount"`
}

// Expansion result metadata.
type TimelineResultsMetadataResponseOutput struct{ *pulumi.OutputState }

func (TimelineResultsMetadataResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TimelineResultsMetadataResponse)(nil)).Elem()
}

func (o TimelineResultsMetadataResponseOutput) ToTimelineResultsMetadataResponseOutput() TimelineResultsMetadataResponseOutput {
	return o
}

func (o TimelineResultsMetadataResponseOutput) ToTimelineResultsMetadataResponseOutputWithContext(ctx context.Context) TimelineResultsMetadataResponseOutput {
	return o
}

// timeline aggregation per kind
func (o TimelineResultsMetadataResponseOutput) Aggregations() TimelineAggregationResponseArrayOutput {
	return o.ApplyT(func(v TimelineResultsMetadataResponse) []TimelineAggregationResponse { return v.Aggregations }).(TimelineAggregationResponseArrayOutput)
}

// information about the failure queries
func (o TimelineResultsMetadataResponseOutput) Errors() TimelineErrorResponseArrayOutput {
	return o.ApplyT(func(v TimelineResultsMetadataResponse) []TimelineErrorResponse { return v.Errors }).(TimelineErrorResponseArrayOutput)
}

// the total items found for the timeline request
func (o TimelineResultsMetadataResponseOutput) TotalCount() pulumi.IntOutput {
	return o.ApplyT(func(v TimelineResultsMetadataResponse) int { return v.TotalCount }).(pulumi.IntOutput)
}

type TimelineResultsMetadataResponsePtrOutput struct{ *pulumi.OutputState }

func (TimelineResultsMetadataResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TimelineResultsMetadataResponse)(nil)).Elem()
}

func (o TimelineResultsMetadataResponsePtrOutput) ToTimelineResultsMetadataResponsePtrOutput() TimelineResultsMetadataResponsePtrOutput {
	return o
}

func (o TimelineResultsMetadataResponsePtrOutput) ToTimelineResultsMetadataResponsePtrOutputWithContext(ctx context.Context) TimelineResultsMetadataResponsePtrOutput {
	return o
}

func (o TimelineResultsMetadataResponsePtrOutput) Elem() TimelineResultsMetadataResponseOutput {
	return o.ApplyT(func(v *TimelineResultsMetadataResponse) TimelineResultsMetadataResponse {
		if v != nil {
			return *v
		}
		var ret TimelineResultsMetadataResponse
		return ret
	}).(TimelineResultsMetadataResponseOutput)
}

// timeline aggregation per kind
func (o TimelineResultsMetadataResponsePtrOutput) Aggregations() TimelineAggregationResponseArrayOutput {
	return o.ApplyT(func(v *TimelineResultsMetadataResponse) []TimelineAggregationResponse {
		if v == nil {
			return nil
		}
		return v.Aggregations
	}).(TimelineAggregationResponseArrayOutput)
}

// information about the failure queries
func (o TimelineResultsMetadataResponsePtrOutput) Errors() TimelineErrorResponseArrayOutput {
	return o.ApplyT(func(v *TimelineResultsMetadataResponse) []TimelineErrorResponse {
		if v == nil {
			return nil
		}
		return v.Errors
	}).(TimelineErrorResponseArrayOutput)
}

// the total items found for the timeline request
func (o TimelineResultsMetadataResponsePtrOutput) TotalCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TimelineResultsMetadataResponse) *int {
		if v == nil {
			return nil
		}
		return &v.TotalCount
	}).(pulumi.IntPtrOutput)
}

// User information that made some action
type UserInfoResponse struct {
	// The email of the user.
	Email string `pulumi:"email"`
	// The name of the user.
	Name string `pulumi:"name"`
	// The object id of the user.
	ObjectId *string `pulumi:"objectId"`
}

func init() {
	pulumi.RegisterOutputType(ActivityEntityQueriesPropertiesResponseQueryDefinitionsOutput{})
	pulumi.RegisterOutputType(ActivityEntityQueriesPropertiesResponseQueryDefinitionsPtrOutput{})
	pulumi.RegisterOutputType(AlertDetailsOverrideResponseOutput{})
	pulumi.RegisterOutputType(AlertDetailsOverrideResponsePtrOutput{})
	pulumi.RegisterOutputType(AlertPropertyMappingResponseOutput{})
	pulumi.RegisterOutputType(AlertPropertyMappingResponseArrayOutput{})
	pulumi.RegisterOutputType(AlertsDataTypeOfDataConnectorResponseOutput{})
	pulumi.RegisterOutputType(AlertsDataTypeOfDataConnectorResponsePtrOutput{})
	pulumi.RegisterOutputType(AvailabilityResponseOutput{})
	pulumi.RegisterOutputType(AvailabilityResponsePtrOutput{})
	pulumi.RegisterOutputType(AwsCloudTrailDataConnectorDataTypesResponseOutput{})
	pulumi.RegisterOutputType(AwsCloudTrailDataConnectorDataTypesResponseLogsOutput{})
	pulumi.RegisterOutputType(AwsS3DataConnectorDataTypesResponseOutput{})
	pulumi.RegisterOutputType(AwsS3DataConnectorDataTypesResponseLogsOutput{})
	pulumi.RegisterOutputType(CodelessConnectorPollingAuthPropertiesResponseOutput{})
	pulumi.RegisterOutputType(CodelessConnectorPollingAuthPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(CodelessConnectorPollingConfigPropertiesResponseOutput{})
	pulumi.RegisterOutputType(CodelessConnectorPollingConfigPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(CodelessConnectorPollingPagingPropertiesResponseOutput{})
	pulumi.RegisterOutputType(CodelessConnectorPollingPagingPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(CodelessConnectorPollingRequestPropertiesResponseOutput{})
	pulumi.RegisterOutputType(CodelessConnectorPollingRequestPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(CodelessConnectorPollingResponsePropertiesResponseOutput{})
	pulumi.RegisterOutputType(CodelessConnectorPollingResponsePropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(CodelessUiConnectorConfigPropertiesResponseOutput{})
	pulumi.RegisterOutputType(CodelessUiConnectorConfigPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(CodelessUiConnectorConfigPropertiesResponseConnectivityCriteriaOutput{})
	pulumi.RegisterOutputType(CodelessUiConnectorConfigPropertiesResponseConnectivityCriteriaArrayOutput{})
	pulumi.RegisterOutputType(CodelessUiConnectorConfigPropertiesResponseDataTypesOutput{})
	pulumi.RegisterOutputType(CodelessUiConnectorConfigPropertiesResponseDataTypesArrayOutput{})
	pulumi.RegisterOutputType(CodelessUiConnectorConfigPropertiesResponseGraphQueriesOutput{})
	pulumi.RegisterOutputType(CodelessUiConnectorConfigPropertiesResponseGraphQueriesArrayOutput{})
	pulumi.RegisterOutputType(CodelessUiConnectorConfigPropertiesResponseInstructionStepsOutput{})
	pulumi.RegisterOutputType(CodelessUiConnectorConfigPropertiesResponseInstructionStepsArrayOutput{})
	pulumi.RegisterOutputType(CodelessUiConnectorConfigPropertiesResponseSampleQueriesOutput{})
	pulumi.RegisterOutputType(CodelessUiConnectorConfigPropertiesResponseSampleQueriesArrayOutput{})
	pulumi.RegisterOutputType(DataConnectorDataTypeCommonResponseOutput{})
	pulumi.RegisterOutputType(DataConnectorDataTypeCommonResponsePtrOutput{})
	pulumi.RegisterOutputType(Dynamics365DataConnectorDataTypesResponseOutput{})
	pulumi.RegisterOutputType(Dynamics365DataConnectorDataTypesResponseDynamics365CdsActivitiesOutput{})
	pulumi.RegisterOutputType(EntityInsightItemResponseOutput{})
	pulumi.RegisterOutputType(EntityInsightItemResponseArrayOutput{})
	pulumi.RegisterOutputType(EntityInsightItemResponseQueryTimeIntervalOutput{})
	pulumi.RegisterOutputType(EntityInsightItemResponseQueryTimeIntervalPtrOutput{})
	pulumi.RegisterOutputType(EntityMappingResponseOutput{})
	pulumi.RegisterOutputType(EntityMappingResponseArrayOutput{})
	pulumi.RegisterOutputType(EventGroupingSettingsResponseOutput{})
	pulumi.RegisterOutputType(EventGroupingSettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(FieldMappingResponseOutput{})
	pulumi.RegisterOutputType(FieldMappingResponseArrayOutput{})
	pulumi.RegisterOutputType(FusionScenarioExclusionPatternResponseOutput{})
	pulumi.RegisterOutputType(FusionScenarioExclusionPatternResponseArrayOutput{})
	pulumi.RegisterOutputType(FusionSourceSettingsResponseOutput{})
	pulumi.RegisterOutputType(FusionSourceSettingsResponseArrayOutput{})
	pulumi.RegisterOutputType(FusionSourceSubTypeSettingResponseOutput{})
	pulumi.RegisterOutputType(FusionSourceSubTypeSettingResponseArrayOutput{})
	pulumi.RegisterOutputType(FusionSubTypeSeverityFilterResponseOutput{})
	pulumi.RegisterOutputType(FusionSubTypeSeverityFiltersItemResponseOutput{})
	pulumi.RegisterOutputType(FusionSubTypeSeverityFiltersItemResponseArrayOutput{})
	pulumi.RegisterOutputType(GetInsightsErrorKindResponseOutput{})
	pulumi.RegisterOutputType(GetInsightsErrorKindResponseArrayOutput{})
	pulumi.RegisterOutputType(GetInsightsResultsMetadataResponseOutput{})
	pulumi.RegisterOutputType(GetInsightsResultsMetadataResponsePtrOutput{})
	pulumi.RegisterOutputType(GroupingConfigurationResponseOutput{})
	pulumi.RegisterOutputType(GroupingConfigurationResponsePtrOutput{})
	pulumi.RegisterOutputType(IncidentAdditionalDataResponseOutput{})
	pulumi.RegisterOutputType(IncidentConfigurationResponseOutput{})
	pulumi.RegisterOutputType(IncidentConfigurationResponsePtrOutput{})
	pulumi.RegisterOutputType(IncidentLabelOutput{})
	pulumi.RegisterOutputType(IncidentLabelArrayOutput{})
	pulumi.RegisterOutputType(IncidentLabelResponseOutput{})
	pulumi.RegisterOutputType(IncidentLabelResponseArrayOutput{})
	pulumi.RegisterOutputType(IncidentOwnerInfoOutput{})
	pulumi.RegisterOutputType(IncidentOwnerInfoPtrOutput{})
	pulumi.RegisterOutputType(IncidentOwnerInfoResponseOutput{})
	pulumi.RegisterOutputType(IncidentOwnerInfoResponsePtrOutput{})
	pulumi.RegisterOutputType(InsightsTableResultResponseOutput{})
	pulumi.RegisterOutputType(InsightsTableResultResponsePtrOutput{})
	pulumi.RegisterOutputType(InsightsTableResultResponseArrayOutput{})
	pulumi.RegisterOutputType(InsightsTableResultResponseColumnsOutput{})
	pulumi.RegisterOutputType(InsightsTableResultResponseColumnsArrayOutput{})
	pulumi.RegisterOutputType(InstructionStepsResponseInstructionsOutput{})
	pulumi.RegisterOutputType(InstructionStepsResponseInstructionsArrayOutput{})
	pulumi.RegisterOutputType(MCASDataConnectorDataTypesResponseOutput{})
	pulumi.RegisterOutputType(MSTIDataConnectorDataTypesResponseOutput{})
	pulumi.RegisterOutputType(MSTIDataConnectorDataTypesResponseBingSafetyPhishingURLOutput{})
	pulumi.RegisterOutputType(MSTIDataConnectorDataTypesResponseMicrosoftEmergingThreatFeedOutput{})
	pulumi.RegisterOutputType(MTPDataConnectorDataTypesResponseOutput{})
	pulumi.RegisterOutputType(MTPDataConnectorDataTypesResponseAlertsOutput{})
	pulumi.RegisterOutputType(MTPDataConnectorDataTypesResponseAlertsPtrOutput{})
	pulumi.RegisterOutputType(MTPDataConnectorDataTypesResponseIncidentsOutput{})
	pulumi.RegisterOutputType(MetadataAuthorOutput{})
	pulumi.RegisterOutputType(MetadataAuthorPtrOutput{})
	pulumi.RegisterOutputType(MetadataAuthorResponseOutput{})
	pulumi.RegisterOutputType(MetadataAuthorResponsePtrOutput{})
	pulumi.RegisterOutputType(MetadataCategoriesOutput{})
	pulumi.RegisterOutputType(MetadataCategoriesPtrOutput{})
	pulumi.RegisterOutputType(MetadataCategoriesResponseOutput{})
	pulumi.RegisterOutputType(MetadataCategoriesResponsePtrOutput{})
	pulumi.RegisterOutputType(MetadataDependenciesOutput{})
	pulumi.RegisterOutputType(MetadataDependenciesPtrOutput{})
	pulumi.RegisterOutputType(MetadataDependenciesArrayOutput{})
	pulumi.RegisterOutputType(MetadataDependenciesResponseOutput{})
	pulumi.RegisterOutputType(MetadataDependenciesResponsePtrOutput{})
	pulumi.RegisterOutputType(MetadataDependenciesResponseArrayOutput{})
	pulumi.RegisterOutputType(MetadataSourceOutput{})
	pulumi.RegisterOutputType(MetadataSourcePtrOutput{})
	pulumi.RegisterOutputType(MetadataSourceResponseOutput{})
	pulumi.RegisterOutputType(MetadataSourceResponsePtrOutput{})
	pulumi.RegisterOutputType(MetadataSupportOutput{})
	pulumi.RegisterOutputType(MetadataSupportPtrOutput{})
	pulumi.RegisterOutputType(MetadataSupportResponseOutput{})
	pulumi.RegisterOutputType(MetadataSupportResponsePtrOutput{})
	pulumi.RegisterOutputType(MicrosoftPurviewInformationProtectionConnectorDataTypesResponseOutput{})
	pulumi.RegisterOutputType(MicrosoftPurviewInformationProtectionConnectorDataTypesResponseLogsOutput{})
	pulumi.RegisterOutputType(MtpFilteredProvidersResponseOutput{})
	pulumi.RegisterOutputType(MtpFilteredProvidersResponsePtrOutput{})
	pulumi.RegisterOutputType(Office365ProjectConnectorDataTypesResponseOutput{})
	pulumi.RegisterOutputType(Office365ProjectConnectorDataTypesResponseLogsOutput{})
	pulumi.RegisterOutputType(OfficeDataConnectorDataTypesResponseOutput{})
	pulumi.RegisterOutputType(OfficeDataConnectorDataTypesResponseExchangeOutput{})
	pulumi.RegisterOutputType(OfficeDataConnectorDataTypesResponseSharePointOutput{})
	pulumi.RegisterOutputType(OfficeDataConnectorDataTypesResponseTeamsOutput{})
	pulumi.RegisterOutputType(OfficePowerBIConnectorDataTypesResponseOutput{})
	pulumi.RegisterOutputType(OfficePowerBIConnectorDataTypesResponseLogsOutput{})
	pulumi.RegisterOutputType(PermissionsResponseOutput{})
	pulumi.RegisterOutputType(PermissionsResponsePtrOutput{})
	pulumi.RegisterOutputType(PermissionsResponseCustomsOutput{})
	pulumi.RegisterOutputType(PermissionsResponseCustomsArrayOutput{})
	pulumi.RegisterOutputType(PermissionsResponseResourceProviderOutput{})
	pulumi.RegisterOutputType(PermissionsResponseResourceProviderArrayOutput{})
	pulumi.RegisterOutputType(RepoResponseOutput{})
	pulumi.RegisterOutputType(RepoResponseArrayOutput{})
	pulumi.RegisterOutputType(RequiredPermissionsResponseOutput{})
	pulumi.RegisterOutputType(RequiredPermissionsResponsePtrOutput{})
	pulumi.RegisterOutputType(SecurityMLAnalyticsSettingsDataSourceResponseOutput{})
	pulumi.RegisterOutputType(SecurityMLAnalyticsSettingsDataSourceResponseArrayOutput{})
	pulumi.RegisterOutputType(SentinelEntityMappingResponseOutput{})
	pulumi.RegisterOutputType(SentinelEntityMappingResponseArrayOutput{})
	pulumi.RegisterOutputType(SystemDataResponseOutput{})
	pulumi.RegisterOutputType(TIDataConnectorDataTypesResponseOutput{})
	pulumi.RegisterOutputType(TIDataConnectorDataTypesResponseIndicatorsOutput{})
	pulumi.RegisterOutputType(TeamInformationResponseOutput{})
	pulumi.RegisterOutputType(TeamInformationResponsePtrOutput{})
	pulumi.RegisterOutputType(TiTaxiiDataConnectorDataTypesResponseOutput{})
	pulumi.RegisterOutputType(TiTaxiiDataConnectorDataTypesResponseTaxiiClientOutput{})
	pulumi.RegisterOutputType(TimelineAggregationResponseOutput{})
	pulumi.RegisterOutputType(TimelineAggregationResponseArrayOutput{})
	pulumi.RegisterOutputType(TimelineErrorResponseOutput{})
	pulumi.RegisterOutputType(TimelineErrorResponseArrayOutput{})
	pulumi.RegisterOutputType(TimelineResultsMetadataResponseOutput{})
	pulumi.RegisterOutputType(TimelineResultsMetadataResponsePtrOutput{})
}
