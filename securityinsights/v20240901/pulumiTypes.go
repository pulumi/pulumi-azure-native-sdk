// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20240901

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = utilities.GetEnvOrDefault

// Model for API authentication with AWS.
type AWSAuthModel struct {
	// AWS STS assume role external ID. This is used to prevent the confused deputy problem: 'https://docs.aws.amazon.com/IAM/latest/UserGuide/confused-deputy.html'
	ExternalId *string `pulumi:"externalId"`
	// AWS STS assume role ARN
	RoleArn string `pulumi:"roleArn"`
	// Type of paging
	// Expected value is 'AWS'.
	Type string `pulumi:"type"`
}

// AWSAuthModelInput is an input type that accepts AWSAuthModelArgs and AWSAuthModelOutput values.
// You can construct a concrete instance of `AWSAuthModelInput` via:
//
//	AWSAuthModelArgs{...}
type AWSAuthModelInput interface {
	pulumi.Input

	ToAWSAuthModelOutput() AWSAuthModelOutput
	ToAWSAuthModelOutputWithContext(context.Context) AWSAuthModelOutput
}

// Model for API authentication with AWS.
type AWSAuthModelArgs struct {
	// AWS STS assume role external ID. This is used to prevent the confused deputy problem: 'https://docs.aws.amazon.com/IAM/latest/UserGuide/confused-deputy.html'
	ExternalId pulumi.StringPtrInput `pulumi:"externalId"`
	// AWS STS assume role ARN
	RoleArn pulumi.StringInput `pulumi:"roleArn"`
	// Type of paging
	// Expected value is 'AWS'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (AWSAuthModelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AWSAuthModel)(nil)).Elem()
}

func (i AWSAuthModelArgs) ToAWSAuthModelOutput() AWSAuthModelOutput {
	return i.ToAWSAuthModelOutputWithContext(context.Background())
}

func (i AWSAuthModelArgs) ToAWSAuthModelOutputWithContext(ctx context.Context) AWSAuthModelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AWSAuthModelOutput)
}

// Model for API authentication with AWS.
type AWSAuthModelOutput struct{ *pulumi.OutputState }

func (AWSAuthModelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AWSAuthModel)(nil)).Elem()
}

func (o AWSAuthModelOutput) ToAWSAuthModelOutput() AWSAuthModelOutput {
	return o
}

func (o AWSAuthModelOutput) ToAWSAuthModelOutputWithContext(ctx context.Context) AWSAuthModelOutput {
	return o
}

// AWS STS assume role external ID. This is used to prevent the confused deputy problem: 'https://docs.aws.amazon.com/IAM/latest/UserGuide/confused-deputy.html'
func (o AWSAuthModelOutput) ExternalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AWSAuthModel) *string { return v.ExternalId }).(pulumi.StringPtrOutput)
}

// AWS STS assume role ARN
func (o AWSAuthModelOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v AWSAuthModel) string { return v.RoleArn }).(pulumi.StringOutput)
}

// Type of paging
// Expected value is 'AWS'.
func (o AWSAuthModelOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v AWSAuthModel) string { return v.Type }).(pulumi.StringOutput)
}

// Model for API authentication with AWS.
type AWSAuthModelResponse struct {
	// AWS STS assume role external ID. This is used to prevent the confused deputy problem: 'https://docs.aws.amazon.com/IAM/latest/UserGuide/confused-deputy.html'
	ExternalId *string `pulumi:"externalId"`
	// AWS STS assume role ARN
	RoleArn string `pulumi:"roleArn"`
	// Type of paging
	// Expected value is 'AWS'.
	Type string `pulumi:"type"`
}

// Model for API authentication with AWS.
type AWSAuthModelResponseOutput struct{ *pulumi.OutputState }

func (AWSAuthModelResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AWSAuthModelResponse)(nil)).Elem()
}

func (o AWSAuthModelResponseOutput) ToAWSAuthModelResponseOutput() AWSAuthModelResponseOutput {
	return o
}

func (o AWSAuthModelResponseOutput) ToAWSAuthModelResponseOutputWithContext(ctx context.Context) AWSAuthModelResponseOutput {
	return o
}

// AWS STS assume role external ID. This is used to prevent the confused deputy problem: 'https://docs.aws.amazon.com/IAM/latest/UserGuide/confused-deputy.html'
func (o AWSAuthModelResponseOutput) ExternalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AWSAuthModelResponse) *string { return v.ExternalId }).(pulumi.StringPtrOutput)
}

// AWS STS assume role ARN
func (o AWSAuthModelResponseOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v AWSAuthModelResponse) string { return v.RoleArn }).(pulumi.StringOutput)
}

// Type of paging
// Expected value is 'AWS'.
func (o AWSAuthModelResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v AWSAuthModelResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Describes an automation rule action to add a task to an incident.
type AddIncidentTaskActionProperties struct {
	// The description of the task.
	Description *string `pulumi:"description"`
	// The title of the task.
	Title string `pulumi:"title"`
}

// AddIncidentTaskActionPropertiesInput is an input type that accepts AddIncidentTaskActionPropertiesArgs and AddIncidentTaskActionPropertiesOutput values.
// You can construct a concrete instance of `AddIncidentTaskActionPropertiesInput` via:
//
//	AddIncidentTaskActionPropertiesArgs{...}
type AddIncidentTaskActionPropertiesInput interface {
	pulumi.Input

	ToAddIncidentTaskActionPropertiesOutput() AddIncidentTaskActionPropertiesOutput
	ToAddIncidentTaskActionPropertiesOutputWithContext(context.Context) AddIncidentTaskActionPropertiesOutput
}

// Describes an automation rule action to add a task to an incident.
type AddIncidentTaskActionPropertiesArgs struct {
	// The description of the task.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The title of the task.
	Title pulumi.StringInput `pulumi:"title"`
}

func (AddIncidentTaskActionPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AddIncidentTaskActionProperties)(nil)).Elem()
}

func (i AddIncidentTaskActionPropertiesArgs) ToAddIncidentTaskActionPropertiesOutput() AddIncidentTaskActionPropertiesOutput {
	return i.ToAddIncidentTaskActionPropertiesOutputWithContext(context.Background())
}

func (i AddIncidentTaskActionPropertiesArgs) ToAddIncidentTaskActionPropertiesOutputWithContext(ctx context.Context) AddIncidentTaskActionPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddIncidentTaskActionPropertiesOutput)
}

func (i AddIncidentTaskActionPropertiesArgs) ToAddIncidentTaskActionPropertiesPtrOutput() AddIncidentTaskActionPropertiesPtrOutput {
	return i.ToAddIncidentTaskActionPropertiesPtrOutputWithContext(context.Background())
}

func (i AddIncidentTaskActionPropertiesArgs) ToAddIncidentTaskActionPropertiesPtrOutputWithContext(ctx context.Context) AddIncidentTaskActionPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddIncidentTaskActionPropertiesOutput).ToAddIncidentTaskActionPropertiesPtrOutputWithContext(ctx)
}

// AddIncidentTaskActionPropertiesPtrInput is an input type that accepts AddIncidentTaskActionPropertiesArgs, AddIncidentTaskActionPropertiesPtr and AddIncidentTaskActionPropertiesPtrOutput values.
// You can construct a concrete instance of `AddIncidentTaskActionPropertiesPtrInput` via:
//
//	        AddIncidentTaskActionPropertiesArgs{...}
//
//	or:
//
//	        nil
type AddIncidentTaskActionPropertiesPtrInput interface {
	pulumi.Input

	ToAddIncidentTaskActionPropertiesPtrOutput() AddIncidentTaskActionPropertiesPtrOutput
	ToAddIncidentTaskActionPropertiesPtrOutputWithContext(context.Context) AddIncidentTaskActionPropertiesPtrOutput
}

type addIncidentTaskActionPropertiesPtrType AddIncidentTaskActionPropertiesArgs

func AddIncidentTaskActionPropertiesPtr(v *AddIncidentTaskActionPropertiesArgs) AddIncidentTaskActionPropertiesPtrInput {
	return (*addIncidentTaskActionPropertiesPtrType)(v)
}

func (*addIncidentTaskActionPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AddIncidentTaskActionProperties)(nil)).Elem()
}

func (i *addIncidentTaskActionPropertiesPtrType) ToAddIncidentTaskActionPropertiesPtrOutput() AddIncidentTaskActionPropertiesPtrOutput {
	return i.ToAddIncidentTaskActionPropertiesPtrOutputWithContext(context.Background())
}

func (i *addIncidentTaskActionPropertiesPtrType) ToAddIncidentTaskActionPropertiesPtrOutputWithContext(ctx context.Context) AddIncidentTaskActionPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddIncidentTaskActionPropertiesPtrOutput)
}

// Describes an automation rule action to add a task to an incident.
type AddIncidentTaskActionPropertiesOutput struct{ *pulumi.OutputState }

func (AddIncidentTaskActionPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AddIncidentTaskActionProperties)(nil)).Elem()
}

func (o AddIncidentTaskActionPropertiesOutput) ToAddIncidentTaskActionPropertiesOutput() AddIncidentTaskActionPropertiesOutput {
	return o
}

func (o AddIncidentTaskActionPropertiesOutput) ToAddIncidentTaskActionPropertiesOutputWithContext(ctx context.Context) AddIncidentTaskActionPropertiesOutput {
	return o
}

func (o AddIncidentTaskActionPropertiesOutput) ToAddIncidentTaskActionPropertiesPtrOutput() AddIncidentTaskActionPropertiesPtrOutput {
	return o.ToAddIncidentTaskActionPropertiesPtrOutputWithContext(context.Background())
}

func (o AddIncidentTaskActionPropertiesOutput) ToAddIncidentTaskActionPropertiesPtrOutputWithContext(ctx context.Context) AddIncidentTaskActionPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AddIncidentTaskActionProperties) *AddIncidentTaskActionProperties {
		return &v
	}).(AddIncidentTaskActionPropertiesPtrOutput)
}

// The description of the task.
func (o AddIncidentTaskActionPropertiesOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AddIncidentTaskActionProperties) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The title of the task.
func (o AddIncidentTaskActionPropertiesOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v AddIncidentTaskActionProperties) string { return v.Title }).(pulumi.StringOutput)
}

type AddIncidentTaskActionPropertiesPtrOutput struct{ *pulumi.OutputState }

func (AddIncidentTaskActionPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AddIncidentTaskActionProperties)(nil)).Elem()
}

func (o AddIncidentTaskActionPropertiesPtrOutput) ToAddIncidentTaskActionPropertiesPtrOutput() AddIncidentTaskActionPropertiesPtrOutput {
	return o
}

func (o AddIncidentTaskActionPropertiesPtrOutput) ToAddIncidentTaskActionPropertiesPtrOutputWithContext(ctx context.Context) AddIncidentTaskActionPropertiesPtrOutput {
	return o
}

func (o AddIncidentTaskActionPropertiesPtrOutput) Elem() AddIncidentTaskActionPropertiesOutput {
	return o.ApplyT(func(v *AddIncidentTaskActionProperties) AddIncidentTaskActionProperties {
		if v != nil {
			return *v
		}
		var ret AddIncidentTaskActionProperties
		return ret
	}).(AddIncidentTaskActionPropertiesOutput)
}

// The description of the task.
func (o AddIncidentTaskActionPropertiesPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AddIncidentTaskActionProperties) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// The title of the task.
func (o AddIncidentTaskActionPropertiesPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AddIncidentTaskActionProperties) *string {
		if v == nil {
			return nil
		}
		return &v.Title
	}).(pulumi.StringPtrOutput)
}

// Describes an automation rule action to add a task to an incident.
type AddIncidentTaskActionPropertiesResponse struct {
	// The description of the task.
	Description *string `pulumi:"description"`
	// The title of the task.
	Title string `pulumi:"title"`
}

// Describes an automation rule action to add a task to an incident.
type AddIncidentTaskActionPropertiesResponseOutput struct{ *pulumi.OutputState }

func (AddIncidentTaskActionPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AddIncidentTaskActionPropertiesResponse)(nil)).Elem()
}

func (o AddIncidentTaskActionPropertiesResponseOutput) ToAddIncidentTaskActionPropertiesResponseOutput() AddIncidentTaskActionPropertiesResponseOutput {
	return o
}

func (o AddIncidentTaskActionPropertiesResponseOutput) ToAddIncidentTaskActionPropertiesResponseOutputWithContext(ctx context.Context) AddIncidentTaskActionPropertiesResponseOutput {
	return o
}

// The description of the task.
func (o AddIncidentTaskActionPropertiesResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AddIncidentTaskActionPropertiesResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The title of the task.
func (o AddIncidentTaskActionPropertiesResponseOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v AddIncidentTaskActionPropertiesResponse) string { return v.Title }).(pulumi.StringOutput)
}

type AddIncidentTaskActionPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (AddIncidentTaskActionPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AddIncidentTaskActionPropertiesResponse)(nil)).Elem()
}

func (o AddIncidentTaskActionPropertiesResponsePtrOutput) ToAddIncidentTaskActionPropertiesResponsePtrOutput() AddIncidentTaskActionPropertiesResponsePtrOutput {
	return o
}

func (o AddIncidentTaskActionPropertiesResponsePtrOutput) ToAddIncidentTaskActionPropertiesResponsePtrOutputWithContext(ctx context.Context) AddIncidentTaskActionPropertiesResponsePtrOutput {
	return o
}

func (o AddIncidentTaskActionPropertiesResponsePtrOutput) Elem() AddIncidentTaskActionPropertiesResponseOutput {
	return o.ApplyT(func(v *AddIncidentTaskActionPropertiesResponse) AddIncidentTaskActionPropertiesResponse {
		if v != nil {
			return *v
		}
		var ret AddIncidentTaskActionPropertiesResponse
		return ret
	}).(AddIncidentTaskActionPropertiesResponseOutput)
}

// The description of the task.
func (o AddIncidentTaskActionPropertiesResponsePtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AddIncidentTaskActionPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// The title of the task.
func (o AddIncidentTaskActionPropertiesResponsePtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AddIncidentTaskActionPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Title
	}).(pulumi.StringPtrOutput)
}

// Settings for how to dynamically override alert static details
type AlertDetailsOverride struct {
	// the format containing columns name(s) to override the alert description
	AlertDescriptionFormat *string `pulumi:"alertDescriptionFormat"`
	// the format containing columns name(s) to override the alert name
	AlertDisplayNameFormat *string `pulumi:"alertDisplayNameFormat"`
	// List of additional dynamic properties to override
	AlertDynamicProperties []AlertPropertyMapping `pulumi:"alertDynamicProperties"`
	// the column name to take the alert severity from
	AlertSeverityColumnName *string `pulumi:"alertSeverityColumnName"`
	// the column name to take the alert tactics from
	AlertTacticsColumnName *string `pulumi:"alertTacticsColumnName"`
}

// AlertDetailsOverrideInput is an input type that accepts AlertDetailsOverrideArgs and AlertDetailsOverrideOutput values.
// You can construct a concrete instance of `AlertDetailsOverrideInput` via:
//
//	AlertDetailsOverrideArgs{...}
type AlertDetailsOverrideInput interface {
	pulumi.Input

	ToAlertDetailsOverrideOutput() AlertDetailsOverrideOutput
	ToAlertDetailsOverrideOutputWithContext(context.Context) AlertDetailsOverrideOutput
}

// Settings for how to dynamically override alert static details
type AlertDetailsOverrideArgs struct {
	// the format containing columns name(s) to override the alert description
	AlertDescriptionFormat pulumi.StringPtrInput `pulumi:"alertDescriptionFormat"`
	// the format containing columns name(s) to override the alert name
	AlertDisplayNameFormat pulumi.StringPtrInput `pulumi:"alertDisplayNameFormat"`
	// List of additional dynamic properties to override
	AlertDynamicProperties AlertPropertyMappingArrayInput `pulumi:"alertDynamicProperties"`
	// the column name to take the alert severity from
	AlertSeverityColumnName pulumi.StringPtrInput `pulumi:"alertSeverityColumnName"`
	// the column name to take the alert tactics from
	AlertTacticsColumnName pulumi.StringPtrInput `pulumi:"alertTacticsColumnName"`
}

func (AlertDetailsOverrideArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertDetailsOverride)(nil)).Elem()
}

func (i AlertDetailsOverrideArgs) ToAlertDetailsOverrideOutput() AlertDetailsOverrideOutput {
	return i.ToAlertDetailsOverrideOutputWithContext(context.Background())
}

func (i AlertDetailsOverrideArgs) ToAlertDetailsOverrideOutputWithContext(ctx context.Context) AlertDetailsOverrideOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertDetailsOverrideOutput)
}

func (i AlertDetailsOverrideArgs) ToAlertDetailsOverridePtrOutput() AlertDetailsOverridePtrOutput {
	return i.ToAlertDetailsOverridePtrOutputWithContext(context.Background())
}

func (i AlertDetailsOverrideArgs) ToAlertDetailsOverridePtrOutputWithContext(ctx context.Context) AlertDetailsOverridePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertDetailsOverrideOutput).ToAlertDetailsOverridePtrOutputWithContext(ctx)
}

// AlertDetailsOverridePtrInput is an input type that accepts AlertDetailsOverrideArgs, AlertDetailsOverridePtr and AlertDetailsOverridePtrOutput values.
// You can construct a concrete instance of `AlertDetailsOverridePtrInput` via:
//
//	        AlertDetailsOverrideArgs{...}
//
//	or:
//
//	        nil
type AlertDetailsOverridePtrInput interface {
	pulumi.Input

	ToAlertDetailsOverridePtrOutput() AlertDetailsOverridePtrOutput
	ToAlertDetailsOverridePtrOutputWithContext(context.Context) AlertDetailsOverridePtrOutput
}

type alertDetailsOverridePtrType AlertDetailsOverrideArgs

func AlertDetailsOverridePtr(v *AlertDetailsOverrideArgs) AlertDetailsOverridePtrInput {
	return (*alertDetailsOverridePtrType)(v)
}

func (*alertDetailsOverridePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AlertDetailsOverride)(nil)).Elem()
}

func (i *alertDetailsOverridePtrType) ToAlertDetailsOverridePtrOutput() AlertDetailsOverridePtrOutput {
	return i.ToAlertDetailsOverridePtrOutputWithContext(context.Background())
}

func (i *alertDetailsOverridePtrType) ToAlertDetailsOverridePtrOutputWithContext(ctx context.Context) AlertDetailsOverridePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertDetailsOverridePtrOutput)
}

// Settings for how to dynamically override alert static details
type AlertDetailsOverrideOutput struct{ *pulumi.OutputState }

func (AlertDetailsOverrideOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertDetailsOverride)(nil)).Elem()
}

func (o AlertDetailsOverrideOutput) ToAlertDetailsOverrideOutput() AlertDetailsOverrideOutput {
	return o
}

func (o AlertDetailsOverrideOutput) ToAlertDetailsOverrideOutputWithContext(ctx context.Context) AlertDetailsOverrideOutput {
	return o
}

func (o AlertDetailsOverrideOutput) ToAlertDetailsOverridePtrOutput() AlertDetailsOverridePtrOutput {
	return o.ToAlertDetailsOverridePtrOutputWithContext(context.Background())
}

func (o AlertDetailsOverrideOutput) ToAlertDetailsOverridePtrOutputWithContext(ctx context.Context) AlertDetailsOverridePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AlertDetailsOverride) *AlertDetailsOverride {
		return &v
	}).(AlertDetailsOverridePtrOutput)
}

// the format containing columns name(s) to override the alert description
func (o AlertDetailsOverrideOutput) AlertDescriptionFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertDetailsOverride) *string { return v.AlertDescriptionFormat }).(pulumi.StringPtrOutput)
}

// the format containing columns name(s) to override the alert name
func (o AlertDetailsOverrideOutput) AlertDisplayNameFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertDetailsOverride) *string { return v.AlertDisplayNameFormat }).(pulumi.StringPtrOutput)
}

// List of additional dynamic properties to override
func (o AlertDetailsOverrideOutput) AlertDynamicProperties() AlertPropertyMappingArrayOutput {
	return o.ApplyT(func(v AlertDetailsOverride) []AlertPropertyMapping { return v.AlertDynamicProperties }).(AlertPropertyMappingArrayOutput)
}

// the column name to take the alert severity from
func (o AlertDetailsOverrideOutput) AlertSeverityColumnName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertDetailsOverride) *string { return v.AlertSeverityColumnName }).(pulumi.StringPtrOutput)
}

// the column name to take the alert tactics from
func (o AlertDetailsOverrideOutput) AlertTacticsColumnName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertDetailsOverride) *string { return v.AlertTacticsColumnName }).(pulumi.StringPtrOutput)
}

type AlertDetailsOverridePtrOutput struct{ *pulumi.OutputState }

func (AlertDetailsOverridePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AlertDetailsOverride)(nil)).Elem()
}

func (o AlertDetailsOverridePtrOutput) ToAlertDetailsOverridePtrOutput() AlertDetailsOverridePtrOutput {
	return o
}

func (o AlertDetailsOverridePtrOutput) ToAlertDetailsOverridePtrOutputWithContext(ctx context.Context) AlertDetailsOverridePtrOutput {
	return o
}

func (o AlertDetailsOverridePtrOutput) Elem() AlertDetailsOverrideOutput {
	return o.ApplyT(func(v *AlertDetailsOverride) AlertDetailsOverride {
		if v != nil {
			return *v
		}
		var ret AlertDetailsOverride
		return ret
	}).(AlertDetailsOverrideOutput)
}

// the format containing columns name(s) to override the alert description
func (o AlertDetailsOverridePtrOutput) AlertDescriptionFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AlertDetailsOverride) *string {
		if v == nil {
			return nil
		}
		return v.AlertDescriptionFormat
	}).(pulumi.StringPtrOutput)
}

// the format containing columns name(s) to override the alert name
func (o AlertDetailsOverridePtrOutput) AlertDisplayNameFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AlertDetailsOverride) *string {
		if v == nil {
			return nil
		}
		return v.AlertDisplayNameFormat
	}).(pulumi.StringPtrOutput)
}

// List of additional dynamic properties to override
func (o AlertDetailsOverridePtrOutput) AlertDynamicProperties() AlertPropertyMappingArrayOutput {
	return o.ApplyT(func(v *AlertDetailsOverride) []AlertPropertyMapping {
		if v == nil {
			return nil
		}
		return v.AlertDynamicProperties
	}).(AlertPropertyMappingArrayOutput)
}

// the column name to take the alert severity from
func (o AlertDetailsOverridePtrOutput) AlertSeverityColumnName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AlertDetailsOverride) *string {
		if v == nil {
			return nil
		}
		return v.AlertSeverityColumnName
	}).(pulumi.StringPtrOutput)
}

// the column name to take the alert tactics from
func (o AlertDetailsOverridePtrOutput) AlertTacticsColumnName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AlertDetailsOverride) *string {
		if v == nil {
			return nil
		}
		return v.AlertTacticsColumnName
	}).(pulumi.StringPtrOutput)
}

// Settings for how to dynamically override alert static details
type AlertDetailsOverrideResponse struct {
	// the format containing columns name(s) to override the alert description
	AlertDescriptionFormat *string `pulumi:"alertDescriptionFormat"`
	// the format containing columns name(s) to override the alert name
	AlertDisplayNameFormat *string `pulumi:"alertDisplayNameFormat"`
	// List of additional dynamic properties to override
	AlertDynamicProperties []AlertPropertyMappingResponse `pulumi:"alertDynamicProperties"`
	// the column name to take the alert severity from
	AlertSeverityColumnName *string `pulumi:"alertSeverityColumnName"`
	// the column name to take the alert tactics from
	AlertTacticsColumnName *string `pulumi:"alertTacticsColumnName"`
}

// Settings for how to dynamically override alert static details
type AlertDetailsOverrideResponseOutput struct{ *pulumi.OutputState }

func (AlertDetailsOverrideResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertDetailsOverrideResponse)(nil)).Elem()
}

func (o AlertDetailsOverrideResponseOutput) ToAlertDetailsOverrideResponseOutput() AlertDetailsOverrideResponseOutput {
	return o
}

func (o AlertDetailsOverrideResponseOutput) ToAlertDetailsOverrideResponseOutputWithContext(ctx context.Context) AlertDetailsOverrideResponseOutput {
	return o
}

// the format containing columns name(s) to override the alert description
func (o AlertDetailsOverrideResponseOutput) AlertDescriptionFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertDetailsOverrideResponse) *string { return v.AlertDescriptionFormat }).(pulumi.StringPtrOutput)
}

// the format containing columns name(s) to override the alert name
func (o AlertDetailsOverrideResponseOutput) AlertDisplayNameFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertDetailsOverrideResponse) *string { return v.AlertDisplayNameFormat }).(pulumi.StringPtrOutput)
}

// List of additional dynamic properties to override
func (o AlertDetailsOverrideResponseOutput) AlertDynamicProperties() AlertPropertyMappingResponseArrayOutput {
	return o.ApplyT(func(v AlertDetailsOverrideResponse) []AlertPropertyMappingResponse { return v.AlertDynamicProperties }).(AlertPropertyMappingResponseArrayOutput)
}

// the column name to take the alert severity from
func (o AlertDetailsOverrideResponseOutput) AlertSeverityColumnName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertDetailsOverrideResponse) *string { return v.AlertSeverityColumnName }).(pulumi.StringPtrOutput)
}

// the column name to take the alert tactics from
func (o AlertDetailsOverrideResponseOutput) AlertTacticsColumnName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertDetailsOverrideResponse) *string { return v.AlertTacticsColumnName }).(pulumi.StringPtrOutput)
}

type AlertDetailsOverrideResponsePtrOutput struct{ *pulumi.OutputState }

func (AlertDetailsOverrideResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AlertDetailsOverrideResponse)(nil)).Elem()
}

func (o AlertDetailsOverrideResponsePtrOutput) ToAlertDetailsOverrideResponsePtrOutput() AlertDetailsOverrideResponsePtrOutput {
	return o
}

func (o AlertDetailsOverrideResponsePtrOutput) ToAlertDetailsOverrideResponsePtrOutputWithContext(ctx context.Context) AlertDetailsOverrideResponsePtrOutput {
	return o
}

func (o AlertDetailsOverrideResponsePtrOutput) Elem() AlertDetailsOverrideResponseOutput {
	return o.ApplyT(func(v *AlertDetailsOverrideResponse) AlertDetailsOverrideResponse {
		if v != nil {
			return *v
		}
		var ret AlertDetailsOverrideResponse
		return ret
	}).(AlertDetailsOverrideResponseOutput)
}

// the format containing columns name(s) to override the alert description
func (o AlertDetailsOverrideResponsePtrOutput) AlertDescriptionFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AlertDetailsOverrideResponse) *string {
		if v == nil {
			return nil
		}
		return v.AlertDescriptionFormat
	}).(pulumi.StringPtrOutput)
}

// the format containing columns name(s) to override the alert name
func (o AlertDetailsOverrideResponsePtrOutput) AlertDisplayNameFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AlertDetailsOverrideResponse) *string {
		if v == nil {
			return nil
		}
		return v.AlertDisplayNameFormat
	}).(pulumi.StringPtrOutput)
}

// List of additional dynamic properties to override
func (o AlertDetailsOverrideResponsePtrOutput) AlertDynamicProperties() AlertPropertyMappingResponseArrayOutput {
	return o.ApplyT(func(v *AlertDetailsOverrideResponse) []AlertPropertyMappingResponse {
		if v == nil {
			return nil
		}
		return v.AlertDynamicProperties
	}).(AlertPropertyMappingResponseArrayOutput)
}

// the column name to take the alert severity from
func (o AlertDetailsOverrideResponsePtrOutput) AlertSeverityColumnName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AlertDetailsOverrideResponse) *string {
		if v == nil {
			return nil
		}
		return v.AlertSeverityColumnName
	}).(pulumi.StringPtrOutput)
}

// the column name to take the alert tactics from
func (o AlertDetailsOverrideResponsePtrOutput) AlertTacticsColumnName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AlertDetailsOverrideResponse) *string {
		if v == nil {
			return nil
		}
		return v.AlertTacticsColumnName
	}).(pulumi.StringPtrOutput)
}

// A single alert property mapping to override
type AlertPropertyMapping struct {
	// The V3 alert property
	AlertProperty *string `pulumi:"alertProperty"`
	// the column name to use to override this property
	Value *string `pulumi:"value"`
}

// AlertPropertyMappingInput is an input type that accepts AlertPropertyMappingArgs and AlertPropertyMappingOutput values.
// You can construct a concrete instance of `AlertPropertyMappingInput` via:
//
//	AlertPropertyMappingArgs{...}
type AlertPropertyMappingInput interface {
	pulumi.Input

	ToAlertPropertyMappingOutput() AlertPropertyMappingOutput
	ToAlertPropertyMappingOutputWithContext(context.Context) AlertPropertyMappingOutput
}

// A single alert property mapping to override
type AlertPropertyMappingArgs struct {
	// The V3 alert property
	AlertProperty pulumi.StringPtrInput `pulumi:"alertProperty"`
	// the column name to use to override this property
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (AlertPropertyMappingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertPropertyMapping)(nil)).Elem()
}

func (i AlertPropertyMappingArgs) ToAlertPropertyMappingOutput() AlertPropertyMappingOutput {
	return i.ToAlertPropertyMappingOutputWithContext(context.Background())
}

func (i AlertPropertyMappingArgs) ToAlertPropertyMappingOutputWithContext(ctx context.Context) AlertPropertyMappingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertPropertyMappingOutput)
}

// AlertPropertyMappingArrayInput is an input type that accepts AlertPropertyMappingArray and AlertPropertyMappingArrayOutput values.
// You can construct a concrete instance of `AlertPropertyMappingArrayInput` via:
//
//	AlertPropertyMappingArray{ AlertPropertyMappingArgs{...} }
type AlertPropertyMappingArrayInput interface {
	pulumi.Input

	ToAlertPropertyMappingArrayOutput() AlertPropertyMappingArrayOutput
	ToAlertPropertyMappingArrayOutputWithContext(context.Context) AlertPropertyMappingArrayOutput
}

type AlertPropertyMappingArray []AlertPropertyMappingInput

func (AlertPropertyMappingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AlertPropertyMapping)(nil)).Elem()
}

func (i AlertPropertyMappingArray) ToAlertPropertyMappingArrayOutput() AlertPropertyMappingArrayOutput {
	return i.ToAlertPropertyMappingArrayOutputWithContext(context.Background())
}

func (i AlertPropertyMappingArray) ToAlertPropertyMappingArrayOutputWithContext(ctx context.Context) AlertPropertyMappingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertPropertyMappingArrayOutput)
}

// A single alert property mapping to override
type AlertPropertyMappingOutput struct{ *pulumi.OutputState }

func (AlertPropertyMappingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertPropertyMapping)(nil)).Elem()
}

func (o AlertPropertyMappingOutput) ToAlertPropertyMappingOutput() AlertPropertyMappingOutput {
	return o
}

func (o AlertPropertyMappingOutput) ToAlertPropertyMappingOutputWithContext(ctx context.Context) AlertPropertyMappingOutput {
	return o
}

// The V3 alert property
func (o AlertPropertyMappingOutput) AlertProperty() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertPropertyMapping) *string { return v.AlertProperty }).(pulumi.StringPtrOutput)
}

// the column name to use to override this property
func (o AlertPropertyMappingOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertPropertyMapping) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type AlertPropertyMappingArrayOutput struct{ *pulumi.OutputState }

func (AlertPropertyMappingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AlertPropertyMapping)(nil)).Elem()
}

func (o AlertPropertyMappingArrayOutput) ToAlertPropertyMappingArrayOutput() AlertPropertyMappingArrayOutput {
	return o
}

func (o AlertPropertyMappingArrayOutput) ToAlertPropertyMappingArrayOutputWithContext(ctx context.Context) AlertPropertyMappingArrayOutput {
	return o
}

func (o AlertPropertyMappingArrayOutput) Index(i pulumi.IntInput) AlertPropertyMappingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AlertPropertyMapping {
		return vs[0].([]AlertPropertyMapping)[vs[1].(int)]
	}).(AlertPropertyMappingOutput)
}

// A single alert property mapping to override
type AlertPropertyMappingResponse struct {
	// The V3 alert property
	AlertProperty *string `pulumi:"alertProperty"`
	// the column name to use to override this property
	Value *string `pulumi:"value"`
}

// A single alert property mapping to override
type AlertPropertyMappingResponseOutput struct{ *pulumi.OutputState }

func (AlertPropertyMappingResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertPropertyMappingResponse)(nil)).Elem()
}

func (o AlertPropertyMappingResponseOutput) ToAlertPropertyMappingResponseOutput() AlertPropertyMappingResponseOutput {
	return o
}

func (o AlertPropertyMappingResponseOutput) ToAlertPropertyMappingResponseOutputWithContext(ctx context.Context) AlertPropertyMappingResponseOutput {
	return o
}

// The V3 alert property
func (o AlertPropertyMappingResponseOutput) AlertProperty() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertPropertyMappingResponse) *string { return v.AlertProperty }).(pulumi.StringPtrOutput)
}

// the column name to use to override this property
func (o AlertPropertyMappingResponseOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertPropertyMappingResponse) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type AlertPropertyMappingResponseArrayOutput struct{ *pulumi.OutputState }

func (AlertPropertyMappingResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AlertPropertyMappingResponse)(nil)).Elem()
}

func (o AlertPropertyMappingResponseArrayOutput) ToAlertPropertyMappingResponseArrayOutput() AlertPropertyMappingResponseArrayOutput {
	return o
}

func (o AlertPropertyMappingResponseArrayOutput) ToAlertPropertyMappingResponseArrayOutputWithContext(ctx context.Context) AlertPropertyMappingResponseArrayOutput {
	return o
}

func (o AlertPropertyMappingResponseArrayOutput) Index(i pulumi.IntInput) AlertPropertyMappingResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AlertPropertyMappingResponse {
		return vs[0].([]AlertPropertyMappingResponse)[vs[1].(int)]
	}).(AlertPropertyMappingResponseOutput)
}

// Alerts data type for data connectors.
type AlertsDataTypeOfDataConnector struct {
	// Alerts data type connection.
	Alerts *DataConnectorDataTypeCommon `pulumi:"alerts"`
}

// AlertsDataTypeOfDataConnectorInput is an input type that accepts AlertsDataTypeOfDataConnectorArgs and AlertsDataTypeOfDataConnectorOutput values.
// You can construct a concrete instance of `AlertsDataTypeOfDataConnectorInput` via:
//
//	AlertsDataTypeOfDataConnectorArgs{...}
type AlertsDataTypeOfDataConnectorInput interface {
	pulumi.Input

	ToAlertsDataTypeOfDataConnectorOutput() AlertsDataTypeOfDataConnectorOutput
	ToAlertsDataTypeOfDataConnectorOutputWithContext(context.Context) AlertsDataTypeOfDataConnectorOutput
}

// Alerts data type for data connectors.
type AlertsDataTypeOfDataConnectorArgs struct {
	// Alerts data type connection.
	Alerts DataConnectorDataTypeCommonPtrInput `pulumi:"alerts"`
}

func (AlertsDataTypeOfDataConnectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertsDataTypeOfDataConnector)(nil)).Elem()
}

func (i AlertsDataTypeOfDataConnectorArgs) ToAlertsDataTypeOfDataConnectorOutput() AlertsDataTypeOfDataConnectorOutput {
	return i.ToAlertsDataTypeOfDataConnectorOutputWithContext(context.Background())
}

func (i AlertsDataTypeOfDataConnectorArgs) ToAlertsDataTypeOfDataConnectorOutputWithContext(ctx context.Context) AlertsDataTypeOfDataConnectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertsDataTypeOfDataConnectorOutput)
}

func (i AlertsDataTypeOfDataConnectorArgs) ToAlertsDataTypeOfDataConnectorPtrOutput() AlertsDataTypeOfDataConnectorPtrOutput {
	return i.ToAlertsDataTypeOfDataConnectorPtrOutputWithContext(context.Background())
}

func (i AlertsDataTypeOfDataConnectorArgs) ToAlertsDataTypeOfDataConnectorPtrOutputWithContext(ctx context.Context) AlertsDataTypeOfDataConnectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertsDataTypeOfDataConnectorOutput).ToAlertsDataTypeOfDataConnectorPtrOutputWithContext(ctx)
}

// AlertsDataTypeOfDataConnectorPtrInput is an input type that accepts AlertsDataTypeOfDataConnectorArgs, AlertsDataTypeOfDataConnectorPtr and AlertsDataTypeOfDataConnectorPtrOutput values.
// You can construct a concrete instance of `AlertsDataTypeOfDataConnectorPtrInput` via:
//
//	        AlertsDataTypeOfDataConnectorArgs{...}
//
//	or:
//
//	        nil
type AlertsDataTypeOfDataConnectorPtrInput interface {
	pulumi.Input

	ToAlertsDataTypeOfDataConnectorPtrOutput() AlertsDataTypeOfDataConnectorPtrOutput
	ToAlertsDataTypeOfDataConnectorPtrOutputWithContext(context.Context) AlertsDataTypeOfDataConnectorPtrOutput
}

type alertsDataTypeOfDataConnectorPtrType AlertsDataTypeOfDataConnectorArgs

func AlertsDataTypeOfDataConnectorPtr(v *AlertsDataTypeOfDataConnectorArgs) AlertsDataTypeOfDataConnectorPtrInput {
	return (*alertsDataTypeOfDataConnectorPtrType)(v)
}

func (*alertsDataTypeOfDataConnectorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AlertsDataTypeOfDataConnector)(nil)).Elem()
}

func (i *alertsDataTypeOfDataConnectorPtrType) ToAlertsDataTypeOfDataConnectorPtrOutput() AlertsDataTypeOfDataConnectorPtrOutput {
	return i.ToAlertsDataTypeOfDataConnectorPtrOutputWithContext(context.Background())
}

func (i *alertsDataTypeOfDataConnectorPtrType) ToAlertsDataTypeOfDataConnectorPtrOutputWithContext(ctx context.Context) AlertsDataTypeOfDataConnectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertsDataTypeOfDataConnectorPtrOutput)
}

// Alerts data type for data connectors.
type AlertsDataTypeOfDataConnectorOutput struct{ *pulumi.OutputState }

func (AlertsDataTypeOfDataConnectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertsDataTypeOfDataConnector)(nil)).Elem()
}

func (o AlertsDataTypeOfDataConnectorOutput) ToAlertsDataTypeOfDataConnectorOutput() AlertsDataTypeOfDataConnectorOutput {
	return o
}

func (o AlertsDataTypeOfDataConnectorOutput) ToAlertsDataTypeOfDataConnectorOutputWithContext(ctx context.Context) AlertsDataTypeOfDataConnectorOutput {
	return o
}

func (o AlertsDataTypeOfDataConnectorOutput) ToAlertsDataTypeOfDataConnectorPtrOutput() AlertsDataTypeOfDataConnectorPtrOutput {
	return o.ToAlertsDataTypeOfDataConnectorPtrOutputWithContext(context.Background())
}

func (o AlertsDataTypeOfDataConnectorOutput) ToAlertsDataTypeOfDataConnectorPtrOutputWithContext(ctx context.Context) AlertsDataTypeOfDataConnectorPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AlertsDataTypeOfDataConnector) *AlertsDataTypeOfDataConnector {
		return &v
	}).(AlertsDataTypeOfDataConnectorPtrOutput)
}

// Alerts data type connection.
func (o AlertsDataTypeOfDataConnectorOutput) Alerts() DataConnectorDataTypeCommonPtrOutput {
	return o.ApplyT(func(v AlertsDataTypeOfDataConnector) *DataConnectorDataTypeCommon { return v.Alerts }).(DataConnectorDataTypeCommonPtrOutput)
}

type AlertsDataTypeOfDataConnectorPtrOutput struct{ *pulumi.OutputState }

func (AlertsDataTypeOfDataConnectorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AlertsDataTypeOfDataConnector)(nil)).Elem()
}

func (o AlertsDataTypeOfDataConnectorPtrOutput) ToAlertsDataTypeOfDataConnectorPtrOutput() AlertsDataTypeOfDataConnectorPtrOutput {
	return o
}

func (o AlertsDataTypeOfDataConnectorPtrOutput) ToAlertsDataTypeOfDataConnectorPtrOutputWithContext(ctx context.Context) AlertsDataTypeOfDataConnectorPtrOutput {
	return o
}

func (o AlertsDataTypeOfDataConnectorPtrOutput) Elem() AlertsDataTypeOfDataConnectorOutput {
	return o.ApplyT(func(v *AlertsDataTypeOfDataConnector) AlertsDataTypeOfDataConnector {
		if v != nil {
			return *v
		}
		var ret AlertsDataTypeOfDataConnector
		return ret
	}).(AlertsDataTypeOfDataConnectorOutput)
}

// Alerts data type connection.
func (o AlertsDataTypeOfDataConnectorPtrOutput) Alerts() DataConnectorDataTypeCommonPtrOutput {
	return o.ApplyT(func(v *AlertsDataTypeOfDataConnector) *DataConnectorDataTypeCommon {
		if v == nil {
			return nil
		}
		return v.Alerts
	}).(DataConnectorDataTypeCommonPtrOutput)
}

// Alerts data type for data connectors.
type AlertsDataTypeOfDataConnectorResponse struct {
	// Alerts data type connection.
	Alerts *DataConnectorDataTypeCommonResponse `pulumi:"alerts"`
}

// Alerts data type for data connectors.
type AlertsDataTypeOfDataConnectorResponseOutput struct{ *pulumi.OutputState }

func (AlertsDataTypeOfDataConnectorResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertsDataTypeOfDataConnectorResponse)(nil)).Elem()
}

func (o AlertsDataTypeOfDataConnectorResponseOutput) ToAlertsDataTypeOfDataConnectorResponseOutput() AlertsDataTypeOfDataConnectorResponseOutput {
	return o
}

func (o AlertsDataTypeOfDataConnectorResponseOutput) ToAlertsDataTypeOfDataConnectorResponseOutputWithContext(ctx context.Context) AlertsDataTypeOfDataConnectorResponseOutput {
	return o
}

// Alerts data type connection.
func (o AlertsDataTypeOfDataConnectorResponseOutput) Alerts() DataConnectorDataTypeCommonResponsePtrOutput {
	return o.ApplyT(func(v AlertsDataTypeOfDataConnectorResponse) *DataConnectorDataTypeCommonResponse { return v.Alerts }).(DataConnectorDataTypeCommonResponsePtrOutput)
}

type AlertsDataTypeOfDataConnectorResponsePtrOutput struct{ *pulumi.OutputState }

func (AlertsDataTypeOfDataConnectorResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AlertsDataTypeOfDataConnectorResponse)(nil)).Elem()
}

func (o AlertsDataTypeOfDataConnectorResponsePtrOutput) ToAlertsDataTypeOfDataConnectorResponsePtrOutput() AlertsDataTypeOfDataConnectorResponsePtrOutput {
	return o
}

func (o AlertsDataTypeOfDataConnectorResponsePtrOutput) ToAlertsDataTypeOfDataConnectorResponsePtrOutputWithContext(ctx context.Context) AlertsDataTypeOfDataConnectorResponsePtrOutput {
	return o
}

func (o AlertsDataTypeOfDataConnectorResponsePtrOutput) Elem() AlertsDataTypeOfDataConnectorResponseOutput {
	return o.ApplyT(func(v *AlertsDataTypeOfDataConnectorResponse) AlertsDataTypeOfDataConnectorResponse {
		if v != nil {
			return *v
		}
		var ret AlertsDataTypeOfDataConnectorResponse
		return ret
	}).(AlertsDataTypeOfDataConnectorResponseOutput)
}

// Alerts data type connection.
func (o AlertsDataTypeOfDataConnectorResponsePtrOutput) Alerts() DataConnectorDataTypeCommonResponsePtrOutput {
	return o.ApplyT(func(v *AlertsDataTypeOfDataConnectorResponse) *DataConnectorDataTypeCommonResponse {
		if v == nil {
			return nil
		}
		return v.Alerts
	}).(DataConnectorDataTypeCommonResponsePtrOutput)
}

// Model for authentication with the API Key. Will result in additional header on the request (default behavior) to the remote server: 'ApiKeyName: ApiKeyIdentifier ApiKey'. If 'IsApiKeyInPostPayload' is true it will send it in the body of the request and not the header.
type ApiKeyAuthModel struct {
	// API Key for the user secret key credential
	ApiKey string `pulumi:"apiKey"`
	// API Key Identifier
	ApiKeyIdentifier *string `pulumi:"apiKeyIdentifier"`
	// API Key name
	ApiKeyName string `pulumi:"apiKeyName"`
	// Flag to indicate if API key is set in HTTP POST payload
	IsApiKeyInPostPayload *bool `pulumi:"isApiKeyInPostPayload"`
	// Type of paging
	// Expected value is 'APIKey'.
	Type string `pulumi:"type"`
}

// ApiKeyAuthModelInput is an input type that accepts ApiKeyAuthModelArgs and ApiKeyAuthModelOutput values.
// You can construct a concrete instance of `ApiKeyAuthModelInput` via:
//
//	ApiKeyAuthModelArgs{...}
type ApiKeyAuthModelInput interface {
	pulumi.Input

	ToApiKeyAuthModelOutput() ApiKeyAuthModelOutput
	ToApiKeyAuthModelOutputWithContext(context.Context) ApiKeyAuthModelOutput
}

// Model for authentication with the API Key. Will result in additional header on the request (default behavior) to the remote server: 'ApiKeyName: ApiKeyIdentifier ApiKey'. If 'IsApiKeyInPostPayload' is true it will send it in the body of the request and not the header.
type ApiKeyAuthModelArgs struct {
	// API Key for the user secret key credential
	ApiKey pulumi.StringInput `pulumi:"apiKey"`
	// API Key Identifier
	ApiKeyIdentifier pulumi.StringPtrInput `pulumi:"apiKeyIdentifier"`
	// API Key name
	ApiKeyName pulumi.StringInput `pulumi:"apiKeyName"`
	// Flag to indicate if API key is set in HTTP POST payload
	IsApiKeyInPostPayload pulumi.BoolPtrInput `pulumi:"isApiKeyInPostPayload"`
	// Type of paging
	// Expected value is 'APIKey'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ApiKeyAuthModelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiKeyAuthModel)(nil)).Elem()
}

func (i ApiKeyAuthModelArgs) ToApiKeyAuthModelOutput() ApiKeyAuthModelOutput {
	return i.ToApiKeyAuthModelOutputWithContext(context.Background())
}

func (i ApiKeyAuthModelArgs) ToApiKeyAuthModelOutputWithContext(ctx context.Context) ApiKeyAuthModelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiKeyAuthModelOutput)
}

// Model for authentication with the API Key. Will result in additional header on the request (default behavior) to the remote server: 'ApiKeyName: ApiKeyIdentifier ApiKey'. If 'IsApiKeyInPostPayload' is true it will send it in the body of the request and not the header.
type ApiKeyAuthModelOutput struct{ *pulumi.OutputState }

func (ApiKeyAuthModelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiKeyAuthModel)(nil)).Elem()
}

func (o ApiKeyAuthModelOutput) ToApiKeyAuthModelOutput() ApiKeyAuthModelOutput {
	return o
}

func (o ApiKeyAuthModelOutput) ToApiKeyAuthModelOutputWithContext(ctx context.Context) ApiKeyAuthModelOutput {
	return o
}

// API Key for the user secret key credential
func (o ApiKeyAuthModelOutput) ApiKey() pulumi.StringOutput {
	return o.ApplyT(func(v ApiKeyAuthModel) string { return v.ApiKey }).(pulumi.StringOutput)
}

// API Key Identifier
func (o ApiKeyAuthModelOutput) ApiKeyIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiKeyAuthModel) *string { return v.ApiKeyIdentifier }).(pulumi.StringPtrOutput)
}

// API Key name
func (o ApiKeyAuthModelOutput) ApiKeyName() pulumi.StringOutput {
	return o.ApplyT(func(v ApiKeyAuthModel) string { return v.ApiKeyName }).(pulumi.StringOutput)
}

// Flag to indicate if API key is set in HTTP POST payload
func (o ApiKeyAuthModelOutput) IsApiKeyInPostPayload() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApiKeyAuthModel) *bool { return v.IsApiKeyInPostPayload }).(pulumi.BoolPtrOutput)
}

// Type of paging
// Expected value is 'APIKey'.
func (o ApiKeyAuthModelOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ApiKeyAuthModel) string { return v.Type }).(pulumi.StringOutput)
}

// Model for authentication with the API Key. Will result in additional header on the request (default behavior) to the remote server: 'ApiKeyName: ApiKeyIdentifier ApiKey'. If 'IsApiKeyInPostPayload' is true it will send it in the body of the request and not the header.
type ApiKeyAuthModelResponse struct {
	// API Key for the user secret key credential
	ApiKey string `pulumi:"apiKey"`
	// API Key Identifier
	ApiKeyIdentifier *string `pulumi:"apiKeyIdentifier"`
	// API Key name
	ApiKeyName string `pulumi:"apiKeyName"`
	// Flag to indicate if API key is set in HTTP POST payload
	IsApiKeyInPostPayload *bool `pulumi:"isApiKeyInPostPayload"`
	// Type of paging
	// Expected value is 'APIKey'.
	Type string `pulumi:"type"`
}

// Model for authentication with the API Key. Will result in additional header on the request (default behavior) to the remote server: 'ApiKeyName: ApiKeyIdentifier ApiKey'. If 'IsApiKeyInPostPayload' is true it will send it in the body of the request and not the header.
type ApiKeyAuthModelResponseOutput struct{ *pulumi.OutputState }

func (ApiKeyAuthModelResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiKeyAuthModelResponse)(nil)).Elem()
}

func (o ApiKeyAuthModelResponseOutput) ToApiKeyAuthModelResponseOutput() ApiKeyAuthModelResponseOutput {
	return o
}

func (o ApiKeyAuthModelResponseOutput) ToApiKeyAuthModelResponseOutputWithContext(ctx context.Context) ApiKeyAuthModelResponseOutput {
	return o
}

// API Key for the user secret key credential
func (o ApiKeyAuthModelResponseOutput) ApiKey() pulumi.StringOutput {
	return o.ApplyT(func(v ApiKeyAuthModelResponse) string { return v.ApiKey }).(pulumi.StringOutput)
}

// API Key Identifier
func (o ApiKeyAuthModelResponseOutput) ApiKeyIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiKeyAuthModelResponse) *string { return v.ApiKeyIdentifier }).(pulumi.StringPtrOutput)
}

// API Key name
func (o ApiKeyAuthModelResponseOutput) ApiKeyName() pulumi.StringOutput {
	return o.ApplyT(func(v ApiKeyAuthModelResponse) string { return v.ApiKeyName }).(pulumi.StringOutput)
}

// Flag to indicate if API key is set in HTTP POST payload
func (o ApiKeyAuthModelResponseOutput) IsApiKeyInPostPayload() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApiKeyAuthModelResponse) *bool { return v.IsApiKeyInPostPayload }).(pulumi.BoolPtrOutput)
}

// Type of paging
// Expected value is 'APIKey'.
func (o ApiKeyAuthModelResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ApiKeyAuthModelResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Describes an automation rule action to add a task to an incident
type AutomationRuleAddIncidentTaskAction struct {
	// Describes an automation rule action to add a task to an incident.
	ActionConfiguration *AddIncidentTaskActionProperties `pulumi:"actionConfiguration"`
	// The type of the automation rule action.
	// Expected value is 'AddIncidentTask'.
	ActionType string `pulumi:"actionType"`
	Order      int    `pulumi:"order"`
}

// AutomationRuleAddIncidentTaskActionInput is an input type that accepts AutomationRuleAddIncidentTaskActionArgs and AutomationRuleAddIncidentTaskActionOutput values.
// You can construct a concrete instance of `AutomationRuleAddIncidentTaskActionInput` via:
//
//	AutomationRuleAddIncidentTaskActionArgs{...}
type AutomationRuleAddIncidentTaskActionInput interface {
	pulumi.Input

	ToAutomationRuleAddIncidentTaskActionOutput() AutomationRuleAddIncidentTaskActionOutput
	ToAutomationRuleAddIncidentTaskActionOutputWithContext(context.Context) AutomationRuleAddIncidentTaskActionOutput
}

// Describes an automation rule action to add a task to an incident
type AutomationRuleAddIncidentTaskActionArgs struct {
	// Describes an automation rule action to add a task to an incident.
	ActionConfiguration AddIncidentTaskActionPropertiesPtrInput `pulumi:"actionConfiguration"`
	// The type of the automation rule action.
	// Expected value is 'AddIncidentTask'.
	ActionType pulumi.StringInput `pulumi:"actionType"`
	Order      pulumi.IntInput    `pulumi:"order"`
}

func (AutomationRuleAddIncidentTaskActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AutomationRuleAddIncidentTaskAction)(nil)).Elem()
}

func (i AutomationRuleAddIncidentTaskActionArgs) ToAutomationRuleAddIncidentTaskActionOutput() AutomationRuleAddIncidentTaskActionOutput {
	return i.ToAutomationRuleAddIncidentTaskActionOutputWithContext(context.Background())
}

func (i AutomationRuleAddIncidentTaskActionArgs) ToAutomationRuleAddIncidentTaskActionOutputWithContext(ctx context.Context) AutomationRuleAddIncidentTaskActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutomationRuleAddIncidentTaskActionOutput)
}

// Describes an automation rule action to add a task to an incident
type AutomationRuleAddIncidentTaskActionOutput struct{ *pulumi.OutputState }

func (AutomationRuleAddIncidentTaskActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutomationRuleAddIncidentTaskAction)(nil)).Elem()
}

func (o AutomationRuleAddIncidentTaskActionOutput) ToAutomationRuleAddIncidentTaskActionOutput() AutomationRuleAddIncidentTaskActionOutput {
	return o
}

func (o AutomationRuleAddIncidentTaskActionOutput) ToAutomationRuleAddIncidentTaskActionOutputWithContext(ctx context.Context) AutomationRuleAddIncidentTaskActionOutput {
	return o
}

// Describes an automation rule action to add a task to an incident.
func (o AutomationRuleAddIncidentTaskActionOutput) ActionConfiguration() AddIncidentTaskActionPropertiesPtrOutput {
	return o.ApplyT(func(v AutomationRuleAddIncidentTaskAction) *AddIncidentTaskActionProperties {
		return v.ActionConfiguration
	}).(AddIncidentTaskActionPropertiesPtrOutput)
}

// The type of the automation rule action.
// Expected value is 'AddIncidentTask'.
func (o AutomationRuleAddIncidentTaskActionOutput) ActionType() pulumi.StringOutput {
	return o.ApplyT(func(v AutomationRuleAddIncidentTaskAction) string { return v.ActionType }).(pulumi.StringOutput)
}

func (o AutomationRuleAddIncidentTaskActionOutput) Order() pulumi.IntOutput {
	return o.ApplyT(func(v AutomationRuleAddIncidentTaskAction) int { return v.Order }).(pulumi.IntOutput)
}

// Describes an automation rule action to add a task to an incident
type AutomationRuleAddIncidentTaskActionResponse struct {
	// Describes an automation rule action to add a task to an incident.
	ActionConfiguration *AddIncidentTaskActionPropertiesResponse `pulumi:"actionConfiguration"`
	// The type of the automation rule action.
	// Expected value is 'AddIncidentTask'.
	ActionType string `pulumi:"actionType"`
	Order      int    `pulumi:"order"`
}

// Describes an automation rule action to add a task to an incident
type AutomationRuleAddIncidentTaskActionResponseOutput struct{ *pulumi.OutputState }

func (AutomationRuleAddIncidentTaskActionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutomationRuleAddIncidentTaskActionResponse)(nil)).Elem()
}

func (o AutomationRuleAddIncidentTaskActionResponseOutput) ToAutomationRuleAddIncidentTaskActionResponseOutput() AutomationRuleAddIncidentTaskActionResponseOutput {
	return o
}

func (o AutomationRuleAddIncidentTaskActionResponseOutput) ToAutomationRuleAddIncidentTaskActionResponseOutputWithContext(ctx context.Context) AutomationRuleAddIncidentTaskActionResponseOutput {
	return o
}

// Describes an automation rule action to add a task to an incident.
func (o AutomationRuleAddIncidentTaskActionResponseOutput) ActionConfiguration() AddIncidentTaskActionPropertiesResponsePtrOutput {
	return o.ApplyT(func(v AutomationRuleAddIncidentTaskActionResponse) *AddIncidentTaskActionPropertiesResponse {
		return v.ActionConfiguration
	}).(AddIncidentTaskActionPropertiesResponsePtrOutput)
}

// The type of the automation rule action.
// Expected value is 'AddIncidentTask'.
func (o AutomationRuleAddIncidentTaskActionResponseOutput) ActionType() pulumi.StringOutput {
	return o.ApplyT(func(v AutomationRuleAddIncidentTaskActionResponse) string { return v.ActionType }).(pulumi.StringOutput)
}

func (o AutomationRuleAddIncidentTaskActionResponseOutput) Order() pulumi.IntOutput {
	return o.ApplyT(func(v AutomationRuleAddIncidentTaskActionResponse) int { return v.Order }).(pulumi.IntOutput)
}

// Describes an automation rule condition with boolean operators.
type AutomationRuleBooleanCondition struct {
	InnerConditions []interface{} `pulumi:"innerConditions"`
	// Describes a boolean condition operator.
	Operator *string `pulumi:"operator"`
}

// AutomationRuleBooleanConditionInput is an input type that accepts AutomationRuleBooleanConditionArgs and AutomationRuleBooleanConditionOutput values.
// You can construct a concrete instance of `AutomationRuleBooleanConditionInput` via:
//
//	AutomationRuleBooleanConditionArgs{...}
type AutomationRuleBooleanConditionInput interface {
	pulumi.Input

	ToAutomationRuleBooleanConditionOutput() AutomationRuleBooleanConditionOutput
	ToAutomationRuleBooleanConditionOutputWithContext(context.Context) AutomationRuleBooleanConditionOutput
}

// Describes an automation rule condition with boolean operators.
type AutomationRuleBooleanConditionArgs struct {
	InnerConditions pulumi.ArrayInput `pulumi:"innerConditions"`
	// Describes a boolean condition operator.
	Operator pulumi.StringPtrInput `pulumi:"operator"`
}

func (AutomationRuleBooleanConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AutomationRuleBooleanCondition)(nil)).Elem()
}

func (i AutomationRuleBooleanConditionArgs) ToAutomationRuleBooleanConditionOutput() AutomationRuleBooleanConditionOutput {
	return i.ToAutomationRuleBooleanConditionOutputWithContext(context.Background())
}

func (i AutomationRuleBooleanConditionArgs) ToAutomationRuleBooleanConditionOutputWithContext(ctx context.Context) AutomationRuleBooleanConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutomationRuleBooleanConditionOutput)
}

func (i AutomationRuleBooleanConditionArgs) ToAutomationRuleBooleanConditionPtrOutput() AutomationRuleBooleanConditionPtrOutput {
	return i.ToAutomationRuleBooleanConditionPtrOutputWithContext(context.Background())
}

func (i AutomationRuleBooleanConditionArgs) ToAutomationRuleBooleanConditionPtrOutputWithContext(ctx context.Context) AutomationRuleBooleanConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutomationRuleBooleanConditionOutput).ToAutomationRuleBooleanConditionPtrOutputWithContext(ctx)
}

// AutomationRuleBooleanConditionPtrInput is an input type that accepts AutomationRuleBooleanConditionArgs, AutomationRuleBooleanConditionPtr and AutomationRuleBooleanConditionPtrOutput values.
// You can construct a concrete instance of `AutomationRuleBooleanConditionPtrInput` via:
//
//	        AutomationRuleBooleanConditionArgs{...}
//
//	or:
//
//	        nil
type AutomationRuleBooleanConditionPtrInput interface {
	pulumi.Input

	ToAutomationRuleBooleanConditionPtrOutput() AutomationRuleBooleanConditionPtrOutput
	ToAutomationRuleBooleanConditionPtrOutputWithContext(context.Context) AutomationRuleBooleanConditionPtrOutput
}

type automationRuleBooleanConditionPtrType AutomationRuleBooleanConditionArgs

func AutomationRuleBooleanConditionPtr(v *AutomationRuleBooleanConditionArgs) AutomationRuleBooleanConditionPtrInput {
	return (*automationRuleBooleanConditionPtrType)(v)
}

func (*automationRuleBooleanConditionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AutomationRuleBooleanCondition)(nil)).Elem()
}

func (i *automationRuleBooleanConditionPtrType) ToAutomationRuleBooleanConditionPtrOutput() AutomationRuleBooleanConditionPtrOutput {
	return i.ToAutomationRuleBooleanConditionPtrOutputWithContext(context.Background())
}

func (i *automationRuleBooleanConditionPtrType) ToAutomationRuleBooleanConditionPtrOutputWithContext(ctx context.Context) AutomationRuleBooleanConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutomationRuleBooleanConditionPtrOutput)
}

// Describes an automation rule condition with boolean operators.
type AutomationRuleBooleanConditionOutput struct{ *pulumi.OutputState }

func (AutomationRuleBooleanConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutomationRuleBooleanCondition)(nil)).Elem()
}

func (o AutomationRuleBooleanConditionOutput) ToAutomationRuleBooleanConditionOutput() AutomationRuleBooleanConditionOutput {
	return o
}

func (o AutomationRuleBooleanConditionOutput) ToAutomationRuleBooleanConditionOutputWithContext(ctx context.Context) AutomationRuleBooleanConditionOutput {
	return o
}

func (o AutomationRuleBooleanConditionOutput) ToAutomationRuleBooleanConditionPtrOutput() AutomationRuleBooleanConditionPtrOutput {
	return o.ToAutomationRuleBooleanConditionPtrOutputWithContext(context.Background())
}

func (o AutomationRuleBooleanConditionOutput) ToAutomationRuleBooleanConditionPtrOutputWithContext(ctx context.Context) AutomationRuleBooleanConditionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AutomationRuleBooleanCondition) *AutomationRuleBooleanCondition {
		return &v
	}).(AutomationRuleBooleanConditionPtrOutput)
}

func (o AutomationRuleBooleanConditionOutput) InnerConditions() pulumi.ArrayOutput {
	return o.ApplyT(func(v AutomationRuleBooleanCondition) []interface{} { return v.InnerConditions }).(pulumi.ArrayOutput)
}

// Describes a boolean condition operator.
func (o AutomationRuleBooleanConditionOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AutomationRuleBooleanCondition) *string { return v.Operator }).(pulumi.StringPtrOutput)
}

type AutomationRuleBooleanConditionPtrOutput struct{ *pulumi.OutputState }

func (AutomationRuleBooleanConditionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AutomationRuleBooleanCondition)(nil)).Elem()
}

func (o AutomationRuleBooleanConditionPtrOutput) ToAutomationRuleBooleanConditionPtrOutput() AutomationRuleBooleanConditionPtrOutput {
	return o
}

func (o AutomationRuleBooleanConditionPtrOutput) ToAutomationRuleBooleanConditionPtrOutputWithContext(ctx context.Context) AutomationRuleBooleanConditionPtrOutput {
	return o
}

func (o AutomationRuleBooleanConditionPtrOutput) Elem() AutomationRuleBooleanConditionOutput {
	return o.ApplyT(func(v *AutomationRuleBooleanCondition) AutomationRuleBooleanCondition {
		if v != nil {
			return *v
		}
		var ret AutomationRuleBooleanCondition
		return ret
	}).(AutomationRuleBooleanConditionOutput)
}

func (o AutomationRuleBooleanConditionPtrOutput) InnerConditions() pulumi.ArrayOutput {
	return o.ApplyT(func(v *AutomationRuleBooleanCondition) []interface{} {
		if v == nil {
			return nil
		}
		return v.InnerConditions
	}).(pulumi.ArrayOutput)
}

// Describes a boolean condition operator.
func (o AutomationRuleBooleanConditionPtrOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AutomationRuleBooleanCondition) *string {
		if v == nil {
			return nil
		}
		return v.Operator
	}).(pulumi.StringPtrOutput)
}

// Describes an automation rule condition with boolean operators.
type AutomationRuleBooleanConditionResponse struct {
	InnerConditions []interface{} `pulumi:"innerConditions"`
	// Describes a boolean condition operator.
	Operator *string `pulumi:"operator"`
}

// Describes an automation rule condition with boolean operators.
type AutomationRuleBooleanConditionResponseOutput struct{ *pulumi.OutputState }

func (AutomationRuleBooleanConditionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutomationRuleBooleanConditionResponse)(nil)).Elem()
}

func (o AutomationRuleBooleanConditionResponseOutput) ToAutomationRuleBooleanConditionResponseOutput() AutomationRuleBooleanConditionResponseOutput {
	return o
}

func (o AutomationRuleBooleanConditionResponseOutput) ToAutomationRuleBooleanConditionResponseOutputWithContext(ctx context.Context) AutomationRuleBooleanConditionResponseOutput {
	return o
}

func (o AutomationRuleBooleanConditionResponseOutput) InnerConditions() pulumi.ArrayOutput {
	return o.ApplyT(func(v AutomationRuleBooleanConditionResponse) []interface{} { return v.InnerConditions }).(pulumi.ArrayOutput)
}

// Describes a boolean condition operator.
func (o AutomationRuleBooleanConditionResponseOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AutomationRuleBooleanConditionResponse) *string { return v.Operator }).(pulumi.StringPtrOutput)
}

type AutomationRuleBooleanConditionResponsePtrOutput struct{ *pulumi.OutputState }

func (AutomationRuleBooleanConditionResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AutomationRuleBooleanConditionResponse)(nil)).Elem()
}

func (o AutomationRuleBooleanConditionResponsePtrOutput) ToAutomationRuleBooleanConditionResponsePtrOutput() AutomationRuleBooleanConditionResponsePtrOutput {
	return o
}

func (o AutomationRuleBooleanConditionResponsePtrOutput) ToAutomationRuleBooleanConditionResponsePtrOutputWithContext(ctx context.Context) AutomationRuleBooleanConditionResponsePtrOutput {
	return o
}

func (o AutomationRuleBooleanConditionResponsePtrOutput) Elem() AutomationRuleBooleanConditionResponseOutput {
	return o.ApplyT(func(v *AutomationRuleBooleanConditionResponse) AutomationRuleBooleanConditionResponse {
		if v != nil {
			return *v
		}
		var ret AutomationRuleBooleanConditionResponse
		return ret
	}).(AutomationRuleBooleanConditionResponseOutput)
}

func (o AutomationRuleBooleanConditionResponsePtrOutput) InnerConditions() pulumi.ArrayOutput {
	return o.ApplyT(func(v *AutomationRuleBooleanConditionResponse) []interface{} {
		if v == nil {
			return nil
		}
		return v.InnerConditions
	}).(pulumi.ArrayOutput)
}

// Describes a boolean condition operator.
func (o AutomationRuleBooleanConditionResponsePtrOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AutomationRuleBooleanConditionResponse) *string {
		if v == nil {
			return nil
		}
		return v.Operator
	}).(pulumi.StringPtrOutput)
}

// Describes an automation rule action to modify an object's properties
type AutomationRuleModifyPropertiesAction struct {
	ActionConfiguration *IncidentPropertiesAction `pulumi:"actionConfiguration"`
	// The type of the automation rule action.
	// Expected value is 'ModifyProperties'.
	ActionType string `pulumi:"actionType"`
	Order      int    `pulumi:"order"`
}

// AutomationRuleModifyPropertiesActionInput is an input type that accepts AutomationRuleModifyPropertiesActionArgs and AutomationRuleModifyPropertiesActionOutput values.
// You can construct a concrete instance of `AutomationRuleModifyPropertiesActionInput` via:
//
//	AutomationRuleModifyPropertiesActionArgs{...}
type AutomationRuleModifyPropertiesActionInput interface {
	pulumi.Input

	ToAutomationRuleModifyPropertiesActionOutput() AutomationRuleModifyPropertiesActionOutput
	ToAutomationRuleModifyPropertiesActionOutputWithContext(context.Context) AutomationRuleModifyPropertiesActionOutput
}

// Describes an automation rule action to modify an object's properties
type AutomationRuleModifyPropertiesActionArgs struct {
	ActionConfiguration IncidentPropertiesActionPtrInput `pulumi:"actionConfiguration"`
	// The type of the automation rule action.
	// Expected value is 'ModifyProperties'.
	ActionType pulumi.StringInput `pulumi:"actionType"`
	Order      pulumi.IntInput    `pulumi:"order"`
}

func (AutomationRuleModifyPropertiesActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AutomationRuleModifyPropertiesAction)(nil)).Elem()
}

func (i AutomationRuleModifyPropertiesActionArgs) ToAutomationRuleModifyPropertiesActionOutput() AutomationRuleModifyPropertiesActionOutput {
	return i.ToAutomationRuleModifyPropertiesActionOutputWithContext(context.Background())
}

func (i AutomationRuleModifyPropertiesActionArgs) ToAutomationRuleModifyPropertiesActionOutputWithContext(ctx context.Context) AutomationRuleModifyPropertiesActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutomationRuleModifyPropertiesActionOutput)
}

// Describes an automation rule action to modify an object's properties
type AutomationRuleModifyPropertiesActionOutput struct{ *pulumi.OutputState }

func (AutomationRuleModifyPropertiesActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutomationRuleModifyPropertiesAction)(nil)).Elem()
}

func (o AutomationRuleModifyPropertiesActionOutput) ToAutomationRuleModifyPropertiesActionOutput() AutomationRuleModifyPropertiesActionOutput {
	return o
}

func (o AutomationRuleModifyPropertiesActionOutput) ToAutomationRuleModifyPropertiesActionOutputWithContext(ctx context.Context) AutomationRuleModifyPropertiesActionOutput {
	return o
}

func (o AutomationRuleModifyPropertiesActionOutput) ActionConfiguration() IncidentPropertiesActionPtrOutput {
	return o.ApplyT(func(v AutomationRuleModifyPropertiesAction) *IncidentPropertiesAction { return v.ActionConfiguration }).(IncidentPropertiesActionPtrOutput)
}

// The type of the automation rule action.
// Expected value is 'ModifyProperties'.
func (o AutomationRuleModifyPropertiesActionOutput) ActionType() pulumi.StringOutput {
	return o.ApplyT(func(v AutomationRuleModifyPropertiesAction) string { return v.ActionType }).(pulumi.StringOutput)
}

func (o AutomationRuleModifyPropertiesActionOutput) Order() pulumi.IntOutput {
	return o.ApplyT(func(v AutomationRuleModifyPropertiesAction) int { return v.Order }).(pulumi.IntOutput)
}

// Describes an automation rule action to modify an object's properties
type AutomationRuleModifyPropertiesActionResponse struct {
	ActionConfiguration *IncidentPropertiesActionResponse `pulumi:"actionConfiguration"`
	// The type of the automation rule action.
	// Expected value is 'ModifyProperties'.
	ActionType string `pulumi:"actionType"`
	Order      int    `pulumi:"order"`
}

// Describes an automation rule action to modify an object's properties
type AutomationRuleModifyPropertiesActionResponseOutput struct{ *pulumi.OutputState }

func (AutomationRuleModifyPropertiesActionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutomationRuleModifyPropertiesActionResponse)(nil)).Elem()
}

func (o AutomationRuleModifyPropertiesActionResponseOutput) ToAutomationRuleModifyPropertiesActionResponseOutput() AutomationRuleModifyPropertiesActionResponseOutput {
	return o
}

func (o AutomationRuleModifyPropertiesActionResponseOutput) ToAutomationRuleModifyPropertiesActionResponseOutputWithContext(ctx context.Context) AutomationRuleModifyPropertiesActionResponseOutput {
	return o
}

func (o AutomationRuleModifyPropertiesActionResponseOutput) ActionConfiguration() IncidentPropertiesActionResponsePtrOutput {
	return o.ApplyT(func(v AutomationRuleModifyPropertiesActionResponse) *IncidentPropertiesActionResponse {
		return v.ActionConfiguration
	}).(IncidentPropertiesActionResponsePtrOutput)
}

// The type of the automation rule action.
// Expected value is 'ModifyProperties'.
func (o AutomationRuleModifyPropertiesActionResponseOutput) ActionType() pulumi.StringOutput {
	return o.ApplyT(func(v AutomationRuleModifyPropertiesActionResponse) string { return v.ActionType }).(pulumi.StringOutput)
}

func (o AutomationRuleModifyPropertiesActionResponseOutput) Order() pulumi.IntOutput {
	return o.ApplyT(func(v AutomationRuleModifyPropertiesActionResponse) int { return v.Order }).(pulumi.IntOutput)
}

type AutomationRulePropertyArrayChangedValuesCondition struct {
	ArrayType  *string `pulumi:"arrayType"`
	ChangeType *string `pulumi:"changeType"`
}

// AutomationRulePropertyArrayChangedValuesConditionInput is an input type that accepts AutomationRulePropertyArrayChangedValuesConditionArgs and AutomationRulePropertyArrayChangedValuesConditionOutput values.
// You can construct a concrete instance of `AutomationRulePropertyArrayChangedValuesConditionInput` via:
//
//	AutomationRulePropertyArrayChangedValuesConditionArgs{...}
type AutomationRulePropertyArrayChangedValuesConditionInput interface {
	pulumi.Input

	ToAutomationRulePropertyArrayChangedValuesConditionOutput() AutomationRulePropertyArrayChangedValuesConditionOutput
	ToAutomationRulePropertyArrayChangedValuesConditionOutputWithContext(context.Context) AutomationRulePropertyArrayChangedValuesConditionOutput
}

type AutomationRulePropertyArrayChangedValuesConditionArgs struct {
	ArrayType  pulumi.StringPtrInput `pulumi:"arrayType"`
	ChangeType pulumi.StringPtrInput `pulumi:"changeType"`
}

func (AutomationRulePropertyArrayChangedValuesConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AutomationRulePropertyArrayChangedValuesCondition)(nil)).Elem()
}

func (i AutomationRulePropertyArrayChangedValuesConditionArgs) ToAutomationRulePropertyArrayChangedValuesConditionOutput() AutomationRulePropertyArrayChangedValuesConditionOutput {
	return i.ToAutomationRulePropertyArrayChangedValuesConditionOutputWithContext(context.Background())
}

func (i AutomationRulePropertyArrayChangedValuesConditionArgs) ToAutomationRulePropertyArrayChangedValuesConditionOutputWithContext(ctx context.Context) AutomationRulePropertyArrayChangedValuesConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutomationRulePropertyArrayChangedValuesConditionOutput)
}

func (i AutomationRulePropertyArrayChangedValuesConditionArgs) ToAutomationRulePropertyArrayChangedValuesConditionPtrOutput() AutomationRulePropertyArrayChangedValuesConditionPtrOutput {
	return i.ToAutomationRulePropertyArrayChangedValuesConditionPtrOutputWithContext(context.Background())
}

func (i AutomationRulePropertyArrayChangedValuesConditionArgs) ToAutomationRulePropertyArrayChangedValuesConditionPtrOutputWithContext(ctx context.Context) AutomationRulePropertyArrayChangedValuesConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutomationRulePropertyArrayChangedValuesConditionOutput).ToAutomationRulePropertyArrayChangedValuesConditionPtrOutputWithContext(ctx)
}

// AutomationRulePropertyArrayChangedValuesConditionPtrInput is an input type that accepts AutomationRulePropertyArrayChangedValuesConditionArgs, AutomationRulePropertyArrayChangedValuesConditionPtr and AutomationRulePropertyArrayChangedValuesConditionPtrOutput values.
// You can construct a concrete instance of `AutomationRulePropertyArrayChangedValuesConditionPtrInput` via:
//
//	        AutomationRulePropertyArrayChangedValuesConditionArgs{...}
//
//	or:
//
//	        nil
type AutomationRulePropertyArrayChangedValuesConditionPtrInput interface {
	pulumi.Input

	ToAutomationRulePropertyArrayChangedValuesConditionPtrOutput() AutomationRulePropertyArrayChangedValuesConditionPtrOutput
	ToAutomationRulePropertyArrayChangedValuesConditionPtrOutputWithContext(context.Context) AutomationRulePropertyArrayChangedValuesConditionPtrOutput
}

type automationRulePropertyArrayChangedValuesConditionPtrType AutomationRulePropertyArrayChangedValuesConditionArgs

func AutomationRulePropertyArrayChangedValuesConditionPtr(v *AutomationRulePropertyArrayChangedValuesConditionArgs) AutomationRulePropertyArrayChangedValuesConditionPtrInput {
	return (*automationRulePropertyArrayChangedValuesConditionPtrType)(v)
}

func (*automationRulePropertyArrayChangedValuesConditionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AutomationRulePropertyArrayChangedValuesCondition)(nil)).Elem()
}

func (i *automationRulePropertyArrayChangedValuesConditionPtrType) ToAutomationRulePropertyArrayChangedValuesConditionPtrOutput() AutomationRulePropertyArrayChangedValuesConditionPtrOutput {
	return i.ToAutomationRulePropertyArrayChangedValuesConditionPtrOutputWithContext(context.Background())
}

func (i *automationRulePropertyArrayChangedValuesConditionPtrType) ToAutomationRulePropertyArrayChangedValuesConditionPtrOutputWithContext(ctx context.Context) AutomationRulePropertyArrayChangedValuesConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutomationRulePropertyArrayChangedValuesConditionPtrOutput)
}

type AutomationRulePropertyArrayChangedValuesConditionOutput struct{ *pulumi.OutputState }

func (AutomationRulePropertyArrayChangedValuesConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutomationRulePropertyArrayChangedValuesCondition)(nil)).Elem()
}

func (o AutomationRulePropertyArrayChangedValuesConditionOutput) ToAutomationRulePropertyArrayChangedValuesConditionOutput() AutomationRulePropertyArrayChangedValuesConditionOutput {
	return o
}

func (o AutomationRulePropertyArrayChangedValuesConditionOutput) ToAutomationRulePropertyArrayChangedValuesConditionOutputWithContext(ctx context.Context) AutomationRulePropertyArrayChangedValuesConditionOutput {
	return o
}

func (o AutomationRulePropertyArrayChangedValuesConditionOutput) ToAutomationRulePropertyArrayChangedValuesConditionPtrOutput() AutomationRulePropertyArrayChangedValuesConditionPtrOutput {
	return o.ToAutomationRulePropertyArrayChangedValuesConditionPtrOutputWithContext(context.Background())
}

func (o AutomationRulePropertyArrayChangedValuesConditionOutput) ToAutomationRulePropertyArrayChangedValuesConditionPtrOutputWithContext(ctx context.Context) AutomationRulePropertyArrayChangedValuesConditionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AutomationRulePropertyArrayChangedValuesCondition) *AutomationRulePropertyArrayChangedValuesCondition {
		return &v
	}).(AutomationRulePropertyArrayChangedValuesConditionPtrOutput)
}

func (o AutomationRulePropertyArrayChangedValuesConditionOutput) ArrayType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AutomationRulePropertyArrayChangedValuesCondition) *string { return v.ArrayType }).(pulumi.StringPtrOutput)
}

func (o AutomationRulePropertyArrayChangedValuesConditionOutput) ChangeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AutomationRulePropertyArrayChangedValuesCondition) *string { return v.ChangeType }).(pulumi.StringPtrOutput)
}

type AutomationRulePropertyArrayChangedValuesConditionPtrOutput struct{ *pulumi.OutputState }

func (AutomationRulePropertyArrayChangedValuesConditionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AutomationRulePropertyArrayChangedValuesCondition)(nil)).Elem()
}

func (o AutomationRulePropertyArrayChangedValuesConditionPtrOutput) ToAutomationRulePropertyArrayChangedValuesConditionPtrOutput() AutomationRulePropertyArrayChangedValuesConditionPtrOutput {
	return o
}

func (o AutomationRulePropertyArrayChangedValuesConditionPtrOutput) ToAutomationRulePropertyArrayChangedValuesConditionPtrOutputWithContext(ctx context.Context) AutomationRulePropertyArrayChangedValuesConditionPtrOutput {
	return o
}

func (o AutomationRulePropertyArrayChangedValuesConditionPtrOutput) Elem() AutomationRulePropertyArrayChangedValuesConditionOutput {
	return o.ApplyT(func(v *AutomationRulePropertyArrayChangedValuesCondition) AutomationRulePropertyArrayChangedValuesCondition {
		if v != nil {
			return *v
		}
		var ret AutomationRulePropertyArrayChangedValuesCondition
		return ret
	}).(AutomationRulePropertyArrayChangedValuesConditionOutput)
}

func (o AutomationRulePropertyArrayChangedValuesConditionPtrOutput) ArrayType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AutomationRulePropertyArrayChangedValuesCondition) *string {
		if v == nil {
			return nil
		}
		return v.ArrayType
	}).(pulumi.StringPtrOutput)
}

func (o AutomationRulePropertyArrayChangedValuesConditionPtrOutput) ChangeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AutomationRulePropertyArrayChangedValuesCondition) *string {
		if v == nil {
			return nil
		}
		return v.ChangeType
	}).(pulumi.StringPtrOutput)
}

type AutomationRulePropertyArrayChangedValuesConditionResponse struct {
	ArrayType  *string `pulumi:"arrayType"`
	ChangeType *string `pulumi:"changeType"`
}

type AutomationRulePropertyArrayChangedValuesConditionResponseOutput struct{ *pulumi.OutputState }

func (AutomationRulePropertyArrayChangedValuesConditionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutomationRulePropertyArrayChangedValuesConditionResponse)(nil)).Elem()
}

func (o AutomationRulePropertyArrayChangedValuesConditionResponseOutput) ToAutomationRulePropertyArrayChangedValuesConditionResponseOutput() AutomationRulePropertyArrayChangedValuesConditionResponseOutput {
	return o
}

func (o AutomationRulePropertyArrayChangedValuesConditionResponseOutput) ToAutomationRulePropertyArrayChangedValuesConditionResponseOutputWithContext(ctx context.Context) AutomationRulePropertyArrayChangedValuesConditionResponseOutput {
	return o
}

func (o AutomationRulePropertyArrayChangedValuesConditionResponseOutput) ArrayType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AutomationRulePropertyArrayChangedValuesConditionResponse) *string { return v.ArrayType }).(pulumi.StringPtrOutput)
}

func (o AutomationRulePropertyArrayChangedValuesConditionResponseOutput) ChangeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AutomationRulePropertyArrayChangedValuesConditionResponse) *string { return v.ChangeType }).(pulumi.StringPtrOutput)
}

type AutomationRulePropertyArrayChangedValuesConditionResponsePtrOutput struct{ *pulumi.OutputState }

func (AutomationRulePropertyArrayChangedValuesConditionResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AutomationRulePropertyArrayChangedValuesConditionResponse)(nil)).Elem()
}

func (o AutomationRulePropertyArrayChangedValuesConditionResponsePtrOutput) ToAutomationRulePropertyArrayChangedValuesConditionResponsePtrOutput() AutomationRulePropertyArrayChangedValuesConditionResponsePtrOutput {
	return o
}

func (o AutomationRulePropertyArrayChangedValuesConditionResponsePtrOutput) ToAutomationRulePropertyArrayChangedValuesConditionResponsePtrOutputWithContext(ctx context.Context) AutomationRulePropertyArrayChangedValuesConditionResponsePtrOutput {
	return o
}

func (o AutomationRulePropertyArrayChangedValuesConditionResponsePtrOutput) Elem() AutomationRulePropertyArrayChangedValuesConditionResponseOutput {
	return o.ApplyT(func(v *AutomationRulePropertyArrayChangedValuesConditionResponse) AutomationRulePropertyArrayChangedValuesConditionResponse {
		if v != nil {
			return *v
		}
		var ret AutomationRulePropertyArrayChangedValuesConditionResponse
		return ret
	}).(AutomationRulePropertyArrayChangedValuesConditionResponseOutput)
}

func (o AutomationRulePropertyArrayChangedValuesConditionResponsePtrOutput) ArrayType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AutomationRulePropertyArrayChangedValuesConditionResponse) *string {
		if v == nil {
			return nil
		}
		return v.ArrayType
	}).(pulumi.StringPtrOutput)
}

func (o AutomationRulePropertyArrayChangedValuesConditionResponsePtrOutput) ChangeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AutomationRulePropertyArrayChangedValuesConditionResponse) *string {
		if v == nil {
			return nil
		}
		return v.ChangeType
	}).(pulumi.StringPtrOutput)
}

// Describes an automation rule condition on array properties.
type AutomationRulePropertyArrayValuesCondition struct {
	// Describes an array condition evaluation type.
	ArrayConditionType *string `pulumi:"arrayConditionType"`
	// Describes an array condition evaluated array type.
	ArrayType      *string       `pulumi:"arrayType"`
	ItemConditions []interface{} `pulumi:"itemConditions"`
}

// AutomationRulePropertyArrayValuesConditionInput is an input type that accepts AutomationRulePropertyArrayValuesConditionArgs and AutomationRulePropertyArrayValuesConditionOutput values.
// You can construct a concrete instance of `AutomationRulePropertyArrayValuesConditionInput` via:
//
//	AutomationRulePropertyArrayValuesConditionArgs{...}
type AutomationRulePropertyArrayValuesConditionInput interface {
	pulumi.Input

	ToAutomationRulePropertyArrayValuesConditionOutput() AutomationRulePropertyArrayValuesConditionOutput
	ToAutomationRulePropertyArrayValuesConditionOutputWithContext(context.Context) AutomationRulePropertyArrayValuesConditionOutput
}

// Describes an automation rule condition on array properties.
type AutomationRulePropertyArrayValuesConditionArgs struct {
	// Describes an array condition evaluation type.
	ArrayConditionType pulumi.StringPtrInput `pulumi:"arrayConditionType"`
	// Describes an array condition evaluated array type.
	ArrayType      pulumi.StringPtrInput `pulumi:"arrayType"`
	ItemConditions pulumi.ArrayInput     `pulumi:"itemConditions"`
}

func (AutomationRulePropertyArrayValuesConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AutomationRulePropertyArrayValuesCondition)(nil)).Elem()
}

func (i AutomationRulePropertyArrayValuesConditionArgs) ToAutomationRulePropertyArrayValuesConditionOutput() AutomationRulePropertyArrayValuesConditionOutput {
	return i.ToAutomationRulePropertyArrayValuesConditionOutputWithContext(context.Background())
}

func (i AutomationRulePropertyArrayValuesConditionArgs) ToAutomationRulePropertyArrayValuesConditionOutputWithContext(ctx context.Context) AutomationRulePropertyArrayValuesConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutomationRulePropertyArrayValuesConditionOutput)
}

func (i AutomationRulePropertyArrayValuesConditionArgs) ToAutomationRulePropertyArrayValuesConditionPtrOutput() AutomationRulePropertyArrayValuesConditionPtrOutput {
	return i.ToAutomationRulePropertyArrayValuesConditionPtrOutputWithContext(context.Background())
}

func (i AutomationRulePropertyArrayValuesConditionArgs) ToAutomationRulePropertyArrayValuesConditionPtrOutputWithContext(ctx context.Context) AutomationRulePropertyArrayValuesConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutomationRulePropertyArrayValuesConditionOutput).ToAutomationRulePropertyArrayValuesConditionPtrOutputWithContext(ctx)
}

// AutomationRulePropertyArrayValuesConditionPtrInput is an input type that accepts AutomationRulePropertyArrayValuesConditionArgs, AutomationRulePropertyArrayValuesConditionPtr and AutomationRulePropertyArrayValuesConditionPtrOutput values.
// You can construct a concrete instance of `AutomationRulePropertyArrayValuesConditionPtrInput` via:
//
//	        AutomationRulePropertyArrayValuesConditionArgs{...}
//
//	or:
//
//	        nil
type AutomationRulePropertyArrayValuesConditionPtrInput interface {
	pulumi.Input

	ToAutomationRulePropertyArrayValuesConditionPtrOutput() AutomationRulePropertyArrayValuesConditionPtrOutput
	ToAutomationRulePropertyArrayValuesConditionPtrOutputWithContext(context.Context) AutomationRulePropertyArrayValuesConditionPtrOutput
}

type automationRulePropertyArrayValuesConditionPtrType AutomationRulePropertyArrayValuesConditionArgs

func AutomationRulePropertyArrayValuesConditionPtr(v *AutomationRulePropertyArrayValuesConditionArgs) AutomationRulePropertyArrayValuesConditionPtrInput {
	return (*automationRulePropertyArrayValuesConditionPtrType)(v)
}

func (*automationRulePropertyArrayValuesConditionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AutomationRulePropertyArrayValuesCondition)(nil)).Elem()
}

func (i *automationRulePropertyArrayValuesConditionPtrType) ToAutomationRulePropertyArrayValuesConditionPtrOutput() AutomationRulePropertyArrayValuesConditionPtrOutput {
	return i.ToAutomationRulePropertyArrayValuesConditionPtrOutputWithContext(context.Background())
}

func (i *automationRulePropertyArrayValuesConditionPtrType) ToAutomationRulePropertyArrayValuesConditionPtrOutputWithContext(ctx context.Context) AutomationRulePropertyArrayValuesConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutomationRulePropertyArrayValuesConditionPtrOutput)
}

// Describes an automation rule condition on array properties.
type AutomationRulePropertyArrayValuesConditionOutput struct{ *pulumi.OutputState }

func (AutomationRulePropertyArrayValuesConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutomationRulePropertyArrayValuesCondition)(nil)).Elem()
}

func (o AutomationRulePropertyArrayValuesConditionOutput) ToAutomationRulePropertyArrayValuesConditionOutput() AutomationRulePropertyArrayValuesConditionOutput {
	return o
}

func (o AutomationRulePropertyArrayValuesConditionOutput) ToAutomationRulePropertyArrayValuesConditionOutputWithContext(ctx context.Context) AutomationRulePropertyArrayValuesConditionOutput {
	return o
}

func (o AutomationRulePropertyArrayValuesConditionOutput) ToAutomationRulePropertyArrayValuesConditionPtrOutput() AutomationRulePropertyArrayValuesConditionPtrOutput {
	return o.ToAutomationRulePropertyArrayValuesConditionPtrOutputWithContext(context.Background())
}

func (o AutomationRulePropertyArrayValuesConditionOutput) ToAutomationRulePropertyArrayValuesConditionPtrOutputWithContext(ctx context.Context) AutomationRulePropertyArrayValuesConditionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AutomationRulePropertyArrayValuesCondition) *AutomationRulePropertyArrayValuesCondition {
		return &v
	}).(AutomationRulePropertyArrayValuesConditionPtrOutput)
}

// Describes an array condition evaluation type.
func (o AutomationRulePropertyArrayValuesConditionOutput) ArrayConditionType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AutomationRulePropertyArrayValuesCondition) *string { return v.ArrayConditionType }).(pulumi.StringPtrOutput)
}

// Describes an array condition evaluated array type.
func (o AutomationRulePropertyArrayValuesConditionOutput) ArrayType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AutomationRulePropertyArrayValuesCondition) *string { return v.ArrayType }).(pulumi.StringPtrOutput)
}

func (o AutomationRulePropertyArrayValuesConditionOutput) ItemConditions() pulumi.ArrayOutput {
	return o.ApplyT(func(v AutomationRulePropertyArrayValuesCondition) []interface{} { return v.ItemConditions }).(pulumi.ArrayOutput)
}

type AutomationRulePropertyArrayValuesConditionPtrOutput struct{ *pulumi.OutputState }

func (AutomationRulePropertyArrayValuesConditionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AutomationRulePropertyArrayValuesCondition)(nil)).Elem()
}

func (o AutomationRulePropertyArrayValuesConditionPtrOutput) ToAutomationRulePropertyArrayValuesConditionPtrOutput() AutomationRulePropertyArrayValuesConditionPtrOutput {
	return o
}

func (o AutomationRulePropertyArrayValuesConditionPtrOutput) ToAutomationRulePropertyArrayValuesConditionPtrOutputWithContext(ctx context.Context) AutomationRulePropertyArrayValuesConditionPtrOutput {
	return o
}

func (o AutomationRulePropertyArrayValuesConditionPtrOutput) Elem() AutomationRulePropertyArrayValuesConditionOutput {
	return o.ApplyT(func(v *AutomationRulePropertyArrayValuesCondition) AutomationRulePropertyArrayValuesCondition {
		if v != nil {
			return *v
		}
		var ret AutomationRulePropertyArrayValuesCondition
		return ret
	}).(AutomationRulePropertyArrayValuesConditionOutput)
}

// Describes an array condition evaluation type.
func (o AutomationRulePropertyArrayValuesConditionPtrOutput) ArrayConditionType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AutomationRulePropertyArrayValuesCondition) *string {
		if v == nil {
			return nil
		}
		return v.ArrayConditionType
	}).(pulumi.StringPtrOutput)
}

// Describes an array condition evaluated array type.
func (o AutomationRulePropertyArrayValuesConditionPtrOutput) ArrayType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AutomationRulePropertyArrayValuesCondition) *string {
		if v == nil {
			return nil
		}
		return v.ArrayType
	}).(pulumi.StringPtrOutput)
}

func (o AutomationRulePropertyArrayValuesConditionPtrOutput) ItemConditions() pulumi.ArrayOutput {
	return o.ApplyT(func(v *AutomationRulePropertyArrayValuesCondition) []interface{} {
		if v == nil {
			return nil
		}
		return v.ItemConditions
	}).(pulumi.ArrayOutput)
}

// Describes an automation rule condition on array properties.
type AutomationRulePropertyArrayValuesConditionResponse struct {
	// Describes an array condition evaluation type.
	ArrayConditionType *string `pulumi:"arrayConditionType"`
	// Describes an array condition evaluated array type.
	ArrayType      *string       `pulumi:"arrayType"`
	ItemConditions []interface{} `pulumi:"itemConditions"`
}

// Describes an automation rule condition on array properties.
type AutomationRulePropertyArrayValuesConditionResponseOutput struct{ *pulumi.OutputState }

func (AutomationRulePropertyArrayValuesConditionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutomationRulePropertyArrayValuesConditionResponse)(nil)).Elem()
}

func (o AutomationRulePropertyArrayValuesConditionResponseOutput) ToAutomationRulePropertyArrayValuesConditionResponseOutput() AutomationRulePropertyArrayValuesConditionResponseOutput {
	return o
}

func (o AutomationRulePropertyArrayValuesConditionResponseOutput) ToAutomationRulePropertyArrayValuesConditionResponseOutputWithContext(ctx context.Context) AutomationRulePropertyArrayValuesConditionResponseOutput {
	return o
}

// Describes an array condition evaluation type.
func (o AutomationRulePropertyArrayValuesConditionResponseOutput) ArrayConditionType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AutomationRulePropertyArrayValuesConditionResponse) *string { return v.ArrayConditionType }).(pulumi.StringPtrOutput)
}

// Describes an array condition evaluated array type.
func (o AutomationRulePropertyArrayValuesConditionResponseOutput) ArrayType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AutomationRulePropertyArrayValuesConditionResponse) *string { return v.ArrayType }).(pulumi.StringPtrOutput)
}

func (o AutomationRulePropertyArrayValuesConditionResponseOutput) ItemConditions() pulumi.ArrayOutput {
	return o.ApplyT(func(v AutomationRulePropertyArrayValuesConditionResponse) []interface{} { return v.ItemConditions }).(pulumi.ArrayOutput)
}

type AutomationRulePropertyArrayValuesConditionResponsePtrOutput struct{ *pulumi.OutputState }

func (AutomationRulePropertyArrayValuesConditionResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AutomationRulePropertyArrayValuesConditionResponse)(nil)).Elem()
}

func (o AutomationRulePropertyArrayValuesConditionResponsePtrOutput) ToAutomationRulePropertyArrayValuesConditionResponsePtrOutput() AutomationRulePropertyArrayValuesConditionResponsePtrOutput {
	return o
}

func (o AutomationRulePropertyArrayValuesConditionResponsePtrOutput) ToAutomationRulePropertyArrayValuesConditionResponsePtrOutputWithContext(ctx context.Context) AutomationRulePropertyArrayValuesConditionResponsePtrOutput {
	return o
}

func (o AutomationRulePropertyArrayValuesConditionResponsePtrOutput) Elem() AutomationRulePropertyArrayValuesConditionResponseOutput {
	return o.ApplyT(func(v *AutomationRulePropertyArrayValuesConditionResponse) AutomationRulePropertyArrayValuesConditionResponse {
		if v != nil {
			return *v
		}
		var ret AutomationRulePropertyArrayValuesConditionResponse
		return ret
	}).(AutomationRulePropertyArrayValuesConditionResponseOutput)
}

// Describes an array condition evaluation type.
func (o AutomationRulePropertyArrayValuesConditionResponsePtrOutput) ArrayConditionType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AutomationRulePropertyArrayValuesConditionResponse) *string {
		if v == nil {
			return nil
		}
		return v.ArrayConditionType
	}).(pulumi.StringPtrOutput)
}

// Describes an array condition evaluated array type.
func (o AutomationRulePropertyArrayValuesConditionResponsePtrOutput) ArrayType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AutomationRulePropertyArrayValuesConditionResponse) *string {
		if v == nil {
			return nil
		}
		return v.ArrayType
	}).(pulumi.StringPtrOutput)
}

func (o AutomationRulePropertyArrayValuesConditionResponsePtrOutput) ItemConditions() pulumi.ArrayOutput {
	return o.ApplyT(func(v *AutomationRulePropertyArrayValuesConditionResponse) []interface{} {
		if v == nil {
			return nil
		}
		return v.ItemConditions
	}).(pulumi.ArrayOutput)
}

type AutomationRulePropertyValuesChangedCondition struct {
	ChangeType     *string  `pulumi:"changeType"`
	Operator       *string  `pulumi:"operator"`
	PropertyName   *string  `pulumi:"propertyName"`
	PropertyValues []string `pulumi:"propertyValues"`
}

// AutomationRulePropertyValuesChangedConditionInput is an input type that accepts AutomationRulePropertyValuesChangedConditionArgs and AutomationRulePropertyValuesChangedConditionOutput values.
// You can construct a concrete instance of `AutomationRulePropertyValuesChangedConditionInput` via:
//
//	AutomationRulePropertyValuesChangedConditionArgs{...}
type AutomationRulePropertyValuesChangedConditionInput interface {
	pulumi.Input

	ToAutomationRulePropertyValuesChangedConditionOutput() AutomationRulePropertyValuesChangedConditionOutput
	ToAutomationRulePropertyValuesChangedConditionOutputWithContext(context.Context) AutomationRulePropertyValuesChangedConditionOutput
}

type AutomationRulePropertyValuesChangedConditionArgs struct {
	ChangeType     pulumi.StringPtrInput   `pulumi:"changeType"`
	Operator       pulumi.StringPtrInput   `pulumi:"operator"`
	PropertyName   pulumi.StringPtrInput   `pulumi:"propertyName"`
	PropertyValues pulumi.StringArrayInput `pulumi:"propertyValues"`
}

func (AutomationRulePropertyValuesChangedConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AutomationRulePropertyValuesChangedCondition)(nil)).Elem()
}

func (i AutomationRulePropertyValuesChangedConditionArgs) ToAutomationRulePropertyValuesChangedConditionOutput() AutomationRulePropertyValuesChangedConditionOutput {
	return i.ToAutomationRulePropertyValuesChangedConditionOutputWithContext(context.Background())
}

func (i AutomationRulePropertyValuesChangedConditionArgs) ToAutomationRulePropertyValuesChangedConditionOutputWithContext(ctx context.Context) AutomationRulePropertyValuesChangedConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutomationRulePropertyValuesChangedConditionOutput)
}

func (i AutomationRulePropertyValuesChangedConditionArgs) ToAutomationRulePropertyValuesChangedConditionPtrOutput() AutomationRulePropertyValuesChangedConditionPtrOutput {
	return i.ToAutomationRulePropertyValuesChangedConditionPtrOutputWithContext(context.Background())
}

func (i AutomationRulePropertyValuesChangedConditionArgs) ToAutomationRulePropertyValuesChangedConditionPtrOutputWithContext(ctx context.Context) AutomationRulePropertyValuesChangedConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutomationRulePropertyValuesChangedConditionOutput).ToAutomationRulePropertyValuesChangedConditionPtrOutputWithContext(ctx)
}

// AutomationRulePropertyValuesChangedConditionPtrInput is an input type that accepts AutomationRulePropertyValuesChangedConditionArgs, AutomationRulePropertyValuesChangedConditionPtr and AutomationRulePropertyValuesChangedConditionPtrOutput values.
// You can construct a concrete instance of `AutomationRulePropertyValuesChangedConditionPtrInput` via:
//
//	        AutomationRulePropertyValuesChangedConditionArgs{...}
//
//	or:
//
//	        nil
type AutomationRulePropertyValuesChangedConditionPtrInput interface {
	pulumi.Input

	ToAutomationRulePropertyValuesChangedConditionPtrOutput() AutomationRulePropertyValuesChangedConditionPtrOutput
	ToAutomationRulePropertyValuesChangedConditionPtrOutputWithContext(context.Context) AutomationRulePropertyValuesChangedConditionPtrOutput
}

type automationRulePropertyValuesChangedConditionPtrType AutomationRulePropertyValuesChangedConditionArgs

func AutomationRulePropertyValuesChangedConditionPtr(v *AutomationRulePropertyValuesChangedConditionArgs) AutomationRulePropertyValuesChangedConditionPtrInput {
	return (*automationRulePropertyValuesChangedConditionPtrType)(v)
}

func (*automationRulePropertyValuesChangedConditionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AutomationRulePropertyValuesChangedCondition)(nil)).Elem()
}

func (i *automationRulePropertyValuesChangedConditionPtrType) ToAutomationRulePropertyValuesChangedConditionPtrOutput() AutomationRulePropertyValuesChangedConditionPtrOutput {
	return i.ToAutomationRulePropertyValuesChangedConditionPtrOutputWithContext(context.Background())
}

func (i *automationRulePropertyValuesChangedConditionPtrType) ToAutomationRulePropertyValuesChangedConditionPtrOutputWithContext(ctx context.Context) AutomationRulePropertyValuesChangedConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutomationRulePropertyValuesChangedConditionPtrOutput)
}

type AutomationRulePropertyValuesChangedConditionOutput struct{ *pulumi.OutputState }

func (AutomationRulePropertyValuesChangedConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutomationRulePropertyValuesChangedCondition)(nil)).Elem()
}

func (o AutomationRulePropertyValuesChangedConditionOutput) ToAutomationRulePropertyValuesChangedConditionOutput() AutomationRulePropertyValuesChangedConditionOutput {
	return o
}

func (o AutomationRulePropertyValuesChangedConditionOutput) ToAutomationRulePropertyValuesChangedConditionOutputWithContext(ctx context.Context) AutomationRulePropertyValuesChangedConditionOutput {
	return o
}

func (o AutomationRulePropertyValuesChangedConditionOutput) ToAutomationRulePropertyValuesChangedConditionPtrOutput() AutomationRulePropertyValuesChangedConditionPtrOutput {
	return o.ToAutomationRulePropertyValuesChangedConditionPtrOutputWithContext(context.Background())
}

func (o AutomationRulePropertyValuesChangedConditionOutput) ToAutomationRulePropertyValuesChangedConditionPtrOutputWithContext(ctx context.Context) AutomationRulePropertyValuesChangedConditionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AutomationRulePropertyValuesChangedCondition) *AutomationRulePropertyValuesChangedCondition {
		return &v
	}).(AutomationRulePropertyValuesChangedConditionPtrOutput)
}

func (o AutomationRulePropertyValuesChangedConditionOutput) ChangeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AutomationRulePropertyValuesChangedCondition) *string { return v.ChangeType }).(pulumi.StringPtrOutput)
}

func (o AutomationRulePropertyValuesChangedConditionOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AutomationRulePropertyValuesChangedCondition) *string { return v.Operator }).(pulumi.StringPtrOutput)
}

func (o AutomationRulePropertyValuesChangedConditionOutput) PropertyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AutomationRulePropertyValuesChangedCondition) *string { return v.PropertyName }).(pulumi.StringPtrOutput)
}

func (o AutomationRulePropertyValuesChangedConditionOutput) PropertyValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AutomationRulePropertyValuesChangedCondition) []string { return v.PropertyValues }).(pulumi.StringArrayOutput)
}

type AutomationRulePropertyValuesChangedConditionPtrOutput struct{ *pulumi.OutputState }

func (AutomationRulePropertyValuesChangedConditionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AutomationRulePropertyValuesChangedCondition)(nil)).Elem()
}

func (o AutomationRulePropertyValuesChangedConditionPtrOutput) ToAutomationRulePropertyValuesChangedConditionPtrOutput() AutomationRulePropertyValuesChangedConditionPtrOutput {
	return o
}

func (o AutomationRulePropertyValuesChangedConditionPtrOutput) ToAutomationRulePropertyValuesChangedConditionPtrOutputWithContext(ctx context.Context) AutomationRulePropertyValuesChangedConditionPtrOutput {
	return o
}

func (o AutomationRulePropertyValuesChangedConditionPtrOutput) Elem() AutomationRulePropertyValuesChangedConditionOutput {
	return o.ApplyT(func(v *AutomationRulePropertyValuesChangedCondition) AutomationRulePropertyValuesChangedCondition {
		if v != nil {
			return *v
		}
		var ret AutomationRulePropertyValuesChangedCondition
		return ret
	}).(AutomationRulePropertyValuesChangedConditionOutput)
}

func (o AutomationRulePropertyValuesChangedConditionPtrOutput) ChangeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AutomationRulePropertyValuesChangedCondition) *string {
		if v == nil {
			return nil
		}
		return v.ChangeType
	}).(pulumi.StringPtrOutput)
}

func (o AutomationRulePropertyValuesChangedConditionPtrOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AutomationRulePropertyValuesChangedCondition) *string {
		if v == nil {
			return nil
		}
		return v.Operator
	}).(pulumi.StringPtrOutput)
}

func (o AutomationRulePropertyValuesChangedConditionPtrOutput) PropertyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AutomationRulePropertyValuesChangedCondition) *string {
		if v == nil {
			return nil
		}
		return v.PropertyName
	}).(pulumi.StringPtrOutput)
}

func (o AutomationRulePropertyValuesChangedConditionPtrOutput) PropertyValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AutomationRulePropertyValuesChangedCondition) []string {
		if v == nil {
			return nil
		}
		return v.PropertyValues
	}).(pulumi.StringArrayOutput)
}

type AutomationRulePropertyValuesChangedConditionResponse struct {
	ChangeType     *string  `pulumi:"changeType"`
	Operator       *string  `pulumi:"operator"`
	PropertyName   *string  `pulumi:"propertyName"`
	PropertyValues []string `pulumi:"propertyValues"`
}

type AutomationRulePropertyValuesChangedConditionResponseOutput struct{ *pulumi.OutputState }

func (AutomationRulePropertyValuesChangedConditionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutomationRulePropertyValuesChangedConditionResponse)(nil)).Elem()
}

func (o AutomationRulePropertyValuesChangedConditionResponseOutput) ToAutomationRulePropertyValuesChangedConditionResponseOutput() AutomationRulePropertyValuesChangedConditionResponseOutput {
	return o
}

func (o AutomationRulePropertyValuesChangedConditionResponseOutput) ToAutomationRulePropertyValuesChangedConditionResponseOutputWithContext(ctx context.Context) AutomationRulePropertyValuesChangedConditionResponseOutput {
	return o
}

func (o AutomationRulePropertyValuesChangedConditionResponseOutput) ChangeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AutomationRulePropertyValuesChangedConditionResponse) *string { return v.ChangeType }).(pulumi.StringPtrOutput)
}

func (o AutomationRulePropertyValuesChangedConditionResponseOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AutomationRulePropertyValuesChangedConditionResponse) *string { return v.Operator }).(pulumi.StringPtrOutput)
}

func (o AutomationRulePropertyValuesChangedConditionResponseOutput) PropertyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AutomationRulePropertyValuesChangedConditionResponse) *string { return v.PropertyName }).(pulumi.StringPtrOutput)
}

func (o AutomationRulePropertyValuesChangedConditionResponseOutput) PropertyValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AutomationRulePropertyValuesChangedConditionResponse) []string { return v.PropertyValues }).(pulumi.StringArrayOutput)
}

type AutomationRulePropertyValuesChangedConditionResponsePtrOutput struct{ *pulumi.OutputState }

func (AutomationRulePropertyValuesChangedConditionResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AutomationRulePropertyValuesChangedConditionResponse)(nil)).Elem()
}

func (o AutomationRulePropertyValuesChangedConditionResponsePtrOutput) ToAutomationRulePropertyValuesChangedConditionResponsePtrOutput() AutomationRulePropertyValuesChangedConditionResponsePtrOutput {
	return o
}

func (o AutomationRulePropertyValuesChangedConditionResponsePtrOutput) ToAutomationRulePropertyValuesChangedConditionResponsePtrOutputWithContext(ctx context.Context) AutomationRulePropertyValuesChangedConditionResponsePtrOutput {
	return o
}

func (o AutomationRulePropertyValuesChangedConditionResponsePtrOutput) Elem() AutomationRulePropertyValuesChangedConditionResponseOutput {
	return o.ApplyT(func(v *AutomationRulePropertyValuesChangedConditionResponse) AutomationRulePropertyValuesChangedConditionResponse {
		if v != nil {
			return *v
		}
		var ret AutomationRulePropertyValuesChangedConditionResponse
		return ret
	}).(AutomationRulePropertyValuesChangedConditionResponseOutput)
}

func (o AutomationRulePropertyValuesChangedConditionResponsePtrOutput) ChangeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AutomationRulePropertyValuesChangedConditionResponse) *string {
		if v == nil {
			return nil
		}
		return v.ChangeType
	}).(pulumi.StringPtrOutput)
}

func (o AutomationRulePropertyValuesChangedConditionResponsePtrOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AutomationRulePropertyValuesChangedConditionResponse) *string {
		if v == nil {
			return nil
		}
		return v.Operator
	}).(pulumi.StringPtrOutput)
}

func (o AutomationRulePropertyValuesChangedConditionResponsePtrOutput) PropertyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AutomationRulePropertyValuesChangedConditionResponse) *string {
		if v == nil {
			return nil
		}
		return v.PropertyName
	}).(pulumi.StringPtrOutput)
}

func (o AutomationRulePropertyValuesChangedConditionResponsePtrOutput) PropertyValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AutomationRulePropertyValuesChangedConditionResponse) []string {
		if v == nil {
			return nil
		}
		return v.PropertyValues
	}).(pulumi.StringArrayOutput)
}

type AutomationRulePropertyValuesCondition struct {
	Operator *string `pulumi:"operator"`
	// The property to evaluate in an automation rule property condition.
	PropertyName   *string  `pulumi:"propertyName"`
	PropertyValues []string `pulumi:"propertyValues"`
}

// AutomationRulePropertyValuesConditionInput is an input type that accepts AutomationRulePropertyValuesConditionArgs and AutomationRulePropertyValuesConditionOutput values.
// You can construct a concrete instance of `AutomationRulePropertyValuesConditionInput` via:
//
//	AutomationRulePropertyValuesConditionArgs{...}
type AutomationRulePropertyValuesConditionInput interface {
	pulumi.Input

	ToAutomationRulePropertyValuesConditionOutput() AutomationRulePropertyValuesConditionOutput
	ToAutomationRulePropertyValuesConditionOutputWithContext(context.Context) AutomationRulePropertyValuesConditionOutput
}

type AutomationRulePropertyValuesConditionArgs struct {
	Operator pulumi.StringPtrInput `pulumi:"operator"`
	// The property to evaluate in an automation rule property condition.
	PropertyName   pulumi.StringPtrInput   `pulumi:"propertyName"`
	PropertyValues pulumi.StringArrayInput `pulumi:"propertyValues"`
}

func (AutomationRulePropertyValuesConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AutomationRulePropertyValuesCondition)(nil)).Elem()
}

func (i AutomationRulePropertyValuesConditionArgs) ToAutomationRulePropertyValuesConditionOutput() AutomationRulePropertyValuesConditionOutput {
	return i.ToAutomationRulePropertyValuesConditionOutputWithContext(context.Background())
}

func (i AutomationRulePropertyValuesConditionArgs) ToAutomationRulePropertyValuesConditionOutputWithContext(ctx context.Context) AutomationRulePropertyValuesConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutomationRulePropertyValuesConditionOutput)
}

func (i AutomationRulePropertyValuesConditionArgs) ToAutomationRulePropertyValuesConditionPtrOutput() AutomationRulePropertyValuesConditionPtrOutput {
	return i.ToAutomationRulePropertyValuesConditionPtrOutputWithContext(context.Background())
}

func (i AutomationRulePropertyValuesConditionArgs) ToAutomationRulePropertyValuesConditionPtrOutputWithContext(ctx context.Context) AutomationRulePropertyValuesConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutomationRulePropertyValuesConditionOutput).ToAutomationRulePropertyValuesConditionPtrOutputWithContext(ctx)
}

// AutomationRulePropertyValuesConditionPtrInput is an input type that accepts AutomationRulePropertyValuesConditionArgs, AutomationRulePropertyValuesConditionPtr and AutomationRulePropertyValuesConditionPtrOutput values.
// You can construct a concrete instance of `AutomationRulePropertyValuesConditionPtrInput` via:
//
//	        AutomationRulePropertyValuesConditionArgs{...}
//
//	or:
//
//	        nil
type AutomationRulePropertyValuesConditionPtrInput interface {
	pulumi.Input

	ToAutomationRulePropertyValuesConditionPtrOutput() AutomationRulePropertyValuesConditionPtrOutput
	ToAutomationRulePropertyValuesConditionPtrOutputWithContext(context.Context) AutomationRulePropertyValuesConditionPtrOutput
}

type automationRulePropertyValuesConditionPtrType AutomationRulePropertyValuesConditionArgs

func AutomationRulePropertyValuesConditionPtr(v *AutomationRulePropertyValuesConditionArgs) AutomationRulePropertyValuesConditionPtrInput {
	return (*automationRulePropertyValuesConditionPtrType)(v)
}

func (*automationRulePropertyValuesConditionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AutomationRulePropertyValuesCondition)(nil)).Elem()
}

func (i *automationRulePropertyValuesConditionPtrType) ToAutomationRulePropertyValuesConditionPtrOutput() AutomationRulePropertyValuesConditionPtrOutput {
	return i.ToAutomationRulePropertyValuesConditionPtrOutputWithContext(context.Background())
}

func (i *automationRulePropertyValuesConditionPtrType) ToAutomationRulePropertyValuesConditionPtrOutputWithContext(ctx context.Context) AutomationRulePropertyValuesConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutomationRulePropertyValuesConditionPtrOutput)
}

type AutomationRulePropertyValuesConditionOutput struct{ *pulumi.OutputState }

func (AutomationRulePropertyValuesConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutomationRulePropertyValuesCondition)(nil)).Elem()
}

func (o AutomationRulePropertyValuesConditionOutput) ToAutomationRulePropertyValuesConditionOutput() AutomationRulePropertyValuesConditionOutput {
	return o
}

func (o AutomationRulePropertyValuesConditionOutput) ToAutomationRulePropertyValuesConditionOutputWithContext(ctx context.Context) AutomationRulePropertyValuesConditionOutput {
	return o
}

func (o AutomationRulePropertyValuesConditionOutput) ToAutomationRulePropertyValuesConditionPtrOutput() AutomationRulePropertyValuesConditionPtrOutput {
	return o.ToAutomationRulePropertyValuesConditionPtrOutputWithContext(context.Background())
}

func (o AutomationRulePropertyValuesConditionOutput) ToAutomationRulePropertyValuesConditionPtrOutputWithContext(ctx context.Context) AutomationRulePropertyValuesConditionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AutomationRulePropertyValuesCondition) *AutomationRulePropertyValuesCondition {
		return &v
	}).(AutomationRulePropertyValuesConditionPtrOutput)
}

func (o AutomationRulePropertyValuesConditionOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AutomationRulePropertyValuesCondition) *string { return v.Operator }).(pulumi.StringPtrOutput)
}

// The property to evaluate in an automation rule property condition.
func (o AutomationRulePropertyValuesConditionOutput) PropertyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AutomationRulePropertyValuesCondition) *string { return v.PropertyName }).(pulumi.StringPtrOutput)
}

func (o AutomationRulePropertyValuesConditionOutput) PropertyValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AutomationRulePropertyValuesCondition) []string { return v.PropertyValues }).(pulumi.StringArrayOutput)
}

type AutomationRulePropertyValuesConditionPtrOutput struct{ *pulumi.OutputState }

func (AutomationRulePropertyValuesConditionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AutomationRulePropertyValuesCondition)(nil)).Elem()
}

func (o AutomationRulePropertyValuesConditionPtrOutput) ToAutomationRulePropertyValuesConditionPtrOutput() AutomationRulePropertyValuesConditionPtrOutput {
	return o
}

func (o AutomationRulePropertyValuesConditionPtrOutput) ToAutomationRulePropertyValuesConditionPtrOutputWithContext(ctx context.Context) AutomationRulePropertyValuesConditionPtrOutput {
	return o
}

func (o AutomationRulePropertyValuesConditionPtrOutput) Elem() AutomationRulePropertyValuesConditionOutput {
	return o.ApplyT(func(v *AutomationRulePropertyValuesCondition) AutomationRulePropertyValuesCondition {
		if v != nil {
			return *v
		}
		var ret AutomationRulePropertyValuesCondition
		return ret
	}).(AutomationRulePropertyValuesConditionOutput)
}

func (o AutomationRulePropertyValuesConditionPtrOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AutomationRulePropertyValuesCondition) *string {
		if v == nil {
			return nil
		}
		return v.Operator
	}).(pulumi.StringPtrOutput)
}

// The property to evaluate in an automation rule property condition.
func (o AutomationRulePropertyValuesConditionPtrOutput) PropertyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AutomationRulePropertyValuesCondition) *string {
		if v == nil {
			return nil
		}
		return v.PropertyName
	}).(pulumi.StringPtrOutput)
}

func (o AutomationRulePropertyValuesConditionPtrOutput) PropertyValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AutomationRulePropertyValuesCondition) []string {
		if v == nil {
			return nil
		}
		return v.PropertyValues
	}).(pulumi.StringArrayOutput)
}

type AutomationRulePropertyValuesConditionResponse struct {
	Operator *string `pulumi:"operator"`
	// The property to evaluate in an automation rule property condition.
	PropertyName   *string  `pulumi:"propertyName"`
	PropertyValues []string `pulumi:"propertyValues"`
}

type AutomationRulePropertyValuesConditionResponseOutput struct{ *pulumi.OutputState }

func (AutomationRulePropertyValuesConditionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutomationRulePropertyValuesConditionResponse)(nil)).Elem()
}

func (o AutomationRulePropertyValuesConditionResponseOutput) ToAutomationRulePropertyValuesConditionResponseOutput() AutomationRulePropertyValuesConditionResponseOutput {
	return o
}

func (o AutomationRulePropertyValuesConditionResponseOutput) ToAutomationRulePropertyValuesConditionResponseOutputWithContext(ctx context.Context) AutomationRulePropertyValuesConditionResponseOutput {
	return o
}

func (o AutomationRulePropertyValuesConditionResponseOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AutomationRulePropertyValuesConditionResponse) *string { return v.Operator }).(pulumi.StringPtrOutput)
}

// The property to evaluate in an automation rule property condition.
func (o AutomationRulePropertyValuesConditionResponseOutput) PropertyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AutomationRulePropertyValuesConditionResponse) *string { return v.PropertyName }).(pulumi.StringPtrOutput)
}

func (o AutomationRulePropertyValuesConditionResponseOutput) PropertyValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AutomationRulePropertyValuesConditionResponse) []string { return v.PropertyValues }).(pulumi.StringArrayOutput)
}

type AutomationRulePropertyValuesConditionResponsePtrOutput struct{ *pulumi.OutputState }

func (AutomationRulePropertyValuesConditionResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AutomationRulePropertyValuesConditionResponse)(nil)).Elem()
}

func (o AutomationRulePropertyValuesConditionResponsePtrOutput) ToAutomationRulePropertyValuesConditionResponsePtrOutput() AutomationRulePropertyValuesConditionResponsePtrOutput {
	return o
}

func (o AutomationRulePropertyValuesConditionResponsePtrOutput) ToAutomationRulePropertyValuesConditionResponsePtrOutputWithContext(ctx context.Context) AutomationRulePropertyValuesConditionResponsePtrOutput {
	return o
}

func (o AutomationRulePropertyValuesConditionResponsePtrOutput) Elem() AutomationRulePropertyValuesConditionResponseOutput {
	return o.ApplyT(func(v *AutomationRulePropertyValuesConditionResponse) AutomationRulePropertyValuesConditionResponse {
		if v != nil {
			return *v
		}
		var ret AutomationRulePropertyValuesConditionResponse
		return ret
	}).(AutomationRulePropertyValuesConditionResponseOutput)
}

func (o AutomationRulePropertyValuesConditionResponsePtrOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AutomationRulePropertyValuesConditionResponse) *string {
		if v == nil {
			return nil
		}
		return v.Operator
	}).(pulumi.StringPtrOutput)
}

// The property to evaluate in an automation rule property condition.
func (o AutomationRulePropertyValuesConditionResponsePtrOutput) PropertyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AutomationRulePropertyValuesConditionResponse) *string {
		if v == nil {
			return nil
		}
		return v.PropertyName
	}).(pulumi.StringPtrOutput)
}

func (o AutomationRulePropertyValuesConditionResponsePtrOutput) PropertyValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AutomationRulePropertyValuesConditionResponse) []string {
		if v == nil {
			return nil
		}
		return v.PropertyValues
	}).(pulumi.StringArrayOutput)
}

// Describes an automation rule action to run a playbook
type AutomationRuleRunPlaybookAction struct {
	ActionConfiguration *PlaybookActionProperties `pulumi:"actionConfiguration"`
	// The type of the automation rule action.
	// Expected value is 'RunPlaybook'.
	ActionType string `pulumi:"actionType"`
	Order      int    `pulumi:"order"`
}

// AutomationRuleRunPlaybookActionInput is an input type that accepts AutomationRuleRunPlaybookActionArgs and AutomationRuleRunPlaybookActionOutput values.
// You can construct a concrete instance of `AutomationRuleRunPlaybookActionInput` via:
//
//	AutomationRuleRunPlaybookActionArgs{...}
type AutomationRuleRunPlaybookActionInput interface {
	pulumi.Input

	ToAutomationRuleRunPlaybookActionOutput() AutomationRuleRunPlaybookActionOutput
	ToAutomationRuleRunPlaybookActionOutputWithContext(context.Context) AutomationRuleRunPlaybookActionOutput
}

// Describes an automation rule action to run a playbook
type AutomationRuleRunPlaybookActionArgs struct {
	ActionConfiguration PlaybookActionPropertiesPtrInput `pulumi:"actionConfiguration"`
	// The type of the automation rule action.
	// Expected value is 'RunPlaybook'.
	ActionType pulumi.StringInput `pulumi:"actionType"`
	Order      pulumi.IntInput    `pulumi:"order"`
}

func (AutomationRuleRunPlaybookActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AutomationRuleRunPlaybookAction)(nil)).Elem()
}

func (i AutomationRuleRunPlaybookActionArgs) ToAutomationRuleRunPlaybookActionOutput() AutomationRuleRunPlaybookActionOutput {
	return i.ToAutomationRuleRunPlaybookActionOutputWithContext(context.Background())
}

func (i AutomationRuleRunPlaybookActionArgs) ToAutomationRuleRunPlaybookActionOutputWithContext(ctx context.Context) AutomationRuleRunPlaybookActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutomationRuleRunPlaybookActionOutput)
}

// Describes an automation rule action to run a playbook
type AutomationRuleRunPlaybookActionOutput struct{ *pulumi.OutputState }

func (AutomationRuleRunPlaybookActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutomationRuleRunPlaybookAction)(nil)).Elem()
}

func (o AutomationRuleRunPlaybookActionOutput) ToAutomationRuleRunPlaybookActionOutput() AutomationRuleRunPlaybookActionOutput {
	return o
}

func (o AutomationRuleRunPlaybookActionOutput) ToAutomationRuleRunPlaybookActionOutputWithContext(ctx context.Context) AutomationRuleRunPlaybookActionOutput {
	return o
}

func (o AutomationRuleRunPlaybookActionOutput) ActionConfiguration() PlaybookActionPropertiesPtrOutput {
	return o.ApplyT(func(v AutomationRuleRunPlaybookAction) *PlaybookActionProperties { return v.ActionConfiguration }).(PlaybookActionPropertiesPtrOutput)
}

// The type of the automation rule action.
// Expected value is 'RunPlaybook'.
func (o AutomationRuleRunPlaybookActionOutput) ActionType() pulumi.StringOutput {
	return o.ApplyT(func(v AutomationRuleRunPlaybookAction) string { return v.ActionType }).(pulumi.StringOutput)
}

func (o AutomationRuleRunPlaybookActionOutput) Order() pulumi.IntOutput {
	return o.ApplyT(func(v AutomationRuleRunPlaybookAction) int { return v.Order }).(pulumi.IntOutput)
}

// Describes an automation rule action to run a playbook
type AutomationRuleRunPlaybookActionResponse struct {
	ActionConfiguration *PlaybookActionPropertiesResponse `pulumi:"actionConfiguration"`
	// The type of the automation rule action.
	// Expected value is 'RunPlaybook'.
	ActionType string `pulumi:"actionType"`
	Order      int    `pulumi:"order"`
}

// Describes an automation rule action to run a playbook
type AutomationRuleRunPlaybookActionResponseOutput struct{ *pulumi.OutputState }

func (AutomationRuleRunPlaybookActionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutomationRuleRunPlaybookActionResponse)(nil)).Elem()
}

func (o AutomationRuleRunPlaybookActionResponseOutput) ToAutomationRuleRunPlaybookActionResponseOutput() AutomationRuleRunPlaybookActionResponseOutput {
	return o
}

func (o AutomationRuleRunPlaybookActionResponseOutput) ToAutomationRuleRunPlaybookActionResponseOutputWithContext(ctx context.Context) AutomationRuleRunPlaybookActionResponseOutput {
	return o
}

func (o AutomationRuleRunPlaybookActionResponseOutput) ActionConfiguration() PlaybookActionPropertiesResponsePtrOutput {
	return o.ApplyT(func(v AutomationRuleRunPlaybookActionResponse) *PlaybookActionPropertiesResponse {
		return v.ActionConfiguration
	}).(PlaybookActionPropertiesResponsePtrOutput)
}

// The type of the automation rule action.
// Expected value is 'RunPlaybook'.
func (o AutomationRuleRunPlaybookActionResponseOutput) ActionType() pulumi.StringOutput {
	return o.ApplyT(func(v AutomationRuleRunPlaybookActionResponse) string { return v.ActionType }).(pulumi.StringOutput)
}

func (o AutomationRuleRunPlaybookActionResponseOutput) Order() pulumi.IntOutput {
	return o.ApplyT(func(v AutomationRuleRunPlaybookActionResponse) int { return v.Order }).(pulumi.IntOutput)
}

// Describes automation rule triggering logic.
type AutomationRuleTriggeringLogic struct {
	// The conditions to evaluate to determine if the automation rule should be triggered on a given object.
	Conditions []interface{} `pulumi:"conditions"`
	// Determines when the automation rule should automatically expire and be disabled.
	ExpirationTimeUtc *string `pulumi:"expirationTimeUtc"`
	// Determines whether the automation rule is enabled or disabled.
	IsEnabled    bool   `pulumi:"isEnabled"`
	TriggersOn   string `pulumi:"triggersOn"`
	TriggersWhen string `pulumi:"triggersWhen"`
}

// AutomationRuleTriggeringLogicInput is an input type that accepts AutomationRuleTriggeringLogicArgs and AutomationRuleTriggeringLogicOutput values.
// You can construct a concrete instance of `AutomationRuleTriggeringLogicInput` via:
//
//	AutomationRuleTriggeringLogicArgs{...}
type AutomationRuleTriggeringLogicInput interface {
	pulumi.Input

	ToAutomationRuleTriggeringLogicOutput() AutomationRuleTriggeringLogicOutput
	ToAutomationRuleTriggeringLogicOutputWithContext(context.Context) AutomationRuleTriggeringLogicOutput
}

// Describes automation rule triggering logic.
type AutomationRuleTriggeringLogicArgs struct {
	// The conditions to evaluate to determine if the automation rule should be triggered on a given object.
	Conditions pulumi.ArrayInput `pulumi:"conditions"`
	// Determines when the automation rule should automatically expire and be disabled.
	ExpirationTimeUtc pulumi.StringPtrInput `pulumi:"expirationTimeUtc"`
	// Determines whether the automation rule is enabled or disabled.
	IsEnabled    pulumi.BoolInput   `pulumi:"isEnabled"`
	TriggersOn   pulumi.StringInput `pulumi:"triggersOn"`
	TriggersWhen pulumi.StringInput `pulumi:"triggersWhen"`
}

func (AutomationRuleTriggeringLogicArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AutomationRuleTriggeringLogic)(nil)).Elem()
}

func (i AutomationRuleTriggeringLogicArgs) ToAutomationRuleTriggeringLogicOutput() AutomationRuleTriggeringLogicOutput {
	return i.ToAutomationRuleTriggeringLogicOutputWithContext(context.Background())
}

func (i AutomationRuleTriggeringLogicArgs) ToAutomationRuleTriggeringLogicOutputWithContext(ctx context.Context) AutomationRuleTriggeringLogicOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutomationRuleTriggeringLogicOutput)
}

// Describes automation rule triggering logic.
type AutomationRuleTriggeringLogicOutput struct{ *pulumi.OutputState }

func (AutomationRuleTriggeringLogicOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutomationRuleTriggeringLogic)(nil)).Elem()
}

func (o AutomationRuleTriggeringLogicOutput) ToAutomationRuleTriggeringLogicOutput() AutomationRuleTriggeringLogicOutput {
	return o
}

func (o AutomationRuleTriggeringLogicOutput) ToAutomationRuleTriggeringLogicOutputWithContext(ctx context.Context) AutomationRuleTriggeringLogicOutput {
	return o
}

// The conditions to evaluate to determine if the automation rule should be triggered on a given object.
func (o AutomationRuleTriggeringLogicOutput) Conditions() pulumi.ArrayOutput {
	return o.ApplyT(func(v AutomationRuleTriggeringLogic) []interface{} { return v.Conditions }).(pulumi.ArrayOutput)
}

// Determines when the automation rule should automatically expire and be disabled.
func (o AutomationRuleTriggeringLogicOutput) ExpirationTimeUtc() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AutomationRuleTriggeringLogic) *string { return v.ExpirationTimeUtc }).(pulumi.StringPtrOutput)
}

// Determines whether the automation rule is enabled or disabled.
func (o AutomationRuleTriggeringLogicOutput) IsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v AutomationRuleTriggeringLogic) bool { return v.IsEnabled }).(pulumi.BoolOutput)
}

func (o AutomationRuleTriggeringLogicOutput) TriggersOn() pulumi.StringOutput {
	return o.ApplyT(func(v AutomationRuleTriggeringLogic) string { return v.TriggersOn }).(pulumi.StringOutput)
}

func (o AutomationRuleTriggeringLogicOutput) TriggersWhen() pulumi.StringOutput {
	return o.ApplyT(func(v AutomationRuleTriggeringLogic) string { return v.TriggersWhen }).(pulumi.StringOutput)
}

// Describes automation rule triggering logic.
type AutomationRuleTriggeringLogicResponse struct {
	// The conditions to evaluate to determine if the automation rule should be triggered on a given object.
	Conditions []interface{} `pulumi:"conditions"`
	// Determines when the automation rule should automatically expire and be disabled.
	ExpirationTimeUtc *string `pulumi:"expirationTimeUtc"`
	// Determines whether the automation rule is enabled or disabled.
	IsEnabled    bool   `pulumi:"isEnabled"`
	TriggersOn   string `pulumi:"triggersOn"`
	TriggersWhen string `pulumi:"triggersWhen"`
}

// Describes automation rule triggering logic.
type AutomationRuleTriggeringLogicResponseOutput struct{ *pulumi.OutputState }

func (AutomationRuleTriggeringLogicResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutomationRuleTriggeringLogicResponse)(nil)).Elem()
}

func (o AutomationRuleTriggeringLogicResponseOutput) ToAutomationRuleTriggeringLogicResponseOutput() AutomationRuleTriggeringLogicResponseOutput {
	return o
}

func (o AutomationRuleTriggeringLogicResponseOutput) ToAutomationRuleTriggeringLogicResponseOutputWithContext(ctx context.Context) AutomationRuleTriggeringLogicResponseOutput {
	return o
}

// The conditions to evaluate to determine if the automation rule should be triggered on a given object.
func (o AutomationRuleTriggeringLogicResponseOutput) Conditions() pulumi.ArrayOutput {
	return o.ApplyT(func(v AutomationRuleTriggeringLogicResponse) []interface{} { return v.Conditions }).(pulumi.ArrayOutput)
}

// Determines when the automation rule should automatically expire and be disabled.
func (o AutomationRuleTriggeringLogicResponseOutput) ExpirationTimeUtc() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AutomationRuleTriggeringLogicResponse) *string { return v.ExpirationTimeUtc }).(pulumi.StringPtrOutput)
}

// Determines whether the automation rule is enabled or disabled.
func (o AutomationRuleTriggeringLogicResponseOutput) IsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v AutomationRuleTriggeringLogicResponse) bool { return v.IsEnabled }).(pulumi.BoolOutput)
}

func (o AutomationRuleTriggeringLogicResponseOutput) TriggersOn() pulumi.StringOutput {
	return o.ApplyT(func(v AutomationRuleTriggeringLogicResponse) string { return v.TriggersOn }).(pulumi.StringOutput)
}

func (o AutomationRuleTriggeringLogicResponseOutput) TriggersWhen() pulumi.StringOutput {
	return o.ApplyT(func(v AutomationRuleTriggeringLogicResponse) string { return v.TriggersWhen }).(pulumi.StringOutput)
}

// The available data types for Amazon Web Services CloudTrail data connector.
type AwsCloudTrailDataConnectorDataTypes struct {
	// Logs data type.
	Logs *AwsCloudTrailDataConnectorDataTypesLogs `pulumi:"logs"`
}

// AwsCloudTrailDataConnectorDataTypesInput is an input type that accepts AwsCloudTrailDataConnectorDataTypesArgs and AwsCloudTrailDataConnectorDataTypesOutput values.
// You can construct a concrete instance of `AwsCloudTrailDataConnectorDataTypesInput` via:
//
//	AwsCloudTrailDataConnectorDataTypesArgs{...}
type AwsCloudTrailDataConnectorDataTypesInput interface {
	pulumi.Input

	ToAwsCloudTrailDataConnectorDataTypesOutput() AwsCloudTrailDataConnectorDataTypesOutput
	ToAwsCloudTrailDataConnectorDataTypesOutputWithContext(context.Context) AwsCloudTrailDataConnectorDataTypesOutput
}

// The available data types for Amazon Web Services CloudTrail data connector.
type AwsCloudTrailDataConnectorDataTypesArgs struct {
	// Logs data type.
	Logs AwsCloudTrailDataConnectorDataTypesLogsPtrInput `pulumi:"logs"`
}

func (AwsCloudTrailDataConnectorDataTypesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AwsCloudTrailDataConnectorDataTypes)(nil)).Elem()
}

func (i AwsCloudTrailDataConnectorDataTypesArgs) ToAwsCloudTrailDataConnectorDataTypesOutput() AwsCloudTrailDataConnectorDataTypesOutput {
	return i.ToAwsCloudTrailDataConnectorDataTypesOutputWithContext(context.Background())
}

func (i AwsCloudTrailDataConnectorDataTypesArgs) ToAwsCloudTrailDataConnectorDataTypesOutputWithContext(ctx context.Context) AwsCloudTrailDataConnectorDataTypesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsCloudTrailDataConnectorDataTypesOutput)
}

func (i AwsCloudTrailDataConnectorDataTypesArgs) ToAwsCloudTrailDataConnectorDataTypesPtrOutput() AwsCloudTrailDataConnectorDataTypesPtrOutput {
	return i.ToAwsCloudTrailDataConnectorDataTypesPtrOutputWithContext(context.Background())
}

func (i AwsCloudTrailDataConnectorDataTypesArgs) ToAwsCloudTrailDataConnectorDataTypesPtrOutputWithContext(ctx context.Context) AwsCloudTrailDataConnectorDataTypesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsCloudTrailDataConnectorDataTypesOutput).ToAwsCloudTrailDataConnectorDataTypesPtrOutputWithContext(ctx)
}

// AwsCloudTrailDataConnectorDataTypesPtrInput is an input type that accepts AwsCloudTrailDataConnectorDataTypesArgs, AwsCloudTrailDataConnectorDataTypesPtr and AwsCloudTrailDataConnectorDataTypesPtrOutput values.
// You can construct a concrete instance of `AwsCloudTrailDataConnectorDataTypesPtrInput` via:
//
//	        AwsCloudTrailDataConnectorDataTypesArgs{...}
//
//	or:
//
//	        nil
type AwsCloudTrailDataConnectorDataTypesPtrInput interface {
	pulumi.Input

	ToAwsCloudTrailDataConnectorDataTypesPtrOutput() AwsCloudTrailDataConnectorDataTypesPtrOutput
	ToAwsCloudTrailDataConnectorDataTypesPtrOutputWithContext(context.Context) AwsCloudTrailDataConnectorDataTypesPtrOutput
}

type awsCloudTrailDataConnectorDataTypesPtrType AwsCloudTrailDataConnectorDataTypesArgs

func AwsCloudTrailDataConnectorDataTypesPtr(v *AwsCloudTrailDataConnectorDataTypesArgs) AwsCloudTrailDataConnectorDataTypesPtrInput {
	return (*awsCloudTrailDataConnectorDataTypesPtrType)(v)
}

func (*awsCloudTrailDataConnectorDataTypesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AwsCloudTrailDataConnectorDataTypes)(nil)).Elem()
}

func (i *awsCloudTrailDataConnectorDataTypesPtrType) ToAwsCloudTrailDataConnectorDataTypesPtrOutput() AwsCloudTrailDataConnectorDataTypesPtrOutput {
	return i.ToAwsCloudTrailDataConnectorDataTypesPtrOutputWithContext(context.Background())
}

func (i *awsCloudTrailDataConnectorDataTypesPtrType) ToAwsCloudTrailDataConnectorDataTypesPtrOutputWithContext(ctx context.Context) AwsCloudTrailDataConnectorDataTypesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsCloudTrailDataConnectorDataTypesPtrOutput)
}

// The available data types for Amazon Web Services CloudTrail data connector.
type AwsCloudTrailDataConnectorDataTypesOutput struct{ *pulumi.OutputState }

func (AwsCloudTrailDataConnectorDataTypesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AwsCloudTrailDataConnectorDataTypes)(nil)).Elem()
}

func (o AwsCloudTrailDataConnectorDataTypesOutput) ToAwsCloudTrailDataConnectorDataTypesOutput() AwsCloudTrailDataConnectorDataTypesOutput {
	return o
}

func (o AwsCloudTrailDataConnectorDataTypesOutput) ToAwsCloudTrailDataConnectorDataTypesOutputWithContext(ctx context.Context) AwsCloudTrailDataConnectorDataTypesOutput {
	return o
}

func (o AwsCloudTrailDataConnectorDataTypesOutput) ToAwsCloudTrailDataConnectorDataTypesPtrOutput() AwsCloudTrailDataConnectorDataTypesPtrOutput {
	return o.ToAwsCloudTrailDataConnectorDataTypesPtrOutputWithContext(context.Background())
}

func (o AwsCloudTrailDataConnectorDataTypesOutput) ToAwsCloudTrailDataConnectorDataTypesPtrOutputWithContext(ctx context.Context) AwsCloudTrailDataConnectorDataTypesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AwsCloudTrailDataConnectorDataTypes) *AwsCloudTrailDataConnectorDataTypes {
		return &v
	}).(AwsCloudTrailDataConnectorDataTypesPtrOutput)
}

// Logs data type.
func (o AwsCloudTrailDataConnectorDataTypesOutput) Logs() AwsCloudTrailDataConnectorDataTypesLogsPtrOutput {
	return o.ApplyT(func(v AwsCloudTrailDataConnectorDataTypes) *AwsCloudTrailDataConnectorDataTypesLogs { return v.Logs }).(AwsCloudTrailDataConnectorDataTypesLogsPtrOutput)
}

type AwsCloudTrailDataConnectorDataTypesPtrOutput struct{ *pulumi.OutputState }

func (AwsCloudTrailDataConnectorDataTypesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AwsCloudTrailDataConnectorDataTypes)(nil)).Elem()
}

func (o AwsCloudTrailDataConnectorDataTypesPtrOutput) ToAwsCloudTrailDataConnectorDataTypesPtrOutput() AwsCloudTrailDataConnectorDataTypesPtrOutput {
	return o
}

func (o AwsCloudTrailDataConnectorDataTypesPtrOutput) ToAwsCloudTrailDataConnectorDataTypesPtrOutputWithContext(ctx context.Context) AwsCloudTrailDataConnectorDataTypesPtrOutput {
	return o
}

func (o AwsCloudTrailDataConnectorDataTypesPtrOutput) Elem() AwsCloudTrailDataConnectorDataTypesOutput {
	return o.ApplyT(func(v *AwsCloudTrailDataConnectorDataTypes) AwsCloudTrailDataConnectorDataTypes {
		if v != nil {
			return *v
		}
		var ret AwsCloudTrailDataConnectorDataTypes
		return ret
	}).(AwsCloudTrailDataConnectorDataTypesOutput)
}

// Logs data type.
func (o AwsCloudTrailDataConnectorDataTypesPtrOutput) Logs() AwsCloudTrailDataConnectorDataTypesLogsPtrOutput {
	return o.ApplyT(func(v *AwsCloudTrailDataConnectorDataTypes) *AwsCloudTrailDataConnectorDataTypesLogs {
		if v == nil {
			return nil
		}
		return v.Logs
	}).(AwsCloudTrailDataConnectorDataTypesLogsPtrOutput)
}

// Logs data type.
type AwsCloudTrailDataConnectorDataTypesLogs struct {
	// Describe whether this data type connection is enabled or not.
	State *string `pulumi:"state"`
}

// AwsCloudTrailDataConnectorDataTypesLogsInput is an input type that accepts AwsCloudTrailDataConnectorDataTypesLogsArgs and AwsCloudTrailDataConnectorDataTypesLogsOutput values.
// You can construct a concrete instance of `AwsCloudTrailDataConnectorDataTypesLogsInput` via:
//
//	AwsCloudTrailDataConnectorDataTypesLogsArgs{...}
type AwsCloudTrailDataConnectorDataTypesLogsInput interface {
	pulumi.Input

	ToAwsCloudTrailDataConnectorDataTypesLogsOutput() AwsCloudTrailDataConnectorDataTypesLogsOutput
	ToAwsCloudTrailDataConnectorDataTypesLogsOutputWithContext(context.Context) AwsCloudTrailDataConnectorDataTypesLogsOutput
}

// Logs data type.
type AwsCloudTrailDataConnectorDataTypesLogsArgs struct {
	// Describe whether this data type connection is enabled or not.
	State pulumi.StringPtrInput `pulumi:"state"`
}

func (AwsCloudTrailDataConnectorDataTypesLogsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AwsCloudTrailDataConnectorDataTypesLogs)(nil)).Elem()
}

func (i AwsCloudTrailDataConnectorDataTypesLogsArgs) ToAwsCloudTrailDataConnectorDataTypesLogsOutput() AwsCloudTrailDataConnectorDataTypesLogsOutput {
	return i.ToAwsCloudTrailDataConnectorDataTypesLogsOutputWithContext(context.Background())
}

func (i AwsCloudTrailDataConnectorDataTypesLogsArgs) ToAwsCloudTrailDataConnectorDataTypesLogsOutputWithContext(ctx context.Context) AwsCloudTrailDataConnectorDataTypesLogsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsCloudTrailDataConnectorDataTypesLogsOutput)
}

func (i AwsCloudTrailDataConnectorDataTypesLogsArgs) ToAwsCloudTrailDataConnectorDataTypesLogsPtrOutput() AwsCloudTrailDataConnectorDataTypesLogsPtrOutput {
	return i.ToAwsCloudTrailDataConnectorDataTypesLogsPtrOutputWithContext(context.Background())
}

func (i AwsCloudTrailDataConnectorDataTypesLogsArgs) ToAwsCloudTrailDataConnectorDataTypesLogsPtrOutputWithContext(ctx context.Context) AwsCloudTrailDataConnectorDataTypesLogsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsCloudTrailDataConnectorDataTypesLogsOutput).ToAwsCloudTrailDataConnectorDataTypesLogsPtrOutputWithContext(ctx)
}

// AwsCloudTrailDataConnectorDataTypesLogsPtrInput is an input type that accepts AwsCloudTrailDataConnectorDataTypesLogsArgs, AwsCloudTrailDataConnectorDataTypesLogsPtr and AwsCloudTrailDataConnectorDataTypesLogsPtrOutput values.
// You can construct a concrete instance of `AwsCloudTrailDataConnectorDataTypesLogsPtrInput` via:
//
//	        AwsCloudTrailDataConnectorDataTypesLogsArgs{...}
//
//	or:
//
//	        nil
type AwsCloudTrailDataConnectorDataTypesLogsPtrInput interface {
	pulumi.Input

	ToAwsCloudTrailDataConnectorDataTypesLogsPtrOutput() AwsCloudTrailDataConnectorDataTypesLogsPtrOutput
	ToAwsCloudTrailDataConnectorDataTypesLogsPtrOutputWithContext(context.Context) AwsCloudTrailDataConnectorDataTypesLogsPtrOutput
}

type awsCloudTrailDataConnectorDataTypesLogsPtrType AwsCloudTrailDataConnectorDataTypesLogsArgs

func AwsCloudTrailDataConnectorDataTypesLogsPtr(v *AwsCloudTrailDataConnectorDataTypesLogsArgs) AwsCloudTrailDataConnectorDataTypesLogsPtrInput {
	return (*awsCloudTrailDataConnectorDataTypesLogsPtrType)(v)
}

func (*awsCloudTrailDataConnectorDataTypesLogsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AwsCloudTrailDataConnectorDataTypesLogs)(nil)).Elem()
}

func (i *awsCloudTrailDataConnectorDataTypesLogsPtrType) ToAwsCloudTrailDataConnectorDataTypesLogsPtrOutput() AwsCloudTrailDataConnectorDataTypesLogsPtrOutput {
	return i.ToAwsCloudTrailDataConnectorDataTypesLogsPtrOutputWithContext(context.Background())
}

func (i *awsCloudTrailDataConnectorDataTypesLogsPtrType) ToAwsCloudTrailDataConnectorDataTypesLogsPtrOutputWithContext(ctx context.Context) AwsCloudTrailDataConnectorDataTypesLogsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsCloudTrailDataConnectorDataTypesLogsPtrOutput)
}

// Logs data type.
type AwsCloudTrailDataConnectorDataTypesLogsOutput struct{ *pulumi.OutputState }

func (AwsCloudTrailDataConnectorDataTypesLogsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AwsCloudTrailDataConnectorDataTypesLogs)(nil)).Elem()
}

func (o AwsCloudTrailDataConnectorDataTypesLogsOutput) ToAwsCloudTrailDataConnectorDataTypesLogsOutput() AwsCloudTrailDataConnectorDataTypesLogsOutput {
	return o
}

func (o AwsCloudTrailDataConnectorDataTypesLogsOutput) ToAwsCloudTrailDataConnectorDataTypesLogsOutputWithContext(ctx context.Context) AwsCloudTrailDataConnectorDataTypesLogsOutput {
	return o
}

func (o AwsCloudTrailDataConnectorDataTypesLogsOutput) ToAwsCloudTrailDataConnectorDataTypesLogsPtrOutput() AwsCloudTrailDataConnectorDataTypesLogsPtrOutput {
	return o.ToAwsCloudTrailDataConnectorDataTypesLogsPtrOutputWithContext(context.Background())
}

func (o AwsCloudTrailDataConnectorDataTypesLogsOutput) ToAwsCloudTrailDataConnectorDataTypesLogsPtrOutputWithContext(ctx context.Context) AwsCloudTrailDataConnectorDataTypesLogsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AwsCloudTrailDataConnectorDataTypesLogs) *AwsCloudTrailDataConnectorDataTypesLogs {
		return &v
	}).(AwsCloudTrailDataConnectorDataTypesLogsPtrOutput)
}

// Describe whether this data type connection is enabled or not.
func (o AwsCloudTrailDataConnectorDataTypesLogsOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AwsCloudTrailDataConnectorDataTypesLogs) *string { return v.State }).(pulumi.StringPtrOutput)
}

type AwsCloudTrailDataConnectorDataTypesLogsPtrOutput struct{ *pulumi.OutputState }

func (AwsCloudTrailDataConnectorDataTypesLogsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AwsCloudTrailDataConnectorDataTypesLogs)(nil)).Elem()
}

func (o AwsCloudTrailDataConnectorDataTypesLogsPtrOutput) ToAwsCloudTrailDataConnectorDataTypesLogsPtrOutput() AwsCloudTrailDataConnectorDataTypesLogsPtrOutput {
	return o
}

func (o AwsCloudTrailDataConnectorDataTypesLogsPtrOutput) ToAwsCloudTrailDataConnectorDataTypesLogsPtrOutputWithContext(ctx context.Context) AwsCloudTrailDataConnectorDataTypesLogsPtrOutput {
	return o
}

func (o AwsCloudTrailDataConnectorDataTypesLogsPtrOutput) Elem() AwsCloudTrailDataConnectorDataTypesLogsOutput {
	return o.ApplyT(func(v *AwsCloudTrailDataConnectorDataTypesLogs) AwsCloudTrailDataConnectorDataTypesLogs {
		if v != nil {
			return *v
		}
		var ret AwsCloudTrailDataConnectorDataTypesLogs
		return ret
	}).(AwsCloudTrailDataConnectorDataTypesLogsOutput)
}

// Describe whether this data type connection is enabled or not.
func (o AwsCloudTrailDataConnectorDataTypesLogsPtrOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AwsCloudTrailDataConnectorDataTypesLogs) *string {
		if v == nil {
			return nil
		}
		return v.State
	}).(pulumi.StringPtrOutput)
}

// The available data types for Amazon Web Services CloudTrail data connector.
type AwsCloudTrailDataConnectorDataTypesResponse struct {
	// Logs data type.
	Logs *AwsCloudTrailDataConnectorDataTypesResponseLogs `pulumi:"logs"`
}

// The available data types for Amazon Web Services CloudTrail data connector.
type AwsCloudTrailDataConnectorDataTypesResponseOutput struct{ *pulumi.OutputState }

func (AwsCloudTrailDataConnectorDataTypesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AwsCloudTrailDataConnectorDataTypesResponse)(nil)).Elem()
}

func (o AwsCloudTrailDataConnectorDataTypesResponseOutput) ToAwsCloudTrailDataConnectorDataTypesResponseOutput() AwsCloudTrailDataConnectorDataTypesResponseOutput {
	return o
}

func (o AwsCloudTrailDataConnectorDataTypesResponseOutput) ToAwsCloudTrailDataConnectorDataTypesResponseOutputWithContext(ctx context.Context) AwsCloudTrailDataConnectorDataTypesResponseOutput {
	return o
}

// Logs data type.
func (o AwsCloudTrailDataConnectorDataTypesResponseOutput) Logs() AwsCloudTrailDataConnectorDataTypesResponseLogsPtrOutput {
	return o.ApplyT(func(v AwsCloudTrailDataConnectorDataTypesResponse) *AwsCloudTrailDataConnectorDataTypesResponseLogs {
		return v.Logs
	}).(AwsCloudTrailDataConnectorDataTypesResponseLogsPtrOutput)
}

type AwsCloudTrailDataConnectorDataTypesResponsePtrOutput struct{ *pulumi.OutputState }

func (AwsCloudTrailDataConnectorDataTypesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AwsCloudTrailDataConnectorDataTypesResponse)(nil)).Elem()
}

func (o AwsCloudTrailDataConnectorDataTypesResponsePtrOutput) ToAwsCloudTrailDataConnectorDataTypesResponsePtrOutput() AwsCloudTrailDataConnectorDataTypesResponsePtrOutput {
	return o
}

func (o AwsCloudTrailDataConnectorDataTypesResponsePtrOutput) ToAwsCloudTrailDataConnectorDataTypesResponsePtrOutputWithContext(ctx context.Context) AwsCloudTrailDataConnectorDataTypesResponsePtrOutput {
	return o
}

func (o AwsCloudTrailDataConnectorDataTypesResponsePtrOutput) Elem() AwsCloudTrailDataConnectorDataTypesResponseOutput {
	return o.ApplyT(func(v *AwsCloudTrailDataConnectorDataTypesResponse) AwsCloudTrailDataConnectorDataTypesResponse {
		if v != nil {
			return *v
		}
		var ret AwsCloudTrailDataConnectorDataTypesResponse
		return ret
	}).(AwsCloudTrailDataConnectorDataTypesResponseOutput)
}

// Logs data type.
func (o AwsCloudTrailDataConnectorDataTypesResponsePtrOutput) Logs() AwsCloudTrailDataConnectorDataTypesResponseLogsPtrOutput {
	return o.ApplyT(func(v *AwsCloudTrailDataConnectorDataTypesResponse) *AwsCloudTrailDataConnectorDataTypesResponseLogs {
		if v == nil {
			return nil
		}
		return v.Logs
	}).(AwsCloudTrailDataConnectorDataTypesResponseLogsPtrOutput)
}

// Logs data type.
type AwsCloudTrailDataConnectorDataTypesResponseLogs struct {
	// Describe whether this data type connection is enabled or not.
	State *string `pulumi:"state"`
}

// Logs data type.
type AwsCloudTrailDataConnectorDataTypesResponseLogsOutput struct{ *pulumi.OutputState }

func (AwsCloudTrailDataConnectorDataTypesResponseLogsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AwsCloudTrailDataConnectorDataTypesResponseLogs)(nil)).Elem()
}

func (o AwsCloudTrailDataConnectorDataTypesResponseLogsOutput) ToAwsCloudTrailDataConnectorDataTypesResponseLogsOutput() AwsCloudTrailDataConnectorDataTypesResponseLogsOutput {
	return o
}

func (o AwsCloudTrailDataConnectorDataTypesResponseLogsOutput) ToAwsCloudTrailDataConnectorDataTypesResponseLogsOutputWithContext(ctx context.Context) AwsCloudTrailDataConnectorDataTypesResponseLogsOutput {
	return o
}

// Describe whether this data type connection is enabled or not.
func (o AwsCloudTrailDataConnectorDataTypesResponseLogsOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AwsCloudTrailDataConnectorDataTypesResponseLogs) *string { return v.State }).(pulumi.StringPtrOutput)
}

type AwsCloudTrailDataConnectorDataTypesResponseLogsPtrOutput struct{ *pulumi.OutputState }

func (AwsCloudTrailDataConnectorDataTypesResponseLogsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AwsCloudTrailDataConnectorDataTypesResponseLogs)(nil)).Elem()
}

func (o AwsCloudTrailDataConnectorDataTypesResponseLogsPtrOutput) ToAwsCloudTrailDataConnectorDataTypesResponseLogsPtrOutput() AwsCloudTrailDataConnectorDataTypesResponseLogsPtrOutput {
	return o
}

func (o AwsCloudTrailDataConnectorDataTypesResponseLogsPtrOutput) ToAwsCloudTrailDataConnectorDataTypesResponseLogsPtrOutputWithContext(ctx context.Context) AwsCloudTrailDataConnectorDataTypesResponseLogsPtrOutput {
	return o
}

func (o AwsCloudTrailDataConnectorDataTypesResponseLogsPtrOutput) Elem() AwsCloudTrailDataConnectorDataTypesResponseLogsOutput {
	return o.ApplyT(func(v *AwsCloudTrailDataConnectorDataTypesResponseLogs) AwsCloudTrailDataConnectorDataTypesResponseLogs {
		if v != nil {
			return *v
		}
		var ret AwsCloudTrailDataConnectorDataTypesResponseLogs
		return ret
	}).(AwsCloudTrailDataConnectorDataTypesResponseLogsOutput)
}

// Describe whether this data type connection is enabled or not.
func (o AwsCloudTrailDataConnectorDataTypesResponseLogsPtrOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AwsCloudTrailDataConnectorDataTypesResponseLogs) *string {
		if v == nil {
			return nil
		}
		return v.State
	}).(pulumi.StringPtrOutput)
}

// Model for API authentication with basic flow - user name + password.
type BasicAuthModel struct {
	// The password
	Password string `pulumi:"password"`
	// Type of paging
	// Expected value is 'Basic'.
	Type string `pulumi:"type"`
	// The user name.
	UserName string `pulumi:"userName"`
}

// BasicAuthModelInput is an input type that accepts BasicAuthModelArgs and BasicAuthModelOutput values.
// You can construct a concrete instance of `BasicAuthModelInput` via:
//
//	BasicAuthModelArgs{...}
type BasicAuthModelInput interface {
	pulumi.Input

	ToBasicAuthModelOutput() BasicAuthModelOutput
	ToBasicAuthModelOutputWithContext(context.Context) BasicAuthModelOutput
}

// Model for API authentication with basic flow - user name + password.
type BasicAuthModelArgs struct {
	// The password
	Password pulumi.StringInput `pulumi:"password"`
	// Type of paging
	// Expected value is 'Basic'.
	Type pulumi.StringInput `pulumi:"type"`
	// The user name.
	UserName pulumi.StringInput `pulumi:"userName"`
}

func (BasicAuthModelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BasicAuthModel)(nil)).Elem()
}

func (i BasicAuthModelArgs) ToBasicAuthModelOutput() BasicAuthModelOutput {
	return i.ToBasicAuthModelOutputWithContext(context.Background())
}

func (i BasicAuthModelArgs) ToBasicAuthModelOutputWithContext(ctx context.Context) BasicAuthModelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BasicAuthModelOutput)
}

// Model for API authentication with basic flow - user name + password.
type BasicAuthModelOutput struct{ *pulumi.OutputState }

func (BasicAuthModelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BasicAuthModel)(nil)).Elem()
}

func (o BasicAuthModelOutput) ToBasicAuthModelOutput() BasicAuthModelOutput {
	return o
}

func (o BasicAuthModelOutput) ToBasicAuthModelOutputWithContext(ctx context.Context) BasicAuthModelOutput {
	return o
}

// The password
func (o BasicAuthModelOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v BasicAuthModel) string { return v.Password }).(pulumi.StringOutput)
}

// Type of paging
// Expected value is 'Basic'.
func (o BasicAuthModelOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v BasicAuthModel) string { return v.Type }).(pulumi.StringOutput)
}

// The user name.
func (o BasicAuthModelOutput) UserName() pulumi.StringOutput {
	return o.ApplyT(func(v BasicAuthModel) string { return v.UserName }).(pulumi.StringOutput)
}

// Model for API authentication with basic flow - user name + password.
type BasicAuthModelResponse struct {
	// The password
	Password string `pulumi:"password"`
	// Type of paging
	// Expected value is 'Basic'.
	Type string `pulumi:"type"`
	// The user name.
	UserName string `pulumi:"userName"`
}

// Model for API authentication with basic flow - user name + password.
type BasicAuthModelResponseOutput struct{ *pulumi.OutputState }

func (BasicAuthModelResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BasicAuthModelResponse)(nil)).Elem()
}

func (o BasicAuthModelResponseOutput) ToBasicAuthModelResponseOutput() BasicAuthModelResponseOutput {
	return o
}

func (o BasicAuthModelResponseOutput) ToBasicAuthModelResponseOutputWithContext(ctx context.Context) BasicAuthModelResponseOutput {
	return o
}

// The password
func (o BasicAuthModelResponseOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v BasicAuthModelResponse) string { return v.Password }).(pulumi.StringOutput)
}

// Type of paging
// Expected value is 'Basic'.
func (o BasicAuthModelResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v BasicAuthModelResponse) string { return v.Type }).(pulumi.StringOutput)
}

// The user name.
func (o BasicAuthModelResponseOutput) UserName() pulumi.StringOutput {
	return o.ApplyT(func(v BasicAuthModelResponse) string { return v.UserName }).(pulumi.StringOutput)
}

// Describes an automation rule condition that applies a boolean operator (e.g AND, OR) to conditions
type BooleanConditionProperties struct {
	// Describes an automation rule condition with boolean operators.
	ConditionProperties *AutomationRuleBooleanCondition `pulumi:"conditionProperties"`
	// Expected value is 'Boolean'.
	ConditionType string `pulumi:"conditionType"`
}

// BooleanConditionPropertiesInput is an input type that accepts BooleanConditionPropertiesArgs and BooleanConditionPropertiesOutput values.
// You can construct a concrete instance of `BooleanConditionPropertiesInput` via:
//
//	BooleanConditionPropertiesArgs{...}
type BooleanConditionPropertiesInput interface {
	pulumi.Input

	ToBooleanConditionPropertiesOutput() BooleanConditionPropertiesOutput
	ToBooleanConditionPropertiesOutputWithContext(context.Context) BooleanConditionPropertiesOutput
}

// Describes an automation rule condition that applies a boolean operator (e.g AND, OR) to conditions
type BooleanConditionPropertiesArgs struct {
	// Describes an automation rule condition with boolean operators.
	ConditionProperties AutomationRuleBooleanConditionPtrInput `pulumi:"conditionProperties"`
	// Expected value is 'Boolean'.
	ConditionType pulumi.StringInput `pulumi:"conditionType"`
}

func (BooleanConditionPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BooleanConditionProperties)(nil)).Elem()
}

func (i BooleanConditionPropertiesArgs) ToBooleanConditionPropertiesOutput() BooleanConditionPropertiesOutput {
	return i.ToBooleanConditionPropertiesOutputWithContext(context.Background())
}

func (i BooleanConditionPropertiesArgs) ToBooleanConditionPropertiesOutputWithContext(ctx context.Context) BooleanConditionPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BooleanConditionPropertiesOutput)
}

// Describes an automation rule condition that applies a boolean operator (e.g AND, OR) to conditions
type BooleanConditionPropertiesOutput struct{ *pulumi.OutputState }

func (BooleanConditionPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BooleanConditionProperties)(nil)).Elem()
}

func (o BooleanConditionPropertiesOutput) ToBooleanConditionPropertiesOutput() BooleanConditionPropertiesOutput {
	return o
}

func (o BooleanConditionPropertiesOutput) ToBooleanConditionPropertiesOutputWithContext(ctx context.Context) BooleanConditionPropertiesOutput {
	return o
}

// Describes an automation rule condition with boolean operators.
func (o BooleanConditionPropertiesOutput) ConditionProperties() AutomationRuleBooleanConditionPtrOutput {
	return o.ApplyT(func(v BooleanConditionProperties) *AutomationRuleBooleanCondition { return v.ConditionProperties }).(AutomationRuleBooleanConditionPtrOutput)
}

// Expected value is 'Boolean'.
func (o BooleanConditionPropertiesOutput) ConditionType() pulumi.StringOutput {
	return o.ApplyT(func(v BooleanConditionProperties) string { return v.ConditionType }).(pulumi.StringOutput)
}

// Describes an automation rule condition that applies a boolean operator (e.g AND, OR) to conditions
type BooleanConditionPropertiesResponse struct {
	// Describes an automation rule condition with boolean operators.
	ConditionProperties *AutomationRuleBooleanConditionResponse `pulumi:"conditionProperties"`
	// Expected value is 'Boolean'.
	ConditionType string `pulumi:"conditionType"`
}

// Describes an automation rule condition that applies a boolean operator (e.g AND, OR) to conditions
type BooleanConditionPropertiesResponseOutput struct{ *pulumi.OutputState }

func (BooleanConditionPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BooleanConditionPropertiesResponse)(nil)).Elem()
}

func (o BooleanConditionPropertiesResponseOutput) ToBooleanConditionPropertiesResponseOutput() BooleanConditionPropertiesResponseOutput {
	return o
}

func (o BooleanConditionPropertiesResponseOutput) ToBooleanConditionPropertiesResponseOutputWithContext(ctx context.Context) BooleanConditionPropertiesResponseOutput {
	return o
}

// Describes an automation rule condition with boolean operators.
func (o BooleanConditionPropertiesResponseOutput) ConditionProperties() AutomationRuleBooleanConditionResponsePtrOutput {
	return o.ApplyT(func(v BooleanConditionPropertiesResponse) *AutomationRuleBooleanConditionResponse {
		return v.ConditionProperties
	}).(AutomationRuleBooleanConditionResponsePtrOutput)
}

// Expected value is 'Boolean'.
func (o BooleanConditionPropertiesResponseOutput) ConditionType() pulumi.StringOutput {
	return o.ApplyT(func(v BooleanConditionPropertiesResponse) string { return v.ConditionType }).(pulumi.StringOutput)
}

// A custom response configuration for a rule.
type CcpResponseConfig struct {
	// The compression algorithm. For Example: 'gzip', 'multi-gzip', 'deflate'.
	CompressionAlgo *string `pulumi:"compressionAlgo"`
	// The value indicating whether the response isn't an array of events / logs.  By setting this flag to true it means the remote server will response with an object which each property has as a value an array of events / logs.
	ConvertChildPropertiesToArray *bool `pulumi:"convertChildPropertiesToArray"`
	// The csv delimiter, in case the response format is CSV.
	CsvDelimiter *string `pulumi:"csvDelimiter"`
	// The character used to escape characters in CSV.
	CsvEscape *string `pulumi:"csvEscape"`
	// The json paths, '$' char is the json root.
	EventsJsonPaths []string `pulumi:"eventsJsonPaths"`
	// The response format. possible values are json,csv,xml
	Format *string `pulumi:"format"`
	// The value indicating whether the response has CSV boundary in case the response in CSV format.
	HasCsvBoundary *bool `pulumi:"hasCsvBoundary"`
	// The value indicating whether the response has headers in case the response in CSV format.
	HasCsvHeader *bool `pulumi:"hasCsvHeader"`
	// The value indicating whether the remote server support Gzip and we should expect Gzip response.
	IsGzipCompressed *bool `pulumi:"isGzipCompressed"`
	// The value where the status message/code should appear in the response.
	SuccessStatusJsonPath *string `pulumi:"successStatusJsonPath"`
	// The status value.
	SuccessStatusValue *string `pulumi:"successStatusValue"`
}

// Defaults sets the appropriate defaults for CcpResponseConfig
func (val *CcpResponseConfig) Defaults() *CcpResponseConfig {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.CompressionAlgo == nil {
		compressionAlgo_ := "gzip"
		tmp.CompressionAlgo = &compressionAlgo_
	}
	if tmp.CsvEscape == nil {
		csvEscape_ := "\""
		tmp.CsvEscape = &csvEscape_
	}
	if tmp.Format == nil {
		format_ := "json"
		tmp.Format = &format_
	}
	return &tmp
}

// CcpResponseConfigInput is an input type that accepts CcpResponseConfigArgs and CcpResponseConfigOutput values.
// You can construct a concrete instance of `CcpResponseConfigInput` via:
//
//	CcpResponseConfigArgs{...}
type CcpResponseConfigInput interface {
	pulumi.Input

	ToCcpResponseConfigOutput() CcpResponseConfigOutput
	ToCcpResponseConfigOutputWithContext(context.Context) CcpResponseConfigOutput
}

// A custom response configuration for a rule.
type CcpResponseConfigArgs struct {
	// The compression algorithm. For Example: 'gzip', 'multi-gzip', 'deflate'.
	CompressionAlgo pulumi.StringPtrInput `pulumi:"compressionAlgo"`
	// The value indicating whether the response isn't an array of events / logs.  By setting this flag to true it means the remote server will response with an object which each property has as a value an array of events / logs.
	ConvertChildPropertiesToArray pulumi.BoolPtrInput `pulumi:"convertChildPropertiesToArray"`
	// The csv delimiter, in case the response format is CSV.
	CsvDelimiter pulumi.StringPtrInput `pulumi:"csvDelimiter"`
	// The character used to escape characters in CSV.
	CsvEscape pulumi.StringPtrInput `pulumi:"csvEscape"`
	// The json paths, '$' char is the json root.
	EventsJsonPaths pulumi.StringArrayInput `pulumi:"eventsJsonPaths"`
	// The response format. possible values are json,csv,xml
	Format pulumi.StringPtrInput `pulumi:"format"`
	// The value indicating whether the response has CSV boundary in case the response in CSV format.
	HasCsvBoundary pulumi.BoolPtrInput `pulumi:"hasCsvBoundary"`
	// The value indicating whether the response has headers in case the response in CSV format.
	HasCsvHeader pulumi.BoolPtrInput `pulumi:"hasCsvHeader"`
	// The value indicating whether the remote server support Gzip and we should expect Gzip response.
	IsGzipCompressed pulumi.BoolPtrInput `pulumi:"isGzipCompressed"`
	// The value where the status message/code should appear in the response.
	SuccessStatusJsonPath pulumi.StringPtrInput `pulumi:"successStatusJsonPath"`
	// The status value.
	SuccessStatusValue pulumi.StringPtrInput `pulumi:"successStatusValue"`
}

// Defaults sets the appropriate defaults for CcpResponseConfigArgs
func (val *CcpResponseConfigArgs) Defaults() *CcpResponseConfigArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.CompressionAlgo == nil {
		tmp.CompressionAlgo = pulumi.StringPtr("gzip")
	}
	if tmp.CsvEscape == nil {
		tmp.CsvEscape = pulumi.StringPtr("\"")
	}
	if tmp.Format == nil {
		tmp.Format = pulumi.StringPtr("json")
	}
	return &tmp
}
func (CcpResponseConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CcpResponseConfig)(nil)).Elem()
}

func (i CcpResponseConfigArgs) ToCcpResponseConfigOutput() CcpResponseConfigOutput {
	return i.ToCcpResponseConfigOutputWithContext(context.Background())
}

func (i CcpResponseConfigArgs) ToCcpResponseConfigOutputWithContext(ctx context.Context) CcpResponseConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CcpResponseConfigOutput)
}

func (i CcpResponseConfigArgs) ToCcpResponseConfigPtrOutput() CcpResponseConfigPtrOutput {
	return i.ToCcpResponseConfigPtrOutputWithContext(context.Background())
}

func (i CcpResponseConfigArgs) ToCcpResponseConfigPtrOutputWithContext(ctx context.Context) CcpResponseConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CcpResponseConfigOutput).ToCcpResponseConfigPtrOutputWithContext(ctx)
}

// CcpResponseConfigPtrInput is an input type that accepts CcpResponseConfigArgs, CcpResponseConfigPtr and CcpResponseConfigPtrOutput values.
// You can construct a concrete instance of `CcpResponseConfigPtrInput` via:
//
//	        CcpResponseConfigArgs{...}
//
//	or:
//
//	        nil
type CcpResponseConfigPtrInput interface {
	pulumi.Input

	ToCcpResponseConfigPtrOutput() CcpResponseConfigPtrOutput
	ToCcpResponseConfigPtrOutputWithContext(context.Context) CcpResponseConfigPtrOutput
}

type ccpResponseConfigPtrType CcpResponseConfigArgs

func CcpResponseConfigPtr(v *CcpResponseConfigArgs) CcpResponseConfigPtrInput {
	return (*ccpResponseConfigPtrType)(v)
}

func (*ccpResponseConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CcpResponseConfig)(nil)).Elem()
}

func (i *ccpResponseConfigPtrType) ToCcpResponseConfigPtrOutput() CcpResponseConfigPtrOutput {
	return i.ToCcpResponseConfigPtrOutputWithContext(context.Background())
}

func (i *ccpResponseConfigPtrType) ToCcpResponseConfigPtrOutputWithContext(ctx context.Context) CcpResponseConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CcpResponseConfigPtrOutput)
}

// A custom response configuration for a rule.
type CcpResponseConfigOutput struct{ *pulumi.OutputState }

func (CcpResponseConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CcpResponseConfig)(nil)).Elem()
}

func (o CcpResponseConfigOutput) ToCcpResponseConfigOutput() CcpResponseConfigOutput {
	return o
}

func (o CcpResponseConfigOutput) ToCcpResponseConfigOutputWithContext(ctx context.Context) CcpResponseConfigOutput {
	return o
}

func (o CcpResponseConfigOutput) ToCcpResponseConfigPtrOutput() CcpResponseConfigPtrOutput {
	return o.ToCcpResponseConfigPtrOutputWithContext(context.Background())
}

func (o CcpResponseConfigOutput) ToCcpResponseConfigPtrOutputWithContext(ctx context.Context) CcpResponseConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CcpResponseConfig) *CcpResponseConfig {
		return &v
	}).(CcpResponseConfigPtrOutput)
}

// The compression algorithm. For Example: 'gzip', 'multi-gzip', 'deflate'.
func (o CcpResponseConfigOutput) CompressionAlgo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CcpResponseConfig) *string { return v.CompressionAlgo }).(pulumi.StringPtrOutput)
}

// The value indicating whether the response isn't an array of events / logs.  By setting this flag to true it means the remote server will response with an object which each property has as a value an array of events / logs.
func (o CcpResponseConfigOutput) ConvertChildPropertiesToArray() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CcpResponseConfig) *bool { return v.ConvertChildPropertiesToArray }).(pulumi.BoolPtrOutput)
}

// The csv delimiter, in case the response format is CSV.
func (o CcpResponseConfigOutput) CsvDelimiter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CcpResponseConfig) *string { return v.CsvDelimiter }).(pulumi.StringPtrOutput)
}

// The character used to escape characters in CSV.
func (o CcpResponseConfigOutput) CsvEscape() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CcpResponseConfig) *string { return v.CsvEscape }).(pulumi.StringPtrOutput)
}

// The json paths, '$' char is the json root.
func (o CcpResponseConfigOutput) EventsJsonPaths() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CcpResponseConfig) []string { return v.EventsJsonPaths }).(pulumi.StringArrayOutput)
}

// The response format. possible values are json,csv,xml
func (o CcpResponseConfigOutput) Format() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CcpResponseConfig) *string { return v.Format }).(pulumi.StringPtrOutput)
}

// The value indicating whether the response has CSV boundary in case the response in CSV format.
func (o CcpResponseConfigOutput) HasCsvBoundary() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CcpResponseConfig) *bool { return v.HasCsvBoundary }).(pulumi.BoolPtrOutput)
}

// The value indicating whether the response has headers in case the response in CSV format.
func (o CcpResponseConfigOutput) HasCsvHeader() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CcpResponseConfig) *bool { return v.HasCsvHeader }).(pulumi.BoolPtrOutput)
}

// The value indicating whether the remote server support Gzip and we should expect Gzip response.
func (o CcpResponseConfigOutput) IsGzipCompressed() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CcpResponseConfig) *bool { return v.IsGzipCompressed }).(pulumi.BoolPtrOutput)
}

// The value where the status message/code should appear in the response.
func (o CcpResponseConfigOutput) SuccessStatusJsonPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CcpResponseConfig) *string { return v.SuccessStatusJsonPath }).(pulumi.StringPtrOutput)
}

// The status value.
func (o CcpResponseConfigOutput) SuccessStatusValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CcpResponseConfig) *string { return v.SuccessStatusValue }).(pulumi.StringPtrOutput)
}

type CcpResponseConfigPtrOutput struct{ *pulumi.OutputState }

func (CcpResponseConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CcpResponseConfig)(nil)).Elem()
}

func (o CcpResponseConfigPtrOutput) ToCcpResponseConfigPtrOutput() CcpResponseConfigPtrOutput {
	return o
}

func (o CcpResponseConfigPtrOutput) ToCcpResponseConfigPtrOutputWithContext(ctx context.Context) CcpResponseConfigPtrOutput {
	return o
}

func (o CcpResponseConfigPtrOutput) Elem() CcpResponseConfigOutput {
	return o.ApplyT(func(v *CcpResponseConfig) CcpResponseConfig {
		if v != nil {
			return *v
		}
		var ret CcpResponseConfig
		return ret
	}).(CcpResponseConfigOutput)
}

// The compression algorithm. For Example: 'gzip', 'multi-gzip', 'deflate'.
func (o CcpResponseConfigPtrOutput) CompressionAlgo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CcpResponseConfig) *string {
		if v == nil {
			return nil
		}
		return v.CompressionAlgo
	}).(pulumi.StringPtrOutput)
}

// The value indicating whether the response isn't an array of events / logs.  By setting this flag to true it means the remote server will response with an object which each property has as a value an array of events / logs.
func (o CcpResponseConfigPtrOutput) ConvertChildPropertiesToArray() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CcpResponseConfig) *bool {
		if v == nil {
			return nil
		}
		return v.ConvertChildPropertiesToArray
	}).(pulumi.BoolPtrOutput)
}

// The csv delimiter, in case the response format is CSV.
func (o CcpResponseConfigPtrOutput) CsvDelimiter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CcpResponseConfig) *string {
		if v == nil {
			return nil
		}
		return v.CsvDelimiter
	}).(pulumi.StringPtrOutput)
}

// The character used to escape characters in CSV.
func (o CcpResponseConfigPtrOutput) CsvEscape() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CcpResponseConfig) *string {
		if v == nil {
			return nil
		}
		return v.CsvEscape
	}).(pulumi.StringPtrOutput)
}

// The json paths, '$' char is the json root.
func (o CcpResponseConfigPtrOutput) EventsJsonPaths() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *CcpResponseConfig) []string {
		if v == nil {
			return nil
		}
		return v.EventsJsonPaths
	}).(pulumi.StringArrayOutput)
}

// The response format. possible values are json,csv,xml
func (o CcpResponseConfigPtrOutput) Format() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CcpResponseConfig) *string {
		if v == nil {
			return nil
		}
		return v.Format
	}).(pulumi.StringPtrOutput)
}

// The value indicating whether the response has CSV boundary in case the response in CSV format.
func (o CcpResponseConfigPtrOutput) HasCsvBoundary() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CcpResponseConfig) *bool {
		if v == nil {
			return nil
		}
		return v.HasCsvBoundary
	}).(pulumi.BoolPtrOutput)
}

// The value indicating whether the response has headers in case the response in CSV format.
func (o CcpResponseConfigPtrOutput) HasCsvHeader() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CcpResponseConfig) *bool {
		if v == nil {
			return nil
		}
		return v.HasCsvHeader
	}).(pulumi.BoolPtrOutput)
}

// The value indicating whether the remote server support Gzip and we should expect Gzip response.
func (o CcpResponseConfigPtrOutput) IsGzipCompressed() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CcpResponseConfig) *bool {
		if v == nil {
			return nil
		}
		return v.IsGzipCompressed
	}).(pulumi.BoolPtrOutput)
}

// The value where the status message/code should appear in the response.
func (o CcpResponseConfigPtrOutput) SuccessStatusJsonPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CcpResponseConfig) *string {
		if v == nil {
			return nil
		}
		return v.SuccessStatusJsonPath
	}).(pulumi.StringPtrOutput)
}

// The status value.
func (o CcpResponseConfigPtrOutput) SuccessStatusValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CcpResponseConfig) *string {
		if v == nil {
			return nil
		}
		return v.SuccessStatusValue
	}).(pulumi.StringPtrOutput)
}

// A custom response configuration for a rule.
type CcpResponseConfigResponse struct {
	// The compression algorithm. For Example: 'gzip', 'multi-gzip', 'deflate'.
	CompressionAlgo *string `pulumi:"compressionAlgo"`
	// The value indicating whether the response isn't an array of events / logs.  By setting this flag to true it means the remote server will response with an object which each property has as a value an array of events / logs.
	ConvertChildPropertiesToArray *bool `pulumi:"convertChildPropertiesToArray"`
	// The csv delimiter, in case the response format is CSV.
	CsvDelimiter *string `pulumi:"csvDelimiter"`
	// The character used to escape characters in CSV.
	CsvEscape *string `pulumi:"csvEscape"`
	// The json paths, '$' char is the json root.
	EventsJsonPaths []string `pulumi:"eventsJsonPaths"`
	// The response format. possible values are json,csv,xml
	Format *string `pulumi:"format"`
	// The value indicating whether the response has CSV boundary in case the response in CSV format.
	HasCsvBoundary *bool `pulumi:"hasCsvBoundary"`
	// The value indicating whether the response has headers in case the response in CSV format.
	HasCsvHeader *bool `pulumi:"hasCsvHeader"`
	// The value indicating whether the remote server support Gzip and we should expect Gzip response.
	IsGzipCompressed *bool `pulumi:"isGzipCompressed"`
	// The value where the status message/code should appear in the response.
	SuccessStatusJsonPath *string `pulumi:"successStatusJsonPath"`
	// The status value.
	SuccessStatusValue *string `pulumi:"successStatusValue"`
}

// Defaults sets the appropriate defaults for CcpResponseConfigResponse
func (val *CcpResponseConfigResponse) Defaults() *CcpResponseConfigResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.CompressionAlgo == nil {
		compressionAlgo_ := "gzip"
		tmp.CompressionAlgo = &compressionAlgo_
	}
	if tmp.CsvEscape == nil {
		csvEscape_ := "\""
		tmp.CsvEscape = &csvEscape_
	}
	if tmp.Format == nil {
		format_ := "json"
		tmp.Format = &format_
	}
	return &tmp
}

// A custom response configuration for a rule.
type CcpResponseConfigResponseOutput struct{ *pulumi.OutputState }

func (CcpResponseConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CcpResponseConfigResponse)(nil)).Elem()
}

func (o CcpResponseConfigResponseOutput) ToCcpResponseConfigResponseOutput() CcpResponseConfigResponseOutput {
	return o
}

func (o CcpResponseConfigResponseOutput) ToCcpResponseConfigResponseOutputWithContext(ctx context.Context) CcpResponseConfigResponseOutput {
	return o
}

// The compression algorithm. For Example: 'gzip', 'multi-gzip', 'deflate'.
func (o CcpResponseConfigResponseOutput) CompressionAlgo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CcpResponseConfigResponse) *string { return v.CompressionAlgo }).(pulumi.StringPtrOutput)
}

// The value indicating whether the response isn't an array of events / logs.  By setting this flag to true it means the remote server will response with an object which each property has as a value an array of events / logs.
func (o CcpResponseConfigResponseOutput) ConvertChildPropertiesToArray() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CcpResponseConfigResponse) *bool { return v.ConvertChildPropertiesToArray }).(pulumi.BoolPtrOutput)
}

// The csv delimiter, in case the response format is CSV.
func (o CcpResponseConfigResponseOutput) CsvDelimiter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CcpResponseConfigResponse) *string { return v.CsvDelimiter }).(pulumi.StringPtrOutput)
}

// The character used to escape characters in CSV.
func (o CcpResponseConfigResponseOutput) CsvEscape() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CcpResponseConfigResponse) *string { return v.CsvEscape }).(pulumi.StringPtrOutput)
}

// The json paths, '$' char is the json root.
func (o CcpResponseConfigResponseOutput) EventsJsonPaths() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CcpResponseConfigResponse) []string { return v.EventsJsonPaths }).(pulumi.StringArrayOutput)
}

// The response format. possible values are json,csv,xml
func (o CcpResponseConfigResponseOutput) Format() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CcpResponseConfigResponse) *string { return v.Format }).(pulumi.StringPtrOutput)
}

// The value indicating whether the response has CSV boundary in case the response in CSV format.
func (o CcpResponseConfigResponseOutput) HasCsvBoundary() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CcpResponseConfigResponse) *bool { return v.HasCsvBoundary }).(pulumi.BoolPtrOutput)
}

// The value indicating whether the response has headers in case the response in CSV format.
func (o CcpResponseConfigResponseOutput) HasCsvHeader() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CcpResponseConfigResponse) *bool { return v.HasCsvHeader }).(pulumi.BoolPtrOutput)
}

// The value indicating whether the remote server support Gzip and we should expect Gzip response.
func (o CcpResponseConfigResponseOutput) IsGzipCompressed() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CcpResponseConfigResponse) *bool { return v.IsGzipCompressed }).(pulumi.BoolPtrOutput)
}

// The value where the status message/code should appear in the response.
func (o CcpResponseConfigResponseOutput) SuccessStatusJsonPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CcpResponseConfigResponse) *string { return v.SuccessStatusJsonPath }).(pulumi.StringPtrOutput)
}

// The status value.
func (o CcpResponseConfigResponseOutput) SuccessStatusValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CcpResponseConfigResponse) *string { return v.SuccessStatusValue }).(pulumi.StringPtrOutput)
}

type CcpResponseConfigResponsePtrOutput struct{ *pulumi.OutputState }

func (CcpResponseConfigResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CcpResponseConfigResponse)(nil)).Elem()
}

func (o CcpResponseConfigResponsePtrOutput) ToCcpResponseConfigResponsePtrOutput() CcpResponseConfigResponsePtrOutput {
	return o
}

func (o CcpResponseConfigResponsePtrOutput) ToCcpResponseConfigResponsePtrOutputWithContext(ctx context.Context) CcpResponseConfigResponsePtrOutput {
	return o
}

func (o CcpResponseConfigResponsePtrOutput) Elem() CcpResponseConfigResponseOutput {
	return o.ApplyT(func(v *CcpResponseConfigResponse) CcpResponseConfigResponse {
		if v != nil {
			return *v
		}
		var ret CcpResponseConfigResponse
		return ret
	}).(CcpResponseConfigResponseOutput)
}

// The compression algorithm. For Example: 'gzip', 'multi-gzip', 'deflate'.
func (o CcpResponseConfigResponsePtrOutput) CompressionAlgo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CcpResponseConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.CompressionAlgo
	}).(pulumi.StringPtrOutput)
}

// The value indicating whether the response isn't an array of events / logs.  By setting this flag to true it means the remote server will response with an object which each property has as a value an array of events / logs.
func (o CcpResponseConfigResponsePtrOutput) ConvertChildPropertiesToArray() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CcpResponseConfigResponse) *bool {
		if v == nil {
			return nil
		}
		return v.ConvertChildPropertiesToArray
	}).(pulumi.BoolPtrOutput)
}

// The csv delimiter, in case the response format is CSV.
func (o CcpResponseConfigResponsePtrOutput) CsvDelimiter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CcpResponseConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.CsvDelimiter
	}).(pulumi.StringPtrOutput)
}

// The character used to escape characters in CSV.
func (o CcpResponseConfigResponsePtrOutput) CsvEscape() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CcpResponseConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.CsvEscape
	}).(pulumi.StringPtrOutput)
}

// The json paths, '$' char is the json root.
func (o CcpResponseConfigResponsePtrOutput) EventsJsonPaths() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *CcpResponseConfigResponse) []string {
		if v == nil {
			return nil
		}
		return v.EventsJsonPaths
	}).(pulumi.StringArrayOutput)
}

// The response format. possible values are json,csv,xml
func (o CcpResponseConfigResponsePtrOutput) Format() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CcpResponseConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.Format
	}).(pulumi.StringPtrOutput)
}

// The value indicating whether the response has CSV boundary in case the response in CSV format.
func (o CcpResponseConfigResponsePtrOutput) HasCsvBoundary() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CcpResponseConfigResponse) *bool {
		if v == nil {
			return nil
		}
		return v.HasCsvBoundary
	}).(pulumi.BoolPtrOutput)
}

// The value indicating whether the response has headers in case the response in CSV format.
func (o CcpResponseConfigResponsePtrOutput) HasCsvHeader() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CcpResponseConfigResponse) *bool {
		if v == nil {
			return nil
		}
		return v.HasCsvHeader
	}).(pulumi.BoolPtrOutput)
}

// The value indicating whether the remote server support Gzip and we should expect Gzip response.
func (o CcpResponseConfigResponsePtrOutput) IsGzipCompressed() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CcpResponseConfigResponse) *bool {
		if v == nil {
			return nil
		}
		return v.IsGzipCompressed
	}).(pulumi.BoolPtrOutput)
}

// The value where the status message/code should appear in the response.
func (o CcpResponseConfigResponsePtrOutput) SuccessStatusJsonPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CcpResponseConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.SuccessStatusJsonPath
	}).(pulumi.StringPtrOutput)
}

// The status value.
func (o CcpResponseConfigResponsePtrOutput) SuccessStatusValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CcpResponseConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.SuccessStatusValue
	}).(pulumi.StringPtrOutput)
}

// Information on the client (user or application) that made some action
type ClientInfo struct {
	// The email of the client.
	Email *string `pulumi:"email"`
	// The name of the client.
	Name *string `pulumi:"name"`
	// The object id of the client.
	ObjectId *string `pulumi:"objectId"`
	// The user principal name of the client.
	UserPrincipalName *string `pulumi:"userPrincipalName"`
}

// ClientInfoInput is an input type that accepts ClientInfoArgs and ClientInfoOutput values.
// You can construct a concrete instance of `ClientInfoInput` via:
//
//	ClientInfoArgs{...}
type ClientInfoInput interface {
	pulumi.Input

	ToClientInfoOutput() ClientInfoOutput
	ToClientInfoOutputWithContext(context.Context) ClientInfoOutput
}

// Information on the client (user or application) that made some action
type ClientInfoArgs struct {
	// The email of the client.
	Email pulumi.StringPtrInput `pulumi:"email"`
	// The name of the client.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The object id of the client.
	ObjectId pulumi.StringPtrInput `pulumi:"objectId"`
	// The user principal name of the client.
	UserPrincipalName pulumi.StringPtrInput `pulumi:"userPrincipalName"`
}

func (ClientInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClientInfo)(nil)).Elem()
}

func (i ClientInfoArgs) ToClientInfoOutput() ClientInfoOutput {
	return i.ToClientInfoOutputWithContext(context.Background())
}

func (i ClientInfoArgs) ToClientInfoOutputWithContext(ctx context.Context) ClientInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientInfoOutput)
}

func (i ClientInfoArgs) ToClientInfoPtrOutput() ClientInfoPtrOutput {
	return i.ToClientInfoPtrOutputWithContext(context.Background())
}

func (i ClientInfoArgs) ToClientInfoPtrOutputWithContext(ctx context.Context) ClientInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientInfoOutput).ToClientInfoPtrOutputWithContext(ctx)
}

// ClientInfoPtrInput is an input type that accepts ClientInfoArgs, ClientInfoPtr and ClientInfoPtrOutput values.
// You can construct a concrete instance of `ClientInfoPtrInput` via:
//
//	        ClientInfoArgs{...}
//
//	or:
//
//	        nil
type ClientInfoPtrInput interface {
	pulumi.Input

	ToClientInfoPtrOutput() ClientInfoPtrOutput
	ToClientInfoPtrOutputWithContext(context.Context) ClientInfoPtrOutput
}

type clientInfoPtrType ClientInfoArgs

func ClientInfoPtr(v *ClientInfoArgs) ClientInfoPtrInput {
	return (*clientInfoPtrType)(v)
}

func (*clientInfoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClientInfo)(nil)).Elem()
}

func (i *clientInfoPtrType) ToClientInfoPtrOutput() ClientInfoPtrOutput {
	return i.ToClientInfoPtrOutputWithContext(context.Background())
}

func (i *clientInfoPtrType) ToClientInfoPtrOutputWithContext(ctx context.Context) ClientInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientInfoPtrOutput)
}

// Information on the client (user or application) that made some action
type ClientInfoOutput struct{ *pulumi.OutputState }

func (ClientInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClientInfo)(nil)).Elem()
}

func (o ClientInfoOutput) ToClientInfoOutput() ClientInfoOutput {
	return o
}

func (o ClientInfoOutput) ToClientInfoOutputWithContext(ctx context.Context) ClientInfoOutput {
	return o
}

func (o ClientInfoOutput) ToClientInfoPtrOutput() ClientInfoPtrOutput {
	return o.ToClientInfoPtrOutputWithContext(context.Background())
}

func (o ClientInfoOutput) ToClientInfoPtrOutputWithContext(ctx context.Context) ClientInfoPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClientInfo) *ClientInfo {
		return &v
	}).(ClientInfoPtrOutput)
}

// The email of the client.
func (o ClientInfoOutput) Email() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClientInfo) *string { return v.Email }).(pulumi.StringPtrOutput)
}

// The name of the client.
func (o ClientInfoOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClientInfo) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The object id of the client.
func (o ClientInfoOutput) ObjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClientInfo) *string { return v.ObjectId }).(pulumi.StringPtrOutput)
}

// The user principal name of the client.
func (o ClientInfoOutput) UserPrincipalName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClientInfo) *string { return v.UserPrincipalName }).(pulumi.StringPtrOutput)
}

type ClientInfoPtrOutput struct{ *pulumi.OutputState }

func (ClientInfoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClientInfo)(nil)).Elem()
}

func (o ClientInfoPtrOutput) ToClientInfoPtrOutput() ClientInfoPtrOutput {
	return o
}

func (o ClientInfoPtrOutput) ToClientInfoPtrOutputWithContext(ctx context.Context) ClientInfoPtrOutput {
	return o
}

func (o ClientInfoPtrOutput) Elem() ClientInfoOutput {
	return o.ApplyT(func(v *ClientInfo) ClientInfo {
		if v != nil {
			return *v
		}
		var ret ClientInfo
		return ret
	}).(ClientInfoOutput)
}

// The email of the client.
func (o ClientInfoPtrOutput) Email() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClientInfo) *string {
		if v == nil {
			return nil
		}
		return v.Email
	}).(pulumi.StringPtrOutput)
}

// The name of the client.
func (o ClientInfoPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClientInfo) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// The object id of the client.
func (o ClientInfoPtrOutput) ObjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClientInfo) *string {
		if v == nil {
			return nil
		}
		return v.ObjectId
	}).(pulumi.StringPtrOutput)
}

// The user principal name of the client.
func (o ClientInfoPtrOutput) UserPrincipalName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClientInfo) *string {
		if v == nil {
			return nil
		}
		return v.UserPrincipalName
	}).(pulumi.StringPtrOutput)
}

// Information on the client (user or application) that made some action
type ClientInfoResponse struct {
	// The email of the client.
	Email *string `pulumi:"email"`
	// The name of the client.
	Name *string `pulumi:"name"`
	// The object id of the client.
	ObjectId *string `pulumi:"objectId"`
	// The user principal name of the client.
	UserPrincipalName *string `pulumi:"userPrincipalName"`
}

// Information on the client (user or application) that made some action
type ClientInfoResponseOutput struct{ *pulumi.OutputState }

func (ClientInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClientInfoResponse)(nil)).Elem()
}

func (o ClientInfoResponseOutput) ToClientInfoResponseOutput() ClientInfoResponseOutput {
	return o
}

func (o ClientInfoResponseOutput) ToClientInfoResponseOutputWithContext(ctx context.Context) ClientInfoResponseOutput {
	return o
}

// The email of the client.
func (o ClientInfoResponseOutput) Email() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClientInfoResponse) *string { return v.Email }).(pulumi.StringPtrOutput)
}

// The name of the client.
func (o ClientInfoResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClientInfoResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The object id of the client.
func (o ClientInfoResponseOutput) ObjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClientInfoResponse) *string { return v.ObjectId }).(pulumi.StringPtrOutput)
}

// The user principal name of the client.
func (o ClientInfoResponseOutput) UserPrincipalName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClientInfoResponse) *string { return v.UserPrincipalName }).(pulumi.StringPtrOutput)
}

type ClientInfoResponsePtrOutput struct{ *pulumi.OutputState }

func (ClientInfoResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClientInfoResponse)(nil)).Elem()
}

func (o ClientInfoResponsePtrOutput) ToClientInfoResponsePtrOutput() ClientInfoResponsePtrOutput {
	return o
}

func (o ClientInfoResponsePtrOutput) ToClientInfoResponsePtrOutputWithContext(ctx context.Context) ClientInfoResponsePtrOutput {
	return o
}

func (o ClientInfoResponsePtrOutput) Elem() ClientInfoResponseOutput {
	return o.ApplyT(func(v *ClientInfoResponse) ClientInfoResponse {
		if v != nil {
			return *v
		}
		var ret ClientInfoResponse
		return ret
	}).(ClientInfoResponseOutput)
}

// The email of the client.
func (o ClientInfoResponsePtrOutput) Email() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClientInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.Email
	}).(pulumi.StringPtrOutput)
}

// The name of the client.
func (o ClientInfoResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClientInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// The object id of the client.
func (o ClientInfoResponsePtrOutput) ObjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClientInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.ObjectId
	}).(pulumi.StringPtrOutput)
}

// The user principal name of the client.
func (o ClientInfoResponsePtrOutput) UserPrincipalName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClientInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.UserPrincipalName
	}).(pulumi.StringPtrOutput)
}

// The criteria by which we determine whether the connector is connected or not.
// For Example, use a KQL query to check if  the expected data type is flowing).
type ConnectivityCriterion struct {
	// Gets or sets the type of connectivity.
	Type string `pulumi:"type"`
	// Gets or sets the queries for checking connectivity.
	Value []string `pulumi:"value"`
}

// ConnectivityCriterionInput is an input type that accepts ConnectivityCriterionArgs and ConnectivityCriterionOutput values.
// You can construct a concrete instance of `ConnectivityCriterionInput` via:
//
//	ConnectivityCriterionArgs{...}
type ConnectivityCriterionInput interface {
	pulumi.Input

	ToConnectivityCriterionOutput() ConnectivityCriterionOutput
	ToConnectivityCriterionOutputWithContext(context.Context) ConnectivityCriterionOutput
}

// The criteria by which we determine whether the connector is connected or not.
// For Example, use a KQL query to check if  the expected data type is flowing).
type ConnectivityCriterionArgs struct {
	// Gets or sets the type of connectivity.
	Type pulumi.StringInput `pulumi:"type"`
	// Gets or sets the queries for checking connectivity.
	Value pulumi.StringArrayInput `pulumi:"value"`
}

func (ConnectivityCriterionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectivityCriterion)(nil)).Elem()
}

func (i ConnectivityCriterionArgs) ToConnectivityCriterionOutput() ConnectivityCriterionOutput {
	return i.ToConnectivityCriterionOutputWithContext(context.Background())
}

func (i ConnectivityCriterionArgs) ToConnectivityCriterionOutputWithContext(ctx context.Context) ConnectivityCriterionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectivityCriterionOutput)
}

// ConnectivityCriterionArrayInput is an input type that accepts ConnectivityCriterionArray and ConnectivityCriterionArrayOutput values.
// You can construct a concrete instance of `ConnectivityCriterionArrayInput` via:
//
//	ConnectivityCriterionArray{ ConnectivityCriterionArgs{...} }
type ConnectivityCriterionArrayInput interface {
	pulumi.Input

	ToConnectivityCriterionArrayOutput() ConnectivityCriterionArrayOutput
	ToConnectivityCriterionArrayOutputWithContext(context.Context) ConnectivityCriterionArrayOutput
}

type ConnectivityCriterionArray []ConnectivityCriterionInput

func (ConnectivityCriterionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnectivityCriterion)(nil)).Elem()
}

func (i ConnectivityCriterionArray) ToConnectivityCriterionArrayOutput() ConnectivityCriterionArrayOutput {
	return i.ToConnectivityCriterionArrayOutputWithContext(context.Background())
}

func (i ConnectivityCriterionArray) ToConnectivityCriterionArrayOutputWithContext(ctx context.Context) ConnectivityCriterionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectivityCriterionArrayOutput)
}

// The criteria by which we determine whether the connector is connected or not.
// For Example, use a KQL query to check if  the expected data type is flowing).
type ConnectivityCriterionOutput struct{ *pulumi.OutputState }

func (ConnectivityCriterionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectivityCriterion)(nil)).Elem()
}

func (o ConnectivityCriterionOutput) ToConnectivityCriterionOutput() ConnectivityCriterionOutput {
	return o
}

func (o ConnectivityCriterionOutput) ToConnectivityCriterionOutputWithContext(ctx context.Context) ConnectivityCriterionOutput {
	return o
}

// Gets or sets the type of connectivity.
func (o ConnectivityCriterionOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectivityCriterion) string { return v.Type }).(pulumi.StringOutput)
}

// Gets or sets the queries for checking connectivity.
func (o ConnectivityCriterionOutput) Value() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ConnectivityCriterion) []string { return v.Value }).(pulumi.StringArrayOutput)
}

type ConnectivityCriterionArrayOutput struct{ *pulumi.OutputState }

func (ConnectivityCriterionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnectivityCriterion)(nil)).Elem()
}

func (o ConnectivityCriterionArrayOutput) ToConnectivityCriterionArrayOutput() ConnectivityCriterionArrayOutput {
	return o
}

func (o ConnectivityCriterionArrayOutput) ToConnectivityCriterionArrayOutputWithContext(ctx context.Context) ConnectivityCriterionArrayOutput {
	return o
}

func (o ConnectivityCriterionArrayOutput) Index(i pulumi.IntInput) ConnectivityCriterionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConnectivityCriterion {
		return vs[0].([]ConnectivityCriterion)[vs[1].(int)]
	}).(ConnectivityCriterionOutput)
}

// The criteria by which we determine whether the connector is connected or not.
// For Example, use a KQL query to check if  the expected data type is flowing).
type ConnectivityCriterionResponse struct {
	// Gets or sets the type of connectivity.
	Type string `pulumi:"type"`
	// Gets or sets the queries for checking connectivity.
	Value []string `pulumi:"value"`
}

// The criteria by which we determine whether the connector is connected or not.
// For Example, use a KQL query to check if  the expected data type is flowing).
type ConnectivityCriterionResponseOutput struct{ *pulumi.OutputState }

func (ConnectivityCriterionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectivityCriterionResponse)(nil)).Elem()
}

func (o ConnectivityCriterionResponseOutput) ToConnectivityCriterionResponseOutput() ConnectivityCriterionResponseOutput {
	return o
}

func (o ConnectivityCriterionResponseOutput) ToConnectivityCriterionResponseOutputWithContext(ctx context.Context) ConnectivityCriterionResponseOutput {
	return o
}

// Gets or sets the type of connectivity.
func (o ConnectivityCriterionResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectivityCriterionResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Gets or sets the queries for checking connectivity.
func (o ConnectivityCriterionResponseOutput) Value() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ConnectivityCriterionResponse) []string { return v.Value }).(pulumi.StringArrayOutput)
}

type ConnectivityCriterionResponseArrayOutput struct{ *pulumi.OutputState }

func (ConnectivityCriterionResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnectivityCriterionResponse)(nil)).Elem()
}

func (o ConnectivityCriterionResponseArrayOutput) ToConnectivityCriterionResponseArrayOutput() ConnectivityCriterionResponseArrayOutput {
	return o
}

func (o ConnectivityCriterionResponseArrayOutput) ToConnectivityCriterionResponseArrayOutputWithContext(ctx context.Context) ConnectivityCriterionResponseArrayOutput {
	return o
}

func (o ConnectivityCriterionResponseArrayOutput) Index(i pulumi.IntInput) ConnectivityCriterionResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConnectivityCriterionResponse {
		return vs[0].([]ConnectivityCriterionResponse)[vs[1].(int)]
	}).(ConnectivityCriterionResponseOutput)
}

// The data type which is created by the connector,
// including a query indicated when was the last time that data type was received in the workspace.
type ConnectorDataType struct {
	// Gets or sets the query to indicate when relevant data was last received in the workspace.
	LastDataReceivedQuery string `pulumi:"lastDataReceivedQuery"`
	// Gets or sets the name of the data type to show in the graph.
	Name string `pulumi:"name"`
}

// ConnectorDataTypeInput is an input type that accepts ConnectorDataTypeArgs and ConnectorDataTypeOutput values.
// You can construct a concrete instance of `ConnectorDataTypeInput` via:
//
//	ConnectorDataTypeArgs{...}
type ConnectorDataTypeInput interface {
	pulumi.Input

	ToConnectorDataTypeOutput() ConnectorDataTypeOutput
	ToConnectorDataTypeOutputWithContext(context.Context) ConnectorDataTypeOutput
}

// The data type which is created by the connector,
// including a query indicated when was the last time that data type was received in the workspace.
type ConnectorDataTypeArgs struct {
	// Gets or sets the query to indicate when relevant data was last received in the workspace.
	LastDataReceivedQuery pulumi.StringInput `pulumi:"lastDataReceivedQuery"`
	// Gets or sets the name of the data type to show in the graph.
	Name pulumi.StringInput `pulumi:"name"`
}

func (ConnectorDataTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorDataType)(nil)).Elem()
}

func (i ConnectorDataTypeArgs) ToConnectorDataTypeOutput() ConnectorDataTypeOutput {
	return i.ToConnectorDataTypeOutputWithContext(context.Background())
}

func (i ConnectorDataTypeArgs) ToConnectorDataTypeOutputWithContext(ctx context.Context) ConnectorDataTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorDataTypeOutput)
}

// ConnectorDataTypeArrayInput is an input type that accepts ConnectorDataTypeArray and ConnectorDataTypeArrayOutput values.
// You can construct a concrete instance of `ConnectorDataTypeArrayInput` via:
//
//	ConnectorDataTypeArray{ ConnectorDataTypeArgs{...} }
type ConnectorDataTypeArrayInput interface {
	pulumi.Input

	ToConnectorDataTypeArrayOutput() ConnectorDataTypeArrayOutput
	ToConnectorDataTypeArrayOutputWithContext(context.Context) ConnectorDataTypeArrayOutput
}

type ConnectorDataTypeArray []ConnectorDataTypeInput

func (ConnectorDataTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnectorDataType)(nil)).Elem()
}

func (i ConnectorDataTypeArray) ToConnectorDataTypeArrayOutput() ConnectorDataTypeArrayOutput {
	return i.ToConnectorDataTypeArrayOutputWithContext(context.Background())
}

func (i ConnectorDataTypeArray) ToConnectorDataTypeArrayOutputWithContext(ctx context.Context) ConnectorDataTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorDataTypeArrayOutput)
}

// The data type which is created by the connector,
// including a query indicated when was the last time that data type was received in the workspace.
type ConnectorDataTypeOutput struct{ *pulumi.OutputState }

func (ConnectorDataTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorDataType)(nil)).Elem()
}

func (o ConnectorDataTypeOutput) ToConnectorDataTypeOutput() ConnectorDataTypeOutput {
	return o
}

func (o ConnectorDataTypeOutput) ToConnectorDataTypeOutputWithContext(ctx context.Context) ConnectorDataTypeOutput {
	return o
}

// Gets or sets the query to indicate when relevant data was last received in the workspace.
func (o ConnectorDataTypeOutput) LastDataReceivedQuery() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectorDataType) string { return v.LastDataReceivedQuery }).(pulumi.StringOutput)
}

// Gets or sets the name of the data type to show in the graph.
func (o ConnectorDataTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectorDataType) string { return v.Name }).(pulumi.StringOutput)
}

type ConnectorDataTypeArrayOutput struct{ *pulumi.OutputState }

func (ConnectorDataTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnectorDataType)(nil)).Elem()
}

func (o ConnectorDataTypeArrayOutput) ToConnectorDataTypeArrayOutput() ConnectorDataTypeArrayOutput {
	return o
}

func (o ConnectorDataTypeArrayOutput) ToConnectorDataTypeArrayOutputWithContext(ctx context.Context) ConnectorDataTypeArrayOutput {
	return o
}

func (o ConnectorDataTypeArrayOutput) Index(i pulumi.IntInput) ConnectorDataTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConnectorDataType {
		return vs[0].([]ConnectorDataType)[vs[1].(int)]
	}).(ConnectorDataTypeOutput)
}

// The data type which is created by the connector,
// including a query indicated when was the last time that data type was received in the workspace.
type ConnectorDataTypeResponse struct {
	// Gets or sets the query to indicate when relevant data was last received in the workspace.
	LastDataReceivedQuery string `pulumi:"lastDataReceivedQuery"`
	// Gets or sets the name of the data type to show in the graph.
	Name string `pulumi:"name"`
}

// The data type which is created by the connector,
// including a query indicated when was the last time that data type was received in the workspace.
type ConnectorDataTypeResponseOutput struct{ *pulumi.OutputState }

func (ConnectorDataTypeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorDataTypeResponse)(nil)).Elem()
}

func (o ConnectorDataTypeResponseOutput) ToConnectorDataTypeResponseOutput() ConnectorDataTypeResponseOutput {
	return o
}

func (o ConnectorDataTypeResponseOutput) ToConnectorDataTypeResponseOutputWithContext(ctx context.Context) ConnectorDataTypeResponseOutput {
	return o
}

// Gets or sets the query to indicate when relevant data was last received in the workspace.
func (o ConnectorDataTypeResponseOutput) LastDataReceivedQuery() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectorDataTypeResponse) string { return v.LastDataReceivedQuery }).(pulumi.StringOutput)
}

// Gets or sets the name of the data type to show in the graph.
func (o ConnectorDataTypeResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectorDataTypeResponse) string { return v.Name }).(pulumi.StringOutput)
}

type ConnectorDataTypeResponseArrayOutput struct{ *pulumi.OutputState }

func (ConnectorDataTypeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnectorDataTypeResponse)(nil)).Elem()
}

func (o ConnectorDataTypeResponseArrayOutput) ToConnectorDataTypeResponseArrayOutput() ConnectorDataTypeResponseArrayOutput {
	return o
}

func (o ConnectorDataTypeResponseArrayOutput) ToConnectorDataTypeResponseArrayOutputWithContext(ctx context.Context) ConnectorDataTypeResponseArrayOutput {
	return o
}

func (o ConnectorDataTypeResponseArrayOutput) Index(i pulumi.IntInput) ConnectorDataTypeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConnectorDataTypeResponse {
		return vs[0].([]ConnectorDataTypeResponse)[vs[1].(int)]
	}).(ConnectorDataTypeResponseOutput)
}

// The exposure status of the connector to the customers.
type ConnectorDefinitionsAvailability struct {
	// Gets or sets a value indicating whether the connector is preview.
	IsPreview *bool `pulumi:"isPreview"`
	// The exposure status of the connector to the customers. Available values are 0-4 (0=None, 1=Available, 2=FeatureFlag, 3=Internal).
	Status *int `pulumi:"status"`
}

// ConnectorDefinitionsAvailabilityInput is an input type that accepts ConnectorDefinitionsAvailabilityArgs and ConnectorDefinitionsAvailabilityOutput values.
// You can construct a concrete instance of `ConnectorDefinitionsAvailabilityInput` via:
//
//	ConnectorDefinitionsAvailabilityArgs{...}
type ConnectorDefinitionsAvailabilityInput interface {
	pulumi.Input

	ToConnectorDefinitionsAvailabilityOutput() ConnectorDefinitionsAvailabilityOutput
	ToConnectorDefinitionsAvailabilityOutputWithContext(context.Context) ConnectorDefinitionsAvailabilityOutput
}

// The exposure status of the connector to the customers.
type ConnectorDefinitionsAvailabilityArgs struct {
	// Gets or sets a value indicating whether the connector is preview.
	IsPreview pulumi.BoolPtrInput `pulumi:"isPreview"`
	// The exposure status of the connector to the customers. Available values are 0-4 (0=None, 1=Available, 2=FeatureFlag, 3=Internal).
	Status pulumi.IntPtrInput `pulumi:"status"`
}

func (ConnectorDefinitionsAvailabilityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorDefinitionsAvailability)(nil)).Elem()
}

func (i ConnectorDefinitionsAvailabilityArgs) ToConnectorDefinitionsAvailabilityOutput() ConnectorDefinitionsAvailabilityOutput {
	return i.ToConnectorDefinitionsAvailabilityOutputWithContext(context.Background())
}

func (i ConnectorDefinitionsAvailabilityArgs) ToConnectorDefinitionsAvailabilityOutputWithContext(ctx context.Context) ConnectorDefinitionsAvailabilityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorDefinitionsAvailabilityOutput)
}

func (i ConnectorDefinitionsAvailabilityArgs) ToConnectorDefinitionsAvailabilityPtrOutput() ConnectorDefinitionsAvailabilityPtrOutput {
	return i.ToConnectorDefinitionsAvailabilityPtrOutputWithContext(context.Background())
}

func (i ConnectorDefinitionsAvailabilityArgs) ToConnectorDefinitionsAvailabilityPtrOutputWithContext(ctx context.Context) ConnectorDefinitionsAvailabilityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorDefinitionsAvailabilityOutput).ToConnectorDefinitionsAvailabilityPtrOutputWithContext(ctx)
}

// ConnectorDefinitionsAvailabilityPtrInput is an input type that accepts ConnectorDefinitionsAvailabilityArgs, ConnectorDefinitionsAvailabilityPtr and ConnectorDefinitionsAvailabilityPtrOutput values.
// You can construct a concrete instance of `ConnectorDefinitionsAvailabilityPtrInput` via:
//
//	        ConnectorDefinitionsAvailabilityArgs{...}
//
//	or:
//
//	        nil
type ConnectorDefinitionsAvailabilityPtrInput interface {
	pulumi.Input

	ToConnectorDefinitionsAvailabilityPtrOutput() ConnectorDefinitionsAvailabilityPtrOutput
	ToConnectorDefinitionsAvailabilityPtrOutputWithContext(context.Context) ConnectorDefinitionsAvailabilityPtrOutput
}

type connectorDefinitionsAvailabilityPtrType ConnectorDefinitionsAvailabilityArgs

func ConnectorDefinitionsAvailabilityPtr(v *ConnectorDefinitionsAvailabilityArgs) ConnectorDefinitionsAvailabilityPtrInput {
	return (*connectorDefinitionsAvailabilityPtrType)(v)
}

func (*connectorDefinitionsAvailabilityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorDefinitionsAvailability)(nil)).Elem()
}

func (i *connectorDefinitionsAvailabilityPtrType) ToConnectorDefinitionsAvailabilityPtrOutput() ConnectorDefinitionsAvailabilityPtrOutput {
	return i.ToConnectorDefinitionsAvailabilityPtrOutputWithContext(context.Background())
}

func (i *connectorDefinitionsAvailabilityPtrType) ToConnectorDefinitionsAvailabilityPtrOutputWithContext(ctx context.Context) ConnectorDefinitionsAvailabilityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorDefinitionsAvailabilityPtrOutput)
}

// The exposure status of the connector to the customers.
type ConnectorDefinitionsAvailabilityOutput struct{ *pulumi.OutputState }

func (ConnectorDefinitionsAvailabilityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorDefinitionsAvailability)(nil)).Elem()
}

func (o ConnectorDefinitionsAvailabilityOutput) ToConnectorDefinitionsAvailabilityOutput() ConnectorDefinitionsAvailabilityOutput {
	return o
}

func (o ConnectorDefinitionsAvailabilityOutput) ToConnectorDefinitionsAvailabilityOutputWithContext(ctx context.Context) ConnectorDefinitionsAvailabilityOutput {
	return o
}

func (o ConnectorDefinitionsAvailabilityOutput) ToConnectorDefinitionsAvailabilityPtrOutput() ConnectorDefinitionsAvailabilityPtrOutput {
	return o.ToConnectorDefinitionsAvailabilityPtrOutputWithContext(context.Background())
}

func (o ConnectorDefinitionsAvailabilityOutput) ToConnectorDefinitionsAvailabilityPtrOutputWithContext(ctx context.Context) ConnectorDefinitionsAvailabilityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectorDefinitionsAvailability) *ConnectorDefinitionsAvailability {
		return &v
	}).(ConnectorDefinitionsAvailabilityPtrOutput)
}

// Gets or sets a value indicating whether the connector is preview.
func (o ConnectorDefinitionsAvailabilityOutput) IsPreview() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConnectorDefinitionsAvailability) *bool { return v.IsPreview }).(pulumi.BoolPtrOutput)
}

// The exposure status of the connector to the customers. Available values are 0-4 (0=None, 1=Available, 2=FeatureFlag, 3=Internal).
func (o ConnectorDefinitionsAvailabilityOutput) Status() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ConnectorDefinitionsAvailability) *int { return v.Status }).(pulumi.IntPtrOutput)
}

type ConnectorDefinitionsAvailabilityPtrOutput struct{ *pulumi.OutputState }

func (ConnectorDefinitionsAvailabilityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorDefinitionsAvailability)(nil)).Elem()
}

func (o ConnectorDefinitionsAvailabilityPtrOutput) ToConnectorDefinitionsAvailabilityPtrOutput() ConnectorDefinitionsAvailabilityPtrOutput {
	return o
}

func (o ConnectorDefinitionsAvailabilityPtrOutput) ToConnectorDefinitionsAvailabilityPtrOutputWithContext(ctx context.Context) ConnectorDefinitionsAvailabilityPtrOutput {
	return o
}

func (o ConnectorDefinitionsAvailabilityPtrOutput) Elem() ConnectorDefinitionsAvailabilityOutput {
	return o.ApplyT(func(v *ConnectorDefinitionsAvailability) ConnectorDefinitionsAvailability {
		if v != nil {
			return *v
		}
		var ret ConnectorDefinitionsAvailability
		return ret
	}).(ConnectorDefinitionsAvailabilityOutput)
}

// Gets or sets a value indicating whether the connector is preview.
func (o ConnectorDefinitionsAvailabilityPtrOutput) IsPreview() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConnectorDefinitionsAvailability) *bool {
		if v == nil {
			return nil
		}
		return v.IsPreview
	}).(pulumi.BoolPtrOutput)
}

// The exposure status of the connector to the customers. Available values are 0-4 (0=None, 1=Available, 2=FeatureFlag, 3=Internal).
func (o ConnectorDefinitionsAvailabilityPtrOutput) Status() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ConnectorDefinitionsAvailability) *int {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.IntPtrOutput)
}

// The exposure status of the connector to the customers.
type ConnectorDefinitionsAvailabilityResponse struct {
	// Gets or sets a value indicating whether the connector is preview.
	IsPreview *bool `pulumi:"isPreview"`
	// The exposure status of the connector to the customers. Available values are 0-4 (0=None, 1=Available, 2=FeatureFlag, 3=Internal).
	Status *int `pulumi:"status"`
}

// The exposure status of the connector to the customers.
type ConnectorDefinitionsAvailabilityResponseOutput struct{ *pulumi.OutputState }

func (ConnectorDefinitionsAvailabilityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorDefinitionsAvailabilityResponse)(nil)).Elem()
}

func (o ConnectorDefinitionsAvailabilityResponseOutput) ToConnectorDefinitionsAvailabilityResponseOutput() ConnectorDefinitionsAvailabilityResponseOutput {
	return o
}

func (o ConnectorDefinitionsAvailabilityResponseOutput) ToConnectorDefinitionsAvailabilityResponseOutputWithContext(ctx context.Context) ConnectorDefinitionsAvailabilityResponseOutput {
	return o
}

// Gets or sets a value indicating whether the connector is preview.
func (o ConnectorDefinitionsAvailabilityResponseOutput) IsPreview() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConnectorDefinitionsAvailabilityResponse) *bool { return v.IsPreview }).(pulumi.BoolPtrOutput)
}

// The exposure status of the connector to the customers. Available values are 0-4 (0=None, 1=Available, 2=FeatureFlag, 3=Internal).
func (o ConnectorDefinitionsAvailabilityResponseOutput) Status() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ConnectorDefinitionsAvailabilityResponse) *int { return v.Status }).(pulumi.IntPtrOutput)
}

type ConnectorDefinitionsAvailabilityResponsePtrOutput struct{ *pulumi.OutputState }

func (ConnectorDefinitionsAvailabilityResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorDefinitionsAvailabilityResponse)(nil)).Elem()
}

func (o ConnectorDefinitionsAvailabilityResponsePtrOutput) ToConnectorDefinitionsAvailabilityResponsePtrOutput() ConnectorDefinitionsAvailabilityResponsePtrOutput {
	return o
}

func (o ConnectorDefinitionsAvailabilityResponsePtrOutput) ToConnectorDefinitionsAvailabilityResponsePtrOutputWithContext(ctx context.Context) ConnectorDefinitionsAvailabilityResponsePtrOutput {
	return o
}

func (o ConnectorDefinitionsAvailabilityResponsePtrOutput) Elem() ConnectorDefinitionsAvailabilityResponseOutput {
	return o.ApplyT(func(v *ConnectorDefinitionsAvailabilityResponse) ConnectorDefinitionsAvailabilityResponse {
		if v != nil {
			return *v
		}
		var ret ConnectorDefinitionsAvailabilityResponse
		return ret
	}).(ConnectorDefinitionsAvailabilityResponseOutput)
}

// Gets or sets a value indicating whether the connector is preview.
func (o ConnectorDefinitionsAvailabilityResponsePtrOutput) IsPreview() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConnectorDefinitionsAvailabilityResponse) *bool {
		if v == nil {
			return nil
		}
		return v.IsPreview
	}).(pulumi.BoolPtrOutput)
}

// The exposure status of the connector to the customers. Available values are 0-4 (0=None, 1=Available, 2=FeatureFlag, 3=Internal).
func (o ConnectorDefinitionsAvailabilityResponsePtrOutput) Status() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ConnectorDefinitionsAvailabilityResponse) *int {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.IntPtrOutput)
}

// The required Permissions for the connector.
type ConnectorDefinitionsPermissions struct {
	// Gets or sets the customs permissions required for the user to create connections.
	Customs []CustomPermissionDetails `pulumi:"customs"`
	// Gets or sets the required licenses for the user to create connections.
	Licenses []string `pulumi:"licenses"`
	// Gets or sets the resource provider permissions required for the user to create connections.
	ResourceProvider []ConnectorDefinitionsResourceProvider `pulumi:"resourceProvider"`
	// Gets or sets the required tenant permissions for the connector.
	Tenant []string `pulumi:"tenant"`
}

// ConnectorDefinitionsPermissionsInput is an input type that accepts ConnectorDefinitionsPermissionsArgs and ConnectorDefinitionsPermissionsOutput values.
// You can construct a concrete instance of `ConnectorDefinitionsPermissionsInput` via:
//
//	ConnectorDefinitionsPermissionsArgs{...}
type ConnectorDefinitionsPermissionsInput interface {
	pulumi.Input

	ToConnectorDefinitionsPermissionsOutput() ConnectorDefinitionsPermissionsOutput
	ToConnectorDefinitionsPermissionsOutputWithContext(context.Context) ConnectorDefinitionsPermissionsOutput
}

// The required Permissions for the connector.
type ConnectorDefinitionsPermissionsArgs struct {
	// Gets or sets the customs permissions required for the user to create connections.
	Customs CustomPermissionDetailsArrayInput `pulumi:"customs"`
	// Gets or sets the required licenses for the user to create connections.
	Licenses pulumi.StringArrayInput `pulumi:"licenses"`
	// Gets or sets the resource provider permissions required for the user to create connections.
	ResourceProvider ConnectorDefinitionsResourceProviderArrayInput `pulumi:"resourceProvider"`
	// Gets or sets the required tenant permissions for the connector.
	Tenant pulumi.StringArrayInput `pulumi:"tenant"`
}

func (ConnectorDefinitionsPermissionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorDefinitionsPermissions)(nil)).Elem()
}

func (i ConnectorDefinitionsPermissionsArgs) ToConnectorDefinitionsPermissionsOutput() ConnectorDefinitionsPermissionsOutput {
	return i.ToConnectorDefinitionsPermissionsOutputWithContext(context.Background())
}

func (i ConnectorDefinitionsPermissionsArgs) ToConnectorDefinitionsPermissionsOutputWithContext(ctx context.Context) ConnectorDefinitionsPermissionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorDefinitionsPermissionsOutput)
}

// The required Permissions for the connector.
type ConnectorDefinitionsPermissionsOutput struct{ *pulumi.OutputState }

func (ConnectorDefinitionsPermissionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorDefinitionsPermissions)(nil)).Elem()
}

func (o ConnectorDefinitionsPermissionsOutput) ToConnectorDefinitionsPermissionsOutput() ConnectorDefinitionsPermissionsOutput {
	return o
}

func (o ConnectorDefinitionsPermissionsOutput) ToConnectorDefinitionsPermissionsOutputWithContext(ctx context.Context) ConnectorDefinitionsPermissionsOutput {
	return o
}

// Gets or sets the customs permissions required for the user to create connections.
func (o ConnectorDefinitionsPermissionsOutput) Customs() CustomPermissionDetailsArrayOutput {
	return o.ApplyT(func(v ConnectorDefinitionsPermissions) []CustomPermissionDetails { return v.Customs }).(CustomPermissionDetailsArrayOutput)
}

// Gets or sets the required licenses for the user to create connections.
func (o ConnectorDefinitionsPermissionsOutput) Licenses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ConnectorDefinitionsPermissions) []string { return v.Licenses }).(pulumi.StringArrayOutput)
}

// Gets or sets the resource provider permissions required for the user to create connections.
func (o ConnectorDefinitionsPermissionsOutput) ResourceProvider() ConnectorDefinitionsResourceProviderArrayOutput {
	return o.ApplyT(func(v ConnectorDefinitionsPermissions) []ConnectorDefinitionsResourceProvider {
		return v.ResourceProvider
	}).(ConnectorDefinitionsResourceProviderArrayOutput)
}

// Gets or sets the required tenant permissions for the connector.
func (o ConnectorDefinitionsPermissionsOutput) Tenant() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ConnectorDefinitionsPermissions) []string { return v.Tenant }).(pulumi.StringArrayOutput)
}

// The required Permissions for the connector.
type ConnectorDefinitionsPermissionsResponse struct {
	// Gets or sets the customs permissions required for the user to create connections.
	Customs []CustomPermissionDetailsResponse `pulumi:"customs"`
	// Gets or sets the required licenses for the user to create connections.
	Licenses []string `pulumi:"licenses"`
	// Gets or sets the resource provider permissions required for the user to create connections.
	ResourceProvider []ConnectorDefinitionsResourceProviderResponse `pulumi:"resourceProvider"`
	// Gets or sets the required tenant permissions for the connector.
	Tenant []string `pulumi:"tenant"`
}

// The required Permissions for the connector.
type ConnectorDefinitionsPermissionsResponseOutput struct{ *pulumi.OutputState }

func (ConnectorDefinitionsPermissionsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorDefinitionsPermissionsResponse)(nil)).Elem()
}

func (o ConnectorDefinitionsPermissionsResponseOutput) ToConnectorDefinitionsPermissionsResponseOutput() ConnectorDefinitionsPermissionsResponseOutput {
	return o
}

func (o ConnectorDefinitionsPermissionsResponseOutput) ToConnectorDefinitionsPermissionsResponseOutputWithContext(ctx context.Context) ConnectorDefinitionsPermissionsResponseOutput {
	return o
}

// Gets or sets the customs permissions required for the user to create connections.
func (o ConnectorDefinitionsPermissionsResponseOutput) Customs() CustomPermissionDetailsResponseArrayOutput {
	return o.ApplyT(func(v ConnectorDefinitionsPermissionsResponse) []CustomPermissionDetailsResponse { return v.Customs }).(CustomPermissionDetailsResponseArrayOutput)
}

// Gets or sets the required licenses for the user to create connections.
func (o ConnectorDefinitionsPermissionsResponseOutput) Licenses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ConnectorDefinitionsPermissionsResponse) []string { return v.Licenses }).(pulumi.StringArrayOutput)
}

// Gets or sets the resource provider permissions required for the user to create connections.
func (o ConnectorDefinitionsPermissionsResponseOutput) ResourceProvider() ConnectorDefinitionsResourceProviderResponseArrayOutput {
	return o.ApplyT(func(v ConnectorDefinitionsPermissionsResponse) []ConnectorDefinitionsResourceProviderResponse {
		return v.ResourceProvider
	}).(ConnectorDefinitionsResourceProviderResponseArrayOutput)
}

// Gets or sets the required tenant permissions for the connector.
func (o ConnectorDefinitionsPermissionsResponseOutput) Tenant() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ConnectorDefinitionsPermissionsResponse) []string { return v.Tenant }).(pulumi.StringArrayOutput)
}

// The resource provider details include the required permissions for the user to create connections.
// The user should have the required permissions(Read\Write, ..) in the specified scope ProviderPermissionsScope against the specified resource provider.
type ConnectorDefinitionsResourceProvider struct {
	// Gets or sets the permissions description text.
	PermissionsDisplayText string `pulumi:"permissionsDisplayText"`
	// Gets or sets the provider name.
	Provider string `pulumi:"provider"`
	// Gets or sets the permissions provider display name.
	ProviderDisplayName string `pulumi:"providerDisplayName"`
	// Required permissions for the connector resource provider that define in ResourceProviders.
	// For more information about the permissions see <see href="https://docs.microsoft.com/en-us/azure/role-based-access-control/role-definitions#actions-format">here</see>.
	RequiredPermissions ResourceProviderRequiredPermissions `pulumi:"requiredPermissions"`
	// The scope on which the user should have permissions, in order to be able to create connections.
	Scope string `pulumi:"scope"`
}

// ConnectorDefinitionsResourceProviderInput is an input type that accepts ConnectorDefinitionsResourceProviderArgs and ConnectorDefinitionsResourceProviderOutput values.
// You can construct a concrete instance of `ConnectorDefinitionsResourceProviderInput` via:
//
//	ConnectorDefinitionsResourceProviderArgs{...}
type ConnectorDefinitionsResourceProviderInput interface {
	pulumi.Input

	ToConnectorDefinitionsResourceProviderOutput() ConnectorDefinitionsResourceProviderOutput
	ToConnectorDefinitionsResourceProviderOutputWithContext(context.Context) ConnectorDefinitionsResourceProviderOutput
}

// The resource provider details include the required permissions for the user to create connections.
// The user should have the required permissions(Read\Write, ..) in the specified scope ProviderPermissionsScope against the specified resource provider.
type ConnectorDefinitionsResourceProviderArgs struct {
	// Gets or sets the permissions description text.
	PermissionsDisplayText pulumi.StringInput `pulumi:"permissionsDisplayText"`
	// Gets or sets the provider name.
	Provider pulumi.StringInput `pulumi:"provider"`
	// Gets or sets the permissions provider display name.
	ProviderDisplayName pulumi.StringInput `pulumi:"providerDisplayName"`
	// Required permissions for the connector resource provider that define in ResourceProviders.
	// For more information about the permissions see <see href="https://docs.microsoft.com/en-us/azure/role-based-access-control/role-definitions#actions-format">here</see>.
	RequiredPermissions ResourceProviderRequiredPermissionsInput `pulumi:"requiredPermissions"`
	// The scope on which the user should have permissions, in order to be able to create connections.
	Scope pulumi.StringInput `pulumi:"scope"`
}

func (ConnectorDefinitionsResourceProviderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorDefinitionsResourceProvider)(nil)).Elem()
}

func (i ConnectorDefinitionsResourceProviderArgs) ToConnectorDefinitionsResourceProviderOutput() ConnectorDefinitionsResourceProviderOutput {
	return i.ToConnectorDefinitionsResourceProviderOutputWithContext(context.Background())
}

func (i ConnectorDefinitionsResourceProviderArgs) ToConnectorDefinitionsResourceProviderOutputWithContext(ctx context.Context) ConnectorDefinitionsResourceProviderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorDefinitionsResourceProviderOutput)
}

// ConnectorDefinitionsResourceProviderArrayInput is an input type that accepts ConnectorDefinitionsResourceProviderArray and ConnectorDefinitionsResourceProviderArrayOutput values.
// You can construct a concrete instance of `ConnectorDefinitionsResourceProviderArrayInput` via:
//
//	ConnectorDefinitionsResourceProviderArray{ ConnectorDefinitionsResourceProviderArgs{...} }
type ConnectorDefinitionsResourceProviderArrayInput interface {
	pulumi.Input

	ToConnectorDefinitionsResourceProviderArrayOutput() ConnectorDefinitionsResourceProviderArrayOutput
	ToConnectorDefinitionsResourceProviderArrayOutputWithContext(context.Context) ConnectorDefinitionsResourceProviderArrayOutput
}

type ConnectorDefinitionsResourceProviderArray []ConnectorDefinitionsResourceProviderInput

func (ConnectorDefinitionsResourceProviderArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnectorDefinitionsResourceProvider)(nil)).Elem()
}

func (i ConnectorDefinitionsResourceProviderArray) ToConnectorDefinitionsResourceProviderArrayOutput() ConnectorDefinitionsResourceProviderArrayOutput {
	return i.ToConnectorDefinitionsResourceProviderArrayOutputWithContext(context.Background())
}

func (i ConnectorDefinitionsResourceProviderArray) ToConnectorDefinitionsResourceProviderArrayOutputWithContext(ctx context.Context) ConnectorDefinitionsResourceProviderArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorDefinitionsResourceProviderArrayOutput)
}

// The resource provider details include the required permissions for the user to create connections.
// The user should have the required permissions(Read\Write, ..) in the specified scope ProviderPermissionsScope against the specified resource provider.
type ConnectorDefinitionsResourceProviderOutput struct{ *pulumi.OutputState }

func (ConnectorDefinitionsResourceProviderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorDefinitionsResourceProvider)(nil)).Elem()
}

func (o ConnectorDefinitionsResourceProviderOutput) ToConnectorDefinitionsResourceProviderOutput() ConnectorDefinitionsResourceProviderOutput {
	return o
}

func (o ConnectorDefinitionsResourceProviderOutput) ToConnectorDefinitionsResourceProviderOutputWithContext(ctx context.Context) ConnectorDefinitionsResourceProviderOutput {
	return o
}

// Gets or sets the permissions description text.
func (o ConnectorDefinitionsResourceProviderOutput) PermissionsDisplayText() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectorDefinitionsResourceProvider) string { return v.PermissionsDisplayText }).(pulumi.StringOutput)
}

// Gets or sets the provider name.
func (o ConnectorDefinitionsResourceProviderOutput) Provider() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectorDefinitionsResourceProvider) string { return v.Provider }).(pulumi.StringOutput)
}

// Gets or sets the permissions provider display name.
func (o ConnectorDefinitionsResourceProviderOutput) ProviderDisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectorDefinitionsResourceProvider) string { return v.ProviderDisplayName }).(pulumi.StringOutput)
}

// Required permissions for the connector resource provider that define in ResourceProviders.
// For more information about the permissions see <see href="https://docs.microsoft.com/en-us/azure/role-based-access-control/role-definitions#actions-format">here</see>.
func (o ConnectorDefinitionsResourceProviderOutput) RequiredPermissions() ResourceProviderRequiredPermissionsOutput {
	return o.ApplyT(func(v ConnectorDefinitionsResourceProvider) ResourceProviderRequiredPermissions {
		return v.RequiredPermissions
	}).(ResourceProviderRequiredPermissionsOutput)
}

// The scope on which the user should have permissions, in order to be able to create connections.
func (o ConnectorDefinitionsResourceProviderOutput) Scope() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectorDefinitionsResourceProvider) string { return v.Scope }).(pulumi.StringOutput)
}

type ConnectorDefinitionsResourceProviderArrayOutput struct{ *pulumi.OutputState }

func (ConnectorDefinitionsResourceProviderArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnectorDefinitionsResourceProvider)(nil)).Elem()
}

func (o ConnectorDefinitionsResourceProviderArrayOutput) ToConnectorDefinitionsResourceProviderArrayOutput() ConnectorDefinitionsResourceProviderArrayOutput {
	return o
}

func (o ConnectorDefinitionsResourceProviderArrayOutput) ToConnectorDefinitionsResourceProviderArrayOutputWithContext(ctx context.Context) ConnectorDefinitionsResourceProviderArrayOutput {
	return o
}

func (o ConnectorDefinitionsResourceProviderArrayOutput) Index(i pulumi.IntInput) ConnectorDefinitionsResourceProviderOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConnectorDefinitionsResourceProvider {
		return vs[0].([]ConnectorDefinitionsResourceProvider)[vs[1].(int)]
	}).(ConnectorDefinitionsResourceProviderOutput)
}

// The resource provider details include the required permissions for the user to create connections.
// The user should have the required permissions(Read\Write, ..) in the specified scope ProviderPermissionsScope against the specified resource provider.
type ConnectorDefinitionsResourceProviderResponse struct {
	// Gets or sets the permissions description text.
	PermissionsDisplayText string `pulumi:"permissionsDisplayText"`
	// Gets or sets the provider name.
	Provider string `pulumi:"provider"`
	// Gets or sets the permissions provider display name.
	ProviderDisplayName string `pulumi:"providerDisplayName"`
	// Required permissions for the connector resource provider that define in ResourceProviders.
	// For more information about the permissions see <see href="https://docs.microsoft.com/en-us/azure/role-based-access-control/role-definitions#actions-format">here</see>.
	RequiredPermissions ResourceProviderRequiredPermissionsResponse `pulumi:"requiredPermissions"`
	// The scope on which the user should have permissions, in order to be able to create connections.
	Scope string `pulumi:"scope"`
}

// The resource provider details include the required permissions for the user to create connections.
// The user should have the required permissions(Read\Write, ..) in the specified scope ProviderPermissionsScope against the specified resource provider.
type ConnectorDefinitionsResourceProviderResponseOutput struct{ *pulumi.OutputState }

func (ConnectorDefinitionsResourceProviderResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorDefinitionsResourceProviderResponse)(nil)).Elem()
}

func (o ConnectorDefinitionsResourceProviderResponseOutput) ToConnectorDefinitionsResourceProviderResponseOutput() ConnectorDefinitionsResourceProviderResponseOutput {
	return o
}

func (o ConnectorDefinitionsResourceProviderResponseOutput) ToConnectorDefinitionsResourceProviderResponseOutputWithContext(ctx context.Context) ConnectorDefinitionsResourceProviderResponseOutput {
	return o
}

// Gets or sets the permissions description text.
func (o ConnectorDefinitionsResourceProviderResponseOutput) PermissionsDisplayText() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectorDefinitionsResourceProviderResponse) string { return v.PermissionsDisplayText }).(pulumi.StringOutput)
}

// Gets or sets the provider name.
func (o ConnectorDefinitionsResourceProviderResponseOutput) Provider() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectorDefinitionsResourceProviderResponse) string { return v.Provider }).(pulumi.StringOutput)
}

// Gets or sets the permissions provider display name.
func (o ConnectorDefinitionsResourceProviderResponseOutput) ProviderDisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectorDefinitionsResourceProviderResponse) string { return v.ProviderDisplayName }).(pulumi.StringOutput)
}

// Required permissions for the connector resource provider that define in ResourceProviders.
// For more information about the permissions see <see href="https://docs.microsoft.com/en-us/azure/role-based-access-control/role-definitions#actions-format">here</see>.
func (o ConnectorDefinitionsResourceProviderResponseOutput) RequiredPermissions() ResourceProviderRequiredPermissionsResponseOutput {
	return o.ApplyT(func(v ConnectorDefinitionsResourceProviderResponse) ResourceProviderRequiredPermissionsResponse {
		return v.RequiredPermissions
	}).(ResourceProviderRequiredPermissionsResponseOutput)
}

// The scope on which the user should have permissions, in order to be able to create connections.
func (o ConnectorDefinitionsResourceProviderResponseOutput) Scope() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectorDefinitionsResourceProviderResponse) string { return v.Scope }).(pulumi.StringOutput)
}

type ConnectorDefinitionsResourceProviderResponseArrayOutput struct{ *pulumi.OutputState }

func (ConnectorDefinitionsResourceProviderResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnectorDefinitionsResourceProviderResponse)(nil)).Elem()
}

func (o ConnectorDefinitionsResourceProviderResponseArrayOutput) ToConnectorDefinitionsResourceProviderResponseArrayOutput() ConnectorDefinitionsResourceProviderResponseArrayOutput {
	return o
}

func (o ConnectorDefinitionsResourceProviderResponseArrayOutput) ToConnectorDefinitionsResourceProviderResponseArrayOutputWithContext(ctx context.Context) ConnectorDefinitionsResourceProviderResponseArrayOutput {
	return o
}

func (o ConnectorDefinitionsResourceProviderResponseArrayOutput) Index(i pulumi.IntInput) ConnectorDefinitionsResourceProviderResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConnectorDefinitionsResourceProviderResponse {
		return vs[0].([]ConnectorDefinitionsResourceProviderResponse)[vs[1].(int)]
	}).(ConnectorDefinitionsResourceProviderResponseOutput)
}

// The Custom permissions required for the connector.
type CustomPermissionDetails struct {
	// Gets or sets the custom permissions description.
	Description string `pulumi:"description"`
	// Gets or sets the custom permissions name.
	Name string `pulumi:"name"`
}

// CustomPermissionDetailsInput is an input type that accepts CustomPermissionDetailsArgs and CustomPermissionDetailsOutput values.
// You can construct a concrete instance of `CustomPermissionDetailsInput` via:
//
//	CustomPermissionDetailsArgs{...}
type CustomPermissionDetailsInput interface {
	pulumi.Input

	ToCustomPermissionDetailsOutput() CustomPermissionDetailsOutput
	ToCustomPermissionDetailsOutputWithContext(context.Context) CustomPermissionDetailsOutput
}

// The Custom permissions required for the connector.
type CustomPermissionDetailsArgs struct {
	// Gets or sets the custom permissions description.
	Description pulumi.StringInput `pulumi:"description"`
	// Gets or sets the custom permissions name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (CustomPermissionDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomPermissionDetails)(nil)).Elem()
}

func (i CustomPermissionDetailsArgs) ToCustomPermissionDetailsOutput() CustomPermissionDetailsOutput {
	return i.ToCustomPermissionDetailsOutputWithContext(context.Background())
}

func (i CustomPermissionDetailsArgs) ToCustomPermissionDetailsOutputWithContext(ctx context.Context) CustomPermissionDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomPermissionDetailsOutput)
}

// CustomPermissionDetailsArrayInput is an input type that accepts CustomPermissionDetailsArray and CustomPermissionDetailsArrayOutput values.
// You can construct a concrete instance of `CustomPermissionDetailsArrayInput` via:
//
//	CustomPermissionDetailsArray{ CustomPermissionDetailsArgs{...} }
type CustomPermissionDetailsArrayInput interface {
	pulumi.Input

	ToCustomPermissionDetailsArrayOutput() CustomPermissionDetailsArrayOutput
	ToCustomPermissionDetailsArrayOutputWithContext(context.Context) CustomPermissionDetailsArrayOutput
}

type CustomPermissionDetailsArray []CustomPermissionDetailsInput

func (CustomPermissionDetailsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CustomPermissionDetails)(nil)).Elem()
}

func (i CustomPermissionDetailsArray) ToCustomPermissionDetailsArrayOutput() CustomPermissionDetailsArrayOutput {
	return i.ToCustomPermissionDetailsArrayOutputWithContext(context.Background())
}

func (i CustomPermissionDetailsArray) ToCustomPermissionDetailsArrayOutputWithContext(ctx context.Context) CustomPermissionDetailsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomPermissionDetailsArrayOutput)
}

// The Custom permissions required for the connector.
type CustomPermissionDetailsOutput struct{ *pulumi.OutputState }

func (CustomPermissionDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomPermissionDetails)(nil)).Elem()
}

func (o CustomPermissionDetailsOutput) ToCustomPermissionDetailsOutput() CustomPermissionDetailsOutput {
	return o
}

func (o CustomPermissionDetailsOutput) ToCustomPermissionDetailsOutputWithContext(ctx context.Context) CustomPermissionDetailsOutput {
	return o
}

// Gets or sets the custom permissions description.
func (o CustomPermissionDetailsOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v CustomPermissionDetails) string { return v.Description }).(pulumi.StringOutput)
}

// Gets or sets the custom permissions name.
func (o CustomPermissionDetailsOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v CustomPermissionDetails) string { return v.Name }).(pulumi.StringOutput)
}

type CustomPermissionDetailsArrayOutput struct{ *pulumi.OutputState }

func (CustomPermissionDetailsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CustomPermissionDetails)(nil)).Elem()
}

func (o CustomPermissionDetailsArrayOutput) ToCustomPermissionDetailsArrayOutput() CustomPermissionDetailsArrayOutput {
	return o
}

func (o CustomPermissionDetailsArrayOutput) ToCustomPermissionDetailsArrayOutputWithContext(ctx context.Context) CustomPermissionDetailsArrayOutput {
	return o
}

func (o CustomPermissionDetailsArrayOutput) Index(i pulumi.IntInput) CustomPermissionDetailsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CustomPermissionDetails {
		return vs[0].([]CustomPermissionDetails)[vs[1].(int)]
	}).(CustomPermissionDetailsOutput)
}

// The Custom permissions required for the connector.
type CustomPermissionDetailsResponse struct {
	// Gets or sets the custom permissions description.
	Description string `pulumi:"description"`
	// Gets or sets the custom permissions name.
	Name string `pulumi:"name"`
}

// The Custom permissions required for the connector.
type CustomPermissionDetailsResponseOutput struct{ *pulumi.OutputState }

func (CustomPermissionDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomPermissionDetailsResponse)(nil)).Elem()
}

func (o CustomPermissionDetailsResponseOutput) ToCustomPermissionDetailsResponseOutput() CustomPermissionDetailsResponseOutput {
	return o
}

func (o CustomPermissionDetailsResponseOutput) ToCustomPermissionDetailsResponseOutputWithContext(ctx context.Context) CustomPermissionDetailsResponseOutput {
	return o
}

// Gets or sets the custom permissions description.
func (o CustomPermissionDetailsResponseOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v CustomPermissionDetailsResponse) string { return v.Description }).(pulumi.StringOutput)
}

// Gets or sets the custom permissions name.
func (o CustomPermissionDetailsResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v CustomPermissionDetailsResponse) string { return v.Name }).(pulumi.StringOutput)
}

type CustomPermissionDetailsResponseArrayOutput struct{ *pulumi.OutputState }

func (CustomPermissionDetailsResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CustomPermissionDetailsResponse)(nil)).Elem()
}

func (o CustomPermissionDetailsResponseArrayOutput) ToCustomPermissionDetailsResponseArrayOutput() CustomPermissionDetailsResponseArrayOutput {
	return o
}

func (o CustomPermissionDetailsResponseArrayOutput) ToCustomPermissionDetailsResponseArrayOutputWithContext(ctx context.Context) CustomPermissionDetailsResponseArrayOutput {
	return o
}

func (o CustomPermissionDetailsResponseArrayOutput) Index(i pulumi.IntInput) CustomPermissionDetailsResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CustomPermissionDetailsResponse {
		return vs[0].([]CustomPermissionDetailsResponse)[vs[1].(int)]
	}).(CustomPermissionDetailsResponseOutput)
}

// The UiConfig for 'Customizable' connector definition kind.
type CustomizableConnectionsConfig struct {
	// Gets or sets the template name. The template includes ARM templates that can be created by the connector, usually it will be the dataConnectors ARM templates.
	TemplateSpecName string `pulumi:"templateSpecName"`
	// Gets or sets the template version.
	TemplateSpecVersion string `pulumi:"templateSpecVersion"`
}

// CustomizableConnectionsConfigInput is an input type that accepts CustomizableConnectionsConfigArgs and CustomizableConnectionsConfigOutput values.
// You can construct a concrete instance of `CustomizableConnectionsConfigInput` via:
//
//	CustomizableConnectionsConfigArgs{...}
type CustomizableConnectionsConfigInput interface {
	pulumi.Input

	ToCustomizableConnectionsConfigOutput() CustomizableConnectionsConfigOutput
	ToCustomizableConnectionsConfigOutputWithContext(context.Context) CustomizableConnectionsConfigOutput
}

// The UiConfig for 'Customizable' connector definition kind.
type CustomizableConnectionsConfigArgs struct {
	// Gets or sets the template name. The template includes ARM templates that can be created by the connector, usually it will be the dataConnectors ARM templates.
	TemplateSpecName pulumi.StringInput `pulumi:"templateSpecName"`
	// Gets or sets the template version.
	TemplateSpecVersion pulumi.StringInput `pulumi:"templateSpecVersion"`
}

func (CustomizableConnectionsConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomizableConnectionsConfig)(nil)).Elem()
}

func (i CustomizableConnectionsConfigArgs) ToCustomizableConnectionsConfigOutput() CustomizableConnectionsConfigOutput {
	return i.ToCustomizableConnectionsConfigOutputWithContext(context.Background())
}

func (i CustomizableConnectionsConfigArgs) ToCustomizableConnectionsConfigOutputWithContext(ctx context.Context) CustomizableConnectionsConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomizableConnectionsConfigOutput)
}

func (i CustomizableConnectionsConfigArgs) ToCustomizableConnectionsConfigPtrOutput() CustomizableConnectionsConfigPtrOutput {
	return i.ToCustomizableConnectionsConfigPtrOutputWithContext(context.Background())
}

func (i CustomizableConnectionsConfigArgs) ToCustomizableConnectionsConfigPtrOutputWithContext(ctx context.Context) CustomizableConnectionsConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomizableConnectionsConfigOutput).ToCustomizableConnectionsConfigPtrOutputWithContext(ctx)
}

// CustomizableConnectionsConfigPtrInput is an input type that accepts CustomizableConnectionsConfigArgs, CustomizableConnectionsConfigPtr and CustomizableConnectionsConfigPtrOutput values.
// You can construct a concrete instance of `CustomizableConnectionsConfigPtrInput` via:
//
//	        CustomizableConnectionsConfigArgs{...}
//
//	or:
//
//	        nil
type CustomizableConnectionsConfigPtrInput interface {
	pulumi.Input

	ToCustomizableConnectionsConfigPtrOutput() CustomizableConnectionsConfigPtrOutput
	ToCustomizableConnectionsConfigPtrOutputWithContext(context.Context) CustomizableConnectionsConfigPtrOutput
}

type customizableConnectionsConfigPtrType CustomizableConnectionsConfigArgs

func CustomizableConnectionsConfigPtr(v *CustomizableConnectionsConfigArgs) CustomizableConnectionsConfigPtrInput {
	return (*customizableConnectionsConfigPtrType)(v)
}

func (*customizableConnectionsConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomizableConnectionsConfig)(nil)).Elem()
}

func (i *customizableConnectionsConfigPtrType) ToCustomizableConnectionsConfigPtrOutput() CustomizableConnectionsConfigPtrOutput {
	return i.ToCustomizableConnectionsConfigPtrOutputWithContext(context.Background())
}

func (i *customizableConnectionsConfigPtrType) ToCustomizableConnectionsConfigPtrOutputWithContext(ctx context.Context) CustomizableConnectionsConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomizableConnectionsConfigPtrOutput)
}

// The UiConfig for 'Customizable' connector definition kind.
type CustomizableConnectionsConfigOutput struct{ *pulumi.OutputState }

func (CustomizableConnectionsConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomizableConnectionsConfig)(nil)).Elem()
}

func (o CustomizableConnectionsConfigOutput) ToCustomizableConnectionsConfigOutput() CustomizableConnectionsConfigOutput {
	return o
}

func (o CustomizableConnectionsConfigOutput) ToCustomizableConnectionsConfigOutputWithContext(ctx context.Context) CustomizableConnectionsConfigOutput {
	return o
}

func (o CustomizableConnectionsConfigOutput) ToCustomizableConnectionsConfigPtrOutput() CustomizableConnectionsConfigPtrOutput {
	return o.ToCustomizableConnectionsConfigPtrOutputWithContext(context.Background())
}

func (o CustomizableConnectionsConfigOutput) ToCustomizableConnectionsConfigPtrOutputWithContext(ctx context.Context) CustomizableConnectionsConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CustomizableConnectionsConfig) *CustomizableConnectionsConfig {
		return &v
	}).(CustomizableConnectionsConfigPtrOutput)
}

// Gets or sets the template name. The template includes ARM templates that can be created by the connector, usually it will be the dataConnectors ARM templates.
func (o CustomizableConnectionsConfigOutput) TemplateSpecName() pulumi.StringOutput {
	return o.ApplyT(func(v CustomizableConnectionsConfig) string { return v.TemplateSpecName }).(pulumi.StringOutput)
}

// Gets or sets the template version.
func (o CustomizableConnectionsConfigOutput) TemplateSpecVersion() pulumi.StringOutput {
	return o.ApplyT(func(v CustomizableConnectionsConfig) string { return v.TemplateSpecVersion }).(pulumi.StringOutput)
}

type CustomizableConnectionsConfigPtrOutput struct{ *pulumi.OutputState }

func (CustomizableConnectionsConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomizableConnectionsConfig)(nil)).Elem()
}

func (o CustomizableConnectionsConfigPtrOutput) ToCustomizableConnectionsConfigPtrOutput() CustomizableConnectionsConfigPtrOutput {
	return o
}

func (o CustomizableConnectionsConfigPtrOutput) ToCustomizableConnectionsConfigPtrOutputWithContext(ctx context.Context) CustomizableConnectionsConfigPtrOutput {
	return o
}

func (o CustomizableConnectionsConfigPtrOutput) Elem() CustomizableConnectionsConfigOutput {
	return o.ApplyT(func(v *CustomizableConnectionsConfig) CustomizableConnectionsConfig {
		if v != nil {
			return *v
		}
		var ret CustomizableConnectionsConfig
		return ret
	}).(CustomizableConnectionsConfigOutput)
}

// Gets or sets the template name. The template includes ARM templates that can be created by the connector, usually it will be the dataConnectors ARM templates.
func (o CustomizableConnectionsConfigPtrOutput) TemplateSpecName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CustomizableConnectionsConfig) *string {
		if v == nil {
			return nil
		}
		return &v.TemplateSpecName
	}).(pulumi.StringPtrOutput)
}

// Gets or sets the template version.
func (o CustomizableConnectionsConfigPtrOutput) TemplateSpecVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CustomizableConnectionsConfig) *string {
		if v == nil {
			return nil
		}
		return &v.TemplateSpecVersion
	}).(pulumi.StringPtrOutput)
}

// The UiConfig for 'Customizable' connector definition kind.
type CustomizableConnectionsConfigResponse struct {
	// Gets or sets the template name. The template includes ARM templates that can be created by the connector, usually it will be the dataConnectors ARM templates.
	TemplateSpecName string `pulumi:"templateSpecName"`
	// Gets or sets the template version.
	TemplateSpecVersion string `pulumi:"templateSpecVersion"`
}

// The UiConfig for 'Customizable' connector definition kind.
type CustomizableConnectionsConfigResponseOutput struct{ *pulumi.OutputState }

func (CustomizableConnectionsConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomizableConnectionsConfigResponse)(nil)).Elem()
}

func (o CustomizableConnectionsConfigResponseOutput) ToCustomizableConnectionsConfigResponseOutput() CustomizableConnectionsConfigResponseOutput {
	return o
}

func (o CustomizableConnectionsConfigResponseOutput) ToCustomizableConnectionsConfigResponseOutputWithContext(ctx context.Context) CustomizableConnectionsConfigResponseOutput {
	return o
}

// Gets or sets the template name. The template includes ARM templates that can be created by the connector, usually it will be the dataConnectors ARM templates.
func (o CustomizableConnectionsConfigResponseOutput) TemplateSpecName() pulumi.StringOutput {
	return o.ApplyT(func(v CustomizableConnectionsConfigResponse) string { return v.TemplateSpecName }).(pulumi.StringOutput)
}

// Gets or sets the template version.
func (o CustomizableConnectionsConfigResponseOutput) TemplateSpecVersion() pulumi.StringOutput {
	return o.ApplyT(func(v CustomizableConnectionsConfigResponse) string { return v.TemplateSpecVersion }).(pulumi.StringOutput)
}

type CustomizableConnectionsConfigResponsePtrOutput struct{ *pulumi.OutputState }

func (CustomizableConnectionsConfigResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomizableConnectionsConfigResponse)(nil)).Elem()
}

func (o CustomizableConnectionsConfigResponsePtrOutput) ToCustomizableConnectionsConfigResponsePtrOutput() CustomizableConnectionsConfigResponsePtrOutput {
	return o
}

func (o CustomizableConnectionsConfigResponsePtrOutput) ToCustomizableConnectionsConfigResponsePtrOutputWithContext(ctx context.Context) CustomizableConnectionsConfigResponsePtrOutput {
	return o
}

func (o CustomizableConnectionsConfigResponsePtrOutput) Elem() CustomizableConnectionsConfigResponseOutput {
	return o.ApplyT(func(v *CustomizableConnectionsConfigResponse) CustomizableConnectionsConfigResponse {
		if v != nil {
			return *v
		}
		var ret CustomizableConnectionsConfigResponse
		return ret
	}).(CustomizableConnectionsConfigResponseOutput)
}

// Gets or sets the template name. The template includes ARM templates that can be created by the connector, usually it will be the dataConnectors ARM templates.
func (o CustomizableConnectionsConfigResponsePtrOutput) TemplateSpecName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CustomizableConnectionsConfigResponse) *string {
		if v == nil {
			return nil
		}
		return &v.TemplateSpecName
	}).(pulumi.StringPtrOutput)
}

// Gets or sets the template version.
func (o CustomizableConnectionsConfigResponsePtrOutput) TemplateSpecVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CustomizableConnectionsConfigResponse) *string {
		if v == nil {
			return nil
		}
		return &v.TemplateSpecVersion
	}).(pulumi.StringPtrOutput)
}

// The UiConfig for 'Customizable' connector definition kind.
type CustomizableConnectorUiConfig struct {
	// The exposure status of the connector to the customers.
	Availability *ConnectorDefinitionsAvailability `pulumi:"availability"`
	// Gets or sets the way the connector checks whether the connector is connected.
	ConnectivityCriteria []ConnectivityCriterion `pulumi:"connectivityCriteria"`
	// Gets or sets the data types to check for last data received.
	DataTypes []ConnectorDataType `pulumi:"dataTypes"`
	// Gets or sets the connector description in markdown format.
	DescriptionMarkdown string `pulumi:"descriptionMarkdown"`
	// Gets or sets the graph queries to show the current data volume over time.
	GraphQueries []GraphQuery `pulumi:"graphQueries"`
	// Gets or sets custom connector id. optional field.
	Id *string `pulumi:"id"`
	// Gets or sets the instruction steps to enable the connector.
	InstructionSteps []InstructionStep `pulumi:"instructionSteps"`
	// Gets or sets a value indicating whether to use 'OR'(SOME) or 'AND' between ConnectivityCriteria items.
	IsConnectivityCriteriasMatchSome *bool `pulumi:"isConnectivityCriteriasMatchSome"`
	// Gets or sets the connector logo to be used when displaying the connector within Azure Sentinel's connector's gallery.
	// The logo value should be in SVG format.
	Logo *string `pulumi:"logo"`
	// The required Permissions for the connector.
	Permissions ConnectorDefinitionsPermissions `pulumi:"permissions"`
	// Gets or sets the connector publisher name.
	Publisher string `pulumi:"publisher"`
	// Gets or sets the connector blade title.
	Title string `pulumi:"title"`
}

// CustomizableConnectorUiConfigInput is an input type that accepts CustomizableConnectorUiConfigArgs and CustomizableConnectorUiConfigOutput values.
// You can construct a concrete instance of `CustomizableConnectorUiConfigInput` via:
//
//	CustomizableConnectorUiConfigArgs{...}
type CustomizableConnectorUiConfigInput interface {
	pulumi.Input

	ToCustomizableConnectorUiConfigOutput() CustomizableConnectorUiConfigOutput
	ToCustomizableConnectorUiConfigOutputWithContext(context.Context) CustomizableConnectorUiConfigOutput
}

// The UiConfig for 'Customizable' connector definition kind.
type CustomizableConnectorUiConfigArgs struct {
	// The exposure status of the connector to the customers.
	Availability ConnectorDefinitionsAvailabilityPtrInput `pulumi:"availability"`
	// Gets or sets the way the connector checks whether the connector is connected.
	ConnectivityCriteria ConnectivityCriterionArrayInput `pulumi:"connectivityCriteria"`
	// Gets or sets the data types to check for last data received.
	DataTypes ConnectorDataTypeArrayInput `pulumi:"dataTypes"`
	// Gets or sets the connector description in markdown format.
	DescriptionMarkdown pulumi.StringInput `pulumi:"descriptionMarkdown"`
	// Gets or sets the graph queries to show the current data volume over time.
	GraphQueries GraphQueryArrayInput `pulumi:"graphQueries"`
	// Gets or sets custom connector id. optional field.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Gets or sets the instruction steps to enable the connector.
	InstructionSteps InstructionStepArrayInput `pulumi:"instructionSteps"`
	// Gets or sets a value indicating whether to use 'OR'(SOME) or 'AND' between ConnectivityCriteria items.
	IsConnectivityCriteriasMatchSome pulumi.BoolPtrInput `pulumi:"isConnectivityCriteriasMatchSome"`
	// Gets or sets the connector logo to be used when displaying the connector within Azure Sentinel's connector's gallery.
	// The logo value should be in SVG format.
	Logo pulumi.StringPtrInput `pulumi:"logo"`
	// The required Permissions for the connector.
	Permissions ConnectorDefinitionsPermissionsInput `pulumi:"permissions"`
	// Gets or sets the connector publisher name.
	Publisher pulumi.StringInput `pulumi:"publisher"`
	// Gets or sets the connector blade title.
	Title pulumi.StringInput `pulumi:"title"`
}

func (CustomizableConnectorUiConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomizableConnectorUiConfig)(nil)).Elem()
}

func (i CustomizableConnectorUiConfigArgs) ToCustomizableConnectorUiConfigOutput() CustomizableConnectorUiConfigOutput {
	return i.ToCustomizableConnectorUiConfigOutputWithContext(context.Background())
}

func (i CustomizableConnectorUiConfigArgs) ToCustomizableConnectorUiConfigOutputWithContext(ctx context.Context) CustomizableConnectorUiConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomizableConnectorUiConfigOutput)
}

// The UiConfig for 'Customizable' connector definition kind.
type CustomizableConnectorUiConfigOutput struct{ *pulumi.OutputState }

func (CustomizableConnectorUiConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomizableConnectorUiConfig)(nil)).Elem()
}

func (o CustomizableConnectorUiConfigOutput) ToCustomizableConnectorUiConfigOutput() CustomizableConnectorUiConfigOutput {
	return o
}

func (o CustomizableConnectorUiConfigOutput) ToCustomizableConnectorUiConfigOutputWithContext(ctx context.Context) CustomizableConnectorUiConfigOutput {
	return o
}

// The exposure status of the connector to the customers.
func (o CustomizableConnectorUiConfigOutput) Availability() ConnectorDefinitionsAvailabilityPtrOutput {
	return o.ApplyT(func(v CustomizableConnectorUiConfig) *ConnectorDefinitionsAvailability { return v.Availability }).(ConnectorDefinitionsAvailabilityPtrOutput)
}

// Gets or sets the way the connector checks whether the connector is connected.
func (o CustomizableConnectorUiConfigOutput) ConnectivityCriteria() ConnectivityCriterionArrayOutput {
	return o.ApplyT(func(v CustomizableConnectorUiConfig) []ConnectivityCriterion { return v.ConnectivityCriteria }).(ConnectivityCriterionArrayOutput)
}

// Gets or sets the data types to check for last data received.
func (o CustomizableConnectorUiConfigOutput) DataTypes() ConnectorDataTypeArrayOutput {
	return o.ApplyT(func(v CustomizableConnectorUiConfig) []ConnectorDataType { return v.DataTypes }).(ConnectorDataTypeArrayOutput)
}

// Gets or sets the connector description in markdown format.
func (o CustomizableConnectorUiConfigOutput) DescriptionMarkdown() pulumi.StringOutput {
	return o.ApplyT(func(v CustomizableConnectorUiConfig) string { return v.DescriptionMarkdown }).(pulumi.StringOutput)
}

// Gets or sets the graph queries to show the current data volume over time.
func (o CustomizableConnectorUiConfigOutput) GraphQueries() GraphQueryArrayOutput {
	return o.ApplyT(func(v CustomizableConnectorUiConfig) []GraphQuery { return v.GraphQueries }).(GraphQueryArrayOutput)
}

// Gets or sets custom connector id. optional field.
func (o CustomizableConnectorUiConfigOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomizableConnectorUiConfig) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Gets or sets the instruction steps to enable the connector.
func (o CustomizableConnectorUiConfigOutput) InstructionSteps() InstructionStepArrayOutput {
	return o.ApplyT(func(v CustomizableConnectorUiConfig) []InstructionStep { return v.InstructionSteps }).(InstructionStepArrayOutput)
}

// Gets or sets a value indicating whether to use 'OR'(SOME) or 'AND' between ConnectivityCriteria items.
func (o CustomizableConnectorUiConfigOutput) IsConnectivityCriteriasMatchSome() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CustomizableConnectorUiConfig) *bool { return v.IsConnectivityCriteriasMatchSome }).(pulumi.BoolPtrOutput)
}

// Gets or sets the connector logo to be used when displaying the connector within Azure Sentinel's connector's gallery.
// The logo value should be in SVG format.
func (o CustomizableConnectorUiConfigOutput) Logo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomizableConnectorUiConfig) *string { return v.Logo }).(pulumi.StringPtrOutput)
}

// The required Permissions for the connector.
func (o CustomizableConnectorUiConfigOutput) Permissions() ConnectorDefinitionsPermissionsOutput {
	return o.ApplyT(func(v CustomizableConnectorUiConfig) ConnectorDefinitionsPermissions { return v.Permissions }).(ConnectorDefinitionsPermissionsOutput)
}

// Gets or sets the connector publisher name.
func (o CustomizableConnectorUiConfigOutput) Publisher() pulumi.StringOutput {
	return o.ApplyT(func(v CustomizableConnectorUiConfig) string { return v.Publisher }).(pulumi.StringOutput)
}

// Gets or sets the connector blade title.
func (o CustomizableConnectorUiConfigOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v CustomizableConnectorUiConfig) string { return v.Title }).(pulumi.StringOutput)
}

// The UiConfig for 'Customizable' connector definition kind.
type CustomizableConnectorUiConfigResponse struct {
	// The exposure status of the connector to the customers.
	Availability *ConnectorDefinitionsAvailabilityResponse `pulumi:"availability"`
	// Gets or sets the way the connector checks whether the connector is connected.
	ConnectivityCriteria []ConnectivityCriterionResponse `pulumi:"connectivityCriteria"`
	// Gets or sets the data types to check for last data received.
	DataTypes []ConnectorDataTypeResponse `pulumi:"dataTypes"`
	// Gets or sets the connector description in markdown format.
	DescriptionMarkdown string `pulumi:"descriptionMarkdown"`
	// Gets or sets the graph queries to show the current data volume over time.
	GraphQueries []GraphQueryResponse `pulumi:"graphQueries"`
	// Gets or sets custom connector id. optional field.
	Id *string `pulumi:"id"`
	// Gets or sets the instruction steps to enable the connector.
	InstructionSteps []InstructionStepResponse `pulumi:"instructionSteps"`
	// Gets or sets a value indicating whether to use 'OR'(SOME) or 'AND' between ConnectivityCriteria items.
	IsConnectivityCriteriasMatchSome *bool `pulumi:"isConnectivityCriteriasMatchSome"`
	// Gets or sets the connector logo to be used when displaying the connector within Azure Sentinel's connector's gallery.
	// The logo value should be in SVG format.
	Logo *string `pulumi:"logo"`
	// The required Permissions for the connector.
	Permissions ConnectorDefinitionsPermissionsResponse `pulumi:"permissions"`
	// Gets or sets the connector publisher name.
	Publisher string `pulumi:"publisher"`
	// Gets or sets the connector blade title.
	Title string `pulumi:"title"`
}

// The UiConfig for 'Customizable' connector definition kind.
type CustomizableConnectorUiConfigResponseOutput struct{ *pulumi.OutputState }

func (CustomizableConnectorUiConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomizableConnectorUiConfigResponse)(nil)).Elem()
}

func (o CustomizableConnectorUiConfigResponseOutput) ToCustomizableConnectorUiConfigResponseOutput() CustomizableConnectorUiConfigResponseOutput {
	return o
}

func (o CustomizableConnectorUiConfigResponseOutput) ToCustomizableConnectorUiConfigResponseOutputWithContext(ctx context.Context) CustomizableConnectorUiConfigResponseOutput {
	return o
}

// The exposure status of the connector to the customers.
func (o CustomizableConnectorUiConfigResponseOutput) Availability() ConnectorDefinitionsAvailabilityResponsePtrOutput {
	return o.ApplyT(func(v CustomizableConnectorUiConfigResponse) *ConnectorDefinitionsAvailabilityResponse {
		return v.Availability
	}).(ConnectorDefinitionsAvailabilityResponsePtrOutput)
}

// Gets or sets the way the connector checks whether the connector is connected.
func (o CustomizableConnectorUiConfigResponseOutput) ConnectivityCriteria() ConnectivityCriterionResponseArrayOutput {
	return o.ApplyT(func(v CustomizableConnectorUiConfigResponse) []ConnectivityCriterionResponse {
		return v.ConnectivityCriteria
	}).(ConnectivityCriterionResponseArrayOutput)
}

// Gets or sets the data types to check for last data received.
func (o CustomizableConnectorUiConfigResponseOutput) DataTypes() ConnectorDataTypeResponseArrayOutput {
	return o.ApplyT(func(v CustomizableConnectorUiConfigResponse) []ConnectorDataTypeResponse { return v.DataTypes }).(ConnectorDataTypeResponseArrayOutput)
}

// Gets or sets the connector description in markdown format.
func (o CustomizableConnectorUiConfigResponseOutput) DescriptionMarkdown() pulumi.StringOutput {
	return o.ApplyT(func(v CustomizableConnectorUiConfigResponse) string { return v.DescriptionMarkdown }).(pulumi.StringOutput)
}

// Gets or sets the graph queries to show the current data volume over time.
func (o CustomizableConnectorUiConfigResponseOutput) GraphQueries() GraphQueryResponseArrayOutput {
	return o.ApplyT(func(v CustomizableConnectorUiConfigResponse) []GraphQueryResponse { return v.GraphQueries }).(GraphQueryResponseArrayOutput)
}

// Gets or sets custom connector id. optional field.
func (o CustomizableConnectorUiConfigResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomizableConnectorUiConfigResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Gets or sets the instruction steps to enable the connector.
func (o CustomizableConnectorUiConfigResponseOutput) InstructionSteps() InstructionStepResponseArrayOutput {
	return o.ApplyT(func(v CustomizableConnectorUiConfigResponse) []InstructionStepResponse { return v.InstructionSteps }).(InstructionStepResponseArrayOutput)
}

// Gets or sets a value indicating whether to use 'OR'(SOME) or 'AND' between ConnectivityCriteria items.
func (o CustomizableConnectorUiConfigResponseOutput) IsConnectivityCriteriasMatchSome() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CustomizableConnectorUiConfigResponse) *bool { return v.IsConnectivityCriteriasMatchSome }).(pulumi.BoolPtrOutput)
}

// Gets or sets the connector logo to be used when displaying the connector within Azure Sentinel's connector's gallery.
// The logo value should be in SVG format.
func (o CustomizableConnectorUiConfigResponseOutput) Logo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomizableConnectorUiConfigResponse) *string { return v.Logo }).(pulumi.StringPtrOutput)
}

// The required Permissions for the connector.
func (o CustomizableConnectorUiConfigResponseOutput) Permissions() ConnectorDefinitionsPermissionsResponseOutput {
	return o.ApplyT(func(v CustomizableConnectorUiConfigResponse) ConnectorDefinitionsPermissionsResponse {
		return v.Permissions
	}).(ConnectorDefinitionsPermissionsResponseOutput)
}

// Gets or sets the connector publisher name.
func (o CustomizableConnectorUiConfigResponseOutput) Publisher() pulumi.StringOutput {
	return o.ApplyT(func(v CustomizableConnectorUiConfigResponse) string { return v.Publisher }).(pulumi.StringOutput)
}

// Gets or sets the connector blade title.
func (o CustomizableConnectorUiConfigResponseOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v CustomizableConnectorUiConfigResponse) string { return v.Title }).(pulumi.StringOutput)
}

// The configuration of the destination of the data.
type DCRConfiguration struct {
	// Represents the data collection ingestion endpoint in log analytics.
	DataCollectionEndpoint string `pulumi:"dataCollectionEndpoint"`
	// The data collection rule immutable id, the rule defines the transformation and data destination.
	DataCollectionRuleImmutableId string `pulumi:"dataCollectionRuleImmutableId"`
	// The stream we are sending the data to.
	StreamName string `pulumi:"streamName"`
}

// DCRConfigurationInput is an input type that accepts DCRConfigurationArgs and DCRConfigurationOutput values.
// You can construct a concrete instance of `DCRConfigurationInput` via:
//
//	DCRConfigurationArgs{...}
type DCRConfigurationInput interface {
	pulumi.Input

	ToDCRConfigurationOutput() DCRConfigurationOutput
	ToDCRConfigurationOutputWithContext(context.Context) DCRConfigurationOutput
}

// The configuration of the destination of the data.
type DCRConfigurationArgs struct {
	// Represents the data collection ingestion endpoint in log analytics.
	DataCollectionEndpoint pulumi.StringInput `pulumi:"dataCollectionEndpoint"`
	// The data collection rule immutable id, the rule defines the transformation and data destination.
	DataCollectionRuleImmutableId pulumi.StringInput `pulumi:"dataCollectionRuleImmutableId"`
	// The stream we are sending the data to.
	StreamName pulumi.StringInput `pulumi:"streamName"`
}

func (DCRConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DCRConfiguration)(nil)).Elem()
}

func (i DCRConfigurationArgs) ToDCRConfigurationOutput() DCRConfigurationOutput {
	return i.ToDCRConfigurationOutputWithContext(context.Background())
}

func (i DCRConfigurationArgs) ToDCRConfigurationOutputWithContext(ctx context.Context) DCRConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DCRConfigurationOutput)
}

func (i DCRConfigurationArgs) ToDCRConfigurationPtrOutput() DCRConfigurationPtrOutput {
	return i.ToDCRConfigurationPtrOutputWithContext(context.Background())
}

func (i DCRConfigurationArgs) ToDCRConfigurationPtrOutputWithContext(ctx context.Context) DCRConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DCRConfigurationOutput).ToDCRConfigurationPtrOutputWithContext(ctx)
}

// DCRConfigurationPtrInput is an input type that accepts DCRConfigurationArgs, DCRConfigurationPtr and DCRConfigurationPtrOutput values.
// You can construct a concrete instance of `DCRConfigurationPtrInput` via:
//
//	        DCRConfigurationArgs{...}
//
//	or:
//
//	        nil
type DCRConfigurationPtrInput interface {
	pulumi.Input

	ToDCRConfigurationPtrOutput() DCRConfigurationPtrOutput
	ToDCRConfigurationPtrOutputWithContext(context.Context) DCRConfigurationPtrOutput
}

type dcrconfigurationPtrType DCRConfigurationArgs

func DCRConfigurationPtr(v *DCRConfigurationArgs) DCRConfigurationPtrInput {
	return (*dcrconfigurationPtrType)(v)
}

func (*dcrconfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DCRConfiguration)(nil)).Elem()
}

func (i *dcrconfigurationPtrType) ToDCRConfigurationPtrOutput() DCRConfigurationPtrOutput {
	return i.ToDCRConfigurationPtrOutputWithContext(context.Background())
}

func (i *dcrconfigurationPtrType) ToDCRConfigurationPtrOutputWithContext(ctx context.Context) DCRConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DCRConfigurationPtrOutput)
}

// The configuration of the destination of the data.
type DCRConfigurationOutput struct{ *pulumi.OutputState }

func (DCRConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DCRConfiguration)(nil)).Elem()
}

func (o DCRConfigurationOutput) ToDCRConfigurationOutput() DCRConfigurationOutput {
	return o
}

func (o DCRConfigurationOutput) ToDCRConfigurationOutputWithContext(ctx context.Context) DCRConfigurationOutput {
	return o
}

func (o DCRConfigurationOutput) ToDCRConfigurationPtrOutput() DCRConfigurationPtrOutput {
	return o.ToDCRConfigurationPtrOutputWithContext(context.Background())
}

func (o DCRConfigurationOutput) ToDCRConfigurationPtrOutputWithContext(ctx context.Context) DCRConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DCRConfiguration) *DCRConfiguration {
		return &v
	}).(DCRConfigurationPtrOutput)
}

// Represents the data collection ingestion endpoint in log analytics.
func (o DCRConfigurationOutput) DataCollectionEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v DCRConfiguration) string { return v.DataCollectionEndpoint }).(pulumi.StringOutput)
}

// The data collection rule immutable id, the rule defines the transformation and data destination.
func (o DCRConfigurationOutput) DataCollectionRuleImmutableId() pulumi.StringOutput {
	return o.ApplyT(func(v DCRConfiguration) string { return v.DataCollectionRuleImmutableId }).(pulumi.StringOutput)
}

// The stream we are sending the data to.
func (o DCRConfigurationOutput) StreamName() pulumi.StringOutput {
	return o.ApplyT(func(v DCRConfiguration) string { return v.StreamName }).(pulumi.StringOutput)
}

type DCRConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DCRConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DCRConfiguration)(nil)).Elem()
}

func (o DCRConfigurationPtrOutput) ToDCRConfigurationPtrOutput() DCRConfigurationPtrOutput {
	return o
}

func (o DCRConfigurationPtrOutput) ToDCRConfigurationPtrOutputWithContext(ctx context.Context) DCRConfigurationPtrOutput {
	return o
}

func (o DCRConfigurationPtrOutput) Elem() DCRConfigurationOutput {
	return o.ApplyT(func(v *DCRConfiguration) DCRConfiguration {
		if v != nil {
			return *v
		}
		var ret DCRConfiguration
		return ret
	}).(DCRConfigurationOutput)
}

// Represents the data collection ingestion endpoint in log analytics.
func (o DCRConfigurationPtrOutput) DataCollectionEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DCRConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.DataCollectionEndpoint
	}).(pulumi.StringPtrOutput)
}

// The data collection rule immutable id, the rule defines the transformation and data destination.
func (o DCRConfigurationPtrOutput) DataCollectionRuleImmutableId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DCRConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.DataCollectionRuleImmutableId
	}).(pulumi.StringPtrOutput)
}

// The stream we are sending the data to.
func (o DCRConfigurationPtrOutput) StreamName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DCRConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.StreamName
	}).(pulumi.StringPtrOutput)
}

// The configuration of the destination of the data.
type DCRConfigurationResponse struct {
	// Represents the data collection ingestion endpoint in log analytics.
	DataCollectionEndpoint string `pulumi:"dataCollectionEndpoint"`
	// The data collection rule immutable id, the rule defines the transformation and data destination.
	DataCollectionRuleImmutableId string `pulumi:"dataCollectionRuleImmutableId"`
	// The stream we are sending the data to.
	StreamName string `pulumi:"streamName"`
}

// The configuration of the destination of the data.
type DCRConfigurationResponseOutput struct{ *pulumi.OutputState }

func (DCRConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DCRConfigurationResponse)(nil)).Elem()
}

func (o DCRConfigurationResponseOutput) ToDCRConfigurationResponseOutput() DCRConfigurationResponseOutput {
	return o
}

func (o DCRConfigurationResponseOutput) ToDCRConfigurationResponseOutputWithContext(ctx context.Context) DCRConfigurationResponseOutput {
	return o
}

// Represents the data collection ingestion endpoint in log analytics.
func (o DCRConfigurationResponseOutput) DataCollectionEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v DCRConfigurationResponse) string { return v.DataCollectionEndpoint }).(pulumi.StringOutput)
}

// The data collection rule immutable id, the rule defines the transformation and data destination.
func (o DCRConfigurationResponseOutput) DataCollectionRuleImmutableId() pulumi.StringOutput {
	return o.ApplyT(func(v DCRConfigurationResponse) string { return v.DataCollectionRuleImmutableId }).(pulumi.StringOutput)
}

// The stream we are sending the data to.
func (o DCRConfigurationResponseOutput) StreamName() pulumi.StringOutput {
	return o.ApplyT(func(v DCRConfigurationResponse) string { return v.StreamName }).(pulumi.StringOutput)
}

type DCRConfigurationResponsePtrOutput struct{ *pulumi.OutputState }

func (DCRConfigurationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DCRConfigurationResponse)(nil)).Elem()
}

func (o DCRConfigurationResponsePtrOutput) ToDCRConfigurationResponsePtrOutput() DCRConfigurationResponsePtrOutput {
	return o
}

func (o DCRConfigurationResponsePtrOutput) ToDCRConfigurationResponsePtrOutputWithContext(ctx context.Context) DCRConfigurationResponsePtrOutput {
	return o
}

func (o DCRConfigurationResponsePtrOutput) Elem() DCRConfigurationResponseOutput {
	return o.ApplyT(func(v *DCRConfigurationResponse) DCRConfigurationResponse {
		if v != nil {
			return *v
		}
		var ret DCRConfigurationResponse
		return ret
	}).(DCRConfigurationResponseOutput)
}

// Represents the data collection ingestion endpoint in log analytics.
func (o DCRConfigurationResponsePtrOutput) DataCollectionEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DCRConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return &v.DataCollectionEndpoint
	}).(pulumi.StringPtrOutput)
}

// The data collection rule immutable id, the rule defines the transformation and data destination.
func (o DCRConfigurationResponsePtrOutput) DataCollectionRuleImmutableId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DCRConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return &v.DataCollectionRuleImmutableId
	}).(pulumi.StringPtrOutput)
}

// The stream we are sending the data to.
func (o DCRConfigurationResponsePtrOutput) StreamName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DCRConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return &v.StreamName
	}).(pulumi.StringPtrOutput)
}

// Common field for data type in data connectors.
type DataConnectorDataTypeCommon struct {
	// Describe whether this data type connection is enabled or not.
	State *string `pulumi:"state"`
}

// DataConnectorDataTypeCommonInput is an input type that accepts DataConnectorDataTypeCommonArgs and DataConnectorDataTypeCommonOutput values.
// You can construct a concrete instance of `DataConnectorDataTypeCommonInput` via:
//
//	DataConnectorDataTypeCommonArgs{...}
type DataConnectorDataTypeCommonInput interface {
	pulumi.Input

	ToDataConnectorDataTypeCommonOutput() DataConnectorDataTypeCommonOutput
	ToDataConnectorDataTypeCommonOutputWithContext(context.Context) DataConnectorDataTypeCommonOutput
}

// Common field for data type in data connectors.
type DataConnectorDataTypeCommonArgs struct {
	// Describe whether this data type connection is enabled or not.
	State pulumi.StringPtrInput `pulumi:"state"`
}

func (DataConnectorDataTypeCommonArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataConnectorDataTypeCommon)(nil)).Elem()
}

func (i DataConnectorDataTypeCommonArgs) ToDataConnectorDataTypeCommonOutput() DataConnectorDataTypeCommonOutput {
	return i.ToDataConnectorDataTypeCommonOutputWithContext(context.Background())
}

func (i DataConnectorDataTypeCommonArgs) ToDataConnectorDataTypeCommonOutputWithContext(ctx context.Context) DataConnectorDataTypeCommonOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataConnectorDataTypeCommonOutput)
}

func (i DataConnectorDataTypeCommonArgs) ToDataConnectorDataTypeCommonPtrOutput() DataConnectorDataTypeCommonPtrOutput {
	return i.ToDataConnectorDataTypeCommonPtrOutputWithContext(context.Background())
}

func (i DataConnectorDataTypeCommonArgs) ToDataConnectorDataTypeCommonPtrOutputWithContext(ctx context.Context) DataConnectorDataTypeCommonPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataConnectorDataTypeCommonOutput).ToDataConnectorDataTypeCommonPtrOutputWithContext(ctx)
}

// DataConnectorDataTypeCommonPtrInput is an input type that accepts DataConnectorDataTypeCommonArgs, DataConnectorDataTypeCommonPtr and DataConnectorDataTypeCommonPtrOutput values.
// You can construct a concrete instance of `DataConnectorDataTypeCommonPtrInput` via:
//
//	        DataConnectorDataTypeCommonArgs{...}
//
//	or:
//
//	        nil
type DataConnectorDataTypeCommonPtrInput interface {
	pulumi.Input

	ToDataConnectorDataTypeCommonPtrOutput() DataConnectorDataTypeCommonPtrOutput
	ToDataConnectorDataTypeCommonPtrOutputWithContext(context.Context) DataConnectorDataTypeCommonPtrOutput
}

type dataConnectorDataTypeCommonPtrType DataConnectorDataTypeCommonArgs

func DataConnectorDataTypeCommonPtr(v *DataConnectorDataTypeCommonArgs) DataConnectorDataTypeCommonPtrInput {
	return (*dataConnectorDataTypeCommonPtrType)(v)
}

func (*dataConnectorDataTypeCommonPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataConnectorDataTypeCommon)(nil)).Elem()
}

func (i *dataConnectorDataTypeCommonPtrType) ToDataConnectorDataTypeCommonPtrOutput() DataConnectorDataTypeCommonPtrOutput {
	return i.ToDataConnectorDataTypeCommonPtrOutputWithContext(context.Background())
}

func (i *dataConnectorDataTypeCommonPtrType) ToDataConnectorDataTypeCommonPtrOutputWithContext(ctx context.Context) DataConnectorDataTypeCommonPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataConnectorDataTypeCommonPtrOutput)
}

// Common field for data type in data connectors.
type DataConnectorDataTypeCommonOutput struct{ *pulumi.OutputState }

func (DataConnectorDataTypeCommonOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataConnectorDataTypeCommon)(nil)).Elem()
}

func (o DataConnectorDataTypeCommonOutput) ToDataConnectorDataTypeCommonOutput() DataConnectorDataTypeCommonOutput {
	return o
}

func (o DataConnectorDataTypeCommonOutput) ToDataConnectorDataTypeCommonOutputWithContext(ctx context.Context) DataConnectorDataTypeCommonOutput {
	return o
}

func (o DataConnectorDataTypeCommonOutput) ToDataConnectorDataTypeCommonPtrOutput() DataConnectorDataTypeCommonPtrOutput {
	return o.ToDataConnectorDataTypeCommonPtrOutputWithContext(context.Background())
}

func (o DataConnectorDataTypeCommonOutput) ToDataConnectorDataTypeCommonPtrOutputWithContext(ctx context.Context) DataConnectorDataTypeCommonPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataConnectorDataTypeCommon) *DataConnectorDataTypeCommon {
		return &v
	}).(DataConnectorDataTypeCommonPtrOutput)
}

// Describe whether this data type connection is enabled or not.
func (o DataConnectorDataTypeCommonOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataConnectorDataTypeCommon) *string { return v.State }).(pulumi.StringPtrOutput)
}

type DataConnectorDataTypeCommonPtrOutput struct{ *pulumi.OutputState }

func (DataConnectorDataTypeCommonPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataConnectorDataTypeCommon)(nil)).Elem()
}

func (o DataConnectorDataTypeCommonPtrOutput) ToDataConnectorDataTypeCommonPtrOutput() DataConnectorDataTypeCommonPtrOutput {
	return o
}

func (o DataConnectorDataTypeCommonPtrOutput) ToDataConnectorDataTypeCommonPtrOutputWithContext(ctx context.Context) DataConnectorDataTypeCommonPtrOutput {
	return o
}

func (o DataConnectorDataTypeCommonPtrOutput) Elem() DataConnectorDataTypeCommonOutput {
	return o.ApplyT(func(v *DataConnectorDataTypeCommon) DataConnectorDataTypeCommon {
		if v != nil {
			return *v
		}
		var ret DataConnectorDataTypeCommon
		return ret
	}).(DataConnectorDataTypeCommonOutput)
}

// Describe whether this data type connection is enabled or not.
func (o DataConnectorDataTypeCommonPtrOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataConnectorDataTypeCommon) *string {
		if v == nil {
			return nil
		}
		return v.State
	}).(pulumi.StringPtrOutput)
}

// Common field for data type in data connectors.
type DataConnectorDataTypeCommonResponse struct {
	// Describe whether this data type connection is enabled or not.
	State *string `pulumi:"state"`
}

// Common field for data type in data connectors.
type DataConnectorDataTypeCommonResponseOutput struct{ *pulumi.OutputState }

func (DataConnectorDataTypeCommonResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataConnectorDataTypeCommonResponse)(nil)).Elem()
}

func (o DataConnectorDataTypeCommonResponseOutput) ToDataConnectorDataTypeCommonResponseOutput() DataConnectorDataTypeCommonResponseOutput {
	return o
}

func (o DataConnectorDataTypeCommonResponseOutput) ToDataConnectorDataTypeCommonResponseOutputWithContext(ctx context.Context) DataConnectorDataTypeCommonResponseOutput {
	return o
}

// Describe whether this data type connection is enabled or not.
func (o DataConnectorDataTypeCommonResponseOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataConnectorDataTypeCommonResponse) *string { return v.State }).(pulumi.StringPtrOutput)
}

type DataConnectorDataTypeCommonResponsePtrOutput struct{ *pulumi.OutputState }

func (DataConnectorDataTypeCommonResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataConnectorDataTypeCommonResponse)(nil)).Elem()
}

func (o DataConnectorDataTypeCommonResponsePtrOutput) ToDataConnectorDataTypeCommonResponsePtrOutput() DataConnectorDataTypeCommonResponsePtrOutput {
	return o
}

func (o DataConnectorDataTypeCommonResponsePtrOutput) ToDataConnectorDataTypeCommonResponsePtrOutputWithContext(ctx context.Context) DataConnectorDataTypeCommonResponsePtrOutput {
	return o
}

func (o DataConnectorDataTypeCommonResponsePtrOutput) Elem() DataConnectorDataTypeCommonResponseOutput {
	return o.ApplyT(func(v *DataConnectorDataTypeCommonResponse) DataConnectorDataTypeCommonResponse {
		if v != nil {
			return *v
		}
		var ret DataConnectorDataTypeCommonResponse
		return ret
	}).(DataConnectorDataTypeCommonResponseOutput)
}

// Describe whether this data type connection is enabled or not.
func (o DataConnectorDataTypeCommonResponsePtrOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataConnectorDataTypeCommonResponse) *string {
		if v == nil {
			return nil
		}
		return v.State
	}).(pulumi.StringPtrOutput)
}

// Single entity mapping for the alert rule
type EntityMapping struct {
	// The V3 type of the mapped entity
	EntityType *string `pulumi:"entityType"`
	// array of field mappings for the given entity mapping
	FieldMappings []FieldMapping `pulumi:"fieldMappings"`
}

// EntityMappingInput is an input type that accepts EntityMappingArgs and EntityMappingOutput values.
// You can construct a concrete instance of `EntityMappingInput` via:
//
//	EntityMappingArgs{...}
type EntityMappingInput interface {
	pulumi.Input

	ToEntityMappingOutput() EntityMappingOutput
	ToEntityMappingOutputWithContext(context.Context) EntityMappingOutput
}

// Single entity mapping for the alert rule
type EntityMappingArgs struct {
	// The V3 type of the mapped entity
	EntityType pulumi.StringPtrInput `pulumi:"entityType"`
	// array of field mappings for the given entity mapping
	FieldMappings FieldMappingArrayInput `pulumi:"fieldMappings"`
}

func (EntityMappingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EntityMapping)(nil)).Elem()
}

func (i EntityMappingArgs) ToEntityMappingOutput() EntityMappingOutput {
	return i.ToEntityMappingOutputWithContext(context.Background())
}

func (i EntityMappingArgs) ToEntityMappingOutputWithContext(ctx context.Context) EntityMappingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EntityMappingOutput)
}

// EntityMappingArrayInput is an input type that accepts EntityMappingArray and EntityMappingArrayOutput values.
// You can construct a concrete instance of `EntityMappingArrayInput` via:
//
//	EntityMappingArray{ EntityMappingArgs{...} }
type EntityMappingArrayInput interface {
	pulumi.Input

	ToEntityMappingArrayOutput() EntityMappingArrayOutput
	ToEntityMappingArrayOutputWithContext(context.Context) EntityMappingArrayOutput
}

type EntityMappingArray []EntityMappingInput

func (EntityMappingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EntityMapping)(nil)).Elem()
}

func (i EntityMappingArray) ToEntityMappingArrayOutput() EntityMappingArrayOutput {
	return i.ToEntityMappingArrayOutputWithContext(context.Background())
}

func (i EntityMappingArray) ToEntityMappingArrayOutputWithContext(ctx context.Context) EntityMappingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EntityMappingArrayOutput)
}

// Single entity mapping for the alert rule
type EntityMappingOutput struct{ *pulumi.OutputState }

func (EntityMappingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EntityMapping)(nil)).Elem()
}

func (o EntityMappingOutput) ToEntityMappingOutput() EntityMappingOutput {
	return o
}

func (o EntityMappingOutput) ToEntityMappingOutputWithContext(ctx context.Context) EntityMappingOutput {
	return o
}

// The V3 type of the mapped entity
func (o EntityMappingOutput) EntityType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EntityMapping) *string { return v.EntityType }).(pulumi.StringPtrOutput)
}

// array of field mappings for the given entity mapping
func (o EntityMappingOutput) FieldMappings() FieldMappingArrayOutput {
	return o.ApplyT(func(v EntityMapping) []FieldMapping { return v.FieldMappings }).(FieldMappingArrayOutput)
}

type EntityMappingArrayOutput struct{ *pulumi.OutputState }

func (EntityMappingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EntityMapping)(nil)).Elem()
}

func (o EntityMappingArrayOutput) ToEntityMappingArrayOutput() EntityMappingArrayOutput {
	return o
}

func (o EntityMappingArrayOutput) ToEntityMappingArrayOutputWithContext(ctx context.Context) EntityMappingArrayOutput {
	return o
}

func (o EntityMappingArrayOutput) Index(i pulumi.IntInput) EntityMappingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EntityMapping {
		return vs[0].([]EntityMapping)[vs[1].(int)]
	}).(EntityMappingOutput)
}

// Single entity mapping for the alert rule
type EntityMappingResponse struct {
	// The V3 type of the mapped entity
	EntityType *string `pulumi:"entityType"`
	// array of field mappings for the given entity mapping
	FieldMappings []FieldMappingResponse `pulumi:"fieldMappings"`
}

// Single entity mapping for the alert rule
type EntityMappingResponseOutput struct{ *pulumi.OutputState }

func (EntityMappingResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EntityMappingResponse)(nil)).Elem()
}

func (o EntityMappingResponseOutput) ToEntityMappingResponseOutput() EntityMappingResponseOutput {
	return o
}

func (o EntityMappingResponseOutput) ToEntityMappingResponseOutputWithContext(ctx context.Context) EntityMappingResponseOutput {
	return o
}

// The V3 type of the mapped entity
func (o EntityMappingResponseOutput) EntityType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EntityMappingResponse) *string { return v.EntityType }).(pulumi.StringPtrOutput)
}

// array of field mappings for the given entity mapping
func (o EntityMappingResponseOutput) FieldMappings() FieldMappingResponseArrayOutput {
	return o.ApplyT(func(v EntityMappingResponse) []FieldMappingResponse { return v.FieldMappings }).(FieldMappingResponseArrayOutput)
}

type EntityMappingResponseArrayOutput struct{ *pulumi.OutputState }

func (EntityMappingResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EntityMappingResponse)(nil)).Elem()
}

func (o EntityMappingResponseArrayOutput) ToEntityMappingResponseArrayOutput() EntityMappingResponseArrayOutput {
	return o
}

func (o EntityMappingResponseArrayOutput) ToEntityMappingResponseArrayOutputWithContext(ctx context.Context) EntityMappingResponseArrayOutput {
	return o
}

func (o EntityMappingResponseArrayOutput) Index(i pulumi.IntInput) EntityMappingResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EntityMappingResponse {
		return vs[0].([]EntityMappingResponse)[vs[1].(int)]
	}).(EntityMappingResponseOutput)
}

// Event grouping settings property bag.
type EventGroupingSettings struct {
	// The event grouping aggregation kinds
	AggregationKind *string `pulumi:"aggregationKind"`
}

// EventGroupingSettingsInput is an input type that accepts EventGroupingSettingsArgs and EventGroupingSettingsOutput values.
// You can construct a concrete instance of `EventGroupingSettingsInput` via:
//
//	EventGroupingSettingsArgs{...}
type EventGroupingSettingsInput interface {
	pulumi.Input

	ToEventGroupingSettingsOutput() EventGroupingSettingsOutput
	ToEventGroupingSettingsOutputWithContext(context.Context) EventGroupingSettingsOutput
}

// Event grouping settings property bag.
type EventGroupingSettingsArgs struct {
	// The event grouping aggregation kinds
	AggregationKind pulumi.StringPtrInput `pulumi:"aggregationKind"`
}

func (EventGroupingSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EventGroupingSettings)(nil)).Elem()
}

func (i EventGroupingSettingsArgs) ToEventGroupingSettingsOutput() EventGroupingSettingsOutput {
	return i.ToEventGroupingSettingsOutputWithContext(context.Background())
}

func (i EventGroupingSettingsArgs) ToEventGroupingSettingsOutputWithContext(ctx context.Context) EventGroupingSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventGroupingSettingsOutput)
}

func (i EventGroupingSettingsArgs) ToEventGroupingSettingsPtrOutput() EventGroupingSettingsPtrOutput {
	return i.ToEventGroupingSettingsPtrOutputWithContext(context.Background())
}

func (i EventGroupingSettingsArgs) ToEventGroupingSettingsPtrOutputWithContext(ctx context.Context) EventGroupingSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventGroupingSettingsOutput).ToEventGroupingSettingsPtrOutputWithContext(ctx)
}

// EventGroupingSettingsPtrInput is an input type that accepts EventGroupingSettingsArgs, EventGroupingSettingsPtr and EventGroupingSettingsPtrOutput values.
// You can construct a concrete instance of `EventGroupingSettingsPtrInput` via:
//
//	        EventGroupingSettingsArgs{...}
//
//	or:
//
//	        nil
type EventGroupingSettingsPtrInput interface {
	pulumi.Input

	ToEventGroupingSettingsPtrOutput() EventGroupingSettingsPtrOutput
	ToEventGroupingSettingsPtrOutputWithContext(context.Context) EventGroupingSettingsPtrOutput
}

type eventGroupingSettingsPtrType EventGroupingSettingsArgs

func EventGroupingSettingsPtr(v *EventGroupingSettingsArgs) EventGroupingSettingsPtrInput {
	return (*eventGroupingSettingsPtrType)(v)
}

func (*eventGroupingSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EventGroupingSettings)(nil)).Elem()
}

func (i *eventGroupingSettingsPtrType) ToEventGroupingSettingsPtrOutput() EventGroupingSettingsPtrOutput {
	return i.ToEventGroupingSettingsPtrOutputWithContext(context.Background())
}

func (i *eventGroupingSettingsPtrType) ToEventGroupingSettingsPtrOutputWithContext(ctx context.Context) EventGroupingSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventGroupingSettingsPtrOutput)
}

// Event grouping settings property bag.
type EventGroupingSettingsOutput struct{ *pulumi.OutputState }

func (EventGroupingSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EventGroupingSettings)(nil)).Elem()
}

func (o EventGroupingSettingsOutput) ToEventGroupingSettingsOutput() EventGroupingSettingsOutput {
	return o
}

func (o EventGroupingSettingsOutput) ToEventGroupingSettingsOutputWithContext(ctx context.Context) EventGroupingSettingsOutput {
	return o
}

func (o EventGroupingSettingsOutput) ToEventGroupingSettingsPtrOutput() EventGroupingSettingsPtrOutput {
	return o.ToEventGroupingSettingsPtrOutputWithContext(context.Background())
}

func (o EventGroupingSettingsOutput) ToEventGroupingSettingsPtrOutputWithContext(ctx context.Context) EventGroupingSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EventGroupingSettings) *EventGroupingSettings {
		return &v
	}).(EventGroupingSettingsPtrOutput)
}

// The event grouping aggregation kinds
func (o EventGroupingSettingsOutput) AggregationKind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EventGroupingSettings) *string { return v.AggregationKind }).(pulumi.StringPtrOutput)
}

type EventGroupingSettingsPtrOutput struct{ *pulumi.OutputState }

func (EventGroupingSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EventGroupingSettings)(nil)).Elem()
}

func (o EventGroupingSettingsPtrOutput) ToEventGroupingSettingsPtrOutput() EventGroupingSettingsPtrOutput {
	return o
}

func (o EventGroupingSettingsPtrOutput) ToEventGroupingSettingsPtrOutputWithContext(ctx context.Context) EventGroupingSettingsPtrOutput {
	return o
}

func (o EventGroupingSettingsPtrOutput) Elem() EventGroupingSettingsOutput {
	return o.ApplyT(func(v *EventGroupingSettings) EventGroupingSettings {
		if v != nil {
			return *v
		}
		var ret EventGroupingSettings
		return ret
	}).(EventGroupingSettingsOutput)
}

// The event grouping aggregation kinds
func (o EventGroupingSettingsPtrOutput) AggregationKind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EventGroupingSettings) *string {
		if v == nil {
			return nil
		}
		return v.AggregationKind
	}).(pulumi.StringPtrOutput)
}

// Event grouping settings property bag.
type EventGroupingSettingsResponse struct {
	// The event grouping aggregation kinds
	AggregationKind *string `pulumi:"aggregationKind"`
}

// Event grouping settings property bag.
type EventGroupingSettingsResponseOutput struct{ *pulumi.OutputState }

func (EventGroupingSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EventGroupingSettingsResponse)(nil)).Elem()
}

func (o EventGroupingSettingsResponseOutput) ToEventGroupingSettingsResponseOutput() EventGroupingSettingsResponseOutput {
	return o
}

func (o EventGroupingSettingsResponseOutput) ToEventGroupingSettingsResponseOutputWithContext(ctx context.Context) EventGroupingSettingsResponseOutput {
	return o
}

// The event grouping aggregation kinds
func (o EventGroupingSettingsResponseOutput) AggregationKind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EventGroupingSettingsResponse) *string { return v.AggregationKind }).(pulumi.StringPtrOutput)
}

type EventGroupingSettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (EventGroupingSettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EventGroupingSettingsResponse)(nil)).Elem()
}

func (o EventGroupingSettingsResponsePtrOutput) ToEventGroupingSettingsResponsePtrOutput() EventGroupingSettingsResponsePtrOutput {
	return o
}

func (o EventGroupingSettingsResponsePtrOutput) ToEventGroupingSettingsResponsePtrOutputWithContext(ctx context.Context) EventGroupingSettingsResponsePtrOutput {
	return o
}

func (o EventGroupingSettingsResponsePtrOutput) Elem() EventGroupingSettingsResponseOutput {
	return o.ApplyT(func(v *EventGroupingSettingsResponse) EventGroupingSettingsResponse {
		if v != nil {
			return *v
		}
		var ret EventGroupingSettingsResponse
		return ret
	}).(EventGroupingSettingsResponseOutput)
}

// The event grouping aggregation kinds
func (o EventGroupingSettingsResponsePtrOutput) AggregationKind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EventGroupingSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.AggregationKind
	}).(pulumi.StringPtrOutput)
}

// A single field mapping of the mapped entity
type FieldMapping struct {
	// the column name to be mapped to the identifier
	ColumnName *string `pulumi:"columnName"`
	// the V3 identifier of the entity
	Identifier *string `pulumi:"identifier"`
}

// FieldMappingInput is an input type that accepts FieldMappingArgs and FieldMappingOutput values.
// You can construct a concrete instance of `FieldMappingInput` via:
//
//	FieldMappingArgs{...}
type FieldMappingInput interface {
	pulumi.Input

	ToFieldMappingOutput() FieldMappingOutput
	ToFieldMappingOutputWithContext(context.Context) FieldMappingOutput
}

// A single field mapping of the mapped entity
type FieldMappingArgs struct {
	// the column name to be mapped to the identifier
	ColumnName pulumi.StringPtrInput `pulumi:"columnName"`
	// the V3 identifier of the entity
	Identifier pulumi.StringPtrInput `pulumi:"identifier"`
}

func (FieldMappingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FieldMapping)(nil)).Elem()
}

func (i FieldMappingArgs) ToFieldMappingOutput() FieldMappingOutput {
	return i.ToFieldMappingOutputWithContext(context.Background())
}

func (i FieldMappingArgs) ToFieldMappingOutputWithContext(ctx context.Context) FieldMappingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FieldMappingOutput)
}

// FieldMappingArrayInput is an input type that accepts FieldMappingArray and FieldMappingArrayOutput values.
// You can construct a concrete instance of `FieldMappingArrayInput` via:
//
//	FieldMappingArray{ FieldMappingArgs{...} }
type FieldMappingArrayInput interface {
	pulumi.Input

	ToFieldMappingArrayOutput() FieldMappingArrayOutput
	ToFieldMappingArrayOutputWithContext(context.Context) FieldMappingArrayOutput
}

type FieldMappingArray []FieldMappingInput

func (FieldMappingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FieldMapping)(nil)).Elem()
}

func (i FieldMappingArray) ToFieldMappingArrayOutput() FieldMappingArrayOutput {
	return i.ToFieldMappingArrayOutputWithContext(context.Background())
}

func (i FieldMappingArray) ToFieldMappingArrayOutputWithContext(ctx context.Context) FieldMappingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FieldMappingArrayOutput)
}

// A single field mapping of the mapped entity
type FieldMappingOutput struct{ *pulumi.OutputState }

func (FieldMappingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FieldMapping)(nil)).Elem()
}

func (o FieldMappingOutput) ToFieldMappingOutput() FieldMappingOutput {
	return o
}

func (o FieldMappingOutput) ToFieldMappingOutputWithContext(ctx context.Context) FieldMappingOutput {
	return o
}

// the column name to be mapped to the identifier
func (o FieldMappingOutput) ColumnName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FieldMapping) *string { return v.ColumnName }).(pulumi.StringPtrOutput)
}

// the V3 identifier of the entity
func (o FieldMappingOutput) Identifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FieldMapping) *string { return v.Identifier }).(pulumi.StringPtrOutput)
}

type FieldMappingArrayOutput struct{ *pulumi.OutputState }

func (FieldMappingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FieldMapping)(nil)).Elem()
}

func (o FieldMappingArrayOutput) ToFieldMappingArrayOutput() FieldMappingArrayOutput {
	return o
}

func (o FieldMappingArrayOutput) ToFieldMappingArrayOutputWithContext(ctx context.Context) FieldMappingArrayOutput {
	return o
}

func (o FieldMappingArrayOutput) Index(i pulumi.IntInput) FieldMappingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FieldMapping {
		return vs[0].([]FieldMapping)[vs[1].(int)]
	}).(FieldMappingOutput)
}

// A single field mapping of the mapped entity
type FieldMappingResponse struct {
	// the column name to be mapped to the identifier
	ColumnName *string `pulumi:"columnName"`
	// the V3 identifier of the entity
	Identifier *string `pulumi:"identifier"`
}

// A single field mapping of the mapped entity
type FieldMappingResponseOutput struct{ *pulumi.OutputState }

func (FieldMappingResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FieldMappingResponse)(nil)).Elem()
}

func (o FieldMappingResponseOutput) ToFieldMappingResponseOutput() FieldMappingResponseOutput {
	return o
}

func (o FieldMappingResponseOutput) ToFieldMappingResponseOutputWithContext(ctx context.Context) FieldMappingResponseOutput {
	return o
}

// the column name to be mapped to the identifier
func (o FieldMappingResponseOutput) ColumnName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FieldMappingResponse) *string { return v.ColumnName }).(pulumi.StringPtrOutput)
}

// the V3 identifier of the entity
func (o FieldMappingResponseOutput) Identifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FieldMappingResponse) *string { return v.Identifier }).(pulumi.StringPtrOutput)
}

type FieldMappingResponseArrayOutput struct{ *pulumi.OutputState }

func (FieldMappingResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FieldMappingResponse)(nil)).Elem()
}

func (o FieldMappingResponseArrayOutput) ToFieldMappingResponseArrayOutput() FieldMappingResponseArrayOutput {
	return o
}

func (o FieldMappingResponseArrayOutput) ToFieldMappingResponseArrayOutputWithContext(ctx context.Context) FieldMappingResponseArrayOutput {
	return o
}

func (o FieldMappingResponseArrayOutput) Index(i pulumi.IntInput) FieldMappingResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FieldMappingResponse {
		return vs[0].([]FieldMappingResponse)[vs[1].(int)]
	}).(FieldMappingResponseOutput)
}

// Model for API authentication for all GCP kind connectors.
type GCPAuthModel struct {
	// GCP Project Number
	ProjectNumber string `pulumi:"projectNumber"`
	// GCP Service Account Email
	ServiceAccountEmail string `pulumi:"serviceAccountEmail"`
	// Type of paging
	// Expected value is 'GCP'.
	Type string `pulumi:"type"`
	// GCP Workload Identity Provider ID
	WorkloadIdentityProviderId string `pulumi:"workloadIdentityProviderId"`
}

// GCPAuthModelInput is an input type that accepts GCPAuthModelArgs and GCPAuthModelOutput values.
// You can construct a concrete instance of `GCPAuthModelInput` via:
//
//	GCPAuthModelArgs{...}
type GCPAuthModelInput interface {
	pulumi.Input

	ToGCPAuthModelOutput() GCPAuthModelOutput
	ToGCPAuthModelOutputWithContext(context.Context) GCPAuthModelOutput
}

// Model for API authentication for all GCP kind connectors.
type GCPAuthModelArgs struct {
	// GCP Project Number
	ProjectNumber pulumi.StringInput `pulumi:"projectNumber"`
	// GCP Service Account Email
	ServiceAccountEmail pulumi.StringInput `pulumi:"serviceAccountEmail"`
	// Type of paging
	// Expected value is 'GCP'.
	Type pulumi.StringInput `pulumi:"type"`
	// GCP Workload Identity Provider ID
	WorkloadIdentityProviderId pulumi.StringInput `pulumi:"workloadIdentityProviderId"`
}

func (GCPAuthModelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GCPAuthModel)(nil)).Elem()
}

func (i GCPAuthModelArgs) ToGCPAuthModelOutput() GCPAuthModelOutput {
	return i.ToGCPAuthModelOutputWithContext(context.Background())
}

func (i GCPAuthModelArgs) ToGCPAuthModelOutputWithContext(ctx context.Context) GCPAuthModelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GCPAuthModelOutput)
}

// Model for API authentication for all GCP kind connectors.
type GCPAuthModelOutput struct{ *pulumi.OutputState }

func (GCPAuthModelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GCPAuthModel)(nil)).Elem()
}

func (o GCPAuthModelOutput) ToGCPAuthModelOutput() GCPAuthModelOutput {
	return o
}

func (o GCPAuthModelOutput) ToGCPAuthModelOutputWithContext(ctx context.Context) GCPAuthModelOutput {
	return o
}

// GCP Project Number
func (o GCPAuthModelOutput) ProjectNumber() pulumi.StringOutput {
	return o.ApplyT(func(v GCPAuthModel) string { return v.ProjectNumber }).(pulumi.StringOutput)
}

// GCP Service Account Email
func (o GCPAuthModelOutput) ServiceAccountEmail() pulumi.StringOutput {
	return o.ApplyT(func(v GCPAuthModel) string { return v.ServiceAccountEmail }).(pulumi.StringOutput)
}

// Type of paging
// Expected value is 'GCP'.
func (o GCPAuthModelOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GCPAuthModel) string { return v.Type }).(pulumi.StringOutput)
}

// GCP Workload Identity Provider ID
func (o GCPAuthModelOutput) WorkloadIdentityProviderId() pulumi.StringOutput {
	return o.ApplyT(func(v GCPAuthModel) string { return v.WorkloadIdentityProviderId }).(pulumi.StringOutput)
}

// Model for API authentication for all GCP kind connectors.
type GCPAuthModelResponse struct {
	// GCP Project Number
	ProjectNumber string `pulumi:"projectNumber"`
	// GCP Service Account Email
	ServiceAccountEmail string `pulumi:"serviceAccountEmail"`
	// Type of paging
	// Expected value is 'GCP'.
	Type string `pulumi:"type"`
	// GCP Workload Identity Provider ID
	WorkloadIdentityProviderId string `pulumi:"workloadIdentityProviderId"`
}

// Model for API authentication for all GCP kind connectors.
type GCPAuthModelResponseOutput struct{ *pulumi.OutputState }

func (GCPAuthModelResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GCPAuthModelResponse)(nil)).Elem()
}

func (o GCPAuthModelResponseOutput) ToGCPAuthModelResponseOutput() GCPAuthModelResponseOutput {
	return o
}

func (o GCPAuthModelResponseOutput) ToGCPAuthModelResponseOutputWithContext(ctx context.Context) GCPAuthModelResponseOutput {
	return o
}

// GCP Project Number
func (o GCPAuthModelResponseOutput) ProjectNumber() pulumi.StringOutput {
	return o.ApplyT(func(v GCPAuthModelResponse) string { return v.ProjectNumber }).(pulumi.StringOutput)
}

// GCP Service Account Email
func (o GCPAuthModelResponseOutput) ServiceAccountEmail() pulumi.StringOutput {
	return o.ApplyT(func(v GCPAuthModelResponse) string { return v.ServiceAccountEmail }).(pulumi.StringOutput)
}

// Type of paging
// Expected value is 'GCP'.
func (o GCPAuthModelResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GCPAuthModelResponse) string { return v.Type }).(pulumi.StringOutput)
}

// GCP Workload Identity Provider ID
func (o GCPAuthModelResponseOutput) WorkloadIdentityProviderId() pulumi.StringOutput {
	return o.ApplyT(func(v GCPAuthModelResponse) string { return v.WorkloadIdentityProviderId }).(pulumi.StringOutput)
}

// Model for API authentication for working with service bus or storage account.
type GenericBlobSbsAuthModel struct {
	// Credentials for service bus namespace, keyvault uri for access key
	CredentialsConfig map[string]string `pulumi:"credentialsConfig"`
	// Credentials for storage account, keyvault uri for access key
	StorageAccountCredentialsConfig map[string]string `pulumi:"storageAccountCredentialsConfig"`
	// Type of paging
	// Expected value is 'ServiceBus'.
	Type string `pulumi:"type"`
}

// GenericBlobSbsAuthModelInput is an input type that accepts GenericBlobSbsAuthModelArgs and GenericBlobSbsAuthModelOutput values.
// You can construct a concrete instance of `GenericBlobSbsAuthModelInput` via:
//
//	GenericBlobSbsAuthModelArgs{...}
type GenericBlobSbsAuthModelInput interface {
	pulumi.Input

	ToGenericBlobSbsAuthModelOutput() GenericBlobSbsAuthModelOutput
	ToGenericBlobSbsAuthModelOutputWithContext(context.Context) GenericBlobSbsAuthModelOutput
}

// Model for API authentication for working with service bus or storage account.
type GenericBlobSbsAuthModelArgs struct {
	// Credentials for service bus namespace, keyvault uri for access key
	CredentialsConfig pulumi.StringMapInput `pulumi:"credentialsConfig"`
	// Credentials for storage account, keyvault uri for access key
	StorageAccountCredentialsConfig pulumi.StringMapInput `pulumi:"storageAccountCredentialsConfig"`
	// Type of paging
	// Expected value is 'ServiceBus'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GenericBlobSbsAuthModelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GenericBlobSbsAuthModel)(nil)).Elem()
}

func (i GenericBlobSbsAuthModelArgs) ToGenericBlobSbsAuthModelOutput() GenericBlobSbsAuthModelOutput {
	return i.ToGenericBlobSbsAuthModelOutputWithContext(context.Background())
}

func (i GenericBlobSbsAuthModelArgs) ToGenericBlobSbsAuthModelOutputWithContext(ctx context.Context) GenericBlobSbsAuthModelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GenericBlobSbsAuthModelOutput)
}

// Model for API authentication for working with service bus or storage account.
type GenericBlobSbsAuthModelOutput struct{ *pulumi.OutputState }

func (GenericBlobSbsAuthModelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GenericBlobSbsAuthModel)(nil)).Elem()
}

func (o GenericBlobSbsAuthModelOutput) ToGenericBlobSbsAuthModelOutput() GenericBlobSbsAuthModelOutput {
	return o
}

func (o GenericBlobSbsAuthModelOutput) ToGenericBlobSbsAuthModelOutputWithContext(ctx context.Context) GenericBlobSbsAuthModelOutput {
	return o
}

// Credentials for service bus namespace, keyvault uri for access key
func (o GenericBlobSbsAuthModelOutput) CredentialsConfig() pulumi.StringMapOutput {
	return o.ApplyT(func(v GenericBlobSbsAuthModel) map[string]string { return v.CredentialsConfig }).(pulumi.StringMapOutput)
}

// Credentials for storage account, keyvault uri for access key
func (o GenericBlobSbsAuthModelOutput) StorageAccountCredentialsConfig() pulumi.StringMapOutput {
	return o.ApplyT(func(v GenericBlobSbsAuthModel) map[string]string { return v.StorageAccountCredentialsConfig }).(pulumi.StringMapOutput)
}

// Type of paging
// Expected value is 'ServiceBus'.
func (o GenericBlobSbsAuthModelOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GenericBlobSbsAuthModel) string { return v.Type }).(pulumi.StringOutput)
}

// Model for API authentication for working with service bus or storage account.
type GenericBlobSbsAuthModelResponse struct {
	// Credentials for service bus namespace, keyvault uri for access key
	CredentialsConfig map[string]string `pulumi:"credentialsConfig"`
	// Credentials for storage account, keyvault uri for access key
	StorageAccountCredentialsConfig map[string]string `pulumi:"storageAccountCredentialsConfig"`
	// Type of paging
	// Expected value is 'ServiceBus'.
	Type string `pulumi:"type"`
}

// Model for API authentication for working with service bus or storage account.
type GenericBlobSbsAuthModelResponseOutput struct{ *pulumi.OutputState }

func (GenericBlobSbsAuthModelResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GenericBlobSbsAuthModelResponse)(nil)).Elem()
}

func (o GenericBlobSbsAuthModelResponseOutput) ToGenericBlobSbsAuthModelResponseOutput() GenericBlobSbsAuthModelResponseOutput {
	return o
}

func (o GenericBlobSbsAuthModelResponseOutput) ToGenericBlobSbsAuthModelResponseOutputWithContext(ctx context.Context) GenericBlobSbsAuthModelResponseOutput {
	return o
}

// Credentials for service bus namespace, keyvault uri for access key
func (o GenericBlobSbsAuthModelResponseOutput) CredentialsConfig() pulumi.StringMapOutput {
	return o.ApplyT(func(v GenericBlobSbsAuthModelResponse) map[string]string { return v.CredentialsConfig }).(pulumi.StringMapOutput)
}

// Credentials for storage account, keyvault uri for access key
func (o GenericBlobSbsAuthModelResponseOutput) StorageAccountCredentialsConfig() pulumi.StringMapOutput {
	return o.ApplyT(func(v GenericBlobSbsAuthModelResponse) map[string]string { return v.StorageAccountCredentialsConfig }).(pulumi.StringMapOutput)
}

// Type of paging
// Expected value is 'ServiceBus'.
func (o GenericBlobSbsAuthModelResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GenericBlobSbsAuthModelResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Model for API authentication for GitHub. For this authentication first we need to approve the Router app (Microsoft Security DevOps) to access the GitHub account, Then we only need the InstallationId to get the access token from https://api.github.com/app/installations/{installId}/access_tokens.
type GitHubAuthModel struct {
	// The GitHubApp auth installation id.
	InstallationId *string `pulumi:"installationId"`
	// Type of paging
	// Expected value is 'GitHub'.
	Type string `pulumi:"type"`
}

// GitHubAuthModelInput is an input type that accepts GitHubAuthModelArgs and GitHubAuthModelOutput values.
// You can construct a concrete instance of `GitHubAuthModelInput` via:
//
//	GitHubAuthModelArgs{...}
type GitHubAuthModelInput interface {
	pulumi.Input

	ToGitHubAuthModelOutput() GitHubAuthModelOutput
	ToGitHubAuthModelOutputWithContext(context.Context) GitHubAuthModelOutput
}

// Model for API authentication for GitHub. For this authentication first we need to approve the Router app (Microsoft Security DevOps) to access the GitHub account, Then we only need the InstallationId to get the access token from https://api.github.com/app/installations/{installId}/access_tokens.
type GitHubAuthModelArgs struct {
	// The GitHubApp auth installation id.
	InstallationId pulumi.StringPtrInput `pulumi:"installationId"`
	// Type of paging
	// Expected value is 'GitHub'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GitHubAuthModelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GitHubAuthModel)(nil)).Elem()
}

func (i GitHubAuthModelArgs) ToGitHubAuthModelOutput() GitHubAuthModelOutput {
	return i.ToGitHubAuthModelOutputWithContext(context.Background())
}

func (i GitHubAuthModelArgs) ToGitHubAuthModelOutputWithContext(ctx context.Context) GitHubAuthModelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitHubAuthModelOutput)
}

// Model for API authentication for GitHub. For this authentication first we need to approve the Router app (Microsoft Security DevOps) to access the GitHub account, Then we only need the InstallationId to get the access token from https://api.github.com/app/installations/{installId}/access_tokens.
type GitHubAuthModelOutput struct{ *pulumi.OutputState }

func (GitHubAuthModelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GitHubAuthModel)(nil)).Elem()
}

func (o GitHubAuthModelOutput) ToGitHubAuthModelOutput() GitHubAuthModelOutput {
	return o
}

func (o GitHubAuthModelOutput) ToGitHubAuthModelOutputWithContext(ctx context.Context) GitHubAuthModelOutput {
	return o
}

// The GitHubApp auth installation id.
func (o GitHubAuthModelOutput) InstallationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitHubAuthModel) *string { return v.InstallationId }).(pulumi.StringPtrOutput)
}

// Type of paging
// Expected value is 'GitHub'.
func (o GitHubAuthModelOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GitHubAuthModel) string { return v.Type }).(pulumi.StringOutput)
}

// Model for API authentication for GitHub. For this authentication first we need to approve the Router app (Microsoft Security DevOps) to access the GitHub account, Then we only need the InstallationId to get the access token from https://api.github.com/app/installations/{installId}/access_tokens.
type GitHubAuthModelResponse struct {
	// The GitHubApp auth installation id.
	InstallationId *string `pulumi:"installationId"`
	// Type of paging
	// Expected value is 'GitHub'.
	Type string `pulumi:"type"`
}

// Model for API authentication for GitHub. For this authentication first we need to approve the Router app (Microsoft Security DevOps) to access the GitHub account, Then we only need the InstallationId to get the access token from https://api.github.com/app/installations/{installId}/access_tokens.
type GitHubAuthModelResponseOutput struct{ *pulumi.OutputState }

func (GitHubAuthModelResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GitHubAuthModelResponse)(nil)).Elem()
}

func (o GitHubAuthModelResponseOutput) ToGitHubAuthModelResponseOutput() GitHubAuthModelResponseOutput {
	return o
}

func (o GitHubAuthModelResponseOutput) ToGitHubAuthModelResponseOutputWithContext(ctx context.Context) GitHubAuthModelResponseOutput {
	return o
}

// The GitHubApp auth installation id.
func (o GitHubAuthModelResponseOutput) InstallationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitHubAuthModelResponse) *string { return v.InstallationId }).(pulumi.StringPtrOutput)
}

// Type of paging
// Expected value is 'GitHub'.
func (o GitHubAuthModelResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GitHubAuthModelResponse) string { return v.Type }).(pulumi.StringOutput)
}

// The graph query to show the volume of data arriving into the workspace over time.
type GraphQuery struct {
	// Gets or sets the base query for the graph.
	// The base query is wrapped by Sentinel UI infra with a KQL query, that measures the volume over time.
	BaseQuery string `pulumi:"baseQuery"`
	// Gets or sets the legend for the graph.
	Legend string `pulumi:"legend"`
	// Gets or sets the metric name that the query is checking. For example: 'Total data receive'.
	MetricName string `pulumi:"metricName"`
}

// GraphQueryInput is an input type that accepts GraphQueryArgs and GraphQueryOutput values.
// You can construct a concrete instance of `GraphQueryInput` via:
//
//	GraphQueryArgs{...}
type GraphQueryInput interface {
	pulumi.Input

	ToGraphQueryOutput() GraphQueryOutput
	ToGraphQueryOutputWithContext(context.Context) GraphQueryOutput
}

// The graph query to show the volume of data arriving into the workspace over time.
type GraphQueryArgs struct {
	// Gets or sets the base query for the graph.
	// The base query is wrapped by Sentinel UI infra with a KQL query, that measures the volume over time.
	BaseQuery pulumi.StringInput `pulumi:"baseQuery"`
	// Gets or sets the legend for the graph.
	Legend pulumi.StringInput `pulumi:"legend"`
	// Gets or sets the metric name that the query is checking. For example: 'Total data receive'.
	MetricName pulumi.StringInput `pulumi:"metricName"`
}

func (GraphQueryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GraphQuery)(nil)).Elem()
}

func (i GraphQueryArgs) ToGraphQueryOutput() GraphQueryOutput {
	return i.ToGraphQueryOutputWithContext(context.Background())
}

func (i GraphQueryArgs) ToGraphQueryOutputWithContext(ctx context.Context) GraphQueryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GraphQueryOutput)
}

// GraphQueryArrayInput is an input type that accepts GraphQueryArray and GraphQueryArrayOutput values.
// You can construct a concrete instance of `GraphQueryArrayInput` via:
//
//	GraphQueryArray{ GraphQueryArgs{...} }
type GraphQueryArrayInput interface {
	pulumi.Input

	ToGraphQueryArrayOutput() GraphQueryArrayOutput
	ToGraphQueryArrayOutputWithContext(context.Context) GraphQueryArrayOutput
}

type GraphQueryArray []GraphQueryInput

func (GraphQueryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GraphQuery)(nil)).Elem()
}

func (i GraphQueryArray) ToGraphQueryArrayOutput() GraphQueryArrayOutput {
	return i.ToGraphQueryArrayOutputWithContext(context.Background())
}

func (i GraphQueryArray) ToGraphQueryArrayOutputWithContext(ctx context.Context) GraphQueryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GraphQueryArrayOutput)
}

// The graph query to show the volume of data arriving into the workspace over time.
type GraphQueryOutput struct{ *pulumi.OutputState }

func (GraphQueryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GraphQuery)(nil)).Elem()
}

func (o GraphQueryOutput) ToGraphQueryOutput() GraphQueryOutput {
	return o
}

func (o GraphQueryOutput) ToGraphQueryOutputWithContext(ctx context.Context) GraphQueryOutput {
	return o
}

// Gets or sets the base query for the graph.
// The base query is wrapped by Sentinel UI infra with a KQL query, that measures the volume over time.
func (o GraphQueryOutput) BaseQuery() pulumi.StringOutput {
	return o.ApplyT(func(v GraphQuery) string { return v.BaseQuery }).(pulumi.StringOutput)
}

// Gets or sets the legend for the graph.
func (o GraphQueryOutput) Legend() pulumi.StringOutput {
	return o.ApplyT(func(v GraphQuery) string { return v.Legend }).(pulumi.StringOutput)
}

// Gets or sets the metric name that the query is checking. For example: 'Total data receive'.
func (o GraphQueryOutput) MetricName() pulumi.StringOutput {
	return o.ApplyT(func(v GraphQuery) string { return v.MetricName }).(pulumi.StringOutput)
}

type GraphQueryArrayOutput struct{ *pulumi.OutputState }

func (GraphQueryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GraphQuery)(nil)).Elem()
}

func (o GraphQueryArrayOutput) ToGraphQueryArrayOutput() GraphQueryArrayOutput {
	return o
}

func (o GraphQueryArrayOutput) ToGraphQueryArrayOutputWithContext(ctx context.Context) GraphQueryArrayOutput {
	return o
}

func (o GraphQueryArrayOutput) Index(i pulumi.IntInput) GraphQueryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GraphQuery {
		return vs[0].([]GraphQuery)[vs[1].(int)]
	}).(GraphQueryOutput)
}

// The graph query to show the volume of data arriving into the workspace over time.
type GraphQueryResponse struct {
	// Gets or sets the base query for the graph.
	// The base query is wrapped by Sentinel UI infra with a KQL query, that measures the volume over time.
	BaseQuery string `pulumi:"baseQuery"`
	// Gets or sets the legend for the graph.
	Legend string `pulumi:"legend"`
	// Gets or sets the metric name that the query is checking. For example: 'Total data receive'.
	MetricName string `pulumi:"metricName"`
}

// The graph query to show the volume of data arriving into the workspace over time.
type GraphQueryResponseOutput struct{ *pulumi.OutputState }

func (GraphQueryResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GraphQueryResponse)(nil)).Elem()
}

func (o GraphQueryResponseOutput) ToGraphQueryResponseOutput() GraphQueryResponseOutput {
	return o
}

func (o GraphQueryResponseOutput) ToGraphQueryResponseOutputWithContext(ctx context.Context) GraphQueryResponseOutput {
	return o
}

// Gets or sets the base query for the graph.
// The base query is wrapped by Sentinel UI infra with a KQL query, that measures the volume over time.
func (o GraphQueryResponseOutput) BaseQuery() pulumi.StringOutput {
	return o.ApplyT(func(v GraphQueryResponse) string { return v.BaseQuery }).(pulumi.StringOutput)
}

// Gets or sets the legend for the graph.
func (o GraphQueryResponseOutput) Legend() pulumi.StringOutput {
	return o.ApplyT(func(v GraphQueryResponse) string { return v.Legend }).(pulumi.StringOutput)
}

// Gets or sets the metric name that the query is checking. For example: 'Total data receive'.
func (o GraphQueryResponseOutput) MetricName() pulumi.StringOutput {
	return o.ApplyT(func(v GraphQueryResponse) string { return v.MetricName }).(pulumi.StringOutput)
}

type GraphQueryResponseArrayOutput struct{ *pulumi.OutputState }

func (GraphQueryResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GraphQueryResponse)(nil)).Elem()
}

func (o GraphQueryResponseArrayOutput) ToGraphQueryResponseArrayOutput() GraphQueryResponseArrayOutput {
	return o
}

func (o GraphQueryResponseArrayOutput) ToGraphQueryResponseArrayOutputWithContext(ctx context.Context) GraphQueryResponseArrayOutput {
	return o
}

func (o GraphQueryResponseArrayOutput) Index(i pulumi.IntInput) GraphQueryResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GraphQueryResponse {
		return vs[0].([]GraphQueryResponse)[vs[1].(int)]
	}).(GraphQueryResponseOutput)
}

// Grouping configuration property bag.
type GroupingConfiguration struct {
	// Grouping enabled
	Enabled bool `pulumi:"enabled"`
	// A list of alert details to group by (when matchingMethod is Selected)
	GroupByAlertDetails []string `pulumi:"groupByAlertDetails"`
	// A list of custom details keys to group by (when matchingMethod is Selected). Only keys defined in the current alert rule may be used.
	GroupByCustomDetails []string `pulumi:"groupByCustomDetails"`
	// A list of entity types to group by (when matchingMethod is Selected). Only entities defined in the current alert rule may be used.
	GroupByEntities []string `pulumi:"groupByEntities"`
	// Limit the group to alerts created within the lookback duration (in ISO 8601 duration format)
	LookbackDuration string `pulumi:"lookbackDuration"`
	// Grouping matching method. When method is Selected at least one of groupByEntities, groupByAlertDetails, groupByCustomDetails must be provided and not empty.
	MatchingMethod string `pulumi:"matchingMethod"`
	// Re-open closed matching incidents
	ReopenClosedIncident bool `pulumi:"reopenClosedIncident"`
}

// GroupingConfigurationInput is an input type that accepts GroupingConfigurationArgs and GroupingConfigurationOutput values.
// You can construct a concrete instance of `GroupingConfigurationInput` via:
//
//	GroupingConfigurationArgs{...}
type GroupingConfigurationInput interface {
	pulumi.Input

	ToGroupingConfigurationOutput() GroupingConfigurationOutput
	ToGroupingConfigurationOutputWithContext(context.Context) GroupingConfigurationOutput
}

// Grouping configuration property bag.
type GroupingConfigurationArgs struct {
	// Grouping enabled
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// A list of alert details to group by (when matchingMethod is Selected)
	GroupByAlertDetails pulumi.StringArrayInput `pulumi:"groupByAlertDetails"`
	// A list of custom details keys to group by (when matchingMethod is Selected). Only keys defined in the current alert rule may be used.
	GroupByCustomDetails pulumi.StringArrayInput `pulumi:"groupByCustomDetails"`
	// A list of entity types to group by (when matchingMethod is Selected). Only entities defined in the current alert rule may be used.
	GroupByEntities pulumi.StringArrayInput `pulumi:"groupByEntities"`
	// Limit the group to alerts created within the lookback duration (in ISO 8601 duration format)
	LookbackDuration pulumi.StringInput `pulumi:"lookbackDuration"`
	// Grouping matching method. When method is Selected at least one of groupByEntities, groupByAlertDetails, groupByCustomDetails must be provided and not empty.
	MatchingMethod pulumi.StringInput `pulumi:"matchingMethod"`
	// Re-open closed matching incidents
	ReopenClosedIncident pulumi.BoolInput `pulumi:"reopenClosedIncident"`
}

func (GroupingConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupingConfiguration)(nil)).Elem()
}

func (i GroupingConfigurationArgs) ToGroupingConfigurationOutput() GroupingConfigurationOutput {
	return i.ToGroupingConfigurationOutputWithContext(context.Background())
}

func (i GroupingConfigurationArgs) ToGroupingConfigurationOutputWithContext(ctx context.Context) GroupingConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupingConfigurationOutput)
}

func (i GroupingConfigurationArgs) ToGroupingConfigurationPtrOutput() GroupingConfigurationPtrOutput {
	return i.ToGroupingConfigurationPtrOutputWithContext(context.Background())
}

func (i GroupingConfigurationArgs) ToGroupingConfigurationPtrOutputWithContext(ctx context.Context) GroupingConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupingConfigurationOutput).ToGroupingConfigurationPtrOutputWithContext(ctx)
}

// GroupingConfigurationPtrInput is an input type that accepts GroupingConfigurationArgs, GroupingConfigurationPtr and GroupingConfigurationPtrOutput values.
// You can construct a concrete instance of `GroupingConfigurationPtrInput` via:
//
//	        GroupingConfigurationArgs{...}
//
//	or:
//
//	        nil
type GroupingConfigurationPtrInput interface {
	pulumi.Input

	ToGroupingConfigurationPtrOutput() GroupingConfigurationPtrOutput
	ToGroupingConfigurationPtrOutputWithContext(context.Context) GroupingConfigurationPtrOutput
}

type groupingConfigurationPtrType GroupingConfigurationArgs

func GroupingConfigurationPtr(v *GroupingConfigurationArgs) GroupingConfigurationPtrInput {
	return (*groupingConfigurationPtrType)(v)
}

func (*groupingConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GroupingConfiguration)(nil)).Elem()
}

func (i *groupingConfigurationPtrType) ToGroupingConfigurationPtrOutput() GroupingConfigurationPtrOutput {
	return i.ToGroupingConfigurationPtrOutputWithContext(context.Background())
}

func (i *groupingConfigurationPtrType) ToGroupingConfigurationPtrOutputWithContext(ctx context.Context) GroupingConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupingConfigurationPtrOutput)
}

// Grouping configuration property bag.
type GroupingConfigurationOutput struct{ *pulumi.OutputState }

func (GroupingConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupingConfiguration)(nil)).Elem()
}

func (o GroupingConfigurationOutput) ToGroupingConfigurationOutput() GroupingConfigurationOutput {
	return o
}

func (o GroupingConfigurationOutput) ToGroupingConfigurationOutputWithContext(ctx context.Context) GroupingConfigurationOutput {
	return o
}

func (o GroupingConfigurationOutput) ToGroupingConfigurationPtrOutput() GroupingConfigurationPtrOutput {
	return o.ToGroupingConfigurationPtrOutputWithContext(context.Background())
}

func (o GroupingConfigurationOutput) ToGroupingConfigurationPtrOutputWithContext(ctx context.Context) GroupingConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GroupingConfiguration) *GroupingConfiguration {
		return &v
	}).(GroupingConfigurationPtrOutput)
}

// Grouping enabled
func (o GroupingConfigurationOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GroupingConfiguration) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// A list of alert details to group by (when matchingMethod is Selected)
func (o GroupingConfigurationOutput) GroupByAlertDetails() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GroupingConfiguration) []string { return v.GroupByAlertDetails }).(pulumi.StringArrayOutput)
}

// A list of custom details keys to group by (when matchingMethod is Selected). Only keys defined in the current alert rule may be used.
func (o GroupingConfigurationOutput) GroupByCustomDetails() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GroupingConfiguration) []string { return v.GroupByCustomDetails }).(pulumi.StringArrayOutput)
}

// A list of entity types to group by (when matchingMethod is Selected). Only entities defined in the current alert rule may be used.
func (o GroupingConfigurationOutput) GroupByEntities() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GroupingConfiguration) []string { return v.GroupByEntities }).(pulumi.StringArrayOutput)
}

// Limit the group to alerts created within the lookback duration (in ISO 8601 duration format)
func (o GroupingConfigurationOutput) LookbackDuration() pulumi.StringOutput {
	return o.ApplyT(func(v GroupingConfiguration) string { return v.LookbackDuration }).(pulumi.StringOutput)
}

// Grouping matching method. When method is Selected at least one of groupByEntities, groupByAlertDetails, groupByCustomDetails must be provided and not empty.
func (o GroupingConfigurationOutput) MatchingMethod() pulumi.StringOutput {
	return o.ApplyT(func(v GroupingConfiguration) string { return v.MatchingMethod }).(pulumi.StringOutput)
}

// Re-open closed matching incidents
func (o GroupingConfigurationOutput) ReopenClosedIncident() pulumi.BoolOutput {
	return o.ApplyT(func(v GroupingConfiguration) bool { return v.ReopenClosedIncident }).(pulumi.BoolOutput)
}

type GroupingConfigurationPtrOutput struct{ *pulumi.OutputState }

func (GroupingConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GroupingConfiguration)(nil)).Elem()
}

func (o GroupingConfigurationPtrOutput) ToGroupingConfigurationPtrOutput() GroupingConfigurationPtrOutput {
	return o
}

func (o GroupingConfigurationPtrOutput) ToGroupingConfigurationPtrOutputWithContext(ctx context.Context) GroupingConfigurationPtrOutput {
	return o
}

func (o GroupingConfigurationPtrOutput) Elem() GroupingConfigurationOutput {
	return o.ApplyT(func(v *GroupingConfiguration) GroupingConfiguration {
		if v != nil {
			return *v
		}
		var ret GroupingConfiguration
		return ret
	}).(GroupingConfigurationOutput)
}

// Grouping enabled
func (o GroupingConfigurationPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GroupingConfiguration) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// A list of alert details to group by (when matchingMethod is Selected)
func (o GroupingConfigurationPtrOutput) GroupByAlertDetails() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GroupingConfiguration) []string {
		if v == nil {
			return nil
		}
		return v.GroupByAlertDetails
	}).(pulumi.StringArrayOutput)
}

// A list of custom details keys to group by (when matchingMethod is Selected). Only keys defined in the current alert rule may be used.
func (o GroupingConfigurationPtrOutput) GroupByCustomDetails() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GroupingConfiguration) []string {
		if v == nil {
			return nil
		}
		return v.GroupByCustomDetails
	}).(pulumi.StringArrayOutput)
}

// A list of entity types to group by (when matchingMethod is Selected). Only entities defined in the current alert rule may be used.
func (o GroupingConfigurationPtrOutput) GroupByEntities() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GroupingConfiguration) []string {
		if v == nil {
			return nil
		}
		return v.GroupByEntities
	}).(pulumi.StringArrayOutput)
}

// Limit the group to alerts created within the lookback duration (in ISO 8601 duration format)
func (o GroupingConfigurationPtrOutput) LookbackDuration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GroupingConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.LookbackDuration
	}).(pulumi.StringPtrOutput)
}

// Grouping matching method. When method is Selected at least one of groupByEntities, groupByAlertDetails, groupByCustomDetails must be provided and not empty.
func (o GroupingConfigurationPtrOutput) MatchingMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GroupingConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.MatchingMethod
	}).(pulumi.StringPtrOutput)
}

// Re-open closed matching incidents
func (o GroupingConfigurationPtrOutput) ReopenClosedIncident() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GroupingConfiguration) *bool {
		if v == nil {
			return nil
		}
		return &v.ReopenClosedIncident
	}).(pulumi.BoolPtrOutput)
}

// Grouping configuration property bag.
type GroupingConfigurationResponse struct {
	// Grouping enabled
	Enabled bool `pulumi:"enabled"`
	// A list of alert details to group by (when matchingMethod is Selected)
	GroupByAlertDetails []string `pulumi:"groupByAlertDetails"`
	// A list of custom details keys to group by (when matchingMethod is Selected). Only keys defined in the current alert rule may be used.
	GroupByCustomDetails []string `pulumi:"groupByCustomDetails"`
	// A list of entity types to group by (when matchingMethod is Selected). Only entities defined in the current alert rule may be used.
	GroupByEntities []string `pulumi:"groupByEntities"`
	// Limit the group to alerts created within the lookback duration (in ISO 8601 duration format)
	LookbackDuration string `pulumi:"lookbackDuration"`
	// Grouping matching method. When method is Selected at least one of groupByEntities, groupByAlertDetails, groupByCustomDetails must be provided and not empty.
	MatchingMethod string `pulumi:"matchingMethod"`
	// Re-open closed matching incidents
	ReopenClosedIncident bool `pulumi:"reopenClosedIncident"`
}

// Grouping configuration property bag.
type GroupingConfigurationResponseOutput struct{ *pulumi.OutputState }

func (GroupingConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupingConfigurationResponse)(nil)).Elem()
}

func (o GroupingConfigurationResponseOutput) ToGroupingConfigurationResponseOutput() GroupingConfigurationResponseOutput {
	return o
}

func (o GroupingConfigurationResponseOutput) ToGroupingConfigurationResponseOutputWithContext(ctx context.Context) GroupingConfigurationResponseOutput {
	return o
}

// Grouping enabled
func (o GroupingConfigurationResponseOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GroupingConfigurationResponse) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// A list of alert details to group by (when matchingMethod is Selected)
func (o GroupingConfigurationResponseOutput) GroupByAlertDetails() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GroupingConfigurationResponse) []string { return v.GroupByAlertDetails }).(pulumi.StringArrayOutput)
}

// A list of custom details keys to group by (when matchingMethod is Selected). Only keys defined in the current alert rule may be used.
func (o GroupingConfigurationResponseOutput) GroupByCustomDetails() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GroupingConfigurationResponse) []string { return v.GroupByCustomDetails }).(pulumi.StringArrayOutput)
}

// A list of entity types to group by (when matchingMethod is Selected). Only entities defined in the current alert rule may be used.
func (o GroupingConfigurationResponseOutput) GroupByEntities() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GroupingConfigurationResponse) []string { return v.GroupByEntities }).(pulumi.StringArrayOutput)
}

// Limit the group to alerts created within the lookback duration (in ISO 8601 duration format)
func (o GroupingConfigurationResponseOutput) LookbackDuration() pulumi.StringOutput {
	return o.ApplyT(func(v GroupingConfigurationResponse) string { return v.LookbackDuration }).(pulumi.StringOutput)
}

// Grouping matching method. When method is Selected at least one of groupByEntities, groupByAlertDetails, groupByCustomDetails must be provided and not empty.
func (o GroupingConfigurationResponseOutput) MatchingMethod() pulumi.StringOutput {
	return o.ApplyT(func(v GroupingConfigurationResponse) string { return v.MatchingMethod }).(pulumi.StringOutput)
}

// Re-open closed matching incidents
func (o GroupingConfigurationResponseOutput) ReopenClosedIncident() pulumi.BoolOutput {
	return o.ApplyT(func(v GroupingConfigurationResponse) bool { return v.ReopenClosedIncident }).(pulumi.BoolOutput)
}

type GroupingConfigurationResponsePtrOutput struct{ *pulumi.OutputState }

func (GroupingConfigurationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GroupingConfigurationResponse)(nil)).Elem()
}

func (o GroupingConfigurationResponsePtrOutput) ToGroupingConfigurationResponsePtrOutput() GroupingConfigurationResponsePtrOutput {
	return o
}

func (o GroupingConfigurationResponsePtrOutput) ToGroupingConfigurationResponsePtrOutputWithContext(ctx context.Context) GroupingConfigurationResponsePtrOutput {
	return o
}

func (o GroupingConfigurationResponsePtrOutput) Elem() GroupingConfigurationResponseOutput {
	return o.ApplyT(func(v *GroupingConfigurationResponse) GroupingConfigurationResponse {
		if v != nil {
			return *v
		}
		var ret GroupingConfigurationResponse
		return ret
	}).(GroupingConfigurationResponseOutput)
}

// Grouping enabled
func (o GroupingConfigurationResponsePtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GroupingConfigurationResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// A list of alert details to group by (when matchingMethod is Selected)
func (o GroupingConfigurationResponsePtrOutput) GroupByAlertDetails() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GroupingConfigurationResponse) []string {
		if v == nil {
			return nil
		}
		return v.GroupByAlertDetails
	}).(pulumi.StringArrayOutput)
}

// A list of custom details keys to group by (when matchingMethod is Selected). Only keys defined in the current alert rule may be used.
func (o GroupingConfigurationResponsePtrOutput) GroupByCustomDetails() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GroupingConfigurationResponse) []string {
		if v == nil {
			return nil
		}
		return v.GroupByCustomDetails
	}).(pulumi.StringArrayOutput)
}

// A list of entity types to group by (when matchingMethod is Selected). Only entities defined in the current alert rule may be used.
func (o GroupingConfigurationResponsePtrOutput) GroupByEntities() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GroupingConfigurationResponse) []string {
		if v == nil {
			return nil
		}
		return v.GroupByEntities
	}).(pulumi.StringArrayOutput)
}

// Limit the group to alerts created within the lookback duration (in ISO 8601 duration format)
func (o GroupingConfigurationResponsePtrOutput) LookbackDuration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GroupingConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return &v.LookbackDuration
	}).(pulumi.StringPtrOutput)
}

// Grouping matching method. When method is Selected at least one of groupByEntities, groupByAlertDetails, groupByCustomDetails must be provided and not empty.
func (o GroupingConfigurationResponsePtrOutput) MatchingMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GroupingConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return &v.MatchingMethod
	}).(pulumi.StringPtrOutput)
}

// Re-open closed matching incidents
func (o GroupingConfigurationResponsePtrOutput) ReopenClosedIncident() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GroupingConfigurationResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.ReopenClosedIncident
	}).(pulumi.BoolPtrOutput)
}

// Incident additional data property bag.
type IncidentAdditionalDataResponse struct {
	// List of product names of alerts in the incident
	AlertProductNames []string `pulumi:"alertProductNames"`
	// The number of alerts in the incident
	AlertsCount int `pulumi:"alertsCount"`
	// The number of bookmarks in the incident
	BookmarksCount int `pulumi:"bookmarksCount"`
	// The number of comments in the incident
	CommentsCount int `pulumi:"commentsCount"`
	// The provider incident url to the incident in Microsoft 365 Defender portal
	ProviderIncidentUrl string `pulumi:"providerIncidentUrl"`
	// The tactics associated with incident
	Tactics []string `pulumi:"tactics"`
}

// Incident additional data property bag.
type IncidentAdditionalDataResponseOutput struct{ *pulumi.OutputState }

func (IncidentAdditionalDataResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IncidentAdditionalDataResponse)(nil)).Elem()
}

func (o IncidentAdditionalDataResponseOutput) ToIncidentAdditionalDataResponseOutput() IncidentAdditionalDataResponseOutput {
	return o
}

func (o IncidentAdditionalDataResponseOutput) ToIncidentAdditionalDataResponseOutputWithContext(ctx context.Context) IncidentAdditionalDataResponseOutput {
	return o
}

// List of product names of alerts in the incident
func (o IncidentAdditionalDataResponseOutput) AlertProductNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IncidentAdditionalDataResponse) []string { return v.AlertProductNames }).(pulumi.StringArrayOutput)
}

// The number of alerts in the incident
func (o IncidentAdditionalDataResponseOutput) AlertsCount() pulumi.IntOutput {
	return o.ApplyT(func(v IncidentAdditionalDataResponse) int { return v.AlertsCount }).(pulumi.IntOutput)
}

// The number of bookmarks in the incident
func (o IncidentAdditionalDataResponseOutput) BookmarksCount() pulumi.IntOutput {
	return o.ApplyT(func(v IncidentAdditionalDataResponse) int { return v.BookmarksCount }).(pulumi.IntOutput)
}

// The number of comments in the incident
func (o IncidentAdditionalDataResponseOutput) CommentsCount() pulumi.IntOutput {
	return o.ApplyT(func(v IncidentAdditionalDataResponse) int { return v.CommentsCount }).(pulumi.IntOutput)
}

// The provider incident url to the incident in Microsoft 365 Defender portal
func (o IncidentAdditionalDataResponseOutput) ProviderIncidentUrl() pulumi.StringOutput {
	return o.ApplyT(func(v IncidentAdditionalDataResponse) string { return v.ProviderIncidentUrl }).(pulumi.StringOutput)
}

// The tactics associated with incident
func (o IncidentAdditionalDataResponseOutput) Tactics() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IncidentAdditionalDataResponse) []string { return v.Tactics }).(pulumi.StringArrayOutput)
}

// Incident Configuration property bag.
type IncidentConfiguration struct {
	// Create incidents from alerts triggered by this analytics rule
	CreateIncident bool `pulumi:"createIncident"`
	// Set how the alerts that are triggered by this analytics rule, are grouped into incidents
	GroupingConfiguration *GroupingConfiguration `pulumi:"groupingConfiguration"`
}

// IncidentConfigurationInput is an input type that accepts IncidentConfigurationArgs and IncidentConfigurationOutput values.
// You can construct a concrete instance of `IncidentConfigurationInput` via:
//
//	IncidentConfigurationArgs{...}
type IncidentConfigurationInput interface {
	pulumi.Input

	ToIncidentConfigurationOutput() IncidentConfigurationOutput
	ToIncidentConfigurationOutputWithContext(context.Context) IncidentConfigurationOutput
}

// Incident Configuration property bag.
type IncidentConfigurationArgs struct {
	// Create incidents from alerts triggered by this analytics rule
	CreateIncident pulumi.BoolInput `pulumi:"createIncident"`
	// Set how the alerts that are triggered by this analytics rule, are grouped into incidents
	GroupingConfiguration GroupingConfigurationPtrInput `pulumi:"groupingConfiguration"`
}

func (IncidentConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IncidentConfiguration)(nil)).Elem()
}

func (i IncidentConfigurationArgs) ToIncidentConfigurationOutput() IncidentConfigurationOutput {
	return i.ToIncidentConfigurationOutputWithContext(context.Background())
}

func (i IncidentConfigurationArgs) ToIncidentConfigurationOutputWithContext(ctx context.Context) IncidentConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IncidentConfigurationOutput)
}

func (i IncidentConfigurationArgs) ToIncidentConfigurationPtrOutput() IncidentConfigurationPtrOutput {
	return i.ToIncidentConfigurationPtrOutputWithContext(context.Background())
}

func (i IncidentConfigurationArgs) ToIncidentConfigurationPtrOutputWithContext(ctx context.Context) IncidentConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IncidentConfigurationOutput).ToIncidentConfigurationPtrOutputWithContext(ctx)
}

// IncidentConfigurationPtrInput is an input type that accepts IncidentConfigurationArgs, IncidentConfigurationPtr and IncidentConfigurationPtrOutput values.
// You can construct a concrete instance of `IncidentConfigurationPtrInput` via:
//
//	        IncidentConfigurationArgs{...}
//
//	or:
//
//	        nil
type IncidentConfigurationPtrInput interface {
	pulumi.Input

	ToIncidentConfigurationPtrOutput() IncidentConfigurationPtrOutput
	ToIncidentConfigurationPtrOutputWithContext(context.Context) IncidentConfigurationPtrOutput
}

type incidentConfigurationPtrType IncidentConfigurationArgs

func IncidentConfigurationPtr(v *IncidentConfigurationArgs) IncidentConfigurationPtrInput {
	return (*incidentConfigurationPtrType)(v)
}

func (*incidentConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IncidentConfiguration)(nil)).Elem()
}

func (i *incidentConfigurationPtrType) ToIncidentConfigurationPtrOutput() IncidentConfigurationPtrOutput {
	return i.ToIncidentConfigurationPtrOutputWithContext(context.Background())
}

func (i *incidentConfigurationPtrType) ToIncidentConfigurationPtrOutputWithContext(ctx context.Context) IncidentConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IncidentConfigurationPtrOutput)
}

// Incident Configuration property bag.
type IncidentConfigurationOutput struct{ *pulumi.OutputState }

func (IncidentConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IncidentConfiguration)(nil)).Elem()
}

func (o IncidentConfigurationOutput) ToIncidentConfigurationOutput() IncidentConfigurationOutput {
	return o
}

func (o IncidentConfigurationOutput) ToIncidentConfigurationOutputWithContext(ctx context.Context) IncidentConfigurationOutput {
	return o
}

func (o IncidentConfigurationOutput) ToIncidentConfigurationPtrOutput() IncidentConfigurationPtrOutput {
	return o.ToIncidentConfigurationPtrOutputWithContext(context.Background())
}

func (o IncidentConfigurationOutput) ToIncidentConfigurationPtrOutputWithContext(ctx context.Context) IncidentConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IncidentConfiguration) *IncidentConfiguration {
		return &v
	}).(IncidentConfigurationPtrOutput)
}

// Create incidents from alerts triggered by this analytics rule
func (o IncidentConfigurationOutput) CreateIncident() pulumi.BoolOutput {
	return o.ApplyT(func(v IncidentConfiguration) bool { return v.CreateIncident }).(pulumi.BoolOutput)
}

// Set how the alerts that are triggered by this analytics rule, are grouped into incidents
func (o IncidentConfigurationOutput) GroupingConfiguration() GroupingConfigurationPtrOutput {
	return o.ApplyT(func(v IncidentConfiguration) *GroupingConfiguration { return v.GroupingConfiguration }).(GroupingConfigurationPtrOutput)
}

type IncidentConfigurationPtrOutput struct{ *pulumi.OutputState }

func (IncidentConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IncidentConfiguration)(nil)).Elem()
}

func (o IncidentConfigurationPtrOutput) ToIncidentConfigurationPtrOutput() IncidentConfigurationPtrOutput {
	return o
}

func (o IncidentConfigurationPtrOutput) ToIncidentConfigurationPtrOutputWithContext(ctx context.Context) IncidentConfigurationPtrOutput {
	return o
}

func (o IncidentConfigurationPtrOutput) Elem() IncidentConfigurationOutput {
	return o.ApplyT(func(v *IncidentConfiguration) IncidentConfiguration {
		if v != nil {
			return *v
		}
		var ret IncidentConfiguration
		return ret
	}).(IncidentConfigurationOutput)
}

// Create incidents from alerts triggered by this analytics rule
func (o IncidentConfigurationPtrOutput) CreateIncident() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *IncidentConfiguration) *bool {
		if v == nil {
			return nil
		}
		return &v.CreateIncident
	}).(pulumi.BoolPtrOutput)
}

// Set how the alerts that are triggered by this analytics rule, are grouped into incidents
func (o IncidentConfigurationPtrOutput) GroupingConfiguration() GroupingConfigurationPtrOutput {
	return o.ApplyT(func(v *IncidentConfiguration) *GroupingConfiguration {
		if v == nil {
			return nil
		}
		return v.GroupingConfiguration
	}).(GroupingConfigurationPtrOutput)
}

// Incident Configuration property bag.
type IncidentConfigurationResponse struct {
	// Create incidents from alerts triggered by this analytics rule
	CreateIncident bool `pulumi:"createIncident"`
	// Set how the alerts that are triggered by this analytics rule, are grouped into incidents
	GroupingConfiguration *GroupingConfigurationResponse `pulumi:"groupingConfiguration"`
}

// Incident Configuration property bag.
type IncidentConfigurationResponseOutput struct{ *pulumi.OutputState }

func (IncidentConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IncidentConfigurationResponse)(nil)).Elem()
}

func (o IncidentConfigurationResponseOutput) ToIncidentConfigurationResponseOutput() IncidentConfigurationResponseOutput {
	return o
}

func (o IncidentConfigurationResponseOutput) ToIncidentConfigurationResponseOutputWithContext(ctx context.Context) IncidentConfigurationResponseOutput {
	return o
}

// Create incidents from alerts triggered by this analytics rule
func (o IncidentConfigurationResponseOutput) CreateIncident() pulumi.BoolOutput {
	return o.ApplyT(func(v IncidentConfigurationResponse) bool { return v.CreateIncident }).(pulumi.BoolOutput)
}

// Set how the alerts that are triggered by this analytics rule, are grouped into incidents
func (o IncidentConfigurationResponseOutput) GroupingConfiguration() GroupingConfigurationResponsePtrOutput {
	return o.ApplyT(func(v IncidentConfigurationResponse) *GroupingConfigurationResponse { return v.GroupingConfiguration }).(GroupingConfigurationResponsePtrOutput)
}

type IncidentConfigurationResponsePtrOutput struct{ *pulumi.OutputState }

func (IncidentConfigurationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IncidentConfigurationResponse)(nil)).Elem()
}

func (o IncidentConfigurationResponsePtrOutput) ToIncidentConfigurationResponsePtrOutput() IncidentConfigurationResponsePtrOutput {
	return o
}

func (o IncidentConfigurationResponsePtrOutput) ToIncidentConfigurationResponsePtrOutputWithContext(ctx context.Context) IncidentConfigurationResponsePtrOutput {
	return o
}

func (o IncidentConfigurationResponsePtrOutput) Elem() IncidentConfigurationResponseOutput {
	return o.ApplyT(func(v *IncidentConfigurationResponse) IncidentConfigurationResponse {
		if v != nil {
			return *v
		}
		var ret IncidentConfigurationResponse
		return ret
	}).(IncidentConfigurationResponseOutput)
}

// Create incidents from alerts triggered by this analytics rule
func (o IncidentConfigurationResponsePtrOutput) CreateIncident() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *IncidentConfigurationResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.CreateIncident
	}).(pulumi.BoolPtrOutput)
}

// Set how the alerts that are triggered by this analytics rule, are grouped into incidents
func (o IncidentConfigurationResponsePtrOutput) GroupingConfiguration() GroupingConfigurationResponsePtrOutput {
	return o.ApplyT(func(v *IncidentConfigurationResponse) *GroupingConfigurationResponse {
		if v == nil {
			return nil
		}
		return v.GroupingConfiguration
	}).(GroupingConfigurationResponsePtrOutput)
}

// Describes related incident information for the bookmark
type IncidentInfo struct {
	// Incident Id
	IncidentId *string `pulumi:"incidentId"`
	// Relation Name
	RelationName *string `pulumi:"relationName"`
	// The severity of the incident
	Severity *string `pulumi:"severity"`
	// The title of the incident
	Title *string `pulumi:"title"`
}

// IncidentInfoInput is an input type that accepts IncidentInfoArgs and IncidentInfoOutput values.
// You can construct a concrete instance of `IncidentInfoInput` via:
//
//	IncidentInfoArgs{...}
type IncidentInfoInput interface {
	pulumi.Input

	ToIncidentInfoOutput() IncidentInfoOutput
	ToIncidentInfoOutputWithContext(context.Context) IncidentInfoOutput
}

// Describes related incident information for the bookmark
type IncidentInfoArgs struct {
	// Incident Id
	IncidentId pulumi.StringPtrInput `pulumi:"incidentId"`
	// Relation Name
	RelationName pulumi.StringPtrInput `pulumi:"relationName"`
	// The severity of the incident
	Severity pulumi.StringPtrInput `pulumi:"severity"`
	// The title of the incident
	Title pulumi.StringPtrInput `pulumi:"title"`
}

func (IncidentInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IncidentInfo)(nil)).Elem()
}

func (i IncidentInfoArgs) ToIncidentInfoOutput() IncidentInfoOutput {
	return i.ToIncidentInfoOutputWithContext(context.Background())
}

func (i IncidentInfoArgs) ToIncidentInfoOutputWithContext(ctx context.Context) IncidentInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IncidentInfoOutput)
}

func (i IncidentInfoArgs) ToIncidentInfoPtrOutput() IncidentInfoPtrOutput {
	return i.ToIncidentInfoPtrOutputWithContext(context.Background())
}

func (i IncidentInfoArgs) ToIncidentInfoPtrOutputWithContext(ctx context.Context) IncidentInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IncidentInfoOutput).ToIncidentInfoPtrOutputWithContext(ctx)
}

// IncidentInfoPtrInput is an input type that accepts IncidentInfoArgs, IncidentInfoPtr and IncidentInfoPtrOutput values.
// You can construct a concrete instance of `IncidentInfoPtrInput` via:
//
//	        IncidentInfoArgs{...}
//
//	or:
//
//	        nil
type IncidentInfoPtrInput interface {
	pulumi.Input

	ToIncidentInfoPtrOutput() IncidentInfoPtrOutput
	ToIncidentInfoPtrOutputWithContext(context.Context) IncidentInfoPtrOutput
}

type incidentInfoPtrType IncidentInfoArgs

func IncidentInfoPtr(v *IncidentInfoArgs) IncidentInfoPtrInput {
	return (*incidentInfoPtrType)(v)
}

func (*incidentInfoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IncidentInfo)(nil)).Elem()
}

func (i *incidentInfoPtrType) ToIncidentInfoPtrOutput() IncidentInfoPtrOutput {
	return i.ToIncidentInfoPtrOutputWithContext(context.Background())
}

func (i *incidentInfoPtrType) ToIncidentInfoPtrOutputWithContext(ctx context.Context) IncidentInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IncidentInfoPtrOutput)
}

// Describes related incident information for the bookmark
type IncidentInfoOutput struct{ *pulumi.OutputState }

func (IncidentInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IncidentInfo)(nil)).Elem()
}

func (o IncidentInfoOutput) ToIncidentInfoOutput() IncidentInfoOutput {
	return o
}

func (o IncidentInfoOutput) ToIncidentInfoOutputWithContext(ctx context.Context) IncidentInfoOutput {
	return o
}

func (o IncidentInfoOutput) ToIncidentInfoPtrOutput() IncidentInfoPtrOutput {
	return o.ToIncidentInfoPtrOutputWithContext(context.Background())
}

func (o IncidentInfoOutput) ToIncidentInfoPtrOutputWithContext(ctx context.Context) IncidentInfoPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IncidentInfo) *IncidentInfo {
		return &v
	}).(IncidentInfoPtrOutput)
}

// Incident Id
func (o IncidentInfoOutput) IncidentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IncidentInfo) *string { return v.IncidentId }).(pulumi.StringPtrOutput)
}

// Relation Name
func (o IncidentInfoOutput) RelationName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IncidentInfo) *string { return v.RelationName }).(pulumi.StringPtrOutput)
}

// The severity of the incident
func (o IncidentInfoOutput) Severity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IncidentInfo) *string { return v.Severity }).(pulumi.StringPtrOutput)
}

// The title of the incident
func (o IncidentInfoOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IncidentInfo) *string { return v.Title }).(pulumi.StringPtrOutput)
}

type IncidentInfoPtrOutput struct{ *pulumi.OutputState }

func (IncidentInfoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IncidentInfo)(nil)).Elem()
}

func (o IncidentInfoPtrOutput) ToIncidentInfoPtrOutput() IncidentInfoPtrOutput {
	return o
}

func (o IncidentInfoPtrOutput) ToIncidentInfoPtrOutputWithContext(ctx context.Context) IncidentInfoPtrOutput {
	return o
}

func (o IncidentInfoPtrOutput) Elem() IncidentInfoOutput {
	return o.ApplyT(func(v *IncidentInfo) IncidentInfo {
		if v != nil {
			return *v
		}
		var ret IncidentInfo
		return ret
	}).(IncidentInfoOutput)
}

// Incident Id
func (o IncidentInfoPtrOutput) IncidentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IncidentInfo) *string {
		if v == nil {
			return nil
		}
		return v.IncidentId
	}).(pulumi.StringPtrOutput)
}

// Relation Name
func (o IncidentInfoPtrOutput) RelationName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IncidentInfo) *string {
		if v == nil {
			return nil
		}
		return v.RelationName
	}).(pulumi.StringPtrOutput)
}

// The severity of the incident
func (o IncidentInfoPtrOutput) Severity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IncidentInfo) *string {
		if v == nil {
			return nil
		}
		return v.Severity
	}).(pulumi.StringPtrOutput)
}

// The title of the incident
func (o IncidentInfoPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IncidentInfo) *string {
		if v == nil {
			return nil
		}
		return v.Title
	}).(pulumi.StringPtrOutput)
}

// Describes related incident information for the bookmark
type IncidentInfoResponse struct {
	// Incident Id
	IncidentId *string `pulumi:"incidentId"`
	// Relation Name
	RelationName *string `pulumi:"relationName"`
	// The severity of the incident
	Severity *string `pulumi:"severity"`
	// The title of the incident
	Title *string `pulumi:"title"`
}

// Describes related incident information for the bookmark
type IncidentInfoResponseOutput struct{ *pulumi.OutputState }

func (IncidentInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IncidentInfoResponse)(nil)).Elem()
}

func (o IncidentInfoResponseOutput) ToIncidentInfoResponseOutput() IncidentInfoResponseOutput {
	return o
}

func (o IncidentInfoResponseOutput) ToIncidentInfoResponseOutputWithContext(ctx context.Context) IncidentInfoResponseOutput {
	return o
}

// Incident Id
func (o IncidentInfoResponseOutput) IncidentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IncidentInfoResponse) *string { return v.IncidentId }).(pulumi.StringPtrOutput)
}

// Relation Name
func (o IncidentInfoResponseOutput) RelationName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IncidentInfoResponse) *string { return v.RelationName }).(pulumi.StringPtrOutput)
}

// The severity of the incident
func (o IncidentInfoResponseOutput) Severity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IncidentInfoResponse) *string { return v.Severity }).(pulumi.StringPtrOutput)
}

// The title of the incident
func (o IncidentInfoResponseOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IncidentInfoResponse) *string { return v.Title }).(pulumi.StringPtrOutput)
}

type IncidentInfoResponsePtrOutput struct{ *pulumi.OutputState }

func (IncidentInfoResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IncidentInfoResponse)(nil)).Elem()
}

func (o IncidentInfoResponsePtrOutput) ToIncidentInfoResponsePtrOutput() IncidentInfoResponsePtrOutput {
	return o
}

func (o IncidentInfoResponsePtrOutput) ToIncidentInfoResponsePtrOutputWithContext(ctx context.Context) IncidentInfoResponsePtrOutput {
	return o
}

func (o IncidentInfoResponsePtrOutput) Elem() IncidentInfoResponseOutput {
	return o.ApplyT(func(v *IncidentInfoResponse) IncidentInfoResponse {
		if v != nil {
			return *v
		}
		var ret IncidentInfoResponse
		return ret
	}).(IncidentInfoResponseOutput)
}

// Incident Id
func (o IncidentInfoResponsePtrOutput) IncidentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IncidentInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.IncidentId
	}).(pulumi.StringPtrOutput)
}

// Relation Name
func (o IncidentInfoResponsePtrOutput) RelationName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IncidentInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.RelationName
	}).(pulumi.StringPtrOutput)
}

// The severity of the incident
func (o IncidentInfoResponsePtrOutput) Severity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IncidentInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.Severity
	}).(pulumi.StringPtrOutput)
}

// The title of the incident
func (o IncidentInfoResponsePtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IncidentInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.Title
	}).(pulumi.StringPtrOutput)
}

// Represents an incident label
type IncidentLabel struct {
	// The name of the label
	LabelName string `pulumi:"labelName"`
}

// IncidentLabelInput is an input type that accepts IncidentLabelArgs and IncidentLabelOutput values.
// You can construct a concrete instance of `IncidentLabelInput` via:
//
//	IncidentLabelArgs{...}
type IncidentLabelInput interface {
	pulumi.Input

	ToIncidentLabelOutput() IncidentLabelOutput
	ToIncidentLabelOutputWithContext(context.Context) IncidentLabelOutput
}

// Represents an incident label
type IncidentLabelArgs struct {
	// The name of the label
	LabelName pulumi.StringInput `pulumi:"labelName"`
}

func (IncidentLabelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IncidentLabel)(nil)).Elem()
}

func (i IncidentLabelArgs) ToIncidentLabelOutput() IncidentLabelOutput {
	return i.ToIncidentLabelOutputWithContext(context.Background())
}

func (i IncidentLabelArgs) ToIncidentLabelOutputWithContext(ctx context.Context) IncidentLabelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IncidentLabelOutput)
}

// IncidentLabelArrayInput is an input type that accepts IncidentLabelArray and IncidentLabelArrayOutput values.
// You can construct a concrete instance of `IncidentLabelArrayInput` via:
//
//	IncidentLabelArray{ IncidentLabelArgs{...} }
type IncidentLabelArrayInput interface {
	pulumi.Input

	ToIncidentLabelArrayOutput() IncidentLabelArrayOutput
	ToIncidentLabelArrayOutputWithContext(context.Context) IncidentLabelArrayOutput
}

type IncidentLabelArray []IncidentLabelInput

func (IncidentLabelArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IncidentLabel)(nil)).Elem()
}

func (i IncidentLabelArray) ToIncidentLabelArrayOutput() IncidentLabelArrayOutput {
	return i.ToIncidentLabelArrayOutputWithContext(context.Background())
}

func (i IncidentLabelArray) ToIncidentLabelArrayOutputWithContext(ctx context.Context) IncidentLabelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IncidentLabelArrayOutput)
}

// Represents an incident label
type IncidentLabelOutput struct{ *pulumi.OutputState }

func (IncidentLabelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IncidentLabel)(nil)).Elem()
}

func (o IncidentLabelOutput) ToIncidentLabelOutput() IncidentLabelOutput {
	return o
}

func (o IncidentLabelOutput) ToIncidentLabelOutputWithContext(ctx context.Context) IncidentLabelOutput {
	return o
}

// The name of the label
func (o IncidentLabelOutput) LabelName() pulumi.StringOutput {
	return o.ApplyT(func(v IncidentLabel) string { return v.LabelName }).(pulumi.StringOutput)
}

type IncidentLabelArrayOutput struct{ *pulumi.OutputState }

func (IncidentLabelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IncidentLabel)(nil)).Elem()
}

func (o IncidentLabelArrayOutput) ToIncidentLabelArrayOutput() IncidentLabelArrayOutput {
	return o
}

func (o IncidentLabelArrayOutput) ToIncidentLabelArrayOutputWithContext(ctx context.Context) IncidentLabelArrayOutput {
	return o
}

func (o IncidentLabelArrayOutput) Index(i pulumi.IntInput) IncidentLabelOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IncidentLabel {
		return vs[0].([]IncidentLabel)[vs[1].(int)]
	}).(IncidentLabelOutput)
}

// Represents an incident label
type IncidentLabelResponse struct {
	// The name of the label
	LabelName string `pulumi:"labelName"`
	// The type of the label
	LabelType string `pulumi:"labelType"`
}

// Represents an incident label
type IncidentLabelResponseOutput struct{ *pulumi.OutputState }

func (IncidentLabelResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IncidentLabelResponse)(nil)).Elem()
}

func (o IncidentLabelResponseOutput) ToIncidentLabelResponseOutput() IncidentLabelResponseOutput {
	return o
}

func (o IncidentLabelResponseOutput) ToIncidentLabelResponseOutputWithContext(ctx context.Context) IncidentLabelResponseOutput {
	return o
}

// The name of the label
func (o IncidentLabelResponseOutput) LabelName() pulumi.StringOutput {
	return o.ApplyT(func(v IncidentLabelResponse) string { return v.LabelName }).(pulumi.StringOutput)
}

// The type of the label
func (o IncidentLabelResponseOutput) LabelType() pulumi.StringOutput {
	return o.ApplyT(func(v IncidentLabelResponse) string { return v.LabelType }).(pulumi.StringOutput)
}

type IncidentLabelResponseArrayOutput struct{ *pulumi.OutputState }

func (IncidentLabelResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IncidentLabelResponse)(nil)).Elem()
}

func (o IncidentLabelResponseArrayOutput) ToIncidentLabelResponseArrayOutput() IncidentLabelResponseArrayOutput {
	return o
}

func (o IncidentLabelResponseArrayOutput) ToIncidentLabelResponseArrayOutputWithContext(ctx context.Context) IncidentLabelResponseArrayOutput {
	return o
}

func (o IncidentLabelResponseArrayOutput) Index(i pulumi.IntInput) IncidentLabelResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IncidentLabelResponse {
		return vs[0].([]IncidentLabelResponse)[vs[1].(int)]
	}).(IncidentLabelResponseOutput)
}

// Information on the user an incident is assigned to
type IncidentOwnerInfo struct {
	// The name of the user the incident is assigned to.
	AssignedTo *string `pulumi:"assignedTo"`
	// The email of the user the incident is assigned to.
	Email *string `pulumi:"email"`
	// The object id of the user the incident is assigned to.
	ObjectId *string `pulumi:"objectId"`
	// The type of the owner the incident is assigned to.
	OwnerType *string `pulumi:"ownerType"`
	// The user principal name of the user the incident is assigned to.
	UserPrincipalName *string `pulumi:"userPrincipalName"`
}

// IncidentOwnerInfoInput is an input type that accepts IncidentOwnerInfoArgs and IncidentOwnerInfoOutput values.
// You can construct a concrete instance of `IncidentOwnerInfoInput` via:
//
//	IncidentOwnerInfoArgs{...}
type IncidentOwnerInfoInput interface {
	pulumi.Input

	ToIncidentOwnerInfoOutput() IncidentOwnerInfoOutput
	ToIncidentOwnerInfoOutputWithContext(context.Context) IncidentOwnerInfoOutput
}

// Information on the user an incident is assigned to
type IncidentOwnerInfoArgs struct {
	// The name of the user the incident is assigned to.
	AssignedTo pulumi.StringPtrInput `pulumi:"assignedTo"`
	// The email of the user the incident is assigned to.
	Email pulumi.StringPtrInput `pulumi:"email"`
	// The object id of the user the incident is assigned to.
	ObjectId pulumi.StringPtrInput `pulumi:"objectId"`
	// The type of the owner the incident is assigned to.
	OwnerType pulumi.StringPtrInput `pulumi:"ownerType"`
	// The user principal name of the user the incident is assigned to.
	UserPrincipalName pulumi.StringPtrInput `pulumi:"userPrincipalName"`
}

func (IncidentOwnerInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IncidentOwnerInfo)(nil)).Elem()
}

func (i IncidentOwnerInfoArgs) ToIncidentOwnerInfoOutput() IncidentOwnerInfoOutput {
	return i.ToIncidentOwnerInfoOutputWithContext(context.Background())
}

func (i IncidentOwnerInfoArgs) ToIncidentOwnerInfoOutputWithContext(ctx context.Context) IncidentOwnerInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IncidentOwnerInfoOutput)
}

func (i IncidentOwnerInfoArgs) ToIncidentOwnerInfoPtrOutput() IncidentOwnerInfoPtrOutput {
	return i.ToIncidentOwnerInfoPtrOutputWithContext(context.Background())
}

func (i IncidentOwnerInfoArgs) ToIncidentOwnerInfoPtrOutputWithContext(ctx context.Context) IncidentOwnerInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IncidentOwnerInfoOutput).ToIncidentOwnerInfoPtrOutputWithContext(ctx)
}

// IncidentOwnerInfoPtrInput is an input type that accepts IncidentOwnerInfoArgs, IncidentOwnerInfoPtr and IncidentOwnerInfoPtrOutput values.
// You can construct a concrete instance of `IncidentOwnerInfoPtrInput` via:
//
//	        IncidentOwnerInfoArgs{...}
//
//	or:
//
//	        nil
type IncidentOwnerInfoPtrInput interface {
	pulumi.Input

	ToIncidentOwnerInfoPtrOutput() IncidentOwnerInfoPtrOutput
	ToIncidentOwnerInfoPtrOutputWithContext(context.Context) IncidentOwnerInfoPtrOutput
}

type incidentOwnerInfoPtrType IncidentOwnerInfoArgs

func IncidentOwnerInfoPtr(v *IncidentOwnerInfoArgs) IncidentOwnerInfoPtrInput {
	return (*incidentOwnerInfoPtrType)(v)
}

func (*incidentOwnerInfoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IncidentOwnerInfo)(nil)).Elem()
}

func (i *incidentOwnerInfoPtrType) ToIncidentOwnerInfoPtrOutput() IncidentOwnerInfoPtrOutput {
	return i.ToIncidentOwnerInfoPtrOutputWithContext(context.Background())
}

func (i *incidentOwnerInfoPtrType) ToIncidentOwnerInfoPtrOutputWithContext(ctx context.Context) IncidentOwnerInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IncidentOwnerInfoPtrOutput)
}

// Information on the user an incident is assigned to
type IncidentOwnerInfoOutput struct{ *pulumi.OutputState }

func (IncidentOwnerInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IncidentOwnerInfo)(nil)).Elem()
}

func (o IncidentOwnerInfoOutput) ToIncidentOwnerInfoOutput() IncidentOwnerInfoOutput {
	return o
}

func (o IncidentOwnerInfoOutput) ToIncidentOwnerInfoOutputWithContext(ctx context.Context) IncidentOwnerInfoOutput {
	return o
}

func (o IncidentOwnerInfoOutput) ToIncidentOwnerInfoPtrOutput() IncidentOwnerInfoPtrOutput {
	return o.ToIncidentOwnerInfoPtrOutputWithContext(context.Background())
}

func (o IncidentOwnerInfoOutput) ToIncidentOwnerInfoPtrOutputWithContext(ctx context.Context) IncidentOwnerInfoPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IncidentOwnerInfo) *IncidentOwnerInfo {
		return &v
	}).(IncidentOwnerInfoPtrOutput)
}

// The name of the user the incident is assigned to.
func (o IncidentOwnerInfoOutput) AssignedTo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IncidentOwnerInfo) *string { return v.AssignedTo }).(pulumi.StringPtrOutput)
}

// The email of the user the incident is assigned to.
func (o IncidentOwnerInfoOutput) Email() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IncidentOwnerInfo) *string { return v.Email }).(pulumi.StringPtrOutput)
}

// The object id of the user the incident is assigned to.
func (o IncidentOwnerInfoOutput) ObjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IncidentOwnerInfo) *string { return v.ObjectId }).(pulumi.StringPtrOutput)
}

// The type of the owner the incident is assigned to.
func (o IncidentOwnerInfoOutput) OwnerType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IncidentOwnerInfo) *string { return v.OwnerType }).(pulumi.StringPtrOutput)
}

// The user principal name of the user the incident is assigned to.
func (o IncidentOwnerInfoOutput) UserPrincipalName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IncidentOwnerInfo) *string { return v.UserPrincipalName }).(pulumi.StringPtrOutput)
}

type IncidentOwnerInfoPtrOutput struct{ *pulumi.OutputState }

func (IncidentOwnerInfoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IncidentOwnerInfo)(nil)).Elem()
}

func (o IncidentOwnerInfoPtrOutput) ToIncidentOwnerInfoPtrOutput() IncidentOwnerInfoPtrOutput {
	return o
}

func (o IncidentOwnerInfoPtrOutput) ToIncidentOwnerInfoPtrOutputWithContext(ctx context.Context) IncidentOwnerInfoPtrOutput {
	return o
}

func (o IncidentOwnerInfoPtrOutput) Elem() IncidentOwnerInfoOutput {
	return o.ApplyT(func(v *IncidentOwnerInfo) IncidentOwnerInfo {
		if v != nil {
			return *v
		}
		var ret IncidentOwnerInfo
		return ret
	}).(IncidentOwnerInfoOutput)
}

// The name of the user the incident is assigned to.
func (o IncidentOwnerInfoPtrOutput) AssignedTo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IncidentOwnerInfo) *string {
		if v == nil {
			return nil
		}
		return v.AssignedTo
	}).(pulumi.StringPtrOutput)
}

// The email of the user the incident is assigned to.
func (o IncidentOwnerInfoPtrOutput) Email() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IncidentOwnerInfo) *string {
		if v == nil {
			return nil
		}
		return v.Email
	}).(pulumi.StringPtrOutput)
}

// The object id of the user the incident is assigned to.
func (o IncidentOwnerInfoPtrOutput) ObjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IncidentOwnerInfo) *string {
		if v == nil {
			return nil
		}
		return v.ObjectId
	}).(pulumi.StringPtrOutput)
}

// The type of the owner the incident is assigned to.
func (o IncidentOwnerInfoPtrOutput) OwnerType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IncidentOwnerInfo) *string {
		if v == nil {
			return nil
		}
		return v.OwnerType
	}).(pulumi.StringPtrOutput)
}

// The user principal name of the user the incident is assigned to.
func (o IncidentOwnerInfoPtrOutput) UserPrincipalName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IncidentOwnerInfo) *string {
		if v == nil {
			return nil
		}
		return v.UserPrincipalName
	}).(pulumi.StringPtrOutput)
}

// Information on the user an incident is assigned to
type IncidentOwnerInfoResponse struct {
	// The name of the user the incident is assigned to.
	AssignedTo *string `pulumi:"assignedTo"`
	// The email of the user the incident is assigned to.
	Email *string `pulumi:"email"`
	// The object id of the user the incident is assigned to.
	ObjectId *string `pulumi:"objectId"`
	// The type of the owner the incident is assigned to.
	OwnerType *string `pulumi:"ownerType"`
	// The user principal name of the user the incident is assigned to.
	UserPrincipalName *string `pulumi:"userPrincipalName"`
}

// Information on the user an incident is assigned to
type IncidentOwnerInfoResponseOutput struct{ *pulumi.OutputState }

func (IncidentOwnerInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IncidentOwnerInfoResponse)(nil)).Elem()
}

func (o IncidentOwnerInfoResponseOutput) ToIncidentOwnerInfoResponseOutput() IncidentOwnerInfoResponseOutput {
	return o
}

func (o IncidentOwnerInfoResponseOutput) ToIncidentOwnerInfoResponseOutputWithContext(ctx context.Context) IncidentOwnerInfoResponseOutput {
	return o
}

// The name of the user the incident is assigned to.
func (o IncidentOwnerInfoResponseOutput) AssignedTo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IncidentOwnerInfoResponse) *string { return v.AssignedTo }).(pulumi.StringPtrOutput)
}

// The email of the user the incident is assigned to.
func (o IncidentOwnerInfoResponseOutput) Email() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IncidentOwnerInfoResponse) *string { return v.Email }).(pulumi.StringPtrOutput)
}

// The object id of the user the incident is assigned to.
func (o IncidentOwnerInfoResponseOutput) ObjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IncidentOwnerInfoResponse) *string { return v.ObjectId }).(pulumi.StringPtrOutput)
}

// The type of the owner the incident is assigned to.
func (o IncidentOwnerInfoResponseOutput) OwnerType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IncidentOwnerInfoResponse) *string { return v.OwnerType }).(pulumi.StringPtrOutput)
}

// The user principal name of the user the incident is assigned to.
func (o IncidentOwnerInfoResponseOutput) UserPrincipalName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IncidentOwnerInfoResponse) *string { return v.UserPrincipalName }).(pulumi.StringPtrOutput)
}

type IncidentOwnerInfoResponsePtrOutput struct{ *pulumi.OutputState }

func (IncidentOwnerInfoResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IncidentOwnerInfoResponse)(nil)).Elem()
}

func (o IncidentOwnerInfoResponsePtrOutput) ToIncidentOwnerInfoResponsePtrOutput() IncidentOwnerInfoResponsePtrOutput {
	return o
}

func (o IncidentOwnerInfoResponsePtrOutput) ToIncidentOwnerInfoResponsePtrOutputWithContext(ctx context.Context) IncidentOwnerInfoResponsePtrOutput {
	return o
}

func (o IncidentOwnerInfoResponsePtrOutput) Elem() IncidentOwnerInfoResponseOutput {
	return o.ApplyT(func(v *IncidentOwnerInfoResponse) IncidentOwnerInfoResponse {
		if v != nil {
			return *v
		}
		var ret IncidentOwnerInfoResponse
		return ret
	}).(IncidentOwnerInfoResponseOutput)
}

// The name of the user the incident is assigned to.
func (o IncidentOwnerInfoResponsePtrOutput) AssignedTo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IncidentOwnerInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.AssignedTo
	}).(pulumi.StringPtrOutput)
}

// The email of the user the incident is assigned to.
func (o IncidentOwnerInfoResponsePtrOutput) Email() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IncidentOwnerInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.Email
	}).(pulumi.StringPtrOutput)
}

// The object id of the user the incident is assigned to.
func (o IncidentOwnerInfoResponsePtrOutput) ObjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IncidentOwnerInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.ObjectId
	}).(pulumi.StringPtrOutput)
}

// The type of the owner the incident is assigned to.
func (o IncidentOwnerInfoResponsePtrOutput) OwnerType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IncidentOwnerInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.OwnerType
	}).(pulumi.StringPtrOutput)
}

// The user principal name of the user the incident is assigned to.
func (o IncidentOwnerInfoResponsePtrOutput) UserPrincipalName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IncidentOwnerInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.UserPrincipalName
	}).(pulumi.StringPtrOutput)
}

type IncidentPropertiesAction struct {
	// The reason the incident was closed
	Classification *string `pulumi:"classification"`
	// Describes the reason the incident was closed.
	ClassificationComment *string `pulumi:"classificationComment"`
	// The classification reason the incident was closed with
	ClassificationReason *string `pulumi:"classificationReason"`
	// List of labels to add to the incident.
	Labels []IncidentLabel `pulumi:"labels"`
	// Information on the user an incident is assigned to
	Owner *IncidentOwnerInfo `pulumi:"owner"`
	// The severity of the incident
	Severity *string `pulumi:"severity"`
	// The status of the incident
	Status *string `pulumi:"status"`
}

// IncidentPropertiesActionInput is an input type that accepts IncidentPropertiesActionArgs and IncidentPropertiesActionOutput values.
// You can construct a concrete instance of `IncidentPropertiesActionInput` via:
//
//	IncidentPropertiesActionArgs{...}
type IncidentPropertiesActionInput interface {
	pulumi.Input

	ToIncidentPropertiesActionOutput() IncidentPropertiesActionOutput
	ToIncidentPropertiesActionOutputWithContext(context.Context) IncidentPropertiesActionOutput
}

type IncidentPropertiesActionArgs struct {
	// The reason the incident was closed
	Classification pulumi.StringPtrInput `pulumi:"classification"`
	// Describes the reason the incident was closed.
	ClassificationComment pulumi.StringPtrInput `pulumi:"classificationComment"`
	// The classification reason the incident was closed with
	ClassificationReason pulumi.StringPtrInput `pulumi:"classificationReason"`
	// List of labels to add to the incident.
	Labels IncidentLabelArrayInput `pulumi:"labels"`
	// Information on the user an incident is assigned to
	Owner IncidentOwnerInfoPtrInput `pulumi:"owner"`
	// The severity of the incident
	Severity pulumi.StringPtrInput `pulumi:"severity"`
	// The status of the incident
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (IncidentPropertiesActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IncidentPropertiesAction)(nil)).Elem()
}

func (i IncidentPropertiesActionArgs) ToIncidentPropertiesActionOutput() IncidentPropertiesActionOutput {
	return i.ToIncidentPropertiesActionOutputWithContext(context.Background())
}

func (i IncidentPropertiesActionArgs) ToIncidentPropertiesActionOutputWithContext(ctx context.Context) IncidentPropertiesActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IncidentPropertiesActionOutput)
}

func (i IncidentPropertiesActionArgs) ToIncidentPropertiesActionPtrOutput() IncidentPropertiesActionPtrOutput {
	return i.ToIncidentPropertiesActionPtrOutputWithContext(context.Background())
}

func (i IncidentPropertiesActionArgs) ToIncidentPropertiesActionPtrOutputWithContext(ctx context.Context) IncidentPropertiesActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IncidentPropertiesActionOutput).ToIncidentPropertiesActionPtrOutputWithContext(ctx)
}

// IncidentPropertiesActionPtrInput is an input type that accepts IncidentPropertiesActionArgs, IncidentPropertiesActionPtr and IncidentPropertiesActionPtrOutput values.
// You can construct a concrete instance of `IncidentPropertiesActionPtrInput` via:
//
//	        IncidentPropertiesActionArgs{...}
//
//	or:
//
//	        nil
type IncidentPropertiesActionPtrInput interface {
	pulumi.Input

	ToIncidentPropertiesActionPtrOutput() IncidentPropertiesActionPtrOutput
	ToIncidentPropertiesActionPtrOutputWithContext(context.Context) IncidentPropertiesActionPtrOutput
}

type incidentPropertiesActionPtrType IncidentPropertiesActionArgs

func IncidentPropertiesActionPtr(v *IncidentPropertiesActionArgs) IncidentPropertiesActionPtrInput {
	return (*incidentPropertiesActionPtrType)(v)
}

func (*incidentPropertiesActionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IncidentPropertiesAction)(nil)).Elem()
}

func (i *incidentPropertiesActionPtrType) ToIncidentPropertiesActionPtrOutput() IncidentPropertiesActionPtrOutput {
	return i.ToIncidentPropertiesActionPtrOutputWithContext(context.Background())
}

func (i *incidentPropertiesActionPtrType) ToIncidentPropertiesActionPtrOutputWithContext(ctx context.Context) IncidentPropertiesActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IncidentPropertiesActionPtrOutput)
}

type IncidentPropertiesActionOutput struct{ *pulumi.OutputState }

func (IncidentPropertiesActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IncidentPropertiesAction)(nil)).Elem()
}

func (o IncidentPropertiesActionOutput) ToIncidentPropertiesActionOutput() IncidentPropertiesActionOutput {
	return o
}

func (o IncidentPropertiesActionOutput) ToIncidentPropertiesActionOutputWithContext(ctx context.Context) IncidentPropertiesActionOutput {
	return o
}

func (o IncidentPropertiesActionOutput) ToIncidentPropertiesActionPtrOutput() IncidentPropertiesActionPtrOutput {
	return o.ToIncidentPropertiesActionPtrOutputWithContext(context.Background())
}

func (o IncidentPropertiesActionOutput) ToIncidentPropertiesActionPtrOutputWithContext(ctx context.Context) IncidentPropertiesActionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IncidentPropertiesAction) *IncidentPropertiesAction {
		return &v
	}).(IncidentPropertiesActionPtrOutput)
}

// The reason the incident was closed
func (o IncidentPropertiesActionOutput) Classification() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IncidentPropertiesAction) *string { return v.Classification }).(pulumi.StringPtrOutput)
}

// Describes the reason the incident was closed.
func (o IncidentPropertiesActionOutput) ClassificationComment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IncidentPropertiesAction) *string { return v.ClassificationComment }).(pulumi.StringPtrOutput)
}

// The classification reason the incident was closed with
func (o IncidentPropertiesActionOutput) ClassificationReason() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IncidentPropertiesAction) *string { return v.ClassificationReason }).(pulumi.StringPtrOutput)
}

// List of labels to add to the incident.
func (o IncidentPropertiesActionOutput) Labels() IncidentLabelArrayOutput {
	return o.ApplyT(func(v IncidentPropertiesAction) []IncidentLabel { return v.Labels }).(IncidentLabelArrayOutput)
}

// Information on the user an incident is assigned to
func (o IncidentPropertiesActionOutput) Owner() IncidentOwnerInfoPtrOutput {
	return o.ApplyT(func(v IncidentPropertiesAction) *IncidentOwnerInfo { return v.Owner }).(IncidentOwnerInfoPtrOutput)
}

// The severity of the incident
func (o IncidentPropertiesActionOutput) Severity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IncidentPropertiesAction) *string { return v.Severity }).(pulumi.StringPtrOutput)
}

// The status of the incident
func (o IncidentPropertiesActionOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IncidentPropertiesAction) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type IncidentPropertiesActionPtrOutput struct{ *pulumi.OutputState }

func (IncidentPropertiesActionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IncidentPropertiesAction)(nil)).Elem()
}

func (o IncidentPropertiesActionPtrOutput) ToIncidentPropertiesActionPtrOutput() IncidentPropertiesActionPtrOutput {
	return o
}

func (o IncidentPropertiesActionPtrOutput) ToIncidentPropertiesActionPtrOutputWithContext(ctx context.Context) IncidentPropertiesActionPtrOutput {
	return o
}

func (o IncidentPropertiesActionPtrOutput) Elem() IncidentPropertiesActionOutput {
	return o.ApplyT(func(v *IncidentPropertiesAction) IncidentPropertiesAction {
		if v != nil {
			return *v
		}
		var ret IncidentPropertiesAction
		return ret
	}).(IncidentPropertiesActionOutput)
}

// The reason the incident was closed
func (o IncidentPropertiesActionPtrOutput) Classification() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IncidentPropertiesAction) *string {
		if v == nil {
			return nil
		}
		return v.Classification
	}).(pulumi.StringPtrOutput)
}

// Describes the reason the incident was closed.
func (o IncidentPropertiesActionPtrOutput) ClassificationComment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IncidentPropertiesAction) *string {
		if v == nil {
			return nil
		}
		return v.ClassificationComment
	}).(pulumi.StringPtrOutput)
}

// The classification reason the incident was closed with
func (o IncidentPropertiesActionPtrOutput) ClassificationReason() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IncidentPropertiesAction) *string {
		if v == nil {
			return nil
		}
		return v.ClassificationReason
	}).(pulumi.StringPtrOutput)
}

// List of labels to add to the incident.
func (o IncidentPropertiesActionPtrOutput) Labels() IncidentLabelArrayOutput {
	return o.ApplyT(func(v *IncidentPropertiesAction) []IncidentLabel {
		if v == nil {
			return nil
		}
		return v.Labels
	}).(IncidentLabelArrayOutput)
}

// Information on the user an incident is assigned to
func (o IncidentPropertiesActionPtrOutput) Owner() IncidentOwnerInfoPtrOutput {
	return o.ApplyT(func(v *IncidentPropertiesAction) *IncidentOwnerInfo {
		if v == nil {
			return nil
		}
		return v.Owner
	}).(IncidentOwnerInfoPtrOutput)
}

// The severity of the incident
func (o IncidentPropertiesActionPtrOutput) Severity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IncidentPropertiesAction) *string {
		if v == nil {
			return nil
		}
		return v.Severity
	}).(pulumi.StringPtrOutput)
}

// The status of the incident
func (o IncidentPropertiesActionPtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IncidentPropertiesAction) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

type IncidentPropertiesActionResponse struct {
	// The reason the incident was closed
	Classification *string `pulumi:"classification"`
	// Describes the reason the incident was closed.
	ClassificationComment *string `pulumi:"classificationComment"`
	// The classification reason the incident was closed with
	ClassificationReason *string `pulumi:"classificationReason"`
	// List of labels to add to the incident.
	Labels []IncidentLabelResponse `pulumi:"labels"`
	// Information on the user an incident is assigned to
	Owner *IncidentOwnerInfoResponse `pulumi:"owner"`
	// The severity of the incident
	Severity *string `pulumi:"severity"`
	// The status of the incident
	Status *string `pulumi:"status"`
}

type IncidentPropertiesActionResponseOutput struct{ *pulumi.OutputState }

func (IncidentPropertiesActionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IncidentPropertiesActionResponse)(nil)).Elem()
}

func (o IncidentPropertiesActionResponseOutput) ToIncidentPropertiesActionResponseOutput() IncidentPropertiesActionResponseOutput {
	return o
}

func (o IncidentPropertiesActionResponseOutput) ToIncidentPropertiesActionResponseOutputWithContext(ctx context.Context) IncidentPropertiesActionResponseOutput {
	return o
}

// The reason the incident was closed
func (o IncidentPropertiesActionResponseOutput) Classification() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IncidentPropertiesActionResponse) *string { return v.Classification }).(pulumi.StringPtrOutput)
}

// Describes the reason the incident was closed.
func (o IncidentPropertiesActionResponseOutput) ClassificationComment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IncidentPropertiesActionResponse) *string { return v.ClassificationComment }).(pulumi.StringPtrOutput)
}

// The classification reason the incident was closed with
func (o IncidentPropertiesActionResponseOutput) ClassificationReason() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IncidentPropertiesActionResponse) *string { return v.ClassificationReason }).(pulumi.StringPtrOutput)
}

// List of labels to add to the incident.
func (o IncidentPropertiesActionResponseOutput) Labels() IncidentLabelResponseArrayOutput {
	return o.ApplyT(func(v IncidentPropertiesActionResponse) []IncidentLabelResponse { return v.Labels }).(IncidentLabelResponseArrayOutput)
}

// Information on the user an incident is assigned to
func (o IncidentPropertiesActionResponseOutput) Owner() IncidentOwnerInfoResponsePtrOutput {
	return o.ApplyT(func(v IncidentPropertiesActionResponse) *IncidentOwnerInfoResponse { return v.Owner }).(IncidentOwnerInfoResponsePtrOutput)
}

// The severity of the incident
func (o IncidentPropertiesActionResponseOutput) Severity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IncidentPropertiesActionResponse) *string { return v.Severity }).(pulumi.StringPtrOutput)
}

// The status of the incident
func (o IncidentPropertiesActionResponseOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IncidentPropertiesActionResponse) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type IncidentPropertiesActionResponsePtrOutput struct{ *pulumi.OutputState }

func (IncidentPropertiesActionResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IncidentPropertiesActionResponse)(nil)).Elem()
}

func (o IncidentPropertiesActionResponsePtrOutput) ToIncidentPropertiesActionResponsePtrOutput() IncidentPropertiesActionResponsePtrOutput {
	return o
}

func (o IncidentPropertiesActionResponsePtrOutput) ToIncidentPropertiesActionResponsePtrOutputWithContext(ctx context.Context) IncidentPropertiesActionResponsePtrOutput {
	return o
}

func (o IncidentPropertiesActionResponsePtrOutput) Elem() IncidentPropertiesActionResponseOutput {
	return o.ApplyT(func(v *IncidentPropertiesActionResponse) IncidentPropertiesActionResponse {
		if v != nil {
			return *v
		}
		var ret IncidentPropertiesActionResponse
		return ret
	}).(IncidentPropertiesActionResponseOutput)
}

// The reason the incident was closed
func (o IncidentPropertiesActionResponsePtrOutput) Classification() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IncidentPropertiesActionResponse) *string {
		if v == nil {
			return nil
		}
		return v.Classification
	}).(pulumi.StringPtrOutput)
}

// Describes the reason the incident was closed.
func (o IncidentPropertiesActionResponsePtrOutput) ClassificationComment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IncidentPropertiesActionResponse) *string {
		if v == nil {
			return nil
		}
		return v.ClassificationComment
	}).(pulumi.StringPtrOutput)
}

// The classification reason the incident was closed with
func (o IncidentPropertiesActionResponsePtrOutput) ClassificationReason() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IncidentPropertiesActionResponse) *string {
		if v == nil {
			return nil
		}
		return v.ClassificationReason
	}).(pulumi.StringPtrOutput)
}

// List of labels to add to the incident.
func (o IncidentPropertiesActionResponsePtrOutput) Labels() IncidentLabelResponseArrayOutput {
	return o.ApplyT(func(v *IncidentPropertiesActionResponse) []IncidentLabelResponse {
		if v == nil {
			return nil
		}
		return v.Labels
	}).(IncidentLabelResponseArrayOutput)
}

// Information on the user an incident is assigned to
func (o IncidentPropertiesActionResponsePtrOutput) Owner() IncidentOwnerInfoResponsePtrOutput {
	return o.ApplyT(func(v *IncidentPropertiesActionResponse) *IncidentOwnerInfoResponse {
		if v == nil {
			return nil
		}
		return v.Owner
	}).(IncidentOwnerInfoResponsePtrOutput)
}

// The severity of the incident
func (o IncidentPropertiesActionResponsePtrOutput) Severity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IncidentPropertiesActionResponse) *string {
		if v == nil {
			return nil
		}
		return v.Severity
	}).(pulumi.StringPtrOutput)
}

// The status of the incident
func (o IncidentPropertiesActionResponsePtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IncidentPropertiesActionResponse) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

// Instruction steps to enable the connector.
type InstructionStep struct {
	// Gets or sets the instruction step description.
	Description *string `pulumi:"description"`
	// Gets or sets the inner instruction steps details.
	// For Example: instruction step 1 might contain inner instruction steps: [instruction step 1.1, instruction step 1.2].
	InnerSteps []InstructionStep `pulumi:"innerSteps"`
	// Gets or sets the instruction step details.
	Instructions []InstructionStepDetails `pulumi:"instructions"`
	// Gets or sets the instruction step title.
	Title *string `pulumi:"title"`
}

// InstructionStepInput is an input type that accepts InstructionStepArgs and InstructionStepOutput values.
// You can construct a concrete instance of `InstructionStepInput` via:
//
//	InstructionStepArgs{...}
type InstructionStepInput interface {
	pulumi.Input

	ToInstructionStepOutput() InstructionStepOutput
	ToInstructionStepOutputWithContext(context.Context) InstructionStepOutput
}

// Instruction steps to enable the connector.
type InstructionStepArgs struct {
	// Gets or sets the instruction step description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Gets or sets the inner instruction steps details.
	// For Example: instruction step 1 might contain inner instruction steps: [instruction step 1.1, instruction step 1.2].
	InnerSteps InstructionStepArrayInput `pulumi:"innerSteps"`
	// Gets or sets the instruction step details.
	Instructions InstructionStepDetailsArrayInput `pulumi:"instructions"`
	// Gets or sets the instruction step title.
	Title pulumi.StringPtrInput `pulumi:"title"`
}

func (InstructionStepArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstructionStep)(nil)).Elem()
}

func (i InstructionStepArgs) ToInstructionStepOutput() InstructionStepOutput {
	return i.ToInstructionStepOutputWithContext(context.Background())
}

func (i InstructionStepArgs) ToInstructionStepOutputWithContext(ctx context.Context) InstructionStepOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstructionStepOutput)
}

// InstructionStepArrayInput is an input type that accepts InstructionStepArray and InstructionStepArrayOutput values.
// You can construct a concrete instance of `InstructionStepArrayInput` via:
//
//	InstructionStepArray{ InstructionStepArgs{...} }
type InstructionStepArrayInput interface {
	pulumi.Input

	ToInstructionStepArrayOutput() InstructionStepArrayOutput
	ToInstructionStepArrayOutputWithContext(context.Context) InstructionStepArrayOutput
}

type InstructionStepArray []InstructionStepInput

func (InstructionStepArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstructionStep)(nil)).Elem()
}

func (i InstructionStepArray) ToInstructionStepArrayOutput() InstructionStepArrayOutput {
	return i.ToInstructionStepArrayOutputWithContext(context.Background())
}

func (i InstructionStepArray) ToInstructionStepArrayOutputWithContext(ctx context.Context) InstructionStepArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstructionStepArrayOutput)
}

// Instruction steps to enable the connector.
type InstructionStepOutput struct{ *pulumi.OutputState }

func (InstructionStepOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstructionStep)(nil)).Elem()
}

func (o InstructionStepOutput) ToInstructionStepOutput() InstructionStepOutput {
	return o
}

func (o InstructionStepOutput) ToInstructionStepOutputWithContext(ctx context.Context) InstructionStepOutput {
	return o
}

// Gets or sets the instruction step description.
func (o InstructionStepOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstructionStep) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Gets or sets the inner instruction steps details.
// For Example: instruction step 1 might contain inner instruction steps: [instruction step 1.1, instruction step 1.2].
func (o InstructionStepOutput) InnerSteps() InstructionStepArrayOutput {
	return o.ApplyT(func(v InstructionStep) []InstructionStep { return v.InnerSteps }).(InstructionStepArrayOutput)
}

// Gets or sets the instruction step details.
func (o InstructionStepOutput) Instructions() InstructionStepDetailsArrayOutput {
	return o.ApplyT(func(v InstructionStep) []InstructionStepDetails { return v.Instructions }).(InstructionStepDetailsArrayOutput)
}

// Gets or sets the instruction step title.
func (o InstructionStepOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstructionStep) *string { return v.Title }).(pulumi.StringPtrOutput)
}

type InstructionStepArrayOutput struct{ *pulumi.OutputState }

func (InstructionStepArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstructionStep)(nil)).Elem()
}

func (o InstructionStepArrayOutput) ToInstructionStepArrayOutput() InstructionStepArrayOutput {
	return o
}

func (o InstructionStepArrayOutput) ToInstructionStepArrayOutputWithContext(ctx context.Context) InstructionStepArrayOutput {
	return o
}

func (o InstructionStepArrayOutput) Index(i pulumi.IntInput) InstructionStepOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InstructionStep {
		return vs[0].([]InstructionStep)[vs[1].(int)]
	}).(InstructionStepOutput)
}

// Instruction step details, to be displayed in the Instructions steps section in the connector's page in Sentinel Portal.
type InstructionStepDetails struct {
	// Gets or sets the instruction type parameters settings.
	Parameters interface{} `pulumi:"parameters"`
	// Gets or sets the instruction type name.
	Type string `pulumi:"type"`
}

// InstructionStepDetailsInput is an input type that accepts InstructionStepDetailsArgs and InstructionStepDetailsOutput values.
// You can construct a concrete instance of `InstructionStepDetailsInput` via:
//
//	InstructionStepDetailsArgs{...}
type InstructionStepDetailsInput interface {
	pulumi.Input

	ToInstructionStepDetailsOutput() InstructionStepDetailsOutput
	ToInstructionStepDetailsOutputWithContext(context.Context) InstructionStepDetailsOutput
}

// Instruction step details, to be displayed in the Instructions steps section in the connector's page in Sentinel Portal.
type InstructionStepDetailsArgs struct {
	// Gets or sets the instruction type parameters settings.
	Parameters pulumi.Input `pulumi:"parameters"`
	// Gets or sets the instruction type name.
	Type pulumi.StringInput `pulumi:"type"`
}

func (InstructionStepDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstructionStepDetails)(nil)).Elem()
}

func (i InstructionStepDetailsArgs) ToInstructionStepDetailsOutput() InstructionStepDetailsOutput {
	return i.ToInstructionStepDetailsOutputWithContext(context.Background())
}

func (i InstructionStepDetailsArgs) ToInstructionStepDetailsOutputWithContext(ctx context.Context) InstructionStepDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstructionStepDetailsOutput)
}

// InstructionStepDetailsArrayInput is an input type that accepts InstructionStepDetailsArray and InstructionStepDetailsArrayOutput values.
// You can construct a concrete instance of `InstructionStepDetailsArrayInput` via:
//
//	InstructionStepDetailsArray{ InstructionStepDetailsArgs{...} }
type InstructionStepDetailsArrayInput interface {
	pulumi.Input

	ToInstructionStepDetailsArrayOutput() InstructionStepDetailsArrayOutput
	ToInstructionStepDetailsArrayOutputWithContext(context.Context) InstructionStepDetailsArrayOutput
}

type InstructionStepDetailsArray []InstructionStepDetailsInput

func (InstructionStepDetailsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstructionStepDetails)(nil)).Elem()
}

func (i InstructionStepDetailsArray) ToInstructionStepDetailsArrayOutput() InstructionStepDetailsArrayOutput {
	return i.ToInstructionStepDetailsArrayOutputWithContext(context.Background())
}

func (i InstructionStepDetailsArray) ToInstructionStepDetailsArrayOutputWithContext(ctx context.Context) InstructionStepDetailsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstructionStepDetailsArrayOutput)
}

// Instruction step details, to be displayed in the Instructions steps section in the connector's page in Sentinel Portal.
type InstructionStepDetailsOutput struct{ *pulumi.OutputState }

func (InstructionStepDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstructionStepDetails)(nil)).Elem()
}

func (o InstructionStepDetailsOutput) ToInstructionStepDetailsOutput() InstructionStepDetailsOutput {
	return o
}

func (o InstructionStepDetailsOutput) ToInstructionStepDetailsOutputWithContext(ctx context.Context) InstructionStepDetailsOutput {
	return o
}

// Gets or sets the instruction type parameters settings.
func (o InstructionStepDetailsOutput) Parameters() pulumi.AnyOutput {
	return o.ApplyT(func(v InstructionStepDetails) interface{} { return v.Parameters }).(pulumi.AnyOutput)
}

// Gets or sets the instruction type name.
func (o InstructionStepDetailsOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v InstructionStepDetails) string { return v.Type }).(pulumi.StringOutput)
}

type InstructionStepDetailsArrayOutput struct{ *pulumi.OutputState }

func (InstructionStepDetailsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstructionStepDetails)(nil)).Elem()
}

func (o InstructionStepDetailsArrayOutput) ToInstructionStepDetailsArrayOutput() InstructionStepDetailsArrayOutput {
	return o
}

func (o InstructionStepDetailsArrayOutput) ToInstructionStepDetailsArrayOutputWithContext(ctx context.Context) InstructionStepDetailsArrayOutput {
	return o
}

func (o InstructionStepDetailsArrayOutput) Index(i pulumi.IntInput) InstructionStepDetailsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InstructionStepDetails {
		return vs[0].([]InstructionStepDetails)[vs[1].(int)]
	}).(InstructionStepDetailsOutput)
}

// Instruction step details, to be displayed in the Instructions steps section in the connector's page in Sentinel Portal.
type InstructionStepDetailsResponse struct {
	// Gets or sets the instruction type parameters settings.
	Parameters interface{} `pulumi:"parameters"`
	// Gets or sets the instruction type name.
	Type string `pulumi:"type"`
}

// Instruction step details, to be displayed in the Instructions steps section in the connector's page in Sentinel Portal.
type InstructionStepDetailsResponseOutput struct{ *pulumi.OutputState }

func (InstructionStepDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstructionStepDetailsResponse)(nil)).Elem()
}

func (o InstructionStepDetailsResponseOutput) ToInstructionStepDetailsResponseOutput() InstructionStepDetailsResponseOutput {
	return o
}

func (o InstructionStepDetailsResponseOutput) ToInstructionStepDetailsResponseOutputWithContext(ctx context.Context) InstructionStepDetailsResponseOutput {
	return o
}

// Gets or sets the instruction type parameters settings.
func (o InstructionStepDetailsResponseOutput) Parameters() pulumi.AnyOutput {
	return o.ApplyT(func(v InstructionStepDetailsResponse) interface{} { return v.Parameters }).(pulumi.AnyOutput)
}

// Gets or sets the instruction type name.
func (o InstructionStepDetailsResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v InstructionStepDetailsResponse) string { return v.Type }).(pulumi.StringOutput)
}

type InstructionStepDetailsResponseArrayOutput struct{ *pulumi.OutputState }

func (InstructionStepDetailsResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstructionStepDetailsResponse)(nil)).Elem()
}

func (o InstructionStepDetailsResponseArrayOutput) ToInstructionStepDetailsResponseArrayOutput() InstructionStepDetailsResponseArrayOutput {
	return o
}

func (o InstructionStepDetailsResponseArrayOutput) ToInstructionStepDetailsResponseArrayOutputWithContext(ctx context.Context) InstructionStepDetailsResponseArrayOutput {
	return o
}

func (o InstructionStepDetailsResponseArrayOutput) Index(i pulumi.IntInput) InstructionStepDetailsResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InstructionStepDetailsResponse {
		return vs[0].([]InstructionStepDetailsResponse)[vs[1].(int)]
	}).(InstructionStepDetailsResponseOutput)
}

// Instruction steps to enable the connector.
type InstructionStepResponse struct {
	// Gets or sets the instruction step description.
	Description *string `pulumi:"description"`
	// Gets or sets the inner instruction steps details.
	// For Example: instruction step 1 might contain inner instruction steps: [instruction step 1.1, instruction step 1.2].
	InnerSteps []InstructionStepResponse `pulumi:"innerSteps"`
	// Gets or sets the instruction step details.
	Instructions []InstructionStepDetailsResponse `pulumi:"instructions"`
	// Gets or sets the instruction step title.
	Title *string `pulumi:"title"`
}

// Instruction steps to enable the connector.
type InstructionStepResponseOutput struct{ *pulumi.OutputState }

func (InstructionStepResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstructionStepResponse)(nil)).Elem()
}

func (o InstructionStepResponseOutput) ToInstructionStepResponseOutput() InstructionStepResponseOutput {
	return o
}

func (o InstructionStepResponseOutput) ToInstructionStepResponseOutputWithContext(ctx context.Context) InstructionStepResponseOutput {
	return o
}

// Gets or sets the instruction step description.
func (o InstructionStepResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstructionStepResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Gets or sets the inner instruction steps details.
// For Example: instruction step 1 might contain inner instruction steps: [instruction step 1.1, instruction step 1.2].
func (o InstructionStepResponseOutput) InnerSteps() InstructionStepResponseArrayOutput {
	return o.ApplyT(func(v InstructionStepResponse) []InstructionStepResponse { return v.InnerSteps }).(InstructionStepResponseArrayOutput)
}

// Gets or sets the instruction step details.
func (o InstructionStepResponseOutput) Instructions() InstructionStepDetailsResponseArrayOutput {
	return o.ApplyT(func(v InstructionStepResponse) []InstructionStepDetailsResponse { return v.Instructions }).(InstructionStepDetailsResponseArrayOutput)
}

// Gets or sets the instruction step title.
func (o InstructionStepResponseOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstructionStepResponse) *string { return v.Title }).(pulumi.StringPtrOutput)
}

type InstructionStepResponseArrayOutput struct{ *pulumi.OutputState }

func (InstructionStepResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstructionStepResponse)(nil)).Elem()
}

func (o InstructionStepResponseArrayOutput) ToInstructionStepResponseArrayOutput() InstructionStepResponseArrayOutput {
	return o
}

func (o InstructionStepResponseArrayOutput) ToInstructionStepResponseArrayOutputWithContext(ctx context.Context) InstructionStepResponseArrayOutput {
	return o
}

func (o InstructionStepResponseArrayOutput) Index(i pulumi.IntInput) InstructionStepResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InstructionStepResponse {
		return vs[0].([]InstructionStepResponse)[vs[1].(int)]
	}).(InstructionStepResponseOutput)
}

// Model for API authentication with JWT. Simple exchange between user name + password to access token.
type JwtAuthModel struct {
	// The custom headers we want to add once we send request to token endpoint.
	Headers map[string]string `pulumi:"headers"`
	// Flag indicating whether we want to send the user name and password to token endpoint in the headers.
	IsCredentialsInHeaders *bool `pulumi:"isCredentialsInHeaders"`
	// Flag indicating whether the body request is JSON (header Content-Type = application/json), meaning its a Form URL encoded request (header Content-Type = application/x-www-form-urlencoded).
	IsJsonRequest *bool `pulumi:"isJsonRequest"`
	// The password
	Password map[string]string `pulumi:"password"`
	// The custom query parameter we want to add once we send request to token endpoint.
	QueryParameters map[string]string `pulumi:"queryParameters"`
	// Request timeout in seconds.
	RequestTimeoutInSeconds *int `pulumi:"requestTimeoutInSeconds"`
	// Token endpoint to request JWT
	TokenEndpoint string `pulumi:"tokenEndpoint"`
	// Type of paging
	// Expected value is 'JwtToken'.
	Type string `pulumi:"type"`
	// The user name. If user name and password sent in header request we only need to populate the `value` property with the user name (Same as basic auth). If user name and password sent in body request we need to specify the `Key` and `Value`.
	UserName map[string]string `pulumi:"userName"`
}

// Defaults sets the appropriate defaults for JwtAuthModel
func (val *JwtAuthModel) Defaults() *JwtAuthModel {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.IsJsonRequest == nil {
		isJsonRequest_ := false
		tmp.IsJsonRequest = &isJsonRequest_
	}
	if tmp.RequestTimeoutInSeconds == nil {
		requestTimeoutInSeconds_ := 100
		tmp.RequestTimeoutInSeconds = &requestTimeoutInSeconds_
	}
	return &tmp
}

// JwtAuthModelInput is an input type that accepts JwtAuthModelArgs and JwtAuthModelOutput values.
// You can construct a concrete instance of `JwtAuthModelInput` via:
//
//	JwtAuthModelArgs{...}
type JwtAuthModelInput interface {
	pulumi.Input

	ToJwtAuthModelOutput() JwtAuthModelOutput
	ToJwtAuthModelOutputWithContext(context.Context) JwtAuthModelOutput
}

// Model for API authentication with JWT. Simple exchange between user name + password to access token.
type JwtAuthModelArgs struct {
	// The custom headers we want to add once we send request to token endpoint.
	Headers pulumi.StringMapInput `pulumi:"headers"`
	// Flag indicating whether we want to send the user name and password to token endpoint in the headers.
	IsCredentialsInHeaders pulumi.BoolPtrInput `pulumi:"isCredentialsInHeaders"`
	// Flag indicating whether the body request is JSON (header Content-Type = application/json), meaning its a Form URL encoded request (header Content-Type = application/x-www-form-urlencoded).
	IsJsonRequest pulumi.BoolPtrInput `pulumi:"isJsonRequest"`
	// The password
	Password pulumi.StringMapInput `pulumi:"password"`
	// The custom query parameter we want to add once we send request to token endpoint.
	QueryParameters pulumi.StringMapInput `pulumi:"queryParameters"`
	// Request timeout in seconds.
	RequestTimeoutInSeconds pulumi.IntPtrInput `pulumi:"requestTimeoutInSeconds"`
	// Token endpoint to request JWT
	TokenEndpoint pulumi.StringInput `pulumi:"tokenEndpoint"`
	// Type of paging
	// Expected value is 'JwtToken'.
	Type pulumi.StringInput `pulumi:"type"`
	// The user name. If user name and password sent in header request we only need to populate the `value` property with the user name (Same as basic auth). If user name and password sent in body request we need to specify the `Key` and `Value`.
	UserName pulumi.StringMapInput `pulumi:"userName"`
}

// Defaults sets the appropriate defaults for JwtAuthModelArgs
func (val *JwtAuthModelArgs) Defaults() *JwtAuthModelArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.IsJsonRequest == nil {
		tmp.IsJsonRequest = pulumi.BoolPtr(false)
	}
	if tmp.RequestTimeoutInSeconds == nil {
		tmp.RequestTimeoutInSeconds = pulumi.IntPtr(100)
	}
	return &tmp
}
func (JwtAuthModelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JwtAuthModel)(nil)).Elem()
}

func (i JwtAuthModelArgs) ToJwtAuthModelOutput() JwtAuthModelOutput {
	return i.ToJwtAuthModelOutputWithContext(context.Background())
}

func (i JwtAuthModelArgs) ToJwtAuthModelOutputWithContext(ctx context.Context) JwtAuthModelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JwtAuthModelOutput)
}

// Model for API authentication with JWT. Simple exchange between user name + password to access token.
type JwtAuthModelOutput struct{ *pulumi.OutputState }

func (JwtAuthModelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JwtAuthModel)(nil)).Elem()
}

func (o JwtAuthModelOutput) ToJwtAuthModelOutput() JwtAuthModelOutput {
	return o
}

func (o JwtAuthModelOutput) ToJwtAuthModelOutputWithContext(ctx context.Context) JwtAuthModelOutput {
	return o
}

// The custom headers we want to add once we send request to token endpoint.
func (o JwtAuthModelOutput) Headers() pulumi.StringMapOutput {
	return o.ApplyT(func(v JwtAuthModel) map[string]string { return v.Headers }).(pulumi.StringMapOutput)
}

// Flag indicating whether we want to send the user name and password to token endpoint in the headers.
func (o JwtAuthModelOutput) IsCredentialsInHeaders() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v JwtAuthModel) *bool { return v.IsCredentialsInHeaders }).(pulumi.BoolPtrOutput)
}

// Flag indicating whether the body request is JSON (header Content-Type = application/json), meaning its a Form URL encoded request (header Content-Type = application/x-www-form-urlencoded).
func (o JwtAuthModelOutput) IsJsonRequest() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v JwtAuthModel) *bool { return v.IsJsonRequest }).(pulumi.BoolPtrOutput)
}

// The password
func (o JwtAuthModelOutput) Password() pulumi.StringMapOutput {
	return o.ApplyT(func(v JwtAuthModel) map[string]string { return v.Password }).(pulumi.StringMapOutput)
}

// The custom query parameter we want to add once we send request to token endpoint.
func (o JwtAuthModelOutput) QueryParameters() pulumi.StringMapOutput {
	return o.ApplyT(func(v JwtAuthModel) map[string]string { return v.QueryParameters }).(pulumi.StringMapOutput)
}

// Request timeout in seconds.
func (o JwtAuthModelOutput) RequestTimeoutInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v JwtAuthModel) *int { return v.RequestTimeoutInSeconds }).(pulumi.IntPtrOutput)
}

// Token endpoint to request JWT
func (o JwtAuthModelOutput) TokenEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v JwtAuthModel) string { return v.TokenEndpoint }).(pulumi.StringOutput)
}

// Type of paging
// Expected value is 'JwtToken'.
func (o JwtAuthModelOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v JwtAuthModel) string { return v.Type }).(pulumi.StringOutput)
}

// The user name. If user name and password sent in header request we only need to populate the `value` property with the user name (Same as basic auth). If user name and password sent in body request we need to specify the `Key` and `Value`.
func (o JwtAuthModelOutput) UserName() pulumi.StringMapOutput {
	return o.ApplyT(func(v JwtAuthModel) map[string]string { return v.UserName }).(pulumi.StringMapOutput)
}

// Model for API authentication with JWT. Simple exchange between user name + password to access token.
type JwtAuthModelResponse struct {
	// The custom headers we want to add once we send request to token endpoint.
	Headers map[string]string `pulumi:"headers"`
	// Flag indicating whether we want to send the user name and password to token endpoint in the headers.
	IsCredentialsInHeaders *bool `pulumi:"isCredentialsInHeaders"`
	// Flag indicating whether the body request is JSON (header Content-Type = application/json), meaning its a Form URL encoded request (header Content-Type = application/x-www-form-urlencoded).
	IsJsonRequest *bool `pulumi:"isJsonRequest"`
	// The password
	Password map[string]string `pulumi:"password"`
	// The custom query parameter we want to add once we send request to token endpoint.
	QueryParameters map[string]string `pulumi:"queryParameters"`
	// Request timeout in seconds.
	RequestTimeoutInSeconds *int `pulumi:"requestTimeoutInSeconds"`
	// Token endpoint to request JWT
	TokenEndpoint string `pulumi:"tokenEndpoint"`
	// Type of paging
	// Expected value is 'JwtToken'.
	Type string `pulumi:"type"`
	// The user name. If user name and password sent in header request we only need to populate the `value` property with the user name (Same as basic auth). If user name and password sent in body request we need to specify the `Key` and `Value`.
	UserName map[string]string `pulumi:"userName"`
}

// Defaults sets the appropriate defaults for JwtAuthModelResponse
func (val *JwtAuthModelResponse) Defaults() *JwtAuthModelResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.IsJsonRequest == nil {
		isJsonRequest_ := false
		tmp.IsJsonRequest = &isJsonRequest_
	}
	if tmp.RequestTimeoutInSeconds == nil {
		requestTimeoutInSeconds_ := 100
		tmp.RequestTimeoutInSeconds = &requestTimeoutInSeconds_
	}
	return &tmp
}

// Model for API authentication with JWT. Simple exchange between user name + password to access token.
type JwtAuthModelResponseOutput struct{ *pulumi.OutputState }

func (JwtAuthModelResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JwtAuthModelResponse)(nil)).Elem()
}

func (o JwtAuthModelResponseOutput) ToJwtAuthModelResponseOutput() JwtAuthModelResponseOutput {
	return o
}

func (o JwtAuthModelResponseOutput) ToJwtAuthModelResponseOutputWithContext(ctx context.Context) JwtAuthModelResponseOutput {
	return o
}

// The custom headers we want to add once we send request to token endpoint.
func (o JwtAuthModelResponseOutput) Headers() pulumi.StringMapOutput {
	return o.ApplyT(func(v JwtAuthModelResponse) map[string]string { return v.Headers }).(pulumi.StringMapOutput)
}

// Flag indicating whether we want to send the user name and password to token endpoint in the headers.
func (o JwtAuthModelResponseOutput) IsCredentialsInHeaders() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v JwtAuthModelResponse) *bool { return v.IsCredentialsInHeaders }).(pulumi.BoolPtrOutput)
}

// Flag indicating whether the body request is JSON (header Content-Type = application/json), meaning its a Form URL encoded request (header Content-Type = application/x-www-form-urlencoded).
func (o JwtAuthModelResponseOutput) IsJsonRequest() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v JwtAuthModelResponse) *bool { return v.IsJsonRequest }).(pulumi.BoolPtrOutput)
}

// The password
func (o JwtAuthModelResponseOutput) Password() pulumi.StringMapOutput {
	return o.ApplyT(func(v JwtAuthModelResponse) map[string]string { return v.Password }).(pulumi.StringMapOutput)
}

// The custom query parameter we want to add once we send request to token endpoint.
func (o JwtAuthModelResponseOutput) QueryParameters() pulumi.StringMapOutput {
	return o.ApplyT(func(v JwtAuthModelResponse) map[string]string { return v.QueryParameters }).(pulumi.StringMapOutput)
}

// Request timeout in seconds.
func (o JwtAuthModelResponseOutput) RequestTimeoutInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v JwtAuthModelResponse) *int { return v.RequestTimeoutInSeconds }).(pulumi.IntPtrOutput)
}

// Token endpoint to request JWT
func (o JwtAuthModelResponseOutput) TokenEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v JwtAuthModelResponse) string { return v.TokenEndpoint }).(pulumi.StringOutput)
}

// Type of paging
// Expected value is 'JwtToken'.
func (o JwtAuthModelResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v JwtAuthModelResponse) string { return v.Type }).(pulumi.StringOutput)
}

// The user name. If user name and password sent in header request we only need to populate the `value` property with the user name (Same as basic auth). If user name and password sent in body request we need to specify the `Key` and `Value`.
func (o JwtAuthModelResponseOutput) UserName() pulumi.StringMapOutput {
	return o.ApplyT(func(v JwtAuthModelResponse) map[string]string { return v.UserName }).(pulumi.StringMapOutput)
}

// The available data types for MCAS (Microsoft Cloud App Security) data connector.
type MCASDataConnectorDataTypes struct {
	// Alerts data type connection.
	Alerts *DataConnectorDataTypeCommon `pulumi:"alerts"`
	// Discovery log data type connection.
	DiscoveryLogs *DataConnectorDataTypeCommon `pulumi:"discoveryLogs"`
}

// MCASDataConnectorDataTypesInput is an input type that accepts MCASDataConnectorDataTypesArgs and MCASDataConnectorDataTypesOutput values.
// You can construct a concrete instance of `MCASDataConnectorDataTypesInput` via:
//
//	MCASDataConnectorDataTypesArgs{...}
type MCASDataConnectorDataTypesInput interface {
	pulumi.Input

	ToMCASDataConnectorDataTypesOutput() MCASDataConnectorDataTypesOutput
	ToMCASDataConnectorDataTypesOutputWithContext(context.Context) MCASDataConnectorDataTypesOutput
}

// The available data types for MCAS (Microsoft Cloud App Security) data connector.
type MCASDataConnectorDataTypesArgs struct {
	// Alerts data type connection.
	Alerts DataConnectorDataTypeCommonPtrInput `pulumi:"alerts"`
	// Discovery log data type connection.
	DiscoveryLogs DataConnectorDataTypeCommonPtrInput `pulumi:"discoveryLogs"`
}

func (MCASDataConnectorDataTypesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MCASDataConnectorDataTypes)(nil)).Elem()
}

func (i MCASDataConnectorDataTypesArgs) ToMCASDataConnectorDataTypesOutput() MCASDataConnectorDataTypesOutput {
	return i.ToMCASDataConnectorDataTypesOutputWithContext(context.Background())
}

func (i MCASDataConnectorDataTypesArgs) ToMCASDataConnectorDataTypesOutputWithContext(ctx context.Context) MCASDataConnectorDataTypesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MCASDataConnectorDataTypesOutput)
}

func (i MCASDataConnectorDataTypesArgs) ToMCASDataConnectorDataTypesPtrOutput() MCASDataConnectorDataTypesPtrOutput {
	return i.ToMCASDataConnectorDataTypesPtrOutputWithContext(context.Background())
}

func (i MCASDataConnectorDataTypesArgs) ToMCASDataConnectorDataTypesPtrOutputWithContext(ctx context.Context) MCASDataConnectorDataTypesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MCASDataConnectorDataTypesOutput).ToMCASDataConnectorDataTypesPtrOutputWithContext(ctx)
}

// MCASDataConnectorDataTypesPtrInput is an input type that accepts MCASDataConnectorDataTypesArgs, MCASDataConnectorDataTypesPtr and MCASDataConnectorDataTypesPtrOutput values.
// You can construct a concrete instance of `MCASDataConnectorDataTypesPtrInput` via:
//
//	        MCASDataConnectorDataTypesArgs{...}
//
//	or:
//
//	        nil
type MCASDataConnectorDataTypesPtrInput interface {
	pulumi.Input

	ToMCASDataConnectorDataTypesPtrOutput() MCASDataConnectorDataTypesPtrOutput
	ToMCASDataConnectorDataTypesPtrOutputWithContext(context.Context) MCASDataConnectorDataTypesPtrOutput
}

type mcasdataConnectorDataTypesPtrType MCASDataConnectorDataTypesArgs

func MCASDataConnectorDataTypesPtr(v *MCASDataConnectorDataTypesArgs) MCASDataConnectorDataTypesPtrInput {
	return (*mcasdataConnectorDataTypesPtrType)(v)
}

func (*mcasdataConnectorDataTypesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MCASDataConnectorDataTypes)(nil)).Elem()
}

func (i *mcasdataConnectorDataTypesPtrType) ToMCASDataConnectorDataTypesPtrOutput() MCASDataConnectorDataTypesPtrOutput {
	return i.ToMCASDataConnectorDataTypesPtrOutputWithContext(context.Background())
}

func (i *mcasdataConnectorDataTypesPtrType) ToMCASDataConnectorDataTypesPtrOutputWithContext(ctx context.Context) MCASDataConnectorDataTypesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MCASDataConnectorDataTypesPtrOutput)
}

// The available data types for MCAS (Microsoft Cloud App Security) data connector.
type MCASDataConnectorDataTypesOutput struct{ *pulumi.OutputState }

func (MCASDataConnectorDataTypesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MCASDataConnectorDataTypes)(nil)).Elem()
}

func (o MCASDataConnectorDataTypesOutput) ToMCASDataConnectorDataTypesOutput() MCASDataConnectorDataTypesOutput {
	return o
}

func (o MCASDataConnectorDataTypesOutput) ToMCASDataConnectorDataTypesOutputWithContext(ctx context.Context) MCASDataConnectorDataTypesOutput {
	return o
}

func (o MCASDataConnectorDataTypesOutput) ToMCASDataConnectorDataTypesPtrOutput() MCASDataConnectorDataTypesPtrOutput {
	return o.ToMCASDataConnectorDataTypesPtrOutputWithContext(context.Background())
}

func (o MCASDataConnectorDataTypesOutput) ToMCASDataConnectorDataTypesPtrOutputWithContext(ctx context.Context) MCASDataConnectorDataTypesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MCASDataConnectorDataTypes) *MCASDataConnectorDataTypes {
		return &v
	}).(MCASDataConnectorDataTypesPtrOutput)
}

// Alerts data type connection.
func (o MCASDataConnectorDataTypesOutput) Alerts() DataConnectorDataTypeCommonPtrOutput {
	return o.ApplyT(func(v MCASDataConnectorDataTypes) *DataConnectorDataTypeCommon { return v.Alerts }).(DataConnectorDataTypeCommonPtrOutput)
}

// Discovery log data type connection.
func (o MCASDataConnectorDataTypesOutput) DiscoveryLogs() DataConnectorDataTypeCommonPtrOutput {
	return o.ApplyT(func(v MCASDataConnectorDataTypes) *DataConnectorDataTypeCommon { return v.DiscoveryLogs }).(DataConnectorDataTypeCommonPtrOutput)
}

type MCASDataConnectorDataTypesPtrOutput struct{ *pulumi.OutputState }

func (MCASDataConnectorDataTypesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MCASDataConnectorDataTypes)(nil)).Elem()
}

func (o MCASDataConnectorDataTypesPtrOutput) ToMCASDataConnectorDataTypesPtrOutput() MCASDataConnectorDataTypesPtrOutput {
	return o
}

func (o MCASDataConnectorDataTypesPtrOutput) ToMCASDataConnectorDataTypesPtrOutputWithContext(ctx context.Context) MCASDataConnectorDataTypesPtrOutput {
	return o
}

func (o MCASDataConnectorDataTypesPtrOutput) Elem() MCASDataConnectorDataTypesOutput {
	return o.ApplyT(func(v *MCASDataConnectorDataTypes) MCASDataConnectorDataTypes {
		if v != nil {
			return *v
		}
		var ret MCASDataConnectorDataTypes
		return ret
	}).(MCASDataConnectorDataTypesOutput)
}

// Alerts data type connection.
func (o MCASDataConnectorDataTypesPtrOutput) Alerts() DataConnectorDataTypeCommonPtrOutput {
	return o.ApplyT(func(v *MCASDataConnectorDataTypes) *DataConnectorDataTypeCommon {
		if v == nil {
			return nil
		}
		return v.Alerts
	}).(DataConnectorDataTypeCommonPtrOutput)
}

// Discovery log data type connection.
func (o MCASDataConnectorDataTypesPtrOutput) DiscoveryLogs() DataConnectorDataTypeCommonPtrOutput {
	return o.ApplyT(func(v *MCASDataConnectorDataTypes) *DataConnectorDataTypeCommon {
		if v == nil {
			return nil
		}
		return v.DiscoveryLogs
	}).(DataConnectorDataTypeCommonPtrOutput)
}

// The available data types for MCAS (Microsoft Cloud App Security) data connector.
type MCASDataConnectorDataTypesResponse struct {
	// Alerts data type connection.
	Alerts *DataConnectorDataTypeCommonResponse `pulumi:"alerts"`
	// Discovery log data type connection.
	DiscoveryLogs *DataConnectorDataTypeCommonResponse `pulumi:"discoveryLogs"`
}

// The available data types for MCAS (Microsoft Cloud App Security) data connector.
type MCASDataConnectorDataTypesResponseOutput struct{ *pulumi.OutputState }

func (MCASDataConnectorDataTypesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MCASDataConnectorDataTypesResponse)(nil)).Elem()
}

func (o MCASDataConnectorDataTypesResponseOutput) ToMCASDataConnectorDataTypesResponseOutput() MCASDataConnectorDataTypesResponseOutput {
	return o
}

func (o MCASDataConnectorDataTypesResponseOutput) ToMCASDataConnectorDataTypesResponseOutputWithContext(ctx context.Context) MCASDataConnectorDataTypesResponseOutput {
	return o
}

// Alerts data type connection.
func (o MCASDataConnectorDataTypesResponseOutput) Alerts() DataConnectorDataTypeCommonResponsePtrOutput {
	return o.ApplyT(func(v MCASDataConnectorDataTypesResponse) *DataConnectorDataTypeCommonResponse { return v.Alerts }).(DataConnectorDataTypeCommonResponsePtrOutput)
}

// Discovery log data type connection.
func (o MCASDataConnectorDataTypesResponseOutput) DiscoveryLogs() DataConnectorDataTypeCommonResponsePtrOutput {
	return o.ApplyT(func(v MCASDataConnectorDataTypesResponse) *DataConnectorDataTypeCommonResponse {
		return v.DiscoveryLogs
	}).(DataConnectorDataTypeCommonResponsePtrOutput)
}

type MCASDataConnectorDataTypesResponsePtrOutput struct{ *pulumi.OutputState }

func (MCASDataConnectorDataTypesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MCASDataConnectorDataTypesResponse)(nil)).Elem()
}

func (o MCASDataConnectorDataTypesResponsePtrOutput) ToMCASDataConnectorDataTypesResponsePtrOutput() MCASDataConnectorDataTypesResponsePtrOutput {
	return o
}

func (o MCASDataConnectorDataTypesResponsePtrOutput) ToMCASDataConnectorDataTypesResponsePtrOutputWithContext(ctx context.Context) MCASDataConnectorDataTypesResponsePtrOutput {
	return o
}

func (o MCASDataConnectorDataTypesResponsePtrOutput) Elem() MCASDataConnectorDataTypesResponseOutput {
	return o.ApplyT(func(v *MCASDataConnectorDataTypesResponse) MCASDataConnectorDataTypesResponse {
		if v != nil {
			return *v
		}
		var ret MCASDataConnectorDataTypesResponse
		return ret
	}).(MCASDataConnectorDataTypesResponseOutput)
}

// Alerts data type connection.
func (o MCASDataConnectorDataTypesResponsePtrOutput) Alerts() DataConnectorDataTypeCommonResponsePtrOutput {
	return o.ApplyT(func(v *MCASDataConnectorDataTypesResponse) *DataConnectorDataTypeCommonResponse {
		if v == nil {
			return nil
		}
		return v.Alerts
	}).(DataConnectorDataTypeCommonResponsePtrOutput)
}

// Discovery log data type connection.
func (o MCASDataConnectorDataTypesResponsePtrOutput) DiscoveryLogs() DataConnectorDataTypeCommonResponsePtrOutput {
	return o.ApplyT(func(v *MCASDataConnectorDataTypesResponse) *DataConnectorDataTypeCommonResponse {
		if v == nil {
			return nil
		}
		return v.DiscoveryLogs
	}).(DataConnectorDataTypeCommonResponsePtrOutput)
}

// The available data types for Microsoft Threat Intelligence data connector.
type MSTIDataConnectorDataTypes struct {
	// Data type for Microsoft Threat Intelligence data connector.
	MicrosoftEmergingThreatFeed MSTIDataConnectorDataTypesMicrosoftEmergingThreatFeed `pulumi:"microsoftEmergingThreatFeed"`
}

// MSTIDataConnectorDataTypesInput is an input type that accepts MSTIDataConnectorDataTypesArgs and MSTIDataConnectorDataTypesOutput values.
// You can construct a concrete instance of `MSTIDataConnectorDataTypesInput` via:
//
//	MSTIDataConnectorDataTypesArgs{...}
type MSTIDataConnectorDataTypesInput interface {
	pulumi.Input

	ToMSTIDataConnectorDataTypesOutput() MSTIDataConnectorDataTypesOutput
	ToMSTIDataConnectorDataTypesOutputWithContext(context.Context) MSTIDataConnectorDataTypesOutput
}

// The available data types for Microsoft Threat Intelligence data connector.
type MSTIDataConnectorDataTypesArgs struct {
	// Data type for Microsoft Threat Intelligence data connector.
	MicrosoftEmergingThreatFeed MSTIDataConnectorDataTypesMicrosoftEmergingThreatFeedInput `pulumi:"microsoftEmergingThreatFeed"`
}

func (MSTIDataConnectorDataTypesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MSTIDataConnectorDataTypes)(nil)).Elem()
}

func (i MSTIDataConnectorDataTypesArgs) ToMSTIDataConnectorDataTypesOutput() MSTIDataConnectorDataTypesOutput {
	return i.ToMSTIDataConnectorDataTypesOutputWithContext(context.Background())
}

func (i MSTIDataConnectorDataTypesArgs) ToMSTIDataConnectorDataTypesOutputWithContext(ctx context.Context) MSTIDataConnectorDataTypesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MSTIDataConnectorDataTypesOutput)
}

// The available data types for Microsoft Threat Intelligence data connector.
type MSTIDataConnectorDataTypesOutput struct{ *pulumi.OutputState }

func (MSTIDataConnectorDataTypesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MSTIDataConnectorDataTypes)(nil)).Elem()
}

func (o MSTIDataConnectorDataTypesOutput) ToMSTIDataConnectorDataTypesOutput() MSTIDataConnectorDataTypesOutput {
	return o
}

func (o MSTIDataConnectorDataTypesOutput) ToMSTIDataConnectorDataTypesOutputWithContext(ctx context.Context) MSTIDataConnectorDataTypesOutput {
	return o
}

// Data type for Microsoft Threat Intelligence data connector.
func (o MSTIDataConnectorDataTypesOutput) MicrosoftEmergingThreatFeed() MSTIDataConnectorDataTypesMicrosoftEmergingThreatFeedOutput {
	return o.ApplyT(func(v MSTIDataConnectorDataTypes) MSTIDataConnectorDataTypesMicrosoftEmergingThreatFeed {
		return v.MicrosoftEmergingThreatFeed
	}).(MSTIDataConnectorDataTypesMicrosoftEmergingThreatFeedOutput)
}

// Data type for Microsoft Threat Intelligence data connector.
type MSTIDataConnectorDataTypesMicrosoftEmergingThreatFeed struct {
	// The lookback period for the feed to be imported. The date-time to begin importing the feed from, for example: 2024-01-01T00:00:00.000Z.
	LookbackPeriod string `pulumi:"lookbackPeriod"`
	// Describe whether this data type connection is enabled or not.
	State *string `pulumi:"state"`
}

// MSTIDataConnectorDataTypesMicrosoftEmergingThreatFeedInput is an input type that accepts MSTIDataConnectorDataTypesMicrosoftEmergingThreatFeedArgs and MSTIDataConnectorDataTypesMicrosoftEmergingThreatFeedOutput values.
// You can construct a concrete instance of `MSTIDataConnectorDataTypesMicrosoftEmergingThreatFeedInput` via:
//
//	MSTIDataConnectorDataTypesMicrosoftEmergingThreatFeedArgs{...}
type MSTIDataConnectorDataTypesMicrosoftEmergingThreatFeedInput interface {
	pulumi.Input

	ToMSTIDataConnectorDataTypesMicrosoftEmergingThreatFeedOutput() MSTIDataConnectorDataTypesMicrosoftEmergingThreatFeedOutput
	ToMSTIDataConnectorDataTypesMicrosoftEmergingThreatFeedOutputWithContext(context.Context) MSTIDataConnectorDataTypesMicrosoftEmergingThreatFeedOutput
}

// Data type for Microsoft Threat Intelligence data connector.
type MSTIDataConnectorDataTypesMicrosoftEmergingThreatFeedArgs struct {
	// The lookback period for the feed to be imported. The date-time to begin importing the feed from, for example: 2024-01-01T00:00:00.000Z.
	LookbackPeriod pulumi.StringInput `pulumi:"lookbackPeriod"`
	// Describe whether this data type connection is enabled or not.
	State pulumi.StringPtrInput `pulumi:"state"`
}

func (MSTIDataConnectorDataTypesMicrosoftEmergingThreatFeedArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MSTIDataConnectorDataTypesMicrosoftEmergingThreatFeed)(nil)).Elem()
}

func (i MSTIDataConnectorDataTypesMicrosoftEmergingThreatFeedArgs) ToMSTIDataConnectorDataTypesMicrosoftEmergingThreatFeedOutput() MSTIDataConnectorDataTypesMicrosoftEmergingThreatFeedOutput {
	return i.ToMSTIDataConnectorDataTypesMicrosoftEmergingThreatFeedOutputWithContext(context.Background())
}

func (i MSTIDataConnectorDataTypesMicrosoftEmergingThreatFeedArgs) ToMSTIDataConnectorDataTypesMicrosoftEmergingThreatFeedOutputWithContext(ctx context.Context) MSTIDataConnectorDataTypesMicrosoftEmergingThreatFeedOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MSTIDataConnectorDataTypesMicrosoftEmergingThreatFeedOutput)
}

// Data type for Microsoft Threat Intelligence data connector.
type MSTIDataConnectorDataTypesMicrosoftEmergingThreatFeedOutput struct{ *pulumi.OutputState }

func (MSTIDataConnectorDataTypesMicrosoftEmergingThreatFeedOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MSTIDataConnectorDataTypesMicrosoftEmergingThreatFeed)(nil)).Elem()
}

func (o MSTIDataConnectorDataTypesMicrosoftEmergingThreatFeedOutput) ToMSTIDataConnectorDataTypesMicrosoftEmergingThreatFeedOutput() MSTIDataConnectorDataTypesMicrosoftEmergingThreatFeedOutput {
	return o
}

func (o MSTIDataConnectorDataTypesMicrosoftEmergingThreatFeedOutput) ToMSTIDataConnectorDataTypesMicrosoftEmergingThreatFeedOutputWithContext(ctx context.Context) MSTIDataConnectorDataTypesMicrosoftEmergingThreatFeedOutput {
	return o
}

// The lookback period for the feed to be imported. The date-time to begin importing the feed from, for example: 2024-01-01T00:00:00.000Z.
func (o MSTIDataConnectorDataTypesMicrosoftEmergingThreatFeedOutput) LookbackPeriod() pulumi.StringOutput {
	return o.ApplyT(func(v MSTIDataConnectorDataTypesMicrosoftEmergingThreatFeed) string { return v.LookbackPeriod }).(pulumi.StringOutput)
}

// Describe whether this data type connection is enabled or not.
func (o MSTIDataConnectorDataTypesMicrosoftEmergingThreatFeedOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MSTIDataConnectorDataTypesMicrosoftEmergingThreatFeed) *string { return v.State }).(pulumi.StringPtrOutput)
}

// The available data types for Microsoft Threat Intelligence data connector.
type MSTIDataConnectorDataTypesResponse struct {
	// Data type for Microsoft Threat Intelligence data connector.
	MicrosoftEmergingThreatFeed MSTIDataConnectorDataTypesResponseMicrosoftEmergingThreatFeed `pulumi:"microsoftEmergingThreatFeed"`
}

// The available data types for Microsoft Threat Intelligence data connector.
type MSTIDataConnectorDataTypesResponseOutput struct{ *pulumi.OutputState }

func (MSTIDataConnectorDataTypesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MSTIDataConnectorDataTypesResponse)(nil)).Elem()
}

func (o MSTIDataConnectorDataTypesResponseOutput) ToMSTIDataConnectorDataTypesResponseOutput() MSTIDataConnectorDataTypesResponseOutput {
	return o
}

func (o MSTIDataConnectorDataTypesResponseOutput) ToMSTIDataConnectorDataTypesResponseOutputWithContext(ctx context.Context) MSTIDataConnectorDataTypesResponseOutput {
	return o
}

// Data type for Microsoft Threat Intelligence data connector.
func (o MSTIDataConnectorDataTypesResponseOutput) MicrosoftEmergingThreatFeed() MSTIDataConnectorDataTypesResponseMicrosoftEmergingThreatFeedOutput {
	return o.ApplyT(func(v MSTIDataConnectorDataTypesResponse) MSTIDataConnectorDataTypesResponseMicrosoftEmergingThreatFeed {
		return v.MicrosoftEmergingThreatFeed
	}).(MSTIDataConnectorDataTypesResponseMicrosoftEmergingThreatFeedOutput)
}

// Data type for Microsoft Threat Intelligence data connector.
type MSTIDataConnectorDataTypesResponseMicrosoftEmergingThreatFeed struct {
	// The lookback period for the feed to be imported. The date-time to begin importing the feed from, for example: 2024-01-01T00:00:00.000Z.
	LookbackPeriod string `pulumi:"lookbackPeriod"`
	// Describe whether this data type connection is enabled or not.
	State *string `pulumi:"state"`
}

// Data type for Microsoft Threat Intelligence data connector.
type MSTIDataConnectorDataTypesResponseMicrosoftEmergingThreatFeedOutput struct{ *pulumi.OutputState }

func (MSTIDataConnectorDataTypesResponseMicrosoftEmergingThreatFeedOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MSTIDataConnectorDataTypesResponseMicrosoftEmergingThreatFeed)(nil)).Elem()
}

func (o MSTIDataConnectorDataTypesResponseMicrosoftEmergingThreatFeedOutput) ToMSTIDataConnectorDataTypesResponseMicrosoftEmergingThreatFeedOutput() MSTIDataConnectorDataTypesResponseMicrosoftEmergingThreatFeedOutput {
	return o
}

func (o MSTIDataConnectorDataTypesResponseMicrosoftEmergingThreatFeedOutput) ToMSTIDataConnectorDataTypesResponseMicrosoftEmergingThreatFeedOutputWithContext(ctx context.Context) MSTIDataConnectorDataTypesResponseMicrosoftEmergingThreatFeedOutput {
	return o
}

// The lookback period for the feed to be imported. The date-time to begin importing the feed from, for example: 2024-01-01T00:00:00.000Z.
func (o MSTIDataConnectorDataTypesResponseMicrosoftEmergingThreatFeedOutput) LookbackPeriod() pulumi.StringOutput {
	return o.ApplyT(func(v MSTIDataConnectorDataTypesResponseMicrosoftEmergingThreatFeed) string { return v.LookbackPeriod }).(pulumi.StringOutput)
}

// Describe whether this data type connection is enabled or not.
func (o MSTIDataConnectorDataTypesResponseMicrosoftEmergingThreatFeedOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MSTIDataConnectorDataTypesResponseMicrosoftEmergingThreatFeed) *string { return v.State }).(pulumi.StringPtrOutput)
}

// Publisher or creator of the content item.
type MetadataAuthor struct {
	// Email of author contact
	Email *string `pulumi:"email"`
	// Link for author/vendor page
	Link *string `pulumi:"link"`
	// Name of the author. Company or person.
	Name *string `pulumi:"name"`
}

// MetadataAuthorInput is an input type that accepts MetadataAuthorArgs and MetadataAuthorOutput values.
// You can construct a concrete instance of `MetadataAuthorInput` via:
//
//	MetadataAuthorArgs{...}
type MetadataAuthorInput interface {
	pulumi.Input

	ToMetadataAuthorOutput() MetadataAuthorOutput
	ToMetadataAuthorOutputWithContext(context.Context) MetadataAuthorOutput
}

// Publisher or creator of the content item.
type MetadataAuthorArgs struct {
	// Email of author contact
	Email pulumi.StringPtrInput `pulumi:"email"`
	// Link for author/vendor page
	Link pulumi.StringPtrInput `pulumi:"link"`
	// Name of the author. Company or person.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (MetadataAuthorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MetadataAuthor)(nil)).Elem()
}

func (i MetadataAuthorArgs) ToMetadataAuthorOutput() MetadataAuthorOutput {
	return i.ToMetadataAuthorOutputWithContext(context.Background())
}

func (i MetadataAuthorArgs) ToMetadataAuthorOutputWithContext(ctx context.Context) MetadataAuthorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetadataAuthorOutput)
}

func (i MetadataAuthorArgs) ToMetadataAuthorPtrOutput() MetadataAuthorPtrOutput {
	return i.ToMetadataAuthorPtrOutputWithContext(context.Background())
}

func (i MetadataAuthorArgs) ToMetadataAuthorPtrOutputWithContext(ctx context.Context) MetadataAuthorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetadataAuthorOutput).ToMetadataAuthorPtrOutputWithContext(ctx)
}

// MetadataAuthorPtrInput is an input type that accepts MetadataAuthorArgs, MetadataAuthorPtr and MetadataAuthorPtrOutput values.
// You can construct a concrete instance of `MetadataAuthorPtrInput` via:
//
//	        MetadataAuthorArgs{...}
//
//	or:
//
//	        nil
type MetadataAuthorPtrInput interface {
	pulumi.Input

	ToMetadataAuthorPtrOutput() MetadataAuthorPtrOutput
	ToMetadataAuthorPtrOutputWithContext(context.Context) MetadataAuthorPtrOutput
}

type metadataAuthorPtrType MetadataAuthorArgs

func MetadataAuthorPtr(v *MetadataAuthorArgs) MetadataAuthorPtrInput {
	return (*metadataAuthorPtrType)(v)
}

func (*metadataAuthorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MetadataAuthor)(nil)).Elem()
}

func (i *metadataAuthorPtrType) ToMetadataAuthorPtrOutput() MetadataAuthorPtrOutput {
	return i.ToMetadataAuthorPtrOutputWithContext(context.Background())
}

func (i *metadataAuthorPtrType) ToMetadataAuthorPtrOutputWithContext(ctx context.Context) MetadataAuthorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetadataAuthorPtrOutput)
}

// Publisher or creator of the content item.
type MetadataAuthorOutput struct{ *pulumi.OutputState }

func (MetadataAuthorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MetadataAuthor)(nil)).Elem()
}

func (o MetadataAuthorOutput) ToMetadataAuthorOutput() MetadataAuthorOutput {
	return o
}

func (o MetadataAuthorOutput) ToMetadataAuthorOutputWithContext(ctx context.Context) MetadataAuthorOutput {
	return o
}

func (o MetadataAuthorOutput) ToMetadataAuthorPtrOutput() MetadataAuthorPtrOutput {
	return o.ToMetadataAuthorPtrOutputWithContext(context.Background())
}

func (o MetadataAuthorOutput) ToMetadataAuthorPtrOutputWithContext(ctx context.Context) MetadataAuthorPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MetadataAuthor) *MetadataAuthor {
		return &v
	}).(MetadataAuthorPtrOutput)
}

// Email of author contact
func (o MetadataAuthorOutput) Email() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MetadataAuthor) *string { return v.Email }).(pulumi.StringPtrOutput)
}

// Link for author/vendor page
func (o MetadataAuthorOutput) Link() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MetadataAuthor) *string { return v.Link }).(pulumi.StringPtrOutput)
}

// Name of the author. Company or person.
func (o MetadataAuthorOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MetadataAuthor) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type MetadataAuthorPtrOutput struct{ *pulumi.OutputState }

func (MetadataAuthorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MetadataAuthor)(nil)).Elem()
}

func (o MetadataAuthorPtrOutput) ToMetadataAuthorPtrOutput() MetadataAuthorPtrOutput {
	return o
}

func (o MetadataAuthorPtrOutput) ToMetadataAuthorPtrOutputWithContext(ctx context.Context) MetadataAuthorPtrOutput {
	return o
}

func (o MetadataAuthorPtrOutput) Elem() MetadataAuthorOutput {
	return o.ApplyT(func(v *MetadataAuthor) MetadataAuthor {
		if v != nil {
			return *v
		}
		var ret MetadataAuthor
		return ret
	}).(MetadataAuthorOutput)
}

// Email of author contact
func (o MetadataAuthorPtrOutput) Email() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MetadataAuthor) *string {
		if v == nil {
			return nil
		}
		return v.Email
	}).(pulumi.StringPtrOutput)
}

// Link for author/vendor page
func (o MetadataAuthorPtrOutput) Link() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MetadataAuthor) *string {
		if v == nil {
			return nil
		}
		return v.Link
	}).(pulumi.StringPtrOutput)
}

// Name of the author. Company or person.
func (o MetadataAuthorPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MetadataAuthor) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Publisher or creator of the content item.
type MetadataAuthorResponse struct {
	// Email of author contact
	Email *string `pulumi:"email"`
	// Link for author/vendor page
	Link *string `pulumi:"link"`
	// Name of the author. Company or person.
	Name *string `pulumi:"name"`
}

// Publisher or creator of the content item.
type MetadataAuthorResponseOutput struct{ *pulumi.OutputState }

func (MetadataAuthorResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MetadataAuthorResponse)(nil)).Elem()
}

func (o MetadataAuthorResponseOutput) ToMetadataAuthorResponseOutput() MetadataAuthorResponseOutput {
	return o
}

func (o MetadataAuthorResponseOutput) ToMetadataAuthorResponseOutputWithContext(ctx context.Context) MetadataAuthorResponseOutput {
	return o
}

// Email of author contact
func (o MetadataAuthorResponseOutput) Email() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MetadataAuthorResponse) *string { return v.Email }).(pulumi.StringPtrOutput)
}

// Link for author/vendor page
func (o MetadataAuthorResponseOutput) Link() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MetadataAuthorResponse) *string { return v.Link }).(pulumi.StringPtrOutput)
}

// Name of the author. Company or person.
func (o MetadataAuthorResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MetadataAuthorResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type MetadataAuthorResponsePtrOutput struct{ *pulumi.OutputState }

func (MetadataAuthorResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MetadataAuthorResponse)(nil)).Elem()
}

func (o MetadataAuthorResponsePtrOutput) ToMetadataAuthorResponsePtrOutput() MetadataAuthorResponsePtrOutput {
	return o
}

func (o MetadataAuthorResponsePtrOutput) ToMetadataAuthorResponsePtrOutputWithContext(ctx context.Context) MetadataAuthorResponsePtrOutput {
	return o
}

func (o MetadataAuthorResponsePtrOutput) Elem() MetadataAuthorResponseOutput {
	return o.ApplyT(func(v *MetadataAuthorResponse) MetadataAuthorResponse {
		if v != nil {
			return *v
		}
		var ret MetadataAuthorResponse
		return ret
	}).(MetadataAuthorResponseOutput)
}

// Email of author contact
func (o MetadataAuthorResponsePtrOutput) Email() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MetadataAuthorResponse) *string {
		if v == nil {
			return nil
		}
		return v.Email
	}).(pulumi.StringPtrOutput)
}

// Link for author/vendor page
func (o MetadataAuthorResponsePtrOutput) Link() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MetadataAuthorResponse) *string {
		if v == nil {
			return nil
		}
		return v.Link
	}).(pulumi.StringPtrOutput)
}

// Name of the author. Company or person.
func (o MetadataAuthorResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MetadataAuthorResponse) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// ies for the solution content item
type MetadataCategories struct {
	// domain for the solution content item
	Domains []string `pulumi:"domains"`
	// Industry verticals for the solution content item
	Verticals []string `pulumi:"verticals"`
}

// MetadataCategoriesInput is an input type that accepts MetadataCategoriesArgs and MetadataCategoriesOutput values.
// You can construct a concrete instance of `MetadataCategoriesInput` via:
//
//	MetadataCategoriesArgs{...}
type MetadataCategoriesInput interface {
	pulumi.Input

	ToMetadataCategoriesOutput() MetadataCategoriesOutput
	ToMetadataCategoriesOutputWithContext(context.Context) MetadataCategoriesOutput
}

// ies for the solution content item
type MetadataCategoriesArgs struct {
	// domain for the solution content item
	Domains pulumi.StringArrayInput `pulumi:"domains"`
	// Industry verticals for the solution content item
	Verticals pulumi.StringArrayInput `pulumi:"verticals"`
}

func (MetadataCategoriesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MetadataCategories)(nil)).Elem()
}

func (i MetadataCategoriesArgs) ToMetadataCategoriesOutput() MetadataCategoriesOutput {
	return i.ToMetadataCategoriesOutputWithContext(context.Background())
}

func (i MetadataCategoriesArgs) ToMetadataCategoriesOutputWithContext(ctx context.Context) MetadataCategoriesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetadataCategoriesOutput)
}

func (i MetadataCategoriesArgs) ToMetadataCategoriesPtrOutput() MetadataCategoriesPtrOutput {
	return i.ToMetadataCategoriesPtrOutputWithContext(context.Background())
}

func (i MetadataCategoriesArgs) ToMetadataCategoriesPtrOutputWithContext(ctx context.Context) MetadataCategoriesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetadataCategoriesOutput).ToMetadataCategoriesPtrOutputWithContext(ctx)
}

// MetadataCategoriesPtrInput is an input type that accepts MetadataCategoriesArgs, MetadataCategoriesPtr and MetadataCategoriesPtrOutput values.
// You can construct a concrete instance of `MetadataCategoriesPtrInput` via:
//
//	        MetadataCategoriesArgs{...}
//
//	or:
//
//	        nil
type MetadataCategoriesPtrInput interface {
	pulumi.Input

	ToMetadataCategoriesPtrOutput() MetadataCategoriesPtrOutput
	ToMetadataCategoriesPtrOutputWithContext(context.Context) MetadataCategoriesPtrOutput
}

type metadataCategoriesPtrType MetadataCategoriesArgs

func MetadataCategoriesPtr(v *MetadataCategoriesArgs) MetadataCategoriesPtrInput {
	return (*metadataCategoriesPtrType)(v)
}

func (*metadataCategoriesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MetadataCategories)(nil)).Elem()
}

func (i *metadataCategoriesPtrType) ToMetadataCategoriesPtrOutput() MetadataCategoriesPtrOutput {
	return i.ToMetadataCategoriesPtrOutputWithContext(context.Background())
}

func (i *metadataCategoriesPtrType) ToMetadataCategoriesPtrOutputWithContext(ctx context.Context) MetadataCategoriesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetadataCategoriesPtrOutput)
}

// ies for the solution content item
type MetadataCategoriesOutput struct{ *pulumi.OutputState }

func (MetadataCategoriesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MetadataCategories)(nil)).Elem()
}

func (o MetadataCategoriesOutput) ToMetadataCategoriesOutput() MetadataCategoriesOutput {
	return o
}

func (o MetadataCategoriesOutput) ToMetadataCategoriesOutputWithContext(ctx context.Context) MetadataCategoriesOutput {
	return o
}

func (o MetadataCategoriesOutput) ToMetadataCategoriesPtrOutput() MetadataCategoriesPtrOutput {
	return o.ToMetadataCategoriesPtrOutputWithContext(context.Background())
}

func (o MetadataCategoriesOutput) ToMetadataCategoriesPtrOutputWithContext(ctx context.Context) MetadataCategoriesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MetadataCategories) *MetadataCategories {
		return &v
	}).(MetadataCategoriesPtrOutput)
}

// domain for the solution content item
func (o MetadataCategoriesOutput) Domains() pulumi.StringArrayOutput {
	return o.ApplyT(func(v MetadataCategories) []string { return v.Domains }).(pulumi.StringArrayOutput)
}

// Industry verticals for the solution content item
func (o MetadataCategoriesOutput) Verticals() pulumi.StringArrayOutput {
	return o.ApplyT(func(v MetadataCategories) []string { return v.Verticals }).(pulumi.StringArrayOutput)
}

type MetadataCategoriesPtrOutput struct{ *pulumi.OutputState }

func (MetadataCategoriesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MetadataCategories)(nil)).Elem()
}

func (o MetadataCategoriesPtrOutput) ToMetadataCategoriesPtrOutput() MetadataCategoriesPtrOutput {
	return o
}

func (o MetadataCategoriesPtrOutput) ToMetadataCategoriesPtrOutputWithContext(ctx context.Context) MetadataCategoriesPtrOutput {
	return o
}

func (o MetadataCategoriesPtrOutput) Elem() MetadataCategoriesOutput {
	return o.ApplyT(func(v *MetadataCategories) MetadataCategories {
		if v != nil {
			return *v
		}
		var ret MetadataCategories
		return ret
	}).(MetadataCategoriesOutput)
}

// domain for the solution content item
func (o MetadataCategoriesPtrOutput) Domains() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *MetadataCategories) []string {
		if v == nil {
			return nil
		}
		return v.Domains
	}).(pulumi.StringArrayOutput)
}

// Industry verticals for the solution content item
func (o MetadataCategoriesPtrOutput) Verticals() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *MetadataCategories) []string {
		if v == nil {
			return nil
		}
		return v.Verticals
	}).(pulumi.StringArrayOutput)
}

// ies for the solution content item
type MetadataCategoriesResponse struct {
	// domain for the solution content item
	Domains []string `pulumi:"domains"`
	// Industry verticals for the solution content item
	Verticals []string `pulumi:"verticals"`
}

// ies for the solution content item
type MetadataCategoriesResponseOutput struct{ *pulumi.OutputState }

func (MetadataCategoriesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MetadataCategoriesResponse)(nil)).Elem()
}

func (o MetadataCategoriesResponseOutput) ToMetadataCategoriesResponseOutput() MetadataCategoriesResponseOutput {
	return o
}

func (o MetadataCategoriesResponseOutput) ToMetadataCategoriesResponseOutputWithContext(ctx context.Context) MetadataCategoriesResponseOutput {
	return o
}

// domain for the solution content item
func (o MetadataCategoriesResponseOutput) Domains() pulumi.StringArrayOutput {
	return o.ApplyT(func(v MetadataCategoriesResponse) []string { return v.Domains }).(pulumi.StringArrayOutput)
}

// Industry verticals for the solution content item
func (o MetadataCategoriesResponseOutput) Verticals() pulumi.StringArrayOutput {
	return o.ApplyT(func(v MetadataCategoriesResponse) []string { return v.Verticals }).(pulumi.StringArrayOutput)
}

type MetadataCategoriesResponsePtrOutput struct{ *pulumi.OutputState }

func (MetadataCategoriesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MetadataCategoriesResponse)(nil)).Elem()
}

func (o MetadataCategoriesResponsePtrOutput) ToMetadataCategoriesResponsePtrOutput() MetadataCategoriesResponsePtrOutput {
	return o
}

func (o MetadataCategoriesResponsePtrOutput) ToMetadataCategoriesResponsePtrOutputWithContext(ctx context.Context) MetadataCategoriesResponsePtrOutput {
	return o
}

func (o MetadataCategoriesResponsePtrOutput) Elem() MetadataCategoriesResponseOutput {
	return o.ApplyT(func(v *MetadataCategoriesResponse) MetadataCategoriesResponse {
		if v != nil {
			return *v
		}
		var ret MetadataCategoriesResponse
		return ret
	}).(MetadataCategoriesResponseOutput)
}

// domain for the solution content item
func (o MetadataCategoriesResponsePtrOutput) Domains() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *MetadataCategoriesResponse) []string {
		if v == nil {
			return nil
		}
		return v.Domains
	}).(pulumi.StringArrayOutput)
}

// Industry verticals for the solution content item
func (o MetadataCategoriesResponsePtrOutput) Verticals() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *MetadataCategoriesResponse) []string {
		if v == nil {
			return nil
		}
		return v.Verticals
	}).(pulumi.StringArrayOutput)
}

// Dependencies for the content item, what other content items it requires to work.  Can describe more complex dependencies using a recursive/nested structure. For a single dependency an id/kind/version can be supplied or operator/criteria for complex dependencies.
type MetadataDependencies struct {
	// Id of the content item we depend on
	ContentId *string `pulumi:"contentId"`
	// This is the list of dependencies we must fulfill, according to the AND/OR operator
	Criteria []MetadataDependencies `pulumi:"criteria"`
	// Type of the content item we depend on
	Kind *string `pulumi:"kind"`
	// Name of the content item
	Name *string `pulumi:"name"`
	// Operator used for list of dependencies in criteria array.
	Operator *string `pulumi:"operator"`
	// Version of the the content item we depend on.  Can be blank, * or missing to indicate any version fulfills the dependency.  If version does not match our defined numeric format then an exact match is required.
	Version *string `pulumi:"version"`
}

// MetadataDependenciesInput is an input type that accepts MetadataDependenciesArgs and MetadataDependenciesOutput values.
// You can construct a concrete instance of `MetadataDependenciesInput` via:
//
//	MetadataDependenciesArgs{...}
type MetadataDependenciesInput interface {
	pulumi.Input

	ToMetadataDependenciesOutput() MetadataDependenciesOutput
	ToMetadataDependenciesOutputWithContext(context.Context) MetadataDependenciesOutput
}

// Dependencies for the content item, what other content items it requires to work.  Can describe more complex dependencies using a recursive/nested structure. For a single dependency an id/kind/version can be supplied or operator/criteria for complex dependencies.
type MetadataDependenciesArgs struct {
	// Id of the content item we depend on
	ContentId pulumi.StringPtrInput `pulumi:"contentId"`
	// This is the list of dependencies we must fulfill, according to the AND/OR operator
	Criteria MetadataDependenciesArrayInput `pulumi:"criteria"`
	// Type of the content item we depend on
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Name of the content item
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Operator used for list of dependencies in criteria array.
	Operator pulumi.StringPtrInput `pulumi:"operator"`
	// Version of the the content item we depend on.  Can be blank, * or missing to indicate any version fulfills the dependency.  If version does not match our defined numeric format then an exact match is required.
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (MetadataDependenciesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MetadataDependencies)(nil)).Elem()
}

func (i MetadataDependenciesArgs) ToMetadataDependenciesOutput() MetadataDependenciesOutput {
	return i.ToMetadataDependenciesOutputWithContext(context.Background())
}

func (i MetadataDependenciesArgs) ToMetadataDependenciesOutputWithContext(ctx context.Context) MetadataDependenciesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetadataDependenciesOutput)
}

func (i MetadataDependenciesArgs) ToMetadataDependenciesPtrOutput() MetadataDependenciesPtrOutput {
	return i.ToMetadataDependenciesPtrOutputWithContext(context.Background())
}

func (i MetadataDependenciesArgs) ToMetadataDependenciesPtrOutputWithContext(ctx context.Context) MetadataDependenciesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetadataDependenciesOutput).ToMetadataDependenciesPtrOutputWithContext(ctx)
}

// MetadataDependenciesPtrInput is an input type that accepts MetadataDependenciesArgs, MetadataDependenciesPtr and MetadataDependenciesPtrOutput values.
// You can construct a concrete instance of `MetadataDependenciesPtrInput` via:
//
//	        MetadataDependenciesArgs{...}
//
//	or:
//
//	        nil
type MetadataDependenciesPtrInput interface {
	pulumi.Input

	ToMetadataDependenciesPtrOutput() MetadataDependenciesPtrOutput
	ToMetadataDependenciesPtrOutputWithContext(context.Context) MetadataDependenciesPtrOutput
}

type metadataDependenciesPtrType MetadataDependenciesArgs

func MetadataDependenciesPtr(v *MetadataDependenciesArgs) MetadataDependenciesPtrInput {
	return (*metadataDependenciesPtrType)(v)
}

func (*metadataDependenciesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MetadataDependencies)(nil)).Elem()
}

func (i *metadataDependenciesPtrType) ToMetadataDependenciesPtrOutput() MetadataDependenciesPtrOutput {
	return i.ToMetadataDependenciesPtrOutputWithContext(context.Background())
}

func (i *metadataDependenciesPtrType) ToMetadataDependenciesPtrOutputWithContext(ctx context.Context) MetadataDependenciesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetadataDependenciesPtrOutput)
}

// MetadataDependenciesArrayInput is an input type that accepts MetadataDependenciesArray and MetadataDependenciesArrayOutput values.
// You can construct a concrete instance of `MetadataDependenciesArrayInput` via:
//
//	MetadataDependenciesArray{ MetadataDependenciesArgs{...} }
type MetadataDependenciesArrayInput interface {
	pulumi.Input

	ToMetadataDependenciesArrayOutput() MetadataDependenciesArrayOutput
	ToMetadataDependenciesArrayOutputWithContext(context.Context) MetadataDependenciesArrayOutput
}

type MetadataDependenciesArray []MetadataDependenciesInput

func (MetadataDependenciesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MetadataDependencies)(nil)).Elem()
}

func (i MetadataDependenciesArray) ToMetadataDependenciesArrayOutput() MetadataDependenciesArrayOutput {
	return i.ToMetadataDependenciesArrayOutputWithContext(context.Background())
}

func (i MetadataDependenciesArray) ToMetadataDependenciesArrayOutputWithContext(ctx context.Context) MetadataDependenciesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetadataDependenciesArrayOutput)
}

// Dependencies for the content item, what other content items it requires to work.  Can describe more complex dependencies using a recursive/nested structure. For a single dependency an id/kind/version can be supplied or operator/criteria for complex dependencies.
type MetadataDependenciesOutput struct{ *pulumi.OutputState }

func (MetadataDependenciesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MetadataDependencies)(nil)).Elem()
}

func (o MetadataDependenciesOutput) ToMetadataDependenciesOutput() MetadataDependenciesOutput {
	return o
}

func (o MetadataDependenciesOutput) ToMetadataDependenciesOutputWithContext(ctx context.Context) MetadataDependenciesOutput {
	return o
}

func (o MetadataDependenciesOutput) ToMetadataDependenciesPtrOutput() MetadataDependenciesPtrOutput {
	return o.ToMetadataDependenciesPtrOutputWithContext(context.Background())
}

func (o MetadataDependenciesOutput) ToMetadataDependenciesPtrOutputWithContext(ctx context.Context) MetadataDependenciesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MetadataDependencies) *MetadataDependencies {
		return &v
	}).(MetadataDependenciesPtrOutput)
}

// Id of the content item we depend on
func (o MetadataDependenciesOutput) ContentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MetadataDependencies) *string { return v.ContentId }).(pulumi.StringPtrOutput)
}

// This is the list of dependencies we must fulfill, according to the AND/OR operator
func (o MetadataDependenciesOutput) Criteria() MetadataDependenciesArrayOutput {
	return o.ApplyT(func(v MetadataDependencies) []MetadataDependencies { return v.Criteria }).(MetadataDependenciesArrayOutput)
}

// Type of the content item we depend on
func (o MetadataDependenciesOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MetadataDependencies) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Name of the content item
func (o MetadataDependenciesOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MetadataDependencies) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Operator used for list of dependencies in criteria array.
func (o MetadataDependenciesOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MetadataDependencies) *string { return v.Operator }).(pulumi.StringPtrOutput)
}

// Version of the the content item we depend on.  Can be blank, * or missing to indicate any version fulfills the dependency.  If version does not match our defined numeric format then an exact match is required.
func (o MetadataDependenciesOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MetadataDependencies) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type MetadataDependenciesPtrOutput struct{ *pulumi.OutputState }

func (MetadataDependenciesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MetadataDependencies)(nil)).Elem()
}

func (o MetadataDependenciesPtrOutput) ToMetadataDependenciesPtrOutput() MetadataDependenciesPtrOutput {
	return o
}

func (o MetadataDependenciesPtrOutput) ToMetadataDependenciesPtrOutputWithContext(ctx context.Context) MetadataDependenciesPtrOutput {
	return o
}

func (o MetadataDependenciesPtrOutput) Elem() MetadataDependenciesOutput {
	return o.ApplyT(func(v *MetadataDependencies) MetadataDependencies {
		if v != nil {
			return *v
		}
		var ret MetadataDependencies
		return ret
	}).(MetadataDependenciesOutput)
}

// Id of the content item we depend on
func (o MetadataDependenciesPtrOutput) ContentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MetadataDependencies) *string {
		if v == nil {
			return nil
		}
		return v.ContentId
	}).(pulumi.StringPtrOutput)
}

// This is the list of dependencies we must fulfill, according to the AND/OR operator
func (o MetadataDependenciesPtrOutput) Criteria() MetadataDependenciesArrayOutput {
	return o.ApplyT(func(v *MetadataDependencies) []MetadataDependencies {
		if v == nil {
			return nil
		}
		return v.Criteria
	}).(MetadataDependenciesArrayOutput)
}

// Type of the content item we depend on
func (o MetadataDependenciesPtrOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MetadataDependencies) *string {
		if v == nil {
			return nil
		}
		return v.Kind
	}).(pulumi.StringPtrOutput)
}

// Name of the content item
func (o MetadataDependenciesPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MetadataDependencies) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Operator used for list of dependencies in criteria array.
func (o MetadataDependenciesPtrOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MetadataDependencies) *string {
		if v == nil {
			return nil
		}
		return v.Operator
	}).(pulumi.StringPtrOutput)
}

// Version of the the content item we depend on.  Can be blank, * or missing to indicate any version fulfills the dependency.  If version does not match our defined numeric format then an exact match is required.
func (o MetadataDependenciesPtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MetadataDependencies) *string {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.StringPtrOutput)
}

type MetadataDependenciesArrayOutput struct{ *pulumi.OutputState }

func (MetadataDependenciesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MetadataDependencies)(nil)).Elem()
}

func (o MetadataDependenciesArrayOutput) ToMetadataDependenciesArrayOutput() MetadataDependenciesArrayOutput {
	return o
}

func (o MetadataDependenciesArrayOutput) ToMetadataDependenciesArrayOutputWithContext(ctx context.Context) MetadataDependenciesArrayOutput {
	return o
}

func (o MetadataDependenciesArrayOutput) Index(i pulumi.IntInput) MetadataDependenciesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MetadataDependencies {
		return vs[0].([]MetadataDependencies)[vs[1].(int)]
	}).(MetadataDependenciesOutput)
}

// Dependencies for the content item, what other content items it requires to work.  Can describe more complex dependencies using a recursive/nested structure. For a single dependency an id/kind/version can be supplied or operator/criteria for complex dependencies.
type MetadataDependenciesResponse struct {
	// Id of the content item we depend on
	ContentId *string `pulumi:"contentId"`
	// This is the list of dependencies we must fulfill, according to the AND/OR operator
	Criteria []MetadataDependenciesResponse `pulumi:"criteria"`
	// Type of the content item we depend on
	Kind *string `pulumi:"kind"`
	// Name of the content item
	Name *string `pulumi:"name"`
	// Operator used for list of dependencies in criteria array.
	Operator *string `pulumi:"operator"`
	// Version of the the content item we depend on.  Can be blank, * or missing to indicate any version fulfills the dependency.  If version does not match our defined numeric format then an exact match is required.
	Version *string `pulumi:"version"`
}

// Dependencies for the content item, what other content items it requires to work.  Can describe more complex dependencies using a recursive/nested structure. For a single dependency an id/kind/version can be supplied or operator/criteria for complex dependencies.
type MetadataDependenciesResponseOutput struct{ *pulumi.OutputState }

func (MetadataDependenciesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MetadataDependenciesResponse)(nil)).Elem()
}

func (o MetadataDependenciesResponseOutput) ToMetadataDependenciesResponseOutput() MetadataDependenciesResponseOutput {
	return o
}

func (o MetadataDependenciesResponseOutput) ToMetadataDependenciesResponseOutputWithContext(ctx context.Context) MetadataDependenciesResponseOutput {
	return o
}

// Id of the content item we depend on
func (o MetadataDependenciesResponseOutput) ContentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MetadataDependenciesResponse) *string { return v.ContentId }).(pulumi.StringPtrOutput)
}

// This is the list of dependencies we must fulfill, according to the AND/OR operator
func (o MetadataDependenciesResponseOutput) Criteria() MetadataDependenciesResponseArrayOutput {
	return o.ApplyT(func(v MetadataDependenciesResponse) []MetadataDependenciesResponse { return v.Criteria }).(MetadataDependenciesResponseArrayOutput)
}

// Type of the content item we depend on
func (o MetadataDependenciesResponseOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MetadataDependenciesResponse) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Name of the content item
func (o MetadataDependenciesResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MetadataDependenciesResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Operator used for list of dependencies in criteria array.
func (o MetadataDependenciesResponseOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MetadataDependenciesResponse) *string { return v.Operator }).(pulumi.StringPtrOutput)
}

// Version of the the content item we depend on.  Can be blank, * or missing to indicate any version fulfills the dependency.  If version does not match our defined numeric format then an exact match is required.
func (o MetadataDependenciesResponseOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MetadataDependenciesResponse) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type MetadataDependenciesResponsePtrOutput struct{ *pulumi.OutputState }

func (MetadataDependenciesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MetadataDependenciesResponse)(nil)).Elem()
}

func (o MetadataDependenciesResponsePtrOutput) ToMetadataDependenciesResponsePtrOutput() MetadataDependenciesResponsePtrOutput {
	return o
}

func (o MetadataDependenciesResponsePtrOutput) ToMetadataDependenciesResponsePtrOutputWithContext(ctx context.Context) MetadataDependenciesResponsePtrOutput {
	return o
}

func (o MetadataDependenciesResponsePtrOutput) Elem() MetadataDependenciesResponseOutput {
	return o.ApplyT(func(v *MetadataDependenciesResponse) MetadataDependenciesResponse {
		if v != nil {
			return *v
		}
		var ret MetadataDependenciesResponse
		return ret
	}).(MetadataDependenciesResponseOutput)
}

// Id of the content item we depend on
func (o MetadataDependenciesResponsePtrOutput) ContentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MetadataDependenciesResponse) *string {
		if v == nil {
			return nil
		}
		return v.ContentId
	}).(pulumi.StringPtrOutput)
}

// This is the list of dependencies we must fulfill, according to the AND/OR operator
func (o MetadataDependenciesResponsePtrOutput) Criteria() MetadataDependenciesResponseArrayOutput {
	return o.ApplyT(func(v *MetadataDependenciesResponse) []MetadataDependenciesResponse {
		if v == nil {
			return nil
		}
		return v.Criteria
	}).(MetadataDependenciesResponseArrayOutput)
}

// Type of the content item we depend on
func (o MetadataDependenciesResponsePtrOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MetadataDependenciesResponse) *string {
		if v == nil {
			return nil
		}
		return v.Kind
	}).(pulumi.StringPtrOutput)
}

// Name of the content item
func (o MetadataDependenciesResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MetadataDependenciesResponse) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Operator used for list of dependencies in criteria array.
func (o MetadataDependenciesResponsePtrOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MetadataDependenciesResponse) *string {
		if v == nil {
			return nil
		}
		return v.Operator
	}).(pulumi.StringPtrOutput)
}

// Version of the the content item we depend on.  Can be blank, * or missing to indicate any version fulfills the dependency.  If version does not match our defined numeric format then an exact match is required.
func (o MetadataDependenciesResponsePtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MetadataDependenciesResponse) *string {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.StringPtrOutput)
}

type MetadataDependenciesResponseArrayOutput struct{ *pulumi.OutputState }

func (MetadataDependenciesResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MetadataDependenciesResponse)(nil)).Elem()
}

func (o MetadataDependenciesResponseArrayOutput) ToMetadataDependenciesResponseArrayOutput() MetadataDependenciesResponseArrayOutput {
	return o
}

func (o MetadataDependenciesResponseArrayOutput) ToMetadataDependenciesResponseArrayOutputWithContext(ctx context.Context) MetadataDependenciesResponseArrayOutput {
	return o
}

func (o MetadataDependenciesResponseArrayOutput) Index(i pulumi.IntInput) MetadataDependenciesResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MetadataDependenciesResponse {
		return vs[0].([]MetadataDependenciesResponse)[vs[1].(int)]
	}).(MetadataDependenciesResponseOutput)
}

// The original source of the content item, where it comes from.
type MetadataSource struct {
	// Source type of the content
	Kind string `pulumi:"kind"`
	// Name of the content source.  The repo name, solution name, LA workspace name etc.
	Name *string `pulumi:"name"`
	// ID of the content source.  The solution ID, workspace ID, etc
	SourceId *string `pulumi:"sourceId"`
}

// MetadataSourceInput is an input type that accepts MetadataSourceArgs and MetadataSourceOutput values.
// You can construct a concrete instance of `MetadataSourceInput` via:
//
//	MetadataSourceArgs{...}
type MetadataSourceInput interface {
	pulumi.Input

	ToMetadataSourceOutput() MetadataSourceOutput
	ToMetadataSourceOutputWithContext(context.Context) MetadataSourceOutput
}

// The original source of the content item, where it comes from.
type MetadataSourceArgs struct {
	// Source type of the content
	Kind pulumi.StringInput `pulumi:"kind"`
	// Name of the content source.  The repo name, solution name, LA workspace name etc.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// ID of the content source.  The solution ID, workspace ID, etc
	SourceId pulumi.StringPtrInput `pulumi:"sourceId"`
}

func (MetadataSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MetadataSource)(nil)).Elem()
}

func (i MetadataSourceArgs) ToMetadataSourceOutput() MetadataSourceOutput {
	return i.ToMetadataSourceOutputWithContext(context.Background())
}

func (i MetadataSourceArgs) ToMetadataSourceOutputWithContext(ctx context.Context) MetadataSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetadataSourceOutput)
}

func (i MetadataSourceArgs) ToMetadataSourcePtrOutput() MetadataSourcePtrOutput {
	return i.ToMetadataSourcePtrOutputWithContext(context.Background())
}

func (i MetadataSourceArgs) ToMetadataSourcePtrOutputWithContext(ctx context.Context) MetadataSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetadataSourceOutput).ToMetadataSourcePtrOutputWithContext(ctx)
}

// MetadataSourcePtrInput is an input type that accepts MetadataSourceArgs, MetadataSourcePtr and MetadataSourcePtrOutput values.
// You can construct a concrete instance of `MetadataSourcePtrInput` via:
//
//	        MetadataSourceArgs{...}
//
//	or:
//
//	        nil
type MetadataSourcePtrInput interface {
	pulumi.Input

	ToMetadataSourcePtrOutput() MetadataSourcePtrOutput
	ToMetadataSourcePtrOutputWithContext(context.Context) MetadataSourcePtrOutput
}

type metadataSourcePtrType MetadataSourceArgs

func MetadataSourcePtr(v *MetadataSourceArgs) MetadataSourcePtrInput {
	return (*metadataSourcePtrType)(v)
}

func (*metadataSourcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MetadataSource)(nil)).Elem()
}

func (i *metadataSourcePtrType) ToMetadataSourcePtrOutput() MetadataSourcePtrOutput {
	return i.ToMetadataSourcePtrOutputWithContext(context.Background())
}

func (i *metadataSourcePtrType) ToMetadataSourcePtrOutputWithContext(ctx context.Context) MetadataSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetadataSourcePtrOutput)
}

// The original source of the content item, where it comes from.
type MetadataSourceOutput struct{ *pulumi.OutputState }

func (MetadataSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MetadataSource)(nil)).Elem()
}

func (o MetadataSourceOutput) ToMetadataSourceOutput() MetadataSourceOutput {
	return o
}

func (o MetadataSourceOutput) ToMetadataSourceOutputWithContext(ctx context.Context) MetadataSourceOutput {
	return o
}

func (o MetadataSourceOutput) ToMetadataSourcePtrOutput() MetadataSourcePtrOutput {
	return o.ToMetadataSourcePtrOutputWithContext(context.Background())
}

func (o MetadataSourceOutput) ToMetadataSourcePtrOutputWithContext(ctx context.Context) MetadataSourcePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MetadataSource) *MetadataSource {
		return &v
	}).(MetadataSourcePtrOutput)
}

// Source type of the content
func (o MetadataSourceOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v MetadataSource) string { return v.Kind }).(pulumi.StringOutput)
}

// Name of the content source.  The repo name, solution name, LA workspace name etc.
func (o MetadataSourceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MetadataSource) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// ID of the content source.  The solution ID, workspace ID, etc
func (o MetadataSourceOutput) SourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MetadataSource) *string { return v.SourceId }).(pulumi.StringPtrOutput)
}

type MetadataSourcePtrOutput struct{ *pulumi.OutputState }

func (MetadataSourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MetadataSource)(nil)).Elem()
}

func (o MetadataSourcePtrOutput) ToMetadataSourcePtrOutput() MetadataSourcePtrOutput {
	return o
}

func (o MetadataSourcePtrOutput) ToMetadataSourcePtrOutputWithContext(ctx context.Context) MetadataSourcePtrOutput {
	return o
}

func (o MetadataSourcePtrOutput) Elem() MetadataSourceOutput {
	return o.ApplyT(func(v *MetadataSource) MetadataSource {
		if v != nil {
			return *v
		}
		var ret MetadataSource
		return ret
	}).(MetadataSourceOutput)
}

// Source type of the content
func (o MetadataSourcePtrOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MetadataSource) *string {
		if v == nil {
			return nil
		}
		return &v.Kind
	}).(pulumi.StringPtrOutput)
}

// Name of the content source.  The repo name, solution name, LA workspace name etc.
func (o MetadataSourcePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MetadataSource) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// ID of the content source.  The solution ID, workspace ID, etc
func (o MetadataSourcePtrOutput) SourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MetadataSource) *string {
		if v == nil {
			return nil
		}
		return v.SourceId
	}).(pulumi.StringPtrOutput)
}

// The original source of the content item, where it comes from.
type MetadataSourceResponse struct {
	// Source type of the content
	Kind string `pulumi:"kind"`
	// Name of the content source.  The repo name, solution name, LA workspace name etc.
	Name *string `pulumi:"name"`
	// ID of the content source.  The solution ID, workspace ID, etc
	SourceId *string `pulumi:"sourceId"`
}

// The original source of the content item, where it comes from.
type MetadataSourceResponseOutput struct{ *pulumi.OutputState }

func (MetadataSourceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MetadataSourceResponse)(nil)).Elem()
}

func (o MetadataSourceResponseOutput) ToMetadataSourceResponseOutput() MetadataSourceResponseOutput {
	return o
}

func (o MetadataSourceResponseOutput) ToMetadataSourceResponseOutputWithContext(ctx context.Context) MetadataSourceResponseOutput {
	return o
}

// Source type of the content
func (o MetadataSourceResponseOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v MetadataSourceResponse) string { return v.Kind }).(pulumi.StringOutput)
}

// Name of the content source.  The repo name, solution name, LA workspace name etc.
func (o MetadataSourceResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MetadataSourceResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// ID of the content source.  The solution ID, workspace ID, etc
func (o MetadataSourceResponseOutput) SourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MetadataSourceResponse) *string { return v.SourceId }).(pulumi.StringPtrOutput)
}

type MetadataSourceResponsePtrOutput struct{ *pulumi.OutputState }

func (MetadataSourceResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MetadataSourceResponse)(nil)).Elem()
}

func (o MetadataSourceResponsePtrOutput) ToMetadataSourceResponsePtrOutput() MetadataSourceResponsePtrOutput {
	return o
}

func (o MetadataSourceResponsePtrOutput) ToMetadataSourceResponsePtrOutputWithContext(ctx context.Context) MetadataSourceResponsePtrOutput {
	return o
}

func (o MetadataSourceResponsePtrOutput) Elem() MetadataSourceResponseOutput {
	return o.ApplyT(func(v *MetadataSourceResponse) MetadataSourceResponse {
		if v != nil {
			return *v
		}
		var ret MetadataSourceResponse
		return ret
	}).(MetadataSourceResponseOutput)
}

// Source type of the content
func (o MetadataSourceResponsePtrOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MetadataSourceResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Kind
	}).(pulumi.StringPtrOutput)
}

// Name of the content source.  The repo name, solution name, LA workspace name etc.
func (o MetadataSourceResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MetadataSourceResponse) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// ID of the content source.  The solution ID, workspace ID, etc
func (o MetadataSourceResponsePtrOutput) SourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MetadataSourceResponse) *string {
		if v == nil {
			return nil
		}
		return v.SourceId
	}).(pulumi.StringPtrOutput)
}

// Support information for the content item.
type MetadataSupport struct {
	// Email of support contact
	Email *string `pulumi:"email"`
	// Link for support help, like to support page to open a ticket etc.
	Link *string `pulumi:"link"`
	// Name of the support contact. Company or person.
	Name *string `pulumi:"name"`
	// Type of support for content item
	Tier string `pulumi:"tier"`
}

// MetadataSupportInput is an input type that accepts MetadataSupportArgs and MetadataSupportOutput values.
// You can construct a concrete instance of `MetadataSupportInput` via:
//
//	MetadataSupportArgs{...}
type MetadataSupportInput interface {
	pulumi.Input

	ToMetadataSupportOutput() MetadataSupportOutput
	ToMetadataSupportOutputWithContext(context.Context) MetadataSupportOutput
}

// Support information for the content item.
type MetadataSupportArgs struct {
	// Email of support contact
	Email pulumi.StringPtrInput `pulumi:"email"`
	// Link for support help, like to support page to open a ticket etc.
	Link pulumi.StringPtrInput `pulumi:"link"`
	// Name of the support contact. Company or person.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Type of support for content item
	Tier pulumi.StringInput `pulumi:"tier"`
}

func (MetadataSupportArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MetadataSupport)(nil)).Elem()
}

func (i MetadataSupportArgs) ToMetadataSupportOutput() MetadataSupportOutput {
	return i.ToMetadataSupportOutputWithContext(context.Background())
}

func (i MetadataSupportArgs) ToMetadataSupportOutputWithContext(ctx context.Context) MetadataSupportOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetadataSupportOutput)
}

func (i MetadataSupportArgs) ToMetadataSupportPtrOutput() MetadataSupportPtrOutput {
	return i.ToMetadataSupportPtrOutputWithContext(context.Background())
}

func (i MetadataSupportArgs) ToMetadataSupportPtrOutputWithContext(ctx context.Context) MetadataSupportPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetadataSupportOutput).ToMetadataSupportPtrOutputWithContext(ctx)
}

// MetadataSupportPtrInput is an input type that accepts MetadataSupportArgs, MetadataSupportPtr and MetadataSupportPtrOutput values.
// You can construct a concrete instance of `MetadataSupportPtrInput` via:
//
//	        MetadataSupportArgs{...}
//
//	or:
//
//	        nil
type MetadataSupportPtrInput interface {
	pulumi.Input

	ToMetadataSupportPtrOutput() MetadataSupportPtrOutput
	ToMetadataSupportPtrOutputWithContext(context.Context) MetadataSupportPtrOutput
}

type metadataSupportPtrType MetadataSupportArgs

func MetadataSupportPtr(v *MetadataSupportArgs) MetadataSupportPtrInput {
	return (*metadataSupportPtrType)(v)
}

func (*metadataSupportPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MetadataSupport)(nil)).Elem()
}

func (i *metadataSupportPtrType) ToMetadataSupportPtrOutput() MetadataSupportPtrOutput {
	return i.ToMetadataSupportPtrOutputWithContext(context.Background())
}

func (i *metadataSupportPtrType) ToMetadataSupportPtrOutputWithContext(ctx context.Context) MetadataSupportPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetadataSupportPtrOutput)
}

// Support information for the content item.
type MetadataSupportOutput struct{ *pulumi.OutputState }

func (MetadataSupportOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MetadataSupport)(nil)).Elem()
}

func (o MetadataSupportOutput) ToMetadataSupportOutput() MetadataSupportOutput {
	return o
}

func (o MetadataSupportOutput) ToMetadataSupportOutputWithContext(ctx context.Context) MetadataSupportOutput {
	return o
}

func (o MetadataSupportOutput) ToMetadataSupportPtrOutput() MetadataSupportPtrOutput {
	return o.ToMetadataSupportPtrOutputWithContext(context.Background())
}

func (o MetadataSupportOutput) ToMetadataSupportPtrOutputWithContext(ctx context.Context) MetadataSupportPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MetadataSupport) *MetadataSupport {
		return &v
	}).(MetadataSupportPtrOutput)
}

// Email of support contact
func (o MetadataSupportOutput) Email() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MetadataSupport) *string { return v.Email }).(pulumi.StringPtrOutput)
}

// Link for support help, like to support page to open a ticket etc.
func (o MetadataSupportOutput) Link() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MetadataSupport) *string { return v.Link }).(pulumi.StringPtrOutput)
}

// Name of the support contact. Company or person.
func (o MetadataSupportOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MetadataSupport) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Type of support for content item
func (o MetadataSupportOutput) Tier() pulumi.StringOutput {
	return o.ApplyT(func(v MetadataSupport) string { return v.Tier }).(pulumi.StringOutput)
}

type MetadataSupportPtrOutput struct{ *pulumi.OutputState }

func (MetadataSupportPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MetadataSupport)(nil)).Elem()
}

func (o MetadataSupportPtrOutput) ToMetadataSupportPtrOutput() MetadataSupportPtrOutput {
	return o
}

func (o MetadataSupportPtrOutput) ToMetadataSupportPtrOutputWithContext(ctx context.Context) MetadataSupportPtrOutput {
	return o
}

func (o MetadataSupportPtrOutput) Elem() MetadataSupportOutput {
	return o.ApplyT(func(v *MetadataSupport) MetadataSupport {
		if v != nil {
			return *v
		}
		var ret MetadataSupport
		return ret
	}).(MetadataSupportOutput)
}

// Email of support contact
func (o MetadataSupportPtrOutput) Email() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MetadataSupport) *string {
		if v == nil {
			return nil
		}
		return v.Email
	}).(pulumi.StringPtrOutput)
}

// Link for support help, like to support page to open a ticket etc.
func (o MetadataSupportPtrOutput) Link() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MetadataSupport) *string {
		if v == nil {
			return nil
		}
		return v.Link
	}).(pulumi.StringPtrOutput)
}

// Name of the support contact. Company or person.
func (o MetadataSupportPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MetadataSupport) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Type of support for content item
func (o MetadataSupportPtrOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MetadataSupport) *string {
		if v == nil {
			return nil
		}
		return &v.Tier
	}).(pulumi.StringPtrOutput)
}

// Support information for the content item.
type MetadataSupportResponse struct {
	// Email of support contact
	Email *string `pulumi:"email"`
	// Link for support help, like to support page to open a ticket etc.
	Link *string `pulumi:"link"`
	// Name of the support contact. Company or person.
	Name *string `pulumi:"name"`
	// Type of support for content item
	Tier string `pulumi:"tier"`
}

// Support information for the content item.
type MetadataSupportResponseOutput struct{ *pulumi.OutputState }

func (MetadataSupportResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MetadataSupportResponse)(nil)).Elem()
}

func (o MetadataSupportResponseOutput) ToMetadataSupportResponseOutput() MetadataSupportResponseOutput {
	return o
}

func (o MetadataSupportResponseOutput) ToMetadataSupportResponseOutputWithContext(ctx context.Context) MetadataSupportResponseOutput {
	return o
}

// Email of support contact
func (o MetadataSupportResponseOutput) Email() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MetadataSupportResponse) *string { return v.Email }).(pulumi.StringPtrOutput)
}

// Link for support help, like to support page to open a ticket etc.
func (o MetadataSupportResponseOutput) Link() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MetadataSupportResponse) *string { return v.Link }).(pulumi.StringPtrOutput)
}

// Name of the support contact. Company or person.
func (o MetadataSupportResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MetadataSupportResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Type of support for content item
func (o MetadataSupportResponseOutput) Tier() pulumi.StringOutput {
	return o.ApplyT(func(v MetadataSupportResponse) string { return v.Tier }).(pulumi.StringOutput)
}

type MetadataSupportResponsePtrOutput struct{ *pulumi.OutputState }

func (MetadataSupportResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MetadataSupportResponse)(nil)).Elem()
}

func (o MetadataSupportResponsePtrOutput) ToMetadataSupportResponsePtrOutput() MetadataSupportResponsePtrOutput {
	return o
}

func (o MetadataSupportResponsePtrOutput) ToMetadataSupportResponsePtrOutputWithContext(ctx context.Context) MetadataSupportResponsePtrOutput {
	return o
}

func (o MetadataSupportResponsePtrOutput) Elem() MetadataSupportResponseOutput {
	return o.ApplyT(func(v *MetadataSupportResponse) MetadataSupportResponse {
		if v != nil {
			return *v
		}
		var ret MetadataSupportResponse
		return ret
	}).(MetadataSupportResponseOutput)
}

// Email of support contact
func (o MetadataSupportResponsePtrOutput) Email() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MetadataSupportResponse) *string {
		if v == nil {
			return nil
		}
		return v.Email
	}).(pulumi.StringPtrOutput)
}

// Link for support help, like to support page to open a ticket etc.
func (o MetadataSupportResponsePtrOutput) Link() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MetadataSupportResponse) *string {
		if v == nil {
			return nil
		}
		return v.Link
	}).(pulumi.StringPtrOutput)
}

// Name of the support contact. Company or person.
func (o MetadataSupportResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MetadataSupportResponse) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Type of support for content item
func (o MetadataSupportResponsePtrOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MetadataSupportResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Tier
	}).(pulumi.StringPtrOutput)
}

// Model for API authentication with no authentication method - public API.
type NoneAuthModel struct {
	// Type of paging
	// Expected value is 'None'.
	Type string `pulumi:"type"`
}

// NoneAuthModelInput is an input type that accepts NoneAuthModelArgs and NoneAuthModelOutput values.
// You can construct a concrete instance of `NoneAuthModelInput` via:
//
//	NoneAuthModelArgs{...}
type NoneAuthModelInput interface {
	pulumi.Input

	ToNoneAuthModelOutput() NoneAuthModelOutput
	ToNoneAuthModelOutputWithContext(context.Context) NoneAuthModelOutput
}

// Model for API authentication with no authentication method - public API.
type NoneAuthModelArgs struct {
	// Type of paging
	// Expected value is 'None'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (NoneAuthModelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NoneAuthModel)(nil)).Elem()
}

func (i NoneAuthModelArgs) ToNoneAuthModelOutput() NoneAuthModelOutput {
	return i.ToNoneAuthModelOutputWithContext(context.Background())
}

func (i NoneAuthModelArgs) ToNoneAuthModelOutputWithContext(ctx context.Context) NoneAuthModelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NoneAuthModelOutput)
}

// Model for API authentication with no authentication method - public API.
type NoneAuthModelOutput struct{ *pulumi.OutputState }

func (NoneAuthModelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NoneAuthModel)(nil)).Elem()
}

func (o NoneAuthModelOutput) ToNoneAuthModelOutput() NoneAuthModelOutput {
	return o
}

func (o NoneAuthModelOutput) ToNoneAuthModelOutputWithContext(ctx context.Context) NoneAuthModelOutput {
	return o
}

// Type of paging
// Expected value is 'None'.
func (o NoneAuthModelOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v NoneAuthModel) string { return v.Type }).(pulumi.StringOutput)
}

// Model for API authentication with no authentication method - public API.
type NoneAuthModelResponse struct {
	// Type of paging
	// Expected value is 'None'.
	Type string `pulumi:"type"`
}

// Model for API authentication with no authentication method - public API.
type NoneAuthModelResponseOutput struct{ *pulumi.OutputState }

func (NoneAuthModelResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NoneAuthModelResponse)(nil)).Elem()
}

func (o NoneAuthModelResponseOutput) ToNoneAuthModelResponseOutput() NoneAuthModelResponseOutput {
	return o
}

func (o NoneAuthModelResponseOutput) ToNoneAuthModelResponseOutputWithContext(ctx context.Context) NoneAuthModelResponseOutput {
	return o
}

// Type of paging
// Expected value is 'None'.
func (o NoneAuthModelResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v NoneAuthModelResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Model for API authentication with OAuth2.
type OAuthModel struct {
	// Access token prepend. Default is 'Bearer'.
	AccessTokenPrepend *string `pulumi:"accessTokenPrepend"`
	// The user's authorization code.
	AuthorizationCode *string `pulumi:"authorizationCode"`
	// The authorization endpoint.
	AuthorizationEndpoint *string `pulumi:"authorizationEndpoint"`
	// The authorization endpoint headers.
	AuthorizationEndpointHeaders map[string]string `pulumi:"authorizationEndpointHeaders"`
	// The authorization endpoint query parameters.
	AuthorizationEndpointQueryParameters map[string]string `pulumi:"authorizationEndpointQueryParameters"`
	// The Application (client) ID that the OAuth provider assigned to your app.
	ClientId string `pulumi:"clientId"`
	// The Application (client) secret that the OAuth provider assigned to your app.
	ClientSecret string `pulumi:"clientSecret"`
	// The grant type, usually will be 'authorization code'.
	GrantType string `pulumi:"grantType"`
	// Indicating whether we want to send the clientId and clientSecret to token endpoint in the headers.
	IsCredentialsInHeaders *bool `pulumi:"isCredentialsInHeaders"`
	// A value indicating whether it's a JWT flow.
	IsJwtBearerFlow *bool `pulumi:"isJwtBearerFlow"`
	// The Application redirect url that the user config in the OAuth provider.
	RedirectUri *string `pulumi:"redirectUri"`
	// The Application (client) Scope that the OAuth provider assigned to your app.
	Scope *string `pulumi:"scope"`
	// The token endpoint. Defines the OAuth2 refresh token.
	TokenEndpoint string `pulumi:"tokenEndpoint"`
	// The token endpoint headers.
	TokenEndpointHeaders map[string]string `pulumi:"tokenEndpointHeaders"`
	// The token endpoint query parameters.
	TokenEndpointQueryParameters map[string]string `pulumi:"tokenEndpointQueryParameters"`
	// Type of paging
	// Expected value is 'OAuth2'.
	Type string `pulumi:"type"`
}

// Defaults sets the appropriate defaults for OAuthModel
func (val *OAuthModel) Defaults() *OAuthModel {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.IsCredentialsInHeaders == nil {
		isCredentialsInHeaders_ := false
		tmp.IsCredentialsInHeaders = &isCredentialsInHeaders_
	}
	return &tmp
}

// OAuthModelInput is an input type that accepts OAuthModelArgs and OAuthModelOutput values.
// You can construct a concrete instance of `OAuthModelInput` via:
//
//	OAuthModelArgs{...}
type OAuthModelInput interface {
	pulumi.Input

	ToOAuthModelOutput() OAuthModelOutput
	ToOAuthModelOutputWithContext(context.Context) OAuthModelOutput
}

// Model for API authentication with OAuth2.
type OAuthModelArgs struct {
	// Access token prepend. Default is 'Bearer'.
	AccessTokenPrepend pulumi.StringPtrInput `pulumi:"accessTokenPrepend"`
	// The user's authorization code.
	AuthorizationCode pulumi.StringPtrInput `pulumi:"authorizationCode"`
	// The authorization endpoint.
	AuthorizationEndpoint pulumi.StringPtrInput `pulumi:"authorizationEndpoint"`
	// The authorization endpoint headers.
	AuthorizationEndpointHeaders pulumi.StringMapInput `pulumi:"authorizationEndpointHeaders"`
	// The authorization endpoint query parameters.
	AuthorizationEndpointQueryParameters pulumi.StringMapInput `pulumi:"authorizationEndpointQueryParameters"`
	// The Application (client) ID that the OAuth provider assigned to your app.
	ClientId pulumi.StringInput `pulumi:"clientId"`
	// The Application (client) secret that the OAuth provider assigned to your app.
	ClientSecret pulumi.StringInput `pulumi:"clientSecret"`
	// The grant type, usually will be 'authorization code'.
	GrantType pulumi.StringInput `pulumi:"grantType"`
	// Indicating whether we want to send the clientId and clientSecret to token endpoint in the headers.
	IsCredentialsInHeaders pulumi.BoolPtrInput `pulumi:"isCredentialsInHeaders"`
	// A value indicating whether it's a JWT flow.
	IsJwtBearerFlow pulumi.BoolPtrInput `pulumi:"isJwtBearerFlow"`
	// The Application redirect url that the user config in the OAuth provider.
	RedirectUri pulumi.StringPtrInput `pulumi:"redirectUri"`
	// The Application (client) Scope that the OAuth provider assigned to your app.
	Scope pulumi.StringPtrInput `pulumi:"scope"`
	// The token endpoint. Defines the OAuth2 refresh token.
	TokenEndpoint pulumi.StringInput `pulumi:"tokenEndpoint"`
	// The token endpoint headers.
	TokenEndpointHeaders pulumi.StringMapInput `pulumi:"tokenEndpointHeaders"`
	// The token endpoint query parameters.
	TokenEndpointQueryParameters pulumi.StringMapInput `pulumi:"tokenEndpointQueryParameters"`
	// Type of paging
	// Expected value is 'OAuth2'.
	Type pulumi.StringInput `pulumi:"type"`
}

// Defaults sets the appropriate defaults for OAuthModelArgs
func (val *OAuthModelArgs) Defaults() *OAuthModelArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.IsCredentialsInHeaders == nil {
		tmp.IsCredentialsInHeaders = pulumi.BoolPtr(false)
	}
	return &tmp
}
func (OAuthModelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OAuthModel)(nil)).Elem()
}

func (i OAuthModelArgs) ToOAuthModelOutput() OAuthModelOutput {
	return i.ToOAuthModelOutputWithContext(context.Background())
}

func (i OAuthModelArgs) ToOAuthModelOutputWithContext(ctx context.Context) OAuthModelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OAuthModelOutput)
}

// Model for API authentication with OAuth2.
type OAuthModelOutput struct{ *pulumi.OutputState }

func (OAuthModelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OAuthModel)(nil)).Elem()
}

func (o OAuthModelOutput) ToOAuthModelOutput() OAuthModelOutput {
	return o
}

func (o OAuthModelOutput) ToOAuthModelOutputWithContext(ctx context.Context) OAuthModelOutput {
	return o
}

// Access token prepend. Default is 'Bearer'.
func (o OAuthModelOutput) AccessTokenPrepend() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OAuthModel) *string { return v.AccessTokenPrepend }).(pulumi.StringPtrOutput)
}

// The user's authorization code.
func (o OAuthModelOutput) AuthorizationCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OAuthModel) *string { return v.AuthorizationCode }).(pulumi.StringPtrOutput)
}

// The authorization endpoint.
func (o OAuthModelOutput) AuthorizationEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OAuthModel) *string { return v.AuthorizationEndpoint }).(pulumi.StringPtrOutput)
}

// The authorization endpoint headers.
func (o OAuthModelOutput) AuthorizationEndpointHeaders() pulumi.StringMapOutput {
	return o.ApplyT(func(v OAuthModel) map[string]string { return v.AuthorizationEndpointHeaders }).(pulumi.StringMapOutput)
}

// The authorization endpoint query parameters.
func (o OAuthModelOutput) AuthorizationEndpointQueryParameters() pulumi.StringMapOutput {
	return o.ApplyT(func(v OAuthModel) map[string]string { return v.AuthorizationEndpointQueryParameters }).(pulumi.StringMapOutput)
}

// The Application (client) ID that the OAuth provider assigned to your app.
func (o OAuthModelOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v OAuthModel) string { return v.ClientId }).(pulumi.StringOutput)
}

// The Application (client) secret that the OAuth provider assigned to your app.
func (o OAuthModelOutput) ClientSecret() pulumi.StringOutput {
	return o.ApplyT(func(v OAuthModel) string { return v.ClientSecret }).(pulumi.StringOutput)
}

// The grant type, usually will be 'authorization code'.
func (o OAuthModelOutput) GrantType() pulumi.StringOutput {
	return o.ApplyT(func(v OAuthModel) string { return v.GrantType }).(pulumi.StringOutput)
}

// Indicating whether we want to send the clientId and clientSecret to token endpoint in the headers.
func (o OAuthModelOutput) IsCredentialsInHeaders() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v OAuthModel) *bool { return v.IsCredentialsInHeaders }).(pulumi.BoolPtrOutput)
}

// A value indicating whether it's a JWT flow.
func (o OAuthModelOutput) IsJwtBearerFlow() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v OAuthModel) *bool { return v.IsJwtBearerFlow }).(pulumi.BoolPtrOutput)
}

// The Application redirect url that the user config in the OAuth provider.
func (o OAuthModelOutput) RedirectUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OAuthModel) *string { return v.RedirectUri }).(pulumi.StringPtrOutput)
}

// The Application (client) Scope that the OAuth provider assigned to your app.
func (o OAuthModelOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OAuthModel) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

// The token endpoint. Defines the OAuth2 refresh token.
func (o OAuthModelOutput) TokenEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v OAuthModel) string { return v.TokenEndpoint }).(pulumi.StringOutput)
}

// The token endpoint headers.
func (o OAuthModelOutput) TokenEndpointHeaders() pulumi.StringMapOutput {
	return o.ApplyT(func(v OAuthModel) map[string]string { return v.TokenEndpointHeaders }).(pulumi.StringMapOutput)
}

// The token endpoint query parameters.
func (o OAuthModelOutput) TokenEndpointQueryParameters() pulumi.StringMapOutput {
	return o.ApplyT(func(v OAuthModel) map[string]string { return v.TokenEndpointQueryParameters }).(pulumi.StringMapOutput)
}

// Type of paging
// Expected value is 'OAuth2'.
func (o OAuthModelOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v OAuthModel) string { return v.Type }).(pulumi.StringOutput)
}

// Model for API authentication with OAuth2.
type OAuthModelResponse struct {
	// Access token prepend. Default is 'Bearer'.
	AccessTokenPrepend *string `pulumi:"accessTokenPrepend"`
	// The user's authorization code.
	AuthorizationCode *string `pulumi:"authorizationCode"`
	// The authorization endpoint.
	AuthorizationEndpoint *string `pulumi:"authorizationEndpoint"`
	// The authorization endpoint headers.
	AuthorizationEndpointHeaders map[string]string `pulumi:"authorizationEndpointHeaders"`
	// The authorization endpoint query parameters.
	AuthorizationEndpointQueryParameters map[string]string `pulumi:"authorizationEndpointQueryParameters"`
	// The Application (client) ID that the OAuth provider assigned to your app.
	ClientId string `pulumi:"clientId"`
	// The Application (client) secret that the OAuth provider assigned to your app.
	ClientSecret string `pulumi:"clientSecret"`
	// The grant type, usually will be 'authorization code'.
	GrantType string `pulumi:"grantType"`
	// Indicating whether we want to send the clientId and clientSecret to token endpoint in the headers.
	IsCredentialsInHeaders *bool `pulumi:"isCredentialsInHeaders"`
	// A value indicating whether it's a JWT flow.
	IsJwtBearerFlow *bool `pulumi:"isJwtBearerFlow"`
	// The Application redirect url that the user config in the OAuth provider.
	RedirectUri *string `pulumi:"redirectUri"`
	// The Application (client) Scope that the OAuth provider assigned to your app.
	Scope *string `pulumi:"scope"`
	// The token endpoint. Defines the OAuth2 refresh token.
	TokenEndpoint string `pulumi:"tokenEndpoint"`
	// The token endpoint headers.
	TokenEndpointHeaders map[string]string `pulumi:"tokenEndpointHeaders"`
	// The token endpoint query parameters.
	TokenEndpointQueryParameters map[string]string `pulumi:"tokenEndpointQueryParameters"`
	// Type of paging
	// Expected value is 'OAuth2'.
	Type string `pulumi:"type"`
}

// Defaults sets the appropriate defaults for OAuthModelResponse
func (val *OAuthModelResponse) Defaults() *OAuthModelResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.IsCredentialsInHeaders == nil {
		isCredentialsInHeaders_ := false
		tmp.IsCredentialsInHeaders = &isCredentialsInHeaders_
	}
	return &tmp
}

// Model for API authentication with OAuth2.
type OAuthModelResponseOutput struct{ *pulumi.OutputState }

func (OAuthModelResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OAuthModelResponse)(nil)).Elem()
}

func (o OAuthModelResponseOutput) ToOAuthModelResponseOutput() OAuthModelResponseOutput {
	return o
}

func (o OAuthModelResponseOutput) ToOAuthModelResponseOutputWithContext(ctx context.Context) OAuthModelResponseOutput {
	return o
}

// Access token prepend. Default is 'Bearer'.
func (o OAuthModelResponseOutput) AccessTokenPrepend() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OAuthModelResponse) *string { return v.AccessTokenPrepend }).(pulumi.StringPtrOutput)
}

// The user's authorization code.
func (o OAuthModelResponseOutput) AuthorizationCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OAuthModelResponse) *string { return v.AuthorizationCode }).(pulumi.StringPtrOutput)
}

// The authorization endpoint.
func (o OAuthModelResponseOutput) AuthorizationEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OAuthModelResponse) *string { return v.AuthorizationEndpoint }).(pulumi.StringPtrOutput)
}

// The authorization endpoint headers.
func (o OAuthModelResponseOutput) AuthorizationEndpointHeaders() pulumi.StringMapOutput {
	return o.ApplyT(func(v OAuthModelResponse) map[string]string { return v.AuthorizationEndpointHeaders }).(pulumi.StringMapOutput)
}

// The authorization endpoint query parameters.
func (o OAuthModelResponseOutput) AuthorizationEndpointQueryParameters() pulumi.StringMapOutput {
	return o.ApplyT(func(v OAuthModelResponse) map[string]string { return v.AuthorizationEndpointQueryParameters }).(pulumi.StringMapOutput)
}

// The Application (client) ID that the OAuth provider assigned to your app.
func (o OAuthModelResponseOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v OAuthModelResponse) string { return v.ClientId }).(pulumi.StringOutput)
}

// The Application (client) secret that the OAuth provider assigned to your app.
func (o OAuthModelResponseOutput) ClientSecret() pulumi.StringOutput {
	return o.ApplyT(func(v OAuthModelResponse) string { return v.ClientSecret }).(pulumi.StringOutput)
}

// The grant type, usually will be 'authorization code'.
func (o OAuthModelResponseOutput) GrantType() pulumi.StringOutput {
	return o.ApplyT(func(v OAuthModelResponse) string { return v.GrantType }).(pulumi.StringOutput)
}

// Indicating whether we want to send the clientId and clientSecret to token endpoint in the headers.
func (o OAuthModelResponseOutput) IsCredentialsInHeaders() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v OAuthModelResponse) *bool { return v.IsCredentialsInHeaders }).(pulumi.BoolPtrOutput)
}

// A value indicating whether it's a JWT flow.
func (o OAuthModelResponseOutput) IsJwtBearerFlow() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v OAuthModelResponse) *bool { return v.IsJwtBearerFlow }).(pulumi.BoolPtrOutput)
}

// The Application redirect url that the user config in the OAuth provider.
func (o OAuthModelResponseOutput) RedirectUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OAuthModelResponse) *string { return v.RedirectUri }).(pulumi.StringPtrOutput)
}

// The Application (client) Scope that the OAuth provider assigned to your app.
func (o OAuthModelResponseOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OAuthModelResponse) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

// The token endpoint. Defines the OAuth2 refresh token.
func (o OAuthModelResponseOutput) TokenEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v OAuthModelResponse) string { return v.TokenEndpoint }).(pulumi.StringOutput)
}

// The token endpoint headers.
func (o OAuthModelResponseOutput) TokenEndpointHeaders() pulumi.StringMapOutput {
	return o.ApplyT(func(v OAuthModelResponse) map[string]string { return v.TokenEndpointHeaders }).(pulumi.StringMapOutput)
}

// The token endpoint query parameters.
func (o OAuthModelResponseOutput) TokenEndpointQueryParameters() pulumi.StringMapOutput {
	return o.ApplyT(func(v OAuthModelResponse) map[string]string { return v.TokenEndpointQueryParameters }).(pulumi.StringMapOutput)
}

// Type of paging
// Expected value is 'OAuth2'.
func (o OAuthModelResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v OAuthModelResponse) string { return v.Type }).(pulumi.StringOutput)
}

// The available data types for office data connector.
type OfficeDataConnectorDataTypes struct {
	// Exchange data type connection.
	Exchange *OfficeDataConnectorDataTypesExchange `pulumi:"exchange"`
	// SharePoint data type connection.
	SharePoint *OfficeDataConnectorDataTypesSharePoint `pulumi:"sharePoint"`
	// Teams data type connection.
	Teams *OfficeDataConnectorDataTypesTeams `pulumi:"teams"`
}

// OfficeDataConnectorDataTypesInput is an input type that accepts OfficeDataConnectorDataTypesArgs and OfficeDataConnectorDataTypesOutput values.
// You can construct a concrete instance of `OfficeDataConnectorDataTypesInput` via:
//
//	OfficeDataConnectorDataTypesArgs{...}
type OfficeDataConnectorDataTypesInput interface {
	pulumi.Input

	ToOfficeDataConnectorDataTypesOutput() OfficeDataConnectorDataTypesOutput
	ToOfficeDataConnectorDataTypesOutputWithContext(context.Context) OfficeDataConnectorDataTypesOutput
}

// The available data types for office data connector.
type OfficeDataConnectorDataTypesArgs struct {
	// Exchange data type connection.
	Exchange OfficeDataConnectorDataTypesExchangePtrInput `pulumi:"exchange"`
	// SharePoint data type connection.
	SharePoint OfficeDataConnectorDataTypesSharePointPtrInput `pulumi:"sharePoint"`
	// Teams data type connection.
	Teams OfficeDataConnectorDataTypesTeamsPtrInput `pulumi:"teams"`
}

func (OfficeDataConnectorDataTypesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OfficeDataConnectorDataTypes)(nil)).Elem()
}

func (i OfficeDataConnectorDataTypesArgs) ToOfficeDataConnectorDataTypesOutput() OfficeDataConnectorDataTypesOutput {
	return i.ToOfficeDataConnectorDataTypesOutputWithContext(context.Background())
}

func (i OfficeDataConnectorDataTypesArgs) ToOfficeDataConnectorDataTypesOutputWithContext(ctx context.Context) OfficeDataConnectorDataTypesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OfficeDataConnectorDataTypesOutput)
}

func (i OfficeDataConnectorDataTypesArgs) ToOfficeDataConnectorDataTypesPtrOutput() OfficeDataConnectorDataTypesPtrOutput {
	return i.ToOfficeDataConnectorDataTypesPtrOutputWithContext(context.Background())
}

func (i OfficeDataConnectorDataTypesArgs) ToOfficeDataConnectorDataTypesPtrOutputWithContext(ctx context.Context) OfficeDataConnectorDataTypesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OfficeDataConnectorDataTypesOutput).ToOfficeDataConnectorDataTypesPtrOutputWithContext(ctx)
}

// OfficeDataConnectorDataTypesPtrInput is an input type that accepts OfficeDataConnectorDataTypesArgs, OfficeDataConnectorDataTypesPtr and OfficeDataConnectorDataTypesPtrOutput values.
// You can construct a concrete instance of `OfficeDataConnectorDataTypesPtrInput` via:
//
//	        OfficeDataConnectorDataTypesArgs{...}
//
//	or:
//
//	        nil
type OfficeDataConnectorDataTypesPtrInput interface {
	pulumi.Input

	ToOfficeDataConnectorDataTypesPtrOutput() OfficeDataConnectorDataTypesPtrOutput
	ToOfficeDataConnectorDataTypesPtrOutputWithContext(context.Context) OfficeDataConnectorDataTypesPtrOutput
}

type officeDataConnectorDataTypesPtrType OfficeDataConnectorDataTypesArgs

func OfficeDataConnectorDataTypesPtr(v *OfficeDataConnectorDataTypesArgs) OfficeDataConnectorDataTypesPtrInput {
	return (*officeDataConnectorDataTypesPtrType)(v)
}

func (*officeDataConnectorDataTypesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OfficeDataConnectorDataTypes)(nil)).Elem()
}

func (i *officeDataConnectorDataTypesPtrType) ToOfficeDataConnectorDataTypesPtrOutput() OfficeDataConnectorDataTypesPtrOutput {
	return i.ToOfficeDataConnectorDataTypesPtrOutputWithContext(context.Background())
}

func (i *officeDataConnectorDataTypesPtrType) ToOfficeDataConnectorDataTypesPtrOutputWithContext(ctx context.Context) OfficeDataConnectorDataTypesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OfficeDataConnectorDataTypesPtrOutput)
}

// The available data types for office data connector.
type OfficeDataConnectorDataTypesOutput struct{ *pulumi.OutputState }

func (OfficeDataConnectorDataTypesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OfficeDataConnectorDataTypes)(nil)).Elem()
}

func (o OfficeDataConnectorDataTypesOutput) ToOfficeDataConnectorDataTypesOutput() OfficeDataConnectorDataTypesOutput {
	return o
}

func (o OfficeDataConnectorDataTypesOutput) ToOfficeDataConnectorDataTypesOutputWithContext(ctx context.Context) OfficeDataConnectorDataTypesOutput {
	return o
}

func (o OfficeDataConnectorDataTypesOutput) ToOfficeDataConnectorDataTypesPtrOutput() OfficeDataConnectorDataTypesPtrOutput {
	return o.ToOfficeDataConnectorDataTypesPtrOutputWithContext(context.Background())
}

func (o OfficeDataConnectorDataTypesOutput) ToOfficeDataConnectorDataTypesPtrOutputWithContext(ctx context.Context) OfficeDataConnectorDataTypesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OfficeDataConnectorDataTypes) *OfficeDataConnectorDataTypes {
		return &v
	}).(OfficeDataConnectorDataTypesPtrOutput)
}

// Exchange data type connection.
func (o OfficeDataConnectorDataTypesOutput) Exchange() OfficeDataConnectorDataTypesExchangePtrOutput {
	return o.ApplyT(func(v OfficeDataConnectorDataTypes) *OfficeDataConnectorDataTypesExchange { return v.Exchange }).(OfficeDataConnectorDataTypesExchangePtrOutput)
}

// SharePoint data type connection.
func (o OfficeDataConnectorDataTypesOutput) SharePoint() OfficeDataConnectorDataTypesSharePointPtrOutput {
	return o.ApplyT(func(v OfficeDataConnectorDataTypes) *OfficeDataConnectorDataTypesSharePoint { return v.SharePoint }).(OfficeDataConnectorDataTypesSharePointPtrOutput)
}

// Teams data type connection.
func (o OfficeDataConnectorDataTypesOutput) Teams() OfficeDataConnectorDataTypesTeamsPtrOutput {
	return o.ApplyT(func(v OfficeDataConnectorDataTypes) *OfficeDataConnectorDataTypesTeams { return v.Teams }).(OfficeDataConnectorDataTypesTeamsPtrOutput)
}

type OfficeDataConnectorDataTypesPtrOutput struct{ *pulumi.OutputState }

func (OfficeDataConnectorDataTypesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OfficeDataConnectorDataTypes)(nil)).Elem()
}

func (o OfficeDataConnectorDataTypesPtrOutput) ToOfficeDataConnectorDataTypesPtrOutput() OfficeDataConnectorDataTypesPtrOutput {
	return o
}

func (o OfficeDataConnectorDataTypesPtrOutput) ToOfficeDataConnectorDataTypesPtrOutputWithContext(ctx context.Context) OfficeDataConnectorDataTypesPtrOutput {
	return o
}

func (o OfficeDataConnectorDataTypesPtrOutput) Elem() OfficeDataConnectorDataTypesOutput {
	return o.ApplyT(func(v *OfficeDataConnectorDataTypes) OfficeDataConnectorDataTypes {
		if v != nil {
			return *v
		}
		var ret OfficeDataConnectorDataTypes
		return ret
	}).(OfficeDataConnectorDataTypesOutput)
}

// Exchange data type connection.
func (o OfficeDataConnectorDataTypesPtrOutput) Exchange() OfficeDataConnectorDataTypesExchangePtrOutput {
	return o.ApplyT(func(v *OfficeDataConnectorDataTypes) *OfficeDataConnectorDataTypesExchange {
		if v == nil {
			return nil
		}
		return v.Exchange
	}).(OfficeDataConnectorDataTypesExchangePtrOutput)
}

// SharePoint data type connection.
func (o OfficeDataConnectorDataTypesPtrOutput) SharePoint() OfficeDataConnectorDataTypesSharePointPtrOutput {
	return o.ApplyT(func(v *OfficeDataConnectorDataTypes) *OfficeDataConnectorDataTypesSharePoint {
		if v == nil {
			return nil
		}
		return v.SharePoint
	}).(OfficeDataConnectorDataTypesSharePointPtrOutput)
}

// Teams data type connection.
func (o OfficeDataConnectorDataTypesPtrOutput) Teams() OfficeDataConnectorDataTypesTeamsPtrOutput {
	return o.ApplyT(func(v *OfficeDataConnectorDataTypes) *OfficeDataConnectorDataTypesTeams {
		if v == nil {
			return nil
		}
		return v.Teams
	}).(OfficeDataConnectorDataTypesTeamsPtrOutput)
}

// Exchange data type connection.
type OfficeDataConnectorDataTypesExchange struct {
	// Describe whether this data type connection is enabled or not.
	State *string `pulumi:"state"`
}

// OfficeDataConnectorDataTypesExchangeInput is an input type that accepts OfficeDataConnectorDataTypesExchangeArgs and OfficeDataConnectorDataTypesExchangeOutput values.
// You can construct a concrete instance of `OfficeDataConnectorDataTypesExchangeInput` via:
//
//	OfficeDataConnectorDataTypesExchangeArgs{...}
type OfficeDataConnectorDataTypesExchangeInput interface {
	pulumi.Input

	ToOfficeDataConnectorDataTypesExchangeOutput() OfficeDataConnectorDataTypesExchangeOutput
	ToOfficeDataConnectorDataTypesExchangeOutputWithContext(context.Context) OfficeDataConnectorDataTypesExchangeOutput
}

// Exchange data type connection.
type OfficeDataConnectorDataTypesExchangeArgs struct {
	// Describe whether this data type connection is enabled or not.
	State pulumi.StringPtrInput `pulumi:"state"`
}

func (OfficeDataConnectorDataTypesExchangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OfficeDataConnectorDataTypesExchange)(nil)).Elem()
}

func (i OfficeDataConnectorDataTypesExchangeArgs) ToOfficeDataConnectorDataTypesExchangeOutput() OfficeDataConnectorDataTypesExchangeOutput {
	return i.ToOfficeDataConnectorDataTypesExchangeOutputWithContext(context.Background())
}

func (i OfficeDataConnectorDataTypesExchangeArgs) ToOfficeDataConnectorDataTypesExchangeOutputWithContext(ctx context.Context) OfficeDataConnectorDataTypesExchangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OfficeDataConnectorDataTypesExchangeOutput)
}

func (i OfficeDataConnectorDataTypesExchangeArgs) ToOfficeDataConnectorDataTypesExchangePtrOutput() OfficeDataConnectorDataTypesExchangePtrOutput {
	return i.ToOfficeDataConnectorDataTypesExchangePtrOutputWithContext(context.Background())
}

func (i OfficeDataConnectorDataTypesExchangeArgs) ToOfficeDataConnectorDataTypesExchangePtrOutputWithContext(ctx context.Context) OfficeDataConnectorDataTypesExchangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OfficeDataConnectorDataTypesExchangeOutput).ToOfficeDataConnectorDataTypesExchangePtrOutputWithContext(ctx)
}

// OfficeDataConnectorDataTypesExchangePtrInput is an input type that accepts OfficeDataConnectorDataTypesExchangeArgs, OfficeDataConnectorDataTypesExchangePtr and OfficeDataConnectorDataTypesExchangePtrOutput values.
// You can construct a concrete instance of `OfficeDataConnectorDataTypesExchangePtrInput` via:
//
//	        OfficeDataConnectorDataTypesExchangeArgs{...}
//
//	or:
//
//	        nil
type OfficeDataConnectorDataTypesExchangePtrInput interface {
	pulumi.Input

	ToOfficeDataConnectorDataTypesExchangePtrOutput() OfficeDataConnectorDataTypesExchangePtrOutput
	ToOfficeDataConnectorDataTypesExchangePtrOutputWithContext(context.Context) OfficeDataConnectorDataTypesExchangePtrOutput
}

type officeDataConnectorDataTypesExchangePtrType OfficeDataConnectorDataTypesExchangeArgs

func OfficeDataConnectorDataTypesExchangePtr(v *OfficeDataConnectorDataTypesExchangeArgs) OfficeDataConnectorDataTypesExchangePtrInput {
	return (*officeDataConnectorDataTypesExchangePtrType)(v)
}

func (*officeDataConnectorDataTypesExchangePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OfficeDataConnectorDataTypesExchange)(nil)).Elem()
}

func (i *officeDataConnectorDataTypesExchangePtrType) ToOfficeDataConnectorDataTypesExchangePtrOutput() OfficeDataConnectorDataTypesExchangePtrOutput {
	return i.ToOfficeDataConnectorDataTypesExchangePtrOutputWithContext(context.Background())
}

func (i *officeDataConnectorDataTypesExchangePtrType) ToOfficeDataConnectorDataTypesExchangePtrOutputWithContext(ctx context.Context) OfficeDataConnectorDataTypesExchangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OfficeDataConnectorDataTypesExchangePtrOutput)
}

// Exchange data type connection.
type OfficeDataConnectorDataTypesExchangeOutput struct{ *pulumi.OutputState }

func (OfficeDataConnectorDataTypesExchangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OfficeDataConnectorDataTypesExchange)(nil)).Elem()
}

func (o OfficeDataConnectorDataTypesExchangeOutput) ToOfficeDataConnectorDataTypesExchangeOutput() OfficeDataConnectorDataTypesExchangeOutput {
	return o
}

func (o OfficeDataConnectorDataTypesExchangeOutput) ToOfficeDataConnectorDataTypesExchangeOutputWithContext(ctx context.Context) OfficeDataConnectorDataTypesExchangeOutput {
	return o
}

func (o OfficeDataConnectorDataTypesExchangeOutput) ToOfficeDataConnectorDataTypesExchangePtrOutput() OfficeDataConnectorDataTypesExchangePtrOutput {
	return o.ToOfficeDataConnectorDataTypesExchangePtrOutputWithContext(context.Background())
}

func (o OfficeDataConnectorDataTypesExchangeOutput) ToOfficeDataConnectorDataTypesExchangePtrOutputWithContext(ctx context.Context) OfficeDataConnectorDataTypesExchangePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OfficeDataConnectorDataTypesExchange) *OfficeDataConnectorDataTypesExchange {
		return &v
	}).(OfficeDataConnectorDataTypesExchangePtrOutput)
}

// Describe whether this data type connection is enabled or not.
func (o OfficeDataConnectorDataTypesExchangeOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OfficeDataConnectorDataTypesExchange) *string { return v.State }).(pulumi.StringPtrOutput)
}

type OfficeDataConnectorDataTypesExchangePtrOutput struct{ *pulumi.OutputState }

func (OfficeDataConnectorDataTypesExchangePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OfficeDataConnectorDataTypesExchange)(nil)).Elem()
}

func (o OfficeDataConnectorDataTypesExchangePtrOutput) ToOfficeDataConnectorDataTypesExchangePtrOutput() OfficeDataConnectorDataTypesExchangePtrOutput {
	return o
}

func (o OfficeDataConnectorDataTypesExchangePtrOutput) ToOfficeDataConnectorDataTypesExchangePtrOutputWithContext(ctx context.Context) OfficeDataConnectorDataTypesExchangePtrOutput {
	return o
}

func (o OfficeDataConnectorDataTypesExchangePtrOutput) Elem() OfficeDataConnectorDataTypesExchangeOutput {
	return o.ApplyT(func(v *OfficeDataConnectorDataTypesExchange) OfficeDataConnectorDataTypesExchange {
		if v != nil {
			return *v
		}
		var ret OfficeDataConnectorDataTypesExchange
		return ret
	}).(OfficeDataConnectorDataTypesExchangeOutput)
}

// Describe whether this data type connection is enabled or not.
func (o OfficeDataConnectorDataTypesExchangePtrOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OfficeDataConnectorDataTypesExchange) *string {
		if v == nil {
			return nil
		}
		return v.State
	}).(pulumi.StringPtrOutput)
}

// The available data types for office data connector.
type OfficeDataConnectorDataTypesResponse struct {
	// Exchange data type connection.
	Exchange *OfficeDataConnectorDataTypesResponseExchange `pulumi:"exchange"`
	// SharePoint data type connection.
	SharePoint *OfficeDataConnectorDataTypesResponseSharePoint `pulumi:"sharePoint"`
	// Teams data type connection.
	Teams *OfficeDataConnectorDataTypesResponseTeams `pulumi:"teams"`
}

// The available data types for office data connector.
type OfficeDataConnectorDataTypesResponseOutput struct{ *pulumi.OutputState }

func (OfficeDataConnectorDataTypesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OfficeDataConnectorDataTypesResponse)(nil)).Elem()
}

func (o OfficeDataConnectorDataTypesResponseOutput) ToOfficeDataConnectorDataTypesResponseOutput() OfficeDataConnectorDataTypesResponseOutput {
	return o
}

func (o OfficeDataConnectorDataTypesResponseOutput) ToOfficeDataConnectorDataTypesResponseOutputWithContext(ctx context.Context) OfficeDataConnectorDataTypesResponseOutput {
	return o
}

// Exchange data type connection.
func (o OfficeDataConnectorDataTypesResponseOutput) Exchange() OfficeDataConnectorDataTypesResponseExchangePtrOutput {
	return o.ApplyT(func(v OfficeDataConnectorDataTypesResponse) *OfficeDataConnectorDataTypesResponseExchange {
		return v.Exchange
	}).(OfficeDataConnectorDataTypesResponseExchangePtrOutput)
}

// SharePoint data type connection.
func (o OfficeDataConnectorDataTypesResponseOutput) SharePoint() OfficeDataConnectorDataTypesResponseSharePointPtrOutput {
	return o.ApplyT(func(v OfficeDataConnectorDataTypesResponse) *OfficeDataConnectorDataTypesResponseSharePoint {
		return v.SharePoint
	}).(OfficeDataConnectorDataTypesResponseSharePointPtrOutput)
}

// Teams data type connection.
func (o OfficeDataConnectorDataTypesResponseOutput) Teams() OfficeDataConnectorDataTypesResponseTeamsPtrOutput {
	return o.ApplyT(func(v OfficeDataConnectorDataTypesResponse) *OfficeDataConnectorDataTypesResponseTeams {
		return v.Teams
	}).(OfficeDataConnectorDataTypesResponseTeamsPtrOutput)
}

type OfficeDataConnectorDataTypesResponsePtrOutput struct{ *pulumi.OutputState }

func (OfficeDataConnectorDataTypesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OfficeDataConnectorDataTypesResponse)(nil)).Elem()
}

func (o OfficeDataConnectorDataTypesResponsePtrOutput) ToOfficeDataConnectorDataTypesResponsePtrOutput() OfficeDataConnectorDataTypesResponsePtrOutput {
	return o
}

func (o OfficeDataConnectorDataTypesResponsePtrOutput) ToOfficeDataConnectorDataTypesResponsePtrOutputWithContext(ctx context.Context) OfficeDataConnectorDataTypesResponsePtrOutput {
	return o
}

func (o OfficeDataConnectorDataTypesResponsePtrOutput) Elem() OfficeDataConnectorDataTypesResponseOutput {
	return o.ApplyT(func(v *OfficeDataConnectorDataTypesResponse) OfficeDataConnectorDataTypesResponse {
		if v != nil {
			return *v
		}
		var ret OfficeDataConnectorDataTypesResponse
		return ret
	}).(OfficeDataConnectorDataTypesResponseOutput)
}

// Exchange data type connection.
func (o OfficeDataConnectorDataTypesResponsePtrOutput) Exchange() OfficeDataConnectorDataTypesResponseExchangePtrOutput {
	return o.ApplyT(func(v *OfficeDataConnectorDataTypesResponse) *OfficeDataConnectorDataTypesResponseExchange {
		if v == nil {
			return nil
		}
		return v.Exchange
	}).(OfficeDataConnectorDataTypesResponseExchangePtrOutput)
}

// SharePoint data type connection.
func (o OfficeDataConnectorDataTypesResponsePtrOutput) SharePoint() OfficeDataConnectorDataTypesResponseSharePointPtrOutput {
	return o.ApplyT(func(v *OfficeDataConnectorDataTypesResponse) *OfficeDataConnectorDataTypesResponseSharePoint {
		if v == nil {
			return nil
		}
		return v.SharePoint
	}).(OfficeDataConnectorDataTypesResponseSharePointPtrOutput)
}

// Teams data type connection.
func (o OfficeDataConnectorDataTypesResponsePtrOutput) Teams() OfficeDataConnectorDataTypesResponseTeamsPtrOutput {
	return o.ApplyT(func(v *OfficeDataConnectorDataTypesResponse) *OfficeDataConnectorDataTypesResponseTeams {
		if v == nil {
			return nil
		}
		return v.Teams
	}).(OfficeDataConnectorDataTypesResponseTeamsPtrOutput)
}

// Exchange data type connection.
type OfficeDataConnectorDataTypesResponseExchange struct {
	// Describe whether this data type connection is enabled or not.
	State *string `pulumi:"state"`
}

// Exchange data type connection.
type OfficeDataConnectorDataTypesResponseExchangeOutput struct{ *pulumi.OutputState }

func (OfficeDataConnectorDataTypesResponseExchangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OfficeDataConnectorDataTypesResponseExchange)(nil)).Elem()
}

func (o OfficeDataConnectorDataTypesResponseExchangeOutput) ToOfficeDataConnectorDataTypesResponseExchangeOutput() OfficeDataConnectorDataTypesResponseExchangeOutput {
	return o
}

func (o OfficeDataConnectorDataTypesResponseExchangeOutput) ToOfficeDataConnectorDataTypesResponseExchangeOutputWithContext(ctx context.Context) OfficeDataConnectorDataTypesResponseExchangeOutput {
	return o
}

// Describe whether this data type connection is enabled or not.
func (o OfficeDataConnectorDataTypesResponseExchangeOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OfficeDataConnectorDataTypesResponseExchange) *string { return v.State }).(pulumi.StringPtrOutput)
}

type OfficeDataConnectorDataTypesResponseExchangePtrOutput struct{ *pulumi.OutputState }

func (OfficeDataConnectorDataTypesResponseExchangePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OfficeDataConnectorDataTypesResponseExchange)(nil)).Elem()
}

func (o OfficeDataConnectorDataTypesResponseExchangePtrOutput) ToOfficeDataConnectorDataTypesResponseExchangePtrOutput() OfficeDataConnectorDataTypesResponseExchangePtrOutput {
	return o
}

func (o OfficeDataConnectorDataTypesResponseExchangePtrOutput) ToOfficeDataConnectorDataTypesResponseExchangePtrOutputWithContext(ctx context.Context) OfficeDataConnectorDataTypesResponseExchangePtrOutput {
	return o
}

func (o OfficeDataConnectorDataTypesResponseExchangePtrOutput) Elem() OfficeDataConnectorDataTypesResponseExchangeOutput {
	return o.ApplyT(func(v *OfficeDataConnectorDataTypesResponseExchange) OfficeDataConnectorDataTypesResponseExchange {
		if v != nil {
			return *v
		}
		var ret OfficeDataConnectorDataTypesResponseExchange
		return ret
	}).(OfficeDataConnectorDataTypesResponseExchangeOutput)
}

// Describe whether this data type connection is enabled or not.
func (o OfficeDataConnectorDataTypesResponseExchangePtrOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OfficeDataConnectorDataTypesResponseExchange) *string {
		if v == nil {
			return nil
		}
		return v.State
	}).(pulumi.StringPtrOutput)
}

// SharePoint data type connection.
type OfficeDataConnectorDataTypesResponseSharePoint struct {
	// Describe whether this data type connection is enabled or not.
	State *string `pulumi:"state"`
}

// SharePoint data type connection.
type OfficeDataConnectorDataTypesResponseSharePointOutput struct{ *pulumi.OutputState }

func (OfficeDataConnectorDataTypesResponseSharePointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OfficeDataConnectorDataTypesResponseSharePoint)(nil)).Elem()
}

func (o OfficeDataConnectorDataTypesResponseSharePointOutput) ToOfficeDataConnectorDataTypesResponseSharePointOutput() OfficeDataConnectorDataTypesResponseSharePointOutput {
	return o
}

func (o OfficeDataConnectorDataTypesResponseSharePointOutput) ToOfficeDataConnectorDataTypesResponseSharePointOutputWithContext(ctx context.Context) OfficeDataConnectorDataTypesResponseSharePointOutput {
	return o
}

// Describe whether this data type connection is enabled or not.
func (o OfficeDataConnectorDataTypesResponseSharePointOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OfficeDataConnectorDataTypesResponseSharePoint) *string { return v.State }).(pulumi.StringPtrOutput)
}

type OfficeDataConnectorDataTypesResponseSharePointPtrOutput struct{ *pulumi.OutputState }

func (OfficeDataConnectorDataTypesResponseSharePointPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OfficeDataConnectorDataTypesResponseSharePoint)(nil)).Elem()
}

func (o OfficeDataConnectorDataTypesResponseSharePointPtrOutput) ToOfficeDataConnectorDataTypesResponseSharePointPtrOutput() OfficeDataConnectorDataTypesResponseSharePointPtrOutput {
	return o
}

func (o OfficeDataConnectorDataTypesResponseSharePointPtrOutput) ToOfficeDataConnectorDataTypesResponseSharePointPtrOutputWithContext(ctx context.Context) OfficeDataConnectorDataTypesResponseSharePointPtrOutput {
	return o
}

func (o OfficeDataConnectorDataTypesResponseSharePointPtrOutput) Elem() OfficeDataConnectorDataTypesResponseSharePointOutput {
	return o.ApplyT(func(v *OfficeDataConnectorDataTypesResponseSharePoint) OfficeDataConnectorDataTypesResponseSharePoint {
		if v != nil {
			return *v
		}
		var ret OfficeDataConnectorDataTypesResponseSharePoint
		return ret
	}).(OfficeDataConnectorDataTypesResponseSharePointOutput)
}

// Describe whether this data type connection is enabled or not.
func (o OfficeDataConnectorDataTypesResponseSharePointPtrOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OfficeDataConnectorDataTypesResponseSharePoint) *string {
		if v == nil {
			return nil
		}
		return v.State
	}).(pulumi.StringPtrOutput)
}

// Teams data type connection.
type OfficeDataConnectorDataTypesResponseTeams struct {
	// Describe whether this data type connection is enabled or not.
	State *string `pulumi:"state"`
}

// Teams data type connection.
type OfficeDataConnectorDataTypesResponseTeamsOutput struct{ *pulumi.OutputState }

func (OfficeDataConnectorDataTypesResponseTeamsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OfficeDataConnectorDataTypesResponseTeams)(nil)).Elem()
}

func (o OfficeDataConnectorDataTypesResponseTeamsOutput) ToOfficeDataConnectorDataTypesResponseTeamsOutput() OfficeDataConnectorDataTypesResponseTeamsOutput {
	return o
}

func (o OfficeDataConnectorDataTypesResponseTeamsOutput) ToOfficeDataConnectorDataTypesResponseTeamsOutputWithContext(ctx context.Context) OfficeDataConnectorDataTypesResponseTeamsOutput {
	return o
}

// Describe whether this data type connection is enabled or not.
func (o OfficeDataConnectorDataTypesResponseTeamsOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OfficeDataConnectorDataTypesResponseTeams) *string { return v.State }).(pulumi.StringPtrOutput)
}

type OfficeDataConnectorDataTypesResponseTeamsPtrOutput struct{ *pulumi.OutputState }

func (OfficeDataConnectorDataTypesResponseTeamsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OfficeDataConnectorDataTypesResponseTeams)(nil)).Elem()
}

func (o OfficeDataConnectorDataTypesResponseTeamsPtrOutput) ToOfficeDataConnectorDataTypesResponseTeamsPtrOutput() OfficeDataConnectorDataTypesResponseTeamsPtrOutput {
	return o
}

func (o OfficeDataConnectorDataTypesResponseTeamsPtrOutput) ToOfficeDataConnectorDataTypesResponseTeamsPtrOutputWithContext(ctx context.Context) OfficeDataConnectorDataTypesResponseTeamsPtrOutput {
	return o
}

func (o OfficeDataConnectorDataTypesResponseTeamsPtrOutput) Elem() OfficeDataConnectorDataTypesResponseTeamsOutput {
	return o.ApplyT(func(v *OfficeDataConnectorDataTypesResponseTeams) OfficeDataConnectorDataTypesResponseTeams {
		if v != nil {
			return *v
		}
		var ret OfficeDataConnectorDataTypesResponseTeams
		return ret
	}).(OfficeDataConnectorDataTypesResponseTeamsOutput)
}

// Describe whether this data type connection is enabled or not.
func (o OfficeDataConnectorDataTypesResponseTeamsPtrOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OfficeDataConnectorDataTypesResponseTeams) *string {
		if v == nil {
			return nil
		}
		return v.State
	}).(pulumi.StringPtrOutput)
}

// SharePoint data type connection.
type OfficeDataConnectorDataTypesSharePoint struct {
	// Describe whether this data type connection is enabled or not.
	State *string `pulumi:"state"`
}

// OfficeDataConnectorDataTypesSharePointInput is an input type that accepts OfficeDataConnectorDataTypesSharePointArgs and OfficeDataConnectorDataTypesSharePointOutput values.
// You can construct a concrete instance of `OfficeDataConnectorDataTypesSharePointInput` via:
//
//	OfficeDataConnectorDataTypesSharePointArgs{...}
type OfficeDataConnectorDataTypesSharePointInput interface {
	pulumi.Input

	ToOfficeDataConnectorDataTypesSharePointOutput() OfficeDataConnectorDataTypesSharePointOutput
	ToOfficeDataConnectorDataTypesSharePointOutputWithContext(context.Context) OfficeDataConnectorDataTypesSharePointOutput
}

// SharePoint data type connection.
type OfficeDataConnectorDataTypesSharePointArgs struct {
	// Describe whether this data type connection is enabled or not.
	State pulumi.StringPtrInput `pulumi:"state"`
}

func (OfficeDataConnectorDataTypesSharePointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OfficeDataConnectorDataTypesSharePoint)(nil)).Elem()
}

func (i OfficeDataConnectorDataTypesSharePointArgs) ToOfficeDataConnectorDataTypesSharePointOutput() OfficeDataConnectorDataTypesSharePointOutput {
	return i.ToOfficeDataConnectorDataTypesSharePointOutputWithContext(context.Background())
}

func (i OfficeDataConnectorDataTypesSharePointArgs) ToOfficeDataConnectorDataTypesSharePointOutputWithContext(ctx context.Context) OfficeDataConnectorDataTypesSharePointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OfficeDataConnectorDataTypesSharePointOutput)
}

func (i OfficeDataConnectorDataTypesSharePointArgs) ToOfficeDataConnectorDataTypesSharePointPtrOutput() OfficeDataConnectorDataTypesSharePointPtrOutput {
	return i.ToOfficeDataConnectorDataTypesSharePointPtrOutputWithContext(context.Background())
}

func (i OfficeDataConnectorDataTypesSharePointArgs) ToOfficeDataConnectorDataTypesSharePointPtrOutputWithContext(ctx context.Context) OfficeDataConnectorDataTypesSharePointPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OfficeDataConnectorDataTypesSharePointOutput).ToOfficeDataConnectorDataTypesSharePointPtrOutputWithContext(ctx)
}

// OfficeDataConnectorDataTypesSharePointPtrInput is an input type that accepts OfficeDataConnectorDataTypesSharePointArgs, OfficeDataConnectorDataTypesSharePointPtr and OfficeDataConnectorDataTypesSharePointPtrOutput values.
// You can construct a concrete instance of `OfficeDataConnectorDataTypesSharePointPtrInput` via:
//
//	        OfficeDataConnectorDataTypesSharePointArgs{...}
//
//	or:
//
//	        nil
type OfficeDataConnectorDataTypesSharePointPtrInput interface {
	pulumi.Input

	ToOfficeDataConnectorDataTypesSharePointPtrOutput() OfficeDataConnectorDataTypesSharePointPtrOutput
	ToOfficeDataConnectorDataTypesSharePointPtrOutputWithContext(context.Context) OfficeDataConnectorDataTypesSharePointPtrOutput
}

type officeDataConnectorDataTypesSharePointPtrType OfficeDataConnectorDataTypesSharePointArgs

func OfficeDataConnectorDataTypesSharePointPtr(v *OfficeDataConnectorDataTypesSharePointArgs) OfficeDataConnectorDataTypesSharePointPtrInput {
	return (*officeDataConnectorDataTypesSharePointPtrType)(v)
}

func (*officeDataConnectorDataTypesSharePointPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OfficeDataConnectorDataTypesSharePoint)(nil)).Elem()
}

func (i *officeDataConnectorDataTypesSharePointPtrType) ToOfficeDataConnectorDataTypesSharePointPtrOutput() OfficeDataConnectorDataTypesSharePointPtrOutput {
	return i.ToOfficeDataConnectorDataTypesSharePointPtrOutputWithContext(context.Background())
}

func (i *officeDataConnectorDataTypesSharePointPtrType) ToOfficeDataConnectorDataTypesSharePointPtrOutputWithContext(ctx context.Context) OfficeDataConnectorDataTypesSharePointPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OfficeDataConnectorDataTypesSharePointPtrOutput)
}

// SharePoint data type connection.
type OfficeDataConnectorDataTypesSharePointOutput struct{ *pulumi.OutputState }

func (OfficeDataConnectorDataTypesSharePointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OfficeDataConnectorDataTypesSharePoint)(nil)).Elem()
}

func (o OfficeDataConnectorDataTypesSharePointOutput) ToOfficeDataConnectorDataTypesSharePointOutput() OfficeDataConnectorDataTypesSharePointOutput {
	return o
}

func (o OfficeDataConnectorDataTypesSharePointOutput) ToOfficeDataConnectorDataTypesSharePointOutputWithContext(ctx context.Context) OfficeDataConnectorDataTypesSharePointOutput {
	return o
}

func (o OfficeDataConnectorDataTypesSharePointOutput) ToOfficeDataConnectorDataTypesSharePointPtrOutput() OfficeDataConnectorDataTypesSharePointPtrOutput {
	return o.ToOfficeDataConnectorDataTypesSharePointPtrOutputWithContext(context.Background())
}

func (o OfficeDataConnectorDataTypesSharePointOutput) ToOfficeDataConnectorDataTypesSharePointPtrOutputWithContext(ctx context.Context) OfficeDataConnectorDataTypesSharePointPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OfficeDataConnectorDataTypesSharePoint) *OfficeDataConnectorDataTypesSharePoint {
		return &v
	}).(OfficeDataConnectorDataTypesSharePointPtrOutput)
}

// Describe whether this data type connection is enabled or not.
func (o OfficeDataConnectorDataTypesSharePointOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OfficeDataConnectorDataTypesSharePoint) *string { return v.State }).(pulumi.StringPtrOutput)
}

type OfficeDataConnectorDataTypesSharePointPtrOutput struct{ *pulumi.OutputState }

func (OfficeDataConnectorDataTypesSharePointPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OfficeDataConnectorDataTypesSharePoint)(nil)).Elem()
}

func (o OfficeDataConnectorDataTypesSharePointPtrOutput) ToOfficeDataConnectorDataTypesSharePointPtrOutput() OfficeDataConnectorDataTypesSharePointPtrOutput {
	return o
}

func (o OfficeDataConnectorDataTypesSharePointPtrOutput) ToOfficeDataConnectorDataTypesSharePointPtrOutputWithContext(ctx context.Context) OfficeDataConnectorDataTypesSharePointPtrOutput {
	return o
}

func (o OfficeDataConnectorDataTypesSharePointPtrOutput) Elem() OfficeDataConnectorDataTypesSharePointOutput {
	return o.ApplyT(func(v *OfficeDataConnectorDataTypesSharePoint) OfficeDataConnectorDataTypesSharePoint {
		if v != nil {
			return *v
		}
		var ret OfficeDataConnectorDataTypesSharePoint
		return ret
	}).(OfficeDataConnectorDataTypesSharePointOutput)
}

// Describe whether this data type connection is enabled or not.
func (o OfficeDataConnectorDataTypesSharePointPtrOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OfficeDataConnectorDataTypesSharePoint) *string {
		if v == nil {
			return nil
		}
		return v.State
	}).(pulumi.StringPtrOutput)
}

// Teams data type connection.
type OfficeDataConnectorDataTypesTeams struct {
	// Describe whether this data type connection is enabled or not.
	State *string `pulumi:"state"`
}

// OfficeDataConnectorDataTypesTeamsInput is an input type that accepts OfficeDataConnectorDataTypesTeamsArgs and OfficeDataConnectorDataTypesTeamsOutput values.
// You can construct a concrete instance of `OfficeDataConnectorDataTypesTeamsInput` via:
//
//	OfficeDataConnectorDataTypesTeamsArgs{...}
type OfficeDataConnectorDataTypesTeamsInput interface {
	pulumi.Input

	ToOfficeDataConnectorDataTypesTeamsOutput() OfficeDataConnectorDataTypesTeamsOutput
	ToOfficeDataConnectorDataTypesTeamsOutputWithContext(context.Context) OfficeDataConnectorDataTypesTeamsOutput
}

// Teams data type connection.
type OfficeDataConnectorDataTypesTeamsArgs struct {
	// Describe whether this data type connection is enabled or not.
	State pulumi.StringPtrInput `pulumi:"state"`
}

func (OfficeDataConnectorDataTypesTeamsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OfficeDataConnectorDataTypesTeams)(nil)).Elem()
}

func (i OfficeDataConnectorDataTypesTeamsArgs) ToOfficeDataConnectorDataTypesTeamsOutput() OfficeDataConnectorDataTypesTeamsOutput {
	return i.ToOfficeDataConnectorDataTypesTeamsOutputWithContext(context.Background())
}

func (i OfficeDataConnectorDataTypesTeamsArgs) ToOfficeDataConnectorDataTypesTeamsOutputWithContext(ctx context.Context) OfficeDataConnectorDataTypesTeamsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OfficeDataConnectorDataTypesTeamsOutput)
}

func (i OfficeDataConnectorDataTypesTeamsArgs) ToOfficeDataConnectorDataTypesTeamsPtrOutput() OfficeDataConnectorDataTypesTeamsPtrOutput {
	return i.ToOfficeDataConnectorDataTypesTeamsPtrOutputWithContext(context.Background())
}

func (i OfficeDataConnectorDataTypesTeamsArgs) ToOfficeDataConnectorDataTypesTeamsPtrOutputWithContext(ctx context.Context) OfficeDataConnectorDataTypesTeamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OfficeDataConnectorDataTypesTeamsOutput).ToOfficeDataConnectorDataTypesTeamsPtrOutputWithContext(ctx)
}

// OfficeDataConnectorDataTypesTeamsPtrInput is an input type that accepts OfficeDataConnectorDataTypesTeamsArgs, OfficeDataConnectorDataTypesTeamsPtr and OfficeDataConnectorDataTypesTeamsPtrOutput values.
// You can construct a concrete instance of `OfficeDataConnectorDataTypesTeamsPtrInput` via:
//
//	        OfficeDataConnectorDataTypesTeamsArgs{...}
//
//	or:
//
//	        nil
type OfficeDataConnectorDataTypesTeamsPtrInput interface {
	pulumi.Input

	ToOfficeDataConnectorDataTypesTeamsPtrOutput() OfficeDataConnectorDataTypesTeamsPtrOutput
	ToOfficeDataConnectorDataTypesTeamsPtrOutputWithContext(context.Context) OfficeDataConnectorDataTypesTeamsPtrOutput
}

type officeDataConnectorDataTypesTeamsPtrType OfficeDataConnectorDataTypesTeamsArgs

func OfficeDataConnectorDataTypesTeamsPtr(v *OfficeDataConnectorDataTypesTeamsArgs) OfficeDataConnectorDataTypesTeamsPtrInput {
	return (*officeDataConnectorDataTypesTeamsPtrType)(v)
}

func (*officeDataConnectorDataTypesTeamsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OfficeDataConnectorDataTypesTeams)(nil)).Elem()
}

func (i *officeDataConnectorDataTypesTeamsPtrType) ToOfficeDataConnectorDataTypesTeamsPtrOutput() OfficeDataConnectorDataTypesTeamsPtrOutput {
	return i.ToOfficeDataConnectorDataTypesTeamsPtrOutputWithContext(context.Background())
}

func (i *officeDataConnectorDataTypesTeamsPtrType) ToOfficeDataConnectorDataTypesTeamsPtrOutputWithContext(ctx context.Context) OfficeDataConnectorDataTypesTeamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OfficeDataConnectorDataTypesTeamsPtrOutput)
}

// Teams data type connection.
type OfficeDataConnectorDataTypesTeamsOutput struct{ *pulumi.OutputState }

func (OfficeDataConnectorDataTypesTeamsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OfficeDataConnectorDataTypesTeams)(nil)).Elem()
}

func (o OfficeDataConnectorDataTypesTeamsOutput) ToOfficeDataConnectorDataTypesTeamsOutput() OfficeDataConnectorDataTypesTeamsOutput {
	return o
}

func (o OfficeDataConnectorDataTypesTeamsOutput) ToOfficeDataConnectorDataTypesTeamsOutputWithContext(ctx context.Context) OfficeDataConnectorDataTypesTeamsOutput {
	return o
}

func (o OfficeDataConnectorDataTypesTeamsOutput) ToOfficeDataConnectorDataTypesTeamsPtrOutput() OfficeDataConnectorDataTypesTeamsPtrOutput {
	return o.ToOfficeDataConnectorDataTypesTeamsPtrOutputWithContext(context.Background())
}

func (o OfficeDataConnectorDataTypesTeamsOutput) ToOfficeDataConnectorDataTypesTeamsPtrOutputWithContext(ctx context.Context) OfficeDataConnectorDataTypesTeamsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OfficeDataConnectorDataTypesTeams) *OfficeDataConnectorDataTypesTeams {
		return &v
	}).(OfficeDataConnectorDataTypesTeamsPtrOutput)
}

// Describe whether this data type connection is enabled or not.
func (o OfficeDataConnectorDataTypesTeamsOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OfficeDataConnectorDataTypesTeams) *string { return v.State }).(pulumi.StringPtrOutput)
}

type OfficeDataConnectorDataTypesTeamsPtrOutput struct{ *pulumi.OutputState }

func (OfficeDataConnectorDataTypesTeamsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OfficeDataConnectorDataTypesTeams)(nil)).Elem()
}

func (o OfficeDataConnectorDataTypesTeamsPtrOutput) ToOfficeDataConnectorDataTypesTeamsPtrOutput() OfficeDataConnectorDataTypesTeamsPtrOutput {
	return o
}

func (o OfficeDataConnectorDataTypesTeamsPtrOutput) ToOfficeDataConnectorDataTypesTeamsPtrOutputWithContext(ctx context.Context) OfficeDataConnectorDataTypesTeamsPtrOutput {
	return o
}

func (o OfficeDataConnectorDataTypesTeamsPtrOutput) Elem() OfficeDataConnectorDataTypesTeamsOutput {
	return o.ApplyT(func(v *OfficeDataConnectorDataTypesTeams) OfficeDataConnectorDataTypesTeams {
		if v != nil {
			return *v
		}
		var ret OfficeDataConnectorDataTypesTeams
		return ret
	}).(OfficeDataConnectorDataTypesTeamsOutput)
}

// Describe whether this data type connection is enabled or not.
func (o OfficeDataConnectorDataTypesTeamsPtrOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OfficeDataConnectorDataTypesTeams) *string {
		if v == nil {
			return nil
		}
		return v.State
	}).(pulumi.StringPtrOutput)
}

// Model for API authentication for Oracle.
type OracleAuthModel struct {
	// Content of the PRM file
	PemFile string `pulumi:"pemFile"`
	// Public Fingerprint
	PublicFingerprint string `pulumi:"publicFingerprint"`
	// Oracle tenant ID
	TenantId string `pulumi:"tenantId"`
	// Type of paging
	// Expected value is 'Oracle'.
	Type string `pulumi:"type"`
	// Oracle user ID
	UserId string `pulumi:"userId"`
}

// OracleAuthModelInput is an input type that accepts OracleAuthModelArgs and OracleAuthModelOutput values.
// You can construct a concrete instance of `OracleAuthModelInput` via:
//
//	OracleAuthModelArgs{...}
type OracleAuthModelInput interface {
	pulumi.Input

	ToOracleAuthModelOutput() OracleAuthModelOutput
	ToOracleAuthModelOutputWithContext(context.Context) OracleAuthModelOutput
}

// Model for API authentication for Oracle.
type OracleAuthModelArgs struct {
	// Content of the PRM file
	PemFile pulumi.StringInput `pulumi:"pemFile"`
	// Public Fingerprint
	PublicFingerprint pulumi.StringInput `pulumi:"publicFingerprint"`
	// Oracle tenant ID
	TenantId pulumi.StringInput `pulumi:"tenantId"`
	// Type of paging
	// Expected value is 'Oracle'.
	Type pulumi.StringInput `pulumi:"type"`
	// Oracle user ID
	UserId pulumi.StringInput `pulumi:"userId"`
}

func (OracleAuthModelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OracleAuthModel)(nil)).Elem()
}

func (i OracleAuthModelArgs) ToOracleAuthModelOutput() OracleAuthModelOutput {
	return i.ToOracleAuthModelOutputWithContext(context.Background())
}

func (i OracleAuthModelArgs) ToOracleAuthModelOutputWithContext(ctx context.Context) OracleAuthModelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OracleAuthModelOutput)
}

// Model for API authentication for Oracle.
type OracleAuthModelOutput struct{ *pulumi.OutputState }

func (OracleAuthModelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OracleAuthModel)(nil)).Elem()
}

func (o OracleAuthModelOutput) ToOracleAuthModelOutput() OracleAuthModelOutput {
	return o
}

func (o OracleAuthModelOutput) ToOracleAuthModelOutputWithContext(ctx context.Context) OracleAuthModelOutput {
	return o
}

// Content of the PRM file
func (o OracleAuthModelOutput) PemFile() pulumi.StringOutput {
	return o.ApplyT(func(v OracleAuthModel) string { return v.PemFile }).(pulumi.StringOutput)
}

// Public Fingerprint
func (o OracleAuthModelOutput) PublicFingerprint() pulumi.StringOutput {
	return o.ApplyT(func(v OracleAuthModel) string { return v.PublicFingerprint }).(pulumi.StringOutput)
}

// Oracle tenant ID
func (o OracleAuthModelOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v OracleAuthModel) string { return v.TenantId }).(pulumi.StringOutput)
}

// Type of paging
// Expected value is 'Oracle'.
func (o OracleAuthModelOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v OracleAuthModel) string { return v.Type }).(pulumi.StringOutput)
}

// Oracle user ID
func (o OracleAuthModelOutput) UserId() pulumi.StringOutput {
	return o.ApplyT(func(v OracleAuthModel) string { return v.UserId }).(pulumi.StringOutput)
}

// Model for API authentication for Oracle.
type OracleAuthModelResponse struct {
	// Content of the PRM file
	PemFile string `pulumi:"pemFile"`
	// Public Fingerprint
	PublicFingerprint string `pulumi:"publicFingerprint"`
	// Oracle tenant ID
	TenantId string `pulumi:"tenantId"`
	// Type of paging
	// Expected value is 'Oracle'.
	Type string `pulumi:"type"`
	// Oracle user ID
	UserId string `pulumi:"userId"`
}

// Model for API authentication for Oracle.
type OracleAuthModelResponseOutput struct{ *pulumi.OutputState }

func (OracleAuthModelResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OracleAuthModelResponse)(nil)).Elem()
}

func (o OracleAuthModelResponseOutput) ToOracleAuthModelResponseOutput() OracleAuthModelResponseOutput {
	return o
}

func (o OracleAuthModelResponseOutput) ToOracleAuthModelResponseOutputWithContext(ctx context.Context) OracleAuthModelResponseOutput {
	return o
}

// Content of the PRM file
func (o OracleAuthModelResponseOutput) PemFile() pulumi.StringOutput {
	return o.ApplyT(func(v OracleAuthModelResponse) string { return v.PemFile }).(pulumi.StringOutput)
}

// Public Fingerprint
func (o OracleAuthModelResponseOutput) PublicFingerprint() pulumi.StringOutput {
	return o.ApplyT(func(v OracleAuthModelResponse) string { return v.PublicFingerprint }).(pulumi.StringOutput)
}

// Oracle tenant ID
func (o OracleAuthModelResponseOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v OracleAuthModelResponse) string { return v.TenantId }).(pulumi.StringOutput)
}

// Type of paging
// Expected value is 'Oracle'.
func (o OracleAuthModelResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v OracleAuthModelResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Oracle user ID
func (o OracleAuthModelResponseOutput) UserId() pulumi.StringOutput {
	return o.ApplyT(func(v OracleAuthModelResponse) string { return v.UserId }).(pulumi.StringOutput)
}

type PlaybookActionProperties struct {
	// The resource id of the playbook resource.
	LogicAppResourceId string `pulumi:"logicAppResourceId"`
	// The tenant id of the playbook resource.
	TenantId *string `pulumi:"tenantId"`
}

// PlaybookActionPropertiesInput is an input type that accepts PlaybookActionPropertiesArgs and PlaybookActionPropertiesOutput values.
// You can construct a concrete instance of `PlaybookActionPropertiesInput` via:
//
//	PlaybookActionPropertiesArgs{...}
type PlaybookActionPropertiesInput interface {
	pulumi.Input

	ToPlaybookActionPropertiesOutput() PlaybookActionPropertiesOutput
	ToPlaybookActionPropertiesOutputWithContext(context.Context) PlaybookActionPropertiesOutput
}

type PlaybookActionPropertiesArgs struct {
	// The resource id of the playbook resource.
	LogicAppResourceId pulumi.StringInput `pulumi:"logicAppResourceId"`
	// The tenant id of the playbook resource.
	TenantId pulumi.StringPtrInput `pulumi:"tenantId"`
}

func (PlaybookActionPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PlaybookActionProperties)(nil)).Elem()
}

func (i PlaybookActionPropertiesArgs) ToPlaybookActionPropertiesOutput() PlaybookActionPropertiesOutput {
	return i.ToPlaybookActionPropertiesOutputWithContext(context.Background())
}

func (i PlaybookActionPropertiesArgs) ToPlaybookActionPropertiesOutputWithContext(ctx context.Context) PlaybookActionPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PlaybookActionPropertiesOutput)
}

func (i PlaybookActionPropertiesArgs) ToPlaybookActionPropertiesPtrOutput() PlaybookActionPropertiesPtrOutput {
	return i.ToPlaybookActionPropertiesPtrOutputWithContext(context.Background())
}

func (i PlaybookActionPropertiesArgs) ToPlaybookActionPropertiesPtrOutputWithContext(ctx context.Context) PlaybookActionPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PlaybookActionPropertiesOutput).ToPlaybookActionPropertiesPtrOutputWithContext(ctx)
}

// PlaybookActionPropertiesPtrInput is an input type that accepts PlaybookActionPropertiesArgs, PlaybookActionPropertiesPtr and PlaybookActionPropertiesPtrOutput values.
// You can construct a concrete instance of `PlaybookActionPropertiesPtrInput` via:
//
//	        PlaybookActionPropertiesArgs{...}
//
//	or:
//
//	        nil
type PlaybookActionPropertiesPtrInput interface {
	pulumi.Input

	ToPlaybookActionPropertiesPtrOutput() PlaybookActionPropertiesPtrOutput
	ToPlaybookActionPropertiesPtrOutputWithContext(context.Context) PlaybookActionPropertiesPtrOutput
}

type playbookActionPropertiesPtrType PlaybookActionPropertiesArgs

func PlaybookActionPropertiesPtr(v *PlaybookActionPropertiesArgs) PlaybookActionPropertiesPtrInput {
	return (*playbookActionPropertiesPtrType)(v)
}

func (*playbookActionPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PlaybookActionProperties)(nil)).Elem()
}

func (i *playbookActionPropertiesPtrType) ToPlaybookActionPropertiesPtrOutput() PlaybookActionPropertiesPtrOutput {
	return i.ToPlaybookActionPropertiesPtrOutputWithContext(context.Background())
}

func (i *playbookActionPropertiesPtrType) ToPlaybookActionPropertiesPtrOutputWithContext(ctx context.Context) PlaybookActionPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PlaybookActionPropertiesPtrOutput)
}

type PlaybookActionPropertiesOutput struct{ *pulumi.OutputState }

func (PlaybookActionPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PlaybookActionProperties)(nil)).Elem()
}

func (o PlaybookActionPropertiesOutput) ToPlaybookActionPropertiesOutput() PlaybookActionPropertiesOutput {
	return o
}

func (o PlaybookActionPropertiesOutput) ToPlaybookActionPropertiesOutputWithContext(ctx context.Context) PlaybookActionPropertiesOutput {
	return o
}

func (o PlaybookActionPropertiesOutput) ToPlaybookActionPropertiesPtrOutput() PlaybookActionPropertiesPtrOutput {
	return o.ToPlaybookActionPropertiesPtrOutputWithContext(context.Background())
}

func (o PlaybookActionPropertiesOutput) ToPlaybookActionPropertiesPtrOutputWithContext(ctx context.Context) PlaybookActionPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PlaybookActionProperties) *PlaybookActionProperties {
		return &v
	}).(PlaybookActionPropertiesPtrOutput)
}

// The resource id of the playbook resource.
func (o PlaybookActionPropertiesOutput) LogicAppResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v PlaybookActionProperties) string { return v.LogicAppResourceId }).(pulumi.StringOutput)
}

// The tenant id of the playbook resource.
func (o PlaybookActionPropertiesOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PlaybookActionProperties) *string { return v.TenantId }).(pulumi.StringPtrOutput)
}

type PlaybookActionPropertiesPtrOutput struct{ *pulumi.OutputState }

func (PlaybookActionPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PlaybookActionProperties)(nil)).Elem()
}

func (o PlaybookActionPropertiesPtrOutput) ToPlaybookActionPropertiesPtrOutput() PlaybookActionPropertiesPtrOutput {
	return o
}

func (o PlaybookActionPropertiesPtrOutput) ToPlaybookActionPropertiesPtrOutputWithContext(ctx context.Context) PlaybookActionPropertiesPtrOutput {
	return o
}

func (o PlaybookActionPropertiesPtrOutput) Elem() PlaybookActionPropertiesOutput {
	return o.ApplyT(func(v *PlaybookActionProperties) PlaybookActionProperties {
		if v != nil {
			return *v
		}
		var ret PlaybookActionProperties
		return ret
	}).(PlaybookActionPropertiesOutput)
}

// The resource id of the playbook resource.
func (o PlaybookActionPropertiesPtrOutput) LogicAppResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PlaybookActionProperties) *string {
		if v == nil {
			return nil
		}
		return &v.LogicAppResourceId
	}).(pulumi.StringPtrOutput)
}

// The tenant id of the playbook resource.
func (o PlaybookActionPropertiesPtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PlaybookActionProperties) *string {
		if v == nil {
			return nil
		}
		return v.TenantId
	}).(pulumi.StringPtrOutput)
}

type PlaybookActionPropertiesResponse struct {
	// The resource id of the playbook resource.
	LogicAppResourceId string `pulumi:"logicAppResourceId"`
	// The tenant id of the playbook resource.
	TenantId *string `pulumi:"tenantId"`
}

type PlaybookActionPropertiesResponseOutput struct{ *pulumi.OutputState }

func (PlaybookActionPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PlaybookActionPropertiesResponse)(nil)).Elem()
}

func (o PlaybookActionPropertiesResponseOutput) ToPlaybookActionPropertiesResponseOutput() PlaybookActionPropertiesResponseOutput {
	return o
}

func (o PlaybookActionPropertiesResponseOutput) ToPlaybookActionPropertiesResponseOutputWithContext(ctx context.Context) PlaybookActionPropertiesResponseOutput {
	return o
}

// The resource id of the playbook resource.
func (o PlaybookActionPropertiesResponseOutput) LogicAppResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v PlaybookActionPropertiesResponse) string { return v.LogicAppResourceId }).(pulumi.StringOutput)
}

// The tenant id of the playbook resource.
func (o PlaybookActionPropertiesResponseOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PlaybookActionPropertiesResponse) *string { return v.TenantId }).(pulumi.StringPtrOutput)
}

type PlaybookActionPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (PlaybookActionPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PlaybookActionPropertiesResponse)(nil)).Elem()
}

func (o PlaybookActionPropertiesResponsePtrOutput) ToPlaybookActionPropertiesResponsePtrOutput() PlaybookActionPropertiesResponsePtrOutput {
	return o
}

func (o PlaybookActionPropertiesResponsePtrOutput) ToPlaybookActionPropertiesResponsePtrOutputWithContext(ctx context.Context) PlaybookActionPropertiesResponsePtrOutput {
	return o
}

func (o PlaybookActionPropertiesResponsePtrOutput) Elem() PlaybookActionPropertiesResponseOutput {
	return o.ApplyT(func(v *PlaybookActionPropertiesResponse) PlaybookActionPropertiesResponse {
		if v != nil {
			return *v
		}
		var ret PlaybookActionPropertiesResponse
		return ret
	}).(PlaybookActionPropertiesResponseOutput)
}

// The resource id of the playbook resource.
func (o PlaybookActionPropertiesResponsePtrOutput) LogicAppResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PlaybookActionPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.LogicAppResourceId
	}).(pulumi.StringPtrOutput)
}

// The tenant id of the playbook resource.
func (o PlaybookActionPropertiesResponsePtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PlaybookActionPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.TenantId
	}).(pulumi.StringPtrOutput)
}

// The available data types for Premium Microsoft Defender for Threat Intelligence data connector.
type PremiumMdtiDataConnectorDataTypes struct {
	// Data type for Premium Microsoft Defender for Threat Intelligence data connector.
	Connector PremiumMdtiDataConnectorDataTypesConnector `pulumi:"connector"`
}

// PremiumMdtiDataConnectorDataTypesInput is an input type that accepts PremiumMdtiDataConnectorDataTypesArgs and PremiumMdtiDataConnectorDataTypesOutput values.
// You can construct a concrete instance of `PremiumMdtiDataConnectorDataTypesInput` via:
//
//	PremiumMdtiDataConnectorDataTypesArgs{...}
type PremiumMdtiDataConnectorDataTypesInput interface {
	pulumi.Input

	ToPremiumMdtiDataConnectorDataTypesOutput() PremiumMdtiDataConnectorDataTypesOutput
	ToPremiumMdtiDataConnectorDataTypesOutputWithContext(context.Context) PremiumMdtiDataConnectorDataTypesOutput
}

// The available data types for Premium Microsoft Defender for Threat Intelligence data connector.
type PremiumMdtiDataConnectorDataTypesArgs struct {
	// Data type for Premium Microsoft Defender for Threat Intelligence data connector.
	Connector PremiumMdtiDataConnectorDataTypesConnectorInput `pulumi:"connector"`
}

func (PremiumMdtiDataConnectorDataTypesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PremiumMdtiDataConnectorDataTypes)(nil)).Elem()
}

func (i PremiumMdtiDataConnectorDataTypesArgs) ToPremiumMdtiDataConnectorDataTypesOutput() PremiumMdtiDataConnectorDataTypesOutput {
	return i.ToPremiumMdtiDataConnectorDataTypesOutputWithContext(context.Background())
}

func (i PremiumMdtiDataConnectorDataTypesArgs) ToPremiumMdtiDataConnectorDataTypesOutputWithContext(ctx context.Context) PremiumMdtiDataConnectorDataTypesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PremiumMdtiDataConnectorDataTypesOutput)
}

// The available data types for Premium Microsoft Defender for Threat Intelligence data connector.
type PremiumMdtiDataConnectorDataTypesOutput struct{ *pulumi.OutputState }

func (PremiumMdtiDataConnectorDataTypesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PremiumMdtiDataConnectorDataTypes)(nil)).Elem()
}

func (o PremiumMdtiDataConnectorDataTypesOutput) ToPremiumMdtiDataConnectorDataTypesOutput() PremiumMdtiDataConnectorDataTypesOutput {
	return o
}

func (o PremiumMdtiDataConnectorDataTypesOutput) ToPremiumMdtiDataConnectorDataTypesOutputWithContext(ctx context.Context) PremiumMdtiDataConnectorDataTypesOutput {
	return o
}

// Data type for Premium Microsoft Defender for Threat Intelligence data connector.
func (o PremiumMdtiDataConnectorDataTypesOutput) Connector() PremiumMdtiDataConnectorDataTypesConnectorOutput {
	return o.ApplyT(func(v PremiumMdtiDataConnectorDataTypes) PremiumMdtiDataConnectorDataTypesConnector {
		return v.Connector
	}).(PremiumMdtiDataConnectorDataTypesConnectorOutput)
}

// Data type for Premium Microsoft Defender for Threat Intelligence data connector.
type PremiumMdtiDataConnectorDataTypesConnector struct {
	// Describe whether this data type connection is enabled or not.
	State *string `pulumi:"state"`
}

// PremiumMdtiDataConnectorDataTypesConnectorInput is an input type that accepts PremiumMdtiDataConnectorDataTypesConnectorArgs and PremiumMdtiDataConnectorDataTypesConnectorOutput values.
// You can construct a concrete instance of `PremiumMdtiDataConnectorDataTypesConnectorInput` via:
//
//	PremiumMdtiDataConnectorDataTypesConnectorArgs{...}
type PremiumMdtiDataConnectorDataTypesConnectorInput interface {
	pulumi.Input

	ToPremiumMdtiDataConnectorDataTypesConnectorOutput() PremiumMdtiDataConnectorDataTypesConnectorOutput
	ToPremiumMdtiDataConnectorDataTypesConnectorOutputWithContext(context.Context) PremiumMdtiDataConnectorDataTypesConnectorOutput
}

// Data type for Premium Microsoft Defender for Threat Intelligence data connector.
type PremiumMdtiDataConnectorDataTypesConnectorArgs struct {
	// Describe whether this data type connection is enabled or not.
	State pulumi.StringPtrInput `pulumi:"state"`
}

func (PremiumMdtiDataConnectorDataTypesConnectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PremiumMdtiDataConnectorDataTypesConnector)(nil)).Elem()
}

func (i PremiumMdtiDataConnectorDataTypesConnectorArgs) ToPremiumMdtiDataConnectorDataTypesConnectorOutput() PremiumMdtiDataConnectorDataTypesConnectorOutput {
	return i.ToPremiumMdtiDataConnectorDataTypesConnectorOutputWithContext(context.Background())
}

func (i PremiumMdtiDataConnectorDataTypesConnectorArgs) ToPremiumMdtiDataConnectorDataTypesConnectorOutputWithContext(ctx context.Context) PremiumMdtiDataConnectorDataTypesConnectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PremiumMdtiDataConnectorDataTypesConnectorOutput)
}

// Data type for Premium Microsoft Defender for Threat Intelligence data connector.
type PremiumMdtiDataConnectorDataTypesConnectorOutput struct{ *pulumi.OutputState }

func (PremiumMdtiDataConnectorDataTypesConnectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PremiumMdtiDataConnectorDataTypesConnector)(nil)).Elem()
}

func (o PremiumMdtiDataConnectorDataTypesConnectorOutput) ToPremiumMdtiDataConnectorDataTypesConnectorOutput() PremiumMdtiDataConnectorDataTypesConnectorOutput {
	return o
}

func (o PremiumMdtiDataConnectorDataTypesConnectorOutput) ToPremiumMdtiDataConnectorDataTypesConnectorOutputWithContext(ctx context.Context) PremiumMdtiDataConnectorDataTypesConnectorOutput {
	return o
}

// Describe whether this data type connection is enabled or not.
func (o PremiumMdtiDataConnectorDataTypesConnectorOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PremiumMdtiDataConnectorDataTypesConnector) *string { return v.State }).(pulumi.StringPtrOutput)
}

// The available data types for Premium Microsoft Defender for Threat Intelligence data connector.
type PremiumMdtiDataConnectorDataTypesResponse struct {
	// Data type for Premium Microsoft Defender for Threat Intelligence data connector.
	Connector PremiumMdtiDataConnectorDataTypesResponseConnector `pulumi:"connector"`
}

// The available data types for Premium Microsoft Defender for Threat Intelligence data connector.
type PremiumMdtiDataConnectorDataTypesResponseOutput struct{ *pulumi.OutputState }

func (PremiumMdtiDataConnectorDataTypesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PremiumMdtiDataConnectorDataTypesResponse)(nil)).Elem()
}

func (o PremiumMdtiDataConnectorDataTypesResponseOutput) ToPremiumMdtiDataConnectorDataTypesResponseOutput() PremiumMdtiDataConnectorDataTypesResponseOutput {
	return o
}

func (o PremiumMdtiDataConnectorDataTypesResponseOutput) ToPremiumMdtiDataConnectorDataTypesResponseOutputWithContext(ctx context.Context) PremiumMdtiDataConnectorDataTypesResponseOutput {
	return o
}

// Data type for Premium Microsoft Defender for Threat Intelligence data connector.
func (o PremiumMdtiDataConnectorDataTypesResponseOutput) Connector() PremiumMdtiDataConnectorDataTypesResponseConnectorOutput {
	return o.ApplyT(func(v PremiumMdtiDataConnectorDataTypesResponse) PremiumMdtiDataConnectorDataTypesResponseConnector {
		return v.Connector
	}).(PremiumMdtiDataConnectorDataTypesResponseConnectorOutput)
}

// Data type for Premium Microsoft Defender for Threat Intelligence data connector.
type PremiumMdtiDataConnectorDataTypesResponseConnector struct {
	// Describe whether this data type connection is enabled or not.
	State *string `pulumi:"state"`
}

// Data type for Premium Microsoft Defender for Threat Intelligence data connector.
type PremiumMdtiDataConnectorDataTypesResponseConnectorOutput struct{ *pulumi.OutputState }

func (PremiumMdtiDataConnectorDataTypesResponseConnectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PremiumMdtiDataConnectorDataTypesResponseConnector)(nil)).Elem()
}

func (o PremiumMdtiDataConnectorDataTypesResponseConnectorOutput) ToPremiumMdtiDataConnectorDataTypesResponseConnectorOutput() PremiumMdtiDataConnectorDataTypesResponseConnectorOutput {
	return o
}

func (o PremiumMdtiDataConnectorDataTypesResponseConnectorOutput) ToPremiumMdtiDataConnectorDataTypesResponseConnectorOutputWithContext(ctx context.Context) PremiumMdtiDataConnectorDataTypesResponseConnectorOutput {
	return o
}

// Describe whether this data type connection is enabled or not.
func (o PremiumMdtiDataConnectorDataTypesResponseConnectorOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PremiumMdtiDataConnectorDataTypesResponseConnector) *string { return v.State }).(pulumi.StringPtrOutput)
}

// Describes an automation rule condition that evaluates an array property's value change
type PropertyArrayChangedConditionProperties struct {
	ConditionProperties *AutomationRulePropertyArrayChangedValuesCondition `pulumi:"conditionProperties"`
	// Expected value is 'PropertyArrayChanged'.
	ConditionType string `pulumi:"conditionType"`
}

// PropertyArrayChangedConditionPropertiesInput is an input type that accepts PropertyArrayChangedConditionPropertiesArgs and PropertyArrayChangedConditionPropertiesOutput values.
// You can construct a concrete instance of `PropertyArrayChangedConditionPropertiesInput` via:
//
//	PropertyArrayChangedConditionPropertiesArgs{...}
type PropertyArrayChangedConditionPropertiesInput interface {
	pulumi.Input

	ToPropertyArrayChangedConditionPropertiesOutput() PropertyArrayChangedConditionPropertiesOutput
	ToPropertyArrayChangedConditionPropertiesOutputWithContext(context.Context) PropertyArrayChangedConditionPropertiesOutput
}

// Describes an automation rule condition that evaluates an array property's value change
type PropertyArrayChangedConditionPropertiesArgs struct {
	ConditionProperties AutomationRulePropertyArrayChangedValuesConditionPtrInput `pulumi:"conditionProperties"`
	// Expected value is 'PropertyArrayChanged'.
	ConditionType pulumi.StringInput `pulumi:"conditionType"`
}

func (PropertyArrayChangedConditionPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PropertyArrayChangedConditionProperties)(nil)).Elem()
}

func (i PropertyArrayChangedConditionPropertiesArgs) ToPropertyArrayChangedConditionPropertiesOutput() PropertyArrayChangedConditionPropertiesOutput {
	return i.ToPropertyArrayChangedConditionPropertiesOutputWithContext(context.Background())
}

func (i PropertyArrayChangedConditionPropertiesArgs) ToPropertyArrayChangedConditionPropertiesOutputWithContext(ctx context.Context) PropertyArrayChangedConditionPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PropertyArrayChangedConditionPropertiesOutput)
}

// Describes an automation rule condition that evaluates an array property's value change
type PropertyArrayChangedConditionPropertiesOutput struct{ *pulumi.OutputState }

func (PropertyArrayChangedConditionPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PropertyArrayChangedConditionProperties)(nil)).Elem()
}

func (o PropertyArrayChangedConditionPropertiesOutput) ToPropertyArrayChangedConditionPropertiesOutput() PropertyArrayChangedConditionPropertiesOutput {
	return o
}

func (o PropertyArrayChangedConditionPropertiesOutput) ToPropertyArrayChangedConditionPropertiesOutputWithContext(ctx context.Context) PropertyArrayChangedConditionPropertiesOutput {
	return o
}

func (o PropertyArrayChangedConditionPropertiesOutput) ConditionProperties() AutomationRulePropertyArrayChangedValuesConditionPtrOutput {
	return o.ApplyT(func(v PropertyArrayChangedConditionProperties) *AutomationRulePropertyArrayChangedValuesCondition {
		return v.ConditionProperties
	}).(AutomationRulePropertyArrayChangedValuesConditionPtrOutput)
}

// Expected value is 'PropertyArrayChanged'.
func (o PropertyArrayChangedConditionPropertiesOutput) ConditionType() pulumi.StringOutput {
	return o.ApplyT(func(v PropertyArrayChangedConditionProperties) string { return v.ConditionType }).(pulumi.StringOutput)
}

// Describes an automation rule condition that evaluates an array property's value change
type PropertyArrayChangedConditionPropertiesResponse struct {
	ConditionProperties *AutomationRulePropertyArrayChangedValuesConditionResponse `pulumi:"conditionProperties"`
	// Expected value is 'PropertyArrayChanged'.
	ConditionType string `pulumi:"conditionType"`
}

// Describes an automation rule condition that evaluates an array property's value change
type PropertyArrayChangedConditionPropertiesResponseOutput struct{ *pulumi.OutputState }

func (PropertyArrayChangedConditionPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PropertyArrayChangedConditionPropertiesResponse)(nil)).Elem()
}

func (o PropertyArrayChangedConditionPropertiesResponseOutput) ToPropertyArrayChangedConditionPropertiesResponseOutput() PropertyArrayChangedConditionPropertiesResponseOutput {
	return o
}

func (o PropertyArrayChangedConditionPropertiesResponseOutput) ToPropertyArrayChangedConditionPropertiesResponseOutputWithContext(ctx context.Context) PropertyArrayChangedConditionPropertiesResponseOutput {
	return o
}

func (o PropertyArrayChangedConditionPropertiesResponseOutput) ConditionProperties() AutomationRulePropertyArrayChangedValuesConditionResponsePtrOutput {
	return o.ApplyT(func(v PropertyArrayChangedConditionPropertiesResponse) *AutomationRulePropertyArrayChangedValuesConditionResponse {
		return v.ConditionProperties
	}).(AutomationRulePropertyArrayChangedValuesConditionResponsePtrOutput)
}

// Expected value is 'PropertyArrayChanged'.
func (o PropertyArrayChangedConditionPropertiesResponseOutput) ConditionType() pulumi.StringOutput {
	return o.ApplyT(func(v PropertyArrayChangedConditionPropertiesResponse) string { return v.ConditionType }).(pulumi.StringOutput)
}

// Describes an automation rule condition that evaluates an array property's value
type PropertyArrayConditionProperties struct {
	// Describes an automation rule condition on array properties.
	ConditionProperties *AutomationRulePropertyArrayValuesCondition `pulumi:"conditionProperties"`
	// Expected value is 'PropertyArray'.
	ConditionType string `pulumi:"conditionType"`
}

// PropertyArrayConditionPropertiesInput is an input type that accepts PropertyArrayConditionPropertiesArgs and PropertyArrayConditionPropertiesOutput values.
// You can construct a concrete instance of `PropertyArrayConditionPropertiesInput` via:
//
//	PropertyArrayConditionPropertiesArgs{...}
type PropertyArrayConditionPropertiesInput interface {
	pulumi.Input

	ToPropertyArrayConditionPropertiesOutput() PropertyArrayConditionPropertiesOutput
	ToPropertyArrayConditionPropertiesOutputWithContext(context.Context) PropertyArrayConditionPropertiesOutput
}

// Describes an automation rule condition that evaluates an array property's value
type PropertyArrayConditionPropertiesArgs struct {
	// Describes an automation rule condition on array properties.
	ConditionProperties AutomationRulePropertyArrayValuesConditionPtrInput `pulumi:"conditionProperties"`
	// Expected value is 'PropertyArray'.
	ConditionType pulumi.StringInput `pulumi:"conditionType"`
}

func (PropertyArrayConditionPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PropertyArrayConditionProperties)(nil)).Elem()
}

func (i PropertyArrayConditionPropertiesArgs) ToPropertyArrayConditionPropertiesOutput() PropertyArrayConditionPropertiesOutput {
	return i.ToPropertyArrayConditionPropertiesOutputWithContext(context.Background())
}

func (i PropertyArrayConditionPropertiesArgs) ToPropertyArrayConditionPropertiesOutputWithContext(ctx context.Context) PropertyArrayConditionPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PropertyArrayConditionPropertiesOutput)
}

// Describes an automation rule condition that evaluates an array property's value
type PropertyArrayConditionPropertiesOutput struct{ *pulumi.OutputState }

func (PropertyArrayConditionPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PropertyArrayConditionProperties)(nil)).Elem()
}

func (o PropertyArrayConditionPropertiesOutput) ToPropertyArrayConditionPropertiesOutput() PropertyArrayConditionPropertiesOutput {
	return o
}

func (o PropertyArrayConditionPropertiesOutput) ToPropertyArrayConditionPropertiesOutputWithContext(ctx context.Context) PropertyArrayConditionPropertiesOutput {
	return o
}

// Describes an automation rule condition on array properties.
func (o PropertyArrayConditionPropertiesOutput) ConditionProperties() AutomationRulePropertyArrayValuesConditionPtrOutput {
	return o.ApplyT(func(v PropertyArrayConditionProperties) *AutomationRulePropertyArrayValuesCondition {
		return v.ConditionProperties
	}).(AutomationRulePropertyArrayValuesConditionPtrOutput)
}

// Expected value is 'PropertyArray'.
func (o PropertyArrayConditionPropertiesOutput) ConditionType() pulumi.StringOutput {
	return o.ApplyT(func(v PropertyArrayConditionProperties) string { return v.ConditionType }).(pulumi.StringOutput)
}

// Describes an automation rule condition that evaluates an array property's value
type PropertyArrayConditionPropertiesResponse struct {
	// Describes an automation rule condition on array properties.
	ConditionProperties *AutomationRulePropertyArrayValuesConditionResponse `pulumi:"conditionProperties"`
	// Expected value is 'PropertyArray'.
	ConditionType string `pulumi:"conditionType"`
}

// Describes an automation rule condition that evaluates an array property's value
type PropertyArrayConditionPropertiesResponseOutput struct{ *pulumi.OutputState }

func (PropertyArrayConditionPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PropertyArrayConditionPropertiesResponse)(nil)).Elem()
}

func (o PropertyArrayConditionPropertiesResponseOutput) ToPropertyArrayConditionPropertiesResponseOutput() PropertyArrayConditionPropertiesResponseOutput {
	return o
}

func (o PropertyArrayConditionPropertiesResponseOutput) ToPropertyArrayConditionPropertiesResponseOutputWithContext(ctx context.Context) PropertyArrayConditionPropertiesResponseOutput {
	return o
}

// Describes an automation rule condition on array properties.
func (o PropertyArrayConditionPropertiesResponseOutput) ConditionProperties() AutomationRulePropertyArrayValuesConditionResponsePtrOutput {
	return o.ApplyT(func(v PropertyArrayConditionPropertiesResponse) *AutomationRulePropertyArrayValuesConditionResponse {
		return v.ConditionProperties
	}).(AutomationRulePropertyArrayValuesConditionResponsePtrOutput)
}

// Expected value is 'PropertyArray'.
func (o PropertyArrayConditionPropertiesResponseOutput) ConditionType() pulumi.StringOutput {
	return o.ApplyT(func(v PropertyArrayConditionPropertiesResponse) string { return v.ConditionType }).(pulumi.StringOutput)
}

// Describes an automation rule condition that evaluates a property's value change
type PropertyChangedConditionProperties struct {
	ConditionProperties *AutomationRulePropertyValuesChangedCondition `pulumi:"conditionProperties"`
	// Expected value is 'PropertyChanged'.
	ConditionType string `pulumi:"conditionType"`
}

// PropertyChangedConditionPropertiesInput is an input type that accepts PropertyChangedConditionPropertiesArgs and PropertyChangedConditionPropertiesOutput values.
// You can construct a concrete instance of `PropertyChangedConditionPropertiesInput` via:
//
//	PropertyChangedConditionPropertiesArgs{...}
type PropertyChangedConditionPropertiesInput interface {
	pulumi.Input

	ToPropertyChangedConditionPropertiesOutput() PropertyChangedConditionPropertiesOutput
	ToPropertyChangedConditionPropertiesOutputWithContext(context.Context) PropertyChangedConditionPropertiesOutput
}

// Describes an automation rule condition that evaluates a property's value change
type PropertyChangedConditionPropertiesArgs struct {
	ConditionProperties AutomationRulePropertyValuesChangedConditionPtrInput `pulumi:"conditionProperties"`
	// Expected value is 'PropertyChanged'.
	ConditionType pulumi.StringInput `pulumi:"conditionType"`
}

func (PropertyChangedConditionPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PropertyChangedConditionProperties)(nil)).Elem()
}

func (i PropertyChangedConditionPropertiesArgs) ToPropertyChangedConditionPropertiesOutput() PropertyChangedConditionPropertiesOutput {
	return i.ToPropertyChangedConditionPropertiesOutputWithContext(context.Background())
}

func (i PropertyChangedConditionPropertiesArgs) ToPropertyChangedConditionPropertiesOutputWithContext(ctx context.Context) PropertyChangedConditionPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PropertyChangedConditionPropertiesOutput)
}

// Describes an automation rule condition that evaluates a property's value change
type PropertyChangedConditionPropertiesOutput struct{ *pulumi.OutputState }

func (PropertyChangedConditionPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PropertyChangedConditionProperties)(nil)).Elem()
}

func (o PropertyChangedConditionPropertiesOutput) ToPropertyChangedConditionPropertiesOutput() PropertyChangedConditionPropertiesOutput {
	return o
}

func (o PropertyChangedConditionPropertiesOutput) ToPropertyChangedConditionPropertiesOutputWithContext(ctx context.Context) PropertyChangedConditionPropertiesOutput {
	return o
}

func (o PropertyChangedConditionPropertiesOutput) ConditionProperties() AutomationRulePropertyValuesChangedConditionPtrOutput {
	return o.ApplyT(func(v PropertyChangedConditionProperties) *AutomationRulePropertyValuesChangedCondition {
		return v.ConditionProperties
	}).(AutomationRulePropertyValuesChangedConditionPtrOutput)
}

// Expected value is 'PropertyChanged'.
func (o PropertyChangedConditionPropertiesOutput) ConditionType() pulumi.StringOutput {
	return o.ApplyT(func(v PropertyChangedConditionProperties) string { return v.ConditionType }).(pulumi.StringOutput)
}

// Describes an automation rule condition that evaluates a property's value change
type PropertyChangedConditionPropertiesResponse struct {
	ConditionProperties *AutomationRulePropertyValuesChangedConditionResponse `pulumi:"conditionProperties"`
	// Expected value is 'PropertyChanged'.
	ConditionType string `pulumi:"conditionType"`
}

// Describes an automation rule condition that evaluates a property's value change
type PropertyChangedConditionPropertiesResponseOutput struct{ *pulumi.OutputState }

func (PropertyChangedConditionPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PropertyChangedConditionPropertiesResponse)(nil)).Elem()
}

func (o PropertyChangedConditionPropertiesResponseOutput) ToPropertyChangedConditionPropertiesResponseOutput() PropertyChangedConditionPropertiesResponseOutput {
	return o
}

func (o PropertyChangedConditionPropertiesResponseOutput) ToPropertyChangedConditionPropertiesResponseOutputWithContext(ctx context.Context) PropertyChangedConditionPropertiesResponseOutput {
	return o
}

func (o PropertyChangedConditionPropertiesResponseOutput) ConditionProperties() AutomationRulePropertyValuesChangedConditionResponsePtrOutput {
	return o.ApplyT(func(v PropertyChangedConditionPropertiesResponse) *AutomationRulePropertyValuesChangedConditionResponse {
		return v.ConditionProperties
	}).(AutomationRulePropertyValuesChangedConditionResponsePtrOutput)
}

// Expected value is 'PropertyChanged'.
func (o PropertyChangedConditionPropertiesResponseOutput) ConditionType() pulumi.StringOutput {
	return o.ApplyT(func(v PropertyChangedConditionPropertiesResponse) string { return v.ConditionType }).(pulumi.StringOutput)
}

// Describes an automation rule condition that evaluates a property's value
type PropertyConditionProperties struct {
	ConditionProperties *AutomationRulePropertyValuesCondition `pulumi:"conditionProperties"`
	// Expected value is 'Property'.
	ConditionType string `pulumi:"conditionType"`
}

// PropertyConditionPropertiesInput is an input type that accepts PropertyConditionPropertiesArgs and PropertyConditionPropertiesOutput values.
// You can construct a concrete instance of `PropertyConditionPropertiesInput` via:
//
//	PropertyConditionPropertiesArgs{...}
type PropertyConditionPropertiesInput interface {
	pulumi.Input

	ToPropertyConditionPropertiesOutput() PropertyConditionPropertiesOutput
	ToPropertyConditionPropertiesOutputWithContext(context.Context) PropertyConditionPropertiesOutput
}

// Describes an automation rule condition that evaluates a property's value
type PropertyConditionPropertiesArgs struct {
	ConditionProperties AutomationRulePropertyValuesConditionPtrInput `pulumi:"conditionProperties"`
	// Expected value is 'Property'.
	ConditionType pulumi.StringInput `pulumi:"conditionType"`
}

func (PropertyConditionPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PropertyConditionProperties)(nil)).Elem()
}

func (i PropertyConditionPropertiesArgs) ToPropertyConditionPropertiesOutput() PropertyConditionPropertiesOutput {
	return i.ToPropertyConditionPropertiesOutputWithContext(context.Background())
}

func (i PropertyConditionPropertiesArgs) ToPropertyConditionPropertiesOutputWithContext(ctx context.Context) PropertyConditionPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PropertyConditionPropertiesOutput)
}

// Describes an automation rule condition that evaluates a property's value
type PropertyConditionPropertiesOutput struct{ *pulumi.OutputState }

func (PropertyConditionPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PropertyConditionProperties)(nil)).Elem()
}

func (o PropertyConditionPropertiesOutput) ToPropertyConditionPropertiesOutput() PropertyConditionPropertiesOutput {
	return o
}

func (o PropertyConditionPropertiesOutput) ToPropertyConditionPropertiesOutputWithContext(ctx context.Context) PropertyConditionPropertiesOutput {
	return o
}

func (o PropertyConditionPropertiesOutput) ConditionProperties() AutomationRulePropertyValuesConditionPtrOutput {
	return o.ApplyT(func(v PropertyConditionProperties) *AutomationRulePropertyValuesCondition {
		return v.ConditionProperties
	}).(AutomationRulePropertyValuesConditionPtrOutput)
}

// Expected value is 'Property'.
func (o PropertyConditionPropertiesOutput) ConditionType() pulumi.StringOutput {
	return o.ApplyT(func(v PropertyConditionProperties) string { return v.ConditionType }).(pulumi.StringOutput)
}

// Describes an automation rule condition that evaluates a property's value
type PropertyConditionPropertiesResponse struct {
	ConditionProperties *AutomationRulePropertyValuesConditionResponse `pulumi:"conditionProperties"`
	// Expected value is 'Property'.
	ConditionType string `pulumi:"conditionType"`
}

// Describes an automation rule condition that evaluates a property's value
type PropertyConditionPropertiesResponseOutput struct{ *pulumi.OutputState }

func (PropertyConditionPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PropertyConditionPropertiesResponse)(nil)).Elem()
}

func (o PropertyConditionPropertiesResponseOutput) ToPropertyConditionPropertiesResponseOutput() PropertyConditionPropertiesResponseOutput {
	return o
}

func (o PropertyConditionPropertiesResponseOutput) ToPropertyConditionPropertiesResponseOutputWithContext(ctx context.Context) PropertyConditionPropertiesResponseOutput {
	return o
}

func (o PropertyConditionPropertiesResponseOutput) ConditionProperties() AutomationRulePropertyValuesConditionResponsePtrOutput {
	return o.ApplyT(func(v PropertyConditionPropertiesResponse) *AutomationRulePropertyValuesConditionResponse {
		return v.ConditionProperties
	}).(AutomationRulePropertyValuesConditionResponsePtrOutput)
}

// Expected value is 'Property'.
func (o PropertyConditionPropertiesResponseOutput) ConditionType() pulumi.StringOutput {
	return o.ApplyT(func(v PropertyConditionPropertiesResponse) string { return v.ConditionType }).(pulumi.StringOutput)
}

// Represents a repository.
type RepoResponse struct {
	// Array of branches.
	Branches []string `pulumi:"branches"`
	// The name of the repository.
	FullName *string `pulumi:"fullName"`
	// The installation id of the repository.
	InstallationId *float64 `pulumi:"installationId"`
	// The url to access the repository.
	Url *string `pulumi:"url"`
}

// Represents a repository.
type RepoResponseOutput struct{ *pulumi.OutputState }

func (RepoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RepoResponse)(nil)).Elem()
}

func (o RepoResponseOutput) ToRepoResponseOutput() RepoResponseOutput {
	return o
}

func (o RepoResponseOutput) ToRepoResponseOutputWithContext(ctx context.Context) RepoResponseOutput {
	return o
}

// Array of branches.
func (o RepoResponseOutput) Branches() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RepoResponse) []string { return v.Branches }).(pulumi.StringArrayOutput)
}

// The name of the repository.
func (o RepoResponseOutput) FullName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RepoResponse) *string { return v.FullName }).(pulumi.StringPtrOutput)
}

// The installation id of the repository.
func (o RepoResponseOutput) InstallationId() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v RepoResponse) *float64 { return v.InstallationId }).(pulumi.Float64PtrOutput)
}

// The url to access the repository.
func (o RepoResponseOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RepoResponse) *string { return v.Url }).(pulumi.StringPtrOutput)
}

type RepoResponseArrayOutput struct{ *pulumi.OutputState }

func (RepoResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RepoResponse)(nil)).Elem()
}

func (o RepoResponseArrayOutput) ToRepoResponseArrayOutput() RepoResponseArrayOutput {
	return o
}

func (o RepoResponseArrayOutput) ToRepoResponseArrayOutputWithContext(ctx context.Context) RepoResponseArrayOutput {
	return o
}

func (o RepoResponseArrayOutput) Index(i pulumi.IntInput) RepoResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RepoResponse {
		return vs[0].([]RepoResponse)[vs[1].(int)]
	}).(RepoResponseOutput)
}

// Required permissions for the connector resource provider that define in ResourceProviders.
// For more information about the permissions see <see href="https://docs.microsoft.com/en-us/azure/role-based-access-control/role-definitions#actions-format">here</see>.
type ResourceProviderRequiredPermissions struct {
	// Gets or sets a value indicating whether the permission is custom actions (POST).
	Action *bool `pulumi:"action"`
	// Gets or sets a value indicating whether the permission is delete action (DELETE).
	Delete *bool `pulumi:"delete"`
	// Gets or sets a value indicating whether the permission is read action (GET).
	Read *bool `pulumi:"read"`
	// Gets or sets a value indicating whether the permission is write action (PUT or PATCH).
	Write *bool `pulumi:"write"`
}

// ResourceProviderRequiredPermissionsInput is an input type that accepts ResourceProviderRequiredPermissionsArgs and ResourceProviderRequiredPermissionsOutput values.
// You can construct a concrete instance of `ResourceProviderRequiredPermissionsInput` via:
//
//	ResourceProviderRequiredPermissionsArgs{...}
type ResourceProviderRequiredPermissionsInput interface {
	pulumi.Input

	ToResourceProviderRequiredPermissionsOutput() ResourceProviderRequiredPermissionsOutput
	ToResourceProviderRequiredPermissionsOutputWithContext(context.Context) ResourceProviderRequiredPermissionsOutput
}

// Required permissions for the connector resource provider that define in ResourceProviders.
// For more information about the permissions see <see href="https://docs.microsoft.com/en-us/azure/role-based-access-control/role-definitions#actions-format">here</see>.
type ResourceProviderRequiredPermissionsArgs struct {
	// Gets or sets a value indicating whether the permission is custom actions (POST).
	Action pulumi.BoolPtrInput `pulumi:"action"`
	// Gets or sets a value indicating whether the permission is delete action (DELETE).
	Delete pulumi.BoolPtrInput `pulumi:"delete"`
	// Gets or sets a value indicating whether the permission is read action (GET).
	Read pulumi.BoolPtrInput `pulumi:"read"`
	// Gets or sets a value indicating whether the permission is write action (PUT or PATCH).
	Write pulumi.BoolPtrInput `pulumi:"write"`
}

func (ResourceProviderRequiredPermissionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceProviderRequiredPermissions)(nil)).Elem()
}

func (i ResourceProviderRequiredPermissionsArgs) ToResourceProviderRequiredPermissionsOutput() ResourceProviderRequiredPermissionsOutput {
	return i.ToResourceProviderRequiredPermissionsOutputWithContext(context.Background())
}

func (i ResourceProviderRequiredPermissionsArgs) ToResourceProviderRequiredPermissionsOutputWithContext(ctx context.Context) ResourceProviderRequiredPermissionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceProviderRequiredPermissionsOutput)
}

// Required permissions for the connector resource provider that define in ResourceProviders.
// For more information about the permissions see <see href="https://docs.microsoft.com/en-us/azure/role-based-access-control/role-definitions#actions-format">here</see>.
type ResourceProviderRequiredPermissionsOutput struct{ *pulumi.OutputState }

func (ResourceProviderRequiredPermissionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceProviderRequiredPermissions)(nil)).Elem()
}

func (o ResourceProviderRequiredPermissionsOutput) ToResourceProviderRequiredPermissionsOutput() ResourceProviderRequiredPermissionsOutput {
	return o
}

func (o ResourceProviderRequiredPermissionsOutput) ToResourceProviderRequiredPermissionsOutputWithContext(ctx context.Context) ResourceProviderRequiredPermissionsOutput {
	return o
}

// Gets or sets a value indicating whether the permission is custom actions (POST).
func (o ResourceProviderRequiredPermissionsOutput) Action() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ResourceProviderRequiredPermissions) *bool { return v.Action }).(pulumi.BoolPtrOutput)
}

// Gets or sets a value indicating whether the permission is delete action (DELETE).
func (o ResourceProviderRequiredPermissionsOutput) Delete() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ResourceProviderRequiredPermissions) *bool { return v.Delete }).(pulumi.BoolPtrOutput)
}

// Gets or sets a value indicating whether the permission is read action (GET).
func (o ResourceProviderRequiredPermissionsOutput) Read() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ResourceProviderRequiredPermissions) *bool { return v.Read }).(pulumi.BoolPtrOutput)
}

// Gets or sets a value indicating whether the permission is write action (PUT or PATCH).
func (o ResourceProviderRequiredPermissionsOutput) Write() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ResourceProviderRequiredPermissions) *bool { return v.Write }).(pulumi.BoolPtrOutput)
}

// Required permissions for the connector resource provider that define in ResourceProviders.
// For more information about the permissions see <see href="https://docs.microsoft.com/en-us/azure/role-based-access-control/role-definitions#actions-format">here</see>.
type ResourceProviderRequiredPermissionsResponse struct {
	// Gets or sets a value indicating whether the permission is custom actions (POST).
	Action *bool `pulumi:"action"`
	// Gets or sets a value indicating whether the permission is delete action (DELETE).
	Delete *bool `pulumi:"delete"`
	// Gets or sets a value indicating whether the permission is read action (GET).
	Read *bool `pulumi:"read"`
	// Gets or sets a value indicating whether the permission is write action (PUT or PATCH).
	Write *bool `pulumi:"write"`
}

// Required permissions for the connector resource provider that define in ResourceProviders.
// For more information about the permissions see <see href="https://docs.microsoft.com/en-us/azure/role-based-access-control/role-definitions#actions-format">here</see>.
type ResourceProviderRequiredPermissionsResponseOutput struct{ *pulumi.OutputState }

func (ResourceProviderRequiredPermissionsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceProviderRequiredPermissionsResponse)(nil)).Elem()
}

func (o ResourceProviderRequiredPermissionsResponseOutput) ToResourceProviderRequiredPermissionsResponseOutput() ResourceProviderRequiredPermissionsResponseOutput {
	return o
}

func (o ResourceProviderRequiredPermissionsResponseOutput) ToResourceProviderRequiredPermissionsResponseOutputWithContext(ctx context.Context) ResourceProviderRequiredPermissionsResponseOutput {
	return o
}

// Gets or sets a value indicating whether the permission is custom actions (POST).
func (o ResourceProviderRequiredPermissionsResponseOutput) Action() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ResourceProviderRequiredPermissionsResponse) *bool { return v.Action }).(pulumi.BoolPtrOutput)
}

// Gets or sets a value indicating whether the permission is delete action (DELETE).
func (o ResourceProviderRequiredPermissionsResponseOutput) Delete() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ResourceProviderRequiredPermissionsResponse) *bool { return v.Delete }).(pulumi.BoolPtrOutput)
}

// Gets or sets a value indicating whether the permission is read action (GET).
func (o ResourceProviderRequiredPermissionsResponseOutput) Read() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ResourceProviderRequiredPermissionsResponse) *bool { return v.Read }).(pulumi.BoolPtrOutput)
}

// Gets or sets a value indicating whether the permission is write action (PUT or PATCH).
func (o ResourceProviderRequiredPermissionsResponseOutput) Write() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ResourceProviderRequiredPermissionsResponse) *bool { return v.Write }).(pulumi.BoolPtrOutput)
}

// The request configuration.
type RestApiPollerRequestConfig struct {
	// The API endpoint.
	ApiEndpoint string `pulumi:"apiEndpoint"`
	// The query parameter name which the remote server expect to end query. This property goes hand to hand with `startTimeAttributeName`
	EndTimeAttributeName *string `pulumi:"endTimeAttributeName"`
	// The header for the request for the remote server.
	Headers map[string]string `pulumi:"headers"`
	// The HTTP method, default value GET.
	HttpMethod *string `pulumi:"httpMethod"`
	// Flag to indicate if HTTP POST payload is in JSON format (vs form-urlencoded).
	IsPostPayloadJson *bool `pulumi:"isPostPayloadJson"`
	// The HTTP query parameters to RESTful API.
	QueryParameters interface{} `pulumi:"queryParameters"`
	// the query parameters template. Defines the query parameters template to use when passing query parameters in advanced scenarios.
	QueryParametersTemplate *string `pulumi:"queryParametersTemplate"`
	// The query time format. A remote server can have a query to pull data from range 'start' to 'end'. This property indicate what is the expected time format the remote server know to parse.
	QueryTimeFormat *string `pulumi:"queryTimeFormat"`
	// The query parameter name which we need to send the server for query logs in time interval. Should be defined with `queryTimeIntervalPrepend` and `queryTimeIntervalDelimiter`
	QueryTimeIntervalAttributeName *string `pulumi:"queryTimeIntervalAttributeName"`
	// The delimiter string between 2 QueryTimeFormat in the query parameter `queryTimeIntervalAttributeName`.
	QueryTimeIntervalDelimiter *string `pulumi:"queryTimeIntervalDelimiter"`
	// The string prepend to the value of the query parameter in `queryTimeIntervalAttributeName`.
	QueryTimeIntervalPrepend *string `pulumi:"queryTimeIntervalPrepend"`
	// The query window in minutes for the request.
	QueryWindowInMin *int `pulumi:"queryWindowInMin"`
	// The Rate limit queries per second for the request..
	RateLimitQPS *int `pulumi:"rateLimitQPS"`
	// The retry count.
	RetryCount *int `pulumi:"retryCount"`
	// The query parameter name which the remote server expect to start query. This property goes hand to hand with `endTimeAttributeName`.
	StartTimeAttributeName *string `pulumi:"startTimeAttributeName"`
	// The timeout in seconds.
	TimeoutInSeconds *int `pulumi:"timeoutInSeconds"`
}

// RestApiPollerRequestConfigInput is an input type that accepts RestApiPollerRequestConfigArgs and RestApiPollerRequestConfigOutput values.
// You can construct a concrete instance of `RestApiPollerRequestConfigInput` via:
//
//	RestApiPollerRequestConfigArgs{...}
type RestApiPollerRequestConfigInput interface {
	pulumi.Input

	ToRestApiPollerRequestConfigOutput() RestApiPollerRequestConfigOutput
	ToRestApiPollerRequestConfigOutputWithContext(context.Context) RestApiPollerRequestConfigOutput
}

// The request configuration.
type RestApiPollerRequestConfigArgs struct {
	// The API endpoint.
	ApiEndpoint pulumi.StringInput `pulumi:"apiEndpoint"`
	// The query parameter name which the remote server expect to end query. This property goes hand to hand with `startTimeAttributeName`
	EndTimeAttributeName pulumi.StringPtrInput `pulumi:"endTimeAttributeName"`
	// The header for the request for the remote server.
	Headers pulumi.StringMapInput `pulumi:"headers"`
	// The HTTP method, default value GET.
	HttpMethod pulumi.StringPtrInput `pulumi:"httpMethod"`
	// Flag to indicate if HTTP POST payload is in JSON format (vs form-urlencoded).
	IsPostPayloadJson pulumi.BoolPtrInput `pulumi:"isPostPayloadJson"`
	// The HTTP query parameters to RESTful API.
	QueryParameters pulumi.Input `pulumi:"queryParameters"`
	// the query parameters template. Defines the query parameters template to use when passing query parameters in advanced scenarios.
	QueryParametersTemplate pulumi.StringPtrInput `pulumi:"queryParametersTemplate"`
	// The query time format. A remote server can have a query to pull data from range 'start' to 'end'. This property indicate what is the expected time format the remote server know to parse.
	QueryTimeFormat pulumi.StringPtrInput `pulumi:"queryTimeFormat"`
	// The query parameter name which we need to send the server for query logs in time interval. Should be defined with `queryTimeIntervalPrepend` and `queryTimeIntervalDelimiter`
	QueryTimeIntervalAttributeName pulumi.StringPtrInput `pulumi:"queryTimeIntervalAttributeName"`
	// The delimiter string between 2 QueryTimeFormat in the query parameter `queryTimeIntervalAttributeName`.
	QueryTimeIntervalDelimiter pulumi.StringPtrInput `pulumi:"queryTimeIntervalDelimiter"`
	// The string prepend to the value of the query parameter in `queryTimeIntervalAttributeName`.
	QueryTimeIntervalPrepend pulumi.StringPtrInput `pulumi:"queryTimeIntervalPrepend"`
	// The query window in minutes for the request.
	QueryWindowInMin pulumi.IntPtrInput `pulumi:"queryWindowInMin"`
	// The Rate limit queries per second for the request..
	RateLimitQPS pulumi.IntPtrInput `pulumi:"rateLimitQPS"`
	// The retry count.
	RetryCount pulumi.IntPtrInput `pulumi:"retryCount"`
	// The query parameter name which the remote server expect to start query. This property goes hand to hand with `endTimeAttributeName`.
	StartTimeAttributeName pulumi.StringPtrInput `pulumi:"startTimeAttributeName"`
	// The timeout in seconds.
	TimeoutInSeconds pulumi.IntPtrInput `pulumi:"timeoutInSeconds"`
}

func (RestApiPollerRequestConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RestApiPollerRequestConfig)(nil)).Elem()
}

func (i RestApiPollerRequestConfigArgs) ToRestApiPollerRequestConfigOutput() RestApiPollerRequestConfigOutput {
	return i.ToRestApiPollerRequestConfigOutputWithContext(context.Background())
}

func (i RestApiPollerRequestConfigArgs) ToRestApiPollerRequestConfigOutputWithContext(ctx context.Context) RestApiPollerRequestConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RestApiPollerRequestConfigOutput)
}

// The request configuration.
type RestApiPollerRequestConfigOutput struct{ *pulumi.OutputState }

func (RestApiPollerRequestConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RestApiPollerRequestConfig)(nil)).Elem()
}

func (o RestApiPollerRequestConfigOutput) ToRestApiPollerRequestConfigOutput() RestApiPollerRequestConfigOutput {
	return o
}

func (o RestApiPollerRequestConfigOutput) ToRestApiPollerRequestConfigOutputWithContext(ctx context.Context) RestApiPollerRequestConfigOutput {
	return o
}

// The API endpoint.
func (o RestApiPollerRequestConfigOutput) ApiEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v RestApiPollerRequestConfig) string { return v.ApiEndpoint }).(pulumi.StringOutput)
}

// The query parameter name which the remote server expect to end query. This property goes hand to hand with `startTimeAttributeName`
func (o RestApiPollerRequestConfigOutput) EndTimeAttributeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RestApiPollerRequestConfig) *string { return v.EndTimeAttributeName }).(pulumi.StringPtrOutput)
}

// The header for the request for the remote server.
func (o RestApiPollerRequestConfigOutput) Headers() pulumi.StringMapOutput {
	return o.ApplyT(func(v RestApiPollerRequestConfig) map[string]string { return v.Headers }).(pulumi.StringMapOutput)
}

// The HTTP method, default value GET.
func (o RestApiPollerRequestConfigOutput) HttpMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RestApiPollerRequestConfig) *string { return v.HttpMethod }).(pulumi.StringPtrOutput)
}

// Flag to indicate if HTTP POST payload is in JSON format (vs form-urlencoded).
func (o RestApiPollerRequestConfigOutput) IsPostPayloadJson() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RestApiPollerRequestConfig) *bool { return v.IsPostPayloadJson }).(pulumi.BoolPtrOutput)
}

// The HTTP query parameters to RESTful API.
func (o RestApiPollerRequestConfigOutput) QueryParameters() pulumi.AnyOutput {
	return o.ApplyT(func(v RestApiPollerRequestConfig) interface{} { return v.QueryParameters }).(pulumi.AnyOutput)
}

// the query parameters template. Defines the query parameters template to use when passing query parameters in advanced scenarios.
func (o RestApiPollerRequestConfigOutput) QueryParametersTemplate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RestApiPollerRequestConfig) *string { return v.QueryParametersTemplate }).(pulumi.StringPtrOutput)
}

// The query time format. A remote server can have a query to pull data from range 'start' to 'end'. This property indicate what is the expected time format the remote server know to parse.
func (o RestApiPollerRequestConfigOutput) QueryTimeFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RestApiPollerRequestConfig) *string { return v.QueryTimeFormat }).(pulumi.StringPtrOutput)
}

// The query parameter name which we need to send the server for query logs in time interval. Should be defined with `queryTimeIntervalPrepend` and `queryTimeIntervalDelimiter`
func (o RestApiPollerRequestConfigOutput) QueryTimeIntervalAttributeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RestApiPollerRequestConfig) *string { return v.QueryTimeIntervalAttributeName }).(pulumi.StringPtrOutput)
}

// The delimiter string between 2 QueryTimeFormat in the query parameter `queryTimeIntervalAttributeName`.
func (o RestApiPollerRequestConfigOutput) QueryTimeIntervalDelimiter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RestApiPollerRequestConfig) *string { return v.QueryTimeIntervalDelimiter }).(pulumi.StringPtrOutput)
}

// The string prepend to the value of the query parameter in `queryTimeIntervalAttributeName`.
func (o RestApiPollerRequestConfigOutput) QueryTimeIntervalPrepend() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RestApiPollerRequestConfig) *string { return v.QueryTimeIntervalPrepend }).(pulumi.StringPtrOutput)
}

// The query window in minutes for the request.
func (o RestApiPollerRequestConfigOutput) QueryWindowInMin() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RestApiPollerRequestConfig) *int { return v.QueryWindowInMin }).(pulumi.IntPtrOutput)
}

// The Rate limit queries per second for the request..
func (o RestApiPollerRequestConfigOutput) RateLimitQPS() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RestApiPollerRequestConfig) *int { return v.RateLimitQPS }).(pulumi.IntPtrOutput)
}

// The retry count.
func (o RestApiPollerRequestConfigOutput) RetryCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RestApiPollerRequestConfig) *int { return v.RetryCount }).(pulumi.IntPtrOutput)
}

// The query parameter name which the remote server expect to start query. This property goes hand to hand with `endTimeAttributeName`.
func (o RestApiPollerRequestConfigOutput) StartTimeAttributeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RestApiPollerRequestConfig) *string { return v.StartTimeAttributeName }).(pulumi.StringPtrOutput)
}

// The timeout in seconds.
func (o RestApiPollerRequestConfigOutput) TimeoutInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RestApiPollerRequestConfig) *int { return v.TimeoutInSeconds }).(pulumi.IntPtrOutput)
}

// The request configuration.
type RestApiPollerRequestConfigResponse struct {
	// The API endpoint.
	ApiEndpoint string `pulumi:"apiEndpoint"`
	// The query parameter name which the remote server expect to end query. This property goes hand to hand with `startTimeAttributeName`
	EndTimeAttributeName *string `pulumi:"endTimeAttributeName"`
	// The header for the request for the remote server.
	Headers map[string]string `pulumi:"headers"`
	// The HTTP method, default value GET.
	HttpMethod *string `pulumi:"httpMethod"`
	// Flag to indicate if HTTP POST payload is in JSON format (vs form-urlencoded).
	IsPostPayloadJson *bool `pulumi:"isPostPayloadJson"`
	// The HTTP query parameters to RESTful API.
	QueryParameters interface{} `pulumi:"queryParameters"`
	// the query parameters template. Defines the query parameters template to use when passing query parameters in advanced scenarios.
	QueryParametersTemplate *string `pulumi:"queryParametersTemplate"`
	// The query time format. A remote server can have a query to pull data from range 'start' to 'end'. This property indicate what is the expected time format the remote server know to parse.
	QueryTimeFormat *string `pulumi:"queryTimeFormat"`
	// The query parameter name which we need to send the server for query logs in time interval. Should be defined with `queryTimeIntervalPrepend` and `queryTimeIntervalDelimiter`
	QueryTimeIntervalAttributeName *string `pulumi:"queryTimeIntervalAttributeName"`
	// The delimiter string between 2 QueryTimeFormat in the query parameter `queryTimeIntervalAttributeName`.
	QueryTimeIntervalDelimiter *string `pulumi:"queryTimeIntervalDelimiter"`
	// The string prepend to the value of the query parameter in `queryTimeIntervalAttributeName`.
	QueryTimeIntervalPrepend *string `pulumi:"queryTimeIntervalPrepend"`
	// The query window in minutes for the request.
	QueryWindowInMin *int `pulumi:"queryWindowInMin"`
	// The Rate limit queries per second for the request..
	RateLimitQPS *int `pulumi:"rateLimitQPS"`
	// The retry count.
	RetryCount *int `pulumi:"retryCount"`
	// The query parameter name which the remote server expect to start query. This property goes hand to hand with `endTimeAttributeName`.
	StartTimeAttributeName *string `pulumi:"startTimeAttributeName"`
	// The timeout in seconds.
	TimeoutInSeconds *int `pulumi:"timeoutInSeconds"`
}

// The request configuration.
type RestApiPollerRequestConfigResponseOutput struct{ *pulumi.OutputState }

func (RestApiPollerRequestConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RestApiPollerRequestConfigResponse)(nil)).Elem()
}

func (o RestApiPollerRequestConfigResponseOutput) ToRestApiPollerRequestConfigResponseOutput() RestApiPollerRequestConfigResponseOutput {
	return o
}

func (o RestApiPollerRequestConfigResponseOutput) ToRestApiPollerRequestConfigResponseOutputWithContext(ctx context.Context) RestApiPollerRequestConfigResponseOutput {
	return o
}

// The API endpoint.
func (o RestApiPollerRequestConfigResponseOutput) ApiEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v RestApiPollerRequestConfigResponse) string { return v.ApiEndpoint }).(pulumi.StringOutput)
}

// The query parameter name which the remote server expect to end query. This property goes hand to hand with `startTimeAttributeName`
func (o RestApiPollerRequestConfigResponseOutput) EndTimeAttributeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RestApiPollerRequestConfigResponse) *string { return v.EndTimeAttributeName }).(pulumi.StringPtrOutput)
}

// The header for the request for the remote server.
func (o RestApiPollerRequestConfigResponseOutput) Headers() pulumi.StringMapOutput {
	return o.ApplyT(func(v RestApiPollerRequestConfigResponse) map[string]string { return v.Headers }).(pulumi.StringMapOutput)
}

// The HTTP method, default value GET.
func (o RestApiPollerRequestConfigResponseOutput) HttpMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RestApiPollerRequestConfigResponse) *string { return v.HttpMethod }).(pulumi.StringPtrOutput)
}

// Flag to indicate if HTTP POST payload is in JSON format (vs form-urlencoded).
func (o RestApiPollerRequestConfigResponseOutput) IsPostPayloadJson() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RestApiPollerRequestConfigResponse) *bool { return v.IsPostPayloadJson }).(pulumi.BoolPtrOutput)
}

// The HTTP query parameters to RESTful API.
func (o RestApiPollerRequestConfigResponseOutput) QueryParameters() pulumi.AnyOutput {
	return o.ApplyT(func(v RestApiPollerRequestConfigResponse) interface{} { return v.QueryParameters }).(pulumi.AnyOutput)
}

// the query parameters template. Defines the query parameters template to use when passing query parameters in advanced scenarios.
func (o RestApiPollerRequestConfigResponseOutput) QueryParametersTemplate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RestApiPollerRequestConfigResponse) *string { return v.QueryParametersTemplate }).(pulumi.StringPtrOutput)
}

// The query time format. A remote server can have a query to pull data from range 'start' to 'end'. This property indicate what is the expected time format the remote server know to parse.
func (o RestApiPollerRequestConfigResponseOutput) QueryTimeFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RestApiPollerRequestConfigResponse) *string { return v.QueryTimeFormat }).(pulumi.StringPtrOutput)
}

// The query parameter name which we need to send the server for query logs in time interval. Should be defined with `queryTimeIntervalPrepend` and `queryTimeIntervalDelimiter`
func (o RestApiPollerRequestConfigResponseOutput) QueryTimeIntervalAttributeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RestApiPollerRequestConfigResponse) *string { return v.QueryTimeIntervalAttributeName }).(pulumi.StringPtrOutput)
}

// The delimiter string between 2 QueryTimeFormat in the query parameter `queryTimeIntervalAttributeName`.
func (o RestApiPollerRequestConfigResponseOutput) QueryTimeIntervalDelimiter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RestApiPollerRequestConfigResponse) *string { return v.QueryTimeIntervalDelimiter }).(pulumi.StringPtrOutput)
}

// The string prepend to the value of the query parameter in `queryTimeIntervalAttributeName`.
func (o RestApiPollerRequestConfigResponseOutput) QueryTimeIntervalPrepend() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RestApiPollerRequestConfigResponse) *string { return v.QueryTimeIntervalPrepend }).(pulumi.StringPtrOutput)
}

// The query window in minutes for the request.
func (o RestApiPollerRequestConfigResponseOutput) QueryWindowInMin() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RestApiPollerRequestConfigResponse) *int { return v.QueryWindowInMin }).(pulumi.IntPtrOutput)
}

// The Rate limit queries per second for the request..
func (o RestApiPollerRequestConfigResponseOutput) RateLimitQPS() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RestApiPollerRequestConfigResponse) *int { return v.RateLimitQPS }).(pulumi.IntPtrOutput)
}

// The retry count.
func (o RestApiPollerRequestConfigResponseOutput) RetryCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RestApiPollerRequestConfigResponse) *int { return v.RetryCount }).(pulumi.IntPtrOutput)
}

// The query parameter name which the remote server expect to start query. This property goes hand to hand with `endTimeAttributeName`.
func (o RestApiPollerRequestConfigResponseOutput) StartTimeAttributeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RestApiPollerRequestConfigResponse) *string { return v.StartTimeAttributeName }).(pulumi.StringPtrOutput)
}

// The timeout in seconds.
func (o RestApiPollerRequestConfigResponseOutput) TimeoutInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RestApiPollerRequestConfigResponse) *int { return v.TimeoutInSeconds }).(pulumi.IntPtrOutput)
}

// The request paging configuration.
type RestApiPollerRequestPagingConfig struct {
	// Page size
	PageSize *int `pulumi:"pageSize"`
	// Page size parameter name
	PageSizeParameterName *string `pulumi:"pageSizeParameterName"`
	// Type of paging
	PagingType string `pulumi:"pagingType"`
}

// RestApiPollerRequestPagingConfigInput is an input type that accepts RestApiPollerRequestPagingConfigArgs and RestApiPollerRequestPagingConfigOutput values.
// You can construct a concrete instance of `RestApiPollerRequestPagingConfigInput` via:
//
//	RestApiPollerRequestPagingConfigArgs{...}
type RestApiPollerRequestPagingConfigInput interface {
	pulumi.Input

	ToRestApiPollerRequestPagingConfigOutput() RestApiPollerRequestPagingConfigOutput
	ToRestApiPollerRequestPagingConfigOutputWithContext(context.Context) RestApiPollerRequestPagingConfigOutput
}

// The request paging configuration.
type RestApiPollerRequestPagingConfigArgs struct {
	// Page size
	PageSize pulumi.IntPtrInput `pulumi:"pageSize"`
	// Page size parameter name
	PageSizeParameterName pulumi.StringPtrInput `pulumi:"pageSizeParameterName"`
	// Type of paging
	PagingType pulumi.StringInput `pulumi:"pagingType"`
}

func (RestApiPollerRequestPagingConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RestApiPollerRequestPagingConfig)(nil)).Elem()
}

func (i RestApiPollerRequestPagingConfigArgs) ToRestApiPollerRequestPagingConfigOutput() RestApiPollerRequestPagingConfigOutput {
	return i.ToRestApiPollerRequestPagingConfigOutputWithContext(context.Background())
}

func (i RestApiPollerRequestPagingConfigArgs) ToRestApiPollerRequestPagingConfigOutputWithContext(ctx context.Context) RestApiPollerRequestPagingConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RestApiPollerRequestPagingConfigOutput)
}

func (i RestApiPollerRequestPagingConfigArgs) ToRestApiPollerRequestPagingConfigPtrOutput() RestApiPollerRequestPagingConfigPtrOutput {
	return i.ToRestApiPollerRequestPagingConfigPtrOutputWithContext(context.Background())
}

func (i RestApiPollerRequestPagingConfigArgs) ToRestApiPollerRequestPagingConfigPtrOutputWithContext(ctx context.Context) RestApiPollerRequestPagingConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RestApiPollerRequestPagingConfigOutput).ToRestApiPollerRequestPagingConfigPtrOutputWithContext(ctx)
}

// RestApiPollerRequestPagingConfigPtrInput is an input type that accepts RestApiPollerRequestPagingConfigArgs, RestApiPollerRequestPagingConfigPtr and RestApiPollerRequestPagingConfigPtrOutput values.
// You can construct a concrete instance of `RestApiPollerRequestPagingConfigPtrInput` via:
//
//	        RestApiPollerRequestPagingConfigArgs{...}
//
//	or:
//
//	        nil
type RestApiPollerRequestPagingConfigPtrInput interface {
	pulumi.Input

	ToRestApiPollerRequestPagingConfigPtrOutput() RestApiPollerRequestPagingConfigPtrOutput
	ToRestApiPollerRequestPagingConfigPtrOutputWithContext(context.Context) RestApiPollerRequestPagingConfigPtrOutput
}

type restApiPollerRequestPagingConfigPtrType RestApiPollerRequestPagingConfigArgs

func RestApiPollerRequestPagingConfigPtr(v *RestApiPollerRequestPagingConfigArgs) RestApiPollerRequestPagingConfigPtrInput {
	return (*restApiPollerRequestPagingConfigPtrType)(v)
}

func (*restApiPollerRequestPagingConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RestApiPollerRequestPagingConfig)(nil)).Elem()
}

func (i *restApiPollerRequestPagingConfigPtrType) ToRestApiPollerRequestPagingConfigPtrOutput() RestApiPollerRequestPagingConfigPtrOutput {
	return i.ToRestApiPollerRequestPagingConfigPtrOutputWithContext(context.Background())
}

func (i *restApiPollerRequestPagingConfigPtrType) ToRestApiPollerRequestPagingConfigPtrOutputWithContext(ctx context.Context) RestApiPollerRequestPagingConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RestApiPollerRequestPagingConfigPtrOutput)
}

// The request paging configuration.
type RestApiPollerRequestPagingConfigOutput struct{ *pulumi.OutputState }

func (RestApiPollerRequestPagingConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RestApiPollerRequestPagingConfig)(nil)).Elem()
}

func (o RestApiPollerRequestPagingConfigOutput) ToRestApiPollerRequestPagingConfigOutput() RestApiPollerRequestPagingConfigOutput {
	return o
}

func (o RestApiPollerRequestPagingConfigOutput) ToRestApiPollerRequestPagingConfigOutputWithContext(ctx context.Context) RestApiPollerRequestPagingConfigOutput {
	return o
}

func (o RestApiPollerRequestPagingConfigOutput) ToRestApiPollerRequestPagingConfigPtrOutput() RestApiPollerRequestPagingConfigPtrOutput {
	return o.ToRestApiPollerRequestPagingConfigPtrOutputWithContext(context.Background())
}

func (o RestApiPollerRequestPagingConfigOutput) ToRestApiPollerRequestPagingConfigPtrOutputWithContext(ctx context.Context) RestApiPollerRequestPagingConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RestApiPollerRequestPagingConfig) *RestApiPollerRequestPagingConfig {
		return &v
	}).(RestApiPollerRequestPagingConfigPtrOutput)
}

// Page size
func (o RestApiPollerRequestPagingConfigOutput) PageSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RestApiPollerRequestPagingConfig) *int { return v.PageSize }).(pulumi.IntPtrOutput)
}

// Page size parameter name
func (o RestApiPollerRequestPagingConfigOutput) PageSizeParameterName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RestApiPollerRequestPagingConfig) *string { return v.PageSizeParameterName }).(pulumi.StringPtrOutput)
}

// Type of paging
func (o RestApiPollerRequestPagingConfigOutput) PagingType() pulumi.StringOutput {
	return o.ApplyT(func(v RestApiPollerRequestPagingConfig) string { return v.PagingType }).(pulumi.StringOutput)
}

type RestApiPollerRequestPagingConfigPtrOutput struct{ *pulumi.OutputState }

func (RestApiPollerRequestPagingConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RestApiPollerRequestPagingConfig)(nil)).Elem()
}

func (o RestApiPollerRequestPagingConfigPtrOutput) ToRestApiPollerRequestPagingConfigPtrOutput() RestApiPollerRequestPagingConfigPtrOutput {
	return o
}

func (o RestApiPollerRequestPagingConfigPtrOutput) ToRestApiPollerRequestPagingConfigPtrOutputWithContext(ctx context.Context) RestApiPollerRequestPagingConfigPtrOutput {
	return o
}

func (o RestApiPollerRequestPagingConfigPtrOutput) Elem() RestApiPollerRequestPagingConfigOutput {
	return o.ApplyT(func(v *RestApiPollerRequestPagingConfig) RestApiPollerRequestPagingConfig {
		if v != nil {
			return *v
		}
		var ret RestApiPollerRequestPagingConfig
		return ret
	}).(RestApiPollerRequestPagingConfigOutput)
}

// Page size
func (o RestApiPollerRequestPagingConfigPtrOutput) PageSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RestApiPollerRequestPagingConfig) *int {
		if v == nil {
			return nil
		}
		return v.PageSize
	}).(pulumi.IntPtrOutput)
}

// Page size parameter name
func (o RestApiPollerRequestPagingConfigPtrOutput) PageSizeParameterName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RestApiPollerRequestPagingConfig) *string {
		if v == nil {
			return nil
		}
		return v.PageSizeParameterName
	}).(pulumi.StringPtrOutput)
}

// Type of paging
func (o RestApiPollerRequestPagingConfigPtrOutput) PagingType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RestApiPollerRequestPagingConfig) *string {
		if v == nil {
			return nil
		}
		return &v.PagingType
	}).(pulumi.StringPtrOutput)
}

// The request paging configuration.
type RestApiPollerRequestPagingConfigResponse struct {
	// Page size
	PageSize *int `pulumi:"pageSize"`
	// Page size parameter name
	PageSizeParameterName *string `pulumi:"pageSizeParameterName"`
	// Type of paging
	PagingType string `pulumi:"pagingType"`
}

// The request paging configuration.
type RestApiPollerRequestPagingConfigResponseOutput struct{ *pulumi.OutputState }

func (RestApiPollerRequestPagingConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RestApiPollerRequestPagingConfigResponse)(nil)).Elem()
}

func (o RestApiPollerRequestPagingConfigResponseOutput) ToRestApiPollerRequestPagingConfigResponseOutput() RestApiPollerRequestPagingConfigResponseOutput {
	return o
}

func (o RestApiPollerRequestPagingConfigResponseOutput) ToRestApiPollerRequestPagingConfigResponseOutputWithContext(ctx context.Context) RestApiPollerRequestPagingConfigResponseOutput {
	return o
}

// Page size
func (o RestApiPollerRequestPagingConfigResponseOutput) PageSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RestApiPollerRequestPagingConfigResponse) *int { return v.PageSize }).(pulumi.IntPtrOutput)
}

// Page size parameter name
func (o RestApiPollerRequestPagingConfigResponseOutput) PageSizeParameterName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RestApiPollerRequestPagingConfigResponse) *string { return v.PageSizeParameterName }).(pulumi.StringPtrOutput)
}

// Type of paging
func (o RestApiPollerRequestPagingConfigResponseOutput) PagingType() pulumi.StringOutput {
	return o.ApplyT(func(v RestApiPollerRequestPagingConfigResponse) string { return v.PagingType }).(pulumi.StringOutput)
}

type RestApiPollerRequestPagingConfigResponsePtrOutput struct{ *pulumi.OutputState }

func (RestApiPollerRequestPagingConfigResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RestApiPollerRequestPagingConfigResponse)(nil)).Elem()
}

func (o RestApiPollerRequestPagingConfigResponsePtrOutput) ToRestApiPollerRequestPagingConfigResponsePtrOutput() RestApiPollerRequestPagingConfigResponsePtrOutput {
	return o
}

func (o RestApiPollerRequestPagingConfigResponsePtrOutput) ToRestApiPollerRequestPagingConfigResponsePtrOutputWithContext(ctx context.Context) RestApiPollerRequestPagingConfigResponsePtrOutput {
	return o
}

func (o RestApiPollerRequestPagingConfigResponsePtrOutput) Elem() RestApiPollerRequestPagingConfigResponseOutput {
	return o.ApplyT(func(v *RestApiPollerRequestPagingConfigResponse) RestApiPollerRequestPagingConfigResponse {
		if v != nil {
			return *v
		}
		var ret RestApiPollerRequestPagingConfigResponse
		return ret
	}).(RestApiPollerRequestPagingConfigResponseOutput)
}

// Page size
func (o RestApiPollerRequestPagingConfigResponsePtrOutput) PageSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RestApiPollerRequestPagingConfigResponse) *int {
		if v == nil {
			return nil
		}
		return v.PageSize
	}).(pulumi.IntPtrOutput)
}

// Page size parameter name
func (o RestApiPollerRequestPagingConfigResponsePtrOutput) PageSizeParameterName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RestApiPollerRequestPagingConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.PageSizeParameterName
	}).(pulumi.StringPtrOutput)
}

// Type of paging
func (o RestApiPollerRequestPagingConfigResponsePtrOutput) PagingType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RestApiPollerRequestPagingConfigResponse) *string {
		if v == nil {
			return nil
		}
		return &v.PagingType
	}).(pulumi.StringPtrOutput)
}

// security ml analytics settings data sources
type SecurityMLAnalyticsSettingsDataSource struct {
	// The connector id that provides the following data types
	ConnectorId *string `pulumi:"connectorId"`
	// The data types used by the security ml analytics settings
	DataTypes []string `pulumi:"dataTypes"`
}

// SecurityMLAnalyticsSettingsDataSourceInput is an input type that accepts SecurityMLAnalyticsSettingsDataSourceArgs and SecurityMLAnalyticsSettingsDataSourceOutput values.
// You can construct a concrete instance of `SecurityMLAnalyticsSettingsDataSourceInput` via:
//
//	SecurityMLAnalyticsSettingsDataSourceArgs{...}
type SecurityMLAnalyticsSettingsDataSourceInput interface {
	pulumi.Input

	ToSecurityMLAnalyticsSettingsDataSourceOutput() SecurityMLAnalyticsSettingsDataSourceOutput
	ToSecurityMLAnalyticsSettingsDataSourceOutputWithContext(context.Context) SecurityMLAnalyticsSettingsDataSourceOutput
}

// security ml analytics settings data sources
type SecurityMLAnalyticsSettingsDataSourceArgs struct {
	// The connector id that provides the following data types
	ConnectorId pulumi.StringPtrInput `pulumi:"connectorId"`
	// The data types used by the security ml analytics settings
	DataTypes pulumi.StringArrayInput `pulumi:"dataTypes"`
}

func (SecurityMLAnalyticsSettingsDataSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityMLAnalyticsSettingsDataSource)(nil)).Elem()
}

func (i SecurityMLAnalyticsSettingsDataSourceArgs) ToSecurityMLAnalyticsSettingsDataSourceOutput() SecurityMLAnalyticsSettingsDataSourceOutput {
	return i.ToSecurityMLAnalyticsSettingsDataSourceOutputWithContext(context.Background())
}

func (i SecurityMLAnalyticsSettingsDataSourceArgs) ToSecurityMLAnalyticsSettingsDataSourceOutputWithContext(ctx context.Context) SecurityMLAnalyticsSettingsDataSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityMLAnalyticsSettingsDataSourceOutput)
}

// SecurityMLAnalyticsSettingsDataSourceArrayInput is an input type that accepts SecurityMLAnalyticsSettingsDataSourceArray and SecurityMLAnalyticsSettingsDataSourceArrayOutput values.
// You can construct a concrete instance of `SecurityMLAnalyticsSettingsDataSourceArrayInput` via:
//
//	SecurityMLAnalyticsSettingsDataSourceArray{ SecurityMLAnalyticsSettingsDataSourceArgs{...} }
type SecurityMLAnalyticsSettingsDataSourceArrayInput interface {
	pulumi.Input

	ToSecurityMLAnalyticsSettingsDataSourceArrayOutput() SecurityMLAnalyticsSettingsDataSourceArrayOutput
	ToSecurityMLAnalyticsSettingsDataSourceArrayOutputWithContext(context.Context) SecurityMLAnalyticsSettingsDataSourceArrayOutput
}

type SecurityMLAnalyticsSettingsDataSourceArray []SecurityMLAnalyticsSettingsDataSourceInput

func (SecurityMLAnalyticsSettingsDataSourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecurityMLAnalyticsSettingsDataSource)(nil)).Elem()
}

func (i SecurityMLAnalyticsSettingsDataSourceArray) ToSecurityMLAnalyticsSettingsDataSourceArrayOutput() SecurityMLAnalyticsSettingsDataSourceArrayOutput {
	return i.ToSecurityMLAnalyticsSettingsDataSourceArrayOutputWithContext(context.Background())
}

func (i SecurityMLAnalyticsSettingsDataSourceArray) ToSecurityMLAnalyticsSettingsDataSourceArrayOutputWithContext(ctx context.Context) SecurityMLAnalyticsSettingsDataSourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityMLAnalyticsSettingsDataSourceArrayOutput)
}

// security ml analytics settings data sources
type SecurityMLAnalyticsSettingsDataSourceOutput struct{ *pulumi.OutputState }

func (SecurityMLAnalyticsSettingsDataSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityMLAnalyticsSettingsDataSource)(nil)).Elem()
}

func (o SecurityMLAnalyticsSettingsDataSourceOutput) ToSecurityMLAnalyticsSettingsDataSourceOutput() SecurityMLAnalyticsSettingsDataSourceOutput {
	return o
}

func (o SecurityMLAnalyticsSettingsDataSourceOutput) ToSecurityMLAnalyticsSettingsDataSourceOutputWithContext(ctx context.Context) SecurityMLAnalyticsSettingsDataSourceOutput {
	return o
}

// The connector id that provides the following data types
func (o SecurityMLAnalyticsSettingsDataSourceOutput) ConnectorId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityMLAnalyticsSettingsDataSource) *string { return v.ConnectorId }).(pulumi.StringPtrOutput)
}

// The data types used by the security ml analytics settings
func (o SecurityMLAnalyticsSettingsDataSourceOutput) DataTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecurityMLAnalyticsSettingsDataSource) []string { return v.DataTypes }).(pulumi.StringArrayOutput)
}

type SecurityMLAnalyticsSettingsDataSourceArrayOutput struct{ *pulumi.OutputState }

func (SecurityMLAnalyticsSettingsDataSourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecurityMLAnalyticsSettingsDataSource)(nil)).Elem()
}

func (o SecurityMLAnalyticsSettingsDataSourceArrayOutput) ToSecurityMLAnalyticsSettingsDataSourceArrayOutput() SecurityMLAnalyticsSettingsDataSourceArrayOutput {
	return o
}

func (o SecurityMLAnalyticsSettingsDataSourceArrayOutput) ToSecurityMLAnalyticsSettingsDataSourceArrayOutputWithContext(ctx context.Context) SecurityMLAnalyticsSettingsDataSourceArrayOutput {
	return o
}

func (o SecurityMLAnalyticsSettingsDataSourceArrayOutput) Index(i pulumi.IntInput) SecurityMLAnalyticsSettingsDataSourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SecurityMLAnalyticsSettingsDataSource {
		return vs[0].([]SecurityMLAnalyticsSettingsDataSource)[vs[1].(int)]
	}).(SecurityMLAnalyticsSettingsDataSourceOutput)
}

// security ml analytics settings data sources
type SecurityMLAnalyticsSettingsDataSourceResponse struct {
	// The connector id that provides the following data types
	ConnectorId *string `pulumi:"connectorId"`
	// The data types used by the security ml analytics settings
	DataTypes []string `pulumi:"dataTypes"`
}

// security ml analytics settings data sources
type SecurityMLAnalyticsSettingsDataSourceResponseOutput struct{ *pulumi.OutputState }

func (SecurityMLAnalyticsSettingsDataSourceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityMLAnalyticsSettingsDataSourceResponse)(nil)).Elem()
}

func (o SecurityMLAnalyticsSettingsDataSourceResponseOutput) ToSecurityMLAnalyticsSettingsDataSourceResponseOutput() SecurityMLAnalyticsSettingsDataSourceResponseOutput {
	return o
}

func (o SecurityMLAnalyticsSettingsDataSourceResponseOutput) ToSecurityMLAnalyticsSettingsDataSourceResponseOutputWithContext(ctx context.Context) SecurityMLAnalyticsSettingsDataSourceResponseOutput {
	return o
}

// The connector id that provides the following data types
func (o SecurityMLAnalyticsSettingsDataSourceResponseOutput) ConnectorId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityMLAnalyticsSettingsDataSourceResponse) *string { return v.ConnectorId }).(pulumi.StringPtrOutput)
}

// The data types used by the security ml analytics settings
func (o SecurityMLAnalyticsSettingsDataSourceResponseOutput) DataTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecurityMLAnalyticsSettingsDataSourceResponse) []string { return v.DataTypes }).(pulumi.StringArrayOutput)
}

type SecurityMLAnalyticsSettingsDataSourceResponseArrayOutput struct{ *pulumi.OutputState }

func (SecurityMLAnalyticsSettingsDataSourceResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecurityMLAnalyticsSettingsDataSourceResponse)(nil)).Elem()
}

func (o SecurityMLAnalyticsSettingsDataSourceResponseArrayOutput) ToSecurityMLAnalyticsSettingsDataSourceResponseArrayOutput() SecurityMLAnalyticsSettingsDataSourceResponseArrayOutput {
	return o
}

func (o SecurityMLAnalyticsSettingsDataSourceResponseArrayOutput) ToSecurityMLAnalyticsSettingsDataSourceResponseArrayOutputWithContext(ctx context.Context) SecurityMLAnalyticsSettingsDataSourceResponseArrayOutput {
	return o
}

func (o SecurityMLAnalyticsSettingsDataSourceResponseArrayOutput) Index(i pulumi.IntInput) SecurityMLAnalyticsSettingsDataSourceResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SecurityMLAnalyticsSettingsDataSourceResponse {
		return vs[0].([]SecurityMLAnalyticsSettingsDataSourceResponse)[vs[1].(int)]
	}).(SecurityMLAnalyticsSettingsDataSourceResponseOutput)
}

// Model for API authentication with session cookie.
type SessionAuthModel struct {
	// HTTP request headers to session service endpoint.
	Headers map[string]string `pulumi:"headers"`
	// Indicating whether API key is set in HTTP POST payload.
	IsPostPayloadJson *bool `pulumi:"isPostPayloadJson"`
	// The password attribute name.
	Password map[string]string `pulumi:"password"`
	// Query parameters to session service endpoint.
	QueryParameters interface{} `pulumi:"queryParameters"`
	// Session id attribute name from HTTP response header.
	SessionIdName *string `pulumi:"sessionIdName"`
	// HTTP request URL to session service endpoint.
	SessionLoginRequestUri *string `pulumi:"sessionLoginRequestUri"`
	// Session timeout in minutes.
	SessionTimeoutInMinutes *int `pulumi:"sessionTimeoutInMinutes"`
	// Type of paging
	// Expected value is 'Session'.
	Type string `pulumi:"type"`
	// The user name attribute key value.
	UserName map[string]string `pulumi:"userName"`
}

// SessionAuthModelInput is an input type that accepts SessionAuthModelArgs and SessionAuthModelOutput values.
// You can construct a concrete instance of `SessionAuthModelInput` via:
//
//	SessionAuthModelArgs{...}
type SessionAuthModelInput interface {
	pulumi.Input

	ToSessionAuthModelOutput() SessionAuthModelOutput
	ToSessionAuthModelOutputWithContext(context.Context) SessionAuthModelOutput
}

// Model for API authentication with session cookie.
type SessionAuthModelArgs struct {
	// HTTP request headers to session service endpoint.
	Headers pulumi.StringMapInput `pulumi:"headers"`
	// Indicating whether API key is set in HTTP POST payload.
	IsPostPayloadJson pulumi.BoolPtrInput `pulumi:"isPostPayloadJson"`
	// The password attribute name.
	Password pulumi.StringMapInput `pulumi:"password"`
	// Query parameters to session service endpoint.
	QueryParameters pulumi.Input `pulumi:"queryParameters"`
	// Session id attribute name from HTTP response header.
	SessionIdName pulumi.StringPtrInput `pulumi:"sessionIdName"`
	// HTTP request URL to session service endpoint.
	SessionLoginRequestUri pulumi.StringPtrInput `pulumi:"sessionLoginRequestUri"`
	// Session timeout in minutes.
	SessionTimeoutInMinutes pulumi.IntPtrInput `pulumi:"sessionTimeoutInMinutes"`
	// Type of paging
	// Expected value is 'Session'.
	Type pulumi.StringInput `pulumi:"type"`
	// The user name attribute key value.
	UserName pulumi.StringMapInput `pulumi:"userName"`
}

func (SessionAuthModelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SessionAuthModel)(nil)).Elem()
}

func (i SessionAuthModelArgs) ToSessionAuthModelOutput() SessionAuthModelOutput {
	return i.ToSessionAuthModelOutputWithContext(context.Background())
}

func (i SessionAuthModelArgs) ToSessionAuthModelOutputWithContext(ctx context.Context) SessionAuthModelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SessionAuthModelOutput)
}

// Model for API authentication with session cookie.
type SessionAuthModelOutput struct{ *pulumi.OutputState }

func (SessionAuthModelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SessionAuthModel)(nil)).Elem()
}

func (o SessionAuthModelOutput) ToSessionAuthModelOutput() SessionAuthModelOutput {
	return o
}

func (o SessionAuthModelOutput) ToSessionAuthModelOutputWithContext(ctx context.Context) SessionAuthModelOutput {
	return o
}

// HTTP request headers to session service endpoint.
func (o SessionAuthModelOutput) Headers() pulumi.StringMapOutput {
	return o.ApplyT(func(v SessionAuthModel) map[string]string { return v.Headers }).(pulumi.StringMapOutput)
}

// Indicating whether API key is set in HTTP POST payload.
func (o SessionAuthModelOutput) IsPostPayloadJson() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SessionAuthModel) *bool { return v.IsPostPayloadJson }).(pulumi.BoolPtrOutput)
}

// The password attribute name.
func (o SessionAuthModelOutput) Password() pulumi.StringMapOutput {
	return o.ApplyT(func(v SessionAuthModel) map[string]string { return v.Password }).(pulumi.StringMapOutput)
}

// Query parameters to session service endpoint.
func (o SessionAuthModelOutput) QueryParameters() pulumi.AnyOutput {
	return o.ApplyT(func(v SessionAuthModel) interface{} { return v.QueryParameters }).(pulumi.AnyOutput)
}

// Session id attribute name from HTTP response header.
func (o SessionAuthModelOutput) SessionIdName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SessionAuthModel) *string { return v.SessionIdName }).(pulumi.StringPtrOutput)
}

// HTTP request URL to session service endpoint.
func (o SessionAuthModelOutput) SessionLoginRequestUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SessionAuthModel) *string { return v.SessionLoginRequestUri }).(pulumi.StringPtrOutput)
}

// Session timeout in minutes.
func (o SessionAuthModelOutput) SessionTimeoutInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SessionAuthModel) *int { return v.SessionTimeoutInMinutes }).(pulumi.IntPtrOutput)
}

// Type of paging
// Expected value is 'Session'.
func (o SessionAuthModelOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v SessionAuthModel) string { return v.Type }).(pulumi.StringOutput)
}

// The user name attribute key value.
func (o SessionAuthModelOutput) UserName() pulumi.StringMapOutput {
	return o.ApplyT(func(v SessionAuthModel) map[string]string { return v.UserName }).(pulumi.StringMapOutput)
}

// Model for API authentication with session cookie.
type SessionAuthModelResponse struct {
	// HTTP request headers to session service endpoint.
	Headers map[string]string `pulumi:"headers"`
	// Indicating whether API key is set in HTTP POST payload.
	IsPostPayloadJson *bool `pulumi:"isPostPayloadJson"`
	// The password attribute name.
	Password map[string]string `pulumi:"password"`
	// Query parameters to session service endpoint.
	QueryParameters interface{} `pulumi:"queryParameters"`
	// Session id attribute name from HTTP response header.
	SessionIdName *string `pulumi:"sessionIdName"`
	// HTTP request URL to session service endpoint.
	SessionLoginRequestUri *string `pulumi:"sessionLoginRequestUri"`
	// Session timeout in minutes.
	SessionTimeoutInMinutes *int `pulumi:"sessionTimeoutInMinutes"`
	// Type of paging
	// Expected value is 'Session'.
	Type string `pulumi:"type"`
	// The user name attribute key value.
	UserName map[string]string `pulumi:"userName"`
}

// Model for API authentication with session cookie.
type SessionAuthModelResponseOutput struct{ *pulumi.OutputState }

func (SessionAuthModelResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SessionAuthModelResponse)(nil)).Elem()
}

func (o SessionAuthModelResponseOutput) ToSessionAuthModelResponseOutput() SessionAuthModelResponseOutput {
	return o
}

func (o SessionAuthModelResponseOutput) ToSessionAuthModelResponseOutputWithContext(ctx context.Context) SessionAuthModelResponseOutput {
	return o
}

// HTTP request headers to session service endpoint.
func (o SessionAuthModelResponseOutput) Headers() pulumi.StringMapOutput {
	return o.ApplyT(func(v SessionAuthModelResponse) map[string]string { return v.Headers }).(pulumi.StringMapOutput)
}

// Indicating whether API key is set in HTTP POST payload.
func (o SessionAuthModelResponseOutput) IsPostPayloadJson() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SessionAuthModelResponse) *bool { return v.IsPostPayloadJson }).(pulumi.BoolPtrOutput)
}

// The password attribute name.
func (o SessionAuthModelResponseOutput) Password() pulumi.StringMapOutput {
	return o.ApplyT(func(v SessionAuthModelResponse) map[string]string { return v.Password }).(pulumi.StringMapOutput)
}

// Query parameters to session service endpoint.
func (o SessionAuthModelResponseOutput) QueryParameters() pulumi.AnyOutput {
	return o.ApplyT(func(v SessionAuthModelResponse) interface{} { return v.QueryParameters }).(pulumi.AnyOutput)
}

// Session id attribute name from HTTP response header.
func (o SessionAuthModelResponseOutput) SessionIdName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SessionAuthModelResponse) *string { return v.SessionIdName }).(pulumi.StringPtrOutput)
}

// HTTP request URL to session service endpoint.
func (o SessionAuthModelResponseOutput) SessionLoginRequestUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SessionAuthModelResponse) *string { return v.SessionLoginRequestUri }).(pulumi.StringPtrOutput)
}

// Session timeout in minutes.
func (o SessionAuthModelResponseOutput) SessionTimeoutInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SessionAuthModelResponse) *int { return v.SessionTimeoutInMinutes }).(pulumi.IntPtrOutput)
}

// Type of paging
// Expected value is 'Session'.
func (o SessionAuthModelResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v SessionAuthModelResponse) string { return v.Type }).(pulumi.StringOutput)
}

// The user name attribute key value.
func (o SessionAuthModelResponseOutput) UserName() pulumi.StringMapOutput {
	return o.ApplyT(func(v SessionAuthModelResponse) map[string]string { return v.UserName }).(pulumi.StringMapOutput)
}

// Metadata pertaining to creation and last modification of the resource.
type SystemDataResponse struct {
	// The timestamp of resource creation (UTC).
	CreatedAt *string `pulumi:"createdAt"`
	// The identity that created the resource.
	CreatedBy *string `pulumi:"createdBy"`
	// The type of identity that created the resource.
	CreatedByType *string `pulumi:"createdByType"`
	// The timestamp of resource last modification (UTC)
	LastModifiedAt *string `pulumi:"lastModifiedAt"`
	// The identity that last modified the resource.
	LastModifiedBy *string `pulumi:"lastModifiedBy"`
	// The type of identity that last modified the resource.
	LastModifiedByType *string `pulumi:"lastModifiedByType"`
}

// Metadata pertaining to creation and last modification of the resource.
type SystemDataResponseOutput struct{ *pulumi.OutputState }

func (SystemDataResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemDataResponse)(nil)).Elem()
}

func (o SystemDataResponseOutput) ToSystemDataResponseOutput() SystemDataResponseOutput {
	return o
}

func (o SystemDataResponseOutput) ToSystemDataResponseOutputWithContext(ctx context.Context) SystemDataResponseOutput {
	return o
}

// The timestamp of resource creation (UTC).
func (o SystemDataResponseOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedAt }).(pulumi.StringPtrOutput)
}

// The identity that created the resource.
func (o SystemDataResponseOutput) CreatedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedBy }).(pulumi.StringPtrOutput)
}

// The type of identity that created the resource.
func (o SystemDataResponseOutput) CreatedByType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedByType }).(pulumi.StringPtrOutput)
}

// The timestamp of resource last modification (UTC)
func (o SystemDataResponseOutput) LastModifiedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedAt }).(pulumi.StringPtrOutput)
}

// The identity that last modified the resource.
func (o SystemDataResponseOutput) LastModifiedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedBy }).(pulumi.StringPtrOutput)
}

// The type of identity that last modified the resource.
func (o SystemDataResponseOutput) LastModifiedByType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedByType }).(pulumi.StringPtrOutput)
}

// The available data types for TI (Threat Intelligence) data connector.
type TIDataConnectorDataTypes struct {
	// Data type for indicators connection.
	Indicators *TIDataConnectorDataTypesIndicators `pulumi:"indicators"`
}

// TIDataConnectorDataTypesInput is an input type that accepts TIDataConnectorDataTypesArgs and TIDataConnectorDataTypesOutput values.
// You can construct a concrete instance of `TIDataConnectorDataTypesInput` via:
//
//	TIDataConnectorDataTypesArgs{...}
type TIDataConnectorDataTypesInput interface {
	pulumi.Input

	ToTIDataConnectorDataTypesOutput() TIDataConnectorDataTypesOutput
	ToTIDataConnectorDataTypesOutputWithContext(context.Context) TIDataConnectorDataTypesOutput
}

// The available data types for TI (Threat Intelligence) data connector.
type TIDataConnectorDataTypesArgs struct {
	// Data type for indicators connection.
	Indicators TIDataConnectorDataTypesIndicatorsPtrInput `pulumi:"indicators"`
}

func (TIDataConnectorDataTypesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TIDataConnectorDataTypes)(nil)).Elem()
}

func (i TIDataConnectorDataTypesArgs) ToTIDataConnectorDataTypesOutput() TIDataConnectorDataTypesOutput {
	return i.ToTIDataConnectorDataTypesOutputWithContext(context.Background())
}

func (i TIDataConnectorDataTypesArgs) ToTIDataConnectorDataTypesOutputWithContext(ctx context.Context) TIDataConnectorDataTypesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TIDataConnectorDataTypesOutput)
}

func (i TIDataConnectorDataTypesArgs) ToTIDataConnectorDataTypesPtrOutput() TIDataConnectorDataTypesPtrOutput {
	return i.ToTIDataConnectorDataTypesPtrOutputWithContext(context.Background())
}

func (i TIDataConnectorDataTypesArgs) ToTIDataConnectorDataTypesPtrOutputWithContext(ctx context.Context) TIDataConnectorDataTypesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TIDataConnectorDataTypesOutput).ToTIDataConnectorDataTypesPtrOutputWithContext(ctx)
}

// TIDataConnectorDataTypesPtrInput is an input type that accepts TIDataConnectorDataTypesArgs, TIDataConnectorDataTypesPtr and TIDataConnectorDataTypesPtrOutput values.
// You can construct a concrete instance of `TIDataConnectorDataTypesPtrInput` via:
//
//	        TIDataConnectorDataTypesArgs{...}
//
//	or:
//
//	        nil
type TIDataConnectorDataTypesPtrInput interface {
	pulumi.Input

	ToTIDataConnectorDataTypesPtrOutput() TIDataConnectorDataTypesPtrOutput
	ToTIDataConnectorDataTypesPtrOutputWithContext(context.Context) TIDataConnectorDataTypesPtrOutput
}

type tidataConnectorDataTypesPtrType TIDataConnectorDataTypesArgs

func TIDataConnectorDataTypesPtr(v *TIDataConnectorDataTypesArgs) TIDataConnectorDataTypesPtrInput {
	return (*tidataConnectorDataTypesPtrType)(v)
}

func (*tidataConnectorDataTypesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TIDataConnectorDataTypes)(nil)).Elem()
}

func (i *tidataConnectorDataTypesPtrType) ToTIDataConnectorDataTypesPtrOutput() TIDataConnectorDataTypesPtrOutput {
	return i.ToTIDataConnectorDataTypesPtrOutputWithContext(context.Background())
}

func (i *tidataConnectorDataTypesPtrType) ToTIDataConnectorDataTypesPtrOutputWithContext(ctx context.Context) TIDataConnectorDataTypesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TIDataConnectorDataTypesPtrOutput)
}

// The available data types for TI (Threat Intelligence) data connector.
type TIDataConnectorDataTypesOutput struct{ *pulumi.OutputState }

func (TIDataConnectorDataTypesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TIDataConnectorDataTypes)(nil)).Elem()
}

func (o TIDataConnectorDataTypesOutput) ToTIDataConnectorDataTypesOutput() TIDataConnectorDataTypesOutput {
	return o
}

func (o TIDataConnectorDataTypesOutput) ToTIDataConnectorDataTypesOutputWithContext(ctx context.Context) TIDataConnectorDataTypesOutput {
	return o
}

func (o TIDataConnectorDataTypesOutput) ToTIDataConnectorDataTypesPtrOutput() TIDataConnectorDataTypesPtrOutput {
	return o.ToTIDataConnectorDataTypesPtrOutputWithContext(context.Background())
}

func (o TIDataConnectorDataTypesOutput) ToTIDataConnectorDataTypesPtrOutputWithContext(ctx context.Context) TIDataConnectorDataTypesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TIDataConnectorDataTypes) *TIDataConnectorDataTypes {
		return &v
	}).(TIDataConnectorDataTypesPtrOutput)
}

// Data type for indicators connection.
func (o TIDataConnectorDataTypesOutput) Indicators() TIDataConnectorDataTypesIndicatorsPtrOutput {
	return o.ApplyT(func(v TIDataConnectorDataTypes) *TIDataConnectorDataTypesIndicators { return v.Indicators }).(TIDataConnectorDataTypesIndicatorsPtrOutput)
}

type TIDataConnectorDataTypesPtrOutput struct{ *pulumi.OutputState }

func (TIDataConnectorDataTypesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TIDataConnectorDataTypes)(nil)).Elem()
}

func (o TIDataConnectorDataTypesPtrOutput) ToTIDataConnectorDataTypesPtrOutput() TIDataConnectorDataTypesPtrOutput {
	return o
}

func (o TIDataConnectorDataTypesPtrOutput) ToTIDataConnectorDataTypesPtrOutputWithContext(ctx context.Context) TIDataConnectorDataTypesPtrOutput {
	return o
}

func (o TIDataConnectorDataTypesPtrOutput) Elem() TIDataConnectorDataTypesOutput {
	return o.ApplyT(func(v *TIDataConnectorDataTypes) TIDataConnectorDataTypes {
		if v != nil {
			return *v
		}
		var ret TIDataConnectorDataTypes
		return ret
	}).(TIDataConnectorDataTypesOutput)
}

// Data type for indicators connection.
func (o TIDataConnectorDataTypesPtrOutput) Indicators() TIDataConnectorDataTypesIndicatorsPtrOutput {
	return o.ApplyT(func(v *TIDataConnectorDataTypes) *TIDataConnectorDataTypesIndicators {
		if v == nil {
			return nil
		}
		return v.Indicators
	}).(TIDataConnectorDataTypesIndicatorsPtrOutput)
}

// Data type for indicators connection.
type TIDataConnectorDataTypesIndicators struct {
	// Describe whether this data type connection is enabled or not.
	State *string `pulumi:"state"`
}

// TIDataConnectorDataTypesIndicatorsInput is an input type that accepts TIDataConnectorDataTypesIndicatorsArgs and TIDataConnectorDataTypesIndicatorsOutput values.
// You can construct a concrete instance of `TIDataConnectorDataTypesIndicatorsInput` via:
//
//	TIDataConnectorDataTypesIndicatorsArgs{...}
type TIDataConnectorDataTypesIndicatorsInput interface {
	pulumi.Input

	ToTIDataConnectorDataTypesIndicatorsOutput() TIDataConnectorDataTypesIndicatorsOutput
	ToTIDataConnectorDataTypesIndicatorsOutputWithContext(context.Context) TIDataConnectorDataTypesIndicatorsOutput
}

// Data type for indicators connection.
type TIDataConnectorDataTypesIndicatorsArgs struct {
	// Describe whether this data type connection is enabled or not.
	State pulumi.StringPtrInput `pulumi:"state"`
}

func (TIDataConnectorDataTypesIndicatorsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TIDataConnectorDataTypesIndicators)(nil)).Elem()
}

func (i TIDataConnectorDataTypesIndicatorsArgs) ToTIDataConnectorDataTypesIndicatorsOutput() TIDataConnectorDataTypesIndicatorsOutput {
	return i.ToTIDataConnectorDataTypesIndicatorsOutputWithContext(context.Background())
}

func (i TIDataConnectorDataTypesIndicatorsArgs) ToTIDataConnectorDataTypesIndicatorsOutputWithContext(ctx context.Context) TIDataConnectorDataTypesIndicatorsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TIDataConnectorDataTypesIndicatorsOutput)
}

func (i TIDataConnectorDataTypesIndicatorsArgs) ToTIDataConnectorDataTypesIndicatorsPtrOutput() TIDataConnectorDataTypesIndicatorsPtrOutput {
	return i.ToTIDataConnectorDataTypesIndicatorsPtrOutputWithContext(context.Background())
}

func (i TIDataConnectorDataTypesIndicatorsArgs) ToTIDataConnectorDataTypesIndicatorsPtrOutputWithContext(ctx context.Context) TIDataConnectorDataTypesIndicatorsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TIDataConnectorDataTypesIndicatorsOutput).ToTIDataConnectorDataTypesIndicatorsPtrOutputWithContext(ctx)
}

// TIDataConnectorDataTypesIndicatorsPtrInput is an input type that accepts TIDataConnectorDataTypesIndicatorsArgs, TIDataConnectorDataTypesIndicatorsPtr and TIDataConnectorDataTypesIndicatorsPtrOutput values.
// You can construct a concrete instance of `TIDataConnectorDataTypesIndicatorsPtrInput` via:
//
//	        TIDataConnectorDataTypesIndicatorsArgs{...}
//
//	or:
//
//	        nil
type TIDataConnectorDataTypesIndicatorsPtrInput interface {
	pulumi.Input

	ToTIDataConnectorDataTypesIndicatorsPtrOutput() TIDataConnectorDataTypesIndicatorsPtrOutput
	ToTIDataConnectorDataTypesIndicatorsPtrOutputWithContext(context.Context) TIDataConnectorDataTypesIndicatorsPtrOutput
}

type tidataConnectorDataTypesIndicatorsPtrType TIDataConnectorDataTypesIndicatorsArgs

func TIDataConnectorDataTypesIndicatorsPtr(v *TIDataConnectorDataTypesIndicatorsArgs) TIDataConnectorDataTypesIndicatorsPtrInput {
	return (*tidataConnectorDataTypesIndicatorsPtrType)(v)
}

func (*tidataConnectorDataTypesIndicatorsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TIDataConnectorDataTypesIndicators)(nil)).Elem()
}

func (i *tidataConnectorDataTypesIndicatorsPtrType) ToTIDataConnectorDataTypesIndicatorsPtrOutput() TIDataConnectorDataTypesIndicatorsPtrOutput {
	return i.ToTIDataConnectorDataTypesIndicatorsPtrOutputWithContext(context.Background())
}

func (i *tidataConnectorDataTypesIndicatorsPtrType) ToTIDataConnectorDataTypesIndicatorsPtrOutputWithContext(ctx context.Context) TIDataConnectorDataTypesIndicatorsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TIDataConnectorDataTypesIndicatorsPtrOutput)
}

// Data type for indicators connection.
type TIDataConnectorDataTypesIndicatorsOutput struct{ *pulumi.OutputState }

func (TIDataConnectorDataTypesIndicatorsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TIDataConnectorDataTypesIndicators)(nil)).Elem()
}

func (o TIDataConnectorDataTypesIndicatorsOutput) ToTIDataConnectorDataTypesIndicatorsOutput() TIDataConnectorDataTypesIndicatorsOutput {
	return o
}

func (o TIDataConnectorDataTypesIndicatorsOutput) ToTIDataConnectorDataTypesIndicatorsOutputWithContext(ctx context.Context) TIDataConnectorDataTypesIndicatorsOutput {
	return o
}

func (o TIDataConnectorDataTypesIndicatorsOutput) ToTIDataConnectorDataTypesIndicatorsPtrOutput() TIDataConnectorDataTypesIndicatorsPtrOutput {
	return o.ToTIDataConnectorDataTypesIndicatorsPtrOutputWithContext(context.Background())
}

func (o TIDataConnectorDataTypesIndicatorsOutput) ToTIDataConnectorDataTypesIndicatorsPtrOutputWithContext(ctx context.Context) TIDataConnectorDataTypesIndicatorsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TIDataConnectorDataTypesIndicators) *TIDataConnectorDataTypesIndicators {
		return &v
	}).(TIDataConnectorDataTypesIndicatorsPtrOutput)
}

// Describe whether this data type connection is enabled or not.
func (o TIDataConnectorDataTypesIndicatorsOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TIDataConnectorDataTypesIndicators) *string { return v.State }).(pulumi.StringPtrOutput)
}

type TIDataConnectorDataTypesIndicatorsPtrOutput struct{ *pulumi.OutputState }

func (TIDataConnectorDataTypesIndicatorsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TIDataConnectorDataTypesIndicators)(nil)).Elem()
}

func (o TIDataConnectorDataTypesIndicatorsPtrOutput) ToTIDataConnectorDataTypesIndicatorsPtrOutput() TIDataConnectorDataTypesIndicatorsPtrOutput {
	return o
}

func (o TIDataConnectorDataTypesIndicatorsPtrOutput) ToTIDataConnectorDataTypesIndicatorsPtrOutputWithContext(ctx context.Context) TIDataConnectorDataTypesIndicatorsPtrOutput {
	return o
}

func (o TIDataConnectorDataTypesIndicatorsPtrOutput) Elem() TIDataConnectorDataTypesIndicatorsOutput {
	return o.ApplyT(func(v *TIDataConnectorDataTypesIndicators) TIDataConnectorDataTypesIndicators {
		if v != nil {
			return *v
		}
		var ret TIDataConnectorDataTypesIndicators
		return ret
	}).(TIDataConnectorDataTypesIndicatorsOutput)
}

// Describe whether this data type connection is enabled or not.
func (o TIDataConnectorDataTypesIndicatorsPtrOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TIDataConnectorDataTypesIndicators) *string {
		if v == nil {
			return nil
		}
		return v.State
	}).(pulumi.StringPtrOutput)
}

// The available data types for TI (Threat Intelligence) data connector.
type TIDataConnectorDataTypesResponse struct {
	// Data type for indicators connection.
	Indicators *TIDataConnectorDataTypesResponseIndicators `pulumi:"indicators"`
}

// The available data types for TI (Threat Intelligence) data connector.
type TIDataConnectorDataTypesResponseOutput struct{ *pulumi.OutputState }

func (TIDataConnectorDataTypesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TIDataConnectorDataTypesResponse)(nil)).Elem()
}

func (o TIDataConnectorDataTypesResponseOutput) ToTIDataConnectorDataTypesResponseOutput() TIDataConnectorDataTypesResponseOutput {
	return o
}

func (o TIDataConnectorDataTypesResponseOutput) ToTIDataConnectorDataTypesResponseOutputWithContext(ctx context.Context) TIDataConnectorDataTypesResponseOutput {
	return o
}

// Data type for indicators connection.
func (o TIDataConnectorDataTypesResponseOutput) Indicators() TIDataConnectorDataTypesResponseIndicatorsPtrOutput {
	return o.ApplyT(func(v TIDataConnectorDataTypesResponse) *TIDataConnectorDataTypesResponseIndicators {
		return v.Indicators
	}).(TIDataConnectorDataTypesResponseIndicatorsPtrOutput)
}

type TIDataConnectorDataTypesResponsePtrOutput struct{ *pulumi.OutputState }

func (TIDataConnectorDataTypesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TIDataConnectorDataTypesResponse)(nil)).Elem()
}

func (o TIDataConnectorDataTypesResponsePtrOutput) ToTIDataConnectorDataTypesResponsePtrOutput() TIDataConnectorDataTypesResponsePtrOutput {
	return o
}

func (o TIDataConnectorDataTypesResponsePtrOutput) ToTIDataConnectorDataTypesResponsePtrOutputWithContext(ctx context.Context) TIDataConnectorDataTypesResponsePtrOutput {
	return o
}

func (o TIDataConnectorDataTypesResponsePtrOutput) Elem() TIDataConnectorDataTypesResponseOutput {
	return o.ApplyT(func(v *TIDataConnectorDataTypesResponse) TIDataConnectorDataTypesResponse {
		if v != nil {
			return *v
		}
		var ret TIDataConnectorDataTypesResponse
		return ret
	}).(TIDataConnectorDataTypesResponseOutput)
}

// Data type for indicators connection.
func (o TIDataConnectorDataTypesResponsePtrOutput) Indicators() TIDataConnectorDataTypesResponseIndicatorsPtrOutput {
	return o.ApplyT(func(v *TIDataConnectorDataTypesResponse) *TIDataConnectorDataTypesResponseIndicators {
		if v == nil {
			return nil
		}
		return v.Indicators
	}).(TIDataConnectorDataTypesResponseIndicatorsPtrOutput)
}

// Data type for indicators connection.
type TIDataConnectorDataTypesResponseIndicators struct {
	// Describe whether this data type connection is enabled or not.
	State *string `pulumi:"state"`
}

// Data type for indicators connection.
type TIDataConnectorDataTypesResponseIndicatorsOutput struct{ *pulumi.OutputState }

func (TIDataConnectorDataTypesResponseIndicatorsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TIDataConnectorDataTypesResponseIndicators)(nil)).Elem()
}

func (o TIDataConnectorDataTypesResponseIndicatorsOutput) ToTIDataConnectorDataTypesResponseIndicatorsOutput() TIDataConnectorDataTypesResponseIndicatorsOutput {
	return o
}

func (o TIDataConnectorDataTypesResponseIndicatorsOutput) ToTIDataConnectorDataTypesResponseIndicatorsOutputWithContext(ctx context.Context) TIDataConnectorDataTypesResponseIndicatorsOutput {
	return o
}

// Describe whether this data type connection is enabled or not.
func (o TIDataConnectorDataTypesResponseIndicatorsOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TIDataConnectorDataTypesResponseIndicators) *string { return v.State }).(pulumi.StringPtrOutput)
}

type TIDataConnectorDataTypesResponseIndicatorsPtrOutput struct{ *pulumi.OutputState }

func (TIDataConnectorDataTypesResponseIndicatorsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TIDataConnectorDataTypesResponseIndicators)(nil)).Elem()
}

func (o TIDataConnectorDataTypesResponseIndicatorsPtrOutput) ToTIDataConnectorDataTypesResponseIndicatorsPtrOutput() TIDataConnectorDataTypesResponseIndicatorsPtrOutput {
	return o
}

func (o TIDataConnectorDataTypesResponseIndicatorsPtrOutput) ToTIDataConnectorDataTypesResponseIndicatorsPtrOutputWithContext(ctx context.Context) TIDataConnectorDataTypesResponseIndicatorsPtrOutput {
	return o
}

func (o TIDataConnectorDataTypesResponseIndicatorsPtrOutput) Elem() TIDataConnectorDataTypesResponseIndicatorsOutput {
	return o.ApplyT(func(v *TIDataConnectorDataTypesResponseIndicators) TIDataConnectorDataTypesResponseIndicators {
		if v != nil {
			return *v
		}
		var ret TIDataConnectorDataTypesResponseIndicators
		return ret
	}).(TIDataConnectorDataTypesResponseIndicatorsOutput)
}

// Describe whether this data type connection is enabled or not.
func (o TIDataConnectorDataTypesResponseIndicatorsPtrOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TIDataConnectorDataTypesResponseIndicators) *string {
		if v == nil {
			return nil
		}
		return v.State
	}).(pulumi.StringPtrOutput)
}

// Template property bag.
type TemplatePropertiesResponse struct {
	// The creator of the content item.
	Author *MetadataAuthorResponse `pulumi:"author"`
	// Categories for the item
	Categories *MetadataCategoriesResponse `pulumi:"categories"`
	// Static ID for the content.  Used to identify dependencies and content from solutions or community.  Hard-coded/static for out of the box content and solutions. Dynamic for user-created.  This is the resource name
	ContentId string `pulumi:"contentId"`
	// The kind of content the template is for.
	ContentKind string `pulumi:"contentKind"`
	// Unique ID for the content. It should be generated based on the contentId of the package, contentId of the template, contentKind of the template and the contentVersion of the template
	ContentProductId string `pulumi:"contentProductId"`
	// Schema version of the content. Can be used to distinguish between different flow based on the schema version
	ContentSchemaVersion *string `pulumi:"contentSchemaVersion"`
	// The custom version of the content. A optional free text
	CustomVersion *string `pulumi:"customVersion"`
	// Dependant templates. Expandable.
	DependantTemplates []TemplatePropertiesResponse `pulumi:"dependantTemplates"`
	// Dependencies for the content item, what other content items it requires to work.  Can describe more complex dependencies using a recursive/nested structure. For a single dependency an id/kind/version can be supplied or operator/criteria for complex formats.
	Dependencies *MetadataDependenciesResponse `pulumi:"dependencies"`
	// The display name of the template
	DisplayName string `pulumi:"displayName"`
	// first publish date content item
	FirstPublishDate *string `pulumi:"firstPublishDate"`
	// the icon identifier. this id can later be fetched from the content metadata
	Icon *string `pulumi:"icon"`
	// Flag indicates if this template is deprecated
	IsDeprecated string `pulumi:"isDeprecated"`
	// last publish date for the content item
	LastPublishDate *string `pulumi:"lastPublishDate"`
	// The JSON of the ARM template to deploy active content. Expandable.
	MainTemplate interface{} `pulumi:"mainTemplate"`
	// the package Id contains this template
	PackageId string `pulumi:"packageId"`
	// the packageKind of the package contains this template
	PackageKind *string `pulumi:"packageKind"`
	// the name of the package contains this template
	PackageName *string `pulumi:"packageName"`
	// Version of the package.  Default and recommended format is numeric (e.g. 1, 1.0, 1.0.0, 1.0.0.0), following ARM metadata best practices.  Can also be any string, but then we cannot guarantee any version checks
	PackageVersion string `pulumi:"packageVersion"`
	// preview image file names. These will be taken from the solution artifacts
	PreviewImages []string `pulumi:"previewImages"`
	// preview image file names. These will be taken from the solution artifacts. used for dark theme support
	PreviewImagesDark []string `pulumi:"previewImagesDark"`
	// Providers for the content item
	Providers []string `pulumi:"providers"`
	// Source of the content.  This is where/how it was created.
	Source MetadataSourceResponse `pulumi:"source"`
	// Support information for the template - type, name, contact information
	Support *MetadataSupportResponse `pulumi:"support"`
	// the tactics the resource covers
	ThreatAnalysisTactics []string `pulumi:"threatAnalysisTactics"`
	// the techniques the resource covers, these have to be aligned with the tactics being used
	ThreatAnalysisTechniques []string `pulumi:"threatAnalysisTechniques"`
	// Version of the content.  Default and recommended format is numeric (e.g. 1, 1.0, 1.0.0, 1.0.0.0), following ARM metadata best practices.  Can also be any string, but then we cannot guarantee any version checks
	Version string `pulumi:"version"`
}

// Template property bag.
type TemplatePropertiesResponseOutput struct{ *pulumi.OutputState }

func (TemplatePropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplatePropertiesResponse)(nil)).Elem()
}

func (o TemplatePropertiesResponseOutput) ToTemplatePropertiesResponseOutput() TemplatePropertiesResponseOutput {
	return o
}

func (o TemplatePropertiesResponseOutput) ToTemplatePropertiesResponseOutputWithContext(ctx context.Context) TemplatePropertiesResponseOutput {
	return o
}

// The creator of the content item.
func (o TemplatePropertiesResponseOutput) Author() MetadataAuthorResponsePtrOutput {
	return o.ApplyT(func(v TemplatePropertiesResponse) *MetadataAuthorResponse { return v.Author }).(MetadataAuthorResponsePtrOutput)
}

// Categories for the item
func (o TemplatePropertiesResponseOutput) Categories() MetadataCategoriesResponsePtrOutput {
	return o.ApplyT(func(v TemplatePropertiesResponse) *MetadataCategoriesResponse { return v.Categories }).(MetadataCategoriesResponsePtrOutput)
}

// Static ID for the content.  Used to identify dependencies and content from solutions or community.  Hard-coded/static for out of the box content and solutions. Dynamic for user-created.  This is the resource name
func (o TemplatePropertiesResponseOutput) ContentId() pulumi.StringOutput {
	return o.ApplyT(func(v TemplatePropertiesResponse) string { return v.ContentId }).(pulumi.StringOutput)
}

// The kind of content the template is for.
func (o TemplatePropertiesResponseOutput) ContentKind() pulumi.StringOutput {
	return o.ApplyT(func(v TemplatePropertiesResponse) string { return v.ContentKind }).(pulumi.StringOutput)
}

// Unique ID for the content. It should be generated based on the contentId of the package, contentId of the template, contentKind of the template and the contentVersion of the template
func (o TemplatePropertiesResponseOutput) ContentProductId() pulumi.StringOutput {
	return o.ApplyT(func(v TemplatePropertiesResponse) string { return v.ContentProductId }).(pulumi.StringOutput)
}

// Schema version of the content. Can be used to distinguish between different flow based on the schema version
func (o TemplatePropertiesResponseOutput) ContentSchemaVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TemplatePropertiesResponse) *string { return v.ContentSchemaVersion }).(pulumi.StringPtrOutput)
}

// The custom version of the content. A optional free text
func (o TemplatePropertiesResponseOutput) CustomVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TemplatePropertiesResponse) *string { return v.CustomVersion }).(pulumi.StringPtrOutput)
}

// Dependant templates. Expandable.
func (o TemplatePropertiesResponseOutput) DependantTemplates() TemplatePropertiesResponseArrayOutput {
	return o.ApplyT(func(v TemplatePropertiesResponse) []TemplatePropertiesResponse { return v.DependantTemplates }).(TemplatePropertiesResponseArrayOutput)
}

// Dependencies for the content item, what other content items it requires to work.  Can describe more complex dependencies using a recursive/nested structure. For a single dependency an id/kind/version can be supplied or operator/criteria for complex formats.
func (o TemplatePropertiesResponseOutput) Dependencies() MetadataDependenciesResponsePtrOutput {
	return o.ApplyT(func(v TemplatePropertiesResponse) *MetadataDependenciesResponse { return v.Dependencies }).(MetadataDependenciesResponsePtrOutput)
}

// The display name of the template
func (o TemplatePropertiesResponseOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v TemplatePropertiesResponse) string { return v.DisplayName }).(pulumi.StringOutput)
}

// first publish date content item
func (o TemplatePropertiesResponseOutput) FirstPublishDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TemplatePropertiesResponse) *string { return v.FirstPublishDate }).(pulumi.StringPtrOutput)
}

// the icon identifier. this id can later be fetched from the content metadata
func (o TemplatePropertiesResponseOutput) Icon() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TemplatePropertiesResponse) *string { return v.Icon }).(pulumi.StringPtrOutput)
}

// Flag indicates if this template is deprecated
func (o TemplatePropertiesResponseOutput) IsDeprecated() pulumi.StringOutput {
	return o.ApplyT(func(v TemplatePropertiesResponse) string { return v.IsDeprecated }).(pulumi.StringOutput)
}

// last publish date for the content item
func (o TemplatePropertiesResponseOutput) LastPublishDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TemplatePropertiesResponse) *string { return v.LastPublishDate }).(pulumi.StringPtrOutput)
}

// The JSON of the ARM template to deploy active content. Expandable.
func (o TemplatePropertiesResponseOutput) MainTemplate() pulumi.AnyOutput {
	return o.ApplyT(func(v TemplatePropertiesResponse) interface{} { return v.MainTemplate }).(pulumi.AnyOutput)
}

// the package Id contains this template
func (o TemplatePropertiesResponseOutput) PackageId() pulumi.StringOutput {
	return o.ApplyT(func(v TemplatePropertiesResponse) string { return v.PackageId }).(pulumi.StringOutput)
}

// the packageKind of the package contains this template
func (o TemplatePropertiesResponseOutput) PackageKind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TemplatePropertiesResponse) *string { return v.PackageKind }).(pulumi.StringPtrOutput)
}

// the name of the package contains this template
func (o TemplatePropertiesResponseOutput) PackageName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TemplatePropertiesResponse) *string { return v.PackageName }).(pulumi.StringPtrOutput)
}

// Version of the package.  Default and recommended format is numeric (e.g. 1, 1.0, 1.0.0, 1.0.0.0), following ARM metadata best practices.  Can also be any string, but then we cannot guarantee any version checks
func (o TemplatePropertiesResponseOutput) PackageVersion() pulumi.StringOutput {
	return o.ApplyT(func(v TemplatePropertiesResponse) string { return v.PackageVersion }).(pulumi.StringOutput)
}

// preview image file names. These will be taken from the solution artifacts
func (o TemplatePropertiesResponseOutput) PreviewImages() pulumi.StringArrayOutput {
	return o.ApplyT(func(v TemplatePropertiesResponse) []string { return v.PreviewImages }).(pulumi.StringArrayOutput)
}

// preview image file names. These will be taken from the solution artifacts. used for dark theme support
func (o TemplatePropertiesResponseOutput) PreviewImagesDark() pulumi.StringArrayOutput {
	return o.ApplyT(func(v TemplatePropertiesResponse) []string { return v.PreviewImagesDark }).(pulumi.StringArrayOutput)
}

// Providers for the content item
func (o TemplatePropertiesResponseOutput) Providers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v TemplatePropertiesResponse) []string { return v.Providers }).(pulumi.StringArrayOutput)
}

// Source of the content.  This is where/how it was created.
func (o TemplatePropertiesResponseOutput) Source() MetadataSourceResponseOutput {
	return o.ApplyT(func(v TemplatePropertiesResponse) MetadataSourceResponse { return v.Source }).(MetadataSourceResponseOutput)
}

// Support information for the template - type, name, contact information
func (o TemplatePropertiesResponseOutput) Support() MetadataSupportResponsePtrOutput {
	return o.ApplyT(func(v TemplatePropertiesResponse) *MetadataSupportResponse { return v.Support }).(MetadataSupportResponsePtrOutput)
}

// the tactics the resource covers
func (o TemplatePropertiesResponseOutput) ThreatAnalysisTactics() pulumi.StringArrayOutput {
	return o.ApplyT(func(v TemplatePropertiesResponse) []string { return v.ThreatAnalysisTactics }).(pulumi.StringArrayOutput)
}

// the techniques the resource covers, these have to be aligned with the tactics being used
func (o TemplatePropertiesResponseOutput) ThreatAnalysisTechniques() pulumi.StringArrayOutput {
	return o.ApplyT(func(v TemplatePropertiesResponse) []string { return v.ThreatAnalysisTechniques }).(pulumi.StringArrayOutput)
}

// Version of the content.  Default and recommended format is numeric (e.g. 1, 1.0, 1.0.0, 1.0.0.0), following ARM metadata best practices.  Can also be any string, but then we cannot guarantee any version checks
func (o TemplatePropertiesResponseOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v TemplatePropertiesResponse) string { return v.Version }).(pulumi.StringOutput)
}

type TemplatePropertiesResponseArrayOutput struct{ *pulumi.OutputState }

func (TemplatePropertiesResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TemplatePropertiesResponse)(nil)).Elem()
}

func (o TemplatePropertiesResponseArrayOutput) ToTemplatePropertiesResponseArrayOutput() TemplatePropertiesResponseArrayOutput {
	return o
}

func (o TemplatePropertiesResponseArrayOutput) ToTemplatePropertiesResponseArrayOutputWithContext(ctx context.Context) TemplatePropertiesResponseArrayOutput {
	return o
}

func (o TemplatePropertiesResponseArrayOutput) Index(i pulumi.IntInput) TemplatePropertiesResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TemplatePropertiesResponse {
		return vs[0].([]TemplatePropertiesResponse)[vs[1].(int)]
	}).(TemplatePropertiesResponseOutput)
}

// Describes external reference
type ThreatIntelligenceExternalReference struct {
	// External reference description
	Description *string `pulumi:"description"`
	// External reference ID
	ExternalId *string `pulumi:"externalId"`
	// External reference hashes
	Hashes map[string]string `pulumi:"hashes"`
	// External reference source name
	SourceName *string `pulumi:"sourceName"`
	// External reference URL
	Url *string `pulumi:"url"`
}

// ThreatIntelligenceExternalReferenceInput is an input type that accepts ThreatIntelligenceExternalReferenceArgs and ThreatIntelligenceExternalReferenceOutput values.
// You can construct a concrete instance of `ThreatIntelligenceExternalReferenceInput` via:
//
//	ThreatIntelligenceExternalReferenceArgs{...}
type ThreatIntelligenceExternalReferenceInput interface {
	pulumi.Input

	ToThreatIntelligenceExternalReferenceOutput() ThreatIntelligenceExternalReferenceOutput
	ToThreatIntelligenceExternalReferenceOutputWithContext(context.Context) ThreatIntelligenceExternalReferenceOutput
}

// Describes external reference
type ThreatIntelligenceExternalReferenceArgs struct {
	// External reference description
	Description pulumi.StringPtrInput `pulumi:"description"`
	// External reference ID
	ExternalId pulumi.StringPtrInput `pulumi:"externalId"`
	// External reference hashes
	Hashes pulumi.StringMapInput `pulumi:"hashes"`
	// External reference source name
	SourceName pulumi.StringPtrInput `pulumi:"sourceName"`
	// External reference URL
	Url pulumi.StringPtrInput `pulumi:"url"`
}

func (ThreatIntelligenceExternalReferenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ThreatIntelligenceExternalReference)(nil)).Elem()
}

func (i ThreatIntelligenceExternalReferenceArgs) ToThreatIntelligenceExternalReferenceOutput() ThreatIntelligenceExternalReferenceOutput {
	return i.ToThreatIntelligenceExternalReferenceOutputWithContext(context.Background())
}

func (i ThreatIntelligenceExternalReferenceArgs) ToThreatIntelligenceExternalReferenceOutputWithContext(ctx context.Context) ThreatIntelligenceExternalReferenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ThreatIntelligenceExternalReferenceOutput)
}

// ThreatIntelligenceExternalReferenceArrayInput is an input type that accepts ThreatIntelligenceExternalReferenceArray and ThreatIntelligenceExternalReferenceArrayOutput values.
// You can construct a concrete instance of `ThreatIntelligenceExternalReferenceArrayInput` via:
//
//	ThreatIntelligenceExternalReferenceArray{ ThreatIntelligenceExternalReferenceArgs{...} }
type ThreatIntelligenceExternalReferenceArrayInput interface {
	pulumi.Input

	ToThreatIntelligenceExternalReferenceArrayOutput() ThreatIntelligenceExternalReferenceArrayOutput
	ToThreatIntelligenceExternalReferenceArrayOutputWithContext(context.Context) ThreatIntelligenceExternalReferenceArrayOutput
}

type ThreatIntelligenceExternalReferenceArray []ThreatIntelligenceExternalReferenceInput

func (ThreatIntelligenceExternalReferenceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ThreatIntelligenceExternalReference)(nil)).Elem()
}

func (i ThreatIntelligenceExternalReferenceArray) ToThreatIntelligenceExternalReferenceArrayOutput() ThreatIntelligenceExternalReferenceArrayOutput {
	return i.ToThreatIntelligenceExternalReferenceArrayOutputWithContext(context.Background())
}

func (i ThreatIntelligenceExternalReferenceArray) ToThreatIntelligenceExternalReferenceArrayOutputWithContext(ctx context.Context) ThreatIntelligenceExternalReferenceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ThreatIntelligenceExternalReferenceArrayOutput)
}

// Describes external reference
type ThreatIntelligenceExternalReferenceOutput struct{ *pulumi.OutputState }

func (ThreatIntelligenceExternalReferenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ThreatIntelligenceExternalReference)(nil)).Elem()
}

func (o ThreatIntelligenceExternalReferenceOutput) ToThreatIntelligenceExternalReferenceOutput() ThreatIntelligenceExternalReferenceOutput {
	return o
}

func (o ThreatIntelligenceExternalReferenceOutput) ToThreatIntelligenceExternalReferenceOutputWithContext(ctx context.Context) ThreatIntelligenceExternalReferenceOutput {
	return o
}

// External reference description
func (o ThreatIntelligenceExternalReferenceOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ThreatIntelligenceExternalReference) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// External reference ID
func (o ThreatIntelligenceExternalReferenceOutput) ExternalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ThreatIntelligenceExternalReference) *string { return v.ExternalId }).(pulumi.StringPtrOutput)
}

// External reference hashes
func (o ThreatIntelligenceExternalReferenceOutput) Hashes() pulumi.StringMapOutput {
	return o.ApplyT(func(v ThreatIntelligenceExternalReference) map[string]string { return v.Hashes }).(pulumi.StringMapOutput)
}

// External reference source name
func (o ThreatIntelligenceExternalReferenceOutput) SourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ThreatIntelligenceExternalReference) *string { return v.SourceName }).(pulumi.StringPtrOutput)
}

// External reference URL
func (o ThreatIntelligenceExternalReferenceOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ThreatIntelligenceExternalReference) *string { return v.Url }).(pulumi.StringPtrOutput)
}

type ThreatIntelligenceExternalReferenceArrayOutput struct{ *pulumi.OutputState }

func (ThreatIntelligenceExternalReferenceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ThreatIntelligenceExternalReference)(nil)).Elem()
}

func (o ThreatIntelligenceExternalReferenceArrayOutput) ToThreatIntelligenceExternalReferenceArrayOutput() ThreatIntelligenceExternalReferenceArrayOutput {
	return o
}

func (o ThreatIntelligenceExternalReferenceArrayOutput) ToThreatIntelligenceExternalReferenceArrayOutputWithContext(ctx context.Context) ThreatIntelligenceExternalReferenceArrayOutput {
	return o
}

func (o ThreatIntelligenceExternalReferenceArrayOutput) Index(i pulumi.IntInput) ThreatIntelligenceExternalReferenceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ThreatIntelligenceExternalReference {
		return vs[0].([]ThreatIntelligenceExternalReference)[vs[1].(int)]
	}).(ThreatIntelligenceExternalReferenceOutput)
}

// Describes threat granular marking model entity
type ThreatIntelligenceGranularMarkingModel struct {
	// Language granular marking model
	Language *string `pulumi:"language"`
	// marking reference granular marking model
	MarkingRef *int `pulumi:"markingRef"`
	// granular marking model selectors
	Selectors []string `pulumi:"selectors"`
}

// ThreatIntelligenceGranularMarkingModelInput is an input type that accepts ThreatIntelligenceGranularMarkingModelArgs and ThreatIntelligenceGranularMarkingModelOutput values.
// You can construct a concrete instance of `ThreatIntelligenceGranularMarkingModelInput` via:
//
//	ThreatIntelligenceGranularMarkingModelArgs{...}
type ThreatIntelligenceGranularMarkingModelInput interface {
	pulumi.Input

	ToThreatIntelligenceGranularMarkingModelOutput() ThreatIntelligenceGranularMarkingModelOutput
	ToThreatIntelligenceGranularMarkingModelOutputWithContext(context.Context) ThreatIntelligenceGranularMarkingModelOutput
}

// Describes threat granular marking model entity
type ThreatIntelligenceGranularMarkingModelArgs struct {
	// Language granular marking model
	Language pulumi.StringPtrInput `pulumi:"language"`
	// marking reference granular marking model
	MarkingRef pulumi.IntPtrInput `pulumi:"markingRef"`
	// granular marking model selectors
	Selectors pulumi.StringArrayInput `pulumi:"selectors"`
}

func (ThreatIntelligenceGranularMarkingModelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ThreatIntelligenceGranularMarkingModel)(nil)).Elem()
}

func (i ThreatIntelligenceGranularMarkingModelArgs) ToThreatIntelligenceGranularMarkingModelOutput() ThreatIntelligenceGranularMarkingModelOutput {
	return i.ToThreatIntelligenceGranularMarkingModelOutputWithContext(context.Background())
}

func (i ThreatIntelligenceGranularMarkingModelArgs) ToThreatIntelligenceGranularMarkingModelOutputWithContext(ctx context.Context) ThreatIntelligenceGranularMarkingModelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ThreatIntelligenceGranularMarkingModelOutput)
}

// ThreatIntelligenceGranularMarkingModelArrayInput is an input type that accepts ThreatIntelligenceGranularMarkingModelArray and ThreatIntelligenceGranularMarkingModelArrayOutput values.
// You can construct a concrete instance of `ThreatIntelligenceGranularMarkingModelArrayInput` via:
//
//	ThreatIntelligenceGranularMarkingModelArray{ ThreatIntelligenceGranularMarkingModelArgs{...} }
type ThreatIntelligenceGranularMarkingModelArrayInput interface {
	pulumi.Input

	ToThreatIntelligenceGranularMarkingModelArrayOutput() ThreatIntelligenceGranularMarkingModelArrayOutput
	ToThreatIntelligenceGranularMarkingModelArrayOutputWithContext(context.Context) ThreatIntelligenceGranularMarkingModelArrayOutput
}

type ThreatIntelligenceGranularMarkingModelArray []ThreatIntelligenceGranularMarkingModelInput

func (ThreatIntelligenceGranularMarkingModelArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ThreatIntelligenceGranularMarkingModel)(nil)).Elem()
}

func (i ThreatIntelligenceGranularMarkingModelArray) ToThreatIntelligenceGranularMarkingModelArrayOutput() ThreatIntelligenceGranularMarkingModelArrayOutput {
	return i.ToThreatIntelligenceGranularMarkingModelArrayOutputWithContext(context.Background())
}

func (i ThreatIntelligenceGranularMarkingModelArray) ToThreatIntelligenceGranularMarkingModelArrayOutputWithContext(ctx context.Context) ThreatIntelligenceGranularMarkingModelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ThreatIntelligenceGranularMarkingModelArrayOutput)
}

// Describes threat granular marking model entity
type ThreatIntelligenceGranularMarkingModelOutput struct{ *pulumi.OutputState }

func (ThreatIntelligenceGranularMarkingModelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ThreatIntelligenceGranularMarkingModel)(nil)).Elem()
}

func (o ThreatIntelligenceGranularMarkingModelOutput) ToThreatIntelligenceGranularMarkingModelOutput() ThreatIntelligenceGranularMarkingModelOutput {
	return o
}

func (o ThreatIntelligenceGranularMarkingModelOutput) ToThreatIntelligenceGranularMarkingModelOutputWithContext(ctx context.Context) ThreatIntelligenceGranularMarkingModelOutput {
	return o
}

// Language granular marking model
func (o ThreatIntelligenceGranularMarkingModelOutput) Language() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ThreatIntelligenceGranularMarkingModel) *string { return v.Language }).(pulumi.StringPtrOutput)
}

// marking reference granular marking model
func (o ThreatIntelligenceGranularMarkingModelOutput) MarkingRef() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ThreatIntelligenceGranularMarkingModel) *int { return v.MarkingRef }).(pulumi.IntPtrOutput)
}

// granular marking model selectors
func (o ThreatIntelligenceGranularMarkingModelOutput) Selectors() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ThreatIntelligenceGranularMarkingModel) []string { return v.Selectors }).(pulumi.StringArrayOutput)
}

type ThreatIntelligenceGranularMarkingModelArrayOutput struct{ *pulumi.OutputState }

func (ThreatIntelligenceGranularMarkingModelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ThreatIntelligenceGranularMarkingModel)(nil)).Elem()
}

func (o ThreatIntelligenceGranularMarkingModelArrayOutput) ToThreatIntelligenceGranularMarkingModelArrayOutput() ThreatIntelligenceGranularMarkingModelArrayOutput {
	return o
}

func (o ThreatIntelligenceGranularMarkingModelArrayOutput) ToThreatIntelligenceGranularMarkingModelArrayOutputWithContext(ctx context.Context) ThreatIntelligenceGranularMarkingModelArrayOutput {
	return o
}

func (o ThreatIntelligenceGranularMarkingModelArrayOutput) Index(i pulumi.IntInput) ThreatIntelligenceGranularMarkingModelOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ThreatIntelligenceGranularMarkingModel {
		return vs[0].([]ThreatIntelligenceGranularMarkingModel)[vs[1].(int)]
	}).(ThreatIntelligenceGranularMarkingModelOutput)
}

// Describes threat kill chain phase entity
type ThreatIntelligenceKillChainPhase struct {
	// Kill chainName name
	KillChainName *string `pulumi:"killChainName"`
	// Phase name
	PhaseName *string `pulumi:"phaseName"`
}

// ThreatIntelligenceKillChainPhaseInput is an input type that accepts ThreatIntelligenceKillChainPhaseArgs and ThreatIntelligenceKillChainPhaseOutput values.
// You can construct a concrete instance of `ThreatIntelligenceKillChainPhaseInput` via:
//
//	ThreatIntelligenceKillChainPhaseArgs{...}
type ThreatIntelligenceKillChainPhaseInput interface {
	pulumi.Input

	ToThreatIntelligenceKillChainPhaseOutput() ThreatIntelligenceKillChainPhaseOutput
	ToThreatIntelligenceKillChainPhaseOutputWithContext(context.Context) ThreatIntelligenceKillChainPhaseOutput
}

// Describes threat kill chain phase entity
type ThreatIntelligenceKillChainPhaseArgs struct {
	// Kill chainName name
	KillChainName pulumi.StringPtrInput `pulumi:"killChainName"`
	// Phase name
	PhaseName pulumi.StringPtrInput `pulumi:"phaseName"`
}

func (ThreatIntelligenceKillChainPhaseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ThreatIntelligenceKillChainPhase)(nil)).Elem()
}

func (i ThreatIntelligenceKillChainPhaseArgs) ToThreatIntelligenceKillChainPhaseOutput() ThreatIntelligenceKillChainPhaseOutput {
	return i.ToThreatIntelligenceKillChainPhaseOutputWithContext(context.Background())
}

func (i ThreatIntelligenceKillChainPhaseArgs) ToThreatIntelligenceKillChainPhaseOutputWithContext(ctx context.Context) ThreatIntelligenceKillChainPhaseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ThreatIntelligenceKillChainPhaseOutput)
}

// ThreatIntelligenceKillChainPhaseArrayInput is an input type that accepts ThreatIntelligenceKillChainPhaseArray and ThreatIntelligenceKillChainPhaseArrayOutput values.
// You can construct a concrete instance of `ThreatIntelligenceKillChainPhaseArrayInput` via:
//
//	ThreatIntelligenceKillChainPhaseArray{ ThreatIntelligenceKillChainPhaseArgs{...} }
type ThreatIntelligenceKillChainPhaseArrayInput interface {
	pulumi.Input

	ToThreatIntelligenceKillChainPhaseArrayOutput() ThreatIntelligenceKillChainPhaseArrayOutput
	ToThreatIntelligenceKillChainPhaseArrayOutputWithContext(context.Context) ThreatIntelligenceKillChainPhaseArrayOutput
}

type ThreatIntelligenceKillChainPhaseArray []ThreatIntelligenceKillChainPhaseInput

func (ThreatIntelligenceKillChainPhaseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ThreatIntelligenceKillChainPhase)(nil)).Elem()
}

func (i ThreatIntelligenceKillChainPhaseArray) ToThreatIntelligenceKillChainPhaseArrayOutput() ThreatIntelligenceKillChainPhaseArrayOutput {
	return i.ToThreatIntelligenceKillChainPhaseArrayOutputWithContext(context.Background())
}

func (i ThreatIntelligenceKillChainPhaseArray) ToThreatIntelligenceKillChainPhaseArrayOutputWithContext(ctx context.Context) ThreatIntelligenceKillChainPhaseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ThreatIntelligenceKillChainPhaseArrayOutput)
}

// Describes threat kill chain phase entity
type ThreatIntelligenceKillChainPhaseOutput struct{ *pulumi.OutputState }

func (ThreatIntelligenceKillChainPhaseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ThreatIntelligenceKillChainPhase)(nil)).Elem()
}

func (o ThreatIntelligenceKillChainPhaseOutput) ToThreatIntelligenceKillChainPhaseOutput() ThreatIntelligenceKillChainPhaseOutput {
	return o
}

func (o ThreatIntelligenceKillChainPhaseOutput) ToThreatIntelligenceKillChainPhaseOutputWithContext(ctx context.Context) ThreatIntelligenceKillChainPhaseOutput {
	return o
}

// Kill chainName name
func (o ThreatIntelligenceKillChainPhaseOutput) KillChainName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ThreatIntelligenceKillChainPhase) *string { return v.KillChainName }).(pulumi.StringPtrOutput)
}

// Phase name
func (o ThreatIntelligenceKillChainPhaseOutput) PhaseName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ThreatIntelligenceKillChainPhase) *string { return v.PhaseName }).(pulumi.StringPtrOutput)
}

type ThreatIntelligenceKillChainPhaseArrayOutput struct{ *pulumi.OutputState }

func (ThreatIntelligenceKillChainPhaseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ThreatIntelligenceKillChainPhase)(nil)).Elem()
}

func (o ThreatIntelligenceKillChainPhaseArrayOutput) ToThreatIntelligenceKillChainPhaseArrayOutput() ThreatIntelligenceKillChainPhaseArrayOutput {
	return o
}

func (o ThreatIntelligenceKillChainPhaseArrayOutput) ToThreatIntelligenceKillChainPhaseArrayOutputWithContext(ctx context.Context) ThreatIntelligenceKillChainPhaseArrayOutput {
	return o
}

func (o ThreatIntelligenceKillChainPhaseArrayOutput) Index(i pulumi.IntInput) ThreatIntelligenceKillChainPhaseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ThreatIntelligenceKillChainPhase {
		return vs[0].([]ThreatIntelligenceKillChainPhase)[vs[1].(int)]
	}).(ThreatIntelligenceKillChainPhaseOutput)
}

// Describes parsed pattern entity
type ThreatIntelligenceParsedPattern struct {
	// Pattern type key
	PatternTypeKey *string `pulumi:"patternTypeKey"`
	// Pattern type keys
	PatternTypeValues []ThreatIntelligenceParsedPatternTypeValue `pulumi:"patternTypeValues"`
}

// ThreatIntelligenceParsedPatternInput is an input type that accepts ThreatIntelligenceParsedPatternArgs and ThreatIntelligenceParsedPatternOutput values.
// You can construct a concrete instance of `ThreatIntelligenceParsedPatternInput` via:
//
//	ThreatIntelligenceParsedPatternArgs{...}
type ThreatIntelligenceParsedPatternInput interface {
	pulumi.Input

	ToThreatIntelligenceParsedPatternOutput() ThreatIntelligenceParsedPatternOutput
	ToThreatIntelligenceParsedPatternOutputWithContext(context.Context) ThreatIntelligenceParsedPatternOutput
}

// Describes parsed pattern entity
type ThreatIntelligenceParsedPatternArgs struct {
	// Pattern type key
	PatternTypeKey pulumi.StringPtrInput `pulumi:"patternTypeKey"`
	// Pattern type keys
	PatternTypeValues ThreatIntelligenceParsedPatternTypeValueArrayInput `pulumi:"patternTypeValues"`
}

func (ThreatIntelligenceParsedPatternArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ThreatIntelligenceParsedPattern)(nil)).Elem()
}

func (i ThreatIntelligenceParsedPatternArgs) ToThreatIntelligenceParsedPatternOutput() ThreatIntelligenceParsedPatternOutput {
	return i.ToThreatIntelligenceParsedPatternOutputWithContext(context.Background())
}

func (i ThreatIntelligenceParsedPatternArgs) ToThreatIntelligenceParsedPatternOutputWithContext(ctx context.Context) ThreatIntelligenceParsedPatternOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ThreatIntelligenceParsedPatternOutput)
}

// ThreatIntelligenceParsedPatternArrayInput is an input type that accepts ThreatIntelligenceParsedPatternArray and ThreatIntelligenceParsedPatternArrayOutput values.
// You can construct a concrete instance of `ThreatIntelligenceParsedPatternArrayInput` via:
//
//	ThreatIntelligenceParsedPatternArray{ ThreatIntelligenceParsedPatternArgs{...} }
type ThreatIntelligenceParsedPatternArrayInput interface {
	pulumi.Input

	ToThreatIntelligenceParsedPatternArrayOutput() ThreatIntelligenceParsedPatternArrayOutput
	ToThreatIntelligenceParsedPatternArrayOutputWithContext(context.Context) ThreatIntelligenceParsedPatternArrayOutput
}

type ThreatIntelligenceParsedPatternArray []ThreatIntelligenceParsedPatternInput

func (ThreatIntelligenceParsedPatternArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ThreatIntelligenceParsedPattern)(nil)).Elem()
}

func (i ThreatIntelligenceParsedPatternArray) ToThreatIntelligenceParsedPatternArrayOutput() ThreatIntelligenceParsedPatternArrayOutput {
	return i.ToThreatIntelligenceParsedPatternArrayOutputWithContext(context.Background())
}

func (i ThreatIntelligenceParsedPatternArray) ToThreatIntelligenceParsedPatternArrayOutputWithContext(ctx context.Context) ThreatIntelligenceParsedPatternArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ThreatIntelligenceParsedPatternArrayOutput)
}

// Describes parsed pattern entity
type ThreatIntelligenceParsedPatternOutput struct{ *pulumi.OutputState }

func (ThreatIntelligenceParsedPatternOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ThreatIntelligenceParsedPattern)(nil)).Elem()
}

func (o ThreatIntelligenceParsedPatternOutput) ToThreatIntelligenceParsedPatternOutput() ThreatIntelligenceParsedPatternOutput {
	return o
}

func (o ThreatIntelligenceParsedPatternOutput) ToThreatIntelligenceParsedPatternOutputWithContext(ctx context.Context) ThreatIntelligenceParsedPatternOutput {
	return o
}

// Pattern type key
func (o ThreatIntelligenceParsedPatternOutput) PatternTypeKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ThreatIntelligenceParsedPattern) *string { return v.PatternTypeKey }).(pulumi.StringPtrOutput)
}

// Pattern type keys
func (o ThreatIntelligenceParsedPatternOutput) PatternTypeValues() ThreatIntelligenceParsedPatternTypeValueArrayOutput {
	return o.ApplyT(func(v ThreatIntelligenceParsedPattern) []ThreatIntelligenceParsedPatternTypeValue {
		return v.PatternTypeValues
	}).(ThreatIntelligenceParsedPatternTypeValueArrayOutput)
}

type ThreatIntelligenceParsedPatternArrayOutput struct{ *pulumi.OutputState }

func (ThreatIntelligenceParsedPatternArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ThreatIntelligenceParsedPattern)(nil)).Elem()
}

func (o ThreatIntelligenceParsedPatternArrayOutput) ToThreatIntelligenceParsedPatternArrayOutput() ThreatIntelligenceParsedPatternArrayOutput {
	return o
}

func (o ThreatIntelligenceParsedPatternArrayOutput) ToThreatIntelligenceParsedPatternArrayOutputWithContext(ctx context.Context) ThreatIntelligenceParsedPatternArrayOutput {
	return o
}

func (o ThreatIntelligenceParsedPatternArrayOutput) Index(i pulumi.IntInput) ThreatIntelligenceParsedPatternOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ThreatIntelligenceParsedPattern {
		return vs[0].([]ThreatIntelligenceParsedPattern)[vs[1].(int)]
	}).(ThreatIntelligenceParsedPatternOutput)
}

// Describes threat kill chain phase entity
type ThreatIntelligenceParsedPatternTypeValue struct {
	// Value of parsed pattern
	Value *string `pulumi:"value"`
	// Type of the value
	ValueType *string `pulumi:"valueType"`
}

// ThreatIntelligenceParsedPatternTypeValueInput is an input type that accepts ThreatIntelligenceParsedPatternTypeValueArgs and ThreatIntelligenceParsedPatternTypeValueOutput values.
// You can construct a concrete instance of `ThreatIntelligenceParsedPatternTypeValueInput` via:
//
//	ThreatIntelligenceParsedPatternTypeValueArgs{...}
type ThreatIntelligenceParsedPatternTypeValueInput interface {
	pulumi.Input

	ToThreatIntelligenceParsedPatternTypeValueOutput() ThreatIntelligenceParsedPatternTypeValueOutput
	ToThreatIntelligenceParsedPatternTypeValueOutputWithContext(context.Context) ThreatIntelligenceParsedPatternTypeValueOutput
}

// Describes threat kill chain phase entity
type ThreatIntelligenceParsedPatternTypeValueArgs struct {
	// Value of parsed pattern
	Value pulumi.StringPtrInput `pulumi:"value"`
	// Type of the value
	ValueType pulumi.StringPtrInput `pulumi:"valueType"`
}

func (ThreatIntelligenceParsedPatternTypeValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ThreatIntelligenceParsedPatternTypeValue)(nil)).Elem()
}

func (i ThreatIntelligenceParsedPatternTypeValueArgs) ToThreatIntelligenceParsedPatternTypeValueOutput() ThreatIntelligenceParsedPatternTypeValueOutput {
	return i.ToThreatIntelligenceParsedPatternTypeValueOutputWithContext(context.Background())
}

func (i ThreatIntelligenceParsedPatternTypeValueArgs) ToThreatIntelligenceParsedPatternTypeValueOutputWithContext(ctx context.Context) ThreatIntelligenceParsedPatternTypeValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ThreatIntelligenceParsedPatternTypeValueOutput)
}

// ThreatIntelligenceParsedPatternTypeValueArrayInput is an input type that accepts ThreatIntelligenceParsedPatternTypeValueArray and ThreatIntelligenceParsedPatternTypeValueArrayOutput values.
// You can construct a concrete instance of `ThreatIntelligenceParsedPatternTypeValueArrayInput` via:
//
//	ThreatIntelligenceParsedPatternTypeValueArray{ ThreatIntelligenceParsedPatternTypeValueArgs{...} }
type ThreatIntelligenceParsedPatternTypeValueArrayInput interface {
	pulumi.Input

	ToThreatIntelligenceParsedPatternTypeValueArrayOutput() ThreatIntelligenceParsedPatternTypeValueArrayOutput
	ToThreatIntelligenceParsedPatternTypeValueArrayOutputWithContext(context.Context) ThreatIntelligenceParsedPatternTypeValueArrayOutput
}

type ThreatIntelligenceParsedPatternTypeValueArray []ThreatIntelligenceParsedPatternTypeValueInput

func (ThreatIntelligenceParsedPatternTypeValueArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ThreatIntelligenceParsedPatternTypeValue)(nil)).Elem()
}

func (i ThreatIntelligenceParsedPatternTypeValueArray) ToThreatIntelligenceParsedPatternTypeValueArrayOutput() ThreatIntelligenceParsedPatternTypeValueArrayOutput {
	return i.ToThreatIntelligenceParsedPatternTypeValueArrayOutputWithContext(context.Background())
}

func (i ThreatIntelligenceParsedPatternTypeValueArray) ToThreatIntelligenceParsedPatternTypeValueArrayOutputWithContext(ctx context.Context) ThreatIntelligenceParsedPatternTypeValueArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ThreatIntelligenceParsedPatternTypeValueArrayOutput)
}

// Describes threat kill chain phase entity
type ThreatIntelligenceParsedPatternTypeValueOutput struct{ *pulumi.OutputState }

func (ThreatIntelligenceParsedPatternTypeValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ThreatIntelligenceParsedPatternTypeValue)(nil)).Elem()
}

func (o ThreatIntelligenceParsedPatternTypeValueOutput) ToThreatIntelligenceParsedPatternTypeValueOutput() ThreatIntelligenceParsedPatternTypeValueOutput {
	return o
}

func (o ThreatIntelligenceParsedPatternTypeValueOutput) ToThreatIntelligenceParsedPatternTypeValueOutputWithContext(ctx context.Context) ThreatIntelligenceParsedPatternTypeValueOutput {
	return o
}

// Value of parsed pattern
func (o ThreatIntelligenceParsedPatternTypeValueOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ThreatIntelligenceParsedPatternTypeValue) *string { return v.Value }).(pulumi.StringPtrOutput)
}

// Type of the value
func (o ThreatIntelligenceParsedPatternTypeValueOutput) ValueType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ThreatIntelligenceParsedPatternTypeValue) *string { return v.ValueType }).(pulumi.StringPtrOutput)
}

type ThreatIntelligenceParsedPatternTypeValueArrayOutput struct{ *pulumi.OutputState }

func (ThreatIntelligenceParsedPatternTypeValueArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ThreatIntelligenceParsedPatternTypeValue)(nil)).Elem()
}

func (o ThreatIntelligenceParsedPatternTypeValueArrayOutput) ToThreatIntelligenceParsedPatternTypeValueArrayOutput() ThreatIntelligenceParsedPatternTypeValueArrayOutput {
	return o
}

func (o ThreatIntelligenceParsedPatternTypeValueArrayOutput) ToThreatIntelligenceParsedPatternTypeValueArrayOutputWithContext(ctx context.Context) ThreatIntelligenceParsedPatternTypeValueArrayOutput {
	return o
}

func (o ThreatIntelligenceParsedPatternTypeValueArrayOutput) Index(i pulumi.IntInput) ThreatIntelligenceParsedPatternTypeValueOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ThreatIntelligenceParsedPatternTypeValue {
		return vs[0].([]ThreatIntelligenceParsedPatternTypeValue)[vs[1].(int)]
	}).(ThreatIntelligenceParsedPatternTypeValueOutput)
}

// User information that made some action
type UserInfo struct {
	// The object id of the user.
	ObjectId *string `pulumi:"objectId"`
}

// UserInfoInput is an input type that accepts UserInfoArgs and UserInfoOutput values.
// You can construct a concrete instance of `UserInfoInput` via:
//
//	UserInfoArgs{...}
type UserInfoInput interface {
	pulumi.Input

	ToUserInfoOutput() UserInfoOutput
	ToUserInfoOutputWithContext(context.Context) UserInfoOutput
}

// User information that made some action
type UserInfoArgs struct {
	// The object id of the user.
	ObjectId pulumi.StringPtrInput `pulumi:"objectId"`
}

func (UserInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserInfo)(nil)).Elem()
}

func (i UserInfoArgs) ToUserInfoOutput() UserInfoOutput {
	return i.ToUserInfoOutputWithContext(context.Background())
}

func (i UserInfoArgs) ToUserInfoOutputWithContext(ctx context.Context) UserInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserInfoOutput)
}

func (i UserInfoArgs) ToUserInfoPtrOutput() UserInfoPtrOutput {
	return i.ToUserInfoPtrOutputWithContext(context.Background())
}

func (i UserInfoArgs) ToUserInfoPtrOutputWithContext(ctx context.Context) UserInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserInfoOutput).ToUserInfoPtrOutputWithContext(ctx)
}

// UserInfoPtrInput is an input type that accepts UserInfoArgs, UserInfoPtr and UserInfoPtrOutput values.
// You can construct a concrete instance of `UserInfoPtrInput` via:
//
//	        UserInfoArgs{...}
//
//	or:
//
//	        nil
type UserInfoPtrInput interface {
	pulumi.Input

	ToUserInfoPtrOutput() UserInfoPtrOutput
	ToUserInfoPtrOutputWithContext(context.Context) UserInfoPtrOutput
}

type userInfoPtrType UserInfoArgs

func UserInfoPtr(v *UserInfoArgs) UserInfoPtrInput {
	return (*userInfoPtrType)(v)
}

func (*userInfoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UserInfo)(nil)).Elem()
}

func (i *userInfoPtrType) ToUserInfoPtrOutput() UserInfoPtrOutput {
	return i.ToUserInfoPtrOutputWithContext(context.Background())
}

func (i *userInfoPtrType) ToUserInfoPtrOutputWithContext(ctx context.Context) UserInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserInfoPtrOutput)
}

// User information that made some action
type UserInfoOutput struct{ *pulumi.OutputState }

func (UserInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserInfo)(nil)).Elem()
}

func (o UserInfoOutput) ToUserInfoOutput() UserInfoOutput {
	return o
}

func (o UserInfoOutput) ToUserInfoOutputWithContext(ctx context.Context) UserInfoOutput {
	return o
}

func (o UserInfoOutput) ToUserInfoPtrOutput() UserInfoPtrOutput {
	return o.ToUserInfoPtrOutputWithContext(context.Background())
}

func (o UserInfoOutput) ToUserInfoPtrOutputWithContext(ctx context.Context) UserInfoPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v UserInfo) *UserInfo {
		return &v
	}).(UserInfoPtrOutput)
}

// The object id of the user.
func (o UserInfoOutput) ObjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserInfo) *string { return v.ObjectId }).(pulumi.StringPtrOutput)
}

type UserInfoPtrOutput struct{ *pulumi.OutputState }

func (UserInfoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserInfo)(nil)).Elem()
}

func (o UserInfoPtrOutput) ToUserInfoPtrOutput() UserInfoPtrOutput {
	return o
}

func (o UserInfoPtrOutput) ToUserInfoPtrOutputWithContext(ctx context.Context) UserInfoPtrOutput {
	return o
}

func (o UserInfoPtrOutput) Elem() UserInfoOutput {
	return o.ApplyT(func(v *UserInfo) UserInfo {
		if v != nil {
			return *v
		}
		var ret UserInfo
		return ret
	}).(UserInfoOutput)
}

// The object id of the user.
func (o UserInfoPtrOutput) ObjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserInfo) *string {
		if v == nil {
			return nil
		}
		return v.ObjectId
	}).(pulumi.StringPtrOutput)
}

// User information that made some action
type UserInfoResponse struct {
	// The email of the user.
	Email string `pulumi:"email"`
	// The name of the user.
	Name string `pulumi:"name"`
	// The object id of the user.
	ObjectId *string `pulumi:"objectId"`
}

// User information that made some action
type UserInfoResponseOutput struct{ *pulumi.OutputState }

func (UserInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserInfoResponse)(nil)).Elem()
}

func (o UserInfoResponseOutput) ToUserInfoResponseOutput() UserInfoResponseOutput {
	return o
}

func (o UserInfoResponseOutput) ToUserInfoResponseOutputWithContext(ctx context.Context) UserInfoResponseOutput {
	return o
}

// The email of the user.
func (o UserInfoResponseOutput) Email() pulumi.StringOutput {
	return o.ApplyT(func(v UserInfoResponse) string { return v.Email }).(pulumi.StringOutput)
}

// The name of the user.
func (o UserInfoResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v UserInfoResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The object id of the user.
func (o UserInfoResponseOutput) ObjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserInfoResponse) *string { return v.ObjectId }).(pulumi.StringPtrOutput)
}

type UserInfoResponsePtrOutput struct{ *pulumi.OutputState }

func (UserInfoResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserInfoResponse)(nil)).Elem()
}

func (o UserInfoResponsePtrOutput) ToUserInfoResponsePtrOutput() UserInfoResponsePtrOutput {
	return o
}

func (o UserInfoResponsePtrOutput) ToUserInfoResponsePtrOutputWithContext(ctx context.Context) UserInfoResponsePtrOutput {
	return o
}

func (o UserInfoResponsePtrOutput) Elem() UserInfoResponseOutput {
	return o.ApplyT(func(v *UserInfoResponse) UserInfoResponse {
		if v != nil {
			return *v
		}
		var ret UserInfoResponse
		return ret
	}).(UserInfoResponseOutput)
}

// The email of the user.
func (o UserInfoResponsePtrOutput) Email() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserInfoResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Email
	}).(pulumi.StringPtrOutput)
}

// The name of the user.
func (o UserInfoResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserInfoResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The object id of the user.
func (o UserInfoResponsePtrOutput) ObjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.ObjectId
	}).(pulumi.StringPtrOutput)
}

// User information that made some action
type WatchlistUserInfo struct {
	// The object id of the user.
	ObjectId *string `pulumi:"objectId"`
}

// WatchlistUserInfoInput is an input type that accepts WatchlistUserInfoArgs and WatchlistUserInfoOutput values.
// You can construct a concrete instance of `WatchlistUserInfoInput` via:
//
//	WatchlistUserInfoArgs{...}
type WatchlistUserInfoInput interface {
	pulumi.Input

	ToWatchlistUserInfoOutput() WatchlistUserInfoOutput
	ToWatchlistUserInfoOutputWithContext(context.Context) WatchlistUserInfoOutput
}

// User information that made some action
type WatchlistUserInfoArgs struct {
	// The object id of the user.
	ObjectId pulumi.StringPtrInput `pulumi:"objectId"`
}

func (WatchlistUserInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WatchlistUserInfo)(nil)).Elem()
}

func (i WatchlistUserInfoArgs) ToWatchlistUserInfoOutput() WatchlistUserInfoOutput {
	return i.ToWatchlistUserInfoOutputWithContext(context.Background())
}

func (i WatchlistUserInfoArgs) ToWatchlistUserInfoOutputWithContext(ctx context.Context) WatchlistUserInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WatchlistUserInfoOutput)
}

func (i WatchlistUserInfoArgs) ToWatchlistUserInfoPtrOutput() WatchlistUserInfoPtrOutput {
	return i.ToWatchlistUserInfoPtrOutputWithContext(context.Background())
}

func (i WatchlistUserInfoArgs) ToWatchlistUserInfoPtrOutputWithContext(ctx context.Context) WatchlistUserInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WatchlistUserInfoOutput).ToWatchlistUserInfoPtrOutputWithContext(ctx)
}

// WatchlistUserInfoPtrInput is an input type that accepts WatchlistUserInfoArgs, WatchlistUserInfoPtr and WatchlistUserInfoPtrOutput values.
// You can construct a concrete instance of `WatchlistUserInfoPtrInput` via:
//
//	        WatchlistUserInfoArgs{...}
//
//	or:
//
//	        nil
type WatchlistUserInfoPtrInput interface {
	pulumi.Input

	ToWatchlistUserInfoPtrOutput() WatchlistUserInfoPtrOutput
	ToWatchlistUserInfoPtrOutputWithContext(context.Context) WatchlistUserInfoPtrOutput
}

type watchlistUserInfoPtrType WatchlistUserInfoArgs

func WatchlistUserInfoPtr(v *WatchlistUserInfoArgs) WatchlistUserInfoPtrInput {
	return (*watchlistUserInfoPtrType)(v)
}

func (*watchlistUserInfoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WatchlistUserInfo)(nil)).Elem()
}

func (i *watchlistUserInfoPtrType) ToWatchlistUserInfoPtrOutput() WatchlistUserInfoPtrOutput {
	return i.ToWatchlistUserInfoPtrOutputWithContext(context.Background())
}

func (i *watchlistUserInfoPtrType) ToWatchlistUserInfoPtrOutputWithContext(ctx context.Context) WatchlistUserInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WatchlistUserInfoPtrOutput)
}

// User information that made some action
type WatchlistUserInfoOutput struct{ *pulumi.OutputState }

func (WatchlistUserInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WatchlistUserInfo)(nil)).Elem()
}

func (o WatchlistUserInfoOutput) ToWatchlistUserInfoOutput() WatchlistUserInfoOutput {
	return o
}

func (o WatchlistUserInfoOutput) ToWatchlistUserInfoOutputWithContext(ctx context.Context) WatchlistUserInfoOutput {
	return o
}

func (o WatchlistUserInfoOutput) ToWatchlistUserInfoPtrOutput() WatchlistUserInfoPtrOutput {
	return o.ToWatchlistUserInfoPtrOutputWithContext(context.Background())
}

func (o WatchlistUserInfoOutput) ToWatchlistUserInfoPtrOutputWithContext(ctx context.Context) WatchlistUserInfoPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WatchlistUserInfo) *WatchlistUserInfo {
		return &v
	}).(WatchlistUserInfoPtrOutput)
}

// The object id of the user.
func (o WatchlistUserInfoOutput) ObjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WatchlistUserInfo) *string { return v.ObjectId }).(pulumi.StringPtrOutput)
}

type WatchlistUserInfoPtrOutput struct{ *pulumi.OutputState }

func (WatchlistUserInfoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WatchlistUserInfo)(nil)).Elem()
}

func (o WatchlistUserInfoPtrOutput) ToWatchlistUserInfoPtrOutput() WatchlistUserInfoPtrOutput {
	return o
}

func (o WatchlistUserInfoPtrOutput) ToWatchlistUserInfoPtrOutputWithContext(ctx context.Context) WatchlistUserInfoPtrOutput {
	return o
}

func (o WatchlistUserInfoPtrOutput) Elem() WatchlistUserInfoOutput {
	return o.ApplyT(func(v *WatchlistUserInfo) WatchlistUserInfo {
		if v != nil {
			return *v
		}
		var ret WatchlistUserInfo
		return ret
	}).(WatchlistUserInfoOutput)
}

// The object id of the user.
func (o WatchlistUserInfoPtrOutput) ObjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WatchlistUserInfo) *string {
		if v == nil {
			return nil
		}
		return v.ObjectId
	}).(pulumi.StringPtrOutput)
}

// User information that made some action
type WatchlistUserInfoResponse struct {
	// The email of the user.
	Email string `pulumi:"email"`
	// The name of the user.
	Name string `pulumi:"name"`
	// The object id of the user.
	ObjectId *string `pulumi:"objectId"`
}

// User information that made some action
type WatchlistUserInfoResponseOutput struct{ *pulumi.OutputState }

func (WatchlistUserInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WatchlistUserInfoResponse)(nil)).Elem()
}

func (o WatchlistUserInfoResponseOutput) ToWatchlistUserInfoResponseOutput() WatchlistUserInfoResponseOutput {
	return o
}

func (o WatchlistUserInfoResponseOutput) ToWatchlistUserInfoResponseOutputWithContext(ctx context.Context) WatchlistUserInfoResponseOutput {
	return o
}

// The email of the user.
func (o WatchlistUserInfoResponseOutput) Email() pulumi.StringOutput {
	return o.ApplyT(func(v WatchlistUserInfoResponse) string { return v.Email }).(pulumi.StringOutput)
}

// The name of the user.
func (o WatchlistUserInfoResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v WatchlistUserInfoResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The object id of the user.
func (o WatchlistUserInfoResponseOutput) ObjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WatchlistUserInfoResponse) *string { return v.ObjectId }).(pulumi.StringPtrOutput)
}

type WatchlistUserInfoResponsePtrOutput struct{ *pulumi.OutputState }

func (WatchlistUserInfoResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WatchlistUserInfoResponse)(nil)).Elem()
}

func (o WatchlistUserInfoResponsePtrOutput) ToWatchlistUserInfoResponsePtrOutput() WatchlistUserInfoResponsePtrOutput {
	return o
}

func (o WatchlistUserInfoResponsePtrOutput) ToWatchlistUserInfoResponsePtrOutputWithContext(ctx context.Context) WatchlistUserInfoResponsePtrOutput {
	return o
}

func (o WatchlistUserInfoResponsePtrOutput) Elem() WatchlistUserInfoResponseOutput {
	return o.ApplyT(func(v *WatchlistUserInfoResponse) WatchlistUserInfoResponse {
		if v != nil {
			return *v
		}
		var ret WatchlistUserInfoResponse
		return ret
	}).(WatchlistUserInfoResponseOutput)
}

// The email of the user.
func (o WatchlistUserInfoResponsePtrOutput) Email() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WatchlistUserInfoResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Email
	}).(pulumi.StringPtrOutput)
}

// The name of the user.
func (o WatchlistUserInfoResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WatchlistUserInfoResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The object id of the user.
func (o WatchlistUserInfoResponsePtrOutput) ObjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WatchlistUserInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.ObjectId
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(AWSAuthModelOutput{})
	pulumi.RegisterOutputType(AWSAuthModelResponseOutput{})
	pulumi.RegisterOutputType(AddIncidentTaskActionPropertiesOutput{})
	pulumi.RegisterOutputType(AddIncidentTaskActionPropertiesPtrOutput{})
	pulumi.RegisterOutputType(AddIncidentTaskActionPropertiesResponseOutput{})
	pulumi.RegisterOutputType(AddIncidentTaskActionPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(AlertDetailsOverrideOutput{})
	pulumi.RegisterOutputType(AlertDetailsOverridePtrOutput{})
	pulumi.RegisterOutputType(AlertDetailsOverrideResponseOutput{})
	pulumi.RegisterOutputType(AlertDetailsOverrideResponsePtrOutput{})
	pulumi.RegisterOutputType(AlertPropertyMappingOutput{})
	pulumi.RegisterOutputType(AlertPropertyMappingArrayOutput{})
	pulumi.RegisterOutputType(AlertPropertyMappingResponseOutput{})
	pulumi.RegisterOutputType(AlertPropertyMappingResponseArrayOutput{})
	pulumi.RegisterOutputType(AlertsDataTypeOfDataConnectorOutput{})
	pulumi.RegisterOutputType(AlertsDataTypeOfDataConnectorPtrOutput{})
	pulumi.RegisterOutputType(AlertsDataTypeOfDataConnectorResponseOutput{})
	pulumi.RegisterOutputType(AlertsDataTypeOfDataConnectorResponsePtrOutput{})
	pulumi.RegisterOutputType(ApiKeyAuthModelOutput{})
	pulumi.RegisterOutputType(ApiKeyAuthModelResponseOutput{})
	pulumi.RegisterOutputType(AutomationRuleAddIncidentTaskActionOutput{})
	pulumi.RegisterOutputType(AutomationRuleAddIncidentTaskActionResponseOutput{})
	pulumi.RegisterOutputType(AutomationRuleBooleanConditionOutput{})
	pulumi.RegisterOutputType(AutomationRuleBooleanConditionPtrOutput{})
	pulumi.RegisterOutputType(AutomationRuleBooleanConditionResponseOutput{})
	pulumi.RegisterOutputType(AutomationRuleBooleanConditionResponsePtrOutput{})
	pulumi.RegisterOutputType(AutomationRuleModifyPropertiesActionOutput{})
	pulumi.RegisterOutputType(AutomationRuleModifyPropertiesActionResponseOutput{})
	pulumi.RegisterOutputType(AutomationRulePropertyArrayChangedValuesConditionOutput{})
	pulumi.RegisterOutputType(AutomationRulePropertyArrayChangedValuesConditionPtrOutput{})
	pulumi.RegisterOutputType(AutomationRulePropertyArrayChangedValuesConditionResponseOutput{})
	pulumi.RegisterOutputType(AutomationRulePropertyArrayChangedValuesConditionResponsePtrOutput{})
	pulumi.RegisterOutputType(AutomationRulePropertyArrayValuesConditionOutput{})
	pulumi.RegisterOutputType(AutomationRulePropertyArrayValuesConditionPtrOutput{})
	pulumi.RegisterOutputType(AutomationRulePropertyArrayValuesConditionResponseOutput{})
	pulumi.RegisterOutputType(AutomationRulePropertyArrayValuesConditionResponsePtrOutput{})
	pulumi.RegisterOutputType(AutomationRulePropertyValuesChangedConditionOutput{})
	pulumi.RegisterOutputType(AutomationRulePropertyValuesChangedConditionPtrOutput{})
	pulumi.RegisterOutputType(AutomationRulePropertyValuesChangedConditionResponseOutput{})
	pulumi.RegisterOutputType(AutomationRulePropertyValuesChangedConditionResponsePtrOutput{})
	pulumi.RegisterOutputType(AutomationRulePropertyValuesConditionOutput{})
	pulumi.RegisterOutputType(AutomationRulePropertyValuesConditionPtrOutput{})
	pulumi.RegisterOutputType(AutomationRulePropertyValuesConditionResponseOutput{})
	pulumi.RegisterOutputType(AutomationRulePropertyValuesConditionResponsePtrOutput{})
	pulumi.RegisterOutputType(AutomationRuleRunPlaybookActionOutput{})
	pulumi.RegisterOutputType(AutomationRuleRunPlaybookActionResponseOutput{})
	pulumi.RegisterOutputType(AutomationRuleTriggeringLogicOutput{})
	pulumi.RegisterOutputType(AutomationRuleTriggeringLogicResponseOutput{})
	pulumi.RegisterOutputType(AwsCloudTrailDataConnectorDataTypesOutput{})
	pulumi.RegisterOutputType(AwsCloudTrailDataConnectorDataTypesPtrOutput{})
	pulumi.RegisterOutputType(AwsCloudTrailDataConnectorDataTypesLogsOutput{})
	pulumi.RegisterOutputType(AwsCloudTrailDataConnectorDataTypesLogsPtrOutput{})
	pulumi.RegisterOutputType(AwsCloudTrailDataConnectorDataTypesResponseOutput{})
	pulumi.RegisterOutputType(AwsCloudTrailDataConnectorDataTypesResponsePtrOutput{})
	pulumi.RegisterOutputType(AwsCloudTrailDataConnectorDataTypesResponseLogsOutput{})
	pulumi.RegisterOutputType(AwsCloudTrailDataConnectorDataTypesResponseLogsPtrOutput{})
	pulumi.RegisterOutputType(BasicAuthModelOutput{})
	pulumi.RegisterOutputType(BasicAuthModelResponseOutput{})
	pulumi.RegisterOutputType(BooleanConditionPropertiesOutput{})
	pulumi.RegisterOutputType(BooleanConditionPropertiesResponseOutput{})
	pulumi.RegisterOutputType(CcpResponseConfigOutput{})
	pulumi.RegisterOutputType(CcpResponseConfigPtrOutput{})
	pulumi.RegisterOutputType(CcpResponseConfigResponseOutput{})
	pulumi.RegisterOutputType(CcpResponseConfigResponsePtrOutput{})
	pulumi.RegisterOutputType(ClientInfoOutput{})
	pulumi.RegisterOutputType(ClientInfoPtrOutput{})
	pulumi.RegisterOutputType(ClientInfoResponseOutput{})
	pulumi.RegisterOutputType(ClientInfoResponsePtrOutput{})
	pulumi.RegisterOutputType(ConnectivityCriterionOutput{})
	pulumi.RegisterOutputType(ConnectivityCriterionArrayOutput{})
	pulumi.RegisterOutputType(ConnectivityCriterionResponseOutput{})
	pulumi.RegisterOutputType(ConnectivityCriterionResponseArrayOutput{})
	pulumi.RegisterOutputType(ConnectorDataTypeOutput{})
	pulumi.RegisterOutputType(ConnectorDataTypeArrayOutput{})
	pulumi.RegisterOutputType(ConnectorDataTypeResponseOutput{})
	pulumi.RegisterOutputType(ConnectorDataTypeResponseArrayOutput{})
	pulumi.RegisterOutputType(ConnectorDefinitionsAvailabilityOutput{})
	pulumi.RegisterOutputType(ConnectorDefinitionsAvailabilityPtrOutput{})
	pulumi.RegisterOutputType(ConnectorDefinitionsAvailabilityResponseOutput{})
	pulumi.RegisterOutputType(ConnectorDefinitionsAvailabilityResponsePtrOutput{})
	pulumi.RegisterOutputType(ConnectorDefinitionsPermissionsOutput{})
	pulumi.RegisterOutputType(ConnectorDefinitionsPermissionsResponseOutput{})
	pulumi.RegisterOutputType(ConnectorDefinitionsResourceProviderOutput{})
	pulumi.RegisterOutputType(ConnectorDefinitionsResourceProviderArrayOutput{})
	pulumi.RegisterOutputType(ConnectorDefinitionsResourceProviderResponseOutput{})
	pulumi.RegisterOutputType(ConnectorDefinitionsResourceProviderResponseArrayOutput{})
	pulumi.RegisterOutputType(CustomPermissionDetailsOutput{})
	pulumi.RegisterOutputType(CustomPermissionDetailsArrayOutput{})
	pulumi.RegisterOutputType(CustomPermissionDetailsResponseOutput{})
	pulumi.RegisterOutputType(CustomPermissionDetailsResponseArrayOutput{})
	pulumi.RegisterOutputType(CustomizableConnectionsConfigOutput{})
	pulumi.RegisterOutputType(CustomizableConnectionsConfigPtrOutput{})
	pulumi.RegisterOutputType(CustomizableConnectionsConfigResponseOutput{})
	pulumi.RegisterOutputType(CustomizableConnectionsConfigResponsePtrOutput{})
	pulumi.RegisterOutputType(CustomizableConnectorUiConfigOutput{})
	pulumi.RegisterOutputType(CustomizableConnectorUiConfigResponseOutput{})
	pulumi.RegisterOutputType(DCRConfigurationOutput{})
	pulumi.RegisterOutputType(DCRConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DCRConfigurationResponseOutput{})
	pulumi.RegisterOutputType(DCRConfigurationResponsePtrOutput{})
	pulumi.RegisterOutputType(DataConnectorDataTypeCommonOutput{})
	pulumi.RegisterOutputType(DataConnectorDataTypeCommonPtrOutput{})
	pulumi.RegisterOutputType(DataConnectorDataTypeCommonResponseOutput{})
	pulumi.RegisterOutputType(DataConnectorDataTypeCommonResponsePtrOutput{})
	pulumi.RegisterOutputType(EntityMappingOutput{})
	pulumi.RegisterOutputType(EntityMappingArrayOutput{})
	pulumi.RegisterOutputType(EntityMappingResponseOutput{})
	pulumi.RegisterOutputType(EntityMappingResponseArrayOutput{})
	pulumi.RegisterOutputType(EventGroupingSettingsOutput{})
	pulumi.RegisterOutputType(EventGroupingSettingsPtrOutput{})
	pulumi.RegisterOutputType(EventGroupingSettingsResponseOutput{})
	pulumi.RegisterOutputType(EventGroupingSettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(FieldMappingOutput{})
	pulumi.RegisterOutputType(FieldMappingArrayOutput{})
	pulumi.RegisterOutputType(FieldMappingResponseOutput{})
	pulumi.RegisterOutputType(FieldMappingResponseArrayOutput{})
	pulumi.RegisterOutputType(GCPAuthModelOutput{})
	pulumi.RegisterOutputType(GCPAuthModelResponseOutput{})
	pulumi.RegisterOutputType(GenericBlobSbsAuthModelOutput{})
	pulumi.RegisterOutputType(GenericBlobSbsAuthModelResponseOutput{})
	pulumi.RegisterOutputType(GitHubAuthModelOutput{})
	pulumi.RegisterOutputType(GitHubAuthModelResponseOutput{})
	pulumi.RegisterOutputType(GraphQueryOutput{})
	pulumi.RegisterOutputType(GraphQueryArrayOutput{})
	pulumi.RegisterOutputType(GraphQueryResponseOutput{})
	pulumi.RegisterOutputType(GraphQueryResponseArrayOutput{})
	pulumi.RegisterOutputType(GroupingConfigurationOutput{})
	pulumi.RegisterOutputType(GroupingConfigurationPtrOutput{})
	pulumi.RegisterOutputType(GroupingConfigurationResponseOutput{})
	pulumi.RegisterOutputType(GroupingConfigurationResponsePtrOutput{})
	pulumi.RegisterOutputType(IncidentAdditionalDataResponseOutput{})
	pulumi.RegisterOutputType(IncidentConfigurationOutput{})
	pulumi.RegisterOutputType(IncidentConfigurationPtrOutput{})
	pulumi.RegisterOutputType(IncidentConfigurationResponseOutput{})
	pulumi.RegisterOutputType(IncidentConfigurationResponsePtrOutput{})
	pulumi.RegisterOutputType(IncidentInfoOutput{})
	pulumi.RegisterOutputType(IncidentInfoPtrOutput{})
	pulumi.RegisterOutputType(IncidentInfoResponseOutput{})
	pulumi.RegisterOutputType(IncidentInfoResponsePtrOutput{})
	pulumi.RegisterOutputType(IncidentLabelOutput{})
	pulumi.RegisterOutputType(IncidentLabelArrayOutput{})
	pulumi.RegisterOutputType(IncidentLabelResponseOutput{})
	pulumi.RegisterOutputType(IncidentLabelResponseArrayOutput{})
	pulumi.RegisterOutputType(IncidentOwnerInfoOutput{})
	pulumi.RegisterOutputType(IncidentOwnerInfoPtrOutput{})
	pulumi.RegisterOutputType(IncidentOwnerInfoResponseOutput{})
	pulumi.RegisterOutputType(IncidentOwnerInfoResponsePtrOutput{})
	pulumi.RegisterOutputType(IncidentPropertiesActionOutput{})
	pulumi.RegisterOutputType(IncidentPropertiesActionPtrOutput{})
	pulumi.RegisterOutputType(IncidentPropertiesActionResponseOutput{})
	pulumi.RegisterOutputType(IncidentPropertiesActionResponsePtrOutput{})
	pulumi.RegisterOutputType(InstructionStepOutput{})
	pulumi.RegisterOutputType(InstructionStepArrayOutput{})
	pulumi.RegisterOutputType(InstructionStepDetailsOutput{})
	pulumi.RegisterOutputType(InstructionStepDetailsArrayOutput{})
	pulumi.RegisterOutputType(InstructionStepDetailsResponseOutput{})
	pulumi.RegisterOutputType(InstructionStepDetailsResponseArrayOutput{})
	pulumi.RegisterOutputType(InstructionStepResponseOutput{})
	pulumi.RegisterOutputType(InstructionStepResponseArrayOutput{})
	pulumi.RegisterOutputType(JwtAuthModelOutput{})
	pulumi.RegisterOutputType(JwtAuthModelResponseOutput{})
	pulumi.RegisterOutputType(MCASDataConnectorDataTypesOutput{})
	pulumi.RegisterOutputType(MCASDataConnectorDataTypesPtrOutput{})
	pulumi.RegisterOutputType(MCASDataConnectorDataTypesResponseOutput{})
	pulumi.RegisterOutputType(MCASDataConnectorDataTypesResponsePtrOutput{})
	pulumi.RegisterOutputType(MSTIDataConnectorDataTypesOutput{})
	pulumi.RegisterOutputType(MSTIDataConnectorDataTypesMicrosoftEmergingThreatFeedOutput{})
	pulumi.RegisterOutputType(MSTIDataConnectorDataTypesResponseOutput{})
	pulumi.RegisterOutputType(MSTIDataConnectorDataTypesResponseMicrosoftEmergingThreatFeedOutput{})
	pulumi.RegisterOutputType(MetadataAuthorOutput{})
	pulumi.RegisterOutputType(MetadataAuthorPtrOutput{})
	pulumi.RegisterOutputType(MetadataAuthorResponseOutput{})
	pulumi.RegisterOutputType(MetadataAuthorResponsePtrOutput{})
	pulumi.RegisterOutputType(MetadataCategoriesOutput{})
	pulumi.RegisterOutputType(MetadataCategoriesPtrOutput{})
	pulumi.RegisterOutputType(MetadataCategoriesResponseOutput{})
	pulumi.RegisterOutputType(MetadataCategoriesResponsePtrOutput{})
	pulumi.RegisterOutputType(MetadataDependenciesOutput{})
	pulumi.RegisterOutputType(MetadataDependenciesPtrOutput{})
	pulumi.RegisterOutputType(MetadataDependenciesArrayOutput{})
	pulumi.RegisterOutputType(MetadataDependenciesResponseOutput{})
	pulumi.RegisterOutputType(MetadataDependenciesResponsePtrOutput{})
	pulumi.RegisterOutputType(MetadataDependenciesResponseArrayOutput{})
	pulumi.RegisterOutputType(MetadataSourceOutput{})
	pulumi.RegisterOutputType(MetadataSourcePtrOutput{})
	pulumi.RegisterOutputType(MetadataSourceResponseOutput{})
	pulumi.RegisterOutputType(MetadataSourceResponsePtrOutput{})
	pulumi.RegisterOutputType(MetadataSupportOutput{})
	pulumi.RegisterOutputType(MetadataSupportPtrOutput{})
	pulumi.RegisterOutputType(MetadataSupportResponseOutput{})
	pulumi.RegisterOutputType(MetadataSupportResponsePtrOutput{})
	pulumi.RegisterOutputType(NoneAuthModelOutput{})
	pulumi.RegisterOutputType(NoneAuthModelResponseOutput{})
	pulumi.RegisterOutputType(OAuthModelOutput{})
	pulumi.RegisterOutputType(OAuthModelResponseOutput{})
	pulumi.RegisterOutputType(OfficeDataConnectorDataTypesOutput{})
	pulumi.RegisterOutputType(OfficeDataConnectorDataTypesPtrOutput{})
	pulumi.RegisterOutputType(OfficeDataConnectorDataTypesExchangeOutput{})
	pulumi.RegisterOutputType(OfficeDataConnectorDataTypesExchangePtrOutput{})
	pulumi.RegisterOutputType(OfficeDataConnectorDataTypesResponseOutput{})
	pulumi.RegisterOutputType(OfficeDataConnectorDataTypesResponsePtrOutput{})
	pulumi.RegisterOutputType(OfficeDataConnectorDataTypesResponseExchangeOutput{})
	pulumi.RegisterOutputType(OfficeDataConnectorDataTypesResponseExchangePtrOutput{})
	pulumi.RegisterOutputType(OfficeDataConnectorDataTypesResponseSharePointOutput{})
	pulumi.RegisterOutputType(OfficeDataConnectorDataTypesResponseSharePointPtrOutput{})
	pulumi.RegisterOutputType(OfficeDataConnectorDataTypesResponseTeamsOutput{})
	pulumi.RegisterOutputType(OfficeDataConnectorDataTypesResponseTeamsPtrOutput{})
	pulumi.RegisterOutputType(OfficeDataConnectorDataTypesSharePointOutput{})
	pulumi.RegisterOutputType(OfficeDataConnectorDataTypesSharePointPtrOutput{})
	pulumi.RegisterOutputType(OfficeDataConnectorDataTypesTeamsOutput{})
	pulumi.RegisterOutputType(OfficeDataConnectorDataTypesTeamsPtrOutput{})
	pulumi.RegisterOutputType(OracleAuthModelOutput{})
	pulumi.RegisterOutputType(OracleAuthModelResponseOutput{})
	pulumi.RegisterOutputType(PlaybookActionPropertiesOutput{})
	pulumi.RegisterOutputType(PlaybookActionPropertiesPtrOutput{})
	pulumi.RegisterOutputType(PlaybookActionPropertiesResponseOutput{})
	pulumi.RegisterOutputType(PlaybookActionPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(PremiumMdtiDataConnectorDataTypesOutput{})
	pulumi.RegisterOutputType(PremiumMdtiDataConnectorDataTypesConnectorOutput{})
	pulumi.RegisterOutputType(PremiumMdtiDataConnectorDataTypesResponseOutput{})
	pulumi.RegisterOutputType(PremiumMdtiDataConnectorDataTypesResponseConnectorOutput{})
	pulumi.RegisterOutputType(PropertyArrayChangedConditionPropertiesOutput{})
	pulumi.RegisterOutputType(PropertyArrayChangedConditionPropertiesResponseOutput{})
	pulumi.RegisterOutputType(PropertyArrayConditionPropertiesOutput{})
	pulumi.RegisterOutputType(PropertyArrayConditionPropertiesResponseOutput{})
	pulumi.RegisterOutputType(PropertyChangedConditionPropertiesOutput{})
	pulumi.RegisterOutputType(PropertyChangedConditionPropertiesResponseOutput{})
	pulumi.RegisterOutputType(PropertyConditionPropertiesOutput{})
	pulumi.RegisterOutputType(PropertyConditionPropertiesResponseOutput{})
	pulumi.RegisterOutputType(RepoResponseOutput{})
	pulumi.RegisterOutputType(RepoResponseArrayOutput{})
	pulumi.RegisterOutputType(ResourceProviderRequiredPermissionsOutput{})
	pulumi.RegisterOutputType(ResourceProviderRequiredPermissionsResponseOutput{})
	pulumi.RegisterOutputType(RestApiPollerRequestConfigOutput{})
	pulumi.RegisterOutputType(RestApiPollerRequestConfigResponseOutput{})
	pulumi.RegisterOutputType(RestApiPollerRequestPagingConfigOutput{})
	pulumi.RegisterOutputType(RestApiPollerRequestPagingConfigPtrOutput{})
	pulumi.RegisterOutputType(RestApiPollerRequestPagingConfigResponseOutput{})
	pulumi.RegisterOutputType(RestApiPollerRequestPagingConfigResponsePtrOutput{})
	pulumi.RegisterOutputType(SecurityMLAnalyticsSettingsDataSourceOutput{})
	pulumi.RegisterOutputType(SecurityMLAnalyticsSettingsDataSourceArrayOutput{})
	pulumi.RegisterOutputType(SecurityMLAnalyticsSettingsDataSourceResponseOutput{})
	pulumi.RegisterOutputType(SecurityMLAnalyticsSettingsDataSourceResponseArrayOutput{})
	pulumi.RegisterOutputType(SessionAuthModelOutput{})
	pulumi.RegisterOutputType(SessionAuthModelResponseOutput{})
	pulumi.RegisterOutputType(SystemDataResponseOutput{})
	pulumi.RegisterOutputType(TIDataConnectorDataTypesOutput{})
	pulumi.RegisterOutputType(TIDataConnectorDataTypesPtrOutput{})
	pulumi.RegisterOutputType(TIDataConnectorDataTypesIndicatorsOutput{})
	pulumi.RegisterOutputType(TIDataConnectorDataTypesIndicatorsPtrOutput{})
	pulumi.RegisterOutputType(TIDataConnectorDataTypesResponseOutput{})
	pulumi.RegisterOutputType(TIDataConnectorDataTypesResponsePtrOutput{})
	pulumi.RegisterOutputType(TIDataConnectorDataTypesResponseIndicatorsOutput{})
	pulumi.RegisterOutputType(TIDataConnectorDataTypesResponseIndicatorsPtrOutput{})
	pulumi.RegisterOutputType(TemplatePropertiesResponseOutput{})
	pulumi.RegisterOutputType(TemplatePropertiesResponseArrayOutput{})
	pulumi.RegisterOutputType(ThreatIntelligenceExternalReferenceOutput{})
	pulumi.RegisterOutputType(ThreatIntelligenceExternalReferenceArrayOutput{})
	pulumi.RegisterOutputType(ThreatIntelligenceGranularMarkingModelOutput{})
	pulumi.RegisterOutputType(ThreatIntelligenceGranularMarkingModelArrayOutput{})
	pulumi.RegisterOutputType(ThreatIntelligenceKillChainPhaseOutput{})
	pulumi.RegisterOutputType(ThreatIntelligenceKillChainPhaseArrayOutput{})
	pulumi.RegisterOutputType(ThreatIntelligenceParsedPatternOutput{})
	pulumi.RegisterOutputType(ThreatIntelligenceParsedPatternArrayOutput{})
	pulumi.RegisterOutputType(ThreatIntelligenceParsedPatternTypeValueOutput{})
	pulumi.RegisterOutputType(ThreatIntelligenceParsedPatternTypeValueArrayOutput{})
	pulumi.RegisterOutputType(UserInfoOutput{})
	pulumi.RegisterOutputType(UserInfoPtrOutput{})
	pulumi.RegisterOutputType(UserInfoResponseOutput{})
	pulumi.RegisterOutputType(UserInfoResponsePtrOutput{})
	pulumi.RegisterOutputType(WatchlistUserInfoOutput{})
	pulumi.RegisterOutputType(WatchlistUserInfoPtrOutput{})
	pulumi.RegisterOutputType(WatchlistUserInfoResponseOutput{})
	pulumi.RegisterOutputType(WatchlistUserInfoResponsePtrOutput{})
}
