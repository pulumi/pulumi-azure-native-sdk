// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20230201

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// The type of the automation rule action.
type ActionType string

const (
	// Modify an object's properties
	ActionTypeModifyProperties = ActionType("ModifyProperties")
	// Run a playbook on an object
	ActionTypeRunPlaybook = ActionType("RunPlaybook")
)

type AutomationRulePropertyArrayChangedConditionSupportedArrayType string

const (
	// Evaluate the condition on the alerts
	AutomationRulePropertyArrayChangedConditionSupportedArrayTypeAlerts = AutomationRulePropertyArrayChangedConditionSupportedArrayType("Alerts")
	// Evaluate the condition on the labels
	AutomationRulePropertyArrayChangedConditionSupportedArrayTypeLabels = AutomationRulePropertyArrayChangedConditionSupportedArrayType("Labels")
	// Evaluate the condition on the tactics
	AutomationRulePropertyArrayChangedConditionSupportedArrayTypeTactics = AutomationRulePropertyArrayChangedConditionSupportedArrayType("Tactics")
	// Evaluate the condition on the comments
	AutomationRulePropertyArrayChangedConditionSupportedArrayTypeComments = AutomationRulePropertyArrayChangedConditionSupportedArrayType("Comments")
)

func (AutomationRulePropertyArrayChangedConditionSupportedArrayType) ElementType() reflect.Type {
	return reflect.TypeOf((*AutomationRulePropertyArrayChangedConditionSupportedArrayType)(nil)).Elem()
}

func (e AutomationRulePropertyArrayChangedConditionSupportedArrayType) ToAutomationRulePropertyArrayChangedConditionSupportedArrayTypeOutput() AutomationRulePropertyArrayChangedConditionSupportedArrayTypeOutput {
	return pulumi.ToOutput(e).(AutomationRulePropertyArrayChangedConditionSupportedArrayTypeOutput)
}

func (e AutomationRulePropertyArrayChangedConditionSupportedArrayType) ToAutomationRulePropertyArrayChangedConditionSupportedArrayTypeOutputWithContext(ctx context.Context) AutomationRulePropertyArrayChangedConditionSupportedArrayTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AutomationRulePropertyArrayChangedConditionSupportedArrayTypeOutput)
}

func (e AutomationRulePropertyArrayChangedConditionSupportedArrayType) ToAutomationRulePropertyArrayChangedConditionSupportedArrayTypePtrOutput() AutomationRulePropertyArrayChangedConditionSupportedArrayTypePtrOutput {
	return e.ToAutomationRulePropertyArrayChangedConditionSupportedArrayTypePtrOutputWithContext(context.Background())
}

func (e AutomationRulePropertyArrayChangedConditionSupportedArrayType) ToAutomationRulePropertyArrayChangedConditionSupportedArrayTypePtrOutputWithContext(ctx context.Context) AutomationRulePropertyArrayChangedConditionSupportedArrayTypePtrOutput {
	return AutomationRulePropertyArrayChangedConditionSupportedArrayType(e).ToAutomationRulePropertyArrayChangedConditionSupportedArrayTypeOutputWithContext(ctx).ToAutomationRulePropertyArrayChangedConditionSupportedArrayTypePtrOutputWithContext(ctx)
}

func (e AutomationRulePropertyArrayChangedConditionSupportedArrayType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AutomationRulePropertyArrayChangedConditionSupportedArrayType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AutomationRulePropertyArrayChangedConditionSupportedArrayType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AutomationRulePropertyArrayChangedConditionSupportedArrayType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AutomationRulePropertyArrayChangedConditionSupportedArrayTypeOutput struct{ *pulumi.OutputState }

func (AutomationRulePropertyArrayChangedConditionSupportedArrayTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutomationRulePropertyArrayChangedConditionSupportedArrayType)(nil)).Elem()
}

func (o AutomationRulePropertyArrayChangedConditionSupportedArrayTypeOutput) ToAutomationRulePropertyArrayChangedConditionSupportedArrayTypeOutput() AutomationRulePropertyArrayChangedConditionSupportedArrayTypeOutput {
	return o
}

func (o AutomationRulePropertyArrayChangedConditionSupportedArrayTypeOutput) ToAutomationRulePropertyArrayChangedConditionSupportedArrayTypeOutputWithContext(ctx context.Context) AutomationRulePropertyArrayChangedConditionSupportedArrayTypeOutput {
	return o
}

func (o AutomationRulePropertyArrayChangedConditionSupportedArrayTypeOutput) ToAutomationRulePropertyArrayChangedConditionSupportedArrayTypePtrOutput() AutomationRulePropertyArrayChangedConditionSupportedArrayTypePtrOutput {
	return o.ToAutomationRulePropertyArrayChangedConditionSupportedArrayTypePtrOutputWithContext(context.Background())
}

func (o AutomationRulePropertyArrayChangedConditionSupportedArrayTypeOutput) ToAutomationRulePropertyArrayChangedConditionSupportedArrayTypePtrOutputWithContext(ctx context.Context) AutomationRulePropertyArrayChangedConditionSupportedArrayTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AutomationRulePropertyArrayChangedConditionSupportedArrayType) *AutomationRulePropertyArrayChangedConditionSupportedArrayType {
		return &v
	}).(AutomationRulePropertyArrayChangedConditionSupportedArrayTypePtrOutput)
}

func (o AutomationRulePropertyArrayChangedConditionSupportedArrayTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AutomationRulePropertyArrayChangedConditionSupportedArrayTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AutomationRulePropertyArrayChangedConditionSupportedArrayType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AutomationRulePropertyArrayChangedConditionSupportedArrayTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AutomationRulePropertyArrayChangedConditionSupportedArrayTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AutomationRulePropertyArrayChangedConditionSupportedArrayType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AutomationRulePropertyArrayChangedConditionSupportedArrayTypePtrOutput struct{ *pulumi.OutputState }

func (AutomationRulePropertyArrayChangedConditionSupportedArrayTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AutomationRulePropertyArrayChangedConditionSupportedArrayType)(nil)).Elem()
}

func (o AutomationRulePropertyArrayChangedConditionSupportedArrayTypePtrOutput) ToAutomationRulePropertyArrayChangedConditionSupportedArrayTypePtrOutput() AutomationRulePropertyArrayChangedConditionSupportedArrayTypePtrOutput {
	return o
}

func (o AutomationRulePropertyArrayChangedConditionSupportedArrayTypePtrOutput) ToAutomationRulePropertyArrayChangedConditionSupportedArrayTypePtrOutputWithContext(ctx context.Context) AutomationRulePropertyArrayChangedConditionSupportedArrayTypePtrOutput {
	return o
}

func (o AutomationRulePropertyArrayChangedConditionSupportedArrayTypePtrOutput) Elem() AutomationRulePropertyArrayChangedConditionSupportedArrayTypeOutput {
	return o.ApplyT(func(v *AutomationRulePropertyArrayChangedConditionSupportedArrayType) AutomationRulePropertyArrayChangedConditionSupportedArrayType {
		if v != nil {
			return *v
		}
		var ret AutomationRulePropertyArrayChangedConditionSupportedArrayType
		return ret
	}).(AutomationRulePropertyArrayChangedConditionSupportedArrayTypeOutput)
}

func (o AutomationRulePropertyArrayChangedConditionSupportedArrayTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AutomationRulePropertyArrayChangedConditionSupportedArrayTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AutomationRulePropertyArrayChangedConditionSupportedArrayType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AutomationRulePropertyArrayChangedConditionSupportedArrayTypeInput is an input type that accepts values of the AutomationRulePropertyArrayChangedConditionSupportedArrayType enum
// A concrete instance of `AutomationRulePropertyArrayChangedConditionSupportedArrayTypeInput` can be one of the following:
//
//	AutomationRulePropertyArrayChangedConditionSupportedArrayTypeAlerts
//	AutomationRulePropertyArrayChangedConditionSupportedArrayTypeLabels
//	AutomationRulePropertyArrayChangedConditionSupportedArrayTypeTactics
//	AutomationRulePropertyArrayChangedConditionSupportedArrayTypeComments
type AutomationRulePropertyArrayChangedConditionSupportedArrayTypeInput interface {
	pulumi.Input

	ToAutomationRulePropertyArrayChangedConditionSupportedArrayTypeOutput() AutomationRulePropertyArrayChangedConditionSupportedArrayTypeOutput
	ToAutomationRulePropertyArrayChangedConditionSupportedArrayTypeOutputWithContext(context.Context) AutomationRulePropertyArrayChangedConditionSupportedArrayTypeOutput
}

var automationRulePropertyArrayChangedConditionSupportedArrayTypePtrType = reflect.TypeOf((**AutomationRulePropertyArrayChangedConditionSupportedArrayType)(nil)).Elem()

type AutomationRulePropertyArrayChangedConditionSupportedArrayTypePtrInput interface {
	pulumi.Input

	ToAutomationRulePropertyArrayChangedConditionSupportedArrayTypePtrOutput() AutomationRulePropertyArrayChangedConditionSupportedArrayTypePtrOutput
	ToAutomationRulePropertyArrayChangedConditionSupportedArrayTypePtrOutputWithContext(context.Context) AutomationRulePropertyArrayChangedConditionSupportedArrayTypePtrOutput
}

type automationRulePropertyArrayChangedConditionSupportedArrayTypePtr string

func AutomationRulePropertyArrayChangedConditionSupportedArrayTypePtr(v string) AutomationRulePropertyArrayChangedConditionSupportedArrayTypePtrInput {
	return (*automationRulePropertyArrayChangedConditionSupportedArrayTypePtr)(&v)
}

func (*automationRulePropertyArrayChangedConditionSupportedArrayTypePtr) ElementType() reflect.Type {
	return automationRulePropertyArrayChangedConditionSupportedArrayTypePtrType
}

func (in *automationRulePropertyArrayChangedConditionSupportedArrayTypePtr) ToAutomationRulePropertyArrayChangedConditionSupportedArrayTypePtrOutput() AutomationRulePropertyArrayChangedConditionSupportedArrayTypePtrOutput {
	return pulumi.ToOutput(in).(AutomationRulePropertyArrayChangedConditionSupportedArrayTypePtrOutput)
}

func (in *automationRulePropertyArrayChangedConditionSupportedArrayTypePtr) ToAutomationRulePropertyArrayChangedConditionSupportedArrayTypePtrOutputWithContext(ctx context.Context) AutomationRulePropertyArrayChangedConditionSupportedArrayTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AutomationRulePropertyArrayChangedConditionSupportedArrayTypePtrOutput)
}

func (in *automationRulePropertyArrayChangedConditionSupportedArrayTypePtr) ToOutput(ctx context.Context) pulumix.Output[*AutomationRulePropertyArrayChangedConditionSupportedArrayType] {
	return pulumix.Output[*AutomationRulePropertyArrayChangedConditionSupportedArrayType]{
		OutputState: in.ToAutomationRulePropertyArrayChangedConditionSupportedArrayTypePtrOutputWithContext(ctx).OutputState,
	}
}

type AutomationRulePropertyArrayChangedConditionSupportedChangeType string

const (
	// Evaluate the condition on items added to the array
	AutomationRulePropertyArrayChangedConditionSupportedChangeTypeAdded = AutomationRulePropertyArrayChangedConditionSupportedChangeType("Added")
)

func (AutomationRulePropertyArrayChangedConditionSupportedChangeType) ElementType() reflect.Type {
	return reflect.TypeOf((*AutomationRulePropertyArrayChangedConditionSupportedChangeType)(nil)).Elem()
}

func (e AutomationRulePropertyArrayChangedConditionSupportedChangeType) ToAutomationRulePropertyArrayChangedConditionSupportedChangeTypeOutput() AutomationRulePropertyArrayChangedConditionSupportedChangeTypeOutput {
	return pulumi.ToOutput(e).(AutomationRulePropertyArrayChangedConditionSupportedChangeTypeOutput)
}

func (e AutomationRulePropertyArrayChangedConditionSupportedChangeType) ToAutomationRulePropertyArrayChangedConditionSupportedChangeTypeOutputWithContext(ctx context.Context) AutomationRulePropertyArrayChangedConditionSupportedChangeTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AutomationRulePropertyArrayChangedConditionSupportedChangeTypeOutput)
}

func (e AutomationRulePropertyArrayChangedConditionSupportedChangeType) ToAutomationRulePropertyArrayChangedConditionSupportedChangeTypePtrOutput() AutomationRulePropertyArrayChangedConditionSupportedChangeTypePtrOutput {
	return e.ToAutomationRulePropertyArrayChangedConditionSupportedChangeTypePtrOutputWithContext(context.Background())
}

func (e AutomationRulePropertyArrayChangedConditionSupportedChangeType) ToAutomationRulePropertyArrayChangedConditionSupportedChangeTypePtrOutputWithContext(ctx context.Context) AutomationRulePropertyArrayChangedConditionSupportedChangeTypePtrOutput {
	return AutomationRulePropertyArrayChangedConditionSupportedChangeType(e).ToAutomationRulePropertyArrayChangedConditionSupportedChangeTypeOutputWithContext(ctx).ToAutomationRulePropertyArrayChangedConditionSupportedChangeTypePtrOutputWithContext(ctx)
}

func (e AutomationRulePropertyArrayChangedConditionSupportedChangeType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AutomationRulePropertyArrayChangedConditionSupportedChangeType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AutomationRulePropertyArrayChangedConditionSupportedChangeType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AutomationRulePropertyArrayChangedConditionSupportedChangeType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AutomationRulePropertyArrayChangedConditionSupportedChangeTypeOutput struct{ *pulumi.OutputState }

func (AutomationRulePropertyArrayChangedConditionSupportedChangeTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutomationRulePropertyArrayChangedConditionSupportedChangeType)(nil)).Elem()
}

func (o AutomationRulePropertyArrayChangedConditionSupportedChangeTypeOutput) ToAutomationRulePropertyArrayChangedConditionSupportedChangeTypeOutput() AutomationRulePropertyArrayChangedConditionSupportedChangeTypeOutput {
	return o
}

func (o AutomationRulePropertyArrayChangedConditionSupportedChangeTypeOutput) ToAutomationRulePropertyArrayChangedConditionSupportedChangeTypeOutputWithContext(ctx context.Context) AutomationRulePropertyArrayChangedConditionSupportedChangeTypeOutput {
	return o
}

func (o AutomationRulePropertyArrayChangedConditionSupportedChangeTypeOutput) ToAutomationRulePropertyArrayChangedConditionSupportedChangeTypePtrOutput() AutomationRulePropertyArrayChangedConditionSupportedChangeTypePtrOutput {
	return o.ToAutomationRulePropertyArrayChangedConditionSupportedChangeTypePtrOutputWithContext(context.Background())
}

func (o AutomationRulePropertyArrayChangedConditionSupportedChangeTypeOutput) ToAutomationRulePropertyArrayChangedConditionSupportedChangeTypePtrOutputWithContext(ctx context.Context) AutomationRulePropertyArrayChangedConditionSupportedChangeTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AutomationRulePropertyArrayChangedConditionSupportedChangeType) *AutomationRulePropertyArrayChangedConditionSupportedChangeType {
		return &v
	}).(AutomationRulePropertyArrayChangedConditionSupportedChangeTypePtrOutput)
}

func (o AutomationRulePropertyArrayChangedConditionSupportedChangeTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AutomationRulePropertyArrayChangedConditionSupportedChangeTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AutomationRulePropertyArrayChangedConditionSupportedChangeType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AutomationRulePropertyArrayChangedConditionSupportedChangeTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AutomationRulePropertyArrayChangedConditionSupportedChangeTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AutomationRulePropertyArrayChangedConditionSupportedChangeType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AutomationRulePropertyArrayChangedConditionSupportedChangeTypePtrOutput struct{ *pulumi.OutputState }

func (AutomationRulePropertyArrayChangedConditionSupportedChangeTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AutomationRulePropertyArrayChangedConditionSupportedChangeType)(nil)).Elem()
}

func (o AutomationRulePropertyArrayChangedConditionSupportedChangeTypePtrOutput) ToAutomationRulePropertyArrayChangedConditionSupportedChangeTypePtrOutput() AutomationRulePropertyArrayChangedConditionSupportedChangeTypePtrOutput {
	return o
}

func (o AutomationRulePropertyArrayChangedConditionSupportedChangeTypePtrOutput) ToAutomationRulePropertyArrayChangedConditionSupportedChangeTypePtrOutputWithContext(ctx context.Context) AutomationRulePropertyArrayChangedConditionSupportedChangeTypePtrOutput {
	return o
}

func (o AutomationRulePropertyArrayChangedConditionSupportedChangeTypePtrOutput) Elem() AutomationRulePropertyArrayChangedConditionSupportedChangeTypeOutput {
	return o.ApplyT(func(v *AutomationRulePropertyArrayChangedConditionSupportedChangeType) AutomationRulePropertyArrayChangedConditionSupportedChangeType {
		if v != nil {
			return *v
		}
		var ret AutomationRulePropertyArrayChangedConditionSupportedChangeType
		return ret
	}).(AutomationRulePropertyArrayChangedConditionSupportedChangeTypeOutput)
}

func (o AutomationRulePropertyArrayChangedConditionSupportedChangeTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AutomationRulePropertyArrayChangedConditionSupportedChangeTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AutomationRulePropertyArrayChangedConditionSupportedChangeType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AutomationRulePropertyArrayChangedConditionSupportedChangeTypeInput is an input type that accepts values of the AutomationRulePropertyArrayChangedConditionSupportedChangeType enum
// A concrete instance of `AutomationRulePropertyArrayChangedConditionSupportedChangeTypeInput` can be one of the following:
//
//	AutomationRulePropertyArrayChangedConditionSupportedChangeTypeAdded
type AutomationRulePropertyArrayChangedConditionSupportedChangeTypeInput interface {
	pulumi.Input

	ToAutomationRulePropertyArrayChangedConditionSupportedChangeTypeOutput() AutomationRulePropertyArrayChangedConditionSupportedChangeTypeOutput
	ToAutomationRulePropertyArrayChangedConditionSupportedChangeTypeOutputWithContext(context.Context) AutomationRulePropertyArrayChangedConditionSupportedChangeTypeOutput
}

var automationRulePropertyArrayChangedConditionSupportedChangeTypePtrType = reflect.TypeOf((**AutomationRulePropertyArrayChangedConditionSupportedChangeType)(nil)).Elem()

type AutomationRulePropertyArrayChangedConditionSupportedChangeTypePtrInput interface {
	pulumi.Input

	ToAutomationRulePropertyArrayChangedConditionSupportedChangeTypePtrOutput() AutomationRulePropertyArrayChangedConditionSupportedChangeTypePtrOutput
	ToAutomationRulePropertyArrayChangedConditionSupportedChangeTypePtrOutputWithContext(context.Context) AutomationRulePropertyArrayChangedConditionSupportedChangeTypePtrOutput
}

type automationRulePropertyArrayChangedConditionSupportedChangeTypePtr string

func AutomationRulePropertyArrayChangedConditionSupportedChangeTypePtr(v string) AutomationRulePropertyArrayChangedConditionSupportedChangeTypePtrInput {
	return (*automationRulePropertyArrayChangedConditionSupportedChangeTypePtr)(&v)
}

func (*automationRulePropertyArrayChangedConditionSupportedChangeTypePtr) ElementType() reflect.Type {
	return automationRulePropertyArrayChangedConditionSupportedChangeTypePtrType
}

func (in *automationRulePropertyArrayChangedConditionSupportedChangeTypePtr) ToAutomationRulePropertyArrayChangedConditionSupportedChangeTypePtrOutput() AutomationRulePropertyArrayChangedConditionSupportedChangeTypePtrOutput {
	return pulumi.ToOutput(in).(AutomationRulePropertyArrayChangedConditionSupportedChangeTypePtrOutput)
}

func (in *automationRulePropertyArrayChangedConditionSupportedChangeTypePtr) ToAutomationRulePropertyArrayChangedConditionSupportedChangeTypePtrOutputWithContext(ctx context.Context) AutomationRulePropertyArrayChangedConditionSupportedChangeTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AutomationRulePropertyArrayChangedConditionSupportedChangeTypePtrOutput)
}

func (in *automationRulePropertyArrayChangedConditionSupportedChangeTypePtr) ToOutput(ctx context.Context) pulumix.Output[*AutomationRulePropertyArrayChangedConditionSupportedChangeType] {
	return pulumix.Output[*AutomationRulePropertyArrayChangedConditionSupportedChangeType]{
		OutputState: in.ToAutomationRulePropertyArrayChangedConditionSupportedChangeTypePtrOutputWithContext(ctx).OutputState,
	}
}

type AutomationRulePropertyChangedConditionSupportedChangedType string

const (
	// Evaluate the condition on the previous value of the property
	AutomationRulePropertyChangedConditionSupportedChangedTypeChangedFrom = AutomationRulePropertyChangedConditionSupportedChangedType("ChangedFrom")
	// Evaluate the condition on the updated value of the property
	AutomationRulePropertyChangedConditionSupportedChangedTypeChangedTo = AutomationRulePropertyChangedConditionSupportedChangedType("ChangedTo")
)

func (AutomationRulePropertyChangedConditionSupportedChangedType) ElementType() reflect.Type {
	return reflect.TypeOf((*AutomationRulePropertyChangedConditionSupportedChangedType)(nil)).Elem()
}

func (e AutomationRulePropertyChangedConditionSupportedChangedType) ToAutomationRulePropertyChangedConditionSupportedChangedTypeOutput() AutomationRulePropertyChangedConditionSupportedChangedTypeOutput {
	return pulumi.ToOutput(e).(AutomationRulePropertyChangedConditionSupportedChangedTypeOutput)
}

func (e AutomationRulePropertyChangedConditionSupportedChangedType) ToAutomationRulePropertyChangedConditionSupportedChangedTypeOutputWithContext(ctx context.Context) AutomationRulePropertyChangedConditionSupportedChangedTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AutomationRulePropertyChangedConditionSupportedChangedTypeOutput)
}

func (e AutomationRulePropertyChangedConditionSupportedChangedType) ToAutomationRulePropertyChangedConditionSupportedChangedTypePtrOutput() AutomationRulePropertyChangedConditionSupportedChangedTypePtrOutput {
	return e.ToAutomationRulePropertyChangedConditionSupportedChangedTypePtrOutputWithContext(context.Background())
}

func (e AutomationRulePropertyChangedConditionSupportedChangedType) ToAutomationRulePropertyChangedConditionSupportedChangedTypePtrOutputWithContext(ctx context.Context) AutomationRulePropertyChangedConditionSupportedChangedTypePtrOutput {
	return AutomationRulePropertyChangedConditionSupportedChangedType(e).ToAutomationRulePropertyChangedConditionSupportedChangedTypeOutputWithContext(ctx).ToAutomationRulePropertyChangedConditionSupportedChangedTypePtrOutputWithContext(ctx)
}

func (e AutomationRulePropertyChangedConditionSupportedChangedType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AutomationRulePropertyChangedConditionSupportedChangedType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AutomationRulePropertyChangedConditionSupportedChangedType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AutomationRulePropertyChangedConditionSupportedChangedType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AutomationRulePropertyChangedConditionSupportedChangedTypeOutput struct{ *pulumi.OutputState }

func (AutomationRulePropertyChangedConditionSupportedChangedTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutomationRulePropertyChangedConditionSupportedChangedType)(nil)).Elem()
}

func (o AutomationRulePropertyChangedConditionSupportedChangedTypeOutput) ToAutomationRulePropertyChangedConditionSupportedChangedTypeOutput() AutomationRulePropertyChangedConditionSupportedChangedTypeOutput {
	return o
}

func (o AutomationRulePropertyChangedConditionSupportedChangedTypeOutput) ToAutomationRulePropertyChangedConditionSupportedChangedTypeOutputWithContext(ctx context.Context) AutomationRulePropertyChangedConditionSupportedChangedTypeOutput {
	return o
}

func (o AutomationRulePropertyChangedConditionSupportedChangedTypeOutput) ToAutomationRulePropertyChangedConditionSupportedChangedTypePtrOutput() AutomationRulePropertyChangedConditionSupportedChangedTypePtrOutput {
	return o.ToAutomationRulePropertyChangedConditionSupportedChangedTypePtrOutputWithContext(context.Background())
}

func (o AutomationRulePropertyChangedConditionSupportedChangedTypeOutput) ToAutomationRulePropertyChangedConditionSupportedChangedTypePtrOutputWithContext(ctx context.Context) AutomationRulePropertyChangedConditionSupportedChangedTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AutomationRulePropertyChangedConditionSupportedChangedType) *AutomationRulePropertyChangedConditionSupportedChangedType {
		return &v
	}).(AutomationRulePropertyChangedConditionSupportedChangedTypePtrOutput)
}

func (o AutomationRulePropertyChangedConditionSupportedChangedTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AutomationRulePropertyChangedConditionSupportedChangedTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AutomationRulePropertyChangedConditionSupportedChangedType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AutomationRulePropertyChangedConditionSupportedChangedTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AutomationRulePropertyChangedConditionSupportedChangedTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AutomationRulePropertyChangedConditionSupportedChangedType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AutomationRulePropertyChangedConditionSupportedChangedTypePtrOutput struct{ *pulumi.OutputState }

func (AutomationRulePropertyChangedConditionSupportedChangedTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AutomationRulePropertyChangedConditionSupportedChangedType)(nil)).Elem()
}

func (o AutomationRulePropertyChangedConditionSupportedChangedTypePtrOutput) ToAutomationRulePropertyChangedConditionSupportedChangedTypePtrOutput() AutomationRulePropertyChangedConditionSupportedChangedTypePtrOutput {
	return o
}

func (o AutomationRulePropertyChangedConditionSupportedChangedTypePtrOutput) ToAutomationRulePropertyChangedConditionSupportedChangedTypePtrOutputWithContext(ctx context.Context) AutomationRulePropertyChangedConditionSupportedChangedTypePtrOutput {
	return o
}

func (o AutomationRulePropertyChangedConditionSupportedChangedTypePtrOutput) Elem() AutomationRulePropertyChangedConditionSupportedChangedTypeOutput {
	return o.ApplyT(func(v *AutomationRulePropertyChangedConditionSupportedChangedType) AutomationRulePropertyChangedConditionSupportedChangedType {
		if v != nil {
			return *v
		}
		var ret AutomationRulePropertyChangedConditionSupportedChangedType
		return ret
	}).(AutomationRulePropertyChangedConditionSupportedChangedTypeOutput)
}

func (o AutomationRulePropertyChangedConditionSupportedChangedTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AutomationRulePropertyChangedConditionSupportedChangedTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AutomationRulePropertyChangedConditionSupportedChangedType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AutomationRulePropertyChangedConditionSupportedChangedTypeInput is an input type that accepts values of the AutomationRulePropertyChangedConditionSupportedChangedType enum
// A concrete instance of `AutomationRulePropertyChangedConditionSupportedChangedTypeInput` can be one of the following:
//
//	AutomationRulePropertyChangedConditionSupportedChangedTypeChangedFrom
//	AutomationRulePropertyChangedConditionSupportedChangedTypeChangedTo
type AutomationRulePropertyChangedConditionSupportedChangedTypeInput interface {
	pulumi.Input

	ToAutomationRulePropertyChangedConditionSupportedChangedTypeOutput() AutomationRulePropertyChangedConditionSupportedChangedTypeOutput
	ToAutomationRulePropertyChangedConditionSupportedChangedTypeOutputWithContext(context.Context) AutomationRulePropertyChangedConditionSupportedChangedTypeOutput
}

var automationRulePropertyChangedConditionSupportedChangedTypePtrType = reflect.TypeOf((**AutomationRulePropertyChangedConditionSupportedChangedType)(nil)).Elem()

type AutomationRulePropertyChangedConditionSupportedChangedTypePtrInput interface {
	pulumi.Input

	ToAutomationRulePropertyChangedConditionSupportedChangedTypePtrOutput() AutomationRulePropertyChangedConditionSupportedChangedTypePtrOutput
	ToAutomationRulePropertyChangedConditionSupportedChangedTypePtrOutputWithContext(context.Context) AutomationRulePropertyChangedConditionSupportedChangedTypePtrOutput
}

type automationRulePropertyChangedConditionSupportedChangedTypePtr string

func AutomationRulePropertyChangedConditionSupportedChangedTypePtr(v string) AutomationRulePropertyChangedConditionSupportedChangedTypePtrInput {
	return (*automationRulePropertyChangedConditionSupportedChangedTypePtr)(&v)
}

func (*automationRulePropertyChangedConditionSupportedChangedTypePtr) ElementType() reflect.Type {
	return automationRulePropertyChangedConditionSupportedChangedTypePtrType
}

func (in *automationRulePropertyChangedConditionSupportedChangedTypePtr) ToAutomationRulePropertyChangedConditionSupportedChangedTypePtrOutput() AutomationRulePropertyChangedConditionSupportedChangedTypePtrOutput {
	return pulumi.ToOutput(in).(AutomationRulePropertyChangedConditionSupportedChangedTypePtrOutput)
}

func (in *automationRulePropertyChangedConditionSupportedChangedTypePtr) ToAutomationRulePropertyChangedConditionSupportedChangedTypePtrOutputWithContext(ctx context.Context) AutomationRulePropertyChangedConditionSupportedChangedTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AutomationRulePropertyChangedConditionSupportedChangedTypePtrOutput)
}

func (in *automationRulePropertyChangedConditionSupportedChangedTypePtr) ToOutput(ctx context.Context) pulumix.Output[*AutomationRulePropertyChangedConditionSupportedChangedType] {
	return pulumix.Output[*AutomationRulePropertyChangedConditionSupportedChangedType]{
		OutputState: in.ToAutomationRulePropertyChangedConditionSupportedChangedTypePtrOutputWithContext(ctx).OutputState,
	}
}

type AutomationRulePropertyChangedConditionSupportedPropertyType string

const (
	// Evaluate the condition on the incident severity
	AutomationRulePropertyChangedConditionSupportedPropertyTypeIncidentSeverity = AutomationRulePropertyChangedConditionSupportedPropertyType("IncidentSeverity")
	// Evaluate the condition on the incident status
	AutomationRulePropertyChangedConditionSupportedPropertyTypeIncidentStatus = AutomationRulePropertyChangedConditionSupportedPropertyType("IncidentStatus")
	// Evaluate the condition on the incident owner
	AutomationRulePropertyChangedConditionSupportedPropertyTypeIncidentOwner = AutomationRulePropertyChangedConditionSupportedPropertyType("IncidentOwner")
)

func (AutomationRulePropertyChangedConditionSupportedPropertyType) ElementType() reflect.Type {
	return reflect.TypeOf((*AutomationRulePropertyChangedConditionSupportedPropertyType)(nil)).Elem()
}

func (e AutomationRulePropertyChangedConditionSupportedPropertyType) ToAutomationRulePropertyChangedConditionSupportedPropertyTypeOutput() AutomationRulePropertyChangedConditionSupportedPropertyTypeOutput {
	return pulumi.ToOutput(e).(AutomationRulePropertyChangedConditionSupportedPropertyTypeOutput)
}

func (e AutomationRulePropertyChangedConditionSupportedPropertyType) ToAutomationRulePropertyChangedConditionSupportedPropertyTypeOutputWithContext(ctx context.Context) AutomationRulePropertyChangedConditionSupportedPropertyTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AutomationRulePropertyChangedConditionSupportedPropertyTypeOutput)
}

func (e AutomationRulePropertyChangedConditionSupportedPropertyType) ToAutomationRulePropertyChangedConditionSupportedPropertyTypePtrOutput() AutomationRulePropertyChangedConditionSupportedPropertyTypePtrOutput {
	return e.ToAutomationRulePropertyChangedConditionSupportedPropertyTypePtrOutputWithContext(context.Background())
}

func (e AutomationRulePropertyChangedConditionSupportedPropertyType) ToAutomationRulePropertyChangedConditionSupportedPropertyTypePtrOutputWithContext(ctx context.Context) AutomationRulePropertyChangedConditionSupportedPropertyTypePtrOutput {
	return AutomationRulePropertyChangedConditionSupportedPropertyType(e).ToAutomationRulePropertyChangedConditionSupportedPropertyTypeOutputWithContext(ctx).ToAutomationRulePropertyChangedConditionSupportedPropertyTypePtrOutputWithContext(ctx)
}

func (e AutomationRulePropertyChangedConditionSupportedPropertyType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AutomationRulePropertyChangedConditionSupportedPropertyType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AutomationRulePropertyChangedConditionSupportedPropertyType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AutomationRulePropertyChangedConditionSupportedPropertyType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AutomationRulePropertyChangedConditionSupportedPropertyTypeOutput struct{ *pulumi.OutputState }

func (AutomationRulePropertyChangedConditionSupportedPropertyTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutomationRulePropertyChangedConditionSupportedPropertyType)(nil)).Elem()
}

func (o AutomationRulePropertyChangedConditionSupportedPropertyTypeOutput) ToAutomationRulePropertyChangedConditionSupportedPropertyTypeOutput() AutomationRulePropertyChangedConditionSupportedPropertyTypeOutput {
	return o
}

func (o AutomationRulePropertyChangedConditionSupportedPropertyTypeOutput) ToAutomationRulePropertyChangedConditionSupportedPropertyTypeOutputWithContext(ctx context.Context) AutomationRulePropertyChangedConditionSupportedPropertyTypeOutput {
	return o
}

func (o AutomationRulePropertyChangedConditionSupportedPropertyTypeOutput) ToAutomationRulePropertyChangedConditionSupportedPropertyTypePtrOutput() AutomationRulePropertyChangedConditionSupportedPropertyTypePtrOutput {
	return o.ToAutomationRulePropertyChangedConditionSupportedPropertyTypePtrOutputWithContext(context.Background())
}

func (o AutomationRulePropertyChangedConditionSupportedPropertyTypeOutput) ToAutomationRulePropertyChangedConditionSupportedPropertyTypePtrOutputWithContext(ctx context.Context) AutomationRulePropertyChangedConditionSupportedPropertyTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AutomationRulePropertyChangedConditionSupportedPropertyType) *AutomationRulePropertyChangedConditionSupportedPropertyType {
		return &v
	}).(AutomationRulePropertyChangedConditionSupportedPropertyTypePtrOutput)
}

func (o AutomationRulePropertyChangedConditionSupportedPropertyTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AutomationRulePropertyChangedConditionSupportedPropertyTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AutomationRulePropertyChangedConditionSupportedPropertyType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AutomationRulePropertyChangedConditionSupportedPropertyTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AutomationRulePropertyChangedConditionSupportedPropertyTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AutomationRulePropertyChangedConditionSupportedPropertyType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AutomationRulePropertyChangedConditionSupportedPropertyTypePtrOutput struct{ *pulumi.OutputState }

func (AutomationRulePropertyChangedConditionSupportedPropertyTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AutomationRulePropertyChangedConditionSupportedPropertyType)(nil)).Elem()
}

func (o AutomationRulePropertyChangedConditionSupportedPropertyTypePtrOutput) ToAutomationRulePropertyChangedConditionSupportedPropertyTypePtrOutput() AutomationRulePropertyChangedConditionSupportedPropertyTypePtrOutput {
	return o
}

func (o AutomationRulePropertyChangedConditionSupportedPropertyTypePtrOutput) ToAutomationRulePropertyChangedConditionSupportedPropertyTypePtrOutputWithContext(ctx context.Context) AutomationRulePropertyChangedConditionSupportedPropertyTypePtrOutput {
	return o
}

func (o AutomationRulePropertyChangedConditionSupportedPropertyTypePtrOutput) Elem() AutomationRulePropertyChangedConditionSupportedPropertyTypeOutput {
	return o.ApplyT(func(v *AutomationRulePropertyChangedConditionSupportedPropertyType) AutomationRulePropertyChangedConditionSupportedPropertyType {
		if v != nil {
			return *v
		}
		var ret AutomationRulePropertyChangedConditionSupportedPropertyType
		return ret
	}).(AutomationRulePropertyChangedConditionSupportedPropertyTypeOutput)
}

func (o AutomationRulePropertyChangedConditionSupportedPropertyTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AutomationRulePropertyChangedConditionSupportedPropertyTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AutomationRulePropertyChangedConditionSupportedPropertyType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AutomationRulePropertyChangedConditionSupportedPropertyTypeInput is an input type that accepts values of the AutomationRulePropertyChangedConditionSupportedPropertyType enum
// A concrete instance of `AutomationRulePropertyChangedConditionSupportedPropertyTypeInput` can be one of the following:
//
//	AutomationRulePropertyChangedConditionSupportedPropertyTypeIncidentSeverity
//	AutomationRulePropertyChangedConditionSupportedPropertyTypeIncidentStatus
//	AutomationRulePropertyChangedConditionSupportedPropertyTypeIncidentOwner
type AutomationRulePropertyChangedConditionSupportedPropertyTypeInput interface {
	pulumi.Input

	ToAutomationRulePropertyChangedConditionSupportedPropertyTypeOutput() AutomationRulePropertyChangedConditionSupportedPropertyTypeOutput
	ToAutomationRulePropertyChangedConditionSupportedPropertyTypeOutputWithContext(context.Context) AutomationRulePropertyChangedConditionSupportedPropertyTypeOutput
}

var automationRulePropertyChangedConditionSupportedPropertyTypePtrType = reflect.TypeOf((**AutomationRulePropertyChangedConditionSupportedPropertyType)(nil)).Elem()

type AutomationRulePropertyChangedConditionSupportedPropertyTypePtrInput interface {
	pulumi.Input

	ToAutomationRulePropertyChangedConditionSupportedPropertyTypePtrOutput() AutomationRulePropertyChangedConditionSupportedPropertyTypePtrOutput
	ToAutomationRulePropertyChangedConditionSupportedPropertyTypePtrOutputWithContext(context.Context) AutomationRulePropertyChangedConditionSupportedPropertyTypePtrOutput
}

type automationRulePropertyChangedConditionSupportedPropertyTypePtr string

func AutomationRulePropertyChangedConditionSupportedPropertyTypePtr(v string) AutomationRulePropertyChangedConditionSupportedPropertyTypePtrInput {
	return (*automationRulePropertyChangedConditionSupportedPropertyTypePtr)(&v)
}

func (*automationRulePropertyChangedConditionSupportedPropertyTypePtr) ElementType() reflect.Type {
	return automationRulePropertyChangedConditionSupportedPropertyTypePtrType
}

func (in *automationRulePropertyChangedConditionSupportedPropertyTypePtr) ToAutomationRulePropertyChangedConditionSupportedPropertyTypePtrOutput() AutomationRulePropertyChangedConditionSupportedPropertyTypePtrOutput {
	return pulumi.ToOutput(in).(AutomationRulePropertyChangedConditionSupportedPropertyTypePtrOutput)
}

func (in *automationRulePropertyChangedConditionSupportedPropertyTypePtr) ToAutomationRulePropertyChangedConditionSupportedPropertyTypePtrOutputWithContext(ctx context.Context) AutomationRulePropertyChangedConditionSupportedPropertyTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AutomationRulePropertyChangedConditionSupportedPropertyTypePtrOutput)
}

func (in *automationRulePropertyChangedConditionSupportedPropertyTypePtr) ToOutput(ctx context.Context) pulumix.Output[*AutomationRulePropertyChangedConditionSupportedPropertyType] {
	return pulumix.Output[*AutomationRulePropertyChangedConditionSupportedPropertyType]{
		OutputState: in.ToAutomationRulePropertyChangedConditionSupportedPropertyTypePtrOutputWithContext(ctx).OutputState,
	}
}

type AutomationRulePropertyConditionSupportedOperator string

const (
	// Evaluates if the property equals at least one of the condition values
	AutomationRulePropertyConditionSupportedOperatorEquals = AutomationRulePropertyConditionSupportedOperator("Equals")
	// Evaluates if the property does not equal any of the condition values
	AutomationRulePropertyConditionSupportedOperatorNotEquals = AutomationRulePropertyConditionSupportedOperator("NotEquals")
	// Evaluates if the property contains at least one of the condition values
	AutomationRulePropertyConditionSupportedOperatorContains = AutomationRulePropertyConditionSupportedOperator("Contains")
	// Evaluates if the property does not contain any of the condition values
	AutomationRulePropertyConditionSupportedOperatorNotContains = AutomationRulePropertyConditionSupportedOperator("NotContains")
	// Evaluates if the property starts with any of the condition values
	AutomationRulePropertyConditionSupportedOperatorStartsWith = AutomationRulePropertyConditionSupportedOperator("StartsWith")
	// Evaluates if the property does not start with any of the condition values
	AutomationRulePropertyConditionSupportedOperatorNotStartsWith = AutomationRulePropertyConditionSupportedOperator("NotStartsWith")
	// Evaluates if the property ends with any of the condition values
	AutomationRulePropertyConditionSupportedOperatorEndsWith = AutomationRulePropertyConditionSupportedOperator("EndsWith")
	// Evaluates if the property does not end with any of the condition values
	AutomationRulePropertyConditionSupportedOperatorNotEndsWith = AutomationRulePropertyConditionSupportedOperator("NotEndsWith")
)

func (AutomationRulePropertyConditionSupportedOperator) ElementType() reflect.Type {
	return reflect.TypeOf((*AutomationRulePropertyConditionSupportedOperator)(nil)).Elem()
}

func (e AutomationRulePropertyConditionSupportedOperator) ToAutomationRulePropertyConditionSupportedOperatorOutput() AutomationRulePropertyConditionSupportedOperatorOutput {
	return pulumi.ToOutput(e).(AutomationRulePropertyConditionSupportedOperatorOutput)
}

func (e AutomationRulePropertyConditionSupportedOperator) ToAutomationRulePropertyConditionSupportedOperatorOutputWithContext(ctx context.Context) AutomationRulePropertyConditionSupportedOperatorOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AutomationRulePropertyConditionSupportedOperatorOutput)
}

func (e AutomationRulePropertyConditionSupportedOperator) ToAutomationRulePropertyConditionSupportedOperatorPtrOutput() AutomationRulePropertyConditionSupportedOperatorPtrOutput {
	return e.ToAutomationRulePropertyConditionSupportedOperatorPtrOutputWithContext(context.Background())
}

func (e AutomationRulePropertyConditionSupportedOperator) ToAutomationRulePropertyConditionSupportedOperatorPtrOutputWithContext(ctx context.Context) AutomationRulePropertyConditionSupportedOperatorPtrOutput {
	return AutomationRulePropertyConditionSupportedOperator(e).ToAutomationRulePropertyConditionSupportedOperatorOutputWithContext(ctx).ToAutomationRulePropertyConditionSupportedOperatorPtrOutputWithContext(ctx)
}

func (e AutomationRulePropertyConditionSupportedOperator) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AutomationRulePropertyConditionSupportedOperator) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AutomationRulePropertyConditionSupportedOperator) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AutomationRulePropertyConditionSupportedOperator) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AutomationRulePropertyConditionSupportedOperatorOutput struct{ *pulumi.OutputState }

func (AutomationRulePropertyConditionSupportedOperatorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutomationRulePropertyConditionSupportedOperator)(nil)).Elem()
}

func (o AutomationRulePropertyConditionSupportedOperatorOutput) ToAutomationRulePropertyConditionSupportedOperatorOutput() AutomationRulePropertyConditionSupportedOperatorOutput {
	return o
}

func (o AutomationRulePropertyConditionSupportedOperatorOutput) ToAutomationRulePropertyConditionSupportedOperatorOutputWithContext(ctx context.Context) AutomationRulePropertyConditionSupportedOperatorOutput {
	return o
}

func (o AutomationRulePropertyConditionSupportedOperatorOutput) ToAutomationRulePropertyConditionSupportedOperatorPtrOutput() AutomationRulePropertyConditionSupportedOperatorPtrOutput {
	return o.ToAutomationRulePropertyConditionSupportedOperatorPtrOutputWithContext(context.Background())
}

func (o AutomationRulePropertyConditionSupportedOperatorOutput) ToAutomationRulePropertyConditionSupportedOperatorPtrOutputWithContext(ctx context.Context) AutomationRulePropertyConditionSupportedOperatorPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AutomationRulePropertyConditionSupportedOperator) *AutomationRulePropertyConditionSupportedOperator {
		return &v
	}).(AutomationRulePropertyConditionSupportedOperatorPtrOutput)
}

func (o AutomationRulePropertyConditionSupportedOperatorOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AutomationRulePropertyConditionSupportedOperatorOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AutomationRulePropertyConditionSupportedOperator) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AutomationRulePropertyConditionSupportedOperatorOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AutomationRulePropertyConditionSupportedOperatorOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AutomationRulePropertyConditionSupportedOperator) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AutomationRulePropertyConditionSupportedOperatorPtrOutput struct{ *pulumi.OutputState }

func (AutomationRulePropertyConditionSupportedOperatorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AutomationRulePropertyConditionSupportedOperator)(nil)).Elem()
}

func (o AutomationRulePropertyConditionSupportedOperatorPtrOutput) ToAutomationRulePropertyConditionSupportedOperatorPtrOutput() AutomationRulePropertyConditionSupportedOperatorPtrOutput {
	return o
}

func (o AutomationRulePropertyConditionSupportedOperatorPtrOutput) ToAutomationRulePropertyConditionSupportedOperatorPtrOutputWithContext(ctx context.Context) AutomationRulePropertyConditionSupportedOperatorPtrOutput {
	return o
}

func (o AutomationRulePropertyConditionSupportedOperatorPtrOutput) Elem() AutomationRulePropertyConditionSupportedOperatorOutput {
	return o.ApplyT(func(v *AutomationRulePropertyConditionSupportedOperator) AutomationRulePropertyConditionSupportedOperator {
		if v != nil {
			return *v
		}
		var ret AutomationRulePropertyConditionSupportedOperator
		return ret
	}).(AutomationRulePropertyConditionSupportedOperatorOutput)
}

func (o AutomationRulePropertyConditionSupportedOperatorPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AutomationRulePropertyConditionSupportedOperatorPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AutomationRulePropertyConditionSupportedOperator) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AutomationRulePropertyConditionSupportedOperatorInput is an input type that accepts values of the AutomationRulePropertyConditionSupportedOperator enum
// A concrete instance of `AutomationRulePropertyConditionSupportedOperatorInput` can be one of the following:
//
//	AutomationRulePropertyConditionSupportedOperatorEquals
//	AutomationRulePropertyConditionSupportedOperatorNotEquals
//	AutomationRulePropertyConditionSupportedOperatorContains
//	AutomationRulePropertyConditionSupportedOperatorNotContains
//	AutomationRulePropertyConditionSupportedOperatorStartsWith
//	AutomationRulePropertyConditionSupportedOperatorNotStartsWith
//	AutomationRulePropertyConditionSupportedOperatorEndsWith
//	AutomationRulePropertyConditionSupportedOperatorNotEndsWith
type AutomationRulePropertyConditionSupportedOperatorInput interface {
	pulumi.Input

	ToAutomationRulePropertyConditionSupportedOperatorOutput() AutomationRulePropertyConditionSupportedOperatorOutput
	ToAutomationRulePropertyConditionSupportedOperatorOutputWithContext(context.Context) AutomationRulePropertyConditionSupportedOperatorOutput
}

var automationRulePropertyConditionSupportedOperatorPtrType = reflect.TypeOf((**AutomationRulePropertyConditionSupportedOperator)(nil)).Elem()

type AutomationRulePropertyConditionSupportedOperatorPtrInput interface {
	pulumi.Input

	ToAutomationRulePropertyConditionSupportedOperatorPtrOutput() AutomationRulePropertyConditionSupportedOperatorPtrOutput
	ToAutomationRulePropertyConditionSupportedOperatorPtrOutputWithContext(context.Context) AutomationRulePropertyConditionSupportedOperatorPtrOutput
}

type automationRulePropertyConditionSupportedOperatorPtr string

func AutomationRulePropertyConditionSupportedOperatorPtr(v string) AutomationRulePropertyConditionSupportedOperatorPtrInput {
	return (*automationRulePropertyConditionSupportedOperatorPtr)(&v)
}

func (*automationRulePropertyConditionSupportedOperatorPtr) ElementType() reflect.Type {
	return automationRulePropertyConditionSupportedOperatorPtrType
}

func (in *automationRulePropertyConditionSupportedOperatorPtr) ToAutomationRulePropertyConditionSupportedOperatorPtrOutput() AutomationRulePropertyConditionSupportedOperatorPtrOutput {
	return pulumi.ToOutput(in).(AutomationRulePropertyConditionSupportedOperatorPtrOutput)
}

func (in *automationRulePropertyConditionSupportedOperatorPtr) ToAutomationRulePropertyConditionSupportedOperatorPtrOutputWithContext(ctx context.Context) AutomationRulePropertyConditionSupportedOperatorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AutomationRulePropertyConditionSupportedOperatorPtrOutput)
}

func (in *automationRulePropertyConditionSupportedOperatorPtr) ToOutput(ctx context.Context) pulumix.Output[*AutomationRulePropertyConditionSupportedOperator] {
	return pulumix.Output[*AutomationRulePropertyConditionSupportedOperator]{
		OutputState: in.ToAutomationRulePropertyConditionSupportedOperatorPtrOutputWithContext(ctx).OutputState,
	}
}

// The property to evaluate in an automation rule property condition.
type AutomationRulePropertyConditionSupportedProperty string

const (
	// The title of the incident
	AutomationRulePropertyConditionSupportedPropertyIncidentTitle = AutomationRulePropertyConditionSupportedProperty("IncidentTitle")
	// The description of the incident
	AutomationRulePropertyConditionSupportedPropertyIncidentDescription = AutomationRulePropertyConditionSupportedProperty("IncidentDescription")
	// The severity of the incident
	AutomationRulePropertyConditionSupportedPropertyIncidentSeverity = AutomationRulePropertyConditionSupportedProperty("IncidentSeverity")
	// The status of the incident
	AutomationRulePropertyConditionSupportedPropertyIncidentStatus = AutomationRulePropertyConditionSupportedProperty("IncidentStatus")
	// The related Analytic rule ids of the incident
	AutomationRulePropertyConditionSupportedPropertyIncidentRelatedAnalyticRuleIds = AutomationRulePropertyConditionSupportedProperty("IncidentRelatedAnalyticRuleIds")
	// The tactics of the incident
	AutomationRulePropertyConditionSupportedPropertyIncidentTactics = AutomationRulePropertyConditionSupportedProperty("IncidentTactics")
	// The labels of the incident
	AutomationRulePropertyConditionSupportedPropertyIncidentLabel = AutomationRulePropertyConditionSupportedProperty("IncidentLabel")
	// The provider name of the incident
	AutomationRulePropertyConditionSupportedPropertyIncidentProviderName = AutomationRulePropertyConditionSupportedProperty("IncidentProviderName")
	// The update source of the incident
	AutomationRulePropertyConditionSupportedPropertyIncidentUpdatedBySource = AutomationRulePropertyConditionSupportedProperty("IncidentUpdatedBySource")
	// The account Azure Active Directory tenant id
	AutomationRulePropertyConditionSupportedPropertyAccountAadTenantId = AutomationRulePropertyConditionSupportedProperty("AccountAadTenantId")
	// The account Azure Active Directory user id
	AutomationRulePropertyConditionSupportedPropertyAccountAadUserId = AutomationRulePropertyConditionSupportedProperty("AccountAadUserId")
	// The account name
	AutomationRulePropertyConditionSupportedPropertyAccountName = AutomationRulePropertyConditionSupportedProperty("AccountName")
	// The account NetBIOS domain name
	AutomationRulePropertyConditionSupportedPropertyAccountNTDomain = AutomationRulePropertyConditionSupportedProperty("AccountNTDomain")
	// The account Azure Active Directory Passport User ID
	AutomationRulePropertyConditionSupportedPropertyAccountPUID = AutomationRulePropertyConditionSupportedProperty("AccountPUID")
	// The account security identifier
	AutomationRulePropertyConditionSupportedPropertyAccountSid = AutomationRulePropertyConditionSupportedProperty("AccountSid")
	// The account unique identifier
	AutomationRulePropertyConditionSupportedPropertyAccountObjectGuid = AutomationRulePropertyConditionSupportedProperty("AccountObjectGuid")
	// The account user principal name suffix
	AutomationRulePropertyConditionSupportedPropertyAccountUPNSuffix = AutomationRulePropertyConditionSupportedProperty("AccountUPNSuffix")
	// The name of the product of the alert
	AutomationRulePropertyConditionSupportedPropertyAlertProductNames = AutomationRulePropertyConditionSupportedProperty("AlertProductNames")
	// The analytic rule ids of the alert
	AutomationRulePropertyConditionSupportedPropertyAlertAnalyticRuleIds = AutomationRulePropertyConditionSupportedProperty("AlertAnalyticRuleIds")
	// The Azure resource id
	AutomationRulePropertyConditionSupportedPropertyAzureResourceResourceId = AutomationRulePropertyConditionSupportedProperty("AzureResourceResourceId")
	// The Azure resource subscription id
	AutomationRulePropertyConditionSupportedPropertyAzureResourceSubscriptionId = AutomationRulePropertyConditionSupportedProperty("AzureResourceSubscriptionId")
	// The cloud application identifier
	AutomationRulePropertyConditionSupportedPropertyCloudApplicationAppId = AutomationRulePropertyConditionSupportedProperty("CloudApplicationAppId")
	// The cloud application name
	AutomationRulePropertyConditionSupportedPropertyCloudApplicationAppName = AutomationRulePropertyConditionSupportedProperty("CloudApplicationAppName")
	// The dns record domain name
	AutomationRulePropertyConditionSupportedPropertyDNSDomainName = AutomationRulePropertyConditionSupportedProperty("DNSDomainName")
	// The file directory full path
	AutomationRulePropertyConditionSupportedPropertyFileDirectory = AutomationRulePropertyConditionSupportedProperty("FileDirectory")
	// The file name without path
	AutomationRulePropertyConditionSupportedPropertyFileName = AutomationRulePropertyConditionSupportedProperty("FileName")
	// The file hash value
	AutomationRulePropertyConditionSupportedPropertyFileHashValue = AutomationRulePropertyConditionSupportedProperty("FileHashValue")
	// The host Azure resource id
	AutomationRulePropertyConditionSupportedPropertyHostAzureID = AutomationRulePropertyConditionSupportedProperty("HostAzureID")
	// The host name without domain
	AutomationRulePropertyConditionSupportedPropertyHostName = AutomationRulePropertyConditionSupportedProperty("HostName")
	// The host NetBIOS name
	AutomationRulePropertyConditionSupportedPropertyHostNetBiosName = AutomationRulePropertyConditionSupportedProperty("HostNetBiosName")
	// The host NT domain
	AutomationRulePropertyConditionSupportedPropertyHostNTDomain = AutomationRulePropertyConditionSupportedProperty("HostNTDomain")
	// The host operating system
	AutomationRulePropertyConditionSupportedPropertyHostOSVersion = AutomationRulePropertyConditionSupportedProperty("HostOSVersion")
	// "The IoT device id
	AutomationRulePropertyConditionSupportedPropertyIoTDeviceId = AutomationRulePropertyConditionSupportedProperty("IoTDeviceId")
	// The IoT device name
	AutomationRulePropertyConditionSupportedPropertyIoTDeviceName = AutomationRulePropertyConditionSupportedProperty("IoTDeviceName")
	// The IoT device type
	AutomationRulePropertyConditionSupportedPropertyIoTDeviceType = AutomationRulePropertyConditionSupportedProperty("IoTDeviceType")
	// The IoT device vendor
	AutomationRulePropertyConditionSupportedPropertyIoTDeviceVendor = AutomationRulePropertyConditionSupportedProperty("IoTDeviceVendor")
	// The IoT device model
	AutomationRulePropertyConditionSupportedPropertyIoTDeviceModel = AutomationRulePropertyConditionSupportedProperty("IoTDeviceModel")
	// The IoT device operating system
	AutomationRulePropertyConditionSupportedPropertyIoTDeviceOperatingSystem = AutomationRulePropertyConditionSupportedProperty("IoTDeviceOperatingSystem")
	// The IP address
	AutomationRulePropertyConditionSupportedPropertyIPAddress = AutomationRulePropertyConditionSupportedProperty("IPAddress")
	// The mailbox display name
	AutomationRulePropertyConditionSupportedPropertyMailboxDisplayName = AutomationRulePropertyConditionSupportedProperty("MailboxDisplayName")
	// The mailbox primary address
	AutomationRulePropertyConditionSupportedPropertyMailboxPrimaryAddress = AutomationRulePropertyConditionSupportedProperty("MailboxPrimaryAddress")
	// The mailbox user principal name
	AutomationRulePropertyConditionSupportedPropertyMailboxUPN = AutomationRulePropertyConditionSupportedProperty("MailboxUPN")
	// The mail message delivery action
	AutomationRulePropertyConditionSupportedPropertyMailMessageDeliveryAction = AutomationRulePropertyConditionSupportedProperty("MailMessageDeliveryAction")
	// The mail message delivery location
	AutomationRulePropertyConditionSupportedPropertyMailMessageDeliveryLocation = AutomationRulePropertyConditionSupportedProperty("MailMessageDeliveryLocation")
	// The mail message recipient
	AutomationRulePropertyConditionSupportedPropertyMailMessageRecipient = AutomationRulePropertyConditionSupportedProperty("MailMessageRecipient")
	// The mail message sender IP address
	AutomationRulePropertyConditionSupportedPropertyMailMessageSenderIP = AutomationRulePropertyConditionSupportedProperty("MailMessageSenderIP")
	// The mail message subject
	AutomationRulePropertyConditionSupportedPropertyMailMessageSubject = AutomationRulePropertyConditionSupportedProperty("MailMessageSubject")
	// The mail message P1 sender
	AutomationRulePropertyConditionSupportedPropertyMailMessageP1Sender = AutomationRulePropertyConditionSupportedProperty("MailMessageP1Sender")
	// The mail message P2 sender
	AutomationRulePropertyConditionSupportedPropertyMailMessageP2Sender = AutomationRulePropertyConditionSupportedProperty("MailMessageP2Sender")
	// The malware category
	AutomationRulePropertyConditionSupportedPropertyMalwareCategory = AutomationRulePropertyConditionSupportedProperty("MalwareCategory")
	// The malware name
	AutomationRulePropertyConditionSupportedPropertyMalwareName = AutomationRulePropertyConditionSupportedProperty("MalwareName")
	// The process execution command line
	AutomationRulePropertyConditionSupportedPropertyProcessCommandLine = AutomationRulePropertyConditionSupportedProperty("ProcessCommandLine")
	// The process id
	AutomationRulePropertyConditionSupportedPropertyProcessId = AutomationRulePropertyConditionSupportedProperty("ProcessId")
	// The registry key path
	AutomationRulePropertyConditionSupportedPropertyRegistryKey = AutomationRulePropertyConditionSupportedProperty("RegistryKey")
	// The registry key value in string formatted representation
	AutomationRulePropertyConditionSupportedPropertyRegistryValueData = AutomationRulePropertyConditionSupportedProperty("RegistryValueData")
	// The url
	AutomationRulePropertyConditionSupportedPropertyUrl = AutomationRulePropertyConditionSupportedProperty("Url")
)

func (AutomationRulePropertyConditionSupportedProperty) ElementType() reflect.Type {
	return reflect.TypeOf((*AutomationRulePropertyConditionSupportedProperty)(nil)).Elem()
}

func (e AutomationRulePropertyConditionSupportedProperty) ToAutomationRulePropertyConditionSupportedPropertyOutput() AutomationRulePropertyConditionSupportedPropertyOutput {
	return pulumi.ToOutput(e).(AutomationRulePropertyConditionSupportedPropertyOutput)
}

func (e AutomationRulePropertyConditionSupportedProperty) ToAutomationRulePropertyConditionSupportedPropertyOutputWithContext(ctx context.Context) AutomationRulePropertyConditionSupportedPropertyOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AutomationRulePropertyConditionSupportedPropertyOutput)
}

func (e AutomationRulePropertyConditionSupportedProperty) ToAutomationRulePropertyConditionSupportedPropertyPtrOutput() AutomationRulePropertyConditionSupportedPropertyPtrOutput {
	return e.ToAutomationRulePropertyConditionSupportedPropertyPtrOutputWithContext(context.Background())
}

func (e AutomationRulePropertyConditionSupportedProperty) ToAutomationRulePropertyConditionSupportedPropertyPtrOutputWithContext(ctx context.Context) AutomationRulePropertyConditionSupportedPropertyPtrOutput {
	return AutomationRulePropertyConditionSupportedProperty(e).ToAutomationRulePropertyConditionSupportedPropertyOutputWithContext(ctx).ToAutomationRulePropertyConditionSupportedPropertyPtrOutputWithContext(ctx)
}

func (e AutomationRulePropertyConditionSupportedProperty) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AutomationRulePropertyConditionSupportedProperty) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AutomationRulePropertyConditionSupportedProperty) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AutomationRulePropertyConditionSupportedProperty) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AutomationRulePropertyConditionSupportedPropertyOutput struct{ *pulumi.OutputState }

func (AutomationRulePropertyConditionSupportedPropertyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutomationRulePropertyConditionSupportedProperty)(nil)).Elem()
}

func (o AutomationRulePropertyConditionSupportedPropertyOutput) ToAutomationRulePropertyConditionSupportedPropertyOutput() AutomationRulePropertyConditionSupportedPropertyOutput {
	return o
}

func (o AutomationRulePropertyConditionSupportedPropertyOutput) ToAutomationRulePropertyConditionSupportedPropertyOutputWithContext(ctx context.Context) AutomationRulePropertyConditionSupportedPropertyOutput {
	return o
}

func (o AutomationRulePropertyConditionSupportedPropertyOutput) ToAutomationRulePropertyConditionSupportedPropertyPtrOutput() AutomationRulePropertyConditionSupportedPropertyPtrOutput {
	return o.ToAutomationRulePropertyConditionSupportedPropertyPtrOutputWithContext(context.Background())
}

func (o AutomationRulePropertyConditionSupportedPropertyOutput) ToAutomationRulePropertyConditionSupportedPropertyPtrOutputWithContext(ctx context.Context) AutomationRulePropertyConditionSupportedPropertyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AutomationRulePropertyConditionSupportedProperty) *AutomationRulePropertyConditionSupportedProperty {
		return &v
	}).(AutomationRulePropertyConditionSupportedPropertyPtrOutput)
}

func (o AutomationRulePropertyConditionSupportedPropertyOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AutomationRulePropertyConditionSupportedPropertyOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AutomationRulePropertyConditionSupportedProperty) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AutomationRulePropertyConditionSupportedPropertyOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AutomationRulePropertyConditionSupportedPropertyOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AutomationRulePropertyConditionSupportedProperty) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AutomationRulePropertyConditionSupportedPropertyPtrOutput struct{ *pulumi.OutputState }

func (AutomationRulePropertyConditionSupportedPropertyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AutomationRulePropertyConditionSupportedProperty)(nil)).Elem()
}

func (o AutomationRulePropertyConditionSupportedPropertyPtrOutput) ToAutomationRulePropertyConditionSupportedPropertyPtrOutput() AutomationRulePropertyConditionSupportedPropertyPtrOutput {
	return o
}

func (o AutomationRulePropertyConditionSupportedPropertyPtrOutput) ToAutomationRulePropertyConditionSupportedPropertyPtrOutputWithContext(ctx context.Context) AutomationRulePropertyConditionSupportedPropertyPtrOutput {
	return o
}

func (o AutomationRulePropertyConditionSupportedPropertyPtrOutput) Elem() AutomationRulePropertyConditionSupportedPropertyOutput {
	return o.ApplyT(func(v *AutomationRulePropertyConditionSupportedProperty) AutomationRulePropertyConditionSupportedProperty {
		if v != nil {
			return *v
		}
		var ret AutomationRulePropertyConditionSupportedProperty
		return ret
	}).(AutomationRulePropertyConditionSupportedPropertyOutput)
}

func (o AutomationRulePropertyConditionSupportedPropertyPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AutomationRulePropertyConditionSupportedPropertyPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AutomationRulePropertyConditionSupportedProperty) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AutomationRulePropertyConditionSupportedPropertyInput is an input type that accepts values of the AutomationRulePropertyConditionSupportedProperty enum
// A concrete instance of `AutomationRulePropertyConditionSupportedPropertyInput` can be one of the following:
//
//	AutomationRulePropertyConditionSupportedPropertyIncidentTitle
//	AutomationRulePropertyConditionSupportedPropertyIncidentDescription
//	AutomationRulePropertyConditionSupportedPropertyIncidentSeverity
//	AutomationRulePropertyConditionSupportedPropertyIncidentStatus
//	AutomationRulePropertyConditionSupportedPropertyIncidentRelatedAnalyticRuleIds
//	AutomationRulePropertyConditionSupportedPropertyIncidentTactics
//	AutomationRulePropertyConditionSupportedPropertyIncidentLabel
//	AutomationRulePropertyConditionSupportedPropertyIncidentProviderName
//	AutomationRulePropertyConditionSupportedPropertyIncidentUpdatedBySource
//	AutomationRulePropertyConditionSupportedPropertyAccountAadTenantId
//	AutomationRulePropertyConditionSupportedPropertyAccountAadUserId
//	AutomationRulePropertyConditionSupportedPropertyAccountName
//	AutomationRulePropertyConditionSupportedPropertyAccountNTDomain
//	AutomationRulePropertyConditionSupportedPropertyAccountPUID
//	AutomationRulePropertyConditionSupportedPropertyAccountSid
//	AutomationRulePropertyConditionSupportedPropertyAccountObjectGuid
//	AutomationRulePropertyConditionSupportedPropertyAccountUPNSuffix
//	AutomationRulePropertyConditionSupportedPropertyAlertProductNames
//	AutomationRulePropertyConditionSupportedPropertyAlertAnalyticRuleIds
//	AutomationRulePropertyConditionSupportedPropertyAzureResourceResourceId
//	AutomationRulePropertyConditionSupportedPropertyAzureResourceSubscriptionId
//	AutomationRulePropertyConditionSupportedPropertyCloudApplicationAppId
//	AutomationRulePropertyConditionSupportedPropertyCloudApplicationAppName
//	AutomationRulePropertyConditionSupportedPropertyDNSDomainName
//	AutomationRulePropertyConditionSupportedPropertyFileDirectory
//	AutomationRulePropertyConditionSupportedPropertyFileName
//	AutomationRulePropertyConditionSupportedPropertyFileHashValue
//	AutomationRulePropertyConditionSupportedPropertyHostAzureID
//	AutomationRulePropertyConditionSupportedPropertyHostName
//	AutomationRulePropertyConditionSupportedPropertyHostNetBiosName
//	AutomationRulePropertyConditionSupportedPropertyHostNTDomain
//	AutomationRulePropertyConditionSupportedPropertyHostOSVersion
//	AutomationRulePropertyConditionSupportedPropertyIoTDeviceId
//	AutomationRulePropertyConditionSupportedPropertyIoTDeviceName
//	AutomationRulePropertyConditionSupportedPropertyIoTDeviceType
//	AutomationRulePropertyConditionSupportedPropertyIoTDeviceVendor
//	AutomationRulePropertyConditionSupportedPropertyIoTDeviceModel
//	AutomationRulePropertyConditionSupportedPropertyIoTDeviceOperatingSystem
//	AutomationRulePropertyConditionSupportedPropertyIPAddress
//	AutomationRulePropertyConditionSupportedPropertyMailboxDisplayName
//	AutomationRulePropertyConditionSupportedPropertyMailboxPrimaryAddress
//	AutomationRulePropertyConditionSupportedPropertyMailboxUPN
//	AutomationRulePropertyConditionSupportedPropertyMailMessageDeliveryAction
//	AutomationRulePropertyConditionSupportedPropertyMailMessageDeliveryLocation
//	AutomationRulePropertyConditionSupportedPropertyMailMessageRecipient
//	AutomationRulePropertyConditionSupportedPropertyMailMessageSenderIP
//	AutomationRulePropertyConditionSupportedPropertyMailMessageSubject
//	AutomationRulePropertyConditionSupportedPropertyMailMessageP1Sender
//	AutomationRulePropertyConditionSupportedPropertyMailMessageP2Sender
//	AutomationRulePropertyConditionSupportedPropertyMalwareCategory
//	AutomationRulePropertyConditionSupportedPropertyMalwareName
//	AutomationRulePropertyConditionSupportedPropertyProcessCommandLine
//	AutomationRulePropertyConditionSupportedPropertyProcessId
//	AutomationRulePropertyConditionSupportedPropertyRegistryKey
//	AutomationRulePropertyConditionSupportedPropertyRegistryValueData
//	AutomationRulePropertyConditionSupportedPropertyUrl
type AutomationRulePropertyConditionSupportedPropertyInput interface {
	pulumi.Input

	ToAutomationRulePropertyConditionSupportedPropertyOutput() AutomationRulePropertyConditionSupportedPropertyOutput
	ToAutomationRulePropertyConditionSupportedPropertyOutputWithContext(context.Context) AutomationRulePropertyConditionSupportedPropertyOutput
}

var automationRulePropertyConditionSupportedPropertyPtrType = reflect.TypeOf((**AutomationRulePropertyConditionSupportedProperty)(nil)).Elem()

type AutomationRulePropertyConditionSupportedPropertyPtrInput interface {
	pulumi.Input

	ToAutomationRulePropertyConditionSupportedPropertyPtrOutput() AutomationRulePropertyConditionSupportedPropertyPtrOutput
	ToAutomationRulePropertyConditionSupportedPropertyPtrOutputWithContext(context.Context) AutomationRulePropertyConditionSupportedPropertyPtrOutput
}

type automationRulePropertyConditionSupportedPropertyPtr string

func AutomationRulePropertyConditionSupportedPropertyPtr(v string) AutomationRulePropertyConditionSupportedPropertyPtrInput {
	return (*automationRulePropertyConditionSupportedPropertyPtr)(&v)
}

func (*automationRulePropertyConditionSupportedPropertyPtr) ElementType() reflect.Type {
	return automationRulePropertyConditionSupportedPropertyPtrType
}

func (in *automationRulePropertyConditionSupportedPropertyPtr) ToAutomationRulePropertyConditionSupportedPropertyPtrOutput() AutomationRulePropertyConditionSupportedPropertyPtrOutput {
	return pulumi.ToOutput(in).(AutomationRulePropertyConditionSupportedPropertyPtrOutput)
}

func (in *automationRulePropertyConditionSupportedPropertyPtr) ToAutomationRulePropertyConditionSupportedPropertyPtrOutputWithContext(ctx context.Context) AutomationRulePropertyConditionSupportedPropertyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AutomationRulePropertyConditionSupportedPropertyPtrOutput)
}

func (in *automationRulePropertyConditionSupportedPropertyPtr) ToOutput(ctx context.Context) pulumix.Output[*AutomationRulePropertyConditionSupportedProperty] {
	return pulumix.Output[*AutomationRulePropertyConditionSupportedProperty]{
		OutputState: in.ToAutomationRulePropertyConditionSupportedPropertyPtrOutputWithContext(ctx).OutputState,
	}
}

type ConditionType string

const (
	// Evaluate an object property value
	ConditionTypeProperty = ConditionType("Property")
	// Evaluate an object property changed value
	ConditionTypePropertyChanged = ConditionType("PropertyChanged")
	// Evaluate an object array property changed value
	ConditionTypePropertyArrayChanged = ConditionType("PropertyArrayChanged")
)

// The data connector kind
type DataConnectorKind string

const (
	DataConnectorKindAzureActiveDirectory                      = DataConnectorKind("AzureActiveDirectory")
	DataConnectorKindAzureSecurityCenter                       = DataConnectorKind("AzureSecurityCenter")
	DataConnectorKindMicrosoftCloudAppSecurity                 = DataConnectorKind("MicrosoftCloudAppSecurity")
	DataConnectorKindThreatIntelligence                        = DataConnectorKind("ThreatIntelligence")
	DataConnectorKindOffice365                                 = DataConnectorKind("Office365")
	DataConnectorKindAmazonWebServicesCloudTrail               = DataConnectorKind("AmazonWebServicesCloudTrail")
	DataConnectorKindAzureAdvancedThreatProtection             = DataConnectorKind("AzureAdvancedThreatProtection")
	DataConnectorKindMicrosoftDefenderAdvancedThreatProtection = DataConnectorKind("MicrosoftDefenderAdvancedThreatProtection")
)

// Describe whether this data type connection is enabled or not.
type DataTypeState string

const (
	DataTypeStateEnabled  = DataTypeState("Enabled")
	DataTypeStateDisabled = DataTypeState("Disabled")
)

func (DataTypeState) ElementType() reflect.Type {
	return reflect.TypeOf((*DataTypeState)(nil)).Elem()
}

func (e DataTypeState) ToDataTypeStateOutput() DataTypeStateOutput {
	return pulumi.ToOutput(e).(DataTypeStateOutput)
}

func (e DataTypeState) ToDataTypeStateOutputWithContext(ctx context.Context) DataTypeStateOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DataTypeStateOutput)
}

func (e DataTypeState) ToDataTypeStatePtrOutput() DataTypeStatePtrOutput {
	return e.ToDataTypeStatePtrOutputWithContext(context.Background())
}

func (e DataTypeState) ToDataTypeStatePtrOutputWithContext(ctx context.Context) DataTypeStatePtrOutput {
	return DataTypeState(e).ToDataTypeStateOutputWithContext(ctx).ToDataTypeStatePtrOutputWithContext(ctx)
}

func (e DataTypeState) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DataTypeState) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DataTypeState) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DataTypeState) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DataTypeStateOutput struct{ *pulumi.OutputState }

func (DataTypeStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataTypeState)(nil)).Elem()
}

func (o DataTypeStateOutput) ToDataTypeStateOutput() DataTypeStateOutput {
	return o
}

func (o DataTypeStateOutput) ToDataTypeStateOutputWithContext(ctx context.Context) DataTypeStateOutput {
	return o
}

func (o DataTypeStateOutput) ToDataTypeStatePtrOutput() DataTypeStatePtrOutput {
	return o.ToDataTypeStatePtrOutputWithContext(context.Background())
}

func (o DataTypeStateOutput) ToDataTypeStatePtrOutputWithContext(ctx context.Context) DataTypeStatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataTypeState) *DataTypeState {
		return &v
	}).(DataTypeStatePtrOutput)
}

func (o DataTypeStateOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DataTypeStateOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DataTypeState) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DataTypeStateOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DataTypeStateOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DataTypeState) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DataTypeStatePtrOutput struct{ *pulumi.OutputState }

func (DataTypeStatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataTypeState)(nil)).Elem()
}

func (o DataTypeStatePtrOutput) ToDataTypeStatePtrOutput() DataTypeStatePtrOutput {
	return o
}

func (o DataTypeStatePtrOutput) ToDataTypeStatePtrOutputWithContext(ctx context.Context) DataTypeStatePtrOutput {
	return o
}

func (o DataTypeStatePtrOutput) Elem() DataTypeStateOutput {
	return o.ApplyT(func(v *DataTypeState) DataTypeState {
		if v != nil {
			return *v
		}
		var ret DataTypeState
		return ret
	}).(DataTypeStateOutput)
}

func (o DataTypeStatePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DataTypeStatePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DataTypeState) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DataTypeStateInput is an input type that accepts values of the DataTypeState enum
// A concrete instance of `DataTypeStateInput` can be one of the following:
//
//	DataTypeStateEnabled
//	DataTypeStateDisabled
type DataTypeStateInput interface {
	pulumi.Input

	ToDataTypeStateOutput() DataTypeStateOutput
	ToDataTypeStateOutputWithContext(context.Context) DataTypeStateOutput
}

var dataTypeStatePtrType = reflect.TypeOf((**DataTypeState)(nil)).Elem()

type DataTypeStatePtrInput interface {
	pulumi.Input

	ToDataTypeStatePtrOutput() DataTypeStatePtrOutput
	ToDataTypeStatePtrOutputWithContext(context.Context) DataTypeStatePtrOutput
}

type dataTypeStatePtr string

func DataTypeStatePtr(v string) DataTypeStatePtrInput {
	return (*dataTypeStatePtr)(&v)
}

func (*dataTypeStatePtr) ElementType() reflect.Type {
	return dataTypeStatePtrType
}

func (in *dataTypeStatePtr) ToDataTypeStatePtrOutput() DataTypeStatePtrOutput {
	return pulumi.ToOutput(in).(DataTypeStatePtrOutput)
}

func (in *dataTypeStatePtr) ToDataTypeStatePtrOutputWithContext(ctx context.Context) DataTypeStatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DataTypeStatePtrOutput)
}

func (in *dataTypeStatePtr) ToOutput(ctx context.Context) pulumix.Output[*DataTypeState] {
	return pulumix.Output[*DataTypeState]{
		OutputState: in.ToDataTypeStatePtrOutputWithContext(ctx).OutputState,
	}
}

// The reason the incident was closed
type IncidentClassification string

const (
	// Incident classification was undetermined
	IncidentClassificationUndetermined = IncidentClassification("Undetermined")
	// Incident was true positive
	IncidentClassificationTruePositive = IncidentClassification("TruePositive")
	// Incident was benign positive
	IncidentClassificationBenignPositive = IncidentClassification("BenignPositive")
	// Incident was false positive
	IncidentClassificationFalsePositive = IncidentClassification("FalsePositive")
)

func (IncidentClassification) ElementType() reflect.Type {
	return reflect.TypeOf((*IncidentClassification)(nil)).Elem()
}

func (e IncidentClassification) ToIncidentClassificationOutput() IncidentClassificationOutput {
	return pulumi.ToOutput(e).(IncidentClassificationOutput)
}

func (e IncidentClassification) ToIncidentClassificationOutputWithContext(ctx context.Context) IncidentClassificationOutput {
	return pulumi.ToOutputWithContext(ctx, e).(IncidentClassificationOutput)
}

func (e IncidentClassification) ToIncidentClassificationPtrOutput() IncidentClassificationPtrOutput {
	return e.ToIncidentClassificationPtrOutputWithContext(context.Background())
}

func (e IncidentClassification) ToIncidentClassificationPtrOutputWithContext(ctx context.Context) IncidentClassificationPtrOutput {
	return IncidentClassification(e).ToIncidentClassificationOutputWithContext(ctx).ToIncidentClassificationPtrOutputWithContext(ctx)
}

func (e IncidentClassification) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e IncidentClassification) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e IncidentClassification) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e IncidentClassification) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type IncidentClassificationOutput struct{ *pulumi.OutputState }

func (IncidentClassificationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IncidentClassification)(nil)).Elem()
}

func (o IncidentClassificationOutput) ToIncidentClassificationOutput() IncidentClassificationOutput {
	return o
}

func (o IncidentClassificationOutput) ToIncidentClassificationOutputWithContext(ctx context.Context) IncidentClassificationOutput {
	return o
}

func (o IncidentClassificationOutput) ToIncidentClassificationPtrOutput() IncidentClassificationPtrOutput {
	return o.ToIncidentClassificationPtrOutputWithContext(context.Background())
}

func (o IncidentClassificationOutput) ToIncidentClassificationPtrOutputWithContext(ctx context.Context) IncidentClassificationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IncidentClassification) *IncidentClassification {
		return &v
	}).(IncidentClassificationPtrOutput)
}

func (o IncidentClassificationOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o IncidentClassificationOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e IncidentClassification) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o IncidentClassificationOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o IncidentClassificationOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e IncidentClassification) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type IncidentClassificationPtrOutput struct{ *pulumi.OutputState }

func (IncidentClassificationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IncidentClassification)(nil)).Elem()
}

func (o IncidentClassificationPtrOutput) ToIncidentClassificationPtrOutput() IncidentClassificationPtrOutput {
	return o
}

func (o IncidentClassificationPtrOutput) ToIncidentClassificationPtrOutputWithContext(ctx context.Context) IncidentClassificationPtrOutput {
	return o
}

func (o IncidentClassificationPtrOutput) Elem() IncidentClassificationOutput {
	return o.ApplyT(func(v *IncidentClassification) IncidentClassification {
		if v != nil {
			return *v
		}
		var ret IncidentClassification
		return ret
	}).(IncidentClassificationOutput)
}

func (o IncidentClassificationPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o IncidentClassificationPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *IncidentClassification) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// IncidentClassificationInput is an input type that accepts values of the IncidentClassification enum
// A concrete instance of `IncidentClassificationInput` can be one of the following:
//
//	IncidentClassificationUndetermined
//	IncidentClassificationTruePositive
//	IncidentClassificationBenignPositive
//	IncidentClassificationFalsePositive
type IncidentClassificationInput interface {
	pulumi.Input

	ToIncidentClassificationOutput() IncidentClassificationOutput
	ToIncidentClassificationOutputWithContext(context.Context) IncidentClassificationOutput
}

var incidentClassificationPtrType = reflect.TypeOf((**IncidentClassification)(nil)).Elem()

type IncidentClassificationPtrInput interface {
	pulumi.Input

	ToIncidentClassificationPtrOutput() IncidentClassificationPtrOutput
	ToIncidentClassificationPtrOutputWithContext(context.Context) IncidentClassificationPtrOutput
}

type incidentClassificationPtr string

func IncidentClassificationPtr(v string) IncidentClassificationPtrInput {
	return (*incidentClassificationPtr)(&v)
}

func (*incidentClassificationPtr) ElementType() reflect.Type {
	return incidentClassificationPtrType
}

func (in *incidentClassificationPtr) ToIncidentClassificationPtrOutput() IncidentClassificationPtrOutput {
	return pulumi.ToOutput(in).(IncidentClassificationPtrOutput)
}

func (in *incidentClassificationPtr) ToIncidentClassificationPtrOutputWithContext(ctx context.Context) IncidentClassificationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(IncidentClassificationPtrOutput)
}

func (in *incidentClassificationPtr) ToOutput(ctx context.Context) pulumix.Output[*IncidentClassification] {
	return pulumix.Output[*IncidentClassification]{
		OutputState: in.ToIncidentClassificationPtrOutputWithContext(ctx).OutputState,
	}
}

// The classification reason the incident was closed with
type IncidentClassificationReason string

const (
	// Classification reason was suspicious activity
	IncidentClassificationReasonSuspiciousActivity = IncidentClassificationReason("SuspiciousActivity")
	// Classification reason was suspicious but expected
	IncidentClassificationReasonSuspiciousButExpected = IncidentClassificationReason("SuspiciousButExpected")
	// Classification reason was incorrect alert logic
	IncidentClassificationReasonIncorrectAlertLogic = IncidentClassificationReason("IncorrectAlertLogic")
	// Classification reason was inaccurate data
	IncidentClassificationReasonInaccurateData = IncidentClassificationReason("InaccurateData")
)

func (IncidentClassificationReason) ElementType() reflect.Type {
	return reflect.TypeOf((*IncidentClassificationReason)(nil)).Elem()
}

func (e IncidentClassificationReason) ToIncidentClassificationReasonOutput() IncidentClassificationReasonOutput {
	return pulumi.ToOutput(e).(IncidentClassificationReasonOutput)
}

func (e IncidentClassificationReason) ToIncidentClassificationReasonOutputWithContext(ctx context.Context) IncidentClassificationReasonOutput {
	return pulumi.ToOutputWithContext(ctx, e).(IncidentClassificationReasonOutput)
}

func (e IncidentClassificationReason) ToIncidentClassificationReasonPtrOutput() IncidentClassificationReasonPtrOutput {
	return e.ToIncidentClassificationReasonPtrOutputWithContext(context.Background())
}

func (e IncidentClassificationReason) ToIncidentClassificationReasonPtrOutputWithContext(ctx context.Context) IncidentClassificationReasonPtrOutput {
	return IncidentClassificationReason(e).ToIncidentClassificationReasonOutputWithContext(ctx).ToIncidentClassificationReasonPtrOutputWithContext(ctx)
}

func (e IncidentClassificationReason) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e IncidentClassificationReason) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e IncidentClassificationReason) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e IncidentClassificationReason) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type IncidentClassificationReasonOutput struct{ *pulumi.OutputState }

func (IncidentClassificationReasonOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IncidentClassificationReason)(nil)).Elem()
}

func (o IncidentClassificationReasonOutput) ToIncidentClassificationReasonOutput() IncidentClassificationReasonOutput {
	return o
}

func (o IncidentClassificationReasonOutput) ToIncidentClassificationReasonOutputWithContext(ctx context.Context) IncidentClassificationReasonOutput {
	return o
}

func (o IncidentClassificationReasonOutput) ToIncidentClassificationReasonPtrOutput() IncidentClassificationReasonPtrOutput {
	return o.ToIncidentClassificationReasonPtrOutputWithContext(context.Background())
}

func (o IncidentClassificationReasonOutput) ToIncidentClassificationReasonPtrOutputWithContext(ctx context.Context) IncidentClassificationReasonPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IncidentClassificationReason) *IncidentClassificationReason {
		return &v
	}).(IncidentClassificationReasonPtrOutput)
}

func (o IncidentClassificationReasonOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o IncidentClassificationReasonOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e IncidentClassificationReason) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o IncidentClassificationReasonOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o IncidentClassificationReasonOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e IncidentClassificationReason) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type IncidentClassificationReasonPtrOutput struct{ *pulumi.OutputState }

func (IncidentClassificationReasonPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IncidentClassificationReason)(nil)).Elem()
}

func (o IncidentClassificationReasonPtrOutput) ToIncidentClassificationReasonPtrOutput() IncidentClassificationReasonPtrOutput {
	return o
}

func (o IncidentClassificationReasonPtrOutput) ToIncidentClassificationReasonPtrOutputWithContext(ctx context.Context) IncidentClassificationReasonPtrOutput {
	return o
}

func (o IncidentClassificationReasonPtrOutput) Elem() IncidentClassificationReasonOutput {
	return o.ApplyT(func(v *IncidentClassificationReason) IncidentClassificationReason {
		if v != nil {
			return *v
		}
		var ret IncidentClassificationReason
		return ret
	}).(IncidentClassificationReasonOutput)
}

func (o IncidentClassificationReasonPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o IncidentClassificationReasonPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *IncidentClassificationReason) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// IncidentClassificationReasonInput is an input type that accepts values of the IncidentClassificationReason enum
// A concrete instance of `IncidentClassificationReasonInput` can be one of the following:
//
//	IncidentClassificationReasonSuspiciousActivity
//	IncidentClassificationReasonSuspiciousButExpected
//	IncidentClassificationReasonIncorrectAlertLogic
//	IncidentClassificationReasonInaccurateData
type IncidentClassificationReasonInput interface {
	pulumi.Input

	ToIncidentClassificationReasonOutput() IncidentClassificationReasonOutput
	ToIncidentClassificationReasonOutputWithContext(context.Context) IncidentClassificationReasonOutput
}

var incidentClassificationReasonPtrType = reflect.TypeOf((**IncidentClassificationReason)(nil)).Elem()

type IncidentClassificationReasonPtrInput interface {
	pulumi.Input

	ToIncidentClassificationReasonPtrOutput() IncidentClassificationReasonPtrOutput
	ToIncidentClassificationReasonPtrOutputWithContext(context.Context) IncidentClassificationReasonPtrOutput
}

type incidentClassificationReasonPtr string

func IncidentClassificationReasonPtr(v string) IncidentClassificationReasonPtrInput {
	return (*incidentClassificationReasonPtr)(&v)
}

func (*incidentClassificationReasonPtr) ElementType() reflect.Type {
	return incidentClassificationReasonPtrType
}

func (in *incidentClassificationReasonPtr) ToIncidentClassificationReasonPtrOutput() IncidentClassificationReasonPtrOutput {
	return pulumi.ToOutput(in).(IncidentClassificationReasonPtrOutput)
}

func (in *incidentClassificationReasonPtr) ToIncidentClassificationReasonPtrOutputWithContext(ctx context.Context) IncidentClassificationReasonPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(IncidentClassificationReasonPtrOutput)
}

func (in *incidentClassificationReasonPtr) ToOutput(ctx context.Context) pulumix.Output[*IncidentClassificationReason] {
	return pulumix.Output[*IncidentClassificationReason]{
		OutputState: in.ToIncidentClassificationReasonPtrOutputWithContext(ctx).OutputState,
	}
}

// The severity of the incident
type IncidentSeverity string

const (
	// High severity
	IncidentSeverityHigh = IncidentSeverity("High")
	// Medium severity
	IncidentSeverityMedium = IncidentSeverity("Medium")
	// Low severity
	IncidentSeverityLow = IncidentSeverity("Low")
	// Informational severity
	IncidentSeverityInformational = IncidentSeverity("Informational")
)

func (IncidentSeverity) ElementType() reflect.Type {
	return reflect.TypeOf((*IncidentSeverity)(nil)).Elem()
}

func (e IncidentSeverity) ToIncidentSeverityOutput() IncidentSeverityOutput {
	return pulumi.ToOutput(e).(IncidentSeverityOutput)
}

func (e IncidentSeverity) ToIncidentSeverityOutputWithContext(ctx context.Context) IncidentSeverityOutput {
	return pulumi.ToOutputWithContext(ctx, e).(IncidentSeverityOutput)
}

func (e IncidentSeverity) ToIncidentSeverityPtrOutput() IncidentSeverityPtrOutput {
	return e.ToIncidentSeverityPtrOutputWithContext(context.Background())
}

func (e IncidentSeverity) ToIncidentSeverityPtrOutputWithContext(ctx context.Context) IncidentSeverityPtrOutput {
	return IncidentSeverity(e).ToIncidentSeverityOutputWithContext(ctx).ToIncidentSeverityPtrOutputWithContext(ctx)
}

func (e IncidentSeverity) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e IncidentSeverity) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e IncidentSeverity) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e IncidentSeverity) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type IncidentSeverityOutput struct{ *pulumi.OutputState }

func (IncidentSeverityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IncidentSeverity)(nil)).Elem()
}

func (o IncidentSeverityOutput) ToIncidentSeverityOutput() IncidentSeverityOutput {
	return o
}

func (o IncidentSeverityOutput) ToIncidentSeverityOutputWithContext(ctx context.Context) IncidentSeverityOutput {
	return o
}

func (o IncidentSeverityOutput) ToIncidentSeverityPtrOutput() IncidentSeverityPtrOutput {
	return o.ToIncidentSeverityPtrOutputWithContext(context.Background())
}

func (o IncidentSeverityOutput) ToIncidentSeverityPtrOutputWithContext(ctx context.Context) IncidentSeverityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IncidentSeverity) *IncidentSeverity {
		return &v
	}).(IncidentSeverityPtrOutput)
}

func (o IncidentSeverityOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o IncidentSeverityOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e IncidentSeverity) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o IncidentSeverityOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o IncidentSeverityOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e IncidentSeverity) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type IncidentSeverityPtrOutput struct{ *pulumi.OutputState }

func (IncidentSeverityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IncidentSeverity)(nil)).Elem()
}

func (o IncidentSeverityPtrOutput) ToIncidentSeverityPtrOutput() IncidentSeverityPtrOutput {
	return o
}

func (o IncidentSeverityPtrOutput) ToIncidentSeverityPtrOutputWithContext(ctx context.Context) IncidentSeverityPtrOutput {
	return o
}

func (o IncidentSeverityPtrOutput) Elem() IncidentSeverityOutput {
	return o.ApplyT(func(v *IncidentSeverity) IncidentSeverity {
		if v != nil {
			return *v
		}
		var ret IncidentSeverity
		return ret
	}).(IncidentSeverityOutput)
}

func (o IncidentSeverityPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o IncidentSeverityPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *IncidentSeverity) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// IncidentSeverityInput is an input type that accepts values of the IncidentSeverity enum
// A concrete instance of `IncidentSeverityInput` can be one of the following:
//
//	IncidentSeverityHigh
//	IncidentSeverityMedium
//	IncidentSeverityLow
//	IncidentSeverityInformational
type IncidentSeverityInput interface {
	pulumi.Input

	ToIncidentSeverityOutput() IncidentSeverityOutput
	ToIncidentSeverityOutputWithContext(context.Context) IncidentSeverityOutput
}

var incidentSeverityPtrType = reflect.TypeOf((**IncidentSeverity)(nil)).Elem()

type IncidentSeverityPtrInput interface {
	pulumi.Input

	ToIncidentSeverityPtrOutput() IncidentSeverityPtrOutput
	ToIncidentSeverityPtrOutputWithContext(context.Context) IncidentSeverityPtrOutput
}

type incidentSeverityPtr string

func IncidentSeverityPtr(v string) IncidentSeverityPtrInput {
	return (*incidentSeverityPtr)(&v)
}

func (*incidentSeverityPtr) ElementType() reflect.Type {
	return incidentSeverityPtrType
}

func (in *incidentSeverityPtr) ToIncidentSeverityPtrOutput() IncidentSeverityPtrOutput {
	return pulumi.ToOutput(in).(IncidentSeverityPtrOutput)
}

func (in *incidentSeverityPtr) ToIncidentSeverityPtrOutputWithContext(ctx context.Context) IncidentSeverityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(IncidentSeverityPtrOutput)
}

func (in *incidentSeverityPtr) ToOutput(ctx context.Context) pulumix.Output[*IncidentSeverity] {
	return pulumix.Output[*IncidentSeverity]{
		OutputState: in.ToIncidentSeverityPtrOutputWithContext(ctx).OutputState,
	}
}

// The status of the incident
type IncidentStatus string

const (
	// An active incident which isn't being handled currently
	IncidentStatusNew = IncidentStatus("New")
	// An active incident which is being handled
	IncidentStatusActive = IncidentStatus("Active")
	// A non-active incident
	IncidentStatusClosed = IncidentStatus("Closed")
)

func (IncidentStatus) ElementType() reflect.Type {
	return reflect.TypeOf((*IncidentStatus)(nil)).Elem()
}

func (e IncidentStatus) ToIncidentStatusOutput() IncidentStatusOutput {
	return pulumi.ToOutput(e).(IncidentStatusOutput)
}

func (e IncidentStatus) ToIncidentStatusOutputWithContext(ctx context.Context) IncidentStatusOutput {
	return pulumi.ToOutputWithContext(ctx, e).(IncidentStatusOutput)
}

func (e IncidentStatus) ToIncidentStatusPtrOutput() IncidentStatusPtrOutput {
	return e.ToIncidentStatusPtrOutputWithContext(context.Background())
}

func (e IncidentStatus) ToIncidentStatusPtrOutputWithContext(ctx context.Context) IncidentStatusPtrOutput {
	return IncidentStatus(e).ToIncidentStatusOutputWithContext(ctx).ToIncidentStatusPtrOutputWithContext(ctx)
}

func (e IncidentStatus) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e IncidentStatus) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e IncidentStatus) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e IncidentStatus) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type IncidentStatusOutput struct{ *pulumi.OutputState }

func (IncidentStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IncidentStatus)(nil)).Elem()
}

func (o IncidentStatusOutput) ToIncidentStatusOutput() IncidentStatusOutput {
	return o
}

func (o IncidentStatusOutput) ToIncidentStatusOutputWithContext(ctx context.Context) IncidentStatusOutput {
	return o
}

func (o IncidentStatusOutput) ToIncidentStatusPtrOutput() IncidentStatusPtrOutput {
	return o.ToIncidentStatusPtrOutputWithContext(context.Background())
}

func (o IncidentStatusOutput) ToIncidentStatusPtrOutputWithContext(ctx context.Context) IncidentStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IncidentStatus) *IncidentStatus {
		return &v
	}).(IncidentStatusPtrOutput)
}

func (o IncidentStatusOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o IncidentStatusOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e IncidentStatus) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o IncidentStatusOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o IncidentStatusOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e IncidentStatus) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type IncidentStatusPtrOutput struct{ *pulumi.OutputState }

func (IncidentStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IncidentStatus)(nil)).Elem()
}

func (o IncidentStatusPtrOutput) ToIncidentStatusPtrOutput() IncidentStatusPtrOutput {
	return o
}

func (o IncidentStatusPtrOutput) ToIncidentStatusPtrOutputWithContext(ctx context.Context) IncidentStatusPtrOutput {
	return o
}

func (o IncidentStatusPtrOutput) Elem() IncidentStatusOutput {
	return o.ApplyT(func(v *IncidentStatus) IncidentStatus {
		if v != nil {
			return *v
		}
		var ret IncidentStatus
		return ret
	}).(IncidentStatusOutput)
}

func (o IncidentStatusPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o IncidentStatusPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *IncidentStatus) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// IncidentStatusInput is an input type that accepts values of the IncidentStatus enum
// A concrete instance of `IncidentStatusInput` can be one of the following:
//
//	IncidentStatusNew
//	IncidentStatusActive
//	IncidentStatusClosed
type IncidentStatusInput interface {
	pulumi.Input

	ToIncidentStatusOutput() IncidentStatusOutput
	ToIncidentStatusOutputWithContext(context.Context) IncidentStatusOutput
}

var incidentStatusPtrType = reflect.TypeOf((**IncidentStatus)(nil)).Elem()

type IncidentStatusPtrInput interface {
	pulumi.Input

	ToIncidentStatusPtrOutput() IncidentStatusPtrOutput
	ToIncidentStatusPtrOutputWithContext(context.Context) IncidentStatusPtrOutput
}

type incidentStatusPtr string

func IncidentStatusPtr(v string) IncidentStatusPtrInput {
	return (*incidentStatusPtr)(&v)
}

func (*incidentStatusPtr) ElementType() reflect.Type {
	return incidentStatusPtrType
}

func (in *incidentStatusPtr) ToIncidentStatusPtrOutput() IncidentStatusPtrOutput {
	return pulumi.ToOutput(in).(IncidentStatusPtrOutput)
}

func (in *incidentStatusPtr) ToIncidentStatusPtrOutputWithContext(ctx context.Context) IncidentStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(IncidentStatusPtrOutput)
}

func (in *incidentStatusPtr) ToOutput(ctx context.Context) pulumix.Output[*IncidentStatus] {
	return pulumix.Output[*IncidentStatus]{
		OutputState: in.ToIncidentStatusPtrOutputWithContext(ctx).OutputState,
	}
}

// Operator used for list of dependencies in criteria array.
type Operator string

const (
	OperatorAND = Operator("AND")
	OperatorOR  = Operator("OR")
)

func (Operator) ElementType() reflect.Type {
	return reflect.TypeOf((*Operator)(nil)).Elem()
}

func (e Operator) ToOperatorOutput() OperatorOutput {
	return pulumi.ToOutput(e).(OperatorOutput)
}

func (e Operator) ToOperatorOutputWithContext(ctx context.Context) OperatorOutput {
	return pulumi.ToOutputWithContext(ctx, e).(OperatorOutput)
}

func (e Operator) ToOperatorPtrOutput() OperatorPtrOutput {
	return e.ToOperatorPtrOutputWithContext(context.Background())
}

func (e Operator) ToOperatorPtrOutputWithContext(ctx context.Context) OperatorPtrOutput {
	return Operator(e).ToOperatorOutputWithContext(ctx).ToOperatorPtrOutputWithContext(ctx)
}

func (e Operator) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e Operator) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e Operator) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e Operator) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type OperatorOutput struct{ *pulumi.OutputState }

func (OperatorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Operator)(nil)).Elem()
}

func (o OperatorOutput) ToOperatorOutput() OperatorOutput {
	return o
}

func (o OperatorOutput) ToOperatorOutputWithContext(ctx context.Context) OperatorOutput {
	return o
}

func (o OperatorOutput) ToOperatorPtrOutput() OperatorPtrOutput {
	return o.ToOperatorPtrOutputWithContext(context.Background())
}

func (o OperatorOutput) ToOperatorPtrOutputWithContext(ctx context.Context) OperatorPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Operator) *Operator {
		return &v
	}).(OperatorPtrOutput)
}

func (o OperatorOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o OperatorOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e Operator) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o OperatorOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o OperatorOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e Operator) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type OperatorPtrOutput struct{ *pulumi.OutputState }

func (OperatorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Operator)(nil)).Elem()
}

func (o OperatorPtrOutput) ToOperatorPtrOutput() OperatorPtrOutput {
	return o
}

func (o OperatorPtrOutput) ToOperatorPtrOutputWithContext(ctx context.Context) OperatorPtrOutput {
	return o
}

func (o OperatorPtrOutput) Elem() OperatorOutput {
	return o.ApplyT(func(v *Operator) Operator {
		if v != nil {
			return *v
		}
		var ret Operator
		return ret
	}).(OperatorOutput)
}

func (o OperatorPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o OperatorPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *Operator) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// OperatorInput is an input type that accepts values of the Operator enum
// A concrete instance of `OperatorInput` can be one of the following:
//
//	OperatorAND
//	OperatorOR
type OperatorInput interface {
	pulumi.Input

	ToOperatorOutput() OperatorOutput
	ToOperatorOutputWithContext(context.Context) OperatorOutput
}

var operatorPtrType = reflect.TypeOf((**Operator)(nil)).Elem()

type OperatorPtrInput interface {
	pulumi.Input

	ToOperatorPtrOutput() OperatorPtrOutput
	ToOperatorPtrOutputWithContext(context.Context) OperatorPtrOutput
}

type operatorPtr string

func OperatorPtr(v string) OperatorPtrInput {
	return (*operatorPtr)(&v)
}

func (*operatorPtr) ElementType() reflect.Type {
	return operatorPtrType
}

func (in *operatorPtr) ToOperatorPtrOutput() OperatorPtrOutput {
	return pulumi.ToOutput(in).(OperatorPtrOutput)
}

func (in *operatorPtr) ToOperatorPtrOutputWithContext(ctx context.Context) OperatorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(OperatorPtrOutput)
}

func (in *operatorPtr) ToOutput(ctx context.Context) pulumix.Output[*Operator] {
	return pulumix.Output[*Operator]{
		OutputState: in.ToOperatorPtrOutputWithContext(ctx).OutputState,
	}
}

// The type of the owner the incident is assigned to.
type OwnerType string

const (
	// The incident owner type is unknown
	OwnerTypeUnknown = OwnerType("Unknown")
	// The incident owner type is an AAD user
	OwnerTypeUser = OwnerType("User")
	// The incident owner type is an AAD group
	OwnerTypeGroup = OwnerType("Group")
)

func (OwnerType) ElementType() reflect.Type {
	return reflect.TypeOf((*OwnerType)(nil)).Elem()
}

func (e OwnerType) ToOwnerTypeOutput() OwnerTypeOutput {
	return pulumi.ToOutput(e).(OwnerTypeOutput)
}

func (e OwnerType) ToOwnerTypeOutputWithContext(ctx context.Context) OwnerTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(OwnerTypeOutput)
}

func (e OwnerType) ToOwnerTypePtrOutput() OwnerTypePtrOutput {
	return e.ToOwnerTypePtrOutputWithContext(context.Background())
}

func (e OwnerType) ToOwnerTypePtrOutputWithContext(ctx context.Context) OwnerTypePtrOutput {
	return OwnerType(e).ToOwnerTypeOutputWithContext(ctx).ToOwnerTypePtrOutputWithContext(ctx)
}

func (e OwnerType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e OwnerType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e OwnerType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e OwnerType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type OwnerTypeOutput struct{ *pulumi.OutputState }

func (OwnerTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OwnerType)(nil)).Elem()
}

func (o OwnerTypeOutput) ToOwnerTypeOutput() OwnerTypeOutput {
	return o
}

func (o OwnerTypeOutput) ToOwnerTypeOutputWithContext(ctx context.Context) OwnerTypeOutput {
	return o
}

func (o OwnerTypeOutput) ToOwnerTypePtrOutput() OwnerTypePtrOutput {
	return o.ToOwnerTypePtrOutputWithContext(context.Background())
}

func (o OwnerTypeOutput) ToOwnerTypePtrOutputWithContext(ctx context.Context) OwnerTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OwnerType) *OwnerType {
		return &v
	}).(OwnerTypePtrOutput)
}

func (o OwnerTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o OwnerTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e OwnerType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o OwnerTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o OwnerTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e OwnerType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type OwnerTypePtrOutput struct{ *pulumi.OutputState }

func (OwnerTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OwnerType)(nil)).Elem()
}

func (o OwnerTypePtrOutput) ToOwnerTypePtrOutput() OwnerTypePtrOutput {
	return o
}

func (o OwnerTypePtrOutput) ToOwnerTypePtrOutputWithContext(ctx context.Context) OwnerTypePtrOutput {
	return o
}

func (o OwnerTypePtrOutput) Elem() OwnerTypeOutput {
	return o.ApplyT(func(v *OwnerType) OwnerType {
		if v != nil {
			return *v
		}
		var ret OwnerType
		return ret
	}).(OwnerTypeOutput)
}

func (o OwnerTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o OwnerTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *OwnerType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// OwnerTypeInput is an input type that accepts values of the OwnerType enum
// A concrete instance of `OwnerTypeInput` can be one of the following:
//
//	OwnerTypeUnknown
//	OwnerTypeUser
//	OwnerTypeGroup
type OwnerTypeInput interface {
	pulumi.Input

	ToOwnerTypeOutput() OwnerTypeOutput
	ToOwnerTypeOutputWithContext(context.Context) OwnerTypeOutput
}

var ownerTypePtrType = reflect.TypeOf((**OwnerType)(nil)).Elem()

type OwnerTypePtrInput interface {
	pulumi.Input

	ToOwnerTypePtrOutput() OwnerTypePtrOutput
	ToOwnerTypePtrOutputWithContext(context.Context) OwnerTypePtrOutput
}

type ownerTypePtr string

func OwnerTypePtr(v string) OwnerTypePtrInput {
	return (*ownerTypePtr)(&v)
}

func (*ownerTypePtr) ElementType() reflect.Type {
	return ownerTypePtrType
}

func (in *ownerTypePtr) ToOwnerTypePtrOutput() OwnerTypePtrOutput {
	return pulumi.ToOutput(in).(OwnerTypePtrOutput)
}

func (in *ownerTypePtr) ToOwnerTypePtrOutputWithContext(ctx context.Context) OwnerTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(OwnerTypePtrOutput)
}

func (in *ownerTypePtr) ToOutput(ctx context.Context) pulumix.Output[*OwnerType] {
	return pulumix.Output[*OwnerType]{
		OutputState: in.ToOwnerTypePtrOutputWithContext(ctx).OutputState,
	}
}

// The source of the watchlist
type Source string

const (
	Source_Local_file     = Source("Local file")
	Source_Remote_storage = Source("Remote storage")
)

func (Source) ElementType() reflect.Type {
	return reflect.TypeOf((*Source)(nil)).Elem()
}

func (e Source) ToSourceOutput() SourceOutput {
	return pulumi.ToOutput(e).(SourceOutput)
}

func (e Source) ToSourceOutputWithContext(ctx context.Context) SourceOutput {
	return pulumi.ToOutputWithContext(ctx, e).(SourceOutput)
}

func (e Source) ToSourcePtrOutput() SourcePtrOutput {
	return e.ToSourcePtrOutputWithContext(context.Background())
}

func (e Source) ToSourcePtrOutputWithContext(ctx context.Context) SourcePtrOutput {
	return Source(e).ToSourceOutputWithContext(ctx).ToSourcePtrOutputWithContext(ctx)
}

func (e Source) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e Source) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e Source) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e Source) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type SourceOutput struct{ *pulumi.OutputState }

func (SourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Source)(nil)).Elem()
}

func (o SourceOutput) ToSourceOutput() SourceOutput {
	return o
}

func (o SourceOutput) ToSourceOutputWithContext(ctx context.Context) SourceOutput {
	return o
}

func (o SourceOutput) ToSourcePtrOutput() SourcePtrOutput {
	return o.ToSourcePtrOutputWithContext(context.Background())
}

func (o SourceOutput) ToSourcePtrOutputWithContext(ctx context.Context) SourcePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Source) *Source {
		return &v
	}).(SourcePtrOutput)
}

func (o SourceOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o SourceOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e Source) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o SourceOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SourceOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e Source) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type SourcePtrOutput struct{ *pulumi.OutputState }

func (SourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Source)(nil)).Elem()
}

func (o SourcePtrOutput) ToSourcePtrOutput() SourcePtrOutput {
	return o
}

func (o SourcePtrOutput) ToSourcePtrOutputWithContext(ctx context.Context) SourcePtrOutput {
	return o
}

func (o SourcePtrOutput) Elem() SourceOutput {
	return o.ApplyT(func(v *Source) Source {
		if v != nil {
			return *v
		}
		var ret Source
		return ret
	}).(SourceOutput)
}

func (o SourcePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SourcePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *Source) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// SourceInput is an input type that accepts values of the Source enum
// A concrete instance of `SourceInput` can be one of the following:
//
//	Source_Local_file
//	Source_Remote_storage
type SourceInput interface {
	pulumi.Input

	ToSourceOutput() SourceOutput
	ToSourceOutputWithContext(context.Context) SourceOutput
}

var sourcePtrType = reflect.TypeOf((**Source)(nil)).Elem()

type SourcePtrInput interface {
	pulumi.Input

	ToSourcePtrOutput() SourcePtrOutput
	ToSourcePtrOutputWithContext(context.Context) SourcePtrOutput
}

type sourcePtr string

func SourcePtr(v string) SourcePtrInput {
	return (*sourcePtr)(&v)
}

func (*sourcePtr) ElementType() reflect.Type {
	return sourcePtrType
}

func (in *sourcePtr) ToSourcePtrOutput() SourcePtrOutput {
	return pulumi.ToOutput(in).(SourcePtrOutput)
}

func (in *sourcePtr) ToSourcePtrOutputWithContext(ctx context.Context) SourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(SourcePtrOutput)
}

func (in *sourcePtr) ToOutput(ctx context.Context) pulumix.Output[*Source] {
	return pulumix.Output[*Source]{
		OutputState: in.ToSourcePtrOutputWithContext(ctx).OutputState,
	}
}

// Source type of the content
type SourceKind string

const (
	SourceKindLocalWorkspace   = SourceKind("LocalWorkspace")
	SourceKindCommunity        = SourceKind("Community")
	SourceKindSolution         = SourceKind("Solution")
	SourceKindSourceRepository = SourceKind("SourceRepository")
)

func (SourceKind) ElementType() reflect.Type {
	return reflect.TypeOf((*SourceKind)(nil)).Elem()
}

func (e SourceKind) ToSourceKindOutput() SourceKindOutput {
	return pulumi.ToOutput(e).(SourceKindOutput)
}

func (e SourceKind) ToSourceKindOutputWithContext(ctx context.Context) SourceKindOutput {
	return pulumi.ToOutputWithContext(ctx, e).(SourceKindOutput)
}

func (e SourceKind) ToSourceKindPtrOutput() SourceKindPtrOutput {
	return e.ToSourceKindPtrOutputWithContext(context.Background())
}

func (e SourceKind) ToSourceKindPtrOutputWithContext(ctx context.Context) SourceKindPtrOutput {
	return SourceKind(e).ToSourceKindOutputWithContext(ctx).ToSourceKindPtrOutputWithContext(ctx)
}

func (e SourceKind) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e SourceKind) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e SourceKind) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e SourceKind) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type SourceKindOutput struct{ *pulumi.OutputState }

func (SourceKindOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SourceKind)(nil)).Elem()
}

func (o SourceKindOutput) ToSourceKindOutput() SourceKindOutput {
	return o
}

func (o SourceKindOutput) ToSourceKindOutputWithContext(ctx context.Context) SourceKindOutput {
	return o
}

func (o SourceKindOutput) ToSourceKindPtrOutput() SourceKindPtrOutput {
	return o.ToSourceKindPtrOutputWithContext(context.Background())
}

func (o SourceKindOutput) ToSourceKindPtrOutputWithContext(ctx context.Context) SourceKindPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SourceKind) *SourceKind {
		return &v
	}).(SourceKindPtrOutput)
}

func (o SourceKindOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o SourceKindOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SourceKind) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o SourceKindOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SourceKindOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SourceKind) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type SourceKindPtrOutput struct{ *pulumi.OutputState }

func (SourceKindPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SourceKind)(nil)).Elem()
}

func (o SourceKindPtrOutput) ToSourceKindPtrOutput() SourceKindPtrOutput {
	return o
}

func (o SourceKindPtrOutput) ToSourceKindPtrOutputWithContext(ctx context.Context) SourceKindPtrOutput {
	return o
}

func (o SourceKindPtrOutput) Elem() SourceKindOutput {
	return o.ApplyT(func(v *SourceKind) SourceKind {
		if v != nil {
			return *v
		}
		var ret SourceKind
		return ret
	}).(SourceKindOutput)
}

func (o SourceKindPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SourceKindPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *SourceKind) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// SourceKindInput is an input type that accepts values of the SourceKind enum
// A concrete instance of `SourceKindInput` can be one of the following:
//
//	SourceKindLocalWorkspace
//	SourceKindCommunity
//	SourceKindSolution
//	SourceKindSourceRepository
type SourceKindInput interface {
	pulumi.Input

	ToSourceKindOutput() SourceKindOutput
	ToSourceKindOutputWithContext(context.Context) SourceKindOutput
}

var sourceKindPtrType = reflect.TypeOf((**SourceKind)(nil)).Elem()

type SourceKindPtrInput interface {
	pulumi.Input

	ToSourceKindPtrOutput() SourceKindPtrOutput
	ToSourceKindPtrOutputWithContext(context.Context) SourceKindPtrOutput
}

type sourceKindPtr string

func SourceKindPtr(v string) SourceKindPtrInput {
	return (*sourceKindPtr)(&v)
}

func (*sourceKindPtr) ElementType() reflect.Type {
	return sourceKindPtrType
}

func (in *sourceKindPtr) ToSourceKindPtrOutput() SourceKindPtrOutput {
	return pulumi.ToOutput(in).(SourceKindPtrOutput)
}

func (in *sourceKindPtr) ToSourceKindPtrOutputWithContext(ctx context.Context) SourceKindPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(SourceKindPtrOutput)
}

func (in *sourceKindPtr) ToOutput(ctx context.Context) pulumix.Output[*SourceKind] {
	return pulumix.Output[*SourceKind]{
		OutputState: in.ToSourceKindPtrOutputWithContext(ctx).OutputState,
	}
}

// Type of support for content item
type SupportTier string

const (
	SupportTierMicrosoft = SupportTier("Microsoft")
	SupportTierPartner   = SupportTier("Partner")
	SupportTierCommunity = SupportTier("Community")
)

func (SupportTier) ElementType() reflect.Type {
	return reflect.TypeOf((*SupportTier)(nil)).Elem()
}

func (e SupportTier) ToSupportTierOutput() SupportTierOutput {
	return pulumi.ToOutput(e).(SupportTierOutput)
}

func (e SupportTier) ToSupportTierOutputWithContext(ctx context.Context) SupportTierOutput {
	return pulumi.ToOutputWithContext(ctx, e).(SupportTierOutput)
}

func (e SupportTier) ToSupportTierPtrOutput() SupportTierPtrOutput {
	return e.ToSupportTierPtrOutputWithContext(context.Background())
}

func (e SupportTier) ToSupportTierPtrOutputWithContext(ctx context.Context) SupportTierPtrOutput {
	return SupportTier(e).ToSupportTierOutputWithContext(ctx).ToSupportTierPtrOutputWithContext(ctx)
}

func (e SupportTier) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e SupportTier) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e SupportTier) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e SupportTier) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type SupportTierOutput struct{ *pulumi.OutputState }

func (SupportTierOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SupportTier)(nil)).Elem()
}

func (o SupportTierOutput) ToSupportTierOutput() SupportTierOutput {
	return o
}

func (o SupportTierOutput) ToSupportTierOutputWithContext(ctx context.Context) SupportTierOutput {
	return o
}

func (o SupportTierOutput) ToSupportTierPtrOutput() SupportTierPtrOutput {
	return o.ToSupportTierPtrOutputWithContext(context.Background())
}

func (o SupportTierOutput) ToSupportTierPtrOutputWithContext(ctx context.Context) SupportTierPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SupportTier) *SupportTier {
		return &v
	}).(SupportTierPtrOutput)
}

func (o SupportTierOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o SupportTierOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SupportTier) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o SupportTierOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SupportTierOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SupportTier) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type SupportTierPtrOutput struct{ *pulumi.OutputState }

func (SupportTierPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SupportTier)(nil)).Elem()
}

func (o SupportTierPtrOutput) ToSupportTierPtrOutput() SupportTierPtrOutput {
	return o
}

func (o SupportTierPtrOutput) ToSupportTierPtrOutputWithContext(ctx context.Context) SupportTierPtrOutput {
	return o
}

func (o SupportTierPtrOutput) Elem() SupportTierOutput {
	return o.ApplyT(func(v *SupportTier) SupportTier {
		if v != nil {
			return *v
		}
		var ret SupportTier
		return ret
	}).(SupportTierOutput)
}

func (o SupportTierPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SupportTierPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *SupportTier) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// SupportTierInput is an input type that accepts values of the SupportTier enum
// A concrete instance of `SupportTierInput` can be one of the following:
//
//	SupportTierMicrosoft
//	SupportTierPartner
//	SupportTierCommunity
type SupportTierInput interface {
	pulumi.Input

	ToSupportTierOutput() SupportTierOutput
	ToSupportTierOutputWithContext(context.Context) SupportTierOutput
}

var supportTierPtrType = reflect.TypeOf((**SupportTier)(nil)).Elem()

type SupportTierPtrInput interface {
	pulumi.Input

	ToSupportTierPtrOutput() SupportTierPtrOutput
	ToSupportTierPtrOutputWithContext(context.Context) SupportTierPtrOutput
}

type supportTierPtr string

func SupportTierPtr(v string) SupportTierPtrInput {
	return (*supportTierPtr)(&v)
}

func (*supportTierPtr) ElementType() reflect.Type {
	return supportTierPtrType
}

func (in *supportTierPtr) ToSupportTierPtrOutput() SupportTierPtrOutput {
	return pulumi.ToOutput(in).(SupportTierPtrOutput)
}

func (in *supportTierPtr) ToSupportTierPtrOutputWithContext(ctx context.Context) SupportTierPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(SupportTierPtrOutput)
}

func (in *supportTierPtr) ToOutput(ctx context.Context) pulumix.Output[*SupportTier] {
	return pulumix.Output[*SupportTier]{
		OutputState: in.ToSupportTierPtrOutputWithContext(ctx).OutputState,
	}
}

// The kind of the entity.
type ThreatIntelligenceResourceInnerKind string

const (
	// Entity represents threat intelligence indicator in the system.
	ThreatIntelligenceResourceInnerKindIndicator = ThreatIntelligenceResourceInnerKind("indicator")
)

type TriggersOn string

const (
	// Trigger on Incidents
	TriggersOnIncidents = TriggersOn("Incidents")
	// Trigger on Alerts
	TriggersOnAlerts = TriggersOn("Alerts")
)

func (TriggersOn) ElementType() reflect.Type {
	return reflect.TypeOf((*TriggersOn)(nil)).Elem()
}

func (e TriggersOn) ToTriggersOnOutput() TriggersOnOutput {
	return pulumi.ToOutput(e).(TriggersOnOutput)
}

func (e TriggersOn) ToTriggersOnOutputWithContext(ctx context.Context) TriggersOnOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TriggersOnOutput)
}

func (e TriggersOn) ToTriggersOnPtrOutput() TriggersOnPtrOutput {
	return e.ToTriggersOnPtrOutputWithContext(context.Background())
}

func (e TriggersOn) ToTriggersOnPtrOutputWithContext(ctx context.Context) TriggersOnPtrOutput {
	return TriggersOn(e).ToTriggersOnOutputWithContext(ctx).ToTriggersOnPtrOutputWithContext(ctx)
}

func (e TriggersOn) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TriggersOn) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TriggersOn) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TriggersOn) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TriggersOnOutput struct{ *pulumi.OutputState }

func (TriggersOnOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TriggersOn)(nil)).Elem()
}

func (o TriggersOnOutput) ToTriggersOnOutput() TriggersOnOutput {
	return o
}

func (o TriggersOnOutput) ToTriggersOnOutputWithContext(ctx context.Context) TriggersOnOutput {
	return o
}

func (o TriggersOnOutput) ToTriggersOnPtrOutput() TriggersOnPtrOutput {
	return o.ToTriggersOnPtrOutputWithContext(context.Background())
}

func (o TriggersOnOutput) ToTriggersOnPtrOutputWithContext(ctx context.Context) TriggersOnPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TriggersOn) *TriggersOn {
		return &v
	}).(TriggersOnPtrOutput)
}

func (o TriggersOnOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TriggersOnOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TriggersOn) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TriggersOnOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TriggersOnOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TriggersOn) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TriggersOnPtrOutput struct{ *pulumi.OutputState }

func (TriggersOnPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TriggersOn)(nil)).Elem()
}

func (o TriggersOnPtrOutput) ToTriggersOnPtrOutput() TriggersOnPtrOutput {
	return o
}

func (o TriggersOnPtrOutput) ToTriggersOnPtrOutputWithContext(ctx context.Context) TriggersOnPtrOutput {
	return o
}

func (o TriggersOnPtrOutput) Elem() TriggersOnOutput {
	return o.ApplyT(func(v *TriggersOn) TriggersOn {
		if v != nil {
			return *v
		}
		var ret TriggersOn
		return ret
	}).(TriggersOnOutput)
}

func (o TriggersOnPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TriggersOnPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TriggersOn) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TriggersOnInput is an input type that accepts values of the TriggersOn enum
// A concrete instance of `TriggersOnInput` can be one of the following:
//
//	TriggersOnIncidents
//	TriggersOnAlerts
type TriggersOnInput interface {
	pulumi.Input

	ToTriggersOnOutput() TriggersOnOutput
	ToTriggersOnOutputWithContext(context.Context) TriggersOnOutput
}

var triggersOnPtrType = reflect.TypeOf((**TriggersOn)(nil)).Elem()

type TriggersOnPtrInput interface {
	pulumi.Input

	ToTriggersOnPtrOutput() TriggersOnPtrOutput
	ToTriggersOnPtrOutputWithContext(context.Context) TriggersOnPtrOutput
}

type triggersOnPtr string

func TriggersOnPtr(v string) TriggersOnPtrInput {
	return (*triggersOnPtr)(&v)
}

func (*triggersOnPtr) ElementType() reflect.Type {
	return triggersOnPtrType
}

func (in *triggersOnPtr) ToTriggersOnPtrOutput() TriggersOnPtrOutput {
	return pulumi.ToOutput(in).(TriggersOnPtrOutput)
}

func (in *triggersOnPtr) ToTriggersOnPtrOutputWithContext(ctx context.Context) TriggersOnPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TriggersOnPtrOutput)
}

func (in *triggersOnPtr) ToOutput(ctx context.Context) pulumix.Output[*TriggersOn] {
	return pulumix.Output[*TriggersOn]{
		OutputState: in.ToTriggersOnPtrOutputWithContext(ctx).OutputState,
	}
}

type TriggersWhen string

const (
	// Trigger on created objects
	TriggersWhenCreated = TriggersWhen("Created")
	// Trigger on updated objects
	TriggersWhenUpdated = TriggersWhen("Updated")
)

func (TriggersWhen) ElementType() reflect.Type {
	return reflect.TypeOf((*TriggersWhen)(nil)).Elem()
}

func (e TriggersWhen) ToTriggersWhenOutput() TriggersWhenOutput {
	return pulumi.ToOutput(e).(TriggersWhenOutput)
}

func (e TriggersWhen) ToTriggersWhenOutputWithContext(ctx context.Context) TriggersWhenOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TriggersWhenOutput)
}

func (e TriggersWhen) ToTriggersWhenPtrOutput() TriggersWhenPtrOutput {
	return e.ToTriggersWhenPtrOutputWithContext(context.Background())
}

func (e TriggersWhen) ToTriggersWhenPtrOutputWithContext(ctx context.Context) TriggersWhenPtrOutput {
	return TriggersWhen(e).ToTriggersWhenOutputWithContext(ctx).ToTriggersWhenPtrOutputWithContext(ctx)
}

func (e TriggersWhen) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TriggersWhen) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TriggersWhen) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TriggersWhen) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TriggersWhenOutput struct{ *pulumi.OutputState }

func (TriggersWhenOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TriggersWhen)(nil)).Elem()
}

func (o TriggersWhenOutput) ToTriggersWhenOutput() TriggersWhenOutput {
	return o
}

func (o TriggersWhenOutput) ToTriggersWhenOutputWithContext(ctx context.Context) TriggersWhenOutput {
	return o
}

func (o TriggersWhenOutput) ToTriggersWhenPtrOutput() TriggersWhenPtrOutput {
	return o.ToTriggersWhenPtrOutputWithContext(context.Background())
}

func (o TriggersWhenOutput) ToTriggersWhenPtrOutputWithContext(ctx context.Context) TriggersWhenPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TriggersWhen) *TriggersWhen {
		return &v
	}).(TriggersWhenPtrOutput)
}

func (o TriggersWhenOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TriggersWhenOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TriggersWhen) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TriggersWhenOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TriggersWhenOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TriggersWhen) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TriggersWhenPtrOutput struct{ *pulumi.OutputState }

func (TriggersWhenPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TriggersWhen)(nil)).Elem()
}

func (o TriggersWhenPtrOutput) ToTriggersWhenPtrOutput() TriggersWhenPtrOutput {
	return o
}

func (o TriggersWhenPtrOutput) ToTriggersWhenPtrOutputWithContext(ctx context.Context) TriggersWhenPtrOutput {
	return o
}

func (o TriggersWhenPtrOutput) Elem() TriggersWhenOutput {
	return o.ApplyT(func(v *TriggersWhen) TriggersWhen {
		if v != nil {
			return *v
		}
		var ret TriggersWhen
		return ret
	}).(TriggersWhenOutput)
}

func (o TriggersWhenPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TriggersWhenPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TriggersWhen) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TriggersWhenInput is an input type that accepts values of the TriggersWhen enum
// A concrete instance of `TriggersWhenInput` can be one of the following:
//
//	TriggersWhenCreated
//	TriggersWhenUpdated
type TriggersWhenInput interface {
	pulumi.Input

	ToTriggersWhenOutput() TriggersWhenOutput
	ToTriggersWhenOutputWithContext(context.Context) TriggersWhenOutput
}

var triggersWhenPtrType = reflect.TypeOf((**TriggersWhen)(nil)).Elem()

type TriggersWhenPtrInput interface {
	pulumi.Input

	ToTriggersWhenPtrOutput() TriggersWhenPtrOutput
	ToTriggersWhenPtrOutputWithContext(context.Context) TriggersWhenPtrOutput
}

type triggersWhenPtr string

func TriggersWhenPtr(v string) TriggersWhenPtrInput {
	return (*triggersWhenPtr)(&v)
}

func (*triggersWhenPtr) ElementType() reflect.Type {
	return triggersWhenPtrType
}

func (in *triggersWhenPtr) ToTriggersWhenPtrOutput() TriggersWhenPtrOutput {
	return pulumi.ToOutput(in).(TriggersWhenPtrOutput)
}

func (in *triggersWhenPtr) ToTriggersWhenPtrOutputWithContext(ctx context.Context) TriggersWhenPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TriggersWhenPtrOutput)
}

func (in *triggersWhenPtr) ToOutput(ctx context.Context) pulumix.Output[*TriggersWhen] {
	return pulumix.Output[*TriggersWhen]{
		OutputState: in.ToTriggersWhenPtrOutputWithContext(ctx).OutputState,
	}
}

func init() {
	pulumi.RegisterOutputType(AutomationRulePropertyArrayChangedConditionSupportedArrayTypeOutput{})
	pulumi.RegisterOutputType(AutomationRulePropertyArrayChangedConditionSupportedArrayTypePtrOutput{})
	pulumi.RegisterOutputType(AutomationRulePropertyArrayChangedConditionSupportedChangeTypeOutput{})
	pulumi.RegisterOutputType(AutomationRulePropertyArrayChangedConditionSupportedChangeTypePtrOutput{})
	pulumi.RegisterOutputType(AutomationRulePropertyChangedConditionSupportedChangedTypeOutput{})
	pulumi.RegisterOutputType(AutomationRulePropertyChangedConditionSupportedChangedTypePtrOutput{})
	pulumi.RegisterOutputType(AutomationRulePropertyChangedConditionSupportedPropertyTypeOutput{})
	pulumi.RegisterOutputType(AutomationRulePropertyChangedConditionSupportedPropertyTypePtrOutput{})
	pulumi.RegisterOutputType(AutomationRulePropertyConditionSupportedOperatorOutput{})
	pulumi.RegisterOutputType(AutomationRulePropertyConditionSupportedOperatorPtrOutput{})
	pulumi.RegisterOutputType(AutomationRulePropertyConditionSupportedPropertyOutput{})
	pulumi.RegisterOutputType(AutomationRulePropertyConditionSupportedPropertyPtrOutput{})
	pulumi.RegisterOutputType(DataTypeStateOutput{})
	pulumi.RegisterOutputType(DataTypeStatePtrOutput{})
	pulumi.RegisterOutputType(IncidentClassificationOutput{})
	pulumi.RegisterOutputType(IncidentClassificationPtrOutput{})
	pulumi.RegisterOutputType(IncidentClassificationReasonOutput{})
	pulumi.RegisterOutputType(IncidentClassificationReasonPtrOutput{})
	pulumi.RegisterOutputType(IncidentSeverityOutput{})
	pulumi.RegisterOutputType(IncidentSeverityPtrOutput{})
	pulumi.RegisterOutputType(IncidentStatusOutput{})
	pulumi.RegisterOutputType(IncidentStatusPtrOutput{})
	pulumi.RegisterOutputType(OperatorOutput{})
	pulumi.RegisterOutputType(OperatorPtrOutput{})
	pulumi.RegisterOutputType(OwnerTypeOutput{})
	pulumi.RegisterOutputType(OwnerTypePtrOutput{})
	pulumi.RegisterOutputType(SourceOutput{})
	pulumi.RegisterOutputType(SourcePtrOutput{})
	pulumi.RegisterOutputType(SourceKindOutput{})
	pulumi.RegisterOutputType(SourceKindPtrOutput{})
	pulumi.RegisterOutputType(SupportTierOutput{})
	pulumi.RegisterOutputType(SupportTierPtrOutput{})
	pulumi.RegisterOutputType(TriggersOnOutput{})
	pulumi.RegisterOutputType(TriggersOnPtrOutput{})
	pulumi.RegisterOutputType(TriggersWhenOutput{})
	pulumi.RegisterOutputType(TriggersWhenPtrOutput{})
}
