// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20240401preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// List of actions for a business application system.
func ListSystemActions(ctx *pulumi.Context, args *ListSystemActionsArgs, opts ...pulumi.InvokeOption) (*ListSystemActionsResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv ListSystemActionsResult
	err := ctx.Invoke("azure-native:securityinsights/v20240401preview:listSystemActions", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type ListSystemActionsArgs struct {
	// Business Application Agent Name
	AgentResourceName string `pulumi:"agentResourceName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The name of the system.
	SystemResourceName string `pulumi:"systemResourceName"`
	// The name of the workspace.
	WorkspaceName string `pulumi:"workspaceName"`
}

// List all actions for a system to perform.
type ListSystemActionsResult struct {
	// The link to fetch the next page of actions.
	NextLink *string `pulumi:"nextLink"`
	// Array of actions.
	Value []interface{} `pulumi:"value"`
}

func ListSystemActionsOutput(ctx *pulumi.Context, args ListSystemActionsOutputArgs, opts ...pulumi.InvokeOption) ListSystemActionsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (ListSystemActionsResultOutput, error) {
			args := v.(ListSystemActionsArgs)
			opts = utilities.PkgInvokeDefaultOpts(opts)
			var rv ListSystemActionsResult
			secret, err := ctx.InvokePackageRaw("azure-native:securityinsights/v20240401preview:listSystemActions", args, &rv, "", opts...)
			if err != nil {
				return ListSystemActionsResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(ListSystemActionsResultOutput)
			if secret {
				return pulumi.ToSecret(output).(ListSystemActionsResultOutput), nil
			}
			return output, nil
		}).(ListSystemActionsResultOutput)
}

type ListSystemActionsOutputArgs struct {
	// Business Application Agent Name
	AgentResourceName pulumi.StringInput `pulumi:"agentResourceName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
	// The name of the system.
	SystemResourceName pulumi.StringInput `pulumi:"systemResourceName"`
	// The name of the workspace.
	WorkspaceName pulumi.StringInput `pulumi:"workspaceName"`
}

func (ListSystemActionsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ListSystemActionsArgs)(nil)).Elem()
}

// List all actions for a system to perform.
type ListSystemActionsResultOutput struct{ *pulumi.OutputState }

func (ListSystemActionsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListSystemActionsResult)(nil)).Elem()
}

func (o ListSystemActionsResultOutput) ToListSystemActionsResultOutput() ListSystemActionsResultOutput {
	return o
}

func (o ListSystemActionsResultOutput) ToListSystemActionsResultOutputWithContext(ctx context.Context) ListSystemActionsResultOutput {
	return o
}

// The link to fetch the next page of actions.
func (o ListSystemActionsResultOutput) NextLink() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListSystemActionsResult) *string { return v.NextLink }).(pulumi.StringPtrOutput)
}

// Array of actions.
func (o ListSystemActionsResultOutput) Value() pulumi.ArrayOutput {
	return o.ApplyT(func(v ListSystemActionsResult) []interface{} { return v.Value }).(pulumi.ArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(ListSystemActionsResultOutput{})
}
