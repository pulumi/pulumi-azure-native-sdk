// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package servicelinker

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// a dryrun job resource
// Azure REST API version: 2022-11-01-preview.
//
// Other available API versions: 2023-04-01-preview, 2024-04-01.
type ConnectorDryrun struct {
	pulumi.CustomResourceState

	// The name of the resource
	Name pulumi.StringOutput `pulumi:"name"`
	// the preview of the operations for creation
	OperationPreviews DryrunOperationPreviewResponseArrayOutput `pulumi:"operationPreviews"`
	// The parameters of the dryrun
	Parameters CreateOrUpdateDryrunParametersResponsePtrOutput `pulumi:"parameters"`
	// the result of the dryrun
	PrerequisiteResults pulumi.ArrayOutput `pulumi:"prerequisiteResults"`
	// The provisioning state.
	ProvisioningState pulumi.StringOutput `pulumi:"provisioningState"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponseOutput `pulumi:"systemData"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewConnectorDryrun registers a new resource with the given unique name, arguments, and options.
func NewConnectorDryrun(ctx *pulumi.Context,
	name string, args *ConnectorDryrunArgs, opts ...pulumi.ResourceOption) (*ConnectorDryrun, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Location == nil {
		return nil, errors.New("invalid value for required argument 'Location'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:servicelinker/v20221101preview:ConnectorDryrun"),
		},
		{
			Type: pulumi.String("azure-native:servicelinker/v20230401preview:ConnectorDryrun"),
		},
		{
			Type: pulumi.String("azure-native:servicelinker/v20240401:ConnectorDryrun"),
		},
	})
	opts = append(opts, aliases)
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource ConnectorDryrun
	err := ctx.RegisterResource("azure-native:servicelinker:ConnectorDryrun", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetConnectorDryrun gets an existing ConnectorDryrun resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetConnectorDryrun(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ConnectorDryrunState, opts ...pulumi.ResourceOption) (*ConnectorDryrun, error) {
	var resource ConnectorDryrun
	err := ctx.ReadResource("azure-native:servicelinker:ConnectorDryrun", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ConnectorDryrun resources.
type connectorDryrunState struct {
}

type ConnectorDryrunState struct {
}

func (ConnectorDryrunState) ElementType() reflect.Type {
	return reflect.TypeOf((*connectorDryrunState)(nil)).Elem()
}

type connectorDryrunArgs struct {
	// The name of dryrun.
	DryrunName *string `pulumi:"dryrunName"`
	// The name of Azure region.
	Location string `pulumi:"location"`
	// The parameters of the dryrun
	Parameters *CreateOrUpdateDryrunParameters `pulumi:"parameters"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The ID of the target subscription.
	SubscriptionId *string `pulumi:"subscriptionId"`
}

// The set of arguments for constructing a ConnectorDryrun resource.
type ConnectorDryrunArgs struct {
	// The name of dryrun.
	DryrunName pulumi.StringPtrInput
	// The name of Azure region.
	Location pulumi.StringInput
	// The parameters of the dryrun
	Parameters CreateOrUpdateDryrunParametersPtrInput
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput
	// The ID of the target subscription.
	SubscriptionId pulumi.StringPtrInput
}

func (ConnectorDryrunArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*connectorDryrunArgs)(nil)).Elem()
}

type ConnectorDryrunInput interface {
	pulumi.Input

	ToConnectorDryrunOutput() ConnectorDryrunOutput
	ToConnectorDryrunOutputWithContext(ctx context.Context) ConnectorDryrunOutput
}

func (*ConnectorDryrun) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorDryrun)(nil)).Elem()
}

func (i *ConnectorDryrun) ToConnectorDryrunOutput() ConnectorDryrunOutput {
	return i.ToConnectorDryrunOutputWithContext(context.Background())
}

func (i *ConnectorDryrun) ToConnectorDryrunOutputWithContext(ctx context.Context) ConnectorDryrunOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorDryrunOutput)
}

type ConnectorDryrunOutput struct{ *pulumi.OutputState }

func (ConnectorDryrunOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorDryrun)(nil)).Elem()
}

func (o ConnectorDryrunOutput) ToConnectorDryrunOutput() ConnectorDryrunOutput {
	return o
}

func (o ConnectorDryrunOutput) ToConnectorDryrunOutputWithContext(ctx context.Context) ConnectorDryrunOutput {
	return o
}

// The name of the resource
func (o ConnectorDryrunOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ConnectorDryrun) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// the preview of the operations for creation
func (o ConnectorDryrunOutput) OperationPreviews() DryrunOperationPreviewResponseArrayOutput {
	return o.ApplyT(func(v *ConnectorDryrun) DryrunOperationPreviewResponseArrayOutput { return v.OperationPreviews }).(DryrunOperationPreviewResponseArrayOutput)
}

// The parameters of the dryrun
func (o ConnectorDryrunOutput) Parameters() CreateOrUpdateDryrunParametersResponsePtrOutput {
	return o.ApplyT(func(v *ConnectorDryrun) CreateOrUpdateDryrunParametersResponsePtrOutput { return v.Parameters }).(CreateOrUpdateDryrunParametersResponsePtrOutput)
}

// the result of the dryrun
func (o ConnectorDryrunOutput) PrerequisiteResults() pulumi.ArrayOutput {
	return o.ApplyT(func(v *ConnectorDryrun) pulumi.ArrayOutput { return v.PrerequisiteResults }).(pulumi.ArrayOutput)
}

// The provisioning state.
func (o ConnectorDryrunOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v *ConnectorDryrun) pulumi.StringOutput { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o ConnectorDryrunOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v *ConnectorDryrun) SystemDataResponseOutput { return v.SystemData }).(SystemDataResponseOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o ConnectorDryrunOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *ConnectorDryrun) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(ConnectorDryrunOutput{})
}
