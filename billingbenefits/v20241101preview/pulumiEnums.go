// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20241101preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// List of applied scopes supported for discounts.
type DiscountAppliedScopeType string

const (
	DiscountAppliedScopeTypeBillingAccount = DiscountAppliedScopeType("BillingAccount")
	DiscountAppliedScopeTypeBillingProfile = DiscountAppliedScopeType("BillingProfile")
	DiscountAppliedScopeTypeCustomer       = DiscountAppliedScopeType("Customer")
)

func (DiscountAppliedScopeType) ElementType() reflect.Type {
	return reflect.TypeOf((*DiscountAppliedScopeType)(nil)).Elem()
}

func (e DiscountAppliedScopeType) ToDiscountAppliedScopeTypeOutput() DiscountAppliedScopeTypeOutput {
	return pulumi.ToOutput(e).(DiscountAppliedScopeTypeOutput)
}

func (e DiscountAppliedScopeType) ToDiscountAppliedScopeTypeOutputWithContext(ctx context.Context) DiscountAppliedScopeTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DiscountAppliedScopeTypeOutput)
}

func (e DiscountAppliedScopeType) ToDiscountAppliedScopeTypePtrOutput() DiscountAppliedScopeTypePtrOutput {
	return e.ToDiscountAppliedScopeTypePtrOutputWithContext(context.Background())
}

func (e DiscountAppliedScopeType) ToDiscountAppliedScopeTypePtrOutputWithContext(ctx context.Context) DiscountAppliedScopeTypePtrOutput {
	return DiscountAppliedScopeType(e).ToDiscountAppliedScopeTypeOutputWithContext(ctx).ToDiscountAppliedScopeTypePtrOutputWithContext(ctx)
}

func (e DiscountAppliedScopeType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DiscountAppliedScopeType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DiscountAppliedScopeType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DiscountAppliedScopeType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DiscountAppliedScopeTypeOutput struct{ *pulumi.OutputState }

func (DiscountAppliedScopeTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DiscountAppliedScopeType)(nil)).Elem()
}

func (o DiscountAppliedScopeTypeOutput) ToDiscountAppliedScopeTypeOutput() DiscountAppliedScopeTypeOutput {
	return o
}

func (o DiscountAppliedScopeTypeOutput) ToDiscountAppliedScopeTypeOutputWithContext(ctx context.Context) DiscountAppliedScopeTypeOutput {
	return o
}

func (o DiscountAppliedScopeTypeOutput) ToDiscountAppliedScopeTypePtrOutput() DiscountAppliedScopeTypePtrOutput {
	return o.ToDiscountAppliedScopeTypePtrOutputWithContext(context.Background())
}

func (o DiscountAppliedScopeTypeOutput) ToDiscountAppliedScopeTypePtrOutputWithContext(ctx context.Context) DiscountAppliedScopeTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DiscountAppliedScopeType) *DiscountAppliedScopeType {
		return &v
	}).(DiscountAppliedScopeTypePtrOutput)
}

func (o DiscountAppliedScopeTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DiscountAppliedScopeTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DiscountAppliedScopeType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DiscountAppliedScopeTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DiscountAppliedScopeTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DiscountAppliedScopeType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DiscountAppliedScopeTypePtrOutput struct{ *pulumi.OutputState }

func (DiscountAppliedScopeTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DiscountAppliedScopeType)(nil)).Elem()
}

func (o DiscountAppliedScopeTypePtrOutput) ToDiscountAppliedScopeTypePtrOutput() DiscountAppliedScopeTypePtrOutput {
	return o
}

func (o DiscountAppliedScopeTypePtrOutput) ToDiscountAppliedScopeTypePtrOutputWithContext(ctx context.Context) DiscountAppliedScopeTypePtrOutput {
	return o
}

func (o DiscountAppliedScopeTypePtrOutput) Elem() DiscountAppliedScopeTypeOutput {
	return o.ApplyT(func(v *DiscountAppliedScopeType) DiscountAppliedScopeType {
		if v != nil {
			return *v
		}
		var ret DiscountAppliedScopeType
		return ret
	}).(DiscountAppliedScopeTypeOutput)
}

func (o DiscountAppliedScopeTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DiscountAppliedScopeTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DiscountAppliedScopeType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DiscountAppliedScopeTypeInput is an input type that accepts values of the DiscountAppliedScopeType enum
// A concrete instance of `DiscountAppliedScopeTypeInput` can be one of the following:
//
//	DiscountAppliedScopeTypeBillingAccount
//	DiscountAppliedScopeTypeBillingProfile
//	DiscountAppliedScopeTypeCustomer
type DiscountAppliedScopeTypeInput interface {
	pulumi.Input

	ToDiscountAppliedScopeTypeOutput() DiscountAppliedScopeTypeOutput
	ToDiscountAppliedScopeTypeOutputWithContext(context.Context) DiscountAppliedScopeTypeOutput
}

var discountAppliedScopeTypePtrType = reflect.TypeOf((**DiscountAppliedScopeType)(nil)).Elem()

type DiscountAppliedScopeTypePtrInput interface {
	pulumi.Input

	ToDiscountAppliedScopeTypePtrOutput() DiscountAppliedScopeTypePtrOutput
	ToDiscountAppliedScopeTypePtrOutputWithContext(context.Context) DiscountAppliedScopeTypePtrOutput
}

type discountAppliedScopeTypePtr string

func DiscountAppliedScopeTypePtr(v string) DiscountAppliedScopeTypePtrInput {
	return (*discountAppliedScopeTypePtr)(&v)
}

func (*discountAppliedScopeTypePtr) ElementType() reflect.Type {
	return discountAppliedScopeTypePtrType
}

func (in *discountAppliedScopeTypePtr) ToDiscountAppliedScopeTypePtrOutput() DiscountAppliedScopeTypePtrOutput {
	return pulumi.ToOutput(in).(DiscountAppliedScopeTypePtrOutput)
}

func (in *discountAppliedScopeTypePtr) ToDiscountAppliedScopeTypePtrOutputWithContext(ctx context.Context) DiscountAppliedScopeTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DiscountAppliedScopeTypePtrOutput)
}

// This defines whether the entity being created is primary or affiliate. Supported values: primary, affiliate. Validation: Required, must match one of the 2 values.
type DiscountEntityType string

const (
	DiscountEntityTypePrimary   = DiscountEntityType("Primary")
	DiscountEntityTypeAffiliate = DiscountEntityType("Affiliate")
)

func (DiscountEntityType) ElementType() reflect.Type {
	return reflect.TypeOf((*DiscountEntityType)(nil)).Elem()
}

func (e DiscountEntityType) ToDiscountEntityTypeOutput() DiscountEntityTypeOutput {
	return pulumi.ToOutput(e).(DiscountEntityTypeOutput)
}

func (e DiscountEntityType) ToDiscountEntityTypeOutputWithContext(ctx context.Context) DiscountEntityTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DiscountEntityTypeOutput)
}

func (e DiscountEntityType) ToDiscountEntityTypePtrOutput() DiscountEntityTypePtrOutput {
	return e.ToDiscountEntityTypePtrOutputWithContext(context.Background())
}

func (e DiscountEntityType) ToDiscountEntityTypePtrOutputWithContext(ctx context.Context) DiscountEntityTypePtrOutput {
	return DiscountEntityType(e).ToDiscountEntityTypeOutputWithContext(ctx).ToDiscountEntityTypePtrOutputWithContext(ctx)
}

func (e DiscountEntityType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DiscountEntityType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DiscountEntityType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DiscountEntityType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DiscountEntityTypeOutput struct{ *pulumi.OutputState }

func (DiscountEntityTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DiscountEntityType)(nil)).Elem()
}

func (o DiscountEntityTypeOutput) ToDiscountEntityTypeOutput() DiscountEntityTypeOutput {
	return o
}

func (o DiscountEntityTypeOutput) ToDiscountEntityTypeOutputWithContext(ctx context.Context) DiscountEntityTypeOutput {
	return o
}

func (o DiscountEntityTypeOutput) ToDiscountEntityTypePtrOutput() DiscountEntityTypePtrOutput {
	return o.ToDiscountEntityTypePtrOutputWithContext(context.Background())
}

func (o DiscountEntityTypeOutput) ToDiscountEntityTypePtrOutputWithContext(ctx context.Context) DiscountEntityTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DiscountEntityType) *DiscountEntityType {
		return &v
	}).(DiscountEntityTypePtrOutput)
}

func (o DiscountEntityTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DiscountEntityTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DiscountEntityType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DiscountEntityTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DiscountEntityTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DiscountEntityType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DiscountEntityTypePtrOutput struct{ *pulumi.OutputState }

func (DiscountEntityTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DiscountEntityType)(nil)).Elem()
}

func (o DiscountEntityTypePtrOutput) ToDiscountEntityTypePtrOutput() DiscountEntityTypePtrOutput {
	return o
}

func (o DiscountEntityTypePtrOutput) ToDiscountEntityTypePtrOutputWithContext(ctx context.Context) DiscountEntityTypePtrOutput {
	return o
}

func (o DiscountEntityTypePtrOutput) Elem() DiscountEntityTypeOutput {
	return o.ApplyT(func(v *DiscountEntityType) DiscountEntityType {
		if v != nil {
			return *v
		}
		var ret DiscountEntityType
		return ret
	}).(DiscountEntityTypeOutput)
}

func (o DiscountEntityTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DiscountEntityTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DiscountEntityType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DiscountEntityTypeInput is an input type that accepts values of the DiscountEntityType enum
// A concrete instance of `DiscountEntityTypeInput` can be one of the following:
//
//	DiscountEntityTypePrimary
//	DiscountEntityTypeAffiliate
type DiscountEntityTypeInput interface {
	pulumi.Input

	ToDiscountEntityTypeOutput() DiscountEntityTypeOutput
	ToDiscountEntityTypeOutputWithContext(context.Context) DiscountEntityTypeOutput
}

var discountEntityTypePtrType = reflect.TypeOf((**DiscountEntityType)(nil)).Elem()

type DiscountEntityTypePtrInput interface {
	pulumi.Input

	ToDiscountEntityTypePtrOutput() DiscountEntityTypePtrOutput
	ToDiscountEntityTypePtrOutputWithContext(context.Context) DiscountEntityTypePtrOutput
}

type discountEntityTypePtr string

func DiscountEntityTypePtr(v string) DiscountEntityTypePtrInput {
	return (*discountEntityTypePtr)(&v)
}

func (*discountEntityTypePtr) ElementType() reflect.Type {
	return discountEntityTypePtrType
}

func (in *discountEntityTypePtr) ToDiscountEntityTypePtrOutput() DiscountEntityTypePtrOutput {
	return pulumi.ToOutput(in).(DiscountEntityTypePtrOutput)
}

func (in *discountEntityTypePtr) ToDiscountEntityTypePtrOutputWithContext(ctx context.Context) DiscountEntityTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DiscountEntityTypePtrOutput)
}

// Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
type ManagedServiceIdentityType string

const (
	ManagedServiceIdentityTypeNone                         = ManagedServiceIdentityType("None")
	ManagedServiceIdentityTypeSystemAssigned               = ManagedServiceIdentityType("SystemAssigned")
	ManagedServiceIdentityTypeUserAssigned                 = ManagedServiceIdentityType("UserAssigned")
	ManagedServiceIdentityType_SystemAssigned_UserAssigned = ManagedServiceIdentityType("SystemAssigned,UserAssigned")
)

func (ManagedServiceIdentityType) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedServiceIdentityType)(nil)).Elem()
}

func (e ManagedServiceIdentityType) ToManagedServiceIdentityTypeOutput() ManagedServiceIdentityTypeOutput {
	return pulumi.ToOutput(e).(ManagedServiceIdentityTypeOutput)
}

func (e ManagedServiceIdentityType) ToManagedServiceIdentityTypeOutputWithContext(ctx context.Context) ManagedServiceIdentityTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ManagedServiceIdentityTypeOutput)
}

func (e ManagedServiceIdentityType) ToManagedServiceIdentityTypePtrOutput() ManagedServiceIdentityTypePtrOutput {
	return e.ToManagedServiceIdentityTypePtrOutputWithContext(context.Background())
}

func (e ManagedServiceIdentityType) ToManagedServiceIdentityTypePtrOutputWithContext(ctx context.Context) ManagedServiceIdentityTypePtrOutput {
	return ManagedServiceIdentityType(e).ToManagedServiceIdentityTypeOutputWithContext(ctx).ToManagedServiceIdentityTypePtrOutputWithContext(ctx)
}

func (e ManagedServiceIdentityType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ManagedServiceIdentityType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ManagedServiceIdentityType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ManagedServiceIdentityType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ManagedServiceIdentityTypeOutput struct{ *pulumi.OutputState }

func (ManagedServiceIdentityTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedServiceIdentityType)(nil)).Elem()
}

func (o ManagedServiceIdentityTypeOutput) ToManagedServiceIdentityTypeOutput() ManagedServiceIdentityTypeOutput {
	return o
}

func (o ManagedServiceIdentityTypeOutput) ToManagedServiceIdentityTypeOutputWithContext(ctx context.Context) ManagedServiceIdentityTypeOutput {
	return o
}

func (o ManagedServiceIdentityTypeOutput) ToManagedServiceIdentityTypePtrOutput() ManagedServiceIdentityTypePtrOutput {
	return o.ToManagedServiceIdentityTypePtrOutputWithContext(context.Background())
}

func (o ManagedServiceIdentityTypeOutput) ToManagedServiceIdentityTypePtrOutputWithContext(ctx context.Context) ManagedServiceIdentityTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ManagedServiceIdentityType) *ManagedServiceIdentityType {
		return &v
	}).(ManagedServiceIdentityTypePtrOutput)
}

func (o ManagedServiceIdentityTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ManagedServiceIdentityTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ManagedServiceIdentityType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ManagedServiceIdentityTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ManagedServiceIdentityTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ManagedServiceIdentityType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ManagedServiceIdentityTypePtrOutput struct{ *pulumi.OutputState }

func (ManagedServiceIdentityTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedServiceIdentityType)(nil)).Elem()
}

func (o ManagedServiceIdentityTypePtrOutput) ToManagedServiceIdentityTypePtrOutput() ManagedServiceIdentityTypePtrOutput {
	return o
}

func (o ManagedServiceIdentityTypePtrOutput) ToManagedServiceIdentityTypePtrOutputWithContext(ctx context.Context) ManagedServiceIdentityTypePtrOutput {
	return o
}

func (o ManagedServiceIdentityTypePtrOutput) Elem() ManagedServiceIdentityTypeOutput {
	return o.ApplyT(func(v *ManagedServiceIdentityType) ManagedServiceIdentityType {
		if v != nil {
			return *v
		}
		var ret ManagedServiceIdentityType
		return ret
	}).(ManagedServiceIdentityTypeOutput)
}

func (o ManagedServiceIdentityTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ManagedServiceIdentityTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ManagedServiceIdentityType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ManagedServiceIdentityTypeInput is an input type that accepts values of the ManagedServiceIdentityType enum
// A concrete instance of `ManagedServiceIdentityTypeInput` can be one of the following:
//
//	ManagedServiceIdentityTypeNone
//	ManagedServiceIdentityTypeSystemAssigned
//	ManagedServiceIdentityTypeUserAssigned
//	ManagedServiceIdentityType_SystemAssigned_UserAssigned
type ManagedServiceIdentityTypeInput interface {
	pulumi.Input

	ToManagedServiceIdentityTypeOutput() ManagedServiceIdentityTypeOutput
	ToManagedServiceIdentityTypeOutputWithContext(context.Context) ManagedServiceIdentityTypeOutput
}

var managedServiceIdentityTypePtrType = reflect.TypeOf((**ManagedServiceIdentityType)(nil)).Elem()

type ManagedServiceIdentityTypePtrInput interface {
	pulumi.Input

	ToManagedServiceIdentityTypePtrOutput() ManagedServiceIdentityTypePtrOutput
	ToManagedServiceIdentityTypePtrOutputWithContext(context.Context) ManagedServiceIdentityTypePtrOutput
}

type managedServiceIdentityTypePtr string

func ManagedServiceIdentityTypePtr(v string) ManagedServiceIdentityTypePtrInput {
	return (*managedServiceIdentityTypePtr)(&v)
}

func (*managedServiceIdentityTypePtr) ElementType() reflect.Type {
	return managedServiceIdentityTypePtrType
}

func (in *managedServiceIdentityTypePtr) ToManagedServiceIdentityTypePtrOutput() ManagedServiceIdentityTypePtrOutput {
	return pulumi.ToOutput(in).(ManagedServiceIdentityTypePtrOutput)
}

func (in *managedServiceIdentityTypePtr) ToManagedServiceIdentityTypePtrOutputWithContext(ctx context.Context) ManagedServiceIdentityTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ManagedServiceIdentityTypePtrOutput)
}

// This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.
type SkuTier string

const (
	SkuTierFree     = SkuTier("Free")
	SkuTierBasic    = SkuTier("Basic")
	SkuTierStandard = SkuTier("Standard")
	SkuTierPremium  = SkuTier("Premium")
)

func (SkuTier) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuTier)(nil)).Elem()
}

func (e SkuTier) ToSkuTierOutput() SkuTierOutput {
	return pulumi.ToOutput(e).(SkuTierOutput)
}

func (e SkuTier) ToSkuTierOutputWithContext(ctx context.Context) SkuTierOutput {
	return pulumi.ToOutputWithContext(ctx, e).(SkuTierOutput)
}

func (e SkuTier) ToSkuTierPtrOutput() SkuTierPtrOutput {
	return e.ToSkuTierPtrOutputWithContext(context.Background())
}

func (e SkuTier) ToSkuTierPtrOutputWithContext(ctx context.Context) SkuTierPtrOutput {
	return SkuTier(e).ToSkuTierOutputWithContext(ctx).ToSkuTierPtrOutputWithContext(ctx)
}

func (e SkuTier) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e SkuTier) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e SkuTier) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e SkuTier) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type SkuTierOutput struct{ *pulumi.OutputState }

func (SkuTierOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuTier)(nil)).Elem()
}

func (o SkuTierOutput) ToSkuTierOutput() SkuTierOutput {
	return o
}

func (o SkuTierOutput) ToSkuTierOutputWithContext(ctx context.Context) SkuTierOutput {
	return o
}

func (o SkuTierOutput) ToSkuTierPtrOutput() SkuTierPtrOutput {
	return o.ToSkuTierPtrOutputWithContext(context.Background())
}

func (o SkuTierOutput) ToSkuTierPtrOutputWithContext(ctx context.Context) SkuTierPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SkuTier) *SkuTier {
		return &v
	}).(SkuTierPtrOutput)
}

func (o SkuTierOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o SkuTierOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SkuTier) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o SkuTierOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SkuTierOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SkuTier) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type SkuTierPtrOutput struct{ *pulumi.OutputState }

func (SkuTierPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SkuTier)(nil)).Elem()
}

func (o SkuTierPtrOutput) ToSkuTierPtrOutput() SkuTierPtrOutput {
	return o
}

func (o SkuTierPtrOutput) ToSkuTierPtrOutputWithContext(ctx context.Context) SkuTierPtrOutput {
	return o
}

func (o SkuTierPtrOutput) Elem() SkuTierOutput {
	return o.ApplyT(func(v *SkuTier) SkuTier {
		if v != nil {
			return *v
		}
		var ret SkuTier
		return ret
	}).(SkuTierOutput)
}

func (o SkuTierPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SkuTierPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *SkuTier) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// SkuTierInput is an input type that accepts values of the SkuTier enum
// A concrete instance of `SkuTierInput` can be one of the following:
//
//	SkuTierFree
//	SkuTierBasic
//	SkuTierStandard
//	SkuTierPremium
type SkuTierInput interface {
	pulumi.Input

	ToSkuTierOutput() SkuTierOutput
	ToSkuTierOutputWithContext(context.Context) SkuTierOutput
}

var skuTierPtrType = reflect.TypeOf((**SkuTier)(nil)).Elem()

type SkuTierPtrInput interface {
	pulumi.Input

	ToSkuTierPtrOutput() SkuTierPtrOutput
	ToSkuTierPtrOutputWithContext(context.Context) SkuTierPtrOutput
}

type skuTierPtr string

func SkuTierPtr(v string) SkuTierPtrInput {
	return (*skuTierPtr)(&v)
}

func (*skuTierPtr) ElementType() reflect.Type {
	return skuTierPtrType
}

func (in *skuTierPtr) ToSkuTierPtrOutput() SkuTierPtrOutput {
	return pulumi.ToOutput(in).(SkuTierPtrOutput)
}

func (in *skuTierPtr) ToSkuTierPtrOutputWithContext(ctx context.Context) SkuTierPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(SkuTierPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(DiscountAppliedScopeTypeOutput{})
	pulumi.RegisterOutputType(DiscountAppliedScopeTypePtrOutput{})
	pulumi.RegisterOutputType(DiscountEntityTypeOutput{})
	pulumi.RegisterOutputType(DiscountEntityTypePtrOutput{})
	pulumi.RegisterOutputType(ManagedServiceIdentityTypeOutput{})
	pulumi.RegisterOutputType(ManagedServiceIdentityTypePtrOutput{})
	pulumi.RegisterOutputType(SkuTierOutput{})
	pulumi.RegisterOutputType(SkuTierPtrOutput{})
}
