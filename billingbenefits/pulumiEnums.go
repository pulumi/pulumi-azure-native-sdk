// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package billingbenefits

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The customer action on which the discount is applied. Supported values are Purchase, Consume, and Renew. Validation: Required, one of supported values.
type ApplyDiscountOn string

const (
	ApplyDiscountOnPurchase = ApplyDiscountOn("Purchase")
	ApplyDiscountOnConsume  = ApplyDiscountOn("Consume")
	ApplyDiscountOnRenew    = ApplyDiscountOn("Renew")
)

func (ApplyDiscountOn) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplyDiscountOn)(nil)).Elem()
}

func (e ApplyDiscountOn) ToApplyDiscountOnOutput() ApplyDiscountOnOutput {
	return pulumi.ToOutput(e).(ApplyDiscountOnOutput)
}

func (e ApplyDiscountOn) ToApplyDiscountOnOutputWithContext(ctx context.Context) ApplyDiscountOnOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ApplyDiscountOnOutput)
}

func (e ApplyDiscountOn) ToApplyDiscountOnPtrOutput() ApplyDiscountOnPtrOutput {
	return e.ToApplyDiscountOnPtrOutputWithContext(context.Background())
}

func (e ApplyDiscountOn) ToApplyDiscountOnPtrOutputWithContext(ctx context.Context) ApplyDiscountOnPtrOutput {
	return ApplyDiscountOn(e).ToApplyDiscountOnOutputWithContext(ctx).ToApplyDiscountOnPtrOutputWithContext(ctx)
}

func (e ApplyDiscountOn) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ApplyDiscountOn) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ApplyDiscountOn) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ApplyDiscountOn) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ApplyDiscountOnOutput struct{ *pulumi.OutputState }

func (ApplyDiscountOnOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplyDiscountOn)(nil)).Elem()
}

func (o ApplyDiscountOnOutput) ToApplyDiscountOnOutput() ApplyDiscountOnOutput {
	return o
}

func (o ApplyDiscountOnOutput) ToApplyDiscountOnOutputWithContext(ctx context.Context) ApplyDiscountOnOutput {
	return o
}

func (o ApplyDiscountOnOutput) ToApplyDiscountOnPtrOutput() ApplyDiscountOnPtrOutput {
	return o.ToApplyDiscountOnPtrOutputWithContext(context.Background())
}

func (o ApplyDiscountOnOutput) ToApplyDiscountOnPtrOutputWithContext(ctx context.Context) ApplyDiscountOnPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApplyDiscountOn) *ApplyDiscountOn {
		return &v
	}).(ApplyDiscountOnPtrOutput)
}

func (o ApplyDiscountOnOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ApplyDiscountOnOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ApplyDiscountOn) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ApplyDiscountOnOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ApplyDiscountOnOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ApplyDiscountOn) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ApplyDiscountOnPtrOutput struct{ *pulumi.OutputState }

func (ApplyDiscountOnPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplyDiscountOn)(nil)).Elem()
}

func (o ApplyDiscountOnPtrOutput) ToApplyDiscountOnPtrOutput() ApplyDiscountOnPtrOutput {
	return o
}

func (o ApplyDiscountOnPtrOutput) ToApplyDiscountOnPtrOutputWithContext(ctx context.Context) ApplyDiscountOnPtrOutput {
	return o
}

func (o ApplyDiscountOnPtrOutput) Elem() ApplyDiscountOnOutput {
	return o.ApplyT(func(v *ApplyDiscountOn) ApplyDiscountOn {
		if v != nil {
			return *v
		}
		var ret ApplyDiscountOn
		return ret
	}).(ApplyDiscountOnOutput)
}

func (o ApplyDiscountOnPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ApplyDiscountOnPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ApplyDiscountOn) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ApplyDiscountOnInput is an input type that accepts values of the ApplyDiscountOn enum
// A concrete instance of `ApplyDiscountOnInput` can be one of the following:
//
//	ApplyDiscountOnPurchase
//	ApplyDiscountOnConsume
//	ApplyDiscountOnRenew
type ApplyDiscountOnInput interface {
	pulumi.Input

	ToApplyDiscountOnOutput() ApplyDiscountOnOutput
	ToApplyDiscountOnOutputWithContext(context.Context) ApplyDiscountOnOutput
}

var applyDiscountOnPtrType = reflect.TypeOf((**ApplyDiscountOn)(nil)).Elem()

type ApplyDiscountOnPtrInput interface {
	pulumi.Input

	ToApplyDiscountOnPtrOutput() ApplyDiscountOnPtrOutput
	ToApplyDiscountOnPtrOutputWithContext(context.Context) ApplyDiscountOnPtrOutput
}

type applyDiscountOnPtr string

func ApplyDiscountOnPtr(v string) ApplyDiscountOnPtrInput {
	return (*applyDiscountOnPtr)(&v)
}

func (*applyDiscountOnPtr) ElementType() reflect.Type {
	return applyDiscountOnPtrType
}

func (in *applyDiscountOnPtr) ToApplyDiscountOnPtrOutput() ApplyDiscountOnPtrOutput {
	return pulumi.ToOutput(in).(ApplyDiscountOnPtrOutput)
}

func (in *applyDiscountOnPtr) ToApplyDiscountOnPtrOutputWithContext(ctx context.Context) ApplyDiscountOnPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ApplyDiscountOnPtrOutput)
}

// List of applied scopes supported for discounts.
type DiscountAppliedScopeType string

const (
	DiscountAppliedScopeTypeBillingAccount = DiscountAppliedScopeType("BillingAccount")
	DiscountAppliedScopeTypeBillingProfile = DiscountAppliedScopeType("BillingProfile")
	DiscountAppliedScopeTypeCustomer       = DiscountAppliedScopeType("Customer")
)

func (DiscountAppliedScopeType) ElementType() reflect.Type {
	return reflect.TypeOf((*DiscountAppliedScopeType)(nil)).Elem()
}

func (e DiscountAppliedScopeType) ToDiscountAppliedScopeTypeOutput() DiscountAppliedScopeTypeOutput {
	return pulumi.ToOutput(e).(DiscountAppliedScopeTypeOutput)
}

func (e DiscountAppliedScopeType) ToDiscountAppliedScopeTypeOutputWithContext(ctx context.Context) DiscountAppliedScopeTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DiscountAppliedScopeTypeOutput)
}

func (e DiscountAppliedScopeType) ToDiscountAppliedScopeTypePtrOutput() DiscountAppliedScopeTypePtrOutput {
	return e.ToDiscountAppliedScopeTypePtrOutputWithContext(context.Background())
}

func (e DiscountAppliedScopeType) ToDiscountAppliedScopeTypePtrOutputWithContext(ctx context.Context) DiscountAppliedScopeTypePtrOutput {
	return DiscountAppliedScopeType(e).ToDiscountAppliedScopeTypeOutputWithContext(ctx).ToDiscountAppliedScopeTypePtrOutputWithContext(ctx)
}

func (e DiscountAppliedScopeType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DiscountAppliedScopeType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DiscountAppliedScopeType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DiscountAppliedScopeType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DiscountAppliedScopeTypeOutput struct{ *pulumi.OutputState }

func (DiscountAppliedScopeTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DiscountAppliedScopeType)(nil)).Elem()
}

func (o DiscountAppliedScopeTypeOutput) ToDiscountAppliedScopeTypeOutput() DiscountAppliedScopeTypeOutput {
	return o
}

func (o DiscountAppliedScopeTypeOutput) ToDiscountAppliedScopeTypeOutputWithContext(ctx context.Context) DiscountAppliedScopeTypeOutput {
	return o
}

func (o DiscountAppliedScopeTypeOutput) ToDiscountAppliedScopeTypePtrOutput() DiscountAppliedScopeTypePtrOutput {
	return o.ToDiscountAppliedScopeTypePtrOutputWithContext(context.Background())
}

func (o DiscountAppliedScopeTypeOutput) ToDiscountAppliedScopeTypePtrOutputWithContext(ctx context.Context) DiscountAppliedScopeTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DiscountAppliedScopeType) *DiscountAppliedScopeType {
		return &v
	}).(DiscountAppliedScopeTypePtrOutput)
}

func (o DiscountAppliedScopeTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DiscountAppliedScopeTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DiscountAppliedScopeType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DiscountAppliedScopeTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DiscountAppliedScopeTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DiscountAppliedScopeType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DiscountAppliedScopeTypePtrOutput struct{ *pulumi.OutputState }

func (DiscountAppliedScopeTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DiscountAppliedScopeType)(nil)).Elem()
}

func (o DiscountAppliedScopeTypePtrOutput) ToDiscountAppliedScopeTypePtrOutput() DiscountAppliedScopeTypePtrOutput {
	return o
}

func (o DiscountAppliedScopeTypePtrOutput) ToDiscountAppliedScopeTypePtrOutputWithContext(ctx context.Context) DiscountAppliedScopeTypePtrOutput {
	return o
}

func (o DiscountAppliedScopeTypePtrOutput) Elem() DiscountAppliedScopeTypeOutput {
	return o.ApplyT(func(v *DiscountAppliedScopeType) DiscountAppliedScopeType {
		if v != nil {
			return *v
		}
		var ret DiscountAppliedScopeType
		return ret
	}).(DiscountAppliedScopeTypeOutput)
}

func (o DiscountAppliedScopeTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DiscountAppliedScopeTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DiscountAppliedScopeType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DiscountAppliedScopeTypeInput is an input type that accepts values of the DiscountAppliedScopeType enum
// A concrete instance of `DiscountAppliedScopeTypeInput` can be one of the following:
//
//	DiscountAppliedScopeTypeBillingAccount
//	DiscountAppliedScopeTypeBillingProfile
//	DiscountAppliedScopeTypeCustomer
type DiscountAppliedScopeTypeInput interface {
	pulumi.Input

	ToDiscountAppliedScopeTypeOutput() DiscountAppliedScopeTypeOutput
	ToDiscountAppliedScopeTypeOutputWithContext(context.Context) DiscountAppliedScopeTypeOutput
}

var discountAppliedScopeTypePtrType = reflect.TypeOf((**DiscountAppliedScopeType)(nil)).Elem()

type DiscountAppliedScopeTypePtrInput interface {
	pulumi.Input

	ToDiscountAppliedScopeTypePtrOutput() DiscountAppliedScopeTypePtrOutput
	ToDiscountAppliedScopeTypePtrOutputWithContext(context.Context) DiscountAppliedScopeTypePtrOutput
}

type discountAppliedScopeTypePtr string

func DiscountAppliedScopeTypePtr(v string) DiscountAppliedScopeTypePtrInput {
	return (*discountAppliedScopeTypePtr)(&v)
}

func (*discountAppliedScopeTypePtr) ElementType() reflect.Type {
	return discountAppliedScopeTypePtrType
}

func (in *discountAppliedScopeTypePtr) ToDiscountAppliedScopeTypePtrOutput() DiscountAppliedScopeTypePtrOutput {
	return pulumi.ToOutput(in).(DiscountAppliedScopeTypePtrOutput)
}

func (in *discountAppliedScopeTypePtr) ToDiscountAppliedScopeTypePtrOutputWithContext(ctx context.Context) DiscountAppliedScopeTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DiscountAppliedScopeTypePtrOutput)
}

// The discount combination rule when there are multiple applicable custom prices. Validation: Required. Supported values are Stackable and BestOf.
type DiscountCombinationRule string

const (
	DiscountCombinationRuleBestOf    = DiscountCombinationRule("BestOf")
	DiscountCombinationRuleStackable = DiscountCombinationRule("Stackable")
)

func (DiscountCombinationRule) ElementType() reflect.Type {
	return reflect.TypeOf((*DiscountCombinationRule)(nil)).Elem()
}

func (e DiscountCombinationRule) ToDiscountCombinationRuleOutput() DiscountCombinationRuleOutput {
	return pulumi.ToOutput(e).(DiscountCombinationRuleOutput)
}

func (e DiscountCombinationRule) ToDiscountCombinationRuleOutputWithContext(ctx context.Context) DiscountCombinationRuleOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DiscountCombinationRuleOutput)
}

func (e DiscountCombinationRule) ToDiscountCombinationRulePtrOutput() DiscountCombinationRulePtrOutput {
	return e.ToDiscountCombinationRulePtrOutputWithContext(context.Background())
}

func (e DiscountCombinationRule) ToDiscountCombinationRulePtrOutputWithContext(ctx context.Context) DiscountCombinationRulePtrOutput {
	return DiscountCombinationRule(e).ToDiscountCombinationRuleOutputWithContext(ctx).ToDiscountCombinationRulePtrOutputWithContext(ctx)
}

func (e DiscountCombinationRule) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DiscountCombinationRule) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DiscountCombinationRule) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DiscountCombinationRule) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DiscountCombinationRuleOutput struct{ *pulumi.OutputState }

func (DiscountCombinationRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DiscountCombinationRule)(nil)).Elem()
}

func (o DiscountCombinationRuleOutput) ToDiscountCombinationRuleOutput() DiscountCombinationRuleOutput {
	return o
}

func (o DiscountCombinationRuleOutput) ToDiscountCombinationRuleOutputWithContext(ctx context.Context) DiscountCombinationRuleOutput {
	return o
}

func (o DiscountCombinationRuleOutput) ToDiscountCombinationRulePtrOutput() DiscountCombinationRulePtrOutput {
	return o.ToDiscountCombinationRulePtrOutputWithContext(context.Background())
}

func (o DiscountCombinationRuleOutput) ToDiscountCombinationRulePtrOutputWithContext(ctx context.Context) DiscountCombinationRulePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DiscountCombinationRule) *DiscountCombinationRule {
		return &v
	}).(DiscountCombinationRulePtrOutput)
}

func (o DiscountCombinationRuleOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DiscountCombinationRuleOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DiscountCombinationRule) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DiscountCombinationRuleOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DiscountCombinationRuleOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DiscountCombinationRule) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DiscountCombinationRulePtrOutput struct{ *pulumi.OutputState }

func (DiscountCombinationRulePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DiscountCombinationRule)(nil)).Elem()
}

func (o DiscountCombinationRulePtrOutput) ToDiscountCombinationRulePtrOutput() DiscountCombinationRulePtrOutput {
	return o
}

func (o DiscountCombinationRulePtrOutput) ToDiscountCombinationRulePtrOutputWithContext(ctx context.Context) DiscountCombinationRulePtrOutput {
	return o
}

func (o DiscountCombinationRulePtrOutput) Elem() DiscountCombinationRuleOutput {
	return o.ApplyT(func(v *DiscountCombinationRule) DiscountCombinationRule {
		if v != nil {
			return *v
		}
		var ret DiscountCombinationRule
		return ret
	}).(DiscountCombinationRuleOutput)
}

func (o DiscountCombinationRulePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DiscountCombinationRulePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DiscountCombinationRule) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DiscountCombinationRuleInput is an input type that accepts values of the DiscountCombinationRule enum
// A concrete instance of `DiscountCombinationRuleInput` can be one of the following:
//
//	DiscountCombinationRuleBestOf
//	DiscountCombinationRuleStackable
type DiscountCombinationRuleInput interface {
	pulumi.Input

	ToDiscountCombinationRuleOutput() DiscountCombinationRuleOutput
	ToDiscountCombinationRuleOutputWithContext(context.Context) DiscountCombinationRuleOutput
}

var discountCombinationRulePtrType = reflect.TypeOf((**DiscountCombinationRule)(nil)).Elem()

type DiscountCombinationRulePtrInput interface {
	pulumi.Input

	ToDiscountCombinationRulePtrOutput() DiscountCombinationRulePtrOutput
	ToDiscountCombinationRulePtrOutputWithContext(context.Context) DiscountCombinationRulePtrOutput
}

type discountCombinationRulePtr string

func DiscountCombinationRulePtr(v string) DiscountCombinationRulePtrInput {
	return (*discountCombinationRulePtr)(&v)
}

func (*discountCombinationRulePtr) ElementType() reflect.Type {
	return discountCombinationRulePtrType
}

func (in *discountCombinationRulePtr) ToDiscountCombinationRulePtrOutput() DiscountCombinationRulePtrOutput {
	return pulumi.ToOutput(in).(DiscountCombinationRulePtrOutput)
}

func (in *discountCombinationRulePtr) ToDiscountCombinationRulePtrOutputWithContext(ctx context.Context) DiscountCombinationRulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DiscountCombinationRulePtrOutput)
}

// This defines whether the entity being created is primary or affiliate. Supported values: primary, affiliate. Validation: Required, must match one of the 2 values.
type DiscountEntityType string

const (
	DiscountEntityTypePrimary   = DiscountEntityType("Primary")
	DiscountEntityTypeAffiliate = DiscountEntityType("Affiliate")
)

// The type of the priceable node pricing rule. Validation: Required. Supported values are fixedPriceLock, fixedListPrice, and priceCeiling.
type DiscountRuleType string

const (
	DiscountRuleTypeFixedPriceLock = DiscountRuleType("FixedPriceLock")
	DiscountRuleTypeFixedListPrice = DiscountRuleType("FixedListPrice")
	DiscountRuleTypePriceCeiling   = DiscountRuleType("PriceCeiling")
)

func (DiscountRuleType) ElementType() reflect.Type {
	return reflect.TypeOf((*DiscountRuleType)(nil)).Elem()
}

func (e DiscountRuleType) ToDiscountRuleTypeOutput() DiscountRuleTypeOutput {
	return pulumi.ToOutput(e).(DiscountRuleTypeOutput)
}

func (e DiscountRuleType) ToDiscountRuleTypeOutputWithContext(ctx context.Context) DiscountRuleTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DiscountRuleTypeOutput)
}

func (e DiscountRuleType) ToDiscountRuleTypePtrOutput() DiscountRuleTypePtrOutput {
	return e.ToDiscountRuleTypePtrOutputWithContext(context.Background())
}

func (e DiscountRuleType) ToDiscountRuleTypePtrOutputWithContext(ctx context.Context) DiscountRuleTypePtrOutput {
	return DiscountRuleType(e).ToDiscountRuleTypeOutputWithContext(ctx).ToDiscountRuleTypePtrOutputWithContext(ctx)
}

func (e DiscountRuleType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DiscountRuleType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DiscountRuleType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DiscountRuleType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DiscountRuleTypeOutput struct{ *pulumi.OutputState }

func (DiscountRuleTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DiscountRuleType)(nil)).Elem()
}

func (o DiscountRuleTypeOutput) ToDiscountRuleTypeOutput() DiscountRuleTypeOutput {
	return o
}

func (o DiscountRuleTypeOutput) ToDiscountRuleTypeOutputWithContext(ctx context.Context) DiscountRuleTypeOutput {
	return o
}

func (o DiscountRuleTypeOutput) ToDiscountRuleTypePtrOutput() DiscountRuleTypePtrOutput {
	return o.ToDiscountRuleTypePtrOutputWithContext(context.Background())
}

func (o DiscountRuleTypeOutput) ToDiscountRuleTypePtrOutputWithContext(ctx context.Context) DiscountRuleTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DiscountRuleType) *DiscountRuleType {
		return &v
	}).(DiscountRuleTypePtrOutput)
}

func (o DiscountRuleTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DiscountRuleTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DiscountRuleType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DiscountRuleTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DiscountRuleTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DiscountRuleType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DiscountRuleTypePtrOutput struct{ *pulumi.OutputState }

func (DiscountRuleTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DiscountRuleType)(nil)).Elem()
}

func (o DiscountRuleTypePtrOutput) ToDiscountRuleTypePtrOutput() DiscountRuleTypePtrOutput {
	return o
}

func (o DiscountRuleTypePtrOutput) ToDiscountRuleTypePtrOutputWithContext(ctx context.Context) DiscountRuleTypePtrOutput {
	return o
}

func (o DiscountRuleTypePtrOutput) Elem() DiscountRuleTypeOutput {
	return o.ApplyT(func(v *DiscountRuleType) DiscountRuleType {
		if v != nil {
			return *v
		}
		var ret DiscountRuleType
		return ret
	}).(DiscountRuleTypeOutput)
}

func (o DiscountRuleTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DiscountRuleTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DiscountRuleType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DiscountRuleTypeInput is an input type that accepts values of the DiscountRuleType enum
// A concrete instance of `DiscountRuleTypeInput` can be one of the following:
//
//	DiscountRuleTypeFixedPriceLock
//	DiscountRuleTypeFixedListPrice
//	DiscountRuleTypePriceCeiling
type DiscountRuleTypeInput interface {
	pulumi.Input

	ToDiscountRuleTypeOutput() DiscountRuleTypeOutput
	ToDiscountRuleTypeOutputWithContext(context.Context) DiscountRuleTypeOutput
}

var discountRuleTypePtrType = reflect.TypeOf((**DiscountRuleType)(nil)).Elem()

type DiscountRuleTypePtrInput interface {
	pulumi.Input

	ToDiscountRuleTypePtrOutput() DiscountRuleTypePtrOutput
	ToDiscountRuleTypePtrOutputWithContext(context.Context) DiscountRuleTypePtrOutput
}

type discountRuleTypePtr string

func DiscountRuleTypePtr(v string) DiscountRuleTypePtrInput {
	return (*discountRuleTypePtr)(&v)
}

func (*discountRuleTypePtr) ElementType() reflect.Type {
	return discountRuleTypePtrType
}

func (in *discountRuleTypePtr) ToDiscountRuleTypePtrOutput() DiscountRuleTypePtrOutput {
	return pulumi.ToOutput(in).(DiscountRuleTypePtrOutput)
}

func (in *discountRuleTypePtr) ToDiscountRuleTypePtrOutputWithContext(ctx context.Context) DiscountRuleTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DiscountRuleTypePtrOutput)
}

// Defines the type of discount. Supported values are ProductFamily, Product, Sku, CustomPrice, and CustomPriceMultiCurrency.
type DiscountType string

const (
	DiscountTypeProductFamily            = DiscountType("ProductFamily")
	DiscountTypeProduct                  = DiscountType("Product")
	DiscountTypeSku                      = DiscountType("Sku")
	DiscountTypeCustomPrice              = DiscountType("CustomPrice")
	DiscountTypeCustomPriceMultiCurrency = DiscountType("CustomPriceMultiCurrency")
)

// Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
type ManagedServiceIdentityType string

const (
	ManagedServiceIdentityTypeNone                         = ManagedServiceIdentityType("None")
	ManagedServiceIdentityTypeSystemAssigned               = ManagedServiceIdentityType("SystemAssigned")
	ManagedServiceIdentityTypeUserAssigned                 = ManagedServiceIdentityType("UserAssigned")
	ManagedServiceIdentityType_SystemAssigned_UserAssigned = ManagedServiceIdentityType("SystemAssigned,UserAssigned")
)

func (ManagedServiceIdentityType) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedServiceIdentityType)(nil)).Elem()
}

func (e ManagedServiceIdentityType) ToManagedServiceIdentityTypeOutput() ManagedServiceIdentityTypeOutput {
	return pulumi.ToOutput(e).(ManagedServiceIdentityTypeOutput)
}

func (e ManagedServiceIdentityType) ToManagedServiceIdentityTypeOutputWithContext(ctx context.Context) ManagedServiceIdentityTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ManagedServiceIdentityTypeOutput)
}

func (e ManagedServiceIdentityType) ToManagedServiceIdentityTypePtrOutput() ManagedServiceIdentityTypePtrOutput {
	return e.ToManagedServiceIdentityTypePtrOutputWithContext(context.Background())
}

func (e ManagedServiceIdentityType) ToManagedServiceIdentityTypePtrOutputWithContext(ctx context.Context) ManagedServiceIdentityTypePtrOutput {
	return ManagedServiceIdentityType(e).ToManagedServiceIdentityTypeOutputWithContext(ctx).ToManagedServiceIdentityTypePtrOutputWithContext(ctx)
}

func (e ManagedServiceIdentityType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ManagedServiceIdentityType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ManagedServiceIdentityType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ManagedServiceIdentityType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ManagedServiceIdentityTypeOutput struct{ *pulumi.OutputState }

func (ManagedServiceIdentityTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedServiceIdentityType)(nil)).Elem()
}

func (o ManagedServiceIdentityTypeOutput) ToManagedServiceIdentityTypeOutput() ManagedServiceIdentityTypeOutput {
	return o
}

func (o ManagedServiceIdentityTypeOutput) ToManagedServiceIdentityTypeOutputWithContext(ctx context.Context) ManagedServiceIdentityTypeOutput {
	return o
}

func (o ManagedServiceIdentityTypeOutput) ToManagedServiceIdentityTypePtrOutput() ManagedServiceIdentityTypePtrOutput {
	return o.ToManagedServiceIdentityTypePtrOutputWithContext(context.Background())
}

func (o ManagedServiceIdentityTypeOutput) ToManagedServiceIdentityTypePtrOutputWithContext(ctx context.Context) ManagedServiceIdentityTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ManagedServiceIdentityType) *ManagedServiceIdentityType {
		return &v
	}).(ManagedServiceIdentityTypePtrOutput)
}

func (o ManagedServiceIdentityTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ManagedServiceIdentityTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ManagedServiceIdentityType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ManagedServiceIdentityTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ManagedServiceIdentityTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ManagedServiceIdentityType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ManagedServiceIdentityTypePtrOutput struct{ *pulumi.OutputState }

func (ManagedServiceIdentityTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedServiceIdentityType)(nil)).Elem()
}

func (o ManagedServiceIdentityTypePtrOutput) ToManagedServiceIdentityTypePtrOutput() ManagedServiceIdentityTypePtrOutput {
	return o
}

func (o ManagedServiceIdentityTypePtrOutput) ToManagedServiceIdentityTypePtrOutputWithContext(ctx context.Context) ManagedServiceIdentityTypePtrOutput {
	return o
}

func (o ManagedServiceIdentityTypePtrOutput) Elem() ManagedServiceIdentityTypeOutput {
	return o.ApplyT(func(v *ManagedServiceIdentityType) ManagedServiceIdentityType {
		if v != nil {
			return *v
		}
		var ret ManagedServiceIdentityType
		return ret
	}).(ManagedServiceIdentityTypeOutput)
}

func (o ManagedServiceIdentityTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ManagedServiceIdentityTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ManagedServiceIdentityType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ManagedServiceIdentityTypeInput is an input type that accepts values of the ManagedServiceIdentityType enum
// A concrete instance of `ManagedServiceIdentityTypeInput` can be one of the following:
//
//	ManagedServiceIdentityTypeNone
//	ManagedServiceIdentityTypeSystemAssigned
//	ManagedServiceIdentityTypeUserAssigned
//	ManagedServiceIdentityType_SystemAssigned_UserAssigned
type ManagedServiceIdentityTypeInput interface {
	pulumi.Input

	ToManagedServiceIdentityTypeOutput() ManagedServiceIdentityTypeOutput
	ToManagedServiceIdentityTypeOutputWithContext(context.Context) ManagedServiceIdentityTypeOutput
}

var managedServiceIdentityTypePtrType = reflect.TypeOf((**ManagedServiceIdentityType)(nil)).Elem()

type ManagedServiceIdentityTypePtrInput interface {
	pulumi.Input

	ToManagedServiceIdentityTypePtrOutput() ManagedServiceIdentityTypePtrOutput
	ToManagedServiceIdentityTypePtrOutputWithContext(context.Context) ManagedServiceIdentityTypePtrOutput
}

type managedServiceIdentityTypePtr string

func ManagedServiceIdentityTypePtr(v string) ManagedServiceIdentityTypePtrInput {
	return (*managedServiceIdentityTypePtr)(&v)
}

func (*managedServiceIdentityTypePtr) ElementType() reflect.Type {
	return managedServiceIdentityTypePtrType
}

func (in *managedServiceIdentityTypePtr) ToManagedServiceIdentityTypePtrOutput() ManagedServiceIdentityTypePtrOutput {
	return pulumi.ToOutput(in).(ManagedServiceIdentityTypePtrOutput)
}

func (in *managedServiceIdentityTypePtr) ToManagedServiceIdentityTypePtrOutputWithContext(ctx context.Context) ManagedServiceIdentityTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ManagedServiceIdentityTypePtrOutput)
}

// Supported values: Protected, Locked
type PricingPolicy string

const (
	PricingPolicyProtected = PricingPolicy("Protected")
	PricingPolicyLocked    = PricingPolicy("Locked")
)

func (PricingPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((*PricingPolicy)(nil)).Elem()
}

func (e PricingPolicy) ToPricingPolicyOutput() PricingPolicyOutput {
	return pulumi.ToOutput(e).(PricingPolicyOutput)
}

func (e PricingPolicy) ToPricingPolicyOutputWithContext(ctx context.Context) PricingPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, e).(PricingPolicyOutput)
}

func (e PricingPolicy) ToPricingPolicyPtrOutput() PricingPolicyPtrOutput {
	return e.ToPricingPolicyPtrOutputWithContext(context.Background())
}

func (e PricingPolicy) ToPricingPolicyPtrOutputWithContext(ctx context.Context) PricingPolicyPtrOutput {
	return PricingPolicy(e).ToPricingPolicyOutputWithContext(ctx).ToPricingPolicyPtrOutputWithContext(ctx)
}

func (e PricingPolicy) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e PricingPolicy) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e PricingPolicy) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e PricingPolicy) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type PricingPolicyOutput struct{ *pulumi.OutputState }

func (PricingPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PricingPolicy)(nil)).Elem()
}

func (o PricingPolicyOutput) ToPricingPolicyOutput() PricingPolicyOutput {
	return o
}

func (o PricingPolicyOutput) ToPricingPolicyOutputWithContext(ctx context.Context) PricingPolicyOutput {
	return o
}

func (o PricingPolicyOutput) ToPricingPolicyPtrOutput() PricingPolicyPtrOutput {
	return o.ToPricingPolicyPtrOutputWithContext(context.Background())
}

func (o PricingPolicyOutput) ToPricingPolicyPtrOutputWithContext(ctx context.Context) PricingPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PricingPolicy) *PricingPolicy {
		return &v
	}).(PricingPolicyPtrOutput)
}

func (o PricingPolicyOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o PricingPolicyOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PricingPolicy) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o PricingPolicyOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PricingPolicyOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PricingPolicy) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type PricingPolicyPtrOutput struct{ *pulumi.OutputState }

func (PricingPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PricingPolicy)(nil)).Elem()
}

func (o PricingPolicyPtrOutput) ToPricingPolicyPtrOutput() PricingPolicyPtrOutput {
	return o
}

func (o PricingPolicyPtrOutput) ToPricingPolicyPtrOutputWithContext(ctx context.Context) PricingPolicyPtrOutput {
	return o
}

func (o PricingPolicyPtrOutput) Elem() PricingPolicyOutput {
	return o.ApplyT(func(v *PricingPolicy) PricingPolicy {
		if v != nil {
			return *v
		}
		var ret PricingPolicy
		return ret
	}).(PricingPolicyOutput)
}

func (o PricingPolicyPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PricingPolicyPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *PricingPolicy) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// PricingPolicyInput is an input type that accepts values of the PricingPolicy enum
// A concrete instance of `PricingPolicyInput` can be one of the following:
//
//	PricingPolicyProtected
//	PricingPolicyLocked
type PricingPolicyInput interface {
	pulumi.Input

	ToPricingPolicyOutput() PricingPolicyOutput
	ToPricingPolicyOutputWithContext(context.Context) PricingPolicyOutput
}

var pricingPolicyPtrType = reflect.TypeOf((**PricingPolicy)(nil)).Elem()

type PricingPolicyPtrInput interface {
	pulumi.Input

	ToPricingPolicyPtrOutput() PricingPolicyPtrOutput
	ToPricingPolicyPtrOutputWithContext(context.Context) PricingPolicyPtrOutput
}

type pricingPolicyPtr string

func PricingPolicyPtr(v string) PricingPolicyPtrInput {
	return (*pricingPolicyPtr)(&v)
}

func (*pricingPolicyPtr) ElementType() reflect.Type {
	return pricingPolicyPtrType
}

func (in *pricingPolicyPtr) ToPricingPolicyPtrOutput() PricingPolicyPtrOutput {
	return pulumi.ToOutput(in).(PricingPolicyPtrOutput)
}

func (in *pricingPolicyPtr) ToPricingPolicyPtrOutputWithContext(ctx context.Context) PricingPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(PricingPolicyPtrOutput)
}

// This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.
type SkuTier string

const (
	SkuTierFree     = SkuTier("Free")
	SkuTierBasic    = SkuTier("Basic")
	SkuTierStandard = SkuTier("Standard")
	SkuTierPremium  = SkuTier("Premium")
)

func (SkuTier) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuTier)(nil)).Elem()
}

func (e SkuTier) ToSkuTierOutput() SkuTierOutput {
	return pulumi.ToOutput(e).(SkuTierOutput)
}

func (e SkuTier) ToSkuTierOutputWithContext(ctx context.Context) SkuTierOutput {
	return pulumi.ToOutputWithContext(ctx, e).(SkuTierOutput)
}

func (e SkuTier) ToSkuTierPtrOutput() SkuTierPtrOutput {
	return e.ToSkuTierPtrOutputWithContext(context.Background())
}

func (e SkuTier) ToSkuTierPtrOutputWithContext(ctx context.Context) SkuTierPtrOutput {
	return SkuTier(e).ToSkuTierOutputWithContext(ctx).ToSkuTierPtrOutputWithContext(ctx)
}

func (e SkuTier) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e SkuTier) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e SkuTier) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e SkuTier) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type SkuTierOutput struct{ *pulumi.OutputState }

func (SkuTierOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuTier)(nil)).Elem()
}

func (o SkuTierOutput) ToSkuTierOutput() SkuTierOutput {
	return o
}

func (o SkuTierOutput) ToSkuTierOutputWithContext(ctx context.Context) SkuTierOutput {
	return o
}

func (o SkuTierOutput) ToSkuTierPtrOutput() SkuTierPtrOutput {
	return o.ToSkuTierPtrOutputWithContext(context.Background())
}

func (o SkuTierOutput) ToSkuTierPtrOutputWithContext(ctx context.Context) SkuTierPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SkuTier) *SkuTier {
		return &v
	}).(SkuTierPtrOutput)
}

func (o SkuTierOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o SkuTierOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SkuTier) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o SkuTierOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SkuTierOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SkuTier) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type SkuTierPtrOutput struct{ *pulumi.OutputState }

func (SkuTierPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SkuTier)(nil)).Elem()
}

func (o SkuTierPtrOutput) ToSkuTierPtrOutput() SkuTierPtrOutput {
	return o
}

func (o SkuTierPtrOutput) ToSkuTierPtrOutputWithContext(ctx context.Context) SkuTierPtrOutput {
	return o
}

func (o SkuTierPtrOutput) Elem() SkuTierOutput {
	return o.ApplyT(func(v *SkuTier) SkuTier {
		if v != nil {
			return *v
		}
		var ret SkuTier
		return ret
	}).(SkuTierOutput)
}

func (o SkuTierPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SkuTierPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *SkuTier) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// SkuTierInput is an input type that accepts values of the SkuTier enum
// A concrete instance of `SkuTierInput` can be one of the following:
//
//	SkuTierFree
//	SkuTierBasic
//	SkuTierStandard
//	SkuTierPremium
type SkuTierInput interface {
	pulumi.Input

	ToSkuTierOutput() SkuTierOutput
	ToSkuTierOutputWithContext(context.Context) SkuTierOutput
}

var skuTierPtrType = reflect.TypeOf((**SkuTier)(nil)).Elem()

type SkuTierPtrInput interface {
	pulumi.Input

	ToSkuTierPtrOutput() SkuTierPtrOutput
	ToSkuTierPtrOutputWithContext(context.Context) SkuTierPtrOutput
}

type skuTierPtr string

func SkuTierPtr(v string) SkuTierPtrInput {
	return (*skuTierPtr)(&v)
}

func (*skuTierPtr) ElementType() reflect.Type {
	return skuTierPtrType
}

func (in *skuTierPtr) ToSkuTierPtrOutput() SkuTierPtrOutput {
	return pulumi.ToOutput(in).(SkuTierPtrOutput)
}

func (in *skuTierPtr) ToSkuTierPtrOutputWithContext(ctx context.Context) SkuTierPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(SkuTierPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(ApplyDiscountOnOutput{})
	pulumi.RegisterOutputType(ApplyDiscountOnPtrOutput{})
	pulumi.RegisterOutputType(DiscountAppliedScopeTypeOutput{})
	pulumi.RegisterOutputType(DiscountAppliedScopeTypePtrOutput{})
	pulumi.RegisterOutputType(DiscountCombinationRuleOutput{})
	pulumi.RegisterOutputType(DiscountCombinationRulePtrOutput{})
	pulumi.RegisterOutputType(DiscountRuleTypeOutput{})
	pulumi.RegisterOutputType(DiscountRuleTypePtrOutput{})
	pulumi.RegisterOutputType(ManagedServiceIdentityTypeOutput{})
	pulumi.RegisterOutputType(ManagedServiceIdentityTypePtrOutput{})
	pulumi.RegisterOutputType(PricingPolicyOutput{})
	pulumi.RegisterOutputType(PricingPolicyPtrOutput{})
	pulumi.RegisterOutputType(SkuTierOutput{})
	pulumi.RegisterOutputType(SkuTierPtrOutput{})
}
