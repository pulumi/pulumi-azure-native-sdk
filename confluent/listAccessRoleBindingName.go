// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package confluent

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v3/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Organization role bindings
//
// Uses Azure REST API version 2024-07-01.
//
// Other available API versions: 2024-02-13. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native confluent [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
func ListAccessRoleBindingName(ctx *pulumi.Context, args *ListAccessRoleBindingNameArgs, opts ...pulumi.InvokeOption) (*ListAccessRoleBindingNameResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv ListAccessRoleBindingNameResult
	err := ctx.Invoke("azure-native:confluent:listAccessRoleBindingName", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type ListAccessRoleBindingNameArgs struct {
	// Organization resource name
	OrganizationName string `pulumi:"organizationName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Search filters for the request
	SearchFilters map[string]string `pulumi:"searchFilters"`
}

// Details of the role binding names returned on successful response
type ListAccessRoleBindingNameResult struct {
	// List of role binding names
	Data []string `pulumi:"data"`
	// Type of response
	Kind *string `pulumi:"kind"`
	// Metadata of the list
	Metadata *ConfluentListMetadataResponse `pulumi:"metadata"`
}

func ListAccessRoleBindingNameOutput(ctx *pulumi.Context, args ListAccessRoleBindingNameOutputArgs, opts ...pulumi.InvokeOption) ListAccessRoleBindingNameResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (ListAccessRoleBindingNameResultOutput, error) {
			args := v.(ListAccessRoleBindingNameArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: utilities.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("azure-native:confluent:listAccessRoleBindingName", args, ListAccessRoleBindingNameResultOutput{}, options).(ListAccessRoleBindingNameResultOutput), nil
		}).(ListAccessRoleBindingNameResultOutput)
}

type ListAccessRoleBindingNameOutputArgs struct {
	// Organization resource name
	OrganizationName pulumi.StringInput `pulumi:"organizationName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
	// Search filters for the request
	SearchFilters pulumi.StringMapInput `pulumi:"searchFilters"`
}

func (ListAccessRoleBindingNameOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ListAccessRoleBindingNameArgs)(nil)).Elem()
}

// Details of the role binding names returned on successful response
type ListAccessRoleBindingNameResultOutput struct{ *pulumi.OutputState }

func (ListAccessRoleBindingNameResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListAccessRoleBindingNameResult)(nil)).Elem()
}

func (o ListAccessRoleBindingNameResultOutput) ToListAccessRoleBindingNameResultOutput() ListAccessRoleBindingNameResultOutput {
	return o
}

func (o ListAccessRoleBindingNameResultOutput) ToListAccessRoleBindingNameResultOutputWithContext(ctx context.Context) ListAccessRoleBindingNameResultOutput {
	return o
}

// List of role binding names
func (o ListAccessRoleBindingNameResultOutput) Data() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ListAccessRoleBindingNameResult) []string { return v.Data }).(pulumi.StringArrayOutput)
}

// Type of response
func (o ListAccessRoleBindingNameResultOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListAccessRoleBindingNameResult) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Metadata of the list
func (o ListAccessRoleBindingNameResultOutput) Metadata() ConfluentListMetadataResponsePtrOutput {
	return o.ApplyT(func(v ListAccessRoleBindingNameResult) *ConfluentListMetadataResponse { return v.Metadata }).(ConfluentListMetadataResponsePtrOutput)
}

func init() {
	pulumi.RegisterOutputType(ListAccessRoleBindingNameResultOutput{})
}
