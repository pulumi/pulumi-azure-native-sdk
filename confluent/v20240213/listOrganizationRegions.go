// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20240213

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Result of POST request to list regions supported by confluent
func ListOrganizationRegions(ctx *pulumi.Context, args *ListOrganizationRegionsArgs, opts ...pulumi.InvokeOption) (*ListOrganizationRegionsResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv ListOrganizationRegionsResult
	err := ctx.Invoke("azure-native:confluent/v20240213:listOrganizationRegions", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type ListOrganizationRegionsArgs struct {
	// Organization resource name
	OrganizationName string `pulumi:"organizationName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Search filters for the request
	SearchFilters map[string]string `pulumi:"searchFilters"`
}

// Result of POST request to list regions supported by confluent
type ListOrganizationRegionsResult struct {
	// List of regions supported by confluent
	Data []RegionRecordResponse `pulumi:"data"`
}

func ListOrganizationRegionsOutput(ctx *pulumi.Context, args ListOrganizationRegionsOutputArgs, opts ...pulumi.InvokeOption) ListOrganizationRegionsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (ListOrganizationRegionsResult, error) {
			args := v.(ListOrganizationRegionsArgs)
			r, err := ListOrganizationRegions(ctx, &args, opts...)
			var s ListOrganizationRegionsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(ListOrganizationRegionsResultOutput)
}

type ListOrganizationRegionsOutputArgs struct {
	// Organization resource name
	OrganizationName pulumi.StringInput `pulumi:"organizationName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
	// Search filters for the request
	SearchFilters pulumi.StringMapInput `pulumi:"searchFilters"`
}

func (ListOrganizationRegionsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ListOrganizationRegionsArgs)(nil)).Elem()
}

// Result of POST request to list regions supported by confluent
type ListOrganizationRegionsResultOutput struct{ *pulumi.OutputState }

func (ListOrganizationRegionsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListOrganizationRegionsResult)(nil)).Elem()
}

func (o ListOrganizationRegionsResultOutput) ToListOrganizationRegionsResultOutput() ListOrganizationRegionsResultOutput {
	return o
}

func (o ListOrganizationRegionsResultOutput) ToListOrganizationRegionsResultOutputWithContext(ctx context.Context) ListOrganizationRegionsResultOutput {
	return o
}

// List of regions supported by confluent
func (o ListOrganizationRegionsResultOutput) Data() RegionRecordResponseArrayOutput {
	return o.ApplyT(func(v ListOrganizationRegionsResult) []RegionRecordResponse { return v.Data }).(RegionRecordResponseArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(ListOrganizationRegionsResultOutput{})
}
