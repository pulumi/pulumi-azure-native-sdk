// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package confluent

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// List cluster success response
// Azure REST API version: 2023-08-22.
func ListAccessRoleBindings(ctx *pulumi.Context, args *ListAccessRoleBindingsArgs, opts ...pulumi.InvokeOption) (*ListAccessRoleBindingsResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv ListAccessRoleBindingsResult
	err := ctx.Invoke("azure-native:confluent:listAccessRoleBindings", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type ListAccessRoleBindingsArgs struct {
	// Organization resource name
	OrganizationName string `pulumi:"organizationName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Search filters for the request
	SearchFilters map[string]string `pulumi:"searchFilters"`
}

// List cluster success response
type ListAccessRoleBindingsResult struct {
	// Data of the environments list
	Data []RoleBindingRecordResponse `pulumi:"data"`
	// Type of response
	Kind *string `pulumi:"kind"`
	// Metadata of the list
	Metadata *ConfluentListMetadataResponse `pulumi:"metadata"`
}

func ListAccessRoleBindingsOutput(ctx *pulumi.Context, args ListAccessRoleBindingsOutputArgs, opts ...pulumi.InvokeOption) ListAccessRoleBindingsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (ListAccessRoleBindingsResult, error) {
			args := v.(ListAccessRoleBindingsArgs)
			r, err := ListAccessRoleBindings(ctx, &args, opts...)
			var s ListAccessRoleBindingsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(ListAccessRoleBindingsResultOutput)
}

type ListAccessRoleBindingsOutputArgs struct {
	// Organization resource name
	OrganizationName pulumi.StringInput `pulumi:"organizationName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
	// Search filters for the request
	SearchFilters pulumi.StringMapInput `pulumi:"searchFilters"`
}

func (ListAccessRoleBindingsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ListAccessRoleBindingsArgs)(nil)).Elem()
}

// List cluster success response
type ListAccessRoleBindingsResultOutput struct{ *pulumi.OutputState }

func (ListAccessRoleBindingsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListAccessRoleBindingsResult)(nil)).Elem()
}

func (o ListAccessRoleBindingsResultOutput) ToListAccessRoleBindingsResultOutput() ListAccessRoleBindingsResultOutput {
	return o
}

func (o ListAccessRoleBindingsResultOutput) ToListAccessRoleBindingsResultOutputWithContext(ctx context.Context) ListAccessRoleBindingsResultOutput {
	return o
}

// Data of the environments list
func (o ListAccessRoleBindingsResultOutput) Data() RoleBindingRecordResponseArrayOutput {
	return o.ApplyT(func(v ListAccessRoleBindingsResult) []RoleBindingRecordResponse { return v.Data }).(RoleBindingRecordResponseArrayOutput)
}

// Type of response
func (o ListAccessRoleBindingsResultOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListAccessRoleBindingsResult) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Metadata of the list
func (o ListAccessRoleBindingsResultOutput) Metadata() ConfluentListMetadataResponsePtrOutput {
	return o.ApplyT(func(v ListAccessRoleBindingsResult) *ConfluentListMetadataResponse { return v.Metadata }).(ConfluentListMetadataResponsePtrOutput)
}

func init() {
	pulumi.RegisterOutputType(ListAccessRoleBindingsResultOutput{})
}
