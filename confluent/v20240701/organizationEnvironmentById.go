// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20240701

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Details about environment name, metadata and environment id of an environment
type OrganizationEnvironmentById struct {
	pulumi.CustomResourceState

	// Type of environment
	Kind pulumi.StringPtrOutput `pulumi:"kind"`
	// Metadata of the record
	Metadata SCMetadataEntityResponsePtrOutput `pulumi:"metadata"`
	// Display name of the environment
	Name pulumi.StringPtrOutput `pulumi:"name"`
	// Stream governance configuration
	StreamGovernanceConfig StreamGovernanceConfigResponsePtrOutput `pulumi:"streamGovernanceConfig"`
	// Type of the resource
	Type pulumi.StringPtrOutput `pulumi:"type"`
}

// NewOrganizationEnvironmentById registers a new resource with the given unique name, arguments, and options.
func NewOrganizationEnvironmentById(ctx *pulumi.Context,
	name string, args *OrganizationEnvironmentByIdArgs, opts ...pulumi.ResourceOption) (*OrganizationEnvironmentById, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.OrganizationName == nil {
		return nil, errors.New("invalid value for required argument 'OrganizationName'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource OrganizationEnvironmentById
	err := ctx.RegisterResource("azure-native:confluent/v20240701:OrganizationEnvironmentById", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetOrganizationEnvironmentById gets an existing OrganizationEnvironmentById resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetOrganizationEnvironmentById(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *OrganizationEnvironmentByIdState, opts ...pulumi.ResourceOption) (*OrganizationEnvironmentById, error) {
	var resource OrganizationEnvironmentById
	err := ctx.ReadResource("azure-native:confluent/v20240701:OrganizationEnvironmentById", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering OrganizationEnvironmentById resources.
type organizationEnvironmentByIdState struct {
}

type OrganizationEnvironmentByIdState struct {
}

func (OrganizationEnvironmentByIdState) ElementType() reflect.Type {
	return reflect.TypeOf((*organizationEnvironmentByIdState)(nil)).Elem()
}

type organizationEnvironmentByIdArgs struct {
	// Confluent environment id
	EnvironmentId *string `pulumi:"environmentId"`
	// Id of the environment
	Id *string `pulumi:"id"`
	// Type of environment
	Kind *string `pulumi:"kind"`
	// Metadata of the record
	Metadata *SCMetadataEntity `pulumi:"metadata"`
	// Display name of the environment
	Name *string `pulumi:"name"`
	// Organization resource name
	OrganizationName string `pulumi:"organizationName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Stream governance configuration
	StreamGovernanceConfig *StreamGovernanceConfig `pulumi:"streamGovernanceConfig"`
	// Type of the resource
	Type *string `pulumi:"type"`
}

// The set of arguments for constructing a OrganizationEnvironmentById resource.
type OrganizationEnvironmentByIdArgs struct {
	// Confluent environment id
	EnvironmentId pulumi.StringPtrInput
	// Id of the environment
	Id pulumi.StringPtrInput
	// Type of environment
	Kind pulumi.StringPtrInput
	// Metadata of the record
	Metadata SCMetadataEntityPtrInput
	// Display name of the environment
	Name pulumi.StringPtrInput
	// Organization resource name
	OrganizationName pulumi.StringInput
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput
	// Stream governance configuration
	StreamGovernanceConfig StreamGovernanceConfigPtrInput
	// Type of the resource
	Type pulumi.StringPtrInput
}

func (OrganizationEnvironmentByIdArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*organizationEnvironmentByIdArgs)(nil)).Elem()
}

type OrganizationEnvironmentByIdInput interface {
	pulumi.Input

	ToOrganizationEnvironmentByIdOutput() OrganizationEnvironmentByIdOutput
	ToOrganizationEnvironmentByIdOutputWithContext(ctx context.Context) OrganizationEnvironmentByIdOutput
}

func (*OrganizationEnvironmentById) ElementType() reflect.Type {
	return reflect.TypeOf((**OrganizationEnvironmentById)(nil)).Elem()
}

func (i *OrganizationEnvironmentById) ToOrganizationEnvironmentByIdOutput() OrganizationEnvironmentByIdOutput {
	return i.ToOrganizationEnvironmentByIdOutputWithContext(context.Background())
}

func (i *OrganizationEnvironmentById) ToOrganizationEnvironmentByIdOutputWithContext(ctx context.Context) OrganizationEnvironmentByIdOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationEnvironmentByIdOutput)
}

type OrganizationEnvironmentByIdOutput struct{ *pulumi.OutputState }

func (OrganizationEnvironmentByIdOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OrganizationEnvironmentById)(nil)).Elem()
}

func (o OrganizationEnvironmentByIdOutput) ToOrganizationEnvironmentByIdOutput() OrganizationEnvironmentByIdOutput {
	return o
}

func (o OrganizationEnvironmentByIdOutput) ToOrganizationEnvironmentByIdOutputWithContext(ctx context.Context) OrganizationEnvironmentByIdOutput {
	return o
}

// Type of environment
func (o OrganizationEnvironmentByIdOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OrganizationEnvironmentById) pulumi.StringPtrOutput { return v.Kind }).(pulumi.StringPtrOutput)
}

// Metadata of the record
func (o OrganizationEnvironmentByIdOutput) Metadata() SCMetadataEntityResponsePtrOutput {
	return o.ApplyT(func(v *OrganizationEnvironmentById) SCMetadataEntityResponsePtrOutput { return v.Metadata }).(SCMetadataEntityResponsePtrOutput)
}

// Display name of the environment
func (o OrganizationEnvironmentByIdOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OrganizationEnvironmentById) pulumi.StringPtrOutput { return v.Name }).(pulumi.StringPtrOutput)
}

// Stream governance configuration
func (o OrganizationEnvironmentByIdOutput) StreamGovernanceConfig() StreamGovernanceConfigResponsePtrOutput {
	return o.ApplyT(func(v *OrganizationEnvironmentById) StreamGovernanceConfigResponsePtrOutput {
		return v.StreamGovernanceConfig
	}).(StreamGovernanceConfigResponsePtrOutput)
}

// Type of the resource
func (o OrganizationEnvironmentByIdOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OrganizationEnvironmentById) pulumi.StringPtrOutput { return v.Type }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(OrganizationEnvironmentByIdOutput{})
}
