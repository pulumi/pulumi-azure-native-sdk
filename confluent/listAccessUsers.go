// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package confluent

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// List users success response
// Azure REST API version: 2023-08-22.
func ListAccessUsers(ctx *pulumi.Context, args *ListAccessUsersArgs, opts ...pulumi.InvokeOption) (*ListAccessUsersResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv ListAccessUsersResult
	err := ctx.Invoke("azure-native:confluent:listAccessUsers", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type ListAccessUsersArgs struct {
	// Organization resource name
	OrganizationName string `pulumi:"organizationName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Search filters for the request
	SearchFilters map[string]string `pulumi:"searchFilters"`
}

// List users success response
type ListAccessUsersResult struct {
	// Data of the users list
	Data []UserRecordResponse `pulumi:"data"`
	// Type of response
	Kind *string `pulumi:"kind"`
	// Metadata of the list
	Metadata *ConfluentListMetadataResponse `pulumi:"metadata"`
}

func ListAccessUsersOutput(ctx *pulumi.Context, args ListAccessUsersOutputArgs, opts ...pulumi.InvokeOption) ListAccessUsersResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (ListAccessUsersResult, error) {
			args := v.(ListAccessUsersArgs)
			r, err := ListAccessUsers(ctx, &args, opts...)
			var s ListAccessUsersResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(ListAccessUsersResultOutput)
}

type ListAccessUsersOutputArgs struct {
	// Organization resource name
	OrganizationName pulumi.StringInput `pulumi:"organizationName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
	// Search filters for the request
	SearchFilters pulumi.StringMapInput `pulumi:"searchFilters"`
}

func (ListAccessUsersOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ListAccessUsersArgs)(nil)).Elem()
}

// List users success response
type ListAccessUsersResultOutput struct{ *pulumi.OutputState }

func (ListAccessUsersResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListAccessUsersResult)(nil)).Elem()
}

func (o ListAccessUsersResultOutput) ToListAccessUsersResultOutput() ListAccessUsersResultOutput {
	return o
}

func (o ListAccessUsersResultOutput) ToListAccessUsersResultOutputWithContext(ctx context.Context) ListAccessUsersResultOutput {
	return o
}

func (o ListAccessUsersResultOutput) ToOutput(ctx context.Context) pulumix.Output[ListAccessUsersResult] {
	return pulumix.Output[ListAccessUsersResult]{
		OutputState: o.OutputState,
	}
}

// Data of the users list
func (o ListAccessUsersResultOutput) Data() UserRecordResponseArrayOutput {
	return o.ApplyT(func(v ListAccessUsersResult) []UserRecordResponse { return v.Data }).(UserRecordResponseArrayOutput)
}

// Type of response
func (o ListAccessUsersResultOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListAccessUsersResult) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Metadata of the list
func (o ListAccessUsersResultOutput) Metadata() ConfluentListMetadataResponsePtrOutput {
	return o.ApplyT(func(v ListAccessUsersResult) *ConfluentListMetadataResponse { return v.Metadata }).(ConfluentListMetadataResponsePtrOutput)
}

func init() {
	pulumi.RegisterOutputType(ListAccessUsersResultOutput{})
}
