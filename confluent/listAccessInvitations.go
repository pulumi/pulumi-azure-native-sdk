// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package confluent

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// List invitations success response
// Azure REST API version: 2023-08-22.
func ListAccessInvitations(ctx *pulumi.Context, args *ListAccessInvitationsArgs, opts ...pulumi.InvokeOption) (*ListAccessInvitationsResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv ListAccessInvitationsResult
	err := ctx.Invoke("azure-native:confluent:listAccessInvitations", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type ListAccessInvitationsArgs struct {
	// Organization resource name
	OrganizationName string `pulumi:"organizationName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Search filters for the request
	SearchFilters map[string]string `pulumi:"searchFilters"`
}

// List invitations success response
type ListAccessInvitationsResult struct {
	// Data of the invitations list
	Data []InvitationRecordResponse `pulumi:"data"`
	// Type of response
	Kind *string `pulumi:"kind"`
	// Metadata of the list
	Metadata *ConfluentListMetadataResponse `pulumi:"metadata"`
}

func ListAccessInvitationsOutput(ctx *pulumi.Context, args ListAccessInvitationsOutputArgs, opts ...pulumi.InvokeOption) ListAccessInvitationsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (ListAccessInvitationsResult, error) {
			args := v.(ListAccessInvitationsArgs)
			r, err := ListAccessInvitations(ctx, &args, opts...)
			var s ListAccessInvitationsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(ListAccessInvitationsResultOutput)
}

type ListAccessInvitationsOutputArgs struct {
	// Organization resource name
	OrganizationName pulumi.StringInput `pulumi:"organizationName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
	// Search filters for the request
	SearchFilters pulumi.StringMapInput `pulumi:"searchFilters"`
}

func (ListAccessInvitationsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ListAccessInvitationsArgs)(nil)).Elem()
}

// List invitations success response
type ListAccessInvitationsResultOutput struct{ *pulumi.OutputState }

func (ListAccessInvitationsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListAccessInvitationsResult)(nil)).Elem()
}

func (o ListAccessInvitationsResultOutput) ToListAccessInvitationsResultOutput() ListAccessInvitationsResultOutput {
	return o
}

func (o ListAccessInvitationsResultOutput) ToListAccessInvitationsResultOutputWithContext(ctx context.Context) ListAccessInvitationsResultOutput {
	return o
}

func (o ListAccessInvitationsResultOutput) ToOutput(ctx context.Context) pulumix.Output[ListAccessInvitationsResult] {
	return pulumix.Output[ListAccessInvitationsResult]{
		OutputState: o.OutputState,
	}
}

// Data of the invitations list
func (o ListAccessInvitationsResultOutput) Data() InvitationRecordResponseArrayOutput {
	return o.ApplyT(func(v ListAccessInvitationsResult) []InvitationRecordResponse { return v.Data }).(InvitationRecordResponseArrayOutput)
}

// Type of response
func (o ListAccessInvitationsResultOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListAccessInvitationsResult) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Metadata of the list
func (o ListAccessInvitationsResultOutput) Metadata() ConfluentListMetadataResponsePtrOutput {
	return o.ApplyT(func(v ListAccessInvitationsResult) *ConfluentListMetadataResponse { return v.Metadata }).(ConfluentListMetadataResponsePtrOutput)
}

func init() {
	pulumi.RegisterOutputType(ListAccessInvitationsResultOutput{})
}
