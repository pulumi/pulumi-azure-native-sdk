// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package confluent

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// List environments success response
// Azure REST API version: 2023-08-22.
func ListAccessEnvironments(ctx *pulumi.Context, args *ListAccessEnvironmentsArgs, opts ...pulumi.InvokeOption) (*ListAccessEnvironmentsResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv ListAccessEnvironmentsResult
	err := ctx.Invoke("azure-native:confluent:listAccessEnvironments", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type ListAccessEnvironmentsArgs struct {
	// Organization resource name
	OrganizationName string `pulumi:"organizationName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Search filters for the request
	SearchFilters map[string]string `pulumi:"searchFilters"`
}

// List environments success response
type ListAccessEnvironmentsResult struct {
	// Data of the environments list
	Data []EnvironmentRecordResponse `pulumi:"data"`
	// Type of response
	Kind *string `pulumi:"kind"`
	// Metadata of the list
	Metadata *ConfluentListMetadataResponse `pulumi:"metadata"`
}

func ListAccessEnvironmentsOutput(ctx *pulumi.Context, args ListAccessEnvironmentsOutputArgs, opts ...pulumi.InvokeOption) ListAccessEnvironmentsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (ListAccessEnvironmentsResult, error) {
			args := v.(ListAccessEnvironmentsArgs)
			r, err := ListAccessEnvironments(ctx, &args, opts...)
			var s ListAccessEnvironmentsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(ListAccessEnvironmentsResultOutput)
}

type ListAccessEnvironmentsOutputArgs struct {
	// Organization resource name
	OrganizationName pulumi.StringInput `pulumi:"organizationName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
	// Search filters for the request
	SearchFilters pulumi.StringMapInput `pulumi:"searchFilters"`
}

func (ListAccessEnvironmentsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ListAccessEnvironmentsArgs)(nil)).Elem()
}

// List environments success response
type ListAccessEnvironmentsResultOutput struct{ *pulumi.OutputState }

func (ListAccessEnvironmentsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListAccessEnvironmentsResult)(nil)).Elem()
}

func (o ListAccessEnvironmentsResultOutput) ToListAccessEnvironmentsResultOutput() ListAccessEnvironmentsResultOutput {
	return o
}

func (o ListAccessEnvironmentsResultOutput) ToListAccessEnvironmentsResultOutputWithContext(ctx context.Context) ListAccessEnvironmentsResultOutput {
	return o
}

func (o ListAccessEnvironmentsResultOutput) ToOutput(ctx context.Context) pulumix.Output[ListAccessEnvironmentsResult] {
	return pulumix.Output[ListAccessEnvironmentsResult]{
		OutputState: o.OutputState,
	}
}

// Data of the environments list
func (o ListAccessEnvironmentsResultOutput) Data() EnvironmentRecordResponseArrayOutput {
	return o.ApplyT(func(v ListAccessEnvironmentsResult) []EnvironmentRecordResponse { return v.Data }).(EnvironmentRecordResponseArrayOutput)
}

// Type of response
func (o ListAccessEnvironmentsResultOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListAccessEnvironmentsResult) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Metadata of the list
func (o ListAccessEnvironmentsResultOutput) Metadata() ConfluentListMetadataResponsePtrOutput {
	return o.ApplyT(func(v ListAccessEnvironmentsResult) *ConfluentListMetadataResponse { return v.Metadata }).(ConfluentListMetadataResponsePtrOutput)
}

func init() {
	pulumi.RegisterOutputType(ListAccessEnvironmentsResultOutput{})
}
