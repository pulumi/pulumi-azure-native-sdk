// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package confluent

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v3/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Get cluster by Id
//
// Uses Azure REST API version 2024-07-01.
//
// Other available API versions: 2025-07-17-preview. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native confluent [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
func LookupOrganizationClusterById(ctx *pulumi.Context, args *LookupOrganizationClusterByIdArgs, opts ...pulumi.InvokeOption) (*LookupOrganizationClusterByIdResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv LookupOrganizationClusterByIdResult
	err := ctx.Invoke("azure-native:confluent:getOrganizationClusterById", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupOrganizationClusterByIdArgs struct {
	// Confluent kafka or schema registry cluster id
	ClusterId string `pulumi:"clusterId"`
	// Confluent environment id
	EnvironmentId string `pulumi:"environmentId"`
	// Organization resource name
	OrganizationName string `pulumi:"organizationName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// Details of cluster record
type LookupOrganizationClusterByIdResult struct {
	// The Azure API version of the resource.
	AzureApiVersion string `pulumi:"azureApiVersion"`
	// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
	Id string `pulumi:"id"`
	// Type of cluster
	Kind *string `pulumi:"kind"`
	// Metadata of the record
	Metadata *SCMetadataEntityResponse `pulumi:"metadata"`
	// The name of the resource
	Name string `pulumi:"name"`
	// Specification of the cluster
	Spec *SCClusterSpecEntityResponse `pulumi:"spec"`
	// Specification of the cluster status
	Status *ClusterStatusEntityResponse `pulumi:"status"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponse `pulumi:"systemData"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type string `pulumi:"type"`
}

func LookupOrganizationClusterByIdOutput(ctx *pulumi.Context, args LookupOrganizationClusterByIdOutputArgs, opts ...pulumi.InvokeOption) LookupOrganizationClusterByIdResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupOrganizationClusterByIdResultOutput, error) {
			args := v.(LookupOrganizationClusterByIdArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: utilities.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("azure-native:confluent:getOrganizationClusterById", args, LookupOrganizationClusterByIdResultOutput{}, options).(LookupOrganizationClusterByIdResultOutput), nil
		}).(LookupOrganizationClusterByIdResultOutput)
}

type LookupOrganizationClusterByIdOutputArgs struct {
	// Confluent kafka or schema registry cluster id
	ClusterId pulumi.StringInput `pulumi:"clusterId"`
	// Confluent environment id
	EnvironmentId pulumi.StringInput `pulumi:"environmentId"`
	// Organization resource name
	OrganizationName pulumi.StringInput `pulumi:"organizationName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
}

func (LookupOrganizationClusterByIdOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupOrganizationClusterByIdArgs)(nil)).Elem()
}

// Details of cluster record
type LookupOrganizationClusterByIdResultOutput struct{ *pulumi.OutputState }

func (LookupOrganizationClusterByIdResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupOrganizationClusterByIdResult)(nil)).Elem()
}

func (o LookupOrganizationClusterByIdResultOutput) ToLookupOrganizationClusterByIdResultOutput() LookupOrganizationClusterByIdResultOutput {
	return o
}

func (o LookupOrganizationClusterByIdResultOutput) ToLookupOrganizationClusterByIdResultOutputWithContext(ctx context.Context) LookupOrganizationClusterByIdResultOutput {
	return o
}

// The Azure API version of the resource.
func (o LookupOrganizationClusterByIdResultOutput) AzureApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v LookupOrganizationClusterByIdResult) string { return v.AzureApiVersion }).(pulumi.StringOutput)
}

// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
func (o LookupOrganizationClusterByIdResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupOrganizationClusterByIdResult) string { return v.Id }).(pulumi.StringOutput)
}

// Type of cluster
func (o LookupOrganizationClusterByIdResultOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupOrganizationClusterByIdResult) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Metadata of the record
func (o LookupOrganizationClusterByIdResultOutput) Metadata() SCMetadataEntityResponsePtrOutput {
	return o.ApplyT(func(v LookupOrganizationClusterByIdResult) *SCMetadataEntityResponse { return v.Metadata }).(SCMetadataEntityResponsePtrOutput)
}

// The name of the resource
func (o LookupOrganizationClusterByIdResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupOrganizationClusterByIdResult) string { return v.Name }).(pulumi.StringOutput)
}

// Specification of the cluster
func (o LookupOrganizationClusterByIdResultOutput) Spec() SCClusterSpecEntityResponsePtrOutput {
	return o.ApplyT(func(v LookupOrganizationClusterByIdResult) *SCClusterSpecEntityResponse { return v.Spec }).(SCClusterSpecEntityResponsePtrOutput)
}

// Specification of the cluster status
func (o LookupOrganizationClusterByIdResultOutput) Status() ClusterStatusEntityResponsePtrOutput {
	return o.ApplyT(func(v LookupOrganizationClusterByIdResult) *ClusterStatusEntityResponse { return v.Status }).(ClusterStatusEntityResponsePtrOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o LookupOrganizationClusterByIdResultOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v LookupOrganizationClusterByIdResult) SystemDataResponse { return v.SystemData }).(SystemDataResponseOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o LookupOrganizationClusterByIdResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupOrganizationClusterByIdResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupOrganizationClusterByIdResultOutput{})
}
