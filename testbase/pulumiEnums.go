// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package testbase

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The action of the command.
type Action string

const (
	ActionInstall   = Action("Install")
	ActionLaunch    = Action("Launch")
	ActionClose     = Action("Close")
	ActionUninstall = Action("Uninstall")
	ActionCustom    = Action("Custom")
)

func (Action) ElementType() reflect.Type {
	return reflect.TypeOf((*Action)(nil)).Elem()
}

func (e Action) ToActionOutput() ActionOutput {
	return pulumi.ToOutput(e).(ActionOutput)
}

func (e Action) ToActionOutputWithContext(ctx context.Context) ActionOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ActionOutput)
}

func (e Action) ToActionPtrOutput() ActionPtrOutput {
	return e.ToActionPtrOutputWithContext(context.Background())
}

func (e Action) ToActionPtrOutputWithContext(ctx context.Context) ActionPtrOutput {
	return Action(e).ToActionOutputWithContext(ctx).ToActionPtrOutputWithContext(ctx)
}

func (e Action) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e Action) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e Action) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e Action) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ActionOutput struct{ *pulumi.OutputState }

func (ActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Action)(nil)).Elem()
}

func (o ActionOutput) ToActionOutput() ActionOutput {
	return o
}

func (o ActionOutput) ToActionOutputWithContext(ctx context.Context) ActionOutput {
	return o
}

func (o ActionOutput) ToActionPtrOutput() ActionPtrOutput {
	return o.ToActionPtrOutputWithContext(context.Background())
}

func (o ActionOutput) ToActionPtrOutputWithContext(ctx context.Context) ActionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Action) *Action {
		return &v
	}).(ActionPtrOutput)
}

func (o ActionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ActionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e Action) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ActionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ActionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e Action) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ActionPtrOutput struct{ *pulumi.OutputState }

func (ActionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Action)(nil)).Elem()
}

func (o ActionPtrOutput) ToActionPtrOutput() ActionPtrOutput {
	return o
}

func (o ActionPtrOutput) ToActionPtrOutputWithContext(ctx context.Context) ActionPtrOutput {
	return o
}

func (o ActionPtrOutput) Elem() ActionOutput {
	return o.ApplyT(func(v *Action) Action {
		if v != nil {
			return *v
		}
		var ret Action
		return ret
	}).(ActionOutput)
}

func (o ActionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ActionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *Action) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ActionInput is an input type that accepts values of the Action enum
// A concrete instance of `ActionInput` can be one of the following:
//
//	ActionInstall
//	ActionLaunch
//	ActionClose
//	ActionUninstall
//	ActionCustom
type ActionInput interface {
	pulumi.Input

	ToActionOutput() ActionOutput
	ToActionOutputWithContext(context.Context) ActionOutput
}

var actionPtrType = reflect.TypeOf((**Action)(nil)).Elem()

type ActionPtrInput interface {
	pulumi.Input

	ToActionPtrOutput() ActionPtrOutput
	ToActionPtrOutputWithContext(context.Context) ActionPtrOutput
}

type actionPtr string

func ActionPtr(v string) ActionPtrInput {
	return (*actionPtr)(&v)
}

func (*actionPtr) ElementType() reflect.Type {
	return actionPtrType
}

func (in *actionPtr) ToActionPtrOutput() ActionPtrOutput {
	return pulumi.ToOutput(in).(ActionPtrOutput)
}

func (in *actionPtr) ToActionPtrOutputWithContext(ctx context.Context) ActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ActionPtrOutput)
}

// The architecture of a first party application of a Test Base Account.
type Architecture string

const (
	ArchitectureX86   = Architecture("x86")
	ArchitectureX64   = Architecture("x64")
	ArchitectureArm64 = Architecture("arm64")
)

func (Architecture) ElementType() reflect.Type {
	return reflect.TypeOf((*Architecture)(nil)).Elem()
}

func (e Architecture) ToArchitectureOutput() ArchitectureOutput {
	return pulumi.ToOutput(e).(ArchitectureOutput)
}

func (e Architecture) ToArchitectureOutputWithContext(ctx context.Context) ArchitectureOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ArchitectureOutput)
}

func (e Architecture) ToArchitecturePtrOutput() ArchitecturePtrOutput {
	return e.ToArchitecturePtrOutputWithContext(context.Background())
}

func (e Architecture) ToArchitecturePtrOutputWithContext(ctx context.Context) ArchitecturePtrOutput {
	return Architecture(e).ToArchitectureOutputWithContext(ctx).ToArchitecturePtrOutputWithContext(ctx)
}

func (e Architecture) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e Architecture) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e Architecture) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e Architecture) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ArchitectureOutput struct{ *pulumi.OutputState }

func (ArchitectureOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Architecture)(nil)).Elem()
}

func (o ArchitectureOutput) ToArchitectureOutput() ArchitectureOutput {
	return o
}

func (o ArchitectureOutput) ToArchitectureOutputWithContext(ctx context.Context) ArchitectureOutput {
	return o
}

func (o ArchitectureOutput) ToArchitecturePtrOutput() ArchitecturePtrOutput {
	return o.ToArchitecturePtrOutputWithContext(context.Background())
}

func (o ArchitectureOutput) ToArchitecturePtrOutputWithContext(ctx context.Context) ArchitecturePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Architecture) *Architecture {
		return &v
	}).(ArchitecturePtrOutput)
}

func (o ArchitectureOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ArchitectureOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e Architecture) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ArchitectureOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ArchitectureOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e Architecture) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ArchitecturePtrOutput struct{ *pulumi.OutputState }

func (ArchitecturePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Architecture)(nil)).Elem()
}

func (o ArchitecturePtrOutput) ToArchitecturePtrOutput() ArchitecturePtrOutput {
	return o
}

func (o ArchitecturePtrOutput) ToArchitecturePtrOutputWithContext(ctx context.Context) ArchitecturePtrOutput {
	return o
}

func (o ArchitecturePtrOutput) Elem() ArchitectureOutput {
	return o.ApplyT(func(v *Architecture) Architecture {
		if v != nil {
			return *v
		}
		var ret Architecture
		return ret
	}).(ArchitectureOutput)
}

func (o ArchitecturePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ArchitecturePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *Architecture) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ArchitectureInput is an input type that accepts values of the Architecture enum
// A concrete instance of `ArchitectureInput` can be one of the following:
//
//	ArchitectureX86
//	ArchitectureX64
//	ArchitectureArm64
type ArchitectureInput interface {
	pulumi.Input

	ToArchitectureOutput() ArchitectureOutput
	ToArchitectureOutputWithContext(context.Context) ArchitectureOutput
}

var architecturePtrType = reflect.TypeOf((**Architecture)(nil)).Elem()

type ArchitecturePtrInput interface {
	pulumi.Input

	ToArchitecturePtrOutput() ArchitecturePtrOutput
	ToArchitecturePtrOutputWithContext(context.Context) ArchitecturePtrOutput
}

type architecturePtr string

func ArchitecturePtr(v string) ArchitecturePtrInput {
	return (*architecturePtr)(&v)
}

func (*architecturePtr) ElementType() reflect.Type {
	return architecturePtrType
}

func (in *architecturePtr) ToArchitecturePtrOutput() ArchitecturePtrOutput {
	return pulumi.ToOutput(in).(ArchitecturePtrOutput)
}

func (in *architecturePtr) ToArchitecturePtrOutputWithContext(ctx context.Context) ArchitecturePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ArchitecturePtrOutput)
}

// The type of command content.
type ContentType string

const (
	ContentTypeInline = ContentType("Inline")
	ContentTypeFile   = ContentType("File")
	ContentTypePath   = ContentType("Path")
)

func (ContentType) ElementType() reflect.Type {
	return reflect.TypeOf((*ContentType)(nil)).Elem()
}

func (e ContentType) ToContentTypeOutput() ContentTypeOutput {
	return pulumi.ToOutput(e).(ContentTypeOutput)
}

func (e ContentType) ToContentTypeOutputWithContext(ctx context.Context) ContentTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ContentTypeOutput)
}

func (e ContentType) ToContentTypePtrOutput() ContentTypePtrOutput {
	return e.ToContentTypePtrOutputWithContext(context.Background())
}

func (e ContentType) ToContentTypePtrOutputWithContext(ctx context.Context) ContentTypePtrOutput {
	return ContentType(e).ToContentTypeOutputWithContext(ctx).ToContentTypePtrOutputWithContext(ctx)
}

func (e ContentType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ContentType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ContentType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ContentType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ContentTypeOutput struct{ *pulumi.OutputState }

func (ContentTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContentType)(nil)).Elem()
}

func (o ContentTypeOutput) ToContentTypeOutput() ContentTypeOutput {
	return o
}

func (o ContentTypeOutput) ToContentTypeOutputWithContext(ctx context.Context) ContentTypeOutput {
	return o
}

func (o ContentTypeOutput) ToContentTypePtrOutput() ContentTypePtrOutput {
	return o.ToContentTypePtrOutputWithContext(context.Background())
}

func (o ContentTypeOutput) ToContentTypePtrOutputWithContext(ctx context.Context) ContentTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ContentType) *ContentType {
		return &v
	}).(ContentTypePtrOutput)
}

func (o ContentTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ContentTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ContentType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ContentTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ContentTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ContentType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ContentTypePtrOutput struct{ *pulumi.OutputState }

func (ContentTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ContentType)(nil)).Elem()
}

func (o ContentTypePtrOutput) ToContentTypePtrOutput() ContentTypePtrOutput {
	return o
}

func (o ContentTypePtrOutput) ToContentTypePtrOutputWithContext(ctx context.Context) ContentTypePtrOutput {
	return o
}

func (o ContentTypePtrOutput) Elem() ContentTypeOutput {
	return o.ApplyT(func(v *ContentType) ContentType {
		if v != nil {
			return *v
		}
		var ret ContentType
		return ret
	}).(ContentTypeOutput)
}

func (o ContentTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ContentTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ContentType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ContentTypeInput is an input type that accepts values of the ContentType enum
// A concrete instance of `ContentTypeInput` can be one of the following:
//
//	ContentTypeInline
//	ContentTypeFile
//	ContentTypePath
type ContentTypeInput interface {
	pulumi.Input

	ToContentTypeOutput() ContentTypeOutput
	ToContentTypeOutputWithContext(context.Context) ContentTypeOutput
}

var contentTypePtrType = reflect.TypeOf((**ContentType)(nil)).Elem()

type ContentTypePtrInput interface {
	pulumi.Input

	ToContentTypePtrOutput() ContentTypePtrOutput
	ToContentTypePtrOutputWithContext(context.Context) ContentTypePtrOutput
}

type contentTypePtr string

func ContentTypePtr(v string) ContentTypePtrInput {
	return (*contentTypePtr)(&v)
}

func (*contentTypePtr) ElementType() reflect.Type {
	return contentTypePtrType
}

func (in *contentTypePtr) ToContentTypePtrOutput() ContentTypePtrOutput {
	return pulumi.ToOutput(in).(ContentTypePtrOutput)
}

func (in *contentTypePtr) ToContentTypePtrOutputWithContext(ctx context.Context) ContentTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ContentTypePtrOutput)
}

// Credential type.
type CredentialType string

const (
	// Username password credential for intune enrollment.
	CredentialTypeIntuneAccount = CredentialType("IntuneAccount")
)

func (CredentialType) ElementType() reflect.Type {
	return reflect.TypeOf((*CredentialType)(nil)).Elem()
}

func (e CredentialType) ToCredentialTypeOutput() CredentialTypeOutput {
	return pulumi.ToOutput(e).(CredentialTypeOutput)
}

func (e CredentialType) ToCredentialTypeOutputWithContext(ctx context.Context) CredentialTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(CredentialTypeOutput)
}

func (e CredentialType) ToCredentialTypePtrOutput() CredentialTypePtrOutput {
	return e.ToCredentialTypePtrOutputWithContext(context.Background())
}

func (e CredentialType) ToCredentialTypePtrOutputWithContext(ctx context.Context) CredentialTypePtrOutput {
	return CredentialType(e).ToCredentialTypeOutputWithContext(ctx).ToCredentialTypePtrOutputWithContext(ctx)
}

func (e CredentialType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e CredentialType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e CredentialType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e CredentialType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type CredentialTypeOutput struct{ *pulumi.OutputState }

func (CredentialTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CredentialType)(nil)).Elem()
}

func (o CredentialTypeOutput) ToCredentialTypeOutput() CredentialTypeOutput {
	return o
}

func (o CredentialTypeOutput) ToCredentialTypeOutputWithContext(ctx context.Context) CredentialTypeOutput {
	return o
}

func (o CredentialTypeOutput) ToCredentialTypePtrOutput() CredentialTypePtrOutput {
	return o.ToCredentialTypePtrOutputWithContext(context.Background())
}

func (o CredentialTypeOutput) ToCredentialTypePtrOutputWithContext(ctx context.Context) CredentialTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CredentialType) *CredentialType {
		return &v
	}).(CredentialTypePtrOutput)
}

func (o CredentialTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o CredentialTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e CredentialType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o CredentialTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o CredentialTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e CredentialType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type CredentialTypePtrOutput struct{ *pulumi.OutputState }

func (CredentialTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CredentialType)(nil)).Elem()
}

func (o CredentialTypePtrOutput) ToCredentialTypePtrOutput() CredentialTypePtrOutput {
	return o
}

func (o CredentialTypePtrOutput) ToCredentialTypePtrOutputWithContext(ctx context.Context) CredentialTypePtrOutput {
	return o
}

func (o CredentialTypePtrOutput) Elem() CredentialTypeOutput {
	return o.ApplyT(func(v *CredentialType) CredentialType {
		if v != nil {
			return *v
		}
		var ret CredentialType
		return ret
	}).(CredentialTypeOutput)
}

func (o CredentialTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o CredentialTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *CredentialType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// CredentialTypeInput is an input type that accepts values of the CredentialType enum
// A concrete instance of `CredentialTypeInput` can be one of the following:
//
//	CredentialTypeIntuneAccount
type CredentialTypeInput interface {
	pulumi.Input

	ToCredentialTypeOutput() CredentialTypeOutput
	ToCredentialTypeOutputWithContext(context.Context) CredentialTypeOutput
}

var credentialTypePtrType = reflect.TypeOf((**CredentialType)(nil)).Elem()

type CredentialTypePtrInput interface {
	pulumi.Input

	ToCredentialTypePtrOutput() CredentialTypePtrOutput
	ToCredentialTypePtrOutputWithContext(context.Context) CredentialTypePtrOutput
}

type credentialTypePtr string

func CredentialTypePtr(v string) CredentialTypePtrInput {
	return (*credentialTypePtr)(&v)
}

func (*credentialTypePtr) ElementType() reflect.Type {
	return credentialTypePtrType
}

func (in *credentialTypePtr) ToCredentialTypePtrOutput() CredentialTypePtrOutput {
	return pulumi.ToOutput(in).(CredentialTypePtrOutput)
}

func (in *credentialTypePtr) ToCredentialTypePtrOutputWithContext(ctx context.Context) CredentialTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(CredentialTypePtrOutput)
}

// The source type.
type DraftPackageSourceType string

const (
	DraftPackageSourceTypeNative           = DraftPackageSourceType("Native")
	DraftPackageSourceTypeIntuneWin        = DraftPackageSourceType("IntuneWin")
	DraftPackageSourceTypeTestBasePackage  = DraftPackageSourceType("TestBasePackage")
	DraftPackageSourceTypeGalleryApp       = DraftPackageSourceType("GalleryApp")
	DraftPackageSourceTypeIntuneEnrollment = DraftPackageSourceType("IntuneEnrollment")
)

func (DraftPackageSourceType) ElementType() reflect.Type {
	return reflect.TypeOf((*DraftPackageSourceType)(nil)).Elem()
}

func (e DraftPackageSourceType) ToDraftPackageSourceTypeOutput() DraftPackageSourceTypeOutput {
	return pulumi.ToOutput(e).(DraftPackageSourceTypeOutput)
}

func (e DraftPackageSourceType) ToDraftPackageSourceTypeOutputWithContext(ctx context.Context) DraftPackageSourceTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DraftPackageSourceTypeOutput)
}

func (e DraftPackageSourceType) ToDraftPackageSourceTypePtrOutput() DraftPackageSourceTypePtrOutput {
	return e.ToDraftPackageSourceTypePtrOutputWithContext(context.Background())
}

func (e DraftPackageSourceType) ToDraftPackageSourceTypePtrOutputWithContext(ctx context.Context) DraftPackageSourceTypePtrOutput {
	return DraftPackageSourceType(e).ToDraftPackageSourceTypeOutputWithContext(ctx).ToDraftPackageSourceTypePtrOutputWithContext(ctx)
}

func (e DraftPackageSourceType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DraftPackageSourceType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DraftPackageSourceType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DraftPackageSourceType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DraftPackageSourceTypeOutput struct{ *pulumi.OutputState }

func (DraftPackageSourceTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DraftPackageSourceType)(nil)).Elem()
}

func (o DraftPackageSourceTypeOutput) ToDraftPackageSourceTypeOutput() DraftPackageSourceTypeOutput {
	return o
}

func (o DraftPackageSourceTypeOutput) ToDraftPackageSourceTypeOutputWithContext(ctx context.Context) DraftPackageSourceTypeOutput {
	return o
}

func (o DraftPackageSourceTypeOutput) ToDraftPackageSourceTypePtrOutput() DraftPackageSourceTypePtrOutput {
	return o.ToDraftPackageSourceTypePtrOutputWithContext(context.Background())
}

func (o DraftPackageSourceTypeOutput) ToDraftPackageSourceTypePtrOutputWithContext(ctx context.Context) DraftPackageSourceTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DraftPackageSourceType) *DraftPackageSourceType {
		return &v
	}).(DraftPackageSourceTypePtrOutput)
}

func (o DraftPackageSourceTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DraftPackageSourceTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DraftPackageSourceType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DraftPackageSourceTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DraftPackageSourceTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DraftPackageSourceType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DraftPackageSourceTypePtrOutput struct{ *pulumi.OutputState }

func (DraftPackageSourceTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DraftPackageSourceType)(nil)).Elem()
}

func (o DraftPackageSourceTypePtrOutput) ToDraftPackageSourceTypePtrOutput() DraftPackageSourceTypePtrOutput {
	return o
}

func (o DraftPackageSourceTypePtrOutput) ToDraftPackageSourceTypePtrOutputWithContext(ctx context.Context) DraftPackageSourceTypePtrOutput {
	return o
}

func (o DraftPackageSourceTypePtrOutput) Elem() DraftPackageSourceTypeOutput {
	return o.ApplyT(func(v *DraftPackageSourceType) DraftPackageSourceType {
		if v != nil {
			return *v
		}
		var ret DraftPackageSourceType
		return ret
	}).(DraftPackageSourceTypeOutput)
}

func (o DraftPackageSourceTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DraftPackageSourceTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DraftPackageSourceType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DraftPackageSourceTypeInput is an input type that accepts values of the DraftPackageSourceType enum
// A concrete instance of `DraftPackageSourceTypeInput` can be one of the following:
//
//	DraftPackageSourceTypeNative
//	DraftPackageSourceTypeIntuneWin
//	DraftPackageSourceTypeTestBasePackage
//	DraftPackageSourceTypeGalleryApp
//	DraftPackageSourceTypeIntuneEnrollment
type DraftPackageSourceTypeInput interface {
	pulumi.Input

	ToDraftPackageSourceTypeOutput() DraftPackageSourceTypeOutput
	ToDraftPackageSourceTypeOutputWithContext(context.Context) DraftPackageSourceTypeOutput
}

var draftPackageSourceTypePtrType = reflect.TypeOf((**DraftPackageSourceType)(nil)).Elem()

type DraftPackageSourceTypePtrInput interface {
	pulumi.Input

	ToDraftPackageSourceTypePtrOutput() DraftPackageSourceTypePtrOutput
	ToDraftPackageSourceTypePtrOutputWithContext(context.Context) DraftPackageSourceTypePtrOutput
}

type draftPackageSourceTypePtr string

func DraftPackageSourceTypePtr(v string) DraftPackageSourceTypePtrInput {
	return (*draftPackageSourceTypePtr)(&v)
}

func (*draftPackageSourceTypePtr) ElementType() reflect.Type {
	return draftPackageSourceTypePtrType
}

func (in *draftPackageSourceTypePtr) ToDraftPackageSourceTypePtrOutput() DraftPackageSourceTypePtrOutput {
	return pulumi.ToOutput(in).(DraftPackageSourceTypePtrOutput)
}

func (in *draftPackageSourceTypePtr) ToDraftPackageSourceTypePtrOutputWithContext(ctx context.Context) DraftPackageSourceTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DraftPackageSourceTypePtrOutput)
}

type Engagements string

const (
	EngagementsMVI   = Engagements("MVI")
	EngagementsMVP   = Engagements("MVP")
	EngagementsSUVP  = Engagements("SUVP")
	EngagementsMAPP  = Engagements("MAPP")
	EngagementsOther = Engagements("Other")
)

func (Engagements) ElementType() reflect.Type {
	return reflect.TypeOf((*Engagements)(nil)).Elem()
}

func (e Engagements) ToEngagementsOutput() EngagementsOutput {
	return pulumi.ToOutput(e).(EngagementsOutput)
}

func (e Engagements) ToEngagementsOutputWithContext(ctx context.Context) EngagementsOutput {
	return pulumi.ToOutputWithContext(ctx, e).(EngagementsOutput)
}

func (e Engagements) ToEngagementsPtrOutput() EngagementsPtrOutput {
	return e.ToEngagementsPtrOutputWithContext(context.Background())
}

func (e Engagements) ToEngagementsPtrOutputWithContext(ctx context.Context) EngagementsPtrOutput {
	return Engagements(e).ToEngagementsOutputWithContext(ctx).ToEngagementsPtrOutputWithContext(ctx)
}

func (e Engagements) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e Engagements) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e Engagements) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e Engagements) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type EngagementsOutput struct{ *pulumi.OutputState }

func (EngagementsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Engagements)(nil)).Elem()
}

func (o EngagementsOutput) ToEngagementsOutput() EngagementsOutput {
	return o
}

func (o EngagementsOutput) ToEngagementsOutputWithContext(ctx context.Context) EngagementsOutput {
	return o
}

func (o EngagementsOutput) ToEngagementsPtrOutput() EngagementsPtrOutput {
	return o.ToEngagementsPtrOutputWithContext(context.Background())
}

func (o EngagementsOutput) ToEngagementsPtrOutputWithContext(ctx context.Context) EngagementsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Engagements) *Engagements {
		return &v
	}).(EngagementsPtrOutput)
}

func (o EngagementsOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o EngagementsOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e Engagements) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o EngagementsOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o EngagementsOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e Engagements) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type EngagementsPtrOutput struct{ *pulumi.OutputState }

func (EngagementsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Engagements)(nil)).Elem()
}

func (o EngagementsPtrOutput) ToEngagementsPtrOutput() EngagementsPtrOutput {
	return o
}

func (o EngagementsPtrOutput) ToEngagementsPtrOutputWithContext(ctx context.Context) EngagementsPtrOutput {
	return o
}

func (o EngagementsPtrOutput) Elem() EngagementsOutput {
	return o.ApplyT(func(v *Engagements) Engagements {
		if v != nil {
			return *v
		}
		var ret Engagements
		return ret
	}).(EngagementsOutput)
}

func (o EngagementsPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o EngagementsPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *Engagements) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// EngagementsInput is an input type that accepts values of the Engagements enum
// A concrete instance of `EngagementsInput` can be one of the following:
//
//	EngagementsMVI
//	EngagementsMVP
//	EngagementsSUVP
//	EngagementsMAPP
//	EngagementsOther
type EngagementsInput interface {
	pulumi.Input

	ToEngagementsOutput() EngagementsOutput
	ToEngagementsOutputWithContext(context.Context) EngagementsOutput
}

var engagementsPtrType = reflect.TypeOf((**Engagements)(nil)).Elem()

type EngagementsPtrInput interface {
	pulumi.Input

	ToEngagementsPtrOutput() EngagementsPtrOutput
	ToEngagementsPtrOutputWithContext(context.Context) EngagementsPtrOutput
}

type engagementsPtr string

func EngagementsPtr(v string) EngagementsPtrInput {
	return (*engagementsPtr)(&v)
}

func (*engagementsPtr) ElementType() reflect.Type {
	return engagementsPtrType
}

func (in *engagementsPtr) ToEngagementsPtrOutput() EngagementsPtrOutput {
	return pulumi.ToOutput(in).(EngagementsPtrOutput)
}

func (in *engagementsPtr) ToEngagementsPtrOutputWithContext(ctx context.Context) EngagementsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(EngagementsPtrOutput)
}

// Custom image architecture.
type ImageArchitecture string

const (
	// 64-bit architecture.
	ImageArchitectureX64 = ImageArchitecture("x64")
)

func (ImageArchitecture) ElementType() reflect.Type {
	return reflect.TypeOf((*ImageArchitecture)(nil)).Elem()
}

func (e ImageArchitecture) ToImageArchitectureOutput() ImageArchitectureOutput {
	return pulumi.ToOutput(e).(ImageArchitectureOutput)
}

func (e ImageArchitecture) ToImageArchitectureOutputWithContext(ctx context.Context) ImageArchitectureOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ImageArchitectureOutput)
}

func (e ImageArchitecture) ToImageArchitecturePtrOutput() ImageArchitecturePtrOutput {
	return e.ToImageArchitecturePtrOutputWithContext(context.Background())
}

func (e ImageArchitecture) ToImageArchitecturePtrOutputWithContext(ctx context.Context) ImageArchitecturePtrOutput {
	return ImageArchitecture(e).ToImageArchitectureOutputWithContext(ctx).ToImageArchitecturePtrOutputWithContext(ctx)
}

func (e ImageArchitecture) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ImageArchitecture) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ImageArchitecture) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ImageArchitecture) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ImageArchitectureOutput struct{ *pulumi.OutputState }

func (ImageArchitectureOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ImageArchitecture)(nil)).Elem()
}

func (o ImageArchitectureOutput) ToImageArchitectureOutput() ImageArchitectureOutput {
	return o
}

func (o ImageArchitectureOutput) ToImageArchitectureOutputWithContext(ctx context.Context) ImageArchitectureOutput {
	return o
}

func (o ImageArchitectureOutput) ToImageArchitecturePtrOutput() ImageArchitecturePtrOutput {
	return o.ToImageArchitecturePtrOutputWithContext(context.Background())
}

func (o ImageArchitectureOutput) ToImageArchitecturePtrOutputWithContext(ctx context.Context) ImageArchitecturePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ImageArchitecture) *ImageArchitecture {
		return &v
	}).(ImageArchitecturePtrOutput)
}

func (o ImageArchitectureOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ImageArchitectureOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ImageArchitecture) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ImageArchitectureOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ImageArchitectureOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ImageArchitecture) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ImageArchitecturePtrOutput struct{ *pulumi.OutputState }

func (ImageArchitecturePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ImageArchitecture)(nil)).Elem()
}

func (o ImageArchitecturePtrOutput) ToImageArchitecturePtrOutput() ImageArchitecturePtrOutput {
	return o
}

func (o ImageArchitecturePtrOutput) ToImageArchitecturePtrOutputWithContext(ctx context.Context) ImageArchitecturePtrOutput {
	return o
}

func (o ImageArchitecturePtrOutput) Elem() ImageArchitectureOutput {
	return o.ApplyT(func(v *ImageArchitecture) ImageArchitecture {
		if v != nil {
			return *v
		}
		var ret ImageArchitecture
		return ret
	}).(ImageArchitectureOutput)
}

func (o ImageArchitecturePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ImageArchitecturePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ImageArchitecture) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ImageArchitectureInput is an input type that accepts values of the ImageArchitecture enum
// A concrete instance of `ImageArchitectureInput` can be one of the following:
//
//	ImageArchitectureX64
type ImageArchitectureInput interface {
	pulumi.Input

	ToImageArchitectureOutput() ImageArchitectureOutput
	ToImageArchitectureOutputWithContext(context.Context) ImageArchitectureOutput
}

var imageArchitecturePtrType = reflect.TypeOf((**ImageArchitecture)(nil)).Elem()

type ImageArchitecturePtrInput interface {
	pulumi.Input

	ToImageArchitecturePtrOutput() ImageArchitecturePtrOutput
	ToImageArchitecturePtrOutputWithContext(context.Context) ImageArchitecturePtrOutput
}

type imageArchitecturePtr string

func ImageArchitecturePtr(v string) ImageArchitecturePtrInput {
	return (*imageArchitecturePtr)(&v)
}

func (*imageArchitecturePtr) ElementType() reflect.Type {
	return imageArchitecturePtrType
}

func (in *imageArchitecturePtr) ToImageArchitecturePtrOutput() ImageArchitecturePtrOutput {
	return pulumi.ToOutput(in).(ImageArchitecturePtrOutput)
}

func (in *imageArchitecturePtr) ToImageArchitecturePtrOutputWithContext(ctx context.Context) ImageArchitecturePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ImageArchitecturePtrOutput)
}

// Custom image OS state.
type ImageOSState string

const (
	// Sysprep generalization processed.
	ImageOSStateGeneralized = ImageOSState("Generalized")
	// Fully kept with user specified settings.
	ImageOSStateSpecialized = ImageOSState("Specialized")
)

func (ImageOSState) ElementType() reflect.Type {
	return reflect.TypeOf((*ImageOSState)(nil)).Elem()
}

func (e ImageOSState) ToImageOSStateOutput() ImageOSStateOutput {
	return pulumi.ToOutput(e).(ImageOSStateOutput)
}

func (e ImageOSState) ToImageOSStateOutputWithContext(ctx context.Context) ImageOSStateOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ImageOSStateOutput)
}

func (e ImageOSState) ToImageOSStatePtrOutput() ImageOSStatePtrOutput {
	return e.ToImageOSStatePtrOutputWithContext(context.Background())
}

func (e ImageOSState) ToImageOSStatePtrOutputWithContext(ctx context.Context) ImageOSStatePtrOutput {
	return ImageOSState(e).ToImageOSStateOutputWithContext(ctx).ToImageOSStatePtrOutputWithContext(ctx)
}

func (e ImageOSState) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ImageOSState) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ImageOSState) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ImageOSState) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ImageOSStateOutput struct{ *pulumi.OutputState }

func (ImageOSStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ImageOSState)(nil)).Elem()
}

func (o ImageOSStateOutput) ToImageOSStateOutput() ImageOSStateOutput {
	return o
}

func (o ImageOSStateOutput) ToImageOSStateOutputWithContext(ctx context.Context) ImageOSStateOutput {
	return o
}

func (o ImageOSStateOutput) ToImageOSStatePtrOutput() ImageOSStatePtrOutput {
	return o.ToImageOSStatePtrOutputWithContext(context.Background())
}

func (o ImageOSStateOutput) ToImageOSStatePtrOutputWithContext(ctx context.Context) ImageOSStatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ImageOSState) *ImageOSState {
		return &v
	}).(ImageOSStatePtrOutput)
}

func (o ImageOSStateOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ImageOSStateOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ImageOSState) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ImageOSStateOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ImageOSStateOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ImageOSState) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ImageOSStatePtrOutput struct{ *pulumi.OutputState }

func (ImageOSStatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ImageOSState)(nil)).Elem()
}

func (o ImageOSStatePtrOutput) ToImageOSStatePtrOutput() ImageOSStatePtrOutput {
	return o
}

func (o ImageOSStatePtrOutput) ToImageOSStatePtrOutputWithContext(ctx context.Context) ImageOSStatePtrOutput {
	return o
}

func (o ImageOSStatePtrOutput) Elem() ImageOSStateOutput {
	return o.ApplyT(func(v *ImageOSState) ImageOSState {
		if v != nil {
			return *v
		}
		var ret ImageOSState
		return ret
	}).(ImageOSStateOutput)
}

func (o ImageOSStatePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ImageOSStatePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ImageOSState) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ImageOSStateInput is an input type that accepts values of the ImageOSState enum
// A concrete instance of `ImageOSStateInput` can be one of the following:
//
//	ImageOSStateGeneralized
//	ImageOSStateSpecialized
type ImageOSStateInput interface {
	pulumi.Input

	ToImageOSStateOutput() ImageOSStateOutput
	ToImageOSStateOutputWithContext(context.Context) ImageOSStateOutput
}

var imageOSStatePtrType = reflect.TypeOf((**ImageOSState)(nil)).Elem()

type ImageOSStatePtrInput interface {
	pulumi.Input

	ToImageOSStatePtrOutput() ImageOSStatePtrOutput
	ToImageOSStatePtrOutputWithContext(context.Context) ImageOSStatePtrOutput
}

type imageOSStatePtr string

func ImageOSStatePtr(v string) ImageOSStatePtrInput {
	return (*imageOSStatePtr)(&v)
}

func (*imageOSStatePtr) ElementType() reflect.Type {
	return imageOSStatePtrType
}

func (in *imageOSStatePtr) ToImageOSStatePtrOutput() ImageOSStatePtrOutput {
	return pulumi.ToOutput(in).(ImageOSStatePtrOutput)
}

func (in *imageOSStatePtr) ToImageOSStatePtrOutputWithContext(ctx context.Context) ImageOSStatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ImageOSStatePtrOutput)
}

// Custom image security type.
type ImageSecurityType string

const (
	// Standard security type.
	ImageSecurityTypeStandard = ImageSecurityType("Standard")
	// Specify higher security level compared to Standard.
	ImageSecurityTypeTrustedLaunch = ImageSecurityType("TrustedLaunch")
)

func (ImageSecurityType) ElementType() reflect.Type {
	return reflect.TypeOf((*ImageSecurityType)(nil)).Elem()
}

func (e ImageSecurityType) ToImageSecurityTypeOutput() ImageSecurityTypeOutput {
	return pulumi.ToOutput(e).(ImageSecurityTypeOutput)
}

func (e ImageSecurityType) ToImageSecurityTypeOutputWithContext(ctx context.Context) ImageSecurityTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ImageSecurityTypeOutput)
}

func (e ImageSecurityType) ToImageSecurityTypePtrOutput() ImageSecurityTypePtrOutput {
	return e.ToImageSecurityTypePtrOutputWithContext(context.Background())
}

func (e ImageSecurityType) ToImageSecurityTypePtrOutputWithContext(ctx context.Context) ImageSecurityTypePtrOutput {
	return ImageSecurityType(e).ToImageSecurityTypeOutputWithContext(ctx).ToImageSecurityTypePtrOutputWithContext(ctx)
}

func (e ImageSecurityType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ImageSecurityType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ImageSecurityType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ImageSecurityType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ImageSecurityTypeOutput struct{ *pulumi.OutputState }

func (ImageSecurityTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ImageSecurityType)(nil)).Elem()
}

func (o ImageSecurityTypeOutput) ToImageSecurityTypeOutput() ImageSecurityTypeOutput {
	return o
}

func (o ImageSecurityTypeOutput) ToImageSecurityTypeOutputWithContext(ctx context.Context) ImageSecurityTypeOutput {
	return o
}

func (o ImageSecurityTypeOutput) ToImageSecurityTypePtrOutput() ImageSecurityTypePtrOutput {
	return o.ToImageSecurityTypePtrOutputWithContext(context.Background())
}

func (o ImageSecurityTypeOutput) ToImageSecurityTypePtrOutputWithContext(ctx context.Context) ImageSecurityTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ImageSecurityType) *ImageSecurityType {
		return &v
	}).(ImageSecurityTypePtrOutput)
}

func (o ImageSecurityTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ImageSecurityTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ImageSecurityType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ImageSecurityTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ImageSecurityTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ImageSecurityType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ImageSecurityTypePtrOutput struct{ *pulumi.OutputState }

func (ImageSecurityTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ImageSecurityType)(nil)).Elem()
}

func (o ImageSecurityTypePtrOutput) ToImageSecurityTypePtrOutput() ImageSecurityTypePtrOutput {
	return o
}

func (o ImageSecurityTypePtrOutput) ToImageSecurityTypePtrOutputWithContext(ctx context.Context) ImageSecurityTypePtrOutput {
	return o
}

func (o ImageSecurityTypePtrOutput) Elem() ImageSecurityTypeOutput {
	return o.ApplyT(func(v *ImageSecurityType) ImageSecurityType {
		if v != nil {
			return *v
		}
		var ret ImageSecurityType
		return ret
	}).(ImageSecurityTypeOutput)
}

func (o ImageSecurityTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ImageSecurityTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ImageSecurityType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ImageSecurityTypeInput is an input type that accepts values of the ImageSecurityType enum
// A concrete instance of `ImageSecurityTypeInput` can be one of the following:
//
//	ImageSecurityTypeStandard
//	ImageSecurityTypeTrustedLaunch
type ImageSecurityTypeInput interface {
	pulumi.Input

	ToImageSecurityTypeOutput() ImageSecurityTypeOutput
	ToImageSecurityTypeOutputWithContext(context.Context) ImageSecurityTypeOutput
}

var imageSecurityTypePtrType = reflect.TypeOf((**ImageSecurityType)(nil)).Elem()

type ImageSecurityTypePtrInput interface {
	pulumi.Input

	ToImageSecurityTypePtrOutput() ImageSecurityTypePtrOutput
	ToImageSecurityTypePtrOutputWithContext(context.Context) ImageSecurityTypePtrOutput
}

type imageSecurityTypePtr string

func ImageSecurityTypePtr(v string) ImageSecurityTypePtrInput {
	return (*imageSecurityTypePtr)(&v)
}

func (*imageSecurityTypePtr) ElementType() reflect.Type {
	return imageSecurityTypePtrType
}

func (in *imageSecurityTypePtr) ToImageSecurityTypePtrOutput() ImageSecurityTypePtrOutput {
	return pulumi.ToOutput(in).(ImageSecurityTypePtrOutput)
}

func (in *imageSecurityTypePtr) ToImageSecurityTypePtrOutputWithContext(ctx context.Context) ImageSecurityTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ImageSecurityTypePtrOutput)
}

// Custom image source type.
type ImageSource string

const (
	// Unknown image source type.
	ImageSourceUnknown = ImageSource("Unknown")
	// Specify image onboarding through VHD.
	ImageSourceVHD = ImageSource("VHD")
)

func (ImageSource) ElementType() reflect.Type {
	return reflect.TypeOf((*ImageSource)(nil)).Elem()
}

func (e ImageSource) ToImageSourceOutput() ImageSourceOutput {
	return pulumi.ToOutput(e).(ImageSourceOutput)
}

func (e ImageSource) ToImageSourceOutputWithContext(ctx context.Context) ImageSourceOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ImageSourceOutput)
}

func (e ImageSource) ToImageSourcePtrOutput() ImageSourcePtrOutput {
	return e.ToImageSourcePtrOutputWithContext(context.Background())
}

func (e ImageSource) ToImageSourcePtrOutputWithContext(ctx context.Context) ImageSourcePtrOutput {
	return ImageSource(e).ToImageSourceOutputWithContext(ctx).ToImageSourcePtrOutputWithContext(ctx)
}

func (e ImageSource) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ImageSource) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ImageSource) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ImageSource) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ImageSourceOutput struct{ *pulumi.OutputState }

func (ImageSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ImageSource)(nil)).Elem()
}

func (o ImageSourceOutput) ToImageSourceOutput() ImageSourceOutput {
	return o
}

func (o ImageSourceOutput) ToImageSourceOutputWithContext(ctx context.Context) ImageSourceOutput {
	return o
}

func (o ImageSourceOutput) ToImageSourcePtrOutput() ImageSourcePtrOutput {
	return o.ToImageSourcePtrOutputWithContext(context.Background())
}

func (o ImageSourceOutput) ToImageSourcePtrOutputWithContext(ctx context.Context) ImageSourcePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ImageSource) *ImageSource {
		return &v
	}).(ImageSourcePtrOutput)
}

func (o ImageSourceOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ImageSourceOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ImageSource) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ImageSourceOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ImageSourceOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ImageSource) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ImageSourcePtrOutput struct{ *pulumi.OutputState }

func (ImageSourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ImageSource)(nil)).Elem()
}

func (o ImageSourcePtrOutput) ToImageSourcePtrOutput() ImageSourcePtrOutput {
	return o
}

func (o ImageSourcePtrOutput) ToImageSourcePtrOutputWithContext(ctx context.Context) ImageSourcePtrOutput {
	return o
}

func (o ImageSourcePtrOutput) Elem() ImageSourceOutput {
	return o.ApplyT(func(v *ImageSource) ImageSource {
		if v != nil {
			return *v
		}
		var ret ImageSource
		return ret
	}).(ImageSourceOutput)
}

func (o ImageSourcePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ImageSourcePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ImageSource) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ImageSourceInput is an input type that accepts values of the ImageSource enum
// A concrete instance of `ImageSourceInput` can be one of the following:
//
//	ImageSourceUnknown
//	ImageSourceVHD
type ImageSourceInput interface {
	pulumi.Input

	ToImageSourceOutput() ImageSourceOutput
	ToImageSourceOutputWithContext(context.Context) ImageSourceOutput
}

var imageSourcePtrType = reflect.TypeOf((**ImageSource)(nil)).Elem()

type ImageSourcePtrInput interface {
	pulumi.Input

	ToImageSourcePtrOutput() ImageSourcePtrOutput
	ToImageSourcePtrOutputWithContext(context.Context) ImageSourcePtrOutput
}

type imageSourcePtr string

func ImageSourcePtr(v string) ImageSourcePtrInput {
	return (*imageSourcePtr)(&v)
}

func (*imageSourcePtr) ElementType() reflect.Type {
	return imageSourcePtrType
}

func (in *imageSourcePtr) ToImageSourcePtrOutput() ImageSourcePtrOutput {
	return pulumi.ToOutput(in).(ImageSourcePtrOutput)
}

func (in *imageSourcePtr) ToImageSourcePtrOutputWithContext(ctx context.Context) ImageSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ImageSourcePtrOutput)
}

// Specifies how the first party applications should be inter-operated with user's application.
type InteropExecutionMode string

const (
	// User application will test with the first party applications. For out-of-box tests, additional test cases for first party applications will also be run.
	InteropExecutionModeFirstPartyAppWithTests = InteropExecutionMode("firstPartyAppWithTests")
	// User application will test with the first party applications.
	InteropExecutionModeFirstPartyApp = InteropExecutionMode("firstPartyApp")
)

func (InteropExecutionMode) ElementType() reflect.Type {
	return reflect.TypeOf((*InteropExecutionMode)(nil)).Elem()
}

func (e InteropExecutionMode) ToInteropExecutionModeOutput() InteropExecutionModeOutput {
	return pulumi.ToOutput(e).(InteropExecutionModeOutput)
}

func (e InteropExecutionMode) ToInteropExecutionModeOutputWithContext(ctx context.Context) InteropExecutionModeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(InteropExecutionModeOutput)
}

func (e InteropExecutionMode) ToInteropExecutionModePtrOutput() InteropExecutionModePtrOutput {
	return e.ToInteropExecutionModePtrOutputWithContext(context.Background())
}

func (e InteropExecutionMode) ToInteropExecutionModePtrOutputWithContext(ctx context.Context) InteropExecutionModePtrOutput {
	return InteropExecutionMode(e).ToInteropExecutionModeOutputWithContext(ctx).ToInteropExecutionModePtrOutputWithContext(ctx)
}

func (e InteropExecutionMode) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e InteropExecutionMode) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e InteropExecutionMode) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e InteropExecutionMode) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type InteropExecutionModeOutput struct{ *pulumi.OutputState }

func (InteropExecutionModeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InteropExecutionMode)(nil)).Elem()
}

func (o InteropExecutionModeOutput) ToInteropExecutionModeOutput() InteropExecutionModeOutput {
	return o
}

func (o InteropExecutionModeOutput) ToInteropExecutionModeOutputWithContext(ctx context.Context) InteropExecutionModeOutput {
	return o
}

func (o InteropExecutionModeOutput) ToInteropExecutionModePtrOutput() InteropExecutionModePtrOutput {
	return o.ToInteropExecutionModePtrOutputWithContext(context.Background())
}

func (o InteropExecutionModeOutput) ToInteropExecutionModePtrOutputWithContext(ctx context.Context) InteropExecutionModePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InteropExecutionMode) *InteropExecutionMode {
		return &v
	}).(InteropExecutionModePtrOutput)
}

func (o InteropExecutionModeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o InteropExecutionModeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e InteropExecutionMode) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o InteropExecutionModeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o InteropExecutionModeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e InteropExecutionMode) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type InteropExecutionModePtrOutput struct{ *pulumi.OutputState }

func (InteropExecutionModePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InteropExecutionMode)(nil)).Elem()
}

func (o InteropExecutionModePtrOutput) ToInteropExecutionModePtrOutput() InteropExecutionModePtrOutput {
	return o
}

func (o InteropExecutionModePtrOutput) ToInteropExecutionModePtrOutputWithContext(ctx context.Context) InteropExecutionModePtrOutput {
	return o
}

func (o InteropExecutionModePtrOutput) Elem() InteropExecutionModeOutput {
	return o.ApplyT(func(v *InteropExecutionMode) InteropExecutionMode {
		if v != nil {
			return *v
		}
		var ret InteropExecutionMode
		return ret
	}).(InteropExecutionModeOutput)
}

func (o InteropExecutionModePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o InteropExecutionModePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *InteropExecutionMode) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// InteropExecutionModeInput is an input type that accepts values of the InteropExecutionMode enum
// A concrete instance of `InteropExecutionModeInput` can be one of the following:
//
//	InteropExecutionModeFirstPartyAppWithTests
//	InteropExecutionModeFirstPartyApp
type InteropExecutionModeInput interface {
	pulumi.Input

	ToInteropExecutionModeOutput() InteropExecutionModeOutput
	ToInteropExecutionModeOutputWithContext(context.Context) InteropExecutionModeOutput
}

var interopExecutionModePtrType = reflect.TypeOf((**InteropExecutionMode)(nil)).Elem()

type InteropExecutionModePtrInput interface {
	pulumi.Input

	ToInteropExecutionModePtrOutput() InteropExecutionModePtrOutput
	ToInteropExecutionModePtrOutputWithContext(context.Context) InteropExecutionModePtrOutput
}

type interopExecutionModePtr string

func InteropExecutionModePtr(v string) InteropExecutionModePtrInput {
	return (*interopExecutionModePtr)(&v)
}

func (*interopExecutionModePtr) ElementType() reflect.Type {
	return interopExecutionModePtrType
}

func (in *interopExecutionModePtr) ToInteropExecutionModePtrOutput() InteropExecutionModePtrOutput {
	return pulumi.ToOutput(in).(InteropExecutionModePtrOutput)
}

func (in *interopExecutionModePtr) ToInteropExecutionModePtrOutputWithContext(ctx context.Context) InteropExecutionModePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(InteropExecutionModePtrOutput)
}

// Extract status.
type IntuneExtractStatus string

const (
	IntuneExtractStatusReady           = IntuneExtractStatus("Ready")
	IntuneExtractStatusUploading       = IntuneExtractStatus("Uploading")
	IntuneExtractStatusUploadFailed    = IntuneExtractStatus("UploadFailed")
	IntuneExtractStatusExtractFailed   = IntuneExtractStatus("ExtractFailed")
	IntuneExtractStatusNoDependencyApp = IntuneExtractStatus("NoDependencyApp")
)

func (IntuneExtractStatus) ElementType() reflect.Type {
	return reflect.TypeOf((*IntuneExtractStatus)(nil)).Elem()
}

func (e IntuneExtractStatus) ToIntuneExtractStatusOutput() IntuneExtractStatusOutput {
	return pulumi.ToOutput(e).(IntuneExtractStatusOutput)
}

func (e IntuneExtractStatus) ToIntuneExtractStatusOutputWithContext(ctx context.Context) IntuneExtractStatusOutput {
	return pulumi.ToOutputWithContext(ctx, e).(IntuneExtractStatusOutput)
}

func (e IntuneExtractStatus) ToIntuneExtractStatusPtrOutput() IntuneExtractStatusPtrOutput {
	return e.ToIntuneExtractStatusPtrOutputWithContext(context.Background())
}

func (e IntuneExtractStatus) ToIntuneExtractStatusPtrOutputWithContext(ctx context.Context) IntuneExtractStatusPtrOutput {
	return IntuneExtractStatus(e).ToIntuneExtractStatusOutputWithContext(ctx).ToIntuneExtractStatusPtrOutputWithContext(ctx)
}

func (e IntuneExtractStatus) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e IntuneExtractStatus) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e IntuneExtractStatus) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e IntuneExtractStatus) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type IntuneExtractStatusOutput struct{ *pulumi.OutputState }

func (IntuneExtractStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IntuneExtractStatus)(nil)).Elem()
}

func (o IntuneExtractStatusOutput) ToIntuneExtractStatusOutput() IntuneExtractStatusOutput {
	return o
}

func (o IntuneExtractStatusOutput) ToIntuneExtractStatusOutputWithContext(ctx context.Context) IntuneExtractStatusOutput {
	return o
}

func (o IntuneExtractStatusOutput) ToIntuneExtractStatusPtrOutput() IntuneExtractStatusPtrOutput {
	return o.ToIntuneExtractStatusPtrOutputWithContext(context.Background())
}

func (o IntuneExtractStatusOutput) ToIntuneExtractStatusPtrOutputWithContext(ctx context.Context) IntuneExtractStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IntuneExtractStatus) *IntuneExtractStatus {
		return &v
	}).(IntuneExtractStatusPtrOutput)
}

func (o IntuneExtractStatusOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o IntuneExtractStatusOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e IntuneExtractStatus) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o IntuneExtractStatusOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o IntuneExtractStatusOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e IntuneExtractStatus) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type IntuneExtractStatusPtrOutput struct{ *pulumi.OutputState }

func (IntuneExtractStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IntuneExtractStatus)(nil)).Elem()
}

func (o IntuneExtractStatusPtrOutput) ToIntuneExtractStatusPtrOutput() IntuneExtractStatusPtrOutput {
	return o
}

func (o IntuneExtractStatusPtrOutput) ToIntuneExtractStatusPtrOutputWithContext(ctx context.Context) IntuneExtractStatusPtrOutput {
	return o
}

func (o IntuneExtractStatusPtrOutput) Elem() IntuneExtractStatusOutput {
	return o.ApplyT(func(v *IntuneExtractStatus) IntuneExtractStatus {
		if v != nil {
			return *v
		}
		var ret IntuneExtractStatus
		return ret
	}).(IntuneExtractStatusOutput)
}

func (o IntuneExtractStatusPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o IntuneExtractStatusPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *IntuneExtractStatus) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// IntuneExtractStatusInput is an input type that accepts values of the IntuneExtractStatus enum
// A concrete instance of `IntuneExtractStatusInput` can be one of the following:
//
//	IntuneExtractStatusReady
//	IntuneExtractStatusUploading
//	IntuneExtractStatusUploadFailed
//	IntuneExtractStatusExtractFailed
//	IntuneExtractStatusNoDependencyApp
type IntuneExtractStatusInput interface {
	pulumi.Input

	ToIntuneExtractStatusOutput() IntuneExtractStatusOutput
	ToIntuneExtractStatusOutputWithContext(context.Context) IntuneExtractStatusOutput
}

var intuneExtractStatusPtrType = reflect.TypeOf((**IntuneExtractStatus)(nil)).Elem()

type IntuneExtractStatusPtrInput interface {
	pulumi.Input

	ToIntuneExtractStatusPtrOutput() IntuneExtractStatusPtrOutput
	ToIntuneExtractStatusPtrOutputWithContext(context.Context) IntuneExtractStatusPtrOutput
}

type intuneExtractStatusPtr string

func IntuneExtractStatusPtr(v string) IntuneExtractStatusPtrInput {
	return (*intuneExtractStatusPtr)(&v)
}

func (*intuneExtractStatusPtr) ElementType() reflect.Type {
	return intuneExtractStatusPtrType
}

func (in *intuneExtractStatusPtr) ToIntuneExtractStatusPtrOutput() IntuneExtractStatusPtrOutput {
	return pulumi.ToOutput(in).(IntuneExtractStatusPtrOutput)
}

func (in *intuneExtractStatusPtr) ToIntuneExtractStatusPtrOutputWithContext(ctx context.Context) IntuneExtractStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(IntuneExtractStatusPtrOutput)
}

// Specifies the tabs when creating / cloning / editing a package.
type PackageStudioTabs string

const (
	PackageStudioTabsUnspecified        = PackageStudioTabs("Unspecified")
	PackageStudioTabsBasicsTab          = PackageStudioTabs("BasicsTab")
	PackageStudioTabsConfigureTestTab   = PackageStudioTabs("ConfigureTestTab")
	PackageStudioTabsEditPackageTab     = PackageStudioTabs("EditPackageTab")
	PackageStudioTabsTestMatrixTab      = PackageStudioTabs("TestMatrixTab")
	PackageStudioTabsTagsTab            = PackageStudioTabs("TagsTab")
	PackageStudioTabsReviewAndCreateTab = PackageStudioTabs("ReviewAndCreateTab")
)

func (PackageStudioTabs) ElementType() reflect.Type {
	return reflect.TypeOf((*PackageStudioTabs)(nil)).Elem()
}

func (e PackageStudioTabs) ToPackageStudioTabsOutput() PackageStudioTabsOutput {
	return pulumi.ToOutput(e).(PackageStudioTabsOutput)
}

func (e PackageStudioTabs) ToPackageStudioTabsOutputWithContext(ctx context.Context) PackageStudioTabsOutput {
	return pulumi.ToOutputWithContext(ctx, e).(PackageStudioTabsOutput)
}

func (e PackageStudioTabs) ToPackageStudioTabsPtrOutput() PackageStudioTabsPtrOutput {
	return e.ToPackageStudioTabsPtrOutputWithContext(context.Background())
}

func (e PackageStudioTabs) ToPackageStudioTabsPtrOutputWithContext(ctx context.Context) PackageStudioTabsPtrOutput {
	return PackageStudioTabs(e).ToPackageStudioTabsOutputWithContext(ctx).ToPackageStudioTabsPtrOutputWithContext(ctx)
}

func (e PackageStudioTabs) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e PackageStudioTabs) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e PackageStudioTabs) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e PackageStudioTabs) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type PackageStudioTabsOutput struct{ *pulumi.OutputState }

func (PackageStudioTabsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PackageStudioTabs)(nil)).Elem()
}

func (o PackageStudioTabsOutput) ToPackageStudioTabsOutput() PackageStudioTabsOutput {
	return o
}

func (o PackageStudioTabsOutput) ToPackageStudioTabsOutputWithContext(ctx context.Context) PackageStudioTabsOutput {
	return o
}

func (o PackageStudioTabsOutput) ToPackageStudioTabsPtrOutput() PackageStudioTabsPtrOutput {
	return o.ToPackageStudioTabsPtrOutputWithContext(context.Background())
}

func (o PackageStudioTabsOutput) ToPackageStudioTabsPtrOutputWithContext(ctx context.Context) PackageStudioTabsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PackageStudioTabs) *PackageStudioTabs {
		return &v
	}).(PackageStudioTabsPtrOutput)
}

func (o PackageStudioTabsOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o PackageStudioTabsOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PackageStudioTabs) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o PackageStudioTabsOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PackageStudioTabsOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PackageStudioTabs) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type PackageStudioTabsPtrOutput struct{ *pulumi.OutputState }

func (PackageStudioTabsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PackageStudioTabs)(nil)).Elem()
}

func (o PackageStudioTabsPtrOutput) ToPackageStudioTabsPtrOutput() PackageStudioTabsPtrOutput {
	return o
}

func (o PackageStudioTabsPtrOutput) ToPackageStudioTabsPtrOutputWithContext(ctx context.Context) PackageStudioTabsPtrOutput {
	return o
}

func (o PackageStudioTabsPtrOutput) Elem() PackageStudioTabsOutput {
	return o.ApplyT(func(v *PackageStudioTabs) PackageStudioTabs {
		if v != nil {
			return *v
		}
		var ret PackageStudioTabs
		return ret
	}).(PackageStudioTabsOutput)
}

func (o PackageStudioTabsPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PackageStudioTabsPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *PackageStudioTabs) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// PackageStudioTabsInput is an input type that accepts values of the PackageStudioTabs enum
// A concrete instance of `PackageStudioTabsInput` can be one of the following:
//
//	PackageStudioTabsUnspecified
//	PackageStudioTabsBasicsTab
//	PackageStudioTabsConfigureTestTab
//	PackageStudioTabsEditPackageTab
//	PackageStudioTabsTestMatrixTab
//	PackageStudioTabsTagsTab
//	PackageStudioTabsReviewAndCreateTab
type PackageStudioTabsInput interface {
	pulumi.Input

	ToPackageStudioTabsOutput() PackageStudioTabsOutput
	ToPackageStudioTabsOutputWithContext(context.Context) PackageStudioTabsOutput
}

var packageStudioTabsPtrType = reflect.TypeOf((**PackageStudioTabs)(nil)).Elem()

type PackageStudioTabsPtrInput interface {
	pulumi.Input

	ToPackageStudioTabsPtrOutput() PackageStudioTabsPtrOutput
	ToPackageStudioTabsPtrOutputWithContext(context.Context) PackageStudioTabsPtrOutput
}

type packageStudioTabsPtr string

func PackageStudioTabsPtr(v string) PackageStudioTabsPtrInput {
	return (*packageStudioTabsPtr)(&v)
}

func (*packageStudioTabsPtr) ElementType() reflect.Type {
	return packageStudioTabsPtrType
}

func (in *packageStudioTabsPtr) ToPackageStudioTabsPtrOutput() PackageStudioTabsPtrOutput {
	return pulumi.ToOutput(in).(PackageStudioTabsPtrOutput)
}

func (in *packageStudioTabsPtr) ToPackageStudioTabsPtrOutputWithContext(ctx context.Context) PackageStudioTabsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(PackageStudioTabsPtrOutput)
}

type RequestTypes string

const (
	RequestTypesPreReleaseAccess = RequestTypes("PreReleaseAccess")
)

func (RequestTypes) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestTypes)(nil)).Elem()
}

func (e RequestTypes) ToRequestTypesOutput() RequestTypesOutput {
	return pulumi.ToOutput(e).(RequestTypesOutput)
}

func (e RequestTypes) ToRequestTypesOutputWithContext(ctx context.Context) RequestTypesOutput {
	return pulumi.ToOutputWithContext(ctx, e).(RequestTypesOutput)
}

func (e RequestTypes) ToRequestTypesPtrOutput() RequestTypesPtrOutput {
	return e.ToRequestTypesPtrOutputWithContext(context.Background())
}

func (e RequestTypes) ToRequestTypesPtrOutputWithContext(ctx context.Context) RequestTypesPtrOutput {
	return RequestTypes(e).ToRequestTypesOutputWithContext(ctx).ToRequestTypesPtrOutputWithContext(ctx)
}

func (e RequestTypes) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e RequestTypes) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e RequestTypes) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e RequestTypes) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type RequestTypesOutput struct{ *pulumi.OutputState }

func (RequestTypesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestTypes)(nil)).Elem()
}

func (o RequestTypesOutput) ToRequestTypesOutput() RequestTypesOutput {
	return o
}

func (o RequestTypesOutput) ToRequestTypesOutputWithContext(ctx context.Context) RequestTypesOutput {
	return o
}

func (o RequestTypesOutput) ToRequestTypesPtrOutput() RequestTypesPtrOutput {
	return o.ToRequestTypesPtrOutputWithContext(context.Background())
}

func (o RequestTypesOutput) ToRequestTypesPtrOutputWithContext(ctx context.Context) RequestTypesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RequestTypes) *RequestTypes {
		return &v
	}).(RequestTypesPtrOutput)
}

func (o RequestTypesOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o RequestTypesOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RequestTypes) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o RequestTypesOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RequestTypesOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RequestTypes) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type RequestTypesPtrOutput struct{ *pulumi.OutputState }

func (RequestTypesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RequestTypes)(nil)).Elem()
}

func (o RequestTypesPtrOutput) ToRequestTypesPtrOutput() RequestTypesPtrOutput {
	return o
}

func (o RequestTypesPtrOutput) ToRequestTypesPtrOutputWithContext(ctx context.Context) RequestTypesPtrOutput {
	return o
}

func (o RequestTypesPtrOutput) Elem() RequestTypesOutput {
	return o.ApplyT(func(v *RequestTypes) RequestTypes {
		if v != nil {
			return *v
		}
		var ret RequestTypes
		return ret
	}).(RequestTypesOutput)
}

func (o RequestTypesPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RequestTypesPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *RequestTypes) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// RequestTypesInput is an input type that accepts values of the RequestTypes enum
// A concrete instance of `RequestTypesInput` can be one of the following:
//
//	RequestTypesPreReleaseAccess
type RequestTypesInput interface {
	pulumi.Input

	ToRequestTypesOutput() RequestTypesOutput
	ToRequestTypesOutputWithContext(context.Context) RequestTypesOutput
}

var requestTypesPtrType = reflect.TypeOf((**RequestTypes)(nil)).Elem()

type RequestTypesPtrInput interface {
	pulumi.Input

	ToRequestTypesPtrOutput() RequestTypesPtrOutput
	ToRequestTypesPtrOutputWithContext(context.Context) RequestTypesPtrOutput
}

type requestTypesPtr string

func RequestTypesPtr(v string) RequestTypesPtrInput {
	return (*requestTypesPtr)(&v)
}

func (*requestTypesPtr) ElementType() reflect.Type {
	return requestTypesPtrType
}

func (in *requestTypesPtr) ToRequestTypesPtrOutput() RequestTypesPtrOutput {
	return pulumi.ToOutput(in).(RequestTypesPtrOutput)
}

func (in *requestTypesPtr) ToRequestTypesPtrOutputWithContext(ctx context.Context) RequestTypesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(RequestTypesPtrOutput)
}

// The type of the test.
type TestType string

const (
	TestTypeOutOfBoxTest   = TestType("OutOfBoxTest")
	TestTypeFunctionalTest = TestType("FunctionalTest")
)

func (TestType) ElementType() reflect.Type {
	return reflect.TypeOf((*TestType)(nil)).Elem()
}

func (e TestType) ToTestTypeOutput() TestTypeOutput {
	return pulumi.ToOutput(e).(TestTypeOutput)
}

func (e TestType) ToTestTypeOutputWithContext(ctx context.Context) TestTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TestTypeOutput)
}

func (e TestType) ToTestTypePtrOutput() TestTypePtrOutput {
	return e.ToTestTypePtrOutputWithContext(context.Background())
}

func (e TestType) ToTestTypePtrOutputWithContext(ctx context.Context) TestTypePtrOutput {
	return TestType(e).ToTestTypeOutputWithContext(ctx).ToTestTypePtrOutputWithContext(ctx)
}

func (e TestType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TestType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TestType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TestType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TestTypeOutput struct{ *pulumi.OutputState }

func (TestTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TestType)(nil)).Elem()
}

func (o TestTypeOutput) ToTestTypeOutput() TestTypeOutput {
	return o
}

func (o TestTypeOutput) ToTestTypeOutputWithContext(ctx context.Context) TestTypeOutput {
	return o
}

func (o TestTypeOutput) ToTestTypePtrOutput() TestTypePtrOutput {
	return o.ToTestTypePtrOutputWithContext(context.Background())
}

func (o TestTypeOutput) ToTestTypePtrOutputWithContext(ctx context.Context) TestTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TestType) *TestType {
		return &v
	}).(TestTypePtrOutput)
}

func (o TestTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TestTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TestType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TestTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TestTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TestType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TestTypePtrOutput struct{ *pulumi.OutputState }

func (TestTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TestType)(nil)).Elem()
}

func (o TestTypePtrOutput) ToTestTypePtrOutput() TestTypePtrOutput {
	return o
}

func (o TestTypePtrOutput) ToTestTypePtrOutputWithContext(ctx context.Context) TestTypePtrOutput {
	return o
}

func (o TestTypePtrOutput) Elem() TestTypeOutput {
	return o.ApplyT(func(v *TestType) TestType {
		if v != nil {
			return *v
		}
		var ret TestType
		return ret
	}).(TestTypeOutput)
}

func (o TestTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TestTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TestType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TestTypeInput is an input type that accepts values of the TestType enum
// A concrete instance of `TestTypeInput` can be one of the following:
//
//	TestTypeOutOfBoxTest
//	TestTypeFunctionalTest
type TestTypeInput interface {
	pulumi.Input

	ToTestTypeOutput() TestTypeOutput
	ToTestTypeOutputWithContext(context.Context) TestTypeOutput
}

var testTypePtrType = reflect.TypeOf((**TestType)(nil)).Elem()

type TestTypePtrInput interface {
	pulumi.Input

	ToTestTypePtrOutput() TestTypePtrOutput
	ToTestTypePtrOutputWithContext(context.Context) TestTypePtrOutput
}

type testTypePtr string

func TestTypePtr(v string) TestTypePtrInput {
	return (*testTypePtr)(&v)
}

func (*testTypePtr) ElementType() reflect.Type {
	return testTypePtrType
}

func (in *testTypePtr) ToTestTypePtrOutput() TestTypePtrOutput {
	return pulumi.ToOutput(in).(TestTypePtrOutput)
}

func (in *testTypePtr) ToTestTypePtrOutputWithContext(ctx context.Context) TestTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TestTypePtrOutput)
}

// The tier of this particular SKU.
type Tier string

const (
	TierStandard = Tier("Standard")
)

func (Tier) ElementType() reflect.Type {
	return reflect.TypeOf((*Tier)(nil)).Elem()
}

func (e Tier) ToTierOutput() TierOutput {
	return pulumi.ToOutput(e).(TierOutput)
}

func (e Tier) ToTierOutputWithContext(ctx context.Context) TierOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TierOutput)
}

func (e Tier) ToTierPtrOutput() TierPtrOutput {
	return e.ToTierPtrOutputWithContext(context.Background())
}

func (e Tier) ToTierPtrOutputWithContext(ctx context.Context) TierPtrOutput {
	return Tier(e).ToTierOutputWithContext(ctx).ToTierPtrOutputWithContext(ctx)
}

func (e Tier) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e Tier) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e Tier) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e Tier) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TierOutput struct{ *pulumi.OutputState }

func (TierOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Tier)(nil)).Elem()
}

func (o TierOutput) ToTierOutput() TierOutput {
	return o
}

func (o TierOutput) ToTierOutputWithContext(ctx context.Context) TierOutput {
	return o
}

func (o TierOutput) ToTierPtrOutput() TierPtrOutput {
	return o.ToTierPtrOutputWithContext(context.Background())
}

func (o TierOutput) ToTierPtrOutputWithContext(ctx context.Context) TierPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Tier) *Tier {
		return &v
	}).(TierPtrOutput)
}

func (o TierOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TierOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e Tier) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TierOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TierOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e Tier) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TierPtrOutput struct{ *pulumi.OutputState }

func (TierPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Tier)(nil)).Elem()
}

func (o TierPtrOutput) ToTierPtrOutput() TierPtrOutput {
	return o
}

func (o TierPtrOutput) ToTierPtrOutputWithContext(ctx context.Context) TierPtrOutput {
	return o
}

func (o TierPtrOutput) Elem() TierOutput {
	return o.ApplyT(func(v *Tier) Tier {
		if v != nil {
			return *v
		}
		var ret Tier
		return ret
	}).(TierOutput)
}

func (o TierPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TierPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *Tier) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TierInput is an input type that accepts values of the Tier enum
// A concrete instance of `TierInput` can be one of the following:
//
//	TierStandard
type TierInput interface {
	pulumi.Input

	ToTierOutput() TierOutput
	ToTierOutputWithContext(context.Context) TierOutput
}

var tierPtrType = reflect.TypeOf((**Tier)(nil)).Elem()

type TierPtrInput interface {
	pulumi.Input

	ToTierPtrOutput() TierPtrOutput
	ToTierPtrOutputWithContext(context.Context) TierPtrOutput
}

type tierPtr string

func TierPtr(v string) TierPtrInput {
	return (*tierPtr)(&v)
}

func (*tierPtr) ElementType() reflect.Type {
	return tierPtrType
}

func (in *tierPtr) ToTierPtrOutput() TierPtrOutput {
	return pulumi.ToOutput(in).(TierPtrOutput)
}

func (in *tierPtr) ToTierPtrOutputWithContext(ctx context.Context) TierPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TierPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(ActionOutput{})
	pulumi.RegisterOutputType(ActionPtrOutput{})
	pulumi.RegisterOutputType(ArchitectureOutput{})
	pulumi.RegisterOutputType(ArchitecturePtrOutput{})
	pulumi.RegisterOutputType(ContentTypeOutput{})
	pulumi.RegisterOutputType(ContentTypePtrOutput{})
	pulumi.RegisterOutputType(CredentialTypeOutput{})
	pulumi.RegisterOutputType(CredentialTypePtrOutput{})
	pulumi.RegisterOutputType(DraftPackageSourceTypeOutput{})
	pulumi.RegisterOutputType(DraftPackageSourceTypePtrOutput{})
	pulumi.RegisterOutputType(EngagementsOutput{})
	pulumi.RegisterOutputType(EngagementsPtrOutput{})
	pulumi.RegisterOutputType(ImageArchitectureOutput{})
	pulumi.RegisterOutputType(ImageArchitecturePtrOutput{})
	pulumi.RegisterOutputType(ImageOSStateOutput{})
	pulumi.RegisterOutputType(ImageOSStatePtrOutput{})
	pulumi.RegisterOutputType(ImageSecurityTypeOutput{})
	pulumi.RegisterOutputType(ImageSecurityTypePtrOutput{})
	pulumi.RegisterOutputType(ImageSourceOutput{})
	pulumi.RegisterOutputType(ImageSourcePtrOutput{})
	pulumi.RegisterOutputType(InteropExecutionModeOutput{})
	pulumi.RegisterOutputType(InteropExecutionModePtrOutput{})
	pulumi.RegisterOutputType(IntuneExtractStatusOutput{})
	pulumi.RegisterOutputType(IntuneExtractStatusPtrOutput{})
	pulumi.RegisterOutputType(PackageStudioTabsOutput{})
	pulumi.RegisterOutputType(PackageStudioTabsPtrOutput{})
	pulumi.RegisterOutputType(RequestTypesOutput{})
	pulumi.RegisterOutputType(RequestTypesPtrOutput{})
	pulumi.RegisterOutputType(TestTypeOutput{})
	pulumi.RegisterOutputType(TestTypePtrOutput{})
	pulumi.RegisterOutputType(TierOutput{})
	pulumi.RegisterOutputType(TierPtrOutput{})
}
