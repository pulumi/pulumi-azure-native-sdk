// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package testbase

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The test base custom image resource.
// Azure REST API version: 2023-11-01-preview.
type CustomImage struct {
	pulumi.CustomResourceState

	// The UTC timestamp when the custom image was published.
	CreationTime pulumi.StringOutput `pulumi:"creationTime"`
	// Image definition name.
	DefinitionName pulumi.StringOutput `pulumi:"definitionName"`
	// The name of the resource
	Name pulumi.StringOutput `pulumi:"name"`
	// This property indicates the size of the VHD to be created.
	OsDiskImageSizeInGB pulumi.Float64Output `pulumi:"osDiskImageSizeInGB"`
	// Product of the custom image.
	Product pulumi.StringOutput `pulumi:"product"`
	// The provisioning state of the resource.
	ProvisioningState pulumi.StringOutput `pulumi:"provisioningState"`
	// Release of the custom image OS.
	Release pulumi.StringOutput `pulumi:"release"`
	// The release version date of the release of the custom image OS.
	ReleaseVersionDate pulumi.StringOutput `pulumi:"releaseVersionDate"`
	// Custom image source type.
	Source pulumi.StringOutput `pulumi:"source"`
	// Status of the custom image.
	Status pulumi.StringOutput `pulumi:"status"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponseOutput `pulumi:"systemData"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type pulumi.StringOutput `pulumi:"type"`
	// The validation result of the custom image.
	ValidationResults ImageValidationResultsResponseOutput `pulumi:"validationResults"`
	// Image version name.
	VersionName pulumi.StringOutput `pulumi:"versionName"`
	// The file name of the associated VHD resource.
	VhdFileName pulumi.StringOutput `pulumi:"vhdFileName"`
	// The Id of the associated VHD resource.
	VhdId pulumi.StringPtrOutput `pulumi:"vhdId"`
}

// NewCustomImage registers a new resource with the given unique name, arguments, and options.
func NewCustomImage(ctx *pulumi.Context,
	name string, args *CustomImageArgs, opts ...pulumi.ResourceOption) (*CustomImage, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DefinitionName == nil {
		return nil, errors.New("invalid value for required argument 'DefinitionName'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	if args.TestBaseAccountName == nil {
		return nil, errors.New("invalid value for required argument 'TestBaseAccountName'")
	}
	if args.VersionName == nil {
		return nil, errors.New("invalid value for required argument 'VersionName'")
	}
	if args.Source == nil {
		args.Source = pulumi.String("VHD")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:testbase/v20231101preview:CustomImage"),
		},
	})
	opts = append(opts, aliases)
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource CustomImage
	err := ctx.RegisterResource("azure-native:testbase:CustomImage", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCustomImage gets an existing CustomImage resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCustomImage(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CustomImageState, opts ...pulumi.ResourceOption) (*CustomImage, error) {
	var resource CustomImage
	err := ctx.ReadResource("azure-native:testbase:CustomImage", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CustomImage resources.
type customImageState struct {
}

type CustomImageState struct {
}

func (CustomImageState) ElementType() reflect.Type {
	return reflect.TypeOf((*customImageState)(nil)).Elem()
}

type customImageArgs struct {
	// The resource name of the test base custom image.
	CustomImageName *string `pulumi:"customImageName"`
	// Image definition name.
	DefinitionName string `pulumi:"definitionName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Custom image source type.
	Source string `pulumi:"source"`
	// The resource name of the Test Base Account.
	TestBaseAccountName string `pulumi:"testBaseAccountName"`
	// Image version name.
	VersionName string `pulumi:"versionName"`
	// The Id of the associated VHD resource.
	VhdId *string `pulumi:"vhdId"`
}

// The set of arguments for constructing a CustomImage resource.
type CustomImageArgs struct {
	// The resource name of the test base custom image.
	CustomImageName pulumi.StringPtrInput
	// Image definition name.
	DefinitionName pulumi.StringInput
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput
	// Custom image source type.
	Source pulumi.StringInput
	// The resource name of the Test Base Account.
	TestBaseAccountName pulumi.StringInput
	// Image version name.
	VersionName pulumi.StringInput
	// The Id of the associated VHD resource.
	VhdId pulumi.StringPtrInput
}

func (CustomImageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*customImageArgs)(nil)).Elem()
}

type CustomImageInput interface {
	pulumi.Input

	ToCustomImageOutput() CustomImageOutput
	ToCustomImageOutputWithContext(ctx context.Context) CustomImageOutput
}

func (*CustomImage) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomImage)(nil)).Elem()
}

func (i *CustomImage) ToCustomImageOutput() CustomImageOutput {
	return i.ToCustomImageOutputWithContext(context.Background())
}

func (i *CustomImage) ToCustomImageOutputWithContext(ctx context.Context) CustomImageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomImageOutput)
}

type CustomImageOutput struct{ *pulumi.OutputState }

func (CustomImageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomImage)(nil)).Elem()
}

func (o CustomImageOutput) ToCustomImageOutput() CustomImageOutput {
	return o
}

func (o CustomImageOutput) ToCustomImageOutputWithContext(ctx context.Context) CustomImageOutput {
	return o
}

// The UTC timestamp when the custom image was published.
func (o CustomImageOutput) CreationTime() pulumi.StringOutput {
	return o.ApplyT(func(v *CustomImage) pulumi.StringOutput { return v.CreationTime }).(pulumi.StringOutput)
}

// Image definition name.
func (o CustomImageOutput) DefinitionName() pulumi.StringOutput {
	return o.ApplyT(func(v *CustomImage) pulumi.StringOutput { return v.DefinitionName }).(pulumi.StringOutput)
}

// The name of the resource
func (o CustomImageOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *CustomImage) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// This property indicates the size of the VHD to be created.
func (o CustomImageOutput) OsDiskImageSizeInGB() pulumi.Float64Output {
	return o.ApplyT(func(v *CustomImage) pulumi.Float64Output { return v.OsDiskImageSizeInGB }).(pulumi.Float64Output)
}

// Product of the custom image.
func (o CustomImageOutput) Product() pulumi.StringOutput {
	return o.ApplyT(func(v *CustomImage) pulumi.StringOutput { return v.Product }).(pulumi.StringOutput)
}

// The provisioning state of the resource.
func (o CustomImageOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v *CustomImage) pulumi.StringOutput { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Release of the custom image OS.
func (o CustomImageOutput) Release() pulumi.StringOutput {
	return o.ApplyT(func(v *CustomImage) pulumi.StringOutput { return v.Release }).(pulumi.StringOutput)
}

// The release version date of the release of the custom image OS.
func (o CustomImageOutput) ReleaseVersionDate() pulumi.StringOutput {
	return o.ApplyT(func(v *CustomImage) pulumi.StringOutput { return v.ReleaseVersionDate }).(pulumi.StringOutput)
}

// Custom image source type.
func (o CustomImageOutput) Source() pulumi.StringOutput {
	return o.ApplyT(func(v *CustomImage) pulumi.StringOutput { return v.Source }).(pulumi.StringOutput)
}

// Status of the custom image.
func (o CustomImageOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *CustomImage) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o CustomImageOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v *CustomImage) SystemDataResponseOutput { return v.SystemData }).(SystemDataResponseOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o CustomImageOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *CustomImage) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

// The validation result of the custom image.
func (o CustomImageOutput) ValidationResults() ImageValidationResultsResponseOutput {
	return o.ApplyT(func(v *CustomImage) ImageValidationResultsResponseOutput { return v.ValidationResults }).(ImageValidationResultsResponseOutput)
}

// Image version name.
func (o CustomImageOutput) VersionName() pulumi.StringOutput {
	return o.ApplyT(func(v *CustomImage) pulumi.StringOutput { return v.VersionName }).(pulumi.StringOutput)
}

// The file name of the associated VHD resource.
func (o CustomImageOutput) VhdFileName() pulumi.StringOutput {
	return o.ApplyT(func(v *CustomImage) pulumi.StringOutput { return v.VhdFileName }).(pulumi.StringOutput)
}

// The Id of the associated VHD resource.
func (o CustomImageOutput) VhdId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CustomImage) pulumi.StringPtrOutput { return v.VhdId }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(CustomImageOutput{})
}
