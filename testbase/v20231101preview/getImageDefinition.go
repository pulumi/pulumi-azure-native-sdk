// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20231101preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Get image properties under the image definition name created by test base custom image which derived from 'VHD' source.
func LookupImageDefinition(ctx *pulumi.Context, args *LookupImageDefinitionArgs, opts ...pulumi.InvokeOption) (*LookupImageDefinitionResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv LookupImageDefinitionResult
	err := ctx.Invoke("azure-native:testbase/v20231101preview:getImageDefinition", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupImageDefinitionArgs struct {
	// The resource name of the test base image definition.
	ImageDefinitionName string `pulumi:"imageDefinitionName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The resource name of the Test Base Account.
	TestBaseAccountName string `pulumi:"testBaseAccountName"`
}

// The test base image definition resource.
type LookupImageDefinitionResult struct {
	// Custom image architecture.
	Architecture string `pulumi:"architecture"`
	// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
	Id string `pulumi:"id"`
	// The name of the resource
	Name string `pulumi:"name"`
	// Custom image OS state.
	OsState           string `pulumi:"osState"`
	ProvisioningState string `pulumi:"provisioningState"`
	// Custom image security type.
	SecurityType string `pulumi:"securityType"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponse `pulumi:"systemData"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type string `pulumi:"type"`
}

func LookupImageDefinitionOutput(ctx *pulumi.Context, args LookupImageDefinitionOutputArgs, opts ...pulumi.InvokeOption) LookupImageDefinitionResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupImageDefinitionResult, error) {
			args := v.(LookupImageDefinitionArgs)
			r, err := LookupImageDefinition(ctx, &args, opts...)
			var s LookupImageDefinitionResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupImageDefinitionResultOutput)
}

type LookupImageDefinitionOutputArgs struct {
	// The resource name of the test base image definition.
	ImageDefinitionName pulumi.StringInput `pulumi:"imageDefinitionName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
	// The resource name of the Test Base Account.
	TestBaseAccountName pulumi.StringInput `pulumi:"testBaseAccountName"`
}

func (LookupImageDefinitionOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupImageDefinitionArgs)(nil)).Elem()
}

// The test base image definition resource.
type LookupImageDefinitionResultOutput struct{ *pulumi.OutputState }

func (LookupImageDefinitionResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupImageDefinitionResult)(nil)).Elem()
}

func (o LookupImageDefinitionResultOutput) ToLookupImageDefinitionResultOutput() LookupImageDefinitionResultOutput {
	return o
}

func (o LookupImageDefinitionResultOutput) ToLookupImageDefinitionResultOutputWithContext(ctx context.Context) LookupImageDefinitionResultOutput {
	return o
}

// Custom image architecture.
func (o LookupImageDefinitionResultOutput) Architecture() pulumi.StringOutput {
	return o.ApplyT(func(v LookupImageDefinitionResult) string { return v.Architecture }).(pulumi.StringOutput)
}

// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
func (o LookupImageDefinitionResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupImageDefinitionResult) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the resource
func (o LookupImageDefinitionResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupImageDefinitionResult) string { return v.Name }).(pulumi.StringOutput)
}

// Custom image OS state.
func (o LookupImageDefinitionResultOutput) OsState() pulumi.StringOutput {
	return o.ApplyT(func(v LookupImageDefinitionResult) string { return v.OsState }).(pulumi.StringOutput)
}

func (o LookupImageDefinitionResultOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v LookupImageDefinitionResult) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Custom image security type.
func (o LookupImageDefinitionResultOutput) SecurityType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupImageDefinitionResult) string { return v.SecurityType }).(pulumi.StringOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o LookupImageDefinitionResultOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v LookupImageDefinitionResult) SystemDataResponse { return v.SystemData }).(SystemDataResponseOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o LookupImageDefinitionResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupImageDefinitionResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupImageDefinitionResultOutput{})
}
