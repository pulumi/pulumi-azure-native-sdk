// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20231101preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Gets a favorite process for a Test Base Package.
func LookupFavoriteProcess(ctx *pulumi.Context, args *LookupFavoriteProcessArgs, opts ...pulumi.InvokeOption) (*LookupFavoriteProcessResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv LookupFavoriteProcessResult
	err := ctx.Invoke("azure-native:testbase/v20231101preview:getFavoriteProcess", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupFavoriteProcessArgs struct {
	// The resource name of a favorite process in a package. If the process name contains characters that are not allowed in Azure Resource Name, we use 'actualProcessName' in request body to submit the name.
	FavoriteProcessResourceName string `pulumi:"favoriteProcessResourceName"`
	// The resource name of the Test Base Package.
	PackageName string `pulumi:"packageName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The resource name of the Test Base Account.
	TestBaseAccountName string `pulumi:"testBaseAccountName"`
}

// A favorite process identifier.
type LookupFavoriteProcessResult struct {
	// The actual name of the favorite process. It will be equal to resource name except for the scenario that the process name contains characters that are not allowed in the resource name.
	ActualProcessName string `pulumi:"actualProcessName"`
	// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
	Id string `pulumi:"id"`
	// The name of the resource
	Name string `pulumi:"name"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponse `pulumi:"systemData"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type string `pulumi:"type"`
}

func LookupFavoriteProcessOutput(ctx *pulumi.Context, args LookupFavoriteProcessOutputArgs, opts ...pulumi.InvokeOption) LookupFavoriteProcessResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupFavoriteProcessResult, error) {
			args := v.(LookupFavoriteProcessArgs)
			r, err := LookupFavoriteProcess(ctx, &args, opts...)
			var s LookupFavoriteProcessResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupFavoriteProcessResultOutput)
}

type LookupFavoriteProcessOutputArgs struct {
	// The resource name of a favorite process in a package. If the process name contains characters that are not allowed in Azure Resource Name, we use 'actualProcessName' in request body to submit the name.
	FavoriteProcessResourceName pulumi.StringInput `pulumi:"favoriteProcessResourceName"`
	// The resource name of the Test Base Package.
	PackageName pulumi.StringInput `pulumi:"packageName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
	// The resource name of the Test Base Account.
	TestBaseAccountName pulumi.StringInput `pulumi:"testBaseAccountName"`
}

func (LookupFavoriteProcessOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupFavoriteProcessArgs)(nil)).Elem()
}

// A favorite process identifier.
type LookupFavoriteProcessResultOutput struct{ *pulumi.OutputState }

func (LookupFavoriteProcessResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupFavoriteProcessResult)(nil)).Elem()
}

func (o LookupFavoriteProcessResultOutput) ToLookupFavoriteProcessResultOutput() LookupFavoriteProcessResultOutput {
	return o
}

func (o LookupFavoriteProcessResultOutput) ToLookupFavoriteProcessResultOutputWithContext(ctx context.Context) LookupFavoriteProcessResultOutput {
	return o
}

// The actual name of the favorite process. It will be equal to resource name except for the scenario that the process name contains characters that are not allowed in the resource name.
func (o LookupFavoriteProcessResultOutput) ActualProcessName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFavoriteProcessResult) string { return v.ActualProcessName }).(pulumi.StringOutput)
}

// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
func (o LookupFavoriteProcessResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFavoriteProcessResult) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the resource
func (o LookupFavoriteProcessResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFavoriteProcessResult) string { return v.Name }).(pulumi.StringOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o LookupFavoriteProcessResultOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v LookupFavoriteProcessResult) SystemDataResponse { return v.SystemData }).(SystemDataResponseOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o LookupFavoriteProcessResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFavoriteProcessResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupFavoriteProcessResultOutput{})
}
