// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20231101preview

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The test base image definition resource.
type ImageDefinition struct {
	pulumi.CustomResourceState

	// Custom image architecture.
	Architecture pulumi.StringOutput `pulumi:"architecture"`
	// The name of the resource
	Name pulumi.StringOutput `pulumi:"name"`
	// Custom image OS state.
	OsState           pulumi.StringOutput `pulumi:"osState"`
	ProvisioningState pulumi.StringOutput `pulumi:"provisioningState"`
	// Custom image security type.
	SecurityType pulumi.StringOutput `pulumi:"securityType"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponseOutput `pulumi:"systemData"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewImageDefinition registers a new resource with the given unique name, arguments, and options.
func NewImageDefinition(ctx *pulumi.Context,
	name string, args *ImageDefinitionArgs, opts ...pulumi.ResourceOption) (*ImageDefinition, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Architecture == nil {
		return nil, errors.New("invalid value for required argument 'Architecture'")
	}
	if args.OsState == nil {
		return nil, errors.New("invalid value for required argument 'OsState'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	if args.SecurityType == nil {
		return nil, errors.New("invalid value for required argument 'SecurityType'")
	}
	if args.TestBaseAccountName == nil {
		return nil, errors.New("invalid value for required argument 'TestBaseAccountName'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:testbase:ImageDefinition"),
		},
	})
	opts = append(opts, aliases)
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource ImageDefinition
	err := ctx.RegisterResource("azure-native:testbase/v20231101preview:ImageDefinition", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetImageDefinition gets an existing ImageDefinition resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetImageDefinition(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ImageDefinitionState, opts ...pulumi.ResourceOption) (*ImageDefinition, error) {
	var resource ImageDefinition
	err := ctx.ReadResource("azure-native:testbase/v20231101preview:ImageDefinition", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ImageDefinition resources.
type imageDefinitionState struct {
}

type ImageDefinitionState struct {
}

func (ImageDefinitionState) ElementType() reflect.Type {
	return reflect.TypeOf((*imageDefinitionState)(nil)).Elem()
}

type imageDefinitionArgs struct {
	// Custom image architecture.
	Architecture string `pulumi:"architecture"`
	// The resource name of the test base image definition.
	ImageDefinitionName *string `pulumi:"imageDefinitionName"`
	// Custom image OS state.
	OsState string `pulumi:"osState"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Custom image security type.
	SecurityType string `pulumi:"securityType"`
	// The resource name of the Test Base Account.
	TestBaseAccountName string `pulumi:"testBaseAccountName"`
}

// The set of arguments for constructing a ImageDefinition resource.
type ImageDefinitionArgs struct {
	// Custom image architecture.
	Architecture pulumi.StringInput
	// The resource name of the test base image definition.
	ImageDefinitionName pulumi.StringPtrInput
	// Custom image OS state.
	OsState pulumi.StringInput
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput
	// Custom image security type.
	SecurityType pulumi.StringInput
	// The resource name of the Test Base Account.
	TestBaseAccountName pulumi.StringInput
}

func (ImageDefinitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*imageDefinitionArgs)(nil)).Elem()
}

type ImageDefinitionInput interface {
	pulumi.Input

	ToImageDefinitionOutput() ImageDefinitionOutput
	ToImageDefinitionOutputWithContext(ctx context.Context) ImageDefinitionOutput
}

func (*ImageDefinition) ElementType() reflect.Type {
	return reflect.TypeOf((**ImageDefinition)(nil)).Elem()
}

func (i *ImageDefinition) ToImageDefinitionOutput() ImageDefinitionOutput {
	return i.ToImageDefinitionOutputWithContext(context.Background())
}

func (i *ImageDefinition) ToImageDefinitionOutputWithContext(ctx context.Context) ImageDefinitionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImageDefinitionOutput)
}

type ImageDefinitionOutput struct{ *pulumi.OutputState }

func (ImageDefinitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ImageDefinition)(nil)).Elem()
}

func (o ImageDefinitionOutput) ToImageDefinitionOutput() ImageDefinitionOutput {
	return o
}

func (o ImageDefinitionOutput) ToImageDefinitionOutputWithContext(ctx context.Context) ImageDefinitionOutput {
	return o
}

// Custom image architecture.
func (o ImageDefinitionOutput) Architecture() pulumi.StringOutput {
	return o.ApplyT(func(v *ImageDefinition) pulumi.StringOutput { return v.Architecture }).(pulumi.StringOutput)
}

// The name of the resource
func (o ImageDefinitionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ImageDefinition) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Custom image OS state.
func (o ImageDefinitionOutput) OsState() pulumi.StringOutput {
	return o.ApplyT(func(v *ImageDefinition) pulumi.StringOutput { return v.OsState }).(pulumi.StringOutput)
}

func (o ImageDefinitionOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v *ImageDefinition) pulumi.StringOutput { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Custom image security type.
func (o ImageDefinitionOutput) SecurityType() pulumi.StringOutput {
	return o.ApplyT(func(v *ImageDefinition) pulumi.StringOutput { return v.SecurityType }).(pulumi.StringOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o ImageDefinitionOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v *ImageDefinition) SystemDataResponseOutput { return v.SystemData }).(SystemDataResponseOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o ImageDefinitionOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *ImageDefinition) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(ImageDefinitionOutput{})
}
