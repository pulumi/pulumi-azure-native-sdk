// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package webpubsub

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v3/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Get a hub setting.
//
// Uses Azure REST API version 2024-03-01.
//
// Other available API versions: 2023-02-01, 2023-03-01-preview, 2023-06-01-preview, 2023-08-01-preview, 2024-01-01-preview, 2024-04-01-preview, 2024-08-01-preview, 2024-10-01-preview. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native webpubsub [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
func LookupWebPubSubHub(ctx *pulumi.Context, args *LookupWebPubSubHubArgs, opts ...pulumi.InvokeOption) (*LookupWebPubSubHubResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv LookupWebPubSubHubResult
	err := ctx.Invoke("azure-native:webpubsub:getWebPubSubHub", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return rv.Defaults(), nil
}

type LookupWebPubSubHubArgs struct {
	// The hub name.
	HubName string `pulumi:"hubName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The name of the resource.
	ResourceName string `pulumi:"resourceName"`
}

// A hub setting
type LookupWebPubSubHubResult struct {
	// The Azure API version of the resource.
	AzureApiVersion string `pulumi:"azureApiVersion"`
	// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
	Id string `pulumi:"id"`
	// The name of the resource
	Name string `pulumi:"name"`
	// Properties of a hub.
	Properties WebPubSubHubPropertiesResponse `pulumi:"properties"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponse `pulumi:"systemData"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type string `pulumi:"type"`
}

// Defaults sets the appropriate defaults for LookupWebPubSubHubResult
func (val *LookupWebPubSubHubResult) Defaults() *LookupWebPubSubHubResult {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.Properties = *tmp.Properties.Defaults()

	return &tmp
}
func LookupWebPubSubHubOutput(ctx *pulumi.Context, args LookupWebPubSubHubOutputArgs, opts ...pulumi.InvokeOption) LookupWebPubSubHubResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupWebPubSubHubResultOutput, error) {
			args := v.(LookupWebPubSubHubArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: utilities.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("azure-native:webpubsub:getWebPubSubHub", args, LookupWebPubSubHubResultOutput{}, options).(LookupWebPubSubHubResultOutput), nil
		}).(LookupWebPubSubHubResultOutput)
}

type LookupWebPubSubHubOutputArgs struct {
	// The hub name.
	HubName pulumi.StringInput `pulumi:"hubName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
	// The name of the resource.
	ResourceName pulumi.StringInput `pulumi:"resourceName"`
}

func (LookupWebPubSubHubOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupWebPubSubHubArgs)(nil)).Elem()
}

// A hub setting
type LookupWebPubSubHubResultOutput struct{ *pulumi.OutputState }

func (LookupWebPubSubHubResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupWebPubSubHubResult)(nil)).Elem()
}

func (o LookupWebPubSubHubResultOutput) ToLookupWebPubSubHubResultOutput() LookupWebPubSubHubResultOutput {
	return o
}

func (o LookupWebPubSubHubResultOutput) ToLookupWebPubSubHubResultOutputWithContext(ctx context.Context) LookupWebPubSubHubResultOutput {
	return o
}

// The Azure API version of the resource.
func (o LookupWebPubSubHubResultOutput) AzureApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWebPubSubHubResult) string { return v.AzureApiVersion }).(pulumi.StringOutput)
}

// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
func (o LookupWebPubSubHubResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWebPubSubHubResult) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the resource
func (o LookupWebPubSubHubResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWebPubSubHubResult) string { return v.Name }).(pulumi.StringOutput)
}

// Properties of a hub.
func (o LookupWebPubSubHubResultOutput) Properties() WebPubSubHubPropertiesResponseOutput {
	return o.ApplyT(func(v LookupWebPubSubHubResult) WebPubSubHubPropertiesResponse { return v.Properties }).(WebPubSubHubPropertiesResponseOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o LookupWebPubSubHubResultOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v LookupWebPubSubHubResult) SystemDataResponse { return v.SystemData }).(SystemDataResponseOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o LookupWebPubSubHubResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWebPubSubHubResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupWebPubSubHubResultOutput{})
}
