// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20210722preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type PrometheusRule struct {
	// The array of actions that are performed when the alert rule becomes active, and when an alert condition is resolved. Only relevant for alerts.
	Actions []PrometheusRuleGroupAction `pulumi:"actions"`
	// the name of the alert rule.
	Alert *string `pulumi:"alert"`
	// annotations for rule group. Only relevant for alerts.
	Annotations map[string]string `pulumi:"annotations"`
	// the flag that indicates whether the Prometheus rule is enabled.
	Enabled *bool `pulumi:"enabled"`
	// the expression to run for the rule.
	Expression string `pulumi:"expression"`
	// the amount of time alert must be active before firing. Only relevant for alerts.
	For *string `pulumi:"for"`
	// labels for rule group. Only relevant for alerts.
	Labels map[string]string `pulumi:"labels"`
	// the name of the recording rule.
	Record *string `pulumi:"record"`
	// defines the configuration for resolving fired alerts. Only relevant for alerts.
	ResolveConfiguration *PrometheusRuleResolveConfiguration `pulumi:"resolveConfiguration"`
	// the severity of the alerts fired by the rule. Only relevant for alerts.
	Severity *int `pulumi:"severity"`
}

// PrometheusRuleInput is an input type that accepts PrometheusRuleArgs and PrometheusRuleOutput values.
// You can construct a concrete instance of `PrometheusRuleInput` via:
//
//	PrometheusRuleArgs{...}
type PrometheusRuleInput interface {
	pulumi.Input

	ToPrometheusRuleOutput() PrometheusRuleOutput
	ToPrometheusRuleOutputWithContext(context.Context) PrometheusRuleOutput
}

type PrometheusRuleArgs struct {
	// The array of actions that are performed when the alert rule becomes active, and when an alert condition is resolved. Only relevant for alerts.
	Actions PrometheusRuleGroupActionArrayInput `pulumi:"actions"`
	// the name of the alert rule.
	Alert pulumi.StringPtrInput `pulumi:"alert"`
	// annotations for rule group. Only relevant for alerts.
	Annotations pulumi.StringMapInput `pulumi:"annotations"`
	// the flag that indicates whether the Prometheus rule is enabled.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// the expression to run for the rule.
	Expression pulumi.StringInput `pulumi:"expression"`
	// the amount of time alert must be active before firing. Only relevant for alerts.
	For pulumi.StringPtrInput `pulumi:"for"`
	// labels for rule group. Only relevant for alerts.
	Labels pulumi.StringMapInput `pulumi:"labels"`
	// the name of the recording rule.
	Record pulumi.StringPtrInput `pulumi:"record"`
	// defines the configuration for resolving fired alerts. Only relevant for alerts.
	ResolveConfiguration PrometheusRuleResolveConfigurationPtrInput `pulumi:"resolveConfiguration"`
	// the severity of the alerts fired by the rule. Only relevant for alerts.
	Severity pulumi.IntPtrInput `pulumi:"severity"`
}

func (PrometheusRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PrometheusRule)(nil)).Elem()
}

func (i PrometheusRuleArgs) ToPrometheusRuleOutput() PrometheusRuleOutput {
	return i.ToPrometheusRuleOutputWithContext(context.Background())
}

func (i PrometheusRuleArgs) ToPrometheusRuleOutputWithContext(ctx context.Context) PrometheusRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrometheusRuleOutput)
}

// PrometheusRuleArrayInput is an input type that accepts PrometheusRuleArray and PrometheusRuleArrayOutput values.
// You can construct a concrete instance of `PrometheusRuleArrayInput` via:
//
//	PrometheusRuleArray{ PrometheusRuleArgs{...} }
type PrometheusRuleArrayInput interface {
	pulumi.Input

	ToPrometheusRuleArrayOutput() PrometheusRuleArrayOutput
	ToPrometheusRuleArrayOutputWithContext(context.Context) PrometheusRuleArrayOutput
}

type PrometheusRuleArray []PrometheusRuleInput

func (PrometheusRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PrometheusRule)(nil)).Elem()
}

func (i PrometheusRuleArray) ToPrometheusRuleArrayOutput() PrometheusRuleArrayOutput {
	return i.ToPrometheusRuleArrayOutputWithContext(context.Background())
}

func (i PrometheusRuleArray) ToPrometheusRuleArrayOutputWithContext(ctx context.Context) PrometheusRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrometheusRuleArrayOutput)
}

type PrometheusRuleOutput struct{ *pulumi.OutputState }

func (PrometheusRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrometheusRule)(nil)).Elem()
}

func (o PrometheusRuleOutput) ToPrometheusRuleOutput() PrometheusRuleOutput {
	return o
}

func (o PrometheusRuleOutput) ToPrometheusRuleOutputWithContext(ctx context.Context) PrometheusRuleOutput {
	return o
}

// The array of actions that are performed when the alert rule becomes active, and when an alert condition is resolved. Only relevant for alerts.
func (o PrometheusRuleOutput) Actions() PrometheusRuleGroupActionArrayOutput {
	return o.ApplyT(func(v PrometheusRule) []PrometheusRuleGroupAction { return v.Actions }).(PrometheusRuleGroupActionArrayOutput)
}

// the name of the alert rule.
func (o PrometheusRuleOutput) Alert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrometheusRule) *string { return v.Alert }).(pulumi.StringPtrOutput)
}

// annotations for rule group. Only relevant for alerts.
func (o PrometheusRuleOutput) Annotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v PrometheusRule) map[string]string { return v.Annotations }).(pulumi.StringMapOutput)
}

// the flag that indicates whether the Prometheus rule is enabled.
func (o PrometheusRuleOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PrometheusRule) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// the expression to run for the rule.
func (o PrometheusRuleOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v PrometheusRule) string { return v.Expression }).(pulumi.StringOutput)
}

// the amount of time alert must be active before firing. Only relevant for alerts.
func (o PrometheusRuleOutput) For() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrometheusRule) *string { return v.For }).(pulumi.StringPtrOutput)
}

// labels for rule group. Only relevant for alerts.
func (o PrometheusRuleOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v PrometheusRule) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

// the name of the recording rule.
func (o PrometheusRuleOutput) Record() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrometheusRule) *string { return v.Record }).(pulumi.StringPtrOutput)
}

// defines the configuration for resolving fired alerts. Only relevant for alerts.
func (o PrometheusRuleOutput) ResolveConfiguration() PrometheusRuleResolveConfigurationPtrOutput {
	return o.ApplyT(func(v PrometheusRule) *PrometheusRuleResolveConfiguration { return v.ResolveConfiguration }).(PrometheusRuleResolveConfigurationPtrOutput)
}

// the severity of the alerts fired by the rule. Only relevant for alerts.
func (o PrometheusRuleOutput) Severity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PrometheusRule) *int { return v.Severity }).(pulumi.IntPtrOutput)
}

type PrometheusRuleArrayOutput struct{ *pulumi.OutputState }

func (PrometheusRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PrometheusRule)(nil)).Elem()
}

func (o PrometheusRuleArrayOutput) ToPrometheusRuleArrayOutput() PrometheusRuleArrayOutput {
	return o
}

func (o PrometheusRuleArrayOutput) ToPrometheusRuleArrayOutputWithContext(ctx context.Context) PrometheusRuleArrayOutput {
	return o
}

func (o PrometheusRuleArrayOutput) Index(i pulumi.IntInput) PrometheusRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PrometheusRule {
		return vs[0].([]PrometheusRule)[vs[1].(int)]
	}).(PrometheusRuleOutput)
}

// An alert action. Only relevant for alerts.
type PrometheusRuleGroupAction struct {
	// The resource id of the action group to use.
	ActionGroupId *string `pulumi:"actionGroupId"`
	// The properties of an action group object.
	ActionProperties map[string]string `pulumi:"actionProperties"`
}

// PrometheusRuleGroupActionInput is an input type that accepts PrometheusRuleGroupActionArgs and PrometheusRuleGroupActionOutput values.
// You can construct a concrete instance of `PrometheusRuleGroupActionInput` via:
//
//	PrometheusRuleGroupActionArgs{...}
type PrometheusRuleGroupActionInput interface {
	pulumi.Input

	ToPrometheusRuleGroupActionOutput() PrometheusRuleGroupActionOutput
	ToPrometheusRuleGroupActionOutputWithContext(context.Context) PrometheusRuleGroupActionOutput
}

// An alert action. Only relevant for alerts.
type PrometheusRuleGroupActionArgs struct {
	// The resource id of the action group to use.
	ActionGroupId pulumi.StringPtrInput `pulumi:"actionGroupId"`
	// The properties of an action group object.
	ActionProperties pulumi.StringMapInput `pulumi:"actionProperties"`
}

func (PrometheusRuleGroupActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PrometheusRuleGroupAction)(nil)).Elem()
}

func (i PrometheusRuleGroupActionArgs) ToPrometheusRuleGroupActionOutput() PrometheusRuleGroupActionOutput {
	return i.ToPrometheusRuleGroupActionOutputWithContext(context.Background())
}

func (i PrometheusRuleGroupActionArgs) ToPrometheusRuleGroupActionOutputWithContext(ctx context.Context) PrometheusRuleGroupActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrometheusRuleGroupActionOutput)
}

// PrometheusRuleGroupActionArrayInput is an input type that accepts PrometheusRuleGroupActionArray and PrometheusRuleGroupActionArrayOutput values.
// You can construct a concrete instance of `PrometheusRuleGroupActionArrayInput` via:
//
//	PrometheusRuleGroupActionArray{ PrometheusRuleGroupActionArgs{...} }
type PrometheusRuleGroupActionArrayInput interface {
	pulumi.Input

	ToPrometheusRuleGroupActionArrayOutput() PrometheusRuleGroupActionArrayOutput
	ToPrometheusRuleGroupActionArrayOutputWithContext(context.Context) PrometheusRuleGroupActionArrayOutput
}

type PrometheusRuleGroupActionArray []PrometheusRuleGroupActionInput

func (PrometheusRuleGroupActionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PrometheusRuleGroupAction)(nil)).Elem()
}

func (i PrometheusRuleGroupActionArray) ToPrometheusRuleGroupActionArrayOutput() PrometheusRuleGroupActionArrayOutput {
	return i.ToPrometheusRuleGroupActionArrayOutputWithContext(context.Background())
}

func (i PrometheusRuleGroupActionArray) ToPrometheusRuleGroupActionArrayOutputWithContext(ctx context.Context) PrometheusRuleGroupActionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrometheusRuleGroupActionArrayOutput)
}

// An alert action. Only relevant for alerts.
type PrometheusRuleGroupActionOutput struct{ *pulumi.OutputState }

func (PrometheusRuleGroupActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrometheusRuleGroupAction)(nil)).Elem()
}

func (o PrometheusRuleGroupActionOutput) ToPrometheusRuleGroupActionOutput() PrometheusRuleGroupActionOutput {
	return o
}

func (o PrometheusRuleGroupActionOutput) ToPrometheusRuleGroupActionOutputWithContext(ctx context.Context) PrometheusRuleGroupActionOutput {
	return o
}

// The resource id of the action group to use.
func (o PrometheusRuleGroupActionOutput) ActionGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrometheusRuleGroupAction) *string { return v.ActionGroupId }).(pulumi.StringPtrOutput)
}

// The properties of an action group object.
func (o PrometheusRuleGroupActionOutput) ActionProperties() pulumi.StringMapOutput {
	return o.ApplyT(func(v PrometheusRuleGroupAction) map[string]string { return v.ActionProperties }).(pulumi.StringMapOutput)
}

type PrometheusRuleGroupActionArrayOutput struct{ *pulumi.OutputState }

func (PrometheusRuleGroupActionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PrometheusRuleGroupAction)(nil)).Elem()
}

func (o PrometheusRuleGroupActionArrayOutput) ToPrometheusRuleGroupActionArrayOutput() PrometheusRuleGroupActionArrayOutput {
	return o
}

func (o PrometheusRuleGroupActionArrayOutput) ToPrometheusRuleGroupActionArrayOutputWithContext(ctx context.Context) PrometheusRuleGroupActionArrayOutput {
	return o
}

func (o PrometheusRuleGroupActionArrayOutput) Index(i pulumi.IntInput) PrometheusRuleGroupActionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PrometheusRuleGroupAction {
		return vs[0].([]PrometheusRuleGroupAction)[vs[1].(int)]
	}).(PrometheusRuleGroupActionOutput)
}

// An alert action. Only relevant for alerts.
type PrometheusRuleGroupActionResponse struct {
	// The resource id of the action group to use.
	ActionGroupId *string `pulumi:"actionGroupId"`
	// The properties of an action group object.
	ActionProperties map[string]string `pulumi:"actionProperties"`
}

// An alert action. Only relevant for alerts.
type PrometheusRuleGroupActionResponseOutput struct{ *pulumi.OutputState }

func (PrometheusRuleGroupActionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrometheusRuleGroupActionResponse)(nil)).Elem()
}

func (o PrometheusRuleGroupActionResponseOutput) ToPrometheusRuleGroupActionResponseOutput() PrometheusRuleGroupActionResponseOutput {
	return o
}

func (o PrometheusRuleGroupActionResponseOutput) ToPrometheusRuleGroupActionResponseOutputWithContext(ctx context.Context) PrometheusRuleGroupActionResponseOutput {
	return o
}

// The resource id of the action group to use.
func (o PrometheusRuleGroupActionResponseOutput) ActionGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrometheusRuleGroupActionResponse) *string { return v.ActionGroupId }).(pulumi.StringPtrOutput)
}

// The properties of an action group object.
func (o PrometheusRuleGroupActionResponseOutput) ActionProperties() pulumi.StringMapOutput {
	return o.ApplyT(func(v PrometheusRuleGroupActionResponse) map[string]string { return v.ActionProperties }).(pulumi.StringMapOutput)
}

type PrometheusRuleGroupActionResponseArrayOutput struct{ *pulumi.OutputState }

func (PrometheusRuleGroupActionResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PrometheusRuleGroupActionResponse)(nil)).Elem()
}

func (o PrometheusRuleGroupActionResponseArrayOutput) ToPrometheusRuleGroupActionResponseArrayOutput() PrometheusRuleGroupActionResponseArrayOutput {
	return o
}

func (o PrometheusRuleGroupActionResponseArrayOutput) ToPrometheusRuleGroupActionResponseArrayOutputWithContext(ctx context.Context) PrometheusRuleGroupActionResponseArrayOutput {
	return o
}

func (o PrometheusRuleGroupActionResponseArrayOutput) Index(i pulumi.IntInput) PrometheusRuleGroupActionResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PrometheusRuleGroupActionResponse {
		return vs[0].([]PrometheusRuleGroupActionResponse)[vs[1].(int)]
	}).(PrometheusRuleGroupActionResponseOutput)
}

// Specifies the Prometheus alert rule configuration.
type PrometheusRuleResolveConfiguration struct {
	// the flag that indicates whether or not to auto resolve a fired alert.
	AutoResolved *bool `pulumi:"autoResolved"`
	// the duration a rule must evaluate as healthy before the fired alert is automatically resolved represented in ISO 8601 duration format. Should be between 1 and 15 minutes
	TimeToResolve *string `pulumi:"timeToResolve"`
}

// PrometheusRuleResolveConfigurationInput is an input type that accepts PrometheusRuleResolveConfigurationArgs and PrometheusRuleResolveConfigurationOutput values.
// You can construct a concrete instance of `PrometheusRuleResolveConfigurationInput` via:
//
//	PrometheusRuleResolveConfigurationArgs{...}
type PrometheusRuleResolveConfigurationInput interface {
	pulumi.Input

	ToPrometheusRuleResolveConfigurationOutput() PrometheusRuleResolveConfigurationOutput
	ToPrometheusRuleResolveConfigurationOutputWithContext(context.Context) PrometheusRuleResolveConfigurationOutput
}

// Specifies the Prometheus alert rule configuration.
type PrometheusRuleResolveConfigurationArgs struct {
	// the flag that indicates whether or not to auto resolve a fired alert.
	AutoResolved pulumi.BoolPtrInput `pulumi:"autoResolved"`
	// the duration a rule must evaluate as healthy before the fired alert is automatically resolved represented in ISO 8601 duration format. Should be between 1 and 15 minutes
	TimeToResolve pulumi.StringPtrInput `pulumi:"timeToResolve"`
}

func (PrometheusRuleResolveConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PrometheusRuleResolveConfiguration)(nil)).Elem()
}

func (i PrometheusRuleResolveConfigurationArgs) ToPrometheusRuleResolveConfigurationOutput() PrometheusRuleResolveConfigurationOutput {
	return i.ToPrometheusRuleResolveConfigurationOutputWithContext(context.Background())
}

func (i PrometheusRuleResolveConfigurationArgs) ToPrometheusRuleResolveConfigurationOutputWithContext(ctx context.Context) PrometheusRuleResolveConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrometheusRuleResolveConfigurationOutput)
}

func (i PrometheusRuleResolveConfigurationArgs) ToPrometheusRuleResolveConfigurationPtrOutput() PrometheusRuleResolveConfigurationPtrOutput {
	return i.ToPrometheusRuleResolveConfigurationPtrOutputWithContext(context.Background())
}

func (i PrometheusRuleResolveConfigurationArgs) ToPrometheusRuleResolveConfigurationPtrOutputWithContext(ctx context.Context) PrometheusRuleResolveConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrometheusRuleResolveConfigurationOutput).ToPrometheusRuleResolveConfigurationPtrOutputWithContext(ctx)
}

// PrometheusRuleResolveConfigurationPtrInput is an input type that accepts PrometheusRuleResolveConfigurationArgs, PrometheusRuleResolveConfigurationPtr and PrometheusRuleResolveConfigurationPtrOutput values.
// You can construct a concrete instance of `PrometheusRuleResolveConfigurationPtrInput` via:
//
//	        PrometheusRuleResolveConfigurationArgs{...}
//
//	or:
//
//	        nil
type PrometheusRuleResolveConfigurationPtrInput interface {
	pulumi.Input

	ToPrometheusRuleResolveConfigurationPtrOutput() PrometheusRuleResolveConfigurationPtrOutput
	ToPrometheusRuleResolveConfigurationPtrOutputWithContext(context.Context) PrometheusRuleResolveConfigurationPtrOutput
}

type prometheusRuleResolveConfigurationPtrType PrometheusRuleResolveConfigurationArgs

func PrometheusRuleResolveConfigurationPtr(v *PrometheusRuleResolveConfigurationArgs) PrometheusRuleResolveConfigurationPtrInput {
	return (*prometheusRuleResolveConfigurationPtrType)(v)
}

func (*prometheusRuleResolveConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PrometheusRuleResolveConfiguration)(nil)).Elem()
}

func (i *prometheusRuleResolveConfigurationPtrType) ToPrometheusRuleResolveConfigurationPtrOutput() PrometheusRuleResolveConfigurationPtrOutput {
	return i.ToPrometheusRuleResolveConfigurationPtrOutputWithContext(context.Background())
}

func (i *prometheusRuleResolveConfigurationPtrType) ToPrometheusRuleResolveConfigurationPtrOutputWithContext(ctx context.Context) PrometheusRuleResolveConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrometheusRuleResolveConfigurationPtrOutput)
}

// Specifies the Prometheus alert rule configuration.
type PrometheusRuleResolveConfigurationOutput struct{ *pulumi.OutputState }

func (PrometheusRuleResolveConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrometheusRuleResolveConfiguration)(nil)).Elem()
}

func (o PrometheusRuleResolveConfigurationOutput) ToPrometheusRuleResolveConfigurationOutput() PrometheusRuleResolveConfigurationOutput {
	return o
}

func (o PrometheusRuleResolveConfigurationOutput) ToPrometheusRuleResolveConfigurationOutputWithContext(ctx context.Context) PrometheusRuleResolveConfigurationOutput {
	return o
}

func (o PrometheusRuleResolveConfigurationOutput) ToPrometheusRuleResolveConfigurationPtrOutput() PrometheusRuleResolveConfigurationPtrOutput {
	return o.ToPrometheusRuleResolveConfigurationPtrOutputWithContext(context.Background())
}

func (o PrometheusRuleResolveConfigurationOutput) ToPrometheusRuleResolveConfigurationPtrOutputWithContext(ctx context.Context) PrometheusRuleResolveConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PrometheusRuleResolveConfiguration) *PrometheusRuleResolveConfiguration {
		return &v
	}).(PrometheusRuleResolveConfigurationPtrOutput)
}

// the flag that indicates whether or not to auto resolve a fired alert.
func (o PrometheusRuleResolveConfigurationOutput) AutoResolved() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PrometheusRuleResolveConfiguration) *bool { return v.AutoResolved }).(pulumi.BoolPtrOutput)
}

// the duration a rule must evaluate as healthy before the fired alert is automatically resolved represented in ISO 8601 duration format. Should be between 1 and 15 minutes
func (o PrometheusRuleResolveConfigurationOutput) TimeToResolve() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrometheusRuleResolveConfiguration) *string { return v.TimeToResolve }).(pulumi.StringPtrOutput)
}

type PrometheusRuleResolveConfigurationPtrOutput struct{ *pulumi.OutputState }

func (PrometheusRuleResolveConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PrometheusRuleResolveConfiguration)(nil)).Elem()
}

func (o PrometheusRuleResolveConfigurationPtrOutput) ToPrometheusRuleResolveConfigurationPtrOutput() PrometheusRuleResolveConfigurationPtrOutput {
	return o
}

func (o PrometheusRuleResolveConfigurationPtrOutput) ToPrometheusRuleResolveConfigurationPtrOutputWithContext(ctx context.Context) PrometheusRuleResolveConfigurationPtrOutput {
	return o
}

func (o PrometheusRuleResolveConfigurationPtrOutput) Elem() PrometheusRuleResolveConfigurationOutput {
	return o.ApplyT(func(v *PrometheusRuleResolveConfiguration) PrometheusRuleResolveConfiguration {
		if v != nil {
			return *v
		}
		var ret PrometheusRuleResolveConfiguration
		return ret
	}).(PrometheusRuleResolveConfigurationOutput)
}

// the flag that indicates whether or not to auto resolve a fired alert.
func (o PrometheusRuleResolveConfigurationPtrOutput) AutoResolved() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PrometheusRuleResolveConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.AutoResolved
	}).(pulumi.BoolPtrOutput)
}

// the duration a rule must evaluate as healthy before the fired alert is automatically resolved represented in ISO 8601 duration format. Should be between 1 and 15 minutes
func (o PrometheusRuleResolveConfigurationPtrOutput) TimeToResolve() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrometheusRuleResolveConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.TimeToResolve
	}).(pulumi.StringPtrOutput)
}

// Specifies the Prometheus alert rule configuration.
type PrometheusRuleResolveConfigurationResponse struct {
	// the flag that indicates whether or not to auto resolve a fired alert.
	AutoResolved *bool `pulumi:"autoResolved"`
	// the duration a rule must evaluate as healthy before the fired alert is automatically resolved represented in ISO 8601 duration format. Should be between 1 and 15 minutes
	TimeToResolve *string `pulumi:"timeToResolve"`
}

// Specifies the Prometheus alert rule configuration.
type PrometheusRuleResolveConfigurationResponseOutput struct{ *pulumi.OutputState }

func (PrometheusRuleResolveConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrometheusRuleResolveConfigurationResponse)(nil)).Elem()
}

func (o PrometheusRuleResolveConfigurationResponseOutput) ToPrometheusRuleResolveConfigurationResponseOutput() PrometheusRuleResolveConfigurationResponseOutput {
	return o
}

func (o PrometheusRuleResolveConfigurationResponseOutput) ToPrometheusRuleResolveConfigurationResponseOutputWithContext(ctx context.Context) PrometheusRuleResolveConfigurationResponseOutput {
	return o
}

// the flag that indicates whether or not to auto resolve a fired alert.
func (o PrometheusRuleResolveConfigurationResponseOutput) AutoResolved() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PrometheusRuleResolveConfigurationResponse) *bool { return v.AutoResolved }).(pulumi.BoolPtrOutput)
}

// the duration a rule must evaluate as healthy before the fired alert is automatically resolved represented in ISO 8601 duration format. Should be between 1 and 15 minutes
func (o PrometheusRuleResolveConfigurationResponseOutput) TimeToResolve() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrometheusRuleResolveConfigurationResponse) *string { return v.TimeToResolve }).(pulumi.StringPtrOutput)
}

type PrometheusRuleResolveConfigurationResponsePtrOutput struct{ *pulumi.OutputState }

func (PrometheusRuleResolveConfigurationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PrometheusRuleResolveConfigurationResponse)(nil)).Elem()
}

func (o PrometheusRuleResolveConfigurationResponsePtrOutput) ToPrometheusRuleResolveConfigurationResponsePtrOutput() PrometheusRuleResolveConfigurationResponsePtrOutput {
	return o
}

func (o PrometheusRuleResolveConfigurationResponsePtrOutput) ToPrometheusRuleResolveConfigurationResponsePtrOutputWithContext(ctx context.Context) PrometheusRuleResolveConfigurationResponsePtrOutput {
	return o
}

func (o PrometheusRuleResolveConfigurationResponsePtrOutput) Elem() PrometheusRuleResolveConfigurationResponseOutput {
	return o.ApplyT(func(v *PrometheusRuleResolveConfigurationResponse) PrometheusRuleResolveConfigurationResponse {
		if v != nil {
			return *v
		}
		var ret PrometheusRuleResolveConfigurationResponse
		return ret
	}).(PrometheusRuleResolveConfigurationResponseOutput)
}

// the flag that indicates whether or not to auto resolve a fired alert.
func (o PrometheusRuleResolveConfigurationResponsePtrOutput) AutoResolved() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PrometheusRuleResolveConfigurationResponse) *bool {
		if v == nil {
			return nil
		}
		return v.AutoResolved
	}).(pulumi.BoolPtrOutput)
}

// the duration a rule must evaluate as healthy before the fired alert is automatically resolved represented in ISO 8601 duration format. Should be between 1 and 15 minutes
func (o PrometheusRuleResolveConfigurationResponsePtrOutput) TimeToResolve() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrometheusRuleResolveConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.TimeToResolve
	}).(pulumi.StringPtrOutput)
}

type PrometheusRuleResponse struct {
	// The array of actions that are performed when the alert rule becomes active, and when an alert condition is resolved. Only relevant for alerts.
	Actions []PrometheusRuleGroupActionResponse `pulumi:"actions"`
	// the name of the alert rule.
	Alert *string `pulumi:"alert"`
	// annotations for rule group. Only relevant for alerts.
	Annotations map[string]string `pulumi:"annotations"`
	// the flag that indicates whether the Prometheus rule is enabled.
	Enabled *bool `pulumi:"enabled"`
	// the expression to run for the rule.
	Expression string `pulumi:"expression"`
	// the amount of time alert must be active before firing. Only relevant for alerts.
	For *string `pulumi:"for"`
	// labels for rule group. Only relevant for alerts.
	Labels map[string]string `pulumi:"labels"`
	// the name of the recording rule.
	Record *string `pulumi:"record"`
	// defines the configuration for resolving fired alerts. Only relevant for alerts.
	ResolveConfiguration *PrometheusRuleResolveConfigurationResponse `pulumi:"resolveConfiguration"`
	// the severity of the alerts fired by the rule. Only relevant for alerts.
	Severity *int `pulumi:"severity"`
}

type PrometheusRuleResponseOutput struct{ *pulumi.OutputState }

func (PrometheusRuleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrometheusRuleResponse)(nil)).Elem()
}

func (o PrometheusRuleResponseOutput) ToPrometheusRuleResponseOutput() PrometheusRuleResponseOutput {
	return o
}

func (o PrometheusRuleResponseOutput) ToPrometheusRuleResponseOutputWithContext(ctx context.Context) PrometheusRuleResponseOutput {
	return o
}

// The array of actions that are performed when the alert rule becomes active, and when an alert condition is resolved. Only relevant for alerts.
func (o PrometheusRuleResponseOutput) Actions() PrometheusRuleGroupActionResponseArrayOutput {
	return o.ApplyT(func(v PrometheusRuleResponse) []PrometheusRuleGroupActionResponse { return v.Actions }).(PrometheusRuleGroupActionResponseArrayOutput)
}

// the name of the alert rule.
func (o PrometheusRuleResponseOutput) Alert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrometheusRuleResponse) *string { return v.Alert }).(pulumi.StringPtrOutput)
}

// annotations for rule group. Only relevant for alerts.
func (o PrometheusRuleResponseOutput) Annotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v PrometheusRuleResponse) map[string]string { return v.Annotations }).(pulumi.StringMapOutput)
}

// the flag that indicates whether the Prometheus rule is enabled.
func (o PrometheusRuleResponseOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PrometheusRuleResponse) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// the expression to run for the rule.
func (o PrometheusRuleResponseOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v PrometheusRuleResponse) string { return v.Expression }).(pulumi.StringOutput)
}

// the amount of time alert must be active before firing. Only relevant for alerts.
func (o PrometheusRuleResponseOutput) For() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrometheusRuleResponse) *string { return v.For }).(pulumi.StringPtrOutput)
}

// labels for rule group. Only relevant for alerts.
func (o PrometheusRuleResponseOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v PrometheusRuleResponse) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

// the name of the recording rule.
func (o PrometheusRuleResponseOutput) Record() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrometheusRuleResponse) *string { return v.Record }).(pulumi.StringPtrOutput)
}

// defines the configuration for resolving fired alerts. Only relevant for alerts.
func (o PrometheusRuleResponseOutput) ResolveConfiguration() PrometheusRuleResolveConfigurationResponsePtrOutput {
	return o.ApplyT(func(v PrometheusRuleResponse) *PrometheusRuleResolveConfigurationResponse {
		return v.ResolveConfiguration
	}).(PrometheusRuleResolveConfigurationResponsePtrOutput)
}

// the severity of the alerts fired by the rule. Only relevant for alerts.
func (o PrometheusRuleResponseOutput) Severity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PrometheusRuleResponse) *int { return v.Severity }).(pulumi.IntPtrOutput)
}

type PrometheusRuleResponseArrayOutput struct{ *pulumi.OutputState }

func (PrometheusRuleResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PrometheusRuleResponse)(nil)).Elem()
}

func (o PrometheusRuleResponseArrayOutput) ToPrometheusRuleResponseArrayOutput() PrometheusRuleResponseArrayOutput {
	return o
}

func (o PrometheusRuleResponseArrayOutput) ToPrometheusRuleResponseArrayOutputWithContext(ctx context.Context) PrometheusRuleResponseArrayOutput {
	return o
}

func (o PrometheusRuleResponseArrayOutput) Index(i pulumi.IntInput) PrometheusRuleResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PrometheusRuleResponse {
		return vs[0].([]PrometheusRuleResponse)[vs[1].(int)]
	}).(PrometheusRuleResponseOutput)
}

// Metadata pertaining to creation and last modification of the resource.
type SystemDataResponse struct {
	// The timestamp of resource creation (UTC).
	CreatedAt *string `pulumi:"createdAt"`
	// The identity that created the resource.
	CreatedBy *string `pulumi:"createdBy"`
	// The type of identity that created the resource.
	CreatedByType *string `pulumi:"createdByType"`
	// The timestamp of resource last modification (UTC)
	LastModifiedAt *string `pulumi:"lastModifiedAt"`
	// The identity that last modified the resource.
	LastModifiedBy *string `pulumi:"lastModifiedBy"`
	// The type of identity that last modified the resource.
	LastModifiedByType *string `pulumi:"lastModifiedByType"`
}

// Metadata pertaining to creation and last modification of the resource.
type SystemDataResponseOutput struct{ *pulumi.OutputState }

func (SystemDataResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemDataResponse)(nil)).Elem()
}

func (o SystemDataResponseOutput) ToSystemDataResponseOutput() SystemDataResponseOutput {
	return o
}

func (o SystemDataResponseOutput) ToSystemDataResponseOutputWithContext(ctx context.Context) SystemDataResponseOutput {
	return o
}

// The timestamp of resource creation (UTC).
func (o SystemDataResponseOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedAt }).(pulumi.StringPtrOutput)
}

// The identity that created the resource.
func (o SystemDataResponseOutput) CreatedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedBy }).(pulumi.StringPtrOutput)
}

// The type of identity that created the resource.
func (o SystemDataResponseOutput) CreatedByType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedByType }).(pulumi.StringPtrOutput)
}

// The timestamp of resource last modification (UTC)
func (o SystemDataResponseOutput) LastModifiedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedAt }).(pulumi.StringPtrOutput)
}

// The identity that last modified the resource.
func (o SystemDataResponseOutput) LastModifiedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedBy }).(pulumi.StringPtrOutput)
}

// The type of identity that last modified the resource.
func (o SystemDataResponseOutput) LastModifiedByType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedByType }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(PrometheusRuleOutput{})
	pulumi.RegisterOutputType(PrometheusRuleArrayOutput{})
	pulumi.RegisterOutputType(PrometheusRuleGroupActionOutput{})
	pulumi.RegisterOutputType(PrometheusRuleGroupActionArrayOutput{})
	pulumi.RegisterOutputType(PrometheusRuleGroupActionResponseOutput{})
	pulumi.RegisterOutputType(PrometheusRuleGroupActionResponseArrayOutput{})
	pulumi.RegisterOutputType(PrometheusRuleResolveConfigurationOutput{})
	pulumi.RegisterOutputType(PrometheusRuleResolveConfigurationPtrOutput{})
	pulumi.RegisterOutputType(PrometheusRuleResolveConfigurationResponseOutput{})
	pulumi.RegisterOutputType(PrometheusRuleResolveConfigurationResponsePtrOutput{})
	pulumi.RegisterOutputType(PrometheusRuleResponseOutput{})
	pulumi.RegisterOutputType(PrometheusRuleResponseArrayOutput{})
	pulumi.RegisterOutputType(SystemDataResponseOutput{})
}
