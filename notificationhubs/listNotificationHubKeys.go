// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package notificationhubs

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Response for the POST request that returns Namespace or NotificationHub access keys (connection strings).
// Azure REST API version: 2023-01-01-preview.
func ListNotificationHubKeys(ctx *pulumi.Context, args *ListNotificationHubKeysArgs, opts ...pulumi.InvokeOption) (*ListNotificationHubKeysResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv ListNotificationHubKeysResult
	err := ctx.Invoke("azure-native:notificationhubs:listNotificationHubKeys", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type ListNotificationHubKeysArgs struct {
	// Authorization Rule Name
	AuthorizationRuleName string `pulumi:"authorizationRuleName"`
	// Namespace name
	NamespaceName string `pulumi:"namespaceName"`
	// Notification Hub name
	NotificationHubName string `pulumi:"notificationHubName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// Response for the POST request that returns Namespace or NotificationHub access keys (connection strings).
type ListNotificationHubKeysResult struct {
	// Gets or sets keyName of the created AuthorizationRule
	KeyName string `pulumi:"keyName"`
	// Gets or sets primaryConnectionString of the AuthorizationRule.
	PrimaryConnectionString string `pulumi:"primaryConnectionString"`
	// Gets or sets primaryKey of the created AuthorizationRule.
	PrimaryKey string `pulumi:"primaryKey"`
	// Gets or sets secondaryConnectionString of the created
	// AuthorizationRule
	SecondaryConnectionString string `pulumi:"secondaryConnectionString"`
	// Gets or sets secondaryKey of the created AuthorizationRule
	SecondaryKey string `pulumi:"secondaryKey"`
}

func ListNotificationHubKeysOutput(ctx *pulumi.Context, args ListNotificationHubKeysOutputArgs, opts ...pulumi.InvokeOption) ListNotificationHubKeysResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (ListNotificationHubKeysResult, error) {
			args := v.(ListNotificationHubKeysArgs)
			r, err := ListNotificationHubKeys(ctx, &args, opts...)
			var s ListNotificationHubKeysResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(ListNotificationHubKeysResultOutput)
}

type ListNotificationHubKeysOutputArgs struct {
	// Authorization Rule Name
	AuthorizationRuleName pulumi.StringInput `pulumi:"authorizationRuleName"`
	// Namespace name
	NamespaceName pulumi.StringInput `pulumi:"namespaceName"`
	// Notification Hub name
	NotificationHubName pulumi.StringInput `pulumi:"notificationHubName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
}

func (ListNotificationHubKeysOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ListNotificationHubKeysArgs)(nil)).Elem()
}

// Response for the POST request that returns Namespace or NotificationHub access keys (connection strings).
type ListNotificationHubKeysResultOutput struct{ *pulumi.OutputState }

func (ListNotificationHubKeysResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListNotificationHubKeysResult)(nil)).Elem()
}

func (o ListNotificationHubKeysResultOutput) ToListNotificationHubKeysResultOutput() ListNotificationHubKeysResultOutput {
	return o
}

func (o ListNotificationHubKeysResultOutput) ToListNotificationHubKeysResultOutputWithContext(ctx context.Context) ListNotificationHubKeysResultOutput {
	return o
}

func (o ListNotificationHubKeysResultOutput) ToOutput(ctx context.Context) pulumix.Output[ListNotificationHubKeysResult] {
	return pulumix.Output[ListNotificationHubKeysResult]{
		OutputState: o.OutputState,
	}
}

// Gets or sets keyName of the created AuthorizationRule
func (o ListNotificationHubKeysResultOutput) KeyName() pulumi.StringOutput {
	return o.ApplyT(func(v ListNotificationHubKeysResult) string { return v.KeyName }).(pulumi.StringOutput)
}

// Gets or sets primaryConnectionString of the AuthorizationRule.
func (o ListNotificationHubKeysResultOutput) PrimaryConnectionString() pulumi.StringOutput {
	return o.ApplyT(func(v ListNotificationHubKeysResult) string { return v.PrimaryConnectionString }).(pulumi.StringOutput)
}

// Gets or sets primaryKey of the created AuthorizationRule.
func (o ListNotificationHubKeysResultOutput) PrimaryKey() pulumi.StringOutput {
	return o.ApplyT(func(v ListNotificationHubKeysResult) string { return v.PrimaryKey }).(pulumi.StringOutput)
}

// Gets or sets secondaryConnectionString of the created
// AuthorizationRule
func (o ListNotificationHubKeysResultOutput) SecondaryConnectionString() pulumi.StringOutput {
	return o.ApplyT(func(v ListNotificationHubKeysResult) string { return v.SecondaryConnectionString }).(pulumi.StringOutput)
}

// Gets or sets secondaryKey of the created AuthorizationRule
func (o ListNotificationHubKeysResultOutput) SecondaryKey() pulumi.StringOutput {
	return o.ApplyT(func(v ListNotificationHubKeysResult) string { return v.SecondaryKey }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(ListNotificationHubKeysResultOutput{})
}
