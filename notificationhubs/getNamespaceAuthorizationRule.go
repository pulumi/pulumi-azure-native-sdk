// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package notificationhubs

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Response for POST requests that return single SharedAccessAuthorizationRule.
//
// Uses Azure REST API version 2023-10-01-preview.
//
// Other available API versions: 2023-01-01-preview, 2023-09-01. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native notificationhubs [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
func LookupNamespaceAuthorizationRule(ctx *pulumi.Context, args *LookupNamespaceAuthorizationRuleArgs, opts ...pulumi.InvokeOption) (*LookupNamespaceAuthorizationRuleResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv LookupNamespaceAuthorizationRuleResult
	err := ctx.Invoke("azure-native:notificationhubs:getNamespaceAuthorizationRule", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupNamespaceAuthorizationRuleArgs struct {
	// Authorization Rule Name
	AuthorizationRuleName string `pulumi:"authorizationRuleName"`
	// Namespace name
	NamespaceName string `pulumi:"namespaceName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// Response for POST requests that return single SharedAccessAuthorizationRule.
type LookupNamespaceAuthorizationRuleResult struct {
	// The Azure API version of the resource.
	AzureApiVersion string `pulumi:"azureApiVersion"`
	// Gets a string that describes the claim type
	ClaimType string `pulumi:"claimType"`
	// Gets a string that describes the claim value
	ClaimValue string `pulumi:"claimValue"`
	// Gets the created time for this rule
	CreatedTime string `pulumi:"createdTime"`
	// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
	Id string `pulumi:"id"`
	// Gets a string that describes the authorization rule.
	KeyName string `pulumi:"keyName"`
	// Deprecated - only for compatibility.
	Location *string `pulumi:"location"`
	// Gets the last modified time for this rule
	ModifiedTime string `pulumi:"modifiedTime"`
	// The name of the resource
	Name string `pulumi:"name"`
	// Gets a base64-encoded 256-bit primary key for signing and
	// validating the SAS token.
	PrimaryKey *string `pulumi:"primaryKey"`
	// Gets the revision number for the rule
	Revision int `pulumi:"revision"`
	// Gets or sets the rights associated with the rule.
	Rights []string `pulumi:"rights"`
	// Gets a base64-encoded 256-bit primary key for signing and
	// validating the SAS token.
	SecondaryKey *string `pulumi:"secondaryKey"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponse `pulumi:"systemData"`
	// Deprecated - only for compatibility.
	Tags map[string]string `pulumi:"tags"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type string `pulumi:"type"`
}

func LookupNamespaceAuthorizationRuleOutput(ctx *pulumi.Context, args LookupNamespaceAuthorizationRuleOutputArgs, opts ...pulumi.InvokeOption) LookupNamespaceAuthorizationRuleResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupNamespaceAuthorizationRuleResultOutput, error) {
			args := v.(LookupNamespaceAuthorizationRuleArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: utilities.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("azure-native:notificationhubs:getNamespaceAuthorizationRule", args, LookupNamespaceAuthorizationRuleResultOutput{}, options).(LookupNamespaceAuthorizationRuleResultOutput), nil
		}).(LookupNamespaceAuthorizationRuleResultOutput)
}

type LookupNamespaceAuthorizationRuleOutputArgs struct {
	// Authorization Rule Name
	AuthorizationRuleName pulumi.StringInput `pulumi:"authorizationRuleName"`
	// Namespace name
	NamespaceName pulumi.StringInput `pulumi:"namespaceName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
}

func (LookupNamespaceAuthorizationRuleOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupNamespaceAuthorizationRuleArgs)(nil)).Elem()
}

// Response for POST requests that return single SharedAccessAuthorizationRule.
type LookupNamespaceAuthorizationRuleResultOutput struct{ *pulumi.OutputState }

func (LookupNamespaceAuthorizationRuleResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupNamespaceAuthorizationRuleResult)(nil)).Elem()
}

func (o LookupNamespaceAuthorizationRuleResultOutput) ToLookupNamespaceAuthorizationRuleResultOutput() LookupNamespaceAuthorizationRuleResultOutput {
	return o
}

func (o LookupNamespaceAuthorizationRuleResultOutput) ToLookupNamespaceAuthorizationRuleResultOutputWithContext(ctx context.Context) LookupNamespaceAuthorizationRuleResultOutput {
	return o
}

// The Azure API version of the resource.
func (o LookupNamespaceAuthorizationRuleResultOutput) AzureApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNamespaceAuthorizationRuleResult) string { return v.AzureApiVersion }).(pulumi.StringOutput)
}

// Gets a string that describes the claim type
func (o LookupNamespaceAuthorizationRuleResultOutput) ClaimType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNamespaceAuthorizationRuleResult) string { return v.ClaimType }).(pulumi.StringOutput)
}

// Gets a string that describes the claim value
func (o LookupNamespaceAuthorizationRuleResultOutput) ClaimValue() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNamespaceAuthorizationRuleResult) string { return v.ClaimValue }).(pulumi.StringOutput)
}

// Gets the created time for this rule
func (o LookupNamespaceAuthorizationRuleResultOutput) CreatedTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNamespaceAuthorizationRuleResult) string { return v.CreatedTime }).(pulumi.StringOutput)
}

// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
func (o LookupNamespaceAuthorizationRuleResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNamespaceAuthorizationRuleResult) string { return v.Id }).(pulumi.StringOutput)
}

// Gets a string that describes the authorization rule.
func (o LookupNamespaceAuthorizationRuleResultOutput) KeyName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNamespaceAuthorizationRuleResult) string { return v.KeyName }).(pulumi.StringOutput)
}

// Deprecated - only for compatibility.
func (o LookupNamespaceAuthorizationRuleResultOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupNamespaceAuthorizationRuleResult) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// Gets the last modified time for this rule
func (o LookupNamespaceAuthorizationRuleResultOutput) ModifiedTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNamespaceAuthorizationRuleResult) string { return v.ModifiedTime }).(pulumi.StringOutput)
}

// The name of the resource
func (o LookupNamespaceAuthorizationRuleResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNamespaceAuthorizationRuleResult) string { return v.Name }).(pulumi.StringOutput)
}

// Gets a base64-encoded 256-bit primary key for signing and
// validating the SAS token.
func (o LookupNamespaceAuthorizationRuleResultOutput) PrimaryKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupNamespaceAuthorizationRuleResult) *string { return v.PrimaryKey }).(pulumi.StringPtrOutput)
}

// Gets the revision number for the rule
func (o LookupNamespaceAuthorizationRuleResultOutput) Revision() pulumi.IntOutput {
	return o.ApplyT(func(v LookupNamespaceAuthorizationRuleResult) int { return v.Revision }).(pulumi.IntOutput)
}

// Gets or sets the rights associated with the rule.
func (o LookupNamespaceAuthorizationRuleResultOutput) Rights() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupNamespaceAuthorizationRuleResult) []string { return v.Rights }).(pulumi.StringArrayOutput)
}

// Gets a base64-encoded 256-bit primary key for signing and
// validating the SAS token.
func (o LookupNamespaceAuthorizationRuleResultOutput) SecondaryKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupNamespaceAuthorizationRuleResult) *string { return v.SecondaryKey }).(pulumi.StringPtrOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o LookupNamespaceAuthorizationRuleResultOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v LookupNamespaceAuthorizationRuleResult) SystemDataResponse { return v.SystemData }).(SystemDataResponseOutput)
}

// Deprecated - only for compatibility.
func (o LookupNamespaceAuthorizationRuleResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupNamespaceAuthorizationRuleResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o LookupNamespaceAuthorizationRuleResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNamespaceAuthorizationRuleResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupNamespaceAuthorizationRuleResultOutput{})
}
