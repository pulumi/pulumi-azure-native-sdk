// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20231001preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Notification Hub Resource.
func LookupNotificationHub(ctx *pulumi.Context, args *LookupNotificationHubArgs, opts ...pulumi.InvokeOption) (*LookupNotificationHubResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv LookupNotificationHubResult
	err := ctx.Invoke("azure-native:notificationhubs/v20231001preview:getNotificationHub", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupNotificationHubArgs struct {
	// Namespace name
	NamespaceName string `pulumi:"namespaceName"`
	// Notification Hub name
	NotificationHubName string `pulumi:"notificationHubName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// Notification Hub Resource.
type LookupNotificationHubResult struct {
	// Description of a NotificationHub AdmCredential.
	AdmCredential *AdmCredentialResponse `pulumi:"admCredential"`
	// Description of a NotificationHub ApnsCredential.
	ApnsCredential *ApnsCredentialResponse `pulumi:"apnsCredential"`
	// Gets or sets the AuthorizationRules of the created NotificationHub
	AuthorizationRules []SharedAccessAuthorizationRulePropertiesResponse `pulumi:"authorizationRules"`
	// Description of a NotificationHub BaiduCredential.
	BaiduCredential *BaiduCredentialResponse `pulumi:"baiduCredential"`
	// Description of a NotificationHub BrowserCredential.
	BrowserCredential     *BrowserCredentialResponse `pulumi:"browserCredential"`
	DailyMaxActiveDevices float64                    `pulumi:"dailyMaxActiveDevices"`
	// Description of a NotificationHub FcmV1Credential.
	FcmV1Credential *FcmV1CredentialResponse `pulumi:"fcmV1Credential"`
	// Description of a NotificationHub GcmCredential.
	GcmCredential *GcmCredentialResponse `pulumi:"gcmCredential"`
	// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
	Id string `pulumi:"id"`
	// The geo-location where the resource lives
	Location string `pulumi:"location"`
	// Description of a NotificationHub MpnsCredential.
	MpnsCredential *MpnsCredentialResponse `pulumi:"mpnsCredential"`
	// The name of the resource
	Name string `pulumi:"name"`
	// Gets or sets the RegistrationTtl of the created NotificationHub
	RegistrationTtl *string `pulumi:"registrationTtl"`
	// The Sku description for a namespace
	Sku *SkuResponse `pulumi:"sku"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponse `pulumi:"systemData"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type string `pulumi:"type"`
	// Description of a NotificationHub WnsCredential.
	WnsCredential *WnsCredentialResponse `pulumi:"wnsCredential"`
	// Description of a NotificationHub XiaomiCredential.
	XiaomiCredential *XiaomiCredentialResponse `pulumi:"xiaomiCredential"`
}

func LookupNotificationHubOutput(ctx *pulumi.Context, args LookupNotificationHubOutputArgs, opts ...pulumi.InvokeOption) LookupNotificationHubResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupNotificationHubResult, error) {
			args := v.(LookupNotificationHubArgs)
			r, err := LookupNotificationHub(ctx, &args, opts...)
			var s LookupNotificationHubResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupNotificationHubResultOutput)
}

type LookupNotificationHubOutputArgs struct {
	// Namespace name
	NamespaceName pulumi.StringInput `pulumi:"namespaceName"`
	// Notification Hub name
	NotificationHubName pulumi.StringInput `pulumi:"notificationHubName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
}

func (LookupNotificationHubOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupNotificationHubArgs)(nil)).Elem()
}

// Notification Hub Resource.
type LookupNotificationHubResultOutput struct{ *pulumi.OutputState }

func (LookupNotificationHubResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupNotificationHubResult)(nil)).Elem()
}

func (o LookupNotificationHubResultOutput) ToLookupNotificationHubResultOutput() LookupNotificationHubResultOutput {
	return o
}

func (o LookupNotificationHubResultOutput) ToLookupNotificationHubResultOutputWithContext(ctx context.Context) LookupNotificationHubResultOutput {
	return o
}

// Description of a NotificationHub AdmCredential.
func (o LookupNotificationHubResultOutput) AdmCredential() AdmCredentialResponsePtrOutput {
	return o.ApplyT(func(v LookupNotificationHubResult) *AdmCredentialResponse { return v.AdmCredential }).(AdmCredentialResponsePtrOutput)
}

// Description of a NotificationHub ApnsCredential.
func (o LookupNotificationHubResultOutput) ApnsCredential() ApnsCredentialResponsePtrOutput {
	return o.ApplyT(func(v LookupNotificationHubResult) *ApnsCredentialResponse { return v.ApnsCredential }).(ApnsCredentialResponsePtrOutput)
}

// Gets or sets the AuthorizationRules of the created NotificationHub
func (o LookupNotificationHubResultOutput) AuthorizationRules() SharedAccessAuthorizationRulePropertiesResponseArrayOutput {
	return o.ApplyT(func(v LookupNotificationHubResult) []SharedAccessAuthorizationRulePropertiesResponse {
		return v.AuthorizationRules
	}).(SharedAccessAuthorizationRulePropertiesResponseArrayOutput)
}

// Description of a NotificationHub BaiduCredential.
func (o LookupNotificationHubResultOutput) BaiduCredential() BaiduCredentialResponsePtrOutput {
	return o.ApplyT(func(v LookupNotificationHubResult) *BaiduCredentialResponse { return v.BaiduCredential }).(BaiduCredentialResponsePtrOutput)
}

// Description of a NotificationHub BrowserCredential.
func (o LookupNotificationHubResultOutput) BrowserCredential() BrowserCredentialResponsePtrOutput {
	return o.ApplyT(func(v LookupNotificationHubResult) *BrowserCredentialResponse { return v.BrowserCredential }).(BrowserCredentialResponsePtrOutput)
}

func (o LookupNotificationHubResultOutput) DailyMaxActiveDevices() pulumi.Float64Output {
	return o.ApplyT(func(v LookupNotificationHubResult) float64 { return v.DailyMaxActiveDevices }).(pulumi.Float64Output)
}

// Description of a NotificationHub FcmV1Credential.
func (o LookupNotificationHubResultOutput) FcmV1Credential() FcmV1CredentialResponsePtrOutput {
	return o.ApplyT(func(v LookupNotificationHubResult) *FcmV1CredentialResponse { return v.FcmV1Credential }).(FcmV1CredentialResponsePtrOutput)
}

// Description of a NotificationHub GcmCredential.
func (o LookupNotificationHubResultOutput) GcmCredential() GcmCredentialResponsePtrOutput {
	return o.ApplyT(func(v LookupNotificationHubResult) *GcmCredentialResponse { return v.GcmCredential }).(GcmCredentialResponsePtrOutput)
}

// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
func (o LookupNotificationHubResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNotificationHubResult) string { return v.Id }).(pulumi.StringOutput)
}

// The geo-location where the resource lives
func (o LookupNotificationHubResultOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNotificationHubResult) string { return v.Location }).(pulumi.StringOutput)
}

// Description of a NotificationHub MpnsCredential.
func (o LookupNotificationHubResultOutput) MpnsCredential() MpnsCredentialResponsePtrOutput {
	return o.ApplyT(func(v LookupNotificationHubResult) *MpnsCredentialResponse { return v.MpnsCredential }).(MpnsCredentialResponsePtrOutput)
}

// The name of the resource
func (o LookupNotificationHubResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNotificationHubResult) string { return v.Name }).(pulumi.StringOutput)
}

// Gets or sets the RegistrationTtl of the created NotificationHub
func (o LookupNotificationHubResultOutput) RegistrationTtl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupNotificationHubResult) *string { return v.RegistrationTtl }).(pulumi.StringPtrOutput)
}

// The Sku description for a namespace
func (o LookupNotificationHubResultOutput) Sku() SkuResponsePtrOutput {
	return o.ApplyT(func(v LookupNotificationHubResult) *SkuResponse { return v.Sku }).(SkuResponsePtrOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o LookupNotificationHubResultOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v LookupNotificationHubResult) SystemDataResponse { return v.SystemData }).(SystemDataResponseOutput)
}

// Resource tags.
func (o LookupNotificationHubResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupNotificationHubResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o LookupNotificationHubResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNotificationHubResult) string { return v.Type }).(pulumi.StringOutput)
}

// Description of a NotificationHub WnsCredential.
func (o LookupNotificationHubResultOutput) WnsCredential() WnsCredentialResponsePtrOutput {
	return o.ApplyT(func(v LookupNotificationHubResult) *WnsCredentialResponse { return v.WnsCredential }).(WnsCredentialResponsePtrOutput)
}

// Description of a NotificationHub XiaomiCredential.
func (o LookupNotificationHubResultOutput) XiaomiCredential() XiaomiCredentialResponsePtrOutput {
	return o.ApplyT(func(v LookupNotificationHubResult) *XiaomiCredentialResponse { return v.XiaomiCredential }).(XiaomiCredentialResponsePtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupNotificationHubResultOutput{})
}
