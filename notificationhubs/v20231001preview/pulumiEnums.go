// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20231001preview

// Defines values for AccessRights.
type AccessRights string

const (
	AccessRightsManage = AccessRights("Manage")
	AccessRightsSend   = AccessRights("Send")
	AccessRightsListen = AccessRights("Listen")
)

// Namespace status.
type NamespaceStatus string

const (
	NamespaceStatusCreated   = NamespaceStatus("Created")
	NamespaceStatusCreating  = NamespaceStatus("Creating")
	NamespaceStatusSuspended = NamespaceStatus("Suspended")
	NamespaceStatusDeleting  = NamespaceStatus("Deleting")
)

// Defines values for NamespaceType.
type NamespaceType string

const (
	NamespaceTypeMessaging       = NamespaceType("Messaging")
	NamespaceTypeNotificationHub = NamespaceType("NotificationHub")
)

// Defines values for OperationProvisioningState.
type OperationProvisioningState string

const (
	OperationProvisioningStateUnknown    = OperationProvisioningState("Unknown")
	OperationProvisioningStateInProgress = OperationProvisioningState("InProgress")
	OperationProvisioningStateSucceeded  = OperationProvisioningState("Succeeded")
	OperationProvisioningStateFailed     = OperationProvisioningState("Failed")
	OperationProvisioningStateCanceled   = OperationProvisioningState("Canceled")
	OperationProvisioningStatePending    = OperationProvisioningState("Pending")
	OperationProvisioningStateDisabled   = OperationProvisioningState("Disabled")
)

// State of Private Endpoint Connection.
type PrivateEndpointConnectionProvisioningState string

const (
	PrivateEndpointConnectionProvisioningStateUnknown         = PrivateEndpointConnectionProvisioningState("Unknown")
	PrivateEndpointConnectionProvisioningStateSucceeded       = PrivateEndpointConnectionProvisioningState("Succeeded")
	PrivateEndpointConnectionProvisioningStateCreating        = PrivateEndpointConnectionProvisioningState("Creating")
	PrivateEndpointConnectionProvisioningStateUpdating        = PrivateEndpointConnectionProvisioningState("Updating")
	PrivateEndpointConnectionProvisioningStateUpdatingByProxy = PrivateEndpointConnectionProvisioningState("UpdatingByProxy")
	PrivateEndpointConnectionProvisioningStateDeleting        = PrivateEndpointConnectionProvisioningState("Deleting")
	PrivateEndpointConnectionProvisioningStateDeletingByProxy = PrivateEndpointConnectionProvisioningState("DeletingByProxy")
	PrivateEndpointConnectionProvisioningStateDeleted         = PrivateEndpointConnectionProvisioningState("Deleted")
)

// State of Private Link Connection.
type PrivateLinkConnectionStatus string

const (
	PrivateLinkConnectionStatusDisconnected = PrivateLinkConnectionStatus("Disconnected")
	PrivateLinkConnectionStatusPending      = PrivateLinkConnectionStatus("Pending")
	PrivateLinkConnectionStatusApproved     = PrivateLinkConnectionStatus("Approved")
	PrivateLinkConnectionStatusRejected     = PrivateLinkConnectionStatus("Rejected")
)

// Type of public network access.
type PublicNetworkAccess string

const (
	PublicNetworkAccessEnabled  = PublicNetworkAccess("Enabled")
	PublicNetworkAccessDisabled = PublicNetworkAccess("Disabled")
)

// Allowed replication region
type ReplicationRegion string

const (
	ReplicationRegionDefault          = ReplicationRegion("Default")
	ReplicationRegionWestUs2          = ReplicationRegion("WestUs2")
	ReplicationRegionNorthEurope      = ReplicationRegion("NorthEurope")
	ReplicationRegionAustraliaEast    = ReplicationRegion("AustraliaEast")
	ReplicationRegionBrazilSouth      = ReplicationRegion("BrazilSouth")
	ReplicationRegionSouthEastAsia    = ReplicationRegion("SouthEastAsia")
	ReplicationRegionSouthAfricaNorth = ReplicationRegion("SouthAfricaNorth")
	ReplicationRegionNone             = ReplicationRegion("None")
)

// Namespace SKU name.
type SkuName string

const (
	SkuNameFree     = SkuName("Free")
	SkuNameBasic    = SkuName("Basic")
	SkuNameStandard = SkuName("Standard")
)

// Namespace SKU name.
type ZoneRedundancyPreference string

const (
	ZoneRedundancyPreferenceDisabled = ZoneRedundancyPreference("Disabled")
	ZoneRedundancyPreferenceEnabled  = ZoneRedundancyPreference("Enabled")
)

func init() {
}
