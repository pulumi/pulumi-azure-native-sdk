// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package iothub

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v3/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Get a consumer group from the Event Hub-compatible device-to-cloud endpoint for an IoT hub.
//
// Uses Azure REST API version 2023-06-30.
//
// Other available API versions: 2016-02-03, 2017-01-19, 2017-07-01, 2018-01-22, 2018-04-01, 2018-12-01-preview, 2019-03-22, 2019-03-22-preview, 2019-07-01-preview, 2019-11-04, 2020-03-01, 2020-04-01, 2020-06-15, 2020-07-10-preview, 2020-08-01, 2020-08-31, 2020-08-31-preview, 2021-02-01-preview, 2021-03-03-preview, 2021-03-31, 2021-07-01, 2021-07-01-preview, 2021-07-02, 2021-07-02-preview, 2022-04-30-preview, 2022-11-15-preview, 2023-06-30-preview. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native iothub [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
func LookupIotHubResourceEventHubConsumerGroup(ctx *pulumi.Context, args *LookupIotHubResourceEventHubConsumerGroupArgs, opts ...pulumi.InvokeOption) (*LookupIotHubResourceEventHubConsumerGroupResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv LookupIotHubResourceEventHubConsumerGroupResult
	err := ctx.Invoke("azure-native:iothub:getIotHubResourceEventHubConsumerGroup", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupIotHubResourceEventHubConsumerGroupArgs struct {
	// The name of the Event Hub-compatible endpoint in the IoT hub.
	EventHubEndpointName string `pulumi:"eventHubEndpointName"`
	// The name of the consumer group to retrieve.
	Name string `pulumi:"name"`
	// The name of the resource group that contains the IoT hub.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The name of the IoT hub.
	ResourceName string `pulumi:"resourceName"`
}

// The properties of the EventHubConsumerGroupInfo object.
type LookupIotHubResourceEventHubConsumerGroupResult struct {
	// The Azure API version of the resource.
	AzureApiVersion string `pulumi:"azureApiVersion"`
	// The etag.
	Etag string `pulumi:"etag"`
	// The Event Hub-compatible consumer group identifier.
	Id string `pulumi:"id"`
	// The Event Hub-compatible consumer group name.
	Name string `pulumi:"name"`
	// The tags.
	Properties interface{} `pulumi:"properties"`
	// the resource type.
	Type string `pulumi:"type"`
}

func LookupIotHubResourceEventHubConsumerGroupOutput(ctx *pulumi.Context, args LookupIotHubResourceEventHubConsumerGroupOutputArgs, opts ...pulumi.InvokeOption) LookupIotHubResourceEventHubConsumerGroupResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupIotHubResourceEventHubConsumerGroupResultOutput, error) {
			args := v.(LookupIotHubResourceEventHubConsumerGroupArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: utilities.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("azure-native:iothub:getIotHubResourceEventHubConsumerGroup", args, LookupIotHubResourceEventHubConsumerGroupResultOutput{}, options).(LookupIotHubResourceEventHubConsumerGroupResultOutput), nil
		}).(LookupIotHubResourceEventHubConsumerGroupResultOutput)
}

type LookupIotHubResourceEventHubConsumerGroupOutputArgs struct {
	// The name of the Event Hub-compatible endpoint in the IoT hub.
	EventHubEndpointName pulumi.StringInput `pulumi:"eventHubEndpointName"`
	// The name of the consumer group to retrieve.
	Name pulumi.StringInput `pulumi:"name"`
	// The name of the resource group that contains the IoT hub.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
	// The name of the IoT hub.
	ResourceName pulumi.StringInput `pulumi:"resourceName"`
}

func (LookupIotHubResourceEventHubConsumerGroupOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupIotHubResourceEventHubConsumerGroupArgs)(nil)).Elem()
}

// The properties of the EventHubConsumerGroupInfo object.
type LookupIotHubResourceEventHubConsumerGroupResultOutput struct{ *pulumi.OutputState }

func (LookupIotHubResourceEventHubConsumerGroupResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupIotHubResourceEventHubConsumerGroupResult)(nil)).Elem()
}

func (o LookupIotHubResourceEventHubConsumerGroupResultOutput) ToLookupIotHubResourceEventHubConsumerGroupResultOutput() LookupIotHubResourceEventHubConsumerGroupResultOutput {
	return o
}

func (o LookupIotHubResourceEventHubConsumerGroupResultOutput) ToLookupIotHubResourceEventHubConsumerGroupResultOutputWithContext(ctx context.Context) LookupIotHubResourceEventHubConsumerGroupResultOutput {
	return o
}

// The Azure API version of the resource.
func (o LookupIotHubResourceEventHubConsumerGroupResultOutput) AzureApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v LookupIotHubResourceEventHubConsumerGroupResult) string { return v.AzureApiVersion }).(pulumi.StringOutput)
}

// The etag.
func (o LookupIotHubResourceEventHubConsumerGroupResultOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v LookupIotHubResourceEventHubConsumerGroupResult) string { return v.Etag }).(pulumi.StringOutput)
}

// The Event Hub-compatible consumer group identifier.
func (o LookupIotHubResourceEventHubConsumerGroupResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupIotHubResourceEventHubConsumerGroupResult) string { return v.Id }).(pulumi.StringOutput)
}

// The Event Hub-compatible consumer group name.
func (o LookupIotHubResourceEventHubConsumerGroupResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupIotHubResourceEventHubConsumerGroupResult) string { return v.Name }).(pulumi.StringOutput)
}

// The tags.
func (o LookupIotHubResourceEventHubConsumerGroupResultOutput) Properties() pulumi.AnyOutput {
	return o.ApplyT(func(v LookupIotHubResourceEventHubConsumerGroupResult) interface{} { return v.Properties }).(pulumi.AnyOutput)
}

// the resource type.
func (o LookupIotHubResourceEventHubConsumerGroupResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupIotHubResourceEventHubConsumerGroupResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupIotHubResourceEventHubConsumerGroupResultOutput{})
}
