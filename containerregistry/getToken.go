// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package containerregistry

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v3/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Gets the properties of the specified token.
//
// Uses Azure REST API version 2024-11-01-preview.
//
// Other available API versions: 2020-11-01-preview, 2021-06-01-preview, 2021-08-01-preview, 2021-12-01-preview, 2022-02-01-preview, 2022-12-01, 2023-01-01-preview, 2023-06-01-preview, 2023-07-01, 2023-08-01-preview, 2023-11-01-preview, 2025-03-01-preview, 2025-04-01, 2025-05-01-preview. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native containerregistry [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
func LookupToken(ctx *pulumi.Context, args *LookupTokenArgs, opts ...pulumi.InvokeOption) (*LookupTokenResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv LookupTokenResult
	err := ctx.Invoke("azure-native:containerregistry:getToken", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupTokenArgs struct {
	// The name of the container registry.
	RegistryName string `pulumi:"registryName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The name of the token.
	TokenName string `pulumi:"tokenName"`
}

// An object that represents a token for a container registry.
type LookupTokenResult struct {
	// The Azure API version of the resource.
	AzureApiVersion string `pulumi:"azureApiVersion"`
	// The creation date of scope map.
	CreationDate string `pulumi:"creationDate"`
	// The credentials that can be used for authenticating the token.
	Credentials *TokenCredentialsPropertiesResponse `pulumi:"credentials"`
	// The resource ID.
	Id string `pulumi:"id"`
	// The name of the resource.
	Name string `pulumi:"name"`
	// Provisioning state of the resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// The resource ID of the scope map to which the token will be associated with.
	ScopeMapId *string `pulumi:"scopeMapId"`
	// The status of the token example enabled or disabled.
	Status *string `pulumi:"status"`
	// Metadata pertaining to creation and last modification of the resource.
	SystemData SystemDataResponse `pulumi:"systemData"`
	// The type of the resource.
	Type string `pulumi:"type"`
}

func LookupTokenOutput(ctx *pulumi.Context, args LookupTokenOutputArgs, opts ...pulumi.InvokeOption) LookupTokenResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupTokenResultOutput, error) {
			args := v.(LookupTokenArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: utilities.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("azure-native:containerregistry:getToken", args, LookupTokenResultOutput{}, options).(LookupTokenResultOutput), nil
		}).(LookupTokenResultOutput)
}

type LookupTokenOutputArgs struct {
	// The name of the container registry.
	RegistryName pulumi.StringInput `pulumi:"registryName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
	// The name of the token.
	TokenName pulumi.StringInput `pulumi:"tokenName"`
}

func (LookupTokenOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupTokenArgs)(nil)).Elem()
}

// An object that represents a token for a container registry.
type LookupTokenResultOutput struct{ *pulumi.OutputState }

func (LookupTokenResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupTokenResult)(nil)).Elem()
}

func (o LookupTokenResultOutput) ToLookupTokenResultOutput() LookupTokenResultOutput {
	return o
}

func (o LookupTokenResultOutput) ToLookupTokenResultOutputWithContext(ctx context.Context) LookupTokenResultOutput {
	return o
}

// The Azure API version of the resource.
func (o LookupTokenResultOutput) AzureApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTokenResult) string { return v.AzureApiVersion }).(pulumi.StringOutput)
}

// The creation date of scope map.
func (o LookupTokenResultOutput) CreationDate() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTokenResult) string { return v.CreationDate }).(pulumi.StringOutput)
}

// The credentials that can be used for authenticating the token.
func (o LookupTokenResultOutput) Credentials() TokenCredentialsPropertiesResponsePtrOutput {
	return o.ApplyT(func(v LookupTokenResult) *TokenCredentialsPropertiesResponse { return v.Credentials }).(TokenCredentialsPropertiesResponsePtrOutput)
}

// The resource ID.
func (o LookupTokenResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTokenResult) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the resource.
func (o LookupTokenResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTokenResult) string { return v.Name }).(pulumi.StringOutput)
}

// Provisioning state of the resource.
func (o LookupTokenResultOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTokenResult) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The resource ID of the scope map to which the token will be associated with.
func (o LookupTokenResultOutput) ScopeMapId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupTokenResult) *string { return v.ScopeMapId }).(pulumi.StringPtrOutput)
}

// The status of the token example enabled or disabled.
func (o LookupTokenResultOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupTokenResult) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// Metadata pertaining to creation and last modification of the resource.
func (o LookupTokenResultOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v LookupTokenResult) SystemDataResponse { return v.SystemData }).(SystemDataResponseOutput)
}

// The type of the resource.
func (o LookupTokenResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTokenResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupTokenResultOutput{})
}
