// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package containerregistry

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Gets the properties of the archive.
// Azure REST API version: 2023-06-01-preview.
func LookupArchife(ctx *pulumi.Context, args *LookupArchifeArgs, opts ...pulumi.InvokeOption) (*LookupArchifeResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv LookupArchifeResult
	err := ctx.Invoke("azure-native:containerregistry:getArchife", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupArchifeArgs struct {
	// The name of the archive resource.
	ArchiveName string `pulumi:"archiveName"`
	// The type of the package resource.
	PackageType string `pulumi:"packageType"`
	// The name of the container registry.
	RegistryName string `pulumi:"registryName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// An object that represents a archive for a container registry.
type LookupArchifeResult struct {
	// The resource ID.
	Id string `pulumi:"id"`
	// The name of the resource.
	Name string `pulumi:"name"`
	// The package source of the archive.
	PackageSource *ArchivePackageSourcePropertiesResponse `pulumi:"packageSource"`
	// The provisioning state of the archive at the time the operation was called.
	ProvisioningState string `pulumi:"provisioningState"`
	// The published version of the archive.
	PublishedVersion         *string `pulumi:"publishedVersion"`
	RepositoryEndpoint       string  `pulumi:"repositoryEndpoint"`
	RepositoryEndpointPrefix *string `pulumi:"repositoryEndpointPrefix"`
	// Metadata pertaining to creation and last modification of the resource.
	SystemData SystemDataResponse `pulumi:"systemData"`
	// The type of the resource.
	Type string `pulumi:"type"`
}

func LookupArchifeOutput(ctx *pulumi.Context, args LookupArchifeOutputArgs, opts ...pulumi.InvokeOption) LookupArchifeResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupArchifeResult, error) {
			args := v.(LookupArchifeArgs)
			r, err := LookupArchife(ctx, &args, opts...)
			var s LookupArchifeResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupArchifeResultOutput)
}

type LookupArchifeOutputArgs struct {
	// The name of the archive resource.
	ArchiveName pulumi.StringInput `pulumi:"archiveName"`
	// The type of the package resource.
	PackageType pulumi.StringInput `pulumi:"packageType"`
	// The name of the container registry.
	RegistryName pulumi.StringInput `pulumi:"registryName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
}

func (LookupArchifeOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupArchifeArgs)(nil)).Elem()
}

// An object that represents a archive for a container registry.
type LookupArchifeResultOutput struct{ *pulumi.OutputState }

func (LookupArchifeResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupArchifeResult)(nil)).Elem()
}

func (o LookupArchifeResultOutput) ToLookupArchifeResultOutput() LookupArchifeResultOutput {
	return o
}

func (o LookupArchifeResultOutput) ToLookupArchifeResultOutputWithContext(ctx context.Context) LookupArchifeResultOutput {
	return o
}

// The resource ID.
func (o LookupArchifeResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupArchifeResult) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the resource.
func (o LookupArchifeResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupArchifeResult) string { return v.Name }).(pulumi.StringOutput)
}

// The package source of the archive.
func (o LookupArchifeResultOutput) PackageSource() ArchivePackageSourcePropertiesResponsePtrOutput {
	return o.ApplyT(func(v LookupArchifeResult) *ArchivePackageSourcePropertiesResponse { return v.PackageSource }).(ArchivePackageSourcePropertiesResponsePtrOutput)
}

// The provisioning state of the archive at the time the operation was called.
func (o LookupArchifeResultOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v LookupArchifeResult) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The published version of the archive.
func (o LookupArchifeResultOutput) PublishedVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupArchifeResult) *string { return v.PublishedVersion }).(pulumi.StringPtrOutput)
}

func (o LookupArchifeResultOutput) RepositoryEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v LookupArchifeResult) string { return v.RepositoryEndpoint }).(pulumi.StringOutput)
}

func (o LookupArchifeResultOutput) RepositoryEndpointPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupArchifeResult) *string { return v.RepositoryEndpointPrefix }).(pulumi.StringPtrOutput)
}

// Metadata pertaining to creation and last modification of the resource.
func (o LookupArchifeResultOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v LookupArchifeResult) SystemDataResponse { return v.SystemData }).(SystemDataResponseOutput)
}

// The type of the resource.
func (o LookupArchifeResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupArchifeResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupArchifeResultOutput{})
}
