// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20230701

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Gets the properties of the specified credential set resource.
func LookupCredentialSet(ctx *pulumi.Context, args *LookupCredentialSetArgs, opts ...pulumi.InvokeOption) (*LookupCredentialSetResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv LookupCredentialSetResult
	err := ctx.Invoke("azure-native:containerregistry/v20230701:getCredentialSet", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupCredentialSetArgs struct {
	// The name of the credential set.
	CredentialSetName string `pulumi:"credentialSetName"`
	// The name of the container registry.
	RegistryName string `pulumi:"registryName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// An object that represents a credential set resource for a container registry.
type LookupCredentialSetResult struct {
	// List of authentication credentials stored for an upstream.
	// Usually consists of a primary and an optional secondary credential.
	AuthCredentials []AuthCredentialResponse `pulumi:"authCredentials"`
	// The creation date of credential store resource.
	CreationDate string `pulumi:"creationDate"`
	// The resource ID.
	Id string `pulumi:"id"`
	// Identities associated with the resource. This is used to access the KeyVault secrets.
	Identity *IdentityPropertiesResponse `pulumi:"identity"`
	// The credentials are stored for this upstream or login server.
	LoginServer *string `pulumi:"loginServer"`
	// The name of the resource.
	Name string `pulumi:"name"`
	// Provisioning state of the resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// Metadata pertaining to creation and last modification of the resource.
	SystemData SystemDataResponse `pulumi:"systemData"`
	// The type of the resource.
	Type string `pulumi:"type"`
}

func LookupCredentialSetOutput(ctx *pulumi.Context, args LookupCredentialSetOutputArgs, opts ...pulumi.InvokeOption) LookupCredentialSetResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupCredentialSetResult, error) {
			args := v.(LookupCredentialSetArgs)
			r, err := LookupCredentialSet(ctx, &args, opts...)
			var s LookupCredentialSetResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupCredentialSetResultOutput)
}

type LookupCredentialSetOutputArgs struct {
	// The name of the credential set.
	CredentialSetName pulumi.StringInput `pulumi:"credentialSetName"`
	// The name of the container registry.
	RegistryName pulumi.StringInput `pulumi:"registryName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
}

func (LookupCredentialSetOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupCredentialSetArgs)(nil)).Elem()
}

// An object that represents a credential set resource for a container registry.
type LookupCredentialSetResultOutput struct{ *pulumi.OutputState }

func (LookupCredentialSetResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupCredentialSetResult)(nil)).Elem()
}

func (o LookupCredentialSetResultOutput) ToLookupCredentialSetResultOutput() LookupCredentialSetResultOutput {
	return o
}

func (o LookupCredentialSetResultOutput) ToLookupCredentialSetResultOutputWithContext(ctx context.Context) LookupCredentialSetResultOutput {
	return o
}

func (o LookupCredentialSetResultOutput) ToOutput(ctx context.Context) pulumix.Output[LookupCredentialSetResult] {
	return pulumix.Output[LookupCredentialSetResult]{
		OutputState: o.OutputState,
	}
}

// List of authentication credentials stored for an upstream.
// Usually consists of a primary and an optional secondary credential.
func (o LookupCredentialSetResultOutput) AuthCredentials() AuthCredentialResponseArrayOutput {
	return o.ApplyT(func(v LookupCredentialSetResult) []AuthCredentialResponse { return v.AuthCredentials }).(AuthCredentialResponseArrayOutput)
}

// The creation date of credential store resource.
func (o LookupCredentialSetResultOutput) CreationDate() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCredentialSetResult) string { return v.CreationDate }).(pulumi.StringOutput)
}

// The resource ID.
func (o LookupCredentialSetResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCredentialSetResult) string { return v.Id }).(pulumi.StringOutput)
}

// Identities associated with the resource. This is used to access the KeyVault secrets.
func (o LookupCredentialSetResultOutput) Identity() IdentityPropertiesResponsePtrOutput {
	return o.ApplyT(func(v LookupCredentialSetResult) *IdentityPropertiesResponse { return v.Identity }).(IdentityPropertiesResponsePtrOutput)
}

// The credentials are stored for this upstream or login server.
func (o LookupCredentialSetResultOutput) LoginServer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupCredentialSetResult) *string { return v.LoginServer }).(pulumi.StringPtrOutput)
}

// The name of the resource.
func (o LookupCredentialSetResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCredentialSetResult) string { return v.Name }).(pulumi.StringOutput)
}

// Provisioning state of the resource.
func (o LookupCredentialSetResultOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCredentialSetResult) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Metadata pertaining to creation and last modification of the resource.
func (o LookupCredentialSetResultOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v LookupCredentialSetResult) SystemDataResponse { return v.SystemData }).(SystemDataResponseOutput)
}

// The type of the resource.
func (o LookupCredentialSetResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCredentialSetResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupCredentialSetResultOutput{})
}
