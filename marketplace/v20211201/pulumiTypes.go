// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20211201

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

var _ = utilities.GetEnvOrDefault

// New plans notification details
type NewNotificationsResponse struct {
	// Gets offer display name
	DisplayName *string `pulumi:"displayName"`
	// Gets or sets the icon url
	Icon *string `pulumi:"icon"`
	// Gets a value indicating whether future plans is enabled.
	IsFuturePlansEnabled *bool `pulumi:"isFuturePlansEnabled"`
	// Gets or sets the notification message id
	MessageCode *float64 `pulumi:"messageCode"`
	// Gets offer id
	OfferId *string `pulumi:"offerId"`
	// Gets or sets removed plans notifications
	Plans []PlanNotificationDetailsResponse `pulumi:"plans"`
}

// New plans notification details
type NewNotificationsResponseOutput struct{ *pulumi.OutputState }

func (NewNotificationsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NewNotificationsResponse)(nil)).Elem()
}

func (o NewNotificationsResponseOutput) ToNewNotificationsResponseOutput() NewNotificationsResponseOutput {
	return o
}

func (o NewNotificationsResponseOutput) ToNewNotificationsResponseOutputWithContext(ctx context.Context) NewNotificationsResponseOutput {
	return o
}

func (o NewNotificationsResponseOutput) ToOutput(ctx context.Context) pulumix.Output[NewNotificationsResponse] {
	return pulumix.Output[NewNotificationsResponse]{
		OutputState: o.OutputState,
	}
}

// Gets offer display name
func (o NewNotificationsResponseOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NewNotificationsResponse) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// Gets or sets the icon url
func (o NewNotificationsResponseOutput) Icon() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NewNotificationsResponse) *string { return v.Icon }).(pulumi.StringPtrOutput)
}

// Gets a value indicating whether future plans is enabled.
func (o NewNotificationsResponseOutput) IsFuturePlansEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NewNotificationsResponse) *bool { return v.IsFuturePlansEnabled }).(pulumi.BoolPtrOutput)
}

// Gets or sets the notification message id
func (o NewNotificationsResponseOutput) MessageCode() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v NewNotificationsResponse) *float64 { return v.MessageCode }).(pulumi.Float64PtrOutput)
}

// Gets offer id
func (o NewNotificationsResponseOutput) OfferId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NewNotificationsResponse) *string { return v.OfferId }).(pulumi.StringPtrOutput)
}

// Gets or sets removed plans notifications
func (o NewNotificationsResponseOutput) Plans() PlanNotificationDetailsResponseArrayOutput {
	return o.ApplyT(func(v NewNotificationsResponse) []PlanNotificationDetailsResponse { return v.Plans }).(PlanNotificationDetailsResponseArrayOutput)
}

type NewNotificationsResponseArrayOutput struct{ *pulumi.OutputState }

func (NewNotificationsResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NewNotificationsResponse)(nil)).Elem()
}

func (o NewNotificationsResponseArrayOutput) ToNewNotificationsResponseArrayOutput() NewNotificationsResponseArrayOutput {
	return o
}

func (o NewNotificationsResponseArrayOutput) ToNewNotificationsResponseArrayOutputWithContext(ctx context.Context) NewNotificationsResponseArrayOutput {
	return o
}

func (o NewNotificationsResponseArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]NewNotificationsResponse] {
	return pulumix.Output[[]NewNotificationsResponse]{
		OutputState: o.OutputState,
	}
}

func (o NewNotificationsResponseArrayOutput) Index(i pulumi.IntInput) NewNotificationsResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NewNotificationsResponse {
		return vs[0].([]NewNotificationsResponse)[vs[1].(int)]
	}).(NewNotificationsResponseOutput)
}

// Plan notification details
type PlanNotificationDetailsResponse struct {
	// Gets or sets the plan display name
	PlanDisplayName *string `pulumi:"planDisplayName"`
	// Gets or sets the plan id
	PlanId *string `pulumi:"planId"`
}

// Plan notification details
type PlanNotificationDetailsResponseOutput struct{ *pulumi.OutputState }

func (PlanNotificationDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PlanNotificationDetailsResponse)(nil)).Elem()
}

func (o PlanNotificationDetailsResponseOutput) ToPlanNotificationDetailsResponseOutput() PlanNotificationDetailsResponseOutput {
	return o
}

func (o PlanNotificationDetailsResponseOutput) ToPlanNotificationDetailsResponseOutputWithContext(ctx context.Context) PlanNotificationDetailsResponseOutput {
	return o
}

func (o PlanNotificationDetailsResponseOutput) ToOutput(ctx context.Context) pulumix.Output[PlanNotificationDetailsResponse] {
	return pulumix.Output[PlanNotificationDetailsResponse]{
		OutputState: o.OutputState,
	}
}

// Gets or sets the plan display name
func (o PlanNotificationDetailsResponseOutput) PlanDisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PlanNotificationDetailsResponse) *string { return v.PlanDisplayName }).(pulumi.StringPtrOutput)
}

// Gets or sets the plan id
func (o PlanNotificationDetailsResponseOutput) PlanId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PlanNotificationDetailsResponse) *string { return v.PlanId }).(pulumi.StringPtrOutput)
}

type PlanNotificationDetailsResponseArrayOutput struct{ *pulumi.OutputState }

func (PlanNotificationDetailsResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PlanNotificationDetailsResponse)(nil)).Elem()
}

func (o PlanNotificationDetailsResponseArrayOutput) ToPlanNotificationDetailsResponseArrayOutput() PlanNotificationDetailsResponseArrayOutput {
	return o
}

func (o PlanNotificationDetailsResponseArrayOutput) ToPlanNotificationDetailsResponseArrayOutputWithContext(ctx context.Context) PlanNotificationDetailsResponseArrayOutput {
	return o
}

func (o PlanNotificationDetailsResponseArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]PlanNotificationDetailsResponse] {
	return pulumix.Output[[]PlanNotificationDetailsResponse]{
		OutputState: o.OutputState,
	}
}

func (o PlanNotificationDetailsResponseArrayOutput) Index(i pulumi.IntInput) PlanNotificationDetailsResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PlanNotificationDetailsResponse {
		return vs[0].([]PlanNotificationDetailsResponse)[vs[1].(int)]
	}).(PlanNotificationDetailsResponseOutput)
}

// List of stop sell offers and plans notifications.
type StopSellOffersPlansNotificationsListPropertiesResponse struct {
	// The offer display name
	DisplayName string `pulumi:"displayName"`
	// The icon url
	Icon string `pulumi:"icon"`
	// A value indicating whether entire offer is in stop sell or only few of its plans
	IsEntire bool `pulumi:"isEntire"`
	// The notification message code
	MessageCode float64 `pulumi:"messageCode"`
	// The offer id
	OfferId string `pulumi:"offerId"`
	// The list of removed plans notifications
	Plans []PlanNotificationDetailsResponse `pulumi:"plans"`
	// True if the offer has public plans
	PublicContext bool `pulumi:"publicContext"`
	// The subscriptions related to private plans
	SubscriptionsIds []string `pulumi:"subscriptionsIds"`
}

// List of stop sell offers and plans notifications.
type StopSellOffersPlansNotificationsListPropertiesResponseOutput struct{ *pulumi.OutputState }

func (StopSellOffersPlansNotificationsListPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StopSellOffersPlansNotificationsListPropertiesResponse)(nil)).Elem()
}

func (o StopSellOffersPlansNotificationsListPropertiesResponseOutput) ToStopSellOffersPlansNotificationsListPropertiesResponseOutput() StopSellOffersPlansNotificationsListPropertiesResponseOutput {
	return o
}

func (o StopSellOffersPlansNotificationsListPropertiesResponseOutput) ToStopSellOffersPlansNotificationsListPropertiesResponseOutputWithContext(ctx context.Context) StopSellOffersPlansNotificationsListPropertiesResponseOutput {
	return o
}

func (o StopSellOffersPlansNotificationsListPropertiesResponseOutput) ToOutput(ctx context.Context) pulumix.Output[StopSellOffersPlansNotificationsListPropertiesResponse] {
	return pulumix.Output[StopSellOffersPlansNotificationsListPropertiesResponse]{
		OutputState: o.OutputState,
	}
}

// The offer display name
func (o StopSellOffersPlansNotificationsListPropertiesResponseOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v StopSellOffersPlansNotificationsListPropertiesResponse) string { return v.DisplayName }).(pulumi.StringOutput)
}

// The icon url
func (o StopSellOffersPlansNotificationsListPropertiesResponseOutput) Icon() pulumi.StringOutput {
	return o.ApplyT(func(v StopSellOffersPlansNotificationsListPropertiesResponse) string { return v.Icon }).(pulumi.StringOutput)
}

// A value indicating whether entire offer is in stop sell or only few of its plans
func (o StopSellOffersPlansNotificationsListPropertiesResponseOutput) IsEntire() pulumi.BoolOutput {
	return o.ApplyT(func(v StopSellOffersPlansNotificationsListPropertiesResponse) bool { return v.IsEntire }).(pulumi.BoolOutput)
}

// The notification message code
func (o StopSellOffersPlansNotificationsListPropertiesResponseOutput) MessageCode() pulumi.Float64Output {
	return o.ApplyT(func(v StopSellOffersPlansNotificationsListPropertiesResponse) float64 { return v.MessageCode }).(pulumi.Float64Output)
}

// The offer id
func (o StopSellOffersPlansNotificationsListPropertiesResponseOutput) OfferId() pulumi.StringOutput {
	return o.ApplyT(func(v StopSellOffersPlansNotificationsListPropertiesResponse) string { return v.OfferId }).(pulumi.StringOutput)
}

// The list of removed plans notifications
func (o StopSellOffersPlansNotificationsListPropertiesResponseOutput) Plans() PlanNotificationDetailsResponseArrayOutput {
	return o.ApplyT(func(v StopSellOffersPlansNotificationsListPropertiesResponse) []PlanNotificationDetailsResponse {
		return v.Plans
	}).(PlanNotificationDetailsResponseArrayOutput)
}

// True if the offer has public plans
func (o StopSellOffersPlansNotificationsListPropertiesResponseOutput) PublicContext() pulumi.BoolOutput {
	return o.ApplyT(func(v StopSellOffersPlansNotificationsListPropertiesResponse) bool { return v.PublicContext }).(pulumi.BoolOutput)
}

// The subscriptions related to private plans
func (o StopSellOffersPlansNotificationsListPropertiesResponseOutput) SubscriptionsIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v StopSellOffersPlansNotificationsListPropertiesResponse) []string { return v.SubscriptionsIds }).(pulumi.StringArrayOutput)
}

type StopSellOffersPlansNotificationsListPropertiesResponseArrayOutput struct{ *pulumi.OutputState }

func (StopSellOffersPlansNotificationsListPropertiesResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StopSellOffersPlansNotificationsListPropertiesResponse)(nil)).Elem()
}

func (o StopSellOffersPlansNotificationsListPropertiesResponseArrayOutput) ToStopSellOffersPlansNotificationsListPropertiesResponseArrayOutput() StopSellOffersPlansNotificationsListPropertiesResponseArrayOutput {
	return o
}

func (o StopSellOffersPlansNotificationsListPropertiesResponseArrayOutput) ToStopSellOffersPlansNotificationsListPropertiesResponseArrayOutputWithContext(ctx context.Context) StopSellOffersPlansNotificationsListPropertiesResponseArrayOutput {
	return o
}

func (o StopSellOffersPlansNotificationsListPropertiesResponseArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]StopSellOffersPlansNotificationsListPropertiesResponse] {
	return pulumix.Output[[]StopSellOffersPlansNotificationsListPropertiesResponse]{
		OutputState: o.OutputState,
	}
}

func (o StopSellOffersPlansNotificationsListPropertiesResponseArrayOutput) Index(i pulumi.IntInput) StopSellOffersPlansNotificationsListPropertiesResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StopSellOffersPlansNotificationsListPropertiesResponse {
		return vs[0].([]StopSellOffersPlansNotificationsListPropertiesResponse)[vs[1].(int)]
	}).(StopSellOffersPlansNotificationsListPropertiesResponseOutput)
}

func init() {
	pulumi.RegisterOutputType(NewNotificationsResponseOutput{})
	pulumi.RegisterOutputType(NewNotificationsResponseArrayOutput{})
	pulumi.RegisterOutputType(PlanNotificationDetailsResponseOutput{})
	pulumi.RegisterOutputType(PlanNotificationDetailsResponseArrayOutput{})
	pulumi.RegisterOutputType(StopSellOffersPlansNotificationsListPropertiesResponseOutput{})
	pulumi.RegisterOutputType(StopSellOffersPlansNotificationsListPropertiesResponseArrayOutput{})
}
