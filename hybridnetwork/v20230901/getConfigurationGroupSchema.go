// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20230901

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Gets information about the specified configuration group schema.
func LookupConfigurationGroupSchema(ctx *pulumi.Context, args *LookupConfigurationGroupSchemaArgs, opts ...pulumi.InvokeOption) (*LookupConfigurationGroupSchemaResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv LookupConfigurationGroupSchemaResult
	err := ctx.Invoke("azure-native:hybridnetwork/v20230901:getConfigurationGroupSchema", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupConfigurationGroupSchemaArgs struct {
	// The name of the configuration group schema.
	ConfigurationGroupSchemaName string `pulumi:"configurationGroupSchemaName"`
	// The name of the publisher.
	PublisherName string `pulumi:"publisherName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// Configuration group schema resource.
type LookupConfigurationGroupSchemaResult struct {
	// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	Id string `pulumi:"id"`
	// The geo-location where the resource lives
	Location string `pulumi:"location"`
	// The name of the resource
	Name string `pulumi:"name"`
	// Configuration group schema properties.
	Properties ConfigurationGroupSchemaPropertiesFormatResponse `pulumi:"properties"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponse `pulumi:"systemData"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type string `pulumi:"type"`
}

func LookupConfigurationGroupSchemaOutput(ctx *pulumi.Context, args LookupConfigurationGroupSchemaOutputArgs, opts ...pulumi.InvokeOption) LookupConfigurationGroupSchemaResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupConfigurationGroupSchemaResult, error) {
			args := v.(LookupConfigurationGroupSchemaArgs)
			r, err := LookupConfigurationGroupSchema(ctx, &args, opts...)
			var s LookupConfigurationGroupSchemaResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupConfigurationGroupSchemaResultOutput)
}

type LookupConfigurationGroupSchemaOutputArgs struct {
	// The name of the configuration group schema.
	ConfigurationGroupSchemaName pulumi.StringInput `pulumi:"configurationGroupSchemaName"`
	// The name of the publisher.
	PublisherName pulumi.StringInput `pulumi:"publisherName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
}

func (LookupConfigurationGroupSchemaOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupConfigurationGroupSchemaArgs)(nil)).Elem()
}

// Configuration group schema resource.
type LookupConfigurationGroupSchemaResultOutput struct{ *pulumi.OutputState }

func (LookupConfigurationGroupSchemaResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupConfigurationGroupSchemaResult)(nil)).Elem()
}

func (o LookupConfigurationGroupSchemaResultOutput) ToLookupConfigurationGroupSchemaResultOutput() LookupConfigurationGroupSchemaResultOutput {
	return o
}

func (o LookupConfigurationGroupSchemaResultOutput) ToLookupConfigurationGroupSchemaResultOutputWithContext(ctx context.Context) LookupConfigurationGroupSchemaResultOutput {
	return o
}

// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
func (o LookupConfigurationGroupSchemaResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConfigurationGroupSchemaResult) string { return v.Id }).(pulumi.StringOutput)
}

// The geo-location where the resource lives
func (o LookupConfigurationGroupSchemaResultOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConfigurationGroupSchemaResult) string { return v.Location }).(pulumi.StringOutput)
}

// The name of the resource
func (o LookupConfigurationGroupSchemaResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConfigurationGroupSchemaResult) string { return v.Name }).(pulumi.StringOutput)
}

// Configuration group schema properties.
func (o LookupConfigurationGroupSchemaResultOutput) Properties() ConfigurationGroupSchemaPropertiesFormatResponseOutput {
	return o.ApplyT(func(v LookupConfigurationGroupSchemaResult) ConfigurationGroupSchemaPropertiesFormatResponse {
		return v.Properties
	}).(ConfigurationGroupSchemaPropertiesFormatResponseOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o LookupConfigurationGroupSchemaResultOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v LookupConfigurationGroupSchemaResult) SystemDataResponse { return v.SystemData }).(SystemDataResponseOutput)
}

// Resource tags.
func (o LookupConfigurationGroupSchemaResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupConfigurationGroupSchemaResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o LookupConfigurationGroupSchemaResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConfigurationGroupSchemaResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupConfigurationGroupSchemaResultOutput{})
}
