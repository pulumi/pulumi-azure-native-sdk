// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20230901

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The application enablement.
type ApplicationEnablement string

const (
	ApplicationEnablementUnknown  = ApplicationEnablement("Unknown")
	ApplicationEnablementEnabled  = ApplicationEnablement("Enabled")
	ApplicationEnablementDisabled = ApplicationEnablement("Disabled")
)

func (ApplicationEnablement) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationEnablement)(nil)).Elem()
}

func (e ApplicationEnablement) ToApplicationEnablementOutput() ApplicationEnablementOutput {
	return pulumi.ToOutput(e).(ApplicationEnablementOutput)
}

func (e ApplicationEnablement) ToApplicationEnablementOutputWithContext(ctx context.Context) ApplicationEnablementOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ApplicationEnablementOutput)
}

func (e ApplicationEnablement) ToApplicationEnablementPtrOutput() ApplicationEnablementPtrOutput {
	return e.ToApplicationEnablementPtrOutputWithContext(context.Background())
}

func (e ApplicationEnablement) ToApplicationEnablementPtrOutputWithContext(ctx context.Context) ApplicationEnablementPtrOutput {
	return ApplicationEnablement(e).ToApplicationEnablementOutputWithContext(ctx).ToApplicationEnablementPtrOutputWithContext(ctx)
}

func (e ApplicationEnablement) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ApplicationEnablement) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ApplicationEnablement) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ApplicationEnablement) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ApplicationEnablementOutput struct{ *pulumi.OutputState }

func (ApplicationEnablementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationEnablement)(nil)).Elem()
}

func (o ApplicationEnablementOutput) ToApplicationEnablementOutput() ApplicationEnablementOutput {
	return o
}

func (o ApplicationEnablementOutput) ToApplicationEnablementOutputWithContext(ctx context.Context) ApplicationEnablementOutput {
	return o
}

func (o ApplicationEnablementOutput) ToApplicationEnablementPtrOutput() ApplicationEnablementPtrOutput {
	return o.ToApplicationEnablementPtrOutputWithContext(context.Background())
}

func (o ApplicationEnablementOutput) ToApplicationEnablementPtrOutputWithContext(ctx context.Context) ApplicationEnablementPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApplicationEnablement) *ApplicationEnablement {
		return &v
	}).(ApplicationEnablementPtrOutput)
}

func (o ApplicationEnablementOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ApplicationEnablementOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ApplicationEnablement) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ApplicationEnablementOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ApplicationEnablementOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ApplicationEnablement) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ApplicationEnablementPtrOutput struct{ *pulumi.OutputState }

func (ApplicationEnablementPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationEnablement)(nil)).Elem()
}

func (o ApplicationEnablementPtrOutput) ToApplicationEnablementPtrOutput() ApplicationEnablementPtrOutput {
	return o
}

func (o ApplicationEnablementPtrOutput) ToApplicationEnablementPtrOutputWithContext(ctx context.Context) ApplicationEnablementPtrOutput {
	return o
}

func (o ApplicationEnablementPtrOutput) Elem() ApplicationEnablementOutput {
	return o.ApplyT(func(v *ApplicationEnablement) ApplicationEnablement {
		if v != nil {
			return *v
		}
		var ret ApplicationEnablement
		return ret
	}).(ApplicationEnablementOutput)
}

func (o ApplicationEnablementPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ApplicationEnablementPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ApplicationEnablement) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ApplicationEnablementInput is an input type that accepts values of the ApplicationEnablement enum
// A concrete instance of `ApplicationEnablementInput` can be one of the following:
//
//	ApplicationEnablementUnknown
//	ApplicationEnablementEnabled
//	ApplicationEnablementDisabled
type ApplicationEnablementInput interface {
	pulumi.Input

	ToApplicationEnablementOutput() ApplicationEnablementOutput
	ToApplicationEnablementOutputWithContext(context.Context) ApplicationEnablementOutput
}

var applicationEnablementPtrType = reflect.TypeOf((**ApplicationEnablement)(nil)).Elem()

type ApplicationEnablementPtrInput interface {
	pulumi.Input

	ToApplicationEnablementPtrOutput() ApplicationEnablementPtrOutput
	ToApplicationEnablementPtrOutputWithContext(context.Context) ApplicationEnablementPtrOutput
}

type applicationEnablementPtr string

func ApplicationEnablementPtr(v string) ApplicationEnablementPtrInput {
	return (*applicationEnablementPtr)(&v)
}

func (*applicationEnablementPtr) ElementType() reflect.Type {
	return applicationEnablementPtrType
}

func (in *applicationEnablementPtr) ToApplicationEnablementPtrOutput() ApplicationEnablementPtrOutput {
	return pulumi.ToOutput(in).(ApplicationEnablementPtrOutput)
}

func (in *applicationEnablementPtr) ToApplicationEnablementPtrOutputWithContext(ctx context.Context) ApplicationEnablementPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ApplicationEnablementPtrOutput)
}

// The replication strategy.
type ArtifactReplicationStrategy string

const (
	ArtifactReplicationStrategyUnknown           = ArtifactReplicationStrategy("Unknown")
	ArtifactReplicationStrategySingleReplication = ArtifactReplicationStrategy("SingleReplication")
)

func (ArtifactReplicationStrategy) ElementType() reflect.Type {
	return reflect.TypeOf((*ArtifactReplicationStrategy)(nil)).Elem()
}

func (e ArtifactReplicationStrategy) ToArtifactReplicationStrategyOutput() ArtifactReplicationStrategyOutput {
	return pulumi.ToOutput(e).(ArtifactReplicationStrategyOutput)
}

func (e ArtifactReplicationStrategy) ToArtifactReplicationStrategyOutputWithContext(ctx context.Context) ArtifactReplicationStrategyOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ArtifactReplicationStrategyOutput)
}

func (e ArtifactReplicationStrategy) ToArtifactReplicationStrategyPtrOutput() ArtifactReplicationStrategyPtrOutput {
	return e.ToArtifactReplicationStrategyPtrOutputWithContext(context.Background())
}

func (e ArtifactReplicationStrategy) ToArtifactReplicationStrategyPtrOutputWithContext(ctx context.Context) ArtifactReplicationStrategyPtrOutput {
	return ArtifactReplicationStrategy(e).ToArtifactReplicationStrategyOutputWithContext(ctx).ToArtifactReplicationStrategyPtrOutputWithContext(ctx)
}

func (e ArtifactReplicationStrategy) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ArtifactReplicationStrategy) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ArtifactReplicationStrategy) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ArtifactReplicationStrategy) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ArtifactReplicationStrategyOutput struct{ *pulumi.OutputState }

func (ArtifactReplicationStrategyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ArtifactReplicationStrategy)(nil)).Elem()
}

func (o ArtifactReplicationStrategyOutput) ToArtifactReplicationStrategyOutput() ArtifactReplicationStrategyOutput {
	return o
}

func (o ArtifactReplicationStrategyOutput) ToArtifactReplicationStrategyOutputWithContext(ctx context.Context) ArtifactReplicationStrategyOutput {
	return o
}

func (o ArtifactReplicationStrategyOutput) ToArtifactReplicationStrategyPtrOutput() ArtifactReplicationStrategyPtrOutput {
	return o.ToArtifactReplicationStrategyPtrOutputWithContext(context.Background())
}

func (o ArtifactReplicationStrategyOutput) ToArtifactReplicationStrategyPtrOutputWithContext(ctx context.Context) ArtifactReplicationStrategyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ArtifactReplicationStrategy) *ArtifactReplicationStrategy {
		return &v
	}).(ArtifactReplicationStrategyPtrOutput)
}

func (o ArtifactReplicationStrategyOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ArtifactReplicationStrategyOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ArtifactReplicationStrategy) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ArtifactReplicationStrategyOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ArtifactReplicationStrategyOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ArtifactReplicationStrategy) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ArtifactReplicationStrategyPtrOutput struct{ *pulumi.OutputState }

func (ArtifactReplicationStrategyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ArtifactReplicationStrategy)(nil)).Elem()
}

func (o ArtifactReplicationStrategyPtrOutput) ToArtifactReplicationStrategyPtrOutput() ArtifactReplicationStrategyPtrOutput {
	return o
}

func (o ArtifactReplicationStrategyPtrOutput) ToArtifactReplicationStrategyPtrOutputWithContext(ctx context.Context) ArtifactReplicationStrategyPtrOutput {
	return o
}

func (o ArtifactReplicationStrategyPtrOutput) Elem() ArtifactReplicationStrategyOutput {
	return o.ApplyT(func(v *ArtifactReplicationStrategy) ArtifactReplicationStrategy {
		if v != nil {
			return *v
		}
		var ret ArtifactReplicationStrategy
		return ret
	}).(ArtifactReplicationStrategyOutput)
}

func (o ArtifactReplicationStrategyPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ArtifactReplicationStrategyPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ArtifactReplicationStrategy) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ArtifactReplicationStrategyInput is an input type that accepts values of the ArtifactReplicationStrategy enum
// A concrete instance of `ArtifactReplicationStrategyInput` can be one of the following:
//
//	ArtifactReplicationStrategyUnknown
//	ArtifactReplicationStrategySingleReplication
type ArtifactReplicationStrategyInput interface {
	pulumi.Input

	ToArtifactReplicationStrategyOutput() ArtifactReplicationStrategyOutput
	ToArtifactReplicationStrategyOutputWithContext(context.Context) ArtifactReplicationStrategyOutput
}

var artifactReplicationStrategyPtrType = reflect.TypeOf((**ArtifactReplicationStrategy)(nil)).Elem()

type ArtifactReplicationStrategyPtrInput interface {
	pulumi.Input

	ToArtifactReplicationStrategyPtrOutput() ArtifactReplicationStrategyPtrOutput
	ToArtifactReplicationStrategyPtrOutputWithContext(context.Context) ArtifactReplicationStrategyPtrOutput
}

type artifactReplicationStrategyPtr string

func ArtifactReplicationStrategyPtr(v string) ArtifactReplicationStrategyPtrInput {
	return (*artifactReplicationStrategyPtr)(&v)
}

func (*artifactReplicationStrategyPtr) ElementType() reflect.Type {
	return artifactReplicationStrategyPtrType
}

func (in *artifactReplicationStrategyPtr) ToArtifactReplicationStrategyPtrOutput() ArtifactReplicationStrategyPtrOutput {
	return pulumi.ToOutput(in).(ArtifactReplicationStrategyPtrOutput)
}

func (in *artifactReplicationStrategyPtr) ToArtifactReplicationStrategyPtrOutputWithContext(ctx context.Context) ArtifactReplicationStrategyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ArtifactReplicationStrategyPtrOutput)
}

// The artifact store type.
type ArtifactStoreType string

const (
	ArtifactStoreTypeUnknown                = ArtifactStoreType("Unknown")
	ArtifactStoreTypeAzureContainerRegistry = ArtifactStoreType("AzureContainerRegistry")
	ArtifactStoreTypeAzureStorageAccount    = ArtifactStoreType("AzureStorageAccount")
)

func (ArtifactStoreType) ElementType() reflect.Type {
	return reflect.TypeOf((*ArtifactStoreType)(nil)).Elem()
}

func (e ArtifactStoreType) ToArtifactStoreTypeOutput() ArtifactStoreTypeOutput {
	return pulumi.ToOutput(e).(ArtifactStoreTypeOutput)
}

func (e ArtifactStoreType) ToArtifactStoreTypeOutputWithContext(ctx context.Context) ArtifactStoreTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ArtifactStoreTypeOutput)
}

func (e ArtifactStoreType) ToArtifactStoreTypePtrOutput() ArtifactStoreTypePtrOutput {
	return e.ToArtifactStoreTypePtrOutputWithContext(context.Background())
}

func (e ArtifactStoreType) ToArtifactStoreTypePtrOutputWithContext(ctx context.Context) ArtifactStoreTypePtrOutput {
	return ArtifactStoreType(e).ToArtifactStoreTypeOutputWithContext(ctx).ToArtifactStoreTypePtrOutputWithContext(ctx)
}

func (e ArtifactStoreType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ArtifactStoreType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ArtifactStoreType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ArtifactStoreType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ArtifactStoreTypeOutput struct{ *pulumi.OutputState }

func (ArtifactStoreTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ArtifactStoreType)(nil)).Elem()
}

func (o ArtifactStoreTypeOutput) ToArtifactStoreTypeOutput() ArtifactStoreTypeOutput {
	return o
}

func (o ArtifactStoreTypeOutput) ToArtifactStoreTypeOutputWithContext(ctx context.Context) ArtifactStoreTypeOutput {
	return o
}

func (o ArtifactStoreTypeOutput) ToArtifactStoreTypePtrOutput() ArtifactStoreTypePtrOutput {
	return o.ToArtifactStoreTypePtrOutputWithContext(context.Background())
}

func (o ArtifactStoreTypeOutput) ToArtifactStoreTypePtrOutputWithContext(ctx context.Context) ArtifactStoreTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ArtifactStoreType) *ArtifactStoreType {
		return &v
	}).(ArtifactStoreTypePtrOutput)
}

func (o ArtifactStoreTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ArtifactStoreTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ArtifactStoreType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ArtifactStoreTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ArtifactStoreTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ArtifactStoreType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ArtifactStoreTypePtrOutput struct{ *pulumi.OutputState }

func (ArtifactStoreTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ArtifactStoreType)(nil)).Elem()
}

func (o ArtifactStoreTypePtrOutput) ToArtifactStoreTypePtrOutput() ArtifactStoreTypePtrOutput {
	return o
}

func (o ArtifactStoreTypePtrOutput) ToArtifactStoreTypePtrOutputWithContext(ctx context.Context) ArtifactStoreTypePtrOutput {
	return o
}

func (o ArtifactStoreTypePtrOutput) Elem() ArtifactStoreTypeOutput {
	return o.ApplyT(func(v *ArtifactStoreType) ArtifactStoreType {
		if v != nil {
			return *v
		}
		var ret ArtifactStoreType
		return ret
	}).(ArtifactStoreTypeOutput)
}

func (o ArtifactStoreTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ArtifactStoreTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ArtifactStoreType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ArtifactStoreTypeInput is an input type that accepts values of the ArtifactStoreType enum
// A concrete instance of `ArtifactStoreTypeInput` can be one of the following:
//
//	ArtifactStoreTypeUnknown
//	ArtifactStoreTypeAzureContainerRegistry
//	ArtifactStoreTypeAzureStorageAccount
type ArtifactStoreTypeInput interface {
	pulumi.Input

	ToArtifactStoreTypeOutput() ArtifactStoreTypeOutput
	ToArtifactStoreTypeOutputWithContext(context.Context) ArtifactStoreTypeOutput
}

var artifactStoreTypePtrType = reflect.TypeOf((**ArtifactStoreType)(nil)).Elem()

type ArtifactStoreTypePtrInput interface {
	pulumi.Input

	ToArtifactStoreTypePtrOutput() ArtifactStoreTypePtrOutput
	ToArtifactStoreTypePtrOutputWithContext(context.Context) ArtifactStoreTypePtrOutput
}

type artifactStoreTypePtr string

func ArtifactStoreTypePtr(v string) ArtifactStoreTypePtrInput {
	return (*artifactStoreTypePtr)(&v)
}

func (*artifactStoreTypePtr) ElementType() reflect.Type {
	return artifactStoreTypePtrType
}

func (in *artifactStoreTypePtr) ToArtifactStoreTypePtrOutput() ArtifactStoreTypePtrOutput {
	return pulumi.ToOutput(in).(ArtifactStoreTypePtrOutput)
}

func (in *artifactStoreTypePtr) ToArtifactStoreTypePtrOutputWithContext(ctx context.Context) ArtifactStoreTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ArtifactStoreTypePtrOutput)
}

// The artifact type.
type ArtifactType string

const (
	ArtifactTypeUnknown      = ArtifactType("Unknown")
	ArtifactTypeOCIArtifact  = ArtifactType("OCIArtifact")
	ArtifactTypeVhdImageFile = ArtifactType("VhdImageFile")
	ArtifactTypeArmTemplate  = ArtifactType("ArmTemplate")
	ArtifactTypeImageFile    = ArtifactType("ImageFile")
)

func (ArtifactType) ElementType() reflect.Type {
	return reflect.TypeOf((*ArtifactType)(nil)).Elem()
}

func (e ArtifactType) ToArtifactTypeOutput() ArtifactTypeOutput {
	return pulumi.ToOutput(e).(ArtifactTypeOutput)
}

func (e ArtifactType) ToArtifactTypeOutputWithContext(ctx context.Context) ArtifactTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ArtifactTypeOutput)
}

func (e ArtifactType) ToArtifactTypePtrOutput() ArtifactTypePtrOutput {
	return e.ToArtifactTypePtrOutputWithContext(context.Background())
}

func (e ArtifactType) ToArtifactTypePtrOutputWithContext(ctx context.Context) ArtifactTypePtrOutput {
	return ArtifactType(e).ToArtifactTypeOutputWithContext(ctx).ToArtifactTypePtrOutputWithContext(ctx)
}

func (e ArtifactType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ArtifactType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ArtifactType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ArtifactType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ArtifactTypeOutput struct{ *pulumi.OutputState }

func (ArtifactTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ArtifactType)(nil)).Elem()
}

func (o ArtifactTypeOutput) ToArtifactTypeOutput() ArtifactTypeOutput {
	return o
}

func (o ArtifactTypeOutput) ToArtifactTypeOutputWithContext(ctx context.Context) ArtifactTypeOutput {
	return o
}

func (o ArtifactTypeOutput) ToArtifactTypePtrOutput() ArtifactTypePtrOutput {
	return o.ToArtifactTypePtrOutputWithContext(context.Background())
}

func (o ArtifactTypeOutput) ToArtifactTypePtrOutputWithContext(ctx context.Context) ArtifactTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ArtifactType) *ArtifactType {
		return &v
	}).(ArtifactTypePtrOutput)
}

func (o ArtifactTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ArtifactTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ArtifactType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ArtifactTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ArtifactTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ArtifactType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ArtifactTypePtrOutput struct{ *pulumi.OutputState }

func (ArtifactTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ArtifactType)(nil)).Elem()
}

func (o ArtifactTypePtrOutput) ToArtifactTypePtrOutput() ArtifactTypePtrOutput {
	return o
}

func (o ArtifactTypePtrOutput) ToArtifactTypePtrOutputWithContext(ctx context.Context) ArtifactTypePtrOutput {
	return o
}

func (o ArtifactTypePtrOutput) Elem() ArtifactTypeOutput {
	return o.ApplyT(func(v *ArtifactType) ArtifactType {
		if v != nil {
			return *v
		}
		var ret ArtifactType
		return ret
	}).(ArtifactTypeOutput)
}

func (o ArtifactTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ArtifactTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ArtifactType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ArtifactTypeInput is an input type that accepts values of the ArtifactType enum
// A concrete instance of `ArtifactTypeInput` can be one of the following:
//
//	ArtifactTypeUnknown
//	ArtifactTypeOCIArtifact
//	ArtifactTypeVhdImageFile
//	ArtifactTypeArmTemplate
//	ArtifactTypeImageFile
type ArtifactTypeInput interface {
	pulumi.Input

	ToArtifactTypeOutput() ArtifactTypeOutput
	ToArtifactTypeOutputWithContext(context.Context) ArtifactTypeOutput
}

var artifactTypePtrType = reflect.TypeOf((**ArtifactType)(nil)).Elem()

type ArtifactTypePtrInput interface {
	pulumi.Input

	ToArtifactTypePtrOutput() ArtifactTypePtrOutput
	ToArtifactTypePtrOutputWithContext(context.Context) ArtifactTypePtrOutput
}

type artifactTypePtr string

func ArtifactTypePtr(v string) ArtifactTypePtrInput {
	return (*artifactTypePtr)(&v)
}

func (*artifactTypePtr) ElementType() reflect.Type {
	return artifactTypePtrType
}

func (in *artifactTypePtr) ToArtifactTypePtrOutput() ArtifactTypePtrOutput {
	return pulumi.ToOutput(in).(ArtifactTypePtrOutput)
}

func (in *artifactTypePtr) ToArtifactTypePtrOutputWithContext(ctx context.Context) ArtifactTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ArtifactTypePtrOutput)
}

// The artifact type.
type AzureArcKubernetesArtifactType string

const (
	AzureArcKubernetesArtifactTypeUnknown     = AzureArcKubernetesArtifactType("Unknown")
	AzureArcKubernetesArtifactTypeHelmPackage = AzureArcKubernetesArtifactType("HelmPackage")
)

// The artifact type.
type AzureCoreArtifactType string

const (
	AzureCoreArtifactTypeUnknown      = AzureCoreArtifactType("Unknown")
	AzureCoreArtifactTypeVhdImageFile = AzureCoreArtifactType("VhdImageFile")
	AzureCoreArtifactTypeArmTemplate  = AzureCoreArtifactType("ArmTemplate")
)

// The artifact type.
type AzureOperatorNexusArtifactType string

const (
	AzureOperatorNexusArtifactTypeUnknown     = AzureOperatorNexusArtifactType("Unknown")
	AzureOperatorNexusArtifactTypeImageFile   = AzureOperatorNexusArtifactType("ImageFile")
	AzureOperatorNexusArtifactTypeArmTemplate = AzureOperatorNexusArtifactType("ArmTemplate")
)

// The value which indicates if configuration values are secrets
type ConfigurationGroupValueConfigurationType string

const (
	ConfigurationGroupValueConfigurationTypeUnknown = ConfigurationGroupValueConfigurationType("Unknown")
	ConfigurationGroupValueConfigurationTypeSecret  = ConfigurationGroupValueConfigurationType("Secret")
	ConfigurationGroupValueConfigurationTypeOpen    = ConfigurationGroupValueConfigurationType("Open")
)

// The network function type.
type ContainerizedNetworkFunctionNFVIType string

const (
	ContainerizedNetworkFunctionNFVITypeUnknown            = ContainerizedNetworkFunctionNFVIType("Unknown")
	ContainerizedNetworkFunctionNFVITypeAzureArcKubernetes = ContainerizedNetworkFunctionNFVIType("AzureArcKubernetes")
)

// The resource reference arm id type.
type IdType string

const (
	IdTypeUnknown = IdType("Unknown")
	IdTypeOpen    = IdType("Open")
	IdTypeSecret  = IdType("Secret")
)

// Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
type ManagedServiceIdentityType string

const (
	ManagedServiceIdentityTypeNone                         = ManagedServiceIdentityType("None")
	ManagedServiceIdentityTypeSystemAssigned               = ManagedServiceIdentityType("SystemAssigned")
	ManagedServiceIdentityTypeUserAssigned                 = ManagedServiceIdentityType("UserAssigned")
	ManagedServiceIdentityType_SystemAssigned_UserAssigned = ManagedServiceIdentityType("SystemAssigned,UserAssigned")
)

func (ManagedServiceIdentityType) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedServiceIdentityType)(nil)).Elem()
}

func (e ManagedServiceIdentityType) ToManagedServiceIdentityTypeOutput() ManagedServiceIdentityTypeOutput {
	return pulumi.ToOutput(e).(ManagedServiceIdentityTypeOutput)
}

func (e ManagedServiceIdentityType) ToManagedServiceIdentityTypeOutputWithContext(ctx context.Context) ManagedServiceIdentityTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ManagedServiceIdentityTypeOutput)
}

func (e ManagedServiceIdentityType) ToManagedServiceIdentityTypePtrOutput() ManagedServiceIdentityTypePtrOutput {
	return e.ToManagedServiceIdentityTypePtrOutputWithContext(context.Background())
}

func (e ManagedServiceIdentityType) ToManagedServiceIdentityTypePtrOutputWithContext(ctx context.Context) ManagedServiceIdentityTypePtrOutput {
	return ManagedServiceIdentityType(e).ToManagedServiceIdentityTypeOutputWithContext(ctx).ToManagedServiceIdentityTypePtrOutputWithContext(ctx)
}

func (e ManagedServiceIdentityType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ManagedServiceIdentityType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ManagedServiceIdentityType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ManagedServiceIdentityType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ManagedServiceIdentityTypeOutput struct{ *pulumi.OutputState }

func (ManagedServiceIdentityTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedServiceIdentityType)(nil)).Elem()
}

func (o ManagedServiceIdentityTypeOutput) ToManagedServiceIdentityTypeOutput() ManagedServiceIdentityTypeOutput {
	return o
}

func (o ManagedServiceIdentityTypeOutput) ToManagedServiceIdentityTypeOutputWithContext(ctx context.Context) ManagedServiceIdentityTypeOutput {
	return o
}

func (o ManagedServiceIdentityTypeOutput) ToManagedServiceIdentityTypePtrOutput() ManagedServiceIdentityTypePtrOutput {
	return o.ToManagedServiceIdentityTypePtrOutputWithContext(context.Background())
}

func (o ManagedServiceIdentityTypeOutput) ToManagedServiceIdentityTypePtrOutputWithContext(ctx context.Context) ManagedServiceIdentityTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ManagedServiceIdentityType) *ManagedServiceIdentityType {
		return &v
	}).(ManagedServiceIdentityTypePtrOutput)
}

func (o ManagedServiceIdentityTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ManagedServiceIdentityTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ManagedServiceIdentityType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ManagedServiceIdentityTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ManagedServiceIdentityTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ManagedServiceIdentityType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ManagedServiceIdentityTypePtrOutput struct{ *pulumi.OutputState }

func (ManagedServiceIdentityTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedServiceIdentityType)(nil)).Elem()
}

func (o ManagedServiceIdentityTypePtrOutput) ToManagedServiceIdentityTypePtrOutput() ManagedServiceIdentityTypePtrOutput {
	return o
}

func (o ManagedServiceIdentityTypePtrOutput) ToManagedServiceIdentityTypePtrOutputWithContext(ctx context.Context) ManagedServiceIdentityTypePtrOutput {
	return o
}

func (o ManagedServiceIdentityTypePtrOutput) Elem() ManagedServiceIdentityTypeOutput {
	return o.ApplyT(func(v *ManagedServiceIdentityType) ManagedServiceIdentityType {
		if v != nil {
			return *v
		}
		var ret ManagedServiceIdentityType
		return ret
	}).(ManagedServiceIdentityTypeOutput)
}

func (o ManagedServiceIdentityTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ManagedServiceIdentityTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ManagedServiceIdentityType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ManagedServiceIdentityTypeInput is an input type that accepts values of the ManagedServiceIdentityType enum
// A concrete instance of `ManagedServiceIdentityTypeInput` can be one of the following:
//
//	ManagedServiceIdentityTypeNone
//	ManagedServiceIdentityTypeSystemAssigned
//	ManagedServiceIdentityTypeUserAssigned
//	ManagedServiceIdentityType_SystemAssigned_UserAssigned
type ManagedServiceIdentityTypeInput interface {
	pulumi.Input

	ToManagedServiceIdentityTypeOutput() ManagedServiceIdentityTypeOutput
	ToManagedServiceIdentityTypeOutputWithContext(context.Context) ManagedServiceIdentityTypeOutput
}

var managedServiceIdentityTypePtrType = reflect.TypeOf((**ManagedServiceIdentityType)(nil)).Elem()

type ManagedServiceIdentityTypePtrInput interface {
	pulumi.Input

	ToManagedServiceIdentityTypePtrOutput() ManagedServiceIdentityTypePtrOutput
	ToManagedServiceIdentityTypePtrOutputWithContext(context.Context) ManagedServiceIdentityTypePtrOutput
}

type managedServiceIdentityTypePtr string

func ManagedServiceIdentityTypePtr(v string) ManagedServiceIdentityTypePtrInput {
	return (*managedServiceIdentityTypePtr)(&v)
}

func (*managedServiceIdentityTypePtr) ElementType() reflect.Type {
	return managedServiceIdentityTypePtrType
}

func (in *managedServiceIdentityTypePtr) ToManagedServiceIdentityTypePtrOutput() ManagedServiceIdentityTypePtrOutput {
	return pulumi.ToOutput(in).(ManagedServiceIdentityTypePtrOutput)
}

func (in *managedServiceIdentityTypePtr) ToManagedServiceIdentityTypePtrOutputWithContext(ctx context.Context) ManagedServiceIdentityTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ManagedServiceIdentityTypePtrOutput)
}

// The NFVI type.
type NFVIType string

const (
	NFVITypeUnknown            = NFVIType("Unknown")
	NFVITypeAzureArcKubernetes = NFVIType("AzureArcKubernetes")
	NFVITypeAzureCore          = NFVIType("AzureCore")
	NFVITypeAzureOperatorNexus = NFVIType("AzureOperatorNexus")
)

func (NFVIType) ElementType() reflect.Type {
	return reflect.TypeOf((*NFVIType)(nil)).Elem()
}

func (e NFVIType) ToNFVITypeOutput() NFVITypeOutput {
	return pulumi.ToOutput(e).(NFVITypeOutput)
}

func (e NFVIType) ToNFVITypeOutputWithContext(ctx context.Context) NFVITypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(NFVITypeOutput)
}

func (e NFVIType) ToNFVITypePtrOutput() NFVITypePtrOutput {
	return e.ToNFVITypePtrOutputWithContext(context.Background())
}

func (e NFVIType) ToNFVITypePtrOutputWithContext(ctx context.Context) NFVITypePtrOutput {
	return NFVIType(e).ToNFVITypeOutputWithContext(ctx).ToNFVITypePtrOutputWithContext(ctx)
}

func (e NFVIType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e NFVIType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e NFVIType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e NFVIType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type NFVITypeOutput struct{ *pulumi.OutputState }

func (NFVITypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NFVIType)(nil)).Elem()
}

func (o NFVITypeOutput) ToNFVITypeOutput() NFVITypeOutput {
	return o
}

func (o NFVITypeOutput) ToNFVITypeOutputWithContext(ctx context.Context) NFVITypeOutput {
	return o
}

func (o NFVITypeOutput) ToNFVITypePtrOutput() NFVITypePtrOutput {
	return o.ToNFVITypePtrOutputWithContext(context.Background())
}

func (o NFVITypeOutput) ToNFVITypePtrOutputWithContext(ctx context.Context) NFVITypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NFVIType) *NFVIType {
		return &v
	}).(NFVITypePtrOutput)
}

func (o NFVITypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o NFVITypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e NFVIType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o NFVITypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o NFVITypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e NFVIType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type NFVITypePtrOutput struct{ *pulumi.OutputState }

func (NFVITypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NFVIType)(nil)).Elem()
}

func (o NFVITypePtrOutput) ToNFVITypePtrOutput() NFVITypePtrOutput {
	return o
}

func (o NFVITypePtrOutput) ToNFVITypePtrOutputWithContext(ctx context.Context) NFVITypePtrOutput {
	return o
}

func (o NFVITypePtrOutput) Elem() NFVITypeOutput {
	return o.ApplyT(func(v *NFVIType) NFVIType {
		if v != nil {
			return *v
		}
		var ret NFVIType
		return ret
	}).(NFVITypeOutput)
}

func (o NFVITypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o NFVITypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *NFVIType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// NFVITypeInput is an input type that accepts values of the NFVIType enum
// A concrete instance of `NFVITypeInput` can be one of the following:
//
//	NFVITypeUnknown
//	NFVITypeAzureArcKubernetes
//	NFVITypeAzureCore
//	NFVITypeAzureOperatorNexus
type NFVITypeInput interface {
	pulumi.Input

	ToNFVITypeOutput() NFVITypeOutput
	ToNFVITypeOutputWithContext(context.Context) NFVITypeOutput
}

var nfvitypePtrType = reflect.TypeOf((**NFVIType)(nil)).Elem()

type NFVITypePtrInput interface {
	pulumi.Input

	ToNFVITypePtrOutput() NFVITypePtrOutput
	ToNFVITypePtrOutputWithContext(context.Context) NFVITypePtrOutput
}

type nfvitypePtr string

func NFVITypePtr(v string) NFVITypePtrInput {
	return (*nfvitypePtr)(&v)
}

func (*nfvitypePtr) ElementType() reflect.Type {
	return nfvitypePtrType
}

func (in *nfvitypePtr) ToNFVITypePtrOutput() NFVITypePtrOutput {
	return pulumi.ToOutput(in).(NFVITypePtrOutput)
}

func (in *nfvitypePtr) ToNFVITypePtrOutputWithContext(ctx context.Context) NFVITypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(NFVITypePtrOutput)
}

// The value which indicates if NF  values are secrets
type NetworkFunctionConfigurationType string

const (
	NetworkFunctionConfigurationTypeUnknown = NetworkFunctionConfigurationType("Unknown")
	NetworkFunctionConfigurationTypeSecret  = NetworkFunctionConfigurationType("Secret")
	NetworkFunctionConfigurationTypeOpen    = NetworkFunctionConfigurationType("Open")
)

// The network function type.
type NetworkFunctionType string

const (
	NetworkFunctionTypeUnknown                      = NetworkFunctionType("Unknown")
	NetworkFunctionTypeVirtualNetworkFunction       = NetworkFunctionType("VirtualNetworkFunction")
	NetworkFunctionTypeContainerizedNetworkFunction = NetworkFunctionType("ContainerizedNetworkFunction")
)

// The publisher scope.
type PublisherScope string

const (
	PublisherScopeUnknown = PublisherScope("Unknown")
	PublisherScopePrivate = PublisherScope("Private")
)

func (PublisherScope) ElementType() reflect.Type {
	return reflect.TypeOf((*PublisherScope)(nil)).Elem()
}

func (e PublisherScope) ToPublisherScopeOutput() PublisherScopeOutput {
	return pulumi.ToOutput(e).(PublisherScopeOutput)
}

func (e PublisherScope) ToPublisherScopeOutputWithContext(ctx context.Context) PublisherScopeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(PublisherScopeOutput)
}

func (e PublisherScope) ToPublisherScopePtrOutput() PublisherScopePtrOutput {
	return e.ToPublisherScopePtrOutputWithContext(context.Background())
}

func (e PublisherScope) ToPublisherScopePtrOutputWithContext(ctx context.Context) PublisherScopePtrOutput {
	return PublisherScope(e).ToPublisherScopeOutputWithContext(ctx).ToPublisherScopePtrOutputWithContext(ctx)
}

func (e PublisherScope) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e PublisherScope) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e PublisherScope) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e PublisherScope) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type PublisherScopeOutput struct{ *pulumi.OutputState }

func (PublisherScopeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PublisherScope)(nil)).Elem()
}

func (o PublisherScopeOutput) ToPublisherScopeOutput() PublisherScopeOutput {
	return o
}

func (o PublisherScopeOutput) ToPublisherScopeOutputWithContext(ctx context.Context) PublisherScopeOutput {
	return o
}

func (o PublisherScopeOutput) ToPublisherScopePtrOutput() PublisherScopePtrOutput {
	return o.ToPublisherScopePtrOutputWithContext(context.Background())
}

func (o PublisherScopeOutput) ToPublisherScopePtrOutputWithContext(ctx context.Context) PublisherScopePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PublisherScope) *PublisherScope {
		return &v
	}).(PublisherScopePtrOutput)
}

func (o PublisherScopeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o PublisherScopeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PublisherScope) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o PublisherScopeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PublisherScopeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PublisherScope) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type PublisherScopePtrOutput struct{ *pulumi.OutputState }

func (PublisherScopePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PublisherScope)(nil)).Elem()
}

func (o PublisherScopePtrOutput) ToPublisherScopePtrOutput() PublisherScopePtrOutput {
	return o
}

func (o PublisherScopePtrOutput) ToPublisherScopePtrOutputWithContext(ctx context.Context) PublisherScopePtrOutput {
	return o
}

func (o PublisherScopePtrOutput) Elem() PublisherScopeOutput {
	return o.ApplyT(func(v *PublisherScope) PublisherScope {
		if v != nil {
			return *v
		}
		var ret PublisherScope
		return ret
	}).(PublisherScopeOutput)
}

func (o PublisherScopePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PublisherScopePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *PublisherScope) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// PublisherScopeInput is an input type that accepts values of the PublisherScope enum
// A concrete instance of `PublisherScopeInput` can be one of the following:
//
//	PublisherScopeUnknown
//	PublisherScopePrivate
type PublisherScopeInput interface {
	pulumi.Input

	ToPublisherScopeOutput() PublisherScopeOutput
	ToPublisherScopeOutputWithContext(context.Context) PublisherScopeOutput
}

var publisherScopePtrType = reflect.TypeOf((**PublisherScope)(nil)).Elem()

type PublisherScopePtrInput interface {
	pulumi.Input

	ToPublisherScopePtrOutput() PublisherScopePtrOutput
	ToPublisherScopePtrOutputWithContext(context.Context) PublisherScopePtrOutput
}

type publisherScopePtr string

func PublisherScopePtr(v string) PublisherScopePtrInput {
	return (*publisherScopePtr)(&v)
}

func (*publisherScopePtr) ElementType() reflect.Type {
	return publisherScopePtrType
}

func (in *publisherScopePtr) ToPublisherScopePtrOutput() PublisherScopePtrOutput {
	return pulumi.ToOutput(in).(PublisherScopePtrOutput)
}

func (in *publisherScopePtr) ToPublisherScopePtrOutputWithContext(ctx context.Context) PublisherScopePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(PublisherScopePtrOutput)
}

// Name of this Sku
type SkuName string

const (
	SkuNameBasic    = SkuName("Basic")
	SkuNameStandard = SkuName("Standard")
)

func (SkuName) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuName)(nil)).Elem()
}

func (e SkuName) ToSkuNameOutput() SkuNameOutput {
	return pulumi.ToOutput(e).(SkuNameOutput)
}

func (e SkuName) ToSkuNameOutputWithContext(ctx context.Context) SkuNameOutput {
	return pulumi.ToOutputWithContext(ctx, e).(SkuNameOutput)
}

func (e SkuName) ToSkuNamePtrOutput() SkuNamePtrOutput {
	return e.ToSkuNamePtrOutputWithContext(context.Background())
}

func (e SkuName) ToSkuNamePtrOutputWithContext(ctx context.Context) SkuNamePtrOutput {
	return SkuName(e).ToSkuNameOutputWithContext(ctx).ToSkuNamePtrOutputWithContext(ctx)
}

func (e SkuName) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e SkuName) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e SkuName) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e SkuName) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type SkuNameOutput struct{ *pulumi.OutputState }

func (SkuNameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuName)(nil)).Elem()
}

func (o SkuNameOutput) ToSkuNameOutput() SkuNameOutput {
	return o
}

func (o SkuNameOutput) ToSkuNameOutputWithContext(ctx context.Context) SkuNameOutput {
	return o
}

func (o SkuNameOutput) ToSkuNamePtrOutput() SkuNamePtrOutput {
	return o.ToSkuNamePtrOutputWithContext(context.Background())
}

func (o SkuNameOutput) ToSkuNamePtrOutputWithContext(ctx context.Context) SkuNamePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SkuName) *SkuName {
		return &v
	}).(SkuNamePtrOutput)
}

func (o SkuNameOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o SkuNameOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SkuName) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o SkuNameOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SkuNameOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SkuName) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type SkuNamePtrOutput struct{ *pulumi.OutputState }

func (SkuNamePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SkuName)(nil)).Elem()
}

func (o SkuNamePtrOutput) ToSkuNamePtrOutput() SkuNamePtrOutput {
	return o
}

func (o SkuNamePtrOutput) ToSkuNamePtrOutputWithContext(ctx context.Context) SkuNamePtrOutput {
	return o
}

func (o SkuNamePtrOutput) Elem() SkuNameOutput {
	return o.ApplyT(func(v *SkuName) SkuName {
		if v != nil {
			return *v
		}
		var ret SkuName
		return ret
	}).(SkuNameOutput)
}

func (o SkuNamePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SkuNamePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *SkuName) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// SkuNameInput is an input type that accepts values of the SkuName enum
// A concrete instance of `SkuNameInput` can be one of the following:
//
//	SkuNameBasic
//	SkuNameStandard
type SkuNameInput interface {
	pulumi.Input

	ToSkuNameOutput() SkuNameOutput
	ToSkuNameOutputWithContext(context.Context) SkuNameOutput
}

var skuNamePtrType = reflect.TypeOf((**SkuName)(nil)).Elem()

type SkuNamePtrInput interface {
	pulumi.Input

	ToSkuNamePtrOutput() SkuNamePtrOutput
	ToSkuNamePtrOutputWithContext(context.Context) SkuNamePtrOutput
}

type skuNamePtr string

func SkuNamePtr(v string) SkuNamePtrInput {
	return (*skuNamePtr)(&v)
}

func (*skuNamePtr) ElementType() reflect.Type {
	return skuNamePtrType
}

func (in *skuNamePtr) ToSkuNamePtrOutput() SkuNamePtrOutput {
	return pulumi.ToOutput(in).(SkuNamePtrOutput)
}

func (in *skuNamePtr) ToSkuNamePtrOutputWithContext(ctx context.Context) SkuNamePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(SkuNamePtrOutput)
}

// The template type.
type TemplateType string

const (
	TemplateTypeUnknown     = TemplateType("Unknown")
	TemplateTypeArmTemplate = TemplateType("ArmTemplate")
)

func (TemplateType) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateType)(nil)).Elem()
}

func (e TemplateType) ToTemplateTypeOutput() TemplateTypeOutput {
	return pulumi.ToOutput(e).(TemplateTypeOutput)
}

func (e TemplateType) ToTemplateTypeOutputWithContext(ctx context.Context) TemplateTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TemplateTypeOutput)
}

func (e TemplateType) ToTemplateTypePtrOutput() TemplateTypePtrOutput {
	return e.ToTemplateTypePtrOutputWithContext(context.Background())
}

func (e TemplateType) ToTemplateTypePtrOutputWithContext(ctx context.Context) TemplateTypePtrOutput {
	return TemplateType(e).ToTemplateTypeOutputWithContext(ctx).ToTemplateTypePtrOutputWithContext(ctx)
}

func (e TemplateType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TemplateType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TemplateTypeOutput struct{ *pulumi.OutputState }

func (TemplateTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateType)(nil)).Elem()
}

func (o TemplateTypeOutput) ToTemplateTypeOutput() TemplateTypeOutput {
	return o
}

func (o TemplateTypeOutput) ToTemplateTypeOutputWithContext(ctx context.Context) TemplateTypeOutput {
	return o
}

func (o TemplateTypeOutput) ToTemplateTypePtrOutput() TemplateTypePtrOutput {
	return o.ToTemplateTypePtrOutputWithContext(context.Background())
}

func (o TemplateTypeOutput) ToTemplateTypePtrOutputWithContext(ctx context.Context) TemplateTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateType) *TemplateType {
		return &v
	}).(TemplateTypePtrOutput)
}

func (o TemplateTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TemplateTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TemplateTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TemplateTypePtrOutput struct{ *pulumi.OutputState }

func (TemplateTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateType)(nil)).Elem()
}

func (o TemplateTypePtrOutput) ToTemplateTypePtrOutput() TemplateTypePtrOutput {
	return o
}

func (o TemplateTypePtrOutput) ToTemplateTypePtrOutputWithContext(ctx context.Context) TemplateTypePtrOutput {
	return o
}

func (o TemplateTypePtrOutput) Elem() TemplateTypeOutput {
	return o.ApplyT(func(v *TemplateType) TemplateType {
		if v != nil {
			return *v
		}
		var ret TemplateType
		return ret
	}).(TemplateTypeOutput)
}

func (o TemplateTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TemplateType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TemplateTypeInput is an input type that accepts values of the TemplateType enum
// A concrete instance of `TemplateTypeInput` can be one of the following:
//
//	TemplateTypeUnknown
//	TemplateTypeArmTemplate
type TemplateTypeInput interface {
	pulumi.Input

	ToTemplateTypeOutput() TemplateTypeOutput
	ToTemplateTypeOutputWithContext(context.Context) TemplateTypeOutput
}

var templateTypePtrType = reflect.TypeOf((**TemplateType)(nil)).Elem()

type TemplateTypePtrInput interface {
	pulumi.Input

	ToTemplateTypePtrOutput() TemplateTypePtrOutput
	ToTemplateTypePtrOutputWithContext(context.Context) TemplateTypePtrOutput
}

type templateTypePtr string

func TemplateTypePtr(v string) TemplateTypePtrInput {
	return (*templateTypePtr)(&v)
}

func (*templateTypePtr) ElementType() reflect.Type {
	return templateTypePtrType
}

func (in *templateTypePtr) ToTemplateTypePtrOutput() TemplateTypePtrOutput {
	return pulumi.ToOutput(in).(TemplateTypePtrOutput)
}

func (in *templateTypePtr) ToTemplateTypePtrOutputWithContext(ctx context.Context) TemplateTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TemplateTypePtrOutput)
}

// The resource element template type.
type Type string

const (
	TypeUnknown                   = Type("Unknown")
	TypeArmResourceDefinition     = Type("ArmResourceDefinition")
	TypeNetworkFunctionDefinition = Type("NetworkFunctionDefinition")
)

// The network function type.
type VirtualNetworkFunctionNFVIType string

const (
	VirtualNetworkFunctionNFVITypeUnknown            = VirtualNetworkFunctionNFVIType("Unknown")
	VirtualNetworkFunctionNFVITypeAzureCore          = VirtualNetworkFunctionNFVIType("AzureCore")
	VirtualNetworkFunctionNFVITypeAzureOperatorNexus = VirtualNetworkFunctionNFVIType("AzureOperatorNexus")
)

func init() {
	pulumi.RegisterOutputType(ApplicationEnablementOutput{})
	pulumi.RegisterOutputType(ApplicationEnablementPtrOutput{})
	pulumi.RegisterOutputType(ArtifactReplicationStrategyOutput{})
	pulumi.RegisterOutputType(ArtifactReplicationStrategyPtrOutput{})
	pulumi.RegisterOutputType(ArtifactStoreTypeOutput{})
	pulumi.RegisterOutputType(ArtifactStoreTypePtrOutput{})
	pulumi.RegisterOutputType(ArtifactTypeOutput{})
	pulumi.RegisterOutputType(ArtifactTypePtrOutput{})
	pulumi.RegisterOutputType(ManagedServiceIdentityTypeOutput{})
	pulumi.RegisterOutputType(ManagedServiceIdentityTypePtrOutput{})
	pulumi.RegisterOutputType(NFVITypeOutput{})
	pulumi.RegisterOutputType(NFVITypePtrOutput{})
	pulumi.RegisterOutputType(PublisherScopeOutput{})
	pulumi.RegisterOutputType(PublisherScopePtrOutput{})
	pulumi.RegisterOutputType(SkuNameOutput{})
	pulumi.RegisterOutputType(SkuNamePtrOutput{})
	pulumi.RegisterOutputType(TemplateTypeOutput{})
	pulumi.RegisterOutputType(TemplateTypePtrOutput{})
}
