// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package hybridnetwork

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Artifact manifest properties.
// Azure REST API version: 2023-09-01.
type ArtifactManifest struct {
	pulumi.CustomResourceState

	// The geo-location where the resource lives
	Location pulumi.StringOutput `pulumi:"location"`
	// The name of the resource
	Name pulumi.StringOutput `pulumi:"name"`
	// Artifact manifest properties.
	Properties ArtifactManifestPropertiesFormatResponseOutput `pulumi:"properties"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponseOutput `pulumi:"systemData"`
	// Resource tags.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewArtifactManifest registers a new resource with the given unique name, arguments, and options.
func NewArtifactManifest(ctx *pulumi.Context,
	name string, args *ArtifactManifestArgs, opts ...pulumi.ResourceOption) (*ArtifactManifest, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ArtifactStoreName == nil {
		return nil, errors.New("invalid value for required argument 'ArtifactStoreName'")
	}
	if args.PublisherName == nil {
		return nil, errors.New("invalid value for required argument 'PublisherName'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:hybridnetwork/v20230901:ArtifactManifest"),
		},
	})
	opts = append(opts, aliases)
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource ArtifactManifest
	err := ctx.RegisterResource("azure-native:hybridnetwork:ArtifactManifest", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetArtifactManifest gets an existing ArtifactManifest resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetArtifactManifest(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ArtifactManifestState, opts ...pulumi.ResourceOption) (*ArtifactManifest, error) {
	var resource ArtifactManifest
	err := ctx.ReadResource("azure-native:hybridnetwork:ArtifactManifest", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ArtifactManifest resources.
type artifactManifestState struct {
}

type ArtifactManifestState struct {
}

func (ArtifactManifestState) ElementType() reflect.Type {
	return reflect.TypeOf((*artifactManifestState)(nil)).Elem()
}

type artifactManifestArgs struct {
	// The name of the artifact manifest.
	ArtifactManifestName *string `pulumi:"artifactManifestName"`
	// The name of the artifact store.
	ArtifactStoreName string `pulumi:"artifactStoreName"`
	// The geo-location where the resource lives
	Location *string `pulumi:"location"`
	// Artifact manifest properties.
	Properties *ArtifactManifestPropertiesFormat `pulumi:"properties"`
	// The name of the publisher.
	PublisherName string `pulumi:"publisherName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a ArtifactManifest resource.
type ArtifactManifestArgs struct {
	// The name of the artifact manifest.
	ArtifactManifestName pulumi.StringPtrInput
	// The name of the artifact store.
	ArtifactStoreName pulumi.StringInput
	// The geo-location where the resource lives
	Location pulumi.StringPtrInput
	// Artifact manifest properties.
	Properties ArtifactManifestPropertiesFormatPtrInput
	// The name of the publisher.
	PublisherName pulumi.StringInput
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput
	// Resource tags.
	Tags pulumi.StringMapInput
}

func (ArtifactManifestArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*artifactManifestArgs)(nil)).Elem()
}

type ArtifactManifestInput interface {
	pulumi.Input

	ToArtifactManifestOutput() ArtifactManifestOutput
	ToArtifactManifestOutputWithContext(ctx context.Context) ArtifactManifestOutput
}

func (*ArtifactManifest) ElementType() reflect.Type {
	return reflect.TypeOf((**ArtifactManifest)(nil)).Elem()
}

func (i *ArtifactManifest) ToArtifactManifestOutput() ArtifactManifestOutput {
	return i.ToArtifactManifestOutputWithContext(context.Background())
}

func (i *ArtifactManifest) ToArtifactManifestOutputWithContext(ctx context.Context) ArtifactManifestOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ArtifactManifestOutput)
}

type ArtifactManifestOutput struct{ *pulumi.OutputState }

func (ArtifactManifestOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ArtifactManifest)(nil)).Elem()
}

func (o ArtifactManifestOutput) ToArtifactManifestOutput() ArtifactManifestOutput {
	return o
}

func (o ArtifactManifestOutput) ToArtifactManifestOutputWithContext(ctx context.Context) ArtifactManifestOutput {
	return o
}

// The geo-location where the resource lives
func (o ArtifactManifestOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *ArtifactManifest) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// The name of the resource
func (o ArtifactManifestOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ArtifactManifest) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Artifact manifest properties.
func (o ArtifactManifestOutput) Properties() ArtifactManifestPropertiesFormatResponseOutput {
	return o.ApplyT(func(v *ArtifactManifest) ArtifactManifestPropertiesFormatResponseOutput { return v.Properties }).(ArtifactManifestPropertiesFormatResponseOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o ArtifactManifestOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v *ArtifactManifest) SystemDataResponseOutput { return v.SystemData }).(SystemDataResponseOutput)
}

// Resource tags.
func (o ArtifactManifestOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ArtifactManifest) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o ArtifactManifestOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *ArtifactManifest) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(ArtifactManifestOutput{})
}
