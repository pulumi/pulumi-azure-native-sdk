// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20230101

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Specifies the identity type of the Datadog Monitor. At this time the only allowed value is 'SystemAssigned'.
type ManagedIdentityTypes string

const (
	ManagedIdentityTypesSystemAssigned = ManagedIdentityTypes("SystemAssigned")
	ManagedIdentityTypesUserAssigned   = ManagedIdentityTypes("UserAssigned")
)

func (ManagedIdentityTypes) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedIdentityTypes)(nil)).Elem()
}

func (e ManagedIdentityTypes) ToManagedIdentityTypesOutput() ManagedIdentityTypesOutput {
	return pulumi.ToOutput(e).(ManagedIdentityTypesOutput)
}

func (e ManagedIdentityTypes) ToManagedIdentityTypesOutputWithContext(ctx context.Context) ManagedIdentityTypesOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ManagedIdentityTypesOutput)
}

func (e ManagedIdentityTypes) ToManagedIdentityTypesPtrOutput() ManagedIdentityTypesPtrOutput {
	return e.ToManagedIdentityTypesPtrOutputWithContext(context.Background())
}

func (e ManagedIdentityTypes) ToManagedIdentityTypesPtrOutputWithContext(ctx context.Context) ManagedIdentityTypesPtrOutput {
	return ManagedIdentityTypes(e).ToManagedIdentityTypesOutputWithContext(ctx).ToManagedIdentityTypesPtrOutputWithContext(ctx)
}

func (e ManagedIdentityTypes) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ManagedIdentityTypes) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ManagedIdentityTypes) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ManagedIdentityTypes) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ManagedIdentityTypesOutput struct{ *pulumi.OutputState }

func (ManagedIdentityTypesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedIdentityTypes)(nil)).Elem()
}

func (o ManagedIdentityTypesOutput) ToManagedIdentityTypesOutput() ManagedIdentityTypesOutput {
	return o
}

func (o ManagedIdentityTypesOutput) ToManagedIdentityTypesOutputWithContext(ctx context.Context) ManagedIdentityTypesOutput {
	return o
}

func (o ManagedIdentityTypesOutput) ToManagedIdentityTypesPtrOutput() ManagedIdentityTypesPtrOutput {
	return o.ToManagedIdentityTypesPtrOutputWithContext(context.Background())
}

func (o ManagedIdentityTypesOutput) ToManagedIdentityTypesPtrOutputWithContext(ctx context.Context) ManagedIdentityTypesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ManagedIdentityTypes) *ManagedIdentityTypes {
		return &v
	}).(ManagedIdentityTypesPtrOutput)
}

func (o ManagedIdentityTypesOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ManagedIdentityTypesOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ManagedIdentityTypes) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ManagedIdentityTypesOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ManagedIdentityTypesOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ManagedIdentityTypes) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ManagedIdentityTypesPtrOutput struct{ *pulumi.OutputState }

func (ManagedIdentityTypesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedIdentityTypes)(nil)).Elem()
}

func (o ManagedIdentityTypesPtrOutput) ToManagedIdentityTypesPtrOutput() ManagedIdentityTypesPtrOutput {
	return o
}

func (o ManagedIdentityTypesPtrOutput) ToManagedIdentityTypesPtrOutputWithContext(ctx context.Context) ManagedIdentityTypesPtrOutput {
	return o
}

func (o ManagedIdentityTypesPtrOutput) Elem() ManagedIdentityTypesOutput {
	return o.ApplyT(func(v *ManagedIdentityTypes) ManagedIdentityTypes {
		if v != nil {
			return *v
		}
		var ret ManagedIdentityTypes
		return ret
	}).(ManagedIdentityTypesOutput)
}

func (o ManagedIdentityTypesPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ManagedIdentityTypesPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ManagedIdentityTypes) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ManagedIdentityTypesInput is an input type that accepts values of the ManagedIdentityTypes enum
// A concrete instance of `ManagedIdentityTypesInput` can be one of the following:
//
//	ManagedIdentityTypesSystemAssigned
//	ManagedIdentityTypesUserAssigned
type ManagedIdentityTypesInput interface {
	pulumi.Input

	ToManagedIdentityTypesOutput() ManagedIdentityTypesOutput
	ToManagedIdentityTypesOutputWithContext(context.Context) ManagedIdentityTypesOutput
}

var managedIdentityTypesPtrType = reflect.TypeOf((**ManagedIdentityTypes)(nil)).Elem()

type ManagedIdentityTypesPtrInput interface {
	pulumi.Input

	ToManagedIdentityTypesPtrOutput() ManagedIdentityTypesPtrOutput
	ToManagedIdentityTypesPtrOutputWithContext(context.Context) ManagedIdentityTypesPtrOutput
}

type managedIdentityTypesPtr string

func ManagedIdentityTypesPtr(v string) ManagedIdentityTypesPtrInput {
	return (*managedIdentityTypesPtr)(&v)
}

func (*managedIdentityTypesPtr) ElementType() reflect.Type {
	return managedIdentityTypesPtrType
}

func (in *managedIdentityTypesPtr) ToManagedIdentityTypesPtrOutput() ManagedIdentityTypesPtrOutput {
	return pulumi.ToOutput(in).(ManagedIdentityTypesPtrOutput)
}

func (in *managedIdentityTypesPtr) ToManagedIdentityTypesPtrOutputWithContext(ctx context.Context) ManagedIdentityTypesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ManagedIdentityTypesPtrOutput)
}

// Flag specifying if the resource monitoring is enabled or disabled.
type MonitoringStatus string

const (
	MonitoringStatusEnabled  = MonitoringStatus("Enabled")
	MonitoringStatusDisabled = MonitoringStatus("Disabled")
)

func (MonitoringStatus) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitoringStatus)(nil)).Elem()
}

func (e MonitoringStatus) ToMonitoringStatusOutput() MonitoringStatusOutput {
	return pulumi.ToOutput(e).(MonitoringStatusOutput)
}

func (e MonitoringStatus) ToMonitoringStatusOutputWithContext(ctx context.Context) MonitoringStatusOutput {
	return pulumi.ToOutputWithContext(ctx, e).(MonitoringStatusOutput)
}

func (e MonitoringStatus) ToMonitoringStatusPtrOutput() MonitoringStatusPtrOutput {
	return e.ToMonitoringStatusPtrOutputWithContext(context.Background())
}

func (e MonitoringStatus) ToMonitoringStatusPtrOutputWithContext(ctx context.Context) MonitoringStatusPtrOutput {
	return MonitoringStatus(e).ToMonitoringStatusOutputWithContext(ctx).ToMonitoringStatusPtrOutputWithContext(ctx)
}

func (e MonitoringStatus) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e MonitoringStatus) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e MonitoringStatus) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e MonitoringStatus) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type MonitoringStatusOutput struct{ *pulumi.OutputState }

func (MonitoringStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitoringStatus)(nil)).Elem()
}

func (o MonitoringStatusOutput) ToMonitoringStatusOutput() MonitoringStatusOutput {
	return o
}

func (o MonitoringStatusOutput) ToMonitoringStatusOutputWithContext(ctx context.Context) MonitoringStatusOutput {
	return o
}

func (o MonitoringStatusOutput) ToMonitoringStatusPtrOutput() MonitoringStatusPtrOutput {
	return o.ToMonitoringStatusPtrOutputWithContext(context.Background())
}

func (o MonitoringStatusOutput) ToMonitoringStatusPtrOutputWithContext(ctx context.Context) MonitoringStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MonitoringStatus) *MonitoringStatus {
		return &v
	}).(MonitoringStatusPtrOutput)
}

func (o MonitoringStatusOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o MonitoringStatusOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e MonitoringStatus) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o MonitoringStatusOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o MonitoringStatusOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e MonitoringStatus) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type MonitoringStatusPtrOutput struct{ *pulumi.OutputState }

func (MonitoringStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitoringStatus)(nil)).Elem()
}

func (o MonitoringStatusPtrOutput) ToMonitoringStatusPtrOutput() MonitoringStatusPtrOutput {
	return o
}

func (o MonitoringStatusPtrOutput) ToMonitoringStatusPtrOutputWithContext(ctx context.Context) MonitoringStatusPtrOutput {
	return o
}

func (o MonitoringStatusPtrOutput) Elem() MonitoringStatusOutput {
	return o.ApplyT(func(v *MonitoringStatus) MonitoringStatus {
		if v != nil {
			return *v
		}
		var ret MonitoringStatus
		return ret
	}).(MonitoringStatusOutput)
}

func (o MonitoringStatusPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o MonitoringStatusPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *MonitoringStatus) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// MonitoringStatusInput is an input type that accepts values of the MonitoringStatus enum
// A concrete instance of `MonitoringStatusInput` can be one of the following:
//
//	MonitoringStatusEnabled
//	MonitoringStatusDisabled
type MonitoringStatusInput interface {
	pulumi.Input

	ToMonitoringStatusOutput() MonitoringStatusOutput
	ToMonitoringStatusOutputWithContext(context.Context) MonitoringStatusOutput
}

var monitoringStatusPtrType = reflect.TypeOf((**MonitoringStatus)(nil)).Elem()

type MonitoringStatusPtrInput interface {
	pulumi.Input

	ToMonitoringStatusPtrOutput() MonitoringStatusPtrOutput
	ToMonitoringStatusPtrOutputWithContext(context.Context) MonitoringStatusPtrOutput
}

type monitoringStatusPtr string

func MonitoringStatusPtr(v string) MonitoringStatusPtrInput {
	return (*monitoringStatusPtr)(&v)
}

func (*monitoringStatusPtr) ElementType() reflect.Type {
	return monitoringStatusPtrType
}

func (in *monitoringStatusPtr) ToMonitoringStatusPtrOutput() MonitoringStatusPtrOutput {
	return pulumi.ToOutput(in).(MonitoringStatusPtrOutput)
}

func (in *monitoringStatusPtr) ToMonitoringStatusPtrOutputWithContext(ctx context.Context) MonitoringStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(MonitoringStatusPtrOutput)
}

// The operation for the patch on the resource.
type Operation string

const (
	OperationAddBegin       = Operation("AddBegin")
	OperationAddComplete    = Operation("AddComplete")
	OperationDeleteBegin    = Operation("DeleteBegin")
	OperationDeleteComplete = Operation("DeleteComplete")
	OperationActive         = Operation("Active")
)

func (Operation) ElementType() reflect.Type {
	return reflect.TypeOf((*Operation)(nil)).Elem()
}

func (e Operation) ToOperationOutput() OperationOutput {
	return pulumi.ToOutput(e).(OperationOutput)
}

func (e Operation) ToOperationOutputWithContext(ctx context.Context) OperationOutput {
	return pulumi.ToOutputWithContext(ctx, e).(OperationOutput)
}

func (e Operation) ToOperationPtrOutput() OperationPtrOutput {
	return e.ToOperationPtrOutputWithContext(context.Background())
}

func (e Operation) ToOperationPtrOutputWithContext(ctx context.Context) OperationPtrOutput {
	return Operation(e).ToOperationOutputWithContext(ctx).ToOperationPtrOutputWithContext(ctx)
}

func (e Operation) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e Operation) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e Operation) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e Operation) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type OperationOutput struct{ *pulumi.OutputState }

func (OperationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Operation)(nil)).Elem()
}

func (o OperationOutput) ToOperationOutput() OperationOutput {
	return o
}

func (o OperationOutput) ToOperationOutputWithContext(ctx context.Context) OperationOutput {
	return o
}

func (o OperationOutput) ToOperationPtrOutput() OperationPtrOutput {
	return o.ToOperationPtrOutputWithContext(context.Background())
}

func (o OperationOutput) ToOperationPtrOutputWithContext(ctx context.Context) OperationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Operation) *Operation {
		return &v
	}).(OperationPtrOutput)
}

func (o OperationOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o OperationOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e Operation) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o OperationOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o OperationOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e Operation) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type OperationPtrOutput struct{ *pulumi.OutputState }

func (OperationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Operation)(nil)).Elem()
}

func (o OperationPtrOutput) ToOperationPtrOutput() OperationPtrOutput {
	return o
}

func (o OperationPtrOutput) ToOperationPtrOutputWithContext(ctx context.Context) OperationPtrOutput {
	return o
}

func (o OperationPtrOutput) Elem() OperationOutput {
	return o.ApplyT(func(v *Operation) Operation {
		if v != nil {
			return *v
		}
		var ret Operation
		return ret
	}).(OperationOutput)
}

func (o OperationPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o OperationPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *Operation) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// OperationInput is an input type that accepts values of the Operation enum
// A concrete instance of `OperationInput` can be one of the following:
//
//	OperationAddBegin
//	OperationAddComplete
//	OperationDeleteBegin
//	OperationDeleteComplete
//	OperationActive
type OperationInput interface {
	pulumi.Input

	ToOperationOutput() OperationOutput
	ToOperationOutputWithContext(context.Context) OperationOutput
}

var operationPtrType = reflect.TypeOf((**Operation)(nil)).Elem()

type OperationPtrInput interface {
	pulumi.Input

	ToOperationPtrOutput() OperationPtrOutput
	ToOperationPtrOutputWithContext(context.Context) OperationPtrOutput
}

type operationPtr string

func OperationPtr(v string) OperationPtrInput {
	return (*operationPtr)(&v)
}

func (*operationPtr) ElementType() reflect.Type {
	return operationPtrType
}

func (in *operationPtr) ToOperationPtrOutput() OperationPtrOutput {
	return pulumi.ToOutput(in).(OperationPtrOutput)
}

func (in *operationPtr) ToOperationPtrOutputWithContext(ctx context.Context) OperationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(OperationPtrOutput)
}

// The state of monitoring.
type Status string

const (
	StatusInProgress = Status("InProgress")
	StatusActive     = Status("Active")
	StatusFailed     = Status("Failed")
	StatusDeleting   = Status("Deleting")
)

func (Status) ElementType() reflect.Type {
	return reflect.TypeOf((*Status)(nil)).Elem()
}

func (e Status) ToStatusOutput() StatusOutput {
	return pulumi.ToOutput(e).(StatusOutput)
}

func (e Status) ToStatusOutputWithContext(ctx context.Context) StatusOutput {
	return pulumi.ToOutputWithContext(ctx, e).(StatusOutput)
}

func (e Status) ToStatusPtrOutput() StatusPtrOutput {
	return e.ToStatusPtrOutputWithContext(context.Background())
}

func (e Status) ToStatusPtrOutputWithContext(ctx context.Context) StatusPtrOutput {
	return Status(e).ToStatusOutputWithContext(ctx).ToStatusPtrOutputWithContext(ctx)
}

func (e Status) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e Status) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e Status) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e Status) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type StatusOutput struct{ *pulumi.OutputState }

func (StatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Status)(nil)).Elem()
}

func (o StatusOutput) ToStatusOutput() StatusOutput {
	return o
}

func (o StatusOutput) ToStatusOutputWithContext(ctx context.Context) StatusOutput {
	return o
}

func (o StatusOutput) ToStatusPtrOutput() StatusPtrOutput {
	return o.ToStatusPtrOutputWithContext(context.Background())
}

func (o StatusOutput) ToStatusPtrOutputWithContext(ctx context.Context) StatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Status) *Status {
		return &v
	}).(StatusPtrOutput)
}

func (o StatusOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o StatusOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e Status) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o StatusOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o StatusOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e Status) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type StatusPtrOutput struct{ *pulumi.OutputState }

func (StatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Status)(nil)).Elem()
}

func (o StatusPtrOutput) ToStatusPtrOutput() StatusPtrOutput {
	return o
}

func (o StatusPtrOutput) ToStatusPtrOutputWithContext(ctx context.Context) StatusPtrOutput {
	return o
}

func (o StatusPtrOutput) Elem() StatusOutput {
	return o.ApplyT(func(v *Status) Status {
		if v != nil {
			return *v
		}
		var ret Status
		return ret
	}).(StatusOutput)
}

func (o StatusPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o StatusPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *Status) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// StatusInput is an input type that accepts values of the Status enum
// A concrete instance of `StatusInput` can be one of the following:
//
//	StatusInProgress
//	StatusActive
//	StatusFailed
//	StatusDeleting
type StatusInput interface {
	pulumi.Input

	ToStatusOutput() StatusOutput
	ToStatusOutputWithContext(context.Context) StatusOutput
}

var statusPtrType = reflect.TypeOf((**Status)(nil)).Elem()

type StatusPtrInput interface {
	pulumi.Input

	ToStatusPtrOutput() StatusPtrOutput
	ToStatusPtrOutputWithContext(context.Context) StatusPtrOutput
}

type statusPtr string

func StatusPtr(v string) StatusPtrInput {
	return (*statusPtr)(&v)
}

func (*statusPtr) ElementType() reflect.Type {
	return statusPtrType
}

func (in *statusPtr) ToStatusPtrOutput() StatusPtrOutput {
	return pulumi.ToOutput(in).(StatusPtrOutput)
}

func (in *statusPtr) ToStatusPtrOutputWithContext(ctx context.Context) StatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(StatusPtrOutput)
}

// Valid actions for a filtering tag. Exclusion takes priority over inclusion.
type TagAction string

const (
	TagActionInclude = TagAction("Include")
	TagActionExclude = TagAction("Exclude")
)

func (TagAction) ElementType() reflect.Type {
	return reflect.TypeOf((*TagAction)(nil)).Elem()
}

func (e TagAction) ToTagActionOutput() TagActionOutput {
	return pulumi.ToOutput(e).(TagActionOutput)
}

func (e TagAction) ToTagActionOutputWithContext(ctx context.Context) TagActionOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TagActionOutput)
}

func (e TagAction) ToTagActionPtrOutput() TagActionPtrOutput {
	return e.ToTagActionPtrOutputWithContext(context.Background())
}

func (e TagAction) ToTagActionPtrOutputWithContext(ctx context.Context) TagActionPtrOutput {
	return TagAction(e).ToTagActionOutputWithContext(ctx).ToTagActionPtrOutputWithContext(ctx)
}

func (e TagAction) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TagAction) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TagAction) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TagAction) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TagActionOutput struct{ *pulumi.OutputState }

func (TagActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TagAction)(nil)).Elem()
}

func (o TagActionOutput) ToTagActionOutput() TagActionOutput {
	return o
}

func (o TagActionOutput) ToTagActionOutputWithContext(ctx context.Context) TagActionOutput {
	return o
}

func (o TagActionOutput) ToTagActionPtrOutput() TagActionPtrOutput {
	return o.ToTagActionPtrOutputWithContext(context.Background())
}

func (o TagActionOutput) ToTagActionPtrOutputWithContext(ctx context.Context) TagActionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TagAction) *TagAction {
		return &v
	}).(TagActionPtrOutput)
}

func (o TagActionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TagActionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TagAction) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TagActionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TagActionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TagAction) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TagActionPtrOutput struct{ *pulumi.OutputState }

func (TagActionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TagAction)(nil)).Elem()
}

func (o TagActionPtrOutput) ToTagActionPtrOutput() TagActionPtrOutput {
	return o
}

func (o TagActionPtrOutput) ToTagActionPtrOutputWithContext(ctx context.Context) TagActionPtrOutput {
	return o
}

func (o TagActionPtrOutput) Elem() TagActionOutput {
	return o.ApplyT(func(v *TagAction) TagAction {
		if v != nil {
			return *v
		}
		var ret TagAction
		return ret
	}).(TagActionOutput)
}

func (o TagActionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TagActionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TagAction) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TagActionInput is an input type that accepts values of the TagAction enum
// A concrete instance of `TagActionInput` can be one of the following:
//
//	TagActionInclude
//	TagActionExclude
type TagActionInput interface {
	pulumi.Input

	ToTagActionOutput() TagActionOutput
	ToTagActionOutputWithContext(context.Context) TagActionOutput
}

var tagActionPtrType = reflect.TypeOf((**TagAction)(nil)).Elem()

type TagActionPtrInput interface {
	pulumi.Input

	ToTagActionPtrOutput() TagActionPtrOutput
	ToTagActionPtrOutputWithContext(context.Context) TagActionPtrOutput
}

type tagActionPtr string

func TagActionPtr(v string) TagActionPtrInput {
	return (*tagActionPtr)(&v)
}

func (*tagActionPtr) ElementType() reflect.Type {
	return tagActionPtrType
}

func (in *tagActionPtr) ToTagActionPtrOutput() TagActionPtrOutput {
	return pulumi.ToOutput(in).(TagActionPtrOutput)
}

func (in *tagActionPtr) ToTagActionPtrOutputWithContext(ctx context.Context) TagActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TagActionPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(ManagedIdentityTypesOutput{})
	pulumi.RegisterOutputType(ManagedIdentityTypesPtrOutput{})
	pulumi.RegisterOutputType(MonitoringStatusOutput{})
	pulumi.RegisterOutputType(MonitoringStatusPtrOutput{})
	pulumi.RegisterOutputType(OperationOutput{})
	pulumi.RegisterOutputType(OperationPtrOutput{})
	pulumi.RegisterOutputType(StatusOutput{})
	pulumi.RegisterOutputType(StatusPtrOutput{})
	pulumi.RegisterOutputType(TagActionOutput{})
	pulumi.RegisterOutputType(TagActionPtrOutput{})
}
