// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20230101

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The request to update subscriptions needed to be monitored by the Datadog monitor resource.
func LookupMonitoredSubscription(ctx *pulumi.Context, args *LookupMonitoredSubscriptionArgs, opts ...pulumi.InvokeOption) (*LookupMonitoredSubscriptionResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv LookupMonitoredSubscriptionResult
	err := ctx.Invoke("azure-native:datadog/v20230101:getMonitoredSubscription", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupMonitoredSubscriptionArgs struct {
	// The configuration name. Only 'default' value is supported.
	ConfigurationName string `pulumi:"configurationName"`
	// Monitor resource name
	MonitorName string `pulumi:"monitorName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// The request to update subscriptions needed to be monitored by the Datadog monitor resource.
type LookupMonitoredSubscriptionResult struct {
	// The id of the monitored subscription resource.
	Id string `pulumi:"id"`
	// Name of the monitored subscription resource.
	Name string `pulumi:"name"`
	// The request to update subscriptions needed to be monitored by the Datadog monitor resource.
	Properties SubscriptionListResponse `pulumi:"properties"`
	// The type of the monitored subscription resource.
	Type string `pulumi:"type"`
}

func LookupMonitoredSubscriptionOutput(ctx *pulumi.Context, args LookupMonitoredSubscriptionOutputArgs, opts ...pulumi.InvokeOption) LookupMonitoredSubscriptionResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupMonitoredSubscriptionResult, error) {
			args := v.(LookupMonitoredSubscriptionArgs)
			r, err := LookupMonitoredSubscription(ctx, &args, opts...)
			var s LookupMonitoredSubscriptionResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupMonitoredSubscriptionResultOutput)
}

type LookupMonitoredSubscriptionOutputArgs struct {
	// The configuration name. Only 'default' value is supported.
	ConfigurationName pulumi.StringInput `pulumi:"configurationName"`
	// Monitor resource name
	MonitorName pulumi.StringInput `pulumi:"monitorName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
}

func (LookupMonitoredSubscriptionOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupMonitoredSubscriptionArgs)(nil)).Elem()
}

// The request to update subscriptions needed to be monitored by the Datadog monitor resource.
type LookupMonitoredSubscriptionResultOutput struct{ *pulumi.OutputState }

func (LookupMonitoredSubscriptionResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupMonitoredSubscriptionResult)(nil)).Elem()
}

func (o LookupMonitoredSubscriptionResultOutput) ToLookupMonitoredSubscriptionResultOutput() LookupMonitoredSubscriptionResultOutput {
	return o
}

func (o LookupMonitoredSubscriptionResultOutput) ToLookupMonitoredSubscriptionResultOutputWithContext(ctx context.Context) LookupMonitoredSubscriptionResultOutput {
	return o
}

// The id of the monitored subscription resource.
func (o LookupMonitoredSubscriptionResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMonitoredSubscriptionResult) string { return v.Id }).(pulumi.StringOutput)
}

// Name of the monitored subscription resource.
func (o LookupMonitoredSubscriptionResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMonitoredSubscriptionResult) string { return v.Name }).(pulumi.StringOutput)
}

// The request to update subscriptions needed to be monitored by the Datadog monitor resource.
func (o LookupMonitoredSubscriptionResultOutput) Properties() SubscriptionListResponseOutput {
	return o.ApplyT(func(v LookupMonitoredSubscriptionResult) SubscriptionListResponse { return v.Properties }).(SubscriptionListResponseOutput)
}

// The type of the monitored subscription resource.
func (o LookupMonitoredSubscriptionResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMonitoredSubscriptionResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupMonitoredSubscriptionResultOutput{})
}
