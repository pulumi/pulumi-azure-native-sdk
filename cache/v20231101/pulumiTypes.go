// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20231101

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = utilities.GetEnvOrDefault

// All Customer-managed key encryption properties for the resource. Set this to an empty object to use Microsoft-managed key encryption.
type ClusterPropertiesCustomerManagedKeyEncryption struct {
	// All identity configuration for Customer-managed key settings defining which identity should be used to auth to Key Vault.
	KeyEncryptionKeyIdentity *ClusterPropertiesKeyEncryptionKeyIdentity `pulumi:"keyEncryptionKeyIdentity"`
	// Key encryption key Url, versioned only. Ex: https://contosovault.vault.azure.net/keys/contosokek/562a4bb76b524a1493a6afe8e536ee78
	KeyEncryptionKeyUrl *string `pulumi:"keyEncryptionKeyUrl"`
}

// ClusterPropertiesCustomerManagedKeyEncryptionInput is an input type that accepts ClusterPropertiesCustomerManagedKeyEncryptionArgs and ClusterPropertiesCustomerManagedKeyEncryptionOutput values.
// You can construct a concrete instance of `ClusterPropertiesCustomerManagedKeyEncryptionInput` via:
//
//	ClusterPropertiesCustomerManagedKeyEncryptionArgs{...}
type ClusterPropertiesCustomerManagedKeyEncryptionInput interface {
	pulumi.Input

	ToClusterPropertiesCustomerManagedKeyEncryptionOutput() ClusterPropertiesCustomerManagedKeyEncryptionOutput
	ToClusterPropertiesCustomerManagedKeyEncryptionOutputWithContext(context.Context) ClusterPropertiesCustomerManagedKeyEncryptionOutput
}

// All Customer-managed key encryption properties for the resource. Set this to an empty object to use Microsoft-managed key encryption.
type ClusterPropertiesCustomerManagedKeyEncryptionArgs struct {
	// All identity configuration for Customer-managed key settings defining which identity should be used to auth to Key Vault.
	KeyEncryptionKeyIdentity ClusterPropertiesKeyEncryptionKeyIdentityPtrInput `pulumi:"keyEncryptionKeyIdentity"`
	// Key encryption key Url, versioned only. Ex: https://contosovault.vault.azure.net/keys/contosokek/562a4bb76b524a1493a6afe8e536ee78
	KeyEncryptionKeyUrl pulumi.StringPtrInput `pulumi:"keyEncryptionKeyUrl"`
}

func (ClusterPropertiesCustomerManagedKeyEncryptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterPropertiesCustomerManagedKeyEncryption)(nil)).Elem()
}

func (i ClusterPropertiesCustomerManagedKeyEncryptionArgs) ToClusterPropertiesCustomerManagedKeyEncryptionOutput() ClusterPropertiesCustomerManagedKeyEncryptionOutput {
	return i.ToClusterPropertiesCustomerManagedKeyEncryptionOutputWithContext(context.Background())
}

func (i ClusterPropertiesCustomerManagedKeyEncryptionArgs) ToClusterPropertiesCustomerManagedKeyEncryptionOutputWithContext(ctx context.Context) ClusterPropertiesCustomerManagedKeyEncryptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterPropertiesCustomerManagedKeyEncryptionOutput)
}

func (i ClusterPropertiesCustomerManagedKeyEncryptionArgs) ToClusterPropertiesCustomerManagedKeyEncryptionPtrOutput() ClusterPropertiesCustomerManagedKeyEncryptionPtrOutput {
	return i.ToClusterPropertiesCustomerManagedKeyEncryptionPtrOutputWithContext(context.Background())
}

func (i ClusterPropertiesCustomerManagedKeyEncryptionArgs) ToClusterPropertiesCustomerManagedKeyEncryptionPtrOutputWithContext(ctx context.Context) ClusterPropertiesCustomerManagedKeyEncryptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterPropertiesCustomerManagedKeyEncryptionOutput).ToClusterPropertiesCustomerManagedKeyEncryptionPtrOutputWithContext(ctx)
}

// ClusterPropertiesCustomerManagedKeyEncryptionPtrInput is an input type that accepts ClusterPropertiesCustomerManagedKeyEncryptionArgs, ClusterPropertiesCustomerManagedKeyEncryptionPtr and ClusterPropertiesCustomerManagedKeyEncryptionPtrOutput values.
// You can construct a concrete instance of `ClusterPropertiesCustomerManagedKeyEncryptionPtrInput` via:
//
//	        ClusterPropertiesCustomerManagedKeyEncryptionArgs{...}
//
//	or:
//
//	        nil
type ClusterPropertiesCustomerManagedKeyEncryptionPtrInput interface {
	pulumi.Input

	ToClusterPropertiesCustomerManagedKeyEncryptionPtrOutput() ClusterPropertiesCustomerManagedKeyEncryptionPtrOutput
	ToClusterPropertiesCustomerManagedKeyEncryptionPtrOutputWithContext(context.Context) ClusterPropertiesCustomerManagedKeyEncryptionPtrOutput
}

type clusterPropertiesCustomerManagedKeyEncryptionPtrType ClusterPropertiesCustomerManagedKeyEncryptionArgs

func ClusterPropertiesCustomerManagedKeyEncryptionPtr(v *ClusterPropertiesCustomerManagedKeyEncryptionArgs) ClusterPropertiesCustomerManagedKeyEncryptionPtrInput {
	return (*clusterPropertiesCustomerManagedKeyEncryptionPtrType)(v)
}

func (*clusterPropertiesCustomerManagedKeyEncryptionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterPropertiesCustomerManagedKeyEncryption)(nil)).Elem()
}

func (i *clusterPropertiesCustomerManagedKeyEncryptionPtrType) ToClusterPropertiesCustomerManagedKeyEncryptionPtrOutput() ClusterPropertiesCustomerManagedKeyEncryptionPtrOutput {
	return i.ToClusterPropertiesCustomerManagedKeyEncryptionPtrOutputWithContext(context.Background())
}

func (i *clusterPropertiesCustomerManagedKeyEncryptionPtrType) ToClusterPropertiesCustomerManagedKeyEncryptionPtrOutputWithContext(ctx context.Context) ClusterPropertiesCustomerManagedKeyEncryptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterPropertiesCustomerManagedKeyEncryptionPtrOutput)
}

// All Customer-managed key encryption properties for the resource. Set this to an empty object to use Microsoft-managed key encryption.
type ClusterPropertiesCustomerManagedKeyEncryptionOutput struct{ *pulumi.OutputState }

func (ClusterPropertiesCustomerManagedKeyEncryptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterPropertiesCustomerManagedKeyEncryption)(nil)).Elem()
}

func (o ClusterPropertiesCustomerManagedKeyEncryptionOutput) ToClusterPropertiesCustomerManagedKeyEncryptionOutput() ClusterPropertiesCustomerManagedKeyEncryptionOutput {
	return o
}

func (o ClusterPropertiesCustomerManagedKeyEncryptionOutput) ToClusterPropertiesCustomerManagedKeyEncryptionOutputWithContext(ctx context.Context) ClusterPropertiesCustomerManagedKeyEncryptionOutput {
	return o
}

func (o ClusterPropertiesCustomerManagedKeyEncryptionOutput) ToClusterPropertiesCustomerManagedKeyEncryptionPtrOutput() ClusterPropertiesCustomerManagedKeyEncryptionPtrOutput {
	return o.ToClusterPropertiesCustomerManagedKeyEncryptionPtrOutputWithContext(context.Background())
}

func (o ClusterPropertiesCustomerManagedKeyEncryptionOutput) ToClusterPropertiesCustomerManagedKeyEncryptionPtrOutputWithContext(ctx context.Context) ClusterPropertiesCustomerManagedKeyEncryptionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterPropertiesCustomerManagedKeyEncryption) *ClusterPropertiesCustomerManagedKeyEncryption {
		return &v
	}).(ClusterPropertiesCustomerManagedKeyEncryptionPtrOutput)
}

// All identity configuration for Customer-managed key settings defining which identity should be used to auth to Key Vault.
func (o ClusterPropertiesCustomerManagedKeyEncryptionOutput) KeyEncryptionKeyIdentity() ClusterPropertiesKeyEncryptionKeyIdentityPtrOutput {
	return o.ApplyT(func(v ClusterPropertiesCustomerManagedKeyEncryption) *ClusterPropertiesKeyEncryptionKeyIdentity {
		return v.KeyEncryptionKeyIdentity
	}).(ClusterPropertiesKeyEncryptionKeyIdentityPtrOutput)
}

// Key encryption key Url, versioned only. Ex: https://contosovault.vault.azure.net/keys/contosokek/562a4bb76b524a1493a6afe8e536ee78
func (o ClusterPropertiesCustomerManagedKeyEncryptionOutput) KeyEncryptionKeyUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterPropertiesCustomerManagedKeyEncryption) *string { return v.KeyEncryptionKeyUrl }).(pulumi.StringPtrOutput)
}

type ClusterPropertiesCustomerManagedKeyEncryptionPtrOutput struct{ *pulumi.OutputState }

func (ClusterPropertiesCustomerManagedKeyEncryptionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterPropertiesCustomerManagedKeyEncryption)(nil)).Elem()
}

func (o ClusterPropertiesCustomerManagedKeyEncryptionPtrOutput) ToClusterPropertiesCustomerManagedKeyEncryptionPtrOutput() ClusterPropertiesCustomerManagedKeyEncryptionPtrOutput {
	return o
}

func (o ClusterPropertiesCustomerManagedKeyEncryptionPtrOutput) ToClusterPropertiesCustomerManagedKeyEncryptionPtrOutputWithContext(ctx context.Context) ClusterPropertiesCustomerManagedKeyEncryptionPtrOutput {
	return o
}

func (o ClusterPropertiesCustomerManagedKeyEncryptionPtrOutput) Elem() ClusterPropertiesCustomerManagedKeyEncryptionOutput {
	return o.ApplyT(func(v *ClusterPropertiesCustomerManagedKeyEncryption) ClusterPropertiesCustomerManagedKeyEncryption {
		if v != nil {
			return *v
		}
		var ret ClusterPropertiesCustomerManagedKeyEncryption
		return ret
	}).(ClusterPropertiesCustomerManagedKeyEncryptionOutput)
}

// All identity configuration for Customer-managed key settings defining which identity should be used to auth to Key Vault.
func (o ClusterPropertiesCustomerManagedKeyEncryptionPtrOutput) KeyEncryptionKeyIdentity() ClusterPropertiesKeyEncryptionKeyIdentityPtrOutput {
	return o.ApplyT(func(v *ClusterPropertiesCustomerManagedKeyEncryption) *ClusterPropertiesKeyEncryptionKeyIdentity {
		if v == nil {
			return nil
		}
		return v.KeyEncryptionKeyIdentity
	}).(ClusterPropertiesKeyEncryptionKeyIdentityPtrOutput)
}

// Key encryption key Url, versioned only. Ex: https://contosovault.vault.azure.net/keys/contosokek/562a4bb76b524a1493a6afe8e536ee78
func (o ClusterPropertiesCustomerManagedKeyEncryptionPtrOutput) KeyEncryptionKeyUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterPropertiesCustomerManagedKeyEncryption) *string {
		if v == nil {
			return nil
		}
		return v.KeyEncryptionKeyUrl
	}).(pulumi.StringPtrOutput)
}

// Encryption-at-rest configuration for the cluster.
type ClusterPropertiesEncryption struct {
	// All Customer-managed key encryption properties for the resource. Set this to an empty object to use Microsoft-managed key encryption.
	CustomerManagedKeyEncryption *ClusterPropertiesCustomerManagedKeyEncryption `pulumi:"customerManagedKeyEncryption"`
}

// ClusterPropertiesEncryptionInput is an input type that accepts ClusterPropertiesEncryptionArgs and ClusterPropertiesEncryptionOutput values.
// You can construct a concrete instance of `ClusterPropertiesEncryptionInput` via:
//
//	ClusterPropertiesEncryptionArgs{...}
type ClusterPropertiesEncryptionInput interface {
	pulumi.Input

	ToClusterPropertiesEncryptionOutput() ClusterPropertiesEncryptionOutput
	ToClusterPropertiesEncryptionOutputWithContext(context.Context) ClusterPropertiesEncryptionOutput
}

// Encryption-at-rest configuration for the cluster.
type ClusterPropertiesEncryptionArgs struct {
	// All Customer-managed key encryption properties for the resource. Set this to an empty object to use Microsoft-managed key encryption.
	CustomerManagedKeyEncryption ClusterPropertiesCustomerManagedKeyEncryptionPtrInput `pulumi:"customerManagedKeyEncryption"`
}

func (ClusterPropertiesEncryptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterPropertiesEncryption)(nil)).Elem()
}

func (i ClusterPropertiesEncryptionArgs) ToClusterPropertiesEncryptionOutput() ClusterPropertiesEncryptionOutput {
	return i.ToClusterPropertiesEncryptionOutputWithContext(context.Background())
}

func (i ClusterPropertiesEncryptionArgs) ToClusterPropertiesEncryptionOutputWithContext(ctx context.Context) ClusterPropertiesEncryptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterPropertiesEncryptionOutput)
}

func (i ClusterPropertiesEncryptionArgs) ToClusterPropertiesEncryptionPtrOutput() ClusterPropertiesEncryptionPtrOutput {
	return i.ToClusterPropertiesEncryptionPtrOutputWithContext(context.Background())
}

func (i ClusterPropertiesEncryptionArgs) ToClusterPropertiesEncryptionPtrOutputWithContext(ctx context.Context) ClusterPropertiesEncryptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterPropertiesEncryptionOutput).ToClusterPropertiesEncryptionPtrOutputWithContext(ctx)
}

// ClusterPropertiesEncryptionPtrInput is an input type that accepts ClusterPropertiesEncryptionArgs, ClusterPropertiesEncryptionPtr and ClusterPropertiesEncryptionPtrOutput values.
// You can construct a concrete instance of `ClusterPropertiesEncryptionPtrInput` via:
//
//	        ClusterPropertiesEncryptionArgs{...}
//
//	or:
//
//	        nil
type ClusterPropertiesEncryptionPtrInput interface {
	pulumi.Input

	ToClusterPropertiesEncryptionPtrOutput() ClusterPropertiesEncryptionPtrOutput
	ToClusterPropertiesEncryptionPtrOutputWithContext(context.Context) ClusterPropertiesEncryptionPtrOutput
}

type clusterPropertiesEncryptionPtrType ClusterPropertiesEncryptionArgs

func ClusterPropertiesEncryptionPtr(v *ClusterPropertiesEncryptionArgs) ClusterPropertiesEncryptionPtrInput {
	return (*clusterPropertiesEncryptionPtrType)(v)
}

func (*clusterPropertiesEncryptionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterPropertiesEncryption)(nil)).Elem()
}

func (i *clusterPropertiesEncryptionPtrType) ToClusterPropertiesEncryptionPtrOutput() ClusterPropertiesEncryptionPtrOutput {
	return i.ToClusterPropertiesEncryptionPtrOutputWithContext(context.Background())
}

func (i *clusterPropertiesEncryptionPtrType) ToClusterPropertiesEncryptionPtrOutputWithContext(ctx context.Context) ClusterPropertiesEncryptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterPropertiesEncryptionPtrOutput)
}

// Encryption-at-rest configuration for the cluster.
type ClusterPropertiesEncryptionOutput struct{ *pulumi.OutputState }

func (ClusterPropertiesEncryptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterPropertiesEncryption)(nil)).Elem()
}

func (o ClusterPropertiesEncryptionOutput) ToClusterPropertiesEncryptionOutput() ClusterPropertiesEncryptionOutput {
	return o
}

func (o ClusterPropertiesEncryptionOutput) ToClusterPropertiesEncryptionOutputWithContext(ctx context.Context) ClusterPropertiesEncryptionOutput {
	return o
}

func (o ClusterPropertiesEncryptionOutput) ToClusterPropertiesEncryptionPtrOutput() ClusterPropertiesEncryptionPtrOutput {
	return o.ToClusterPropertiesEncryptionPtrOutputWithContext(context.Background())
}

func (o ClusterPropertiesEncryptionOutput) ToClusterPropertiesEncryptionPtrOutputWithContext(ctx context.Context) ClusterPropertiesEncryptionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterPropertiesEncryption) *ClusterPropertiesEncryption {
		return &v
	}).(ClusterPropertiesEncryptionPtrOutput)
}

// All Customer-managed key encryption properties for the resource. Set this to an empty object to use Microsoft-managed key encryption.
func (o ClusterPropertiesEncryptionOutput) CustomerManagedKeyEncryption() ClusterPropertiesCustomerManagedKeyEncryptionPtrOutput {
	return o.ApplyT(func(v ClusterPropertiesEncryption) *ClusterPropertiesCustomerManagedKeyEncryption {
		return v.CustomerManagedKeyEncryption
	}).(ClusterPropertiesCustomerManagedKeyEncryptionPtrOutput)
}

type ClusterPropertiesEncryptionPtrOutput struct{ *pulumi.OutputState }

func (ClusterPropertiesEncryptionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterPropertiesEncryption)(nil)).Elem()
}

func (o ClusterPropertiesEncryptionPtrOutput) ToClusterPropertiesEncryptionPtrOutput() ClusterPropertiesEncryptionPtrOutput {
	return o
}

func (o ClusterPropertiesEncryptionPtrOutput) ToClusterPropertiesEncryptionPtrOutputWithContext(ctx context.Context) ClusterPropertiesEncryptionPtrOutput {
	return o
}

func (o ClusterPropertiesEncryptionPtrOutput) Elem() ClusterPropertiesEncryptionOutput {
	return o.ApplyT(func(v *ClusterPropertiesEncryption) ClusterPropertiesEncryption {
		if v != nil {
			return *v
		}
		var ret ClusterPropertiesEncryption
		return ret
	}).(ClusterPropertiesEncryptionOutput)
}

// All Customer-managed key encryption properties for the resource. Set this to an empty object to use Microsoft-managed key encryption.
func (o ClusterPropertiesEncryptionPtrOutput) CustomerManagedKeyEncryption() ClusterPropertiesCustomerManagedKeyEncryptionPtrOutput {
	return o.ApplyT(func(v *ClusterPropertiesEncryption) *ClusterPropertiesCustomerManagedKeyEncryption {
		if v == nil {
			return nil
		}
		return v.CustomerManagedKeyEncryption
	}).(ClusterPropertiesCustomerManagedKeyEncryptionPtrOutput)
}

// All identity configuration for Customer-managed key settings defining which identity should be used to auth to Key Vault.
type ClusterPropertiesKeyEncryptionKeyIdentity struct {
	// Only userAssignedIdentity is supported in this API version; other types may be supported in the future
	IdentityType *string `pulumi:"identityType"`
	// User assigned identity to use for accessing key encryption key Url. Ex: /subscriptions/<sub uuid>/resourceGroups/<resource group>/providers/Microsoft.ManagedIdentity/userAssignedIdentities/myId.
	UserAssignedIdentityResourceId *string `pulumi:"userAssignedIdentityResourceId"`
}

// ClusterPropertiesKeyEncryptionKeyIdentityInput is an input type that accepts ClusterPropertiesKeyEncryptionKeyIdentityArgs and ClusterPropertiesKeyEncryptionKeyIdentityOutput values.
// You can construct a concrete instance of `ClusterPropertiesKeyEncryptionKeyIdentityInput` via:
//
//	ClusterPropertiesKeyEncryptionKeyIdentityArgs{...}
type ClusterPropertiesKeyEncryptionKeyIdentityInput interface {
	pulumi.Input

	ToClusterPropertiesKeyEncryptionKeyIdentityOutput() ClusterPropertiesKeyEncryptionKeyIdentityOutput
	ToClusterPropertiesKeyEncryptionKeyIdentityOutputWithContext(context.Context) ClusterPropertiesKeyEncryptionKeyIdentityOutput
}

// All identity configuration for Customer-managed key settings defining which identity should be used to auth to Key Vault.
type ClusterPropertiesKeyEncryptionKeyIdentityArgs struct {
	// Only userAssignedIdentity is supported in this API version; other types may be supported in the future
	IdentityType pulumi.StringPtrInput `pulumi:"identityType"`
	// User assigned identity to use for accessing key encryption key Url. Ex: /subscriptions/<sub uuid>/resourceGroups/<resource group>/providers/Microsoft.ManagedIdentity/userAssignedIdentities/myId.
	UserAssignedIdentityResourceId pulumi.StringPtrInput `pulumi:"userAssignedIdentityResourceId"`
}

func (ClusterPropertiesKeyEncryptionKeyIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterPropertiesKeyEncryptionKeyIdentity)(nil)).Elem()
}

func (i ClusterPropertiesKeyEncryptionKeyIdentityArgs) ToClusterPropertiesKeyEncryptionKeyIdentityOutput() ClusterPropertiesKeyEncryptionKeyIdentityOutput {
	return i.ToClusterPropertiesKeyEncryptionKeyIdentityOutputWithContext(context.Background())
}

func (i ClusterPropertiesKeyEncryptionKeyIdentityArgs) ToClusterPropertiesKeyEncryptionKeyIdentityOutputWithContext(ctx context.Context) ClusterPropertiesKeyEncryptionKeyIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterPropertiesKeyEncryptionKeyIdentityOutput)
}

func (i ClusterPropertiesKeyEncryptionKeyIdentityArgs) ToClusterPropertiesKeyEncryptionKeyIdentityPtrOutput() ClusterPropertiesKeyEncryptionKeyIdentityPtrOutput {
	return i.ToClusterPropertiesKeyEncryptionKeyIdentityPtrOutputWithContext(context.Background())
}

func (i ClusterPropertiesKeyEncryptionKeyIdentityArgs) ToClusterPropertiesKeyEncryptionKeyIdentityPtrOutputWithContext(ctx context.Context) ClusterPropertiesKeyEncryptionKeyIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterPropertiesKeyEncryptionKeyIdentityOutput).ToClusterPropertiesKeyEncryptionKeyIdentityPtrOutputWithContext(ctx)
}

// ClusterPropertiesKeyEncryptionKeyIdentityPtrInput is an input type that accepts ClusterPropertiesKeyEncryptionKeyIdentityArgs, ClusterPropertiesKeyEncryptionKeyIdentityPtr and ClusterPropertiesKeyEncryptionKeyIdentityPtrOutput values.
// You can construct a concrete instance of `ClusterPropertiesKeyEncryptionKeyIdentityPtrInput` via:
//
//	        ClusterPropertiesKeyEncryptionKeyIdentityArgs{...}
//
//	or:
//
//	        nil
type ClusterPropertiesKeyEncryptionKeyIdentityPtrInput interface {
	pulumi.Input

	ToClusterPropertiesKeyEncryptionKeyIdentityPtrOutput() ClusterPropertiesKeyEncryptionKeyIdentityPtrOutput
	ToClusterPropertiesKeyEncryptionKeyIdentityPtrOutputWithContext(context.Context) ClusterPropertiesKeyEncryptionKeyIdentityPtrOutput
}

type clusterPropertiesKeyEncryptionKeyIdentityPtrType ClusterPropertiesKeyEncryptionKeyIdentityArgs

func ClusterPropertiesKeyEncryptionKeyIdentityPtr(v *ClusterPropertiesKeyEncryptionKeyIdentityArgs) ClusterPropertiesKeyEncryptionKeyIdentityPtrInput {
	return (*clusterPropertiesKeyEncryptionKeyIdentityPtrType)(v)
}

func (*clusterPropertiesKeyEncryptionKeyIdentityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterPropertiesKeyEncryptionKeyIdentity)(nil)).Elem()
}

func (i *clusterPropertiesKeyEncryptionKeyIdentityPtrType) ToClusterPropertiesKeyEncryptionKeyIdentityPtrOutput() ClusterPropertiesKeyEncryptionKeyIdentityPtrOutput {
	return i.ToClusterPropertiesKeyEncryptionKeyIdentityPtrOutputWithContext(context.Background())
}

func (i *clusterPropertiesKeyEncryptionKeyIdentityPtrType) ToClusterPropertiesKeyEncryptionKeyIdentityPtrOutputWithContext(ctx context.Context) ClusterPropertiesKeyEncryptionKeyIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterPropertiesKeyEncryptionKeyIdentityPtrOutput)
}

// All identity configuration for Customer-managed key settings defining which identity should be used to auth to Key Vault.
type ClusterPropertiesKeyEncryptionKeyIdentityOutput struct{ *pulumi.OutputState }

func (ClusterPropertiesKeyEncryptionKeyIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterPropertiesKeyEncryptionKeyIdentity)(nil)).Elem()
}

func (o ClusterPropertiesKeyEncryptionKeyIdentityOutput) ToClusterPropertiesKeyEncryptionKeyIdentityOutput() ClusterPropertiesKeyEncryptionKeyIdentityOutput {
	return o
}

func (o ClusterPropertiesKeyEncryptionKeyIdentityOutput) ToClusterPropertiesKeyEncryptionKeyIdentityOutputWithContext(ctx context.Context) ClusterPropertiesKeyEncryptionKeyIdentityOutput {
	return o
}

func (o ClusterPropertiesKeyEncryptionKeyIdentityOutput) ToClusterPropertiesKeyEncryptionKeyIdentityPtrOutput() ClusterPropertiesKeyEncryptionKeyIdentityPtrOutput {
	return o.ToClusterPropertiesKeyEncryptionKeyIdentityPtrOutputWithContext(context.Background())
}

func (o ClusterPropertiesKeyEncryptionKeyIdentityOutput) ToClusterPropertiesKeyEncryptionKeyIdentityPtrOutputWithContext(ctx context.Context) ClusterPropertiesKeyEncryptionKeyIdentityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterPropertiesKeyEncryptionKeyIdentity) *ClusterPropertiesKeyEncryptionKeyIdentity {
		return &v
	}).(ClusterPropertiesKeyEncryptionKeyIdentityPtrOutput)
}

// Only userAssignedIdentity is supported in this API version; other types may be supported in the future
func (o ClusterPropertiesKeyEncryptionKeyIdentityOutput) IdentityType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterPropertiesKeyEncryptionKeyIdentity) *string { return v.IdentityType }).(pulumi.StringPtrOutput)
}

// User assigned identity to use for accessing key encryption key Url. Ex: /subscriptions/<sub uuid>/resourceGroups/<resource group>/providers/Microsoft.ManagedIdentity/userAssignedIdentities/myId.
func (o ClusterPropertiesKeyEncryptionKeyIdentityOutput) UserAssignedIdentityResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterPropertiesKeyEncryptionKeyIdentity) *string { return v.UserAssignedIdentityResourceId }).(pulumi.StringPtrOutput)
}

type ClusterPropertiesKeyEncryptionKeyIdentityPtrOutput struct{ *pulumi.OutputState }

func (ClusterPropertiesKeyEncryptionKeyIdentityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterPropertiesKeyEncryptionKeyIdentity)(nil)).Elem()
}

func (o ClusterPropertiesKeyEncryptionKeyIdentityPtrOutput) ToClusterPropertiesKeyEncryptionKeyIdentityPtrOutput() ClusterPropertiesKeyEncryptionKeyIdentityPtrOutput {
	return o
}

func (o ClusterPropertiesKeyEncryptionKeyIdentityPtrOutput) ToClusterPropertiesKeyEncryptionKeyIdentityPtrOutputWithContext(ctx context.Context) ClusterPropertiesKeyEncryptionKeyIdentityPtrOutput {
	return o
}

func (o ClusterPropertiesKeyEncryptionKeyIdentityPtrOutput) Elem() ClusterPropertiesKeyEncryptionKeyIdentityOutput {
	return o.ApplyT(func(v *ClusterPropertiesKeyEncryptionKeyIdentity) ClusterPropertiesKeyEncryptionKeyIdentity {
		if v != nil {
			return *v
		}
		var ret ClusterPropertiesKeyEncryptionKeyIdentity
		return ret
	}).(ClusterPropertiesKeyEncryptionKeyIdentityOutput)
}

// Only userAssignedIdentity is supported in this API version; other types may be supported in the future
func (o ClusterPropertiesKeyEncryptionKeyIdentityPtrOutput) IdentityType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterPropertiesKeyEncryptionKeyIdentity) *string {
		if v == nil {
			return nil
		}
		return v.IdentityType
	}).(pulumi.StringPtrOutput)
}

// User assigned identity to use for accessing key encryption key Url. Ex: /subscriptions/<sub uuid>/resourceGroups/<resource group>/providers/Microsoft.ManagedIdentity/userAssignedIdentities/myId.
func (o ClusterPropertiesKeyEncryptionKeyIdentityPtrOutput) UserAssignedIdentityResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterPropertiesKeyEncryptionKeyIdentity) *string {
		if v == nil {
			return nil
		}
		return v.UserAssignedIdentityResourceId
	}).(pulumi.StringPtrOutput)
}

// All Customer-managed key encryption properties for the resource. Set this to an empty object to use Microsoft-managed key encryption.
type ClusterPropertiesResponseCustomerManagedKeyEncryption struct {
	// All identity configuration for Customer-managed key settings defining which identity should be used to auth to Key Vault.
	KeyEncryptionKeyIdentity *ClusterPropertiesResponseKeyEncryptionKeyIdentity `pulumi:"keyEncryptionKeyIdentity"`
	// Key encryption key Url, versioned only. Ex: https://contosovault.vault.azure.net/keys/contosokek/562a4bb76b524a1493a6afe8e536ee78
	KeyEncryptionKeyUrl *string `pulumi:"keyEncryptionKeyUrl"`
}

// All Customer-managed key encryption properties for the resource. Set this to an empty object to use Microsoft-managed key encryption.
type ClusterPropertiesResponseCustomerManagedKeyEncryptionOutput struct{ *pulumi.OutputState }

func (ClusterPropertiesResponseCustomerManagedKeyEncryptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterPropertiesResponseCustomerManagedKeyEncryption)(nil)).Elem()
}

func (o ClusterPropertiesResponseCustomerManagedKeyEncryptionOutput) ToClusterPropertiesResponseCustomerManagedKeyEncryptionOutput() ClusterPropertiesResponseCustomerManagedKeyEncryptionOutput {
	return o
}

func (o ClusterPropertiesResponseCustomerManagedKeyEncryptionOutput) ToClusterPropertiesResponseCustomerManagedKeyEncryptionOutputWithContext(ctx context.Context) ClusterPropertiesResponseCustomerManagedKeyEncryptionOutput {
	return o
}

// All identity configuration for Customer-managed key settings defining which identity should be used to auth to Key Vault.
func (o ClusterPropertiesResponseCustomerManagedKeyEncryptionOutput) KeyEncryptionKeyIdentity() ClusterPropertiesResponseKeyEncryptionKeyIdentityPtrOutput {
	return o.ApplyT(func(v ClusterPropertiesResponseCustomerManagedKeyEncryption) *ClusterPropertiesResponseKeyEncryptionKeyIdentity {
		return v.KeyEncryptionKeyIdentity
	}).(ClusterPropertiesResponseKeyEncryptionKeyIdentityPtrOutput)
}

// Key encryption key Url, versioned only. Ex: https://contosovault.vault.azure.net/keys/contosokek/562a4bb76b524a1493a6afe8e536ee78
func (o ClusterPropertiesResponseCustomerManagedKeyEncryptionOutput) KeyEncryptionKeyUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterPropertiesResponseCustomerManagedKeyEncryption) *string { return v.KeyEncryptionKeyUrl }).(pulumi.StringPtrOutput)
}

type ClusterPropertiesResponseCustomerManagedKeyEncryptionPtrOutput struct{ *pulumi.OutputState }

func (ClusterPropertiesResponseCustomerManagedKeyEncryptionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterPropertiesResponseCustomerManagedKeyEncryption)(nil)).Elem()
}

func (o ClusterPropertiesResponseCustomerManagedKeyEncryptionPtrOutput) ToClusterPropertiesResponseCustomerManagedKeyEncryptionPtrOutput() ClusterPropertiesResponseCustomerManagedKeyEncryptionPtrOutput {
	return o
}

func (o ClusterPropertiesResponseCustomerManagedKeyEncryptionPtrOutput) ToClusterPropertiesResponseCustomerManagedKeyEncryptionPtrOutputWithContext(ctx context.Context) ClusterPropertiesResponseCustomerManagedKeyEncryptionPtrOutput {
	return o
}

func (o ClusterPropertiesResponseCustomerManagedKeyEncryptionPtrOutput) Elem() ClusterPropertiesResponseCustomerManagedKeyEncryptionOutput {
	return o.ApplyT(func(v *ClusterPropertiesResponseCustomerManagedKeyEncryption) ClusterPropertiesResponseCustomerManagedKeyEncryption {
		if v != nil {
			return *v
		}
		var ret ClusterPropertiesResponseCustomerManagedKeyEncryption
		return ret
	}).(ClusterPropertiesResponseCustomerManagedKeyEncryptionOutput)
}

// All identity configuration for Customer-managed key settings defining which identity should be used to auth to Key Vault.
func (o ClusterPropertiesResponseCustomerManagedKeyEncryptionPtrOutput) KeyEncryptionKeyIdentity() ClusterPropertiesResponseKeyEncryptionKeyIdentityPtrOutput {
	return o.ApplyT(func(v *ClusterPropertiesResponseCustomerManagedKeyEncryption) *ClusterPropertiesResponseKeyEncryptionKeyIdentity {
		if v == nil {
			return nil
		}
		return v.KeyEncryptionKeyIdentity
	}).(ClusterPropertiesResponseKeyEncryptionKeyIdentityPtrOutput)
}

// Key encryption key Url, versioned only. Ex: https://contosovault.vault.azure.net/keys/contosokek/562a4bb76b524a1493a6afe8e536ee78
func (o ClusterPropertiesResponseCustomerManagedKeyEncryptionPtrOutput) KeyEncryptionKeyUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterPropertiesResponseCustomerManagedKeyEncryption) *string {
		if v == nil {
			return nil
		}
		return v.KeyEncryptionKeyUrl
	}).(pulumi.StringPtrOutput)
}

// Encryption-at-rest configuration for the cluster.
type ClusterPropertiesResponseEncryption struct {
	// All Customer-managed key encryption properties for the resource. Set this to an empty object to use Microsoft-managed key encryption.
	CustomerManagedKeyEncryption *ClusterPropertiesResponseCustomerManagedKeyEncryption `pulumi:"customerManagedKeyEncryption"`
}

// Encryption-at-rest configuration for the cluster.
type ClusterPropertiesResponseEncryptionOutput struct{ *pulumi.OutputState }

func (ClusterPropertiesResponseEncryptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterPropertiesResponseEncryption)(nil)).Elem()
}

func (o ClusterPropertiesResponseEncryptionOutput) ToClusterPropertiesResponseEncryptionOutput() ClusterPropertiesResponseEncryptionOutput {
	return o
}

func (o ClusterPropertiesResponseEncryptionOutput) ToClusterPropertiesResponseEncryptionOutputWithContext(ctx context.Context) ClusterPropertiesResponseEncryptionOutput {
	return o
}

// All Customer-managed key encryption properties for the resource. Set this to an empty object to use Microsoft-managed key encryption.
func (o ClusterPropertiesResponseEncryptionOutput) CustomerManagedKeyEncryption() ClusterPropertiesResponseCustomerManagedKeyEncryptionPtrOutput {
	return o.ApplyT(func(v ClusterPropertiesResponseEncryption) *ClusterPropertiesResponseCustomerManagedKeyEncryption {
		return v.CustomerManagedKeyEncryption
	}).(ClusterPropertiesResponseCustomerManagedKeyEncryptionPtrOutput)
}

type ClusterPropertiesResponseEncryptionPtrOutput struct{ *pulumi.OutputState }

func (ClusterPropertiesResponseEncryptionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterPropertiesResponseEncryption)(nil)).Elem()
}

func (o ClusterPropertiesResponseEncryptionPtrOutput) ToClusterPropertiesResponseEncryptionPtrOutput() ClusterPropertiesResponseEncryptionPtrOutput {
	return o
}

func (o ClusterPropertiesResponseEncryptionPtrOutput) ToClusterPropertiesResponseEncryptionPtrOutputWithContext(ctx context.Context) ClusterPropertiesResponseEncryptionPtrOutput {
	return o
}

func (o ClusterPropertiesResponseEncryptionPtrOutput) Elem() ClusterPropertiesResponseEncryptionOutput {
	return o.ApplyT(func(v *ClusterPropertiesResponseEncryption) ClusterPropertiesResponseEncryption {
		if v != nil {
			return *v
		}
		var ret ClusterPropertiesResponseEncryption
		return ret
	}).(ClusterPropertiesResponseEncryptionOutput)
}

// All Customer-managed key encryption properties for the resource. Set this to an empty object to use Microsoft-managed key encryption.
func (o ClusterPropertiesResponseEncryptionPtrOutput) CustomerManagedKeyEncryption() ClusterPropertiesResponseCustomerManagedKeyEncryptionPtrOutput {
	return o.ApplyT(func(v *ClusterPropertiesResponseEncryption) *ClusterPropertiesResponseCustomerManagedKeyEncryption {
		if v == nil {
			return nil
		}
		return v.CustomerManagedKeyEncryption
	}).(ClusterPropertiesResponseCustomerManagedKeyEncryptionPtrOutput)
}

// All identity configuration for Customer-managed key settings defining which identity should be used to auth to Key Vault.
type ClusterPropertiesResponseKeyEncryptionKeyIdentity struct {
	// Only userAssignedIdentity is supported in this API version; other types may be supported in the future
	IdentityType *string `pulumi:"identityType"`
	// User assigned identity to use for accessing key encryption key Url. Ex: /subscriptions/<sub uuid>/resourceGroups/<resource group>/providers/Microsoft.ManagedIdentity/userAssignedIdentities/myId.
	UserAssignedIdentityResourceId *string `pulumi:"userAssignedIdentityResourceId"`
}

// All identity configuration for Customer-managed key settings defining which identity should be used to auth to Key Vault.
type ClusterPropertiesResponseKeyEncryptionKeyIdentityOutput struct{ *pulumi.OutputState }

func (ClusterPropertiesResponseKeyEncryptionKeyIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterPropertiesResponseKeyEncryptionKeyIdentity)(nil)).Elem()
}

func (o ClusterPropertiesResponseKeyEncryptionKeyIdentityOutput) ToClusterPropertiesResponseKeyEncryptionKeyIdentityOutput() ClusterPropertiesResponseKeyEncryptionKeyIdentityOutput {
	return o
}

func (o ClusterPropertiesResponseKeyEncryptionKeyIdentityOutput) ToClusterPropertiesResponseKeyEncryptionKeyIdentityOutputWithContext(ctx context.Context) ClusterPropertiesResponseKeyEncryptionKeyIdentityOutput {
	return o
}

// Only userAssignedIdentity is supported in this API version; other types may be supported in the future
func (o ClusterPropertiesResponseKeyEncryptionKeyIdentityOutput) IdentityType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterPropertiesResponseKeyEncryptionKeyIdentity) *string { return v.IdentityType }).(pulumi.StringPtrOutput)
}

// User assigned identity to use for accessing key encryption key Url. Ex: /subscriptions/<sub uuid>/resourceGroups/<resource group>/providers/Microsoft.ManagedIdentity/userAssignedIdentities/myId.
func (o ClusterPropertiesResponseKeyEncryptionKeyIdentityOutput) UserAssignedIdentityResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterPropertiesResponseKeyEncryptionKeyIdentity) *string {
		return v.UserAssignedIdentityResourceId
	}).(pulumi.StringPtrOutput)
}

type ClusterPropertiesResponseKeyEncryptionKeyIdentityPtrOutput struct{ *pulumi.OutputState }

func (ClusterPropertiesResponseKeyEncryptionKeyIdentityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterPropertiesResponseKeyEncryptionKeyIdentity)(nil)).Elem()
}

func (o ClusterPropertiesResponseKeyEncryptionKeyIdentityPtrOutput) ToClusterPropertiesResponseKeyEncryptionKeyIdentityPtrOutput() ClusterPropertiesResponseKeyEncryptionKeyIdentityPtrOutput {
	return o
}

func (o ClusterPropertiesResponseKeyEncryptionKeyIdentityPtrOutput) ToClusterPropertiesResponseKeyEncryptionKeyIdentityPtrOutputWithContext(ctx context.Context) ClusterPropertiesResponseKeyEncryptionKeyIdentityPtrOutput {
	return o
}

func (o ClusterPropertiesResponseKeyEncryptionKeyIdentityPtrOutput) Elem() ClusterPropertiesResponseKeyEncryptionKeyIdentityOutput {
	return o.ApplyT(func(v *ClusterPropertiesResponseKeyEncryptionKeyIdentity) ClusterPropertiesResponseKeyEncryptionKeyIdentity {
		if v != nil {
			return *v
		}
		var ret ClusterPropertiesResponseKeyEncryptionKeyIdentity
		return ret
	}).(ClusterPropertiesResponseKeyEncryptionKeyIdentityOutput)
}

// Only userAssignedIdentity is supported in this API version; other types may be supported in the future
func (o ClusterPropertiesResponseKeyEncryptionKeyIdentityPtrOutput) IdentityType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterPropertiesResponseKeyEncryptionKeyIdentity) *string {
		if v == nil {
			return nil
		}
		return v.IdentityType
	}).(pulumi.StringPtrOutput)
}

// User assigned identity to use for accessing key encryption key Url. Ex: /subscriptions/<sub uuid>/resourceGroups/<resource group>/providers/Microsoft.ManagedIdentity/userAssignedIdentities/myId.
func (o ClusterPropertiesResponseKeyEncryptionKeyIdentityPtrOutput) UserAssignedIdentityResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterPropertiesResponseKeyEncryptionKeyIdentity) *string {
		if v == nil {
			return nil
		}
		return v.UserAssignedIdentityResourceId
	}).(pulumi.StringPtrOutput)
}

// Optional set of properties to configure geo replication for this database.
type DatabasePropertiesGeoReplication struct {
	// Name for the group of linked database resources
	GroupNickname *string `pulumi:"groupNickname"`
	// List of database resources to link with this database
	LinkedDatabases []LinkedDatabase `pulumi:"linkedDatabases"`
}

// DatabasePropertiesGeoReplicationInput is an input type that accepts DatabasePropertiesGeoReplicationArgs and DatabasePropertiesGeoReplicationOutput values.
// You can construct a concrete instance of `DatabasePropertiesGeoReplicationInput` via:
//
//	DatabasePropertiesGeoReplicationArgs{...}
type DatabasePropertiesGeoReplicationInput interface {
	pulumi.Input

	ToDatabasePropertiesGeoReplicationOutput() DatabasePropertiesGeoReplicationOutput
	ToDatabasePropertiesGeoReplicationOutputWithContext(context.Context) DatabasePropertiesGeoReplicationOutput
}

// Optional set of properties to configure geo replication for this database.
type DatabasePropertiesGeoReplicationArgs struct {
	// Name for the group of linked database resources
	GroupNickname pulumi.StringPtrInput `pulumi:"groupNickname"`
	// List of database resources to link with this database
	LinkedDatabases LinkedDatabaseArrayInput `pulumi:"linkedDatabases"`
}

func (DatabasePropertiesGeoReplicationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabasePropertiesGeoReplication)(nil)).Elem()
}

func (i DatabasePropertiesGeoReplicationArgs) ToDatabasePropertiesGeoReplicationOutput() DatabasePropertiesGeoReplicationOutput {
	return i.ToDatabasePropertiesGeoReplicationOutputWithContext(context.Background())
}

func (i DatabasePropertiesGeoReplicationArgs) ToDatabasePropertiesGeoReplicationOutputWithContext(ctx context.Context) DatabasePropertiesGeoReplicationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabasePropertiesGeoReplicationOutput)
}

func (i DatabasePropertiesGeoReplicationArgs) ToDatabasePropertiesGeoReplicationPtrOutput() DatabasePropertiesGeoReplicationPtrOutput {
	return i.ToDatabasePropertiesGeoReplicationPtrOutputWithContext(context.Background())
}

func (i DatabasePropertiesGeoReplicationArgs) ToDatabasePropertiesGeoReplicationPtrOutputWithContext(ctx context.Context) DatabasePropertiesGeoReplicationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabasePropertiesGeoReplicationOutput).ToDatabasePropertiesGeoReplicationPtrOutputWithContext(ctx)
}

// DatabasePropertiesGeoReplicationPtrInput is an input type that accepts DatabasePropertiesGeoReplicationArgs, DatabasePropertiesGeoReplicationPtr and DatabasePropertiesGeoReplicationPtrOutput values.
// You can construct a concrete instance of `DatabasePropertiesGeoReplicationPtrInput` via:
//
//	        DatabasePropertiesGeoReplicationArgs{...}
//
//	or:
//
//	        nil
type DatabasePropertiesGeoReplicationPtrInput interface {
	pulumi.Input

	ToDatabasePropertiesGeoReplicationPtrOutput() DatabasePropertiesGeoReplicationPtrOutput
	ToDatabasePropertiesGeoReplicationPtrOutputWithContext(context.Context) DatabasePropertiesGeoReplicationPtrOutput
}

type databasePropertiesGeoReplicationPtrType DatabasePropertiesGeoReplicationArgs

func DatabasePropertiesGeoReplicationPtr(v *DatabasePropertiesGeoReplicationArgs) DatabasePropertiesGeoReplicationPtrInput {
	return (*databasePropertiesGeoReplicationPtrType)(v)
}

func (*databasePropertiesGeoReplicationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatabasePropertiesGeoReplication)(nil)).Elem()
}

func (i *databasePropertiesGeoReplicationPtrType) ToDatabasePropertiesGeoReplicationPtrOutput() DatabasePropertiesGeoReplicationPtrOutput {
	return i.ToDatabasePropertiesGeoReplicationPtrOutputWithContext(context.Background())
}

func (i *databasePropertiesGeoReplicationPtrType) ToDatabasePropertiesGeoReplicationPtrOutputWithContext(ctx context.Context) DatabasePropertiesGeoReplicationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabasePropertiesGeoReplicationPtrOutput)
}

// Optional set of properties to configure geo replication for this database.
type DatabasePropertiesGeoReplicationOutput struct{ *pulumi.OutputState }

func (DatabasePropertiesGeoReplicationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabasePropertiesGeoReplication)(nil)).Elem()
}

func (o DatabasePropertiesGeoReplicationOutput) ToDatabasePropertiesGeoReplicationOutput() DatabasePropertiesGeoReplicationOutput {
	return o
}

func (o DatabasePropertiesGeoReplicationOutput) ToDatabasePropertiesGeoReplicationOutputWithContext(ctx context.Context) DatabasePropertiesGeoReplicationOutput {
	return o
}

func (o DatabasePropertiesGeoReplicationOutput) ToDatabasePropertiesGeoReplicationPtrOutput() DatabasePropertiesGeoReplicationPtrOutput {
	return o.ToDatabasePropertiesGeoReplicationPtrOutputWithContext(context.Background())
}

func (o DatabasePropertiesGeoReplicationOutput) ToDatabasePropertiesGeoReplicationPtrOutputWithContext(ctx context.Context) DatabasePropertiesGeoReplicationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatabasePropertiesGeoReplication) *DatabasePropertiesGeoReplication {
		return &v
	}).(DatabasePropertiesGeoReplicationPtrOutput)
}

// Name for the group of linked database resources
func (o DatabasePropertiesGeoReplicationOutput) GroupNickname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabasePropertiesGeoReplication) *string { return v.GroupNickname }).(pulumi.StringPtrOutput)
}

// List of database resources to link with this database
func (o DatabasePropertiesGeoReplicationOutput) LinkedDatabases() LinkedDatabaseArrayOutput {
	return o.ApplyT(func(v DatabasePropertiesGeoReplication) []LinkedDatabase { return v.LinkedDatabases }).(LinkedDatabaseArrayOutput)
}

type DatabasePropertiesGeoReplicationPtrOutput struct{ *pulumi.OutputState }

func (DatabasePropertiesGeoReplicationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatabasePropertiesGeoReplication)(nil)).Elem()
}

func (o DatabasePropertiesGeoReplicationPtrOutput) ToDatabasePropertiesGeoReplicationPtrOutput() DatabasePropertiesGeoReplicationPtrOutput {
	return o
}

func (o DatabasePropertiesGeoReplicationPtrOutput) ToDatabasePropertiesGeoReplicationPtrOutputWithContext(ctx context.Context) DatabasePropertiesGeoReplicationPtrOutput {
	return o
}

func (o DatabasePropertiesGeoReplicationPtrOutput) Elem() DatabasePropertiesGeoReplicationOutput {
	return o.ApplyT(func(v *DatabasePropertiesGeoReplication) DatabasePropertiesGeoReplication {
		if v != nil {
			return *v
		}
		var ret DatabasePropertiesGeoReplication
		return ret
	}).(DatabasePropertiesGeoReplicationOutput)
}

// Name for the group of linked database resources
func (o DatabasePropertiesGeoReplicationPtrOutput) GroupNickname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatabasePropertiesGeoReplication) *string {
		if v == nil {
			return nil
		}
		return v.GroupNickname
	}).(pulumi.StringPtrOutput)
}

// List of database resources to link with this database
func (o DatabasePropertiesGeoReplicationPtrOutput) LinkedDatabases() LinkedDatabaseArrayOutput {
	return o.ApplyT(func(v *DatabasePropertiesGeoReplication) []LinkedDatabase {
		if v == nil {
			return nil
		}
		return v.LinkedDatabases
	}).(LinkedDatabaseArrayOutput)
}

// Optional set of properties to configure geo replication for this database.
type DatabasePropertiesResponseGeoReplication struct {
	// Name for the group of linked database resources
	GroupNickname *string `pulumi:"groupNickname"`
	// List of database resources to link with this database
	LinkedDatabases []LinkedDatabaseResponse `pulumi:"linkedDatabases"`
}

// Optional set of properties to configure geo replication for this database.
type DatabasePropertiesResponseGeoReplicationOutput struct{ *pulumi.OutputState }

func (DatabasePropertiesResponseGeoReplicationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabasePropertiesResponseGeoReplication)(nil)).Elem()
}

func (o DatabasePropertiesResponseGeoReplicationOutput) ToDatabasePropertiesResponseGeoReplicationOutput() DatabasePropertiesResponseGeoReplicationOutput {
	return o
}

func (o DatabasePropertiesResponseGeoReplicationOutput) ToDatabasePropertiesResponseGeoReplicationOutputWithContext(ctx context.Context) DatabasePropertiesResponseGeoReplicationOutput {
	return o
}

// Name for the group of linked database resources
func (o DatabasePropertiesResponseGeoReplicationOutput) GroupNickname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabasePropertiesResponseGeoReplication) *string { return v.GroupNickname }).(pulumi.StringPtrOutput)
}

// List of database resources to link with this database
func (o DatabasePropertiesResponseGeoReplicationOutput) LinkedDatabases() LinkedDatabaseResponseArrayOutput {
	return o.ApplyT(func(v DatabasePropertiesResponseGeoReplication) []LinkedDatabaseResponse { return v.LinkedDatabases }).(LinkedDatabaseResponseArrayOutput)
}

type DatabasePropertiesResponseGeoReplicationPtrOutput struct{ *pulumi.OutputState }

func (DatabasePropertiesResponseGeoReplicationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatabasePropertiesResponseGeoReplication)(nil)).Elem()
}

func (o DatabasePropertiesResponseGeoReplicationPtrOutput) ToDatabasePropertiesResponseGeoReplicationPtrOutput() DatabasePropertiesResponseGeoReplicationPtrOutput {
	return o
}

func (o DatabasePropertiesResponseGeoReplicationPtrOutput) ToDatabasePropertiesResponseGeoReplicationPtrOutputWithContext(ctx context.Context) DatabasePropertiesResponseGeoReplicationPtrOutput {
	return o
}

func (o DatabasePropertiesResponseGeoReplicationPtrOutput) Elem() DatabasePropertiesResponseGeoReplicationOutput {
	return o.ApplyT(func(v *DatabasePropertiesResponseGeoReplication) DatabasePropertiesResponseGeoReplication {
		if v != nil {
			return *v
		}
		var ret DatabasePropertiesResponseGeoReplication
		return ret
	}).(DatabasePropertiesResponseGeoReplicationOutput)
}

// Name for the group of linked database resources
func (o DatabasePropertiesResponseGeoReplicationPtrOutput) GroupNickname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatabasePropertiesResponseGeoReplication) *string {
		if v == nil {
			return nil
		}
		return v.GroupNickname
	}).(pulumi.StringPtrOutput)
}

// List of database resources to link with this database
func (o DatabasePropertiesResponseGeoReplicationPtrOutput) LinkedDatabases() LinkedDatabaseResponseArrayOutput {
	return o.ApplyT(func(v *DatabasePropertiesResponseGeoReplication) []LinkedDatabaseResponse {
		if v == nil {
			return nil
		}
		return v.LinkedDatabases
	}).(LinkedDatabaseResponseArrayOutput)
}

// SKU parameters supplied to the create RedisEnterprise operation.
type EnterpriseSku struct {
	// The size of the RedisEnterprise cluster. Defaults to 2 or 3 depending on SKU. Valid values are (2, 4, 6, ...) for Enterprise SKUs and (3, 9, 15, ...) for Flash SKUs.
	Capacity *int `pulumi:"capacity"`
	// The type of RedisEnterprise cluster to deploy. Possible values: (Enterprise_E10, EnterpriseFlash_F300 etc.)
	Name string `pulumi:"name"`
}

// EnterpriseSkuInput is an input type that accepts EnterpriseSkuArgs and EnterpriseSkuOutput values.
// You can construct a concrete instance of `EnterpriseSkuInput` via:
//
//	EnterpriseSkuArgs{...}
type EnterpriseSkuInput interface {
	pulumi.Input

	ToEnterpriseSkuOutput() EnterpriseSkuOutput
	ToEnterpriseSkuOutputWithContext(context.Context) EnterpriseSkuOutput
}

// SKU parameters supplied to the create RedisEnterprise operation.
type EnterpriseSkuArgs struct {
	// The size of the RedisEnterprise cluster. Defaults to 2 or 3 depending on SKU. Valid values are (2, 4, 6, ...) for Enterprise SKUs and (3, 9, 15, ...) for Flash SKUs.
	Capacity pulumi.IntPtrInput `pulumi:"capacity"`
	// The type of RedisEnterprise cluster to deploy. Possible values: (Enterprise_E10, EnterpriseFlash_F300 etc.)
	Name pulumi.StringInput `pulumi:"name"`
}

func (EnterpriseSkuArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EnterpriseSku)(nil)).Elem()
}

func (i EnterpriseSkuArgs) ToEnterpriseSkuOutput() EnterpriseSkuOutput {
	return i.ToEnterpriseSkuOutputWithContext(context.Background())
}

func (i EnterpriseSkuArgs) ToEnterpriseSkuOutputWithContext(ctx context.Context) EnterpriseSkuOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnterpriseSkuOutput)
}

// SKU parameters supplied to the create RedisEnterprise operation.
type EnterpriseSkuOutput struct{ *pulumi.OutputState }

func (EnterpriseSkuOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EnterpriseSku)(nil)).Elem()
}

func (o EnterpriseSkuOutput) ToEnterpriseSkuOutput() EnterpriseSkuOutput {
	return o
}

func (o EnterpriseSkuOutput) ToEnterpriseSkuOutputWithContext(ctx context.Context) EnterpriseSkuOutput {
	return o
}

// The size of the RedisEnterprise cluster. Defaults to 2 or 3 depending on SKU. Valid values are (2, 4, 6, ...) for Enterprise SKUs and (3, 9, 15, ...) for Flash SKUs.
func (o EnterpriseSkuOutput) Capacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v EnterpriseSku) *int { return v.Capacity }).(pulumi.IntPtrOutput)
}

// The type of RedisEnterprise cluster to deploy. Possible values: (Enterprise_E10, EnterpriseFlash_F300 etc.)
func (o EnterpriseSkuOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v EnterpriseSku) string { return v.Name }).(pulumi.StringOutput)
}

// SKU parameters supplied to the create RedisEnterprise operation.
type EnterpriseSkuResponse struct {
	// The size of the RedisEnterprise cluster. Defaults to 2 or 3 depending on SKU. Valid values are (2, 4, 6, ...) for Enterprise SKUs and (3, 9, 15, ...) for Flash SKUs.
	Capacity *int `pulumi:"capacity"`
	// The type of RedisEnterprise cluster to deploy. Possible values: (Enterprise_E10, EnterpriseFlash_F300 etc.)
	Name string `pulumi:"name"`
}

// SKU parameters supplied to the create RedisEnterprise operation.
type EnterpriseSkuResponseOutput struct{ *pulumi.OutputState }

func (EnterpriseSkuResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EnterpriseSkuResponse)(nil)).Elem()
}

func (o EnterpriseSkuResponseOutput) ToEnterpriseSkuResponseOutput() EnterpriseSkuResponseOutput {
	return o
}

func (o EnterpriseSkuResponseOutput) ToEnterpriseSkuResponseOutputWithContext(ctx context.Context) EnterpriseSkuResponseOutput {
	return o
}

// The size of the RedisEnterprise cluster. Defaults to 2 or 3 depending on SKU. Valid values are (2, 4, 6, ...) for Enterprise SKUs and (3, 9, 15, ...) for Flash SKUs.
func (o EnterpriseSkuResponseOutput) Capacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v EnterpriseSkuResponse) *int { return v.Capacity }).(pulumi.IntPtrOutput)
}

// The type of RedisEnterprise cluster to deploy. Possible values: (Enterprise_E10, EnterpriseFlash_F300 etc.)
func (o EnterpriseSkuResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v EnterpriseSkuResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Specifies details of a linked database resource.
type LinkedDatabase struct {
	// Resource ID of a database resource to link with this database.
	Id *string `pulumi:"id"`
}

// LinkedDatabaseInput is an input type that accepts LinkedDatabaseArgs and LinkedDatabaseOutput values.
// You can construct a concrete instance of `LinkedDatabaseInput` via:
//
//	LinkedDatabaseArgs{...}
type LinkedDatabaseInput interface {
	pulumi.Input

	ToLinkedDatabaseOutput() LinkedDatabaseOutput
	ToLinkedDatabaseOutputWithContext(context.Context) LinkedDatabaseOutput
}

// Specifies details of a linked database resource.
type LinkedDatabaseArgs struct {
	// Resource ID of a database resource to link with this database.
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (LinkedDatabaseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LinkedDatabase)(nil)).Elem()
}

func (i LinkedDatabaseArgs) ToLinkedDatabaseOutput() LinkedDatabaseOutput {
	return i.ToLinkedDatabaseOutputWithContext(context.Background())
}

func (i LinkedDatabaseArgs) ToLinkedDatabaseOutputWithContext(ctx context.Context) LinkedDatabaseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinkedDatabaseOutput)
}

// LinkedDatabaseArrayInput is an input type that accepts LinkedDatabaseArray and LinkedDatabaseArrayOutput values.
// You can construct a concrete instance of `LinkedDatabaseArrayInput` via:
//
//	LinkedDatabaseArray{ LinkedDatabaseArgs{...} }
type LinkedDatabaseArrayInput interface {
	pulumi.Input

	ToLinkedDatabaseArrayOutput() LinkedDatabaseArrayOutput
	ToLinkedDatabaseArrayOutputWithContext(context.Context) LinkedDatabaseArrayOutput
}

type LinkedDatabaseArray []LinkedDatabaseInput

func (LinkedDatabaseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LinkedDatabase)(nil)).Elem()
}

func (i LinkedDatabaseArray) ToLinkedDatabaseArrayOutput() LinkedDatabaseArrayOutput {
	return i.ToLinkedDatabaseArrayOutputWithContext(context.Background())
}

func (i LinkedDatabaseArray) ToLinkedDatabaseArrayOutputWithContext(ctx context.Context) LinkedDatabaseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinkedDatabaseArrayOutput)
}

// Specifies details of a linked database resource.
type LinkedDatabaseOutput struct{ *pulumi.OutputState }

func (LinkedDatabaseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LinkedDatabase)(nil)).Elem()
}

func (o LinkedDatabaseOutput) ToLinkedDatabaseOutput() LinkedDatabaseOutput {
	return o
}

func (o LinkedDatabaseOutput) ToLinkedDatabaseOutputWithContext(ctx context.Context) LinkedDatabaseOutput {
	return o
}

// Resource ID of a database resource to link with this database.
func (o LinkedDatabaseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LinkedDatabase) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type LinkedDatabaseArrayOutput struct{ *pulumi.OutputState }

func (LinkedDatabaseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LinkedDatabase)(nil)).Elem()
}

func (o LinkedDatabaseArrayOutput) ToLinkedDatabaseArrayOutput() LinkedDatabaseArrayOutput {
	return o
}

func (o LinkedDatabaseArrayOutput) ToLinkedDatabaseArrayOutputWithContext(ctx context.Context) LinkedDatabaseArrayOutput {
	return o
}

func (o LinkedDatabaseArrayOutput) Index(i pulumi.IntInput) LinkedDatabaseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LinkedDatabase {
		return vs[0].([]LinkedDatabase)[vs[1].(int)]
	}).(LinkedDatabaseOutput)
}

// Specifies details of a linked database resource.
type LinkedDatabaseResponse struct {
	// Resource ID of a database resource to link with this database.
	Id *string `pulumi:"id"`
	// State of the link between the database resources.
	State string `pulumi:"state"`
}

// Specifies details of a linked database resource.
type LinkedDatabaseResponseOutput struct{ *pulumi.OutputState }

func (LinkedDatabaseResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LinkedDatabaseResponse)(nil)).Elem()
}

func (o LinkedDatabaseResponseOutput) ToLinkedDatabaseResponseOutput() LinkedDatabaseResponseOutput {
	return o
}

func (o LinkedDatabaseResponseOutput) ToLinkedDatabaseResponseOutputWithContext(ctx context.Context) LinkedDatabaseResponseOutput {
	return o
}

// Resource ID of a database resource to link with this database.
func (o LinkedDatabaseResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LinkedDatabaseResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// State of the link between the database resources.
func (o LinkedDatabaseResponseOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LinkedDatabaseResponse) string { return v.State }).(pulumi.StringOutput)
}

type LinkedDatabaseResponseArrayOutput struct{ *pulumi.OutputState }

func (LinkedDatabaseResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LinkedDatabaseResponse)(nil)).Elem()
}

func (o LinkedDatabaseResponseArrayOutput) ToLinkedDatabaseResponseArrayOutput() LinkedDatabaseResponseArrayOutput {
	return o
}

func (o LinkedDatabaseResponseArrayOutput) ToLinkedDatabaseResponseArrayOutputWithContext(ctx context.Context) LinkedDatabaseResponseArrayOutput {
	return o
}

func (o LinkedDatabaseResponseArrayOutput) Index(i pulumi.IntInput) LinkedDatabaseResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LinkedDatabaseResponse {
		return vs[0].([]LinkedDatabaseResponse)[vs[1].(int)]
	}).(LinkedDatabaseResponseOutput)
}

// Managed service identity (system assigned and/or user assigned identities)
type ManagedServiceIdentity struct {
	// Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
	Type string `pulumi:"type"`
	// The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.
	UserAssignedIdentities []string `pulumi:"userAssignedIdentities"`
}

// ManagedServiceIdentityInput is an input type that accepts ManagedServiceIdentityArgs and ManagedServiceIdentityOutput values.
// You can construct a concrete instance of `ManagedServiceIdentityInput` via:
//
//	ManagedServiceIdentityArgs{...}
type ManagedServiceIdentityInput interface {
	pulumi.Input

	ToManagedServiceIdentityOutput() ManagedServiceIdentityOutput
	ToManagedServiceIdentityOutputWithContext(context.Context) ManagedServiceIdentityOutput
}

// Managed service identity (system assigned and/or user assigned identities)
type ManagedServiceIdentityArgs struct {
	// Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
	Type pulumi.StringInput `pulumi:"type"`
	// The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.
	UserAssignedIdentities pulumi.StringArrayInput `pulumi:"userAssignedIdentities"`
}

func (ManagedServiceIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedServiceIdentity)(nil)).Elem()
}

func (i ManagedServiceIdentityArgs) ToManagedServiceIdentityOutput() ManagedServiceIdentityOutput {
	return i.ToManagedServiceIdentityOutputWithContext(context.Background())
}

func (i ManagedServiceIdentityArgs) ToManagedServiceIdentityOutputWithContext(ctx context.Context) ManagedServiceIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedServiceIdentityOutput)
}

func (i ManagedServiceIdentityArgs) ToManagedServiceIdentityPtrOutput() ManagedServiceIdentityPtrOutput {
	return i.ToManagedServiceIdentityPtrOutputWithContext(context.Background())
}

func (i ManagedServiceIdentityArgs) ToManagedServiceIdentityPtrOutputWithContext(ctx context.Context) ManagedServiceIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedServiceIdentityOutput).ToManagedServiceIdentityPtrOutputWithContext(ctx)
}

// ManagedServiceIdentityPtrInput is an input type that accepts ManagedServiceIdentityArgs, ManagedServiceIdentityPtr and ManagedServiceIdentityPtrOutput values.
// You can construct a concrete instance of `ManagedServiceIdentityPtrInput` via:
//
//	        ManagedServiceIdentityArgs{...}
//
//	or:
//
//	        nil
type ManagedServiceIdentityPtrInput interface {
	pulumi.Input

	ToManagedServiceIdentityPtrOutput() ManagedServiceIdentityPtrOutput
	ToManagedServiceIdentityPtrOutputWithContext(context.Context) ManagedServiceIdentityPtrOutput
}

type managedServiceIdentityPtrType ManagedServiceIdentityArgs

func ManagedServiceIdentityPtr(v *ManagedServiceIdentityArgs) ManagedServiceIdentityPtrInput {
	return (*managedServiceIdentityPtrType)(v)
}

func (*managedServiceIdentityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedServiceIdentity)(nil)).Elem()
}

func (i *managedServiceIdentityPtrType) ToManagedServiceIdentityPtrOutput() ManagedServiceIdentityPtrOutput {
	return i.ToManagedServiceIdentityPtrOutputWithContext(context.Background())
}

func (i *managedServiceIdentityPtrType) ToManagedServiceIdentityPtrOutputWithContext(ctx context.Context) ManagedServiceIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedServiceIdentityPtrOutput)
}

// Managed service identity (system assigned and/or user assigned identities)
type ManagedServiceIdentityOutput struct{ *pulumi.OutputState }

func (ManagedServiceIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedServiceIdentity)(nil)).Elem()
}

func (o ManagedServiceIdentityOutput) ToManagedServiceIdentityOutput() ManagedServiceIdentityOutput {
	return o
}

func (o ManagedServiceIdentityOutput) ToManagedServiceIdentityOutputWithContext(ctx context.Context) ManagedServiceIdentityOutput {
	return o
}

func (o ManagedServiceIdentityOutput) ToManagedServiceIdentityPtrOutput() ManagedServiceIdentityPtrOutput {
	return o.ToManagedServiceIdentityPtrOutputWithContext(context.Background())
}

func (o ManagedServiceIdentityOutput) ToManagedServiceIdentityPtrOutputWithContext(ctx context.Context) ManagedServiceIdentityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ManagedServiceIdentity) *ManagedServiceIdentity {
		return &v
	}).(ManagedServiceIdentityPtrOutput)
}

// Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
func (o ManagedServiceIdentityOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedServiceIdentity) string { return v.Type }).(pulumi.StringOutput)
}

// The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.
func (o ManagedServiceIdentityOutput) UserAssignedIdentities() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ManagedServiceIdentity) []string { return v.UserAssignedIdentities }).(pulumi.StringArrayOutput)
}

type ManagedServiceIdentityPtrOutput struct{ *pulumi.OutputState }

func (ManagedServiceIdentityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedServiceIdentity)(nil)).Elem()
}

func (o ManagedServiceIdentityPtrOutput) ToManagedServiceIdentityPtrOutput() ManagedServiceIdentityPtrOutput {
	return o
}

func (o ManagedServiceIdentityPtrOutput) ToManagedServiceIdentityPtrOutputWithContext(ctx context.Context) ManagedServiceIdentityPtrOutput {
	return o
}

func (o ManagedServiceIdentityPtrOutput) Elem() ManagedServiceIdentityOutput {
	return o.ApplyT(func(v *ManagedServiceIdentity) ManagedServiceIdentity {
		if v != nil {
			return *v
		}
		var ret ManagedServiceIdentity
		return ret
	}).(ManagedServiceIdentityOutput)
}

// Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
func (o ManagedServiceIdentityPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedServiceIdentity) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.
func (o ManagedServiceIdentityPtrOutput) UserAssignedIdentities() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ManagedServiceIdentity) []string {
		if v == nil {
			return nil
		}
		return v.UserAssignedIdentities
	}).(pulumi.StringArrayOutput)
}

// Managed service identity (system assigned and/or user assigned identities)
type ManagedServiceIdentityResponse struct {
	// The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.
	PrincipalId string `pulumi:"principalId"`
	// The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.
	TenantId string `pulumi:"tenantId"`
	// Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
	Type string `pulumi:"type"`
	// The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.
	UserAssignedIdentities map[string]UserAssignedIdentityResponse `pulumi:"userAssignedIdentities"`
}

// Managed service identity (system assigned and/or user assigned identities)
type ManagedServiceIdentityResponseOutput struct{ *pulumi.OutputState }

func (ManagedServiceIdentityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedServiceIdentityResponse)(nil)).Elem()
}

func (o ManagedServiceIdentityResponseOutput) ToManagedServiceIdentityResponseOutput() ManagedServiceIdentityResponseOutput {
	return o
}

func (o ManagedServiceIdentityResponseOutput) ToManagedServiceIdentityResponseOutputWithContext(ctx context.Context) ManagedServiceIdentityResponseOutput {
	return o
}

// The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.
func (o ManagedServiceIdentityResponseOutput) PrincipalId() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedServiceIdentityResponse) string { return v.PrincipalId }).(pulumi.StringOutput)
}

// The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.
func (o ManagedServiceIdentityResponseOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedServiceIdentityResponse) string { return v.TenantId }).(pulumi.StringOutput)
}

// Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
func (o ManagedServiceIdentityResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedServiceIdentityResponse) string { return v.Type }).(pulumi.StringOutput)
}

// The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.
func (o ManagedServiceIdentityResponseOutput) UserAssignedIdentities() UserAssignedIdentityResponseMapOutput {
	return o.ApplyT(func(v ManagedServiceIdentityResponse) map[string]UserAssignedIdentityResponse {
		return v.UserAssignedIdentities
	}).(UserAssignedIdentityResponseMapOutput)
}

type ManagedServiceIdentityResponsePtrOutput struct{ *pulumi.OutputState }

func (ManagedServiceIdentityResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedServiceIdentityResponse)(nil)).Elem()
}

func (o ManagedServiceIdentityResponsePtrOutput) ToManagedServiceIdentityResponsePtrOutput() ManagedServiceIdentityResponsePtrOutput {
	return o
}

func (o ManagedServiceIdentityResponsePtrOutput) ToManagedServiceIdentityResponsePtrOutputWithContext(ctx context.Context) ManagedServiceIdentityResponsePtrOutput {
	return o
}

func (o ManagedServiceIdentityResponsePtrOutput) Elem() ManagedServiceIdentityResponseOutput {
	return o.ApplyT(func(v *ManagedServiceIdentityResponse) ManagedServiceIdentityResponse {
		if v != nil {
			return *v
		}
		var ret ManagedServiceIdentityResponse
		return ret
	}).(ManagedServiceIdentityResponseOutput)
}

// The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.
func (o ManagedServiceIdentityResponsePtrOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedServiceIdentityResponse) *string {
		if v == nil {
			return nil
		}
		return &v.PrincipalId
	}).(pulumi.StringPtrOutput)
}

// The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.
func (o ManagedServiceIdentityResponsePtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedServiceIdentityResponse) *string {
		if v == nil {
			return nil
		}
		return &v.TenantId
	}).(pulumi.StringPtrOutput)
}

// Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
func (o ManagedServiceIdentityResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedServiceIdentityResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.
func (o ManagedServiceIdentityResponsePtrOutput) UserAssignedIdentities() UserAssignedIdentityResponseMapOutput {
	return o.ApplyT(func(v *ManagedServiceIdentityResponse) map[string]UserAssignedIdentityResponse {
		if v == nil {
			return nil
		}
		return v.UserAssignedIdentities
	}).(UserAssignedIdentityResponseMapOutput)
}

// Specifies configuration of a redis module
type Module struct {
	// Configuration options for the module, e.g. 'ERROR_RATE 0.01 INITIAL_SIZE 400'.
	Args *string `pulumi:"args"`
	// The name of the module, e.g. 'RedisBloom', 'RediSearch', 'RedisTimeSeries'
	Name string `pulumi:"name"`
}

// ModuleInput is an input type that accepts ModuleArgs and ModuleOutput values.
// You can construct a concrete instance of `ModuleInput` via:
//
//	ModuleArgs{...}
type ModuleInput interface {
	pulumi.Input

	ToModuleOutput() ModuleOutput
	ToModuleOutputWithContext(context.Context) ModuleOutput
}

// Specifies configuration of a redis module
type ModuleArgs struct {
	// Configuration options for the module, e.g. 'ERROR_RATE 0.01 INITIAL_SIZE 400'.
	Args pulumi.StringPtrInput `pulumi:"args"`
	// The name of the module, e.g. 'RedisBloom', 'RediSearch', 'RedisTimeSeries'
	Name pulumi.StringInput `pulumi:"name"`
}

func (ModuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Module)(nil)).Elem()
}

func (i ModuleArgs) ToModuleOutput() ModuleOutput {
	return i.ToModuleOutputWithContext(context.Background())
}

func (i ModuleArgs) ToModuleOutputWithContext(ctx context.Context) ModuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModuleOutput)
}

// ModuleArrayInput is an input type that accepts ModuleArray and ModuleArrayOutput values.
// You can construct a concrete instance of `ModuleArrayInput` via:
//
//	ModuleArray{ ModuleArgs{...} }
type ModuleArrayInput interface {
	pulumi.Input

	ToModuleArrayOutput() ModuleArrayOutput
	ToModuleArrayOutputWithContext(context.Context) ModuleArrayOutput
}

type ModuleArray []ModuleInput

func (ModuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Module)(nil)).Elem()
}

func (i ModuleArray) ToModuleArrayOutput() ModuleArrayOutput {
	return i.ToModuleArrayOutputWithContext(context.Background())
}

func (i ModuleArray) ToModuleArrayOutputWithContext(ctx context.Context) ModuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModuleArrayOutput)
}

// Specifies configuration of a redis module
type ModuleOutput struct{ *pulumi.OutputState }

func (ModuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Module)(nil)).Elem()
}

func (o ModuleOutput) ToModuleOutput() ModuleOutput {
	return o
}

func (o ModuleOutput) ToModuleOutputWithContext(ctx context.Context) ModuleOutput {
	return o
}

// Configuration options for the module, e.g. 'ERROR_RATE 0.01 INITIAL_SIZE 400'.
func (o ModuleOutput) Args() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Module) *string { return v.Args }).(pulumi.StringPtrOutput)
}

// The name of the module, e.g. 'RedisBloom', 'RediSearch', 'RedisTimeSeries'
func (o ModuleOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v Module) string { return v.Name }).(pulumi.StringOutput)
}

type ModuleArrayOutput struct{ *pulumi.OutputState }

func (ModuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Module)(nil)).Elem()
}

func (o ModuleArrayOutput) ToModuleArrayOutput() ModuleArrayOutput {
	return o
}

func (o ModuleArrayOutput) ToModuleArrayOutputWithContext(ctx context.Context) ModuleArrayOutput {
	return o
}

func (o ModuleArrayOutput) Index(i pulumi.IntInput) ModuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Module {
		return vs[0].([]Module)[vs[1].(int)]
	}).(ModuleOutput)
}

// Specifies configuration of a redis module
type ModuleResponse struct {
	// Configuration options for the module, e.g. 'ERROR_RATE 0.01 INITIAL_SIZE 400'.
	Args *string `pulumi:"args"`
	// The name of the module, e.g. 'RedisBloom', 'RediSearch', 'RedisTimeSeries'
	Name string `pulumi:"name"`
	// The version of the module, e.g. '1.0'.
	Version string `pulumi:"version"`
}

// Specifies configuration of a redis module
type ModuleResponseOutput struct{ *pulumi.OutputState }

func (ModuleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ModuleResponse)(nil)).Elem()
}

func (o ModuleResponseOutput) ToModuleResponseOutput() ModuleResponseOutput {
	return o
}

func (o ModuleResponseOutput) ToModuleResponseOutputWithContext(ctx context.Context) ModuleResponseOutput {
	return o
}

// Configuration options for the module, e.g. 'ERROR_RATE 0.01 INITIAL_SIZE 400'.
func (o ModuleResponseOutput) Args() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModuleResponse) *string { return v.Args }).(pulumi.StringPtrOutput)
}

// The name of the module, e.g. 'RedisBloom', 'RediSearch', 'RedisTimeSeries'
func (o ModuleResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ModuleResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The version of the module, e.g. '1.0'.
func (o ModuleResponseOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v ModuleResponse) string { return v.Version }).(pulumi.StringOutput)
}

type ModuleResponseArrayOutput struct{ *pulumi.OutputState }

func (ModuleResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ModuleResponse)(nil)).Elem()
}

func (o ModuleResponseArrayOutput) ToModuleResponseArrayOutput() ModuleResponseArrayOutput {
	return o
}

func (o ModuleResponseArrayOutput) ToModuleResponseArrayOutputWithContext(ctx context.Context) ModuleResponseArrayOutput {
	return o
}

func (o ModuleResponseArrayOutput) Index(i pulumi.IntInput) ModuleResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ModuleResponse {
		return vs[0].([]ModuleResponse)[vs[1].(int)]
	}).(ModuleResponseOutput)
}

// Persistence-related configuration for the RedisEnterprise database
type Persistence struct {
	// Sets whether AOF is enabled.
	AofEnabled *bool `pulumi:"aofEnabled"`
	// Sets the frequency at which data is written to disk.
	AofFrequency *string `pulumi:"aofFrequency"`
	// Sets whether RDB is enabled.
	RdbEnabled *bool `pulumi:"rdbEnabled"`
	// Sets the frequency at which a snapshot of the database is created.
	RdbFrequency *string `pulumi:"rdbFrequency"`
}

// PersistenceInput is an input type that accepts PersistenceArgs and PersistenceOutput values.
// You can construct a concrete instance of `PersistenceInput` via:
//
//	PersistenceArgs{...}
type PersistenceInput interface {
	pulumi.Input

	ToPersistenceOutput() PersistenceOutput
	ToPersistenceOutputWithContext(context.Context) PersistenceOutput
}

// Persistence-related configuration for the RedisEnterprise database
type PersistenceArgs struct {
	// Sets whether AOF is enabled.
	AofEnabled pulumi.BoolPtrInput `pulumi:"aofEnabled"`
	// Sets the frequency at which data is written to disk.
	AofFrequency pulumi.StringPtrInput `pulumi:"aofFrequency"`
	// Sets whether RDB is enabled.
	RdbEnabled pulumi.BoolPtrInput `pulumi:"rdbEnabled"`
	// Sets the frequency at which a snapshot of the database is created.
	RdbFrequency pulumi.StringPtrInput `pulumi:"rdbFrequency"`
}

func (PersistenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Persistence)(nil)).Elem()
}

func (i PersistenceArgs) ToPersistenceOutput() PersistenceOutput {
	return i.ToPersistenceOutputWithContext(context.Background())
}

func (i PersistenceArgs) ToPersistenceOutputWithContext(ctx context.Context) PersistenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PersistenceOutput)
}

func (i PersistenceArgs) ToPersistencePtrOutput() PersistencePtrOutput {
	return i.ToPersistencePtrOutputWithContext(context.Background())
}

func (i PersistenceArgs) ToPersistencePtrOutputWithContext(ctx context.Context) PersistencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PersistenceOutput).ToPersistencePtrOutputWithContext(ctx)
}

// PersistencePtrInput is an input type that accepts PersistenceArgs, PersistencePtr and PersistencePtrOutput values.
// You can construct a concrete instance of `PersistencePtrInput` via:
//
//	        PersistenceArgs{...}
//
//	or:
//
//	        nil
type PersistencePtrInput interface {
	pulumi.Input

	ToPersistencePtrOutput() PersistencePtrOutput
	ToPersistencePtrOutputWithContext(context.Context) PersistencePtrOutput
}

type persistencePtrType PersistenceArgs

func PersistencePtr(v *PersistenceArgs) PersistencePtrInput {
	return (*persistencePtrType)(v)
}

func (*persistencePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Persistence)(nil)).Elem()
}

func (i *persistencePtrType) ToPersistencePtrOutput() PersistencePtrOutput {
	return i.ToPersistencePtrOutputWithContext(context.Background())
}

func (i *persistencePtrType) ToPersistencePtrOutputWithContext(ctx context.Context) PersistencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PersistencePtrOutput)
}

// Persistence-related configuration for the RedisEnterprise database
type PersistenceOutput struct{ *pulumi.OutputState }

func (PersistenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Persistence)(nil)).Elem()
}

func (o PersistenceOutput) ToPersistenceOutput() PersistenceOutput {
	return o
}

func (o PersistenceOutput) ToPersistenceOutputWithContext(ctx context.Context) PersistenceOutput {
	return o
}

func (o PersistenceOutput) ToPersistencePtrOutput() PersistencePtrOutput {
	return o.ToPersistencePtrOutputWithContext(context.Background())
}

func (o PersistenceOutput) ToPersistencePtrOutputWithContext(ctx context.Context) PersistencePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Persistence) *Persistence {
		return &v
	}).(PersistencePtrOutput)
}

// Sets whether AOF is enabled.
func (o PersistenceOutput) AofEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v Persistence) *bool { return v.AofEnabled }).(pulumi.BoolPtrOutput)
}

// Sets the frequency at which data is written to disk.
func (o PersistenceOutput) AofFrequency() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Persistence) *string { return v.AofFrequency }).(pulumi.StringPtrOutput)
}

// Sets whether RDB is enabled.
func (o PersistenceOutput) RdbEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v Persistence) *bool { return v.RdbEnabled }).(pulumi.BoolPtrOutput)
}

// Sets the frequency at which a snapshot of the database is created.
func (o PersistenceOutput) RdbFrequency() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Persistence) *string { return v.RdbFrequency }).(pulumi.StringPtrOutput)
}

type PersistencePtrOutput struct{ *pulumi.OutputState }

func (PersistencePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Persistence)(nil)).Elem()
}

func (o PersistencePtrOutput) ToPersistencePtrOutput() PersistencePtrOutput {
	return o
}

func (o PersistencePtrOutput) ToPersistencePtrOutputWithContext(ctx context.Context) PersistencePtrOutput {
	return o
}

func (o PersistencePtrOutput) Elem() PersistenceOutput {
	return o.ApplyT(func(v *Persistence) Persistence {
		if v != nil {
			return *v
		}
		var ret Persistence
		return ret
	}).(PersistenceOutput)
}

// Sets whether AOF is enabled.
func (o PersistencePtrOutput) AofEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Persistence) *bool {
		if v == nil {
			return nil
		}
		return v.AofEnabled
	}).(pulumi.BoolPtrOutput)
}

// Sets the frequency at which data is written to disk.
func (o PersistencePtrOutput) AofFrequency() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Persistence) *string {
		if v == nil {
			return nil
		}
		return v.AofFrequency
	}).(pulumi.StringPtrOutput)
}

// Sets whether RDB is enabled.
func (o PersistencePtrOutput) RdbEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Persistence) *bool {
		if v == nil {
			return nil
		}
		return v.RdbEnabled
	}).(pulumi.BoolPtrOutput)
}

// Sets the frequency at which a snapshot of the database is created.
func (o PersistencePtrOutput) RdbFrequency() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Persistence) *string {
		if v == nil {
			return nil
		}
		return v.RdbFrequency
	}).(pulumi.StringPtrOutput)
}

// Persistence-related configuration for the RedisEnterprise database
type PersistenceResponse struct {
	// Sets whether AOF is enabled.
	AofEnabled *bool `pulumi:"aofEnabled"`
	// Sets the frequency at which data is written to disk.
	AofFrequency *string `pulumi:"aofFrequency"`
	// Sets whether RDB is enabled.
	RdbEnabled *bool `pulumi:"rdbEnabled"`
	// Sets the frequency at which a snapshot of the database is created.
	RdbFrequency *string `pulumi:"rdbFrequency"`
}

// Persistence-related configuration for the RedisEnterprise database
type PersistenceResponseOutput struct{ *pulumi.OutputState }

func (PersistenceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PersistenceResponse)(nil)).Elem()
}

func (o PersistenceResponseOutput) ToPersistenceResponseOutput() PersistenceResponseOutput {
	return o
}

func (o PersistenceResponseOutput) ToPersistenceResponseOutputWithContext(ctx context.Context) PersistenceResponseOutput {
	return o
}

// Sets whether AOF is enabled.
func (o PersistenceResponseOutput) AofEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PersistenceResponse) *bool { return v.AofEnabled }).(pulumi.BoolPtrOutput)
}

// Sets the frequency at which data is written to disk.
func (o PersistenceResponseOutput) AofFrequency() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PersistenceResponse) *string { return v.AofFrequency }).(pulumi.StringPtrOutput)
}

// Sets whether RDB is enabled.
func (o PersistenceResponseOutput) RdbEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PersistenceResponse) *bool { return v.RdbEnabled }).(pulumi.BoolPtrOutput)
}

// Sets the frequency at which a snapshot of the database is created.
func (o PersistenceResponseOutput) RdbFrequency() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PersistenceResponse) *string { return v.RdbFrequency }).(pulumi.StringPtrOutput)
}

type PersistenceResponsePtrOutput struct{ *pulumi.OutputState }

func (PersistenceResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PersistenceResponse)(nil)).Elem()
}

func (o PersistenceResponsePtrOutput) ToPersistenceResponsePtrOutput() PersistenceResponsePtrOutput {
	return o
}

func (o PersistenceResponsePtrOutput) ToPersistenceResponsePtrOutputWithContext(ctx context.Context) PersistenceResponsePtrOutput {
	return o
}

func (o PersistenceResponsePtrOutput) Elem() PersistenceResponseOutput {
	return o.ApplyT(func(v *PersistenceResponse) PersistenceResponse {
		if v != nil {
			return *v
		}
		var ret PersistenceResponse
		return ret
	}).(PersistenceResponseOutput)
}

// Sets whether AOF is enabled.
func (o PersistenceResponsePtrOutput) AofEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PersistenceResponse) *bool {
		if v == nil {
			return nil
		}
		return v.AofEnabled
	}).(pulumi.BoolPtrOutput)
}

// Sets the frequency at which data is written to disk.
func (o PersistenceResponsePtrOutput) AofFrequency() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PersistenceResponse) *string {
		if v == nil {
			return nil
		}
		return v.AofFrequency
	}).(pulumi.StringPtrOutput)
}

// Sets whether RDB is enabled.
func (o PersistenceResponsePtrOutput) RdbEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PersistenceResponse) *bool {
		if v == nil {
			return nil
		}
		return v.RdbEnabled
	}).(pulumi.BoolPtrOutput)
}

// Sets the frequency at which a snapshot of the database is created.
func (o PersistenceResponsePtrOutput) RdbFrequency() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PersistenceResponse) *string {
		if v == nil {
			return nil
		}
		return v.RdbFrequency
	}).(pulumi.StringPtrOutput)
}

// The Private Endpoint Connection resource.
type PrivateEndpointConnectionResponse struct {
	// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	Id string `pulumi:"id"`
	// The name of the resource
	Name string `pulumi:"name"`
	// The resource of private end point.
	PrivateEndpoint *PrivateEndpointResponse `pulumi:"privateEndpoint"`
	// A collection of information about the state of the connection between service consumer and provider.
	PrivateLinkServiceConnectionState PrivateLinkServiceConnectionStateResponse `pulumi:"privateLinkServiceConnectionState"`
	// The provisioning state of the private endpoint connection resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type string `pulumi:"type"`
}

// The Private Endpoint Connection resource.
type PrivateEndpointConnectionResponseOutput struct{ *pulumi.OutputState }

func (PrivateEndpointConnectionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateEndpointConnectionResponse)(nil)).Elem()
}

func (o PrivateEndpointConnectionResponseOutput) ToPrivateEndpointConnectionResponseOutput() PrivateEndpointConnectionResponseOutput {
	return o
}

func (o PrivateEndpointConnectionResponseOutput) ToPrivateEndpointConnectionResponseOutputWithContext(ctx context.Context) PrivateEndpointConnectionResponseOutput {
	return o
}

// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
func (o PrivateEndpointConnectionResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionResponse) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the resource
func (o PrivateEndpointConnectionResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The resource of private end point.
func (o PrivateEndpointConnectionResponseOutput) PrivateEndpoint() PrivateEndpointResponsePtrOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionResponse) *PrivateEndpointResponse { return v.PrivateEndpoint }).(PrivateEndpointResponsePtrOutput)
}

// A collection of information about the state of the connection between service consumer and provider.
func (o PrivateEndpointConnectionResponseOutput) PrivateLinkServiceConnectionState() PrivateLinkServiceConnectionStateResponseOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionResponse) PrivateLinkServiceConnectionStateResponse {
		return v.PrivateLinkServiceConnectionState
	}).(PrivateLinkServiceConnectionStateResponseOutput)
}

// The provisioning state of the private endpoint connection resource.
func (o PrivateEndpointConnectionResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o PrivateEndpointConnectionResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionResponse) string { return v.Type }).(pulumi.StringOutput)
}

type PrivateEndpointConnectionResponseArrayOutput struct{ *pulumi.OutputState }

func (PrivateEndpointConnectionResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PrivateEndpointConnectionResponse)(nil)).Elem()
}

func (o PrivateEndpointConnectionResponseArrayOutput) ToPrivateEndpointConnectionResponseArrayOutput() PrivateEndpointConnectionResponseArrayOutput {
	return o
}

func (o PrivateEndpointConnectionResponseArrayOutput) ToPrivateEndpointConnectionResponseArrayOutputWithContext(ctx context.Context) PrivateEndpointConnectionResponseArrayOutput {
	return o
}

func (o PrivateEndpointConnectionResponseArrayOutput) Index(i pulumi.IntInput) PrivateEndpointConnectionResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PrivateEndpointConnectionResponse {
		return vs[0].([]PrivateEndpointConnectionResponse)[vs[1].(int)]
	}).(PrivateEndpointConnectionResponseOutput)
}

// The Private Endpoint resource.
type PrivateEndpointResponse struct {
	// The ARM identifier for Private Endpoint
	Id string `pulumi:"id"`
}

// The Private Endpoint resource.
type PrivateEndpointResponseOutput struct{ *pulumi.OutputState }

func (PrivateEndpointResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateEndpointResponse)(nil)).Elem()
}

func (o PrivateEndpointResponseOutput) ToPrivateEndpointResponseOutput() PrivateEndpointResponseOutput {
	return o
}

func (o PrivateEndpointResponseOutput) ToPrivateEndpointResponseOutputWithContext(ctx context.Context) PrivateEndpointResponseOutput {
	return o
}

// The ARM identifier for Private Endpoint
func (o PrivateEndpointResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateEndpointResponse) string { return v.Id }).(pulumi.StringOutput)
}

type PrivateEndpointResponsePtrOutput struct{ *pulumi.OutputState }

func (PrivateEndpointResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateEndpointResponse)(nil)).Elem()
}

func (o PrivateEndpointResponsePtrOutput) ToPrivateEndpointResponsePtrOutput() PrivateEndpointResponsePtrOutput {
	return o
}

func (o PrivateEndpointResponsePtrOutput) ToPrivateEndpointResponsePtrOutputWithContext(ctx context.Context) PrivateEndpointResponsePtrOutput {
	return o
}

func (o PrivateEndpointResponsePtrOutput) Elem() PrivateEndpointResponseOutput {
	return o.ApplyT(func(v *PrivateEndpointResponse) PrivateEndpointResponse {
		if v != nil {
			return *v
		}
		var ret PrivateEndpointResponse
		return ret
	}).(PrivateEndpointResponseOutput)
}

// The ARM identifier for Private Endpoint
func (o PrivateEndpointResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateEndpointResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

// A collection of information about the state of the connection between service consumer and provider.
type PrivateLinkServiceConnectionState struct {
	// A message indicating if changes on the service provider require any updates on the consumer.
	ActionsRequired *string `pulumi:"actionsRequired"`
	// The reason for approval/rejection of the connection.
	Description *string `pulumi:"description"`
	// Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
	Status *string `pulumi:"status"`
}

// PrivateLinkServiceConnectionStateInput is an input type that accepts PrivateLinkServiceConnectionStateArgs and PrivateLinkServiceConnectionStateOutput values.
// You can construct a concrete instance of `PrivateLinkServiceConnectionStateInput` via:
//
//	PrivateLinkServiceConnectionStateArgs{...}
type PrivateLinkServiceConnectionStateInput interface {
	pulumi.Input

	ToPrivateLinkServiceConnectionStateOutput() PrivateLinkServiceConnectionStateOutput
	ToPrivateLinkServiceConnectionStateOutputWithContext(context.Context) PrivateLinkServiceConnectionStateOutput
}

// A collection of information about the state of the connection between service consumer and provider.
type PrivateLinkServiceConnectionStateArgs struct {
	// A message indicating if changes on the service provider require any updates on the consumer.
	ActionsRequired pulumi.StringPtrInput `pulumi:"actionsRequired"`
	// The reason for approval/rejection of the connection.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (PrivateLinkServiceConnectionStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkServiceConnectionState)(nil)).Elem()
}

func (i PrivateLinkServiceConnectionStateArgs) ToPrivateLinkServiceConnectionStateOutput() PrivateLinkServiceConnectionStateOutput {
	return i.ToPrivateLinkServiceConnectionStateOutputWithContext(context.Background())
}

func (i PrivateLinkServiceConnectionStateArgs) ToPrivateLinkServiceConnectionStateOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkServiceConnectionStateOutput)
}

// A collection of information about the state of the connection between service consumer and provider.
type PrivateLinkServiceConnectionStateOutput struct{ *pulumi.OutputState }

func (PrivateLinkServiceConnectionStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkServiceConnectionState)(nil)).Elem()
}

func (o PrivateLinkServiceConnectionStateOutput) ToPrivateLinkServiceConnectionStateOutput() PrivateLinkServiceConnectionStateOutput {
	return o
}

func (o PrivateLinkServiceConnectionStateOutput) ToPrivateLinkServiceConnectionStateOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionStateOutput {
	return o
}

// A message indicating if changes on the service provider require any updates on the consumer.
func (o PrivateLinkServiceConnectionStateOutput) ActionsRequired() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnectionState) *string { return v.ActionsRequired }).(pulumi.StringPtrOutput)
}

// The reason for approval/rejection of the connection.
func (o PrivateLinkServiceConnectionStateOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnectionState) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
func (o PrivateLinkServiceConnectionStateOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnectionState) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// A collection of information about the state of the connection between service consumer and provider.
type PrivateLinkServiceConnectionStateResponse struct {
	// A message indicating if changes on the service provider require any updates on the consumer.
	ActionsRequired *string `pulumi:"actionsRequired"`
	// The reason for approval/rejection of the connection.
	Description *string `pulumi:"description"`
	// Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
	Status *string `pulumi:"status"`
}

// A collection of information about the state of the connection between service consumer and provider.
type PrivateLinkServiceConnectionStateResponseOutput struct{ *pulumi.OutputState }

func (PrivateLinkServiceConnectionStateResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkServiceConnectionStateResponse)(nil)).Elem()
}

func (o PrivateLinkServiceConnectionStateResponseOutput) ToPrivateLinkServiceConnectionStateResponseOutput() PrivateLinkServiceConnectionStateResponseOutput {
	return o
}

func (o PrivateLinkServiceConnectionStateResponseOutput) ToPrivateLinkServiceConnectionStateResponseOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionStateResponseOutput {
	return o
}

// A message indicating if changes on the service provider require any updates on the consumer.
func (o PrivateLinkServiceConnectionStateResponseOutput) ActionsRequired() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnectionStateResponse) *string { return v.ActionsRequired }).(pulumi.StringPtrOutput)
}

// The reason for approval/rejection of the connection.
func (o PrivateLinkServiceConnectionStateResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnectionStateResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
func (o PrivateLinkServiceConnectionStateResponseOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnectionStateResponse) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// User assigned identity properties
type UserAssignedIdentityResponse struct {
	// The client ID of the assigned identity.
	ClientId string `pulumi:"clientId"`
	// The principal ID of the assigned identity.
	PrincipalId string `pulumi:"principalId"`
}

// User assigned identity properties
type UserAssignedIdentityResponseOutput struct{ *pulumi.OutputState }

func (UserAssignedIdentityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserAssignedIdentityResponse)(nil)).Elem()
}

func (o UserAssignedIdentityResponseOutput) ToUserAssignedIdentityResponseOutput() UserAssignedIdentityResponseOutput {
	return o
}

func (o UserAssignedIdentityResponseOutput) ToUserAssignedIdentityResponseOutputWithContext(ctx context.Context) UserAssignedIdentityResponseOutput {
	return o
}

// The client ID of the assigned identity.
func (o UserAssignedIdentityResponseOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v UserAssignedIdentityResponse) string { return v.ClientId }).(pulumi.StringOutput)
}

// The principal ID of the assigned identity.
func (o UserAssignedIdentityResponseOutput) PrincipalId() pulumi.StringOutput {
	return o.ApplyT(func(v UserAssignedIdentityResponse) string { return v.PrincipalId }).(pulumi.StringOutput)
}

type UserAssignedIdentityResponseMapOutput struct{ *pulumi.OutputState }

func (UserAssignedIdentityResponseMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]UserAssignedIdentityResponse)(nil)).Elem()
}

func (o UserAssignedIdentityResponseMapOutput) ToUserAssignedIdentityResponseMapOutput() UserAssignedIdentityResponseMapOutput {
	return o
}

func (o UserAssignedIdentityResponseMapOutput) ToUserAssignedIdentityResponseMapOutputWithContext(ctx context.Context) UserAssignedIdentityResponseMapOutput {
	return o
}

func (o UserAssignedIdentityResponseMapOutput) MapIndex(k pulumi.StringInput) UserAssignedIdentityResponseOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) UserAssignedIdentityResponse {
		return vs[0].(map[string]UserAssignedIdentityResponse)[vs[1].(string)]
	}).(UserAssignedIdentityResponseOutput)
}

func init() {
	pulumi.RegisterOutputType(ClusterPropertiesCustomerManagedKeyEncryptionOutput{})
	pulumi.RegisterOutputType(ClusterPropertiesCustomerManagedKeyEncryptionPtrOutput{})
	pulumi.RegisterOutputType(ClusterPropertiesEncryptionOutput{})
	pulumi.RegisterOutputType(ClusterPropertiesEncryptionPtrOutput{})
	pulumi.RegisterOutputType(ClusterPropertiesKeyEncryptionKeyIdentityOutput{})
	pulumi.RegisterOutputType(ClusterPropertiesKeyEncryptionKeyIdentityPtrOutput{})
	pulumi.RegisterOutputType(ClusterPropertiesResponseCustomerManagedKeyEncryptionOutput{})
	pulumi.RegisterOutputType(ClusterPropertiesResponseCustomerManagedKeyEncryptionPtrOutput{})
	pulumi.RegisterOutputType(ClusterPropertiesResponseEncryptionOutput{})
	pulumi.RegisterOutputType(ClusterPropertiesResponseEncryptionPtrOutput{})
	pulumi.RegisterOutputType(ClusterPropertiesResponseKeyEncryptionKeyIdentityOutput{})
	pulumi.RegisterOutputType(ClusterPropertiesResponseKeyEncryptionKeyIdentityPtrOutput{})
	pulumi.RegisterOutputType(DatabasePropertiesGeoReplicationOutput{})
	pulumi.RegisterOutputType(DatabasePropertiesGeoReplicationPtrOutput{})
	pulumi.RegisterOutputType(DatabasePropertiesResponseGeoReplicationOutput{})
	pulumi.RegisterOutputType(DatabasePropertiesResponseGeoReplicationPtrOutput{})
	pulumi.RegisterOutputType(EnterpriseSkuOutput{})
	pulumi.RegisterOutputType(EnterpriseSkuResponseOutput{})
	pulumi.RegisterOutputType(LinkedDatabaseOutput{})
	pulumi.RegisterOutputType(LinkedDatabaseArrayOutput{})
	pulumi.RegisterOutputType(LinkedDatabaseResponseOutput{})
	pulumi.RegisterOutputType(LinkedDatabaseResponseArrayOutput{})
	pulumi.RegisterOutputType(ManagedServiceIdentityOutput{})
	pulumi.RegisterOutputType(ManagedServiceIdentityPtrOutput{})
	pulumi.RegisterOutputType(ManagedServiceIdentityResponseOutput{})
	pulumi.RegisterOutputType(ManagedServiceIdentityResponsePtrOutput{})
	pulumi.RegisterOutputType(ModuleOutput{})
	pulumi.RegisterOutputType(ModuleArrayOutput{})
	pulumi.RegisterOutputType(ModuleResponseOutput{})
	pulumi.RegisterOutputType(ModuleResponseArrayOutput{})
	pulumi.RegisterOutputType(PersistenceOutput{})
	pulumi.RegisterOutputType(PersistencePtrOutput{})
	pulumi.RegisterOutputType(PersistenceResponseOutput{})
	pulumi.RegisterOutputType(PersistenceResponsePtrOutput{})
	pulumi.RegisterOutputType(PrivateEndpointConnectionResponseOutput{})
	pulumi.RegisterOutputType(PrivateEndpointConnectionResponseArrayOutput{})
	pulumi.RegisterOutputType(PrivateEndpointResponseOutput{})
	pulumi.RegisterOutputType(PrivateEndpointResponsePtrOutput{})
	pulumi.RegisterOutputType(PrivateLinkServiceConnectionStateOutput{})
	pulumi.RegisterOutputType(PrivateLinkServiceConnectionStateResponseOutput{})
	pulumi.RegisterOutputType(UserAssignedIdentityResponseOutput{})
	pulumi.RegisterOutputType(UserAssignedIdentityResponseMapOutput{})
}
