// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20240901preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Get a SmtpUsernameResource.
func LookupSmtpUsername(ctx *pulumi.Context, args *LookupSmtpUsernameArgs, opts ...pulumi.InvokeOption) (*LookupSmtpUsernameResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv LookupSmtpUsernameResult
	err := ctx.Invoke("azure-native:communication/v20240901preview:getSmtpUsername", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupSmtpUsernameArgs struct {
	// The name of the CommunicationService resource.
	CommunicationServiceName string `pulumi:"communicationServiceName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The name of the SmtpUsernameResource.
	SmtpUsername string `pulumi:"smtpUsername"`
}

// The object describing the smtp username resource.
type LookupSmtpUsernameResult struct {
	// The application Id for the linked Entra Application.
	EntraApplicationId string `pulumi:"entraApplicationId"`
	// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
	Id string `pulumi:"id"`
	// The name of the resource
	Name string `pulumi:"name"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponse `pulumi:"systemData"`
	// The tenant of the linked Entra Application.
	TenantId string `pulumi:"tenantId"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type string `pulumi:"type"`
	// The SMTP username. Could be free form or in the email address format.
	Username string `pulumi:"username"`
}

func LookupSmtpUsernameOutput(ctx *pulumi.Context, args LookupSmtpUsernameOutputArgs, opts ...pulumi.InvokeOption) LookupSmtpUsernameResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupSmtpUsernameResultOutput, error) {
			args := v.(LookupSmtpUsernameArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: utilities.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("azure-native:communication/v20240901preview:getSmtpUsername", args, LookupSmtpUsernameResultOutput{}, options).(LookupSmtpUsernameResultOutput), nil
		}).(LookupSmtpUsernameResultOutput)
}

type LookupSmtpUsernameOutputArgs struct {
	// The name of the CommunicationService resource.
	CommunicationServiceName pulumi.StringInput `pulumi:"communicationServiceName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
	// The name of the SmtpUsernameResource.
	SmtpUsername pulumi.StringInput `pulumi:"smtpUsername"`
}

func (LookupSmtpUsernameOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSmtpUsernameArgs)(nil)).Elem()
}

// The object describing the smtp username resource.
type LookupSmtpUsernameResultOutput struct{ *pulumi.OutputState }

func (LookupSmtpUsernameResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSmtpUsernameResult)(nil)).Elem()
}

func (o LookupSmtpUsernameResultOutput) ToLookupSmtpUsernameResultOutput() LookupSmtpUsernameResultOutput {
	return o
}

func (o LookupSmtpUsernameResultOutput) ToLookupSmtpUsernameResultOutputWithContext(ctx context.Context) LookupSmtpUsernameResultOutput {
	return o
}

// The application Id for the linked Entra Application.
func (o LookupSmtpUsernameResultOutput) EntraApplicationId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSmtpUsernameResult) string { return v.EntraApplicationId }).(pulumi.StringOutput)
}

// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
func (o LookupSmtpUsernameResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSmtpUsernameResult) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the resource
func (o LookupSmtpUsernameResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSmtpUsernameResult) string { return v.Name }).(pulumi.StringOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o LookupSmtpUsernameResultOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v LookupSmtpUsernameResult) SystemDataResponse { return v.SystemData }).(SystemDataResponseOutput)
}

// The tenant of the linked Entra Application.
func (o LookupSmtpUsernameResultOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSmtpUsernameResult) string { return v.TenantId }).(pulumi.StringOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o LookupSmtpUsernameResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSmtpUsernameResult) string { return v.Type }).(pulumi.StringOutput)
}

// The SMTP username. Could be free form or in the email address format.
func (o LookupSmtpUsernameResultOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSmtpUsernameResult) string { return v.Username }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupSmtpUsernameResultOutput{})
}
