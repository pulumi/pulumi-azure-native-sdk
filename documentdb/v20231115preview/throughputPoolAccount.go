// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20231115preview

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// An Azure Cosmos DB Throughputpool Account
type ThroughputPoolAccount struct {
	pulumi.CustomResourceState

	// The instance id of global database account in the throughputPool.
	AccountInstanceId pulumi.StringOutput `pulumi:"accountInstanceId"`
	// The location of  global database account in the throughputPool.
	AccountLocation pulumi.StringPtrOutput `pulumi:"accountLocation"`
	// The resource identifier of global database account in the throughputPool.
	AccountResourceIdentifier pulumi.StringPtrOutput `pulumi:"accountResourceIdentifier"`
	// The name of the resource
	Name pulumi.StringOutput `pulumi:"name"`
	// A provisioning state of the ThroughputPool Account.
	ProvisioningState pulumi.StringOutput `pulumi:"provisioningState"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponseOutput `pulumi:"systemData"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewThroughputPoolAccount registers a new resource with the given unique name, arguments, and options.
func NewThroughputPoolAccount(ctx *pulumi.Context,
	name string, args *ThroughputPoolAccountArgs, opts ...pulumi.ResourceOption) (*ThroughputPoolAccount, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	if args.ThroughputPoolName == nil {
		return nil, errors.New("invalid value for required argument 'ThroughputPoolName'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:documentdb:ThroughputPoolAccount"),
		},
	})
	opts = append(opts, aliases)
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource ThroughputPoolAccount
	err := ctx.RegisterResource("azure-native:documentdb/v20231115preview:ThroughputPoolAccount", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetThroughputPoolAccount gets an existing ThroughputPoolAccount resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetThroughputPoolAccount(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ThroughputPoolAccountState, opts ...pulumi.ResourceOption) (*ThroughputPoolAccount, error) {
	var resource ThroughputPoolAccount
	err := ctx.ReadResource("azure-native:documentdb/v20231115preview:ThroughputPoolAccount", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ThroughputPoolAccount resources.
type throughputPoolAccountState struct {
}

type ThroughputPoolAccountState struct {
}

func (ThroughputPoolAccountState) ElementType() reflect.Type {
	return reflect.TypeOf((*throughputPoolAccountState)(nil)).Elem()
}

type throughputPoolAccountArgs struct {
	// The location of  global database account in the throughputPool.
	AccountLocation *string `pulumi:"accountLocation"`
	// The resource identifier of global database account in the throughputPool.
	AccountResourceIdentifier *string `pulumi:"accountResourceIdentifier"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Cosmos DB global database account in a Throughput Pool
	ThroughputPoolAccountName *string `pulumi:"throughputPoolAccountName"`
	// Cosmos DB Throughput Pool name.
	ThroughputPoolName string `pulumi:"throughputPoolName"`
}

// The set of arguments for constructing a ThroughputPoolAccount resource.
type ThroughputPoolAccountArgs struct {
	// The location of  global database account in the throughputPool.
	AccountLocation pulumi.StringPtrInput
	// The resource identifier of global database account in the throughputPool.
	AccountResourceIdentifier pulumi.StringPtrInput
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput
	// Cosmos DB global database account in a Throughput Pool
	ThroughputPoolAccountName pulumi.StringPtrInput
	// Cosmos DB Throughput Pool name.
	ThroughputPoolName pulumi.StringInput
}

func (ThroughputPoolAccountArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*throughputPoolAccountArgs)(nil)).Elem()
}

type ThroughputPoolAccountInput interface {
	pulumi.Input

	ToThroughputPoolAccountOutput() ThroughputPoolAccountOutput
	ToThroughputPoolAccountOutputWithContext(ctx context.Context) ThroughputPoolAccountOutput
}

func (*ThroughputPoolAccount) ElementType() reflect.Type {
	return reflect.TypeOf((**ThroughputPoolAccount)(nil)).Elem()
}

func (i *ThroughputPoolAccount) ToThroughputPoolAccountOutput() ThroughputPoolAccountOutput {
	return i.ToThroughputPoolAccountOutputWithContext(context.Background())
}

func (i *ThroughputPoolAccount) ToThroughputPoolAccountOutputWithContext(ctx context.Context) ThroughputPoolAccountOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ThroughputPoolAccountOutput)
}

type ThroughputPoolAccountOutput struct{ *pulumi.OutputState }

func (ThroughputPoolAccountOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ThroughputPoolAccount)(nil)).Elem()
}

func (o ThroughputPoolAccountOutput) ToThroughputPoolAccountOutput() ThroughputPoolAccountOutput {
	return o
}

func (o ThroughputPoolAccountOutput) ToThroughputPoolAccountOutputWithContext(ctx context.Context) ThroughputPoolAccountOutput {
	return o
}

// The instance id of global database account in the throughputPool.
func (o ThroughputPoolAccountOutput) AccountInstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v *ThroughputPoolAccount) pulumi.StringOutput { return v.AccountInstanceId }).(pulumi.StringOutput)
}

// The location of  global database account in the throughputPool.
func (o ThroughputPoolAccountOutput) AccountLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ThroughputPoolAccount) pulumi.StringPtrOutput { return v.AccountLocation }).(pulumi.StringPtrOutput)
}

// The resource identifier of global database account in the throughputPool.
func (o ThroughputPoolAccountOutput) AccountResourceIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ThroughputPoolAccount) pulumi.StringPtrOutput { return v.AccountResourceIdentifier }).(pulumi.StringPtrOutput)
}

// The name of the resource
func (o ThroughputPoolAccountOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ThroughputPoolAccount) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// A provisioning state of the ThroughputPool Account.
func (o ThroughputPoolAccountOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v *ThroughputPoolAccount) pulumi.StringOutput { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o ThroughputPoolAccountOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v *ThroughputPoolAccount) SystemDataResponseOutput { return v.SystemData }).(SystemDataResponseOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o ThroughputPoolAccountOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *ThroughputPoolAccount) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(ThroughputPoolAccountOutput{})
}
