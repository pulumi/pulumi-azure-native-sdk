// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20240301

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Storage Class Access Mode
type AccessMode string

const (
	// Read Write Once (RWO) access mode
	AccessModeReadWriteOnce = AccessMode("ReadWriteOnce")
	// Read Write Many (RWX) access mode
	AccessModeReadWriteMany = AccessMode("ReadWriteMany")
)

func (AccessMode) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessMode)(nil)).Elem()
}

func (e AccessMode) ToAccessModeOutput() AccessModeOutput {
	return pulumi.ToOutput(e).(AccessModeOutput)
}

func (e AccessMode) ToAccessModeOutputWithContext(ctx context.Context) AccessModeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AccessModeOutput)
}

func (e AccessMode) ToAccessModePtrOutput() AccessModePtrOutput {
	return e.ToAccessModePtrOutputWithContext(context.Background())
}

func (e AccessMode) ToAccessModePtrOutputWithContext(ctx context.Context) AccessModePtrOutput {
	return AccessMode(e).ToAccessModeOutputWithContext(ctx).ToAccessModePtrOutputWithContext(ctx)
}

func (e AccessMode) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AccessMode) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AccessMode) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AccessMode) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AccessModeOutput struct{ *pulumi.OutputState }

func (AccessModeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessMode)(nil)).Elem()
}

func (o AccessModeOutput) ToAccessModeOutput() AccessModeOutput {
	return o
}

func (o AccessModeOutput) ToAccessModeOutputWithContext(ctx context.Context) AccessModeOutput {
	return o
}

func (o AccessModeOutput) ToAccessModePtrOutput() AccessModePtrOutput {
	return o.ToAccessModePtrOutputWithContext(context.Background())
}

func (o AccessModeOutput) ToAccessModePtrOutputWithContext(ctx context.Context) AccessModePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AccessMode) *AccessMode {
		return &v
	}).(AccessModePtrOutput)
}

func (o AccessModeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AccessModeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AccessMode) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AccessModeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AccessModeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AccessMode) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AccessModePtrOutput struct{ *pulumi.OutputState }

func (AccessModePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AccessMode)(nil)).Elem()
}

func (o AccessModePtrOutput) ToAccessModePtrOutput() AccessModePtrOutput {
	return o
}

func (o AccessModePtrOutput) ToAccessModePtrOutputWithContext(ctx context.Context) AccessModePtrOutput {
	return o
}

func (o AccessModePtrOutput) Elem() AccessModeOutput {
	return o.ApplyT(func(v *AccessMode) AccessMode {
		if v != nil {
			return *v
		}
		var ret AccessMode
		return ret
	}).(AccessModeOutput)
}

func (o AccessModePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AccessModePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AccessMode) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AccessModeInput is an input type that accepts values of the AccessMode enum
// A concrete instance of `AccessModeInput` can be one of the following:
//
//	AccessModeReadWriteOnce
//	AccessModeReadWriteMany
type AccessModeInput interface {
	pulumi.Input

	ToAccessModeOutput() AccessModeOutput
	ToAccessModeOutputWithContext(context.Context) AccessModeOutput
}

var accessModePtrType = reflect.TypeOf((**AccessMode)(nil)).Elem()

type AccessModePtrInput interface {
	pulumi.Input

	ToAccessModePtrOutput() AccessModePtrOutput
	ToAccessModePtrOutputWithContext(context.Context) AccessModePtrOutput
}

type accessModePtr string

func AccessModePtr(v string) AccessModePtrInput {
	return (*accessModePtr)(&v)
}

func (*accessModePtr) ElementType() reflect.Type {
	return accessModePtrType
}

func (in *accessModePtr) ToAccessModePtrOutput() AccessModePtrOutput {
	return pulumi.ToOutput(in).(AccessModePtrOutput)
}

func (in *accessModePtr) ToAccessModePtrOutputWithContext(ctx context.Context) AccessModePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AccessModePtrOutput)
}

// Advertise Mode
type AdvertiseMode string

const (
	// ARP advertise mode
	AdvertiseModeARP = AdvertiseMode("ARP")
	// BGP advertise mode
	AdvertiseModeBGP = AdvertiseMode("BGP")
	// both ARP and BGP advertise mode
	AdvertiseModeBoth = AdvertiseMode("Both")
)

func (AdvertiseMode) ElementType() reflect.Type {
	return reflect.TypeOf((*AdvertiseMode)(nil)).Elem()
}

func (e AdvertiseMode) ToAdvertiseModeOutput() AdvertiseModeOutput {
	return pulumi.ToOutput(e).(AdvertiseModeOutput)
}

func (e AdvertiseMode) ToAdvertiseModeOutputWithContext(ctx context.Context) AdvertiseModeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AdvertiseModeOutput)
}

func (e AdvertiseMode) ToAdvertiseModePtrOutput() AdvertiseModePtrOutput {
	return e.ToAdvertiseModePtrOutputWithContext(context.Background())
}

func (e AdvertiseMode) ToAdvertiseModePtrOutputWithContext(ctx context.Context) AdvertiseModePtrOutput {
	return AdvertiseMode(e).ToAdvertiseModeOutputWithContext(ctx).ToAdvertiseModePtrOutputWithContext(ctx)
}

func (e AdvertiseMode) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AdvertiseMode) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AdvertiseMode) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AdvertiseMode) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AdvertiseModeOutput struct{ *pulumi.OutputState }

func (AdvertiseModeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AdvertiseMode)(nil)).Elem()
}

func (o AdvertiseModeOutput) ToAdvertiseModeOutput() AdvertiseModeOutput {
	return o
}

func (o AdvertiseModeOutput) ToAdvertiseModeOutputWithContext(ctx context.Context) AdvertiseModeOutput {
	return o
}

func (o AdvertiseModeOutput) ToAdvertiseModePtrOutput() AdvertiseModePtrOutput {
	return o.ToAdvertiseModePtrOutputWithContext(context.Background())
}

func (o AdvertiseModeOutput) ToAdvertiseModePtrOutputWithContext(ctx context.Context) AdvertiseModePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AdvertiseMode) *AdvertiseMode {
		return &v
	}).(AdvertiseModePtrOutput)
}

func (o AdvertiseModeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AdvertiseModeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AdvertiseMode) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AdvertiseModeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AdvertiseModeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AdvertiseMode) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AdvertiseModePtrOutput struct{ *pulumi.OutputState }

func (AdvertiseModePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AdvertiseMode)(nil)).Elem()
}

func (o AdvertiseModePtrOutput) ToAdvertiseModePtrOutput() AdvertiseModePtrOutput {
	return o
}

func (o AdvertiseModePtrOutput) ToAdvertiseModePtrOutputWithContext(ctx context.Context) AdvertiseModePtrOutput {
	return o
}

func (o AdvertiseModePtrOutput) Elem() AdvertiseModeOutput {
	return o.ApplyT(func(v *AdvertiseMode) AdvertiseMode {
		if v != nil {
			return *v
		}
		var ret AdvertiseMode
		return ret
	}).(AdvertiseModeOutput)
}

func (o AdvertiseModePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AdvertiseModePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AdvertiseMode) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AdvertiseModeInput is an input type that accepts values of the AdvertiseMode enum
// A concrete instance of `AdvertiseModeInput` can be one of the following:
//
//	AdvertiseModeARP
//	AdvertiseModeBGP
//	AdvertiseModeBoth
type AdvertiseModeInput interface {
	pulumi.Input

	ToAdvertiseModeOutput() AdvertiseModeOutput
	ToAdvertiseModeOutputWithContext(context.Context) AdvertiseModeOutput
}

var advertiseModePtrType = reflect.TypeOf((**AdvertiseMode)(nil)).Elem()

type AdvertiseModePtrInput interface {
	pulumi.Input

	ToAdvertiseModePtrOutput() AdvertiseModePtrOutput
	ToAdvertiseModePtrOutputWithContext(context.Context) AdvertiseModePtrOutput
}

type advertiseModePtr string

func AdvertiseModePtr(v string) AdvertiseModePtrInput {
	return (*advertiseModePtr)(&v)
}

func (*advertiseModePtr) ElementType() reflect.Type {
	return advertiseModePtrType
}

func (in *advertiseModePtr) ToAdvertiseModePtrOutput() AdvertiseModePtrOutput {
	return pulumi.ToOutput(in).(AdvertiseModePtrOutput)
}

func (in *advertiseModePtr) ToAdvertiseModePtrOutputWithContext(ctx context.Context) AdvertiseModePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AdvertiseModePtrOutput)
}

// Allow single data node failure
type DataResilienceTier string

const (
	// Not data resilient
	DataResilienceTierNotDataResilient = DataResilienceTier("NotDataResilient")
	// Data resilient
	DataResilienceTierDataResilient = DataResilienceTier("DataResilient")
)

func (DataResilienceTier) ElementType() reflect.Type {
	return reflect.TypeOf((*DataResilienceTier)(nil)).Elem()
}

func (e DataResilienceTier) ToDataResilienceTierOutput() DataResilienceTierOutput {
	return pulumi.ToOutput(e).(DataResilienceTierOutput)
}

func (e DataResilienceTier) ToDataResilienceTierOutputWithContext(ctx context.Context) DataResilienceTierOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DataResilienceTierOutput)
}

func (e DataResilienceTier) ToDataResilienceTierPtrOutput() DataResilienceTierPtrOutput {
	return e.ToDataResilienceTierPtrOutputWithContext(context.Background())
}

func (e DataResilienceTier) ToDataResilienceTierPtrOutputWithContext(ctx context.Context) DataResilienceTierPtrOutput {
	return DataResilienceTier(e).ToDataResilienceTierOutputWithContext(ctx).ToDataResilienceTierPtrOutputWithContext(ctx)
}

func (e DataResilienceTier) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DataResilienceTier) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DataResilienceTier) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DataResilienceTier) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DataResilienceTierOutput struct{ *pulumi.OutputState }

func (DataResilienceTierOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataResilienceTier)(nil)).Elem()
}

func (o DataResilienceTierOutput) ToDataResilienceTierOutput() DataResilienceTierOutput {
	return o
}

func (o DataResilienceTierOutput) ToDataResilienceTierOutputWithContext(ctx context.Context) DataResilienceTierOutput {
	return o
}

func (o DataResilienceTierOutput) ToDataResilienceTierPtrOutput() DataResilienceTierPtrOutput {
	return o.ToDataResilienceTierPtrOutputWithContext(context.Background())
}

func (o DataResilienceTierOutput) ToDataResilienceTierPtrOutputWithContext(ctx context.Context) DataResilienceTierPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataResilienceTier) *DataResilienceTier {
		return &v
	}).(DataResilienceTierPtrOutput)
}

func (o DataResilienceTierOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DataResilienceTierOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DataResilienceTier) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DataResilienceTierOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DataResilienceTierOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DataResilienceTier) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DataResilienceTierPtrOutput struct{ *pulumi.OutputState }

func (DataResilienceTierPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataResilienceTier)(nil)).Elem()
}

func (o DataResilienceTierPtrOutput) ToDataResilienceTierPtrOutput() DataResilienceTierPtrOutput {
	return o
}

func (o DataResilienceTierPtrOutput) ToDataResilienceTierPtrOutputWithContext(ctx context.Context) DataResilienceTierPtrOutput {
	return o
}

func (o DataResilienceTierPtrOutput) Elem() DataResilienceTierOutput {
	return o.ApplyT(func(v *DataResilienceTier) DataResilienceTier {
		if v != nil {
			return *v
		}
		var ret DataResilienceTier
		return ret
	}).(DataResilienceTierOutput)
}

func (o DataResilienceTierPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DataResilienceTierPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DataResilienceTier) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DataResilienceTierInput is an input type that accepts values of the DataResilienceTier enum
// A concrete instance of `DataResilienceTierInput` can be one of the following:
//
//	DataResilienceTierNotDataResilient
//	DataResilienceTierDataResilient
type DataResilienceTierInput interface {
	pulumi.Input

	ToDataResilienceTierOutput() DataResilienceTierOutput
	ToDataResilienceTierOutputWithContext(context.Context) DataResilienceTierOutput
}

var dataResilienceTierPtrType = reflect.TypeOf((**DataResilienceTier)(nil)).Elem()

type DataResilienceTierPtrInput interface {
	pulumi.Input

	ToDataResilienceTierPtrOutput() DataResilienceTierPtrOutput
	ToDataResilienceTierPtrOutputWithContext(context.Context) DataResilienceTierPtrOutput
}

type dataResilienceTierPtr string

func DataResilienceTierPtr(v string) DataResilienceTierPtrInput {
	return (*dataResilienceTierPtr)(&v)
}

func (*dataResilienceTierPtr) ElementType() reflect.Type {
	return dataResilienceTierPtrType
}

func (in *dataResilienceTierPtr) ToDataResilienceTierPtrOutput() DataResilienceTierPtrOutput {
	return pulumi.ToOutput(in).(DataResilienceTierPtrOutput)
}

func (in *dataResilienceTierPtr) ToDataResilienceTierPtrOutputWithContext(ctx context.Context) DataResilienceTierPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DataResilienceTierPtrOutput)
}

// Failover speed: NA, Slow, Fast
type FailoverTier string

const (
	// Not available Failover Tier
	FailoverTierNotAvailable = FailoverTier("NotAvailable")
	// Slow Failover Tier
	FailoverTierSlow = FailoverTier("Slow")
	// Fast Failover Tier
	FailoverTierFast = FailoverTier("Fast")
	// Super Failover Tier
	FailoverTierSuper = FailoverTier("Super")
)

func (FailoverTier) ElementType() reflect.Type {
	return reflect.TypeOf((*FailoverTier)(nil)).Elem()
}

func (e FailoverTier) ToFailoverTierOutput() FailoverTierOutput {
	return pulumi.ToOutput(e).(FailoverTierOutput)
}

func (e FailoverTier) ToFailoverTierOutputWithContext(ctx context.Context) FailoverTierOutput {
	return pulumi.ToOutputWithContext(ctx, e).(FailoverTierOutput)
}

func (e FailoverTier) ToFailoverTierPtrOutput() FailoverTierPtrOutput {
	return e.ToFailoverTierPtrOutputWithContext(context.Background())
}

func (e FailoverTier) ToFailoverTierPtrOutputWithContext(ctx context.Context) FailoverTierPtrOutput {
	return FailoverTier(e).ToFailoverTierOutputWithContext(ctx).ToFailoverTierPtrOutputWithContext(ctx)
}

func (e FailoverTier) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e FailoverTier) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e FailoverTier) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e FailoverTier) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type FailoverTierOutput struct{ *pulumi.OutputState }

func (FailoverTierOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FailoverTier)(nil)).Elem()
}

func (o FailoverTierOutput) ToFailoverTierOutput() FailoverTierOutput {
	return o
}

func (o FailoverTierOutput) ToFailoverTierOutputWithContext(ctx context.Context) FailoverTierOutput {
	return o
}

func (o FailoverTierOutput) ToFailoverTierPtrOutput() FailoverTierPtrOutput {
	return o.ToFailoverTierPtrOutputWithContext(context.Background())
}

func (o FailoverTierOutput) ToFailoverTierPtrOutputWithContext(ctx context.Context) FailoverTierPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FailoverTier) *FailoverTier {
		return &v
	}).(FailoverTierPtrOutput)
}

func (o FailoverTierOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o FailoverTierOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e FailoverTier) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o FailoverTierOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o FailoverTierOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e FailoverTier) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type FailoverTierPtrOutput struct{ *pulumi.OutputState }

func (FailoverTierPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FailoverTier)(nil)).Elem()
}

func (o FailoverTierPtrOutput) ToFailoverTierPtrOutput() FailoverTierPtrOutput {
	return o
}

func (o FailoverTierPtrOutput) ToFailoverTierPtrOutputWithContext(ctx context.Context) FailoverTierPtrOutput {
	return o
}

func (o FailoverTierPtrOutput) Elem() FailoverTierOutput {
	return o.ApplyT(func(v *FailoverTier) FailoverTier {
		if v != nil {
			return *v
		}
		var ret FailoverTier
		return ret
	}).(FailoverTierOutput)
}

func (o FailoverTierPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o FailoverTierPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *FailoverTier) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// FailoverTierInput is an input type that accepts values of the FailoverTier enum
// A concrete instance of `FailoverTierInput` can be one of the following:
//
//	FailoverTierNotAvailable
//	FailoverTierSlow
//	FailoverTierFast
//	FailoverTierSuper
type FailoverTierInput interface {
	pulumi.Input

	ToFailoverTierOutput() FailoverTierOutput
	ToFailoverTierOutputWithContext(context.Context) FailoverTierOutput
}

var failoverTierPtrType = reflect.TypeOf((**FailoverTier)(nil)).Elem()

type FailoverTierPtrInput interface {
	pulumi.Input

	ToFailoverTierPtrOutput() FailoverTierPtrOutput
	ToFailoverTierPtrOutputWithContext(context.Context) FailoverTierPtrOutput
}

type failoverTierPtr string

func FailoverTierPtr(v string) FailoverTierPtrInput {
	return (*failoverTierPtr)(&v)
}

func (*failoverTierPtr) ElementType() reflect.Type {
	return failoverTierPtrType
}

func (in *failoverTierPtr) ToFailoverTierPtrOutput() FailoverTierPtrOutput {
	return pulumi.ToOutput(in).(FailoverTierPtrOutput)
}

func (in *failoverTierPtr) ToFailoverTierPtrOutputWithContext(ctx context.Context) FailoverTierPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(FailoverTierPtrOutput)
}

// The action to take when a NFS volume is deleted. Default is Delete
type NfsDirectoryActionOnVolumeDeletion string

const (
	// When the volume is deleted, delete the directory
	NfsDirectoryActionOnVolumeDeletionDelete = NfsDirectoryActionOnVolumeDeletion("Delete")
	// When the volume is deleted, retain the directory
	NfsDirectoryActionOnVolumeDeletionRetain = NfsDirectoryActionOnVolumeDeletion("Retain")
)

func (NfsDirectoryActionOnVolumeDeletion) ElementType() reflect.Type {
	return reflect.TypeOf((*NfsDirectoryActionOnVolumeDeletion)(nil)).Elem()
}

func (e NfsDirectoryActionOnVolumeDeletion) ToNfsDirectoryActionOnVolumeDeletionOutput() NfsDirectoryActionOnVolumeDeletionOutput {
	return pulumi.ToOutput(e).(NfsDirectoryActionOnVolumeDeletionOutput)
}

func (e NfsDirectoryActionOnVolumeDeletion) ToNfsDirectoryActionOnVolumeDeletionOutputWithContext(ctx context.Context) NfsDirectoryActionOnVolumeDeletionOutput {
	return pulumi.ToOutputWithContext(ctx, e).(NfsDirectoryActionOnVolumeDeletionOutput)
}

func (e NfsDirectoryActionOnVolumeDeletion) ToNfsDirectoryActionOnVolumeDeletionPtrOutput() NfsDirectoryActionOnVolumeDeletionPtrOutput {
	return e.ToNfsDirectoryActionOnVolumeDeletionPtrOutputWithContext(context.Background())
}

func (e NfsDirectoryActionOnVolumeDeletion) ToNfsDirectoryActionOnVolumeDeletionPtrOutputWithContext(ctx context.Context) NfsDirectoryActionOnVolumeDeletionPtrOutput {
	return NfsDirectoryActionOnVolumeDeletion(e).ToNfsDirectoryActionOnVolumeDeletionOutputWithContext(ctx).ToNfsDirectoryActionOnVolumeDeletionPtrOutputWithContext(ctx)
}

func (e NfsDirectoryActionOnVolumeDeletion) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e NfsDirectoryActionOnVolumeDeletion) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e NfsDirectoryActionOnVolumeDeletion) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e NfsDirectoryActionOnVolumeDeletion) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type NfsDirectoryActionOnVolumeDeletionOutput struct{ *pulumi.OutputState }

func (NfsDirectoryActionOnVolumeDeletionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NfsDirectoryActionOnVolumeDeletion)(nil)).Elem()
}

func (o NfsDirectoryActionOnVolumeDeletionOutput) ToNfsDirectoryActionOnVolumeDeletionOutput() NfsDirectoryActionOnVolumeDeletionOutput {
	return o
}

func (o NfsDirectoryActionOnVolumeDeletionOutput) ToNfsDirectoryActionOnVolumeDeletionOutputWithContext(ctx context.Context) NfsDirectoryActionOnVolumeDeletionOutput {
	return o
}

func (o NfsDirectoryActionOnVolumeDeletionOutput) ToNfsDirectoryActionOnVolumeDeletionPtrOutput() NfsDirectoryActionOnVolumeDeletionPtrOutput {
	return o.ToNfsDirectoryActionOnVolumeDeletionPtrOutputWithContext(context.Background())
}

func (o NfsDirectoryActionOnVolumeDeletionOutput) ToNfsDirectoryActionOnVolumeDeletionPtrOutputWithContext(ctx context.Context) NfsDirectoryActionOnVolumeDeletionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NfsDirectoryActionOnVolumeDeletion) *NfsDirectoryActionOnVolumeDeletion {
		return &v
	}).(NfsDirectoryActionOnVolumeDeletionPtrOutput)
}

func (o NfsDirectoryActionOnVolumeDeletionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o NfsDirectoryActionOnVolumeDeletionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e NfsDirectoryActionOnVolumeDeletion) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o NfsDirectoryActionOnVolumeDeletionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o NfsDirectoryActionOnVolumeDeletionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e NfsDirectoryActionOnVolumeDeletion) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type NfsDirectoryActionOnVolumeDeletionPtrOutput struct{ *pulumi.OutputState }

func (NfsDirectoryActionOnVolumeDeletionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NfsDirectoryActionOnVolumeDeletion)(nil)).Elem()
}

func (o NfsDirectoryActionOnVolumeDeletionPtrOutput) ToNfsDirectoryActionOnVolumeDeletionPtrOutput() NfsDirectoryActionOnVolumeDeletionPtrOutput {
	return o
}

func (o NfsDirectoryActionOnVolumeDeletionPtrOutput) ToNfsDirectoryActionOnVolumeDeletionPtrOutputWithContext(ctx context.Context) NfsDirectoryActionOnVolumeDeletionPtrOutput {
	return o
}

func (o NfsDirectoryActionOnVolumeDeletionPtrOutput) Elem() NfsDirectoryActionOnVolumeDeletionOutput {
	return o.ApplyT(func(v *NfsDirectoryActionOnVolumeDeletion) NfsDirectoryActionOnVolumeDeletion {
		if v != nil {
			return *v
		}
		var ret NfsDirectoryActionOnVolumeDeletion
		return ret
	}).(NfsDirectoryActionOnVolumeDeletionOutput)
}

func (o NfsDirectoryActionOnVolumeDeletionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o NfsDirectoryActionOnVolumeDeletionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *NfsDirectoryActionOnVolumeDeletion) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// NfsDirectoryActionOnVolumeDeletionInput is an input type that accepts values of the NfsDirectoryActionOnVolumeDeletion enum
// A concrete instance of `NfsDirectoryActionOnVolumeDeletionInput` can be one of the following:
//
//	NfsDirectoryActionOnVolumeDeletionDelete
//	NfsDirectoryActionOnVolumeDeletionRetain
type NfsDirectoryActionOnVolumeDeletionInput interface {
	pulumi.Input

	ToNfsDirectoryActionOnVolumeDeletionOutput() NfsDirectoryActionOnVolumeDeletionOutput
	ToNfsDirectoryActionOnVolumeDeletionOutputWithContext(context.Context) NfsDirectoryActionOnVolumeDeletionOutput
}

var nfsDirectoryActionOnVolumeDeletionPtrType = reflect.TypeOf((**NfsDirectoryActionOnVolumeDeletion)(nil)).Elem()

type NfsDirectoryActionOnVolumeDeletionPtrInput interface {
	pulumi.Input

	ToNfsDirectoryActionOnVolumeDeletionPtrOutput() NfsDirectoryActionOnVolumeDeletionPtrOutput
	ToNfsDirectoryActionOnVolumeDeletionPtrOutputWithContext(context.Context) NfsDirectoryActionOnVolumeDeletionPtrOutput
}

type nfsDirectoryActionOnVolumeDeletionPtr string

func NfsDirectoryActionOnVolumeDeletionPtr(v string) NfsDirectoryActionOnVolumeDeletionPtrInput {
	return (*nfsDirectoryActionOnVolumeDeletionPtr)(&v)
}

func (*nfsDirectoryActionOnVolumeDeletionPtr) ElementType() reflect.Type {
	return nfsDirectoryActionOnVolumeDeletionPtrType
}

func (in *nfsDirectoryActionOnVolumeDeletionPtr) ToNfsDirectoryActionOnVolumeDeletionPtrOutput() NfsDirectoryActionOnVolumeDeletionPtrOutput {
	return pulumi.ToOutput(in).(NfsDirectoryActionOnVolumeDeletionPtrOutput)
}

func (in *nfsDirectoryActionOnVolumeDeletionPtr) ToNfsDirectoryActionOnVolumeDeletionPtrOutputWithContext(ctx context.Context) NfsDirectoryActionOnVolumeDeletionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(NfsDirectoryActionOnVolumeDeletionPtrOutput)
}

// Performance tier
type PerformanceTier string

const (
	// Undefined Performance Tier
	PerformanceTierUndefined = PerformanceTier("Undefined")
	// Basic Performance Tier
	PerformanceTierBasic = PerformanceTier("Basic")
	// Standard Performance Tier
	PerformanceTierStandard = PerformanceTier("Standard")
	// Premium Performance Tier
	PerformanceTierPremium = PerformanceTier("Premium")
	// Ultra Performance Tier
	PerformanceTierUltra = PerformanceTier("Ultra")
)

func (PerformanceTier) ElementType() reflect.Type {
	return reflect.TypeOf((*PerformanceTier)(nil)).Elem()
}

func (e PerformanceTier) ToPerformanceTierOutput() PerformanceTierOutput {
	return pulumi.ToOutput(e).(PerformanceTierOutput)
}

func (e PerformanceTier) ToPerformanceTierOutputWithContext(ctx context.Context) PerformanceTierOutput {
	return pulumi.ToOutputWithContext(ctx, e).(PerformanceTierOutput)
}

func (e PerformanceTier) ToPerformanceTierPtrOutput() PerformanceTierPtrOutput {
	return e.ToPerformanceTierPtrOutputWithContext(context.Background())
}

func (e PerformanceTier) ToPerformanceTierPtrOutputWithContext(ctx context.Context) PerformanceTierPtrOutput {
	return PerformanceTier(e).ToPerformanceTierOutputWithContext(ctx).ToPerformanceTierPtrOutputWithContext(ctx)
}

func (e PerformanceTier) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e PerformanceTier) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e PerformanceTier) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e PerformanceTier) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type PerformanceTierOutput struct{ *pulumi.OutputState }

func (PerformanceTierOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PerformanceTier)(nil)).Elem()
}

func (o PerformanceTierOutput) ToPerformanceTierOutput() PerformanceTierOutput {
	return o
}

func (o PerformanceTierOutput) ToPerformanceTierOutputWithContext(ctx context.Context) PerformanceTierOutput {
	return o
}

func (o PerformanceTierOutput) ToPerformanceTierPtrOutput() PerformanceTierPtrOutput {
	return o.ToPerformanceTierPtrOutputWithContext(context.Background())
}

func (o PerformanceTierOutput) ToPerformanceTierPtrOutputWithContext(ctx context.Context) PerformanceTierPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PerformanceTier) *PerformanceTier {
		return &v
	}).(PerformanceTierPtrOutput)
}

func (o PerformanceTierOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o PerformanceTierOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PerformanceTier) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o PerformanceTierOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PerformanceTierOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PerformanceTier) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type PerformanceTierPtrOutput struct{ *pulumi.OutputState }

func (PerformanceTierPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PerformanceTier)(nil)).Elem()
}

func (o PerformanceTierPtrOutput) ToPerformanceTierPtrOutput() PerformanceTierPtrOutput {
	return o
}

func (o PerformanceTierPtrOutput) ToPerformanceTierPtrOutputWithContext(ctx context.Context) PerformanceTierPtrOutput {
	return o
}

func (o PerformanceTierPtrOutput) Elem() PerformanceTierOutput {
	return o.ApplyT(func(v *PerformanceTier) PerformanceTier {
		if v != nil {
			return *v
		}
		var ret PerformanceTier
		return ret
	}).(PerformanceTierOutput)
}

func (o PerformanceTierPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PerformanceTierPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *PerformanceTier) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// PerformanceTierInput is an input type that accepts values of the PerformanceTier enum
// A concrete instance of `PerformanceTierInput` can be one of the following:
//
//	PerformanceTierUndefined
//	PerformanceTierBasic
//	PerformanceTierStandard
//	PerformanceTierPremium
//	PerformanceTierUltra
type PerformanceTierInput interface {
	pulumi.Input

	ToPerformanceTierOutput() PerformanceTierOutput
	ToPerformanceTierOutputWithContext(context.Context) PerformanceTierOutput
}

var performanceTierPtrType = reflect.TypeOf((**PerformanceTier)(nil)).Elem()

type PerformanceTierPtrInput interface {
	pulumi.Input

	ToPerformanceTierPtrOutput() PerformanceTierPtrOutput
	ToPerformanceTierPtrOutputWithContext(context.Context) PerformanceTierPtrOutput
}

type performanceTierPtr string

func PerformanceTierPtr(v string) PerformanceTierPtrInput {
	return (*performanceTierPtr)(&v)
}

func (*performanceTierPtr) ElementType() reflect.Type {
	return performanceTierPtrType
}

func (in *performanceTierPtr) ToPerformanceTierPtrOutput() PerformanceTierPtrOutput {
	return pulumi.ToOutput(in).(PerformanceTierPtrOutput)
}

func (in *performanceTierPtr) ToPerformanceTierPtrOutputWithContext(ctx context.Context) PerformanceTierPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(PerformanceTierPtrOutput)
}

// Type of the storage class.
type SCType string

const (
	// Native storage class
	SCTypeNative = SCType("Native")
	// RWX storage class
	SCTypeRWX = SCType("RWX")
	// Blob storage class
	SCTypeBlob = SCType("Blob")
	// NFS storage class
	SCTypeNFS = SCType("NFS")
	// SMB storage class
	SCTypeSMB = SCType("SMB")
)

// Binding mode of volumes: Immediate, WaitForFirstConsumer
type VolumeBindingMode string

const (
	// Immediate binding mode
	VolumeBindingModeImmediate = VolumeBindingMode("Immediate")
	// Wait for first consumer binding mode
	VolumeBindingModeWaitForFirstConsumer = VolumeBindingMode("WaitForFirstConsumer")
)

func (VolumeBindingMode) ElementType() reflect.Type {
	return reflect.TypeOf((*VolumeBindingMode)(nil)).Elem()
}

func (e VolumeBindingMode) ToVolumeBindingModeOutput() VolumeBindingModeOutput {
	return pulumi.ToOutput(e).(VolumeBindingModeOutput)
}

func (e VolumeBindingMode) ToVolumeBindingModeOutputWithContext(ctx context.Context) VolumeBindingModeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(VolumeBindingModeOutput)
}

func (e VolumeBindingMode) ToVolumeBindingModePtrOutput() VolumeBindingModePtrOutput {
	return e.ToVolumeBindingModePtrOutputWithContext(context.Background())
}

func (e VolumeBindingMode) ToVolumeBindingModePtrOutputWithContext(ctx context.Context) VolumeBindingModePtrOutput {
	return VolumeBindingMode(e).ToVolumeBindingModeOutputWithContext(ctx).ToVolumeBindingModePtrOutputWithContext(ctx)
}

func (e VolumeBindingMode) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e VolumeBindingMode) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e VolumeBindingMode) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e VolumeBindingMode) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type VolumeBindingModeOutput struct{ *pulumi.OutputState }

func (VolumeBindingModeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VolumeBindingMode)(nil)).Elem()
}

func (o VolumeBindingModeOutput) ToVolumeBindingModeOutput() VolumeBindingModeOutput {
	return o
}

func (o VolumeBindingModeOutput) ToVolumeBindingModeOutputWithContext(ctx context.Context) VolumeBindingModeOutput {
	return o
}

func (o VolumeBindingModeOutput) ToVolumeBindingModePtrOutput() VolumeBindingModePtrOutput {
	return o.ToVolumeBindingModePtrOutputWithContext(context.Background())
}

func (o VolumeBindingModeOutput) ToVolumeBindingModePtrOutputWithContext(ctx context.Context) VolumeBindingModePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VolumeBindingMode) *VolumeBindingMode {
		return &v
	}).(VolumeBindingModePtrOutput)
}

func (o VolumeBindingModeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o VolumeBindingModeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e VolumeBindingMode) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o VolumeBindingModeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o VolumeBindingModeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e VolumeBindingMode) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type VolumeBindingModePtrOutput struct{ *pulumi.OutputState }

func (VolumeBindingModePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VolumeBindingMode)(nil)).Elem()
}

func (o VolumeBindingModePtrOutput) ToVolumeBindingModePtrOutput() VolumeBindingModePtrOutput {
	return o
}

func (o VolumeBindingModePtrOutput) ToVolumeBindingModePtrOutputWithContext(ctx context.Context) VolumeBindingModePtrOutput {
	return o
}

func (o VolumeBindingModePtrOutput) Elem() VolumeBindingModeOutput {
	return o.ApplyT(func(v *VolumeBindingMode) VolumeBindingMode {
		if v != nil {
			return *v
		}
		var ret VolumeBindingMode
		return ret
	}).(VolumeBindingModeOutput)
}

func (o VolumeBindingModePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o VolumeBindingModePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *VolumeBindingMode) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// VolumeBindingModeInput is an input type that accepts values of the VolumeBindingMode enum
// A concrete instance of `VolumeBindingModeInput` can be one of the following:
//
//	VolumeBindingModeImmediate
//	VolumeBindingModeWaitForFirstConsumer
type VolumeBindingModeInput interface {
	pulumi.Input

	ToVolumeBindingModeOutput() VolumeBindingModeOutput
	ToVolumeBindingModeOutputWithContext(context.Context) VolumeBindingModeOutput
}

var volumeBindingModePtrType = reflect.TypeOf((**VolumeBindingMode)(nil)).Elem()

type VolumeBindingModePtrInput interface {
	pulumi.Input

	ToVolumeBindingModePtrOutput() VolumeBindingModePtrOutput
	ToVolumeBindingModePtrOutputWithContext(context.Context) VolumeBindingModePtrOutput
}

type volumeBindingModePtr string

func VolumeBindingModePtr(v string) VolumeBindingModePtrInput {
	return (*volumeBindingModePtr)(&v)
}

func (*volumeBindingModePtr) ElementType() reflect.Type {
	return volumeBindingModePtrType
}

func (in *volumeBindingModePtr) ToVolumeBindingModePtrOutput() VolumeBindingModePtrOutput {
	return pulumi.ToOutput(in).(VolumeBindingModePtrOutput)
}

func (in *volumeBindingModePtr) ToVolumeBindingModePtrOutputWithContext(ctx context.Context) VolumeBindingModePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(VolumeBindingModePtrOutput)
}

// Volume can be expanded or not
type VolumeExpansion string

const (
	// Allow volume expansion
	VolumeExpansionAllow = VolumeExpansion("Allow")
	// Disallow volume expansion
	VolumeExpansionDisallow = VolumeExpansion("Disallow")
)

func (VolumeExpansion) ElementType() reflect.Type {
	return reflect.TypeOf((*VolumeExpansion)(nil)).Elem()
}

func (e VolumeExpansion) ToVolumeExpansionOutput() VolumeExpansionOutput {
	return pulumi.ToOutput(e).(VolumeExpansionOutput)
}

func (e VolumeExpansion) ToVolumeExpansionOutputWithContext(ctx context.Context) VolumeExpansionOutput {
	return pulumi.ToOutputWithContext(ctx, e).(VolumeExpansionOutput)
}

func (e VolumeExpansion) ToVolumeExpansionPtrOutput() VolumeExpansionPtrOutput {
	return e.ToVolumeExpansionPtrOutputWithContext(context.Background())
}

func (e VolumeExpansion) ToVolumeExpansionPtrOutputWithContext(ctx context.Context) VolumeExpansionPtrOutput {
	return VolumeExpansion(e).ToVolumeExpansionOutputWithContext(ctx).ToVolumeExpansionPtrOutputWithContext(ctx)
}

func (e VolumeExpansion) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e VolumeExpansion) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e VolumeExpansion) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e VolumeExpansion) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type VolumeExpansionOutput struct{ *pulumi.OutputState }

func (VolumeExpansionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VolumeExpansion)(nil)).Elem()
}

func (o VolumeExpansionOutput) ToVolumeExpansionOutput() VolumeExpansionOutput {
	return o
}

func (o VolumeExpansionOutput) ToVolumeExpansionOutputWithContext(ctx context.Context) VolumeExpansionOutput {
	return o
}

func (o VolumeExpansionOutput) ToVolumeExpansionPtrOutput() VolumeExpansionPtrOutput {
	return o.ToVolumeExpansionPtrOutputWithContext(context.Background())
}

func (o VolumeExpansionOutput) ToVolumeExpansionPtrOutputWithContext(ctx context.Context) VolumeExpansionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VolumeExpansion) *VolumeExpansion {
		return &v
	}).(VolumeExpansionPtrOutput)
}

func (o VolumeExpansionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o VolumeExpansionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e VolumeExpansion) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o VolumeExpansionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o VolumeExpansionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e VolumeExpansion) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type VolumeExpansionPtrOutput struct{ *pulumi.OutputState }

func (VolumeExpansionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VolumeExpansion)(nil)).Elem()
}

func (o VolumeExpansionPtrOutput) ToVolumeExpansionPtrOutput() VolumeExpansionPtrOutput {
	return o
}

func (o VolumeExpansionPtrOutput) ToVolumeExpansionPtrOutputWithContext(ctx context.Context) VolumeExpansionPtrOutput {
	return o
}

func (o VolumeExpansionPtrOutput) Elem() VolumeExpansionOutput {
	return o.ApplyT(func(v *VolumeExpansion) VolumeExpansion {
		if v != nil {
			return *v
		}
		var ret VolumeExpansion
		return ret
	}).(VolumeExpansionOutput)
}

func (o VolumeExpansionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o VolumeExpansionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *VolumeExpansion) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// VolumeExpansionInput is an input type that accepts values of the VolumeExpansion enum
// A concrete instance of `VolumeExpansionInput` can be one of the following:
//
//	VolumeExpansionAllow
//	VolumeExpansionDisallow
type VolumeExpansionInput interface {
	pulumi.Input

	ToVolumeExpansionOutput() VolumeExpansionOutput
	ToVolumeExpansionOutputWithContext(context.Context) VolumeExpansionOutput
}

var volumeExpansionPtrType = reflect.TypeOf((**VolumeExpansion)(nil)).Elem()

type VolumeExpansionPtrInput interface {
	pulumi.Input

	ToVolumeExpansionPtrOutput() VolumeExpansionPtrOutput
	ToVolumeExpansionPtrOutputWithContext(context.Context) VolumeExpansionPtrOutput
}

type volumeExpansionPtr string

func VolumeExpansionPtr(v string) VolumeExpansionPtrInput {
	return (*volumeExpansionPtr)(&v)
}

func (*volumeExpansionPtr) ElementType() reflect.Type {
	return volumeExpansionPtrType
}

func (in *volumeExpansionPtr) ToVolumeExpansionPtrOutput() VolumeExpansionPtrOutput {
	return pulumi.ToOutput(in).(VolumeExpansionPtrOutput)
}

func (in *volumeExpansionPtr) ToVolumeExpansionPtrOutputWithContext(ctx context.Context) VolumeExpansionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(VolumeExpansionPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(AccessModeOutput{})
	pulumi.RegisterOutputType(AccessModePtrOutput{})
	pulumi.RegisterOutputType(AdvertiseModeOutput{})
	pulumi.RegisterOutputType(AdvertiseModePtrOutput{})
	pulumi.RegisterOutputType(DataResilienceTierOutput{})
	pulumi.RegisterOutputType(DataResilienceTierPtrOutput{})
	pulumi.RegisterOutputType(FailoverTierOutput{})
	pulumi.RegisterOutputType(FailoverTierPtrOutput{})
	pulumi.RegisterOutputType(NfsDirectoryActionOnVolumeDeletionOutput{})
	pulumi.RegisterOutputType(NfsDirectoryActionOnVolumeDeletionPtrOutput{})
	pulumi.RegisterOutputType(PerformanceTierOutput{})
	pulumi.RegisterOutputType(PerformanceTierPtrOutput{})
	pulumi.RegisterOutputType(VolumeBindingModeOutput{})
	pulumi.RegisterOutputType(VolumeBindingModePtrOutput{})
	pulumi.RegisterOutputType(VolumeExpansionOutput{})
	pulumi.RegisterOutputType(VolumeExpansionPtrOutput{})
}
