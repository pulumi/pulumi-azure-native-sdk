// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20240301

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = utilities.GetEnvOrDefault

// The properties of Blob StorageClass
type BlobStorageClassTypeProperties struct {
	// Azure Storage Account Key
	AzureStorageAccountKey string `pulumi:"azureStorageAccountKey"`
	// Azure Storage Account Name
	AzureStorageAccountName string `pulumi:"azureStorageAccountName"`
	// Type of a storage class
	// Expected value is 'Blob'.
	Type string `pulumi:"type"`
}

// BlobStorageClassTypePropertiesInput is an input type that accepts BlobStorageClassTypePropertiesArgs and BlobStorageClassTypePropertiesOutput values.
// You can construct a concrete instance of `BlobStorageClassTypePropertiesInput` via:
//
//	BlobStorageClassTypePropertiesArgs{...}
type BlobStorageClassTypePropertiesInput interface {
	pulumi.Input

	ToBlobStorageClassTypePropertiesOutput() BlobStorageClassTypePropertiesOutput
	ToBlobStorageClassTypePropertiesOutputWithContext(context.Context) BlobStorageClassTypePropertiesOutput
}

// The properties of Blob StorageClass
type BlobStorageClassTypePropertiesArgs struct {
	// Azure Storage Account Key
	AzureStorageAccountKey pulumi.StringInput `pulumi:"azureStorageAccountKey"`
	// Azure Storage Account Name
	AzureStorageAccountName pulumi.StringInput `pulumi:"azureStorageAccountName"`
	// Type of a storage class
	// Expected value is 'Blob'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (BlobStorageClassTypePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BlobStorageClassTypeProperties)(nil)).Elem()
}

func (i BlobStorageClassTypePropertiesArgs) ToBlobStorageClassTypePropertiesOutput() BlobStorageClassTypePropertiesOutput {
	return i.ToBlobStorageClassTypePropertiesOutputWithContext(context.Background())
}

func (i BlobStorageClassTypePropertiesArgs) ToBlobStorageClassTypePropertiesOutputWithContext(ctx context.Context) BlobStorageClassTypePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BlobStorageClassTypePropertiesOutput)
}

// The properties of Blob StorageClass
type BlobStorageClassTypePropertiesOutput struct{ *pulumi.OutputState }

func (BlobStorageClassTypePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BlobStorageClassTypeProperties)(nil)).Elem()
}

func (o BlobStorageClassTypePropertiesOutput) ToBlobStorageClassTypePropertiesOutput() BlobStorageClassTypePropertiesOutput {
	return o
}

func (o BlobStorageClassTypePropertiesOutput) ToBlobStorageClassTypePropertiesOutputWithContext(ctx context.Context) BlobStorageClassTypePropertiesOutput {
	return o
}

// Azure Storage Account Key
func (o BlobStorageClassTypePropertiesOutput) AzureStorageAccountKey() pulumi.StringOutput {
	return o.ApplyT(func(v BlobStorageClassTypeProperties) string { return v.AzureStorageAccountKey }).(pulumi.StringOutput)
}

// Azure Storage Account Name
func (o BlobStorageClassTypePropertiesOutput) AzureStorageAccountName() pulumi.StringOutput {
	return o.ApplyT(func(v BlobStorageClassTypeProperties) string { return v.AzureStorageAccountName }).(pulumi.StringOutput)
}

// Type of a storage class
// Expected value is 'Blob'.
func (o BlobStorageClassTypePropertiesOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v BlobStorageClassTypeProperties) string { return v.Type }).(pulumi.StringOutput)
}

// The properties of Blob StorageClass
type BlobStorageClassTypePropertiesResponse struct {
	// Azure Storage Account Key
	AzureStorageAccountKey string `pulumi:"azureStorageAccountKey"`
	// Azure Storage Account Name
	AzureStorageAccountName string `pulumi:"azureStorageAccountName"`
	// Type of a storage class
	// Expected value is 'Blob'.
	Type string `pulumi:"type"`
}

// The properties of Blob StorageClass
type BlobStorageClassTypePropertiesResponseOutput struct{ *pulumi.OutputState }

func (BlobStorageClassTypePropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BlobStorageClassTypePropertiesResponse)(nil)).Elem()
}

func (o BlobStorageClassTypePropertiesResponseOutput) ToBlobStorageClassTypePropertiesResponseOutput() BlobStorageClassTypePropertiesResponseOutput {
	return o
}

func (o BlobStorageClassTypePropertiesResponseOutput) ToBlobStorageClassTypePropertiesResponseOutputWithContext(ctx context.Context) BlobStorageClassTypePropertiesResponseOutput {
	return o
}

// Azure Storage Account Key
func (o BlobStorageClassTypePropertiesResponseOutput) AzureStorageAccountKey() pulumi.StringOutput {
	return o.ApplyT(func(v BlobStorageClassTypePropertiesResponse) string { return v.AzureStorageAccountKey }).(pulumi.StringOutput)
}

// Azure Storage Account Name
func (o BlobStorageClassTypePropertiesResponseOutput) AzureStorageAccountName() pulumi.StringOutput {
	return o.ApplyT(func(v BlobStorageClassTypePropertiesResponse) string { return v.AzureStorageAccountName }).(pulumi.StringOutput)
}

// Type of a storage class
// Expected value is 'Blob'.
func (o BlobStorageClassTypePropertiesResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v BlobStorageClassTypePropertiesResponse) string { return v.Type }).(pulumi.StringOutput)
}

// The properties of Native StorageClass
type NativeStorageClassTypeProperties struct {
	// Type of a storage class
	// Expected value is 'Native'.
	Type string `pulumi:"type"`
}

// NativeStorageClassTypePropertiesInput is an input type that accepts NativeStorageClassTypePropertiesArgs and NativeStorageClassTypePropertiesOutput values.
// You can construct a concrete instance of `NativeStorageClassTypePropertiesInput` via:
//
//	NativeStorageClassTypePropertiesArgs{...}
type NativeStorageClassTypePropertiesInput interface {
	pulumi.Input

	ToNativeStorageClassTypePropertiesOutput() NativeStorageClassTypePropertiesOutput
	ToNativeStorageClassTypePropertiesOutputWithContext(context.Context) NativeStorageClassTypePropertiesOutput
}

// The properties of Native StorageClass
type NativeStorageClassTypePropertiesArgs struct {
	// Type of a storage class
	// Expected value is 'Native'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (NativeStorageClassTypePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NativeStorageClassTypeProperties)(nil)).Elem()
}

func (i NativeStorageClassTypePropertiesArgs) ToNativeStorageClassTypePropertiesOutput() NativeStorageClassTypePropertiesOutput {
	return i.ToNativeStorageClassTypePropertiesOutputWithContext(context.Background())
}

func (i NativeStorageClassTypePropertiesArgs) ToNativeStorageClassTypePropertiesOutputWithContext(ctx context.Context) NativeStorageClassTypePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NativeStorageClassTypePropertiesOutput)
}

// The properties of Native StorageClass
type NativeStorageClassTypePropertiesOutput struct{ *pulumi.OutputState }

func (NativeStorageClassTypePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NativeStorageClassTypeProperties)(nil)).Elem()
}

func (o NativeStorageClassTypePropertiesOutput) ToNativeStorageClassTypePropertiesOutput() NativeStorageClassTypePropertiesOutput {
	return o
}

func (o NativeStorageClassTypePropertiesOutput) ToNativeStorageClassTypePropertiesOutputWithContext(ctx context.Context) NativeStorageClassTypePropertiesOutput {
	return o
}

// Type of a storage class
// Expected value is 'Native'.
func (o NativeStorageClassTypePropertiesOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v NativeStorageClassTypeProperties) string { return v.Type }).(pulumi.StringOutput)
}

// The properties of Native StorageClass
type NativeStorageClassTypePropertiesResponse struct {
	// Type of a storage class
	// Expected value is 'Native'.
	Type string `pulumi:"type"`
}

// The properties of Native StorageClass
type NativeStorageClassTypePropertiesResponseOutput struct{ *pulumi.OutputState }

func (NativeStorageClassTypePropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NativeStorageClassTypePropertiesResponse)(nil)).Elem()
}

func (o NativeStorageClassTypePropertiesResponseOutput) ToNativeStorageClassTypePropertiesResponseOutput() NativeStorageClassTypePropertiesResponseOutput {
	return o
}

func (o NativeStorageClassTypePropertiesResponseOutput) ToNativeStorageClassTypePropertiesResponseOutputWithContext(ctx context.Context) NativeStorageClassTypePropertiesResponseOutput {
	return o
}

// Type of a storage class
// Expected value is 'Native'.
func (o NativeStorageClassTypePropertiesResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v NativeStorageClassTypePropertiesResponse) string { return v.Type }).(pulumi.StringOutput)
}

// The properties of NFS StorageClass
type NfsStorageClassTypeProperties struct {
	// Mounted folder permissions. Default is 0. If set as non-zero, driver will perform `chmod` after mount
	MountPermissions *string `pulumi:"mountPermissions"`
	// The action to take when a NFS volume is deleted. Default is Delete
	OnDelete *string `pulumi:"onDelete"`
	// NFS Server
	Server string `pulumi:"server"`
	// NFS share
	Share string `pulumi:"share"`
	// Sub directory under share. If the sub directory doesn't exist, driver will create it
	SubDir *string `pulumi:"subDir"`
	// Type of a storage class
	// Expected value is 'NFS'.
	Type string `pulumi:"type"`
}

// NfsStorageClassTypePropertiesInput is an input type that accepts NfsStorageClassTypePropertiesArgs and NfsStorageClassTypePropertiesOutput values.
// You can construct a concrete instance of `NfsStorageClassTypePropertiesInput` via:
//
//	NfsStorageClassTypePropertiesArgs{...}
type NfsStorageClassTypePropertiesInput interface {
	pulumi.Input

	ToNfsStorageClassTypePropertiesOutput() NfsStorageClassTypePropertiesOutput
	ToNfsStorageClassTypePropertiesOutputWithContext(context.Context) NfsStorageClassTypePropertiesOutput
}

// The properties of NFS StorageClass
type NfsStorageClassTypePropertiesArgs struct {
	// Mounted folder permissions. Default is 0. If set as non-zero, driver will perform `chmod` after mount
	MountPermissions pulumi.StringPtrInput `pulumi:"mountPermissions"`
	// The action to take when a NFS volume is deleted. Default is Delete
	OnDelete pulumi.StringPtrInput `pulumi:"onDelete"`
	// NFS Server
	Server pulumi.StringInput `pulumi:"server"`
	// NFS share
	Share pulumi.StringInput `pulumi:"share"`
	// Sub directory under share. If the sub directory doesn't exist, driver will create it
	SubDir pulumi.StringPtrInput `pulumi:"subDir"`
	// Type of a storage class
	// Expected value is 'NFS'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (NfsStorageClassTypePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NfsStorageClassTypeProperties)(nil)).Elem()
}

func (i NfsStorageClassTypePropertiesArgs) ToNfsStorageClassTypePropertiesOutput() NfsStorageClassTypePropertiesOutput {
	return i.ToNfsStorageClassTypePropertiesOutputWithContext(context.Background())
}

func (i NfsStorageClassTypePropertiesArgs) ToNfsStorageClassTypePropertiesOutputWithContext(ctx context.Context) NfsStorageClassTypePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NfsStorageClassTypePropertiesOutput)
}

// The properties of NFS StorageClass
type NfsStorageClassTypePropertiesOutput struct{ *pulumi.OutputState }

func (NfsStorageClassTypePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NfsStorageClassTypeProperties)(nil)).Elem()
}

func (o NfsStorageClassTypePropertiesOutput) ToNfsStorageClassTypePropertiesOutput() NfsStorageClassTypePropertiesOutput {
	return o
}

func (o NfsStorageClassTypePropertiesOutput) ToNfsStorageClassTypePropertiesOutputWithContext(ctx context.Context) NfsStorageClassTypePropertiesOutput {
	return o
}

// Mounted folder permissions. Default is 0. If set as non-zero, driver will perform `chmod` after mount
func (o NfsStorageClassTypePropertiesOutput) MountPermissions() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NfsStorageClassTypeProperties) *string { return v.MountPermissions }).(pulumi.StringPtrOutput)
}

// The action to take when a NFS volume is deleted. Default is Delete
func (o NfsStorageClassTypePropertiesOutput) OnDelete() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NfsStorageClassTypeProperties) *string { return v.OnDelete }).(pulumi.StringPtrOutput)
}

// NFS Server
func (o NfsStorageClassTypePropertiesOutput) Server() pulumi.StringOutput {
	return o.ApplyT(func(v NfsStorageClassTypeProperties) string { return v.Server }).(pulumi.StringOutput)
}

// NFS share
func (o NfsStorageClassTypePropertiesOutput) Share() pulumi.StringOutput {
	return o.ApplyT(func(v NfsStorageClassTypeProperties) string { return v.Share }).(pulumi.StringOutput)
}

// Sub directory under share. If the sub directory doesn't exist, driver will create it
func (o NfsStorageClassTypePropertiesOutput) SubDir() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NfsStorageClassTypeProperties) *string { return v.SubDir }).(pulumi.StringPtrOutput)
}

// Type of a storage class
// Expected value is 'NFS'.
func (o NfsStorageClassTypePropertiesOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v NfsStorageClassTypeProperties) string { return v.Type }).(pulumi.StringOutput)
}

// The properties of NFS StorageClass
type NfsStorageClassTypePropertiesResponse struct {
	// Mounted folder permissions. Default is 0. If set as non-zero, driver will perform `chmod` after mount
	MountPermissions *string `pulumi:"mountPermissions"`
	// The action to take when a NFS volume is deleted. Default is Delete
	OnDelete *string `pulumi:"onDelete"`
	// NFS Server
	Server string `pulumi:"server"`
	// NFS share
	Share string `pulumi:"share"`
	// Sub directory under share. If the sub directory doesn't exist, driver will create it
	SubDir *string `pulumi:"subDir"`
	// Type of a storage class
	// Expected value is 'NFS'.
	Type string `pulumi:"type"`
}

// The properties of NFS StorageClass
type NfsStorageClassTypePropertiesResponseOutput struct{ *pulumi.OutputState }

func (NfsStorageClassTypePropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NfsStorageClassTypePropertiesResponse)(nil)).Elem()
}

func (o NfsStorageClassTypePropertiesResponseOutput) ToNfsStorageClassTypePropertiesResponseOutput() NfsStorageClassTypePropertiesResponseOutput {
	return o
}

func (o NfsStorageClassTypePropertiesResponseOutput) ToNfsStorageClassTypePropertiesResponseOutputWithContext(ctx context.Context) NfsStorageClassTypePropertiesResponseOutput {
	return o
}

// Mounted folder permissions. Default is 0. If set as non-zero, driver will perform `chmod` after mount
func (o NfsStorageClassTypePropertiesResponseOutput) MountPermissions() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NfsStorageClassTypePropertiesResponse) *string { return v.MountPermissions }).(pulumi.StringPtrOutput)
}

// The action to take when a NFS volume is deleted. Default is Delete
func (o NfsStorageClassTypePropertiesResponseOutput) OnDelete() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NfsStorageClassTypePropertiesResponse) *string { return v.OnDelete }).(pulumi.StringPtrOutput)
}

// NFS Server
func (o NfsStorageClassTypePropertiesResponseOutput) Server() pulumi.StringOutput {
	return o.ApplyT(func(v NfsStorageClassTypePropertiesResponse) string { return v.Server }).(pulumi.StringOutput)
}

// NFS share
func (o NfsStorageClassTypePropertiesResponseOutput) Share() pulumi.StringOutput {
	return o.ApplyT(func(v NfsStorageClassTypePropertiesResponse) string { return v.Share }).(pulumi.StringOutput)
}

// Sub directory under share. If the sub directory doesn't exist, driver will create it
func (o NfsStorageClassTypePropertiesResponseOutput) SubDir() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NfsStorageClassTypePropertiesResponse) *string { return v.SubDir }).(pulumi.StringPtrOutput)
}

// Type of a storage class
// Expected value is 'NFS'.
func (o NfsStorageClassTypePropertiesResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v NfsStorageClassTypePropertiesResponse) string { return v.Type }).(pulumi.StringOutput)
}

// The properties of RWX StorageClass
type RwxStorageClassTypeProperties struct {
	// The backing storageclass used to create new storageclass
	BackingStorageClassName string `pulumi:"backingStorageClassName"`
	// Type of a storage class
	// Expected value is 'RWX'.
	Type string `pulumi:"type"`
}

// RwxStorageClassTypePropertiesInput is an input type that accepts RwxStorageClassTypePropertiesArgs and RwxStorageClassTypePropertiesOutput values.
// You can construct a concrete instance of `RwxStorageClassTypePropertiesInput` via:
//
//	RwxStorageClassTypePropertiesArgs{...}
type RwxStorageClassTypePropertiesInput interface {
	pulumi.Input

	ToRwxStorageClassTypePropertiesOutput() RwxStorageClassTypePropertiesOutput
	ToRwxStorageClassTypePropertiesOutputWithContext(context.Context) RwxStorageClassTypePropertiesOutput
}

// The properties of RWX StorageClass
type RwxStorageClassTypePropertiesArgs struct {
	// The backing storageclass used to create new storageclass
	BackingStorageClassName pulumi.StringInput `pulumi:"backingStorageClassName"`
	// Type of a storage class
	// Expected value is 'RWX'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (RwxStorageClassTypePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RwxStorageClassTypeProperties)(nil)).Elem()
}

func (i RwxStorageClassTypePropertiesArgs) ToRwxStorageClassTypePropertiesOutput() RwxStorageClassTypePropertiesOutput {
	return i.ToRwxStorageClassTypePropertiesOutputWithContext(context.Background())
}

func (i RwxStorageClassTypePropertiesArgs) ToRwxStorageClassTypePropertiesOutputWithContext(ctx context.Context) RwxStorageClassTypePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RwxStorageClassTypePropertiesOutput)
}

// The properties of RWX StorageClass
type RwxStorageClassTypePropertiesOutput struct{ *pulumi.OutputState }

func (RwxStorageClassTypePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RwxStorageClassTypeProperties)(nil)).Elem()
}

func (o RwxStorageClassTypePropertiesOutput) ToRwxStorageClassTypePropertiesOutput() RwxStorageClassTypePropertiesOutput {
	return o
}

func (o RwxStorageClassTypePropertiesOutput) ToRwxStorageClassTypePropertiesOutputWithContext(ctx context.Context) RwxStorageClassTypePropertiesOutput {
	return o
}

// The backing storageclass used to create new storageclass
func (o RwxStorageClassTypePropertiesOutput) BackingStorageClassName() pulumi.StringOutput {
	return o.ApplyT(func(v RwxStorageClassTypeProperties) string { return v.BackingStorageClassName }).(pulumi.StringOutput)
}

// Type of a storage class
// Expected value is 'RWX'.
func (o RwxStorageClassTypePropertiesOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v RwxStorageClassTypeProperties) string { return v.Type }).(pulumi.StringOutput)
}

// The properties of RWX StorageClass
type RwxStorageClassTypePropertiesResponse struct {
	// The backing storageclass used to create new storageclass
	BackingStorageClassName string `pulumi:"backingStorageClassName"`
	// Type of a storage class
	// Expected value is 'RWX'.
	Type string `pulumi:"type"`
}

// The properties of RWX StorageClass
type RwxStorageClassTypePropertiesResponseOutput struct{ *pulumi.OutputState }

func (RwxStorageClassTypePropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RwxStorageClassTypePropertiesResponse)(nil)).Elem()
}

func (o RwxStorageClassTypePropertiesResponseOutput) ToRwxStorageClassTypePropertiesResponseOutput() RwxStorageClassTypePropertiesResponseOutput {
	return o
}

func (o RwxStorageClassTypePropertiesResponseOutput) ToRwxStorageClassTypePropertiesResponseOutputWithContext(ctx context.Context) RwxStorageClassTypePropertiesResponseOutput {
	return o
}

// The backing storageclass used to create new storageclass
func (o RwxStorageClassTypePropertiesResponseOutput) BackingStorageClassName() pulumi.StringOutput {
	return o.ApplyT(func(v RwxStorageClassTypePropertiesResponse) string { return v.BackingStorageClassName }).(pulumi.StringOutput)
}

// Type of a storage class
// Expected value is 'RWX'.
func (o RwxStorageClassTypePropertiesResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v RwxStorageClassTypePropertiesResponse) string { return v.Type }).(pulumi.StringOutput)
}

// The properties of SMB StorageClass
type SmbStorageClassTypeProperties struct {
	// Server domain
	Domain *string `pulumi:"domain"`
	// Server password
	Password *string `pulumi:"password"`
	// SMB Source
	Source string `pulumi:"source"`
	// Sub directory under share. If the sub directory doesn't exist, driver will create it
	SubDir *string `pulumi:"subDir"`
	// Type of a storage class
	// Expected value is 'SMB'.
	Type string `pulumi:"type"`
	// Server username
	Username *string `pulumi:"username"`
}

// SmbStorageClassTypePropertiesInput is an input type that accepts SmbStorageClassTypePropertiesArgs and SmbStorageClassTypePropertiesOutput values.
// You can construct a concrete instance of `SmbStorageClassTypePropertiesInput` via:
//
//	SmbStorageClassTypePropertiesArgs{...}
type SmbStorageClassTypePropertiesInput interface {
	pulumi.Input

	ToSmbStorageClassTypePropertiesOutput() SmbStorageClassTypePropertiesOutput
	ToSmbStorageClassTypePropertiesOutputWithContext(context.Context) SmbStorageClassTypePropertiesOutput
}

// The properties of SMB StorageClass
type SmbStorageClassTypePropertiesArgs struct {
	// Server domain
	Domain pulumi.StringPtrInput `pulumi:"domain"`
	// Server password
	Password pulumi.StringPtrInput `pulumi:"password"`
	// SMB Source
	Source pulumi.StringInput `pulumi:"source"`
	// Sub directory under share. If the sub directory doesn't exist, driver will create it
	SubDir pulumi.StringPtrInput `pulumi:"subDir"`
	// Type of a storage class
	// Expected value is 'SMB'.
	Type pulumi.StringInput `pulumi:"type"`
	// Server username
	Username pulumi.StringPtrInput `pulumi:"username"`
}

func (SmbStorageClassTypePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SmbStorageClassTypeProperties)(nil)).Elem()
}

func (i SmbStorageClassTypePropertiesArgs) ToSmbStorageClassTypePropertiesOutput() SmbStorageClassTypePropertiesOutput {
	return i.ToSmbStorageClassTypePropertiesOutputWithContext(context.Background())
}

func (i SmbStorageClassTypePropertiesArgs) ToSmbStorageClassTypePropertiesOutputWithContext(ctx context.Context) SmbStorageClassTypePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SmbStorageClassTypePropertiesOutput)
}

// The properties of SMB StorageClass
type SmbStorageClassTypePropertiesOutput struct{ *pulumi.OutputState }

func (SmbStorageClassTypePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SmbStorageClassTypeProperties)(nil)).Elem()
}

func (o SmbStorageClassTypePropertiesOutput) ToSmbStorageClassTypePropertiesOutput() SmbStorageClassTypePropertiesOutput {
	return o
}

func (o SmbStorageClassTypePropertiesOutput) ToSmbStorageClassTypePropertiesOutputWithContext(ctx context.Context) SmbStorageClassTypePropertiesOutput {
	return o
}

// Server domain
func (o SmbStorageClassTypePropertiesOutput) Domain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SmbStorageClassTypeProperties) *string { return v.Domain }).(pulumi.StringPtrOutput)
}

// Server password
func (o SmbStorageClassTypePropertiesOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SmbStorageClassTypeProperties) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// SMB Source
func (o SmbStorageClassTypePropertiesOutput) Source() pulumi.StringOutput {
	return o.ApplyT(func(v SmbStorageClassTypeProperties) string { return v.Source }).(pulumi.StringOutput)
}

// Sub directory under share. If the sub directory doesn't exist, driver will create it
func (o SmbStorageClassTypePropertiesOutput) SubDir() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SmbStorageClassTypeProperties) *string { return v.SubDir }).(pulumi.StringPtrOutput)
}

// Type of a storage class
// Expected value is 'SMB'.
func (o SmbStorageClassTypePropertiesOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v SmbStorageClassTypeProperties) string { return v.Type }).(pulumi.StringOutput)
}

// Server username
func (o SmbStorageClassTypePropertiesOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SmbStorageClassTypeProperties) *string { return v.Username }).(pulumi.StringPtrOutput)
}

// The properties of SMB StorageClass
type SmbStorageClassTypePropertiesResponse struct {
	// Server domain
	Domain *string `pulumi:"domain"`
	// Server password
	Password *string `pulumi:"password"`
	// SMB Source
	Source string `pulumi:"source"`
	// Sub directory under share. If the sub directory doesn't exist, driver will create it
	SubDir *string `pulumi:"subDir"`
	// Type of a storage class
	// Expected value is 'SMB'.
	Type string `pulumi:"type"`
	// Server username
	Username *string `pulumi:"username"`
}

// The properties of SMB StorageClass
type SmbStorageClassTypePropertiesResponseOutput struct{ *pulumi.OutputState }

func (SmbStorageClassTypePropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SmbStorageClassTypePropertiesResponse)(nil)).Elem()
}

func (o SmbStorageClassTypePropertiesResponseOutput) ToSmbStorageClassTypePropertiesResponseOutput() SmbStorageClassTypePropertiesResponseOutput {
	return o
}

func (o SmbStorageClassTypePropertiesResponseOutput) ToSmbStorageClassTypePropertiesResponseOutputWithContext(ctx context.Context) SmbStorageClassTypePropertiesResponseOutput {
	return o
}

// Server domain
func (o SmbStorageClassTypePropertiesResponseOutput) Domain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SmbStorageClassTypePropertiesResponse) *string { return v.Domain }).(pulumi.StringPtrOutput)
}

// Server password
func (o SmbStorageClassTypePropertiesResponseOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SmbStorageClassTypePropertiesResponse) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// SMB Source
func (o SmbStorageClassTypePropertiesResponseOutput) Source() pulumi.StringOutput {
	return o.ApplyT(func(v SmbStorageClassTypePropertiesResponse) string { return v.Source }).(pulumi.StringOutput)
}

// Sub directory under share. If the sub directory doesn't exist, driver will create it
func (o SmbStorageClassTypePropertiesResponseOutput) SubDir() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SmbStorageClassTypePropertiesResponse) *string { return v.SubDir }).(pulumi.StringPtrOutput)
}

// Type of a storage class
// Expected value is 'SMB'.
func (o SmbStorageClassTypePropertiesResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v SmbStorageClassTypePropertiesResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Server username
func (o SmbStorageClassTypePropertiesResponseOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SmbStorageClassTypePropertiesResponse) *string { return v.Username }).(pulumi.StringPtrOutput)
}

// Metadata pertaining to creation and last modification of the resource.
type SystemDataResponse struct {
	// The timestamp of resource creation (UTC).
	CreatedAt *string `pulumi:"createdAt"`
	// The identity that created the resource.
	CreatedBy *string `pulumi:"createdBy"`
	// The type of identity that created the resource.
	CreatedByType *string `pulumi:"createdByType"`
	// The timestamp of resource last modification (UTC)
	LastModifiedAt *string `pulumi:"lastModifiedAt"`
	// The identity that last modified the resource.
	LastModifiedBy *string `pulumi:"lastModifiedBy"`
	// The type of identity that last modified the resource.
	LastModifiedByType *string `pulumi:"lastModifiedByType"`
}

// Metadata pertaining to creation and last modification of the resource.
type SystemDataResponseOutput struct{ *pulumi.OutputState }

func (SystemDataResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemDataResponse)(nil)).Elem()
}

func (o SystemDataResponseOutput) ToSystemDataResponseOutput() SystemDataResponseOutput {
	return o
}

func (o SystemDataResponseOutput) ToSystemDataResponseOutputWithContext(ctx context.Context) SystemDataResponseOutput {
	return o
}

// The timestamp of resource creation (UTC).
func (o SystemDataResponseOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedAt }).(pulumi.StringPtrOutput)
}

// The identity that created the resource.
func (o SystemDataResponseOutput) CreatedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedBy }).(pulumi.StringPtrOutput)
}

// The type of identity that created the resource.
func (o SystemDataResponseOutput) CreatedByType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedByType }).(pulumi.StringPtrOutput)
}

// The timestamp of resource last modification (UTC)
func (o SystemDataResponseOutput) LastModifiedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedAt }).(pulumi.StringPtrOutput)
}

// The identity that last modified the resource.
func (o SystemDataResponseOutput) LastModifiedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedBy }).(pulumi.StringPtrOutput)
}

// The type of identity that last modified the resource.
func (o SystemDataResponseOutput) LastModifiedByType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedByType }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(BlobStorageClassTypePropertiesOutput{})
	pulumi.RegisterOutputType(BlobStorageClassTypePropertiesResponseOutput{})
	pulumi.RegisterOutputType(NativeStorageClassTypePropertiesOutput{})
	pulumi.RegisterOutputType(NativeStorageClassTypePropertiesResponseOutput{})
	pulumi.RegisterOutputType(NfsStorageClassTypePropertiesOutput{})
	pulumi.RegisterOutputType(NfsStorageClassTypePropertiesResponseOutput{})
	pulumi.RegisterOutputType(RwxStorageClassTypePropertiesOutput{})
	pulumi.RegisterOutputType(RwxStorageClassTypePropertiesResponseOutput{})
	pulumi.RegisterOutputType(SmbStorageClassTypePropertiesOutput{})
	pulumi.RegisterOutputType(SmbStorageClassTypePropertiesResponseOutput{})
	pulumi.RegisterOutputType(SystemDataResponseOutput{})
}
