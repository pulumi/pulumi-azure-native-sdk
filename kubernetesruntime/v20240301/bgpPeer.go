// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20240301

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// A BgpPeer resource for an Arc connected cluster (Microsoft.Kubernetes/connectedClusters)
type BgpPeer struct {
	pulumi.CustomResourceState

	// My ASN
	MyAsn pulumi.IntOutput `pulumi:"myAsn"`
	// The name of the resource
	Name pulumi.StringOutput `pulumi:"name"`
	// Peer Address
	PeerAddress pulumi.StringOutput `pulumi:"peerAddress"`
	// Peer ASN
	PeerAsn pulumi.IntOutput `pulumi:"peerAsn"`
	// Resource provision state
	ProvisioningState pulumi.StringOutput `pulumi:"provisioningState"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponseOutput `pulumi:"systemData"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewBgpPeer registers a new resource with the given unique name, arguments, and options.
func NewBgpPeer(ctx *pulumi.Context,
	name string, args *BgpPeerArgs, opts ...pulumi.ResourceOption) (*BgpPeer, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.MyAsn == nil {
		return nil, errors.New("invalid value for required argument 'MyAsn'")
	}
	if args.PeerAddress == nil {
		return nil, errors.New("invalid value for required argument 'PeerAddress'")
	}
	if args.PeerAsn == nil {
		return nil, errors.New("invalid value for required argument 'PeerAsn'")
	}
	if args.ResourceUri == nil {
		return nil, errors.New("invalid value for required argument 'ResourceUri'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:kubernetesruntime:BgpPeer"),
		},
		{
			Type: pulumi.String("azure-native:kubernetesruntime/v20231001preview:BgpPeer"),
		},
	})
	opts = append(opts, aliases)
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource BgpPeer
	err := ctx.RegisterResource("azure-native:kubernetesruntime/v20240301:BgpPeer", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetBgpPeer gets an existing BgpPeer resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetBgpPeer(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *BgpPeerState, opts ...pulumi.ResourceOption) (*BgpPeer, error) {
	var resource BgpPeer
	err := ctx.ReadResource("azure-native:kubernetesruntime/v20240301:BgpPeer", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering BgpPeer resources.
type bgpPeerState struct {
}

type BgpPeerState struct {
}

func (BgpPeerState) ElementType() reflect.Type {
	return reflect.TypeOf((*bgpPeerState)(nil)).Elem()
}

type bgpPeerArgs struct {
	// The name of the BgpPeer
	BgpPeerName *string `pulumi:"bgpPeerName"`
	// My ASN
	MyAsn int `pulumi:"myAsn"`
	// Peer Address
	PeerAddress string `pulumi:"peerAddress"`
	// Peer ASN
	PeerAsn int `pulumi:"peerAsn"`
	// The fully qualified Azure Resource manager identifier of the resource.
	ResourceUri string `pulumi:"resourceUri"`
}

// The set of arguments for constructing a BgpPeer resource.
type BgpPeerArgs struct {
	// The name of the BgpPeer
	BgpPeerName pulumi.StringPtrInput
	// My ASN
	MyAsn pulumi.IntInput
	// Peer Address
	PeerAddress pulumi.StringInput
	// Peer ASN
	PeerAsn pulumi.IntInput
	// The fully qualified Azure Resource manager identifier of the resource.
	ResourceUri pulumi.StringInput
}

func (BgpPeerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*bgpPeerArgs)(nil)).Elem()
}

type BgpPeerInput interface {
	pulumi.Input

	ToBgpPeerOutput() BgpPeerOutput
	ToBgpPeerOutputWithContext(ctx context.Context) BgpPeerOutput
}

func (*BgpPeer) ElementType() reflect.Type {
	return reflect.TypeOf((**BgpPeer)(nil)).Elem()
}

func (i *BgpPeer) ToBgpPeerOutput() BgpPeerOutput {
	return i.ToBgpPeerOutputWithContext(context.Background())
}

func (i *BgpPeer) ToBgpPeerOutputWithContext(ctx context.Context) BgpPeerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BgpPeerOutput)
}

type BgpPeerOutput struct{ *pulumi.OutputState }

func (BgpPeerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BgpPeer)(nil)).Elem()
}

func (o BgpPeerOutput) ToBgpPeerOutput() BgpPeerOutput {
	return o
}

func (o BgpPeerOutput) ToBgpPeerOutputWithContext(ctx context.Context) BgpPeerOutput {
	return o
}

// My ASN
func (o BgpPeerOutput) MyAsn() pulumi.IntOutput {
	return o.ApplyT(func(v *BgpPeer) pulumi.IntOutput { return v.MyAsn }).(pulumi.IntOutput)
}

// The name of the resource
func (o BgpPeerOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *BgpPeer) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Peer Address
func (o BgpPeerOutput) PeerAddress() pulumi.StringOutput {
	return o.ApplyT(func(v *BgpPeer) pulumi.StringOutput { return v.PeerAddress }).(pulumi.StringOutput)
}

// Peer ASN
func (o BgpPeerOutput) PeerAsn() pulumi.IntOutput {
	return o.ApplyT(func(v *BgpPeer) pulumi.IntOutput { return v.PeerAsn }).(pulumi.IntOutput)
}

// Resource provision state
func (o BgpPeerOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v *BgpPeer) pulumi.StringOutput { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o BgpPeerOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v *BgpPeer) SystemDataResponseOutput { return v.SystemData }).(SystemDataResponseOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o BgpPeerOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *BgpPeer) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(BgpPeerOutput{})
}
