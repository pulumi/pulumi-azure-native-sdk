// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20240301

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// A StorageClass resource for an Arc connected cluster (Microsoft.Kubernetes/connectedClusters)
type StorageClass struct {
	pulumi.CustomResourceState

	// The access mode: [ReadWriteOnce, ReadWriteMany] or [ReadWriteOnce]
	AccessModes pulumi.StringArrayOutput `pulumi:"accessModes"`
	// Volume can be expanded or not
	AllowVolumeExpansion pulumi.StringPtrOutput `pulumi:"allowVolumeExpansion"`
	// Allow single data node failure
	DataResilience pulumi.StringPtrOutput `pulumi:"dataResilience"`
	// Failover speed: NA, Slow, Fast
	FailoverSpeed pulumi.StringPtrOutput `pulumi:"failoverSpeed"`
	// Limitations of the storage class
	Limitations pulumi.StringArrayOutput `pulumi:"limitations"`
	// Additional mount options
	MountOptions pulumi.StringArrayOutput `pulumi:"mountOptions"`
	// The name of the resource
	Name pulumi.StringOutput `pulumi:"name"`
	// Performance tier
	Performance pulumi.StringPtrOutput `pulumi:"performance"`
	// Selection priority when multiple storage classes meet the criteria. 0: Highest, -1: Never use
	Priority pulumi.Float64PtrOutput `pulumi:"priority"`
	// Provisioner name
	Provisioner pulumi.StringPtrOutput `pulumi:"provisioner"`
	// Resource provision state
	ProvisioningState pulumi.StringOutput `pulumi:"provisioningState"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponseOutput `pulumi:"systemData"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type pulumi.StringOutput `pulumi:"type"`
	// Properties of the StorageClass
	TypeProperties pulumi.AnyOutput `pulumi:"typeProperties"`
	// Binding mode of volumes: Immediate, WaitForFirstConsumer
	VolumeBindingMode pulumi.StringPtrOutput `pulumi:"volumeBindingMode"`
}

// NewStorageClass registers a new resource with the given unique name, arguments, and options.
func NewStorageClass(ctx *pulumi.Context,
	name string, args *StorageClassArgs, opts ...pulumi.ResourceOption) (*StorageClass, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ResourceUri == nil {
		return nil, errors.New("invalid value for required argument 'ResourceUri'")
	}
	if args.TypeProperties == nil {
		return nil, errors.New("invalid value for required argument 'TypeProperties'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:kubernetesruntime:StorageClass"),
		},
		{
			Type: pulumi.String("azure-native:kubernetesruntime/v20231001preview:StorageClass"),
		},
	})
	opts = append(opts, aliases)
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource StorageClass
	err := ctx.RegisterResource("azure-native:kubernetesruntime/v20240301:StorageClass", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetStorageClass gets an existing StorageClass resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetStorageClass(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *StorageClassState, opts ...pulumi.ResourceOption) (*StorageClass, error) {
	var resource StorageClass
	err := ctx.ReadResource("azure-native:kubernetesruntime/v20240301:StorageClass", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering StorageClass resources.
type storageClassState struct {
}

type StorageClassState struct {
}

func (StorageClassState) ElementType() reflect.Type {
	return reflect.TypeOf((*storageClassState)(nil)).Elem()
}

type storageClassArgs struct {
	// The access mode: [ReadWriteOnce, ReadWriteMany] or [ReadWriteOnce]
	AccessModes []string `pulumi:"accessModes"`
	// Volume can be expanded or not
	AllowVolumeExpansion *string `pulumi:"allowVolumeExpansion"`
	// Allow single data node failure
	DataResilience *string `pulumi:"dataResilience"`
	// Failover speed: NA, Slow, Fast
	FailoverSpeed *string `pulumi:"failoverSpeed"`
	// Limitations of the storage class
	Limitations []string `pulumi:"limitations"`
	// Additional mount options
	MountOptions []string `pulumi:"mountOptions"`
	// Performance tier
	Performance *string `pulumi:"performance"`
	// Selection priority when multiple storage classes meet the criteria. 0: Highest, -1: Never use
	Priority *float64 `pulumi:"priority"`
	// Provisioner name
	Provisioner *string `pulumi:"provisioner"`
	// The fully qualified Azure Resource manager identifier of the resource.
	ResourceUri string `pulumi:"resourceUri"`
	// The name of the the storage class
	StorageClassName *string `pulumi:"storageClassName"`
	// Properties of the StorageClass
	TypeProperties interface{} `pulumi:"typeProperties"`
	// Binding mode of volumes: Immediate, WaitForFirstConsumer
	VolumeBindingMode *string `pulumi:"volumeBindingMode"`
}

// The set of arguments for constructing a StorageClass resource.
type StorageClassArgs struct {
	// The access mode: [ReadWriteOnce, ReadWriteMany] or [ReadWriteOnce]
	AccessModes pulumi.StringArrayInput
	// Volume can be expanded or not
	AllowVolumeExpansion pulumi.StringPtrInput
	// Allow single data node failure
	DataResilience pulumi.StringPtrInput
	// Failover speed: NA, Slow, Fast
	FailoverSpeed pulumi.StringPtrInput
	// Limitations of the storage class
	Limitations pulumi.StringArrayInput
	// Additional mount options
	MountOptions pulumi.StringArrayInput
	// Performance tier
	Performance pulumi.StringPtrInput
	// Selection priority when multiple storage classes meet the criteria. 0: Highest, -1: Never use
	Priority pulumi.Float64PtrInput
	// Provisioner name
	Provisioner pulumi.StringPtrInput
	// The fully qualified Azure Resource manager identifier of the resource.
	ResourceUri pulumi.StringInput
	// The name of the the storage class
	StorageClassName pulumi.StringPtrInput
	// Properties of the StorageClass
	TypeProperties pulumi.Input
	// Binding mode of volumes: Immediate, WaitForFirstConsumer
	VolumeBindingMode pulumi.StringPtrInput
}

func (StorageClassArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*storageClassArgs)(nil)).Elem()
}

type StorageClassInput interface {
	pulumi.Input

	ToStorageClassOutput() StorageClassOutput
	ToStorageClassOutputWithContext(ctx context.Context) StorageClassOutput
}

func (*StorageClass) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageClass)(nil)).Elem()
}

func (i *StorageClass) ToStorageClassOutput() StorageClassOutput {
	return i.ToStorageClassOutputWithContext(context.Background())
}

func (i *StorageClass) ToStorageClassOutputWithContext(ctx context.Context) StorageClassOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageClassOutput)
}

type StorageClassOutput struct{ *pulumi.OutputState }

func (StorageClassOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageClass)(nil)).Elem()
}

func (o StorageClassOutput) ToStorageClassOutput() StorageClassOutput {
	return o
}

func (o StorageClassOutput) ToStorageClassOutputWithContext(ctx context.Context) StorageClassOutput {
	return o
}

// The access mode: [ReadWriteOnce, ReadWriteMany] or [ReadWriteOnce]
func (o StorageClassOutput) AccessModes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *StorageClass) pulumi.StringArrayOutput { return v.AccessModes }).(pulumi.StringArrayOutput)
}

// Volume can be expanded or not
func (o StorageClassOutput) AllowVolumeExpansion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageClass) pulumi.StringPtrOutput { return v.AllowVolumeExpansion }).(pulumi.StringPtrOutput)
}

// Allow single data node failure
func (o StorageClassOutput) DataResilience() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageClass) pulumi.StringPtrOutput { return v.DataResilience }).(pulumi.StringPtrOutput)
}

// Failover speed: NA, Slow, Fast
func (o StorageClassOutput) FailoverSpeed() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageClass) pulumi.StringPtrOutput { return v.FailoverSpeed }).(pulumi.StringPtrOutput)
}

// Limitations of the storage class
func (o StorageClassOutput) Limitations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *StorageClass) pulumi.StringArrayOutput { return v.Limitations }).(pulumi.StringArrayOutput)
}

// Additional mount options
func (o StorageClassOutput) MountOptions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *StorageClass) pulumi.StringArrayOutput { return v.MountOptions }).(pulumi.StringArrayOutput)
}

// The name of the resource
func (o StorageClassOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *StorageClass) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Performance tier
func (o StorageClassOutput) Performance() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageClass) pulumi.StringPtrOutput { return v.Performance }).(pulumi.StringPtrOutput)
}

// Selection priority when multiple storage classes meet the criteria. 0: Highest, -1: Never use
func (o StorageClassOutput) Priority() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *StorageClass) pulumi.Float64PtrOutput { return v.Priority }).(pulumi.Float64PtrOutput)
}

// Provisioner name
func (o StorageClassOutput) Provisioner() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageClass) pulumi.StringPtrOutput { return v.Provisioner }).(pulumi.StringPtrOutput)
}

// Resource provision state
func (o StorageClassOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v *StorageClass) pulumi.StringOutput { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o StorageClassOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v *StorageClass) SystemDataResponseOutput { return v.SystemData }).(SystemDataResponseOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o StorageClassOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *StorageClass) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

// Properties of the StorageClass
func (o StorageClassOutput) TypeProperties() pulumi.AnyOutput {
	return o.ApplyT(func(v *StorageClass) pulumi.AnyOutput { return v.TypeProperties }).(pulumi.AnyOutput)
}

// Binding mode of volumes: Immediate, WaitForFirstConsumer
func (o StorageClassOutput) VolumeBindingMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageClass) pulumi.StringPtrOutput { return v.VolumeBindingMode }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(StorageClassOutput{})
}
