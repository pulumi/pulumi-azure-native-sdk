// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20231001preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Get a StorageClassResource
func LookupStorageClass(ctx *pulumi.Context, args *LookupStorageClassArgs, opts ...pulumi.InvokeOption) (*LookupStorageClassResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv LookupStorageClassResult
	err := ctx.Invoke("azure-native:kubernetesruntime/v20231001preview:getStorageClass", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupStorageClassArgs struct {
	// The fully qualified Azure Resource manager identifier of the resource.
	ResourceUri string `pulumi:"resourceUri"`
	// The name of the the storage class
	StorageClassName string `pulumi:"storageClassName"`
}

// A StorageClass resource for an Arc connected cluster (Microsoft.Kubernetes/connectedClusters)
type LookupStorageClassResult struct {
	// The access mode: [ReadWriteOnce, ReadWriteMany] or [ReadWriteOnce]
	AccessModes []string `pulumi:"accessModes"`
	// Volume can be expanded or not
	AllowVolumeExpansion *string `pulumi:"allowVolumeExpansion"`
	// Allow single data node failure
	DataResilience *string `pulumi:"dataResilience"`
	// Failover speed: NA, Slow, Fast
	FailoverSpeed *string `pulumi:"failoverSpeed"`
	// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
	Id string `pulumi:"id"`
	// Limitations of the storage class
	Limitations []string `pulumi:"limitations"`
	// Additional mount options
	MountOptions []string `pulumi:"mountOptions"`
	// The name of the resource
	Name string `pulumi:"name"`
	// Performance tier
	Performance *string `pulumi:"performance"`
	// Selection priority when multiple storage classes meet the criteria. 0: Highest, -1: Never use
	Priority *float64 `pulumi:"priority"`
	// Provisioner name
	Provisioner *string `pulumi:"provisioner"`
	// Resource provision state
	ProvisioningState string `pulumi:"provisioningState"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponse `pulumi:"systemData"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type string `pulumi:"type"`
	// Properties of the StorageClass
	TypeProperties interface{} `pulumi:"typeProperties"`
	// Binding mode of volumes: Immediate, WaitForFirstConsumer
	VolumeBindingMode *string `pulumi:"volumeBindingMode"`
}

func LookupStorageClassOutput(ctx *pulumi.Context, args LookupStorageClassOutputArgs, opts ...pulumi.InvokeOption) LookupStorageClassResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupStorageClassResult, error) {
			args := v.(LookupStorageClassArgs)
			r, err := LookupStorageClass(ctx, &args, opts...)
			var s LookupStorageClassResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupStorageClassResultOutput)
}

type LookupStorageClassOutputArgs struct {
	// The fully qualified Azure Resource manager identifier of the resource.
	ResourceUri pulumi.StringInput `pulumi:"resourceUri"`
	// The name of the the storage class
	StorageClassName pulumi.StringInput `pulumi:"storageClassName"`
}

func (LookupStorageClassOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupStorageClassArgs)(nil)).Elem()
}

// A StorageClass resource for an Arc connected cluster (Microsoft.Kubernetes/connectedClusters)
type LookupStorageClassResultOutput struct{ *pulumi.OutputState }

func (LookupStorageClassResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupStorageClassResult)(nil)).Elem()
}

func (o LookupStorageClassResultOutput) ToLookupStorageClassResultOutput() LookupStorageClassResultOutput {
	return o
}

func (o LookupStorageClassResultOutput) ToLookupStorageClassResultOutputWithContext(ctx context.Context) LookupStorageClassResultOutput {
	return o
}

// The access mode: [ReadWriteOnce, ReadWriteMany] or [ReadWriteOnce]
func (o LookupStorageClassResultOutput) AccessModes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupStorageClassResult) []string { return v.AccessModes }).(pulumi.StringArrayOutput)
}

// Volume can be expanded or not
func (o LookupStorageClassResultOutput) AllowVolumeExpansion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupStorageClassResult) *string { return v.AllowVolumeExpansion }).(pulumi.StringPtrOutput)
}

// Allow single data node failure
func (o LookupStorageClassResultOutput) DataResilience() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupStorageClassResult) *string { return v.DataResilience }).(pulumi.StringPtrOutput)
}

// Failover speed: NA, Slow, Fast
func (o LookupStorageClassResultOutput) FailoverSpeed() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupStorageClassResult) *string { return v.FailoverSpeed }).(pulumi.StringPtrOutput)
}

// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
func (o LookupStorageClassResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupStorageClassResult) string { return v.Id }).(pulumi.StringOutput)
}

// Limitations of the storage class
func (o LookupStorageClassResultOutput) Limitations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupStorageClassResult) []string { return v.Limitations }).(pulumi.StringArrayOutput)
}

// Additional mount options
func (o LookupStorageClassResultOutput) MountOptions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupStorageClassResult) []string { return v.MountOptions }).(pulumi.StringArrayOutput)
}

// The name of the resource
func (o LookupStorageClassResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupStorageClassResult) string { return v.Name }).(pulumi.StringOutput)
}

// Performance tier
func (o LookupStorageClassResultOutput) Performance() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupStorageClassResult) *string { return v.Performance }).(pulumi.StringPtrOutput)
}

// Selection priority when multiple storage classes meet the criteria. 0: Highest, -1: Never use
func (o LookupStorageClassResultOutput) Priority() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v LookupStorageClassResult) *float64 { return v.Priority }).(pulumi.Float64PtrOutput)
}

// Provisioner name
func (o LookupStorageClassResultOutput) Provisioner() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupStorageClassResult) *string { return v.Provisioner }).(pulumi.StringPtrOutput)
}

// Resource provision state
func (o LookupStorageClassResultOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v LookupStorageClassResult) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o LookupStorageClassResultOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v LookupStorageClassResult) SystemDataResponse { return v.SystemData }).(SystemDataResponseOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o LookupStorageClassResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupStorageClassResult) string { return v.Type }).(pulumi.StringOutput)
}

// Properties of the StorageClass
func (o LookupStorageClassResultOutput) TypeProperties() pulumi.AnyOutput {
	return o.ApplyT(func(v LookupStorageClassResult) interface{} { return v.TypeProperties }).(pulumi.AnyOutput)
}

// Binding mode of volumes: Immediate, WaitForFirstConsumer
func (o LookupStorageClassResultOutput) VolumeBindingMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupStorageClassResult) *string { return v.VolumeBindingMode }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupStorageClassResultOutput{})
}
