// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package iotoperations

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v3/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = utilities.GetEnvOrDefault

// Broker Advanced Settings
type AdvancedSettings struct {
	// Configurations related to All Clients.
	Clients *ClientConfig `pulumi:"clients"`
	// The setting to enable or disable encryption of internal Traffic.
	EncryptInternalTraffic *string `pulumi:"encryptInternalTraffic"`
	// Certificate rotation and private key configuration.
	InternalCerts *CertManagerCertOptions `pulumi:"internalCerts"`
}

// Defaults sets the appropriate defaults for AdvancedSettings
func (val *AdvancedSettings) Defaults() *AdvancedSettings {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.Clients = tmp.Clients.Defaults()

	if tmp.EncryptInternalTraffic == nil {
		encryptInternalTraffic_ := "Enabled"
		tmp.EncryptInternalTraffic = &encryptInternalTraffic_
	}
	return &tmp
}

// AdvancedSettingsInput is an input type that accepts AdvancedSettingsArgs and AdvancedSettingsOutput values.
// You can construct a concrete instance of `AdvancedSettingsInput` via:
//
//	AdvancedSettingsArgs{...}
type AdvancedSettingsInput interface {
	pulumi.Input

	ToAdvancedSettingsOutput() AdvancedSettingsOutput
	ToAdvancedSettingsOutputWithContext(context.Context) AdvancedSettingsOutput
}

// Broker Advanced Settings
type AdvancedSettingsArgs struct {
	// Configurations related to All Clients.
	Clients ClientConfigPtrInput `pulumi:"clients"`
	// The setting to enable or disable encryption of internal Traffic.
	EncryptInternalTraffic pulumi.StringPtrInput `pulumi:"encryptInternalTraffic"`
	// Certificate rotation and private key configuration.
	InternalCerts CertManagerCertOptionsPtrInput `pulumi:"internalCerts"`
}

// Defaults sets the appropriate defaults for AdvancedSettingsArgs
func (val *AdvancedSettingsArgs) Defaults() *AdvancedSettingsArgs {
	if val == nil {
		return nil
	}
	tmp := *val

	if tmp.EncryptInternalTraffic == nil {
		tmp.EncryptInternalTraffic = pulumi.StringPtr("Enabled")
	}
	return &tmp
}
func (AdvancedSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AdvancedSettings)(nil)).Elem()
}

func (i AdvancedSettingsArgs) ToAdvancedSettingsOutput() AdvancedSettingsOutput {
	return i.ToAdvancedSettingsOutputWithContext(context.Background())
}

func (i AdvancedSettingsArgs) ToAdvancedSettingsOutputWithContext(ctx context.Context) AdvancedSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AdvancedSettingsOutput)
}

func (i AdvancedSettingsArgs) ToAdvancedSettingsPtrOutput() AdvancedSettingsPtrOutput {
	return i.ToAdvancedSettingsPtrOutputWithContext(context.Background())
}

func (i AdvancedSettingsArgs) ToAdvancedSettingsPtrOutputWithContext(ctx context.Context) AdvancedSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AdvancedSettingsOutput).ToAdvancedSettingsPtrOutputWithContext(ctx)
}

// AdvancedSettingsPtrInput is an input type that accepts AdvancedSettingsArgs, AdvancedSettingsPtr and AdvancedSettingsPtrOutput values.
// You can construct a concrete instance of `AdvancedSettingsPtrInput` via:
//
//	        AdvancedSettingsArgs{...}
//
//	or:
//
//	        nil
type AdvancedSettingsPtrInput interface {
	pulumi.Input

	ToAdvancedSettingsPtrOutput() AdvancedSettingsPtrOutput
	ToAdvancedSettingsPtrOutputWithContext(context.Context) AdvancedSettingsPtrOutput
}

type advancedSettingsPtrType AdvancedSettingsArgs

func AdvancedSettingsPtr(v *AdvancedSettingsArgs) AdvancedSettingsPtrInput {
	return (*advancedSettingsPtrType)(v)
}

func (*advancedSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AdvancedSettings)(nil)).Elem()
}

func (i *advancedSettingsPtrType) ToAdvancedSettingsPtrOutput() AdvancedSettingsPtrOutput {
	return i.ToAdvancedSettingsPtrOutputWithContext(context.Background())
}

func (i *advancedSettingsPtrType) ToAdvancedSettingsPtrOutputWithContext(ctx context.Context) AdvancedSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AdvancedSettingsPtrOutput)
}

// Broker Advanced Settings
type AdvancedSettingsOutput struct{ *pulumi.OutputState }

func (AdvancedSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AdvancedSettings)(nil)).Elem()
}

func (o AdvancedSettingsOutput) ToAdvancedSettingsOutput() AdvancedSettingsOutput {
	return o
}

func (o AdvancedSettingsOutput) ToAdvancedSettingsOutputWithContext(ctx context.Context) AdvancedSettingsOutput {
	return o
}

func (o AdvancedSettingsOutput) ToAdvancedSettingsPtrOutput() AdvancedSettingsPtrOutput {
	return o.ToAdvancedSettingsPtrOutputWithContext(context.Background())
}

func (o AdvancedSettingsOutput) ToAdvancedSettingsPtrOutputWithContext(ctx context.Context) AdvancedSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AdvancedSettings) *AdvancedSettings {
		return &v
	}).(AdvancedSettingsPtrOutput)
}

// Configurations related to All Clients.
func (o AdvancedSettingsOutput) Clients() ClientConfigPtrOutput {
	return o.ApplyT(func(v AdvancedSettings) *ClientConfig { return v.Clients }).(ClientConfigPtrOutput)
}

// The setting to enable or disable encryption of internal Traffic.
func (o AdvancedSettingsOutput) EncryptInternalTraffic() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AdvancedSettings) *string { return v.EncryptInternalTraffic }).(pulumi.StringPtrOutput)
}

// Certificate rotation and private key configuration.
func (o AdvancedSettingsOutput) InternalCerts() CertManagerCertOptionsPtrOutput {
	return o.ApplyT(func(v AdvancedSettings) *CertManagerCertOptions { return v.InternalCerts }).(CertManagerCertOptionsPtrOutput)
}

type AdvancedSettingsPtrOutput struct{ *pulumi.OutputState }

func (AdvancedSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AdvancedSettings)(nil)).Elem()
}

func (o AdvancedSettingsPtrOutput) ToAdvancedSettingsPtrOutput() AdvancedSettingsPtrOutput {
	return o
}

func (o AdvancedSettingsPtrOutput) ToAdvancedSettingsPtrOutputWithContext(ctx context.Context) AdvancedSettingsPtrOutput {
	return o
}

func (o AdvancedSettingsPtrOutput) Elem() AdvancedSettingsOutput {
	return o.ApplyT(func(v *AdvancedSettings) AdvancedSettings {
		if v != nil {
			return *v
		}
		var ret AdvancedSettings
		return ret
	}).(AdvancedSettingsOutput)
}

// Configurations related to All Clients.
func (o AdvancedSettingsPtrOutput) Clients() ClientConfigPtrOutput {
	return o.ApplyT(func(v *AdvancedSettings) *ClientConfig {
		if v == nil {
			return nil
		}
		return v.Clients
	}).(ClientConfigPtrOutput)
}

// The setting to enable or disable encryption of internal Traffic.
func (o AdvancedSettingsPtrOutput) EncryptInternalTraffic() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AdvancedSettings) *string {
		if v == nil {
			return nil
		}
		return v.EncryptInternalTraffic
	}).(pulumi.StringPtrOutput)
}

// Certificate rotation and private key configuration.
func (o AdvancedSettingsPtrOutput) InternalCerts() CertManagerCertOptionsPtrOutput {
	return o.ApplyT(func(v *AdvancedSettings) *CertManagerCertOptions {
		if v == nil {
			return nil
		}
		return v.InternalCerts
	}).(CertManagerCertOptionsPtrOutput)
}

// Broker Advanced Settings
type AdvancedSettingsResponse struct {
	// Configurations related to All Clients.
	Clients *ClientConfigResponse `pulumi:"clients"`
	// The setting to enable or disable encryption of internal Traffic.
	EncryptInternalTraffic *string `pulumi:"encryptInternalTraffic"`
	// Certificate rotation and private key configuration.
	InternalCerts *CertManagerCertOptionsResponse `pulumi:"internalCerts"`
}

// Defaults sets the appropriate defaults for AdvancedSettingsResponse
func (val *AdvancedSettingsResponse) Defaults() *AdvancedSettingsResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.Clients = tmp.Clients.Defaults()

	if tmp.EncryptInternalTraffic == nil {
		encryptInternalTraffic_ := "Enabled"
		tmp.EncryptInternalTraffic = &encryptInternalTraffic_
	}
	return &tmp
}

// Broker Advanced Settings
type AdvancedSettingsResponseOutput struct{ *pulumi.OutputState }

func (AdvancedSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AdvancedSettingsResponse)(nil)).Elem()
}

func (o AdvancedSettingsResponseOutput) ToAdvancedSettingsResponseOutput() AdvancedSettingsResponseOutput {
	return o
}

func (o AdvancedSettingsResponseOutput) ToAdvancedSettingsResponseOutputWithContext(ctx context.Context) AdvancedSettingsResponseOutput {
	return o
}

// Configurations related to All Clients.
func (o AdvancedSettingsResponseOutput) Clients() ClientConfigResponsePtrOutput {
	return o.ApplyT(func(v AdvancedSettingsResponse) *ClientConfigResponse { return v.Clients }).(ClientConfigResponsePtrOutput)
}

// The setting to enable or disable encryption of internal Traffic.
func (o AdvancedSettingsResponseOutput) EncryptInternalTraffic() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AdvancedSettingsResponse) *string { return v.EncryptInternalTraffic }).(pulumi.StringPtrOutput)
}

// Certificate rotation and private key configuration.
func (o AdvancedSettingsResponseOutput) InternalCerts() CertManagerCertOptionsResponsePtrOutput {
	return o.ApplyT(func(v AdvancedSettingsResponse) *CertManagerCertOptionsResponse { return v.InternalCerts }).(CertManagerCertOptionsResponsePtrOutput)
}

type AdvancedSettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (AdvancedSettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AdvancedSettingsResponse)(nil)).Elem()
}

func (o AdvancedSettingsResponsePtrOutput) ToAdvancedSettingsResponsePtrOutput() AdvancedSettingsResponsePtrOutput {
	return o
}

func (o AdvancedSettingsResponsePtrOutput) ToAdvancedSettingsResponsePtrOutputWithContext(ctx context.Context) AdvancedSettingsResponsePtrOutput {
	return o
}

func (o AdvancedSettingsResponsePtrOutput) Elem() AdvancedSettingsResponseOutput {
	return o.ApplyT(func(v *AdvancedSettingsResponse) AdvancedSettingsResponse {
		if v != nil {
			return *v
		}
		var ret AdvancedSettingsResponse
		return ret
	}).(AdvancedSettingsResponseOutput)
}

// Configurations related to All Clients.
func (o AdvancedSettingsResponsePtrOutput) Clients() ClientConfigResponsePtrOutput {
	return o.ApplyT(func(v *AdvancedSettingsResponse) *ClientConfigResponse {
		if v == nil {
			return nil
		}
		return v.Clients
	}).(ClientConfigResponsePtrOutput)
}

// The setting to enable or disable encryption of internal Traffic.
func (o AdvancedSettingsResponsePtrOutput) EncryptInternalTraffic() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AdvancedSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.EncryptInternalTraffic
	}).(pulumi.StringPtrOutput)
}

// Certificate rotation and private key configuration.
func (o AdvancedSettingsResponsePtrOutput) InternalCerts() CertManagerCertOptionsResponsePtrOutput {
	return o.ApplyT(func(v *AdvancedSettingsResponse) *CertManagerCertOptionsResponse {
		if v == nil {
			return nil
		}
		return v.InternalCerts
	}).(CertManagerCertOptionsResponsePtrOutput)
}

// AkriConnector properties.
type AkriConnectorPropertiesResponse struct {
	// The status of the last operation.
	ProvisioningState string `pulumi:"provisioningState"`
}

// AkriConnector properties.
type AkriConnectorPropertiesResponseOutput struct{ *pulumi.OutputState }

func (AkriConnectorPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AkriConnectorPropertiesResponse)(nil)).Elem()
}

func (o AkriConnectorPropertiesResponseOutput) ToAkriConnectorPropertiesResponseOutput() AkriConnectorPropertiesResponseOutput {
	return o
}

func (o AkriConnectorPropertiesResponseOutput) ToAkriConnectorPropertiesResponseOutputWithContext(ctx context.Context) AkriConnectorPropertiesResponseOutput {
	return o
}

// The status of the last operation.
func (o AkriConnectorPropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v AkriConnectorPropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// AkriConnectorTemplateAioMetadata properties.
type AkriConnectorTemplateAioMetadata struct {
	// The maximum version of AIO required for the connector.
	AioMaxVersion *string `pulumi:"aioMaxVersion"`
	// The minimum version of AIO required for the connector.
	AioMinVersion *string `pulumi:"aioMinVersion"`
}

// AkriConnectorTemplateAioMetadataInput is an input type that accepts AkriConnectorTemplateAioMetadataArgs and AkriConnectorTemplateAioMetadataOutput values.
// You can construct a concrete instance of `AkriConnectorTemplateAioMetadataInput` via:
//
//	AkriConnectorTemplateAioMetadataArgs{...}
type AkriConnectorTemplateAioMetadataInput interface {
	pulumi.Input

	ToAkriConnectorTemplateAioMetadataOutput() AkriConnectorTemplateAioMetadataOutput
	ToAkriConnectorTemplateAioMetadataOutputWithContext(context.Context) AkriConnectorTemplateAioMetadataOutput
}

// AkriConnectorTemplateAioMetadata properties.
type AkriConnectorTemplateAioMetadataArgs struct {
	// The maximum version of AIO required for the connector.
	AioMaxVersion pulumi.StringPtrInput `pulumi:"aioMaxVersion"`
	// The minimum version of AIO required for the connector.
	AioMinVersion pulumi.StringPtrInput `pulumi:"aioMinVersion"`
}

func (AkriConnectorTemplateAioMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AkriConnectorTemplateAioMetadata)(nil)).Elem()
}

func (i AkriConnectorTemplateAioMetadataArgs) ToAkriConnectorTemplateAioMetadataOutput() AkriConnectorTemplateAioMetadataOutput {
	return i.ToAkriConnectorTemplateAioMetadataOutputWithContext(context.Background())
}

func (i AkriConnectorTemplateAioMetadataArgs) ToAkriConnectorTemplateAioMetadataOutputWithContext(ctx context.Context) AkriConnectorTemplateAioMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AkriConnectorTemplateAioMetadataOutput)
}

func (i AkriConnectorTemplateAioMetadataArgs) ToAkriConnectorTemplateAioMetadataPtrOutput() AkriConnectorTemplateAioMetadataPtrOutput {
	return i.ToAkriConnectorTemplateAioMetadataPtrOutputWithContext(context.Background())
}

func (i AkriConnectorTemplateAioMetadataArgs) ToAkriConnectorTemplateAioMetadataPtrOutputWithContext(ctx context.Context) AkriConnectorTemplateAioMetadataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AkriConnectorTemplateAioMetadataOutput).ToAkriConnectorTemplateAioMetadataPtrOutputWithContext(ctx)
}

// AkriConnectorTemplateAioMetadataPtrInput is an input type that accepts AkriConnectorTemplateAioMetadataArgs, AkriConnectorTemplateAioMetadataPtr and AkriConnectorTemplateAioMetadataPtrOutput values.
// You can construct a concrete instance of `AkriConnectorTemplateAioMetadataPtrInput` via:
//
//	        AkriConnectorTemplateAioMetadataArgs{...}
//
//	or:
//
//	        nil
type AkriConnectorTemplateAioMetadataPtrInput interface {
	pulumi.Input

	ToAkriConnectorTemplateAioMetadataPtrOutput() AkriConnectorTemplateAioMetadataPtrOutput
	ToAkriConnectorTemplateAioMetadataPtrOutputWithContext(context.Context) AkriConnectorTemplateAioMetadataPtrOutput
}

type akriConnectorTemplateAioMetadataPtrType AkriConnectorTemplateAioMetadataArgs

func AkriConnectorTemplateAioMetadataPtr(v *AkriConnectorTemplateAioMetadataArgs) AkriConnectorTemplateAioMetadataPtrInput {
	return (*akriConnectorTemplateAioMetadataPtrType)(v)
}

func (*akriConnectorTemplateAioMetadataPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AkriConnectorTemplateAioMetadata)(nil)).Elem()
}

func (i *akriConnectorTemplateAioMetadataPtrType) ToAkriConnectorTemplateAioMetadataPtrOutput() AkriConnectorTemplateAioMetadataPtrOutput {
	return i.ToAkriConnectorTemplateAioMetadataPtrOutputWithContext(context.Background())
}

func (i *akriConnectorTemplateAioMetadataPtrType) ToAkriConnectorTemplateAioMetadataPtrOutputWithContext(ctx context.Context) AkriConnectorTemplateAioMetadataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AkriConnectorTemplateAioMetadataPtrOutput)
}

// AkriConnectorTemplateAioMetadata properties.
type AkriConnectorTemplateAioMetadataOutput struct{ *pulumi.OutputState }

func (AkriConnectorTemplateAioMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AkriConnectorTemplateAioMetadata)(nil)).Elem()
}

func (o AkriConnectorTemplateAioMetadataOutput) ToAkriConnectorTemplateAioMetadataOutput() AkriConnectorTemplateAioMetadataOutput {
	return o
}

func (o AkriConnectorTemplateAioMetadataOutput) ToAkriConnectorTemplateAioMetadataOutputWithContext(ctx context.Context) AkriConnectorTemplateAioMetadataOutput {
	return o
}

func (o AkriConnectorTemplateAioMetadataOutput) ToAkriConnectorTemplateAioMetadataPtrOutput() AkriConnectorTemplateAioMetadataPtrOutput {
	return o.ToAkriConnectorTemplateAioMetadataPtrOutputWithContext(context.Background())
}

func (o AkriConnectorTemplateAioMetadataOutput) ToAkriConnectorTemplateAioMetadataPtrOutputWithContext(ctx context.Context) AkriConnectorTemplateAioMetadataPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AkriConnectorTemplateAioMetadata) *AkriConnectorTemplateAioMetadata {
		return &v
	}).(AkriConnectorTemplateAioMetadataPtrOutput)
}

// The maximum version of AIO required for the connector.
func (o AkriConnectorTemplateAioMetadataOutput) AioMaxVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AkriConnectorTemplateAioMetadata) *string { return v.AioMaxVersion }).(pulumi.StringPtrOutput)
}

// The minimum version of AIO required for the connector.
func (o AkriConnectorTemplateAioMetadataOutput) AioMinVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AkriConnectorTemplateAioMetadata) *string { return v.AioMinVersion }).(pulumi.StringPtrOutput)
}

type AkriConnectorTemplateAioMetadataPtrOutput struct{ *pulumi.OutputState }

func (AkriConnectorTemplateAioMetadataPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AkriConnectorTemplateAioMetadata)(nil)).Elem()
}

func (o AkriConnectorTemplateAioMetadataPtrOutput) ToAkriConnectorTemplateAioMetadataPtrOutput() AkriConnectorTemplateAioMetadataPtrOutput {
	return o
}

func (o AkriConnectorTemplateAioMetadataPtrOutput) ToAkriConnectorTemplateAioMetadataPtrOutputWithContext(ctx context.Context) AkriConnectorTemplateAioMetadataPtrOutput {
	return o
}

func (o AkriConnectorTemplateAioMetadataPtrOutput) Elem() AkriConnectorTemplateAioMetadataOutput {
	return o.ApplyT(func(v *AkriConnectorTemplateAioMetadata) AkriConnectorTemplateAioMetadata {
		if v != nil {
			return *v
		}
		var ret AkriConnectorTemplateAioMetadata
		return ret
	}).(AkriConnectorTemplateAioMetadataOutput)
}

// The maximum version of AIO required for the connector.
func (o AkriConnectorTemplateAioMetadataPtrOutput) AioMaxVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AkriConnectorTemplateAioMetadata) *string {
		if v == nil {
			return nil
		}
		return v.AioMaxVersion
	}).(pulumi.StringPtrOutput)
}

// The minimum version of AIO required for the connector.
func (o AkriConnectorTemplateAioMetadataPtrOutput) AioMinVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AkriConnectorTemplateAioMetadata) *string {
		if v == nil {
			return nil
		}
		return v.AioMinVersion
	}).(pulumi.StringPtrOutput)
}

// AkriConnectorTemplateAioMetadata properties.
type AkriConnectorTemplateAioMetadataResponse struct {
	// The maximum version of AIO required for the connector.
	AioMaxVersion *string `pulumi:"aioMaxVersion"`
	// The minimum version of AIO required for the connector.
	AioMinVersion *string `pulumi:"aioMinVersion"`
}

// AkriConnectorTemplateAioMetadata properties.
type AkriConnectorTemplateAioMetadataResponseOutput struct{ *pulumi.OutputState }

func (AkriConnectorTemplateAioMetadataResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AkriConnectorTemplateAioMetadataResponse)(nil)).Elem()
}

func (o AkriConnectorTemplateAioMetadataResponseOutput) ToAkriConnectorTemplateAioMetadataResponseOutput() AkriConnectorTemplateAioMetadataResponseOutput {
	return o
}

func (o AkriConnectorTemplateAioMetadataResponseOutput) ToAkriConnectorTemplateAioMetadataResponseOutputWithContext(ctx context.Context) AkriConnectorTemplateAioMetadataResponseOutput {
	return o
}

// The maximum version of AIO required for the connector.
func (o AkriConnectorTemplateAioMetadataResponseOutput) AioMaxVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AkriConnectorTemplateAioMetadataResponse) *string { return v.AioMaxVersion }).(pulumi.StringPtrOutput)
}

// The minimum version of AIO required for the connector.
func (o AkriConnectorTemplateAioMetadataResponseOutput) AioMinVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AkriConnectorTemplateAioMetadataResponse) *string { return v.AioMinVersion }).(pulumi.StringPtrOutput)
}

type AkriConnectorTemplateAioMetadataResponsePtrOutput struct{ *pulumi.OutputState }

func (AkriConnectorTemplateAioMetadataResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AkriConnectorTemplateAioMetadataResponse)(nil)).Elem()
}

func (o AkriConnectorTemplateAioMetadataResponsePtrOutput) ToAkriConnectorTemplateAioMetadataResponsePtrOutput() AkriConnectorTemplateAioMetadataResponsePtrOutput {
	return o
}

func (o AkriConnectorTemplateAioMetadataResponsePtrOutput) ToAkriConnectorTemplateAioMetadataResponsePtrOutputWithContext(ctx context.Context) AkriConnectorTemplateAioMetadataResponsePtrOutput {
	return o
}

func (o AkriConnectorTemplateAioMetadataResponsePtrOutput) Elem() AkriConnectorTemplateAioMetadataResponseOutput {
	return o.ApplyT(func(v *AkriConnectorTemplateAioMetadataResponse) AkriConnectorTemplateAioMetadataResponse {
		if v != nil {
			return *v
		}
		var ret AkriConnectorTemplateAioMetadataResponse
		return ret
	}).(AkriConnectorTemplateAioMetadataResponseOutput)
}

// The maximum version of AIO required for the connector.
func (o AkriConnectorTemplateAioMetadataResponsePtrOutput) AioMaxVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AkriConnectorTemplateAioMetadataResponse) *string {
		if v == nil {
			return nil
		}
		return v.AioMaxVersion
	}).(pulumi.StringPtrOutput)
}

// The minimum version of AIO required for the connector.
func (o AkriConnectorTemplateAioMetadataResponsePtrOutput) AioMinVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AkriConnectorTemplateAioMetadataResponse) *string {
		if v == nil {
			return nil
		}
		return v.AioMinVersion
	}).(pulumi.StringPtrOutput)
}

// AkriConnectorTemplateBucketizedAllocation properties.
type AkriConnectorTemplateBucketizedAllocation struct {
	// The bucketized allocation of AEPs for connectors.
	BucketSize int `pulumi:"bucketSize"`
	// AkriConnectorTemplateAllocationPolicy properties.
	// Expected value is 'Bucketized'.
	Policy string `pulumi:"policy"`
}

// AkriConnectorTemplateBucketizedAllocationInput is an input type that accepts AkriConnectorTemplateBucketizedAllocationArgs and AkriConnectorTemplateBucketizedAllocationOutput values.
// You can construct a concrete instance of `AkriConnectorTemplateBucketizedAllocationInput` via:
//
//	AkriConnectorTemplateBucketizedAllocationArgs{...}
type AkriConnectorTemplateBucketizedAllocationInput interface {
	pulumi.Input

	ToAkriConnectorTemplateBucketizedAllocationOutput() AkriConnectorTemplateBucketizedAllocationOutput
	ToAkriConnectorTemplateBucketizedAllocationOutputWithContext(context.Context) AkriConnectorTemplateBucketizedAllocationOutput
}

// AkriConnectorTemplateBucketizedAllocation properties.
type AkriConnectorTemplateBucketizedAllocationArgs struct {
	// The bucketized allocation of AEPs for connectors.
	BucketSize pulumi.IntInput `pulumi:"bucketSize"`
	// AkriConnectorTemplateAllocationPolicy properties.
	// Expected value is 'Bucketized'.
	Policy pulumi.StringInput `pulumi:"policy"`
}

func (AkriConnectorTemplateBucketizedAllocationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AkriConnectorTemplateBucketizedAllocation)(nil)).Elem()
}

func (i AkriConnectorTemplateBucketizedAllocationArgs) ToAkriConnectorTemplateBucketizedAllocationOutput() AkriConnectorTemplateBucketizedAllocationOutput {
	return i.ToAkriConnectorTemplateBucketizedAllocationOutputWithContext(context.Background())
}

func (i AkriConnectorTemplateBucketizedAllocationArgs) ToAkriConnectorTemplateBucketizedAllocationOutputWithContext(ctx context.Context) AkriConnectorTemplateBucketizedAllocationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AkriConnectorTemplateBucketizedAllocationOutput)
}

func (i AkriConnectorTemplateBucketizedAllocationArgs) ToAkriConnectorTemplateBucketizedAllocationPtrOutput() AkriConnectorTemplateBucketizedAllocationPtrOutput {
	return i.ToAkriConnectorTemplateBucketizedAllocationPtrOutputWithContext(context.Background())
}

func (i AkriConnectorTemplateBucketizedAllocationArgs) ToAkriConnectorTemplateBucketizedAllocationPtrOutputWithContext(ctx context.Context) AkriConnectorTemplateBucketizedAllocationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AkriConnectorTemplateBucketizedAllocationOutput).ToAkriConnectorTemplateBucketizedAllocationPtrOutputWithContext(ctx)
}

// AkriConnectorTemplateBucketizedAllocationPtrInput is an input type that accepts AkriConnectorTemplateBucketizedAllocationArgs, AkriConnectorTemplateBucketizedAllocationPtr and AkriConnectorTemplateBucketizedAllocationPtrOutput values.
// You can construct a concrete instance of `AkriConnectorTemplateBucketizedAllocationPtrInput` via:
//
//	        AkriConnectorTemplateBucketizedAllocationArgs{...}
//
//	or:
//
//	        nil
type AkriConnectorTemplateBucketizedAllocationPtrInput interface {
	pulumi.Input

	ToAkriConnectorTemplateBucketizedAllocationPtrOutput() AkriConnectorTemplateBucketizedAllocationPtrOutput
	ToAkriConnectorTemplateBucketizedAllocationPtrOutputWithContext(context.Context) AkriConnectorTemplateBucketizedAllocationPtrOutput
}

type akriConnectorTemplateBucketizedAllocationPtrType AkriConnectorTemplateBucketizedAllocationArgs

func AkriConnectorTemplateBucketizedAllocationPtr(v *AkriConnectorTemplateBucketizedAllocationArgs) AkriConnectorTemplateBucketizedAllocationPtrInput {
	return (*akriConnectorTemplateBucketizedAllocationPtrType)(v)
}

func (*akriConnectorTemplateBucketizedAllocationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AkriConnectorTemplateBucketizedAllocation)(nil)).Elem()
}

func (i *akriConnectorTemplateBucketizedAllocationPtrType) ToAkriConnectorTemplateBucketizedAllocationPtrOutput() AkriConnectorTemplateBucketizedAllocationPtrOutput {
	return i.ToAkriConnectorTemplateBucketizedAllocationPtrOutputWithContext(context.Background())
}

func (i *akriConnectorTemplateBucketizedAllocationPtrType) ToAkriConnectorTemplateBucketizedAllocationPtrOutputWithContext(ctx context.Context) AkriConnectorTemplateBucketizedAllocationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AkriConnectorTemplateBucketizedAllocationPtrOutput)
}

// AkriConnectorTemplateBucketizedAllocation properties.
type AkriConnectorTemplateBucketizedAllocationOutput struct{ *pulumi.OutputState }

func (AkriConnectorTemplateBucketizedAllocationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AkriConnectorTemplateBucketizedAllocation)(nil)).Elem()
}

func (o AkriConnectorTemplateBucketizedAllocationOutput) ToAkriConnectorTemplateBucketizedAllocationOutput() AkriConnectorTemplateBucketizedAllocationOutput {
	return o
}

func (o AkriConnectorTemplateBucketizedAllocationOutput) ToAkriConnectorTemplateBucketizedAllocationOutputWithContext(ctx context.Context) AkriConnectorTemplateBucketizedAllocationOutput {
	return o
}

func (o AkriConnectorTemplateBucketizedAllocationOutput) ToAkriConnectorTemplateBucketizedAllocationPtrOutput() AkriConnectorTemplateBucketizedAllocationPtrOutput {
	return o.ToAkriConnectorTemplateBucketizedAllocationPtrOutputWithContext(context.Background())
}

func (o AkriConnectorTemplateBucketizedAllocationOutput) ToAkriConnectorTemplateBucketizedAllocationPtrOutputWithContext(ctx context.Context) AkriConnectorTemplateBucketizedAllocationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AkriConnectorTemplateBucketizedAllocation) *AkriConnectorTemplateBucketizedAllocation {
		return &v
	}).(AkriConnectorTemplateBucketizedAllocationPtrOutput)
}

// The bucketized allocation of AEPs for connectors.
func (o AkriConnectorTemplateBucketizedAllocationOutput) BucketSize() pulumi.IntOutput {
	return o.ApplyT(func(v AkriConnectorTemplateBucketizedAllocation) int { return v.BucketSize }).(pulumi.IntOutput)
}

// AkriConnectorTemplateAllocationPolicy properties.
// Expected value is 'Bucketized'.
func (o AkriConnectorTemplateBucketizedAllocationOutput) Policy() pulumi.StringOutput {
	return o.ApplyT(func(v AkriConnectorTemplateBucketizedAllocation) string { return v.Policy }).(pulumi.StringOutput)
}

type AkriConnectorTemplateBucketizedAllocationPtrOutput struct{ *pulumi.OutputState }

func (AkriConnectorTemplateBucketizedAllocationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AkriConnectorTemplateBucketizedAllocation)(nil)).Elem()
}

func (o AkriConnectorTemplateBucketizedAllocationPtrOutput) ToAkriConnectorTemplateBucketizedAllocationPtrOutput() AkriConnectorTemplateBucketizedAllocationPtrOutput {
	return o
}

func (o AkriConnectorTemplateBucketizedAllocationPtrOutput) ToAkriConnectorTemplateBucketizedAllocationPtrOutputWithContext(ctx context.Context) AkriConnectorTemplateBucketizedAllocationPtrOutput {
	return o
}

func (o AkriConnectorTemplateBucketizedAllocationPtrOutput) Elem() AkriConnectorTemplateBucketizedAllocationOutput {
	return o.ApplyT(func(v *AkriConnectorTemplateBucketizedAllocation) AkriConnectorTemplateBucketizedAllocation {
		if v != nil {
			return *v
		}
		var ret AkriConnectorTemplateBucketizedAllocation
		return ret
	}).(AkriConnectorTemplateBucketizedAllocationOutput)
}

// The bucketized allocation of AEPs for connectors.
func (o AkriConnectorTemplateBucketizedAllocationPtrOutput) BucketSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AkriConnectorTemplateBucketizedAllocation) *int {
		if v == nil {
			return nil
		}
		return &v.BucketSize
	}).(pulumi.IntPtrOutput)
}

// AkriConnectorTemplateAllocationPolicy properties.
// Expected value is 'Bucketized'.
func (o AkriConnectorTemplateBucketizedAllocationPtrOutput) Policy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AkriConnectorTemplateBucketizedAllocation) *string {
		if v == nil {
			return nil
		}
		return &v.Policy
	}).(pulumi.StringPtrOutput)
}

// AkriConnectorTemplateBucketizedAllocation properties.
type AkriConnectorTemplateBucketizedAllocationResponse struct {
	// The bucketized allocation of AEPs for connectors.
	BucketSize int `pulumi:"bucketSize"`
	// AkriConnectorTemplateAllocationPolicy properties.
	// Expected value is 'Bucketized'.
	Policy string `pulumi:"policy"`
}

// AkriConnectorTemplateBucketizedAllocation properties.
type AkriConnectorTemplateBucketizedAllocationResponseOutput struct{ *pulumi.OutputState }

func (AkriConnectorTemplateBucketizedAllocationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AkriConnectorTemplateBucketizedAllocationResponse)(nil)).Elem()
}

func (o AkriConnectorTemplateBucketizedAllocationResponseOutput) ToAkriConnectorTemplateBucketizedAllocationResponseOutput() AkriConnectorTemplateBucketizedAllocationResponseOutput {
	return o
}

func (o AkriConnectorTemplateBucketizedAllocationResponseOutput) ToAkriConnectorTemplateBucketizedAllocationResponseOutputWithContext(ctx context.Context) AkriConnectorTemplateBucketizedAllocationResponseOutput {
	return o
}

// The bucketized allocation of AEPs for connectors.
func (o AkriConnectorTemplateBucketizedAllocationResponseOutput) BucketSize() pulumi.IntOutput {
	return o.ApplyT(func(v AkriConnectorTemplateBucketizedAllocationResponse) int { return v.BucketSize }).(pulumi.IntOutput)
}

// AkriConnectorTemplateAllocationPolicy properties.
// Expected value is 'Bucketized'.
func (o AkriConnectorTemplateBucketizedAllocationResponseOutput) Policy() pulumi.StringOutput {
	return o.ApplyT(func(v AkriConnectorTemplateBucketizedAllocationResponse) string { return v.Policy }).(pulumi.StringOutput)
}

type AkriConnectorTemplateBucketizedAllocationResponsePtrOutput struct{ *pulumi.OutputState }

func (AkriConnectorTemplateBucketizedAllocationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AkriConnectorTemplateBucketizedAllocationResponse)(nil)).Elem()
}

func (o AkriConnectorTemplateBucketizedAllocationResponsePtrOutput) ToAkriConnectorTemplateBucketizedAllocationResponsePtrOutput() AkriConnectorTemplateBucketizedAllocationResponsePtrOutput {
	return o
}

func (o AkriConnectorTemplateBucketizedAllocationResponsePtrOutput) ToAkriConnectorTemplateBucketizedAllocationResponsePtrOutputWithContext(ctx context.Context) AkriConnectorTemplateBucketizedAllocationResponsePtrOutput {
	return o
}

func (o AkriConnectorTemplateBucketizedAllocationResponsePtrOutput) Elem() AkriConnectorTemplateBucketizedAllocationResponseOutput {
	return o.ApplyT(func(v *AkriConnectorTemplateBucketizedAllocationResponse) AkriConnectorTemplateBucketizedAllocationResponse {
		if v != nil {
			return *v
		}
		var ret AkriConnectorTemplateBucketizedAllocationResponse
		return ret
	}).(AkriConnectorTemplateBucketizedAllocationResponseOutput)
}

// The bucketized allocation of AEPs for connectors.
func (o AkriConnectorTemplateBucketizedAllocationResponsePtrOutput) BucketSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AkriConnectorTemplateBucketizedAllocationResponse) *int {
		if v == nil {
			return nil
		}
		return &v.BucketSize
	}).(pulumi.IntPtrOutput)
}

// AkriConnectorTemplateAllocationPolicy properties.
// Expected value is 'Bucketized'.
func (o AkriConnectorTemplateBucketizedAllocationResponsePtrOutput) Policy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AkriConnectorTemplateBucketizedAllocationResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Policy
	}).(pulumi.StringPtrOutput)
}

// AkriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefs properties.
type AkriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefs struct {
	// The additional configuration schema reference.
	AdditionalConfigSchemaRef *string `pulumi:"additionalConfigSchemaRef"`
	// The default configuration schema reference for datasets.
	DefaultDatasetConfigSchemaRef *string `pulumi:"defaultDatasetConfigSchemaRef"`
	// The default configuration schema reference for events.
	DefaultEventsConfigSchemaRef *string `pulumi:"defaultEventsConfigSchemaRef"`
	// The default configuration schema reference for process control.
	DefaultProcessControlConfigSchemaRef *string `pulumi:"defaultProcessControlConfigSchemaRef"`
	// The default configuration schema reference for streams.
	DefaultStreamsConfigSchemaRef *string `pulumi:"defaultStreamsConfigSchemaRef"`
}

// AkriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefsInput is an input type that accepts AkriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefsArgs and AkriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefsOutput values.
// You can construct a concrete instance of `AkriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefsInput` via:
//
//	AkriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefsArgs{...}
type AkriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefsInput interface {
	pulumi.Input

	ToAkriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefsOutput() AkriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefsOutput
	ToAkriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefsOutputWithContext(context.Context) AkriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefsOutput
}

// AkriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefs properties.
type AkriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefsArgs struct {
	// The additional configuration schema reference.
	AdditionalConfigSchemaRef pulumi.StringPtrInput `pulumi:"additionalConfigSchemaRef"`
	// The default configuration schema reference for datasets.
	DefaultDatasetConfigSchemaRef pulumi.StringPtrInput `pulumi:"defaultDatasetConfigSchemaRef"`
	// The default configuration schema reference for events.
	DefaultEventsConfigSchemaRef pulumi.StringPtrInput `pulumi:"defaultEventsConfigSchemaRef"`
	// The default configuration schema reference for process control.
	DefaultProcessControlConfigSchemaRef pulumi.StringPtrInput `pulumi:"defaultProcessControlConfigSchemaRef"`
	// The default configuration schema reference for streams.
	DefaultStreamsConfigSchemaRef pulumi.StringPtrInput `pulumi:"defaultStreamsConfigSchemaRef"`
}

func (AkriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AkriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefs)(nil)).Elem()
}

func (i AkriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefsArgs) ToAkriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefsOutput() AkriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefsOutput {
	return i.ToAkriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefsOutputWithContext(context.Background())
}

func (i AkriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefsArgs) ToAkriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefsOutputWithContext(ctx context.Context) AkriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AkriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefsOutput)
}

func (i AkriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefsArgs) ToAkriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefsPtrOutput() AkriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefsPtrOutput {
	return i.ToAkriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefsPtrOutputWithContext(context.Background())
}

func (i AkriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefsArgs) ToAkriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefsPtrOutputWithContext(ctx context.Context) AkriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AkriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefsOutput).ToAkriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefsPtrOutputWithContext(ctx)
}

// AkriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefsPtrInput is an input type that accepts AkriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefsArgs, AkriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefsPtr and AkriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefsPtrOutput values.
// You can construct a concrete instance of `AkriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefsPtrInput` via:
//
//	        AkriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefsArgs{...}
//
//	or:
//
//	        nil
type AkriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefsPtrInput interface {
	pulumi.Input

	ToAkriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefsPtrOutput() AkriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefsPtrOutput
	ToAkriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefsPtrOutputWithContext(context.Context) AkriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefsPtrOutput
}

type akriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefsPtrType AkriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefsArgs

func AkriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefsPtr(v *AkriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefsArgs) AkriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefsPtrInput {
	return (*akriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefsPtrType)(v)
}

func (*akriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AkriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefs)(nil)).Elem()
}

func (i *akriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefsPtrType) ToAkriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefsPtrOutput() AkriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefsPtrOutput {
	return i.ToAkriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefsPtrOutputWithContext(context.Background())
}

func (i *akriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefsPtrType) ToAkriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefsPtrOutputWithContext(ctx context.Context) AkriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AkriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefsPtrOutput)
}

// AkriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefs properties.
type AkriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefsOutput struct{ *pulumi.OutputState }

func (AkriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AkriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefs)(nil)).Elem()
}

func (o AkriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefsOutput) ToAkriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefsOutput() AkriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefsOutput {
	return o
}

func (o AkriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefsOutput) ToAkriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefsOutputWithContext(ctx context.Context) AkriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefsOutput {
	return o
}

func (o AkriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefsOutput) ToAkriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefsPtrOutput() AkriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefsPtrOutput {
	return o.ToAkriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefsPtrOutputWithContext(context.Background())
}

func (o AkriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefsOutput) ToAkriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefsPtrOutputWithContext(ctx context.Context) AkriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AkriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefs) *AkriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefs {
		return &v
	}).(AkriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefsPtrOutput)
}

// The additional configuration schema reference.
func (o AkriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefsOutput) AdditionalConfigSchemaRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AkriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefs) *string {
		return v.AdditionalConfigSchemaRef
	}).(pulumi.StringPtrOutput)
}

// The default configuration schema reference for datasets.
func (o AkriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefsOutput) DefaultDatasetConfigSchemaRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AkriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefs) *string {
		return v.DefaultDatasetConfigSchemaRef
	}).(pulumi.StringPtrOutput)
}

// The default configuration schema reference for events.
func (o AkriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefsOutput) DefaultEventsConfigSchemaRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AkriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefs) *string {
		return v.DefaultEventsConfigSchemaRef
	}).(pulumi.StringPtrOutput)
}

// The default configuration schema reference for process control.
func (o AkriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefsOutput) DefaultProcessControlConfigSchemaRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AkriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefs) *string {
		return v.DefaultProcessControlConfigSchemaRef
	}).(pulumi.StringPtrOutput)
}

// The default configuration schema reference for streams.
func (o AkriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefsOutput) DefaultStreamsConfigSchemaRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AkriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefs) *string {
		return v.DefaultStreamsConfigSchemaRef
	}).(pulumi.StringPtrOutput)
}

type AkriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefsPtrOutput struct{ *pulumi.OutputState }

func (AkriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AkriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefs)(nil)).Elem()
}

func (o AkriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefsPtrOutput) ToAkriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefsPtrOutput() AkriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefsPtrOutput {
	return o
}

func (o AkriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefsPtrOutput) ToAkriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefsPtrOutputWithContext(ctx context.Context) AkriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefsPtrOutput {
	return o
}

func (o AkriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefsPtrOutput) Elem() AkriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefsOutput {
	return o.ApplyT(func(v *AkriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefs) AkriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefs {
		if v != nil {
			return *v
		}
		var ret AkriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefs
		return ret
	}).(AkriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefsOutput)
}

// The additional configuration schema reference.
func (o AkriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefsPtrOutput) AdditionalConfigSchemaRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AkriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefs) *string {
		if v == nil {
			return nil
		}
		return v.AdditionalConfigSchemaRef
	}).(pulumi.StringPtrOutput)
}

// The default configuration schema reference for datasets.
func (o AkriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefsPtrOutput) DefaultDatasetConfigSchemaRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AkriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefs) *string {
		if v == nil {
			return nil
		}
		return v.DefaultDatasetConfigSchemaRef
	}).(pulumi.StringPtrOutput)
}

// The default configuration schema reference for events.
func (o AkriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefsPtrOutput) DefaultEventsConfigSchemaRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AkriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefs) *string {
		if v == nil {
			return nil
		}
		return v.DefaultEventsConfigSchemaRef
	}).(pulumi.StringPtrOutput)
}

// The default configuration schema reference for process control.
func (o AkriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefsPtrOutput) DefaultProcessControlConfigSchemaRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AkriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefs) *string {
		if v == nil {
			return nil
		}
		return v.DefaultProcessControlConfigSchemaRef
	}).(pulumi.StringPtrOutput)
}

// The default configuration schema reference for streams.
func (o AkriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefsPtrOutput) DefaultStreamsConfigSchemaRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AkriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefs) *string {
		if v == nil {
			return nil
		}
		return v.DefaultStreamsConfigSchemaRef
	}).(pulumi.StringPtrOutput)
}

// AkriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefs properties.
type AkriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefsResponse struct {
	// The additional configuration schema reference.
	AdditionalConfigSchemaRef *string `pulumi:"additionalConfigSchemaRef"`
	// The default configuration schema reference for datasets.
	DefaultDatasetConfigSchemaRef *string `pulumi:"defaultDatasetConfigSchemaRef"`
	// The default configuration schema reference for events.
	DefaultEventsConfigSchemaRef *string `pulumi:"defaultEventsConfigSchemaRef"`
	// The default configuration schema reference for process control.
	DefaultProcessControlConfigSchemaRef *string `pulumi:"defaultProcessControlConfigSchemaRef"`
	// The default configuration schema reference for streams.
	DefaultStreamsConfigSchemaRef *string `pulumi:"defaultStreamsConfigSchemaRef"`
}

// AkriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefs properties.
type AkriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefsResponseOutput struct{ *pulumi.OutputState }

func (AkriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AkriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefsResponse)(nil)).Elem()
}

func (o AkriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefsResponseOutput) ToAkriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefsResponseOutput() AkriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefsResponseOutput {
	return o
}

func (o AkriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefsResponseOutput) ToAkriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefsResponseOutputWithContext(ctx context.Context) AkriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefsResponseOutput {
	return o
}

// The additional configuration schema reference.
func (o AkriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefsResponseOutput) AdditionalConfigSchemaRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AkriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefsResponse) *string {
		return v.AdditionalConfigSchemaRef
	}).(pulumi.StringPtrOutput)
}

// The default configuration schema reference for datasets.
func (o AkriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefsResponseOutput) DefaultDatasetConfigSchemaRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AkriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefsResponse) *string {
		return v.DefaultDatasetConfigSchemaRef
	}).(pulumi.StringPtrOutput)
}

// The default configuration schema reference for events.
func (o AkriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefsResponseOutput) DefaultEventsConfigSchemaRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AkriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefsResponse) *string {
		return v.DefaultEventsConfigSchemaRef
	}).(pulumi.StringPtrOutput)
}

// The default configuration schema reference for process control.
func (o AkriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefsResponseOutput) DefaultProcessControlConfigSchemaRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AkriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefsResponse) *string {
		return v.DefaultProcessControlConfigSchemaRef
	}).(pulumi.StringPtrOutput)
}

// The default configuration schema reference for streams.
func (o AkriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefsResponseOutput) DefaultStreamsConfigSchemaRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AkriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefsResponse) *string {
		return v.DefaultStreamsConfigSchemaRef
	}).(pulumi.StringPtrOutput)
}

type AkriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefsResponsePtrOutput struct{ *pulumi.OutputState }

func (AkriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AkriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefsResponse)(nil)).Elem()
}

func (o AkriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefsResponsePtrOutput) ToAkriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefsResponsePtrOutput() AkriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefsResponsePtrOutput {
	return o
}

func (o AkriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefsResponsePtrOutput) ToAkriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefsResponsePtrOutputWithContext(ctx context.Context) AkriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefsResponsePtrOutput {
	return o
}

func (o AkriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefsResponsePtrOutput) Elem() AkriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefsResponseOutput {
	return o.ApplyT(func(v *AkriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefsResponse) AkriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefsResponse {
		if v != nil {
			return *v
		}
		var ret AkriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefsResponse
		return ret
	}).(AkriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefsResponseOutput)
}

// The additional configuration schema reference.
func (o AkriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefsResponsePtrOutput) AdditionalConfigSchemaRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AkriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefsResponse) *string {
		if v == nil {
			return nil
		}
		return v.AdditionalConfigSchemaRef
	}).(pulumi.StringPtrOutput)
}

// The default configuration schema reference for datasets.
func (o AkriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefsResponsePtrOutput) DefaultDatasetConfigSchemaRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AkriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefsResponse) *string {
		if v == nil {
			return nil
		}
		return v.DefaultDatasetConfigSchemaRef
	}).(pulumi.StringPtrOutput)
}

// The default configuration schema reference for events.
func (o AkriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefsResponsePtrOutput) DefaultEventsConfigSchemaRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AkriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefsResponse) *string {
		if v == nil {
			return nil
		}
		return v.DefaultEventsConfigSchemaRef
	}).(pulumi.StringPtrOutput)
}

// The default configuration schema reference for process control.
func (o AkriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefsResponsePtrOutput) DefaultProcessControlConfigSchemaRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AkriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefsResponse) *string {
		if v == nil {
			return nil
		}
		return v.DefaultProcessControlConfigSchemaRef
	}).(pulumi.StringPtrOutput)
}

// The default configuration schema reference for streams.
func (o AkriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefsResponsePtrOutput) DefaultStreamsConfigSchemaRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AkriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefsResponse) *string {
		if v == nil {
			return nil
		}
		return v.DefaultStreamsConfigSchemaRef
	}).(pulumi.StringPtrOutput)
}

// AkriConnectorTemplateDeviceInboundEndpointType properties.
type AkriConnectorTemplateDeviceInboundEndpointType struct {
	// The configuration schema references for the device inbound endpoint.
	ConfigurationSchemaRefs *AkriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefs `pulumi:"configurationSchemaRefs"`
	// A description of the device inbound endpoint.
	Description *string `pulumi:"description"`
	// The type of the device inbound endpoint.
	EndpointType string `pulumi:"endpointType"`
	// The version of the device inbound endpoint.
	Version *string `pulumi:"version"`
}

// AkriConnectorTemplateDeviceInboundEndpointTypeInput is an input type that accepts AkriConnectorTemplateDeviceInboundEndpointTypeArgs and AkriConnectorTemplateDeviceInboundEndpointTypeOutput values.
// You can construct a concrete instance of `AkriConnectorTemplateDeviceInboundEndpointTypeInput` via:
//
//	AkriConnectorTemplateDeviceInboundEndpointTypeArgs{...}
type AkriConnectorTemplateDeviceInboundEndpointTypeInput interface {
	pulumi.Input

	ToAkriConnectorTemplateDeviceInboundEndpointTypeOutput() AkriConnectorTemplateDeviceInboundEndpointTypeOutput
	ToAkriConnectorTemplateDeviceInboundEndpointTypeOutputWithContext(context.Context) AkriConnectorTemplateDeviceInboundEndpointTypeOutput
}

// AkriConnectorTemplateDeviceInboundEndpointType properties.
type AkriConnectorTemplateDeviceInboundEndpointTypeArgs struct {
	// The configuration schema references for the device inbound endpoint.
	ConfigurationSchemaRefs AkriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefsPtrInput `pulumi:"configurationSchemaRefs"`
	// A description of the device inbound endpoint.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The type of the device inbound endpoint.
	EndpointType pulumi.StringInput `pulumi:"endpointType"`
	// The version of the device inbound endpoint.
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (AkriConnectorTemplateDeviceInboundEndpointTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AkriConnectorTemplateDeviceInboundEndpointType)(nil)).Elem()
}

func (i AkriConnectorTemplateDeviceInboundEndpointTypeArgs) ToAkriConnectorTemplateDeviceInboundEndpointTypeOutput() AkriConnectorTemplateDeviceInboundEndpointTypeOutput {
	return i.ToAkriConnectorTemplateDeviceInboundEndpointTypeOutputWithContext(context.Background())
}

func (i AkriConnectorTemplateDeviceInboundEndpointTypeArgs) ToAkriConnectorTemplateDeviceInboundEndpointTypeOutputWithContext(ctx context.Context) AkriConnectorTemplateDeviceInboundEndpointTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AkriConnectorTemplateDeviceInboundEndpointTypeOutput)
}

// AkriConnectorTemplateDeviceInboundEndpointTypeArrayInput is an input type that accepts AkriConnectorTemplateDeviceInboundEndpointTypeArray and AkriConnectorTemplateDeviceInboundEndpointTypeArrayOutput values.
// You can construct a concrete instance of `AkriConnectorTemplateDeviceInboundEndpointTypeArrayInput` via:
//
//	AkriConnectorTemplateDeviceInboundEndpointTypeArray{ AkriConnectorTemplateDeviceInboundEndpointTypeArgs{...} }
type AkriConnectorTemplateDeviceInboundEndpointTypeArrayInput interface {
	pulumi.Input

	ToAkriConnectorTemplateDeviceInboundEndpointTypeArrayOutput() AkriConnectorTemplateDeviceInboundEndpointTypeArrayOutput
	ToAkriConnectorTemplateDeviceInboundEndpointTypeArrayOutputWithContext(context.Context) AkriConnectorTemplateDeviceInboundEndpointTypeArrayOutput
}

type AkriConnectorTemplateDeviceInboundEndpointTypeArray []AkriConnectorTemplateDeviceInboundEndpointTypeInput

func (AkriConnectorTemplateDeviceInboundEndpointTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AkriConnectorTemplateDeviceInboundEndpointType)(nil)).Elem()
}

func (i AkriConnectorTemplateDeviceInboundEndpointTypeArray) ToAkriConnectorTemplateDeviceInboundEndpointTypeArrayOutput() AkriConnectorTemplateDeviceInboundEndpointTypeArrayOutput {
	return i.ToAkriConnectorTemplateDeviceInboundEndpointTypeArrayOutputWithContext(context.Background())
}

func (i AkriConnectorTemplateDeviceInboundEndpointTypeArray) ToAkriConnectorTemplateDeviceInboundEndpointTypeArrayOutputWithContext(ctx context.Context) AkriConnectorTemplateDeviceInboundEndpointTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AkriConnectorTemplateDeviceInboundEndpointTypeArrayOutput)
}

// AkriConnectorTemplateDeviceInboundEndpointType properties.
type AkriConnectorTemplateDeviceInboundEndpointTypeOutput struct{ *pulumi.OutputState }

func (AkriConnectorTemplateDeviceInboundEndpointTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AkriConnectorTemplateDeviceInboundEndpointType)(nil)).Elem()
}

func (o AkriConnectorTemplateDeviceInboundEndpointTypeOutput) ToAkriConnectorTemplateDeviceInboundEndpointTypeOutput() AkriConnectorTemplateDeviceInboundEndpointTypeOutput {
	return o
}

func (o AkriConnectorTemplateDeviceInboundEndpointTypeOutput) ToAkriConnectorTemplateDeviceInboundEndpointTypeOutputWithContext(ctx context.Context) AkriConnectorTemplateDeviceInboundEndpointTypeOutput {
	return o
}

// The configuration schema references for the device inbound endpoint.
func (o AkriConnectorTemplateDeviceInboundEndpointTypeOutput) ConfigurationSchemaRefs() AkriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefsPtrOutput {
	return o.ApplyT(func(v AkriConnectorTemplateDeviceInboundEndpointType) *AkriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefs {
		return v.ConfigurationSchemaRefs
	}).(AkriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefsPtrOutput)
}

// A description of the device inbound endpoint.
func (o AkriConnectorTemplateDeviceInboundEndpointTypeOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AkriConnectorTemplateDeviceInboundEndpointType) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The type of the device inbound endpoint.
func (o AkriConnectorTemplateDeviceInboundEndpointTypeOutput) EndpointType() pulumi.StringOutput {
	return o.ApplyT(func(v AkriConnectorTemplateDeviceInboundEndpointType) string { return v.EndpointType }).(pulumi.StringOutput)
}

// The version of the device inbound endpoint.
func (o AkriConnectorTemplateDeviceInboundEndpointTypeOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AkriConnectorTemplateDeviceInboundEndpointType) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type AkriConnectorTemplateDeviceInboundEndpointTypeArrayOutput struct{ *pulumi.OutputState }

func (AkriConnectorTemplateDeviceInboundEndpointTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AkriConnectorTemplateDeviceInboundEndpointType)(nil)).Elem()
}

func (o AkriConnectorTemplateDeviceInboundEndpointTypeArrayOutput) ToAkriConnectorTemplateDeviceInboundEndpointTypeArrayOutput() AkriConnectorTemplateDeviceInboundEndpointTypeArrayOutput {
	return o
}

func (o AkriConnectorTemplateDeviceInboundEndpointTypeArrayOutput) ToAkriConnectorTemplateDeviceInboundEndpointTypeArrayOutputWithContext(ctx context.Context) AkriConnectorTemplateDeviceInboundEndpointTypeArrayOutput {
	return o
}

func (o AkriConnectorTemplateDeviceInboundEndpointTypeArrayOutput) Index(i pulumi.IntInput) AkriConnectorTemplateDeviceInboundEndpointTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AkriConnectorTemplateDeviceInboundEndpointType {
		return vs[0].([]AkriConnectorTemplateDeviceInboundEndpointType)[vs[1].(int)]
	}).(AkriConnectorTemplateDeviceInboundEndpointTypeOutput)
}

// AkriConnectorTemplateDeviceInboundEndpointType properties.
type AkriConnectorTemplateDeviceInboundEndpointTypeResponse struct {
	// The configuration schema references for the device inbound endpoint.
	ConfigurationSchemaRefs *AkriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefsResponse `pulumi:"configurationSchemaRefs"`
	// A description of the device inbound endpoint.
	Description *string `pulumi:"description"`
	// The type of the device inbound endpoint.
	EndpointType string `pulumi:"endpointType"`
	// The version of the device inbound endpoint.
	Version *string `pulumi:"version"`
}

// AkriConnectorTemplateDeviceInboundEndpointType properties.
type AkriConnectorTemplateDeviceInboundEndpointTypeResponseOutput struct{ *pulumi.OutputState }

func (AkriConnectorTemplateDeviceInboundEndpointTypeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AkriConnectorTemplateDeviceInboundEndpointTypeResponse)(nil)).Elem()
}

func (o AkriConnectorTemplateDeviceInboundEndpointTypeResponseOutput) ToAkriConnectorTemplateDeviceInboundEndpointTypeResponseOutput() AkriConnectorTemplateDeviceInboundEndpointTypeResponseOutput {
	return o
}

func (o AkriConnectorTemplateDeviceInboundEndpointTypeResponseOutput) ToAkriConnectorTemplateDeviceInboundEndpointTypeResponseOutputWithContext(ctx context.Context) AkriConnectorTemplateDeviceInboundEndpointTypeResponseOutput {
	return o
}

// The configuration schema references for the device inbound endpoint.
func (o AkriConnectorTemplateDeviceInboundEndpointTypeResponseOutput) ConfigurationSchemaRefs() AkriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefsResponsePtrOutput {
	return o.ApplyT(func(v AkriConnectorTemplateDeviceInboundEndpointTypeResponse) *AkriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefsResponse {
		return v.ConfigurationSchemaRefs
	}).(AkriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefsResponsePtrOutput)
}

// A description of the device inbound endpoint.
func (o AkriConnectorTemplateDeviceInboundEndpointTypeResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AkriConnectorTemplateDeviceInboundEndpointTypeResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The type of the device inbound endpoint.
func (o AkriConnectorTemplateDeviceInboundEndpointTypeResponseOutput) EndpointType() pulumi.StringOutput {
	return o.ApplyT(func(v AkriConnectorTemplateDeviceInboundEndpointTypeResponse) string { return v.EndpointType }).(pulumi.StringOutput)
}

// The version of the device inbound endpoint.
func (o AkriConnectorTemplateDeviceInboundEndpointTypeResponseOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AkriConnectorTemplateDeviceInboundEndpointTypeResponse) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type AkriConnectorTemplateDeviceInboundEndpointTypeResponseArrayOutput struct{ *pulumi.OutputState }

func (AkriConnectorTemplateDeviceInboundEndpointTypeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AkriConnectorTemplateDeviceInboundEndpointTypeResponse)(nil)).Elem()
}

func (o AkriConnectorTemplateDeviceInboundEndpointTypeResponseArrayOutput) ToAkriConnectorTemplateDeviceInboundEndpointTypeResponseArrayOutput() AkriConnectorTemplateDeviceInboundEndpointTypeResponseArrayOutput {
	return o
}

func (o AkriConnectorTemplateDeviceInboundEndpointTypeResponseArrayOutput) ToAkriConnectorTemplateDeviceInboundEndpointTypeResponseArrayOutputWithContext(ctx context.Context) AkriConnectorTemplateDeviceInboundEndpointTypeResponseArrayOutput {
	return o
}

func (o AkriConnectorTemplateDeviceInboundEndpointTypeResponseArrayOutput) Index(i pulumi.IntInput) AkriConnectorTemplateDeviceInboundEndpointTypeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AkriConnectorTemplateDeviceInboundEndpointTypeResponse {
		return vs[0].([]AkriConnectorTemplateDeviceInboundEndpointTypeResponse)[vs[1].(int)]
	}).(AkriConnectorTemplateDeviceInboundEndpointTypeResponseOutput)
}

// AkriConnectorTemplateDiagnostics properties.
type AkriConnectorTemplateDiagnostics struct {
	// The log settings for the Connector template.
	Logs AkriConnectorsDiagnosticsLogs `pulumi:"logs"`
}

// Defaults sets the appropriate defaults for AkriConnectorTemplateDiagnostics
func (val *AkriConnectorTemplateDiagnostics) Defaults() *AkriConnectorTemplateDiagnostics {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.Logs = *tmp.Logs.Defaults()

	return &tmp
}

// AkriConnectorTemplateDiagnosticsInput is an input type that accepts AkriConnectorTemplateDiagnosticsArgs and AkriConnectorTemplateDiagnosticsOutput values.
// You can construct a concrete instance of `AkriConnectorTemplateDiagnosticsInput` via:
//
//	AkriConnectorTemplateDiagnosticsArgs{...}
type AkriConnectorTemplateDiagnosticsInput interface {
	pulumi.Input

	ToAkriConnectorTemplateDiagnosticsOutput() AkriConnectorTemplateDiagnosticsOutput
	ToAkriConnectorTemplateDiagnosticsOutputWithContext(context.Context) AkriConnectorTemplateDiagnosticsOutput
}

// AkriConnectorTemplateDiagnostics properties.
type AkriConnectorTemplateDiagnosticsArgs struct {
	// The log settings for the Connector template.
	Logs AkriConnectorsDiagnosticsLogsInput `pulumi:"logs"`
}

// Defaults sets the appropriate defaults for AkriConnectorTemplateDiagnosticsArgs
func (val *AkriConnectorTemplateDiagnosticsArgs) Defaults() *AkriConnectorTemplateDiagnosticsArgs {
	if val == nil {
		return nil
	}
	tmp := *val

	return &tmp
}
func (AkriConnectorTemplateDiagnosticsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AkriConnectorTemplateDiagnostics)(nil)).Elem()
}

func (i AkriConnectorTemplateDiagnosticsArgs) ToAkriConnectorTemplateDiagnosticsOutput() AkriConnectorTemplateDiagnosticsOutput {
	return i.ToAkriConnectorTemplateDiagnosticsOutputWithContext(context.Background())
}

func (i AkriConnectorTemplateDiagnosticsArgs) ToAkriConnectorTemplateDiagnosticsOutputWithContext(ctx context.Context) AkriConnectorTemplateDiagnosticsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AkriConnectorTemplateDiagnosticsOutput)
}

func (i AkriConnectorTemplateDiagnosticsArgs) ToAkriConnectorTemplateDiagnosticsPtrOutput() AkriConnectorTemplateDiagnosticsPtrOutput {
	return i.ToAkriConnectorTemplateDiagnosticsPtrOutputWithContext(context.Background())
}

func (i AkriConnectorTemplateDiagnosticsArgs) ToAkriConnectorTemplateDiagnosticsPtrOutputWithContext(ctx context.Context) AkriConnectorTemplateDiagnosticsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AkriConnectorTemplateDiagnosticsOutput).ToAkriConnectorTemplateDiagnosticsPtrOutputWithContext(ctx)
}

// AkriConnectorTemplateDiagnosticsPtrInput is an input type that accepts AkriConnectorTemplateDiagnosticsArgs, AkriConnectorTemplateDiagnosticsPtr and AkriConnectorTemplateDiagnosticsPtrOutput values.
// You can construct a concrete instance of `AkriConnectorTemplateDiagnosticsPtrInput` via:
//
//	        AkriConnectorTemplateDiagnosticsArgs{...}
//
//	or:
//
//	        nil
type AkriConnectorTemplateDiagnosticsPtrInput interface {
	pulumi.Input

	ToAkriConnectorTemplateDiagnosticsPtrOutput() AkriConnectorTemplateDiagnosticsPtrOutput
	ToAkriConnectorTemplateDiagnosticsPtrOutputWithContext(context.Context) AkriConnectorTemplateDiagnosticsPtrOutput
}

type akriConnectorTemplateDiagnosticsPtrType AkriConnectorTemplateDiagnosticsArgs

func AkriConnectorTemplateDiagnosticsPtr(v *AkriConnectorTemplateDiagnosticsArgs) AkriConnectorTemplateDiagnosticsPtrInput {
	return (*akriConnectorTemplateDiagnosticsPtrType)(v)
}

func (*akriConnectorTemplateDiagnosticsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AkriConnectorTemplateDiagnostics)(nil)).Elem()
}

func (i *akriConnectorTemplateDiagnosticsPtrType) ToAkriConnectorTemplateDiagnosticsPtrOutput() AkriConnectorTemplateDiagnosticsPtrOutput {
	return i.ToAkriConnectorTemplateDiagnosticsPtrOutputWithContext(context.Background())
}

func (i *akriConnectorTemplateDiagnosticsPtrType) ToAkriConnectorTemplateDiagnosticsPtrOutputWithContext(ctx context.Context) AkriConnectorTemplateDiagnosticsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AkriConnectorTemplateDiagnosticsPtrOutput)
}

// AkriConnectorTemplateDiagnostics properties.
type AkriConnectorTemplateDiagnosticsOutput struct{ *pulumi.OutputState }

func (AkriConnectorTemplateDiagnosticsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AkriConnectorTemplateDiagnostics)(nil)).Elem()
}

func (o AkriConnectorTemplateDiagnosticsOutput) ToAkriConnectorTemplateDiagnosticsOutput() AkriConnectorTemplateDiagnosticsOutput {
	return o
}

func (o AkriConnectorTemplateDiagnosticsOutput) ToAkriConnectorTemplateDiagnosticsOutputWithContext(ctx context.Context) AkriConnectorTemplateDiagnosticsOutput {
	return o
}

func (o AkriConnectorTemplateDiagnosticsOutput) ToAkriConnectorTemplateDiagnosticsPtrOutput() AkriConnectorTemplateDiagnosticsPtrOutput {
	return o.ToAkriConnectorTemplateDiagnosticsPtrOutputWithContext(context.Background())
}

func (o AkriConnectorTemplateDiagnosticsOutput) ToAkriConnectorTemplateDiagnosticsPtrOutputWithContext(ctx context.Context) AkriConnectorTemplateDiagnosticsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AkriConnectorTemplateDiagnostics) *AkriConnectorTemplateDiagnostics {
		return &v
	}).(AkriConnectorTemplateDiagnosticsPtrOutput)
}

// The log settings for the Connector template.
func (o AkriConnectorTemplateDiagnosticsOutput) Logs() AkriConnectorsDiagnosticsLogsOutput {
	return o.ApplyT(func(v AkriConnectorTemplateDiagnostics) AkriConnectorsDiagnosticsLogs { return v.Logs }).(AkriConnectorsDiagnosticsLogsOutput)
}

type AkriConnectorTemplateDiagnosticsPtrOutput struct{ *pulumi.OutputState }

func (AkriConnectorTemplateDiagnosticsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AkriConnectorTemplateDiagnostics)(nil)).Elem()
}

func (o AkriConnectorTemplateDiagnosticsPtrOutput) ToAkriConnectorTemplateDiagnosticsPtrOutput() AkriConnectorTemplateDiagnosticsPtrOutput {
	return o
}

func (o AkriConnectorTemplateDiagnosticsPtrOutput) ToAkriConnectorTemplateDiagnosticsPtrOutputWithContext(ctx context.Context) AkriConnectorTemplateDiagnosticsPtrOutput {
	return o
}

func (o AkriConnectorTemplateDiagnosticsPtrOutput) Elem() AkriConnectorTemplateDiagnosticsOutput {
	return o.ApplyT(func(v *AkriConnectorTemplateDiagnostics) AkriConnectorTemplateDiagnostics {
		if v != nil {
			return *v
		}
		var ret AkriConnectorTemplateDiagnostics
		return ret
	}).(AkriConnectorTemplateDiagnosticsOutput)
}

// The log settings for the Connector template.
func (o AkriConnectorTemplateDiagnosticsPtrOutput) Logs() AkriConnectorsDiagnosticsLogsPtrOutput {
	return o.ApplyT(func(v *AkriConnectorTemplateDiagnostics) *AkriConnectorsDiagnosticsLogs {
		if v == nil {
			return nil
		}
		return &v.Logs
	}).(AkriConnectorsDiagnosticsLogsPtrOutput)
}

// AkriConnectorTemplateDiagnostics properties.
type AkriConnectorTemplateDiagnosticsResponse struct {
	// The log settings for the Connector template.
	Logs AkriConnectorsDiagnosticsLogsResponse `pulumi:"logs"`
}

// Defaults sets the appropriate defaults for AkriConnectorTemplateDiagnosticsResponse
func (val *AkriConnectorTemplateDiagnosticsResponse) Defaults() *AkriConnectorTemplateDiagnosticsResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.Logs = *tmp.Logs.Defaults()

	return &tmp
}

// AkriConnectorTemplateDiagnostics properties.
type AkriConnectorTemplateDiagnosticsResponseOutput struct{ *pulumi.OutputState }

func (AkriConnectorTemplateDiagnosticsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AkriConnectorTemplateDiagnosticsResponse)(nil)).Elem()
}

func (o AkriConnectorTemplateDiagnosticsResponseOutput) ToAkriConnectorTemplateDiagnosticsResponseOutput() AkriConnectorTemplateDiagnosticsResponseOutput {
	return o
}

func (o AkriConnectorTemplateDiagnosticsResponseOutput) ToAkriConnectorTemplateDiagnosticsResponseOutputWithContext(ctx context.Context) AkriConnectorTemplateDiagnosticsResponseOutput {
	return o
}

// The log settings for the Connector template.
func (o AkriConnectorTemplateDiagnosticsResponseOutput) Logs() AkriConnectorsDiagnosticsLogsResponseOutput {
	return o.ApplyT(func(v AkriConnectorTemplateDiagnosticsResponse) AkriConnectorsDiagnosticsLogsResponse { return v.Logs }).(AkriConnectorsDiagnosticsLogsResponseOutput)
}

type AkriConnectorTemplateDiagnosticsResponsePtrOutput struct{ *pulumi.OutputState }

func (AkriConnectorTemplateDiagnosticsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AkriConnectorTemplateDiagnosticsResponse)(nil)).Elem()
}

func (o AkriConnectorTemplateDiagnosticsResponsePtrOutput) ToAkriConnectorTemplateDiagnosticsResponsePtrOutput() AkriConnectorTemplateDiagnosticsResponsePtrOutput {
	return o
}

func (o AkriConnectorTemplateDiagnosticsResponsePtrOutput) ToAkriConnectorTemplateDiagnosticsResponsePtrOutputWithContext(ctx context.Context) AkriConnectorTemplateDiagnosticsResponsePtrOutput {
	return o
}

func (o AkriConnectorTemplateDiagnosticsResponsePtrOutput) Elem() AkriConnectorTemplateDiagnosticsResponseOutput {
	return o.ApplyT(func(v *AkriConnectorTemplateDiagnosticsResponse) AkriConnectorTemplateDiagnosticsResponse {
		if v != nil {
			return *v
		}
		var ret AkriConnectorTemplateDiagnosticsResponse
		return ret
	}).(AkriConnectorTemplateDiagnosticsResponseOutput)
}

// The log settings for the Connector template.
func (o AkriConnectorTemplateDiagnosticsResponsePtrOutput) Logs() AkriConnectorsDiagnosticsLogsResponsePtrOutput {
	return o.ApplyT(func(v *AkriConnectorTemplateDiagnosticsResponse) *AkriConnectorsDiagnosticsLogsResponse {
		if v == nil {
			return nil
		}
		return &v.Logs
	}).(AkriConnectorsDiagnosticsLogsResponsePtrOutput)
}

// AkriConnectorTemplateHelmAdvancedConfiguration properties.
type AkriConnectorTemplateHelmAdvancedConfiguration struct {
	// Delete operation configuration for the Helm chart.
	Delete *AkriConnectorTemplateHelmDeleteConfiguration `pulumi:"delete"`
	// Install operation configuration for the Helm chart.
	Install *AkriConnectorTemplateHelmInstallConfiguration `pulumi:"install"`
	// Upgrade operation configuration for the Helm chart.
	Upgrade *AkriConnectorTemplateHelmUpgradeConfiguration `pulumi:"upgrade"`
}

// AkriConnectorTemplateHelmAdvancedConfigurationInput is an input type that accepts AkriConnectorTemplateHelmAdvancedConfigurationArgs and AkriConnectorTemplateHelmAdvancedConfigurationOutput values.
// You can construct a concrete instance of `AkriConnectorTemplateHelmAdvancedConfigurationInput` via:
//
//	AkriConnectorTemplateHelmAdvancedConfigurationArgs{...}
type AkriConnectorTemplateHelmAdvancedConfigurationInput interface {
	pulumi.Input

	ToAkriConnectorTemplateHelmAdvancedConfigurationOutput() AkriConnectorTemplateHelmAdvancedConfigurationOutput
	ToAkriConnectorTemplateHelmAdvancedConfigurationOutputWithContext(context.Context) AkriConnectorTemplateHelmAdvancedConfigurationOutput
}

// AkriConnectorTemplateHelmAdvancedConfiguration properties.
type AkriConnectorTemplateHelmAdvancedConfigurationArgs struct {
	// Delete operation configuration for the Helm chart.
	Delete AkriConnectorTemplateHelmDeleteConfigurationPtrInput `pulumi:"delete"`
	// Install operation configuration for the Helm chart.
	Install AkriConnectorTemplateHelmInstallConfigurationPtrInput `pulumi:"install"`
	// Upgrade operation configuration for the Helm chart.
	Upgrade AkriConnectorTemplateHelmUpgradeConfigurationPtrInput `pulumi:"upgrade"`
}

func (AkriConnectorTemplateHelmAdvancedConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AkriConnectorTemplateHelmAdvancedConfiguration)(nil)).Elem()
}

func (i AkriConnectorTemplateHelmAdvancedConfigurationArgs) ToAkriConnectorTemplateHelmAdvancedConfigurationOutput() AkriConnectorTemplateHelmAdvancedConfigurationOutput {
	return i.ToAkriConnectorTemplateHelmAdvancedConfigurationOutputWithContext(context.Background())
}

func (i AkriConnectorTemplateHelmAdvancedConfigurationArgs) ToAkriConnectorTemplateHelmAdvancedConfigurationOutputWithContext(ctx context.Context) AkriConnectorTemplateHelmAdvancedConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AkriConnectorTemplateHelmAdvancedConfigurationOutput)
}

func (i AkriConnectorTemplateHelmAdvancedConfigurationArgs) ToAkriConnectorTemplateHelmAdvancedConfigurationPtrOutput() AkriConnectorTemplateHelmAdvancedConfigurationPtrOutput {
	return i.ToAkriConnectorTemplateHelmAdvancedConfigurationPtrOutputWithContext(context.Background())
}

func (i AkriConnectorTemplateHelmAdvancedConfigurationArgs) ToAkriConnectorTemplateHelmAdvancedConfigurationPtrOutputWithContext(ctx context.Context) AkriConnectorTemplateHelmAdvancedConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AkriConnectorTemplateHelmAdvancedConfigurationOutput).ToAkriConnectorTemplateHelmAdvancedConfigurationPtrOutputWithContext(ctx)
}

// AkriConnectorTemplateHelmAdvancedConfigurationPtrInput is an input type that accepts AkriConnectorTemplateHelmAdvancedConfigurationArgs, AkriConnectorTemplateHelmAdvancedConfigurationPtr and AkriConnectorTemplateHelmAdvancedConfigurationPtrOutput values.
// You can construct a concrete instance of `AkriConnectorTemplateHelmAdvancedConfigurationPtrInput` via:
//
//	        AkriConnectorTemplateHelmAdvancedConfigurationArgs{...}
//
//	or:
//
//	        nil
type AkriConnectorTemplateHelmAdvancedConfigurationPtrInput interface {
	pulumi.Input

	ToAkriConnectorTemplateHelmAdvancedConfigurationPtrOutput() AkriConnectorTemplateHelmAdvancedConfigurationPtrOutput
	ToAkriConnectorTemplateHelmAdvancedConfigurationPtrOutputWithContext(context.Context) AkriConnectorTemplateHelmAdvancedConfigurationPtrOutput
}

type akriConnectorTemplateHelmAdvancedConfigurationPtrType AkriConnectorTemplateHelmAdvancedConfigurationArgs

func AkriConnectorTemplateHelmAdvancedConfigurationPtr(v *AkriConnectorTemplateHelmAdvancedConfigurationArgs) AkriConnectorTemplateHelmAdvancedConfigurationPtrInput {
	return (*akriConnectorTemplateHelmAdvancedConfigurationPtrType)(v)
}

func (*akriConnectorTemplateHelmAdvancedConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AkriConnectorTemplateHelmAdvancedConfiguration)(nil)).Elem()
}

func (i *akriConnectorTemplateHelmAdvancedConfigurationPtrType) ToAkriConnectorTemplateHelmAdvancedConfigurationPtrOutput() AkriConnectorTemplateHelmAdvancedConfigurationPtrOutput {
	return i.ToAkriConnectorTemplateHelmAdvancedConfigurationPtrOutputWithContext(context.Background())
}

func (i *akriConnectorTemplateHelmAdvancedConfigurationPtrType) ToAkriConnectorTemplateHelmAdvancedConfigurationPtrOutputWithContext(ctx context.Context) AkriConnectorTemplateHelmAdvancedConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AkriConnectorTemplateHelmAdvancedConfigurationPtrOutput)
}

// AkriConnectorTemplateHelmAdvancedConfiguration properties.
type AkriConnectorTemplateHelmAdvancedConfigurationOutput struct{ *pulumi.OutputState }

func (AkriConnectorTemplateHelmAdvancedConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AkriConnectorTemplateHelmAdvancedConfiguration)(nil)).Elem()
}

func (o AkriConnectorTemplateHelmAdvancedConfigurationOutput) ToAkriConnectorTemplateHelmAdvancedConfigurationOutput() AkriConnectorTemplateHelmAdvancedConfigurationOutput {
	return o
}

func (o AkriConnectorTemplateHelmAdvancedConfigurationOutput) ToAkriConnectorTemplateHelmAdvancedConfigurationOutputWithContext(ctx context.Context) AkriConnectorTemplateHelmAdvancedConfigurationOutput {
	return o
}

func (o AkriConnectorTemplateHelmAdvancedConfigurationOutput) ToAkriConnectorTemplateHelmAdvancedConfigurationPtrOutput() AkriConnectorTemplateHelmAdvancedConfigurationPtrOutput {
	return o.ToAkriConnectorTemplateHelmAdvancedConfigurationPtrOutputWithContext(context.Background())
}

func (o AkriConnectorTemplateHelmAdvancedConfigurationOutput) ToAkriConnectorTemplateHelmAdvancedConfigurationPtrOutputWithContext(ctx context.Context) AkriConnectorTemplateHelmAdvancedConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AkriConnectorTemplateHelmAdvancedConfiguration) *AkriConnectorTemplateHelmAdvancedConfiguration {
		return &v
	}).(AkriConnectorTemplateHelmAdvancedConfigurationPtrOutput)
}

// Delete operation configuration for the Helm chart.
func (o AkriConnectorTemplateHelmAdvancedConfigurationOutput) Delete() AkriConnectorTemplateHelmDeleteConfigurationPtrOutput {
	return o.ApplyT(func(v AkriConnectorTemplateHelmAdvancedConfiguration) *AkriConnectorTemplateHelmDeleteConfiguration {
		return v.Delete
	}).(AkriConnectorTemplateHelmDeleteConfigurationPtrOutput)
}

// Install operation configuration for the Helm chart.
func (o AkriConnectorTemplateHelmAdvancedConfigurationOutput) Install() AkriConnectorTemplateHelmInstallConfigurationPtrOutput {
	return o.ApplyT(func(v AkriConnectorTemplateHelmAdvancedConfiguration) *AkriConnectorTemplateHelmInstallConfiguration {
		return v.Install
	}).(AkriConnectorTemplateHelmInstallConfigurationPtrOutput)
}

// Upgrade operation configuration for the Helm chart.
func (o AkriConnectorTemplateHelmAdvancedConfigurationOutput) Upgrade() AkriConnectorTemplateHelmUpgradeConfigurationPtrOutput {
	return o.ApplyT(func(v AkriConnectorTemplateHelmAdvancedConfiguration) *AkriConnectorTemplateHelmUpgradeConfiguration {
		return v.Upgrade
	}).(AkriConnectorTemplateHelmUpgradeConfigurationPtrOutput)
}

type AkriConnectorTemplateHelmAdvancedConfigurationPtrOutput struct{ *pulumi.OutputState }

func (AkriConnectorTemplateHelmAdvancedConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AkriConnectorTemplateHelmAdvancedConfiguration)(nil)).Elem()
}

func (o AkriConnectorTemplateHelmAdvancedConfigurationPtrOutput) ToAkriConnectorTemplateHelmAdvancedConfigurationPtrOutput() AkriConnectorTemplateHelmAdvancedConfigurationPtrOutput {
	return o
}

func (o AkriConnectorTemplateHelmAdvancedConfigurationPtrOutput) ToAkriConnectorTemplateHelmAdvancedConfigurationPtrOutputWithContext(ctx context.Context) AkriConnectorTemplateHelmAdvancedConfigurationPtrOutput {
	return o
}

func (o AkriConnectorTemplateHelmAdvancedConfigurationPtrOutput) Elem() AkriConnectorTemplateHelmAdvancedConfigurationOutput {
	return o.ApplyT(func(v *AkriConnectorTemplateHelmAdvancedConfiguration) AkriConnectorTemplateHelmAdvancedConfiguration {
		if v != nil {
			return *v
		}
		var ret AkriConnectorTemplateHelmAdvancedConfiguration
		return ret
	}).(AkriConnectorTemplateHelmAdvancedConfigurationOutput)
}

// Delete operation configuration for the Helm chart.
func (o AkriConnectorTemplateHelmAdvancedConfigurationPtrOutput) Delete() AkriConnectorTemplateHelmDeleteConfigurationPtrOutput {
	return o.ApplyT(func(v *AkriConnectorTemplateHelmAdvancedConfiguration) *AkriConnectorTemplateHelmDeleteConfiguration {
		if v == nil {
			return nil
		}
		return v.Delete
	}).(AkriConnectorTemplateHelmDeleteConfigurationPtrOutput)
}

// Install operation configuration for the Helm chart.
func (o AkriConnectorTemplateHelmAdvancedConfigurationPtrOutput) Install() AkriConnectorTemplateHelmInstallConfigurationPtrOutput {
	return o.ApplyT(func(v *AkriConnectorTemplateHelmAdvancedConfiguration) *AkriConnectorTemplateHelmInstallConfiguration {
		if v == nil {
			return nil
		}
		return v.Install
	}).(AkriConnectorTemplateHelmInstallConfigurationPtrOutput)
}

// Upgrade operation configuration for the Helm chart.
func (o AkriConnectorTemplateHelmAdvancedConfigurationPtrOutput) Upgrade() AkriConnectorTemplateHelmUpgradeConfigurationPtrOutput {
	return o.ApplyT(func(v *AkriConnectorTemplateHelmAdvancedConfiguration) *AkriConnectorTemplateHelmUpgradeConfiguration {
		if v == nil {
			return nil
		}
		return v.Upgrade
	}).(AkriConnectorTemplateHelmUpgradeConfigurationPtrOutput)
}

// AkriConnectorTemplateHelmAdvancedConfiguration properties.
type AkriConnectorTemplateHelmAdvancedConfigurationResponse struct {
	// Delete operation configuration for the Helm chart.
	Delete *AkriConnectorTemplateHelmDeleteConfigurationResponse `pulumi:"delete"`
	// Install operation configuration for the Helm chart.
	Install *AkriConnectorTemplateHelmInstallConfigurationResponse `pulumi:"install"`
	// Upgrade operation configuration for the Helm chart.
	Upgrade *AkriConnectorTemplateHelmUpgradeConfigurationResponse `pulumi:"upgrade"`
}

// AkriConnectorTemplateHelmAdvancedConfiguration properties.
type AkriConnectorTemplateHelmAdvancedConfigurationResponseOutput struct{ *pulumi.OutputState }

func (AkriConnectorTemplateHelmAdvancedConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AkriConnectorTemplateHelmAdvancedConfigurationResponse)(nil)).Elem()
}

func (o AkriConnectorTemplateHelmAdvancedConfigurationResponseOutput) ToAkriConnectorTemplateHelmAdvancedConfigurationResponseOutput() AkriConnectorTemplateHelmAdvancedConfigurationResponseOutput {
	return o
}

func (o AkriConnectorTemplateHelmAdvancedConfigurationResponseOutput) ToAkriConnectorTemplateHelmAdvancedConfigurationResponseOutputWithContext(ctx context.Context) AkriConnectorTemplateHelmAdvancedConfigurationResponseOutput {
	return o
}

// Delete operation configuration for the Helm chart.
func (o AkriConnectorTemplateHelmAdvancedConfigurationResponseOutput) Delete() AkriConnectorTemplateHelmDeleteConfigurationResponsePtrOutput {
	return o.ApplyT(func(v AkriConnectorTemplateHelmAdvancedConfigurationResponse) *AkriConnectorTemplateHelmDeleteConfigurationResponse {
		return v.Delete
	}).(AkriConnectorTemplateHelmDeleteConfigurationResponsePtrOutput)
}

// Install operation configuration for the Helm chart.
func (o AkriConnectorTemplateHelmAdvancedConfigurationResponseOutput) Install() AkriConnectorTemplateHelmInstallConfigurationResponsePtrOutput {
	return o.ApplyT(func(v AkriConnectorTemplateHelmAdvancedConfigurationResponse) *AkriConnectorTemplateHelmInstallConfigurationResponse {
		return v.Install
	}).(AkriConnectorTemplateHelmInstallConfigurationResponsePtrOutput)
}

// Upgrade operation configuration for the Helm chart.
func (o AkriConnectorTemplateHelmAdvancedConfigurationResponseOutput) Upgrade() AkriConnectorTemplateHelmUpgradeConfigurationResponsePtrOutput {
	return o.ApplyT(func(v AkriConnectorTemplateHelmAdvancedConfigurationResponse) *AkriConnectorTemplateHelmUpgradeConfigurationResponse {
		return v.Upgrade
	}).(AkriConnectorTemplateHelmUpgradeConfigurationResponsePtrOutput)
}

type AkriConnectorTemplateHelmAdvancedConfigurationResponsePtrOutput struct{ *pulumi.OutputState }

func (AkriConnectorTemplateHelmAdvancedConfigurationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AkriConnectorTemplateHelmAdvancedConfigurationResponse)(nil)).Elem()
}

func (o AkriConnectorTemplateHelmAdvancedConfigurationResponsePtrOutput) ToAkriConnectorTemplateHelmAdvancedConfigurationResponsePtrOutput() AkriConnectorTemplateHelmAdvancedConfigurationResponsePtrOutput {
	return o
}

func (o AkriConnectorTemplateHelmAdvancedConfigurationResponsePtrOutput) ToAkriConnectorTemplateHelmAdvancedConfigurationResponsePtrOutputWithContext(ctx context.Context) AkriConnectorTemplateHelmAdvancedConfigurationResponsePtrOutput {
	return o
}

func (o AkriConnectorTemplateHelmAdvancedConfigurationResponsePtrOutput) Elem() AkriConnectorTemplateHelmAdvancedConfigurationResponseOutput {
	return o.ApplyT(func(v *AkriConnectorTemplateHelmAdvancedConfigurationResponse) AkriConnectorTemplateHelmAdvancedConfigurationResponse {
		if v != nil {
			return *v
		}
		var ret AkriConnectorTemplateHelmAdvancedConfigurationResponse
		return ret
	}).(AkriConnectorTemplateHelmAdvancedConfigurationResponseOutput)
}

// Delete operation configuration for the Helm chart.
func (o AkriConnectorTemplateHelmAdvancedConfigurationResponsePtrOutput) Delete() AkriConnectorTemplateHelmDeleteConfigurationResponsePtrOutput {
	return o.ApplyT(func(v *AkriConnectorTemplateHelmAdvancedConfigurationResponse) *AkriConnectorTemplateHelmDeleteConfigurationResponse {
		if v == nil {
			return nil
		}
		return v.Delete
	}).(AkriConnectorTemplateHelmDeleteConfigurationResponsePtrOutput)
}

// Install operation configuration for the Helm chart.
func (o AkriConnectorTemplateHelmAdvancedConfigurationResponsePtrOutput) Install() AkriConnectorTemplateHelmInstallConfigurationResponsePtrOutput {
	return o.ApplyT(func(v *AkriConnectorTemplateHelmAdvancedConfigurationResponse) *AkriConnectorTemplateHelmInstallConfigurationResponse {
		if v == nil {
			return nil
		}
		return v.Install
	}).(AkriConnectorTemplateHelmInstallConfigurationResponsePtrOutput)
}

// Upgrade operation configuration for the Helm chart.
func (o AkriConnectorTemplateHelmAdvancedConfigurationResponsePtrOutput) Upgrade() AkriConnectorTemplateHelmUpgradeConfigurationResponsePtrOutput {
	return o.ApplyT(func(v *AkriConnectorTemplateHelmAdvancedConfigurationResponse) *AkriConnectorTemplateHelmUpgradeConfigurationResponse {
		if v == nil {
			return nil
		}
		return v.Upgrade
	}).(AkriConnectorTemplateHelmUpgradeConfigurationResponsePtrOutput)
}

// AkriConnectorTemplateHelmAuthSecretRef properties.
type AkriConnectorTemplateHelmAuthSecretRef struct {
	// The key of the password in the secret.
	PasswordKey string `pulumi:"passwordKey"`
	// The name of the secret.
	SecretRef string `pulumi:"secretRef"`
	// The key of the username in the secret.
	UsernameKey string `pulumi:"usernameKey"`
}

// AkriConnectorTemplateHelmAuthSecretRefInput is an input type that accepts AkriConnectorTemplateHelmAuthSecretRefArgs and AkriConnectorTemplateHelmAuthSecretRefOutput values.
// You can construct a concrete instance of `AkriConnectorTemplateHelmAuthSecretRefInput` via:
//
//	AkriConnectorTemplateHelmAuthSecretRefArgs{...}
type AkriConnectorTemplateHelmAuthSecretRefInput interface {
	pulumi.Input

	ToAkriConnectorTemplateHelmAuthSecretRefOutput() AkriConnectorTemplateHelmAuthSecretRefOutput
	ToAkriConnectorTemplateHelmAuthSecretRefOutputWithContext(context.Context) AkriConnectorTemplateHelmAuthSecretRefOutput
}

// AkriConnectorTemplateHelmAuthSecretRef properties.
type AkriConnectorTemplateHelmAuthSecretRefArgs struct {
	// The key of the password in the secret.
	PasswordKey pulumi.StringInput `pulumi:"passwordKey"`
	// The name of the secret.
	SecretRef pulumi.StringInput `pulumi:"secretRef"`
	// The key of the username in the secret.
	UsernameKey pulumi.StringInput `pulumi:"usernameKey"`
}

func (AkriConnectorTemplateHelmAuthSecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AkriConnectorTemplateHelmAuthSecretRef)(nil)).Elem()
}

func (i AkriConnectorTemplateHelmAuthSecretRefArgs) ToAkriConnectorTemplateHelmAuthSecretRefOutput() AkriConnectorTemplateHelmAuthSecretRefOutput {
	return i.ToAkriConnectorTemplateHelmAuthSecretRefOutputWithContext(context.Background())
}

func (i AkriConnectorTemplateHelmAuthSecretRefArgs) ToAkriConnectorTemplateHelmAuthSecretRefOutputWithContext(ctx context.Context) AkriConnectorTemplateHelmAuthSecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AkriConnectorTemplateHelmAuthSecretRefOutput)
}

func (i AkriConnectorTemplateHelmAuthSecretRefArgs) ToAkriConnectorTemplateHelmAuthSecretRefPtrOutput() AkriConnectorTemplateHelmAuthSecretRefPtrOutput {
	return i.ToAkriConnectorTemplateHelmAuthSecretRefPtrOutputWithContext(context.Background())
}

func (i AkriConnectorTemplateHelmAuthSecretRefArgs) ToAkriConnectorTemplateHelmAuthSecretRefPtrOutputWithContext(ctx context.Context) AkriConnectorTemplateHelmAuthSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AkriConnectorTemplateHelmAuthSecretRefOutput).ToAkriConnectorTemplateHelmAuthSecretRefPtrOutputWithContext(ctx)
}

// AkriConnectorTemplateHelmAuthSecretRefPtrInput is an input type that accepts AkriConnectorTemplateHelmAuthSecretRefArgs, AkriConnectorTemplateHelmAuthSecretRefPtr and AkriConnectorTemplateHelmAuthSecretRefPtrOutput values.
// You can construct a concrete instance of `AkriConnectorTemplateHelmAuthSecretRefPtrInput` via:
//
//	        AkriConnectorTemplateHelmAuthSecretRefArgs{...}
//
//	or:
//
//	        nil
type AkriConnectorTemplateHelmAuthSecretRefPtrInput interface {
	pulumi.Input

	ToAkriConnectorTemplateHelmAuthSecretRefPtrOutput() AkriConnectorTemplateHelmAuthSecretRefPtrOutput
	ToAkriConnectorTemplateHelmAuthSecretRefPtrOutputWithContext(context.Context) AkriConnectorTemplateHelmAuthSecretRefPtrOutput
}

type akriConnectorTemplateHelmAuthSecretRefPtrType AkriConnectorTemplateHelmAuthSecretRefArgs

func AkriConnectorTemplateHelmAuthSecretRefPtr(v *AkriConnectorTemplateHelmAuthSecretRefArgs) AkriConnectorTemplateHelmAuthSecretRefPtrInput {
	return (*akriConnectorTemplateHelmAuthSecretRefPtrType)(v)
}

func (*akriConnectorTemplateHelmAuthSecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AkriConnectorTemplateHelmAuthSecretRef)(nil)).Elem()
}

func (i *akriConnectorTemplateHelmAuthSecretRefPtrType) ToAkriConnectorTemplateHelmAuthSecretRefPtrOutput() AkriConnectorTemplateHelmAuthSecretRefPtrOutput {
	return i.ToAkriConnectorTemplateHelmAuthSecretRefPtrOutputWithContext(context.Background())
}

func (i *akriConnectorTemplateHelmAuthSecretRefPtrType) ToAkriConnectorTemplateHelmAuthSecretRefPtrOutputWithContext(ctx context.Context) AkriConnectorTemplateHelmAuthSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AkriConnectorTemplateHelmAuthSecretRefPtrOutput)
}

// AkriConnectorTemplateHelmAuthSecretRef properties.
type AkriConnectorTemplateHelmAuthSecretRefOutput struct{ *pulumi.OutputState }

func (AkriConnectorTemplateHelmAuthSecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AkriConnectorTemplateHelmAuthSecretRef)(nil)).Elem()
}

func (o AkriConnectorTemplateHelmAuthSecretRefOutput) ToAkriConnectorTemplateHelmAuthSecretRefOutput() AkriConnectorTemplateHelmAuthSecretRefOutput {
	return o
}

func (o AkriConnectorTemplateHelmAuthSecretRefOutput) ToAkriConnectorTemplateHelmAuthSecretRefOutputWithContext(ctx context.Context) AkriConnectorTemplateHelmAuthSecretRefOutput {
	return o
}

func (o AkriConnectorTemplateHelmAuthSecretRefOutput) ToAkriConnectorTemplateHelmAuthSecretRefPtrOutput() AkriConnectorTemplateHelmAuthSecretRefPtrOutput {
	return o.ToAkriConnectorTemplateHelmAuthSecretRefPtrOutputWithContext(context.Background())
}

func (o AkriConnectorTemplateHelmAuthSecretRefOutput) ToAkriConnectorTemplateHelmAuthSecretRefPtrOutputWithContext(ctx context.Context) AkriConnectorTemplateHelmAuthSecretRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AkriConnectorTemplateHelmAuthSecretRef) *AkriConnectorTemplateHelmAuthSecretRef {
		return &v
	}).(AkriConnectorTemplateHelmAuthSecretRefPtrOutput)
}

// The key of the password in the secret.
func (o AkriConnectorTemplateHelmAuthSecretRefOutput) PasswordKey() pulumi.StringOutput {
	return o.ApplyT(func(v AkriConnectorTemplateHelmAuthSecretRef) string { return v.PasswordKey }).(pulumi.StringOutput)
}

// The name of the secret.
func (o AkriConnectorTemplateHelmAuthSecretRefOutput) SecretRef() pulumi.StringOutput {
	return o.ApplyT(func(v AkriConnectorTemplateHelmAuthSecretRef) string { return v.SecretRef }).(pulumi.StringOutput)
}

// The key of the username in the secret.
func (o AkriConnectorTemplateHelmAuthSecretRefOutput) UsernameKey() pulumi.StringOutput {
	return o.ApplyT(func(v AkriConnectorTemplateHelmAuthSecretRef) string { return v.UsernameKey }).(pulumi.StringOutput)
}

type AkriConnectorTemplateHelmAuthSecretRefPtrOutput struct{ *pulumi.OutputState }

func (AkriConnectorTemplateHelmAuthSecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AkriConnectorTemplateHelmAuthSecretRef)(nil)).Elem()
}

func (o AkriConnectorTemplateHelmAuthSecretRefPtrOutput) ToAkriConnectorTemplateHelmAuthSecretRefPtrOutput() AkriConnectorTemplateHelmAuthSecretRefPtrOutput {
	return o
}

func (o AkriConnectorTemplateHelmAuthSecretRefPtrOutput) ToAkriConnectorTemplateHelmAuthSecretRefPtrOutputWithContext(ctx context.Context) AkriConnectorTemplateHelmAuthSecretRefPtrOutput {
	return o
}

func (o AkriConnectorTemplateHelmAuthSecretRefPtrOutput) Elem() AkriConnectorTemplateHelmAuthSecretRefOutput {
	return o.ApplyT(func(v *AkriConnectorTemplateHelmAuthSecretRef) AkriConnectorTemplateHelmAuthSecretRef {
		if v != nil {
			return *v
		}
		var ret AkriConnectorTemplateHelmAuthSecretRef
		return ret
	}).(AkriConnectorTemplateHelmAuthSecretRefOutput)
}

// The key of the password in the secret.
func (o AkriConnectorTemplateHelmAuthSecretRefPtrOutput) PasswordKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AkriConnectorTemplateHelmAuthSecretRef) *string {
		if v == nil {
			return nil
		}
		return &v.PasswordKey
	}).(pulumi.StringPtrOutput)
}

// The name of the secret.
func (o AkriConnectorTemplateHelmAuthSecretRefPtrOutput) SecretRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AkriConnectorTemplateHelmAuthSecretRef) *string {
		if v == nil {
			return nil
		}
		return &v.SecretRef
	}).(pulumi.StringPtrOutput)
}

// The key of the username in the secret.
func (o AkriConnectorTemplateHelmAuthSecretRefPtrOutput) UsernameKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AkriConnectorTemplateHelmAuthSecretRef) *string {
		if v == nil {
			return nil
		}
		return &v.UsernameKey
	}).(pulumi.StringPtrOutput)
}

// AkriConnectorTemplateHelmAuthSecretRef properties.
type AkriConnectorTemplateHelmAuthSecretRefResponse struct {
	// The key of the password in the secret.
	PasswordKey string `pulumi:"passwordKey"`
	// The name of the secret.
	SecretRef string `pulumi:"secretRef"`
	// The key of the username in the secret.
	UsernameKey string `pulumi:"usernameKey"`
}

// AkriConnectorTemplateHelmAuthSecretRef properties.
type AkriConnectorTemplateHelmAuthSecretRefResponseOutput struct{ *pulumi.OutputState }

func (AkriConnectorTemplateHelmAuthSecretRefResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AkriConnectorTemplateHelmAuthSecretRefResponse)(nil)).Elem()
}

func (o AkriConnectorTemplateHelmAuthSecretRefResponseOutput) ToAkriConnectorTemplateHelmAuthSecretRefResponseOutput() AkriConnectorTemplateHelmAuthSecretRefResponseOutput {
	return o
}

func (o AkriConnectorTemplateHelmAuthSecretRefResponseOutput) ToAkriConnectorTemplateHelmAuthSecretRefResponseOutputWithContext(ctx context.Context) AkriConnectorTemplateHelmAuthSecretRefResponseOutput {
	return o
}

// The key of the password in the secret.
func (o AkriConnectorTemplateHelmAuthSecretRefResponseOutput) PasswordKey() pulumi.StringOutput {
	return o.ApplyT(func(v AkriConnectorTemplateHelmAuthSecretRefResponse) string { return v.PasswordKey }).(pulumi.StringOutput)
}

// The name of the secret.
func (o AkriConnectorTemplateHelmAuthSecretRefResponseOutput) SecretRef() pulumi.StringOutput {
	return o.ApplyT(func(v AkriConnectorTemplateHelmAuthSecretRefResponse) string { return v.SecretRef }).(pulumi.StringOutput)
}

// The key of the username in the secret.
func (o AkriConnectorTemplateHelmAuthSecretRefResponseOutput) UsernameKey() pulumi.StringOutput {
	return o.ApplyT(func(v AkriConnectorTemplateHelmAuthSecretRefResponse) string { return v.UsernameKey }).(pulumi.StringOutput)
}

type AkriConnectorTemplateHelmAuthSecretRefResponsePtrOutput struct{ *pulumi.OutputState }

func (AkriConnectorTemplateHelmAuthSecretRefResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AkriConnectorTemplateHelmAuthSecretRefResponse)(nil)).Elem()
}

func (o AkriConnectorTemplateHelmAuthSecretRefResponsePtrOutput) ToAkriConnectorTemplateHelmAuthSecretRefResponsePtrOutput() AkriConnectorTemplateHelmAuthSecretRefResponsePtrOutput {
	return o
}

func (o AkriConnectorTemplateHelmAuthSecretRefResponsePtrOutput) ToAkriConnectorTemplateHelmAuthSecretRefResponsePtrOutputWithContext(ctx context.Context) AkriConnectorTemplateHelmAuthSecretRefResponsePtrOutput {
	return o
}

func (o AkriConnectorTemplateHelmAuthSecretRefResponsePtrOutput) Elem() AkriConnectorTemplateHelmAuthSecretRefResponseOutput {
	return o.ApplyT(func(v *AkriConnectorTemplateHelmAuthSecretRefResponse) AkriConnectorTemplateHelmAuthSecretRefResponse {
		if v != nil {
			return *v
		}
		var ret AkriConnectorTemplateHelmAuthSecretRefResponse
		return ret
	}).(AkriConnectorTemplateHelmAuthSecretRefResponseOutput)
}

// The key of the password in the secret.
func (o AkriConnectorTemplateHelmAuthSecretRefResponsePtrOutput) PasswordKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AkriConnectorTemplateHelmAuthSecretRefResponse) *string {
		if v == nil {
			return nil
		}
		return &v.PasswordKey
	}).(pulumi.StringPtrOutput)
}

// The name of the secret.
func (o AkriConnectorTemplateHelmAuthSecretRefResponsePtrOutput) SecretRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AkriConnectorTemplateHelmAuthSecretRefResponse) *string {
		if v == nil {
			return nil
		}
		return &v.SecretRef
	}).(pulumi.StringPtrOutput)
}

// The key of the username in the secret.
func (o AkriConnectorTemplateHelmAuthSecretRefResponsePtrOutput) UsernameKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AkriConnectorTemplateHelmAuthSecretRefResponse) *string {
		if v == nil {
			return nil
		}
		return &v.UsernameKey
	}).(pulumi.StringPtrOutput)
}

// AkriConnectorTemplateHelmConfiguration properties.
type AkriConnectorTemplateHelmConfiguration struct {
	// The Helm configuration settings.
	HelmConfigurationSettings AkriConnectorTemplateHelmConfigurationSettings `pulumi:"helmConfigurationSettings"`
	// Runtime configuration types.
	// Expected value is 'HelmConfiguration'.
	RuntimeConfigurationType string `pulumi:"runtimeConfigurationType"`
}

// AkriConnectorTemplateHelmConfigurationInput is an input type that accepts AkriConnectorTemplateHelmConfigurationArgs and AkriConnectorTemplateHelmConfigurationOutput values.
// You can construct a concrete instance of `AkriConnectorTemplateHelmConfigurationInput` via:
//
//	AkriConnectorTemplateHelmConfigurationArgs{...}
type AkriConnectorTemplateHelmConfigurationInput interface {
	pulumi.Input

	ToAkriConnectorTemplateHelmConfigurationOutput() AkriConnectorTemplateHelmConfigurationOutput
	ToAkriConnectorTemplateHelmConfigurationOutputWithContext(context.Context) AkriConnectorTemplateHelmConfigurationOutput
}

// AkriConnectorTemplateHelmConfiguration properties.
type AkriConnectorTemplateHelmConfigurationArgs struct {
	// The Helm configuration settings.
	HelmConfigurationSettings AkriConnectorTemplateHelmConfigurationSettingsInput `pulumi:"helmConfigurationSettings"`
	// Runtime configuration types.
	// Expected value is 'HelmConfiguration'.
	RuntimeConfigurationType pulumi.StringInput `pulumi:"runtimeConfigurationType"`
}

func (AkriConnectorTemplateHelmConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AkriConnectorTemplateHelmConfiguration)(nil)).Elem()
}

func (i AkriConnectorTemplateHelmConfigurationArgs) ToAkriConnectorTemplateHelmConfigurationOutput() AkriConnectorTemplateHelmConfigurationOutput {
	return i.ToAkriConnectorTemplateHelmConfigurationOutputWithContext(context.Background())
}

func (i AkriConnectorTemplateHelmConfigurationArgs) ToAkriConnectorTemplateHelmConfigurationOutputWithContext(ctx context.Context) AkriConnectorTemplateHelmConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AkriConnectorTemplateHelmConfigurationOutput)
}

func (i AkriConnectorTemplateHelmConfigurationArgs) ToAkriConnectorTemplateHelmConfigurationPtrOutput() AkriConnectorTemplateHelmConfigurationPtrOutput {
	return i.ToAkriConnectorTemplateHelmConfigurationPtrOutputWithContext(context.Background())
}

func (i AkriConnectorTemplateHelmConfigurationArgs) ToAkriConnectorTemplateHelmConfigurationPtrOutputWithContext(ctx context.Context) AkriConnectorTemplateHelmConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AkriConnectorTemplateHelmConfigurationOutput).ToAkriConnectorTemplateHelmConfigurationPtrOutputWithContext(ctx)
}

// AkriConnectorTemplateHelmConfigurationPtrInput is an input type that accepts AkriConnectorTemplateHelmConfigurationArgs, AkriConnectorTemplateHelmConfigurationPtr and AkriConnectorTemplateHelmConfigurationPtrOutput values.
// You can construct a concrete instance of `AkriConnectorTemplateHelmConfigurationPtrInput` via:
//
//	        AkriConnectorTemplateHelmConfigurationArgs{...}
//
//	or:
//
//	        nil
type AkriConnectorTemplateHelmConfigurationPtrInput interface {
	pulumi.Input

	ToAkriConnectorTemplateHelmConfigurationPtrOutput() AkriConnectorTemplateHelmConfigurationPtrOutput
	ToAkriConnectorTemplateHelmConfigurationPtrOutputWithContext(context.Context) AkriConnectorTemplateHelmConfigurationPtrOutput
}

type akriConnectorTemplateHelmConfigurationPtrType AkriConnectorTemplateHelmConfigurationArgs

func AkriConnectorTemplateHelmConfigurationPtr(v *AkriConnectorTemplateHelmConfigurationArgs) AkriConnectorTemplateHelmConfigurationPtrInput {
	return (*akriConnectorTemplateHelmConfigurationPtrType)(v)
}

func (*akriConnectorTemplateHelmConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AkriConnectorTemplateHelmConfiguration)(nil)).Elem()
}

func (i *akriConnectorTemplateHelmConfigurationPtrType) ToAkriConnectorTemplateHelmConfigurationPtrOutput() AkriConnectorTemplateHelmConfigurationPtrOutput {
	return i.ToAkriConnectorTemplateHelmConfigurationPtrOutputWithContext(context.Background())
}

func (i *akriConnectorTemplateHelmConfigurationPtrType) ToAkriConnectorTemplateHelmConfigurationPtrOutputWithContext(ctx context.Context) AkriConnectorTemplateHelmConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AkriConnectorTemplateHelmConfigurationPtrOutput)
}

// AkriConnectorTemplateHelmConfiguration properties.
type AkriConnectorTemplateHelmConfigurationOutput struct{ *pulumi.OutputState }

func (AkriConnectorTemplateHelmConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AkriConnectorTemplateHelmConfiguration)(nil)).Elem()
}

func (o AkriConnectorTemplateHelmConfigurationOutput) ToAkriConnectorTemplateHelmConfigurationOutput() AkriConnectorTemplateHelmConfigurationOutput {
	return o
}

func (o AkriConnectorTemplateHelmConfigurationOutput) ToAkriConnectorTemplateHelmConfigurationOutputWithContext(ctx context.Context) AkriConnectorTemplateHelmConfigurationOutput {
	return o
}

func (o AkriConnectorTemplateHelmConfigurationOutput) ToAkriConnectorTemplateHelmConfigurationPtrOutput() AkriConnectorTemplateHelmConfigurationPtrOutput {
	return o.ToAkriConnectorTemplateHelmConfigurationPtrOutputWithContext(context.Background())
}

func (o AkriConnectorTemplateHelmConfigurationOutput) ToAkriConnectorTemplateHelmConfigurationPtrOutputWithContext(ctx context.Context) AkriConnectorTemplateHelmConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AkriConnectorTemplateHelmConfiguration) *AkriConnectorTemplateHelmConfiguration {
		return &v
	}).(AkriConnectorTemplateHelmConfigurationPtrOutput)
}

// The Helm configuration settings.
func (o AkriConnectorTemplateHelmConfigurationOutput) HelmConfigurationSettings() AkriConnectorTemplateHelmConfigurationSettingsOutput {
	return o.ApplyT(func(v AkriConnectorTemplateHelmConfiguration) AkriConnectorTemplateHelmConfigurationSettings {
		return v.HelmConfigurationSettings
	}).(AkriConnectorTemplateHelmConfigurationSettingsOutput)
}

// Runtime configuration types.
// Expected value is 'HelmConfiguration'.
func (o AkriConnectorTemplateHelmConfigurationOutput) RuntimeConfigurationType() pulumi.StringOutput {
	return o.ApplyT(func(v AkriConnectorTemplateHelmConfiguration) string { return v.RuntimeConfigurationType }).(pulumi.StringOutput)
}

type AkriConnectorTemplateHelmConfigurationPtrOutput struct{ *pulumi.OutputState }

func (AkriConnectorTemplateHelmConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AkriConnectorTemplateHelmConfiguration)(nil)).Elem()
}

func (o AkriConnectorTemplateHelmConfigurationPtrOutput) ToAkriConnectorTemplateHelmConfigurationPtrOutput() AkriConnectorTemplateHelmConfigurationPtrOutput {
	return o
}

func (o AkriConnectorTemplateHelmConfigurationPtrOutput) ToAkriConnectorTemplateHelmConfigurationPtrOutputWithContext(ctx context.Context) AkriConnectorTemplateHelmConfigurationPtrOutput {
	return o
}

func (o AkriConnectorTemplateHelmConfigurationPtrOutput) Elem() AkriConnectorTemplateHelmConfigurationOutput {
	return o.ApplyT(func(v *AkriConnectorTemplateHelmConfiguration) AkriConnectorTemplateHelmConfiguration {
		if v != nil {
			return *v
		}
		var ret AkriConnectorTemplateHelmConfiguration
		return ret
	}).(AkriConnectorTemplateHelmConfigurationOutput)
}

// The Helm configuration settings.
func (o AkriConnectorTemplateHelmConfigurationPtrOutput) HelmConfigurationSettings() AkriConnectorTemplateHelmConfigurationSettingsPtrOutput {
	return o.ApplyT(func(v *AkriConnectorTemplateHelmConfiguration) *AkriConnectorTemplateHelmConfigurationSettings {
		if v == nil {
			return nil
		}
		return &v.HelmConfigurationSettings
	}).(AkriConnectorTemplateHelmConfigurationSettingsPtrOutput)
}

// Runtime configuration types.
// Expected value is 'HelmConfiguration'.
func (o AkriConnectorTemplateHelmConfigurationPtrOutput) RuntimeConfigurationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AkriConnectorTemplateHelmConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.RuntimeConfigurationType
	}).(pulumi.StringPtrOutput)
}

// AkriConnectorTemplateHelmConfiguration properties.
type AkriConnectorTemplateHelmConfigurationResponse struct {
	// The Helm configuration settings.
	HelmConfigurationSettings AkriConnectorTemplateHelmConfigurationSettingsResponse `pulumi:"helmConfigurationSettings"`
	// Runtime configuration types.
	// Expected value is 'HelmConfiguration'.
	RuntimeConfigurationType string `pulumi:"runtimeConfigurationType"`
}

// AkriConnectorTemplateHelmConfiguration properties.
type AkriConnectorTemplateHelmConfigurationResponseOutput struct{ *pulumi.OutputState }

func (AkriConnectorTemplateHelmConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AkriConnectorTemplateHelmConfigurationResponse)(nil)).Elem()
}

func (o AkriConnectorTemplateHelmConfigurationResponseOutput) ToAkriConnectorTemplateHelmConfigurationResponseOutput() AkriConnectorTemplateHelmConfigurationResponseOutput {
	return o
}

func (o AkriConnectorTemplateHelmConfigurationResponseOutput) ToAkriConnectorTemplateHelmConfigurationResponseOutputWithContext(ctx context.Context) AkriConnectorTemplateHelmConfigurationResponseOutput {
	return o
}

// The Helm configuration settings.
func (o AkriConnectorTemplateHelmConfigurationResponseOutput) HelmConfigurationSettings() AkriConnectorTemplateHelmConfigurationSettingsResponseOutput {
	return o.ApplyT(func(v AkriConnectorTemplateHelmConfigurationResponse) AkriConnectorTemplateHelmConfigurationSettingsResponse {
		return v.HelmConfigurationSettings
	}).(AkriConnectorTemplateHelmConfigurationSettingsResponseOutput)
}

// Runtime configuration types.
// Expected value is 'HelmConfiguration'.
func (o AkriConnectorTemplateHelmConfigurationResponseOutput) RuntimeConfigurationType() pulumi.StringOutput {
	return o.ApplyT(func(v AkriConnectorTemplateHelmConfigurationResponse) string { return v.RuntimeConfigurationType }).(pulumi.StringOutput)
}

// AkriConnectorTemplateHelmConfiguration properties.
type AkriConnectorTemplateHelmConfigurationSettings struct {
	// Advanced configuration for the Helm chart.
	// Install, upgrade, and uninstall options for the helm chart such as atomic, wait, timeout, `wait_for_jobs`, and `disable_hooks`.
	AdvancedConfiguration *AkriConnectorTemplateHelmAdvancedConfiguration `pulumi:"advancedConfiguration"`
	// The registry settings for the helm chart to be used.
	RegistrySettings interface{} `pulumi:"registrySettings"`
	// The release name of the Helm chart.
	ReleaseName string `pulumi:"releaseName"`
	// The name of the repository
	RepositoryName string `pulumi:"repositoryName"`
	// A map of values to pass to the helm chart.
	Values map[string]string `pulumi:"values"`
	// The version of the Helm chart.
	Version string `pulumi:"version"`
}

// AkriConnectorTemplateHelmConfigurationSettingsInput is an input type that accepts AkriConnectorTemplateHelmConfigurationSettingsArgs and AkriConnectorTemplateHelmConfigurationSettingsOutput values.
// You can construct a concrete instance of `AkriConnectorTemplateHelmConfigurationSettingsInput` via:
//
//	AkriConnectorTemplateHelmConfigurationSettingsArgs{...}
type AkriConnectorTemplateHelmConfigurationSettingsInput interface {
	pulumi.Input

	ToAkriConnectorTemplateHelmConfigurationSettingsOutput() AkriConnectorTemplateHelmConfigurationSettingsOutput
	ToAkriConnectorTemplateHelmConfigurationSettingsOutputWithContext(context.Context) AkriConnectorTemplateHelmConfigurationSettingsOutput
}

// AkriConnectorTemplateHelmConfiguration properties.
type AkriConnectorTemplateHelmConfigurationSettingsArgs struct {
	// Advanced configuration for the Helm chart.
	// Install, upgrade, and uninstall options for the helm chart such as atomic, wait, timeout, `wait_for_jobs`, and `disable_hooks`.
	AdvancedConfiguration AkriConnectorTemplateHelmAdvancedConfigurationPtrInput `pulumi:"advancedConfiguration"`
	// The registry settings for the helm chart to be used.
	RegistrySettings pulumi.Input `pulumi:"registrySettings"`
	// The release name of the Helm chart.
	ReleaseName pulumi.StringInput `pulumi:"releaseName"`
	// The name of the repository
	RepositoryName pulumi.StringInput `pulumi:"repositoryName"`
	// A map of values to pass to the helm chart.
	Values pulumi.StringMapInput `pulumi:"values"`
	// The version of the Helm chart.
	Version pulumi.StringInput `pulumi:"version"`
}

func (AkriConnectorTemplateHelmConfigurationSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AkriConnectorTemplateHelmConfigurationSettings)(nil)).Elem()
}

func (i AkriConnectorTemplateHelmConfigurationSettingsArgs) ToAkriConnectorTemplateHelmConfigurationSettingsOutput() AkriConnectorTemplateHelmConfigurationSettingsOutput {
	return i.ToAkriConnectorTemplateHelmConfigurationSettingsOutputWithContext(context.Background())
}

func (i AkriConnectorTemplateHelmConfigurationSettingsArgs) ToAkriConnectorTemplateHelmConfigurationSettingsOutputWithContext(ctx context.Context) AkriConnectorTemplateHelmConfigurationSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AkriConnectorTemplateHelmConfigurationSettingsOutput)
}

func (i AkriConnectorTemplateHelmConfigurationSettingsArgs) ToAkriConnectorTemplateHelmConfigurationSettingsPtrOutput() AkriConnectorTemplateHelmConfigurationSettingsPtrOutput {
	return i.ToAkriConnectorTemplateHelmConfigurationSettingsPtrOutputWithContext(context.Background())
}

func (i AkriConnectorTemplateHelmConfigurationSettingsArgs) ToAkriConnectorTemplateHelmConfigurationSettingsPtrOutputWithContext(ctx context.Context) AkriConnectorTemplateHelmConfigurationSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AkriConnectorTemplateHelmConfigurationSettingsOutput).ToAkriConnectorTemplateHelmConfigurationSettingsPtrOutputWithContext(ctx)
}

// AkriConnectorTemplateHelmConfigurationSettingsPtrInput is an input type that accepts AkriConnectorTemplateHelmConfigurationSettingsArgs, AkriConnectorTemplateHelmConfigurationSettingsPtr and AkriConnectorTemplateHelmConfigurationSettingsPtrOutput values.
// You can construct a concrete instance of `AkriConnectorTemplateHelmConfigurationSettingsPtrInput` via:
//
//	        AkriConnectorTemplateHelmConfigurationSettingsArgs{...}
//
//	or:
//
//	        nil
type AkriConnectorTemplateHelmConfigurationSettingsPtrInput interface {
	pulumi.Input

	ToAkriConnectorTemplateHelmConfigurationSettingsPtrOutput() AkriConnectorTemplateHelmConfigurationSettingsPtrOutput
	ToAkriConnectorTemplateHelmConfigurationSettingsPtrOutputWithContext(context.Context) AkriConnectorTemplateHelmConfigurationSettingsPtrOutput
}

type akriConnectorTemplateHelmConfigurationSettingsPtrType AkriConnectorTemplateHelmConfigurationSettingsArgs

func AkriConnectorTemplateHelmConfigurationSettingsPtr(v *AkriConnectorTemplateHelmConfigurationSettingsArgs) AkriConnectorTemplateHelmConfigurationSettingsPtrInput {
	return (*akriConnectorTemplateHelmConfigurationSettingsPtrType)(v)
}

func (*akriConnectorTemplateHelmConfigurationSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AkriConnectorTemplateHelmConfigurationSettings)(nil)).Elem()
}

func (i *akriConnectorTemplateHelmConfigurationSettingsPtrType) ToAkriConnectorTemplateHelmConfigurationSettingsPtrOutput() AkriConnectorTemplateHelmConfigurationSettingsPtrOutput {
	return i.ToAkriConnectorTemplateHelmConfigurationSettingsPtrOutputWithContext(context.Background())
}

func (i *akriConnectorTemplateHelmConfigurationSettingsPtrType) ToAkriConnectorTemplateHelmConfigurationSettingsPtrOutputWithContext(ctx context.Context) AkriConnectorTemplateHelmConfigurationSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AkriConnectorTemplateHelmConfigurationSettingsPtrOutput)
}

// AkriConnectorTemplateHelmConfiguration properties.
type AkriConnectorTemplateHelmConfigurationSettingsOutput struct{ *pulumi.OutputState }

func (AkriConnectorTemplateHelmConfigurationSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AkriConnectorTemplateHelmConfigurationSettings)(nil)).Elem()
}

func (o AkriConnectorTemplateHelmConfigurationSettingsOutput) ToAkriConnectorTemplateHelmConfigurationSettingsOutput() AkriConnectorTemplateHelmConfigurationSettingsOutput {
	return o
}

func (o AkriConnectorTemplateHelmConfigurationSettingsOutput) ToAkriConnectorTemplateHelmConfigurationSettingsOutputWithContext(ctx context.Context) AkriConnectorTemplateHelmConfigurationSettingsOutput {
	return o
}

func (o AkriConnectorTemplateHelmConfigurationSettingsOutput) ToAkriConnectorTemplateHelmConfigurationSettingsPtrOutput() AkriConnectorTemplateHelmConfigurationSettingsPtrOutput {
	return o.ToAkriConnectorTemplateHelmConfigurationSettingsPtrOutputWithContext(context.Background())
}

func (o AkriConnectorTemplateHelmConfigurationSettingsOutput) ToAkriConnectorTemplateHelmConfigurationSettingsPtrOutputWithContext(ctx context.Context) AkriConnectorTemplateHelmConfigurationSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AkriConnectorTemplateHelmConfigurationSettings) *AkriConnectorTemplateHelmConfigurationSettings {
		return &v
	}).(AkriConnectorTemplateHelmConfigurationSettingsPtrOutput)
}

// Advanced configuration for the Helm chart.
// Install, upgrade, and uninstall options for the helm chart such as atomic, wait, timeout, `wait_for_jobs`, and `disable_hooks`.
func (o AkriConnectorTemplateHelmConfigurationSettingsOutput) AdvancedConfiguration() AkriConnectorTemplateHelmAdvancedConfigurationPtrOutput {
	return o.ApplyT(func(v AkriConnectorTemplateHelmConfigurationSettings) *AkriConnectorTemplateHelmAdvancedConfiguration {
		return v.AdvancedConfiguration
	}).(AkriConnectorTemplateHelmAdvancedConfigurationPtrOutput)
}

// The registry settings for the helm chart to be used.
func (o AkriConnectorTemplateHelmConfigurationSettingsOutput) RegistrySettings() pulumi.AnyOutput {
	return o.ApplyT(func(v AkriConnectorTemplateHelmConfigurationSettings) interface{} { return v.RegistrySettings }).(pulumi.AnyOutput)
}

// The release name of the Helm chart.
func (o AkriConnectorTemplateHelmConfigurationSettingsOutput) ReleaseName() pulumi.StringOutput {
	return o.ApplyT(func(v AkriConnectorTemplateHelmConfigurationSettings) string { return v.ReleaseName }).(pulumi.StringOutput)
}

// The name of the repository
func (o AkriConnectorTemplateHelmConfigurationSettingsOutput) RepositoryName() pulumi.StringOutput {
	return o.ApplyT(func(v AkriConnectorTemplateHelmConfigurationSettings) string { return v.RepositoryName }).(pulumi.StringOutput)
}

// A map of values to pass to the helm chart.
func (o AkriConnectorTemplateHelmConfigurationSettingsOutput) Values() pulumi.StringMapOutput {
	return o.ApplyT(func(v AkriConnectorTemplateHelmConfigurationSettings) map[string]string { return v.Values }).(pulumi.StringMapOutput)
}

// The version of the Helm chart.
func (o AkriConnectorTemplateHelmConfigurationSettingsOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v AkriConnectorTemplateHelmConfigurationSettings) string { return v.Version }).(pulumi.StringOutput)
}

type AkriConnectorTemplateHelmConfigurationSettingsPtrOutput struct{ *pulumi.OutputState }

func (AkriConnectorTemplateHelmConfigurationSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AkriConnectorTemplateHelmConfigurationSettings)(nil)).Elem()
}

func (o AkriConnectorTemplateHelmConfigurationSettingsPtrOutput) ToAkriConnectorTemplateHelmConfigurationSettingsPtrOutput() AkriConnectorTemplateHelmConfigurationSettingsPtrOutput {
	return o
}

func (o AkriConnectorTemplateHelmConfigurationSettingsPtrOutput) ToAkriConnectorTemplateHelmConfigurationSettingsPtrOutputWithContext(ctx context.Context) AkriConnectorTemplateHelmConfigurationSettingsPtrOutput {
	return o
}

func (o AkriConnectorTemplateHelmConfigurationSettingsPtrOutput) Elem() AkriConnectorTemplateHelmConfigurationSettingsOutput {
	return o.ApplyT(func(v *AkriConnectorTemplateHelmConfigurationSettings) AkriConnectorTemplateHelmConfigurationSettings {
		if v != nil {
			return *v
		}
		var ret AkriConnectorTemplateHelmConfigurationSettings
		return ret
	}).(AkriConnectorTemplateHelmConfigurationSettingsOutput)
}

// Advanced configuration for the Helm chart.
// Install, upgrade, and uninstall options for the helm chart such as atomic, wait, timeout, `wait_for_jobs`, and `disable_hooks`.
func (o AkriConnectorTemplateHelmConfigurationSettingsPtrOutput) AdvancedConfiguration() AkriConnectorTemplateHelmAdvancedConfigurationPtrOutput {
	return o.ApplyT(func(v *AkriConnectorTemplateHelmConfigurationSettings) *AkriConnectorTemplateHelmAdvancedConfiguration {
		if v == nil {
			return nil
		}
		return v.AdvancedConfiguration
	}).(AkriConnectorTemplateHelmAdvancedConfigurationPtrOutput)
}

// The registry settings for the helm chart to be used.
func (o AkriConnectorTemplateHelmConfigurationSettingsPtrOutput) RegistrySettings() pulumi.AnyOutput {
	return o.ApplyT(func(v *AkriConnectorTemplateHelmConfigurationSettings) interface{} {
		if v == nil {
			return nil
		}
		return v.RegistrySettings
	}).(pulumi.AnyOutput)
}

// The release name of the Helm chart.
func (o AkriConnectorTemplateHelmConfigurationSettingsPtrOutput) ReleaseName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AkriConnectorTemplateHelmConfigurationSettings) *string {
		if v == nil {
			return nil
		}
		return &v.ReleaseName
	}).(pulumi.StringPtrOutput)
}

// The name of the repository
func (o AkriConnectorTemplateHelmConfigurationSettingsPtrOutput) RepositoryName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AkriConnectorTemplateHelmConfigurationSettings) *string {
		if v == nil {
			return nil
		}
		return &v.RepositoryName
	}).(pulumi.StringPtrOutput)
}

// A map of values to pass to the helm chart.
func (o AkriConnectorTemplateHelmConfigurationSettingsPtrOutput) Values() pulumi.StringMapOutput {
	return o.ApplyT(func(v *AkriConnectorTemplateHelmConfigurationSettings) map[string]string {
		if v == nil {
			return nil
		}
		return v.Values
	}).(pulumi.StringMapOutput)
}

// The version of the Helm chart.
func (o AkriConnectorTemplateHelmConfigurationSettingsPtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AkriConnectorTemplateHelmConfigurationSettings) *string {
		if v == nil {
			return nil
		}
		return &v.Version
	}).(pulumi.StringPtrOutput)
}

// AkriConnectorTemplateHelmConfiguration properties.
type AkriConnectorTemplateHelmConfigurationSettingsResponse struct {
	// Advanced configuration for the Helm chart.
	// Install, upgrade, and uninstall options for the helm chart such as atomic, wait, timeout, `wait_for_jobs`, and `disable_hooks`.
	AdvancedConfiguration *AkriConnectorTemplateHelmAdvancedConfigurationResponse `pulumi:"advancedConfiguration"`
	// The registry settings for the helm chart to be used.
	RegistrySettings interface{} `pulumi:"registrySettings"`
	// The release name of the Helm chart.
	ReleaseName string `pulumi:"releaseName"`
	// The name of the repository
	RepositoryName string `pulumi:"repositoryName"`
	// A map of values to pass to the helm chart.
	Values map[string]string `pulumi:"values"`
	// The version of the Helm chart.
	Version string `pulumi:"version"`
}

// AkriConnectorTemplateHelmConfiguration properties.
type AkriConnectorTemplateHelmConfigurationSettingsResponseOutput struct{ *pulumi.OutputState }

func (AkriConnectorTemplateHelmConfigurationSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AkriConnectorTemplateHelmConfigurationSettingsResponse)(nil)).Elem()
}

func (o AkriConnectorTemplateHelmConfigurationSettingsResponseOutput) ToAkriConnectorTemplateHelmConfigurationSettingsResponseOutput() AkriConnectorTemplateHelmConfigurationSettingsResponseOutput {
	return o
}

func (o AkriConnectorTemplateHelmConfigurationSettingsResponseOutput) ToAkriConnectorTemplateHelmConfigurationSettingsResponseOutputWithContext(ctx context.Context) AkriConnectorTemplateHelmConfigurationSettingsResponseOutput {
	return o
}

// Advanced configuration for the Helm chart.
// Install, upgrade, and uninstall options for the helm chart such as atomic, wait, timeout, `wait_for_jobs`, and `disable_hooks`.
func (o AkriConnectorTemplateHelmConfigurationSettingsResponseOutput) AdvancedConfiguration() AkriConnectorTemplateHelmAdvancedConfigurationResponsePtrOutput {
	return o.ApplyT(func(v AkriConnectorTemplateHelmConfigurationSettingsResponse) *AkriConnectorTemplateHelmAdvancedConfigurationResponse {
		return v.AdvancedConfiguration
	}).(AkriConnectorTemplateHelmAdvancedConfigurationResponsePtrOutput)
}

// The registry settings for the helm chart to be used.
func (o AkriConnectorTemplateHelmConfigurationSettingsResponseOutput) RegistrySettings() pulumi.AnyOutput {
	return o.ApplyT(func(v AkriConnectorTemplateHelmConfigurationSettingsResponse) interface{} { return v.RegistrySettings }).(pulumi.AnyOutput)
}

// The release name of the Helm chart.
func (o AkriConnectorTemplateHelmConfigurationSettingsResponseOutput) ReleaseName() pulumi.StringOutput {
	return o.ApplyT(func(v AkriConnectorTemplateHelmConfigurationSettingsResponse) string { return v.ReleaseName }).(pulumi.StringOutput)
}

// The name of the repository
func (o AkriConnectorTemplateHelmConfigurationSettingsResponseOutput) RepositoryName() pulumi.StringOutput {
	return o.ApplyT(func(v AkriConnectorTemplateHelmConfigurationSettingsResponse) string { return v.RepositoryName }).(pulumi.StringOutput)
}

// A map of values to pass to the helm chart.
func (o AkriConnectorTemplateHelmConfigurationSettingsResponseOutput) Values() pulumi.StringMapOutput {
	return o.ApplyT(func(v AkriConnectorTemplateHelmConfigurationSettingsResponse) map[string]string { return v.Values }).(pulumi.StringMapOutput)
}

// The version of the Helm chart.
func (o AkriConnectorTemplateHelmConfigurationSettingsResponseOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v AkriConnectorTemplateHelmConfigurationSettingsResponse) string { return v.Version }).(pulumi.StringOutput)
}

// AkriConnectorTemplateHelmContainerRegistry properties.
type AkriConnectorTemplateHelmContainerRegistry struct {
	// The registry settings for the container registry.
	ContainerRegistrySettings AkriConnectorTemplateHelmContainerRegistrySettings `pulumi:"containerRegistrySettings"`
	// AkriConnectorTemplateHelmRegistrySettingsType values.
	// Expected value is 'ContainerRegistry'.
	RegistrySettingsType string `pulumi:"registrySettingsType"`
}

// AkriConnectorTemplateHelmContainerRegistryInput is an input type that accepts AkriConnectorTemplateHelmContainerRegistryArgs and AkriConnectorTemplateHelmContainerRegistryOutput values.
// You can construct a concrete instance of `AkriConnectorTemplateHelmContainerRegistryInput` via:
//
//	AkriConnectorTemplateHelmContainerRegistryArgs{...}
type AkriConnectorTemplateHelmContainerRegistryInput interface {
	pulumi.Input

	ToAkriConnectorTemplateHelmContainerRegistryOutput() AkriConnectorTemplateHelmContainerRegistryOutput
	ToAkriConnectorTemplateHelmContainerRegistryOutputWithContext(context.Context) AkriConnectorTemplateHelmContainerRegistryOutput
}

// AkriConnectorTemplateHelmContainerRegistry properties.
type AkriConnectorTemplateHelmContainerRegistryArgs struct {
	// The registry settings for the container registry.
	ContainerRegistrySettings AkriConnectorTemplateHelmContainerRegistrySettingsInput `pulumi:"containerRegistrySettings"`
	// AkriConnectorTemplateHelmRegistrySettingsType values.
	// Expected value is 'ContainerRegistry'.
	RegistrySettingsType pulumi.StringInput `pulumi:"registrySettingsType"`
}

func (AkriConnectorTemplateHelmContainerRegistryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AkriConnectorTemplateHelmContainerRegistry)(nil)).Elem()
}

func (i AkriConnectorTemplateHelmContainerRegistryArgs) ToAkriConnectorTemplateHelmContainerRegistryOutput() AkriConnectorTemplateHelmContainerRegistryOutput {
	return i.ToAkriConnectorTemplateHelmContainerRegistryOutputWithContext(context.Background())
}

func (i AkriConnectorTemplateHelmContainerRegistryArgs) ToAkriConnectorTemplateHelmContainerRegistryOutputWithContext(ctx context.Context) AkriConnectorTemplateHelmContainerRegistryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AkriConnectorTemplateHelmContainerRegistryOutput)
}

func (i AkriConnectorTemplateHelmContainerRegistryArgs) ToAkriConnectorTemplateHelmContainerRegistryPtrOutput() AkriConnectorTemplateHelmContainerRegistryPtrOutput {
	return i.ToAkriConnectorTemplateHelmContainerRegistryPtrOutputWithContext(context.Background())
}

func (i AkriConnectorTemplateHelmContainerRegistryArgs) ToAkriConnectorTemplateHelmContainerRegistryPtrOutputWithContext(ctx context.Context) AkriConnectorTemplateHelmContainerRegistryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AkriConnectorTemplateHelmContainerRegistryOutput).ToAkriConnectorTemplateHelmContainerRegistryPtrOutputWithContext(ctx)
}

// AkriConnectorTemplateHelmContainerRegistryPtrInput is an input type that accepts AkriConnectorTemplateHelmContainerRegistryArgs, AkriConnectorTemplateHelmContainerRegistryPtr and AkriConnectorTemplateHelmContainerRegistryPtrOutput values.
// You can construct a concrete instance of `AkriConnectorTemplateHelmContainerRegistryPtrInput` via:
//
//	        AkriConnectorTemplateHelmContainerRegistryArgs{...}
//
//	or:
//
//	        nil
type AkriConnectorTemplateHelmContainerRegistryPtrInput interface {
	pulumi.Input

	ToAkriConnectorTemplateHelmContainerRegistryPtrOutput() AkriConnectorTemplateHelmContainerRegistryPtrOutput
	ToAkriConnectorTemplateHelmContainerRegistryPtrOutputWithContext(context.Context) AkriConnectorTemplateHelmContainerRegistryPtrOutput
}

type akriConnectorTemplateHelmContainerRegistryPtrType AkriConnectorTemplateHelmContainerRegistryArgs

func AkriConnectorTemplateHelmContainerRegistryPtr(v *AkriConnectorTemplateHelmContainerRegistryArgs) AkriConnectorTemplateHelmContainerRegistryPtrInput {
	return (*akriConnectorTemplateHelmContainerRegistryPtrType)(v)
}

func (*akriConnectorTemplateHelmContainerRegistryPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AkriConnectorTemplateHelmContainerRegistry)(nil)).Elem()
}

func (i *akriConnectorTemplateHelmContainerRegistryPtrType) ToAkriConnectorTemplateHelmContainerRegistryPtrOutput() AkriConnectorTemplateHelmContainerRegistryPtrOutput {
	return i.ToAkriConnectorTemplateHelmContainerRegistryPtrOutputWithContext(context.Background())
}

func (i *akriConnectorTemplateHelmContainerRegistryPtrType) ToAkriConnectorTemplateHelmContainerRegistryPtrOutputWithContext(ctx context.Context) AkriConnectorTemplateHelmContainerRegistryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AkriConnectorTemplateHelmContainerRegistryPtrOutput)
}

// AkriConnectorTemplateHelmContainerRegistry properties.
type AkriConnectorTemplateHelmContainerRegistryOutput struct{ *pulumi.OutputState }

func (AkriConnectorTemplateHelmContainerRegistryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AkriConnectorTemplateHelmContainerRegistry)(nil)).Elem()
}

func (o AkriConnectorTemplateHelmContainerRegistryOutput) ToAkriConnectorTemplateHelmContainerRegistryOutput() AkriConnectorTemplateHelmContainerRegistryOutput {
	return o
}

func (o AkriConnectorTemplateHelmContainerRegistryOutput) ToAkriConnectorTemplateHelmContainerRegistryOutputWithContext(ctx context.Context) AkriConnectorTemplateHelmContainerRegistryOutput {
	return o
}

func (o AkriConnectorTemplateHelmContainerRegistryOutput) ToAkriConnectorTemplateHelmContainerRegistryPtrOutput() AkriConnectorTemplateHelmContainerRegistryPtrOutput {
	return o.ToAkriConnectorTemplateHelmContainerRegistryPtrOutputWithContext(context.Background())
}

func (o AkriConnectorTemplateHelmContainerRegistryOutput) ToAkriConnectorTemplateHelmContainerRegistryPtrOutputWithContext(ctx context.Context) AkriConnectorTemplateHelmContainerRegistryPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AkriConnectorTemplateHelmContainerRegistry) *AkriConnectorTemplateHelmContainerRegistry {
		return &v
	}).(AkriConnectorTemplateHelmContainerRegistryPtrOutput)
}

// The registry settings for the container registry.
func (o AkriConnectorTemplateHelmContainerRegistryOutput) ContainerRegistrySettings() AkriConnectorTemplateHelmContainerRegistrySettingsOutput {
	return o.ApplyT(func(v AkriConnectorTemplateHelmContainerRegistry) AkriConnectorTemplateHelmContainerRegistrySettings {
		return v.ContainerRegistrySettings
	}).(AkriConnectorTemplateHelmContainerRegistrySettingsOutput)
}

// AkriConnectorTemplateHelmRegistrySettingsType values.
// Expected value is 'ContainerRegistry'.
func (o AkriConnectorTemplateHelmContainerRegistryOutput) RegistrySettingsType() pulumi.StringOutput {
	return o.ApplyT(func(v AkriConnectorTemplateHelmContainerRegistry) string { return v.RegistrySettingsType }).(pulumi.StringOutput)
}

type AkriConnectorTemplateHelmContainerRegistryPtrOutput struct{ *pulumi.OutputState }

func (AkriConnectorTemplateHelmContainerRegistryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AkriConnectorTemplateHelmContainerRegistry)(nil)).Elem()
}

func (o AkriConnectorTemplateHelmContainerRegistryPtrOutput) ToAkriConnectorTemplateHelmContainerRegistryPtrOutput() AkriConnectorTemplateHelmContainerRegistryPtrOutput {
	return o
}

func (o AkriConnectorTemplateHelmContainerRegistryPtrOutput) ToAkriConnectorTemplateHelmContainerRegistryPtrOutputWithContext(ctx context.Context) AkriConnectorTemplateHelmContainerRegistryPtrOutput {
	return o
}

func (o AkriConnectorTemplateHelmContainerRegistryPtrOutput) Elem() AkriConnectorTemplateHelmContainerRegistryOutput {
	return o.ApplyT(func(v *AkriConnectorTemplateHelmContainerRegistry) AkriConnectorTemplateHelmContainerRegistry {
		if v != nil {
			return *v
		}
		var ret AkriConnectorTemplateHelmContainerRegistry
		return ret
	}).(AkriConnectorTemplateHelmContainerRegistryOutput)
}

// The registry settings for the container registry.
func (o AkriConnectorTemplateHelmContainerRegistryPtrOutput) ContainerRegistrySettings() AkriConnectorTemplateHelmContainerRegistrySettingsPtrOutput {
	return o.ApplyT(func(v *AkriConnectorTemplateHelmContainerRegistry) *AkriConnectorTemplateHelmContainerRegistrySettings {
		if v == nil {
			return nil
		}
		return &v.ContainerRegistrySettings
	}).(AkriConnectorTemplateHelmContainerRegistrySettingsPtrOutput)
}

// AkriConnectorTemplateHelmRegistrySettingsType values.
// Expected value is 'ContainerRegistry'.
func (o AkriConnectorTemplateHelmContainerRegistryPtrOutput) RegistrySettingsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AkriConnectorTemplateHelmContainerRegistry) *string {
		if v == nil {
			return nil
		}
		return &v.RegistrySettingsType
	}).(pulumi.StringPtrOutput)
}

// AkriConnectorTemplateHelmContainerRegistry properties.
type AkriConnectorTemplateHelmContainerRegistryResponse struct {
	// The registry settings for the container registry.
	ContainerRegistrySettings AkriConnectorTemplateHelmContainerRegistrySettingsResponse `pulumi:"containerRegistrySettings"`
	// AkriConnectorTemplateHelmRegistrySettingsType values.
	// Expected value is 'ContainerRegistry'.
	RegistrySettingsType string `pulumi:"registrySettingsType"`
}

// AkriConnectorTemplateHelmContainerRegistry properties.
type AkriConnectorTemplateHelmContainerRegistryResponseOutput struct{ *pulumi.OutputState }

func (AkriConnectorTemplateHelmContainerRegistryResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AkriConnectorTemplateHelmContainerRegistryResponse)(nil)).Elem()
}

func (o AkriConnectorTemplateHelmContainerRegistryResponseOutput) ToAkriConnectorTemplateHelmContainerRegistryResponseOutput() AkriConnectorTemplateHelmContainerRegistryResponseOutput {
	return o
}

func (o AkriConnectorTemplateHelmContainerRegistryResponseOutput) ToAkriConnectorTemplateHelmContainerRegistryResponseOutputWithContext(ctx context.Context) AkriConnectorTemplateHelmContainerRegistryResponseOutput {
	return o
}

// The registry settings for the container registry.
func (o AkriConnectorTemplateHelmContainerRegistryResponseOutput) ContainerRegistrySettings() AkriConnectorTemplateHelmContainerRegistrySettingsResponseOutput {
	return o.ApplyT(func(v AkriConnectorTemplateHelmContainerRegistryResponse) AkriConnectorTemplateHelmContainerRegistrySettingsResponse {
		return v.ContainerRegistrySettings
	}).(AkriConnectorTemplateHelmContainerRegistrySettingsResponseOutput)
}

// AkriConnectorTemplateHelmRegistrySettingsType values.
// Expected value is 'ContainerRegistry'.
func (o AkriConnectorTemplateHelmContainerRegistryResponseOutput) RegistrySettingsType() pulumi.StringOutput {
	return o.ApplyT(func(v AkriConnectorTemplateHelmContainerRegistryResponse) string { return v.RegistrySettingsType }).(pulumi.StringOutput)
}

type AkriConnectorTemplateHelmContainerRegistryResponsePtrOutput struct{ *pulumi.OutputState }

func (AkriConnectorTemplateHelmContainerRegistryResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AkriConnectorTemplateHelmContainerRegistryResponse)(nil)).Elem()
}

func (o AkriConnectorTemplateHelmContainerRegistryResponsePtrOutput) ToAkriConnectorTemplateHelmContainerRegistryResponsePtrOutput() AkriConnectorTemplateHelmContainerRegistryResponsePtrOutput {
	return o
}

func (o AkriConnectorTemplateHelmContainerRegistryResponsePtrOutput) ToAkriConnectorTemplateHelmContainerRegistryResponsePtrOutputWithContext(ctx context.Context) AkriConnectorTemplateHelmContainerRegistryResponsePtrOutput {
	return o
}

func (o AkriConnectorTemplateHelmContainerRegistryResponsePtrOutput) Elem() AkriConnectorTemplateHelmContainerRegistryResponseOutput {
	return o.ApplyT(func(v *AkriConnectorTemplateHelmContainerRegistryResponse) AkriConnectorTemplateHelmContainerRegistryResponse {
		if v != nil {
			return *v
		}
		var ret AkriConnectorTemplateHelmContainerRegistryResponse
		return ret
	}).(AkriConnectorTemplateHelmContainerRegistryResponseOutput)
}

// The registry settings for the container registry.
func (o AkriConnectorTemplateHelmContainerRegistryResponsePtrOutput) ContainerRegistrySettings() AkriConnectorTemplateHelmContainerRegistrySettingsResponsePtrOutput {
	return o.ApplyT(func(v *AkriConnectorTemplateHelmContainerRegistryResponse) *AkriConnectorTemplateHelmContainerRegistrySettingsResponse {
		if v == nil {
			return nil
		}
		return &v.ContainerRegistrySettings
	}).(AkriConnectorTemplateHelmContainerRegistrySettingsResponsePtrOutput)
}

// AkriConnectorTemplateHelmRegistrySettingsType values.
// Expected value is 'ContainerRegistry'.
func (o AkriConnectorTemplateHelmContainerRegistryResponsePtrOutput) RegistrySettingsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AkriConnectorTemplateHelmContainerRegistryResponse) *string {
		if v == nil {
			return nil
		}
		return &v.RegistrySettingsType
	}).(pulumi.StringPtrOutput)
}

// AkriConnectorTemplateHelmContainerRegistrySettings properties.
type AkriConnectorTemplateHelmContainerRegistrySettings struct {
	// Optional reference to a secret in the same namespace to use for pulling the Helm chart.
	AuthSecretRef *AkriConnectorTemplateHelmAuthSecretRef `pulumi:"authSecretRef"`
	// The registry to use for the Helm chart.
	Registry string `pulumi:"registry"`
}

// AkriConnectorTemplateHelmContainerRegistrySettingsInput is an input type that accepts AkriConnectorTemplateHelmContainerRegistrySettingsArgs and AkriConnectorTemplateHelmContainerRegistrySettingsOutput values.
// You can construct a concrete instance of `AkriConnectorTemplateHelmContainerRegistrySettingsInput` via:
//
//	AkriConnectorTemplateHelmContainerRegistrySettingsArgs{...}
type AkriConnectorTemplateHelmContainerRegistrySettingsInput interface {
	pulumi.Input

	ToAkriConnectorTemplateHelmContainerRegistrySettingsOutput() AkriConnectorTemplateHelmContainerRegistrySettingsOutput
	ToAkriConnectorTemplateHelmContainerRegistrySettingsOutputWithContext(context.Context) AkriConnectorTemplateHelmContainerRegistrySettingsOutput
}

// AkriConnectorTemplateHelmContainerRegistrySettings properties.
type AkriConnectorTemplateHelmContainerRegistrySettingsArgs struct {
	// Optional reference to a secret in the same namespace to use for pulling the Helm chart.
	AuthSecretRef AkriConnectorTemplateHelmAuthSecretRefPtrInput `pulumi:"authSecretRef"`
	// The registry to use for the Helm chart.
	Registry pulumi.StringInput `pulumi:"registry"`
}

func (AkriConnectorTemplateHelmContainerRegistrySettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AkriConnectorTemplateHelmContainerRegistrySettings)(nil)).Elem()
}

func (i AkriConnectorTemplateHelmContainerRegistrySettingsArgs) ToAkriConnectorTemplateHelmContainerRegistrySettingsOutput() AkriConnectorTemplateHelmContainerRegistrySettingsOutput {
	return i.ToAkriConnectorTemplateHelmContainerRegistrySettingsOutputWithContext(context.Background())
}

func (i AkriConnectorTemplateHelmContainerRegistrySettingsArgs) ToAkriConnectorTemplateHelmContainerRegistrySettingsOutputWithContext(ctx context.Context) AkriConnectorTemplateHelmContainerRegistrySettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AkriConnectorTemplateHelmContainerRegistrySettingsOutput)
}

func (i AkriConnectorTemplateHelmContainerRegistrySettingsArgs) ToAkriConnectorTemplateHelmContainerRegistrySettingsPtrOutput() AkriConnectorTemplateHelmContainerRegistrySettingsPtrOutput {
	return i.ToAkriConnectorTemplateHelmContainerRegistrySettingsPtrOutputWithContext(context.Background())
}

func (i AkriConnectorTemplateHelmContainerRegistrySettingsArgs) ToAkriConnectorTemplateHelmContainerRegistrySettingsPtrOutputWithContext(ctx context.Context) AkriConnectorTemplateHelmContainerRegistrySettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AkriConnectorTemplateHelmContainerRegistrySettingsOutput).ToAkriConnectorTemplateHelmContainerRegistrySettingsPtrOutputWithContext(ctx)
}

// AkriConnectorTemplateHelmContainerRegistrySettingsPtrInput is an input type that accepts AkriConnectorTemplateHelmContainerRegistrySettingsArgs, AkriConnectorTemplateHelmContainerRegistrySettingsPtr and AkriConnectorTemplateHelmContainerRegistrySettingsPtrOutput values.
// You can construct a concrete instance of `AkriConnectorTemplateHelmContainerRegistrySettingsPtrInput` via:
//
//	        AkriConnectorTemplateHelmContainerRegistrySettingsArgs{...}
//
//	or:
//
//	        nil
type AkriConnectorTemplateHelmContainerRegistrySettingsPtrInput interface {
	pulumi.Input

	ToAkriConnectorTemplateHelmContainerRegistrySettingsPtrOutput() AkriConnectorTemplateHelmContainerRegistrySettingsPtrOutput
	ToAkriConnectorTemplateHelmContainerRegistrySettingsPtrOutputWithContext(context.Context) AkriConnectorTemplateHelmContainerRegistrySettingsPtrOutput
}

type akriConnectorTemplateHelmContainerRegistrySettingsPtrType AkriConnectorTemplateHelmContainerRegistrySettingsArgs

func AkriConnectorTemplateHelmContainerRegistrySettingsPtr(v *AkriConnectorTemplateHelmContainerRegistrySettingsArgs) AkriConnectorTemplateHelmContainerRegistrySettingsPtrInput {
	return (*akriConnectorTemplateHelmContainerRegistrySettingsPtrType)(v)
}

func (*akriConnectorTemplateHelmContainerRegistrySettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AkriConnectorTemplateHelmContainerRegistrySettings)(nil)).Elem()
}

func (i *akriConnectorTemplateHelmContainerRegistrySettingsPtrType) ToAkriConnectorTemplateHelmContainerRegistrySettingsPtrOutput() AkriConnectorTemplateHelmContainerRegistrySettingsPtrOutput {
	return i.ToAkriConnectorTemplateHelmContainerRegistrySettingsPtrOutputWithContext(context.Background())
}

func (i *akriConnectorTemplateHelmContainerRegistrySettingsPtrType) ToAkriConnectorTemplateHelmContainerRegistrySettingsPtrOutputWithContext(ctx context.Context) AkriConnectorTemplateHelmContainerRegistrySettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AkriConnectorTemplateHelmContainerRegistrySettingsPtrOutput)
}

// AkriConnectorTemplateHelmContainerRegistrySettings properties.
type AkriConnectorTemplateHelmContainerRegistrySettingsOutput struct{ *pulumi.OutputState }

func (AkriConnectorTemplateHelmContainerRegistrySettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AkriConnectorTemplateHelmContainerRegistrySettings)(nil)).Elem()
}

func (o AkriConnectorTemplateHelmContainerRegistrySettingsOutput) ToAkriConnectorTemplateHelmContainerRegistrySettingsOutput() AkriConnectorTemplateHelmContainerRegistrySettingsOutput {
	return o
}

func (o AkriConnectorTemplateHelmContainerRegistrySettingsOutput) ToAkriConnectorTemplateHelmContainerRegistrySettingsOutputWithContext(ctx context.Context) AkriConnectorTemplateHelmContainerRegistrySettingsOutput {
	return o
}

func (o AkriConnectorTemplateHelmContainerRegistrySettingsOutput) ToAkriConnectorTemplateHelmContainerRegistrySettingsPtrOutput() AkriConnectorTemplateHelmContainerRegistrySettingsPtrOutput {
	return o.ToAkriConnectorTemplateHelmContainerRegistrySettingsPtrOutputWithContext(context.Background())
}

func (o AkriConnectorTemplateHelmContainerRegistrySettingsOutput) ToAkriConnectorTemplateHelmContainerRegistrySettingsPtrOutputWithContext(ctx context.Context) AkriConnectorTemplateHelmContainerRegistrySettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AkriConnectorTemplateHelmContainerRegistrySettings) *AkriConnectorTemplateHelmContainerRegistrySettings {
		return &v
	}).(AkriConnectorTemplateHelmContainerRegistrySettingsPtrOutput)
}

// Optional reference to a secret in the same namespace to use for pulling the Helm chart.
func (o AkriConnectorTemplateHelmContainerRegistrySettingsOutput) AuthSecretRef() AkriConnectorTemplateHelmAuthSecretRefPtrOutput {
	return o.ApplyT(func(v AkriConnectorTemplateHelmContainerRegistrySettings) *AkriConnectorTemplateHelmAuthSecretRef {
		return v.AuthSecretRef
	}).(AkriConnectorTemplateHelmAuthSecretRefPtrOutput)
}

// The registry to use for the Helm chart.
func (o AkriConnectorTemplateHelmContainerRegistrySettingsOutput) Registry() pulumi.StringOutput {
	return o.ApplyT(func(v AkriConnectorTemplateHelmContainerRegistrySettings) string { return v.Registry }).(pulumi.StringOutput)
}

type AkriConnectorTemplateHelmContainerRegistrySettingsPtrOutput struct{ *pulumi.OutputState }

func (AkriConnectorTemplateHelmContainerRegistrySettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AkriConnectorTemplateHelmContainerRegistrySettings)(nil)).Elem()
}

func (o AkriConnectorTemplateHelmContainerRegistrySettingsPtrOutput) ToAkriConnectorTemplateHelmContainerRegistrySettingsPtrOutput() AkriConnectorTemplateHelmContainerRegistrySettingsPtrOutput {
	return o
}

func (o AkriConnectorTemplateHelmContainerRegistrySettingsPtrOutput) ToAkriConnectorTemplateHelmContainerRegistrySettingsPtrOutputWithContext(ctx context.Context) AkriConnectorTemplateHelmContainerRegistrySettingsPtrOutput {
	return o
}

func (o AkriConnectorTemplateHelmContainerRegistrySettingsPtrOutput) Elem() AkriConnectorTemplateHelmContainerRegistrySettingsOutput {
	return o.ApplyT(func(v *AkriConnectorTemplateHelmContainerRegistrySettings) AkriConnectorTemplateHelmContainerRegistrySettings {
		if v != nil {
			return *v
		}
		var ret AkriConnectorTemplateHelmContainerRegistrySettings
		return ret
	}).(AkriConnectorTemplateHelmContainerRegistrySettingsOutput)
}

// Optional reference to a secret in the same namespace to use for pulling the Helm chart.
func (o AkriConnectorTemplateHelmContainerRegistrySettingsPtrOutput) AuthSecretRef() AkriConnectorTemplateHelmAuthSecretRefPtrOutput {
	return o.ApplyT(func(v *AkriConnectorTemplateHelmContainerRegistrySettings) *AkriConnectorTemplateHelmAuthSecretRef {
		if v == nil {
			return nil
		}
		return v.AuthSecretRef
	}).(AkriConnectorTemplateHelmAuthSecretRefPtrOutput)
}

// The registry to use for the Helm chart.
func (o AkriConnectorTemplateHelmContainerRegistrySettingsPtrOutput) Registry() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AkriConnectorTemplateHelmContainerRegistrySettings) *string {
		if v == nil {
			return nil
		}
		return &v.Registry
	}).(pulumi.StringPtrOutput)
}

// AkriConnectorTemplateHelmContainerRegistrySettings properties.
type AkriConnectorTemplateHelmContainerRegistrySettingsResponse struct {
	// Optional reference to a secret in the same namespace to use for pulling the Helm chart.
	AuthSecretRef *AkriConnectorTemplateHelmAuthSecretRefResponse `pulumi:"authSecretRef"`
	// The registry to use for the Helm chart.
	Registry string `pulumi:"registry"`
}

// AkriConnectorTemplateHelmContainerRegistrySettings properties.
type AkriConnectorTemplateHelmContainerRegistrySettingsResponseOutput struct{ *pulumi.OutputState }

func (AkriConnectorTemplateHelmContainerRegistrySettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AkriConnectorTemplateHelmContainerRegistrySettingsResponse)(nil)).Elem()
}

func (o AkriConnectorTemplateHelmContainerRegistrySettingsResponseOutput) ToAkriConnectorTemplateHelmContainerRegistrySettingsResponseOutput() AkriConnectorTemplateHelmContainerRegistrySettingsResponseOutput {
	return o
}

func (o AkriConnectorTemplateHelmContainerRegistrySettingsResponseOutput) ToAkriConnectorTemplateHelmContainerRegistrySettingsResponseOutputWithContext(ctx context.Context) AkriConnectorTemplateHelmContainerRegistrySettingsResponseOutput {
	return o
}

// Optional reference to a secret in the same namespace to use for pulling the Helm chart.
func (o AkriConnectorTemplateHelmContainerRegistrySettingsResponseOutput) AuthSecretRef() AkriConnectorTemplateHelmAuthSecretRefResponsePtrOutput {
	return o.ApplyT(func(v AkriConnectorTemplateHelmContainerRegistrySettingsResponse) *AkriConnectorTemplateHelmAuthSecretRefResponse {
		return v.AuthSecretRef
	}).(AkriConnectorTemplateHelmAuthSecretRefResponsePtrOutput)
}

// The registry to use for the Helm chart.
func (o AkriConnectorTemplateHelmContainerRegistrySettingsResponseOutput) Registry() pulumi.StringOutput {
	return o.ApplyT(func(v AkriConnectorTemplateHelmContainerRegistrySettingsResponse) string { return v.Registry }).(pulumi.StringOutput)
}

type AkriConnectorTemplateHelmContainerRegistrySettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (AkriConnectorTemplateHelmContainerRegistrySettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AkriConnectorTemplateHelmContainerRegistrySettingsResponse)(nil)).Elem()
}

func (o AkriConnectorTemplateHelmContainerRegistrySettingsResponsePtrOutput) ToAkriConnectorTemplateHelmContainerRegistrySettingsResponsePtrOutput() AkriConnectorTemplateHelmContainerRegistrySettingsResponsePtrOutput {
	return o
}

func (o AkriConnectorTemplateHelmContainerRegistrySettingsResponsePtrOutput) ToAkriConnectorTemplateHelmContainerRegistrySettingsResponsePtrOutputWithContext(ctx context.Context) AkriConnectorTemplateHelmContainerRegistrySettingsResponsePtrOutput {
	return o
}

func (o AkriConnectorTemplateHelmContainerRegistrySettingsResponsePtrOutput) Elem() AkriConnectorTemplateHelmContainerRegistrySettingsResponseOutput {
	return o.ApplyT(func(v *AkriConnectorTemplateHelmContainerRegistrySettingsResponse) AkriConnectorTemplateHelmContainerRegistrySettingsResponse {
		if v != nil {
			return *v
		}
		var ret AkriConnectorTemplateHelmContainerRegistrySettingsResponse
		return ret
	}).(AkriConnectorTemplateHelmContainerRegistrySettingsResponseOutput)
}

// Optional reference to a secret in the same namespace to use for pulling the Helm chart.
func (o AkriConnectorTemplateHelmContainerRegistrySettingsResponsePtrOutput) AuthSecretRef() AkriConnectorTemplateHelmAuthSecretRefResponsePtrOutput {
	return o.ApplyT(func(v *AkriConnectorTemplateHelmContainerRegistrySettingsResponse) *AkriConnectorTemplateHelmAuthSecretRefResponse {
		if v == nil {
			return nil
		}
		return v.AuthSecretRef
	}).(AkriConnectorTemplateHelmAuthSecretRefResponsePtrOutput)
}

// The registry to use for the Helm chart.
func (o AkriConnectorTemplateHelmContainerRegistrySettingsResponsePtrOutput) Registry() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AkriConnectorTemplateHelmContainerRegistrySettingsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Registry
	}).(pulumi.StringPtrOutput)
}

// AkriConnectorTemplateHelmDeleteConfiguration properties.
type AkriConnectorTemplateHelmDeleteConfiguration struct {
	// If set, the operation will be atomic. If the operation fails, all changes will be rolled back.
	Atomic *bool `pulumi:"atomic"`
	// Disable pre/post upgrade hooks for the operation.
	DisableHooks *bool `pulumi:"disableHooks"`
	// Time to wait for any individual Kubernetes operation (like `Jobs` for hooks).
	Timeout *int `pulumi:"timeout"`
	// If set, the operation will wait until all Pods, PVCs, Services, and minimum number of Pods of a `Deployment`, `StatefulSet`, or `ReplicaSet` are in a ready state before marking the release as successful.
	Wait *bool `pulumi:"wait"`
	// If set, the operation will wait for jobs to complete before marking the release as successful.
	WaitForJobs *bool `pulumi:"waitForJobs"`
}

// AkriConnectorTemplateHelmDeleteConfigurationInput is an input type that accepts AkriConnectorTemplateHelmDeleteConfigurationArgs and AkriConnectorTemplateHelmDeleteConfigurationOutput values.
// You can construct a concrete instance of `AkriConnectorTemplateHelmDeleteConfigurationInput` via:
//
//	AkriConnectorTemplateHelmDeleteConfigurationArgs{...}
type AkriConnectorTemplateHelmDeleteConfigurationInput interface {
	pulumi.Input

	ToAkriConnectorTemplateHelmDeleteConfigurationOutput() AkriConnectorTemplateHelmDeleteConfigurationOutput
	ToAkriConnectorTemplateHelmDeleteConfigurationOutputWithContext(context.Context) AkriConnectorTemplateHelmDeleteConfigurationOutput
}

// AkriConnectorTemplateHelmDeleteConfiguration properties.
type AkriConnectorTemplateHelmDeleteConfigurationArgs struct {
	// If set, the operation will be atomic. If the operation fails, all changes will be rolled back.
	Atomic pulumi.BoolPtrInput `pulumi:"atomic"`
	// Disable pre/post upgrade hooks for the operation.
	DisableHooks pulumi.BoolPtrInput `pulumi:"disableHooks"`
	// Time to wait for any individual Kubernetes operation (like `Jobs` for hooks).
	Timeout pulumi.IntPtrInput `pulumi:"timeout"`
	// If set, the operation will wait until all Pods, PVCs, Services, and minimum number of Pods of a `Deployment`, `StatefulSet`, or `ReplicaSet` are in a ready state before marking the release as successful.
	Wait pulumi.BoolPtrInput `pulumi:"wait"`
	// If set, the operation will wait for jobs to complete before marking the release as successful.
	WaitForJobs pulumi.BoolPtrInput `pulumi:"waitForJobs"`
}

func (AkriConnectorTemplateHelmDeleteConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AkriConnectorTemplateHelmDeleteConfiguration)(nil)).Elem()
}

func (i AkriConnectorTemplateHelmDeleteConfigurationArgs) ToAkriConnectorTemplateHelmDeleteConfigurationOutput() AkriConnectorTemplateHelmDeleteConfigurationOutput {
	return i.ToAkriConnectorTemplateHelmDeleteConfigurationOutputWithContext(context.Background())
}

func (i AkriConnectorTemplateHelmDeleteConfigurationArgs) ToAkriConnectorTemplateHelmDeleteConfigurationOutputWithContext(ctx context.Context) AkriConnectorTemplateHelmDeleteConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AkriConnectorTemplateHelmDeleteConfigurationOutput)
}

func (i AkriConnectorTemplateHelmDeleteConfigurationArgs) ToAkriConnectorTemplateHelmDeleteConfigurationPtrOutput() AkriConnectorTemplateHelmDeleteConfigurationPtrOutput {
	return i.ToAkriConnectorTemplateHelmDeleteConfigurationPtrOutputWithContext(context.Background())
}

func (i AkriConnectorTemplateHelmDeleteConfigurationArgs) ToAkriConnectorTemplateHelmDeleteConfigurationPtrOutputWithContext(ctx context.Context) AkriConnectorTemplateHelmDeleteConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AkriConnectorTemplateHelmDeleteConfigurationOutput).ToAkriConnectorTemplateHelmDeleteConfigurationPtrOutputWithContext(ctx)
}

// AkriConnectorTemplateHelmDeleteConfigurationPtrInput is an input type that accepts AkriConnectorTemplateHelmDeleteConfigurationArgs, AkriConnectorTemplateHelmDeleteConfigurationPtr and AkriConnectorTemplateHelmDeleteConfigurationPtrOutput values.
// You can construct a concrete instance of `AkriConnectorTemplateHelmDeleteConfigurationPtrInput` via:
//
//	        AkriConnectorTemplateHelmDeleteConfigurationArgs{...}
//
//	or:
//
//	        nil
type AkriConnectorTemplateHelmDeleteConfigurationPtrInput interface {
	pulumi.Input

	ToAkriConnectorTemplateHelmDeleteConfigurationPtrOutput() AkriConnectorTemplateHelmDeleteConfigurationPtrOutput
	ToAkriConnectorTemplateHelmDeleteConfigurationPtrOutputWithContext(context.Context) AkriConnectorTemplateHelmDeleteConfigurationPtrOutput
}

type akriConnectorTemplateHelmDeleteConfigurationPtrType AkriConnectorTemplateHelmDeleteConfigurationArgs

func AkriConnectorTemplateHelmDeleteConfigurationPtr(v *AkriConnectorTemplateHelmDeleteConfigurationArgs) AkriConnectorTemplateHelmDeleteConfigurationPtrInput {
	return (*akriConnectorTemplateHelmDeleteConfigurationPtrType)(v)
}

func (*akriConnectorTemplateHelmDeleteConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AkriConnectorTemplateHelmDeleteConfiguration)(nil)).Elem()
}

func (i *akriConnectorTemplateHelmDeleteConfigurationPtrType) ToAkriConnectorTemplateHelmDeleteConfigurationPtrOutput() AkriConnectorTemplateHelmDeleteConfigurationPtrOutput {
	return i.ToAkriConnectorTemplateHelmDeleteConfigurationPtrOutputWithContext(context.Background())
}

func (i *akriConnectorTemplateHelmDeleteConfigurationPtrType) ToAkriConnectorTemplateHelmDeleteConfigurationPtrOutputWithContext(ctx context.Context) AkriConnectorTemplateHelmDeleteConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AkriConnectorTemplateHelmDeleteConfigurationPtrOutput)
}

// AkriConnectorTemplateHelmDeleteConfiguration properties.
type AkriConnectorTemplateHelmDeleteConfigurationOutput struct{ *pulumi.OutputState }

func (AkriConnectorTemplateHelmDeleteConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AkriConnectorTemplateHelmDeleteConfiguration)(nil)).Elem()
}

func (o AkriConnectorTemplateHelmDeleteConfigurationOutput) ToAkriConnectorTemplateHelmDeleteConfigurationOutput() AkriConnectorTemplateHelmDeleteConfigurationOutput {
	return o
}

func (o AkriConnectorTemplateHelmDeleteConfigurationOutput) ToAkriConnectorTemplateHelmDeleteConfigurationOutputWithContext(ctx context.Context) AkriConnectorTemplateHelmDeleteConfigurationOutput {
	return o
}

func (o AkriConnectorTemplateHelmDeleteConfigurationOutput) ToAkriConnectorTemplateHelmDeleteConfigurationPtrOutput() AkriConnectorTemplateHelmDeleteConfigurationPtrOutput {
	return o.ToAkriConnectorTemplateHelmDeleteConfigurationPtrOutputWithContext(context.Background())
}

func (o AkriConnectorTemplateHelmDeleteConfigurationOutput) ToAkriConnectorTemplateHelmDeleteConfigurationPtrOutputWithContext(ctx context.Context) AkriConnectorTemplateHelmDeleteConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AkriConnectorTemplateHelmDeleteConfiguration) *AkriConnectorTemplateHelmDeleteConfiguration {
		return &v
	}).(AkriConnectorTemplateHelmDeleteConfigurationPtrOutput)
}

// If set, the operation will be atomic. If the operation fails, all changes will be rolled back.
func (o AkriConnectorTemplateHelmDeleteConfigurationOutput) Atomic() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AkriConnectorTemplateHelmDeleteConfiguration) *bool { return v.Atomic }).(pulumi.BoolPtrOutput)
}

// Disable pre/post upgrade hooks for the operation.
func (o AkriConnectorTemplateHelmDeleteConfigurationOutput) DisableHooks() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AkriConnectorTemplateHelmDeleteConfiguration) *bool { return v.DisableHooks }).(pulumi.BoolPtrOutput)
}

// Time to wait for any individual Kubernetes operation (like `Jobs` for hooks).
func (o AkriConnectorTemplateHelmDeleteConfigurationOutput) Timeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AkriConnectorTemplateHelmDeleteConfiguration) *int { return v.Timeout }).(pulumi.IntPtrOutput)
}

// If set, the operation will wait until all Pods, PVCs, Services, and minimum number of Pods of a `Deployment`, `StatefulSet`, or `ReplicaSet` are in a ready state before marking the release as successful.
func (o AkriConnectorTemplateHelmDeleteConfigurationOutput) Wait() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AkriConnectorTemplateHelmDeleteConfiguration) *bool { return v.Wait }).(pulumi.BoolPtrOutput)
}

// If set, the operation will wait for jobs to complete before marking the release as successful.
func (o AkriConnectorTemplateHelmDeleteConfigurationOutput) WaitForJobs() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AkriConnectorTemplateHelmDeleteConfiguration) *bool { return v.WaitForJobs }).(pulumi.BoolPtrOutput)
}

type AkriConnectorTemplateHelmDeleteConfigurationPtrOutput struct{ *pulumi.OutputState }

func (AkriConnectorTemplateHelmDeleteConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AkriConnectorTemplateHelmDeleteConfiguration)(nil)).Elem()
}

func (o AkriConnectorTemplateHelmDeleteConfigurationPtrOutput) ToAkriConnectorTemplateHelmDeleteConfigurationPtrOutput() AkriConnectorTemplateHelmDeleteConfigurationPtrOutput {
	return o
}

func (o AkriConnectorTemplateHelmDeleteConfigurationPtrOutput) ToAkriConnectorTemplateHelmDeleteConfigurationPtrOutputWithContext(ctx context.Context) AkriConnectorTemplateHelmDeleteConfigurationPtrOutput {
	return o
}

func (o AkriConnectorTemplateHelmDeleteConfigurationPtrOutput) Elem() AkriConnectorTemplateHelmDeleteConfigurationOutput {
	return o.ApplyT(func(v *AkriConnectorTemplateHelmDeleteConfiguration) AkriConnectorTemplateHelmDeleteConfiguration {
		if v != nil {
			return *v
		}
		var ret AkriConnectorTemplateHelmDeleteConfiguration
		return ret
	}).(AkriConnectorTemplateHelmDeleteConfigurationOutput)
}

// If set, the operation will be atomic. If the operation fails, all changes will be rolled back.
func (o AkriConnectorTemplateHelmDeleteConfigurationPtrOutput) Atomic() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AkriConnectorTemplateHelmDeleteConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.Atomic
	}).(pulumi.BoolPtrOutput)
}

// Disable pre/post upgrade hooks for the operation.
func (o AkriConnectorTemplateHelmDeleteConfigurationPtrOutput) DisableHooks() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AkriConnectorTemplateHelmDeleteConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.DisableHooks
	}).(pulumi.BoolPtrOutput)
}

// Time to wait for any individual Kubernetes operation (like `Jobs` for hooks).
func (o AkriConnectorTemplateHelmDeleteConfigurationPtrOutput) Timeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AkriConnectorTemplateHelmDeleteConfiguration) *int {
		if v == nil {
			return nil
		}
		return v.Timeout
	}).(pulumi.IntPtrOutput)
}

// If set, the operation will wait until all Pods, PVCs, Services, and minimum number of Pods of a `Deployment`, `StatefulSet`, or `ReplicaSet` are in a ready state before marking the release as successful.
func (o AkriConnectorTemplateHelmDeleteConfigurationPtrOutput) Wait() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AkriConnectorTemplateHelmDeleteConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.Wait
	}).(pulumi.BoolPtrOutput)
}

// If set, the operation will wait for jobs to complete before marking the release as successful.
func (o AkriConnectorTemplateHelmDeleteConfigurationPtrOutput) WaitForJobs() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AkriConnectorTemplateHelmDeleteConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.WaitForJobs
	}).(pulumi.BoolPtrOutput)
}

// AkriConnectorTemplateHelmDeleteConfiguration properties.
type AkriConnectorTemplateHelmDeleteConfigurationResponse struct {
	// If set, the operation will be atomic. If the operation fails, all changes will be rolled back.
	Atomic *bool `pulumi:"atomic"`
	// Disable pre/post upgrade hooks for the operation.
	DisableHooks *bool `pulumi:"disableHooks"`
	// Time to wait for any individual Kubernetes operation (like `Jobs` for hooks).
	Timeout *int `pulumi:"timeout"`
	// If set, the operation will wait until all Pods, PVCs, Services, and minimum number of Pods of a `Deployment`, `StatefulSet`, or `ReplicaSet` are in a ready state before marking the release as successful.
	Wait *bool `pulumi:"wait"`
	// If set, the operation will wait for jobs to complete before marking the release as successful.
	WaitForJobs *bool `pulumi:"waitForJobs"`
}

// AkriConnectorTemplateHelmDeleteConfiguration properties.
type AkriConnectorTemplateHelmDeleteConfigurationResponseOutput struct{ *pulumi.OutputState }

func (AkriConnectorTemplateHelmDeleteConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AkriConnectorTemplateHelmDeleteConfigurationResponse)(nil)).Elem()
}

func (o AkriConnectorTemplateHelmDeleteConfigurationResponseOutput) ToAkriConnectorTemplateHelmDeleteConfigurationResponseOutput() AkriConnectorTemplateHelmDeleteConfigurationResponseOutput {
	return o
}

func (o AkriConnectorTemplateHelmDeleteConfigurationResponseOutput) ToAkriConnectorTemplateHelmDeleteConfigurationResponseOutputWithContext(ctx context.Context) AkriConnectorTemplateHelmDeleteConfigurationResponseOutput {
	return o
}

// If set, the operation will be atomic. If the operation fails, all changes will be rolled back.
func (o AkriConnectorTemplateHelmDeleteConfigurationResponseOutput) Atomic() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AkriConnectorTemplateHelmDeleteConfigurationResponse) *bool { return v.Atomic }).(pulumi.BoolPtrOutput)
}

// Disable pre/post upgrade hooks for the operation.
func (o AkriConnectorTemplateHelmDeleteConfigurationResponseOutput) DisableHooks() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AkriConnectorTemplateHelmDeleteConfigurationResponse) *bool { return v.DisableHooks }).(pulumi.BoolPtrOutput)
}

// Time to wait for any individual Kubernetes operation (like `Jobs` for hooks).
func (o AkriConnectorTemplateHelmDeleteConfigurationResponseOutput) Timeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AkriConnectorTemplateHelmDeleteConfigurationResponse) *int { return v.Timeout }).(pulumi.IntPtrOutput)
}

// If set, the operation will wait until all Pods, PVCs, Services, and minimum number of Pods of a `Deployment`, `StatefulSet`, or `ReplicaSet` are in a ready state before marking the release as successful.
func (o AkriConnectorTemplateHelmDeleteConfigurationResponseOutput) Wait() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AkriConnectorTemplateHelmDeleteConfigurationResponse) *bool { return v.Wait }).(pulumi.BoolPtrOutput)
}

// If set, the operation will wait for jobs to complete before marking the release as successful.
func (o AkriConnectorTemplateHelmDeleteConfigurationResponseOutput) WaitForJobs() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AkriConnectorTemplateHelmDeleteConfigurationResponse) *bool { return v.WaitForJobs }).(pulumi.BoolPtrOutput)
}

type AkriConnectorTemplateHelmDeleteConfigurationResponsePtrOutput struct{ *pulumi.OutputState }

func (AkriConnectorTemplateHelmDeleteConfigurationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AkriConnectorTemplateHelmDeleteConfigurationResponse)(nil)).Elem()
}

func (o AkriConnectorTemplateHelmDeleteConfigurationResponsePtrOutput) ToAkriConnectorTemplateHelmDeleteConfigurationResponsePtrOutput() AkriConnectorTemplateHelmDeleteConfigurationResponsePtrOutput {
	return o
}

func (o AkriConnectorTemplateHelmDeleteConfigurationResponsePtrOutput) ToAkriConnectorTemplateHelmDeleteConfigurationResponsePtrOutputWithContext(ctx context.Context) AkriConnectorTemplateHelmDeleteConfigurationResponsePtrOutput {
	return o
}

func (o AkriConnectorTemplateHelmDeleteConfigurationResponsePtrOutput) Elem() AkriConnectorTemplateHelmDeleteConfigurationResponseOutput {
	return o.ApplyT(func(v *AkriConnectorTemplateHelmDeleteConfigurationResponse) AkriConnectorTemplateHelmDeleteConfigurationResponse {
		if v != nil {
			return *v
		}
		var ret AkriConnectorTemplateHelmDeleteConfigurationResponse
		return ret
	}).(AkriConnectorTemplateHelmDeleteConfigurationResponseOutput)
}

// If set, the operation will be atomic. If the operation fails, all changes will be rolled back.
func (o AkriConnectorTemplateHelmDeleteConfigurationResponsePtrOutput) Atomic() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AkriConnectorTemplateHelmDeleteConfigurationResponse) *bool {
		if v == nil {
			return nil
		}
		return v.Atomic
	}).(pulumi.BoolPtrOutput)
}

// Disable pre/post upgrade hooks for the operation.
func (o AkriConnectorTemplateHelmDeleteConfigurationResponsePtrOutput) DisableHooks() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AkriConnectorTemplateHelmDeleteConfigurationResponse) *bool {
		if v == nil {
			return nil
		}
		return v.DisableHooks
	}).(pulumi.BoolPtrOutput)
}

// Time to wait for any individual Kubernetes operation (like `Jobs` for hooks).
func (o AkriConnectorTemplateHelmDeleteConfigurationResponsePtrOutput) Timeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AkriConnectorTemplateHelmDeleteConfigurationResponse) *int {
		if v == nil {
			return nil
		}
		return v.Timeout
	}).(pulumi.IntPtrOutput)
}

// If set, the operation will wait until all Pods, PVCs, Services, and minimum number of Pods of a `Deployment`, `StatefulSet`, or `ReplicaSet` are in a ready state before marking the release as successful.
func (o AkriConnectorTemplateHelmDeleteConfigurationResponsePtrOutput) Wait() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AkriConnectorTemplateHelmDeleteConfigurationResponse) *bool {
		if v == nil {
			return nil
		}
		return v.Wait
	}).(pulumi.BoolPtrOutput)
}

// If set, the operation will wait for jobs to complete before marking the release as successful.
func (o AkriConnectorTemplateHelmDeleteConfigurationResponsePtrOutput) WaitForJobs() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AkriConnectorTemplateHelmDeleteConfigurationResponse) *bool {
		if v == nil {
			return nil
		}
		return v.WaitForJobs
	}).(pulumi.BoolPtrOutput)
}

// AkriConnectorTemplateHelmInstallConfiguration properties.
type AkriConnectorTemplateHelmInstallConfiguration struct {
	// If set, the operation will be atomic. If the operation fails, all changes will be rolled back.
	Atomic *bool `pulumi:"atomic"`
	// Disable pre/post upgrade hooks for the operation.
	DisableHooks *bool `pulumi:"disableHooks"`
	// Time to wait for any individual Kubernetes operation (like `Jobs` for hooks).
	Timeout *int `pulumi:"timeout"`
	// If set, the operation will wait until all Pods, PVCs, Services, and minimum number of Pods of a `Deployment`, `StatefulSet`, or `ReplicaSet` are in a ready state before marking the release as successful.
	Wait *bool `pulumi:"wait"`
	// If set, the operation will wait for jobs to complete before marking the release as successful.
	WaitForJobs *bool `pulumi:"waitForJobs"`
}

// AkriConnectorTemplateHelmInstallConfigurationInput is an input type that accepts AkriConnectorTemplateHelmInstallConfigurationArgs and AkriConnectorTemplateHelmInstallConfigurationOutput values.
// You can construct a concrete instance of `AkriConnectorTemplateHelmInstallConfigurationInput` via:
//
//	AkriConnectorTemplateHelmInstallConfigurationArgs{...}
type AkriConnectorTemplateHelmInstallConfigurationInput interface {
	pulumi.Input

	ToAkriConnectorTemplateHelmInstallConfigurationOutput() AkriConnectorTemplateHelmInstallConfigurationOutput
	ToAkriConnectorTemplateHelmInstallConfigurationOutputWithContext(context.Context) AkriConnectorTemplateHelmInstallConfigurationOutput
}

// AkriConnectorTemplateHelmInstallConfiguration properties.
type AkriConnectorTemplateHelmInstallConfigurationArgs struct {
	// If set, the operation will be atomic. If the operation fails, all changes will be rolled back.
	Atomic pulumi.BoolPtrInput `pulumi:"atomic"`
	// Disable pre/post upgrade hooks for the operation.
	DisableHooks pulumi.BoolPtrInput `pulumi:"disableHooks"`
	// Time to wait for any individual Kubernetes operation (like `Jobs` for hooks).
	Timeout pulumi.IntPtrInput `pulumi:"timeout"`
	// If set, the operation will wait until all Pods, PVCs, Services, and minimum number of Pods of a `Deployment`, `StatefulSet`, or `ReplicaSet` are in a ready state before marking the release as successful.
	Wait pulumi.BoolPtrInput `pulumi:"wait"`
	// If set, the operation will wait for jobs to complete before marking the release as successful.
	WaitForJobs pulumi.BoolPtrInput `pulumi:"waitForJobs"`
}

func (AkriConnectorTemplateHelmInstallConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AkriConnectorTemplateHelmInstallConfiguration)(nil)).Elem()
}

func (i AkriConnectorTemplateHelmInstallConfigurationArgs) ToAkriConnectorTemplateHelmInstallConfigurationOutput() AkriConnectorTemplateHelmInstallConfigurationOutput {
	return i.ToAkriConnectorTemplateHelmInstallConfigurationOutputWithContext(context.Background())
}

func (i AkriConnectorTemplateHelmInstallConfigurationArgs) ToAkriConnectorTemplateHelmInstallConfigurationOutputWithContext(ctx context.Context) AkriConnectorTemplateHelmInstallConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AkriConnectorTemplateHelmInstallConfigurationOutput)
}

func (i AkriConnectorTemplateHelmInstallConfigurationArgs) ToAkriConnectorTemplateHelmInstallConfigurationPtrOutput() AkriConnectorTemplateHelmInstallConfigurationPtrOutput {
	return i.ToAkriConnectorTemplateHelmInstallConfigurationPtrOutputWithContext(context.Background())
}

func (i AkriConnectorTemplateHelmInstallConfigurationArgs) ToAkriConnectorTemplateHelmInstallConfigurationPtrOutputWithContext(ctx context.Context) AkriConnectorTemplateHelmInstallConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AkriConnectorTemplateHelmInstallConfigurationOutput).ToAkriConnectorTemplateHelmInstallConfigurationPtrOutputWithContext(ctx)
}

// AkriConnectorTemplateHelmInstallConfigurationPtrInput is an input type that accepts AkriConnectorTemplateHelmInstallConfigurationArgs, AkriConnectorTemplateHelmInstallConfigurationPtr and AkriConnectorTemplateHelmInstallConfigurationPtrOutput values.
// You can construct a concrete instance of `AkriConnectorTemplateHelmInstallConfigurationPtrInput` via:
//
//	        AkriConnectorTemplateHelmInstallConfigurationArgs{...}
//
//	or:
//
//	        nil
type AkriConnectorTemplateHelmInstallConfigurationPtrInput interface {
	pulumi.Input

	ToAkriConnectorTemplateHelmInstallConfigurationPtrOutput() AkriConnectorTemplateHelmInstallConfigurationPtrOutput
	ToAkriConnectorTemplateHelmInstallConfigurationPtrOutputWithContext(context.Context) AkriConnectorTemplateHelmInstallConfigurationPtrOutput
}

type akriConnectorTemplateHelmInstallConfigurationPtrType AkriConnectorTemplateHelmInstallConfigurationArgs

func AkriConnectorTemplateHelmInstallConfigurationPtr(v *AkriConnectorTemplateHelmInstallConfigurationArgs) AkriConnectorTemplateHelmInstallConfigurationPtrInput {
	return (*akriConnectorTemplateHelmInstallConfigurationPtrType)(v)
}

func (*akriConnectorTemplateHelmInstallConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AkriConnectorTemplateHelmInstallConfiguration)(nil)).Elem()
}

func (i *akriConnectorTemplateHelmInstallConfigurationPtrType) ToAkriConnectorTemplateHelmInstallConfigurationPtrOutput() AkriConnectorTemplateHelmInstallConfigurationPtrOutput {
	return i.ToAkriConnectorTemplateHelmInstallConfigurationPtrOutputWithContext(context.Background())
}

func (i *akriConnectorTemplateHelmInstallConfigurationPtrType) ToAkriConnectorTemplateHelmInstallConfigurationPtrOutputWithContext(ctx context.Context) AkriConnectorTemplateHelmInstallConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AkriConnectorTemplateHelmInstallConfigurationPtrOutput)
}

// AkriConnectorTemplateHelmInstallConfiguration properties.
type AkriConnectorTemplateHelmInstallConfigurationOutput struct{ *pulumi.OutputState }

func (AkriConnectorTemplateHelmInstallConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AkriConnectorTemplateHelmInstallConfiguration)(nil)).Elem()
}

func (o AkriConnectorTemplateHelmInstallConfigurationOutput) ToAkriConnectorTemplateHelmInstallConfigurationOutput() AkriConnectorTemplateHelmInstallConfigurationOutput {
	return o
}

func (o AkriConnectorTemplateHelmInstallConfigurationOutput) ToAkriConnectorTemplateHelmInstallConfigurationOutputWithContext(ctx context.Context) AkriConnectorTemplateHelmInstallConfigurationOutput {
	return o
}

func (o AkriConnectorTemplateHelmInstallConfigurationOutput) ToAkriConnectorTemplateHelmInstallConfigurationPtrOutput() AkriConnectorTemplateHelmInstallConfigurationPtrOutput {
	return o.ToAkriConnectorTemplateHelmInstallConfigurationPtrOutputWithContext(context.Background())
}

func (o AkriConnectorTemplateHelmInstallConfigurationOutput) ToAkriConnectorTemplateHelmInstallConfigurationPtrOutputWithContext(ctx context.Context) AkriConnectorTemplateHelmInstallConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AkriConnectorTemplateHelmInstallConfiguration) *AkriConnectorTemplateHelmInstallConfiguration {
		return &v
	}).(AkriConnectorTemplateHelmInstallConfigurationPtrOutput)
}

// If set, the operation will be atomic. If the operation fails, all changes will be rolled back.
func (o AkriConnectorTemplateHelmInstallConfigurationOutput) Atomic() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AkriConnectorTemplateHelmInstallConfiguration) *bool { return v.Atomic }).(pulumi.BoolPtrOutput)
}

// Disable pre/post upgrade hooks for the operation.
func (o AkriConnectorTemplateHelmInstallConfigurationOutput) DisableHooks() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AkriConnectorTemplateHelmInstallConfiguration) *bool { return v.DisableHooks }).(pulumi.BoolPtrOutput)
}

// Time to wait for any individual Kubernetes operation (like `Jobs` for hooks).
func (o AkriConnectorTemplateHelmInstallConfigurationOutput) Timeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AkriConnectorTemplateHelmInstallConfiguration) *int { return v.Timeout }).(pulumi.IntPtrOutput)
}

// If set, the operation will wait until all Pods, PVCs, Services, and minimum number of Pods of a `Deployment`, `StatefulSet`, or `ReplicaSet` are in a ready state before marking the release as successful.
func (o AkriConnectorTemplateHelmInstallConfigurationOutput) Wait() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AkriConnectorTemplateHelmInstallConfiguration) *bool { return v.Wait }).(pulumi.BoolPtrOutput)
}

// If set, the operation will wait for jobs to complete before marking the release as successful.
func (o AkriConnectorTemplateHelmInstallConfigurationOutput) WaitForJobs() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AkriConnectorTemplateHelmInstallConfiguration) *bool { return v.WaitForJobs }).(pulumi.BoolPtrOutput)
}

type AkriConnectorTemplateHelmInstallConfigurationPtrOutput struct{ *pulumi.OutputState }

func (AkriConnectorTemplateHelmInstallConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AkriConnectorTemplateHelmInstallConfiguration)(nil)).Elem()
}

func (o AkriConnectorTemplateHelmInstallConfigurationPtrOutput) ToAkriConnectorTemplateHelmInstallConfigurationPtrOutput() AkriConnectorTemplateHelmInstallConfigurationPtrOutput {
	return o
}

func (o AkriConnectorTemplateHelmInstallConfigurationPtrOutput) ToAkriConnectorTemplateHelmInstallConfigurationPtrOutputWithContext(ctx context.Context) AkriConnectorTemplateHelmInstallConfigurationPtrOutput {
	return o
}

func (o AkriConnectorTemplateHelmInstallConfigurationPtrOutput) Elem() AkriConnectorTemplateHelmInstallConfigurationOutput {
	return o.ApplyT(func(v *AkriConnectorTemplateHelmInstallConfiguration) AkriConnectorTemplateHelmInstallConfiguration {
		if v != nil {
			return *v
		}
		var ret AkriConnectorTemplateHelmInstallConfiguration
		return ret
	}).(AkriConnectorTemplateHelmInstallConfigurationOutput)
}

// If set, the operation will be atomic. If the operation fails, all changes will be rolled back.
func (o AkriConnectorTemplateHelmInstallConfigurationPtrOutput) Atomic() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AkriConnectorTemplateHelmInstallConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.Atomic
	}).(pulumi.BoolPtrOutput)
}

// Disable pre/post upgrade hooks for the operation.
func (o AkriConnectorTemplateHelmInstallConfigurationPtrOutput) DisableHooks() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AkriConnectorTemplateHelmInstallConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.DisableHooks
	}).(pulumi.BoolPtrOutput)
}

// Time to wait for any individual Kubernetes operation (like `Jobs` for hooks).
func (o AkriConnectorTemplateHelmInstallConfigurationPtrOutput) Timeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AkriConnectorTemplateHelmInstallConfiguration) *int {
		if v == nil {
			return nil
		}
		return v.Timeout
	}).(pulumi.IntPtrOutput)
}

// If set, the operation will wait until all Pods, PVCs, Services, and minimum number of Pods of a `Deployment`, `StatefulSet`, or `ReplicaSet` are in a ready state before marking the release as successful.
func (o AkriConnectorTemplateHelmInstallConfigurationPtrOutput) Wait() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AkriConnectorTemplateHelmInstallConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.Wait
	}).(pulumi.BoolPtrOutput)
}

// If set, the operation will wait for jobs to complete before marking the release as successful.
func (o AkriConnectorTemplateHelmInstallConfigurationPtrOutput) WaitForJobs() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AkriConnectorTemplateHelmInstallConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.WaitForJobs
	}).(pulumi.BoolPtrOutput)
}

// AkriConnectorTemplateHelmInstallConfiguration properties.
type AkriConnectorTemplateHelmInstallConfigurationResponse struct {
	// If set, the operation will be atomic. If the operation fails, all changes will be rolled back.
	Atomic *bool `pulumi:"atomic"`
	// Disable pre/post upgrade hooks for the operation.
	DisableHooks *bool `pulumi:"disableHooks"`
	// Time to wait for any individual Kubernetes operation (like `Jobs` for hooks).
	Timeout *int `pulumi:"timeout"`
	// If set, the operation will wait until all Pods, PVCs, Services, and minimum number of Pods of a `Deployment`, `StatefulSet`, or `ReplicaSet` are in a ready state before marking the release as successful.
	Wait *bool `pulumi:"wait"`
	// If set, the operation will wait for jobs to complete before marking the release as successful.
	WaitForJobs *bool `pulumi:"waitForJobs"`
}

// AkriConnectorTemplateHelmInstallConfiguration properties.
type AkriConnectorTemplateHelmInstallConfigurationResponseOutput struct{ *pulumi.OutputState }

func (AkriConnectorTemplateHelmInstallConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AkriConnectorTemplateHelmInstallConfigurationResponse)(nil)).Elem()
}

func (o AkriConnectorTemplateHelmInstallConfigurationResponseOutput) ToAkriConnectorTemplateHelmInstallConfigurationResponseOutput() AkriConnectorTemplateHelmInstallConfigurationResponseOutput {
	return o
}

func (o AkriConnectorTemplateHelmInstallConfigurationResponseOutput) ToAkriConnectorTemplateHelmInstallConfigurationResponseOutputWithContext(ctx context.Context) AkriConnectorTemplateHelmInstallConfigurationResponseOutput {
	return o
}

// If set, the operation will be atomic. If the operation fails, all changes will be rolled back.
func (o AkriConnectorTemplateHelmInstallConfigurationResponseOutput) Atomic() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AkriConnectorTemplateHelmInstallConfigurationResponse) *bool { return v.Atomic }).(pulumi.BoolPtrOutput)
}

// Disable pre/post upgrade hooks for the operation.
func (o AkriConnectorTemplateHelmInstallConfigurationResponseOutput) DisableHooks() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AkriConnectorTemplateHelmInstallConfigurationResponse) *bool { return v.DisableHooks }).(pulumi.BoolPtrOutput)
}

// Time to wait for any individual Kubernetes operation (like `Jobs` for hooks).
func (o AkriConnectorTemplateHelmInstallConfigurationResponseOutput) Timeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AkriConnectorTemplateHelmInstallConfigurationResponse) *int { return v.Timeout }).(pulumi.IntPtrOutput)
}

// If set, the operation will wait until all Pods, PVCs, Services, and minimum number of Pods of a `Deployment`, `StatefulSet`, or `ReplicaSet` are in a ready state before marking the release as successful.
func (o AkriConnectorTemplateHelmInstallConfigurationResponseOutput) Wait() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AkriConnectorTemplateHelmInstallConfigurationResponse) *bool { return v.Wait }).(pulumi.BoolPtrOutput)
}

// If set, the operation will wait for jobs to complete before marking the release as successful.
func (o AkriConnectorTemplateHelmInstallConfigurationResponseOutput) WaitForJobs() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AkriConnectorTemplateHelmInstallConfigurationResponse) *bool { return v.WaitForJobs }).(pulumi.BoolPtrOutput)
}

type AkriConnectorTemplateHelmInstallConfigurationResponsePtrOutput struct{ *pulumi.OutputState }

func (AkriConnectorTemplateHelmInstallConfigurationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AkriConnectorTemplateHelmInstallConfigurationResponse)(nil)).Elem()
}

func (o AkriConnectorTemplateHelmInstallConfigurationResponsePtrOutput) ToAkriConnectorTemplateHelmInstallConfigurationResponsePtrOutput() AkriConnectorTemplateHelmInstallConfigurationResponsePtrOutput {
	return o
}

func (o AkriConnectorTemplateHelmInstallConfigurationResponsePtrOutput) ToAkriConnectorTemplateHelmInstallConfigurationResponsePtrOutputWithContext(ctx context.Context) AkriConnectorTemplateHelmInstallConfigurationResponsePtrOutput {
	return o
}

func (o AkriConnectorTemplateHelmInstallConfigurationResponsePtrOutput) Elem() AkriConnectorTemplateHelmInstallConfigurationResponseOutput {
	return o.ApplyT(func(v *AkriConnectorTemplateHelmInstallConfigurationResponse) AkriConnectorTemplateHelmInstallConfigurationResponse {
		if v != nil {
			return *v
		}
		var ret AkriConnectorTemplateHelmInstallConfigurationResponse
		return ret
	}).(AkriConnectorTemplateHelmInstallConfigurationResponseOutput)
}

// If set, the operation will be atomic. If the operation fails, all changes will be rolled back.
func (o AkriConnectorTemplateHelmInstallConfigurationResponsePtrOutput) Atomic() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AkriConnectorTemplateHelmInstallConfigurationResponse) *bool {
		if v == nil {
			return nil
		}
		return v.Atomic
	}).(pulumi.BoolPtrOutput)
}

// Disable pre/post upgrade hooks for the operation.
func (o AkriConnectorTemplateHelmInstallConfigurationResponsePtrOutput) DisableHooks() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AkriConnectorTemplateHelmInstallConfigurationResponse) *bool {
		if v == nil {
			return nil
		}
		return v.DisableHooks
	}).(pulumi.BoolPtrOutput)
}

// Time to wait for any individual Kubernetes operation (like `Jobs` for hooks).
func (o AkriConnectorTemplateHelmInstallConfigurationResponsePtrOutput) Timeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AkriConnectorTemplateHelmInstallConfigurationResponse) *int {
		if v == nil {
			return nil
		}
		return v.Timeout
	}).(pulumi.IntPtrOutput)
}

// If set, the operation will wait until all Pods, PVCs, Services, and minimum number of Pods of a `Deployment`, `StatefulSet`, or `ReplicaSet` are in a ready state before marking the release as successful.
func (o AkriConnectorTemplateHelmInstallConfigurationResponsePtrOutput) Wait() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AkriConnectorTemplateHelmInstallConfigurationResponse) *bool {
		if v == nil {
			return nil
		}
		return v.Wait
	}).(pulumi.BoolPtrOutput)
}

// If set, the operation will wait for jobs to complete before marking the release as successful.
func (o AkriConnectorTemplateHelmInstallConfigurationResponsePtrOutput) WaitForJobs() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AkriConnectorTemplateHelmInstallConfigurationResponse) *bool {
		if v == nil {
			return nil
		}
		return v.WaitForJobs
	}).(pulumi.BoolPtrOutput)
}

// AkriConnectorTemplateHelmRegistryEndpointRef properties.
type AkriConnectorTemplateHelmRegistryEndpointRef struct {
	// The name of the registry endpoint.
	RegistryEndpointRef string `pulumi:"registryEndpointRef"`
	// AkriConnectorTemplateHelmRegistrySettingsType values.
	// Expected value is 'RegistryEndpointRef'.
	RegistrySettingsType string `pulumi:"registrySettingsType"`
}

// AkriConnectorTemplateHelmRegistryEndpointRefInput is an input type that accepts AkriConnectorTemplateHelmRegistryEndpointRefArgs and AkriConnectorTemplateHelmRegistryEndpointRefOutput values.
// You can construct a concrete instance of `AkriConnectorTemplateHelmRegistryEndpointRefInput` via:
//
//	AkriConnectorTemplateHelmRegistryEndpointRefArgs{...}
type AkriConnectorTemplateHelmRegistryEndpointRefInput interface {
	pulumi.Input

	ToAkriConnectorTemplateHelmRegistryEndpointRefOutput() AkriConnectorTemplateHelmRegistryEndpointRefOutput
	ToAkriConnectorTemplateHelmRegistryEndpointRefOutputWithContext(context.Context) AkriConnectorTemplateHelmRegistryEndpointRefOutput
}

// AkriConnectorTemplateHelmRegistryEndpointRef properties.
type AkriConnectorTemplateHelmRegistryEndpointRefArgs struct {
	// The name of the registry endpoint.
	RegistryEndpointRef pulumi.StringInput `pulumi:"registryEndpointRef"`
	// AkriConnectorTemplateHelmRegistrySettingsType values.
	// Expected value is 'RegistryEndpointRef'.
	RegistrySettingsType pulumi.StringInput `pulumi:"registrySettingsType"`
}

func (AkriConnectorTemplateHelmRegistryEndpointRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AkriConnectorTemplateHelmRegistryEndpointRef)(nil)).Elem()
}

func (i AkriConnectorTemplateHelmRegistryEndpointRefArgs) ToAkriConnectorTemplateHelmRegistryEndpointRefOutput() AkriConnectorTemplateHelmRegistryEndpointRefOutput {
	return i.ToAkriConnectorTemplateHelmRegistryEndpointRefOutputWithContext(context.Background())
}

func (i AkriConnectorTemplateHelmRegistryEndpointRefArgs) ToAkriConnectorTemplateHelmRegistryEndpointRefOutputWithContext(ctx context.Context) AkriConnectorTemplateHelmRegistryEndpointRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AkriConnectorTemplateHelmRegistryEndpointRefOutput)
}

func (i AkriConnectorTemplateHelmRegistryEndpointRefArgs) ToAkriConnectorTemplateHelmRegistryEndpointRefPtrOutput() AkriConnectorTemplateHelmRegistryEndpointRefPtrOutput {
	return i.ToAkriConnectorTemplateHelmRegistryEndpointRefPtrOutputWithContext(context.Background())
}

func (i AkriConnectorTemplateHelmRegistryEndpointRefArgs) ToAkriConnectorTemplateHelmRegistryEndpointRefPtrOutputWithContext(ctx context.Context) AkriConnectorTemplateHelmRegistryEndpointRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AkriConnectorTemplateHelmRegistryEndpointRefOutput).ToAkriConnectorTemplateHelmRegistryEndpointRefPtrOutputWithContext(ctx)
}

// AkriConnectorTemplateHelmRegistryEndpointRefPtrInput is an input type that accepts AkriConnectorTemplateHelmRegistryEndpointRefArgs, AkriConnectorTemplateHelmRegistryEndpointRefPtr and AkriConnectorTemplateHelmRegistryEndpointRefPtrOutput values.
// You can construct a concrete instance of `AkriConnectorTemplateHelmRegistryEndpointRefPtrInput` via:
//
//	        AkriConnectorTemplateHelmRegistryEndpointRefArgs{...}
//
//	or:
//
//	        nil
type AkriConnectorTemplateHelmRegistryEndpointRefPtrInput interface {
	pulumi.Input

	ToAkriConnectorTemplateHelmRegistryEndpointRefPtrOutput() AkriConnectorTemplateHelmRegistryEndpointRefPtrOutput
	ToAkriConnectorTemplateHelmRegistryEndpointRefPtrOutputWithContext(context.Context) AkriConnectorTemplateHelmRegistryEndpointRefPtrOutput
}

type akriConnectorTemplateHelmRegistryEndpointRefPtrType AkriConnectorTemplateHelmRegistryEndpointRefArgs

func AkriConnectorTemplateHelmRegistryEndpointRefPtr(v *AkriConnectorTemplateHelmRegistryEndpointRefArgs) AkriConnectorTemplateHelmRegistryEndpointRefPtrInput {
	return (*akriConnectorTemplateHelmRegistryEndpointRefPtrType)(v)
}

func (*akriConnectorTemplateHelmRegistryEndpointRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AkriConnectorTemplateHelmRegistryEndpointRef)(nil)).Elem()
}

func (i *akriConnectorTemplateHelmRegistryEndpointRefPtrType) ToAkriConnectorTemplateHelmRegistryEndpointRefPtrOutput() AkriConnectorTemplateHelmRegistryEndpointRefPtrOutput {
	return i.ToAkriConnectorTemplateHelmRegistryEndpointRefPtrOutputWithContext(context.Background())
}

func (i *akriConnectorTemplateHelmRegistryEndpointRefPtrType) ToAkriConnectorTemplateHelmRegistryEndpointRefPtrOutputWithContext(ctx context.Context) AkriConnectorTemplateHelmRegistryEndpointRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AkriConnectorTemplateHelmRegistryEndpointRefPtrOutput)
}

// AkriConnectorTemplateHelmRegistryEndpointRef properties.
type AkriConnectorTemplateHelmRegistryEndpointRefOutput struct{ *pulumi.OutputState }

func (AkriConnectorTemplateHelmRegistryEndpointRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AkriConnectorTemplateHelmRegistryEndpointRef)(nil)).Elem()
}

func (o AkriConnectorTemplateHelmRegistryEndpointRefOutput) ToAkriConnectorTemplateHelmRegistryEndpointRefOutput() AkriConnectorTemplateHelmRegistryEndpointRefOutput {
	return o
}

func (o AkriConnectorTemplateHelmRegistryEndpointRefOutput) ToAkriConnectorTemplateHelmRegistryEndpointRefOutputWithContext(ctx context.Context) AkriConnectorTemplateHelmRegistryEndpointRefOutput {
	return o
}

func (o AkriConnectorTemplateHelmRegistryEndpointRefOutput) ToAkriConnectorTemplateHelmRegistryEndpointRefPtrOutput() AkriConnectorTemplateHelmRegistryEndpointRefPtrOutput {
	return o.ToAkriConnectorTemplateHelmRegistryEndpointRefPtrOutputWithContext(context.Background())
}

func (o AkriConnectorTemplateHelmRegistryEndpointRefOutput) ToAkriConnectorTemplateHelmRegistryEndpointRefPtrOutputWithContext(ctx context.Context) AkriConnectorTemplateHelmRegistryEndpointRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AkriConnectorTemplateHelmRegistryEndpointRef) *AkriConnectorTemplateHelmRegistryEndpointRef {
		return &v
	}).(AkriConnectorTemplateHelmRegistryEndpointRefPtrOutput)
}

// The name of the registry endpoint.
func (o AkriConnectorTemplateHelmRegistryEndpointRefOutput) RegistryEndpointRef() pulumi.StringOutput {
	return o.ApplyT(func(v AkriConnectorTemplateHelmRegistryEndpointRef) string { return v.RegistryEndpointRef }).(pulumi.StringOutput)
}

// AkriConnectorTemplateHelmRegistrySettingsType values.
// Expected value is 'RegistryEndpointRef'.
func (o AkriConnectorTemplateHelmRegistryEndpointRefOutput) RegistrySettingsType() pulumi.StringOutput {
	return o.ApplyT(func(v AkriConnectorTemplateHelmRegistryEndpointRef) string { return v.RegistrySettingsType }).(pulumi.StringOutput)
}

type AkriConnectorTemplateHelmRegistryEndpointRefPtrOutput struct{ *pulumi.OutputState }

func (AkriConnectorTemplateHelmRegistryEndpointRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AkriConnectorTemplateHelmRegistryEndpointRef)(nil)).Elem()
}

func (o AkriConnectorTemplateHelmRegistryEndpointRefPtrOutput) ToAkriConnectorTemplateHelmRegistryEndpointRefPtrOutput() AkriConnectorTemplateHelmRegistryEndpointRefPtrOutput {
	return o
}

func (o AkriConnectorTemplateHelmRegistryEndpointRefPtrOutput) ToAkriConnectorTemplateHelmRegistryEndpointRefPtrOutputWithContext(ctx context.Context) AkriConnectorTemplateHelmRegistryEndpointRefPtrOutput {
	return o
}

func (o AkriConnectorTemplateHelmRegistryEndpointRefPtrOutput) Elem() AkriConnectorTemplateHelmRegistryEndpointRefOutput {
	return o.ApplyT(func(v *AkriConnectorTemplateHelmRegistryEndpointRef) AkriConnectorTemplateHelmRegistryEndpointRef {
		if v != nil {
			return *v
		}
		var ret AkriConnectorTemplateHelmRegistryEndpointRef
		return ret
	}).(AkriConnectorTemplateHelmRegistryEndpointRefOutput)
}

// The name of the registry endpoint.
func (o AkriConnectorTemplateHelmRegistryEndpointRefPtrOutput) RegistryEndpointRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AkriConnectorTemplateHelmRegistryEndpointRef) *string {
		if v == nil {
			return nil
		}
		return &v.RegistryEndpointRef
	}).(pulumi.StringPtrOutput)
}

// AkriConnectorTemplateHelmRegistrySettingsType values.
// Expected value is 'RegistryEndpointRef'.
func (o AkriConnectorTemplateHelmRegistryEndpointRefPtrOutput) RegistrySettingsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AkriConnectorTemplateHelmRegistryEndpointRef) *string {
		if v == nil {
			return nil
		}
		return &v.RegistrySettingsType
	}).(pulumi.StringPtrOutput)
}

// AkriConnectorTemplateHelmRegistryEndpointRef properties.
type AkriConnectorTemplateHelmRegistryEndpointRefResponse struct {
	// The name of the registry endpoint.
	RegistryEndpointRef string `pulumi:"registryEndpointRef"`
	// AkriConnectorTemplateHelmRegistrySettingsType values.
	// Expected value is 'RegistryEndpointRef'.
	RegistrySettingsType string `pulumi:"registrySettingsType"`
}

// AkriConnectorTemplateHelmRegistryEndpointRef properties.
type AkriConnectorTemplateHelmRegistryEndpointRefResponseOutput struct{ *pulumi.OutputState }

func (AkriConnectorTemplateHelmRegistryEndpointRefResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AkriConnectorTemplateHelmRegistryEndpointRefResponse)(nil)).Elem()
}

func (o AkriConnectorTemplateHelmRegistryEndpointRefResponseOutput) ToAkriConnectorTemplateHelmRegistryEndpointRefResponseOutput() AkriConnectorTemplateHelmRegistryEndpointRefResponseOutput {
	return o
}

func (o AkriConnectorTemplateHelmRegistryEndpointRefResponseOutput) ToAkriConnectorTemplateHelmRegistryEndpointRefResponseOutputWithContext(ctx context.Context) AkriConnectorTemplateHelmRegistryEndpointRefResponseOutput {
	return o
}

// The name of the registry endpoint.
func (o AkriConnectorTemplateHelmRegistryEndpointRefResponseOutput) RegistryEndpointRef() pulumi.StringOutput {
	return o.ApplyT(func(v AkriConnectorTemplateHelmRegistryEndpointRefResponse) string { return v.RegistryEndpointRef }).(pulumi.StringOutput)
}

// AkriConnectorTemplateHelmRegistrySettingsType values.
// Expected value is 'RegistryEndpointRef'.
func (o AkriConnectorTemplateHelmRegistryEndpointRefResponseOutput) RegistrySettingsType() pulumi.StringOutput {
	return o.ApplyT(func(v AkriConnectorTemplateHelmRegistryEndpointRefResponse) string { return v.RegistrySettingsType }).(pulumi.StringOutput)
}

type AkriConnectorTemplateHelmRegistryEndpointRefResponsePtrOutput struct{ *pulumi.OutputState }

func (AkriConnectorTemplateHelmRegistryEndpointRefResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AkriConnectorTemplateHelmRegistryEndpointRefResponse)(nil)).Elem()
}

func (o AkriConnectorTemplateHelmRegistryEndpointRefResponsePtrOutput) ToAkriConnectorTemplateHelmRegistryEndpointRefResponsePtrOutput() AkriConnectorTemplateHelmRegistryEndpointRefResponsePtrOutput {
	return o
}

func (o AkriConnectorTemplateHelmRegistryEndpointRefResponsePtrOutput) ToAkriConnectorTemplateHelmRegistryEndpointRefResponsePtrOutputWithContext(ctx context.Context) AkriConnectorTemplateHelmRegistryEndpointRefResponsePtrOutput {
	return o
}

func (o AkriConnectorTemplateHelmRegistryEndpointRefResponsePtrOutput) Elem() AkriConnectorTemplateHelmRegistryEndpointRefResponseOutput {
	return o.ApplyT(func(v *AkriConnectorTemplateHelmRegistryEndpointRefResponse) AkriConnectorTemplateHelmRegistryEndpointRefResponse {
		if v != nil {
			return *v
		}
		var ret AkriConnectorTemplateHelmRegistryEndpointRefResponse
		return ret
	}).(AkriConnectorTemplateHelmRegistryEndpointRefResponseOutput)
}

// The name of the registry endpoint.
func (o AkriConnectorTemplateHelmRegistryEndpointRefResponsePtrOutput) RegistryEndpointRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AkriConnectorTemplateHelmRegistryEndpointRefResponse) *string {
		if v == nil {
			return nil
		}
		return &v.RegistryEndpointRef
	}).(pulumi.StringPtrOutput)
}

// AkriConnectorTemplateHelmRegistrySettingsType values.
// Expected value is 'RegistryEndpointRef'.
func (o AkriConnectorTemplateHelmRegistryEndpointRefResponsePtrOutput) RegistrySettingsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AkriConnectorTemplateHelmRegistryEndpointRefResponse) *string {
		if v == nil {
			return nil
		}
		return &v.RegistrySettingsType
	}).(pulumi.StringPtrOutput)
}

// AkriConnectorTemplateHelmUpgradeConfiguration properties.
type AkriConnectorTemplateHelmUpgradeConfiguration struct {
	// If set, the operation will be atomic. If the operation fails, all changes will be rolled back.
	Atomic *bool `pulumi:"atomic"`
	// Disable pre/post upgrade hooks for the operation.
	DisableHooks *bool `pulumi:"disableHooks"`
	// Time to wait for any individual Kubernetes operation (like `Jobs` for hooks).
	Timeout *int `pulumi:"timeout"`
	// If set, the operation will wait until all Pods, PVCs, Services, and minimum number of Pods of a `Deployment`, `StatefulSet`, or `ReplicaSet` are in a ready state before marking the release as successful.
	Wait *bool `pulumi:"wait"`
	// If set, the operation will wait for jobs to complete before marking the release as successful.
	WaitForJobs *bool `pulumi:"waitForJobs"`
}

// AkriConnectorTemplateHelmUpgradeConfigurationInput is an input type that accepts AkriConnectorTemplateHelmUpgradeConfigurationArgs and AkriConnectorTemplateHelmUpgradeConfigurationOutput values.
// You can construct a concrete instance of `AkriConnectorTemplateHelmUpgradeConfigurationInput` via:
//
//	AkriConnectorTemplateHelmUpgradeConfigurationArgs{...}
type AkriConnectorTemplateHelmUpgradeConfigurationInput interface {
	pulumi.Input

	ToAkriConnectorTemplateHelmUpgradeConfigurationOutput() AkriConnectorTemplateHelmUpgradeConfigurationOutput
	ToAkriConnectorTemplateHelmUpgradeConfigurationOutputWithContext(context.Context) AkriConnectorTemplateHelmUpgradeConfigurationOutput
}

// AkriConnectorTemplateHelmUpgradeConfiguration properties.
type AkriConnectorTemplateHelmUpgradeConfigurationArgs struct {
	// If set, the operation will be atomic. If the operation fails, all changes will be rolled back.
	Atomic pulumi.BoolPtrInput `pulumi:"atomic"`
	// Disable pre/post upgrade hooks for the operation.
	DisableHooks pulumi.BoolPtrInput `pulumi:"disableHooks"`
	// Time to wait for any individual Kubernetes operation (like `Jobs` for hooks).
	Timeout pulumi.IntPtrInput `pulumi:"timeout"`
	// If set, the operation will wait until all Pods, PVCs, Services, and minimum number of Pods of a `Deployment`, `StatefulSet`, or `ReplicaSet` are in a ready state before marking the release as successful.
	Wait pulumi.BoolPtrInput `pulumi:"wait"`
	// If set, the operation will wait for jobs to complete before marking the release as successful.
	WaitForJobs pulumi.BoolPtrInput `pulumi:"waitForJobs"`
}

func (AkriConnectorTemplateHelmUpgradeConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AkriConnectorTemplateHelmUpgradeConfiguration)(nil)).Elem()
}

func (i AkriConnectorTemplateHelmUpgradeConfigurationArgs) ToAkriConnectorTemplateHelmUpgradeConfigurationOutput() AkriConnectorTemplateHelmUpgradeConfigurationOutput {
	return i.ToAkriConnectorTemplateHelmUpgradeConfigurationOutputWithContext(context.Background())
}

func (i AkriConnectorTemplateHelmUpgradeConfigurationArgs) ToAkriConnectorTemplateHelmUpgradeConfigurationOutputWithContext(ctx context.Context) AkriConnectorTemplateHelmUpgradeConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AkriConnectorTemplateHelmUpgradeConfigurationOutput)
}

func (i AkriConnectorTemplateHelmUpgradeConfigurationArgs) ToAkriConnectorTemplateHelmUpgradeConfigurationPtrOutput() AkriConnectorTemplateHelmUpgradeConfigurationPtrOutput {
	return i.ToAkriConnectorTemplateHelmUpgradeConfigurationPtrOutputWithContext(context.Background())
}

func (i AkriConnectorTemplateHelmUpgradeConfigurationArgs) ToAkriConnectorTemplateHelmUpgradeConfigurationPtrOutputWithContext(ctx context.Context) AkriConnectorTemplateHelmUpgradeConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AkriConnectorTemplateHelmUpgradeConfigurationOutput).ToAkriConnectorTemplateHelmUpgradeConfigurationPtrOutputWithContext(ctx)
}

// AkriConnectorTemplateHelmUpgradeConfigurationPtrInput is an input type that accepts AkriConnectorTemplateHelmUpgradeConfigurationArgs, AkriConnectorTemplateHelmUpgradeConfigurationPtr and AkriConnectorTemplateHelmUpgradeConfigurationPtrOutput values.
// You can construct a concrete instance of `AkriConnectorTemplateHelmUpgradeConfigurationPtrInput` via:
//
//	        AkriConnectorTemplateHelmUpgradeConfigurationArgs{...}
//
//	or:
//
//	        nil
type AkriConnectorTemplateHelmUpgradeConfigurationPtrInput interface {
	pulumi.Input

	ToAkriConnectorTemplateHelmUpgradeConfigurationPtrOutput() AkriConnectorTemplateHelmUpgradeConfigurationPtrOutput
	ToAkriConnectorTemplateHelmUpgradeConfigurationPtrOutputWithContext(context.Context) AkriConnectorTemplateHelmUpgradeConfigurationPtrOutput
}

type akriConnectorTemplateHelmUpgradeConfigurationPtrType AkriConnectorTemplateHelmUpgradeConfigurationArgs

func AkriConnectorTemplateHelmUpgradeConfigurationPtr(v *AkriConnectorTemplateHelmUpgradeConfigurationArgs) AkriConnectorTemplateHelmUpgradeConfigurationPtrInput {
	return (*akriConnectorTemplateHelmUpgradeConfigurationPtrType)(v)
}

func (*akriConnectorTemplateHelmUpgradeConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AkriConnectorTemplateHelmUpgradeConfiguration)(nil)).Elem()
}

func (i *akriConnectorTemplateHelmUpgradeConfigurationPtrType) ToAkriConnectorTemplateHelmUpgradeConfigurationPtrOutput() AkriConnectorTemplateHelmUpgradeConfigurationPtrOutput {
	return i.ToAkriConnectorTemplateHelmUpgradeConfigurationPtrOutputWithContext(context.Background())
}

func (i *akriConnectorTemplateHelmUpgradeConfigurationPtrType) ToAkriConnectorTemplateHelmUpgradeConfigurationPtrOutputWithContext(ctx context.Context) AkriConnectorTemplateHelmUpgradeConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AkriConnectorTemplateHelmUpgradeConfigurationPtrOutput)
}

// AkriConnectorTemplateHelmUpgradeConfiguration properties.
type AkriConnectorTemplateHelmUpgradeConfigurationOutput struct{ *pulumi.OutputState }

func (AkriConnectorTemplateHelmUpgradeConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AkriConnectorTemplateHelmUpgradeConfiguration)(nil)).Elem()
}

func (o AkriConnectorTemplateHelmUpgradeConfigurationOutput) ToAkriConnectorTemplateHelmUpgradeConfigurationOutput() AkriConnectorTemplateHelmUpgradeConfigurationOutput {
	return o
}

func (o AkriConnectorTemplateHelmUpgradeConfigurationOutput) ToAkriConnectorTemplateHelmUpgradeConfigurationOutputWithContext(ctx context.Context) AkriConnectorTemplateHelmUpgradeConfigurationOutput {
	return o
}

func (o AkriConnectorTemplateHelmUpgradeConfigurationOutput) ToAkriConnectorTemplateHelmUpgradeConfigurationPtrOutput() AkriConnectorTemplateHelmUpgradeConfigurationPtrOutput {
	return o.ToAkriConnectorTemplateHelmUpgradeConfigurationPtrOutputWithContext(context.Background())
}

func (o AkriConnectorTemplateHelmUpgradeConfigurationOutput) ToAkriConnectorTemplateHelmUpgradeConfigurationPtrOutputWithContext(ctx context.Context) AkriConnectorTemplateHelmUpgradeConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AkriConnectorTemplateHelmUpgradeConfiguration) *AkriConnectorTemplateHelmUpgradeConfiguration {
		return &v
	}).(AkriConnectorTemplateHelmUpgradeConfigurationPtrOutput)
}

// If set, the operation will be atomic. If the operation fails, all changes will be rolled back.
func (o AkriConnectorTemplateHelmUpgradeConfigurationOutput) Atomic() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AkriConnectorTemplateHelmUpgradeConfiguration) *bool { return v.Atomic }).(pulumi.BoolPtrOutput)
}

// Disable pre/post upgrade hooks for the operation.
func (o AkriConnectorTemplateHelmUpgradeConfigurationOutput) DisableHooks() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AkriConnectorTemplateHelmUpgradeConfiguration) *bool { return v.DisableHooks }).(pulumi.BoolPtrOutput)
}

// Time to wait for any individual Kubernetes operation (like `Jobs` for hooks).
func (o AkriConnectorTemplateHelmUpgradeConfigurationOutput) Timeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AkriConnectorTemplateHelmUpgradeConfiguration) *int { return v.Timeout }).(pulumi.IntPtrOutput)
}

// If set, the operation will wait until all Pods, PVCs, Services, and minimum number of Pods of a `Deployment`, `StatefulSet`, or `ReplicaSet` are in a ready state before marking the release as successful.
func (o AkriConnectorTemplateHelmUpgradeConfigurationOutput) Wait() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AkriConnectorTemplateHelmUpgradeConfiguration) *bool { return v.Wait }).(pulumi.BoolPtrOutput)
}

// If set, the operation will wait for jobs to complete before marking the release as successful.
func (o AkriConnectorTemplateHelmUpgradeConfigurationOutput) WaitForJobs() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AkriConnectorTemplateHelmUpgradeConfiguration) *bool { return v.WaitForJobs }).(pulumi.BoolPtrOutput)
}

type AkriConnectorTemplateHelmUpgradeConfigurationPtrOutput struct{ *pulumi.OutputState }

func (AkriConnectorTemplateHelmUpgradeConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AkriConnectorTemplateHelmUpgradeConfiguration)(nil)).Elem()
}

func (o AkriConnectorTemplateHelmUpgradeConfigurationPtrOutput) ToAkriConnectorTemplateHelmUpgradeConfigurationPtrOutput() AkriConnectorTemplateHelmUpgradeConfigurationPtrOutput {
	return o
}

func (o AkriConnectorTemplateHelmUpgradeConfigurationPtrOutput) ToAkriConnectorTemplateHelmUpgradeConfigurationPtrOutputWithContext(ctx context.Context) AkriConnectorTemplateHelmUpgradeConfigurationPtrOutput {
	return o
}

func (o AkriConnectorTemplateHelmUpgradeConfigurationPtrOutput) Elem() AkriConnectorTemplateHelmUpgradeConfigurationOutput {
	return o.ApplyT(func(v *AkriConnectorTemplateHelmUpgradeConfiguration) AkriConnectorTemplateHelmUpgradeConfiguration {
		if v != nil {
			return *v
		}
		var ret AkriConnectorTemplateHelmUpgradeConfiguration
		return ret
	}).(AkriConnectorTemplateHelmUpgradeConfigurationOutput)
}

// If set, the operation will be atomic. If the operation fails, all changes will be rolled back.
func (o AkriConnectorTemplateHelmUpgradeConfigurationPtrOutput) Atomic() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AkriConnectorTemplateHelmUpgradeConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.Atomic
	}).(pulumi.BoolPtrOutput)
}

// Disable pre/post upgrade hooks for the operation.
func (o AkriConnectorTemplateHelmUpgradeConfigurationPtrOutput) DisableHooks() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AkriConnectorTemplateHelmUpgradeConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.DisableHooks
	}).(pulumi.BoolPtrOutput)
}

// Time to wait for any individual Kubernetes operation (like `Jobs` for hooks).
func (o AkriConnectorTemplateHelmUpgradeConfigurationPtrOutput) Timeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AkriConnectorTemplateHelmUpgradeConfiguration) *int {
		if v == nil {
			return nil
		}
		return v.Timeout
	}).(pulumi.IntPtrOutput)
}

// If set, the operation will wait until all Pods, PVCs, Services, and minimum number of Pods of a `Deployment`, `StatefulSet`, or `ReplicaSet` are in a ready state before marking the release as successful.
func (o AkriConnectorTemplateHelmUpgradeConfigurationPtrOutput) Wait() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AkriConnectorTemplateHelmUpgradeConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.Wait
	}).(pulumi.BoolPtrOutput)
}

// If set, the operation will wait for jobs to complete before marking the release as successful.
func (o AkriConnectorTemplateHelmUpgradeConfigurationPtrOutput) WaitForJobs() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AkriConnectorTemplateHelmUpgradeConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.WaitForJobs
	}).(pulumi.BoolPtrOutput)
}

// AkriConnectorTemplateHelmUpgradeConfiguration properties.
type AkriConnectorTemplateHelmUpgradeConfigurationResponse struct {
	// If set, the operation will be atomic. If the operation fails, all changes will be rolled back.
	Atomic *bool `pulumi:"atomic"`
	// Disable pre/post upgrade hooks for the operation.
	DisableHooks *bool `pulumi:"disableHooks"`
	// Time to wait for any individual Kubernetes operation (like `Jobs` for hooks).
	Timeout *int `pulumi:"timeout"`
	// If set, the operation will wait until all Pods, PVCs, Services, and minimum number of Pods of a `Deployment`, `StatefulSet`, or `ReplicaSet` are in a ready state before marking the release as successful.
	Wait *bool `pulumi:"wait"`
	// If set, the operation will wait for jobs to complete before marking the release as successful.
	WaitForJobs *bool `pulumi:"waitForJobs"`
}

// AkriConnectorTemplateHelmUpgradeConfiguration properties.
type AkriConnectorTemplateHelmUpgradeConfigurationResponseOutput struct{ *pulumi.OutputState }

func (AkriConnectorTemplateHelmUpgradeConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AkriConnectorTemplateHelmUpgradeConfigurationResponse)(nil)).Elem()
}

func (o AkriConnectorTemplateHelmUpgradeConfigurationResponseOutput) ToAkriConnectorTemplateHelmUpgradeConfigurationResponseOutput() AkriConnectorTemplateHelmUpgradeConfigurationResponseOutput {
	return o
}

func (o AkriConnectorTemplateHelmUpgradeConfigurationResponseOutput) ToAkriConnectorTemplateHelmUpgradeConfigurationResponseOutputWithContext(ctx context.Context) AkriConnectorTemplateHelmUpgradeConfigurationResponseOutput {
	return o
}

// If set, the operation will be atomic. If the operation fails, all changes will be rolled back.
func (o AkriConnectorTemplateHelmUpgradeConfigurationResponseOutput) Atomic() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AkriConnectorTemplateHelmUpgradeConfigurationResponse) *bool { return v.Atomic }).(pulumi.BoolPtrOutput)
}

// Disable pre/post upgrade hooks for the operation.
func (o AkriConnectorTemplateHelmUpgradeConfigurationResponseOutput) DisableHooks() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AkriConnectorTemplateHelmUpgradeConfigurationResponse) *bool { return v.DisableHooks }).(pulumi.BoolPtrOutput)
}

// Time to wait for any individual Kubernetes operation (like `Jobs` for hooks).
func (o AkriConnectorTemplateHelmUpgradeConfigurationResponseOutput) Timeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AkriConnectorTemplateHelmUpgradeConfigurationResponse) *int { return v.Timeout }).(pulumi.IntPtrOutput)
}

// If set, the operation will wait until all Pods, PVCs, Services, and minimum number of Pods of a `Deployment`, `StatefulSet`, or `ReplicaSet` are in a ready state before marking the release as successful.
func (o AkriConnectorTemplateHelmUpgradeConfigurationResponseOutput) Wait() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AkriConnectorTemplateHelmUpgradeConfigurationResponse) *bool { return v.Wait }).(pulumi.BoolPtrOutput)
}

// If set, the operation will wait for jobs to complete before marking the release as successful.
func (o AkriConnectorTemplateHelmUpgradeConfigurationResponseOutput) WaitForJobs() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AkriConnectorTemplateHelmUpgradeConfigurationResponse) *bool { return v.WaitForJobs }).(pulumi.BoolPtrOutput)
}

type AkriConnectorTemplateHelmUpgradeConfigurationResponsePtrOutput struct{ *pulumi.OutputState }

func (AkriConnectorTemplateHelmUpgradeConfigurationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AkriConnectorTemplateHelmUpgradeConfigurationResponse)(nil)).Elem()
}

func (o AkriConnectorTemplateHelmUpgradeConfigurationResponsePtrOutput) ToAkriConnectorTemplateHelmUpgradeConfigurationResponsePtrOutput() AkriConnectorTemplateHelmUpgradeConfigurationResponsePtrOutput {
	return o
}

func (o AkriConnectorTemplateHelmUpgradeConfigurationResponsePtrOutput) ToAkriConnectorTemplateHelmUpgradeConfigurationResponsePtrOutputWithContext(ctx context.Context) AkriConnectorTemplateHelmUpgradeConfigurationResponsePtrOutput {
	return o
}

func (o AkriConnectorTemplateHelmUpgradeConfigurationResponsePtrOutput) Elem() AkriConnectorTemplateHelmUpgradeConfigurationResponseOutput {
	return o.ApplyT(func(v *AkriConnectorTemplateHelmUpgradeConfigurationResponse) AkriConnectorTemplateHelmUpgradeConfigurationResponse {
		if v != nil {
			return *v
		}
		var ret AkriConnectorTemplateHelmUpgradeConfigurationResponse
		return ret
	}).(AkriConnectorTemplateHelmUpgradeConfigurationResponseOutput)
}

// If set, the operation will be atomic. If the operation fails, all changes will be rolled back.
func (o AkriConnectorTemplateHelmUpgradeConfigurationResponsePtrOutput) Atomic() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AkriConnectorTemplateHelmUpgradeConfigurationResponse) *bool {
		if v == nil {
			return nil
		}
		return v.Atomic
	}).(pulumi.BoolPtrOutput)
}

// Disable pre/post upgrade hooks for the operation.
func (o AkriConnectorTemplateHelmUpgradeConfigurationResponsePtrOutput) DisableHooks() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AkriConnectorTemplateHelmUpgradeConfigurationResponse) *bool {
		if v == nil {
			return nil
		}
		return v.DisableHooks
	}).(pulumi.BoolPtrOutput)
}

// Time to wait for any individual Kubernetes operation (like `Jobs` for hooks).
func (o AkriConnectorTemplateHelmUpgradeConfigurationResponsePtrOutput) Timeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AkriConnectorTemplateHelmUpgradeConfigurationResponse) *int {
		if v == nil {
			return nil
		}
		return v.Timeout
	}).(pulumi.IntPtrOutput)
}

// If set, the operation will wait until all Pods, PVCs, Services, and minimum number of Pods of a `Deployment`, `StatefulSet`, or `ReplicaSet` are in a ready state before marking the release as successful.
func (o AkriConnectorTemplateHelmUpgradeConfigurationResponsePtrOutput) Wait() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AkriConnectorTemplateHelmUpgradeConfigurationResponse) *bool {
		if v == nil {
			return nil
		}
		return v.Wait
	}).(pulumi.BoolPtrOutput)
}

// If set, the operation will wait for jobs to complete before marking the release as successful.
func (o AkriConnectorTemplateHelmUpgradeConfigurationResponsePtrOutput) WaitForJobs() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AkriConnectorTemplateHelmUpgradeConfigurationResponse) *bool {
		if v == nil {
			return nil
		}
		return v.WaitForJobs
	}).(pulumi.BoolPtrOutput)
}

// AkriConnectorTemplateManagedConfiguration properties.
type AkriConnectorTemplateManagedConfiguration struct {
	// The managed configuration settings.
	ManagedConfigurationSettings interface{} `pulumi:"managedConfigurationSettings"`
	// Runtime configuration types.
	// Expected value is 'ManagedConfiguration'.
	RuntimeConfigurationType string `pulumi:"runtimeConfigurationType"`
}

// AkriConnectorTemplateManagedConfigurationInput is an input type that accepts AkriConnectorTemplateManagedConfigurationArgs and AkriConnectorTemplateManagedConfigurationOutput values.
// You can construct a concrete instance of `AkriConnectorTemplateManagedConfigurationInput` via:
//
//	AkriConnectorTemplateManagedConfigurationArgs{...}
type AkriConnectorTemplateManagedConfigurationInput interface {
	pulumi.Input

	ToAkriConnectorTemplateManagedConfigurationOutput() AkriConnectorTemplateManagedConfigurationOutput
	ToAkriConnectorTemplateManagedConfigurationOutputWithContext(context.Context) AkriConnectorTemplateManagedConfigurationOutput
}

// AkriConnectorTemplateManagedConfiguration properties.
type AkriConnectorTemplateManagedConfigurationArgs struct {
	// The managed configuration settings.
	ManagedConfigurationSettings pulumi.Input `pulumi:"managedConfigurationSettings"`
	// Runtime configuration types.
	// Expected value is 'ManagedConfiguration'.
	RuntimeConfigurationType pulumi.StringInput `pulumi:"runtimeConfigurationType"`
}

func (AkriConnectorTemplateManagedConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AkriConnectorTemplateManagedConfiguration)(nil)).Elem()
}

func (i AkriConnectorTemplateManagedConfigurationArgs) ToAkriConnectorTemplateManagedConfigurationOutput() AkriConnectorTemplateManagedConfigurationOutput {
	return i.ToAkriConnectorTemplateManagedConfigurationOutputWithContext(context.Background())
}

func (i AkriConnectorTemplateManagedConfigurationArgs) ToAkriConnectorTemplateManagedConfigurationOutputWithContext(ctx context.Context) AkriConnectorTemplateManagedConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AkriConnectorTemplateManagedConfigurationOutput)
}

func (i AkriConnectorTemplateManagedConfigurationArgs) ToAkriConnectorTemplateManagedConfigurationPtrOutput() AkriConnectorTemplateManagedConfigurationPtrOutput {
	return i.ToAkriConnectorTemplateManagedConfigurationPtrOutputWithContext(context.Background())
}

func (i AkriConnectorTemplateManagedConfigurationArgs) ToAkriConnectorTemplateManagedConfigurationPtrOutputWithContext(ctx context.Context) AkriConnectorTemplateManagedConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AkriConnectorTemplateManagedConfigurationOutput).ToAkriConnectorTemplateManagedConfigurationPtrOutputWithContext(ctx)
}

// AkriConnectorTemplateManagedConfigurationPtrInput is an input type that accepts AkriConnectorTemplateManagedConfigurationArgs, AkriConnectorTemplateManagedConfigurationPtr and AkriConnectorTemplateManagedConfigurationPtrOutput values.
// You can construct a concrete instance of `AkriConnectorTemplateManagedConfigurationPtrInput` via:
//
//	        AkriConnectorTemplateManagedConfigurationArgs{...}
//
//	or:
//
//	        nil
type AkriConnectorTemplateManagedConfigurationPtrInput interface {
	pulumi.Input

	ToAkriConnectorTemplateManagedConfigurationPtrOutput() AkriConnectorTemplateManagedConfigurationPtrOutput
	ToAkriConnectorTemplateManagedConfigurationPtrOutputWithContext(context.Context) AkriConnectorTemplateManagedConfigurationPtrOutput
}

type akriConnectorTemplateManagedConfigurationPtrType AkriConnectorTemplateManagedConfigurationArgs

func AkriConnectorTemplateManagedConfigurationPtr(v *AkriConnectorTemplateManagedConfigurationArgs) AkriConnectorTemplateManagedConfigurationPtrInput {
	return (*akriConnectorTemplateManagedConfigurationPtrType)(v)
}

func (*akriConnectorTemplateManagedConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AkriConnectorTemplateManagedConfiguration)(nil)).Elem()
}

func (i *akriConnectorTemplateManagedConfigurationPtrType) ToAkriConnectorTemplateManagedConfigurationPtrOutput() AkriConnectorTemplateManagedConfigurationPtrOutput {
	return i.ToAkriConnectorTemplateManagedConfigurationPtrOutputWithContext(context.Background())
}

func (i *akriConnectorTemplateManagedConfigurationPtrType) ToAkriConnectorTemplateManagedConfigurationPtrOutputWithContext(ctx context.Context) AkriConnectorTemplateManagedConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AkriConnectorTemplateManagedConfigurationPtrOutput)
}

// AkriConnectorTemplateManagedConfiguration properties.
type AkriConnectorTemplateManagedConfigurationOutput struct{ *pulumi.OutputState }

func (AkriConnectorTemplateManagedConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AkriConnectorTemplateManagedConfiguration)(nil)).Elem()
}

func (o AkriConnectorTemplateManagedConfigurationOutput) ToAkriConnectorTemplateManagedConfigurationOutput() AkriConnectorTemplateManagedConfigurationOutput {
	return o
}

func (o AkriConnectorTemplateManagedConfigurationOutput) ToAkriConnectorTemplateManagedConfigurationOutputWithContext(ctx context.Context) AkriConnectorTemplateManagedConfigurationOutput {
	return o
}

func (o AkriConnectorTemplateManagedConfigurationOutput) ToAkriConnectorTemplateManagedConfigurationPtrOutput() AkriConnectorTemplateManagedConfigurationPtrOutput {
	return o.ToAkriConnectorTemplateManagedConfigurationPtrOutputWithContext(context.Background())
}

func (o AkriConnectorTemplateManagedConfigurationOutput) ToAkriConnectorTemplateManagedConfigurationPtrOutputWithContext(ctx context.Context) AkriConnectorTemplateManagedConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AkriConnectorTemplateManagedConfiguration) *AkriConnectorTemplateManagedConfiguration {
		return &v
	}).(AkriConnectorTemplateManagedConfigurationPtrOutput)
}

// The managed configuration settings.
func (o AkriConnectorTemplateManagedConfigurationOutput) ManagedConfigurationSettings() pulumi.AnyOutput {
	return o.ApplyT(func(v AkriConnectorTemplateManagedConfiguration) interface{} { return v.ManagedConfigurationSettings }).(pulumi.AnyOutput)
}

// Runtime configuration types.
// Expected value is 'ManagedConfiguration'.
func (o AkriConnectorTemplateManagedConfigurationOutput) RuntimeConfigurationType() pulumi.StringOutput {
	return o.ApplyT(func(v AkriConnectorTemplateManagedConfiguration) string { return v.RuntimeConfigurationType }).(pulumi.StringOutput)
}

type AkriConnectorTemplateManagedConfigurationPtrOutput struct{ *pulumi.OutputState }

func (AkriConnectorTemplateManagedConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AkriConnectorTemplateManagedConfiguration)(nil)).Elem()
}

func (o AkriConnectorTemplateManagedConfigurationPtrOutput) ToAkriConnectorTemplateManagedConfigurationPtrOutput() AkriConnectorTemplateManagedConfigurationPtrOutput {
	return o
}

func (o AkriConnectorTemplateManagedConfigurationPtrOutput) ToAkriConnectorTemplateManagedConfigurationPtrOutputWithContext(ctx context.Context) AkriConnectorTemplateManagedConfigurationPtrOutput {
	return o
}

func (o AkriConnectorTemplateManagedConfigurationPtrOutput) Elem() AkriConnectorTemplateManagedConfigurationOutput {
	return o.ApplyT(func(v *AkriConnectorTemplateManagedConfiguration) AkriConnectorTemplateManagedConfiguration {
		if v != nil {
			return *v
		}
		var ret AkriConnectorTemplateManagedConfiguration
		return ret
	}).(AkriConnectorTemplateManagedConfigurationOutput)
}

// The managed configuration settings.
func (o AkriConnectorTemplateManagedConfigurationPtrOutput) ManagedConfigurationSettings() pulumi.AnyOutput {
	return o.ApplyT(func(v *AkriConnectorTemplateManagedConfiguration) interface{} {
		if v == nil {
			return nil
		}
		return v.ManagedConfigurationSettings
	}).(pulumi.AnyOutput)
}

// Runtime configuration types.
// Expected value is 'ManagedConfiguration'.
func (o AkriConnectorTemplateManagedConfigurationPtrOutput) RuntimeConfigurationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AkriConnectorTemplateManagedConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.RuntimeConfigurationType
	}).(pulumi.StringPtrOutput)
}

// AkriConnectorTemplateManagedConfiguration properties.
type AkriConnectorTemplateManagedConfigurationResponse struct {
	// The managed configuration settings.
	ManagedConfigurationSettings interface{} `pulumi:"managedConfigurationSettings"`
	// Runtime configuration types.
	// Expected value is 'ManagedConfiguration'.
	RuntimeConfigurationType string `pulumi:"runtimeConfigurationType"`
}

// AkriConnectorTemplateManagedConfiguration properties.
type AkriConnectorTemplateManagedConfigurationResponseOutput struct{ *pulumi.OutputState }

func (AkriConnectorTemplateManagedConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AkriConnectorTemplateManagedConfigurationResponse)(nil)).Elem()
}

func (o AkriConnectorTemplateManagedConfigurationResponseOutput) ToAkriConnectorTemplateManagedConfigurationResponseOutput() AkriConnectorTemplateManagedConfigurationResponseOutput {
	return o
}

func (o AkriConnectorTemplateManagedConfigurationResponseOutput) ToAkriConnectorTemplateManagedConfigurationResponseOutputWithContext(ctx context.Context) AkriConnectorTemplateManagedConfigurationResponseOutput {
	return o
}

// The managed configuration settings.
func (o AkriConnectorTemplateManagedConfigurationResponseOutput) ManagedConfigurationSettings() pulumi.AnyOutput {
	return o.ApplyT(func(v AkriConnectorTemplateManagedConfigurationResponse) interface{} {
		return v.ManagedConfigurationSettings
	}).(pulumi.AnyOutput)
}

// Runtime configuration types.
// Expected value is 'ManagedConfiguration'.
func (o AkriConnectorTemplateManagedConfigurationResponseOutput) RuntimeConfigurationType() pulumi.StringOutput {
	return o.ApplyT(func(v AkriConnectorTemplateManagedConfigurationResponse) string { return v.RuntimeConfigurationType }).(pulumi.StringOutput)
}

// AkriConnectorTemplatePersistentVolumeClaim properties.
type AkriConnectorTemplatePersistentVolumeClaim struct {
	// The name of the persistent volume claim.
	ClaimName string `pulumi:"claimName"`
	// The mount path for the persistent volume claim.
	MountPath string `pulumi:"mountPath"`
}

// AkriConnectorTemplatePersistentVolumeClaimInput is an input type that accepts AkriConnectorTemplatePersistentVolumeClaimArgs and AkriConnectorTemplatePersistentVolumeClaimOutput values.
// You can construct a concrete instance of `AkriConnectorTemplatePersistentVolumeClaimInput` via:
//
//	AkriConnectorTemplatePersistentVolumeClaimArgs{...}
type AkriConnectorTemplatePersistentVolumeClaimInput interface {
	pulumi.Input

	ToAkriConnectorTemplatePersistentVolumeClaimOutput() AkriConnectorTemplatePersistentVolumeClaimOutput
	ToAkriConnectorTemplatePersistentVolumeClaimOutputWithContext(context.Context) AkriConnectorTemplatePersistentVolumeClaimOutput
}

// AkriConnectorTemplatePersistentVolumeClaim properties.
type AkriConnectorTemplatePersistentVolumeClaimArgs struct {
	// The name of the persistent volume claim.
	ClaimName pulumi.StringInput `pulumi:"claimName"`
	// The mount path for the persistent volume claim.
	MountPath pulumi.StringInput `pulumi:"mountPath"`
}

func (AkriConnectorTemplatePersistentVolumeClaimArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AkriConnectorTemplatePersistentVolumeClaim)(nil)).Elem()
}

func (i AkriConnectorTemplatePersistentVolumeClaimArgs) ToAkriConnectorTemplatePersistentVolumeClaimOutput() AkriConnectorTemplatePersistentVolumeClaimOutput {
	return i.ToAkriConnectorTemplatePersistentVolumeClaimOutputWithContext(context.Background())
}

func (i AkriConnectorTemplatePersistentVolumeClaimArgs) ToAkriConnectorTemplatePersistentVolumeClaimOutputWithContext(ctx context.Context) AkriConnectorTemplatePersistentVolumeClaimOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AkriConnectorTemplatePersistentVolumeClaimOutput)
}

// AkriConnectorTemplatePersistentVolumeClaimArrayInput is an input type that accepts AkriConnectorTemplatePersistentVolumeClaimArray and AkriConnectorTemplatePersistentVolumeClaimArrayOutput values.
// You can construct a concrete instance of `AkriConnectorTemplatePersistentVolumeClaimArrayInput` via:
//
//	AkriConnectorTemplatePersistentVolumeClaimArray{ AkriConnectorTemplatePersistentVolumeClaimArgs{...} }
type AkriConnectorTemplatePersistentVolumeClaimArrayInput interface {
	pulumi.Input

	ToAkriConnectorTemplatePersistentVolumeClaimArrayOutput() AkriConnectorTemplatePersistentVolumeClaimArrayOutput
	ToAkriConnectorTemplatePersistentVolumeClaimArrayOutputWithContext(context.Context) AkriConnectorTemplatePersistentVolumeClaimArrayOutput
}

type AkriConnectorTemplatePersistentVolumeClaimArray []AkriConnectorTemplatePersistentVolumeClaimInput

func (AkriConnectorTemplatePersistentVolumeClaimArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AkriConnectorTemplatePersistentVolumeClaim)(nil)).Elem()
}

func (i AkriConnectorTemplatePersistentVolumeClaimArray) ToAkriConnectorTemplatePersistentVolumeClaimArrayOutput() AkriConnectorTemplatePersistentVolumeClaimArrayOutput {
	return i.ToAkriConnectorTemplatePersistentVolumeClaimArrayOutputWithContext(context.Background())
}

func (i AkriConnectorTemplatePersistentVolumeClaimArray) ToAkriConnectorTemplatePersistentVolumeClaimArrayOutputWithContext(ctx context.Context) AkriConnectorTemplatePersistentVolumeClaimArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AkriConnectorTemplatePersistentVolumeClaimArrayOutput)
}

// AkriConnectorTemplatePersistentVolumeClaim properties.
type AkriConnectorTemplatePersistentVolumeClaimOutput struct{ *pulumi.OutputState }

func (AkriConnectorTemplatePersistentVolumeClaimOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AkriConnectorTemplatePersistentVolumeClaim)(nil)).Elem()
}

func (o AkriConnectorTemplatePersistentVolumeClaimOutput) ToAkriConnectorTemplatePersistentVolumeClaimOutput() AkriConnectorTemplatePersistentVolumeClaimOutput {
	return o
}

func (o AkriConnectorTemplatePersistentVolumeClaimOutput) ToAkriConnectorTemplatePersistentVolumeClaimOutputWithContext(ctx context.Context) AkriConnectorTemplatePersistentVolumeClaimOutput {
	return o
}

// The name of the persistent volume claim.
func (o AkriConnectorTemplatePersistentVolumeClaimOutput) ClaimName() pulumi.StringOutput {
	return o.ApplyT(func(v AkriConnectorTemplatePersistentVolumeClaim) string { return v.ClaimName }).(pulumi.StringOutput)
}

// The mount path for the persistent volume claim.
func (o AkriConnectorTemplatePersistentVolumeClaimOutput) MountPath() pulumi.StringOutput {
	return o.ApplyT(func(v AkriConnectorTemplatePersistentVolumeClaim) string { return v.MountPath }).(pulumi.StringOutput)
}

type AkriConnectorTemplatePersistentVolumeClaimArrayOutput struct{ *pulumi.OutputState }

func (AkriConnectorTemplatePersistentVolumeClaimArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AkriConnectorTemplatePersistentVolumeClaim)(nil)).Elem()
}

func (o AkriConnectorTemplatePersistentVolumeClaimArrayOutput) ToAkriConnectorTemplatePersistentVolumeClaimArrayOutput() AkriConnectorTemplatePersistentVolumeClaimArrayOutput {
	return o
}

func (o AkriConnectorTemplatePersistentVolumeClaimArrayOutput) ToAkriConnectorTemplatePersistentVolumeClaimArrayOutputWithContext(ctx context.Context) AkriConnectorTemplatePersistentVolumeClaimArrayOutput {
	return o
}

func (o AkriConnectorTemplatePersistentVolumeClaimArrayOutput) Index(i pulumi.IntInput) AkriConnectorTemplatePersistentVolumeClaimOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AkriConnectorTemplatePersistentVolumeClaim {
		return vs[0].([]AkriConnectorTemplatePersistentVolumeClaim)[vs[1].(int)]
	}).(AkriConnectorTemplatePersistentVolumeClaimOutput)
}

// AkriConnectorTemplatePersistentVolumeClaim properties.
type AkriConnectorTemplatePersistentVolumeClaimResponse struct {
	// The name of the persistent volume claim.
	ClaimName string `pulumi:"claimName"`
	// The mount path for the persistent volume claim.
	MountPath string `pulumi:"mountPath"`
}

// AkriConnectorTemplatePersistentVolumeClaim properties.
type AkriConnectorTemplatePersistentVolumeClaimResponseOutput struct{ *pulumi.OutputState }

func (AkriConnectorTemplatePersistentVolumeClaimResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AkriConnectorTemplatePersistentVolumeClaimResponse)(nil)).Elem()
}

func (o AkriConnectorTemplatePersistentVolumeClaimResponseOutput) ToAkriConnectorTemplatePersistentVolumeClaimResponseOutput() AkriConnectorTemplatePersistentVolumeClaimResponseOutput {
	return o
}

func (o AkriConnectorTemplatePersistentVolumeClaimResponseOutput) ToAkriConnectorTemplatePersistentVolumeClaimResponseOutputWithContext(ctx context.Context) AkriConnectorTemplatePersistentVolumeClaimResponseOutput {
	return o
}

// The name of the persistent volume claim.
func (o AkriConnectorTemplatePersistentVolumeClaimResponseOutput) ClaimName() pulumi.StringOutput {
	return o.ApplyT(func(v AkriConnectorTemplatePersistentVolumeClaimResponse) string { return v.ClaimName }).(pulumi.StringOutput)
}

// The mount path for the persistent volume claim.
func (o AkriConnectorTemplatePersistentVolumeClaimResponseOutput) MountPath() pulumi.StringOutput {
	return o.ApplyT(func(v AkriConnectorTemplatePersistentVolumeClaimResponse) string { return v.MountPath }).(pulumi.StringOutput)
}

type AkriConnectorTemplatePersistentVolumeClaimResponseArrayOutput struct{ *pulumi.OutputState }

func (AkriConnectorTemplatePersistentVolumeClaimResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AkriConnectorTemplatePersistentVolumeClaimResponse)(nil)).Elem()
}

func (o AkriConnectorTemplatePersistentVolumeClaimResponseArrayOutput) ToAkriConnectorTemplatePersistentVolumeClaimResponseArrayOutput() AkriConnectorTemplatePersistentVolumeClaimResponseArrayOutput {
	return o
}

func (o AkriConnectorTemplatePersistentVolumeClaimResponseArrayOutput) ToAkriConnectorTemplatePersistentVolumeClaimResponseArrayOutputWithContext(ctx context.Context) AkriConnectorTemplatePersistentVolumeClaimResponseArrayOutput {
	return o
}

func (o AkriConnectorTemplatePersistentVolumeClaimResponseArrayOutput) Index(i pulumi.IntInput) AkriConnectorTemplatePersistentVolumeClaimResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AkriConnectorTemplatePersistentVolumeClaimResponse {
		return vs[0].([]AkriConnectorTemplatePersistentVolumeClaimResponse)[vs[1].(int)]
	}).(AkriConnectorTemplatePersistentVolumeClaimResponseOutput)
}

// AkriConnectorTemplate properties.
type AkriConnectorTemplateProperties struct {
	// Metadata about AIO.
	AioMetadata *AkriConnectorTemplateAioMetadata `pulumi:"aioMetadata"`
	// Device inbound endpoint types.
	DeviceInboundEndpointTypes []AkriConnectorTemplateDeviceInboundEndpointType `pulumi:"deviceInboundEndpointTypes"`
	// Diagnostics settings for the Connector template.
	Diagnostics *AkriConnectorTemplateDiagnostics `pulumi:"diagnostics"`
	// Mqtt connection configuration settings.
	MqttConnectionConfiguration *AkriConnectorsMqttConnectionConfiguration `pulumi:"mqttConnectionConfiguration"`
	// The runtime configuration for the Connector template.
	RuntimeConfiguration interface{} `pulumi:"runtimeConfiguration"`
}

// Defaults sets the appropriate defaults for AkriConnectorTemplateProperties
func (val *AkriConnectorTemplateProperties) Defaults() *AkriConnectorTemplateProperties {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.Diagnostics = tmp.Diagnostics.Defaults()

	tmp.MqttConnectionConfiguration = tmp.MqttConnectionConfiguration.Defaults()

	return &tmp
}

// AkriConnectorTemplatePropertiesInput is an input type that accepts AkriConnectorTemplatePropertiesArgs and AkriConnectorTemplatePropertiesOutput values.
// You can construct a concrete instance of `AkriConnectorTemplatePropertiesInput` via:
//
//	AkriConnectorTemplatePropertiesArgs{...}
type AkriConnectorTemplatePropertiesInput interface {
	pulumi.Input

	ToAkriConnectorTemplatePropertiesOutput() AkriConnectorTemplatePropertiesOutput
	ToAkriConnectorTemplatePropertiesOutputWithContext(context.Context) AkriConnectorTemplatePropertiesOutput
}

// AkriConnectorTemplate properties.
type AkriConnectorTemplatePropertiesArgs struct {
	// Metadata about AIO.
	AioMetadata AkriConnectorTemplateAioMetadataPtrInput `pulumi:"aioMetadata"`
	// Device inbound endpoint types.
	DeviceInboundEndpointTypes AkriConnectorTemplateDeviceInboundEndpointTypeArrayInput `pulumi:"deviceInboundEndpointTypes"`
	// Diagnostics settings for the Connector template.
	Diagnostics AkriConnectorTemplateDiagnosticsPtrInput `pulumi:"diagnostics"`
	// Mqtt connection configuration settings.
	MqttConnectionConfiguration AkriConnectorsMqttConnectionConfigurationPtrInput `pulumi:"mqttConnectionConfiguration"`
	// The runtime configuration for the Connector template.
	RuntimeConfiguration pulumi.Input `pulumi:"runtimeConfiguration"`
}

// Defaults sets the appropriate defaults for AkriConnectorTemplatePropertiesArgs
func (val *AkriConnectorTemplatePropertiesArgs) Defaults() *AkriConnectorTemplatePropertiesArgs {
	if val == nil {
		return nil
	}
	tmp := *val

	return &tmp
}
func (AkriConnectorTemplatePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AkriConnectorTemplateProperties)(nil)).Elem()
}

func (i AkriConnectorTemplatePropertiesArgs) ToAkriConnectorTemplatePropertiesOutput() AkriConnectorTemplatePropertiesOutput {
	return i.ToAkriConnectorTemplatePropertiesOutputWithContext(context.Background())
}

func (i AkriConnectorTemplatePropertiesArgs) ToAkriConnectorTemplatePropertiesOutputWithContext(ctx context.Context) AkriConnectorTemplatePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AkriConnectorTemplatePropertiesOutput)
}

func (i AkriConnectorTemplatePropertiesArgs) ToAkriConnectorTemplatePropertiesPtrOutput() AkriConnectorTemplatePropertiesPtrOutput {
	return i.ToAkriConnectorTemplatePropertiesPtrOutputWithContext(context.Background())
}

func (i AkriConnectorTemplatePropertiesArgs) ToAkriConnectorTemplatePropertiesPtrOutputWithContext(ctx context.Context) AkriConnectorTemplatePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AkriConnectorTemplatePropertiesOutput).ToAkriConnectorTemplatePropertiesPtrOutputWithContext(ctx)
}

// AkriConnectorTemplatePropertiesPtrInput is an input type that accepts AkriConnectorTemplatePropertiesArgs, AkriConnectorTemplatePropertiesPtr and AkriConnectorTemplatePropertiesPtrOutput values.
// You can construct a concrete instance of `AkriConnectorTemplatePropertiesPtrInput` via:
//
//	        AkriConnectorTemplatePropertiesArgs{...}
//
//	or:
//
//	        nil
type AkriConnectorTemplatePropertiesPtrInput interface {
	pulumi.Input

	ToAkriConnectorTemplatePropertiesPtrOutput() AkriConnectorTemplatePropertiesPtrOutput
	ToAkriConnectorTemplatePropertiesPtrOutputWithContext(context.Context) AkriConnectorTemplatePropertiesPtrOutput
}

type akriConnectorTemplatePropertiesPtrType AkriConnectorTemplatePropertiesArgs

func AkriConnectorTemplatePropertiesPtr(v *AkriConnectorTemplatePropertiesArgs) AkriConnectorTemplatePropertiesPtrInput {
	return (*akriConnectorTemplatePropertiesPtrType)(v)
}

func (*akriConnectorTemplatePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AkriConnectorTemplateProperties)(nil)).Elem()
}

func (i *akriConnectorTemplatePropertiesPtrType) ToAkriConnectorTemplatePropertiesPtrOutput() AkriConnectorTemplatePropertiesPtrOutput {
	return i.ToAkriConnectorTemplatePropertiesPtrOutputWithContext(context.Background())
}

func (i *akriConnectorTemplatePropertiesPtrType) ToAkriConnectorTemplatePropertiesPtrOutputWithContext(ctx context.Context) AkriConnectorTemplatePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AkriConnectorTemplatePropertiesPtrOutput)
}

// AkriConnectorTemplate properties.
type AkriConnectorTemplatePropertiesOutput struct{ *pulumi.OutputState }

func (AkriConnectorTemplatePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AkriConnectorTemplateProperties)(nil)).Elem()
}

func (o AkriConnectorTemplatePropertiesOutput) ToAkriConnectorTemplatePropertiesOutput() AkriConnectorTemplatePropertiesOutput {
	return o
}

func (o AkriConnectorTemplatePropertiesOutput) ToAkriConnectorTemplatePropertiesOutputWithContext(ctx context.Context) AkriConnectorTemplatePropertiesOutput {
	return o
}

func (o AkriConnectorTemplatePropertiesOutput) ToAkriConnectorTemplatePropertiesPtrOutput() AkriConnectorTemplatePropertiesPtrOutput {
	return o.ToAkriConnectorTemplatePropertiesPtrOutputWithContext(context.Background())
}

func (o AkriConnectorTemplatePropertiesOutput) ToAkriConnectorTemplatePropertiesPtrOutputWithContext(ctx context.Context) AkriConnectorTemplatePropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AkriConnectorTemplateProperties) *AkriConnectorTemplateProperties {
		return &v
	}).(AkriConnectorTemplatePropertiesPtrOutput)
}

// Metadata about AIO.
func (o AkriConnectorTemplatePropertiesOutput) AioMetadata() AkriConnectorTemplateAioMetadataPtrOutput {
	return o.ApplyT(func(v AkriConnectorTemplateProperties) *AkriConnectorTemplateAioMetadata { return v.AioMetadata }).(AkriConnectorTemplateAioMetadataPtrOutput)
}

// Device inbound endpoint types.
func (o AkriConnectorTemplatePropertiesOutput) DeviceInboundEndpointTypes() AkriConnectorTemplateDeviceInboundEndpointTypeArrayOutput {
	return o.ApplyT(func(v AkriConnectorTemplateProperties) []AkriConnectorTemplateDeviceInboundEndpointType {
		return v.DeviceInboundEndpointTypes
	}).(AkriConnectorTemplateDeviceInboundEndpointTypeArrayOutput)
}

// Diagnostics settings for the Connector template.
func (o AkriConnectorTemplatePropertiesOutput) Diagnostics() AkriConnectorTemplateDiagnosticsPtrOutput {
	return o.ApplyT(func(v AkriConnectorTemplateProperties) *AkriConnectorTemplateDiagnostics { return v.Diagnostics }).(AkriConnectorTemplateDiagnosticsPtrOutput)
}

// Mqtt connection configuration settings.
func (o AkriConnectorTemplatePropertiesOutput) MqttConnectionConfiguration() AkriConnectorsMqttConnectionConfigurationPtrOutput {
	return o.ApplyT(func(v AkriConnectorTemplateProperties) *AkriConnectorsMqttConnectionConfiguration {
		return v.MqttConnectionConfiguration
	}).(AkriConnectorsMqttConnectionConfigurationPtrOutput)
}

// The runtime configuration for the Connector template.
func (o AkriConnectorTemplatePropertiesOutput) RuntimeConfiguration() pulumi.AnyOutput {
	return o.ApplyT(func(v AkriConnectorTemplateProperties) interface{} { return v.RuntimeConfiguration }).(pulumi.AnyOutput)
}

type AkriConnectorTemplatePropertiesPtrOutput struct{ *pulumi.OutputState }

func (AkriConnectorTemplatePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AkriConnectorTemplateProperties)(nil)).Elem()
}

func (o AkriConnectorTemplatePropertiesPtrOutput) ToAkriConnectorTemplatePropertiesPtrOutput() AkriConnectorTemplatePropertiesPtrOutput {
	return o
}

func (o AkriConnectorTemplatePropertiesPtrOutput) ToAkriConnectorTemplatePropertiesPtrOutputWithContext(ctx context.Context) AkriConnectorTemplatePropertiesPtrOutput {
	return o
}

func (o AkriConnectorTemplatePropertiesPtrOutput) Elem() AkriConnectorTemplatePropertiesOutput {
	return o.ApplyT(func(v *AkriConnectorTemplateProperties) AkriConnectorTemplateProperties {
		if v != nil {
			return *v
		}
		var ret AkriConnectorTemplateProperties
		return ret
	}).(AkriConnectorTemplatePropertiesOutput)
}

// Metadata about AIO.
func (o AkriConnectorTemplatePropertiesPtrOutput) AioMetadata() AkriConnectorTemplateAioMetadataPtrOutput {
	return o.ApplyT(func(v *AkriConnectorTemplateProperties) *AkriConnectorTemplateAioMetadata {
		if v == nil {
			return nil
		}
		return v.AioMetadata
	}).(AkriConnectorTemplateAioMetadataPtrOutput)
}

// Device inbound endpoint types.
func (o AkriConnectorTemplatePropertiesPtrOutput) DeviceInboundEndpointTypes() AkriConnectorTemplateDeviceInboundEndpointTypeArrayOutput {
	return o.ApplyT(func(v *AkriConnectorTemplateProperties) []AkriConnectorTemplateDeviceInboundEndpointType {
		if v == nil {
			return nil
		}
		return v.DeviceInboundEndpointTypes
	}).(AkriConnectorTemplateDeviceInboundEndpointTypeArrayOutput)
}

// Diagnostics settings for the Connector template.
func (o AkriConnectorTemplatePropertiesPtrOutput) Diagnostics() AkriConnectorTemplateDiagnosticsPtrOutput {
	return o.ApplyT(func(v *AkriConnectorTemplateProperties) *AkriConnectorTemplateDiagnostics {
		if v == nil {
			return nil
		}
		return v.Diagnostics
	}).(AkriConnectorTemplateDiagnosticsPtrOutput)
}

// Mqtt connection configuration settings.
func (o AkriConnectorTemplatePropertiesPtrOutput) MqttConnectionConfiguration() AkriConnectorsMqttConnectionConfigurationPtrOutput {
	return o.ApplyT(func(v *AkriConnectorTemplateProperties) *AkriConnectorsMqttConnectionConfiguration {
		if v == nil {
			return nil
		}
		return v.MqttConnectionConfiguration
	}).(AkriConnectorsMqttConnectionConfigurationPtrOutput)
}

// The runtime configuration for the Connector template.
func (o AkriConnectorTemplatePropertiesPtrOutput) RuntimeConfiguration() pulumi.AnyOutput {
	return o.ApplyT(func(v *AkriConnectorTemplateProperties) interface{} {
		if v == nil {
			return nil
		}
		return v.RuntimeConfiguration
	}).(pulumi.AnyOutput)
}

// AkriConnectorTemplate properties.
type AkriConnectorTemplatePropertiesResponse struct {
	// Metadata about AIO.
	AioMetadata *AkriConnectorTemplateAioMetadataResponse `pulumi:"aioMetadata"`
	// Device inbound endpoint types.
	DeviceInboundEndpointTypes []AkriConnectorTemplateDeviceInboundEndpointTypeResponse `pulumi:"deviceInboundEndpointTypes"`
	// Diagnostics settings for the Connector template.
	Diagnostics *AkriConnectorTemplateDiagnosticsResponse `pulumi:"diagnostics"`
	// Mqtt connection configuration settings.
	MqttConnectionConfiguration *AkriConnectorsMqttConnectionConfigurationResponse `pulumi:"mqttConnectionConfiguration"`
	// The status of the last operation.
	ProvisioningState string `pulumi:"provisioningState"`
	// The runtime configuration for the Connector template.
	RuntimeConfiguration interface{} `pulumi:"runtimeConfiguration"`
}

// Defaults sets the appropriate defaults for AkriConnectorTemplatePropertiesResponse
func (val *AkriConnectorTemplatePropertiesResponse) Defaults() *AkriConnectorTemplatePropertiesResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.Diagnostics = tmp.Diagnostics.Defaults()

	tmp.MqttConnectionConfiguration = tmp.MqttConnectionConfiguration.Defaults()

	return &tmp
}

// AkriConnectorTemplate properties.
type AkriConnectorTemplatePropertiesResponseOutput struct{ *pulumi.OutputState }

func (AkriConnectorTemplatePropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AkriConnectorTemplatePropertiesResponse)(nil)).Elem()
}

func (o AkriConnectorTemplatePropertiesResponseOutput) ToAkriConnectorTemplatePropertiesResponseOutput() AkriConnectorTemplatePropertiesResponseOutput {
	return o
}

func (o AkriConnectorTemplatePropertiesResponseOutput) ToAkriConnectorTemplatePropertiesResponseOutputWithContext(ctx context.Context) AkriConnectorTemplatePropertiesResponseOutput {
	return o
}

// Metadata about AIO.
func (o AkriConnectorTemplatePropertiesResponseOutput) AioMetadata() AkriConnectorTemplateAioMetadataResponsePtrOutput {
	return o.ApplyT(func(v AkriConnectorTemplatePropertiesResponse) *AkriConnectorTemplateAioMetadataResponse {
		return v.AioMetadata
	}).(AkriConnectorTemplateAioMetadataResponsePtrOutput)
}

// Device inbound endpoint types.
func (o AkriConnectorTemplatePropertiesResponseOutput) DeviceInboundEndpointTypes() AkriConnectorTemplateDeviceInboundEndpointTypeResponseArrayOutput {
	return o.ApplyT(func(v AkriConnectorTemplatePropertiesResponse) []AkriConnectorTemplateDeviceInboundEndpointTypeResponse {
		return v.DeviceInboundEndpointTypes
	}).(AkriConnectorTemplateDeviceInboundEndpointTypeResponseArrayOutput)
}

// Diagnostics settings for the Connector template.
func (o AkriConnectorTemplatePropertiesResponseOutput) Diagnostics() AkriConnectorTemplateDiagnosticsResponsePtrOutput {
	return o.ApplyT(func(v AkriConnectorTemplatePropertiesResponse) *AkriConnectorTemplateDiagnosticsResponse {
		return v.Diagnostics
	}).(AkriConnectorTemplateDiagnosticsResponsePtrOutput)
}

// Mqtt connection configuration settings.
func (o AkriConnectorTemplatePropertiesResponseOutput) MqttConnectionConfiguration() AkriConnectorsMqttConnectionConfigurationResponsePtrOutput {
	return o.ApplyT(func(v AkriConnectorTemplatePropertiesResponse) *AkriConnectorsMqttConnectionConfigurationResponse {
		return v.MqttConnectionConfiguration
	}).(AkriConnectorsMqttConnectionConfigurationResponsePtrOutput)
}

// The status of the last operation.
func (o AkriConnectorTemplatePropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v AkriConnectorTemplatePropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The runtime configuration for the Connector template.
func (o AkriConnectorTemplatePropertiesResponseOutput) RuntimeConfiguration() pulumi.AnyOutput {
	return o.ApplyT(func(v AkriConnectorTemplatePropertiesResponse) interface{} { return v.RuntimeConfiguration }).(pulumi.AnyOutput)
}

// AkriConnectorTemplateRuntimeImageConfiguration properties.
type AkriConnectorTemplateRuntimeImageConfiguration struct {
	// Additional configuration for the image of the managed configuration.
	AdditionalConfiguration map[string]string `pulumi:"additionalConfiguration"`
	// Allocation settings for the managed configuration.
	Allocation *AkriConnectorTemplateBucketizedAllocation `pulumi:"allocation"`
	// The image configuration settings.
	ImageConfigurationSettings AkriConnectorTemplateRuntimeImageConfigurationSettings `pulumi:"imageConfigurationSettings"`
	// Managed configuration types.
	// Expected value is 'ImageConfiguration'.
	ManagedConfigurationType string `pulumi:"managedConfigurationType"`
	// The persistent volume claim templates for the managed configuration.
	// See https://raw.githubusercontent.com/kubernetes/kubernetes/refs/heads/master/api/openapi-spec/v3/apis__apps__v1_openapi.json.
	PersistentVolumeClaimTemplates []interface{} `pulumi:"persistentVolumeClaimTemplates"`
	// The persistent volume claims for the managed configuration.
	PersistentVolumeClaims []AkriConnectorTemplatePersistentVolumeClaim `pulumi:"persistentVolumeClaims"`
	// Connector secrets that will be mounted onto all connector instances.
	Secrets []AkriConnectorsSecret `pulumi:"secrets"`
	// Trust list for the connector. This is used to specify the certificates that all connector instances should trust.
	TrustSettings *AkriConnectorTemplateTrustList `pulumi:"trustSettings"`
}

// AkriConnectorTemplateRuntimeImageConfigurationInput is an input type that accepts AkriConnectorTemplateRuntimeImageConfigurationArgs and AkriConnectorTemplateRuntimeImageConfigurationOutput values.
// You can construct a concrete instance of `AkriConnectorTemplateRuntimeImageConfigurationInput` via:
//
//	AkriConnectorTemplateRuntimeImageConfigurationArgs{...}
type AkriConnectorTemplateRuntimeImageConfigurationInput interface {
	pulumi.Input

	ToAkriConnectorTemplateRuntimeImageConfigurationOutput() AkriConnectorTemplateRuntimeImageConfigurationOutput
	ToAkriConnectorTemplateRuntimeImageConfigurationOutputWithContext(context.Context) AkriConnectorTemplateRuntimeImageConfigurationOutput
}

// AkriConnectorTemplateRuntimeImageConfiguration properties.
type AkriConnectorTemplateRuntimeImageConfigurationArgs struct {
	// Additional configuration for the image of the managed configuration.
	AdditionalConfiguration pulumi.StringMapInput `pulumi:"additionalConfiguration"`
	// Allocation settings for the managed configuration.
	Allocation AkriConnectorTemplateBucketizedAllocationPtrInput `pulumi:"allocation"`
	// The image configuration settings.
	ImageConfigurationSettings AkriConnectorTemplateRuntimeImageConfigurationSettingsInput `pulumi:"imageConfigurationSettings"`
	// Managed configuration types.
	// Expected value is 'ImageConfiguration'.
	ManagedConfigurationType pulumi.StringInput `pulumi:"managedConfigurationType"`
	// The persistent volume claim templates for the managed configuration.
	// See https://raw.githubusercontent.com/kubernetes/kubernetes/refs/heads/master/api/openapi-spec/v3/apis__apps__v1_openapi.json.
	PersistentVolumeClaimTemplates pulumi.ArrayInput `pulumi:"persistentVolumeClaimTemplates"`
	// The persistent volume claims for the managed configuration.
	PersistentVolumeClaims AkriConnectorTemplatePersistentVolumeClaimArrayInput `pulumi:"persistentVolumeClaims"`
	// Connector secrets that will be mounted onto all connector instances.
	Secrets AkriConnectorsSecretArrayInput `pulumi:"secrets"`
	// Trust list for the connector. This is used to specify the certificates that all connector instances should trust.
	TrustSettings AkriConnectorTemplateTrustListPtrInput `pulumi:"trustSettings"`
}

func (AkriConnectorTemplateRuntimeImageConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AkriConnectorTemplateRuntimeImageConfiguration)(nil)).Elem()
}

func (i AkriConnectorTemplateRuntimeImageConfigurationArgs) ToAkriConnectorTemplateRuntimeImageConfigurationOutput() AkriConnectorTemplateRuntimeImageConfigurationOutput {
	return i.ToAkriConnectorTemplateRuntimeImageConfigurationOutputWithContext(context.Background())
}

func (i AkriConnectorTemplateRuntimeImageConfigurationArgs) ToAkriConnectorTemplateRuntimeImageConfigurationOutputWithContext(ctx context.Context) AkriConnectorTemplateRuntimeImageConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AkriConnectorTemplateRuntimeImageConfigurationOutput)
}

func (i AkriConnectorTemplateRuntimeImageConfigurationArgs) ToAkriConnectorTemplateRuntimeImageConfigurationPtrOutput() AkriConnectorTemplateRuntimeImageConfigurationPtrOutput {
	return i.ToAkriConnectorTemplateRuntimeImageConfigurationPtrOutputWithContext(context.Background())
}

func (i AkriConnectorTemplateRuntimeImageConfigurationArgs) ToAkriConnectorTemplateRuntimeImageConfigurationPtrOutputWithContext(ctx context.Context) AkriConnectorTemplateRuntimeImageConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AkriConnectorTemplateRuntimeImageConfigurationOutput).ToAkriConnectorTemplateRuntimeImageConfigurationPtrOutputWithContext(ctx)
}

// AkriConnectorTemplateRuntimeImageConfigurationPtrInput is an input type that accepts AkriConnectorTemplateRuntimeImageConfigurationArgs, AkriConnectorTemplateRuntimeImageConfigurationPtr and AkriConnectorTemplateRuntimeImageConfigurationPtrOutput values.
// You can construct a concrete instance of `AkriConnectorTemplateRuntimeImageConfigurationPtrInput` via:
//
//	        AkriConnectorTemplateRuntimeImageConfigurationArgs{...}
//
//	or:
//
//	        nil
type AkriConnectorTemplateRuntimeImageConfigurationPtrInput interface {
	pulumi.Input

	ToAkriConnectorTemplateRuntimeImageConfigurationPtrOutput() AkriConnectorTemplateRuntimeImageConfigurationPtrOutput
	ToAkriConnectorTemplateRuntimeImageConfigurationPtrOutputWithContext(context.Context) AkriConnectorTemplateRuntimeImageConfigurationPtrOutput
}

type akriConnectorTemplateRuntimeImageConfigurationPtrType AkriConnectorTemplateRuntimeImageConfigurationArgs

func AkriConnectorTemplateRuntimeImageConfigurationPtr(v *AkriConnectorTemplateRuntimeImageConfigurationArgs) AkriConnectorTemplateRuntimeImageConfigurationPtrInput {
	return (*akriConnectorTemplateRuntimeImageConfigurationPtrType)(v)
}

func (*akriConnectorTemplateRuntimeImageConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AkriConnectorTemplateRuntimeImageConfiguration)(nil)).Elem()
}

func (i *akriConnectorTemplateRuntimeImageConfigurationPtrType) ToAkriConnectorTemplateRuntimeImageConfigurationPtrOutput() AkriConnectorTemplateRuntimeImageConfigurationPtrOutput {
	return i.ToAkriConnectorTemplateRuntimeImageConfigurationPtrOutputWithContext(context.Background())
}

func (i *akriConnectorTemplateRuntimeImageConfigurationPtrType) ToAkriConnectorTemplateRuntimeImageConfigurationPtrOutputWithContext(ctx context.Context) AkriConnectorTemplateRuntimeImageConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AkriConnectorTemplateRuntimeImageConfigurationPtrOutput)
}

// AkriConnectorTemplateRuntimeImageConfiguration properties.
type AkriConnectorTemplateRuntimeImageConfigurationOutput struct{ *pulumi.OutputState }

func (AkriConnectorTemplateRuntimeImageConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AkriConnectorTemplateRuntimeImageConfiguration)(nil)).Elem()
}

func (o AkriConnectorTemplateRuntimeImageConfigurationOutput) ToAkriConnectorTemplateRuntimeImageConfigurationOutput() AkriConnectorTemplateRuntimeImageConfigurationOutput {
	return o
}

func (o AkriConnectorTemplateRuntimeImageConfigurationOutput) ToAkriConnectorTemplateRuntimeImageConfigurationOutputWithContext(ctx context.Context) AkriConnectorTemplateRuntimeImageConfigurationOutput {
	return o
}

func (o AkriConnectorTemplateRuntimeImageConfigurationOutput) ToAkriConnectorTemplateRuntimeImageConfigurationPtrOutput() AkriConnectorTemplateRuntimeImageConfigurationPtrOutput {
	return o.ToAkriConnectorTemplateRuntimeImageConfigurationPtrOutputWithContext(context.Background())
}

func (o AkriConnectorTemplateRuntimeImageConfigurationOutput) ToAkriConnectorTemplateRuntimeImageConfigurationPtrOutputWithContext(ctx context.Context) AkriConnectorTemplateRuntimeImageConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AkriConnectorTemplateRuntimeImageConfiguration) *AkriConnectorTemplateRuntimeImageConfiguration {
		return &v
	}).(AkriConnectorTemplateRuntimeImageConfigurationPtrOutput)
}

// Additional configuration for the image of the managed configuration.
func (o AkriConnectorTemplateRuntimeImageConfigurationOutput) AdditionalConfiguration() pulumi.StringMapOutput {
	return o.ApplyT(func(v AkriConnectorTemplateRuntimeImageConfiguration) map[string]string {
		return v.AdditionalConfiguration
	}).(pulumi.StringMapOutput)
}

// Allocation settings for the managed configuration.
func (o AkriConnectorTemplateRuntimeImageConfigurationOutput) Allocation() AkriConnectorTemplateBucketizedAllocationPtrOutput {
	return o.ApplyT(func(v AkriConnectorTemplateRuntimeImageConfiguration) *AkriConnectorTemplateBucketizedAllocation {
		return v.Allocation
	}).(AkriConnectorTemplateBucketizedAllocationPtrOutput)
}

// The image configuration settings.
func (o AkriConnectorTemplateRuntimeImageConfigurationOutput) ImageConfigurationSettings() AkriConnectorTemplateRuntimeImageConfigurationSettingsOutput {
	return o.ApplyT(func(v AkriConnectorTemplateRuntimeImageConfiguration) AkriConnectorTemplateRuntimeImageConfigurationSettings {
		return v.ImageConfigurationSettings
	}).(AkriConnectorTemplateRuntimeImageConfigurationSettingsOutput)
}

// Managed configuration types.
// Expected value is 'ImageConfiguration'.
func (o AkriConnectorTemplateRuntimeImageConfigurationOutput) ManagedConfigurationType() pulumi.StringOutput {
	return o.ApplyT(func(v AkriConnectorTemplateRuntimeImageConfiguration) string { return v.ManagedConfigurationType }).(pulumi.StringOutput)
}

// The persistent volume claim templates for the managed configuration.
// See https://raw.githubusercontent.com/kubernetes/kubernetes/refs/heads/master/api/openapi-spec/v3/apis__apps__v1_openapi.json.
func (o AkriConnectorTemplateRuntimeImageConfigurationOutput) PersistentVolumeClaimTemplates() pulumi.ArrayOutput {
	return o.ApplyT(func(v AkriConnectorTemplateRuntimeImageConfiguration) []interface{} {
		return v.PersistentVolumeClaimTemplates
	}).(pulumi.ArrayOutput)
}

// The persistent volume claims for the managed configuration.
func (o AkriConnectorTemplateRuntimeImageConfigurationOutput) PersistentVolumeClaims() AkriConnectorTemplatePersistentVolumeClaimArrayOutput {
	return o.ApplyT(func(v AkriConnectorTemplateRuntimeImageConfiguration) []AkriConnectorTemplatePersistentVolumeClaim {
		return v.PersistentVolumeClaims
	}).(AkriConnectorTemplatePersistentVolumeClaimArrayOutput)
}

// Connector secrets that will be mounted onto all connector instances.
func (o AkriConnectorTemplateRuntimeImageConfigurationOutput) Secrets() AkriConnectorsSecretArrayOutput {
	return o.ApplyT(func(v AkriConnectorTemplateRuntimeImageConfiguration) []AkriConnectorsSecret { return v.Secrets }).(AkriConnectorsSecretArrayOutput)
}

// Trust list for the connector. This is used to specify the certificates that all connector instances should trust.
func (o AkriConnectorTemplateRuntimeImageConfigurationOutput) TrustSettings() AkriConnectorTemplateTrustListPtrOutput {
	return o.ApplyT(func(v AkriConnectorTemplateRuntimeImageConfiguration) *AkriConnectorTemplateTrustList {
		return v.TrustSettings
	}).(AkriConnectorTemplateTrustListPtrOutput)
}

type AkriConnectorTemplateRuntimeImageConfigurationPtrOutput struct{ *pulumi.OutputState }

func (AkriConnectorTemplateRuntimeImageConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AkriConnectorTemplateRuntimeImageConfiguration)(nil)).Elem()
}

func (o AkriConnectorTemplateRuntimeImageConfigurationPtrOutput) ToAkriConnectorTemplateRuntimeImageConfigurationPtrOutput() AkriConnectorTemplateRuntimeImageConfigurationPtrOutput {
	return o
}

func (o AkriConnectorTemplateRuntimeImageConfigurationPtrOutput) ToAkriConnectorTemplateRuntimeImageConfigurationPtrOutputWithContext(ctx context.Context) AkriConnectorTemplateRuntimeImageConfigurationPtrOutput {
	return o
}

func (o AkriConnectorTemplateRuntimeImageConfigurationPtrOutput) Elem() AkriConnectorTemplateRuntimeImageConfigurationOutput {
	return o.ApplyT(func(v *AkriConnectorTemplateRuntimeImageConfiguration) AkriConnectorTemplateRuntimeImageConfiguration {
		if v != nil {
			return *v
		}
		var ret AkriConnectorTemplateRuntimeImageConfiguration
		return ret
	}).(AkriConnectorTemplateRuntimeImageConfigurationOutput)
}

// Additional configuration for the image of the managed configuration.
func (o AkriConnectorTemplateRuntimeImageConfigurationPtrOutput) AdditionalConfiguration() pulumi.StringMapOutput {
	return o.ApplyT(func(v *AkriConnectorTemplateRuntimeImageConfiguration) map[string]string {
		if v == nil {
			return nil
		}
		return v.AdditionalConfiguration
	}).(pulumi.StringMapOutput)
}

// Allocation settings for the managed configuration.
func (o AkriConnectorTemplateRuntimeImageConfigurationPtrOutput) Allocation() AkriConnectorTemplateBucketizedAllocationPtrOutput {
	return o.ApplyT(func(v *AkriConnectorTemplateRuntimeImageConfiguration) *AkriConnectorTemplateBucketizedAllocation {
		if v == nil {
			return nil
		}
		return v.Allocation
	}).(AkriConnectorTemplateBucketizedAllocationPtrOutput)
}

// The image configuration settings.
func (o AkriConnectorTemplateRuntimeImageConfigurationPtrOutput) ImageConfigurationSettings() AkriConnectorTemplateRuntimeImageConfigurationSettingsPtrOutput {
	return o.ApplyT(func(v *AkriConnectorTemplateRuntimeImageConfiguration) *AkriConnectorTemplateRuntimeImageConfigurationSettings {
		if v == nil {
			return nil
		}
		return &v.ImageConfigurationSettings
	}).(AkriConnectorTemplateRuntimeImageConfigurationSettingsPtrOutput)
}

// Managed configuration types.
// Expected value is 'ImageConfiguration'.
func (o AkriConnectorTemplateRuntimeImageConfigurationPtrOutput) ManagedConfigurationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AkriConnectorTemplateRuntimeImageConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.ManagedConfigurationType
	}).(pulumi.StringPtrOutput)
}

// The persistent volume claim templates for the managed configuration.
// See https://raw.githubusercontent.com/kubernetes/kubernetes/refs/heads/master/api/openapi-spec/v3/apis__apps__v1_openapi.json.
func (o AkriConnectorTemplateRuntimeImageConfigurationPtrOutput) PersistentVolumeClaimTemplates() pulumi.ArrayOutput {
	return o.ApplyT(func(v *AkriConnectorTemplateRuntimeImageConfiguration) []interface{} {
		if v == nil {
			return nil
		}
		return v.PersistentVolumeClaimTemplates
	}).(pulumi.ArrayOutput)
}

// The persistent volume claims for the managed configuration.
func (o AkriConnectorTemplateRuntimeImageConfigurationPtrOutput) PersistentVolumeClaims() AkriConnectorTemplatePersistentVolumeClaimArrayOutput {
	return o.ApplyT(func(v *AkriConnectorTemplateRuntimeImageConfiguration) []AkriConnectorTemplatePersistentVolumeClaim {
		if v == nil {
			return nil
		}
		return v.PersistentVolumeClaims
	}).(AkriConnectorTemplatePersistentVolumeClaimArrayOutput)
}

// Connector secrets that will be mounted onto all connector instances.
func (o AkriConnectorTemplateRuntimeImageConfigurationPtrOutput) Secrets() AkriConnectorsSecretArrayOutput {
	return o.ApplyT(func(v *AkriConnectorTemplateRuntimeImageConfiguration) []AkriConnectorsSecret {
		if v == nil {
			return nil
		}
		return v.Secrets
	}).(AkriConnectorsSecretArrayOutput)
}

// Trust list for the connector. This is used to specify the certificates that all connector instances should trust.
func (o AkriConnectorTemplateRuntimeImageConfigurationPtrOutput) TrustSettings() AkriConnectorTemplateTrustListPtrOutput {
	return o.ApplyT(func(v *AkriConnectorTemplateRuntimeImageConfiguration) *AkriConnectorTemplateTrustList {
		if v == nil {
			return nil
		}
		return v.TrustSettings
	}).(AkriConnectorTemplateTrustListPtrOutput)
}

// AkriConnectorTemplateRuntimeImageConfiguration properties.
type AkriConnectorTemplateRuntimeImageConfigurationResponse struct {
	// Additional configuration for the image of the managed configuration.
	AdditionalConfiguration map[string]string `pulumi:"additionalConfiguration"`
	// Allocation settings for the managed configuration.
	Allocation *AkriConnectorTemplateBucketizedAllocationResponse `pulumi:"allocation"`
	// The image configuration settings.
	ImageConfigurationSettings AkriConnectorTemplateRuntimeImageConfigurationSettingsResponse `pulumi:"imageConfigurationSettings"`
	// Managed configuration types.
	// Expected value is 'ImageConfiguration'.
	ManagedConfigurationType string `pulumi:"managedConfigurationType"`
	// The persistent volume claim templates for the managed configuration.
	// See https://raw.githubusercontent.com/kubernetes/kubernetes/refs/heads/master/api/openapi-spec/v3/apis__apps__v1_openapi.json.
	PersistentVolumeClaimTemplates []interface{} `pulumi:"persistentVolumeClaimTemplates"`
	// The persistent volume claims for the managed configuration.
	PersistentVolumeClaims []AkriConnectorTemplatePersistentVolumeClaimResponse `pulumi:"persistentVolumeClaims"`
	// Connector secrets that will be mounted onto all connector instances.
	Secrets []AkriConnectorsSecretResponse `pulumi:"secrets"`
	// Trust list for the connector. This is used to specify the certificates that all connector instances should trust.
	TrustSettings *AkriConnectorTemplateTrustListResponse `pulumi:"trustSettings"`
}

// AkriConnectorTemplateRuntimeImageConfiguration properties.
type AkriConnectorTemplateRuntimeImageConfigurationResponseOutput struct{ *pulumi.OutputState }

func (AkriConnectorTemplateRuntimeImageConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AkriConnectorTemplateRuntimeImageConfigurationResponse)(nil)).Elem()
}

func (o AkriConnectorTemplateRuntimeImageConfigurationResponseOutput) ToAkriConnectorTemplateRuntimeImageConfigurationResponseOutput() AkriConnectorTemplateRuntimeImageConfigurationResponseOutput {
	return o
}

func (o AkriConnectorTemplateRuntimeImageConfigurationResponseOutput) ToAkriConnectorTemplateRuntimeImageConfigurationResponseOutputWithContext(ctx context.Context) AkriConnectorTemplateRuntimeImageConfigurationResponseOutput {
	return o
}

// Additional configuration for the image of the managed configuration.
func (o AkriConnectorTemplateRuntimeImageConfigurationResponseOutput) AdditionalConfiguration() pulumi.StringMapOutput {
	return o.ApplyT(func(v AkriConnectorTemplateRuntimeImageConfigurationResponse) map[string]string {
		return v.AdditionalConfiguration
	}).(pulumi.StringMapOutput)
}

// Allocation settings for the managed configuration.
func (o AkriConnectorTemplateRuntimeImageConfigurationResponseOutput) Allocation() AkriConnectorTemplateBucketizedAllocationResponsePtrOutput {
	return o.ApplyT(func(v AkriConnectorTemplateRuntimeImageConfigurationResponse) *AkriConnectorTemplateBucketizedAllocationResponse {
		return v.Allocation
	}).(AkriConnectorTemplateBucketizedAllocationResponsePtrOutput)
}

// The image configuration settings.
func (o AkriConnectorTemplateRuntimeImageConfigurationResponseOutput) ImageConfigurationSettings() AkriConnectorTemplateRuntimeImageConfigurationSettingsResponseOutput {
	return o.ApplyT(func(v AkriConnectorTemplateRuntimeImageConfigurationResponse) AkriConnectorTemplateRuntimeImageConfigurationSettingsResponse {
		return v.ImageConfigurationSettings
	}).(AkriConnectorTemplateRuntimeImageConfigurationSettingsResponseOutput)
}

// Managed configuration types.
// Expected value is 'ImageConfiguration'.
func (o AkriConnectorTemplateRuntimeImageConfigurationResponseOutput) ManagedConfigurationType() pulumi.StringOutput {
	return o.ApplyT(func(v AkriConnectorTemplateRuntimeImageConfigurationResponse) string {
		return v.ManagedConfigurationType
	}).(pulumi.StringOutput)
}

// The persistent volume claim templates for the managed configuration.
// See https://raw.githubusercontent.com/kubernetes/kubernetes/refs/heads/master/api/openapi-spec/v3/apis__apps__v1_openapi.json.
func (o AkriConnectorTemplateRuntimeImageConfigurationResponseOutput) PersistentVolumeClaimTemplates() pulumi.ArrayOutput {
	return o.ApplyT(func(v AkriConnectorTemplateRuntimeImageConfigurationResponse) []interface{} {
		return v.PersistentVolumeClaimTemplates
	}).(pulumi.ArrayOutput)
}

// The persistent volume claims for the managed configuration.
func (o AkriConnectorTemplateRuntimeImageConfigurationResponseOutput) PersistentVolumeClaims() AkriConnectorTemplatePersistentVolumeClaimResponseArrayOutput {
	return o.ApplyT(func(v AkriConnectorTemplateRuntimeImageConfigurationResponse) []AkriConnectorTemplatePersistentVolumeClaimResponse {
		return v.PersistentVolumeClaims
	}).(AkriConnectorTemplatePersistentVolumeClaimResponseArrayOutput)
}

// Connector secrets that will be mounted onto all connector instances.
func (o AkriConnectorTemplateRuntimeImageConfigurationResponseOutput) Secrets() AkriConnectorsSecretResponseArrayOutput {
	return o.ApplyT(func(v AkriConnectorTemplateRuntimeImageConfigurationResponse) []AkriConnectorsSecretResponse {
		return v.Secrets
	}).(AkriConnectorsSecretResponseArrayOutput)
}

// Trust list for the connector. This is used to specify the certificates that all connector instances should trust.
func (o AkriConnectorTemplateRuntimeImageConfigurationResponseOutput) TrustSettings() AkriConnectorTemplateTrustListResponsePtrOutput {
	return o.ApplyT(func(v AkriConnectorTemplateRuntimeImageConfigurationResponse) *AkriConnectorTemplateTrustListResponse {
		return v.TrustSettings
	}).(AkriConnectorTemplateTrustListResponsePtrOutput)
}

// AkriConnectorTemplateRuntimeImageConfiguration properties.
type AkriConnectorTemplateRuntimeImageConfigurationSettings struct {
	// The image name without any registry reference, tag or digest.
	ImageName string `pulumi:"imageName"`
	// The pull policy of the image.
	ImagePullPolicy *string `pulumi:"imagePullPolicy"`
	// The registry settings for the image. You can omit this field if using the default docker hub repository or using a local image.
	RegistrySettings interface{} `pulumi:"registrySettings"`
	// The number of replicas to be set up.
	Replicas *int `pulumi:"replicas"`
	// Optional image tag or digest. If not specified, the default tag is `latest`.
	TagDigestSettings interface{} `pulumi:"tagDigestSettings"`
}

// AkriConnectorTemplateRuntimeImageConfigurationSettingsInput is an input type that accepts AkriConnectorTemplateRuntimeImageConfigurationSettingsArgs and AkriConnectorTemplateRuntimeImageConfigurationSettingsOutput values.
// You can construct a concrete instance of `AkriConnectorTemplateRuntimeImageConfigurationSettingsInput` via:
//
//	AkriConnectorTemplateRuntimeImageConfigurationSettingsArgs{...}
type AkriConnectorTemplateRuntimeImageConfigurationSettingsInput interface {
	pulumi.Input

	ToAkriConnectorTemplateRuntimeImageConfigurationSettingsOutput() AkriConnectorTemplateRuntimeImageConfigurationSettingsOutput
	ToAkriConnectorTemplateRuntimeImageConfigurationSettingsOutputWithContext(context.Context) AkriConnectorTemplateRuntimeImageConfigurationSettingsOutput
}

// AkriConnectorTemplateRuntimeImageConfiguration properties.
type AkriConnectorTemplateRuntimeImageConfigurationSettingsArgs struct {
	// The image name without any registry reference, tag or digest.
	ImageName pulumi.StringInput `pulumi:"imageName"`
	// The pull policy of the image.
	ImagePullPolicy pulumi.StringPtrInput `pulumi:"imagePullPolicy"`
	// The registry settings for the image. You can omit this field if using the default docker hub repository or using a local image.
	RegistrySettings pulumi.Input `pulumi:"registrySettings"`
	// The number of replicas to be set up.
	Replicas pulumi.IntPtrInput `pulumi:"replicas"`
	// Optional image tag or digest. If not specified, the default tag is `latest`.
	TagDigestSettings pulumi.Input `pulumi:"tagDigestSettings"`
}

func (AkriConnectorTemplateRuntimeImageConfigurationSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AkriConnectorTemplateRuntimeImageConfigurationSettings)(nil)).Elem()
}

func (i AkriConnectorTemplateRuntimeImageConfigurationSettingsArgs) ToAkriConnectorTemplateRuntimeImageConfigurationSettingsOutput() AkriConnectorTemplateRuntimeImageConfigurationSettingsOutput {
	return i.ToAkriConnectorTemplateRuntimeImageConfigurationSettingsOutputWithContext(context.Background())
}

func (i AkriConnectorTemplateRuntimeImageConfigurationSettingsArgs) ToAkriConnectorTemplateRuntimeImageConfigurationSettingsOutputWithContext(ctx context.Context) AkriConnectorTemplateRuntimeImageConfigurationSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AkriConnectorTemplateRuntimeImageConfigurationSettingsOutput)
}

func (i AkriConnectorTemplateRuntimeImageConfigurationSettingsArgs) ToAkriConnectorTemplateRuntimeImageConfigurationSettingsPtrOutput() AkriConnectorTemplateRuntimeImageConfigurationSettingsPtrOutput {
	return i.ToAkriConnectorTemplateRuntimeImageConfigurationSettingsPtrOutputWithContext(context.Background())
}

func (i AkriConnectorTemplateRuntimeImageConfigurationSettingsArgs) ToAkriConnectorTemplateRuntimeImageConfigurationSettingsPtrOutputWithContext(ctx context.Context) AkriConnectorTemplateRuntimeImageConfigurationSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AkriConnectorTemplateRuntimeImageConfigurationSettingsOutput).ToAkriConnectorTemplateRuntimeImageConfigurationSettingsPtrOutputWithContext(ctx)
}

// AkriConnectorTemplateRuntimeImageConfigurationSettingsPtrInput is an input type that accepts AkriConnectorTemplateRuntimeImageConfigurationSettingsArgs, AkriConnectorTemplateRuntimeImageConfigurationSettingsPtr and AkriConnectorTemplateRuntimeImageConfigurationSettingsPtrOutput values.
// You can construct a concrete instance of `AkriConnectorTemplateRuntimeImageConfigurationSettingsPtrInput` via:
//
//	        AkriConnectorTemplateRuntimeImageConfigurationSettingsArgs{...}
//
//	or:
//
//	        nil
type AkriConnectorTemplateRuntimeImageConfigurationSettingsPtrInput interface {
	pulumi.Input

	ToAkriConnectorTemplateRuntimeImageConfigurationSettingsPtrOutput() AkriConnectorTemplateRuntimeImageConfigurationSettingsPtrOutput
	ToAkriConnectorTemplateRuntimeImageConfigurationSettingsPtrOutputWithContext(context.Context) AkriConnectorTemplateRuntimeImageConfigurationSettingsPtrOutput
}

type akriConnectorTemplateRuntimeImageConfigurationSettingsPtrType AkriConnectorTemplateRuntimeImageConfigurationSettingsArgs

func AkriConnectorTemplateRuntimeImageConfigurationSettingsPtr(v *AkriConnectorTemplateRuntimeImageConfigurationSettingsArgs) AkriConnectorTemplateRuntimeImageConfigurationSettingsPtrInput {
	return (*akriConnectorTemplateRuntimeImageConfigurationSettingsPtrType)(v)
}

func (*akriConnectorTemplateRuntimeImageConfigurationSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AkriConnectorTemplateRuntimeImageConfigurationSettings)(nil)).Elem()
}

func (i *akriConnectorTemplateRuntimeImageConfigurationSettingsPtrType) ToAkriConnectorTemplateRuntimeImageConfigurationSettingsPtrOutput() AkriConnectorTemplateRuntimeImageConfigurationSettingsPtrOutput {
	return i.ToAkriConnectorTemplateRuntimeImageConfigurationSettingsPtrOutputWithContext(context.Background())
}

func (i *akriConnectorTemplateRuntimeImageConfigurationSettingsPtrType) ToAkriConnectorTemplateRuntimeImageConfigurationSettingsPtrOutputWithContext(ctx context.Context) AkriConnectorTemplateRuntimeImageConfigurationSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AkriConnectorTemplateRuntimeImageConfigurationSettingsPtrOutput)
}

// AkriConnectorTemplateRuntimeImageConfiguration properties.
type AkriConnectorTemplateRuntimeImageConfigurationSettingsOutput struct{ *pulumi.OutputState }

func (AkriConnectorTemplateRuntimeImageConfigurationSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AkriConnectorTemplateRuntimeImageConfigurationSettings)(nil)).Elem()
}

func (o AkriConnectorTemplateRuntimeImageConfigurationSettingsOutput) ToAkriConnectorTemplateRuntimeImageConfigurationSettingsOutput() AkriConnectorTemplateRuntimeImageConfigurationSettingsOutput {
	return o
}

func (o AkriConnectorTemplateRuntimeImageConfigurationSettingsOutput) ToAkriConnectorTemplateRuntimeImageConfigurationSettingsOutputWithContext(ctx context.Context) AkriConnectorTemplateRuntimeImageConfigurationSettingsOutput {
	return o
}

func (o AkriConnectorTemplateRuntimeImageConfigurationSettingsOutput) ToAkriConnectorTemplateRuntimeImageConfigurationSettingsPtrOutput() AkriConnectorTemplateRuntimeImageConfigurationSettingsPtrOutput {
	return o.ToAkriConnectorTemplateRuntimeImageConfigurationSettingsPtrOutputWithContext(context.Background())
}

func (o AkriConnectorTemplateRuntimeImageConfigurationSettingsOutput) ToAkriConnectorTemplateRuntimeImageConfigurationSettingsPtrOutputWithContext(ctx context.Context) AkriConnectorTemplateRuntimeImageConfigurationSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AkriConnectorTemplateRuntimeImageConfigurationSettings) *AkriConnectorTemplateRuntimeImageConfigurationSettings {
		return &v
	}).(AkriConnectorTemplateRuntimeImageConfigurationSettingsPtrOutput)
}

// The image name without any registry reference, tag or digest.
func (o AkriConnectorTemplateRuntimeImageConfigurationSettingsOutput) ImageName() pulumi.StringOutput {
	return o.ApplyT(func(v AkriConnectorTemplateRuntimeImageConfigurationSettings) string { return v.ImageName }).(pulumi.StringOutput)
}

// The pull policy of the image.
func (o AkriConnectorTemplateRuntimeImageConfigurationSettingsOutput) ImagePullPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AkriConnectorTemplateRuntimeImageConfigurationSettings) *string { return v.ImagePullPolicy }).(pulumi.StringPtrOutput)
}

// The registry settings for the image. You can omit this field if using the default docker hub repository or using a local image.
func (o AkriConnectorTemplateRuntimeImageConfigurationSettingsOutput) RegistrySettings() pulumi.AnyOutput {
	return o.ApplyT(func(v AkriConnectorTemplateRuntimeImageConfigurationSettings) interface{} { return v.RegistrySettings }).(pulumi.AnyOutput)
}

// The number of replicas to be set up.
func (o AkriConnectorTemplateRuntimeImageConfigurationSettingsOutput) Replicas() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AkriConnectorTemplateRuntimeImageConfigurationSettings) *int { return v.Replicas }).(pulumi.IntPtrOutput)
}

// Optional image tag or digest. If not specified, the default tag is `latest`.
func (o AkriConnectorTemplateRuntimeImageConfigurationSettingsOutput) TagDigestSettings() pulumi.AnyOutput {
	return o.ApplyT(func(v AkriConnectorTemplateRuntimeImageConfigurationSettings) interface{} { return v.TagDigestSettings }).(pulumi.AnyOutput)
}

type AkriConnectorTemplateRuntimeImageConfigurationSettingsPtrOutput struct{ *pulumi.OutputState }

func (AkriConnectorTemplateRuntimeImageConfigurationSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AkriConnectorTemplateRuntimeImageConfigurationSettings)(nil)).Elem()
}

func (o AkriConnectorTemplateRuntimeImageConfigurationSettingsPtrOutput) ToAkriConnectorTemplateRuntimeImageConfigurationSettingsPtrOutput() AkriConnectorTemplateRuntimeImageConfigurationSettingsPtrOutput {
	return o
}

func (o AkriConnectorTemplateRuntimeImageConfigurationSettingsPtrOutput) ToAkriConnectorTemplateRuntimeImageConfigurationSettingsPtrOutputWithContext(ctx context.Context) AkriConnectorTemplateRuntimeImageConfigurationSettingsPtrOutput {
	return o
}

func (o AkriConnectorTemplateRuntimeImageConfigurationSettingsPtrOutput) Elem() AkriConnectorTemplateRuntimeImageConfigurationSettingsOutput {
	return o.ApplyT(func(v *AkriConnectorTemplateRuntimeImageConfigurationSettings) AkriConnectorTemplateRuntimeImageConfigurationSettings {
		if v != nil {
			return *v
		}
		var ret AkriConnectorTemplateRuntimeImageConfigurationSettings
		return ret
	}).(AkriConnectorTemplateRuntimeImageConfigurationSettingsOutput)
}

// The image name without any registry reference, tag or digest.
func (o AkriConnectorTemplateRuntimeImageConfigurationSettingsPtrOutput) ImageName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AkriConnectorTemplateRuntimeImageConfigurationSettings) *string {
		if v == nil {
			return nil
		}
		return &v.ImageName
	}).(pulumi.StringPtrOutput)
}

// The pull policy of the image.
func (o AkriConnectorTemplateRuntimeImageConfigurationSettingsPtrOutput) ImagePullPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AkriConnectorTemplateRuntimeImageConfigurationSettings) *string {
		if v == nil {
			return nil
		}
		return v.ImagePullPolicy
	}).(pulumi.StringPtrOutput)
}

// The registry settings for the image. You can omit this field if using the default docker hub repository or using a local image.
func (o AkriConnectorTemplateRuntimeImageConfigurationSettingsPtrOutput) RegistrySettings() pulumi.AnyOutput {
	return o.ApplyT(func(v *AkriConnectorTemplateRuntimeImageConfigurationSettings) interface{} {
		if v == nil {
			return nil
		}
		return v.RegistrySettings
	}).(pulumi.AnyOutput)
}

// The number of replicas to be set up.
func (o AkriConnectorTemplateRuntimeImageConfigurationSettingsPtrOutput) Replicas() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AkriConnectorTemplateRuntimeImageConfigurationSettings) *int {
		if v == nil {
			return nil
		}
		return v.Replicas
	}).(pulumi.IntPtrOutput)
}

// Optional image tag or digest. If not specified, the default tag is `latest`.
func (o AkriConnectorTemplateRuntimeImageConfigurationSettingsPtrOutput) TagDigestSettings() pulumi.AnyOutput {
	return o.ApplyT(func(v *AkriConnectorTemplateRuntimeImageConfigurationSettings) interface{} {
		if v == nil {
			return nil
		}
		return v.TagDigestSettings
	}).(pulumi.AnyOutput)
}

// AkriConnectorTemplateRuntimeImageConfiguration properties.
type AkriConnectorTemplateRuntimeImageConfigurationSettingsResponse struct {
	// The image name without any registry reference, tag or digest.
	ImageName string `pulumi:"imageName"`
	// The pull policy of the image.
	ImagePullPolicy *string `pulumi:"imagePullPolicy"`
	// The registry settings for the image. You can omit this field if using the default docker hub repository or using a local image.
	RegistrySettings interface{} `pulumi:"registrySettings"`
	// The number of replicas to be set up.
	Replicas *int `pulumi:"replicas"`
	// Optional image tag or digest. If not specified, the default tag is `latest`.
	TagDigestSettings interface{} `pulumi:"tagDigestSettings"`
}

// AkriConnectorTemplateRuntimeImageConfiguration properties.
type AkriConnectorTemplateRuntimeImageConfigurationSettingsResponseOutput struct{ *pulumi.OutputState }

func (AkriConnectorTemplateRuntimeImageConfigurationSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AkriConnectorTemplateRuntimeImageConfigurationSettingsResponse)(nil)).Elem()
}

func (o AkriConnectorTemplateRuntimeImageConfigurationSettingsResponseOutput) ToAkriConnectorTemplateRuntimeImageConfigurationSettingsResponseOutput() AkriConnectorTemplateRuntimeImageConfigurationSettingsResponseOutput {
	return o
}

func (o AkriConnectorTemplateRuntimeImageConfigurationSettingsResponseOutput) ToAkriConnectorTemplateRuntimeImageConfigurationSettingsResponseOutputWithContext(ctx context.Context) AkriConnectorTemplateRuntimeImageConfigurationSettingsResponseOutput {
	return o
}

// The image name without any registry reference, tag or digest.
func (o AkriConnectorTemplateRuntimeImageConfigurationSettingsResponseOutput) ImageName() pulumi.StringOutput {
	return o.ApplyT(func(v AkriConnectorTemplateRuntimeImageConfigurationSettingsResponse) string { return v.ImageName }).(pulumi.StringOutput)
}

// The pull policy of the image.
func (o AkriConnectorTemplateRuntimeImageConfigurationSettingsResponseOutput) ImagePullPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AkriConnectorTemplateRuntimeImageConfigurationSettingsResponse) *string {
		return v.ImagePullPolicy
	}).(pulumi.StringPtrOutput)
}

// The registry settings for the image. You can omit this field if using the default docker hub repository or using a local image.
func (o AkriConnectorTemplateRuntimeImageConfigurationSettingsResponseOutput) RegistrySettings() pulumi.AnyOutput {
	return o.ApplyT(func(v AkriConnectorTemplateRuntimeImageConfigurationSettingsResponse) interface{} {
		return v.RegistrySettings
	}).(pulumi.AnyOutput)
}

// The number of replicas to be set up.
func (o AkriConnectorTemplateRuntimeImageConfigurationSettingsResponseOutput) Replicas() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AkriConnectorTemplateRuntimeImageConfigurationSettingsResponse) *int { return v.Replicas }).(pulumi.IntPtrOutput)
}

// Optional image tag or digest. If not specified, the default tag is `latest`.
func (o AkriConnectorTemplateRuntimeImageConfigurationSettingsResponseOutput) TagDigestSettings() pulumi.AnyOutput {
	return o.ApplyT(func(v AkriConnectorTemplateRuntimeImageConfigurationSettingsResponse) interface{} {
		return v.TagDigestSettings
	}).(pulumi.AnyOutput)
}

// AkriConnectorTemplateRuntimeStatefulSetConfiguration properties.
type AkriConnectorTemplateRuntimeStatefulSetConfiguration struct {
	// Additional configuration for the image of the managed configuration.
	AdditionalConfiguration map[string]string `pulumi:"additionalConfiguration"`
	// Allocation settings for the managed configuration.
	Allocation *AkriConnectorTemplateBucketizedAllocation `pulumi:"allocation"`
	// Managed configuration types.
	// Expected value is 'StatefulSetConfiguration'.
	ManagedConfigurationType string `pulumi:"managedConfigurationType"`
	// The persistent volume claim templates for the managed configuration.
	// See https://raw.githubusercontent.com/kubernetes/kubernetes/refs/heads/master/api/openapi-spec/v3/apis__apps__v1_openapi.json.
	PersistentVolumeClaimTemplates []interface{} `pulumi:"persistentVolumeClaimTemplates"`
	// The persistent volume claims for the managed configuration.
	PersistentVolumeClaims []AkriConnectorTemplatePersistentVolumeClaim `pulumi:"persistentVolumeClaims"`
	// Connector secrets that will be mounted onto all connector instances.
	Secrets []AkriConnectorsSecret `pulumi:"secrets"`
	// The stateful set configuration settings. This corresponds to the Kubernetes StatefulSet resource.
	// See https://raw.githubusercontent.com/kubernetes/kubernetes/refs/heads/master/api/openapi-spec/v3/apis__apps__v1_openapi.json#/components/schemas/io.k8s.api.apps.v1.StatefulSetSpec
	StatefulSetConfigurationSettings interface{} `pulumi:"statefulSetConfigurationSettings"`
	// Trust list for the connector. This is used to specify the certificates that all connector instances should trust.
	TrustSettings *AkriConnectorTemplateTrustList `pulumi:"trustSettings"`
}

// AkriConnectorTemplateRuntimeStatefulSetConfigurationInput is an input type that accepts AkriConnectorTemplateRuntimeStatefulSetConfigurationArgs and AkriConnectorTemplateRuntimeStatefulSetConfigurationOutput values.
// You can construct a concrete instance of `AkriConnectorTemplateRuntimeStatefulSetConfigurationInput` via:
//
//	AkriConnectorTemplateRuntimeStatefulSetConfigurationArgs{...}
type AkriConnectorTemplateRuntimeStatefulSetConfigurationInput interface {
	pulumi.Input

	ToAkriConnectorTemplateRuntimeStatefulSetConfigurationOutput() AkriConnectorTemplateRuntimeStatefulSetConfigurationOutput
	ToAkriConnectorTemplateRuntimeStatefulSetConfigurationOutputWithContext(context.Context) AkriConnectorTemplateRuntimeStatefulSetConfigurationOutput
}

// AkriConnectorTemplateRuntimeStatefulSetConfiguration properties.
type AkriConnectorTemplateRuntimeStatefulSetConfigurationArgs struct {
	// Additional configuration for the image of the managed configuration.
	AdditionalConfiguration pulumi.StringMapInput `pulumi:"additionalConfiguration"`
	// Allocation settings for the managed configuration.
	Allocation AkriConnectorTemplateBucketizedAllocationPtrInput `pulumi:"allocation"`
	// Managed configuration types.
	// Expected value is 'StatefulSetConfiguration'.
	ManagedConfigurationType pulumi.StringInput `pulumi:"managedConfigurationType"`
	// The persistent volume claim templates for the managed configuration.
	// See https://raw.githubusercontent.com/kubernetes/kubernetes/refs/heads/master/api/openapi-spec/v3/apis__apps__v1_openapi.json.
	PersistentVolumeClaimTemplates pulumi.ArrayInput `pulumi:"persistentVolumeClaimTemplates"`
	// The persistent volume claims for the managed configuration.
	PersistentVolumeClaims AkriConnectorTemplatePersistentVolumeClaimArrayInput `pulumi:"persistentVolumeClaims"`
	// Connector secrets that will be mounted onto all connector instances.
	Secrets AkriConnectorsSecretArrayInput `pulumi:"secrets"`
	// The stateful set configuration settings. This corresponds to the Kubernetes StatefulSet resource.
	// See https://raw.githubusercontent.com/kubernetes/kubernetes/refs/heads/master/api/openapi-spec/v3/apis__apps__v1_openapi.json#/components/schemas/io.k8s.api.apps.v1.StatefulSetSpec
	StatefulSetConfigurationSettings pulumi.Input `pulumi:"statefulSetConfigurationSettings"`
	// Trust list for the connector. This is used to specify the certificates that all connector instances should trust.
	TrustSettings AkriConnectorTemplateTrustListPtrInput `pulumi:"trustSettings"`
}

func (AkriConnectorTemplateRuntimeStatefulSetConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AkriConnectorTemplateRuntimeStatefulSetConfiguration)(nil)).Elem()
}

func (i AkriConnectorTemplateRuntimeStatefulSetConfigurationArgs) ToAkriConnectorTemplateRuntimeStatefulSetConfigurationOutput() AkriConnectorTemplateRuntimeStatefulSetConfigurationOutput {
	return i.ToAkriConnectorTemplateRuntimeStatefulSetConfigurationOutputWithContext(context.Background())
}

func (i AkriConnectorTemplateRuntimeStatefulSetConfigurationArgs) ToAkriConnectorTemplateRuntimeStatefulSetConfigurationOutputWithContext(ctx context.Context) AkriConnectorTemplateRuntimeStatefulSetConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AkriConnectorTemplateRuntimeStatefulSetConfigurationOutput)
}

func (i AkriConnectorTemplateRuntimeStatefulSetConfigurationArgs) ToAkriConnectorTemplateRuntimeStatefulSetConfigurationPtrOutput() AkriConnectorTemplateRuntimeStatefulSetConfigurationPtrOutput {
	return i.ToAkriConnectorTemplateRuntimeStatefulSetConfigurationPtrOutputWithContext(context.Background())
}

func (i AkriConnectorTemplateRuntimeStatefulSetConfigurationArgs) ToAkriConnectorTemplateRuntimeStatefulSetConfigurationPtrOutputWithContext(ctx context.Context) AkriConnectorTemplateRuntimeStatefulSetConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AkriConnectorTemplateRuntimeStatefulSetConfigurationOutput).ToAkriConnectorTemplateRuntimeStatefulSetConfigurationPtrOutputWithContext(ctx)
}

// AkriConnectorTemplateRuntimeStatefulSetConfigurationPtrInput is an input type that accepts AkriConnectorTemplateRuntimeStatefulSetConfigurationArgs, AkriConnectorTemplateRuntimeStatefulSetConfigurationPtr and AkriConnectorTemplateRuntimeStatefulSetConfigurationPtrOutput values.
// You can construct a concrete instance of `AkriConnectorTemplateRuntimeStatefulSetConfigurationPtrInput` via:
//
//	        AkriConnectorTemplateRuntimeStatefulSetConfigurationArgs{...}
//
//	or:
//
//	        nil
type AkriConnectorTemplateRuntimeStatefulSetConfigurationPtrInput interface {
	pulumi.Input

	ToAkriConnectorTemplateRuntimeStatefulSetConfigurationPtrOutput() AkriConnectorTemplateRuntimeStatefulSetConfigurationPtrOutput
	ToAkriConnectorTemplateRuntimeStatefulSetConfigurationPtrOutputWithContext(context.Context) AkriConnectorTemplateRuntimeStatefulSetConfigurationPtrOutput
}

type akriConnectorTemplateRuntimeStatefulSetConfigurationPtrType AkriConnectorTemplateRuntimeStatefulSetConfigurationArgs

func AkriConnectorTemplateRuntimeStatefulSetConfigurationPtr(v *AkriConnectorTemplateRuntimeStatefulSetConfigurationArgs) AkriConnectorTemplateRuntimeStatefulSetConfigurationPtrInput {
	return (*akriConnectorTemplateRuntimeStatefulSetConfigurationPtrType)(v)
}

func (*akriConnectorTemplateRuntimeStatefulSetConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AkriConnectorTemplateRuntimeStatefulSetConfiguration)(nil)).Elem()
}

func (i *akriConnectorTemplateRuntimeStatefulSetConfigurationPtrType) ToAkriConnectorTemplateRuntimeStatefulSetConfigurationPtrOutput() AkriConnectorTemplateRuntimeStatefulSetConfigurationPtrOutput {
	return i.ToAkriConnectorTemplateRuntimeStatefulSetConfigurationPtrOutputWithContext(context.Background())
}

func (i *akriConnectorTemplateRuntimeStatefulSetConfigurationPtrType) ToAkriConnectorTemplateRuntimeStatefulSetConfigurationPtrOutputWithContext(ctx context.Context) AkriConnectorTemplateRuntimeStatefulSetConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AkriConnectorTemplateRuntimeStatefulSetConfigurationPtrOutput)
}

// AkriConnectorTemplateRuntimeStatefulSetConfiguration properties.
type AkriConnectorTemplateRuntimeStatefulSetConfigurationOutput struct{ *pulumi.OutputState }

func (AkriConnectorTemplateRuntimeStatefulSetConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AkriConnectorTemplateRuntimeStatefulSetConfiguration)(nil)).Elem()
}

func (o AkriConnectorTemplateRuntimeStatefulSetConfigurationOutput) ToAkriConnectorTemplateRuntimeStatefulSetConfigurationOutput() AkriConnectorTemplateRuntimeStatefulSetConfigurationOutput {
	return o
}

func (o AkriConnectorTemplateRuntimeStatefulSetConfigurationOutput) ToAkriConnectorTemplateRuntimeStatefulSetConfigurationOutputWithContext(ctx context.Context) AkriConnectorTemplateRuntimeStatefulSetConfigurationOutput {
	return o
}

func (o AkriConnectorTemplateRuntimeStatefulSetConfigurationOutput) ToAkriConnectorTemplateRuntimeStatefulSetConfigurationPtrOutput() AkriConnectorTemplateRuntimeStatefulSetConfigurationPtrOutput {
	return o.ToAkriConnectorTemplateRuntimeStatefulSetConfigurationPtrOutputWithContext(context.Background())
}

func (o AkriConnectorTemplateRuntimeStatefulSetConfigurationOutput) ToAkriConnectorTemplateRuntimeStatefulSetConfigurationPtrOutputWithContext(ctx context.Context) AkriConnectorTemplateRuntimeStatefulSetConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AkriConnectorTemplateRuntimeStatefulSetConfiguration) *AkriConnectorTemplateRuntimeStatefulSetConfiguration {
		return &v
	}).(AkriConnectorTemplateRuntimeStatefulSetConfigurationPtrOutput)
}

// Additional configuration for the image of the managed configuration.
func (o AkriConnectorTemplateRuntimeStatefulSetConfigurationOutput) AdditionalConfiguration() pulumi.StringMapOutput {
	return o.ApplyT(func(v AkriConnectorTemplateRuntimeStatefulSetConfiguration) map[string]string {
		return v.AdditionalConfiguration
	}).(pulumi.StringMapOutput)
}

// Allocation settings for the managed configuration.
func (o AkriConnectorTemplateRuntimeStatefulSetConfigurationOutput) Allocation() AkriConnectorTemplateBucketizedAllocationPtrOutput {
	return o.ApplyT(func(v AkriConnectorTemplateRuntimeStatefulSetConfiguration) *AkriConnectorTemplateBucketizedAllocation {
		return v.Allocation
	}).(AkriConnectorTemplateBucketizedAllocationPtrOutput)
}

// Managed configuration types.
// Expected value is 'StatefulSetConfiguration'.
func (o AkriConnectorTemplateRuntimeStatefulSetConfigurationOutput) ManagedConfigurationType() pulumi.StringOutput {
	return o.ApplyT(func(v AkriConnectorTemplateRuntimeStatefulSetConfiguration) string { return v.ManagedConfigurationType }).(pulumi.StringOutput)
}

// The persistent volume claim templates for the managed configuration.
// See https://raw.githubusercontent.com/kubernetes/kubernetes/refs/heads/master/api/openapi-spec/v3/apis__apps__v1_openapi.json.
func (o AkriConnectorTemplateRuntimeStatefulSetConfigurationOutput) PersistentVolumeClaimTemplates() pulumi.ArrayOutput {
	return o.ApplyT(func(v AkriConnectorTemplateRuntimeStatefulSetConfiguration) []interface{} {
		return v.PersistentVolumeClaimTemplates
	}).(pulumi.ArrayOutput)
}

// The persistent volume claims for the managed configuration.
func (o AkriConnectorTemplateRuntimeStatefulSetConfigurationOutput) PersistentVolumeClaims() AkriConnectorTemplatePersistentVolumeClaimArrayOutput {
	return o.ApplyT(func(v AkriConnectorTemplateRuntimeStatefulSetConfiguration) []AkriConnectorTemplatePersistentVolumeClaim {
		return v.PersistentVolumeClaims
	}).(AkriConnectorTemplatePersistentVolumeClaimArrayOutput)
}

// Connector secrets that will be mounted onto all connector instances.
func (o AkriConnectorTemplateRuntimeStatefulSetConfigurationOutput) Secrets() AkriConnectorsSecretArrayOutput {
	return o.ApplyT(func(v AkriConnectorTemplateRuntimeStatefulSetConfiguration) []AkriConnectorsSecret { return v.Secrets }).(AkriConnectorsSecretArrayOutput)
}

// The stateful set configuration settings. This corresponds to the Kubernetes StatefulSet resource.
// See https://raw.githubusercontent.com/kubernetes/kubernetes/refs/heads/master/api/openapi-spec/v3/apis__apps__v1_openapi.json#/components/schemas/io.k8s.api.apps.v1.StatefulSetSpec
func (o AkriConnectorTemplateRuntimeStatefulSetConfigurationOutput) StatefulSetConfigurationSettings() pulumi.AnyOutput {
	return o.ApplyT(func(v AkriConnectorTemplateRuntimeStatefulSetConfiguration) interface{} {
		return v.StatefulSetConfigurationSettings
	}).(pulumi.AnyOutput)
}

// Trust list for the connector. This is used to specify the certificates that all connector instances should trust.
func (o AkriConnectorTemplateRuntimeStatefulSetConfigurationOutput) TrustSettings() AkriConnectorTemplateTrustListPtrOutput {
	return o.ApplyT(func(v AkriConnectorTemplateRuntimeStatefulSetConfiguration) *AkriConnectorTemplateTrustList {
		return v.TrustSettings
	}).(AkriConnectorTemplateTrustListPtrOutput)
}

type AkriConnectorTemplateRuntimeStatefulSetConfigurationPtrOutput struct{ *pulumi.OutputState }

func (AkriConnectorTemplateRuntimeStatefulSetConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AkriConnectorTemplateRuntimeStatefulSetConfiguration)(nil)).Elem()
}

func (o AkriConnectorTemplateRuntimeStatefulSetConfigurationPtrOutput) ToAkriConnectorTemplateRuntimeStatefulSetConfigurationPtrOutput() AkriConnectorTemplateRuntimeStatefulSetConfigurationPtrOutput {
	return o
}

func (o AkriConnectorTemplateRuntimeStatefulSetConfigurationPtrOutput) ToAkriConnectorTemplateRuntimeStatefulSetConfigurationPtrOutputWithContext(ctx context.Context) AkriConnectorTemplateRuntimeStatefulSetConfigurationPtrOutput {
	return o
}

func (o AkriConnectorTemplateRuntimeStatefulSetConfigurationPtrOutput) Elem() AkriConnectorTemplateRuntimeStatefulSetConfigurationOutput {
	return o.ApplyT(func(v *AkriConnectorTemplateRuntimeStatefulSetConfiguration) AkriConnectorTemplateRuntimeStatefulSetConfiguration {
		if v != nil {
			return *v
		}
		var ret AkriConnectorTemplateRuntimeStatefulSetConfiguration
		return ret
	}).(AkriConnectorTemplateRuntimeStatefulSetConfigurationOutput)
}

// Additional configuration for the image of the managed configuration.
func (o AkriConnectorTemplateRuntimeStatefulSetConfigurationPtrOutput) AdditionalConfiguration() pulumi.StringMapOutput {
	return o.ApplyT(func(v *AkriConnectorTemplateRuntimeStatefulSetConfiguration) map[string]string {
		if v == nil {
			return nil
		}
		return v.AdditionalConfiguration
	}).(pulumi.StringMapOutput)
}

// Allocation settings for the managed configuration.
func (o AkriConnectorTemplateRuntimeStatefulSetConfigurationPtrOutput) Allocation() AkriConnectorTemplateBucketizedAllocationPtrOutput {
	return o.ApplyT(func(v *AkriConnectorTemplateRuntimeStatefulSetConfiguration) *AkriConnectorTemplateBucketizedAllocation {
		if v == nil {
			return nil
		}
		return v.Allocation
	}).(AkriConnectorTemplateBucketizedAllocationPtrOutput)
}

// Managed configuration types.
// Expected value is 'StatefulSetConfiguration'.
func (o AkriConnectorTemplateRuntimeStatefulSetConfigurationPtrOutput) ManagedConfigurationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AkriConnectorTemplateRuntimeStatefulSetConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.ManagedConfigurationType
	}).(pulumi.StringPtrOutput)
}

// The persistent volume claim templates for the managed configuration.
// See https://raw.githubusercontent.com/kubernetes/kubernetes/refs/heads/master/api/openapi-spec/v3/apis__apps__v1_openapi.json.
func (o AkriConnectorTemplateRuntimeStatefulSetConfigurationPtrOutput) PersistentVolumeClaimTemplates() pulumi.ArrayOutput {
	return o.ApplyT(func(v *AkriConnectorTemplateRuntimeStatefulSetConfiguration) []interface{} {
		if v == nil {
			return nil
		}
		return v.PersistentVolumeClaimTemplates
	}).(pulumi.ArrayOutput)
}

// The persistent volume claims for the managed configuration.
func (o AkriConnectorTemplateRuntimeStatefulSetConfigurationPtrOutput) PersistentVolumeClaims() AkriConnectorTemplatePersistentVolumeClaimArrayOutput {
	return o.ApplyT(func(v *AkriConnectorTemplateRuntimeStatefulSetConfiguration) []AkriConnectorTemplatePersistentVolumeClaim {
		if v == nil {
			return nil
		}
		return v.PersistentVolumeClaims
	}).(AkriConnectorTemplatePersistentVolumeClaimArrayOutput)
}

// Connector secrets that will be mounted onto all connector instances.
func (o AkriConnectorTemplateRuntimeStatefulSetConfigurationPtrOutput) Secrets() AkriConnectorsSecretArrayOutput {
	return o.ApplyT(func(v *AkriConnectorTemplateRuntimeStatefulSetConfiguration) []AkriConnectorsSecret {
		if v == nil {
			return nil
		}
		return v.Secrets
	}).(AkriConnectorsSecretArrayOutput)
}

// The stateful set configuration settings. This corresponds to the Kubernetes StatefulSet resource.
// See https://raw.githubusercontent.com/kubernetes/kubernetes/refs/heads/master/api/openapi-spec/v3/apis__apps__v1_openapi.json#/components/schemas/io.k8s.api.apps.v1.StatefulSetSpec
func (o AkriConnectorTemplateRuntimeStatefulSetConfigurationPtrOutput) StatefulSetConfigurationSettings() pulumi.AnyOutput {
	return o.ApplyT(func(v *AkriConnectorTemplateRuntimeStatefulSetConfiguration) interface{} {
		if v == nil {
			return nil
		}
		return v.StatefulSetConfigurationSettings
	}).(pulumi.AnyOutput)
}

// Trust list for the connector. This is used to specify the certificates that all connector instances should trust.
func (o AkriConnectorTemplateRuntimeStatefulSetConfigurationPtrOutput) TrustSettings() AkriConnectorTemplateTrustListPtrOutput {
	return o.ApplyT(func(v *AkriConnectorTemplateRuntimeStatefulSetConfiguration) *AkriConnectorTemplateTrustList {
		if v == nil {
			return nil
		}
		return v.TrustSettings
	}).(AkriConnectorTemplateTrustListPtrOutput)
}

// AkriConnectorTemplateRuntimeStatefulSetConfiguration properties.
type AkriConnectorTemplateRuntimeStatefulSetConfigurationResponse struct {
	// Additional configuration for the image of the managed configuration.
	AdditionalConfiguration map[string]string `pulumi:"additionalConfiguration"`
	// Allocation settings for the managed configuration.
	Allocation *AkriConnectorTemplateBucketizedAllocationResponse `pulumi:"allocation"`
	// Managed configuration types.
	// Expected value is 'StatefulSetConfiguration'.
	ManagedConfigurationType string `pulumi:"managedConfigurationType"`
	// The persistent volume claim templates for the managed configuration.
	// See https://raw.githubusercontent.com/kubernetes/kubernetes/refs/heads/master/api/openapi-spec/v3/apis__apps__v1_openapi.json.
	PersistentVolumeClaimTemplates []interface{} `pulumi:"persistentVolumeClaimTemplates"`
	// The persistent volume claims for the managed configuration.
	PersistentVolumeClaims []AkriConnectorTemplatePersistentVolumeClaimResponse `pulumi:"persistentVolumeClaims"`
	// Connector secrets that will be mounted onto all connector instances.
	Secrets []AkriConnectorsSecretResponse `pulumi:"secrets"`
	// The stateful set configuration settings. This corresponds to the Kubernetes StatefulSet resource.
	// See https://raw.githubusercontent.com/kubernetes/kubernetes/refs/heads/master/api/openapi-spec/v3/apis__apps__v1_openapi.json#/components/schemas/io.k8s.api.apps.v1.StatefulSetSpec
	StatefulSetConfigurationSettings interface{} `pulumi:"statefulSetConfigurationSettings"`
	// Trust list for the connector. This is used to specify the certificates that all connector instances should trust.
	TrustSettings *AkriConnectorTemplateTrustListResponse `pulumi:"trustSettings"`
}

// AkriConnectorTemplateRuntimeStatefulSetConfiguration properties.
type AkriConnectorTemplateRuntimeStatefulSetConfigurationResponseOutput struct{ *pulumi.OutputState }

func (AkriConnectorTemplateRuntimeStatefulSetConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AkriConnectorTemplateRuntimeStatefulSetConfigurationResponse)(nil)).Elem()
}

func (o AkriConnectorTemplateRuntimeStatefulSetConfigurationResponseOutput) ToAkriConnectorTemplateRuntimeStatefulSetConfigurationResponseOutput() AkriConnectorTemplateRuntimeStatefulSetConfigurationResponseOutput {
	return o
}

func (o AkriConnectorTemplateRuntimeStatefulSetConfigurationResponseOutput) ToAkriConnectorTemplateRuntimeStatefulSetConfigurationResponseOutputWithContext(ctx context.Context) AkriConnectorTemplateRuntimeStatefulSetConfigurationResponseOutput {
	return o
}

// Additional configuration for the image of the managed configuration.
func (o AkriConnectorTemplateRuntimeStatefulSetConfigurationResponseOutput) AdditionalConfiguration() pulumi.StringMapOutput {
	return o.ApplyT(func(v AkriConnectorTemplateRuntimeStatefulSetConfigurationResponse) map[string]string {
		return v.AdditionalConfiguration
	}).(pulumi.StringMapOutput)
}

// Allocation settings for the managed configuration.
func (o AkriConnectorTemplateRuntimeStatefulSetConfigurationResponseOutput) Allocation() AkriConnectorTemplateBucketizedAllocationResponsePtrOutput {
	return o.ApplyT(func(v AkriConnectorTemplateRuntimeStatefulSetConfigurationResponse) *AkriConnectorTemplateBucketizedAllocationResponse {
		return v.Allocation
	}).(AkriConnectorTemplateBucketizedAllocationResponsePtrOutput)
}

// Managed configuration types.
// Expected value is 'StatefulSetConfiguration'.
func (o AkriConnectorTemplateRuntimeStatefulSetConfigurationResponseOutput) ManagedConfigurationType() pulumi.StringOutput {
	return o.ApplyT(func(v AkriConnectorTemplateRuntimeStatefulSetConfigurationResponse) string {
		return v.ManagedConfigurationType
	}).(pulumi.StringOutput)
}

// The persistent volume claim templates for the managed configuration.
// See https://raw.githubusercontent.com/kubernetes/kubernetes/refs/heads/master/api/openapi-spec/v3/apis__apps__v1_openapi.json.
func (o AkriConnectorTemplateRuntimeStatefulSetConfigurationResponseOutput) PersistentVolumeClaimTemplates() pulumi.ArrayOutput {
	return o.ApplyT(func(v AkriConnectorTemplateRuntimeStatefulSetConfigurationResponse) []interface{} {
		return v.PersistentVolumeClaimTemplates
	}).(pulumi.ArrayOutput)
}

// The persistent volume claims for the managed configuration.
func (o AkriConnectorTemplateRuntimeStatefulSetConfigurationResponseOutput) PersistentVolumeClaims() AkriConnectorTemplatePersistentVolumeClaimResponseArrayOutput {
	return o.ApplyT(func(v AkriConnectorTemplateRuntimeStatefulSetConfigurationResponse) []AkriConnectorTemplatePersistentVolumeClaimResponse {
		return v.PersistentVolumeClaims
	}).(AkriConnectorTemplatePersistentVolumeClaimResponseArrayOutput)
}

// Connector secrets that will be mounted onto all connector instances.
func (o AkriConnectorTemplateRuntimeStatefulSetConfigurationResponseOutput) Secrets() AkriConnectorsSecretResponseArrayOutput {
	return o.ApplyT(func(v AkriConnectorTemplateRuntimeStatefulSetConfigurationResponse) []AkriConnectorsSecretResponse {
		return v.Secrets
	}).(AkriConnectorsSecretResponseArrayOutput)
}

// The stateful set configuration settings. This corresponds to the Kubernetes StatefulSet resource.
// See https://raw.githubusercontent.com/kubernetes/kubernetes/refs/heads/master/api/openapi-spec/v3/apis__apps__v1_openapi.json#/components/schemas/io.k8s.api.apps.v1.StatefulSetSpec
func (o AkriConnectorTemplateRuntimeStatefulSetConfigurationResponseOutput) StatefulSetConfigurationSettings() pulumi.AnyOutput {
	return o.ApplyT(func(v AkriConnectorTemplateRuntimeStatefulSetConfigurationResponse) interface{} {
		return v.StatefulSetConfigurationSettings
	}).(pulumi.AnyOutput)
}

// Trust list for the connector. This is used to specify the certificates that all connector instances should trust.
func (o AkriConnectorTemplateRuntimeStatefulSetConfigurationResponseOutput) TrustSettings() AkriConnectorTemplateTrustListResponsePtrOutput {
	return o.ApplyT(func(v AkriConnectorTemplateRuntimeStatefulSetConfigurationResponse) *AkriConnectorTemplateTrustListResponse {
		return v.TrustSettings
	}).(AkriConnectorTemplateTrustListResponsePtrOutput)
}

// AkriConnectorTemplateTrustList properties.
type AkriConnectorTemplateTrustList struct {
	// The secret reference for certificates to trust.
	TrustListSecretRef string `pulumi:"trustListSecretRef"`
}

// AkriConnectorTemplateTrustListInput is an input type that accepts AkriConnectorTemplateTrustListArgs and AkriConnectorTemplateTrustListOutput values.
// You can construct a concrete instance of `AkriConnectorTemplateTrustListInput` via:
//
//	AkriConnectorTemplateTrustListArgs{...}
type AkriConnectorTemplateTrustListInput interface {
	pulumi.Input

	ToAkriConnectorTemplateTrustListOutput() AkriConnectorTemplateTrustListOutput
	ToAkriConnectorTemplateTrustListOutputWithContext(context.Context) AkriConnectorTemplateTrustListOutput
}

// AkriConnectorTemplateTrustList properties.
type AkriConnectorTemplateTrustListArgs struct {
	// The secret reference for certificates to trust.
	TrustListSecretRef pulumi.StringInput `pulumi:"trustListSecretRef"`
}

func (AkriConnectorTemplateTrustListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AkriConnectorTemplateTrustList)(nil)).Elem()
}

func (i AkriConnectorTemplateTrustListArgs) ToAkriConnectorTemplateTrustListOutput() AkriConnectorTemplateTrustListOutput {
	return i.ToAkriConnectorTemplateTrustListOutputWithContext(context.Background())
}

func (i AkriConnectorTemplateTrustListArgs) ToAkriConnectorTemplateTrustListOutputWithContext(ctx context.Context) AkriConnectorTemplateTrustListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AkriConnectorTemplateTrustListOutput)
}

func (i AkriConnectorTemplateTrustListArgs) ToAkriConnectorTemplateTrustListPtrOutput() AkriConnectorTemplateTrustListPtrOutput {
	return i.ToAkriConnectorTemplateTrustListPtrOutputWithContext(context.Background())
}

func (i AkriConnectorTemplateTrustListArgs) ToAkriConnectorTemplateTrustListPtrOutputWithContext(ctx context.Context) AkriConnectorTemplateTrustListPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AkriConnectorTemplateTrustListOutput).ToAkriConnectorTemplateTrustListPtrOutputWithContext(ctx)
}

// AkriConnectorTemplateTrustListPtrInput is an input type that accepts AkriConnectorTemplateTrustListArgs, AkriConnectorTemplateTrustListPtr and AkriConnectorTemplateTrustListPtrOutput values.
// You can construct a concrete instance of `AkriConnectorTemplateTrustListPtrInput` via:
//
//	        AkriConnectorTemplateTrustListArgs{...}
//
//	or:
//
//	        nil
type AkriConnectorTemplateTrustListPtrInput interface {
	pulumi.Input

	ToAkriConnectorTemplateTrustListPtrOutput() AkriConnectorTemplateTrustListPtrOutput
	ToAkriConnectorTemplateTrustListPtrOutputWithContext(context.Context) AkriConnectorTemplateTrustListPtrOutput
}

type akriConnectorTemplateTrustListPtrType AkriConnectorTemplateTrustListArgs

func AkriConnectorTemplateTrustListPtr(v *AkriConnectorTemplateTrustListArgs) AkriConnectorTemplateTrustListPtrInput {
	return (*akriConnectorTemplateTrustListPtrType)(v)
}

func (*akriConnectorTemplateTrustListPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AkriConnectorTemplateTrustList)(nil)).Elem()
}

func (i *akriConnectorTemplateTrustListPtrType) ToAkriConnectorTemplateTrustListPtrOutput() AkriConnectorTemplateTrustListPtrOutput {
	return i.ToAkriConnectorTemplateTrustListPtrOutputWithContext(context.Background())
}

func (i *akriConnectorTemplateTrustListPtrType) ToAkriConnectorTemplateTrustListPtrOutputWithContext(ctx context.Context) AkriConnectorTemplateTrustListPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AkriConnectorTemplateTrustListPtrOutput)
}

// AkriConnectorTemplateTrustList properties.
type AkriConnectorTemplateTrustListOutput struct{ *pulumi.OutputState }

func (AkriConnectorTemplateTrustListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AkriConnectorTemplateTrustList)(nil)).Elem()
}

func (o AkriConnectorTemplateTrustListOutput) ToAkriConnectorTemplateTrustListOutput() AkriConnectorTemplateTrustListOutput {
	return o
}

func (o AkriConnectorTemplateTrustListOutput) ToAkriConnectorTemplateTrustListOutputWithContext(ctx context.Context) AkriConnectorTemplateTrustListOutput {
	return o
}

func (o AkriConnectorTemplateTrustListOutput) ToAkriConnectorTemplateTrustListPtrOutput() AkriConnectorTemplateTrustListPtrOutput {
	return o.ToAkriConnectorTemplateTrustListPtrOutputWithContext(context.Background())
}

func (o AkriConnectorTemplateTrustListOutput) ToAkriConnectorTemplateTrustListPtrOutputWithContext(ctx context.Context) AkriConnectorTemplateTrustListPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AkriConnectorTemplateTrustList) *AkriConnectorTemplateTrustList {
		return &v
	}).(AkriConnectorTemplateTrustListPtrOutput)
}

// The secret reference for certificates to trust.
func (o AkriConnectorTemplateTrustListOutput) TrustListSecretRef() pulumi.StringOutput {
	return o.ApplyT(func(v AkriConnectorTemplateTrustList) string { return v.TrustListSecretRef }).(pulumi.StringOutput)
}

type AkriConnectorTemplateTrustListPtrOutput struct{ *pulumi.OutputState }

func (AkriConnectorTemplateTrustListPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AkriConnectorTemplateTrustList)(nil)).Elem()
}

func (o AkriConnectorTemplateTrustListPtrOutput) ToAkriConnectorTemplateTrustListPtrOutput() AkriConnectorTemplateTrustListPtrOutput {
	return o
}

func (o AkriConnectorTemplateTrustListPtrOutput) ToAkriConnectorTemplateTrustListPtrOutputWithContext(ctx context.Context) AkriConnectorTemplateTrustListPtrOutput {
	return o
}

func (o AkriConnectorTemplateTrustListPtrOutput) Elem() AkriConnectorTemplateTrustListOutput {
	return o.ApplyT(func(v *AkriConnectorTemplateTrustList) AkriConnectorTemplateTrustList {
		if v != nil {
			return *v
		}
		var ret AkriConnectorTemplateTrustList
		return ret
	}).(AkriConnectorTemplateTrustListOutput)
}

// The secret reference for certificates to trust.
func (o AkriConnectorTemplateTrustListPtrOutput) TrustListSecretRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AkriConnectorTemplateTrustList) *string {
		if v == nil {
			return nil
		}
		return &v.TrustListSecretRef
	}).(pulumi.StringPtrOutput)
}

// AkriConnectorTemplateTrustList properties.
type AkriConnectorTemplateTrustListResponse struct {
	// The secret reference for certificates to trust.
	TrustListSecretRef string `pulumi:"trustListSecretRef"`
}

// AkriConnectorTemplateTrustList properties.
type AkriConnectorTemplateTrustListResponseOutput struct{ *pulumi.OutputState }

func (AkriConnectorTemplateTrustListResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AkriConnectorTemplateTrustListResponse)(nil)).Elem()
}

func (o AkriConnectorTemplateTrustListResponseOutput) ToAkriConnectorTemplateTrustListResponseOutput() AkriConnectorTemplateTrustListResponseOutput {
	return o
}

func (o AkriConnectorTemplateTrustListResponseOutput) ToAkriConnectorTemplateTrustListResponseOutputWithContext(ctx context.Context) AkriConnectorTemplateTrustListResponseOutput {
	return o
}

// The secret reference for certificates to trust.
func (o AkriConnectorTemplateTrustListResponseOutput) TrustListSecretRef() pulumi.StringOutput {
	return o.ApplyT(func(v AkriConnectorTemplateTrustListResponse) string { return v.TrustListSecretRef }).(pulumi.StringOutput)
}

type AkriConnectorTemplateTrustListResponsePtrOutput struct{ *pulumi.OutputState }

func (AkriConnectorTemplateTrustListResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AkriConnectorTemplateTrustListResponse)(nil)).Elem()
}

func (o AkriConnectorTemplateTrustListResponsePtrOutput) ToAkriConnectorTemplateTrustListResponsePtrOutput() AkriConnectorTemplateTrustListResponsePtrOutput {
	return o
}

func (o AkriConnectorTemplateTrustListResponsePtrOutput) ToAkriConnectorTemplateTrustListResponsePtrOutputWithContext(ctx context.Context) AkriConnectorTemplateTrustListResponsePtrOutput {
	return o
}

func (o AkriConnectorTemplateTrustListResponsePtrOutput) Elem() AkriConnectorTemplateTrustListResponseOutput {
	return o.ApplyT(func(v *AkriConnectorTemplateTrustListResponse) AkriConnectorTemplateTrustListResponse {
		if v != nil {
			return *v
		}
		var ret AkriConnectorTemplateTrustListResponse
		return ret
	}).(AkriConnectorTemplateTrustListResponseOutput)
}

// The secret reference for certificates to trust.
func (o AkriConnectorTemplateTrustListResponsePtrOutput) TrustListSecretRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AkriConnectorTemplateTrustListResponse) *string {
		if v == nil {
			return nil
		}
		return &v.TrustListSecretRef
	}).(pulumi.StringPtrOutput)
}

// AkriConnectorsContainerRegistry properties.
type AkriConnectorsContainerRegistry struct {
	// The registry settings for the container registry.
	ContainerRegistrySettings AkriConnectorsContainerRegistrySettings `pulumi:"containerRegistrySettings"`
	// AkriConnectorsRegistrySettings properties.
	// Expected value is 'ContainerRegistry'.
	RegistrySettingsType string `pulumi:"registrySettingsType"`
}

// AkriConnectorsContainerRegistryInput is an input type that accepts AkriConnectorsContainerRegistryArgs and AkriConnectorsContainerRegistryOutput values.
// You can construct a concrete instance of `AkriConnectorsContainerRegistryInput` via:
//
//	AkriConnectorsContainerRegistryArgs{...}
type AkriConnectorsContainerRegistryInput interface {
	pulumi.Input

	ToAkriConnectorsContainerRegistryOutput() AkriConnectorsContainerRegistryOutput
	ToAkriConnectorsContainerRegistryOutputWithContext(context.Context) AkriConnectorsContainerRegistryOutput
}

// AkriConnectorsContainerRegistry properties.
type AkriConnectorsContainerRegistryArgs struct {
	// The registry settings for the container registry.
	ContainerRegistrySettings AkriConnectorsContainerRegistrySettingsInput `pulumi:"containerRegistrySettings"`
	// AkriConnectorsRegistrySettings properties.
	// Expected value is 'ContainerRegistry'.
	RegistrySettingsType pulumi.StringInput `pulumi:"registrySettingsType"`
}

func (AkriConnectorsContainerRegistryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AkriConnectorsContainerRegistry)(nil)).Elem()
}

func (i AkriConnectorsContainerRegistryArgs) ToAkriConnectorsContainerRegistryOutput() AkriConnectorsContainerRegistryOutput {
	return i.ToAkriConnectorsContainerRegistryOutputWithContext(context.Background())
}

func (i AkriConnectorsContainerRegistryArgs) ToAkriConnectorsContainerRegistryOutputWithContext(ctx context.Context) AkriConnectorsContainerRegistryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AkriConnectorsContainerRegistryOutput)
}

func (i AkriConnectorsContainerRegistryArgs) ToAkriConnectorsContainerRegistryPtrOutput() AkriConnectorsContainerRegistryPtrOutput {
	return i.ToAkriConnectorsContainerRegistryPtrOutputWithContext(context.Background())
}

func (i AkriConnectorsContainerRegistryArgs) ToAkriConnectorsContainerRegistryPtrOutputWithContext(ctx context.Context) AkriConnectorsContainerRegistryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AkriConnectorsContainerRegistryOutput).ToAkriConnectorsContainerRegistryPtrOutputWithContext(ctx)
}

// AkriConnectorsContainerRegistryPtrInput is an input type that accepts AkriConnectorsContainerRegistryArgs, AkriConnectorsContainerRegistryPtr and AkriConnectorsContainerRegistryPtrOutput values.
// You can construct a concrete instance of `AkriConnectorsContainerRegistryPtrInput` via:
//
//	        AkriConnectorsContainerRegistryArgs{...}
//
//	or:
//
//	        nil
type AkriConnectorsContainerRegistryPtrInput interface {
	pulumi.Input

	ToAkriConnectorsContainerRegistryPtrOutput() AkriConnectorsContainerRegistryPtrOutput
	ToAkriConnectorsContainerRegistryPtrOutputWithContext(context.Context) AkriConnectorsContainerRegistryPtrOutput
}

type akriConnectorsContainerRegistryPtrType AkriConnectorsContainerRegistryArgs

func AkriConnectorsContainerRegistryPtr(v *AkriConnectorsContainerRegistryArgs) AkriConnectorsContainerRegistryPtrInput {
	return (*akriConnectorsContainerRegistryPtrType)(v)
}

func (*akriConnectorsContainerRegistryPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AkriConnectorsContainerRegistry)(nil)).Elem()
}

func (i *akriConnectorsContainerRegistryPtrType) ToAkriConnectorsContainerRegistryPtrOutput() AkriConnectorsContainerRegistryPtrOutput {
	return i.ToAkriConnectorsContainerRegistryPtrOutputWithContext(context.Background())
}

func (i *akriConnectorsContainerRegistryPtrType) ToAkriConnectorsContainerRegistryPtrOutputWithContext(ctx context.Context) AkriConnectorsContainerRegistryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AkriConnectorsContainerRegistryPtrOutput)
}

// AkriConnectorsContainerRegistry properties.
type AkriConnectorsContainerRegistryOutput struct{ *pulumi.OutputState }

func (AkriConnectorsContainerRegistryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AkriConnectorsContainerRegistry)(nil)).Elem()
}

func (o AkriConnectorsContainerRegistryOutput) ToAkriConnectorsContainerRegistryOutput() AkriConnectorsContainerRegistryOutput {
	return o
}

func (o AkriConnectorsContainerRegistryOutput) ToAkriConnectorsContainerRegistryOutputWithContext(ctx context.Context) AkriConnectorsContainerRegistryOutput {
	return o
}

func (o AkriConnectorsContainerRegistryOutput) ToAkriConnectorsContainerRegistryPtrOutput() AkriConnectorsContainerRegistryPtrOutput {
	return o.ToAkriConnectorsContainerRegistryPtrOutputWithContext(context.Background())
}

func (o AkriConnectorsContainerRegistryOutput) ToAkriConnectorsContainerRegistryPtrOutputWithContext(ctx context.Context) AkriConnectorsContainerRegistryPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AkriConnectorsContainerRegistry) *AkriConnectorsContainerRegistry {
		return &v
	}).(AkriConnectorsContainerRegistryPtrOutput)
}

// The registry settings for the container registry.
func (o AkriConnectorsContainerRegistryOutput) ContainerRegistrySettings() AkriConnectorsContainerRegistrySettingsOutput {
	return o.ApplyT(func(v AkriConnectorsContainerRegistry) AkriConnectorsContainerRegistrySettings {
		return v.ContainerRegistrySettings
	}).(AkriConnectorsContainerRegistrySettingsOutput)
}

// AkriConnectorsRegistrySettings properties.
// Expected value is 'ContainerRegistry'.
func (o AkriConnectorsContainerRegistryOutput) RegistrySettingsType() pulumi.StringOutput {
	return o.ApplyT(func(v AkriConnectorsContainerRegistry) string { return v.RegistrySettingsType }).(pulumi.StringOutput)
}

type AkriConnectorsContainerRegistryPtrOutput struct{ *pulumi.OutputState }

func (AkriConnectorsContainerRegistryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AkriConnectorsContainerRegistry)(nil)).Elem()
}

func (o AkriConnectorsContainerRegistryPtrOutput) ToAkriConnectorsContainerRegistryPtrOutput() AkriConnectorsContainerRegistryPtrOutput {
	return o
}

func (o AkriConnectorsContainerRegistryPtrOutput) ToAkriConnectorsContainerRegistryPtrOutputWithContext(ctx context.Context) AkriConnectorsContainerRegistryPtrOutput {
	return o
}

func (o AkriConnectorsContainerRegistryPtrOutput) Elem() AkriConnectorsContainerRegistryOutput {
	return o.ApplyT(func(v *AkriConnectorsContainerRegistry) AkriConnectorsContainerRegistry {
		if v != nil {
			return *v
		}
		var ret AkriConnectorsContainerRegistry
		return ret
	}).(AkriConnectorsContainerRegistryOutput)
}

// The registry settings for the container registry.
func (o AkriConnectorsContainerRegistryPtrOutput) ContainerRegistrySettings() AkriConnectorsContainerRegistrySettingsPtrOutput {
	return o.ApplyT(func(v *AkriConnectorsContainerRegistry) *AkriConnectorsContainerRegistrySettings {
		if v == nil {
			return nil
		}
		return &v.ContainerRegistrySettings
	}).(AkriConnectorsContainerRegistrySettingsPtrOutput)
}

// AkriConnectorsRegistrySettings properties.
// Expected value is 'ContainerRegistry'.
func (o AkriConnectorsContainerRegistryPtrOutput) RegistrySettingsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AkriConnectorsContainerRegistry) *string {
		if v == nil {
			return nil
		}
		return &v.RegistrySettingsType
	}).(pulumi.StringPtrOutput)
}

// AkriConnectorsContainerRegistry properties.
type AkriConnectorsContainerRegistryResponse struct {
	// The registry settings for the container registry.
	ContainerRegistrySettings AkriConnectorsContainerRegistrySettingsResponse `pulumi:"containerRegistrySettings"`
	// AkriConnectorsRegistrySettings properties.
	// Expected value is 'ContainerRegistry'.
	RegistrySettingsType string `pulumi:"registrySettingsType"`
}

// AkriConnectorsContainerRegistry properties.
type AkriConnectorsContainerRegistryResponseOutput struct{ *pulumi.OutputState }

func (AkriConnectorsContainerRegistryResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AkriConnectorsContainerRegistryResponse)(nil)).Elem()
}

func (o AkriConnectorsContainerRegistryResponseOutput) ToAkriConnectorsContainerRegistryResponseOutput() AkriConnectorsContainerRegistryResponseOutput {
	return o
}

func (o AkriConnectorsContainerRegistryResponseOutput) ToAkriConnectorsContainerRegistryResponseOutputWithContext(ctx context.Context) AkriConnectorsContainerRegistryResponseOutput {
	return o
}

// The registry settings for the container registry.
func (o AkriConnectorsContainerRegistryResponseOutput) ContainerRegistrySettings() AkriConnectorsContainerRegistrySettingsResponseOutput {
	return o.ApplyT(func(v AkriConnectorsContainerRegistryResponse) AkriConnectorsContainerRegistrySettingsResponse {
		return v.ContainerRegistrySettings
	}).(AkriConnectorsContainerRegistrySettingsResponseOutput)
}

// AkriConnectorsRegistrySettings properties.
// Expected value is 'ContainerRegistry'.
func (o AkriConnectorsContainerRegistryResponseOutput) RegistrySettingsType() pulumi.StringOutput {
	return o.ApplyT(func(v AkriConnectorsContainerRegistryResponse) string { return v.RegistrySettingsType }).(pulumi.StringOutput)
}

type AkriConnectorsContainerRegistryResponsePtrOutput struct{ *pulumi.OutputState }

func (AkriConnectorsContainerRegistryResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AkriConnectorsContainerRegistryResponse)(nil)).Elem()
}

func (o AkriConnectorsContainerRegistryResponsePtrOutput) ToAkriConnectorsContainerRegistryResponsePtrOutput() AkriConnectorsContainerRegistryResponsePtrOutput {
	return o
}

func (o AkriConnectorsContainerRegistryResponsePtrOutput) ToAkriConnectorsContainerRegistryResponsePtrOutputWithContext(ctx context.Context) AkriConnectorsContainerRegistryResponsePtrOutput {
	return o
}

func (o AkriConnectorsContainerRegistryResponsePtrOutput) Elem() AkriConnectorsContainerRegistryResponseOutput {
	return o.ApplyT(func(v *AkriConnectorsContainerRegistryResponse) AkriConnectorsContainerRegistryResponse {
		if v != nil {
			return *v
		}
		var ret AkriConnectorsContainerRegistryResponse
		return ret
	}).(AkriConnectorsContainerRegistryResponseOutput)
}

// The registry settings for the container registry.
func (o AkriConnectorsContainerRegistryResponsePtrOutput) ContainerRegistrySettings() AkriConnectorsContainerRegistrySettingsResponsePtrOutput {
	return o.ApplyT(func(v *AkriConnectorsContainerRegistryResponse) *AkriConnectorsContainerRegistrySettingsResponse {
		if v == nil {
			return nil
		}
		return &v.ContainerRegistrySettings
	}).(AkriConnectorsContainerRegistrySettingsResponsePtrOutput)
}

// AkriConnectorsRegistrySettings properties.
// Expected value is 'ContainerRegistry'.
func (o AkriConnectorsContainerRegistryResponsePtrOutput) RegistrySettingsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AkriConnectorsContainerRegistryResponse) *string {
		if v == nil {
			return nil
		}
		return &v.RegistrySettingsType
	}).(pulumi.StringPtrOutput)
}

// AkriConnectorsContainerRegistry properties.
type AkriConnectorsContainerRegistrySettings struct {
	// Optional list of references to secrets in the same namespace to use for pulling the connector image.
	ImagePullSecrets []AkriConnectorsImagePullSecret `pulumi:"imagePullSecrets"`
	// The container registry to use for the artifact.
	Registry string `pulumi:"registry"`
}

// AkriConnectorsContainerRegistrySettingsInput is an input type that accepts AkriConnectorsContainerRegistrySettingsArgs and AkriConnectorsContainerRegistrySettingsOutput values.
// You can construct a concrete instance of `AkriConnectorsContainerRegistrySettingsInput` via:
//
//	AkriConnectorsContainerRegistrySettingsArgs{...}
type AkriConnectorsContainerRegistrySettingsInput interface {
	pulumi.Input

	ToAkriConnectorsContainerRegistrySettingsOutput() AkriConnectorsContainerRegistrySettingsOutput
	ToAkriConnectorsContainerRegistrySettingsOutputWithContext(context.Context) AkriConnectorsContainerRegistrySettingsOutput
}

// AkriConnectorsContainerRegistry properties.
type AkriConnectorsContainerRegistrySettingsArgs struct {
	// Optional list of references to secrets in the same namespace to use for pulling the connector image.
	ImagePullSecrets AkriConnectorsImagePullSecretArrayInput `pulumi:"imagePullSecrets"`
	// The container registry to use for the artifact.
	Registry pulumi.StringInput `pulumi:"registry"`
}

func (AkriConnectorsContainerRegistrySettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AkriConnectorsContainerRegistrySettings)(nil)).Elem()
}

func (i AkriConnectorsContainerRegistrySettingsArgs) ToAkriConnectorsContainerRegistrySettingsOutput() AkriConnectorsContainerRegistrySettingsOutput {
	return i.ToAkriConnectorsContainerRegistrySettingsOutputWithContext(context.Background())
}

func (i AkriConnectorsContainerRegistrySettingsArgs) ToAkriConnectorsContainerRegistrySettingsOutputWithContext(ctx context.Context) AkriConnectorsContainerRegistrySettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AkriConnectorsContainerRegistrySettingsOutput)
}

func (i AkriConnectorsContainerRegistrySettingsArgs) ToAkriConnectorsContainerRegistrySettingsPtrOutput() AkriConnectorsContainerRegistrySettingsPtrOutput {
	return i.ToAkriConnectorsContainerRegistrySettingsPtrOutputWithContext(context.Background())
}

func (i AkriConnectorsContainerRegistrySettingsArgs) ToAkriConnectorsContainerRegistrySettingsPtrOutputWithContext(ctx context.Context) AkriConnectorsContainerRegistrySettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AkriConnectorsContainerRegistrySettingsOutput).ToAkriConnectorsContainerRegistrySettingsPtrOutputWithContext(ctx)
}

// AkriConnectorsContainerRegistrySettingsPtrInput is an input type that accepts AkriConnectorsContainerRegistrySettingsArgs, AkriConnectorsContainerRegistrySettingsPtr and AkriConnectorsContainerRegistrySettingsPtrOutput values.
// You can construct a concrete instance of `AkriConnectorsContainerRegistrySettingsPtrInput` via:
//
//	        AkriConnectorsContainerRegistrySettingsArgs{...}
//
//	or:
//
//	        nil
type AkriConnectorsContainerRegistrySettingsPtrInput interface {
	pulumi.Input

	ToAkriConnectorsContainerRegistrySettingsPtrOutput() AkriConnectorsContainerRegistrySettingsPtrOutput
	ToAkriConnectorsContainerRegistrySettingsPtrOutputWithContext(context.Context) AkriConnectorsContainerRegistrySettingsPtrOutput
}

type akriConnectorsContainerRegistrySettingsPtrType AkriConnectorsContainerRegistrySettingsArgs

func AkriConnectorsContainerRegistrySettingsPtr(v *AkriConnectorsContainerRegistrySettingsArgs) AkriConnectorsContainerRegistrySettingsPtrInput {
	return (*akriConnectorsContainerRegistrySettingsPtrType)(v)
}

func (*akriConnectorsContainerRegistrySettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AkriConnectorsContainerRegistrySettings)(nil)).Elem()
}

func (i *akriConnectorsContainerRegistrySettingsPtrType) ToAkriConnectorsContainerRegistrySettingsPtrOutput() AkriConnectorsContainerRegistrySettingsPtrOutput {
	return i.ToAkriConnectorsContainerRegistrySettingsPtrOutputWithContext(context.Background())
}

func (i *akriConnectorsContainerRegistrySettingsPtrType) ToAkriConnectorsContainerRegistrySettingsPtrOutputWithContext(ctx context.Context) AkriConnectorsContainerRegistrySettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AkriConnectorsContainerRegistrySettingsPtrOutput)
}

// AkriConnectorsContainerRegistry properties.
type AkriConnectorsContainerRegistrySettingsOutput struct{ *pulumi.OutputState }

func (AkriConnectorsContainerRegistrySettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AkriConnectorsContainerRegistrySettings)(nil)).Elem()
}

func (o AkriConnectorsContainerRegistrySettingsOutput) ToAkriConnectorsContainerRegistrySettingsOutput() AkriConnectorsContainerRegistrySettingsOutput {
	return o
}

func (o AkriConnectorsContainerRegistrySettingsOutput) ToAkriConnectorsContainerRegistrySettingsOutputWithContext(ctx context.Context) AkriConnectorsContainerRegistrySettingsOutput {
	return o
}

func (o AkriConnectorsContainerRegistrySettingsOutput) ToAkriConnectorsContainerRegistrySettingsPtrOutput() AkriConnectorsContainerRegistrySettingsPtrOutput {
	return o.ToAkriConnectorsContainerRegistrySettingsPtrOutputWithContext(context.Background())
}

func (o AkriConnectorsContainerRegistrySettingsOutput) ToAkriConnectorsContainerRegistrySettingsPtrOutputWithContext(ctx context.Context) AkriConnectorsContainerRegistrySettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AkriConnectorsContainerRegistrySettings) *AkriConnectorsContainerRegistrySettings {
		return &v
	}).(AkriConnectorsContainerRegistrySettingsPtrOutput)
}

// Optional list of references to secrets in the same namespace to use for pulling the connector image.
func (o AkriConnectorsContainerRegistrySettingsOutput) ImagePullSecrets() AkriConnectorsImagePullSecretArrayOutput {
	return o.ApplyT(func(v AkriConnectorsContainerRegistrySettings) []AkriConnectorsImagePullSecret {
		return v.ImagePullSecrets
	}).(AkriConnectorsImagePullSecretArrayOutput)
}

// The container registry to use for the artifact.
func (o AkriConnectorsContainerRegistrySettingsOutput) Registry() pulumi.StringOutput {
	return o.ApplyT(func(v AkriConnectorsContainerRegistrySettings) string { return v.Registry }).(pulumi.StringOutput)
}

type AkriConnectorsContainerRegistrySettingsPtrOutput struct{ *pulumi.OutputState }

func (AkriConnectorsContainerRegistrySettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AkriConnectorsContainerRegistrySettings)(nil)).Elem()
}

func (o AkriConnectorsContainerRegistrySettingsPtrOutput) ToAkriConnectorsContainerRegistrySettingsPtrOutput() AkriConnectorsContainerRegistrySettingsPtrOutput {
	return o
}

func (o AkriConnectorsContainerRegistrySettingsPtrOutput) ToAkriConnectorsContainerRegistrySettingsPtrOutputWithContext(ctx context.Context) AkriConnectorsContainerRegistrySettingsPtrOutput {
	return o
}

func (o AkriConnectorsContainerRegistrySettingsPtrOutput) Elem() AkriConnectorsContainerRegistrySettingsOutput {
	return o.ApplyT(func(v *AkriConnectorsContainerRegistrySettings) AkriConnectorsContainerRegistrySettings {
		if v != nil {
			return *v
		}
		var ret AkriConnectorsContainerRegistrySettings
		return ret
	}).(AkriConnectorsContainerRegistrySettingsOutput)
}

// Optional list of references to secrets in the same namespace to use for pulling the connector image.
func (o AkriConnectorsContainerRegistrySettingsPtrOutput) ImagePullSecrets() AkriConnectorsImagePullSecretArrayOutput {
	return o.ApplyT(func(v *AkriConnectorsContainerRegistrySettings) []AkriConnectorsImagePullSecret {
		if v == nil {
			return nil
		}
		return v.ImagePullSecrets
	}).(AkriConnectorsImagePullSecretArrayOutput)
}

// The container registry to use for the artifact.
func (o AkriConnectorsContainerRegistrySettingsPtrOutput) Registry() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AkriConnectorsContainerRegistrySettings) *string {
		if v == nil {
			return nil
		}
		return &v.Registry
	}).(pulumi.StringPtrOutput)
}

// AkriConnectorsContainerRegistry properties.
type AkriConnectorsContainerRegistrySettingsResponse struct {
	// Optional list of references to secrets in the same namespace to use for pulling the connector image.
	ImagePullSecrets []AkriConnectorsImagePullSecretResponse `pulumi:"imagePullSecrets"`
	// The container registry to use for the artifact.
	Registry string `pulumi:"registry"`
}

// AkriConnectorsContainerRegistry properties.
type AkriConnectorsContainerRegistrySettingsResponseOutput struct{ *pulumi.OutputState }

func (AkriConnectorsContainerRegistrySettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AkriConnectorsContainerRegistrySettingsResponse)(nil)).Elem()
}

func (o AkriConnectorsContainerRegistrySettingsResponseOutput) ToAkriConnectorsContainerRegistrySettingsResponseOutput() AkriConnectorsContainerRegistrySettingsResponseOutput {
	return o
}

func (o AkriConnectorsContainerRegistrySettingsResponseOutput) ToAkriConnectorsContainerRegistrySettingsResponseOutputWithContext(ctx context.Context) AkriConnectorsContainerRegistrySettingsResponseOutput {
	return o
}

// Optional list of references to secrets in the same namespace to use for pulling the connector image.
func (o AkriConnectorsContainerRegistrySettingsResponseOutput) ImagePullSecrets() AkriConnectorsImagePullSecretResponseArrayOutput {
	return o.ApplyT(func(v AkriConnectorsContainerRegistrySettingsResponse) []AkriConnectorsImagePullSecretResponse {
		return v.ImagePullSecrets
	}).(AkriConnectorsImagePullSecretResponseArrayOutput)
}

// The container registry to use for the artifact.
func (o AkriConnectorsContainerRegistrySettingsResponseOutput) Registry() pulumi.StringOutput {
	return o.ApplyT(func(v AkriConnectorsContainerRegistrySettingsResponse) string { return v.Registry }).(pulumi.StringOutput)
}

type AkriConnectorsContainerRegistrySettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (AkriConnectorsContainerRegistrySettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AkriConnectorsContainerRegistrySettingsResponse)(nil)).Elem()
}

func (o AkriConnectorsContainerRegistrySettingsResponsePtrOutput) ToAkriConnectorsContainerRegistrySettingsResponsePtrOutput() AkriConnectorsContainerRegistrySettingsResponsePtrOutput {
	return o
}

func (o AkriConnectorsContainerRegistrySettingsResponsePtrOutput) ToAkriConnectorsContainerRegistrySettingsResponsePtrOutputWithContext(ctx context.Context) AkriConnectorsContainerRegistrySettingsResponsePtrOutput {
	return o
}

func (o AkriConnectorsContainerRegistrySettingsResponsePtrOutput) Elem() AkriConnectorsContainerRegistrySettingsResponseOutput {
	return o.ApplyT(func(v *AkriConnectorsContainerRegistrySettingsResponse) AkriConnectorsContainerRegistrySettingsResponse {
		if v != nil {
			return *v
		}
		var ret AkriConnectorsContainerRegistrySettingsResponse
		return ret
	}).(AkriConnectorsContainerRegistrySettingsResponseOutput)
}

// Optional list of references to secrets in the same namespace to use for pulling the connector image.
func (o AkriConnectorsContainerRegistrySettingsResponsePtrOutput) ImagePullSecrets() AkriConnectorsImagePullSecretResponseArrayOutput {
	return o.ApplyT(func(v *AkriConnectorsContainerRegistrySettingsResponse) []AkriConnectorsImagePullSecretResponse {
		if v == nil {
			return nil
		}
		return v.ImagePullSecrets
	}).(AkriConnectorsImagePullSecretResponseArrayOutput)
}

// The container registry to use for the artifact.
func (o AkriConnectorsContainerRegistrySettingsResponsePtrOutput) Registry() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AkriConnectorsContainerRegistrySettingsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Registry
	}).(pulumi.StringPtrOutput)
}

// AkriConnectorsDiagnostic Log properties.
type AkriConnectorsDiagnosticsLogs struct {
	// The log level. Examples - 'debug', 'info', 'warn', 'error', 'trace'.
	Level *string `pulumi:"level"`
}

// Defaults sets the appropriate defaults for AkriConnectorsDiagnosticsLogs
func (val *AkriConnectorsDiagnosticsLogs) Defaults() *AkriConnectorsDiagnosticsLogs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Level == nil {
		level_ := "info"
		tmp.Level = &level_
	}
	return &tmp
}

// AkriConnectorsDiagnosticsLogsInput is an input type that accepts AkriConnectorsDiagnosticsLogsArgs and AkriConnectorsDiagnosticsLogsOutput values.
// You can construct a concrete instance of `AkriConnectorsDiagnosticsLogsInput` via:
//
//	AkriConnectorsDiagnosticsLogsArgs{...}
type AkriConnectorsDiagnosticsLogsInput interface {
	pulumi.Input

	ToAkriConnectorsDiagnosticsLogsOutput() AkriConnectorsDiagnosticsLogsOutput
	ToAkriConnectorsDiagnosticsLogsOutputWithContext(context.Context) AkriConnectorsDiagnosticsLogsOutput
}

// AkriConnectorsDiagnostic Log properties.
type AkriConnectorsDiagnosticsLogsArgs struct {
	// The log level. Examples - 'debug', 'info', 'warn', 'error', 'trace'.
	Level pulumi.StringPtrInput `pulumi:"level"`
}

// Defaults sets the appropriate defaults for AkriConnectorsDiagnosticsLogsArgs
func (val *AkriConnectorsDiagnosticsLogsArgs) Defaults() *AkriConnectorsDiagnosticsLogsArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Level == nil {
		tmp.Level = pulumi.StringPtr("info")
	}
	return &tmp
}
func (AkriConnectorsDiagnosticsLogsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AkriConnectorsDiagnosticsLogs)(nil)).Elem()
}

func (i AkriConnectorsDiagnosticsLogsArgs) ToAkriConnectorsDiagnosticsLogsOutput() AkriConnectorsDiagnosticsLogsOutput {
	return i.ToAkriConnectorsDiagnosticsLogsOutputWithContext(context.Background())
}

func (i AkriConnectorsDiagnosticsLogsArgs) ToAkriConnectorsDiagnosticsLogsOutputWithContext(ctx context.Context) AkriConnectorsDiagnosticsLogsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AkriConnectorsDiagnosticsLogsOutput)
}

func (i AkriConnectorsDiagnosticsLogsArgs) ToAkriConnectorsDiagnosticsLogsPtrOutput() AkriConnectorsDiagnosticsLogsPtrOutput {
	return i.ToAkriConnectorsDiagnosticsLogsPtrOutputWithContext(context.Background())
}

func (i AkriConnectorsDiagnosticsLogsArgs) ToAkriConnectorsDiagnosticsLogsPtrOutputWithContext(ctx context.Context) AkriConnectorsDiagnosticsLogsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AkriConnectorsDiagnosticsLogsOutput).ToAkriConnectorsDiagnosticsLogsPtrOutputWithContext(ctx)
}

// AkriConnectorsDiagnosticsLogsPtrInput is an input type that accepts AkriConnectorsDiagnosticsLogsArgs, AkriConnectorsDiagnosticsLogsPtr and AkriConnectorsDiagnosticsLogsPtrOutput values.
// You can construct a concrete instance of `AkriConnectorsDiagnosticsLogsPtrInput` via:
//
//	        AkriConnectorsDiagnosticsLogsArgs{...}
//
//	or:
//
//	        nil
type AkriConnectorsDiagnosticsLogsPtrInput interface {
	pulumi.Input

	ToAkriConnectorsDiagnosticsLogsPtrOutput() AkriConnectorsDiagnosticsLogsPtrOutput
	ToAkriConnectorsDiagnosticsLogsPtrOutputWithContext(context.Context) AkriConnectorsDiagnosticsLogsPtrOutput
}

type akriConnectorsDiagnosticsLogsPtrType AkriConnectorsDiagnosticsLogsArgs

func AkriConnectorsDiagnosticsLogsPtr(v *AkriConnectorsDiagnosticsLogsArgs) AkriConnectorsDiagnosticsLogsPtrInput {
	return (*akriConnectorsDiagnosticsLogsPtrType)(v)
}

func (*akriConnectorsDiagnosticsLogsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AkriConnectorsDiagnosticsLogs)(nil)).Elem()
}

func (i *akriConnectorsDiagnosticsLogsPtrType) ToAkriConnectorsDiagnosticsLogsPtrOutput() AkriConnectorsDiagnosticsLogsPtrOutput {
	return i.ToAkriConnectorsDiagnosticsLogsPtrOutputWithContext(context.Background())
}

func (i *akriConnectorsDiagnosticsLogsPtrType) ToAkriConnectorsDiagnosticsLogsPtrOutputWithContext(ctx context.Context) AkriConnectorsDiagnosticsLogsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AkriConnectorsDiagnosticsLogsPtrOutput)
}

// AkriConnectorsDiagnostic Log properties.
type AkriConnectorsDiagnosticsLogsOutput struct{ *pulumi.OutputState }

func (AkriConnectorsDiagnosticsLogsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AkriConnectorsDiagnosticsLogs)(nil)).Elem()
}

func (o AkriConnectorsDiagnosticsLogsOutput) ToAkriConnectorsDiagnosticsLogsOutput() AkriConnectorsDiagnosticsLogsOutput {
	return o
}

func (o AkriConnectorsDiagnosticsLogsOutput) ToAkriConnectorsDiagnosticsLogsOutputWithContext(ctx context.Context) AkriConnectorsDiagnosticsLogsOutput {
	return o
}

func (o AkriConnectorsDiagnosticsLogsOutput) ToAkriConnectorsDiagnosticsLogsPtrOutput() AkriConnectorsDiagnosticsLogsPtrOutput {
	return o.ToAkriConnectorsDiagnosticsLogsPtrOutputWithContext(context.Background())
}

func (o AkriConnectorsDiagnosticsLogsOutput) ToAkriConnectorsDiagnosticsLogsPtrOutputWithContext(ctx context.Context) AkriConnectorsDiagnosticsLogsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AkriConnectorsDiagnosticsLogs) *AkriConnectorsDiagnosticsLogs {
		return &v
	}).(AkriConnectorsDiagnosticsLogsPtrOutput)
}

// The log level. Examples - 'debug', 'info', 'warn', 'error', 'trace'.
func (o AkriConnectorsDiagnosticsLogsOutput) Level() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AkriConnectorsDiagnosticsLogs) *string { return v.Level }).(pulumi.StringPtrOutput)
}

type AkriConnectorsDiagnosticsLogsPtrOutput struct{ *pulumi.OutputState }

func (AkriConnectorsDiagnosticsLogsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AkriConnectorsDiagnosticsLogs)(nil)).Elem()
}

func (o AkriConnectorsDiagnosticsLogsPtrOutput) ToAkriConnectorsDiagnosticsLogsPtrOutput() AkriConnectorsDiagnosticsLogsPtrOutput {
	return o
}

func (o AkriConnectorsDiagnosticsLogsPtrOutput) ToAkriConnectorsDiagnosticsLogsPtrOutputWithContext(ctx context.Context) AkriConnectorsDiagnosticsLogsPtrOutput {
	return o
}

func (o AkriConnectorsDiagnosticsLogsPtrOutput) Elem() AkriConnectorsDiagnosticsLogsOutput {
	return o.ApplyT(func(v *AkriConnectorsDiagnosticsLogs) AkriConnectorsDiagnosticsLogs {
		if v != nil {
			return *v
		}
		var ret AkriConnectorsDiagnosticsLogs
		return ret
	}).(AkriConnectorsDiagnosticsLogsOutput)
}

// The log level. Examples - 'debug', 'info', 'warn', 'error', 'trace'.
func (o AkriConnectorsDiagnosticsLogsPtrOutput) Level() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AkriConnectorsDiagnosticsLogs) *string {
		if v == nil {
			return nil
		}
		return v.Level
	}).(pulumi.StringPtrOutput)
}

// AkriConnectorsDiagnostic Log properties.
type AkriConnectorsDiagnosticsLogsResponse struct {
	// The log level. Examples - 'debug', 'info', 'warn', 'error', 'trace'.
	Level *string `pulumi:"level"`
}

// Defaults sets the appropriate defaults for AkriConnectorsDiagnosticsLogsResponse
func (val *AkriConnectorsDiagnosticsLogsResponse) Defaults() *AkriConnectorsDiagnosticsLogsResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Level == nil {
		level_ := "info"
		tmp.Level = &level_
	}
	return &tmp
}

// AkriConnectorsDiagnostic Log properties.
type AkriConnectorsDiagnosticsLogsResponseOutput struct{ *pulumi.OutputState }

func (AkriConnectorsDiagnosticsLogsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AkriConnectorsDiagnosticsLogsResponse)(nil)).Elem()
}

func (o AkriConnectorsDiagnosticsLogsResponseOutput) ToAkriConnectorsDiagnosticsLogsResponseOutput() AkriConnectorsDiagnosticsLogsResponseOutput {
	return o
}

func (o AkriConnectorsDiagnosticsLogsResponseOutput) ToAkriConnectorsDiagnosticsLogsResponseOutputWithContext(ctx context.Context) AkriConnectorsDiagnosticsLogsResponseOutput {
	return o
}

// The log level. Examples - 'debug', 'info', 'warn', 'error', 'trace'.
func (o AkriConnectorsDiagnosticsLogsResponseOutput) Level() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AkriConnectorsDiagnosticsLogsResponse) *string { return v.Level }).(pulumi.StringPtrOutput)
}

type AkriConnectorsDiagnosticsLogsResponsePtrOutput struct{ *pulumi.OutputState }

func (AkriConnectorsDiagnosticsLogsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AkriConnectorsDiagnosticsLogsResponse)(nil)).Elem()
}

func (o AkriConnectorsDiagnosticsLogsResponsePtrOutput) ToAkriConnectorsDiagnosticsLogsResponsePtrOutput() AkriConnectorsDiagnosticsLogsResponsePtrOutput {
	return o
}

func (o AkriConnectorsDiagnosticsLogsResponsePtrOutput) ToAkriConnectorsDiagnosticsLogsResponsePtrOutputWithContext(ctx context.Context) AkriConnectorsDiagnosticsLogsResponsePtrOutput {
	return o
}

func (o AkriConnectorsDiagnosticsLogsResponsePtrOutput) Elem() AkriConnectorsDiagnosticsLogsResponseOutput {
	return o.ApplyT(func(v *AkriConnectorsDiagnosticsLogsResponse) AkriConnectorsDiagnosticsLogsResponse {
		if v != nil {
			return *v
		}
		var ret AkriConnectorsDiagnosticsLogsResponse
		return ret
	}).(AkriConnectorsDiagnosticsLogsResponseOutput)
}

// The log level. Examples - 'debug', 'info', 'warn', 'error', 'trace'.
func (o AkriConnectorsDiagnosticsLogsResponsePtrOutput) Level() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AkriConnectorsDiagnosticsLogsResponse) *string {
		if v == nil {
			return nil
		}
		return v.Level
	}).(pulumi.StringPtrOutput)
}

// AkriConnectorsDigest properties.
type AkriConnectorsDigest struct {
	// The digest of the image.
	Digest string `pulumi:"digest"`
	// AkriConnectorsTagDigestType values.
	// Expected value is 'Digest'.
	TagDigestType string `pulumi:"tagDigestType"`
}

// AkriConnectorsDigestInput is an input type that accepts AkriConnectorsDigestArgs and AkriConnectorsDigestOutput values.
// You can construct a concrete instance of `AkriConnectorsDigestInput` via:
//
//	AkriConnectorsDigestArgs{...}
type AkriConnectorsDigestInput interface {
	pulumi.Input

	ToAkriConnectorsDigestOutput() AkriConnectorsDigestOutput
	ToAkriConnectorsDigestOutputWithContext(context.Context) AkriConnectorsDigestOutput
}

// AkriConnectorsDigest properties.
type AkriConnectorsDigestArgs struct {
	// The digest of the image.
	Digest pulumi.StringInput `pulumi:"digest"`
	// AkriConnectorsTagDigestType values.
	// Expected value is 'Digest'.
	TagDigestType pulumi.StringInput `pulumi:"tagDigestType"`
}

func (AkriConnectorsDigestArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AkriConnectorsDigest)(nil)).Elem()
}

func (i AkriConnectorsDigestArgs) ToAkriConnectorsDigestOutput() AkriConnectorsDigestOutput {
	return i.ToAkriConnectorsDigestOutputWithContext(context.Background())
}

func (i AkriConnectorsDigestArgs) ToAkriConnectorsDigestOutputWithContext(ctx context.Context) AkriConnectorsDigestOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AkriConnectorsDigestOutput)
}

func (i AkriConnectorsDigestArgs) ToAkriConnectorsDigestPtrOutput() AkriConnectorsDigestPtrOutput {
	return i.ToAkriConnectorsDigestPtrOutputWithContext(context.Background())
}

func (i AkriConnectorsDigestArgs) ToAkriConnectorsDigestPtrOutputWithContext(ctx context.Context) AkriConnectorsDigestPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AkriConnectorsDigestOutput).ToAkriConnectorsDigestPtrOutputWithContext(ctx)
}

// AkriConnectorsDigestPtrInput is an input type that accepts AkriConnectorsDigestArgs, AkriConnectorsDigestPtr and AkriConnectorsDigestPtrOutput values.
// You can construct a concrete instance of `AkriConnectorsDigestPtrInput` via:
//
//	        AkriConnectorsDigestArgs{...}
//
//	or:
//
//	        nil
type AkriConnectorsDigestPtrInput interface {
	pulumi.Input

	ToAkriConnectorsDigestPtrOutput() AkriConnectorsDigestPtrOutput
	ToAkriConnectorsDigestPtrOutputWithContext(context.Context) AkriConnectorsDigestPtrOutput
}

type akriConnectorsDigestPtrType AkriConnectorsDigestArgs

func AkriConnectorsDigestPtr(v *AkriConnectorsDigestArgs) AkriConnectorsDigestPtrInput {
	return (*akriConnectorsDigestPtrType)(v)
}

func (*akriConnectorsDigestPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AkriConnectorsDigest)(nil)).Elem()
}

func (i *akriConnectorsDigestPtrType) ToAkriConnectorsDigestPtrOutput() AkriConnectorsDigestPtrOutput {
	return i.ToAkriConnectorsDigestPtrOutputWithContext(context.Background())
}

func (i *akriConnectorsDigestPtrType) ToAkriConnectorsDigestPtrOutputWithContext(ctx context.Context) AkriConnectorsDigestPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AkriConnectorsDigestPtrOutput)
}

// AkriConnectorsDigest properties.
type AkriConnectorsDigestOutput struct{ *pulumi.OutputState }

func (AkriConnectorsDigestOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AkriConnectorsDigest)(nil)).Elem()
}

func (o AkriConnectorsDigestOutput) ToAkriConnectorsDigestOutput() AkriConnectorsDigestOutput {
	return o
}

func (o AkriConnectorsDigestOutput) ToAkriConnectorsDigestOutputWithContext(ctx context.Context) AkriConnectorsDigestOutput {
	return o
}

func (o AkriConnectorsDigestOutput) ToAkriConnectorsDigestPtrOutput() AkriConnectorsDigestPtrOutput {
	return o.ToAkriConnectorsDigestPtrOutputWithContext(context.Background())
}

func (o AkriConnectorsDigestOutput) ToAkriConnectorsDigestPtrOutputWithContext(ctx context.Context) AkriConnectorsDigestPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AkriConnectorsDigest) *AkriConnectorsDigest {
		return &v
	}).(AkriConnectorsDigestPtrOutput)
}

// The digest of the image.
func (o AkriConnectorsDigestOutput) Digest() pulumi.StringOutput {
	return o.ApplyT(func(v AkriConnectorsDigest) string { return v.Digest }).(pulumi.StringOutput)
}

// AkriConnectorsTagDigestType values.
// Expected value is 'Digest'.
func (o AkriConnectorsDigestOutput) TagDigestType() pulumi.StringOutput {
	return o.ApplyT(func(v AkriConnectorsDigest) string { return v.TagDigestType }).(pulumi.StringOutput)
}

type AkriConnectorsDigestPtrOutput struct{ *pulumi.OutputState }

func (AkriConnectorsDigestPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AkriConnectorsDigest)(nil)).Elem()
}

func (o AkriConnectorsDigestPtrOutput) ToAkriConnectorsDigestPtrOutput() AkriConnectorsDigestPtrOutput {
	return o
}

func (o AkriConnectorsDigestPtrOutput) ToAkriConnectorsDigestPtrOutputWithContext(ctx context.Context) AkriConnectorsDigestPtrOutput {
	return o
}

func (o AkriConnectorsDigestPtrOutput) Elem() AkriConnectorsDigestOutput {
	return o.ApplyT(func(v *AkriConnectorsDigest) AkriConnectorsDigest {
		if v != nil {
			return *v
		}
		var ret AkriConnectorsDigest
		return ret
	}).(AkriConnectorsDigestOutput)
}

// The digest of the image.
func (o AkriConnectorsDigestPtrOutput) Digest() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AkriConnectorsDigest) *string {
		if v == nil {
			return nil
		}
		return &v.Digest
	}).(pulumi.StringPtrOutput)
}

// AkriConnectorsTagDigestType values.
// Expected value is 'Digest'.
func (o AkriConnectorsDigestPtrOutput) TagDigestType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AkriConnectorsDigest) *string {
		if v == nil {
			return nil
		}
		return &v.TagDigestType
	}).(pulumi.StringPtrOutput)
}

// AkriConnectorsDigest properties.
type AkriConnectorsDigestResponse struct {
	// The digest of the image.
	Digest string `pulumi:"digest"`
	// AkriConnectorsTagDigestType values.
	// Expected value is 'Digest'.
	TagDigestType string `pulumi:"tagDigestType"`
}

// AkriConnectorsDigest properties.
type AkriConnectorsDigestResponseOutput struct{ *pulumi.OutputState }

func (AkriConnectorsDigestResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AkriConnectorsDigestResponse)(nil)).Elem()
}

func (o AkriConnectorsDigestResponseOutput) ToAkriConnectorsDigestResponseOutput() AkriConnectorsDigestResponseOutput {
	return o
}

func (o AkriConnectorsDigestResponseOutput) ToAkriConnectorsDigestResponseOutputWithContext(ctx context.Context) AkriConnectorsDigestResponseOutput {
	return o
}

// The digest of the image.
func (o AkriConnectorsDigestResponseOutput) Digest() pulumi.StringOutput {
	return o.ApplyT(func(v AkriConnectorsDigestResponse) string { return v.Digest }).(pulumi.StringOutput)
}

// AkriConnectorsTagDigestType values.
// Expected value is 'Digest'.
func (o AkriConnectorsDigestResponseOutput) TagDigestType() pulumi.StringOutput {
	return o.ApplyT(func(v AkriConnectorsDigestResponse) string { return v.TagDigestType }).(pulumi.StringOutput)
}

type AkriConnectorsDigestResponsePtrOutput struct{ *pulumi.OutputState }

func (AkriConnectorsDigestResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AkriConnectorsDigestResponse)(nil)).Elem()
}

func (o AkriConnectorsDigestResponsePtrOutput) ToAkriConnectorsDigestResponsePtrOutput() AkriConnectorsDigestResponsePtrOutput {
	return o
}

func (o AkriConnectorsDigestResponsePtrOutput) ToAkriConnectorsDigestResponsePtrOutputWithContext(ctx context.Context) AkriConnectorsDigestResponsePtrOutput {
	return o
}

func (o AkriConnectorsDigestResponsePtrOutput) Elem() AkriConnectorsDigestResponseOutput {
	return o.ApplyT(func(v *AkriConnectorsDigestResponse) AkriConnectorsDigestResponse {
		if v != nil {
			return *v
		}
		var ret AkriConnectorsDigestResponse
		return ret
	}).(AkriConnectorsDigestResponseOutput)
}

// The digest of the image.
func (o AkriConnectorsDigestResponsePtrOutput) Digest() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AkriConnectorsDigestResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Digest
	}).(pulumi.StringPtrOutput)
}

// AkriConnectorsTagDigestType values.
// Expected value is 'Digest'.
func (o AkriConnectorsDigestResponsePtrOutput) TagDigestType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AkriConnectorsDigestResponse) *string {
		if v == nil {
			return nil
		}
		return &v.TagDigestType
	}).(pulumi.StringPtrOutput)
}

// AkriConnectorsImagePullSecret properties.
type AkriConnectorsImagePullSecret struct {
	// The name of the image pull secret.
	SecretRef string `pulumi:"secretRef"`
}

// AkriConnectorsImagePullSecretInput is an input type that accepts AkriConnectorsImagePullSecretArgs and AkriConnectorsImagePullSecretOutput values.
// You can construct a concrete instance of `AkriConnectorsImagePullSecretInput` via:
//
//	AkriConnectorsImagePullSecretArgs{...}
type AkriConnectorsImagePullSecretInput interface {
	pulumi.Input

	ToAkriConnectorsImagePullSecretOutput() AkriConnectorsImagePullSecretOutput
	ToAkriConnectorsImagePullSecretOutputWithContext(context.Context) AkriConnectorsImagePullSecretOutput
}

// AkriConnectorsImagePullSecret properties.
type AkriConnectorsImagePullSecretArgs struct {
	// The name of the image pull secret.
	SecretRef pulumi.StringInput `pulumi:"secretRef"`
}

func (AkriConnectorsImagePullSecretArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AkriConnectorsImagePullSecret)(nil)).Elem()
}

func (i AkriConnectorsImagePullSecretArgs) ToAkriConnectorsImagePullSecretOutput() AkriConnectorsImagePullSecretOutput {
	return i.ToAkriConnectorsImagePullSecretOutputWithContext(context.Background())
}

func (i AkriConnectorsImagePullSecretArgs) ToAkriConnectorsImagePullSecretOutputWithContext(ctx context.Context) AkriConnectorsImagePullSecretOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AkriConnectorsImagePullSecretOutput)
}

// AkriConnectorsImagePullSecretArrayInput is an input type that accepts AkriConnectorsImagePullSecretArray and AkriConnectorsImagePullSecretArrayOutput values.
// You can construct a concrete instance of `AkriConnectorsImagePullSecretArrayInput` via:
//
//	AkriConnectorsImagePullSecretArray{ AkriConnectorsImagePullSecretArgs{...} }
type AkriConnectorsImagePullSecretArrayInput interface {
	pulumi.Input

	ToAkriConnectorsImagePullSecretArrayOutput() AkriConnectorsImagePullSecretArrayOutput
	ToAkriConnectorsImagePullSecretArrayOutputWithContext(context.Context) AkriConnectorsImagePullSecretArrayOutput
}

type AkriConnectorsImagePullSecretArray []AkriConnectorsImagePullSecretInput

func (AkriConnectorsImagePullSecretArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AkriConnectorsImagePullSecret)(nil)).Elem()
}

func (i AkriConnectorsImagePullSecretArray) ToAkriConnectorsImagePullSecretArrayOutput() AkriConnectorsImagePullSecretArrayOutput {
	return i.ToAkriConnectorsImagePullSecretArrayOutputWithContext(context.Background())
}

func (i AkriConnectorsImagePullSecretArray) ToAkriConnectorsImagePullSecretArrayOutputWithContext(ctx context.Context) AkriConnectorsImagePullSecretArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AkriConnectorsImagePullSecretArrayOutput)
}

// AkriConnectorsImagePullSecret properties.
type AkriConnectorsImagePullSecretOutput struct{ *pulumi.OutputState }

func (AkriConnectorsImagePullSecretOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AkriConnectorsImagePullSecret)(nil)).Elem()
}

func (o AkriConnectorsImagePullSecretOutput) ToAkriConnectorsImagePullSecretOutput() AkriConnectorsImagePullSecretOutput {
	return o
}

func (o AkriConnectorsImagePullSecretOutput) ToAkriConnectorsImagePullSecretOutputWithContext(ctx context.Context) AkriConnectorsImagePullSecretOutput {
	return o
}

// The name of the image pull secret.
func (o AkriConnectorsImagePullSecretOutput) SecretRef() pulumi.StringOutput {
	return o.ApplyT(func(v AkriConnectorsImagePullSecret) string { return v.SecretRef }).(pulumi.StringOutput)
}

type AkriConnectorsImagePullSecretArrayOutput struct{ *pulumi.OutputState }

func (AkriConnectorsImagePullSecretArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AkriConnectorsImagePullSecret)(nil)).Elem()
}

func (o AkriConnectorsImagePullSecretArrayOutput) ToAkriConnectorsImagePullSecretArrayOutput() AkriConnectorsImagePullSecretArrayOutput {
	return o
}

func (o AkriConnectorsImagePullSecretArrayOutput) ToAkriConnectorsImagePullSecretArrayOutputWithContext(ctx context.Context) AkriConnectorsImagePullSecretArrayOutput {
	return o
}

func (o AkriConnectorsImagePullSecretArrayOutput) Index(i pulumi.IntInput) AkriConnectorsImagePullSecretOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AkriConnectorsImagePullSecret {
		return vs[0].([]AkriConnectorsImagePullSecret)[vs[1].(int)]
	}).(AkriConnectorsImagePullSecretOutput)
}

// AkriConnectorsImagePullSecret properties.
type AkriConnectorsImagePullSecretResponse struct {
	// The name of the image pull secret.
	SecretRef string `pulumi:"secretRef"`
}

// AkriConnectorsImagePullSecret properties.
type AkriConnectorsImagePullSecretResponseOutput struct{ *pulumi.OutputState }

func (AkriConnectorsImagePullSecretResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AkriConnectorsImagePullSecretResponse)(nil)).Elem()
}

func (o AkriConnectorsImagePullSecretResponseOutput) ToAkriConnectorsImagePullSecretResponseOutput() AkriConnectorsImagePullSecretResponseOutput {
	return o
}

func (o AkriConnectorsImagePullSecretResponseOutput) ToAkriConnectorsImagePullSecretResponseOutputWithContext(ctx context.Context) AkriConnectorsImagePullSecretResponseOutput {
	return o
}

// The name of the image pull secret.
func (o AkriConnectorsImagePullSecretResponseOutput) SecretRef() pulumi.StringOutput {
	return o.ApplyT(func(v AkriConnectorsImagePullSecretResponse) string { return v.SecretRef }).(pulumi.StringOutput)
}

type AkriConnectorsImagePullSecretResponseArrayOutput struct{ *pulumi.OutputState }

func (AkriConnectorsImagePullSecretResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AkriConnectorsImagePullSecretResponse)(nil)).Elem()
}

func (o AkriConnectorsImagePullSecretResponseArrayOutput) ToAkriConnectorsImagePullSecretResponseArrayOutput() AkriConnectorsImagePullSecretResponseArrayOutput {
	return o
}

func (o AkriConnectorsImagePullSecretResponseArrayOutput) ToAkriConnectorsImagePullSecretResponseArrayOutputWithContext(ctx context.Context) AkriConnectorsImagePullSecretResponseArrayOutput {
	return o
}

func (o AkriConnectorsImagePullSecretResponseArrayOutput) Index(i pulumi.IntInput) AkriConnectorsImagePullSecretResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AkriConnectorsImagePullSecretResponse {
		return vs[0].([]AkriConnectorsImagePullSecretResponse)[vs[1].(int)]
	}).(AkriConnectorsImagePullSecretResponseOutput)
}

// AkriConnectorsMqttConnectionConfiguration properties.
type AkriConnectorsMqttConnectionConfiguration struct {
	// Authentication properties.
	Authentication *AkriConnectorsServiceAccountAuthentication `pulumi:"authentication"`
	// Host of the Broker in the form of <hostname>:<port>.
	Host *string `pulumi:"host"`
	// KeepAlive for connection in seconds.
	KeepAliveSeconds *int `pulumi:"keepAliveSeconds"`
	// The max number of messages to keep in flight. For subscribe, this is the receive maximum. For publish, this is the maximum number of messages to send before waiting for an ack.
	MaxInflightMessages *int `pulumi:"maxInflightMessages"`
	// The protocol to use for the connection. Currently only `mqtt` is supported.
	Protocol *string `pulumi:"protocol"`
	// Session expiry in seconds.
	SessionExpirySeconds *int `pulumi:"sessionExpirySeconds"`
	// TLS configuration.
	Tls *TlsProperties `pulumi:"tls"`
}

// Defaults sets the appropriate defaults for AkriConnectorsMqttConnectionConfiguration
func (val *AkriConnectorsMqttConnectionConfiguration) Defaults() *AkriConnectorsMqttConnectionConfiguration {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.Tls = tmp.Tls.Defaults()

	return &tmp
}

// AkriConnectorsMqttConnectionConfigurationInput is an input type that accepts AkriConnectorsMqttConnectionConfigurationArgs and AkriConnectorsMqttConnectionConfigurationOutput values.
// You can construct a concrete instance of `AkriConnectorsMqttConnectionConfigurationInput` via:
//
//	AkriConnectorsMqttConnectionConfigurationArgs{...}
type AkriConnectorsMqttConnectionConfigurationInput interface {
	pulumi.Input

	ToAkriConnectorsMqttConnectionConfigurationOutput() AkriConnectorsMqttConnectionConfigurationOutput
	ToAkriConnectorsMqttConnectionConfigurationOutputWithContext(context.Context) AkriConnectorsMqttConnectionConfigurationOutput
}

// AkriConnectorsMqttConnectionConfiguration properties.
type AkriConnectorsMqttConnectionConfigurationArgs struct {
	// Authentication properties.
	Authentication AkriConnectorsServiceAccountAuthenticationPtrInput `pulumi:"authentication"`
	// Host of the Broker in the form of <hostname>:<port>.
	Host pulumi.StringPtrInput `pulumi:"host"`
	// KeepAlive for connection in seconds.
	KeepAliveSeconds pulumi.IntPtrInput `pulumi:"keepAliveSeconds"`
	// The max number of messages to keep in flight. For subscribe, this is the receive maximum. For publish, this is the maximum number of messages to send before waiting for an ack.
	MaxInflightMessages pulumi.IntPtrInput `pulumi:"maxInflightMessages"`
	// The protocol to use for the connection. Currently only `mqtt` is supported.
	Protocol pulumi.StringPtrInput `pulumi:"protocol"`
	// Session expiry in seconds.
	SessionExpirySeconds pulumi.IntPtrInput `pulumi:"sessionExpirySeconds"`
	// TLS configuration.
	Tls TlsPropertiesPtrInput `pulumi:"tls"`
}

// Defaults sets the appropriate defaults for AkriConnectorsMqttConnectionConfigurationArgs
func (val *AkriConnectorsMqttConnectionConfigurationArgs) Defaults() *AkriConnectorsMqttConnectionConfigurationArgs {
	if val == nil {
		return nil
	}
	tmp := *val

	return &tmp
}
func (AkriConnectorsMqttConnectionConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AkriConnectorsMqttConnectionConfiguration)(nil)).Elem()
}

func (i AkriConnectorsMqttConnectionConfigurationArgs) ToAkriConnectorsMqttConnectionConfigurationOutput() AkriConnectorsMqttConnectionConfigurationOutput {
	return i.ToAkriConnectorsMqttConnectionConfigurationOutputWithContext(context.Background())
}

func (i AkriConnectorsMqttConnectionConfigurationArgs) ToAkriConnectorsMqttConnectionConfigurationOutputWithContext(ctx context.Context) AkriConnectorsMqttConnectionConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AkriConnectorsMqttConnectionConfigurationOutput)
}

func (i AkriConnectorsMqttConnectionConfigurationArgs) ToAkriConnectorsMqttConnectionConfigurationPtrOutput() AkriConnectorsMqttConnectionConfigurationPtrOutput {
	return i.ToAkriConnectorsMqttConnectionConfigurationPtrOutputWithContext(context.Background())
}

func (i AkriConnectorsMqttConnectionConfigurationArgs) ToAkriConnectorsMqttConnectionConfigurationPtrOutputWithContext(ctx context.Context) AkriConnectorsMqttConnectionConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AkriConnectorsMqttConnectionConfigurationOutput).ToAkriConnectorsMqttConnectionConfigurationPtrOutputWithContext(ctx)
}

// AkriConnectorsMqttConnectionConfigurationPtrInput is an input type that accepts AkriConnectorsMqttConnectionConfigurationArgs, AkriConnectorsMqttConnectionConfigurationPtr and AkriConnectorsMqttConnectionConfigurationPtrOutput values.
// You can construct a concrete instance of `AkriConnectorsMqttConnectionConfigurationPtrInput` via:
//
//	        AkriConnectorsMqttConnectionConfigurationArgs{...}
//
//	or:
//
//	        nil
type AkriConnectorsMqttConnectionConfigurationPtrInput interface {
	pulumi.Input

	ToAkriConnectorsMqttConnectionConfigurationPtrOutput() AkriConnectorsMqttConnectionConfigurationPtrOutput
	ToAkriConnectorsMqttConnectionConfigurationPtrOutputWithContext(context.Context) AkriConnectorsMqttConnectionConfigurationPtrOutput
}

type akriConnectorsMqttConnectionConfigurationPtrType AkriConnectorsMqttConnectionConfigurationArgs

func AkriConnectorsMqttConnectionConfigurationPtr(v *AkriConnectorsMqttConnectionConfigurationArgs) AkriConnectorsMqttConnectionConfigurationPtrInput {
	return (*akriConnectorsMqttConnectionConfigurationPtrType)(v)
}

func (*akriConnectorsMqttConnectionConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AkriConnectorsMqttConnectionConfiguration)(nil)).Elem()
}

func (i *akriConnectorsMqttConnectionConfigurationPtrType) ToAkriConnectorsMqttConnectionConfigurationPtrOutput() AkriConnectorsMqttConnectionConfigurationPtrOutput {
	return i.ToAkriConnectorsMqttConnectionConfigurationPtrOutputWithContext(context.Background())
}

func (i *akriConnectorsMqttConnectionConfigurationPtrType) ToAkriConnectorsMqttConnectionConfigurationPtrOutputWithContext(ctx context.Context) AkriConnectorsMqttConnectionConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AkriConnectorsMqttConnectionConfigurationPtrOutput)
}

// AkriConnectorsMqttConnectionConfiguration properties.
type AkriConnectorsMqttConnectionConfigurationOutput struct{ *pulumi.OutputState }

func (AkriConnectorsMqttConnectionConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AkriConnectorsMqttConnectionConfiguration)(nil)).Elem()
}

func (o AkriConnectorsMqttConnectionConfigurationOutput) ToAkriConnectorsMqttConnectionConfigurationOutput() AkriConnectorsMqttConnectionConfigurationOutput {
	return o
}

func (o AkriConnectorsMqttConnectionConfigurationOutput) ToAkriConnectorsMqttConnectionConfigurationOutputWithContext(ctx context.Context) AkriConnectorsMqttConnectionConfigurationOutput {
	return o
}

func (o AkriConnectorsMqttConnectionConfigurationOutput) ToAkriConnectorsMqttConnectionConfigurationPtrOutput() AkriConnectorsMqttConnectionConfigurationPtrOutput {
	return o.ToAkriConnectorsMqttConnectionConfigurationPtrOutputWithContext(context.Background())
}

func (o AkriConnectorsMqttConnectionConfigurationOutput) ToAkriConnectorsMqttConnectionConfigurationPtrOutputWithContext(ctx context.Context) AkriConnectorsMqttConnectionConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AkriConnectorsMqttConnectionConfiguration) *AkriConnectorsMqttConnectionConfiguration {
		return &v
	}).(AkriConnectorsMqttConnectionConfigurationPtrOutput)
}

// Authentication properties.
func (o AkriConnectorsMqttConnectionConfigurationOutput) Authentication() AkriConnectorsServiceAccountAuthenticationPtrOutput {
	return o.ApplyT(func(v AkriConnectorsMqttConnectionConfiguration) *AkriConnectorsServiceAccountAuthentication {
		return v.Authentication
	}).(AkriConnectorsServiceAccountAuthenticationPtrOutput)
}

// Host of the Broker in the form of <hostname>:<port>.
func (o AkriConnectorsMqttConnectionConfigurationOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AkriConnectorsMqttConnectionConfiguration) *string { return v.Host }).(pulumi.StringPtrOutput)
}

// KeepAlive for connection in seconds.
func (o AkriConnectorsMqttConnectionConfigurationOutput) KeepAliveSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AkriConnectorsMqttConnectionConfiguration) *int { return v.KeepAliveSeconds }).(pulumi.IntPtrOutput)
}

// The max number of messages to keep in flight. For subscribe, this is the receive maximum. For publish, this is the maximum number of messages to send before waiting for an ack.
func (o AkriConnectorsMqttConnectionConfigurationOutput) MaxInflightMessages() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AkriConnectorsMqttConnectionConfiguration) *int { return v.MaxInflightMessages }).(pulumi.IntPtrOutput)
}

// The protocol to use for the connection. Currently only `mqtt` is supported.
func (o AkriConnectorsMqttConnectionConfigurationOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AkriConnectorsMqttConnectionConfiguration) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

// Session expiry in seconds.
func (o AkriConnectorsMqttConnectionConfigurationOutput) SessionExpirySeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AkriConnectorsMqttConnectionConfiguration) *int { return v.SessionExpirySeconds }).(pulumi.IntPtrOutput)
}

// TLS configuration.
func (o AkriConnectorsMqttConnectionConfigurationOutput) Tls() TlsPropertiesPtrOutput {
	return o.ApplyT(func(v AkriConnectorsMqttConnectionConfiguration) *TlsProperties { return v.Tls }).(TlsPropertiesPtrOutput)
}

type AkriConnectorsMqttConnectionConfigurationPtrOutput struct{ *pulumi.OutputState }

func (AkriConnectorsMqttConnectionConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AkriConnectorsMqttConnectionConfiguration)(nil)).Elem()
}

func (o AkriConnectorsMqttConnectionConfigurationPtrOutput) ToAkriConnectorsMqttConnectionConfigurationPtrOutput() AkriConnectorsMqttConnectionConfigurationPtrOutput {
	return o
}

func (o AkriConnectorsMqttConnectionConfigurationPtrOutput) ToAkriConnectorsMqttConnectionConfigurationPtrOutputWithContext(ctx context.Context) AkriConnectorsMqttConnectionConfigurationPtrOutput {
	return o
}

func (o AkriConnectorsMqttConnectionConfigurationPtrOutput) Elem() AkriConnectorsMqttConnectionConfigurationOutput {
	return o.ApplyT(func(v *AkriConnectorsMqttConnectionConfiguration) AkriConnectorsMqttConnectionConfiguration {
		if v != nil {
			return *v
		}
		var ret AkriConnectorsMqttConnectionConfiguration
		return ret
	}).(AkriConnectorsMqttConnectionConfigurationOutput)
}

// Authentication properties.
func (o AkriConnectorsMqttConnectionConfigurationPtrOutput) Authentication() AkriConnectorsServiceAccountAuthenticationPtrOutput {
	return o.ApplyT(func(v *AkriConnectorsMqttConnectionConfiguration) *AkriConnectorsServiceAccountAuthentication {
		if v == nil {
			return nil
		}
		return v.Authentication
	}).(AkriConnectorsServiceAccountAuthenticationPtrOutput)
}

// Host of the Broker in the form of <hostname>:<port>.
func (o AkriConnectorsMqttConnectionConfigurationPtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AkriConnectorsMqttConnectionConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.Host
	}).(pulumi.StringPtrOutput)
}

// KeepAlive for connection in seconds.
func (o AkriConnectorsMqttConnectionConfigurationPtrOutput) KeepAliveSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AkriConnectorsMqttConnectionConfiguration) *int {
		if v == nil {
			return nil
		}
		return v.KeepAliveSeconds
	}).(pulumi.IntPtrOutput)
}

// The max number of messages to keep in flight. For subscribe, this is the receive maximum. For publish, this is the maximum number of messages to send before waiting for an ack.
func (o AkriConnectorsMqttConnectionConfigurationPtrOutput) MaxInflightMessages() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AkriConnectorsMqttConnectionConfiguration) *int {
		if v == nil {
			return nil
		}
		return v.MaxInflightMessages
	}).(pulumi.IntPtrOutput)
}

// The protocol to use for the connection. Currently only `mqtt` is supported.
func (o AkriConnectorsMqttConnectionConfigurationPtrOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AkriConnectorsMqttConnectionConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.Protocol
	}).(pulumi.StringPtrOutput)
}

// Session expiry in seconds.
func (o AkriConnectorsMqttConnectionConfigurationPtrOutput) SessionExpirySeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AkriConnectorsMqttConnectionConfiguration) *int {
		if v == nil {
			return nil
		}
		return v.SessionExpirySeconds
	}).(pulumi.IntPtrOutput)
}

// TLS configuration.
func (o AkriConnectorsMqttConnectionConfigurationPtrOutput) Tls() TlsPropertiesPtrOutput {
	return o.ApplyT(func(v *AkriConnectorsMqttConnectionConfiguration) *TlsProperties {
		if v == nil {
			return nil
		}
		return v.Tls
	}).(TlsPropertiesPtrOutput)
}

// AkriConnectorsMqttConnectionConfiguration properties.
type AkriConnectorsMqttConnectionConfigurationResponse struct {
	// Authentication properties.
	Authentication *AkriConnectorsServiceAccountAuthenticationResponse `pulumi:"authentication"`
	// Host of the Broker in the form of <hostname>:<port>.
	Host *string `pulumi:"host"`
	// KeepAlive for connection in seconds.
	KeepAliveSeconds *int `pulumi:"keepAliveSeconds"`
	// The max number of messages to keep in flight. For subscribe, this is the receive maximum. For publish, this is the maximum number of messages to send before waiting for an ack.
	MaxInflightMessages *int `pulumi:"maxInflightMessages"`
	// The protocol to use for the connection. Currently only `mqtt` is supported.
	Protocol *string `pulumi:"protocol"`
	// Session expiry in seconds.
	SessionExpirySeconds *int `pulumi:"sessionExpirySeconds"`
	// TLS configuration.
	Tls *TlsPropertiesResponse `pulumi:"tls"`
}

// Defaults sets the appropriate defaults for AkriConnectorsMqttConnectionConfigurationResponse
func (val *AkriConnectorsMqttConnectionConfigurationResponse) Defaults() *AkriConnectorsMqttConnectionConfigurationResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.Tls = tmp.Tls.Defaults()

	return &tmp
}

// AkriConnectorsMqttConnectionConfiguration properties.
type AkriConnectorsMqttConnectionConfigurationResponseOutput struct{ *pulumi.OutputState }

func (AkriConnectorsMqttConnectionConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AkriConnectorsMqttConnectionConfigurationResponse)(nil)).Elem()
}

func (o AkriConnectorsMqttConnectionConfigurationResponseOutput) ToAkriConnectorsMqttConnectionConfigurationResponseOutput() AkriConnectorsMqttConnectionConfigurationResponseOutput {
	return o
}

func (o AkriConnectorsMqttConnectionConfigurationResponseOutput) ToAkriConnectorsMqttConnectionConfigurationResponseOutputWithContext(ctx context.Context) AkriConnectorsMqttConnectionConfigurationResponseOutput {
	return o
}

// Authentication properties.
func (o AkriConnectorsMqttConnectionConfigurationResponseOutput) Authentication() AkriConnectorsServiceAccountAuthenticationResponsePtrOutput {
	return o.ApplyT(func(v AkriConnectorsMqttConnectionConfigurationResponse) *AkriConnectorsServiceAccountAuthenticationResponse {
		return v.Authentication
	}).(AkriConnectorsServiceAccountAuthenticationResponsePtrOutput)
}

// Host of the Broker in the form of <hostname>:<port>.
func (o AkriConnectorsMqttConnectionConfigurationResponseOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AkriConnectorsMqttConnectionConfigurationResponse) *string { return v.Host }).(pulumi.StringPtrOutput)
}

// KeepAlive for connection in seconds.
func (o AkriConnectorsMqttConnectionConfigurationResponseOutput) KeepAliveSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AkriConnectorsMqttConnectionConfigurationResponse) *int { return v.KeepAliveSeconds }).(pulumi.IntPtrOutput)
}

// The max number of messages to keep in flight. For subscribe, this is the receive maximum. For publish, this is the maximum number of messages to send before waiting for an ack.
func (o AkriConnectorsMqttConnectionConfigurationResponseOutput) MaxInflightMessages() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AkriConnectorsMqttConnectionConfigurationResponse) *int { return v.MaxInflightMessages }).(pulumi.IntPtrOutput)
}

// The protocol to use for the connection. Currently only `mqtt` is supported.
func (o AkriConnectorsMqttConnectionConfigurationResponseOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AkriConnectorsMqttConnectionConfigurationResponse) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

// Session expiry in seconds.
func (o AkriConnectorsMqttConnectionConfigurationResponseOutput) SessionExpirySeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AkriConnectorsMqttConnectionConfigurationResponse) *int { return v.SessionExpirySeconds }).(pulumi.IntPtrOutput)
}

// TLS configuration.
func (o AkriConnectorsMqttConnectionConfigurationResponseOutput) Tls() TlsPropertiesResponsePtrOutput {
	return o.ApplyT(func(v AkriConnectorsMqttConnectionConfigurationResponse) *TlsPropertiesResponse { return v.Tls }).(TlsPropertiesResponsePtrOutput)
}

type AkriConnectorsMqttConnectionConfigurationResponsePtrOutput struct{ *pulumi.OutputState }

func (AkriConnectorsMqttConnectionConfigurationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AkriConnectorsMqttConnectionConfigurationResponse)(nil)).Elem()
}

func (o AkriConnectorsMqttConnectionConfigurationResponsePtrOutput) ToAkriConnectorsMqttConnectionConfigurationResponsePtrOutput() AkriConnectorsMqttConnectionConfigurationResponsePtrOutput {
	return o
}

func (o AkriConnectorsMqttConnectionConfigurationResponsePtrOutput) ToAkriConnectorsMqttConnectionConfigurationResponsePtrOutputWithContext(ctx context.Context) AkriConnectorsMqttConnectionConfigurationResponsePtrOutput {
	return o
}

func (o AkriConnectorsMqttConnectionConfigurationResponsePtrOutput) Elem() AkriConnectorsMqttConnectionConfigurationResponseOutput {
	return o.ApplyT(func(v *AkriConnectorsMqttConnectionConfigurationResponse) AkriConnectorsMqttConnectionConfigurationResponse {
		if v != nil {
			return *v
		}
		var ret AkriConnectorsMqttConnectionConfigurationResponse
		return ret
	}).(AkriConnectorsMqttConnectionConfigurationResponseOutput)
}

// Authentication properties.
func (o AkriConnectorsMqttConnectionConfigurationResponsePtrOutput) Authentication() AkriConnectorsServiceAccountAuthenticationResponsePtrOutput {
	return o.ApplyT(func(v *AkriConnectorsMqttConnectionConfigurationResponse) *AkriConnectorsServiceAccountAuthenticationResponse {
		if v == nil {
			return nil
		}
		return v.Authentication
	}).(AkriConnectorsServiceAccountAuthenticationResponsePtrOutput)
}

// Host of the Broker in the form of <hostname>:<port>.
func (o AkriConnectorsMqttConnectionConfigurationResponsePtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AkriConnectorsMqttConnectionConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.Host
	}).(pulumi.StringPtrOutput)
}

// KeepAlive for connection in seconds.
func (o AkriConnectorsMqttConnectionConfigurationResponsePtrOutput) KeepAliveSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AkriConnectorsMqttConnectionConfigurationResponse) *int {
		if v == nil {
			return nil
		}
		return v.KeepAliveSeconds
	}).(pulumi.IntPtrOutput)
}

// The max number of messages to keep in flight. For subscribe, this is the receive maximum. For publish, this is the maximum number of messages to send before waiting for an ack.
func (o AkriConnectorsMqttConnectionConfigurationResponsePtrOutput) MaxInflightMessages() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AkriConnectorsMqttConnectionConfigurationResponse) *int {
		if v == nil {
			return nil
		}
		return v.MaxInflightMessages
	}).(pulumi.IntPtrOutput)
}

// The protocol to use for the connection. Currently only `mqtt` is supported.
func (o AkriConnectorsMqttConnectionConfigurationResponsePtrOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AkriConnectorsMqttConnectionConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.Protocol
	}).(pulumi.StringPtrOutput)
}

// Session expiry in seconds.
func (o AkriConnectorsMqttConnectionConfigurationResponsePtrOutput) SessionExpirySeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AkriConnectorsMqttConnectionConfigurationResponse) *int {
		if v == nil {
			return nil
		}
		return v.SessionExpirySeconds
	}).(pulumi.IntPtrOutput)
}

// TLS configuration.
func (o AkriConnectorsMqttConnectionConfigurationResponsePtrOutput) Tls() TlsPropertiesResponsePtrOutput {
	return o.ApplyT(func(v *AkriConnectorsMqttConnectionConfigurationResponse) *TlsPropertiesResponse {
		if v == nil {
			return nil
		}
		return v.Tls
	}).(TlsPropertiesResponsePtrOutput)
}

// AkriConnectorsRegistryEndpointRef properties.
type AkriConnectorsRegistryEndpointRef struct {
	// The name of the registry endpoint.
	RegistryEndpointRef string `pulumi:"registryEndpointRef"`
	// AkriConnectorsRegistrySettings properties.
	// Expected value is 'RegistryEndpointRef'.
	RegistrySettingsType string `pulumi:"registrySettingsType"`
}

// AkriConnectorsRegistryEndpointRefInput is an input type that accepts AkriConnectorsRegistryEndpointRefArgs and AkriConnectorsRegistryEndpointRefOutput values.
// You can construct a concrete instance of `AkriConnectorsRegistryEndpointRefInput` via:
//
//	AkriConnectorsRegistryEndpointRefArgs{...}
type AkriConnectorsRegistryEndpointRefInput interface {
	pulumi.Input

	ToAkriConnectorsRegistryEndpointRefOutput() AkriConnectorsRegistryEndpointRefOutput
	ToAkriConnectorsRegistryEndpointRefOutputWithContext(context.Context) AkriConnectorsRegistryEndpointRefOutput
}

// AkriConnectorsRegistryEndpointRef properties.
type AkriConnectorsRegistryEndpointRefArgs struct {
	// The name of the registry endpoint.
	RegistryEndpointRef pulumi.StringInput `pulumi:"registryEndpointRef"`
	// AkriConnectorsRegistrySettings properties.
	// Expected value is 'RegistryEndpointRef'.
	RegistrySettingsType pulumi.StringInput `pulumi:"registrySettingsType"`
}

func (AkriConnectorsRegistryEndpointRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AkriConnectorsRegistryEndpointRef)(nil)).Elem()
}

func (i AkriConnectorsRegistryEndpointRefArgs) ToAkriConnectorsRegistryEndpointRefOutput() AkriConnectorsRegistryEndpointRefOutput {
	return i.ToAkriConnectorsRegistryEndpointRefOutputWithContext(context.Background())
}

func (i AkriConnectorsRegistryEndpointRefArgs) ToAkriConnectorsRegistryEndpointRefOutputWithContext(ctx context.Context) AkriConnectorsRegistryEndpointRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AkriConnectorsRegistryEndpointRefOutput)
}

func (i AkriConnectorsRegistryEndpointRefArgs) ToAkriConnectorsRegistryEndpointRefPtrOutput() AkriConnectorsRegistryEndpointRefPtrOutput {
	return i.ToAkriConnectorsRegistryEndpointRefPtrOutputWithContext(context.Background())
}

func (i AkriConnectorsRegistryEndpointRefArgs) ToAkriConnectorsRegistryEndpointRefPtrOutputWithContext(ctx context.Context) AkriConnectorsRegistryEndpointRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AkriConnectorsRegistryEndpointRefOutput).ToAkriConnectorsRegistryEndpointRefPtrOutputWithContext(ctx)
}

// AkriConnectorsRegistryEndpointRefPtrInput is an input type that accepts AkriConnectorsRegistryEndpointRefArgs, AkriConnectorsRegistryEndpointRefPtr and AkriConnectorsRegistryEndpointRefPtrOutput values.
// You can construct a concrete instance of `AkriConnectorsRegistryEndpointRefPtrInput` via:
//
//	        AkriConnectorsRegistryEndpointRefArgs{...}
//
//	or:
//
//	        nil
type AkriConnectorsRegistryEndpointRefPtrInput interface {
	pulumi.Input

	ToAkriConnectorsRegistryEndpointRefPtrOutput() AkriConnectorsRegistryEndpointRefPtrOutput
	ToAkriConnectorsRegistryEndpointRefPtrOutputWithContext(context.Context) AkriConnectorsRegistryEndpointRefPtrOutput
}

type akriConnectorsRegistryEndpointRefPtrType AkriConnectorsRegistryEndpointRefArgs

func AkriConnectorsRegistryEndpointRefPtr(v *AkriConnectorsRegistryEndpointRefArgs) AkriConnectorsRegistryEndpointRefPtrInput {
	return (*akriConnectorsRegistryEndpointRefPtrType)(v)
}

func (*akriConnectorsRegistryEndpointRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AkriConnectorsRegistryEndpointRef)(nil)).Elem()
}

func (i *akriConnectorsRegistryEndpointRefPtrType) ToAkriConnectorsRegistryEndpointRefPtrOutput() AkriConnectorsRegistryEndpointRefPtrOutput {
	return i.ToAkriConnectorsRegistryEndpointRefPtrOutputWithContext(context.Background())
}

func (i *akriConnectorsRegistryEndpointRefPtrType) ToAkriConnectorsRegistryEndpointRefPtrOutputWithContext(ctx context.Context) AkriConnectorsRegistryEndpointRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AkriConnectorsRegistryEndpointRefPtrOutput)
}

// AkriConnectorsRegistryEndpointRef properties.
type AkriConnectorsRegistryEndpointRefOutput struct{ *pulumi.OutputState }

func (AkriConnectorsRegistryEndpointRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AkriConnectorsRegistryEndpointRef)(nil)).Elem()
}

func (o AkriConnectorsRegistryEndpointRefOutput) ToAkriConnectorsRegistryEndpointRefOutput() AkriConnectorsRegistryEndpointRefOutput {
	return o
}

func (o AkriConnectorsRegistryEndpointRefOutput) ToAkriConnectorsRegistryEndpointRefOutputWithContext(ctx context.Context) AkriConnectorsRegistryEndpointRefOutput {
	return o
}

func (o AkriConnectorsRegistryEndpointRefOutput) ToAkriConnectorsRegistryEndpointRefPtrOutput() AkriConnectorsRegistryEndpointRefPtrOutput {
	return o.ToAkriConnectorsRegistryEndpointRefPtrOutputWithContext(context.Background())
}

func (o AkriConnectorsRegistryEndpointRefOutput) ToAkriConnectorsRegistryEndpointRefPtrOutputWithContext(ctx context.Context) AkriConnectorsRegistryEndpointRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AkriConnectorsRegistryEndpointRef) *AkriConnectorsRegistryEndpointRef {
		return &v
	}).(AkriConnectorsRegistryEndpointRefPtrOutput)
}

// The name of the registry endpoint.
func (o AkriConnectorsRegistryEndpointRefOutput) RegistryEndpointRef() pulumi.StringOutput {
	return o.ApplyT(func(v AkriConnectorsRegistryEndpointRef) string { return v.RegistryEndpointRef }).(pulumi.StringOutput)
}

// AkriConnectorsRegistrySettings properties.
// Expected value is 'RegistryEndpointRef'.
func (o AkriConnectorsRegistryEndpointRefOutput) RegistrySettingsType() pulumi.StringOutput {
	return o.ApplyT(func(v AkriConnectorsRegistryEndpointRef) string { return v.RegistrySettingsType }).(pulumi.StringOutput)
}

type AkriConnectorsRegistryEndpointRefPtrOutput struct{ *pulumi.OutputState }

func (AkriConnectorsRegistryEndpointRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AkriConnectorsRegistryEndpointRef)(nil)).Elem()
}

func (o AkriConnectorsRegistryEndpointRefPtrOutput) ToAkriConnectorsRegistryEndpointRefPtrOutput() AkriConnectorsRegistryEndpointRefPtrOutput {
	return o
}

func (o AkriConnectorsRegistryEndpointRefPtrOutput) ToAkriConnectorsRegistryEndpointRefPtrOutputWithContext(ctx context.Context) AkriConnectorsRegistryEndpointRefPtrOutput {
	return o
}

func (o AkriConnectorsRegistryEndpointRefPtrOutput) Elem() AkriConnectorsRegistryEndpointRefOutput {
	return o.ApplyT(func(v *AkriConnectorsRegistryEndpointRef) AkriConnectorsRegistryEndpointRef {
		if v != nil {
			return *v
		}
		var ret AkriConnectorsRegistryEndpointRef
		return ret
	}).(AkriConnectorsRegistryEndpointRefOutput)
}

// The name of the registry endpoint.
func (o AkriConnectorsRegistryEndpointRefPtrOutput) RegistryEndpointRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AkriConnectorsRegistryEndpointRef) *string {
		if v == nil {
			return nil
		}
		return &v.RegistryEndpointRef
	}).(pulumi.StringPtrOutput)
}

// AkriConnectorsRegistrySettings properties.
// Expected value is 'RegistryEndpointRef'.
func (o AkriConnectorsRegistryEndpointRefPtrOutput) RegistrySettingsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AkriConnectorsRegistryEndpointRef) *string {
		if v == nil {
			return nil
		}
		return &v.RegistrySettingsType
	}).(pulumi.StringPtrOutput)
}

// AkriConnectorsRegistryEndpointRef properties.
type AkriConnectorsRegistryEndpointRefResponse struct {
	// The name of the registry endpoint.
	RegistryEndpointRef string `pulumi:"registryEndpointRef"`
	// AkriConnectorsRegistrySettings properties.
	// Expected value is 'RegistryEndpointRef'.
	RegistrySettingsType string `pulumi:"registrySettingsType"`
}

// AkriConnectorsRegistryEndpointRef properties.
type AkriConnectorsRegistryEndpointRefResponseOutput struct{ *pulumi.OutputState }

func (AkriConnectorsRegistryEndpointRefResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AkriConnectorsRegistryEndpointRefResponse)(nil)).Elem()
}

func (o AkriConnectorsRegistryEndpointRefResponseOutput) ToAkriConnectorsRegistryEndpointRefResponseOutput() AkriConnectorsRegistryEndpointRefResponseOutput {
	return o
}

func (o AkriConnectorsRegistryEndpointRefResponseOutput) ToAkriConnectorsRegistryEndpointRefResponseOutputWithContext(ctx context.Context) AkriConnectorsRegistryEndpointRefResponseOutput {
	return o
}

// The name of the registry endpoint.
func (o AkriConnectorsRegistryEndpointRefResponseOutput) RegistryEndpointRef() pulumi.StringOutput {
	return o.ApplyT(func(v AkriConnectorsRegistryEndpointRefResponse) string { return v.RegistryEndpointRef }).(pulumi.StringOutput)
}

// AkriConnectorsRegistrySettings properties.
// Expected value is 'RegistryEndpointRef'.
func (o AkriConnectorsRegistryEndpointRefResponseOutput) RegistrySettingsType() pulumi.StringOutput {
	return o.ApplyT(func(v AkriConnectorsRegistryEndpointRefResponse) string { return v.RegistrySettingsType }).(pulumi.StringOutput)
}

type AkriConnectorsRegistryEndpointRefResponsePtrOutput struct{ *pulumi.OutputState }

func (AkriConnectorsRegistryEndpointRefResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AkriConnectorsRegistryEndpointRefResponse)(nil)).Elem()
}

func (o AkriConnectorsRegistryEndpointRefResponsePtrOutput) ToAkriConnectorsRegistryEndpointRefResponsePtrOutput() AkriConnectorsRegistryEndpointRefResponsePtrOutput {
	return o
}

func (o AkriConnectorsRegistryEndpointRefResponsePtrOutput) ToAkriConnectorsRegistryEndpointRefResponsePtrOutputWithContext(ctx context.Context) AkriConnectorsRegistryEndpointRefResponsePtrOutput {
	return o
}

func (o AkriConnectorsRegistryEndpointRefResponsePtrOutput) Elem() AkriConnectorsRegistryEndpointRefResponseOutput {
	return o.ApplyT(func(v *AkriConnectorsRegistryEndpointRefResponse) AkriConnectorsRegistryEndpointRefResponse {
		if v != nil {
			return *v
		}
		var ret AkriConnectorsRegistryEndpointRefResponse
		return ret
	}).(AkriConnectorsRegistryEndpointRefResponseOutput)
}

// The name of the registry endpoint.
func (o AkriConnectorsRegistryEndpointRefResponsePtrOutput) RegistryEndpointRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AkriConnectorsRegistryEndpointRefResponse) *string {
		if v == nil {
			return nil
		}
		return &v.RegistryEndpointRef
	}).(pulumi.StringPtrOutput)
}

// AkriConnectorsRegistrySettings properties.
// Expected value is 'RegistryEndpointRef'.
func (o AkriConnectorsRegistryEndpointRefResponsePtrOutput) RegistrySettingsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AkriConnectorsRegistryEndpointRefResponse) *string {
		if v == nil {
			return nil
		}
		return &v.RegistrySettingsType
	}).(pulumi.StringPtrOutput)
}

// AkriConnectorsSecret properties.
type AkriConnectorsSecret struct {
	// The application-defined alias for the secret.
	SecretAlias string `pulumi:"secretAlias"`
	// The key in the secret to be mounted.
	SecretKey string `pulumi:"secretKey"`
	// The name of the secret to be mounted.
	SecretRef string `pulumi:"secretRef"`
}

// AkriConnectorsSecretInput is an input type that accepts AkriConnectorsSecretArgs and AkriConnectorsSecretOutput values.
// You can construct a concrete instance of `AkriConnectorsSecretInput` via:
//
//	AkriConnectorsSecretArgs{...}
type AkriConnectorsSecretInput interface {
	pulumi.Input

	ToAkriConnectorsSecretOutput() AkriConnectorsSecretOutput
	ToAkriConnectorsSecretOutputWithContext(context.Context) AkriConnectorsSecretOutput
}

// AkriConnectorsSecret properties.
type AkriConnectorsSecretArgs struct {
	// The application-defined alias for the secret.
	SecretAlias pulumi.StringInput `pulumi:"secretAlias"`
	// The key in the secret to be mounted.
	SecretKey pulumi.StringInput `pulumi:"secretKey"`
	// The name of the secret to be mounted.
	SecretRef pulumi.StringInput `pulumi:"secretRef"`
}

func (AkriConnectorsSecretArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AkriConnectorsSecret)(nil)).Elem()
}

func (i AkriConnectorsSecretArgs) ToAkriConnectorsSecretOutput() AkriConnectorsSecretOutput {
	return i.ToAkriConnectorsSecretOutputWithContext(context.Background())
}

func (i AkriConnectorsSecretArgs) ToAkriConnectorsSecretOutputWithContext(ctx context.Context) AkriConnectorsSecretOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AkriConnectorsSecretOutput)
}

// AkriConnectorsSecretArrayInput is an input type that accepts AkriConnectorsSecretArray and AkriConnectorsSecretArrayOutput values.
// You can construct a concrete instance of `AkriConnectorsSecretArrayInput` via:
//
//	AkriConnectorsSecretArray{ AkriConnectorsSecretArgs{...} }
type AkriConnectorsSecretArrayInput interface {
	pulumi.Input

	ToAkriConnectorsSecretArrayOutput() AkriConnectorsSecretArrayOutput
	ToAkriConnectorsSecretArrayOutputWithContext(context.Context) AkriConnectorsSecretArrayOutput
}

type AkriConnectorsSecretArray []AkriConnectorsSecretInput

func (AkriConnectorsSecretArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AkriConnectorsSecret)(nil)).Elem()
}

func (i AkriConnectorsSecretArray) ToAkriConnectorsSecretArrayOutput() AkriConnectorsSecretArrayOutput {
	return i.ToAkriConnectorsSecretArrayOutputWithContext(context.Background())
}

func (i AkriConnectorsSecretArray) ToAkriConnectorsSecretArrayOutputWithContext(ctx context.Context) AkriConnectorsSecretArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AkriConnectorsSecretArrayOutput)
}

// AkriConnectorsSecret properties.
type AkriConnectorsSecretOutput struct{ *pulumi.OutputState }

func (AkriConnectorsSecretOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AkriConnectorsSecret)(nil)).Elem()
}

func (o AkriConnectorsSecretOutput) ToAkriConnectorsSecretOutput() AkriConnectorsSecretOutput {
	return o
}

func (o AkriConnectorsSecretOutput) ToAkriConnectorsSecretOutputWithContext(ctx context.Context) AkriConnectorsSecretOutput {
	return o
}

// The application-defined alias for the secret.
func (o AkriConnectorsSecretOutput) SecretAlias() pulumi.StringOutput {
	return o.ApplyT(func(v AkriConnectorsSecret) string { return v.SecretAlias }).(pulumi.StringOutput)
}

// The key in the secret to be mounted.
func (o AkriConnectorsSecretOutput) SecretKey() pulumi.StringOutput {
	return o.ApplyT(func(v AkriConnectorsSecret) string { return v.SecretKey }).(pulumi.StringOutput)
}

// The name of the secret to be mounted.
func (o AkriConnectorsSecretOutput) SecretRef() pulumi.StringOutput {
	return o.ApplyT(func(v AkriConnectorsSecret) string { return v.SecretRef }).(pulumi.StringOutput)
}

type AkriConnectorsSecretArrayOutput struct{ *pulumi.OutputState }

func (AkriConnectorsSecretArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AkriConnectorsSecret)(nil)).Elem()
}

func (o AkriConnectorsSecretArrayOutput) ToAkriConnectorsSecretArrayOutput() AkriConnectorsSecretArrayOutput {
	return o
}

func (o AkriConnectorsSecretArrayOutput) ToAkriConnectorsSecretArrayOutputWithContext(ctx context.Context) AkriConnectorsSecretArrayOutput {
	return o
}

func (o AkriConnectorsSecretArrayOutput) Index(i pulumi.IntInput) AkriConnectorsSecretOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AkriConnectorsSecret {
		return vs[0].([]AkriConnectorsSecret)[vs[1].(int)]
	}).(AkriConnectorsSecretOutput)
}

// AkriConnectorsSecret properties.
type AkriConnectorsSecretResponse struct {
	// The application-defined alias for the secret.
	SecretAlias string `pulumi:"secretAlias"`
	// The key in the secret to be mounted.
	SecretKey string `pulumi:"secretKey"`
	// The name of the secret to be mounted.
	SecretRef string `pulumi:"secretRef"`
}

// AkriConnectorsSecret properties.
type AkriConnectorsSecretResponseOutput struct{ *pulumi.OutputState }

func (AkriConnectorsSecretResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AkriConnectorsSecretResponse)(nil)).Elem()
}

func (o AkriConnectorsSecretResponseOutput) ToAkriConnectorsSecretResponseOutput() AkriConnectorsSecretResponseOutput {
	return o
}

func (o AkriConnectorsSecretResponseOutput) ToAkriConnectorsSecretResponseOutputWithContext(ctx context.Context) AkriConnectorsSecretResponseOutput {
	return o
}

// The application-defined alias for the secret.
func (o AkriConnectorsSecretResponseOutput) SecretAlias() pulumi.StringOutput {
	return o.ApplyT(func(v AkriConnectorsSecretResponse) string { return v.SecretAlias }).(pulumi.StringOutput)
}

// The key in the secret to be mounted.
func (o AkriConnectorsSecretResponseOutput) SecretKey() pulumi.StringOutput {
	return o.ApplyT(func(v AkriConnectorsSecretResponse) string { return v.SecretKey }).(pulumi.StringOutput)
}

// The name of the secret to be mounted.
func (o AkriConnectorsSecretResponseOutput) SecretRef() pulumi.StringOutput {
	return o.ApplyT(func(v AkriConnectorsSecretResponse) string { return v.SecretRef }).(pulumi.StringOutput)
}

type AkriConnectorsSecretResponseArrayOutput struct{ *pulumi.OutputState }

func (AkriConnectorsSecretResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AkriConnectorsSecretResponse)(nil)).Elem()
}

func (o AkriConnectorsSecretResponseArrayOutput) ToAkriConnectorsSecretResponseArrayOutput() AkriConnectorsSecretResponseArrayOutput {
	return o
}

func (o AkriConnectorsSecretResponseArrayOutput) ToAkriConnectorsSecretResponseArrayOutputWithContext(ctx context.Context) AkriConnectorsSecretResponseArrayOutput {
	return o
}

func (o AkriConnectorsSecretResponseArrayOutput) Index(i pulumi.IntInput) AkriConnectorsSecretResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AkriConnectorsSecretResponse {
		return vs[0].([]AkriConnectorsSecretResponse)[vs[1].(int)]
	}).(AkriConnectorsSecretResponseOutput)
}

// AkriConnectorsServiceAccountAuthentication properties.
type AkriConnectorsServiceAccountAuthentication struct {
	// AkriConnectorsMqttAuthenticationMethod properties.
	// Expected value is 'ServiceAccountToken'.
	Method string `pulumi:"method"`
	// The service account token for the MQTT connection.
	ServiceAccountTokenSettings AkriConnectorsServiceAccountTokenSettings `pulumi:"serviceAccountTokenSettings"`
}

// AkriConnectorsServiceAccountAuthenticationInput is an input type that accepts AkriConnectorsServiceAccountAuthenticationArgs and AkriConnectorsServiceAccountAuthenticationOutput values.
// You can construct a concrete instance of `AkriConnectorsServiceAccountAuthenticationInput` via:
//
//	AkriConnectorsServiceAccountAuthenticationArgs{...}
type AkriConnectorsServiceAccountAuthenticationInput interface {
	pulumi.Input

	ToAkriConnectorsServiceAccountAuthenticationOutput() AkriConnectorsServiceAccountAuthenticationOutput
	ToAkriConnectorsServiceAccountAuthenticationOutputWithContext(context.Context) AkriConnectorsServiceAccountAuthenticationOutput
}

// AkriConnectorsServiceAccountAuthentication properties.
type AkriConnectorsServiceAccountAuthenticationArgs struct {
	// AkriConnectorsMqttAuthenticationMethod properties.
	// Expected value is 'ServiceAccountToken'.
	Method pulumi.StringInput `pulumi:"method"`
	// The service account token for the MQTT connection.
	ServiceAccountTokenSettings AkriConnectorsServiceAccountTokenSettingsInput `pulumi:"serviceAccountTokenSettings"`
}

func (AkriConnectorsServiceAccountAuthenticationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AkriConnectorsServiceAccountAuthentication)(nil)).Elem()
}

func (i AkriConnectorsServiceAccountAuthenticationArgs) ToAkriConnectorsServiceAccountAuthenticationOutput() AkriConnectorsServiceAccountAuthenticationOutput {
	return i.ToAkriConnectorsServiceAccountAuthenticationOutputWithContext(context.Background())
}

func (i AkriConnectorsServiceAccountAuthenticationArgs) ToAkriConnectorsServiceAccountAuthenticationOutputWithContext(ctx context.Context) AkriConnectorsServiceAccountAuthenticationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AkriConnectorsServiceAccountAuthenticationOutput)
}

func (i AkriConnectorsServiceAccountAuthenticationArgs) ToAkriConnectorsServiceAccountAuthenticationPtrOutput() AkriConnectorsServiceAccountAuthenticationPtrOutput {
	return i.ToAkriConnectorsServiceAccountAuthenticationPtrOutputWithContext(context.Background())
}

func (i AkriConnectorsServiceAccountAuthenticationArgs) ToAkriConnectorsServiceAccountAuthenticationPtrOutputWithContext(ctx context.Context) AkriConnectorsServiceAccountAuthenticationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AkriConnectorsServiceAccountAuthenticationOutput).ToAkriConnectorsServiceAccountAuthenticationPtrOutputWithContext(ctx)
}

// AkriConnectorsServiceAccountAuthenticationPtrInput is an input type that accepts AkriConnectorsServiceAccountAuthenticationArgs, AkriConnectorsServiceAccountAuthenticationPtr and AkriConnectorsServiceAccountAuthenticationPtrOutput values.
// You can construct a concrete instance of `AkriConnectorsServiceAccountAuthenticationPtrInput` via:
//
//	        AkriConnectorsServiceAccountAuthenticationArgs{...}
//
//	or:
//
//	        nil
type AkriConnectorsServiceAccountAuthenticationPtrInput interface {
	pulumi.Input

	ToAkriConnectorsServiceAccountAuthenticationPtrOutput() AkriConnectorsServiceAccountAuthenticationPtrOutput
	ToAkriConnectorsServiceAccountAuthenticationPtrOutputWithContext(context.Context) AkriConnectorsServiceAccountAuthenticationPtrOutput
}

type akriConnectorsServiceAccountAuthenticationPtrType AkriConnectorsServiceAccountAuthenticationArgs

func AkriConnectorsServiceAccountAuthenticationPtr(v *AkriConnectorsServiceAccountAuthenticationArgs) AkriConnectorsServiceAccountAuthenticationPtrInput {
	return (*akriConnectorsServiceAccountAuthenticationPtrType)(v)
}

func (*akriConnectorsServiceAccountAuthenticationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AkriConnectorsServiceAccountAuthentication)(nil)).Elem()
}

func (i *akriConnectorsServiceAccountAuthenticationPtrType) ToAkriConnectorsServiceAccountAuthenticationPtrOutput() AkriConnectorsServiceAccountAuthenticationPtrOutput {
	return i.ToAkriConnectorsServiceAccountAuthenticationPtrOutputWithContext(context.Background())
}

func (i *akriConnectorsServiceAccountAuthenticationPtrType) ToAkriConnectorsServiceAccountAuthenticationPtrOutputWithContext(ctx context.Context) AkriConnectorsServiceAccountAuthenticationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AkriConnectorsServiceAccountAuthenticationPtrOutput)
}

// AkriConnectorsServiceAccountAuthentication properties.
type AkriConnectorsServiceAccountAuthenticationOutput struct{ *pulumi.OutputState }

func (AkriConnectorsServiceAccountAuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AkriConnectorsServiceAccountAuthentication)(nil)).Elem()
}

func (o AkriConnectorsServiceAccountAuthenticationOutput) ToAkriConnectorsServiceAccountAuthenticationOutput() AkriConnectorsServiceAccountAuthenticationOutput {
	return o
}

func (o AkriConnectorsServiceAccountAuthenticationOutput) ToAkriConnectorsServiceAccountAuthenticationOutputWithContext(ctx context.Context) AkriConnectorsServiceAccountAuthenticationOutput {
	return o
}

func (o AkriConnectorsServiceAccountAuthenticationOutput) ToAkriConnectorsServiceAccountAuthenticationPtrOutput() AkriConnectorsServiceAccountAuthenticationPtrOutput {
	return o.ToAkriConnectorsServiceAccountAuthenticationPtrOutputWithContext(context.Background())
}

func (o AkriConnectorsServiceAccountAuthenticationOutput) ToAkriConnectorsServiceAccountAuthenticationPtrOutputWithContext(ctx context.Context) AkriConnectorsServiceAccountAuthenticationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AkriConnectorsServiceAccountAuthentication) *AkriConnectorsServiceAccountAuthentication {
		return &v
	}).(AkriConnectorsServiceAccountAuthenticationPtrOutput)
}

// AkriConnectorsMqttAuthenticationMethod properties.
// Expected value is 'ServiceAccountToken'.
func (o AkriConnectorsServiceAccountAuthenticationOutput) Method() pulumi.StringOutput {
	return o.ApplyT(func(v AkriConnectorsServiceAccountAuthentication) string { return v.Method }).(pulumi.StringOutput)
}

// The service account token for the MQTT connection.
func (o AkriConnectorsServiceAccountAuthenticationOutput) ServiceAccountTokenSettings() AkriConnectorsServiceAccountTokenSettingsOutput {
	return o.ApplyT(func(v AkriConnectorsServiceAccountAuthentication) AkriConnectorsServiceAccountTokenSettings {
		return v.ServiceAccountTokenSettings
	}).(AkriConnectorsServiceAccountTokenSettingsOutput)
}

type AkriConnectorsServiceAccountAuthenticationPtrOutput struct{ *pulumi.OutputState }

func (AkriConnectorsServiceAccountAuthenticationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AkriConnectorsServiceAccountAuthentication)(nil)).Elem()
}

func (o AkriConnectorsServiceAccountAuthenticationPtrOutput) ToAkriConnectorsServiceAccountAuthenticationPtrOutput() AkriConnectorsServiceAccountAuthenticationPtrOutput {
	return o
}

func (o AkriConnectorsServiceAccountAuthenticationPtrOutput) ToAkriConnectorsServiceAccountAuthenticationPtrOutputWithContext(ctx context.Context) AkriConnectorsServiceAccountAuthenticationPtrOutput {
	return o
}

func (o AkriConnectorsServiceAccountAuthenticationPtrOutput) Elem() AkriConnectorsServiceAccountAuthenticationOutput {
	return o.ApplyT(func(v *AkriConnectorsServiceAccountAuthentication) AkriConnectorsServiceAccountAuthentication {
		if v != nil {
			return *v
		}
		var ret AkriConnectorsServiceAccountAuthentication
		return ret
	}).(AkriConnectorsServiceAccountAuthenticationOutput)
}

// AkriConnectorsMqttAuthenticationMethod properties.
// Expected value is 'ServiceAccountToken'.
func (o AkriConnectorsServiceAccountAuthenticationPtrOutput) Method() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AkriConnectorsServiceAccountAuthentication) *string {
		if v == nil {
			return nil
		}
		return &v.Method
	}).(pulumi.StringPtrOutput)
}

// The service account token for the MQTT connection.
func (o AkriConnectorsServiceAccountAuthenticationPtrOutput) ServiceAccountTokenSettings() AkriConnectorsServiceAccountTokenSettingsPtrOutput {
	return o.ApplyT(func(v *AkriConnectorsServiceAccountAuthentication) *AkriConnectorsServiceAccountTokenSettings {
		if v == nil {
			return nil
		}
		return &v.ServiceAccountTokenSettings
	}).(AkriConnectorsServiceAccountTokenSettingsPtrOutput)
}

// AkriConnectorsServiceAccountAuthentication properties.
type AkriConnectorsServiceAccountAuthenticationResponse struct {
	// AkriConnectorsMqttAuthenticationMethod properties.
	// Expected value is 'ServiceAccountToken'.
	Method string `pulumi:"method"`
	// The service account token for the MQTT connection.
	ServiceAccountTokenSettings AkriConnectorsServiceAccountTokenSettingsResponse `pulumi:"serviceAccountTokenSettings"`
}

// AkriConnectorsServiceAccountAuthentication properties.
type AkriConnectorsServiceAccountAuthenticationResponseOutput struct{ *pulumi.OutputState }

func (AkriConnectorsServiceAccountAuthenticationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AkriConnectorsServiceAccountAuthenticationResponse)(nil)).Elem()
}

func (o AkriConnectorsServiceAccountAuthenticationResponseOutput) ToAkriConnectorsServiceAccountAuthenticationResponseOutput() AkriConnectorsServiceAccountAuthenticationResponseOutput {
	return o
}

func (o AkriConnectorsServiceAccountAuthenticationResponseOutput) ToAkriConnectorsServiceAccountAuthenticationResponseOutputWithContext(ctx context.Context) AkriConnectorsServiceAccountAuthenticationResponseOutput {
	return o
}

// AkriConnectorsMqttAuthenticationMethod properties.
// Expected value is 'ServiceAccountToken'.
func (o AkriConnectorsServiceAccountAuthenticationResponseOutput) Method() pulumi.StringOutput {
	return o.ApplyT(func(v AkriConnectorsServiceAccountAuthenticationResponse) string { return v.Method }).(pulumi.StringOutput)
}

// The service account token for the MQTT connection.
func (o AkriConnectorsServiceAccountAuthenticationResponseOutput) ServiceAccountTokenSettings() AkriConnectorsServiceAccountTokenSettingsResponseOutput {
	return o.ApplyT(func(v AkriConnectorsServiceAccountAuthenticationResponse) AkriConnectorsServiceAccountTokenSettingsResponse {
		return v.ServiceAccountTokenSettings
	}).(AkriConnectorsServiceAccountTokenSettingsResponseOutput)
}

type AkriConnectorsServiceAccountAuthenticationResponsePtrOutput struct{ *pulumi.OutputState }

func (AkriConnectorsServiceAccountAuthenticationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AkriConnectorsServiceAccountAuthenticationResponse)(nil)).Elem()
}

func (o AkriConnectorsServiceAccountAuthenticationResponsePtrOutput) ToAkriConnectorsServiceAccountAuthenticationResponsePtrOutput() AkriConnectorsServiceAccountAuthenticationResponsePtrOutput {
	return o
}

func (o AkriConnectorsServiceAccountAuthenticationResponsePtrOutput) ToAkriConnectorsServiceAccountAuthenticationResponsePtrOutputWithContext(ctx context.Context) AkriConnectorsServiceAccountAuthenticationResponsePtrOutput {
	return o
}

func (o AkriConnectorsServiceAccountAuthenticationResponsePtrOutput) Elem() AkriConnectorsServiceAccountAuthenticationResponseOutput {
	return o.ApplyT(func(v *AkriConnectorsServiceAccountAuthenticationResponse) AkriConnectorsServiceAccountAuthenticationResponse {
		if v != nil {
			return *v
		}
		var ret AkriConnectorsServiceAccountAuthenticationResponse
		return ret
	}).(AkriConnectorsServiceAccountAuthenticationResponseOutput)
}

// AkriConnectorsMqttAuthenticationMethod properties.
// Expected value is 'ServiceAccountToken'.
func (o AkriConnectorsServiceAccountAuthenticationResponsePtrOutput) Method() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AkriConnectorsServiceAccountAuthenticationResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Method
	}).(pulumi.StringPtrOutput)
}

// The service account token for the MQTT connection.
func (o AkriConnectorsServiceAccountAuthenticationResponsePtrOutput) ServiceAccountTokenSettings() AkriConnectorsServiceAccountTokenSettingsResponsePtrOutput {
	return o.ApplyT(func(v *AkriConnectorsServiceAccountAuthenticationResponse) *AkriConnectorsServiceAccountTokenSettingsResponse {
		if v == nil {
			return nil
		}
		return &v.ServiceAccountTokenSettings
	}).(AkriConnectorsServiceAccountTokenSettingsResponsePtrOutput)
}

// AkriConnectorsServiceAccountTokenSettings properties.
type AkriConnectorsServiceAccountTokenSettings struct {
	// The audience for the service account token.
	Audience string `pulumi:"audience"`
}

// AkriConnectorsServiceAccountTokenSettingsInput is an input type that accepts AkriConnectorsServiceAccountTokenSettingsArgs and AkriConnectorsServiceAccountTokenSettingsOutput values.
// You can construct a concrete instance of `AkriConnectorsServiceAccountTokenSettingsInput` via:
//
//	AkriConnectorsServiceAccountTokenSettingsArgs{...}
type AkriConnectorsServiceAccountTokenSettingsInput interface {
	pulumi.Input

	ToAkriConnectorsServiceAccountTokenSettingsOutput() AkriConnectorsServiceAccountTokenSettingsOutput
	ToAkriConnectorsServiceAccountTokenSettingsOutputWithContext(context.Context) AkriConnectorsServiceAccountTokenSettingsOutput
}

// AkriConnectorsServiceAccountTokenSettings properties.
type AkriConnectorsServiceAccountTokenSettingsArgs struct {
	// The audience for the service account token.
	Audience pulumi.StringInput `pulumi:"audience"`
}

func (AkriConnectorsServiceAccountTokenSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AkriConnectorsServiceAccountTokenSettings)(nil)).Elem()
}

func (i AkriConnectorsServiceAccountTokenSettingsArgs) ToAkriConnectorsServiceAccountTokenSettingsOutput() AkriConnectorsServiceAccountTokenSettingsOutput {
	return i.ToAkriConnectorsServiceAccountTokenSettingsOutputWithContext(context.Background())
}

func (i AkriConnectorsServiceAccountTokenSettingsArgs) ToAkriConnectorsServiceAccountTokenSettingsOutputWithContext(ctx context.Context) AkriConnectorsServiceAccountTokenSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AkriConnectorsServiceAccountTokenSettingsOutput)
}

func (i AkriConnectorsServiceAccountTokenSettingsArgs) ToAkriConnectorsServiceAccountTokenSettingsPtrOutput() AkriConnectorsServiceAccountTokenSettingsPtrOutput {
	return i.ToAkriConnectorsServiceAccountTokenSettingsPtrOutputWithContext(context.Background())
}

func (i AkriConnectorsServiceAccountTokenSettingsArgs) ToAkriConnectorsServiceAccountTokenSettingsPtrOutputWithContext(ctx context.Context) AkriConnectorsServiceAccountTokenSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AkriConnectorsServiceAccountTokenSettingsOutput).ToAkriConnectorsServiceAccountTokenSettingsPtrOutputWithContext(ctx)
}

// AkriConnectorsServiceAccountTokenSettingsPtrInput is an input type that accepts AkriConnectorsServiceAccountTokenSettingsArgs, AkriConnectorsServiceAccountTokenSettingsPtr and AkriConnectorsServiceAccountTokenSettingsPtrOutput values.
// You can construct a concrete instance of `AkriConnectorsServiceAccountTokenSettingsPtrInput` via:
//
//	        AkriConnectorsServiceAccountTokenSettingsArgs{...}
//
//	or:
//
//	        nil
type AkriConnectorsServiceAccountTokenSettingsPtrInput interface {
	pulumi.Input

	ToAkriConnectorsServiceAccountTokenSettingsPtrOutput() AkriConnectorsServiceAccountTokenSettingsPtrOutput
	ToAkriConnectorsServiceAccountTokenSettingsPtrOutputWithContext(context.Context) AkriConnectorsServiceAccountTokenSettingsPtrOutput
}

type akriConnectorsServiceAccountTokenSettingsPtrType AkriConnectorsServiceAccountTokenSettingsArgs

func AkriConnectorsServiceAccountTokenSettingsPtr(v *AkriConnectorsServiceAccountTokenSettingsArgs) AkriConnectorsServiceAccountTokenSettingsPtrInput {
	return (*akriConnectorsServiceAccountTokenSettingsPtrType)(v)
}

func (*akriConnectorsServiceAccountTokenSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AkriConnectorsServiceAccountTokenSettings)(nil)).Elem()
}

func (i *akriConnectorsServiceAccountTokenSettingsPtrType) ToAkriConnectorsServiceAccountTokenSettingsPtrOutput() AkriConnectorsServiceAccountTokenSettingsPtrOutput {
	return i.ToAkriConnectorsServiceAccountTokenSettingsPtrOutputWithContext(context.Background())
}

func (i *akriConnectorsServiceAccountTokenSettingsPtrType) ToAkriConnectorsServiceAccountTokenSettingsPtrOutputWithContext(ctx context.Context) AkriConnectorsServiceAccountTokenSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AkriConnectorsServiceAccountTokenSettingsPtrOutput)
}

// AkriConnectorsServiceAccountTokenSettings properties.
type AkriConnectorsServiceAccountTokenSettingsOutput struct{ *pulumi.OutputState }

func (AkriConnectorsServiceAccountTokenSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AkriConnectorsServiceAccountTokenSettings)(nil)).Elem()
}

func (o AkriConnectorsServiceAccountTokenSettingsOutput) ToAkriConnectorsServiceAccountTokenSettingsOutput() AkriConnectorsServiceAccountTokenSettingsOutput {
	return o
}

func (o AkriConnectorsServiceAccountTokenSettingsOutput) ToAkriConnectorsServiceAccountTokenSettingsOutputWithContext(ctx context.Context) AkriConnectorsServiceAccountTokenSettingsOutput {
	return o
}

func (o AkriConnectorsServiceAccountTokenSettingsOutput) ToAkriConnectorsServiceAccountTokenSettingsPtrOutput() AkriConnectorsServiceAccountTokenSettingsPtrOutput {
	return o.ToAkriConnectorsServiceAccountTokenSettingsPtrOutputWithContext(context.Background())
}

func (o AkriConnectorsServiceAccountTokenSettingsOutput) ToAkriConnectorsServiceAccountTokenSettingsPtrOutputWithContext(ctx context.Context) AkriConnectorsServiceAccountTokenSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AkriConnectorsServiceAccountTokenSettings) *AkriConnectorsServiceAccountTokenSettings {
		return &v
	}).(AkriConnectorsServiceAccountTokenSettingsPtrOutput)
}

// The audience for the service account token.
func (o AkriConnectorsServiceAccountTokenSettingsOutput) Audience() pulumi.StringOutput {
	return o.ApplyT(func(v AkriConnectorsServiceAccountTokenSettings) string { return v.Audience }).(pulumi.StringOutput)
}

type AkriConnectorsServiceAccountTokenSettingsPtrOutput struct{ *pulumi.OutputState }

func (AkriConnectorsServiceAccountTokenSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AkriConnectorsServiceAccountTokenSettings)(nil)).Elem()
}

func (o AkriConnectorsServiceAccountTokenSettingsPtrOutput) ToAkriConnectorsServiceAccountTokenSettingsPtrOutput() AkriConnectorsServiceAccountTokenSettingsPtrOutput {
	return o
}

func (o AkriConnectorsServiceAccountTokenSettingsPtrOutput) ToAkriConnectorsServiceAccountTokenSettingsPtrOutputWithContext(ctx context.Context) AkriConnectorsServiceAccountTokenSettingsPtrOutput {
	return o
}

func (o AkriConnectorsServiceAccountTokenSettingsPtrOutput) Elem() AkriConnectorsServiceAccountTokenSettingsOutput {
	return o.ApplyT(func(v *AkriConnectorsServiceAccountTokenSettings) AkriConnectorsServiceAccountTokenSettings {
		if v != nil {
			return *v
		}
		var ret AkriConnectorsServiceAccountTokenSettings
		return ret
	}).(AkriConnectorsServiceAccountTokenSettingsOutput)
}

// The audience for the service account token.
func (o AkriConnectorsServiceAccountTokenSettingsPtrOutput) Audience() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AkriConnectorsServiceAccountTokenSettings) *string {
		if v == nil {
			return nil
		}
		return &v.Audience
	}).(pulumi.StringPtrOutput)
}

// AkriConnectorsServiceAccountTokenSettings properties.
type AkriConnectorsServiceAccountTokenSettingsResponse struct {
	// The audience for the service account token.
	Audience string `pulumi:"audience"`
}

// AkriConnectorsServiceAccountTokenSettings properties.
type AkriConnectorsServiceAccountTokenSettingsResponseOutput struct{ *pulumi.OutputState }

func (AkriConnectorsServiceAccountTokenSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AkriConnectorsServiceAccountTokenSettingsResponse)(nil)).Elem()
}

func (o AkriConnectorsServiceAccountTokenSettingsResponseOutput) ToAkriConnectorsServiceAccountTokenSettingsResponseOutput() AkriConnectorsServiceAccountTokenSettingsResponseOutput {
	return o
}

func (o AkriConnectorsServiceAccountTokenSettingsResponseOutput) ToAkriConnectorsServiceAccountTokenSettingsResponseOutputWithContext(ctx context.Context) AkriConnectorsServiceAccountTokenSettingsResponseOutput {
	return o
}

// The audience for the service account token.
func (o AkriConnectorsServiceAccountTokenSettingsResponseOutput) Audience() pulumi.StringOutput {
	return o.ApplyT(func(v AkriConnectorsServiceAccountTokenSettingsResponse) string { return v.Audience }).(pulumi.StringOutput)
}

type AkriConnectorsServiceAccountTokenSettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (AkriConnectorsServiceAccountTokenSettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AkriConnectorsServiceAccountTokenSettingsResponse)(nil)).Elem()
}

func (o AkriConnectorsServiceAccountTokenSettingsResponsePtrOutput) ToAkriConnectorsServiceAccountTokenSettingsResponsePtrOutput() AkriConnectorsServiceAccountTokenSettingsResponsePtrOutput {
	return o
}

func (o AkriConnectorsServiceAccountTokenSettingsResponsePtrOutput) ToAkriConnectorsServiceAccountTokenSettingsResponsePtrOutputWithContext(ctx context.Context) AkriConnectorsServiceAccountTokenSettingsResponsePtrOutput {
	return o
}

func (o AkriConnectorsServiceAccountTokenSettingsResponsePtrOutput) Elem() AkriConnectorsServiceAccountTokenSettingsResponseOutput {
	return o.ApplyT(func(v *AkriConnectorsServiceAccountTokenSettingsResponse) AkriConnectorsServiceAccountTokenSettingsResponse {
		if v != nil {
			return *v
		}
		var ret AkriConnectorsServiceAccountTokenSettingsResponse
		return ret
	}).(AkriConnectorsServiceAccountTokenSettingsResponseOutput)
}

// The audience for the service account token.
func (o AkriConnectorsServiceAccountTokenSettingsResponsePtrOutput) Audience() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AkriConnectorsServiceAccountTokenSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Audience
	}).(pulumi.StringPtrOutput)
}

// AkriConnectorsTag properties.
type AkriConnectorsTag struct {
	// The tag of the image.
	Tag string `pulumi:"tag"`
	// AkriConnectorsTagDigestType values.
	// Expected value is 'Tag'.
	TagDigestType string `pulumi:"tagDigestType"`
}

// AkriConnectorsTagInput is an input type that accepts AkriConnectorsTagArgs and AkriConnectorsTagOutput values.
// You can construct a concrete instance of `AkriConnectorsTagInput` via:
//
//	AkriConnectorsTagArgs{...}
type AkriConnectorsTagInput interface {
	pulumi.Input

	ToAkriConnectorsTagOutput() AkriConnectorsTagOutput
	ToAkriConnectorsTagOutputWithContext(context.Context) AkriConnectorsTagOutput
}

// AkriConnectorsTag properties.
type AkriConnectorsTagArgs struct {
	// The tag of the image.
	Tag pulumi.StringInput `pulumi:"tag"`
	// AkriConnectorsTagDigestType values.
	// Expected value is 'Tag'.
	TagDigestType pulumi.StringInput `pulumi:"tagDigestType"`
}

func (AkriConnectorsTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AkriConnectorsTag)(nil)).Elem()
}

func (i AkriConnectorsTagArgs) ToAkriConnectorsTagOutput() AkriConnectorsTagOutput {
	return i.ToAkriConnectorsTagOutputWithContext(context.Background())
}

func (i AkriConnectorsTagArgs) ToAkriConnectorsTagOutputWithContext(ctx context.Context) AkriConnectorsTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AkriConnectorsTagOutput)
}

func (i AkriConnectorsTagArgs) ToAkriConnectorsTagPtrOutput() AkriConnectorsTagPtrOutput {
	return i.ToAkriConnectorsTagPtrOutputWithContext(context.Background())
}

func (i AkriConnectorsTagArgs) ToAkriConnectorsTagPtrOutputWithContext(ctx context.Context) AkriConnectorsTagPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AkriConnectorsTagOutput).ToAkriConnectorsTagPtrOutputWithContext(ctx)
}

// AkriConnectorsTagPtrInput is an input type that accepts AkriConnectorsTagArgs, AkriConnectorsTagPtr and AkriConnectorsTagPtrOutput values.
// You can construct a concrete instance of `AkriConnectorsTagPtrInput` via:
//
//	        AkriConnectorsTagArgs{...}
//
//	or:
//
//	        nil
type AkriConnectorsTagPtrInput interface {
	pulumi.Input

	ToAkriConnectorsTagPtrOutput() AkriConnectorsTagPtrOutput
	ToAkriConnectorsTagPtrOutputWithContext(context.Context) AkriConnectorsTagPtrOutput
}

type akriConnectorsTagPtrType AkriConnectorsTagArgs

func AkriConnectorsTagPtr(v *AkriConnectorsTagArgs) AkriConnectorsTagPtrInput {
	return (*akriConnectorsTagPtrType)(v)
}

func (*akriConnectorsTagPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AkriConnectorsTag)(nil)).Elem()
}

func (i *akriConnectorsTagPtrType) ToAkriConnectorsTagPtrOutput() AkriConnectorsTagPtrOutput {
	return i.ToAkriConnectorsTagPtrOutputWithContext(context.Background())
}

func (i *akriConnectorsTagPtrType) ToAkriConnectorsTagPtrOutputWithContext(ctx context.Context) AkriConnectorsTagPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AkriConnectorsTagPtrOutput)
}

// AkriConnectorsTag properties.
type AkriConnectorsTagOutput struct{ *pulumi.OutputState }

func (AkriConnectorsTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AkriConnectorsTag)(nil)).Elem()
}

func (o AkriConnectorsTagOutput) ToAkriConnectorsTagOutput() AkriConnectorsTagOutput {
	return o
}

func (o AkriConnectorsTagOutput) ToAkriConnectorsTagOutputWithContext(ctx context.Context) AkriConnectorsTagOutput {
	return o
}

func (o AkriConnectorsTagOutput) ToAkriConnectorsTagPtrOutput() AkriConnectorsTagPtrOutput {
	return o.ToAkriConnectorsTagPtrOutputWithContext(context.Background())
}

func (o AkriConnectorsTagOutput) ToAkriConnectorsTagPtrOutputWithContext(ctx context.Context) AkriConnectorsTagPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AkriConnectorsTag) *AkriConnectorsTag {
		return &v
	}).(AkriConnectorsTagPtrOutput)
}

// The tag of the image.
func (o AkriConnectorsTagOutput) Tag() pulumi.StringOutput {
	return o.ApplyT(func(v AkriConnectorsTag) string { return v.Tag }).(pulumi.StringOutput)
}

// AkriConnectorsTagDigestType values.
// Expected value is 'Tag'.
func (o AkriConnectorsTagOutput) TagDigestType() pulumi.StringOutput {
	return o.ApplyT(func(v AkriConnectorsTag) string { return v.TagDigestType }).(pulumi.StringOutput)
}

type AkriConnectorsTagPtrOutput struct{ *pulumi.OutputState }

func (AkriConnectorsTagPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AkriConnectorsTag)(nil)).Elem()
}

func (o AkriConnectorsTagPtrOutput) ToAkriConnectorsTagPtrOutput() AkriConnectorsTagPtrOutput {
	return o
}

func (o AkriConnectorsTagPtrOutput) ToAkriConnectorsTagPtrOutputWithContext(ctx context.Context) AkriConnectorsTagPtrOutput {
	return o
}

func (o AkriConnectorsTagPtrOutput) Elem() AkriConnectorsTagOutput {
	return o.ApplyT(func(v *AkriConnectorsTag) AkriConnectorsTag {
		if v != nil {
			return *v
		}
		var ret AkriConnectorsTag
		return ret
	}).(AkriConnectorsTagOutput)
}

// The tag of the image.
func (o AkriConnectorsTagPtrOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AkriConnectorsTag) *string {
		if v == nil {
			return nil
		}
		return &v.Tag
	}).(pulumi.StringPtrOutput)
}

// AkriConnectorsTagDigestType values.
// Expected value is 'Tag'.
func (o AkriConnectorsTagPtrOutput) TagDigestType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AkriConnectorsTag) *string {
		if v == nil {
			return nil
		}
		return &v.TagDigestType
	}).(pulumi.StringPtrOutput)
}

// AkriConnectorsTag properties.
type AkriConnectorsTagResponse struct {
	// The tag of the image.
	Tag string `pulumi:"tag"`
	// AkriConnectorsTagDigestType values.
	// Expected value is 'Tag'.
	TagDigestType string `pulumi:"tagDigestType"`
}

// AkriConnectorsTag properties.
type AkriConnectorsTagResponseOutput struct{ *pulumi.OutputState }

func (AkriConnectorsTagResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AkriConnectorsTagResponse)(nil)).Elem()
}

func (o AkriConnectorsTagResponseOutput) ToAkriConnectorsTagResponseOutput() AkriConnectorsTagResponseOutput {
	return o
}

func (o AkriConnectorsTagResponseOutput) ToAkriConnectorsTagResponseOutputWithContext(ctx context.Context) AkriConnectorsTagResponseOutput {
	return o
}

// The tag of the image.
func (o AkriConnectorsTagResponseOutput) Tag() pulumi.StringOutput {
	return o.ApplyT(func(v AkriConnectorsTagResponse) string { return v.Tag }).(pulumi.StringOutput)
}

// AkriConnectorsTagDigestType values.
// Expected value is 'Tag'.
func (o AkriConnectorsTagResponseOutput) TagDigestType() pulumi.StringOutput {
	return o.ApplyT(func(v AkriConnectorsTagResponse) string { return v.TagDigestType }).(pulumi.StringOutput)
}

type AkriConnectorsTagResponsePtrOutput struct{ *pulumi.OutputState }

func (AkriConnectorsTagResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AkriConnectorsTagResponse)(nil)).Elem()
}

func (o AkriConnectorsTagResponsePtrOutput) ToAkriConnectorsTagResponsePtrOutput() AkriConnectorsTagResponsePtrOutput {
	return o
}

func (o AkriConnectorsTagResponsePtrOutput) ToAkriConnectorsTagResponsePtrOutputWithContext(ctx context.Context) AkriConnectorsTagResponsePtrOutput {
	return o
}

func (o AkriConnectorsTagResponsePtrOutput) Elem() AkriConnectorsTagResponseOutput {
	return o.ApplyT(func(v *AkriConnectorsTagResponse) AkriConnectorsTagResponse {
		if v != nil {
			return *v
		}
		var ret AkriConnectorsTagResponse
		return ret
	}).(AkriConnectorsTagResponseOutput)
}

// The tag of the image.
func (o AkriConnectorsTagResponsePtrOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AkriConnectorsTagResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Tag
	}).(pulumi.StringPtrOutput)
}

// AkriConnectorsTagDigestType values.
// Expected value is 'Tag'.
func (o AkriConnectorsTagResponsePtrOutput) TagDigestType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AkriConnectorsTagResponse) *string {
		if v == nil {
			return nil
		}
		return &v.TagDigestType
	}).(pulumi.StringPtrOutput)
}

// Broker AuthorizationConfig properties
type AuthorizationConfig struct {
	// Enable caching of the authorization rules.
	Cache *string `pulumi:"cache"`
	// The authorization rules to follow. If no rule is set, but Authorization Resource is used that would mean DenyAll.
	Rules []AuthorizationRule `pulumi:"rules"`
}

// Defaults sets the appropriate defaults for AuthorizationConfig
func (val *AuthorizationConfig) Defaults() *AuthorizationConfig {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Cache == nil {
		cache_ := "Enabled"
		tmp.Cache = &cache_
	}
	return &tmp
}

// AuthorizationConfigInput is an input type that accepts AuthorizationConfigArgs and AuthorizationConfigOutput values.
// You can construct a concrete instance of `AuthorizationConfigInput` via:
//
//	AuthorizationConfigArgs{...}
type AuthorizationConfigInput interface {
	pulumi.Input

	ToAuthorizationConfigOutput() AuthorizationConfigOutput
	ToAuthorizationConfigOutputWithContext(context.Context) AuthorizationConfigOutput
}

// Broker AuthorizationConfig properties
type AuthorizationConfigArgs struct {
	// Enable caching of the authorization rules.
	Cache pulumi.StringPtrInput `pulumi:"cache"`
	// The authorization rules to follow. If no rule is set, but Authorization Resource is used that would mean DenyAll.
	Rules AuthorizationRuleArrayInput `pulumi:"rules"`
}

// Defaults sets the appropriate defaults for AuthorizationConfigArgs
func (val *AuthorizationConfigArgs) Defaults() *AuthorizationConfigArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Cache == nil {
		tmp.Cache = pulumi.StringPtr("Enabled")
	}
	return &tmp
}
func (AuthorizationConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthorizationConfig)(nil)).Elem()
}

func (i AuthorizationConfigArgs) ToAuthorizationConfigOutput() AuthorizationConfigOutput {
	return i.ToAuthorizationConfigOutputWithContext(context.Background())
}

func (i AuthorizationConfigArgs) ToAuthorizationConfigOutputWithContext(ctx context.Context) AuthorizationConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorizationConfigOutput)
}

func (i AuthorizationConfigArgs) ToAuthorizationConfigPtrOutput() AuthorizationConfigPtrOutput {
	return i.ToAuthorizationConfigPtrOutputWithContext(context.Background())
}

func (i AuthorizationConfigArgs) ToAuthorizationConfigPtrOutputWithContext(ctx context.Context) AuthorizationConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorizationConfigOutput).ToAuthorizationConfigPtrOutputWithContext(ctx)
}

// AuthorizationConfigPtrInput is an input type that accepts AuthorizationConfigArgs, AuthorizationConfigPtr and AuthorizationConfigPtrOutput values.
// You can construct a concrete instance of `AuthorizationConfigPtrInput` via:
//
//	        AuthorizationConfigArgs{...}
//
//	or:
//
//	        nil
type AuthorizationConfigPtrInput interface {
	pulumi.Input

	ToAuthorizationConfigPtrOutput() AuthorizationConfigPtrOutput
	ToAuthorizationConfigPtrOutputWithContext(context.Context) AuthorizationConfigPtrOutput
}

type authorizationConfigPtrType AuthorizationConfigArgs

func AuthorizationConfigPtr(v *AuthorizationConfigArgs) AuthorizationConfigPtrInput {
	return (*authorizationConfigPtrType)(v)
}

func (*authorizationConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AuthorizationConfig)(nil)).Elem()
}

func (i *authorizationConfigPtrType) ToAuthorizationConfigPtrOutput() AuthorizationConfigPtrOutput {
	return i.ToAuthorizationConfigPtrOutputWithContext(context.Background())
}

func (i *authorizationConfigPtrType) ToAuthorizationConfigPtrOutputWithContext(ctx context.Context) AuthorizationConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorizationConfigPtrOutput)
}

// Broker AuthorizationConfig properties
type AuthorizationConfigOutput struct{ *pulumi.OutputState }

func (AuthorizationConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthorizationConfig)(nil)).Elem()
}

func (o AuthorizationConfigOutput) ToAuthorizationConfigOutput() AuthorizationConfigOutput {
	return o
}

func (o AuthorizationConfigOutput) ToAuthorizationConfigOutputWithContext(ctx context.Context) AuthorizationConfigOutput {
	return o
}

func (o AuthorizationConfigOutput) ToAuthorizationConfigPtrOutput() AuthorizationConfigPtrOutput {
	return o.ToAuthorizationConfigPtrOutputWithContext(context.Background())
}

func (o AuthorizationConfigOutput) ToAuthorizationConfigPtrOutputWithContext(ctx context.Context) AuthorizationConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AuthorizationConfig) *AuthorizationConfig {
		return &v
	}).(AuthorizationConfigPtrOutput)
}

// Enable caching of the authorization rules.
func (o AuthorizationConfigOutput) Cache() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AuthorizationConfig) *string { return v.Cache }).(pulumi.StringPtrOutput)
}

// The authorization rules to follow. If no rule is set, but Authorization Resource is used that would mean DenyAll.
func (o AuthorizationConfigOutput) Rules() AuthorizationRuleArrayOutput {
	return o.ApplyT(func(v AuthorizationConfig) []AuthorizationRule { return v.Rules }).(AuthorizationRuleArrayOutput)
}

type AuthorizationConfigPtrOutput struct{ *pulumi.OutputState }

func (AuthorizationConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AuthorizationConfig)(nil)).Elem()
}

func (o AuthorizationConfigPtrOutput) ToAuthorizationConfigPtrOutput() AuthorizationConfigPtrOutput {
	return o
}

func (o AuthorizationConfigPtrOutput) ToAuthorizationConfigPtrOutputWithContext(ctx context.Context) AuthorizationConfigPtrOutput {
	return o
}

func (o AuthorizationConfigPtrOutput) Elem() AuthorizationConfigOutput {
	return o.ApplyT(func(v *AuthorizationConfig) AuthorizationConfig {
		if v != nil {
			return *v
		}
		var ret AuthorizationConfig
		return ret
	}).(AuthorizationConfigOutput)
}

// Enable caching of the authorization rules.
func (o AuthorizationConfigPtrOutput) Cache() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AuthorizationConfig) *string {
		if v == nil {
			return nil
		}
		return v.Cache
	}).(pulumi.StringPtrOutput)
}

// The authorization rules to follow. If no rule is set, but Authorization Resource is used that would mean DenyAll.
func (o AuthorizationConfigPtrOutput) Rules() AuthorizationRuleArrayOutput {
	return o.ApplyT(func(v *AuthorizationConfig) []AuthorizationRule {
		if v == nil {
			return nil
		}
		return v.Rules
	}).(AuthorizationRuleArrayOutput)
}

// Broker AuthorizationConfig properties
type AuthorizationConfigResponse struct {
	// Enable caching of the authorization rules.
	Cache *string `pulumi:"cache"`
	// The authorization rules to follow. If no rule is set, but Authorization Resource is used that would mean DenyAll.
	Rules []AuthorizationRuleResponse `pulumi:"rules"`
}

// Defaults sets the appropriate defaults for AuthorizationConfigResponse
func (val *AuthorizationConfigResponse) Defaults() *AuthorizationConfigResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Cache == nil {
		cache_ := "Enabled"
		tmp.Cache = &cache_
	}
	return &tmp
}

// Broker AuthorizationConfig properties
type AuthorizationConfigResponseOutput struct{ *pulumi.OutputState }

func (AuthorizationConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthorizationConfigResponse)(nil)).Elem()
}

func (o AuthorizationConfigResponseOutput) ToAuthorizationConfigResponseOutput() AuthorizationConfigResponseOutput {
	return o
}

func (o AuthorizationConfigResponseOutput) ToAuthorizationConfigResponseOutputWithContext(ctx context.Context) AuthorizationConfigResponseOutput {
	return o
}

// Enable caching of the authorization rules.
func (o AuthorizationConfigResponseOutput) Cache() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AuthorizationConfigResponse) *string { return v.Cache }).(pulumi.StringPtrOutput)
}

// The authorization rules to follow. If no rule is set, but Authorization Resource is used that would mean DenyAll.
func (o AuthorizationConfigResponseOutput) Rules() AuthorizationRuleResponseArrayOutput {
	return o.ApplyT(func(v AuthorizationConfigResponse) []AuthorizationRuleResponse { return v.Rules }).(AuthorizationRuleResponseArrayOutput)
}

// AuthorizationConfig Rule Properties
type AuthorizationRule struct {
	// Give access to Broker methods and topics.
	BrokerResources []BrokerResourceRule `pulumi:"brokerResources"`
	// Give access to clients based on the following properties.
	Principals PrincipalDefinition `pulumi:"principals"`
	// Give access to state store resources.
	StateStoreResources []StateStoreResourceRule `pulumi:"stateStoreResources"`
}

// AuthorizationRuleInput is an input type that accepts AuthorizationRuleArgs and AuthorizationRuleOutput values.
// You can construct a concrete instance of `AuthorizationRuleInput` via:
//
//	AuthorizationRuleArgs{...}
type AuthorizationRuleInput interface {
	pulumi.Input

	ToAuthorizationRuleOutput() AuthorizationRuleOutput
	ToAuthorizationRuleOutputWithContext(context.Context) AuthorizationRuleOutput
}

// AuthorizationConfig Rule Properties
type AuthorizationRuleArgs struct {
	// Give access to Broker methods and topics.
	BrokerResources BrokerResourceRuleArrayInput `pulumi:"brokerResources"`
	// Give access to clients based on the following properties.
	Principals PrincipalDefinitionInput `pulumi:"principals"`
	// Give access to state store resources.
	StateStoreResources StateStoreResourceRuleArrayInput `pulumi:"stateStoreResources"`
}

func (AuthorizationRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthorizationRule)(nil)).Elem()
}

func (i AuthorizationRuleArgs) ToAuthorizationRuleOutput() AuthorizationRuleOutput {
	return i.ToAuthorizationRuleOutputWithContext(context.Background())
}

func (i AuthorizationRuleArgs) ToAuthorizationRuleOutputWithContext(ctx context.Context) AuthorizationRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorizationRuleOutput)
}

// AuthorizationRuleArrayInput is an input type that accepts AuthorizationRuleArray and AuthorizationRuleArrayOutput values.
// You can construct a concrete instance of `AuthorizationRuleArrayInput` via:
//
//	AuthorizationRuleArray{ AuthorizationRuleArgs{...} }
type AuthorizationRuleArrayInput interface {
	pulumi.Input

	ToAuthorizationRuleArrayOutput() AuthorizationRuleArrayOutput
	ToAuthorizationRuleArrayOutputWithContext(context.Context) AuthorizationRuleArrayOutput
}

type AuthorizationRuleArray []AuthorizationRuleInput

func (AuthorizationRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AuthorizationRule)(nil)).Elem()
}

func (i AuthorizationRuleArray) ToAuthorizationRuleArrayOutput() AuthorizationRuleArrayOutput {
	return i.ToAuthorizationRuleArrayOutputWithContext(context.Background())
}

func (i AuthorizationRuleArray) ToAuthorizationRuleArrayOutputWithContext(ctx context.Context) AuthorizationRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorizationRuleArrayOutput)
}

// AuthorizationConfig Rule Properties
type AuthorizationRuleOutput struct{ *pulumi.OutputState }

func (AuthorizationRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthorizationRule)(nil)).Elem()
}

func (o AuthorizationRuleOutput) ToAuthorizationRuleOutput() AuthorizationRuleOutput {
	return o
}

func (o AuthorizationRuleOutput) ToAuthorizationRuleOutputWithContext(ctx context.Context) AuthorizationRuleOutput {
	return o
}

// Give access to Broker methods and topics.
func (o AuthorizationRuleOutput) BrokerResources() BrokerResourceRuleArrayOutput {
	return o.ApplyT(func(v AuthorizationRule) []BrokerResourceRule { return v.BrokerResources }).(BrokerResourceRuleArrayOutput)
}

// Give access to clients based on the following properties.
func (o AuthorizationRuleOutput) Principals() PrincipalDefinitionOutput {
	return o.ApplyT(func(v AuthorizationRule) PrincipalDefinition { return v.Principals }).(PrincipalDefinitionOutput)
}

// Give access to state store resources.
func (o AuthorizationRuleOutput) StateStoreResources() StateStoreResourceRuleArrayOutput {
	return o.ApplyT(func(v AuthorizationRule) []StateStoreResourceRule { return v.StateStoreResources }).(StateStoreResourceRuleArrayOutput)
}

type AuthorizationRuleArrayOutput struct{ *pulumi.OutputState }

func (AuthorizationRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AuthorizationRule)(nil)).Elem()
}

func (o AuthorizationRuleArrayOutput) ToAuthorizationRuleArrayOutput() AuthorizationRuleArrayOutput {
	return o
}

func (o AuthorizationRuleArrayOutput) ToAuthorizationRuleArrayOutputWithContext(ctx context.Context) AuthorizationRuleArrayOutput {
	return o
}

func (o AuthorizationRuleArrayOutput) Index(i pulumi.IntInput) AuthorizationRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AuthorizationRule {
		return vs[0].([]AuthorizationRule)[vs[1].(int)]
	}).(AuthorizationRuleOutput)
}

// AuthorizationConfig Rule Properties
type AuthorizationRuleResponse struct {
	// Give access to Broker methods and topics.
	BrokerResources []BrokerResourceRuleResponse `pulumi:"brokerResources"`
	// Give access to clients based on the following properties.
	Principals PrincipalDefinitionResponse `pulumi:"principals"`
	// Give access to state store resources.
	StateStoreResources []StateStoreResourceRuleResponse `pulumi:"stateStoreResources"`
}

// AuthorizationConfig Rule Properties
type AuthorizationRuleResponseOutput struct{ *pulumi.OutputState }

func (AuthorizationRuleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthorizationRuleResponse)(nil)).Elem()
}

func (o AuthorizationRuleResponseOutput) ToAuthorizationRuleResponseOutput() AuthorizationRuleResponseOutput {
	return o
}

func (o AuthorizationRuleResponseOutput) ToAuthorizationRuleResponseOutputWithContext(ctx context.Context) AuthorizationRuleResponseOutput {
	return o
}

// Give access to Broker methods and topics.
func (o AuthorizationRuleResponseOutput) BrokerResources() BrokerResourceRuleResponseArrayOutput {
	return o.ApplyT(func(v AuthorizationRuleResponse) []BrokerResourceRuleResponse { return v.BrokerResources }).(BrokerResourceRuleResponseArrayOutput)
}

// Give access to clients based on the following properties.
func (o AuthorizationRuleResponseOutput) Principals() PrincipalDefinitionResponseOutput {
	return o.ApplyT(func(v AuthorizationRuleResponse) PrincipalDefinitionResponse { return v.Principals }).(PrincipalDefinitionResponseOutput)
}

// Give access to state store resources.
func (o AuthorizationRuleResponseOutput) StateStoreResources() StateStoreResourceRuleResponseArrayOutput {
	return o.ApplyT(func(v AuthorizationRuleResponse) []StateStoreResourceRuleResponse { return v.StateStoreResources }).(StateStoreResourceRuleResponseArrayOutput)
}

type AuthorizationRuleResponseArrayOutput struct{ *pulumi.OutputState }

func (AuthorizationRuleResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AuthorizationRuleResponse)(nil)).Elem()
}

func (o AuthorizationRuleResponseArrayOutput) ToAuthorizationRuleResponseArrayOutput() AuthorizationRuleResponseArrayOutput {
	return o
}

func (o AuthorizationRuleResponseArrayOutput) ToAuthorizationRuleResponseArrayOutputWithContext(ctx context.Context) AuthorizationRuleResponseArrayOutput {
	return o
}

func (o AuthorizationRuleResponseArrayOutput) Index(i pulumi.IntInput) AuthorizationRuleResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AuthorizationRuleResponse {
		return vs[0].([]AuthorizationRuleResponse)[vs[1].(int)]
	}).(AuthorizationRuleResponseOutput)
}

// Desired properties of the backend instances of the broker
type BackendChain struct {
	// The desired number of physical backend partitions.
	Partitions int `pulumi:"partitions"`
	// The desired numbers of backend replicas (pods) in a physical partition.
	RedundancyFactor int `pulumi:"redundancyFactor"`
	// Number of logical backend workers per replica (pod).
	Workers *int `pulumi:"workers"`
}

// Defaults sets the appropriate defaults for BackendChain
func (val *BackendChain) Defaults() *BackendChain {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Workers == nil {
		workers_ := 1
		tmp.Workers = &workers_
	}
	return &tmp
}

// BackendChainInput is an input type that accepts BackendChainArgs and BackendChainOutput values.
// You can construct a concrete instance of `BackendChainInput` via:
//
//	BackendChainArgs{...}
type BackendChainInput interface {
	pulumi.Input

	ToBackendChainOutput() BackendChainOutput
	ToBackendChainOutputWithContext(context.Context) BackendChainOutput
}

// Desired properties of the backend instances of the broker
type BackendChainArgs struct {
	// The desired number of physical backend partitions.
	Partitions pulumi.IntInput `pulumi:"partitions"`
	// The desired numbers of backend replicas (pods) in a physical partition.
	RedundancyFactor pulumi.IntInput `pulumi:"redundancyFactor"`
	// Number of logical backend workers per replica (pod).
	Workers pulumi.IntPtrInput `pulumi:"workers"`
}

// Defaults sets the appropriate defaults for BackendChainArgs
func (val *BackendChainArgs) Defaults() *BackendChainArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Workers == nil {
		tmp.Workers = pulumi.IntPtr(1)
	}
	return &tmp
}
func (BackendChainArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BackendChain)(nil)).Elem()
}

func (i BackendChainArgs) ToBackendChainOutput() BackendChainOutput {
	return i.ToBackendChainOutputWithContext(context.Background())
}

func (i BackendChainArgs) ToBackendChainOutputWithContext(ctx context.Context) BackendChainOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackendChainOutput)
}

func (i BackendChainArgs) ToBackendChainPtrOutput() BackendChainPtrOutput {
	return i.ToBackendChainPtrOutputWithContext(context.Background())
}

func (i BackendChainArgs) ToBackendChainPtrOutputWithContext(ctx context.Context) BackendChainPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackendChainOutput).ToBackendChainPtrOutputWithContext(ctx)
}

// BackendChainPtrInput is an input type that accepts BackendChainArgs, BackendChainPtr and BackendChainPtrOutput values.
// You can construct a concrete instance of `BackendChainPtrInput` via:
//
//	        BackendChainArgs{...}
//
//	or:
//
//	        nil
type BackendChainPtrInput interface {
	pulumi.Input

	ToBackendChainPtrOutput() BackendChainPtrOutput
	ToBackendChainPtrOutputWithContext(context.Context) BackendChainPtrOutput
}

type backendChainPtrType BackendChainArgs

func BackendChainPtr(v *BackendChainArgs) BackendChainPtrInput {
	return (*backendChainPtrType)(v)
}

func (*backendChainPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BackendChain)(nil)).Elem()
}

func (i *backendChainPtrType) ToBackendChainPtrOutput() BackendChainPtrOutput {
	return i.ToBackendChainPtrOutputWithContext(context.Background())
}

func (i *backendChainPtrType) ToBackendChainPtrOutputWithContext(ctx context.Context) BackendChainPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackendChainPtrOutput)
}

// Desired properties of the backend instances of the broker
type BackendChainOutput struct{ *pulumi.OutputState }

func (BackendChainOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BackendChain)(nil)).Elem()
}

func (o BackendChainOutput) ToBackendChainOutput() BackendChainOutput {
	return o
}

func (o BackendChainOutput) ToBackendChainOutputWithContext(ctx context.Context) BackendChainOutput {
	return o
}

func (o BackendChainOutput) ToBackendChainPtrOutput() BackendChainPtrOutput {
	return o.ToBackendChainPtrOutputWithContext(context.Background())
}

func (o BackendChainOutput) ToBackendChainPtrOutputWithContext(ctx context.Context) BackendChainPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BackendChain) *BackendChain {
		return &v
	}).(BackendChainPtrOutput)
}

// The desired number of physical backend partitions.
func (o BackendChainOutput) Partitions() pulumi.IntOutput {
	return o.ApplyT(func(v BackendChain) int { return v.Partitions }).(pulumi.IntOutput)
}

// The desired numbers of backend replicas (pods) in a physical partition.
func (o BackendChainOutput) RedundancyFactor() pulumi.IntOutput {
	return o.ApplyT(func(v BackendChain) int { return v.RedundancyFactor }).(pulumi.IntOutput)
}

// Number of logical backend workers per replica (pod).
func (o BackendChainOutput) Workers() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BackendChain) *int { return v.Workers }).(pulumi.IntPtrOutput)
}

type BackendChainPtrOutput struct{ *pulumi.OutputState }

func (BackendChainPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BackendChain)(nil)).Elem()
}

func (o BackendChainPtrOutput) ToBackendChainPtrOutput() BackendChainPtrOutput {
	return o
}

func (o BackendChainPtrOutput) ToBackendChainPtrOutputWithContext(ctx context.Context) BackendChainPtrOutput {
	return o
}

func (o BackendChainPtrOutput) Elem() BackendChainOutput {
	return o.ApplyT(func(v *BackendChain) BackendChain {
		if v != nil {
			return *v
		}
		var ret BackendChain
		return ret
	}).(BackendChainOutput)
}

// The desired number of physical backend partitions.
func (o BackendChainPtrOutput) Partitions() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BackendChain) *int {
		if v == nil {
			return nil
		}
		return &v.Partitions
	}).(pulumi.IntPtrOutput)
}

// The desired numbers of backend replicas (pods) in a physical partition.
func (o BackendChainPtrOutput) RedundancyFactor() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BackendChain) *int {
		if v == nil {
			return nil
		}
		return &v.RedundancyFactor
	}).(pulumi.IntPtrOutput)
}

// Number of logical backend workers per replica (pod).
func (o BackendChainPtrOutput) Workers() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BackendChain) *int {
		if v == nil {
			return nil
		}
		return v.Workers
	}).(pulumi.IntPtrOutput)
}

// Desired properties of the backend instances of the broker
type BackendChainResponse struct {
	// The desired number of physical backend partitions.
	Partitions int `pulumi:"partitions"`
	// The desired numbers of backend replicas (pods) in a physical partition.
	RedundancyFactor int `pulumi:"redundancyFactor"`
	// Number of logical backend workers per replica (pod).
	Workers *int `pulumi:"workers"`
}

// Defaults sets the appropriate defaults for BackendChainResponse
func (val *BackendChainResponse) Defaults() *BackendChainResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Workers == nil {
		workers_ := 1
		tmp.Workers = &workers_
	}
	return &tmp
}

// Desired properties of the backend instances of the broker
type BackendChainResponseOutput struct{ *pulumi.OutputState }

func (BackendChainResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BackendChainResponse)(nil)).Elem()
}

func (o BackendChainResponseOutput) ToBackendChainResponseOutput() BackendChainResponseOutput {
	return o
}

func (o BackendChainResponseOutput) ToBackendChainResponseOutputWithContext(ctx context.Context) BackendChainResponseOutput {
	return o
}

// The desired number of physical backend partitions.
func (o BackendChainResponseOutput) Partitions() pulumi.IntOutput {
	return o.ApplyT(func(v BackendChainResponse) int { return v.Partitions }).(pulumi.IntOutput)
}

// The desired numbers of backend replicas (pods) in a physical partition.
func (o BackendChainResponseOutput) RedundancyFactor() pulumi.IntOutput {
	return o.ApplyT(func(v BackendChainResponse) int { return v.RedundancyFactor }).(pulumi.IntOutput)
}

// Number of logical backend workers per replica (pod).
func (o BackendChainResponseOutput) Workers() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BackendChainResponse) *int { return v.Workers }).(pulumi.IntPtrOutput)
}

type BackendChainResponsePtrOutput struct{ *pulumi.OutputState }

func (BackendChainResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BackendChainResponse)(nil)).Elem()
}

func (o BackendChainResponsePtrOutput) ToBackendChainResponsePtrOutput() BackendChainResponsePtrOutput {
	return o
}

func (o BackendChainResponsePtrOutput) ToBackendChainResponsePtrOutputWithContext(ctx context.Context) BackendChainResponsePtrOutput {
	return o
}

func (o BackendChainResponsePtrOutput) Elem() BackendChainResponseOutput {
	return o.ApplyT(func(v *BackendChainResponse) BackendChainResponse {
		if v != nil {
			return *v
		}
		var ret BackendChainResponse
		return ret
	}).(BackendChainResponseOutput)
}

// The desired number of physical backend partitions.
func (o BackendChainResponsePtrOutput) Partitions() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BackendChainResponse) *int {
		if v == nil {
			return nil
		}
		return &v.Partitions
	}).(pulumi.IntPtrOutput)
}

// The desired numbers of backend replicas (pods) in a physical partition.
func (o BackendChainResponsePtrOutput) RedundancyFactor() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BackendChainResponse) *int {
		if v == nil {
			return nil
		}
		return &v.RedundancyFactor
	}).(pulumi.IntPtrOutput)
}

// Number of logical backend workers per replica (pod).
func (o BackendChainResponsePtrOutput) Workers() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BackendChainResponse) *int {
		if v == nil {
			return nil
		}
		return v.Workers
	}).(pulumi.IntPtrOutput)
}

// Batching configuration
type BatchingConfiguration struct {
	// Batching latency in seconds.
	LatencySeconds *int `pulumi:"latencySeconds"`
	// Maximum number of messages in a batch.
	MaxMessages *int `pulumi:"maxMessages"`
}

// Defaults sets the appropriate defaults for BatchingConfiguration
func (val *BatchingConfiguration) Defaults() *BatchingConfiguration {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.LatencySeconds == nil {
		latencySeconds_ := 60
		tmp.LatencySeconds = &latencySeconds_
	}
	if tmp.MaxMessages == nil {
		maxMessages_ := 100000
		tmp.MaxMessages = &maxMessages_
	}
	return &tmp
}

// BatchingConfigurationInput is an input type that accepts BatchingConfigurationArgs and BatchingConfigurationOutput values.
// You can construct a concrete instance of `BatchingConfigurationInput` via:
//
//	BatchingConfigurationArgs{...}
type BatchingConfigurationInput interface {
	pulumi.Input

	ToBatchingConfigurationOutput() BatchingConfigurationOutput
	ToBatchingConfigurationOutputWithContext(context.Context) BatchingConfigurationOutput
}

// Batching configuration
type BatchingConfigurationArgs struct {
	// Batching latency in seconds.
	LatencySeconds pulumi.IntPtrInput `pulumi:"latencySeconds"`
	// Maximum number of messages in a batch.
	MaxMessages pulumi.IntPtrInput `pulumi:"maxMessages"`
}

// Defaults sets the appropriate defaults for BatchingConfigurationArgs
func (val *BatchingConfigurationArgs) Defaults() *BatchingConfigurationArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.LatencySeconds == nil {
		tmp.LatencySeconds = pulumi.IntPtr(60)
	}
	if tmp.MaxMessages == nil {
		tmp.MaxMessages = pulumi.IntPtr(100000)
	}
	return &tmp
}
func (BatchingConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BatchingConfiguration)(nil)).Elem()
}

func (i BatchingConfigurationArgs) ToBatchingConfigurationOutput() BatchingConfigurationOutput {
	return i.ToBatchingConfigurationOutputWithContext(context.Background())
}

func (i BatchingConfigurationArgs) ToBatchingConfigurationOutputWithContext(ctx context.Context) BatchingConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BatchingConfigurationOutput)
}

func (i BatchingConfigurationArgs) ToBatchingConfigurationPtrOutput() BatchingConfigurationPtrOutput {
	return i.ToBatchingConfigurationPtrOutputWithContext(context.Background())
}

func (i BatchingConfigurationArgs) ToBatchingConfigurationPtrOutputWithContext(ctx context.Context) BatchingConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BatchingConfigurationOutput).ToBatchingConfigurationPtrOutputWithContext(ctx)
}

// BatchingConfigurationPtrInput is an input type that accepts BatchingConfigurationArgs, BatchingConfigurationPtr and BatchingConfigurationPtrOutput values.
// You can construct a concrete instance of `BatchingConfigurationPtrInput` via:
//
//	        BatchingConfigurationArgs{...}
//
//	or:
//
//	        nil
type BatchingConfigurationPtrInput interface {
	pulumi.Input

	ToBatchingConfigurationPtrOutput() BatchingConfigurationPtrOutput
	ToBatchingConfigurationPtrOutputWithContext(context.Context) BatchingConfigurationPtrOutput
}

type batchingConfigurationPtrType BatchingConfigurationArgs

func BatchingConfigurationPtr(v *BatchingConfigurationArgs) BatchingConfigurationPtrInput {
	return (*batchingConfigurationPtrType)(v)
}

func (*batchingConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BatchingConfiguration)(nil)).Elem()
}

func (i *batchingConfigurationPtrType) ToBatchingConfigurationPtrOutput() BatchingConfigurationPtrOutput {
	return i.ToBatchingConfigurationPtrOutputWithContext(context.Background())
}

func (i *batchingConfigurationPtrType) ToBatchingConfigurationPtrOutputWithContext(ctx context.Context) BatchingConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BatchingConfigurationPtrOutput)
}

// Batching configuration
type BatchingConfigurationOutput struct{ *pulumi.OutputState }

func (BatchingConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BatchingConfiguration)(nil)).Elem()
}

func (o BatchingConfigurationOutput) ToBatchingConfigurationOutput() BatchingConfigurationOutput {
	return o
}

func (o BatchingConfigurationOutput) ToBatchingConfigurationOutputWithContext(ctx context.Context) BatchingConfigurationOutput {
	return o
}

func (o BatchingConfigurationOutput) ToBatchingConfigurationPtrOutput() BatchingConfigurationPtrOutput {
	return o.ToBatchingConfigurationPtrOutputWithContext(context.Background())
}

func (o BatchingConfigurationOutput) ToBatchingConfigurationPtrOutputWithContext(ctx context.Context) BatchingConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BatchingConfiguration) *BatchingConfiguration {
		return &v
	}).(BatchingConfigurationPtrOutput)
}

// Batching latency in seconds.
func (o BatchingConfigurationOutput) LatencySeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BatchingConfiguration) *int { return v.LatencySeconds }).(pulumi.IntPtrOutput)
}

// Maximum number of messages in a batch.
func (o BatchingConfigurationOutput) MaxMessages() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BatchingConfiguration) *int { return v.MaxMessages }).(pulumi.IntPtrOutput)
}

type BatchingConfigurationPtrOutput struct{ *pulumi.OutputState }

func (BatchingConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BatchingConfiguration)(nil)).Elem()
}

func (o BatchingConfigurationPtrOutput) ToBatchingConfigurationPtrOutput() BatchingConfigurationPtrOutput {
	return o
}

func (o BatchingConfigurationPtrOutput) ToBatchingConfigurationPtrOutputWithContext(ctx context.Context) BatchingConfigurationPtrOutput {
	return o
}

func (o BatchingConfigurationPtrOutput) Elem() BatchingConfigurationOutput {
	return o.ApplyT(func(v *BatchingConfiguration) BatchingConfiguration {
		if v != nil {
			return *v
		}
		var ret BatchingConfiguration
		return ret
	}).(BatchingConfigurationOutput)
}

// Batching latency in seconds.
func (o BatchingConfigurationPtrOutput) LatencySeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BatchingConfiguration) *int {
		if v == nil {
			return nil
		}
		return v.LatencySeconds
	}).(pulumi.IntPtrOutput)
}

// Maximum number of messages in a batch.
func (o BatchingConfigurationPtrOutput) MaxMessages() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BatchingConfiguration) *int {
		if v == nil {
			return nil
		}
		return v.MaxMessages
	}).(pulumi.IntPtrOutput)
}

// Batching configuration
type BatchingConfigurationResponse struct {
	// Batching latency in seconds.
	LatencySeconds *int `pulumi:"latencySeconds"`
	// Maximum number of messages in a batch.
	MaxMessages *int `pulumi:"maxMessages"`
}

// Defaults sets the appropriate defaults for BatchingConfigurationResponse
func (val *BatchingConfigurationResponse) Defaults() *BatchingConfigurationResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.LatencySeconds == nil {
		latencySeconds_ := 60
		tmp.LatencySeconds = &latencySeconds_
	}
	if tmp.MaxMessages == nil {
		maxMessages_ := 100000
		tmp.MaxMessages = &maxMessages_
	}
	return &tmp
}

// Batching configuration
type BatchingConfigurationResponseOutput struct{ *pulumi.OutputState }

func (BatchingConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BatchingConfigurationResponse)(nil)).Elem()
}

func (o BatchingConfigurationResponseOutput) ToBatchingConfigurationResponseOutput() BatchingConfigurationResponseOutput {
	return o
}

func (o BatchingConfigurationResponseOutput) ToBatchingConfigurationResponseOutputWithContext(ctx context.Context) BatchingConfigurationResponseOutput {
	return o
}

// Batching latency in seconds.
func (o BatchingConfigurationResponseOutput) LatencySeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BatchingConfigurationResponse) *int { return v.LatencySeconds }).(pulumi.IntPtrOutput)
}

// Maximum number of messages in a batch.
func (o BatchingConfigurationResponseOutput) MaxMessages() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BatchingConfigurationResponse) *int { return v.MaxMessages }).(pulumi.IntPtrOutput)
}

type BatchingConfigurationResponsePtrOutput struct{ *pulumi.OutputState }

func (BatchingConfigurationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BatchingConfigurationResponse)(nil)).Elem()
}

func (o BatchingConfigurationResponsePtrOutput) ToBatchingConfigurationResponsePtrOutput() BatchingConfigurationResponsePtrOutput {
	return o
}

func (o BatchingConfigurationResponsePtrOutput) ToBatchingConfigurationResponsePtrOutputWithContext(ctx context.Context) BatchingConfigurationResponsePtrOutput {
	return o
}

func (o BatchingConfigurationResponsePtrOutput) Elem() BatchingConfigurationResponseOutput {
	return o.ApplyT(func(v *BatchingConfigurationResponse) BatchingConfigurationResponse {
		if v != nil {
			return *v
		}
		var ret BatchingConfigurationResponse
		return ret
	}).(BatchingConfigurationResponseOutput)
}

// Batching latency in seconds.
func (o BatchingConfigurationResponsePtrOutput) LatencySeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BatchingConfigurationResponse) *int {
		if v == nil {
			return nil
		}
		return v.LatencySeconds
	}).(pulumi.IntPtrOutput)
}

// Maximum number of messages in a batch.
func (o BatchingConfigurationResponsePtrOutput) MaxMessages() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BatchingConfigurationResponse) *int {
		if v == nil {
			return nil
		}
		return v.MaxMessages
	}).(pulumi.IntPtrOutput)
}

// BrokerAuthentication Resource properties
type BrokerAuthenticationProperties struct {
	// Defines a set of Broker authentication methods to be used on `BrokerListeners`. For each array element one authenticator type supported.
	AuthenticationMethods []BrokerAuthenticatorMethods `pulumi:"authenticationMethods"`
}

// BrokerAuthenticationPropertiesInput is an input type that accepts BrokerAuthenticationPropertiesArgs and BrokerAuthenticationPropertiesOutput values.
// You can construct a concrete instance of `BrokerAuthenticationPropertiesInput` via:
//
//	BrokerAuthenticationPropertiesArgs{...}
type BrokerAuthenticationPropertiesInput interface {
	pulumi.Input

	ToBrokerAuthenticationPropertiesOutput() BrokerAuthenticationPropertiesOutput
	ToBrokerAuthenticationPropertiesOutputWithContext(context.Context) BrokerAuthenticationPropertiesOutput
}

// BrokerAuthentication Resource properties
type BrokerAuthenticationPropertiesArgs struct {
	// Defines a set of Broker authentication methods to be used on `BrokerListeners`. For each array element one authenticator type supported.
	AuthenticationMethods BrokerAuthenticatorMethodsArrayInput `pulumi:"authenticationMethods"`
}

func (BrokerAuthenticationPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BrokerAuthenticationProperties)(nil)).Elem()
}

func (i BrokerAuthenticationPropertiesArgs) ToBrokerAuthenticationPropertiesOutput() BrokerAuthenticationPropertiesOutput {
	return i.ToBrokerAuthenticationPropertiesOutputWithContext(context.Background())
}

func (i BrokerAuthenticationPropertiesArgs) ToBrokerAuthenticationPropertiesOutputWithContext(ctx context.Context) BrokerAuthenticationPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BrokerAuthenticationPropertiesOutput)
}

func (i BrokerAuthenticationPropertiesArgs) ToBrokerAuthenticationPropertiesPtrOutput() BrokerAuthenticationPropertiesPtrOutput {
	return i.ToBrokerAuthenticationPropertiesPtrOutputWithContext(context.Background())
}

func (i BrokerAuthenticationPropertiesArgs) ToBrokerAuthenticationPropertiesPtrOutputWithContext(ctx context.Context) BrokerAuthenticationPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BrokerAuthenticationPropertiesOutput).ToBrokerAuthenticationPropertiesPtrOutputWithContext(ctx)
}

// BrokerAuthenticationPropertiesPtrInput is an input type that accepts BrokerAuthenticationPropertiesArgs, BrokerAuthenticationPropertiesPtr and BrokerAuthenticationPropertiesPtrOutput values.
// You can construct a concrete instance of `BrokerAuthenticationPropertiesPtrInput` via:
//
//	        BrokerAuthenticationPropertiesArgs{...}
//
//	or:
//
//	        nil
type BrokerAuthenticationPropertiesPtrInput interface {
	pulumi.Input

	ToBrokerAuthenticationPropertiesPtrOutput() BrokerAuthenticationPropertiesPtrOutput
	ToBrokerAuthenticationPropertiesPtrOutputWithContext(context.Context) BrokerAuthenticationPropertiesPtrOutput
}

type brokerAuthenticationPropertiesPtrType BrokerAuthenticationPropertiesArgs

func BrokerAuthenticationPropertiesPtr(v *BrokerAuthenticationPropertiesArgs) BrokerAuthenticationPropertiesPtrInput {
	return (*brokerAuthenticationPropertiesPtrType)(v)
}

func (*brokerAuthenticationPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BrokerAuthenticationProperties)(nil)).Elem()
}

func (i *brokerAuthenticationPropertiesPtrType) ToBrokerAuthenticationPropertiesPtrOutput() BrokerAuthenticationPropertiesPtrOutput {
	return i.ToBrokerAuthenticationPropertiesPtrOutputWithContext(context.Background())
}

func (i *brokerAuthenticationPropertiesPtrType) ToBrokerAuthenticationPropertiesPtrOutputWithContext(ctx context.Context) BrokerAuthenticationPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BrokerAuthenticationPropertiesPtrOutput)
}

// BrokerAuthentication Resource properties
type BrokerAuthenticationPropertiesOutput struct{ *pulumi.OutputState }

func (BrokerAuthenticationPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BrokerAuthenticationProperties)(nil)).Elem()
}

func (o BrokerAuthenticationPropertiesOutput) ToBrokerAuthenticationPropertiesOutput() BrokerAuthenticationPropertiesOutput {
	return o
}

func (o BrokerAuthenticationPropertiesOutput) ToBrokerAuthenticationPropertiesOutputWithContext(ctx context.Context) BrokerAuthenticationPropertiesOutput {
	return o
}

func (o BrokerAuthenticationPropertiesOutput) ToBrokerAuthenticationPropertiesPtrOutput() BrokerAuthenticationPropertiesPtrOutput {
	return o.ToBrokerAuthenticationPropertiesPtrOutputWithContext(context.Background())
}

func (o BrokerAuthenticationPropertiesOutput) ToBrokerAuthenticationPropertiesPtrOutputWithContext(ctx context.Context) BrokerAuthenticationPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BrokerAuthenticationProperties) *BrokerAuthenticationProperties {
		return &v
	}).(BrokerAuthenticationPropertiesPtrOutput)
}

// Defines a set of Broker authentication methods to be used on `BrokerListeners`. For each array element one authenticator type supported.
func (o BrokerAuthenticationPropertiesOutput) AuthenticationMethods() BrokerAuthenticatorMethodsArrayOutput {
	return o.ApplyT(func(v BrokerAuthenticationProperties) []BrokerAuthenticatorMethods { return v.AuthenticationMethods }).(BrokerAuthenticatorMethodsArrayOutput)
}

type BrokerAuthenticationPropertiesPtrOutput struct{ *pulumi.OutputState }

func (BrokerAuthenticationPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BrokerAuthenticationProperties)(nil)).Elem()
}

func (o BrokerAuthenticationPropertiesPtrOutput) ToBrokerAuthenticationPropertiesPtrOutput() BrokerAuthenticationPropertiesPtrOutput {
	return o
}

func (o BrokerAuthenticationPropertiesPtrOutput) ToBrokerAuthenticationPropertiesPtrOutputWithContext(ctx context.Context) BrokerAuthenticationPropertiesPtrOutput {
	return o
}

func (o BrokerAuthenticationPropertiesPtrOutput) Elem() BrokerAuthenticationPropertiesOutput {
	return o.ApplyT(func(v *BrokerAuthenticationProperties) BrokerAuthenticationProperties {
		if v != nil {
			return *v
		}
		var ret BrokerAuthenticationProperties
		return ret
	}).(BrokerAuthenticationPropertiesOutput)
}

// Defines a set of Broker authentication methods to be used on `BrokerListeners`. For each array element one authenticator type supported.
func (o BrokerAuthenticationPropertiesPtrOutput) AuthenticationMethods() BrokerAuthenticatorMethodsArrayOutput {
	return o.ApplyT(func(v *BrokerAuthenticationProperties) []BrokerAuthenticatorMethods {
		if v == nil {
			return nil
		}
		return v.AuthenticationMethods
	}).(BrokerAuthenticatorMethodsArrayOutput)
}

// BrokerAuthentication Resource properties
type BrokerAuthenticationPropertiesResponse struct {
	// Defines a set of Broker authentication methods to be used on `BrokerListeners`. For each array element one authenticator type supported.
	AuthenticationMethods []BrokerAuthenticatorMethodsResponse `pulumi:"authenticationMethods"`
	// The status of the last operation.
	ProvisioningState string `pulumi:"provisioningState"`
}

// BrokerAuthentication Resource properties
type BrokerAuthenticationPropertiesResponseOutput struct{ *pulumi.OutputState }

func (BrokerAuthenticationPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BrokerAuthenticationPropertiesResponse)(nil)).Elem()
}

func (o BrokerAuthenticationPropertiesResponseOutput) ToBrokerAuthenticationPropertiesResponseOutput() BrokerAuthenticationPropertiesResponseOutput {
	return o
}

func (o BrokerAuthenticationPropertiesResponseOutput) ToBrokerAuthenticationPropertiesResponseOutputWithContext(ctx context.Context) BrokerAuthenticationPropertiesResponseOutput {
	return o
}

// Defines a set of Broker authentication methods to be used on `BrokerListeners`. For each array element one authenticator type supported.
func (o BrokerAuthenticationPropertiesResponseOutput) AuthenticationMethods() BrokerAuthenticatorMethodsResponseArrayOutput {
	return o.ApplyT(func(v BrokerAuthenticationPropertiesResponse) []BrokerAuthenticatorMethodsResponse {
		return v.AuthenticationMethods
	}).(BrokerAuthenticatorMethodsResponseArrayOutput)
}

// The status of the last operation.
func (o BrokerAuthenticationPropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v BrokerAuthenticationPropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Custom Authentication properties
type BrokerAuthenticatorCustomAuth struct {
	// X509 Custom Auth type details.
	X509 X509ManualCertificate `pulumi:"x509"`
}

// BrokerAuthenticatorCustomAuthInput is an input type that accepts BrokerAuthenticatorCustomAuthArgs and BrokerAuthenticatorCustomAuthOutput values.
// You can construct a concrete instance of `BrokerAuthenticatorCustomAuthInput` via:
//
//	BrokerAuthenticatorCustomAuthArgs{...}
type BrokerAuthenticatorCustomAuthInput interface {
	pulumi.Input

	ToBrokerAuthenticatorCustomAuthOutput() BrokerAuthenticatorCustomAuthOutput
	ToBrokerAuthenticatorCustomAuthOutputWithContext(context.Context) BrokerAuthenticatorCustomAuthOutput
}

// Custom Authentication properties
type BrokerAuthenticatorCustomAuthArgs struct {
	// X509 Custom Auth type details.
	X509 X509ManualCertificateInput `pulumi:"x509"`
}

func (BrokerAuthenticatorCustomAuthArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BrokerAuthenticatorCustomAuth)(nil)).Elem()
}

func (i BrokerAuthenticatorCustomAuthArgs) ToBrokerAuthenticatorCustomAuthOutput() BrokerAuthenticatorCustomAuthOutput {
	return i.ToBrokerAuthenticatorCustomAuthOutputWithContext(context.Background())
}

func (i BrokerAuthenticatorCustomAuthArgs) ToBrokerAuthenticatorCustomAuthOutputWithContext(ctx context.Context) BrokerAuthenticatorCustomAuthOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BrokerAuthenticatorCustomAuthOutput)
}

func (i BrokerAuthenticatorCustomAuthArgs) ToBrokerAuthenticatorCustomAuthPtrOutput() BrokerAuthenticatorCustomAuthPtrOutput {
	return i.ToBrokerAuthenticatorCustomAuthPtrOutputWithContext(context.Background())
}

func (i BrokerAuthenticatorCustomAuthArgs) ToBrokerAuthenticatorCustomAuthPtrOutputWithContext(ctx context.Context) BrokerAuthenticatorCustomAuthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BrokerAuthenticatorCustomAuthOutput).ToBrokerAuthenticatorCustomAuthPtrOutputWithContext(ctx)
}

// BrokerAuthenticatorCustomAuthPtrInput is an input type that accepts BrokerAuthenticatorCustomAuthArgs, BrokerAuthenticatorCustomAuthPtr and BrokerAuthenticatorCustomAuthPtrOutput values.
// You can construct a concrete instance of `BrokerAuthenticatorCustomAuthPtrInput` via:
//
//	        BrokerAuthenticatorCustomAuthArgs{...}
//
//	or:
//
//	        nil
type BrokerAuthenticatorCustomAuthPtrInput interface {
	pulumi.Input

	ToBrokerAuthenticatorCustomAuthPtrOutput() BrokerAuthenticatorCustomAuthPtrOutput
	ToBrokerAuthenticatorCustomAuthPtrOutputWithContext(context.Context) BrokerAuthenticatorCustomAuthPtrOutput
}

type brokerAuthenticatorCustomAuthPtrType BrokerAuthenticatorCustomAuthArgs

func BrokerAuthenticatorCustomAuthPtr(v *BrokerAuthenticatorCustomAuthArgs) BrokerAuthenticatorCustomAuthPtrInput {
	return (*brokerAuthenticatorCustomAuthPtrType)(v)
}

func (*brokerAuthenticatorCustomAuthPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BrokerAuthenticatorCustomAuth)(nil)).Elem()
}

func (i *brokerAuthenticatorCustomAuthPtrType) ToBrokerAuthenticatorCustomAuthPtrOutput() BrokerAuthenticatorCustomAuthPtrOutput {
	return i.ToBrokerAuthenticatorCustomAuthPtrOutputWithContext(context.Background())
}

func (i *brokerAuthenticatorCustomAuthPtrType) ToBrokerAuthenticatorCustomAuthPtrOutputWithContext(ctx context.Context) BrokerAuthenticatorCustomAuthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BrokerAuthenticatorCustomAuthPtrOutput)
}

// Custom Authentication properties
type BrokerAuthenticatorCustomAuthOutput struct{ *pulumi.OutputState }

func (BrokerAuthenticatorCustomAuthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BrokerAuthenticatorCustomAuth)(nil)).Elem()
}

func (o BrokerAuthenticatorCustomAuthOutput) ToBrokerAuthenticatorCustomAuthOutput() BrokerAuthenticatorCustomAuthOutput {
	return o
}

func (o BrokerAuthenticatorCustomAuthOutput) ToBrokerAuthenticatorCustomAuthOutputWithContext(ctx context.Context) BrokerAuthenticatorCustomAuthOutput {
	return o
}

func (o BrokerAuthenticatorCustomAuthOutput) ToBrokerAuthenticatorCustomAuthPtrOutput() BrokerAuthenticatorCustomAuthPtrOutput {
	return o.ToBrokerAuthenticatorCustomAuthPtrOutputWithContext(context.Background())
}

func (o BrokerAuthenticatorCustomAuthOutput) ToBrokerAuthenticatorCustomAuthPtrOutputWithContext(ctx context.Context) BrokerAuthenticatorCustomAuthPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BrokerAuthenticatorCustomAuth) *BrokerAuthenticatorCustomAuth {
		return &v
	}).(BrokerAuthenticatorCustomAuthPtrOutput)
}

// X509 Custom Auth type details.
func (o BrokerAuthenticatorCustomAuthOutput) X509() X509ManualCertificateOutput {
	return o.ApplyT(func(v BrokerAuthenticatorCustomAuth) X509ManualCertificate { return v.X509 }).(X509ManualCertificateOutput)
}

type BrokerAuthenticatorCustomAuthPtrOutput struct{ *pulumi.OutputState }

func (BrokerAuthenticatorCustomAuthPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BrokerAuthenticatorCustomAuth)(nil)).Elem()
}

func (o BrokerAuthenticatorCustomAuthPtrOutput) ToBrokerAuthenticatorCustomAuthPtrOutput() BrokerAuthenticatorCustomAuthPtrOutput {
	return o
}

func (o BrokerAuthenticatorCustomAuthPtrOutput) ToBrokerAuthenticatorCustomAuthPtrOutputWithContext(ctx context.Context) BrokerAuthenticatorCustomAuthPtrOutput {
	return o
}

func (o BrokerAuthenticatorCustomAuthPtrOutput) Elem() BrokerAuthenticatorCustomAuthOutput {
	return o.ApplyT(func(v *BrokerAuthenticatorCustomAuth) BrokerAuthenticatorCustomAuth {
		if v != nil {
			return *v
		}
		var ret BrokerAuthenticatorCustomAuth
		return ret
	}).(BrokerAuthenticatorCustomAuthOutput)
}

// X509 Custom Auth type details.
func (o BrokerAuthenticatorCustomAuthPtrOutput) X509() X509ManualCertificatePtrOutput {
	return o.ApplyT(func(v *BrokerAuthenticatorCustomAuth) *X509ManualCertificate {
		if v == nil {
			return nil
		}
		return &v.X509
	}).(X509ManualCertificatePtrOutput)
}

// Custom Authentication properties
type BrokerAuthenticatorCustomAuthResponse struct {
	// X509 Custom Auth type details.
	X509 X509ManualCertificateResponse `pulumi:"x509"`
}

// Custom Authentication properties
type BrokerAuthenticatorCustomAuthResponseOutput struct{ *pulumi.OutputState }

func (BrokerAuthenticatorCustomAuthResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BrokerAuthenticatorCustomAuthResponse)(nil)).Elem()
}

func (o BrokerAuthenticatorCustomAuthResponseOutput) ToBrokerAuthenticatorCustomAuthResponseOutput() BrokerAuthenticatorCustomAuthResponseOutput {
	return o
}

func (o BrokerAuthenticatorCustomAuthResponseOutput) ToBrokerAuthenticatorCustomAuthResponseOutputWithContext(ctx context.Context) BrokerAuthenticatorCustomAuthResponseOutput {
	return o
}

// X509 Custom Auth type details.
func (o BrokerAuthenticatorCustomAuthResponseOutput) X509() X509ManualCertificateResponseOutput {
	return o.ApplyT(func(v BrokerAuthenticatorCustomAuthResponse) X509ManualCertificateResponse { return v.X509 }).(X509ManualCertificateResponseOutput)
}

type BrokerAuthenticatorCustomAuthResponsePtrOutput struct{ *pulumi.OutputState }

func (BrokerAuthenticatorCustomAuthResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BrokerAuthenticatorCustomAuthResponse)(nil)).Elem()
}

func (o BrokerAuthenticatorCustomAuthResponsePtrOutput) ToBrokerAuthenticatorCustomAuthResponsePtrOutput() BrokerAuthenticatorCustomAuthResponsePtrOutput {
	return o
}

func (o BrokerAuthenticatorCustomAuthResponsePtrOutput) ToBrokerAuthenticatorCustomAuthResponsePtrOutputWithContext(ctx context.Context) BrokerAuthenticatorCustomAuthResponsePtrOutput {
	return o
}

func (o BrokerAuthenticatorCustomAuthResponsePtrOutput) Elem() BrokerAuthenticatorCustomAuthResponseOutput {
	return o.ApplyT(func(v *BrokerAuthenticatorCustomAuthResponse) BrokerAuthenticatorCustomAuthResponse {
		if v != nil {
			return *v
		}
		var ret BrokerAuthenticatorCustomAuthResponse
		return ret
	}).(BrokerAuthenticatorCustomAuthResponseOutput)
}

// X509 Custom Auth type details.
func (o BrokerAuthenticatorCustomAuthResponsePtrOutput) X509() X509ManualCertificateResponsePtrOutput {
	return o.ApplyT(func(v *BrokerAuthenticatorCustomAuthResponse) *X509ManualCertificateResponse {
		if v == nil {
			return nil
		}
		return &v.X509
	}).(X509ManualCertificateResponsePtrOutput)
}

// Custom method for BrokerAuthentication
type BrokerAuthenticatorMethodCustom struct {
	// Optional authentication needed for authenticating with the custom authentication server.
	Auth *BrokerAuthenticatorCustomAuth `pulumi:"auth"`
	// Optional CA certificate for validating the custom authentication server's certificate.
	CaCertConfigMap *string `pulumi:"caCertConfigMap"`
	// Endpoint of the custom authentication server. Must be an HTTPS endpoint.
	Endpoint string `pulumi:"endpoint"`
	// Additional HTTP headers to pass to the custom authentication server.
	Headers map[string]string `pulumi:"headers"`
}

// BrokerAuthenticatorMethodCustomInput is an input type that accepts BrokerAuthenticatorMethodCustomArgs and BrokerAuthenticatorMethodCustomOutput values.
// You can construct a concrete instance of `BrokerAuthenticatorMethodCustomInput` via:
//
//	BrokerAuthenticatorMethodCustomArgs{...}
type BrokerAuthenticatorMethodCustomInput interface {
	pulumi.Input

	ToBrokerAuthenticatorMethodCustomOutput() BrokerAuthenticatorMethodCustomOutput
	ToBrokerAuthenticatorMethodCustomOutputWithContext(context.Context) BrokerAuthenticatorMethodCustomOutput
}

// Custom method for BrokerAuthentication
type BrokerAuthenticatorMethodCustomArgs struct {
	// Optional authentication needed for authenticating with the custom authentication server.
	Auth BrokerAuthenticatorCustomAuthPtrInput `pulumi:"auth"`
	// Optional CA certificate for validating the custom authentication server's certificate.
	CaCertConfigMap pulumi.StringPtrInput `pulumi:"caCertConfigMap"`
	// Endpoint of the custom authentication server. Must be an HTTPS endpoint.
	Endpoint pulumi.StringInput `pulumi:"endpoint"`
	// Additional HTTP headers to pass to the custom authentication server.
	Headers pulumi.StringMapInput `pulumi:"headers"`
}

func (BrokerAuthenticatorMethodCustomArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BrokerAuthenticatorMethodCustom)(nil)).Elem()
}

func (i BrokerAuthenticatorMethodCustomArgs) ToBrokerAuthenticatorMethodCustomOutput() BrokerAuthenticatorMethodCustomOutput {
	return i.ToBrokerAuthenticatorMethodCustomOutputWithContext(context.Background())
}

func (i BrokerAuthenticatorMethodCustomArgs) ToBrokerAuthenticatorMethodCustomOutputWithContext(ctx context.Context) BrokerAuthenticatorMethodCustomOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BrokerAuthenticatorMethodCustomOutput)
}

func (i BrokerAuthenticatorMethodCustomArgs) ToBrokerAuthenticatorMethodCustomPtrOutput() BrokerAuthenticatorMethodCustomPtrOutput {
	return i.ToBrokerAuthenticatorMethodCustomPtrOutputWithContext(context.Background())
}

func (i BrokerAuthenticatorMethodCustomArgs) ToBrokerAuthenticatorMethodCustomPtrOutputWithContext(ctx context.Context) BrokerAuthenticatorMethodCustomPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BrokerAuthenticatorMethodCustomOutput).ToBrokerAuthenticatorMethodCustomPtrOutputWithContext(ctx)
}

// BrokerAuthenticatorMethodCustomPtrInput is an input type that accepts BrokerAuthenticatorMethodCustomArgs, BrokerAuthenticatorMethodCustomPtr and BrokerAuthenticatorMethodCustomPtrOutput values.
// You can construct a concrete instance of `BrokerAuthenticatorMethodCustomPtrInput` via:
//
//	        BrokerAuthenticatorMethodCustomArgs{...}
//
//	or:
//
//	        nil
type BrokerAuthenticatorMethodCustomPtrInput interface {
	pulumi.Input

	ToBrokerAuthenticatorMethodCustomPtrOutput() BrokerAuthenticatorMethodCustomPtrOutput
	ToBrokerAuthenticatorMethodCustomPtrOutputWithContext(context.Context) BrokerAuthenticatorMethodCustomPtrOutput
}

type brokerAuthenticatorMethodCustomPtrType BrokerAuthenticatorMethodCustomArgs

func BrokerAuthenticatorMethodCustomPtr(v *BrokerAuthenticatorMethodCustomArgs) BrokerAuthenticatorMethodCustomPtrInput {
	return (*brokerAuthenticatorMethodCustomPtrType)(v)
}

func (*brokerAuthenticatorMethodCustomPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BrokerAuthenticatorMethodCustom)(nil)).Elem()
}

func (i *brokerAuthenticatorMethodCustomPtrType) ToBrokerAuthenticatorMethodCustomPtrOutput() BrokerAuthenticatorMethodCustomPtrOutput {
	return i.ToBrokerAuthenticatorMethodCustomPtrOutputWithContext(context.Background())
}

func (i *brokerAuthenticatorMethodCustomPtrType) ToBrokerAuthenticatorMethodCustomPtrOutputWithContext(ctx context.Context) BrokerAuthenticatorMethodCustomPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BrokerAuthenticatorMethodCustomPtrOutput)
}

// Custom method for BrokerAuthentication
type BrokerAuthenticatorMethodCustomOutput struct{ *pulumi.OutputState }

func (BrokerAuthenticatorMethodCustomOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BrokerAuthenticatorMethodCustom)(nil)).Elem()
}

func (o BrokerAuthenticatorMethodCustomOutput) ToBrokerAuthenticatorMethodCustomOutput() BrokerAuthenticatorMethodCustomOutput {
	return o
}

func (o BrokerAuthenticatorMethodCustomOutput) ToBrokerAuthenticatorMethodCustomOutputWithContext(ctx context.Context) BrokerAuthenticatorMethodCustomOutput {
	return o
}

func (o BrokerAuthenticatorMethodCustomOutput) ToBrokerAuthenticatorMethodCustomPtrOutput() BrokerAuthenticatorMethodCustomPtrOutput {
	return o.ToBrokerAuthenticatorMethodCustomPtrOutputWithContext(context.Background())
}

func (o BrokerAuthenticatorMethodCustomOutput) ToBrokerAuthenticatorMethodCustomPtrOutputWithContext(ctx context.Context) BrokerAuthenticatorMethodCustomPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BrokerAuthenticatorMethodCustom) *BrokerAuthenticatorMethodCustom {
		return &v
	}).(BrokerAuthenticatorMethodCustomPtrOutput)
}

// Optional authentication needed for authenticating with the custom authentication server.
func (o BrokerAuthenticatorMethodCustomOutput) Auth() BrokerAuthenticatorCustomAuthPtrOutput {
	return o.ApplyT(func(v BrokerAuthenticatorMethodCustom) *BrokerAuthenticatorCustomAuth { return v.Auth }).(BrokerAuthenticatorCustomAuthPtrOutput)
}

// Optional CA certificate for validating the custom authentication server's certificate.
func (o BrokerAuthenticatorMethodCustomOutput) CaCertConfigMap() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BrokerAuthenticatorMethodCustom) *string { return v.CaCertConfigMap }).(pulumi.StringPtrOutput)
}

// Endpoint of the custom authentication server. Must be an HTTPS endpoint.
func (o BrokerAuthenticatorMethodCustomOutput) Endpoint() pulumi.StringOutput {
	return o.ApplyT(func(v BrokerAuthenticatorMethodCustom) string { return v.Endpoint }).(pulumi.StringOutput)
}

// Additional HTTP headers to pass to the custom authentication server.
func (o BrokerAuthenticatorMethodCustomOutput) Headers() pulumi.StringMapOutput {
	return o.ApplyT(func(v BrokerAuthenticatorMethodCustom) map[string]string { return v.Headers }).(pulumi.StringMapOutput)
}

type BrokerAuthenticatorMethodCustomPtrOutput struct{ *pulumi.OutputState }

func (BrokerAuthenticatorMethodCustomPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BrokerAuthenticatorMethodCustom)(nil)).Elem()
}

func (o BrokerAuthenticatorMethodCustomPtrOutput) ToBrokerAuthenticatorMethodCustomPtrOutput() BrokerAuthenticatorMethodCustomPtrOutput {
	return o
}

func (o BrokerAuthenticatorMethodCustomPtrOutput) ToBrokerAuthenticatorMethodCustomPtrOutputWithContext(ctx context.Context) BrokerAuthenticatorMethodCustomPtrOutput {
	return o
}

func (o BrokerAuthenticatorMethodCustomPtrOutput) Elem() BrokerAuthenticatorMethodCustomOutput {
	return o.ApplyT(func(v *BrokerAuthenticatorMethodCustom) BrokerAuthenticatorMethodCustom {
		if v != nil {
			return *v
		}
		var ret BrokerAuthenticatorMethodCustom
		return ret
	}).(BrokerAuthenticatorMethodCustomOutput)
}

// Optional authentication needed for authenticating with the custom authentication server.
func (o BrokerAuthenticatorMethodCustomPtrOutput) Auth() BrokerAuthenticatorCustomAuthPtrOutput {
	return o.ApplyT(func(v *BrokerAuthenticatorMethodCustom) *BrokerAuthenticatorCustomAuth {
		if v == nil {
			return nil
		}
		return v.Auth
	}).(BrokerAuthenticatorCustomAuthPtrOutput)
}

// Optional CA certificate for validating the custom authentication server's certificate.
func (o BrokerAuthenticatorMethodCustomPtrOutput) CaCertConfigMap() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BrokerAuthenticatorMethodCustom) *string {
		if v == nil {
			return nil
		}
		return v.CaCertConfigMap
	}).(pulumi.StringPtrOutput)
}

// Endpoint of the custom authentication server. Must be an HTTPS endpoint.
func (o BrokerAuthenticatorMethodCustomPtrOutput) Endpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BrokerAuthenticatorMethodCustom) *string {
		if v == nil {
			return nil
		}
		return &v.Endpoint
	}).(pulumi.StringPtrOutput)
}

// Additional HTTP headers to pass to the custom authentication server.
func (o BrokerAuthenticatorMethodCustomPtrOutput) Headers() pulumi.StringMapOutput {
	return o.ApplyT(func(v *BrokerAuthenticatorMethodCustom) map[string]string {
		if v == nil {
			return nil
		}
		return v.Headers
	}).(pulumi.StringMapOutput)
}

// Custom method for BrokerAuthentication
type BrokerAuthenticatorMethodCustomResponse struct {
	// Optional authentication needed for authenticating with the custom authentication server.
	Auth *BrokerAuthenticatorCustomAuthResponse `pulumi:"auth"`
	// Optional CA certificate for validating the custom authentication server's certificate.
	CaCertConfigMap *string `pulumi:"caCertConfigMap"`
	// Endpoint of the custom authentication server. Must be an HTTPS endpoint.
	Endpoint string `pulumi:"endpoint"`
	// Additional HTTP headers to pass to the custom authentication server.
	Headers map[string]string `pulumi:"headers"`
}

// Custom method for BrokerAuthentication
type BrokerAuthenticatorMethodCustomResponseOutput struct{ *pulumi.OutputState }

func (BrokerAuthenticatorMethodCustomResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BrokerAuthenticatorMethodCustomResponse)(nil)).Elem()
}

func (o BrokerAuthenticatorMethodCustomResponseOutput) ToBrokerAuthenticatorMethodCustomResponseOutput() BrokerAuthenticatorMethodCustomResponseOutput {
	return o
}

func (o BrokerAuthenticatorMethodCustomResponseOutput) ToBrokerAuthenticatorMethodCustomResponseOutputWithContext(ctx context.Context) BrokerAuthenticatorMethodCustomResponseOutput {
	return o
}

// Optional authentication needed for authenticating with the custom authentication server.
func (o BrokerAuthenticatorMethodCustomResponseOutput) Auth() BrokerAuthenticatorCustomAuthResponsePtrOutput {
	return o.ApplyT(func(v BrokerAuthenticatorMethodCustomResponse) *BrokerAuthenticatorCustomAuthResponse { return v.Auth }).(BrokerAuthenticatorCustomAuthResponsePtrOutput)
}

// Optional CA certificate for validating the custom authentication server's certificate.
func (o BrokerAuthenticatorMethodCustomResponseOutput) CaCertConfigMap() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BrokerAuthenticatorMethodCustomResponse) *string { return v.CaCertConfigMap }).(pulumi.StringPtrOutput)
}

// Endpoint of the custom authentication server. Must be an HTTPS endpoint.
func (o BrokerAuthenticatorMethodCustomResponseOutput) Endpoint() pulumi.StringOutput {
	return o.ApplyT(func(v BrokerAuthenticatorMethodCustomResponse) string { return v.Endpoint }).(pulumi.StringOutput)
}

// Additional HTTP headers to pass to the custom authentication server.
func (o BrokerAuthenticatorMethodCustomResponseOutput) Headers() pulumi.StringMapOutput {
	return o.ApplyT(func(v BrokerAuthenticatorMethodCustomResponse) map[string]string { return v.Headers }).(pulumi.StringMapOutput)
}

type BrokerAuthenticatorMethodCustomResponsePtrOutput struct{ *pulumi.OutputState }

func (BrokerAuthenticatorMethodCustomResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BrokerAuthenticatorMethodCustomResponse)(nil)).Elem()
}

func (o BrokerAuthenticatorMethodCustomResponsePtrOutput) ToBrokerAuthenticatorMethodCustomResponsePtrOutput() BrokerAuthenticatorMethodCustomResponsePtrOutput {
	return o
}

func (o BrokerAuthenticatorMethodCustomResponsePtrOutput) ToBrokerAuthenticatorMethodCustomResponsePtrOutputWithContext(ctx context.Context) BrokerAuthenticatorMethodCustomResponsePtrOutput {
	return o
}

func (o BrokerAuthenticatorMethodCustomResponsePtrOutput) Elem() BrokerAuthenticatorMethodCustomResponseOutput {
	return o.ApplyT(func(v *BrokerAuthenticatorMethodCustomResponse) BrokerAuthenticatorMethodCustomResponse {
		if v != nil {
			return *v
		}
		var ret BrokerAuthenticatorMethodCustomResponse
		return ret
	}).(BrokerAuthenticatorMethodCustomResponseOutput)
}

// Optional authentication needed for authenticating with the custom authentication server.
func (o BrokerAuthenticatorMethodCustomResponsePtrOutput) Auth() BrokerAuthenticatorCustomAuthResponsePtrOutput {
	return o.ApplyT(func(v *BrokerAuthenticatorMethodCustomResponse) *BrokerAuthenticatorCustomAuthResponse {
		if v == nil {
			return nil
		}
		return v.Auth
	}).(BrokerAuthenticatorCustomAuthResponsePtrOutput)
}

// Optional CA certificate for validating the custom authentication server's certificate.
func (o BrokerAuthenticatorMethodCustomResponsePtrOutput) CaCertConfigMap() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BrokerAuthenticatorMethodCustomResponse) *string {
		if v == nil {
			return nil
		}
		return v.CaCertConfigMap
	}).(pulumi.StringPtrOutput)
}

// Endpoint of the custom authentication server. Must be an HTTPS endpoint.
func (o BrokerAuthenticatorMethodCustomResponsePtrOutput) Endpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BrokerAuthenticatorMethodCustomResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Endpoint
	}).(pulumi.StringPtrOutput)
}

// Additional HTTP headers to pass to the custom authentication server.
func (o BrokerAuthenticatorMethodCustomResponsePtrOutput) Headers() pulumi.StringMapOutput {
	return o.ApplyT(func(v *BrokerAuthenticatorMethodCustomResponse) map[string]string {
		if v == nil {
			return nil
		}
		return v.Headers
	}).(pulumi.StringMapOutput)
}

// Service Account Token for BrokerAuthentication
type BrokerAuthenticatorMethodSat struct {
	// List of allowed audience.
	Audiences []string `pulumi:"audiences"`
}

// BrokerAuthenticatorMethodSatInput is an input type that accepts BrokerAuthenticatorMethodSatArgs and BrokerAuthenticatorMethodSatOutput values.
// You can construct a concrete instance of `BrokerAuthenticatorMethodSatInput` via:
//
//	BrokerAuthenticatorMethodSatArgs{...}
type BrokerAuthenticatorMethodSatInput interface {
	pulumi.Input

	ToBrokerAuthenticatorMethodSatOutput() BrokerAuthenticatorMethodSatOutput
	ToBrokerAuthenticatorMethodSatOutputWithContext(context.Context) BrokerAuthenticatorMethodSatOutput
}

// Service Account Token for BrokerAuthentication
type BrokerAuthenticatorMethodSatArgs struct {
	// List of allowed audience.
	Audiences pulumi.StringArrayInput `pulumi:"audiences"`
}

func (BrokerAuthenticatorMethodSatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BrokerAuthenticatorMethodSat)(nil)).Elem()
}

func (i BrokerAuthenticatorMethodSatArgs) ToBrokerAuthenticatorMethodSatOutput() BrokerAuthenticatorMethodSatOutput {
	return i.ToBrokerAuthenticatorMethodSatOutputWithContext(context.Background())
}

func (i BrokerAuthenticatorMethodSatArgs) ToBrokerAuthenticatorMethodSatOutputWithContext(ctx context.Context) BrokerAuthenticatorMethodSatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BrokerAuthenticatorMethodSatOutput)
}

func (i BrokerAuthenticatorMethodSatArgs) ToBrokerAuthenticatorMethodSatPtrOutput() BrokerAuthenticatorMethodSatPtrOutput {
	return i.ToBrokerAuthenticatorMethodSatPtrOutputWithContext(context.Background())
}

func (i BrokerAuthenticatorMethodSatArgs) ToBrokerAuthenticatorMethodSatPtrOutputWithContext(ctx context.Context) BrokerAuthenticatorMethodSatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BrokerAuthenticatorMethodSatOutput).ToBrokerAuthenticatorMethodSatPtrOutputWithContext(ctx)
}

// BrokerAuthenticatorMethodSatPtrInput is an input type that accepts BrokerAuthenticatorMethodSatArgs, BrokerAuthenticatorMethodSatPtr and BrokerAuthenticatorMethodSatPtrOutput values.
// You can construct a concrete instance of `BrokerAuthenticatorMethodSatPtrInput` via:
//
//	        BrokerAuthenticatorMethodSatArgs{...}
//
//	or:
//
//	        nil
type BrokerAuthenticatorMethodSatPtrInput interface {
	pulumi.Input

	ToBrokerAuthenticatorMethodSatPtrOutput() BrokerAuthenticatorMethodSatPtrOutput
	ToBrokerAuthenticatorMethodSatPtrOutputWithContext(context.Context) BrokerAuthenticatorMethodSatPtrOutput
}

type brokerAuthenticatorMethodSatPtrType BrokerAuthenticatorMethodSatArgs

func BrokerAuthenticatorMethodSatPtr(v *BrokerAuthenticatorMethodSatArgs) BrokerAuthenticatorMethodSatPtrInput {
	return (*brokerAuthenticatorMethodSatPtrType)(v)
}

func (*brokerAuthenticatorMethodSatPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BrokerAuthenticatorMethodSat)(nil)).Elem()
}

func (i *brokerAuthenticatorMethodSatPtrType) ToBrokerAuthenticatorMethodSatPtrOutput() BrokerAuthenticatorMethodSatPtrOutput {
	return i.ToBrokerAuthenticatorMethodSatPtrOutputWithContext(context.Background())
}

func (i *brokerAuthenticatorMethodSatPtrType) ToBrokerAuthenticatorMethodSatPtrOutputWithContext(ctx context.Context) BrokerAuthenticatorMethodSatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BrokerAuthenticatorMethodSatPtrOutput)
}

// Service Account Token for BrokerAuthentication
type BrokerAuthenticatorMethodSatOutput struct{ *pulumi.OutputState }

func (BrokerAuthenticatorMethodSatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BrokerAuthenticatorMethodSat)(nil)).Elem()
}

func (o BrokerAuthenticatorMethodSatOutput) ToBrokerAuthenticatorMethodSatOutput() BrokerAuthenticatorMethodSatOutput {
	return o
}

func (o BrokerAuthenticatorMethodSatOutput) ToBrokerAuthenticatorMethodSatOutputWithContext(ctx context.Context) BrokerAuthenticatorMethodSatOutput {
	return o
}

func (o BrokerAuthenticatorMethodSatOutput) ToBrokerAuthenticatorMethodSatPtrOutput() BrokerAuthenticatorMethodSatPtrOutput {
	return o.ToBrokerAuthenticatorMethodSatPtrOutputWithContext(context.Background())
}

func (o BrokerAuthenticatorMethodSatOutput) ToBrokerAuthenticatorMethodSatPtrOutputWithContext(ctx context.Context) BrokerAuthenticatorMethodSatPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BrokerAuthenticatorMethodSat) *BrokerAuthenticatorMethodSat {
		return &v
	}).(BrokerAuthenticatorMethodSatPtrOutput)
}

// List of allowed audience.
func (o BrokerAuthenticatorMethodSatOutput) Audiences() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BrokerAuthenticatorMethodSat) []string { return v.Audiences }).(pulumi.StringArrayOutput)
}

type BrokerAuthenticatorMethodSatPtrOutput struct{ *pulumi.OutputState }

func (BrokerAuthenticatorMethodSatPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BrokerAuthenticatorMethodSat)(nil)).Elem()
}

func (o BrokerAuthenticatorMethodSatPtrOutput) ToBrokerAuthenticatorMethodSatPtrOutput() BrokerAuthenticatorMethodSatPtrOutput {
	return o
}

func (o BrokerAuthenticatorMethodSatPtrOutput) ToBrokerAuthenticatorMethodSatPtrOutputWithContext(ctx context.Context) BrokerAuthenticatorMethodSatPtrOutput {
	return o
}

func (o BrokerAuthenticatorMethodSatPtrOutput) Elem() BrokerAuthenticatorMethodSatOutput {
	return o.ApplyT(func(v *BrokerAuthenticatorMethodSat) BrokerAuthenticatorMethodSat {
		if v != nil {
			return *v
		}
		var ret BrokerAuthenticatorMethodSat
		return ret
	}).(BrokerAuthenticatorMethodSatOutput)
}

// List of allowed audience.
func (o BrokerAuthenticatorMethodSatPtrOutput) Audiences() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *BrokerAuthenticatorMethodSat) []string {
		if v == nil {
			return nil
		}
		return v.Audiences
	}).(pulumi.StringArrayOutput)
}

// Service Account Token for BrokerAuthentication
type BrokerAuthenticatorMethodSatResponse struct {
	// List of allowed audience.
	Audiences []string `pulumi:"audiences"`
}

// Service Account Token for BrokerAuthentication
type BrokerAuthenticatorMethodSatResponseOutput struct{ *pulumi.OutputState }

func (BrokerAuthenticatorMethodSatResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BrokerAuthenticatorMethodSatResponse)(nil)).Elem()
}

func (o BrokerAuthenticatorMethodSatResponseOutput) ToBrokerAuthenticatorMethodSatResponseOutput() BrokerAuthenticatorMethodSatResponseOutput {
	return o
}

func (o BrokerAuthenticatorMethodSatResponseOutput) ToBrokerAuthenticatorMethodSatResponseOutputWithContext(ctx context.Context) BrokerAuthenticatorMethodSatResponseOutput {
	return o
}

// List of allowed audience.
func (o BrokerAuthenticatorMethodSatResponseOutput) Audiences() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BrokerAuthenticatorMethodSatResponse) []string { return v.Audiences }).(pulumi.StringArrayOutput)
}

type BrokerAuthenticatorMethodSatResponsePtrOutput struct{ *pulumi.OutputState }

func (BrokerAuthenticatorMethodSatResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BrokerAuthenticatorMethodSatResponse)(nil)).Elem()
}

func (o BrokerAuthenticatorMethodSatResponsePtrOutput) ToBrokerAuthenticatorMethodSatResponsePtrOutput() BrokerAuthenticatorMethodSatResponsePtrOutput {
	return o
}

func (o BrokerAuthenticatorMethodSatResponsePtrOutput) ToBrokerAuthenticatorMethodSatResponsePtrOutputWithContext(ctx context.Context) BrokerAuthenticatorMethodSatResponsePtrOutput {
	return o
}

func (o BrokerAuthenticatorMethodSatResponsePtrOutput) Elem() BrokerAuthenticatorMethodSatResponseOutput {
	return o.ApplyT(func(v *BrokerAuthenticatorMethodSatResponse) BrokerAuthenticatorMethodSatResponse {
		if v != nil {
			return *v
		}
		var ret BrokerAuthenticatorMethodSatResponse
		return ret
	}).(BrokerAuthenticatorMethodSatResponseOutput)
}

// List of allowed audience.
func (o BrokerAuthenticatorMethodSatResponsePtrOutput) Audiences() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *BrokerAuthenticatorMethodSatResponse) []string {
		if v == nil {
			return nil
		}
		return v.Audiences
	}).(pulumi.StringArrayOutput)
}

// X509 for BrokerAuthentication.
type BrokerAuthenticatorMethodX509 struct {
	// X509 authorization attributes properties.
	AuthorizationAttributes map[string]BrokerAuthenticatorMethodX509Attributes `pulumi:"authorizationAttributes"`
	// Name of the trusted client ca cert resource.
	TrustedClientCaCert *string `pulumi:"trustedClientCaCert"`
}

// Defaults sets the appropriate defaults for BrokerAuthenticatorMethodX509
func (val *BrokerAuthenticatorMethodX509) Defaults() *BrokerAuthenticatorMethodX509 {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.TrustedClientCaCert == nil {
		trustedClientCaCert_ := "client-ca"
		tmp.TrustedClientCaCert = &trustedClientCaCert_
	}
	return &tmp
}

// BrokerAuthenticatorMethodX509Input is an input type that accepts BrokerAuthenticatorMethodX509Args and BrokerAuthenticatorMethodX509Output values.
// You can construct a concrete instance of `BrokerAuthenticatorMethodX509Input` via:
//
//	BrokerAuthenticatorMethodX509Args{...}
type BrokerAuthenticatorMethodX509Input interface {
	pulumi.Input

	ToBrokerAuthenticatorMethodX509Output() BrokerAuthenticatorMethodX509Output
	ToBrokerAuthenticatorMethodX509OutputWithContext(context.Context) BrokerAuthenticatorMethodX509Output
}

// X509 for BrokerAuthentication.
type BrokerAuthenticatorMethodX509Args struct {
	// X509 authorization attributes properties.
	AuthorizationAttributes BrokerAuthenticatorMethodX509AttributesMapInput `pulumi:"authorizationAttributes"`
	// Name of the trusted client ca cert resource.
	TrustedClientCaCert pulumi.StringPtrInput `pulumi:"trustedClientCaCert"`
}

// Defaults sets the appropriate defaults for BrokerAuthenticatorMethodX509Args
func (val *BrokerAuthenticatorMethodX509Args) Defaults() *BrokerAuthenticatorMethodX509Args {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.TrustedClientCaCert == nil {
		tmp.TrustedClientCaCert = pulumi.StringPtr("client-ca")
	}
	return &tmp
}
func (BrokerAuthenticatorMethodX509Args) ElementType() reflect.Type {
	return reflect.TypeOf((*BrokerAuthenticatorMethodX509)(nil)).Elem()
}

func (i BrokerAuthenticatorMethodX509Args) ToBrokerAuthenticatorMethodX509Output() BrokerAuthenticatorMethodX509Output {
	return i.ToBrokerAuthenticatorMethodX509OutputWithContext(context.Background())
}

func (i BrokerAuthenticatorMethodX509Args) ToBrokerAuthenticatorMethodX509OutputWithContext(ctx context.Context) BrokerAuthenticatorMethodX509Output {
	return pulumi.ToOutputWithContext(ctx, i).(BrokerAuthenticatorMethodX509Output)
}

func (i BrokerAuthenticatorMethodX509Args) ToBrokerAuthenticatorMethodX509PtrOutput() BrokerAuthenticatorMethodX509PtrOutput {
	return i.ToBrokerAuthenticatorMethodX509PtrOutputWithContext(context.Background())
}

func (i BrokerAuthenticatorMethodX509Args) ToBrokerAuthenticatorMethodX509PtrOutputWithContext(ctx context.Context) BrokerAuthenticatorMethodX509PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BrokerAuthenticatorMethodX509Output).ToBrokerAuthenticatorMethodX509PtrOutputWithContext(ctx)
}

// BrokerAuthenticatorMethodX509PtrInput is an input type that accepts BrokerAuthenticatorMethodX509Args, BrokerAuthenticatorMethodX509Ptr and BrokerAuthenticatorMethodX509PtrOutput values.
// You can construct a concrete instance of `BrokerAuthenticatorMethodX509PtrInput` via:
//
//	        BrokerAuthenticatorMethodX509Args{...}
//
//	or:
//
//	        nil
type BrokerAuthenticatorMethodX509PtrInput interface {
	pulumi.Input

	ToBrokerAuthenticatorMethodX509PtrOutput() BrokerAuthenticatorMethodX509PtrOutput
	ToBrokerAuthenticatorMethodX509PtrOutputWithContext(context.Context) BrokerAuthenticatorMethodX509PtrOutput
}

type brokerAuthenticatorMethodX509PtrType BrokerAuthenticatorMethodX509Args

func BrokerAuthenticatorMethodX509Ptr(v *BrokerAuthenticatorMethodX509Args) BrokerAuthenticatorMethodX509PtrInput {
	return (*brokerAuthenticatorMethodX509PtrType)(v)
}

func (*brokerAuthenticatorMethodX509PtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BrokerAuthenticatorMethodX509)(nil)).Elem()
}

func (i *brokerAuthenticatorMethodX509PtrType) ToBrokerAuthenticatorMethodX509PtrOutput() BrokerAuthenticatorMethodX509PtrOutput {
	return i.ToBrokerAuthenticatorMethodX509PtrOutputWithContext(context.Background())
}

func (i *brokerAuthenticatorMethodX509PtrType) ToBrokerAuthenticatorMethodX509PtrOutputWithContext(ctx context.Context) BrokerAuthenticatorMethodX509PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BrokerAuthenticatorMethodX509PtrOutput)
}

// X509 for BrokerAuthentication.
type BrokerAuthenticatorMethodX509Output struct{ *pulumi.OutputState }

func (BrokerAuthenticatorMethodX509Output) ElementType() reflect.Type {
	return reflect.TypeOf((*BrokerAuthenticatorMethodX509)(nil)).Elem()
}

func (o BrokerAuthenticatorMethodX509Output) ToBrokerAuthenticatorMethodX509Output() BrokerAuthenticatorMethodX509Output {
	return o
}

func (o BrokerAuthenticatorMethodX509Output) ToBrokerAuthenticatorMethodX509OutputWithContext(ctx context.Context) BrokerAuthenticatorMethodX509Output {
	return o
}

func (o BrokerAuthenticatorMethodX509Output) ToBrokerAuthenticatorMethodX509PtrOutput() BrokerAuthenticatorMethodX509PtrOutput {
	return o.ToBrokerAuthenticatorMethodX509PtrOutputWithContext(context.Background())
}

func (o BrokerAuthenticatorMethodX509Output) ToBrokerAuthenticatorMethodX509PtrOutputWithContext(ctx context.Context) BrokerAuthenticatorMethodX509PtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BrokerAuthenticatorMethodX509) *BrokerAuthenticatorMethodX509 {
		return &v
	}).(BrokerAuthenticatorMethodX509PtrOutput)
}

// X509 authorization attributes properties.
func (o BrokerAuthenticatorMethodX509Output) AuthorizationAttributes() BrokerAuthenticatorMethodX509AttributesMapOutput {
	return o.ApplyT(func(v BrokerAuthenticatorMethodX509) map[string]BrokerAuthenticatorMethodX509Attributes {
		return v.AuthorizationAttributes
	}).(BrokerAuthenticatorMethodX509AttributesMapOutput)
}

// Name of the trusted client ca cert resource.
func (o BrokerAuthenticatorMethodX509Output) TrustedClientCaCert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BrokerAuthenticatorMethodX509) *string { return v.TrustedClientCaCert }).(pulumi.StringPtrOutput)
}

type BrokerAuthenticatorMethodX509PtrOutput struct{ *pulumi.OutputState }

func (BrokerAuthenticatorMethodX509PtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BrokerAuthenticatorMethodX509)(nil)).Elem()
}

func (o BrokerAuthenticatorMethodX509PtrOutput) ToBrokerAuthenticatorMethodX509PtrOutput() BrokerAuthenticatorMethodX509PtrOutput {
	return o
}

func (o BrokerAuthenticatorMethodX509PtrOutput) ToBrokerAuthenticatorMethodX509PtrOutputWithContext(ctx context.Context) BrokerAuthenticatorMethodX509PtrOutput {
	return o
}

func (o BrokerAuthenticatorMethodX509PtrOutput) Elem() BrokerAuthenticatorMethodX509Output {
	return o.ApplyT(func(v *BrokerAuthenticatorMethodX509) BrokerAuthenticatorMethodX509 {
		if v != nil {
			return *v
		}
		var ret BrokerAuthenticatorMethodX509
		return ret
	}).(BrokerAuthenticatorMethodX509Output)
}

// X509 authorization attributes properties.
func (o BrokerAuthenticatorMethodX509PtrOutput) AuthorizationAttributes() BrokerAuthenticatorMethodX509AttributesMapOutput {
	return o.ApplyT(func(v *BrokerAuthenticatorMethodX509) map[string]BrokerAuthenticatorMethodX509Attributes {
		if v == nil {
			return nil
		}
		return v.AuthorizationAttributes
	}).(BrokerAuthenticatorMethodX509AttributesMapOutput)
}

// Name of the trusted client ca cert resource.
func (o BrokerAuthenticatorMethodX509PtrOutput) TrustedClientCaCert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BrokerAuthenticatorMethodX509) *string {
		if v == nil {
			return nil
		}
		return v.TrustedClientCaCert
	}).(pulumi.StringPtrOutput)
}

// BrokerAuthenticatorMethodX509Attributes properties.
type BrokerAuthenticatorMethodX509Attributes struct {
	// Attributes object.
	Attributes map[string]string `pulumi:"attributes"`
	// Subject of the X509 attribute.
	Subject string `pulumi:"subject"`
}

// BrokerAuthenticatorMethodX509AttributesInput is an input type that accepts BrokerAuthenticatorMethodX509AttributesArgs and BrokerAuthenticatorMethodX509AttributesOutput values.
// You can construct a concrete instance of `BrokerAuthenticatorMethodX509AttributesInput` via:
//
//	BrokerAuthenticatorMethodX509AttributesArgs{...}
type BrokerAuthenticatorMethodX509AttributesInput interface {
	pulumi.Input

	ToBrokerAuthenticatorMethodX509AttributesOutput() BrokerAuthenticatorMethodX509AttributesOutput
	ToBrokerAuthenticatorMethodX509AttributesOutputWithContext(context.Context) BrokerAuthenticatorMethodX509AttributesOutput
}

// BrokerAuthenticatorMethodX509Attributes properties.
type BrokerAuthenticatorMethodX509AttributesArgs struct {
	// Attributes object.
	Attributes pulumi.StringMapInput `pulumi:"attributes"`
	// Subject of the X509 attribute.
	Subject pulumi.StringInput `pulumi:"subject"`
}

func (BrokerAuthenticatorMethodX509AttributesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BrokerAuthenticatorMethodX509Attributes)(nil)).Elem()
}

func (i BrokerAuthenticatorMethodX509AttributesArgs) ToBrokerAuthenticatorMethodX509AttributesOutput() BrokerAuthenticatorMethodX509AttributesOutput {
	return i.ToBrokerAuthenticatorMethodX509AttributesOutputWithContext(context.Background())
}

func (i BrokerAuthenticatorMethodX509AttributesArgs) ToBrokerAuthenticatorMethodX509AttributesOutputWithContext(ctx context.Context) BrokerAuthenticatorMethodX509AttributesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BrokerAuthenticatorMethodX509AttributesOutput)
}

// BrokerAuthenticatorMethodX509AttributesMapInput is an input type that accepts BrokerAuthenticatorMethodX509AttributesMap and BrokerAuthenticatorMethodX509AttributesMapOutput values.
// You can construct a concrete instance of `BrokerAuthenticatorMethodX509AttributesMapInput` via:
//
//	BrokerAuthenticatorMethodX509AttributesMap{ "key": BrokerAuthenticatorMethodX509AttributesArgs{...} }
type BrokerAuthenticatorMethodX509AttributesMapInput interface {
	pulumi.Input

	ToBrokerAuthenticatorMethodX509AttributesMapOutput() BrokerAuthenticatorMethodX509AttributesMapOutput
	ToBrokerAuthenticatorMethodX509AttributesMapOutputWithContext(context.Context) BrokerAuthenticatorMethodX509AttributesMapOutput
}

type BrokerAuthenticatorMethodX509AttributesMap map[string]BrokerAuthenticatorMethodX509AttributesInput

func (BrokerAuthenticatorMethodX509AttributesMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]BrokerAuthenticatorMethodX509Attributes)(nil)).Elem()
}

func (i BrokerAuthenticatorMethodX509AttributesMap) ToBrokerAuthenticatorMethodX509AttributesMapOutput() BrokerAuthenticatorMethodX509AttributesMapOutput {
	return i.ToBrokerAuthenticatorMethodX509AttributesMapOutputWithContext(context.Background())
}

func (i BrokerAuthenticatorMethodX509AttributesMap) ToBrokerAuthenticatorMethodX509AttributesMapOutputWithContext(ctx context.Context) BrokerAuthenticatorMethodX509AttributesMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BrokerAuthenticatorMethodX509AttributesMapOutput)
}

// BrokerAuthenticatorMethodX509Attributes properties.
type BrokerAuthenticatorMethodX509AttributesOutput struct{ *pulumi.OutputState }

func (BrokerAuthenticatorMethodX509AttributesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BrokerAuthenticatorMethodX509Attributes)(nil)).Elem()
}

func (o BrokerAuthenticatorMethodX509AttributesOutput) ToBrokerAuthenticatorMethodX509AttributesOutput() BrokerAuthenticatorMethodX509AttributesOutput {
	return o
}

func (o BrokerAuthenticatorMethodX509AttributesOutput) ToBrokerAuthenticatorMethodX509AttributesOutputWithContext(ctx context.Context) BrokerAuthenticatorMethodX509AttributesOutput {
	return o
}

// Attributes object.
func (o BrokerAuthenticatorMethodX509AttributesOutput) Attributes() pulumi.StringMapOutput {
	return o.ApplyT(func(v BrokerAuthenticatorMethodX509Attributes) map[string]string { return v.Attributes }).(pulumi.StringMapOutput)
}

// Subject of the X509 attribute.
func (o BrokerAuthenticatorMethodX509AttributesOutput) Subject() pulumi.StringOutput {
	return o.ApplyT(func(v BrokerAuthenticatorMethodX509Attributes) string { return v.Subject }).(pulumi.StringOutput)
}

type BrokerAuthenticatorMethodX509AttributesMapOutput struct{ *pulumi.OutputState }

func (BrokerAuthenticatorMethodX509AttributesMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]BrokerAuthenticatorMethodX509Attributes)(nil)).Elem()
}

func (o BrokerAuthenticatorMethodX509AttributesMapOutput) ToBrokerAuthenticatorMethodX509AttributesMapOutput() BrokerAuthenticatorMethodX509AttributesMapOutput {
	return o
}

func (o BrokerAuthenticatorMethodX509AttributesMapOutput) ToBrokerAuthenticatorMethodX509AttributesMapOutputWithContext(ctx context.Context) BrokerAuthenticatorMethodX509AttributesMapOutput {
	return o
}

func (o BrokerAuthenticatorMethodX509AttributesMapOutput) MapIndex(k pulumi.StringInput) BrokerAuthenticatorMethodX509AttributesOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) BrokerAuthenticatorMethodX509Attributes {
		return vs[0].(map[string]BrokerAuthenticatorMethodX509Attributes)[vs[1].(string)]
	}).(BrokerAuthenticatorMethodX509AttributesOutput)
}

// BrokerAuthenticatorMethodX509Attributes properties.
type BrokerAuthenticatorMethodX509AttributesResponse struct {
	// Attributes object.
	Attributes map[string]string `pulumi:"attributes"`
	// Subject of the X509 attribute.
	Subject string `pulumi:"subject"`
}

// BrokerAuthenticatorMethodX509Attributes properties.
type BrokerAuthenticatorMethodX509AttributesResponseOutput struct{ *pulumi.OutputState }

func (BrokerAuthenticatorMethodX509AttributesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BrokerAuthenticatorMethodX509AttributesResponse)(nil)).Elem()
}

func (o BrokerAuthenticatorMethodX509AttributesResponseOutput) ToBrokerAuthenticatorMethodX509AttributesResponseOutput() BrokerAuthenticatorMethodX509AttributesResponseOutput {
	return o
}

func (o BrokerAuthenticatorMethodX509AttributesResponseOutput) ToBrokerAuthenticatorMethodX509AttributesResponseOutputWithContext(ctx context.Context) BrokerAuthenticatorMethodX509AttributesResponseOutput {
	return o
}

// Attributes object.
func (o BrokerAuthenticatorMethodX509AttributesResponseOutput) Attributes() pulumi.StringMapOutput {
	return o.ApplyT(func(v BrokerAuthenticatorMethodX509AttributesResponse) map[string]string { return v.Attributes }).(pulumi.StringMapOutput)
}

// Subject of the X509 attribute.
func (o BrokerAuthenticatorMethodX509AttributesResponseOutput) Subject() pulumi.StringOutput {
	return o.ApplyT(func(v BrokerAuthenticatorMethodX509AttributesResponse) string { return v.Subject }).(pulumi.StringOutput)
}

type BrokerAuthenticatorMethodX509AttributesResponseMapOutput struct{ *pulumi.OutputState }

func (BrokerAuthenticatorMethodX509AttributesResponseMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]BrokerAuthenticatorMethodX509AttributesResponse)(nil)).Elem()
}

func (o BrokerAuthenticatorMethodX509AttributesResponseMapOutput) ToBrokerAuthenticatorMethodX509AttributesResponseMapOutput() BrokerAuthenticatorMethodX509AttributesResponseMapOutput {
	return o
}

func (o BrokerAuthenticatorMethodX509AttributesResponseMapOutput) ToBrokerAuthenticatorMethodX509AttributesResponseMapOutputWithContext(ctx context.Context) BrokerAuthenticatorMethodX509AttributesResponseMapOutput {
	return o
}

func (o BrokerAuthenticatorMethodX509AttributesResponseMapOutput) MapIndex(k pulumi.StringInput) BrokerAuthenticatorMethodX509AttributesResponseOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) BrokerAuthenticatorMethodX509AttributesResponse {
		return vs[0].(map[string]BrokerAuthenticatorMethodX509AttributesResponse)[vs[1].(string)]
	}).(BrokerAuthenticatorMethodX509AttributesResponseOutput)
}

// X509 for BrokerAuthentication.
type BrokerAuthenticatorMethodX509Response struct {
	// X509 authorization attributes properties.
	AuthorizationAttributes map[string]BrokerAuthenticatorMethodX509AttributesResponse `pulumi:"authorizationAttributes"`
	// Name of the trusted client ca cert resource.
	TrustedClientCaCert *string `pulumi:"trustedClientCaCert"`
}

// Defaults sets the appropriate defaults for BrokerAuthenticatorMethodX509Response
func (val *BrokerAuthenticatorMethodX509Response) Defaults() *BrokerAuthenticatorMethodX509Response {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.TrustedClientCaCert == nil {
		trustedClientCaCert_ := "client-ca"
		tmp.TrustedClientCaCert = &trustedClientCaCert_
	}
	return &tmp
}

// X509 for BrokerAuthentication.
type BrokerAuthenticatorMethodX509ResponseOutput struct{ *pulumi.OutputState }

func (BrokerAuthenticatorMethodX509ResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BrokerAuthenticatorMethodX509Response)(nil)).Elem()
}

func (o BrokerAuthenticatorMethodX509ResponseOutput) ToBrokerAuthenticatorMethodX509ResponseOutput() BrokerAuthenticatorMethodX509ResponseOutput {
	return o
}

func (o BrokerAuthenticatorMethodX509ResponseOutput) ToBrokerAuthenticatorMethodX509ResponseOutputWithContext(ctx context.Context) BrokerAuthenticatorMethodX509ResponseOutput {
	return o
}

// X509 authorization attributes properties.
func (o BrokerAuthenticatorMethodX509ResponseOutput) AuthorizationAttributes() BrokerAuthenticatorMethodX509AttributesResponseMapOutput {
	return o.ApplyT(func(v BrokerAuthenticatorMethodX509Response) map[string]BrokerAuthenticatorMethodX509AttributesResponse {
		return v.AuthorizationAttributes
	}).(BrokerAuthenticatorMethodX509AttributesResponseMapOutput)
}

// Name of the trusted client ca cert resource.
func (o BrokerAuthenticatorMethodX509ResponseOutput) TrustedClientCaCert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BrokerAuthenticatorMethodX509Response) *string { return v.TrustedClientCaCert }).(pulumi.StringPtrOutput)
}

type BrokerAuthenticatorMethodX509ResponsePtrOutput struct{ *pulumi.OutputState }

func (BrokerAuthenticatorMethodX509ResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BrokerAuthenticatorMethodX509Response)(nil)).Elem()
}

func (o BrokerAuthenticatorMethodX509ResponsePtrOutput) ToBrokerAuthenticatorMethodX509ResponsePtrOutput() BrokerAuthenticatorMethodX509ResponsePtrOutput {
	return o
}

func (o BrokerAuthenticatorMethodX509ResponsePtrOutput) ToBrokerAuthenticatorMethodX509ResponsePtrOutputWithContext(ctx context.Context) BrokerAuthenticatorMethodX509ResponsePtrOutput {
	return o
}

func (o BrokerAuthenticatorMethodX509ResponsePtrOutput) Elem() BrokerAuthenticatorMethodX509ResponseOutput {
	return o.ApplyT(func(v *BrokerAuthenticatorMethodX509Response) BrokerAuthenticatorMethodX509Response {
		if v != nil {
			return *v
		}
		var ret BrokerAuthenticatorMethodX509Response
		return ret
	}).(BrokerAuthenticatorMethodX509ResponseOutput)
}

// X509 authorization attributes properties.
func (o BrokerAuthenticatorMethodX509ResponsePtrOutput) AuthorizationAttributes() BrokerAuthenticatorMethodX509AttributesResponseMapOutput {
	return o.ApplyT(func(v *BrokerAuthenticatorMethodX509Response) map[string]BrokerAuthenticatorMethodX509AttributesResponse {
		if v == nil {
			return nil
		}
		return v.AuthorizationAttributes
	}).(BrokerAuthenticatorMethodX509AttributesResponseMapOutput)
}

// Name of the trusted client ca cert resource.
func (o BrokerAuthenticatorMethodX509ResponsePtrOutput) TrustedClientCaCert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BrokerAuthenticatorMethodX509Response) *string {
		if v == nil {
			return nil
		}
		return v.TrustedClientCaCert
	}).(pulumi.StringPtrOutput)
}

// Set of broker authentication policies. Only one method is supported for each entry.
type BrokerAuthenticatorMethods struct {
	// Custom authentication configuration.
	CustomSettings *BrokerAuthenticatorMethodCustom `pulumi:"customSettings"`
	// Custom authentication configuration.
	Method string `pulumi:"method"`
	// ServiceAccountToken authentication configuration.
	ServiceAccountTokenSettings *BrokerAuthenticatorMethodSat `pulumi:"serviceAccountTokenSettings"`
	// X.509 authentication configuration.
	X509Settings *BrokerAuthenticatorMethodX509 `pulumi:"x509Settings"`
}

// Defaults sets the appropriate defaults for BrokerAuthenticatorMethods
func (val *BrokerAuthenticatorMethods) Defaults() *BrokerAuthenticatorMethods {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.X509Settings = tmp.X509Settings.Defaults()

	return &tmp
}

// BrokerAuthenticatorMethodsInput is an input type that accepts BrokerAuthenticatorMethodsArgs and BrokerAuthenticatorMethodsOutput values.
// You can construct a concrete instance of `BrokerAuthenticatorMethodsInput` via:
//
//	BrokerAuthenticatorMethodsArgs{...}
type BrokerAuthenticatorMethodsInput interface {
	pulumi.Input

	ToBrokerAuthenticatorMethodsOutput() BrokerAuthenticatorMethodsOutput
	ToBrokerAuthenticatorMethodsOutputWithContext(context.Context) BrokerAuthenticatorMethodsOutput
}

// Set of broker authentication policies. Only one method is supported for each entry.
type BrokerAuthenticatorMethodsArgs struct {
	// Custom authentication configuration.
	CustomSettings BrokerAuthenticatorMethodCustomPtrInput `pulumi:"customSettings"`
	// Custom authentication configuration.
	Method pulumi.StringInput `pulumi:"method"`
	// ServiceAccountToken authentication configuration.
	ServiceAccountTokenSettings BrokerAuthenticatorMethodSatPtrInput `pulumi:"serviceAccountTokenSettings"`
	// X.509 authentication configuration.
	X509Settings BrokerAuthenticatorMethodX509PtrInput `pulumi:"x509Settings"`
}

// Defaults sets the appropriate defaults for BrokerAuthenticatorMethodsArgs
func (val *BrokerAuthenticatorMethodsArgs) Defaults() *BrokerAuthenticatorMethodsArgs {
	if val == nil {
		return nil
	}
	tmp := *val

	return &tmp
}
func (BrokerAuthenticatorMethodsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BrokerAuthenticatorMethods)(nil)).Elem()
}

func (i BrokerAuthenticatorMethodsArgs) ToBrokerAuthenticatorMethodsOutput() BrokerAuthenticatorMethodsOutput {
	return i.ToBrokerAuthenticatorMethodsOutputWithContext(context.Background())
}

func (i BrokerAuthenticatorMethodsArgs) ToBrokerAuthenticatorMethodsOutputWithContext(ctx context.Context) BrokerAuthenticatorMethodsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BrokerAuthenticatorMethodsOutput)
}

// BrokerAuthenticatorMethodsArrayInput is an input type that accepts BrokerAuthenticatorMethodsArray and BrokerAuthenticatorMethodsArrayOutput values.
// You can construct a concrete instance of `BrokerAuthenticatorMethodsArrayInput` via:
//
//	BrokerAuthenticatorMethodsArray{ BrokerAuthenticatorMethodsArgs{...} }
type BrokerAuthenticatorMethodsArrayInput interface {
	pulumi.Input

	ToBrokerAuthenticatorMethodsArrayOutput() BrokerAuthenticatorMethodsArrayOutput
	ToBrokerAuthenticatorMethodsArrayOutputWithContext(context.Context) BrokerAuthenticatorMethodsArrayOutput
}

type BrokerAuthenticatorMethodsArray []BrokerAuthenticatorMethodsInput

func (BrokerAuthenticatorMethodsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BrokerAuthenticatorMethods)(nil)).Elem()
}

func (i BrokerAuthenticatorMethodsArray) ToBrokerAuthenticatorMethodsArrayOutput() BrokerAuthenticatorMethodsArrayOutput {
	return i.ToBrokerAuthenticatorMethodsArrayOutputWithContext(context.Background())
}

func (i BrokerAuthenticatorMethodsArray) ToBrokerAuthenticatorMethodsArrayOutputWithContext(ctx context.Context) BrokerAuthenticatorMethodsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BrokerAuthenticatorMethodsArrayOutput)
}

// Set of broker authentication policies. Only one method is supported for each entry.
type BrokerAuthenticatorMethodsOutput struct{ *pulumi.OutputState }

func (BrokerAuthenticatorMethodsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BrokerAuthenticatorMethods)(nil)).Elem()
}

func (o BrokerAuthenticatorMethodsOutput) ToBrokerAuthenticatorMethodsOutput() BrokerAuthenticatorMethodsOutput {
	return o
}

func (o BrokerAuthenticatorMethodsOutput) ToBrokerAuthenticatorMethodsOutputWithContext(ctx context.Context) BrokerAuthenticatorMethodsOutput {
	return o
}

// Custom authentication configuration.
func (o BrokerAuthenticatorMethodsOutput) CustomSettings() BrokerAuthenticatorMethodCustomPtrOutput {
	return o.ApplyT(func(v BrokerAuthenticatorMethods) *BrokerAuthenticatorMethodCustom { return v.CustomSettings }).(BrokerAuthenticatorMethodCustomPtrOutput)
}

// Custom authentication configuration.
func (o BrokerAuthenticatorMethodsOutput) Method() pulumi.StringOutput {
	return o.ApplyT(func(v BrokerAuthenticatorMethods) string { return v.Method }).(pulumi.StringOutput)
}

// ServiceAccountToken authentication configuration.
func (o BrokerAuthenticatorMethodsOutput) ServiceAccountTokenSettings() BrokerAuthenticatorMethodSatPtrOutput {
	return o.ApplyT(func(v BrokerAuthenticatorMethods) *BrokerAuthenticatorMethodSat { return v.ServiceAccountTokenSettings }).(BrokerAuthenticatorMethodSatPtrOutput)
}

// X.509 authentication configuration.
func (o BrokerAuthenticatorMethodsOutput) X509Settings() BrokerAuthenticatorMethodX509PtrOutput {
	return o.ApplyT(func(v BrokerAuthenticatorMethods) *BrokerAuthenticatorMethodX509 { return v.X509Settings }).(BrokerAuthenticatorMethodX509PtrOutput)
}

type BrokerAuthenticatorMethodsArrayOutput struct{ *pulumi.OutputState }

func (BrokerAuthenticatorMethodsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BrokerAuthenticatorMethods)(nil)).Elem()
}

func (o BrokerAuthenticatorMethodsArrayOutput) ToBrokerAuthenticatorMethodsArrayOutput() BrokerAuthenticatorMethodsArrayOutput {
	return o
}

func (o BrokerAuthenticatorMethodsArrayOutput) ToBrokerAuthenticatorMethodsArrayOutputWithContext(ctx context.Context) BrokerAuthenticatorMethodsArrayOutput {
	return o
}

func (o BrokerAuthenticatorMethodsArrayOutput) Index(i pulumi.IntInput) BrokerAuthenticatorMethodsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BrokerAuthenticatorMethods {
		return vs[0].([]BrokerAuthenticatorMethods)[vs[1].(int)]
	}).(BrokerAuthenticatorMethodsOutput)
}

// Set of broker authentication policies. Only one method is supported for each entry.
type BrokerAuthenticatorMethodsResponse struct {
	// Custom authentication configuration.
	CustomSettings *BrokerAuthenticatorMethodCustomResponse `pulumi:"customSettings"`
	// Custom authentication configuration.
	Method string `pulumi:"method"`
	// ServiceAccountToken authentication configuration.
	ServiceAccountTokenSettings *BrokerAuthenticatorMethodSatResponse `pulumi:"serviceAccountTokenSettings"`
	// X.509 authentication configuration.
	X509Settings *BrokerAuthenticatorMethodX509Response `pulumi:"x509Settings"`
}

// Defaults sets the appropriate defaults for BrokerAuthenticatorMethodsResponse
func (val *BrokerAuthenticatorMethodsResponse) Defaults() *BrokerAuthenticatorMethodsResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.X509Settings = tmp.X509Settings.Defaults()

	return &tmp
}

// Set of broker authentication policies. Only one method is supported for each entry.
type BrokerAuthenticatorMethodsResponseOutput struct{ *pulumi.OutputState }

func (BrokerAuthenticatorMethodsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BrokerAuthenticatorMethodsResponse)(nil)).Elem()
}

func (o BrokerAuthenticatorMethodsResponseOutput) ToBrokerAuthenticatorMethodsResponseOutput() BrokerAuthenticatorMethodsResponseOutput {
	return o
}

func (o BrokerAuthenticatorMethodsResponseOutput) ToBrokerAuthenticatorMethodsResponseOutputWithContext(ctx context.Context) BrokerAuthenticatorMethodsResponseOutput {
	return o
}

// Custom authentication configuration.
func (o BrokerAuthenticatorMethodsResponseOutput) CustomSettings() BrokerAuthenticatorMethodCustomResponsePtrOutput {
	return o.ApplyT(func(v BrokerAuthenticatorMethodsResponse) *BrokerAuthenticatorMethodCustomResponse {
		return v.CustomSettings
	}).(BrokerAuthenticatorMethodCustomResponsePtrOutput)
}

// Custom authentication configuration.
func (o BrokerAuthenticatorMethodsResponseOutput) Method() pulumi.StringOutput {
	return o.ApplyT(func(v BrokerAuthenticatorMethodsResponse) string { return v.Method }).(pulumi.StringOutput)
}

// ServiceAccountToken authentication configuration.
func (o BrokerAuthenticatorMethodsResponseOutput) ServiceAccountTokenSettings() BrokerAuthenticatorMethodSatResponsePtrOutput {
	return o.ApplyT(func(v BrokerAuthenticatorMethodsResponse) *BrokerAuthenticatorMethodSatResponse {
		return v.ServiceAccountTokenSettings
	}).(BrokerAuthenticatorMethodSatResponsePtrOutput)
}

// X.509 authentication configuration.
func (o BrokerAuthenticatorMethodsResponseOutput) X509Settings() BrokerAuthenticatorMethodX509ResponsePtrOutput {
	return o.ApplyT(func(v BrokerAuthenticatorMethodsResponse) *BrokerAuthenticatorMethodX509Response {
		return v.X509Settings
	}).(BrokerAuthenticatorMethodX509ResponsePtrOutput)
}

type BrokerAuthenticatorMethodsResponseArrayOutput struct{ *pulumi.OutputState }

func (BrokerAuthenticatorMethodsResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BrokerAuthenticatorMethodsResponse)(nil)).Elem()
}

func (o BrokerAuthenticatorMethodsResponseArrayOutput) ToBrokerAuthenticatorMethodsResponseArrayOutput() BrokerAuthenticatorMethodsResponseArrayOutput {
	return o
}

func (o BrokerAuthenticatorMethodsResponseArrayOutput) ToBrokerAuthenticatorMethodsResponseArrayOutputWithContext(ctx context.Context) BrokerAuthenticatorMethodsResponseArrayOutput {
	return o
}

func (o BrokerAuthenticatorMethodsResponseArrayOutput) Index(i pulumi.IntInput) BrokerAuthenticatorMethodsResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BrokerAuthenticatorMethodsResponse {
		return vs[0].([]BrokerAuthenticatorMethodsResponse)[vs[1].(int)]
	}).(BrokerAuthenticatorMethodsResponseOutput)
}

// BrokerAuthorization Resource properties
type BrokerAuthorizationProperties struct {
	// The list of authorization policies supported by the Authorization Resource.
	AuthorizationPolicies AuthorizationConfig `pulumi:"authorizationPolicies"`
}

// Defaults sets the appropriate defaults for BrokerAuthorizationProperties
func (val *BrokerAuthorizationProperties) Defaults() *BrokerAuthorizationProperties {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.AuthorizationPolicies = *tmp.AuthorizationPolicies.Defaults()

	return &tmp
}

// BrokerAuthorizationPropertiesInput is an input type that accepts BrokerAuthorizationPropertiesArgs and BrokerAuthorizationPropertiesOutput values.
// You can construct a concrete instance of `BrokerAuthorizationPropertiesInput` via:
//
//	BrokerAuthorizationPropertiesArgs{...}
type BrokerAuthorizationPropertiesInput interface {
	pulumi.Input

	ToBrokerAuthorizationPropertiesOutput() BrokerAuthorizationPropertiesOutput
	ToBrokerAuthorizationPropertiesOutputWithContext(context.Context) BrokerAuthorizationPropertiesOutput
}

// BrokerAuthorization Resource properties
type BrokerAuthorizationPropertiesArgs struct {
	// The list of authorization policies supported by the Authorization Resource.
	AuthorizationPolicies AuthorizationConfigInput `pulumi:"authorizationPolicies"`
}

// Defaults sets the appropriate defaults for BrokerAuthorizationPropertiesArgs
func (val *BrokerAuthorizationPropertiesArgs) Defaults() *BrokerAuthorizationPropertiesArgs {
	if val == nil {
		return nil
	}
	tmp := *val

	return &tmp
}
func (BrokerAuthorizationPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BrokerAuthorizationProperties)(nil)).Elem()
}

func (i BrokerAuthorizationPropertiesArgs) ToBrokerAuthorizationPropertiesOutput() BrokerAuthorizationPropertiesOutput {
	return i.ToBrokerAuthorizationPropertiesOutputWithContext(context.Background())
}

func (i BrokerAuthorizationPropertiesArgs) ToBrokerAuthorizationPropertiesOutputWithContext(ctx context.Context) BrokerAuthorizationPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BrokerAuthorizationPropertiesOutput)
}

func (i BrokerAuthorizationPropertiesArgs) ToBrokerAuthorizationPropertiesPtrOutput() BrokerAuthorizationPropertiesPtrOutput {
	return i.ToBrokerAuthorizationPropertiesPtrOutputWithContext(context.Background())
}

func (i BrokerAuthorizationPropertiesArgs) ToBrokerAuthorizationPropertiesPtrOutputWithContext(ctx context.Context) BrokerAuthorizationPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BrokerAuthorizationPropertiesOutput).ToBrokerAuthorizationPropertiesPtrOutputWithContext(ctx)
}

// BrokerAuthorizationPropertiesPtrInput is an input type that accepts BrokerAuthorizationPropertiesArgs, BrokerAuthorizationPropertiesPtr and BrokerAuthorizationPropertiesPtrOutput values.
// You can construct a concrete instance of `BrokerAuthorizationPropertiesPtrInput` via:
//
//	        BrokerAuthorizationPropertiesArgs{...}
//
//	or:
//
//	        nil
type BrokerAuthorizationPropertiesPtrInput interface {
	pulumi.Input

	ToBrokerAuthorizationPropertiesPtrOutput() BrokerAuthorizationPropertiesPtrOutput
	ToBrokerAuthorizationPropertiesPtrOutputWithContext(context.Context) BrokerAuthorizationPropertiesPtrOutput
}

type brokerAuthorizationPropertiesPtrType BrokerAuthorizationPropertiesArgs

func BrokerAuthorizationPropertiesPtr(v *BrokerAuthorizationPropertiesArgs) BrokerAuthorizationPropertiesPtrInput {
	return (*brokerAuthorizationPropertiesPtrType)(v)
}

func (*brokerAuthorizationPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BrokerAuthorizationProperties)(nil)).Elem()
}

func (i *brokerAuthorizationPropertiesPtrType) ToBrokerAuthorizationPropertiesPtrOutput() BrokerAuthorizationPropertiesPtrOutput {
	return i.ToBrokerAuthorizationPropertiesPtrOutputWithContext(context.Background())
}

func (i *brokerAuthorizationPropertiesPtrType) ToBrokerAuthorizationPropertiesPtrOutputWithContext(ctx context.Context) BrokerAuthorizationPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BrokerAuthorizationPropertiesPtrOutput)
}

// BrokerAuthorization Resource properties
type BrokerAuthorizationPropertiesOutput struct{ *pulumi.OutputState }

func (BrokerAuthorizationPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BrokerAuthorizationProperties)(nil)).Elem()
}

func (o BrokerAuthorizationPropertiesOutput) ToBrokerAuthorizationPropertiesOutput() BrokerAuthorizationPropertiesOutput {
	return o
}

func (o BrokerAuthorizationPropertiesOutput) ToBrokerAuthorizationPropertiesOutputWithContext(ctx context.Context) BrokerAuthorizationPropertiesOutput {
	return o
}

func (o BrokerAuthorizationPropertiesOutput) ToBrokerAuthorizationPropertiesPtrOutput() BrokerAuthorizationPropertiesPtrOutput {
	return o.ToBrokerAuthorizationPropertiesPtrOutputWithContext(context.Background())
}

func (o BrokerAuthorizationPropertiesOutput) ToBrokerAuthorizationPropertiesPtrOutputWithContext(ctx context.Context) BrokerAuthorizationPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BrokerAuthorizationProperties) *BrokerAuthorizationProperties {
		return &v
	}).(BrokerAuthorizationPropertiesPtrOutput)
}

// The list of authorization policies supported by the Authorization Resource.
func (o BrokerAuthorizationPropertiesOutput) AuthorizationPolicies() AuthorizationConfigOutput {
	return o.ApplyT(func(v BrokerAuthorizationProperties) AuthorizationConfig { return v.AuthorizationPolicies }).(AuthorizationConfigOutput)
}

type BrokerAuthorizationPropertiesPtrOutput struct{ *pulumi.OutputState }

func (BrokerAuthorizationPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BrokerAuthorizationProperties)(nil)).Elem()
}

func (o BrokerAuthorizationPropertiesPtrOutput) ToBrokerAuthorizationPropertiesPtrOutput() BrokerAuthorizationPropertiesPtrOutput {
	return o
}

func (o BrokerAuthorizationPropertiesPtrOutput) ToBrokerAuthorizationPropertiesPtrOutputWithContext(ctx context.Context) BrokerAuthorizationPropertiesPtrOutput {
	return o
}

func (o BrokerAuthorizationPropertiesPtrOutput) Elem() BrokerAuthorizationPropertiesOutput {
	return o.ApplyT(func(v *BrokerAuthorizationProperties) BrokerAuthorizationProperties {
		if v != nil {
			return *v
		}
		var ret BrokerAuthorizationProperties
		return ret
	}).(BrokerAuthorizationPropertiesOutput)
}

// The list of authorization policies supported by the Authorization Resource.
func (o BrokerAuthorizationPropertiesPtrOutput) AuthorizationPolicies() AuthorizationConfigPtrOutput {
	return o.ApplyT(func(v *BrokerAuthorizationProperties) *AuthorizationConfig {
		if v == nil {
			return nil
		}
		return &v.AuthorizationPolicies
	}).(AuthorizationConfigPtrOutput)
}

// BrokerAuthorization Resource properties
type BrokerAuthorizationPropertiesResponse struct {
	// The list of authorization policies supported by the Authorization Resource.
	AuthorizationPolicies AuthorizationConfigResponse `pulumi:"authorizationPolicies"`
	// The status of the last operation.
	ProvisioningState string `pulumi:"provisioningState"`
}

// Defaults sets the appropriate defaults for BrokerAuthorizationPropertiesResponse
func (val *BrokerAuthorizationPropertiesResponse) Defaults() *BrokerAuthorizationPropertiesResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.AuthorizationPolicies = *tmp.AuthorizationPolicies.Defaults()

	return &tmp
}

// BrokerAuthorization Resource properties
type BrokerAuthorizationPropertiesResponseOutput struct{ *pulumi.OutputState }

func (BrokerAuthorizationPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BrokerAuthorizationPropertiesResponse)(nil)).Elem()
}

func (o BrokerAuthorizationPropertiesResponseOutput) ToBrokerAuthorizationPropertiesResponseOutput() BrokerAuthorizationPropertiesResponseOutput {
	return o
}

func (o BrokerAuthorizationPropertiesResponseOutput) ToBrokerAuthorizationPropertiesResponseOutputWithContext(ctx context.Context) BrokerAuthorizationPropertiesResponseOutput {
	return o
}

// The list of authorization policies supported by the Authorization Resource.
func (o BrokerAuthorizationPropertiesResponseOutput) AuthorizationPolicies() AuthorizationConfigResponseOutput {
	return o.ApplyT(func(v BrokerAuthorizationPropertiesResponse) AuthorizationConfigResponse {
		return v.AuthorizationPolicies
	}).(AuthorizationConfigResponseOutput)
}

// The status of the last operation.
func (o BrokerAuthorizationPropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v BrokerAuthorizationPropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Broker Diagnostic Setting properties
type BrokerDiagnostics struct {
	// Diagnostic log settings for the resource.
	Logs *DiagnosticsLogs `pulumi:"logs"`
	// The metrics settings for the resource.
	Metrics *Metrics `pulumi:"metrics"`
	// The self check properties.
	SelfCheck *SelfCheck `pulumi:"selfCheck"`
	// The trace properties.
	Traces *Traces `pulumi:"traces"`
}

// Defaults sets the appropriate defaults for BrokerDiagnostics
func (val *BrokerDiagnostics) Defaults() *BrokerDiagnostics {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.Logs = tmp.Logs.Defaults()

	tmp.Metrics = tmp.Metrics.Defaults()

	tmp.SelfCheck = tmp.SelfCheck.Defaults()

	tmp.Traces = tmp.Traces.Defaults()

	return &tmp
}

// BrokerDiagnosticsInput is an input type that accepts BrokerDiagnosticsArgs and BrokerDiagnosticsOutput values.
// You can construct a concrete instance of `BrokerDiagnosticsInput` via:
//
//	BrokerDiagnosticsArgs{...}
type BrokerDiagnosticsInput interface {
	pulumi.Input

	ToBrokerDiagnosticsOutput() BrokerDiagnosticsOutput
	ToBrokerDiagnosticsOutputWithContext(context.Context) BrokerDiagnosticsOutput
}

// Broker Diagnostic Setting properties
type BrokerDiagnosticsArgs struct {
	// Diagnostic log settings for the resource.
	Logs DiagnosticsLogsPtrInput `pulumi:"logs"`
	// The metrics settings for the resource.
	Metrics MetricsPtrInput `pulumi:"metrics"`
	// The self check properties.
	SelfCheck SelfCheckPtrInput `pulumi:"selfCheck"`
	// The trace properties.
	Traces TracesPtrInput `pulumi:"traces"`
}

// Defaults sets the appropriate defaults for BrokerDiagnosticsArgs
func (val *BrokerDiagnosticsArgs) Defaults() *BrokerDiagnosticsArgs {
	if val == nil {
		return nil
	}
	tmp := *val

	return &tmp
}
func (BrokerDiagnosticsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BrokerDiagnostics)(nil)).Elem()
}

func (i BrokerDiagnosticsArgs) ToBrokerDiagnosticsOutput() BrokerDiagnosticsOutput {
	return i.ToBrokerDiagnosticsOutputWithContext(context.Background())
}

func (i BrokerDiagnosticsArgs) ToBrokerDiagnosticsOutputWithContext(ctx context.Context) BrokerDiagnosticsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BrokerDiagnosticsOutput)
}

func (i BrokerDiagnosticsArgs) ToBrokerDiagnosticsPtrOutput() BrokerDiagnosticsPtrOutput {
	return i.ToBrokerDiagnosticsPtrOutputWithContext(context.Background())
}

func (i BrokerDiagnosticsArgs) ToBrokerDiagnosticsPtrOutputWithContext(ctx context.Context) BrokerDiagnosticsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BrokerDiagnosticsOutput).ToBrokerDiagnosticsPtrOutputWithContext(ctx)
}

// BrokerDiagnosticsPtrInput is an input type that accepts BrokerDiagnosticsArgs, BrokerDiagnosticsPtr and BrokerDiagnosticsPtrOutput values.
// You can construct a concrete instance of `BrokerDiagnosticsPtrInput` via:
//
//	        BrokerDiagnosticsArgs{...}
//
//	or:
//
//	        nil
type BrokerDiagnosticsPtrInput interface {
	pulumi.Input

	ToBrokerDiagnosticsPtrOutput() BrokerDiagnosticsPtrOutput
	ToBrokerDiagnosticsPtrOutputWithContext(context.Context) BrokerDiagnosticsPtrOutput
}

type brokerDiagnosticsPtrType BrokerDiagnosticsArgs

func BrokerDiagnosticsPtr(v *BrokerDiagnosticsArgs) BrokerDiagnosticsPtrInput {
	return (*brokerDiagnosticsPtrType)(v)
}

func (*brokerDiagnosticsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BrokerDiagnostics)(nil)).Elem()
}

func (i *brokerDiagnosticsPtrType) ToBrokerDiagnosticsPtrOutput() BrokerDiagnosticsPtrOutput {
	return i.ToBrokerDiagnosticsPtrOutputWithContext(context.Background())
}

func (i *brokerDiagnosticsPtrType) ToBrokerDiagnosticsPtrOutputWithContext(ctx context.Context) BrokerDiagnosticsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BrokerDiagnosticsPtrOutput)
}

// Broker Diagnostic Setting properties
type BrokerDiagnosticsOutput struct{ *pulumi.OutputState }

func (BrokerDiagnosticsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BrokerDiagnostics)(nil)).Elem()
}

func (o BrokerDiagnosticsOutput) ToBrokerDiagnosticsOutput() BrokerDiagnosticsOutput {
	return o
}

func (o BrokerDiagnosticsOutput) ToBrokerDiagnosticsOutputWithContext(ctx context.Context) BrokerDiagnosticsOutput {
	return o
}

func (o BrokerDiagnosticsOutput) ToBrokerDiagnosticsPtrOutput() BrokerDiagnosticsPtrOutput {
	return o.ToBrokerDiagnosticsPtrOutputWithContext(context.Background())
}

func (o BrokerDiagnosticsOutput) ToBrokerDiagnosticsPtrOutputWithContext(ctx context.Context) BrokerDiagnosticsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BrokerDiagnostics) *BrokerDiagnostics {
		return &v
	}).(BrokerDiagnosticsPtrOutput)
}

// Diagnostic log settings for the resource.
func (o BrokerDiagnosticsOutput) Logs() DiagnosticsLogsPtrOutput {
	return o.ApplyT(func(v BrokerDiagnostics) *DiagnosticsLogs { return v.Logs }).(DiagnosticsLogsPtrOutput)
}

// The metrics settings for the resource.
func (o BrokerDiagnosticsOutput) Metrics() MetricsPtrOutput {
	return o.ApplyT(func(v BrokerDiagnostics) *Metrics { return v.Metrics }).(MetricsPtrOutput)
}

// The self check properties.
func (o BrokerDiagnosticsOutput) SelfCheck() SelfCheckPtrOutput {
	return o.ApplyT(func(v BrokerDiagnostics) *SelfCheck { return v.SelfCheck }).(SelfCheckPtrOutput)
}

// The trace properties.
func (o BrokerDiagnosticsOutput) Traces() TracesPtrOutput {
	return o.ApplyT(func(v BrokerDiagnostics) *Traces { return v.Traces }).(TracesPtrOutput)
}

type BrokerDiagnosticsPtrOutput struct{ *pulumi.OutputState }

func (BrokerDiagnosticsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BrokerDiagnostics)(nil)).Elem()
}

func (o BrokerDiagnosticsPtrOutput) ToBrokerDiagnosticsPtrOutput() BrokerDiagnosticsPtrOutput {
	return o
}

func (o BrokerDiagnosticsPtrOutput) ToBrokerDiagnosticsPtrOutputWithContext(ctx context.Context) BrokerDiagnosticsPtrOutput {
	return o
}

func (o BrokerDiagnosticsPtrOutput) Elem() BrokerDiagnosticsOutput {
	return o.ApplyT(func(v *BrokerDiagnostics) BrokerDiagnostics {
		if v != nil {
			return *v
		}
		var ret BrokerDiagnostics
		return ret
	}).(BrokerDiagnosticsOutput)
}

// Diagnostic log settings for the resource.
func (o BrokerDiagnosticsPtrOutput) Logs() DiagnosticsLogsPtrOutput {
	return o.ApplyT(func(v *BrokerDiagnostics) *DiagnosticsLogs {
		if v == nil {
			return nil
		}
		return v.Logs
	}).(DiagnosticsLogsPtrOutput)
}

// The metrics settings for the resource.
func (o BrokerDiagnosticsPtrOutput) Metrics() MetricsPtrOutput {
	return o.ApplyT(func(v *BrokerDiagnostics) *Metrics {
		if v == nil {
			return nil
		}
		return v.Metrics
	}).(MetricsPtrOutput)
}

// The self check properties.
func (o BrokerDiagnosticsPtrOutput) SelfCheck() SelfCheckPtrOutput {
	return o.ApplyT(func(v *BrokerDiagnostics) *SelfCheck {
		if v == nil {
			return nil
		}
		return v.SelfCheck
	}).(SelfCheckPtrOutput)
}

// The trace properties.
func (o BrokerDiagnosticsPtrOutput) Traces() TracesPtrOutput {
	return o.ApplyT(func(v *BrokerDiagnostics) *Traces {
		if v == nil {
			return nil
		}
		return v.Traces
	}).(TracesPtrOutput)
}

// Broker Diagnostic Setting properties
type BrokerDiagnosticsResponse struct {
	// Diagnostic log settings for the resource.
	Logs *DiagnosticsLogsResponse `pulumi:"logs"`
	// The metrics settings for the resource.
	Metrics *MetricsResponse `pulumi:"metrics"`
	// The self check properties.
	SelfCheck *SelfCheckResponse `pulumi:"selfCheck"`
	// The trace properties.
	Traces *TracesResponse `pulumi:"traces"`
}

// Defaults sets the appropriate defaults for BrokerDiagnosticsResponse
func (val *BrokerDiagnosticsResponse) Defaults() *BrokerDiagnosticsResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.Logs = tmp.Logs.Defaults()

	tmp.Metrics = tmp.Metrics.Defaults()

	tmp.SelfCheck = tmp.SelfCheck.Defaults()

	tmp.Traces = tmp.Traces.Defaults()

	return &tmp
}

// Broker Diagnostic Setting properties
type BrokerDiagnosticsResponseOutput struct{ *pulumi.OutputState }

func (BrokerDiagnosticsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BrokerDiagnosticsResponse)(nil)).Elem()
}

func (o BrokerDiagnosticsResponseOutput) ToBrokerDiagnosticsResponseOutput() BrokerDiagnosticsResponseOutput {
	return o
}

func (o BrokerDiagnosticsResponseOutput) ToBrokerDiagnosticsResponseOutputWithContext(ctx context.Context) BrokerDiagnosticsResponseOutput {
	return o
}

// Diagnostic log settings for the resource.
func (o BrokerDiagnosticsResponseOutput) Logs() DiagnosticsLogsResponsePtrOutput {
	return o.ApplyT(func(v BrokerDiagnosticsResponse) *DiagnosticsLogsResponse { return v.Logs }).(DiagnosticsLogsResponsePtrOutput)
}

// The metrics settings for the resource.
func (o BrokerDiagnosticsResponseOutput) Metrics() MetricsResponsePtrOutput {
	return o.ApplyT(func(v BrokerDiagnosticsResponse) *MetricsResponse { return v.Metrics }).(MetricsResponsePtrOutput)
}

// The self check properties.
func (o BrokerDiagnosticsResponseOutput) SelfCheck() SelfCheckResponsePtrOutput {
	return o.ApplyT(func(v BrokerDiagnosticsResponse) *SelfCheckResponse { return v.SelfCheck }).(SelfCheckResponsePtrOutput)
}

// The trace properties.
func (o BrokerDiagnosticsResponseOutput) Traces() TracesResponsePtrOutput {
	return o.ApplyT(func(v BrokerDiagnosticsResponse) *TracesResponse { return v.Traces }).(TracesResponsePtrOutput)
}

type BrokerDiagnosticsResponsePtrOutput struct{ *pulumi.OutputState }

func (BrokerDiagnosticsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BrokerDiagnosticsResponse)(nil)).Elem()
}

func (o BrokerDiagnosticsResponsePtrOutput) ToBrokerDiagnosticsResponsePtrOutput() BrokerDiagnosticsResponsePtrOutput {
	return o
}

func (o BrokerDiagnosticsResponsePtrOutput) ToBrokerDiagnosticsResponsePtrOutputWithContext(ctx context.Context) BrokerDiagnosticsResponsePtrOutput {
	return o
}

func (o BrokerDiagnosticsResponsePtrOutput) Elem() BrokerDiagnosticsResponseOutput {
	return o.ApplyT(func(v *BrokerDiagnosticsResponse) BrokerDiagnosticsResponse {
		if v != nil {
			return *v
		}
		var ret BrokerDiagnosticsResponse
		return ret
	}).(BrokerDiagnosticsResponseOutput)
}

// Diagnostic log settings for the resource.
func (o BrokerDiagnosticsResponsePtrOutput) Logs() DiagnosticsLogsResponsePtrOutput {
	return o.ApplyT(func(v *BrokerDiagnosticsResponse) *DiagnosticsLogsResponse {
		if v == nil {
			return nil
		}
		return v.Logs
	}).(DiagnosticsLogsResponsePtrOutput)
}

// The metrics settings for the resource.
func (o BrokerDiagnosticsResponsePtrOutput) Metrics() MetricsResponsePtrOutput {
	return o.ApplyT(func(v *BrokerDiagnosticsResponse) *MetricsResponse {
		if v == nil {
			return nil
		}
		return v.Metrics
	}).(MetricsResponsePtrOutput)
}

// The self check properties.
func (o BrokerDiagnosticsResponsePtrOutput) SelfCheck() SelfCheckResponsePtrOutput {
	return o.ApplyT(func(v *BrokerDiagnosticsResponse) *SelfCheckResponse {
		if v == nil {
			return nil
		}
		return v.SelfCheck
	}).(SelfCheckResponsePtrOutput)
}

// The trace properties.
func (o BrokerDiagnosticsResponsePtrOutput) Traces() TracesResponsePtrOutput {
	return o.ApplyT(func(v *BrokerDiagnosticsResponse) *TracesResponse {
		if v == nil {
			return nil
		}
		return v.Traces
	}).(TracesResponsePtrOutput)
}

// Defines a Broker listener. A listener is a collection of ports on which the broker accepts connections from clients.
type BrokerListenerProperties struct {
	// Ports on which this listener accepts client connections.
	Ports []ListenerPort `pulumi:"ports"`
	// Kubernetes Service name of this listener.
	ServiceName *string `pulumi:"serviceName"`
	// Kubernetes Service type of this listener.
	ServiceType *string `pulumi:"serviceType"`
}

// Defaults sets the appropriate defaults for BrokerListenerProperties
func (val *BrokerListenerProperties) Defaults() *BrokerListenerProperties {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.ServiceType == nil {
		serviceType_ := "ClusterIp"
		tmp.ServiceType = &serviceType_
	}
	return &tmp
}

// BrokerListenerPropertiesInput is an input type that accepts BrokerListenerPropertiesArgs and BrokerListenerPropertiesOutput values.
// You can construct a concrete instance of `BrokerListenerPropertiesInput` via:
//
//	BrokerListenerPropertiesArgs{...}
type BrokerListenerPropertiesInput interface {
	pulumi.Input

	ToBrokerListenerPropertiesOutput() BrokerListenerPropertiesOutput
	ToBrokerListenerPropertiesOutputWithContext(context.Context) BrokerListenerPropertiesOutput
}

// Defines a Broker listener. A listener is a collection of ports on which the broker accepts connections from clients.
type BrokerListenerPropertiesArgs struct {
	// Ports on which this listener accepts client connections.
	Ports ListenerPortArrayInput `pulumi:"ports"`
	// Kubernetes Service name of this listener.
	ServiceName pulumi.StringPtrInput `pulumi:"serviceName"`
	// Kubernetes Service type of this listener.
	ServiceType pulumi.StringPtrInput `pulumi:"serviceType"`
}

// Defaults sets the appropriate defaults for BrokerListenerPropertiesArgs
func (val *BrokerListenerPropertiesArgs) Defaults() *BrokerListenerPropertiesArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.ServiceType == nil {
		tmp.ServiceType = pulumi.StringPtr("ClusterIp")
	}
	return &tmp
}
func (BrokerListenerPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BrokerListenerProperties)(nil)).Elem()
}

func (i BrokerListenerPropertiesArgs) ToBrokerListenerPropertiesOutput() BrokerListenerPropertiesOutput {
	return i.ToBrokerListenerPropertiesOutputWithContext(context.Background())
}

func (i BrokerListenerPropertiesArgs) ToBrokerListenerPropertiesOutputWithContext(ctx context.Context) BrokerListenerPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BrokerListenerPropertiesOutput)
}

func (i BrokerListenerPropertiesArgs) ToBrokerListenerPropertiesPtrOutput() BrokerListenerPropertiesPtrOutput {
	return i.ToBrokerListenerPropertiesPtrOutputWithContext(context.Background())
}

func (i BrokerListenerPropertiesArgs) ToBrokerListenerPropertiesPtrOutputWithContext(ctx context.Context) BrokerListenerPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BrokerListenerPropertiesOutput).ToBrokerListenerPropertiesPtrOutputWithContext(ctx)
}

// BrokerListenerPropertiesPtrInput is an input type that accepts BrokerListenerPropertiesArgs, BrokerListenerPropertiesPtr and BrokerListenerPropertiesPtrOutput values.
// You can construct a concrete instance of `BrokerListenerPropertiesPtrInput` via:
//
//	        BrokerListenerPropertiesArgs{...}
//
//	or:
//
//	        nil
type BrokerListenerPropertiesPtrInput interface {
	pulumi.Input

	ToBrokerListenerPropertiesPtrOutput() BrokerListenerPropertiesPtrOutput
	ToBrokerListenerPropertiesPtrOutputWithContext(context.Context) BrokerListenerPropertiesPtrOutput
}

type brokerListenerPropertiesPtrType BrokerListenerPropertiesArgs

func BrokerListenerPropertiesPtr(v *BrokerListenerPropertiesArgs) BrokerListenerPropertiesPtrInput {
	return (*brokerListenerPropertiesPtrType)(v)
}

func (*brokerListenerPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BrokerListenerProperties)(nil)).Elem()
}

func (i *brokerListenerPropertiesPtrType) ToBrokerListenerPropertiesPtrOutput() BrokerListenerPropertiesPtrOutput {
	return i.ToBrokerListenerPropertiesPtrOutputWithContext(context.Background())
}

func (i *brokerListenerPropertiesPtrType) ToBrokerListenerPropertiesPtrOutputWithContext(ctx context.Context) BrokerListenerPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BrokerListenerPropertiesPtrOutput)
}

// Defines a Broker listener. A listener is a collection of ports on which the broker accepts connections from clients.
type BrokerListenerPropertiesOutput struct{ *pulumi.OutputState }

func (BrokerListenerPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BrokerListenerProperties)(nil)).Elem()
}

func (o BrokerListenerPropertiesOutput) ToBrokerListenerPropertiesOutput() BrokerListenerPropertiesOutput {
	return o
}

func (o BrokerListenerPropertiesOutput) ToBrokerListenerPropertiesOutputWithContext(ctx context.Context) BrokerListenerPropertiesOutput {
	return o
}

func (o BrokerListenerPropertiesOutput) ToBrokerListenerPropertiesPtrOutput() BrokerListenerPropertiesPtrOutput {
	return o.ToBrokerListenerPropertiesPtrOutputWithContext(context.Background())
}

func (o BrokerListenerPropertiesOutput) ToBrokerListenerPropertiesPtrOutputWithContext(ctx context.Context) BrokerListenerPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BrokerListenerProperties) *BrokerListenerProperties {
		return &v
	}).(BrokerListenerPropertiesPtrOutput)
}

// Ports on which this listener accepts client connections.
func (o BrokerListenerPropertiesOutput) Ports() ListenerPortArrayOutput {
	return o.ApplyT(func(v BrokerListenerProperties) []ListenerPort { return v.Ports }).(ListenerPortArrayOutput)
}

// Kubernetes Service name of this listener.
func (o BrokerListenerPropertiesOutput) ServiceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BrokerListenerProperties) *string { return v.ServiceName }).(pulumi.StringPtrOutput)
}

// Kubernetes Service type of this listener.
func (o BrokerListenerPropertiesOutput) ServiceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BrokerListenerProperties) *string { return v.ServiceType }).(pulumi.StringPtrOutput)
}

type BrokerListenerPropertiesPtrOutput struct{ *pulumi.OutputState }

func (BrokerListenerPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BrokerListenerProperties)(nil)).Elem()
}

func (o BrokerListenerPropertiesPtrOutput) ToBrokerListenerPropertiesPtrOutput() BrokerListenerPropertiesPtrOutput {
	return o
}

func (o BrokerListenerPropertiesPtrOutput) ToBrokerListenerPropertiesPtrOutputWithContext(ctx context.Context) BrokerListenerPropertiesPtrOutput {
	return o
}

func (o BrokerListenerPropertiesPtrOutput) Elem() BrokerListenerPropertiesOutput {
	return o.ApplyT(func(v *BrokerListenerProperties) BrokerListenerProperties {
		if v != nil {
			return *v
		}
		var ret BrokerListenerProperties
		return ret
	}).(BrokerListenerPropertiesOutput)
}

// Ports on which this listener accepts client connections.
func (o BrokerListenerPropertiesPtrOutput) Ports() ListenerPortArrayOutput {
	return o.ApplyT(func(v *BrokerListenerProperties) []ListenerPort {
		if v == nil {
			return nil
		}
		return v.Ports
	}).(ListenerPortArrayOutput)
}

// Kubernetes Service name of this listener.
func (o BrokerListenerPropertiesPtrOutput) ServiceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BrokerListenerProperties) *string {
		if v == nil {
			return nil
		}
		return v.ServiceName
	}).(pulumi.StringPtrOutput)
}

// Kubernetes Service type of this listener.
func (o BrokerListenerPropertiesPtrOutput) ServiceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BrokerListenerProperties) *string {
		if v == nil {
			return nil
		}
		return v.ServiceType
	}).(pulumi.StringPtrOutput)
}

// Defines a Broker listener. A listener is a collection of ports on which the broker accepts connections from clients.
type BrokerListenerPropertiesResponse struct {
	// Ports on which this listener accepts client connections.
	Ports []ListenerPortResponse `pulumi:"ports"`
	// The status of the last operation.
	ProvisioningState string `pulumi:"provisioningState"`
	// Kubernetes Service name of this listener.
	ServiceName *string `pulumi:"serviceName"`
	// Kubernetes Service type of this listener.
	ServiceType *string `pulumi:"serviceType"`
}

// Defaults sets the appropriate defaults for BrokerListenerPropertiesResponse
func (val *BrokerListenerPropertiesResponse) Defaults() *BrokerListenerPropertiesResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.ServiceType == nil {
		serviceType_ := "ClusterIp"
		tmp.ServiceType = &serviceType_
	}
	return &tmp
}

// Defines a Broker listener. A listener is a collection of ports on which the broker accepts connections from clients.
type BrokerListenerPropertiesResponseOutput struct{ *pulumi.OutputState }

func (BrokerListenerPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BrokerListenerPropertiesResponse)(nil)).Elem()
}

func (o BrokerListenerPropertiesResponseOutput) ToBrokerListenerPropertiesResponseOutput() BrokerListenerPropertiesResponseOutput {
	return o
}

func (o BrokerListenerPropertiesResponseOutput) ToBrokerListenerPropertiesResponseOutputWithContext(ctx context.Context) BrokerListenerPropertiesResponseOutput {
	return o
}

// Ports on which this listener accepts client connections.
func (o BrokerListenerPropertiesResponseOutput) Ports() ListenerPortResponseArrayOutput {
	return o.ApplyT(func(v BrokerListenerPropertiesResponse) []ListenerPortResponse { return v.Ports }).(ListenerPortResponseArrayOutput)
}

// The status of the last operation.
func (o BrokerListenerPropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v BrokerListenerPropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Kubernetes Service name of this listener.
func (o BrokerListenerPropertiesResponseOutput) ServiceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BrokerListenerPropertiesResponse) *string { return v.ServiceName }).(pulumi.StringPtrOutput)
}

// Kubernetes Service type of this listener.
func (o BrokerListenerPropertiesResponseOutput) ServiceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BrokerListenerPropertiesResponse) *string { return v.ServiceType }).(pulumi.StringPtrOutput)
}

// Broker Resource properties
type BrokerProperties struct {
	// Advanced settings of Broker.
	Advanced *AdvancedSettings `pulumi:"advanced"`
	// The cardinality details of the broker.
	Cardinality *Cardinality `pulumi:"cardinality"`
	// Spec defines the desired identities of Broker diagnostics settings.
	Diagnostics *BrokerDiagnostics `pulumi:"diagnostics"`
	// Settings of Disk Backed Message Buffer.
	DiskBackedMessageBuffer *DiskBackedMessageBuffer `pulumi:"diskBackedMessageBuffer"`
	// This setting controls whether Kubernetes CPU resource limits are requested. Increasing the number of replicas or workers proportionally increases the amount of CPU resources requested. If this setting is enabled and there are insufficient CPU resources, an error will be emitted.
	GenerateResourceLimits *GenerateResourceLimits `pulumi:"generateResourceLimits"`
	// Memory profile of Broker.
	MemoryProfile *string `pulumi:"memoryProfile"`
}

// Defaults sets the appropriate defaults for BrokerProperties
func (val *BrokerProperties) Defaults() *BrokerProperties {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.Advanced = tmp.Advanced.Defaults()

	tmp.Cardinality = tmp.Cardinality.Defaults()

	tmp.Diagnostics = tmp.Diagnostics.Defaults()

	tmp.GenerateResourceLimits = tmp.GenerateResourceLimits.Defaults()

	if tmp.MemoryProfile == nil {
		memoryProfile_ := "Medium"
		tmp.MemoryProfile = &memoryProfile_
	}
	return &tmp
}

// BrokerPropertiesInput is an input type that accepts BrokerPropertiesArgs and BrokerPropertiesOutput values.
// You can construct a concrete instance of `BrokerPropertiesInput` via:
//
//	BrokerPropertiesArgs{...}
type BrokerPropertiesInput interface {
	pulumi.Input

	ToBrokerPropertiesOutput() BrokerPropertiesOutput
	ToBrokerPropertiesOutputWithContext(context.Context) BrokerPropertiesOutput
}

// Broker Resource properties
type BrokerPropertiesArgs struct {
	// Advanced settings of Broker.
	Advanced AdvancedSettingsPtrInput `pulumi:"advanced"`
	// The cardinality details of the broker.
	Cardinality CardinalityPtrInput `pulumi:"cardinality"`
	// Spec defines the desired identities of Broker diagnostics settings.
	Diagnostics BrokerDiagnosticsPtrInput `pulumi:"diagnostics"`
	// Settings of Disk Backed Message Buffer.
	DiskBackedMessageBuffer DiskBackedMessageBufferPtrInput `pulumi:"diskBackedMessageBuffer"`
	// This setting controls whether Kubernetes CPU resource limits are requested. Increasing the number of replicas or workers proportionally increases the amount of CPU resources requested. If this setting is enabled and there are insufficient CPU resources, an error will be emitted.
	GenerateResourceLimits GenerateResourceLimitsPtrInput `pulumi:"generateResourceLimits"`
	// Memory profile of Broker.
	MemoryProfile pulumi.StringPtrInput `pulumi:"memoryProfile"`
}

// Defaults sets the appropriate defaults for BrokerPropertiesArgs
func (val *BrokerPropertiesArgs) Defaults() *BrokerPropertiesArgs {
	if val == nil {
		return nil
	}
	tmp := *val

	if tmp.MemoryProfile == nil {
		tmp.MemoryProfile = pulumi.StringPtr("Medium")
	}
	return &tmp
}
func (BrokerPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BrokerProperties)(nil)).Elem()
}

func (i BrokerPropertiesArgs) ToBrokerPropertiesOutput() BrokerPropertiesOutput {
	return i.ToBrokerPropertiesOutputWithContext(context.Background())
}

func (i BrokerPropertiesArgs) ToBrokerPropertiesOutputWithContext(ctx context.Context) BrokerPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BrokerPropertiesOutput)
}

func (i BrokerPropertiesArgs) ToBrokerPropertiesPtrOutput() BrokerPropertiesPtrOutput {
	return i.ToBrokerPropertiesPtrOutputWithContext(context.Background())
}

func (i BrokerPropertiesArgs) ToBrokerPropertiesPtrOutputWithContext(ctx context.Context) BrokerPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BrokerPropertiesOutput).ToBrokerPropertiesPtrOutputWithContext(ctx)
}

// BrokerPropertiesPtrInput is an input type that accepts BrokerPropertiesArgs, BrokerPropertiesPtr and BrokerPropertiesPtrOutput values.
// You can construct a concrete instance of `BrokerPropertiesPtrInput` via:
//
//	        BrokerPropertiesArgs{...}
//
//	or:
//
//	        nil
type BrokerPropertiesPtrInput interface {
	pulumi.Input

	ToBrokerPropertiesPtrOutput() BrokerPropertiesPtrOutput
	ToBrokerPropertiesPtrOutputWithContext(context.Context) BrokerPropertiesPtrOutput
}

type brokerPropertiesPtrType BrokerPropertiesArgs

func BrokerPropertiesPtr(v *BrokerPropertiesArgs) BrokerPropertiesPtrInput {
	return (*brokerPropertiesPtrType)(v)
}

func (*brokerPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BrokerProperties)(nil)).Elem()
}

func (i *brokerPropertiesPtrType) ToBrokerPropertiesPtrOutput() BrokerPropertiesPtrOutput {
	return i.ToBrokerPropertiesPtrOutputWithContext(context.Background())
}

func (i *brokerPropertiesPtrType) ToBrokerPropertiesPtrOutputWithContext(ctx context.Context) BrokerPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BrokerPropertiesPtrOutput)
}

// Broker Resource properties
type BrokerPropertiesOutput struct{ *pulumi.OutputState }

func (BrokerPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BrokerProperties)(nil)).Elem()
}

func (o BrokerPropertiesOutput) ToBrokerPropertiesOutput() BrokerPropertiesOutput {
	return o
}

func (o BrokerPropertiesOutput) ToBrokerPropertiesOutputWithContext(ctx context.Context) BrokerPropertiesOutput {
	return o
}

func (o BrokerPropertiesOutput) ToBrokerPropertiesPtrOutput() BrokerPropertiesPtrOutput {
	return o.ToBrokerPropertiesPtrOutputWithContext(context.Background())
}

func (o BrokerPropertiesOutput) ToBrokerPropertiesPtrOutputWithContext(ctx context.Context) BrokerPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BrokerProperties) *BrokerProperties {
		return &v
	}).(BrokerPropertiesPtrOutput)
}

// Advanced settings of Broker.
func (o BrokerPropertiesOutput) Advanced() AdvancedSettingsPtrOutput {
	return o.ApplyT(func(v BrokerProperties) *AdvancedSettings { return v.Advanced }).(AdvancedSettingsPtrOutput)
}

// The cardinality details of the broker.
func (o BrokerPropertiesOutput) Cardinality() CardinalityPtrOutput {
	return o.ApplyT(func(v BrokerProperties) *Cardinality { return v.Cardinality }).(CardinalityPtrOutput)
}

// Spec defines the desired identities of Broker diagnostics settings.
func (o BrokerPropertiesOutput) Diagnostics() BrokerDiagnosticsPtrOutput {
	return o.ApplyT(func(v BrokerProperties) *BrokerDiagnostics { return v.Diagnostics }).(BrokerDiagnosticsPtrOutput)
}

// Settings of Disk Backed Message Buffer.
func (o BrokerPropertiesOutput) DiskBackedMessageBuffer() DiskBackedMessageBufferPtrOutput {
	return o.ApplyT(func(v BrokerProperties) *DiskBackedMessageBuffer { return v.DiskBackedMessageBuffer }).(DiskBackedMessageBufferPtrOutput)
}

// This setting controls whether Kubernetes CPU resource limits are requested. Increasing the number of replicas or workers proportionally increases the amount of CPU resources requested. If this setting is enabled and there are insufficient CPU resources, an error will be emitted.
func (o BrokerPropertiesOutput) GenerateResourceLimits() GenerateResourceLimitsPtrOutput {
	return o.ApplyT(func(v BrokerProperties) *GenerateResourceLimits { return v.GenerateResourceLimits }).(GenerateResourceLimitsPtrOutput)
}

// Memory profile of Broker.
func (o BrokerPropertiesOutput) MemoryProfile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BrokerProperties) *string { return v.MemoryProfile }).(pulumi.StringPtrOutput)
}

type BrokerPropertiesPtrOutput struct{ *pulumi.OutputState }

func (BrokerPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BrokerProperties)(nil)).Elem()
}

func (o BrokerPropertiesPtrOutput) ToBrokerPropertiesPtrOutput() BrokerPropertiesPtrOutput {
	return o
}

func (o BrokerPropertiesPtrOutput) ToBrokerPropertiesPtrOutputWithContext(ctx context.Context) BrokerPropertiesPtrOutput {
	return o
}

func (o BrokerPropertiesPtrOutput) Elem() BrokerPropertiesOutput {
	return o.ApplyT(func(v *BrokerProperties) BrokerProperties {
		if v != nil {
			return *v
		}
		var ret BrokerProperties
		return ret
	}).(BrokerPropertiesOutput)
}

// Advanced settings of Broker.
func (o BrokerPropertiesPtrOutput) Advanced() AdvancedSettingsPtrOutput {
	return o.ApplyT(func(v *BrokerProperties) *AdvancedSettings {
		if v == nil {
			return nil
		}
		return v.Advanced
	}).(AdvancedSettingsPtrOutput)
}

// The cardinality details of the broker.
func (o BrokerPropertiesPtrOutput) Cardinality() CardinalityPtrOutput {
	return o.ApplyT(func(v *BrokerProperties) *Cardinality {
		if v == nil {
			return nil
		}
		return v.Cardinality
	}).(CardinalityPtrOutput)
}

// Spec defines the desired identities of Broker diagnostics settings.
func (o BrokerPropertiesPtrOutput) Diagnostics() BrokerDiagnosticsPtrOutput {
	return o.ApplyT(func(v *BrokerProperties) *BrokerDiagnostics {
		if v == nil {
			return nil
		}
		return v.Diagnostics
	}).(BrokerDiagnosticsPtrOutput)
}

// Settings of Disk Backed Message Buffer.
func (o BrokerPropertiesPtrOutput) DiskBackedMessageBuffer() DiskBackedMessageBufferPtrOutput {
	return o.ApplyT(func(v *BrokerProperties) *DiskBackedMessageBuffer {
		if v == nil {
			return nil
		}
		return v.DiskBackedMessageBuffer
	}).(DiskBackedMessageBufferPtrOutput)
}

// This setting controls whether Kubernetes CPU resource limits are requested. Increasing the number of replicas or workers proportionally increases the amount of CPU resources requested. If this setting is enabled and there are insufficient CPU resources, an error will be emitted.
func (o BrokerPropertiesPtrOutput) GenerateResourceLimits() GenerateResourceLimitsPtrOutput {
	return o.ApplyT(func(v *BrokerProperties) *GenerateResourceLimits {
		if v == nil {
			return nil
		}
		return v.GenerateResourceLimits
	}).(GenerateResourceLimitsPtrOutput)
}

// Memory profile of Broker.
func (o BrokerPropertiesPtrOutput) MemoryProfile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BrokerProperties) *string {
		if v == nil {
			return nil
		}
		return v.MemoryProfile
	}).(pulumi.StringPtrOutput)
}

// Broker Resource properties
type BrokerPropertiesResponse struct {
	// Advanced settings of Broker.
	Advanced *AdvancedSettingsResponse `pulumi:"advanced"`
	// The cardinality details of the broker.
	Cardinality *CardinalityResponse `pulumi:"cardinality"`
	// Spec defines the desired identities of Broker diagnostics settings.
	Diagnostics *BrokerDiagnosticsResponse `pulumi:"diagnostics"`
	// Settings of Disk Backed Message Buffer.
	DiskBackedMessageBuffer *DiskBackedMessageBufferResponse `pulumi:"diskBackedMessageBuffer"`
	// This setting controls whether Kubernetes CPU resource limits are requested. Increasing the number of replicas or workers proportionally increases the amount of CPU resources requested. If this setting is enabled and there are insufficient CPU resources, an error will be emitted.
	GenerateResourceLimits *GenerateResourceLimitsResponse `pulumi:"generateResourceLimits"`
	// Memory profile of Broker.
	MemoryProfile *string `pulumi:"memoryProfile"`
	// The status of the last operation.
	ProvisioningState string `pulumi:"provisioningState"`
}

// Defaults sets the appropriate defaults for BrokerPropertiesResponse
func (val *BrokerPropertiesResponse) Defaults() *BrokerPropertiesResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.Advanced = tmp.Advanced.Defaults()

	tmp.Cardinality = tmp.Cardinality.Defaults()

	tmp.Diagnostics = tmp.Diagnostics.Defaults()

	tmp.GenerateResourceLimits = tmp.GenerateResourceLimits.Defaults()

	if tmp.MemoryProfile == nil {
		memoryProfile_ := "Medium"
		tmp.MemoryProfile = &memoryProfile_
	}
	return &tmp
}

// Broker Resource properties
type BrokerPropertiesResponseOutput struct{ *pulumi.OutputState }

func (BrokerPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BrokerPropertiesResponse)(nil)).Elem()
}

func (o BrokerPropertiesResponseOutput) ToBrokerPropertiesResponseOutput() BrokerPropertiesResponseOutput {
	return o
}

func (o BrokerPropertiesResponseOutput) ToBrokerPropertiesResponseOutputWithContext(ctx context.Context) BrokerPropertiesResponseOutput {
	return o
}

// Advanced settings of Broker.
func (o BrokerPropertiesResponseOutput) Advanced() AdvancedSettingsResponsePtrOutput {
	return o.ApplyT(func(v BrokerPropertiesResponse) *AdvancedSettingsResponse { return v.Advanced }).(AdvancedSettingsResponsePtrOutput)
}

// The cardinality details of the broker.
func (o BrokerPropertiesResponseOutput) Cardinality() CardinalityResponsePtrOutput {
	return o.ApplyT(func(v BrokerPropertiesResponse) *CardinalityResponse { return v.Cardinality }).(CardinalityResponsePtrOutput)
}

// Spec defines the desired identities of Broker diagnostics settings.
func (o BrokerPropertiesResponseOutput) Diagnostics() BrokerDiagnosticsResponsePtrOutput {
	return o.ApplyT(func(v BrokerPropertiesResponse) *BrokerDiagnosticsResponse { return v.Diagnostics }).(BrokerDiagnosticsResponsePtrOutput)
}

// Settings of Disk Backed Message Buffer.
func (o BrokerPropertiesResponseOutput) DiskBackedMessageBuffer() DiskBackedMessageBufferResponsePtrOutput {
	return o.ApplyT(func(v BrokerPropertiesResponse) *DiskBackedMessageBufferResponse { return v.DiskBackedMessageBuffer }).(DiskBackedMessageBufferResponsePtrOutput)
}

// This setting controls whether Kubernetes CPU resource limits are requested. Increasing the number of replicas or workers proportionally increases the amount of CPU resources requested. If this setting is enabled and there are insufficient CPU resources, an error will be emitted.
func (o BrokerPropertiesResponseOutput) GenerateResourceLimits() GenerateResourceLimitsResponsePtrOutput {
	return o.ApplyT(func(v BrokerPropertiesResponse) *GenerateResourceLimitsResponse { return v.GenerateResourceLimits }).(GenerateResourceLimitsResponsePtrOutput)
}

// Memory profile of Broker.
func (o BrokerPropertiesResponseOutput) MemoryProfile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BrokerPropertiesResponse) *string { return v.MemoryProfile }).(pulumi.StringPtrOutput)
}

// The status of the last operation.
func (o BrokerPropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v BrokerPropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Broker Resource Rule properties. This defines the objects that represent the actions or topics, such as - method.Connect, method.Publish, etc.
type BrokerResourceRule struct {
	// A list of client IDs that match the clients. The client IDs are case-sensitive and must match the client IDs provided by the clients during connection. This subfield may be set if the method is Connect.
	ClientIds []string `pulumi:"clientIds"`
	// Give access for a Broker method (i.e., Connect, Subscribe, or Publish).
	Method string `pulumi:"method"`
	// A list of topics or topic patterns that match the topics that the clients can publish or subscribe to. This subfield is required if the method is Publish or Subscribe.
	Topics []string `pulumi:"topics"`
}

// BrokerResourceRuleInput is an input type that accepts BrokerResourceRuleArgs and BrokerResourceRuleOutput values.
// You can construct a concrete instance of `BrokerResourceRuleInput` via:
//
//	BrokerResourceRuleArgs{...}
type BrokerResourceRuleInput interface {
	pulumi.Input

	ToBrokerResourceRuleOutput() BrokerResourceRuleOutput
	ToBrokerResourceRuleOutputWithContext(context.Context) BrokerResourceRuleOutput
}

// Broker Resource Rule properties. This defines the objects that represent the actions or topics, such as - method.Connect, method.Publish, etc.
type BrokerResourceRuleArgs struct {
	// A list of client IDs that match the clients. The client IDs are case-sensitive and must match the client IDs provided by the clients during connection. This subfield may be set if the method is Connect.
	ClientIds pulumi.StringArrayInput `pulumi:"clientIds"`
	// Give access for a Broker method (i.e., Connect, Subscribe, or Publish).
	Method pulumi.StringInput `pulumi:"method"`
	// A list of topics or topic patterns that match the topics that the clients can publish or subscribe to. This subfield is required if the method is Publish or Subscribe.
	Topics pulumi.StringArrayInput `pulumi:"topics"`
}

func (BrokerResourceRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BrokerResourceRule)(nil)).Elem()
}

func (i BrokerResourceRuleArgs) ToBrokerResourceRuleOutput() BrokerResourceRuleOutput {
	return i.ToBrokerResourceRuleOutputWithContext(context.Background())
}

func (i BrokerResourceRuleArgs) ToBrokerResourceRuleOutputWithContext(ctx context.Context) BrokerResourceRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BrokerResourceRuleOutput)
}

// BrokerResourceRuleArrayInput is an input type that accepts BrokerResourceRuleArray and BrokerResourceRuleArrayOutput values.
// You can construct a concrete instance of `BrokerResourceRuleArrayInput` via:
//
//	BrokerResourceRuleArray{ BrokerResourceRuleArgs{...} }
type BrokerResourceRuleArrayInput interface {
	pulumi.Input

	ToBrokerResourceRuleArrayOutput() BrokerResourceRuleArrayOutput
	ToBrokerResourceRuleArrayOutputWithContext(context.Context) BrokerResourceRuleArrayOutput
}

type BrokerResourceRuleArray []BrokerResourceRuleInput

func (BrokerResourceRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BrokerResourceRule)(nil)).Elem()
}

func (i BrokerResourceRuleArray) ToBrokerResourceRuleArrayOutput() BrokerResourceRuleArrayOutput {
	return i.ToBrokerResourceRuleArrayOutputWithContext(context.Background())
}

func (i BrokerResourceRuleArray) ToBrokerResourceRuleArrayOutputWithContext(ctx context.Context) BrokerResourceRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BrokerResourceRuleArrayOutput)
}

// Broker Resource Rule properties. This defines the objects that represent the actions or topics, such as - method.Connect, method.Publish, etc.
type BrokerResourceRuleOutput struct{ *pulumi.OutputState }

func (BrokerResourceRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BrokerResourceRule)(nil)).Elem()
}

func (o BrokerResourceRuleOutput) ToBrokerResourceRuleOutput() BrokerResourceRuleOutput {
	return o
}

func (o BrokerResourceRuleOutput) ToBrokerResourceRuleOutputWithContext(ctx context.Context) BrokerResourceRuleOutput {
	return o
}

// A list of client IDs that match the clients. The client IDs are case-sensitive and must match the client IDs provided by the clients during connection. This subfield may be set if the method is Connect.
func (o BrokerResourceRuleOutput) ClientIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BrokerResourceRule) []string { return v.ClientIds }).(pulumi.StringArrayOutput)
}

// Give access for a Broker method (i.e., Connect, Subscribe, or Publish).
func (o BrokerResourceRuleOutput) Method() pulumi.StringOutput {
	return o.ApplyT(func(v BrokerResourceRule) string { return v.Method }).(pulumi.StringOutput)
}

// A list of topics or topic patterns that match the topics that the clients can publish or subscribe to. This subfield is required if the method is Publish or Subscribe.
func (o BrokerResourceRuleOutput) Topics() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BrokerResourceRule) []string { return v.Topics }).(pulumi.StringArrayOutput)
}

type BrokerResourceRuleArrayOutput struct{ *pulumi.OutputState }

func (BrokerResourceRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BrokerResourceRule)(nil)).Elem()
}

func (o BrokerResourceRuleArrayOutput) ToBrokerResourceRuleArrayOutput() BrokerResourceRuleArrayOutput {
	return o
}

func (o BrokerResourceRuleArrayOutput) ToBrokerResourceRuleArrayOutputWithContext(ctx context.Context) BrokerResourceRuleArrayOutput {
	return o
}

func (o BrokerResourceRuleArrayOutput) Index(i pulumi.IntInput) BrokerResourceRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BrokerResourceRule {
		return vs[0].([]BrokerResourceRule)[vs[1].(int)]
	}).(BrokerResourceRuleOutput)
}

// Broker Resource Rule properties. This defines the objects that represent the actions or topics, such as - method.Connect, method.Publish, etc.
type BrokerResourceRuleResponse struct {
	// A list of client IDs that match the clients. The client IDs are case-sensitive and must match the client IDs provided by the clients during connection. This subfield may be set if the method is Connect.
	ClientIds []string `pulumi:"clientIds"`
	// Give access for a Broker method (i.e., Connect, Subscribe, or Publish).
	Method string `pulumi:"method"`
	// A list of topics or topic patterns that match the topics that the clients can publish or subscribe to. This subfield is required if the method is Publish or Subscribe.
	Topics []string `pulumi:"topics"`
}

// Broker Resource Rule properties. This defines the objects that represent the actions or topics, such as - method.Connect, method.Publish, etc.
type BrokerResourceRuleResponseOutput struct{ *pulumi.OutputState }

func (BrokerResourceRuleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BrokerResourceRuleResponse)(nil)).Elem()
}

func (o BrokerResourceRuleResponseOutput) ToBrokerResourceRuleResponseOutput() BrokerResourceRuleResponseOutput {
	return o
}

func (o BrokerResourceRuleResponseOutput) ToBrokerResourceRuleResponseOutputWithContext(ctx context.Context) BrokerResourceRuleResponseOutput {
	return o
}

// A list of client IDs that match the clients. The client IDs are case-sensitive and must match the client IDs provided by the clients during connection. This subfield may be set if the method is Connect.
func (o BrokerResourceRuleResponseOutput) ClientIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BrokerResourceRuleResponse) []string { return v.ClientIds }).(pulumi.StringArrayOutput)
}

// Give access for a Broker method (i.e., Connect, Subscribe, or Publish).
func (o BrokerResourceRuleResponseOutput) Method() pulumi.StringOutput {
	return o.ApplyT(func(v BrokerResourceRuleResponse) string { return v.Method }).(pulumi.StringOutput)
}

// A list of topics or topic patterns that match the topics that the clients can publish or subscribe to. This subfield is required if the method is Publish or Subscribe.
func (o BrokerResourceRuleResponseOutput) Topics() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BrokerResourceRuleResponse) []string { return v.Topics }).(pulumi.StringArrayOutput)
}

type BrokerResourceRuleResponseArrayOutput struct{ *pulumi.OutputState }

func (BrokerResourceRuleResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BrokerResourceRuleResponse)(nil)).Elem()
}

func (o BrokerResourceRuleResponseArrayOutput) ToBrokerResourceRuleResponseArrayOutput() BrokerResourceRuleResponseArrayOutput {
	return o
}

func (o BrokerResourceRuleResponseArrayOutput) ToBrokerResourceRuleResponseArrayOutputWithContext(ctx context.Context) BrokerResourceRuleResponseArrayOutput {
	return o
}

func (o BrokerResourceRuleResponseArrayOutput) Index(i pulumi.IntInput) BrokerResourceRuleResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BrokerResourceRuleResponse {
		return vs[0].([]BrokerResourceRuleResponse)[vs[1].(int)]
	}).(BrokerResourceRuleResponseOutput)
}

// Cardinality properties
type Cardinality struct {
	// The backend broker desired properties
	BackendChain BackendChain `pulumi:"backendChain"`
	// The frontend desired properties
	Frontend Frontend `pulumi:"frontend"`
}

// Defaults sets the appropriate defaults for Cardinality
func (val *Cardinality) Defaults() *Cardinality {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.BackendChain = *tmp.BackendChain.Defaults()

	tmp.Frontend = *tmp.Frontend.Defaults()

	return &tmp
}

// CardinalityInput is an input type that accepts CardinalityArgs and CardinalityOutput values.
// You can construct a concrete instance of `CardinalityInput` via:
//
//	CardinalityArgs{...}
type CardinalityInput interface {
	pulumi.Input

	ToCardinalityOutput() CardinalityOutput
	ToCardinalityOutputWithContext(context.Context) CardinalityOutput
}

// Cardinality properties
type CardinalityArgs struct {
	// The backend broker desired properties
	BackendChain BackendChainInput `pulumi:"backendChain"`
	// The frontend desired properties
	Frontend FrontendInput `pulumi:"frontend"`
}

// Defaults sets the appropriate defaults for CardinalityArgs
func (val *CardinalityArgs) Defaults() *CardinalityArgs {
	if val == nil {
		return nil
	}
	tmp := *val

	return &tmp
}
func (CardinalityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Cardinality)(nil)).Elem()
}

func (i CardinalityArgs) ToCardinalityOutput() CardinalityOutput {
	return i.ToCardinalityOutputWithContext(context.Background())
}

func (i CardinalityArgs) ToCardinalityOutputWithContext(ctx context.Context) CardinalityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CardinalityOutput)
}

func (i CardinalityArgs) ToCardinalityPtrOutput() CardinalityPtrOutput {
	return i.ToCardinalityPtrOutputWithContext(context.Background())
}

func (i CardinalityArgs) ToCardinalityPtrOutputWithContext(ctx context.Context) CardinalityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CardinalityOutput).ToCardinalityPtrOutputWithContext(ctx)
}

// CardinalityPtrInput is an input type that accepts CardinalityArgs, CardinalityPtr and CardinalityPtrOutput values.
// You can construct a concrete instance of `CardinalityPtrInput` via:
//
//	        CardinalityArgs{...}
//
//	or:
//
//	        nil
type CardinalityPtrInput interface {
	pulumi.Input

	ToCardinalityPtrOutput() CardinalityPtrOutput
	ToCardinalityPtrOutputWithContext(context.Context) CardinalityPtrOutput
}

type cardinalityPtrType CardinalityArgs

func CardinalityPtr(v *CardinalityArgs) CardinalityPtrInput {
	return (*cardinalityPtrType)(v)
}

func (*cardinalityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Cardinality)(nil)).Elem()
}

func (i *cardinalityPtrType) ToCardinalityPtrOutput() CardinalityPtrOutput {
	return i.ToCardinalityPtrOutputWithContext(context.Background())
}

func (i *cardinalityPtrType) ToCardinalityPtrOutputWithContext(ctx context.Context) CardinalityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CardinalityPtrOutput)
}

// Cardinality properties
type CardinalityOutput struct{ *pulumi.OutputState }

func (CardinalityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Cardinality)(nil)).Elem()
}

func (o CardinalityOutput) ToCardinalityOutput() CardinalityOutput {
	return o
}

func (o CardinalityOutput) ToCardinalityOutputWithContext(ctx context.Context) CardinalityOutput {
	return o
}

func (o CardinalityOutput) ToCardinalityPtrOutput() CardinalityPtrOutput {
	return o.ToCardinalityPtrOutputWithContext(context.Background())
}

func (o CardinalityOutput) ToCardinalityPtrOutputWithContext(ctx context.Context) CardinalityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Cardinality) *Cardinality {
		return &v
	}).(CardinalityPtrOutput)
}

// The backend broker desired properties
func (o CardinalityOutput) BackendChain() BackendChainOutput {
	return o.ApplyT(func(v Cardinality) BackendChain { return v.BackendChain }).(BackendChainOutput)
}

// The frontend desired properties
func (o CardinalityOutput) Frontend() FrontendOutput {
	return o.ApplyT(func(v Cardinality) Frontend { return v.Frontend }).(FrontendOutput)
}

type CardinalityPtrOutput struct{ *pulumi.OutputState }

func (CardinalityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Cardinality)(nil)).Elem()
}

func (o CardinalityPtrOutput) ToCardinalityPtrOutput() CardinalityPtrOutput {
	return o
}

func (o CardinalityPtrOutput) ToCardinalityPtrOutputWithContext(ctx context.Context) CardinalityPtrOutput {
	return o
}

func (o CardinalityPtrOutput) Elem() CardinalityOutput {
	return o.ApplyT(func(v *Cardinality) Cardinality {
		if v != nil {
			return *v
		}
		var ret Cardinality
		return ret
	}).(CardinalityOutput)
}

// The backend broker desired properties
func (o CardinalityPtrOutput) BackendChain() BackendChainPtrOutput {
	return o.ApplyT(func(v *Cardinality) *BackendChain {
		if v == nil {
			return nil
		}
		return &v.BackendChain
	}).(BackendChainPtrOutput)
}

// The frontend desired properties
func (o CardinalityPtrOutput) Frontend() FrontendPtrOutput {
	return o.ApplyT(func(v *Cardinality) *Frontend {
		if v == nil {
			return nil
		}
		return &v.Frontend
	}).(FrontendPtrOutput)
}

// Cardinality properties
type CardinalityResponse struct {
	// The backend broker desired properties
	BackendChain BackendChainResponse `pulumi:"backendChain"`
	// The frontend desired properties
	Frontend FrontendResponse `pulumi:"frontend"`
}

// Defaults sets the appropriate defaults for CardinalityResponse
func (val *CardinalityResponse) Defaults() *CardinalityResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.BackendChain = *tmp.BackendChain.Defaults()

	tmp.Frontend = *tmp.Frontend.Defaults()

	return &tmp
}

// Cardinality properties
type CardinalityResponseOutput struct{ *pulumi.OutputState }

func (CardinalityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CardinalityResponse)(nil)).Elem()
}

func (o CardinalityResponseOutput) ToCardinalityResponseOutput() CardinalityResponseOutput {
	return o
}

func (o CardinalityResponseOutput) ToCardinalityResponseOutputWithContext(ctx context.Context) CardinalityResponseOutput {
	return o
}

// The backend broker desired properties
func (o CardinalityResponseOutput) BackendChain() BackendChainResponseOutput {
	return o.ApplyT(func(v CardinalityResponse) BackendChainResponse { return v.BackendChain }).(BackendChainResponseOutput)
}

// The frontend desired properties
func (o CardinalityResponseOutput) Frontend() FrontendResponseOutput {
	return o.ApplyT(func(v CardinalityResponse) FrontendResponse { return v.Frontend }).(FrontendResponseOutput)
}

type CardinalityResponsePtrOutput struct{ *pulumi.OutputState }

func (CardinalityResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CardinalityResponse)(nil)).Elem()
}

func (o CardinalityResponsePtrOutput) ToCardinalityResponsePtrOutput() CardinalityResponsePtrOutput {
	return o
}

func (o CardinalityResponsePtrOutput) ToCardinalityResponsePtrOutputWithContext(ctx context.Context) CardinalityResponsePtrOutput {
	return o
}

func (o CardinalityResponsePtrOutput) Elem() CardinalityResponseOutput {
	return o.ApplyT(func(v *CardinalityResponse) CardinalityResponse {
		if v != nil {
			return *v
		}
		var ret CardinalityResponse
		return ret
	}).(CardinalityResponseOutput)
}

// The backend broker desired properties
func (o CardinalityResponsePtrOutput) BackendChain() BackendChainResponsePtrOutput {
	return o.ApplyT(func(v *CardinalityResponse) *BackendChainResponse {
		if v == nil {
			return nil
		}
		return &v.BackendChain
	}).(BackendChainResponsePtrOutput)
}

// The frontend desired properties
func (o CardinalityResponsePtrOutput) Frontend() FrontendResponsePtrOutput {
	return o.ApplyT(func(v *CardinalityResponse) *FrontendResponse {
		if v == nil {
			return nil
		}
		return &v.Frontend
	}).(FrontendResponsePtrOutput)
}

// Cert Manager Cert properties
type CertManagerCertOptions struct {
	// Lifetime of certificate. Must be specified using a Go time.Duration format (h|m|s). E.g. 240h for 240 hours and 45m for 45 minutes.
	Duration string `pulumi:"duration"`
	// Configuration of certificate private key.
	PrivateKey CertManagerPrivateKey `pulumi:"privateKey"`
	// When to begin renewing certificate. Must be specified using a Go time.Duration format (h|m|s). E.g. 240h for 240 hours and 45m for 45 minutes.
	RenewBefore string `pulumi:"renewBefore"`
}

// CertManagerCertOptionsInput is an input type that accepts CertManagerCertOptionsArgs and CertManagerCertOptionsOutput values.
// You can construct a concrete instance of `CertManagerCertOptionsInput` via:
//
//	CertManagerCertOptionsArgs{...}
type CertManagerCertOptionsInput interface {
	pulumi.Input

	ToCertManagerCertOptionsOutput() CertManagerCertOptionsOutput
	ToCertManagerCertOptionsOutputWithContext(context.Context) CertManagerCertOptionsOutput
}

// Cert Manager Cert properties
type CertManagerCertOptionsArgs struct {
	// Lifetime of certificate. Must be specified using a Go time.Duration format (h|m|s). E.g. 240h for 240 hours and 45m for 45 minutes.
	Duration pulumi.StringInput `pulumi:"duration"`
	// Configuration of certificate private key.
	PrivateKey CertManagerPrivateKeyInput `pulumi:"privateKey"`
	// When to begin renewing certificate. Must be specified using a Go time.Duration format (h|m|s). E.g. 240h for 240 hours and 45m for 45 minutes.
	RenewBefore pulumi.StringInput `pulumi:"renewBefore"`
}

func (CertManagerCertOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CertManagerCertOptions)(nil)).Elem()
}

func (i CertManagerCertOptionsArgs) ToCertManagerCertOptionsOutput() CertManagerCertOptionsOutput {
	return i.ToCertManagerCertOptionsOutputWithContext(context.Background())
}

func (i CertManagerCertOptionsArgs) ToCertManagerCertOptionsOutputWithContext(ctx context.Context) CertManagerCertOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertManagerCertOptionsOutput)
}

func (i CertManagerCertOptionsArgs) ToCertManagerCertOptionsPtrOutput() CertManagerCertOptionsPtrOutput {
	return i.ToCertManagerCertOptionsPtrOutputWithContext(context.Background())
}

func (i CertManagerCertOptionsArgs) ToCertManagerCertOptionsPtrOutputWithContext(ctx context.Context) CertManagerCertOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertManagerCertOptionsOutput).ToCertManagerCertOptionsPtrOutputWithContext(ctx)
}

// CertManagerCertOptionsPtrInput is an input type that accepts CertManagerCertOptionsArgs, CertManagerCertOptionsPtr and CertManagerCertOptionsPtrOutput values.
// You can construct a concrete instance of `CertManagerCertOptionsPtrInput` via:
//
//	        CertManagerCertOptionsArgs{...}
//
//	or:
//
//	        nil
type CertManagerCertOptionsPtrInput interface {
	pulumi.Input

	ToCertManagerCertOptionsPtrOutput() CertManagerCertOptionsPtrOutput
	ToCertManagerCertOptionsPtrOutputWithContext(context.Context) CertManagerCertOptionsPtrOutput
}

type certManagerCertOptionsPtrType CertManagerCertOptionsArgs

func CertManagerCertOptionsPtr(v *CertManagerCertOptionsArgs) CertManagerCertOptionsPtrInput {
	return (*certManagerCertOptionsPtrType)(v)
}

func (*certManagerCertOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CertManagerCertOptions)(nil)).Elem()
}

func (i *certManagerCertOptionsPtrType) ToCertManagerCertOptionsPtrOutput() CertManagerCertOptionsPtrOutput {
	return i.ToCertManagerCertOptionsPtrOutputWithContext(context.Background())
}

func (i *certManagerCertOptionsPtrType) ToCertManagerCertOptionsPtrOutputWithContext(ctx context.Context) CertManagerCertOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertManagerCertOptionsPtrOutput)
}

// Cert Manager Cert properties
type CertManagerCertOptionsOutput struct{ *pulumi.OutputState }

func (CertManagerCertOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CertManagerCertOptions)(nil)).Elem()
}

func (o CertManagerCertOptionsOutput) ToCertManagerCertOptionsOutput() CertManagerCertOptionsOutput {
	return o
}

func (o CertManagerCertOptionsOutput) ToCertManagerCertOptionsOutputWithContext(ctx context.Context) CertManagerCertOptionsOutput {
	return o
}

func (o CertManagerCertOptionsOutput) ToCertManagerCertOptionsPtrOutput() CertManagerCertOptionsPtrOutput {
	return o.ToCertManagerCertOptionsPtrOutputWithContext(context.Background())
}

func (o CertManagerCertOptionsOutput) ToCertManagerCertOptionsPtrOutputWithContext(ctx context.Context) CertManagerCertOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CertManagerCertOptions) *CertManagerCertOptions {
		return &v
	}).(CertManagerCertOptionsPtrOutput)
}

// Lifetime of certificate. Must be specified using a Go time.Duration format (h|m|s). E.g. 240h for 240 hours and 45m for 45 minutes.
func (o CertManagerCertOptionsOutput) Duration() pulumi.StringOutput {
	return o.ApplyT(func(v CertManagerCertOptions) string { return v.Duration }).(pulumi.StringOutput)
}

// Configuration of certificate private key.
func (o CertManagerCertOptionsOutput) PrivateKey() CertManagerPrivateKeyOutput {
	return o.ApplyT(func(v CertManagerCertOptions) CertManagerPrivateKey { return v.PrivateKey }).(CertManagerPrivateKeyOutput)
}

// When to begin renewing certificate. Must be specified using a Go time.Duration format (h|m|s). E.g. 240h for 240 hours and 45m for 45 minutes.
func (o CertManagerCertOptionsOutput) RenewBefore() pulumi.StringOutput {
	return o.ApplyT(func(v CertManagerCertOptions) string { return v.RenewBefore }).(pulumi.StringOutput)
}

type CertManagerCertOptionsPtrOutput struct{ *pulumi.OutputState }

func (CertManagerCertOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CertManagerCertOptions)(nil)).Elem()
}

func (o CertManagerCertOptionsPtrOutput) ToCertManagerCertOptionsPtrOutput() CertManagerCertOptionsPtrOutput {
	return o
}

func (o CertManagerCertOptionsPtrOutput) ToCertManagerCertOptionsPtrOutputWithContext(ctx context.Context) CertManagerCertOptionsPtrOutput {
	return o
}

func (o CertManagerCertOptionsPtrOutput) Elem() CertManagerCertOptionsOutput {
	return o.ApplyT(func(v *CertManagerCertOptions) CertManagerCertOptions {
		if v != nil {
			return *v
		}
		var ret CertManagerCertOptions
		return ret
	}).(CertManagerCertOptionsOutput)
}

// Lifetime of certificate. Must be specified using a Go time.Duration format (h|m|s). E.g. 240h for 240 hours and 45m for 45 minutes.
func (o CertManagerCertOptionsPtrOutput) Duration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertManagerCertOptions) *string {
		if v == nil {
			return nil
		}
		return &v.Duration
	}).(pulumi.StringPtrOutput)
}

// Configuration of certificate private key.
func (o CertManagerCertOptionsPtrOutput) PrivateKey() CertManagerPrivateKeyPtrOutput {
	return o.ApplyT(func(v *CertManagerCertOptions) *CertManagerPrivateKey {
		if v == nil {
			return nil
		}
		return &v.PrivateKey
	}).(CertManagerPrivateKeyPtrOutput)
}

// When to begin renewing certificate. Must be specified using a Go time.Duration format (h|m|s). E.g. 240h for 240 hours and 45m for 45 minutes.
func (o CertManagerCertOptionsPtrOutput) RenewBefore() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertManagerCertOptions) *string {
		if v == nil {
			return nil
		}
		return &v.RenewBefore
	}).(pulumi.StringPtrOutput)
}

// Cert Manager Cert properties
type CertManagerCertOptionsResponse struct {
	// Lifetime of certificate. Must be specified using a Go time.Duration format (h|m|s). E.g. 240h for 240 hours and 45m for 45 minutes.
	Duration string `pulumi:"duration"`
	// Configuration of certificate private key.
	PrivateKey CertManagerPrivateKeyResponse `pulumi:"privateKey"`
	// When to begin renewing certificate. Must be specified using a Go time.Duration format (h|m|s). E.g. 240h for 240 hours and 45m for 45 minutes.
	RenewBefore string `pulumi:"renewBefore"`
}

// Cert Manager Cert properties
type CertManagerCertOptionsResponseOutput struct{ *pulumi.OutputState }

func (CertManagerCertOptionsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CertManagerCertOptionsResponse)(nil)).Elem()
}

func (o CertManagerCertOptionsResponseOutput) ToCertManagerCertOptionsResponseOutput() CertManagerCertOptionsResponseOutput {
	return o
}

func (o CertManagerCertOptionsResponseOutput) ToCertManagerCertOptionsResponseOutputWithContext(ctx context.Context) CertManagerCertOptionsResponseOutput {
	return o
}

// Lifetime of certificate. Must be specified using a Go time.Duration format (h|m|s). E.g. 240h for 240 hours and 45m for 45 minutes.
func (o CertManagerCertOptionsResponseOutput) Duration() pulumi.StringOutput {
	return o.ApplyT(func(v CertManagerCertOptionsResponse) string { return v.Duration }).(pulumi.StringOutput)
}

// Configuration of certificate private key.
func (o CertManagerCertOptionsResponseOutput) PrivateKey() CertManagerPrivateKeyResponseOutput {
	return o.ApplyT(func(v CertManagerCertOptionsResponse) CertManagerPrivateKeyResponse { return v.PrivateKey }).(CertManagerPrivateKeyResponseOutput)
}

// When to begin renewing certificate. Must be specified using a Go time.Duration format (h|m|s). E.g. 240h for 240 hours and 45m for 45 minutes.
func (o CertManagerCertOptionsResponseOutput) RenewBefore() pulumi.StringOutput {
	return o.ApplyT(func(v CertManagerCertOptionsResponse) string { return v.RenewBefore }).(pulumi.StringOutput)
}

type CertManagerCertOptionsResponsePtrOutput struct{ *pulumi.OutputState }

func (CertManagerCertOptionsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CertManagerCertOptionsResponse)(nil)).Elem()
}

func (o CertManagerCertOptionsResponsePtrOutput) ToCertManagerCertOptionsResponsePtrOutput() CertManagerCertOptionsResponsePtrOutput {
	return o
}

func (o CertManagerCertOptionsResponsePtrOutput) ToCertManagerCertOptionsResponsePtrOutputWithContext(ctx context.Context) CertManagerCertOptionsResponsePtrOutput {
	return o
}

func (o CertManagerCertOptionsResponsePtrOutput) Elem() CertManagerCertOptionsResponseOutput {
	return o.ApplyT(func(v *CertManagerCertOptionsResponse) CertManagerCertOptionsResponse {
		if v != nil {
			return *v
		}
		var ret CertManagerCertOptionsResponse
		return ret
	}).(CertManagerCertOptionsResponseOutput)
}

// Lifetime of certificate. Must be specified using a Go time.Duration format (h|m|s). E.g. 240h for 240 hours and 45m for 45 minutes.
func (o CertManagerCertOptionsResponsePtrOutput) Duration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertManagerCertOptionsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Duration
	}).(pulumi.StringPtrOutput)
}

// Configuration of certificate private key.
func (o CertManagerCertOptionsResponsePtrOutput) PrivateKey() CertManagerPrivateKeyResponsePtrOutput {
	return o.ApplyT(func(v *CertManagerCertOptionsResponse) *CertManagerPrivateKeyResponse {
		if v == nil {
			return nil
		}
		return &v.PrivateKey
	}).(CertManagerPrivateKeyResponsePtrOutput)
}

// When to begin renewing certificate. Must be specified using a Go time.Duration format (h|m|s). E.g. 240h for 240 hours and 45m for 45 minutes.
func (o CertManagerCertOptionsResponsePtrOutput) RenewBefore() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertManagerCertOptionsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.RenewBefore
	}).(pulumi.StringPtrOutput)
}

// Automatic TLS server certificate management with cert-manager
type CertManagerCertificateSpec struct {
	// Lifetime of certificate. Must be specified using a Go time.Duration format (h|m|s). E.g. 240h for 240 hours and 45m for 45 minutes.
	Duration *string `pulumi:"duration"`
	// cert-manager issuerRef.
	IssuerRef CertManagerIssuerRef `pulumi:"issuerRef"`
	// Type of certificate private key.
	PrivateKey *CertManagerPrivateKey `pulumi:"privateKey"`
	// When to begin renewing certificate. Must be specified using a Go time.Duration format (h|m|s). E.g. 240h for 240 hours and 45m for 45 minutes.
	RenewBefore *string `pulumi:"renewBefore"`
	// Additional Subject Alternative Names (SANs) to include in the certificate.
	San *SanForCert `pulumi:"san"`
	// Secret for storing server certificate. Any existing data will be overwritten. This is a reference to the secret through an identifying name, not the secret itself.
	SecretName *string `pulumi:"secretName"`
}

// Defaults sets the appropriate defaults for CertManagerCertificateSpec
func (val *CertManagerCertificateSpec) Defaults() *CertManagerCertificateSpec {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.IssuerRef = *tmp.IssuerRef.Defaults()

	return &tmp
}

// CertManagerCertificateSpecInput is an input type that accepts CertManagerCertificateSpecArgs and CertManagerCertificateSpecOutput values.
// You can construct a concrete instance of `CertManagerCertificateSpecInput` via:
//
//	CertManagerCertificateSpecArgs{...}
type CertManagerCertificateSpecInput interface {
	pulumi.Input

	ToCertManagerCertificateSpecOutput() CertManagerCertificateSpecOutput
	ToCertManagerCertificateSpecOutputWithContext(context.Context) CertManagerCertificateSpecOutput
}

// Automatic TLS server certificate management with cert-manager
type CertManagerCertificateSpecArgs struct {
	// Lifetime of certificate. Must be specified using a Go time.Duration format (h|m|s). E.g. 240h for 240 hours and 45m for 45 minutes.
	Duration pulumi.StringPtrInput `pulumi:"duration"`
	// cert-manager issuerRef.
	IssuerRef CertManagerIssuerRefInput `pulumi:"issuerRef"`
	// Type of certificate private key.
	PrivateKey CertManagerPrivateKeyPtrInput `pulumi:"privateKey"`
	// When to begin renewing certificate. Must be specified using a Go time.Duration format (h|m|s). E.g. 240h for 240 hours and 45m for 45 minutes.
	RenewBefore pulumi.StringPtrInput `pulumi:"renewBefore"`
	// Additional Subject Alternative Names (SANs) to include in the certificate.
	San SanForCertPtrInput `pulumi:"san"`
	// Secret for storing server certificate. Any existing data will be overwritten. This is a reference to the secret through an identifying name, not the secret itself.
	SecretName pulumi.StringPtrInput `pulumi:"secretName"`
}

// Defaults sets the appropriate defaults for CertManagerCertificateSpecArgs
func (val *CertManagerCertificateSpecArgs) Defaults() *CertManagerCertificateSpecArgs {
	if val == nil {
		return nil
	}
	tmp := *val

	return &tmp
}
func (CertManagerCertificateSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CertManagerCertificateSpec)(nil)).Elem()
}

func (i CertManagerCertificateSpecArgs) ToCertManagerCertificateSpecOutput() CertManagerCertificateSpecOutput {
	return i.ToCertManagerCertificateSpecOutputWithContext(context.Background())
}

func (i CertManagerCertificateSpecArgs) ToCertManagerCertificateSpecOutputWithContext(ctx context.Context) CertManagerCertificateSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertManagerCertificateSpecOutput)
}

func (i CertManagerCertificateSpecArgs) ToCertManagerCertificateSpecPtrOutput() CertManagerCertificateSpecPtrOutput {
	return i.ToCertManagerCertificateSpecPtrOutputWithContext(context.Background())
}

func (i CertManagerCertificateSpecArgs) ToCertManagerCertificateSpecPtrOutputWithContext(ctx context.Context) CertManagerCertificateSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertManagerCertificateSpecOutput).ToCertManagerCertificateSpecPtrOutputWithContext(ctx)
}

// CertManagerCertificateSpecPtrInput is an input type that accepts CertManagerCertificateSpecArgs, CertManagerCertificateSpecPtr and CertManagerCertificateSpecPtrOutput values.
// You can construct a concrete instance of `CertManagerCertificateSpecPtrInput` via:
//
//	        CertManagerCertificateSpecArgs{...}
//
//	or:
//
//	        nil
type CertManagerCertificateSpecPtrInput interface {
	pulumi.Input

	ToCertManagerCertificateSpecPtrOutput() CertManagerCertificateSpecPtrOutput
	ToCertManagerCertificateSpecPtrOutputWithContext(context.Context) CertManagerCertificateSpecPtrOutput
}

type certManagerCertificateSpecPtrType CertManagerCertificateSpecArgs

func CertManagerCertificateSpecPtr(v *CertManagerCertificateSpecArgs) CertManagerCertificateSpecPtrInput {
	return (*certManagerCertificateSpecPtrType)(v)
}

func (*certManagerCertificateSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CertManagerCertificateSpec)(nil)).Elem()
}

func (i *certManagerCertificateSpecPtrType) ToCertManagerCertificateSpecPtrOutput() CertManagerCertificateSpecPtrOutput {
	return i.ToCertManagerCertificateSpecPtrOutputWithContext(context.Background())
}

func (i *certManagerCertificateSpecPtrType) ToCertManagerCertificateSpecPtrOutputWithContext(ctx context.Context) CertManagerCertificateSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertManagerCertificateSpecPtrOutput)
}

// Automatic TLS server certificate management with cert-manager
type CertManagerCertificateSpecOutput struct{ *pulumi.OutputState }

func (CertManagerCertificateSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CertManagerCertificateSpec)(nil)).Elem()
}

func (o CertManagerCertificateSpecOutput) ToCertManagerCertificateSpecOutput() CertManagerCertificateSpecOutput {
	return o
}

func (o CertManagerCertificateSpecOutput) ToCertManagerCertificateSpecOutputWithContext(ctx context.Context) CertManagerCertificateSpecOutput {
	return o
}

func (o CertManagerCertificateSpecOutput) ToCertManagerCertificateSpecPtrOutput() CertManagerCertificateSpecPtrOutput {
	return o.ToCertManagerCertificateSpecPtrOutputWithContext(context.Background())
}

func (o CertManagerCertificateSpecOutput) ToCertManagerCertificateSpecPtrOutputWithContext(ctx context.Context) CertManagerCertificateSpecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CertManagerCertificateSpec) *CertManagerCertificateSpec {
		return &v
	}).(CertManagerCertificateSpecPtrOutput)
}

// Lifetime of certificate. Must be specified using a Go time.Duration format (h|m|s). E.g. 240h for 240 hours and 45m for 45 minutes.
func (o CertManagerCertificateSpecOutput) Duration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertManagerCertificateSpec) *string { return v.Duration }).(pulumi.StringPtrOutput)
}

// cert-manager issuerRef.
func (o CertManagerCertificateSpecOutput) IssuerRef() CertManagerIssuerRefOutput {
	return o.ApplyT(func(v CertManagerCertificateSpec) CertManagerIssuerRef { return v.IssuerRef }).(CertManagerIssuerRefOutput)
}

// Type of certificate private key.
func (o CertManagerCertificateSpecOutput) PrivateKey() CertManagerPrivateKeyPtrOutput {
	return o.ApplyT(func(v CertManagerCertificateSpec) *CertManagerPrivateKey { return v.PrivateKey }).(CertManagerPrivateKeyPtrOutput)
}

// When to begin renewing certificate. Must be specified using a Go time.Duration format (h|m|s). E.g. 240h for 240 hours and 45m for 45 minutes.
func (o CertManagerCertificateSpecOutput) RenewBefore() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertManagerCertificateSpec) *string { return v.RenewBefore }).(pulumi.StringPtrOutput)
}

// Additional Subject Alternative Names (SANs) to include in the certificate.
func (o CertManagerCertificateSpecOutput) San() SanForCertPtrOutput {
	return o.ApplyT(func(v CertManagerCertificateSpec) *SanForCert { return v.San }).(SanForCertPtrOutput)
}

// Secret for storing server certificate. Any existing data will be overwritten. This is a reference to the secret through an identifying name, not the secret itself.
func (o CertManagerCertificateSpecOutput) SecretName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertManagerCertificateSpec) *string { return v.SecretName }).(pulumi.StringPtrOutput)
}

type CertManagerCertificateSpecPtrOutput struct{ *pulumi.OutputState }

func (CertManagerCertificateSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CertManagerCertificateSpec)(nil)).Elem()
}

func (o CertManagerCertificateSpecPtrOutput) ToCertManagerCertificateSpecPtrOutput() CertManagerCertificateSpecPtrOutput {
	return o
}

func (o CertManagerCertificateSpecPtrOutput) ToCertManagerCertificateSpecPtrOutputWithContext(ctx context.Context) CertManagerCertificateSpecPtrOutput {
	return o
}

func (o CertManagerCertificateSpecPtrOutput) Elem() CertManagerCertificateSpecOutput {
	return o.ApplyT(func(v *CertManagerCertificateSpec) CertManagerCertificateSpec {
		if v != nil {
			return *v
		}
		var ret CertManagerCertificateSpec
		return ret
	}).(CertManagerCertificateSpecOutput)
}

// Lifetime of certificate. Must be specified using a Go time.Duration format (h|m|s). E.g. 240h for 240 hours and 45m for 45 minutes.
func (o CertManagerCertificateSpecPtrOutput) Duration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertManagerCertificateSpec) *string {
		if v == nil {
			return nil
		}
		return v.Duration
	}).(pulumi.StringPtrOutput)
}

// cert-manager issuerRef.
func (o CertManagerCertificateSpecPtrOutput) IssuerRef() CertManagerIssuerRefPtrOutput {
	return o.ApplyT(func(v *CertManagerCertificateSpec) *CertManagerIssuerRef {
		if v == nil {
			return nil
		}
		return &v.IssuerRef
	}).(CertManagerIssuerRefPtrOutput)
}

// Type of certificate private key.
func (o CertManagerCertificateSpecPtrOutput) PrivateKey() CertManagerPrivateKeyPtrOutput {
	return o.ApplyT(func(v *CertManagerCertificateSpec) *CertManagerPrivateKey {
		if v == nil {
			return nil
		}
		return v.PrivateKey
	}).(CertManagerPrivateKeyPtrOutput)
}

// When to begin renewing certificate. Must be specified using a Go time.Duration format (h|m|s). E.g. 240h for 240 hours and 45m for 45 minutes.
func (o CertManagerCertificateSpecPtrOutput) RenewBefore() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertManagerCertificateSpec) *string {
		if v == nil {
			return nil
		}
		return v.RenewBefore
	}).(pulumi.StringPtrOutput)
}

// Additional Subject Alternative Names (SANs) to include in the certificate.
func (o CertManagerCertificateSpecPtrOutput) San() SanForCertPtrOutput {
	return o.ApplyT(func(v *CertManagerCertificateSpec) *SanForCert {
		if v == nil {
			return nil
		}
		return v.San
	}).(SanForCertPtrOutput)
}

// Secret for storing server certificate. Any existing data will be overwritten. This is a reference to the secret through an identifying name, not the secret itself.
func (o CertManagerCertificateSpecPtrOutput) SecretName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertManagerCertificateSpec) *string {
		if v == nil {
			return nil
		}
		return v.SecretName
	}).(pulumi.StringPtrOutput)
}

// Automatic TLS server certificate management with cert-manager
type CertManagerCertificateSpecResponse struct {
	// Lifetime of certificate. Must be specified using a Go time.Duration format (h|m|s). E.g. 240h for 240 hours and 45m for 45 minutes.
	Duration *string `pulumi:"duration"`
	// cert-manager issuerRef.
	IssuerRef CertManagerIssuerRefResponse `pulumi:"issuerRef"`
	// Type of certificate private key.
	PrivateKey *CertManagerPrivateKeyResponse `pulumi:"privateKey"`
	// When to begin renewing certificate. Must be specified using a Go time.Duration format (h|m|s). E.g. 240h for 240 hours and 45m for 45 minutes.
	RenewBefore *string `pulumi:"renewBefore"`
	// Additional Subject Alternative Names (SANs) to include in the certificate.
	San *SanForCertResponse `pulumi:"san"`
	// Secret for storing server certificate. Any existing data will be overwritten. This is a reference to the secret through an identifying name, not the secret itself.
	SecretName *string `pulumi:"secretName"`
}

// Defaults sets the appropriate defaults for CertManagerCertificateSpecResponse
func (val *CertManagerCertificateSpecResponse) Defaults() *CertManagerCertificateSpecResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.IssuerRef = *tmp.IssuerRef.Defaults()

	return &tmp
}

// Automatic TLS server certificate management with cert-manager
type CertManagerCertificateSpecResponseOutput struct{ *pulumi.OutputState }

func (CertManagerCertificateSpecResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CertManagerCertificateSpecResponse)(nil)).Elem()
}

func (o CertManagerCertificateSpecResponseOutput) ToCertManagerCertificateSpecResponseOutput() CertManagerCertificateSpecResponseOutput {
	return o
}

func (o CertManagerCertificateSpecResponseOutput) ToCertManagerCertificateSpecResponseOutputWithContext(ctx context.Context) CertManagerCertificateSpecResponseOutput {
	return o
}

// Lifetime of certificate. Must be specified using a Go time.Duration format (h|m|s). E.g. 240h for 240 hours and 45m for 45 minutes.
func (o CertManagerCertificateSpecResponseOutput) Duration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertManagerCertificateSpecResponse) *string { return v.Duration }).(pulumi.StringPtrOutput)
}

// cert-manager issuerRef.
func (o CertManagerCertificateSpecResponseOutput) IssuerRef() CertManagerIssuerRefResponseOutput {
	return o.ApplyT(func(v CertManagerCertificateSpecResponse) CertManagerIssuerRefResponse { return v.IssuerRef }).(CertManagerIssuerRefResponseOutput)
}

// Type of certificate private key.
func (o CertManagerCertificateSpecResponseOutput) PrivateKey() CertManagerPrivateKeyResponsePtrOutput {
	return o.ApplyT(func(v CertManagerCertificateSpecResponse) *CertManagerPrivateKeyResponse { return v.PrivateKey }).(CertManagerPrivateKeyResponsePtrOutput)
}

// When to begin renewing certificate. Must be specified using a Go time.Duration format (h|m|s). E.g. 240h for 240 hours and 45m for 45 minutes.
func (o CertManagerCertificateSpecResponseOutput) RenewBefore() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertManagerCertificateSpecResponse) *string { return v.RenewBefore }).(pulumi.StringPtrOutput)
}

// Additional Subject Alternative Names (SANs) to include in the certificate.
func (o CertManagerCertificateSpecResponseOutput) San() SanForCertResponsePtrOutput {
	return o.ApplyT(func(v CertManagerCertificateSpecResponse) *SanForCertResponse { return v.San }).(SanForCertResponsePtrOutput)
}

// Secret for storing server certificate. Any existing data will be overwritten. This is a reference to the secret through an identifying name, not the secret itself.
func (o CertManagerCertificateSpecResponseOutput) SecretName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertManagerCertificateSpecResponse) *string { return v.SecretName }).(pulumi.StringPtrOutput)
}

type CertManagerCertificateSpecResponsePtrOutput struct{ *pulumi.OutputState }

func (CertManagerCertificateSpecResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CertManagerCertificateSpecResponse)(nil)).Elem()
}

func (o CertManagerCertificateSpecResponsePtrOutput) ToCertManagerCertificateSpecResponsePtrOutput() CertManagerCertificateSpecResponsePtrOutput {
	return o
}

func (o CertManagerCertificateSpecResponsePtrOutput) ToCertManagerCertificateSpecResponsePtrOutputWithContext(ctx context.Context) CertManagerCertificateSpecResponsePtrOutput {
	return o
}

func (o CertManagerCertificateSpecResponsePtrOutput) Elem() CertManagerCertificateSpecResponseOutput {
	return o.ApplyT(func(v *CertManagerCertificateSpecResponse) CertManagerCertificateSpecResponse {
		if v != nil {
			return *v
		}
		var ret CertManagerCertificateSpecResponse
		return ret
	}).(CertManagerCertificateSpecResponseOutput)
}

// Lifetime of certificate. Must be specified using a Go time.Duration format (h|m|s). E.g. 240h for 240 hours and 45m for 45 minutes.
func (o CertManagerCertificateSpecResponsePtrOutput) Duration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertManagerCertificateSpecResponse) *string {
		if v == nil {
			return nil
		}
		return v.Duration
	}).(pulumi.StringPtrOutput)
}

// cert-manager issuerRef.
func (o CertManagerCertificateSpecResponsePtrOutput) IssuerRef() CertManagerIssuerRefResponsePtrOutput {
	return o.ApplyT(func(v *CertManagerCertificateSpecResponse) *CertManagerIssuerRefResponse {
		if v == nil {
			return nil
		}
		return &v.IssuerRef
	}).(CertManagerIssuerRefResponsePtrOutput)
}

// Type of certificate private key.
func (o CertManagerCertificateSpecResponsePtrOutput) PrivateKey() CertManagerPrivateKeyResponsePtrOutput {
	return o.ApplyT(func(v *CertManagerCertificateSpecResponse) *CertManagerPrivateKeyResponse {
		if v == nil {
			return nil
		}
		return v.PrivateKey
	}).(CertManagerPrivateKeyResponsePtrOutput)
}

// When to begin renewing certificate. Must be specified using a Go time.Duration format (h|m|s). E.g. 240h for 240 hours and 45m for 45 minutes.
func (o CertManagerCertificateSpecResponsePtrOutput) RenewBefore() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertManagerCertificateSpecResponse) *string {
		if v == nil {
			return nil
		}
		return v.RenewBefore
	}).(pulumi.StringPtrOutput)
}

// Additional Subject Alternative Names (SANs) to include in the certificate.
func (o CertManagerCertificateSpecResponsePtrOutput) San() SanForCertResponsePtrOutput {
	return o.ApplyT(func(v *CertManagerCertificateSpecResponse) *SanForCertResponse {
		if v == nil {
			return nil
		}
		return v.San
	}).(SanForCertResponsePtrOutput)
}

// Secret for storing server certificate. Any existing data will be overwritten. This is a reference to the secret through an identifying name, not the secret itself.
func (o CertManagerCertificateSpecResponsePtrOutput) SecretName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertManagerCertificateSpecResponse) *string {
		if v == nil {
			return nil
		}
		return v.SecretName
	}).(pulumi.StringPtrOutput)
}

// Cert-Manager issuerRef properties
type CertManagerIssuerRef struct {
	// group of issuer.
	Group string `pulumi:"group"`
	// kind of issuer (Issuer or ClusterIssuer).
	Kind string `pulumi:"kind"`
	// name of issuer.
	Name string `pulumi:"name"`
}

// Defaults sets the appropriate defaults for CertManagerIssuerRef
func (val *CertManagerIssuerRef) Defaults() *CertManagerIssuerRef {
	if val == nil {
		return nil
	}
	tmp := *val
	if utilities.IsZero(tmp.Group) {
		tmp.Group = "cert-manager.io"
	}
	return &tmp
}

// CertManagerIssuerRefInput is an input type that accepts CertManagerIssuerRefArgs and CertManagerIssuerRefOutput values.
// You can construct a concrete instance of `CertManagerIssuerRefInput` via:
//
//	CertManagerIssuerRefArgs{...}
type CertManagerIssuerRefInput interface {
	pulumi.Input

	ToCertManagerIssuerRefOutput() CertManagerIssuerRefOutput
	ToCertManagerIssuerRefOutputWithContext(context.Context) CertManagerIssuerRefOutput
}

// Cert-Manager issuerRef properties
type CertManagerIssuerRefArgs struct {
	// group of issuer.
	Group pulumi.StringInput `pulumi:"group"`
	// kind of issuer (Issuer or ClusterIssuer).
	Kind pulumi.StringInput `pulumi:"kind"`
	// name of issuer.
	Name pulumi.StringInput `pulumi:"name"`
}

// Defaults sets the appropriate defaults for CertManagerIssuerRefArgs
func (val *CertManagerIssuerRefArgs) Defaults() *CertManagerIssuerRefArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Group == nil {
		tmp.Group = pulumi.String("cert-manager.io")
	}
	return &tmp
}
func (CertManagerIssuerRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CertManagerIssuerRef)(nil)).Elem()
}

func (i CertManagerIssuerRefArgs) ToCertManagerIssuerRefOutput() CertManagerIssuerRefOutput {
	return i.ToCertManagerIssuerRefOutputWithContext(context.Background())
}

func (i CertManagerIssuerRefArgs) ToCertManagerIssuerRefOutputWithContext(ctx context.Context) CertManagerIssuerRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertManagerIssuerRefOutput)
}

func (i CertManagerIssuerRefArgs) ToCertManagerIssuerRefPtrOutput() CertManagerIssuerRefPtrOutput {
	return i.ToCertManagerIssuerRefPtrOutputWithContext(context.Background())
}

func (i CertManagerIssuerRefArgs) ToCertManagerIssuerRefPtrOutputWithContext(ctx context.Context) CertManagerIssuerRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertManagerIssuerRefOutput).ToCertManagerIssuerRefPtrOutputWithContext(ctx)
}

// CertManagerIssuerRefPtrInput is an input type that accepts CertManagerIssuerRefArgs, CertManagerIssuerRefPtr and CertManagerIssuerRefPtrOutput values.
// You can construct a concrete instance of `CertManagerIssuerRefPtrInput` via:
//
//	        CertManagerIssuerRefArgs{...}
//
//	or:
//
//	        nil
type CertManagerIssuerRefPtrInput interface {
	pulumi.Input

	ToCertManagerIssuerRefPtrOutput() CertManagerIssuerRefPtrOutput
	ToCertManagerIssuerRefPtrOutputWithContext(context.Context) CertManagerIssuerRefPtrOutput
}

type certManagerIssuerRefPtrType CertManagerIssuerRefArgs

func CertManagerIssuerRefPtr(v *CertManagerIssuerRefArgs) CertManagerIssuerRefPtrInput {
	return (*certManagerIssuerRefPtrType)(v)
}

func (*certManagerIssuerRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CertManagerIssuerRef)(nil)).Elem()
}

func (i *certManagerIssuerRefPtrType) ToCertManagerIssuerRefPtrOutput() CertManagerIssuerRefPtrOutput {
	return i.ToCertManagerIssuerRefPtrOutputWithContext(context.Background())
}

func (i *certManagerIssuerRefPtrType) ToCertManagerIssuerRefPtrOutputWithContext(ctx context.Context) CertManagerIssuerRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertManagerIssuerRefPtrOutput)
}

// Cert-Manager issuerRef properties
type CertManagerIssuerRefOutput struct{ *pulumi.OutputState }

func (CertManagerIssuerRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CertManagerIssuerRef)(nil)).Elem()
}

func (o CertManagerIssuerRefOutput) ToCertManagerIssuerRefOutput() CertManagerIssuerRefOutput {
	return o
}

func (o CertManagerIssuerRefOutput) ToCertManagerIssuerRefOutputWithContext(ctx context.Context) CertManagerIssuerRefOutput {
	return o
}

func (o CertManagerIssuerRefOutput) ToCertManagerIssuerRefPtrOutput() CertManagerIssuerRefPtrOutput {
	return o.ToCertManagerIssuerRefPtrOutputWithContext(context.Background())
}

func (o CertManagerIssuerRefOutput) ToCertManagerIssuerRefPtrOutputWithContext(ctx context.Context) CertManagerIssuerRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CertManagerIssuerRef) *CertManagerIssuerRef {
		return &v
	}).(CertManagerIssuerRefPtrOutput)
}

// group of issuer.
func (o CertManagerIssuerRefOutput) Group() pulumi.StringOutput {
	return o.ApplyT(func(v CertManagerIssuerRef) string { return v.Group }).(pulumi.StringOutput)
}

// kind of issuer (Issuer or ClusterIssuer).
func (o CertManagerIssuerRefOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v CertManagerIssuerRef) string { return v.Kind }).(pulumi.StringOutput)
}

// name of issuer.
func (o CertManagerIssuerRefOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v CertManagerIssuerRef) string { return v.Name }).(pulumi.StringOutput)
}

type CertManagerIssuerRefPtrOutput struct{ *pulumi.OutputState }

func (CertManagerIssuerRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CertManagerIssuerRef)(nil)).Elem()
}

func (o CertManagerIssuerRefPtrOutput) ToCertManagerIssuerRefPtrOutput() CertManagerIssuerRefPtrOutput {
	return o
}

func (o CertManagerIssuerRefPtrOutput) ToCertManagerIssuerRefPtrOutputWithContext(ctx context.Context) CertManagerIssuerRefPtrOutput {
	return o
}

func (o CertManagerIssuerRefPtrOutput) Elem() CertManagerIssuerRefOutput {
	return o.ApplyT(func(v *CertManagerIssuerRef) CertManagerIssuerRef {
		if v != nil {
			return *v
		}
		var ret CertManagerIssuerRef
		return ret
	}).(CertManagerIssuerRefOutput)
}

// group of issuer.
func (o CertManagerIssuerRefPtrOutput) Group() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertManagerIssuerRef) *string {
		if v == nil {
			return nil
		}
		return &v.Group
	}).(pulumi.StringPtrOutput)
}

// kind of issuer (Issuer or ClusterIssuer).
func (o CertManagerIssuerRefPtrOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertManagerIssuerRef) *string {
		if v == nil {
			return nil
		}
		return &v.Kind
	}).(pulumi.StringPtrOutput)
}

// name of issuer.
func (o CertManagerIssuerRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertManagerIssuerRef) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Cert-Manager issuerRef properties
type CertManagerIssuerRefResponse struct {
	// group of issuer.
	Group string `pulumi:"group"`
	// kind of issuer (Issuer or ClusterIssuer).
	Kind string `pulumi:"kind"`
	// name of issuer.
	Name string `pulumi:"name"`
}

// Defaults sets the appropriate defaults for CertManagerIssuerRefResponse
func (val *CertManagerIssuerRefResponse) Defaults() *CertManagerIssuerRefResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if utilities.IsZero(tmp.Group) {
		tmp.Group = "cert-manager.io"
	}
	return &tmp
}

// Cert-Manager issuerRef properties
type CertManagerIssuerRefResponseOutput struct{ *pulumi.OutputState }

func (CertManagerIssuerRefResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CertManagerIssuerRefResponse)(nil)).Elem()
}

func (o CertManagerIssuerRefResponseOutput) ToCertManagerIssuerRefResponseOutput() CertManagerIssuerRefResponseOutput {
	return o
}

func (o CertManagerIssuerRefResponseOutput) ToCertManagerIssuerRefResponseOutputWithContext(ctx context.Context) CertManagerIssuerRefResponseOutput {
	return o
}

// group of issuer.
func (o CertManagerIssuerRefResponseOutput) Group() pulumi.StringOutput {
	return o.ApplyT(func(v CertManagerIssuerRefResponse) string { return v.Group }).(pulumi.StringOutput)
}

// kind of issuer (Issuer or ClusterIssuer).
func (o CertManagerIssuerRefResponseOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v CertManagerIssuerRefResponse) string { return v.Kind }).(pulumi.StringOutput)
}

// name of issuer.
func (o CertManagerIssuerRefResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v CertManagerIssuerRefResponse) string { return v.Name }).(pulumi.StringOutput)
}

type CertManagerIssuerRefResponsePtrOutput struct{ *pulumi.OutputState }

func (CertManagerIssuerRefResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CertManagerIssuerRefResponse)(nil)).Elem()
}

func (o CertManagerIssuerRefResponsePtrOutput) ToCertManagerIssuerRefResponsePtrOutput() CertManagerIssuerRefResponsePtrOutput {
	return o
}

func (o CertManagerIssuerRefResponsePtrOutput) ToCertManagerIssuerRefResponsePtrOutputWithContext(ctx context.Context) CertManagerIssuerRefResponsePtrOutput {
	return o
}

func (o CertManagerIssuerRefResponsePtrOutput) Elem() CertManagerIssuerRefResponseOutput {
	return o.ApplyT(func(v *CertManagerIssuerRefResponse) CertManagerIssuerRefResponse {
		if v != nil {
			return *v
		}
		var ret CertManagerIssuerRefResponse
		return ret
	}).(CertManagerIssuerRefResponseOutput)
}

// group of issuer.
func (o CertManagerIssuerRefResponsePtrOutput) Group() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertManagerIssuerRefResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Group
	}).(pulumi.StringPtrOutput)
}

// kind of issuer (Issuer or ClusterIssuer).
func (o CertManagerIssuerRefResponsePtrOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertManagerIssuerRefResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Kind
	}).(pulumi.StringPtrOutput)
}

// name of issuer.
func (o CertManagerIssuerRefResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertManagerIssuerRefResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Cert Manager private key properties
type CertManagerPrivateKey struct {
	// algorithm for private key.
	Algorithm string `pulumi:"algorithm"`
	// cert-manager private key rotationPolicy.
	RotationPolicy string `pulumi:"rotationPolicy"`
}

// CertManagerPrivateKeyInput is an input type that accepts CertManagerPrivateKeyArgs and CertManagerPrivateKeyOutput values.
// You can construct a concrete instance of `CertManagerPrivateKeyInput` via:
//
//	CertManagerPrivateKeyArgs{...}
type CertManagerPrivateKeyInput interface {
	pulumi.Input

	ToCertManagerPrivateKeyOutput() CertManagerPrivateKeyOutput
	ToCertManagerPrivateKeyOutputWithContext(context.Context) CertManagerPrivateKeyOutput
}

// Cert Manager private key properties
type CertManagerPrivateKeyArgs struct {
	// algorithm for private key.
	Algorithm pulumi.StringInput `pulumi:"algorithm"`
	// cert-manager private key rotationPolicy.
	RotationPolicy pulumi.StringInput `pulumi:"rotationPolicy"`
}

func (CertManagerPrivateKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CertManagerPrivateKey)(nil)).Elem()
}

func (i CertManagerPrivateKeyArgs) ToCertManagerPrivateKeyOutput() CertManagerPrivateKeyOutput {
	return i.ToCertManagerPrivateKeyOutputWithContext(context.Background())
}

func (i CertManagerPrivateKeyArgs) ToCertManagerPrivateKeyOutputWithContext(ctx context.Context) CertManagerPrivateKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertManagerPrivateKeyOutput)
}

func (i CertManagerPrivateKeyArgs) ToCertManagerPrivateKeyPtrOutput() CertManagerPrivateKeyPtrOutput {
	return i.ToCertManagerPrivateKeyPtrOutputWithContext(context.Background())
}

func (i CertManagerPrivateKeyArgs) ToCertManagerPrivateKeyPtrOutputWithContext(ctx context.Context) CertManagerPrivateKeyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertManagerPrivateKeyOutput).ToCertManagerPrivateKeyPtrOutputWithContext(ctx)
}

// CertManagerPrivateKeyPtrInput is an input type that accepts CertManagerPrivateKeyArgs, CertManagerPrivateKeyPtr and CertManagerPrivateKeyPtrOutput values.
// You can construct a concrete instance of `CertManagerPrivateKeyPtrInput` via:
//
//	        CertManagerPrivateKeyArgs{...}
//
//	or:
//
//	        nil
type CertManagerPrivateKeyPtrInput interface {
	pulumi.Input

	ToCertManagerPrivateKeyPtrOutput() CertManagerPrivateKeyPtrOutput
	ToCertManagerPrivateKeyPtrOutputWithContext(context.Context) CertManagerPrivateKeyPtrOutput
}

type certManagerPrivateKeyPtrType CertManagerPrivateKeyArgs

func CertManagerPrivateKeyPtr(v *CertManagerPrivateKeyArgs) CertManagerPrivateKeyPtrInput {
	return (*certManagerPrivateKeyPtrType)(v)
}

func (*certManagerPrivateKeyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CertManagerPrivateKey)(nil)).Elem()
}

func (i *certManagerPrivateKeyPtrType) ToCertManagerPrivateKeyPtrOutput() CertManagerPrivateKeyPtrOutput {
	return i.ToCertManagerPrivateKeyPtrOutputWithContext(context.Background())
}

func (i *certManagerPrivateKeyPtrType) ToCertManagerPrivateKeyPtrOutputWithContext(ctx context.Context) CertManagerPrivateKeyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertManagerPrivateKeyPtrOutput)
}

// Cert Manager private key properties
type CertManagerPrivateKeyOutput struct{ *pulumi.OutputState }

func (CertManagerPrivateKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CertManagerPrivateKey)(nil)).Elem()
}

func (o CertManagerPrivateKeyOutput) ToCertManagerPrivateKeyOutput() CertManagerPrivateKeyOutput {
	return o
}

func (o CertManagerPrivateKeyOutput) ToCertManagerPrivateKeyOutputWithContext(ctx context.Context) CertManagerPrivateKeyOutput {
	return o
}

func (o CertManagerPrivateKeyOutput) ToCertManagerPrivateKeyPtrOutput() CertManagerPrivateKeyPtrOutput {
	return o.ToCertManagerPrivateKeyPtrOutputWithContext(context.Background())
}

func (o CertManagerPrivateKeyOutput) ToCertManagerPrivateKeyPtrOutputWithContext(ctx context.Context) CertManagerPrivateKeyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CertManagerPrivateKey) *CertManagerPrivateKey {
		return &v
	}).(CertManagerPrivateKeyPtrOutput)
}

// algorithm for private key.
func (o CertManagerPrivateKeyOutput) Algorithm() pulumi.StringOutput {
	return o.ApplyT(func(v CertManagerPrivateKey) string { return v.Algorithm }).(pulumi.StringOutput)
}

// cert-manager private key rotationPolicy.
func (o CertManagerPrivateKeyOutput) RotationPolicy() pulumi.StringOutput {
	return o.ApplyT(func(v CertManagerPrivateKey) string { return v.RotationPolicy }).(pulumi.StringOutput)
}

type CertManagerPrivateKeyPtrOutput struct{ *pulumi.OutputState }

func (CertManagerPrivateKeyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CertManagerPrivateKey)(nil)).Elem()
}

func (o CertManagerPrivateKeyPtrOutput) ToCertManagerPrivateKeyPtrOutput() CertManagerPrivateKeyPtrOutput {
	return o
}

func (o CertManagerPrivateKeyPtrOutput) ToCertManagerPrivateKeyPtrOutputWithContext(ctx context.Context) CertManagerPrivateKeyPtrOutput {
	return o
}

func (o CertManagerPrivateKeyPtrOutput) Elem() CertManagerPrivateKeyOutput {
	return o.ApplyT(func(v *CertManagerPrivateKey) CertManagerPrivateKey {
		if v != nil {
			return *v
		}
		var ret CertManagerPrivateKey
		return ret
	}).(CertManagerPrivateKeyOutput)
}

// algorithm for private key.
func (o CertManagerPrivateKeyPtrOutput) Algorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertManagerPrivateKey) *string {
		if v == nil {
			return nil
		}
		return &v.Algorithm
	}).(pulumi.StringPtrOutput)
}

// cert-manager private key rotationPolicy.
func (o CertManagerPrivateKeyPtrOutput) RotationPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertManagerPrivateKey) *string {
		if v == nil {
			return nil
		}
		return &v.RotationPolicy
	}).(pulumi.StringPtrOutput)
}

// Cert Manager private key properties
type CertManagerPrivateKeyResponse struct {
	// algorithm for private key.
	Algorithm string `pulumi:"algorithm"`
	// cert-manager private key rotationPolicy.
	RotationPolicy string `pulumi:"rotationPolicy"`
}

// Cert Manager private key properties
type CertManagerPrivateKeyResponseOutput struct{ *pulumi.OutputState }

func (CertManagerPrivateKeyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CertManagerPrivateKeyResponse)(nil)).Elem()
}

func (o CertManagerPrivateKeyResponseOutput) ToCertManagerPrivateKeyResponseOutput() CertManagerPrivateKeyResponseOutput {
	return o
}

func (o CertManagerPrivateKeyResponseOutput) ToCertManagerPrivateKeyResponseOutputWithContext(ctx context.Context) CertManagerPrivateKeyResponseOutput {
	return o
}

// algorithm for private key.
func (o CertManagerPrivateKeyResponseOutput) Algorithm() pulumi.StringOutput {
	return o.ApplyT(func(v CertManagerPrivateKeyResponse) string { return v.Algorithm }).(pulumi.StringOutput)
}

// cert-manager private key rotationPolicy.
func (o CertManagerPrivateKeyResponseOutput) RotationPolicy() pulumi.StringOutput {
	return o.ApplyT(func(v CertManagerPrivateKeyResponse) string { return v.RotationPolicy }).(pulumi.StringOutput)
}

type CertManagerPrivateKeyResponsePtrOutput struct{ *pulumi.OutputState }

func (CertManagerPrivateKeyResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CertManagerPrivateKeyResponse)(nil)).Elem()
}

func (o CertManagerPrivateKeyResponsePtrOutput) ToCertManagerPrivateKeyResponsePtrOutput() CertManagerPrivateKeyResponsePtrOutput {
	return o
}

func (o CertManagerPrivateKeyResponsePtrOutput) ToCertManagerPrivateKeyResponsePtrOutputWithContext(ctx context.Context) CertManagerPrivateKeyResponsePtrOutput {
	return o
}

func (o CertManagerPrivateKeyResponsePtrOutput) Elem() CertManagerPrivateKeyResponseOutput {
	return o.ApplyT(func(v *CertManagerPrivateKeyResponse) CertManagerPrivateKeyResponse {
		if v != nil {
			return *v
		}
		var ret CertManagerPrivateKeyResponse
		return ret
	}).(CertManagerPrivateKeyResponseOutput)
}

// algorithm for private key.
func (o CertManagerPrivateKeyResponsePtrOutput) Algorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertManagerPrivateKeyResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Algorithm
	}).(pulumi.StringPtrOutput)
}

// cert-manager private key rotationPolicy.
func (o CertManagerPrivateKeyResponsePtrOutput) RotationPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertManagerPrivateKeyResponse) *string {
		if v == nil {
			return nil
		}
		return &v.RotationPolicy
	}).(pulumi.StringPtrOutput)
}

// The settings of Client Config.
type ClientConfig struct {
	// Upper bound of a client's Keep Alive, in seconds.
	MaxKeepAliveSeconds *int `pulumi:"maxKeepAliveSeconds"`
	// Upper bound of Message Expiry Interval, in seconds.
	MaxMessageExpirySeconds *int `pulumi:"maxMessageExpirySeconds"`
	// Max message size for a packet in Bytes.
	MaxPacketSizeBytes *int `pulumi:"maxPacketSizeBytes"`
	// Upper bound of Receive Maximum that a client can request in the CONNECT packet.
	MaxReceiveMaximum *int `pulumi:"maxReceiveMaximum"`
	// Upper bound of Session Expiry Interval, in seconds.
	MaxSessionExpirySeconds *int `pulumi:"maxSessionExpirySeconds"`
	// The limit on the number of queued messages for a subscriber.
	SubscriberQueueLimit *SubscriberQueueLimit `pulumi:"subscriberQueueLimit"`
}

// Defaults sets the appropriate defaults for ClientConfig
func (val *ClientConfig) Defaults() *ClientConfig {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.SubscriberQueueLimit = tmp.SubscriberQueueLimit.Defaults()

	return &tmp
}

// ClientConfigInput is an input type that accepts ClientConfigArgs and ClientConfigOutput values.
// You can construct a concrete instance of `ClientConfigInput` via:
//
//	ClientConfigArgs{...}
type ClientConfigInput interface {
	pulumi.Input

	ToClientConfigOutput() ClientConfigOutput
	ToClientConfigOutputWithContext(context.Context) ClientConfigOutput
}

// The settings of Client Config.
type ClientConfigArgs struct {
	// Upper bound of a client's Keep Alive, in seconds.
	MaxKeepAliveSeconds pulumi.IntPtrInput `pulumi:"maxKeepAliveSeconds"`
	// Upper bound of Message Expiry Interval, in seconds.
	MaxMessageExpirySeconds pulumi.IntPtrInput `pulumi:"maxMessageExpirySeconds"`
	// Max message size for a packet in Bytes.
	MaxPacketSizeBytes pulumi.IntPtrInput `pulumi:"maxPacketSizeBytes"`
	// Upper bound of Receive Maximum that a client can request in the CONNECT packet.
	MaxReceiveMaximum pulumi.IntPtrInput `pulumi:"maxReceiveMaximum"`
	// Upper bound of Session Expiry Interval, in seconds.
	MaxSessionExpirySeconds pulumi.IntPtrInput `pulumi:"maxSessionExpirySeconds"`
	// The limit on the number of queued messages for a subscriber.
	SubscriberQueueLimit SubscriberQueueLimitPtrInput `pulumi:"subscriberQueueLimit"`
}

// Defaults sets the appropriate defaults for ClientConfigArgs
func (val *ClientConfigArgs) Defaults() *ClientConfigArgs {
	if val == nil {
		return nil
	}
	tmp := *val

	return &tmp
}
func (ClientConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClientConfig)(nil)).Elem()
}

func (i ClientConfigArgs) ToClientConfigOutput() ClientConfigOutput {
	return i.ToClientConfigOutputWithContext(context.Background())
}

func (i ClientConfigArgs) ToClientConfigOutputWithContext(ctx context.Context) ClientConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientConfigOutput)
}

func (i ClientConfigArgs) ToClientConfigPtrOutput() ClientConfigPtrOutput {
	return i.ToClientConfigPtrOutputWithContext(context.Background())
}

func (i ClientConfigArgs) ToClientConfigPtrOutputWithContext(ctx context.Context) ClientConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientConfigOutput).ToClientConfigPtrOutputWithContext(ctx)
}

// ClientConfigPtrInput is an input type that accepts ClientConfigArgs, ClientConfigPtr and ClientConfigPtrOutput values.
// You can construct a concrete instance of `ClientConfigPtrInput` via:
//
//	        ClientConfigArgs{...}
//
//	or:
//
//	        nil
type ClientConfigPtrInput interface {
	pulumi.Input

	ToClientConfigPtrOutput() ClientConfigPtrOutput
	ToClientConfigPtrOutputWithContext(context.Context) ClientConfigPtrOutput
}

type clientConfigPtrType ClientConfigArgs

func ClientConfigPtr(v *ClientConfigArgs) ClientConfigPtrInput {
	return (*clientConfigPtrType)(v)
}

func (*clientConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClientConfig)(nil)).Elem()
}

func (i *clientConfigPtrType) ToClientConfigPtrOutput() ClientConfigPtrOutput {
	return i.ToClientConfigPtrOutputWithContext(context.Background())
}

func (i *clientConfigPtrType) ToClientConfigPtrOutputWithContext(ctx context.Context) ClientConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientConfigPtrOutput)
}

// The settings of Client Config.
type ClientConfigOutput struct{ *pulumi.OutputState }

func (ClientConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClientConfig)(nil)).Elem()
}

func (o ClientConfigOutput) ToClientConfigOutput() ClientConfigOutput {
	return o
}

func (o ClientConfigOutput) ToClientConfigOutputWithContext(ctx context.Context) ClientConfigOutput {
	return o
}

func (o ClientConfigOutput) ToClientConfigPtrOutput() ClientConfigPtrOutput {
	return o.ToClientConfigPtrOutputWithContext(context.Background())
}

func (o ClientConfigOutput) ToClientConfigPtrOutputWithContext(ctx context.Context) ClientConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClientConfig) *ClientConfig {
		return &v
	}).(ClientConfigPtrOutput)
}

// Upper bound of a client's Keep Alive, in seconds.
func (o ClientConfigOutput) MaxKeepAliveSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClientConfig) *int { return v.MaxKeepAliveSeconds }).(pulumi.IntPtrOutput)
}

// Upper bound of Message Expiry Interval, in seconds.
func (o ClientConfigOutput) MaxMessageExpirySeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClientConfig) *int { return v.MaxMessageExpirySeconds }).(pulumi.IntPtrOutput)
}

// Max message size for a packet in Bytes.
func (o ClientConfigOutput) MaxPacketSizeBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClientConfig) *int { return v.MaxPacketSizeBytes }).(pulumi.IntPtrOutput)
}

// Upper bound of Receive Maximum that a client can request in the CONNECT packet.
func (o ClientConfigOutput) MaxReceiveMaximum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClientConfig) *int { return v.MaxReceiveMaximum }).(pulumi.IntPtrOutput)
}

// Upper bound of Session Expiry Interval, in seconds.
func (o ClientConfigOutput) MaxSessionExpirySeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClientConfig) *int { return v.MaxSessionExpirySeconds }).(pulumi.IntPtrOutput)
}

// The limit on the number of queued messages for a subscriber.
func (o ClientConfigOutput) SubscriberQueueLimit() SubscriberQueueLimitPtrOutput {
	return o.ApplyT(func(v ClientConfig) *SubscriberQueueLimit { return v.SubscriberQueueLimit }).(SubscriberQueueLimitPtrOutput)
}

type ClientConfigPtrOutput struct{ *pulumi.OutputState }

func (ClientConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClientConfig)(nil)).Elem()
}

func (o ClientConfigPtrOutput) ToClientConfigPtrOutput() ClientConfigPtrOutput {
	return o
}

func (o ClientConfigPtrOutput) ToClientConfigPtrOutputWithContext(ctx context.Context) ClientConfigPtrOutput {
	return o
}

func (o ClientConfigPtrOutput) Elem() ClientConfigOutput {
	return o.ApplyT(func(v *ClientConfig) ClientConfig {
		if v != nil {
			return *v
		}
		var ret ClientConfig
		return ret
	}).(ClientConfigOutput)
}

// Upper bound of a client's Keep Alive, in seconds.
func (o ClientConfigPtrOutput) MaxKeepAliveSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClientConfig) *int {
		if v == nil {
			return nil
		}
		return v.MaxKeepAliveSeconds
	}).(pulumi.IntPtrOutput)
}

// Upper bound of Message Expiry Interval, in seconds.
func (o ClientConfigPtrOutput) MaxMessageExpirySeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClientConfig) *int {
		if v == nil {
			return nil
		}
		return v.MaxMessageExpirySeconds
	}).(pulumi.IntPtrOutput)
}

// Max message size for a packet in Bytes.
func (o ClientConfigPtrOutput) MaxPacketSizeBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClientConfig) *int {
		if v == nil {
			return nil
		}
		return v.MaxPacketSizeBytes
	}).(pulumi.IntPtrOutput)
}

// Upper bound of Receive Maximum that a client can request in the CONNECT packet.
func (o ClientConfigPtrOutput) MaxReceiveMaximum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClientConfig) *int {
		if v == nil {
			return nil
		}
		return v.MaxReceiveMaximum
	}).(pulumi.IntPtrOutput)
}

// Upper bound of Session Expiry Interval, in seconds.
func (o ClientConfigPtrOutput) MaxSessionExpirySeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClientConfig) *int {
		if v == nil {
			return nil
		}
		return v.MaxSessionExpirySeconds
	}).(pulumi.IntPtrOutput)
}

// The limit on the number of queued messages for a subscriber.
func (o ClientConfigPtrOutput) SubscriberQueueLimit() SubscriberQueueLimitPtrOutput {
	return o.ApplyT(func(v *ClientConfig) *SubscriberQueueLimit {
		if v == nil {
			return nil
		}
		return v.SubscriberQueueLimit
	}).(SubscriberQueueLimitPtrOutput)
}

// The settings of Client Config.
type ClientConfigResponse struct {
	// Upper bound of a client's Keep Alive, in seconds.
	MaxKeepAliveSeconds *int `pulumi:"maxKeepAliveSeconds"`
	// Upper bound of Message Expiry Interval, in seconds.
	MaxMessageExpirySeconds *int `pulumi:"maxMessageExpirySeconds"`
	// Max message size for a packet in Bytes.
	MaxPacketSizeBytes *int `pulumi:"maxPacketSizeBytes"`
	// Upper bound of Receive Maximum that a client can request in the CONNECT packet.
	MaxReceiveMaximum *int `pulumi:"maxReceiveMaximum"`
	// Upper bound of Session Expiry Interval, in seconds.
	MaxSessionExpirySeconds *int `pulumi:"maxSessionExpirySeconds"`
	// The limit on the number of queued messages for a subscriber.
	SubscriberQueueLimit *SubscriberQueueLimitResponse `pulumi:"subscriberQueueLimit"`
}

// Defaults sets the appropriate defaults for ClientConfigResponse
func (val *ClientConfigResponse) Defaults() *ClientConfigResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.SubscriberQueueLimit = tmp.SubscriberQueueLimit.Defaults()

	return &tmp
}

// The settings of Client Config.
type ClientConfigResponseOutput struct{ *pulumi.OutputState }

func (ClientConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClientConfigResponse)(nil)).Elem()
}

func (o ClientConfigResponseOutput) ToClientConfigResponseOutput() ClientConfigResponseOutput {
	return o
}

func (o ClientConfigResponseOutput) ToClientConfigResponseOutputWithContext(ctx context.Context) ClientConfigResponseOutput {
	return o
}

// Upper bound of a client's Keep Alive, in seconds.
func (o ClientConfigResponseOutput) MaxKeepAliveSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClientConfigResponse) *int { return v.MaxKeepAliveSeconds }).(pulumi.IntPtrOutput)
}

// Upper bound of Message Expiry Interval, in seconds.
func (o ClientConfigResponseOutput) MaxMessageExpirySeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClientConfigResponse) *int { return v.MaxMessageExpirySeconds }).(pulumi.IntPtrOutput)
}

// Max message size for a packet in Bytes.
func (o ClientConfigResponseOutput) MaxPacketSizeBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClientConfigResponse) *int { return v.MaxPacketSizeBytes }).(pulumi.IntPtrOutput)
}

// Upper bound of Receive Maximum that a client can request in the CONNECT packet.
func (o ClientConfigResponseOutput) MaxReceiveMaximum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClientConfigResponse) *int { return v.MaxReceiveMaximum }).(pulumi.IntPtrOutput)
}

// Upper bound of Session Expiry Interval, in seconds.
func (o ClientConfigResponseOutput) MaxSessionExpirySeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClientConfigResponse) *int { return v.MaxSessionExpirySeconds }).(pulumi.IntPtrOutput)
}

// The limit on the number of queued messages for a subscriber.
func (o ClientConfigResponseOutput) SubscriberQueueLimit() SubscriberQueueLimitResponsePtrOutput {
	return o.ApplyT(func(v ClientConfigResponse) *SubscriberQueueLimitResponse { return v.SubscriberQueueLimit }).(SubscriberQueueLimitResponsePtrOutput)
}

type ClientConfigResponsePtrOutput struct{ *pulumi.OutputState }

func (ClientConfigResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClientConfigResponse)(nil)).Elem()
}

func (o ClientConfigResponsePtrOutput) ToClientConfigResponsePtrOutput() ClientConfigResponsePtrOutput {
	return o
}

func (o ClientConfigResponsePtrOutput) ToClientConfigResponsePtrOutputWithContext(ctx context.Context) ClientConfigResponsePtrOutput {
	return o
}

func (o ClientConfigResponsePtrOutput) Elem() ClientConfigResponseOutput {
	return o.ApplyT(func(v *ClientConfigResponse) ClientConfigResponse {
		if v != nil {
			return *v
		}
		var ret ClientConfigResponse
		return ret
	}).(ClientConfigResponseOutput)
}

// Upper bound of a client's Keep Alive, in seconds.
func (o ClientConfigResponsePtrOutput) MaxKeepAliveSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClientConfigResponse) *int {
		if v == nil {
			return nil
		}
		return v.MaxKeepAliveSeconds
	}).(pulumi.IntPtrOutput)
}

// Upper bound of Message Expiry Interval, in seconds.
func (o ClientConfigResponsePtrOutput) MaxMessageExpirySeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClientConfigResponse) *int {
		if v == nil {
			return nil
		}
		return v.MaxMessageExpirySeconds
	}).(pulumi.IntPtrOutput)
}

// Max message size for a packet in Bytes.
func (o ClientConfigResponsePtrOutput) MaxPacketSizeBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClientConfigResponse) *int {
		if v == nil {
			return nil
		}
		return v.MaxPacketSizeBytes
	}).(pulumi.IntPtrOutput)
}

// Upper bound of Receive Maximum that a client can request in the CONNECT packet.
func (o ClientConfigResponsePtrOutput) MaxReceiveMaximum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClientConfigResponse) *int {
		if v == nil {
			return nil
		}
		return v.MaxReceiveMaximum
	}).(pulumi.IntPtrOutput)
}

// Upper bound of Session Expiry Interval, in seconds.
func (o ClientConfigResponsePtrOutput) MaxSessionExpirySeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClientConfigResponse) *int {
		if v == nil {
			return nil
		}
		return v.MaxSessionExpirySeconds
	}).(pulumi.IntPtrOutput)
}

// The limit on the number of queued messages for a subscriber.
func (o ClientConfigResponsePtrOutput) SubscriberQueueLimit() SubscriberQueueLimitResponsePtrOutput {
	return o.ApplyT(func(v *ClientConfigResponse) *SubscriberQueueLimitResponse {
		if v == nil {
			return nil
		}
		return v.SubscriberQueueLimit
	}).(SubscriberQueueLimitResponsePtrOutput)
}

// Dataflow BuiltIn Transformation dataset properties
type DataflowBuiltInTransformationDataset struct {
	// A user provided optional description of the dataset.
	Description *string `pulumi:"description"`
	// Condition to enrich data from Broker State Store. Example: $1 < 0 || $1 > $2 (Assuming inputs section $1 and $2 are provided)
	Expression *string `pulumi:"expression"`
	// List of fields for enriching from the Broker State Store.
	Inputs []string `pulumi:"inputs"`
	// The key of the dataset.
	Key string `pulumi:"key"`
	// The reference to the schema that describes the dataset. Allowed: JSON Schema/draft-7.
	SchemaRef *string `pulumi:"schemaRef"`
}

// DataflowBuiltInTransformationDatasetInput is an input type that accepts DataflowBuiltInTransformationDatasetArgs and DataflowBuiltInTransformationDatasetOutput values.
// You can construct a concrete instance of `DataflowBuiltInTransformationDatasetInput` via:
//
//	DataflowBuiltInTransformationDatasetArgs{...}
type DataflowBuiltInTransformationDatasetInput interface {
	pulumi.Input

	ToDataflowBuiltInTransformationDatasetOutput() DataflowBuiltInTransformationDatasetOutput
	ToDataflowBuiltInTransformationDatasetOutputWithContext(context.Context) DataflowBuiltInTransformationDatasetOutput
}

// Dataflow BuiltIn Transformation dataset properties
type DataflowBuiltInTransformationDatasetArgs struct {
	// A user provided optional description of the dataset.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Condition to enrich data from Broker State Store. Example: $1 < 0 || $1 > $2 (Assuming inputs section $1 and $2 are provided)
	Expression pulumi.StringPtrInput `pulumi:"expression"`
	// List of fields for enriching from the Broker State Store.
	Inputs pulumi.StringArrayInput `pulumi:"inputs"`
	// The key of the dataset.
	Key pulumi.StringInput `pulumi:"key"`
	// The reference to the schema that describes the dataset. Allowed: JSON Schema/draft-7.
	SchemaRef pulumi.StringPtrInput `pulumi:"schemaRef"`
}

func (DataflowBuiltInTransformationDatasetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataflowBuiltInTransformationDataset)(nil)).Elem()
}

func (i DataflowBuiltInTransformationDatasetArgs) ToDataflowBuiltInTransformationDatasetOutput() DataflowBuiltInTransformationDatasetOutput {
	return i.ToDataflowBuiltInTransformationDatasetOutputWithContext(context.Background())
}

func (i DataflowBuiltInTransformationDatasetArgs) ToDataflowBuiltInTransformationDatasetOutputWithContext(ctx context.Context) DataflowBuiltInTransformationDatasetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataflowBuiltInTransformationDatasetOutput)
}

// DataflowBuiltInTransformationDatasetArrayInput is an input type that accepts DataflowBuiltInTransformationDatasetArray and DataflowBuiltInTransformationDatasetArrayOutput values.
// You can construct a concrete instance of `DataflowBuiltInTransformationDatasetArrayInput` via:
//
//	DataflowBuiltInTransformationDatasetArray{ DataflowBuiltInTransformationDatasetArgs{...} }
type DataflowBuiltInTransformationDatasetArrayInput interface {
	pulumi.Input

	ToDataflowBuiltInTransformationDatasetArrayOutput() DataflowBuiltInTransformationDatasetArrayOutput
	ToDataflowBuiltInTransformationDatasetArrayOutputWithContext(context.Context) DataflowBuiltInTransformationDatasetArrayOutput
}

type DataflowBuiltInTransformationDatasetArray []DataflowBuiltInTransformationDatasetInput

func (DataflowBuiltInTransformationDatasetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataflowBuiltInTransformationDataset)(nil)).Elem()
}

func (i DataflowBuiltInTransformationDatasetArray) ToDataflowBuiltInTransformationDatasetArrayOutput() DataflowBuiltInTransformationDatasetArrayOutput {
	return i.ToDataflowBuiltInTransformationDatasetArrayOutputWithContext(context.Background())
}

func (i DataflowBuiltInTransformationDatasetArray) ToDataflowBuiltInTransformationDatasetArrayOutputWithContext(ctx context.Context) DataflowBuiltInTransformationDatasetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataflowBuiltInTransformationDatasetArrayOutput)
}

// Dataflow BuiltIn Transformation dataset properties
type DataflowBuiltInTransformationDatasetOutput struct{ *pulumi.OutputState }

func (DataflowBuiltInTransformationDatasetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataflowBuiltInTransformationDataset)(nil)).Elem()
}

func (o DataflowBuiltInTransformationDatasetOutput) ToDataflowBuiltInTransformationDatasetOutput() DataflowBuiltInTransformationDatasetOutput {
	return o
}

func (o DataflowBuiltInTransformationDatasetOutput) ToDataflowBuiltInTransformationDatasetOutputWithContext(ctx context.Context) DataflowBuiltInTransformationDatasetOutput {
	return o
}

// A user provided optional description of the dataset.
func (o DataflowBuiltInTransformationDatasetOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataflowBuiltInTransformationDataset) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Condition to enrich data from Broker State Store. Example: $1 < 0 || $1 > $2 (Assuming inputs section $1 and $2 are provided)
func (o DataflowBuiltInTransformationDatasetOutput) Expression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataflowBuiltInTransformationDataset) *string { return v.Expression }).(pulumi.StringPtrOutput)
}

// List of fields for enriching from the Broker State Store.
func (o DataflowBuiltInTransformationDatasetOutput) Inputs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DataflowBuiltInTransformationDataset) []string { return v.Inputs }).(pulumi.StringArrayOutput)
}

// The key of the dataset.
func (o DataflowBuiltInTransformationDatasetOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v DataflowBuiltInTransformationDataset) string { return v.Key }).(pulumi.StringOutput)
}

// The reference to the schema that describes the dataset. Allowed: JSON Schema/draft-7.
func (o DataflowBuiltInTransformationDatasetOutput) SchemaRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataflowBuiltInTransformationDataset) *string { return v.SchemaRef }).(pulumi.StringPtrOutput)
}

type DataflowBuiltInTransformationDatasetArrayOutput struct{ *pulumi.OutputState }

func (DataflowBuiltInTransformationDatasetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataflowBuiltInTransformationDataset)(nil)).Elem()
}

func (o DataflowBuiltInTransformationDatasetArrayOutput) ToDataflowBuiltInTransformationDatasetArrayOutput() DataflowBuiltInTransformationDatasetArrayOutput {
	return o
}

func (o DataflowBuiltInTransformationDatasetArrayOutput) ToDataflowBuiltInTransformationDatasetArrayOutputWithContext(ctx context.Context) DataflowBuiltInTransformationDatasetArrayOutput {
	return o
}

func (o DataflowBuiltInTransformationDatasetArrayOutput) Index(i pulumi.IntInput) DataflowBuiltInTransformationDatasetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DataflowBuiltInTransformationDataset {
		return vs[0].([]DataflowBuiltInTransformationDataset)[vs[1].(int)]
	}).(DataflowBuiltInTransformationDatasetOutput)
}

// Dataflow BuiltIn Transformation dataset properties
type DataflowBuiltInTransformationDatasetResponse struct {
	// A user provided optional description of the dataset.
	Description *string `pulumi:"description"`
	// Condition to enrich data from Broker State Store. Example: $1 < 0 || $1 > $2 (Assuming inputs section $1 and $2 are provided)
	Expression *string `pulumi:"expression"`
	// List of fields for enriching from the Broker State Store.
	Inputs []string `pulumi:"inputs"`
	// The key of the dataset.
	Key string `pulumi:"key"`
	// The reference to the schema that describes the dataset. Allowed: JSON Schema/draft-7.
	SchemaRef *string `pulumi:"schemaRef"`
}

// Dataflow BuiltIn Transformation dataset properties
type DataflowBuiltInTransformationDatasetResponseOutput struct{ *pulumi.OutputState }

func (DataflowBuiltInTransformationDatasetResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataflowBuiltInTransformationDatasetResponse)(nil)).Elem()
}

func (o DataflowBuiltInTransformationDatasetResponseOutput) ToDataflowBuiltInTransformationDatasetResponseOutput() DataflowBuiltInTransformationDatasetResponseOutput {
	return o
}

func (o DataflowBuiltInTransformationDatasetResponseOutput) ToDataflowBuiltInTransformationDatasetResponseOutputWithContext(ctx context.Context) DataflowBuiltInTransformationDatasetResponseOutput {
	return o
}

// A user provided optional description of the dataset.
func (o DataflowBuiltInTransformationDatasetResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataflowBuiltInTransformationDatasetResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Condition to enrich data from Broker State Store. Example: $1 < 0 || $1 > $2 (Assuming inputs section $1 and $2 are provided)
func (o DataflowBuiltInTransformationDatasetResponseOutput) Expression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataflowBuiltInTransformationDatasetResponse) *string { return v.Expression }).(pulumi.StringPtrOutput)
}

// List of fields for enriching from the Broker State Store.
func (o DataflowBuiltInTransformationDatasetResponseOutput) Inputs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DataflowBuiltInTransformationDatasetResponse) []string { return v.Inputs }).(pulumi.StringArrayOutput)
}

// The key of the dataset.
func (o DataflowBuiltInTransformationDatasetResponseOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v DataflowBuiltInTransformationDatasetResponse) string { return v.Key }).(pulumi.StringOutput)
}

// The reference to the schema that describes the dataset. Allowed: JSON Schema/draft-7.
func (o DataflowBuiltInTransformationDatasetResponseOutput) SchemaRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataflowBuiltInTransformationDatasetResponse) *string { return v.SchemaRef }).(pulumi.StringPtrOutput)
}

type DataflowBuiltInTransformationDatasetResponseArrayOutput struct{ *pulumi.OutputState }

func (DataflowBuiltInTransformationDatasetResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataflowBuiltInTransformationDatasetResponse)(nil)).Elem()
}

func (o DataflowBuiltInTransformationDatasetResponseArrayOutput) ToDataflowBuiltInTransformationDatasetResponseArrayOutput() DataflowBuiltInTransformationDatasetResponseArrayOutput {
	return o
}

func (o DataflowBuiltInTransformationDatasetResponseArrayOutput) ToDataflowBuiltInTransformationDatasetResponseArrayOutputWithContext(ctx context.Context) DataflowBuiltInTransformationDatasetResponseArrayOutput {
	return o
}

func (o DataflowBuiltInTransformationDatasetResponseArrayOutput) Index(i pulumi.IntInput) DataflowBuiltInTransformationDatasetResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DataflowBuiltInTransformationDatasetResponse {
		return vs[0].([]DataflowBuiltInTransformationDatasetResponse)[vs[1].(int)]
	}).(DataflowBuiltInTransformationDatasetResponseOutput)
}

// Dataflow BuiltIn Transformation filter properties
type DataflowBuiltInTransformationFilter struct {
	// A user provided optional description of the filter.
	Description *string `pulumi:"description"`
	// Condition to filter data. Can reference input fields with {n} where n is the index of the input field starting from 1. Example: $1 < 0 || $1 > $2 (Assuming inputs section $1 and $2 are provided)
	Expression string `pulumi:"expression"`
	// List of fields for filtering in JSON path expression.
	Inputs []string `pulumi:"inputs"`
	// The type of dataflow operation.
	Type *string `pulumi:"type"`
}

// Defaults sets the appropriate defaults for DataflowBuiltInTransformationFilter
func (val *DataflowBuiltInTransformationFilter) Defaults() *DataflowBuiltInTransformationFilter {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Type == nil {
		type_ := "Filter"
		tmp.Type = &type_
	}
	return &tmp
}

// DataflowBuiltInTransformationFilterInput is an input type that accepts DataflowBuiltInTransformationFilterArgs and DataflowBuiltInTransformationFilterOutput values.
// You can construct a concrete instance of `DataflowBuiltInTransformationFilterInput` via:
//
//	DataflowBuiltInTransformationFilterArgs{...}
type DataflowBuiltInTransformationFilterInput interface {
	pulumi.Input

	ToDataflowBuiltInTransformationFilterOutput() DataflowBuiltInTransformationFilterOutput
	ToDataflowBuiltInTransformationFilterOutputWithContext(context.Context) DataflowBuiltInTransformationFilterOutput
}

// Dataflow BuiltIn Transformation filter properties
type DataflowBuiltInTransformationFilterArgs struct {
	// A user provided optional description of the filter.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Condition to filter data. Can reference input fields with {n} where n is the index of the input field starting from 1. Example: $1 < 0 || $1 > $2 (Assuming inputs section $1 and $2 are provided)
	Expression pulumi.StringInput `pulumi:"expression"`
	// List of fields for filtering in JSON path expression.
	Inputs pulumi.StringArrayInput `pulumi:"inputs"`
	// The type of dataflow operation.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

// Defaults sets the appropriate defaults for DataflowBuiltInTransformationFilterArgs
func (val *DataflowBuiltInTransformationFilterArgs) Defaults() *DataflowBuiltInTransformationFilterArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Type == nil {
		tmp.Type = pulumi.StringPtr("Filter")
	}
	return &tmp
}
func (DataflowBuiltInTransformationFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataflowBuiltInTransformationFilter)(nil)).Elem()
}

func (i DataflowBuiltInTransformationFilterArgs) ToDataflowBuiltInTransformationFilterOutput() DataflowBuiltInTransformationFilterOutput {
	return i.ToDataflowBuiltInTransformationFilterOutputWithContext(context.Background())
}

func (i DataflowBuiltInTransformationFilterArgs) ToDataflowBuiltInTransformationFilterOutputWithContext(ctx context.Context) DataflowBuiltInTransformationFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataflowBuiltInTransformationFilterOutput)
}

// DataflowBuiltInTransformationFilterArrayInput is an input type that accepts DataflowBuiltInTransformationFilterArray and DataflowBuiltInTransformationFilterArrayOutput values.
// You can construct a concrete instance of `DataflowBuiltInTransformationFilterArrayInput` via:
//
//	DataflowBuiltInTransformationFilterArray{ DataflowBuiltInTransformationFilterArgs{...} }
type DataflowBuiltInTransformationFilterArrayInput interface {
	pulumi.Input

	ToDataflowBuiltInTransformationFilterArrayOutput() DataflowBuiltInTransformationFilterArrayOutput
	ToDataflowBuiltInTransformationFilterArrayOutputWithContext(context.Context) DataflowBuiltInTransformationFilterArrayOutput
}

type DataflowBuiltInTransformationFilterArray []DataflowBuiltInTransformationFilterInput

func (DataflowBuiltInTransformationFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataflowBuiltInTransformationFilter)(nil)).Elem()
}

func (i DataflowBuiltInTransformationFilterArray) ToDataflowBuiltInTransformationFilterArrayOutput() DataflowBuiltInTransformationFilterArrayOutput {
	return i.ToDataflowBuiltInTransformationFilterArrayOutputWithContext(context.Background())
}

func (i DataflowBuiltInTransformationFilterArray) ToDataflowBuiltInTransformationFilterArrayOutputWithContext(ctx context.Context) DataflowBuiltInTransformationFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataflowBuiltInTransformationFilterArrayOutput)
}

// Dataflow BuiltIn Transformation filter properties
type DataflowBuiltInTransformationFilterOutput struct{ *pulumi.OutputState }

func (DataflowBuiltInTransformationFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataflowBuiltInTransformationFilter)(nil)).Elem()
}

func (o DataflowBuiltInTransformationFilterOutput) ToDataflowBuiltInTransformationFilterOutput() DataflowBuiltInTransformationFilterOutput {
	return o
}

func (o DataflowBuiltInTransformationFilterOutput) ToDataflowBuiltInTransformationFilterOutputWithContext(ctx context.Context) DataflowBuiltInTransformationFilterOutput {
	return o
}

// A user provided optional description of the filter.
func (o DataflowBuiltInTransformationFilterOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataflowBuiltInTransformationFilter) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Condition to filter data. Can reference input fields with {n} where n is the index of the input field starting from 1. Example: $1 < 0 || $1 > $2 (Assuming inputs section $1 and $2 are provided)
func (o DataflowBuiltInTransformationFilterOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v DataflowBuiltInTransformationFilter) string { return v.Expression }).(pulumi.StringOutput)
}

// List of fields for filtering in JSON path expression.
func (o DataflowBuiltInTransformationFilterOutput) Inputs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DataflowBuiltInTransformationFilter) []string { return v.Inputs }).(pulumi.StringArrayOutput)
}

// The type of dataflow operation.
func (o DataflowBuiltInTransformationFilterOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataflowBuiltInTransformationFilter) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type DataflowBuiltInTransformationFilterArrayOutput struct{ *pulumi.OutputState }

func (DataflowBuiltInTransformationFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataflowBuiltInTransformationFilter)(nil)).Elem()
}

func (o DataflowBuiltInTransformationFilterArrayOutput) ToDataflowBuiltInTransformationFilterArrayOutput() DataflowBuiltInTransformationFilterArrayOutput {
	return o
}

func (o DataflowBuiltInTransformationFilterArrayOutput) ToDataflowBuiltInTransformationFilterArrayOutputWithContext(ctx context.Context) DataflowBuiltInTransformationFilterArrayOutput {
	return o
}

func (o DataflowBuiltInTransformationFilterArrayOutput) Index(i pulumi.IntInput) DataflowBuiltInTransformationFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DataflowBuiltInTransformationFilter {
		return vs[0].([]DataflowBuiltInTransformationFilter)[vs[1].(int)]
	}).(DataflowBuiltInTransformationFilterOutput)
}

// Dataflow BuiltIn Transformation filter properties
type DataflowBuiltInTransformationFilterResponse struct {
	// A user provided optional description of the filter.
	Description *string `pulumi:"description"`
	// Condition to filter data. Can reference input fields with {n} where n is the index of the input field starting from 1. Example: $1 < 0 || $1 > $2 (Assuming inputs section $1 and $2 are provided)
	Expression string `pulumi:"expression"`
	// List of fields for filtering in JSON path expression.
	Inputs []string `pulumi:"inputs"`
	// The type of dataflow operation.
	Type *string `pulumi:"type"`
}

// Defaults sets the appropriate defaults for DataflowBuiltInTransformationFilterResponse
func (val *DataflowBuiltInTransformationFilterResponse) Defaults() *DataflowBuiltInTransformationFilterResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Type == nil {
		type_ := "Filter"
		tmp.Type = &type_
	}
	return &tmp
}

// Dataflow BuiltIn Transformation filter properties
type DataflowBuiltInTransformationFilterResponseOutput struct{ *pulumi.OutputState }

func (DataflowBuiltInTransformationFilterResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataflowBuiltInTransformationFilterResponse)(nil)).Elem()
}

func (o DataflowBuiltInTransformationFilterResponseOutput) ToDataflowBuiltInTransformationFilterResponseOutput() DataflowBuiltInTransformationFilterResponseOutput {
	return o
}

func (o DataflowBuiltInTransformationFilterResponseOutput) ToDataflowBuiltInTransformationFilterResponseOutputWithContext(ctx context.Context) DataflowBuiltInTransformationFilterResponseOutput {
	return o
}

// A user provided optional description of the filter.
func (o DataflowBuiltInTransformationFilterResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataflowBuiltInTransformationFilterResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Condition to filter data. Can reference input fields with {n} where n is the index of the input field starting from 1. Example: $1 < 0 || $1 > $2 (Assuming inputs section $1 and $2 are provided)
func (o DataflowBuiltInTransformationFilterResponseOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v DataflowBuiltInTransformationFilterResponse) string { return v.Expression }).(pulumi.StringOutput)
}

// List of fields for filtering in JSON path expression.
func (o DataflowBuiltInTransformationFilterResponseOutput) Inputs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DataflowBuiltInTransformationFilterResponse) []string { return v.Inputs }).(pulumi.StringArrayOutput)
}

// The type of dataflow operation.
func (o DataflowBuiltInTransformationFilterResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataflowBuiltInTransformationFilterResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type DataflowBuiltInTransformationFilterResponseArrayOutput struct{ *pulumi.OutputState }

func (DataflowBuiltInTransformationFilterResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataflowBuiltInTransformationFilterResponse)(nil)).Elem()
}

func (o DataflowBuiltInTransformationFilterResponseArrayOutput) ToDataflowBuiltInTransformationFilterResponseArrayOutput() DataflowBuiltInTransformationFilterResponseArrayOutput {
	return o
}

func (o DataflowBuiltInTransformationFilterResponseArrayOutput) ToDataflowBuiltInTransformationFilterResponseArrayOutputWithContext(ctx context.Context) DataflowBuiltInTransformationFilterResponseArrayOutput {
	return o
}

func (o DataflowBuiltInTransformationFilterResponseArrayOutput) Index(i pulumi.IntInput) DataflowBuiltInTransformationFilterResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DataflowBuiltInTransformationFilterResponse {
		return vs[0].([]DataflowBuiltInTransformationFilterResponse)[vs[1].(int)]
	}).(DataflowBuiltInTransformationFilterResponseOutput)
}

// Dataflow BuiltIn Transformation map properties
type DataflowBuiltInTransformationMap struct {
	// A user provided optional description of the mapping function.
	Description *string `pulumi:"description"`
	// Modify the inputs field(s) to the final output field. Example: $1 * 2.2 (Assuming inputs section $1 is provided)
	Expression *string `pulumi:"expression"`
	// List of fields for mapping in JSON path expression.
	Inputs []string `pulumi:"inputs"`
	// Where and how the input fields to be organized in the output record.
	Output string `pulumi:"output"`
	// Type of transformation.
	Type *string `pulumi:"type"`
}

// DataflowBuiltInTransformationMapInput is an input type that accepts DataflowBuiltInTransformationMap and DataflowBuiltInTransformationMapOutput values.
// You can construct a concrete instance of `DataflowBuiltInTransformationMapInput` via:
//
//	DataflowBuiltInTransformationMap{ "key": DataflowBuiltInTransformationArgs{...} }
type DataflowBuiltInTransformationMapInput interface {
	pulumi.Input

	ToDataflowBuiltInTransformationMapOutput() DataflowBuiltInTransformationMapOutput
	ToDataflowBuiltInTransformationMapOutputWithContext(context.Context) DataflowBuiltInTransformationMapOutput
}

// Dataflow BuiltIn Transformation map properties
type DataflowBuiltInTransformationMapArgs struct {
	// A user provided optional description of the mapping function.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Modify the inputs field(s) to the final output field. Example: $1 * 2.2 (Assuming inputs section $1 is provided)
	Expression pulumi.StringPtrInput `pulumi:"expression"`
	// List of fields for mapping in JSON path expression.
	Inputs pulumi.StringArrayInput `pulumi:"inputs"`
	// Where and how the input fields to be organized in the output record.
	Output pulumi.StringInput `pulumi:"output"`
	// Type of transformation.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (DataflowBuiltInTransformationMapArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataflowBuiltInTransformationMap)(nil)).Elem()
}

func (i DataflowBuiltInTransformationMapArgs) ToDataflowBuiltInTransformationMapOutput() DataflowBuiltInTransformationMapOutput {
	return i.ToDataflowBuiltInTransformationMapOutputWithContext(context.Background())
}

func (i DataflowBuiltInTransformationMapArgs) ToDataflowBuiltInTransformationMapOutputWithContext(ctx context.Context) DataflowBuiltInTransformationMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataflowBuiltInTransformationMapOutput)
}

// DataflowBuiltInTransformationMapArrayInput is an input type that accepts DataflowBuiltInTransformationMapArray and DataflowBuiltInTransformationMapArrayOutput values.
// You can construct a concrete instance of `DataflowBuiltInTransformationMapArrayInput` via:
//
//	DataflowBuiltInTransformationMapArray{ DataflowBuiltInTransformationMapArgs{...} }
type DataflowBuiltInTransformationMapArrayInput interface {
	pulumi.Input

	ToDataflowBuiltInTransformationMapArrayOutput() DataflowBuiltInTransformationMapArrayOutput
	ToDataflowBuiltInTransformationMapArrayOutputWithContext(context.Context) DataflowBuiltInTransformationMapArrayOutput
}

type DataflowBuiltInTransformationMapArray []DataflowBuiltInTransformationMapInput

func (DataflowBuiltInTransformationMapArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataflowBuiltInTransformationMap)(nil)).Elem()
}

func (i DataflowBuiltInTransformationMapArray) ToDataflowBuiltInTransformationMapArrayOutput() DataflowBuiltInTransformationMapArrayOutput {
	return i.ToDataflowBuiltInTransformationMapArrayOutputWithContext(context.Background())
}

func (i DataflowBuiltInTransformationMapArray) ToDataflowBuiltInTransformationMapArrayOutputWithContext(ctx context.Context) DataflowBuiltInTransformationMapArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataflowBuiltInTransformationMapArrayOutput)
}

// Dataflow BuiltIn Transformation map properties
type DataflowBuiltInTransformationMapOutput struct{ *pulumi.OutputState }

func (DataflowBuiltInTransformationMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataflowBuiltInTransformationMap)(nil)).Elem()
}

func (o DataflowBuiltInTransformationMapOutput) ToDataflowBuiltInTransformationMapOutput() DataflowBuiltInTransformationMapOutput {
	return o
}

func (o DataflowBuiltInTransformationMapOutput) ToDataflowBuiltInTransformationMapOutputWithContext(ctx context.Context) DataflowBuiltInTransformationMapOutput {
	return o
}

// A user provided optional description of the mapping function.
func (o DataflowBuiltInTransformationMapOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataflowBuiltInTransformationMap) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Modify the inputs field(s) to the final output field. Example: $1 * 2.2 (Assuming inputs section $1 is provided)
func (o DataflowBuiltInTransformationMapOutput) Expression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataflowBuiltInTransformationMap) *string { return v.Expression }).(pulumi.StringPtrOutput)
}

// List of fields for mapping in JSON path expression.
func (o DataflowBuiltInTransformationMapOutput) Inputs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DataflowBuiltInTransformationMap) []string { return v.Inputs }).(pulumi.StringArrayOutput)
}

// Where and how the input fields to be organized in the output record.
func (o DataflowBuiltInTransformationMapOutput) Output() pulumi.StringOutput {
	return o.ApplyT(func(v DataflowBuiltInTransformationMap) string { return v.Output }).(pulumi.StringOutput)
}

// Type of transformation.
func (o DataflowBuiltInTransformationMapOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataflowBuiltInTransformationMap) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type DataflowBuiltInTransformationMapArrayOutput struct{ *pulumi.OutputState }

func (DataflowBuiltInTransformationMapArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataflowBuiltInTransformationMap)(nil)).Elem()
}

func (o DataflowBuiltInTransformationMapArrayOutput) ToDataflowBuiltInTransformationMapArrayOutput() DataflowBuiltInTransformationMapArrayOutput {
	return o
}

func (o DataflowBuiltInTransformationMapArrayOutput) ToDataflowBuiltInTransformationMapArrayOutputWithContext(ctx context.Context) DataflowBuiltInTransformationMapArrayOutput {
	return o
}

func (o DataflowBuiltInTransformationMapArrayOutput) Index(i pulumi.IntInput) DataflowBuiltInTransformationMapOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DataflowBuiltInTransformationMap {
		return vs[0].([]DataflowBuiltInTransformationMap)[vs[1].(int)]
	}).(DataflowBuiltInTransformationMapOutput)
}

// Dataflow BuiltIn Transformation map properties
type DataflowBuiltInTransformationMapResponse struct {
	// A user provided optional description of the mapping function.
	Description *string `pulumi:"description"`
	// Modify the inputs field(s) to the final output field. Example: $1 * 2.2 (Assuming inputs section $1 is provided)
	Expression *string `pulumi:"expression"`
	// List of fields for mapping in JSON path expression.
	Inputs []string `pulumi:"inputs"`
	// Where and how the input fields to be organized in the output record.
	Output string `pulumi:"output"`
	// Type of transformation.
	Type *string `pulumi:"type"`
}

// Dataflow BuiltIn Transformation map properties
type DataflowBuiltInTransformationMapResponseOutput struct{ *pulumi.OutputState }

func (DataflowBuiltInTransformationMapResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataflowBuiltInTransformationMapResponse)(nil)).Elem()
}

func (o DataflowBuiltInTransformationMapResponseOutput) ToDataflowBuiltInTransformationMapResponseOutput() DataflowBuiltInTransformationMapResponseOutput {
	return o
}

func (o DataflowBuiltInTransformationMapResponseOutput) ToDataflowBuiltInTransformationMapResponseOutputWithContext(ctx context.Context) DataflowBuiltInTransformationMapResponseOutput {
	return o
}

// A user provided optional description of the mapping function.
func (o DataflowBuiltInTransformationMapResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataflowBuiltInTransformationMapResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Modify the inputs field(s) to the final output field. Example: $1 * 2.2 (Assuming inputs section $1 is provided)
func (o DataflowBuiltInTransformationMapResponseOutput) Expression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataflowBuiltInTransformationMapResponse) *string { return v.Expression }).(pulumi.StringPtrOutput)
}

// List of fields for mapping in JSON path expression.
func (o DataflowBuiltInTransformationMapResponseOutput) Inputs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DataflowBuiltInTransformationMapResponse) []string { return v.Inputs }).(pulumi.StringArrayOutput)
}

// Where and how the input fields to be organized in the output record.
func (o DataflowBuiltInTransformationMapResponseOutput) Output() pulumi.StringOutput {
	return o.ApplyT(func(v DataflowBuiltInTransformationMapResponse) string { return v.Output }).(pulumi.StringOutput)
}

// Type of transformation.
func (o DataflowBuiltInTransformationMapResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataflowBuiltInTransformationMapResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type DataflowBuiltInTransformationMapResponseArrayOutput struct{ *pulumi.OutputState }

func (DataflowBuiltInTransformationMapResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataflowBuiltInTransformationMapResponse)(nil)).Elem()
}

func (o DataflowBuiltInTransformationMapResponseArrayOutput) ToDataflowBuiltInTransformationMapResponseArrayOutput() DataflowBuiltInTransformationMapResponseArrayOutput {
	return o
}

func (o DataflowBuiltInTransformationMapResponseArrayOutput) ToDataflowBuiltInTransformationMapResponseArrayOutputWithContext(ctx context.Context) DataflowBuiltInTransformationMapResponseArrayOutput {
	return o
}

func (o DataflowBuiltInTransformationMapResponseArrayOutput) Index(i pulumi.IntInput) DataflowBuiltInTransformationMapResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DataflowBuiltInTransformationMapResponse {
		return vs[0].([]DataflowBuiltInTransformationMapResponse)[vs[1].(int)]
	}).(DataflowBuiltInTransformationMapResponseOutput)
}

// Dataflow BuiltIn Transformation properties
type DataflowBuiltInTransformationSettings struct {
	// Enrich data from Broker State Store. Dataset references a key in Broker State Store.
	Datasets []DataflowBuiltInTransformationDataset `pulumi:"datasets"`
	// Filters input record or datapoints based on condition.
	Filter []DataflowBuiltInTransformationFilter `pulumi:"filter"`
	// Maps input to output message.
	Map []DataflowBuiltInTransformationMap `pulumi:"map"`
	// Reference to the schema that describes the output of the transformation.
	SchemaRef *string `pulumi:"schemaRef"`
	// Serialization format. Optional; defaults to JSON. Allowed value JSON Schema/draft-7, Parquet. Default: Json
	SerializationFormat *string `pulumi:"serializationFormat"`
}

// Defaults sets the appropriate defaults for DataflowBuiltInTransformationSettings
func (val *DataflowBuiltInTransformationSettings) Defaults() *DataflowBuiltInTransformationSettings {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.SerializationFormat == nil {
		serializationFormat_ := "Json"
		tmp.SerializationFormat = &serializationFormat_
	}
	return &tmp
}

// DataflowBuiltInTransformationSettingsInput is an input type that accepts DataflowBuiltInTransformationSettingsArgs and DataflowBuiltInTransformationSettingsOutput values.
// You can construct a concrete instance of `DataflowBuiltInTransformationSettingsInput` via:
//
//	DataflowBuiltInTransformationSettingsArgs{...}
type DataflowBuiltInTransformationSettingsInput interface {
	pulumi.Input

	ToDataflowBuiltInTransformationSettingsOutput() DataflowBuiltInTransformationSettingsOutput
	ToDataflowBuiltInTransformationSettingsOutputWithContext(context.Context) DataflowBuiltInTransformationSettingsOutput
}

// Dataflow BuiltIn Transformation properties
type DataflowBuiltInTransformationSettingsArgs struct {
	// Enrich data from Broker State Store. Dataset references a key in Broker State Store.
	Datasets DataflowBuiltInTransformationDatasetArrayInput `pulumi:"datasets"`
	// Filters input record or datapoints based on condition.
	Filter DataflowBuiltInTransformationFilterArrayInput `pulumi:"filter"`
	// Maps input to output message.
	Map DataflowBuiltInTransformationMapArrayInput `pulumi:"map"`
	// Reference to the schema that describes the output of the transformation.
	SchemaRef pulumi.StringPtrInput `pulumi:"schemaRef"`
	// Serialization format. Optional; defaults to JSON. Allowed value JSON Schema/draft-7, Parquet. Default: Json
	SerializationFormat pulumi.StringPtrInput `pulumi:"serializationFormat"`
}

// Defaults sets the appropriate defaults for DataflowBuiltInTransformationSettingsArgs
func (val *DataflowBuiltInTransformationSettingsArgs) Defaults() *DataflowBuiltInTransformationSettingsArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.SerializationFormat == nil {
		tmp.SerializationFormat = pulumi.StringPtr("Json")
	}
	return &tmp
}
func (DataflowBuiltInTransformationSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataflowBuiltInTransformationSettings)(nil)).Elem()
}

func (i DataflowBuiltInTransformationSettingsArgs) ToDataflowBuiltInTransformationSettingsOutput() DataflowBuiltInTransformationSettingsOutput {
	return i.ToDataflowBuiltInTransformationSettingsOutputWithContext(context.Background())
}

func (i DataflowBuiltInTransformationSettingsArgs) ToDataflowBuiltInTransformationSettingsOutputWithContext(ctx context.Context) DataflowBuiltInTransformationSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataflowBuiltInTransformationSettingsOutput)
}

func (i DataflowBuiltInTransformationSettingsArgs) ToDataflowBuiltInTransformationSettingsPtrOutput() DataflowBuiltInTransformationSettingsPtrOutput {
	return i.ToDataflowBuiltInTransformationSettingsPtrOutputWithContext(context.Background())
}

func (i DataflowBuiltInTransformationSettingsArgs) ToDataflowBuiltInTransformationSettingsPtrOutputWithContext(ctx context.Context) DataflowBuiltInTransformationSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataflowBuiltInTransformationSettingsOutput).ToDataflowBuiltInTransformationSettingsPtrOutputWithContext(ctx)
}

// DataflowBuiltInTransformationSettingsPtrInput is an input type that accepts DataflowBuiltInTransformationSettingsArgs, DataflowBuiltInTransformationSettingsPtr and DataflowBuiltInTransformationSettingsPtrOutput values.
// You can construct a concrete instance of `DataflowBuiltInTransformationSettingsPtrInput` via:
//
//	        DataflowBuiltInTransformationSettingsArgs{...}
//
//	or:
//
//	        nil
type DataflowBuiltInTransformationSettingsPtrInput interface {
	pulumi.Input

	ToDataflowBuiltInTransformationSettingsPtrOutput() DataflowBuiltInTransformationSettingsPtrOutput
	ToDataflowBuiltInTransformationSettingsPtrOutputWithContext(context.Context) DataflowBuiltInTransformationSettingsPtrOutput
}

type dataflowBuiltInTransformationSettingsPtrType DataflowBuiltInTransformationSettingsArgs

func DataflowBuiltInTransformationSettingsPtr(v *DataflowBuiltInTransformationSettingsArgs) DataflowBuiltInTransformationSettingsPtrInput {
	return (*dataflowBuiltInTransformationSettingsPtrType)(v)
}

func (*dataflowBuiltInTransformationSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataflowBuiltInTransformationSettings)(nil)).Elem()
}

func (i *dataflowBuiltInTransformationSettingsPtrType) ToDataflowBuiltInTransformationSettingsPtrOutput() DataflowBuiltInTransformationSettingsPtrOutput {
	return i.ToDataflowBuiltInTransformationSettingsPtrOutputWithContext(context.Background())
}

func (i *dataflowBuiltInTransformationSettingsPtrType) ToDataflowBuiltInTransformationSettingsPtrOutputWithContext(ctx context.Context) DataflowBuiltInTransformationSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataflowBuiltInTransformationSettingsPtrOutput)
}

// Dataflow BuiltIn Transformation properties
type DataflowBuiltInTransformationSettingsOutput struct{ *pulumi.OutputState }

func (DataflowBuiltInTransformationSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataflowBuiltInTransformationSettings)(nil)).Elem()
}

func (o DataflowBuiltInTransformationSettingsOutput) ToDataflowBuiltInTransformationSettingsOutput() DataflowBuiltInTransformationSettingsOutput {
	return o
}

func (o DataflowBuiltInTransformationSettingsOutput) ToDataflowBuiltInTransformationSettingsOutputWithContext(ctx context.Context) DataflowBuiltInTransformationSettingsOutput {
	return o
}

func (o DataflowBuiltInTransformationSettingsOutput) ToDataflowBuiltInTransformationSettingsPtrOutput() DataflowBuiltInTransformationSettingsPtrOutput {
	return o.ToDataflowBuiltInTransformationSettingsPtrOutputWithContext(context.Background())
}

func (o DataflowBuiltInTransformationSettingsOutput) ToDataflowBuiltInTransformationSettingsPtrOutputWithContext(ctx context.Context) DataflowBuiltInTransformationSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataflowBuiltInTransformationSettings) *DataflowBuiltInTransformationSettings {
		return &v
	}).(DataflowBuiltInTransformationSettingsPtrOutput)
}

// Enrich data from Broker State Store. Dataset references a key in Broker State Store.
func (o DataflowBuiltInTransformationSettingsOutput) Datasets() DataflowBuiltInTransformationDatasetArrayOutput {
	return o.ApplyT(func(v DataflowBuiltInTransformationSettings) []DataflowBuiltInTransformationDataset {
		return v.Datasets
	}).(DataflowBuiltInTransformationDatasetArrayOutput)
}

// Filters input record or datapoints based on condition.
func (o DataflowBuiltInTransformationSettingsOutput) Filter() DataflowBuiltInTransformationFilterArrayOutput {
	return o.ApplyT(func(v DataflowBuiltInTransformationSettings) []DataflowBuiltInTransformationFilter { return v.Filter }).(DataflowBuiltInTransformationFilterArrayOutput)
}

// Maps input to output message.
func (o DataflowBuiltInTransformationSettingsOutput) Map() DataflowBuiltInTransformationMapArrayOutput {
	return o.ApplyT(func(v DataflowBuiltInTransformationSettings) []DataflowBuiltInTransformationMap { return v.Map }).(DataflowBuiltInTransformationMapArrayOutput)
}

// Reference to the schema that describes the output of the transformation.
func (o DataflowBuiltInTransformationSettingsOutput) SchemaRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataflowBuiltInTransformationSettings) *string { return v.SchemaRef }).(pulumi.StringPtrOutput)
}

// Serialization format. Optional; defaults to JSON. Allowed value JSON Schema/draft-7, Parquet. Default: Json
func (o DataflowBuiltInTransformationSettingsOutput) SerializationFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataflowBuiltInTransformationSettings) *string { return v.SerializationFormat }).(pulumi.StringPtrOutput)
}

type DataflowBuiltInTransformationSettingsPtrOutput struct{ *pulumi.OutputState }

func (DataflowBuiltInTransformationSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataflowBuiltInTransformationSettings)(nil)).Elem()
}

func (o DataflowBuiltInTransformationSettingsPtrOutput) ToDataflowBuiltInTransformationSettingsPtrOutput() DataflowBuiltInTransformationSettingsPtrOutput {
	return o
}

func (o DataflowBuiltInTransformationSettingsPtrOutput) ToDataflowBuiltInTransformationSettingsPtrOutputWithContext(ctx context.Context) DataflowBuiltInTransformationSettingsPtrOutput {
	return o
}

func (o DataflowBuiltInTransformationSettingsPtrOutput) Elem() DataflowBuiltInTransformationSettingsOutput {
	return o.ApplyT(func(v *DataflowBuiltInTransformationSettings) DataflowBuiltInTransformationSettings {
		if v != nil {
			return *v
		}
		var ret DataflowBuiltInTransformationSettings
		return ret
	}).(DataflowBuiltInTransformationSettingsOutput)
}

// Enrich data from Broker State Store. Dataset references a key in Broker State Store.
func (o DataflowBuiltInTransformationSettingsPtrOutput) Datasets() DataflowBuiltInTransformationDatasetArrayOutput {
	return o.ApplyT(func(v *DataflowBuiltInTransformationSettings) []DataflowBuiltInTransformationDataset {
		if v == nil {
			return nil
		}
		return v.Datasets
	}).(DataflowBuiltInTransformationDatasetArrayOutput)
}

// Filters input record or datapoints based on condition.
func (o DataflowBuiltInTransformationSettingsPtrOutput) Filter() DataflowBuiltInTransformationFilterArrayOutput {
	return o.ApplyT(func(v *DataflowBuiltInTransformationSettings) []DataflowBuiltInTransformationFilter {
		if v == nil {
			return nil
		}
		return v.Filter
	}).(DataflowBuiltInTransformationFilterArrayOutput)
}

// Maps input to output message.
func (o DataflowBuiltInTransformationSettingsPtrOutput) Map() DataflowBuiltInTransformationMapArrayOutput {
	return o.ApplyT(func(v *DataflowBuiltInTransformationSettings) []DataflowBuiltInTransformationMap {
		if v == nil {
			return nil
		}
		return v.Map
	}).(DataflowBuiltInTransformationMapArrayOutput)
}

// Reference to the schema that describes the output of the transformation.
func (o DataflowBuiltInTransformationSettingsPtrOutput) SchemaRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataflowBuiltInTransformationSettings) *string {
		if v == nil {
			return nil
		}
		return v.SchemaRef
	}).(pulumi.StringPtrOutput)
}

// Serialization format. Optional; defaults to JSON. Allowed value JSON Schema/draft-7, Parquet. Default: Json
func (o DataflowBuiltInTransformationSettingsPtrOutput) SerializationFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataflowBuiltInTransformationSettings) *string {
		if v == nil {
			return nil
		}
		return v.SerializationFormat
	}).(pulumi.StringPtrOutput)
}

// Dataflow BuiltIn Transformation properties
type DataflowBuiltInTransformationSettingsResponse struct {
	// Enrich data from Broker State Store. Dataset references a key in Broker State Store.
	Datasets []DataflowBuiltInTransformationDatasetResponse `pulumi:"datasets"`
	// Filters input record or datapoints based on condition.
	Filter []DataflowBuiltInTransformationFilterResponse `pulumi:"filter"`
	// Maps input to output message.
	Map []DataflowBuiltInTransformationMapResponse `pulumi:"map"`
	// Reference to the schema that describes the output of the transformation.
	SchemaRef *string `pulumi:"schemaRef"`
	// Serialization format. Optional; defaults to JSON. Allowed value JSON Schema/draft-7, Parquet. Default: Json
	SerializationFormat *string `pulumi:"serializationFormat"`
}

// Defaults sets the appropriate defaults for DataflowBuiltInTransformationSettingsResponse
func (val *DataflowBuiltInTransformationSettingsResponse) Defaults() *DataflowBuiltInTransformationSettingsResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.SerializationFormat == nil {
		serializationFormat_ := "Json"
		tmp.SerializationFormat = &serializationFormat_
	}
	return &tmp
}

// Dataflow BuiltIn Transformation properties
type DataflowBuiltInTransformationSettingsResponseOutput struct{ *pulumi.OutputState }

func (DataflowBuiltInTransformationSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataflowBuiltInTransformationSettingsResponse)(nil)).Elem()
}

func (o DataflowBuiltInTransformationSettingsResponseOutput) ToDataflowBuiltInTransformationSettingsResponseOutput() DataflowBuiltInTransformationSettingsResponseOutput {
	return o
}

func (o DataflowBuiltInTransformationSettingsResponseOutput) ToDataflowBuiltInTransformationSettingsResponseOutputWithContext(ctx context.Context) DataflowBuiltInTransformationSettingsResponseOutput {
	return o
}

// Enrich data from Broker State Store. Dataset references a key in Broker State Store.
func (o DataflowBuiltInTransformationSettingsResponseOutput) Datasets() DataflowBuiltInTransformationDatasetResponseArrayOutput {
	return o.ApplyT(func(v DataflowBuiltInTransformationSettingsResponse) []DataflowBuiltInTransformationDatasetResponse {
		return v.Datasets
	}).(DataflowBuiltInTransformationDatasetResponseArrayOutput)
}

// Filters input record or datapoints based on condition.
func (o DataflowBuiltInTransformationSettingsResponseOutput) Filter() DataflowBuiltInTransformationFilterResponseArrayOutput {
	return o.ApplyT(func(v DataflowBuiltInTransformationSettingsResponse) []DataflowBuiltInTransformationFilterResponse {
		return v.Filter
	}).(DataflowBuiltInTransformationFilterResponseArrayOutput)
}

// Maps input to output message.
func (o DataflowBuiltInTransformationSettingsResponseOutput) Map() DataflowBuiltInTransformationMapResponseArrayOutput {
	return o.ApplyT(func(v DataflowBuiltInTransformationSettingsResponse) []DataflowBuiltInTransformationMapResponse {
		return v.Map
	}).(DataflowBuiltInTransformationMapResponseArrayOutput)
}

// Reference to the schema that describes the output of the transformation.
func (o DataflowBuiltInTransformationSettingsResponseOutput) SchemaRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataflowBuiltInTransformationSettingsResponse) *string { return v.SchemaRef }).(pulumi.StringPtrOutput)
}

// Serialization format. Optional; defaults to JSON. Allowed value JSON Schema/draft-7, Parquet. Default: Json
func (o DataflowBuiltInTransformationSettingsResponseOutput) SerializationFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataflowBuiltInTransformationSettingsResponse) *string { return v.SerializationFormat }).(pulumi.StringPtrOutput)
}

type DataflowBuiltInTransformationSettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (DataflowBuiltInTransformationSettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataflowBuiltInTransformationSettingsResponse)(nil)).Elem()
}

func (o DataflowBuiltInTransformationSettingsResponsePtrOutput) ToDataflowBuiltInTransformationSettingsResponsePtrOutput() DataflowBuiltInTransformationSettingsResponsePtrOutput {
	return o
}

func (o DataflowBuiltInTransformationSettingsResponsePtrOutput) ToDataflowBuiltInTransformationSettingsResponsePtrOutputWithContext(ctx context.Context) DataflowBuiltInTransformationSettingsResponsePtrOutput {
	return o
}

func (o DataflowBuiltInTransformationSettingsResponsePtrOutput) Elem() DataflowBuiltInTransformationSettingsResponseOutput {
	return o.ApplyT(func(v *DataflowBuiltInTransformationSettingsResponse) DataflowBuiltInTransformationSettingsResponse {
		if v != nil {
			return *v
		}
		var ret DataflowBuiltInTransformationSettingsResponse
		return ret
	}).(DataflowBuiltInTransformationSettingsResponseOutput)
}

// Enrich data from Broker State Store. Dataset references a key in Broker State Store.
func (o DataflowBuiltInTransformationSettingsResponsePtrOutput) Datasets() DataflowBuiltInTransformationDatasetResponseArrayOutput {
	return o.ApplyT(func(v *DataflowBuiltInTransformationSettingsResponse) []DataflowBuiltInTransformationDatasetResponse {
		if v == nil {
			return nil
		}
		return v.Datasets
	}).(DataflowBuiltInTransformationDatasetResponseArrayOutput)
}

// Filters input record or datapoints based on condition.
func (o DataflowBuiltInTransformationSettingsResponsePtrOutput) Filter() DataflowBuiltInTransformationFilterResponseArrayOutput {
	return o.ApplyT(func(v *DataflowBuiltInTransformationSettingsResponse) []DataflowBuiltInTransformationFilterResponse {
		if v == nil {
			return nil
		}
		return v.Filter
	}).(DataflowBuiltInTransformationFilterResponseArrayOutput)
}

// Maps input to output message.
func (o DataflowBuiltInTransformationSettingsResponsePtrOutput) Map() DataflowBuiltInTransformationMapResponseArrayOutput {
	return o.ApplyT(func(v *DataflowBuiltInTransformationSettingsResponse) []DataflowBuiltInTransformationMapResponse {
		if v == nil {
			return nil
		}
		return v.Map
	}).(DataflowBuiltInTransformationMapResponseArrayOutput)
}

// Reference to the schema that describes the output of the transformation.
func (o DataflowBuiltInTransformationSettingsResponsePtrOutput) SchemaRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataflowBuiltInTransformationSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.SchemaRef
	}).(pulumi.StringPtrOutput)
}

// Serialization format. Optional; defaults to JSON. Allowed value JSON Schema/draft-7, Parquet. Default: Json
func (o DataflowBuiltInTransformationSettingsResponsePtrOutput) SerializationFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataflowBuiltInTransformationSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.SerializationFormat
	}).(pulumi.StringPtrOutput)
}

// Dataflow Destination Operation properties
type DataflowDestinationOperationSettings struct {
	// Destination location, can be a topic or table name. Supports dynamic values with $topic, $systemProperties, $userProperties, $payload, $context, and $subscription.
	DataDestination string `pulumi:"dataDestination"`
	// Reference to the Endpoint CR. Can be of Broker, Kafka, Fabric, ADLS, ADX type.
	EndpointRef string `pulumi:"endpointRef"`
}

// DataflowDestinationOperationSettingsInput is an input type that accepts DataflowDestinationOperationSettingsArgs and DataflowDestinationOperationSettingsOutput values.
// You can construct a concrete instance of `DataflowDestinationOperationSettingsInput` via:
//
//	DataflowDestinationOperationSettingsArgs{...}
type DataflowDestinationOperationSettingsInput interface {
	pulumi.Input

	ToDataflowDestinationOperationSettingsOutput() DataflowDestinationOperationSettingsOutput
	ToDataflowDestinationOperationSettingsOutputWithContext(context.Context) DataflowDestinationOperationSettingsOutput
}

// Dataflow Destination Operation properties
type DataflowDestinationOperationSettingsArgs struct {
	// Destination location, can be a topic or table name. Supports dynamic values with $topic, $systemProperties, $userProperties, $payload, $context, and $subscription.
	DataDestination pulumi.StringInput `pulumi:"dataDestination"`
	// Reference to the Endpoint CR. Can be of Broker, Kafka, Fabric, ADLS, ADX type.
	EndpointRef pulumi.StringInput `pulumi:"endpointRef"`
}

func (DataflowDestinationOperationSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataflowDestinationOperationSettings)(nil)).Elem()
}

func (i DataflowDestinationOperationSettingsArgs) ToDataflowDestinationOperationSettingsOutput() DataflowDestinationOperationSettingsOutput {
	return i.ToDataflowDestinationOperationSettingsOutputWithContext(context.Background())
}

func (i DataflowDestinationOperationSettingsArgs) ToDataflowDestinationOperationSettingsOutputWithContext(ctx context.Context) DataflowDestinationOperationSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataflowDestinationOperationSettingsOutput)
}

func (i DataflowDestinationOperationSettingsArgs) ToDataflowDestinationOperationSettingsPtrOutput() DataflowDestinationOperationSettingsPtrOutput {
	return i.ToDataflowDestinationOperationSettingsPtrOutputWithContext(context.Background())
}

func (i DataflowDestinationOperationSettingsArgs) ToDataflowDestinationOperationSettingsPtrOutputWithContext(ctx context.Context) DataflowDestinationOperationSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataflowDestinationOperationSettingsOutput).ToDataflowDestinationOperationSettingsPtrOutputWithContext(ctx)
}

// DataflowDestinationOperationSettingsPtrInput is an input type that accepts DataflowDestinationOperationSettingsArgs, DataflowDestinationOperationSettingsPtr and DataflowDestinationOperationSettingsPtrOutput values.
// You can construct a concrete instance of `DataflowDestinationOperationSettingsPtrInput` via:
//
//	        DataflowDestinationOperationSettingsArgs{...}
//
//	or:
//
//	        nil
type DataflowDestinationOperationSettingsPtrInput interface {
	pulumi.Input

	ToDataflowDestinationOperationSettingsPtrOutput() DataflowDestinationOperationSettingsPtrOutput
	ToDataflowDestinationOperationSettingsPtrOutputWithContext(context.Context) DataflowDestinationOperationSettingsPtrOutput
}

type dataflowDestinationOperationSettingsPtrType DataflowDestinationOperationSettingsArgs

func DataflowDestinationOperationSettingsPtr(v *DataflowDestinationOperationSettingsArgs) DataflowDestinationOperationSettingsPtrInput {
	return (*dataflowDestinationOperationSettingsPtrType)(v)
}

func (*dataflowDestinationOperationSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataflowDestinationOperationSettings)(nil)).Elem()
}

func (i *dataflowDestinationOperationSettingsPtrType) ToDataflowDestinationOperationSettingsPtrOutput() DataflowDestinationOperationSettingsPtrOutput {
	return i.ToDataflowDestinationOperationSettingsPtrOutputWithContext(context.Background())
}

func (i *dataflowDestinationOperationSettingsPtrType) ToDataflowDestinationOperationSettingsPtrOutputWithContext(ctx context.Context) DataflowDestinationOperationSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataflowDestinationOperationSettingsPtrOutput)
}

// Dataflow Destination Operation properties
type DataflowDestinationOperationSettingsOutput struct{ *pulumi.OutputState }

func (DataflowDestinationOperationSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataflowDestinationOperationSettings)(nil)).Elem()
}

func (o DataflowDestinationOperationSettingsOutput) ToDataflowDestinationOperationSettingsOutput() DataflowDestinationOperationSettingsOutput {
	return o
}

func (o DataflowDestinationOperationSettingsOutput) ToDataflowDestinationOperationSettingsOutputWithContext(ctx context.Context) DataflowDestinationOperationSettingsOutput {
	return o
}

func (o DataflowDestinationOperationSettingsOutput) ToDataflowDestinationOperationSettingsPtrOutput() DataflowDestinationOperationSettingsPtrOutput {
	return o.ToDataflowDestinationOperationSettingsPtrOutputWithContext(context.Background())
}

func (o DataflowDestinationOperationSettingsOutput) ToDataflowDestinationOperationSettingsPtrOutputWithContext(ctx context.Context) DataflowDestinationOperationSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataflowDestinationOperationSettings) *DataflowDestinationOperationSettings {
		return &v
	}).(DataflowDestinationOperationSettingsPtrOutput)
}

// Destination location, can be a topic or table name. Supports dynamic values with $topic, $systemProperties, $userProperties, $payload, $context, and $subscription.
func (o DataflowDestinationOperationSettingsOutput) DataDestination() pulumi.StringOutput {
	return o.ApplyT(func(v DataflowDestinationOperationSettings) string { return v.DataDestination }).(pulumi.StringOutput)
}

// Reference to the Endpoint CR. Can be of Broker, Kafka, Fabric, ADLS, ADX type.
func (o DataflowDestinationOperationSettingsOutput) EndpointRef() pulumi.StringOutput {
	return o.ApplyT(func(v DataflowDestinationOperationSettings) string { return v.EndpointRef }).(pulumi.StringOutput)
}

type DataflowDestinationOperationSettingsPtrOutput struct{ *pulumi.OutputState }

func (DataflowDestinationOperationSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataflowDestinationOperationSettings)(nil)).Elem()
}

func (o DataflowDestinationOperationSettingsPtrOutput) ToDataflowDestinationOperationSettingsPtrOutput() DataflowDestinationOperationSettingsPtrOutput {
	return o
}

func (o DataflowDestinationOperationSettingsPtrOutput) ToDataflowDestinationOperationSettingsPtrOutputWithContext(ctx context.Context) DataflowDestinationOperationSettingsPtrOutput {
	return o
}

func (o DataflowDestinationOperationSettingsPtrOutput) Elem() DataflowDestinationOperationSettingsOutput {
	return o.ApplyT(func(v *DataflowDestinationOperationSettings) DataflowDestinationOperationSettings {
		if v != nil {
			return *v
		}
		var ret DataflowDestinationOperationSettings
		return ret
	}).(DataflowDestinationOperationSettingsOutput)
}

// Destination location, can be a topic or table name. Supports dynamic values with $topic, $systemProperties, $userProperties, $payload, $context, and $subscription.
func (o DataflowDestinationOperationSettingsPtrOutput) DataDestination() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataflowDestinationOperationSettings) *string {
		if v == nil {
			return nil
		}
		return &v.DataDestination
	}).(pulumi.StringPtrOutput)
}

// Reference to the Endpoint CR. Can be of Broker, Kafka, Fabric, ADLS, ADX type.
func (o DataflowDestinationOperationSettingsPtrOutput) EndpointRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataflowDestinationOperationSettings) *string {
		if v == nil {
			return nil
		}
		return &v.EndpointRef
	}).(pulumi.StringPtrOutput)
}

// Dataflow Destination Operation properties
type DataflowDestinationOperationSettingsResponse struct {
	// Destination location, can be a topic or table name. Supports dynamic values with $topic, $systemProperties, $userProperties, $payload, $context, and $subscription.
	DataDestination string `pulumi:"dataDestination"`
	// Reference to the Endpoint CR. Can be of Broker, Kafka, Fabric, ADLS, ADX type.
	EndpointRef string `pulumi:"endpointRef"`
}

// Dataflow Destination Operation properties
type DataflowDestinationOperationSettingsResponseOutput struct{ *pulumi.OutputState }

func (DataflowDestinationOperationSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataflowDestinationOperationSettingsResponse)(nil)).Elem()
}

func (o DataflowDestinationOperationSettingsResponseOutput) ToDataflowDestinationOperationSettingsResponseOutput() DataflowDestinationOperationSettingsResponseOutput {
	return o
}

func (o DataflowDestinationOperationSettingsResponseOutput) ToDataflowDestinationOperationSettingsResponseOutputWithContext(ctx context.Context) DataflowDestinationOperationSettingsResponseOutput {
	return o
}

// Destination location, can be a topic or table name. Supports dynamic values with $topic, $systemProperties, $userProperties, $payload, $context, and $subscription.
func (o DataflowDestinationOperationSettingsResponseOutput) DataDestination() pulumi.StringOutput {
	return o.ApplyT(func(v DataflowDestinationOperationSettingsResponse) string { return v.DataDestination }).(pulumi.StringOutput)
}

// Reference to the Endpoint CR. Can be of Broker, Kafka, Fabric, ADLS, ADX type.
func (o DataflowDestinationOperationSettingsResponseOutput) EndpointRef() pulumi.StringOutput {
	return o.ApplyT(func(v DataflowDestinationOperationSettingsResponse) string { return v.EndpointRef }).(pulumi.StringOutput)
}

type DataflowDestinationOperationSettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (DataflowDestinationOperationSettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataflowDestinationOperationSettingsResponse)(nil)).Elem()
}

func (o DataflowDestinationOperationSettingsResponsePtrOutput) ToDataflowDestinationOperationSettingsResponsePtrOutput() DataflowDestinationOperationSettingsResponsePtrOutput {
	return o
}

func (o DataflowDestinationOperationSettingsResponsePtrOutput) ToDataflowDestinationOperationSettingsResponsePtrOutputWithContext(ctx context.Context) DataflowDestinationOperationSettingsResponsePtrOutput {
	return o
}

func (o DataflowDestinationOperationSettingsResponsePtrOutput) Elem() DataflowDestinationOperationSettingsResponseOutput {
	return o.ApplyT(func(v *DataflowDestinationOperationSettingsResponse) DataflowDestinationOperationSettingsResponse {
		if v != nil {
			return *v
		}
		var ret DataflowDestinationOperationSettingsResponse
		return ret
	}).(DataflowDestinationOperationSettingsResponseOutput)
}

// Destination location, can be a topic or table name. Supports dynamic values with $topic, $systemProperties, $userProperties, $payload, $context, and $subscription.
func (o DataflowDestinationOperationSettingsResponsePtrOutput) DataDestination() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataflowDestinationOperationSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.DataDestination
	}).(pulumi.StringPtrOutput)
}

// Reference to the Endpoint CR. Can be of Broker, Kafka, Fabric, ADLS, ADX type.
func (o DataflowDestinationOperationSettingsResponsePtrOutput) EndpointRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataflowDestinationOperationSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.EndpointRef
	}).(pulumi.StringPtrOutput)
}

// DataflowEndpoint Authentication Access Token properties
type DataflowEndpointAuthenticationAccessToken struct {
	// Token secret name.
	SecretRef string `pulumi:"secretRef"`
}

// DataflowEndpointAuthenticationAccessTokenInput is an input type that accepts DataflowEndpointAuthenticationAccessTokenArgs and DataflowEndpointAuthenticationAccessTokenOutput values.
// You can construct a concrete instance of `DataflowEndpointAuthenticationAccessTokenInput` via:
//
//	DataflowEndpointAuthenticationAccessTokenArgs{...}
type DataflowEndpointAuthenticationAccessTokenInput interface {
	pulumi.Input

	ToDataflowEndpointAuthenticationAccessTokenOutput() DataflowEndpointAuthenticationAccessTokenOutput
	ToDataflowEndpointAuthenticationAccessTokenOutputWithContext(context.Context) DataflowEndpointAuthenticationAccessTokenOutput
}

// DataflowEndpoint Authentication Access Token properties
type DataflowEndpointAuthenticationAccessTokenArgs struct {
	// Token secret name.
	SecretRef pulumi.StringInput `pulumi:"secretRef"`
}

func (DataflowEndpointAuthenticationAccessTokenArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataflowEndpointAuthenticationAccessToken)(nil)).Elem()
}

func (i DataflowEndpointAuthenticationAccessTokenArgs) ToDataflowEndpointAuthenticationAccessTokenOutput() DataflowEndpointAuthenticationAccessTokenOutput {
	return i.ToDataflowEndpointAuthenticationAccessTokenOutputWithContext(context.Background())
}

func (i DataflowEndpointAuthenticationAccessTokenArgs) ToDataflowEndpointAuthenticationAccessTokenOutputWithContext(ctx context.Context) DataflowEndpointAuthenticationAccessTokenOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataflowEndpointAuthenticationAccessTokenOutput)
}

func (i DataflowEndpointAuthenticationAccessTokenArgs) ToDataflowEndpointAuthenticationAccessTokenPtrOutput() DataflowEndpointAuthenticationAccessTokenPtrOutput {
	return i.ToDataflowEndpointAuthenticationAccessTokenPtrOutputWithContext(context.Background())
}

func (i DataflowEndpointAuthenticationAccessTokenArgs) ToDataflowEndpointAuthenticationAccessTokenPtrOutputWithContext(ctx context.Context) DataflowEndpointAuthenticationAccessTokenPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataflowEndpointAuthenticationAccessTokenOutput).ToDataflowEndpointAuthenticationAccessTokenPtrOutputWithContext(ctx)
}

// DataflowEndpointAuthenticationAccessTokenPtrInput is an input type that accepts DataflowEndpointAuthenticationAccessTokenArgs, DataflowEndpointAuthenticationAccessTokenPtr and DataflowEndpointAuthenticationAccessTokenPtrOutput values.
// You can construct a concrete instance of `DataflowEndpointAuthenticationAccessTokenPtrInput` via:
//
//	        DataflowEndpointAuthenticationAccessTokenArgs{...}
//
//	or:
//
//	        nil
type DataflowEndpointAuthenticationAccessTokenPtrInput interface {
	pulumi.Input

	ToDataflowEndpointAuthenticationAccessTokenPtrOutput() DataflowEndpointAuthenticationAccessTokenPtrOutput
	ToDataflowEndpointAuthenticationAccessTokenPtrOutputWithContext(context.Context) DataflowEndpointAuthenticationAccessTokenPtrOutput
}

type dataflowEndpointAuthenticationAccessTokenPtrType DataflowEndpointAuthenticationAccessTokenArgs

func DataflowEndpointAuthenticationAccessTokenPtr(v *DataflowEndpointAuthenticationAccessTokenArgs) DataflowEndpointAuthenticationAccessTokenPtrInput {
	return (*dataflowEndpointAuthenticationAccessTokenPtrType)(v)
}

func (*dataflowEndpointAuthenticationAccessTokenPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataflowEndpointAuthenticationAccessToken)(nil)).Elem()
}

func (i *dataflowEndpointAuthenticationAccessTokenPtrType) ToDataflowEndpointAuthenticationAccessTokenPtrOutput() DataflowEndpointAuthenticationAccessTokenPtrOutput {
	return i.ToDataflowEndpointAuthenticationAccessTokenPtrOutputWithContext(context.Background())
}

func (i *dataflowEndpointAuthenticationAccessTokenPtrType) ToDataflowEndpointAuthenticationAccessTokenPtrOutputWithContext(ctx context.Context) DataflowEndpointAuthenticationAccessTokenPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataflowEndpointAuthenticationAccessTokenPtrOutput)
}

// DataflowEndpoint Authentication Access Token properties
type DataflowEndpointAuthenticationAccessTokenOutput struct{ *pulumi.OutputState }

func (DataflowEndpointAuthenticationAccessTokenOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataflowEndpointAuthenticationAccessToken)(nil)).Elem()
}

func (o DataflowEndpointAuthenticationAccessTokenOutput) ToDataflowEndpointAuthenticationAccessTokenOutput() DataflowEndpointAuthenticationAccessTokenOutput {
	return o
}

func (o DataflowEndpointAuthenticationAccessTokenOutput) ToDataflowEndpointAuthenticationAccessTokenOutputWithContext(ctx context.Context) DataflowEndpointAuthenticationAccessTokenOutput {
	return o
}

func (o DataflowEndpointAuthenticationAccessTokenOutput) ToDataflowEndpointAuthenticationAccessTokenPtrOutput() DataflowEndpointAuthenticationAccessTokenPtrOutput {
	return o.ToDataflowEndpointAuthenticationAccessTokenPtrOutputWithContext(context.Background())
}

func (o DataflowEndpointAuthenticationAccessTokenOutput) ToDataflowEndpointAuthenticationAccessTokenPtrOutputWithContext(ctx context.Context) DataflowEndpointAuthenticationAccessTokenPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataflowEndpointAuthenticationAccessToken) *DataflowEndpointAuthenticationAccessToken {
		return &v
	}).(DataflowEndpointAuthenticationAccessTokenPtrOutput)
}

// Token secret name.
func (o DataflowEndpointAuthenticationAccessTokenOutput) SecretRef() pulumi.StringOutput {
	return o.ApplyT(func(v DataflowEndpointAuthenticationAccessToken) string { return v.SecretRef }).(pulumi.StringOutput)
}

type DataflowEndpointAuthenticationAccessTokenPtrOutput struct{ *pulumi.OutputState }

func (DataflowEndpointAuthenticationAccessTokenPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataflowEndpointAuthenticationAccessToken)(nil)).Elem()
}

func (o DataflowEndpointAuthenticationAccessTokenPtrOutput) ToDataflowEndpointAuthenticationAccessTokenPtrOutput() DataflowEndpointAuthenticationAccessTokenPtrOutput {
	return o
}

func (o DataflowEndpointAuthenticationAccessTokenPtrOutput) ToDataflowEndpointAuthenticationAccessTokenPtrOutputWithContext(ctx context.Context) DataflowEndpointAuthenticationAccessTokenPtrOutput {
	return o
}

func (o DataflowEndpointAuthenticationAccessTokenPtrOutput) Elem() DataflowEndpointAuthenticationAccessTokenOutput {
	return o.ApplyT(func(v *DataflowEndpointAuthenticationAccessToken) DataflowEndpointAuthenticationAccessToken {
		if v != nil {
			return *v
		}
		var ret DataflowEndpointAuthenticationAccessToken
		return ret
	}).(DataflowEndpointAuthenticationAccessTokenOutput)
}

// Token secret name.
func (o DataflowEndpointAuthenticationAccessTokenPtrOutput) SecretRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataflowEndpointAuthenticationAccessToken) *string {
		if v == nil {
			return nil
		}
		return &v.SecretRef
	}).(pulumi.StringPtrOutput)
}

// DataflowEndpoint Authentication Access Token properties
type DataflowEndpointAuthenticationAccessTokenResponse struct {
	// Token secret name.
	SecretRef string `pulumi:"secretRef"`
}

// DataflowEndpoint Authentication Access Token properties
type DataflowEndpointAuthenticationAccessTokenResponseOutput struct{ *pulumi.OutputState }

func (DataflowEndpointAuthenticationAccessTokenResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataflowEndpointAuthenticationAccessTokenResponse)(nil)).Elem()
}

func (o DataflowEndpointAuthenticationAccessTokenResponseOutput) ToDataflowEndpointAuthenticationAccessTokenResponseOutput() DataflowEndpointAuthenticationAccessTokenResponseOutput {
	return o
}

func (o DataflowEndpointAuthenticationAccessTokenResponseOutput) ToDataflowEndpointAuthenticationAccessTokenResponseOutputWithContext(ctx context.Context) DataflowEndpointAuthenticationAccessTokenResponseOutput {
	return o
}

// Token secret name.
func (o DataflowEndpointAuthenticationAccessTokenResponseOutput) SecretRef() pulumi.StringOutput {
	return o.ApplyT(func(v DataflowEndpointAuthenticationAccessTokenResponse) string { return v.SecretRef }).(pulumi.StringOutput)
}

type DataflowEndpointAuthenticationAccessTokenResponsePtrOutput struct{ *pulumi.OutputState }

func (DataflowEndpointAuthenticationAccessTokenResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataflowEndpointAuthenticationAccessTokenResponse)(nil)).Elem()
}

func (o DataflowEndpointAuthenticationAccessTokenResponsePtrOutput) ToDataflowEndpointAuthenticationAccessTokenResponsePtrOutput() DataflowEndpointAuthenticationAccessTokenResponsePtrOutput {
	return o
}

func (o DataflowEndpointAuthenticationAccessTokenResponsePtrOutput) ToDataflowEndpointAuthenticationAccessTokenResponsePtrOutputWithContext(ctx context.Context) DataflowEndpointAuthenticationAccessTokenResponsePtrOutput {
	return o
}

func (o DataflowEndpointAuthenticationAccessTokenResponsePtrOutput) Elem() DataflowEndpointAuthenticationAccessTokenResponseOutput {
	return o.ApplyT(func(v *DataflowEndpointAuthenticationAccessTokenResponse) DataflowEndpointAuthenticationAccessTokenResponse {
		if v != nil {
			return *v
		}
		var ret DataflowEndpointAuthenticationAccessTokenResponse
		return ret
	}).(DataflowEndpointAuthenticationAccessTokenResponseOutput)
}

// Token secret name.
func (o DataflowEndpointAuthenticationAccessTokenResponsePtrOutput) SecretRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataflowEndpointAuthenticationAccessTokenResponse) *string {
		if v == nil {
			return nil
		}
		return &v.SecretRef
	}).(pulumi.StringPtrOutput)
}

// DataflowEndpoint Authentication Sasl properties
type DataflowEndpointAuthenticationSasl struct {
	// Type of SASL authentication. Can be PLAIN, SCRAM-SHA-256, or SCRAM-SHA-512.
	SaslType string `pulumi:"saslType"`
	// Token secret name.
	SecretRef string `pulumi:"secretRef"`
}

// DataflowEndpointAuthenticationSaslInput is an input type that accepts DataflowEndpointAuthenticationSaslArgs and DataflowEndpointAuthenticationSaslOutput values.
// You can construct a concrete instance of `DataflowEndpointAuthenticationSaslInput` via:
//
//	DataflowEndpointAuthenticationSaslArgs{...}
type DataflowEndpointAuthenticationSaslInput interface {
	pulumi.Input

	ToDataflowEndpointAuthenticationSaslOutput() DataflowEndpointAuthenticationSaslOutput
	ToDataflowEndpointAuthenticationSaslOutputWithContext(context.Context) DataflowEndpointAuthenticationSaslOutput
}

// DataflowEndpoint Authentication Sasl properties
type DataflowEndpointAuthenticationSaslArgs struct {
	// Type of SASL authentication. Can be PLAIN, SCRAM-SHA-256, or SCRAM-SHA-512.
	SaslType pulumi.StringInput `pulumi:"saslType"`
	// Token secret name.
	SecretRef pulumi.StringInput `pulumi:"secretRef"`
}

func (DataflowEndpointAuthenticationSaslArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataflowEndpointAuthenticationSasl)(nil)).Elem()
}

func (i DataflowEndpointAuthenticationSaslArgs) ToDataflowEndpointAuthenticationSaslOutput() DataflowEndpointAuthenticationSaslOutput {
	return i.ToDataflowEndpointAuthenticationSaslOutputWithContext(context.Background())
}

func (i DataflowEndpointAuthenticationSaslArgs) ToDataflowEndpointAuthenticationSaslOutputWithContext(ctx context.Context) DataflowEndpointAuthenticationSaslOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataflowEndpointAuthenticationSaslOutput)
}

func (i DataflowEndpointAuthenticationSaslArgs) ToDataflowEndpointAuthenticationSaslPtrOutput() DataflowEndpointAuthenticationSaslPtrOutput {
	return i.ToDataflowEndpointAuthenticationSaslPtrOutputWithContext(context.Background())
}

func (i DataflowEndpointAuthenticationSaslArgs) ToDataflowEndpointAuthenticationSaslPtrOutputWithContext(ctx context.Context) DataflowEndpointAuthenticationSaslPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataflowEndpointAuthenticationSaslOutput).ToDataflowEndpointAuthenticationSaslPtrOutputWithContext(ctx)
}

// DataflowEndpointAuthenticationSaslPtrInput is an input type that accepts DataflowEndpointAuthenticationSaslArgs, DataflowEndpointAuthenticationSaslPtr and DataflowEndpointAuthenticationSaslPtrOutput values.
// You can construct a concrete instance of `DataflowEndpointAuthenticationSaslPtrInput` via:
//
//	        DataflowEndpointAuthenticationSaslArgs{...}
//
//	or:
//
//	        nil
type DataflowEndpointAuthenticationSaslPtrInput interface {
	pulumi.Input

	ToDataflowEndpointAuthenticationSaslPtrOutput() DataflowEndpointAuthenticationSaslPtrOutput
	ToDataflowEndpointAuthenticationSaslPtrOutputWithContext(context.Context) DataflowEndpointAuthenticationSaslPtrOutput
}

type dataflowEndpointAuthenticationSaslPtrType DataflowEndpointAuthenticationSaslArgs

func DataflowEndpointAuthenticationSaslPtr(v *DataflowEndpointAuthenticationSaslArgs) DataflowEndpointAuthenticationSaslPtrInput {
	return (*dataflowEndpointAuthenticationSaslPtrType)(v)
}

func (*dataflowEndpointAuthenticationSaslPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataflowEndpointAuthenticationSasl)(nil)).Elem()
}

func (i *dataflowEndpointAuthenticationSaslPtrType) ToDataflowEndpointAuthenticationSaslPtrOutput() DataflowEndpointAuthenticationSaslPtrOutput {
	return i.ToDataflowEndpointAuthenticationSaslPtrOutputWithContext(context.Background())
}

func (i *dataflowEndpointAuthenticationSaslPtrType) ToDataflowEndpointAuthenticationSaslPtrOutputWithContext(ctx context.Context) DataflowEndpointAuthenticationSaslPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataflowEndpointAuthenticationSaslPtrOutput)
}

// DataflowEndpoint Authentication Sasl properties
type DataflowEndpointAuthenticationSaslOutput struct{ *pulumi.OutputState }

func (DataflowEndpointAuthenticationSaslOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataflowEndpointAuthenticationSasl)(nil)).Elem()
}

func (o DataflowEndpointAuthenticationSaslOutput) ToDataflowEndpointAuthenticationSaslOutput() DataflowEndpointAuthenticationSaslOutput {
	return o
}

func (o DataflowEndpointAuthenticationSaslOutput) ToDataflowEndpointAuthenticationSaslOutputWithContext(ctx context.Context) DataflowEndpointAuthenticationSaslOutput {
	return o
}

func (o DataflowEndpointAuthenticationSaslOutput) ToDataflowEndpointAuthenticationSaslPtrOutput() DataflowEndpointAuthenticationSaslPtrOutput {
	return o.ToDataflowEndpointAuthenticationSaslPtrOutputWithContext(context.Background())
}

func (o DataflowEndpointAuthenticationSaslOutput) ToDataflowEndpointAuthenticationSaslPtrOutputWithContext(ctx context.Context) DataflowEndpointAuthenticationSaslPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataflowEndpointAuthenticationSasl) *DataflowEndpointAuthenticationSasl {
		return &v
	}).(DataflowEndpointAuthenticationSaslPtrOutput)
}

// Type of SASL authentication. Can be PLAIN, SCRAM-SHA-256, or SCRAM-SHA-512.
func (o DataflowEndpointAuthenticationSaslOutput) SaslType() pulumi.StringOutput {
	return o.ApplyT(func(v DataflowEndpointAuthenticationSasl) string { return v.SaslType }).(pulumi.StringOutput)
}

// Token secret name.
func (o DataflowEndpointAuthenticationSaslOutput) SecretRef() pulumi.StringOutput {
	return o.ApplyT(func(v DataflowEndpointAuthenticationSasl) string { return v.SecretRef }).(pulumi.StringOutput)
}

type DataflowEndpointAuthenticationSaslPtrOutput struct{ *pulumi.OutputState }

func (DataflowEndpointAuthenticationSaslPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataflowEndpointAuthenticationSasl)(nil)).Elem()
}

func (o DataflowEndpointAuthenticationSaslPtrOutput) ToDataflowEndpointAuthenticationSaslPtrOutput() DataflowEndpointAuthenticationSaslPtrOutput {
	return o
}

func (o DataflowEndpointAuthenticationSaslPtrOutput) ToDataflowEndpointAuthenticationSaslPtrOutputWithContext(ctx context.Context) DataflowEndpointAuthenticationSaslPtrOutput {
	return o
}

func (o DataflowEndpointAuthenticationSaslPtrOutput) Elem() DataflowEndpointAuthenticationSaslOutput {
	return o.ApplyT(func(v *DataflowEndpointAuthenticationSasl) DataflowEndpointAuthenticationSasl {
		if v != nil {
			return *v
		}
		var ret DataflowEndpointAuthenticationSasl
		return ret
	}).(DataflowEndpointAuthenticationSaslOutput)
}

// Type of SASL authentication. Can be PLAIN, SCRAM-SHA-256, or SCRAM-SHA-512.
func (o DataflowEndpointAuthenticationSaslPtrOutput) SaslType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataflowEndpointAuthenticationSasl) *string {
		if v == nil {
			return nil
		}
		return &v.SaslType
	}).(pulumi.StringPtrOutput)
}

// Token secret name.
func (o DataflowEndpointAuthenticationSaslPtrOutput) SecretRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataflowEndpointAuthenticationSasl) *string {
		if v == nil {
			return nil
		}
		return &v.SecretRef
	}).(pulumi.StringPtrOutput)
}

// DataflowEndpoint Authentication Sasl properties
type DataflowEndpointAuthenticationSaslResponse struct {
	// Type of SASL authentication. Can be PLAIN, SCRAM-SHA-256, or SCRAM-SHA-512.
	SaslType string `pulumi:"saslType"`
	// Token secret name.
	SecretRef string `pulumi:"secretRef"`
}

// DataflowEndpoint Authentication Sasl properties
type DataflowEndpointAuthenticationSaslResponseOutput struct{ *pulumi.OutputState }

func (DataflowEndpointAuthenticationSaslResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataflowEndpointAuthenticationSaslResponse)(nil)).Elem()
}

func (o DataflowEndpointAuthenticationSaslResponseOutput) ToDataflowEndpointAuthenticationSaslResponseOutput() DataflowEndpointAuthenticationSaslResponseOutput {
	return o
}

func (o DataflowEndpointAuthenticationSaslResponseOutput) ToDataflowEndpointAuthenticationSaslResponseOutputWithContext(ctx context.Context) DataflowEndpointAuthenticationSaslResponseOutput {
	return o
}

// Type of SASL authentication. Can be PLAIN, SCRAM-SHA-256, or SCRAM-SHA-512.
func (o DataflowEndpointAuthenticationSaslResponseOutput) SaslType() pulumi.StringOutput {
	return o.ApplyT(func(v DataflowEndpointAuthenticationSaslResponse) string { return v.SaslType }).(pulumi.StringOutput)
}

// Token secret name.
func (o DataflowEndpointAuthenticationSaslResponseOutput) SecretRef() pulumi.StringOutput {
	return o.ApplyT(func(v DataflowEndpointAuthenticationSaslResponse) string { return v.SecretRef }).(pulumi.StringOutput)
}

type DataflowEndpointAuthenticationSaslResponsePtrOutput struct{ *pulumi.OutputState }

func (DataflowEndpointAuthenticationSaslResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataflowEndpointAuthenticationSaslResponse)(nil)).Elem()
}

func (o DataflowEndpointAuthenticationSaslResponsePtrOutput) ToDataflowEndpointAuthenticationSaslResponsePtrOutput() DataflowEndpointAuthenticationSaslResponsePtrOutput {
	return o
}

func (o DataflowEndpointAuthenticationSaslResponsePtrOutput) ToDataflowEndpointAuthenticationSaslResponsePtrOutputWithContext(ctx context.Context) DataflowEndpointAuthenticationSaslResponsePtrOutput {
	return o
}

func (o DataflowEndpointAuthenticationSaslResponsePtrOutput) Elem() DataflowEndpointAuthenticationSaslResponseOutput {
	return o.ApplyT(func(v *DataflowEndpointAuthenticationSaslResponse) DataflowEndpointAuthenticationSaslResponse {
		if v != nil {
			return *v
		}
		var ret DataflowEndpointAuthenticationSaslResponse
		return ret
	}).(DataflowEndpointAuthenticationSaslResponseOutput)
}

// Type of SASL authentication. Can be PLAIN, SCRAM-SHA-256, or SCRAM-SHA-512.
func (o DataflowEndpointAuthenticationSaslResponsePtrOutput) SaslType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataflowEndpointAuthenticationSaslResponse) *string {
		if v == nil {
			return nil
		}
		return &v.SaslType
	}).(pulumi.StringPtrOutput)
}

// Token secret name.
func (o DataflowEndpointAuthenticationSaslResponsePtrOutput) SecretRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataflowEndpointAuthenticationSaslResponse) *string {
		if v == nil {
			return nil
		}
		return &v.SecretRef
	}).(pulumi.StringPtrOutput)
}

// Service Account Token for BrokerAuthentication
type DataflowEndpointAuthenticationServiceAccountToken struct {
	// Audience of the service account. Optional, defaults to the broker internal service account audience.
	Audience string `pulumi:"audience"`
}

// DataflowEndpointAuthenticationServiceAccountTokenInput is an input type that accepts DataflowEndpointAuthenticationServiceAccountTokenArgs and DataflowEndpointAuthenticationServiceAccountTokenOutput values.
// You can construct a concrete instance of `DataflowEndpointAuthenticationServiceAccountTokenInput` via:
//
//	DataflowEndpointAuthenticationServiceAccountTokenArgs{...}
type DataflowEndpointAuthenticationServiceAccountTokenInput interface {
	pulumi.Input

	ToDataflowEndpointAuthenticationServiceAccountTokenOutput() DataflowEndpointAuthenticationServiceAccountTokenOutput
	ToDataflowEndpointAuthenticationServiceAccountTokenOutputWithContext(context.Context) DataflowEndpointAuthenticationServiceAccountTokenOutput
}

// Service Account Token for BrokerAuthentication
type DataflowEndpointAuthenticationServiceAccountTokenArgs struct {
	// Audience of the service account. Optional, defaults to the broker internal service account audience.
	Audience pulumi.StringInput `pulumi:"audience"`
}

func (DataflowEndpointAuthenticationServiceAccountTokenArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataflowEndpointAuthenticationServiceAccountToken)(nil)).Elem()
}

func (i DataflowEndpointAuthenticationServiceAccountTokenArgs) ToDataflowEndpointAuthenticationServiceAccountTokenOutput() DataflowEndpointAuthenticationServiceAccountTokenOutput {
	return i.ToDataflowEndpointAuthenticationServiceAccountTokenOutputWithContext(context.Background())
}

func (i DataflowEndpointAuthenticationServiceAccountTokenArgs) ToDataflowEndpointAuthenticationServiceAccountTokenOutputWithContext(ctx context.Context) DataflowEndpointAuthenticationServiceAccountTokenOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataflowEndpointAuthenticationServiceAccountTokenOutput)
}

func (i DataflowEndpointAuthenticationServiceAccountTokenArgs) ToDataflowEndpointAuthenticationServiceAccountTokenPtrOutput() DataflowEndpointAuthenticationServiceAccountTokenPtrOutput {
	return i.ToDataflowEndpointAuthenticationServiceAccountTokenPtrOutputWithContext(context.Background())
}

func (i DataflowEndpointAuthenticationServiceAccountTokenArgs) ToDataflowEndpointAuthenticationServiceAccountTokenPtrOutputWithContext(ctx context.Context) DataflowEndpointAuthenticationServiceAccountTokenPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataflowEndpointAuthenticationServiceAccountTokenOutput).ToDataflowEndpointAuthenticationServiceAccountTokenPtrOutputWithContext(ctx)
}

// DataflowEndpointAuthenticationServiceAccountTokenPtrInput is an input type that accepts DataflowEndpointAuthenticationServiceAccountTokenArgs, DataflowEndpointAuthenticationServiceAccountTokenPtr and DataflowEndpointAuthenticationServiceAccountTokenPtrOutput values.
// You can construct a concrete instance of `DataflowEndpointAuthenticationServiceAccountTokenPtrInput` via:
//
//	        DataflowEndpointAuthenticationServiceAccountTokenArgs{...}
//
//	or:
//
//	        nil
type DataflowEndpointAuthenticationServiceAccountTokenPtrInput interface {
	pulumi.Input

	ToDataflowEndpointAuthenticationServiceAccountTokenPtrOutput() DataflowEndpointAuthenticationServiceAccountTokenPtrOutput
	ToDataflowEndpointAuthenticationServiceAccountTokenPtrOutputWithContext(context.Context) DataflowEndpointAuthenticationServiceAccountTokenPtrOutput
}

type dataflowEndpointAuthenticationServiceAccountTokenPtrType DataflowEndpointAuthenticationServiceAccountTokenArgs

func DataflowEndpointAuthenticationServiceAccountTokenPtr(v *DataflowEndpointAuthenticationServiceAccountTokenArgs) DataflowEndpointAuthenticationServiceAccountTokenPtrInput {
	return (*dataflowEndpointAuthenticationServiceAccountTokenPtrType)(v)
}

func (*dataflowEndpointAuthenticationServiceAccountTokenPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataflowEndpointAuthenticationServiceAccountToken)(nil)).Elem()
}

func (i *dataflowEndpointAuthenticationServiceAccountTokenPtrType) ToDataflowEndpointAuthenticationServiceAccountTokenPtrOutput() DataflowEndpointAuthenticationServiceAccountTokenPtrOutput {
	return i.ToDataflowEndpointAuthenticationServiceAccountTokenPtrOutputWithContext(context.Background())
}

func (i *dataflowEndpointAuthenticationServiceAccountTokenPtrType) ToDataflowEndpointAuthenticationServiceAccountTokenPtrOutputWithContext(ctx context.Context) DataflowEndpointAuthenticationServiceAccountTokenPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataflowEndpointAuthenticationServiceAccountTokenPtrOutput)
}

// Service Account Token for BrokerAuthentication
type DataflowEndpointAuthenticationServiceAccountTokenOutput struct{ *pulumi.OutputState }

func (DataflowEndpointAuthenticationServiceAccountTokenOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataflowEndpointAuthenticationServiceAccountToken)(nil)).Elem()
}

func (o DataflowEndpointAuthenticationServiceAccountTokenOutput) ToDataflowEndpointAuthenticationServiceAccountTokenOutput() DataflowEndpointAuthenticationServiceAccountTokenOutput {
	return o
}

func (o DataflowEndpointAuthenticationServiceAccountTokenOutput) ToDataflowEndpointAuthenticationServiceAccountTokenOutputWithContext(ctx context.Context) DataflowEndpointAuthenticationServiceAccountTokenOutput {
	return o
}

func (o DataflowEndpointAuthenticationServiceAccountTokenOutput) ToDataflowEndpointAuthenticationServiceAccountTokenPtrOutput() DataflowEndpointAuthenticationServiceAccountTokenPtrOutput {
	return o.ToDataflowEndpointAuthenticationServiceAccountTokenPtrOutputWithContext(context.Background())
}

func (o DataflowEndpointAuthenticationServiceAccountTokenOutput) ToDataflowEndpointAuthenticationServiceAccountTokenPtrOutputWithContext(ctx context.Context) DataflowEndpointAuthenticationServiceAccountTokenPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataflowEndpointAuthenticationServiceAccountToken) *DataflowEndpointAuthenticationServiceAccountToken {
		return &v
	}).(DataflowEndpointAuthenticationServiceAccountTokenPtrOutput)
}

// Audience of the service account. Optional, defaults to the broker internal service account audience.
func (o DataflowEndpointAuthenticationServiceAccountTokenOutput) Audience() pulumi.StringOutput {
	return o.ApplyT(func(v DataflowEndpointAuthenticationServiceAccountToken) string { return v.Audience }).(pulumi.StringOutput)
}

type DataflowEndpointAuthenticationServiceAccountTokenPtrOutput struct{ *pulumi.OutputState }

func (DataflowEndpointAuthenticationServiceAccountTokenPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataflowEndpointAuthenticationServiceAccountToken)(nil)).Elem()
}

func (o DataflowEndpointAuthenticationServiceAccountTokenPtrOutput) ToDataflowEndpointAuthenticationServiceAccountTokenPtrOutput() DataflowEndpointAuthenticationServiceAccountTokenPtrOutput {
	return o
}

func (o DataflowEndpointAuthenticationServiceAccountTokenPtrOutput) ToDataflowEndpointAuthenticationServiceAccountTokenPtrOutputWithContext(ctx context.Context) DataflowEndpointAuthenticationServiceAccountTokenPtrOutput {
	return o
}

func (o DataflowEndpointAuthenticationServiceAccountTokenPtrOutput) Elem() DataflowEndpointAuthenticationServiceAccountTokenOutput {
	return o.ApplyT(func(v *DataflowEndpointAuthenticationServiceAccountToken) DataflowEndpointAuthenticationServiceAccountToken {
		if v != nil {
			return *v
		}
		var ret DataflowEndpointAuthenticationServiceAccountToken
		return ret
	}).(DataflowEndpointAuthenticationServiceAccountTokenOutput)
}

// Audience of the service account. Optional, defaults to the broker internal service account audience.
func (o DataflowEndpointAuthenticationServiceAccountTokenPtrOutput) Audience() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataflowEndpointAuthenticationServiceAccountToken) *string {
		if v == nil {
			return nil
		}
		return &v.Audience
	}).(pulumi.StringPtrOutput)
}

// Service Account Token for BrokerAuthentication
type DataflowEndpointAuthenticationServiceAccountTokenResponse struct {
	// Audience of the service account. Optional, defaults to the broker internal service account audience.
	Audience string `pulumi:"audience"`
}

// Service Account Token for BrokerAuthentication
type DataflowEndpointAuthenticationServiceAccountTokenResponseOutput struct{ *pulumi.OutputState }

func (DataflowEndpointAuthenticationServiceAccountTokenResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataflowEndpointAuthenticationServiceAccountTokenResponse)(nil)).Elem()
}

func (o DataflowEndpointAuthenticationServiceAccountTokenResponseOutput) ToDataflowEndpointAuthenticationServiceAccountTokenResponseOutput() DataflowEndpointAuthenticationServiceAccountTokenResponseOutput {
	return o
}

func (o DataflowEndpointAuthenticationServiceAccountTokenResponseOutput) ToDataflowEndpointAuthenticationServiceAccountTokenResponseOutputWithContext(ctx context.Context) DataflowEndpointAuthenticationServiceAccountTokenResponseOutput {
	return o
}

// Audience of the service account. Optional, defaults to the broker internal service account audience.
func (o DataflowEndpointAuthenticationServiceAccountTokenResponseOutput) Audience() pulumi.StringOutput {
	return o.ApplyT(func(v DataflowEndpointAuthenticationServiceAccountTokenResponse) string { return v.Audience }).(pulumi.StringOutput)
}

type DataflowEndpointAuthenticationServiceAccountTokenResponsePtrOutput struct{ *pulumi.OutputState }

func (DataflowEndpointAuthenticationServiceAccountTokenResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataflowEndpointAuthenticationServiceAccountTokenResponse)(nil)).Elem()
}

func (o DataflowEndpointAuthenticationServiceAccountTokenResponsePtrOutput) ToDataflowEndpointAuthenticationServiceAccountTokenResponsePtrOutput() DataflowEndpointAuthenticationServiceAccountTokenResponsePtrOutput {
	return o
}

func (o DataflowEndpointAuthenticationServiceAccountTokenResponsePtrOutput) ToDataflowEndpointAuthenticationServiceAccountTokenResponsePtrOutputWithContext(ctx context.Context) DataflowEndpointAuthenticationServiceAccountTokenResponsePtrOutput {
	return o
}

func (o DataflowEndpointAuthenticationServiceAccountTokenResponsePtrOutput) Elem() DataflowEndpointAuthenticationServiceAccountTokenResponseOutput {
	return o.ApplyT(func(v *DataflowEndpointAuthenticationServiceAccountTokenResponse) DataflowEndpointAuthenticationServiceAccountTokenResponse {
		if v != nil {
			return *v
		}
		var ret DataflowEndpointAuthenticationServiceAccountTokenResponse
		return ret
	}).(DataflowEndpointAuthenticationServiceAccountTokenResponseOutput)
}

// Audience of the service account. Optional, defaults to the broker internal service account audience.
func (o DataflowEndpointAuthenticationServiceAccountTokenResponsePtrOutput) Audience() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataflowEndpointAuthenticationServiceAccountTokenResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Audience
	}).(pulumi.StringPtrOutput)
}

// DataflowEndpoint Authentication SystemAssignedManagedIdentity properties
type DataflowEndpointAuthenticationSystemAssignedManagedIdentity struct {
	// Audience of the service to authenticate against. Optional; defaults to the audience for Service host configuration.
	Audience *string `pulumi:"audience"`
}

// DataflowEndpointAuthenticationSystemAssignedManagedIdentityInput is an input type that accepts DataflowEndpointAuthenticationSystemAssignedManagedIdentityArgs and DataflowEndpointAuthenticationSystemAssignedManagedIdentityOutput values.
// You can construct a concrete instance of `DataflowEndpointAuthenticationSystemAssignedManagedIdentityInput` via:
//
//	DataflowEndpointAuthenticationSystemAssignedManagedIdentityArgs{...}
type DataflowEndpointAuthenticationSystemAssignedManagedIdentityInput interface {
	pulumi.Input

	ToDataflowEndpointAuthenticationSystemAssignedManagedIdentityOutput() DataflowEndpointAuthenticationSystemAssignedManagedIdentityOutput
	ToDataflowEndpointAuthenticationSystemAssignedManagedIdentityOutputWithContext(context.Context) DataflowEndpointAuthenticationSystemAssignedManagedIdentityOutput
}

// DataflowEndpoint Authentication SystemAssignedManagedIdentity properties
type DataflowEndpointAuthenticationSystemAssignedManagedIdentityArgs struct {
	// Audience of the service to authenticate against. Optional; defaults to the audience for Service host configuration.
	Audience pulumi.StringPtrInput `pulumi:"audience"`
}

func (DataflowEndpointAuthenticationSystemAssignedManagedIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataflowEndpointAuthenticationSystemAssignedManagedIdentity)(nil)).Elem()
}

func (i DataflowEndpointAuthenticationSystemAssignedManagedIdentityArgs) ToDataflowEndpointAuthenticationSystemAssignedManagedIdentityOutput() DataflowEndpointAuthenticationSystemAssignedManagedIdentityOutput {
	return i.ToDataflowEndpointAuthenticationSystemAssignedManagedIdentityOutputWithContext(context.Background())
}

func (i DataflowEndpointAuthenticationSystemAssignedManagedIdentityArgs) ToDataflowEndpointAuthenticationSystemAssignedManagedIdentityOutputWithContext(ctx context.Context) DataflowEndpointAuthenticationSystemAssignedManagedIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataflowEndpointAuthenticationSystemAssignedManagedIdentityOutput)
}

func (i DataflowEndpointAuthenticationSystemAssignedManagedIdentityArgs) ToDataflowEndpointAuthenticationSystemAssignedManagedIdentityPtrOutput() DataflowEndpointAuthenticationSystemAssignedManagedIdentityPtrOutput {
	return i.ToDataflowEndpointAuthenticationSystemAssignedManagedIdentityPtrOutputWithContext(context.Background())
}

func (i DataflowEndpointAuthenticationSystemAssignedManagedIdentityArgs) ToDataflowEndpointAuthenticationSystemAssignedManagedIdentityPtrOutputWithContext(ctx context.Context) DataflowEndpointAuthenticationSystemAssignedManagedIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataflowEndpointAuthenticationSystemAssignedManagedIdentityOutput).ToDataflowEndpointAuthenticationSystemAssignedManagedIdentityPtrOutputWithContext(ctx)
}

// DataflowEndpointAuthenticationSystemAssignedManagedIdentityPtrInput is an input type that accepts DataflowEndpointAuthenticationSystemAssignedManagedIdentityArgs, DataflowEndpointAuthenticationSystemAssignedManagedIdentityPtr and DataflowEndpointAuthenticationSystemAssignedManagedIdentityPtrOutput values.
// You can construct a concrete instance of `DataflowEndpointAuthenticationSystemAssignedManagedIdentityPtrInput` via:
//
//	        DataflowEndpointAuthenticationSystemAssignedManagedIdentityArgs{...}
//
//	or:
//
//	        nil
type DataflowEndpointAuthenticationSystemAssignedManagedIdentityPtrInput interface {
	pulumi.Input

	ToDataflowEndpointAuthenticationSystemAssignedManagedIdentityPtrOutput() DataflowEndpointAuthenticationSystemAssignedManagedIdentityPtrOutput
	ToDataflowEndpointAuthenticationSystemAssignedManagedIdentityPtrOutputWithContext(context.Context) DataflowEndpointAuthenticationSystemAssignedManagedIdentityPtrOutput
}

type dataflowEndpointAuthenticationSystemAssignedManagedIdentityPtrType DataflowEndpointAuthenticationSystemAssignedManagedIdentityArgs

func DataflowEndpointAuthenticationSystemAssignedManagedIdentityPtr(v *DataflowEndpointAuthenticationSystemAssignedManagedIdentityArgs) DataflowEndpointAuthenticationSystemAssignedManagedIdentityPtrInput {
	return (*dataflowEndpointAuthenticationSystemAssignedManagedIdentityPtrType)(v)
}

func (*dataflowEndpointAuthenticationSystemAssignedManagedIdentityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataflowEndpointAuthenticationSystemAssignedManagedIdentity)(nil)).Elem()
}

func (i *dataflowEndpointAuthenticationSystemAssignedManagedIdentityPtrType) ToDataflowEndpointAuthenticationSystemAssignedManagedIdentityPtrOutput() DataflowEndpointAuthenticationSystemAssignedManagedIdentityPtrOutput {
	return i.ToDataflowEndpointAuthenticationSystemAssignedManagedIdentityPtrOutputWithContext(context.Background())
}

func (i *dataflowEndpointAuthenticationSystemAssignedManagedIdentityPtrType) ToDataflowEndpointAuthenticationSystemAssignedManagedIdentityPtrOutputWithContext(ctx context.Context) DataflowEndpointAuthenticationSystemAssignedManagedIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataflowEndpointAuthenticationSystemAssignedManagedIdentityPtrOutput)
}

// DataflowEndpoint Authentication SystemAssignedManagedIdentity properties
type DataflowEndpointAuthenticationSystemAssignedManagedIdentityOutput struct{ *pulumi.OutputState }

func (DataflowEndpointAuthenticationSystemAssignedManagedIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataflowEndpointAuthenticationSystemAssignedManagedIdentity)(nil)).Elem()
}

func (o DataflowEndpointAuthenticationSystemAssignedManagedIdentityOutput) ToDataflowEndpointAuthenticationSystemAssignedManagedIdentityOutput() DataflowEndpointAuthenticationSystemAssignedManagedIdentityOutput {
	return o
}

func (o DataflowEndpointAuthenticationSystemAssignedManagedIdentityOutput) ToDataflowEndpointAuthenticationSystemAssignedManagedIdentityOutputWithContext(ctx context.Context) DataflowEndpointAuthenticationSystemAssignedManagedIdentityOutput {
	return o
}

func (o DataflowEndpointAuthenticationSystemAssignedManagedIdentityOutput) ToDataflowEndpointAuthenticationSystemAssignedManagedIdentityPtrOutput() DataflowEndpointAuthenticationSystemAssignedManagedIdentityPtrOutput {
	return o.ToDataflowEndpointAuthenticationSystemAssignedManagedIdentityPtrOutputWithContext(context.Background())
}

func (o DataflowEndpointAuthenticationSystemAssignedManagedIdentityOutput) ToDataflowEndpointAuthenticationSystemAssignedManagedIdentityPtrOutputWithContext(ctx context.Context) DataflowEndpointAuthenticationSystemAssignedManagedIdentityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataflowEndpointAuthenticationSystemAssignedManagedIdentity) *DataflowEndpointAuthenticationSystemAssignedManagedIdentity {
		return &v
	}).(DataflowEndpointAuthenticationSystemAssignedManagedIdentityPtrOutput)
}

// Audience of the service to authenticate against. Optional; defaults to the audience for Service host configuration.
func (o DataflowEndpointAuthenticationSystemAssignedManagedIdentityOutput) Audience() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataflowEndpointAuthenticationSystemAssignedManagedIdentity) *string { return v.Audience }).(pulumi.StringPtrOutput)
}

type DataflowEndpointAuthenticationSystemAssignedManagedIdentityPtrOutput struct{ *pulumi.OutputState }

func (DataflowEndpointAuthenticationSystemAssignedManagedIdentityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataflowEndpointAuthenticationSystemAssignedManagedIdentity)(nil)).Elem()
}

func (o DataflowEndpointAuthenticationSystemAssignedManagedIdentityPtrOutput) ToDataflowEndpointAuthenticationSystemAssignedManagedIdentityPtrOutput() DataflowEndpointAuthenticationSystemAssignedManagedIdentityPtrOutput {
	return o
}

func (o DataflowEndpointAuthenticationSystemAssignedManagedIdentityPtrOutput) ToDataflowEndpointAuthenticationSystemAssignedManagedIdentityPtrOutputWithContext(ctx context.Context) DataflowEndpointAuthenticationSystemAssignedManagedIdentityPtrOutput {
	return o
}

func (o DataflowEndpointAuthenticationSystemAssignedManagedIdentityPtrOutput) Elem() DataflowEndpointAuthenticationSystemAssignedManagedIdentityOutput {
	return o.ApplyT(func(v *DataflowEndpointAuthenticationSystemAssignedManagedIdentity) DataflowEndpointAuthenticationSystemAssignedManagedIdentity {
		if v != nil {
			return *v
		}
		var ret DataflowEndpointAuthenticationSystemAssignedManagedIdentity
		return ret
	}).(DataflowEndpointAuthenticationSystemAssignedManagedIdentityOutput)
}

// Audience of the service to authenticate against. Optional; defaults to the audience for Service host configuration.
func (o DataflowEndpointAuthenticationSystemAssignedManagedIdentityPtrOutput) Audience() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataflowEndpointAuthenticationSystemAssignedManagedIdentity) *string {
		if v == nil {
			return nil
		}
		return v.Audience
	}).(pulumi.StringPtrOutput)
}

// DataflowEndpoint Authentication SystemAssignedManagedIdentity properties
type DataflowEndpointAuthenticationSystemAssignedManagedIdentityResponse struct {
	// Audience of the service to authenticate against. Optional; defaults to the audience for Service host configuration.
	Audience *string `pulumi:"audience"`
}

// DataflowEndpoint Authentication SystemAssignedManagedIdentity properties
type DataflowEndpointAuthenticationSystemAssignedManagedIdentityResponseOutput struct{ *pulumi.OutputState }

func (DataflowEndpointAuthenticationSystemAssignedManagedIdentityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataflowEndpointAuthenticationSystemAssignedManagedIdentityResponse)(nil)).Elem()
}

func (o DataflowEndpointAuthenticationSystemAssignedManagedIdentityResponseOutput) ToDataflowEndpointAuthenticationSystemAssignedManagedIdentityResponseOutput() DataflowEndpointAuthenticationSystemAssignedManagedIdentityResponseOutput {
	return o
}

func (o DataflowEndpointAuthenticationSystemAssignedManagedIdentityResponseOutput) ToDataflowEndpointAuthenticationSystemAssignedManagedIdentityResponseOutputWithContext(ctx context.Context) DataflowEndpointAuthenticationSystemAssignedManagedIdentityResponseOutput {
	return o
}

// Audience of the service to authenticate against. Optional; defaults to the audience for Service host configuration.
func (o DataflowEndpointAuthenticationSystemAssignedManagedIdentityResponseOutput) Audience() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataflowEndpointAuthenticationSystemAssignedManagedIdentityResponse) *string { return v.Audience }).(pulumi.StringPtrOutput)
}

type DataflowEndpointAuthenticationSystemAssignedManagedIdentityResponsePtrOutput struct{ *pulumi.OutputState }

func (DataflowEndpointAuthenticationSystemAssignedManagedIdentityResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataflowEndpointAuthenticationSystemAssignedManagedIdentityResponse)(nil)).Elem()
}

func (o DataflowEndpointAuthenticationSystemAssignedManagedIdentityResponsePtrOutput) ToDataflowEndpointAuthenticationSystemAssignedManagedIdentityResponsePtrOutput() DataflowEndpointAuthenticationSystemAssignedManagedIdentityResponsePtrOutput {
	return o
}

func (o DataflowEndpointAuthenticationSystemAssignedManagedIdentityResponsePtrOutput) ToDataflowEndpointAuthenticationSystemAssignedManagedIdentityResponsePtrOutputWithContext(ctx context.Context) DataflowEndpointAuthenticationSystemAssignedManagedIdentityResponsePtrOutput {
	return o
}

func (o DataflowEndpointAuthenticationSystemAssignedManagedIdentityResponsePtrOutput) Elem() DataflowEndpointAuthenticationSystemAssignedManagedIdentityResponseOutput {
	return o.ApplyT(func(v *DataflowEndpointAuthenticationSystemAssignedManagedIdentityResponse) DataflowEndpointAuthenticationSystemAssignedManagedIdentityResponse {
		if v != nil {
			return *v
		}
		var ret DataflowEndpointAuthenticationSystemAssignedManagedIdentityResponse
		return ret
	}).(DataflowEndpointAuthenticationSystemAssignedManagedIdentityResponseOutput)
}

// Audience of the service to authenticate against. Optional; defaults to the audience for Service host configuration.
func (o DataflowEndpointAuthenticationSystemAssignedManagedIdentityResponsePtrOutput) Audience() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataflowEndpointAuthenticationSystemAssignedManagedIdentityResponse) *string {
		if v == nil {
			return nil
		}
		return v.Audience
	}).(pulumi.StringPtrOutput)
}

// DataflowEndpoint Authentication UserAssignedManagedIdentity properties
type DataflowEndpointAuthenticationUserAssignedManagedIdentity struct {
	// Client ID for the user-assigned managed identity.
	ClientId string `pulumi:"clientId"`
	// Resource identifier (application ID URI) of the resource, affixed with the .default suffix.
	Scope *string `pulumi:"scope"`
	// Tenant ID.
	TenantId string `pulumi:"tenantId"`
}

// DataflowEndpointAuthenticationUserAssignedManagedIdentityInput is an input type that accepts DataflowEndpointAuthenticationUserAssignedManagedIdentityArgs and DataflowEndpointAuthenticationUserAssignedManagedIdentityOutput values.
// You can construct a concrete instance of `DataflowEndpointAuthenticationUserAssignedManagedIdentityInput` via:
//
//	DataflowEndpointAuthenticationUserAssignedManagedIdentityArgs{...}
type DataflowEndpointAuthenticationUserAssignedManagedIdentityInput interface {
	pulumi.Input

	ToDataflowEndpointAuthenticationUserAssignedManagedIdentityOutput() DataflowEndpointAuthenticationUserAssignedManagedIdentityOutput
	ToDataflowEndpointAuthenticationUserAssignedManagedIdentityOutputWithContext(context.Context) DataflowEndpointAuthenticationUserAssignedManagedIdentityOutput
}

// DataflowEndpoint Authentication UserAssignedManagedIdentity properties
type DataflowEndpointAuthenticationUserAssignedManagedIdentityArgs struct {
	// Client ID for the user-assigned managed identity.
	ClientId pulumi.StringInput `pulumi:"clientId"`
	// Resource identifier (application ID URI) of the resource, affixed with the .default suffix.
	Scope pulumi.StringPtrInput `pulumi:"scope"`
	// Tenant ID.
	TenantId pulumi.StringInput `pulumi:"tenantId"`
}

func (DataflowEndpointAuthenticationUserAssignedManagedIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataflowEndpointAuthenticationUserAssignedManagedIdentity)(nil)).Elem()
}

func (i DataflowEndpointAuthenticationUserAssignedManagedIdentityArgs) ToDataflowEndpointAuthenticationUserAssignedManagedIdentityOutput() DataflowEndpointAuthenticationUserAssignedManagedIdentityOutput {
	return i.ToDataflowEndpointAuthenticationUserAssignedManagedIdentityOutputWithContext(context.Background())
}

func (i DataflowEndpointAuthenticationUserAssignedManagedIdentityArgs) ToDataflowEndpointAuthenticationUserAssignedManagedIdentityOutputWithContext(ctx context.Context) DataflowEndpointAuthenticationUserAssignedManagedIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataflowEndpointAuthenticationUserAssignedManagedIdentityOutput)
}

func (i DataflowEndpointAuthenticationUserAssignedManagedIdentityArgs) ToDataflowEndpointAuthenticationUserAssignedManagedIdentityPtrOutput() DataflowEndpointAuthenticationUserAssignedManagedIdentityPtrOutput {
	return i.ToDataflowEndpointAuthenticationUserAssignedManagedIdentityPtrOutputWithContext(context.Background())
}

func (i DataflowEndpointAuthenticationUserAssignedManagedIdentityArgs) ToDataflowEndpointAuthenticationUserAssignedManagedIdentityPtrOutputWithContext(ctx context.Context) DataflowEndpointAuthenticationUserAssignedManagedIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataflowEndpointAuthenticationUserAssignedManagedIdentityOutput).ToDataflowEndpointAuthenticationUserAssignedManagedIdentityPtrOutputWithContext(ctx)
}

// DataflowEndpointAuthenticationUserAssignedManagedIdentityPtrInput is an input type that accepts DataflowEndpointAuthenticationUserAssignedManagedIdentityArgs, DataflowEndpointAuthenticationUserAssignedManagedIdentityPtr and DataflowEndpointAuthenticationUserAssignedManagedIdentityPtrOutput values.
// You can construct a concrete instance of `DataflowEndpointAuthenticationUserAssignedManagedIdentityPtrInput` via:
//
//	        DataflowEndpointAuthenticationUserAssignedManagedIdentityArgs{...}
//
//	or:
//
//	        nil
type DataflowEndpointAuthenticationUserAssignedManagedIdentityPtrInput interface {
	pulumi.Input

	ToDataflowEndpointAuthenticationUserAssignedManagedIdentityPtrOutput() DataflowEndpointAuthenticationUserAssignedManagedIdentityPtrOutput
	ToDataflowEndpointAuthenticationUserAssignedManagedIdentityPtrOutputWithContext(context.Context) DataflowEndpointAuthenticationUserAssignedManagedIdentityPtrOutput
}

type dataflowEndpointAuthenticationUserAssignedManagedIdentityPtrType DataflowEndpointAuthenticationUserAssignedManagedIdentityArgs

func DataflowEndpointAuthenticationUserAssignedManagedIdentityPtr(v *DataflowEndpointAuthenticationUserAssignedManagedIdentityArgs) DataflowEndpointAuthenticationUserAssignedManagedIdentityPtrInput {
	return (*dataflowEndpointAuthenticationUserAssignedManagedIdentityPtrType)(v)
}

func (*dataflowEndpointAuthenticationUserAssignedManagedIdentityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataflowEndpointAuthenticationUserAssignedManagedIdentity)(nil)).Elem()
}

func (i *dataflowEndpointAuthenticationUserAssignedManagedIdentityPtrType) ToDataflowEndpointAuthenticationUserAssignedManagedIdentityPtrOutput() DataflowEndpointAuthenticationUserAssignedManagedIdentityPtrOutput {
	return i.ToDataflowEndpointAuthenticationUserAssignedManagedIdentityPtrOutputWithContext(context.Background())
}

func (i *dataflowEndpointAuthenticationUserAssignedManagedIdentityPtrType) ToDataflowEndpointAuthenticationUserAssignedManagedIdentityPtrOutputWithContext(ctx context.Context) DataflowEndpointAuthenticationUserAssignedManagedIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataflowEndpointAuthenticationUserAssignedManagedIdentityPtrOutput)
}

// DataflowEndpoint Authentication UserAssignedManagedIdentity properties
type DataflowEndpointAuthenticationUserAssignedManagedIdentityOutput struct{ *pulumi.OutputState }

func (DataflowEndpointAuthenticationUserAssignedManagedIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataflowEndpointAuthenticationUserAssignedManagedIdentity)(nil)).Elem()
}

func (o DataflowEndpointAuthenticationUserAssignedManagedIdentityOutput) ToDataflowEndpointAuthenticationUserAssignedManagedIdentityOutput() DataflowEndpointAuthenticationUserAssignedManagedIdentityOutput {
	return o
}

func (o DataflowEndpointAuthenticationUserAssignedManagedIdentityOutput) ToDataflowEndpointAuthenticationUserAssignedManagedIdentityOutputWithContext(ctx context.Context) DataflowEndpointAuthenticationUserAssignedManagedIdentityOutput {
	return o
}

func (o DataflowEndpointAuthenticationUserAssignedManagedIdentityOutput) ToDataflowEndpointAuthenticationUserAssignedManagedIdentityPtrOutput() DataflowEndpointAuthenticationUserAssignedManagedIdentityPtrOutput {
	return o.ToDataflowEndpointAuthenticationUserAssignedManagedIdentityPtrOutputWithContext(context.Background())
}

func (o DataflowEndpointAuthenticationUserAssignedManagedIdentityOutput) ToDataflowEndpointAuthenticationUserAssignedManagedIdentityPtrOutputWithContext(ctx context.Context) DataflowEndpointAuthenticationUserAssignedManagedIdentityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataflowEndpointAuthenticationUserAssignedManagedIdentity) *DataflowEndpointAuthenticationUserAssignedManagedIdentity {
		return &v
	}).(DataflowEndpointAuthenticationUserAssignedManagedIdentityPtrOutput)
}

// Client ID for the user-assigned managed identity.
func (o DataflowEndpointAuthenticationUserAssignedManagedIdentityOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v DataflowEndpointAuthenticationUserAssignedManagedIdentity) string { return v.ClientId }).(pulumi.StringOutput)
}

// Resource identifier (application ID URI) of the resource, affixed with the .default suffix.
func (o DataflowEndpointAuthenticationUserAssignedManagedIdentityOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataflowEndpointAuthenticationUserAssignedManagedIdentity) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

// Tenant ID.
func (o DataflowEndpointAuthenticationUserAssignedManagedIdentityOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v DataflowEndpointAuthenticationUserAssignedManagedIdentity) string { return v.TenantId }).(pulumi.StringOutput)
}

type DataflowEndpointAuthenticationUserAssignedManagedIdentityPtrOutput struct{ *pulumi.OutputState }

func (DataflowEndpointAuthenticationUserAssignedManagedIdentityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataflowEndpointAuthenticationUserAssignedManagedIdentity)(nil)).Elem()
}

func (o DataflowEndpointAuthenticationUserAssignedManagedIdentityPtrOutput) ToDataflowEndpointAuthenticationUserAssignedManagedIdentityPtrOutput() DataflowEndpointAuthenticationUserAssignedManagedIdentityPtrOutput {
	return o
}

func (o DataflowEndpointAuthenticationUserAssignedManagedIdentityPtrOutput) ToDataflowEndpointAuthenticationUserAssignedManagedIdentityPtrOutputWithContext(ctx context.Context) DataflowEndpointAuthenticationUserAssignedManagedIdentityPtrOutput {
	return o
}

func (o DataflowEndpointAuthenticationUserAssignedManagedIdentityPtrOutput) Elem() DataflowEndpointAuthenticationUserAssignedManagedIdentityOutput {
	return o.ApplyT(func(v *DataflowEndpointAuthenticationUserAssignedManagedIdentity) DataflowEndpointAuthenticationUserAssignedManagedIdentity {
		if v != nil {
			return *v
		}
		var ret DataflowEndpointAuthenticationUserAssignedManagedIdentity
		return ret
	}).(DataflowEndpointAuthenticationUserAssignedManagedIdentityOutput)
}

// Client ID for the user-assigned managed identity.
func (o DataflowEndpointAuthenticationUserAssignedManagedIdentityPtrOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataflowEndpointAuthenticationUserAssignedManagedIdentity) *string {
		if v == nil {
			return nil
		}
		return &v.ClientId
	}).(pulumi.StringPtrOutput)
}

// Resource identifier (application ID URI) of the resource, affixed with the .default suffix.
func (o DataflowEndpointAuthenticationUserAssignedManagedIdentityPtrOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataflowEndpointAuthenticationUserAssignedManagedIdentity) *string {
		if v == nil {
			return nil
		}
		return v.Scope
	}).(pulumi.StringPtrOutput)
}

// Tenant ID.
func (o DataflowEndpointAuthenticationUserAssignedManagedIdentityPtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataflowEndpointAuthenticationUserAssignedManagedIdentity) *string {
		if v == nil {
			return nil
		}
		return &v.TenantId
	}).(pulumi.StringPtrOutput)
}

// DataflowEndpoint Authentication UserAssignedManagedIdentity properties
type DataflowEndpointAuthenticationUserAssignedManagedIdentityResponse struct {
	// Client ID for the user-assigned managed identity.
	ClientId string `pulumi:"clientId"`
	// Resource identifier (application ID URI) of the resource, affixed with the .default suffix.
	Scope *string `pulumi:"scope"`
	// Tenant ID.
	TenantId string `pulumi:"tenantId"`
}

// DataflowEndpoint Authentication UserAssignedManagedIdentity properties
type DataflowEndpointAuthenticationUserAssignedManagedIdentityResponseOutput struct{ *pulumi.OutputState }

func (DataflowEndpointAuthenticationUserAssignedManagedIdentityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataflowEndpointAuthenticationUserAssignedManagedIdentityResponse)(nil)).Elem()
}

func (o DataflowEndpointAuthenticationUserAssignedManagedIdentityResponseOutput) ToDataflowEndpointAuthenticationUserAssignedManagedIdentityResponseOutput() DataflowEndpointAuthenticationUserAssignedManagedIdentityResponseOutput {
	return o
}

func (o DataflowEndpointAuthenticationUserAssignedManagedIdentityResponseOutput) ToDataflowEndpointAuthenticationUserAssignedManagedIdentityResponseOutputWithContext(ctx context.Context) DataflowEndpointAuthenticationUserAssignedManagedIdentityResponseOutput {
	return o
}

// Client ID for the user-assigned managed identity.
func (o DataflowEndpointAuthenticationUserAssignedManagedIdentityResponseOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v DataflowEndpointAuthenticationUserAssignedManagedIdentityResponse) string { return v.ClientId }).(pulumi.StringOutput)
}

// Resource identifier (application ID URI) of the resource, affixed with the .default suffix.
func (o DataflowEndpointAuthenticationUserAssignedManagedIdentityResponseOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataflowEndpointAuthenticationUserAssignedManagedIdentityResponse) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

// Tenant ID.
func (o DataflowEndpointAuthenticationUserAssignedManagedIdentityResponseOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v DataflowEndpointAuthenticationUserAssignedManagedIdentityResponse) string { return v.TenantId }).(pulumi.StringOutput)
}

type DataflowEndpointAuthenticationUserAssignedManagedIdentityResponsePtrOutput struct{ *pulumi.OutputState }

func (DataflowEndpointAuthenticationUserAssignedManagedIdentityResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataflowEndpointAuthenticationUserAssignedManagedIdentityResponse)(nil)).Elem()
}

func (o DataflowEndpointAuthenticationUserAssignedManagedIdentityResponsePtrOutput) ToDataflowEndpointAuthenticationUserAssignedManagedIdentityResponsePtrOutput() DataflowEndpointAuthenticationUserAssignedManagedIdentityResponsePtrOutput {
	return o
}

func (o DataflowEndpointAuthenticationUserAssignedManagedIdentityResponsePtrOutput) ToDataflowEndpointAuthenticationUserAssignedManagedIdentityResponsePtrOutputWithContext(ctx context.Context) DataflowEndpointAuthenticationUserAssignedManagedIdentityResponsePtrOutput {
	return o
}

func (o DataflowEndpointAuthenticationUserAssignedManagedIdentityResponsePtrOutput) Elem() DataflowEndpointAuthenticationUserAssignedManagedIdentityResponseOutput {
	return o.ApplyT(func(v *DataflowEndpointAuthenticationUserAssignedManagedIdentityResponse) DataflowEndpointAuthenticationUserAssignedManagedIdentityResponse {
		if v != nil {
			return *v
		}
		var ret DataflowEndpointAuthenticationUserAssignedManagedIdentityResponse
		return ret
	}).(DataflowEndpointAuthenticationUserAssignedManagedIdentityResponseOutput)
}

// Client ID for the user-assigned managed identity.
func (o DataflowEndpointAuthenticationUserAssignedManagedIdentityResponsePtrOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataflowEndpointAuthenticationUserAssignedManagedIdentityResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ClientId
	}).(pulumi.StringPtrOutput)
}

// Resource identifier (application ID URI) of the resource, affixed with the .default suffix.
func (o DataflowEndpointAuthenticationUserAssignedManagedIdentityResponsePtrOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataflowEndpointAuthenticationUserAssignedManagedIdentityResponse) *string {
		if v == nil {
			return nil
		}
		return v.Scope
	}).(pulumi.StringPtrOutput)
}

// Tenant ID.
func (o DataflowEndpointAuthenticationUserAssignedManagedIdentityResponsePtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataflowEndpointAuthenticationUserAssignedManagedIdentityResponse) *string {
		if v == nil {
			return nil
		}
		return &v.TenantId
	}).(pulumi.StringPtrOutput)
}

// DataflowEndpoint Authentication X509 properties
type DataflowEndpointAuthenticationX509 struct {
	// Secret reference of the X.509 certificate.
	SecretRef string `pulumi:"secretRef"`
}

// DataflowEndpointAuthenticationX509Input is an input type that accepts DataflowEndpointAuthenticationX509Args and DataflowEndpointAuthenticationX509Output values.
// You can construct a concrete instance of `DataflowEndpointAuthenticationX509Input` via:
//
//	DataflowEndpointAuthenticationX509Args{...}
type DataflowEndpointAuthenticationX509Input interface {
	pulumi.Input

	ToDataflowEndpointAuthenticationX509Output() DataflowEndpointAuthenticationX509Output
	ToDataflowEndpointAuthenticationX509OutputWithContext(context.Context) DataflowEndpointAuthenticationX509Output
}

// DataflowEndpoint Authentication X509 properties
type DataflowEndpointAuthenticationX509Args struct {
	// Secret reference of the X.509 certificate.
	SecretRef pulumi.StringInput `pulumi:"secretRef"`
}

func (DataflowEndpointAuthenticationX509Args) ElementType() reflect.Type {
	return reflect.TypeOf((*DataflowEndpointAuthenticationX509)(nil)).Elem()
}

func (i DataflowEndpointAuthenticationX509Args) ToDataflowEndpointAuthenticationX509Output() DataflowEndpointAuthenticationX509Output {
	return i.ToDataflowEndpointAuthenticationX509OutputWithContext(context.Background())
}

func (i DataflowEndpointAuthenticationX509Args) ToDataflowEndpointAuthenticationX509OutputWithContext(ctx context.Context) DataflowEndpointAuthenticationX509Output {
	return pulumi.ToOutputWithContext(ctx, i).(DataflowEndpointAuthenticationX509Output)
}

func (i DataflowEndpointAuthenticationX509Args) ToDataflowEndpointAuthenticationX509PtrOutput() DataflowEndpointAuthenticationX509PtrOutput {
	return i.ToDataflowEndpointAuthenticationX509PtrOutputWithContext(context.Background())
}

func (i DataflowEndpointAuthenticationX509Args) ToDataflowEndpointAuthenticationX509PtrOutputWithContext(ctx context.Context) DataflowEndpointAuthenticationX509PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataflowEndpointAuthenticationX509Output).ToDataflowEndpointAuthenticationX509PtrOutputWithContext(ctx)
}

// DataflowEndpointAuthenticationX509PtrInput is an input type that accepts DataflowEndpointAuthenticationX509Args, DataflowEndpointAuthenticationX509Ptr and DataflowEndpointAuthenticationX509PtrOutput values.
// You can construct a concrete instance of `DataflowEndpointAuthenticationX509PtrInput` via:
//
//	        DataflowEndpointAuthenticationX509Args{...}
//
//	or:
//
//	        nil
type DataflowEndpointAuthenticationX509PtrInput interface {
	pulumi.Input

	ToDataflowEndpointAuthenticationX509PtrOutput() DataflowEndpointAuthenticationX509PtrOutput
	ToDataflowEndpointAuthenticationX509PtrOutputWithContext(context.Context) DataflowEndpointAuthenticationX509PtrOutput
}

type dataflowEndpointAuthenticationX509PtrType DataflowEndpointAuthenticationX509Args

func DataflowEndpointAuthenticationX509Ptr(v *DataflowEndpointAuthenticationX509Args) DataflowEndpointAuthenticationX509PtrInput {
	return (*dataflowEndpointAuthenticationX509PtrType)(v)
}

func (*dataflowEndpointAuthenticationX509PtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataflowEndpointAuthenticationX509)(nil)).Elem()
}

func (i *dataflowEndpointAuthenticationX509PtrType) ToDataflowEndpointAuthenticationX509PtrOutput() DataflowEndpointAuthenticationX509PtrOutput {
	return i.ToDataflowEndpointAuthenticationX509PtrOutputWithContext(context.Background())
}

func (i *dataflowEndpointAuthenticationX509PtrType) ToDataflowEndpointAuthenticationX509PtrOutputWithContext(ctx context.Context) DataflowEndpointAuthenticationX509PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataflowEndpointAuthenticationX509PtrOutput)
}

// DataflowEndpoint Authentication X509 properties
type DataflowEndpointAuthenticationX509Output struct{ *pulumi.OutputState }

func (DataflowEndpointAuthenticationX509Output) ElementType() reflect.Type {
	return reflect.TypeOf((*DataflowEndpointAuthenticationX509)(nil)).Elem()
}

func (o DataflowEndpointAuthenticationX509Output) ToDataflowEndpointAuthenticationX509Output() DataflowEndpointAuthenticationX509Output {
	return o
}

func (o DataflowEndpointAuthenticationX509Output) ToDataflowEndpointAuthenticationX509OutputWithContext(ctx context.Context) DataflowEndpointAuthenticationX509Output {
	return o
}

func (o DataflowEndpointAuthenticationX509Output) ToDataflowEndpointAuthenticationX509PtrOutput() DataflowEndpointAuthenticationX509PtrOutput {
	return o.ToDataflowEndpointAuthenticationX509PtrOutputWithContext(context.Background())
}

func (o DataflowEndpointAuthenticationX509Output) ToDataflowEndpointAuthenticationX509PtrOutputWithContext(ctx context.Context) DataflowEndpointAuthenticationX509PtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataflowEndpointAuthenticationX509) *DataflowEndpointAuthenticationX509 {
		return &v
	}).(DataflowEndpointAuthenticationX509PtrOutput)
}

// Secret reference of the X.509 certificate.
func (o DataflowEndpointAuthenticationX509Output) SecretRef() pulumi.StringOutput {
	return o.ApplyT(func(v DataflowEndpointAuthenticationX509) string { return v.SecretRef }).(pulumi.StringOutput)
}

type DataflowEndpointAuthenticationX509PtrOutput struct{ *pulumi.OutputState }

func (DataflowEndpointAuthenticationX509PtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataflowEndpointAuthenticationX509)(nil)).Elem()
}

func (o DataflowEndpointAuthenticationX509PtrOutput) ToDataflowEndpointAuthenticationX509PtrOutput() DataflowEndpointAuthenticationX509PtrOutput {
	return o
}

func (o DataflowEndpointAuthenticationX509PtrOutput) ToDataflowEndpointAuthenticationX509PtrOutputWithContext(ctx context.Context) DataflowEndpointAuthenticationX509PtrOutput {
	return o
}

func (o DataflowEndpointAuthenticationX509PtrOutput) Elem() DataflowEndpointAuthenticationX509Output {
	return o.ApplyT(func(v *DataflowEndpointAuthenticationX509) DataflowEndpointAuthenticationX509 {
		if v != nil {
			return *v
		}
		var ret DataflowEndpointAuthenticationX509
		return ret
	}).(DataflowEndpointAuthenticationX509Output)
}

// Secret reference of the X.509 certificate.
func (o DataflowEndpointAuthenticationX509PtrOutput) SecretRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataflowEndpointAuthenticationX509) *string {
		if v == nil {
			return nil
		}
		return &v.SecretRef
	}).(pulumi.StringPtrOutput)
}

// DataflowEndpoint Authentication X509 properties
type DataflowEndpointAuthenticationX509Response struct {
	// Secret reference of the X.509 certificate.
	SecretRef string `pulumi:"secretRef"`
}

// DataflowEndpoint Authentication X509 properties
type DataflowEndpointAuthenticationX509ResponseOutput struct{ *pulumi.OutputState }

func (DataflowEndpointAuthenticationX509ResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataflowEndpointAuthenticationX509Response)(nil)).Elem()
}

func (o DataflowEndpointAuthenticationX509ResponseOutput) ToDataflowEndpointAuthenticationX509ResponseOutput() DataflowEndpointAuthenticationX509ResponseOutput {
	return o
}

func (o DataflowEndpointAuthenticationX509ResponseOutput) ToDataflowEndpointAuthenticationX509ResponseOutputWithContext(ctx context.Context) DataflowEndpointAuthenticationX509ResponseOutput {
	return o
}

// Secret reference of the X.509 certificate.
func (o DataflowEndpointAuthenticationX509ResponseOutput) SecretRef() pulumi.StringOutput {
	return o.ApplyT(func(v DataflowEndpointAuthenticationX509Response) string { return v.SecretRef }).(pulumi.StringOutput)
}

type DataflowEndpointAuthenticationX509ResponsePtrOutput struct{ *pulumi.OutputState }

func (DataflowEndpointAuthenticationX509ResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataflowEndpointAuthenticationX509Response)(nil)).Elem()
}

func (o DataflowEndpointAuthenticationX509ResponsePtrOutput) ToDataflowEndpointAuthenticationX509ResponsePtrOutput() DataflowEndpointAuthenticationX509ResponsePtrOutput {
	return o
}

func (o DataflowEndpointAuthenticationX509ResponsePtrOutput) ToDataflowEndpointAuthenticationX509ResponsePtrOutputWithContext(ctx context.Context) DataflowEndpointAuthenticationX509ResponsePtrOutput {
	return o
}

func (o DataflowEndpointAuthenticationX509ResponsePtrOutput) Elem() DataflowEndpointAuthenticationX509ResponseOutput {
	return o.ApplyT(func(v *DataflowEndpointAuthenticationX509Response) DataflowEndpointAuthenticationX509Response {
		if v != nil {
			return *v
		}
		var ret DataflowEndpointAuthenticationX509Response
		return ret
	}).(DataflowEndpointAuthenticationX509ResponseOutput)
}

// Secret reference of the X.509 certificate.
func (o DataflowEndpointAuthenticationX509ResponsePtrOutput) SecretRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataflowEndpointAuthenticationX509Response) *string {
		if v == nil {
			return nil
		}
		return &v.SecretRef
	}).(pulumi.StringPtrOutput)
}

// Azure Data Explorer endpoint properties
type DataflowEndpointDataExplorer struct {
	// Authentication configuration. NOTE - only authentication property is allowed per entry.
	Authentication DataflowEndpointDataExplorerAuthentication `pulumi:"authentication"`
	// Azure Data Explorer endpoint batching configuration.
	Batching *BatchingConfiguration `pulumi:"batching"`
	// Database name.
	Database string `pulumi:"database"`
	// Host of the Azure Data Explorer in the form of <cluster>.<region>.kusto.windows.net .
	Host string `pulumi:"host"`
}

// Defaults sets the appropriate defaults for DataflowEndpointDataExplorer
func (val *DataflowEndpointDataExplorer) Defaults() *DataflowEndpointDataExplorer {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.Batching = tmp.Batching.Defaults()

	return &tmp
}

// DataflowEndpointDataExplorerInput is an input type that accepts DataflowEndpointDataExplorerArgs and DataflowEndpointDataExplorerOutput values.
// You can construct a concrete instance of `DataflowEndpointDataExplorerInput` via:
//
//	DataflowEndpointDataExplorerArgs{...}
type DataflowEndpointDataExplorerInput interface {
	pulumi.Input

	ToDataflowEndpointDataExplorerOutput() DataflowEndpointDataExplorerOutput
	ToDataflowEndpointDataExplorerOutputWithContext(context.Context) DataflowEndpointDataExplorerOutput
}

// Azure Data Explorer endpoint properties
type DataflowEndpointDataExplorerArgs struct {
	// Authentication configuration. NOTE - only authentication property is allowed per entry.
	Authentication DataflowEndpointDataExplorerAuthenticationInput `pulumi:"authentication"`
	// Azure Data Explorer endpoint batching configuration.
	Batching BatchingConfigurationPtrInput `pulumi:"batching"`
	// Database name.
	Database pulumi.StringInput `pulumi:"database"`
	// Host of the Azure Data Explorer in the form of <cluster>.<region>.kusto.windows.net .
	Host pulumi.StringInput `pulumi:"host"`
}

// Defaults sets the appropriate defaults for DataflowEndpointDataExplorerArgs
func (val *DataflowEndpointDataExplorerArgs) Defaults() *DataflowEndpointDataExplorerArgs {
	if val == nil {
		return nil
	}
	tmp := *val

	return &tmp
}
func (DataflowEndpointDataExplorerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataflowEndpointDataExplorer)(nil)).Elem()
}

func (i DataflowEndpointDataExplorerArgs) ToDataflowEndpointDataExplorerOutput() DataflowEndpointDataExplorerOutput {
	return i.ToDataflowEndpointDataExplorerOutputWithContext(context.Background())
}

func (i DataflowEndpointDataExplorerArgs) ToDataflowEndpointDataExplorerOutputWithContext(ctx context.Context) DataflowEndpointDataExplorerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataflowEndpointDataExplorerOutput)
}

func (i DataflowEndpointDataExplorerArgs) ToDataflowEndpointDataExplorerPtrOutput() DataflowEndpointDataExplorerPtrOutput {
	return i.ToDataflowEndpointDataExplorerPtrOutputWithContext(context.Background())
}

func (i DataflowEndpointDataExplorerArgs) ToDataflowEndpointDataExplorerPtrOutputWithContext(ctx context.Context) DataflowEndpointDataExplorerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataflowEndpointDataExplorerOutput).ToDataflowEndpointDataExplorerPtrOutputWithContext(ctx)
}

// DataflowEndpointDataExplorerPtrInput is an input type that accepts DataflowEndpointDataExplorerArgs, DataflowEndpointDataExplorerPtr and DataflowEndpointDataExplorerPtrOutput values.
// You can construct a concrete instance of `DataflowEndpointDataExplorerPtrInput` via:
//
//	        DataflowEndpointDataExplorerArgs{...}
//
//	or:
//
//	        nil
type DataflowEndpointDataExplorerPtrInput interface {
	pulumi.Input

	ToDataflowEndpointDataExplorerPtrOutput() DataflowEndpointDataExplorerPtrOutput
	ToDataflowEndpointDataExplorerPtrOutputWithContext(context.Context) DataflowEndpointDataExplorerPtrOutput
}

type dataflowEndpointDataExplorerPtrType DataflowEndpointDataExplorerArgs

func DataflowEndpointDataExplorerPtr(v *DataflowEndpointDataExplorerArgs) DataflowEndpointDataExplorerPtrInput {
	return (*dataflowEndpointDataExplorerPtrType)(v)
}

func (*dataflowEndpointDataExplorerPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataflowEndpointDataExplorer)(nil)).Elem()
}

func (i *dataflowEndpointDataExplorerPtrType) ToDataflowEndpointDataExplorerPtrOutput() DataflowEndpointDataExplorerPtrOutput {
	return i.ToDataflowEndpointDataExplorerPtrOutputWithContext(context.Background())
}

func (i *dataflowEndpointDataExplorerPtrType) ToDataflowEndpointDataExplorerPtrOutputWithContext(ctx context.Context) DataflowEndpointDataExplorerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataflowEndpointDataExplorerPtrOutput)
}

// Azure Data Explorer endpoint properties
type DataflowEndpointDataExplorerOutput struct{ *pulumi.OutputState }

func (DataflowEndpointDataExplorerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataflowEndpointDataExplorer)(nil)).Elem()
}

func (o DataflowEndpointDataExplorerOutput) ToDataflowEndpointDataExplorerOutput() DataflowEndpointDataExplorerOutput {
	return o
}

func (o DataflowEndpointDataExplorerOutput) ToDataflowEndpointDataExplorerOutputWithContext(ctx context.Context) DataflowEndpointDataExplorerOutput {
	return o
}

func (o DataflowEndpointDataExplorerOutput) ToDataflowEndpointDataExplorerPtrOutput() DataflowEndpointDataExplorerPtrOutput {
	return o.ToDataflowEndpointDataExplorerPtrOutputWithContext(context.Background())
}

func (o DataflowEndpointDataExplorerOutput) ToDataflowEndpointDataExplorerPtrOutputWithContext(ctx context.Context) DataflowEndpointDataExplorerPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataflowEndpointDataExplorer) *DataflowEndpointDataExplorer {
		return &v
	}).(DataflowEndpointDataExplorerPtrOutput)
}

// Authentication configuration. NOTE - only authentication property is allowed per entry.
func (o DataflowEndpointDataExplorerOutput) Authentication() DataflowEndpointDataExplorerAuthenticationOutput {
	return o.ApplyT(func(v DataflowEndpointDataExplorer) DataflowEndpointDataExplorerAuthentication {
		return v.Authentication
	}).(DataflowEndpointDataExplorerAuthenticationOutput)
}

// Azure Data Explorer endpoint batching configuration.
func (o DataflowEndpointDataExplorerOutput) Batching() BatchingConfigurationPtrOutput {
	return o.ApplyT(func(v DataflowEndpointDataExplorer) *BatchingConfiguration { return v.Batching }).(BatchingConfigurationPtrOutput)
}

// Database name.
func (o DataflowEndpointDataExplorerOutput) Database() pulumi.StringOutput {
	return o.ApplyT(func(v DataflowEndpointDataExplorer) string { return v.Database }).(pulumi.StringOutput)
}

// Host of the Azure Data Explorer in the form of <cluster>.<region>.kusto.windows.net .
func (o DataflowEndpointDataExplorerOutput) Host() pulumi.StringOutput {
	return o.ApplyT(func(v DataflowEndpointDataExplorer) string { return v.Host }).(pulumi.StringOutput)
}

type DataflowEndpointDataExplorerPtrOutput struct{ *pulumi.OutputState }

func (DataflowEndpointDataExplorerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataflowEndpointDataExplorer)(nil)).Elem()
}

func (o DataflowEndpointDataExplorerPtrOutput) ToDataflowEndpointDataExplorerPtrOutput() DataflowEndpointDataExplorerPtrOutput {
	return o
}

func (o DataflowEndpointDataExplorerPtrOutput) ToDataflowEndpointDataExplorerPtrOutputWithContext(ctx context.Context) DataflowEndpointDataExplorerPtrOutput {
	return o
}

func (o DataflowEndpointDataExplorerPtrOutput) Elem() DataflowEndpointDataExplorerOutput {
	return o.ApplyT(func(v *DataflowEndpointDataExplorer) DataflowEndpointDataExplorer {
		if v != nil {
			return *v
		}
		var ret DataflowEndpointDataExplorer
		return ret
	}).(DataflowEndpointDataExplorerOutput)
}

// Authentication configuration. NOTE - only authentication property is allowed per entry.
func (o DataflowEndpointDataExplorerPtrOutput) Authentication() DataflowEndpointDataExplorerAuthenticationPtrOutput {
	return o.ApplyT(func(v *DataflowEndpointDataExplorer) *DataflowEndpointDataExplorerAuthentication {
		if v == nil {
			return nil
		}
		return &v.Authentication
	}).(DataflowEndpointDataExplorerAuthenticationPtrOutput)
}

// Azure Data Explorer endpoint batching configuration.
func (o DataflowEndpointDataExplorerPtrOutput) Batching() BatchingConfigurationPtrOutput {
	return o.ApplyT(func(v *DataflowEndpointDataExplorer) *BatchingConfiguration {
		if v == nil {
			return nil
		}
		return v.Batching
	}).(BatchingConfigurationPtrOutput)
}

// Database name.
func (o DataflowEndpointDataExplorerPtrOutput) Database() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataflowEndpointDataExplorer) *string {
		if v == nil {
			return nil
		}
		return &v.Database
	}).(pulumi.StringPtrOutput)
}

// Host of the Azure Data Explorer in the form of <cluster>.<region>.kusto.windows.net .
func (o DataflowEndpointDataExplorerPtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataflowEndpointDataExplorer) *string {
		if v == nil {
			return nil
		}
		return &v.Host
	}).(pulumi.StringPtrOutput)
}

// Azure Data Explorer Authentication properties. NOTE - only authentication property is allowed per entry.
type DataflowEndpointDataExplorerAuthentication struct {
	// Mode of Authentication.
	Method interface{} `pulumi:"method"`
	// System-assigned managed identity authentication.
	SystemAssignedManagedIdentitySettings *DataflowEndpointAuthenticationSystemAssignedManagedIdentity `pulumi:"systemAssignedManagedIdentitySettings"`
	// User-assigned managed identity authentication.
	UserAssignedManagedIdentitySettings *DataflowEndpointAuthenticationUserAssignedManagedIdentity `pulumi:"userAssignedManagedIdentitySettings"`
}

// DataflowEndpointDataExplorerAuthenticationInput is an input type that accepts DataflowEndpointDataExplorerAuthenticationArgs and DataflowEndpointDataExplorerAuthenticationOutput values.
// You can construct a concrete instance of `DataflowEndpointDataExplorerAuthenticationInput` via:
//
//	DataflowEndpointDataExplorerAuthenticationArgs{...}
type DataflowEndpointDataExplorerAuthenticationInput interface {
	pulumi.Input

	ToDataflowEndpointDataExplorerAuthenticationOutput() DataflowEndpointDataExplorerAuthenticationOutput
	ToDataflowEndpointDataExplorerAuthenticationOutputWithContext(context.Context) DataflowEndpointDataExplorerAuthenticationOutput
}

// Azure Data Explorer Authentication properties. NOTE - only authentication property is allowed per entry.
type DataflowEndpointDataExplorerAuthenticationArgs struct {
	// Mode of Authentication.
	Method pulumi.Input `pulumi:"method"`
	// System-assigned managed identity authentication.
	SystemAssignedManagedIdentitySettings DataflowEndpointAuthenticationSystemAssignedManagedIdentityPtrInput `pulumi:"systemAssignedManagedIdentitySettings"`
	// User-assigned managed identity authentication.
	UserAssignedManagedIdentitySettings DataflowEndpointAuthenticationUserAssignedManagedIdentityPtrInput `pulumi:"userAssignedManagedIdentitySettings"`
}

func (DataflowEndpointDataExplorerAuthenticationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataflowEndpointDataExplorerAuthentication)(nil)).Elem()
}

func (i DataflowEndpointDataExplorerAuthenticationArgs) ToDataflowEndpointDataExplorerAuthenticationOutput() DataflowEndpointDataExplorerAuthenticationOutput {
	return i.ToDataflowEndpointDataExplorerAuthenticationOutputWithContext(context.Background())
}

func (i DataflowEndpointDataExplorerAuthenticationArgs) ToDataflowEndpointDataExplorerAuthenticationOutputWithContext(ctx context.Context) DataflowEndpointDataExplorerAuthenticationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataflowEndpointDataExplorerAuthenticationOutput)
}

func (i DataflowEndpointDataExplorerAuthenticationArgs) ToDataflowEndpointDataExplorerAuthenticationPtrOutput() DataflowEndpointDataExplorerAuthenticationPtrOutput {
	return i.ToDataflowEndpointDataExplorerAuthenticationPtrOutputWithContext(context.Background())
}

func (i DataflowEndpointDataExplorerAuthenticationArgs) ToDataflowEndpointDataExplorerAuthenticationPtrOutputWithContext(ctx context.Context) DataflowEndpointDataExplorerAuthenticationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataflowEndpointDataExplorerAuthenticationOutput).ToDataflowEndpointDataExplorerAuthenticationPtrOutputWithContext(ctx)
}

// DataflowEndpointDataExplorerAuthenticationPtrInput is an input type that accepts DataflowEndpointDataExplorerAuthenticationArgs, DataflowEndpointDataExplorerAuthenticationPtr and DataflowEndpointDataExplorerAuthenticationPtrOutput values.
// You can construct a concrete instance of `DataflowEndpointDataExplorerAuthenticationPtrInput` via:
//
//	        DataflowEndpointDataExplorerAuthenticationArgs{...}
//
//	or:
//
//	        nil
type DataflowEndpointDataExplorerAuthenticationPtrInput interface {
	pulumi.Input

	ToDataflowEndpointDataExplorerAuthenticationPtrOutput() DataflowEndpointDataExplorerAuthenticationPtrOutput
	ToDataflowEndpointDataExplorerAuthenticationPtrOutputWithContext(context.Context) DataflowEndpointDataExplorerAuthenticationPtrOutput
}

type dataflowEndpointDataExplorerAuthenticationPtrType DataflowEndpointDataExplorerAuthenticationArgs

func DataflowEndpointDataExplorerAuthenticationPtr(v *DataflowEndpointDataExplorerAuthenticationArgs) DataflowEndpointDataExplorerAuthenticationPtrInput {
	return (*dataflowEndpointDataExplorerAuthenticationPtrType)(v)
}

func (*dataflowEndpointDataExplorerAuthenticationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataflowEndpointDataExplorerAuthentication)(nil)).Elem()
}

func (i *dataflowEndpointDataExplorerAuthenticationPtrType) ToDataflowEndpointDataExplorerAuthenticationPtrOutput() DataflowEndpointDataExplorerAuthenticationPtrOutput {
	return i.ToDataflowEndpointDataExplorerAuthenticationPtrOutputWithContext(context.Background())
}

func (i *dataflowEndpointDataExplorerAuthenticationPtrType) ToDataflowEndpointDataExplorerAuthenticationPtrOutputWithContext(ctx context.Context) DataflowEndpointDataExplorerAuthenticationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataflowEndpointDataExplorerAuthenticationPtrOutput)
}

// Azure Data Explorer Authentication properties. NOTE - only authentication property is allowed per entry.
type DataflowEndpointDataExplorerAuthenticationOutput struct{ *pulumi.OutputState }

func (DataflowEndpointDataExplorerAuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataflowEndpointDataExplorerAuthentication)(nil)).Elem()
}

func (o DataflowEndpointDataExplorerAuthenticationOutput) ToDataflowEndpointDataExplorerAuthenticationOutput() DataflowEndpointDataExplorerAuthenticationOutput {
	return o
}

func (o DataflowEndpointDataExplorerAuthenticationOutput) ToDataflowEndpointDataExplorerAuthenticationOutputWithContext(ctx context.Context) DataflowEndpointDataExplorerAuthenticationOutput {
	return o
}

func (o DataflowEndpointDataExplorerAuthenticationOutput) ToDataflowEndpointDataExplorerAuthenticationPtrOutput() DataflowEndpointDataExplorerAuthenticationPtrOutput {
	return o.ToDataflowEndpointDataExplorerAuthenticationPtrOutputWithContext(context.Background())
}

func (o DataflowEndpointDataExplorerAuthenticationOutput) ToDataflowEndpointDataExplorerAuthenticationPtrOutputWithContext(ctx context.Context) DataflowEndpointDataExplorerAuthenticationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataflowEndpointDataExplorerAuthentication) *DataflowEndpointDataExplorerAuthentication {
		return &v
	}).(DataflowEndpointDataExplorerAuthenticationPtrOutput)
}

// Mode of Authentication.
func (o DataflowEndpointDataExplorerAuthenticationOutput) Method() pulumi.AnyOutput {
	return o.ApplyT(func(v DataflowEndpointDataExplorerAuthentication) interface{} { return v.Method }).(pulumi.AnyOutput)
}

// System-assigned managed identity authentication.
func (o DataflowEndpointDataExplorerAuthenticationOutput) SystemAssignedManagedIdentitySettings() DataflowEndpointAuthenticationSystemAssignedManagedIdentityPtrOutput {
	return o.ApplyT(func(v DataflowEndpointDataExplorerAuthentication) *DataflowEndpointAuthenticationSystemAssignedManagedIdentity {
		return v.SystemAssignedManagedIdentitySettings
	}).(DataflowEndpointAuthenticationSystemAssignedManagedIdentityPtrOutput)
}

// User-assigned managed identity authentication.
func (o DataflowEndpointDataExplorerAuthenticationOutput) UserAssignedManagedIdentitySettings() DataflowEndpointAuthenticationUserAssignedManagedIdentityPtrOutput {
	return o.ApplyT(func(v DataflowEndpointDataExplorerAuthentication) *DataflowEndpointAuthenticationUserAssignedManagedIdentity {
		return v.UserAssignedManagedIdentitySettings
	}).(DataflowEndpointAuthenticationUserAssignedManagedIdentityPtrOutput)
}

type DataflowEndpointDataExplorerAuthenticationPtrOutput struct{ *pulumi.OutputState }

func (DataflowEndpointDataExplorerAuthenticationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataflowEndpointDataExplorerAuthentication)(nil)).Elem()
}

func (o DataflowEndpointDataExplorerAuthenticationPtrOutput) ToDataflowEndpointDataExplorerAuthenticationPtrOutput() DataflowEndpointDataExplorerAuthenticationPtrOutput {
	return o
}

func (o DataflowEndpointDataExplorerAuthenticationPtrOutput) ToDataflowEndpointDataExplorerAuthenticationPtrOutputWithContext(ctx context.Context) DataflowEndpointDataExplorerAuthenticationPtrOutput {
	return o
}

func (o DataflowEndpointDataExplorerAuthenticationPtrOutput) Elem() DataflowEndpointDataExplorerAuthenticationOutput {
	return o.ApplyT(func(v *DataflowEndpointDataExplorerAuthentication) DataflowEndpointDataExplorerAuthentication {
		if v != nil {
			return *v
		}
		var ret DataflowEndpointDataExplorerAuthentication
		return ret
	}).(DataflowEndpointDataExplorerAuthenticationOutput)
}

// Mode of Authentication.
func (o DataflowEndpointDataExplorerAuthenticationPtrOutput) Method() pulumi.AnyOutput {
	return o.ApplyT(func(v *DataflowEndpointDataExplorerAuthentication) interface{} {
		if v == nil {
			return nil
		}
		return v.Method
	}).(pulumi.AnyOutput)
}

// System-assigned managed identity authentication.
func (o DataflowEndpointDataExplorerAuthenticationPtrOutput) SystemAssignedManagedIdentitySettings() DataflowEndpointAuthenticationSystemAssignedManagedIdentityPtrOutput {
	return o.ApplyT(func(v *DataflowEndpointDataExplorerAuthentication) *DataflowEndpointAuthenticationSystemAssignedManagedIdentity {
		if v == nil {
			return nil
		}
		return v.SystemAssignedManagedIdentitySettings
	}).(DataflowEndpointAuthenticationSystemAssignedManagedIdentityPtrOutput)
}

// User-assigned managed identity authentication.
func (o DataflowEndpointDataExplorerAuthenticationPtrOutput) UserAssignedManagedIdentitySettings() DataflowEndpointAuthenticationUserAssignedManagedIdentityPtrOutput {
	return o.ApplyT(func(v *DataflowEndpointDataExplorerAuthentication) *DataflowEndpointAuthenticationUserAssignedManagedIdentity {
		if v == nil {
			return nil
		}
		return v.UserAssignedManagedIdentitySettings
	}).(DataflowEndpointAuthenticationUserAssignedManagedIdentityPtrOutput)
}

// Azure Data Explorer Authentication properties. NOTE - only authentication property is allowed per entry.
type DataflowEndpointDataExplorerAuthenticationResponse struct {
	// Mode of Authentication.
	Method interface{} `pulumi:"method"`
	// System-assigned managed identity authentication.
	SystemAssignedManagedIdentitySettings *DataflowEndpointAuthenticationSystemAssignedManagedIdentityResponse `pulumi:"systemAssignedManagedIdentitySettings"`
	// User-assigned managed identity authentication.
	UserAssignedManagedIdentitySettings *DataflowEndpointAuthenticationUserAssignedManagedIdentityResponse `pulumi:"userAssignedManagedIdentitySettings"`
}

// Azure Data Explorer Authentication properties. NOTE - only authentication property is allowed per entry.
type DataflowEndpointDataExplorerAuthenticationResponseOutput struct{ *pulumi.OutputState }

func (DataflowEndpointDataExplorerAuthenticationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataflowEndpointDataExplorerAuthenticationResponse)(nil)).Elem()
}

func (o DataflowEndpointDataExplorerAuthenticationResponseOutput) ToDataflowEndpointDataExplorerAuthenticationResponseOutput() DataflowEndpointDataExplorerAuthenticationResponseOutput {
	return o
}

func (o DataflowEndpointDataExplorerAuthenticationResponseOutput) ToDataflowEndpointDataExplorerAuthenticationResponseOutputWithContext(ctx context.Context) DataflowEndpointDataExplorerAuthenticationResponseOutput {
	return o
}

// Mode of Authentication.
func (o DataflowEndpointDataExplorerAuthenticationResponseOutput) Method() pulumi.AnyOutput {
	return o.ApplyT(func(v DataflowEndpointDataExplorerAuthenticationResponse) interface{} { return v.Method }).(pulumi.AnyOutput)
}

// System-assigned managed identity authentication.
func (o DataflowEndpointDataExplorerAuthenticationResponseOutput) SystemAssignedManagedIdentitySettings() DataflowEndpointAuthenticationSystemAssignedManagedIdentityResponsePtrOutput {
	return o.ApplyT(func(v DataflowEndpointDataExplorerAuthenticationResponse) *DataflowEndpointAuthenticationSystemAssignedManagedIdentityResponse {
		return v.SystemAssignedManagedIdentitySettings
	}).(DataflowEndpointAuthenticationSystemAssignedManagedIdentityResponsePtrOutput)
}

// User-assigned managed identity authentication.
func (o DataflowEndpointDataExplorerAuthenticationResponseOutput) UserAssignedManagedIdentitySettings() DataflowEndpointAuthenticationUserAssignedManagedIdentityResponsePtrOutput {
	return o.ApplyT(func(v DataflowEndpointDataExplorerAuthenticationResponse) *DataflowEndpointAuthenticationUserAssignedManagedIdentityResponse {
		return v.UserAssignedManagedIdentitySettings
	}).(DataflowEndpointAuthenticationUserAssignedManagedIdentityResponsePtrOutput)
}

type DataflowEndpointDataExplorerAuthenticationResponsePtrOutput struct{ *pulumi.OutputState }

func (DataflowEndpointDataExplorerAuthenticationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataflowEndpointDataExplorerAuthenticationResponse)(nil)).Elem()
}

func (o DataflowEndpointDataExplorerAuthenticationResponsePtrOutput) ToDataflowEndpointDataExplorerAuthenticationResponsePtrOutput() DataflowEndpointDataExplorerAuthenticationResponsePtrOutput {
	return o
}

func (o DataflowEndpointDataExplorerAuthenticationResponsePtrOutput) ToDataflowEndpointDataExplorerAuthenticationResponsePtrOutputWithContext(ctx context.Context) DataflowEndpointDataExplorerAuthenticationResponsePtrOutput {
	return o
}

func (o DataflowEndpointDataExplorerAuthenticationResponsePtrOutput) Elem() DataflowEndpointDataExplorerAuthenticationResponseOutput {
	return o.ApplyT(func(v *DataflowEndpointDataExplorerAuthenticationResponse) DataflowEndpointDataExplorerAuthenticationResponse {
		if v != nil {
			return *v
		}
		var ret DataflowEndpointDataExplorerAuthenticationResponse
		return ret
	}).(DataflowEndpointDataExplorerAuthenticationResponseOutput)
}

// Mode of Authentication.
func (o DataflowEndpointDataExplorerAuthenticationResponsePtrOutput) Method() pulumi.AnyOutput {
	return o.ApplyT(func(v *DataflowEndpointDataExplorerAuthenticationResponse) interface{} {
		if v == nil {
			return nil
		}
		return v.Method
	}).(pulumi.AnyOutput)
}

// System-assigned managed identity authentication.
func (o DataflowEndpointDataExplorerAuthenticationResponsePtrOutput) SystemAssignedManagedIdentitySettings() DataflowEndpointAuthenticationSystemAssignedManagedIdentityResponsePtrOutput {
	return o.ApplyT(func(v *DataflowEndpointDataExplorerAuthenticationResponse) *DataflowEndpointAuthenticationSystemAssignedManagedIdentityResponse {
		if v == nil {
			return nil
		}
		return v.SystemAssignedManagedIdentitySettings
	}).(DataflowEndpointAuthenticationSystemAssignedManagedIdentityResponsePtrOutput)
}

// User-assigned managed identity authentication.
func (o DataflowEndpointDataExplorerAuthenticationResponsePtrOutput) UserAssignedManagedIdentitySettings() DataflowEndpointAuthenticationUserAssignedManagedIdentityResponsePtrOutput {
	return o.ApplyT(func(v *DataflowEndpointDataExplorerAuthenticationResponse) *DataflowEndpointAuthenticationUserAssignedManagedIdentityResponse {
		if v == nil {
			return nil
		}
		return v.UserAssignedManagedIdentitySettings
	}).(DataflowEndpointAuthenticationUserAssignedManagedIdentityResponsePtrOutput)
}

// Azure Data Explorer endpoint properties
type DataflowEndpointDataExplorerResponse struct {
	// Authentication configuration. NOTE - only authentication property is allowed per entry.
	Authentication DataflowEndpointDataExplorerAuthenticationResponse `pulumi:"authentication"`
	// Azure Data Explorer endpoint batching configuration.
	Batching *BatchingConfigurationResponse `pulumi:"batching"`
	// Database name.
	Database string `pulumi:"database"`
	// Host of the Azure Data Explorer in the form of <cluster>.<region>.kusto.windows.net .
	Host string `pulumi:"host"`
}

// Defaults sets the appropriate defaults for DataflowEndpointDataExplorerResponse
func (val *DataflowEndpointDataExplorerResponse) Defaults() *DataflowEndpointDataExplorerResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.Batching = tmp.Batching.Defaults()

	return &tmp
}

// Azure Data Explorer endpoint properties
type DataflowEndpointDataExplorerResponseOutput struct{ *pulumi.OutputState }

func (DataflowEndpointDataExplorerResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataflowEndpointDataExplorerResponse)(nil)).Elem()
}

func (o DataflowEndpointDataExplorerResponseOutput) ToDataflowEndpointDataExplorerResponseOutput() DataflowEndpointDataExplorerResponseOutput {
	return o
}

func (o DataflowEndpointDataExplorerResponseOutput) ToDataflowEndpointDataExplorerResponseOutputWithContext(ctx context.Context) DataflowEndpointDataExplorerResponseOutput {
	return o
}

// Authentication configuration. NOTE - only authentication property is allowed per entry.
func (o DataflowEndpointDataExplorerResponseOutput) Authentication() DataflowEndpointDataExplorerAuthenticationResponseOutput {
	return o.ApplyT(func(v DataflowEndpointDataExplorerResponse) DataflowEndpointDataExplorerAuthenticationResponse {
		return v.Authentication
	}).(DataflowEndpointDataExplorerAuthenticationResponseOutput)
}

// Azure Data Explorer endpoint batching configuration.
func (o DataflowEndpointDataExplorerResponseOutput) Batching() BatchingConfigurationResponsePtrOutput {
	return o.ApplyT(func(v DataflowEndpointDataExplorerResponse) *BatchingConfigurationResponse { return v.Batching }).(BatchingConfigurationResponsePtrOutput)
}

// Database name.
func (o DataflowEndpointDataExplorerResponseOutput) Database() pulumi.StringOutput {
	return o.ApplyT(func(v DataflowEndpointDataExplorerResponse) string { return v.Database }).(pulumi.StringOutput)
}

// Host of the Azure Data Explorer in the form of <cluster>.<region>.kusto.windows.net .
func (o DataflowEndpointDataExplorerResponseOutput) Host() pulumi.StringOutput {
	return o.ApplyT(func(v DataflowEndpointDataExplorerResponse) string { return v.Host }).(pulumi.StringOutput)
}

type DataflowEndpointDataExplorerResponsePtrOutput struct{ *pulumi.OutputState }

func (DataflowEndpointDataExplorerResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataflowEndpointDataExplorerResponse)(nil)).Elem()
}

func (o DataflowEndpointDataExplorerResponsePtrOutput) ToDataflowEndpointDataExplorerResponsePtrOutput() DataflowEndpointDataExplorerResponsePtrOutput {
	return o
}

func (o DataflowEndpointDataExplorerResponsePtrOutput) ToDataflowEndpointDataExplorerResponsePtrOutputWithContext(ctx context.Context) DataflowEndpointDataExplorerResponsePtrOutput {
	return o
}

func (o DataflowEndpointDataExplorerResponsePtrOutput) Elem() DataflowEndpointDataExplorerResponseOutput {
	return o.ApplyT(func(v *DataflowEndpointDataExplorerResponse) DataflowEndpointDataExplorerResponse {
		if v != nil {
			return *v
		}
		var ret DataflowEndpointDataExplorerResponse
		return ret
	}).(DataflowEndpointDataExplorerResponseOutput)
}

// Authentication configuration. NOTE - only authentication property is allowed per entry.
func (o DataflowEndpointDataExplorerResponsePtrOutput) Authentication() DataflowEndpointDataExplorerAuthenticationResponsePtrOutput {
	return o.ApplyT(func(v *DataflowEndpointDataExplorerResponse) *DataflowEndpointDataExplorerAuthenticationResponse {
		if v == nil {
			return nil
		}
		return &v.Authentication
	}).(DataflowEndpointDataExplorerAuthenticationResponsePtrOutput)
}

// Azure Data Explorer endpoint batching configuration.
func (o DataflowEndpointDataExplorerResponsePtrOutput) Batching() BatchingConfigurationResponsePtrOutput {
	return o.ApplyT(func(v *DataflowEndpointDataExplorerResponse) *BatchingConfigurationResponse {
		if v == nil {
			return nil
		}
		return v.Batching
	}).(BatchingConfigurationResponsePtrOutput)
}

// Database name.
func (o DataflowEndpointDataExplorerResponsePtrOutput) Database() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataflowEndpointDataExplorerResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Database
	}).(pulumi.StringPtrOutput)
}

// Host of the Azure Data Explorer in the form of <cluster>.<region>.kusto.windows.net .
func (o DataflowEndpointDataExplorerResponsePtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataflowEndpointDataExplorerResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Host
	}).(pulumi.StringPtrOutput)
}

// Azure Data Lake endpoint properties
type DataflowEndpointDataLakeStorage struct {
	// Authentication configuration. NOTE - only authentication property is allowed per entry.
	Authentication DataflowEndpointDataLakeStorageAuthentication `pulumi:"authentication"`
	// Azure Data Lake endpoint batching configuration.
	Batching *BatchingConfiguration `pulumi:"batching"`
	// Host of the Azure Data Lake in the form of <account>.blob.core.windows.net .
	Host string `pulumi:"host"`
}

// Defaults sets the appropriate defaults for DataflowEndpointDataLakeStorage
func (val *DataflowEndpointDataLakeStorage) Defaults() *DataflowEndpointDataLakeStorage {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.Batching = tmp.Batching.Defaults()

	return &tmp
}

// DataflowEndpointDataLakeStorageInput is an input type that accepts DataflowEndpointDataLakeStorageArgs and DataflowEndpointDataLakeStorageOutput values.
// You can construct a concrete instance of `DataflowEndpointDataLakeStorageInput` via:
//
//	DataflowEndpointDataLakeStorageArgs{...}
type DataflowEndpointDataLakeStorageInput interface {
	pulumi.Input

	ToDataflowEndpointDataLakeStorageOutput() DataflowEndpointDataLakeStorageOutput
	ToDataflowEndpointDataLakeStorageOutputWithContext(context.Context) DataflowEndpointDataLakeStorageOutput
}

// Azure Data Lake endpoint properties
type DataflowEndpointDataLakeStorageArgs struct {
	// Authentication configuration. NOTE - only authentication property is allowed per entry.
	Authentication DataflowEndpointDataLakeStorageAuthenticationInput `pulumi:"authentication"`
	// Azure Data Lake endpoint batching configuration.
	Batching BatchingConfigurationPtrInput `pulumi:"batching"`
	// Host of the Azure Data Lake in the form of <account>.blob.core.windows.net .
	Host pulumi.StringInput `pulumi:"host"`
}

// Defaults sets the appropriate defaults for DataflowEndpointDataLakeStorageArgs
func (val *DataflowEndpointDataLakeStorageArgs) Defaults() *DataflowEndpointDataLakeStorageArgs {
	if val == nil {
		return nil
	}
	tmp := *val

	return &tmp
}
func (DataflowEndpointDataLakeStorageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataflowEndpointDataLakeStorage)(nil)).Elem()
}

func (i DataflowEndpointDataLakeStorageArgs) ToDataflowEndpointDataLakeStorageOutput() DataflowEndpointDataLakeStorageOutput {
	return i.ToDataflowEndpointDataLakeStorageOutputWithContext(context.Background())
}

func (i DataflowEndpointDataLakeStorageArgs) ToDataflowEndpointDataLakeStorageOutputWithContext(ctx context.Context) DataflowEndpointDataLakeStorageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataflowEndpointDataLakeStorageOutput)
}

func (i DataflowEndpointDataLakeStorageArgs) ToDataflowEndpointDataLakeStoragePtrOutput() DataflowEndpointDataLakeStoragePtrOutput {
	return i.ToDataflowEndpointDataLakeStoragePtrOutputWithContext(context.Background())
}

func (i DataflowEndpointDataLakeStorageArgs) ToDataflowEndpointDataLakeStoragePtrOutputWithContext(ctx context.Context) DataflowEndpointDataLakeStoragePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataflowEndpointDataLakeStorageOutput).ToDataflowEndpointDataLakeStoragePtrOutputWithContext(ctx)
}

// DataflowEndpointDataLakeStoragePtrInput is an input type that accepts DataflowEndpointDataLakeStorageArgs, DataflowEndpointDataLakeStoragePtr and DataflowEndpointDataLakeStoragePtrOutput values.
// You can construct a concrete instance of `DataflowEndpointDataLakeStoragePtrInput` via:
//
//	        DataflowEndpointDataLakeStorageArgs{...}
//
//	or:
//
//	        nil
type DataflowEndpointDataLakeStoragePtrInput interface {
	pulumi.Input

	ToDataflowEndpointDataLakeStoragePtrOutput() DataflowEndpointDataLakeStoragePtrOutput
	ToDataflowEndpointDataLakeStoragePtrOutputWithContext(context.Context) DataflowEndpointDataLakeStoragePtrOutput
}

type dataflowEndpointDataLakeStoragePtrType DataflowEndpointDataLakeStorageArgs

func DataflowEndpointDataLakeStoragePtr(v *DataflowEndpointDataLakeStorageArgs) DataflowEndpointDataLakeStoragePtrInput {
	return (*dataflowEndpointDataLakeStoragePtrType)(v)
}

func (*dataflowEndpointDataLakeStoragePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataflowEndpointDataLakeStorage)(nil)).Elem()
}

func (i *dataflowEndpointDataLakeStoragePtrType) ToDataflowEndpointDataLakeStoragePtrOutput() DataflowEndpointDataLakeStoragePtrOutput {
	return i.ToDataflowEndpointDataLakeStoragePtrOutputWithContext(context.Background())
}

func (i *dataflowEndpointDataLakeStoragePtrType) ToDataflowEndpointDataLakeStoragePtrOutputWithContext(ctx context.Context) DataflowEndpointDataLakeStoragePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataflowEndpointDataLakeStoragePtrOutput)
}

// Azure Data Lake endpoint properties
type DataflowEndpointDataLakeStorageOutput struct{ *pulumi.OutputState }

func (DataflowEndpointDataLakeStorageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataflowEndpointDataLakeStorage)(nil)).Elem()
}

func (o DataflowEndpointDataLakeStorageOutput) ToDataflowEndpointDataLakeStorageOutput() DataflowEndpointDataLakeStorageOutput {
	return o
}

func (o DataflowEndpointDataLakeStorageOutput) ToDataflowEndpointDataLakeStorageOutputWithContext(ctx context.Context) DataflowEndpointDataLakeStorageOutput {
	return o
}

func (o DataflowEndpointDataLakeStorageOutput) ToDataflowEndpointDataLakeStoragePtrOutput() DataflowEndpointDataLakeStoragePtrOutput {
	return o.ToDataflowEndpointDataLakeStoragePtrOutputWithContext(context.Background())
}

func (o DataflowEndpointDataLakeStorageOutput) ToDataflowEndpointDataLakeStoragePtrOutputWithContext(ctx context.Context) DataflowEndpointDataLakeStoragePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataflowEndpointDataLakeStorage) *DataflowEndpointDataLakeStorage {
		return &v
	}).(DataflowEndpointDataLakeStoragePtrOutput)
}

// Authentication configuration. NOTE - only authentication property is allowed per entry.
func (o DataflowEndpointDataLakeStorageOutput) Authentication() DataflowEndpointDataLakeStorageAuthenticationOutput {
	return o.ApplyT(func(v DataflowEndpointDataLakeStorage) DataflowEndpointDataLakeStorageAuthentication {
		return v.Authentication
	}).(DataflowEndpointDataLakeStorageAuthenticationOutput)
}

// Azure Data Lake endpoint batching configuration.
func (o DataflowEndpointDataLakeStorageOutput) Batching() BatchingConfigurationPtrOutput {
	return o.ApplyT(func(v DataflowEndpointDataLakeStorage) *BatchingConfiguration { return v.Batching }).(BatchingConfigurationPtrOutput)
}

// Host of the Azure Data Lake in the form of <account>.blob.core.windows.net .
func (o DataflowEndpointDataLakeStorageOutput) Host() pulumi.StringOutput {
	return o.ApplyT(func(v DataflowEndpointDataLakeStorage) string { return v.Host }).(pulumi.StringOutput)
}

type DataflowEndpointDataLakeStoragePtrOutput struct{ *pulumi.OutputState }

func (DataflowEndpointDataLakeStoragePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataflowEndpointDataLakeStorage)(nil)).Elem()
}

func (o DataflowEndpointDataLakeStoragePtrOutput) ToDataflowEndpointDataLakeStoragePtrOutput() DataflowEndpointDataLakeStoragePtrOutput {
	return o
}

func (o DataflowEndpointDataLakeStoragePtrOutput) ToDataflowEndpointDataLakeStoragePtrOutputWithContext(ctx context.Context) DataflowEndpointDataLakeStoragePtrOutput {
	return o
}

func (o DataflowEndpointDataLakeStoragePtrOutput) Elem() DataflowEndpointDataLakeStorageOutput {
	return o.ApplyT(func(v *DataflowEndpointDataLakeStorage) DataflowEndpointDataLakeStorage {
		if v != nil {
			return *v
		}
		var ret DataflowEndpointDataLakeStorage
		return ret
	}).(DataflowEndpointDataLakeStorageOutput)
}

// Authentication configuration. NOTE - only authentication property is allowed per entry.
func (o DataflowEndpointDataLakeStoragePtrOutput) Authentication() DataflowEndpointDataLakeStorageAuthenticationPtrOutput {
	return o.ApplyT(func(v *DataflowEndpointDataLakeStorage) *DataflowEndpointDataLakeStorageAuthentication {
		if v == nil {
			return nil
		}
		return &v.Authentication
	}).(DataflowEndpointDataLakeStorageAuthenticationPtrOutput)
}

// Azure Data Lake endpoint batching configuration.
func (o DataflowEndpointDataLakeStoragePtrOutput) Batching() BatchingConfigurationPtrOutput {
	return o.ApplyT(func(v *DataflowEndpointDataLakeStorage) *BatchingConfiguration {
		if v == nil {
			return nil
		}
		return v.Batching
	}).(BatchingConfigurationPtrOutput)
}

// Host of the Azure Data Lake in the form of <account>.blob.core.windows.net .
func (o DataflowEndpointDataLakeStoragePtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataflowEndpointDataLakeStorage) *string {
		if v == nil {
			return nil
		}
		return &v.Host
	}).(pulumi.StringPtrOutput)
}

// Azure Data Lake endpoint Authentication properties.  NOTE Enum - Only one method is supported for one entry
type DataflowEndpointDataLakeStorageAuthentication struct {
	// SAS token authentication.
	AccessTokenSettings *DataflowEndpointAuthenticationAccessToken `pulumi:"accessTokenSettings"`
	// Mode of Authentication.
	Method string `pulumi:"method"`
	// System-assigned managed identity authentication.
	SystemAssignedManagedIdentitySettings *DataflowEndpointAuthenticationSystemAssignedManagedIdentity `pulumi:"systemAssignedManagedIdentitySettings"`
	// User-assigned managed identity authentication.
	UserAssignedManagedIdentitySettings *DataflowEndpointAuthenticationUserAssignedManagedIdentity `pulumi:"userAssignedManagedIdentitySettings"`
}

// DataflowEndpointDataLakeStorageAuthenticationInput is an input type that accepts DataflowEndpointDataLakeStorageAuthenticationArgs and DataflowEndpointDataLakeStorageAuthenticationOutput values.
// You can construct a concrete instance of `DataflowEndpointDataLakeStorageAuthenticationInput` via:
//
//	DataflowEndpointDataLakeStorageAuthenticationArgs{...}
type DataflowEndpointDataLakeStorageAuthenticationInput interface {
	pulumi.Input

	ToDataflowEndpointDataLakeStorageAuthenticationOutput() DataflowEndpointDataLakeStorageAuthenticationOutput
	ToDataflowEndpointDataLakeStorageAuthenticationOutputWithContext(context.Context) DataflowEndpointDataLakeStorageAuthenticationOutput
}

// Azure Data Lake endpoint Authentication properties.  NOTE Enum - Only one method is supported for one entry
type DataflowEndpointDataLakeStorageAuthenticationArgs struct {
	// SAS token authentication.
	AccessTokenSettings DataflowEndpointAuthenticationAccessTokenPtrInput `pulumi:"accessTokenSettings"`
	// Mode of Authentication.
	Method pulumi.StringInput `pulumi:"method"`
	// System-assigned managed identity authentication.
	SystemAssignedManagedIdentitySettings DataflowEndpointAuthenticationSystemAssignedManagedIdentityPtrInput `pulumi:"systemAssignedManagedIdentitySettings"`
	// User-assigned managed identity authentication.
	UserAssignedManagedIdentitySettings DataflowEndpointAuthenticationUserAssignedManagedIdentityPtrInput `pulumi:"userAssignedManagedIdentitySettings"`
}

func (DataflowEndpointDataLakeStorageAuthenticationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataflowEndpointDataLakeStorageAuthentication)(nil)).Elem()
}

func (i DataflowEndpointDataLakeStorageAuthenticationArgs) ToDataflowEndpointDataLakeStorageAuthenticationOutput() DataflowEndpointDataLakeStorageAuthenticationOutput {
	return i.ToDataflowEndpointDataLakeStorageAuthenticationOutputWithContext(context.Background())
}

func (i DataflowEndpointDataLakeStorageAuthenticationArgs) ToDataflowEndpointDataLakeStorageAuthenticationOutputWithContext(ctx context.Context) DataflowEndpointDataLakeStorageAuthenticationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataflowEndpointDataLakeStorageAuthenticationOutput)
}

func (i DataflowEndpointDataLakeStorageAuthenticationArgs) ToDataflowEndpointDataLakeStorageAuthenticationPtrOutput() DataflowEndpointDataLakeStorageAuthenticationPtrOutput {
	return i.ToDataflowEndpointDataLakeStorageAuthenticationPtrOutputWithContext(context.Background())
}

func (i DataflowEndpointDataLakeStorageAuthenticationArgs) ToDataflowEndpointDataLakeStorageAuthenticationPtrOutputWithContext(ctx context.Context) DataflowEndpointDataLakeStorageAuthenticationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataflowEndpointDataLakeStorageAuthenticationOutput).ToDataflowEndpointDataLakeStorageAuthenticationPtrOutputWithContext(ctx)
}

// DataflowEndpointDataLakeStorageAuthenticationPtrInput is an input type that accepts DataflowEndpointDataLakeStorageAuthenticationArgs, DataflowEndpointDataLakeStorageAuthenticationPtr and DataflowEndpointDataLakeStorageAuthenticationPtrOutput values.
// You can construct a concrete instance of `DataflowEndpointDataLakeStorageAuthenticationPtrInput` via:
//
//	        DataflowEndpointDataLakeStorageAuthenticationArgs{...}
//
//	or:
//
//	        nil
type DataflowEndpointDataLakeStorageAuthenticationPtrInput interface {
	pulumi.Input

	ToDataflowEndpointDataLakeStorageAuthenticationPtrOutput() DataflowEndpointDataLakeStorageAuthenticationPtrOutput
	ToDataflowEndpointDataLakeStorageAuthenticationPtrOutputWithContext(context.Context) DataflowEndpointDataLakeStorageAuthenticationPtrOutput
}

type dataflowEndpointDataLakeStorageAuthenticationPtrType DataflowEndpointDataLakeStorageAuthenticationArgs

func DataflowEndpointDataLakeStorageAuthenticationPtr(v *DataflowEndpointDataLakeStorageAuthenticationArgs) DataflowEndpointDataLakeStorageAuthenticationPtrInput {
	return (*dataflowEndpointDataLakeStorageAuthenticationPtrType)(v)
}

func (*dataflowEndpointDataLakeStorageAuthenticationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataflowEndpointDataLakeStorageAuthentication)(nil)).Elem()
}

func (i *dataflowEndpointDataLakeStorageAuthenticationPtrType) ToDataflowEndpointDataLakeStorageAuthenticationPtrOutput() DataflowEndpointDataLakeStorageAuthenticationPtrOutput {
	return i.ToDataflowEndpointDataLakeStorageAuthenticationPtrOutputWithContext(context.Background())
}

func (i *dataflowEndpointDataLakeStorageAuthenticationPtrType) ToDataflowEndpointDataLakeStorageAuthenticationPtrOutputWithContext(ctx context.Context) DataflowEndpointDataLakeStorageAuthenticationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataflowEndpointDataLakeStorageAuthenticationPtrOutput)
}

// Azure Data Lake endpoint Authentication properties.  NOTE Enum - Only one method is supported for one entry
type DataflowEndpointDataLakeStorageAuthenticationOutput struct{ *pulumi.OutputState }

func (DataflowEndpointDataLakeStorageAuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataflowEndpointDataLakeStorageAuthentication)(nil)).Elem()
}

func (o DataflowEndpointDataLakeStorageAuthenticationOutput) ToDataflowEndpointDataLakeStorageAuthenticationOutput() DataflowEndpointDataLakeStorageAuthenticationOutput {
	return o
}

func (o DataflowEndpointDataLakeStorageAuthenticationOutput) ToDataflowEndpointDataLakeStorageAuthenticationOutputWithContext(ctx context.Context) DataflowEndpointDataLakeStorageAuthenticationOutput {
	return o
}

func (o DataflowEndpointDataLakeStorageAuthenticationOutput) ToDataflowEndpointDataLakeStorageAuthenticationPtrOutput() DataflowEndpointDataLakeStorageAuthenticationPtrOutput {
	return o.ToDataflowEndpointDataLakeStorageAuthenticationPtrOutputWithContext(context.Background())
}

func (o DataflowEndpointDataLakeStorageAuthenticationOutput) ToDataflowEndpointDataLakeStorageAuthenticationPtrOutputWithContext(ctx context.Context) DataflowEndpointDataLakeStorageAuthenticationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataflowEndpointDataLakeStorageAuthentication) *DataflowEndpointDataLakeStorageAuthentication {
		return &v
	}).(DataflowEndpointDataLakeStorageAuthenticationPtrOutput)
}

// SAS token authentication.
func (o DataflowEndpointDataLakeStorageAuthenticationOutput) AccessTokenSettings() DataflowEndpointAuthenticationAccessTokenPtrOutput {
	return o.ApplyT(func(v DataflowEndpointDataLakeStorageAuthentication) *DataflowEndpointAuthenticationAccessToken {
		return v.AccessTokenSettings
	}).(DataflowEndpointAuthenticationAccessTokenPtrOutput)
}

// Mode of Authentication.
func (o DataflowEndpointDataLakeStorageAuthenticationOutput) Method() pulumi.StringOutput {
	return o.ApplyT(func(v DataflowEndpointDataLakeStorageAuthentication) string { return v.Method }).(pulumi.StringOutput)
}

// System-assigned managed identity authentication.
func (o DataflowEndpointDataLakeStorageAuthenticationOutput) SystemAssignedManagedIdentitySettings() DataflowEndpointAuthenticationSystemAssignedManagedIdentityPtrOutput {
	return o.ApplyT(func(v DataflowEndpointDataLakeStorageAuthentication) *DataflowEndpointAuthenticationSystemAssignedManagedIdentity {
		return v.SystemAssignedManagedIdentitySettings
	}).(DataflowEndpointAuthenticationSystemAssignedManagedIdentityPtrOutput)
}

// User-assigned managed identity authentication.
func (o DataflowEndpointDataLakeStorageAuthenticationOutput) UserAssignedManagedIdentitySettings() DataflowEndpointAuthenticationUserAssignedManagedIdentityPtrOutput {
	return o.ApplyT(func(v DataflowEndpointDataLakeStorageAuthentication) *DataflowEndpointAuthenticationUserAssignedManagedIdentity {
		return v.UserAssignedManagedIdentitySettings
	}).(DataflowEndpointAuthenticationUserAssignedManagedIdentityPtrOutput)
}

type DataflowEndpointDataLakeStorageAuthenticationPtrOutput struct{ *pulumi.OutputState }

func (DataflowEndpointDataLakeStorageAuthenticationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataflowEndpointDataLakeStorageAuthentication)(nil)).Elem()
}

func (o DataflowEndpointDataLakeStorageAuthenticationPtrOutput) ToDataflowEndpointDataLakeStorageAuthenticationPtrOutput() DataflowEndpointDataLakeStorageAuthenticationPtrOutput {
	return o
}

func (o DataflowEndpointDataLakeStorageAuthenticationPtrOutput) ToDataflowEndpointDataLakeStorageAuthenticationPtrOutputWithContext(ctx context.Context) DataflowEndpointDataLakeStorageAuthenticationPtrOutput {
	return o
}

func (o DataflowEndpointDataLakeStorageAuthenticationPtrOutput) Elem() DataflowEndpointDataLakeStorageAuthenticationOutput {
	return o.ApplyT(func(v *DataflowEndpointDataLakeStorageAuthentication) DataflowEndpointDataLakeStorageAuthentication {
		if v != nil {
			return *v
		}
		var ret DataflowEndpointDataLakeStorageAuthentication
		return ret
	}).(DataflowEndpointDataLakeStorageAuthenticationOutput)
}

// SAS token authentication.
func (o DataflowEndpointDataLakeStorageAuthenticationPtrOutput) AccessTokenSettings() DataflowEndpointAuthenticationAccessTokenPtrOutput {
	return o.ApplyT(func(v *DataflowEndpointDataLakeStorageAuthentication) *DataflowEndpointAuthenticationAccessToken {
		if v == nil {
			return nil
		}
		return v.AccessTokenSettings
	}).(DataflowEndpointAuthenticationAccessTokenPtrOutput)
}

// Mode of Authentication.
func (o DataflowEndpointDataLakeStorageAuthenticationPtrOutput) Method() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataflowEndpointDataLakeStorageAuthentication) *string {
		if v == nil {
			return nil
		}
		return &v.Method
	}).(pulumi.StringPtrOutput)
}

// System-assigned managed identity authentication.
func (o DataflowEndpointDataLakeStorageAuthenticationPtrOutput) SystemAssignedManagedIdentitySettings() DataflowEndpointAuthenticationSystemAssignedManagedIdentityPtrOutput {
	return o.ApplyT(func(v *DataflowEndpointDataLakeStorageAuthentication) *DataflowEndpointAuthenticationSystemAssignedManagedIdentity {
		if v == nil {
			return nil
		}
		return v.SystemAssignedManagedIdentitySettings
	}).(DataflowEndpointAuthenticationSystemAssignedManagedIdentityPtrOutput)
}

// User-assigned managed identity authentication.
func (o DataflowEndpointDataLakeStorageAuthenticationPtrOutput) UserAssignedManagedIdentitySettings() DataflowEndpointAuthenticationUserAssignedManagedIdentityPtrOutput {
	return o.ApplyT(func(v *DataflowEndpointDataLakeStorageAuthentication) *DataflowEndpointAuthenticationUserAssignedManagedIdentity {
		if v == nil {
			return nil
		}
		return v.UserAssignedManagedIdentitySettings
	}).(DataflowEndpointAuthenticationUserAssignedManagedIdentityPtrOutput)
}

// Azure Data Lake endpoint Authentication properties.  NOTE Enum - Only one method is supported for one entry
type DataflowEndpointDataLakeStorageAuthenticationResponse struct {
	// SAS token authentication.
	AccessTokenSettings *DataflowEndpointAuthenticationAccessTokenResponse `pulumi:"accessTokenSettings"`
	// Mode of Authentication.
	Method string `pulumi:"method"`
	// System-assigned managed identity authentication.
	SystemAssignedManagedIdentitySettings *DataflowEndpointAuthenticationSystemAssignedManagedIdentityResponse `pulumi:"systemAssignedManagedIdentitySettings"`
	// User-assigned managed identity authentication.
	UserAssignedManagedIdentitySettings *DataflowEndpointAuthenticationUserAssignedManagedIdentityResponse `pulumi:"userAssignedManagedIdentitySettings"`
}

// Azure Data Lake endpoint Authentication properties.  NOTE Enum - Only one method is supported for one entry
type DataflowEndpointDataLakeStorageAuthenticationResponseOutput struct{ *pulumi.OutputState }

func (DataflowEndpointDataLakeStorageAuthenticationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataflowEndpointDataLakeStorageAuthenticationResponse)(nil)).Elem()
}

func (o DataflowEndpointDataLakeStorageAuthenticationResponseOutput) ToDataflowEndpointDataLakeStorageAuthenticationResponseOutput() DataflowEndpointDataLakeStorageAuthenticationResponseOutput {
	return o
}

func (o DataflowEndpointDataLakeStorageAuthenticationResponseOutput) ToDataflowEndpointDataLakeStorageAuthenticationResponseOutputWithContext(ctx context.Context) DataflowEndpointDataLakeStorageAuthenticationResponseOutput {
	return o
}

// SAS token authentication.
func (o DataflowEndpointDataLakeStorageAuthenticationResponseOutput) AccessTokenSettings() DataflowEndpointAuthenticationAccessTokenResponsePtrOutput {
	return o.ApplyT(func(v DataflowEndpointDataLakeStorageAuthenticationResponse) *DataflowEndpointAuthenticationAccessTokenResponse {
		return v.AccessTokenSettings
	}).(DataflowEndpointAuthenticationAccessTokenResponsePtrOutput)
}

// Mode of Authentication.
func (o DataflowEndpointDataLakeStorageAuthenticationResponseOutput) Method() pulumi.StringOutput {
	return o.ApplyT(func(v DataflowEndpointDataLakeStorageAuthenticationResponse) string { return v.Method }).(pulumi.StringOutput)
}

// System-assigned managed identity authentication.
func (o DataflowEndpointDataLakeStorageAuthenticationResponseOutput) SystemAssignedManagedIdentitySettings() DataflowEndpointAuthenticationSystemAssignedManagedIdentityResponsePtrOutput {
	return o.ApplyT(func(v DataflowEndpointDataLakeStorageAuthenticationResponse) *DataflowEndpointAuthenticationSystemAssignedManagedIdentityResponse {
		return v.SystemAssignedManagedIdentitySettings
	}).(DataflowEndpointAuthenticationSystemAssignedManagedIdentityResponsePtrOutput)
}

// User-assigned managed identity authentication.
func (o DataflowEndpointDataLakeStorageAuthenticationResponseOutput) UserAssignedManagedIdentitySettings() DataflowEndpointAuthenticationUserAssignedManagedIdentityResponsePtrOutput {
	return o.ApplyT(func(v DataflowEndpointDataLakeStorageAuthenticationResponse) *DataflowEndpointAuthenticationUserAssignedManagedIdentityResponse {
		return v.UserAssignedManagedIdentitySettings
	}).(DataflowEndpointAuthenticationUserAssignedManagedIdentityResponsePtrOutput)
}

type DataflowEndpointDataLakeStorageAuthenticationResponsePtrOutput struct{ *pulumi.OutputState }

func (DataflowEndpointDataLakeStorageAuthenticationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataflowEndpointDataLakeStorageAuthenticationResponse)(nil)).Elem()
}

func (o DataflowEndpointDataLakeStorageAuthenticationResponsePtrOutput) ToDataflowEndpointDataLakeStorageAuthenticationResponsePtrOutput() DataflowEndpointDataLakeStorageAuthenticationResponsePtrOutput {
	return o
}

func (o DataflowEndpointDataLakeStorageAuthenticationResponsePtrOutput) ToDataflowEndpointDataLakeStorageAuthenticationResponsePtrOutputWithContext(ctx context.Context) DataflowEndpointDataLakeStorageAuthenticationResponsePtrOutput {
	return o
}

func (o DataflowEndpointDataLakeStorageAuthenticationResponsePtrOutput) Elem() DataflowEndpointDataLakeStorageAuthenticationResponseOutput {
	return o.ApplyT(func(v *DataflowEndpointDataLakeStorageAuthenticationResponse) DataflowEndpointDataLakeStorageAuthenticationResponse {
		if v != nil {
			return *v
		}
		var ret DataflowEndpointDataLakeStorageAuthenticationResponse
		return ret
	}).(DataflowEndpointDataLakeStorageAuthenticationResponseOutput)
}

// SAS token authentication.
func (o DataflowEndpointDataLakeStorageAuthenticationResponsePtrOutput) AccessTokenSettings() DataflowEndpointAuthenticationAccessTokenResponsePtrOutput {
	return o.ApplyT(func(v *DataflowEndpointDataLakeStorageAuthenticationResponse) *DataflowEndpointAuthenticationAccessTokenResponse {
		if v == nil {
			return nil
		}
		return v.AccessTokenSettings
	}).(DataflowEndpointAuthenticationAccessTokenResponsePtrOutput)
}

// Mode of Authentication.
func (o DataflowEndpointDataLakeStorageAuthenticationResponsePtrOutput) Method() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataflowEndpointDataLakeStorageAuthenticationResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Method
	}).(pulumi.StringPtrOutput)
}

// System-assigned managed identity authentication.
func (o DataflowEndpointDataLakeStorageAuthenticationResponsePtrOutput) SystemAssignedManagedIdentitySettings() DataflowEndpointAuthenticationSystemAssignedManagedIdentityResponsePtrOutput {
	return o.ApplyT(func(v *DataflowEndpointDataLakeStorageAuthenticationResponse) *DataflowEndpointAuthenticationSystemAssignedManagedIdentityResponse {
		if v == nil {
			return nil
		}
		return v.SystemAssignedManagedIdentitySettings
	}).(DataflowEndpointAuthenticationSystemAssignedManagedIdentityResponsePtrOutput)
}

// User-assigned managed identity authentication.
func (o DataflowEndpointDataLakeStorageAuthenticationResponsePtrOutput) UserAssignedManagedIdentitySettings() DataflowEndpointAuthenticationUserAssignedManagedIdentityResponsePtrOutput {
	return o.ApplyT(func(v *DataflowEndpointDataLakeStorageAuthenticationResponse) *DataflowEndpointAuthenticationUserAssignedManagedIdentityResponse {
		if v == nil {
			return nil
		}
		return v.UserAssignedManagedIdentitySettings
	}).(DataflowEndpointAuthenticationUserAssignedManagedIdentityResponsePtrOutput)
}

// Azure Data Lake endpoint properties
type DataflowEndpointDataLakeStorageResponse struct {
	// Authentication configuration. NOTE - only authentication property is allowed per entry.
	Authentication DataflowEndpointDataLakeStorageAuthenticationResponse `pulumi:"authentication"`
	// Azure Data Lake endpoint batching configuration.
	Batching *BatchingConfigurationResponse `pulumi:"batching"`
	// Host of the Azure Data Lake in the form of <account>.blob.core.windows.net .
	Host string `pulumi:"host"`
}

// Defaults sets the appropriate defaults for DataflowEndpointDataLakeStorageResponse
func (val *DataflowEndpointDataLakeStorageResponse) Defaults() *DataflowEndpointDataLakeStorageResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.Batching = tmp.Batching.Defaults()

	return &tmp
}

// Azure Data Lake endpoint properties
type DataflowEndpointDataLakeStorageResponseOutput struct{ *pulumi.OutputState }

func (DataflowEndpointDataLakeStorageResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataflowEndpointDataLakeStorageResponse)(nil)).Elem()
}

func (o DataflowEndpointDataLakeStorageResponseOutput) ToDataflowEndpointDataLakeStorageResponseOutput() DataflowEndpointDataLakeStorageResponseOutput {
	return o
}

func (o DataflowEndpointDataLakeStorageResponseOutput) ToDataflowEndpointDataLakeStorageResponseOutputWithContext(ctx context.Context) DataflowEndpointDataLakeStorageResponseOutput {
	return o
}

// Authentication configuration. NOTE - only authentication property is allowed per entry.
func (o DataflowEndpointDataLakeStorageResponseOutput) Authentication() DataflowEndpointDataLakeStorageAuthenticationResponseOutput {
	return o.ApplyT(func(v DataflowEndpointDataLakeStorageResponse) DataflowEndpointDataLakeStorageAuthenticationResponse {
		return v.Authentication
	}).(DataflowEndpointDataLakeStorageAuthenticationResponseOutput)
}

// Azure Data Lake endpoint batching configuration.
func (o DataflowEndpointDataLakeStorageResponseOutput) Batching() BatchingConfigurationResponsePtrOutput {
	return o.ApplyT(func(v DataflowEndpointDataLakeStorageResponse) *BatchingConfigurationResponse { return v.Batching }).(BatchingConfigurationResponsePtrOutput)
}

// Host of the Azure Data Lake in the form of <account>.blob.core.windows.net .
func (o DataflowEndpointDataLakeStorageResponseOutput) Host() pulumi.StringOutput {
	return o.ApplyT(func(v DataflowEndpointDataLakeStorageResponse) string { return v.Host }).(pulumi.StringOutput)
}

type DataflowEndpointDataLakeStorageResponsePtrOutput struct{ *pulumi.OutputState }

func (DataflowEndpointDataLakeStorageResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataflowEndpointDataLakeStorageResponse)(nil)).Elem()
}

func (o DataflowEndpointDataLakeStorageResponsePtrOutput) ToDataflowEndpointDataLakeStorageResponsePtrOutput() DataflowEndpointDataLakeStorageResponsePtrOutput {
	return o
}

func (o DataflowEndpointDataLakeStorageResponsePtrOutput) ToDataflowEndpointDataLakeStorageResponsePtrOutputWithContext(ctx context.Context) DataflowEndpointDataLakeStorageResponsePtrOutput {
	return o
}

func (o DataflowEndpointDataLakeStorageResponsePtrOutput) Elem() DataflowEndpointDataLakeStorageResponseOutput {
	return o.ApplyT(func(v *DataflowEndpointDataLakeStorageResponse) DataflowEndpointDataLakeStorageResponse {
		if v != nil {
			return *v
		}
		var ret DataflowEndpointDataLakeStorageResponse
		return ret
	}).(DataflowEndpointDataLakeStorageResponseOutput)
}

// Authentication configuration. NOTE - only authentication property is allowed per entry.
func (o DataflowEndpointDataLakeStorageResponsePtrOutput) Authentication() DataflowEndpointDataLakeStorageAuthenticationResponsePtrOutput {
	return o.ApplyT(func(v *DataflowEndpointDataLakeStorageResponse) *DataflowEndpointDataLakeStorageAuthenticationResponse {
		if v == nil {
			return nil
		}
		return &v.Authentication
	}).(DataflowEndpointDataLakeStorageAuthenticationResponsePtrOutput)
}

// Azure Data Lake endpoint batching configuration.
func (o DataflowEndpointDataLakeStorageResponsePtrOutput) Batching() BatchingConfigurationResponsePtrOutput {
	return o.ApplyT(func(v *DataflowEndpointDataLakeStorageResponse) *BatchingConfigurationResponse {
		if v == nil {
			return nil
		}
		return v.Batching
	}).(BatchingConfigurationResponsePtrOutput)
}

// Host of the Azure Data Lake in the form of <account>.blob.core.windows.net .
func (o DataflowEndpointDataLakeStorageResponsePtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataflowEndpointDataLakeStorageResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Host
	}).(pulumi.StringPtrOutput)
}

// Microsoft Fabric endpoint properties
type DataflowEndpointFabricOneLake struct {
	// Authentication configuration. NOTE - only one authentication property is allowed per entry.
	Authentication DataflowEndpointFabricOneLakeAuthentication `pulumi:"authentication"`
	// Batching configuration.
	Batching *BatchingConfiguration `pulumi:"batching"`
	// Host of the Microsoft Fabric in the form of https://<host>.fabric.microsoft.com.
	Host string `pulumi:"host"`
	// Names of the workspace and lakehouse.
	Names DataflowEndpointFabricOneLakeNames `pulumi:"names"`
	// Type of location of the data in the workspace. Can be either tables or files.
	OneLakePathType string `pulumi:"oneLakePathType"`
}

// Defaults sets the appropriate defaults for DataflowEndpointFabricOneLake
func (val *DataflowEndpointFabricOneLake) Defaults() *DataflowEndpointFabricOneLake {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.Batching = tmp.Batching.Defaults()

	return &tmp
}

// DataflowEndpointFabricOneLakeInput is an input type that accepts DataflowEndpointFabricOneLakeArgs and DataflowEndpointFabricOneLakeOutput values.
// You can construct a concrete instance of `DataflowEndpointFabricOneLakeInput` via:
//
//	DataflowEndpointFabricOneLakeArgs{...}
type DataflowEndpointFabricOneLakeInput interface {
	pulumi.Input

	ToDataflowEndpointFabricOneLakeOutput() DataflowEndpointFabricOneLakeOutput
	ToDataflowEndpointFabricOneLakeOutputWithContext(context.Context) DataflowEndpointFabricOneLakeOutput
}

// Microsoft Fabric endpoint properties
type DataflowEndpointFabricOneLakeArgs struct {
	// Authentication configuration. NOTE - only one authentication property is allowed per entry.
	Authentication DataflowEndpointFabricOneLakeAuthenticationInput `pulumi:"authentication"`
	// Batching configuration.
	Batching BatchingConfigurationPtrInput `pulumi:"batching"`
	// Host of the Microsoft Fabric in the form of https://<host>.fabric.microsoft.com.
	Host pulumi.StringInput `pulumi:"host"`
	// Names of the workspace and lakehouse.
	Names DataflowEndpointFabricOneLakeNamesInput `pulumi:"names"`
	// Type of location of the data in the workspace. Can be either tables or files.
	OneLakePathType pulumi.StringInput `pulumi:"oneLakePathType"`
}

// Defaults sets the appropriate defaults for DataflowEndpointFabricOneLakeArgs
func (val *DataflowEndpointFabricOneLakeArgs) Defaults() *DataflowEndpointFabricOneLakeArgs {
	if val == nil {
		return nil
	}
	tmp := *val

	return &tmp
}
func (DataflowEndpointFabricOneLakeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataflowEndpointFabricOneLake)(nil)).Elem()
}

func (i DataflowEndpointFabricOneLakeArgs) ToDataflowEndpointFabricOneLakeOutput() DataflowEndpointFabricOneLakeOutput {
	return i.ToDataflowEndpointFabricOneLakeOutputWithContext(context.Background())
}

func (i DataflowEndpointFabricOneLakeArgs) ToDataflowEndpointFabricOneLakeOutputWithContext(ctx context.Context) DataflowEndpointFabricOneLakeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataflowEndpointFabricOneLakeOutput)
}

func (i DataflowEndpointFabricOneLakeArgs) ToDataflowEndpointFabricOneLakePtrOutput() DataflowEndpointFabricOneLakePtrOutput {
	return i.ToDataflowEndpointFabricOneLakePtrOutputWithContext(context.Background())
}

func (i DataflowEndpointFabricOneLakeArgs) ToDataflowEndpointFabricOneLakePtrOutputWithContext(ctx context.Context) DataflowEndpointFabricOneLakePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataflowEndpointFabricOneLakeOutput).ToDataflowEndpointFabricOneLakePtrOutputWithContext(ctx)
}

// DataflowEndpointFabricOneLakePtrInput is an input type that accepts DataflowEndpointFabricOneLakeArgs, DataflowEndpointFabricOneLakePtr and DataflowEndpointFabricOneLakePtrOutput values.
// You can construct a concrete instance of `DataflowEndpointFabricOneLakePtrInput` via:
//
//	        DataflowEndpointFabricOneLakeArgs{...}
//
//	or:
//
//	        nil
type DataflowEndpointFabricOneLakePtrInput interface {
	pulumi.Input

	ToDataflowEndpointFabricOneLakePtrOutput() DataflowEndpointFabricOneLakePtrOutput
	ToDataflowEndpointFabricOneLakePtrOutputWithContext(context.Context) DataflowEndpointFabricOneLakePtrOutput
}

type dataflowEndpointFabricOneLakePtrType DataflowEndpointFabricOneLakeArgs

func DataflowEndpointFabricOneLakePtr(v *DataflowEndpointFabricOneLakeArgs) DataflowEndpointFabricOneLakePtrInput {
	return (*dataflowEndpointFabricOneLakePtrType)(v)
}

func (*dataflowEndpointFabricOneLakePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataflowEndpointFabricOneLake)(nil)).Elem()
}

func (i *dataflowEndpointFabricOneLakePtrType) ToDataflowEndpointFabricOneLakePtrOutput() DataflowEndpointFabricOneLakePtrOutput {
	return i.ToDataflowEndpointFabricOneLakePtrOutputWithContext(context.Background())
}

func (i *dataflowEndpointFabricOneLakePtrType) ToDataflowEndpointFabricOneLakePtrOutputWithContext(ctx context.Context) DataflowEndpointFabricOneLakePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataflowEndpointFabricOneLakePtrOutput)
}

// Microsoft Fabric endpoint properties
type DataflowEndpointFabricOneLakeOutput struct{ *pulumi.OutputState }

func (DataflowEndpointFabricOneLakeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataflowEndpointFabricOneLake)(nil)).Elem()
}

func (o DataflowEndpointFabricOneLakeOutput) ToDataflowEndpointFabricOneLakeOutput() DataflowEndpointFabricOneLakeOutput {
	return o
}

func (o DataflowEndpointFabricOneLakeOutput) ToDataflowEndpointFabricOneLakeOutputWithContext(ctx context.Context) DataflowEndpointFabricOneLakeOutput {
	return o
}

func (o DataflowEndpointFabricOneLakeOutput) ToDataflowEndpointFabricOneLakePtrOutput() DataflowEndpointFabricOneLakePtrOutput {
	return o.ToDataflowEndpointFabricOneLakePtrOutputWithContext(context.Background())
}

func (o DataflowEndpointFabricOneLakeOutput) ToDataflowEndpointFabricOneLakePtrOutputWithContext(ctx context.Context) DataflowEndpointFabricOneLakePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataflowEndpointFabricOneLake) *DataflowEndpointFabricOneLake {
		return &v
	}).(DataflowEndpointFabricOneLakePtrOutput)
}

// Authentication configuration. NOTE - only one authentication property is allowed per entry.
func (o DataflowEndpointFabricOneLakeOutput) Authentication() DataflowEndpointFabricOneLakeAuthenticationOutput {
	return o.ApplyT(func(v DataflowEndpointFabricOneLake) DataflowEndpointFabricOneLakeAuthentication {
		return v.Authentication
	}).(DataflowEndpointFabricOneLakeAuthenticationOutput)
}

// Batching configuration.
func (o DataflowEndpointFabricOneLakeOutput) Batching() BatchingConfigurationPtrOutput {
	return o.ApplyT(func(v DataflowEndpointFabricOneLake) *BatchingConfiguration { return v.Batching }).(BatchingConfigurationPtrOutput)
}

// Host of the Microsoft Fabric in the form of https://<host>.fabric.microsoft.com.
func (o DataflowEndpointFabricOneLakeOutput) Host() pulumi.StringOutput {
	return o.ApplyT(func(v DataflowEndpointFabricOneLake) string { return v.Host }).(pulumi.StringOutput)
}

// Names of the workspace and lakehouse.
func (o DataflowEndpointFabricOneLakeOutput) Names() DataflowEndpointFabricOneLakeNamesOutput {
	return o.ApplyT(func(v DataflowEndpointFabricOneLake) DataflowEndpointFabricOneLakeNames { return v.Names }).(DataflowEndpointFabricOneLakeNamesOutput)
}

// Type of location of the data in the workspace. Can be either tables or files.
func (o DataflowEndpointFabricOneLakeOutput) OneLakePathType() pulumi.StringOutput {
	return o.ApplyT(func(v DataflowEndpointFabricOneLake) string { return v.OneLakePathType }).(pulumi.StringOutput)
}

type DataflowEndpointFabricOneLakePtrOutput struct{ *pulumi.OutputState }

func (DataflowEndpointFabricOneLakePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataflowEndpointFabricOneLake)(nil)).Elem()
}

func (o DataflowEndpointFabricOneLakePtrOutput) ToDataflowEndpointFabricOneLakePtrOutput() DataflowEndpointFabricOneLakePtrOutput {
	return o
}

func (o DataflowEndpointFabricOneLakePtrOutput) ToDataflowEndpointFabricOneLakePtrOutputWithContext(ctx context.Context) DataflowEndpointFabricOneLakePtrOutput {
	return o
}

func (o DataflowEndpointFabricOneLakePtrOutput) Elem() DataflowEndpointFabricOneLakeOutput {
	return o.ApplyT(func(v *DataflowEndpointFabricOneLake) DataflowEndpointFabricOneLake {
		if v != nil {
			return *v
		}
		var ret DataflowEndpointFabricOneLake
		return ret
	}).(DataflowEndpointFabricOneLakeOutput)
}

// Authentication configuration. NOTE - only one authentication property is allowed per entry.
func (o DataflowEndpointFabricOneLakePtrOutput) Authentication() DataflowEndpointFabricOneLakeAuthenticationPtrOutput {
	return o.ApplyT(func(v *DataflowEndpointFabricOneLake) *DataflowEndpointFabricOneLakeAuthentication {
		if v == nil {
			return nil
		}
		return &v.Authentication
	}).(DataflowEndpointFabricOneLakeAuthenticationPtrOutput)
}

// Batching configuration.
func (o DataflowEndpointFabricOneLakePtrOutput) Batching() BatchingConfigurationPtrOutput {
	return o.ApplyT(func(v *DataflowEndpointFabricOneLake) *BatchingConfiguration {
		if v == nil {
			return nil
		}
		return v.Batching
	}).(BatchingConfigurationPtrOutput)
}

// Host of the Microsoft Fabric in the form of https://<host>.fabric.microsoft.com.
func (o DataflowEndpointFabricOneLakePtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataflowEndpointFabricOneLake) *string {
		if v == nil {
			return nil
		}
		return &v.Host
	}).(pulumi.StringPtrOutput)
}

// Names of the workspace and lakehouse.
func (o DataflowEndpointFabricOneLakePtrOutput) Names() DataflowEndpointFabricOneLakeNamesPtrOutput {
	return o.ApplyT(func(v *DataflowEndpointFabricOneLake) *DataflowEndpointFabricOneLakeNames {
		if v == nil {
			return nil
		}
		return &v.Names
	}).(DataflowEndpointFabricOneLakeNamesPtrOutput)
}

// Type of location of the data in the workspace. Can be either tables or files.
func (o DataflowEndpointFabricOneLakePtrOutput) OneLakePathType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataflowEndpointFabricOneLake) *string {
		if v == nil {
			return nil
		}
		return &v.OneLakePathType
	}).(pulumi.StringPtrOutput)
}

// Microsoft Fabric endpoint. Authentication properties. NOTE - Only one method is supported for one entry
type DataflowEndpointFabricOneLakeAuthentication struct {
	// Mode of Authentication.
	Method interface{} `pulumi:"method"`
	// System-assigned managed identity authentication.
	SystemAssignedManagedIdentitySettings *DataflowEndpointAuthenticationSystemAssignedManagedIdentity `pulumi:"systemAssignedManagedIdentitySettings"`
	// User-assigned managed identity authentication.
	UserAssignedManagedIdentitySettings *DataflowEndpointAuthenticationUserAssignedManagedIdentity `pulumi:"userAssignedManagedIdentitySettings"`
}

// DataflowEndpointFabricOneLakeAuthenticationInput is an input type that accepts DataflowEndpointFabricOneLakeAuthenticationArgs and DataflowEndpointFabricOneLakeAuthenticationOutput values.
// You can construct a concrete instance of `DataflowEndpointFabricOneLakeAuthenticationInput` via:
//
//	DataflowEndpointFabricOneLakeAuthenticationArgs{...}
type DataflowEndpointFabricOneLakeAuthenticationInput interface {
	pulumi.Input

	ToDataflowEndpointFabricOneLakeAuthenticationOutput() DataflowEndpointFabricOneLakeAuthenticationOutput
	ToDataflowEndpointFabricOneLakeAuthenticationOutputWithContext(context.Context) DataflowEndpointFabricOneLakeAuthenticationOutput
}

// Microsoft Fabric endpoint. Authentication properties. NOTE - Only one method is supported for one entry
type DataflowEndpointFabricOneLakeAuthenticationArgs struct {
	// Mode of Authentication.
	Method pulumi.Input `pulumi:"method"`
	// System-assigned managed identity authentication.
	SystemAssignedManagedIdentitySettings DataflowEndpointAuthenticationSystemAssignedManagedIdentityPtrInput `pulumi:"systemAssignedManagedIdentitySettings"`
	// User-assigned managed identity authentication.
	UserAssignedManagedIdentitySettings DataflowEndpointAuthenticationUserAssignedManagedIdentityPtrInput `pulumi:"userAssignedManagedIdentitySettings"`
}

func (DataflowEndpointFabricOneLakeAuthenticationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataflowEndpointFabricOneLakeAuthentication)(nil)).Elem()
}

func (i DataflowEndpointFabricOneLakeAuthenticationArgs) ToDataflowEndpointFabricOneLakeAuthenticationOutput() DataflowEndpointFabricOneLakeAuthenticationOutput {
	return i.ToDataflowEndpointFabricOneLakeAuthenticationOutputWithContext(context.Background())
}

func (i DataflowEndpointFabricOneLakeAuthenticationArgs) ToDataflowEndpointFabricOneLakeAuthenticationOutputWithContext(ctx context.Context) DataflowEndpointFabricOneLakeAuthenticationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataflowEndpointFabricOneLakeAuthenticationOutput)
}

func (i DataflowEndpointFabricOneLakeAuthenticationArgs) ToDataflowEndpointFabricOneLakeAuthenticationPtrOutput() DataflowEndpointFabricOneLakeAuthenticationPtrOutput {
	return i.ToDataflowEndpointFabricOneLakeAuthenticationPtrOutputWithContext(context.Background())
}

func (i DataflowEndpointFabricOneLakeAuthenticationArgs) ToDataflowEndpointFabricOneLakeAuthenticationPtrOutputWithContext(ctx context.Context) DataflowEndpointFabricOneLakeAuthenticationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataflowEndpointFabricOneLakeAuthenticationOutput).ToDataflowEndpointFabricOneLakeAuthenticationPtrOutputWithContext(ctx)
}

// DataflowEndpointFabricOneLakeAuthenticationPtrInput is an input type that accepts DataflowEndpointFabricOneLakeAuthenticationArgs, DataflowEndpointFabricOneLakeAuthenticationPtr and DataflowEndpointFabricOneLakeAuthenticationPtrOutput values.
// You can construct a concrete instance of `DataflowEndpointFabricOneLakeAuthenticationPtrInput` via:
//
//	        DataflowEndpointFabricOneLakeAuthenticationArgs{...}
//
//	or:
//
//	        nil
type DataflowEndpointFabricOneLakeAuthenticationPtrInput interface {
	pulumi.Input

	ToDataflowEndpointFabricOneLakeAuthenticationPtrOutput() DataflowEndpointFabricOneLakeAuthenticationPtrOutput
	ToDataflowEndpointFabricOneLakeAuthenticationPtrOutputWithContext(context.Context) DataflowEndpointFabricOneLakeAuthenticationPtrOutput
}

type dataflowEndpointFabricOneLakeAuthenticationPtrType DataflowEndpointFabricOneLakeAuthenticationArgs

func DataflowEndpointFabricOneLakeAuthenticationPtr(v *DataflowEndpointFabricOneLakeAuthenticationArgs) DataflowEndpointFabricOneLakeAuthenticationPtrInput {
	return (*dataflowEndpointFabricOneLakeAuthenticationPtrType)(v)
}

func (*dataflowEndpointFabricOneLakeAuthenticationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataflowEndpointFabricOneLakeAuthentication)(nil)).Elem()
}

func (i *dataflowEndpointFabricOneLakeAuthenticationPtrType) ToDataflowEndpointFabricOneLakeAuthenticationPtrOutput() DataflowEndpointFabricOneLakeAuthenticationPtrOutput {
	return i.ToDataflowEndpointFabricOneLakeAuthenticationPtrOutputWithContext(context.Background())
}

func (i *dataflowEndpointFabricOneLakeAuthenticationPtrType) ToDataflowEndpointFabricOneLakeAuthenticationPtrOutputWithContext(ctx context.Context) DataflowEndpointFabricOneLakeAuthenticationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataflowEndpointFabricOneLakeAuthenticationPtrOutput)
}

// Microsoft Fabric endpoint. Authentication properties. NOTE - Only one method is supported for one entry
type DataflowEndpointFabricOneLakeAuthenticationOutput struct{ *pulumi.OutputState }

func (DataflowEndpointFabricOneLakeAuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataflowEndpointFabricOneLakeAuthentication)(nil)).Elem()
}

func (o DataflowEndpointFabricOneLakeAuthenticationOutput) ToDataflowEndpointFabricOneLakeAuthenticationOutput() DataflowEndpointFabricOneLakeAuthenticationOutput {
	return o
}

func (o DataflowEndpointFabricOneLakeAuthenticationOutput) ToDataflowEndpointFabricOneLakeAuthenticationOutputWithContext(ctx context.Context) DataflowEndpointFabricOneLakeAuthenticationOutput {
	return o
}

func (o DataflowEndpointFabricOneLakeAuthenticationOutput) ToDataflowEndpointFabricOneLakeAuthenticationPtrOutput() DataflowEndpointFabricOneLakeAuthenticationPtrOutput {
	return o.ToDataflowEndpointFabricOneLakeAuthenticationPtrOutputWithContext(context.Background())
}

func (o DataflowEndpointFabricOneLakeAuthenticationOutput) ToDataflowEndpointFabricOneLakeAuthenticationPtrOutputWithContext(ctx context.Context) DataflowEndpointFabricOneLakeAuthenticationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataflowEndpointFabricOneLakeAuthentication) *DataflowEndpointFabricOneLakeAuthentication {
		return &v
	}).(DataflowEndpointFabricOneLakeAuthenticationPtrOutput)
}

// Mode of Authentication.
func (o DataflowEndpointFabricOneLakeAuthenticationOutput) Method() pulumi.AnyOutput {
	return o.ApplyT(func(v DataflowEndpointFabricOneLakeAuthentication) interface{} { return v.Method }).(pulumi.AnyOutput)
}

// System-assigned managed identity authentication.
func (o DataflowEndpointFabricOneLakeAuthenticationOutput) SystemAssignedManagedIdentitySettings() DataflowEndpointAuthenticationSystemAssignedManagedIdentityPtrOutput {
	return o.ApplyT(func(v DataflowEndpointFabricOneLakeAuthentication) *DataflowEndpointAuthenticationSystemAssignedManagedIdentity {
		return v.SystemAssignedManagedIdentitySettings
	}).(DataflowEndpointAuthenticationSystemAssignedManagedIdentityPtrOutput)
}

// User-assigned managed identity authentication.
func (o DataflowEndpointFabricOneLakeAuthenticationOutput) UserAssignedManagedIdentitySettings() DataflowEndpointAuthenticationUserAssignedManagedIdentityPtrOutput {
	return o.ApplyT(func(v DataflowEndpointFabricOneLakeAuthentication) *DataflowEndpointAuthenticationUserAssignedManagedIdentity {
		return v.UserAssignedManagedIdentitySettings
	}).(DataflowEndpointAuthenticationUserAssignedManagedIdentityPtrOutput)
}

type DataflowEndpointFabricOneLakeAuthenticationPtrOutput struct{ *pulumi.OutputState }

func (DataflowEndpointFabricOneLakeAuthenticationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataflowEndpointFabricOneLakeAuthentication)(nil)).Elem()
}

func (o DataflowEndpointFabricOneLakeAuthenticationPtrOutput) ToDataflowEndpointFabricOneLakeAuthenticationPtrOutput() DataflowEndpointFabricOneLakeAuthenticationPtrOutput {
	return o
}

func (o DataflowEndpointFabricOneLakeAuthenticationPtrOutput) ToDataflowEndpointFabricOneLakeAuthenticationPtrOutputWithContext(ctx context.Context) DataflowEndpointFabricOneLakeAuthenticationPtrOutput {
	return o
}

func (o DataflowEndpointFabricOneLakeAuthenticationPtrOutput) Elem() DataflowEndpointFabricOneLakeAuthenticationOutput {
	return o.ApplyT(func(v *DataflowEndpointFabricOneLakeAuthentication) DataflowEndpointFabricOneLakeAuthentication {
		if v != nil {
			return *v
		}
		var ret DataflowEndpointFabricOneLakeAuthentication
		return ret
	}).(DataflowEndpointFabricOneLakeAuthenticationOutput)
}

// Mode of Authentication.
func (o DataflowEndpointFabricOneLakeAuthenticationPtrOutput) Method() pulumi.AnyOutput {
	return o.ApplyT(func(v *DataflowEndpointFabricOneLakeAuthentication) interface{} {
		if v == nil {
			return nil
		}
		return v.Method
	}).(pulumi.AnyOutput)
}

// System-assigned managed identity authentication.
func (o DataflowEndpointFabricOneLakeAuthenticationPtrOutput) SystemAssignedManagedIdentitySettings() DataflowEndpointAuthenticationSystemAssignedManagedIdentityPtrOutput {
	return o.ApplyT(func(v *DataflowEndpointFabricOneLakeAuthentication) *DataflowEndpointAuthenticationSystemAssignedManagedIdentity {
		if v == nil {
			return nil
		}
		return v.SystemAssignedManagedIdentitySettings
	}).(DataflowEndpointAuthenticationSystemAssignedManagedIdentityPtrOutput)
}

// User-assigned managed identity authentication.
func (o DataflowEndpointFabricOneLakeAuthenticationPtrOutput) UserAssignedManagedIdentitySettings() DataflowEndpointAuthenticationUserAssignedManagedIdentityPtrOutput {
	return o.ApplyT(func(v *DataflowEndpointFabricOneLakeAuthentication) *DataflowEndpointAuthenticationUserAssignedManagedIdentity {
		if v == nil {
			return nil
		}
		return v.UserAssignedManagedIdentitySettings
	}).(DataflowEndpointAuthenticationUserAssignedManagedIdentityPtrOutput)
}

// Microsoft Fabric endpoint. Authentication properties. NOTE - Only one method is supported for one entry
type DataflowEndpointFabricOneLakeAuthenticationResponse struct {
	// Mode of Authentication.
	Method interface{} `pulumi:"method"`
	// System-assigned managed identity authentication.
	SystemAssignedManagedIdentitySettings *DataflowEndpointAuthenticationSystemAssignedManagedIdentityResponse `pulumi:"systemAssignedManagedIdentitySettings"`
	// User-assigned managed identity authentication.
	UserAssignedManagedIdentitySettings *DataflowEndpointAuthenticationUserAssignedManagedIdentityResponse `pulumi:"userAssignedManagedIdentitySettings"`
}

// Microsoft Fabric endpoint. Authentication properties. NOTE - Only one method is supported for one entry
type DataflowEndpointFabricOneLakeAuthenticationResponseOutput struct{ *pulumi.OutputState }

func (DataflowEndpointFabricOneLakeAuthenticationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataflowEndpointFabricOneLakeAuthenticationResponse)(nil)).Elem()
}

func (o DataflowEndpointFabricOneLakeAuthenticationResponseOutput) ToDataflowEndpointFabricOneLakeAuthenticationResponseOutput() DataflowEndpointFabricOneLakeAuthenticationResponseOutput {
	return o
}

func (o DataflowEndpointFabricOneLakeAuthenticationResponseOutput) ToDataflowEndpointFabricOneLakeAuthenticationResponseOutputWithContext(ctx context.Context) DataflowEndpointFabricOneLakeAuthenticationResponseOutput {
	return o
}

// Mode of Authentication.
func (o DataflowEndpointFabricOneLakeAuthenticationResponseOutput) Method() pulumi.AnyOutput {
	return o.ApplyT(func(v DataflowEndpointFabricOneLakeAuthenticationResponse) interface{} { return v.Method }).(pulumi.AnyOutput)
}

// System-assigned managed identity authentication.
func (o DataflowEndpointFabricOneLakeAuthenticationResponseOutput) SystemAssignedManagedIdentitySettings() DataflowEndpointAuthenticationSystemAssignedManagedIdentityResponsePtrOutput {
	return o.ApplyT(func(v DataflowEndpointFabricOneLakeAuthenticationResponse) *DataflowEndpointAuthenticationSystemAssignedManagedIdentityResponse {
		return v.SystemAssignedManagedIdentitySettings
	}).(DataflowEndpointAuthenticationSystemAssignedManagedIdentityResponsePtrOutput)
}

// User-assigned managed identity authentication.
func (o DataflowEndpointFabricOneLakeAuthenticationResponseOutput) UserAssignedManagedIdentitySettings() DataflowEndpointAuthenticationUserAssignedManagedIdentityResponsePtrOutput {
	return o.ApplyT(func(v DataflowEndpointFabricOneLakeAuthenticationResponse) *DataflowEndpointAuthenticationUserAssignedManagedIdentityResponse {
		return v.UserAssignedManagedIdentitySettings
	}).(DataflowEndpointAuthenticationUserAssignedManagedIdentityResponsePtrOutput)
}

type DataflowEndpointFabricOneLakeAuthenticationResponsePtrOutput struct{ *pulumi.OutputState }

func (DataflowEndpointFabricOneLakeAuthenticationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataflowEndpointFabricOneLakeAuthenticationResponse)(nil)).Elem()
}

func (o DataflowEndpointFabricOneLakeAuthenticationResponsePtrOutput) ToDataflowEndpointFabricOneLakeAuthenticationResponsePtrOutput() DataflowEndpointFabricOneLakeAuthenticationResponsePtrOutput {
	return o
}

func (o DataflowEndpointFabricOneLakeAuthenticationResponsePtrOutput) ToDataflowEndpointFabricOneLakeAuthenticationResponsePtrOutputWithContext(ctx context.Context) DataflowEndpointFabricOneLakeAuthenticationResponsePtrOutput {
	return o
}

func (o DataflowEndpointFabricOneLakeAuthenticationResponsePtrOutput) Elem() DataflowEndpointFabricOneLakeAuthenticationResponseOutput {
	return o.ApplyT(func(v *DataflowEndpointFabricOneLakeAuthenticationResponse) DataflowEndpointFabricOneLakeAuthenticationResponse {
		if v != nil {
			return *v
		}
		var ret DataflowEndpointFabricOneLakeAuthenticationResponse
		return ret
	}).(DataflowEndpointFabricOneLakeAuthenticationResponseOutput)
}

// Mode of Authentication.
func (o DataflowEndpointFabricOneLakeAuthenticationResponsePtrOutput) Method() pulumi.AnyOutput {
	return o.ApplyT(func(v *DataflowEndpointFabricOneLakeAuthenticationResponse) interface{} {
		if v == nil {
			return nil
		}
		return v.Method
	}).(pulumi.AnyOutput)
}

// System-assigned managed identity authentication.
func (o DataflowEndpointFabricOneLakeAuthenticationResponsePtrOutput) SystemAssignedManagedIdentitySettings() DataflowEndpointAuthenticationSystemAssignedManagedIdentityResponsePtrOutput {
	return o.ApplyT(func(v *DataflowEndpointFabricOneLakeAuthenticationResponse) *DataflowEndpointAuthenticationSystemAssignedManagedIdentityResponse {
		if v == nil {
			return nil
		}
		return v.SystemAssignedManagedIdentitySettings
	}).(DataflowEndpointAuthenticationSystemAssignedManagedIdentityResponsePtrOutput)
}

// User-assigned managed identity authentication.
func (o DataflowEndpointFabricOneLakeAuthenticationResponsePtrOutput) UserAssignedManagedIdentitySettings() DataflowEndpointAuthenticationUserAssignedManagedIdentityResponsePtrOutput {
	return o.ApplyT(func(v *DataflowEndpointFabricOneLakeAuthenticationResponse) *DataflowEndpointAuthenticationUserAssignedManagedIdentityResponse {
		if v == nil {
			return nil
		}
		return v.UserAssignedManagedIdentitySettings
	}).(DataflowEndpointAuthenticationUserAssignedManagedIdentityResponsePtrOutput)
}

// Microsoft Fabric endpoint Names properties
type DataflowEndpointFabricOneLakeNames struct {
	// Lakehouse name.
	LakehouseName string `pulumi:"lakehouseName"`
	// Workspace name.
	WorkspaceName string `pulumi:"workspaceName"`
}

// DataflowEndpointFabricOneLakeNamesInput is an input type that accepts DataflowEndpointFabricOneLakeNamesArgs and DataflowEndpointFabricOneLakeNamesOutput values.
// You can construct a concrete instance of `DataflowEndpointFabricOneLakeNamesInput` via:
//
//	DataflowEndpointFabricOneLakeNamesArgs{...}
type DataflowEndpointFabricOneLakeNamesInput interface {
	pulumi.Input

	ToDataflowEndpointFabricOneLakeNamesOutput() DataflowEndpointFabricOneLakeNamesOutput
	ToDataflowEndpointFabricOneLakeNamesOutputWithContext(context.Context) DataflowEndpointFabricOneLakeNamesOutput
}

// Microsoft Fabric endpoint Names properties
type DataflowEndpointFabricOneLakeNamesArgs struct {
	// Lakehouse name.
	LakehouseName pulumi.StringInput `pulumi:"lakehouseName"`
	// Workspace name.
	WorkspaceName pulumi.StringInput `pulumi:"workspaceName"`
}

func (DataflowEndpointFabricOneLakeNamesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataflowEndpointFabricOneLakeNames)(nil)).Elem()
}

func (i DataflowEndpointFabricOneLakeNamesArgs) ToDataflowEndpointFabricOneLakeNamesOutput() DataflowEndpointFabricOneLakeNamesOutput {
	return i.ToDataflowEndpointFabricOneLakeNamesOutputWithContext(context.Background())
}

func (i DataflowEndpointFabricOneLakeNamesArgs) ToDataflowEndpointFabricOneLakeNamesOutputWithContext(ctx context.Context) DataflowEndpointFabricOneLakeNamesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataflowEndpointFabricOneLakeNamesOutput)
}

func (i DataflowEndpointFabricOneLakeNamesArgs) ToDataflowEndpointFabricOneLakeNamesPtrOutput() DataflowEndpointFabricOneLakeNamesPtrOutput {
	return i.ToDataflowEndpointFabricOneLakeNamesPtrOutputWithContext(context.Background())
}

func (i DataflowEndpointFabricOneLakeNamesArgs) ToDataflowEndpointFabricOneLakeNamesPtrOutputWithContext(ctx context.Context) DataflowEndpointFabricOneLakeNamesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataflowEndpointFabricOneLakeNamesOutput).ToDataflowEndpointFabricOneLakeNamesPtrOutputWithContext(ctx)
}

// DataflowEndpointFabricOneLakeNamesPtrInput is an input type that accepts DataflowEndpointFabricOneLakeNamesArgs, DataflowEndpointFabricOneLakeNamesPtr and DataflowEndpointFabricOneLakeNamesPtrOutput values.
// You can construct a concrete instance of `DataflowEndpointFabricOneLakeNamesPtrInput` via:
//
//	        DataflowEndpointFabricOneLakeNamesArgs{...}
//
//	or:
//
//	        nil
type DataflowEndpointFabricOneLakeNamesPtrInput interface {
	pulumi.Input

	ToDataflowEndpointFabricOneLakeNamesPtrOutput() DataflowEndpointFabricOneLakeNamesPtrOutput
	ToDataflowEndpointFabricOneLakeNamesPtrOutputWithContext(context.Context) DataflowEndpointFabricOneLakeNamesPtrOutput
}

type dataflowEndpointFabricOneLakeNamesPtrType DataflowEndpointFabricOneLakeNamesArgs

func DataflowEndpointFabricOneLakeNamesPtr(v *DataflowEndpointFabricOneLakeNamesArgs) DataflowEndpointFabricOneLakeNamesPtrInput {
	return (*dataflowEndpointFabricOneLakeNamesPtrType)(v)
}

func (*dataflowEndpointFabricOneLakeNamesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataflowEndpointFabricOneLakeNames)(nil)).Elem()
}

func (i *dataflowEndpointFabricOneLakeNamesPtrType) ToDataflowEndpointFabricOneLakeNamesPtrOutput() DataflowEndpointFabricOneLakeNamesPtrOutput {
	return i.ToDataflowEndpointFabricOneLakeNamesPtrOutputWithContext(context.Background())
}

func (i *dataflowEndpointFabricOneLakeNamesPtrType) ToDataflowEndpointFabricOneLakeNamesPtrOutputWithContext(ctx context.Context) DataflowEndpointFabricOneLakeNamesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataflowEndpointFabricOneLakeNamesPtrOutput)
}

// Microsoft Fabric endpoint Names properties
type DataflowEndpointFabricOneLakeNamesOutput struct{ *pulumi.OutputState }

func (DataflowEndpointFabricOneLakeNamesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataflowEndpointFabricOneLakeNames)(nil)).Elem()
}

func (o DataflowEndpointFabricOneLakeNamesOutput) ToDataflowEndpointFabricOneLakeNamesOutput() DataflowEndpointFabricOneLakeNamesOutput {
	return o
}

func (o DataflowEndpointFabricOneLakeNamesOutput) ToDataflowEndpointFabricOneLakeNamesOutputWithContext(ctx context.Context) DataflowEndpointFabricOneLakeNamesOutput {
	return o
}

func (o DataflowEndpointFabricOneLakeNamesOutput) ToDataflowEndpointFabricOneLakeNamesPtrOutput() DataflowEndpointFabricOneLakeNamesPtrOutput {
	return o.ToDataflowEndpointFabricOneLakeNamesPtrOutputWithContext(context.Background())
}

func (o DataflowEndpointFabricOneLakeNamesOutput) ToDataflowEndpointFabricOneLakeNamesPtrOutputWithContext(ctx context.Context) DataflowEndpointFabricOneLakeNamesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataflowEndpointFabricOneLakeNames) *DataflowEndpointFabricOneLakeNames {
		return &v
	}).(DataflowEndpointFabricOneLakeNamesPtrOutput)
}

// Lakehouse name.
func (o DataflowEndpointFabricOneLakeNamesOutput) LakehouseName() pulumi.StringOutput {
	return o.ApplyT(func(v DataflowEndpointFabricOneLakeNames) string { return v.LakehouseName }).(pulumi.StringOutput)
}

// Workspace name.
func (o DataflowEndpointFabricOneLakeNamesOutput) WorkspaceName() pulumi.StringOutput {
	return o.ApplyT(func(v DataflowEndpointFabricOneLakeNames) string { return v.WorkspaceName }).(pulumi.StringOutput)
}

type DataflowEndpointFabricOneLakeNamesPtrOutput struct{ *pulumi.OutputState }

func (DataflowEndpointFabricOneLakeNamesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataflowEndpointFabricOneLakeNames)(nil)).Elem()
}

func (o DataflowEndpointFabricOneLakeNamesPtrOutput) ToDataflowEndpointFabricOneLakeNamesPtrOutput() DataflowEndpointFabricOneLakeNamesPtrOutput {
	return o
}

func (o DataflowEndpointFabricOneLakeNamesPtrOutput) ToDataflowEndpointFabricOneLakeNamesPtrOutputWithContext(ctx context.Context) DataflowEndpointFabricOneLakeNamesPtrOutput {
	return o
}

func (o DataflowEndpointFabricOneLakeNamesPtrOutput) Elem() DataflowEndpointFabricOneLakeNamesOutput {
	return o.ApplyT(func(v *DataflowEndpointFabricOneLakeNames) DataflowEndpointFabricOneLakeNames {
		if v != nil {
			return *v
		}
		var ret DataflowEndpointFabricOneLakeNames
		return ret
	}).(DataflowEndpointFabricOneLakeNamesOutput)
}

// Lakehouse name.
func (o DataflowEndpointFabricOneLakeNamesPtrOutput) LakehouseName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataflowEndpointFabricOneLakeNames) *string {
		if v == nil {
			return nil
		}
		return &v.LakehouseName
	}).(pulumi.StringPtrOutput)
}

// Workspace name.
func (o DataflowEndpointFabricOneLakeNamesPtrOutput) WorkspaceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataflowEndpointFabricOneLakeNames) *string {
		if v == nil {
			return nil
		}
		return &v.WorkspaceName
	}).(pulumi.StringPtrOutput)
}

// Microsoft Fabric endpoint Names properties
type DataflowEndpointFabricOneLakeNamesResponse struct {
	// Lakehouse name.
	LakehouseName string `pulumi:"lakehouseName"`
	// Workspace name.
	WorkspaceName string `pulumi:"workspaceName"`
}

// Microsoft Fabric endpoint Names properties
type DataflowEndpointFabricOneLakeNamesResponseOutput struct{ *pulumi.OutputState }

func (DataflowEndpointFabricOneLakeNamesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataflowEndpointFabricOneLakeNamesResponse)(nil)).Elem()
}

func (o DataflowEndpointFabricOneLakeNamesResponseOutput) ToDataflowEndpointFabricOneLakeNamesResponseOutput() DataflowEndpointFabricOneLakeNamesResponseOutput {
	return o
}

func (o DataflowEndpointFabricOneLakeNamesResponseOutput) ToDataflowEndpointFabricOneLakeNamesResponseOutputWithContext(ctx context.Context) DataflowEndpointFabricOneLakeNamesResponseOutput {
	return o
}

// Lakehouse name.
func (o DataflowEndpointFabricOneLakeNamesResponseOutput) LakehouseName() pulumi.StringOutput {
	return o.ApplyT(func(v DataflowEndpointFabricOneLakeNamesResponse) string { return v.LakehouseName }).(pulumi.StringOutput)
}

// Workspace name.
func (o DataflowEndpointFabricOneLakeNamesResponseOutput) WorkspaceName() pulumi.StringOutput {
	return o.ApplyT(func(v DataflowEndpointFabricOneLakeNamesResponse) string { return v.WorkspaceName }).(pulumi.StringOutput)
}

type DataflowEndpointFabricOneLakeNamesResponsePtrOutput struct{ *pulumi.OutputState }

func (DataflowEndpointFabricOneLakeNamesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataflowEndpointFabricOneLakeNamesResponse)(nil)).Elem()
}

func (o DataflowEndpointFabricOneLakeNamesResponsePtrOutput) ToDataflowEndpointFabricOneLakeNamesResponsePtrOutput() DataflowEndpointFabricOneLakeNamesResponsePtrOutput {
	return o
}

func (o DataflowEndpointFabricOneLakeNamesResponsePtrOutput) ToDataflowEndpointFabricOneLakeNamesResponsePtrOutputWithContext(ctx context.Context) DataflowEndpointFabricOneLakeNamesResponsePtrOutput {
	return o
}

func (o DataflowEndpointFabricOneLakeNamesResponsePtrOutput) Elem() DataflowEndpointFabricOneLakeNamesResponseOutput {
	return o.ApplyT(func(v *DataflowEndpointFabricOneLakeNamesResponse) DataflowEndpointFabricOneLakeNamesResponse {
		if v != nil {
			return *v
		}
		var ret DataflowEndpointFabricOneLakeNamesResponse
		return ret
	}).(DataflowEndpointFabricOneLakeNamesResponseOutput)
}

// Lakehouse name.
func (o DataflowEndpointFabricOneLakeNamesResponsePtrOutput) LakehouseName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataflowEndpointFabricOneLakeNamesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.LakehouseName
	}).(pulumi.StringPtrOutput)
}

// Workspace name.
func (o DataflowEndpointFabricOneLakeNamesResponsePtrOutput) WorkspaceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataflowEndpointFabricOneLakeNamesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.WorkspaceName
	}).(pulumi.StringPtrOutput)
}

// Microsoft Fabric endpoint properties
type DataflowEndpointFabricOneLakeResponse struct {
	// Authentication configuration. NOTE - only one authentication property is allowed per entry.
	Authentication DataflowEndpointFabricOneLakeAuthenticationResponse `pulumi:"authentication"`
	// Batching configuration.
	Batching *BatchingConfigurationResponse `pulumi:"batching"`
	// Host of the Microsoft Fabric in the form of https://<host>.fabric.microsoft.com.
	Host string `pulumi:"host"`
	// Names of the workspace and lakehouse.
	Names DataflowEndpointFabricOneLakeNamesResponse `pulumi:"names"`
	// Type of location of the data in the workspace. Can be either tables or files.
	OneLakePathType string `pulumi:"oneLakePathType"`
}

// Defaults sets the appropriate defaults for DataflowEndpointFabricOneLakeResponse
func (val *DataflowEndpointFabricOneLakeResponse) Defaults() *DataflowEndpointFabricOneLakeResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.Batching = tmp.Batching.Defaults()

	return &tmp
}

// Microsoft Fabric endpoint properties
type DataflowEndpointFabricOneLakeResponseOutput struct{ *pulumi.OutputState }

func (DataflowEndpointFabricOneLakeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataflowEndpointFabricOneLakeResponse)(nil)).Elem()
}

func (o DataflowEndpointFabricOneLakeResponseOutput) ToDataflowEndpointFabricOneLakeResponseOutput() DataflowEndpointFabricOneLakeResponseOutput {
	return o
}

func (o DataflowEndpointFabricOneLakeResponseOutput) ToDataflowEndpointFabricOneLakeResponseOutputWithContext(ctx context.Context) DataflowEndpointFabricOneLakeResponseOutput {
	return o
}

// Authentication configuration. NOTE - only one authentication property is allowed per entry.
func (o DataflowEndpointFabricOneLakeResponseOutput) Authentication() DataflowEndpointFabricOneLakeAuthenticationResponseOutput {
	return o.ApplyT(func(v DataflowEndpointFabricOneLakeResponse) DataflowEndpointFabricOneLakeAuthenticationResponse {
		return v.Authentication
	}).(DataflowEndpointFabricOneLakeAuthenticationResponseOutput)
}

// Batching configuration.
func (o DataflowEndpointFabricOneLakeResponseOutput) Batching() BatchingConfigurationResponsePtrOutput {
	return o.ApplyT(func(v DataflowEndpointFabricOneLakeResponse) *BatchingConfigurationResponse { return v.Batching }).(BatchingConfigurationResponsePtrOutput)
}

// Host of the Microsoft Fabric in the form of https://<host>.fabric.microsoft.com.
func (o DataflowEndpointFabricOneLakeResponseOutput) Host() pulumi.StringOutput {
	return o.ApplyT(func(v DataflowEndpointFabricOneLakeResponse) string { return v.Host }).(pulumi.StringOutput)
}

// Names of the workspace and lakehouse.
func (o DataflowEndpointFabricOneLakeResponseOutput) Names() DataflowEndpointFabricOneLakeNamesResponseOutput {
	return o.ApplyT(func(v DataflowEndpointFabricOneLakeResponse) DataflowEndpointFabricOneLakeNamesResponse {
		return v.Names
	}).(DataflowEndpointFabricOneLakeNamesResponseOutput)
}

// Type of location of the data in the workspace. Can be either tables or files.
func (o DataflowEndpointFabricOneLakeResponseOutput) OneLakePathType() pulumi.StringOutput {
	return o.ApplyT(func(v DataflowEndpointFabricOneLakeResponse) string { return v.OneLakePathType }).(pulumi.StringOutput)
}

type DataflowEndpointFabricOneLakeResponsePtrOutput struct{ *pulumi.OutputState }

func (DataflowEndpointFabricOneLakeResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataflowEndpointFabricOneLakeResponse)(nil)).Elem()
}

func (o DataflowEndpointFabricOneLakeResponsePtrOutput) ToDataflowEndpointFabricOneLakeResponsePtrOutput() DataflowEndpointFabricOneLakeResponsePtrOutput {
	return o
}

func (o DataflowEndpointFabricOneLakeResponsePtrOutput) ToDataflowEndpointFabricOneLakeResponsePtrOutputWithContext(ctx context.Context) DataflowEndpointFabricOneLakeResponsePtrOutput {
	return o
}

func (o DataflowEndpointFabricOneLakeResponsePtrOutput) Elem() DataflowEndpointFabricOneLakeResponseOutput {
	return o.ApplyT(func(v *DataflowEndpointFabricOneLakeResponse) DataflowEndpointFabricOneLakeResponse {
		if v != nil {
			return *v
		}
		var ret DataflowEndpointFabricOneLakeResponse
		return ret
	}).(DataflowEndpointFabricOneLakeResponseOutput)
}

// Authentication configuration. NOTE - only one authentication property is allowed per entry.
func (o DataflowEndpointFabricOneLakeResponsePtrOutput) Authentication() DataflowEndpointFabricOneLakeAuthenticationResponsePtrOutput {
	return o.ApplyT(func(v *DataflowEndpointFabricOneLakeResponse) *DataflowEndpointFabricOneLakeAuthenticationResponse {
		if v == nil {
			return nil
		}
		return &v.Authentication
	}).(DataflowEndpointFabricOneLakeAuthenticationResponsePtrOutput)
}

// Batching configuration.
func (o DataflowEndpointFabricOneLakeResponsePtrOutput) Batching() BatchingConfigurationResponsePtrOutput {
	return o.ApplyT(func(v *DataflowEndpointFabricOneLakeResponse) *BatchingConfigurationResponse {
		if v == nil {
			return nil
		}
		return v.Batching
	}).(BatchingConfigurationResponsePtrOutput)
}

// Host of the Microsoft Fabric in the form of https://<host>.fabric.microsoft.com.
func (o DataflowEndpointFabricOneLakeResponsePtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataflowEndpointFabricOneLakeResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Host
	}).(pulumi.StringPtrOutput)
}

// Names of the workspace and lakehouse.
func (o DataflowEndpointFabricOneLakeResponsePtrOutput) Names() DataflowEndpointFabricOneLakeNamesResponsePtrOutput {
	return o.ApplyT(func(v *DataflowEndpointFabricOneLakeResponse) *DataflowEndpointFabricOneLakeNamesResponse {
		if v == nil {
			return nil
		}
		return &v.Names
	}).(DataflowEndpointFabricOneLakeNamesResponsePtrOutput)
}

// Type of location of the data in the workspace. Can be either tables or files.
func (o DataflowEndpointFabricOneLakeResponsePtrOutput) OneLakePathType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataflowEndpointFabricOneLakeResponse) *string {
		if v == nil {
			return nil
		}
		return &v.OneLakePathType
	}).(pulumi.StringPtrOutput)
}

// Kafka endpoint properties
type DataflowEndpointKafka struct {
	// Authentication configuration. NOTE - only authentication property is allowed per entry.
	Authentication DataflowEndpointKafkaAuthentication `pulumi:"authentication"`
	// Batching configuration.
	Batching *DataflowEndpointKafkaBatching `pulumi:"batching"`
	// Cloud event mapping config.
	CloudEventAttributes *string `pulumi:"cloudEventAttributes"`
	// Compression. Can be none, gzip, lz4, or snappy. No effect if the endpoint is used as a source.
	Compression *string `pulumi:"compression"`
	// Consumer group ID.
	ConsumerGroupId *string `pulumi:"consumerGroupId"`
	// Copy Broker properties. No effect if the endpoint is used as a source or if the dataflow doesn't have an Broker source.
	CopyMqttProperties *string `pulumi:"copyMqttProperties"`
	// Kafka endpoint host.
	Host string `pulumi:"host"`
	// Kafka acks. Can be all, one, or zero. No effect if the endpoint is used as a source.
	KafkaAcks *string `pulumi:"kafkaAcks"`
	// Partition handling strategy. Can be default or static. No effect if the endpoint is used as a source.
	PartitionStrategy *string `pulumi:"partitionStrategy"`
	// TLS configuration.
	Tls *TlsProperties `pulumi:"tls"`
}

// Defaults sets the appropriate defaults for DataflowEndpointKafka
func (val *DataflowEndpointKafka) Defaults() *DataflowEndpointKafka {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.Batching = tmp.Batching.Defaults()

	if tmp.Compression == nil {
		compression_ := "None"
		tmp.Compression = &compression_
	}
	if tmp.CopyMqttProperties == nil {
		copyMqttProperties_ := "Enabled"
		tmp.CopyMqttProperties = &copyMqttProperties_
	}
	if tmp.KafkaAcks == nil {
		kafkaAcks_ := "All"
		tmp.KafkaAcks = &kafkaAcks_
	}
	if tmp.PartitionStrategy == nil {
		partitionStrategy_ := "Default"
		tmp.PartitionStrategy = &partitionStrategy_
	}
	tmp.Tls = tmp.Tls.Defaults()

	return &tmp
}

// DataflowEndpointKafkaInput is an input type that accepts DataflowEndpointKafkaArgs and DataflowEndpointKafkaOutput values.
// You can construct a concrete instance of `DataflowEndpointKafkaInput` via:
//
//	DataflowEndpointKafkaArgs{...}
type DataflowEndpointKafkaInput interface {
	pulumi.Input

	ToDataflowEndpointKafkaOutput() DataflowEndpointKafkaOutput
	ToDataflowEndpointKafkaOutputWithContext(context.Context) DataflowEndpointKafkaOutput
}

// Kafka endpoint properties
type DataflowEndpointKafkaArgs struct {
	// Authentication configuration. NOTE - only authentication property is allowed per entry.
	Authentication DataflowEndpointKafkaAuthenticationInput `pulumi:"authentication"`
	// Batching configuration.
	Batching DataflowEndpointKafkaBatchingPtrInput `pulumi:"batching"`
	// Cloud event mapping config.
	CloudEventAttributes pulumi.StringPtrInput `pulumi:"cloudEventAttributes"`
	// Compression. Can be none, gzip, lz4, or snappy. No effect if the endpoint is used as a source.
	Compression pulumi.StringPtrInput `pulumi:"compression"`
	// Consumer group ID.
	ConsumerGroupId pulumi.StringPtrInput `pulumi:"consumerGroupId"`
	// Copy Broker properties. No effect if the endpoint is used as a source or if the dataflow doesn't have an Broker source.
	CopyMqttProperties pulumi.StringPtrInput `pulumi:"copyMqttProperties"`
	// Kafka endpoint host.
	Host pulumi.StringInput `pulumi:"host"`
	// Kafka acks. Can be all, one, or zero. No effect if the endpoint is used as a source.
	KafkaAcks pulumi.StringPtrInput `pulumi:"kafkaAcks"`
	// Partition handling strategy. Can be default or static. No effect if the endpoint is used as a source.
	PartitionStrategy pulumi.StringPtrInput `pulumi:"partitionStrategy"`
	// TLS configuration.
	Tls TlsPropertiesPtrInput `pulumi:"tls"`
}

// Defaults sets the appropriate defaults for DataflowEndpointKafkaArgs
func (val *DataflowEndpointKafkaArgs) Defaults() *DataflowEndpointKafkaArgs {
	if val == nil {
		return nil
	}
	tmp := *val

	if tmp.Compression == nil {
		tmp.Compression = pulumi.StringPtr("None")
	}
	if tmp.CopyMqttProperties == nil {
		tmp.CopyMqttProperties = pulumi.StringPtr("Enabled")
	}
	if tmp.KafkaAcks == nil {
		tmp.KafkaAcks = pulumi.StringPtr("All")
	}
	if tmp.PartitionStrategy == nil {
		tmp.PartitionStrategy = pulumi.StringPtr("Default")
	}

	return &tmp
}
func (DataflowEndpointKafkaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataflowEndpointKafka)(nil)).Elem()
}

func (i DataflowEndpointKafkaArgs) ToDataflowEndpointKafkaOutput() DataflowEndpointKafkaOutput {
	return i.ToDataflowEndpointKafkaOutputWithContext(context.Background())
}

func (i DataflowEndpointKafkaArgs) ToDataflowEndpointKafkaOutputWithContext(ctx context.Context) DataflowEndpointKafkaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataflowEndpointKafkaOutput)
}

func (i DataflowEndpointKafkaArgs) ToDataflowEndpointKafkaPtrOutput() DataflowEndpointKafkaPtrOutput {
	return i.ToDataflowEndpointKafkaPtrOutputWithContext(context.Background())
}

func (i DataflowEndpointKafkaArgs) ToDataflowEndpointKafkaPtrOutputWithContext(ctx context.Context) DataflowEndpointKafkaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataflowEndpointKafkaOutput).ToDataflowEndpointKafkaPtrOutputWithContext(ctx)
}

// DataflowEndpointKafkaPtrInput is an input type that accepts DataflowEndpointKafkaArgs, DataflowEndpointKafkaPtr and DataflowEndpointKafkaPtrOutput values.
// You can construct a concrete instance of `DataflowEndpointKafkaPtrInput` via:
//
//	        DataflowEndpointKafkaArgs{...}
//
//	or:
//
//	        nil
type DataflowEndpointKafkaPtrInput interface {
	pulumi.Input

	ToDataflowEndpointKafkaPtrOutput() DataflowEndpointKafkaPtrOutput
	ToDataflowEndpointKafkaPtrOutputWithContext(context.Context) DataflowEndpointKafkaPtrOutput
}

type dataflowEndpointKafkaPtrType DataflowEndpointKafkaArgs

func DataflowEndpointKafkaPtr(v *DataflowEndpointKafkaArgs) DataflowEndpointKafkaPtrInput {
	return (*dataflowEndpointKafkaPtrType)(v)
}

func (*dataflowEndpointKafkaPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataflowEndpointKafka)(nil)).Elem()
}

func (i *dataflowEndpointKafkaPtrType) ToDataflowEndpointKafkaPtrOutput() DataflowEndpointKafkaPtrOutput {
	return i.ToDataflowEndpointKafkaPtrOutputWithContext(context.Background())
}

func (i *dataflowEndpointKafkaPtrType) ToDataflowEndpointKafkaPtrOutputWithContext(ctx context.Context) DataflowEndpointKafkaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataflowEndpointKafkaPtrOutput)
}

// Kafka endpoint properties
type DataflowEndpointKafkaOutput struct{ *pulumi.OutputState }

func (DataflowEndpointKafkaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataflowEndpointKafka)(nil)).Elem()
}

func (o DataflowEndpointKafkaOutput) ToDataflowEndpointKafkaOutput() DataflowEndpointKafkaOutput {
	return o
}

func (o DataflowEndpointKafkaOutput) ToDataflowEndpointKafkaOutputWithContext(ctx context.Context) DataflowEndpointKafkaOutput {
	return o
}

func (o DataflowEndpointKafkaOutput) ToDataflowEndpointKafkaPtrOutput() DataflowEndpointKafkaPtrOutput {
	return o.ToDataflowEndpointKafkaPtrOutputWithContext(context.Background())
}

func (o DataflowEndpointKafkaOutput) ToDataflowEndpointKafkaPtrOutputWithContext(ctx context.Context) DataflowEndpointKafkaPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataflowEndpointKafka) *DataflowEndpointKafka {
		return &v
	}).(DataflowEndpointKafkaPtrOutput)
}

// Authentication configuration. NOTE - only authentication property is allowed per entry.
func (o DataflowEndpointKafkaOutput) Authentication() DataflowEndpointKafkaAuthenticationOutput {
	return o.ApplyT(func(v DataflowEndpointKafka) DataflowEndpointKafkaAuthentication { return v.Authentication }).(DataflowEndpointKafkaAuthenticationOutput)
}

// Batching configuration.
func (o DataflowEndpointKafkaOutput) Batching() DataflowEndpointKafkaBatchingPtrOutput {
	return o.ApplyT(func(v DataflowEndpointKafka) *DataflowEndpointKafkaBatching { return v.Batching }).(DataflowEndpointKafkaBatchingPtrOutput)
}

// Cloud event mapping config.
func (o DataflowEndpointKafkaOutput) CloudEventAttributes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataflowEndpointKafka) *string { return v.CloudEventAttributes }).(pulumi.StringPtrOutput)
}

// Compression. Can be none, gzip, lz4, or snappy. No effect if the endpoint is used as a source.
func (o DataflowEndpointKafkaOutput) Compression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataflowEndpointKafka) *string { return v.Compression }).(pulumi.StringPtrOutput)
}

// Consumer group ID.
func (o DataflowEndpointKafkaOutput) ConsumerGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataflowEndpointKafka) *string { return v.ConsumerGroupId }).(pulumi.StringPtrOutput)
}

// Copy Broker properties. No effect if the endpoint is used as a source or if the dataflow doesn't have an Broker source.
func (o DataflowEndpointKafkaOutput) CopyMqttProperties() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataflowEndpointKafka) *string { return v.CopyMqttProperties }).(pulumi.StringPtrOutput)
}

// Kafka endpoint host.
func (o DataflowEndpointKafkaOutput) Host() pulumi.StringOutput {
	return o.ApplyT(func(v DataflowEndpointKafka) string { return v.Host }).(pulumi.StringOutput)
}

// Kafka acks. Can be all, one, or zero. No effect if the endpoint is used as a source.
func (o DataflowEndpointKafkaOutput) KafkaAcks() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataflowEndpointKafka) *string { return v.KafkaAcks }).(pulumi.StringPtrOutput)
}

// Partition handling strategy. Can be default or static. No effect if the endpoint is used as a source.
func (o DataflowEndpointKafkaOutput) PartitionStrategy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataflowEndpointKafka) *string { return v.PartitionStrategy }).(pulumi.StringPtrOutput)
}

// TLS configuration.
func (o DataflowEndpointKafkaOutput) Tls() TlsPropertiesPtrOutput {
	return o.ApplyT(func(v DataflowEndpointKafka) *TlsProperties { return v.Tls }).(TlsPropertiesPtrOutput)
}

type DataflowEndpointKafkaPtrOutput struct{ *pulumi.OutputState }

func (DataflowEndpointKafkaPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataflowEndpointKafka)(nil)).Elem()
}

func (o DataflowEndpointKafkaPtrOutput) ToDataflowEndpointKafkaPtrOutput() DataflowEndpointKafkaPtrOutput {
	return o
}

func (o DataflowEndpointKafkaPtrOutput) ToDataflowEndpointKafkaPtrOutputWithContext(ctx context.Context) DataflowEndpointKafkaPtrOutput {
	return o
}

func (o DataflowEndpointKafkaPtrOutput) Elem() DataflowEndpointKafkaOutput {
	return o.ApplyT(func(v *DataflowEndpointKafka) DataflowEndpointKafka {
		if v != nil {
			return *v
		}
		var ret DataflowEndpointKafka
		return ret
	}).(DataflowEndpointKafkaOutput)
}

// Authentication configuration. NOTE - only authentication property is allowed per entry.
func (o DataflowEndpointKafkaPtrOutput) Authentication() DataflowEndpointKafkaAuthenticationPtrOutput {
	return o.ApplyT(func(v *DataflowEndpointKafka) *DataflowEndpointKafkaAuthentication {
		if v == nil {
			return nil
		}
		return &v.Authentication
	}).(DataflowEndpointKafkaAuthenticationPtrOutput)
}

// Batching configuration.
func (o DataflowEndpointKafkaPtrOutput) Batching() DataflowEndpointKafkaBatchingPtrOutput {
	return o.ApplyT(func(v *DataflowEndpointKafka) *DataflowEndpointKafkaBatching {
		if v == nil {
			return nil
		}
		return v.Batching
	}).(DataflowEndpointKafkaBatchingPtrOutput)
}

// Cloud event mapping config.
func (o DataflowEndpointKafkaPtrOutput) CloudEventAttributes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataflowEndpointKafka) *string {
		if v == nil {
			return nil
		}
		return v.CloudEventAttributes
	}).(pulumi.StringPtrOutput)
}

// Compression. Can be none, gzip, lz4, or snappy. No effect if the endpoint is used as a source.
func (o DataflowEndpointKafkaPtrOutput) Compression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataflowEndpointKafka) *string {
		if v == nil {
			return nil
		}
		return v.Compression
	}).(pulumi.StringPtrOutput)
}

// Consumer group ID.
func (o DataflowEndpointKafkaPtrOutput) ConsumerGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataflowEndpointKafka) *string {
		if v == nil {
			return nil
		}
		return v.ConsumerGroupId
	}).(pulumi.StringPtrOutput)
}

// Copy Broker properties. No effect if the endpoint is used as a source or if the dataflow doesn't have an Broker source.
func (o DataflowEndpointKafkaPtrOutput) CopyMqttProperties() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataflowEndpointKafka) *string {
		if v == nil {
			return nil
		}
		return v.CopyMqttProperties
	}).(pulumi.StringPtrOutput)
}

// Kafka endpoint host.
func (o DataflowEndpointKafkaPtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataflowEndpointKafka) *string {
		if v == nil {
			return nil
		}
		return &v.Host
	}).(pulumi.StringPtrOutput)
}

// Kafka acks. Can be all, one, or zero. No effect if the endpoint is used as a source.
func (o DataflowEndpointKafkaPtrOutput) KafkaAcks() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataflowEndpointKafka) *string {
		if v == nil {
			return nil
		}
		return v.KafkaAcks
	}).(pulumi.StringPtrOutput)
}

// Partition handling strategy. Can be default or static. No effect if the endpoint is used as a source.
func (o DataflowEndpointKafkaPtrOutput) PartitionStrategy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataflowEndpointKafka) *string {
		if v == nil {
			return nil
		}
		return v.PartitionStrategy
	}).(pulumi.StringPtrOutput)
}

// TLS configuration.
func (o DataflowEndpointKafkaPtrOutput) Tls() TlsPropertiesPtrOutput {
	return o.ApplyT(func(v *DataflowEndpointKafka) *TlsProperties {
		if v == nil {
			return nil
		}
		return v.Tls
	}).(TlsPropertiesPtrOutput)
}

// Kafka endpoint Authentication properties. NOTE - only authentication property is allowed per entry
type DataflowEndpointKafkaAuthentication struct {
	// Mode of Authentication.
	Method string `pulumi:"method"`
	// SASL authentication.
	SaslSettings *DataflowEndpointAuthenticationSasl `pulumi:"saslSettings"`
	// System-assigned managed identity authentication.
	SystemAssignedManagedIdentitySettings *DataflowEndpointAuthenticationSystemAssignedManagedIdentity `pulumi:"systemAssignedManagedIdentitySettings"`
	// User-assigned managed identity authentication.
	UserAssignedManagedIdentitySettings *DataflowEndpointAuthenticationUserAssignedManagedIdentity `pulumi:"userAssignedManagedIdentitySettings"`
	// X.509 certificate authentication.
	X509CertificateSettings *DataflowEndpointAuthenticationX509 `pulumi:"x509CertificateSettings"`
}

// DataflowEndpointKafkaAuthenticationInput is an input type that accepts DataflowEndpointKafkaAuthenticationArgs and DataflowEndpointKafkaAuthenticationOutput values.
// You can construct a concrete instance of `DataflowEndpointKafkaAuthenticationInput` via:
//
//	DataflowEndpointKafkaAuthenticationArgs{...}
type DataflowEndpointKafkaAuthenticationInput interface {
	pulumi.Input

	ToDataflowEndpointKafkaAuthenticationOutput() DataflowEndpointKafkaAuthenticationOutput
	ToDataflowEndpointKafkaAuthenticationOutputWithContext(context.Context) DataflowEndpointKafkaAuthenticationOutput
}

// Kafka endpoint Authentication properties. NOTE - only authentication property is allowed per entry
type DataflowEndpointKafkaAuthenticationArgs struct {
	// Mode of Authentication.
	Method pulumi.StringInput `pulumi:"method"`
	// SASL authentication.
	SaslSettings DataflowEndpointAuthenticationSaslPtrInput `pulumi:"saslSettings"`
	// System-assigned managed identity authentication.
	SystemAssignedManagedIdentitySettings DataflowEndpointAuthenticationSystemAssignedManagedIdentityPtrInput `pulumi:"systemAssignedManagedIdentitySettings"`
	// User-assigned managed identity authentication.
	UserAssignedManagedIdentitySettings DataflowEndpointAuthenticationUserAssignedManagedIdentityPtrInput `pulumi:"userAssignedManagedIdentitySettings"`
	// X.509 certificate authentication.
	X509CertificateSettings DataflowEndpointAuthenticationX509PtrInput `pulumi:"x509CertificateSettings"`
}

func (DataflowEndpointKafkaAuthenticationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataflowEndpointKafkaAuthentication)(nil)).Elem()
}

func (i DataflowEndpointKafkaAuthenticationArgs) ToDataflowEndpointKafkaAuthenticationOutput() DataflowEndpointKafkaAuthenticationOutput {
	return i.ToDataflowEndpointKafkaAuthenticationOutputWithContext(context.Background())
}

func (i DataflowEndpointKafkaAuthenticationArgs) ToDataflowEndpointKafkaAuthenticationOutputWithContext(ctx context.Context) DataflowEndpointKafkaAuthenticationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataflowEndpointKafkaAuthenticationOutput)
}

func (i DataflowEndpointKafkaAuthenticationArgs) ToDataflowEndpointKafkaAuthenticationPtrOutput() DataflowEndpointKafkaAuthenticationPtrOutput {
	return i.ToDataflowEndpointKafkaAuthenticationPtrOutputWithContext(context.Background())
}

func (i DataflowEndpointKafkaAuthenticationArgs) ToDataflowEndpointKafkaAuthenticationPtrOutputWithContext(ctx context.Context) DataflowEndpointKafkaAuthenticationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataflowEndpointKafkaAuthenticationOutput).ToDataflowEndpointKafkaAuthenticationPtrOutputWithContext(ctx)
}

// DataflowEndpointKafkaAuthenticationPtrInput is an input type that accepts DataflowEndpointKafkaAuthenticationArgs, DataflowEndpointKafkaAuthenticationPtr and DataflowEndpointKafkaAuthenticationPtrOutput values.
// You can construct a concrete instance of `DataflowEndpointKafkaAuthenticationPtrInput` via:
//
//	        DataflowEndpointKafkaAuthenticationArgs{...}
//
//	or:
//
//	        nil
type DataflowEndpointKafkaAuthenticationPtrInput interface {
	pulumi.Input

	ToDataflowEndpointKafkaAuthenticationPtrOutput() DataflowEndpointKafkaAuthenticationPtrOutput
	ToDataflowEndpointKafkaAuthenticationPtrOutputWithContext(context.Context) DataflowEndpointKafkaAuthenticationPtrOutput
}

type dataflowEndpointKafkaAuthenticationPtrType DataflowEndpointKafkaAuthenticationArgs

func DataflowEndpointKafkaAuthenticationPtr(v *DataflowEndpointKafkaAuthenticationArgs) DataflowEndpointKafkaAuthenticationPtrInput {
	return (*dataflowEndpointKafkaAuthenticationPtrType)(v)
}

func (*dataflowEndpointKafkaAuthenticationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataflowEndpointKafkaAuthentication)(nil)).Elem()
}

func (i *dataflowEndpointKafkaAuthenticationPtrType) ToDataflowEndpointKafkaAuthenticationPtrOutput() DataflowEndpointKafkaAuthenticationPtrOutput {
	return i.ToDataflowEndpointKafkaAuthenticationPtrOutputWithContext(context.Background())
}

func (i *dataflowEndpointKafkaAuthenticationPtrType) ToDataflowEndpointKafkaAuthenticationPtrOutputWithContext(ctx context.Context) DataflowEndpointKafkaAuthenticationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataflowEndpointKafkaAuthenticationPtrOutput)
}

// Kafka endpoint Authentication properties. NOTE - only authentication property is allowed per entry
type DataflowEndpointKafkaAuthenticationOutput struct{ *pulumi.OutputState }

func (DataflowEndpointKafkaAuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataflowEndpointKafkaAuthentication)(nil)).Elem()
}

func (o DataflowEndpointKafkaAuthenticationOutput) ToDataflowEndpointKafkaAuthenticationOutput() DataflowEndpointKafkaAuthenticationOutput {
	return o
}

func (o DataflowEndpointKafkaAuthenticationOutput) ToDataflowEndpointKafkaAuthenticationOutputWithContext(ctx context.Context) DataflowEndpointKafkaAuthenticationOutput {
	return o
}

func (o DataflowEndpointKafkaAuthenticationOutput) ToDataflowEndpointKafkaAuthenticationPtrOutput() DataflowEndpointKafkaAuthenticationPtrOutput {
	return o.ToDataflowEndpointKafkaAuthenticationPtrOutputWithContext(context.Background())
}

func (o DataflowEndpointKafkaAuthenticationOutput) ToDataflowEndpointKafkaAuthenticationPtrOutputWithContext(ctx context.Context) DataflowEndpointKafkaAuthenticationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataflowEndpointKafkaAuthentication) *DataflowEndpointKafkaAuthentication {
		return &v
	}).(DataflowEndpointKafkaAuthenticationPtrOutput)
}

// Mode of Authentication.
func (o DataflowEndpointKafkaAuthenticationOutput) Method() pulumi.StringOutput {
	return o.ApplyT(func(v DataflowEndpointKafkaAuthentication) string { return v.Method }).(pulumi.StringOutput)
}

// SASL authentication.
func (o DataflowEndpointKafkaAuthenticationOutput) SaslSettings() DataflowEndpointAuthenticationSaslPtrOutput {
	return o.ApplyT(func(v DataflowEndpointKafkaAuthentication) *DataflowEndpointAuthenticationSasl { return v.SaslSettings }).(DataflowEndpointAuthenticationSaslPtrOutput)
}

// System-assigned managed identity authentication.
func (o DataflowEndpointKafkaAuthenticationOutput) SystemAssignedManagedIdentitySettings() DataflowEndpointAuthenticationSystemAssignedManagedIdentityPtrOutput {
	return o.ApplyT(func(v DataflowEndpointKafkaAuthentication) *DataflowEndpointAuthenticationSystemAssignedManagedIdentity {
		return v.SystemAssignedManagedIdentitySettings
	}).(DataflowEndpointAuthenticationSystemAssignedManagedIdentityPtrOutput)
}

// User-assigned managed identity authentication.
func (o DataflowEndpointKafkaAuthenticationOutput) UserAssignedManagedIdentitySettings() DataflowEndpointAuthenticationUserAssignedManagedIdentityPtrOutput {
	return o.ApplyT(func(v DataflowEndpointKafkaAuthentication) *DataflowEndpointAuthenticationUserAssignedManagedIdentity {
		return v.UserAssignedManagedIdentitySettings
	}).(DataflowEndpointAuthenticationUserAssignedManagedIdentityPtrOutput)
}

// X.509 certificate authentication.
func (o DataflowEndpointKafkaAuthenticationOutput) X509CertificateSettings() DataflowEndpointAuthenticationX509PtrOutput {
	return o.ApplyT(func(v DataflowEndpointKafkaAuthentication) *DataflowEndpointAuthenticationX509 {
		return v.X509CertificateSettings
	}).(DataflowEndpointAuthenticationX509PtrOutput)
}

type DataflowEndpointKafkaAuthenticationPtrOutput struct{ *pulumi.OutputState }

func (DataflowEndpointKafkaAuthenticationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataflowEndpointKafkaAuthentication)(nil)).Elem()
}

func (o DataflowEndpointKafkaAuthenticationPtrOutput) ToDataflowEndpointKafkaAuthenticationPtrOutput() DataflowEndpointKafkaAuthenticationPtrOutput {
	return o
}

func (o DataflowEndpointKafkaAuthenticationPtrOutput) ToDataflowEndpointKafkaAuthenticationPtrOutputWithContext(ctx context.Context) DataflowEndpointKafkaAuthenticationPtrOutput {
	return o
}

func (o DataflowEndpointKafkaAuthenticationPtrOutput) Elem() DataflowEndpointKafkaAuthenticationOutput {
	return o.ApplyT(func(v *DataflowEndpointKafkaAuthentication) DataflowEndpointKafkaAuthentication {
		if v != nil {
			return *v
		}
		var ret DataflowEndpointKafkaAuthentication
		return ret
	}).(DataflowEndpointKafkaAuthenticationOutput)
}

// Mode of Authentication.
func (o DataflowEndpointKafkaAuthenticationPtrOutput) Method() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataflowEndpointKafkaAuthentication) *string {
		if v == nil {
			return nil
		}
		return &v.Method
	}).(pulumi.StringPtrOutput)
}

// SASL authentication.
func (o DataflowEndpointKafkaAuthenticationPtrOutput) SaslSettings() DataflowEndpointAuthenticationSaslPtrOutput {
	return o.ApplyT(func(v *DataflowEndpointKafkaAuthentication) *DataflowEndpointAuthenticationSasl {
		if v == nil {
			return nil
		}
		return v.SaslSettings
	}).(DataflowEndpointAuthenticationSaslPtrOutput)
}

// System-assigned managed identity authentication.
func (o DataflowEndpointKafkaAuthenticationPtrOutput) SystemAssignedManagedIdentitySettings() DataflowEndpointAuthenticationSystemAssignedManagedIdentityPtrOutput {
	return o.ApplyT(func(v *DataflowEndpointKafkaAuthentication) *DataflowEndpointAuthenticationSystemAssignedManagedIdentity {
		if v == nil {
			return nil
		}
		return v.SystemAssignedManagedIdentitySettings
	}).(DataflowEndpointAuthenticationSystemAssignedManagedIdentityPtrOutput)
}

// User-assigned managed identity authentication.
func (o DataflowEndpointKafkaAuthenticationPtrOutput) UserAssignedManagedIdentitySettings() DataflowEndpointAuthenticationUserAssignedManagedIdentityPtrOutput {
	return o.ApplyT(func(v *DataflowEndpointKafkaAuthentication) *DataflowEndpointAuthenticationUserAssignedManagedIdentity {
		if v == nil {
			return nil
		}
		return v.UserAssignedManagedIdentitySettings
	}).(DataflowEndpointAuthenticationUserAssignedManagedIdentityPtrOutput)
}

// X.509 certificate authentication.
func (o DataflowEndpointKafkaAuthenticationPtrOutput) X509CertificateSettings() DataflowEndpointAuthenticationX509PtrOutput {
	return o.ApplyT(func(v *DataflowEndpointKafkaAuthentication) *DataflowEndpointAuthenticationX509 {
		if v == nil {
			return nil
		}
		return v.X509CertificateSettings
	}).(DataflowEndpointAuthenticationX509PtrOutput)
}

// Kafka endpoint Authentication properties. NOTE - only authentication property is allowed per entry
type DataflowEndpointKafkaAuthenticationResponse struct {
	// Mode of Authentication.
	Method string `pulumi:"method"`
	// SASL authentication.
	SaslSettings *DataflowEndpointAuthenticationSaslResponse `pulumi:"saslSettings"`
	// System-assigned managed identity authentication.
	SystemAssignedManagedIdentitySettings *DataflowEndpointAuthenticationSystemAssignedManagedIdentityResponse `pulumi:"systemAssignedManagedIdentitySettings"`
	// User-assigned managed identity authentication.
	UserAssignedManagedIdentitySettings *DataflowEndpointAuthenticationUserAssignedManagedIdentityResponse `pulumi:"userAssignedManagedIdentitySettings"`
	// X.509 certificate authentication.
	X509CertificateSettings *DataflowEndpointAuthenticationX509Response `pulumi:"x509CertificateSettings"`
}

// Kafka endpoint Authentication properties. NOTE - only authentication property is allowed per entry
type DataflowEndpointKafkaAuthenticationResponseOutput struct{ *pulumi.OutputState }

func (DataflowEndpointKafkaAuthenticationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataflowEndpointKafkaAuthenticationResponse)(nil)).Elem()
}

func (o DataflowEndpointKafkaAuthenticationResponseOutput) ToDataflowEndpointKafkaAuthenticationResponseOutput() DataflowEndpointKafkaAuthenticationResponseOutput {
	return o
}

func (o DataflowEndpointKafkaAuthenticationResponseOutput) ToDataflowEndpointKafkaAuthenticationResponseOutputWithContext(ctx context.Context) DataflowEndpointKafkaAuthenticationResponseOutput {
	return o
}

// Mode of Authentication.
func (o DataflowEndpointKafkaAuthenticationResponseOutput) Method() pulumi.StringOutput {
	return o.ApplyT(func(v DataflowEndpointKafkaAuthenticationResponse) string { return v.Method }).(pulumi.StringOutput)
}

// SASL authentication.
func (o DataflowEndpointKafkaAuthenticationResponseOutput) SaslSettings() DataflowEndpointAuthenticationSaslResponsePtrOutput {
	return o.ApplyT(func(v DataflowEndpointKafkaAuthenticationResponse) *DataflowEndpointAuthenticationSaslResponse {
		return v.SaslSettings
	}).(DataflowEndpointAuthenticationSaslResponsePtrOutput)
}

// System-assigned managed identity authentication.
func (o DataflowEndpointKafkaAuthenticationResponseOutput) SystemAssignedManagedIdentitySettings() DataflowEndpointAuthenticationSystemAssignedManagedIdentityResponsePtrOutput {
	return o.ApplyT(func(v DataflowEndpointKafkaAuthenticationResponse) *DataflowEndpointAuthenticationSystemAssignedManagedIdentityResponse {
		return v.SystemAssignedManagedIdentitySettings
	}).(DataflowEndpointAuthenticationSystemAssignedManagedIdentityResponsePtrOutput)
}

// User-assigned managed identity authentication.
func (o DataflowEndpointKafkaAuthenticationResponseOutput) UserAssignedManagedIdentitySettings() DataflowEndpointAuthenticationUserAssignedManagedIdentityResponsePtrOutput {
	return o.ApplyT(func(v DataflowEndpointKafkaAuthenticationResponse) *DataflowEndpointAuthenticationUserAssignedManagedIdentityResponse {
		return v.UserAssignedManagedIdentitySettings
	}).(DataflowEndpointAuthenticationUserAssignedManagedIdentityResponsePtrOutput)
}

// X.509 certificate authentication.
func (o DataflowEndpointKafkaAuthenticationResponseOutput) X509CertificateSettings() DataflowEndpointAuthenticationX509ResponsePtrOutput {
	return o.ApplyT(func(v DataflowEndpointKafkaAuthenticationResponse) *DataflowEndpointAuthenticationX509Response {
		return v.X509CertificateSettings
	}).(DataflowEndpointAuthenticationX509ResponsePtrOutput)
}

type DataflowEndpointKafkaAuthenticationResponsePtrOutput struct{ *pulumi.OutputState }

func (DataflowEndpointKafkaAuthenticationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataflowEndpointKafkaAuthenticationResponse)(nil)).Elem()
}

func (o DataflowEndpointKafkaAuthenticationResponsePtrOutput) ToDataflowEndpointKafkaAuthenticationResponsePtrOutput() DataflowEndpointKafkaAuthenticationResponsePtrOutput {
	return o
}

func (o DataflowEndpointKafkaAuthenticationResponsePtrOutput) ToDataflowEndpointKafkaAuthenticationResponsePtrOutputWithContext(ctx context.Context) DataflowEndpointKafkaAuthenticationResponsePtrOutput {
	return o
}

func (o DataflowEndpointKafkaAuthenticationResponsePtrOutput) Elem() DataflowEndpointKafkaAuthenticationResponseOutput {
	return o.ApplyT(func(v *DataflowEndpointKafkaAuthenticationResponse) DataflowEndpointKafkaAuthenticationResponse {
		if v != nil {
			return *v
		}
		var ret DataflowEndpointKafkaAuthenticationResponse
		return ret
	}).(DataflowEndpointKafkaAuthenticationResponseOutput)
}

// Mode of Authentication.
func (o DataflowEndpointKafkaAuthenticationResponsePtrOutput) Method() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataflowEndpointKafkaAuthenticationResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Method
	}).(pulumi.StringPtrOutput)
}

// SASL authentication.
func (o DataflowEndpointKafkaAuthenticationResponsePtrOutput) SaslSettings() DataflowEndpointAuthenticationSaslResponsePtrOutput {
	return o.ApplyT(func(v *DataflowEndpointKafkaAuthenticationResponse) *DataflowEndpointAuthenticationSaslResponse {
		if v == nil {
			return nil
		}
		return v.SaslSettings
	}).(DataflowEndpointAuthenticationSaslResponsePtrOutput)
}

// System-assigned managed identity authentication.
func (o DataflowEndpointKafkaAuthenticationResponsePtrOutput) SystemAssignedManagedIdentitySettings() DataflowEndpointAuthenticationSystemAssignedManagedIdentityResponsePtrOutput {
	return o.ApplyT(func(v *DataflowEndpointKafkaAuthenticationResponse) *DataflowEndpointAuthenticationSystemAssignedManagedIdentityResponse {
		if v == nil {
			return nil
		}
		return v.SystemAssignedManagedIdentitySettings
	}).(DataflowEndpointAuthenticationSystemAssignedManagedIdentityResponsePtrOutput)
}

// User-assigned managed identity authentication.
func (o DataflowEndpointKafkaAuthenticationResponsePtrOutput) UserAssignedManagedIdentitySettings() DataflowEndpointAuthenticationUserAssignedManagedIdentityResponsePtrOutput {
	return o.ApplyT(func(v *DataflowEndpointKafkaAuthenticationResponse) *DataflowEndpointAuthenticationUserAssignedManagedIdentityResponse {
		if v == nil {
			return nil
		}
		return v.UserAssignedManagedIdentitySettings
	}).(DataflowEndpointAuthenticationUserAssignedManagedIdentityResponsePtrOutput)
}

// X.509 certificate authentication.
func (o DataflowEndpointKafkaAuthenticationResponsePtrOutput) X509CertificateSettings() DataflowEndpointAuthenticationX509ResponsePtrOutput {
	return o.ApplyT(func(v *DataflowEndpointKafkaAuthenticationResponse) *DataflowEndpointAuthenticationX509Response {
		if v == nil {
			return nil
		}
		return v.X509CertificateSettings
	}).(DataflowEndpointAuthenticationX509ResponsePtrOutput)
}

// Kafka endpoint Batching properties
type DataflowEndpointKafkaBatching struct {
	// Batching latency in milliseconds.
	LatencyMs *int `pulumi:"latencyMs"`
	// Maximum number of bytes in a batch.
	MaxBytes *int `pulumi:"maxBytes"`
	// Maximum number of messages in a batch.
	MaxMessages *int `pulumi:"maxMessages"`
	// Mode for batching.
	Mode *string `pulumi:"mode"`
}

// Defaults sets the appropriate defaults for DataflowEndpointKafkaBatching
func (val *DataflowEndpointKafkaBatching) Defaults() *DataflowEndpointKafkaBatching {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.LatencyMs == nil {
		latencyMs_ := 5
		tmp.LatencyMs = &latencyMs_
	}
	if tmp.MaxBytes == nil {
		maxBytes_ := 1000000
		tmp.MaxBytes = &maxBytes_
	}
	if tmp.MaxMessages == nil {
		maxMessages_ := 100000
		tmp.MaxMessages = &maxMessages_
	}
	if tmp.Mode == nil {
		mode_ := "Enabled"
		tmp.Mode = &mode_
	}
	return &tmp
}

// DataflowEndpointKafkaBatchingInput is an input type that accepts DataflowEndpointKafkaBatchingArgs and DataflowEndpointKafkaBatchingOutput values.
// You can construct a concrete instance of `DataflowEndpointKafkaBatchingInput` via:
//
//	DataflowEndpointKafkaBatchingArgs{...}
type DataflowEndpointKafkaBatchingInput interface {
	pulumi.Input

	ToDataflowEndpointKafkaBatchingOutput() DataflowEndpointKafkaBatchingOutput
	ToDataflowEndpointKafkaBatchingOutputWithContext(context.Context) DataflowEndpointKafkaBatchingOutput
}

// Kafka endpoint Batching properties
type DataflowEndpointKafkaBatchingArgs struct {
	// Batching latency in milliseconds.
	LatencyMs pulumi.IntPtrInput `pulumi:"latencyMs"`
	// Maximum number of bytes in a batch.
	MaxBytes pulumi.IntPtrInput `pulumi:"maxBytes"`
	// Maximum number of messages in a batch.
	MaxMessages pulumi.IntPtrInput `pulumi:"maxMessages"`
	// Mode for batching.
	Mode pulumi.StringPtrInput `pulumi:"mode"`
}

// Defaults sets the appropriate defaults for DataflowEndpointKafkaBatchingArgs
func (val *DataflowEndpointKafkaBatchingArgs) Defaults() *DataflowEndpointKafkaBatchingArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.LatencyMs == nil {
		tmp.LatencyMs = pulumi.IntPtr(5)
	}
	if tmp.MaxBytes == nil {
		tmp.MaxBytes = pulumi.IntPtr(1000000)
	}
	if tmp.MaxMessages == nil {
		tmp.MaxMessages = pulumi.IntPtr(100000)
	}
	if tmp.Mode == nil {
		tmp.Mode = pulumi.StringPtr("Enabled")
	}
	return &tmp
}
func (DataflowEndpointKafkaBatchingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataflowEndpointKafkaBatching)(nil)).Elem()
}

func (i DataflowEndpointKafkaBatchingArgs) ToDataflowEndpointKafkaBatchingOutput() DataflowEndpointKafkaBatchingOutput {
	return i.ToDataflowEndpointKafkaBatchingOutputWithContext(context.Background())
}

func (i DataflowEndpointKafkaBatchingArgs) ToDataflowEndpointKafkaBatchingOutputWithContext(ctx context.Context) DataflowEndpointKafkaBatchingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataflowEndpointKafkaBatchingOutput)
}

func (i DataflowEndpointKafkaBatchingArgs) ToDataflowEndpointKafkaBatchingPtrOutput() DataflowEndpointKafkaBatchingPtrOutput {
	return i.ToDataflowEndpointKafkaBatchingPtrOutputWithContext(context.Background())
}

func (i DataflowEndpointKafkaBatchingArgs) ToDataflowEndpointKafkaBatchingPtrOutputWithContext(ctx context.Context) DataflowEndpointKafkaBatchingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataflowEndpointKafkaBatchingOutput).ToDataflowEndpointKafkaBatchingPtrOutputWithContext(ctx)
}

// DataflowEndpointKafkaBatchingPtrInput is an input type that accepts DataflowEndpointKafkaBatchingArgs, DataflowEndpointKafkaBatchingPtr and DataflowEndpointKafkaBatchingPtrOutput values.
// You can construct a concrete instance of `DataflowEndpointKafkaBatchingPtrInput` via:
//
//	        DataflowEndpointKafkaBatchingArgs{...}
//
//	or:
//
//	        nil
type DataflowEndpointKafkaBatchingPtrInput interface {
	pulumi.Input

	ToDataflowEndpointKafkaBatchingPtrOutput() DataflowEndpointKafkaBatchingPtrOutput
	ToDataflowEndpointKafkaBatchingPtrOutputWithContext(context.Context) DataflowEndpointKafkaBatchingPtrOutput
}

type dataflowEndpointKafkaBatchingPtrType DataflowEndpointKafkaBatchingArgs

func DataflowEndpointKafkaBatchingPtr(v *DataflowEndpointKafkaBatchingArgs) DataflowEndpointKafkaBatchingPtrInput {
	return (*dataflowEndpointKafkaBatchingPtrType)(v)
}

func (*dataflowEndpointKafkaBatchingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataflowEndpointKafkaBatching)(nil)).Elem()
}

func (i *dataflowEndpointKafkaBatchingPtrType) ToDataflowEndpointKafkaBatchingPtrOutput() DataflowEndpointKafkaBatchingPtrOutput {
	return i.ToDataflowEndpointKafkaBatchingPtrOutputWithContext(context.Background())
}

func (i *dataflowEndpointKafkaBatchingPtrType) ToDataflowEndpointKafkaBatchingPtrOutputWithContext(ctx context.Context) DataflowEndpointKafkaBatchingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataflowEndpointKafkaBatchingPtrOutput)
}

// Kafka endpoint Batching properties
type DataflowEndpointKafkaBatchingOutput struct{ *pulumi.OutputState }

func (DataflowEndpointKafkaBatchingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataflowEndpointKafkaBatching)(nil)).Elem()
}

func (o DataflowEndpointKafkaBatchingOutput) ToDataflowEndpointKafkaBatchingOutput() DataflowEndpointKafkaBatchingOutput {
	return o
}

func (o DataflowEndpointKafkaBatchingOutput) ToDataflowEndpointKafkaBatchingOutputWithContext(ctx context.Context) DataflowEndpointKafkaBatchingOutput {
	return o
}

func (o DataflowEndpointKafkaBatchingOutput) ToDataflowEndpointKafkaBatchingPtrOutput() DataflowEndpointKafkaBatchingPtrOutput {
	return o.ToDataflowEndpointKafkaBatchingPtrOutputWithContext(context.Background())
}

func (o DataflowEndpointKafkaBatchingOutput) ToDataflowEndpointKafkaBatchingPtrOutputWithContext(ctx context.Context) DataflowEndpointKafkaBatchingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataflowEndpointKafkaBatching) *DataflowEndpointKafkaBatching {
		return &v
	}).(DataflowEndpointKafkaBatchingPtrOutput)
}

// Batching latency in milliseconds.
func (o DataflowEndpointKafkaBatchingOutput) LatencyMs() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DataflowEndpointKafkaBatching) *int { return v.LatencyMs }).(pulumi.IntPtrOutput)
}

// Maximum number of bytes in a batch.
func (o DataflowEndpointKafkaBatchingOutput) MaxBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DataflowEndpointKafkaBatching) *int { return v.MaxBytes }).(pulumi.IntPtrOutput)
}

// Maximum number of messages in a batch.
func (o DataflowEndpointKafkaBatchingOutput) MaxMessages() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DataflowEndpointKafkaBatching) *int { return v.MaxMessages }).(pulumi.IntPtrOutput)
}

// Mode for batching.
func (o DataflowEndpointKafkaBatchingOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataflowEndpointKafkaBatching) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

type DataflowEndpointKafkaBatchingPtrOutput struct{ *pulumi.OutputState }

func (DataflowEndpointKafkaBatchingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataflowEndpointKafkaBatching)(nil)).Elem()
}

func (o DataflowEndpointKafkaBatchingPtrOutput) ToDataflowEndpointKafkaBatchingPtrOutput() DataflowEndpointKafkaBatchingPtrOutput {
	return o
}

func (o DataflowEndpointKafkaBatchingPtrOutput) ToDataflowEndpointKafkaBatchingPtrOutputWithContext(ctx context.Context) DataflowEndpointKafkaBatchingPtrOutput {
	return o
}

func (o DataflowEndpointKafkaBatchingPtrOutput) Elem() DataflowEndpointKafkaBatchingOutput {
	return o.ApplyT(func(v *DataflowEndpointKafkaBatching) DataflowEndpointKafkaBatching {
		if v != nil {
			return *v
		}
		var ret DataflowEndpointKafkaBatching
		return ret
	}).(DataflowEndpointKafkaBatchingOutput)
}

// Batching latency in milliseconds.
func (o DataflowEndpointKafkaBatchingPtrOutput) LatencyMs() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DataflowEndpointKafkaBatching) *int {
		if v == nil {
			return nil
		}
		return v.LatencyMs
	}).(pulumi.IntPtrOutput)
}

// Maximum number of bytes in a batch.
func (o DataflowEndpointKafkaBatchingPtrOutput) MaxBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DataflowEndpointKafkaBatching) *int {
		if v == nil {
			return nil
		}
		return v.MaxBytes
	}).(pulumi.IntPtrOutput)
}

// Maximum number of messages in a batch.
func (o DataflowEndpointKafkaBatchingPtrOutput) MaxMessages() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DataflowEndpointKafkaBatching) *int {
		if v == nil {
			return nil
		}
		return v.MaxMessages
	}).(pulumi.IntPtrOutput)
}

// Mode for batching.
func (o DataflowEndpointKafkaBatchingPtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataflowEndpointKafkaBatching) *string {
		if v == nil {
			return nil
		}
		return v.Mode
	}).(pulumi.StringPtrOutput)
}

// Kafka endpoint Batching properties
type DataflowEndpointKafkaBatchingResponse struct {
	// Batching latency in milliseconds.
	LatencyMs *int `pulumi:"latencyMs"`
	// Maximum number of bytes in a batch.
	MaxBytes *int `pulumi:"maxBytes"`
	// Maximum number of messages in a batch.
	MaxMessages *int `pulumi:"maxMessages"`
	// Mode for batching.
	Mode *string `pulumi:"mode"`
}

// Defaults sets the appropriate defaults for DataflowEndpointKafkaBatchingResponse
func (val *DataflowEndpointKafkaBatchingResponse) Defaults() *DataflowEndpointKafkaBatchingResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.LatencyMs == nil {
		latencyMs_ := 5
		tmp.LatencyMs = &latencyMs_
	}
	if tmp.MaxBytes == nil {
		maxBytes_ := 1000000
		tmp.MaxBytes = &maxBytes_
	}
	if tmp.MaxMessages == nil {
		maxMessages_ := 100000
		tmp.MaxMessages = &maxMessages_
	}
	if tmp.Mode == nil {
		mode_ := "Enabled"
		tmp.Mode = &mode_
	}
	return &tmp
}

// Kafka endpoint Batching properties
type DataflowEndpointKafkaBatchingResponseOutput struct{ *pulumi.OutputState }

func (DataflowEndpointKafkaBatchingResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataflowEndpointKafkaBatchingResponse)(nil)).Elem()
}

func (o DataflowEndpointKafkaBatchingResponseOutput) ToDataflowEndpointKafkaBatchingResponseOutput() DataflowEndpointKafkaBatchingResponseOutput {
	return o
}

func (o DataflowEndpointKafkaBatchingResponseOutput) ToDataflowEndpointKafkaBatchingResponseOutputWithContext(ctx context.Context) DataflowEndpointKafkaBatchingResponseOutput {
	return o
}

// Batching latency in milliseconds.
func (o DataflowEndpointKafkaBatchingResponseOutput) LatencyMs() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DataflowEndpointKafkaBatchingResponse) *int { return v.LatencyMs }).(pulumi.IntPtrOutput)
}

// Maximum number of bytes in a batch.
func (o DataflowEndpointKafkaBatchingResponseOutput) MaxBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DataflowEndpointKafkaBatchingResponse) *int { return v.MaxBytes }).(pulumi.IntPtrOutput)
}

// Maximum number of messages in a batch.
func (o DataflowEndpointKafkaBatchingResponseOutput) MaxMessages() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DataflowEndpointKafkaBatchingResponse) *int { return v.MaxMessages }).(pulumi.IntPtrOutput)
}

// Mode for batching.
func (o DataflowEndpointKafkaBatchingResponseOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataflowEndpointKafkaBatchingResponse) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

type DataflowEndpointKafkaBatchingResponsePtrOutput struct{ *pulumi.OutputState }

func (DataflowEndpointKafkaBatchingResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataflowEndpointKafkaBatchingResponse)(nil)).Elem()
}

func (o DataflowEndpointKafkaBatchingResponsePtrOutput) ToDataflowEndpointKafkaBatchingResponsePtrOutput() DataflowEndpointKafkaBatchingResponsePtrOutput {
	return o
}

func (o DataflowEndpointKafkaBatchingResponsePtrOutput) ToDataflowEndpointKafkaBatchingResponsePtrOutputWithContext(ctx context.Context) DataflowEndpointKafkaBatchingResponsePtrOutput {
	return o
}

func (o DataflowEndpointKafkaBatchingResponsePtrOutput) Elem() DataflowEndpointKafkaBatchingResponseOutput {
	return o.ApplyT(func(v *DataflowEndpointKafkaBatchingResponse) DataflowEndpointKafkaBatchingResponse {
		if v != nil {
			return *v
		}
		var ret DataflowEndpointKafkaBatchingResponse
		return ret
	}).(DataflowEndpointKafkaBatchingResponseOutput)
}

// Batching latency in milliseconds.
func (o DataflowEndpointKafkaBatchingResponsePtrOutput) LatencyMs() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DataflowEndpointKafkaBatchingResponse) *int {
		if v == nil {
			return nil
		}
		return v.LatencyMs
	}).(pulumi.IntPtrOutput)
}

// Maximum number of bytes in a batch.
func (o DataflowEndpointKafkaBatchingResponsePtrOutput) MaxBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DataflowEndpointKafkaBatchingResponse) *int {
		if v == nil {
			return nil
		}
		return v.MaxBytes
	}).(pulumi.IntPtrOutput)
}

// Maximum number of messages in a batch.
func (o DataflowEndpointKafkaBatchingResponsePtrOutput) MaxMessages() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DataflowEndpointKafkaBatchingResponse) *int {
		if v == nil {
			return nil
		}
		return v.MaxMessages
	}).(pulumi.IntPtrOutput)
}

// Mode for batching.
func (o DataflowEndpointKafkaBatchingResponsePtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataflowEndpointKafkaBatchingResponse) *string {
		if v == nil {
			return nil
		}
		return v.Mode
	}).(pulumi.StringPtrOutput)
}

// Kafka endpoint properties
type DataflowEndpointKafkaResponse struct {
	// Authentication configuration. NOTE - only authentication property is allowed per entry.
	Authentication DataflowEndpointKafkaAuthenticationResponse `pulumi:"authentication"`
	// Batching configuration.
	Batching *DataflowEndpointKafkaBatchingResponse `pulumi:"batching"`
	// Cloud event mapping config.
	CloudEventAttributes *string `pulumi:"cloudEventAttributes"`
	// Compression. Can be none, gzip, lz4, or snappy. No effect if the endpoint is used as a source.
	Compression *string `pulumi:"compression"`
	// Consumer group ID.
	ConsumerGroupId *string `pulumi:"consumerGroupId"`
	// Copy Broker properties. No effect if the endpoint is used as a source or if the dataflow doesn't have an Broker source.
	CopyMqttProperties *string `pulumi:"copyMqttProperties"`
	// Kafka endpoint host.
	Host string `pulumi:"host"`
	// Kafka acks. Can be all, one, or zero. No effect if the endpoint is used as a source.
	KafkaAcks *string `pulumi:"kafkaAcks"`
	// Partition handling strategy. Can be default or static. No effect if the endpoint is used as a source.
	PartitionStrategy *string `pulumi:"partitionStrategy"`
	// TLS configuration.
	Tls *TlsPropertiesResponse `pulumi:"tls"`
}

// Defaults sets the appropriate defaults for DataflowEndpointKafkaResponse
func (val *DataflowEndpointKafkaResponse) Defaults() *DataflowEndpointKafkaResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.Batching = tmp.Batching.Defaults()

	if tmp.Compression == nil {
		compression_ := "None"
		tmp.Compression = &compression_
	}
	if tmp.CopyMqttProperties == nil {
		copyMqttProperties_ := "Enabled"
		tmp.CopyMqttProperties = &copyMqttProperties_
	}
	if tmp.KafkaAcks == nil {
		kafkaAcks_ := "All"
		tmp.KafkaAcks = &kafkaAcks_
	}
	if tmp.PartitionStrategy == nil {
		partitionStrategy_ := "Default"
		tmp.PartitionStrategy = &partitionStrategy_
	}
	tmp.Tls = tmp.Tls.Defaults()

	return &tmp
}

// Kafka endpoint properties
type DataflowEndpointKafkaResponseOutput struct{ *pulumi.OutputState }

func (DataflowEndpointKafkaResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataflowEndpointKafkaResponse)(nil)).Elem()
}

func (o DataflowEndpointKafkaResponseOutput) ToDataflowEndpointKafkaResponseOutput() DataflowEndpointKafkaResponseOutput {
	return o
}

func (o DataflowEndpointKafkaResponseOutput) ToDataflowEndpointKafkaResponseOutputWithContext(ctx context.Context) DataflowEndpointKafkaResponseOutput {
	return o
}

// Authentication configuration. NOTE - only authentication property is allowed per entry.
func (o DataflowEndpointKafkaResponseOutput) Authentication() DataflowEndpointKafkaAuthenticationResponseOutput {
	return o.ApplyT(func(v DataflowEndpointKafkaResponse) DataflowEndpointKafkaAuthenticationResponse {
		return v.Authentication
	}).(DataflowEndpointKafkaAuthenticationResponseOutput)
}

// Batching configuration.
func (o DataflowEndpointKafkaResponseOutput) Batching() DataflowEndpointKafkaBatchingResponsePtrOutput {
	return o.ApplyT(func(v DataflowEndpointKafkaResponse) *DataflowEndpointKafkaBatchingResponse { return v.Batching }).(DataflowEndpointKafkaBatchingResponsePtrOutput)
}

// Cloud event mapping config.
func (o DataflowEndpointKafkaResponseOutput) CloudEventAttributes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataflowEndpointKafkaResponse) *string { return v.CloudEventAttributes }).(pulumi.StringPtrOutput)
}

// Compression. Can be none, gzip, lz4, or snappy. No effect if the endpoint is used as a source.
func (o DataflowEndpointKafkaResponseOutput) Compression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataflowEndpointKafkaResponse) *string { return v.Compression }).(pulumi.StringPtrOutput)
}

// Consumer group ID.
func (o DataflowEndpointKafkaResponseOutput) ConsumerGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataflowEndpointKafkaResponse) *string { return v.ConsumerGroupId }).(pulumi.StringPtrOutput)
}

// Copy Broker properties. No effect if the endpoint is used as a source or if the dataflow doesn't have an Broker source.
func (o DataflowEndpointKafkaResponseOutput) CopyMqttProperties() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataflowEndpointKafkaResponse) *string { return v.CopyMqttProperties }).(pulumi.StringPtrOutput)
}

// Kafka endpoint host.
func (o DataflowEndpointKafkaResponseOutput) Host() pulumi.StringOutput {
	return o.ApplyT(func(v DataflowEndpointKafkaResponse) string { return v.Host }).(pulumi.StringOutput)
}

// Kafka acks. Can be all, one, or zero. No effect if the endpoint is used as a source.
func (o DataflowEndpointKafkaResponseOutput) KafkaAcks() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataflowEndpointKafkaResponse) *string { return v.KafkaAcks }).(pulumi.StringPtrOutput)
}

// Partition handling strategy. Can be default or static. No effect if the endpoint is used as a source.
func (o DataflowEndpointKafkaResponseOutput) PartitionStrategy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataflowEndpointKafkaResponse) *string { return v.PartitionStrategy }).(pulumi.StringPtrOutput)
}

// TLS configuration.
func (o DataflowEndpointKafkaResponseOutput) Tls() TlsPropertiesResponsePtrOutput {
	return o.ApplyT(func(v DataflowEndpointKafkaResponse) *TlsPropertiesResponse { return v.Tls }).(TlsPropertiesResponsePtrOutput)
}

type DataflowEndpointKafkaResponsePtrOutput struct{ *pulumi.OutputState }

func (DataflowEndpointKafkaResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataflowEndpointKafkaResponse)(nil)).Elem()
}

func (o DataflowEndpointKafkaResponsePtrOutput) ToDataflowEndpointKafkaResponsePtrOutput() DataflowEndpointKafkaResponsePtrOutput {
	return o
}

func (o DataflowEndpointKafkaResponsePtrOutput) ToDataflowEndpointKafkaResponsePtrOutputWithContext(ctx context.Context) DataflowEndpointKafkaResponsePtrOutput {
	return o
}

func (o DataflowEndpointKafkaResponsePtrOutput) Elem() DataflowEndpointKafkaResponseOutput {
	return o.ApplyT(func(v *DataflowEndpointKafkaResponse) DataflowEndpointKafkaResponse {
		if v != nil {
			return *v
		}
		var ret DataflowEndpointKafkaResponse
		return ret
	}).(DataflowEndpointKafkaResponseOutput)
}

// Authentication configuration. NOTE - only authentication property is allowed per entry.
func (o DataflowEndpointKafkaResponsePtrOutput) Authentication() DataflowEndpointKafkaAuthenticationResponsePtrOutput {
	return o.ApplyT(func(v *DataflowEndpointKafkaResponse) *DataflowEndpointKafkaAuthenticationResponse {
		if v == nil {
			return nil
		}
		return &v.Authentication
	}).(DataflowEndpointKafkaAuthenticationResponsePtrOutput)
}

// Batching configuration.
func (o DataflowEndpointKafkaResponsePtrOutput) Batching() DataflowEndpointKafkaBatchingResponsePtrOutput {
	return o.ApplyT(func(v *DataflowEndpointKafkaResponse) *DataflowEndpointKafkaBatchingResponse {
		if v == nil {
			return nil
		}
		return v.Batching
	}).(DataflowEndpointKafkaBatchingResponsePtrOutput)
}

// Cloud event mapping config.
func (o DataflowEndpointKafkaResponsePtrOutput) CloudEventAttributes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataflowEndpointKafkaResponse) *string {
		if v == nil {
			return nil
		}
		return v.CloudEventAttributes
	}).(pulumi.StringPtrOutput)
}

// Compression. Can be none, gzip, lz4, or snappy. No effect if the endpoint is used as a source.
func (o DataflowEndpointKafkaResponsePtrOutput) Compression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataflowEndpointKafkaResponse) *string {
		if v == nil {
			return nil
		}
		return v.Compression
	}).(pulumi.StringPtrOutput)
}

// Consumer group ID.
func (o DataflowEndpointKafkaResponsePtrOutput) ConsumerGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataflowEndpointKafkaResponse) *string {
		if v == nil {
			return nil
		}
		return v.ConsumerGroupId
	}).(pulumi.StringPtrOutput)
}

// Copy Broker properties. No effect if the endpoint is used as a source or if the dataflow doesn't have an Broker source.
func (o DataflowEndpointKafkaResponsePtrOutput) CopyMqttProperties() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataflowEndpointKafkaResponse) *string {
		if v == nil {
			return nil
		}
		return v.CopyMqttProperties
	}).(pulumi.StringPtrOutput)
}

// Kafka endpoint host.
func (o DataflowEndpointKafkaResponsePtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataflowEndpointKafkaResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Host
	}).(pulumi.StringPtrOutput)
}

// Kafka acks. Can be all, one, or zero. No effect if the endpoint is used as a source.
func (o DataflowEndpointKafkaResponsePtrOutput) KafkaAcks() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataflowEndpointKafkaResponse) *string {
		if v == nil {
			return nil
		}
		return v.KafkaAcks
	}).(pulumi.StringPtrOutput)
}

// Partition handling strategy. Can be default or static. No effect if the endpoint is used as a source.
func (o DataflowEndpointKafkaResponsePtrOutput) PartitionStrategy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataflowEndpointKafkaResponse) *string {
		if v == nil {
			return nil
		}
		return v.PartitionStrategy
	}).(pulumi.StringPtrOutput)
}

// TLS configuration.
func (o DataflowEndpointKafkaResponsePtrOutput) Tls() TlsPropertiesResponsePtrOutput {
	return o.ApplyT(func(v *DataflowEndpointKafkaResponse) *TlsPropertiesResponse {
		if v == nil {
			return nil
		}
		return v.Tls
	}).(TlsPropertiesResponsePtrOutput)
}

// Local persistent volume endpoint properties
type DataflowEndpointLocalStorage struct {
	// Persistent volume claim name.
	PersistentVolumeClaimRef string `pulumi:"persistentVolumeClaimRef"`
}

// DataflowEndpointLocalStorageInput is an input type that accepts DataflowEndpointLocalStorageArgs and DataflowEndpointLocalStorageOutput values.
// You can construct a concrete instance of `DataflowEndpointLocalStorageInput` via:
//
//	DataflowEndpointLocalStorageArgs{...}
type DataflowEndpointLocalStorageInput interface {
	pulumi.Input

	ToDataflowEndpointLocalStorageOutput() DataflowEndpointLocalStorageOutput
	ToDataflowEndpointLocalStorageOutputWithContext(context.Context) DataflowEndpointLocalStorageOutput
}

// Local persistent volume endpoint properties
type DataflowEndpointLocalStorageArgs struct {
	// Persistent volume claim name.
	PersistentVolumeClaimRef pulumi.StringInput `pulumi:"persistentVolumeClaimRef"`
}

func (DataflowEndpointLocalStorageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataflowEndpointLocalStorage)(nil)).Elem()
}

func (i DataflowEndpointLocalStorageArgs) ToDataflowEndpointLocalStorageOutput() DataflowEndpointLocalStorageOutput {
	return i.ToDataflowEndpointLocalStorageOutputWithContext(context.Background())
}

func (i DataflowEndpointLocalStorageArgs) ToDataflowEndpointLocalStorageOutputWithContext(ctx context.Context) DataflowEndpointLocalStorageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataflowEndpointLocalStorageOutput)
}

func (i DataflowEndpointLocalStorageArgs) ToDataflowEndpointLocalStoragePtrOutput() DataflowEndpointLocalStoragePtrOutput {
	return i.ToDataflowEndpointLocalStoragePtrOutputWithContext(context.Background())
}

func (i DataflowEndpointLocalStorageArgs) ToDataflowEndpointLocalStoragePtrOutputWithContext(ctx context.Context) DataflowEndpointLocalStoragePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataflowEndpointLocalStorageOutput).ToDataflowEndpointLocalStoragePtrOutputWithContext(ctx)
}

// DataflowEndpointLocalStoragePtrInput is an input type that accepts DataflowEndpointLocalStorageArgs, DataflowEndpointLocalStoragePtr and DataflowEndpointLocalStoragePtrOutput values.
// You can construct a concrete instance of `DataflowEndpointLocalStoragePtrInput` via:
//
//	        DataflowEndpointLocalStorageArgs{...}
//
//	or:
//
//	        nil
type DataflowEndpointLocalStoragePtrInput interface {
	pulumi.Input

	ToDataflowEndpointLocalStoragePtrOutput() DataflowEndpointLocalStoragePtrOutput
	ToDataflowEndpointLocalStoragePtrOutputWithContext(context.Context) DataflowEndpointLocalStoragePtrOutput
}

type dataflowEndpointLocalStoragePtrType DataflowEndpointLocalStorageArgs

func DataflowEndpointLocalStoragePtr(v *DataflowEndpointLocalStorageArgs) DataflowEndpointLocalStoragePtrInput {
	return (*dataflowEndpointLocalStoragePtrType)(v)
}

func (*dataflowEndpointLocalStoragePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataflowEndpointLocalStorage)(nil)).Elem()
}

func (i *dataflowEndpointLocalStoragePtrType) ToDataflowEndpointLocalStoragePtrOutput() DataflowEndpointLocalStoragePtrOutput {
	return i.ToDataflowEndpointLocalStoragePtrOutputWithContext(context.Background())
}

func (i *dataflowEndpointLocalStoragePtrType) ToDataflowEndpointLocalStoragePtrOutputWithContext(ctx context.Context) DataflowEndpointLocalStoragePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataflowEndpointLocalStoragePtrOutput)
}

// Local persistent volume endpoint properties
type DataflowEndpointLocalStorageOutput struct{ *pulumi.OutputState }

func (DataflowEndpointLocalStorageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataflowEndpointLocalStorage)(nil)).Elem()
}

func (o DataflowEndpointLocalStorageOutput) ToDataflowEndpointLocalStorageOutput() DataflowEndpointLocalStorageOutput {
	return o
}

func (o DataflowEndpointLocalStorageOutput) ToDataflowEndpointLocalStorageOutputWithContext(ctx context.Context) DataflowEndpointLocalStorageOutput {
	return o
}

func (o DataflowEndpointLocalStorageOutput) ToDataflowEndpointLocalStoragePtrOutput() DataflowEndpointLocalStoragePtrOutput {
	return o.ToDataflowEndpointLocalStoragePtrOutputWithContext(context.Background())
}

func (o DataflowEndpointLocalStorageOutput) ToDataflowEndpointLocalStoragePtrOutputWithContext(ctx context.Context) DataflowEndpointLocalStoragePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataflowEndpointLocalStorage) *DataflowEndpointLocalStorage {
		return &v
	}).(DataflowEndpointLocalStoragePtrOutput)
}

// Persistent volume claim name.
func (o DataflowEndpointLocalStorageOutput) PersistentVolumeClaimRef() pulumi.StringOutput {
	return o.ApplyT(func(v DataflowEndpointLocalStorage) string { return v.PersistentVolumeClaimRef }).(pulumi.StringOutput)
}

type DataflowEndpointLocalStoragePtrOutput struct{ *pulumi.OutputState }

func (DataflowEndpointLocalStoragePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataflowEndpointLocalStorage)(nil)).Elem()
}

func (o DataflowEndpointLocalStoragePtrOutput) ToDataflowEndpointLocalStoragePtrOutput() DataflowEndpointLocalStoragePtrOutput {
	return o
}

func (o DataflowEndpointLocalStoragePtrOutput) ToDataflowEndpointLocalStoragePtrOutputWithContext(ctx context.Context) DataflowEndpointLocalStoragePtrOutput {
	return o
}

func (o DataflowEndpointLocalStoragePtrOutput) Elem() DataflowEndpointLocalStorageOutput {
	return o.ApplyT(func(v *DataflowEndpointLocalStorage) DataflowEndpointLocalStorage {
		if v != nil {
			return *v
		}
		var ret DataflowEndpointLocalStorage
		return ret
	}).(DataflowEndpointLocalStorageOutput)
}

// Persistent volume claim name.
func (o DataflowEndpointLocalStoragePtrOutput) PersistentVolumeClaimRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataflowEndpointLocalStorage) *string {
		if v == nil {
			return nil
		}
		return &v.PersistentVolumeClaimRef
	}).(pulumi.StringPtrOutput)
}

// Local persistent volume endpoint properties
type DataflowEndpointLocalStorageResponse struct {
	// Persistent volume claim name.
	PersistentVolumeClaimRef string `pulumi:"persistentVolumeClaimRef"`
}

// Local persistent volume endpoint properties
type DataflowEndpointLocalStorageResponseOutput struct{ *pulumi.OutputState }

func (DataflowEndpointLocalStorageResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataflowEndpointLocalStorageResponse)(nil)).Elem()
}

func (o DataflowEndpointLocalStorageResponseOutput) ToDataflowEndpointLocalStorageResponseOutput() DataflowEndpointLocalStorageResponseOutput {
	return o
}

func (o DataflowEndpointLocalStorageResponseOutput) ToDataflowEndpointLocalStorageResponseOutputWithContext(ctx context.Context) DataflowEndpointLocalStorageResponseOutput {
	return o
}

// Persistent volume claim name.
func (o DataflowEndpointLocalStorageResponseOutput) PersistentVolumeClaimRef() pulumi.StringOutput {
	return o.ApplyT(func(v DataflowEndpointLocalStorageResponse) string { return v.PersistentVolumeClaimRef }).(pulumi.StringOutput)
}

type DataflowEndpointLocalStorageResponsePtrOutput struct{ *pulumi.OutputState }

func (DataflowEndpointLocalStorageResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataflowEndpointLocalStorageResponse)(nil)).Elem()
}

func (o DataflowEndpointLocalStorageResponsePtrOutput) ToDataflowEndpointLocalStorageResponsePtrOutput() DataflowEndpointLocalStorageResponsePtrOutput {
	return o
}

func (o DataflowEndpointLocalStorageResponsePtrOutput) ToDataflowEndpointLocalStorageResponsePtrOutputWithContext(ctx context.Context) DataflowEndpointLocalStorageResponsePtrOutput {
	return o
}

func (o DataflowEndpointLocalStorageResponsePtrOutput) Elem() DataflowEndpointLocalStorageResponseOutput {
	return o.ApplyT(func(v *DataflowEndpointLocalStorageResponse) DataflowEndpointLocalStorageResponse {
		if v != nil {
			return *v
		}
		var ret DataflowEndpointLocalStorageResponse
		return ret
	}).(DataflowEndpointLocalStorageResponseOutput)
}

// Persistent volume claim name.
func (o DataflowEndpointLocalStorageResponsePtrOutput) PersistentVolumeClaimRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataflowEndpointLocalStorageResponse) *string {
		if v == nil {
			return nil
		}
		return &v.PersistentVolumeClaimRef
	}).(pulumi.StringPtrOutput)
}

// Broker endpoint properties
type DataflowEndpointMqtt struct {
	// authentication properties. DEFAULT: kubernetes.audience=aio-internal. NOTE - Enum field only property is allowed
	Authentication DataflowEndpointMqttAuthentication `pulumi:"authentication"`
	// Client ID prefix. Client ID generated by the dataflow is <prefix>-TBD. Optional; no prefix if omitted.
	ClientIdPrefix *string `pulumi:"clientIdPrefix"`
	// Cloud event mapping config.
	CloudEventAttributes *string `pulumi:"cloudEventAttributes"`
	// Host of the Broker in the form of <hostname>:<port>. Optional; connects to Broker if omitted.
	Host *string `pulumi:"host"`
	// Broker KeepAlive for connection in seconds.
	KeepAliveSeconds *int `pulumi:"keepAliveSeconds"`
	// The max number of messages to keep in flight. For subscribe, this is the receive maximum. For publish, this is the maximum number of messages to send before waiting for an ack.
	MaxInflightMessages *int `pulumi:"maxInflightMessages"`
	// Enable or disable websockets.
	Protocol *string `pulumi:"protocol"`
	// Qos for Broker connection.
	Qos *int `pulumi:"qos"`
	// Whether or not to keep the retain setting.
	Retain *string `pulumi:"retain"`
	// Session expiry in seconds.
	SessionExpirySeconds *int `pulumi:"sessionExpirySeconds"`
	// TLS configuration.
	Tls *TlsProperties `pulumi:"tls"`
}

// Defaults sets the appropriate defaults for DataflowEndpointMqtt
func (val *DataflowEndpointMqtt) Defaults() *DataflowEndpointMqtt {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.KeepAliveSeconds == nil {
		keepAliveSeconds_ := 60
		tmp.KeepAliveSeconds = &keepAliveSeconds_
	}
	if tmp.MaxInflightMessages == nil {
		maxInflightMessages_ := 100
		tmp.MaxInflightMessages = &maxInflightMessages_
	}
	if tmp.Protocol == nil {
		protocol_ := "Mqtt"
		tmp.Protocol = &protocol_
	}
	if tmp.Qos == nil {
		qos_ := 1
		tmp.Qos = &qos_
	}
	if tmp.Retain == nil {
		retain_ := "Keep"
		tmp.Retain = &retain_
	}
	tmp.Tls = tmp.Tls.Defaults()

	return &tmp
}

// DataflowEndpointMqttInput is an input type that accepts DataflowEndpointMqttArgs and DataflowEndpointMqttOutput values.
// You can construct a concrete instance of `DataflowEndpointMqttInput` via:
//
//	DataflowEndpointMqttArgs{...}
type DataflowEndpointMqttInput interface {
	pulumi.Input

	ToDataflowEndpointMqttOutput() DataflowEndpointMqttOutput
	ToDataflowEndpointMqttOutputWithContext(context.Context) DataflowEndpointMqttOutput
}

// Broker endpoint properties
type DataflowEndpointMqttArgs struct {
	// authentication properties. DEFAULT: kubernetes.audience=aio-internal. NOTE - Enum field only property is allowed
	Authentication DataflowEndpointMqttAuthenticationInput `pulumi:"authentication"`
	// Client ID prefix. Client ID generated by the dataflow is <prefix>-TBD. Optional; no prefix if omitted.
	ClientIdPrefix pulumi.StringPtrInput `pulumi:"clientIdPrefix"`
	// Cloud event mapping config.
	CloudEventAttributes pulumi.StringPtrInput `pulumi:"cloudEventAttributes"`
	// Host of the Broker in the form of <hostname>:<port>. Optional; connects to Broker if omitted.
	Host pulumi.StringPtrInput `pulumi:"host"`
	// Broker KeepAlive for connection in seconds.
	KeepAliveSeconds pulumi.IntPtrInput `pulumi:"keepAliveSeconds"`
	// The max number of messages to keep in flight. For subscribe, this is the receive maximum. For publish, this is the maximum number of messages to send before waiting for an ack.
	MaxInflightMessages pulumi.IntPtrInput `pulumi:"maxInflightMessages"`
	// Enable or disable websockets.
	Protocol pulumi.StringPtrInput `pulumi:"protocol"`
	// Qos for Broker connection.
	Qos pulumi.IntPtrInput `pulumi:"qos"`
	// Whether or not to keep the retain setting.
	Retain pulumi.StringPtrInput `pulumi:"retain"`
	// Session expiry in seconds.
	SessionExpirySeconds pulumi.IntPtrInput `pulumi:"sessionExpirySeconds"`
	// TLS configuration.
	Tls TlsPropertiesPtrInput `pulumi:"tls"`
}

// Defaults sets the appropriate defaults for DataflowEndpointMqttArgs
func (val *DataflowEndpointMqttArgs) Defaults() *DataflowEndpointMqttArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.KeepAliveSeconds == nil {
		tmp.KeepAliveSeconds = pulumi.IntPtr(60)
	}
	if tmp.MaxInflightMessages == nil {
		tmp.MaxInflightMessages = pulumi.IntPtr(100)
	}
	if tmp.Protocol == nil {
		tmp.Protocol = pulumi.StringPtr("Mqtt")
	}
	if tmp.Qos == nil {
		tmp.Qos = pulumi.IntPtr(1)
	}
	if tmp.Retain == nil {
		tmp.Retain = pulumi.StringPtr("Keep")
	}

	return &tmp
}
func (DataflowEndpointMqttArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataflowEndpointMqtt)(nil)).Elem()
}

func (i DataflowEndpointMqttArgs) ToDataflowEndpointMqttOutput() DataflowEndpointMqttOutput {
	return i.ToDataflowEndpointMqttOutputWithContext(context.Background())
}

func (i DataflowEndpointMqttArgs) ToDataflowEndpointMqttOutputWithContext(ctx context.Context) DataflowEndpointMqttOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataflowEndpointMqttOutput)
}

func (i DataflowEndpointMqttArgs) ToDataflowEndpointMqttPtrOutput() DataflowEndpointMqttPtrOutput {
	return i.ToDataflowEndpointMqttPtrOutputWithContext(context.Background())
}

func (i DataflowEndpointMqttArgs) ToDataflowEndpointMqttPtrOutputWithContext(ctx context.Context) DataflowEndpointMqttPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataflowEndpointMqttOutput).ToDataflowEndpointMqttPtrOutputWithContext(ctx)
}

// DataflowEndpointMqttPtrInput is an input type that accepts DataflowEndpointMqttArgs, DataflowEndpointMqttPtr and DataflowEndpointMqttPtrOutput values.
// You can construct a concrete instance of `DataflowEndpointMqttPtrInput` via:
//
//	        DataflowEndpointMqttArgs{...}
//
//	or:
//
//	        nil
type DataflowEndpointMqttPtrInput interface {
	pulumi.Input

	ToDataflowEndpointMqttPtrOutput() DataflowEndpointMqttPtrOutput
	ToDataflowEndpointMqttPtrOutputWithContext(context.Context) DataflowEndpointMqttPtrOutput
}

type dataflowEndpointMqttPtrType DataflowEndpointMqttArgs

func DataflowEndpointMqttPtr(v *DataflowEndpointMqttArgs) DataflowEndpointMqttPtrInput {
	return (*dataflowEndpointMqttPtrType)(v)
}

func (*dataflowEndpointMqttPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataflowEndpointMqtt)(nil)).Elem()
}

func (i *dataflowEndpointMqttPtrType) ToDataflowEndpointMqttPtrOutput() DataflowEndpointMqttPtrOutput {
	return i.ToDataflowEndpointMqttPtrOutputWithContext(context.Background())
}

func (i *dataflowEndpointMqttPtrType) ToDataflowEndpointMqttPtrOutputWithContext(ctx context.Context) DataflowEndpointMqttPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataflowEndpointMqttPtrOutput)
}

// Broker endpoint properties
type DataflowEndpointMqttOutput struct{ *pulumi.OutputState }

func (DataflowEndpointMqttOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataflowEndpointMqtt)(nil)).Elem()
}

func (o DataflowEndpointMqttOutput) ToDataflowEndpointMqttOutput() DataflowEndpointMqttOutput {
	return o
}

func (o DataflowEndpointMqttOutput) ToDataflowEndpointMqttOutputWithContext(ctx context.Context) DataflowEndpointMqttOutput {
	return o
}

func (o DataflowEndpointMqttOutput) ToDataflowEndpointMqttPtrOutput() DataflowEndpointMqttPtrOutput {
	return o.ToDataflowEndpointMqttPtrOutputWithContext(context.Background())
}

func (o DataflowEndpointMqttOutput) ToDataflowEndpointMqttPtrOutputWithContext(ctx context.Context) DataflowEndpointMqttPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataflowEndpointMqtt) *DataflowEndpointMqtt {
		return &v
	}).(DataflowEndpointMqttPtrOutput)
}

// authentication properties. DEFAULT: kubernetes.audience=aio-internal. NOTE - Enum field only property is allowed
func (o DataflowEndpointMqttOutput) Authentication() DataflowEndpointMqttAuthenticationOutput {
	return o.ApplyT(func(v DataflowEndpointMqtt) DataflowEndpointMqttAuthentication { return v.Authentication }).(DataflowEndpointMqttAuthenticationOutput)
}

// Client ID prefix. Client ID generated by the dataflow is <prefix>-TBD. Optional; no prefix if omitted.
func (o DataflowEndpointMqttOutput) ClientIdPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataflowEndpointMqtt) *string { return v.ClientIdPrefix }).(pulumi.StringPtrOutput)
}

// Cloud event mapping config.
func (o DataflowEndpointMqttOutput) CloudEventAttributes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataflowEndpointMqtt) *string { return v.CloudEventAttributes }).(pulumi.StringPtrOutput)
}

// Host of the Broker in the form of <hostname>:<port>. Optional; connects to Broker if omitted.
func (o DataflowEndpointMqttOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataflowEndpointMqtt) *string { return v.Host }).(pulumi.StringPtrOutput)
}

// Broker KeepAlive for connection in seconds.
func (o DataflowEndpointMqttOutput) KeepAliveSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DataflowEndpointMqtt) *int { return v.KeepAliveSeconds }).(pulumi.IntPtrOutput)
}

// The max number of messages to keep in flight. For subscribe, this is the receive maximum. For publish, this is the maximum number of messages to send before waiting for an ack.
func (o DataflowEndpointMqttOutput) MaxInflightMessages() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DataflowEndpointMqtt) *int { return v.MaxInflightMessages }).(pulumi.IntPtrOutput)
}

// Enable or disable websockets.
func (o DataflowEndpointMqttOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataflowEndpointMqtt) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

// Qos for Broker connection.
func (o DataflowEndpointMqttOutput) Qos() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DataflowEndpointMqtt) *int { return v.Qos }).(pulumi.IntPtrOutput)
}

// Whether or not to keep the retain setting.
func (o DataflowEndpointMqttOutput) Retain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataflowEndpointMqtt) *string { return v.Retain }).(pulumi.StringPtrOutput)
}

// Session expiry in seconds.
func (o DataflowEndpointMqttOutput) SessionExpirySeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DataflowEndpointMqtt) *int { return v.SessionExpirySeconds }).(pulumi.IntPtrOutput)
}

// TLS configuration.
func (o DataflowEndpointMqttOutput) Tls() TlsPropertiesPtrOutput {
	return o.ApplyT(func(v DataflowEndpointMqtt) *TlsProperties { return v.Tls }).(TlsPropertiesPtrOutput)
}

type DataflowEndpointMqttPtrOutput struct{ *pulumi.OutputState }

func (DataflowEndpointMqttPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataflowEndpointMqtt)(nil)).Elem()
}

func (o DataflowEndpointMqttPtrOutput) ToDataflowEndpointMqttPtrOutput() DataflowEndpointMqttPtrOutput {
	return o
}

func (o DataflowEndpointMqttPtrOutput) ToDataflowEndpointMqttPtrOutputWithContext(ctx context.Context) DataflowEndpointMqttPtrOutput {
	return o
}

func (o DataflowEndpointMqttPtrOutput) Elem() DataflowEndpointMqttOutput {
	return o.ApplyT(func(v *DataflowEndpointMqtt) DataflowEndpointMqtt {
		if v != nil {
			return *v
		}
		var ret DataflowEndpointMqtt
		return ret
	}).(DataflowEndpointMqttOutput)
}

// authentication properties. DEFAULT: kubernetes.audience=aio-internal. NOTE - Enum field only property is allowed
func (o DataflowEndpointMqttPtrOutput) Authentication() DataflowEndpointMqttAuthenticationPtrOutput {
	return o.ApplyT(func(v *DataflowEndpointMqtt) *DataflowEndpointMqttAuthentication {
		if v == nil {
			return nil
		}
		return &v.Authentication
	}).(DataflowEndpointMqttAuthenticationPtrOutput)
}

// Client ID prefix. Client ID generated by the dataflow is <prefix>-TBD. Optional; no prefix if omitted.
func (o DataflowEndpointMqttPtrOutput) ClientIdPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataflowEndpointMqtt) *string {
		if v == nil {
			return nil
		}
		return v.ClientIdPrefix
	}).(pulumi.StringPtrOutput)
}

// Cloud event mapping config.
func (o DataflowEndpointMqttPtrOutput) CloudEventAttributes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataflowEndpointMqtt) *string {
		if v == nil {
			return nil
		}
		return v.CloudEventAttributes
	}).(pulumi.StringPtrOutput)
}

// Host of the Broker in the form of <hostname>:<port>. Optional; connects to Broker if omitted.
func (o DataflowEndpointMqttPtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataflowEndpointMqtt) *string {
		if v == nil {
			return nil
		}
		return v.Host
	}).(pulumi.StringPtrOutput)
}

// Broker KeepAlive for connection in seconds.
func (o DataflowEndpointMqttPtrOutput) KeepAliveSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DataflowEndpointMqtt) *int {
		if v == nil {
			return nil
		}
		return v.KeepAliveSeconds
	}).(pulumi.IntPtrOutput)
}

// The max number of messages to keep in flight. For subscribe, this is the receive maximum. For publish, this is the maximum number of messages to send before waiting for an ack.
func (o DataflowEndpointMqttPtrOutput) MaxInflightMessages() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DataflowEndpointMqtt) *int {
		if v == nil {
			return nil
		}
		return v.MaxInflightMessages
	}).(pulumi.IntPtrOutput)
}

// Enable or disable websockets.
func (o DataflowEndpointMqttPtrOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataflowEndpointMqtt) *string {
		if v == nil {
			return nil
		}
		return v.Protocol
	}).(pulumi.StringPtrOutput)
}

// Qos for Broker connection.
func (o DataflowEndpointMqttPtrOutput) Qos() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DataflowEndpointMqtt) *int {
		if v == nil {
			return nil
		}
		return v.Qos
	}).(pulumi.IntPtrOutput)
}

// Whether or not to keep the retain setting.
func (o DataflowEndpointMqttPtrOutput) Retain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataflowEndpointMqtt) *string {
		if v == nil {
			return nil
		}
		return v.Retain
	}).(pulumi.StringPtrOutput)
}

// Session expiry in seconds.
func (o DataflowEndpointMqttPtrOutput) SessionExpirySeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DataflowEndpointMqtt) *int {
		if v == nil {
			return nil
		}
		return v.SessionExpirySeconds
	}).(pulumi.IntPtrOutput)
}

// TLS configuration.
func (o DataflowEndpointMqttPtrOutput) Tls() TlsPropertiesPtrOutput {
	return o.ApplyT(func(v *DataflowEndpointMqtt) *TlsProperties {
		if v == nil {
			return nil
		}
		return v.Tls
	}).(TlsPropertiesPtrOutput)
}

// Mqtt endpoint Authentication properties. NOTE - only authentication property is allowed per entry.
type DataflowEndpointMqttAuthentication struct {
	// Mode of Authentication.
	Method string `pulumi:"method"`
	// Kubernetes service account token authentication. Default audience if not set is aio-internal
	ServiceAccountTokenSettings *DataflowEndpointAuthenticationServiceAccountToken `pulumi:"serviceAccountTokenSettings"`
	// System-assigned managed identity authentication.
	SystemAssignedManagedIdentitySettings *DataflowEndpointAuthenticationSystemAssignedManagedIdentity `pulumi:"systemAssignedManagedIdentitySettings"`
	// User-assigned managed identity authentication.
	UserAssignedManagedIdentitySettings *DataflowEndpointAuthenticationUserAssignedManagedIdentity `pulumi:"userAssignedManagedIdentitySettings"`
	// X.509 certificate authentication.
	X509CertificateSettings *DataflowEndpointAuthenticationX509 `pulumi:"x509CertificateSettings"`
}

// DataflowEndpointMqttAuthenticationInput is an input type that accepts DataflowEndpointMqttAuthenticationArgs and DataflowEndpointMqttAuthenticationOutput values.
// You can construct a concrete instance of `DataflowEndpointMqttAuthenticationInput` via:
//
//	DataflowEndpointMqttAuthenticationArgs{...}
type DataflowEndpointMqttAuthenticationInput interface {
	pulumi.Input

	ToDataflowEndpointMqttAuthenticationOutput() DataflowEndpointMqttAuthenticationOutput
	ToDataflowEndpointMqttAuthenticationOutputWithContext(context.Context) DataflowEndpointMqttAuthenticationOutput
}

// Mqtt endpoint Authentication properties. NOTE - only authentication property is allowed per entry.
type DataflowEndpointMqttAuthenticationArgs struct {
	// Mode of Authentication.
	Method pulumi.StringInput `pulumi:"method"`
	// Kubernetes service account token authentication. Default audience if not set is aio-internal
	ServiceAccountTokenSettings DataflowEndpointAuthenticationServiceAccountTokenPtrInput `pulumi:"serviceAccountTokenSettings"`
	// System-assigned managed identity authentication.
	SystemAssignedManagedIdentitySettings DataflowEndpointAuthenticationSystemAssignedManagedIdentityPtrInput `pulumi:"systemAssignedManagedIdentitySettings"`
	// User-assigned managed identity authentication.
	UserAssignedManagedIdentitySettings DataflowEndpointAuthenticationUserAssignedManagedIdentityPtrInput `pulumi:"userAssignedManagedIdentitySettings"`
	// X.509 certificate authentication.
	X509CertificateSettings DataflowEndpointAuthenticationX509PtrInput `pulumi:"x509CertificateSettings"`
}

func (DataflowEndpointMqttAuthenticationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataflowEndpointMqttAuthentication)(nil)).Elem()
}

func (i DataflowEndpointMqttAuthenticationArgs) ToDataflowEndpointMqttAuthenticationOutput() DataflowEndpointMqttAuthenticationOutput {
	return i.ToDataflowEndpointMqttAuthenticationOutputWithContext(context.Background())
}

func (i DataflowEndpointMqttAuthenticationArgs) ToDataflowEndpointMqttAuthenticationOutputWithContext(ctx context.Context) DataflowEndpointMqttAuthenticationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataflowEndpointMqttAuthenticationOutput)
}

func (i DataflowEndpointMqttAuthenticationArgs) ToDataflowEndpointMqttAuthenticationPtrOutput() DataflowEndpointMqttAuthenticationPtrOutput {
	return i.ToDataflowEndpointMqttAuthenticationPtrOutputWithContext(context.Background())
}

func (i DataflowEndpointMqttAuthenticationArgs) ToDataflowEndpointMqttAuthenticationPtrOutputWithContext(ctx context.Context) DataflowEndpointMqttAuthenticationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataflowEndpointMqttAuthenticationOutput).ToDataflowEndpointMqttAuthenticationPtrOutputWithContext(ctx)
}

// DataflowEndpointMqttAuthenticationPtrInput is an input type that accepts DataflowEndpointMqttAuthenticationArgs, DataflowEndpointMqttAuthenticationPtr and DataflowEndpointMqttAuthenticationPtrOutput values.
// You can construct a concrete instance of `DataflowEndpointMqttAuthenticationPtrInput` via:
//
//	        DataflowEndpointMqttAuthenticationArgs{...}
//
//	or:
//
//	        nil
type DataflowEndpointMqttAuthenticationPtrInput interface {
	pulumi.Input

	ToDataflowEndpointMqttAuthenticationPtrOutput() DataflowEndpointMqttAuthenticationPtrOutput
	ToDataflowEndpointMqttAuthenticationPtrOutputWithContext(context.Context) DataflowEndpointMqttAuthenticationPtrOutput
}

type dataflowEndpointMqttAuthenticationPtrType DataflowEndpointMqttAuthenticationArgs

func DataflowEndpointMqttAuthenticationPtr(v *DataflowEndpointMqttAuthenticationArgs) DataflowEndpointMqttAuthenticationPtrInput {
	return (*dataflowEndpointMqttAuthenticationPtrType)(v)
}

func (*dataflowEndpointMqttAuthenticationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataflowEndpointMqttAuthentication)(nil)).Elem()
}

func (i *dataflowEndpointMqttAuthenticationPtrType) ToDataflowEndpointMqttAuthenticationPtrOutput() DataflowEndpointMqttAuthenticationPtrOutput {
	return i.ToDataflowEndpointMqttAuthenticationPtrOutputWithContext(context.Background())
}

func (i *dataflowEndpointMqttAuthenticationPtrType) ToDataflowEndpointMqttAuthenticationPtrOutputWithContext(ctx context.Context) DataflowEndpointMqttAuthenticationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataflowEndpointMqttAuthenticationPtrOutput)
}

// Mqtt endpoint Authentication properties. NOTE - only authentication property is allowed per entry.
type DataflowEndpointMqttAuthenticationOutput struct{ *pulumi.OutputState }

func (DataflowEndpointMqttAuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataflowEndpointMqttAuthentication)(nil)).Elem()
}

func (o DataflowEndpointMqttAuthenticationOutput) ToDataflowEndpointMqttAuthenticationOutput() DataflowEndpointMqttAuthenticationOutput {
	return o
}

func (o DataflowEndpointMqttAuthenticationOutput) ToDataflowEndpointMqttAuthenticationOutputWithContext(ctx context.Context) DataflowEndpointMqttAuthenticationOutput {
	return o
}

func (o DataflowEndpointMqttAuthenticationOutput) ToDataflowEndpointMqttAuthenticationPtrOutput() DataflowEndpointMqttAuthenticationPtrOutput {
	return o.ToDataflowEndpointMqttAuthenticationPtrOutputWithContext(context.Background())
}

func (o DataflowEndpointMqttAuthenticationOutput) ToDataflowEndpointMqttAuthenticationPtrOutputWithContext(ctx context.Context) DataflowEndpointMqttAuthenticationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataflowEndpointMqttAuthentication) *DataflowEndpointMqttAuthentication {
		return &v
	}).(DataflowEndpointMqttAuthenticationPtrOutput)
}

// Mode of Authentication.
func (o DataflowEndpointMqttAuthenticationOutput) Method() pulumi.StringOutput {
	return o.ApplyT(func(v DataflowEndpointMqttAuthentication) string { return v.Method }).(pulumi.StringOutput)
}

// Kubernetes service account token authentication. Default audience if not set is aio-internal
func (o DataflowEndpointMqttAuthenticationOutput) ServiceAccountTokenSettings() DataflowEndpointAuthenticationServiceAccountTokenPtrOutput {
	return o.ApplyT(func(v DataflowEndpointMqttAuthentication) *DataflowEndpointAuthenticationServiceAccountToken {
		return v.ServiceAccountTokenSettings
	}).(DataflowEndpointAuthenticationServiceAccountTokenPtrOutput)
}

// System-assigned managed identity authentication.
func (o DataflowEndpointMqttAuthenticationOutput) SystemAssignedManagedIdentitySettings() DataflowEndpointAuthenticationSystemAssignedManagedIdentityPtrOutput {
	return o.ApplyT(func(v DataflowEndpointMqttAuthentication) *DataflowEndpointAuthenticationSystemAssignedManagedIdentity {
		return v.SystemAssignedManagedIdentitySettings
	}).(DataflowEndpointAuthenticationSystemAssignedManagedIdentityPtrOutput)
}

// User-assigned managed identity authentication.
func (o DataflowEndpointMqttAuthenticationOutput) UserAssignedManagedIdentitySettings() DataflowEndpointAuthenticationUserAssignedManagedIdentityPtrOutput {
	return o.ApplyT(func(v DataflowEndpointMqttAuthentication) *DataflowEndpointAuthenticationUserAssignedManagedIdentity {
		return v.UserAssignedManagedIdentitySettings
	}).(DataflowEndpointAuthenticationUserAssignedManagedIdentityPtrOutput)
}

// X.509 certificate authentication.
func (o DataflowEndpointMqttAuthenticationOutput) X509CertificateSettings() DataflowEndpointAuthenticationX509PtrOutput {
	return o.ApplyT(func(v DataflowEndpointMqttAuthentication) *DataflowEndpointAuthenticationX509 {
		return v.X509CertificateSettings
	}).(DataflowEndpointAuthenticationX509PtrOutput)
}

type DataflowEndpointMqttAuthenticationPtrOutput struct{ *pulumi.OutputState }

func (DataflowEndpointMqttAuthenticationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataflowEndpointMqttAuthentication)(nil)).Elem()
}

func (o DataflowEndpointMqttAuthenticationPtrOutput) ToDataflowEndpointMqttAuthenticationPtrOutput() DataflowEndpointMqttAuthenticationPtrOutput {
	return o
}

func (o DataflowEndpointMqttAuthenticationPtrOutput) ToDataflowEndpointMqttAuthenticationPtrOutputWithContext(ctx context.Context) DataflowEndpointMqttAuthenticationPtrOutput {
	return o
}

func (o DataflowEndpointMqttAuthenticationPtrOutput) Elem() DataflowEndpointMqttAuthenticationOutput {
	return o.ApplyT(func(v *DataflowEndpointMqttAuthentication) DataflowEndpointMqttAuthentication {
		if v != nil {
			return *v
		}
		var ret DataflowEndpointMqttAuthentication
		return ret
	}).(DataflowEndpointMqttAuthenticationOutput)
}

// Mode of Authentication.
func (o DataflowEndpointMqttAuthenticationPtrOutput) Method() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataflowEndpointMqttAuthentication) *string {
		if v == nil {
			return nil
		}
		return &v.Method
	}).(pulumi.StringPtrOutput)
}

// Kubernetes service account token authentication. Default audience if not set is aio-internal
func (o DataflowEndpointMqttAuthenticationPtrOutput) ServiceAccountTokenSettings() DataflowEndpointAuthenticationServiceAccountTokenPtrOutput {
	return o.ApplyT(func(v *DataflowEndpointMqttAuthentication) *DataflowEndpointAuthenticationServiceAccountToken {
		if v == nil {
			return nil
		}
		return v.ServiceAccountTokenSettings
	}).(DataflowEndpointAuthenticationServiceAccountTokenPtrOutput)
}

// System-assigned managed identity authentication.
func (o DataflowEndpointMqttAuthenticationPtrOutput) SystemAssignedManagedIdentitySettings() DataflowEndpointAuthenticationSystemAssignedManagedIdentityPtrOutput {
	return o.ApplyT(func(v *DataflowEndpointMqttAuthentication) *DataflowEndpointAuthenticationSystemAssignedManagedIdentity {
		if v == nil {
			return nil
		}
		return v.SystemAssignedManagedIdentitySettings
	}).(DataflowEndpointAuthenticationSystemAssignedManagedIdentityPtrOutput)
}

// User-assigned managed identity authentication.
func (o DataflowEndpointMqttAuthenticationPtrOutput) UserAssignedManagedIdentitySettings() DataflowEndpointAuthenticationUserAssignedManagedIdentityPtrOutput {
	return o.ApplyT(func(v *DataflowEndpointMqttAuthentication) *DataflowEndpointAuthenticationUserAssignedManagedIdentity {
		if v == nil {
			return nil
		}
		return v.UserAssignedManagedIdentitySettings
	}).(DataflowEndpointAuthenticationUserAssignedManagedIdentityPtrOutput)
}

// X.509 certificate authentication.
func (o DataflowEndpointMqttAuthenticationPtrOutput) X509CertificateSettings() DataflowEndpointAuthenticationX509PtrOutput {
	return o.ApplyT(func(v *DataflowEndpointMqttAuthentication) *DataflowEndpointAuthenticationX509 {
		if v == nil {
			return nil
		}
		return v.X509CertificateSettings
	}).(DataflowEndpointAuthenticationX509PtrOutput)
}

// Mqtt endpoint Authentication properties. NOTE - only authentication property is allowed per entry.
type DataflowEndpointMqttAuthenticationResponse struct {
	// Mode of Authentication.
	Method string `pulumi:"method"`
	// Kubernetes service account token authentication. Default audience if not set is aio-internal
	ServiceAccountTokenSettings *DataflowEndpointAuthenticationServiceAccountTokenResponse `pulumi:"serviceAccountTokenSettings"`
	// System-assigned managed identity authentication.
	SystemAssignedManagedIdentitySettings *DataflowEndpointAuthenticationSystemAssignedManagedIdentityResponse `pulumi:"systemAssignedManagedIdentitySettings"`
	// User-assigned managed identity authentication.
	UserAssignedManagedIdentitySettings *DataflowEndpointAuthenticationUserAssignedManagedIdentityResponse `pulumi:"userAssignedManagedIdentitySettings"`
	// X.509 certificate authentication.
	X509CertificateSettings *DataflowEndpointAuthenticationX509Response `pulumi:"x509CertificateSettings"`
}

// Mqtt endpoint Authentication properties. NOTE - only authentication property is allowed per entry.
type DataflowEndpointMqttAuthenticationResponseOutput struct{ *pulumi.OutputState }

func (DataflowEndpointMqttAuthenticationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataflowEndpointMqttAuthenticationResponse)(nil)).Elem()
}

func (o DataflowEndpointMqttAuthenticationResponseOutput) ToDataflowEndpointMqttAuthenticationResponseOutput() DataflowEndpointMqttAuthenticationResponseOutput {
	return o
}

func (o DataflowEndpointMqttAuthenticationResponseOutput) ToDataflowEndpointMqttAuthenticationResponseOutputWithContext(ctx context.Context) DataflowEndpointMqttAuthenticationResponseOutput {
	return o
}

// Mode of Authentication.
func (o DataflowEndpointMqttAuthenticationResponseOutput) Method() pulumi.StringOutput {
	return o.ApplyT(func(v DataflowEndpointMqttAuthenticationResponse) string { return v.Method }).(pulumi.StringOutput)
}

// Kubernetes service account token authentication. Default audience if not set is aio-internal
func (o DataflowEndpointMqttAuthenticationResponseOutput) ServiceAccountTokenSettings() DataflowEndpointAuthenticationServiceAccountTokenResponsePtrOutput {
	return o.ApplyT(func(v DataflowEndpointMqttAuthenticationResponse) *DataflowEndpointAuthenticationServiceAccountTokenResponse {
		return v.ServiceAccountTokenSettings
	}).(DataflowEndpointAuthenticationServiceAccountTokenResponsePtrOutput)
}

// System-assigned managed identity authentication.
func (o DataflowEndpointMqttAuthenticationResponseOutput) SystemAssignedManagedIdentitySettings() DataflowEndpointAuthenticationSystemAssignedManagedIdentityResponsePtrOutput {
	return o.ApplyT(func(v DataflowEndpointMqttAuthenticationResponse) *DataflowEndpointAuthenticationSystemAssignedManagedIdentityResponse {
		return v.SystemAssignedManagedIdentitySettings
	}).(DataflowEndpointAuthenticationSystemAssignedManagedIdentityResponsePtrOutput)
}

// User-assigned managed identity authentication.
func (o DataflowEndpointMqttAuthenticationResponseOutput) UserAssignedManagedIdentitySettings() DataflowEndpointAuthenticationUserAssignedManagedIdentityResponsePtrOutput {
	return o.ApplyT(func(v DataflowEndpointMqttAuthenticationResponse) *DataflowEndpointAuthenticationUserAssignedManagedIdentityResponse {
		return v.UserAssignedManagedIdentitySettings
	}).(DataflowEndpointAuthenticationUserAssignedManagedIdentityResponsePtrOutput)
}

// X.509 certificate authentication.
func (o DataflowEndpointMqttAuthenticationResponseOutput) X509CertificateSettings() DataflowEndpointAuthenticationX509ResponsePtrOutput {
	return o.ApplyT(func(v DataflowEndpointMqttAuthenticationResponse) *DataflowEndpointAuthenticationX509Response {
		return v.X509CertificateSettings
	}).(DataflowEndpointAuthenticationX509ResponsePtrOutput)
}

type DataflowEndpointMqttAuthenticationResponsePtrOutput struct{ *pulumi.OutputState }

func (DataflowEndpointMqttAuthenticationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataflowEndpointMqttAuthenticationResponse)(nil)).Elem()
}

func (o DataflowEndpointMqttAuthenticationResponsePtrOutput) ToDataflowEndpointMqttAuthenticationResponsePtrOutput() DataflowEndpointMqttAuthenticationResponsePtrOutput {
	return o
}

func (o DataflowEndpointMqttAuthenticationResponsePtrOutput) ToDataflowEndpointMqttAuthenticationResponsePtrOutputWithContext(ctx context.Context) DataflowEndpointMqttAuthenticationResponsePtrOutput {
	return o
}

func (o DataflowEndpointMqttAuthenticationResponsePtrOutput) Elem() DataflowEndpointMqttAuthenticationResponseOutput {
	return o.ApplyT(func(v *DataflowEndpointMqttAuthenticationResponse) DataflowEndpointMqttAuthenticationResponse {
		if v != nil {
			return *v
		}
		var ret DataflowEndpointMqttAuthenticationResponse
		return ret
	}).(DataflowEndpointMqttAuthenticationResponseOutput)
}

// Mode of Authentication.
func (o DataflowEndpointMqttAuthenticationResponsePtrOutput) Method() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataflowEndpointMqttAuthenticationResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Method
	}).(pulumi.StringPtrOutput)
}

// Kubernetes service account token authentication. Default audience if not set is aio-internal
func (o DataflowEndpointMqttAuthenticationResponsePtrOutput) ServiceAccountTokenSettings() DataflowEndpointAuthenticationServiceAccountTokenResponsePtrOutput {
	return o.ApplyT(func(v *DataflowEndpointMqttAuthenticationResponse) *DataflowEndpointAuthenticationServiceAccountTokenResponse {
		if v == nil {
			return nil
		}
		return v.ServiceAccountTokenSettings
	}).(DataflowEndpointAuthenticationServiceAccountTokenResponsePtrOutput)
}

// System-assigned managed identity authentication.
func (o DataflowEndpointMqttAuthenticationResponsePtrOutput) SystemAssignedManagedIdentitySettings() DataflowEndpointAuthenticationSystemAssignedManagedIdentityResponsePtrOutput {
	return o.ApplyT(func(v *DataflowEndpointMqttAuthenticationResponse) *DataflowEndpointAuthenticationSystemAssignedManagedIdentityResponse {
		if v == nil {
			return nil
		}
		return v.SystemAssignedManagedIdentitySettings
	}).(DataflowEndpointAuthenticationSystemAssignedManagedIdentityResponsePtrOutput)
}

// User-assigned managed identity authentication.
func (o DataflowEndpointMqttAuthenticationResponsePtrOutput) UserAssignedManagedIdentitySettings() DataflowEndpointAuthenticationUserAssignedManagedIdentityResponsePtrOutput {
	return o.ApplyT(func(v *DataflowEndpointMqttAuthenticationResponse) *DataflowEndpointAuthenticationUserAssignedManagedIdentityResponse {
		if v == nil {
			return nil
		}
		return v.UserAssignedManagedIdentitySettings
	}).(DataflowEndpointAuthenticationUserAssignedManagedIdentityResponsePtrOutput)
}

// X.509 certificate authentication.
func (o DataflowEndpointMqttAuthenticationResponsePtrOutput) X509CertificateSettings() DataflowEndpointAuthenticationX509ResponsePtrOutput {
	return o.ApplyT(func(v *DataflowEndpointMqttAuthenticationResponse) *DataflowEndpointAuthenticationX509Response {
		if v == nil {
			return nil
		}
		return v.X509CertificateSettings
	}).(DataflowEndpointAuthenticationX509ResponsePtrOutput)
}

// Broker endpoint properties
type DataflowEndpointMqttResponse struct {
	// authentication properties. DEFAULT: kubernetes.audience=aio-internal. NOTE - Enum field only property is allowed
	Authentication DataflowEndpointMqttAuthenticationResponse `pulumi:"authentication"`
	// Client ID prefix. Client ID generated by the dataflow is <prefix>-TBD. Optional; no prefix if omitted.
	ClientIdPrefix *string `pulumi:"clientIdPrefix"`
	// Cloud event mapping config.
	CloudEventAttributes *string `pulumi:"cloudEventAttributes"`
	// Host of the Broker in the form of <hostname>:<port>. Optional; connects to Broker if omitted.
	Host *string `pulumi:"host"`
	// Broker KeepAlive for connection in seconds.
	KeepAliveSeconds *int `pulumi:"keepAliveSeconds"`
	// The max number of messages to keep in flight. For subscribe, this is the receive maximum. For publish, this is the maximum number of messages to send before waiting for an ack.
	MaxInflightMessages *int `pulumi:"maxInflightMessages"`
	// Enable or disable websockets.
	Protocol *string `pulumi:"protocol"`
	// Qos for Broker connection.
	Qos *int `pulumi:"qos"`
	// Whether or not to keep the retain setting.
	Retain *string `pulumi:"retain"`
	// Session expiry in seconds.
	SessionExpirySeconds *int `pulumi:"sessionExpirySeconds"`
	// TLS configuration.
	Tls *TlsPropertiesResponse `pulumi:"tls"`
}

// Defaults sets the appropriate defaults for DataflowEndpointMqttResponse
func (val *DataflowEndpointMqttResponse) Defaults() *DataflowEndpointMqttResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.KeepAliveSeconds == nil {
		keepAliveSeconds_ := 60
		tmp.KeepAliveSeconds = &keepAliveSeconds_
	}
	if tmp.MaxInflightMessages == nil {
		maxInflightMessages_ := 100
		tmp.MaxInflightMessages = &maxInflightMessages_
	}
	if tmp.Protocol == nil {
		protocol_ := "Mqtt"
		tmp.Protocol = &protocol_
	}
	if tmp.Qos == nil {
		qos_ := 1
		tmp.Qos = &qos_
	}
	if tmp.Retain == nil {
		retain_ := "Keep"
		tmp.Retain = &retain_
	}
	tmp.Tls = tmp.Tls.Defaults()

	return &tmp
}

// Broker endpoint properties
type DataflowEndpointMqttResponseOutput struct{ *pulumi.OutputState }

func (DataflowEndpointMqttResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataflowEndpointMqttResponse)(nil)).Elem()
}

func (o DataflowEndpointMqttResponseOutput) ToDataflowEndpointMqttResponseOutput() DataflowEndpointMqttResponseOutput {
	return o
}

func (o DataflowEndpointMqttResponseOutput) ToDataflowEndpointMqttResponseOutputWithContext(ctx context.Context) DataflowEndpointMqttResponseOutput {
	return o
}

// authentication properties. DEFAULT: kubernetes.audience=aio-internal. NOTE - Enum field only property is allowed
func (o DataflowEndpointMqttResponseOutput) Authentication() DataflowEndpointMqttAuthenticationResponseOutput {
	return o.ApplyT(func(v DataflowEndpointMqttResponse) DataflowEndpointMqttAuthenticationResponse {
		return v.Authentication
	}).(DataflowEndpointMqttAuthenticationResponseOutput)
}

// Client ID prefix. Client ID generated by the dataflow is <prefix>-TBD. Optional; no prefix if omitted.
func (o DataflowEndpointMqttResponseOutput) ClientIdPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataflowEndpointMqttResponse) *string { return v.ClientIdPrefix }).(pulumi.StringPtrOutput)
}

// Cloud event mapping config.
func (o DataflowEndpointMqttResponseOutput) CloudEventAttributes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataflowEndpointMqttResponse) *string { return v.CloudEventAttributes }).(pulumi.StringPtrOutput)
}

// Host of the Broker in the form of <hostname>:<port>. Optional; connects to Broker if omitted.
func (o DataflowEndpointMqttResponseOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataflowEndpointMqttResponse) *string { return v.Host }).(pulumi.StringPtrOutput)
}

// Broker KeepAlive for connection in seconds.
func (o DataflowEndpointMqttResponseOutput) KeepAliveSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DataflowEndpointMqttResponse) *int { return v.KeepAliveSeconds }).(pulumi.IntPtrOutput)
}

// The max number of messages to keep in flight. For subscribe, this is the receive maximum. For publish, this is the maximum number of messages to send before waiting for an ack.
func (o DataflowEndpointMqttResponseOutput) MaxInflightMessages() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DataflowEndpointMqttResponse) *int { return v.MaxInflightMessages }).(pulumi.IntPtrOutput)
}

// Enable or disable websockets.
func (o DataflowEndpointMqttResponseOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataflowEndpointMqttResponse) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

// Qos for Broker connection.
func (o DataflowEndpointMqttResponseOutput) Qos() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DataflowEndpointMqttResponse) *int { return v.Qos }).(pulumi.IntPtrOutput)
}

// Whether or not to keep the retain setting.
func (o DataflowEndpointMqttResponseOutput) Retain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataflowEndpointMqttResponse) *string { return v.Retain }).(pulumi.StringPtrOutput)
}

// Session expiry in seconds.
func (o DataflowEndpointMqttResponseOutput) SessionExpirySeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DataflowEndpointMqttResponse) *int { return v.SessionExpirySeconds }).(pulumi.IntPtrOutput)
}

// TLS configuration.
func (o DataflowEndpointMqttResponseOutput) Tls() TlsPropertiesResponsePtrOutput {
	return o.ApplyT(func(v DataflowEndpointMqttResponse) *TlsPropertiesResponse { return v.Tls }).(TlsPropertiesResponsePtrOutput)
}

type DataflowEndpointMqttResponsePtrOutput struct{ *pulumi.OutputState }

func (DataflowEndpointMqttResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataflowEndpointMqttResponse)(nil)).Elem()
}

func (o DataflowEndpointMqttResponsePtrOutput) ToDataflowEndpointMqttResponsePtrOutput() DataflowEndpointMqttResponsePtrOutput {
	return o
}

func (o DataflowEndpointMqttResponsePtrOutput) ToDataflowEndpointMqttResponsePtrOutputWithContext(ctx context.Context) DataflowEndpointMqttResponsePtrOutput {
	return o
}

func (o DataflowEndpointMqttResponsePtrOutput) Elem() DataflowEndpointMqttResponseOutput {
	return o.ApplyT(func(v *DataflowEndpointMqttResponse) DataflowEndpointMqttResponse {
		if v != nil {
			return *v
		}
		var ret DataflowEndpointMqttResponse
		return ret
	}).(DataflowEndpointMqttResponseOutput)
}

// authentication properties. DEFAULT: kubernetes.audience=aio-internal. NOTE - Enum field only property is allowed
func (o DataflowEndpointMqttResponsePtrOutput) Authentication() DataflowEndpointMqttAuthenticationResponsePtrOutput {
	return o.ApplyT(func(v *DataflowEndpointMqttResponse) *DataflowEndpointMqttAuthenticationResponse {
		if v == nil {
			return nil
		}
		return &v.Authentication
	}).(DataflowEndpointMqttAuthenticationResponsePtrOutput)
}

// Client ID prefix. Client ID generated by the dataflow is <prefix>-TBD. Optional; no prefix if omitted.
func (o DataflowEndpointMqttResponsePtrOutput) ClientIdPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataflowEndpointMqttResponse) *string {
		if v == nil {
			return nil
		}
		return v.ClientIdPrefix
	}).(pulumi.StringPtrOutput)
}

// Cloud event mapping config.
func (o DataflowEndpointMqttResponsePtrOutput) CloudEventAttributes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataflowEndpointMqttResponse) *string {
		if v == nil {
			return nil
		}
		return v.CloudEventAttributes
	}).(pulumi.StringPtrOutput)
}

// Host of the Broker in the form of <hostname>:<port>. Optional; connects to Broker if omitted.
func (o DataflowEndpointMqttResponsePtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataflowEndpointMqttResponse) *string {
		if v == nil {
			return nil
		}
		return v.Host
	}).(pulumi.StringPtrOutput)
}

// Broker KeepAlive for connection in seconds.
func (o DataflowEndpointMqttResponsePtrOutput) KeepAliveSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DataflowEndpointMqttResponse) *int {
		if v == nil {
			return nil
		}
		return v.KeepAliveSeconds
	}).(pulumi.IntPtrOutput)
}

// The max number of messages to keep in flight. For subscribe, this is the receive maximum. For publish, this is the maximum number of messages to send before waiting for an ack.
func (o DataflowEndpointMqttResponsePtrOutput) MaxInflightMessages() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DataflowEndpointMqttResponse) *int {
		if v == nil {
			return nil
		}
		return v.MaxInflightMessages
	}).(pulumi.IntPtrOutput)
}

// Enable or disable websockets.
func (o DataflowEndpointMqttResponsePtrOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataflowEndpointMqttResponse) *string {
		if v == nil {
			return nil
		}
		return v.Protocol
	}).(pulumi.StringPtrOutput)
}

// Qos for Broker connection.
func (o DataflowEndpointMqttResponsePtrOutput) Qos() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DataflowEndpointMqttResponse) *int {
		if v == nil {
			return nil
		}
		return v.Qos
	}).(pulumi.IntPtrOutput)
}

// Whether or not to keep the retain setting.
func (o DataflowEndpointMqttResponsePtrOutput) Retain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataflowEndpointMqttResponse) *string {
		if v == nil {
			return nil
		}
		return v.Retain
	}).(pulumi.StringPtrOutput)
}

// Session expiry in seconds.
func (o DataflowEndpointMqttResponsePtrOutput) SessionExpirySeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DataflowEndpointMqttResponse) *int {
		if v == nil {
			return nil
		}
		return v.SessionExpirySeconds
	}).(pulumi.IntPtrOutput)
}

// TLS configuration.
func (o DataflowEndpointMqttResponsePtrOutput) Tls() TlsPropertiesResponsePtrOutput {
	return o.ApplyT(func(v *DataflowEndpointMqttResponse) *TlsPropertiesResponse {
		if v == nil {
			return nil
		}
		return v.Tls
	}).(TlsPropertiesResponsePtrOutput)
}

// DataflowEndpoint Resource properties. NOTE - Only one type of endpoint is supported for one Resource
type DataflowEndpointProperties struct {
	// Azure Data Explorer endpoint.
	DataExplorerSettings *DataflowEndpointDataExplorer `pulumi:"dataExplorerSettings"`
	// Azure Data Lake endpoint.
	DataLakeStorageSettings *DataflowEndpointDataLakeStorage `pulumi:"dataLakeStorageSettings"`
	// Endpoint Type.
	EndpointType string `pulumi:"endpointType"`
	// Microsoft Fabric endpoint.
	FabricOneLakeSettings *DataflowEndpointFabricOneLake `pulumi:"fabricOneLakeSettings"`
	// Kafka endpoint.
	KafkaSettings *DataflowEndpointKafka `pulumi:"kafkaSettings"`
	// Local persistent volume endpoint.
	LocalStorageSettings *DataflowEndpointLocalStorage `pulumi:"localStorageSettings"`
	// Broker endpoint.
	MqttSettings *DataflowEndpointMqtt `pulumi:"mqttSettings"`
}

// Defaults sets the appropriate defaults for DataflowEndpointProperties
func (val *DataflowEndpointProperties) Defaults() *DataflowEndpointProperties {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.DataExplorerSettings = tmp.DataExplorerSettings.Defaults()

	tmp.DataLakeStorageSettings = tmp.DataLakeStorageSettings.Defaults()

	tmp.FabricOneLakeSettings = tmp.FabricOneLakeSettings.Defaults()

	tmp.KafkaSettings = tmp.KafkaSettings.Defaults()

	tmp.MqttSettings = tmp.MqttSettings.Defaults()

	return &tmp
}

// DataflowEndpointPropertiesInput is an input type that accepts DataflowEndpointPropertiesArgs and DataflowEndpointPropertiesOutput values.
// You can construct a concrete instance of `DataflowEndpointPropertiesInput` via:
//
//	DataflowEndpointPropertiesArgs{...}
type DataflowEndpointPropertiesInput interface {
	pulumi.Input

	ToDataflowEndpointPropertiesOutput() DataflowEndpointPropertiesOutput
	ToDataflowEndpointPropertiesOutputWithContext(context.Context) DataflowEndpointPropertiesOutput
}

// DataflowEndpoint Resource properties. NOTE - Only one type of endpoint is supported for one Resource
type DataflowEndpointPropertiesArgs struct {
	// Azure Data Explorer endpoint.
	DataExplorerSettings DataflowEndpointDataExplorerPtrInput `pulumi:"dataExplorerSettings"`
	// Azure Data Lake endpoint.
	DataLakeStorageSettings DataflowEndpointDataLakeStoragePtrInput `pulumi:"dataLakeStorageSettings"`
	// Endpoint Type.
	EndpointType pulumi.StringInput `pulumi:"endpointType"`
	// Microsoft Fabric endpoint.
	FabricOneLakeSettings DataflowEndpointFabricOneLakePtrInput `pulumi:"fabricOneLakeSettings"`
	// Kafka endpoint.
	KafkaSettings DataflowEndpointKafkaPtrInput `pulumi:"kafkaSettings"`
	// Local persistent volume endpoint.
	LocalStorageSettings DataflowEndpointLocalStoragePtrInput `pulumi:"localStorageSettings"`
	// Broker endpoint.
	MqttSettings DataflowEndpointMqttPtrInput `pulumi:"mqttSettings"`
}

// Defaults sets the appropriate defaults for DataflowEndpointPropertiesArgs
func (val *DataflowEndpointPropertiesArgs) Defaults() *DataflowEndpointPropertiesArgs {
	if val == nil {
		return nil
	}
	tmp := *val

	return &tmp
}
func (DataflowEndpointPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataflowEndpointProperties)(nil)).Elem()
}

func (i DataflowEndpointPropertiesArgs) ToDataflowEndpointPropertiesOutput() DataflowEndpointPropertiesOutput {
	return i.ToDataflowEndpointPropertiesOutputWithContext(context.Background())
}

func (i DataflowEndpointPropertiesArgs) ToDataflowEndpointPropertiesOutputWithContext(ctx context.Context) DataflowEndpointPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataflowEndpointPropertiesOutput)
}

func (i DataflowEndpointPropertiesArgs) ToDataflowEndpointPropertiesPtrOutput() DataflowEndpointPropertiesPtrOutput {
	return i.ToDataflowEndpointPropertiesPtrOutputWithContext(context.Background())
}

func (i DataflowEndpointPropertiesArgs) ToDataflowEndpointPropertiesPtrOutputWithContext(ctx context.Context) DataflowEndpointPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataflowEndpointPropertiesOutput).ToDataflowEndpointPropertiesPtrOutputWithContext(ctx)
}

// DataflowEndpointPropertiesPtrInput is an input type that accepts DataflowEndpointPropertiesArgs, DataflowEndpointPropertiesPtr and DataflowEndpointPropertiesPtrOutput values.
// You can construct a concrete instance of `DataflowEndpointPropertiesPtrInput` via:
//
//	        DataflowEndpointPropertiesArgs{...}
//
//	or:
//
//	        nil
type DataflowEndpointPropertiesPtrInput interface {
	pulumi.Input

	ToDataflowEndpointPropertiesPtrOutput() DataflowEndpointPropertiesPtrOutput
	ToDataflowEndpointPropertiesPtrOutputWithContext(context.Context) DataflowEndpointPropertiesPtrOutput
}

type dataflowEndpointPropertiesPtrType DataflowEndpointPropertiesArgs

func DataflowEndpointPropertiesPtr(v *DataflowEndpointPropertiesArgs) DataflowEndpointPropertiesPtrInput {
	return (*dataflowEndpointPropertiesPtrType)(v)
}

func (*dataflowEndpointPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataflowEndpointProperties)(nil)).Elem()
}

func (i *dataflowEndpointPropertiesPtrType) ToDataflowEndpointPropertiesPtrOutput() DataflowEndpointPropertiesPtrOutput {
	return i.ToDataflowEndpointPropertiesPtrOutputWithContext(context.Background())
}

func (i *dataflowEndpointPropertiesPtrType) ToDataflowEndpointPropertiesPtrOutputWithContext(ctx context.Context) DataflowEndpointPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataflowEndpointPropertiesPtrOutput)
}

// DataflowEndpoint Resource properties. NOTE - Only one type of endpoint is supported for one Resource
type DataflowEndpointPropertiesOutput struct{ *pulumi.OutputState }

func (DataflowEndpointPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataflowEndpointProperties)(nil)).Elem()
}

func (o DataflowEndpointPropertiesOutput) ToDataflowEndpointPropertiesOutput() DataflowEndpointPropertiesOutput {
	return o
}

func (o DataflowEndpointPropertiesOutput) ToDataflowEndpointPropertiesOutputWithContext(ctx context.Context) DataflowEndpointPropertiesOutput {
	return o
}

func (o DataflowEndpointPropertiesOutput) ToDataflowEndpointPropertiesPtrOutput() DataflowEndpointPropertiesPtrOutput {
	return o.ToDataflowEndpointPropertiesPtrOutputWithContext(context.Background())
}

func (o DataflowEndpointPropertiesOutput) ToDataflowEndpointPropertiesPtrOutputWithContext(ctx context.Context) DataflowEndpointPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataflowEndpointProperties) *DataflowEndpointProperties {
		return &v
	}).(DataflowEndpointPropertiesPtrOutput)
}

// Azure Data Explorer endpoint.
func (o DataflowEndpointPropertiesOutput) DataExplorerSettings() DataflowEndpointDataExplorerPtrOutput {
	return o.ApplyT(func(v DataflowEndpointProperties) *DataflowEndpointDataExplorer { return v.DataExplorerSettings }).(DataflowEndpointDataExplorerPtrOutput)
}

// Azure Data Lake endpoint.
func (o DataflowEndpointPropertiesOutput) DataLakeStorageSettings() DataflowEndpointDataLakeStoragePtrOutput {
	return o.ApplyT(func(v DataflowEndpointProperties) *DataflowEndpointDataLakeStorage { return v.DataLakeStorageSettings }).(DataflowEndpointDataLakeStoragePtrOutput)
}

// Endpoint Type.
func (o DataflowEndpointPropertiesOutput) EndpointType() pulumi.StringOutput {
	return o.ApplyT(func(v DataflowEndpointProperties) string { return v.EndpointType }).(pulumi.StringOutput)
}

// Microsoft Fabric endpoint.
func (o DataflowEndpointPropertiesOutput) FabricOneLakeSettings() DataflowEndpointFabricOneLakePtrOutput {
	return o.ApplyT(func(v DataflowEndpointProperties) *DataflowEndpointFabricOneLake { return v.FabricOneLakeSettings }).(DataflowEndpointFabricOneLakePtrOutput)
}

// Kafka endpoint.
func (o DataflowEndpointPropertiesOutput) KafkaSettings() DataflowEndpointKafkaPtrOutput {
	return o.ApplyT(func(v DataflowEndpointProperties) *DataflowEndpointKafka { return v.KafkaSettings }).(DataflowEndpointKafkaPtrOutput)
}

// Local persistent volume endpoint.
func (o DataflowEndpointPropertiesOutput) LocalStorageSettings() DataflowEndpointLocalStoragePtrOutput {
	return o.ApplyT(func(v DataflowEndpointProperties) *DataflowEndpointLocalStorage { return v.LocalStorageSettings }).(DataflowEndpointLocalStoragePtrOutput)
}

// Broker endpoint.
func (o DataflowEndpointPropertiesOutput) MqttSettings() DataflowEndpointMqttPtrOutput {
	return o.ApplyT(func(v DataflowEndpointProperties) *DataflowEndpointMqtt { return v.MqttSettings }).(DataflowEndpointMqttPtrOutput)
}

type DataflowEndpointPropertiesPtrOutput struct{ *pulumi.OutputState }

func (DataflowEndpointPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataflowEndpointProperties)(nil)).Elem()
}

func (o DataflowEndpointPropertiesPtrOutput) ToDataflowEndpointPropertiesPtrOutput() DataflowEndpointPropertiesPtrOutput {
	return o
}

func (o DataflowEndpointPropertiesPtrOutput) ToDataflowEndpointPropertiesPtrOutputWithContext(ctx context.Context) DataflowEndpointPropertiesPtrOutput {
	return o
}

func (o DataflowEndpointPropertiesPtrOutput) Elem() DataflowEndpointPropertiesOutput {
	return o.ApplyT(func(v *DataflowEndpointProperties) DataflowEndpointProperties {
		if v != nil {
			return *v
		}
		var ret DataflowEndpointProperties
		return ret
	}).(DataflowEndpointPropertiesOutput)
}

// Azure Data Explorer endpoint.
func (o DataflowEndpointPropertiesPtrOutput) DataExplorerSettings() DataflowEndpointDataExplorerPtrOutput {
	return o.ApplyT(func(v *DataflowEndpointProperties) *DataflowEndpointDataExplorer {
		if v == nil {
			return nil
		}
		return v.DataExplorerSettings
	}).(DataflowEndpointDataExplorerPtrOutput)
}

// Azure Data Lake endpoint.
func (o DataflowEndpointPropertiesPtrOutput) DataLakeStorageSettings() DataflowEndpointDataLakeStoragePtrOutput {
	return o.ApplyT(func(v *DataflowEndpointProperties) *DataflowEndpointDataLakeStorage {
		if v == nil {
			return nil
		}
		return v.DataLakeStorageSettings
	}).(DataflowEndpointDataLakeStoragePtrOutput)
}

// Endpoint Type.
func (o DataflowEndpointPropertiesPtrOutput) EndpointType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataflowEndpointProperties) *string {
		if v == nil {
			return nil
		}
		return &v.EndpointType
	}).(pulumi.StringPtrOutput)
}

// Microsoft Fabric endpoint.
func (o DataflowEndpointPropertiesPtrOutput) FabricOneLakeSettings() DataflowEndpointFabricOneLakePtrOutput {
	return o.ApplyT(func(v *DataflowEndpointProperties) *DataflowEndpointFabricOneLake {
		if v == nil {
			return nil
		}
		return v.FabricOneLakeSettings
	}).(DataflowEndpointFabricOneLakePtrOutput)
}

// Kafka endpoint.
func (o DataflowEndpointPropertiesPtrOutput) KafkaSettings() DataflowEndpointKafkaPtrOutput {
	return o.ApplyT(func(v *DataflowEndpointProperties) *DataflowEndpointKafka {
		if v == nil {
			return nil
		}
		return v.KafkaSettings
	}).(DataflowEndpointKafkaPtrOutput)
}

// Local persistent volume endpoint.
func (o DataflowEndpointPropertiesPtrOutput) LocalStorageSettings() DataflowEndpointLocalStoragePtrOutput {
	return o.ApplyT(func(v *DataflowEndpointProperties) *DataflowEndpointLocalStorage {
		if v == nil {
			return nil
		}
		return v.LocalStorageSettings
	}).(DataflowEndpointLocalStoragePtrOutput)
}

// Broker endpoint.
func (o DataflowEndpointPropertiesPtrOutput) MqttSettings() DataflowEndpointMqttPtrOutput {
	return o.ApplyT(func(v *DataflowEndpointProperties) *DataflowEndpointMqtt {
		if v == nil {
			return nil
		}
		return v.MqttSettings
	}).(DataflowEndpointMqttPtrOutput)
}

// DataflowEndpoint Resource properties. NOTE - Only one type of endpoint is supported for one Resource
type DataflowEndpointPropertiesResponse struct {
	// Azure Data Explorer endpoint.
	DataExplorerSettings *DataflowEndpointDataExplorerResponse `pulumi:"dataExplorerSettings"`
	// Azure Data Lake endpoint.
	DataLakeStorageSettings *DataflowEndpointDataLakeStorageResponse `pulumi:"dataLakeStorageSettings"`
	// Endpoint Type.
	EndpointType string `pulumi:"endpointType"`
	// Microsoft Fabric endpoint.
	FabricOneLakeSettings *DataflowEndpointFabricOneLakeResponse `pulumi:"fabricOneLakeSettings"`
	// Kafka endpoint.
	KafkaSettings *DataflowEndpointKafkaResponse `pulumi:"kafkaSettings"`
	// Local persistent volume endpoint.
	LocalStorageSettings *DataflowEndpointLocalStorageResponse `pulumi:"localStorageSettings"`
	// Broker endpoint.
	MqttSettings *DataflowEndpointMqttResponse `pulumi:"mqttSettings"`
	// The status of the last operation.
	ProvisioningState string `pulumi:"provisioningState"`
}

// Defaults sets the appropriate defaults for DataflowEndpointPropertiesResponse
func (val *DataflowEndpointPropertiesResponse) Defaults() *DataflowEndpointPropertiesResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.DataExplorerSettings = tmp.DataExplorerSettings.Defaults()

	tmp.DataLakeStorageSettings = tmp.DataLakeStorageSettings.Defaults()

	tmp.FabricOneLakeSettings = tmp.FabricOneLakeSettings.Defaults()

	tmp.KafkaSettings = tmp.KafkaSettings.Defaults()

	tmp.MqttSettings = tmp.MqttSettings.Defaults()

	return &tmp
}

// DataflowEndpoint Resource properties. NOTE - Only one type of endpoint is supported for one Resource
type DataflowEndpointPropertiesResponseOutput struct{ *pulumi.OutputState }

func (DataflowEndpointPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataflowEndpointPropertiesResponse)(nil)).Elem()
}

func (o DataflowEndpointPropertiesResponseOutput) ToDataflowEndpointPropertiesResponseOutput() DataflowEndpointPropertiesResponseOutput {
	return o
}

func (o DataflowEndpointPropertiesResponseOutput) ToDataflowEndpointPropertiesResponseOutputWithContext(ctx context.Context) DataflowEndpointPropertiesResponseOutput {
	return o
}

// Azure Data Explorer endpoint.
func (o DataflowEndpointPropertiesResponseOutput) DataExplorerSettings() DataflowEndpointDataExplorerResponsePtrOutput {
	return o.ApplyT(func(v DataflowEndpointPropertiesResponse) *DataflowEndpointDataExplorerResponse {
		return v.DataExplorerSettings
	}).(DataflowEndpointDataExplorerResponsePtrOutput)
}

// Azure Data Lake endpoint.
func (o DataflowEndpointPropertiesResponseOutput) DataLakeStorageSettings() DataflowEndpointDataLakeStorageResponsePtrOutput {
	return o.ApplyT(func(v DataflowEndpointPropertiesResponse) *DataflowEndpointDataLakeStorageResponse {
		return v.DataLakeStorageSettings
	}).(DataflowEndpointDataLakeStorageResponsePtrOutput)
}

// Endpoint Type.
func (o DataflowEndpointPropertiesResponseOutput) EndpointType() pulumi.StringOutput {
	return o.ApplyT(func(v DataflowEndpointPropertiesResponse) string { return v.EndpointType }).(pulumi.StringOutput)
}

// Microsoft Fabric endpoint.
func (o DataflowEndpointPropertiesResponseOutput) FabricOneLakeSettings() DataflowEndpointFabricOneLakeResponsePtrOutput {
	return o.ApplyT(func(v DataflowEndpointPropertiesResponse) *DataflowEndpointFabricOneLakeResponse {
		return v.FabricOneLakeSettings
	}).(DataflowEndpointFabricOneLakeResponsePtrOutput)
}

// Kafka endpoint.
func (o DataflowEndpointPropertiesResponseOutput) KafkaSettings() DataflowEndpointKafkaResponsePtrOutput {
	return o.ApplyT(func(v DataflowEndpointPropertiesResponse) *DataflowEndpointKafkaResponse { return v.KafkaSettings }).(DataflowEndpointKafkaResponsePtrOutput)
}

// Local persistent volume endpoint.
func (o DataflowEndpointPropertiesResponseOutput) LocalStorageSettings() DataflowEndpointLocalStorageResponsePtrOutput {
	return o.ApplyT(func(v DataflowEndpointPropertiesResponse) *DataflowEndpointLocalStorageResponse {
		return v.LocalStorageSettings
	}).(DataflowEndpointLocalStorageResponsePtrOutput)
}

// Broker endpoint.
func (o DataflowEndpointPropertiesResponseOutput) MqttSettings() DataflowEndpointMqttResponsePtrOutput {
	return o.ApplyT(func(v DataflowEndpointPropertiesResponse) *DataflowEndpointMqttResponse { return v.MqttSettings }).(DataflowEndpointMqttResponsePtrOutput)
}

// The status of the last operation.
func (o DataflowEndpointPropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v DataflowEndpointPropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// DataflowGraph DataflowGraphNode Connection Input.
type DataflowGraphConnectionInput struct {
	// Name of the input node.
	Name string `pulumi:"name"`
	// Schema settings for the input node.
	Schema *DataflowGraphConnectionSchemaSettings `pulumi:"schema"`
}

// DataflowGraphConnectionInputInput is an input type that accepts DataflowGraphConnectionInputArgs and DataflowGraphConnectionInputOutput values.
// You can construct a concrete instance of `DataflowGraphConnectionInputInput` via:
//
//	DataflowGraphConnectionInputArgs{...}
type DataflowGraphConnectionInputInput interface {
	pulumi.Input

	ToDataflowGraphConnectionInputOutput() DataflowGraphConnectionInputOutput
	ToDataflowGraphConnectionInputOutputWithContext(context.Context) DataflowGraphConnectionInputOutput
}

// DataflowGraph DataflowGraphNode Connection Input.
type DataflowGraphConnectionInputArgs struct {
	// Name of the input node.
	Name pulumi.StringInput `pulumi:"name"`
	// Schema settings for the input node.
	Schema DataflowGraphConnectionSchemaSettingsPtrInput `pulumi:"schema"`
}

func (DataflowGraphConnectionInputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataflowGraphConnectionInput)(nil)).Elem()
}

func (i DataflowGraphConnectionInputArgs) ToDataflowGraphConnectionInputOutput() DataflowGraphConnectionInputOutput {
	return i.ToDataflowGraphConnectionInputOutputWithContext(context.Background())
}

func (i DataflowGraphConnectionInputArgs) ToDataflowGraphConnectionInputOutputWithContext(ctx context.Context) DataflowGraphConnectionInputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataflowGraphConnectionInputOutput)
}

// DataflowGraph DataflowGraphNode Connection Input.
type DataflowGraphConnectionInputOutput struct{ *pulumi.OutputState }

func (DataflowGraphConnectionInputOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataflowGraphConnectionInput)(nil)).Elem()
}

func (o DataflowGraphConnectionInputOutput) ToDataflowGraphConnectionInputOutput() DataflowGraphConnectionInputOutput {
	return o
}

func (o DataflowGraphConnectionInputOutput) ToDataflowGraphConnectionInputOutputWithContext(ctx context.Context) DataflowGraphConnectionInputOutput {
	return o
}

// Name of the input node.
func (o DataflowGraphConnectionInputOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DataflowGraphConnectionInput) string { return v.Name }).(pulumi.StringOutput)
}

// Schema settings for the input node.
func (o DataflowGraphConnectionInputOutput) Schema() DataflowGraphConnectionSchemaSettingsPtrOutput {
	return o.ApplyT(func(v DataflowGraphConnectionInput) *DataflowGraphConnectionSchemaSettings { return v.Schema }).(DataflowGraphConnectionSchemaSettingsPtrOutput)
}

// DataflowGraph DataflowGraphNode Connection Input.
type DataflowGraphConnectionInputResponse struct {
	// Name of the input node.
	Name string `pulumi:"name"`
	// Schema settings for the input node.
	Schema *DataflowGraphConnectionSchemaSettingsResponse `pulumi:"schema"`
}

// DataflowGraph DataflowGraphNode Connection Input.
type DataflowGraphConnectionInputResponseOutput struct{ *pulumi.OutputState }

func (DataflowGraphConnectionInputResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataflowGraphConnectionInputResponse)(nil)).Elem()
}

func (o DataflowGraphConnectionInputResponseOutput) ToDataflowGraphConnectionInputResponseOutput() DataflowGraphConnectionInputResponseOutput {
	return o
}

func (o DataflowGraphConnectionInputResponseOutput) ToDataflowGraphConnectionInputResponseOutputWithContext(ctx context.Context) DataflowGraphConnectionInputResponseOutput {
	return o
}

// Name of the input node.
func (o DataflowGraphConnectionInputResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DataflowGraphConnectionInputResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Schema settings for the input node.
func (o DataflowGraphConnectionInputResponseOutput) Schema() DataflowGraphConnectionSchemaSettingsResponsePtrOutput {
	return o.ApplyT(func(v DataflowGraphConnectionInputResponse) *DataflowGraphConnectionSchemaSettingsResponse {
		return v.Schema
	}).(DataflowGraphConnectionSchemaSettingsResponsePtrOutput)
}

// DataflowGraph DataflowGraphNode Connection Output.
type DataflowGraphConnectionOutput struct {
	// Name of the destination node.
	Name string `pulumi:"name"`
}

// DataflowGraphConnectionOutputInput is an input type that accepts DataflowGraphConnectionOutputArgs and DataflowGraphConnectionOutputOutput values.
// You can construct a concrete instance of `DataflowGraphConnectionOutputInput` via:
//
//	DataflowGraphConnectionOutputArgs{...}
type DataflowGraphConnectionOutputInput interface {
	pulumi.Input

	ToDataflowGraphConnectionOutputOutput() DataflowGraphConnectionOutputOutput
	ToDataflowGraphConnectionOutputOutputWithContext(context.Context) DataflowGraphConnectionOutputOutput
}

// DataflowGraph DataflowGraphNode Connection Output.
type DataflowGraphConnectionOutputArgs struct {
	// Name of the destination node.
	Name pulumi.StringInput `pulumi:"name"`
}

func (DataflowGraphConnectionOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataflowGraphConnectionOutput)(nil)).Elem()
}

func (i DataflowGraphConnectionOutputArgs) ToDataflowGraphConnectionOutputOutput() DataflowGraphConnectionOutputOutput {
	return i.ToDataflowGraphConnectionOutputOutputWithContext(context.Background())
}

func (i DataflowGraphConnectionOutputArgs) ToDataflowGraphConnectionOutputOutputWithContext(ctx context.Context) DataflowGraphConnectionOutputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataflowGraphConnectionOutputOutput)
}

// DataflowGraph DataflowGraphNode Connection Output.
type DataflowGraphConnectionOutputOutput struct{ *pulumi.OutputState }

func (DataflowGraphConnectionOutputOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataflowGraphConnectionOutput)(nil)).Elem()
}

func (o DataflowGraphConnectionOutputOutput) ToDataflowGraphConnectionOutputOutput() DataflowGraphConnectionOutputOutput {
	return o
}

func (o DataflowGraphConnectionOutputOutput) ToDataflowGraphConnectionOutputOutputWithContext(ctx context.Context) DataflowGraphConnectionOutputOutput {
	return o
}

// Name of the destination node.
func (o DataflowGraphConnectionOutputOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DataflowGraphConnectionOutput) string { return v.Name }).(pulumi.StringOutput)
}

// DataflowGraph DataflowGraphNode Connection Output.
type DataflowGraphConnectionOutputResponse struct {
	// Name of the destination node.
	Name string `pulumi:"name"`
}

// DataflowGraph DataflowGraphNode Connection Output.
type DataflowGraphConnectionOutputResponseOutput struct{ *pulumi.OutputState }

func (DataflowGraphConnectionOutputResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataflowGraphConnectionOutputResponse)(nil)).Elem()
}

func (o DataflowGraphConnectionOutputResponseOutput) ToDataflowGraphConnectionOutputResponseOutput() DataflowGraphConnectionOutputResponseOutput {
	return o
}

func (o DataflowGraphConnectionOutputResponseOutput) ToDataflowGraphConnectionOutputResponseOutputWithContext(ctx context.Context) DataflowGraphConnectionOutputResponseOutput {
	return o
}

// Name of the destination node.
func (o DataflowGraphConnectionOutputResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DataflowGraphConnectionOutputResponse) string { return v.Name }).(pulumi.StringOutput)
}

// DataflowGraph connection node output schema settings.
type DataflowGraphConnectionSchemaSettings struct {
	// Reference to the schema that describes the output of the transformation.
	SchemaRef *string `pulumi:"schemaRef"`
	// Output serialization format.
	SerializationFormat *string `pulumi:"serializationFormat"`
}

// DataflowGraphConnectionSchemaSettingsInput is an input type that accepts DataflowGraphConnectionSchemaSettingsArgs and DataflowGraphConnectionSchemaSettingsOutput values.
// You can construct a concrete instance of `DataflowGraphConnectionSchemaSettingsInput` via:
//
//	DataflowGraphConnectionSchemaSettingsArgs{...}
type DataflowGraphConnectionSchemaSettingsInput interface {
	pulumi.Input

	ToDataflowGraphConnectionSchemaSettingsOutput() DataflowGraphConnectionSchemaSettingsOutput
	ToDataflowGraphConnectionSchemaSettingsOutputWithContext(context.Context) DataflowGraphConnectionSchemaSettingsOutput
}

// DataflowGraph connection node output schema settings.
type DataflowGraphConnectionSchemaSettingsArgs struct {
	// Reference to the schema that describes the output of the transformation.
	SchemaRef pulumi.StringPtrInput `pulumi:"schemaRef"`
	// Output serialization format.
	SerializationFormat pulumi.StringPtrInput `pulumi:"serializationFormat"`
}

func (DataflowGraphConnectionSchemaSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataflowGraphConnectionSchemaSettings)(nil)).Elem()
}

func (i DataflowGraphConnectionSchemaSettingsArgs) ToDataflowGraphConnectionSchemaSettingsOutput() DataflowGraphConnectionSchemaSettingsOutput {
	return i.ToDataflowGraphConnectionSchemaSettingsOutputWithContext(context.Background())
}

func (i DataflowGraphConnectionSchemaSettingsArgs) ToDataflowGraphConnectionSchemaSettingsOutputWithContext(ctx context.Context) DataflowGraphConnectionSchemaSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataflowGraphConnectionSchemaSettingsOutput)
}

func (i DataflowGraphConnectionSchemaSettingsArgs) ToDataflowGraphConnectionSchemaSettingsPtrOutput() DataflowGraphConnectionSchemaSettingsPtrOutput {
	return i.ToDataflowGraphConnectionSchemaSettingsPtrOutputWithContext(context.Background())
}

func (i DataflowGraphConnectionSchemaSettingsArgs) ToDataflowGraphConnectionSchemaSettingsPtrOutputWithContext(ctx context.Context) DataflowGraphConnectionSchemaSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataflowGraphConnectionSchemaSettingsOutput).ToDataflowGraphConnectionSchemaSettingsPtrOutputWithContext(ctx)
}

// DataflowGraphConnectionSchemaSettingsPtrInput is an input type that accepts DataflowGraphConnectionSchemaSettingsArgs, DataflowGraphConnectionSchemaSettingsPtr and DataflowGraphConnectionSchemaSettingsPtrOutput values.
// You can construct a concrete instance of `DataflowGraphConnectionSchemaSettingsPtrInput` via:
//
//	        DataflowGraphConnectionSchemaSettingsArgs{...}
//
//	or:
//
//	        nil
type DataflowGraphConnectionSchemaSettingsPtrInput interface {
	pulumi.Input

	ToDataflowGraphConnectionSchemaSettingsPtrOutput() DataflowGraphConnectionSchemaSettingsPtrOutput
	ToDataflowGraphConnectionSchemaSettingsPtrOutputWithContext(context.Context) DataflowGraphConnectionSchemaSettingsPtrOutput
}

type dataflowGraphConnectionSchemaSettingsPtrType DataflowGraphConnectionSchemaSettingsArgs

func DataflowGraphConnectionSchemaSettingsPtr(v *DataflowGraphConnectionSchemaSettingsArgs) DataflowGraphConnectionSchemaSettingsPtrInput {
	return (*dataflowGraphConnectionSchemaSettingsPtrType)(v)
}

func (*dataflowGraphConnectionSchemaSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataflowGraphConnectionSchemaSettings)(nil)).Elem()
}

func (i *dataflowGraphConnectionSchemaSettingsPtrType) ToDataflowGraphConnectionSchemaSettingsPtrOutput() DataflowGraphConnectionSchemaSettingsPtrOutput {
	return i.ToDataflowGraphConnectionSchemaSettingsPtrOutputWithContext(context.Background())
}

func (i *dataflowGraphConnectionSchemaSettingsPtrType) ToDataflowGraphConnectionSchemaSettingsPtrOutputWithContext(ctx context.Context) DataflowGraphConnectionSchemaSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataflowGraphConnectionSchemaSettingsPtrOutput)
}

// DataflowGraph connection node output schema settings.
type DataflowGraphConnectionSchemaSettingsOutput struct{ *pulumi.OutputState }

func (DataflowGraphConnectionSchemaSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataflowGraphConnectionSchemaSettings)(nil)).Elem()
}

func (o DataflowGraphConnectionSchemaSettingsOutput) ToDataflowGraphConnectionSchemaSettingsOutput() DataflowGraphConnectionSchemaSettingsOutput {
	return o
}

func (o DataflowGraphConnectionSchemaSettingsOutput) ToDataflowGraphConnectionSchemaSettingsOutputWithContext(ctx context.Context) DataflowGraphConnectionSchemaSettingsOutput {
	return o
}

func (o DataflowGraphConnectionSchemaSettingsOutput) ToDataflowGraphConnectionSchemaSettingsPtrOutput() DataflowGraphConnectionSchemaSettingsPtrOutput {
	return o.ToDataflowGraphConnectionSchemaSettingsPtrOutputWithContext(context.Background())
}

func (o DataflowGraphConnectionSchemaSettingsOutput) ToDataflowGraphConnectionSchemaSettingsPtrOutputWithContext(ctx context.Context) DataflowGraphConnectionSchemaSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataflowGraphConnectionSchemaSettings) *DataflowGraphConnectionSchemaSettings {
		return &v
	}).(DataflowGraphConnectionSchemaSettingsPtrOutput)
}

// Reference to the schema that describes the output of the transformation.
func (o DataflowGraphConnectionSchemaSettingsOutput) SchemaRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataflowGraphConnectionSchemaSettings) *string { return v.SchemaRef }).(pulumi.StringPtrOutput)
}

// Output serialization format.
func (o DataflowGraphConnectionSchemaSettingsOutput) SerializationFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataflowGraphConnectionSchemaSettings) *string { return v.SerializationFormat }).(pulumi.StringPtrOutput)
}

type DataflowGraphConnectionSchemaSettingsPtrOutput struct{ *pulumi.OutputState }

func (DataflowGraphConnectionSchemaSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataflowGraphConnectionSchemaSettings)(nil)).Elem()
}

func (o DataflowGraphConnectionSchemaSettingsPtrOutput) ToDataflowGraphConnectionSchemaSettingsPtrOutput() DataflowGraphConnectionSchemaSettingsPtrOutput {
	return o
}

func (o DataflowGraphConnectionSchemaSettingsPtrOutput) ToDataflowGraphConnectionSchemaSettingsPtrOutputWithContext(ctx context.Context) DataflowGraphConnectionSchemaSettingsPtrOutput {
	return o
}

func (o DataflowGraphConnectionSchemaSettingsPtrOutput) Elem() DataflowGraphConnectionSchemaSettingsOutput {
	return o.ApplyT(func(v *DataflowGraphConnectionSchemaSettings) DataflowGraphConnectionSchemaSettings {
		if v != nil {
			return *v
		}
		var ret DataflowGraphConnectionSchemaSettings
		return ret
	}).(DataflowGraphConnectionSchemaSettingsOutput)
}

// Reference to the schema that describes the output of the transformation.
func (o DataflowGraphConnectionSchemaSettingsPtrOutput) SchemaRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataflowGraphConnectionSchemaSettings) *string {
		if v == nil {
			return nil
		}
		return v.SchemaRef
	}).(pulumi.StringPtrOutput)
}

// Output serialization format.
func (o DataflowGraphConnectionSchemaSettingsPtrOutput) SerializationFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataflowGraphConnectionSchemaSettings) *string {
		if v == nil {
			return nil
		}
		return v.SerializationFormat
	}).(pulumi.StringPtrOutput)
}

// DataflowGraph connection node output schema settings.
type DataflowGraphConnectionSchemaSettingsResponse struct {
	// Reference to the schema that describes the output of the transformation.
	SchemaRef *string `pulumi:"schemaRef"`
	// Output serialization format.
	SerializationFormat *string `pulumi:"serializationFormat"`
}

// DataflowGraph connection node output schema settings.
type DataflowGraphConnectionSchemaSettingsResponseOutput struct{ *pulumi.OutputState }

func (DataflowGraphConnectionSchemaSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataflowGraphConnectionSchemaSettingsResponse)(nil)).Elem()
}

func (o DataflowGraphConnectionSchemaSettingsResponseOutput) ToDataflowGraphConnectionSchemaSettingsResponseOutput() DataflowGraphConnectionSchemaSettingsResponseOutput {
	return o
}

func (o DataflowGraphConnectionSchemaSettingsResponseOutput) ToDataflowGraphConnectionSchemaSettingsResponseOutputWithContext(ctx context.Context) DataflowGraphConnectionSchemaSettingsResponseOutput {
	return o
}

// Reference to the schema that describes the output of the transformation.
func (o DataflowGraphConnectionSchemaSettingsResponseOutput) SchemaRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataflowGraphConnectionSchemaSettingsResponse) *string { return v.SchemaRef }).(pulumi.StringPtrOutput)
}

// Output serialization format.
func (o DataflowGraphConnectionSchemaSettingsResponseOutput) SerializationFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataflowGraphConnectionSchemaSettingsResponse) *string { return v.SerializationFormat }).(pulumi.StringPtrOutput)
}

type DataflowGraphConnectionSchemaSettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (DataflowGraphConnectionSchemaSettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataflowGraphConnectionSchemaSettingsResponse)(nil)).Elem()
}

func (o DataflowGraphConnectionSchemaSettingsResponsePtrOutput) ToDataflowGraphConnectionSchemaSettingsResponsePtrOutput() DataflowGraphConnectionSchemaSettingsResponsePtrOutput {
	return o
}

func (o DataflowGraphConnectionSchemaSettingsResponsePtrOutput) ToDataflowGraphConnectionSchemaSettingsResponsePtrOutputWithContext(ctx context.Context) DataflowGraphConnectionSchemaSettingsResponsePtrOutput {
	return o
}

func (o DataflowGraphConnectionSchemaSettingsResponsePtrOutput) Elem() DataflowGraphConnectionSchemaSettingsResponseOutput {
	return o.ApplyT(func(v *DataflowGraphConnectionSchemaSettingsResponse) DataflowGraphConnectionSchemaSettingsResponse {
		if v != nil {
			return *v
		}
		var ret DataflowGraphConnectionSchemaSettingsResponse
		return ret
	}).(DataflowGraphConnectionSchemaSettingsResponseOutput)
}

// Reference to the schema that describes the output of the transformation.
func (o DataflowGraphConnectionSchemaSettingsResponsePtrOutput) SchemaRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataflowGraphConnectionSchemaSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.SchemaRef
	}).(pulumi.StringPtrOutput)
}

// Output serialization format.
func (o DataflowGraphConnectionSchemaSettingsResponsePtrOutput) SerializationFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataflowGraphConnectionSchemaSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.SerializationFormat
	}).(pulumi.StringPtrOutput)
}

// DataflowGraph destination node properties.
type DataflowGraphDestinationNode struct {
	// Destination configuration.
	DestinationSettings DataflowGraphDestinationNodeSettings `pulumi:"destinationSettings"`
	// Name of the node.
	Name string `pulumi:"name"`
	// DataflowGraph node types.
	// Expected value is 'Destination'.
	NodeType string `pulumi:"nodeType"`
}

// DataflowGraphDestinationNodeInput is an input type that accepts DataflowGraphDestinationNodeArgs and DataflowGraphDestinationNodeOutput values.
// You can construct a concrete instance of `DataflowGraphDestinationNodeInput` via:
//
//	DataflowGraphDestinationNodeArgs{...}
type DataflowGraphDestinationNodeInput interface {
	pulumi.Input

	ToDataflowGraphDestinationNodeOutput() DataflowGraphDestinationNodeOutput
	ToDataflowGraphDestinationNodeOutputWithContext(context.Context) DataflowGraphDestinationNodeOutput
}

// DataflowGraph destination node properties.
type DataflowGraphDestinationNodeArgs struct {
	// Destination configuration.
	DestinationSettings DataflowGraphDestinationNodeSettingsInput `pulumi:"destinationSettings"`
	// Name of the node.
	Name pulumi.StringInput `pulumi:"name"`
	// DataflowGraph node types.
	// Expected value is 'Destination'.
	NodeType pulumi.StringInput `pulumi:"nodeType"`
}

func (DataflowGraphDestinationNodeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataflowGraphDestinationNode)(nil)).Elem()
}

func (i DataflowGraphDestinationNodeArgs) ToDataflowGraphDestinationNodeOutput() DataflowGraphDestinationNodeOutput {
	return i.ToDataflowGraphDestinationNodeOutputWithContext(context.Background())
}

func (i DataflowGraphDestinationNodeArgs) ToDataflowGraphDestinationNodeOutputWithContext(ctx context.Context) DataflowGraphDestinationNodeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataflowGraphDestinationNodeOutput)
}

// DataflowGraph destination node properties.
type DataflowGraphDestinationNodeOutput struct{ *pulumi.OutputState }

func (DataflowGraphDestinationNodeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataflowGraphDestinationNode)(nil)).Elem()
}

func (o DataflowGraphDestinationNodeOutput) ToDataflowGraphDestinationNodeOutput() DataflowGraphDestinationNodeOutput {
	return o
}

func (o DataflowGraphDestinationNodeOutput) ToDataflowGraphDestinationNodeOutputWithContext(ctx context.Context) DataflowGraphDestinationNodeOutput {
	return o
}

// Destination configuration.
func (o DataflowGraphDestinationNodeOutput) DestinationSettings() DataflowGraphDestinationNodeSettingsOutput {
	return o.ApplyT(func(v DataflowGraphDestinationNode) DataflowGraphDestinationNodeSettings {
		return v.DestinationSettings
	}).(DataflowGraphDestinationNodeSettingsOutput)
}

// Name of the node.
func (o DataflowGraphDestinationNodeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DataflowGraphDestinationNode) string { return v.Name }).(pulumi.StringOutput)
}

// DataflowGraph node types.
// Expected value is 'Destination'.
func (o DataflowGraphDestinationNodeOutput) NodeType() pulumi.StringOutput {
	return o.ApplyT(func(v DataflowGraphDestinationNode) string { return v.NodeType }).(pulumi.StringOutput)
}

// DataflowGraph destination node properties.
type DataflowGraphDestinationNodeResponse struct {
	// Destination configuration.
	DestinationSettings DataflowGraphDestinationNodeSettingsResponse `pulumi:"destinationSettings"`
	// Name of the node.
	Name string `pulumi:"name"`
	// DataflowGraph node types.
	// Expected value is 'Destination'.
	NodeType string `pulumi:"nodeType"`
}

// DataflowGraph destination node properties.
type DataflowGraphDestinationNodeResponseOutput struct{ *pulumi.OutputState }

func (DataflowGraphDestinationNodeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataflowGraphDestinationNodeResponse)(nil)).Elem()
}

func (o DataflowGraphDestinationNodeResponseOutput) ToDataflowGraphDestinationNodeResponseOutput() DataflowGraphDestinationNodeResponseOutput {
	return o
}

func (o DataflowGraphDestinationNodeResponseOutput) ToDataflowGraphDestinationNodeResponseOutputWithContext(ctx context.Context) DataflowGraphDestinationNodeResponseOutput {
	return o
}

// Destination configuration.
func (o DataflowGraphDestinationNodeResponseOutput) DestinationSettings() DataflowGraphDestinationNodeSettingsResponseOutput {
	return o.ApplyT(func(v DataflowGraphDestinationNodeResponse) DataflowGraphDestinationNodeSettingsResponse {
		return v.DestinationSettings
	}).(DataflowGraphDestinationNodeSettingsResponseOutput)
}

// Name of the node.
func (o DataflowGraphDestinationNodeResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DataflowGraphDestinationNodeResponse) string { return v.Name }).(pulumi.StringOutput)
}

// DataflowGraph node types.
// Expected value is 'Destination'.
func (o DataflowGraphDestinationNodeResponseOutput) NodeType() pulumi.StringOutput {
	return o.ApplyT(func(v DataflowGraphDestinationNodeResponse) string { return v.NodeType }).(pulumi.StringOutput)
}

// DataflowGraph destination node settings.
type DataflowGraphDestinationNodeSettings struct {
	// Data destination at the endpoint.
	DataDestination string `pulumi:"dataDestination"`
	// The name of the DataflowEndpoint resource .
	EndpointRef string `pulumi:"endpointRef"`
	// Output schema settings.
	OutputSchemaSettings *DataflowGraphDestinationSchemaSettings `pulumi:"outputSchemaSettings"`
}

// DataflowGraphDestinationNodeSettingsInput is an input type that accepts DataflowGraphDestinationNodeSettingsArgs and DataflowGraphDestinationNodeSettingsOutput values.
// You can construct a concrete instance of `DataflowGraphDestinationNodeSettingsInput` via:
//
//	DataflowGraphDestinationNodeSettingsArgs{...}
type DataflowGraphDestinationNodeSettingsInput interface {
	pulumi.Input

	ToDataflowGraphDestinationNodeSettingsOutput() DataflowGraphDestinationNodeSettingsOutput
	ToDataflowGraphDestinationNodeSettingsOutputWithContext(context.Context) DataflowGraphDestinationNodeSettingsOutput
}

// DataflowGraph destination node settings.
type DataflowGraphDestinationNodeSettingsArgs struct {
	// Data destination at the endpoint.
	DataDestination pulumi.StringInput `pulumi:"dataDestination"`
	// The name of the DataflowEndpoint resource .
	EndpointRef pulumi.StringInput `pulumi:"endpointRef"`
	// Output schema settings.
	OutputSchemaSettings DataflowGraphDestinationSchemaSettingsPtrInput `pulumi:"outputSchemaSettings"`
}

func (DataflowGraphDestinationNodeSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataflowGraphDestinationNodeSettings)(nil)).Elem()
}

func (i DataflowGraphDestinationNodeSettingsArgs) ToDataflowGraphDestinationNodeSettingsOutput() DataflowGraphDestinationNodeSettingsOutput {
	return i.ToDataflowGraphDestinationNodeSettingsOutputWithContext(context.Background())
}

func (i DataflowGraphDestinationNodeSettingsArgs) ToDataflowGraphDestinationNodeSettingsOutputWithContext(ctx context.Context) DataflowGraphDestinationNodeSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataflowGraphDestinationNodeSettingsOutput)
}

// DataflowGraph destination node settings.
type DataflowGraphDestinationNodeSettingsOutput struct{ *pulumi.OutputState }

func (DataflowGraphDestinationNodeSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataflowGraphDestinationNodeSettings)(nil)).Elem()
}

func (o DataflowGraphDestinationNodeSettingsOutput) ToDataflowGraphDestinationNodeSettingsOutput() DataflowGraphDestinationNodeSettingsOutput {
	return o
}

func (o DataflowGraphDestinationNodeSettingsOutput) ToDataflowGraphDestinationNodeSettingsOutputWithContext(ctx context.Context) DataflowGraphDestinationNodeSettingsOutput {
	return o
}

// Data destination at the endpoint.
func (o DataflowGraphDestinationNodeSettingsOutput) DataDestination() pulumi.StringOutput {
	return o.ApplyT(func(v DataflowGraphDestinationNodeSettings) string { return v.DataDestination }).(pulumi.StringOutput)
}

// The name of the DataflowEndpoint resource .
func (o DataflowGraphDestinationNodeSettingsOutput) EndpointRef() pulumi.StringOutput {
	return o.ApplyT(func(v DataflowGraphDestinationNodeSettings) string { return v.EndpointRef }).(pulumi.StringOutput)
}

// Output schema settings.
func (o DataflowGraphDestinationNodeSettingsOutput) OutputSchemaSettings() DataflowGraphDestinationSchemaSettingsPtrOutput {
	return o.ApplyT(func(v DataflowGraphDestinationNodeSettings) *DataflowGraphDestinationSchemaSettings {
		return v.OutputSchemaSettings
	}).(DataflowGraphDestinationSchemaSettingsPtrOutput)
}

// DataflowGraph destination node settings.
type DataflowGraphDestinationNodeSettingsResponse struct {
	// Data destination at the endpoint.
	DataDestination string `pulumi:"dataDestination"`
	// The name of the DataflowEndpoint resource .
	EndpointRef string `pulumi:"endpointRef"`
	// Output schema settings.
	OutputSchemaSettings *DataflowGraphDestinationSchemaSettingsResponse `pulumi:"outputSchemaSettings"`
}

// DataflowGraph destination node settings.
type DataflowGraphDestinationNodeSettingsResponseOutput struct{ *pulumi.OutputState }

func (DataflowGraphDestinationNodeSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataflowGraphDestinationNodeSettingsResponse)(nil)).Elem()
}

func (o DataflowGraphDestinationNodeSettingsResponseOutput) ToDataflowGraphDestinationNodeSettingsResponseOutput() DataflowGraphDestinationNodeSettingsResponseOutput {
	return o
}

func (o DataflowGraphDestinationNodeSettingsResponseOutput) ToDataflowGraphDestinationNodeSettingsResponseOutputWithContext(ctx context.Context) DataflowGraphDestinationNodeSettingsResponseOutput {
	return o
}

// Data destination at the endpoint.
func (o DataflowGraphDestinationNodeSettingsResponseOutput) DataDestination() pulumi.StringOutput {
	return o.ApplyT(func(v DataflowGraphDestinationNodeSettingsResponse) string { return v.DataDestination }).(pulumi.StringOutput)
}

// The name of the DataflowEndpoint resource .
func (o DataflowGraphDestinationNodeSettingsResponseOutput) EndpointRef() pulumi.StringOutput {
	return o.ApplyT(func(v DataflowGraphDestinationNodeSettingsResponse) string { return v.EndpointRef }).(pulumi.StringOutput)
}

// Output schema settings.
func (o DataflowGraphDestinationNodeSettingsResponseOutput) OutputSchemaSettings() DataflowGraphDestinationSchemaSettingsResponsePtrOutput {
	return o.ApplyT(func(v DataflowGraphDestinationNodeSettingsResponse) *DataflowGraphDestinationSchemaSettingsResponse {
		return v.OutputSchemaSettings
	}).(DataflowGraphDestinationSchemaSettingsResponsePtrOutput)
}

// DataflowGraph destination node output schema settings.
type DataflowGraphDestinationSchemaSettings struct {
	// Reference to the schema that describes the output of the transformation.
	SchemaRef *string `pulumi:"schemaRef"`
	// The format of the output data.
	SerializationFormat string `pulumi:"serializationFormat"`
}

// DataflowGraphDestinationSchemaSettingsInput is an input type that accepts DataflowGraphDestinationSchemaSettingsArgs and DataflowGraphDestinationSchemaSettingsOutput values.
// You can construct a concrete instance of `DataflowGraphDestinationSchemaSettingsInput` via:
//
//	DataflowGraphDestinationSchemaSettingsArgs{...}
type DataflowGraphDestinationSchemaSettingsInput interface {
	pulumi.Input

	ToDataflowGraphDestinationSchemaSettingsOutput() DataflowGraphDestinationSchemaSettingsOutput
	ToDataflowGraphDestinationSchemaSettingsOutputWithContext(context.Context) DataflowGraphDestinationSchemaSettingsOutput
}

// DataflowGraph destination node output schema settings.
type DataflowGraphDestinationSchemaSettingsArgs struct {
	// Reference to the schema that describes the output of the transformation.
	SchemaRef pulumi.StringPtrInput `pulumi:"schemaRef"`
	// The format of the output data.
	SerializationFormat pulumi.StringInput `pulumi:"serializationFormat"`
}

func (DataflowGraphDestinationSchemaSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataflowGraphDestinationSchemaSettings)(nil)).Elem()
}

func (i DataflowGraphDestinationSchemaSettingsArgs) ToDataflowGraphDestinationSchemaSettingsOutput() DataflowGraphDestinationSchemaSettingsOutput {
	return i.ToDataflowGraphDestinationSchemaSettingsOutputWithContext(context.Background())
}

func (i DataflowGraphDestinationSchemaSettingsArgs) ToDataflowGraphDestinationSchemaSettingsOutputWithContext(ctx context.Context) DataflowGraphDestinationSchemaSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataflowGraphDestinationSchemaSettingsOutput)
}

func (i DataflowGraphDestinationSchemaSettingsArgs) ToDataflowGraphDestinationSchemaSettingsPtrOutput() DataflowGraphDestinationSchemaSettingsPtrOutput {
	return i.ToDataflowGraphDestinationSchemaSettingsPtrOutputWithContext(context.Background())
}

func (i DataflowGraphDestinationSchemaSettingsArgs) ToDataflowGraphDestinationSchemaSettingsPtrOutputWithContext(ctx context.Context) DataflowGraphDestinationSchemaSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataflowGraphDestinationSchemaSettingsOutput).ToDataflowGraphDestinationSchemaSettingsPtrOutputWithContext(ctx)
}

// DataflowGraphDestinationSchemaSettingsPtrInput is an input type that accepts DataflowGraphDestinationSchemaSettingsArgs, DataflowGraphDestinationSchemaSettingsPtr and DataflowGraphDestinationSchemaSettingsPtrOutput values.
// You can construct a concrete instance of `DataflowGraphDestinationSchemaSettingsPtrInput` via:
//
//	        DataflowGraphDestinationSchemaSettingsArgs{...}
//
//	or:
//
//	        nil
type DataflowGraphDestinationSchemaSettingsPtrInput interface {
	pulumi.Input

	ToDataflowGraphDestinationSchemaSettingsPtrOutput() DataflowGraphDestinationSchemaSettingsPtrOutput
	ToDataflowGraphDestinationSchemaSettingsPtrOutputWithContext(context.Context) DataflowGraphDestinationSchemaSettingsPtrOutput
}

type dataflowGraphDestinationSchemaSettingsPtrType DataflowGraphDestinationSchemaSettingsArgs

func DataflowGraphDestinationSchemaSettingsPtr(v *DataflowGraphDestinationSchemaSettingsArgs) DataflowGraphDestinationSchemaSettingsPtrInput {
	return (*dataflowGraphDestinationSchemaSettingsPtrType)(v)
}

func (*dataflowGraphDestinationSchemaSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataflowGraphDestinationSchemaSettings)(nil)).Elem()
}

func (i *dataflowGraphDestinationSchemaSettingsPtrType) ToDataflowGraphDestinationSchemaSettingsPtrOutput() DataflowGraphDestinationSchemaSettingsPtrOutput {
	return i.ToDataflowGraphDestinationSchemaSettingsPtrOutputWithContext(context.Background())
}

func (i *dataflowGraphDestinationSchemaSettingsPtrType) ToDataflowGraphDestinationSchemaSettingsPtrOutputWithContext(ctx context.Context) DataflowGraphDestinationSchemaSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataflowGraphDestinationSchemaSettingsPtrOutput)
}

// DataflowGraph destination node output schema settings.
type DataflowGraphDestinationSchemaSettingsOutput struct{ *pulumi.OutputState }

func (DataflowGraphDestinationSchemaSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataflowGraphDestinationSchemaSettings)(nil)).Elem()
}

func (o DataflowGraphDestinationSchemaSettingsOutput) ToDataflowGraphDestinationSchemaSettingsOutput() DataflowGraphDestinationSchemaSettingsOutput {
	return o
}

func (o DataflowGraphDestinationSchemaSettingsOutput) ToDataflowGraphDestinationSchemaSettingsOutputWithContext(ctx context.Context) DataflowGraphDestinationSchemaSettingsOutput {
	return o
}

func (o DataflowGraphDestinationSchemaSettingsOutput) ToDataflowGraphDestinationSchemaSettingsPtrOutput() DataflowGraphDestinationSchemaSettingsPtrOutput {
	return o.ToDataflowGraphDestinationSchemaSettingsPtrOutputWithContext(context.Background())
}

func (o DataflowGraphDestinationSchemaSettingsOutput) ToDataflowGraphDestinationSchemaSettingsPtrOutputWithContext(ctx context.Context) DataflowGraphDestinationSchemaSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataflowGraphDestinationSchemaSettings) *DataflowGraphDestinationSchemaSettings {
		return &v
	}).(DataflowGraphDestinationSchemaSettingsPtrOutput)
}

// Reference to the schema that describes the output of the transformation.
func (o DataflowGraphDestinationSchemaSettingsOutput) SchemaRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataflowGraphDestinationSchemaSettings) *string { return v.SchemaRef }).(pulumi.StringPtrOutput)
}

// The format of the output data.
func (o DataflowGraphDestinationSchemaSettingsOutput) SerializationFormat() pulumi.StringOutput {
	return o.ApplyT(func(v DataflowGraphDestinationSchemaSettings) string { return v.SerializationFormat }).(pulumi.StringOutput)
}

type DataflowGraphDestinationSchemaSettingsPtrOutput struct{ *pulumi.OutputState }

func (DataflowGraphDestinationSchemaSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataflowGraphDestinationSchemaSettings)(nil)).Elem()
}

func (o DataflowGraphDestinationSchemaSettingsPtrOutput) ToDataflowGraphDestinationSchemaSettingsPtrOutput() DataflowGraphDestinationSchemaSettingsPtrOutput {
	return o
}

func (o DataflowGraphDestinationSchemaSettingsPtrOutput) ToDataflowGraphDestinationSchemaSettingsPtrOutputWithContext(ctx context.Context) DataflowGraphDestinationSchemaSettingsPtrOutput {
	return o
}

func (o DataflowGraphDestinationSchemaSettingsPtrOutput) Elem() DataflowGraphDestinationSchemaSettingsOutput {
	return o.ApplyT(func(v *DataflowGraphDestinationSchemaSettings) DataflowGraphDestinationSchemaSettings {
		if v != nil {
			return *v
		}
		var ret DataflowGraphDestinationSchemaSettings
		return ret
	}).(DataflowGraphDestinationSchemaSettingsOutput)
}

// Reference to the schema that describes the output of the transformation.
func (o DataflowGraphDestinationSchemaSettingsPtrOutput) SchemaRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataflowGraphDestinationSchemaSettings) *string {
		if v == nil {
			return nil
		}
		return v.SchemaRef
	}).(pulumi.StringPtrOutput)
}

// The format of the output data.
func (o DataflowGraphDestinationSchemaSettingsPtrOutput) SerializationFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataflowGraphDestinationSchemaSettings) *string {
		if v == nil {
			return nil
		}
		return &v.SerializationFormat
	}).(pulumi.StringPtrOutput)
}

// DataflowGraph destination node output schema settings.
type DataflowGraphDestinationSchemaSettingsResponse struct {
	// Reference to the schema that describes the output of the transformation.
	SchemaRef *string `pulumi:"schemaRef"`
	// The format of the output data.
	SerializationFormat string `pulumi:"serializationFormat"`
}

// DataflowGraph destination node output schema settings.
type DataflowGraphDestinationSchemaSettingsResponseOutput struct{ *pulumi.OutputState }

func (DataflowGraphDestinationSchemaSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataflowGraphDestinationSchemaSettingsResponse)(nil)).Elem()
}

func (o DataflowGraphDestinationSchemaSettingsResponseOutput) ToDataflowGraphDestinationSchemaSettingsResponseOutput() DataflowGraphDestinationSchemaSettingsResponseOutput {
	return o
}

func (o DataflowGraphDestinationSchemaSettingsResponseOutput) ToDataflowGraphDestinationSchemaSettingsResponseOutputWithContext(ctx context.Context) DataflowGraphDestinationSchemaSettingsResponseOutput {
	return o
}

// Reference to the schema that describes the output of the transformation.
func (o DataflowGraphDestinationSchemaSettingsResponseOutput) SchemaRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataflowGraphDestinationSchemaSettingsResponse) *string { return v.SchemaRef }).(pulumi.StringPtrOutput)
}

// The format of the output data.
func (o DataflowGraphDestinationSchemaSettingsResponseOutput) SerializationFormat() pulumi.StringOutput {
	return o.ApplyT(func(v DataflowGraphDestinationSchemaSettingsResponse) string { return v.SerializationFormat }).(pulumi.StringOutput)
}

type DataflowGraphDestinationSchemaSettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (DataflowGraphDestinationSchemaSettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataflowGraphDestinationSchemaSettingsResponse)(nil)).Elem()
}

func (o DataflowGraphDestinationSchemaSettingsResponsePtrOutput) ToDataflowGraphDestinationSchemaSettingsResponsePtrOutput() DataflowGraphDestinationSchemaSettingsResponsePtrOutput {
	return o
}

func (o DataflowGraphDestinationSchemaSettingsResponsePtrOutput) ToDataflowGraphDestinationSchemaSettingsResponsePtrOutputWithContext(ctx context.Context) DataflowGraphDestinationSchemaSettingsResponsePtrOutput {
	return o
}

func (o DataflowGraphDestinationSchemaSettingsResponsePtrOutput) Elem() DataflowGraphDestinationSchemaSettingsResponseOutput {
	return o.ApplyT(func(v *DataflowGraphDestinationSchemaSettingsResponse) DataflowGraphDestinationSchemaSettingsResponse {
		if v != nil {
			return *v
		}
		var ret DataflowGraphDestinationSchemaSettingsResponse
		return ret
	}).(DataflowGraphDestinationSchemaSettingsResponseOutput)
}

// Reference to the schema that describes the output of the transformation.
func (o DataflowGraphDestinationSchemaSettingsResponsePtrOutput) SchemaRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataflowGraphDestinationSchemaSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.SchemaRef
	}).(pulumi.StringPtrOutput)
}

// The format of the output data.
func (o DataflowGraphDestinationSchemaSettingsResponsePtrOutput) SerializationFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataflowGraphDestinationSchemaSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.SerializationFormat
	}).(pulumi.StringPtrOutput)
}

// DataflowGraph graph node properties.
type DataflowGraphGraphNode struct {
	// Graph configuration.
	GraphSettings DataflowGraphNodeGraphSettings `pulumi:"graphSettings"`
	// Name of the node.
	Name string `pulumi:"name"`
	// DataflowGraph node types.
	// Expected value is 'Graph'.
	NodeType string `pulumi:"nodeType"`
}

// DataflowGraphGraphNodeInput is an input type that accepts DataflowGraphGraphNodeArgs and DataflowGraphGraphNodeOutput values.
// You can construct a concrete instance of `DataflowGraphGraphNodeInput` via:
//
//	DataflowGraphGraphNodeArgs{...}
type DataflowGraphGraphNodeInput interface {
	pulumi.Input

	ToDataflowGraphGraphNodeOutput() DataflowGraphGraphNodeOutput
	ToDataflowGraphGraphNodeOutputWithContext(context.Context) DataflowGraphGraphNodeOutput
}

// DataflowGraph graph node properties.
type DataflowGraphGraphNodeArgs struct {
	// Graph configuration.
	GraphSettings DataflowGraphNodeGraphSettingsInput `pulumi:"graphSettings"`
	// Name of the node.
	Name pulumi.StringInput `pulumi:"name"`
	// DataflowGraph node types.
	// Expected value is 'Graph'.
	NodeType pulumi.StringInput `pulumi:"nodeType"`
}

func (DataflowGraphGraphNodeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataflowGraphGraphNode)(nil)).Elem()
}

func (i DataflowGraphGraphNodeArgs) ToDataflowGraphGraphNodeOutput() DataflowGraphGraphNodeOutput {
	return i.ToDataflowGraphGraphNodeOutputWithContext(context.Background())
}

func (i DataflowGraphGraphNodeArgs) ToDataflowGraphGraphNodeOutputWithContext(ctx context.Context) DataflowGraphGraphNodeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataflowGraphGraphNodeOutput)
}

// DataflowGraph graph node properties.
type DataflowGraphGraphNodeOutput struct{ *pulumi.OutputState }

func (DataflowGraphGraphNodeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataflowGraphGraphNode)(nil)).Elem()
}

func (o DataflowGraphGraphNodeOutput) ToDataflowGraphGraphNodeOutput() DataflowGraphGraphNodeOutput {
	return o
}

func (o DataflowGraphGraphNodeOutput) ToDataflowGraphGraphNodeOutputWithContext(ctx context.Context) DataflowGraphGraphNodeOutput {
	return o
}

// Graph configuration.
func (o DataflowGraphGraphNodeOutput) GraphSettings() DataflowGraphNodeGraphSettingsOutput {
	return o.ApplyT(func(v DataflowGraphGraphNode) DataflowGraphNodeGraphSettings { return v.GraphSettings }).(DataflowGraphNodeGraphSettingsOutput)
}

// Name of the node.
func (o DataflowGraphGraphNodeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DataflowGraphGraphNode) string { return v.Name }).(pulumi.StringOutput)
}

// DataflowGraph node types.
// Expected value is 'Graph'.
func (o DataflowGraphGraphNodeOutput) NodeType() pulumi.StringOutput {
	return o.ApplyT(func(v DataflowGraphGraphNode) string { return v.NodeType }).(pulumi.StringOutput)
}

// DataflowGraph graph node configuration.
type DataflowGraphGraphNodeConfiguration struct {
	// Key of the configuration.
	Key string `pulumi:"key"`
	// Value of the configuration.
	Value string `pulumi:"value"`
}

// DataflowGraphGraphNodeConfigurationInput is an input type that accepts DataflowGraphGraphNodeConfigurationArgs and DataflowGraphGraphNodeConfigurationOutput values.
// You can construct a concrete instance of `DataflowGraphGraphNodeConfigurationInput` via:
//
//	DataflowGraphGraphNodeConfigurationArgs{...}
type DataflowGraphGraphNodeConfigurationInput interface {
	pulumi.Input

	ToDataflowGraphGraphNodeConfigurationOutput() DataflowGraphGraphNodeConfigurationOutput
	ToDataflowGraphGraphNodeConfigurationOutputWithContext(context.Context) DataflowGraphGraphNodeConfigurationOutput
}

// DataflowGraph graph node configuration.
type DataflowGraphGraphNodeConfigurationArgs struct {
	// Key of the configuration.
	Key pulumi.StringInput `pulumi:"key"`
	// Value of the configuration.
	Value pulumi.StringInput `pulumi:"value"`
}

func (DataflowGraphGraphNodeConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataflowGraphGraphNodeConfiguration)(nil)).Elem()
}

func (i DataflowGraphGraphNodeConfigurationArgs) ToDataflowGraphGraphNodeConfigurationOutput() DataflowGraphGraphNodeConfigurationOutput {
	return i.ToDataflowGraphGraphNodeConfigurationOutputWithContext(context.Background())
}

func (i DataflowGraphGraphNodeConfigurationArgs) ToDataflowGraphGraphNodeConfigurationOutputWithContext(ctx context.Context) DataflowGraphGraphNodeConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataflowGraphGraphNodeConfigurationOutput)
}

// DataflowGraphGraphNodeConfigurationArrayInput is an input type that accepts DataflowGraphGraphNodeConfigurationArray and DataflowGraphGraphNodeConfigurationArrayOutput values.
// You can construct a concrete instance of `DataflowGraphGraphNodeConfigurationArrayInput` via:
//
//	DataflowGraphGraphNodeConfigurationArray{ DataflowGraphGraphNodeConfigurationArgs{...} }
type DataflowGraphGraphNodeConfigurationArrayInput interface {
	pulumi.Input

	ToDataflowGraphGraphNodeConfigurationArrayOutput() DataflowGraphGraphNodeConfigurationArrayOutput
	ToDataflowGraphGraphNodeConfigurationArrayOutputWithContext(context.Context) DataflowGraphGraphNodeConfigurationArrayOutput
}

type DataflowGraphGraphNodeConfigurationArray []DataflowGraphGraphNodeConfigurationInput

func (DataflowGraphGraphNodeConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataflowGraphGraphNodeConfiguration)(nil)).Elem()
}

func (i DataflowGraphGraphNodeConfigurationArray) ToDataflowGraphGraphNodeConfigurationArrayOutput() DataflowGraphGraphNodeConfigurationArrayOutput {
	return i.ToDataflowGraphGraphNodeConfigurationArrayOutputWithContext(context.Background())
}

func (i DataflowGraphGraphNodeConfigurationArray) ToDataflowGraphGraphNodeConfigurationArrayOutputWithContext(ctx context.Context) DataflowGraphGraphNodeConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataflowGraphGraphNodeConfigurationArrayOutput)
}

// DataflowGraph graph node configuration.
type DataflowGraphGraphNodeConfigurationOutput struct{ *pulumi.OutputState }

func (DataflowGraphGraphNodeConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataflowGraphGraphNodeConfiguration)(nil)).Elem()
}

func (o DataflowGraphGraphNodeConfigurationOutput) ToDataflowGraphGraphNodeConfigurationOutput() DataflowGraphGraphNodeConfigurationOutput {
	return o
}

func (o DataflowGraphGraphNodeConfigurationOutput) ToDataflowGraphGraphNodeConfigurationOutputWithContext(ctx context.Context) DataflowGraphGraphNodeConfigurationOutput {
	return o
}

// Key of the configuration.
func (o DataflowGraphGraphNodeConfigurationOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v DataflowGraphGraphNodeConfiguration) string { return v.Key }).(pulumi.StringOutput)
}

// Value of the configuration.
func (o DataflowGraphGraphNodeConfigurationOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v DataflowGraphGraphNodeConfiguration) string { return v.Value }).(pulumi.StringOutput)
}

type DataflowGraphGraphNodeConfigurationArrayOutput struct{ *pulumi.OutputState }

func (DataflowGraphGraphNodeConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataflowGraphGraphNodeConfiguration)(nil)).Elem()
}

func (o DataflowGraphGraphNodeConfigurationArrayOutput) ToDataflowGraphGraphNodeConfigurationArrayOutput() DataflowGraphGraphNodeConfigurationArrayOutput {
	return o
}

func (o DataflowGraphGraphNodeConfigurationArrayOutput) ToDataflowGraphGraphNodeConfigurationArrayOutputWithContext(ctx context.Context) DataflowGraphGraphNodeConfigurationArrayOutput {
	return o
}

func (o DataflowGraphGraphNodeConfigurationArrayOutput) Index(i pulumi.IntInput) DataflowGraphGraphNodeConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DataflowGraphGraphNodeConfiguration {
		return vs[0].([]DataflowGraphGraphNodeConfiguration)[vs[1].(int)]
	}).(DataflowGraphGraphNodeConfigurationOutput)
}

// DataflowGraph graph node configuration.
type DataflowGraphGraphNodeConfigurationResponse struct {
	// Key of the configuration.
	Key string `pulumi:"key"`
	// Value of the configuration.
	Value string `pulumi:"value"`
}

// DataflowGraph graph node configuration.
type DataflowGraphGraphNodeConfigurationResponseOutput struct{ *pulumi.OutputState }

func (DataflowGraphGraphNodeConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataflowGraphGraphNodeConfigurationResponse)(nil)).Elem()
}

func (o DataflowGraphGraphNodeConfigurationResponseOutput) ToDataflowGraphGraphNodeConfigurationResponseOutput() DataflowGraphGraphNodeConfigurationResponseOutput {
	return o
}

func (o DataflowGraphGraphNodeConfigurationResponseOutput) ToDataflowGraphGraphNodeConfigurationResponseOutputWithContext(ctx context.Context) DataflowGraphGraphNodeConfigurationResponseOutput {
	return o
}

// Key of the configuration.
func (o DataflowGraphGraphNodeConfigurationResponseOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v DataflowGraphGraphNodeConfigurationResponse) string { return v.Key }).(pulumi.StringOutput)
}

// Value of the configuration.
func (o DataflowGraphGraphNodeConfigurationResponseOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v DataflowGraphGraphNodeConfigurationResponse) string { return v.Value }).(pulumi.StringOutput)
}

type DataflowGraphGraphNodeConfigurationResponseArrayOutput struct{ *pulumi.OutputState }

func (DataflowGraphGraphNodeConfigurationResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataflowGraphGraphNodeConfigurationResponse)(nil)).Elem()
}

func (o DataflowGraphGraphNodeConfigurationResponseArrayOutput) ToDataflowGraphGraphNodeConfigurationResponseArrayOutput() DataflowGraphGraphNodeConfigurationResponseArrayOutput {
	return o
}

func (o DataflowGraphGraphNodeConfigurationResponseArrayOutput) ToDataflowGraphGraphNodeConfigurationResponseArrayOutputWithContext(ctx context.Context) DataflowGraphGraphNodeConfigurationResponseArrayOutput {
	return o
}

func (o DataflowGraphGraphNodeConfigurationResponseArrayOutput) Index(i pulumi.IntInput) DataflowGraphGraphNodeConfigurationResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DataflowGraphGraphNodeConfigurationResponse {
		return vs[0].([]DataflowGraphGraphNodeConfigurationResponse)[vs[1].(int)]
	}).(DataflowGraphGraphNodeConfigurationResponseOutput)
}

// DataflowGraph graph node properties.
type DataflowGraphGraphNodeResponse struct {
	// Graph configuration.
	GraphSettings DataflowGraphNodeGraphSettingsResponse `pulumi:"graphSettings"`
	// Name of the node.
	Name string `pulumi:"name"`
	// DataflowGraph node types.
	// Expected value is 'Graph'.
	NodeType string `pulumi:"nodeType"`
}

// DataflowGraph graph node properties.
type DataflowGraphGraphNodeResponseOutput struct{ *pulumi.OutputState }

func (DataflowGraphGraphNodeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataflowGraphGraphNodeResponse)(nil)).Elem()
}

func (o DataflowGraphGraphNodeResponseOutput) ToDataflowGraphGraphNodeResponseOutput() DataflowGraphGraphNodeResponseOutput {
	return o
}

func (o DataflowGraphGraphNodeResponseOutput) ToDataflowGraphGraphNodeResponseOutputWithContext(ctx context.Context) DataflowGraphGraphNodeResponseOutput {
	return o
}

// Graph configuration.
func (o DataflowGraphGraphNodeResponseOutput) GraphSettings() DataflowGraphNodeGraphSettingsResponseOutput {
	return o.ApplyT(func(v DataflowGraphGraphNodeResponse) DataflowGraphNodeGraphSettingsResponse { return v.GraphSettings }).(DataflowGraphNodeGraphSettingsResponseOutput)
}

// Name of the node.
func (o DataflowGraphGraphNodeResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DataflowGraphGraphNodeResponse) string { return v.Name }).(pulumi.StringOutput)
}

// DataflowGraph node types.
// Expected value is 'Graph'.
func (o DataflowGraphGraphNodeResponseOutput) NodeType() pulumi.StringOutput {
	return o.ApplyT(func(v DataflowGraphGraphNodeResponse) string { return v.NodeType }).(pulumi.StringOutput)
}

// DataflowGraph DataflowGraphNode Connection.
type DataflowGraphNodeConnection struct {
	// Information about the source node.
	From DataflowGraphConnectionInput `pulumi:"from"`
	// Information about the destination node.
	To DataflowGraphConnectionOutput `pulumi:"to"`
}

// DataflowGraphNodeConnectionInput is an input type that accepts DataflowGraphNodeConnectionArgs and DataflowGraphNodeConnectionOutput values.
// You can construct a concrete instance of `DataflowGraphNodeConnectionInput` via:
//
//	DataflowGraphNodeConnectionArgs{...}
type DataflowGraphNodeConnectionInput interface {
	pulumi.Input

	ToDataflowGraphNodeConnectionOutput() DataflowGraphNodeConnectionOutput
	ToDataflowGraphNodeConnectionOutputWithContext(context.Context) DataflowGraphNodeConnectionOutput
}

// DataflowGraph DataflowGraphNode Connection.
type DataflowGraphNodeConnectionArgs struct {
	// Information about the source node.
	From DataflowGraphConnectionInputInput `pulumi:"from"`
	// Information about the destination node.
	To DataflowGraphConnectionOutputInput `pulumi:"to"`
}

func (DataflowGraphNodeConnectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataflowGraphNodeConnection)(nil)).Elem()
}

func (i DataflowGraphNodeConnectionArgs) ToDataflowGraphNodeConnectionOutput() DataflowGraphNodeConnectionOutput {
	return i.ToDataflowGraphNodeConnectionOutputWithContext(context.Background())
}

func (i DataflowGraphNodeConnectionArgs) ToDataflowGraphNodeConnectionOutputWithContext(ctx context.Context) DataflowGraphNodeConnectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataflowGraphNodeConnectionOutput)
}

// DataflowGraphNodeConnectionArrayInput is an input type that accepts DataflowGraphNodeConnectionArray and DataflowGraphNodeConnectionArrayOutput values.
// You can construct a concrete instance of `DataflowGraphNodeConnectionArrayInput` via:
//
//	DataflowGraphNodeConnectionArray{ DataflowGraphNodeConnectionArgs{...} }
type DataflowGraphNodeConnectionArrayInput interface {
	pulumi.Input

	ToDataflowGraphNodeConnectionArrayOutput() DataflowGraphNodeConnectionArrayOutput
	ToDataflowGraphNodeConnectionArrayOutputWithContext(context.Context) DataflowGraphNodeConnectionArrayOutput
}

type DataflowGraphNodeConnectionArray []DataflowGraphNodeConnectionInput

func (DataflowGraphNodeConnectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataflowGraphNodeConnection)(nil)).Elem()
}

func (i DataflowGraphNodeConnectionArray) ToDataflowGraphNodeConnectionArrayOutput() DataflowGraphNodeConnectionArrayOutput {
	return i.ToDataflowGraphNodeConnectionArrayOutputWithContext(context.Background())
}

func (i DataflowGraphNodeConnectionArray) ToDataflowGraphNodeConnectionArrayOutputWithContext(ctx context.Context) DataflowGraphNodeConnectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataflowGraphNodeConnectionArrayOutput)
}

// DataflowGraph DataflowGraphNode Connection.
type DataflowGraphNodeConnectionOutput struct{ *pulumi.OutputState }

func (DataflowGraphNodeConnectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataflowGraphNodeConnection)(nil)).Elem()
}

func (o DataflowGraphNodeConnectionOutput) ToDataflowGraphNodeConnectionOutput() DataflowGraphNodeConnectionOutput {
	return o
}

func (o DataflowGraphNodeConnectionOutput) ToDataflowGraphNodeConnectionOutputWithContext(ctx context.Context) DataflowGraphNodeConnectionOutput {
	return o
}

// Information about the source node.
func (o DataflowGraphNodeConnectionOutput) From() DataflowGraphConnectionInputOutput {
	return o.ApplyT(func(v DataflowGraphNodeConnection) DataflowGraphConnectionInput { return v.From }).(DataflowGraphConnectionInputOutput)
}

// Information about the destination node.
func (o DataflowGraphNodeConnectionOutput) To() DataflowGraphConnectionOutputOutput {
	return o.ApplyT(func(v DataflowGraphNodeConnection) DataflowGraphConnectionOutput { return v.To }).(DataflowGraphConnectionOutputOutput)
}

type DataflowGraphNodeConnectionArrayOutput struct{ *pulumi.OutputState }

func (DataflowGraphNodeConnectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataflowGraphNodeConnection)(nil)).Elem()
}

func (o DataflowGraphNodeConnectionArrayOutput) ToDataflowGraphNodeConnectionArrayOutput() DataflowGraphNodeConnectionArrayOutput {
	return o
}

func (o DataflowGraphNodeConnectionArrayOutput) ToDataflowGraphNodeConnectionArrayOutputWithContext(ctx context.Context) DataflowGraphNodeConnectionArrayOutput {
	return o
}

func (o DataflowGraphNodeConnectionArrayOutput) Index(i pulumi.IntInput) DataflowGraphNodeConnectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DataflowGraphNodeConnection {
		return vs[0].([]DataflowGraphNodeConnection)[vs[1].(int)]
	}).(DataflowGraphNodeConnectionOutput)
}

// DataflowGraph DataflowGraphNode Connection.
type DataflowGraphNodeConnectionResponse struct {
	// Information about the source node.
	From DataflowGraphConnectionInputResponse `pulumi:"from"`
	// Information about the destination node.
	To DataflowGraphConnectionOutputResponse `pulumi:"to"`
}

// DataflowGraph DataflowGraphNode Connection.
type DataflowGraphNodeConnectionResponseOutput struct{ *pulumi.OutputState }

func (DataflowGraphNodeConnectionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataflowGraphNodeConnectionResponse)(nil)).Elem()
}

func (o DataflowGraphNodeConnectionResponseOutput) ToDataflowGraphNodeConnectionResponseOutput() DataflowGraphNodeConnectionResponseOutput {
	return o
}

func (o DataflowGraphNodeConnectionResponseOutput) ToDataflowGraphNodeConnectionResponseOutputWithContext(ctx context.Context) DataflowGraphNodeConnectionResponseOutput {
	return o
}

// Information about the source node.
func (o DataflowGraphNodeConnectionResponseOutput) From() DataflowGraphConnectionInputResponseOutput {
	return o.ApplyT(func(v DataflowGraphNodeConnectionResponse) DataflowGraphConnectionInputResponse { return v.From }).(DataflowGraphConnectionInputResponseOutput)
}

// Information about the destination node.
func (o DataflowGraphNodeConnectionResponseOutput) To() DataflowGraphConnectionOutputResponseOutput {
	return o.ApplyT(func(v DataflowGraphNodeConnectionResponse) DataflowGraphConnectionOutputResponse { return v.To }).(DataflowGraphConnectionOutputResponseOutput)
}

type DataflowGraphNodeConnectionResponseArrayOutput struct{ *pulumi.OutputState }

func (DataflowGraphNodeConnectionResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataflowGraphNodeConnectionResponse)(nil)).Elem()
}

func (o DataflowGraphNodeConnectionResponseArrayOutput) ToDataflowGraphNodeConnectionResponseArrayOutput() DataflowGraphNodeConnectionResponseArrayOutput {
	return o
}

func (o DataflowGraphNodeConnectionResponseArrayOutput) ToDataflowGraphNodeConnectionResponseArrayOutputWithContext(ctx context.Context) DataflowGraphNodeConnectionResponseArrayOutput {
	return o
}

func (o DataflowGraphNodeConnectionResponseArrayOutput) Index(i pulumi.IntInput) DataflowGraphNodeConnectionResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DataflowGraphNodeConnectionResponse {
		return vs[0].([]DataflowGraphNodeConnectionResponse)[vs[1].(int)]
	}).(DataflowGraphNodeConnectionResponseOutput)
}

// DataflowGraph graph node settings.
type DataflowGraphNodeGraphSettings struct {
	// The artifact name and version to pull. This should be in the format `<artifact-name>:<version>`.
	Artifact string `pulumi:"artifact"`
	// Configuration key-value pairs.
	Configuration []DataflowGraphGraphNodeConfiguration `pulumi:"configuration"`
	// Reference to the registry endpoint for pulling the artifact.
	RegistryEndpointRef string `pulumi:"registryEndpointRef"`
}

// DataflowGraphNodeGraphSettingsInput is an input type that accepts DataflowGraphNodeGraphSettingsArgs and DataflowGraphNodeGraphSettingsOutput values.
// You can construct a concrete instance of `DataflowGraphNodeGraphSettingsInput` via:
//
//	DataflowGraphNodeGraphSettingsArgs{...}
type DataflowGraphNodeGraphSettingsInput interface {
	pulumi.Input

	ToDataflowGraphNodeGraphSettingsOutput() DataflowGraphNodeGraphSettingsOutput
	ToDataflowGraphNodeGraphSettingsOutputWithContext(context.Context) DataflowGraphNodeGraphSettingsOutput
}

// DataflowGraph graph node settings.
type DataflowGraphNodeGraphSettingsArgs struct {
	// The artifact name and version to pull. This should be in the format `<artifact-name>:<version>`.
	Artifact pulumi.StringInput `pulumi:"artifact"`
	// Configuration key-value pairs.
	Configuration DataflowGraphGraphNodeConfigurationArrayInput `pulumi:"configuration"`
	// Reference to the registry endpoint for pulling the artifact.
	RegistryEndpointRef pulumi.StringInput `pulumi:"registryEndpointRef"`
}

func (DataflowGraphNodeGraphSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataflowGraphNodeGraphSettings)(nil)).Elem()
}

func (i DataflowGraphNodeGraphSettingsArgs) ToDataflowGraphNodeGraphSettingsOutput() DataflowGraphNodeGraphSettingsOutput {
	return i.ToDataflowGraphNodeGraphSettingsOutputWithContext(context.Background())
}

func (i DataflowGraphNodeGraphSettingsArgs) ToDataflowGraphNodeGraphSettingsOutputWithContext(ctx context.Context) DataflowGraphNodeGraphSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataflowGraphNodeGraphSettingsOutput)
}

// DataflowGraph graph node settings.
type DataflowGraphNodeGraphSettingsOutput struct{ *pulumi.OutputState }

func (DataflowGraphNodeGraphSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataflowGraphNodeGraphSettings)(nil)).Elem()
}

func (o DataflowGraphNodeGraphSettingsOutput) ToDataflowGraphNodeGraphSettingsOutput() DataflowGraphNodeGraphSettingsOutput {
	return o
}

func (o DataflowGraphNodeGraphSettingsOutput) ToDataflowGraphNodeGraphSettingsOutputWithContext(ctx context.Context) DataflowGraphNodeGraphSettingsOutput {
	return o
}

// The artifact name and version to pull. This should be in the format `<artifact-name>:<version>`.
func (o DataflowGraphNodeGraphSettingsOutput) Artifact() pulumi.StringOutput {
	return o.ApplyT(func(v DataflowGraphNodeGraphSettings) string { return v.Artifact }).(pulumi.StringOutput)
}

// Configuration key-value pairs.
func (o DataflowGraphNodeGraphSettingsOutput) Configuration() DataflowGraphGraphNodeConfigurationArrayOutput {
	return o.ApplyT(func(v DataflowGraphNodeGraphSettings) []DataflowGraphGraphNodeConfiguration { return v.Configuration }).(DataflowGraphGraphNodeConfigurationArrayOutput)
}

// Reference to the registry endpoint for pulling the artifact.
func (o DataflowGraphNodeGraphSettingsOutput) RegistryEndpointRef() pulumi.StringOutput {
	return o.ApplyT(func(v DataflowGraphNodeGraphSettings) string { return v.RegistryEndpointRef }).(pulumi.StringOutput)
}

// DataflowGraph graph node settings.
type DataflowGraphNodeGraphSettingsResponse struct {
	// The artifact name and version to pull. This should be in the format `<artifact-name>:<version>`.
	Artifact string `pulumi:"artifact"`
	// Configuration key-value pairs.
	Configuration []DataflowGraphGraphNodeConfigurationResponse `pulumi:"configuration"`
	// Reference to the registry endpoint for pulling the artifact.
	RegistryEndpointRef string `pulumi:"registryEndpointRef"`
}

// DataflowGraph graph node settings.
type DataflowGraphNodeGraphSettingsResponseOutput struct{ *pulumi.OutputState }

func (DataflowGraphNodeGraphSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataflowGraphNodeGraphSettingsResponse)(nil)).Elem()
}

func (o DataflowGraphNodeGraphSettingsResponseOutput) ToDataflowGraphNodeGraphSettingsResponseOutput() DataflowGraphNodeGraphSettingsResponseOutput {
	return o
}

func (o DataflowGraphNodeGraphSettingsResponseOutput) ToDataflowGraphNodeGraphSettingsResponseOutputWithContext(ctx context.Context) DataflowGraphNodeGraphSettingsResponseOutput {
	return o
}

// The artifact name and version to pull. This should be in the format `<artifact-name>:<version>`.
func (o DataflowGraphNodeGraphSettingsResponseOutput) Artifact() pulumi.StringOutput {
	return o.ApplyT(func(v DataflowGraphNodeGraphSettingsResponse) string { return v.Artifact }).(pulumi.StringOutput)
}

// Configuration key-value pairs.
func (o DataflowGraphNodeGraphSettingsResponseOutput) Configuration() DataflowGraphGraphNodeConfigurationResponseArrayOutput {
	return o.ApplyT(func(v DataflowGraphNodeGraphSettingsResponse) []DataflowGraphGraphNodeConfigurationResponse {
		return v.Configuration
	}).(DataflowGraphGraphNodeConfigurationResponseArrayOutput)
}

// Reference to the registry endpoint for pulling the artifact.
func (o DataflowGraphNodeGraphSettingsResponseOutput) RegistryEndpointRef() pulumi.StringOutput {
	return o.ApplyT(func(v DataflowGraphNodeGraphSettingsResponse) string { return v.RegistryEndpointRef }).(pulumi.StringOutput)
}

// DataflowGraph properties.
type DataflowGraphProperties struct {
	// The mode of the dataflow graph.
	Mode *string `pulumi:"mode"`
	// List of connections between nodes in the dataflow graph.
	NodeConnections []DataflowGraphNodeConnection `pulumi:"nodeConnections"`
	// List of nodes in the dataflow graph.
	Nodes []interface{} `pulumi:"nodes"`
	// Disk persistence mode.
	RequestDiskPersistence *string `pulumi:"requestDiskPersistence"`
}

// Defaults sets the appropriate defaults for DataflowGraphProperties
func (val *DataflowGraphProperties) Defaults() *DataflowGraphProperties {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Mode == nil {
		mode_ := "Enabled"
		tmp.Mode = &mode_
	}
	return &tmp
}

// DataflowGraphPropertiesInput is an input type that accepts DataflowGraphPropertiesArgs and DataflowGraphPropertiesOutput values.
// You can construct a concrete instance of `DataflowGraphPropertiesInput` via:
//
//	DataflowGraphPropertiesArgs{...}
type DataflowGraphPropertiesInput interface {
	pulumi.Input

	ToDataflowGraphPropertiesOutput() DataflowGraphPropertiesOutput
	ToDataflowGraphPropertiesOutputWithContext(context.Context) DataflowGraphPropertiesOutput
}

// DataflowGraph properties.
type DataflowGraphPropertiesArgs struct {
	// The mode of the dataflow graph.
	Mode pulumi.StringPtrInput `pulumi:"mode"`
	// List of connections between nodes in the dataflow graph.
	NodeConnections DataflowGraphNodeConnectionArrayInput `pulumi:"nodeConnections"`
	// List of nodes in the dataflow graph.
	Nodes pulumi.ArrayInput `pulumi:"nodes"`
	// Disk persistence mode.
	RequestDiskPersistence pulumi.StringPtrInput `pulumi:"requestDiskPersistence"`
}

// Defaults sets the appropriate defaults for DataflowGraphPropertiesArgs
func (val *DataflowGraphPropertiesArgs) Defaults() *DataflowGraphPropertiesArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Mode == nil {
		tmp.Mode = pulumi.StringPtr("Enabled")
	}
	return &tmp
}
func (DataflowGraphPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataflowGraphProperties)(nil)).Elem()
}

func (i DataflowGraphPropertiesArgs) ToDataflowGraphPropertiesOutput() DataflowGraphPropertiesOutput {
	return i.ToDataflowGraphPropertiesOutputWithContext(context.Background())
}

func (i DataflowGraphPropertiesArgs) ToDataflowGraphPropertiesOutputWithContext(ctx context.Context) DataflowGraphPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataflowGraphPropertiesOutput)
}

func (i DataflowGraphPropertiesArgs) ToDataflowGraphPropertiesPtrOutput() DataflowGraphPropertiesPtrOutput {
	return i.ToDataflowGraphPropertiesPtrOutputWithContext(context.Background())
}

func (i DataflowGraphPropertiesArgs) ToDataflowGraphPropertiesPtrOutputWithContext(ctx context.Context) DataflowGraphPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataflowGraphPropertiesOutput).ToDataflowGraphPropertiesPtrOutputWithContext(ctx)
}

// DataflowGraphPropertiesPtrInput is an input type that accepts DataflowGraphPropertiesArgs, DataflowGraphPropertiesPtr and DataflowGraphPropertiesPtrOutput values.
// You can construct a concrete instance of `DataflowGraphPropertiesPtrInput` via:
//
//	        DataflowGraphPropertiesArgs{...}
//
//	or:
//
//	        nil
type DataflowGraphPropertiesPtrInput interface {
	pulumi.Input

	ToDataflowGraphPropertiesPtrOutput() DataflowGraphPropertiesPtrOutput
	ToDataflowGraphPropertiesPtrOutputWithContext(context.Context) DataflowGraphPropertiesPtrOutput
}

type dataflowGraphPropertiesPtrType DataflowGraphPropertiesArgs

func DataflowGraphPropertiesPtr(v *DataflowGraphPropertiesArgs) DataflowGraphPropertiesPtrInput {
	return (*dataflowGraphPropertiesPtrType)(v)
}

func (*dataflowGraphPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataflowGraphProperties)(nil)).Elem()
}

func (i *dataflowGraphPropertiesPtrType) ToDataflowGraphPropertiesPtrOutput() DataflowGraphPropertiesPtrOutput {
	return i.ToDataflowGraphPropertiesPtrOutputWithContext(context.Background())
}

func (i *dataflowGraphPropertiesPtrType) ToDataflowGraphPropertiesPtrOutputWithContext(ctx context.Context) DataflowGraphPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataflowGraphPropertiesPtrOutput)
}

// DataflowGraph properties.
type DataflowGraphPropertiesOutput struct{ *pulumi.OutputState }

func (DataflowGraphPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataflowGraphProperties)(nil)).Elem()
}

func (o DataflowGraphPropertiesOutput) ToDataflowGraphPropertiesOutput() DataflowGraphPropertiesOutput {
	return o
}

func (o DataflowGraphPropertiesOutput) ToDataflowGraphPropertiesOutputWithContext(ctx context.Context) DataflowGraphPropertiesOutput {
	return o
}

func (o DataflowGraphPropertiesOutput) ToDataflowGraphPropertiesPtrOutput() DataflowGraphPropertiesPtrOutput {
	return o.ToDataflowGraphPropertiesPtrOutputWithContext(context.Background())
}

func (o DataflowGraphPropertiesOutput) ToDataflowGraphPropertiesPtrOutputWithContext(ctx context.Context) DataflowGraphPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataflowGraphProperties) *DataflowGraphProperties {
		return &v
	}).(DataflowGraphPropertiesPtrOutput)
}

// The mode of the dataflow graph.
func (o DataflowGraphPropertiesOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataflowGraphProperties) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

// List of connections between nodes in the dataflow graph.
func (o DataflowGraphPropertiesOutput) NodeConnections() DataflowGraphNodeConnectionArrayOutput {
	return o.ApplyT(func(v DataflowGraphProperties) []DataflowGraphNodeConnection { return v.NodeConnections }).(DataflowGraphNodeConnectionArrayOutput)
}

// List of nodes in the dataflow graph.
func (o DataflowGraphPropertiesOutput) Nodes() pulumi.ArrayOutput {
	return o.ApplyT(func(v DataflowGraphProperties) []interface{} { return v.Nodes }).(pulumi.ArrayOutput)
}

// Disk persistence mode.
func (o DataflowGraphPropertiesOutput) RequestDiskPersistence() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataflowGraphProperties) *string { return v.RequestDiskPersistence }).(pulumi.StringPtrOutput)
}

type DataflowGraphPropertiesPtrOutput struct{ *pulumi.OutputState }

func (DataflowGraphPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataflowGraphProperties)(nil)).Elem()
}

func (o DataflowGraphPropertiesPtrOutput) ToDataflowGraphPropertiesPtrOutput() DataflowGraphPropertiesPtrOutput {
	return o
}

func (o DataflowGraphPropertiesPtrOutput) ToDataflowGraphPropertiesPtrOutputWithContext(ctx context.Context) DataflowGraphPropertiesPtrOutput {
	return o
}

func (o DataflowGraphPropertiesPtrOutput) Elem() DataflowGraphPropertiesOutput {
	return o.ApplyT(func(v *DataflowGraphProperties) DataflowGraphProperties {
		if v != nil {
			return *v
		}
		var ret DataflowGraphProperties
		return ret
	}).(DataflowGraphPropertiesOutput)
}

// The mode of the dataflow graph.
func (o DataflowGraphPropertiesPtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataflowGraphProperties) *string {
		if v == nil {
			return nil
		}
		return v.Mode
	}).(pulumi.StringPtrOutput)
}

// List of connections between nodes in the dataflow graph.
func (o DataflowGraphPropertiesPtrOutput) NodeConnections() DataflowGraphNodeConnectionArrayOutput {
	return o.ApplyT(func(v *DataflowGraphProperties) []DataflowGraphNodeConnection {
		if v == nil {
			return nil
		}
		return v.NodeConnections
	}).(DataflowGraphNodeConnectionArrayOutput)
}

// List of nodes in the dataflow graph.
func (o DataflowGraphPropertiesPtrOutput) Nodes() pulumi.ArrayOutput {
	return o.ApplyT(func(v *DataflowGraphProperties) []interface{} {
		if v == nil {
			return nil
		}
		return v.Nodes
	}).(pulumi.ArrayOutput)
}

// Disk persistence mode.
func (o DataflowGraphPropertiesPtrOutput) RequestDiskPersistence() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataflowGraphProperties) *string {
		if v == nil {
			return nil
		}
		return v.RequestDiskPersistence
	}).(pulumi.StringPtrOutput)
}

// DataflowGraph properties.
type DataflowGraphPropertiesResponse struct {
	// The mode of the dataflow graph.
	Mode *string `pulumi:"mode"`
	// List of connections between nodes in the dataflow graph.
	NodeConnections []DataflowGraphNodeConnectionResponse `pulumi:"nodeConnections"`
	// List of nodes in the dataflow graph.
	Nodes []interface{} `pulumi:"nodes"`
	// The provisioning state of the dataflow graph.
	ProvisioningState string `pulumi:"provisioningState"`
	// Disk persistence mode.
	RequestDiskPersistence *string `pulumi:"requestDiskPersistence"`
}

// Defaults sets the appropriate defaults for DataflowGraphPropertiesResponse
func (val *DataflowGraphPropertiesResponse) Defaults() *DataflowGraphPropertiesResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Mode == nil {
		mode_ := "Enabled"
		tmp.Mode = &mode_
	}
	return &tmp
}

// DataflowGraph properties.
type DataflowGraphPropertiesResponseOutput struct{ *pulumi.OutputState }

func (DataflowGraphPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataflowGraphPropertiesResponse)(nil)).Elem()
}

func (o DataflowGraphPropertiesResponseOutput) ToDataflowGraphPropertiesResponseOutput() DataflowGraphPropertiesResponseOutput {
	return o
}

func (o DataflowGraphPropertiesResponseOutput) ToDataflowGraphPropertiesResponseOutputWithContext(ctx context.Context) DataflowGraphPropertiesResponseOutput {
	return o
}

// The mode of the dataflow graph.
func (o DataflowGraphPropertiesResponseOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataflowGraphPropertiesResponse) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

// List of connections between nodes in the dataflow graph.
func (o DataflowGraphPropertiesResponseOutput) NodeConnections() DataflowGraphNodeConnectionResponseArrayOutput {
	return o.ApplyT(func(v DataflowGraphPropertiesResponse) []DataflowGraphNodeConnectionResponse {
		return v.NodeConnections
	}).(DataflowGraphNodeConnectionResponseArrayOutput)
}

// List of nodes in the dataflow graph.
func (o DataflowGraphPropertiesResponseOutput) Nodes() pulumi.ArrayOutput {
	return o.ApplyT(func(v DataflowGraphPropertiesResponse) []interface{} { return v.Nodes }).(pulumi.ArrayOutput)
}

// The provisioning state of the dataflow graph.
func (o DataflowGraphPropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v DataflowGraphPropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Disk persistence mode.
func (o DataflowGraphPropertiesResponseOutput) RequestDiskPersistence() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataflowGraphPropertiesResponse) *string { return v.RequestDiskPersistence }).(pulumi.StringPtrOutput)
}

// DataflowGraph source node properties.
type DataflowGraphSourceNode struct {
	// Name of the node.
	Name string `pulumi:"name"`
	// DataflowGraph node types.
	// Expected value is 'Source'.
	NodeType string `pulumi:"nodeType"`
	// Source configuration.
	SourceSettings DataflowGraphSourceSettings `pulumi:"sourceSettings"`
}

// DataflowGraphSourceNodeInput is an input type that accepts DataflowGraphSourceNodeArgs and DataflowGraphSourceNodeOutput values.
// You can construct a concrete instance of `DataflowGraphSourceNodeInput` via:
//
//	DataflowGraphSourceNodeArgs{...}
type DataflowGraphSourceNodeInput interface {
	pulumi.Input

	ToDataflowGraphSourceNodeOutput() DataflowGraphSourceNodeOutput
	ToDataflowGraphSourceNodeOutputWithContext(context.Context) DataflowGraphSourceNodeOutput
}

// DataflowGraph source node properties.
type DataflowGraphSourceNodeArgs struct {
	// Name of the node.
	Name pulumi.StringInput `pulumi:"name"`
	// DataflowGraph node types.
	// Expected value is 'Source'.
	NodeType pulumi.StringInput `pulumi:"nodeType"`
	// Source configuration.
	SourceSettings DataflowGraphSourceSettingsInput `pulumi:"sourceSettings"`
}

func (DataflowGraphSourceNodeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataflowGraphSourceNode)(nil)).Elem()
}

func (i DataflowGraphSourceNodeArgs) ToDataflowGraphSourceNodeOutput() DataflowGraphSourceNodeOutput {
	return i.ToDataflowGraphSourceNodeOutputWithContext(context.Background())
}

func (i DataflowGraphSourceNodeArgs) ToDataflowGraphSourceNodeOutputWithContext(ctx context.Context) DataflowGraphSourceNodeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataflowGraphSourceNodeOutput)
}

// DataflowGraph source node properties.
type DataflowGraphSourceNodeOutput struct{ *pulumi.OutputState }

func (DataflowGraphSourceNodeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataflowGraphSourceNode)(nil)).Elem()
}

func (o DataflowGraphSourceNodeOutput) ToDataflowGraphSourceNodeOutput() DataflowGraphSourceNodeOutput {
	return o
}

func (o DataflowGraphSourceNodeOutput) ToDataflowGraphSourceNodeOutputWithContext(ctx context.Context) DataflowGraphSourceNodeOutput {
	return o
}

// Name of the node.
func (o DataflowGraphSourceNodeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DataflowGraphSourceNode) string { return v.Name }).(pulumi.StringOutput)
}

// DataflowGraph node types.
// Expected value is 'Source'.
func (o DataflowGraphSourceNodeOutput) NodeType() pulumi.StringOutput {
	return o.ApplyT(func(v DataflowGraphSourceNode) string { return v.NodeType }).(pulumi.StringOutput)
}

// Source configuration.
func (o DataflowGraphSourceNodeOutput) SourceSettings() DataflowGraphSourceSettingsOutput {
	return o.ApplyT(func(v DataflowGraphSourceNode) DataflowGraphSourceSettings { return v.SourceSettings }).(DataflowGraphSourceSettingsOutput)
}

// DataflowGraph source node properties.
type DataflowGraphSourceNodeResponse struct {
	// Name of the node.
	Name string `pulumi:"name"`
	// DataflowGraph node types.
	// Expected value is 'Source'.
	NodeType string `pulumi:"nodeType"`
	// Source configuration.
	SourceSettings DataflowGraphSourceSettingsResponse `pulumi:"sourceSettings"`
}

// DataflowGraph source node properties.
type DataflowGraphSourceNodeResponseOutput struct{ *pulumi.OutputState }

func (DataflowGraphSourceNodeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataflowGraphSourceNodeResponse)(nil)).Elem()
}

func (o DataflowGraphSourceNodeResponseOutput) ToDataflowGraphSourceNodeResponseOutput() DataflowGraphSourceNodeResponseOutput {
	return o
}

func (o DataflowGraphSourceNodeResponseOutput) ToDataflowGraphSourceNodeResponseOutputWithContext(ctx context.Context) DataflowGraphSourceNodeResponseOutput {
	return o
}

// Name of the node.
func (o DataflowGraphSourceNodeResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DataflowGraphSourceNodeResponse) string { return v.Name }).(pulumi.StringOutput)
}

// DataflowGraph node types.
// Expected value is 'Source'.
func (o DataflowGraphSourceNodeResponseOutput) NodeType() pulumi.StringOutput {
	return o.ApplyT(func(v DataflowGraphSourceNodeResponse) string { return v.NodeType }).(pulumi.StringOutput)
}

// Source configuration.
func (o DataflowGraphSourceNodeResponseOutput) SourceSettings() DataflowGraphSourceSettingsResponseOutput {
	return o.ApplyT(func(v DataflowGraphSourceNodeResponse) DataflowGraphSourceSettingsResponse { return v.SourceSettings }).(DataflowGraphSourceSettingsResponseOutput)
}

// DataflowGraph source node settings.
type DataflowGraphSourceSettings struct {
	// Reference to the resource in Azure Device Registry where the data in the endpoint originates from.
	AssetRef *string `pulumi:"assetRef"`
	// List of data sources.
	DataSources []string `pulumi:"dataSources"`
	// The endpoint reference for the source.
	EndpointRef string `pulumi:"endpointRef"`
}

// DataflowGraphSourceSettingsInput is an input type that accepts DataflowGraphSourceSettingsArgs and DataflowGraphSourceSettingsOutput values.
// You can construct a concrete instance of `DataflowGraphSourceSettingsInput` via:
//
//	DataflowGraphSourceSettingsArgs{...}
type DataflowGraphSourceSettingsInput interface {
	pulumi.Input

	ToDataflowGraphSourceSettingsOutput() DataflowGraphSourceSettingsOutput
	ToDataflowGraphSourceSettingsOutputWithContext(context.Context) DataflowGraphSourceSettingsOutput
}

// DataflowGraph source node settings.
type DataflowGraphSourceSettingsArgs struct {
	// Reference to the resource in Azure Device Registry where the data in the endpoint originates from.
	AssetRef pulumi.StringPtrInput `pulumi:"assetRef"`
	// List of data sources.
	DataSources pulumi.StringArrayInput `pulumi:"dataSources"`
	// The endpoint reference for the source.
	EndpointRef pulumi.StringInput `pulumi:"endpointRef"`
}

func (DataflowGraphSourceSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataflowGraphSourceSettings)(nil)).Elem()
}

func (i DataflowGraphSourceSettingsArgs) ToDataflowGraphSourceSettingsOutput() DataflowGraphSourceSettingsOutput {
	return i.ToDataflowGraphSourceSettingsOutputWithContext(context.Background())
}

func (i DataflowGraphSourceSettingsArgs) ToDataflowGraphSourceSettingsOutputWithContext(ctx context.Context) DataflowGraphSourceSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataflowGraphSourceSettingsOutput)
}

// DataflowGraph source node settings.
type DataflowGraphSourceSettingsOutput struct{ *pulumi.OutputState }

func (DataflowGraphSourceSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataflowGraphSourceSettings)(nil)).Elem()
}

func (o DataflowGraphSourceSettingsOutput) ToDataflowGraphSourceSettingsOutput() DataflowGraphSourceSettingsOutput {
	return o
}

func (o DataflowGraphSourceSettingsOutput) ToDataflowGraphSourceSettingsOutputWithContext(ctx context.Context) DataflowGraphSourceSettingsOutput {
	return o
}

// Reference to the resource in Azure Device Registry where the data in the endpoint originates from.
func (o DataflowGraphSourceSettingsOutput) AssetRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataflowGraphSourceSettings) *string { return v.AssetRef }).(pulumi.StringPtrOutput)
}

// List of data sources.
func (o DataflowGraphSourceSettingsOutput) DataSources() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DataflowGraphSourceSettings) []string { return v.DataSources }).(pulumi.StringArrayOutput)
}

// The endpoint reference for the source.
func (o DataflowGraphSourceSettingsOutput) EndpointRef() pulumi.StringOutput {
	return o.ApplyT(func(v DataflowGraphSourceSettings) string { return v.EndpointRef }).(pulumi.StringOutput)
}

// DataflowGraph source node settings.
type DataflowGraphSourceSettingsResponse struct {
	// Reference to the resource in Azure Device Registry where the data in the endpoint originates from.
	AssetRef *string `pulumi:"assetRef"`
	// List of data sources.
	DataSources []string `pulumi:"dataSources"`
	// The endpoint reference for the source.
	EndpointRef string `pulumi:"endpointRef"`
}

// DataflowGraph source node settings.
type DataflowGraphSourceSettingsResponseOutput struct{ *pulumi.OutputState }

func (DataflowGraphSourceSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataflowGraphSourceSettingsResponse)(nil)).Elem()
}

func (o DataflowGraphSourceSettingsResponseOutput) ToDataflowGraphSourceSettingsResponseOutput() DataflowGraphSourceSettingsResponseOutput {
	return o
}

func (o DataflowGraphSourceSettingsResponseOutput) ToDataflowGraphSourceSettingsResponseOutputWithContext(ctx context.Context) DataflowGraphSourceSettingsResponseOutput {
	return o
}

// Reference to the resource in Azure Device Registry where the data in the endpoint originates from.
func (o DataflowGraphSourceSettingsResponseOutput) AssetRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataflowGraphSourceSettingsResponse) *string { return v.AssetRef }).(pulumi.StringPtrOutput)
}

// List of data sources.
func (o DataflowGraphSourceSettingsResponseOutput) DataSources() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DataflowGraphSourceSettingsResponse) []string { return v.DataSources }).(pulumi.StringArrayOutput)
}

// The endpoint reference for the source.
func (o DataflowGraphSourceSettingsResponseOutput) EndpointRef() pulumi.StringOutput {
	return o.ApplyT(func(v DataflowGraphSourceSettingsResponse) string { return v.EndpointRef }).(pulumi.StringOutput)
}

// Dataflow Operation properties. NOTE - One only method is allowed to be used for one entry.
type DataflowOperation struct {
	// Built In Transformation configuration.
	BuiltInTransformationSettings *DataflowBuiltInTransformationSettings `pulumi:"builtInTransformationSettings"`
	// Destination configuration.
	DestinationSettings *DataflowDestinationOperationSettings `pulumi:"destinationSettings"`
	// Optional user provided name of the transformation.
	Name *string `pulumi:"name"`
	// Type of operation.
	OperationType string `pulumi:"operationType"`
	// Source configuration.
	SourceSettings *DataflowSourceOperationSettings `pulumi:"sourceSettings"`
}

// Defaults sets the appropriate defaults for DataflowOperation
func (val *DataflowOperation) Defaults() *DataflowOperation {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.BuiltInTransformationSettings = tmp.BuiltInTransformationSettings.Defaults()

	tmp.SourceSettings = tmp.SourceSettings.Defaults()

	return &tmp
}

// DataflowOperationInput is an input type that accepts DataflowOperationArgs and DataflowOperationOutput values.
// You can construct a concrete instance of `DataflowOperationInput` via:
//
//	DataflowOperationArgs{...}
type DataflowOperationInput interface {
	pulumi.Input

	ToDataflowOperationOutput() DataflowOperationOutput
	ToDataflowOperationOutputWithContext(context.Context) DataflowOperationOutput
}

// Dataflow Operation properties. NOTE - One only method is allowed to be used for one entry.
type DataflowOperationArgs struct {
	// Built In Transformation configuration.
	BuiltInTransformationSettings DataflowBuiltInTransformationSettingsPtrInput `pulumi:"builtInTransformationSettings"`
	// Destination configuration.
	DestinationSettings DataflowDestinationOperationSettingsPtrInput `pulumi:"destinationSettings"`
	// Optional user provided name of the transformation.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Type of operation.
	OperationType pulumi.StringInput `pulumi:"operationType"`
	// Source configuration.
	SourceSettings DataflowSourceOperationSettingsPtrInput `pulumi:"sourceSettings"`
}

// Defaults sets the appropriate defaults for DataflowOperationArgs
func (val *DataflowOperationArgs) Defaults() *DataflowOperationArgs {
	if val == nil {
		return nil
	}
	tmp := *val

	return &tmp
}
func (DataflowOperationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataflowOperation)(nil)).Elem()
}

func (i DataflowOperationArgs) ToDataflowOperationOutput() DataflowOperationOutput {
	return i.ToDataflowOperationOutputWithContext(context.Background())
}

func (i DataflowOperationArgs) ToDataflowOperationOutputWithContext(ctx context.Context) DataflowOperationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataflowOperationOutput)
}

// DataflowOperationArrayInput is an input type that accepts DataflowOperationArray and DataflowOperationArrayOutput values.
// You can construct a concrete instance of `DataflowOperationArrayInput` via:
//
//	DataflowOperationArray{ DataflowOperationArgs{...} }
type DataflowOperationArrayInput interface {
	pulumi.Input

	ToDataflowOperationArrayOutput() DataflowOperationArrayOutput
	ToDataflowOperationArrayOutputWithContext(context.Context) DataflowOperationArrayOutput
}

type DataflowOperationArray []DataflowOperationInput

func (DataflowOperationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataflowOperation)(nil)).Elem()
}

func (i DataflowOperationArray) ToDataflowOperationArrayOutput() DataflowOperationArrayOutput {
	return i.ToDataflowOperationArrayOutputWithContext(context.Background())
}

func (i DataflowOperationArray) ToDataflowOperationArrayOutputWithContext(ctx context.Context) DataflowOperationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataflowOperationArrayOutput)
}

// Dataflow Operation properties. NOTE - One only method is allowed to be used for one entry.
type DataflowOperationOutput struct{ *pulumi.OutputState }

func (DataflowOperationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataflowOperation)(nil)).Elem()
}

func (o DataflowOperationOutput) ToDataflowOperationOutput() DataflowOperationOutput {
	return o
}

func (o DataflowOperationOutput) ToDataflowOperationOutputWithContext(ctx context.Context) DataflowOperationOutput {
	return o
}

// Built In Transformation configuration.
func (o DataflowOperationOutput) BuiltInTransformationSettings() DataflowBuiltInTransformationSettingsPtrOutput {
	return o.ApplyT(func(v DataflowOperation) *DataflowBuiltInTransformationSettings {
		return v.BuiltInTransformationSettings
	}).(DataflowBuiltInTransformationSettingsPtrOutput)
}

// Destination configuration.
func (o DataflowOperationOutput) DestinationSettings() DataflowDestinationOperationSettingsPtrOutput {
	return o.ApplyT(func(v DataflowOperation) *DataflowDestinationOperationSettings { return v.DestinationSettings }).(DataflowDestinationOperationSettingsPtrOutput)
}

// Optional user provided name of the transformation.
func (o DataflowOperationOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataflowOperation) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Type of operation.
func (o DataflowOperationOutput) OperationType() pulumi.StringOutput {
	return o.ApplyT(func(v DataflowOperation) string { return v.OperationType }).(pulumi.StringOutput)
}

// Source configuration.
func (o DataflowOperationOutput) SourceSettings() DataflowSourceOperationSettingsPtrOutput {
	return o.ApplyT(func(v DataflowOperation) *DataflowSourceOperationSettings { return v.SourceSettings }).(DataflowSourceOperationSettingsPtrOutput)
}

type DataflowOperationArrayOutput struct{ *pulumi.OutputState }

func (DataflowOperationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataflowOperation)(nil)).Elem()
}

func (o DataflowOperationArrayOutput) ToDataflowOperationArrayOutput() DataflowOperationArrayOutput {
	return o
}

func (o DataflowOperationArrayOutput) ToDataflowOperationArrayOutputWithContext(ctx context.Context) DataflowOperationArrayOutput {
	return o
}

func (o DataflowOperationArrayOutput) Index(i pulumi.IntInput) DataflowOperationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DataflowOperation {
		return vs[0].([]DataflowOperation)[vs[1].(int)]
	}).(DataflowOperationOutput)
}

// Dataflow Operation properties. NOTE - One only method is allowed to be used for one entry.
type DataflowOperationResponse struct {
	// Built In Transformation configuration.
	BuiltInTransformationSettings *DataflowBuiltInTransformationSettingsResponse `pulumi:"builtInTransformationSettings"`
	// Destination configuration.
	DestinationSettings *DataflowDestinationOperationSettingsResponse `pulumi:"destinationSettings"`
	// Optional user provided name of the transformation.
	Name *string `pulumi:"name"`
	// Type of operation.
	OperationType string `pulumi:"operationType"`
	// Source configuration.
	SourceSettings *DataflowSourceOperationSettingsResponse `pulumi:"sourceSettings"`
}

// Defaults sets the appropriate defaults for DataflowOperationResponse
func (val *DataflowOperationResponse) Defaults() *DataflowOperationResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.BuiltInTransformationSettings = tmp.BuiltInTransformationSettings.Defaults()

	tmp.SourceSettings = tmp.SourceSettings.Defaults()

	return &tmp
}

// Dataflow Operation properties. NOTE - One only method is allowed to be used for one entry.
type DataflowOperationResponseOutput struct{ *pulumi.OutputState }

func (DataflowOperationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataflowOperationResponse)(nil)).Elem()
}

func (o DataflowOperationResponseOutput) ToDataflowOperationResponseOutput() DataflowOperationResponseOutput {
	return o
}

func (o DataflowOperationResponseOutput) ToDataflowOperationResponseOutputWithContext(ctx context.Context) DataflowOperationResponseOutput {
	return o
}

// Built In Transformation configuration.
func (o DataflowOperationResponseOutput) BuiltInTransformationSettings() DataflowBuiltInTransformationSettingsResponsePtrOutput {
	return o.ApplyT(func(v DataflowOperationResponse) *DataflowBuiltInTransformationSettingsResponse {
		return v.BuiltInTransformationSettings
	}).(DataflowBuiltInTransformationSettingsResponsePtrOutput)
}

// Destination configuration.
func (o DataflowOperationResponseOutput) DestinationSettings() DataflowDestinationOperationSettingsResponsePtrOutput {
	return o.ApplyT(func(v DataflowOperationResponse) *DataflowDestinationOperationSettingsResponse {
		return v.DestinationSettings
	}).(DataflowDestinationOperationSettingsResponsePtrOutput)
}

// Optional user provided name of the transformation.
func (o DataflowOperationResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataflowOperationResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Type of operation.
func (o DataflowOperationResponseOutput) OperationType() pulumi.StringOutput {
	return o.ApplyT(func(v DataflowOperationResponse) string { return v.OperationType }).(pulumi.StringOutput)
}

// Source configuration.
func (o DataflowOperationResponseOutput) SourceSettings() DataflowSourceOperationSettingsResponsePtrOutput {
	return o.ApplyT(func(v DataflowOperationResponse) *DataflowSourceOperationSettingsResponse { return v.SourceSettings }).(DataflowSourceOperationSettingsResponsePtrOutput)
}

type DataflowOperationResponseArrayOutput struct{ *pulumi.OutputState }

func (DataflowOperationResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataflowOperationResponse)(nil)).Elem()
}

func (o DataflowOperationResponseArrayOutput) ToDataflowOperationResponseArrayOutput() DataflowOperationResponseArrayOutput {
	return o
}

func (o DataflowOperationResponseArrayOutput) ToDataflowOperationResponseArrayOutputWithContext(ctx context.Context) DataflowOperationResponseArrayOutput {
	return o
}

func (o DataflowOperationResponseArrayOutput) Index(i pulumi.IntInput) DataflowOperationResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DataflowOperationResponse {
		return vs[0].([]DataflowOperationResponse)[vs[1].(int)]
	}).(DataflowOperationResponseOutput)
}

// DataflowProfile Resource properties
type DataflowProfileProperties struct {
	// Spec defines the desired identities of NBC diagnostics settings.
	Diagnostics *ProfileDiagnostics `pulumi:"diagnostics"`
	// To manually scale the dataflow profile, specify the maximum number of instances you want to run.
	InstanceCount *int `pulumi:"instanceCount"`
}

// Defaults sets the appropriate defaults for DataflowProfileProperties
func (val *DataflowProfileProperties) Defaults() *DataflowProfileProperties {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.Diagnostics = tmp.Diagnostics.Defaults()

	if tmp.InstanceCount == nil {
		instanceCount_ := 1
		tmp.InstanceCount = &instanceCount_
	}
	return &tmp
}

// DataflowProfilePropertiesInput is an input type that accepts DataflowProfilePropertiesArgs and DataflowProfilePropertiesOutput values.
// You can construct a concrete instance of `DataflowProfilePropertiesInput` via:
//
//	DataflowProfilePropertiesArgs{...}
type DataflowProfilePropertiesInput interface {
	pulumi.Input

	ToDataflowProfilePropertiesOutput() DataflowProfilePropertiesOutput
	ToDataflowProfilePropertiesOutputWithContext(context.Context) DataflowProfilePropertiesOutput
}

// DataflowProfile Resource properties
type DataflowProfilePropertiesArgs struct {
	// Spec defines the desired identities of NBC diagnostics settings.
	Diagnostics ProfileDiagnosticsPtrInput `pulumi:"diagnostics"`
	// To manually scale the dataflow profile, specify the maximum number of instances you want to run.
	InstanceCount pulumi.IntPtrInput `pulumi:"instanceCount"`
}

// Defaults sets the appropriate defaults for DataflowProfilePropertiesArgs
func (val *DataflowProfilePropertiesArgs) Defaults() *DataflowProfilePropertiesArgs {
	if val == nil {
		return nil
	}
	tmp := *val

	if tmp.InstanceCount == nil {
		tmp.InstanceCount = pulumi.IntPtr(1)
	}
	return &tmp
}
func (DataflowProfilePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataflowProfileProperties)(nil)).Elem()
}

func (i DataflowProfilePropertiesArgs) ToDataflowProfilePropertiesOutput() DataflowProfilePropertiesOutput {
	return i.ToDataflowProfilePropertiesOutputWithContext(context.Background())
}

func (i DataflowProfilePropertiesArgs) ToDataflowProfilePropertiesOutputWithContext(ctx context.Context) DataflowProfilePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataflowProfilePropertiesOutput)
}

func (i DataflowProfilePropertiesArgs) ToDataflowProfilePropertiesPtrOutput() DataflowProfilePropertiesPtrOutput {
	return i.ToDataflowProfilePropertiesPtrOutputWithContext(context.Background())
}

func (i DataflowProfilePropertiesArgs) ToDataflowProfilePropertiesPtrOutputWithContext(ctx context.Context) DataflowProfilePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataflowProfilePropertiesOutput).ToDataflowProfilePropertiesPtrOutputWithContext(ctx)
}

// DataflowProfilePropertiesPtrInput is an input type that accepts DataflowProfilePropertiesArgs, DataflowProfilePropertiesPtr and DataflowProfilePropertiesPtrOutput values.
// You can construct a concrete instance of `DataflowProfilePropertiesPtrInput` via:
//
//	        DataflowProfilePropertiesArgs{...}
//
//	or:
//
//	        nil
type DataflowProfilePropertiesPtrInput interface {
	pulumi.Input

	ToDataflowProfilePropertiesPtrOutput() DataflowProfilePropertiesPtrOutput
	ToDataflowProfilePropertiesPtrOutputWithContext(context.Context) DataflowProfilePropertiesPtrOutput
}

type dataflowProfilePropertiesPtrType DataflowProfilePropertiesArgs

func DataflowProfilePropertiesPtr(v *DataflowProfilePropertiesArgs) DataflowProfilePropertiesPtrInput {
	return (*dataflowProfilePropertiesPtrType)(v)
}

func (*dataflowProfilePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataflowProfileProperties)(nil)).Elem()
}

func (i *dataflowProfilePropertiesPtrType) ToDataflowProfilePropertiesPtrOutput() DataflowProfilePropertiesPtrOutput {
	return i.ToDataflowProfilePropertiesPtrOutputWithContext(context.Background())
}

func (i *dataflowProfilePropertiesPtrType) ToDataflowProfilePropertiesPtrOutputWithContext(ctx context.Context) DataflowProfilePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataflowProfilePropertiesPtrOutput)
}

// DataflowProfile Resource properties
type DataflowProfilePropertiesOutput struct{ *pulumi.OutputState }

func (DataflowProfilePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataflowProfileProperties)(nil)).Elem()
}

func (o DataflowProfilePropertiesOutput) ToDataflowProfilePropertiesOutput() DataflowProfilePropertiesOutput {
	return o
}

func (o DataflowProfilePropertiesOutput) ToDataflowProfilePropertiesOutputWithContext(ctx context.Context) DataflowProfilePropertiesOutput {
	return o
}

func (o DataflowProfilePropertiesOutput) ToDataflowProfilePropertiesPtrOutput() DataflowProfilePropertiesPtrOutput {
	return o.ToDataflowProfilePropertiesPtrOutputWithContext(context.Background())
}

func (o DataflowProfilePropertiesOutput) ToDataflowProfilePropertiesPtrOutputWithContext(ctx context.Context) DataflowProfilePropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataflowProfileProperties) *DataflowProfileProperties {
		return &v
	}).(DataflowProfilePropertiesPtrOutput)
}

// Spec defines the desired identities of NBC diagnostics settings.
func (o DataflowProfilePropertiesOutput) Diagnostics() ProfileDiagnosticsPtrOutput {
	return o.ApplyT(func(v DataflowProfileProperties) *ProfileDiagnostics { return v.Diagnostics }).(ProfileDiagnosticsPtrOutput)
}

// To manually scale the dataflow profile, specify the maximum number of instances you want to run.
func (o DataflowProfilePropertiesOutput) InstanceCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DataflowProfileProperties) *int { return v.InstanceCount }).(pulumi.IntPtrOutput)
}

type DataflowProfilePropertiesPtrOutput struct{ *pulumi.OutputState }

func (DataflowProfilePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataflowProfileProperties)(nil)).Elem()
}

func (o DataflowProfilePropertiesPtrOutput) ToDataflowProfilePropertiesPtrOutput() DataflowProfilePropertiesPtrOutput {
	return o
}

func (o DataflowProfilePropertiesPtrOutput) ToDataflowProfilePropertiesPtrOutputWithContext(ctx context.Context) DataflowProfilePropertiesPtrOutput {
	return o
}

func (o DataflowProfilePropertiesPtrOutput) Elem() DataflowProfilePropertiesOutput {
	return o.ApplyT(func(v *DataflowProfileProperties) DataflowProfileProperties {
		if v != nil {
			return *v
		}
		var ret DataflowProfileProperties
		return ret
	}).(DataflowProfilePropertiesOutput)
}

// Spec defines the desired identities of NBC diagnostics settings.
func (o DataflowProfilePropertiesPtrOutput) Diagnostics() ProfileDiagnosticsPtrOutput {
	return o.ApplyT(func(v *DataflowProfileProperties) *ProfileDiagnostics {
		if v == nil {
			return nil
		}
		return v.Diagnostics
	}).(ProfileDiagnosticsPtrOutput)
}

// To manually scale the dataflow profile, specify the maximum number of instances you want to run.
func (o DataflowProfilePropertiesPtrOutput) InstanceCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DataflowProfileProperties) *int {
		if v == nil {
			return nil
		}
		return v.InstanceCount
	}).(pulumi.IntPtrOutput)
}

// DataflowProfile Resource properties
type DataflowProfilePropertiesResponse struct {
	// Spec defines the desired identities of NBC diagnostics settings.
	Diagnostics *ProfileDiagnosticsResponse `pulumi:"diagnostics"`
	// To manually scale the dataflow profile, specify the maximum number of instances you want to run.
	InstanceCount *int `pulumi:"instanceCount"`
	// The status of the last operation.
	ProvisioningState string `pulumi:"provisioningState"`
}

// Defaults sets the appropriate defaults for DataflowProfilePropertiesResponse
func (val *DataflowProfilePropertiesResponse) Defaults() *DataflowProfilePropertiesResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.Diagnostics = tmp.Diagnostics.Defaults()

	if tmp.InstanceCount == nil {
		instanceCount_ := 1
		tmp.InstanceCount = &instanceCount_
	}
	return &tmp
}

// DataflowProfile Resource properties
type DataflowProfilePropertiesResponseOutput struct{ *pulumi.OutputState }

func (DataflowProfilePropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataflowProfilePropertiesResponse)(nil)).Elem()
}

func (o DataflowProfilePropertiesResponseOutput) ToDataflowProfilePropertiesResponseOutput() DataflowProfilePropertiesResponseOutput {
	return o
}

func (o DataflowProfilePropertiesResponseOutput) ToDataflowProfilePropertiesResponseOutputWithContext(ctx context.Context) DataflowProfilePropertiesResponseOutput {
	return o
}

// Spec defines the desired identities of NBC diagnostics settings.
func (o DataflowProfilePropertiesResponseOutput) Diagnostics() ProfileDiagnosticsResponsePtrOutput {
	return o.ApplyT(func(v DataflowProfilePropertiesResponse) *ProfileDiagnosticsResponse { return v.Diagnostics }).(ProfileDiagnosticsResponsePtrOutput)
}

// To manually scale the dataflow profile, specify the maximum number of instances you want to run.
func (o DataflowProfilePropertiesResponseOutput) InstanceCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DataflowProfilePropertiesResponse) *int { return v.InstanceCount }).(pulumi.IntPtrOutput)
}

// The status of the last operation.
func (o DataflowProfilePropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v DataflowProfilePropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Dataflow Resource properties
type DataflowProperties struct {
	// Mode for Dataflow. Optional; defaults to Enabled.
	Mode *string `pulumi:"mode"`
	// List of operations including source and destination references as well as transformation.
	Operations []DataflowOperation `pulumi:"operations"`
}

// Defaults sets the appropriate defaults for DataflowProperties
func (val *DataflowProperties) Defaults() *DataflowProperties {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Mode == nil {
		mode_ := "Enabled"
		tmp.Mode = &mode_
	}
	return &tmp
}

// DataflowPropertiesInput is an input type that accepts DataflowPropertiesArgs and DataflowPropertiesOutput values.
// You can construct a concrete instance of `DataflowPropertiesInput` via:
//
//	DataflowPropertiesArgs{...}
type DataflowPropertiesInput interface {
	pulumi.Input

	ToDataflowPropertiesOutput() DataflowPropertiesOutput
	ToDataflowPropertiesOutputWithContext(context.Context) DataflowPropertiesOutput
}

// Dataflow Resource properties
type DataflowPropertiesArgs struct {
	// Mode for Dataflow. Optional; defaults to Enabled.
	Mode pulumi.StringPtrInput `pulumi:"mode"`
	// List of operations including source and destination references as well as transformation.
	Operations DataflowOperationArrayInput `pulumi:"operations"`
}

// Defaults sets the appropriate defaults for DataflowPropertiesArgs
func (val *DataflowPropertiesArgs) Defaults() *DataflowPropertiesArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Mode == nil {
		tmp.Mode = pulumi.StringPtr("Enabled")
	}
	return &tmp
}
func (DataflowPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataflowProperties)(nil)).Elem()
}

func (i DataflowPropertiesArgs) ToDataflowPropertiesOutput() DataflowPropertiesOutput {
	return i.ToDataflowPropertiesOutputWithContext(context.Background())
}

func (i DataflowPropertiesArgs) ToDataflowPropertiesOutputWithContext(ctx context.Context) DataflowPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataflowPropertiesOutput)
}

func (i DataflowPropertiesArgs) ToDataflowPropertiesPtrOutput() DataflowPropertiesPtrOutput {
	return i.ToDataflowPropertiesPtrOutputWithContext(context.Background())
}

func (i DataflowPropertiesArgs) ToDataflowPropertiesPtrOutputWithContext(ctx context.Context) DataflowPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataflowPropertiesOutput).ToDataflowPropertiesPtrOutputWithContext(ctx)
}

// DataflowPropertiesPtrInput is an input type that accepts DataflowPropertiesArgs, DataflowPropertiesPtr and DataflowPropertiesPtrOutput values.
// You can construct a concrete instance of `DataflowPropertiesPtrInput` via:
//
//	        DataflowPropertiesArgs{...}
//
//	or:
//
//	        nil
type DataflowPropertiesPtrInput interface {
	pulumi.Input

	ToDataflowPropertiesPtrOutput() DataflowPropertiesPtrOutput
	ToDataflowPropertiesPtrOutputWithContext(context.Context) DataflowPropertiesPtrOutput
}

type dataflowPropertiesPtrType DataflowPropertiesArgs

func DataflowPropertiesPtr(v *DataflowPropertiesArgs) DataflowPropertiesPtrInput {
	return (*dataflowPropertiesPtrType)(v)
}

func (*dataflowPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataflowProperties)(nil)).Elem()
}

func (i *dataflowPropertiesPtrType) ToDataflowPropertiesPtrOutput() DataflowPropertiesPtrOutput {
	return i.ToDataflowPropertiesPtrOutputWithContext(context.Background())
}

func (i *dataflowPropertiesPtrType) ToDataflowPropertiesPtrOutputWithContext(ctx context.Context) DataflowPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataflowPropertiesPtrOutput)
}

// Dataflow Resource properties
type DataflowPropertiesOutput struct{ *pulumi.OutputState }

func (DataflowPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataflowProperties)(nil)).Elem()
}

func (o DataflowPropertiesOutput) ToDataflowPropertiesOutput() DataflowPropertiesOutput {
	return o
}

func (o DataflowPropertiesOutput) ToDataflowPropertiesOutputWithContext(ctx context.Context) DataflowPropertiesOutput {
	return o
}

func (o DataflowPropertiesOutput) ToDataflowPropertiesPtrOutput() DataflowPropertiesPtrOutput {
	return o.ToDataflowPropertiesPtrOutputWithContext(context.Background())
}

func (o DataflowPropertiesOutput) ToDataflowPropertiesPtrOutputWithContext(ctx context.Context) DataflowPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataflowProperties) *DataflowProperties {
		return &v
	}).(DataflowPropertiesPtrOutput)
}

// Mode for Dataflow. Optional; defaults to Enabled.
func (o DataflowPropertiesOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataflowProperties) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

// List of operations including source and destination references as well as transformation.
func (o DataflowPropertiesOutput) Operations() DataflowOperationArrayOutput {
	return o.ApplyT(func(v DataflowProperties) []DataflowOperation { return v.Operations }).(DataflowOperationArrayOutput)
}

type DataflowPropertiesPtrOutput struct{ *pulumi.OutputState }

func (DataflowPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataflowProperties)(nil)).Elem()
}

func (o DataflowPropertiesPtrOutput) ToDataflowPropertiesPtrOutput() DataflowPropertiesPtrOutput {
	return o
}

func (o DataflowPropertiesPtrOutput) ToDataflowPropertiesPtrOutputWithContext(ctx context.Context) DataflowPropertiesPtrOutput {
	return o
}

func (o DataflowPropertiesPtrOutput) Elem() DataflowPropertiesOutput {
	return o.ApplyT(func(v *DataflowProperties) DataflowProperties {
		if v != nil {
			return *v
		}
		var ret DataflowProperties
		return ret
	}).(DataflowPropertiesOutput)
}

// Mode for Dataflow. Optional; defaults to Enabled.
func (o DataflowPropertiesPtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataflowProperties) *string {
		if v == nil {
			return nil
		}
		return v.Mode
	}).(pulumi.StringPtrOutput)
}

// List of operations including source and destination references as well as transformation.
func (o DataflowPropertiesPtrOutput) Operations() DataflowOperationArrayOutput {
	return o.ApplyT(func(v *DataflowProperties) []DataflowOperation {
		if v == nil {
			return nil
		}
		return v.Operations
	}).(DataflowOperationArrayOutput)
}

// Dataflow Resource properties
type DataflowPropertiesResponse struct {
	// Mode for Dataflow. Optional; defaults to Enabled.
	Mode *string `pulumi:"mode"`
	// List of operations including source and destination references as well as transformation.
	Operations []DataflowOperationResponse `pulumi:"operations"`
	// The status of the last operation.
	ProvisioningState string `pulumi:"provisioningState"`
}

// Defaults sets the appropriate defaults for DataflowPropertiesResponse
func (val *DataflowPropertiesResponse) Defaults() *DataflowPropertiesResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Mode == nil {
		mode_ := "Enabled"
		tmp.Mode = &mode_
	}
	return &tmp
}

// Dataflow Resource properties
type DataflowPropertiesResponseOutput struct{ *pulumi.OutputState }

func (DataflowPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataflowPropertiesResponse)(nil)).Elem()
}

func (o DataflowPropertiesResponseOutput) ToDataflowPropertiesResponseOutput() DataflowPropertiesResponseOutput {
	return o
}

func (o DataflowPropertiesResponseOutput) ToDataflowPropertiesResponseOutputWithContext(ctx context.Context) DataflowPropertiesResponseOutput {
	return o
}

// Mode for Dataflow. Optional; defaults to Enabled.
func (o DataflowPropertiesResponseOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataflowPropertiesResponse) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

// List of operations including source and destination references as well as transformation.
func (o DataflowPropertiesResponseOutput) Operations() DataflowOperationResponseArrayOutput {
	return o.ApplyT(func(v DataflowPropertiesResponse) []DataflowOperationResponse { return v.Operations }).(DataflowOperationResponseArrayOutput)
}

// The status of the last operation.
func (o DataflowPropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v DataflowPropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Dataflow Source Operation properties
type DataflowSourceOperationSettings struct {
	// Reference to the resource in Azure Device Registry where the data in the endpoint originates from.
	AssetRef *string `pulumi:"assetRef"`
	// List of source locations. Can be Broker or Kafka topics. Supports wildcards # and +.
	DataSources []string `pulumi:"dataSources"`
	// Reference to the Dataflow Endpoint resource. Can only be of Broker and Kafka type.
	EndpointRef string `pulumi:"endpointRef"`
	// Schema CR reference. Data will be deserialized according to the schema, and dropped if it doesn't match.
	SchemaRef *string `pulumi:"schemaRef"`
	// Content is a JSON Schema. Allowed: JSON Schema/draft-7.
	SerializationFormat *string `pulumi:"serializationFormat"`
}

// Defaults sets the appropriate defaults for DataflowSourceOperationSettings
func (val *DataflowSourceOperationSettings) Defaults() *DataflowSourceOperationSettings {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.SerializationFormat == nil {
		serializationFormat_ := "Json"
		tmp.SerializationFormat = &serializationFormat_
	}
	return &tmp
}

// DataflowSourceOperationSettingsInput is an input type that accepts DataflowSourceOperationSettingsArgs and DataflowSourceOperationSettingsOutput values.
// You can construct a concrete instance of `DataflowSourceOperationSettingsInput` via:
//
//	DataflowSourceOperationSettingsArgs{...}
type DataflowSourceOperationSettingsInput interface {
	pulumi.Input

	ToDataflowSourceOperationSettingsOutput() DataflowSourceOperationSettingsOutput
	ToDataflowSourceOperationSettingsOutputWithContext(context.Context) DataflowSourceOperationSettingsOutput
}

// Dataflow Source Operation properties
type DataflowSourceOperationSettingsArgs struct {
	// Reference to the resource in Azure Device Registry where the data in the endpoint originates from.
	AssetRef pulumi.StringPtrInput `pulumi:"assetRef"`
	// List of source locations. Can be Broker or Kafka topics. Supports wildcards # and +.
	DataSources pulumi.StringArrayInput `pulumi:"dataSources"`
	// Reference to the Dataflow Endpoint resource. Can only be of Broker and Kafka type.
	EndpointRef pulumi.StringInput `pulumi:"endpointRef"`
	// Schema CR reference. Data will be deserialized according to the schema, and dropped if it doesn't match.
	SchemaRef pulumi.StringPtrInput `pulumi:"schemaRef"`
	// Content is a JSON Schema. Allowed: JSON Schema/draft-7.
	SerializationFormat pulumi.StringPtrInput `pulumi:"serializationFormat"`
}

// Defaults sets the appropriate defaults for DataflowSourceOperationSettingsArgs
func (val *DataflowSourceOperationSettingsArgs) Defaults() *DataflowSourceOperationSettingsArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.SerializationFormat == nil {
		tmp.SerializationFormat = pulumi.StringPtr("Json")
	}
	return &tmp
}
func (DataflowSourceOperationSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataflowSourceOperationSettings)(nil)).Elem()
}

func (i DataflowSourceOperationSettingsArgs) ToDataflowSourceOperationSettingsOutput() DataflowSourceOperationSettingsOutput {
	return i.ToDataflowSourceOperationSettingsOutputWithContext(context.Background())
}

func (i DataflowSourceOperationSettingsArgs) ToDataflowSourceOperationSettingsOutputWithContext(ctx context.Context) DataflowSourceOperationSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataflowSourceOperationSettingsOutput)
}

func (i DataflowSourceOperationSettingsArgs) ToDataflowSourceOperationSettingsPtrOutput() DataflowSourceOperationSettingsPtrOutput {
	return i.ToDataflowSourceOperationSettingsPtrOutputWithContext(context.Background())
}

func (i DataflowSourceOperationSettingsArgs) ToDataflowSourceOperationSettingsPtrOutputWithContext(ctx context.Context) DataflowSourceOperationSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataflowSourceOperationSettingsOutput).ToDataflowSourceOperationSettingsPtrOutputWithContext(ctx)
}

// DataflowSourceOperationSettingsPtrInput is an input type that accepts DataflowSourceOperationSettingsArgs, DataflowSourceOperationSettingsPtr and DataflowSourceOperationSettingsPtrOutput values.
// You can construct a concrete instance of `DataflowSourceOperationSettingsPtrInput` via:
//
//	        DataflowSourceOperationSettingsArgs{...}
//
//	or:
//
//	        nil
type DataflowSourceOperationSettingsPtrInput interface {
	pulumi.Input

	ToDataflowSourceOperationSettingsPtrOutput() DataflowSourceOperationSettingsPtrOutput
	ToDataflowSourceOperationSettingsPtrOutputWithContext(context.Context) DataflowSourceOperationSettingsPtrOutput
}

type dataflowSourceOperationSettingsPtrType DataflowSourceOperationSettingsArgs

func DataflowSourceOperationSettingsPtr(v *DataflowSourceOperationSettingsArgs) DataflowSourceOperationSettingsPtrInput {
	return (*dataflowSourceOperationSettingsPtrType)(v)
}

func (*dataflowSourceOperationSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataflowSourceOperationSettings)(nil)).Elem()
}

func (i *dataflowSourceOperationSettingsPtrType) ToDataflowSourceOperationSettingsPtrOutput() DataflowSourceOperationSettingsPtrOutput {
	return i.ToDataflowSourceOperationSettingsPtrOutputWithContext(context.Background())
}

func (i *dataflowSourceOperationSettingsPtrType) ToDataflowSourceOperationSettingsPtrOutputWithContext(ctx context.Context) DataflowSourceOperationSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataflowSourceOperationSettingsPtrOutput)
}

// Dataflow Source Operation properties
type DataflowSourceOperationSettingsOutput struct{ *pulumi.OutputState }

func (DataflowSourceOperationSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataflowSourceOperationSettings)(nil)).Elem()
}

func (o DataflowSourceOperationSettingsOutput) ToDataflowSourceOperationSettingsOutput() DataflowSourceOperationSettingsOutput {
	return o
}

func (o DataflowSourceOperationSettingsOutput) ToDataflowSourceOperationSettingsOutputWithContext(ctx context.Context) DataflowSourceOperationSettingsOutput {
	return o
}

func (o DataflowSourceOperationSettingsOutput) ToDataflowSourceOperationSettingsPtrOutput() DataflowSourceOperationSettingsPtrOutput {
	return o.ToDataflowSourceOperationSettingsPtrOutputWithContext(context.Background())
}

func (o DataflowSourceOperationSettingsOutput) ToDataflowSourceOperationSettingsPtrOutputWithContext(ctx context.Context) DataflowSourceOperationSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataflowSourceOperationSettings) *DataflowSourceOperationSettings {
		return &v
	}).(DataflowSourceOperationSettingsPtrOutput)
}

// Reference to the resource in Azure Device Registry where the data in the endpoint originates from.
func (o DataflowSourceOperationSettingsOutput) AssetRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataflowSourceOperationSettings) *string { return v.AssetRef }).(pulumi.StringPtrOutput)
}

// List of source locations. Can be Broker or Kafka topics. Supports wildcards # and +.
func (o DataflowSourceOperationSettingsOutput) DataSources() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DataflowSourceOperationSettings) []string { return v.DataSources }).(pulumi.StringArrayOutput)
}

// Reference to the Dataflow Endpoint resource. Can only be of Broker and Kafka type.
func (o DataflowSourceOperationSettingsOutput) EndpointRef() pulumi.StringOutput {
	return o.ApplyT(func(v DataflowSourceOperationSettings) string { return v.EndpointRef }).(pulumi.StringOutput)
}

// Schema CR reference. Data will be deserialized according to the schema, and dropped if it doesn't match.
func (o DataflowSourceOperationSettingsOutput) SchemaRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataflowSourceOperationSettings) *string { return v.SchemaRef }).(pulumi.StringPtrOutput)
}

// Content is a JSON Schema. Allowed: JSON Schema/draft-7.
func (o DataflowSourceOperationSettingsOutput) SerializationFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataflowSourceOperationSettings) *string { return v.SerializationFormat }).(pulumi.StringPtrOutput)
}

type DataflowSourceOperationSettingsPtrOutput struct{ *pulumi.OutputState }

func (DataflowSourceOperationSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataflowSourceOperationSettings)(nil)).Elem()
}

func (o DataflowSourceOperationSettingsPtrOutput) ToDataflowSourceOperationSettingsPtrOutput() DataflowSourceOperationSettingsPtrOutput {
	return o
}

func (o DataflowSourceOperationSettingsPtrOutput) ToDataflowSourceOperationSettingsPtrOutputWithContext(ctx context.Context) DataflowSourceOperationSettingsPtrOutput {
	return o
}

func (o DataflowSourceOperationSettingsPtrOutput) Elem() DataflowSourceOperationSettingsOutput {
	return o.ApplyT(func(v *DataflowSourceOperationSettings) DataflowSourceOperationSettings {
		if v != nil {
			return *v
		}
		var ret DataflowSourceOperationSettings
		return ret
	}).(DataflowSourceOperationSettingsOutput)
}

// Reference to the resource in Azure Device Registry where the data in the endpoint originates from.
func (o DataflowSourceOperationSettingsPtrOutput) AssetRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataflowSourceOperationSettings) *string {
		if v == nil {
			return nil
		}
		return v.AssetRef
	}).(pulumi.StringPtrOutput)
}

// List of source locations. Can be Broker or Kafka topics. Supports wildcards # and +.
func (o DataflowSourceOperationSettingsPtrOutput) DataSources() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DataflowSourceOperationSettings) []string {
		if v == nil {
			return nil
		}
		return v.DataSources
	}).(pulumi.StringArrayOutput)
}

// Reference to the Dataflow Endpoint resource. Can only be of Broker and Kafka type.
func (o DataflowSourceOperationSettingsPtrOutput) EndpointRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataflowSourceOperationSettings) *string {
		if v == nil {
			return nil
		}
		return &v.EndpointRef
	}).(pulumi.StringPtrOutput)
}

// Schema CR reference. Data will be deserialized according to the schema, and dropped if it doesn't match.
func (o DataflowSourceOperationSettingsPtrOutput) SchemaRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataflowSourceOperationSettings) *string {
		if v == nil {
			return nil
		}
		return v.SchemaRef
	}).(pulumi.StringPtrOutput)
}

// Content is a JSON Schema. Allowed: JSON Schema/draft-7.
func (o DataflowSourceOperationSettingsPtrOutput) SerializationFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataflowSourceOperationSettings) *string {
		if v == nil {
			return nil
		}
		return v.SerializationFormat
	}).(pulumi.StringPtrOutput)
}

// Dataflow Source Operation properties
type DataflowSourceOperationSettingsResponse struct {
	// Reference to the resource in Azure Device Registry where the data in the endpoint originates from.
	AssetRef *string `pulumi:"assetRef"`
	// List of source locations. Can be Broker or Kafka topics. Supports wildcards # and +.
	DataSources []string `pulumi:"dataSources"`
	// Reference to the Dataflow Endpoint resource. Can only be of Broker and Kafka type.
	EndpointRef string `pulumi:"endpointRef"`
	// Schema CR reference. Data will be deserialized according to the schema, and dropped if it doesn't match.
	SchemaRef *string `pulumi:"schemaRef"`
	// Content is a JSON Schema. Allowed: JSON Schema/draft-7.
	SerializationFormat *string `pulumi:"serializationFormat"`
}

// Defaults sets the appropriate defaults for DataflowSourceOperationSettingsResponse
func (val *DataflowSourceOperationSettingsResponse) Defaults() *DataflowSourceOperationSettingsResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.SerializationFormat == nil {
		serializationFormat_ := "Json"
		tmp.SerializationFormat = &serializationFormat_
	}
	return &tmp
}

// Dataflow Source Operation properties
type DataflowSourceOperationSettingsResponseOutput struct{ *pulumi.OutputState }

func (DataflowSourceOperationSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataflowSourceOperationSettingsResponse)(nil)).Elem()
}

func (o DataflowSourceOperationSettingsResponseOutput) ToDataflowSourceOperationSettingsResponseOutput() DataflowSourceOperationSettingsResponseOutput {
	return o
}

func (o DataflowSourceOperationSettingsResponseOutput) ToDataflowSourceOperationSettingsResponseOutputWithContext(ctx context.Context) DataflowSourceOperationSettingsResponseOutput {
	return o
}

// Reference to the resource in Azure Device Registry where the data in the endpoint originates from.
func (o DataflowSourceOperationSettingsResponseOutput) AssetRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataflowSourceOperationSettingsResponse) *string { return v.AssetRef }).(pulumi.StringPtrOutput)
}

// List of source locations. Can be Broker or Kafka topics. Supports wildcards # and +.
func (o DataflowSourceOperationSettingsResponseOutput) DataSources() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DataflowSourceOperationSettingsResponse) []string { return v.DataSources }).(pulumi.StringArrayOutput)
}

// Reference to the Dataflow Endpoint resource. Can only be of Broker and Kafka type.
func (o DataflowSourceOperationSettingsResponseOutput) EndpointRef() pulumi.StringOutput {
	return o.ApplyT(func(v DataflowSourceOperationSettingsResponse) string { return v.EndpointRef }).(pulumi.StringOutput)
}

// Schema CR reference. Data will be deserialized according to the schema, and dropped if it doesn't match.
func (o DataflowSourceOperationSettingsResponseOutput) SchemaRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataflowSourceOperationSettingsResponse) *string { return v.SchemaRef }).(pulumi.StringPtrOutput)
}

// Content is a JSON Schema. Allowed: JSON Schema/draft-7.
func (o DataflowSourceOperationSettingsResponseOutput) SerializationFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataflowSourceOperationSettingsResponse) *string { return v.SerializationFormat }).(pulumi.StringPtrOutput)
}

type DataflowSourceOperationSettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (DataflowSourceOperationSettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataflowSourceOperationSettingsResponse)(nil)).Elem()
}

func (o DataflowSourceOperationSettingsResponsePtrOutput) ToDataflowSourceOperationSettingsResponsePtrOutput() DataflowSourceOperationSettingsResponsePtrOutput {
	return o
}

func (o DataflowSourceOperationSettingsResponsePtrOutput) ToDataflowSourceOperationSettingsResponsePtrOutputWithContext(ctx context.Context) DataflowSourceOperationSettingsResponsePtrOutput {
	return o
}

func (o DataflowSourceOperationSettingsResponsePtrOutput) Elem() DataflowSourceOperationSettingsResponseOutput {
	return o.ApplyT(func(v *DataflowSourceOperationSettingsResponse) DataflowSourceOperationSettingsResponse {
		if v != nil {
			return *v
		}
		var ret DataflowSourceOperationSettingsResponse
		return ret
	}).(DataflowSourceOperationSettingsResponseOutput)
}

// Reference to the resource in Azure Device Registry where the data in the endpoint originates from.
func (o DataflowSourceOperationSettingsResponsePtrOutput) AssetRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataflowSourceOperationSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.AssetRef
	}).(pulumi.StringPtrOutput)
}

// List of source locations. Can be Broker or Kafka topics. Supports wildcards # and +.
func (o DataflowSourceOperationSettingsResponsePtrOutput) DataSources() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DataflowSourceOperationSettingsResponse) []string {
		if v == nil {
			return nil
		}
		return v.DataSources
	}).(pulumi.StringArrayOutput)
}

// Reference to the Dataflow Endpoint resource. Can only be of Broker and Kafka type.
func (o DataflowSourceOperationSettingsResponsePtrOutput) EndpointRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataflowSourceOperationSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.EndpointRef
	}).(pulumi.StringPtrOutput)
}

// Schema CR reference. Data will be deserialized according to the schema, and dropped if it doesn't match.
func (o DataflowSourceOperationSettingsResponsePtrOutput) SchemaRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataflowSourceOperationSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.SchemaRef
	}).(pulumi.StringPtrOutput)
}

// Content is a JSON Schema. Allowed: JSON Schema/draft-7.
func (o DataflowSourceOperationSettingsResponsePtrOutput) SerializationFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataflowSourceOperationSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.SerializationFormat
	}).(pulumi.StringPtrOutput)
}

// Diagnostic Log properties
type DiagnosticsLogs struct {
	// The log level. Examples - 'debug', 'info', 'warn', 'error', 'trace'.
	Level *string `pulumi:"level"`
}

// Defaults sets the appropriate defaults for DiagnosticsLogs
func (val *DiagnosticsLogs) Defaults() *DiagnosticsLogs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Level == nil {
		level_ := "info"
		tmp.Level = &level_
	}
	return &tmp
}

// DiagnosticsLogsInput is an input type that accepts DiagnosticsLogsArgs and DiagnosticsLogsOutput values.
// You can construct a concrete instance of `DiagnosticsLogsInput` via:
//
//	DiagnosticsLogsArgs{...}
type DiagnosticsLogsInput interface {
	pulumi.Input

	ToDiagnosticsLogsOutput() DiagnosticsLogsOutput
	ToDiagnosticsLogsOutputWithContext(context.Context) DiagnosticsLogsOutput
}

// Diagnostic Log properties
type DiagnosticsLogsArgs struct {
	// The log level. Examples - 'debug', 'info', 'warn', 'error', 'trace'.
	Level pulumi.StringPtrInput `pulumi:"level"`
}

// Defaults sets the appropriate defaults for DiagnosticsLogsArgs
func (val *DiagnosticsLogsArgs) Defaults() *DiagnosticsLogsArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Level == nil {
		tmp.Level = pulumi.StringPtr("info")
	}
	return &tmp
}
func (DiagnosticsLogsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DiagnosticsLogs)(nil)).Elem()
}

func (i DiagnosticsLogsArgs) ToDiagnosticsLogsOutput() DiagnosticsLogsOutput {
	return i.ToDiagnosticsLogsOutputWithContext(context.Background())
}

func (i DiagnosticsLogsArgs) ToDiagnosticsLogsOutputWithContext(ctx context.Context) DiagnosticsLogsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DiagnosticsLogsOutput)
}

func (i DiagnosticsLogsArgs) ToDiagnosticsLogsPtrOutput() DiagnosticsLogsPtrOutput {
	return i.ToDiagnosticsLogsPtrOutputWithContext(context.Background())
}

func (i DiagnosticsLogsArgs) ToDiagnosticsLogsPtrOutputWithContext(ctx context.Context) DiagnosticsLogsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DiagnosticsLogsOutput).ToDiagnosticsLogsPtrOutputWithContext(ctx)
}

// DiagnosticsLogsPtrInput is an input type that accepts DiagnosticsLogsArgs, DiagnosticsLogsPtr and DiagnosticsLogsPtrOutput values.
// You can construct a concrete instance of `DiagnosticsLogsPtrInput` via:
//
//	        DiagnosticsLogsArgs{...}
//
//	or:
//
//	        nil
type DiagnosticsLogsPtrInput interface {
	pulumi.Input

	ToDiagnosticsLogsPtrOutput() DiagnosticsLogsPtrOutput
	ToDiagnosticsLogsPtrOutputWithContext(context.Context) DiagnosticsLogsPtrOutput
}

type diagnosticsLogsPtrType DiagnosticsLogsArgs

func DiagnosticsLogsPtr(v *DiagnosticsLogsArgs) DiagnosticsLogsPtrInput {
	return (*diagnosticsLogsPtrType)(v)
}

func (*diagnosticsLogsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DiagnosticsLogs)(nil)).Elem()
}

func (i *diagnosticsLogsPtrType) ToDiagnosticsLogsPtrOutput() DiagnosticsLogsPtrOutput {
	return i.ToDiagnosticsLogsPtrOutputWithContext(context.Background())
}

func (i *diagnosticsLogsPtrType) ToDiagnosticsLogsPtrOutputWithContext(ctx context.Context) DiagnosticsLogsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DiagnosticsLogsPtrOutput)
}

// Diagnostic Log properties
type DiagnosticsLogsOutput struct{ *pulumi.OutputState }

func (DiagnosticsLogsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DiagnosticsLogs)(nil)).Elem()
}

func (o DiagnosticsLogsOutput) ToDiagnosticsLogsOutput() DiagnosticsLogsOutput {
	return o
}

func (o DiagnosticsLogsOutput) ToDiagnosticsLogsOutputWithContext(ctx context.Context) DiagnosticsLogsOutput {
	return o
}

func (o DiagnosticsLogsOutput) ToDiagnosticsLogsPtrOutput() DiagnosticsLogsPtrOutput {
	return o.ToDiagnosticsLogsPtrOutputWithContext(context.Background())
}

func (o DiagnosticsLogsOutput) ToDiagnosticsLogsPtrOutputWithContext(ctx context.Context) DiagnosticsLogsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DiagnosticsLogs) *DiagnosticsLogs {
		return &v
	}).(DiagnosticsLogsPtrOutput)
}

// The log level. Examples - 'debug', 'info', 'warn', 'error', 'trace'.
func (o DiagnosticsLogsOutput) Level() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DiagnosticsLogs) *string { return v.Level }).(pulumi.StringPtrOutput)
}

type DiagnosticsLogsPtrOutput struct{ *pulumi.OutputState }

func (DiagnosticsLogsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DiagnosticsLogs)(nil)).Elem()
}

func (o DiagnosticsLogsPtrOutput) ToDiagnosticsLogsPtrOutput() DiagnosticsLogsPtrOutput {
	return o
}

func (o DiagnosticsLogsPtrOutput) ToDiagnosticsLogsPtrOutputWithContext(ctx context.Context) DiagnosticsLogsPtrOutput {
	return o
}

func (o DiagnosticsLogsPtrOutput) Elem() DiagnosticsLogsOutput {
	return o.ApplyT(func(v *DiagnosticsLogs) DiagnosticsLogs {
		if v != nil {
			return *v
		}
		var ret DiagnosticsLogs
		return ret
	}).(DiagnosticsLogsOutput)
}

// The log level. Examples - 'debug', 'info', 'warn', 'error', 'trace'.
func (o DiagnosticsLogsPtrOutput) Level() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DiagnosticsLogs) *string {
		if v == nil {
			return nil
		}
		return v.Level
	}).(pulumi.StringPtrOutput)
}

// Diagnostic Log properties
type DiagnosticsLogsResponse struct {
	// The log level. Examples - 'debug', 'info', 'warn', 'error', 'trace'.
	Level *string `pulumi:"level"`
}

// Defaults sets the appropriate defaults for DiagnosticsLogsResponse
func (val *DiagnosticsLogsResponse) Defaults() *DiagnosticsLogsResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Level == nil {
		level_ := "info"
		tmp.Level = &level_
	}
	return &tmp
}

// Diagnostic Log properties
type DiagnosticsLogsResponseOutput struct{ *pulumi.OutputState }

func (DiagnosticsLogsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DiagnosticsLogsResponse)(nil)).Elem()
}

func (o DiagnosticsLogsResponseOutput) ToDiagnosticsLogsResponseOutput() DiagnosticsLogsResponseOutput {
	return o
}

func (o DiagnosticsLogsResponseOutput) ToDiagnosticsLogsResponseOutputWithContext(ctx context.Context) DiagnosticsLogsResponseOutput {
	return o
}

// The log level. Examples - 'debug', 'info', 'warn', 'error', 'trace'.
func (o DiagnosticsLogsResponseOutput) Level() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DiagnosticsLogsResponse) *string { return v.Level }).(pulumi.StringPtrOutput)
}

type DiagnosticsLogsResponsePtrOutput struct{ *pulumi.OutputState }

func (DiagnosticsLogsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DiagnosticsLogsResponse)(nil)).Elem()
}

func (o DiagnosticsLogsResponsePtrOutput) ToDiagnosticsLogsResponsePtrOutput() DiagnosticsLogsResponsePtrOutput {
	return o
}

func (o DiagnosticsLogsResponsePtrOutput) ToDiagnosticsLogsResponsePtrOutputWithContext(ctx context.Context) DiagnosticsLogsResponsePtrOutput {
	return o
}

func (o DiagnosticsLogsResponsePtrOutput) Elem() DiagnosticsLogsResponseOutput {
	return o.ApplyT(func(v *DiagnosticsLogsResponse) DiagnosticsLogsResponse {
		if v != nil {
			return *v
		}
		var ret DiagnosticsLogsResponse
		return ret
	}).(DiagnosticsLogsResponseOutput)
}

// The log level. Examples - 'debug', 'info', 'warn', 'error', 'trace'.
func (o DiagnosticsLogsResponsePtrOutput) Level() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DiagnosticsLogsResponse) *string {
		if v == nil {
			return nil
		}
		return v.Level
	}).(pulumi.StringPtrOutput)
}

// DiskBackedMessageBuffer properties
type DiskBackedMessageBuffer struct {
	// Use the specified persistent volume claim template to mount a "generic ephemeral volume" for the message buffer. See <https://kubernetes.io/docs/concepts/storage/ephemeral-volumes/#generic-ephemeral-volumes> for details.
	EphemeralVolumeClaimSpec *VolumeClaimSpec `pulumi:"ephemeralVolumeClaimSpec"`
	// The max size of the message buffer on disk. If a PVC template is specified using one of ephemeralVolumeClaimSpec or persistentVolumeClaimSpec, then this size is used as the request and limit sizes of that template. If neither ephemeralVolumeClaimSpec nor persistentVolumeClaimSpec are specified, then an emptyDir volume is mounted with this size as its limit. See <https://kubernetes.io/docs/concepts/storage/volumes/#emptydir> for details.
	MaxSize string `pulumi:"maxSize"`
	// Use the specified persistent volume claim template to mount a persistent volume for the message buffer.
	PersistentVolumeClaimSpec *VolumeClaimSpec `pulumi:"persistentVolumeClaimSpec"`
}

// DiskBackedMessageBufferInput is an input type that accepts DiskBackedMessageBufferArgs and DiskBackedMessageBufferOutput values.
// You can construct a concrete instance of `DiskBackedMessageBufferInput` via:
//
//	DiskBackedMessageBufferArgs{...}
type DiskBackedMessageBufferInput interface {
	pulumi.Input

	ToDiskBackedMessageBufferOutput() DiskBackedMessageBufferOutput
	ToDiskBackedMessageBufferOutputWithContext(context.Context) DiskBackedMessageBufferOutput
}

// DiskBackedMessageBuffer properties
type DiskBackedMessageBufferArgs struct {
	// Use the specified persistent volume claim template to mount a "generic ephemeral volume" for the message buffer. See <https://kubernetes.io/docs/concepts/storage/ephemeral-volumes/#generic-ephemeral-volumes> for details.
	EphemeralVolumeClaimSpec VolumeClaimSpecPtrInput `pulumi:"ephemeralVolumeClaimSpec"`
	// The max size of the message buffer on disk. If a PVC template is specified using one of ephemeralVolumeClaimSpec or persistentVolumeClaimSpec, then this size is used as the request and limit sizes of that template. If neither ephemeralVolumeClaimSpec nor persistentVolumeClaimSpec are specified, then an emptyDir volume is mounted with this size as its limit. See <https://kubernetes.io/docs/concepts/storage/volumes/#emptydir> for details.
	MaxSize pulumi.StringInput `pulumi:"maxSize"`
	// Use the specified persistent volume claim template to mount a persistent volume for the message buffer.
	PersistentVolumeClaimSpec VolumeClaimSpecPtrInput `pulumi:"persistentVolumeClaimSpec"`
}

func (DiskBackedMessageBufferArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DiskBackedMessageBuffer)(nil)).Elem()
}

func (i DiskBackedMessageBufferArgs) ToDiskBackedMessageBufferOutput() DiskBackedMessageBufferOutput {
	return i.ToDiskBackedMessageBufferOutputWithContext(context.Background())
}

func (i DiskBackedMessageBufferArgs) ToDiskBackedMessageBufferOutputWithContext(ctx context.Context) DiskBackedMessageBufferOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DiskBackedMessageBufferOutput)
}

func (i DiskBackedMessageBufferArgs) ToDiskBackedMessageBufferPtrOutput() DiskBackedMessageBufferPtrOutput {
	return i.ToDiskBackedMessageBufferPtrOutputWithContext(context.Background())
}

func (i DiskBackedMessageBufferArgs) ToDiskBackedMessageBufferPtrOutputWithContext(ctx context.Context) DiskBackedMessageBufferPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DiskBackedMessageBufferOutput).ToDiskBackedMessageBufferPtrOutputWithContext(ctx)
}

// DiskBackedMessageBufferPtrInput is an input type that accepts DiskBackedMessageBufferArgs, DiskBackedMessageBufferPtr and DiskBackedMessageBufferPtrOutput values.
// You can construct a concrete instance of `DiskBackedMessageBufferPtrInput` via:
//
//	        DiskBackedMessageBufferArgs{...}
//
//	or:
//
//	        nil
type DiskBackedMessageBufferPtrInput interface {
	pulumi.Input

	ToDiskBackedMessageBufferPtrOutput() DiskBackedMessageBufferPtrOutput
	ToDiskBackedMessageBufferPtrOutputWithContext(context.Context) DiskBackedMessageBufferPtrOutput
}

type diskBackedMessageBufferPtrType DiskBackedMessageBufferArgs

func DiskBackedMessageBufferPtr(v *DiskBackedMessageBufferArgs) DiskBackedMessageBufferPtrInput {
	return (*diskBackedMessageBufferPtrType)(v)
}

func (*diskBackedMessageBufferPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DiskBackedMessageBuffer)(nil)).Elem()
}

func (i *diskBackedMessageBufferPtrType) ToDiskBackedMessageBufferPtrOutput() DiskBackedMessageBufferPtrOutput {
	return i.ToDiskBackedMessageBufferPtrOutputWithContext(context.Background())
}

func (i *diskBackedMessageBufferPtrType) ToDiskBackedMessageBufferPtrOutputWithContext(ctx context.Context) DiskBackedMessageBufferPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DiskBackedMessageBufferPtrOutput)
}

// DiskBackedMessageBuffer properties
type DiskBackedMessageBufferOutput struct{ *pulumi.OutputState }

func (DiskBackedMessageBufferOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DiskBackedMessageBuffer)(nil)).Elem()
}

func (o DiskBackedMessageBufferOutput) ToDiskBackedMessageBufferOutput() DiskBackedMessageBufferOutput {
	return o
}

func (o DiskBackedMessageBufferOutput) ToDiskBackedMessageBufferOutputWithContext(ctx context.Context) DiskBackedMessageBufferOutput {
	return o
}

func (o DiskBackedMessageBufferOutput) ToDiskBackedMessageBufferPtrOutput() DiskBackedMessageBufferPtrOutput {
	return o.ToDiskBackedMessageBufferPtrOutputWithContext(context.Background())
}

func (o DiskBackedMessageBufferOutput) ToDiskBackedMessageBufferPtrOutputWithContext(ctx context.Context) DiskBackedMessageBufferPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DiskBackedMessageBuffer) *DiskBackedMessageBuffer {
		return &v
	}).(DiskBackedMessageBufferPtrOutput)
}

// Use the specified persistent volume claim template to mount a "generic ephemeral volume" for the message buffer. See <https://kubernetes.io/docs/concepts/storage/ephemeral-volumes/#generic-ephemeral-volumes> for details.
func (o DiskBackedMessageBufferOutput) EphemeralVolumeClaimSpec() VolumeClaimSpecPtrOutput {
	return o.ApplyT(func(v DiskBackedMessageBuffer) *VolumeClaimSpec { return v.EphemeralVolumeClaimSpec }).(VolumeClaimSpecPtrOutput)
}

// The max size of the message buffer on disk. If a PVC template is specified using one of ephemeralVolumeClaimSpec or persistentVolumeClaimSpec, then this size is used as the request and limit sizes of that template. If neither ephemeralVolumeClaimSpec nor persistentVolumeClaimSpec are specified, then an emptyDir volume is mounted with this size as its limit. See <https://kubernetes.io/docs/concepts/storage/volumes/#emptydir> for details.
func (o DiskBackedMessageBufferOutput) MaxSize() pulumi.StringOutput {
	return o.ApplyT(func(v DiskBackedMessageBuffer) string { return v.MaxSize }).(pulumi.StringOutput)
}

// Use the specified persistent volume claim template to mount a persistent volume for the message buffer.
func (o DiskBackedMessageBufferOutput) PersistentVolumeClaimSpec() VolumeClaimSpecPtrOutput {
	return o.ApplyT(func(v DiskBackedMessageBuffer) *VolumeClaimSpec { return v.PersistentVolumeClaimSpec }).(VolumeClaimSpecPtrOutput)
}

type DiskBackedMessageBufferPtrOutput struct{ *pulumi.OutputState }

func (DiskBackedMessageBufferPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DiskBackedMessageBuffer)(nil)).Elem()
}

func (o DiskBackedMessageBufferPtrOutput) ToDiskBackedMessageBufferPtrOutput() DiskBackedMessageBufferPtrOutput {
	return o
}

func (o DiskBackedMessageBufferPtrOutput) ToDiskBackedMessageBufferPtrOutputWithContext(ctx context.Context) DiskBackedMessageBufferPtrOutput {
	return o
}

func (o DiskBackedMessageBufferPtrOutput) Elem() DiskBackedMessageBufferOutput {
	return o.ApplyT(func(v *DiskBackedMessageBuffer) DiskBackedMessageBuffer {
		if v != nil {
			return *v
		}
		var ret DiskBackedMessageBuffer
		return ret
	}).(DiskBackedMessageBufferOutput)
}

// Use the specified persistent volume claim template to mount a "generic ephemeral volume" for the message buffer. See <https://kubernetes.io/docs/concepts/storage/ephemeral-volumes/#generic-ephemeral-volumes> for details.
func (o DiskBackedMessageBufferPtrOutput) EphemeralVolumeClaimSpec() VolumeClaimSpecPtrOutput {
	return o.ApplyT(func(v *DiskBackedMessageBuffer) *VolumeClaimSpec {
		if v == nil {
			return nil
		}
		return v.EphemeralVolumeClaimSpec
	}).(VolumeClaimSpecPtrOutput)
}

// The max size of the message buffer on disk. If a PVC template is specified using one of ephemeralVolumeClaimSpec or persistentVolumeClaimSpec, then this size is used as the request and limit sizes of that template. If neither ephemeralVolumeClaimSpec nor persistentVolumeClaimSpec are specified, then an emptyDir volume is mounted with this size as its limit. See <https://kubernetes.io/docs/concepts/storage/volumes/#emptydir> for details.
func (o DiskBackedMessageBufferPtrOutput) MaxSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DiskBackedMessageBuffer) *string {
		if v == nil {
			return nil
		}
		return &v.MaxSize
	}).(pulumi.StringPtrOutput)
}

// Use the specified persistent volume claim template to mount a persistent volume for the message buffer.
func (o DiskBackedMessageBufferPtrOutput) PersistentVolumeClaimSpec() VolumeClaimSpecPtrOutput {
	return o.ApplyT(func(v *DiskBackedMessageBuffer) *VolumeClaimSpec {
		if v == nil {
			return nil
		}
		return v.PersistentVolumeClaimSpec
	}).(VolumeClaimSpecPtrOutput)
}

// DiskBackedMessageBuffer properties
type DiskBackedMessageBufferResponse struct {
	// Use the specified persistent volume claim template to mount a "generic ephemeral volume" for the message buffer. See <https://kubernetes.io/docs/concepts/storage/ephemeral-volumes/#generic-ephemeral-volumes> for details.
	EphemeralVolumeClaimSpec *VolumeClaimSpecResponse `pulumi:"ephemeralVolumeClaimSpec"`
	// The max size of the message buffer on disk. If a PVC template is specified using one of ephemeralVolumeClaimSpec or persistentVolumeClaimSpec, then this size is used as the request and limit sizes of that template. If neither ephemeralVolumeClaimSpec nor persistentVolumeClaimSpec are specified, then an emptyDir volume is mounted with this size as its limit. See <https://kubernetes.io/docs/concepts/storage/volumes/#emptydir> for details.
	MaxSize string `pulumi:"maxSize"`
	// Use the specified persistent volume claim template to mount a persistent volume for the message buffer.
	PersistentVolumeClaimSpec *VolumeClaimSpecResponse `pulumi:"persistentVolumeClaimSpec"`
}

// DiskBackedMessageBuffer properties
type DiskBackedMessageBufferResponseOutput struct{ *pulumi.OutputState }

func (DiskBackedMessageBufferResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DiskBackedMessageBufferResponse)(nil)).Elem()
}

func (o DiskBackedMessageBufferResponseOutput) ToDiskBackedMessageBufferResponseOutput() DiskBackedMessageBufferResponseOutput {
	return o
}

func (o DiskBackedMessageBufferResponseOutput) ToDiskBackedMessageBufferResponseOutputWithContext(ctx context.Context) DiskBackedMessageBufferResponseOutput {
	return o
}

// Use the specified persistent volume claim template to mount a "generic ephemeral volume" for the message buffer. See <https://kubernetes.io/docs/concepts/storage/ephemeral-volumes/#generic-ephemeral-volumes> for details.
func (o DiskBackedMessageBufferResponseOutput) EphemeralVolumeClaimSpec() VolumeClaimSpecResponsePtrOutput {
	return o.ApplyT(func(v DiskBackedMessageBufferResponse) *VolumeClaimSpecResponse { return v.EphemeralVolumeClaimSpec }).(VolumeClaimSpecResponsePtrOutput)
}

// The max size of the message buffer on disk. If a PVC template is specified using one of ephemeralVolumeClaimSpec or persistentVolumeClaimSpec, then this size is used as the request and limit sizes of that template. If neither ephemeralVolumeClaimSpec nor persistentVolumeClaimSpec are specified, then an emptyDir volume is mounted with this size as its limit. See <https://kubernetes.io/docs/concepts/storage/volumes/#emptydir> for details.
func (o DiskBackedMessageBufferResponseOutput) MaxSize() pulumi.StringOutput {
	return o.ApplyT(func(v DiskBackedMessageBufferResponse) string { return v.MaxSize }).(pulumi.StringOutput)
}

// Use the specified persistent volume claim template to mount a persistent volume for the message buffer.
func (o DiskBackedMessageBufferResponseOutput) PersistentVolumeClaimSpec() VolumeClaimSpecResponsePtrOutput {
	return o.ApplyT(func(v DiskBackedMessageBufferResponse) *VolumeClaimSpecResponse { return v.PersistentVolumeClaimSpec }).(VolumeClaimSpecResponsePtrOutput)
}

type DiskBackedMessageBufferResponsePtrOutput struct{ *pulumi.OutputState }

func (DiskBackedMessageBufferResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DiskBackedMessageBufferResponse)(nil)).Elem()
}

func (o DiskBackedMessageBufferResponsePtrOutput) ToDiskBackedMessageBufferResponsePtrOutput() DiskBackedMessageBufferResponsePtrOutput {
	return o
}

func (o DiskBackedMessageBufferResponsePtrOutput) ToDiskBackedMessageBufferResponsePtrOutputWithContext(ctx context.Context) DiskBackedMessageBufferResponsePtrOutput {
	return o
}

func (o DiskBackedMessageBufferResponsePtrOutput) Elem() DiskBackedMessageBufferResponseOutput {
	return o.ApplyT(func(v *DiskBackedMessageBufferResponse) DiskBackedMessageBufferResponse {
		if v != nil {
			return *v
		}
		var ret DiskBackedMessageBufferResponse
		return ret
	}).(DiskBackedMessageBufferResponseOutput)
}

// Use the specified persistent volume claim template to mount a "generic ephemeral volume" for the message buffer. See <https://kubernetes.io/docs/concepts/storage/ephemeral-volumes/#generic-ephemeral-volumes> for details.
func (o DiskBackedMessageBufferResponsePtrOutput) EphemeralVolumeClaimSpec() VolumeClaimSpecResponsePtrOutput {
	return o.ApplyT(func(v *DiskBackedMessageBufferResponse) *VolumeClaimSpecResponse {
		if v == nil {
			return nil
		}
		return v.EphemeralVolumeClaimSpec
	}).(VolumeClaimSpecResponsePtrOutput)
}

// The max size of the message buffer on disk. If a PVC template is specified using one of ephemeralVolumeClaimSpec or persistentVolumeClaimSpec, then this size is used as the request and limit sizes of that template. If neither ephemeralVolumeClaimSpec nor persistentVolumeClaimSpec are specified, then an emptyDir volume is mounted with this size as its limit. See <https://kubernetes.io/docs/concepts/storage/volumes/#emptydir> for details.
func (o DiskBackedMessageBufferResponsePtrOutput) MaxSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DiskBackedMessageBufferResponse) *string {
		if v == nil {
			return nil
		}
		return &v.MaxSize
	}).(pulumi.StringPtrOutput)
}

// Use the specified persistent volume claim template to mount a persistent volume for the message buffer.
func (o DiskBackedMessageBufferResponsePtrOutput) PersistentVolumeClaimSpec() VolumeClaimSpecResponsePtrOutput {
	return o.ApplyT(func(v *DiskBackedMessageBufferResponse) *VolumeClaimSpecResponse {
		if v == nil {
			return nil
		}
		return v.PersistentVolumeClaimSpec
	}).(VolumeClaimSpecResponsePtrOutput)
}

// Extended location is an extension of Azure locations. They provide a way to use their Azure ARC enabled Kubernetes clusters as target locations for deploying Azure services instances.
type ExtendedLocation struct {
	// The name of the extended location.
	Name string `pulumi:"name"`
	// Type of ExtendedLocation.
	Type string `pulumi:"type"`
}

// ExtendedLocationInput is an input type that accepts ExtendedLocationArgs and ExtendedLocationOutput values.
// You can construct a concrete instance of `ExtendedLocationInput` via:
//
//	ExtendedLocationArgs{...}
type ExtendedLocationInput interface {
	pulumi.Input

	ToExtendedLocationOutput() ExtendedLocationOutput
	ToExtendedLocationOutputWithContext(context.Context) ExtendedLocationOutput
}

// Extended location is an extension of Azure locations. They provide a way to use their Azure ARC enabled Kubernetes clusters as target locations for deploying Azure services instances.
type ExtendedLocationArgs struct {
	// The name of the extended location.
	Name pulumi.StringInput `pulumi:"name"`
	// Type of ExtendedLocation.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ExtendedLocationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtendedLocation)(nil)).Elem()
}

func (i ExtendedLocationArgs) ToExtendedLocationOutput() ExtendedLocationOutput {
	return i.ToExtendedLocationOutputWithContext(context.Background())
}

func (i ExtendedLocationArgs) ToExtendedLocationOutputWithContext(ctx context.Context) ExtendedLocationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtendedLocationOutput)
}

func (i ExtendedLocationArgs) ToExtendedLocationPtrOutput() ExtendedLocationPtrOutput {
	return i.ToExtendedLocationPtrOutputWithContext(context.Background())
}

func (i ExtendedLocationArgs) ToExtendedLocationPtrOutputWithContext(ctx context.Context) ExtendedLocationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtendedLocationOutput).ToExtendedLocationPtrOutputWithContext(ctx)
}

// ExtendedLocationPtrInput is an input type that accepts ExtendedLocationArgs, ExtendedLocationPtr and ExtendedLocationPtrOutput values.
// You can construct a concrete instance of `ExtendedLocationPtrInput` via:
//
//	        ExtendedLocationArgs{...}
//
//	or:
//
//	        nil
type ExtendedLocationPtrInput interface {
	pulumi.Input

	ToExtendedLocationPtrOutput() ExtendedLocationPtrOutput
	ToExtendedLocationPtrOutputWithContext(context.Context) ExtendedLocationPtrOutput
}

type extendedLocationPtrType ExtendedLocationArgs

func ExtendedLocationPtr(v *ExtendedLocationArgs) ExtendedLocationPtrInput {
	return (*extendedLocationPtrType)(v)
}

func (*extendedLocationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ExtendedLocation)(nil)).Elem()
}

func (i *extendedLocationPtrType) ToExtendedLocationPtrOutput() ExtendedLocationPtrOutput {
	return i.ToExtendedLocationPtrOutputWithContext(context.Background())
}

func (i *extendedLocationPtrType) ToExtendedLocationPtrOutputWithContext(ctx context.Context) ExtendedLocationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtendedLocationPtrOutput)
}

// Extended location is an extension of Azure locations. They provide a way to use their Azure ARC enabled Kubernetes clusters as target locations for deploying Azure services instances.
type ExtendedLocationOutput struct{ *pulumi.OutputState }

func (ExtendedLocationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtendedLocation)(nil)).Elem()
}

func (o ExtendedLocationOutput) ToExtendedLocationOutput() ExtendedLocationOutput {
	return o
}

func (o ExtendedLocationOutput) ToExtendedLocationOutputWithContext(ctx context.Context) ExtendedLocationOutput {
	return o
}

func (o ExtendedLocationOutput) ToExtendedLocationPtrOutput() ExtendedLocationPtrOutput {
	return o.ToExtendedLocationPtrOutputWithContext(context.Background())
}

func (o ExtendedLocationOutput) ToExtendedLocationPtrOutputWithContext(ctx context.Context) ExtendedLocationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ExtendedLocation) *ExtendedLocation {
		return &v
	}).(ExtendedLocationPtrOutput)
}

// The name of the extended location.
func (o ExtendedLocationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ExtendedLocation) string { return v.Name }).(pulumi.StringOutput)
}

// Type of ExtendedLocation.
func (o ExtendedLocationOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ExtendedLocation) string { return v.Type }).(pulumi.StringOutput)
}

type ExtendedLocationPtrOutput struct{ *pulumi.OutputState }

func (ExtendedLocationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExtendedLocation)(nil)).Elem()
}

func (o ExtendedLocationPtrOutput) ToExtendedLocationPtrOutput() ExtendedLocationPtrOutput {
	return o
}

func (o ExtendedLocationPtrOutput) ToExtendedLocationPtrOutputWithContext(ctx context.Context) ExtendedLocationPtrOutput {
	return o
}

func (o ExtendedLocationPtrOutput) Elem() ExtendedLocationOutput {
	return o.ApplyT(func(v *ExtendedLocation) ExtendedLocation {
		if v != nil {
			return *v
		}
		var ret ExtendedLocation
		return ret
	}).(ExtendedLocationOutput)
}

// The name of the extended location.
func (o ExtendedLocationPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtendedLocation) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Type of ExtendedLocation.
func (o ExtendedLocationPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtendedLocation) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// Extended location is an extension of Azure locations. They provide a way to use their Azure ARC enabled Kubernetes clusters as target locations for deploying Azure services instances.
type ExtendedLocationResponse struct {
	// The name of the extended location.
	Name string `pulumi:"name"`
	// Type of ExtendedLocation.
	Type string `pulumi:"type"`
}

// Extended location is an extension of Azure locations. They provide a way to use their Azure ARC enabled Kubernetes clusters as target locations for deploying Azure services instances.
type ExtendedLocationResponseOutput struct{ *pulumi.OutputState }

func (ExtendedLocationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtendedLocationResponse)(nil)).Elem()
}

func (o ExtendedLocationResponseOutput) ToExtendedLocationResponseOutput() ExtendedLocationResponseOutput {
	return o
}

func (o ExtendedLocationResponseOutput) ToExtendedLocationResponseOutputWithContext(ctx context.Context) ExtendedLocationResponseOutput {
	return o
}

// The name of the extended location.
func (o ExtendedLocationResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ExtendedLocationResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Type of ExtendedLocation.
func (o ExtendedLocationResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ExtendedLocationResponse) string { return v.Type }).(pulumi.StringOutput)
}

type ExtendedLocationResponsePtrOutput struct{ *pulumi.OutputState }

func (ExtendedLocationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExtendedLocationResponse)(nil)).Elem()
}

func (o ExtendedLocationResponsePtrOutput) ToExtendedLocationResponsePtrOutput() ExtendedLocationResponsePtrOutput {
	return o
}

func (o ExtendedLocationResponsePtrOutput) ToExtendedLocationResponsePtrOutputWithContext(ctx context.Context) ExtendedLocationResponsePtrOutput {
	return o
}

func (o ExtendedLocationResponsePtrOutput) Elem() ExtendedLocationResponseOutput {
	return o.ApplyT(func(v *ExtendedLocationResponse) ExtendedLocationResponse {
		if v != nil {
			return *v
		}
		var ret ExtendedLocationResponse
		return ret
	}).(ExtendedLocationResponseOutput)
}

// The name of the extended location.
func (o ExtendedLocationResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtendedLocationResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Type of ExtendedLocation.
func (o ExtendedLocationResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtendedLocationResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// The desired properties of the frontend instances of the Broker
type Frontend struct {
	// The desired number of frontend instances (pods).
	Replicas int `pulumi:"replicas"`
	// Number of logical frontend workers per instance (pod).
	Workers *int `pulumi:"workers"`
}

// Defaults sets the appropriate defaults for Frontend
func (val *Frontend) Defaults() *Frontend {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Workers == nil {
		workers_ := 2
		tmp.Workers = &workers_
	}
	return &tmp
}

// FrontendInput is an input type that accepts FrontendArgs and FrontendOutput values.
// You can construct a concrete instance of `FrontendInput` via:
//
//	FrontendArgs{...}
type FrontendInput interface {
	pulumi.Input

	ToFrontendOutput() FrontendOutput
	ToFrontendOutputWithContext(context.Context) FrontendOutput
}

// The desired properties of the frontend instances of the Broker
type FrontendArgs struct {
	// The desired number of frontend instances (pods).
	Replicas pulumi.IntInput `pulumi:"replicas"`
	// Number of logical frontend workers per instance (pod).
	Workers pulumi.IntPtrInput `pulumi:"workers"`
}

// Defaults sets the appropriate defaults for FrontendArgs
func (val *FrontendArgs) Defaults() *FrontendArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Workers == nil {
		tmp.Workers = pulumi.IntPtr(2)
	}
	return &tmp
}
func (FrontendArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Frontend)(nil)).Elem()
}

func (i FrontendArgs) ToFrontendOutput() FrontendOutput {
	return i.ToFrontendOutputWithContext(context.Background())
}

func (i FrontendArgs) ToFrontendOutputWithContext(ctx context.Context) FrontendOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FrontendOutput)
}

func (i FrontendArgs) ToFrontendPtrOutput() FrontendPtrOutput {
	return i.ToFrontendPtrOutputWithContext(context.Background())
}

func (i FrontendArgs) ToFrontendPtrOutputWithContext(ctx context.Context) FrontendPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FrontendOutput).ToFrontendPtrOutputWithContext(ctx)
}

// FrontendPtrInput is an input type that accepts FrontendArgs, FrontendPtr and FrontendPtrOutput values.
// You can construct a concrete instance of `FrontendPtrInput` via:
//
//	        FrontendArgs{...}
//
//	or:
//
//	        nil
type FrontendPtrInput interface {
	pulumi.Input

	ToFrontendPtrOutput() FrontendPtrOutput
	ToFrontendPtrOutputWithContext(context.Context) FrontendPtrOutput
}

type frontendPtrType FrontendArgs

func FrontendPtr(v *FrontendArgs) FrontendPtrInput {
	return (*frontendPtrType)(v)
}

func (*frontendPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Frontend)(nil)).Elem()
}

func (i *frontendPtrType) ToFrontendPtrOutput() FrontendPtrOutput {
	return i.ToFrontendPtrOutputWithContext(context.Background())
}

func (i *frontendPtrType) ToFrontendPtrOutputWithContext(ctx context.Context) FrontendPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FrontendPtrOutput)
}

// The desired properties of the frontend instances of the Broker
type FrontendOutput struct{ *pulumi.OutputState }

func (FrontendOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Frontend)(nil)).Elem()
}

func (o FrontendOutput) ToFrontendOutput() FrontendOutput {
	return o
}

func (o FrontendOutput) ToFrontendOutputWithContext(ctx context.Context) FrontendOutput {
	return o
}

func (o FrontendOutput) ToFrontendPtrOutput() FrontendPtrOutput {
	return o.ToFrontendPtrOutputWithContext(context.Background())
}

func (o FrontendOutput) ToFrontendPtrOutputWithContext(ctx context.Context) FrontendPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Frontend) *Frontend {
		return &v
	}).(FrontendPtrOutput)
}

// The desired number of frontend instances (pods).
func (o FrontendOutput) Replicas() pulumi.IntOutput {
	return o.ApplyT(func(v Frontend) int { return v.Replicas }).(pulumi.IntOutput)
}

// Number of logical frontend workers per instance (pod).
func (o FrontendOutput) Workers() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Frontend) *int { return v.Workers }).(pulumi.IntPtrOutput)
}

type FrontendPtrOutput struct{ *pulumi.OutputState }

func (FrontendPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Frontend)(nil)).Elem()
}

func (o FrontendPtrOutput) ToFrontendPtrOutput() FrontendPtrOutput {
	return o
}

func (o FrontendPtrOutput) ToFrontendPtrOutputWithContext(ctx context.Context) FrontendPtrOutput {
	return o
}

func (o FrontendPtrOutput) Elem() FrontendOutput {
	return o.ApplyT(func(v *Frontend) Frontend {
		if v != nil {
			return *v
		}
		var ret Frontend
		return ret
	}).(FrontendOutput)
}

// The desired number of frontend instances (pods).
func (o FrontendPtrOutput) Replicas() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Frontend) *int {
		if v == nil {
			return nil
		}
		return &v.Replicas
	}).(pulumi.IntPtrOutput)
}

// Number of logical frontend workers per instance (pod).
func (o FrontendPtrOutput) Workers() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Frontend) *int {
		if v == nil {
			return nil
		}
		return v.Workers
	}).(pulumi.IntPtrOutput)
}

// The desired properties of the frontend instances of the Broker
type FrontendResponse struct {
	// The desired number of frontend instances (pods).
	Replicas int `pulumi:"replicas"`
	// Number of logical frontend workers per instance (pod).
	Workers *int `pulumi:"workers"`
}

// Defaults sets the appropriate defaults for FrontendResponse
func (val *FrontendResponse) Defaults() *FrontendResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Workers == nil {
		workers_ := 2
		tmp.Workers = &workers_
	}
	return &tmp
}

// The desired properties of the frontend instances of the Broker
type FrontendResponseOutput struct{ *pulumi.OutputState }

func (FrontendResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FrontendResponse)(nil)).Elem()
}

func (o FrontendResponseOutput) ToFrontendResponseOutput() FrontendResponseOutput {
	return o
}

func (o FrontendResponseOutput) ToFrontendResponseOutputWithContext(ctx context.Context) FrontendResponseOutput {
	return o
}

// The desired number of frontend instances (pods).
func (o FrontendResponseOutput) Replicas() pulumi.IntOutput {
	return o.ApplyT(func(v FrontendResponse) int { return v.Replicas }).(pulumi.IntOutput)
}

// Number of logical frontend workers per instance (pod).
func (o FrontendResponseOutput) Workers() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FrontendResponse) *int { return v.Workers }).(pulumi.IntPtrOutput)
}

type FrontendResponsePtrOutput struct{ *pulumi.OutputState }

func (FrontendResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FrontendResponse)(nil)).Elem()
}

func (o FrontendResponsePtrOutput) ToFrontendResponsePtrOutput() FrontendResponsePtrOutput {
	return o
}

func (o FrontendResponsePtrOutput) ToFrontendResponsePtrOutputWithContext(ctx context.Context) FrontendResponsePtrOutput {
	return o
}

func (o FrontendResponsePtrOutput) Elem() FrontendResponseOutput {
	return o.ApplyT(func(v *FrontendResponse) FrontendResponse {
		if v != nil {
			return *v
		}
		var ret FrontendResponse
		return ret
	}).(FrontendResponseOutput)
}

// The desired number of frontend instances (pods).
func (o FrontendResponsePtrOutput) Replicas() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FrontendResponse) *int {
		if v == nil {
			return nil
		}
		return &v.Replicas
	}).(pulumi.IntPtrOutput)
}

// Number of logical frontend workers per instance (pod).
func (o FrontendResponsePtrOutput) Workers() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FrontendResponse) *int {
		if v == nil {
			return nil
		}
		return v.Workers
	}).(pulumi.IntPtrOutput)
}

// GenerateResourceLimits properties
type GenerateResourceLimits struct {
	// The toggle to enable/disable cpu resource limits.
	Cpu *string `pulumi:"cpu"`
}

// Defaults sets the appropriate defaults for GenerateResourceLimits
func (val *GenerateResourceLimits) Defaults() *GenerateResourceLimits {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Cpu == nil {
		cpu_ := "Enabled"
		tmp.Cpu = &cpu_
	}
	return &tmp
}

// GenerateResourceLimitsInput is an input type that accepts GenerateResourceLimitsArgs and GenerateResourceLimitsOutput values.
// You can construct a concrete instance of `GenerateResourceLimitsInput` via:
//
//	GenerateResourceLimitsArgs{...}
type GenerateResourceLimitsInput interface {
	pulumi.Input

	ToGenerateResourceLimitsOutput() GenerateResourceLimitsOutput
	ToGenerateResourceLimitsOutputWithContext(context.Context) GenerateResourceLimitsOutput
}

// GenerateResourceLimits properties
type GenerateResourceLimitsArgs struct {
	// The toggle to enable/disable cpu resource limits.
	Cpu pulumi.StringPtrInput `pulumi:"cpu"`
}

// Defaults sets the appropriate defaults for GenerateResourceLimitsArgs
func (val *GenerateResourceLimitsArgs) Defaults() *GenerateResourceLimitsArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Cpu == nil {
		tmp.Cpu = pulumi.StringPtr("Enabled")
	}
	return &tmp
}
func (GenerateResourceLimitsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GenerateResourceLimits)(nil)).Elem()
}

func (i GenerateResourceLimitsArgs) ToGenerateResourceLimitsOutput() GenerateResourceLimitsOutput {
	return i.ToGenerateResourceLimitsOutputWithContext(context.Background())
}

func (i GenerateResourceLimitsArgs) ToGenerateResourceLimitsOutputWithContext(ctx context.Context) GenerateResourceLimitsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GenerateResourceLimitsOutput)
}

func (i GenerateResourceLimitsArgs) ToGenerateResourceLimitsPtrOutput() GenerateResourceLimitsPtrOutput {
	return i.ToGenerateResourceLimitsPtrOutputWithContext(context.Background())
}

func (i GenerateResourceLimitsArgs) ToGenerateResourceLimitsPtrOutputWithContext(ctx context.Context) GenerateResourceLimitsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GenerateResourceLimitsOutput).ToGenerateResourceLimitsPtrOutputWithContext(ctx)
}

// GenerateResourceLimitsPtrInput is an input type that accepts GenerateResourceLimitsArgs, GenerateResourceLimitsPtr and GenerateResourceLimitsPtrOutput values.
// You can construct a concrete instance of `GenerateResourceLimitsPtrInput` via:
//
//	        GenerateResourceLimitsArgs{...}
//
//	or:
//
//	        nil
type GenerateResourceLimitsPtrInput interface {
	pulumi.Input

	ToGenerateResourceLimitsPtrOutput() GenerateResourceLimitsPtrOutput
	ToGenerateResourceLimitsPtrOutputWithContext(context.Context) GenerateResourceLimitsPtrOutput
}

type generateResourceLimitsPtrType GenerateResourceLimitsArgs

func GenerateResourceLimitsPtr(v *GenerateResourceLimitsArgs) GenerateResourceLimitsPtrInput {
	return (*generateResourceLimitsPtrType)(v)
}

func (*generateResourceLimitsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GenerateResourceLimits)(nil)).Elem()
}

func (i *generateResourceLimitsPtrType) ToGenerateResourceLimitsPtrOutput() GenerateResourceLimitsPtrOutput {
	return i.ToGenerateResourceLimitsPtrOutputWithContext(context.Background())
}

func (i *generateResourceLimitsPtrType) ToGenerateResourceLimitsPtrOutputWithContext(ctx context.Context) GenerateResourceLimitsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GenerateResourceLimitsPtrOutput)
}

// GenerateResourceLimits properties
type GenerateResourceLimitsOutput struct{ *pulumi.OutputState }

func (GenerateResourceLimitsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GenerateResourceLimits)(nil)).Elem()
}

func (o GenerateResourceLimitsOutput) ToGenerateResourceLimitsOutput() GenerateResourceLimitsOutput {
	return o
}

func (o GenerateResourceLimitsOutput) ToGenerateResourceLimitsOutputWithContext(ctx context.Context) GenerateResourceLimitsOutput {
	return o
}

func (o GenerateResourceLimitsOutput) ToGenerateResourceLimitsPtrOutput() GenerateResourceLimitsPtrOutput {
	return o.ToGenerateResourceLimitsPtrOutputWithContext(context.Background())
}

func (o GenerateResourceLimitsOutput) ToGenerateResourceLimitsPtrOutputWithContext(ctx context.Context) GenerateResourceLimitsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GenerateResourceLimits) *GenerateResourceLimits {
		return &v
	}).(GenerateResourceLimitsPtrOutput)
}

// The toggle to enable/disable cpu resource limits.
func (o GenerateResourceLimitsOutput) Cpu() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GenerateResourceLimits) *string { return v.Cpu }).(pulumi.StringPtrOutput)
}

type GenerateResourceLimitsPtrOutput struct{ *pulumi.OutputState }

func (GenerateResourceLimitsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GenerateResourceLimits)(nil)).Elem()
}

func (o GenerateResourceLimitsPtrOutput) ToGenerateResourceLimitsPtrOutput() GenerateResourceLimitsPtrOutput {
	return o
}

func (o GenerateResourceLimitsPtrOutput) ToGenerateResourceLimitsPtrOutputWithContext(ctx context.Context) GenerateResourceLimitsPtrOutput {
	return o
}

func (o GenerateResourceLimitsPtrOutput) Elem() GenerateResourceLimitsOutput {
	return o.ApplyT(func(v *GenerateResourceLimits) GenerateResourceLimits {
		if v != nil {
			return *v
		}
		var ret GenerateResourceLimits
		return ret
	}).(GenerateResourceLimitsOutput)
}

// The toggle to enable/disable cpu resource limits.
func (o GenerateResourceLimitsPtrOutput) Cpu() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GenerateResourceLimits) *string {
		if v == nil {
			return nil
		}
		return v.Cpu
	}).(pulumi.StringPtrOutput)
}

// GenerateResourceLimits properties
type GenerateResourceLimitsResponse struct {
	// The toggle to enable/disable cpu resource limits.
	Cpu *string `pulumi:"cpu"`
}

// Defaults sets the appropriate defaults for GenerateResourceLimitsResponse
func (val *GenerateResourceLimitsResponse) Defaults() *GenerateResourceLimitsResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Cpu == nil {
		cpu_ := "Enabled"
		tmp.Cpu = &cpu_
	}
	return &tmp
}

// GenerateResourceLimits properties
type GenerateResourceLimitsResponseOutput struct{ *pulumi.OutputState }

func (GenerateResourceLimitsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GenerateResourceLimitsResponse)(nil)).Elem()
}

func (o GenerateResourceLimitsResponseOutput) ToGenerateResourceLimitsResponseOutput() GenerateResourceLimitsResponseOutput {
	return o
}

func (o GenerateResourceLimitsResponseOutput) ToGenerateResourceLimitsResponseOutputWithContext(ctx context.Context) GenerateResourceLimitsResponseOutput {
	return o
}

// The toggle to enable/disable cpu resource limits.
func (o GenerateResourceLimitsResponseOutput) Cpu() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GenerateResourceLimitsResponse) *string { return v.Cpu }).(pulumi.StringPtrOutput)
}

type GenerateResourceLimitsResponsePtrOutput struct{ *pulumi.OutputState }

func (GenerateResourceLimitsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GenerateResourceLimitsResponse)(nil)).Elem()
}

func (o GenerateResourceLimitsResponsePtrOutput) ToGenerateResourceLimitsResponsePtrOutput() GenerateResourceLimitsResponsePtrOutput {
	return o
}

func (o GenerateResourceLimitsResponsePtrOutput) ToGenerateResourceLimitsResponsePtrOutputWithContext(ctx context.Context) GenerateResourceLimitsResponsePtrOutput {
	return o
}

func (o GenerateResourceLimitsResponsePtrOutput) Elem() GenerateResourceLimitsResponseOutput {
	return o.ApplyT(func(v *GenerateResourceLimitsResponse) GenerateResourceLimitsResponse {
		if v != nil {
			return *v
		}
		var ret GenerateResourceLimitsResponse
		return ret
	}).(GenerateResourceLimitsResponseOutput)
}

// The toggle to enable/disable cpu resource limits.
func (o GenerateResourceLimitsResponsePtrOutput) Cpu() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GenerateResourceLimitsResponse) *string {
		if v == nil {
			return nil
		}
		return v.Cpu
	}).(pulumi.StringPtrOutput)
}

// The properties of the Instance resource.
type InstanceProperties struct {
	// Detailed description of the Instance.
	Description *string `pulumi:"description"`
	// The reference to the Schema Registry for this AIO Instance.
	SchemaRegistryRef SchemaRegistryRef `pulumi:"schemaRegistryRef"`
}

// InstancePropertiesInput is an input type that accepts InstancePropertiesArgs and InstancePropertiesOutput values.
// You can construct a concrete instance of `InstancePropertiesInput` via:
//
//	InstancePropertiesArgs{...}
type InstancePropertiesInput interface {
	pulumi.Input

	ToInstancePropertiesOutput() InstancePropertiesOutput
	ToInstancePropertiesOutputWithContext(context.Context) InstancePropertiesOutput
}

// The properties of the Instance resource.
type InstancePropertiesArgs struct {
	// Detailed description of the Instance.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The reference to the Schema Registry for this AIO Instance.
	SchemaRegistryRef SchemaRegistryRefInput `pulumi:"schemaRegistryRef"`
}

func (InstancePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceProperties)(nil)).Elem()
}

func (i InstancePropertiesArgs) ToInstancePropertiesOutput() InstancePropertiesOutput {
	return i.ToInstancePropertiesOutputWithContext(context.Background())
}

func (i InstancePropertiesArgs) ToInstancePropertiesOutputWithContext(ctx context.Context) InstancePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstancePropertiesOutput)
}

func (i InstancePropertiesArgs) ToInstancePropertiesPtrOutput() InstancePropertiesPtrOutput {
	return i.ToInstancePropertiesPtrOutputWithContext(context.Background())
}

func (i InstancePropertiesArgs) ToInstancePropertiesPtrOutputWithContext(ctx context.Context) InstancePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstancePropertiesOutput).ToInstancePropertiesPtrOutputWithContext(ctx)
}

// InstancePropertiesPtrInput is an input type that accepts InstancePropertiesArgs, InstancePropertiesPtr and InstancePropertiesPtrOutput values.
// You can construct a concrete instance of `InstancePropertiesPtrInput` via:
//
//	        InstancePropertiesArgs{...}
//
//	or:
//
//	        nil
type InstancePropertiesPtrInput interface {
	pulumi.Input

	ToInstancePropertiesPtrOutput() InstancePropertiesPtrOutput
	ToInstancePropertiesPtrOutputWithContext(context.Context) InstancePropertiesPtrOutput
}

type instancePropertiesPtrType InstancePropertiesArgs

func InstancePropertiesPtr(v *InstancePropertiesArgs) InstancePropertiesPtrInput {
	return (*instancePropertiesPtrType)(v)
}

func (*instancePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceProperties)(nil)).Elem()
}

func (i *instancePropertiesPtrType) ToInstancePropertiesPtrOutput() InstancePropertiesPtrOutput {
	return i.ToInstancePropertiesPtrOutputWithContext(context.Background())
}

func (i *instancePropertiesPtrType) ToInstancePropertiesPtrOutputWithContext(ctx context.Context) InstancePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstancePropertiesPtrOutput)
}

// The properties of the Instance resource.
type InstancePropertiesOutput struct{ *pulumi.OutputState }

func (InstancePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceProperties)(nil)).Elem()
}

func (o InstancePropertiesOutput) ToInstancePropertiesOutput() InstancePropertiesOutput {
	return o
}

func (o InstancePropertiesOutput) ToInstancePropertiesOutputWithContext(ctx context.Context) InstancePropertiesOutput {
	return o
}

func (o InstancePropertiesOutput) ToInstancePropertiesPtrOutput() InstancePropertiesPtrOutput {
	return o.ToInstancePropertiesPtrOutputWithContext(context.Background())
}

func (o InstancePropertiesOutput) ToInstancePropertiesPtrOutputWithContext(ctx context.Context) InstancePropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InstanceProperties) *InstanceProperties {
		return &v
	}).(InstancePropertiesPtrOutput)
}

// Detailed description of the Instance.
func (o InstancePropertiesOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceProperties) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The reference to the Schema Registry for this AIO Instance.
func (o InstancePropertiesOutput) SchemaRegistryRef() SchemaRegistryRefOutput {
	return o.ApplyT(func(v InstanceProperties) SchemaRegistryRef { return v.SchemaRegistryRef }).(SchemaRegistryRefOutput)
}

type InstancePropertiesPtrOutput struct{ *pulumi.OutputState }

func (InstancePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceProperties)(nil)).Elem()
}

func (o InstancePropertiesPtrOutput) ToInstancePropertiesPtrOutput() InstancePropertiesPtrOutput {
	return o
}

func (o InstancePropertiesPtrOutput) ToInstancePropertiesPtrOutputWithContext(ctx context.Context) InstancePropertiesPtrOutput {
	return o
}

func (o InstancePropertiesPtrOutput) Elem() InstancePropertiesOutput {
	return o.ApplyT(func(v *InstanceProperties) InstanceProperties {
		if v != nil {
			return *v
		}
		var ret InstanceProperties
		return ret
	}).(InstancePropertiesOutput)
}

// Detailed description of the Instance.
func (o InstancePropertiesPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceProperties) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// The reference to the Schema Registry for this AIO Instance.
func (o InstancePropertiesPtrOutput) SchemaRegistryRef() SchemaRegistryRefPtrOutput {
	return o.ApplyT(func(v *InstanceProperties) *SchemaRegistryRef {
		if v == nil {
			return nil
		}
		return &v.SchemaRegistryRef
	}).(SchemaRegistryRefPtrOutput)
}

// The properties of the Instance resource.
type InstancePropertiesResponse struct {
	// Detailed description of the Instance.
	Description *string `pulumi:"description"`
	// The status of the last operation.
	ProvisioningState string `pulumi:"provisioningState"`
	// The reference to the Schema Registry for this AIO Instance.
	SchemaRegistryRef SchemaRegistryRefResponse `pulumi:"schemaRegistryRef"`
	// The Azure IoT Operations version.
	Version string `pulumi:"version"`
}

// The properties of the Instance resource.
type InstancePropertiesResponseOutput struct{ *pulumi.OutputState }

func (InstancePropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstancePropertiesResponse)(nil)).Elem()
}

func (o InstancePropertiesResponseOutput) ToInstancePropertiesResponseOutput() InstancePropertiesResponseOutput {
	return o
}

func (o InstancePropertiesResponseOutput) ToInstancePropertiesResponseOutputWithContext(ctx context.Context) InstancePropertiesResponseOutput {
	return o
}

// Detailed description of the Instance.
func (o InstancePropertiesResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstancePropertiesResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The status of the last operation.
func (o InstancePropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v InstancePropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The reference to the Schema Registry for this AIO Instance.
func (o InstancePropertiesResponseOutput) SchemaRegistryRef() SchemaRegistryRefResponseOutput {
	return o.ApplyT(func(v InstancePropertiesResponse) SchemaRegistryRefResponse { return v.SchemaRegistryRef }).(SchemaRegistryRefResponseOutput)
}

// The Azure IoT Operations version.
func (o InstancePropertiesResponseOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v InstancePropertiesResponse) string { return v.Version }).(pulumi.StringOutput)
}

// Kubernetes reference
type KubernetesReference struct {
	// APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required.
	ApiGroup *string `pulumi:"apiGroup"`
	// Kind is the type of resource being referenced
	Kind string `pulumi:"kind"`
	// Name is the name of resource being referenced
	Name string `pulumi:"name"`
	// Namespace is the namespace of the resource being referenced. This field is required when the resource has a namespace.
	Namespace *string `pulumi:"namespace"`
}

// KubernetesReferenceInput is an input type that accepts KubernetesReferenceArgs and KubernetesReferenceOutput values.
// You can construct a concrete instance of `KubernetesReferenceInput` via:
//
//	KubernetesReferenceArgs{...}
type KubernetesReferenceInput interface {
	pulumi.Input

	ToKubernetesReferenceOutput() KubernetesReferenceOutput
	ToKubernetesReferenceOutputWithContext(context.Context) KubernetesReferenceOutput
}

// Kubernetes reference
type KubernetesReferenceArgs struct {
	// APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required.
	ApiGroup pulumi.StringPtrInput `pulumi:"apiGroup"`
	// Kind is the type of resource being referenced
	Kind pulumi.StringInput `pulumi:"kind"`
	// Name is the name of resource being referenced
	Name pulumi.StringInput `pulumi:"name"`
	// Namespace is the namespace of the resource being referenced. This field is required when the resource has a namespace.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (KubernetesReferenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesReference)(nil)).Elem()
}

func (i KubernetesReferenceArgs) ToKubernetesReferenceOutput() KubernetesReferenceOutput {
	return i.ToKubernetesReferenceOutputWithContext(context.Background())
}

func (i KubernetesReferenceArgs) ToKubernetesReferenceOutputWithContext(ctx context.Context) KubernetesReferenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesReferenceOutput)
}

func (i KubernetesReferenceArgs) ToKubernetesReferencePtrOutput() KubernetesReferencePtrOutput {
	return i.ToKubernetesReferencePtrOutputWithContext(context.Background())
}

func (i KubernetesReferenceArgs) ToKubernetesReferencePtrOutputWithContext(ctx context.Context) KubernetesReferencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesReferenceOutput).ToKubernetesReferencePtrOutputWithContext(ctx)
}

// KubernetesReferencePtrInput is an input type that accepts KubernetesReferenceArgs, KubernetesReferencePtr and KubernetesReferencePtrOutput values.
// You can construct a concrete instance of `KubernetesReferencePtrInput` via:
//
//	        KubernetesReferenceArgs{...}
//
//	or:
//
//	        nil
type KubernetesReferencePtrInput interface {
	pulumi.Input

	ToKubernetesReferencePtrOutput() KubernetesReferencePtrOutput
	ToKubernetesReferencePtrOutputWithContext(context.Context) KubernetesReferencePtrOutput
}

type kubernetesReferencePtrType KubernetesReferenceArgs

func KubernetesReferencePtr(v *KubernetesReferenceArgs) KubernetesReferencePtrInput {
	return (*kubernetesReferencePtrType)(v)
}

func (*kubernetesReferencePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesReference)(nil)).Elem()
}

func (i *kubernetesReferencePtrType) ToKubernetesReferencePtrOutput() KubernetesReferencePtrOutput {
	return i.ToKubernetesReferencePtrOutputWithContext(context.Background())
}

func (i *kubernetesReferencePtrType) ToKubernetesReferencePtrOutputWithContext(ctx context.Context) KubernetesReferencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesReferencePtrOutput)
}

// Kubernetes reference
type KubernetesReferenceOutput struct{ *pulumi.OutputState }

func (KubernetesReferenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesReference)(nil)).Elem()
}

func (o KubernetesReferenceOutput) ToKubernetesReferenceOutput() KubernetesReferenceOutput {
	return o
}

func (o KubernetesReferenceOutput) ToKubernetesReferenceOutputWithContext(ctx context.Context) KubernetesReferenceOutput {
	return o
}

func (o KubernetesReferenceOutput) ToKubernetesReferencePtrOutput() KubernetesReferencePtrOutput {
	return o.ToKubernetesReferencePtrOutputWithContext(context.Background())
}

func (o KubernetesReferenceOutput) ToKubernetesReferencePtrOutputWithContext(ctx context.Context) KubernetesReferencePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KubernetesReference) *KubernetesReference {
		return &v
	}).(KubernetesReferencePtrOutput)
}

// APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required.
func (o KubernetesReferenceOutput) ApiGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesReference) *string { return v.ApiGroup }).(pulumi.StringPtrOutput)
}

// Kind is the type of resource being referenced
func (o KubernetesReferenceOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v KubernetesReference) string { return v.Kind }).(pulumi.StringOutput)
}

// Name is the name of resource being referenced
func (o KubernetesReferenceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v KubernetesReference) string { return v.Name }).(pulumi.StringOutput)
}

// Namespace is the namespace of the resource being referenced. This field is required when the resource has a namespace.
func (o KubernetesReferenceOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesReference) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type KubernetesReferencePtrOutput struct{ *pulumi.OutputState }

func (KubernetesReferencePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesReference)(nil)).Elem()
}

func (o KubernetesReferencePtrOutput) ToKubernetesReferencePtrOutput() KubernetesReferencePtrOutput {
	return o
}

func (o KubernetesReferencePtrOutput) ToKubernetesReferencePtrOutputWithContext(ctx context.Context) KubernetesReferencePtrOutput {
	return o
}

func (o KubernetesReferencePtrOutput) Elem() KubernetesReferenceOutput {
	return o.ApplyT(func(v *KubernetesReference) KubernetesReference {
		if v != nil {
			return *v
		}
		var ret KubernetesReference
		return ret
	}).(KubernetesReferenceOutput)
}

// APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required.
func (o KubernetesReferencePtrOutput) ApiGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesReference) *string {
		if v == nil {
			return nil
		}
		return v.ApiGroup
	}).(pulumi.StringPtrOutput)
}

// Kind is the type of resource being referenced
func (o KubernetesReferencePtrOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesReference) *string {
		if v == nil {
			return nil
		}
		return &v.Kind
	}).(pulumi.StringPtrOutput)
}

// Name is the name of resource being referenced
func (o KubernetesReferencePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesReference) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace is the namespace of the resource being referenced. This field is required when the resource has a namespace.
func (o KubernetesReferencePtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesReference) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// Kubernetes reference
type KubernetesReferenceResponse struct {
	// APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required.
	ApiGroup *string `pulumi:"apiGroup"`
	// Kind is the type of resource being referenced
	Kind string `pulumi:"kind"`
	// Name is the name of resource being referenced
	Name string `pulumi:"name"`
	// Namespace is the namespace of the resource being referenced. This field is required when the resource has a namespace.
	Namespace *string `pulumi:"namespace"`
}

// Kubernetes reference
type KubernetesReferenceResponseOutput struct{ *pulumi.OutputState }

func (KubernetesReferenceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesReferenceResponse)(nil)).Elem()
}

func (o KubernetesReferenceResponseOutput) ToKubernetesReferenceResponseOutput() KubernetesReferenceResponseOutput {
	return o
}

func (o KubernetesReferenceResponseOutput) ToKubernetesReferenceResponseOutputWithContext(ctx context.Context) KubernetesReferenceResponseOutput {
	return o
}

// APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required.
func (o KubernetesReferenceResponseOutput) ApiGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesReferenceResponse) *string { return v.ApiGroup }).(pulumi.StringPtrOutput)
}

// Kind is the type of resource being referenced
func (o KubernetesReferenceResponseOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v KubernetesReferenceResponse) string { return v.Kind }).(pulumi.StringOutput)
}

// Name is the name of resource being referenced
func (o KubernetesReferenceResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v KubernetesReferenceResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Namespace is the namespace of the resource being referenced. This field is required when the resource has a namespace.
func (o KubernetesReferenceResponseOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesReferenceResponse) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type KubernetesReferenceResponsePtrOutput struct{ *pulumi.OutputState }

func (KubernetesReferenceResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesReferenceResponse)(nil)).Elem()
}

func (o KubernetesReferenceResponsePtrOutput) ToKubernetesReferenceResponsePtrOutput() KubernetesReferenceResponsePtrOutput {
	return o
}

func (o KubernetesReferenceResponsePtrOutput) ToKubernetesReferenceResponsePtrOutputWithContext(ctx context.Context) KubernetesReferenceResponsePtrOutput {
	return o
}

func (o KubernetesReferenceResponsePtrOutput) Elem() KubernetesReferenceResponseOutput {
	return o.ApplyT(func(v *KubernetesReferenceResponse) KubernetesReferenceResponse {
		if v != nil {
			return *v
		}
		var ret KubernetesReferenceResponse
		return ret
	}).(KubernetesReferenceResponseOutput)
}

// APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required.
func (o KubernetesReferenceResponsePtrOutput) ApiGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesReferenceResponse) *string {
		if v == nil {
			return nil
		}
		return v.ApiGroup
	}).(pulumi.StringPtrOutput)
}

// Kind is the type of resource being referenced
func (o KubernetesReferenceResponsePtrOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesReferenceResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Kind
	}).(pulumi.StringPtrOutput)
}

// Name is the name of resource being referenced
func (o KubernetesReferenceResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesReferenceResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace is the namespace of the resource being referenced. This field is required when the resource has a namespace.
func (o KubernetesReferenceResponsePtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesReferenceResponse) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// Defines a TCP port on which a `BrokerListener` listens.
type ListenerPort struct {
	// Reference to client authentication settings. Omit to disable authentication.
	AuthenticationRef *string `pulumi:"authenticationRef"`
	// Reference to client authorization settings. Omit to disable authorization.
	AuthorizationRef *string `pulumi:"authorizationRef"`
	// Kubernetes node port. Only relevant when this port is associated with a `NodePort` listener.
	NodePort *int `pulumi:"nodePort"`
	// TCP port for accepting client connections.
	Port int `pulumi:"port"`
	// Protocol to use for client connections.
	Protocol *string `pulumi:"protocol"`
	// TLS server certificate settings for this port. Omit to disable TLS.
	Tls *TlsCertMethod `pulumi:"tls"`
}

// Defaults sets the appropriate defaults for ListenerPort
func (val *ListenerPort) Defaults() *ListenerPort {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Protocol == nil {
		protocol_ := "Mqtt"
		tmp.Protocol = &protocol_
	}
	tmp.Tls = tmp.Tls.Defaults()

	return &tmp
}

// ListenerPortInput is an input type that accepts ListenerPortArgs and ListenerPortOutput values.
// You can construct a concrete instance of `ListenerPortInput` via:
//
//	ListenerPortArgs{...}
type ListenerPortInput interface {
	pulumi.Input

	ToListenerPortOutput() ListenerPortOutput
	ToListenerPortOutputWithContext(context.Context) ListenerPortOutput
}

// Defines a TCP port on which a `BrokerListener` listens.
type ListenerPortArgs struct {
	// Reference to client authentication settings. Omit to disable authentication.
	AuthenticationRef pulumi.StringPtrInput `pulumi:"authenticationRef"`
	// Reference to client authorization settings. Omit to disable authorization.
	AuthorizationRef pulumi.StringPtrInput `pulumi:"authorizationRef"`
	// Kubernetes node port. Only relevant when this port is associated with a `NodePort` listener.
	NodePort pulumi.IntPtrInput `pulumi:"nodePort"`
	// TCP port for accepting client connections.
	Port pulumi.IntInput `pulumi:"port"`
	// Protocol to use for client connections.
	Protocol pulumi.StringPtrInput `pulumi:"protocol"`
	// TLS server certificate settings for this port. Omit to disable TLS.
	Tls TlsCertMethodPtrInput `pulumi:"tls"`
}

// Defaults sets the appropriate defaults for ListenerPortArgs
func (val *ListenerPortArgs) Defaults() *ListenerPortArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Protocol == nil {
		tmp.Protocol = pulumi.StringPtr("Mqtt")
	}

	return &tmp
}
func (ListenerPortArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ListenerPort)(nil)).Elem()
}

func (i ListenerPortArgs) ToListenerPortOutput() ListenerPortOutput {
	return i.ToListenerPortOutputWithContext(context.Background())
}

func (i ListenerPortArgs) ToListenerPortOutputWithContext(ctx context.Context) ListenerPortOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerPortOutput)
}

// ListenerPortArrayInput is an input type that accepts ListenerPortArray and ListenerPortArrayOutput values.
// You can construct a concrete instance of `ListenerPortArrayInput` via:
//
//	ListenerPortArray{ ListenerPortArgs{...} }
type ListenerPortArrayInput interface {
	pulumi.Input

	ToListenerPortArrayOutput() ListenerPortArrayOutput
	ToListenerPortArrayOutputWithContext(context.Context) ListenerPortArrayOutput
}

type ListenerPortArray []ListenerPortInput

func (ListenerPortArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ListenerPort)(nil)).Elem()
}

func (i ListenerPortArray) ToListenerPortArrayOutput() ListenerPortArrayOutput {
	return i.ToListenerPortArrayOutputWithContext(context.Background())
}

func (i ListenerPortArray) ToListenerPortArrayOutputWithContext(ctx context.Context) ListenerPortArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerPortArrayOutput)
}

// Defines a TCP port on which a `BrokerListener` listens.
type ListenerPortOutput struct{ *pulumi.OutputState }

func (ListenerPortOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListenerPort)(nil)).Elem()
}

func (o ListenerPortOutput) ToListenerPortOutput() ListenerPortOutput {
	return o
}

func (o ListenerPortOutput) ToListenerPortOutputWithContext(ctx context.Context) ListenerPortOutput {
	return o
}

// Reference to client authentication settings. Omit to disable authentication.
func (o ListenerPortOutput) AuthenticationRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListenerPort) *string { return v.AuthenticationRef }).(pulumi.StringPtrOutput)
}

// Reference to client authorization settings. Omit to disable authorization.
func (o ListenerPortOutput) AuthorizationRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListenerPort) *string { return v.AuthorizationRef }).(pulumi.StringPtrOutput)
}

// Kubernetes node port. Only relevant when this port is associated with a `NodePort` listener.
func (o ListenerPortOutput) NodePort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ListenerPort) *int { return v.NodePort }).(pulumi.IntPtrOutput)
}

// TCP port for accepting client connections.
func (o ListenerPortOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v ListenerPort) int { return v.Port }).(pulumi.IntOutput)
}

// Protocol to use for client connections.
func (o ListenerPortOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListenerPort) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

// TLS server certificate settings for this port. Omit to disable TLS.
func (o ListenerPortOutput) Tls() TlsCertMethodPtrOutput {
	return o.ApplyT(func(v ListenerPort) *TlsCertMethod { return v.Tls }).(TlsCertMethodPtrOutput)
}

type ListenerPortArrayOutput struct{ *pulumi.OutputState }

func (ListenerPortArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ListenerPort)(nil)).Elem()
}

func (o ListenerPortArrayOutput) ToListenerPortArrayOutput() ListenerPortArrayOutput {
	return o
}

func (o ListenerPortArrayOutput) ToListenerPortArrayOutputWithContext(ctx context.Context) ListenerPortArrayOutput {
	return o
}

func (o ListenerPortArrayOutput) Index(i pulumi.IntInput) ListenerPortOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ListenerPort {
		return vs[0].([]ListenerPort)[vs[1].(int)]
	}).(ListenerPortOutput)
}

// Defines a TCP port on which a `BrokerListener` listens.
type ListenerPortResponse struct {
	// Reference to client authentication settings. Omit to disable authentication.
	AuthenticationRef *string `pulumi:"authenticationRef"`
	// Reference to client authorization settings. Omit to disable authorization.
	AuthorizationRef *string `pulumi:"authorizationRef"`
	// Kubernetes node port. Only relevant when this port is associated with a `NodePort` listener.
	NodePort *int `pulumi:"nodePort"`
	// TCP port for accepting client connections.
	Port int `pulumi:"port"`
	// Protocol to use for client connections.
	Protocol *string `pulumi:"protocol"`
	// TLS server certificate settings for this port. Omit to disable TLS.
	Tls *TlsCertMethodResponse `pulumi:"tls"`
}

// Defaults sets the appropriate defaults for ListenerPortResponse
func (val *ListenerPortResponse) Defaults() *ListenerPortResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Protocol == nil {
		protocol_ := "Mqtt"
		tmp.Protocol = &protocol_
	}
	tmp.Tls = tmp.Tls.Defaults()

	return &tmp
}

// Defines a TCP port on which a `BrokerListener` listens.
type ListenerPortResponseOutput struct{ *pulumi.OutputState }

func (ListenerPortResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListenerPortResponse)(nil)).Elem()
}

func (o ListenerPortResponseOutput) ToListenerPortResponseOutput() ListenerPortResponseOutput {
	return o
}

func (o ListenerPortResponseOutput) ToListenerPortResponseOutputWithContext(ctx context.Context) ListenerPortResponseOutput {
	return o
}

// Reference to client authentication settings. Omit to disable authentication.
func (o ListenerPortResponseOutput) AuthenticationRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListenerPortResponse) *string { return v.AuthenticationRef }).(pulumi.StringPtrOutput)
}

// Reference to client authorization settings. Omit to disable authorization.
func (o ListenerPortResponseOutput) AuthorizationRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListenerPortResponse) *string { return v.AuthorizationRef }).(pulumi.StringPtrOutput)
}

// Kubernetes node port. Only relevant when this port is associated with a `NodePort` listener.
func (o ListenerPortResponseOutput) NodePort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ListenerPortResponse) *int { return v.NodePort }).(pulumi.IntPtrOutput)
}

// TCP port for accepting client connections.
func (o ListenerPortResponseOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v ListenerPortResponse) int { return v.Port }).(pulumi.IntOutput)
}

// Protocol to use for client connections.
func (o ListenerPortResponseOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListenerPortResponse) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

// TLS server certificate settings for this port. Omit to disable TLS.
func (o ListenerPortResponseOutput) Tls() TlsCertMethodResponsePtrOutput {
	return o.ApplyT(func(v ListenerPortResponse) *TlsCertMethodResponse { return v.Tls }).(TlsCertMethodResponsePtrOutput)
}

type ListenerPortResponseArrayOutput struct{ *pulumi.OutputState }

func (ListenerPortResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ListenerPortResponse)(nil)).Elem()
}

func (o ListenerPortResponseArrayOutput) ToListenerPortResponseArrayOutput() ListenerPortResponseArrayOutput {
	return o
}

func (o ListenerPortResponseArrayOutput) ToListenerPortResponseArrayOutputWithContext(ctx context.Context) ListenerPortResponseArrayOutput {
	return o
}

func (o ListenerPortResponseArrayOutput) Index(i pulumi.IntInput) ListenerPortResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ListenerPortResponse {
		return vs[0].([]ListenerPortResponse)[vs[1].(int)]
	}).(ListenerPortResponseOutput)
}

// Kubernetes reference
type LocalKubernetesReference struct {
	// APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required.
	ApiGroup *string `pulumi:"apiGroup"`
	// Kind is the type of resource being referenced
	Kind string `pulumi:"kind"`
	// Name is the name of resource being referenced
	Name string `pulumi:"name"`
}

// LocalKubernetesReferenceInput is an input type that accepts LocalKubernetesReferenceArgs and LocalKubernetesReferenceOutput values.
// You can construct a concrete instance of `LocalKubernetesReferenceInput` via:
//
//	LocalKubernetesReferenceArgs{...}
type LocalKubernetesReferenceInput interface {
	pulumi.Input

	ToLocalKubernetesReferenceOutput() LocalKubernetesReferenceOutput
	ToLocalKubernetesReferenceOutputWithContext(context.Context) LocalKubernetesReferenceOutput
}

// Kubernetes reference
type LocalKubernetesReferenceArgs struct {
	// APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required.
	ApiGroup pulumi.StringPtrInput `pulumi:"apiGroup"`
	// Kind is the type of resource being referenced
	Kind pulumi.StringInput `pulumi:"kind"`
	// Name is the name of resource being referenced
	Name pulumi.StringInput `pulumi:"name"`
}

func (LocalKubernetesReferenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LocalKubernetesReference)(nil)).Elem()
}

func (i LocalKubernetesReferenceArgs) ToLocalKubernetesReferenceOutput() LocalKubernetesReferenceOutput {
	return i.ToLocalKubernetesReferenceOutputWithContext(context.Background())
}

func (i LocalKubernetesReferenceArgs) ToLocalKubernetesReferenceOutputWithContext(ctx context.Context) LocalKubernetesReferenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LocalKubernetesReferenceOutput)
}

func (i LocalKubernetesReferenceArgs) ToLocalKubernetesReferencePtrOutput() LocalKubernetesReferencePtrOutput {
	return i.ToLocalKubernetesReferencePtrOutputWithContext(context.Background())
}

func (i LocalKubernetesReferenceArgs) ToLocalKubernetesReferencePtrOutputWithContext(ctx context.Context) LocalKubernetesReferencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LocalKubernetesReferenceOutput).ToLocalKubernetesReferencePtrOutputWithContext(ctx)
}

// LocalKubernetesReferencePtrInput is an input type that accepts LocalKubernetesReferenceArgs, LocalKubernetesReferencePtr and LocalKubernetesReferencePtrOutput values.
// You can construct a concrete instance of `LocalKubernetesReferencePtrInput` via:
//
//	        LocalKubernetesReferenceArgs{...}
//
//	or:
//
//	        nil
type LocalKubernetesReferencePtrInput interface {
	pulumi.Input

	ToLocalKubernetesReferencePtrOutput() LocalKubernetesReferencePtrOutput
	ToLocalKubernetesReferencePtrOutputWithContext(context.Context) LocalKubernetesReferencePtrOutput
}

type localKubernetesReferencePtrType LocalKubernetesReferenceArgs

func LocalKubernetesReferencePtr(v *LocalKubernetesReferenceArgs) LocalKubernetesReferencePtrInput {
	return (*localKubernetesReferencePtrType)(v)
}

func (*localKubernetesReferencePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LocalKubernetesReference)(nil)).Elem()
}

func (i *localKubernetesReferencePtrType) ToLocalKubernetesReferencePtrOutput() LocalKubernetesReferencePtrOutput {
	return i.ToLocalKubernetesReferencePtrOutputWithContext(context.Background())
}

func (i *localKubernetesReferencePtrType) ToLocalKubernetesReferencePtrOutputWithContext(ctx context.Context) LocalKubernetesReferencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LocalKubernetesReferencePtrOutput)
}

// Kubernetes reference
type LocalKubernetesReferenceOutput struct{ *pulumi.OutputState }

func (LocalKubernetesReferenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LocalKubernetesReference)(nil)).Elem()
}

func (o LocalKubernetesReferenceOutput) ToLocalKubernetesReferenceOutput() LocalKubernetesReferenceOutput {
	return o
}

func (o LocalKubernetesReferenceOutput) ToLocalKubernetesReferenceOutputWithContext(ctx context.Context) LocalKubernetesReferenceOutput {
	return o
}

func (o LocalKubernetesReferenceOutput) ToLocalKubernetesReferencePtrOutput() LocalKubernetesReferencePtrOutput {
	return o.ToLocalKubernetesReferencePtrOutputWithContext(context.Background())
}

func (o LocalKubernetesReferenceOutput) ToLocalKubernetesReferencePtrOutputWithContext(ctx context.Context) LocalKubernetesReferencePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LocalKubernetesReference) *LocalKubernetesReference {
		return &v
	}).(LocalKubernetesReferencePtrOutput)
}

// APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required.
func (o LocalKubernetesReferenceOutput) ApiGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LocalKubernetesReference) *string { return v.ApiGroup }).(pulumi.StringPtrOutput)
}

// Kind is the type of resource being referenced
func (o LocalKubernetesReferenceOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v LocalKubernetesReference) string { return v.Kind }).(pulumi.StringOutput)
}

// Name is the name of resource being referenced
func (o LocalKubernetesReferenceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LocalKubernetesReference) string { return v.Name }).(pulumi.StringOutput)
}

type LocalKubernetesReferencePtrOutput struct{ *pulumi.OutputState }

func (LocalKubernetesReferencePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LocalKubernetesReference)(nil)).Elem()
}

func (o LocalKubernetesReferencePtrOutput) ToLocalKubernetesReferencePtrOutput() LocalKubernetesReferencePtrOutput {
	return o
}

func (o LocalKubernetesReferencePtrOutput) ToLocalKubernetesReferencePtrOutputWithContext(ctx context.Context) LocalKubernetesReferencePtrOutput {
	return o
}

func (o LocalKubernetesReferencePtrOutput) Elem() LocalKubernetesReferenceOutput {
	return o.ApplyT(func(v *LocalKubernetesReference) LocalKubernetesReference {
		if v != nil {
			return *v
		}
		var ret LocalKubernetesReference
		return ret
	}).(LocalKubernetesReferenceOutput)
}

// APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required.
func (o LocalKubernetesReferencePtrOutput) ApiGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LocalKubernetesReference) *string {
		if v == nil {
			return nil
		}
		return v.ApiGroup
	}).(pulumi.StringPtrOutput)
}

// Kind is the type of resource being referenced
func (o LocalKubernetesReferencePtrOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LocalKubernetesReference) *string {
		if v == nil {
			return nil
		}
		return &v.Kind
	}).(pulumi.StringPtrOutput)
}

// Name is the name of resource being referenced
func (o LocalKubernetesReferencePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LocalKubernetesReference) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Kubernetes reference
type LocalKubernetesReferenceResponse struct {
	// APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required.
	ApiGroup *string `pulumi:"apiGroup"`
	// Kind is the type of resource being referenced
	Kind string `pulumi:"kind"`
	// Name is the name of resource being referenced
	Name string `pulumi:"name"`
}

// Kubernetes reference
type LocalKubernetesReferenceResponseOutput struct{ *pulumi.OutputState }

func (LocalKubernetesReferenceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LocalKubernetesReferenceResponse)(nil)).Elem()
}

func (o LocalKubernetesReferenceResponseOutput) ToLocalKubernetesReferenceResponseOutput() LocalKubernetesReferenceResponseOutput {
	return o
}

func (o LocalKubernetesReferenceResponseOutput) ToLocalKubernetesReferenceResponseOutputWithContext(ctx context.Context) LocalKubernetesReferenceResponseOutput {
	return o
}

// APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required.
func (o LocalKubernetesReferenceResponseOutput) ApiGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LocalKubernetesReferenceResponse) *string { return v.ApiGroup }).(pulumi.StringPtrOutput)
}

// Kind is the type of resource being referenced
func (o LocalKubernetesReferenceResponseOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v LocalKubernetesReferenceResponse) string { return v.Kind }).(pulumi.StringOutput)
}

// Name is the name of resource being referenced
func (o LocalKubernetesReferenceResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LocalKubernetesReferenceResponse) string { return v.Name }).(pulumi.StringOutput)
}

type LocalKubernetesReferenceResponsePtrOutput struct{ *pulumi.OutputState }

func (LocalKubernetesReferenceResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LocalKubernetesReferenceResponse)(nil)).Elem()
}

func (o LocalKubernetesReferenceResponsePtrOutput) ToLocalKubernetesReferenceResponsePtrOutput() LocalKubernetesReferenceResponsePtrOutput {
	return o
}

func (o LocalKubernetesReferenceResponsePtrOutput) ToLocalKubernetesReferenceResponsePtrOutputWithContext(ctx context.Context) LocalKubernetesReferenceResponsePtrOutput {
	return o
}

func (o LocalKubernetesReferenceResponsePtrOutput) Elem() LocalKubernetesReferenceResponseOutput {
	return o.ApplyT(func(v *LocalKubernetesReferenceResponse) LocalKubernetesReferenceResponse {
		if v != nil {
			return *v
		}
		var ret LocalKubernetesReferenceResponse
		return ret
	}).(LocalKubernetesReferenceResponseOutput)
}

// APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required.
func (o LocalKubernetesReferenceResponsePtrOutput) ApiGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LocalKubernetesReferenceResponse) *string {
		if v == nil {
			return nil
		}
		return v.ApiGroup
	}).(pulumi.StringPtrOutput)
}

// Kind is the type of resource being referenced
func (o LocalKubernetesReferenceResponsePtrOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LocalKubernetesReferenceResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Kind
	}).(pulumi.StringPtrOutput)
}

// Name is the name of resource being referenced
func (o LocalKubernetesReferenceResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LocalKubernetesReferenceResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Managed service identity (system assigned and/or user assigned identities)
type ManagedServiceIdentity struct {
	// Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
	Type string `pulumi:"type"`
	// The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.
	UserAssignedIdentities []string `pulumi:"userAssignedIdentities"`
}

// ManagedServiceIdentityInput is an input type that accepts ManagedServiceIdentityArgs and ManagedServiceIdentityOutput values.
// You can construct a concrete instance of `ManagedServiceIdentityInput` via:
//
//	ManagedServiceIdentityArgs{...}
type ManagedServiceIdentityInput interface {
	pulumi.Input

	ToManagedServiceIdentityOutput() ManagedServiceIdentityOutput
	ToManagedServiceIdentityOutputWithContext(context.Context) ManagedServiceIdentityOutput
}

// Managed service identity (system assigned and/or user assigned identities)
type ManagedServiceIdentityArgs struct {
	// Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
	Type pulumi.StringInput `pulumi:"type"`
	// The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.
	UserAssignedIdentities pulumi.StringArrayInput `pulumi:"userAssignedIdentities"`
}

func (ManagedServiceIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedServiceIdentity)(nil)).Elem()
}

func (i ManagedServiceIdentityArgs) ToManagedServiceIdentityOutput() ManagedServiceIdentityOutput {
	return i.ToManagedServiceIdentityOutputWithContext(context.Background())
}

func (i ManagedServiceIdentityArgs) ToManagedServiceIdentityOutputWithContext(ctx context.Context) ManagedServiceIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedServiceIdentityOutput)
}

func (i ManagedServiceIdentityArgs) ToManagedServiceIdentityPtrOutput() ManagedServiceIdentityPtrOutput {
	return i.ToManagedServiceIdentityPtrOutputWithContext(context.Background())
}

func (i ManagedServiceIdentityArgs) ToManagedServiceIdentityPtrOutputWithContext(ctx context.Context) ManagedServiceIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedServiceIdentityOutput).ToManagedServiceIdentityPtrOutputWithContext(ctx)
}

// ManagedServiceIdentityPtrInput is an input type that accepts ManagedServiceIdentityArgs, ManagedServiceIdentityPtr and ManagedServiceIdentityPtrOutput values.
// You can construct a concrete instance of `ManagedServiceIdentityPtrInput` via:
//
//	        ManagedServiceIdentityArgs{...}
//
//	or:
//
//	        nil
type ManagedServiceIdentityPtrInput interface {
	pulumi.Input

	ToManagedServiceIdentityPtrOutput() ManagedServiceIdentityPtrOutput
	ToManagedServiceIdentityPtrOutputWithContext(context.Context) ManagedServiceIdentityPtrOutput
}

type managedServiceIdentityPtrType ManagedServiceIdentityArgs

func ManagedServiceIdentityPtr(v *ManagedServiceIdentityArgs) ManagedServiceIdentityPtrInput {
	return (*managedServiceIdentityPtrType)(v)
}

func (*managedServiceIdentityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedServiceIdentity)(nil)).Elem()
}

func (i *managedServiceIdentityPtrType) ToManagedServiceIdentityPtrOutput() ManagedServiceIdentityPtrOutput {
	return i.ToManagedServiceIdentityPtrOutputWithContext(context.Background())
}

func (i *managedServiceIdentityPtrType) ToManagedServiceIdentityPtrOutputWithContext(ctx context.Context) ManagedServiceIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedServiceIdentityPtrOutput)
}

// Managed service identity (system assigned and/or user assigned identities)
type ManagedServiceIdentityOutput struct{ *pulumi.OutputState }

func (ManagedServiceIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedServiceIdentity)(nil)).Elem()
}

func (o ManagedServiceIdentityOutput) ToManagedServiceIdentityOutput() ManagedServiceIdentityOutput {
	return o
}

func (o ManagedServiceIdentityOutput) ToManagedServiceIdentityOutputWithContext(ctx context.Context) ManagedServiceIdentityOutput {
	return o
}

func (o ManagedServiceIdentityOutput) ToManagedServiceIdentityPtrOutput() ManagedServiceIdentityPtrOutput {
	return o.ToManagedServiceIdentityPtrOutputWithContext(context.Background())
}

func (o ManagedServiceIdentityOutput) ToManagedServiceIdentityPtrOutputWithContext(ctx context.Context) ManagedServiceIdentityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ManagedServiceIdentity) *ManagedServiceIdentity {
		return &v
	}).(ManagedServiceIdentityPtrOutput)
}

// Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
func (o ManagedServiceIdentityOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedServiceIdentity) string { return v.Type }).(pulumi.StringOutput)
}

// The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.
func (o ManagedServiceIdentityOutput) UserAssignedIdentities() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ManagedServiceIdentity) []string { return v.UserAssignedIdentities }).(pulumi.StringArrayOutput)
}

type ManagedServiceIdentityPtrOutput struct{ *pulumi.OutputState }

func (ManagedServiceIdentityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedServiceIdentity)(nil)).Elem()
}

func (o ManagedServiceIdentityPtrOutput) ToManagedServiceIdentityPtrOutput() ManagedServiceIdentityPtrOutput {
	return o
}

func (o ManagedServiceIdentityPtrOutput) ToManagedServiceIdentityPtrOutputWithContext(ctx context.Context) ManagedServiceIdentityPtrOutput {
	return o
}

func (o ManagedServiceIdentityPtrOutput) Elem() ManagedServiceIdentityOutput {
	return o.ApplyT(func(v *ManagedServiceIdentity) ManagedServiceIdentity {
		if v != nil {
			return *v
		}
		var ret ManagedServiceIdentity
		return ret
	}).(ManagedServiceIdentityOutput)
}

// Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
func (o ManagedServiceIdentityPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedServiceIdentity) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.
func (o ManagedServiceIdentityPtrOutput) UserAssignedIdentities() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ManagedServiceIdentity) []string {
		if v == nil {
			return nil
		}
		return v.UserAssignedIdentities
	}).(pulumi.StringArrayOutput)
}

// Managed service identity (system assigned and/or user assigned identities)
type ManagedServiceIdentityResponse struct {
	// The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.
	PrincipalId string `pulumi:"principalId"`
	// The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.
	TenantId string `pulumi:"tenantId"`
	// Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
	Type string `pulumi:"type"`
	// The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.
	UserAssignedIdentities map[string]UserAssignedIdentityResponse `pulumi:"userAssignedIdentities"`
}

// Managed service identity (system assigned and/or user assigned identities)
type ManagedServiceIdentityResponseOutput struct{ *pulumi.OutputState }

func (ManagedServiceIdentityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedServiceIdentityResponse)(nil)).Elem()
}

func (o ManagedServiceIdentityResponseOutput) ToManagedServiceIdentityResponseOutput() ManagedServiceIdentityResponseOutput {
	return o
}

func (o ManagedServiceIdentityResponseOutput) ToManagedServiceIdentityResponseOutputWithContext(ctx context.Context) ManagedServiceIdentityResponseOutput {
	return o
}

// The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.
func (o ManagedServiceIdentityResponseOutput) PrincipalId() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedServiceIdentityResponse) string { return v.PrincipalId }).(pulumi.StringOutput)
}

// The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.
func (o ManagedServiceIdentityResponseOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedServiceIdentityResponse) string { return v.TenantId }).(pulumi.StringOutput)
}

// Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
func (o ManagedServiceIdentityResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedServiceIdentityResponse) string { return v.Type }).(pulumi.StringOutput)
}

// The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.
func (o ManagedServiceIdentityResponseOutput) UserAssignedIdentities() UserAssignedIdentityResponseMapOutput {
	return o.ApplyT(func(v ManagedServiceIdentityResponse) map[string]UserAssignedIdentityResponse {
		return v.UserAssignedIdentities
	}).(UserAssignedIdentityResponseMapOutput)
}

type ManagedServiceIdentityResponsePtrOutput struct{ *pulumi.OutputState }

func (ManagedServiceIdentityResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedServiceIdentityResponse)(nil)).Elem()
}

func (o ManagedServiceIdentityResponsePtrOutput) ToManagedServiceIdentityResponsePtrOutput() ManagedServiceIdentityResponsePtrOutput {
	return o
}

func (o ManagedServiceIdentityResponsePtrOutput) ToManagedServiceIdentityResponsePtrOutputWithContext(ctx context.Context) ManagedServiceIdentityResponsePtrOutput {
	return o
}

func (o ManagedServiceIdentityResponsePtrOutput) Elem() ManagedServiceIdentityResponseOutput {
	return o.ApplyT(func(v *ManagedServiceIdentityResponse) ManagedServiceIdentityResponse {
		if v != nil {
			return *v
		}
		var ret ManagedServiceIdentityResponse
		return ret
	}).(ManagedServiceIdentityResponseOutput)
}

// The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.
func (o ManagedServiceIdentityResponsePtrOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedServiceIdentityResponse) *string {
		if v == nil {
			return nil
		}
		return &v.PrincipalId
	}).(pulumi.StringPtrOutput)
}

// The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.
func (o ManagedServiceIdentityResponsePtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedServiceIdentityResponse) *string {
		if v == nil {
			return nil
		}
		return &v.TenantId
	}).(pulumi.StringPtrOutput)
}

// Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
func (o ManagedServiceIdentityResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedServiceIdentityResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.
func (o ManagedServiceIdentityResponsePtrOutput) UserAssignedIdentities() UserAssignedIdentityResponseMapOutput {
	return o.ApplyT(func(v *ManagedServiceIdentityResponse) map[string]UserAssignedIdentityResponse {
		if v == nil {
			return nil
		}
		return v.UserAssignedIdentities
	}).(UserAssignedIdentityResponseMapOutput)
}

// Diagnostic Metrics properties
type Metrics struct {
	// The prometheus port to expose the metrics.
	PrometheusPort *int `pulumi:"prometheusPort"`
}

// Defaults sets the appropriate defaults for Metrics
func (val *Metrics) Defaults() *Metrics {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.PrometheusPort == nil {
		prometheusPort_ := 9600
		tmp.PrometheusPort = &prometheusPort_
	}
	return &tmp
}

// MetricsInput is an input type that accepts MetricsArgs and MetricsOutput values.
// You can construct a concrete instance of `MetricsInput` via:
//
//	MetricsArgs{...}
type MetricsInput interface {
	pulumi.Input

	ToMetricsOutput() MetricsOutput
	ToMetricsOutputWithContext(context.Context) MetricsOutput
}

// Diagnostic Metrics properties
type MetricsArgs struct {
	// The prometheus port to expose the metrics.
	PrometheusPort pulumi.IntPtrInput `pulumi:"prometheusPort"`
}

// Defaults sets the appropriate defaults for MetricsArgs
func (val *MetricsArgs) Defaults() *MetricsArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.PrometheusPort == nil {
		tmp.PrometheusPort = pulumi.IntPtr(9600)
	}
	return &tmp
}
func (MetricsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Metrics)(nil)).Elem()
}

func (i MetricsArgs) ToMetricsOutput() MetricsOutput {
	return i.ToMetricsOutputWithContext(context.Background())
}

func (i MetricsArgs) ToMetricsOutputWithContext(ctx context.Context) MetricsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetricsOutput)
}

func (i MetricsArgs) ToMetricsPtrOutput() MetricsPtrOutput {
	return i.ToMetricsPtrOutputWithContext(context.Background())
}

func (i MetricsArgs) ToMetricsPtrOutputWithContext(ctx context.Context) MetricsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetricsOutput).ToMetricsPtrOutputWithContext(ctx)
}

// MetricsPtrInput is an input type that accepts MetricsArgs, MetricsPtr and MetricsPtrOutput values.
// You can construct a concrete instance of `MetricsPtrInput` via:
//
//	        MetricsArgs{...}
//
//	or:
//
//	        nil
type MetricsPtrInput interface {
	pulumi.Input

	ToMetricsPtrOutput() MetricsPtrOutput
	ToMetricsPtrOutputWithContext(context.Context) MetricsPtrOutput
}

type metricsPtrType MetricsArgs

func MetricsPtr(v *MetricsArgs) MetricsPtrInput {
	return (*metricsPtrType)(v)
}

func (*metricsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Metrics)(nil)).Elem()
}

func (i *metricsPtrType) ToMetricsPtrOutput() MetricsPtrOutput {
	return i.ToMetricsPtrOutputWithContext(context.Background())
}

func (i *metricsPtrType) ToMetricsPtrOutputWithContext(ctx context.Context) MetricsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetricsPtrOutput)
}

// Diagnostic Metrics properties
type MetricsOutput struct{ *pulumi.OutputState }

func (MetricsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Metrics)(nil)).Elem()
}

func (o MetricsOutput) ToMetricsOutput() MetricsOutput {
	return o
}

func (o MetricsOutput) ToMetricsOutputWithContext(ctx context.Context) MetricsOutput {
	return o
}

func (o MetricsOutput) ToMetricsPtrOutput() MetricsPtrOutput {
	return o.ToMetricsPtrOutputWithContext(context.Background())
}

func (o MetricsOutput) ToMetricsPtrOutputWithContext(ctx context.Context) MetricsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Metrics) *Metrics {
		return &v
	}).(MetricsPtrOutput)
}

// The prometheus port to expose the metrics.
func (o MetricsOutput) PrometheusPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Metrics) *int { return v.PrometheusPort }).(pulumi.IntPtrOutput)
}

type MetricsPtrOutput struct{ *pulumi.OutputState }

func (MetricsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Metrics)(nil)).Elem()
}

func (o MetricsPtrOutput) ToMetricsPtrOutput() MetricsPtrOutput {
	return o
}

func (o MetricsPtrOutput) ToMetricsPtrOutputWithContext(ctx context.Context) MetricsPtrOutput {
	return o
}

func (o MetricsPtrOutput) Elem() MetricsOutput {
	return o.ApplyT(func(v *Metrics) Metrics {
		if v != nil {
			return *v
		}
		var ret Metrics
		return ret
	}).(MetricsOutput)
}

// The prometheus port to expose the metrics.
func (o MetricsPtrOutput) PrometheusPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Metrics) *int {
		if v == nil {
			return nil
		}
		return v.PrometheusPort
	}).(pulumi.IntPtrOutput)
}

// Diagnostic Metrics properties
type MetricsResponse struct {
	// The prometheus port to expose the metrics.
	PrometheusPort *int `pulumi:"prometheusPort"`
}

// Defaults sets the appropriate defaults for MetricsResponse
func (val *MetricsResponse) Defaults() *MetricsResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.PrometheusPort == nil {
		prometheusPort_ := 9600
		tmp.PrometheusPort = &prometheusPort_
	}
	return &tmp
}

// Diagnostic Metrics properties
type MetricsResponseOutput struct{ *pulumi.OutputState }

func (MetricsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MetricsResponse)(nil)).Elem()
}

func (o MetricsResponseOutput) ToMetricsResponseOutput() MetricsResponseOutput {
	return o
}

func (o MetricsResponseOutput) ToMetricsResponseOutputWithContext(ctx context.Context) MetricsResponseOutput {
	return o
}

// The prometheus port to expose the metrics.
func (o MetricsResponseOutput) PrometheusPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MetricsResponse) *int { return v.PrometheusPort }).(pulumi.IntPtrOutput)
}

type MetricsResponsePtrOutput struct{ *pulumi.OutputState }

func (MetricsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MetricsResponse)(nil)).Elem()
}

func (o MetricsResponsePtrOutput) ToMetricsResponsePtrOutput() MetricsResponsePtrOutput {
	return o
}

func (o MetricsResponsePtrOutput) ToMetricsResponsePtrOutputWithContext(ctx context.Context) MetricsResponsePtrOutput {
	return o
}

func (o MetricsResponsePtrOutput) Elem() MetricsResponseOutput {
	return o.ApplyT(func(v *MetricsResponse) MetricsResponse {
		if v != nil {
			return *v
		}
		var ret MetricsResponse
		return ret
	}).(MetricsResponseOutput)
}

// The prometheus port to expose the metrics.
func (o MetricsResponsePtrOutput) PrometheusPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MetricsResponse) *int {
		if v == nil {
			return nil
		}
		return v.PrometheusPort
	}).(pulumi.IntPtrOutput)
}

// PrincipalDefinition properties of Rule
type PrincipalDefinition struct {
	// A list of key-value pairs that match the attributes of the clients. The attributes are case-sensitive and must match the attributes provided by the clients during authentication.
	Attributes []map[string]string `pulumi:"attributes"`
	// A list of client IDs that match the clients. The client IDs are case-sensitive and must match the client IDs provided by the clients during connection.
	ClientIds []string `pulumi:"clientIds"`
	// A list of usernames that match the clients. The usernames are case-sensitive and must match the usernames provided by the clients during authentication.
	Usernames []string `pulumi:"usernames"`
}

// PrincipalDefinitionInput is an input type that accepts PrincipalDefinitionArgs and PrincipalDefinitionOutput values.
// You can construct a concrete instance of `PrincipalDefinitionInput` via:
//
//	PrincipalDefinitionArgs{...}
type PrincipalDefinitionInput interface {
	pulumi.Input

	ToPrincipalDefinitionOutput() PrincipalDefinitionOutput
	ToPrincipalDefinitionOutputWithContext(context.Context) PrincipalDefinitionOutput
}

// PrincipalDefinition properties of Rule
type PrincipalDefinitionArgs struct {
	// A list of key-value pairs that match the attributes of the clients. The attributes are case-sensitive and must match the attributes provided by the clients during authentication.
	Attributes pulumi.StringMapArrayInput `pulumi:"attributes"`
	// A list of client IDs that match the clients. The client IDs are case-sensitive and must match the client IDs provided by the clients during connection.
	ClientIds pulumi.StringArrayInput `pulumi:"clientIds"`
	// A list of usernames that match the clients. The usernames are case-sensitive and must match the usernames provided by the clients during authentication.
	Usernames pulumi.StringArrayInput `pulumi:"usernames"`
}

func (PrincipalDefinitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PrincipalDefinition)(nil)).Elem()
}

func (i PrincipalDefinitionArgs) ToPrincipalDefinitionOutput() PrincipalDefinitionOutput {
	return i.ToPrincipalDefinitionOutputWithContext(context.Background())
}

func (i PrincipalDefinitionArgs) ToPrincipalDefinitionOutputWithContext(ctx context.Context) PrincipalDefinitionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrincipalDefinitionOutput)
}

// PrincipalDefinition properties of Rule
type PrincipalDefinitionOutput struct{ *pulumi.OutputState }

func (PrincipalDefinitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrincipalDefinition)(nil)).Elem()
}

func (o PrincipalDefinitionOutput) ToPrincipalDefinitionOutput() PrincipalDefinitionOutput {
	return o
}

func (o PrincipalDefinitionOutput) ToPrincipalDefinitionOutputWithContext(ctx context.Context) PrincipalDefinitionOutput {
	return o
}

// A list of key-value pairs that match the attributes of the clients. The attributes are case-sensitive and must match the attributes provided by the clients during authentication.
func (o PrincipalDefinitionOutput) Attributes() pulumi.StringMapArrayOutput {
	return o.ApplyT(func(v PrincipalDefinition) []map[string]string { return v.Attributes }).(pulumi.StringMapArrayOutput)
}

// A list of client IDs that match the clients. The client IDs are case-sensitive and must match the client IDs provided by the clients during connection.
func (o PrincipalDefinitionOutput) ClientIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PrincipalDefinition) []string { return v.ClientIds }).(pulumi.StringArrayOutput)
}

// A list of usernames that match the clients. The usernames are case-sensitive and must match the usernames provided by the clients during authentication.
func (o PrincipalDefinitionOutput) Usernames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PrincipalDefinition) []string { return v.Usernames }).(pulumi.StringArrayOutput)
}

// PrincipalDefinition properties of Rule
type PrincipalDefinitionResponse struct {
	// A list of key-value pairs that match the attributes of the clients. The attributes are case-sensitive and must match the attributes provided by the clients during authentication.
	Attributes []map[string]string `pulumi:"attributes"`
	// A list of client IDs that match the clients. The client IDs are case-sensitive and must match the client IDs provided by the clients during connection.
	ClientIds []string `pulumi:"clientIds"`
	// A list of usernames that match the clients. The usernames are case-sensitive and must match the usernames provided by the clients during authentication.
	Usernames []string `pulumi:"usernames"`
}

// PrincipalDefinition properties of Rule
type PrincipalDefinitionResponseOutput struct{ *pulumi.OutputState }

func (PrincipalDefinitionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrincipalDefinitionResponse)(nil)).Elem()
}

func (o PrincipalDefinitionResponseOutput) ToPrincipalDefinitionResponseOutput() PrincipalDefinitionResponseOutput {
	return o
}

func (o PrincipalDefinitionResponseOutput) ToPrincipalDefinitionResponseOutputWithContext(ctx context.Context) PrincipalDefinitionResponseOutput {
	return o
}

// A list of key-value pairs that match the attributes of the clients. The attributes are case-sensitive and must match the attributes provided by the clients during authentication.
func (o PrincipalDefinitionResponseOutput) Attributes() pulumi.StringMapArrayOutput {
	return o.ApplyT(func(v PrincipalDefinitionResponse) []map[string]string { return v.Attributes }).(pulumi.StringMapArrayOutput)
}

// A list of client IDs that match the clients. The client IDs are case-sensitive and must match the client IDs provided by the clients during connection.
func (o PrincipalDefinitionResponseOutput) ClientIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PrincipalDefinitionResponse) []string { return v.ClientIds }).(pulumi.StringArrayOutput)
}

// A list of usernames that match the clients. The usernames are case-sensitive and must match the usernames provided by the clients during authentication.
func (o PrincipalDefinitionResponseOutput) Usernames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PrincipalDefinitionResponse) []string { return v.Usernames }).(pulumi.StringArrayOutput)
}

// DataflowProfile Diagnostics properties
type ProfileDiagnostics struct {
	// Diagnostic log settings for the resource.
	Logs *DiagnosticsLogs `pulumi:"logs"`
	// The metrics settings for the resource.
	Metrics *Metrics `pulumi:"metrics"`
}

// Defaults sets the appropriate defaults for ProfileDiagnostics
func (val *ProfileDiagnostics) Defaults() *ProfileDiagnostics {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.Logs = tmp.Logs.Defaults()

	tmp.Metrics = tmp.Metrics.Defaults()

	return &tmp
}

// ProfileDiagnosticsInput is an input type that accepts ProfileDiagnosticsArgs and ProfileDiagnosticsOutput values.
// You can construct a concrete instance of `ProfileDiagnosticsInput` via:
//
//	ProfileDiagnosticsArgs{...}
type ProfileDiagnosticsInput interface {
	pulumi.Input

	ToProfileDiagnosticsOutput() ProfileDiagnosticsOutput
	ToProfileDiagnosticsOutputWithContext(context.Context) ProfileDiagnosticsOutput
}

// DataflowProfile Diagnostics properties
type ProfileDiagnosticsArgs struct {
	// Diagnostic log settings for the resource.
	Logs DiagnosticsLogsPtrInput `pulumi:"logs"`
	// The metrics settings for the resource.
	Metrics MetricsPtrInput `pulumi:"metrics"`
}

// Defaults sets the appropriate defaults for ProfileDiagnosticsArgs
func (val *ProfileDiagnosticsArgs) Defaults() *ProfileDiagnosticsArgs {
	if val == nil {
		return nil
	}
	tmp := *val

	return &tmp
}
func (ProfileDiagnosticsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProfileDiagnostics)(nil)).Elem()
}

func (i ProfileDiagnosticsArgs) ToProfileDiagnosticsOutput() ProfileDiagnosticsOutput {
	return i.ToProfileDiagnosticsOutputWithContext(context.Background())
}

func (i ProfileDiagnosticsArgs) ToProfileDiagnosticsOutputWithContext(ctx context.Context) ProfileDiagnosticsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProfileDiagnosticsOutput)
}

func (i ProfileDiagnosticsArgs) ToProfileDiagnosticsPtrOutput() ProfileDiagnosticsPtrOutput {
	return i.ToProfileDiagnosticsPtrOutputWithContext(context.Background())
}

func (i ProfileDiagnosticsArgs) ToProfileDiagnosticsPtrOutputWithContext(ctx context.Context) ProfileDiagnosticsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProfileDiagnosticsOutput).ToProfileDiagnosticsPtrOutputWithContext(ctx)
}

// ProfileDiagnosticsPtrInput is an input type that accepts ProfileDiagnosticsArgs, ProfileDiagnosticsPtr and ProfileDiagnosticsPtrOutput values.
// You can construct a concrete instance of `ProfileDiagnosticsPtrInput` via:
//
//	        ProfileDiagnosticsArgs{...}
//
//	or:
//
//	        nil
type ProfileDiagnosticsPtrInput interface {
	pulumi.Input

	ToProfileDiagnosticsPtrOutput() ProfileDiagnosticsPtrOutput
	ToProfileDiagnosticsPtrOutputWithContext(context.Context) ProfileDiagnosticsPtrOutput
}

type profileDiagnosticsPtrType ProfileDiagnosticsArgs

func ProfileDiagnosticsPtr(v *ProfileDiagnosticsArgs) ProfileDiagnosticsPtrInput {
	return (*profileDiagnosticsPtrType)(v)
}

func (*profileDiagnosticsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProfileDiagnostics)(nil)).Elem()
}

func (i *profileDiagnosticsPtrType) ToProfileDiagnosticsPtrOutput() ProfileDiagnosticsPtrOutput {
	return i.ToProfileDiagnosticsPtrOutputWithContext(context.Background())
}

func (i *profileDiagnosticsPtrType) ToProfileDiagnosticsPtrOutputWithContext(ctx context.Context) ProfileDiagnosticsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProfileDiagnosticsPtrOutput)
}

// DataflowProfile Diagnostics properties
type ProfileDiagnosticsOutput struct{ *pulumi.OutputState }

func (ProfileDiagnosticsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProfileDiagnostics)(nil)).Elem()
}

func (o ProfileDiagnosticsOutput) ToProfileDiagnosticsOutput() ProfileDiagnosticsOutput {
	return o
}

func (o ProfileDiagnosticsOutput) ToProfileDiagnosticsOutputWithContext(ctx context.Context) ProfileDiagnosticsOutput {
	return o
}

func (o ProfileDiagnosticsOutput) ToProfileDiagnosticsPtrOutput() ProfileDiagnosticsPtrOutput {
	return o.ToProfileDiagnosticsPtrOutputWithContext(context.Background())
}

func (o ProfileDiagnosticsOutput) ToProfileDiagnosticsPtrOutputWithContext(ctx context.Context) ProfileDiagnosticsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProfileDiagnostics) *ProfileDiagnostics {
		return &v
	}).(ProfileDiagnosticsPtrOutput)
}

// Diagnostic log settings for the resource.
func (o ProfileDiagnosticsOutput) Logs() DiagnosticsLogsPtrOutput {
	return o.ApplyT(func(v ProfileDiagnostics) *DiagnosticsLogs { return v.Logs }).(DiagnosticsLogsPtrOutput)
}

// The metrics settings for the resource.
func (o ProfileDiagnosticsOutput) Metrics() MetricsPtrOutput {
	return o.ApplyT(func(v ProfileDiagnostics) *Metrics { return v.Metrics }).(MetricsPtrOutput)
}

type ProfileDiagnosticsPtrOutput struct{ *pulumi.OutputState }

func (ProfileDiagnosticsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProfileDiagnostics)(nil)).Elem()
}

func (o ProfileDiagnosticsPtrOutput) ToProfileDiagnosticsPtrOutput() ProfileDiagnosticsPtrOutput {
	return o
}

func (o ProfileDiagnosticsPtrOutput) ToProfileDiagnosticsPtrOutputWithContext(ctx context.Context) ProfileDiagnosticsPtrOutput {
	return o
}

func (o ProfileDiagnosticsPtrOutput) Elem() ProfileDiagnosticsOutput {
	return o.ApplyT(func(v *ProfileDiagnostics) ProfileDiagnostics {
		if v != nil {
			return *v
		}
		var ret ProfileDiagnostics
		return ret
	}).(ProfileDiagnosticsOutput)
}

// Diagnostic log settings for the resource.
func (o ProfileDiagnosticsPtrOutput) Logs() DiagnosticsLogsPtrOutput {
	return o.ApplyT(func(v *ProfileDiagnostics) *DiagnosticsLogs {
		if v == nil {
			return nil
		}
		return v.Logs
	}).(DiagnosticsLogsPtrOutput)
}

// The metrics settings for the resource.
func (o ProfileDiagnosticsPtrOutput) Metrics() MetricsPtrOutput {
	return o.ApplyT(func(v *ProfileDiagnostics) *Metrics {
		if v == nil {
			return nil
		}
		return v.Metrics
	}).(MetricsPtrOutput)
}

// DataflowProfile Diagnostics properties
type ProfileDiagnosticsResponse struct {
	// Diagnostic log settings for the resource.
	Logs *DiagnosticsLogsResponse `pulumi:"logs"`
	// The metrics settings for the resource.
	Metrics *MetricsResponse `pulumi:"metrics"`
}

// Defaults sets the appropriate defaults for ProfileDiagnosticsResponse
func (val *ProfileDiagnosticsResponse) Defaults() *ProfileDiagnosticsResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.Logs = tmp.Logs.Defaults()

	tmp.Metrics = tmp.Metrics.Defaults()

	return &tmp
}

// DataflowProfile Diagnostics properties
type ProfileDiagnosticsResponseOutput struct{ *pulumi.OutputState }

func (ProfileDiagnosticsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProfileDiagnosticsResponse)(nil)).Elem()
}

func (o ProfileDiagnosticsResponseOutput) ToProfileDiagnosticsResponseOutput() ProfileDiagnosticsResponseOutput {
	return o
}

func (o ProfileDiagnosticsResponseOutput) ToProfileDiagnosticsResponseOutputWithContext(ctx context.Context) ProfileDiagnosticsResponseOutput {
	return o
}

// Diagnostic log settings for the resource.
func (o ProfileDiagnosticsResponseOutput) Logs() DiagnosticsLogsResponsePtrOutput {
	return o.ApplyT(func(v ProfileDiagnosticsResponse) *DiagnosticsLogsResponse { return v.Logs }).(DiagnosticsLogsResponsePtrOutput)
}

// The metrics settings for the resource.
func (o ProfileDiagnosticsResponseOutput) Metrics() MetricsResponsePtrOutput {
	return o.ApplyT(func(v ProfileDiagnosticsResponse) *MetricsResponse { return v.Metrics }).(MetricsResponsePtrOutput)
}

type ProfileDiagnosticsResponsePtrOutput struct{ *pulumi.OutputState }

func (ProfileDiagnosticsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProfileDiagnosticsResponse)(nil)).Elem()
}

func (o ProfileDiagnosticsResponsePtrOutput) ToProfileDiagnosticsResponsePtrOutput() ProfileDiagnosticsResponsePtrOutput {
	return o
}

func (o ProfileDiagnosticsResponsePtrOutput) ToProfileDiagnosticsResponsePtrOutputWithContext(ctx context.Context) ProfileDiagnosticsResponsePtrOutput {
	return o
}

func (o ProfileDiagnosticsResponsePtrOutput) Elem() ProfileDiagnosticsResponseOutput {
	return o.ApplyT(func(v *ProfileDiagnosticsResponse) ProfileDiagnosticsResponse {
		if v != nil {
			return *v
		}
		var ret ProfileDiagnosticsResponse
		return ret
	}).(ProfileDiagnosticsResponseOutput)
}

// Diagnostic log settings for the resource.
func (o ProfileDiagnosticsResponsePtrOutput) Logs() DiagnosticsLogsResponsePtrOutput {
	return o.ApplyT(func(v *ProfileDiagnosticsResponse) *DiagnosticsLogsResponse {
		if v == nil {
			return nil
		}
		return v.Logs
	}).(DiagnosticsLogsResponsePtrOutput)
}

// The metrics settings for the resource.
func (o ProfileDiagnosticsResponsePtrOutput) Metrics() MetricsResponsePtrOutput {
	return o.ApplyT(func(v *ProfileDiagnosticsResponse) *MetricsResponse {
		if v == nil {
			return nil
		}
		return v.Metrics
	}).(MetricsResponsePtrOutput)
}

// Anonymous authentication
type RegistryEndpointAnonymousAuthentication struct {
	// Anonymous authentication properties
	AnonymousSettings interface{} `pulumi:"anonymousSettings"`
	// The authentication method.
	// Expected value is 'Anonymous'.
	Method string `pulumi:"method"`
}

// RegistryEndpointAnonymousAuthenticationInput is an input type that accepts RegistryEndpointAnonymousAuthenticationArgs and RegistryEndpointAnonymousAuthenticationOutput values.
// You can construct a concrete instance of `RegistryEndpointAnonymousAuthenticationInput` via:
//
//	RegistryEndpointAnonymousAuthenticationArgs{...}
type RegistryEndpointAnonymousAuthenticationInput interface {
	pulumi.Input

	ToRegistryEndpointAnonymousAuthenticationOutput() RegistryEndpointAnonymousAuthenticationOutput
	ToRegistryEndpointAnonymousAuthenticationOutputWithContext(context.Context) RegistryEndpointAnonymousAuthenticationOutput
}

// Anonymous authentication
type RegistryEndpointAnonymousAuthenticationArgs struct {
	// Anonymous authentication properties
	AnonymousSettings pulumi.Input `pulumi:"anonymousSettings"`
	// The authentication method.
	// Expected value is 'Anonymous'.
	Method pulumi.StringInput `pulumi:"method"`
}

func (RegistryEndpointAnonymousAuthenticationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RegistryEndpointAnonymousAuthentication)(nil)).Elem()
}

func (i RegistryEndpointAnonymousAuthenticationArgs) ToRegistryEndpointAnonymousAuthenticationOutput() RegistryEndpointAnonymousAuthenticationOutput {
	return i.ToRegistryEndpointAnonymousAuthenticationOutputWithContext(context.Background())
}

func (i RegistryEndpointAnonymousAuthenticationArgs) ToRegistryEndpointAnonymousAuthenticationOutputWithContext(ctx context.Context) RegistryEndpointAnonymousAuthenticationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegistryEndpointAnonymousAuthenticationOutput)
}

func (i RegistryEndpointAnonymousAuthenticationArgs) ToRegistryEndpointAnonymousAuthenticationPtrOutput() RegistryEndpointAnonymousAuthenticationPtrOutput {
	return i.ToRegistryEndpointAnonymousAuthenticationPtrOutputWithContext(context.Background())
}

func (i RegistryEndpointAnonymousAuthenticationArgs) ToRegistryEndpointAnonymousAuthenticationPtrOutputWithContext(ctx context.Context) RegistryEndpointAnonymousAuthenticationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegistryEndpointAnonymousAuthenticationOutput).ToRegistryEndpointAnonymousAuthenticationPtrOutputWithContext(ctx)
}

// RegistryEndpointAnonymousAuthenticationPtrInput is an input type that accepts RegistryEndpointAnonymousAuthenticationArgs, RegistryEndpointAnonymousAuthenticationPtr and RegistryEndpointAnonymousAuthenticationPtrOutput values.
// You can construct a concrete instance of `RegistryEndpointAnonymousAuthenticationPtrInput` via:
//
//	        RegistryEndpointAnonymousAuthenticationArgs{...}
//
//	or:
//
//	        nil
type RegistryEndpointAnonymousAuthenticationPtrInput interface {
	pulumi.Input

	ToRegistryEndpointAnonymousAuthenticationPtrOutput() RegistryEndpointAnonymousAuthenticationPtrOutput
	ToRegistryEndpointAnonymousAuthenticationPtrOutputWithContext(context.Context) RegistryEndpointAnonymousAuthenticationPtrOutput
}

type registryEndpointAnonymousAuthenticationPtrType RegistryEndpointAnonymousAuthenticationArgs

func RegistryEndpointAnonymousAuthenticationPtr(v *RegistryEndpointAnonymousAuthenticationArgs) RegistryEndpointAnonymousAuthenticationPtrInput {
	return (*registryEndpointAnonymousAuthenticationPtrType)(v)
}

func (*registryEndpointAnonymousAuthenticationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RegistryEndpointAnonymousAuthentication)(nil)).Elem()
}

func (i *registryEndpointAnonymousAuthenticationPtrType) ToRegistryEndpointAnonymousAuthenticationPtrOutput() RegistryEndpointAnonymousAuthenticationPtrOutput {
	return i.ToRegistryEndpointAnonymousAuthenticationPtrOutputWithContext(context.Background())
}

func (i *registryEndpointAnonymousAuthenticationPtrType) ToRegistryEndpointAnonymousAuthenticationPtrOutputWithContext(ctx context.Context) RegistryEndpointAnonymousAuthenticationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegistryEndpointAnonymousAuthenticationPtrOutput)
}

// Anonymous authentication
type RegistryEndpointAnonymousAuthenticationOutput struct{ *pulumi.OutputState }

func (RegistryEndpointAnonymousAuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RegistryEndpointAnonymousAuthentication)(nil)).Elem()
}

func (o RegistryEndpointAnonymousAuthenticationOutput) ToRegistryEndpointAnonymousAuthenticationOutput() RegistryEndpointAnonymousAuthenticationOutput {
	return o
}

func (o RegistryEndpointAnonymousAuthenticationOutput) ToRegistryEndpointAnonymousAuthenticationOutputWithContext(ctx context.Context) RegistryEndpointAnonymousAuthenticationOutput {
	return o
}

func (o RegistryEndpointAnonymousAuthenticationOutput) ToRegistryEndpointAnonymousAuthenticationPtrOutput() RegistryEndpointAnonymousAuthenticationPtrOutput {
	return o.ToRegistryEndpointAnonymousAuthenticationPtrOutputWithContext(context.Background())
}

func (o RegistryEndpointAnonymousAuthenticationOutput) ToRegistryEndpointAnonymousAuthenticationPtrOutputWithContext(ctx context.Context) RegistryEndpointAnonymousAuthenticationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RegistryEndpointAnonymousAuthentication) *RegistryEndpointAnonymousAuthentication {
		return &v
	}).(RegistryEndpointAnonymousAuthenticationPtrOutput)
}

// Anonymous authentication properties
func (o RegistryEndpointAnonymousAuthenticationOutput) AnonymousSettings() pulumi.AnyOutput {
	return o.ApplyT(func(v RegistryEndpointAnonymousAuthentication) interface{} { return v.AnonymousSettings }).(pulumi.AnyOutput)
}

// The authentication method.
// Expected value is 'Anonymous'.
func (o RegistryEndpointAnonymousAuthenticationOutput) Method() pulumi.StringOutput {
	return o.ApplyT(func(v RegistryEndpointAnonymousAuthentication) string { return v.Method }).(pulumi.StringOutput)
}

type RegistryEndpointAnonymousAuthenticationPtrOutput struct{ *pulumi.OutputState }

func (RegistryEndpointAnonymousAuthenticationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RegistryEndpointAnonymousAuthentication)(nil)).Elem()
}

func (o RegistryEndpointAnonymousAuthenticationPtrOutput) ToRegistryEndpointAnonymousAuthenticationPtrOutput() RegistryEndpointAnonymousAuthenticationPtrOutput {
	return o
}

func (o RegistryEndpointAnonymousAuthenticationPtrOutput) ToRegistryEndpointAnonymousAuthenticationPtrOutputWithContext(ctx context.Context) RegistryEndpointAnonymousAuthenticationPtrOutput {
	return o
}

func (o RegistryEndpointAnonymousAuthenticationPtrOutput) Elem() RegistryEndpointAnonymousAuthenticationOutput {
	return o.ApplyT(func(v *RegistryEndpointAnonymousAuthentication) RegistryEndpointAnonymousAuthentication {
		if v != nil {
			return *v
		}
		var ret RegistryEndpointAnonymousAuthentication
		return ret
	}).(RegistryEndpointAnonymousAuthenticationOutput)
}

// Anonymous authentication properties
func (o RegistryEndpointAnonymousAuthenticationPtrOutput) AnonymousSettings() pulumi.AnyOutput {
	return o.ApplyT(func(v *RegistryEndpointAnonymousAuthentication) interface{} {
		if v == nil {
			return nil
		}
		return v.AnonymousSettings
	}).(pulumi.AnyOutput)
}

// The authentication method.
// Expected value is 'Anonymous'.
func (o RegistryEndpointAnonymousAuthenticationPtrOutput) Method() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RegistryEndpointAnonymousAuthentication) *string {
		if v == nil {
			return nil
		}
		return &v.Method
	}).(pulumi.StringPtrOutput)
}

// Anonymous authentication
type RegistryEndpointAnonymousAuthenticationResponse struct {
	// Anonymous authentication properties
	AnonymousSettings interface{} `pulumi:"anonymousSettings"`
	// The authentication method.
	// Expected value is 'Anonymous'.
	Method string `pulumi:"method"`
}

// Anonymous authentication
type RegistryEndpointAnonymousAuthenticationResponseOutput struct{ *pulumi.OutputState }

func (RegistryEndpointAnonymousAuthenticationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RegistryEndpointAnonymousAuthenticationResponse)(nil)).Elem()
}

func (o RegistryEndpointAnonymousAuthenticationResponseOutput) ToRegistryEndpointAnonymousAuthenticationResponseOutput() RegistryEndpointAnonymousAuthenticationResponseOutput {
	return o
}

func (o RegistryEndpointAnonymousAuthenticationResponseOutput) ToRegistryEndpointAnonymousAuthenticationResponseOutputWithContext(ctx context.Context) RegistryEndpointAnonymousAuthenticationResponseOutput {
	return o
}

// Anonymous authentication properties
func (o RegistryEndpointAnonymousAuthenticationResponseOutput) AnonymousSettings() pulumi.AnyOutput {
	return o.ApplyT(func(v RegistryEndpointAnonymousAuthenticationResponse) interface{} { return v.AnonymousSettings }).(pulumi.AnyOutput)
}

// The authentication method.
// Expected value is 'Anonymous'.
func (o RegistryEndpointAnonymousAuthenticationResponseOutput) Method() pulumi.StringOutput {
	return o.ApplyT(func(v RegistryEndpointAnonymousAuthenticationResponse) string { return v.Method }).(pulumi.StringOutput)
}

// Artifact Pull Secret authentication
type RegistryEndpointArtifactPullSecretAuthentication struct {
	// Artifact Pull Secret authentication properties
	ArtifactPullSecretSettings RegistryEndpointArtifactPullSecretSettings `pulumi:"artifactPullSecretSettings"`
	// The authentication method.
	// Expected value is 'ArtifactPullSecret'.
	Method string `pulumi:"method"`
}

// RegistryEndpointArtifactPullSecretAuthenticationInput is an input type that accepts RegistryEndpointArtifactPullSecretAuthenticationArgs and RegistryEndpointArtifactPullSecretAuthenticationOutput values.
// You can construct a concrete instance of `RegistryEndpointArtifactPullSecretAuthenticationInput` via:
//
//	RegistryEndpointArtifactPullSecretAuthenticationArgs{...}
type RegistryEndpointArtifactPullSecretAuthenticationInput interface {
	pulumi.Input

	ToRegistryEndpointArtifactPullSecretAuthenticationOutput() RegistryEndpointArtifactPullSecretAuthenticationOutput
	ToRegistryEndpointArtifactPullSecretAuthenticationOutputWithContext(context.Context) RegistryEndpointArtifactPullSecretAuthenticationOutput
}

// Artifact Pull Secret authentication
type RegistryEndpointArtifactPullSecretAuthenticationArgs struct {
	// Artifact Pull Secret authentication properties
	ArtifactPullSecretSettings RegistryEndpointArtifactPullSecretSettingsInput `pulumi:"artifactPullSecretSettings"`
	// The authentication method.
	// Expected value is 'ArtifactPullSecret'.
	Method pulumi.StringInput `pulumi:"method"`
}

func (RegistryEndpointArtifactPullSecretAuthenticationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RegistryEndpointArtifactPullSecretAuthentication)(nil)).Elem()
}

func (i RegistryEndpointArtifactPullSecretAuthenticationArgs) ToRegistryEndpointArtifactPullSecretAuthenticationOutput() RegistryEndpointArtifactPullSecretAuthenticationOutput {
	return i.ToRegistryEndpointArtifactPullSecretAuthenticationOutputWithContext(context.Background())
}

func (i RegistryEndpointArtifactPullSecretAuthenticationArgs) ToRegistryEndpointArtifactPullSecretAuthenticationOutputWithContext(ctx context.Context) RegistryEndpointArtifactPullSecretAuthenticationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegistryEndpointArtifactPullSecretAuthenticationOutput)
}

func (i RegistryEndpointArtifactPullSecretAuthenticationArgs) ToRegistryEndpointArtifactPullSecretAuthenticationPtrOutput() RegistryEndpointArtifactPullSecretAuthenticationPtrOutput {
	return i.ToRegistryEndpointArtifactPullSecretAuthenticationPtrOutputWithContext(context.Background())
}

func (i RegistryEndpointArtifactPullSecretAuthenticationArgs) ToRegistryEndpointArtifactPullSecretAuthenticationPtrOutputWithContext(ctx context.Context) RegistryEndpointArtifactPullSecretAuthenticationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegistryEndpointArtifactPullSecretAuthenticationOutput).ToRegistryEndpointArtifactPullSecretAuthenticationPtrOutputWithContext(ctx)
}

// RegistryEndpointArtifactPullSecretAuthenticationPtrInput is an input type that accepts RegistryEndpointArtifactPullSecretAuthenticationArgs, RegistryEndpointArtifactPullSecretAuthenticationPtr and RegistryEndpointArtifactPullSecretAuthenticationPtrOutput values.
// You can construct a concrete instance of `RegistryEndpointArtifactPullSecretAuthenticationPtrInput` via:
//
//	        RegistryEndpointArtifactPullSecretAuthenticationArgs{...}
//
//	or:
//
//	        nil
type RegistryEndpointArtifactPullSecretAuthenticationPtrInput interface {
	pulumi.Input

	ToRegistryEndpointArtifactPullSecretAuthenticationPtrOutput() RegistryEndpointArtifactPullSecretAuthenticationPtrOutput
	ToRegistryEndpointArtifactPullSecretAuthenticationPtrOutputWithContext(context.Context) RegistryEndpointArtifactPullSecretAuthenticationPtrOutput
}

type registryEndpointArtifactPullSecretAuthenticationPtrType RegistryEndpointArtifactPullSecretAuthenticationArgs

func RegistryEndpointArtifactPullSecretAuthenticationPtr(v *RegistryEndpointArtifactPullSecretAuthenticationArgs) RegistryEndpointArtifactPullSecretAuthenticationPtrInput {
	return (*registryEndpointArtifactPullSecretAuthenticationPtrType)(v)
}

func (*registryEndpointArtifactPullSecretAuthenticationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RegistryEndpointArtifactPullSecretAuthentication)(nil)).Elem()
}

func (i *registryEndpointArtifactPullSecretAuthenticationPtrType) ToRegistryEndpointArtifactPullSecretAuthenticationPtrOutput() RegistryEndpointArtifactPullSecretAuthenticationPtrOutput {
	return i.ToRegistryEndpointArtifactPullSecretAuthenticationPtrOutputWithContext(context.Background())
}

func (i *registryEndpointArtifactPullSecretAuthenticationPtrType) ToRegistryEndpointArtifactPullSecretAuthenticationPtrOutputWithContext(ctx context.Context) RegistryEndpointArtifactPullSecretAuthenticationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegistryEndpointArtifactPullSecretAuthenticationPtrOutput)
}

// Artifact Pull Secret authentication
type RegistryEndpointArtifactPullSecretAuthenticationOutput struct{ *pulumi.OutputState }

func (RegistryEndpointArtifactPullSecretAuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RegistryEndpointArtifactPullSecretAuthentication)(nil)).Elem()
}

func (o RegistryEndpointArtifactPullSecretAuthenticationOutput) ToRegistryEndpointArtifactPullSecretAuthenticationOutput() RegistryEndpointArtifactPullSecretAuthenticationOutput {
	return o
}

func (o RegistryEndpointArtifactPullSecretAuthenticationOutput) ToRegistryEndpointArtifactPullSecretAuthenticationOutputWithContext(ctx context.Context) RegistryEndpointArtifactPullSecretAuthenticationOutput {
	return o
}

func (o RegistryEndpointArtifactPullSecretAuthenticationOutput) ToRegistryEndpointArtifactPullSecretAuthenticationPtrOutput() RegistryEndpointArtifactPullSecretAuthenticationPtrOutput {
	return o.ToRegistryEndpointArtifactPullSecretAuthenticationPtrOutputWithContext(context.Background())
}

func (o RegistryEndpointArtifactPullSecretAuthenticationOutput) ToRegistryEndpointArtifactPullSecretAuthenticationPtrOutputWithContext(ctx context.Context) RegistryEndpointArtifactPullSecretAuthenticationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RegistryEndpointArtifactPullSecretAuthentication) *RegistryEndpointArtifactPullSecretAuthentication {
		return &v
	}).(RegistryEndpointArtifactPullSecretAuthenticationPtrOutput)
}

// Artifact Pull Secret authentication properties
func (o RegistryEndpointArtifactPullSecretAuthenticationOutput) ArtifactPullSecretSettings() RegistryEndpointArtifactPullSecretSettingsOutput {
	return o.ApplyT(func(v RegistryEndpointArtifactPullSecretAuthentication) RegistryEndpointArtifactPullSecretSettings {
		return v.ArtifactPullSecretSettings
	}).(RegistryEndpointArtifactPullSecretSettingsOutput)
}

// The authentication method.
// Expected value is 'ArtifactPullSecret'.
func (o RegistryEndpointArtifactPullSecretAuthenticationOutput) Method() pulumi.StringOutput {
	return o.ApplyT(func(v RegistryEndpointArtifactPullSecretAuthentication) string { return v.Method }).(pulumi.StringOutput)
}

type RegistryEndpointArtifactPullSecretAuthenticationPtrOutput struct{ *pulumi.OutputState }

func (RegistryEndpointArtifactPullSecretAuthenticationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RegistryEndpointArtifactPullSecretAuthentication)(nil)).Elem()
}

func (o RegistryEndpointArtifactPullSecretAuthenticationPtrOutput) ToRegistryEndpointArtifactPullSecretAuthenticationPtrOutput() RegistryEndpointArtifactPullSecretAuthenticationPtrOutput {
	return o
}

func (o RegistryEndpointArtifactPullSecretAuthenticationPtrOutput) ToRegistryEndpointArtifactPullSecretAuthenticationPtrOutputWithContext(ctx context.Context) RegistryEndpointArtifactPullSecretAuthenticationPtrOutput {
	return o
}

func (o RegistryEndpointArtifactPullSecretAuthenticationPtrOutput) Elem() RegistryEndpointArtifactPullSecretAuthenticationOutput {
	return o.ApplyT(func(v *RegistryEndpointArtifactPullSecretAuthentication) RegistryEndpointArtifactPullSecretAuthentication {
		if v != nil {
			return *v
		}
		var ret RegistryEndpointArtifactPullSecretAuthentication
		return ret
	}).(RegistryEndpointArtifactPullSecretAuthenticationOutput)
}

// Artifact Pull Secret authentication properties
func (o RegistryEndpointArtifactPullSecretAuthenticationPtrOutput) ArtifactPullSecretSettings() RegistryEndpointArtifactPullSecretSettingsPtrOutput {
	return o.ApplyT(func(v *RegistryEndpointArtifactPullSecretAuthentication) *RegistryEndpointArtifactPullSecretSettings {
		if v == nil {
			return nil
		}
		return &v.ArtifactPullSecretSettings
	}).(RegistryEndpointArtifactPullSecretSettingsPtrOutput)
}

// The authentication method.
// Expected value is 'ArtifactPullSecret'.
func (o RegistryEndpointArtifactPullSecretAuthenticationPtrOutput) Method() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RegistryEndpointArtifactPullSecretAuthentication) *string {
		if v == nil {
			return nil
		}
		return &v.Method
	}).(pulumi.StringPtrOutput)
}

// Artifact Pull Secret authentication
type RegistryEndpointArtifactPullSecretAuthenticationResponse struct {
	// Artifact Pull Secret authentication properties
	ArtifactPullSecretSettings RegistryEndpointArtifactPullSecretSettingsResponse `pulumi:"artifactPullSecretSettings"`
	// The authentication method.
	// Expected value is 'ArtifactPullSecret'.
	Method string `pulumi:"method"`
}

// Artifact Pull Secret authentication
type RegistryEndpointArtifactPullSecretAuthenticationResponseOutput struct{ *pulumi.OutputState }

func (RegistryEndpointArtifactPullSecretAuthenticationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RegistryEndpointArtifactPullSecretAuthenticationResponse)(nil)).Elem()
}

func (o RegistryEndpointArtifactPullSecretAuthenticationResponseOutput) ToRegistryEndpointArtifactPullSecretAuthenticationResponseOutput() RegistryEndpointArtifactPullSecretAuthenticationResponseOutput {
	return o
}

func (o RegistryEndpointArtifactPullSecretAuthenticationResponseOutput) ToRegistryEndpointArtifactPullSecretAuthenticationResponseOutputWithContext(ctx context.Context) RegistryEndpointArtifactPullSecretAuthenticationResponseOutput {
	return o
}

// Artifact Pull Secret authentication properties
func (o RegistryEndpointArtifactPullSecretAuthenticationResponseOutput) ArtifactPullSecretSettings() RegistryEndpointArtifactPullSecretSettingsResponseOutput {
	return o.ApplyT(func(v RegistryEndpointArtifactPullSecretAuthenticationResponse) RegistryEndpointArtifactPullSecretSettingsResponse {
		return v.ArtifactPullSecretSettings
	}).(RegistryEndpointArtifactPullSecretSettingsResponseOutput)
}

// The authentication method.
// Expected value is 'ArtifactPullSecret'.
func (o RegistryEndpointArtifactPullSecretAuthenticationResponseOutput) Method() pulumi.StringOutput {
	return o.ApplyT(func(v RegistryEndpointArtifactPullSecretAuthenticationResponse) string { return v.Method }).(pulumi.StringOutput)
}

// RegistryEndpoint Artifact Pull Secret authentication properties
type RegistryEndpointArtifactPullSecretSettings struct {
	// The name of the kubernetes secret that contains the artifact pull secret.
	SecretRef string `pulumi:"secretRef"`
}

// RegistryEndpointArtifactPullSecretSettingsInput is an input type that accepts RegistryEndpointArtifactPullSecretSettingsArgs and RegistryEndpointArtifactPullSecretSettingsOutput values.
// You can construct a concrete instance of `RegistryEndpointArtifactPullSecretSettingsInput` via:
//
//	RegistryEndpointArtifactPullSecretSettingsArgs{...}
type RegistryEndpointArtifactPullSecretSettingsInput interface {
	pulumi.Input

	ToRegistryEndpointArtifactPullSecretSettingsOutput() RegistryEndpointArtifactPullSecretSettingsOutput
	ToRegistryEndpointArtifactPullSecretSettingsOutputWithContext(context.Context) RegistryEndpointArtifactPullSecretSettingsOutput
}

// RegistryEndpoint Artifact Pull Secret authentication properties
type RegistryEndpointArtifactPullSecretSettingsArgs struct {
	// The name of the kubernetes secret that contains the artifact pull secret.
	SecretRef pulumi.StringInput `pulumi:"secretRef"`
}

func (RegistryEndpointArtifactPullSecretSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RegistryEndpointArtifactPullSecretSettings)(nil)).Elem()
}

func (i RegistryEndpointArtifactPullSecretSettingsArgs) ToRegistryEndpointArtifactPullSecretSettingsOutput() RegistryEndpointArtifactPullSecretSettingsOutput {
	return i.ToRegistryEndpointArtifactPullSecretSettingsOutputWithContext(context.Background())
}

func (i RegistryEndpointArtifactPullSecretSettingsArgs) ToRegistryEndpointArtifactPullSecretSettingsOutputWithContext(ctx context.Context) RegistryEndpointArtifactPullSecretSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegistryEndpointArtifactPullSecretSettingsOutput)
}

func (i RegistryEndpointArtifactPullSecretSettingsArgs) ToRegistryEndpointArtifactPullSecretSettingsPtrOutput() RegistryEndpointArtifactPullSecretSettingsPtrOutput {
	return i.ToRegistryEndpointArtifactPullSecretSettingsPtrOutputWithContext(context.Background())
}

func (i RegistryEndpointArtifactPullSecretSettingsArgs) ToRegistryEndpointArtifactPullSecretSettingsPtrOutputWithContext(ctx context.Context) RegistryEndpointArtifactPullSecretSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegistryEndpointArtifactPullSecretSettingsOutput).ToRegistryEndpointArtifactPullSecretSettingsPtrOutputWithContext(ctx)
}

// RegistryEndpointArtifactPullSecretSettingsPtrInput is an input type that accepts RegistryEndpointArtifactPullSecretSettingsArgs, RegistryEndpointArtifactPullSecretSettingsPtr and RegistryEndpointArtifactPullSecretSettingsPtrOutput values.
// You can construct a concrete instance of `RegistryEndpointArtifactPullSecretSettingsPtrInput` via:
//
//	        RegistryEndpointArtifactPullSecretSettingsArgs{...}
//
//	or:
//
//	        nil
type RegistryEndpointArtifactPullSecretSettingsPtrInput interface {
	pulumi.Input

	ToRegistryEndpointArtifactPullSecretSettingsPtrOutput() RegistryEndpointArtifactPullSecretSettingsPtrOutput
	ToRegistryEndpointArtifactPullSecretSettingsPtrOutputWithContext(context.Context) RegistryEndpointArtifactPullSecretSettingsPtrOutput
}

type registryEndpointArtifactPullSecretSettingsPtrType RegistryEndpointArtifactPullSecretSettingsArgs

func RegistryEndpointArtifactPullSecretSettingsPtr(v *RegistryEndpointArtifactPullSecretSettingsArgs) RegistryEndpointArtifactPullSecretSettingsPtrInput {
	return (*registryEndpointArtifactPullSecretSettingsPtrType)(v)
}

func (*registryEndpointArtifactPullSecretSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RegistryEndpointArtifactPullSecretSettings)(nil)).Elem()
}

func (i *registryEndpointArtifactPullSecretSettingsPtrType) ToRegistryEndpointArtifactPullSecretSettingsPtrOutput() RegistryEndpointArtifactPullSecretSettingsPtrOutput {
	return i.ToRegistryEndpointArtifactPullSecretSettingsPtrOutputWithContext(context.Background())
}

func (i *registryEndpointArtifactPullSecretSettingsPtrType) ToRegistryEndpointArtifactPullSecretSettingsPtrOutputWithContext(ctx context.Context) RegistryEndpointArtifactPullSecretSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegistryEndpointArtifactPullSecretSettingsPtrOutput)
}

// RegistryEndpoint Artifact Pull Secret authentication properties
type RegistryEndpointArtifactPullSecretSettingsOutput struct{ *pulumi.OutputState }

func (RegistryEndpointArtifactPullSecretSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RegistryEndpointArtifactPullSecretSettings)(nil)).Elem()
}

func (o RegistryEndpointArtifactPullSecretSettingsOutput) ToRegistryEndpointArtifactPullSecretSettingsOutput() RegistryEndpointArtifactPullSecretSettingsOutput {
	return o
}

func (o RegistryEndpointArtifactPullSecretSettingsOutput) ToRegistryEndpointArtifactPullSecretSettingsOutputWithContext(ctx context.Context) RegistryEndpointArtifactPullSecretSettingsOutput {
	return o
}

func (o RegistryEndpointArtifactPullSecretSettingsOutput) ToRegistryEndpointArtifactPullSecretSettingsPtrOutput() RegistryEndpointArtifactPullSecretSettingsPtrOutput {
	return o.ToRegistryEndpointArtifactPullSecretSettingsPtrOutputWithContext(context.Background())
}

func (o RegistryEndpointArtifactPullSecretSettingsOutput) ToRegistryEndpointArtifactPullSecretSettingsPtrOutputWithContext(ctx context.Context) RegistryEndpointArtifactPullSecretSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RegistryEndpointArtifactPullSecretSettings) *RegistryEndpointArtifactPullSecretSettings {
		return &v
	}).(RegistryEndpointArtifactPullSecretSettingsPtrOutput)
}

// The name of the kubernetes secret that contains the artifact pull secret.
func (o RegistryEndpointArtifactPullSecretSettingsOutput) SecretRef() pulumi.StringOutput {
	return o.ApplyT(func(v RegistryEndpointArtifactPullSecretSettings) string { return v.SecretRef }).(pulumi.StringOutput)
}

type RegistryEndpointArtifactPullSecretSettingsPtrOutput struct{ *pulumi.OutputState }

func (RegistryEndpointArtifactPullSecretSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RegistryEndpointArtifactPullSecretSettings)(nil)).Elem()
}

func (o RegistryEndpointArtifactPullSecretSettingsPtrOutput) ToRegistryEndpointArtifactPullSecretSettingsPtrOutput() RegistryEndpointArtifactPullSecretSettingsPtrOutput {
	return o
}

func (o RegistryEndpointArtifactPullSecretSettingsPtrOutput) ToRegistryEndpointArtifactPullSecretSettingsPtrOutputWithContext(ctx context.Context) RegistryEndpointArtifactPullSecretSettingsPtrOutput {
	return o
}

func (o RegistryEndpointArtifactPullSecretSettingsPtrOutput) Elem() RegistryEndpointArtifactPullSecretSettingsOutput {
	return o.ApplyT(func(v *RegistryEndpointArtifactPullSecretSettings) RegistryEndpointArtifactPullSecretSettings {
		if v != nil {
			return *v
		}
		var ret RegistryEndpointArtifactPullSecretSettings
		return ret
	}).(RegistryEndpointArtifactPullSecretSettingsOutput)
}

// The name of the kubernetes secret that contains the artifact pull secret.
func (o RegistryEndpointArtifactPullSecretSettingsPtrOutput) SecretRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RegistryEndpointArtifactPullSecretSettings) *string {
		if v == nil {
			return nil
		}
		return &v.SecretRef
	}).(pulumi.StringPtrOutput)
}

// RegistryEndpoint Artifact Pull Secret authentication properties
type RegistryEndpointArtifactPullSecretSettingsResponse struct {
	// The name of the kubernetes secret that contains the artifact pull secret.
	SecretRef string `pulumi:"secretRef"`
}

// RegistryEndpoint Artifact Pull Secret authentication properties
type RegistryEndpointArtifactPullSecretSettingsResponseOutput struct{ *pulumi.OutputState }

func (RegistryEndpointArtifactPullSecretSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RegistryEndpointArtifactPullSecretSettingsResponse)(nil)).Elem()
}

func (o RegistryEndpointArtifactPullSecretSettingsResponseOutput) ToRegistryEndpointArtifactPullSecretSettingsResponseOutput() RegistryEndpointArtifactPullSecretSettingsResponseOutput {
	return o
}

func (o RegistryEndpointArtifactPullSecretSettingsResponseOutput) ToRegistryEndpointArtifactPullSecretSettingsResponseOutputWithContext(ctx context.Context) RegistryEndpointArtifactPullSecretSettingsResponseOutput {
	return o
}

// The name of the kubernetes secret that contains the artifact pull secret.
func (o RegistryEndpointArtifactPullSecretSettingsResponseOutput) SecretRef() pulumi.StringOutput {
	return o.ApplyT(func(v RegistryEndpointArtifactPullSecretSettingsResponse) string { return v.SecretRef }).(pulumi.StringOutput)
}

// RegistryEndpoint properties
type RegistryEndpointProperties struct {
	// The authentication settings for the Azure Container Registry.
	Authentication interface{} `pulumi:"authentication"`
	// The Container Registry endpoint hostname.
	Host string `pulumi:"host"`
	// Trust settings for the registry endpoint
	TrustSettings *RegistryEndpointTrustedSettings `pulumi:"trustSettings"`
}

// RegistryEndpointPropertiesInput is an input type that accepts RegistryEndpointPropertiesArgs and RegistryEndpointPropertiesOutput values.
// You can construct a concrete instance of `RegistryEndpointPropertiesInput` via:
//
//	RegistryEndpointPropertiesArgs{...}
type RegistryEndpointPropertiesInput interface {
	pulumi.Input

	ToRegistryEndpointPropertiesOutput() RegistryEndpointPropertiesOutput
	ToRegistryEndpointPropertiesOutputWithContext(context.Context) RegistryEndpointPropertiesOutput
}

// RegistryEndpoint properties
type RegistryEndpointPropertiesArgs struct {
	// The authentication settings for the Azure Container Registry.
	Authentication pulumi.Input `pulumi:"authentication"`
	// The Container Registry endpoint hostname.
	Host pulumi.StringInput `pulumi:"host"`
	// Trust settings for the registry endpoint
	TrustSettings RegistryEndpointTrustedSettingsPtrInput `pulumi:"trustSettings"`
}

func (RegistryEndpointPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RegistryEndpointProperties)(nil)).Elem()
}

func (i RegistryEndpointPropertiesArgs) ToRegistryEndpointPropertiesOutput() RegistryEndpointPropertiesOutput {
	return i.ToRegistryEndpointPropertiesOutputWithContext(context.Background())
}

func (i RegistryEndpointPropertiesArgs) ToRegistryEndpointPropertiesOutputWithContext(ctx context.Context) RegistryEndpointPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegistryEndpointPropertiesOutput)
}

func (i RegistryEndpointPropertiesArgs) ToRegistryEndpointPropertiesPtrOutput() RegistryEndpointPropertiesPtrOutput {
	return i.ToRegistryEndpointPropertiesPtrOutputWithContext(context.Background())
}

func (i RegistryEndpointPropertiesArgs) ToRegistryEndpointPropertiesPtrOutputWithContext(ctx context.Context) RegistryEndpointPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegistryEndpointPropertiesOutput).ToRegistryEndpointPropertiesPtrOutputWithContext(ctx)
}

// RegistryEndpointPropertiesPtrInput is an input type that accepts RegistryEndpointPropertiesArgs, RegistryEndpointPropertiesPtr and RegistryEndpointPropertiesPtrOutput values.
// You can construct a concrete instance of `RegistryEndpointPropertiesPtrInput` via:
//
//	        RegistryEndpointPropertiesArgs{...}
//
//	or:
//
//	        nil
type RegistryEndpointPropertiesPtrInput interface {
	pulumi.Input

	ToRegistryEndpointPropertiesPtrOutput() RegistryEndpointPropertiesPtrOutput
	ToRegistryEndpointPropertiesPtrOutputWithContext(context.Context) RegistryEndpointPropertiesPtrOutput
}

type registryEndpointPropertiesPtrType RegistryEndpointPropertiesArgs

func RegistryEndpointPropertiesPtr(v *RegistryEndpointPropertiesArgs) RegistryEndpointPropertiesPtrInput {
	return (*registryEndpointPropertiesPtrType)(v)
}

func (*registryEndpointPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RegistryEndpointProperties)(nil)).Elem()
}

func (i *registryEndpointPropertiesPtrType) ToRegistryEndpointPropertiesPtrOutput() RegistryEndpointPropertiesPtrOutput {
	return i.ToRegistryEndpointPropertiesPtrOutputWithContext(context.Background())
}

func (i *registryEndpointPropertiesPtrType) ToRegistryEndpointPropertiesPtrOutputWithContext(ctx context.Context) RegistryEndpointPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegistryEndpointPropertiesPtrOutput)
}

// RegistryEndpoint properties
type RegistryEndpointPropertiesOutput struct{ *pulumi.OutputState }

func (RegistryEndpointPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RegistryEndpointProperties)(nil)).Elem()
}

func (o RegistryEndpointPropertiesOutput) ToRegistryEndpointPropertiesOutput() RegistryEndpointPropertiesOutput {
	return o
}

func (o RegistryEndpointPropertiesOutput) ToRegistryEndpointPropertiesOutputWithContext(ctx context.Context) RegistryEndpointPropertiesOutput {
	return o
}

func (o RegistryEndpointPropertiesOutput) ToRegistryEndpointPropertiesPtrOutput() RegistryEndpointPropertiesPtrOutput {
	return o.ToRegistryEndpointPropertiesPtrOutputWithContext(context.Background())
}

func (o RegistryEndpointPropertiesOutput) ToRegistryEndpointPropertiesPtrOutputWithContext(ctx context.Context) RegistryEndpointPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RegistryEndpointProperties) *RegistryEndpointProperties {
		return &v
	}).(RegistryEndpointPropertiesPtrOutput)
}

// The authentication settings for the Azure Container Registry.
func (o RegistryEndpointPropertiesOutput) Authentication() pulumi.AnyOutput {
	return o.ApplyT(func(v RegistryEndpointProperties) interface{} { return v.Authentication }).(pulumi.AnyOutput)
}

// The Container Registry endpoint hostname.
func (o RegistryEndpointPropertiesOutput) Host() pulumi.StringOutput {
	return o.ApplyT(func(v RegistryEndpointProperties) string { return v.Host }).(pulumi.StringOutput)
}

// Trust settings for the registry endpoint
func (o RegistryEndpointPropertiesOutput) TrustSettings() RegistryEndpointTrustedSettingsPtrOutput {
	return o.ApplyT(func(v RegistryEndpointProperties) *RegistryEndpointTrustedSettings { return v.TrustSettings }).(RegistryEndpointTrustedSettingsPtrOutput)
}

type RegistryEndpointPropertiesPtrOutput struct{ *pulumi.OutputState }

func (RegistryEndpointPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RegistryEndpointProperties)(nil)).Elem()
}

func (o RegistryEndpointPropertiesPtrOutput) ToRegistryEndpointPropertiesPtrOutput() RegistryEndpointPropertiesPtrOutput {
	return o
}

func (o RegistryEndpointPropertiesPtrOutput) ToRegistryEndpointPropertiesPtrOutputWithContext(ctx context.Context) RegistryEndpointPropertiesPtrOutput {
	return o
}

func (o RegistryEndpointPropertiesPtrOutput) Elem() RegistryEndpointPropertiesOutput {
	return o.ApplyT(func(v *RegistryEndpointProperties) RegistryEndpointProperties {
		if v != nil {
			return *v
		}
		var ret RegistryEndpointProperties
		return ret
	}).(RegistryEndpointPropertiesOutput)
}

// The authentication settings for the Azure Container Registry.
func (o RegistryEndpointPropertiesPtrOutput) Authentication() pulumi.AnyOutput {
	return o.ApplyT(func(v *RegistryEndpointProperties) interface{} {
		if v == nil {
			return nil
		}
		return v.Authentication
	}).(pulumi.AnyOutput)
}

// The Container Registry endpoint hostname.
func (o RegistryEndpointPropertiesPtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RegistryEndpointProperties) *string {
		if v == nil {
			return nil
		}
		return &v.Host
	}).(pulumi.StringPtrOutput)
}

// Trust settings for the registry endpoint
func (o RegistryEndpointPropertiesPtrOutput) TrustSettings() RegistryEndpointTrustedSettingsPtrOutput {
	return o.ApplyT(func(v *RegistryEndpointProperties) *RegistryEndpointTrustedSettings {
		if v == nil {
			return nil
		}
		return v.TrustSettings
	}).(RegistryEndpointTrustedSettingsPtrOutput)
}

// RegistryEndpoint properties
type RegistryEndpointPropertiesResponse struct {
	// The authentication settings for the Azure Container Registry.
	Authentication interface{} `pulumi:"authentication"`
	// The Container Registry endpoint hostname.
	Host string `pulumi:"host"`
	// The status of the last operation.
	ProvisioningState string `pulumi:"provisioningState"`
	// Trust settings for the registry endpoint
	TrustSettings *RegistryEndpointTrustedSettingsResponse `pulumi:"trustSettings"`
}

// RegistryEndpoint properties
type RegistryEndpointPropertiesResponseOutput struct{ *pulumi.OutputState }

func (RegistryEndpointPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RegistryEndpointPropertiesResponse)(nil)).Elem()
}

func (o RegistryEndpointPropertiesResponseOutput) ToRegistryEndpointPropertiesResponseOutput() RegistryEndpointPropertiesResponseOutput {
	return o
}

func (o RegistryEndpointPropertiesResponseOutput) ToRegistryEndpointPropertiesResponseOutputWithContext(ctx context.Context) RegistryEndpointPropertiesResponseOutput {
	return o
}

// The authentication settings for the Azure Container Registry.
func (o RegistryEndpointPropertiesResponseOutput) Authentication() pulumi.AnyOutput {
	return o.ApplyT(func(v RegistryEndpointPropertiesResponse) interface{} { return v.Authentication }).(pulumi.AnyOutput)
}

// The Container Registry endpoint hostname.
func (o RegistryEndpointPropertiesResponseOutput) Host() pulumi.StringOutput {
	return o.ApplyT(func(v RegistryEndpointPropertiesResponse) string { return v.Host }).(pulumi.StringOutput)
}

// The status of the last operation.
func (o RegistryEndpointPropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v RegistryEndpointPropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Trust settings for the registry endpoint
func (o RegistryEndpointPropertiesResponseOutput) TrustSettings() RegistryEndpointTrustedSettingsResponsePtrOutput {
	return o.ApplyT(func(v RegistryEndpointPropertiesResponse) *RegistryEndpointTrustedSettingsResponse {
		return v.TrustSettings
	}).(RegistryEndpointTrustedSettingsResponsePtrOutput)
}

// System assigned identity authentication
type RegistryEndpointSystemAssignedIdentityAuthentication struct {
	// The authentication method.
	// Expected value is 'SystemAssignedManagedIdentity'.
	Method string `pulumi:"method"`
	// System assigned managed identity properties
	SystemAssignedManagedIdentitySettings RegistryEndpointSystemAssignedManagedIdentitySettings `pulumi:"systemAssignedManagedIdentitySettings"`
}

// RegistryEndpointSystemAssignedIdentityAuthenticationInput is an input type that accepts RegistryEndpointSystemAssignedIdentityAuthenticationArgs and RegistryEndpointSystemAssignedIdentityAuthenticationOutput values.
// You can construct a concrete instance of `RegistryEndpointSystemAssignedIdentityAuthenticationInput` via:
//
//	RegistryEndpointSystemAssignedIdentityAuthenticationArgs{...}
type RegistryEndpointSystemAssignedIdentityAuthenticationInput interface {
	pulumi.Input

	ToRegistryEndpointSystemAssignedIdentityAuthenticationOutput() RegistryEndpointSystemAssignedIdentityAuthenticationOutput
	ToRegistryEndpointSystemAssignedIdentityAuthenticationOutputWithContext(context.Context) RegistryEndpointSystemAssignedIdentityAuthenticationOutput
}

// System assigned identity authentication
type RegistryEndpointSystemAssignedIdentityAuthenticationArgs struct {
	// The authentication method.
	// Expected value is 'SystemAssignedManagedIdentity'.
	Method pulumi.StringInput `pulumi:"method"`
	// System assigned managed identity properties
	SystemAssignedManagedIdentitySettings RegistryEndpointSystemAssignedManagedIdentitySettingsInput `pulumi:"systemAssignedManagedIdentitySettings"`
}

func (RegistryEndpointSystemAssignedIdentityAuthenticationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RegistryEndpointSystemAssignedIdentityAuthentication)(nil)).Elem()
}

func (i RegistryEndpointSystemAssignedIdentityAuthenticationArgs) ToRegistryEndpointSystemAssignedIdentityAuthenticationOutput() RegistryEndpointSystemAssignedIdentityAuthenticationOutput {
	return i.ToRegistryEndpointSystemAssignedIdentityAuthenticationOutputWithContext(context.Background())
}

func (i RegistryEndpointSystemAssignedIdentityAuthenticationArgs) ToRegistryEndpointSystemAssignedIdentityAuthenticationOutputWithContext(ctx context.Context) RegistryEndpointSystemAssignedIdentityAuthenticationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegistryEndpointSystemAssignedIdentityAuthenticationOutput)
}

func (i RegistryEndpointSystemAssignedIdentityAuthenticationArgs) ToRegistryEndpointSystemAssignedIdentityAuthenticationPtrOutput() RegistryEndpointSystemAssignedIdentityAuthenticationPtrOutput {
	return i.ToRegistryEndpointSystemAssignedIdentityAuthenticationPtrOutputWithContext(context.Background())
}

func (i RegistryEndpointSystemAssignedIdentityAuthenticationArgs) ToRegistryEndpointSystemAssignedIdentityAuthenticationPtrOutputWithContext(ctx context.Context) RegistryEndpointSystemAssignedIdentityAuthenticationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegistryEndpointSystemAssignedIdentityAuthenticationOutput).ToRegistryEndpointSystemAssignedIdentityAuthenticationPtrOutputWithContext(ctx)
}

// RegistryEndpointSystemAssignedIdentityAuthenticationPtrInput is an input type that accepts RegistryEndpointSystemAssignedIdentityAuthenticationArgs, RegistryEndpointSystemAssignedIdentityAuthenticationPtr and RegistryEndpointSystemAssignedIdentityAuthenticationPtrOutput values.
// You can construct a concrete instance of `RegistryEndpointSystemAssignedIdentityAuthenticationPtrInput` via:
//
//	        RegistryEndpointSystemAssignedIdentityAuthenticationArgs{...}
//
//	or:
//
//	        nil
type RegistryEndpointSystemAssignedIdentityAuthenticationPtrInput interface {
	pulumi.Input

	ToRegistryEndpointSystemAssignedIdentityAuthenticationPtrOutput() RegistryEndpointSystemAssignedIdentityAuthenticationPtrOutput
	ToRegistryEndpointSystemAssignedIdentityAuthenticationPtrOutputWithContext(context.Context) RegistryEndpointSystemAssignedIdentityAuthenticationPtrOutput
}

type registryEndpointSystemAssignedIdentityAuthenticationPtrType RegistryEndpointSystemAssignedIdentityAuthenticationArgs

func RegistryEndpointSystemAssignedIdentityAuthenticationPtr(v *RegistryEndpointSystemAssignedIdentityAuthenticationArgs) RegistryEndpointSystemAssignedIdentityAuthenticationPtrInput {
	return (*registryEndpointSystemAssignedIdentityAuthenticationPtrType)(v)
}

func (*registryEndpointSystemAssignedIdentityAuthenticationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RegistryEndpointSystemAssignedIdentityAuthentication)(nil)).Elem()
}

func (i *registryEndpointSystemAssignedIdentityAuthenticationPtrType) ToRegistryEndpointSystemAssignedIdentityAuthenticationPtrOutput() RegistryEndpointSystemAssignedIdentityAuthenticationPtrOutput {
	return i.ToRegistryEndpointSystemAssignedIdentityAuthenticationPtrOutputWithContext(context.Background())
}

func (i *registryEndpointSystemAssignedIdentityAuthenticationPtrType) ToRegistryEndpointSystemAssignedIdentityAuthenticationPtrOutputWithContext(ctx context.Context) RegistryEndpointSystemAssignedIdentityAuthenticationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegistryEndpointSystemAssignedIdentityAuthenticationPtrOutput)
}

// System assigned identity authentication
type RegistryEndpointSystemAssignedIdentityAuthenticationOutput struct{ *pulumi.OutputState }

func (RegistryEndpointSystemAssignedIdentityAuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RegistryEndpointSystemAssignedIdentityAuthentication)(nil)).Elem()
}

func (o RegistryEndpointSystemAssignedIdentityAuthenticationOutput) ToRegistryEndpointSystemAssignedIdentityAuthenticationOutput() RegistryEndpointSystemAssignedIdentityAuthenticationOutput {
	return o
}

func (o RegistryEndpointSystemAssignedIdentityAuthenticationOutput) ToRegistryEndpointSystemAssignedIdentityAuthenticationOutputWithContext(ctx context.Context) RegistryEndpointSystemAssignedIdentityAuthenticationOutput {
	return o
}

func (o RegistryEndpointSystemAssignedIdentityAuthenticationOutput) ToRegistryEndpointSystemAssignedIdentityAuthenticationPtrOutput() RegistryEndpointSystemAssignedIdentityAuthenticationPtrOutput {
	return o.ToRegistryEndpointSystemAssignedIdentityAuthenticationPtrOutputWithContext(context.Background())
}

func (o RegistryEndpointSystemAssignedIdentityAuthenticationOutput) ToRegistryEndpointSystemAssignedIdentityAuthenticationPtrOutputWithContext(ctx context.Context) RegistryEndpointSystemAssignedIdentityAuthenticationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RegistryEndpointSystemAssignedIdentityAuthentication) *RegistryEndpointSystemAssignedIdentityAuthentication {
		return &v
	}).(RegistryEndpointSystemAssignedIdentityAuthenticationPtrOutput)
}

// The authentication method.
// Expected value is 'SystemAssignedManagedIdentity'.
func (o RegistryEndpointSystemAssignedIdentityAuthenticationOutput) Method() pulumi.StringOutput {
	return o.ApplyT(func(v RegistryEndpointSystemAssignedIdentityAuthentication) string { return v.Method }).(pulumi.StringOutput)
}

// System assigned managed identity properties
func (o RegistryEndpointSystemAssignedIdentityAuthenticationOutput) SystemAssignedManagedIdentitySettings() RegistryEndpointSystemAssignedManagedIdentitySettingsOutput {
	return o.ApplyT(func(v RegistryEndpointSystemAssignedIdentityAuthentication) RegistryEndpointSystemAssignedManagedIdentitySettings {
		return v.SystemAssignedManagedIdentitySettings
	}).(RegistryEndpointSystemAssignedManagedIdentitySettingsOutput)
}

type RegistryEndpointSystemAssignedIdentityAuthenticationPtrOutput struct{ *pulumi.OutputState }

func (RegistryEndpointSystemAssignedIdentityAuthenticationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RegistryEndpointSystemAssignedIdentityAuthentication)(nil)).Elem()
}

func (o RegistryEndpointSystemAssignedIdentityAuthenticationPtrOutput) ToRegistryEndpointSystemAssignedIdentityAuthenticationPtrOutput() RegistryEndpointSystemAssignedIdentityAuthenticationPtrOutput {
	return o
}

func (o RegistryEndpointSystemAssignedIdentityAuthenticationPtrOutput) ToRegistryEndpointSystemAssignedIdentityAuthenticationPtrOutputWithContext(ctx context.Context) RegistryEndpointSystemAssignedIdentityAuthenticationPtrOutput {
	return o
}

func (o RegistryEndpointSystemAssignedIdentityAuthenticationPtrOutput) Elem() RegistryEndpointSystemAssignedIdentityAuthenticationOutput {
	return o.ApplyT(func(v *RegistryEndpointSystemAssignedIdentityAuthentication) RegistryEndpointSystemAssignedIdentityAuthentication {
		if v != nil {
			return *v
		}
		var ret RegistryEndpointSystemAssignedIdentityAuthentication
		return ret
	}).(RegistryEndpointSystemAssignedIdentityAuthenticationOutput)
}

// The authentication method.
// Expected value is 'SystemAssignedManagedIdentity'.
func (o RegistryEndpointSystemAssignedIdentityAuthenticationPtrOutput) Method() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RegistryEndpointSystemAssignedIdentityAuthentication) *string {
		if v == nil {
			return nil
		}
		return &v.Method
	}).(pulumi.StringPtrOutput)
}

// System assigned managed identity properties
func (o RegistryEndpointSystemAssignedIdentityAuthenticationPtrOutput) SystemAssignedManagedIdentitySettings() RegistryEndpointSystemAssignedManagedIdentitySettingsPtrOutput {
	return o.ApplyT(func(v *RegistryEndpointSystemAssignedIdentityAuthentication) *RegistryEndpointSystemAssignedManagedIdentitySettings {
		if v == nil {
			return nil
		}
		return &v.SystemAssignedManagedIdentitySettings
	}).(RegistryEndpointSystemAssignedManagedIdentitySettingsPtrOutput)
}

// System assigned identity authentication
type RegistryEndpointSystemAssignedIdentityAuthenticationResponse struct {
	// The authentication method.
	// Expected value is 'SystemAssignedManagedIdentity'.
	Method string `pulumi:"method"`
	// System assigned managed identity properties
	SystemAssignedManagedIdentitySettings RegistryEndpointSystemAssignedManagedIdentitySettingsResponse `pulumi:"systemAssignedManagedIdentitySettings"`
}

// System assigned identity authentication
type RegistryEndpointSystemAssignedIdentityAuthenticationResponseOutput struct{ *pulumi.OutputState }

func (RegistryEndpointSystemAssignedIdentityAuthenticationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RegistryEndpointSystemAssignedIdentityAuthenticationResponse)(nil)).Elem()
}

func (o RegistryEndpointSystemAssignedIdentityAuthenticationResponseOutput) ToRegistryEndpointSystemAssignedIdentityAuthenticationResponseOutput() RegistryEndpointSystemAssignedIdentityAuthenticationResponseOutput {
	return o
}

func (o RegistryEndpointSystemAssignedIdentityAuthenticationResponseOutput) ToRegistryEndpointSystemAssignedIdentityAuthenticationResponseOutputWithContext(ctx context.Context) RegistryEndpointSystemAssignedIdentityAuthenticationResponseOutput {
	return o
}

// The authentication method.
// Expected value is 'SystemAssignedManagedIdentity'.
func (o RegistryEndpointSystemAssignedIdentityAuthenticationResponseOutput) Method() pulumi.StringOutput {
	return o.ApplyT(func(v RegistryEndpointSystemAssignedIdentityAuthenticationResponse) string { return v.Method }).(pulumi.StringOutput)
}

// System assigned managed identity properties
func (o RegistryEndpointSystemAssignedIdentityAuthenticationResponseOutput) SystemAssignedManagedIdentitySettings() RegistryEndpointSystemAssignedManagedIdentitySettingsResponseOutput {
	return o.ApplyT(func(v RegistryEndpointSystemAssignedIdentityAuthenticationResponse) RegistryEndpointSystemAssignedManagedIdentitySettingsResponse {
		return v.SystemAssignedManagedIdentitySettings
	}).(RegistryEndpointSystemAssignedManagedIdentitySettingsResponseOutput)
}

// System assigned managed identity properties
type RegistryEndpointSystemAssignedManagedIdentitySettings struct {
	// Audience of the service to authenticate against. Optional; defaults to the audience for Service host configuration.
	Audience *string `pulumi:"audience"`
}

// RegistryEndpointSystemAssignedManagedIdentitySettingsInput is an input type that accepts RegistryEndpointSystemAssignedManagedIdentitySettingsArgs and RegistryEndpointSystemAssignedManagedIdentitySettingsOutput values.
// You can construct a concrete instance of `RegistryEndpointSystemAssignedManagedIdentitySettingsInput` via:
//
//	RegistryEndpointSystemAssignedManagedIdentitySettingsArgs{...}
type RegistryEndpointSystemAssignedManagedIdentitySettingsInput interface {
	pulumi.Input

	ToRegistryEndpointSystemAssignedManagedIdentitySettingsOutput() RegistryEndpointSystemAssignedManagedIdentitySettingsOutput
	ToRegistryEndpointSystemAssignedManagedIdentitySettingsOutputWithContext(context.Context) RegistryEndpointSystemAssignedManagedIdentitySettingsOutput
}

// System assigned managed identity properties
type RegistryEndpointSystemAssignedManagedIdentitySettingsArgs struct {
	// Audience of the service to authenticate against. Optional; defaults to the audience for Service host configuration.
	Audience pulumi.StringPtrInput `pulumi:"audience"`
}

func (RegistryEndpointSystemAssignedManagedIdentitySettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RegistryEndpointSystemAssignedManagedIdentitySettings)(nil)).Elem()
}

func (i RegistryEndpointSystemAssignedManagedIdentitySettingsArgs) ToRegistryEndpointSystemAssignedManagedIdentitySettingsOutput() RegistryEndpointSystemAssignedManagedIdentitySettingsOutput {
	return i.ToRegistryEndpointSystemAssignedManagedIdentitySettingsOutputWithContext(context.Background())
}

func (i RegistryEndpointSystemAssignedManagedIdentitySettingsArgs) ToRegistryEndpointSystemAssignedManagedIdentitySettingsOutputWithContext(ctx context.Context) RegistryEndpointSystemAssignedManagedIdentitySettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegistryEndpointSystemAssignedManagedIdentitySettingsOutput)
}

func (i RegistryEndpointSystemAssignedManagedIdentitySettingsArgs) ToRegistryEndpointSystemAssignedManagedIdentitySettingsPtrOutput() RegistryEndpointSystemAssignedManagedIdentitySettingsPtrOutput {
	return i.ToRegistryEndpointSystemAssignedManagedIdentitySettingsPtrOutputWithContext(context.Background())
}

func (i RegistryEndpointSystemAssignedManagedIdentitySettingsArgs) ToRegistryEndpointSystemAssignedManagedIdentitySettingsPtrOutputWithContext(ctx context.Context) RegistryEndpointSystemAssignedManagedIdentitySettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegistryEndpointSystemAssignedManagedIdentitySettingsOutput).ToRegistryEndpointSystemAssignedManagedIdentitySettingsPtrOutputWithContext(ctx)
}

// RegistryEndpointSystemAssignedManagedIdentitySettingsPtrInput is an input type that accepts RegistryEndpointSystemAssignedManagedIdentitySettingsArgs, RegistryEndpointSystemAssignedManagedIdentitySettingsPtr and RegistryEndpointSystemAssignedManagedIdentitySettingsPtrOutput values.
// You can construct a concrete instance of `RegistryEndpointSystemAssignedManagedIdentitySettingsPtrInput` via:
//
//	        RegistryEndpointSystemAssignedManagedIdentitySettingsArgs{...}
//
//	or:
//
//	        nil
type RegistryEndpointSystemAssignedManagedIdentitySettingsPtrInput interface {
	pulumi.Input

	ToRegistryEndpointSystemAssignedManagedIdentitySettingsPtrOutput() RegistryEndpointSystemAssignedManagedIdentitySettingsPtrOutput
	ToRegistryEndpointSystemAssignedManagedIdentitySettingsPtrOutputWithContext(context.Context) RegistryEndpointSystemAssignedManagedIdentitySettingsPtrOutput
}

type registryEndpointSystemAssignedManagedIdentitySettingsPtrType RegistryEndpointSystemAssignedManagedIdentitySettingsArgs

func RegistryEndpointSystemAssignedManagedIdentitySettingsPtr(v *RegistryEndpointSystemAssignedManagedIdentitySettingsArgs) RegistryEndpointSystemAssignedManagedIdentitySettingsPtrInput {
	return (*registryEndpointSystemAssignedManagedIdentitySettingsPtrType)(v)
}

func (*registryEndpointSystemAssignedManagedIdentitySettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RegistryEndpointSystemAssignedManagedIdentitySettings)(nil)).Elem()
}

func (i *registryEndpointSystemAssignedManagedIdentitySettingsPtrType) ToRegistryEndpointSystemAssignedManagedIdentitySettingsPtrOutput() RegistryEndpointSystemAssignedManagedIdentitySettingsPtrOutput {
	return i.ToRegistryEndpointSystemAssignedManagedIdentitySettingsPtrOutputWithContext(context.Background())
}

func (i *registryEndpointSystemAssignedManagedIdentitySettingsPtrType) ToRegistryEndpointSystemAssignedManagedIdentitySettingsPtrOutputWithContext(ctx context.Context) RegistryEndpointSystemAssignedManagedIdentitySettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegistryEndpointSystemAssignedManagedIdentitySettingsPtrOutput)
}

// System assigned managed identity properties
type RegistryEndpointSystemAssignedManagedIdentitySettingsOutput struct{ *pulumi.OutputState }

func (RegistryEndpointSystemAssignedManagedIdentitySettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RegistryEndpointSystemAssignedManagedIdentitySettings)(nil)).Elem()
}

func (o RegistryEndpointSystemAssignedManagedIdentitySettingsOutput) ToRegistryEndpointSystemAssignedManagedIdentitySettingsOutput() RegistryEndpointSystemAssignedManagedIdentitySettingsOutput {
	return o
}

func (o RegistryEndpointSystemAssignedManagedIdentitySettingsOutput) ToRegistryEndpointSystemAssignedManagedIdentitySettingsOutputWithContext(ctx context.Context) RegistryEndpointSystemAssignedManagedIdentitySettingsOutput {
	return o
}

func (o RegistryEndpointSystemAssignedManagedIdentitySettingsOutput) ToRegistryEndpointSystemAssignedManagedIdentitySettingsPtrOutput() RegistryEndpointSystemAssignedManagedIdentitySettingsPtrOutput {
	return o.ToRegistryEndpointSystemAssignedManagedIdentitySettingsPtrOutputWithContext(context.Background())
}

func (o RegistryEndpointSystemAssignedManagedIdentitySettingsOutput) ToRegistryEndpointSystemAssignedManagedIdentitySettingsPtrOutputWithContext(ctx context.Context) RegistryEndpointSystemAssignedManagedIdentitySettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RegistryEndpointSystemAssignedManagedIdentitySettings) *RegistryEndpointSystemAssignedManagedIdentitySettings {
		return &v
	}).(RegistryEndpointSystemAssignedManagedIdentitySettingsPtrOutput)
}

// Audience of the service to authenticate against. Optional; defaults to the audience for Service host configuration.
func (o RegistryEndpointSystemAssignedManagedIdentitySettingsOutput) Audience() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RegistryEndpointSystemAssignedManagedIdentitySettings) *string { return v.Audience }).(pulumi.StringPtrOutput)
}

type RegistryEndpointSystemAssignedManagedIdentitySettingsPtrOutput struct{ *pulumi.OutputState }

func (RegistryEndpointSystemAssignedManagedIdentitySettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RegistryEndpointSystemAssignedManagedIdentitySettings)(nil)).Elem()
}

func (o RegistryEndpointSystemAssignedManagedIdentitySettingsPtrOutput) ToRegistryEndpointSystemAssignedManagedIdentitySettingsPtrOutput() RegistryEndpointSystemAssignedManagedIdentitySettingsPtrOutput {
	return o
}

func (o RegistryEndpointSystemAssignedManagedIdentitySettingsPtrOutput) ToRegistryEndpointSystemAssignedManagedIdentitySettingsPtrOutputWithContext(ctx context.Context) RegistryEndpointSystemAssignedManagedIdentitySettingsPtrOutput {
	return o
}

func (o RegistryEndpointSystemAssignedManagedIdentitySettingsPtrOutput) Elem() RegistryEndpointSystemAssignedManagedIdentitySettingsOutput {
	return o.ApplyT(func(v *RegistryEndpointSystemAssignedManagedIdentitySettings) RegistryEndpointSystemAssignedManagedIdentitySettings {
		if v != nil {
			return *v
		}
		var ret RegistryEndpointSystemAssignedManagedIdentitySettings
		return ret
	}).(RegistryEndpointSystemAssignedManagedIdentitySettingsOutput)
}

// Audience of the service to authenticate against. Optional; defaults to the audience for Service host configuration.
func (o RegistryEndpointSystemAssignedManagedIdentitySettingsPtrOutput) Audience() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RegistryEndpointSystemAssignedManagedIdentitySettings) *string {
		if v == nil {
			return nil
		}
		return v.Audience
	}).(pulumi.StringPtrOutput)
}

// System assigned managed identity properties
type RegistryEndpointSystemAssignedManagedIdentitySettingsResponse struct {
	// Audience of the service to authenticate against. Optional; defaults to the audience for Service host configuration.
	Audience *string `pulumi:"audience"`
}

// System assigned managed identity properties
type RegistryEndpointSystemAssignedManagedIdentitySettingsResponseOutput struct{ *pulumi.OutputState }

func (RegistryEndpointSystemAssignedManagedIdentitySettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RegistryEndpointSystemAssignedManagedIdentitySettingsResponse)(nil)).Elem()
}

func (o RegistryEndpointSystemAssignedManagedIdentitySettingsResponseOutput) ToRegistryEndpointSystemAssignedManagedIdentitySettingsResponseOutput() RegistryEndpointSystemAssignedManagedIdentitySettingsResponseOutput {
	return o
}

func (o RegistryEndpointSystemAssignedManagedIdentitySettingsResponseOutput) ToRegistryEndpointSystemAssignedManagedIdentitySettingsResponseOutputWithContext(ctx context.Context) RegistryEndpointSystemAssignedManagedIdentitySettingsResponseOutput {
	return o
}

// Audience of the service to authenticate against. Optional; defaults to the audience for Service host configuration.
func (o RegistryEndpointSystemAssignedManagedIdentitySettingsResponseOutput) Audience() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RegistryEndpointSystemAssignedManagedIdentitySettingsResponse) *string { return v.Audience }).(pulumi.StringPtrOutput)
}

// RegistryEndpointTrustedSettings properties
type RegistryEndpointTrustedSettings struct {
	// The trust properties for the registry endpoint.
	TrustedSigningKeys interface{} `pulumi:"trustedSigningKeys"`
}

// RegistryEndpointTrustedSettingsInput is an input type that accepts RegistryEndpointTrustedSettingsArgs and RegistryEndpointTrustedSettingsOutput values.
// You can construct a concrete instance of `RegistryEndpointTrustedSettingsInput` via:
//
//	RegistryEndpointTrustedSettingsArgs{...}
type RegistryEndpointTrustedSettingsInput interface {
	pulumi.Input

	ToRegistryEndpointTrustedSettingsOutput() RegistryEndpointTrustedSettingsOutput
	ToRegistryEndpointTrustedSettingsOutputWithContext(context.Context) RegistryEndpointTrustedSettingsOutput
}

// RegistryEndpointTrustedSettings properties
type RegistryEndpointTrustedSettingsArgs struct {
	// The trust properties for the registry endpoint.
	TrustedSigningKeys pulumi.Input `pulumi:"trustedSigningKeys"`
}

func (RegistryEndpointTrustedSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RegistryEndpointTrustedSettings)(nil)).Elem()
}

func (i RegistryEndpointTrustedSettingsArgs) ToRegistryEndpointTrustedSettingsOutput() RegistryEndpointTrustedSettingsOutput {
	return i.ToRegistryEndpointTrustedSettingsOutputWithContext(context.Background())
}

func (i RegistryEndpointTrustedSettingsArgs) ToRegistryEndpointTrustedSettingsOutputWithContext(ctx context.Context) RegistryEndpointTrustedSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegistryEndpointTrustedSettingsOutput)
}

func (i RegistryEndpointTrustedSettingsArgs) ToRegistryEndpointTrustedSettingsPtrOutput() RegistryEndpointTrustedSettingsPtrOutput {
	return i.ToRegistryEndpointTrustedSettingsPtrOutputWithContext(context.Background())
}

func (i RegistryEndpointTrustedSettingsArgs) ToRegistryEndpointTrustedSettingsPtrOutputWithContext(ctx context.Context) RegistryEndpointTrustedSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegistryEndpointTrustedSettingsOutput).ToRegistryEndpointTrustedSettingsPtrOutputWithContext(ctx)
}

// RegistryEndpointTrustedSettingsPtrInput is an input type that accepts RegistryEndpointTrustedSettingsArgs, RegistryEndpointTrustedSettingsPtr and RegistryEndpointTrustedSettingsPtrOutput values.
// You can construct a concrete instance of `RegistryEndpointTrustedSettingsPtrInput` via:
//
//	        RegistryEndpointTrustedSettingsArgs{...}
//
//	or:
//
//	        nil
type RegistryEndpointTrustedSettingsPtrInput interface {
	pulumi.Input

	ToRegistryEndpointTrustedSettingsPtrOutput() RegistryEndpointTrustedSettingsPtrOutput
	ToRegistryEndpointTrustedSettingsPtrOutputWithContext(context.Context) RegistryEndpointTrustedSettingsPtrOutput
}

type registryEndpointTrustedSettingsPtrType RegistryEndpointTrustedSettingsArgs

func RegistryEndpointTrustedSettingsPtr(v *RegistryEndpointTrustedSettingsArgs) RegistryEndpointTrustedSettingsPtrInput {
	return (*registryEndpointTrustedSettingsPtrType)(v)
}

func (*registryEndpointTrustedSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RegistryEndpointTrustedSettings)(nil)).Elem()
}

func (i *registryEndpointTrustedSettingsPtrType) ToRegistryEndpointTrustedSettingsPtrOutput() RegistryEndpointTrustedSettingsPtrOutput {
	return i.ToRegistryEndpointTrustedSettingsPtrOutputWithContext(context.Background())
}

func (i *registryEndpointTrustedSettingsPtrType) ToRegistryEndpointTrustedSettingsPtrOutputWithContext(ctx context.Context) RegistryEndpointTrustedSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegistryEndpointTrustedSettingsPtrOutput)
}

// RegistryEndpointTrustedSettings properties
type RegistryEndpointTrustedSettingsOutput struct{ *pulumi.OutputState }

func (RegistryEndpointTrustedSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RegistryEndpointTrustedSettings)(nil)).Elem()
}

func (o RegistryEndpointTrustedSettingsOutput) ToRegistryEndpointTrustedSettingsOutput() RegistryEndpointTrustedSettingsOutput {
	return o
}

func (o RegistryEndpointTrustedSettingsOutput) ToRegistryEndpointTrustedSettingsOutputWithContext(ctx context.Context) RegistryEndpointTrustedSettingsOutput {
	return o
}

func (o RegistryEndpointTrustedSettingsOutput) ToRegistryEndpointTrustedSettingsPtrOutput() RegistryEndpointTrustedSettingsPtrOutput {
	return o.ToRegistryEndpointTrustedSettingsPtrOutputWithContext(context.Background())
}

func (o RegistryEndpointTrustedSettingsOutput) ToRegistryEndpointTrustedSettingsPtrOutputWithContext(ctx context.Context) RegistryEndpointTrustedSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RegistryEndpointTrustedSettings) *RegistryEndpointTrustedSettings {
		return &v
	}).(RegistryEndpointTrustedSettingsPtrOutput)
}

// The trust properties for the registry endpoint.
func (o RegistryEndpointTrustedSettingsOutput) TrustedSigningKeys() pulumi.AnyOutput {
	return o.ApplyT(func(v RegistryEndpointTrustedSettings) interface{} { return v.TrustedSigningKeys }).(pulumi.AnyOutput)
}

type RegistryEndpointTrustedSettingsPtrOutput struct{ *pulumi.OutputState }

func (RegistryEndpointTrustedSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RegistryEndpointTrustedSettings)(nil)).Elem()
}

func (o RegistryEndpointTrustedSettingsPtrOutput) ToRegistryEndpointTrustedSettingsPtrOutput() RegistryEndpointTrustedSettingsPtrOutput {
	return o
}

func (o RegistryEndpointTrustedSettingsPtrOutput) ToRegistryEndpointTrustedSettingsPtrOutputWithContext(ctx context.Context) RegistryEndpointTrustedSettingsPtrOutput {
	return o
}

func (o RegistryEndpointTrustedSettingsPtrOutput) Elem() RegistryEndpointTrustedSettingsOutput {
	return o.ApplyT(func(v *RegistryEndpointTrustedSettings) RegistryEndpointTrustedSettings {
		if v != nil {
			return *v
		}
		var ret RegistryEndpointTrustedSettings
		return ret
	}).(RegistryEndpointTrustedSettingsOutput)
}

// The trust properties for the registry endpoint.
func (o RegistryEndpointTrustedSettingsPtrOutput) TrustedSigningKeys() pulumi.AnyOutput {
	return o.ApplyT(func(v *RegistryEndpointTrustedSettings) interface{} {
		if v == nil {
			return nil
		}
		return v.TrustedSigningKeys
	}).(pulumi.AnyOutput)
}

// RegistryEndpointTrustedSettings properties
type RegistryEndpointTrustedSettingsResponse struct {
	// The trust properties for the registry endpoint.
	TrustedSigningKeys interface{} `pulumi:"trustedSigningKeys"`
}

// RegistryEndpointTrustedSettings properties
type RegistryEndpointTrustedSettingsResponseOutput struct{ *pulumi.OutputState }

func (RegistryEndpointTrustedSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RegistryEndpointTrustedSettingsResponse)(nil)).Elem()
}

func (o RegistryEndpointTrustedSettingsResponseOutput) ToRegistryEndpointTrustedSettingsResponseOutput() RegistryEndpointTrustedSettingsResponseOutput {
	return o
}

func (o RegistryEndpointTrustedSettingsResponseOutput) ToRegistryEndpointTrustedSettingsResponseOutputWithContext(ctx context.Context) RegistryEndpointTrustedSettingsResponseOutput {
	return o
}

// The trust properties for the registry endpoint.
func (o RegistryEndpointTrustedSettingsResponseOutput) TrustedSigningKeys() pulumi.AnyOutput {
	return o.ApplyT(func(v RegistryEndpointTrustedSettingsResponse) interface{} { return v.TrustedSigningKeys }).(pulumi.AnyOutput)
}

type RegistryEndpointTrustedSettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (RegistryEndpointTrustedSettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RegistryEndpointTrustedSettingsResponse)(nil)).Elem()
}

func (o RegistryEndpointTrustedSettingsResponsePtrOutput) ToRegistryEndpointTrustedSettingsResponsePtrOutput() RegistryEndpointTrustedSettingsResponsePtrOutput {
	return o
}

func (o RegistryEndpointTrustedSettingsResponsePtrOutput) ToRegistryEndpointTrustedSettingsResponsePtrOutputWithContext(ctx context.Context) RegistryEndpointTrustedSettingsResponsePtrOutput {
	return o
}

func (o RegistryEndpointTrustedSettingsResponsePtrOutput) Elem() RegistryEndpointTrustedSettingsResponseOutput {
	return o.ApplyT(func(v *RegistryEndpointTrustedSettingsResponse) RegistryEndpointTrustedSettingsResponse {
		if v != nil {
			return *v
		}
		var ret RegistryEndpointTrustedSettingsResponse
		return ret
	}).(RegistryEndpointTrustedSettingsResponseOutput)
}

// The trust properties for the registry endpoint.
func (o RegistryEndpointTrustedSettingsResponsePtrOutput) TrustedSigningKeys() pulumi.AnyOutput {
	return o.ApplyT(func(v *RegistryEndpointTrustedSettingsResponse) interface{} {
		if v == nil {
			return nil
		}
		return v.TrustedSigningKeys
	}).(pulumi.AnyOutput)
}

// Settings for RegistryEndpoint trust provided through a configmap.
type RegistryEndpointTrustedSigningKeyConfigMap struct {
	// The name of the configmap.
	ConfigMapRef string `pulumi:"configMapRef"`
	// RegistryEndpointTrustedSigningKeyType values
	// Expected value is 'ConfigMap'.
	Type string `pulumi:"type"`
}

// RegistryEndpointTrustedSigningKeyConfigMapInput is an input type that accepts RegistryEndpointTrustedSigningKeyConfigMap and RegistryEndpointTrustedSigningKeyConfigMapOutput values.
// You can construct a concrete instance of `RegistryEndpointTrustedSigningKeyConfigMapInput` via:
//
//	RegistryEndpointTrustedSigningKeyConfigMap{ "key": RegistryEndpointTrustedSigningKeyConfigArgs{...} }
type RegistryEndpointTrustedSigningKeyConfigMapInput interface {
	pulumi.Input

	ToRegistryEndpointTrustedSigningKeyConfigMapOutput() RegistryEndpointTrustedSigningKeyConfigMapOutput
	ToRegistryEndpointTrustedSigningKeyConfigMapOutputWithContext(context.Context) RegistryEndpointTrustedSigningKeyConfigMapOutput
}

// Settings for RegistryEndpoint trust provided through a configmap.
type RegistryEndpointTrustedSigningKeyConfigMapArgs struct {
	// The name of the configmap.
	ConfigMapRef pulumi.StringInput `pulumi:"configMapRef"`
	// RegistryEndpointTrustedSigningKeyType values
	// Expected value is 'ConfigMap'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (RegistryEndpointTrustedSigningKeyConfigMapArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RegistryEndpointTrustedSigningKeyConfigMap)(nil)).Elem()
}

func (i RegistryEndpointTrustedSigningKeyConfigMapArgs) ToRegistryEndpointTrustedSigningKeyConfigMapOutput() RegistryEndpointTrustedSigningKeyConfigMapOutput {
	return i.ToRegistryEndpointTrustedSigningKeyConfigMapOutputWithContext(context.Background())
}

func (i RegistryEndpointTrustedSigningKeyConfigMapArgs) ToRegistryEndpointTrustedSigningKeyConfigMapOutputWithContext(ctx context.Context) RegistryEndpointTrustedSigningKeyConfigMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegistryEndpointTrustedSigningKeyConfigMapOutput)
}

func (i RegistryEndpointTrustedSigningKeyConfigMapArgs) ToRegistryEndpointTrustedSigningKeyConfigMapPtrOutput() RegistryEndpointTrustedSigningKeyConfigMapPtrOutput {
	return i.ToRegistryEndpointTrustedSigningKeyConfigMapPtrOutputWithContext(context.Background())
}

func (i RegistryEndpointTrustedSigningKeyConfigMapArgs) ToRegistryEndpointTrustedSigningKeyConfigMapPtrOutputWithContext(ctx context.Context) RegistryEndpointTrustedSigningKeyConfigMapPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegistryEndpointTrustedSigningKeyConfigMapOutput).ToRegistryEndpointTrustedSigningKeyConfigMapPtrOutputWithContext(ctx)
}

// RegistryEndpointTrustedSigningKeyConfigMapPtrInput is an input type that accepts RegistryEndpointTrustedSigningKeyConfigMapArgs, RegistryEndpointTrustedSigningKeyConfigMapPtr and RegistryEndpointTrustedSigningKeyConfigMapPtrOutput values.
// You can construct a concrete instance of `RegistryEndpointTrustedSigningKeyConfigMapPtrInput` via:
//
//	        RegistryEndpointTrustedSigningKeyConfigMapArgs{...}
//
//	or:
//
//	        nil
type RegistryEndpointTrustedSigningKeyConfigMapPtrInput interface {
	pulumi.Input

	ToRegistryEndpointTrustedSigningKeyConfigMapPtrOutput() RegistryEndpointTrustedSigningKeyConfigMapPtrOutput
	ToRegistryEndpointTrustedSigningKeyConfigMapPtrOutputWithContext(context.Context) RegistryEndpointTrustedSigningKeyConfigMapPtrOutput
}

type registryEndpointTrustedSigningKeyConfigMapPtrType RegistryEndpointTrustedSigningKeyConfigMapArgs

func RegistryEndpointTrustedSigningKeyConfigMapPtr(v *RegistryEndpointTrustedSigningKeyConfigMapArgs) RegistryEndpointTrustedSigningKeyConfigMapPtrInput {
	return (*registryEndpointTrustedSigningKeyConfigMapPtrType)(v)
}

func (*registryEndpointTrustedSigningKeyConfigMapPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RegistryEndpointTrustedSigningKeyConfigMap)(nil)).Elem()
}

func (i *registryEndpointTrustedSigningKeyConfigMapPtrType) ToRegistryEndpointTrustedSigningKeyConfigMapPtrOutput() RegistryEndpointTrustedSigningKeyConfigMapPtrOutput {
	return i.ToRegistryEndpointTrustedSigningKeyConfigMapPtrOutputWithContext(context.Background())
}

func (i *registryEndpointTrustedSigningKeyConfigMapPtrType) ToRegistryEndpointTrustedSigningKeyConfigMapPtrOutputWithContext(ctx context.Context) RegistryEndpointTrustedSigningKeyConfigMapPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegistryEndpointTrustedSigningKeyConfigMapPtrOutput)
}

// Settings for RegistryEndpoint trust provided through a configmap.
type RegistryEndpointTrustedSigningKeyConfigMapOutput struct{ *pulumi.OutputState }

func (RegistryEndpointTrustedSigningKeyConfigMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RegistryEndpointTrustedSigningKeyConfigMap)(nil)).Elem()
}

func (o RegistryEndpointTrustedSigningKeyConfigMapOutput) ToRegistryEndpointTrustedSigningKeyConfigMapOutput() RegistryEndpointTrustedSigningKeyConfigMapOutput {
	return o
}

func (o RegistryEndpointTrustedSigningKeyConfigMapOutput) ToRegistryEndpointTrustedSigningKeyConfigMapOutputWithContext(ctx context.Context) RegistryEndpointTrustedSigningKeyConfigMapOutput {
	return o
}

func (o RegistryEndpointTrustedSigningKeyConfigMapOutput) ToRegistryEndpointTrustedSigningKeyConfigMapPtrOutput() RegistryEndpointTrustedSigningKeyConfigMapPtrOutput {
	return o.ToRegistryEndpointTrustedSigningKeyConfigMapPtrOutputWithContext(context.Background())
}

func (o RegistryEndpointTrustedSigningKeyConfigMapOutput) ToRegistryEndpointTrustedSigningKeyConfigMapPtrOutputWithContext(ctx context.Context) RegistryEndpointTrustedSigningKeyConfigMapPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RegistryEndpointTrustedSigningKeyConfigMap) *RegistryEndpointTrustedSigningKeyConfigMap {
		return &v
	}).(RegistryEndpointTrustedSigningKeyConfigMapPtrOutput)
}

// The name of the configmap.
func (o RegistryEndpointTrustedSigningKeyConfigMapOutput) ConfigMapRef() pulumi.StringOutput {
	return o.ApplyT(func(v RegistryEndpointTrustedSigningKeyConfigMap) string { return v.ConfigMapRef }).(pulumi.StringOutput)
}

// RegistryEndpointTrustedSigningKeyType values
// Expected value is 'ConfigMap'.
func (o RegistryEndpointTrustedSigningKeyConfigMapOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v RegistryEndpointTrustedSigningKeyConfigMap) string { return v.Type }).(pulumi.StringOutput)
}

type RegistryEndpointTrustedSigningKeyConfigMapPtrOutput struct{ *pulumi.OutputState }

func (RegistryEndpointTrustedSigningKeyConfigMapPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RegistryEndpointTrustedSigningKeyConfigMap)(nil)).Elem()
}

func (o RegistryEndpointTrustedSigningKeyConfigMapPtrOutput) ToRegistryEndpointTrustedSigningKeyConfigMapPtrOutput() RegistryEndpointTrustedSigningKeyConfigMapPtrOutput {
	return o
}

func (o RegistryEndpointTrustedSigningKeyConfigMapPtrOutput) ToRegistryEndpointTrustedSigningKeyConfigMapPtrOutputWithContext(ctx context.Context) RegistryEndpointTrustedSigningKeyConfigMapPtrOutput {
	return o
}

func (o RegistryEndpointTrustedSigningKeyConfigMapPtrOutput) Elem() RegistryEndpointTrustedSigningKeyConfigMapOutput {
	return o.ApplyT(func(v *RegistryEndpointTrustedSigningKeyConfigMap) RegistryEndpointTrustedSigningKeyConfigMap {
		if v != nil {
			return *v
		}
		var ret RegistryEndpointTrustedSigningKeyConfigMap
		return ret
	}).(RegistryEndpointTrustedSigningKeyConfigMapOutput)
}

// The name of the configmap.
func (o RegistryEndpointTrustedSigningKeyConfigMapPtrOutput) ConfigMapRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RegistryEndpointTrustedSigningKeyConfigMap) *string {
		if v == nil {
			return nil
		}
		return &v.ConfigMapRef
	}).(pulumi.StringPtrOutput)
}

// RegistryEndpointTrustedSigningKeyType values
// Expected value is 'ConfigMap'.
func (o RegistryEndpointTrustedSigningKeyConfigMapPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RegistryEndpointTrustedSigningKeyConfigMap) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// Settings for RegistryEndpoint trust provided through a configmap.
type RegistryEndpointTrustedSigningKeyConfigMapResponse struct {
	// The name of the configmap.
	ConfigMapRef string `pulumi:"configMapRef"`
	// RegistryEndpointTrustedSigningKeyType values
	// Expected value is 'ConfigMap'.
	Type string `pulumi:"type"`
}

// Settings for RegistryEndpoint trust provided through a configmap.
type RegistryEndpointTrustedSigningKeyConfigMapResponseOutput struct{ *pulumi.OutputState }

func (RegistryEndpointTrustedSigningKeyConfigMapResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RegistryEndpointTrustedSigningKeyConfigMapResponse)(nil)).Elem()
}

func (o RegistryEndpointTrustedSigningKeyConfigMapResponseOutput) ToRegistryEndpointTrustedSigningKeyConfigMapResponseOutput() RegistryEndpointTrustedSigningKeyConfigMapResponseOutput {
	return o
}

func (o RegistryEndpointTrustedSigningKeyConfigMapResponseOutput) ToRegistryEndpointTrustedSigningKeyConfigMapResponseOutputWithContext(ctx context.Context) RegistryEndpointTrustedSigningKeyConfigMapResponseOutput {
	return o
}

// The name of the configmap.
func (o RegistryEndpointTrustedSigningKeyConfigMapResponseOutput) ConfigMapRef() pulumi.StringOutput {
	return o.ApplyT(func(v RegistryEndpointTrustedSigningKeyConfigMapResponse) string { return v.ConfigMapRef }).(pulumi.StringOutput)
}

// RegistryEndpointTrustedSigningKeyType values
// Expected value is 'ConfigMap'.
func (o RegistryEndpointTrustedSigningKeyConfigMapResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v RegistryEndpointTrustedSigningKeyConfigMapResponse) string { return v.Type }).(pulumi.StringOutput)
}

type RegistryEndpointTrustedSigningKeyConfigMapResponsePtrOutput struct{ *pulumi.OutputState }

func (RegistryEndpointTrustedSigningKeyConfigMapResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RegistryEndpointTrustedSigningKeyConfigMapResponse)(nil)).Elem()
}

func (o RegistryEndpointTrustedSigningKeyConfigMapResponsePtrOutput) ToRegistryEndpointTrustedSigningKeyConfigMapResponsePtrOutput() RegistryEndpointTrustedSigningKeyConfigMapResponsePtrOutput {
	return o
}

func (o RegistryEndpointTrustedSigningKeyConfigMapResponsePtrOutput) ToRegistryEndpointTrustedSigningKeyConfigMapResponsePtrOutputWithContext(ctx context.Context) RegistryEndpointTrustedSigningKeyConfigMapResponsePtrOutput {
	return o
}

func (o RegistryEndpointTrustedSigningKeyConfigMapResponsePtrOutput) Elem() RegistryEndpointTrustedSigningKeyConfigMapResponseOutput {
	return o.ApplyT(func(v *RegistryEndpointTrustedSigningKeyConfigMapResponse) RegistryEndpointTrustedSigningKeyConfigMapResponse {
		if v != nil {
			return *v
		}
		var ret RegistryEndpointTrustedSigningKeyConfigMapResponse
		return ret
	}).(RegistryEndpointTrustedSigningKeyConfigMapResponseOutput)
}

// The name of the configmap.
func (o RegistryEndpointTrustedSigningKeyConfigMapResponsePtrOutput) ConfigMapRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RegistryEndpointTrustedSigningKeyConfigMapResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ConfigMapRef
	}).(pulumi.StringPtrOutput)
}

// RegistryEndpointTrustedSigningKeyType values
// Expected value is 'ConfigMap'.
func (o RegistryEndpointTrustedSigningKeyConfigMapResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RegistryEndpointTrustedSigningKeyConfigMapResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// Settings for RegistryEndpoint trust provided through a secret.
type RegistryEndpointTrustedSigningKeySecret struct {
	// The name of the secret.
	SecretRef string `pulumi:"secretRef"`
	// RegistryEndpointTrustedSigningKeyType values
	// Expected value is 'Secret'.
	Type string `pulumi:"type"`
}

// RegistryEndpointTrustedSigningKeySecretInput is an input type that accepts RegistryEndpointTrustedSigningKeySecretArgs and RegistryEndpointTrustedSigningKeySecretOutput values.
// You can construct a concrete instance of `RegistryEndpointTrustedSigningKeySecretInput` via:
//
//	RegistryEndpointTrustedSigningKeySecretArgs{...}
type RegistryEndpointTrustedSigningKeySecretInput interface {
	pulumi.Input

	ToRegistryEndpointTrustedSigningKeySecretOutput() RegistryEndpointTrustedSigningKeySecretOutput
	ToRegistryEndpointTrustedSigningKeySecretOutputWithContext(context.Context) RegistryEndpointTrustedSigningKeySecretOutput
}

// Settings for RegistryEndpoint trust provided through a secret.
type RegistryEndpointTrustedSigningKeySecretArgs struct {
	// The name of the secret.
	SecretRef pulumi.StringInput `pulumi:"secretRef"`
	// RegistryEndpointTrustedSigningKeyType values
	// Expected value is 'Secret'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (RegistryEndpointTrustedSigningKeySecretArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RegistryEndpointTrustedSigningKeySecret)(nil)).Elem()
}

func (i RegistryEndpointTrustedSigningKeySecretArgs) ToRegistryEndpointTrustedSigningKeySecretOutput() RegistryEndpointTrustedSigningKeySecretOutput {
	return i.ToRegistryEndpointTrustedSigningKeySecretOutputWithContext(context.Background())
}

func (i RegistryEndpointTrustedSigningKeySecretArgs) ToRegistryEndpointTrustedSigningKeySecretOutputWithContext(ctx context.Context) RegistryEndpointTrustedSigningKeySecretOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegistryEndpointTrustedSigningKeySecretOutput)
}

func (i RegistryEndpointTrustedSigningKeySecretArgs) ToRegistryEndpointTrustedSigningKeySecretPtrOutput() RegistryEndpointTrustedSigningKeySecretPtrOutput {
	return i.ToRegistryEndpointTrustedSigningKeySecretPtrOutputWithContext(context.Background())
}

func (i RegistryEndpointTrustedSigningKeySecretArgs) ToRegistryEndpointTrustedSigningKeySecretPtrOutputWithContext(ctx context.Context) RegistryEndpointTrustedSigningKeySecretPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegistryEndpointTrustedSigningKeySecretOutput).ToRegistryEndpointTrustedSigningKeySecretPtrOutputWithContext(ctx)
}

// RegistryEndpointTrustedSigningKeySecretPtrInput is an input type that accepts RegistryEndpointTrustedSigningKeySecretArgs, RegistryEndpointTrustedSigningKeySecretPtr and RegistryEndpointTrustedSigningKeySecretPtrOutput values.
// You can construct a concrete instance of `RegistryEndpointTrustedSigningKeySecretPtrInput` via:
//
//	        RegistryEndpointTrustedSigningKeySecretArgs{...}
//
//	or:
//
//	        nil
type RegistryEndpointTrustedSigningKeySecretPtrInput interface {
	pulumi.Input

	ToRegistryEndpointTrustedSigningKeySecretPtrOutput() RegistryEndpointTrustedSigningKeySecretPtrOutput
	ToRegistryEndpointTrustedSigningKeySecretPtrOutputWithContext(context.Context) RegistryEndpointTrustedSigningKeySecretPtrOutput
}

type registryEndpointTrustedSigningKeySecretPtrType RegistryEndpointTrustedSigningKeySecretArgs

func RegistryEndpointTrustedSigningKeySecretPtr(v *RegistryEndpointTrustedSigningKeySecretArgs) RegistryEndpointTrustedSigningKeySecretPtrInput {
	return (*registryEndpointTrustedSigningKeySecretPtrType)(v)
}

func (*registryEndpointTrustedSigningKeySecretPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RegistryEndpointTrustedSigningKeySecret)(nil)).Elem()
}

func (i *registryEndpointTrustedSigningKeySecretPtrType) ToRegistryEndpointTrustedSigningKeySecretPtrOutput() RegistryEndpointTrustedSigningKeySecretPtrOutput {
	return i.ToRegistryEndpointTrustedSigningKeySecretPtrOutputWithContext(context.Background())
}

func (i *registryEndpointTrustedSigningKeySecretPtrType) ToRegistryEndpointTrustedSigningKeySecretPtrOutputWithContext(ctx context.Context) RegistryEndpointTrustedSigningKeySecretPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegistryEndpointTrustedSigningKeySecretPtrOutput)
}

// Settings for RegistryEndpoint trust provided through a secret.
type RegistryEndpointTrustedSigningKeySecretOutput struct{ *pulumi.OutputState }

func (RegistryEndpointTrustedSigningKeySecretOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RegistryEndpointTrustedSigningKeySecret)(nil)).Elem()
}

func (o RegistryEndpointTrustedSigningKeySecretOutput) ToRegistryEndpointTrustedSigningKeySecretOutput() RegistryEndpointTrustedSigningKeySecretOutput {
	return o
}

func (o RegistryEndpointTrustedSigningKeySecretOutput) ToRegistryEndpointTrustedSigningKeySecretOutputWithContext(ctx context.Context) RegistryEndpointTrustedSigningKeySecretOutput {
	return o
}

func (o RegistryEndpointTrustedSigningKeySecretOutput) ToRegistryEndpointTrustedSigningKeySecretPtrOutput() RegistryEndpointTrustedSigningKeySecretPtrOutput {
	return o.ToRegistryEndpointTrustedSigningKeySecretPtrOutputWithContext(context.Background())
}

func (o RegistryEndpointTrustedSigningKeySecretOutput) ToRegistryEndpointTrustedSigningKeySecretPtrOutputWithContext(ctx context.Context) RegistryEndpointTrustedSigningKeySecretPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RegistryEndpointTrustedSigningKeySecret) *RegistryEndpointTrustedSigningKeySecret {
		return &v
	}).(RegistryEndpointTrustedSigningKeySecretPtrOutput)
}

// The name of the secret.
func (o RegistryEndpointTrustedSigningKeySecretOutput) SecretRef() pulumi.StringOutput {
	return o.ApplyT(func(v RegistryEndpointTrustedSigningKeySecret) string { return v.SecretRef }).(pulumi.StringOutput)
}

// RegistryEndpointTrustedSigningKeyType values
// Expected value is 'Secret'.
func (o RegistryEndpointTrustedSigningKeySecretOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v RegistryEndpointTrustedSigningKeySecret) string { return v.Type }).(pulumi.StringOutput)
}

type RegistryEndpointTrustedSigningKeySecretPtrOutput struct{ *pulumi.OutputState }

func (RegistryEndpointTrustedSigningKeySecretPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RegistryEndpointTrustedSigningKeySecret)(nil)).Elem()
}

func (o RegistryEndpointTrustedSigningKeySecretPtrOutput) ToRegistryEndpointTrustedSigningKeySecretPtrOutput() RegistryEndpointTrustedSigningKeySecretPtrOutput {
	return o
}

func (o RegistryEndpointTrustedSigningKeySecretPtrOutput) ToRegistryEndpointTrustedSigningKeySecretPtrOutputWithContext(ctx context.Context) RegistryEndpointTrustedSigningKeySecretPtrOutput {
	return o
}

func (o RegistryEndpointTrustedSigningKeySecretPtrOutput) Elem() RegistryEndpointTrustedSigningKeySecretOutput {
	return o.ApplyT(func(v *RegistryEndpointTrustedSigningKeySecret) RegistryEndpointTrustedSigningKeySecret {
		if v != nil {
			return *v
		}
		var ret RegistryEndpointTrustedSigningKeySecret
		return ret
	}).(RegistryEndpointTrustedSigningKeySecretOutput)
}

// The name of the secret.
func (o RegistryEndpointTrustedSigningKeySecretPtrOutput) SecretRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RegistryEndpointTrustedSigningKeySecret) *string {
		if v == nil {
			return nil
		}
		return &v.SecretRef
	}).(pulumi.StringPtrOutput)
}

// RegistryEndpointTrustedSigningKeyType values
// Expected value is 'Secret'.
func (o RegistryEndpointTrustedSigningKeySecretPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RegistryEndpointTrustedSigningKeySecret) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// Settings for RegistryEndpoint trust provided through a secret.
type RegistryEndpointTrustedSigningKeySecretResponse struct {
	// The name of the secret.
	SecretRef string `pulumi:"secretRef"`
	// RegistryEndpointTrustedSigningKeyType values
	// Expected value is 'Secret'.
	Type string `pulumi:"type"`
}

// Settings for RegistryEndpoint trust provided through a secret.
type RegistryEndpointTrustedSigningKeySecretResponseOutput struct{ *pulumi.OutputState }

func (RegistryEndpointTrustedSigningKeySecretResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RegistryEndpointTrustedSigningKeySecretResponse)(nil)).Elem()
}

func (o RegistryEndpointTrustedSigningKeySecretResponseOutput) ToRegistryEndpointTrustedSigningKeySecretResponseOutput() RegistryEndpointTrustedSigningKeySecretResponseOutput {
	return o
}

func (o RegistryEndpointTrustedSigningKeySecretResponseOutput) ToRegistryEndpointTrustedSigningKeySecretResponseOutputWithContext(ctx context.Context) RegistryEndpointTrustedSigningKeySecretResponseOutput {
	return o
}

// The name of the secret.
func (o RegistryEndpointTrustedSigningKeySecretResponseOutput) SecretRef() pulumi.StringOutput {
	return o.ApplyT(func(v RegistryEndpointTrustedSigningKeySecretResponse) string { return v.SecretRef }).(pulumi.StringOutput)
}

// RegistryEndpointTrustedSigningKeyType values
// Expected value is 'Secret'.
func (o RegistryEndpointTrustedSigningKeySecretResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v RegistryEndpointTrustedSigningKeySecretResponse) string { return v.Type }).(pulumi.StringOutput)
}

type RegistryEndpointTrustedSigningKeySecretResponsePtrOutput struct{ *pulumi.OutputState }

func (RegistryEndpointTrustedSigningKeySecretResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RegistryEndpointTrustedSigningKeySecretResponse)(nil)).Elem()
}

func (o RegistryEndpointTrustedSigningKeySecretResponsePtrOutput) ToRegistryEndpointTrustedSigningKeySecretResponsePtrOutput() RegistryEndpointTrustedSigningKeySecretResponsePtrOutput {
	return o
}

func (o RegistryEndpointTrustedSigningKeySecretResponsePtrOutput) ToRegistryEndpointTrustedSigningKeySecretResponsePtrOutputWithContext(ctx context.Context) RegistryEndpointTrustedSigningKeySecretResponsePtrOutput {
	return o
}

func (o RegistryEndpointTrustedSigningKeySecretResponsePtrOutput) Elem() RegistryEndpointTrustedSigningKeySecretResponseOutput {
	return o.ApplyT(func(v *RegistryEndpointTrustedSigningKeySecretResponse) RegistryEndpointTrustedSigningKeySecretResponse {
		if v != nil {
			return *v
		}
		var ret RegistryEndpointTrustedSigningKeySecretResponse
		return ret
	}).(RegistryEndpointTrustedSigningKeySecretResponseOutput)
}

// The name of the secret.
func (o RegistryEndpointTrustedSigningKeySecretResponsePtrOutput) SecretRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RegistryEndpointTrustedSigningKeySecretResponse) *string {
		if v == nil {
			return nil
		}
		return &v.SecretRef
	}).(pulumi.StringPtrOutput)
}

// RegistryEndpointTrustedSigningKeyType values
// Expected value is 'Secret'.
func (o RegistryEndpointTrustedSigningKeySecretResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RegistryEndpointTrustedSigningKeySecretResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// User assigned identity authentication
type RegistryEndpointUserAssignedIdentityAuthentication struct {
	// The authentication method.
	// Expected value is 'UserAssignedManagedIdentity'.
	Method string `pulumi:"method"`
	// User assigned managed identity properties
	UserAssignedManagedIdentitySettings RegistryEndpointUserAssignedManagedIdentitySettings `pulumi:"userAssignedManagedIdentitySettings"`
}

// RegistryEndpointUserAssignedIdentityAuthenticationInput is an input type that accepts RegistryEndpointUserAssignedIdentityAuthenticationArgs and RegistryEndpointUserAssignedIdentityAuthenticationOutput values.
// You can construct a concrete instance of `RegistryEndpointUserAssignedIdentityAuthenticationInput` via:
//
//	RegistryEndpointUserAssignedIdentityAuthenticationArgs{...}
type RegistryEndpointUserAssignedIdentityAuthenticationInput interface {
	pulumi.Input

	ToRegistryEndpointUserAssignedIdentityAuthenticationOutput() RegistryEndpointUserAssignedIdentityAuthenticationOutput
	ToRegistryEndpointUserAssignedIdentityAuthenticationOutputWithContext(context.Context) RegistryEndpointUserAssignedIdentityAuthenticationOutput
}

// User assigned identity authentication
type RegistryEndpointUserAssignedIdentityAuthenticationArgs struct {
	// The authentication method.
	// Expected value is 'UserAssignedManagedIdentity'.
	Method pulumi.StringInput `pulumi:"method"`
	// User assigned managed identity properties
	UserAssignedManagedIdentitySettings RegistryEndpointUserAssignedManagedIdentitySettingsInput `pulumi:"userAssignedManagedIdentitySettings"`
}

func (RegistryEndpointUserAssignedIdentityAuthenticationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RegistryEndpointUserAssignedIdentityAuthentication)(nil)).Elem()
}

func (i RegistryEndpointUserAssignedIdentityAuthenticationArgs) ToRegistryEndpointUserAssignedIdentityAuthenticationOutput() RegistryEndpointUserAssignedIdentityAuthenticationOutput {
	return i.ToRegistryEndpointUserAssignedIdentityAuthenticationOutputWithContext(context.Background())
}

func (i RegistryEndpointUserAssignedIdentityAuthenticationArgs) ToRegistryEndpointUserAssignedIdentityAuthenticationOutputWithContext(ctx context.Context) RegistryEndpointUserAssignedIdentityAuthenticationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegistryEndpointUserAssignedIdentityAuthenticationOutput)
}

func (i RegistryEndpointUserAssignedIdentityAuthenticationArgs) ToRegistryEndpointUserAssignedIdentityAuthenticationPtrOutput() RegistryEndpointUserAssignedIdentityAuthenticationPtrOutput {
	return i.ToRegistryEndpointUserAssignedIdentityAuthenticationPtrOutputWithContext(context.Background())
}

func (i RegistryEndpointUserAssignedIdentityAuthenticationArgs) ToRegistryEndpointUserAssignedIdentityAuthenticationPtrOutputWithContext(ctx context.Context) RegistryEndpointUserAssignedIdentityAuthenticationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegistryEndpointUserAssignedIdentityAuthenticationOutput).ToRegistryEndpointUserAssignedIdentityAuthenticationPtrOutputWithContext(ctx)
}

// RegistryEndpointUserAssignedIdentityAuthenticationPtrInput is an input type that accepts RegistryEndpointUserAssignedIdentityAuthenticationArgs, RegistryEndpointUserAssignedIdentityAuthenticationPtr and RegistryEndpointUserAssignedIdentityAuthenticationPtrOutput values.
// You can construct a concrete instance of `RegistryEndpointUserAssignedIdentityAuthenticationPtrInput` via:
//
//	        RegistryEndpointUserAssignedIdentityAuthenticationArgs{...}
//
//	or:
//
//	        nil
type RegistryEndpointUserAssignedIdentityAuthenticationPtrInput interface {
	pulumi.Input

	ToRegistryEndpointUserAssignedIdentityAuthenticationPtrOutput() RegistryEndpointUserAssignedIdentityAuthenticationPtrOutput
	ToRegistryEndpointUserAssignedIdentityAuthenticationPtrOutputWithContext(context.Context) RegistryEndpointUserAssignedIdentityAuthenticationPtrOutput
}

type registryEndpointUserAssignedIdentityAuthenticationPtrType RegistryEndpointUserAssignedIdentityAuthenticationArgs

func RegistryEndpointUserAssignedIdentityAuthenticationPtr(v *RegistryEndpointUserAssignedIdentityAuthenticationArgs) RegistryEndpointUserAssignedIdentityAuthenticationPtrInput {
	return (*registryEndpointUserAssignedIdentityAuthenticationPtrType)(v)
}

func (*registryEndpointUserAssignedIdentityAuthenticationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RegistryEndpointUserAssignedIdentityAuthentication)(nil)).Elem()
}

func (i *registryEndpointUserAssignedIdentityAuthenticationPtrType) ToRegistryEndpointUserAssignedIdentityAuthenticationPtrOutput() RegistryEndpointUserAssignedIdentityAuthenticationPtrOutput {
	return i.ToRegistryEndpointUserAssignedIdentityAuthenticationPtrOutputWithContext(context.Background())
}

func (i *registryEndpointUserAssignedIdentityAuthenticationPtrType) ToRegistryEndpointUserAssignedIdentityAuthenticationPtrOutputWithContext(ctx context.Context) RegistryEndpointUserAssignedIdentityAuthenticationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegistryEndpointUserAssignedIdentityAuthenticationPtrOutput)
}

// User assigned identity authentication
type RegistryEndpointUserAssignedIdentityAuthenticationOutput struct{ *pulumi.OutputState }

func (RegistryEndpointUserAssignedIdentityAuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RegistryEndpointUserAssignedIdentityAuthentication)(nil)).Elem()
}

func (o RegistryEndpointUserAssignedIdentityAuthenticationOutput) ToRegistryEndpointUserAssignedIdentityAuthenticationOutput() RegistryEndpointUserAssignedIdentityAuthenticationOutput {
	return o
}

func (o RegistryEndpointUserAssignedIdentityAuthenticationOutput) ToRegistryEndpointUserAssignedIdentityAuthenticationOutputWithContext(ctx context.Context) RegistryEndpointUserAssignedIdentityAuthenticationOutput {
	return o
}

func (o RegistryEndpointUserAssignedIdentityAuthenticationOutput) ToRegistryEndpointUserAssignedIdentityAuthenticationPtrOutput() RegistryEndpointUserAssignedIdentityAuthenticationPtrOutput {
	return o.ToRegistryEndpointUserAssignedIdentityAuthenticationPtrOutputWithContext(context.Background())
}

func (o RegistryEndpointUserAssignedIdentityAuthenticationOutput) ToRegistryEndpointUserAssignedIdentityAuthenticationPtrOutputWithContext(ctx context.Context) RegistryEndpointUserAssignedIdentityAuthenticationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RegistryEndpointUserAssignedIdentityAuthentication) *RegistryEndpointUserAssignedIdentityAuthentication {
		return &v
	}).(RegistryEndpointUserAssignedIdentityAuthenticationPtrOutput)
}

// The authentication method.
// Expected value is 'UserAssignedManagedIdentity'.
func (o RegistryEndpointUserAssignedIdentityAuthenticationOutput) Method() pulumi.StringOutput {
	return o.ApplyT(func(v RegistryEndpointUserAssignedIdentityAuthentication) string { return v.Method }).(pulumi.StringOutput)
}

// User assigned managed identity properties
func (o RegistryEndpointUserAssignedIdentityAuthenticationOutput) UserAssignedManagedIdentitySettings() RegistryEndpointUserAssignedManagedIdentitySettingsOutput {
	return o.ApplyT(func(v RegistryEndpointUserAssignedIdentityAuthentication) RegistryEndpointUserAssignedManagedIdentitySettings {
		return v.UserAssignedManagedIdentitySettings
	}).(RegistryEndpointUserAssignedManagedIdentitySettingsOutput)
}

type RegistryEndpointUserAssignedIdentityAuthenticationPtrOutput struct{ *pulumi.OutputState }

func (RegistryEndpointUserAssignedIdentityAuthenticationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RegistryEndpointUserAssignedIdentityAuthentication)(nil)).Elem()
}

func (o RegistryEndpointUserAssignedIdentityAuthenticationPtrOutput) ToRegistryEndpointUserAssignedIdentityAuthenticationPtrOutput() RegistryEndpointUserAssignedIdentityAuthenticationPtrOutput {
	return o
}

func (o RegistryEndpointUserAssignedIdentityAuthenticationPtrOutput) ToRegistryEndpointUserAssignedIdentityAuthenticationPtrOutputWithContext(ctx context.Context) RegistryEndpointUserAssignedIdentityAuthenticationPtrOutput {
	return o
}

func (o RegistryEndpointUserAssignedIdentityAuthenticationPtrOutput) Elem() RegistryEndpointUserAssignedIdentityAuthenticationOutput {
	return o.ApplyT(func(v *RegistryEndpointUserAssignedIdentityAuthentication) RegistryEndpointUserAssignedIdentityAuthentication {
		if v != nil {
			return *v
		}
		var ret RegistryEndpointUserAssignedIdentityAuthentication
		return ret
	}).(RegistryEndpointUserAssignedIdentityAuthenticationOutput)
}

// The authentication method.
// Expected value is 'UserAssignedManagedIdentity'.
func (o RegistryEndpointUserAssignedIdentityAuthenticationPtrOutput) Method() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RegistryEndpointUserAssignedIdentityAuthentication) *string {
		if v == nil {
			return nil
		}
		return &v.Method
	}).(pulumi.StringPtrOutput)
}

// User assigned managed identity properties
func (o RegistryEndpointUserAssignedIdentityAuthenticationPtrOutput) UserAssignedManagedIdentitySettings() RegistryEndpointUserAssignedManagedIdentitySettingsPtrOutput {
	return o.ApplyT(func(v *RegistryEndpointUserAssignedIdentityAuthentication) *RegistryEndpointUserAssignedManagedIdentitySettings {
		if v == nil {
			return nil
		}
		return &v.UserAssignedManagedIdentitySettings
	}).(RegistryEndpointUserAssignedManagedIdentitySettingsPtrOutput)
}

// User assigned identity authentication
type RegistryEndpointUserAssignedIdentityAuthenticationResponse struct {
	// The authentication method.
	// Expected value is 'UserAssignedManagedIdentity'.
	Method string `pulumi:"method"`
	// User assigned managed identity properties
	UserAssignedManagedIdentitySettings RegistryEndpointUserAssignedManagedIdentitySettingsResponse `pulumi:"userAssignedManagedIdentitySettings"`
}

// User assigned identity authentication
type RegistryEndpointUserAssignedIdentityAuthenticationResponseOutput struct{ *pulumi.OutputState }

func (RegistryEndpointUserAssignedIdentityAuthenticationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RegistryEndpointUserAssignedIdentityAuthenticationResponse)(nil)).Elem()
}

func (o RegistryEndpointUserAssignedIdentityAuthenticationResponseOutput) ToRegistryEndpointUserAssignedIdentityAuthenticationResponseOutput() RegistryEndpointUserAssignedIdentityAuthenticationResponseOutput {
	return o
}

func (o RegistryEndpointUserAssignedIdentityAuthenticationResponseOutput) ToRegistryEndpointUserAssignedIdentityAuthenticationResponseOutputWithContext(ctx context.Context) RegistryEndpointUserAssignedIdentityAuthenticationResponseOutput {
	return o
}

// The authentication method.
// Expected value is 'UserAssignedManagedIdentity'.
func (o RegistryEndpointUserAssignedIdentityAuthenticationResponseOutput) Method() pulumi.StringOutput {
	return o.ApplyT(func(v RegistryEndpointUserAssignedIdentityAuthenticationResponse) string { return v.Method }).(pulumi.StringOutput)
}

// User assigned managed identity properties
func (o RegistryEndpointUserAssignedIdentityAuthenticationResponseOutput) UserAssignedManagedIdentitySettings() RegistryEndpointUserAssignedManagedIdentitySettingsResponseOutput {
	return o.ApplyT(func(v RegistryEndpointUserAssignedIdentityAuthenticationResponse) RegistryEndpointUserAssignedManagedIdentitySettingsResponse {
		return v.UserAssignedManagedIdentitySettings
	}).(RegistryEndpointUserAssignedManagedIdentitySettingsResponseOutput)
}

// User assigned managed identity properties
type RegistryEndpointUserAssignedManagedIdentitySettings struct {
	// Client ID for the user-assigned managed identity.
	ClientId string `pulumi:"clientId"`
	// Resource identifier (application ID URI) of the resource, affixed with the .default suffix.
	Scope *string `pulumi:"scope"`
	// Tenant ID.
	TenantId string `pulumi:"tenantId"`
}

// RegistryEndpointUserAssignedManagedIdentitySettingsInput is an input type that accepts RegistryEndpointUserAssignedManagedIdentitySettingsArgs and RegistryEndpointUserAssignedManagedIdentitySettingsOutput values.
// You can construct a concrete instance of `RegistryEndpointUserAssignedManagedIdentitySettingsInput` via:
//
//	RegistryEndpointUserAssignedManagedIdentitySettingsArgs{...}
type RegistryEndpointUserAssignedManagedIdentitySettingsInput interface {
	pulumi.Input

	ToRegistryEndpointUserAssignedManagedIdentitySettingsOutput() RegistryEndpointUserAssignedManagedIdentitySettingsOutput
	ToRegistryEndpointUserAssignedManagedIdentitySettingsOutputWithContext(context.Context) RegistryEndpointUserAssignedManagedIdentitySettingsOutput
}

// User assigned managed identity properties
type RegistryEndpointUserAssignedManagedIdentitySettingsArgs struct {
	// Client ID for the user-assigned managed identity.
	ClientId pulumi.StringInput `pulumi:"clientId"`
	// Resource identifier (application ID URI) of the resource, affixed with the .default suffix.
	Scope pulumi.StringPtrInput `pulumi:"scope"`
	// Tenant ID.
	TenantId pulumi.StringInput `pulumi:"tenantId"`
}

func (RegistryEndpointUserAssignedManagedIdentitySettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RegistryEndpointUserAssignedManagedIdentitySettings)(nil)).Elem()
}

func (i RegistryEndpointUserAssignedManagedIdentitySettingsArgs) ToRegistryEndpointUserAssignedManagedIdentitySettingsOutput() RegistryEndpointUserAssignedManagedIdentitySettingsOutput {
	return i.ToRegistryEndpointUserAssignedManagedIdentitySettingsOutputWithContext(context.Background())
}

func (i RegistryEndpointUserAssignedManagedIdentitySettingsArgs) ToRegistryEndpointUserAssignedManagedIdentitySettingsOutputWithContext(ctx context.Context) RegistryEndpointUserAssignedManagedIdentitySettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegistryEndpointUserAssignedManagedIdentitySettingsOutput)
}

func (i RegistryEndpointUserAssignedManagedIdentitySettingsArgs) ToRegistryEndpointUserAssignedManagedIdentitySettingsPtrOutput() RegistryEndpointUserAssignedManagedIdentitySettingsPtrOutput {
	return i.ToRegistryEndpointUserAssignedManagedIdentitySettingsPtrOutputWithContext(context.Background())
}

func (i RegistryEndpointUserAssignedManagedIdentitySettingsArgs) ToRegistryEndpointUserAssignedManagedIdentitySettingsPtrOutputWithContext(ctx context.Context) RegistryEndpointUserAssignedManagedIdentitySettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegistryEndpointUserAssignedManagedIdentitySettingsOutput).ToRegistryEndpointUserAssignedManagedIdentitySettingsPtrOutputWithContext(ctx)
}

// RegistryEndpointUserAssignedManagedIdentitySettingsPtrInput is an input type that accepts RegistryEndpointUserAssignedManagedIdentitySettingsArgs, RegistryEndpointUserAssignedManagedIdentitySettingsPtr and RegistryEndpointUserAssignedManagedIdentitySettingsPtrOutput values.
// You can construct a concrete instance of `RegistryEndpointUserAssignedManagedIdentitySettingsPtrInput` via:
//
//	        RegistryEndpointUserAssignedManagedIdentitySettingsArgs{...}
//
//	or:
//
//	        nil
type RegistryEndpointUserAssignedManagedIdentitySettingsPtrInput interface {
	pulumi.Input

	ToRegistryEndpointUserAssignedManagedIdentitySettingsPtrOutput() RegistryEndpointUserAssignedManagedIdentitySettingsPtrOutput
	ToRegistryEndpointUserAssignedManagedIdentitySettingsPtrOutputWithContext(context.Context) RegistryEndpointUserAssignedManagedIdentitySettingsPtrOutput
}

type registryEndpointUserAssignedManagedIdentitySettingsPtrType RegistryEndpointUserAssignedManagedIdentitySettingsArgs

func RegistryEndpointUserAssignedManagedIdentitySettingsPtr(v *RegistryEndpointUserAssignedManagedIdentitySettingsArgs) RegistryEndpointUserAssignedManagedIdentitySettingsPtrInput {
	return (*registryEndpointUserAssignedManagedIdentitySettingsPtrType)(v)
}

func (*registryEndpointUserAssignedManagedIdentitySettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RegistryEndpointUserAssignedManagedIdentitySettings)(nil)).Elem()
}

func (i *registryEndpointUserAssignedManagedIdentitySettingsPtrType) ToRegistryEndpointUserAssignedManagedIdentitySettingsPtrOutput() RegistryEndpointUserAssignedManagedIdentitySettingsPtrOutput {
	return i.ToRegistryEndpointUserAssignedManagedIdentitySettingsPtrOutputWithContext(context.Background())
}

func (i *registryEndpointUserAssignedManagedIdentitySettingsPtrType) ToRegistryEndpointUserAssignedManagedIdentitySettingsPtrOutputWithContext(ctx context.Context) RegistryEndpointUserAssignedManagedIdentitySettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegistryEndpointUserAssignedManagedIdentitySettingsPtrOutput)
}

// User assigned managed identity properties
type RegistryEndpointUserAssignedManagedIdentitySettingsOutput struct{ *pulumi.OutputState }

func (RegistryEndpointUserAssignedManagedIdentitySettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RegistryEndpointUserAssignedManagedIdentitySettings)(nil)).Elem()
}

func (o RegistryEndpointUserAssignedManagedIdentitySettingsOutput) ToRegistryEndpointUserAssignedManagedIdentitySettingsOutput() RegistryEndpointUserAssignedManagedIdentitySettingsOutput {
	return o
}

func (o RegistryEndpointUserAssignedManagedIdentitySettingsOutput) ToRegistryEndpointUserAssignedManagedIdentitySettingsOutputWithContext(ctx context.Context) RegistryEndpointUserAssignedManagedIdentitySettingsOutput {
	return o
}

func (o RegistryEndpointUserAssignedManagedIdentitySettingsOutput) ToRegistryEndpointUserAssignedManagedIdentitySettingsPtrOutput() RegistryEndpointUserAssignedManagedIdentitySettingsPtrOutput {
	return o.ToRegistryEndpointUserAssignedManagedIdentitySettingsPtrOutputWithContext(context.Background())
}

func (o RegistryEndpointUserAssignedManagedIdentitySettingsOutput) ToRegistryEndpointUserAssignedManagedIdentitySettingsPtrOutputWithContext(ctx context.Context) RegistryEndpointUserAssignedManagedIdentitySettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RegistryEndpointUserAssignedManagedIdentitySettings) *RegistryEndpointUserAssignedManagedIdentitySettings {
		return &v
	}).(RegistryEndpointUserAssignedManagedIdentitySettingsPtrOutput)
}

// Client ID for the user-assigned managed identity.
func (o RegistryEndpointUserAssignedManagedIdentitySettingsOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v RegistryEndpointUserAssignedManagedIdentitySettings) string { return v.ClientId }).(pulumi.StringOutput)
}

// Resource identifier (application ID URI) of the resource, affixed with the .default suffix.
func (o RegistryEndpointUserAssignedManagedIdentitySettingsOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RegistryEndpointUserAssignedManagedIdentitySettings) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

// Tenant ID.
func (o RegistryEndpointUserAssignedManagedIdentitySettingsOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v RegistryEndpointUserAssignedManagedIdentitySettings) string { return v.TenantId }).(pulumi.StringOutput)
}

type RegistryEndpointUserAssignedManagedIdentitySettingsPtrOutput struct{ *pulumi.OutputState }

func (RegistryEndpointUserAssignedManagedIdentitySettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RegistryEndpointUserAssignedManagedIdentitySettings)(nil)).Elem()
}

func (o RegistryEndpointUserAssignedManagedIdentitySettingsPtrOutput) ToRegistryEndpointUserAssignedManagedIdentitySettingsPtrOutput() RegistryEndpointUserAssignedManagedIdentitySettingsPtrOutput {
	return o
}

func (o RegistryEndpointUserAssignedManagedIdentitySettingsPtrOutput) ToRegistryEndpointUserAssignedManagedIdentitySettingsPtrOutputWithContext(ctx context.Context) RegistryEndpointUserAssignedManagedIdentitySettingsPtrOutput {
	return o
}

func (o RegistryEndpointUserAssignedManagedIdentitySettingsPtrOutput) Elem() RegistryEndpointUserAssignedManagedIdentitySettingsOutput {
	return o.ApplyT(func(v *RegistryEndpointUserAssignedManagedIdentitySettings) RegistryEndpointUserAssignedManagedIdentitySettings {
		if v != nil {
			return *v
		}
		var ret RegistryEndpointUserAssignedManagedIdentitySettings
		return ret
	}).(RegistryEndpointUserAssignedManagedIdentitySettingsOutput)
}

// Client ID for the user-assigned managed identity.
func (o RegistryEndpointUserAssignedManagedIdentitySettingsPtrOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RegistryEndpointUserAssignedManagedIdentitySettings) *string {
		if v == nil {
			return nil
		}
		return &v.ClientId
	}).(pulumi.StringPtrOutput)
}

// Resource identifier (application ID URI) of the resource, affixed with the .default suffix.
func (o RegistryEndpointUserAssignedManagedIdentitySettingsPtrOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RegistryEndpointUserAssignedManagedIdentitySettings) *string {
		if v == nil {
			return nil
		}
		return v.Scope
	}).(pulumi.StringPtrOutput)
}

// Tenant ID.
func (o RegistryEndpointUserAssignedManagedIdentitySettingsPtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RegistryEndpointUserAssignedManagedIdentitySettings) *string {
		if v == nil {
			return nil
		}
		return &v.TenantId
	}).(pulumi.StringPtrOutput)
}

// User assigned managed identity properties
type RegistryEndpointUserAssignedManagedIdentitySettingsResponse struct {
	// Client ID for the user-assigned managed identity.
	ClientId string `pulumi:"clientId"`
	// Resource identifier (application ID URI) of the resource, affixed with the .default suffix.
	Scope *string `pulumi:"scope"`
	// Tenant ID.
	TenantId string `pulumi:"tenantId"`
}

// User assigned managed identity properties
type RegistryEndpointUserAssignedManagedIdentitySettingsResponseOutput struct{ *pulumi.OutputState }

func (RegistryEndpointUserAssignedManagedIdentitySettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RegistryEndpointUserAssignedManagedIdentitySettingsResponse)(nil)).Elem()
}

func (o RegistryEndpointUserAssignedManagedIdentitySettingsResponseOutput) ToRegistryEndpointUserAssignedManagedIdentitySettingsResponseOutput() RegistryEndpointUserAssignedManagedIdentitySettingsResponseOutput {
	return o
}

func (o RegistryEndpointUserAssignedManagedIdentitySettingsResponseOutput) ToRegistryEndpointUserAssignedManagedIdentitySettingsResponseOutputWithContext(ctx context.Context) RegistryEndpointUserAssignedManagedIdentitySettingsResponseOutput {
	return o
}

// Client ID for the user-assigned managed identity.
func (o RegistryEndpointUserAssignedManagedIdentitySettingsResponseOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v RegistryEndpointUserAssignedManagedIdentitySettingsResponse) string { return v.ClientId }).(pulumi.StringOutput)
}

// Resource identifier (application ID URI) of the resource, affixed with the .default suffix.
func (o RegistryEndpointUserAssignedManagedIdentitySettingsResponseOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RegistryEndpointUserAssignedManagedIdentitySettingsResponse) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

// Tenant ID.
func (o RegistryEndpointUserAssignedManagedIdentitySettingsResponseOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v RegistryEndpointUserAssignedManagedIdentitySettingsResponse) string { return v.TenantId }).(pulumi.StringOutput)
}

// Subject Alternative Names (SANs) for certificate.
type SanForCert struct {
	// DNS SANs.
	Dns []string `pulumi:"dns"`
	// IP address SANs.
	Ip []string `pulumi:"ip"`
}

// SanForCertInput is an input type that accepts SanForCertArgs and SanForCertOutput values.
// You can construct a concrete instance of `SanForCertInput` via:
//
//	SanForCertArgs{...}
type SanForCertInput interface {
	pulumi.Input

	ToSanForCertOutput() SanForCertOutput
	ToSanForCertOutputWithContext(context.Context) SanForCertOutput
}

// Subject Alternative Names (SANs) for certificate.
type SanForCertArgs struct {
	// DNS SANs.
	Dns pulumi.StringArrayInput `pulumi:"dns"`
	// IP address SANs.
	Ip pulumi.StringArrayInput `pulumi:"ip"`
}

func (SanForCertArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SanForCert)(nil)).Elem()
}

func (i SanForCertArgs) ToSanForCertOutput() SanForCertOutput {
	return i.ToSanForCertOutputWithContext(context.Background())
}

func (i SanForCertArgs) ToSanForCertOutputWithContext(ctx context.Context) SanForCertOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SanForCertOutput)
}

func (i SanForCertArgs) ToSanForCertPtrOutput() SanForCertPtrOutput {
	return i.ToSanForCertPtrOutputWithContext(context.Background())
}

func (i SanForCertArgs) ToSanForCertPtrOutputWithContext(ctx context.Context) SanForCertPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SanForCertOutput).ToSanForCertPtrOutputWithContext(ctx)
}

// SanForCertPtrInput is an input type that accepts SanForCertArgs, SanForCertPtr and SanForCertPtrOutput values.
// You can construct a concrete instance of `SanForCertPtrInput` via:
//
//	        SanForCertArgs{...}
//
//	or:
//
//	        nil
type SanForCertPtrInput interface {
	pulumi.Input

	ToSanForCertPtrOutput() SanForCertPtrOutput
	ToSanForCertPtrOutputWithContext(context.Context) SanForCertPtrOutput
}

type sanForCertPtrType SanForCertArgs

func SanForCertPtr(v *SanForCertArgs) SanForCertPtrInput {
	return (*sanForCertPtrType)(v)
}

func (*sanForCertPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SanForCert)(nil)).Elem()
}

func (i *sanForCertPtrType) ToSanForCertPtrOutput() SanForCertPtrOutput {
	return i.ToSanForCertPtrOutputWithContext(context.Background())
}

func (i *sanForCertPtrType) ToSanForCertPtrOutputWithContext(ctx context.Context) SanForCertPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SanForCertPtrOutput)
}

// Subject Alternative Names (SANs) for certificate.
type SanForCertOutput struct{ *pulumi.OutputState }

func (SanForCertOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SanForCert)(nil)).Elem()
}

func (o SanForCertOutput) ToSanForCertOutput() SanForCertOutput {
	return o
}

func (o SanForCertOutput) ToSanForCertOutputWithContext(ctx context.Context) SanForCertOutput {
	return o
}

func (o SanForCertOutput) ToSanForCertPtrOutput() SanForCertPtrOutput {
	return o.ToSanForCertPtrOutputWithContext(context.Background())
}

func (o SanForCertOutput) ToSanForCertPtrOutputWithContext(ctx context.Context) SanForCertPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SanForCert) *SanForCert {
		return &v
	}).(SanForCertPtrOutput)
}

// DNS SANs.
func (o SanForCertOutput) Dns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SanForCert) []string { return v.Dns }).(pulumi.StringArrayOutput)
}

// IP address SANs.
func (o SanForCertOutput) Ip() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SanForCert) []string { return v.Ip }).(pulumi.StringArrayOutput)
}

type SanForCertPtrOutput struct{ *pulumi.OutputState }

func (SanForCertPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SanForCert)(nil)).Elem()
}

func (o SanForCertPtrOutput) ToSanForCertPtrOutput() SanForCertPtrOutput {
	return o
}

func (o SanForCertPtrOutput) ToSanForCertPtrOutputWithContext(ctx context.Context) SanForCertPtrOutput {
	return o
}

func (o SanForCertPtrOutput) Elem() SanForCertOutput {
	return o.ApplyT(func(v *SanForCert) SanForCert {
		if v != nil {
			return *v
		}
		var ret SanForCert
		return ret
	}).(SanForCertOutput)
}

// DNS SANs.
func (o SanForCertPtrOutput) Dns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SanForCert) []string {
		if v == nil {
			return nil
		}
		return v.Dns
	}).(pulumi.StringArrayOutput)
}

// IP address SANs.
func (o SanForCertPtrOutput) Ip() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SanForCert) []string {
		if v == nil {
			return nil
		}
		return v.Ip
	}).(pulumi.StringArrayOutput)
}

// Subject Alternative Names (SANs) for certificate.
type SanForCertResponse struct {
	// DNS SANs.
	Dns []string `pulumi:"dns"`
	// IP address SANs.
	Ip []string `pulumi:"ip"`
}

// Subject Alternative Names (SANs) for certificate.
type SanForCertResponseOutput struct{ *pulumi.OutputState }

func (SanForCertResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SanForCertResponse)(nil)).Elem()
}

func (o SanForCertResponseOutput) ToSanForCertResponseOutput() SanForCertResponseOutput {
	return o
}

func (o SanForCertResponseOutput) ToSanForCertResponseOutputWithContext(ctx context.Context) SanForCertResponseOutput {
	return o
}

// DNS SANs.
func (o SanForCertResponseOutput) Dns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SanForCertResponse) []string { return v.Dns }).(pulumi.StringArrayOutput)
}

// IP address SANs.
func (o SanForCertResponseOutput) Ip() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SanForCertResponse) []string { return v.Ip }).(pulumi.StringArrayOutput)
}

type SanForCertResponsePtrOutput struct{ *pulumi.OutputState }

func (SanForCertResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SanForCertResponse)(nil)).Elem()
}

func (o SanForCertResponsePtrOutput) ToSanForCertResponsePtrOutput() SanForCertResponsePtrOutput {
	return o
}

func (o SanForCertResponsePtrOutput) ToSanForCertResponsePtrOutputWithContext(ctx context.Context) SanForCertResponsePtrOutput {
	return o
}

func (o SanForCertResponsePtrOutput) Elem() SanForCertResponseOutput {
	return o.ApplyT(func(v *SanForCertResponse) SanForCertResponse {
		if v != nil {
			return *v
		}
		var ret SanForCertResponse
		return ret
	}).(SanForCertResponseOutput)
}

// DNS SANs.
func (o SanForCertResponsePtrOutput) Dns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SanForCertResponse) []string {
		if v == nil {
			return nil
		}
		return v.Dns
	}).(pulumi.StringArrayOutput)
}

// IP address SANs.
func (o SanForCertResponsePtrOutput) Ip() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SanForCertResponse) []string {
		if v == nil {
			return nil
		}
		return v.Ip
	}).(pulumi.StringArrayOutput)
}

// The reference to the Schema Registry for this AIO Instance.
type SchemaRegistryRef struct {
	// The resource ID of the Schema Registry.
	ResourceId string `pulumi:"resourceId"`
}

// SchemaRegistryRefInput is an input type that accepts SchemaRegistryRefArgs and SchemaRegistryRefOutput values.
// You can construct a concrete instance of `SchemaRegistryRefInput` via:
//
//	SchemaRegistryRefArgs{...}
type SchemaRegistryRefInput interface {
	pulumi.Input

	ToSchemaRegistryRefOutput() SchemaRegistryRefOutput
	ToSchemaRegistryRefOutputWithContext(context.Context) SchemaRegistryRefOutput
}

// The reference to the Schema Registry for this AIO Instance.
type SchemaRegistryRefArgs struct {
	// The resource ID of the Schema Registry.
	ResourceId pulumi.StringInput `pulumi:"resourceId"`
}

func (SchemaRegistryRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SchemaRegistryRef)(nil)).Elem()
}

func (i SchemaRegistryRefArgs) ToSchemaRegistryRefOutput() SchemaRegistryRefOutput {
	return i.ToSchemaRegistryRefOutputWithContext(context.Background())
}

func (i SchemaRegistryRefArgs) ToSchemaRegistryRefOutputWithContext(ctx context.Context) SchemaRegistryRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SchemaRegistryRefOutput)
}

func (i SchemaRegistryRefArgs) ToSchemaRegistryRefPtrOutput() SchemaRegistryRefPtrOutput {
	return i.ToSchemaRegistryRefPtrOutputWithContext(context.Background())
}

func (i SchemaRegistryRefArgs) ToSchemaRegistryRefPtrOutputWithContext(ctx context.Context) SchemaRegistryRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SchemaRegistryRefOutput).ToSchemaRegistryRefPtrOutputWithContext(ctx)
}

// SchemaRegistryRefPtrInput is an input type that accepts SchemaRegistryRefArgs, SchemaRegistryRefPtr and SchemaRegistryRefPtrOutput values.
// You can construct a concrete instance of `SchemaRegistryRefPtrInput` via:
//
//	        SchemaRegistryRefArgs{...}
//
//	or:
//
//	        nil
type SchemaRegistryRefPtrInput interface {
	pulumi.Input

	ToSchemaRegistryRefPtrOutput() SchemaRegistryRefPtrOutput
	ToSchemaRegistryRefPtrOutputWithContext(context.Context) SchemaRegistryRefPtrOutput
}

type schemaRegistryRefPtrType SchemaRegistryRefArgs

func SchemaRegistryRefPtr(v *SchemaRegistryRefArgs) SchemaRegistryRefPtrInput {
	return (*schemaRegistryRefPtrType)(v)
}

func (*schemaRegistryRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SchemaRegistryRef)(nil)).Elem()
}

func (i *schemaRegistryRefPtrType) ToSchemaRegistryRefPtrOutput() SchemaRegistryRefPtrOutput {
	return i.ToSchemaRegistryRefPtrOutputWithContext(context.Background())
}

func (i *schemaRegistryRefPtrType) ToSchemaRegistryRefPtrOutputWithContext(ctx context.Context) SchemaRegistryRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SchemaRegistryRefPtrOutput)
}

// The reference to the Schema Registry for this AIO Instance.
type SchemaRegistryRefOutput struct{ *pulumi.OutputState }

func (SchemaRegistryRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SchemaRegistryRef)(nil)).Elem()
}

func (o SchemaRegistryRefOutput) ToSchemaRegistryRefOutput() SchemaRegistryRefOutput {
	return o
}

func (o SchemaRegistryRefOutput) ToSchemaRegistryRefOutputWithContext(ctx context.Context) SchemaRegistryRefOutput {
	return o
}

func (o SchemaRegistryRefOutput) ToSchemaRegistryRefPtrOutput() SchemaRegistryRefPtrOutput {
	return o.ToSchemaRegistryRefPtrOutputWithContext(context.Background())
}

func (o SchemaRegistryRefOutput) ToSchemaRegistryRefPtrOutputWithContext(ctx context.Context) SchemaRegistryRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SchemaRegistryRef) *SchemaRegistryRef {
		return &v
	}).(SchemaRegistryRefPtrOutput)
}

// The resource ID of the Schema Registry.
func (o SchemaRegistryRefOutput) ResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v SchemaRegistryRef) string { return v.ResourceId }).(pulumi.StringOutput)
}

type SchemaRegistryRefPtrOutput struct{ *pulumi.OutputState }

func (SchemaRegistryRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SchemaRegistryRef)(nil)).Elem()
}

func (o SchemaRegistryRefPtrOutput) ToSchemaRegistryRefPtrOutput() SchemaRegistryRefPtrOutput {
	return o
}

func (o SchemaRegistryRefPtrOutput) ToSchemaRegistryRefPtrOutputWithContext(ctx context.Context) SchemaRegistryRefPtrOutput {
	return o
}

func (o SchemaRegistryRefPtrOutput) Elem() SchemaRegistryRefOutput {
	return o.ApplyT(func(v *SchemaRegistryRef) SchemaRegistryRef {
		if v != nil {
			return *v
		}
		var ret SchemaRegistryRef
		return ret
	}).(SchemaRegistryRefOutput)
}

// The resource ID of the Schema Registry.
func (o SchemaRegistryRefPtrOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SchemaRegistryRef) *string {
		if v == nil {
			return nil
		}
		return &v.ResourceId
	}).(pulumi.StringPtrOutput)
}

// The reference to the Schema Registry for this AIO Instance.
type SchemaRegistryRefResponse struct {
	// The resource ID of the Schema Registry.
	ResourceId string `pulumi:"resourceId"`
}

// The reference to the Schema Registry for this AIO Instance.
type SchemaRegistryRefResponseOutput struct{ *pulumi.OutputState }

func (SchemaRegistryRefResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SchemaRegistryRefResponse)(nil)).Elem()
}

func (o SchemaRegistryRefResponseOutput) ToSchemaRegistryRefResponseOutput() SchemaRegistryRefResponseOutput {
	return o
}

func (o SchemaRegistryRefResponseOutput) ToSchemaRegistryRefResponseOutputWithContext(ctx context.Context) SchemaRegistryRefResponseOutput {
	return o
}

// The resource ID of the Schema Registry.
func (o SchemaRegistryRefResponseOutput) ResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v SchemaRegistryRefResponse) string { return v.ResourceId }).(pulumi.StringOutput)
}

// Broker Diagnostic Self check properties
type SelfCheck struct {
	// The self check interval.
	IntervalSeconds *int `pulumi:"intervalSeconds"`
	// The toggle to enable/disable self check.
	Mode *string `pulumi:"mode"`
	// The timeout for self check.
	TimeoutSeconds *int `pulumi:"timeoutSeconds"`
}

// Defaults sets the appropriate defaults for SelfCheck
func (val *SelfCheck) Defaults() *SelfCheck {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.IntervalSeconds == nil {
		intervalSeconds_ := 30
		tmp.IntervalSeconds = &intervalSeconds_
	}
	if tmp.Mode == nil {
		mode_ := "Enabled"
		tmp.Mode = &mode_
	}
	if tmp.TimeoutSeconds == nil {
		timeoutSeconds_ := 15
		tmp.TimeoutSeconds = &timeoutSeconds_
	}
	return &tmp
}

// SelfCheckInput is an input type that accepts SelfCheckArgs and SelfCheckOutput values.
// You can construct a concrete instance of `SelfCheckInput` via:
//
//	SelfCheckArgs{...}
type SelfCheckInput interface {
	pulumi.Input

	ToSelfCheckOutput() SelfCheckOutput
	ToSelfCheckOutputWithContext(context.Context) SelfCheckOutput
}

// Broker Diagnostic Self check properties
type SelfCheckArgs struct {
	// The self check interval.
	IntervalSeconds pulumi.IntPtrInput `pulumi:"intervalSeconds"`
	// The toggle to enable/disable self check.
	Mode pulumi.StringPtrInput `pulumi:"mode"`
	// The timeout for self check.
	TimeoutSeconds pulumi.IntPtrInput `pulumi:"timeoutSeconds"`
}

// Defaults sets the appropriate defaults for SelfCheckArgs
func (val *SelfCheckArgs) Defaults() *SelfCheckArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.IntervalSeconds == nil {
		tmp.IntervalSeconds = pulumi.IntPtr(30)
	}
	if tmp.Mode == nil {
		tmp.Mode = pulumi.StringPtr("Enabled")
	}
	if tmp.TimeoutSeconds == nil {
		tmp.TimeoutSeconds = pulumi.IntPtr(15)
	}
	return &tmp
}
func (SelfCheckArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SelfCheck)(nil)).Elem()
}

func (i SelfCheckArgs) ToSelfCheckOutput() SelfCheckOutput {
	return i.ToSelfCheckOutputWithContext(context.Background())
}

func (i SelfCheckArgs) ToSelfCheckOutputWithContext(ctx context.Context) SelfCheckOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SelfCheckOutput)
}

func (i SelfCheckArgs) ToSelfCheckPtrOutput() SelfCheckPtrOutput {
	return i.ToSelfCheckPtrOutputWithContext(context.Background())
}

func (i SelfCheckArgs) ToSelfCheckPtrOutputWithContext(ctx context.Context) SelfCheckPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SelfCheckOutput).ToSelfCheckPtrOutputWithContext(ctx)
}

// SelfCheckPtrInput is an input type that accepts SelfCheckArgs, SelfCheckPtr and SelfCheckPtrOutput values.
// You can construct a concrete instance of `SelfCheckPtrInput` via:
//
//	        SelfCheckArgs{...}
//
//	or:
//
//	        nil
type SelfCheckPtrInput interface {
	pulumi.Input

	ToSelfCheckPtrOutput() SelfCheckPtrOutput
	ToSelfCheckPtrOutputWithContext(context.Context) SelfCheckPtrOutput
}

type selfCheckPtrType SelfCheckArgs

func SelfCheckPtr(v *SelfCheckArgs) SelfCheckPtrInput {
	return (*selfCheckPtrType)(v)
}

func (*selfCheckPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SelfCheck)(nil)).Elem()
}

func (i *selfCheckPtrType) ToSelfCheckPtrOutput() SelfCheckPtrOutput {
	return i.ToSelfCheckPtrOutputWithContext(context.Background())
}

func (i *selfCheckPtrType) ToSelfCheckPtrOutputWithContext(ctx context.Context) SelfCheckPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SelfCheckPtrOutput)
}

// Broker Diagnostic Self check properties
type SelfCheckOutput struct{ *pulumi.OutputState }

func (SelfCheckOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SelfCheck)(nil)).Elem()
}

func (o SelfCheckOutput) ToSelfCheckOutput() SelfCheckOutput {
	return o
}

func (o SelfCheckOutput) ToSelfCheckOutputWithContext(ctx context.Context) SelfCheckOutput {
	return o
}

func (o SelfCheckOutput) ToSelfCheckPtrOutput() SelfCheckPtrOutput {
	return o.ToSelfCheckPtrOutputWithContext(context.Background())
}

func (o SelfCheckOutput) ToSelfCheckPtrOutputWithContext(ctx context.Context) SelfCheckPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SelfCheck) *SelfCheck {
		return &v
	}).(SelfCheckPtrOutput)
}

// The self check interval.
func (o SelfCheckOutput) IntervalSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SelfCheck) *int { return v.IntervalSeconds }).(pulumi.IntPtrOutput)
}

// The toggle to enable/disable self check.
func (o SelfCheckOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SelfCheck) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

// The timeout for self check.
func (o SelfCheckOutput) TimeoutSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SelfCheck) *int { return v.TimeoutSeconds }).(pulumi.IntPtrOutput)
}

type SelfCheckPtrOutput struct{ *pulumi.OutputState }

func (SelfCheckPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SelfCheck)(nil)).Elem()
}

func (o SelfCheckPtrOutput) ToSelfCheckPtrOutput() SelfCheckPtrOutput {
	return o
}

func (o SelfCheckPtrOutput) ToSelfCheckPtrOutputWithContext(ctx context.Context) SelfCheckPtrOutput {
	return o
}

func (o SelfCheckPtrOutput) Elem() SelfCheckOutput {
	return o.ApplyT(func(v *SelfCheck) SelfCheck {
		if v != nil {
			return *v
		}
		var ret SelfCheck
		return ret
	}).(SelfCheckOutput)
}

// The self check interval.
func (o SelfCheckPtrOutput) IntervalSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SelfCheck) *int {
		if v == nil {
			return nil
		}
		return v.IntervalSeconds
	}).(pulumi.IntPtrOutput)
}

// The toggle to enable/disable self check.
func (o SelfCheckPtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SelfCheck) *string {
		if v == nil {
			return nil
		}
		return v.Mode
	}).(pulumi.StringPtrOutput)
}

// The timeout for self check.
func (o SelfCheckPtrOutput) TimeoutSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SelfCheck) *int {
		if v == nil {
			return nil
		}
		return v.TimeoutSeconds
	}).(pulumi.IntPtrOutput)
}

// Broker Diagnostic Self check properties
type SelfCheckResponse struct {
	// The self check interval.
	IntervalSeconds *int `pulumi:"intervalSeconds"`
	// The toggle to enable/disable self check.
	Mode *string `pulumi:"mode"`
	// The timeout for self check.
	TimeoutSeconds *int `pulumi:"timeoutSeconds"`
}

// Defaults sets the appropriate defaults for SelfCheckResponse
func (val *SelfCheckResponse) Defaults() *SelfCheckResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.IntervalSeconds == nil {
		intervalSeconds_ := 30
		tmp.IntervalSeconds = &intervalSeconds_
	}
	if tmp.Mode == nil {
		mode_ := "Enabled"
		tmp.Mode = &mode_
	}
	if tmp.TimeoutSeconds == nil {
		timeoutSeconds_ := 15
		tmp.TimeoutSeconds = &timeoutSeconds_
	}
	return &tmp
}

// Broker Diagnostic Self check properties
type SelfCheckResponseOutput struct{ *pulumi.OutputState }

func (SelfCheckResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SelfCheckResponse)(nil)).Elem()
}

func (o SelfCheckResponseOutput) ToSelfCheckResponseOutput() SelfCheckResponseOutput {
	return o
}

func (o SelfCheckResponseOutput) ToSelfCheckResponseOutputWithContext(ctx context.Context) SelfCheckResponseOutput {
	return o
}

// The self check interval.
func (o SelfCheckResponseOutput) IntervalSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SelfCheckResponse) *int { return v.IntervalSeconds }).(pulumi.IntPtrOutput)
}

// The toggle to enable/disable self check.
func (o SelfCheckResponseOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SelfCheckResponse) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

// The timeout for self check.
func (o SelfCheckResponseOutput) TimeoutSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SelfCheckResponse) *int { return v.TimeoutSeconds }).(pulumi.IntPtrOutput)
}

type SelfCheckResponsePtrOutput struct{ *pulumi.OutputState }

func (SelfCheckResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SelfCheckResponse)(nil)).Elem()
}

func (o SelfCheckResponsePtrOutput) ToSelfCheckResponsePtrOutput() SelfCheckResponsePtrOutput {
	return o
}

func (o SelfCheckResponsePtrOutput) ToSelfCheckResponsePtrOutputWithContext(ctx context.Context) SelfCheckResponsePtrOutput {
	return o
}

func (o SelfCheckResponsePtrOutput) Elem() SelfCheckResponseOutput {
	return o.ApplyT(func(v *SelfCheckResponse) SelfCheckResponse {
		if v != nil {
			return *v
		}
		var ret SelfCheckResponse
		return ret
	}).(SelfCheckResponseOutput)
}

// The self check interval.
func (o SelfCheckResponsePtrOutput) IntervalSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SelfCheckResponse) *int {
		if v == nil {
			return nil
		}
		return v.IntervalSeconds
	}).(pulumi.IntPtrOutput)
}

// The toggle to enable/disable self check.
func (o SelfCheckResponsePtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SelfCheckResponse) *string {
		if v == nil {
			return nil
		}
		return v.Mode
	}).(pulumi.StringPtrOutput)
}

// The timeout for self check.
func (o SelfCheckResponsePtrOutput) TimeoutSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SelfCheckResponse) *int {
		if v == nil {
			return nil
		}
		return v.TimeoutSeconds
	}).(pulumi.IntPtrOutput)
}

// Diagnostic Self tracing properties
type SelfTracing struct {
	// The self tracing interval.
	IntervalSeconds *int `pulumi:"intervalSeconds"`
	// The toggle to enable/disable self tracing.
	Mode *string `pulumi:"mode"`
}

// Defaults sets the appropriate defaults for SelfTracing
func (val *SelfTracing) Defaults() *SelfTracing {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.IntervalSeconds == nil {
		intervalSeconds_ := 30
		tmp.IntervalSeconds = &intervalSeconds_
	}
	if tmp.Mode == nil {
		mode_ := "Enabled"
		tmp.Mode = &mode_
	}
	return &tmp
}

// SelfTracingInput is an input type that accepts SelfTracingArgs and SelfTracingOutput values.
// You can construct a concrete instance of `SelfTracingInput` via:
//
//	SelfTracingArgs{...}
type SelfTracingInput interface {
	pulumi.Input

	ToSelfTracingOutput() SelfTracingOutput
	ToSelfTracingOutputWithContext(context.Context) SelfTracingOutput
}

// Diagnostic Self tracing properties
type SelfTracingArgs struct {
	// The self tracing interval.
	IntervalSeconds pulumi.IntPtrInput `pulumi:"intervalSeconds"`
	// The toggle to enable/disable self tracing.
	Mode pulumi.StringPtrInput `pulumi:"mode"`
}

// Defaults sets the appropriate defaults for SelfTracingArgs
func (val *SelfTracingArgs) Defaults() *SelfTracingArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.IntervalSeconds == nil {
		tmp.IntervalSeconds = pulumi.IntPtr(30)
	}
	if tmp.Mode == nil {
		tmp.Mode = pulumi.StringPtr("Enabled")
	}
	return &tmp
}
func (SelfTracingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SelfTracing)(nil)).Elem()
}

func (i SelfTracingArgs) ToSelfTracingOutput() SelfTracingOutput {
	return i.ToSelfTracingOutputWithContext(context.Background())
}

func (i SelfTracingArgs) ToSelfTracingOutputWithContext(ctx context.Context) SelfTracingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SelfTracingOutput)
}

func (i SelfTracingArgs) ToSelfTracingPtrOutput() SelfTracingPtrOutput {
	return i.ToSelfTracingPtrOutputWithContext(context.Background())
}

func (i SelfTracingArgs) ToSelfTracingPtrOutputWithContext(ctx context.Context) SelfTracingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SelfTracingOutput).ToSelfTracingPtrOutputWithContext(ctx)
}

// SelfTracingPtrInput is an input type that accepts SelfTracingArgs, SelfTracingPtr and SelfTracingPtrOutput values.
// You can construct a concrete instance of `SelfTracingPtrInput` via:
//
//	        SelfTracingArgs{...}
//
//	or:
//
//	        nil
type SelfTracingPtrInput interface {
	pulumi.Input

	ToSelfTracingPtrOutput() SelfTracingPtrOutput
	ToSelfTracingPtrOutputWithContext(context.Context) SelfTracingPtrOutput
}

type selfTracingPtrType SelfTracingArgs

func SelfTracingPtr(v *SelfTracingArgs) SelfTracingPtrInput {
	return (*selfTracingPtrType)(v)
}

func (*selfTracingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SelfTracing)(nil)).Elem()
}

func (i *selfTracingPtrType) ToSelfTracingPtrOutput() SelfTracingPtrOutput {
	return i.ToSelfTracingPtrOutputWithContext(context.Background())
}

func (i *selfTracingPtrType) ToSelfTracingPtrOutputWithContext(ctx context.Context) SelfTracingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SelfTracingPtrOutput)
}

// Diagnostic Self tracing properties
type SelfTracingOutput struct{ *pulumi.OutputState }

func (SelfTracingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SelfTracing)(nil)).Elem()
}

func (o SelfTracingOutput) ToSelfTracingOutput() SelfTracingOutput {
	return o
}

func (o SelfTracingOutput) ToSelfTracingOutputWithContext(ctx context.Context) SelfTracingOutput {
	return o
}

func (o SelfTracingOutput) ToSelfTracingPtrOutput() SelfTracingPtrOutput {
	return o.ToSelfTracingPtrOutputWithContext(context.Background())
}

func (o SelfTracingOutput) ToSelfTracingPtrOutputWithContext(ctx context.Context) SelfTracingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SelfTracing) *SelfTracing {
		return &v
	}).(SelfTracingPtrOutput)
}

// The self tracing interval.
func (o SelfTracingOutput) IntervalSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SelfTracing) *int { return v.IntervalSeconds }).(pulumi.IntPtrOutput)
}

// The toggle to enable/disable self tracing.
func (o SelfTracingOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SelfTracing) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

type SelfTracingPtrOutput struct{ *pulumi.OutputState }

func (SelfTracingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SelfTracing)(nil)).Elem()
}

func (o SelfTracingPtrOutput) ToSelfTracingPtrOutput() SelfTracingPtrOutput {
	return o
}

func (o SelfTracingPtrOutput) ToSelfTracingPtrOutputWithContext(ctx context.Context) SelfTracingPtrOutput {
	return o
}

func (o SelfTracingPtrOutput) Elem() SelfTracingOutput {
	return o.ApplyT(func(v *SelfTracing) SelfTracing {
		if v != nil {
			return *v
		}
		var ret SelfTracing
		return ret
	}).(SelfTracingOutput)
}

// The self tracing interval.
func (o SelfTracingPtrOutput) IntervalSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SelfTracing) *int {
		if v == nil {
			return nil
		}
		return v.IntervalSeconds
	}).(pulumi.IntPtrOutput)
}

// The toggle to enable/disable self tracing.
func (o SelfTracingPtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SelfTracing) *string {
		if v == nil {
			return nil
		}
		return v.Mode
	}).(pulumi.StringPtrOutput)
}

// Diagnostic Self tracing properties
type SelfTracingResponse struct {
	// The self tracing interval.
	IntervalSeconds *int `pulumi:"intervalSeconds"`
	// The toggle to enable/disable self tracing.
	Mode *string `pulumi:"mode"`
}

// Defaults sets the appropriate defaults for SelfTracingResponse
func (val *SelfTracingResponse) Defaults() *SelfTracingResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.IntervalSeconds == nil {
		intervalSeconds_ := 30
		tmp.IntervalSeconds = &intervalSeconds_
	}
	if tmp.Mode == nil {
		mode_ := "Enabled"
		tmp.Mode = &mode_
	}
	return &tmp
}

// Diagnostic Self tracing properties
type SelfTracingResponseOutput struct{ *pulumi.OutputState }

func (SelfTracingResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SelfTracingResponse)(nil)).Elem()
}

func (o SelfTracingResponseOutput) ToSelfTracingResponseOutput() SelfTracingResponseOutput {
	return o
}

func (o SelfTracingResponseOutput) ToSelfTracingResponseOutputWithContext(ctx context.Context) SelfTracingResponseOutput {
	return o
}

// The self tracing interval.
func (o SelfTracingResponseOutput) IntervalSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SelfTracingResponse) *int { return v.IntervalSeconds }).(pulumi.IntPtrOutput)
}

// The toggle to enable/disable self tracing.
func (o SelfTracingResponseOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SelfTracingResponse) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

type SelfTracingResponsePtrOutput struct{ *pulumi.OutputState }

func (SelfTracingResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SelfTracingResponse)(nil)).Elem()
}

func (o SelfTracingResponsePtrOutput) ToSelfTracingResponsePtrOutput() SelfTracingResponsePtrOutput {
	return o
}

func (o SelfTracingResponsePtrOutput) ToSelfTracingResponsePtrOutputWithContext(ctx context.Context) SelfTracingResponsePtrOutput {
	return o
}

func (o SelfTracingResponsePtrOutput) Elem() SelfTracingResponseOutput {
	return o.ApplyT(func(v *SelfTracingResponse) SelfTracingResponse {
		if v != nil {
			return *v
		}
		var ret SelfTracingResponse
		return ret
	}).(SelfTracingResponseOutput)
}

// The self tracing interval.
func (o SelfTracingResponsePtrOutput) IntervalSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SelfTracingResponse) *int {
		if v == nil {
			return nil
		}
		return v.IntervalSeconds
	}).(pulumi.IntPtrOutput)
}

// The toggle to enable/disable self tracing.
func (o SelfTracingResponsePtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SelfTracingResponse) *string {
		if v == nil {
			return nil
		}
		return v.Mode
	}).(pulumi.StringPtrOutput)
}

// State Store Resource Rule properties.
type StateStoreResourceRule struct {
	// Allowed keyTypes pattern, string, binary. The key type used for matching, for example pattern tries to match the key to a glob-style pattern and string checks key is equal to value provided in keys.
	KeyType string `pulumi:"keyType"`
	// Give access to state store keys for the corresponding principals defined. When key type is pattern set glob-style pattern (e.g., '*', 'clients/*').
	Keys []string `pulumi:"keys"`
	// Give access for `Read`, `Write` and `ReadWrite` access level.
	Method string `pulumi:"method"`
}

// StateStoreResourceRuleInput is an input type that accepts StateStoreResourceRuleArgs and StateStoreResourceRuleOutput values.
// You can construct a concrete instance of `StateStoreResourceRuleInput` via:
//
//	StateStoreResourceRuleArgs{...}
type StateStoreResourceRuleInput interface {
	pulumi.Input

	ToStateStoreResourceRuleOutput() StateStoreResourceRuleOutput
	ToStateStoreResourceRuleOutputWithContext(context.Context) StateStoreResourceRuleOutput
}

// State Store Resource Rule properties.
type StateStoreResourceRuleArgs struct {
	// Allowed keyTypes pattern, string, binary. The key type used for matching, for example pattern tries to match the key to a glob-style pattern and string checks key is equal to value provided in keys.
	KeyType pulumi.StringInput `pulumi:"keyType"`
	// Give access to state store keys for the corresponding principals defined. When key type is pattern set glob-style pattern (e.g., '*', 'clients/*').
	Keys pulumi.StringArrayInput `pulumi:"keys"`
	// Give access for `Read`, `Write` and `ReadWrite` access level.
	Method pulumi.StringInput `pulumi:"method"`
}

func (StateStoreResourceRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StateStoreResourceRule)(nil)).Elem()
}

func (i StateStoreResourceRuleArgs) ToStateStoreResourceRuleOutput() StateStoreResourceRuleOutput {
	return i.ToStateStoreResourceRuleOutputWithContext(context.Background())
}

func (i StateStoreResourceRuleArgs) ToStateStoreResourceRuleOutputWithContext(ctx context.Context) StateStoreResourceRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StateStoreResourceRuleOutput)
}

// StateStoreResourceRuleArrayInput is an input type that accepts StateStoreResourceRuleArray and StateStoreResourceRuleArrayOutput values.
// You can construct a concrete instance of `StateStoreResourceRuleArrayInput` via:
//
//	StateStoreResourceRuleArray{ StateStoreResourceRuleArgs{...} }
type StateStoreResourceRuleArrayInput interface {
	pulumi.Input

	ToStateStoreResourceRuleArrayOutput() StateStoreResourceRuleArrayOutput
	ToStateStoreResourceRuleArrayOutputWithContext(context.Context) StateStoreResourceRuleArrayOutput
}

type StateStoreResourceRuleArray []StateStoreResourceRuleInput

func (StateStoreResourceRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StateStoreResourceRule)(nil)).Elem()
}

func (i StateStoreResourceRuleArray) ToStateStoreResourceRuleArrayOutput() StateStoreResourceRuleArrayOutput {
	return i.ToStateStoreResourceRuleArrayOutputWithContext(context.Background())
}

func (i StateStoreResourceRuleArray) ToStateStoreResourceRuleArrayOutputWithContext(ctx context.Context) StateStoreResourceRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StateStoreResourceRuleArrayOutput)
}

// State Store Resource Rule properties.
type StateStoreResourceRuleOutput struct{ *pulumi.OutputState }

func (StateStoreResourceRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StateStoreResourceRule)(nil)).Elem()
}

func (o StateStoreResourceRuleOutput) ToStateStoreResourceRuleOutput() StateStoreResourceRuleOutput {
	return o
}

func (o StateStoreResourceRuleOutput) ToStateStoreResourceRuleOutputWithContext(ctx context.Context) StateStoreResourceRuleOutput {
	return o
}

// Allowed keyTypes pattern, string, binary. The key type used for matching, for example pattern tries to match the key to a glob-style pattern and string checks key is equal to value provided in keys.
func (o StateStoreResourceRuleOutput) KeyType() pulumi.StringOutput {
	return o.ApplyT(func(v StateStoreResourceRule) string { return v.KeyType }).(pulumi.StringOutput)
}

// Give access to state store keys for the corresponding principals defined. When key type is pattern set glob-style pattern (e.g., '*', 'clients/*').
func (o StateStoreResourceRuleOutput) Keys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v StateStoreResourceRule) []string { return v.Keys }).(pulumi.StringArrayOutput)
}

// Give access for `Read`, `Write` and `ReadWrite` access level.
func (o StateStoreResourceRuleOutput) Method() pulumi.StringOutput {
	return o.ApplyT(func(v StateStoreResourceRule) string { return v.Method }).(pulumi.StringOutput)
}

type StateStoreResourceRuleArrayOutput struct{ *pulumi.OutputState }

func (StateStoreResourceRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StateStoreResourceRule)(nil)).Elem()
}

func (o StateStoreResourceRuleArrayOutput) ToStateStoreResourceRuleArrayOutput() StateStoreResourceRuleArrayOutput {
	return o
}

func (o StateStoreResourceRuleArrayOutput) ToStateStoreResourceRuleArrayOutputWithContext(ctx context.Context) StateStoreResourceRuleArrayOutput {
	return o
}

func (o StateStoreResourceRuleArrayOutput) Index(i pulumi.IntInput) StateStoreResourceRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StateStoreResourceRule {
		return vs[0].([]StateStoreResourceRule)[vs[1].(int)]
	}).(StateStoreResourceRuleOutput)
}

// State Store Resource Rule properties.
type StateStoreResourceRuleResponse struct {
	// Allowed keyTypes pattern, string, binary. The key type used for matching, for example pattern tries to match the key to a glob-style pattern and string checks key is equal to value provided in keys.
	KeyType string `pulumi:"keyType"`
	// Give access to state store keys for the corresponding principals defined. When key type is pattern set glob-style pattern (e.g., '*', 'clients/*').
	Keys []string `pulumi:"keys"`
	// Give access for `Read`, `Write` and `ReadWrite` access level.
	Method string `pulumi:"method"`
}

// State Store Resource Rule properties.
type StateStoreResourceRuleResponseOutput struct{ *pulumi.OutputState }

func (StateStoreResourceRuleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StateStoreResourceRuleResponse)(nil)).Elem()
}

func (o StateStoreResourceRuleResponseOutput) ToStateStoreResourceRuleResponseOutput() StateStoreResourceRuleResponseOutput {
	return o
}

func (o StateStoreResourceRuleResponseOutput) ToStateStoreResourceRuleResponseOutputWithContext(ctx context.Context) StateStoreResourceRuleResponseOutput {
	return o
}

// Allowed keyTypes pattern, string, binary. The key type used for matching, for example pattern tries to match the key to a glob-style pattern and string checks key is equal to value provided in keys.
func (o StateStoreResourceRuleResponseOutput) KeyType() pulumi.StringOutput {
	return o.ApplyT(func(v StateStoreResourceRuleResponse) string { return v.KeyType }).(pulumi.StringOutput)
}

// Give access to state store keys for the corresponding principals defined. When key type is pattern set glob-style pattern (e.g., '*', 'clients/*').
func (o StateStoreResourceRuleResponseOutput) Keys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v StateStoreResourceRuleResponse) []string { return v.Keys }).(pulumi.StringArrayOutput)
}

// Give access for `Read`, `Write` and `ReadWrite` access level.
func (o StateStoreResourceRuleResponseOutput) Method() pulumi.StringOutput {
	return o.ApplyT(func(v StateStoreResourceRuleResponse) string { return v.Method }).(pulumi.StringOutput)
}

type StateStoreResourceRuleResponseArrayOutput struct{ *pulumi.OutputState }

func (StateStoreResourceRuleResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StateStoreResourceRuleResponse)(nil)).Elem()
}

func (o StateStoreResourceRuleResponseArrayOutput) ToStateStoreResourceRuleResponseArrayOutput() StateStoreResourceRuleResponseArrayOutput {
	return o
}

func (o StateStoreResourceRuleResponseArrayOutput) ToStateStoreResourceRuleResponseArrayOutputWithContext(ctx context.Context) StateStoreResourceRuleResponseArrayOutput {
	return o
}

func (o StateStoreResourceRuleResponseArrayOutput) Index(i pulumi.IntInput) StateStoreResourceRuleResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StateStoreResourceRuleResponse {
		return vs[0].([]StateStoreResourceRuleResponse)[vs[1].(int)]
	}).(StateStoreResourceRuleResponseOutput)
}

// The settings of Subscriber Queue Limit.
type SubscriberQueueLimit struct {
	// The maximum length of the queue before messages start getting dropped.
	Length *float64 `pulumi:"length"`
	// The strategy to use for dropping messages from the queue.
	Strategy *string `pulumi:"strategy"`
}

// Defaults sets the appropriate defaults for SubscriberQueueLimit
func (val *SubscriberQueueLimit) Defaults() *SubscriberQueueLimit {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Strategy == nil {
		strategy_ := "None"
		tmp.Strategy = &strategy_
	}
	return &tmp
}

// SubscriberQueueLimitInput is an input type that accepts SubscriberQueueLimitArgs and SubscriberQueueLimitOutput values.
// You can construct a concrete instance of `SubscriberQueueLimitInput` via:
//
//	SubscriberQueueLimitArgs{...}
type SubscriberQueueLimitInput interface {
	pulumi.Input

	ToSubscriberQueueLimitOutput() SubscriberQueueLimitOutput
	ToSubscriberQueueLimitOutputWithContext(context.Context) SubscriberQueueLimitOutput
}

// The settings of Subscriber Queue Limit.
type SubscriberQueueLimitArgs struct {
	// The maximum length of the queue before messages start getting dropped.
	Length pulumi.Float64PtrInput `pulumi:"length"`
	// The strategy to use for dropping messages from the queue.
	Strategy pulumi.StringPtrInput `pulumi:"strategy"`
}

// Defaults sets the appropriate defaults for SubscriberQueueLimitArgs
func (val *SubscriberQueueLimitArgs) Defaults() *SubscriberQueueLimitArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Strategy == nil {
		tmp.Strategy = pulumi.StringPtr("None")
	}
	return &tmp
}
func (SubscriberQueueLimitArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubscriberQueueLimit)(nil)).Elem()
}

func (i SubscriberQueueLimitArgs) ToSubscriberQueueLimitOutput() SubscriberQueueLimitOutput {
	return i.ToSubscriberQueueLimitOutputWithContext(context.Background())
}

func (i SubscriberQueueLimitArgs) ToSubscriberQueueLimitOutputWithContext(ctx context.Context) SubscriberQueueLimitOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubscriberQueueLimitOutput)
}

func (i SubscriberQueueLimitArgs) ToSubscriberQueueLimitPtrOutput() SubscriberQueueLimitPtrOutput {
	return i.ToSubscriberQueueLimitPtrOutputWithContext(context.Background())
}

func (i SubscriberQueueLimitArgs) ToSubscriberQueueLimitPtrOutputWithContext(ctx context.Context) SubscriberQueueLimitPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubscriberQueueLimitOutput).ToSubscriberQueueLimitPtrOutputWithContext(ctx)
}

// SubscriberQueueLimitPtrInput is an input type that accepts SubscriberQueueLimitArgs, SubscriberQueueLimitPtr and SubscriberQueueLimitPtrOutput values.
// You can construct a concrete instance of `SubscriberQueueLimitPtrInput` via:
//
//	        SubscriberQueueLimitArgs{...}
//
//	or:
//
//	        nil
type SubscriberQueueLimitPtrInput interface {
	pulumi.Input

	ToSubscriberQueueLimitPtrOutput() SubscriberQueueLimitPtrOutput
	ToSubscriberQueueLimitPtrOutputWithContext(context.Context) SubscriberQueueLimitPtrOutput
}

type subscriberQueueLimitPtrType SubscriberQueueLimitArgs

func SubscriberQueueLimitPtr(v *SubscriberQueueLimitArgs) SubscriberQueueLimitPtrInput {
	return (*subscriberQueueLimitPtrType)(v)
}

func (*subscriberQueueLimitPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SubscriberQueueLimit)(nil)).Elem()
}

func (i *subscriberQueueLimitPtrType) ToSubscriberQueueLimitPtrOutput() SubscriberQueueLimitPtrOutput {
	return i.ToSubscriberQueueLimitPtrOutputWithContext(context.Background())
}

func (i *subscriberQueueLimitPtrType) ToSubscriberQueueLimitPtrOutputWithContext(ctx context.Context) SubscriberQueueLimitPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubscriberQueueLimitPtrOutput)
}

// The settings of Subscriber Queue Limit.
type SubscriberQueueLimitOutput struct{ *pulumi.OutputState }

func (SubscriberQueueLimitOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubscriberQueueLimit)(nil)).Elem()
}

func (o SubscriberQueueLimitOutput) ToSubscriberQueueLimitOutput() SubscriberQueueLimitOutput {
	return o
}

func (o SubscriberQueueLimitOutput) ToSubscriberQueueLimitOutputWithContext(ctx context.Context) SubscriberQueueLimitOutput {
	return o
}

func (o SubscriberQueueLimitOutput) ToSubscriberQueueLimitPtrOutput() SubscriberQueueLimitPtrOutput {
	return o.ToSubscriberQueueLimitPtrOutputWithContext(context.Background())
}

func (o SubscriberQueueLimitOutput) ToSubscriberQueueLimitPtrOutputWithContext(ctx context.Context) SubscriberQueueLimitPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SubscriberQueueLimit) *SubscriberQueueLimit {
		return &v
	}).(SubscriberQueueLimitPtrOutput)
}

// The maximum length of the queue before messages start getting dropped.
func (o SubscriberQueueLimitOutput) Length() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v SubscriberQueueLimit) *float64 { return v.Length }).(pulumi.Float64PtrOutput)
}

// The strategy to use for dropping messages from the queue.
func (o SubscriberQueueLimitOutput) Strategy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubscriberQueueLimit) *string { return v.Strategy }).(pulumi.StringPtrOutput)
}

type SubscriberQueueLimitPtrOutput struct{ *pulumi.OutputState }

func (SubscriberQueueLimitPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SubscriberQueueLimit)(nil)).Elem()
}

func (o SubscriberQueueLimitPtrOutput) ToSubscriberQueueLimitPtrOutput() SubscriberQueueLimitPtrOutput {
	return o
}

func (o SubscriberQueueLimitPtrOutput) ToSubscriberQueueLimitPtrOutputWithContext(ctx context.Context) SubscriberQueueLimitPtrOutput {
	return o
}

func (o SubscriberQueueLimitPtrOutput) Elem() SubscriberQueueLimitOutput {
	return o.ApplyT(func(v *SubscriberQueueLimit) SubscriberQueueLimit {
		if v != nil {
			return *v
		}
		var ret SubscriberQueueLimit
		return ret
	}).(SubscriberQueueLimitOutput)
}

// The maximum length of the queue before messages start getting dropped.
func (o SubscriberQueueLimitPtrOutput) Length() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *SubscriberQueueLimit) *float64 {
		if v == nil {
			return nil
		}
		return v.Length
	}).(pulumi.Float64PtrOutput)
}

// The strategy to use for dropping messages from the queue.
func (o SubscriberQueueLimitPtrOutput) Strategy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubscriberQueueLimit) *string {
		if v == nil {
			return nil
		}
		return v.Strategy
	}).(pulumi.StringPtrOutput)
}

// The settings of Subscriber Queue Limit.
type SubscriberQueueLimitResponse struct {
	// The maximum length of the queue before messages start getting dropped.
	Length *float64 `pulumi:"length"`
	// The strategy to use for dropping messages from the queue.
	Strategy *string `pulumi:"strategy"`
}

// Defaults sets the appropriate defaults for SubscriberQueueLimitResponse
func (val *SubscriberQueueLimitResponse) Defaults() *SubscriberQueueLimitResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Strategy == nil {
		strategy_ := "None"
		tmp.Strategy = &strategy_
	}
	return &tmp
}

// The settings of Subscriber Queue Limit.
type SubscriberQueueLimitResponseOutput struct{ *pulumi.OutputState }

func (SubscriberQueueLimitResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubscriberQueueLimitResponse)(nil)).Elem()
}

func (o SubscriberQueueLimitResponseOutput) ToSubscriberQueueLimitResponseOutput() SubscriberQueueLimitResponseOutput {
	return o
}

func (o SubscriberQueueLimitResponseOutput) ToSubscriberQueueLimitResponseOutputWithContext(ctx context.Context) SubscriberQueueLimitResponseOutput {
	return o
}

// The maximum length of the queue before messages start getting dropped.
func (o SubscriberQueueLimitResponseOutput) Length() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v SubscriberQueueLimitResponse) *float64 { return v.Length }).(pulumi.Float64PtrOutput)
}

// The strategy to use for dropping messages from the queue.
func (o SubscriberQueueLimitResponseOutput) Strategy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubscriberQueueLimitResponse) *string { return v.Strategy }).(pulumi.StringPtrOutput)
}

type SubscriberQueueLimitResponsePtrOutput struct{ *pulumi.OutputState }

func (SubscriberQueueLimitResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SubscriberQueueLimitResponse)(nil)).Elem()
}

func (o SubscriberQueueLimitResponsePtrOutput) ToSubscriberQueueLimitResponsePtrOutput() SubscriberQueueLimitResponsePtrOutput {
	return o
}

func (o SubscriberQueueLimitResponsePtrOutput) ToSubscriberQueueLimitResponsePtrOutputWithContext(ctx context.Context) SubscriberQueueLimitResponsePtrOutput {
	return o
}

func (o SubscriberQueueLimitResponsePtrOutput) Elem() SubscriberQueueLimitResponseOutput {
	return o.ApplyT(func(v *SubscriberQueueLimitResponse) SubscriberQueueLimitResponse {
		if v != nil {
			return *v
		}
		var ret SubscriberQueueLimitResponse
		return ret
	}).(SubscriberQueueLimitResponseOutput)
}

// The maximum length of the queue before messages start getting dropped.
func (o SubscriberQueueLimitResponsePtrOutput) Length() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *SubscriberQueueLimitResponse) *float64 {
		if v == nil {
			return nil
		}
		return v.Length
	}).(pulumi.Float64PtrOutput)
}

// The strategy to use for dropping messages from the queue.
func (o SubscriberQueueLimitResponsePtrOutput) Strategy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubscriberQueueLimitResponse) *string {
		if v == nil {
			return nil
		}
		return v.Strategy
	}).(pulumi.StringPtrOutput)
}

// Metadata pertaining to creation and last modification of the resource.
type SystemDataResponse struct {
	// The timestamp of resource creation (UTC).
	CreatedAt *string `pulumi:"createdAt"`
	// The identity that created the resource.
	CreatedBy *string `pulumi:"createdBy"`
	// The type of identity that created the resource.
	CreatedByType *string `pulumi:"createdByType"`
	// The timestamp of resource last modification (UTC)
	LastModifiedAt *string `pulumi:"lastModifiedAt"`
	// The identity that last modified the resource.
	LastModifiedBy *string `pulumi:"lastModifiedBy"`
	// The type of identity that last modified the resource.
	LastModifiedByType *string `pulumi:"lastModifiedByType"`
}

// Metadata pertaining to creation and last modification of the resource.
type SystemDataResponseOutput struct{ *pulumi.OutputState }

func (SystemDataResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemDataResponse)(nil)).Elem()
}

func (o SystemDataResponseOutput) ToSystemDataResponseOutput() SystemDataResponseOutput {
	return o
}

func (o SystemDataResponseOutput) ToSystemDataResponseOutputWithContext(ctx context.Context) SystemDataResponseOutput {
	return o
}

// The timestamp of resource creation (UTC).
func (o SystemDataResponseOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedAt }).(pulumi.StringPtrOutput)
}

// The identity that created the resource.
func (o SystemDataResponseOutput) CreatedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedBy }).(pulumi.StringPtrOutput)
}

// The type of identity that created the resource.
func (o SystemDataResponseOutput) CreatedByType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedByType }).(pulumi.StringPtrOutput)
}

// The timestamp of resource last modification (UTC)
func (o SystemDataResponseOutput) LastModifiedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedAt }).(pulumi.StringPtrOutput)
}

// The identity that last modified the resource.
func (o SystemDataResponseOutput) LastModifiedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedBy }).(pulumi.StringPtrOutput)
}

// The type of identity that last modified the resource.
func (o SystemDataResponseOutput) LastModifiedByType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedByType }).(pulumi.StringPtrOutput)
}

// Collection of different TLS types, NOTE- Enum at a time only one of them needs to be supported
type TlsCertMethod struct {
	// Option 1 - Automatic TLS server certificate management with cert-manager.
	CertManagerCertificateSpec *CertManagerCertificateSpec `pulumi:"certManagerCertificateSpec"`
	// Option 2 - Manual TLS server certificate management through a defined secret.
	Manual *X509ManualCertificate `pulumi:"manual"`
	// Mode of TLS server certificate management.
	Mode string `pulumi:"mode"`
}

// Defaults sets the appropriate defaults for TlsCertMethod
func (val *TlsCertMethod) Defaults() *TlsCertMethod {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.CertManagerCertificateSpec = tmp.CertManagerCertificateSpec.Defaults()

	return &tmp
}

// TlsCertMethodInput is an input type that accepts TlsCertMethodArgs and TlsCertMethodOutput values.
// You can construct a concrete instance of `TlsCertMethodInput` via:
//
//	TlsCertMethodArgs{...}
type TlsCertMethodInput interface {
	pulumi.Input

	ToTlsCertMethodOutput() TlsCertMethodOutput
	ToTlsCertMethodOutputWithContext(context.Context) TlsCertMethodOutput
}

// Collection of different TLS types, NOTE- Enum at a time only one of them needs to be supported
type TlsCertMethodArgs struct {
	// Option 1 - Automatic TLS server certificate management with cert-manager.
	CertManagerCertificateSpec CertManagerCertificateSpecPtrInput `pulumi:"certManagerCertificateSpec"`
	// Option 2 - Manual TLS server certificate management through a defined secret.
	Manual X509ManualCertificatePtrInput `pulumi:"manual"`
	// Mode of TLS server certificate management.
	Mode pulumi.StringInput `pulumi:"mode"`
}

// Defaults sets the appropriate defaults for TlsCertMethodArgs
func (val *TlsCertMethodArgs) Defaults() *TlsCertMethodArgs {
	if val == nil {
		return nil
	}
	tmp := *val

	return &tmp
}
func (TlsCertMethodArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TlsCertMethod)(nil)).Elem()
}

func (i TlsCertMethodArgs) ToTlsCertMethodOutput() TlsCertMethodOutput {
	return i.ToTlsCertMethodOutputWithContext(context.Background())
}

func (i TlsCertMethodArgs) ToTlsCertMethodOutputWithContext(ctx context.Context) TlsCertMethodOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TlsCertMethodOutput)
}

func (i TlsCertMethodArgs) ToTlsCertMethodPtrOutput() TlsCertMethodPtrOutput {
	return i.ToTlsCertMethodPtrOutputWithContext(context.Background())
}

func (i TlsCertMethodArgs) ToTlsCertMethodPtrOutputWithContext(ctx context.Context) TlsCertMethodPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TlsCertMethodOutput).ToTlsCertMethodPtrOutputWithContext(ctx)
}

// TlsCertMethodPtrInput is an input type that accepts TlsCertMethodArgs, TlsCertMethodPtr and TlsCertMethodPtrOutput values.
// You can construct a concrete instance of `TlsCertMethodPtrInput` via:
//
//	        TlsCertMethodArgs{...}
//
//	or:
//
//	        nil
type TlsCertMethodPtrInput interface {
	pulumi.Input

	ToTlsCertMethodPtrOutput() TlsCertMethodPtrOutput
	ToTlsCertMethodPtrOutputWithContext(context.Context) TlsCertMethodPtrOutput
}

type tlsCertMethodPtrType TlsCertMethodArgs

func TlsCertMethodPtr(v *TlsCertMethodArgs) TlsCertMethodPtrInput {
	return (*tlsCertMethodPtrType)(v)
}

func (*tlsCertMethodPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TlsCertMethod)(nil)).Elem()
}

func (i *tlsCertMethodPtrType) ToTlsCertMethodPtrOutput() TlsCertMethodPtrOutput {
	return i.ToTlsCertMethodPtrOutputWithContext(context.Background())
}

func (i *tlsCertMethodPtrType) ToTlsCertMethodPtrOutputWithContext(ctx context.Context) TlsCertMethodPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TlsCertMethodPtrOutput)
}

// Collection of different TLS types, NOTE- Enum at a time only one of them needs to be supported
type TlsCertMethodOutput struct{ *pulumi.OutputState }

func (TlsCertMethodOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TlsCertMethod)(nil)).Elem()
}

func (o TlsCertMethodOutput) ToTlsCertMethodOutput() TlsCertMethodOutput {
	return o
}

func (o TlsCertMethodOutput) ToTlsCertMethodOutputWithContext(ctx context.Context) TlsCertMethodOutput {
	return o
}

func (o TlsCertMethodOutput) ToTlsCertMethodPtrOutput() TlsCertMethodPtrOutput {
	return o.ToTlsCertMethodPtrOutputWithContext(context.Background())
}

func (o TlsCertMethodOutput) ToTlsCertMethodPtrOutputWithContext(ctx context.Context) TlsCertMethodPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TlsCertMethod) *TlsCertMethod {
		return &v
	}).(TlsCertMethodPtrOutput)
}

// Option 1 - Automatic TLS server certificate management with cert-manager.
func (o TlsCertMethodOutput) CertManagerCertificateSpec() CertManagerCertificateSpecPtrOutput {
	return o.ApplyT(func(v TlsCertMethod) *CertManagerCertificateSpec { return v.CertManagerCertificateSpec }).(CertManagerCertificateSpecPtrOutput)
}

// Option 2 - Manual TLS server certificate management through a defined secret.
func (o TlsCertMethodOutput) Manual() X509ManualCertificatePtrOutput {
	return o.ApplyT(func(v TlsCertMethod) *X509ManualCertificate { return v.Manual }).(X509ManualCertificatePtrOutput)
}

// Mode of TLS server certificate management.
func (o TlsCertMethodOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v TlsCertMethod) string { return v.Mode }).(pulumi.StringOutput)
}

type TlsCertMethodPtrOutput struct{ *pulumi.OutputState }

func (TlsCertMethodPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TlsCertMethod)(nil)).Elem()
}

func (o TlsCertMethodPtrOutput) ToTlsCertMethodPtrOutput() TlsCertMethodPtrOutput {
	return o
}

func (o TlsCertMethodPtrOutput) ToTlsCertMethodPtrOutputWithContext(ctx context.Context) TlsCertMethodPtrOutput {
	return o
}

func (o TlsCertMethodPtrOutput) Elem() TlsCertMethodOutput {
	return o.ApplyT(func(v *TlsCertMethod) TlsCertMethod {
		if v != nil {
			return *v
		}
		var ret TlsCertMethod
		return ret
	}).(TlsCertMethodOutput)
}

// Option 1 - Automatic TLS server certificate management with cert-manager.
func (o TlsCertMethodPtrOutput) CertManagerCertificateSpec() CertManagerCertificateSpecPtrOutput {
	return o.ApplyT(func(v *TlsCertMethod) *CertManagerCertificateSpec {
		if v == nil {
			return nil
		}
		return v.CertManagerCertificateSpec
	}).(CertManagerCertificateSpecPtrOutput)
}

// Option 2 - Manual TLS server certificate management through a defined secret.
func (o TlsCertMethodPtrOutput) Manual() X509ManualCertificatePtrOutput {
	return o.ApplyT(func(v *TlsCertMethod) *X509ManualCertificate {
		if v == nil {
			return nil
		}
		return v.Manual
	}).(X509ManualCertificatePtrOutput)
}

// Mode of TLS server certificate management.
func (o TlsCertMethodPtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TlsCertMethod) *string {
		if v == nil {
			return nil
		}
		return &v.Mode
	}).(pulumi.StringPtrOutput)
}

// Collection of different TLS types, NOTE- Enum at a time only one of them needs to be supported
type TlsCertMethodResponse struct {
	// Option 1 - Automatic TLS server certificate management with cert-manager.
	CertManagerCertificateSpec *CertManagerCertificateSpecResponse `pulumi:"certManagerCertificateSpec"`
	// Option 2 - Manual TLS server certificate management through a defined secret.
	Manual *X509ManualCertificateResponse `pulumi:"manual"`
	// Mode of TLS server certificate management.
	Mode string `pulumi:"mode"`
}

// Defaults sets the appropriate defaults for TlsCertMethodResponse
func (val *TlsCertMethodResponse) Defaults() *TlsCertMethodResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.CertManagerCertificateSpec = tmp.CertManagerCertificateSpec.Defaults()

	return &tmp
}

// Collection of different TLS types, NOTE- Enum at a time only one of them needs to be supported
type TlsCertMethodResponseOutput struct{ *pulumi.OutputState }

func (TlsCertMethodResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TlsCertMethodResponse)(nil)).Elem()
}

func (o TlsCertMethodResponseOutput) ToTlsCertMethodResponseOutput() TlsCertMethodResponseOutput {
	return o
}

func (o TlsCertMethodResponseOutput) ToTlsCertMethodResponseOutputWithContext(ctx context.Context) TlsCertMethodResponseOutput {
	return o
}

// Option 1 - Automatic TLS server certificate management with cert-manager.
func (o TlsCertMethodResponseOutput) CertManagerCertificateSpec() CertManagerCertificateSpecResponsePtrOutput {
	return o.ApplyT(func(v TlsCertMethodResponse) *CertManagerCertificateSpecResponse { return v.CertManagerCertificateSpec }).(CertManagerCertificateSpecResponsePtrOutput)
}

// Option 2 - Manual TLS server certificate management through a defined secret.
func (o TlsCertMethodResponseOutput) Manual() X509ManualCertificateResponsePtrOutput {
	return o.ApplyT(func(v TlsCertMethodResponse) *X509ManualCertificateResponse { return v.Manual }).(X509ManualCertificateResponsePtrOutput)
}

// Mode of TLS server certificate management.
func (o TlsCertMethodResponseOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v TlsCertMethodResponse) string { return v.Mode }).(pulumi.StringOutput)
}

type TlsCertMethodResponsePtrOutput struct{ *pulumi.OutputState }

func (TlsCertMethodResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TlsCertMethodResponse)(nil)).Elem()
}

func (o TlsCertMethodResponsePtrOutput) ToTlsCertMethodResponsePtrOutput() TlsCertMethodResponsePtrOutput {
	return o
}

func (o TlsCertMethodResponsePtrOutput) ToTlsCertMethodResponsePtrOutputWithContext(ctx context.Context) TlsCertMethodResponsePtrOutput {
	return o
}

func (o TlsCertMethodResponsePtrOutput) Elem() TlsCertMethodResponseOutput {
	return o.ApplyT(func(v *TlsCertMethodResponse) TlsCertMethodResponse {
		if v != nil {
			return *v
		}
		var ret TlsCertMethodResponse
		return ret
	}).(TlsCertMethodResponseOutput)
}

// Option 1 - Automatic TLS server certificate management with cert-manager.
func (o TlsCertMethodResponsePtrOutput) CertManagerCertificateSpec() CertManagerCertificateSpecResponsePtrOutput {
	return o.ApplyT(func(v *TlsCertMethodResponse) *CertManagerCertificateSpecResponse {
		if v == nil {
			return nil
		}
		return v.CertManagerCertificateSpec
	}).(CertManagerCertificateSpecResponsePtrOutput)
}

// Option 2 - Manual TLS server certificate management through a defined secret.
func (o TlsCertMethodResponsePtrOutput) Manual() X509ManualCertificateResponsePtrOutput {
	return o.ApplyT(func(v *TlsCertMethodResponse) *X509ManualCertificateResponse {
		if v == nil {
			return nil
		}
		return v.Manual
	}).(X509ManualCertificateResponsePtrOutput)
}

// Mode of TLS server certificate management.
func (o TlsCertMethodResponsePtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TlsCertMethodResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Mode
	}).(pulumi.StringPtrOutput)
}

// Tls properties
type TlsProperties struct {
	// Mode for TLS.
	Mode *string `pulumi:"mode"`
	// Trusted CA certificate config map.
	TrustedCaCertificateConfigMapRef *string `pulumi:"trustedCaCertificateConfigMapRef"`
}

// Defaults sets the appropriate defaults for TlsProperties
func (val *TlsProperties) Defaults() *TlsProperties {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Mode == nil {
		mode_ := "Enabled"
		tmp.Mode = &mode_
	}
	return &tmp
}

// TlsPropertiesInput is an input type that accepts TlsPropertiesArgs and TlsPropertiesOutput values.
// You can construct a concrete instance of `TlsPropertiesInput` via:
//
//	TlsPropertiesArgs{...}
type TlsPropertiesInput interface {
	pulumi.Input

	ToTlsPropertiesOutput() TlsPropertiesOutput
	ToTlsPropertiesOutputWithContext(context.Context) TlsPropertiesOutput
}

// Tls properties
type TlsPropertiesArgs struct {
	// Mode for TLS.
	Mode pulumi.StringPtrInput `pulumi:"mode"`
	// Trusted CA certificate config map.
	TrustedCaCertificateConfigMapRef pulumi.StringPtrInput `pulumi:"trustedCaCertificateConfigMapRef"`
}

// Defaults sets the appropriate defaults for TlsPropertiesArgs
func (val *TlsPropertiesArgs) Defaults() *TlsPropertiesArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Mode == nil {
		tmp.Mode = pulumi.StringPtr("Enabled")
	}
	return &tmp
}
func (TlsPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TlsProperties)(nil)).Elem()
}

func (i TlsPropertiesArgs) ToTlsPropertiesOutput() TlsPropertiesOutput {
	return i.ToTlsPropertiesOutputWithContext(context.Background())
}

func (i TlsPropertiesArgs) ToTlsPropertiesOutputWithContext(ctx context.Context) TlsPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TlsPropertiesOutput)
}

func (i TlsPropertiesArgs) ToTlsPropertiesPtrOutput() TlsPropertiesPtrOutput {
	return i.ToTlsPropertiesPtrOutputWithContext(context.Background())
}

func (i TlsPropertiesArgs) ToTlsPropertiesPtrOutputWithContext(ctx context.Context) TlsPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TlsPropertiesOutput).ToTlsPropertiesPtrOutputWithContext(ctx)
}

// TlsPropertiesPtrInput is an input type that accepts TlsPropertiesArgs, TlsPropertiesPtr and TlsPropertiesPtrOutput values.
// You can construct a concrete instance of `TlsPropertiesPtrInput` via:
//
//	        TlsPropertiesArgs{...}
//
//	or:
//
//	        nil
type TlsPropertiesPtrInput interface {
	pulumi.Input

	ToTlsPropertiesPtrOutput() TlsPropertiesPtrOutput
	ToTlsPropertiesPtrOutputWithContext(context.Context) TlsPropertiesPtrOutput
}

type tlsPropertiesPtrType TlsPropertiesArgs

func TlsPropertiesPtr(v *TlsPropertiesArgs) TlsPropertiesPtrInput {
	return (*tlsPropertiesPtrType)(v)
}

func (*tlsPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TlsProperties)(nil)).Elem()
}

func (i *tlsPropertiesPtrType) ToTlsPropertiesPtrOutput() TlsPropertiesPtrOutput {
	return i.ToTlsPropertiesPtrOutputWithContext(context.Background())
}

func (i *tlsPropertiesPtrType) ToTlsPropertiesPtrOutputWithContext(ctx context.Context) TlsPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TlsPropertiesPtrOutput)
}

// Tls properties
type TlsPropertiesOutput struct{ *pulumi.OutputState }

func (TlsPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TlsProperties)(nil)).Elem()
}

func (o TlsPropertiesOutput) ToTlsPropertiesOutput() TlsPropertiesOutput {
	return o
}

func (o TlsPropertiesOutput) ToTlsPropertiesOutputWithContext(ctx context.Context) TlsPropertiesOutput {
	return o
}

func (o TlsPropertiesOutput) ToTlsPropertiesPtrOutput() TlsPropertiesPtrOutput {
	return o.ToTlsPropertiesPtrOutputWithContext(context.Background())
}

func (o TlsPropertiesOutput) ToTlsPropertiesPtrOutputWithContext(ctx context.Context) TlsPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TlsProperties) *TlsProperties {
		return &v
	}).(TlsPropertiesPtrOutput)
}

// Mode for TLS.
func (o TlsPropertiesOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TlsProperties) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

// Trusted CA certificate config map.
func (o TlsPropertiesOutput) TrustedCaCertificateConfigMapRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TlsProperties) *string { return v.TrustedCaCertificateConfigMapRef }).(pulumi.StringPtrOutput)
}

type TlsPropertiesPtrOutput struct{ *pulumi.OutputState }

func (TlsPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TlsProperties)(nil)).Elem()
}

func (o TlsPropertiesPtrOutput) ToTlsPropertiesPtrOutput() TlsPropertiesPtrOutput {
	return o
}

func (o TlsPropertiesPtrOutput) ToTlsPropertiesPtrOutputWithContext(ctx context.Context) TlsPropertiesPtrOutput {
	return o
}

func (o TlsPropertiesPtrOutput) Elem() TlsPropertiesOutput {
	return o.ApplyT(func(v *TlsProperties) TlsProperties {
		if v != nil {
			return *v
		}
		var ret TlsProperties
		return ret
	}).(TlsPropertiesOutput)
}

// Mode for TLS.
func (o TlsPropertiesPtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TlsProperties) *string {
		if v == nil {
			return nil
		}
		return v.Mode
	}).(pulumi.StringPtrOutput)
}

// Trusted CA certificate config map.
func (o TlsPropertiesPtrOutput) TrustedCaCertificateConfigMapRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TlsProperties) *string {
		if v == nil {
			return nil
		}
		return v.TrustedCaCertificateConfigMapRef
	}).(pulumi.StringPtrOutput)
}

// Tls properties
type TlsPropertiesResponse struct {
	// Mode for TLS.
	Mode *string `pulumi:"mode"`
	// Trusted CA certificate config map.
	TrustedCaCertificateConfigMapRef *string `pulumi:"trustedCaCertificateConfigMapRef"`
}

// Defaults sets the appropriate defaults for TlsPropertiesResponse
func (val *TlsPropertiesResponse) Defaults() *TlsPropertiesResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Mode == nil {
		mode_ := "Enabled"
		tmp.Mode = &mode_
	}
	return &tmp
}

// Tls properties
type TlsPropertiesResponseOutput struct{ *pulumi.OutputState }

func (TlsPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TlsPropertiesResponse)(nil)).Elem()
}

func (o TlsPropertiesResponseOutput) ToTlsPropertiesResponseOutput() TlsPropertiesResponseOutput {
	return o
}

func (o TlsPropertiesResponseOutput) ToTlsPropertiesResponseOutputWithContext(ctx context.Context) TlsPropertiesResponseOutput {
	return o
}

// Mode for TLS.
func (o TlsPropertiesResponseOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TlsPropertiesResponse) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

// Trusted CA certificate config map.
func (o TlsPropertiesResponseOutput) TrustedCaCertificateConfigMapRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TlsPropertiesResponse) *string { return v.TrustedCaCertificateConfigMapRef }).(pulumi.StringPtrOutput)
}

type TlsPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (TlsPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TlsPropertiesResponse)(nil)).Elem()
}

func (o TlsPropertiesResponsePtrOutput) ToTlsPropertiesResponsePtrOutput() TlsPropertiesResponsePtrOutput {
	return o
}

func (o TlsPropertiesResponsePtrOutput) ToTlsPropertiesResponsePtrOutputWithContext(ctx context.Context) TlsPropertiesResponsePtrOutput {
	return o
}

func (o TlsPropertiesResponsePtrOutput) Elem() TlsPropertiesResponseOutput {
	return o.ApplyT(func(v *TlsPropertiesResponse) TlsPropertiesResponse {
		if v != nil {
			return *v
		}
		var ret TlsPropertiesResponse
		return ret
	}).(TlsPropertiesResponseOutput)
}

// Mode for TLS.
func (o TlsPropertiesResponsePtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TlsPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.Mode
	}).(pulumi.StringPtrOutput)
}

// Trusted CA certificate config map.
func (o TlsPropertiesResponsePtrOutput) TrustedCaCertificateConfigMapRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TlsPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.TrustedCaCertificateConfigMapRef
	}).(pulumi.StringPtrOutput)
}

// Broker Diagnostic Trace properties
type Traces struct {
	// The cache size in megabytes.
	CacheSizeMegabytes *int `pulumi:"cacheSizeMegabytes"`
	// The toggle to enable/disable traces.
	Mode *string `pulumi:"mode"`
	// The self tracing properties.
	SelfTracing *SelfTracing `pulumi:"selfTracing"`
	// The span channel capacity.
	SpanChannelCapacity *int `pulumi:"spanChannelCapacity"`
}

// Defaults sets the appropriate defaults for Traces
func (val *Traces) Defaults() *Traces {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.CacheSizeMegabytes == nil {
		cacheSizeMegabytes_ := 16
		tmp.CacheSizeMegabytes = &cacheSizeMegabytes_
	}
	if tmp.Mode == nil {
		mode_ := "Enabled"
		tmp.Mode = &mode_
	}
	tmp.SelfTracing = tmp.SelfTracing.Defaults()

	if tmp.SpanChannelCapacity == nil {
		spanChannelCapacity_ := 1000
		tmp.SpanChannelCapacity = &spanChannelCapacity_
	}
	return &tmp
}

// TracesInput is an input type that accepts TracesArgs and TracesOutput values.
// You can construct a concrete instance of `TracesInput` via:
//
//	TracesArgs{...}
type TracesInput interface {
	pulumi.Input

	ToTracesOutput() TracesOutput
	ToTracesOutputWithContext(context.Context) TracesOutput
}

// Broker Diagnostic Trace properties
type TracesArgs struct {
	// The cache size in megabytes.
	CacheSizeMegabytes pulumi.IntPtrInput `pulumi:"cacheSizeMegabytes"`
	// The toggle to enable/disable traces.
	Mode pulumi.StringPtrInput `pulumi:"mode"`
	// The self tracing properties.
	SelfTracing SelfTracingPtrInput `pulumi:"selfTracing"`
	// The span channel capacity.
	SpanChannelCapacity pulumi.IntPtrInput `pulumi:"spanChannelCapacity"`
}

// Defaults sets the appropriate defaults for TracesArgs
func (val *TracesArgs) Defaults() *TracesArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.CacheSizeMegabytes == nil {
		tmp.CacheSizeMegabytes = pulumi.IntPtr(16)
	}
	if tmp.Mode == nil {
		tmp.Mode = pulumi.StringPtr("Enabled")
	}

	if tmp.SpanChannelCapacity == nil {
		tmp.SpanChannelCapacity = pulumi.IntPtr(1000)
	}
	return &tmp
}
func (TracesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Traces)(nil)).Elem()
}

func (i TracesArgs) ToTracesOutput() TracesOutput {
	return i.ToTracesOutputWithContext(context.Background())
}

func (i TracesArgs) ToTracesOutputWithContext(ctx context.Context) TracesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TracesOutput)
}

func (i TracesArgs) ToTracesPtrOutput() TracesPtrOutput {
	return i.ToTracesPtrOutputWithContext(context.Background())
}

func (i TracesArgs) ToTracesPtrOutputWithContext(ctx context.Context) TracesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TracesOutput).ToTracesPtrOutputWithContext(ctx)
}

// TracesPtrInput is an input type that accepts TracesArgs, TracesPtr and TracesPtrOutput values.
// You can construct a concrete instance of `TracesPtrInput` via:
//
//	        TracesArgs{...}
//
//	or:
//
//	        nil
type TracesPtrInput interface {
	pulumi.Input

	ToTracesPtrOutput() TracesPtrOutput
	ToTracesPtrOutputWithContext(context.Context) TracesPtrOutput
}

type tracesPtrType TracesArgs

func TracesPtr(v *TracesArgs) TracesPtrInput {
	return (*tracesPtrType)(v)
}

func (*tracesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Traces)(nil)).Elem()
}

func (i *tracesPtrType) ToTracesPtrOutput() TracesPtrOutput {
	return i.ToTracesPtrOutputWithContext(context.Background())
}

func (i *tracesPtrType) ToTracesPtrOutputWithContext(ctx context.Context) TracesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TracesPtrOutput)
}

// Broker Diagnostic Trace properties
type TracesOutput struct{ *pulumi.OutputState }

func (TracesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Traces)(nil)).Elem()
}

func (o TracesOutput) ToTracesOutput() TracesOutput {
	return o
}

func (o TracesOutput) ToTracesOutputWithContext(ctx context.Context) TracesOutput {
	return o
}

func (o TracesOutput) ToTracesPtrOutput() TracesPtrOutput {
	return o.ToTracesPtrOutputWithContext(context.Background())
}

func (o TracesOutput) ToTracesPtrOutputWithContext(ctx context.Context) TracesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Traces) *Traces {
		return &v
	}).(TracesPtrOutput)
}

// The cache size in megabytes.
func (o TracesOutput) CacheSizeMegabytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Traces) *int { return v.CacheSizeMegabytes }).(pulumi.IntPtrOutput)
}

// The toggle to enable/disable traces.
func (o TracesOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Traces) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

// The self tracing properties.
func (o TracesOutput) SelfTracing() SelfTracingPtrOutput {
	return o.ApplyT(func(v Traces) *SelfTracing { return v.SelfTracing }).(SelfTracingPtrOutput)
}

// The span channel capacity.
func (o TracesOutput) SpanChannelCapacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Traces) *int { return v.SpanChannelCapacity }).(pulumi.IntPtrOutput)
}

type TracesPtrOutput struct{ *pulumi.OutputState }

func (TracesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Traces)(nil)).Elem()
}

func (o TracesPtrOutput) ToTracesPtrOutput() TracesPtrOutput {
	return o
}

func (o TracesPtrOutput) ToTracesPtrOutputWithContext(ctx context.Context) TracesPtrOutput {
	return o
}

func (o TracesPtrOutput) Elem() TracesOutput {
	return o.ApplyT(func(v *Traces) Traces {
		if v != nil {
			return *v
		}
		var ret Traces
		return ret
	}).(TracesOutput)
}

// The cache size in megabytes.
func (o TracesPtrOutput) CacheSizeMegabytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Traces) *int {
		if v == nil {
			return nil
		}
		return v.CacheSizeMegabytes
	}).(pulumi.IntPtrOutput)
}

// The toggle to enable/disable traces.
func (o TracesPtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Traces) *string {
		if v == nil {
			return nil
		}
		return v.Mode
	}).(pulumi.StringPtrOutput)
}

// The self tracing properties.
func (o TracesPtrOutput) SelfTracing() SelfTracingPtrOutput {
	return o.ApplyT(func(v *Traces) *SelfTracing {
		if v == nil {
			return nil
		}
		return v.SelfTracing
	}).(SelfTracingPtrOutput)
}

// The span channel capacity.
func (o TracesPtrOutput) SpanChannelCapacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Traces) *int {
		if v == nil {
			return nil
		}
		return v.SpanChannelCapacity
	}).(pulumi.IntPtrOutput)
}

// Broker Diagnostic Trace properties
type TracesResponse struct {
	// The cache size in megabytes.
	CacheSizeMegabytes *int `pulumi:"cacheSizeMegabytes"`
	// The toggle to enable/disable traces.
	Mode *string `pulumi:"mode"`
	// The self tracing properties.
	SelfTracing *SelfTracingResponse `pulumi:"selfTracing"`
	// The span channel capacity.
	SpanChannelCapacity *int `pulumi:"spanChannelCapacity"`
}

// Defaults sets the appropriate defaults for TracesResponse
func (val *TracesResponse) Defaults() *TracesResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.CacheSizeMegabytes == nil {
		cacheSizeMegabytes_ := 16
		tmp.CacheSizeMegabytes = &cacheSizeMegabytes_
	}
	if tmp.Mode == nil {
		mode_ := "Enabled"
		tmp.Mode = &mode_
	}
	tmp.SelfTracing = tmp.SelfTracing.Defaults()

	if tmp.SpanChannelCapacity == nil {
		spanChannelCapacity_ := 1000
		tmp.SpanChannelCapacity = &spanChannelCapacity_
	}
	return &tmp
}

// Broker Diagnostic Trace properties
type TracesResponseOutput struct{ *pulumi.OutputState }

func (TracesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TracesResponse)(nil)).Elem()
}

func (o TracesResponseOutput) ToTracesResponseOutput() TracesResponseOutput {
	return o
}

func (o TracesResponseOutput) ToTracesResponseOutputWithContext(ctx context.Context) TracesResponseOutput {
	return o
}

// The cache size in megabytes.
func (o TracesResponseOutput) CacheSizeMegabytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TracesResponse) *int { return v.CacheSizeMegabytes }).(pulumi.IntPtrOutput)
}

// The toggle to enable/disable traces.
func (o TracesResponseOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TracesResponse) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

// The self tracing properties.
func (o TracesResponseOutput) SelfTracing() SelfTracingResponsePtrOutput {
	return o.ApplyT(func(v TracesResponse) *SelfTracingResponse { return v.SelfTracing }).(SelfTracingResponsePtrOutput)
}

// The span channel capacity.
func (o TracesResponseOutput) SpanChannelCapacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TracesResponse) *int { return v.SpanChannelCapacity }).(pulumi.IntPtrOutput)
}

type TracesResponsePtrOutput struct{ *pulumi.OutputState }

func (TracesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TracesResponse)(nil)).Elem()
}

func (o TracesResponsePtrOutput) ToTracesResponsePtrOutput() TracesResponsePtrOutput {
	return o
}

func (o TracesResponsePtrOutput) ToTracesResponsePtrOutputWithContext(ctx context.Context) TracesResponsePtrOutput {
	return o
}

func (o TracesResponsePtrOutput) Elem() TracesResponseOutput {
	return o.ApplyT(func(v *TracesResponse) TracesResponse {
		if v != nil {
			return *v
		}
		var ret TracesResponse
		return ret
	}).(TracesResponseOutput)
}

// The cache size in megabytes.
func (o TracesResponsePtrOutput) CacheSizeMegabytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TracesResponse) *int {
		if v == nil {
			return nil
		}
		return v.CacheSizeMegabytes
	}).(pulumi.IntPtrOutput)
}

// The toggle to enable/disable traces.
func (o TracesResponsePtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TracesResponse) *string {
		if v == nil {
			return nil
		}
		return v.Mode
	}).(pulumi.StringPtrOutput)
}

// The self tracing properties.
func (o TracesResponsePtrOutput) SelfTracing() SelfTracingResponsePtrOutput {
	return o.ApplyT(func(v *TracesResponse) *SelfTracingResponse {
		if v == nil {
			return nil
		}
		return v.SelfTracing
	}).(SelfTracingResponsePtrOutput)
}

// The span channel capacity.
func (o TracesResponsePtrOutput) SpanChannelCapacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TracesResponse) *int {
		if v == nil {
			return nil
		}
		return v.SpanChannelCapacity
	}).(pulumi.IntPtrOutput)
}

// User assigned identity properties
type UserAssignedIdentityResponse struct {
	// The client ID of the assigned identity.
	ClientId string `pulumi:"clientId"`
	// The principal ID of the assigned identity.
	PrincipalId string `pulumi:"principalId"`
}

// User assigned identity properties
type UserAssignedIdentityResponseOutput struct{ *pulumi.OutputState }

func (UserAssignedIdentityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserAssignedIdentityResponse)(nil)).Elem()
}

func (o UserAssignedIdentityResponseOutput) ToUserAssignedIdentityResponseOutput() UserAssignedIdentityResponseOutput {
	return o
}

func (o UserAssignedIdentityResponseOutput) ToUserAssignedIdentityResponseOutputWithContext(ctx context.Context) UserAssignedIdentityResponseOutput {
	return o
}

// The client ID of the assigned identity.
func (o UserAssignedIdentityResponseOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v UserAssignedIdentityResponse) string { return v.ClientId }).(pulumi.StringOutput)
}

// The principal ID of the assigned identity.
func (o UserAssignedIdentityResponseOutput) PrincipalId() pulumi.StringOutput {
	return o.ApplyT(func(v UserAssignedIdentityResponse) string { return v.PrincipalId }).(pulumi.StringOutput)
}

type UserAssignedIdentityResponseMapOutput struct{ *pulumi.OutputState }

func (UserAssignedIdentityResponseMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]UserAssignedIdentityResponse)(nil)).Elem()
}

func (o UserAssignedIdentityResponseMapOutput) ToUserAssignedIdentityResponseMapOutput() UserAssignedIdentityResponseMapOutput {
	return o
}

func (o UserAssignedIdentityResponseMapOutput) ToUserAssignedIdentityResponseMapOutputWithContext(ctx context.Context) UserAssignedIdentityResponseMapOutput {
	return o
}

func (o UserAssignedIdentityResponseMapOutput) MapIndex(k pulumi.StringInput) UserAssignedIdentityResponseOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) UserAssignedIdentityResponse {
		return vs[0].(map[string]UserAssignedIdentityResponse)[vs[1].(string)]
	}).(UserAssignedIdentityResponseOutput)
}

// VolumeClaimResourceRequirements properties
type VolumeClaimResourceRequirements struct {
	// Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
	Limits map[string]string `pulumi:"limits"`
	// Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
	Requests map[string]string `pulumi:"requests"`
}

// VolumeClaimResourceRequirementsInput is an input type that accepts VolumeClaimResourceRequirementsArgs and VolumeClaimResourceRequirementsOutput values.
// You can construct a concrete instance of `VolumeClaimResourceRequirementsInput` via:
//
//	VolumeClaimResourceRequirementsArgs{...}
type VolumeClaimResourceRequirementsInput interface {
	pulumi.Input

	ToVolumeClaimResourceRequirementsOutput() VolumeClaimResourceRequirementsOutput
	ToVolumeClaimResourceRequirementsOutputWithContext(context.Context) VolumeClaimResourceRequirementsOutput
}

// VolumeClaimResourceRequirements properties
type VolumeClaimResourceRequirementsArgs struct {
	// Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
	Limits pulumi.StringMapInput `pulumi:"limits"`
	// Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
	Requests pulumi.StringMapInput `pulumi:"requests"`
}

func (VolumeClaimResourceRequirementsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VolumeClaimResourceRequirements)(nil)).Elem()
}

func (i VolumeClaimResourceRequirementsArgs) ToVolumeClaimResourceRequirementsOutput() VolumeClaimResourceRequirementsOutput {
	return i.ToVolumeClaimResourceRequirementsOutputWithContext(context.Background())
}

func (i VolumeClaimResourceRequirementsArgs) ToVolumeClaimResourceRequirementsOutputWithContext(ctx context.Context) VolumeClaimResourceRequirementsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VolumeClaimResourceRequirementsOutput)
}

func (i VolumeClaimResourceRequirementsArgs) ToVolumeClaimResourceRequirementsPtrOutput() VolumeClaimResourceRequirementsPtrOutput {
	return i.ToVolumeClaimResourceRequirementsPtrOutputWithContext(context.Background())
}

func (i VolumeClaimResourceRequirementsArgs) ToVolumeClaimResourceRequirementsPtrOutputWithContext(ctx context.Context) VolumeClaimResourceRequirementsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VolumeClaimResourceRequirementsOutput).ToVolumeClaimResourceRequirementsPtrOutputWithContext(ctx)
}

// VolumeClaimResourceRequirementsPtrInput is an input type that accepts VolumeClaimResourceRequirementsArgs, VolumeClaimResourceRequirementsPtr and VolumeClaimResourceRequirementsPtrOutput values.
// You can construct a concrete instance of `VolumeClaimResourceRequirementsPtrInput` via:
//
//	        VolumeClaimResourceRequirementsArgs{...}
//
//	or:
//
//	        nil
type VolumeClaimResourceRequirementsPtrInput interface {
	pulumi.Input

	ToVolumeClaimResourceRequirementsPtrOutput() VolumeClaimResourceRequirementsPtrOutput
	ToVolumeClaimResourceRequirementsPtrOutputWithContext(context.Context) VolumeClaimResourceRequirementsPtrOutput
}

type volumeClaimResourceRequirementsPtrType VolumeClaimResourceRequirementsArgs

func VolumeClaimResourceRequirementsPtr(v *VolumeClaimResourceRequirementsArgs) VolumeClaimResourceRequirementsPtrInput {
	return (*volumeClaimResourceRequirementsPtrType)(v)
}

func (*volumeClaimResourceRequirementsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VolumeClaimResourceRequirements)(nil)).Elem()
}

func (i *volumeClaimResourceRequirementsPtrType) ToVolumeClaimResourceRequirementsPtrOutput() VolumeClaimResourceRequirementsPtrOutput {
	return i.ToVolumeClaimResourceRequirementsPtrOutputWithContext(context.Background())
}

func (i *volumeClaimResourceRequirementsPtrType) ToVolumeClaimResourceRequirementsPtrOutputWithContext(ctx context.Context) VolumeClaimResourceRequirementsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VolumeClaimResourceRequirementsPtrOutput)
}

// VolumeClaimResourceRequirements properties
type VolumeClaimResourceRequirementsOutput struct{ *pulumi.OutputState }

func (VolumeClaimResourceRequirementsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VolumeClaimResourceRequirements)(nil)).Elem()
}

func (o VolumeClaimResourceRequirementsOutput) ToVolumeClaimResourceRequirementsOutput() VolumeClaimResourceRequirementsOutput {
	return o
}

func (o VolumeClaimResourceRequirementsOutput) ToVolumeClaimResourceRequirementsOutputWithContext(ctx context.Context) VolumeClaimResourceRequirementsOutput {
	return o
}

func (o VolumeClaimResourceRequirementsOutput) ToVolumeClaimResourceRequirementsPtrOutput() VolumeClaimResourceRequirementsPtrOutput {
	return o.ToVolumeClaimResourceRequirementsPtrOutputWithContext(context.Background())
}

func (o VolumeClaimResourceRequirementsOutput) ToVolumeClaimResourceRequirementsPtrOutputWithContext(ctx context.Context) VolumeClaimResourceRequirementsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VolumeClaimResourceRequirements) *VolumeClaimResourceRequirements {
		return &v
	}).(VolumeClaimResourceRequirementsPtrOutput)
}

// Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
func (o VolumeClaimResourceRequirementsOutput) Limits() pulumi.StringMapOutput {
	return o.ApplyT(func(v VolumeClaimResourceRequirements) map[string]string { return v.Limits }).(pulumi.StringMapOutput)
}

// Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
func (o VolumeClaimResourceRequirementsOutput) Requests() pulumi.StringMapOutput {
	return o.ApplyT(func(v VolumeClaimResourceRequirements) map[string]string { return v.Requests }).(pulumi.StringMapOutput)
}

type VolumeClaimResourceRequirementsPtrOutput struct{ *pulumi.OutputState }

func (VolumeClaimResourceRequirementsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VolumeClaimResourceRequirements)(nil)).Elem()
}

func (o VolumeClaimResourceRequirementsPtrOutput) ToVolumeClaimResourceRequirementsPtrOutput() VolumeClaimResourceRequirementsPtrOutput {
	return o
}

func (o VolumeClaimResourceRequirementsPtrOutput) ToVolumeClaimResourceRequirementsPtrOutputWithContext(ctx context.Context) VolumeClaimResourceRequirementsPtrOutput {
	return o
}

func (o VolumeClaimResourceRequirementsPtrOutput) Elem() VolumeClaimResourceRequirementsOutput {
	return o.ApplyT(func(v *VolumeClaimResourceRequirements) VolumeClaimResourceRequirements {
		if v != nil {
			return *v
		}
		var ret VolumeClaimResourceRequirements
		return ret
	}).(VolumeClaimResourceRequirementsOutput)
}

// Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
func (o VolumeClaimResourceRequirementsPtrOutput) Limits() pulumi.StringMapOutput {
	return o.ApplyT(func(v *VolumeClaimResourceRequirements) map[string]string {
		if v == nil {
			return nil
		}
		return v.Limits
	}).(pulumi.StringMapOutput)
}

// Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
func (o VolumeClaimResourceRequirementsPtrOutput) Requests() pulumi.StringMapOutput {
	return o.ApplyT(func(v *VolumeClaimResourceRequirements) map[string]string {
		if v == nil {
			return nil
		}
		return v.Requests
	}).(pulumi.StringMapOutput)
}

// VolumeClaimResourceRequirements properties
type VolumeClaimResourceRequirementsResponse struct {
	// Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
	Limits map[string]string `pulumi:"limits"`
	// Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
	Requests map[string]string `pulumi:"requests"`
}

// VolumeClaimResourceRequirements properties
type VolumeClaimResourceRequirementsResponseOutput struct{ *pulumi.OutputState }

func (VolumeClaimResourceRequirementsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VolumeClaimResourceRequirementsResponse)(nil)).Elem()
}

func (o VolumeClaimResourceRequirementsResponseOutput) ToVolumeClaimResourceRequirementsResponseOutput() VolumeClaimResourceRequirementsResponseOutput {
	return o
}

func (o VolumeClaimResourceRequirementsResponseOutput) ToVolumeClaimResourceRequirementsResponseOutputWithContext(ctx context.Context) VolumeClaimResourceRequirementsResponseOutput {
	return o
}

// Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
func (o VolumeClaimResourceRequirementsResponseOutput) Limits() pulumi.StringMapOutput {
	return o.ApplyT(func(v VolumeClaimResourceRequirementsResponse) map[string]string { return v.Limits }).(pulumi.StringMapOutput)
}

// Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
func (o VolumeClaimResourceRequirementsResponseOutput) Requests() pulumi.StringMapOutput {
	return o.ApplyT(func(v VolumeClaimResourceRequirementsResponse) map[string]string { return v.Requests }).(pulumi.StringMapOutput)
}

type VolumeClaimResourceRequirementsResponsePtrOutput struct{ *pulumi.OutputState }

func (VolumeClaimResourceRequirementsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VolumeClaimResourceRequirementsResponse)(nil)).Elem()
}

func (o VolumeClaimResourceRequirementsResponsePtrOutput) ToVolumeClaimResourceRequirementsResponsePtrOutput() VolumeClaimResourceRequirementsResponsePtrOutput {
	return o
}

func (o VolumeClaimResourceRequirementsResponsePtrOutput) ToVolumeClaimResourceRequirementsResponsePtrOutputWithContext(ctx context.Context) VolumeClaimResourceRequirementsResponsePtrOutput {
	return o
}

func (o VolumeClaimResourceRequirementsResponsePtrOutput) Elem() VolumeClaimResourceRequirementsResponseOutput {
	return o.ApplyT(func(v *VolumeClaimResourceRequirementsResponse) VolumeClaimResourceRequirementsResponse {
		if v != nil {
			return *v
		}
		var ret VolumeClaimResourceRequirementsResponse
		return ret
	}).(VolumeClaimResourceRequirementsResponseOutput)
}

// Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
func (o VolumeClaimResourceRequirementsResponsePtrOutput) Limits() pulumi.StringMapOutput {
	return o.ApplyT(func(v *VolumeClaimResourceRequirementsResponse) map[string]string {
		if v == nil {
			return nil
		}
		return v.Limits
	}).(pulumi.StringMapOutput)
}

// Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
func (o VolumeClaimResourceRequirementsResponsePtrOutput) Requests() pulumi.StringMapOutput {
	return o.ApplyT(func(v *VolumeClaimResourceRequirementsResponse) map[string]string {
		if v == nil {
			return nil
		}
		return v.Requests
	}).(pulumi.StringMapOutput)
}

// VolumeClaimSpec properties
type VolumeClaimSpec struct {
	// AccessModes contains the desired access modes the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1
	AccessModes []string `pulumi:"accessModes"`
	// This field can be used to specify either: * An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot) * An existing PVC (PersistentVolumeClaim) If the provisioner or an external controller can support the specified data source, it will create a new volume based on the contents of the specified data source. If the AnyVolumeDataSource feature gate is enabled, this field will always have the same contents as the DataSourceRef field.
	DataSource *LocalKubernetesReference `pulumi:"dataSource"`
	// Specifies the object from which to populate the volume with data, if a non-empty volume is desired. This may be any local object from a non-empty API group (non core object) or a PersistentVolumeClaim object. When this field is specified, volume binding will only succeed if the type of the specified object matches some installed volume populator or dynamic provisioner. This field will replace the functionality of the DataSource field and as such if both fields are non-empty, they must have the same value. For backwards compatibility, both fields (DataSource and DataSourceRef) will be set to the same value automatically if one of them is empty and the other is non-empty. There are two important differences between DataSource and DataSourceRef: * While DataSource only allows two specific types of objects, DataSourceRef allows any non-core object, as well as PersistentVolumeClaim objects. * While DataSource ignores disallowed values (dropping them), DataSourceRef preserves all values, and generates an error if a disallowed value is specified. (Beta) Using this field requires the AnyVolumeDataSource feature gate to be enabled.
	DataSourceRef *KubernetesReference `pulumi:"dataSourceRef"`
	// Resources represents the minimum resources the volume should have. If RecoverVolumeExpansionFailure feature is enabled users are allowed to specify resource requirements that are lower than previous value but must still be higher than capacity recorded in the status field of the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources
	Resources *VolumeClaimResourceRequirements `pulumi:"resources"`
	// A label query over volumes to consider for binding.
	Selector *VolumeClaimSpecSelector `pulumi:"selector"`
	// Name of the StorageClass required by the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1
	StorageClassName *string `pulumi:"storageClassName"`
	// volumeMode defines what type of volume is required by the claim. Value of Filesystem is implied when not included in claim spec. This is a beta feature.
	VolumeMode *string `pulumi:"volumeMode"`
	// VolumeName is the binding reference to the PersistentVolume backing this claim.
	VolumeName *string `pulumi:"volumeName"`
}

// VolumeClaimSpecInput is an input type that accepts VolumeClaimSpecArgs and VolumeClaimSpecOutput values.
// You can construct a concrete instance of `VolumeClaimSpecInput` via:
//
//	VolumeClaimSpecArgs{...}
type VolumeClaimSpecInput interface {
	pulumi.Input

	ToVolumeClaimSpecOutput() VolumeClaimSpecOutput
	ToVolumeClaimSpecOutputWithContext(context.Context) VolumeClaimSpecOutput
}

// VolumeClaimSpec properties
type VolumeClaimSpecArgs struct {
	// AccessModes contains the desired access modes the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1
	AccessModes pulumi.StringArrayInput `pulumi:"accessModes"`
	// This field can be used to specify either: * An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot) * An existing PVC (PersistentVolumeClaim) If the provisioner or an external controller can support the specified data source, it will create a new volume based on the contents of the specified data source. If the AnyVolumeDataSource feature gate is enabled, this field will always have the same contents as the DataSourceRef field.
	DataSource LocalKubernetesReferencePtrInput `pulumi:"dataSource"`
	// Specifies the object from which to populate the volume with data, if a non-empty volume is desired. This may be any local object from a non-empty API group (non core object) or a PersistentVolumeClaim object. When this field is specified, volume binding will only succeed if the type of the specified object matches some installed volume populator or dynamic provisioner. This field will replace the functionality of the DataSource field and as such if both fields are non-empty, they must have the same value. For backwards compatibility, both fields (DataSource and DataSourceRef) will be set to the same value automatically if one of them is empty and the other is non-empty. There are two important differences between DataSource and DataSourceRef: * While DataSource only allows two specific types of objects, DataSourceRef allows any non-core object, as well as PersistentVolumeClaim objects. * While DataSource ignores disallowed values (dropping them), DataSourceRef preserves all values, and generates an error if a disallowed value is specified. (Beta) Using this field requires the AnyVolumeDataSource feature gate to be enabled.
	DataSourceRef KubernetesReferencePtrInput `pulumi:"dataSourceRef"`
	// Resources represents the minimum resources the volume should have. If RecoverVolumeExpansionFailure feature is enabled users are allowed to specify resource requirements that are lower than previous value but must still be higher than capacity recorded in the status field of the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources
	Resources VolumeClaimResourceRequirementsPtrInput `pulumi:"resources"`
	// A label query over volumes to consider for binding.
	Selector VolumeClaimSpecSelectorPtrInput `pulumi:"selector"`
	// Name of the StorageClass required by the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1
	StorageClassName pulumi.StringPtrInput `pulumi:"storageClassName"`
	// volumeMode defines what type of volume is required by the claim. Value of Filesystem is implied when not included in claim spec. This is a beta feature.
	VolumeMode pulumi.StringPtrInput `pulumi:"volumeMode"`
	// VolumeName is the binding reference to the PersistentVolume backing this claim.
	VolumeName pulumi.StringPtrInput `pulumi:"volumeName"`
}

func (VolumeClaimSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VolumeClaimSpec)(nil)).Elem()
}

func (i VolumeClaimSpecArgs) ToVolumeClaimSpecOutput() VolumeClaimSpecOutput {
	return i.ToVolumeClaimSpecOutputWithContext(context.Background())
}

func (i VolumeClaimSpecArgs) ToVolumeClaimSpecOutputWithContext(ctx context.Context) VolumeClaimSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VolumeClaimSpecOutput)
}

func (i VolumeClaimSpecArgs) ToVolumeClaimSpecPtrOutput() VolumeClaimSpecPtrOutput {
	return i.ToVolumeClaimSpecPtrOutputWithContext(context.Background())
}

func (i VolumeClaimSpecArgs) ToVolumeClaimSpecPtrOutputWithContext(ctx context.Context) VolumeClaimSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VolumeClaimSpecOutput).ToVolumeClaimSpecPtrOutputWithContext(ctx)
}

// VolumeClaimSpecPtrInput is an input type that accepts VolumeClaimSpecArgs, VolumeClaimSpecPtr and VolumeClaimSpecPtrOutput values.
// You can construct a concrete instance of `VolumeClaimSpecPtrInput` via:
//
//	        VolumeClaimSpecArgs{...}
//
//	or:
//
//	        nil
type VolumeClaimSpecPtrInput interface {
	pulumi.Input

	ToVolumeClaimSpecPtrOutput() VolumeClaimSpecPtrOutput
	ToVolumeClaimSpecPtrOutputWithContext(context.Context) VolumeClaimSpecPtrOutput
}

type volumeClaimSpecPtrType VolumeClaimSpecArgs

func VolumeClaimSpecPtr(v *VolumeClaimSpecArgs) VolumeClaimSpecPtrInput {
	return (*volumeClaimSpecPtrType)(v)
}

func (*volumeClaimSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VolumeClaimSpec)(nil)).Elem()
}

func (i *volumeClaimSpecPtrType) ToVolumeClaimSpecPtrOutput() VolumeClaimSpecPtrOutput {
	return i.ToVolumeClaimSpecPtrOutputWithContext(context.Background())
}

func (i *volumeClaimSpecPtrType) ToVolumeClaimSpecPtrOutputWithContext(ctx context.Context) VolumeClaimSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VolumeClaimSpecPtrOutput)
}

// VolumeClaimSpec properties
type VolumeClaimSpecOutput struct{ *pulumi.OutputState }

func (VolumeClaimSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VolumeClaimSpec)(nil)).Elem()
}

func (o VolumeClaimSpecOutput) ToVolumeClaimSpecOutput() VolumeClaimSpecOutput {
	return o
}

func (o VolumeClaimSpecOutput) ToVolumeClaimSpecOutputWithContext(ctx context.Context) VolumeClaimSpecOutput {
	return o
}

func (o VolumeClaimSpecOutput) ToVolumeClaimSpecPtrOutput() VolumeClaimSpecPtrOutput {
	return o.ToVolumeClaimSpecPtrOutputWithContext(context.Background())
}

func (o VolumeClaimSpecOutput) ToVolumeClaimSpecPtrOutputWithContext(ctx context.Context) VolumeClaimSpecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VolumeClaimSpec) *VolumeClaimSpec {
		return &v
	}).(VolumeClaimSpecPtrOutput)
}

// AccessModes contains the desired access modes the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1
func (o VolumeClaimSpecOutput) AccessModes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VolumeClaimSpec) []string { return v.AccessModes }).(pulumi.StringArrayOutput)
}

// This field can be used to specify either: * An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot) * An existing PVC (PersistentVolumeClaim) If the provisioner or an external controller can support the specified data source, it will create a new volume based on the contents of the specified data source. If the AnyVolumeDataSource feature gate is enabled, this field will always have the same contents as the DataSourceRef field.
func (o VolumeClaimSpecOutput) DataSource() LocalKubernetesReferencePtrOutput {
	return o.ApplyT(func(v VolumeClaimSpec) *LocalKubernetesReference { return v.DataSource }).(LocalKubernetesReferencePtrOutput)
}

// Specifies the object from which to populate the volume with data, if a non-empty volume is desired. This may be any local object from a non-empty API group (non core object) or a PersistentVolumeClaim object. When this field is specified, volume binding will only succeed if the type of the specified object matches some installed volume populator or dynamic provisioner. This field will replace the functionality of the DataSource field and as such if both fields are non-empty, they must have the same value. For backwards compatibility, both fields (DataSource and DataSourceRef) will be set to the same value automatically if one of them is empty and the other is non-empty. There are two important differences between DataSource and DataSourceRef: * While DataSource only allows two specific types of objects, DataSourceRef allows any non-core object, as well as PersistentVolumeClaim objects. * While DataSource ignores disallowed values (dropping them), DataSourceRef preserves all values, and generates an error if a disallowed value is specified. (Beta) Using this field requires the AnyVolumeDataSource feature gate to be enabled.
func (o VolumeClaimSpecOutput) DataSourceRef() KubernetesReferencePtrOutput {
	return o.ApplyT(func(v VolumeClaimSpec) *KubernetesReference { return v.DataSourceRef }).(KubernetesReferencePtrOutput)
}

// Resources represents the minimum resources the volume should have. If RecoverVolumeExpansionFailure feature is enabled users are allowed to specify resource requirements that are lower than previous value but must still be higher than capacity recorded in the status field of the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources
func (o VolumeClaimSpecOutput) Resources() VolumeClaimResourceRequirementsPtrOutput {
	return o.ApplyT(func(v VolumeClaimSpec) *VolumeClaimResourceRequirements { return v.Resources }).(VolumeClaimResourceRequirementsPtrOutput)
}

// A label query over volumes to consider for binding.
func (o VolumeClaimSpecOutput) Selector() VolumeClaimSpecSelectorPtrOutput {
	return o.ApplyT(func(v VolumeClaimSpec) *VolumeClaimSpecSelector { return v.Selector }).(VolumeClaimSpecSelectorPtrOutput)
}

// Name of the StorageClass required by the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1
func (o VolumeClaimSpecOutput) StorageClassName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VolumeClaimSpec) *string { return v.StorageClassName }).(pulumi.StringPtrOutput)
}

// volumeMode defines what type of volume is required by the claim. Value of Filesystem is implied when not included in claim spec. This is a beta feature.
func (o VolumeClaimSpecOutput) VolumeMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VolumeClaimSpec) *string { return v.VolumeMode }).(pulumi.StringPtrOutput)
}

// VolumeName is the binding reference to the PersistentVolume backing this claim.
func (o VolumeClaimSpecOutput) VolumeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VolumeClaimSpec) *string { return v.VolumeName }).(pulumi.StringPtrOutput)
}

type VolumeClaimSpecPtrOutput struct{ *pulumi.OutputState }

func (VolumeClaimSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VolumeClaimSpec)(nil)).Elem()
}

func (o VolumeClaimSpecPtrOutput) ToVolumeClaimSpecPtrOutput() VolumeClaimSpecPtrOutput {
	return o
}

func (o VolumeClaimSpecPtrOutput) ToVolumeClaimSpecPtrOutputWithContext(ctx context.Context) VolumeClaimSpecPtrOutput {
	return o
}

func (o VolumeClaimSpecPtrOutput) Elem() VolumeClaimSpecOutput {
	return o.ApplyT(func(v *VolumeClaimSpec) VolumeClaimSpec {
		if v != nil {
			return *v
		}
		var ret VolumeClaimSpec
		return ret
	}).(VolumeClaimSpecOutput)
}

// AccessModes contains the desired access modes the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1
func (o VolumeClaimSpecPtrOutput) AccessModes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *VolumeClaimSpec) []string {
		if v == nil {
			return nil
		}
		return v.AccessModes
	}).(pulumi.StringArrayOutput)
}

// This field can be used to specify either: * An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot) * An existing PVC (PersistentVolumeClaim) If the provisioner or an external controller can support the specified data source, it will create a new volume based on the contents of the specified data source. If the AnyVolumeDataSource feature gate is enabled, this field will always have the same contents as the DataSourceRef field.
func (o VolumeClaimSpecPtrOutput) DataSource() LocalKubernetesReferencePtrOutput {
	return o.ApplyT(func(v *VolumeClaimSpec) *LocalKubernetesReference {
		if v == nil {
			return nil
		}
		return v.DataSource
	}).(LocalKubernetesReferencePtrOutput)
}

// Specifies the object from which to populate the volume with data, if a non-empty volume is desired. This may be any local object from a non-empty API group (non core object) or a PersistentVolumeClaim object. When this field is specified, volume binding will only succeed if the type of the specified object matches some installed volume populator or dynamic provisioner. This field will replace the functionality of the DataSource field and as such if both fields are non-empty, they must have the same value. For backwards compatibility, both fields (DataSource and DataSourceRef) will be set to the same value automatically if one of them is empty and the other is non-empty. There are two important differences between DataSource and DataSourceRef: * While DataSource only allows two specific types of objects, DataSourceRef allows any non-core object, as well as PersistentVolumeClaim objects. * While DataSource ignores disallowed values (dropping them), DataSourceRef preserves all values, and generates an error if a disallowed value is specified. (Beta) Using this field requires the AnyVolumeDataSource feature gate to be enabled.
func (o VolumeClaimSpecPtrOutput) DataSourceRef() KubernetesReferencePtrOutput {
	return o.ApplyT(func(v *VolumeClaimSpec) *KubernetesReference {
		if v == nil {
			return nil
		}
		return v.DataSourceRef
	}).(KubernetesReferencePtrOutput)
}

// Resources represents the minimum resources the volume should have. If RecoverVolumeExpansionFailure feature is enabled users are allowed to specify resource requirements that are lower than previous value but must still be higher than capacity recorded in the status field of the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources
func (o VolumeClaimSpecPtrOutput) Resources() VolumeClaimResourceRequirementsPtrOutput {
	return o.ApplyT(func(v *VolumeClaimSpec) *VolumeClaimResourceRequirements {
		if v == nil {
			return nil
		}
		return v.Resources
	}).(VolumeClaimResourceRequirementsPtrOutput)
}

// A label query over volumes to consider for binding.
func (o VolumeClaimSpecPtrOutput) Selector() VolumeClaimSpecSelectorPtrOutput {
	return o.ApplyT(func(v *VolumeClaimSpec) *VolumeClaimSpecSelector {
		if v == nil {
			return nil
		}
		return v.Selector
	}).(VolumeClaimSpecSelectorPtrOutput)
}

// Name of the StorageClass required by the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1
func (o VolumeClaimSpecPtrOutput) StorageClassName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VolumeClaimSpec) *string {
		if v == nil {
			return nil
		}
		return v.StorageClassName
	}).(pulumi.StringPtrOutput)
}

// volumeMode defines what type of volume is required by the claim. Value of Filesystem is implied when not included in claim spec. This is a beta feature.
func (o VolumeClaimSpecPtrOutput) VolumeMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VolumeClaimSpec) *string {
		if v == nil {
			return nil
		}
		return v.VolumeMode
	}).(pulumi.StringPtrOutput)
}

// VolumeName is the binding reference to the PersistentVolume backing this claim.
func (o VolumeClaimSpecPtrOutput) VolumeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VolumeClaimSpec) *string {
		if v == nil {
			return nil
		}
		return v.VolumeName
	}).(pulumi.StringPtrOutput)
}

// VolumeClaimSpec properties
type VolumeClaimSpecResponse struct {
	// AccessModes contains the desired access modes the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1
	AccessModes []string `pulumi:"accessModes"`
	// This field can be used to specify either: * An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot) * An existing PVC (PersistentVolumeClaim) If the provisioner or an external controller can support the specified data source, it will create a new volume based on the contents of the specified data source. If the AnyVolumeDataSource feature gate is enabled, this field will always have the same contents as the DataSourceRef field.
	DataSource *LocalKubernetesReferenceResponse `pulumi:"dataSource"`
	// Specifies the object from which to populate the volume with data, if a non-empty volume is desired. This may be any local object from a non-empty API group (non core object) or a PersistentVolumeClaim object. When this field is specified, volume binding will only succeed if the type of the specified object matches some installed volume populator or dynamic provisioner. This field will replace the functionality of the DataSource field and as such if both fields are non-empty, they must have the same value. For backwards compatibility, both fields (DataSource and DataSourceRef) will be set to the same value automatically if one of them is empty and the other is non-empty. There are two important differences between DataSource and DataSourceRef: * While DataSource only allows two specific types of objects, DataSourceRef allows any non-core object, as well as PersistentVolumeClaim objects. * While DataSource ignores disallowed values (dropping them), DataSourceRef preserves all values, and generates an error if a disallowed value is specified. (Beta) Using this field requires the AnyVolumeDataSource feature gate to be enabled.
	DataSourceRef *KubernetesReferenceResponse `pulumi:"dataSourceRef"`
	// Resources represents the minimum resources the volume should have. If RecoverVolumeExpansionFailure feature is enabled users are allowed to specify resource requirements that are lower than previous value but must still be higher than capacity recorded in the status field of the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources
	Resources *VolumeClaimResourceRequirementsResponse `pulumi:"resources"`
	// A label query over volumes to consider for binding.
	Selector *VolumeClaimSpecSelectorResponse `pulumi:"selector"`
	// Name of the StorageClass required by the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1
	StorageClassName *string `pulumi:"storageClassName"`
	// volumeMode defines what type of volume is required by the claim. Value of Filesystem is implied when not included in claim spec. This is a beta feature.
	VolumeMode *string `pulumi:"volumeMode"`
	// VolumeName is the binding reference to the PersistentVolume backing this claim.
	VolumeName *string `pulumi:"volumeName"`
}

// VolumeClaimSpec properties
type VolumeClaimSpecResponseOutput struct{ *pulumi.OutputState }

func (VolumeClaimSpecResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VolumeClaimSpecResponse)(nil)).Elem()
}

func (o VolumeClaimSpecResponseOutput) ToVolumeClaimSpecResponseOutput() VolumeClaimSpecResponseOutput {
	return o
}

func (o VolumeClaimSpecResponseOutput) ToVolumeClaimSpecResponseOutputWithContext(ctx context.Context) VolumeClaimSpecResponseOutput {
	return o
}

// AccessModes contains the desired access modes the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1
func (o VolumeClaimSpecResponseOutput) AccessModes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VolumeClaimSpecResponse) []string { return v.AccessModes }).(pulumi.StringArrayOutput)
}

// This field can be used to specify either: * An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot) * An existing PVC (PersistentVolumeClaim) If the provisioner or an external controller can support the specified data source, it will create a new volume based on the contents of the specified data source. If the AnyVolumeDataSource feature gate is enabled, this field will always have the same contents as the DataSourceRef field.
func (o VolumeClaimSpecResponseOutput) DataSource() LocalKubernetesReferenceResponsePtrOutput {
	return o.ApplyT(func(v VolumeClaimSpecResponse) *LocalKubernetesReferenceResponse { return v.DataSource }).(LocalKubernetesReferenceResponsePtrOutput)
}

// Specifies the object from which to populate the volume with data, if a non-empty volume is desired. This may be any local object from a non-empty API group (non core object) or a PersistentVolumeClaim object. When this field is specified, volume binding will only succeed if the type of the specified object matches some installed volume populator or dynamic provisioner. This field will replace the functionality of the DataSource field and as such if both fields are non-empty, they must have the same value. For backwards compatibility, both fields (DataSource and DataSourceRef) will be set to the same value automatically if one of them is empty and the other is non-empty. There are two important differences between DataSource and DataSourceRef: * While DataSource only allows two specific types of objects, DataSourceRef allows any non-core object, as well as PersistentVolumeClaim objects. * While DataSource ignores disallowed values (dropping them), DataSourceRef preserves all values, and generates an error if a disallowed value is specified. (Beta) Using this field requires the AnyVolumeDataSource feature gate to be enabled.
func (o VolumeClaimSpecResponseOutput) DataSourceRef() KubernetesReferenceResponsePtrOutput {
	return o.ApplyT(func(v VolumeClaimSpecResponse) *KubernetesReferenceResponse { return v.DataSourceRef }).(KubernetesReferenceResponsePtrOutput)
}

// Resources represents the minimum resources the volume should have. If RecoverVolumeExpansionFailure feature is enabled users are allowed to specify resource requirements that are lower than previous value but must still be higher than capacity recorded in the status field of the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources
func (o VolumeClaimSpecResponseOutput) Resources() VolumeClaimResourceRequirementsResponsePtrOutput {
	return o.ApplyT(func(v VolumeClaimSpecResponse) *VolumeClaimResourceRequirementsResponse { return v.Resources }).(VolumeClaimResourceRequirementsResponsePtrOutput)
}

// A label query over volumes to consider for binding.
func (o VolumeClaimSpecResponseOutput) Selector() VolumeClaimSpecSelectorResponsePtrOutput {
	return o.ApplyT(func(v VolumeClaimSpecResponse) *VolumeClaimSpecSelectorResponse { return v.Selector }).(VolumeClaimSpecSelectorResponsePtrOutput)
}

// Name of the StorageClass required by the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1
func (o VolumeClaimSpecResponseOutput) StorageClassName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VolumeClaimSpecResponse) *string { return v.StorageClassName }).(pulumi.StringPtrOutput)
}

// volumeMode defines what type of volume is required by the claim. Value of Filesystem is implied when not included in claim spec. This is a beta feature.
func (o VolumeClaimSpecResponseOutput) VolumeMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VolumeClaimSpecResponse) *string { return v.VolumeMode }).(pulumi.StringPtrOutput)
}

// VolumeName is the binding reference to the PersistentVolume backing this claim.
func (o VolumeClaimSpecResponseOutput) VolumeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VolumeClaimSpecResponse) *string { return v.VolumeName }).(pulumi.StringPtrOutput)
}

type VolumeClaimSpecResponsePtrOutput struct{ *pulumi.OutputState }

func (VolumeClaimSpecResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VolumeClaimSpecResponse)(nil)).Elem()
}

func (o VolumeClaimSpecResponsePtrOutput) ToVolumeClaimSpecResponsePtrOutput() VolumeClaimSpecResponsePtrOutput {
	return o
}

func (o VolumeClaimSpecResponsePtrOutput) ToVolumeClaimSpecResponsePtrOutputWithContext(ctx context.Context) VolumeClaimSpecResponsePtrOutput {
	return o
}

func (o VolumeClaimSpecResponsePtrOutput) Elem() VolumeClaimSpecResponseOutput {
	return o.ApplyT(func(v *VolumeClaimSpecResponse) VolumeClaimSpecResponse {
		if v != nil {
			return *v
		}
		var ret VolumeClaimSpecResponse
		return ret
	}).(VolumeClaimSpecResponseOutput)
}

// AccessModes contains the desired access modes the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1
func (o VolumeClaimSpecResponsePtrOutput) AccessModes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *VolumeClaimSpecResponse) []string {
		if v == nil {
			return nil
		}
		return v.AccessModes
	}).(pulumi.StringArrayOutput)
}

// This field can be used to specify either: * An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot) * An existing PVC (PersistentVolumeClaim) If the provisioner or an external controller can support the specified data source, it will create a new volume based on the contents of the specified data source. If the AnyVolumeDataSource feature gate is enabled, this field will always have the same contents as the DataSourceRef field.
func (o VolumeClaimSpecResponsePtrOutput) DataSource() LocalKubernetesReferenceResponsePtrOutput {
	return o.ApplyT(func(v *VolumeClaimSpecResponse) *LocalKubernetesReferenceResponse {
		if v == nil {
			return nil
		}
		return v.DataSource
	}).(LocalKubernetesReferenceResponsePtrOutput)
}

// Specifies the object from which to populate the volume with data, if a non-empty volume is desired. This may be any local object from a non-empty API group (non core object) or a PersistentVolumeClaim object. When this field is specified, volume binding will only succeed if the type of the specified object matches some installed volume populator or dynamic provisioner. This field will replace the functionality of the DataSource field and as such if both fields are non-empty, they must have the same value. For backwards compatibility, both fields (DataSource and DataSourceRef) will be set to the same value automatically if one of them is empty and the other is non-empty. There are two important differences between DataSource and DataSourceRef: * While DataSource only allows two specific types of objects, DataSourceRef allows any non-core object, as well as PersistentVolumeClaim objects. * While DataSource ignores disallowed values (dropping them), DataSourceRef preserves all values, and generates an error if a disallowed value is specified. (Beta) Using this field requires the AnyVolumeDataSource feature gate to be enabled.
func (o VolumeClaimSpecResponsePtrOutput) DataSourceRef() KubernetesReferenceResponsePtrOutput {
	return o.ApplyT(func(v *VolumeClaimSpecResponse) *KubernetesReferenceResponse {
		if v == nil {
			return nil
		}
		return v.DataSourceRef
	}).(KubernetesReferenceResponsePtrOutput)
}

// Resources represents the minimum resources the volume should have. If RecoverVolumeExpansionFailure feature is enabled users are allowed to specify resource requirements that are lower than previous value but must still be higher than capacity recorded in the status field of the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources
func (o VolumeClaimSpecResponsePtrOutput) Resources() VolumeClaimResourceRequirementsResponsePtrOutput {
	return o.ApplyT(func(v *VolumeClaimSpecResponse) *VolumeClaimResourceRequirementsResponse {
		if v == nil {
			return nil
		}
		return v.Resources
	}).(VolumeClaimResourceRequirementsResponsePtrOutput)
}

// A label query over volumes to consider for binding.
func (o VolumeClaimSpecResponsePtrOutput) Selector() VolumeClaimSpecSelectorResponsePtrOutput {
	return o.ApplyT(func(v *VolumeClaimSpecResponse) *VolumeClaimSpecSelectorResponse {
		if v == nil {
			return nil
		}
		return v.Selector
	}).(VolumeClaimSpecSelectorResponsePtrOutput)
}

// Name of the StorageClass required by the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1
func (o VolumeClaimSpecResponsePtrOutput) StorageClassName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VolumeClaimSpecResponse) *string {
		if v == nil {
			return nil
		}
		return v.StorageClassName
	}).(pulumi.StringPtrOutput)
}

// volumeMode defines what type of volume is required by the claim. Value of Filesystem is implied when not included in claim spec. This is a beta feature.
func (o VolumeClaimSpecResponsePtrOutput) VolumeMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VolumeClaimSpecResponse) *string {
		if v == nil {
			return nil
		}
		return v.VolumeMode
	}).(pulumi.StringPtrOutput)
}

// VolumeName is the binding reference to the PersistentVolume backing this claim.
func (o VolumeClaimSpecResponsePtrOutput) VolumeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VolumeClaimSpecResponse) *string {
		if v == nil {
			return nil
		}
		return v.VolumeName
	}).(pulumi.StringPtrOutput)
}

// VolumeClaimSpecSelector properties
type VolumeClaimSpecSelector struct {
	// MatchExpressions is a list of label selector requirements. The requirements are ANDed.
	MatchExpressions []VolumeClaimSpecSelectorMatchExpressions `pulumi:"matchExpressions"`
	// MatchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
	MatchLabels map[string]string `pulumi:"matchLabels"`
}

// VolumeClaimSpecSelectorInput is an input type that accepts VolumeClaimSpecSelectorArgs and VolumeClaimSpecSelectorOutput values.
// You can construct a concrete instance of `VolumeClaimSpecSelectorInput` via:
//
//	VolumeClaimSpecSelectorArgs{...}
type VolumeClaimSpecSelectorInput interface {
	pulumi.Input

	ToVolumeClaimSpecSelectorOutput() VolumeClaimSpecSelectorOutput
	ToVolumeClaimSpecSelectorOutputWithContext(context.Context) VolumeClaimSpecSelectorOutput
}

// VolumeClaimSpecSelector properties
type VolumeClaimSpecSelectorArgs struct {
	// MatchExpressions is a list of label selector requirements. The requirements are ANDed.
	MatchExpressions VolumeClaimSpecSelectorMatchExpressionsArrayInput `pulumi:"matchExpressions"`
	// MatchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
	MatchLabels pulumi.StringMapInput `pulumi:"matchLabels"`
}

func (VolumeClaimSpecSelectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VolumeClaimSpecSelector)(nil)).Elem()
}

func (i VolumeClaimSpecSelectorArgs) ToVolumeClaimSpecSelectorOutput() VolumeClaimSpecSelectorOutput {
	return i.ToVolumeClaimSpecSelectorOutputWithContext(context.Background())
}

func (i VolumeClaimSpecSelectorArgs) ToVolumeClaimSpecSelectorOutputWithContext(ctx context.Context) VolumeClaimSpecSelectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VolumeClaimSpecSelectorOutput)
}

func (i VolumeClaimSpecSelectorArgs) ToVolumeClaimSpecSelectorPtrOutput() VolumeClaimSpecSelectorPtrOutput {
	return i.ToVolumeClaimSpecSelectorPtrOutputWithContext(context.Background())
}

func (i VolumeClaimSpecSelectorArgs) ToVolumeClaimSpecSelectorPtrOutputWithContext(ctx context.Context) VolumeClaimSpecSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VolumeClaimSpecSelectorOutput).ToVolumeClaimSpecSelectorPtrOutputWithContext(ctx)
}

// VolumeClaimSpecSelectorPtrInput is an input type that accepts VolumeClaimSpecSelectorArgs, VolumeClaimSpecSelectorPtr and VolumeClaimSpecSelectorPtrOutput values.
// You can construct a concrete instance of `VolumeClaimSpecSelectorPtrInput` via:
//
//	        VolumeClaimSpecSelectorArgs{...}
//
//	or:
//
//	        nil
type VolumeClaimSpecSelectorPtrInput interface {
	pulumi.Input

	ToVolumeClaimSpecSelectorPtrOutput() VolumeClaimSpecSelectorPtrOutput
	ToVolumeClaimSpecSelectorPtrOutputWithContext(context.Context) VolumeClaimSpecSelectorPtrOutput
}

type volumeClaimSpecSelectorPtrType VolumeClaimSpecSelectorArgs

func VolumeClaimSpecSelectorPtr(v *VolumeClaimSpecSelectorArgs) VolumeClaimSpecSelectorPtrInput {
	return (*volumeClaimSpecSelectorPtrType)(v)
}

func (*volumeClaimSpecSelectorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VolumeClaimSpecSelector)(nil)).Elem()
}

func (i *volumeClaimSpecSelectorPtrType) ToVolumeClaimSpecSelectorPtrOutput() VolumeClaimSpecSelectorPtrOutput {
	return i.ToVolumeClaimSpecSelectorPtrOutputWithContext(context.Background())
}

func (i *volumeClaimSpecSelectorPtrType) ToVolumeClaimSpecSelectorPtrOutputWithContext(ctx context.Context) VolumeClaimSpecSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VolumeClaimSpecSelectorPtrOutput)
}

// VolumeClaimSpecSelector properties
type VolumeClaimSpecSelectorOutput struct{ *pulumi.OutputState }

func (VolumeClaimSpecSelectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VolumeClaimSpecSelector)(nil)).Elem()
}

func (o VolumeClaimSpecSelectorOutput) ToVolumeClaimSpecSelectorOutput() VolumeClaimSpecSelectorOutput {
	return o
}

func (o VolumeClaimSpecSelectorOutput) ToVolumeClaimSpecSelectorOutputWithContext(ctx context.Context) VolumeClaimSpecSelectorOutput {
	return o
}

func (o VolumeClaimSpecSelectorOutput) ToVolumeClaimSpecSelectorPtrOutput() VolumeClaimSpecSelectorPtrOutput {
	return o.ToVolumeClaimSpecSelectorPtrOutputWithContext(context.Background())
}

func (o VolumeClaimSpecSelectorOutput) ToVolumeClaimSpecSelectorPtrOutputWithContext(ctx context.Context) VolumeClaimSpecSelectorPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VolumeClaimSpecSelector) *VolumeClaimSpecSelector {
		return &v
	}).(VolumeClaimSpecSelectorPtrOutput)
}

// MatchExpressions is a list of label selector requirements. The requirements are ANDed.
func (o VolumeClaimSpecSelectorOutput) MatchExpressions() VolumeClaimSpecSelectorMatchExpressionsArrayOutput {
	return o.ApplyT(func(v VolumeClaimSpecSelector) []VolumeClaimSpecSelectorMatchExpressions { return v.MatchExpressions }).(VolumeClaimSpecSelectorMatchExpressionsArrayOutput)
}

// MatchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
func (o VolumeClaimSpecSelectorOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v VolumeClaimSpecSelector) map[string]string { return v.MatchLabels }).(pulumi.StringMapOutput)
}

type VolumeClaimSpecSelectorPtrOutput struct{ *pulumi.OutputState }

func (VolumeClaimSpecSelectorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VolumeClaimSpecSelector)(nil)).Elem()
}

func (o VolumeClaimSpecSelectorPtrOutput) ToVolumeClaimSpecSelectorPtrOutput() VolumeClaimSpecSelectorPtrOutput {
	return o
}

func (o VolumeClaimSpecSelectorPtrOutput) ToVolumeClaimSpecSelectorPtrOutputWithContext(ctx context.Context) VolumeClaimSpecSelectorPtrOutput {
	return o
}

func (o VolumeClaimSpecSelectorPtrOutput) Elem() VolumeClaimSpecSelectorOutput {
	return o.ApplyT(func(v *VolumeClaimSpecSelector) VolumeClaimSpecSelector {
		if v != nil {
			return *v
		}
		var ret VolumeClaimSpecSelector
		return ret
	}).(VolumeClaimSpecSelectorOutput)
}

// MatchExpressions is a list of label selector requirements. The requirements are ANDed.
func (o VolumeClaimSpecSelectorPtrOutput) MatchExpressions() VolumeClaimSpecSelectorMatchExpressionsArrayOutput {
	return o.ApplyT(func(v *VolumeClaimSpecSelector) []VolumeClaimSpecSelectorMatchExpressions {
		if v == nil {
			return nil
		}
		return v.MatchExpressions
	}).(VolumeClaimSpecSelectorMatchExpressionsArrayOutput)
}

// MatchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
func (o VolumeClaimSpecSelectorPtrOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *VolumeClaimSpecSelector) map[string]string {
		if v == nil {
			return nil
		}
		return v.MatchLabels
	}).(pulumi.StringMapOutput)
}

// VolumeClaimSpecSelectorMatchExpressions properties
type VolumeClaimSpecSelectorMatchExpressions struct {
	// key is the label key that the selector applies to.
	Key string `pulumi:"key"`
	// operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
	Operator string `pulumi:"operator"`
	// values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
	Values []string `pulumi:"values"`
}

// VolumeClaimSpecSelectorMatchExpressionsInput is an input type that accepts VolumeClaimSpecSelectorMatchExpressionsArgs and VolumeClaimSpecSelectorMatchExpressionsOutput values.
// You can construct a concrete instance of `VolumeClaimSpecSelectorMatchExpressionsInput` via:
//
//	VolumeClaimSpecSelectorMatchExpressionsArgs{...}
type VolumeClaimSpecSelectorMatchExpressionsInput interface {
	pulumi.Input

	ToVolumeClaimSpecSelectorMatchExpressionsOutput() VolumeClaimSpecSelectorMatchExpressionsOutput
	ToVolumeClaimSpecSelectorMatchExpressionsOutputWithContext(context.Context) VolumeClaimSpecSelectorMatchExpressionsOutput
}

// VolumeClaimSpecSelectorMatchExpressions properties
type VolumeClaimSpecSelectorMatchExpressionsArgs struct {
	// key is the label key that the selector applies to.
	Key pulumi.StringInput `pulumi:"key"`
	// operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
	Operator pulumi.StringInput `pulumi:"operator"`
	// values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (VolumeClaimSpecSelectorMatchExpressionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VolumeClaimSpecSelectorMatchExpressions)(nil)).Elem()
}

func (i VolumeClaimSpecSelectorMatchExpressionsArgs) ToVolumeClaimSpecSelectorMatchExpressionsOutput() VolumeClaimSpecSelectorMatchExpressionsOutput {
	return i.ToVolumeClaimSpecSelectorMatchExpressionsOutputWithContext(context.Background())
}

func (i VolumeClaimSpecSelectorMatchExpressionsArgs) ToVolumeClaimSpecSelectorMatchExpressionsOutputWithContext(ctx context.Context) VolumeClaimSpecSelectorMatchExpressionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VolumeClaimSpecSelectorMatchExpressionsOutput)
}

// VolumeClaimSpecSelectorMatchExpressionsArrayInput is an input type that accepts VolumeClaimSpecSelectorMatchExpressionsArray and VolumeClaimSpecSelectorMatchExpressionsArrayOutput values.
// You can construct a concrete instance of `VolumeClaimSpecSelectorMatchExpressionsArrayInput` via:
//
//	VolumeClaimSpecSelectorMatchExpressionsArray{ VolumeClaimSpecSelectorMatchExpressionsArgs{...} }
type VolumeClaimSpecSelectorMatchExpressionsArrayInput interface {
	pulumi.Input

	ToVolumeClaimSpecSelectorMatchExpressionsArrayOutput() VolumeClaimSpecSelectorMatchExpressionsArrayOutput
	ToVolumeClaimSpecSelectorMatchExpressionsArrayOutputWithContext(context.Context) VolumeClaimSpecSelectorMatchExpressionsArrayOutput
}

type VolumeClaimSpecSelectorMatchExpressionsArray []VolumeClaimSpecSelectorMatchExpressionsInput

func (VolumeClaimSpecSelectorMatchExpressionsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VolumeClaimSpecSelectorMatchExpressions)(nil)).Elem()
}

func (i VolumeClaimSpecSelectorMatchExpressionsArray) ToVolumeClaimSpecSelectorMatchExpressionsArrayOutput() VolumeClaimSpecSelectorMatchExpressionsArrayOutput {
	return i.ToVolumeClaimSpecSelectorMatchExpressionsArrayOutputWithContext(context.Background())
}

func (i VolumeClaimSpecSelectorMatchExpressionsArray) ToVolumeClaimSpecSelectorMatchExpressionsArrayOutputWithContext(ctx context.Context) VolumeClaimSpecSelectorMatchExpressionsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VolumeClaimSpecSelectorMatchExpressionsArrayOutput)
}

// VolumeClaimSpecSelectorMatchExpressions properties
type VolumeClaimSpecSelectorMatchExpressionsOutput struct{ *pulumi.OutputState }

func (VolumeClaimSpecSelectorMatchExpressionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VolumeClaimSpecSelectorMatchExpressions)(nil)).Elem()
}

func (o VolumeClaimSpecSelectorMatchExpressionsOutput) ToVolumeClaimSpecSelectorMatchExpressionsOutput() VolumeClaimSpecSelectorMatchExpressionsOutput {
	return o
}

func (o VolumeClaimSpecSelectorMatchExpressionsOutput) ToVolumeClaimSpecSelectorMatchExpressionsOutputWithContext(ctx context.Context) VolumeClaimSpecSelectorMatchExpressionsOutput {
	return o
}

// key is the label key that the selector applies to.
func (o VolumeClaimSpecSelectorMatchExpressionsOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v VolumeClaimSpecSelectorMatchExpressions) string { return v.Key }).(pulumi.StringOutput)
}

// operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
func (o VolumeClaimSpecSelectorMatchExpressionsOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v VolumeClaimSpecSelectorMatchExpressions) string { return v.Operator }).(pulumi.StringOutput)
}

// values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
func (o VolumeClaimSpecSelectorMatchExpressionsOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VolumeClaimSpecSelectorMatchExpressions) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type VolumeClaimSpecSelectorMatchExpressionsArrayOutput struct{ *pulumi.OutputState }

func (VolumeClaimSpecSelectorMatchExpressionsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VolumeClaimSpecSelectorMatchExpressions)(nil)).Elem()
}

func (o VolumeClaimSpecSelectorMatchExpressionsArrayOutput) ToVolumeClaimSpecSelectorMatchExpressionsArrayOutput() VolumeClaimSpecSelectorMatchExpressionsArrayOutput {
	return o
}

func (o VolumeClaimSpecSelectorMatchExpressionsArrayOutput) ToVolumeClaimSpecSelectorMatchExpressionsArrayOutputWithContext(ctx context.Context) VolumeClaimSpecSelectorMatchExpressionsArrayOutput {
	return o
}

func (o VolumeClaimSpecSelectorMatchExpressionsArrayOutput) Index(i pulumi.IntInput) VolumeClaimSpecSelectorMatchExpressionsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VolumeClaimSpecSelectorMatchExpressions {
		return vs[0].([]VolumeClaimSpecSelectorMatchExpressions)[vs[1].(int)]
	}).(VolumeClaimSpecSelectorMatchExpressionsOutput)
}

// VolumeClaimSpecSelectorMatchExpressions properties
type VolumeClaimSpecSelectorMatchExpressionsResponse struct {
	// key is the label key that the selector applies to.
	Key string `pulumi:"key"`
	// operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
	Operator string `pulumi:"operator"`
	// values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
	Values []string `pulumi:"values"`
}

// VolumeClaimSpecSelectorMatchExpressions properties
type VolumeClaimSpecSelectorMatchExpressionsResponseOutput struct{ *pulumi.OutputState }

func (VolumeClaimSpecSelectorMatchExpressionsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VolumeClaimSpecSelectorMatchExpressionsResponse)(nil)).Elem()
}

func (o VolumeClaimSpecSelectorMatchExpressionsResponseOutput) ToVolumeClaimSpecSelectorMatchExpressionsResponseOutput() VolumeClaimSpecSelectorMatchExpressionsResponseOutput {
	return o
}

func (o VolumeClaimSpecSelectorMatchExpressionsResponseOutput) ToVolumeClaimSpecSelectorMatchExpressionsResponseOutputWithContext(ctx context.Context) VolumeClaimSpecSelectorMatchExpressionsResponseOutput {
	return o
}

// key is the label key that the selector applies to.
func (o VolumeClaimSpecSelectorMatchExpressionsResponseOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v VolumeClaimSpecSelectorMatchExpressionsResponse) string { return v.Key }).(pulumi.StringOutput)
}

// operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
func (o VolumeClaimSpecSelectorMatchExpressionsResponseOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v VolumeClaimSpecSelectorMatchExpressionsResponse) string { return v.Operator }).(pulumi.StringOutput)
}

// values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
func (o VolumeClaimSpecSelectorMatchExpressionsResponseOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VolumeClaimSpecSelectorMatchExpressionsResponse) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type VolumeClaimSpecSelectorMatchExpressionsResponseArrayOutput struct{ *pulumi.OutputState }

func (VolumeClaimSpecSelectorMatchExpressionsResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VolumeClaimSpecSelectorMatchExpressionsResponse)(nil)).Elem()
}

func (o VolumeClaimSpecSelectorMatchExpressionsResponseArrayOutput) ToVolumeClaimSpecSelectorMatchExpressionsResponseArrayOutput() VolumeClaimSpecSelectorMatchExpressionsResponseArrayOutput {
	return o
}

func (o VolumeClaimSpecSelectorMatchExpressionsResponseArrayOutput) ToVolumeClaimSpecSelectorMatchExpressionsResponseArrayOutputWithContext(ctx context.Context) VolumeClaimSpecSelectorMatchExpressionsResponseArrayOutput {
	return o
}

func (o VolumeClaimSpecSelectorMatchExpressionsResponseArrayOutput) Index(i pulumi.IntInput) VolumeClaimSpecSelectorMatchExpressionsResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VolumeClaimSpecSelectorMatchExpressionsResponse {
		return vs[0].([]VolumeClaimSpecSelectorMatchExpressionsResponse)[vs[1].(int)]
	}).(VolumeClaimSpecSelectorMatchExpressionsResponseOutput)
}

// VolumeClaimSpecSelector properties
type VolumeClaimSpecSelectorResponse struct {
	// MatchExpressions is a list of label selector requirements. The requirements are ANDed.
	MatchExpressions []VolumeClaimSpecSelectorMatchExpressionsResponse `pulumi:"matchExpressions"`
	// MatchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
	MatchLabels map[string]string `pulumi:"matchLabels"`
}

// VolumeClaimSpecSelector properties
type VolumeClaimSpecSelectorResponseOutput struct{ *pulumi.OutputState }

func (VolumeClaimSpecSelectorResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VolumeClaimSpecSelectorResponse)(nil)).Elem()
}

func (o VolumeClaimSpecSelectorResponseOutput) ToVolumeClaimSpecSelectorResponseOutput() VolumeClaimSpecSelectorResponseOutput {
	return o
}

func (o VolumeClaimSpecSelectorResponseOutput) ToVolumeClaimSpecSelectorResponseOutputWithContext(ctx context.Context) VolumeClaimSpecSelectorResponseOutput {
	return o
}

// MatchExpressions is a list of label selector requirements. The requirements are ANDed.
func (o VolumeClaimSpecSelectorResponseOutput) MatchExpressions() VolumeClaimSpecSelectorMatchExpressionsResponseArrayOutput {
	return o.ApplyT(func(v VolumeClaimSpecSelectorResponse) []VolumeClaimSpecSelectorMatchExpressionsResponse {
		return v.MatchExpressions
	}).(VolumeClaimSpecSelectorMatchExpressionsResponseArrayOutput)
}

// MatchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
func (o VolumeClaimSpecSelectorResponseOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v VolumeClaimSpecSelectorResponse) map[string]string { return v.MatchLabels }).(pulumi.StringMapOutput)
}

type VolumeClaimSpecSelectorResponsePtrOutput struct{ *pulumi.OutputState }

func (VolumeClaimSpecSelectorResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VolumeClaimSpecSelectorResponse)(nil)).Elem()
}

func (o VolumeClaimSpecSelectorResponsePtrOutput) ToVolumeClaimSpecSelectorResponsePtrOutput() VolumeClaimSpecSelectorResponsePtrOutput {
	return o
}

func (o VolumeClaimSpecSelectorResponsePtrOutput) ToVolumeClaimSpecSelectorResponsePtrOutputWithContext(ctx context.Context) VolumeClaimSpecSelectorResponsePtrOutput {
	return o
}

func (o VolumeClaimSpecSelectorResponsePtrOutput) Elem() VolumeClaimSpecSelectorResponseOutput {
	return o.ApplyT(func(v *VolumeClaimSpecSelectorResponse) VolumeClaimSpecSelectorResponse {
		if v != nil {
			return *v
		}
		var ret VolumeClaimSpecSelectorResponse
		return ret
	}).(VolumeClaimSpecSelectorResponseOutput)
}

// MatchExpressions is a list of label selector requirements. The requirements are ANDed.
func (o VolumeClaimSpecSelectorResponsePtrOutput) MatchExpressions() VolumeClaimSpecSelectorMatchExpressionsResponseArrayOutput {
	return o.ApplyT(func(v *VolumeClaimSpecSelectorResponse) []VolumeClaimSpecSelectorMatchExpressionsResponse {
		if v == nil {
			return nil
		}
		return v.MatchExpressions
	}).(VolumeClaimSpecSelectorMatchExpressionsResponseArrayOutput)
}

// MatchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
func (o VolumeClaimSpecSelectorResponsePtrOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *VolumeClaimSpecSelectorResponse) map[string]string {
		if v == nil {
			return nil
		}
		return v.MatchLabels
	}).(pulumi.StringMapOutput)
}

// X509 Certificate Authentication properties.
type X509ManualCertificate struct {
	// Kubernetes secret containing an X.509 client certificate. This is a reference to the secret through an identifying name, not the secret itself.
	SecretRef string `pulumi:"secretRef"`
}

// X509ManualCertificateInput is an input type that accepts X509ManualCertificateArgs and X509ManualCertificateOutput values.
// You can construct a concrete instance of `X509ManualCertificateInput` via:
//
//	X509ManualCertificateArgs{...}
type X509ManualCertificateInput interface {
	pulumi.Input

	ToX509ManualCertificateOutput() X509ManualCertificateOutput
	ToX509ManualCertificateOutputWithContext(context.Context) X509ManualCertificateOutput
}

// X509 Certificate Authentication properties.
type X509ManualCertificateArgs struct {
	// Kubernetes secret containing an X.509 client certificate. This is a reference to the secret through an identifying name, not the secret itself.
	SecretRef pulumi.StringInput `pulumi:"secretRef"`
}

func (X509ManualCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*X509ManualCertificate)(nil)).Elem()
}

func (i X509ManualCertificateArgs) ToX509ManualCertificateOutput() X509ManualCertificateOutput {
	return i.ToX509ManualCertificateOutputWithContext(context.Background())
}

func (i X509ManualCertificateArgs) ToX509ManualCertificateOutputWithContext(ctx context.Context) X509ManualCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(X509ManualCertificateOutput)
}

func (i X509ManualCertificateArgs) ToX509ManualCertificatePtrOutput() X509ManualCertificatePtrOutput {
	return i.ToX509ManualCertificatePtrOutputWithContext(context.Background())
}

func (i X509ManualCertificateArgs) ToX509ManualCertificatePtrOutputWithContext(ctx context.Context) X509ManualCertificatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(X509ManualCertificateOutput).ToX509ManualCertificatePtrOutputWithContext(ctx)
}

// X509ManualCertificatePtrInput is an input type that accepts X509ManualCertificateArgs, X509ManualCertificatePtr and X509ManualCertificatePtrOutput values.
// You can construct a concrete instance of `X509ManualCertificatePtrInput` via:
//
//	        X509ManualCertificateArgs{...}
//
//	or:
//
//	        nil
type X509ManualCertificatePtrInput interface {
	pulumi.Input

	ToX509ManualCertificatePtrOutput() X509ManualCertificatePtrOutput
	ToX509ManualCertificatePtrOutputWithContext(context.Context) X509ManualCertificatePtrOutput
}

type x509manualCertificatePtrType X509ManualCertificateArgs

func X509ManualCertificatePtr(v *X509ManualCertificateArgs) X509ManualCertificatePtrInput {
	return (*x509manualCertificatePtrType)(v)
}

func (*x509manualCertificatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**X509ManualCertificate)(nil)).Elem()
}

func (i *x509manualCertificatePtrType) ToX509ManualCertificatePtrOutput() X509ManualCertificatePtrOutput {
	return i.ToX509ManualCertificatePtrOutputWithContext(context.Background())
}

func (i *x509manualCertificatePtrType) ToX509ManualCertificatePtrOutputWithContext(ctx context.Context) X509ManualCertificatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(X509ManualCertificatePtrOutput)
}

// X509 Certificate Authentication properties.
type X509ManualCertificateOutput struct{ *pulumi.OutputState }

func (X509ManualCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*X509ManualCertificate)(nil)).Elem()
}

func (o X509ManualCertificateOutput) ToX509ManualCertificateOutput() X509ManualCertificateOutput {
	return o
}

func (o X509ManualCertificateOutput) ToX509ManualCertificateOutputWithContext(ctx context.Context) X509ManualCertificateOutput {
	return o
}

func (o X509ManualCertificateOutput) ToX509ManualCertificatePtrOutput() X509ManualCertificatePtrOutput {
	return o.ToX509ManualCertificatePtrOutputWithContext(context.Background())
}

func (o X509ManualCertificateOutput) ToX509ManualCertificatePtrOutputWithContext(ctx context.Context) X509ManualCertificatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v X509ManualCertificate) *X509ManualCertificate {
		return &v
	}).(X509ManualCertificatePtrOutput)
}

// Kubernetes secret containing an X.509 client certificate. This is a reference to the secret through an identifying name, not the secret itself.
func (o X509ManualCertificateOutput) SecretRef() pulumi.StringOutput {
	return o.ApplyT(func(v X509ManualCertificate) string { return v.SecretRef }).(pulumi.StringOutput)
}

type X509ManualCertificatePtrOutput struct{ *pulumi.OutputState }

func (X509ManualCertificatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**X509ManualCertificate)(nil)).Elem()
}

func (o X509ManualCertificatePtrOutput) ToX509ManualCertificatePtrOutput() X509ManualCertificatePtrOutput {
	return o
}

func (o X509ManualCertificatePtrOutput) ToX509ManualCertificatePtrOutputWithContext(ctx context.Context) X509ManualCertificatePtrOutput {
	return o
}

func (o X509ManualCertificatePtrOutput) Elem() X509ManualCertificateOutput {
	return o.ApplyT(func(v *X509ManualCertificate) X509ManualCertificate {
		if v != nil {
			return *v
		}
		var ret X509ManualCertificate
		return ret
	}).(X509ManualCertificateOutput)
}

// Kubernetes secret containing an X.509 client certificate. This is a reference to the secret through an identifying name, not the secret itself.
func (o X509ManualCertificatePtrOutput) SecretRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *X509ManualCertificate) *string {
		if v == nil {
			return nil
		}
		return &v.SecretRef
	}).(pulumi.StringPtrOutput)
}

// X509 Certificate Authentication properties.
type X509ManualCertificateResponse struct {
	// Kubernetes secret containing an X.509 client certificate. This is a reference to the secret through an identifying name, not the secret itself.
	SecretRef string `pulumi:"secretRef"`
}

// X509 Certificate Authentication properties.
type X509ManualCertificateResponseOutput struct{ *pulumi.OutputState }

func (X509ManualCertificateResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*X509ManualCertificateResponse)(nil)).Elem()
}

func (o X509ManualCertificateResponseOutput) ToX509ManualCertificateResponseOutput() X509ManualCertificateResponseOutput {
	return o
}

func (o X509ManualCertificateResponseOutput) ToX509ManualCertificateResponseOutputWithContext(ctx context.Context) X509ManualCertificateResponseOutput {
	return o
}

// Kubernetes secret containing an X.509 client certificate. This is a reference to the secret through an identifying name, not the secret itself.
func (o X509ManualCertificateResponseOutput) SecretRef() pulumi.StringOutput {
	return o.ApplyT(func(v X509ManualCertificateResponse) string { return v.SecretRef }).(pulumi.StringOutput)
}

type X509ManualCertificateResponsePtrOutput struct{ *pulumi.OutputState }

func (X509ManualCertificateResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**X509ManualCertificateResponse)(nil)).Elem()
}

func (o X509ManualCertificateResponsePtrOutput) ToX509ManualCertificateResponsePtrOutput() X509ManualCertificateResponsePtrOutput {
	return o
}

func (o X509ManualCertificateResponsePtrOutput) ToX509ManualCertificateResponsePtrOutputWithContext(ctx context.Context) X509ManualCertificateResponsePtrOutput {
	return o
}

func (o X509ManualCertificateResponsePtrOutput) Elem() X509ManualCertificateResponseOutput {
	return o.ApplyT(func(v *X509ManualCertificateResponse) X509ManualCertificateResponse {
		if v != nil {
			return *v
		}
		var ret X509ManualCertificateResponse
		return ret
	}).(X509ManualCertificateResponseOutput)
}

// Kubernetes secret containing an X.509 client certificate. This is a reference to the secret through an identifying name, not the secret itself.
func (o X509ManualCertificateResponsePtrOutput) SecretRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *X509ManualCertificateResponse) *string {
		if v == nil {
			return nil
		}
		return &v.SecretRef
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(AdvancedSettingsOutput{})
	pulumi.RegisterOutputType(AdvancedSettingsPtrOutput{})
	pulumi.RegisterOutputType(AdvancedSettingsResponseOutput{})
	pulumi.RegisterOutputType(AdvancedSettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(AkriConnectorPropertiesResponseOutput{})
	pulumi.RegisterOutputType(AkriConnectorTemplateAioMetadataOutput{})
	pulumi.RegisterOutputType(AkriConnectorTemplateAioMetadataPtrOutput{})
	pulumi.RegisterOutputType(AkriConnectorTemplateAioMetadataResponseOutput{})
	pulumi.RegisterOutputType(AkriConnectorTemplateAioMetadataResponsePtrOutput{})
	pulumi.RegisterOutputType(AkriConnectorTemplateBucketizedAllocationOutput{})
	pulumi.RegisterOutputType(AkriConnectorTemplateBucketizedAllocationPtrOutput{})
	pulumi.RegisterOutputType(AkriConnectorTemplateBucketizedAllocationResponseOutput{})
	pulumi.RegisterOutputType(AkriConnectorTemplateBucketizedAllocationResponsePtrOutput{})
	pulumi.RegisterOutputType(AkriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefsOutput{})
	pulumi.RegisterOutputType(AkriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefsPtrOutput{})
	pulumi.RegisterOutputType(AkriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefsResponseOutput{})
	pulumi.RegisterOutputType(AkriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefsResponsePtrOutput{})
	pulumi.RegisterOutputType(AkriConnectorTemplateDeviceInboundEndpointTypeOutput{})
	pulumi.RegisterOutputType(AkriConnectorTemplateDeviceInboundEndpointTypeArrayOutput{})
	pulumi.RegisterOutputType(AkriConnectorTemplateDeviceInboundEndpointTypeResponseOutput{})
	pulumi.RegisterOutputType(AkriConnectorTemplateDeviceInboundEndpointTypeResponseArrayOutput{})
	pulumi.RegisterOutputType(AkriConnectorTemplateDiagnosticsOutput{})
	pulumi.RegisterOutputType(AkriConnectorTemplateDiagnosticsPtrOutput{})
	pulumi.RegisterOutputType(AkriConnectorTemplateDiagnosticsResponseOutput{})
	pulumi.RegisterOutputType(AkriConnectorTemplateDiagnosticsResponsePtrOutput{})
	pulumi.RegisterOutputType(AkriConnectorTemplateHelmAdvancedConfigurationOutput{})
	pulumi.RegisterOutputType(AkriConnectorTemplateHelmAdvancedConfigurationPtrOutput{})
	pulumi.RegisterOutputType(AkriConnectorTemplateHelmAdvancedConfigurationResponseOutput{})
	pulumi.RegisterOutputType(AkriConnectorTemplateHelmAdvancedConfigurationResponsePtrOutput{})
	pulumi.RegisterOutputType(AkriConnectorTemplateHelmAuthSecretRefOutput{})
	pulumi.RegisterOutputType(AkriConnectorTemplateHelmAuthSecretRefPtrOutput{})
	pulumi.RegisterOutputType(AkriConnectorTemplateHelmAuthSecretRefResponseOutput{})
	pulumi.RegisterOutputType(AkriConnectorTemplateHelmAuthSecretRefResponsePtrOutput{})
	pulumi.RegisterOutputType(AkriConnectorTemplateHelmConfigurationOutput{})
	pulumi.RegisterOutputType(AkriConnectorTemplateHelmConfigurationPtrOutput{})
	pulumi.RegisterOutputType(AkriConnectorTemplateHelmConfigurationResponseOutput{})
	pulumi.RegisterOutputType(AkriConnectorTemplateHelmConfigurationSettingsOutput{})
	pulumi.RegisterOutputType(AkriConnectorTemplateHelmConfigurationSettingsPtrOutput{})
	pulumi.RegisterOutputType(AkriConnectorTemplateHelmConfigurationSettingsResponseOutput{})
	pulumi.RegisterOutputType(AkriConnectorTemplateHelmContainerRegistryOutput{})
	pulumi.RegisterOutputType(AkriConnectorTemplateHelmContainerRegistryPtrOutput{})
	pulumi.RegisterOutputType(AkriConnectorTemplateHelmContainerRegistryResponseOutput{})
	pulumi.RegisterOutputType(AkriConnectorTemplateHelmContainerRegistryResponsePtrOutput{})
	pulumi.RegisterOutputType(AkriConnectorTemplateHelmContainerRegistrySettingsOutput{})
	pulumi.RegisterOutputType(AkriConnectorTemplateHelmContainerRegistrySettingsPtrOutput{})
	pulumi.RegisterOutputType(AkriConnectorTemplateHelmContainerRegistrySettingsResponseOutput{})
	pulumi.RegisterOutputType(AkriConnectorTemplateHelmContainerRegistrySettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(AkriConnectorTemplateHelmDeleteConfigurationOutput{})
	pulumi.RegisterOutputType(AkriConnectorTemplateHelmDeleteConfigurationPtrOutput{})
	pulumi.RegisterOutputType(AkriConnectorTemplateHelmDeleteConfigurationResponseOutput{})
	pulumi.RegisterOutputType(AkriConnectorTemplateHelmDeleteConfigurationResponsePtrOutput{})
	pulumi.RegisterOutputType(AkriConnectorTemplateHelmInstallConfigurationOutput{})
	pulumi.RegisterOutputType(AkriConnectorTemplateHelmInstallConfigurationPtrOutput{})
	pulumi.RegisterOutputType(AkriConnectorTemplateHelmInstallConfigurationResponseOutput{})
	pulumi.RegisterOutputType(AkriConnectorTemplateHelmInstallConfigurationResponsePtrOutput{})
	pulumi.RegisterOutputType(AkriConnectorTemplateHelmRegistryEndpointRefOutput{})
	pulumi.RegisterOutputType(AkriConnectorTemplateHelmRegistryEndpointRefPtrOutput{})
	pulumi.RegisterOutputType(AkriConnectorTemplateHelmRegistryEndpointRefResponseOutput{})
	pulumi.RegisterOutputType(AkriConnectorTemplateHelmRegistryEndpointRefResponsePtrOutput{})
	pulumi.RegisterOutputType(AkriConnectorTemplateHelmUpgradeConfigurationOutput{})
	pulumi.RegisterOutputType(AkriConnectorTemplateHelmUpgradeConfigurationPtrOutput{})
	pulumi.RegisterOutputType(AkriConnectorTemplateHelmUpgradeConfigurationResponseOutput{})
	pulumi.RegisterOutputType(AkriConnectorTemplateHelmUpgradeConfigurationResponsePtrOutput{})
	pulumi.RegisterOutputType(AkriConnectorTemplateManagedConfigurationOutput{})
	pulumi.RegisterOutputType(AkriConnectorTemplateManagedConfigurationPtrOutput{})
	pulumi.RegisterOutputType(AkriConnectorTemplateManagedConfigurationResponseOutput{})
	pulumi.RegisterOutputType(AkriConnectorTemplatePersistentVolumeClaimOutput{})
	pulumi.RegisterOutputType(AkriConnectorTemplatePersistentVolumeClaimArrayOutput{})
	pulumi.RegisterOutputType(AkriConnectorTemplatePersistentVolumeClaimResponseOutput{})
	pulumi.RegisterOutputType(AkriConnectorTemplatePersistentVolumeClaimResponseArrayOutput{})
	pulumi.RegisterOutputType(AkriConnectorTemplatePropertiesOutput{})
	pulumi.RegisterOutputType(AkriConnectorTemplatePropertiesPtrOutput{})
	pulumi.RegisterOutputType(AkriConnectorTemplatePropertiesResponseOutput{})
	pulumi.RegisterOutputType(AkriConnectorTemplateRuntimeImageConfigurationOutput{})
	pulumi.RegisterOutputType(AkriConnectorTemplateRuntimeImageConfigurationPtrOutput{})
	pulumi.RegisterOutputType(AkriConnectorTemplateRuntimeImageConfigurationResponseOutput{})
	pulumi.RegisterOutputType(AkriConnectorTemplateRuntimeImageConfigurationSettingsOutput{})
	pulumi.RegisterOutputType(AkriConnectorTemplateRuntimeImageConfigurationSettingsPtrOutput{})
	pulumi.RegisterOutputType(AkriConnectorTemplateRuntimeImageConfigurationSettingsResponseOutput{})
	pulumi.RegisterOutputType(AkriConnectorTemplateRuntimeStatefulSetConfigurationOutput{})
	pulumi.RegisterOutputType(AkriConnectorTemplateRuntimeStatefulSetConfigurationPtrOutput{})
	pulumi.RegisterOutputType(AkriConnectorTemplateRuntimeStatefulSetConfigurationResponseOutput{})
	pulumi.RegisterOutputType(AkriConnectorTemplateTrustListOutput{})
	pulumi.RegisterOutputType(AkriConnectorTemplateTrustListPtrOutput{})
	pulumi.RegisterOutputType(AkriConnectorTemplateTrustListResponseOutput{})
	pulumi.RegisterOutputType(AkriConnectorTemplateTrustListResponsePtrOutput{})
	pulumi.RegisterOutputType(AkriConnectorsContainerRegistryOutput{})
	pulumi.RegisterOutputType(AkriConnectorsContainerRegistryPtrOutput{})
	pulumi.RegisterOutputType(AkriConnectorsContainerRegistryResponseOutput{})
	pulumi.RegisterOutputType(AkriConnectorsContainerRegistryResponsePtrOutput{})
	pulumi.RegisterOutputType(AkriConnectorsContainerRegistrySettingsOutput{})
	pulumi.RegisterOutputType(AkriConnectorsContainerRegistrySettingsPtrOutput{})
	pulumi.RegisterOutputType(AkriConnectorsContainerRegistrySettingsResponseOutput{})
	pulumi.RegisterOutputType(AkriConnectorsContainerRegistrySettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(AkriConnectorsDiagnosticsLogsOutput{})
	pulumi.RegisterOutputType(AkriConnectorsDiagnosticsLogsPtrOutput{})
	pulumi.RegisterOutputType(AkriConnectorsDiagnosticsLogsResponseOutput{})
	pulumi.RegisterOutputType(AkriConnectorsDiagnosticsLogsResponsePtrOutput{})
	pulumi.RegisterOutputType(AkriConnectorsDigestOutput{})
	pulumi.RegisterOutputType(AkriConnectorsDigestPtrOutput{})
	pulumi.RegisterOutputType(AkriConnectorsDigestResponseOutput{})
	pulumi.RegisterOutputType(AkriConnectorsDigestResponsePtrOutput{})
	pulumi.RegisterOutputType(AkriConnectorsImagePullSecretOutput{})
	pulumi.RegisterOutputType(AkriConnectorsImagePullSecretArrayOutput{})
	pulumi.RegisterOutputType(AkriConnectorsImagePullSecretResponseOutput{})
	pulumi.RegisterOutputType(AkriConnectorsImagePullSecretResponseArrayOutput{})
	pulumi.RegisterOutputType(AkriConnectorsMqttConnectionConfigurationOutput{})
	pulumi.RegisterOutputType(AkriConnectorsMqttConnectionConfigurationPtrOutput{})
	pulumi.RegisterOutputType(AkriConnectorsMqttConnectionConfigurationResponseOutput{})
	pulumi.RegisterOutputType(AkriConnectorsMqttConnectionConfigurationResponsePtrOutput{})
	pulumi.RegisterOutputType(AkriConnectorsRegistryEndpointRefOutput{})
	pulumi.RegisterOutputType(AkriConnectorsRegistryEndpointRefPtrOutput{})
	pulumi.RegisterOutputType(AkriConnectorsRegistryEndpointRefResponseOutput{})
	pulumi.RegisterOutputType(AkriConnectorsRegistryEndpointRefResponsePtrOutput{})
	pulumi.RegisterOutputType(AkriConnectorsSecretOutput{})
	pulumi.RegisterOutputType(AkriConnectorsSecretArrayOutput{})
	pulumi.RegisterOutputType(AkriConnectorsSecretResponseOutput{})
	pulumi.RegisterOutputType(AkriConnectorsSecretResponseArrayOutput{})
	pulumi.RegisterOutputType(AkriConnectorsServiceAccountAuthenticationOutput{})
	pulumi.RegisterOutputType(AkriConnectorsServiceAccountAuthenticationPtrOutput{})
	pulumi.RegisterOutputType(AkriConnectorsServiceAccountAuthenticationResponseOutput{})
	pulumi.RegisterOutputType(AkriConnectorsServiceAccountAuthenticationResponsePtrOutput{})
	pulumi.RegisterOutputType(AkriConnectorsServiceAccountTokenSettingsOutput{})
	pulumi.RegisterOutputType(AkriConnectorsServiceAccountTokenSettingsPtrOutput{})
	pulumi.RegisterOutputType(AkriConnectorsServiceAccountTokenSettingsResponseOutput{})
	pulumi.RegisterOutputType(AkriConnectorsServiceAccountTokenSettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(AkriConnectorsTagOutput{})
	pulumi.RegisterOutputType(AkriConnectorsTagPtrOutput{})
	pulumi.RegisterOutputType(AkriConnectorsTagResponseOutput{})
	pulumi.RegisterOutputType(AkriConnectorsTagResponsePtrOutput{})
	pulumi.RegisterOutputType(AuthorizationConfigOutput{})
	pulumi.RegisterOutputType(AuthorizationConfigPtrOutput{})
	pulumi.RegisterOutputType(AuthorizationConfigResponseOutput{})
	pulumi.RegisterOutputType(AuthorizationRuleOutput{})
	pulumi.RegisterOutputType(AuthorizationRuleArrayOutput{})
	pulumi.RegisterOutputType(AuthorizationRuleResponseOutput{})
	pulumi.RegisterOutputType(AuthorizationRuleResponseArrayOutput{})
	pulumi.RegisterOutputType(BackendChainOutput{})
	pulumi.RegisterOutputType(BackendChainPtrOutput{})
	pulumi.RegisterOutputType(BackendChainResponseOutput{})
	pulumi.RegisterOutputType(BackendChainResponsePtrOutput{})
	pulumi.RegisterOutputType(BatchingConfigurationOutput{})
	pulumi.RegisterOutputType(BatchingConfigurationPtrOutput{})
	pulumi.RegisterOutputType(BatchingConfigurationResponseOutput{})
	pulumi.RegisterOutputType(BatchingConfigurationResponsePtrOutput{})
	pulumi.RegisterOutputType(BrokerAuthenticationPropertiesOutput{})
	pulumi.RegisterOutputType(BrokerAuthenticationPropertiesPtrOutput{})
	pulumi.RegisterOutputType(BrokerAuthenticationPropertiesResponseOutput{})
	pulumi.RegisterOutputType(BrokerAuthenticatorCustomAuthOutput{})
	pulumi.RegisterOutputType(BrokerAuthenticatorCustomAuthPtrOutput{})
	pulumi.RegisterOutputType(BrokerAuthenticatorCustomAuthResponseOutput{})
	pulumi.RegisterOutputType(BrokerAuthenticatorCustomAuthResponsePtrOutput{})
	pulumi.RegisterOutputType(BrokerAuthenticatorMethodCustomOutput{})
	pulumi.RegisterOutputType(BrokerAuthenticatorMethodCustomPtrOutput{})
	pulumi.RegisterOutputType(BrokerAuthenticatorMethodCustomResponseOutput{})
	pulumi.RegisterOutputType(BrokerAuthenticatorMethodCustomResponsePtrOutput{})
	pulumi.RegisterOutputType(BrokerAuthenticatorMethodSatOutput{})
	pulumi.RegisterOutputType(BrokerAuthenticatorMethodSatPtrOutput{})
	pulumi.RegisterOutputType(BrokerAuthenticatorMethodSatResponseOutput{})
	pulumi.RegisterOutputType(BrokerAuthenticatorMethodSatResponsePtrOutput{})
	pulumi.RegisterOutputType(BrokerAuthenticatorMethodX509Output{})
	pulumi.RegisterOutputType(BrokerAuthenticatorMethodX509PtrOutput{})
	pulumi.RegisterOutputType(BrokerAuthenticatorMethodX509AttributesOutput{})
	pulumi.RegisterOutputType(BrokerAuthenticatorMethodX509AttributesMapOutput{})
	pulumi.RegisterOutputType(BrokerAuthenticatorMethodX509AttributesResponseOutput{})
	pulumi.RegisterOutputType(BrokerAuthenticatorMethodX509AttributesResponseMapOutput{})
	pulumi.RegisterOutputType(BrokerAuthenticatorMethodX509ResponseOutput{})
	pulumi.RegisterOutputType(BrokerAuthenticatorMethodX509ResponsePtrOutput{})
	pulumi.RegisterOutputType(BrokerAuthenticatorMethodsOutput{})
	pulumi.RegisterOutputType(BrokerAuthenticatorMethodsArrayOutput{})
	pulumi.RegisterOutputType(BrokerAuthenticatorMethodsResponseOutput{})
	pulumi.RegisterOutputType(BrokerAuthenticatorMethodsResponseArrayOutput{})
	pulumi.RegisterOutputType(BrokerAuthorizationPropertiesOutput{})
	pulumi.RegisterOutputType(BrokerAuthorizationPropertiesPtrOutput{})
	pulumi.RegisterOutputType(BrokerAuthorizationPropertiesResponseOutput{})
	pulumi.RegisterOutputType(BrokerDiagnosticsOutput{})
	pulumi.RegisterOutputType(BrokerDiagnosticsPtrOutput{})
	pulumi.RegisterOutputType(BrokerDiagnosticsResponseOutput{})
	pulumi.RegisterOutputType(BrokerDiagnosticsResponsePtrOutput{})
	pulumi.RegisterOutputType(BrokerListenerPropertiesOutput{})
	pulumi.RegisterOutputType(BrokerListenerPropertiesPtrOutput{})
	pulumi.RegisterOutputType(BrokerListenerPropertiesResponseOutput{})
	pulumi.RegisterOutputType(BrokerPropertiesOutput{})
	pulumi.RegisterOutputType(BrokerPropertiesPtrOutput{})
	pulumi.RegisterOutputType(BrokerPropertiesResponseOutput{})
	pulumi.RegisterOutputType(BrokerResourceRuleOutput{})
	pulumi.RegisterOutputType(BrokerResourceRuleArrayOutput{})
	pulumi.RegisterOutputType(BrokerResourceRuleResponseOutput{})
	pulumi.RegisterOutputType(BrokerResourceRuleResponseArrayOutput{})
	pulumi.RegisterOutputType(CardinalityOutput{})
	pulumi.RegisterOutputType(CardinalityPtrOutput{})
	pulumi.RegisterOutputType(CardinalityResponseOutput{})
	pulumi.RegisterOutputType(CardinalityResponsePtrOutput{})
	pulumi.RegisterOutputType(CertManagerCertOptionsOutput{})
	pulumi.RegisterOutputType(CertManagerCertOptionsPtrOutput{})
	pulumi.RegisterOutputType(CertManagerCertOptionsResponseOutput{})
	pulumi.RegisterOutputType(CertManagerCertOptionsResponsePtrOutput{})
	pulumi.RegisterOutputType(CertManagerCertificateSpecOutput{})
	pulumi.RegisterOutputType(CertManagerCertificateSpecPtrOutput{})
	pulumi.RegisterOutputType(CertManagerCertificateSpecResponseOutput{})
	pulumi.RegisterOutputType(CertManagerCertificateSpecResponsePtrOutput{})
	pulumi.RegisterOutputType(CertManagerIssuerRefOutput{})
	pulumi.RegisterOutputType(CertManagerIssuerRefPtrOutput{})
	pulumi.RegisterOutputType(CertManagerIssuerRefResponseOutput{})
	pulumi.RegisterOutputType(CertManagerIssuerRefResponsePtrOutput{})
	pulumi.RegisterOutputType(CertManagerPrivateKeyOutput{})
	pulumi.RegisterOutputType(CertManagerPrivateKeyPtrOutput{})
	pulumi.RegisterOutputType(CertManagerPrivateKeyResponseOutput{})
	pulumi.RegisterOutputType(CertManagerPrivateKeyResponsePtrOutput{})
	pulumi.RegisterOutputType(ClientConfigOutput{})
	pulumi.RegisterOutputType(ClientConfigPtrOutput{})
	pulumi.RegisterOutputType(ClientConfigResponseOutput{})
	pulumi.RegisterOutputType(ClientConfigResponsePtrOutput{})
	pulumi.RegisterOutputType(DataflowBuiltInTransformationDatasetOutput{})
	pulumi.RegisterOutputType(DataflowBuiltInTransformationDatasetArrayOutput{})
	pulumi.RegisterOutputType(DataflowBuiltInTransformationDatasetResponseOutput{})
	pulumi.RegisterOutputType(DataflowBuiltInTransformationDatasetResponseArrayOutput{})
	pulumi.RegisterOutputType(DataflowBuiltInTransformationFilterOutput{})
	pulumi.RegisterOutputType(DataflowBuiltInTransformationFilterArrayOutput{})
	pulumi.RegisterOutputType(DataflowBuiltInTransformationFilterResponseOutput{})
	pulumi.RegisterOutputType(DataflowBuiltInTransformationFilterResponseArrayOutput{})
	pulumi.RegisterOutputType(DataflowBuiltInTransformationMapOutput{})
	pulumi.RegisterOutputType(DataflowBuiltInTransformationMapArrayOutput{})
	pulumi.RegisterOutputType(DataflowBuiltInTransformationMapResponseOutput{})
	pulumi.RegisterOutputType(DataflowBuiltInTransformationMapResponseArrayOutput{})
	pulumi.RegisterOutputType(DataflowBuiltInTransformationSettingsOutput{})
	pulumi.RegisterOutputType(DataflowBuiltInTransformationSettingsPtrOutput{})
	pulumi.RegisterOutputType(DataflowBuiltInTransformationSettingsResponseOutput{})
	pulumi.RegisterOutputType(DataflowBuiltInTransformationSettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(DataflowDestinationOperationSettingsOutput{})
	pulumi.RegisterOutputType(DataflowDestinationOperationSettingsPtrOutput{})
	pulumi.RegisterOutputType(DataflowDestinationOperationSettingsResponseOutput{})
	pulumi.RegisterOutputType(DataflowDestinationOperationSettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(DataflowEndpointAuthenticationAccessTokenOutput{})
	pulumi.RegisterOutputType(DataflowEndpointAuthenticationAccessTokenPtrOutput{})
	pulumi.RegisterOutputType(DataflowEndpointAuthenticationAccessTokenResponseOutput{})
	pulumi.RegisterOutputType(DataflowEndpointAuthenticationAccessTokenResponsePtrOutput{})
	pulumi.RegisterOutputType(DataflowEndpointAuthenticationSaslOutput{})
	pulumi.RegisterOutputType(DataflowEndpointAuthenticationSaslPtrOutput{})
	pulumi.RegisterOutputType(DataflowEndpointAuthenticationSaslResponseOutput{})
	pulumi.RegisterOutputType(DataflowEndpointAuthenticationSaslResponsePtrOutput{})
	pulumi.RegisterOutputType(DataflowEndpointAuthenticationServiceAccountTokenOutput{})
	pulumi.RegisterOutputType(DataflowEndpointAuthenticationServiceAccountTokenPtrOutput{})
	pulumi.RegisterOutputType(DataflowEndpointAuthenticationServiceAccountTokenResponseOutput{})
	pulumi.RegisterOutputType(DataflowEndpointAuthenticationServiceAccountTokenResponsePtrOutput{})
	pulumi.RegisterOutputType(DataflowEndpointAuthenticationSystemAssignedManagedIdentityOutput{})
	pulumi.RegisterOutputType(DataflowEndpointAuthenticationSystemAssignedManagedIdentityPtrOutput{})
	pulumi.RegisterOutputType(DataflowEndpointAuthenticationSystemAssignedManagedIdentityResponseOutput{})
	pulumi.RegisterOutputType(DataflowEndpointAuthenticationSystemAssignedManagedIdentityResponsePtrOutput{})
	pulumi.RegisterOutputType(DataflowEndpointAuthenticationUserAssignedManagedIdentityOutput{})
	pulumi.RegisterOutputType(DataflowEndpointAuthenticationUserAssignedManagedIdentityPtrOutput{})
	pulumi.RegisterOutputType(DataflowEndpointAuthenticationUserAssignedManagedIdentityResponseOutput{})
	pulumi.RegisterOutputType(DataflowEndpointAuthenticationUserAssignedManagedIdentityResponsePtrOutput{})
	pulumi.RegisterOutputType(DataflowEndpointAuthenticationX509Output{})
	pulumi.RegisterOutputType(DataflowEndpointAuthenticationX509PtrOutput{})
	pulumi.RegisterOutputType(DataflowEndpointAuthenticationX509ResponseOutput{})
	pulumi.RegisterOutputType(DataflowEndpointAuthenticationX509ResponsePtrOutput{})
	pulumi.RegisterOutputType(DataflowEndpointDataExplorerOutput{})
	pulumi.RegisterOutputType(DataflowEndpointDataExplorerPtrOutput{})
	pulumi.RegisterOutputType(DataflowEndpointDataExplorerAuthenticationOutput{})
	pulumi.RegisterOutputType(DataflowEndpointDataExplorerAuthenticationPtrOutput{})
	pulumi.RegisterOutputType(DataflowEndpointDataExplorerAuthenticationResponseOutput{})
	pulumi.RegisterOutputType(DataflowEndpointDataExplorerAuthenticationResponsePtrOutput{})
	pulumi.RegisterOutputType(DataflowEndpointDataExplorerResponseOutput{})
	pulumi.RegisterOutputType(DataflowEndpointDataExplorerResponsePtrOutput{})
	pulumi.RegisterOutputType(DataflowEndpointDataLakeStorageOutput{})
	pulumi.RegisterOutputType(DataflowEndpointDataLakeStoragePtrOutput{})
	pulumi.RegisterOutputType(DataflowEndpointDataLakeStorageAuthenticationOutput{})
	pulumi.RegisterOutputType(DataflowEndpointDataLakeStorageAuthenticationPtrOutput{})
	pulumi.RegisterOutputType(DataflowEndpointDataLakeStorageAuthenticationResponseOutput{})
	pulumi.RegisterOutputType(DataflowEndpointDataLakeStorageAuthenticationResponsePtrOutput{})
	pulumi.RegisterOutputType(DataflowEndpointDataLakeStorageResponseOutput{})
	pulumi.RegisterOutputType(DataflowEndpointDataLakeStorageResponsePtrOutput{})
	pulumi.RegisterOutputType(DataflowEndpointFabricOneLakeOutput{})
	pulumi.RegisterOutputType(DataflowEndpointFabricOneLakePtrOutput{})
	pulumi.RegisterOutputType(DataflowEndpointFabricOneLakeAuthenticationOutput{})
	pulumi.RegisterOutputType(DataflowEndpointFabricOneLakeAuthenticationPtrOutput{})
	pulumi.RegisterOutputType(DataflowEndpointFabricOneLakeAuthenticationResponseOutput{})
	pulumi.RegisterOutputType(DataflowEndpointFabricOneLakeAuthenticationResponsePtrOutput{})
	pulumi.RegisterOutputType(DataflowEndpointFabricOneLakeNamesOutput{})
	pulumi.RegisterOutputType(DataflowEndpointFabricOneLakeNamesPtrOutput{})
	pulumi.RegisterOutputType(DataflowEndpointFabricOneLakeNamesResponseOutput{})
	pulumi.RegisterOutputType(DataflowEndpointFabricOneLakeNamesResponsePtrOutput{})
	pulumi.RegisterOutputType(DataflowEndpointFabricOneLakeResponseOutput{})
	pulumi.RegisterOutputType(DataflowEndpointFabricOneLakeResponsePtrOutput{})
	pulumi.RegisterOutputType(DataflowEndpointKafkaOutput{})
	pulumi.RegisterOutputType(DataflowEndpointKafkaPtrOutput{})
	pulumi.RegisterOutputType(DataflowEndpointKafkaAuthenticationOutput{})
	pulumi.RegisterOutputType(DataflowEndpointKafkaAuthenticationPtrOutput{})
	pulumi.RegisterOutputType(DataflowEndpointKafkaAuthenticationResponseOutput{})
	pulumi.RegisterOutputType(DataflowEndpointKafkaAuthenticationResponsePtrOutput{})
	pulumi.RegisterOutputType(DataflowEndpointKafkaBatchingOutput{})
	pulumi.RegisterOutputType(DataflowEndpointKafkaBatchingPtrOutput{})
	pulumi.RegisterOutputType(DataflowEndpointKafkaBatchingResponseOutput{})
	pulumi.RegisterOutputType(DataflowEndpointKafkaBatchingResponsePtrOutput{})
	pulumi.RegisterOutputType(DataflowEndpointKafkaResponseOutput{})
	pulumi.RegisterOutputType(DataflowEndpointKafkaResponsePtrOutput{})
	pulumi.RegisterOutputType(DataflowEndpointLocalStorageOutput{})
	pulumi.RegisterOutputType(DataflowEndpointLocalStoragePtrOutput{})
	pulumi.RegisterOutputType(DataflowEndpointLocalStorageResponseOutput{})
	pulumi.RegisterOutputType(DataflowEndpointLocalStorageResponsePtrOutput{})
	pulumi.RegisterOutputType(DataflowEndpointMqttOutput{})
	pulumi.RegisterOutputType(DataflowEndpointMqttPtrOutput{})
	pulumi.RegisterOutputType(DataflowEndpointMqttAuthenticationOutput{})
	pulumi.RegisterOutputType(DataflowEndpointMqttAuthenticationPtrOutput{})
	pulumi.RegisterOutputType(DataflowEndpointMqttAuthenticationResponseOutput{})
	pulumi.RegisterOutputType(DataflowEndpointMqttAuthenticationResponsePtrOutput{})
	pulumi.RegisterOutputType(DataflowEndpointMqttResponseOutput{})
	pulumi.RegisterOutputType(DataflowEndpointMqttResponsePtrOutput{})
	pulumi.RegisterOutputType(DataflowEndpointPropertiesOutput{})
	pulumi.RegisterOutputType(DataflowEndpointPropertiesPtrOutput{})
	pulumi.RegisterOutputType(DataflowEndpointPropertiesResponseOutput{})
	pulumi.RegisterOutputType(DataflowGraphConnectionInputOutput{})
	pulumi.RegisterOutputType(DataflowGraphConnectionInputResponseOutput{})
	pulumi.RegisterOutputType(DataflowGraphConnectionOutputOutput{})
	pulumi.RegisterOutputType(DataflowGraphConnectionOutputResponseOutput{})
	pulumi.RegisterOutputType(DataflowGraphConnectionSchemaSettingsOutput{})
	pulumi.RegisterOutputType(DataflowGraphConnectionSchemaSettingsPtrOutput{})
	pulumi.RegisterOutputType(DataflowGraphConnectionSchemaSettingsResponseOutput{})
	pulumi.RegisterOutputType(DataflowGraphConnectionSchemaSettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(DataflowGraphDestinationNodeOutput{})
	pulumi.RegisterOutputType(DataflowGraphDestinationNodeResponseOutput{})
	pulumi.RegisterOutputType(DataflowGraphDestinationNodeSettingsOutput{})
	pulumi.RegisterOutputType(DataflowGraphDestinationNodeSettingsResponseOutput{})
	pulumi.RegisterOutputType(DataflowGraphDestinationSchemaSettingsOutput{})
	pulumi.RegisterOutputType(DataflowGraphDestinationSchemaSettingsPtrOutput{})
	pulumi.RegisterOutputType(DataflowGraphDestinationSchemaSettingsResponseOutput{})
	pulumi.RegisterOutputType(DataflowGraphDestinationSchemaSettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(DataflowGraphGraphNodeOutput{})
	pulumi.RegisterOutputType(DataflowGraphGraphNodeConfigurationOutput{})
	pulumi.RegisterOutputType(DataflowGraphGraphNodeConfigurationArrayOutput{})
	pulumi.RegisterOutputType(DataflowGraphGraphNodeConfigurationResponseOutput{})
	pulumi.RegisterOutputType(DataflowGraphGraphNodeConfigurationResponseArrayOutput{})
	pulumi.RegisterOutputType(DataflowGraphGraphNodeResponseOutput{})
	pulumi.RegisterOutputType(DataflowGraphNodeConnectionOutput{})
	pulumi.RegisterOutputType(DataflowGraphNodeConnectionArrayOutput{})
	pulumi.RegisterOutputType(DataflowGraphNodeConnectionResponseOutput{})
	pulumi.RegisterOutputType(DataflowGraphNodeConnectionResponseArrayOutput{})
	pulumi.RegisterOutputType(DataflowGraphNodeGraphSettingsOutput{})
	pulumi.RegisterOutputType(DataflowGraphNodeGraphSettingsResponseOutput{})
	pulumi.RegisterOutputType(DataflowGraphPropertiesOutput{})
	pulumi.RegisterOutputType(DataflowGraphPropertiesPtrOutput{})
	pulumi.RegisterOutputType(DataflowGraphPropertiesResponseOutput{})
	pulumi.RegisterOutputType(DataflowGraphSourceNodeOutput{})
	pulumi.RegisterOutputType(DataflowGraphSourceNodeResponseOutput{})
	pulumi.RegisterOutputType(DataflowGraphSourceSettingsOutput{})
	pulumi.RegisterOutputType(DataflowGraphSourceSettingsResponseOutput{})
	pulumi.RegisterOutputType(DataflowOperationOutput{})
	pulumi.RegisterOutputType(DataflowOperationArrayOutput{})
	pulumi.RegisterOutputType(DataflowOperationResponseOutput{})
	pulumi.RegisterOutputType(DataflowOperationResponseArrayOutput{})
	pulumi.RegisterOutputType(DataflowProfilePropertiesOutput{})
	pulumi.RegisterOutputType(DataflowProfilePropertiesPtrOutput{})
	pulumi.RegisterOutputType(DataflowProfilePropertiesResponseOutput{})
	pulumi.RegisterOutputType(DataflowPropertiesOutput{})
	pulumi.RegisterOutputType(DataflowPropertiesPtrOutput{})
	pulumi.RegisterOutputType(DataflowPropertiesResponseOutput{})
	pulumi.RegisterOutputType(DataflowSourceOperationSettingsOutput{})
	pulumi.RegisterOutputType(DataflowSourceOperationSettingsPtrOutput{})
	pulumi.RegisterOutputType(DataflowSourceOperationSettingsResponseOutput{})
	pulumi.RegisterOutputType(DataflowSourceOperationSettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(DiagnosticsLogsOutput{})
	pulumi.RegisterOutputType(DiagnosticsLogsPtrOutput{})
	pulumi.RegisterOutputType(DiagnosticsLogsResponseOutput{})
	pulumi.RegisterOutputType(DiagnosticsLogsResponsePtrOutput{})
	pulumi.RegisterOutputType(DiskBackedMessageBufferOutput{})
	pulumi.RegisterOutputType(DiskBackedMessageBufferPtrOutput{})
	pulumi.RegisterOutputType(DiskBackedMessageBufferResponseOutput{})
	pulumi.RegisterOutputType(DiskBackedMessageBufferResponsePtrOutput{})
	pulumi.RegisterOutputType(ExtendedLocationOutput{})
	pulumi.RegisterOutputType(ExtendedLocationPtrOutput{})
	pulumi.RegisterOutputType(ExtendedLocationResponseOutput{})
	pulumi.RegisterOutputType(ExtendedLocationResponsePtrOutput{})
	pulumi.RegisterOutputType(FrontendOutput{})
	pulumi.RegisterOutputType(FrontendPtrOutput{})
	pulumi.RegisterOutputType(FrontendResponseOutput{})
	pulumi.RegisterOutputType(FrontendResponsePtrOutput{})
	pulumi.RegisterOutputType(GenerateResourceLimitsOutput{})
	pulumi.RegisterOutputType(GenerateResourceLimitsPtrOutput{})
	pulumi.RegisterOutputType(GenerateResourceLimitsResponseOutput{})
	pulumi.RegisterOutputType(GenerateResourceLimitsResponsePtrOutput{})
	pulumi.RegisterOutputType(InstancePropertiesOutput{})
	pulumi.RegisterOutputType(InstancePropertiesPtrOutput{})
	pulumi.RegisterOutputType(InstancePropertiesResponseOutput{})
	pulumi.RegisterOutputType(KubernetesReferenceOutput{})
	pulumi.RegisterOutputType(KubernetesReferencePtrOutput{})
	pulumi.RegisterOutputType(KubernetesReferenceResponseOutput{})
	pulumi.RegisterOutputType(KubernetesReferenceResponsePtrOutput{})
	pulumi.RegisterOutputType(ListenerPortOutput{})
	pulumi.RegisterOutputType(ListenerPortArrayOutput{})
	pulumi.RegisterOutputType(ListenerPortResponseOutput{})
	pulumi.RegisterOutputType(ListenerPortResponseArrayOutput{})
	pulumi.RegisterOutputType(LocalKubernetesReferenceOutput{})
	pulumi.RegisterOutputType(LocalKubernetesReferencePtrOutput{})
	pulumi.RegisterOutputType(LocalKubernetesReferenceResponseOutput{})
	pulumi.RegisterOutputType(LocalKubernetesReferenceResponsePtrOutput{})
	pulumi.RegisterOutputType(ManagedServiceIdentityOutput{})
	pulumi.RegisterOutputType(ManagedServiceIdentityPtrOutput{})
	pulumi.RegisterOutputType(ManagedServiceIdentityResponseOutput{})
	pulumi.RegisterOutputType(ManagedServiceIdentityResponsePtrOutput{})
	pulumi.RegisterOutputType(MetricsOutput{})
	pulumi.RegisterOutputType(MetricsPtrOutput{})
	pulumi.RegisterOutputType(MetricsResponseOutput{})
	pulumi.RegisterOutputType(MetricsResponsePtrOutput{})
	pulumi.RegisterOutputType(PrincipalDefinitionOutput{})
	pulumi.RegisterOutputType(PrincipalDefinitionResponseOutput{})
	pulumi.RegisterOutputType(ProfileDiagnosticsOutput{})
	pulumi.RegisterOutputType(ProfileDiagnosticsPtrOutput{})
	pulumi.RegisterOutputType(ProfileDiagnosticsResponseOutput{})
	pulumi.RegisterOutputType(ProfileDiagnosticsResponsePtrOutput{})
	pulumi.RegisterOutputType(RegistryEndpointAnonymousAuthenticationOutput{})
	pulumi.RegisterOutputType(RegistryEndpointAnonymousAuthenticationPtrOutput{})
	pulumi.RegisterOutputType(RegistryEndpointAnonymousAuthenticationResponseOutput{})
	pulumi.RegisterOutputType(RegistryEndpointArtifactPullSecretAuthenticationOutput{})
	pulumi.RegisterOutputType(RegistryEndpointArtifactPullSecretAuthenticationPtrOutput{})
	pulumi.RegisterOutputType(RegistryEndpointArtifactPullSecretAuthenticationResponseOutput{})
	pulumi.RegisterOutputType(RegistryEndpointArtifactPullSecretSettingsOutput{})
	pulumi.RegisterOutputType(RegistryEndpointArtifactPullSecretSettingsPtrOutput{})
	pulumi.RegisterOutputType(RegistryEndpointArtifactPullSecretSettingsResponseOutput{})
	pulumi.RegisterOutputType(RegistryEndpointPropertiesOutput{})
	pulumi.RegisterOutputType(RegistryEndpointPropertiesPtrOutput{})
	pulumi.RegisterOutputType(RegistryEndpointPropertiesResponseOutput{})
	pulumi.RegisterOutputType(RegistryEndpointSystemAssignedIdentityAuthenticationOutput{})
	pulumi.RegisterOutputType(RegistryEndpointSystemAssignedIdentityAuthenticationPtrOutput{})
	pulumi.RegisterOutputType(RegistryEndpointSystemAssignedIdentityAuthenticationResponseOutput{})
	pulumi.RegisterOutputType(RegistryEndpointSystemAssignedManagedIdentitySettingsOutput{})
	pulumi.RegisterOutputType(RegistryEndpointSystemAssignedManagedIdentitySettingsPtrOutput{})
	pulumi.RegisterOutputType(RegistryEndpointSystemAssignedManagedIdentitySettingsResponseOutput{})
	pulumi.RegisterOutputType(RegistryEndpointTrustedSettingsOutput{})
	pulumi.RegisterOutputType(RegistryEndpointTrustedSettingsPtrOutput{})
	pulumi.RegisterOutputType(RegistryEndpointTrustedSettingsResponseOutput{})
	pulumi.RegisterOutputType(RegistryEndpointTrustedSettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(RegistryEndpointTrustedSigningKeyConfigMapOutput{})
	pulumi.RegisterOutputType(RegistryEndpointTrustedSigningKeyConfigMapPtrOutput{})
	pulumi.RegisterOutputType(RegistryEndpointTrustedSigningKeyConfigMapResponseOutput{})
	pulumi.RegisterOutputType(RegistryEndpointTrustedSigningKeyConfigMapResponsePtrOutput{})
	pulumi.RegisterOutputType(RegistryEndpointTrustedSigningKeySecretOutput{})
	pulumi.RegisterOutputType(RegistryEndpointTrustedSigningKeySecretPtrOutput{})
	pulumi.RegisterOutputType(RegistryEndpointTrustedSigningKeySecretResponseOutput{})
	pulumi.RegisterOutputType(RegistryEndpointTrustedSigningKeySecretResponsePtrOutput{})
	pulumi.RegisterOutputType(RegistryEndpointUserAssignedIdentityAuthenticationOutput{})
	pulumi.RegisterOutputType(RegistryEndpointUserAssignedIdentityAuthenticationPtrOutput{})
	pulumi.RegisterOutputType(RegistryEndpointUserAssignedIdentityAuthenticationResponseOutput{})
	pulumi.RegisterOutputType(RegistryEndpointUserAssignedManagedIdentitySettingsOutput{})
	pulumi.RegisterOutputType(RegistryEndpointUserAssignedManagedIdentitySettingsPtrOutput{})
	pulumi.RegisterOutputType(RegistryEndpointUserAssignedManagedIdentitySettingsResponseOutput{})
	pulumi.RegisterOutputType(SanForCertOutput{})
	pulumi.RegisterOutputType(SanForCertPtrOutput{})
	pulumi.RegisterOutputType(SanForCertResponseOutput{})
	pulumi.RegisterOutputType(SanForCertResponsePtrOutput{})
	pulumi.RegisterOutputType(SchemaRegistryRefOutput{})
	pulumi.RegisterOutputType(SchemaRegistryRefPtrOutput{})
	pulumi.RegisterOutputType(SchemaRegistryRefResponseOutput{})
	pulumi.RegisterOutputType(SelfCheckOutput{})
	pulumi.RegisterOutputType(SelfCheckPtrOutput{})
	pulumi.RegisterOutputType(SelfCheckResponseOutput{})
	pulumi.RegisterOutputType(SelfCheckResponsePtrOutput{})
	pulumi.RegisterOutputType(SelfTracingOutput{})
	pulumi.RegisterOutputType(SelfTracingPtrOutput{})
	pulumi.RegisterOutputType(SelfTracingResponseOutput{})
	pulumi.RegisterOutputType(SelfTracingResponsePtrOutput{})
	pulumi.RegisterOutputType(StateStoreResourceRuleOutput{})
	pulumi.RegisterOutputType(StateStoreResourceRuleArrayOutput{})
	pulumi.RegisterOutputType(StateStoreResourceRuleResponseOutput{})
	pulumi.RegisterOutputType(StateStoreResourceRuleResponseArrayOutput{})
	pulumi.RegisterOutputType(SubscriberQueueLimitOutput{})
	pulumi.RegisterOutputType(SubscriberQueueLimitPtrOutput{})
	pulumi.RegisterOutputType(SubscriberQueueLimitResponseOutput{})
	pulumi.RegisterOutputType(SubscriberQueueLimitResponsePtrOutput{})
	pulumi.RegisterOutputType(SystemDataResponseOutput{})
	pulumi.RegisterOutputType(TlsCertMethodOutput{})
	pulumi.RegisterOutputType(TlsCertMethodPtrOutput{})
	pulumi.RegisterOutputType(TlsCertMethodResponseOutput{})
	pulumi.RegisterOutputType(TlsCertMethodResponsePtrOutput{})
	pulumi.RegisterOutputType(TlsPropertiesOutput{})
	pulumi.RegisterOutputType(TlsPropertiesPtrOutput{})
	pulumi.RegisterOutputType(TlsPropertiesResponseOutput{})
	pulumi.RegisterOutputType(TlsPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(TracesOutput{})
	pulumi.RegisterOutputType(TracesPtrOutput{})
	pulumi.RegisterOutputType(TracesResponseOutput{})
	pulumi.RegisterOutputType(TracesResponsePtrOutput{})
	pulumi.RegisterOutputType(UserAssignedIdentityResponseOutput{})
	pulumi.RegisterOutputType(UserAssignedIdentityResponseMapOutput{})
	pulumi.RegisterOutputType(VolumeClaimResourceRequirementsOutput{})
	pulumi.RegisterOutputType(VolumeClaimResourceRequirementsPtrOutput{})
	pulumi.RegisterOutputType(VolumeClaimResourceRequirementsResponseOutput{})
	pulumi.RegisterOutputType(VolumeClaimResourceRequirementsResponsePtrOutput{})
	pulumi.RegisterOutputType(VolumeClaimSpecOutput{})
	pulumi.RegisterOutputType(VolumeClaimSpecPtrOutput{})
	pulumi.RegisterOutputType(VolumeClaimSpecResponseOutput{})
	pulumi.RegisterOutputType(VolumeClaimSpecResponsePtrOutput{})
	pulumi.RegisterOutputType(VolumeClaimSpecSelectorOutput{})
	pulumi.RegisterOutputType(VolumeClaimSpecSelectorPtrOutput{})
	pulumi.RegisterOutputType(VolumeClaimSpecSelectorMatchExpressionsOutput{})
	pulumi.RegisterOutputType(VolumeClaimSpecSelectorMatchExpressionsArrayOutput{})
	pulumi.RegisterOutputType(VolumeClaimSpecSelectorMatchExpressionsResponseOutput{})
	pulumi.RegisterOutputType(VolumeClaimSpecSelectorMatchExpressionsResponseArrayOutput{})
	pulumi.RegisterOutputType(VolumeClaimSpecSelectorResponseOutput{})
	pulumi.RegisterOutputType(VolumeClaimSpecSelectorResponsePtrOutput{})
	pulumi.RegisterOutputType(X509ManualCertificateOutput{})
	pulumi.RegisterOutputType(X509ManualCertificatePtrOutput{})
	pulumi.RegisterOutputType(X509ManualCertificateResponseOutput{})
	pulumi.RegisterOutputType(X509ManualCertificateResponsePtrOutput{})
}
