// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package iotoperations

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure-native-sdk/v3/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// AkriConnector resource.
//
// Uses Azure REST API version 2025-07-01-preview.
type AkriConnector struct {
	pulumi.CustomResourceState

	// The Azure API version of the resource.
	AzureApiVersion pulumi.StringOutput `pulumi:"azureApiVersion"`
	// Edge location of the resource.
	ExtendedLocation ExtendedLocationResponsePtrOutput `pulumi:"extendedLocation"`
	// The name of the resource
	Name pulumi.StringOutput `pulumi:"name"`
	// The resource-specific properties for this resource.
	Properties AkriConnectorPropertiesResponseOutput `pulumi:"properties"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponseOutput `pulumi:"systemData"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewAkriConnector registers a new resource with the given unique name, arguments, and options.
func NewAkriConnector(ctx *pulumi.Context,
	name string, args *AkriConnectorArgs, opts ...pulumi.ResourceOption) (*AkriConnector, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AkriConnectorTemplateName == nil {
		return nil, errors.New("invalid value for required argument 'AkriConnectorTemplateName'")
	}
	if args.InstanceName == nil {
		return nil, errors.New("invalid value for required argument 'InstanceName'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:iotoperations/v20250701preview:AkriConnector"),
		},
	})
	opts = append(opts, aliases)
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource AkriConnector
	err := ctx.RegisterResource("azure-native:iotoperations:AkriConnector", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAkriConnector gets an existing AkriConnector resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAkriConnector(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AkriConnectorState, opts ...pulumi.ResourceOption) (*AkriConnector, error) {
	var resource AkriConnector
	err := ctx.ReadResource("azure-native:iotoperations:AkriConnector", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AkriConnector resources.
type akriConnectorState struct {
}

type AkriConnectorState struct {
}

func (AkriConnectorState) ElementType() reflect.Type {
	return reflect.TypeOf((*akriConnectorState)(nil)).Elem()
}

type akriConnectorArgs struct {
	// Name of AkriConnectorTemplate resource.
	AkriConnectorTemplateName string `pulumi:"akriConnectorTemplateName"`
	// Name of AkriConnector resource.
	ConnectorName *string `pulumi:"connectorName"`
	// Edge location of the resource.
	ExtendedLocation *ExtendedLocation `pulumi:"extendedLocation"`
	// Name of instance.
	InstanceName string `pulumi:"instanceName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// The set of arguments for constructing a AkriConnector resource.
type AkriConnectorArgs struct {
	// Name of AkriConnectorTemplate resource.
	AkriConnectorTemplateName pulumi.StringInput
	// Name of AkriConnector resource.
	ConnectorName pulumi.StringPtrInput
	// Edge location of the resource.
	ExtendedLocation ExtendedLocationPtrInput
	// Name of instance.
	InstanceName pulumi.StringInput
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput
}

func (AkriConnectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*akriConnectorArgs)(nil)).Elem()
}

type AkriConnectorInput interface {
	pulumi.Input

	ToAkriConnectorOutput() AkriConnectorOutput
	ToAkriConnectorOutputWithContext(ctx context.Context) AkriConnectorOutput
}

func (*AkriConnector) ElementType() reflect.Type {
	return reflect.TypeOf((**AkriConnector)(nil)).Elem()
}

func (i *AkriConnector) ToAkriConnectorOutput() AkriConnectorOutput {
	return i.ToAkriConnectorOutputWithContext(context.Background())
}

func (i *AkriConnector) ToAkriConnectorOutputWithContext(ctx context.Context) AkriConnectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AkriConnectorOutput)
}

type AkriConnectorOutput struct{ *pulumi.OutputState }

func (AkriConnectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AkriConnector)(nil)).Elem()
}

func (o AkriConnectorOutput) ToAkriConnectorOutput() AkriConnectorOutput {
	return o
}

func (o AkriConnectorOutput) ToAkriConnectorOutputWithContext(ctx context.Context) AkriConnectorOutput {
	return o
}

// The Azure API version of the resource.
func (o AkriConnectorOutput) AzureApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *AkriConnector) pulumi.StringOutput { return v.AzureApiVersion }).(pulumi.StringOutput)
}

// Edge location of the resource.
func (o AkriConnectorOutput) ExtendedLocation() ExtendedLocationResponsePtrOutput {
	return o.ApplyT(func(v *AkriConnector) ExtendedLocationResponsePtrOutput { return v.ExtendedLocation }).(ExtendedLocationResponsePtrOutput)
}

// The name of the resource
func (o AkriConnectorOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *AkriConnector) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The resource-specific properties for this resource.
func (o AkriConnectorOutput) Properties() AkriConnectorPropertiesResponseOutput {
	return o.ApplyT(func(v *AkriConnector) AkriConnectorPropertiesResponseOutput { return v.Properties }).(AkriConnectorPropertiesResponseOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o AkriConnectorOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v *AkriConnector) SystemDataResponseOutput { return v.SystemData }).(SystemDataResponseOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o AkriConnectorOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *AkriConnector) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(AkriConnectorOutput{})
}
