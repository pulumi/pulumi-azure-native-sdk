// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package iotoperations

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure-native-sdk/v3/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Instance broker authentication resource
//
// Uses Azure REST API version 2024-11-01. In version 2.x of the Azure Native provider, it used API version 2024-07-01-preview.
//
// Other available API versions: 2024-07-01-preview, 2024-08-15-preview, 2024-09-15-preview, 2025-04-01, 2025-07-01-preview. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native iotoperations [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
type BrokerAuthentication struct {
	pulumi.CustomResourceState

	// The Azure API version of the resource.
	AzureApiVersion pulumi.StringOutput `pulumi:"azureApiVersion"`
	// Edge location of the resource.
	ExtendedLocation ExtendedLocationResponseOutput `pulumi:"extendedLocation"`
	// The name of the resource
	Name pulumi.StringOutput `pulumi:"name"`
	// The resource-specific properties for this resource.
	Properties BrokerAuthenticationPropertiesResponseOutput `pulumi:"properties"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponseOutput `pulumi:"systemData"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewBrokerAuthentication registers a new resource with the given unique name, arguments, and options.
func NewBrokerAuthentication(ctx *pulumi.Context,
	name string, args *BrokerAuthenticationArgs, opts ...pulumi.ResourceOption) (*BrokerAuthentication, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.BrokerName == nil {
		return nil, errors.New("invalid value for required argument 'BrokerName'")
	}
	if args.ExtendedLocation == nil {
		return nil, errors.New("invalid value for required argument 'ExtendedLocation'")
	}
	if args.InstanceName == nil {
		return nil, errors.New("invalid value for required argument 'InstanceName'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:iotoperations/v20240701preview:BrokerAuthentication"),
		},
		{
			Type: pulumi.String("azure-native:iotoperations/v20240815preview:BrokerAuthentication"),
		},
		{
			Type: pulumi.String("azure-native:iotoperations/v20240915preview:BrokerAuthentication"),
		},
		{
			Type: pulumi.String("azure-native:iotoperations/v20241101:BrokerAuthentication"),
		},
		{
			Type: pulumi.String("azure-native:iotoperations/v20250401:BrokerAuthentication"),
		},
		{
			Type: pulumi.String("azure-native:iotoperations/v20250701preview:BrokerAuthentication"),
		},
	})
	opts = append(opts, aliases)
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource BrokerAuthentication
	err := ctx.RegisterResource("azure-native:iotoperations:BrokerAuthentication", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetBrokerAuthentication gets an existing BrokerAuthentication resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetBrokerAuthentication(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *BrokerAuthenticationState, opts ...pulumi.ResourceOption) (*BrokerAuthentication, error) {
	var resource BrokerAuthentication
	err := ctx.ReadResource("azure-native:iotoperations:BrokerAuthentication", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering BrokerAuthentication resources.
type brokerAuthenticationState struct {
}

type BrokerAuthenticationState struct {
}

func (BrokerAuthenticationState) ElementType() reflect.Type {
	return reflect.TypeOf((*brokerAuthenticationState)(nil)).Elem()
}

type brokerAuthenticationArgs struct {
	// Name of Instance broker authentication resource
	AuthenticationName *string `pulumi:"authenticationName"`
	// Name of broker.
	BrokerName string `pulumi:"brokerName"`
	// Edge location of the resource.
	ExtendedLocation ExtendedLocation `pulumi:"extendedLocation"`
	// Name of instance.
	InstanceName string `pulumi:"instanceName"`
	// The resource-specific properties for this resource.
	Properties *BrokerAuthenticationProperties `pulumi:"properties"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// The set of arguments for constructing a BrokerAuthentication resource.
type BrokerAuthenticationArgs struct {
	// Name of Instance broker authentication resource
	AuthenticationName pulumi.StringPtrInput
	// Name of broker.
	BrokerName pulumi.StringInput
	// Edge location of the resource.
	ExtendedLocation ExtendedLocationInput
	// Name of instance.
	InstanceName pulumi.StringInput
	// The resource-specific properties for this resource.
	Properties BrokerAuthenticationPropertiesPtrInput
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput
}

func (BrokerAuthenticationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*brokerAuthenticationArgs)(nil)).Elem()
}

type BrokerAuthenticationInput interface {
	pulumi.Input

	ToBrokerAuthenticationOutput() BrokerAuthenticationOutput
	ToBrokerAuthenticationOutputWithContext(ctx context.Context) BrokerAuthenticationOutput
}

func (*BrokerAuthentication) ElementType() reflect.Type {
	return reflect.TypeOf((**BrokerAuthentication)(nil)).Elem()
}

func (i *BrokerAuthentication) ToBrokerAuthenticationOutput() BrokerAuthenticationOutput {
	return i.ToBrokerAuthenticationOutputWithContext(context.Background())
}

func (i *BrokerAuthentication) ToBrokerAuthenticationOutputWithContext(ctx context.Context) BrokerAuthenticationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BrokerAuthenticationOutput)
}

type BrokerAuthenticationOutput struct{ *pulumi.OutputState }

func (BrokerAuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BrokerAuthentication)(nil)).Elem()
}

func (o BrokerAuthenticationOutput) ToBrokerAuthenticationOutput() BrokerAuthenticationOutput {
	return o
}

func (o BrokerAuthenticationOutput) ToBrokerAuthenticationOutputWithContext(ctx context.Context) BrokerAuthenticationOutput {
	return o
}

// The Azure API version of the resource.
func (o BrokerAuthenticationOutput) AzureApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *BrokerAuthentication) pulumi.StringOutput { return v.AzureApiVersion }).(pulumi.StringOutput)
}

// Edge location of the resource.
func (o BrokerAuthenticationOutput) ExtendedLocation() ExtendedLocationResponseOutput {
	return o.ApplyT(func(v *BrokerAuthentication) ExtendedLocationResponseOutput { return v.ExtendedLocation }).(ExtendedLocationResponseOutput)
}

// The name of the resource
func (o BrokerAuthenticationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *BrokerAuthentication) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The resource-specific properties for this resource.
func (o BrokerAuthenticationOutput) Properties() BrokerAuthenticationPropertiesResponseOutput {
	return o.ApplyT(func(v *BrokerAuthentication) BrokerAuthenticationPropertiesResponseOutput { return v.Properties }).(BrokerAuthenticationPropertiesResponseOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o BrokerAuthenticationOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v *BrokerAuthentication) SystemDataResponseOutput { return v.SystemData }).(SystemDataResponseOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o BrokerAuthenticationOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *BrokerAuthentication) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(BrokerAuthenticationOutput{})
}
