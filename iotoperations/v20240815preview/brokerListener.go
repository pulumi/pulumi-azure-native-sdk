// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20240815preview

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Instance broker resource
type BrokerListener struct {
	pulumi.CustomResourceState

	// Edge location of the resource.
	ExtendedLocation ExtendedLocationResponseOutput `pulumi:"extendedLocation"`
	// The name of the resource
	Name pulumi.StringOutput `pulumi:"name"`
	// The resource-specific properties for this resource.
	Properties BrokerListenerPropertiesResponseOutput `pulumi:"properties"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponseOutput `pulumi:"systemData"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewBrokerListener registers a new resource with the given unique name, arguments, and options.
func NewBrokerListener(ctx *pulumi.Context,
	name string, args *BrokerListenerArgs, opts ...pulumi.ResourceOption) (*BrokerListener, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.BrokerName == nil {
		return nil, errors.New("invalid value for required argument 'BrokerName'")
	}
	if args.ExtendedLocation == nil {
		return nil, errors.New("invalid value for required argument 'ExtendedLocation'")
	}
	if args.InstanceName == nil {
		return nil, errors.New("invalid value for required argument 'InstanceName'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	if args.Properties != nil {
		args.Properties = args.Properties.ToBrokerListenerPropertiesPtrOutput().ApplyT(func(v *BrokerListenerProperties) *BrokerListenerProperties { return v.Defaults() }).(BrokerListenerPropertiesPtrOutput)
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:iotoperations/v20240701preview:BrokerListener"),
		},
		{
			Type: pulumi.String("azure-native:iotoperations/v20240915preview:BrokerListener"),
		},
		{
			Type: pulumi.String("azure-native:iotoperations/v20241101:BrokerListener"),
		},
		{
			Type: pulumi.String("azure-native:iotoperations/v20250401:BrokerListener"),
		},
		{
			Type: pulumi.String("azure-native:iotoperations:BrokerListener"),
		},
	})
	opts = append(opts, aliases)
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource BrokerListener
	err := ctx.RegisterResource("azure-native:iotoperations/v20240815preview:BrokerListener", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetBrokerListener gets an existing BrokerListener resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetBrokerListener(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *BrokerListenerState, opts ...pulumi.ResourceOption) (*BrokerListener, error) {
	var resource BrokerListener
	err := ctx.ReadResource("azure-native:iotoperations/v20240815preview:BrokerListener", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering BrokerListener resources.
type brokerListenerState struct {
}

type BrokerListenerState struct {
}

func (BrokerListenerState) ElementType() reflect.Type {
	return reflect.TypeOf((*brokerListenerState)(nil)).Elem()
}

type brokerListenerArgs struct {
	// Name of broker.
	BrokerName string `pulumi:"brokerName"`
	// Edge location of the resource.
	ExtendedLocation ExtendedLocation `pulumi:"extendedLocation"`
	// Name of instance.
	InstanceName string `pulumi:"instanceName"`
	// Name of Instance broker listener resource
	ListenerName *string `pulumi:"listenerName"`
	// The resource-specific properties for this resource.
	Properties *BrokerListenerProperties `pulumi:"properties"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// The set of arguments for constructing a BrokerListener resource.
type BrokerListenerArgs struct {
	// Name of broker.
	BrokerName pulumi.StringInput
	// Edge location of the resource.
	ExtendedLocation ExtendedLocationInput
	// Name of instance.
	InstanceName pulumi.StringInput
	// Name of Instance broker listener resource
	ListenerName pulumi.StringPtrInput
	// The resource-specific properties for this resource.
	Properties BrokerListenerPropertiesPtrInput
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput
}

func (BrokerListenerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*brokerListenerArgs)(nil)).Elem()
}

type BrokerListenerInput interface {
	pulumi.Input

	ToBrokerListenerOutput() BrokerListenerOutput
	ToBrokerListenerOutputWithContext(ctx context.Context) BrokerListenerOutput
}

func (*BrokerListener) ElementType() reflect.Type {
	return reflect.TypeOf((**BrokerListener)(nil)).Elem()
}

func (i *BrokerListener) ToBrokerListenerOutput() BrokerListenerOutput {
	return i.ToBrokerListenerOutputWithContext(context.Background())
}

func (i *BrokerListener) ToBrokerListenerOutputWithContext(ctx context.Context) BrokerListenerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BrokerListenerOutput)
}

type BrokerListenerOutput struct{ *pulumi.OutputState }

func (BrokerListenerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BrokerListener)(nil)).Elem()
}

func (o BrokerListenerOutput) ToBrokerListenerOutput() BrokerListenerOutput {
	return o
}

func (o BrokerListenerOutput) ToBrokerListenerOutputWithContext(ctx context.Context) BrokerListenerOutput {
	return o
}

// Edge location of the resource.
func (o BrokerListenerOutput) ExtendedLocation() ExtendedLocationResponseOutput {
	return o.ApplyT(func(v *BrokerListener) ExtendedLocationResponseOutput { return v.ExtendedLocation }).(ExtendedLocationResponseOutput)
}

// The name of the resource
func (o BrokerListenerOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *BrokerListener) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The resource-specific properties for this resource.
func (o BrokerListenerOutput) Properties() BrokerListenerPropertiesResponseOutput {
	return o.ApplyT(func(v *BrokerListener) BrokerListenerPropertiesResponseOutput { return v.Properties }).(BrokerListenerPropertiesResponseOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o BrokerListenerOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v *BrokerListener) SystemDataResponseOutput { return v.SystemData }).(SystemDataResponseOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o BrokerListenerOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *BrokerListener) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(BrokerListenerOutput{})
}
