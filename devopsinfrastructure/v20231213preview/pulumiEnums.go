// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20231213preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Determines who has admin permissions to the Azure DevOps pool.
type AzureDevOpsPermissionType string

const (
	// Pool will inherit permissions from the project or organization.
	AzureDevOpsPermissionTypeInherit = AzureDevOpsPermissionType("Inherit")
	// Only the pool creator will be an admin of the pool.
	AzureDevOpsPermissionTypeCreatorOnly = AzureDevOpsPermissionType("CreatorOnly")
	// Only the specified accounts will be admins of the pool.
	AzureDevOpsPermissionTypeSpecificAccounts = AzureDevOpsPermissionType("SpecificAccounts")
)

func (AzureDevOpsPermissionType) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureDevOpsPermissionType)(nil)).Elem()
}

func (e AzureDevOpsPermissionType) ToAzureDevOpsPermissionTypeOutput() AzureDevOpsPermissionTypeOutput {
	return pulumi.ToOutput(e).(AzureDevOpsPermissionTypeOutput)
}

func (e AzureDevOpsPermissionType) ToAzureDevOpsPermissionTypeOutputWithContext(ctx context.Context) AzureDevOpsPermissionTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AzureDevOpsPermissionTypeOutput)
}

func (e AzureDevOpsPermissionType) ToAzureDevOpsPermissionTypePtrOutput() AzureDevOpsPermissionTypePtrOutput {
	return e.ToAzureDevOpsPermissionTypePtrOutputWithContext(context.Background())
}

func (e AzureDevOpsPermissionType) ToAzureDevOpsPermissionTypePtrOutputWithContext(ctx context.Context) AzureDevOpsPermissionTypePtrOutput {
	return AzureDevOpsPermissionType(e).ToAzureDevOpsPermissionTypeOutputWithContext(ctx).ToAzureDevOpsPermissionTypePtrOutputWithContext(ctx)
}

func (e AzureDevOpsPermissionType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AzureDevOpsPermissionType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AzureDevOpsPermissionType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AzureDevOpsPermissionType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AzureDevOpsPermissionTypeOutput struct{ *pulumi.OutputState }

func (AzureDevOpsPermissionTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureDevOpsPermissionType)(nil)).Elem()
}

func (o AzureDevOpsPermissionTypeOutput) ToAzureDevOpsPermissionTypeOutput() AzureDevOpsPermissionTypeOutput {
	return o
}

func (o AzureDevOpsPermissionTypeOutput) ToAzureDevOpsPermissionTypeOutputWithContext(ctx context.Context) AzureDevOpsPermissionTypeOutput {
	return o
}

func (o AzureDevOpsPermissionTypeOutput) ToAzureDevOpsPermissionTypePtrOutput() AzureDevOpsPermissionTypePtrOutput {
	return o.ToAzureDevOpsPermissionTypePtrOutputWithContext(context.Background())
}

func (o AzureDevOpsPermissionTypeOutput) ToAzureDevOpsPermissionTypePtrOutputWithContext(ctx context.Context) AzureDevOpsPermissionTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AzureDevOpsPermissionType) *AzureDevOpsPermissionType {
		return &v
	}).(AzureDevOpsPermissionTypePtrOutput)
}

func (o AzureDevOpsPermissionTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AzureDevOpsPermissionTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AzureDevOpsPermissionType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AzureDevOpsPermissionTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AzureDevOpsPermissionTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AzureDevOpsPermissionType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AzureDevOpsPermissionTypePtrOutput struct{ *pulumi.OutputState }

func (AzureDevOpsPermissionTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureDevOpsPermissionType)(nil)).Elem()
}

func (o AzureDevOpsPermissionTypePtrOutput) ToAzureDevOpsPermissionTypePtrOutput() AzureDevOpsPermissionTypePtrOutput {
	return o
}

func (o AzureDevOpsPermissionTypePtrOutput) ToAzureDevOpsPermissionTypePtrOutputWithContext(ctx context.Context) AzureDevOpsPermissionTypePtrOutput {
	return o
}

func (o AzureDevOpsPermissionTypePtrOutput) Elem() AzureDevOpsPermissionTypeOutput {
	return o.ApplyT(func(v *AzureDevOpsPermissionType) AzureDevOpsPermissionType {
		if v != nil {
			return *v
		}
		var ret AzureDevOpsPermissionType
		return ret
	}).(AzureDevOpsPermissionTypeOutput)
}

func (o AzureDevOpsPermissionTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AzureDevOpsPermissionTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AzureDevOpsPermissionType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AzureDevOpsPermissionTypeInput is an input type that accepts values of the AzureDevOpsPermissionType enum
// A concrete instance of `AzureDevOpsPermissionTypeInput` can be one of the following:
//
//	AzureDevOpsPermissionTypeInherit
//	AzureDevOpsPermissionTypeCreatorOnly
//	AzureDevOpsPermissionTypeSpecificAccounts
type AzureDevOpsPermissionTypeInput interface {
	pulumi.Input

	ToAzureDevOpsPermissionTypeOutput() AzureDevOpsPermissionTypeOutput
	ToAzureDevOpsPermissionTypeOutputWithContext(context.Context) AzureDevOpsPermissionTypeOutput
}

var azureDevOpsPermissionTypePtrType = reflect.TypeOf((**AzureDevOpsPermissionType)(nil)).Elem()

type AzureDevOpsPermissionTypePtrInput interface {
	pulumi.Input

	ToAzureDevOpsPermissionTypePtrOutput() AzureDevOpsPermissionTypePtrOutput
	ToAzureDevOpsPermissionTypePtrOutputWithContext(context.Context) AzureDevOpsPermissionTypePtrOutput
}

type azureDevOpsPermissionTypePtr string

func AzureDevOpsPermissionTypePtr(v string) AzureDevOpsPermissionTypePtrInput {
	return (*azureDevOpsPermissionTypePtr)(&v)
}

func (*azureDevOpsPermissionTypePtr) ElementType() reflect.Type {
	return azureDevOpsPermissionTypePtrType
}

func (in *azureDevOpsPermissionTypePtr) ToAzureDevOpsPermissionTypePtrOutput() AzureDevOpsPermissionTypePtrOutput {
	return pulumi.ToOutput(in).(AzureDevOpsPermissionTypePtrOutput)
}

func (in *azureDevOpsPermissionTypePtr) ToAzureDevOpsPermissionTypePtrOutputWithContext(ctx context.Context) AzureDevOpsPermissionTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AzureDevOpsPermissionTypePtrOutput)
}

func (in *azureDevOpsPermissionTypePtr) ToOutput(ctx context.Context) pulumix.Output[*AzureDevOpsPermissionType] {
	return pulumix.Output[*AzureDevOpsPermissionType]{
		OutputState: in.ToAzureDevOpsPermissionTypePtrOutputWithContext(ctx).OutputState,
	}
}

// Determines how the service should be run. By default, this will be set to Service.
type LogonType string

const (
	// Run as a service.
	LogonTypeService = LogonType("Service")
	// Run in interactive mode.
	LogonTypeInteractive = LogonType("Interactive")
)

func (LogonType) ElementType() reflect.Type {
	return reflect.TypeOf((*LogonType)(nil)).Elem()
}

func (e LogonType) ToLogonTypeOutput() LogonTypeOutput {
	return pulumi.ToOutput(e).(LogonTypeOutput)
}

func (e LogonType) ToLogonTypeOutputWithContext(ctx context.Context) LogonTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(LogonTypeOutput)
}

func (e LogonType) ToLogonTypePtrOutput() LogonTypePtrOutput {
	return e.ToLogonTypePtrOutputWithContext(context.Background())
}

func (e LogonType) ToLogonTypePtrOutputWithContext(ctx context.Context) LogonTypePtrOutput {
	return LogonType(e).ToLogonTypeOutputWithContext(ctx).ToLogonTypePtrOutputWithContext(ctx)
}

func (e LogonType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e LogonType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e LogonType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e LogonType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type LogonTypeOutput struct{ *pulumi.OutputState }

func (LogonTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LogonType)(nil)).Elem()
}

func (o LogonTypeOutput) ToLogonTypeOutput() LogonTypeOutput {
	return o
}

func (o LogonTypeOutput) ToLogonTypeOutputWithContext(ctx context.Context) LogonTypeOutput {
	return o
}

func (o LogonTypeOutput) ToLogonTypePtrOutput() LogonTypePtrOutput {
	return o.ToLogonTypePtrOutputWithContext(context.Background())
}

func (o LogonTypeOutput) ToLogonTypePtrOutputWithContext(ctx context.Context) LogonTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LogonType) *LogonType {
		return &v
	}).(LogonTypePtrOutput)
}

func (o LogonTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o LogonTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e LogonType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o LogonTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o LogonTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e LogonType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type LogonTypePtrOutput struct{ *pulumi.OutputState }

func (LogonTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LogonType)(nil)).Elem()
}

func (o LogonTypePtrOutput) ToLogonTypePtrOutput() LogonTypePtrOutput {
	return o
}

func (o LogonTypePtrOutput) ToLogonTypePtrOutputWithContext(ctx context.Context) LogonTypePtrOutput {
	return o
}

func (o LogonTypePtrOutput) Elem() LogonTypeOutput {
	return o.ApplyT(func(v *LogonType) LogonType {
		if v != nil {
			return *v
		}
		var ret LogonType
		return ret
	}).(LogonTypeOutput)
}

func (o LogonTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o LogonTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *LogonType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// LogonTypeInput is an input type that accepts values of the LogonType enum
// A concrete instance of `LogonTypeInput` can be one of the following:
//
//	LogonTypeService
//	LogonTypeInteractive
type LogonTypeInput interface {
	pulumi.Input

	ToLogonTypeOutput() LogonTypeOutput
	ToLogonTypeOutputWithContext(context.Context) LogonTypeOutput
}

var logonTypePtrType = reflect.TypeOf((**LogonType)(nil)).Elem()

type LogonTypePtrInput interface {
	pulumi.Input

	ToLogonTypePtrOutput() LogonTypePtrOutput
	ToLogonTypePtrOutputWithContext(context.Context) LogonTypePtrOutput
}

type logonTypePtr string

func LogonTypePtr(v string) LogonTypePtrInput {
	return (*logonTypePtr)(&v)
}

func (*logonTypePtr) ElementType() reflect.Type {
	return logonTypePtrType
}

func (in *logonTypePtr) ToLogonTypePtrOutput() LogonTypePtrOutput {
	return pulumi.ToOutput(in).(LogonTypePtrOutput)
}

func (in *logonTypePtr) ToLogonTypePtrOutputWithContext(ctx context.Context) LogonTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(LogonTypePtrOutput)
}

func (in *logonTypePtr) ToOutput(ctx context.Context) pulumix.Output[*LogonType] {
	return pulumix.Output[*LogonType]{
		OutputState: in.ToLogonTypePtrOutputWithContext(ctx).OutputState,
	}
}

// Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
type ManagedServiceIdentityType string

const (
	ManagedServiceIdentityTypeNone                         = ManagedServiceIdentityType("None")
	ManagedServiceIdentityTypeSystemAssigned               = ManagedServiceIdentityType("SystemAssigned")
	ManagedServiceIdentityTypeUserAssigned                 = ManagedServiceIdentityType("UserAssigned")
	ManagedServiceIdentityType_SystemAssigned_UserAssigned = ManagedServiceIdentityType("SystemAssigned, UserAssigned")
)

func (ManagedServiceIdentityType) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedServiceIdentityType)(nil)).Elem()
}

func (e ManagedServiceIdentityType) ToManagedServiceIdentityTypeOutput() ManagedServiceIdentityTypeOutput {
	return pulumi.ToOutput(e).(ManagedServiceIdentityTypeOutput)
}

func (e ManagedServiceIdentityType) ToManagedServiceIdentityTypeOutputWithContext(ctx context.Context) ManagedServiceIdentityTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ManagedServiceIdentityTypeOutput)
}

func (e ManagedServiceIdentityType) ToManagedServiceIdentityTypePtrOutput() ManagedServiceIdentityTypePtrOutput {
	return e.ToManagedServiceIdentityTypePtrOutputWithContext(context.Background())
}

func (e ManagedServiceIdentityType) ToManagedServiceIdentityTypePtrOutputWithContext(ctx context.Context) ManagedServiceIdentityTypePtrOutput {
	return ManagedServiceIdentityType(e).ToManagedServiceIdentityTypeOutputWithContext(ctx).ToManagedServiceIdentityTypePtrOutputWithContext(ctx)
}

func (e ManagedServiceIdentityType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ManagedServiceIdentityType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ManagedServiceIdentityType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ManagedServiceIdentityType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ManagedServiceIdentityTypeOutput struct{ *pulumi.OutputState }

func (ManagedServiceIdentityTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedServiceIdentityType)(nil)).Elem()
}

func (o ManagedServiceIdentityTypeOutput) ToManagedServiceIdentityTypeOutput() ManagedServiceIdentityTypeOutput {
	return o
}

func (o ManagedServiceIdentityTypeOutput) ToManagedServiceIdentityTypeOutputWithContext(ctx context.Context) ManagedServiceIdentityTypeOutput {
	return o
}

func (o ManagedServiceIdentityTypeOutput) ToManagedServiceIdentityTypePtrOutput() ManagedServiceIdentityTypePtrOutput {
	return o.ToManagedServiceIdentityTypePtrOutputWithContext(context.Background())
}

func (o ManagedServiceIdentityTypeOutput) ToManagedServiceIdentityTypePtrOutputWithContext(ctx context.Context) ManagedServiceIdentityTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ManagedServiceIdentityType) *ManagedServiceIdentityType {
		return &v
	}).(ManagedServiceIdentityTypePtrOutput)
}

func (o ManagedServiceIdentityTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ManagedServiceIdentityTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ManagedServiceIdentityType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ManagedServiceIdentityTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ManagedServiceIdentityTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ManagedServiceIdentityType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ManagedServiceIdentityTypePtrOutput struct{ *pulumi.OutputState }

func (ManagedServiceIdentityTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedServiceIdentityType)(nil)).Elem()
}

func (o ManagedServiceIdentityTypePtrOutput) ToManagedServiceIdentityTypePtrOutput() ManagedServiceIdentityTypePtrOutput {
	return o
}

func (o ManagedServiceIdentityTypePtrOutput) ToManagedServiceIdentityTypePtrOutputWithContext(ctx context.Context) ManagedServiceIdentityTypePtrOutput {
	return o
}

func (o ManagedServiceIdentityTypePtrOutput) Elem() ManagedServiceIdentityTypeOutput {
	return o.ApplyT(func(v *ManagedServiceIdentityType) ManagedServiceIdentityType {
		if v != nil {
			return *v
		}
		var ret ManagedServiceIdentityType
		return ret
	}).(ManagedServiceIdentityTypeOutput)
}

func (o ManagedServiceIdentityTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ManagedServiceIdentityTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ManagedServiceIdentityType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ManagedServiceIdentityTypeInput is an input type that accepts values of the ManagedServiceIdentityType enum
// A concrete instance of `ManagedServiceIdentityTypeInput` can be one of the following:
//
//	ManagedServiceIdentityTypeNone
//	ManagedServiceIdentityTypeSystemAssigned
//	ManagedServiceIdentityTypeUserAssigned
//	ManagedServiceIdentityType_SystemAssigned_UserAssigned
type ManagedServiceIdentityTypeInput interface {
	pulumi.Input

	ToManagedServiceIdentityTypeOutput() ManagedServiceIdentityTypeOutput
	ToManagedServiceIdentityTypeOutputWithContext(context.Context) ManagedServiceIdentityTypeOutput
}

var managedServiceIdentityTypePtrType = reflect.TypeOf((**ManagedServiceIdentityType)(nil)).Elem()

type ManagedServiceIdentityTypePtrInput interface {
	pulumi.Input

	ToManagedServiceIdentityTypePtrOutput() ManagedServiceIdentityTypePtrOutput
	ToManagedServiceIdentityTypePtrOutputWithContext(context.Context) ManagedServiceIdentityTypePtrOutput
}

type managedServiceIdentityTypePtr string

func ManagedServiceIdentityTypePtr(v string) ManagedServiceIdentityTypePtrInput {
	return (*managedServiceIdentityTypePtr)(&v)
}

func (*managedServiceIdentityTypePtr) ElementType() reflect.Type {
	return managedServiceIdentityTypePtrType
}

func (in *managedServiceIdentityTypePtr) ToManagedServiceIdentityTypePtrOutput() ManagedServiceIdentityTypePtrOutput {
	return pulumi.ToOutput(in).(ManagedServiceIdentityTypePtrOutput)
}

func (in *managedServiceIdentityTypePtr) ToManagedServiceIdentityTypePtrOutputWithContext(ctx context.Context) ManagedServiceIdentityTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ManagedServiceIdentityTypePtrOutput)
}

func (in *managedServiceIdentityTypePtr) ToOutput(ctx context.Context) pulumix.Output[*ManagedServiceIdentityType] {
	return pulumix.Output[*ManagedServiceIdentityType]{
		OutputState: in.ToManagedServiceIdentityTypePtrOutputWithContext(ctx).OutputState,
	}
}

// The Azure SKU name of the machines in the pool.
type OsDiskStorageAccountType string

const (
	// Standard OS disk type.
	OsDiskStorageAccountTypeStandard = OsDiskStorageAccountType("Standard")
	// Premium OS disk type.
	OsDiskStorageAccountTypePremium = OsDiskStorageAccountType("Premium")
	// Standard SSD OS disk type.
	OsDiskStorageAccountTypeStandardSSD = OsDiskStorageAccountType("StandardSSD")
)

func (OsDiskStorageAccountType) ElementType() reflect.Type {
	return reflect.TypeOf((*OsDiskStorageAccountType)(nil)).Elem()
}

func (e OsDiskStorageAccountType) ToOsDiskStorageAccountTypeOutput() OsDiskStorageAccountTypeOutput {
	return pulumi.ToOutput(e).(OsDiskStorageAccountTypeOutput)
}

func (e OsDiskStorageAccountType) ToOsDiskStorageAccountTypeOutputWithContext(ctx context.Context) OsDiskStorageAccountTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(OsDiskStorageAccountTypeOutput)
}

func (e OsDiskStorageAccountType) ToOsDiskStorageAccountTypePtrOutput() OsDiskStorageAccountTypePtrOutput {
	return e.ToOsDiskStorageAccountTypePtrOutputWithContext(context.Background())
}

func (e OsDiskStorageAccountType) ToOsDiskStorageAccountTypePtrOutputWithContext(ctx context.Context) OsDiskStorageAccountTypePtrOutput {
	return OsDiskStorageAccountType(e).ToOsDiskStorageAccountTypeOutputWithContext(ctx).ToOsDiskStorageAccountTypePtrOutputWithContext(ctx)
}

func (e OsDiskStorageAccountType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e OsDiskStorageAccountType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e OsDiskStorageAccountType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e OsDiskStorageAccountType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type OsDiskStorageAccountTypeOutput struct{ *pulumi.OutputState }

func (OsDiskStorageAccountTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OsDiskStorageAccountType)(nil)).Elem()
}

func (o OsDiskStorageAccountTypeOutput) ToOsDiskStorageAccountTypeOutput() OsDiskStorageAccountTypeOutput {
	return o
}

func (o OsDiskStorageAccountTypeOutput) ToOsDiskStorageAccountTypeOutputWithContext(ctx context.Context) OsDiskStorageAccountTypeOutput {
	return o
}

func (o OsDiskStorageAccountTypeOutput) ToOsDiskStorageAccountTypePtrOutput() OsDiskStorageAccountTypePtrOutput {
	return o.ToOsDiskStorageAccountTypePtrOutputWithContext(context.Background())
}

func (o OsDiskStorageAccountTypeOutput) ToOsDiskStorageAccountTypePtrOutputWithContext(ctx context.Context) OsDiskStorageAccountTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OsDiskStorageAccountType) *OsDiskStorageAccountType {
		return &v
	}).(OsDiskStorageAccountTypePtrOutput)
}

func (o OsDiskStorageAccountTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o OsDiskStorageAccountTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e OsDiskStorageAccountType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o OsDiskStorageAccountTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o OsDiskStorageAccountTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e OsDiskStorageAccountType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type OsDiskStorageAccountTypePtrOutput struct{ *pulumi.OutputState }

func (OsDiskStorageAccountTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OsDiskStorageAccountType)(nil)).Elem()
}

func (o OsDiskStorageAccountTypePtrOutput) ToOsDiskStorageAccountTypePtrOutput() OsDiskStorageAccountTypePtrOutput {
	return o
}

func (o OsDiskStorageAccountTypePtrOutput) ToOsDiskStorageAccountTypePtrOutputWithContext(ctx context.Context) OsDiskStorageAccountTypePtrOutput {
	return o
}

func (o OsDiskStorageAccountTypePtrOutput) Elem() OsDiskStorageAccountTypeOutput {
	return o.ApplyT(func(v *OsDiskStorageAccountType) OsDiskStorageAccountType {
		if v != nil {
			return *v
		}
		var ret OsDiskStorageAccountType
		return ret
	}).(OsDiskStorageAccountTypeOutput)
}

func (o OsDiskStorageAccountTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o OsDiskStorageAccountTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *OsDiskStorageAccountType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// OsDiskStorageAccountTypeInput is an input type that accepts values of the OsDiskStorageAccountType enum
// A concrete instance of `OsDiskStorageAccountTypeInput` can be one of the following:
//
//	OsDiskStorageAccountTypeStandard
//	OsDiskStorageAccountTypePremium
//	OsDiskStorageAccountTypeStandardSSD
type OsDiskStorageAccountTypeInput interface {
	pulumi.Input

	ToOsDiskStorageAccountTypeOutput() OsDiskStorageAccountTypeOutput
	ToOsDiskStorageAccountTypeOutputWithContext(context.Context) OsDiskStorageAccountTypeOutput
}

var osDiskStorageAccountTypePtrType = reflect.TypeOf((**OsDiskStorageAccountType)(nil)).Elem()

type OsDiskStorageAccountTypePtrInput interface {
	pulumi.Input

	ToOsDiskStorageAccountTypePtrOutput() OsDiskStorageAccountTypePtrOutput
	ToOsDiskStorageAccountTypePtrOutputWithContext(context.Context) OsDiskStorageAccountTypePtrOutput
}

type osDiskStorageAccountTypePtr string

func OsDiskStorageAccountTypePtr(v string) OsDiskStorageAccountTypePtrInput {
	return (*osDiskStorageAccountTypePtr)(&v)
}

func (*osDiskStorageAccountTypePtr) ElementType() reflect.Type {
	return osDiskStorageAccountTypePtrType
}

func (in *osDiskStorageAccountTypePtr) ToOsDiskStorageAccountTypePtrOutput() OsDiskStorageAccountTypePtrOutput {
	return pulumi.ToOutput(in).(OsDiskStorageAccountTypePtrOutput)
}

func (in *osDiskStorageAccountTypePtr) ToOsDiskStorageAccountTypePtrOutputWithContext(ctx context.Context) OsDiskStorageAccountTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(OsDiskStorageAccountTypePtrOutput)
}

func (in *osDiskStorageAccountTypePtr) ToOutput(ctx context.Context) pulumix.Output[*OsDiskStorageAccountType] {
	return pulumix.Output[*OsDiskStorageAccountType]{
		OutputState: in.ToOsDiskStorageAccountTypePtrOutputWithContext(ctx).OutputState,
	}
}

// The status of the current operation.
type ProvisioningState string

const (
	// Represents a succeeded operation.
	ProvisioningStateSucceeded = ProvisioningState("Succeeded")
	// Represents a failed operation.
	ProvisioningStateFailed = ProvisioningState("Failed")
	// Represents a canceled operation.
	ProvisioningStateCanceled = ProvisioningState("Canceled")
	// Represents a pending operation.
	ProvisioningStateProvisioning = ProvisioningState("Provisioning")
	// Represents a pending operation.
	ProvisioningStateUpdating = ProvisioningState("Updating")
	// Represents an operation under deletion.
	ProvisioningStateDeleting = ProvisioningState("Deleting")
	// Represents an accepted operation.
	ProvisioningStateAccepted = ProvisioningState("Accepted")
)

func (ProvisioningState) ElementType() reflect.Type {
	return reflect.TypeOf((*ProvisioningState)(nil)).Elem()
}

func (e ProvisioningState) ToProvisioningStateOutput() ProvisioningStateOutput {
	return pulumi.ToOutput(e).(ProvisioningStateOutput)
}

func (e ProvisioningState) ToProvisioningStateOutputWithContext(ctx context.Context) ProvisioningStateOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ProvisioningStateOutput)
}

func (e ProvisioningState) ToProvisioningStatePtrOutput() ProvisioningStatePtrOutput {
	return e.ToProvisioningStatePtrOutputWithContext(context.Background())
}

func (e ProvisioningState) ToProvisioningStatePtrOutputWithContext(ctx context.Context) ProvisioningStatePtrOutput {
	return ProvisioningState(e).ToProvisioningStateOutputWithContext(ctx).ToProvisioningStatePtrOutputWithContext(ctx)
}

func (e ProvisioningState) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ProvisioningState) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ProvisioningState) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ProvisioningState) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ProvisioningStateOutput struct{ *pulumi.OutputState }

func (ProvisioningStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProvisioningState)(nil)).Elem()
}

func (o ProvisioningStateOutput) ToProvisioningStateOutput() ProvisioningStateOutput {
	return o
}

func (o ProvisioningStateOutput) ToProvisioningStateOutputWithContext(ctx context.Context) ProvisioningStateOutput {
	return o
}

func (o ProvisioningStateOutput) ToProvisioningStatePtrOutput() ProvisioningStatePtrOutput {
	return o.ToProvisioningStatePtrOutputWithContext(context.Background())
}

func (o ProvisioningStateOutput) ToProvisioningStatePtrOutputWithContext(ctx context.Context) ProvisioningStatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProvisioningState) *ProvisioningState {
		return &v
	}).(ProvisioningStatePtrOutput)
}

func (o ProvisioningStateOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ProvisioningStateOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ProvisioningState) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ProvisioningStateOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ProvisioningStateOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ProvisioningState) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ProvisioningStatePtrOutput struct{ *pulumi.OutputState }

func (ProvisioningStatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProvisioningState)(nil)).Elem()
}

func (o ProvisioningStatePtrOutput) ToProvisioningStatePtrOutput() ProvisioningStatePtrOutput {
	return o
}

func (o ProvisioningStatePtrOutput) ToProvisioningStatePtrOutputWithContext(ctx context.Context) ProvisioningStatePtrOutput {
	return o
}

func (o ProvisioningStatePtrOutput) Elem() ProvisioningStateOutput {
	return o.ApplyT(func(v *ProvisioningState) ProvisioningState {
		if v != nil {
			return *v
		}
		var ret ProvisioningState
		return ret
	}).(ProvisioningStateOutput)
}

func (o ProvisioningStatePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ProvisioningStatePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ProvisioningState) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ProvisioningStateInput is an input type that accepts values of the ProvisioningState enum
// A concrete instance of `ProvisioningStateInput` can be one of the following:
//
//	ProvisioningStateSucceeded
//	ProvisioningStateFailed
//	ProvisioningStateCanceled
//	ProvisioningStateProvisioning
//	ProvisioningStateUpdating
//	ProvisioningStateDeleting
//	ProvisioningStateAccepted
type ProvisioningStateInput interface {
	pulumi.Input

	ToProvisioningStateOutput() ProvisioningStateOutput
	ToProvisioningStateOutputWithContext(context.Context) ProvisioningStateOutput
}

var provisioningStatePtrType = reflect.TypeOf((**ProvisioningState)(nil)).Elem()

type ProvisioningStatePtrInput interface {
	pulumi.Input

	ToProvisioningStatePtrOutput() ProvisioningStatePtrOutput
	ToProvisioningStatePtrOutputWithContext(context.Context) ProvisioningStatePtrOutput
}

type provisioningStatePtr string

func ProvisioningStatePtr(v string) ProvisioningStatePtrInput {
	return (*provisioningStatePtr)(&v)
}

func (*provisioningStatePtr) ElementType() reflect.Type {
	return provisioningStatePtrType
}

func (in *provisioningStatePtr) ToProvisioningStatePtrOutput() ProvisioningStatePtrOutput {
	return pulumi.ToOutput(in).(ProvisioningStatePtrOutput)
}

func (in *provisioningStatePtr) ToProvisioningStatePtrOutputWithContext(ctx context.Context) ProvisioningStatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ProvisioningStatePtrOutput)
}

func (in *provisioningStatePtr) ToOutput(ctx context.Context) pulumix.Output[*ProvisioningState] {
	return pulumix.Output[*ProvisioningState]{
		OutputState: in.ToProvisioningStatePtrOutputWithContext(ctx).OutputState,
	}
}

func init() {
	pulumi.RegisterOutputType(AzureDevOpsPermissionTypeOutput{})
	pulumi.RegisterOutputType(AzureDevOpsPermissionTypePtrOutput{})
	pulumi.RegisterOutputType(LogonTypeOutput{})
	pulumi.RegisterOutputType(LogonTypePtrOutput{})
	pulumi.RegisterOutputType(ManagedServiceIdentityTypeOutput{})
	pulumi.RegisterOutputType(ManagedServiceIdentityTypePtrOutput{})
	pulumi.RegisterOutputType(OsDiskStorageAccountTypeOutput{})
	pulumi.RegisterOutputType(OsDiskStorageAccountTypePtrOutput{})
	pulumi.RegisterOutputType(ProvisioningStateOutput{})
	pulumi.RegisterOutputType(ProvisioningStatePtrOutput{})
}
