// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20240404preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = utilities.GetEnvOrDefault

// The stand-by agent scheme is determined based on historical demand.
type AutomaticResourcePredictionsProfile struct {
	// Determines how the stand-by scheme should be provided.
	// Expected value is 'Automatic'.
	Kind string `pulumi:"kind"`
	// Determines the balance between cost and performance.
	PredictionPreference *string `pulumi:"predictionPreference"`
}

// AutomaticResourcePredictionsProfileInput is an input type that accepts AutomaticResourcePredictionsProfileArgs and AutomaticResourcePredictionsProfileOutput values.
// You can construct a concrete instance of `AutomaticResourcePredictionsProfileInput` via:
//
//	AutomaticResourcePredictionsProfileArgs{...}
type AutomaticResourcePredictionsProfileInput interface {
	pulumi.Input

	ToAutomaticResourcePredictionsProfileOutput() AutomaticResourcePredictionsProfileOutput
	ToAutomaticResourcePredictionsProfileOutputWithContext(context.Context) AutomaticResourcePredictionsProfileOutput
}

// The stand-by agent scheme is determined based on historical demand.
type AutomaticResourcePredictionsProfileArgs struct {
	// Determines how the stand-by scheme should be provided.
	// Expected value is 'Automatic'.
	Kind pulumi.StringInput `pulumi:"kind"`
	// Determines the balance between cost and performance.
	PredictionPreference pulumi.StringPtrInput `pulumi:"predictionPreference"`
}

func (AutomaticResourcePredictionsProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AutomaticResourcePredictionsProfile)(nil)).Elem()
}

func (i AutomaticResourcePredictionsProfileArgs) ToAutomaticResourcePredictionsProfileOutput() AutomaticResourcePredictionsProfileOutput {
	return i.ToAutomaticResourcePredictionsProfileOutputWithContext(context.Background())
}

func (i AutomaticResourcePredictionsProfileArgs) ToAutomaticResourcePredictionsProfileOutputWithContext(ctx context.Context) AutomaticResourcePredictionsProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutomaticResourcePredictionsProfileOutput)
}

func (i AutomaticResourcePredictionsProfileArgs) ToAutomaticResourcePredictionsProfilePtrOutput() AutomaticResourcePredictionsProfilePtrOutput {
	return i.ToAutomaticResourcePredictionsProfilePtrOutputWithContext(context.Background())
}

func (i AutomaticResourcePredictionsProfileArgs) ToAutomaticResourcePredictionsProfilePtrOutputWithContext(ctx context.Context) AutomaticResourcePredictionsProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutomaticResourcePredictionsProfileOutput).ToAutomaticResourcePredictionsProfilePtrOutputWithContext(ctx)
}

// AutomaticResourcePredictionsProfilePtrInput is an input type that accepts AutomaticResourcePredictionsProfileArgs, AutomaticResourcePredictionsProfilePtr and AutomaticResourcePredictionsProfilePtrOutput values.
// You can construct a concrete instance of `AutomaticResourcePredictionsProfilePtrInput` via:
//
//	        AutomaticResourcePredictionsProfileArgs{...}
//
//	or:
//
//	        nil
type AutomaticResourcePredictionsProfilePtrInput interface {
	pulumi.Input

	ToAutomaticResourcePredictionsProfilePtrOutput() AutomaticResourcePredictionsProfilePtrOutput
	ToAutomaticResourcePredictionsProfilePtrOutputWithContext(context.Context) AutomaticResourcePredictionsProfilePtrOutput
}

type automaticResourcePredictionsProfilePtrType AutomaticResourcePredictionsProfileArgs

func AutomaticResourcePredictionsProfilePtr(v *AutomaticResourcePredictionsProfileArgs) AutomaticResourcePredictionsProfilePtrInput {
	return (*automaticResourcePredictionsProfilePtrType)(v)
}

func (*automaticResourcePredictionsProfilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AutomaticResourcePredictionsProfile)(nil)).Elem()
}

func (i *automaticResourcePredictionsProfilePtrType) ToAutomaticResourcePredictionsProfilePtrOutput() AutomaticResourcePredictionsProfilePtrOutput {
	return i.ToAutomaticResourcePredictionsProfilePtrOutputWithContext(context.Background())
}

func (i *automaticResourcePredictionsProfilePtrType) ToAutomaticResourcePredictionsProfilePtrOutputWithContext(ctx context.Context) AutomaticResourcePredictionsProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutomaticResourcePredictionsProfilePtrOutput)
}

// The stand-by agent scheme is determined based on historical demand.
type AutomaticResourcePredictionsProfileOutput struct{ *pulumi.OutputState }

func (AutomaticResourcePredictionsProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutomaticResourcePredictionsProfile)(nil)).Elem()
}

func (o AutomaticResourcePredictionsProfileOutput) ToAutomaticResourcePredictionsProfileOutput() AutomaticResourcePredictionsProfileOutput {
	return o
}

func (o AutomaticResourcePredictionsProfileOutput) ToAutomaticResourcePredictionsProfileOutputWithContext(ctx context.Context) AutomaticResourcePredictionsProfileOutput {
	return o
}

func (o AutomaticResourcePredictionsProfileOutput) ToAutomaticResourcePredictionsProfilePtrOutput() AutomaticResourcePredictionsProfilePtrOutput {
	return o.ToAutomaticResourcePredictionsProfilePtrOutputWithContext(context.Background())
}

func (o AutomaticResourcePredictionsProfileOutput) ToAutomaticResourcePredictionsProfilePtrOutputWithContext(ctx context.Context) AutomaticResourcePredictionsProfilePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AutomaticResourcePredictionsProfile) *AutomaticResourcePredictionsProfile {
		return &v
	}).(AutomaticResourcePredictionsProfilePtrOutput)
}

// Determines how the stand-by scheme should be provided.
// Expected value is 'Automatic'.
func (o AutomaticResourcePredictionsProfileOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v AutomaticResourcePredictionsProfile) string { return v.Kind }).(pulumi.StringOutput)
}

// Determines the balance between cost and performance.
func (o AutomaticResourcePredictionsProfileOutput) PredictionPreference() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AutomaticResourcePredictionsProfile) *string { return v.PredictionPreference }).(pulumi.StringPtrOutput)
}

type AutomaticResourcePredictionsProfilePtrOutput struct{ *pulumi.OutputState }

func (AutomaticResourcePredictionsProfilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AutomaticResourcePredictionsProfile)(nil)).Elem()
}

func (o AutomaticResourcePredictionsProfilePtrOutput) ToAutomaticResourcePredictionsProfilePtrOutput() AutomaticResourcePredictionsProfilePtrOutput {
	return o
}

func (o AutomaticResourcePredictionsProfilePtrOutput) ToAutomaticResourcePredictionsProfilePtrOutputWithContext(ctx context.Context) AutomaticResourcePredictionsProfilePtrOutput {
	return o
}

func (o AutomaticResourcePredictionsProfilePtrOutput) Elem() AutomaticResourcePredictionsProfileOutput {
	return o.ApplyT(func(v *AutomaticResourcePredictionsProfile) AutomaticResourcePredictionsProfile {
		if v != nil {
			return *v
		}
		var ret AutomaticResourcePredictionsProfile
		return ret
	}).(AutomaticResourcePredictionsProfileOutput)
}

// Determines how the stand-by scheme should be provided.
// Expected value is 'Automatic'.
func (o AutomaticResourcePredictionsProfilePtrOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AutomaticResourcePredictionsProfile) *string {
		if v == nil {
			return nil
		}
		return &v.Kind
	}).(pulumi.StringPtrOutput)
}

// Determines the balance between cost and performance.
func (o AutomaticResourcePredictionsProfilePtrOutput) PredictionPreference() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AutomaticResourcePredictionsProfile) *string {
		if v == nil {
			return nil
		}
		return v.PredictionPreference
	}).(pulumi.StringPtrOutput)
}

// The stand-by agent scheme is determined based on historical demand.
type AutomaticResourcePredictionsProfileResponse struct {
	// Determines how the stand-by scheme should be provided.
	// Expected value is 'Automatic'.
	Kind string `pulumi:"kind"`
	// Determines the balance between cost and performance.
	PredictionPreference *string `pulumi:"predictionPreference"`
}

// The stand-by agent scheme is determined based on historical demand.
type AutomaticResourcePredictionsProfileResponseOutput struct{ *pulumi.OutputState }

func (AutomaticResourcePredictionsProfileResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutomaticResourcePredictionsProfileResponse)(nil)).Elem()
}

func (o AutomaticResourcePredictionsProfileResponseOutput) ToAutomaticResourcePredictionsProfileResponseOutput() AutomaticResourcePredictionsProfileResponseOutput {
	return o
}

func (o AutomaticResourcePredictionsProfileResponseOutput) ToAutomaticResourcePredictionsProfileResponseOutputWithContext(ctx context.Context) AutomaticResourcePredictionsProfileResponseOutput {
	return o
}

// Determines how the stand-by scheme should be provided.
// Expected value is 'Automatic'.
func (o AutomaticResourcePredictionsProfileResponseOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v AutomaticResourcePredictionsProfileResponse) string { return v.Kind }).(pulumi.StringOutput)
}

// Determines the balance between cost and performance.
func (o AutomaticResourcePredictionsProfileResponseOutput) PredictionPreference() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AutomaticResourcePredictionsProfileResponse) *string { return v.PredictionPreference }).(pulumi.StringPtrOutput)
}

type AutomaticResourcePredictionsProfileResponsePtrOutput struct{ *pulumi.OutputState }

func (AutomaticResourcePredictionsProfileResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AutomaticResourcePredictionsProfileResponse)(nil)).Elem()
}

func (o AutomaticResourcePredictionsProfileResponsePtrOutput) ToAutomaticResourcePredictionsProfileResponsePtrOutput() AutomaticResourcePredictionsProfileResponsePtrOutput {
	return o
}

func (o AutomaticResourcePredictionsProfileResponsePtrOutput) ToAutomaticResourcePredictionsProfileResponsePtrOutputWithContext(ctx context.Context) AutomaticResourcePredictionsProfileResponsePtrOutput {
	return o
}

func (o AutomaticResourcePredictionsProfileResponsePtrOutput) Elem() AutomaticResourcePredictionsProfileResponseOutput {
	return o.ApplyT(func(v *AutomaticResourcePredictionsProfileResponse) AutomaticResourcePredictionsProfileResponse {
		if v != nil {
			return *v
		}
		var ret AutomaticResourcePredictionsProfileResponse
		return ret
	}).(AutomaticResourcePredictionsProfileResponseOutput)
}

// Determines how the stand-by scheme should be provided.
// Expected value is 'Automatic'.
func (o AutomaticResourcePredictionsProfileResponsePtrOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AutomaticResourcePredictionsProfileResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Kind
	}).(pulumi.StringPtrOutput)
}

// Determines the balance between cost and performance.
func (o AutomaticResourcePredictionsProfileResponsePtrOutput) PredictionPreference() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AutomaticResourcePredictionsProfileResponse) *string {
		if v == nil {
			return nil
		}
		return v.PredictionPreference
	}).(pulumi.StringPtrOutput)
}

// Azure DevOps organization profile
type AzureDevOpsOrganizationProfile struct {
	// Discriminator property for OrganizationProfile.
	// Expected value is 'AzureDevOps'.
	Kind string `pulumi:"kind"`
	// The list of Azure DevOps organizations the pool should be present in.
	Organizations []Organization `pulumi:"organizations"`
	// The type of permission which determines which accounts are admins on the Azure DevOps pool.
	PermissionProfile *AzureDevOpsPermissionProfile `pulumi:"permissionProfile"`
}

// AzureDevOpsOrganizationProfileInput is an input type that accepts AzureDevOpsOrganizationProfileArgs and AzureDevOpsOrganizationProfileOutput values.
// You can construct a concrete instance of `AzureDevOpsOrganizationProfileInput` via:
//
//	AzureDevOpsOrganizationProfileArgs{...}
type AzureDevOpsOrganizationProfileInput interface {
	pulumi.Input

	ToAzureDevOpsOrganizationProfileOutput() AzureDevOpsOrganizationProfileOutput
	ToAzureDevOpsOrganizationProfileOutputWithContext(context.Context) AzureDevOpsOrganizationProfileOutput
}

// Azure DevOps organization profile
type AzureDevOpsOrganizationProfileArgs struct {
	// Discriminator property for OrganizationProfile.
	// Expected value is 'AzureDevOps'.
	Kind pulumi.StringInput `pulumi:"kind"`
	// The list of Azure DevOps organizations the pool should be present in.
	Organizations OrganizationArrayInput `pulumi:"organizations"`
	// The type of permission which determines which accounts are admins on the Azure DevOps pool.
	PermissionProfile AzureDevOpsPermissionProfilePtrInput `pulumi:"permissionProfile"`
}

func (AzureDevOpsOrganizationProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureDevOpsOrganizationProfile)(nil)).Elem()
}

func (i AzureDevOpsOrganizationProfileArgs) ToAzureDevOpsOrganizationProfileOutput() AzureDevOpsOrganizationProfileOutput {
	return i.ToAzureDevOpsOrganizationProfileOutputWithContext(context.Background())
}

func (i AzureDevOpsOrganizationProfileArgs) ToAzureDevOpsOrganizationProfileOutputWithContext(ctx context.Context) AzureDevOpsOrganizationProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureDevOpsOrganizationProfileOutput)
}

// Azure DevOps organization profile
type AzureDevOpsOrganizationProfileOutput struct{ *pulumi.OutputState }

func (AzureDevOpsOrganizationProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureDevOpsOrganizationProfile)(nil)).Elem()
}

func (o AzureDevOpsOrganizationProfileOutput) ToAzureDevOpsOrganizationProfileOutput() AzureDevOpsOrganizationProfileOutput {
	return o
}

func (o AzureDevOpsOrganizationProfileOutput) ToAzureDevOpsOrganizationProfileOutputWithContext(ctx context.Context) AzureDevOpsOrganizationProfileOutput {
	return o
}

// Discriminator property for OrganizationProfile.
// Expected value is 'AzureDevOps'.
func (o AzureDevOpsOrganizationProfileOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v AzureDevOpsOrganizationProfile) string { return v.Kind }).(pulumi.StringOutput)
}

// The list of Azure DevOps organizations the pool should be present in.
func (o AzureDevOpsOrganizationProfileOutput) Organizations() OrganizationArrayOutput {
	return o.ApplyT(func(v AzureDevOpsOrganizationProfile) []Organization { return v.Organizations }).(OrganizationArrayOutput)
}

// The type of permission which determines which accounts are admins on the Azure DevOps pool.
func (o AzureDevOpsOrganizationProfileOutput) PermissionProfile() AzureDevOpsPermissionProfilePtrOutput {
	return o.ApplyT(func(v AzureDevOpsOrganizationProfile) *AzureDevOpsPermissionProfile { return v.PermissionProfile }).(AzureDevOpsPermissionProfilePtrOutput)
}

// Azure DevOps organization profile
type AzureDevOpsOrganizationProfileResponse struct {
	// Discriminator property for OrganizationProfile.
	// Expected value is 'AzureDevOps'.
	Kind string `pulumi:"kind"`
	// The list of Azure DevOps organizations the pool should be present in.
	Organizations []OrganizationResponse `pulumi:"organizations"`
	// The type of permission which determines which accounts are admins on the Azure DevOps pool.
	PermissionProfile *AzureDevOpsPermissionProfileResponse `pulumi:"permissionProfile"`
}

// Azure DevOps organization profile
type AzureDevOpsOrganizationProfileResponseOutput struct{ *pulumi.OutputState }

func (AzureDevOpsOrganizationProfileResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureDevOpsOrganizationProfileResponse)(nil)).Elem()
}

func (o AzureDevOpsOrganizationProfileResponseOutput) ToAzureDevOpsOrganizationProfileResponseOutput() AzureDevOpsOrganizationProfileResponseOutput {
	return o
}

func (o AzureDevOpsOrganizationProfileResponseOutput) ToAzureDevOpsOrganizationProfileResponseOutputWithContext(ctx context.Context) AzureDevOpsOrganizationProfileResponseOutput {
	return o
}

// Discriminator property for OrganizationProfile.
// Expected value is 'AzureDevOps'.
func (o AzureDevOpsOrganizationProfileResponseOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v AzureDevOpsOrganizationProfileResponse) string { return v.Kind }).(pulumi.StringOutput)
}

// The list of Azure DevOps organizations the pool should be present in.
func (o AzureDevOpsOrganizationProfileResponseOutput) Organizations() OrganizationResponseArrayOutput {
	return o.ApplyT(func(v AzureDevOpsOrganizationProfileResponse) []OrganizationResponse { return v.Organizations }).(OrganizationResponseArrayOutput)
}

// The type of permission which determines which accounts are admins on the Azure DevOps pool.
func (o AzureDevOpsOrganizationProfileResponseOutput) PermissionProfile() AzureDevOpsPermissionProfileResponsePtrOutput {
	return o.ApplyT(func(v AzureDevOpsOrganizationProfileResponse) *AzureDevOpsPermissionProfileResponse {
		return v.PermissionProfile
	}).(AzureDevOpsPermissionProfileResponsePtrOutput)
}

// Defines the type of Azure DevOps pool permission.
type AzureDevOpsPermissionProfile struct {
	// Group email addresses
	Groups []string `pulumi:"groups"`
	// Determines who has admin permissions to the Azure DevOps pool.
	Kind string `pulumi:"kind"`
	// User email addresses
	Users []string `pulumi:"users"`
}

// AzureDevOpsPermissionProfileInput is an input type that accepts AzureDevOpsPermissionProfileArgs and AzureDevOpsPermissionProfileOutput values.
// You can construct a concrete instance of `AzureDevOpsPermissionProfileInput` via:
//
//	AzureDevOpsPermissionProfileArgs{...}
type AzureDevOpsPermissionProfileInput interface {
	pulumi.Input

	ToAzureDevOpsPermissionProfileOutput() AzureDevOpsPermissionProfileOutput
	ToAzureDevOpsPermissionProfileOutputWithContext(context.Context) AzureDevOpsPermissionProfileOutput
}

// Defines the type of Azure DevOps pool permission.
type AzureDevOpsPermissionProfileArgs struct {
	// Group email addresses
	Groups pulumi.StringArrayInput `pulumi:"groups"`
	// Determines who has admin permissions to the Azure DevOps pool.
	Kind pulumi.StringInput `pulumi:"kind"`
	// User email addresses
	Users pulumi.StringArrayInput `pulumi:"users"`
}

func (AzureDevOpsPermissionProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureDevOpsPermissionProfile)(nil)).Elem()
}

func (i AzureDevOpsPermissionProfileArgs) ToAzureDevOpsPermissionProfileOutput() AzureDevOpsPermissionProfileOutput {
	return i.ToAzureDevOpsPermissionProfileOutputWithContext(context.Background())
}

func (i AzureDevOpsPermissionProfileArgs) ToAzureDevOpsPermissionProfileOutputWithContext(ctx context.Context) AzureDevOpsPermissionProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureDevOpsPermissionProfileOutput)
}

func (i AzureDevOpsPermissionProfileArgs) ToAzureDevOpsPermissionProfilePtrOutput() AzureDevOpsPermissionProfilePtrOutput {
	return i.ToAzureDevOpsPermissionProfilePtrOutputWithContext(context.Background())
}

func (i AzureDevOpsPermissionProfileArgs) ToAzureDevOpsPermissionProfilePtrOutputWithContext(ctx context.Context) AzureDevOpsPermissionProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureDevOpsPermissionProfileOutput).ToAzureDevOpsPermissionProfilePtrOutputWithContext(ctx)
}

// AzureDevOpsPermissionProfilePtrInput is an input type that accepts AzureDevOpsPermissionProfileArgs, AzureDevOpsPermissionProfilePtr and AzureDevOpsPermissionProfilePtrOutput values.
// You can construct a concrete instance of `AzureDevOpsPermissionProfilePtrInput` via:
//
//	        AzureDevOpsPermissionProfileArgs{...}
//
//	or:
//
//	        nil
type AzureDevOpsPermissionProfilePtrInput interface {
	pulumi.Input

	ToAzureDevOpsPermissionProfilePtrOutput() AzureDevOpsPermissionProfilePtrOutput
	ToAzureDevOpsPermissionProfilePtrOutputWithContext(context.Context) AzureDevOpsPermissionProfilePtrOutput
}

type azureDevOpsPermissionProfilePtrType AzureDevOpsPermissionProfileArgs

func AzureDevOpsPermissionProfilePtr(v *AzureDevOpsPermissionProfileArgs) AzureDevOpsPermissionProfilePtrInput {
	return (*azureDevOpsPermissionProfilePtrType)(v)
}

func (*azureDevOpsPermissionProfilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureDevOpsPermissionProfile)(nil)).Elem()
}

func (i *azureDevOpsPermissionProfilePtrType) ToAzureDevOpsPermissionProfilePtrOutput() AzureDevOpsPermissionProfilePtrOutput {
	return i.ToAzureDevOpsPermissionProfilePtrOutputWithContext(context.Background())
}

func (i *azureDevOpsPermissionProfilePtrType) ToAzureDevOpsPermissionProfilePtrOutputWithContext(ctx context.Context) AzureDevOpsPermissionProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureDevOpsPermissionProfilePtrOutput)
}

// Defines the type of Azure DevOps pool permission.
type AzureDevOpsPermissionProfileOutput struct{ *pulumi.OutputState }

func (AzureDevOpsPermissionProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureDevOpsPermissionProfile)(nil)).Elem()
}

func (o AzureDevOpsPermissionProfileOutput) ToAzureDevOpsPermissionProfileOutput() AzureDevOpsPermissionProfileOutput {
	return o
}

func (o AzureDevOpsPermissionProfileOutput) ToAzureDevOpsPermissionProfileOutputWithContext(ctx context.Context) AzureDevOpsPermissionProfileOutput {
	return o
}

func (o AzureDevOpsPermissionProfileOutput) ToAzureDevOpsPermissionProfilePtrOutput() AzureDevOpsPermissionProfilePtrOutput {
	return o.ToAzureDevOpsPermissionProfilePtrOutputWithContext(context.Background())
}

func (o AzureDevOpsPermissionProfileOutput) ToAzureDevOpsPermissionProfilePtrOutputWithContext(ctx context.Context) AzureDevOpsPermissionProfilePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AzureDevOpsPermissionProfile) *AzureDevOpsPermissionProfile {
		return &v
	}).(AzureDevOpsPermissionProfilePtrOutput)
}

// Group email addresses
func (o AzureDevOpsPermissionProfileOutput) Groups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AzureDevOpsPermissionProfile) []string { return v.Groups }).(pulumi.StringArrayOutput)
}

// Determines who has admin permissions to the Azure DevOps pool.
func (o AzureDevOpsPermissionProfileOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v AzureDevOpsPermissionProfile) string { return v.Kind }).(pulumi.StringOutput)
}

// User email addresses
func (o AzureDevOpsPermissionProfileOutput) Users() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AzureDevOpsPermissionProfile) []string { return v.Users }).(pulumi.StringArrayOutput)
}

type AzureDevOpsPermissionProfilePtrOutput struct{ *pulumi.OutputState }

func (AzureDevOpsPermissionProfilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureDevOpsPermissionProfile)(nil)).Elem()
}

func (o AzureDevOpsPermissionProfilePtrOutput) ToAzureDevOpsPermissionProfilePtrOutput() AzureDevOpsPermissionProfilePtrOutput {
	return o
}

func (o AzureDevOpsPermissionProfilePtrOutput) ToAzureDevOpsPermissionProfilePtrOutputWithContext(ctx context.Context) AzureDevOpsPermissionProfilePtrOutput {
	return o
}

func (o AzureDevOpsPermissionProfilePtrOutput) Elem() AzureDevOpsPermissionProfileOutput {
	return o.ApplyT(func(v *AzureDevOpsPermissionProfile) AzureDevOpsPermissionProfile {
		if v != nil {
			return *v
		}
		var ret AzureDevOpsPermissionProfile
		return ret
	}).(AzureDevOpsPermissionProfileOutput)
}

// Group email addresses
func (o AzureDevOpsPermissionProfilePtrOutput) Groups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AzureDevOpsPermissionProfile) []string {
		if v == nil {
			return nil
		}
		return v.Groups
	}).(pulumi.StringArrayOutput)
}

// Determines who has admin permissions to the Azure DevOps pool.
func (o AzureDevOpsPermissionProfilePtrOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureDevOpsPermissionProfile) *string {
		if v == nil {
			return nil
		}
		return &v.Kind
	}).(pulumi.StringPtrOutput)
}

// User email addresses
func (o AzureDevOpsPermissionProfilePtrOutput) Users() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AzureDevOpsPermissionProfile) []string {
		if v == nil {
			return nil
		}
		return v.Users
	}).(pulumi.StringArrayOutput)
}

// Defines the type of Azure DevOps pool permission.
type AzureDevOpsPermissionProfileResponse struct {
	// Group email addresses
	Groups []string `pulumi:"groups"`
	// Determines who has admin permissions to the Azure DevOps pool.
	Kind string `pulumi:"kind"`
	// User email addresses
	Users []string `pulumi:"users"`
}

// Defines the type of Azure DevOps pool permission.
type AzureDevOpsPermissionProfileResponseOutput struct{ *pulumi.OutputState }

func (AzureDevOpsPermissionProfileResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureDevOpsPermissionProfileResponse)(nil)).Elem()
}

func (o AzureDevOpsPermissionProfileResponseOutput) ToAzureDevOpsPermissionProfileResponseOutput() AzureDevOpsPermissionProfileResponseOutput {
	return o
}

func (o AzureDevOpsPermissionProfileResponseOutput) ToAzureDevOpsPermissionProfileResponseOutputWithContext(ctx context.Context) AzureDevOpsPermissionProfileResponseOutput {
	return o
}

// Group email addresses
func (o AzureDevOpsPermissionProfileResponseOutput) Groups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AzureDevOpsPermissionProfileResponse) []string { return v.Groups }).(pulumi.StringArrayOutput)
}

// Determines who has admin permissions to the Azure DevOps pool.
func (o AzureDevOpsPermissionProfileResponseOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v AzureDevOpsPermissionProfileResponse) string { return v.Kind }).(pulumi.StringOutput)
}

// User email addresses
func (o AzureDevOpsPermissionProfileResponseOutput) Users() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AzureDevOpsPermissionProfileResponse) []string { return v.Users }).(pulumi.StringArrayOutput)
}

type AzureDevOpsPermissionProfileResponsePtrOutput struct{ *pulumi.OutputState }

func (AzureDevOpsPermissionProfileResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureDevOpsPermissionProfileResponse)(nil)).Elem()
}

func (o AzureDevOpsPermissionProfileResponsePtrOutput) ToAzureDevOpsPermissionProfileResponsePtrOutput() AzureDevOpsPermissionProfileResponsePtrOutput {
	return o
}

func (o AzureDevOpsPermissionProfileResponsePtrOutput) ToAzureDevOpsPermissionProfileResponsePtrOutputWithContext(ctx context.Context) AzureDevOpsPermissionProfileResponsePtrOutput {
	return o
}

func (o AzureDevOpsPermissionProfileResponsePtrOutput) Elem() AzureDevOpsPermissionProfileResponseOutput {
	return o.ApplyT(func(v *AzureDevOpsPermissionProfileResponse) AzureDevOpsPermissionProfileResponse {
		if v != nil {
			return *v
		}
		var ret AzureDevOpsPermissionProfileResponse
		return ret
	}).(AzureDevOpsPermissionProfileResponseOutput)
}

// Group email addresses
func (o AzureDevOpsPermissionProfileResponsePtrOutput) Groups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AzureDevOpsPermissionProfileResponse) []string {
		if v == nil {
			return nil
		}
		return v.Groups
	}).(pulumi.StringArrayOutput)
}

// Determines who has admin permissions to the Azure DevOps pool.
func (o AzureDevOpsPermissionProfileResponsePtrOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureDevOpsPermissionProfileResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Kind
	}).(pulumi.StringPtrOutput)
}

// User email addresses
func (o AzureDevOpsPermissionProfileResponsePtrOutput) Users() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AzureDevOpsPermissionProfileResponse) []string {
		if v == nil {
			return nil
		}
		return v.Users
	}).(pulumi.StringArrayOutput)
}

// The data disk of the VMSS.
type DataDisk struct {
	// The type of caching to be enabled for the data disks. The default value for caching is readwrite. For information about the caching options see: https://blogs.msdn.microsoft.com/windowsazurestorage/2012/06/27/exploring-windows-azure-drives-disks-and-images/.
	Caching *string `pulumi:"caching"`
	// The initial disk size in gigabytes.
	DiskSizeGiB *int `pulumi:"diskSizeGiB"`
	// The drive letter for the empty data disk. If not specified, it will be the first available letter.
	DriveLetter *string `pulumi:"driveLetter"`
	// The storage Account type to be used for the data disk. If omitted, the default is "standard_lrs".
	StorageAccountType *string `pulumi:"storageAccountType"`
}

// DataDiskInput is an input type that accepts DataDiskArgs and DataDiskOutput values.
// You can construct a concrete instance of `DataDiskInput` via:
//
//	DataDiskArgs{...}
type DataDiskInput interface {
	pulumi.Input

	ToDataDiskOutput() DataDiskOutput
	ToDataDiskOutputWithContext(context.Context) DataDiskOutput
}

// The data disk of the VMSS.
type DataDiskArgs struct {
	// The type of caching to be enabled for the data disks. The default value for caching is readwrite. For information about the caching options see: https://blogs.msdn.microsoft.com/windowsazurestorage/2012/06/27/exploring-windows-azure-drives-disks-and-images/.
	Caching pulumi.StringPtrInput `pulumi:"caching"`
	// The initial disk size in gigabytes.
	DiskSizeGiB pulumi.IntPtrInput `pulumi:"diskSizeGiB"`
	// The drive letter for the empty data disk. If not specified, it will be the first available letter.
	DriveLetter pulumi.StringPtrInput `pulumi:"driveLetter"`
	// The storage Account type to be used for the data disk. If omitted, the default is "standard_lrs".
	StorageAccountType pulumi.StringPtrInput `pulumi:"storageAccountType"`
}

func (DataDiskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataDisk)(nil)).Elem()
}

func (i DataDiskArgs) ToDataDiskOutput() DataDiskOutput {
	return i.ToDataDiskOutputWithContext(context.Background())
}

func (i DataDiskArgs) ToDataDiskOutputWithContext(ctx context.Context) DataDiskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataDiskOutput)
}

// DataDiskArrayInput is an input type that accepts DataDiskArray and DataDiskArrayOutput values.
// You can construct a concrete instance of `DataDiskArrayInput` via:
//
//	DataDiskArray{ DataDiskArgs{...} }
type DataDiskArrayInput interface {
	pulumi.Input

	ToDataDiskArrayOutput() DataDiskArrayOutput
	ToDataDiskArrayOutputWithContext(context.Context) DataDiskArrayOutput
}

type DataDiskArray []DataDiskInput

func (DataDiskArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataDisk)(nil)).Elem()
}

func (i DataDiskArray) ToDataDiskArrayOutput() DataDiskArrayOutput {
	return i.ToDataDiskArrayOutputWithContext(context.Background())
}

func (i DataDiskArray) ToDataDiskArrayOutputWithContext(ctx context.Context) DataDiskArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataDiskArrayOutput)
}

// The data disk of the VMSS.
type DataDiskOutput struct{ *pulumi.OutputState }

func (DataDiskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataDisk)(nil)).Elem()
}

func (o DataDiskOutput) ToDataDiskOutput() DataDiskOutput {
	return o
}

func (o DataDiskOutput) ToDataDiskOutputWithContext(ctx context.Context) DataDiskOutput {
	return o
}

// The type of caching to be enabled for the data disks. The default value for caching is readwrite. For information about the caching options see: https://blogs.msdn.microsoft.com/windowsazurestorage/2012/06/27/exploring-windows-azure-drives-disks-and-images/.
func (o DataDiskOutput) Caching() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataDisk) *string { return v.Caching }).(pulumi.StringPtrOutput)
}

// The initial disk size in gigabytes.
func (o DataDiskOutput) DiskSizeGiB() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DataDisk) *int { return v.DiskSizeGiB }).(pulumi.IntPtrOutput)
}

// The drive letter for the empty data disk. If not specified, it will be the first available letter.
func (o DataDiskOutput) DriveLetter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataDisk) *string { return v.DriveLetter }).(pulumi.StringPtrOutput)
}

// The storage Account type to be used for the data disk. If omitted, the default is "standard_lrs".
func (o DataDiskOutput) StorageAccountType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataDisk) *string { return v.StorageAccountType }).(pulumi.StringPtrOutput)
}

type DataDiskArrayOutput struct{ *pulumi.OutputState }

func (DataDiskArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataDisk)(nil)).Elem()
}

func (o DataDiskArrayOutput) ToDataDiskArrayOutput() DataDiskArrayOutput {
	return o
}

func (o DataDiskArrayOutput) ToDataDiskArrayOutputWithContext(ctx context.Context) DataDiskArrayOutput {
	return o
}

func (o DataDiskArrayOutput) Index(i pulumi.IntInput) DataDiskOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DataDisk {
		return vs[0].([]DataDisk)[vs[1].(int)]
	}).(DataDiskOutput)
}

// The data disk of the VMSS.
type DataDiskResponse struct {
	// The type of caching to be enabled for the data disks. The default value for caching is readwrite. For information about the caching options see: https://blogs.msdn.microsoft.com/windowsazurestorage/2012/06/27/exploring-windows-azure-drives-disks-and-images/.
	Caching *string `pulumi:"caching"`
	// The initial disk size in gigabytes.
	DiskSizeGiB *int `pulumi:"diskSizeGiB"`
	// The drive letter for the empty data disk. If not specified, it will be the first available letter.
	DriveLetter *string `pulumi:"driveLetter"`
	// The storage Account type to be used for the data disk. If omitted, the default is "standard_lrs".
	StorageAccountType *string `pulumi:"storageAccountType"`
}

// The data disk of the VMSS.
type DataDiskResponseOutput struct{ *pulumi.OutputState }

func (DataDiskResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataDiskResponse)(nil)).Elem()
}

func (o DataDiskResponseOutput) ToDataDiskResponseOutput() DataDiskResponseOutput {
	return o
}

func (o DataDiskResponseOutput) ToDataDiskResponseOutputWithContext(ctx context.Context) DataDiskResponseOutput {
	return o
}

// The type of caching to be enabled for the data disks. The default value for caching is readwrite. For information about the caching options see: https://blogs.msdn.microsoft.com/windowsazurestorage/2012/06/27/exploring-windows-azure-drives-disks-and-images/.
func (o DataDiskResponseOutput) Caching() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataDiskResponse) *string { return v.Caching }).(pulumi.StringPtrOutput)
}

// The initial disk size in gigabytes.
func (o DataDiskResponseOutput) DiskSizeGiB() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DataDiskResponse) *int { return v.DiskSizeGiB }).(pulumi.IntPtrOutput)
}

// The drive letter for the empty data disk. If not specified, it will be the first available letter.
func (o DataDiskResponseOutput) DriveLetter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataDiskResponse) *string { return v.DriveLetter }).(pulumi.StringPtrOutput)
}

// The storage Account type to be used for the data disk. If omitted, the default is "standard_lrs".
func (o DataDiskResponseOutput) StorageAccountType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataDiskResponse) *string { return v.StorageAccountType }).(pulumi.StringPtrOutput)
}

type DataDiskResponseArrayOutput struct{ *pulumi.OutputState }

func (DataDiskResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataDiskResponse)(nil)).Elem()
}

func (o DataDiskResponseArrayOutput) ToDataDiskResponseArrayOutput() DataDiskResponseArrayOutput {
	return o
}

func (o DataDiskResponseArrayOutput) ToDataDiskResponseArrayOutputWithContext(ctx context.Context) DataDiskResponseArrayOutput {
	return o
}

func (o DataDiskResponseArrayOutput) Index(i pulumi.IntInput) DataDiskResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DataDiskResponse {
		return vs[0].([]DataDiskResponse)[vs[1].(int)]
	}).(DataDiskResponseOutput)
}

// The Azure SKU of the machines in the pool.
type DevOpsAzureSku struct {
	// The Azure SKU name of the machines in the pool.
	Name string `pulumi:"name"`
}

// DevOpsAzureSkuInput is an input type that accepts DevOpsAzureSkuArgs and DevOpsAzureSkuOutput values.
// You can construct a concrete instance of `DevOpsAzureSkuInput` via:
//
//	DevOpsAzureSkuArgs{...}
type DevOpsAzureSkuInput interface {
	pulumi.Input

	ToDevOpsAzureSkuOutput() DevOpsAzureSkuOutput
	ToDevOpsAzureSkuOutputWithContext(context.Context) DevOpsAzureSkuOutput
}

// The Azure SKU of the machines in the pool.
type DevOpsAzureSkuArgs struct {
	// The Azure SKU name of the machines in the pool.
	Name pulumi.StringInput `pulumi:"name"`
}

func (DevOpsAzureSkuArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DevOpsAzureSku)(nil)).Elem()
}

func (i DevOpsAzureSkuArgs) ToDevOpsAzureSkuOutput() DevOpsAzureSkuOutput {
	return i.ToDevOpsAzureSkuOutputWithContext(context.Background())
}

func (i DevOpsAzureSkuArgs) ToDevOpsAzureSkuOutputWithContext(ctx context.Context) DevOpsAzureSkuOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DevOpsAzureSkuOutput)
}

// The Azure SKU of the machines in the pool.
type DevOpsAzureSkuOutput struct{ *pulumi.OutputState }

func (DevOpsAzureSkuOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DevOpsAzureSku)(nil)).Elem()
}

func (o DevOpsAzureSkuOutput) ToDevOpsAzureSkuOutput() DevOpsAzureSkuOutput {
	return o
}

func (o DevOpsAzureSkuOutput) ToDevOpsAzureSkuOutputWithContext(ctx context.Context) DevOpsAzureSkuOutput {
	return o
}

// The Azure SKU name of the machines in the pool.
func (o DevOpsAzureSkuOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DevOpsAzureSku) string { return v.Name }).(pulumi.StringOutput)
}

// The Azure SKU of the machines in the pool.
type DevOpsAzureSkuResponse struct {
	// The Azure SKU name of the machines in the pool.
	Name string `pulumi:"name"`
}

// The Azure SKU of the machines in the pool.
type DevOpsAzureSkuResponseOutput struct{ *pulumi.OutputState }

func (DevOpsAzureSkuResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DevOpsAzureSkuResponse)(nil)).Elem()
}

func (o DevOpsAzureSkuResponseOutput) ToDevOpsAzureSkuResponseOutput() DevOpsAzureSkuResponseOutput {
	return o
}

func (o DevOpsAzureSkuResponseOutput) ToDevOpsAzureSkuResponseOutputWithContext(ctx context.Context) DevOpsAzureSkuResponseOutput {
	return o
}

// The Azure SKU name of the machines in the pool.
func (o DevOpsAzureSkuResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DevOpsAzureSkuResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Defines a GitHub organization
type GitHubOrganization struct {
	// Optional list of repositories in which the pool should be created.
	Repositories []string `pulumi:"repositories"`
	// The GitHub organization URL in which the pool should be created.
	Url string `pulumi:"url"`
}

// GitHubOrganizationInput is an input type that accepts GitHubOrganizationArgs and GitHubOrganizationOutput values.
// You can construct a concrete instance of `GitHubOrganizationInput` via:
//
//	GitHubOrganizationArgs{...}
type GitHubOrganizationInput interface {
	pulumi.Input

	ToGitHubOrganizationOutput() GitHubOrganizationOutput
	ToGitHubOrganizationOutputWithContext(context.Context) GitHubOrganizationOutput
}

// Defines a GitHub organization
type GitHubOrganizationArgs struct {
	// Optional list of repositories in which the pool should be created.
	Repositories pulumi.StringArrayInput `pulumi:"repositories"`
	// The GitHub organization URL in which the pool should be created.
	Url pulumi.StringInput `pulumi:"url"`
}

func (GitHubOrganizationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GitHubOrganization)(nil)).Elem()
}

func (i GitHubOrganizationArgs) ToGitHubOrganizationOutput() GitHubOrganizationOutput {
	return i.ToGitHubOrganizationOutputWithContext(context.Background())
}

func (i GitHubOrganizationArgs) ToGitHubOrganizationOutputWithContext(ctx context.Context) GitHubOrganizationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitHubOrganizationOutput)
}

// GitHubOrganizationArrayInput is an input type that accepts GitHubOrganizationArray and GitHubOrganizationArrayOutput values.
// You can construct a concrete instance of `GitHubOrganizationArrayInput` via:
//
//	GitHubOrganizationArray{ GitHubOrganizationArgs{...} }
type GitHubOrganizationArrayInput interface {
	pulumi.Input

	ToGitHubOrganizationArrayOutput() GitHubOrganizationArrayOutput
	ToGitHubOrganizationArrayOutputWithContext(context.Context) GitHubOrganizationArrayOutput
}

type GitHubOrganizationArray []GitHubOrganizationInput

func (GitHubOrganizationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GitHubOrganization)(nil)).Elem()
}

func (i GitHubOrganizationArray) ToGitHubOrganizationArrayOutput() GitHubOrganizationArrayOutput {
	return i.ToGitHubOrganizationArrayOutputWithContext(context.Background())
}

func (i GitHubOrganizationArray) ToGitHubOrganizationArrayOutputWithContext(ctx context.Context) GitHubOrganizationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitHubOrganizationArrayOutput)
}

// Defines a GitHub organization
type GitHubOrganizationOutput struct{ *pulumi.OutputState }

func (GitHubOrganizationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GitHubOrganization)(nil)).Elem()
}

func (o GitHubOrganizationOutput) ToGitHubOrganizationOutput() GitHubOrganizationOutput {
	return o
}

func (o GitHubOrganizationOutput) ToGitHubOrganizationOutputWithContext(ctx context.Context) GitHubOrganizationOutput {
	return o
}

// Optional list of repositories in which the pool should be created.
func (o GitHubOrganizationOutput) Repositories() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GitHubOrganization) []string { return v.Repositories }).(pulumi.StringArrayOutput)
}

// The GitHub organization URL in which the pool should be created.
func (o GitHubOrganizationOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v GitHubOrganization) string { return v.Url }).(pulumi.StringOutput)
}

type GitHubOrganizationArrayOutput struct{ *pulumi.OutputState }

func (GitHubOrganizationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GitHubOrganization)(nil)).Elem()
}

func (o GitHubOrganizationArrayOutput) ToGitHubOrganizationArrayOutput() GitHubOrganizationArrayOutput {
	return o
}

func (o GitHubOrganizationArrayOutput) ToGitHubOrganizationArrayOutputWithContext(ctx context.Context) GitHubOrganizationArrayOutput {
	return o
}

func (o GitHubOrganizationArrayOutput) Index(i pulumi.IntInput) GitHubOrganizationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GitHubOrganization {
		return vs[0].([]GitHubOrganization)[vs[1].(int)]
	}).(GitHubOrganizationOutput)
}

// GitHub organization profile
type GitHubOrganizationProfile struct {
	// Discriminator property for OrganizationProfile.
	// Expected value is 'GitHub'.
	Kind string `pulumi:"kind"`
	// The list of GitHub organizations/repositories the pool should be present in.
	Organizations []GitHubOrganization `pulumi:"organizations"`
}

// GitHubOrganizationProfileInput is an input type that accepts GitHubOrganizationProfileArgs and GitHubOrganizationProfileOutput values.
// You can construct a concrete instance of `GitHubOrganizationProfileInput` via:
//
//	GitHubOrganizationProfileArgs{...}
type GitHubOrganizationProfileInput interface {
	pulumi.Input

	ToGitHubOrganizationProfileOutput() GitHubOrganizationProfileOutput
	ToGitHubOrganizationProfileOutputWithContext(context.Context) GitHubOrganizationProfileOutput
}

// GitHub organization profile
type GitHubOrganizationProfileArgs struct {
	// Discriminator property for OrganizationProfile.
	// Expected value is 'GitHub'.
	Kind pulumi.StringInput `pulumi:"kind"`
	// The list of GitHub organizations/repositories the pool should be present in.
	Organizations GitHubOrganizationArrayInput `pulumi:"organizations"`
}

func (GitHubOrganizationProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GitHubOrganizationProfile)(nil)).Elem()
}

func (i GitHubOrganizationProfileArgs) ToGitHubOrganizationProfileOutput() GitHubOrganizationProfileOutput {
	return i.ToGitHubOrganizationProfileOutputWithContext(context.Background())
}

func (i GitHubOrganizationProfileArgs) ToGitHubOrganizationProfileOutputWithContext(ctx context.Context) GitHubOrganizationProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitHubOrganizationProfileOutput)
}

// GitHub organization profile
type GitHubOrganizationProfileOutput struct{ *pulumi.OutputState }

func (GitHubOrganizationProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GitHubOrganizationProfile)(nil)).Elem()
}

func (o GitHubOrganizationProfileOutput) ToGitHubOrganizationProfileOutput() GitHubOrganizationProfileOutput {
	return o
}

func (o GitHubOrganizationProfileOutput) ToGitHubOrganizationProfileOutputWithContext(ctx context.Context) GitHubOrganizationProfileOutput {
	return o
}

// Discriminator property for OrganizationProfile.
// Expected value is 'GitHub'.
func (o GitHubOrganizationProfileOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v GitHubOrganizationProfile) string { return v.Kind }).(pulumi.StringOutput)
}

// The list of GitHub organizations/repositories the pool should be present in.
func (o GitHubOrganizationProfileOutput) Organizations() GitHubOrganizationArrayOutput {
	return o.ApplyT(func(v GitHubOrganizationProfile) []GitHubOrganization { return v.Organizations }).(GitHubOrganizationArrayOutput)
}

// GitHub organization profile
type GitHubOrganizationProfileResponse struct {
	// Discriminator property for OrganizationProfile.
	// Expected value is 'GitHub'.
	Kind string `pulumi:"kind"`
	// The list of GitHub organizations/repositories the pool should be present in.
	Organizations []GitHubOrganizationResponse `pulumi:"organizations"`
}

// GitHub organization profile
type GitHubOrganizationProfileResponseOutput struct{ *pulumi.OutputState }

func (GitHubOrganizationProfileResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GitHubOrganizationProfileResponse)(nil)).Elem()
}

func (o GitHubOrganizationProfileResponseOutput) ToGitHubOrganizationProfileResponseOutput() GitHubOrganizationProfileResponseOutput {
	return o
}

func (o GitHubOrganizationProfileResponseOutput) ToGitHubOrganizationProfileResponseOutputWithContext(ctx context.Context) GitHubOrganizationProfileResponseOutput {
	return o
}

// Discriminator property for OrganizationProfile.
// Expected value is 'GitHub'.
func (o GitHubOrganizationProfileResponseOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v GitHubOrganizationProfileResponse) string { return v.Kind }).(pulumi.StringOutput)
}

// The list of GitHub organizations/repositories the pool should be present in.
func (o GitHubOrganizationProfileResponseOutput) Organizations() GitHubOrganizationResponseArrayOutput {
	return o.ApplyT(func(v GitHubOrganizationProfileResponse) []GitHubOrganizationResponse { return v.Organizations }).(GitHubOrganizationResponseArrayOutput)
}

// Defines a GitHub organization
type GitHubOrganizationResponse struct {
	// Optional list of repositories in which the pool should be created.
	Repositories []string `pulumi:"repositories"`
	// The GitHub organization URL in which the pool should be created.
	Url string `pulumi:"url"`
}

// Defines a GitHub organization
type GitHubOrganizationResponseOutput struct{ *pulumi.OutputState }

func (GitHubOrganizationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GitHubOrganizationResponse)(nil)).Elem()
}

func (o GitHubOrganizationResponseOutput) ToGitHubOrganizationResponseOutput() GitHubOrganizationResponseOutput {
	return o
}

func (o GitHubOrganizationResponseOutput) ToGitHubOrganizationResponseOutputWithContext(ctx context.Context) GitHubOrganizationResponseOutput {
	return o
}

// Optional list of repositories in which the pool should be created.
func (o GitHubOrganizationResponseOutput) Repositories() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GitHubOrganizationResponse) []string { return v.Repositories }).(pulumi.StringArrayOutput)
}

// The GitHub organization URL in which the pool should be created.
func (o GitHubOrganizationResponseOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v GitHubOrganizationResponse) string { return v.Url }).(pulumi.StringOutput)
}

type GitHubOrganizationResponseArrayOutput struct{ *pulumi.OutputState }

func (GitHubOrganizationResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GitHubOrganizationResponse)(nil)).Elem()
}

func (o GitHubOrganizationResponseArrayOutput) ToGitHubOrganizationResponseArrayOutput() GitHubOrganizationResponseArrayOutput {
	return o
}

func (o GitHubOrganizationResponseArrayOutput) ToGitHubOrganizationResponseArrayOutputWithContext(ctx context.Context) GitHubOrganizationResponseArrayOutput {
	return o
}

func (o GitHubOrganizationResponseArrayOutput) Index(i pulumi.IntInput) GitHubOrganizationResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GitHubOrganizationResponse {
		return vs[0].([]GitHubOrganizationResponse)[vs[1].(int)]
	}).(GitHubOrganizationResponseOutput)
}

// Managed service identity (system assigned and/or user assigned identities)
type ManagedServiceIdentity struct {
	// Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
	Type string `pulumi:"type"`
	// The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.
	UserAssignedIdentities []string `pulumi:"userAssignedIdentities"`
}

// ManagedServiceIdentityInput is an input type that accepts ManagedServiceIdentityArgs and ManagedServiceIdentityOutput values.
// You can construct a concrete instance of `ManagedServiceIdentityInput` via:
//
//	ManagedServiceIdentityArgs{...}
type ManagedServiceIdentityInput interface {
	pulumi.Input

	ToManagedServiceIdentityOutput() ManagedServiceIdentityOutput
	ToManagedServiceIdentityOutputWithContext(context.Context) ManagedServiceIdentityOutput
}

// Managed service identity (system assigned and/or user assigned identities)
type ManagedServiceIdentityArgs struct {
	// Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
	Type pulumi.StringInput `pulumi:"type"`
	// The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.
	UserAssignedIdentities pulumi.StringArrayInput `pulumi:"userAssignedIdentities"`
}

func (ManagedServiceIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedServiceIdentity)(nil)).Elem()
}

func (i ManagedServiceIdentityArgs) ToManagedServiceIdentityOutput() ManagedServiceIdentityOutput {
	return i.ToManagedServiceIdentityOutputWithContext(context.Background())
}

func (i ManagedServiceIdentityArgs) ToManagedServiceIdentityOutputWithContext(ctx context.Context) ManagedServiceIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedServiceIdentityOutput)
}

func (i ManagedServiceIdentityArgs) ToManagedServiceIdentityPtrOutput() ManagedServiceIdentityPtrOutput {
	return i.ToManagedServiceIdentityPtrOutputWithContext(context.Background())
}

func (i ManagedServiceIdentityArgs) ToManagedServiceIdentityPtrOutputWithContext(ctx context.Context) ManagedServiceIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedServiceIdentityOutput).ToManagedServiceIdentityPtrOutputWithContext(ctx)
}

// ManagedServiceIdentityPtrInput is an input type that accepts ManagedServiceIdentityArgs, ManagedServiceIdentityPtr and ManagedServiceIdentityPtrOutput values.
// You can construct a concrete instance of `ManagedServiceIdentityPtrInput` via:
//
//	        ManagedServiceIdentityArgs{...}
//
//	or:
//
//	        nil
type ManagedServiceIdentityPtrInput interface {
	pulumi.Input

	ToManagedServiceIdentityPtrOutput() ManagedServiceIdentityPtrOutput
	ToManagedServiceIdentityPtrOutputWithContext(context.Context) ManagedServiceIdentityPtrOutput
}

type managedServiceIdentityPtrType ManagedServiceIdentityArgs

func ManagedServiceIdentityPtr(v *ManagedServiceIdentityArgs) ManagedServiceIdentityPtrInput {
	return (*managedServiceIdentityPtrType)(v)
}

func (*managedServiceIdentityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedServiceIdentity)(nil)).Elem()
}

func (i *managedServiceIdentityPtrType) ToManagedServiceIdentityPtrOutput() ManagedServiceIdentityPtrOutput {
	return i.ToManagedServiceIdentityPtrOutputWithContext(context.Background())
}

func (i *managedServiceIdentityPtrType) ToManagedServiceIdentityPtrOutputWithContext(ctx context.Context) ManagedServiceIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedServiceIdentityPtrOutput)
}

// Managed service identity (system assigned and/or user assigned identities)
type ManagedServiceIdentityOutput struct{ *pulumi.OutputState }

func (ManagedServiceIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedServiceIdentity)(nil)).Elem()
}

func (o ManagedServiceIdentityOutput) ToManagedServiceIdentityOutput() ManagedServiceIdentityOutput {
	return o
}

func (o ManagedServiceIdentityOutput) ToManagedServiceIdentityOutputWithContext(ctx context.Context) ManagedServiceIdentityOutput {
	return o
}

func (o ManagedServiceIdentityOutput) ToManagedServiceIdentityPtrOutput() ManagedServiceIdentityPtrOutput {
	return o.ToManagedServiceIdentityPtrOutputWithContext(context.Background())
}

func (o ManagedServiceIdentityOutput) ToManagedServiceIdentityPtrOutputWithContext(ctx context.Context) ManagedServiceIdentityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ManagedServiceIdentity) *ManagedServiceIdentity {
		return &v
	}).(ManagedServiceIdentityPtrOutput)
}

// Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
func (o ManagedServiceIdentityOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedServiceIdentity) string { return v.Type }).(pulumi.StringOutput)
}

// The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.
func (o ManagedServiceIdentityOutput) UserAssignedIdentities() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ManagedServiceIdentity) []string { return v.UserAssignedIdentities }).(pulumi.StringArrayOutput)
}

type ManagedServiceIdentityPtrOutput struct{ *pulumi.OutputState }

func (ManagedServiceIdentityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedServiceIdentity)(nil)).Elem()
}

func (o ManagedServiceIdentityPtrOutput) ToManagedServiceIdentityPtrOutput() ManagedServiceIdentityPtrOutput {
	return o
}

func (o ManagedServiceIdentityPtrOutput) ToManagedServiceIdentityPtrOutputWithContext(ctx context.Context) ManagedServiceIdentityPtrOutput {
	return o
}

func (o ManagedServiceIdentityPtrOutput) Elem() ManagedServiceIdentityOutput {
	return o.ApplyT(func(v *ManagedServiceIdentity) ManagedServiceIdentity {
		if v != nil {
			return *v
		}
		var ret ManagedServiceIdentity
		return ret
	}).(ManagedServiceIdentityOutput)
}

// Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
func (o ManagedServiceIdentityPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedServiceIdentity) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.
func (o ManagedServiceIdentityPtrOutput) UserAssignedIdentities() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ManagedServiceIdentity) []string {
		if v == nil {
			return nil
		}
		return v.UserAssignedIdentities
	}).(pulumi.StringArrayOutput)
}

// Managed service identity (system assigned and/or user assigned identities)
type ManagedServiceIdentityResponse struct {
	// The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.
	PrincipalId string `pulumi:"principalId"`
	// The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.
	TenantId string `pulumi:"tenantId"`
	// Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
	Type string `pulumi:"type"`
	// The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.
	UserAssignedIdentities map[string]UserAssignedIdentityResponse `pulumi:"userAssignedIdentities"`
}

// Managed service identity (system assigned and/or user assigned identities)
type ManagedServiceIdentityResponseOutput struct{ *pulumi.OutputState }

func (ManagedServiceIdentityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedServiceIdentityResponse)(nil)).Elem()
}

func (o ManagedServiceIdentityResponseOutput) ToManagedServiceIdentityResponseOutput() ManagedServiceIdentityResponseOutput {
	return o
}

func (o ManagedServiceIdentityResponseOutput) ToManagedServiceIdentityResponseOutputWithContext(ctx context.Context) ManagedServiceIdentityResponseOutput {
	return o
}

// The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.
func (o ManagedServiceIdentityResponseOutput) PrincipalId() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedServiceIdentityResponse) string { return v.PrincipalId }).(pulumi.StringOutput)
}

// The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.
func (o ManagedServiceIdentityResponseOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedServiceIdentityResponse) string { return v.TenantId }).(pulumi.StringOutput)
}

// Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
func (o ManagedServiceIdentityResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedServiceIdentityResponse) string { return v.Type }).(pulumi.StringOutput)
}

// The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.
func (o ManagedServiceIdentityResponseOutput) UserAssignedIdentities() UserAssignedIdentityResponseMapOutput {
	return o.ApplyT(func(v ManagedServiceIdentityResponse) map[string]UserAssignedIdentityResponse {
		return v.UserAssignedIdentities
	}).(UserAssignedIdentityResponseMapOutput)
}

type ManagedServiceIdentityResponsePtrOutput struct{ *pulumi.OutputState }

func (ManagedServiceIdentityResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedServiceIdentityResponse)(nil)).Elem()
}

func (o ManagedServiceIdentityResponsePtrOutput) ToManagedServiceIdentityResponsePtrOutput() ManagedServiceIdentityResponsePtrOutput {
	return o
}

func (o ManagedServiceIdentityResponsePtrOutput) ToManagedServiceIdentityResponsePtrOutputWithContext(ctx context.Context) ManagedServiceIdentityResponsePtrOutput {
	return o
}

func (o ManagedServiceIdentityResponsePtrOutput) Elem() ManagedServiceIdentityResponseOutput {
	return o.ApplyT(func(v *ManagedServiceIdentityResponse) ManagedServiceIdentityResponse {
		if v != nil {
			return *v
		}
		var ret ManagedServiceIdentityResponse
		return ret
	}).(ManagedServiceIdentityResponseOutput)
}

// The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.
func (o ManagedServiceIdentityResponsePtrOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedServiceIdentityResponse) *string {
		if v == nil {
			return nil
		}
		return &v.PrincipalId
	}).(pulumi.StringPtrOutput)
}

// The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.
func (o ManagedServiceIdentityResponsePtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedServiceIdentityResponse) *string {
		if v == nil {
			return nil
		}
		return &v.TenantId
	}).(pulumi.StringPtrOutput)
}

// Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
func (o ManagedServiceIdentityResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedServiceIdentityResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.
func (o ManagedServiceIdentityResponsePtrOutput) UserAssignedIdentities() UserAssignedIdentityResponseMapOutput {
	return o.ApplyT(func(v *ManagedServiceIdentityResponse) map[string]UserAssignedIdentityResponse {
		if v == nil {
			return nil
		}
		return v.UserAssignedIdentities
	}).(UserAssignedIdentityResponseMapOutput)
}

// Customer provides the stand-by agent scheme.
type ManualResourcePredictionsProfile struct {
	// Determines how the stand-by scheme should be provided.
	// Expected value is 'Manual'.
	Kind string `pulumi:"kind"`
}

// ManualResourcePredictionsProfileInput is an input type that accepts ManualResourcePredictionsProfileArgs and ManualResourcePredictionsProfileOutput values.
// You can construct a concrete instance of `ManualResourcePredictionsProfileInput` via:
//
//	ManualResourcePredictionsProfileArgs{...}
type ManualResourcePredictionsProfileInput interface {
	pulumi.Input

	ToManualResourcePredictionsProfileOutput() ManualResourcePredictionsProfileOutput
	ToManualResourcePredictionsProfileOutputWithContext(context.Context) ManualResourcePredictionsProfileOutput
}

// Customer provides the stand-by agent scheme.
type ManualResourcePredictionsProfileArgs struct {
	// Determines how the stand-by scheme should be provided.
	// Expected value is 'Manual'.
	Kind pulumi.StringInput `pulumi:"kind"`
}

func (ManualResourcePredictionsProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManualResourcePredictionsProfile)(nil)).Elem()
}

func (i ManualResourcePredictionsProfileArgs) ToManualResourcePredictionsProfileOutput() ManualResourcePredictionsProfileOutput {
	return i.ToManualResourcePredictionsProfileOutputWithContext(context.Background())
}

func (i ManualResourcePredictionsProfileArgs) ToManualResourcePredictionsProfileOutputWithContext(ctx context.Context) ManualResourcePredictionsProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManualResourcePredictionsProfileOutput)
}

func (i ManualResourcePredictionsProfileArgs) ToManualResourcePredictionsProfilePtrOutput() ManualResourcePredictionsProfilePtrOutput {
	return i.ToManualResourcePredictionsProfilePtrOutputWithContext(context.Background())
}

func (i ManualResourcePredictionsProfileArgs) ToManualResourcePredictionsProfilePtrOutputWithContext(ctx context.Context) ManualResourcePredictionsProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManualResourcePredictionsProfileOutput).ToManualResourcePredictionsProfilePtrOutputWithContext(ctx)
}

// ManualResourcePredictionsProfilePtrInput is an input type that accepts ManualResourcePredictionsProfileArgs, ManualResourcePredictionsProfilePtr and ManualResourcePredictionsProfilePtrOutput values.
// You can construct a concrete instance of `ManualResourcePredictionsProfilePtrInput` via:
//
//	        ManualResourcePredictionsProfileArgs{...}
//
//	or:
//
//	        nil
type ManualResourcePredictionsProfilePtrInput interface {
	pulumi.Input

	ToManualResourcePredictionsProfilePtrOutput() ManualResourcePredictionsProfilePtrOutput
	ToManualResourcePredictionsProfilePtrOutputWithContext(context.Context) ManualResourcePredictionsProfilePtrOutput
}

type manualResourcePredictionsProfilePtrType ManualResourcePredictionsProfileArgs

func ManualResourcePredictionsProfilePtr(v *ManualResourcePredictionsProfileArgs) ManualResourcePredictionsProfilePtrInput {
	return (*manualResourcePredictionsProfilePtrType)(v)
}

func (*manualResourcePredictionsProfilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManualResourcePredictionsProfile)(nil)).Elem()
}

func (i *manualResourcePredictionsProfilePtrType) ToManualResourcePredictionsProfilePtrOutput() ManualResourcePredictionsProfilePtrOutput {
	return i.ToManualResourcePredictionsProfilePtrOutputWithContext(context.Background())
}

func (i *manualResourcePredictionsProfilePtrType) ToManualResourcePredictionsProfilePtrOutputWithContext(ctx context.Context) ManualResourcePredictionsProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManualResourcePredictionsProfilePtrOutput)
}

// Customer provides the stand-by agent scheme.
type ManualResourcePredictionsProfileOutput struct{ *pulumi.OutputState }

func (ManualResourcePredictionsProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManualResourcePredictionsProfile)(nil)).Elem()
}

func (o ManualResourcePredictionsProfileOutput) ToManualResourcePredictionsProfileOutput() ManualResourcePredictionsProfileOutput {
	return o
}

func (o ManualResourcePredictionsProfileOutput) ToManualResourcePredictionsProfileOutputWithContext(ctx context.Context) ManualResourcePredictionsProfileOutput {
	return o
}

func (o ManualResourcePredictionsProfileOutput) ToManualResourcePredictionsProfilePtrOutput() ManualResourcePredictionsProfilePtrOutput {
	return o.ToManualResourcePredictionsProfilePtrOutputWithContext(context.Background())
}

func (o ManualResourcePredictionsProfileOutput) ToManualResourcePredictionsProfilePtrOutputWithContext(ctx context.Context) ManualResourcePredictionsProfilePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ManualResourcePredictionsProfile) *ManualResourcePredictionsProfile {
		return &v
	}).(ManualResourcePredictionsProfilePtrOutput)
}

// Determines how the stand-by scheme should be provided.
// Expected value is 'Manual'.
func (o ManualResourcePredictionsProfileOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v ManualResourcePredictionsProfile) string { return v.Kind }).(pulumi.StringOutput)
}

type ManualResourcePredictionsProfilePtrOutput struct{ *pulumi.OutputState }

func (ManualResourcePredictionsProfilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManualResourcePredictionsProfile)(nil)).Elem()
}

func (o ManualResourcePredictionsProfilePtrOutput) ToManualResourcePredictionsProfilePtrOutput() ManualResourcePredictionsProfilePtrOutput {
	return o
}

func (o ManualResourcePredictionsProfilePtrOutput) ToManualResourcePredictionsProfilePtrOutputWithContext(ctx context.Context) ManualResourcePredictionsProfilePtrOutput {
	return o
}

func (o ManualResourcePredictionsProfilePtrOutput) Elem() ManualResourcePredictionsProfileOutput {
	return o.ApplyT(func(v *ManualResourcePredictionsProfile) ManualResourcePredictionsProfile {
		if v != nil {
			return *v
		}
		var ret ManualResourcePredictionsProfile
		return ret
	}).(ManualResourcePredictionsProfileOutput)
}

// Determines how the stand-by scheme should be provided.
// Expected value is 'Manual'.
func (o ManualResourcePredictionsProfilePtrOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManualResourcePredictionsProfile) *string {
		if v == nil {
			return nil
		}
		return &v.Kind
	}).(pulumi.StringPtrOutput)
}

// Customer provides the stand-by agent scheme.
type ManualResourcePredictionsProfileResponse struct {
	// Determines how the stand-by scheme should be provided.
	// Expected value is 'Manual'.
	Kind string `pulumi:"kind"`
}

// Customer provides the stand-by agent scheme.
type ManualResourcePredictionsProfileResponseOutput struct{ *pulumi.OutputState }

func (ManualResourcePredictionsProfileResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManualResourcePredictionsProfileResponse)(nil)).Elem()
}

func (o ManualResourcePredictionsProfileResponseOutput) ToManualResourcePredictionsProfileResponseOutput() ManualResourcePredictionsProfileResponseOutput {
	return o
}

func (o ManualResourcePredictionsProfileResponseOutput) ToManualResourcePredictionsProfileResponseOutputWithContext(ctx context.Context) ManualResourcePredictionsProfileResponseOutput {
	return o
}

// Determines how the stand-by scheme should be provided.
// Expected value is 'Manual'.
func (o ManualResourcePredictionsProfileResponseOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v ManualResourcePredictionsProfileResponse) string { return v.Kind }).(pulumi.StringOutput)
}

type ManualResourcePredictionsProfileResponsePtrOutput struct{ *pulumi.OutputState }

func (ManualResourcePredictionsProfileResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManualResourcePredictionsProfileResponse)(nil)).Elem()
}

func (o ManualResourcePredictionsProfileResponsePtrOutput) ToManualResourcePredictionsProfileResponsePtrOutput() ManualResourcePredictionsProfileResponsePtrOutput {
	return o
}

func (o ManualResourcePredictionsProfileResponsePtrOutput) ToManualResourcePredictionsProfileResponsePtrOutputWithContext(ctx context.Context) ManualResourcePredictionsProfileResponsePtrOutput {
	return o
}

func (o ManualResourcePredictionsProfileResponsePtrOutput) Elem() ManualResourcePredictionsProfileResponseOutput {
	return o.ApplyT(func(v *ManualResourcePredictionsProfileResponse) ManualResourcePredictionsProfileResponse {
		if v != nil {
			return *v
		}
		var ret ManualResourcePredictionsProfileResponse
		return ret
	}).(ManualResourcePredictionsProfileResponseOutput)
}

// Determines how the stand-by scheme should be provided.
// Expected value is 'Manual'.
func (o ManualResourcePredictionsProfileResponsePtrOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManualResourcePredictionsProfileResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Kind
	}).(pulumi.StringPtrOutput)
}

// The network profile of the machines in the pool.
type NetworkProfile struct {
	// The subnet id on which to put all machines created in the pool.
	SubnetId string `pulumi:"subnetId"`
}

// NetworkProfileInput is an input type that accepts NetworkProfileArgs and NetworkProfileOutput values.
// You can construct a concrete instance of `NetworkProfileInput` via:
//
//	NetworkProfileArgs{...}
type NetworkProfileInput interface {
	pulumi.Input

	ToNetworkProfileOutput() NetworkProfileOutput
	ToNetworkProfileOutputWithContext(context.Context) NetworkProfileOutput
}

// The network profile of the machines in the pool.
type NetworkProfileArgs struct {
	// The subnet id on which to put all machines created in the pool.
	SubnetId pulumi.StringInput `pulumi:"subnetId"`
}

func (NetworkProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkProfile)(nil)).Elem()
}

func (i NetworkProfileArgs) ToNetworkProfileOutput() NetworkProfileOutput {
	return i.ToNetworkProfileOutputWithContext(context.Background())
}

func (i NetworkProfileArgs) ToNetworkProfileOutputWithContext(ctx context.Context) NetworkProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkProfileOutput)
}

func (i NetworkProfileArgs) ToNetworkProfilePtrOutput() NetworkProfilePtrOutput {
	return i.ToNetworkProfilePtrOutputWithContext(context.Background())
}

func (i NetworkProfileArgs) ToNetworkProfilePtrOutputWithContext(ctx context.Context) NetworkProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkProfileOutput).ToNetworkProfilePtrOutputWithContext(ctx)
}

// NetworkProfilePtrInput is an input type that accepts NetworkProfileArgs, NetworkProfilePtr and NetworkProfilePtrOutput values.
// You can construct a concrete instance of `NetworkProfilePtrInput` via:
//
//	        NetworkProfileArgs{...}
//
//	or:
//
//	        nil
type NetworkProfilePtrInput interface {
	pulumi.Input

	ToNetworkProfilePtrOutput() NetworkProfilePtrOutput
	ToNetworkProfilePtrOutputWithContext(context.Context) NetworkProfilePtrOutput
}

type networkProfilePtrType NetworkProfileArgs

func NetworkProfilePtr(v *NetworkProfileArgs) NetworkProfilePtrInput {
	return (*networkProfilePtrType)(v)
}

func (*networkProfilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkProfile)(nil)).Elem()
}

func (i *networkProfilePtrType) ToNetworkProfilePtrOutput() NetworkProfilePtrOutput {
	return i.ToNetworkProfilePtrOutputWithContext(context.Background())
}

func (i *networkProfilePtrType) ToNetworkProfilePtrOutputWithContext(ctx context.Context) NetworkProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkProfilePtrOutput)
}

// The network profile of the machines in the pool.
type NetworkProfileOutput struct{ *pulumi.OutputState }

func (NetworkProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkProfile)(nil)).Elem()
}

func (o NetworkProfileOutput) ToNetworkProfileOutput() NetworkProfileOutput {
	return o
}

func (o NetworkProfileOutput) ToNetworkProfileOutputWithContext(ctx context.Context) NetworkProfileOutput {
	return o
}

func (o NetworkProfileOutput) ToNetworkProfilePtrOutput() NetworkProfilePtrOutput {
	return o.ToNetworkProfilePtrOutputWithContext(context.Background())
}

func (o NetworkProfileOutput) ToNetworkProfilePtrOutputWithContext(ctx context.Context) NetworkProfilePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NetworkProfile) *NetworkProfile {
		return &v
	}).(NetworkProfilePtrOutput)
}

// The subnet id on which to put all machines created in the pool.
func (o NetworkProfileOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkProfile) string { return v.SubnetId }).(pulumi.StringOutput)
}

type NetworkProfilePtrOutput struct{ *pulumi.OutputState }

func (NetworkProfilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkProfile)(nil)).Elem()
}

func (o NetworkProfilePtrOutput) ToNetworkProfilePtrOutput() NetworkProfilePtrOutput {
	return o
}

func (o NetworkProfilePtrOutput) ToNetworkProfilePtrOutputWithContext(ctx context.Context) NetworkProfilePtrOutput {
	return o
}

func (o NetworkProfilePtrOutput) Elem() NetworkProfileOutput {
	return o.ApplyT(func(v *NetworkProfile) NetworkProfile {
		if v != nil {
			return *v
		}
		var ret NetworkProfile
		return ret
	}).(NetworkProfileOutput)
}

// The subnet id on which to put all machines created in the pool.
func (o NetworkProfilePtrOutput) SubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkProfile) *string {
		if v == nil {
			return nil
		}
		return &v.SubnetId
	}).(pulumi.StringPtrOutput)
}

// The network profile of the machines in the pool.
type NetworkProfileResponse struct {
	// The subnet id on which to put all machines created in the pool.
	SubnetId string `pulumi:"subnetId"`
}

// The network profile of the machines in the pool.
type NetworkProfileResponseOutput struct{ *pulumi.OutputState }

func (NetworkProfileResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkProfileResponse)(nil)).Elem()
}

func (o NetworkProfileResponseOutput) ToNetworkProfileResponseOutput() NetworkProfileResponseOutput {
	return o
}

func (o NetworkProfileResponseOutput) ToNetworkProfileResponseOutputWithContext(ctx context.Context) NetworkProfileResponseOutput {
	return o
}

// The subnet id on which to put all machines created in the pool.
func (o NetworkProfileResponseOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkProfileResponse) string { return v.SubnetId }).(pulumi.StringOutput)
}

type NetworkProfileResponsePtrOutput struct{ *pulumi.OutputState }

func (NetworkProfileResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkProfileResponse)(nil)).Elem()
}

func (o NetworkProfileResponsePtrOutput) ToNetworkProfileResponsePtrOutput() NetworkProfileResponsePtrOutput {
	return o
}

func (o NetworkProfileResponsePtrOutput) ToNetworkProfileResponsePtrOutputWithContext(ctx context.Context) NetworkProfileResponsePtrOutput {
	return o
}

func (o NetworkProfileResponsePtrOutput) Elem() NetworkProfileResponseOutput {
	return o.ApplyT(func(v *NetworkProfileResponse) NetworkProfileResponse {
		if v != nil {
			return *v
		}
		var ret NetworkProfileResponse
		return ret
	}).(NetworkProfileResponseOutput)
}

// The subnet id on which to put all machines created in the pool.
func (o NetworkProfileResponsePtrOutput) SubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkProfileResponse) *string {
		if v == nil {
			return nil
		}
		return &v.SubnetId
	}).(pulumi.StringPtrOutput)
}

// Defines an Azure DevOps organization.
type Organization struct {
	// How many machines can be created at maximum in this organization out of the maximumConcurrency of the pool.
	Parallelism *int `pulumi:"parallelism"`
	// Optional list of projects in which the pool should be created.
	Projects []string `pulumi:"projects"`
	// The Azure DevOps organization URL in which the pool should be created.
	Url string `pulumi:"url"`
}

// OrganizationInput is an input type that accepts OrganizationArgs and OrganizationOutput values.
// You can construct a concrete instance of `OrganizationInput` via:
//
//	OrganizationArgs{...}
type OrganizationInput interface {
	pulumi.Input

	ToOrganizationOutput() OrganizationOutput
	ToOrganizationOutputWithContext(context.Context) OrganizationOutput
}

// Defines an Azure DevOps organization.
type OrganizationArgs struct {
	// How many machines can be created at maximum in this organization out of the maximumConcurrency of the pool.
	Parallelism pulumi.IntPtrInput `pulumi:"parallelism"`
	// Optional list of projects in which the pool should be created.
	Projects pulumi.StringArrayInput `pulumi:"projects"`
	// The Azure DevOps organization URL in which the pool should be created.
	Url pulumi.StringInput `pulumi:"url"`
}

func (OrganizationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Organization)(nil)).Elem()
}

func (i OrganizationArgs) ToOrganizationOutput() OrganizationOutput {
	return i.ToOrganizationOutputWithContext(context.Background())
}

func (i OrganizationArgs) ToOrganizationOutputWithContext(ctx context.Context) OrganizationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationOutput)
}

// OrganizationArrayInput is an input type that accepts OrganizationArray and OrganizationArrayOutput values.
// You can construct a concrete instance of `OrganizationArrayInput` via:
//
//	OrganizationArray{ OrganizationArgs{...} }
type OrganizationArrayInput interface {
	pulumi.Input

	ToOrganizationArrayOutput() OrganizationArrayOutput
	ToOrganizationArrayOutputWithContext(context.Context) OrganizationArrayOutput
}

type OrganizationArray []OrganizationInput

func (OrganizationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Organization)(nil)).Elem()
}

func (i OrganizationArray) ToOrganizationArrayOutput() OrganizationArrayOutput {
	return i.ToOrganizationArrayOutputWithContext(context.Background())
}

func (i OrganizationArray) ToOrganizationArrayOutputWithContext(ctx context.Context) OrganizationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationArrayOutput)
}

// Defines an Azure DevOps organization.
type OrganizationOutput struct{ *pulumi.OutputState }

func (OrganizationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Organization)(nil)).Elem()
}

func (o OrganizationOutput) ToOrganizationOutput() OrganizationOutput {
	return o
}

func (o OrganizationOutput) ToOrganizationOutputWithContext(ctx context.Context) OrganizationOutput {
	return o
}

// How many machines can be created at maximum in this organization out of the maximumConcurrency of the pool.
func (o OrganizationOutput) Parallelism() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Organization) *int { return v.Parallelism }).(pulumi.IntPtrOutput)
}

// Optional list of projects in which the pool should be created.
func (o OrganizationOutput) Projects() pulumi.StringArrayOutput {
	return o.ApplyT(func(v Organization) []string { return v.Projects }).(pulumi.StringArrayOutput)
}

// The Azure DevOps organization URL in which the pool should be created.
func (o OrganizationOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v Organization) string { return v.Url }).(pulumi.StringOutput)
}

type OrganizationArrayOutput struct{ *pulumi.OutputState }

func (OrganizationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Organization)(nil)).Elem()
}

func (o OrganizationArrayOutput) ToOrganizationArrayOutput() OrganizationArrayOutput {
	return o
}

func (o OrganizationArrayOutput) ToOrganizationArrayOutputWithContext(ctx context.Context) OrganizationArrayOutput {
	return o
}

func (o OrganizationArrayOutput) Index(i pulumi.IntInput) OrganizationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Organization {
		return vs[0].([]Organization)[vs[1].(int)]
	}).(OrganizationOutput)
}

// Defines an Azure DevOps organization.
type OrganizationResponse struct {
	// How many machines can be created at maximum in this organization out of the maximumConcurrency of the pool.
	Parallelism *int `pulumi:"parallelism"`
	// Optional list of projects in which the pool should be created.
	Projects []string `pulumi:"projects"`
	// The Azure DevOps organization URL in which the pool should be created.
	Url string `pulumi:"url"`
}

// Defines an Azure DevOps organization.
type OrganizationResponseOutput struct{ *pulumi.OutputState }

func (OrganizationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OrganizationResponse)(nil)).Elem()
}

func (o OrganizationResponseOutput) ToOrganizationResponseOutput() OrganizationResponseOutput {
	return o
}

func (o OrganizationResponseOutput) ToOrganizationResponseOutputWithContext(ctx context.Context) OrganizationResponseOutput {
	return o
}

// How many machines can be created at maximum in this organization out of the maximumConcurrency of the pool.
func (o OrganizationResponseOutput) Parallelism() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OrganizationResponse) *int { return v.Parallelism }).(pulumi.IntPtrOutput)
}

// Optional list of projects in which the pool should be created.
func (o OrganizationResponseOutput) Projects() pulumi.StringArrayOutput {
	return o.ApplyT(func(v OrganizationResponse) []string { return v.Projects }).(pulumi.StringArrayOutput)
}

// The Azure DevOps organization URL in which the pool should be created.
func (o OrganizationResponseOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v OrganizationResponse) string { return v.Url }).(pulumi.StringOutput)
}

type OrganizationResponseArrayOutput struct{ *pulumi.OutputState }

func (OrganizationResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OrganizationResponse)(nil)).Elem()
}

func (o OrganizationResponseArrayOutput) ToOrganizationResponseArrayOutput() OrganizationResponseArrayOutput {
	return o
}

func (o OrganizationResponseArrayOutput) ToOrganizationResponseArrayOutputWithContext(ctx context.Context) OrganizationResponseArrayOutput {
	return o
}

func (o OrganizationResponseArrayOutput) Index(i pulumi.IntInput) OrganizationResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OrganizationResponse {
		return vs[0].([]OrganizationResponse)[vs[1].(int)]
	}).(OrganizationResponseOutput)
}

// The OS profile of the machines in the pool.
type OsProfile struct {
	// Determines how the service should be run. By default, this will be set to Service.
	LogonType *string `pulumi:"logonType"`
	// The secret management settings of the machines in the pool.
	SecretsManagementSettings *SecretsManagementSettings `pulumi:"secretsManagementSettings"`
}

// OsProfileInput is an input type that accepts OsProfileArgs and OsProfileOutput values.
// You can construct a concrete instance of `OsProfileInput` via:
//
//	OsProfileArgs{...}
type OsProfileInput interface {
	pulumi.Input

	ToOsProfileOutput() OsProfileOutput
	ToOsProfileOutputWithContext(context.Context) OsProfileOutput
}

// The OS profile of the machines in the pool.
type OsProfileArgs struct {
	// Determines how the service should be run. By default, this will be set to Service.
	LogonType pulumi.StringPtrInput `pulumi:"logonType"`
	// The secret management settings of the machines in the pool.
	SecretsManagementSettings SecretsManagementSettingsPtrInput `pulumi:"secretsManagementSettings"`
}

func (OsProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OsProfile)(nil)).Elem()
}

func (i OsProfileArgs) ToOsProfileOutput() OsProfileOutput {
	return i.ToOsProfileOutputWithContext(context.Background())
}

func (i OsProfileArgs) ToOsProfileOutputWithContext(ctx context.Context) OsProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OsProfileOutput)
}

func (i OsProfileArgs) ToOsProfilePtrOutput() OsProfilePtrOutput {
	return i.ToOsProfilePtrOutputWithContext(context.Background())
}

func (i OsProfileArgs) ToOsProfilePtrOutputWithContext(ctx context.Context) OsProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OsProfileOutput).ToOsProfilePtrOutputWithContext(ctx)
}

// OsProfilePtrInput is an input type that accepts OsProfileArgs, OsProfilePtr and OsProfilePtrOutput values.
// You can construct a concrete instance of `OsProfilePtrInput` via:
//
//	        OsProfileArgs{...}
//
//	or:
//
//	        nil
type OsProfilePtrInput interface {
	pulumi.Input

	ToOsProfilePtrOutput() OsProfilePtrOutput
	ToOsProfilePtrOutputWithContext(context.Context) OsProfilePtrOutput
}

type osProfilePtrType OsProfileArgs

func OsProfilePtr(v *OsProfileArgs) OsProfilePtrInput {
	return (*osProfilePtrType)(v)
}

func (*osProfilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OsProfile)(nil)).Elem()
}

func (i *osProfilePtrType) ToOsProfilePtrOutput() OsProfilePtrOutput {
	return i.ToOsProfilePtrOutputWithContext(context.Background())
}

func (i *osProfilePtrType) ToOsProfilePtrOutputWithContext(ctx context.Context) OsProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OsProfilePtrOutput)
}

// The OS profile of the machines in the pool.
type OsProfileOutput struct{ *pulumi.OutputState }

func (OsProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OsProfile)(nil)).Elem()
}

func (o OsProfileOutput) ToOsProfileOutput() OsProfileOutput {
	return o
}

func (o OsProfileOutput) ToOsProfileOutputWithContext(ctx context.Context) OsProfileOutput {
	return o
}

func (o OsProfileOutput) ToOsProfilePtrOutput() OsProfilePtrOutput {
	return o.ToOsProfilePtrOutputWithContext(context.Background())
}

func (o OsProfileOutput) ToOsProfilePtrOutputWithContext(ctx context.Context) OsProfilePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OsProfile) *OsProfile {
		return &v
	}).(OsProfilePtrOutput)
}

// Determines how the service should be run. By default, this will be set to Service.
func (o OsProfileOutput) LogonType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OsProfile) *string { return v.LogonType }).(pulumi.StringPtrOutput)
}

// The secret management settings of the machines in the pool.
func (o OsProfileOutput) SecretsManagementSettings() SecretsManagementSettingsPtrOutput {
	return o.ApplyT(func(v OsProfile) *SecretsManagementSettings { return v.SecretsManagementSettings }).(SecretsManagementSettingsPtrOutput)
}

type OsProfilePtrOutput struct{ *pulumi.OutputState }

func (OsProfilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OsProfile)(nil)).Elem()
}

func (o OsProfilePtrOutput) ToOsProfilePtrOutput() OsProfilePtrOutput {
	return o
}

func (o OsProfilePtrOutput) ToOsProfilePtrOutputWithContext(ctx context.Context) OsProfilePtrOutput {
	return o
}

func (o OsProfilePtrOutput) Elem() OsProfileOutput {
	return o.ApplyT(func(v *OsProfile) OsProfile {
		if v != nil {
			return *v
		}
		var ret OsProfile
		return ret
	}).(OsProfileOutput)
}

// Determines how the service should be run. By default, this will be set to Service.
func (o OsProfilePtrOutput) LogonType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OsProfile) *string {
		if v == nil {
			return nil
		}
		return v.LogonType
	}).(pulumi.StringPtrOutput)
}

// The secret management settings of the machines in the pool.
func (o OsProfilePtrOutput) SecretsManagementSettings() SecretsManagementSettingsPtrOutput {
	return o.ApplyT(func(v *OsProfile) *SecretsManagementSettings {
		if v == nil {
			return nil
		}
		return v.SecretsManagementSettings
	}).(SecretsManagementSettingsPtrOutput)
}

// The OS profile of the machines in the pool.
type OsProfileResponse struct {
	// Determines how the service should be run. By default, this will be set to Service.
	LogonType *string `pulumi:"logonType"`
	// The secret management settings of the machines in the pool.
	SecretsManagementSettings *SecretsManagementSettingsResponse `pulumi:"secretsManagementSettings"`
}

// The OS profile of the machines in the pool.
type OsProfileResponseOutput struct{ *pulumi.OutputState }

func (OsProfileResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OsProfileResponse)(nil)).Elem()
}

func (o OsProfileResponseOutput) ToOsProfileResponseOutput() OsProfileResponseOutput {
	return o
}

func (o OsProfileResponseOutput) ToOsProfileResponseOutputWithContext(ctx context.Context) OsProfileResponseOutput {
	return o
}

// Determines how the service should be run. By default, this will be set to Service.
func (o OsProfileResponseOutput) LogonType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OsProfileResponse) *string { return v.LogonType }).(pulumi.StringPtrOutput)
}

// The secret management settings of the machines in the pool.
func (o OsProfileResponseOutput) SecretsManagementSettings() SecretsManagementSettingsResponsePtrOutput {
	return o.ApplyT(func(v OsProfileResponse) *SecretsManagementSettingsResponse { return v.SecretsManagementSettings }).(SecretsManagementSettingsResponsePtrOutput)
}

type OsProfileResponsePtrOutput struct{ *pulumi.OutputState }

func (OsProfileResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OsProfileResponse)(nil)).Elem()
}

func (o OsProfileResponsePtrOutput) ToOsProfileResponsePtrOutput() OsProfileResponsePtrOutput {
	return o
}

func (o OsProfileResponsePtrOutput) ToOsProfileResponsePtrOutputWithContext(ctx context.Context) OsProfileResponsePtrOutput {
	return o
}

func (o OsProfileResponsePtrOutput) Elem() OsProfileResponseOutput {
	return o.ApplyT(func(v *OsProfileResponse) OsProfileResponse {
		if v != nil {
			return *v
		}
		var ret OsProfileResponse
		return ret
	}).(OsProfileResponseOutput)
}

// Determines how the service should be run. By default, this will be set to Service.
func (o OsProfileResponsePtrOutput) LogonType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OsProfileResponse) *string {
		if v == nil {
			return nil
		}
		return v.LogonType
	}).(pulumi.StringPtrOutput)
}

// The secret management settings of the machines in the pool.
func (o OsProfileResponsePtrOutput) SecretsManagementSettings() SecretsManagementSettingsResponsePtrOutput {
	return o.ApplyT(func(v *OsProfileResponse) *SecretsManagementSettingsResponse {
		if v == nil {
			return nil
		}
		return v.SecretsManagementSettings
	}).(SecretsManagementSettingsResponsePtrOutput)
}

// The VM image of the machines in the pool.
type PoolImage struct {
	// List of aliases to reference the image by.
	Aliases []string `pulumi:"aliases"`
	// The percentage of the buffer to be allocated to this image.
	Buffer *string `pulumi:"buffer"`
	// The resource id of the image.
	ResourceId *string `pulumi:"resourceId"`
	// The image to use from a well-known set of images made available to customers.
	WellKnownImageName *string `pulumi:"wellKnownImageName"`
}

// Defaults sets the appropriate defaults for PoolImage
func (val *PoolImage) Defaults() *PoolImage {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Buffer == nil {
		buffer_ := "*"
		tmp.Buffer = &buffer_
	}
	return &tmp
}

// PoolImageInput is an input type that accepts PoolImageArgs and PoolImageOutput values.
// You can construct a concrete instance of `PoolImageInput` via:
//
//	PoolImageArgs{...}
type PoolImageInput interface {
	pulumi.Input

	ToPoolImageOutput() PoolImageOutput
	ToPoolImageOutputWithContext(context.Context) PoolImageOutput
}

// The VM image of the machines in the pool.
type PoolImageArgs struct {
	// List of aliases to reference the image by.
	Aliases pulumi.StringArrayInput `pulumi:"aliases"`
	// The percentage of the buffer to be allocated to this image.
	Buffer pulumi.StringPtrInput `pulumi:"buffer"`
	// The resource id of the image.
	ResourceId pulumi.StringPtrInput `pulumi:"resourceId"`
	// The image to use from a well-known set of images made available to customers.
	WellKnownImageName pulumi.StringPtrInput `pulumi:"wellKnownImageName"`
}

// Defaults sets the appropriate defaults for PoolImageArgs
func (val *PoolImageArgs) Defaults() *PoolImageArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Buffer == nil {
		tmp.Buffer = pulumi.StringPtr("*")
	}
	return &tmp
}
func (PoolImageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolImage)(nil)).Elem()
}

func (i PoolImageArgs) ToPoolImageOutput() PoolImageOutput {
	return i.ToPoolImageOutputWithContext(context.Background())
}

func (i PoolImageArgs) ToPoolImageOutputWithContext(ctx context.Context) PoolImageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolImageOutput)
}

// PoolImageArrayInput is an input type that accepts PoolImageArray and PoolImageArrayOutput values.
// You can construct a concrete instance of `PoolImageArrayInput` via:
//
//	PoolImageArray{ PoolImageArgs{...} }
type PoolImageArrayInput interface {
	pulumi.Input

	ToPoolImageArrayOutput() PoolImageArrayOutput
	ToPoolImageArrayOutputWithContext(context.Context) PoolImageArrayOutput
}

type PoolImageArray []PoolImageInput

func (PoolImageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PoolImage)(nil)).Elem()
}

func (i PoolImageArray) ToPoolImageArrayOutput() PoolImageArrayOutput {
	return i.ToPoolImageArrayOutputWithContext(context.Background())
}

func (i PoolImageArray) ToPoolImageArrayOutputWithContext(ctx context.Context) PoolImageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolImageArrayOutput)
}

// The VM image of the machines in the pool.
type PoolImageOutput struct{ *pulumi.OutputState }

func (PoolImageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolImage)(nil)).Elem()
}

func (o PoolImageOutput) ToPoolImageOutput() PoolImageOutput {
	return o
}

func (o PoolImageOutput) ToPoolImageOutputWithContext(ctx context.Context) PoolImageOutput {
	return o
}

// List of aliases to reference the image by.
func (o PoolImageOutput) Aliases() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PoolImage) []string { return v.Aliases }).(pulumi.StringArrayOutput)
}

// The percentage of the buffer to be allocated to this image.
func (o PoolImageOutput) Buffer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolImage) *string { return v.Buffer }).(pulumi.StringPtrOutput)
}

// The resource id of the image.
func (o PoolImageOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolImage) *string { return v.ResourceId }).(pulumi.StringPtrOutput)
}

// The image to use from a well-known set of images made available to customers.
func (o PoolImageOutput) WellKnownImageName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolImage) *string { return v.WellKnownImageName }).(pulumi.StringPtrOutput)
}

type PoolImageArrayOutput struct{ *pulumi.OutputState }

func (PoolImageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PoolImage)(nil)).Elem()
}

func (o PoolImageArrayOutput) ToPoolImageArrayOutput() PoolImageArrayOutput {
	return o
}

func (o PoolImageArrayOutput) ToPoolImageArrayOutputWithContext(ctx context.Context) PoolImageArrayOutput {
	return o
}

func (o PoolImageArrayOutput) Index(i pulumi.IntInput) PoolImageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PoolImage {
		return vs[0].([]PoolImage)[vs[1].(int)]
	}).(PoolImageOutput)
}

// The VM image of the machines in the pool.
type PoolImageResponse struct {
	// List of aliases to reference the image by.
	Aliases []string `pulumi:"aliases"`
	// The percentage of the buffer to be allocated to this image.
	Buffer *string `pulumi:"buffer"`
	// The resource id of the image.
	ResourceId *string `pulumi:"resourceId"`
	// The image to use from a well-known set of images made available to customers.
	WellKnownImageName *string `pulumi:"wellKnownImageName"`
}

// Defaults sets the appropriate defaults for PoolImageResponse
func (val *PoolImageResponse) Defaults() *PoolImageResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Buffer == nil {
		buffer_ := "*"
		tmp.Buffer = &buffer_
	}
	return &tmp
}

// The VM image of the machines in the pool.
type PoolImageResponseOutput struct{ *pulumi.OutputState }

func (PoolImageResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolImageResponse)(nil)).Elem()
}

func (o PoolImageResponseOutput) ToPoolImageResponseOutput() PoolImageResponseOutput {
	return o
}

func (o PoolImageResponseOutput) ToPoolImageResponseOutputWithContext(ctx context.Context) PoolImageResponseOutput {
	return o
}

// List of aliases to reference the image by.
func (o PoolImageResponseOutput) Aliases() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PoolImageResponse) []string { return v.Aliases }).(pulumi.StringArrayOutput)
}

// The percentage of the buffer to be allocated to this image.
func (o PoolImageResponseOutput) Buffer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolImageResponse) *string { return v.Buffer }).(pulumi.StringPtrOutput)
}

// The resource id of the image.
func (o PoolImageResponseOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolImageResponse) *string { return v.ResourceId }).(pulumi.StringPtrOutput)
}

// The image to use from a well-known set of images made available to customers.
func (o PoolImageResponseOutput) WellKnownImageName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolImageResponse) *string { return v.WellKnownImageName }).(pulumi.StringPtrOutput)
}

type PoolImageResponseArrayOutput struct{ *pulumi.OutputState }

func (PoolImageResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PoolImageResponse)(nil)).Elem()
}

func (o PoolImageResponseArrayOutput) ToPoolImageResponseArrayOutput() PoolImageResponseArrayOutput {
	return o
}

func (o PoolImageResponseArrayOutput) ToPoolImageResponseArrayOutputWithContext(ctx context.Context) PoolImageResponseArrayOutput {
	return o
}

func (o PoolImageResponseArrayOutput) Index(i pulumi.IntInput) PoolImageResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PoolImageResponse {
		return vs[0].([]PoolImageResponse)[vs[1].(int)]
	}).(PoolImageResponseOutput)
}

// The secret management settings of the machines in the pool.
type SecretsManagementSettings struct {
	// Where to store certificates on the machine.
	CertificateStoreLocation *string `pulumi:"certificateStoreLocation"`
	// Defines if the key of the certificates should be exportable.
	KeyExportable bool `pulumi:"keyExportable"`
	// The list of certificates to install on all machines in the pool.
	ObservedCertificates []string `pulumi:"observedCertificates"`
}

// SecretsManagementSettingsInput is an input type that accepts SecretsManagementSettingsArgs and SecretsManagementSettingsOutput values.
// You can construct a concrete instance of `SecretsManagementSettingsInput` via:
//
//	SecretsManagementSettingsArgs{...}
type SecretsManagementSettingsInput interface {
	pulumi.Input

	ToSecretsManagementSettingsOutput() SecretsManagementSettingsOutput
	ToSecretsManagementSettingsOutputWithContext(context.Context) SecretsManagementSettingsOutput
}

// The secret management settings of the machines in the pool.
type SecretsManagementSettingsArgs struct {
	// Where to store certificates on the machine.
	CertificateStoreLocation pulumi.StringPtrInput `pulumi:"certificateStoreLocation"`
	// Defines if the key of the certificates should be exportable.
	KeyExportable pulumi.BoolInput `pulumi:"keyExportable"`
	// The list of certificates to install on all machines in the pool.
	ObservedCertificates pulumi.StringArrayInput `pulumi:"observedCertificates"`
}

func (SecretsManagementSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretsManagementSettings)(nil)).Elem()
}

func (i SecretsManagementSettingsArgs) ToSecretsManagementSettingsOutput() SecretsManagementSettingsOutput {
	return i.ToSecretsManagementSettingsOutputWithContext(context.Background())
}

func (i SecretsManagementSettingsArgs) ToSecretsManagementSettingsOutputWithContext(ctx context.Context) SecretsManagementSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretsManagementSettingsOutput)
}

func (i SecretsManagementSettingsArgs) ToSecretsManagementSettingsPtrOutput() SecretsManagementSettingsPtrOutput {
	return i.ToSecretsManagementSettingsPtrOutputWithContext(context.Background())
}

func (i SecretsManagementSettingsArgs) ToSecretsManagementSettingsPtrOutputWithContext(ctx context.Context) SecretsManagementSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretsManagementSettingsOutput).ToSecretsManagementSettingsPtrOutputWithContext(ctx)
}

// SecretsManagementSettingsPtrInput is an input type that accepts SecretsManagementSettingsArgs, SecretsManagementSettingsPtr and SecretsManagementSettingsPtrOutput values.
// You can construct a concrete instance of `SecretsManagementSettingsPtrInput` via:
//
//	        SecretsManagementSettingsArgs{...}
//
//	or:
//
//	        nil
type SecretsManagementSettingsPtrInput interface {
	pulumi.Input

	ToSecretsManagementSettingsPtrOutput() SecretsManagementSettingsPtrOutput
	ToSecretsManagementSettingsPtrOutputWithContext(context.Context) SecretsManagementSettingsPtrOutput
}

type secretsManagementSettingsPtrType SecretsManagementSettingsArgs

func SecretsManagementSettingsPtr(v *SecretsManagementSettingsArgs) SecretsManagementSettingsPtrInput {
	return (*secretsManagementSettingsPtrType)(v)
}

func (*secretsManagementSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretsManagementSettings)(nil)).Elem()
}

func (i *secretsManagementSettingsPtrType) ToSecretsManagementSettingsPtrOutput() SecretsManagementSettingsPtrOutput {
	return i.ToSecretsManagementSettingsPtrOutputWithContext(context.Background())
}

func (i *secretsManagementSettingsPtrType) ToSecretsManagementSettingsPtrOutputWithContext(ctx context.Context) SecretsManagementSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretsManagementSettingsPtrOutput)
}

// The secret management settings of the machines in the pool.
type SecretsManagementSettingsOutput struct{ *pulumi.OutputState }

func (SecretsManagementSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretsManagementSettings)(nil)).Elem()
}

func (o SecretsManagementSettingsOutput) ToSecretsManagementSettingsOutput() SecretsManagementSettingsOutput {
	return o
}

func (o SecretsManagementSettingsOutput) ToSecretsManagementSettingsOutputWithContext(ctx context.Context) SecretsManagementSettingsOutput {
	return o
}

func (o SecretsManagementSettingsOutput) ToSecretsManagementSettingsPtrOutput() SecretsManagementSettingsPtrOutput {
	return o.ToSecretsManagementSettingsPtrOutputWithContext(context.Background())
}

func (o SecretsManagementSettingsOutput) ToSecretsManagementSettingsPtrOutputWithContext(ctx context.Context) SecretsManagementSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretsManagementSettings) *SecretsManagementSettings {
		return &v
	}).(SecretsManagementSettingsPtrOutput)
}

// Where to store certificates on the machine.
func (o SecretsManagementSettingsOutput) CertificateStoreLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretsManagementSettings) *string { return v.CertificateStoreLocation }).(pulumi.StringPtrOutput)
}

// Defines if the key of the certificates should be exportable.
func (o SecretsManagementSettingsOutput) KeyExportable() pulumi.BoolOutput {
	return o.ApplyT(func(v SecretsManagementSettings) bool { return v.KeyExportable }).(pulumi.BoolOutput)
}

// The list of certificates to install on all machines in the pool.
func (o SecretsManagementSettingsOutput) ObservedCertificates() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecretsManagementSettings) []string { return v.ObservedCertificates }).(pulumi.StringArrayOutput)
}

type SecretsManagementSettingsPtrOutput struct{ *pulumi.OutputState }

func (SecretsManagementSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretsManagementSettings)(nil)).Elem()
}

func (o SecretsManagementSettingsPtrOutput) ToSecretsManagementSettingsPtrOutput() SecretsManagementSettingsPtrOutput {
	return o
}

func (o SecretsManagementSettingsPtrOutput) ToSecretsManagementSettingsPtrOutputWithContext(ctx context.Context) SecretsManagementSettingsPtrOutput {
	return o
}

func (o SecretsManagementSettingsPtrOutput) Elem() SecretsManagementSettingsOutput {
	return o.ApplyT(func(v *SecretsManagementSettings) SecretsManagementSettings {
		if v != nil {
			return *v
		}
		var ret SecretsManagementSettings
		return ret
	}).(SecretsManagementSettingsOutput)
}

// Where to store certificates on the machine.
func (o SecretsManagementSettingsPtrOutput) CertificateStoreLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretsManagementSettings) *string {
		if v == nil {
			return nil
		}
		return v.CertificateStoreLocation
	}).(pulumi.StringPtrOutput)
}

// Defines if the key of the certificates should be exportable.
func (o SecretsManagementSettingsPtrOutput) KeyExportable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SecretsManagementSettings) *bool {
		if v == nil {
			return nil
		}
		return &v.KeyExportable
	}).(pulumi.BoolPtrOutput)
}

// The list of certificates to install on all machines in the pool.
func (o SecretsManagementSettingsPtrOutput) ObservedCertificates() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SecretsManagementSettings) []string {
		if v == nil {
			return nil
		}
		return v.ObservedCertificates
	}).(pulumi.StringArrayOutput)
}

// The secret management settings of the machines in the pool.
type SecretsManagementSettingsResponse struct {
	// Where to store certificates on the machine.
	CertificateStoreLocation *string `pulumi:"certificateStoreLocation"`
	// Defines if the key of the certificates should be exportable.
	KeyExportable bool `pulumi:"keyExportable"`
	// The list of certificates to install on all machines in the pool.
	ObservedCertificates []string `pulumi:"observedCertificates"`
}

// The secret management settings of the machines in the pool.
type SecretsManagementSettingsResponseOutput struct{ *pulumi.OutputState }

func (SecretsManagementSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretsManagementSettingsResponse)(nil)).Elem()
}

func (o SecretsManagementSettingsResponseOutput) ToSecretsManagementSettingsResponseOutput() SecretsManagementSettingsResponseOutput {
	return o
}

func (o SecretsManagementSettingsResponseOutput) ToSecretsManagementSettingsResponseOutputWithContext(ctx context.Context) SecretsManagementSettingsResponseOutput {
	return o
}

// Where to store certificates on the machine.
func (o SecretsManagementSettingsResponseOutput) CertificateStoreLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretsManagementSettingsResponse) *string { return v.CertificateStoreLocation }).(pulumi.StringPtrOutput)
}

// Defines if the key of the certificates should be exportable.
func (o SecretsManagementSettingsResponseOutput) KeyExportable() pulumi.BoolOutput {
	return o.ApplyT(func(v SecretsManagementSettingsResponse) bool { return v.KeyExportable }).(pulumi.BoolOutput)
}

// The list of certificates to install on all machines in the pool.
func (o SecretsManagementSettingsResponseOutput) ObservedCertificates() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecretsManagementSettingsResponse) []string { return v.ObservedCertificates }).(pulumi.StringArrayOutput)
}

type SecretsManagementSettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (SecretsManagementSettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretsManagementSettingsResponse)(nil)).Elem()
}

func (o SecretsManagementSettingsResponsePtrOutput) ToSecretsManagementSettingsResponsePtrOutput() SecretsManagementSettingsResponsePtrOutput {
	return o
}

func (o SecretsManagementSettingsResponsePtrOutput) ToSecretsManagementSettingsResponsePtrOutputWithContext(ctx context.Context) SecretsManagementSettingsResponsePtrOutput {
	return o
}

func (o SecretsManagementSettingsResponsePtrOutput) Elem() SecretsManagementSettingsResponseOutput {
	return o.ApplyT(func(v *SecretsManagementSettingsResponse) SecretsManagementSettingsResponse {
		if v != nil {
			return *v
		}
		var ret SecretsManagementSettingsResponse
		return ret
	}).(SecretsManagementSettingsResponseOutput)
}

// Where to store certificates on the machine.
func (o SecretsManagementSettingsResponsePtrOutput) CertificateStoreLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretsManagementSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.CertificateStoreLocation
	}).(pulumi.StringPtrOutput)
}

// Defines if the key of the certificates should be exportable.
func (o SecretsManagementSettingsResponsePtrOutput) KeyExportable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SecretsManagementSettingsResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.KeyExportable
	}).(pulumi.BoolPtrOutput)
}

// The list of certificates to install on all machines in the pool.
func (o SecretsManagementSettingsResponsePtrOutput) ObservedCertificates() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SecretsManagementSettingsResponse) []string {
		if v == nil {
			return nil
		}
		return v.ObservedCertificates
	}).(pulumi.StringArrayOutput)
}

// Stateful profile meaning that the machines will be returned to the pool after running a job.
type Stateful struct {
	// How long should the machine be kept around after it ran a workload when there are no stand-by agents. The maximum is one week.
	GracePeriodTimeSpan *string `pulumi:"gracePeriodTimeSpan"`
	// Discriminator property for AgentProfile.
	// Expected value is 'Stateful'.
	Kind string `pulumi:"kind"`
	// How long should stateful machines be kept around. The maximum is one week.
	MaxAgentLifetime *string `pulumi:"maxAgentLifetime"`
	// Defines pool buffer/stand-by agents.
	ResourcePredictions interface{} `pulumi:"resourcePredictions"`
	// Defines how the pool buffer/stand-by agents is provided.
	ResourcePredictionsProfile interface{} `pulumi:"resourcePredictionsProfile"`
}

// StatefulInput is an input type that accepts StatefulArgs and StatefulOutput values.
// You can construct a concrete instance of `StatefulInput` via:
//
//	StatefulArgs{...}
type StatefulInput interface {
	pulumi.Input

	ToStatefulOutput() StatefulOutput
	ToStatefulOutputWithContext(context.Context) StatefulOutput
}

// Stateful profile meaning that the machines will be returned to the pool after running a job.
type StatefulArgs struct {
	// How long should the machine be kept around after it ran a workload when there are no stand-by agents. The maximum is one week.
	GracePeriodTimeSpan pulumi.StringPtrInput `pulumi:"gracePeriodTimeSpan"`
	// Discriminator property for AgentProfile.
	// Expected value is 'Stateful'.
	Kind pulumi.StringInput `pulumi:"kind"`
	// How long should stateful machines be kept around. The maximum is one week.
	MaxAgentLifetime pulumi.StringPtrInput `pulumi:"maxAgentLifetime"`
	// Defines pool buffer/stand-by agents.
	ResourcePredictions pulumi.Input `pulumi:"resourcePredictions"`
	// Defines how the pool buffer/stand-by agents is provided.
	ResourcePredictionsProfile pulumi.Input `pulumi:"resourcePredictionsProfile"`
}

func (StatefulArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Stateful)(nil)).Elem()
}

func (i StatefulArgs) ToStatefulOutput() StatefulOutput {
	return i.ToStatefulOutputWithContext(context.Background())
}

func (i StatefulArgs) ToStatefulOutputWithContext(ctx context.Context) StatefulOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StatefulOutput)
}

// Stateful profile meaning that the machines will be returned to the pool after running a job.
type StatefulOutput struct{ *pulumi.OutputState }

func (StatefulOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Stateful)(nil)).Elem()
}

func (o StatefulOutput) ToStatefulOutput() StatefulOutput {
	return o
}

func (o StatefulOutput) ToStatefulOutputWithContext(ctx context.Context) StatefulOutput {
	return o
}

// How long should the machine be kept around after it ran a workload when there are no stand-by agents. The maximum is one week.
func (o StatefulOutput) GracePeriodTimeSpan() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Stateful) *string { return v.GracePeriodTimeSpan }).(pulumi.StringPtrOutput)
}

// Discriminator property for AgentProfile.
// Expected value is 'Stateful'.
func (o StatefulOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v Stateful) string { return v.Kind }).(pulumi.StringOutput)
}

// How long should stateful machines be kept around. The maximum is one week.
func (o StatefulOutput) MaxAgentLifetime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Stateful) *string { return v.MaxAgentLifetime }).(pulumi.StringPtrOutput)
}

// Defines pool buffer/stand-by agents.
func (o StatefulOutput) ResourcePredictions() pulumi.AnyOutput {
	return o.ApplyT(func(v Stateful) interface{} { return v.ResourcePredictions }).(pulumi.AnyOutput)
}

// Defines how the pool buffer/stand-by agents is provided.
func (o StatefulOutput) ResourcePredictionsProfile() pulumi.AnyOutput {
	return o.ApplyT(func(v Stateful) interface{} { return v.ResourcePredictionsProfile }).(pulumi.AnyOutput)
}

// Stateful profile meaning that the machines will be returned to the pool after running a job.
type StatefulResponse struct {
	// How long should the machine be kept around after it ran a workload when there are no stand-by agents. The maximum is one week.
	GracePeriodTimeSpan *string `pulumi:"gracePeriodTimeSpan"`
	// Discriminator property for AgentProfile.
	// Expected value is 'Stateful'.
	Kind string `pulumi:"kind"`
	// How long should stateful machines be kept around. The maximum is one week.
	MaxAgentLifetime *string `pulumi:"maxAgentLifetime"`
	// Defines pool buffer/stand-by agents.
	ResourcePredictions interface{} `pulumi:"resourcePredictions"`
	// Defines how the pool buffer/stand-by agents is provided.
	ResourcePredictionsProfile interface{} `pulumi:"resourcePredictionsProfile"`
}

// Stateful profile meaning that the machines will be returned to the pool after running a job.
type StatefulResponseOutput struct{ *pulumi.OutputState }

func (StatefulResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StatefulResponse)(nil)).Elem()
}

func (o StatefulResponseOutput) ToStatefulResponseOutput() StatefulResponseOutput {
	return o
}

func (o StatefulResponseOutput) ToStatefulResponseOutputWithContext(ctx context.Context) StatefulResponseOutput {
	return o
}

// How long should the machine be kept around after it ran a workload when there are no stand-by agents. The maximum is one week.
func (o StatefulResponseOutput) GracePeriodTimeSpan() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StatefulResponse) *string { return v.GracePeriodTimeSpan }).(pulumi.StringPtrOutput)
}

// Discriminator property for AgentProfile.
// Expected value is 'Stateful'.
func (o StatefulResponseOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v StatefulResponse) string { return v.Kind }).(pulumi.StringOutput)
}

// How long should stateful machines be kept around. The maximum is one week.
func (o StatefulResponseOutput) MaxAgentLifetime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StatefulResponse) *string { return v.MaxAgentLifetime }).(pulumi.StringPtrOutput)
}

// Defines pool buffer/stand-by agents.
func (o StatefulResponseOutput) ResourcePredictions() pulumi.AnyOutput {
	return o.ApplyT(func(v StatefulResponse) interface{} { return v.ResourcePredictions }).(pulumi.AnyOutput)
}

// Defines how the pool buffer/stand-by agents is provided.
func (o StatefulResponseOutput) ResourcePredictionsProfile() pulumi.AnyOutput {
	return o.ApplyT(func(v StatefulResponse) interface{} { return v.ResourcePredictionsProfile }).(pulumi.AnyOutput)
}

// Stateless profile meaning that the machines will be cleaned up after running a job.
type StatelessAgentProfile struct {
	// Discriminator property for AgentProfile.
	// Expected value is 'Stateless'.
	Kind string `pulumi:"kind"`
	// Defines pool buffer/stand-by agents.
	ResourcePredictions interface{} `pulumi:"resourcePredictions"`
	// Defines how the pool buffer/stand-by agents is provided.
	ResourcePredictionsProfile interface{} `pulumi:"resourcePredictionsProfile"`
}

// StatelessAgentProfileInput is an input type that accepts StatelessAgentProfileArgs and StatelessAgentProfileOutput values.
// You can construct a concrete instance of `StatelessAgentProfileInput` via:
//
//	StatelessAgentProfileArgs{...}
type StatelessAgentProfileInput interface {
	pulumi.Input

	ToStatelessAgentProfileOutput() StatelessAgentProfileOutput
	ToStatelessAgentProfileOutputWithContext(context.Context) StatelessAgentProfileOutput
}

// Stateless profile meaning that the machines will be cleaned up after running a job.
type StatelessAgentProfileArgs struct {
	// Discriminator property for AgentProfile.
	// Expected value is 'Stateless'.
	Kind pulumi.StringInput `pulumi:"kind"`
	// Defines pool buffer/stand-by agents.
	ResourcePredictions pulumi.Input `pulumi:"resourcePredictions"`
	// Defines how the pool buffer/stand-by agents is provided.
	ResourcePredictionsProfile pulumi.Input `pulumi:"resourcePredictionsProfile"`
}

func (StatelessAgentProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StatelessAgentProfile)(nil)).Elem()
}

func (i StatelessAgentProfileArgs) ToStatelessAgentProfileOutput() StatelessAgentProfileOutput {
	return i.ToStatelessAgentProfileOutputWithContext(context.Background())
}

func (i StatelessAgentProfileArgs) ToStatelessAgentProfileOutputWithContext(ctx context.Context) StatelessAgentProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StatelessAgentProfileOutput)
}

// Stateless profile meaning that the machines will be cleaned up after running a job.
type StatelessAgentProfileOutput struct{ *pulumi.OutputState }

func (StatelessAgentProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StatelessAgentProfile)(nil)).Elem()
}

func (o StatelessAgentProfileOutput) ToStatelessAgentProfileOutput() StatelessAgentProfileOutput {
	return o
}

func (o StatelessAgentProfileOutput) ToStatelessAgentProfileOutputWithContext(ctx context.Context) StatelessAgentProfileOutput {
	return o
}

// Discriminator property for AgentProfile.
// Expected value is 'Stateless'.
func (o StatelessAgentProfileOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v StatelessAgentProfile) string { return v.Kind }).(pulumi.StringOutput)
}

// Defines pool buffer/stand-by agents.
func (o StatelessAgentProfileOutput) ResourcePredictions() pulumi.AnyOutput {
	return o.ApplyT(func(v StatelessAgentProfile) interface{} { return v.ResourcePredictions }).(pulumi.AnyOutput)
}

// Defines how the pool buffer/stand-by agents is provided.
func (o StatelessAgentProfileOutput) ResourcePredictionsProfile() pulumi.AnyOutput {
	return o.ApplyT(func(v StatelessAgentProfile) interface{} { return v.ResourcePredictionsProfile }).(pulumi.AnyOutput)
}

// Stateless profile meaning that the machines will be cleaned up after running a job.
type StatelessAgentProfileResponse struct {
	// Discriminator property for AgentProfile.
	// Expected value is 'Stateless'.
	Kind string `pulumi:"kind"`
	// Defines pool buffer/stand-by agents.
	ResourcePredictions interface{} `pulumi:"resourcePredictions"`
	// Defines how the pool buffer/stand-by agents is provided.
	ResourcePredictionsProfile interface{} `pulumi:"resourcePredictionsProfile"`
}

// Stateless profile meaning that the machines will be cleaned up after running a job.
type StatelessAgentProfileResponseOutput struct{ *pulumi.OutputState }

func (StatelessAgentProfileResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StatelessAgentProfileResponse)(nil)).Elem()
}

func (o StatelessAgentProfileResponseOutput) ToStatelessAgentProfileResponseOutput() StatelessAgentProfileResponseOutput {
	return o
}

func (o StatelessAgentProfileResponseOutput) ToStatelessAgentProfileResponseOutputWithContext(ctx context.Context) StatelessAgentProfileResponseOutput {
	return o
}

// Discriminator property for AgentProfile.
// Expected value is 'Stateless'.
func (o StatelessAgentProfileResponseOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v StatelessAgentProfileResponse) string { return v.Kind }).(pulumi.StringOutput)
}

// Defines pool buffer/stand-by agents.
func (o StatelessAgentProfileResponseOutput) ResourcePredictions() pulumi.AnyOutput {
	return o.ApplyT(func(v StatelessAgentProfileResponse) interface{} { return v.ResourcePredictions }).(pulumi.AnyOutput)
}

// Defines how the pool buffer/stand-by agents is provided.
func (o StatelessAgentProfileResponseOutput) ResourcePredictionsProfile() pulumi.AnyOutput {
	return o.ApplyT(func(v StatelessAgentProfileResponse) interface{} { return v.ResourcePredictionsProfile }).(pulumi.AnyOutput)
}

// The storage profile of the VMSS.
type StorageProfile struct {
	// A list of empty data disks to attach.
	DataDisks []DataDisk `pulumi:"dataDisks"`
	// The Azure SKU name of the machines in the pool.
	OsDiskStorageAccountType *string `pulumi:"osDiskStorageAccountType"`
}

// StorageProfileInput is an input type that accepts StorageProfileArgs and StorageProfileOutput values.
// You can construct a concrete instance of `StorageProfileInput` via:
//
//	StorageProfileArgs{...}
type StorageProfileInput interface {
	pulumi.Input

	ToStorageProfileOutput() StorageProfileOutput
	ToStorageProfileOutputWithContext(context.Context) StorageProfileOutput
}

// The storage profile of the VMSS.
type StorageProfileArgs struct {
	// A list of empty data disks to attach.
	DataDisks DataDiskArrayInput `pulumi:"dataDisks"`
	// The Azure SKU name of the machines in the pool.
	OsDiskStorageAccountType pulumi.StringPtrInput `pulumi:"osDiskStorageAccountType"`
}

func (StorageProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageProfile)(nil)).Elem()
}

func (i StorageProfileArgs) ToStorageProfileOutput() StorageProfileOutput {
	return i.ToStorageProfileOutputWithContext(context.Background())
}

func (i StorageProfileArgs) ToStorageProfileOutputWithContext(ctx context.Context) StorageProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageProfileOutput)
}

func (i StorageProfileArgs) ToStorageProfilePtrOutput() StorageProfilePtrOutput {
	return i.ToStorageProfilePtrOutputWithContext(context.Background())
}

func (i StorageProfileArgs) ToStorageProfilePtrOutputWithContext(ctx context.Context) StorageProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageProfileOutput).ToStorageProfilePtrOutputWithContext(ctx)
}

// StorageProfilePtrInput is an input type that accepts StorageProfileArgs, StorageProfilePtr and StorageProfilePtrOutput values.
// You can construct a concrete instance of `StorageProfilePtrInput` via:
//
//	        StorageProfileArgs{...}
//
//	or:
//
//	        nil
type StorageProfilePtrInput interface {
	pulumi.Input

	ToStorageProfilePtrOutput() StorageProfilePtrOutput
	ToStorageProfilePtrOutputWithContext(context.Context) StorageProfilePtrOutput
}

type storageProfilePtrType StorageProfileArgs

func StorageProfilePtr(v *StorageProfileArgs) StorageProfilePtrInput {
	return (*storageProfilePtrType)(v)
}

func (*storageProfilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageProfile)(nil)).Elem()
}

func (i *storageProfilePtrType) ToStorageProfilePtrOutput() StorageProfilePtrOutput {
	return i.ToStorageProfilePtrOutputWithContext(context.Background())
}

func (i *storageProfilePtrType) ToStorageProfilePtrOutputWithContext(ctx context.Context) StorageProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageProfilePtrOutput)
}

// The storage profile of the VMSS.
type StorageProfileOutput struct{ *pulumi.OutputState }

func (StorageProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageProfile)(nil)).Elem()
}

func (o StorageProfileOutput) ToStorageProfileOutput() StorageProfileOutput {
	return o
}

func (o StorageProfileOutput) ToStorageProfileOutputWithContext(ctx context.Context) StorageProfileOutput {
	return o
}

func (o StorageProfileOutput) ToStorageProfilePtrOutput() StorageProfilePtrOutput {
	return o.ToStorageProfilePtrOutputWithContext(context.Background())
}

func (o StorageProfileOutput) ToStorageProfilePtrOutputWithContext(ctx context.Context) StorageProfilePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v StorageProfile) *StorageProfile {
		return &v
	}).(StorageProfilePtrOutput)
}

// A list of empty data disks to attach.
func (o StorageProfileOutput) DataDisks() DataDiskArrayOutput {
	return o.ApplyT(func(v StorageProfile) []DataDisk { return v.DataDisks }).(DataDiskArrayOutput)
}

// The Azure SKU name of the machines in the pool.
func (o StorageProfileOutput) OsDiskStorageAccountType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageProfile) *string { return v.OsDiskStorageAccountType }).(pulumi.StringPtrOutput)
}

type StorageProfilePtrOutput struct{ *pulumi.OutputState }

func (StorageProfilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageProfile)(nil)).Elem()
}

func (o StorageProfilePtrOutput) ToStorageProfilePtrOutput() StorageProfilePtrOutput {
	return o
}

func (o StorageProfilePtrOutput) ToStorageProfilePtrOutputWithContext(ctx context.Context) StorageProfilePtrOutput {
	return o
}

func (o StorageProfilePtrOutput) Elem() StorageProfileOutput {
	return o.ApplyT(func(v *StorageProfile) StorageProfile {
		if v != nil {
			return *v
		}
		var ret StorageProfile
		return ret
	}).(StorageProfileOutput)
}

// A list of empty data disks to attach.
func (o StorageProfilePtrOutput) DataDisks() DataDiskArrayOutput {
	return o.ApplyT(func(v *StorageProfile) []DataDisk {
		if v == nil {
			return nil
		}
		return v.DataDisks
	}).(DataDiskArrayOutput)
}

// The Azure SKU name of the machines in the pool.
func (o StorageProfilePtrOutput) OsDiskStorageAccountType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageProfile) *string {
		if v == nil {
			return nil
		}
		return v.OsDiskStorageAccountType
	}).(pulumi.StringPtrOutput)
}

// The storage profile of the VMSS.
type StorageProfileResponse struct {
	// A list of empty data disks to attach.
	DataDisks []DataDiskResponse `pulumi:"dataDisks"`
	// The Azure SKU name of the machines in the pool.
	OsDiskStorageAccountType *string `pulumi:"osDiskStorageAccountType"`
}

// The storage profile of the VMSS.
type StorageProfileResponseOutput struct{ *pulumi.OutputState }

func (StorageProfileResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageProfileResponse)(nil)).Elem()
}

func (o StorageProfileResponseOutput) ToStorageProfileResponseOutput() StorageProfileResponseOutput {
	return o
}

func (o StorageProfileResponseOutput) ToStorageProfileResponseOutputWithContext(ctx context.Context) StorageProfileResponseOutput {
	return o
}

// A list of empty data disks to attach.
func (o StorageProfileResponseOutput) DataDisks() DataDiskResponseArrayOutput {
	return o.ApplyT(func(v StorageProfileResponse) []DataDiskResponse { return v.DataDisks }).(DataDiskResponseArrayOutput)
}

// The Azure SKU name of the machines in the pool.
func (o StorageProfileResponseOutput) OsDiskStorageAccountType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageProfileResponse) *string { return v.OsDiskStorageAccountType }).(pulumi.StringPtrOutput)
}

type StorageProfileResponsePtrOutput struct{ *pulumi.OutputState }

func (StorageProfileResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageProfileResponse)(nil)).Elem()
}

func (o StorageProfileResponsePtrOutput) ToStorageProfileResponsePtrOutput() StorageProfileResponsePtrOutput {
	return o
}

func (o StorageProfileResponsePtrOutput) ToStorageProfileResponsePtrOutputWithContext(ctx context.Context) StorageProfileResponsePtrOutput {
	return o
}

func (o StorageProfileResponsePtrOutput) Elem() StorageProfileResponseOutput {
	return o.ApplyT(func(v *StorageProfileResponse) StorageProfileResponse {
		if v != nil {
			return *v
		}
		var ret StorageProfileResponse
		return ret
	}).(StorageProfileResponseOutput)
}

// A list of empty data disks to attach.
func (o StorageProfileResponsePtrOutput) DataDisks() DataDiskResponseArrayOutput {
	return o.ApplyT(func(v *StorageProfileResponse) []DataDiskResponse {
		if v == nil {
			return nil
		}
		return v.DataDisks
	}).(DataDiskResponseArrayOutput)
}

// The Azure SKU name of the machines in the pool.
func (o StorageProfileResponsePtrOutput) OsDiskStorageAccountType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageProfileResponse) *string {
		if v == nil {
			return nil
		}
		return v.OsDiskStorageAccountType
	}).(pulumi.StringPtrOutput)
}

// Metadata pertaining to creation and last modification of the resource.
type SystemDataResponse struct {
	// The timestamp of resource creation (UTC).
	CreatedAt *string `pulumi:"createdAt"`
	// The identity that created the resource.
	CreatedBy *string `pulumi:"createdBy"`
	// The type of identity that created the resource.
	CreatedByType *string `pulumi:"createdByType"`
	// The timestamp of resource last modification (UTC)
	LastModifiedAt *string `pulumi:"lastModifiedAt"`
	// The identity that last modified the resource.
	LastModifiedBy *string `pulumi:"lastModifiedBy"`
	// The type of identity that last modified the resource.
	LastModifiedByType *string `pulumi:"lastModifiedByType"`
}

// Metadata pertaining to creation and last modification of the resource.
type SystemDataResponseOutput struct{ *pulumi.OutputState }

func (SystemDataResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemDataResponse)(nil)).Elem()
}

func (o SystemDataResponseOutput) ToSystemDataResponseOutput() SystemDataResponseOutput {
	return o
}

func (o SystemDataResponseOutput) ToSystemDataResponseOutputWithContext(ctx context.Context) SystemDataResponseOutput {
	return o
}

// The timestamp of resource creation (UTC).
func (o SystemDataResponseOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedAt }).(pulumi.StringPtrOutput)
}

// The identity that created the resource.
func (o SystemDataResponseOutput) CreatedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedBy }).(pulumi.StringPtrOutput)
}

// The type of identity that created the resource.
func (o SystemDataResponseOutput) CreatedByType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedByType }).(pulumi.StringPtrOutput)
}

// The timestamp of resource last modification (UTC)
func (o SystemDataResponseOutput) LastModifiedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedAt }).(pulumi.StringPtrOutput)
}

// The identity that last modified the resource.
func (o SystemDataResponseOutput) LastModifiedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedBy }).(pulumi.StringPtrOutput)
}

// The type of identity that last modified the resource.
func (o SystemDataResponseOutput) LastModifiedByType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedByType }).(pulumi.StringPtrOutput)
}

// User assigned identity properties
type UserAssignedIdentityResponse struct {
	// The client ID of the assigned identity.
	ClientId string `pulumi:"clientId"`
	// The principal ID of the assigned identity.
	PrincipalId string `pulumi:"principalId"`
}

// User assigned identity properties
type UserAssignedIdentityResponseOutput struct{ *pulumi.OutputState }

func (UserAssignedIdentityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserAssignedIdentityResponse)(nil)).Elem()
}

func (o UserAssignedIdentityResponseOutput) ToUserAssignedIdentityResponseOutput() UserAssignedIdentityResponseOutput {
	return o
}

func (o UserAssignedIdentityResponseOutput) ToUserAssignedIdentityResponseOutputWithContext(ctx context.Context) UserAssignedIdentityResponseOutput {
	return o
}

// The client ID of the assigned identity.
func (o UserAssignedIdentityResponseOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v UserAssignedIdentityResponse) string { return v.ClientId }).(pulumi.StringOutput)
}

// The principal ID of the assigned identity.
func (o UserAssignedIdentityResponseOutput) PrincipalId() pulumi.StringOutput {
	return o.ApplyT(func(v UserAssignedIdentityResponse) string { return v.PrincipalId }).(pulumi.StringOutput)
}

type UserAssignedIdentityResponseMapOutput struct{ *pulumi.OutputState }

func (UserAssignedIdentityResponseMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]UserAssignedIdentityResponse)(nil)).Elem()
}

func (o UserAssignedIdentityResponseMapOutput) ToUserAssignedIdentityResponseMapOutput() UserAssignedIdentityResponseMapOutput {
	return o
}

func (o UserAssignedIdentityResponseMapOutput) ToUserAssignedIdentityResponseMapOutputWithContext(ctx context.Context) UserAssignedIdentityResponseMapOutput {
	return o
}

func (o UserAssignedIdentityResponseMapOutput) MapIndex(k pulumi.StringInput) UserAssignedIdentityResponseOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) UserAssignedIdentityResponse {
		return vs[0].(map[string]UserAssignedIdentityResponse)[vs[1].(string)]
	}).(UserAssignedIdentityResponseOutput)
}

// The agents will run on Virtual Machine Scale Sets.
type VmssFabricProfile struct {
	// The VM images of the machines in the pool.
	Images []PoolImage `pulumi:"images"`
	// Discriminator property for FabricProfile.
	// Expected value is 'Vmss'.
	Kind string `pulumi:"kind"`
	// The network profile of the machines in the pool.
	NetworkProfile *NetworkProfile `pulumi:"networkProfile"`
	// The OS profile of the machines in the pool.
	OsProfile *OsProfile `pulumi:"osProfile"`
	// The Azure SKU of the machines in the pool.
	Sku DevOpsAzureSku `pulumi:"sku"`
	// The storage profile of the machines in the pool.
	StorageProfile *StorageProfile `pulumi:"storageProfile"`
}

// VmssFabricProfileInput is an input type that accepts VmssFabricProfileArgs and VmssFabricProfileOutput values.
// You can construct a concrete instance of `VmssFabricProfileInput` via:
//
//	VmssFabricProfileArgs{...}
type VmssFabricProfileInput interface {
	pulumi.Input

	ToVmssFabricProfileOutput() VmssFabricProfileOutput
	ToVmssFabricProfileOutputWithContext(context.Context) VmssFabricProfileOutput
}

// The agents will run on Virtual Machine Scale Sets.
type VmssFabricProfileArgs struct {
	// The VM images of the machines in the pool.
	Images PoolImageArrayInput `pulumi:"images"`
	// Discriminator property for FabricProfile.
	// Expected value is 'Vmss'.
	Kind pulumi.StringInput `pulumi:"kind"`
	// The network profile of the machines in the pool.
	NetworkProfile NetworkProfilePtrInput `pulumi:"networkProfile"`
	// The OS profile of the machines in the pool.
	OsProfile OsProfilePtrInput `pulumi:"osProfile"`
	// The Azure SKU of the machines in the pool.
	Sku DevOpsAzureSkuInput `pulumi:"sku"`
	// The storage profile of the machines in the pool.
	StorageProfile StorageProfilePtrInput `pulumi:"storageProfile"`
}

func (VmssFabricProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VmssFabricProfile)(nil)).Elem()
}

func (i VmssFabricProfileArgs) ToVmssFabricProfileOutput() VmssFabricProfileOutput {
	return i.ToVmssFabricProfileOutputWithContext(context.Background())
}

func (i VmssFabricProfileArgs) ToVmssFabricProfileOutputWithContext(ctx context.Context) VmssFabricProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VmssFabricProfileOutput)
}

// The agents will run on Virtual Machine Scale Sets.
type VmssFabricProfileOutput struct{ *pulumi.OutputState }

func (VmssFabricProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VmssFabricProfile)(nil)).Elem()
}

func (o VmssFabricProfileOutput) ToVmssFabricProfileOutput() VmssFabricProfileOutput {
	return o
}

func (o VmssFabricProfileOutput) ToVmssFabricProfileOutputWithContext(ctx context.Context) VmssFabricProfileOutput {
	return o
}

// The VM images of the machines in the pool.
func (o VmssFabricProfileOutput) Images() PoolImageArrayOutput {
	return o.ApplyT(func(v VmssFabricProfile) []PoolImage { return v.Images }).(PoolImageArrayOutput)
}

// Discriminator property for FabricProfile.
// Expected value is 'Vmss'.
func (o VmssFabricProfileOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v VmssFabricProfile) string { return v.Kind }).(pulumi.StringOutput)
}

// The network profile of the machines in the pool.
func (o VmssFabricProfileOutput) NetworkProfile() NetworkProfilePtrOutput {
	return o.ApplyT(func(v VmssFabricProfile) *NetworkProfile { return v.NetworkProfile }).(NetworkProfilePtrOutput)
}

// The OS profile of the machines in the pool.
func (o VmssFabricProfileOutput) OsProfile() OsProfilePtrOutput {
	return o.ApplyT(func(v VmssFabricProfile) *OsProfile { return v.OsProfile }).(OsProfilePtrOutput)
}

// The Azure SKU of the machines in the pool.
func (o VmssFabricProfileOutput) Sku() DevOpsAzureSkuOutput {
	return o.ApplyT(func(v VmssFabricProfile) DevOpsAzureSku { return v.Sku }).(DevOpsAzureSkuOutput)
}

// The storage profile of the machines in the pool.
func (o VmssFabricProfileOutput) StorageProfile() StorageProfilePtrOutput {
	return o.ApplyT(func(v VmssFabricProfile) *StorageProfile { return v.StorageProfile }).(StorageProfilePtrOutput)
}

// The agents will run on Virtual Machine Scale Sets.
type VmssFabricProfileResponse struct {
	// The VM images of the machines in the pool.
	Images []PoolImageResponse `pulumi:"images"`
	// Discriminator property for FabricProfile.
	// Expected value is 'Vmss'.
	Kind string `pulumi:"kind"`
	// The network profile of the machines in the pool.
	NetworkProfile *NetworkProfileResponse `pulumi:"networkProfile"`
	// The OS profile of the machines in the pool.
	OsProfile *OsProfileResponse `pulumi:"osProfile"`
	// The Azure SKU of the machines in the pool.
	Sku DevOpsAzureSkuResponse `pulumi:"sku"`
	// The storage profile of the machines in the pool.
	StorageProfile *StorageProfileResponse `pulumi:"storageProfile"`
}

// The agents will run on Virtual Machine Scale Sets.
type VmssFabricProfileResponseOutput struct{ *pulumi.OutputState }

func (VmssFabricProfileResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VmssFabricProfileResponse)(nil)).Elem()
}

func (o VmssFabricProfileResponseOutput) ToVmssFabricProfileResponseOutput() VmssFabricProfileResponseOutput {
	return o
}

func (o VmssFabricProfileResponseOutput) ToVmssFabricProfileResponseOutputWithContext(ctx context.Context) VmssFabricProfileResponseOutput {
	return o
}

// The VM images of the machines in the pool.
func (o VmssFabricProfileResponseOutput) Images() PoolImageResponseArrayOutput {
	return o.ApplyT(func(v VmssFabricProfileResponse) []PoolImageResponse { return v.Images }).(PoolImageResponseArrayOutput)
}

// Discriminator property for FabricProfile.
// Expected value is 'Vmss'.
func (o VmssFabricProfileResponseOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v VmssFabricProfileResponse) string { return v.Kind }).(pulumi.StringOutput)
}

// The network profile of the machines in the pool.
func (o VmssFabricProfileResponseOutput) NetworkProfile() NetworkProfileResponsePtrOutput {
	return o.ApplyT(func(v VmssFabricProfileResponse) *NetworkProfileResponse { return v.NetworkProfile }).(NetworkProfileResponsePtrOutput)
}

// The OS profile of the machines in the pool.
func (o VmssFabricProfileResponseOutput) OsProfile() OsProfileResponsePtrOutput {
	return o.ApplyT(func(v VmssFabricProfileResponse) *OsProfileResponse { return v.OsProfile }).(OsProfileResponsePtrOutput)
}

// The Azure SKU of the machines in the pool.
func (o VmssFabricProfileResponseOutput) Sku() DevOpsAzureSkuResponseOutput {
	return o.ApplyT(func(v VmssFabricProfileResponse) DevOpsAzureSkuResponse { return v.Sku }).(DevOpsAzureSkuResponseOutput)
}

// The storage profile of the machines in the pool.
func (o VmssFabricProfileResponseOutput) StorageProfile() StorageProfileResponsePtrOutput {
	return o.ApplyT(func(v VmssFabricProfileResponse) *StorageProfileResponse { return v.StorageProfile }).(StorageProfileResponsePtrOutput)
}

func init() {
	pulumi.RegisterOutputType(AutomaticResourcePredictionsProfileOutput{})
	pulumi.RegisterOutputType(AutomaticResourcePredictionsProfilePtrOutput{})
	pulumi.RegisterOutputType(AutomaticResourcePredictionsProfileResponseOutput{})
	pulumi.RegisterOutputType(AutomaticResourcePredictionsProfileResponsePtrOutput{})
	pulumi.RegisterOutputType(AzureDevOpsOrganizationProfileOutput{})
	pulumi.RegisterOutputType(AzureDevOpsOrganizationProfileResponseOutput{})
	pulumi.RegisterOutputType(AzureDevOpsPermissionProfileOutput{})
	pulumi.RegisterOutputType(AzureDevOpsPermissionProfilePtrOutput{})
	pulumi.RegisterOutputType(AzureDevOpsPermissionProfileResponseOutput{})
	pulumi.RegisterOutputType(AzureDevOpsPermissionProfileResponsePtrOutput{})
	pulumi.RegisterOutputType(DataDiskOutput{})
	pulumi.RegisterOutputType(DataDiskArrayOutput{})
	pulumi.RegisterOutputType(DataDiskResponseOutput{})
	pulumi.RegisterOutputType(DataDiskResponseArrayOutput{})
	pulumi.RegisterOutputType(DevOpsAzureSkuOutput{})
	pulumi.RegisterOutputType(DevOpsAzureSkuResponseOutput{})
	pulumi.RegisterOutputType(GitHubOrganizationOutput{})
	pulumi.RegisterOutputType(GitHubOrganizationArrayOutput{})
	pulumi.RegisterOutputType(GitHubOrganizationProfileOutput{})
	pulumi.RegisterOutputType(GitHubOrganizationProfileResponseOutput{})
	pulumi.RegisterOutputType(GitHubOrganizationResponseOutput{})
	pulumi.RegisterOutputType(GitHubOrganizationResponseArrayOutput{})
	pulumi.RegisterOutputType(ManagedServiceIdentityOutput{})
	pulumi.RegisterOutputType(ManagedServiceIdentityPtrOutput{})
	pulumi.RegisterOutputType(ManagedServiceIdentityResponseOutput{})
	pulumi.RegisterOutputType(ManagedServiceIdentityResponsePtrOutput{})
	pulumi.RegisterOutputType(ManualResourcePredictionsProfileOutput{})
	pulumi.RegisterOutputType(ManualResourcePredictionsProfilePtrOutput{})
	pulumi.RegisterOutputType(ManualResourcePredictionsProfileResponseOutput{})
	pulumi.RegisterOutputType(ManualResourcePredictionsProfileResponsePtrOutput{})
	pulumi.RegisterOutputType(NetworkProfileOutput{})
	pulumi.RegisterOutputType(NetworkProfilePtrOutput{})
	pulumi.RegisterOutputType(NetworkProfileResponseOutput{})
	pulumi.RegisterOutputType(NetworkProfileResponsePtrOutput{})
	pulumi.RegisterOutputType(OrganizationOutput{})
	pulumi.RegisterOutputType(OrganizationArrayOutput{})
	pulumi.RegisterOutputType(OrganizationResponseOutput{})
	pulumi.RegisterOutputType(OrganizationResponseArrayOutput{})
	pulumi.RegisterOutputType(OsProfileOutput{})
	pulumi.RegisterOutputType(OsProfilePtrOutput{})
	pulumi.RegisterOutputType(OsProfileResponseOutput{})
	pulumi.RegisterOutputType(OsProfileResponsePtrOutput{})
	pulumi.RegisterOutputType(PoolImageOutput{})
	pulumi.RegisterOutputType(PoolImageArrayOutput{})
	pulumi.RegisterOutputType(PoolImageResponseOutput{})
	pulumi.RegisterOutputType(PoolImageResponseArrayOutput{})
	pulumi.RegisterOutputType(SecretsManagementSettingsOutput{})
	pulumi.RegisterOutputType(SecretsManagementSettingsPtrOutput{})
	pulumi.RegisterOutputType(SecretsManagementSettingsResponseOutput{})
	pulumi.RegisterOutputType(SecretsManagementSettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(StatefulOutput{})
	pulumi.RegisterOutputType(StatefulResponseOutput{})
	pulumi.RegisterOutputType(StatelessAgentProfileOutput{})
	pulumi.RegisterOutputType(StatelessAgentProfileResponseOutput{})
	pulumi.RegisterOutputType(StorageProfileOutput{})
	pulumi.RegisterOutputType(StorageProfilePtrOutput{})
	pulumi.RegisterOutputType(StorageProfileResponseOutput{})
	pulumi.RegisterOutputType(StorageProfileResponsePtrOutput{})
	pulumi.RegisterOutputType(SystemDataResponseOutput{})
	pulumi.RegisterOutputType(UserAssignedIdentityResponseOutput{})
	pulumi.RegisterOutputType(UserAssignedIdentityResponseMapOutput{})
	pulumi.RegisterOutputType(VmssFabricProfileOutput{})
	pulumi.RegisterOutputType(VmssFabricProfileResponseOutput{})
}
