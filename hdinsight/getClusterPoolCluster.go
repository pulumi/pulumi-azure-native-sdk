// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package hdinsight

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Gets a HDInsight cluster.
//
// Uses Azure REST API version 2024-05-01-preview.
//
// Other available API versions: 2023-06-01-preview, 2023-11-01-preview. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native hdinsight [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
func LookupClusterPoolCluster(ctx *pulumi.Context, args *LookupClusterPoolClusterArgs, opts ...pulumi.InvokeOption) (*LookupClusterPoolClusterResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv LookupClusterPoolClusterResult
	err := ctx.Invoke("azure-native:hdinsight:getClusterPoolCluster", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return rv.Defaults(), nil
}

type LookupClusterPoolClusterArgs struct {
	// The name of the HDInsight cluster.
	ClusterName string `pulumi:"clusterName"`
	// The name of the cluster pool.
	ClusterPoolName string `pulumi:"clusterPoolName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// The cluster.
type LookupClusterPoolClusterResult struct {
	// The Azure API version of the resource.
	AzureApiVersion string `pulumi:"azureApiVersion"`
	// Cluster profile.
	ClusterProfile ClusterProfileResponse `pulumi:"clusterProfile"`
	// The type of cluster.
	ClusterType string `pulumi:"clusterType"`
	// The compute profile.
	ComputeProfile ClusterPoolComputeProfileResponse `pulumi:"computeProfile"`
	// A unique id generated by the RP to identify the resource.
	DeploymentId string `pulumi:"deploymentId"`
	// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
	Id string `pulumi:"id"`
	// The geo-location where the resource lives
	Location string `pulumi:"location"`
	// The name of the resource
	Name string `pulumi:"name"`
	// Provisioning state of the resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// Business status of the resource.
	Status string `pulumi:"status"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponse `pulumi:"systemData"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type string `pulumi:"type"`
}

// Defaults sets the appropriate defaults for LookupClusterPoolClusterResult
func (val *LookupClusterPoolClusterResult) Defaults() *LookupClusterPoolClusterResult {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.ClusterProfile = *tmp.ClusterProfile.Defaults()

	return &tmp
}
func LookupClusterPoolClusterOutput(ctx *pulumi.Context, args LookupClusterPoolClusterOutputArgs, opts ...pulumi.InvokeOption) LookupClusterPoolClusterResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupClusterPoolClusterResultOutput, error) {
			args := v.(LookupClusterPoolClusterArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: utilities.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("azure-native:hdinsight:getClusterPoolCluster", args, LookupClusterPoolClusterResultOutput{}, options).(LookupClusterPoolClusterResultOutput), nil
		}).(LookupClusterPoolClusterResultOutput)
}

type LookupClusterPoolClusterOutputArgs struct {
	// The name of the HDInsight cluster.
	ClusterName pulumi.StringInput `pulumi:"clusterName"`
	// The name of the cluster pool.
	ClusterPoolName pulumi.StringInput `pulumi:"clusterPoolName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
}

func (LookupClusterPoolClusterOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupClusterPoolClusterArgs)(nil)).Elem()
}

// The cluster.
type LookupClusterPoolClusterResultOutput struct{ *pulumi.OutputState }

func (LookupClusterPoolClusterResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupClusterPoolClusterResult)(nil)).Elem()
}

func (o LookupClusterPoolClusterResultOutput) ToLookupClusterPoolClusterResultOutput() LookupClusterPoolClusterResultOutput {
	return o
}

func (o LookupClusterPoolClusterResultOutput) ToLookupClusterPoolClusterResultOutputWithContext(ctx context.Context) LookupClusterPoolClusterResultOutput {
	return o
}

// The Azure API version of the resource.
func (o LookupClusterPoolClusterResultOutput) AzureApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v LookupClusterPoolClusterResult) string { return v.AzureApiVersion }).(pulumi.StringOutput)
}

// Cluster profile.
func (o LookupClusterPoolClusterResultOutput) ClusterProfile() ClusterProfileResponseOutput {
	return o.ApplyT(func(v LookupClusterPoolClusterResult) ClusterProfileResponse { return v.ClusterProfile }).(ClusterProfileResponseOutput)
}

// The type of cluster.
func (o LookupClusterPoolClusterResultOutput) ClusterType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupClusterPoolClusterResult) string { return v.ClusterType }).(pulumi.StringOutput)
}

// The compute profile.
func (o LookupClusterPoolClusterResultOutput) ComputeProfile() ClusterPoolComputeProfileResponseOutput {
	return o.ApplyT(func(v LookupClusterPoolClusterResult) ClusterPoolComputeProfileResponse { return v.ComputeProfile }).(ClusterPoolComputeProfileResponseOutput)
}

// A unique id generated by the RP to identify the resource.
func (o LookupClusterPoolClusterResultOutput) DeploymentId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupClusterPoolClusterResult) string { return v.DeploymentId }).(pulumi.StringOutput)
}

// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
func (o LookupClusterPoolClusterResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupClusterPoolClusterResult) string { return v.Id }).(pulumi.StringOutput)
}

// The geo-location where the resource lives
func (o LookupClusterPoolClusterResultOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v LookupClusterPoolClusterResult) string { return v.Location }).(pulumi.StringOutput)
}

// The name of the resource
func (o LookupClusterPoolClusterResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupClusterPoolClusterResult) string { return v.Name }).(pulumi.StringOutput)
}

// Provisioning state of the resource.
func (o LookupClusterPoolClusterResultOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v LookupClusterPoolClusterResult) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Business status of the resource.
func (o LookupClusterPoolClusterResultOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v LookupClusterPoolClusterResult) string { return v.Status }).(pulumi.StringOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o LookupClusterPoolClusterResultOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v LookupClusterPoolClusterResult) SystemDataResponse { return v.SystemData }).(SystemDataResponseOutput)
}

// Resource tags.
func (o LookupClusterPoolClusterResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupClusterPoolClusterResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o LookupClusterPoolClusterResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupClusterPoolClusterResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupClusterPoolClusterResultOutput{})
}
