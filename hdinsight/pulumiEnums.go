// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package hdinsight

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// User to specify which type of Autoscale to be implemented - Scheduled Based or Load Based.
type AutoscaleType string

const (
	AutoscaleTypeScheduleBased = AutoscaleType("ScheduleBased")
	AutoscaleTypeLoadBased     = AutoscaleType("LoadBased")
)

func (AutoscaleType) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoscaleType)(nil)).Elem()
}

func (e AutoscaleType) ToAutoscaleTypeOutput() AutoscaleTypeOutput {
	return pulumi.ToOutput(e).(AutoscaleTypeOutput)
}

func (e AutoscaleType) ToAutoscaleTypeOutputWithContext(ctx context.Context) AutoscaleTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AutoscaleTypeOutput)
}

func (e AutoscaleType) ToAutoscaleTypePtrOutput() AutoscaleTypePtrOutput {
	return e.ToAutoscaleTypePtrOutputWithContext(context.Background())
}

func (e AutoscaleType) ToAutoscaleTypePtrOutputWithContext(ctx context.Context) AutoscaleTypePtrOutput {
	return AutoscaleType(e).ToAutoscaleTypeOutputWithContext(ctx).ToAutoscaleTypePtrOutputWithContext(ctx)
}

func (e AutoscaleType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AutoscaleType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AutoscaleType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AutoscaleType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AutoscaleTypeOutput struct{ *pulumi.OutputState }

func (AutoscaleTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoscaleType)(nil)).Elem()
}

func (o AutoscaleTypeOutput) ToAutoscaleTypeOutput() AutoscaleTypeOutput {
	return o
}

func (o AutoscaleTypeOutput) ToAutoscaleTypeOutputWithContext(ctx context.Context) AutoscaleTypeOutput {
	return o
}

func (o AutoscaleTypeOutput) ToAutoscaleTypePtrOutput() AutoscaleTypePtrOutput {
	return o.ToAutoscaleTypePtrOutputWithContext(context.Background())
}

func (o AutoscaleTypeOutput) ToAutoscaleTypePtrOutputWithContext(ctx context.Context) AutoscaleTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AutoscaleType) *AutoscaleType {
		return &v
	}).(AutoscaleTypePtrOutput)
}

func (o AutoscaleTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AutoscaleTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AutoscaleType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AutoscaleTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AutoscaleTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AutoscaleType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AutoscaleTypePtrOutput struct{ *pulumi.OutputState }

func (AutoscaleTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoscaleType)(nil)).Elem()
}

func (o AutoscaleTypePtrOutput) ToAutoscaleTypePtrOutput() AutoscaleTypePtrOutput {
	return o
}

func (o AutoscaleTypePtrOutput) ToAutoscaleTypePtrOutputWithContext(ctx context.Context) AutoscaleTypePtrOutput {
	return o
}

func (o AutoscaleTypePtrOutput) Elem() AutoscaleTypeOutput {
	return o.ApplyT(func(v *AutoscaleType) AutoscaleType {
		if v != nil {
			return *v
		}
		var ret AutoscaleType
		return ret
	}).(AutoscaleTypeOutput)
}

func (o AutoscaleTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AutoscaleTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AutoscaleType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AutoscaleTypeInput is an input type that accepts values of the AutoscaleType enum
// A concrete instance of `AutoscaleTypeInput` can be one of the following:
//
//	AutoscaleTypeScheduleBased
//	AutoscaleTypeLoadBased
type AutoscaleTypeInput interface {
	pulumi.Input

	ToAutoscaleTypeOutput() AutoscaleTypeOutput
	ToAutoscaleTypeOutputWithContext(context.Context) AutoscaleTypeOutput
}

var autoscaleTypePtrType = reflect.TypeOf((**AutoscaleType)(nil)).Elem()

type AutoscaleTypePtrInput interface {
	pulumi.Input

	ToAutoscaleTypePtrOutput() AutoscaleTypePtrOutput
	ToAutoscaleTypePtrOutputWithContext(context.Context) AutoscaleTypePtrOutput
}

type autoscaleTypePtr string

func AutoscaleTypePtr(v string) AutoscaleTypePtrInput {
	return (*autoscaleTypePtr)(&v)
}

func (*autoscaleTypePtr) ElementType() reflect.Type {
	return autoscaleTypePtrType
}

func (in *autoscaleTypePtr) ToAutoscaleTypePtrOutput() AutoscaleTypePtrOutput {
	return pulumi.ToOutput(in).(AutoscaleTypePtrOutput)
}

func (in *autoscaleTypePtr) ToAutoscaleTypePtrOutputWithContext(ctx context.Context) AutoscaleTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AutoscaleTypePtrOutput)
}

// The comparison operator.
type ComparisonOperator string

const (
	ComparisonOperatorGreaterThan        = ComparisonOperator("greaterThan")
	ComparisonOperatorGreaterThanOrEqual = ComparisonOperator("greaterThanOrEqual")
	ComparisonOperatorLessThan           = ComparisonOperator("lessThan")
	ComparisonOperatorLessThanOrEqual    = ComparisonOperator("lessThanOrEqual")
)

func (ComparisonOperator) ElementType() reflect.Type {
	return reflect.TypeOf((*ComparisonOperator)(nil)).Elem()
}

func (e ComparisonOperator) ToComparisonOperatorOutput() ComparisonOperatorOutput {
	return pulumi.ToOutput(e).(ComparisonOperatorOutput)
}

func (e ComparisonOperator) ToComparisonOperatorOutputWithContext(ctx context.Context) ComparisonOperatorOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ComparisonOperatorOutput)
}

func (e ComparisonOperator) ToComparisonOperatorPtrOutput() ComparisonOperatorPtrOutput {
	return e.ToComparisonOperatorPtrOutputWithContext(context.Background())
}

func (e ComparisonOperator) ToComparisonOperatorPtrOutputWithContext(ctx context.Context) ComparisonOperatorPtrOutput {
	return ComparisonOperator(e).ToComparisonOperatorOutputWithContext(ctx).ToComparisonOperatorPtrOutputWithContext(ctx)
}

func (e ComparisonOperator) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ComparisonOperator) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ComparisonOperator) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ComparisonOperator) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ComparisonOperatorOutput struct{ *pulumi.OutputState }

func (ComparisonOperatorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ComparisonOperator)(nil)).Elem()
}

func (o ComparisonOperatorOutput) ToComparisonOperatorOutput() ComparisonOperatorOutput {
	return o
}

func (o ComparisonOperatorOutput) ToComparisonOperatorOutputWithContext(ctx context.Context) ComparisonOperatorOutput {
	return o
}

func (o ComparisonOperatorOutput) ToComparisonOperatorPtrOutput() ComparisonOperatorPtrOutput {
	return o.ToComparisonOperatorPtrOutputWithContext(context.Background())
}

func (o ComparisonOperatorOutput) ToComparisonOperatorPtrOutputWithContext(ctx context.Context) ComparisonOperatorPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ComparisonOperator) *ComparisonOperator {
		return &v
	}).(ComparisonOperatorPtrOutput)
}

func (o ComparisonOperatorOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ComparisonOperatorOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ComparisonOperator) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ComparisonOperatorOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ComparisonOperatorOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ComparisonOperator) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ComparisonOperatorPtrOutput struct{ *pulumi.OutputState }

func (ComparisonOperatorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ComparisonOperator)(nil)).Elem()
}

func (o ComparisonOperatorPtrOutput) ToComparisonOperatorPtrOutput() ComparisonOperatorPtrOutput {
	return o
}

func (o ComparisonOperatorPtrOutput) ToComparisonOperatorPtrOutputWithContext(ctx context.Context) ComparisonOperatorPtrOutput {
	return o
}

func (o ComparisonOperatorPtrOutput) Elem() ComparisonOperatorOutput {
	return o.ApplyT(func(v *ComparisonOperator) ComparisonOperator {
		if v != nil {
			return *v
		}
		var ret ComparisonOperator
		return ret
	}).(ComparisonOperatorOutput)
}

func (o ComparisonOperatorPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ComparisonOperatorPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ComparisonOperator) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ComparisonOperatorInput is an input type that accepts values of the ComparisonOperator enum
// A concrete instance of `ComparisonOperatorInput` can be one of the following:
//
//	ComparisonOperatorGreaterThan
//	ComparisonOperatorGreaterThanOrEqual
//	ComparisonOperatorLessThan
//	ComparisonOperatorLessThanOrEqual
type ComparisonOperatorInput interface {
	pulumi.Input

	ToComparisonOperatorOutput() ComparisonOperatorOutput
	ToComparisonOperatorOutputWithContext(context.Context) ComparisonOperatorOutput
}

var comparisonOperatorPtrType = reflect.TypeOf((**ComparisonOperator)(nil)).Elem()

type ComparisonOperatorPtrInput interface {
	pulumi.Input

	ToComparisonOperatorPtrOutput() ComparisonOperatorPtrOutput
	ToComparisonOperatorPtrOutputWithContext(context.Context) ComparisonOperatorPtrOutput
}

type comparisonOperatorPtr string

func ComparisonOperatorPtr(v string) ComparisonOperatorPtrInput {
	return (*comparisonOperatorPtr)(&v)
}

func (*comparisonOperatorPtr) ElementType() reflect.Type {
	return comparisonOperatorPtrType
}

func (in *comparisonOperatorPtr) ToComparisonOperatorPtrOutput() ComparisonOperatorPtrOutput {
	return pulumi.ToOutput(in).(ComparisonOperatorPtrOutput)
}

func (in *comparisonOperatorPtr) ToComparisonOperatorPtrOutputWithContext(ctx context.Context) ComparisonOperatorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ComparisonOperatorPtrOutput)
}

// This property indicates if the content is encoded and is case-insensitive. Please set the value to base64 if the content is base64 encoded. Set it to none or skip it if the content is plain text.
type ContentEncoding string

const (
	ContentEncodingBase64 = ContentEncoding("Base64")
	ContentEncodingNone   = ContentEncoding("None")
)

func (ContentEncoding) ElementType() reflect.Type {
	return reflect.TypeOf((*ContentEncoding)(nil)).Elem()
}

func (e ContentEncoding) ToContentEncodingOutput() ContentEncodingOutput {
	return pulumi.ToOutput(e).(ContentEncodingOutput)
}

func (e ContentEncoding) ToContentEncodingOutputWithContext(ctx context.Context) ContentEncodingOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ContentEncodingOutput)
}

func (e ContentEncoding) ToContentEncodingPtrOutput() ContentEncodingPtrOutput {
	return e.ToContentEncodingPtrOutputWithContext(context.Background())
}

func (e ContentEncoding) ToContentEncodingPtrOutputWithContext(ctx context.Context) ContentEncodingPtrOutput {
	return ContentEncoding(e).ToContentEncodingOutputWithContext(ctx).ToContentEncodingPtrOutputWithContext(ctx)
}

func (e ContentEncoding) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ContentEncoding) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ContentEncoding) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ContentEncoding) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ContentEncodingOutput struct{ *pulumi.OutputState }

func (ContentEncodingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContentEncoding)(nil)).Elem()
}

func (o ContentEncodingOutput) ToContentEncodingOutput() ContentEncodingOutput {
	return o
}

func (o ContentEncodingOutput) ToContentEncodingOutputWithContext(ctx context.Context) ContentEncodingOutput {
	return o
}

func (o ContentEncodingOutput) ToContentEncodingPtrOutput() ContentEncodingPtrOutput {
	return o.ToContentEncodingPtrOutputWithContext(context.Background())
}

func (o ContentEncodingOutput) ToContentEncodingPtrOutputWithContext(ctx context.Context) ContentEncodingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ContentEncoding) *ContentEncoding {
		return &v
	}).(ContentEncodingPtrOutput)
}

func (o ContentEncodingOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ContentEncodingOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ContentEncoding) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ContentEncodingOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ContentEncodingOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ContentEncoding) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ContentEncodingPtrOutput struct{ *pulumi.OutputState }

func (ContentEncodingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ContentEncoding)(nil)).Elem()
}

func (o ContentEncodingPtrOutput) ToContentEncodingPtrOutput() ContentEncodingPtrOutput {
	return o
}

func (o ContentEncodingPtrOutput) ToContentEncodingPtrOutputWithContext(ctx context.Context) ContentEncodingPtrOutput {
	return o
}

func (o ContentEncodingPtrOutput) Elem() ContentEncodingOutput {
	return o.ApplyT(func(v *ContentEncoding) ContentEncoding {
		if v != nil {
			return *v
		}
		var ret ContentEncoding
		return ret
	}).(ContentEncodingOutput)
}

func (o ContentEncodingPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ContentEncodingPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ContentEncoding) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ContentEncodingInput is an input type that accepts values of the ContentEncoding enum
// A concrete instance of `ContentEncodingInput` can be one of the following:
//
//	ContentEncodingBase64
//	ContentEncodingNone
type ContentEncodingInput interface {
	pulumi.Input

	ToContentEncodingOutput() ContentEncodingOutput
	ToContentEncodingOutputWithContext(context.Context) ContentEncodingOutput
}

var contentEncodingPtrType = reflect.TypeOf((**ContentEncoding)(nil)).Elem()

type ContentEncodingPtrInput interface {
	pulumi.Input

	ToContentEncodingPtrOutput() ContentEncodingPtrOutput
	ToContentEncodingPtrOutputWithContext(context.Context) ContentEncodingPtrOutput
}

type contentEncodingPtr string

func ContentEncodingPtr(v string) ContentEncodingPtrInput {
	return (*contentEncodingPtr)(&v)
}

func (*contentEncodingPtr) ElementType() reflect.Type {
	return contentEncodingPtrType
}

func (in *contentEncodingPtr) ToContentEncodingPtrOutput() ContentEncodingPtrOutput {
	return pulumi.ToOutput(in).(ContentEncodingPtrOutput)
}

func (in *contentEncodingPtr) ToContentEncodingPtrOutputWithContext(ctx context.Context) ContentEncodingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ContentEncodingPtrOutput)
}

// Managed Disk Type.
type DataDiskType string

const (
	DataDiskType_Standard_HDD_LRS   = DataDiskType("Standard_HDD_LRS")
	DataDiskType_Standard_SSD_LRS   = DataDiskType("Standard_SSD_LRS")
	DataDiskType_Standard_SSD_ZRS   = DataDiskType("Standard_SSD_ZRS")
	DataDiskType_Premium_SSD_LRS    = DataDiskType("Premium_SSD_LRS")
	DataDiskType_Premium_SSD_ZRS    = DataDiskType("Premium_SSD_ZRS")
	DataDiskType_Premium_SSD_v2_LRS = DataDiskType("Premium_SSD_v2_LRS")
)

func (DataDiskType) ElementType() reflect.Type {
	return reflect.TypeOf((*DataDiskType)(nil)).Elem()
}

func (e DataDiskType) ToDataDiskTypeOutput() DataDiskTypeOutput {
	return pulumi.ToOutput(e).(DataDiskTypeOutput)
}

func (e DataDiskType) ToDataDiskTypeOutputWithContext(ctx context.Context) DataDiskTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DataDiskTypeOutput)
}

func (e DataDiskType) ToDataDiskTypePtrOutput() DataDiskTypePtrOutput {
	return e.ToDataDiskTypePtrOutputWithContext(context.Background())
}

func (e DataDiskType) ToDataDiskTypePtrOutputWithContext(ctx context.Context) DataDiskTypePtrOutput {
	return DataDiskType(e).ToDataDiskTypeOutputWithContext(ctx).ToDataDiskTypePtrOutputWithContext(ctx)
}

func (e DataDiskType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DataDiskType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DataDiskType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DataDiskType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DataDiskTypeOutput struct{ *pulumi.OutputState }

func (DataDiskTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataDiskType)(nil)).Elem()
}

func (o DataDiskTypeOutput) ToDataDiskTypeOutput() DataDiskTypeOutput {
	return o
}

func (o DataDiskTypeOutput) ToDataDiskTypeOutputWithContext(ctx context.Context) DataDiskTypeOutput {
	return o
}

func (o DataDiskTypeOutput) ToDataDiskTypePtrOutput() DataDiskTypePtrOutput {
	return o.ToDataDiskTypePtrOutputWithContext(context.Background())
}

func (o DataDiskTypeOutput) ToDataDiskTypePtrOutputWithContext(ctx context.Context) DataDiskTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataDiskType) *DataDiskType {
		return &v
	}).(DataDiskTypePtrOutput)
}

func (o DataDiskTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DataDiskTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DataDiskType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DataDiskTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DataDiskTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DataDiskType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DataDiskTypePtrOutput struct{ *pulumi.OutputState }

func (DataDiskTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataDiskType)(nil)).Elem()
}

func (o DataDiskTypePtrOutput) ToDataDiskTypePtrOutput() DataDiskTypePtrOutput {
	return o
}

func (o DataDiskTypePtrOutput) ToDataDiskTypePtrOutputWithContext(ctx context.Context) DataDiskTypePtrOutput {
	return o
}

func (o DataDiskTypePtrOutput) Elem() DataDiskTypeOutput {
	return o.ApplyT(func(v *DataDiskType) DataDiskType {
		if v != nil {
			return *v
		}
		var ret DataDiskType
		return ret
	}).(DataDiskTypeOutput)
}

func (o DataDiskTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DataDiskTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DataDiskType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DataDiskTypeInput is an input type that accepts values of the DataDiskType enum
// A concrete instance of `DataDiskTypeInput` can be one of the following:
//
//	DataDiskType_Standard_HDD_LRS
//	DataDiskType_Standard_SSD_LRS
//	DataDiskType_Standard_SSD_ZRS
//	DataDiskType_Premium_SSD_LRS
//	DataDiskType_Premium_SSD_ZRS
//	DataDiskType_Premium_SSD_v2_LRS
type DataDiskTypeInput interface {
	pulumi.Input

	ToDataDiskTypeOutput() DataDiskTypeOutput
	ToDataDiskTypeOutputWithContext(context.Context) DataDiskTypeOutput
}

var dataDiskTypePtrType = reflect.TypeOf((**DataDiskType)(nil)).Elem()

type DataDiskTypePtrInput interface {
	pulumi.Input

	ToDataDiskTypePtrOutput() DataDiskTypePtrOutput
	ToDataDiskTypePtrOutputWithContext(context.Context) DataDiskTypePtrOutput
}

type dataDiskTypePtr string

func DataDiskTypePtr(v string) DataDiskTypePtrInput {
	return (*dataDiskTypePtr)(&v)
}

func (*dataDiskTypePtr) ElementType() reflect.Type {
	return dataDiskTypePtrType
}

func (in *dataDiskTypePtr) ToDataDiskTypePtrOutput() DataDiskTypePtrOutput {
	return pulumi.ToOutput(in).(DataDiskTypePtrOutput)
}

func (in *dataDiskTypePtr) ToDataDiskTypePtrOutputWithContext(ctx context.Context) DataDiskTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DataDiskTypePtrOutput)
}

type DaysOfWeek string

const (
	DaysOfWeekMonday    = DaysOfWeek("Monday")
	DaysOfWeekTuesday   = DaysOfWeek("Tuesday")
	DaysOfWeekWednesday = DaysOfWeek("Wednesday")
	DaysOfWeekThursday  = DaysOfWeek("Thursday")
	DaysOfWeekFriday    = DaysOfWeek("Friday")
	DaysOfWeekSaturday  = DaysOfWeek("Saturday")
	DaysOfWeekSunday    = DaysOfWeek("Sunday")
)

func (DaysOfWeek) ElementType() reflect.Type {
	return reflect.TypeOf((*DaysOfWeek)(nil)).Elem()
}

func (e DaysOfWeek) ToDaysOfWeekOutput() DaysOfWeekOutput {
	return pulumi.ToOutput(e).(DaysOfWeekOutput)
}

func (e DaysOfWeek) ToDaysOfWeekOutputWithContext(ctx context.Context) DaysOfWeekOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DaysOfWeekOutput)
}

func (e DaysOfWeek) ToDaysOfWeekPtrOutput() DaysOfWeekPtrOutput {
	return e.ToDaysOfWeekPtrOutputWithContext(context.Background())
}

func (e DaysOfWeek) ToDaysOfWeekPtrOutputWithContext(ctx context.Context) DaysOfWeekPtrOutput {
	return DaysOfWeek(e).ToDaysOfWeekOutputWithContext(ctx).ToDaysOfWeekPtrOutputWithContext(ctx)
}

func (e DaysOfWeek) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DaysOfWeek) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DaysOfWeek) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DaysOfWeek) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DaysOfWeekOutput struct{ *pulumi.OutputState }

func (DaysOfWeekOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DaysOfWeek)(nil)).Elem()
}

func (o DaysOfWeekOutput) ToDaysOfWeekOutput() DaysOfWeekOutput {
	return o
}

func (o DaysOfWeekOutput) ToDaysOfWeekOutputWithContext(ctx context.Context) DaysOfWeekOutput {
	return o
}

func (o DaysOfWeekOutput) ToDaysOfWeekPtrOutput() DaysOfWeekPtrOutput {
	return o.ToDaysOfWeekPtrOutputWithContext(context.Background())
}

func (o DaysOfWeekOutput) ToDaysOfWeekPtrOutputWithContext(ctx context.Context) DaysOfWeekPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DaysOfWeek) *DaysOfWeek {
		return &v
	}).(DaysOfWeekPtrOutput)
}

func (o DaysOfWeekOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DaysOfWeekOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DaysOfWeek) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DaysOfWeekOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DaysOfWeekOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DaysOfWeek) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DaysOfWeekPtrOutput struct{ *pulumi.OutputState }

func (DaysOfWeekPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DaysOfWeek)(nil)).Elem()
}

func (o DaysOfWeekPtrOutput) ToDaysOfWeekPtrOutput() DaysOfWeekPtrOutput {
	return o
}

func (o DaysOfWeekPtrOutput) ToDaysOfWeekPtrOutputWithContext(ctx context.Context) DaysOfWeekPtrOutput {
	return o
}

func (o DaysOfWeekPtrOutput) Elem() DaysOfWeekOutput {
	return o.ApplyT(func(v *DaysOfWeek) DaysOfWeek {
		if v != nil {
			return *v
		}
		var ret DaysOfWeek
		return ret
	}).(DaysOfWeekOutput)
}

func (o DaysOfWeekPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DaysOfWeekPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DaysOfWeek) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DaysOfWeekInput is an input type that accepts values of the DaysOfWeek enum
// A concrete instance of `DaysOfWeekInput` can be one of the following:
//
//	DaysOfWeekMonday
//	DaysOfWeekTuesday
//	DaysOfWeekWednesday
//	DaysOfWeekThursday
//	DaysOfWeekFriday
//	DaysOfWeekSaturday
//	DaysOfWeekSunday
type DaysOfWeekInput interface {
	pulumi.Input

	ToDaysOfWeekOutput() DaysOfWeekOutput
	ToDaysOfWeekOutputWithContext(context.Context) DaysOfWeekOutput
}

var daysOfWeekPtrType = reflect.TypeOf((**DaysOfWeek)(nil)).Elem()

type DaysOfWeekPtrInput interface {
	pulumi.Input

	ToDaysOfWeekPtrOutput() DaysOfWeekPtrOutput
	ToDaysOfWeekPtrOutputWithContext(context.Context) DaysOfWeekPtrOutput
}

type daysOfWeekPtr string

func DaysOfWeekPtr(v string) DaysOfWeekPtrInput {
	return (*daysOfWeekPtr)(&v)
}

func (*daysOfWeekPtr) ElementType() reflect.Type {
	return daysOfWeekPtrType
}

func (in *daysOfWeekPtr) ToDaysOfWeekPtrOutput() DaysOfWeekPtrOutput {
	return pulumi.ToOutput(in).(DaysOfWeekPtrOutput)
}

func (in *daysOfWeekPtr) ToDaysOfWeekPtrOutputWithContext(ctx context.Context) DaysOfWeekPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DaysOfWeekPtrOutput)
}

// The authentication mode to connect to your Hive metastore database. More details: https://learn.microsoft.com/en-us/azure/azure-sql/database/logins-create-manage?view=azuresql#authentication-and-authorization
type DbConnectionAuthenticationMode string

const (
	// The password-based authentication to connect to your Hive metastore database.
	DbConnectionAuthenticationModeSqlAuth = DbConnectionAuthenticationMode("SqlAuth")
	// The managed-identity-based authentication to connect to your Hive metastore database.
	DbConnectionAuthenticationModeIdentityAuth = DbConnectionAuthenticationMode("IdentityAuth")
)

func (DbConnectionAuthenticationMode) ElementType() reflect.Type {
	return reflect.TypeOf((*DbConnectionAuthenticationMode)(nil)).Elem()
}

func (e DbConnectionAuthenticationMode) ToDbConnectionAuthenticationModeOutput() DbConnectionAuthenticationModeOutput {
	return pulumi.ToOutput(e).(DbConnectionAuthenticationModeOutput)
}

func (e DbConnectionAuthenticationMode) ToDbConnectionAuthenticationModeOutputWithContext(ctx context.Context) DbConnectionAuthenticationModeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DbConnectionAuthenticationModeOutput)
}

func (e DbConnectionAuthenticationMode) ToDbConnectionAuthenticationModePtrOutput() DbConnectionAuthenticationModePtrOutput {
	return e.ToDbConnectionAuthenticationModePtrOutputWithContext(context.Background())
}

func (e DbConnectionAuthenticationMode) ToDbConnectionAuthenticationModePtrOutputWithContext(ctx context.Context) DbConnectionAuthenticationModePtrOutput {
	return DbConnectionAuthenticationMode(e).ToDbConnectionAuthenticationModeOutputWithContext(ctx).ToDbConnectionAuthenticationModePtrOutputWithContext(ctx)
}

func (e DbConnectionAuthenticationMode) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DbConnectionAuthenticationMode) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DbConnectionAuthenticationMode) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DbConnectionAuthenticationMode) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DbConnectionAuthenticationModeOutput struct{ *pulumi.OutputState }

func (DbConnectionAuthenticationModeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DbConnectionAuthenticationMode)(nil)).Elem()
}

func (o DbConnectionAuthenticationModeOutput) ToDbConnectionAuthenticationModeOutput() DbConnectionAuthenticationModeOutput {
	return o
}

func (o DbConnectionAuthenticationModeOutput) ToDbConnectionAuthenticationModeOutputWithContext(ctx context.Context) DbConnectionAuthenticationModeOutput {
	return o
}

func (o DbConnectionAuthenticationModeOutput) ToDbConnectionAuthenticationModePtrOutput() DbConnectionAuthenticationModePtrOutput {
	return o.ToDbConnectionAuthenticationModePtrOutputWithContext(context.Background())
}

func (o DbConnectionAuthenticationModeOutput) ToDbConnectionAuthenticationModePtrOutputWithContext(ctx context.Context) DbConnectionAuthenticationModePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DbConnectionAuthenticationMode) *DbConnectionAuthenticationMode {
		return &v
	}).(DbConnectionAuthenticationModePtrOutput)
}

func (o DbConnectionAuthenticationModeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DbConnectionAuthenticationModeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DbConnectionAuthenticationMode) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DbConnectionAuthenticationModeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DbConnectionAuthenticationModeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DbConnectionAuthenticationMode) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DbConnectionAuthenticationModePtrOutput struct{ *pulumi.OutputState }

func (DbConnectionAuthenticationModePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DbConnectionAuthenticationMode)(nil)).Elem()
}

func (o DbConnectionAuthenticationModePtrOutput) ToDbConnectionAuthenticationModePtrOutput() DbConnectionAuthenticationModePtrOutput {
	return o
}

func (o DbConnectionAuthenticationModePtrOutput) ToDbConnectionAuthenticationModePtrOutputWithContext(ctx context.Context) DbConnectionAuthenticationModePtrOutput {
	return o
}

func (o DbConnectionAuthenticationModePtrOutput) Elem() DbConnectionAuthenticationModeOutput {
	return o.ApplyT(func(v *DbConnectionAuthenticationMode) DbConnectionAuthenticationMode {
		if v != nil {
			return *v
		}
		var ret DbConnectionAuthenticationMode
		return ret
	}).(DbConnectionAuthenticationModeOutput)
}

func (o DbConnectionAuthenticationModePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DbConnectionAuthenticationModePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DbConnectionAuthenticationMode) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DbConnectionAuthenticationModeInput is an input type that accepts values of the DbConnectionAuthenticationMode enum
// A concrete instance of `DbConnectionAuthenticationModeInput` can be one of the following:
//
//	DbConnectionAuthenticationModeSqlAuth
//	DbConnectionAuthenticationModeIdentityAuth
type DbConnectionAuthenticationModeInput interface {
	pulumi.Input

	ToDbConnectionAuthenticationModeOutput() DbConnectionAuthenticationModeOutput
	ToDbConnectionAuthenticationModeOutputWithContext(context.Context) DbConnectionAuthenticationModeOutput
}

var dbConnectionAuthenticationModePtrType = reflect.TypeOf((**DbConnectionAuthenticationMode)(nil)).Elem()

type DbConnectionAuthenticationModePtrInput interface {
	pulumi.Input

	ToDbConnectionAuthenticationModePtrOutput() DbConnectionAuthenticationModePtrOutput
	ToDbConnectionAuthenticationModePtrOutputWithContext(context.Context) DbConnectionAuthenticationModePtrOutput
}

type dbConnectionAuthenticationModePtr string

func DbConnectionAuthenticationModePtr(v string) DbConnectionAuthenticationModePtrInput {
	return (*dbConnectionAuthenticationModePtr)(&v)
}

func (*dbConnectionAuthenticationModePtr) ElementType() reflect.Type {
	return dbConnectionAuthenticationModePtrType
}

func (in *dbConnectionAuthenticationModePtr) ToDbConnectionAuthenticationModePtrOutput() DbConnectionAuthenticationModePtrOutput {
	return pulumi.ToOutput(in).(DbConnectionAuthenticationModePtrOutput)
}

func (in *dbConnectionAuthenticationModePtr) ToDbConnectionAuthenticationModePtrOutputWithContext(ctx context.Context) DbConnectionAuthenticationModePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DbConnectionAuthenticationModePtrOutput)
}

// A string property that indicates the deployment mode of Flink cluster. It can have one of the following enum values => Application, Session. Default value is Session
type DeploymentMode string

const (
	DeploymentModeApplication = DeploymentMode("Application")
	DeploymentModeSession     = DeploymentMode("Session")
)

func (DeploymentMode) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentMode)(nil)).Elem()
}

func (e DeploymentMode) ToDeploymentModeOutput() DeploymentModeOutput {
	return pulumi.ToOutput(e).(DeploymentModeOutput)
}

func (e DeploymentMode) ToDeploymentModeOutputWithContext(ctx context.Context) DeploymentModeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DeploymentModeOutput)
}

func (e DeploymentMode) ToDeploymentModePtrOutput() DeploymentModePtrOutput {
	return e.ToDeploymentModePtrOutputWithContext(context.Background())
}

func (e DeploymentMode) ToDeploymentModePtrOutputWithContext(ctx context.Context) DeploymentModePtrOutput {
	return DeploymentMode(e).ToDeploymentModeOutputWithContext(ctx).ToDeploymentModePtrOutputWithContext(ctx)
}

func (e DeploymentMode) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DeploymentMode) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DeploymentMode) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DeploymentMode) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DeploymentModeOutput struct{ *pulumi.OutputState }

func (DeploymentModeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentMode)(nil)).Elem()
}

func (o DeploymentModeOutput) ToDeploymentModeOutput() DeploymentModeOutput {
	return o
}

func (o DeploymentModeOutput) ToDeploymentModeOutputWithContext(ctx context.Context) DeploymentModeOutput {
	return o
}

func (o DeploymentModeOutput) ToDeploymentModePtrOutput() DeploymentModePtrOutput {
	return o.ToDeploymentModePtrOutputWithContext(context.Background())
}

func (o DeploymentModeOutput) ToDeploymentModePtrOutputWithContext(ctx context.Context) DeploymentModePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DeploymentMode) *DeploymentMode {
		return &v
	}).(DeploymentModePtrOutput)
}

func (o DeploymentModeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DeploymentModeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DeploymentMode) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DeploymentModeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DeploymentModeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DeploymentMode) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DeploymentModePtrOutput struct{ *pulumi.OutputState }

func (DeploymentModePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeploymentMode)(nil)).Elem()
}

func (o DeploymentModePtrOutput) ToDeploymentModePtrOutput() DeploymentModePtrOutput {
	return o
}

func (o DeploymentModePtrOutput) ToDeploymentModePtrOutputWithContext(ctx context.Context) DeploymentModePtrOutput {
	return o
}

func (o DeploymentModePtrOutput) Elem() DeploymentModeOutput {
	return o.ApplyT(func(v *DeploymentMode) DeploymentMode {
		if v != nil {
			return *v
		}
		var ret DeploymentMode
		return ret
	}).(DeploymentModeOutput)
}

func (o DeploymentModePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DeploymentModePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DeploymentMode) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DeploymentModeInput is an input type that accepts values of the DeploymentMode enum
// A concrete instance of `DeploymentModeInput` can be one of the following:
//
//	DeploymentModeApplication
//	DeploymentModeSession
type DeploymentModeInput interface {
	pulumi.Input

	ToDeploymentModeOutput() DeploymentModeOutput
	ToDeploymentModeOutputWithContext(context.Context) DeploymentModeOutput
}

var deploymentModePtrType = reflect.TypeOf((**DeploymentMode)(nil)).Elem()

type DeploymentModePtrInput interface {
	pulumi.Input

	ToDeploymentModePtrOutput() DeploymentModePtrOutput
	ToDeploymentModePtrOutputWithContext(context.Context) DeploymentModePtrOutput
}

type deploymentModePtr string

func DeploymentModePtr(v string) DeploymentModePtrInput {
	return (*deploymentModePtr)(&v)
}

func (*deploymentModePtr) ElementType() reflect.Type {
	return deploymentModePtrType
}

func (in *deploymentModePtr) ToDeploymentModePtrOutput() DeploymentModePtrOutput {
	return pulumi.ToOutput(in).(DeploymentModePtrOutput)
}

func (in *deploymentModePtr) ToDeploymentModePtrOutputWithContext(ctx context.Context) DeploymentModePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DeploymentModePtrOutput)
}

// The directory type.
type DirectoryType string

const (
	DirectoryTypeActiveDirectory = DirectoryType("ActiveDirectory")
)

func (DirectoryType) ElementType() reflect.Type {
	return reflect.TypeOf((*DirectoryType)(nil)).Elem()
}

func (e DirectoryType) ToDirectoryTypeOutput() DirectoryTypeOutput {
	return pulumi.ToOutput(e).(DirectoryTypeOutput)
}

func (e DirectoryType) ToDirectoryTypeOutputWithContext(ctx context.Context) DirectoryTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DirectoryTypeOutput)
}

func (e DirectoryType) ToDirectoryTypePtrOutput() DirectoryTypePtrOutput {
	return e.ToDirectoryTypePtrOutputWithContext(context.Background())
}

func (e DirectoryType) ToDirectoryTypePtrOutputWithContext(ctx context.Context) DirectoryTypePtrOutput {
	return DirectoryType(e).ToDirectoryTypeOutputWithContext(ctx).ToDirectoryTypePtrOutputWithContext(ctx)
}

func (e DirectoryType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DirectoryType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DirectoryType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DirectoryType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DirectoryTypeOutput struct{ *pulumi.OutputState }

func (DirectoryTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DirectoryType)(nil)).Elem()
}

func (o DirectoryTypeOutput) ToDirectoryTypeOutput() DirectoryTypeOutput {
	return o
}

func (o DirectoryTypeOutput) ToDirectoryTypeOutputWithContext(ctx context.Context) DirectoryTypeOutput {
	return o
}

func (o DirectoryTypeOutput) ToDirectoryTypePtrOutput() DirectoryTypePtrOutput {
	return o.ToDirectoryTypePtrOutputWithContext(context.Background())
}

func (o DirectoryTypeOutput) ToDirectoryTypePtrOutputWithContext(ctx context.Context) DirectoryTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DirectoryType) *DirectoryType {
		return &v
	}).(DirectoryTypePtrOutput)
}

func (o DirectoryTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DirectoryTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DirectoryType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DirectoryTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DirectoryTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DirectoryType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DirectoryTypePtrOutput struct{ *pulumi.OutputState }

func (DirectoryTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DirectoryType)(nil)).Elem()
}

func (o DirectoryTypePtrOutput) ToDirectoryTypePtrOutput() DirectoryTypePtrOutput {
	return o
}

func (o DirectoryTypePtrOutput) ToDirectoryTypePtrOutputWithContext(ctx context.Context) DirectoryTypePtrOutput {
	return o
}

func (o DirectoryTypePtrOutput) Elem() DirectoryTypeOutput {
	return o.ApplyT(func(v *DirectoryType) DirectoryType {
		if v != nil {
			return *v
		}
		var ret DirectoryType
		return ret
	}).(DirectoryTypeOutput)
}

func (o DirectoryTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DirectoryTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DirectoryType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DirectoryTypeInput is an input type that accepts values of the DirectoryType enum
// A concrete instance of `DirectoryTypeInput` can be one of the following:
//
//	DirectoryTypeActiveDirectory
type DirectoryTypeInput interface {
	pulumi.Input

	ToDirectoryTypeOutput() DirectoryTypeOutput
	ToDirectoryTypeOutputWithContext(context.Context) DirectoryTypeOutput
}

var directoryTypePtrType = reflect.TypeOf((**DirectoryType)(nil)).Elem()

type DirectoryTypePtrInput interface {
	pulumi.Input

	ToDirectoryTypePtrOutput() DirectoryTypePtrOutput
	ToDirectoryTypePtrOutputWithContext(context.Context) DirectoryTypePtrOutput
}

type directoryTypePtr string

func DirectoryTypePtr(v string) DirectoryTypePtrInput {
	return (*directoryTypePtr)(&v)
}

func (*directoryTypePtr) ElementType() reflect.Type {
	return directoryTypePtrType
}

func (in *directoryTypePtr) ToDirectoryTypePtrOutput() DirectoryTypePtrOutput {
	return pulumi.ToOutput(in).(DirectoryTypePtrOutput)
}

func (in *directoryTypePtr) ToDirectoryTypePtrOutputWithContext(ctx context.Context) DirectoryTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DirectoryTypePtrOutput)
}

// Algorithm identifier for encryption, default RSA-OAEP.
type JsonWebKeyEncryptionAlgorithm string

const (
	JsonWebKeyEncryptionAlgorithm_RSA_OAEP     = JsonWebKeyEncryptionAlgorithm("RSA-OAEP")
	JsonWebKeyEncryptionAlgorithm_RSA_OAEP_256 = JsonWebKeyEncryptionAlgorithm("RSA-OAEP-256")
	JsonWebKeyEncryptionAlgorithm_RSA1_5       = JsonWebKeyEncryptionAlgorithm("RSA1_5")
)

func (JsonWebKeyEncryptionAlgorithm) ElementType() reflect.Type {
	return reflect.TypeOf((*JsonWebKeyEncryptionAlgorithm)(nil)).Elem()
}

func (e JsonWebKeyEncryptionAlgorithm) ToJsonWebKeyEncryptionAlgorithmOutput() JsonWebKeyEncryptionAlgorithmOutput {
	return pulumi.ToOutput(e).(JsonWebKeyEncryptionAlgorithmOutput)
}

func (e JsonWebKeyEncryptionAlgorithm) ToJsonWebKeyEncryptionAlgorithmOutputWithContext(ctx context.Context) JsonWebKeyEncryptionAlgorithmOutput {
	return pulumi.ToOutputWithContext(ctx, e).(JsonWebKeyEncryptionAlgorithmOutput)
}

func (e JsonWebKeyEncryptionAlgorithm) ToJsonWebKeyEncryptionAlgorithmPtrOutput() JsonWebKeyEncryptionAlgorithmPtrOutput {
	return e.ToJsonWebKeyEncryptionAlgorithmPtrOutputWithContext(context.Background())
}

func (e JsonWebKeyEncryptionAlgorithm) ToJsonWebKeyEncryptionAlgorithmPtrOutputWithContext(ctx context.Context) JsonWebKeyEncryptionAlgorithmPtrOutput {
	return JsonWebKeyEncryptionAlgorithm(e).ToJsonWebKeyEncryptionAlgorithmOutputWithContext(ctx).ToJsonWebKeyEncryptionAlgorithmPtrOutputWithContext(ctx)
}

func (e JsonWebKeyEncryptionAlgorithm) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e JsonWebKeyEncryptionAlgorithm) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e JsonWebKeyEncryptionAlgorithm) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e JsonWebKeyEncryptionAlgorithm) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type JsonWebKeyEncryptionAlgorithmOutput struct{ *pulumi.OutputState }

func (JsonWebKeyEncryptionAlgorithmOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JsonWebKeyEncryptionAlgorithm)(nil)).Elem()
}

func (o JsonWebKeyEncryptionAlgorithmOutput) ToJsonWebKeyEncryptionAlgorithmOutput() JsonWebKeyEncryptionAlgorithmOutput {
	return o
}

func (o JsonWebKeyEncryptionAlgorithmOutput) ToJsonWebKeyEncryptionAlgorithmOutputWithContext(ctx context.Context) JsonWebKeyEncryptionAlgorithmOutput {
	return o
}

func (o JsonWebKeyEncryptionAlgorithmOutput) ToJsonWebKeyEncryptionAlgorithmPtrOutput() JsonWebKeyEncryptionAlgorithmPtrOutput {
	return o.ToJsonWebKeyEncryptionAlgorithmPtrOutputWithContext(context.Background())
}

func (o JsonWebKeyEncryptionAlgorithmOutput) ToJsonWebKeyEncryptionAlgorithmPtrOutputWithContext(ctx context.Context) JsonWebKeyEncryptionAlgorithmPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v JsonWebKeyEncryptionAlgorithm) *JsonWebKeyEncryptionAlgorithm {
		return &v
	}).(JsonWebKeyEncryptionAlgorithmPtrOutput)
}

func (o JsonWebKeyEncryptionAlgorithmOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o JsonWebKeyEncryptionAlgorithmOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e JsonWebKeyEncryptionAlgorithm) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o JsonWebKeyEncryptionAlgorithmOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o JsonWebKeyEncryptionAlgorithmOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e JsonWebKeyEncryptionAlgorithm) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type JsonWebKeyEncryptionAlgorithmPtrOutput struct{ *pulumi.OutputState }

func (JsonWebKeyEncryptionAlgorithmPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**JsonWebKeyEncryptionAlgorithm)(nil)).Elem()
}

func (o JsonWebKeyEncryptionAlgorithmPtrOutput) ToJsonWebKeyEncryptionAlgorithmPtrOutput() JsonWebKeyEncryptionAlgorithmPtrOutput {
	return o
}

func (o JsonWebKeyEncryptionAlgorithmPtrOutput) ToJsonWebKeyEncryptionAlgorithmPtrOutputWithContext(ctx context.Context) JsonWebKeyEncryptionAlgorithmPtrOutput {
	return o
}

func (o JsonWebKeyEncryptionAlgorithmPtrOutput) Elem() JsonWebKeyEncryptionAlgorithmOutput {
	return o.ApplyT(func(v *JsonWebKeyEncryptionAlgorithm) JsonWebKeyEncryptionAlgorithm {
		if v != nil {
			return *v
		}
		var ret JsonWebKeyEncryptionAlgorithm
		return ret
	}).(JsonWebKeyEncryptionAlgorithmOutput)
}

func (o JsonWebKeyEncryptionAlgorithmPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o JsonWebKeyEncryptionAlgorithmPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *JsonWebKeyEncryptionAlgorithm) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// JsonWebKeyEncryptionAlgorithmInput is an input type that accepts values of the JsonWebKeyEncryptionAlgorithm enum
// A concrete instance of `JsonWebKeyEncryptionAlgorithmInput` can be one of the following:
//
//	JsonWebKeyEncryptionAlgorithm_RSA_OAEP
//	JsonWebKeyEncryptionAlgorithm_RSA_OAEP_256
//	JsonWebKeyEncryptionAlgorithm_RSA1_5
type JsonWebKeyEncryptionAlgorithmInput interface {
	pulumi.Input

	ToJsonWebKeyEncryptionAlgorithmOutput() JsonWebKeyEncryptionAlgorithmOutput
	ToJsonWebKeyEncryptionAlgorithmOutputWithContext(context.Context) JsonWebKeyEncryptionAlgorithmOutput
}

var jsonWebKeyEncryptionAlgorithmPtrType = reflect.TypeOf((**JsonWebKeyEncryptionAlgorithm)(nil)).Elem()

type JsonWebKeyEncryptionAlgorithmPtrInput interface {
	pulumi.Input

	ToJsonWebKeyEncryptionAlgorithmPtrOutput() JsonWebKeyEncryptionAlgorithmPtrOutput
	ToJsonWebKeyEncryptionAlgorithmPtrOutputWithContext(context.Context) JsonWebKeyEncryptionAlgorithmPtrOutput
}

type jsonWebKeyEncryptionAlgorithmPtr string

func JsonWebKeyEncryptionAlgorithmPtr(v string) JsonWebKeyEncryptionAlgorithmPtrInput {
	return (*jsonWebKeyEncryptionAlgorithmPtr)(&v)
}

func (*jsonWebKeyEncryptionAlgorithmPtr) ElementType() reflect.Type {
	return jsonWebKeyEncryptionAlgorithmPtrType
}

func (in *jsonWebKeyEncryptionAlgorithmPtr) ToJsonWebKeyEncryptionAlgorithmPtrOutput() JsonWebKeyEncryptionAlgorithmPtrOutput {
	return pulumi.ToOutput(in).(JsonWebKeyEncryptionAlgorithmPtrOutput)
}

func (in *jsonWebKeyEncryptionAlgorithmPtr) ToJsonWebKeyEncryptionAlgorithmPtrOutputWithContext(ctx context.Context) JsonWebKeyEncryptionAlgorithmPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(JsonWebKeyEncryptionAlgorithmPtrOutput)
}

// Type of key vault object: secret, key or certificate.
type KeyVaultObjectType string

const (
	KeyVaultObjectTypeKey         = KeyVaultObjectType("Key")
	KeyVaultObjectTypeSecret      = KeyVaultObjectType("Secret")
	KeyVaultObjectTypeCertificate = KeyVaultObjectType("Certificate")
)

func (KeyVaultObjectType) ElementType() reflect.Type {
	return reflect.TypeOf((*KeyVaultObjectType)(nil)).Elem()
}

func (e KeyVaultObjectType) ToKeyVaultObjectTypeOutput() KeyVaultObjectTypeOutput {
	return pulumi.ToOutput(e).(KeyVaultObjectTypeOutput)
}

func (e KeyVaultObjectType) ToKeyVaultObjectTypeOutputWithContext(ctx context.Context) KeyVaultObjectTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(KeyVaultObjectTypeOutput)
}

func (e KeyVaultObjectType) ToKeyVaultObjectTypePtrOutput() KeyVaultObjectTypePtrOutput {
	return e.ToKeyVaultObjectTypePtrOutputWithContext(context.Background())
}

func (e KeyVaultObjectType) ToKeyVaultObjectTypePtrOutputWithContext(ctx context.Context) KeyVaultObjectTypePtrOutput {
	return KeyVaultObjectType(e).ToKeyVaultObjectTypeOutputWithContext(ctx).ToKeyVaultObjectTypePtrOutputWithContext(ctx)
}

func (e KeyVaultObjectType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e KeyVaultObjectType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e KeyVaultObjectType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e KeyVaultObjectType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type KeyVaultObjectTypeOutput struct{ *pulumi.OutputState }

func (KeyVaultObjectTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KeyVaultObjectType)(nil)).Elem()
}

func (o KeyVaultObjectTypeOutput) ToKeyVaultObjectTypeOutput() KeyVaultObjectTypeOutput {
	return o
}

func (o KeyVaultObjectTypeOutput) ToKeyVaultObjectTypeOutputWithContext(ctx context.Context) KeyVaultObjectTypeOutput {
	return o
}

func (o KeyVaultObjectTypeOutput) ToKeyVaultObjectTypePtrOutput() KeyVaultObjectTypePtrOutput {
	return o.ToKeyVaultObjectTypePtrOutputWithContext(context.Background())
}

func (o KeyVaultObjectTypeOutput) ToKeyVaultObjectTypePtrOutputWithContext(ctx context.Context) KeyVaultObjectTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KeyVaultObjectType) *KeyVaultObjectType {
		return &v
	}).(KeyVaultObjectTypePtrOutput)
}

func (o KeyVaultObjectTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o KeyVaultObjectTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e KeyVaultObjectType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o KeyVaultObjectTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o KeyVaultObjectTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e KeyVaultObjectType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type KeyVaultObjectTypePtrOutput struct{ *pulumi.OutputState }

func (KeyVaultObjectTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KeyVaultObjectType)(nil)).Elem()
}

func (o KeyVaultObjectTypePtrOutput) ToKeyVaultObjectTypePtrOutput() KeyVaultObjectTypePtrOutput {
	return o
}

func (o KeyVaultObjectTypePtrOutput) ToKeyVaultObjectTypePtrOutputWithContext(ctx context.Context) KeyVaultObjectTypePtrOutput {
	return o
}

func (o KeyVaultObjectTypePtrOutput) Elem() KeyVaultObjectTypeOutput {
	return o.ApplyT(func(v *KeyVaultObjectType) KeyVaultObjectType {
		if v != nil {
			return *v
		}
		var ret KeyVaultObjectType
		return ret
	}).(KeyVaultObjectTypeOutput)
}

func (o KeyVaultObjectTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o KeyVaultObjectTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *KeyVaultObjectType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// KeyVaultObjectTypeInput is an input type that accepts values of the KeyVaultObjectType enum
// A concrete instance of `KeyVaultObjectTypeInput` can be one of the following:
//
//	KeyVaultObjectTypeKey
//	KeyVaultObjectTypeSecret
//	KeyVaultObjectTypeCertificate
type KeyVaultObjectTypeInput interface {
	pulumi.Input

	ToKeyVaultObjectTypeOutput() KeyVaultObjectTypeOutput
	ToKeyVaultObjectTypeOutputWithContext(context.Context) KeyVaultObjectTypeOutput
}

var keyVaultObjectTypePtrType = reflect.TypeOf((**KeyVaultObjectType)(nil)).Elem()

type KeyVaultObjectTypePtrInput interface {
	pulumi.Input

	ToKeyVaultObjectTypePtrOutput() KeyVaultObjectTypePtrOutput
	ToKeyVaultObjectTypePtrOutputWithContext(context.Context) KeyVaultObjectTypePtrOutput
}

type keyVaultObjectTypePtr string

func KeyVaultObjectTypePtr(v string) KeyVaultObjectTypePtrInput {
	return (*keyVaultObjectTypePtr)(&v)
}

func (*keyVaultObjectTypePtr) ElementType() reflect.Type {
	return keyVaultObjectTypePtrType
}

func (in *keyVaultObjectTypePtr) ToKeyVaultObjectTypePtrOutput() KeyVaultObjectTypePtrOutput {
	return pulumi.ToOutput(in).(KeyVaultObjectTypePtrOutput)
}

func (in *keyVaultObjectTypePtr) ToKeyVaultObjectTypePtrOutputWithContext(ctx context.Context) KeyVaultObjectTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(KeyVaultObjectTypePtrOutput)
}

// The type of managed identity.
type ManagedIdentityType string

const (
	ManagedIdentityTypeCluster  = ManagedIdentityType("cluster")
	ManagedIdentityTypeUser     = ManagedIdentityType("user")
	ManagedIdentityTypeInternal = ManagedIdentityType("internal")
)

func (ManagedIdentityType) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedIdentityType)(nil)).Elem()
}

func (e ManagedIdentityType) ToManagedIdentityTypeOutput() ManagedIdentityTypeOutput {
	return pulumi.ToOutput(e).(ManagedIdentityTypeOutput)
}

func (e ManagedIdentityType) ToManagedIdentityTypeOutputWithContext(ctx context.Context) ManagedIdentityTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ManagedIdentityTypeOutput)
}

func (e ManagedIdentityType) ToManagedIdentityTypePtrOutput() ManagedIdentityTypePtrOutput {
	return e.ToManagedIdentityTypePtrOutputWithContext(context.Background())
}

func (e ManagedIdentityType) ToManagedIdentityTypePtrOutputWithContext(ctx context.Context) ManagedIdentityTypePtrOutput {
	return ManagedIdentityType(e).ToManagedIdentityTypeOutputWithContext(ctx).ToManagedIdentityTypePtrOutputWithContext(ctx)
}

func (e ManagedIdentityType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ManagedIdentityType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ManagedIdentityType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ManagedIdentityType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ManagedIdentityTypeOutput struct{ *pulumi.OutputState }

func (ManagedIdentityTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedIdentityType)(nil)).Elem()
}

func (o ManagedIdentityTypeOutput) ToManagedIdentityTypeOutput() ManagedIdentityTypeOutput {
	return o
}

func (o ManagedIdentityTypeOutput) ToManagedIdentityTypeOutputWithContext(ctx context.Context) ManagedIdentityTypeOutput {
	return o
}

func (o ManagedIdentityTypeOutput) ToManagedIdentityTypePtrOutput() ManagedIdentityTypePtrOutput {
	return o.ToManagedIdentityTypePtrOutputWithContext(context.Background())
}

func (o ManagedIdentityTypeOutput) ToManagedIdentityTypePtrOutputWithContext(ctx context.Context) ManagedIdentityTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ManagedIdentityType) *ManagedIdentityType {
		return &v
	}).(ManagedIdentityTypePtrOutput)
}

func (o ManagedIdentityTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ManagedIdentityTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ManagedIdentityType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ManagedIdentityTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ManagedIdentityTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ManagedIdentityType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ManagedIdentityTypePtrOutput struct{ *pulumi.OutputState }

func (ManagedIdentityTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedIdentityType)(nil)).Elem()
}

func (o ManagedIdentityTypePtrOutput) ToManagedIdentityTypePtrOutput() ManagedIdentityTypePtrOutput {
	return o
}

func (o ManagedIdentityTypePtrOutput) ToManagedIdentityTypePtrOutputWithContext(ctx context.Context) ManagedIdentityTypePtrOutput {
	return o
}

func (o ManagedIdentityTypePtrOutput) Elem() ManagedIdentityTypeOutput {
	return o.ApplyT(func(v *ManagedIdentityType) ManagedIdentityType {
		if v != nil {
			return *v
		}
		var ret ManagedIdentityType
		return ret
	}).(ManagedIdentityTypeOutput)
}

func (o ManagedIdentityTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ManagedIdentityTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ManagedIdentityType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ManagedIdentityTypeInput is an input type that accepts values of the ManagedIdentityType enum
// A concrete instance of `ManagedIdentityTypeInput` can be one of the following:
//
//	ManagedIdentityTypeCluster
//	ManagedIdentityTypeUser
//	ManagedIdentityTypeInternal
type ManagedIdentityTypeInput interface {
	pulumi.Input

	ToManagedIdentityTypeOutput() ManagedIdentityTypeOutput
	ToManagedIdentityTypeOutputWithContext(context.Context) ManagedIdentityTypeOutput
}

var managedIdentityTypePtrType = reflect.TypeOf((**ManagedIdentityType)(nil)).Elem()

type ManagedIdentityTypePtrInput interface {
	pulumi.Input

	ToManagedIdentityTypePtrOutput() ManagedIdentityTypePtrOutput
	ToManagedIdentityTypePtrOutputWithContext(context.Context) ManagedIdentityTypePtrOutput
}

type managedIdentityTypePtr string

func ManagedIdentityTypePtr(v string) ManagedIdentityTypePtrInput {
	return (*managedIdentityTypePtr)(&v)
}

func (*managedIdentityTypePtr) ElementType() reflect.Type {
	return managedIdentityTypePtrType
}

func (in *managedIdentityTypePtr) ToManagedIdentityTypePtrOutput() ManagedIdentityTypePtrOutput {
	return pulumi.ToOutput(in).(ManagedIdentityTypePtrOutput)
}

func (in *managedIdentityTypePtr) ToManagedIdentityTypePtrOutputWithContext(ctx context.Context) ManagedIdentityTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ManagedIdentityTypePtrOutput)
}

// The authentication mode to connect to your Hive metastore database. More details: https://learn.microsoft.com/en-us/azure/azure-sql/database/logins-create-manage?view=azuresql#authentication-and-authorization
type MetastoreDbConnectionAuthenticationMode string

const (
	// The password-based authentication to connect to your Hive metastore database.
	MetastoreDbConnectionAuthenticationModeSqlAuth = MetastoreDbConnectionAuthenticationMode("SqlAuth")
	// The managed-identity-based authentication to connect to your Hive metastore database.
	MetastoreDbConnectionAuthenticationModeIdentityAuth = MetastoreDbConnectionAuthenticationMode("IdentityAuth")
)

func (MetastoreDbConnectionAuthenticationMode) ElementType() reflect.Type {
	return reflect.TypeOf((*MetastoreDbConnectionAuthenticationMode)(nil)).Elem()
}

func (e MetastoreDbConnectionAuthenticationMode) ToMetastoreDbConnectionAuthenticationModeOutput() MetastoreDbConnectionAuthenticationModeOutput {
	return pulumi.ToOutput(e).(MetastoreDbConnectionAuthenticationModeOutput)
}

func (e MetastoreDbConnectionAuthenticationMode) ToMetastoreDbConnectionAuthenticationModeOutputWithContext(ctx context.Context) MetastoreDbConnectionAuthenticationModeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(MetastoreDbConnectionAuthenticationModeOutput)
}

func (e MetastoreDbConnectionAuthenticationMode) ToMetastoreDbConnectionAuthenticationModePtrOutput() MetastoreDbConnectionAuthenticationModePtrOutput {
	return e.ToMetastoreDbConnectionAuthenticationModePtrOutputWithContext(context.Background())
}

func (e MetastoreDbConnectionAuthenticationMode) ToMetastoreDbConnectionAuthenticationModePtrOutputWithContext(ctx context.Context) MetastoreDbConnectionAuthenticationModePtrOutput {
	return MetastoreDbConnectionAuthenticationMode(e).ToMetastoreDbConnectionAuthenticationModeOutputWithContext(ctx).ToMetastoreDbConnectionAuthenticationModePtrOutputWithContext(ctx)
}

func (e MetastoreDbConnectionAuthenticationMode) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e MetastoreDbConnectionAuthenticationMode) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e MetastoreDbConnectionAuthenticationMode) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e MetastoreDbConnectionAuthenticationMode) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type MetastoreDbConnectionAuthenticationModeOutput struct{ *pulumi.OutputState }

func (MetastoreDbConnectionAuthenticationModeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MetastoreDbConnectionAuthenticationMode)(nil)).Elem()
}

func (o MetastoreDbConnectionAuthenticationModeOutput) ToMetastoreDbConnectionAuthenticationModeOutput() MetastoreDbConnectionAuthenticationModeOutput {
	return o
}

func (o MetastoreDbConnectionAuthenticationModeOutput) ToMetastoreDbConnectionAuthenticationModeOutputWithContext(ctx context.Context) MetastoreDbConnectionAuthenticationModeOutput {
	return o
}

func (o MetastoreDbConnectionAuthenticationModeOutput) ToMetastoreDbConnectionAuthenticationModePtrOutput() MetastoreDbConnectionAuthenticationModePtrOutput {
	return o.ToMetastoreDbConnectionAuthenticationModePtrOutputWithContext(context.Background())
}

func (o MetastoreDbConnectionAuthenticationModeOutput) ToMetastoreDbConnectionAuthenticationModePtrOutputWithContext(ctx context.Context) MetastoreDbConnectionAuthenticationModePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MetastoreDbConnectionAuthenticationMode) *MetastoreDbConnectionAuthenticationMode {
		return &v
	}).(MetastoreDbConnectionAuthenticationModePtrOutput)
}

func (o MetastoreDbConnectionAuthenticationModeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o MetastoreDbConnectionAuthenticationModeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e MetastoreDbConnectionAuthenticationMode) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o MetastoreDbConnectionAuthenticationModeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o MetastoreDbConnectionAuthenticationModeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e MetastoreDbConnectionAuthenticationMode) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type MetastoreDbConnectionAuthenticationModePtrOutput struct{ *pulumi.OutputState }

func (MetastoreDbConnectionAuthenticationModePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MetastoreDbConnectionAuthenticationMode)(nil)).Elem()
}

func (o MetastoreDbConnectionAuthenticationModePtrOutput) ToMetastoreDbConnectionAuthenticationModePtrOutput() MetastoreDbConnectionAuthenticationModePtrOutput {
	return o
}

func (o MetastoreDbConnectionAuthenticationModePtrOutput) ToMetastoreDbConnectionAuthenticationModePtrOutputWithContext(ctx context.Context) MetastoreDbConnectionAuthenticationModePtrOutput {
	return o
}

func (o MetastoreDbConnectionAuthenticationModePtrOutput) Elem() MetastoreDbConnectionAuthenticationModeOutput {
	return o.ApplyT(func(v *MetastoreDbConnectionAuthenticationMode) MetastoreDbConnectionAuthenticationMode {
		if v != nil {
			return *v
		}
		var ret MetastoreDbConnectionAuthenticationMode
		return ret
	}).(MetastoreDbConnectionAuthenticationModeOutput)
}

func (o MetastoreDbConnectionAuthenticationModePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o MetastoreDbConnectionAuthenticationModePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *MetastoreDbConnectionAuthenticationMode) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// MetastoreDbConnectionAuthenticationModeInput is an input type that accepts values of the MetastoreDbConnectionAuthenticationMode enum
// A concrete instance of `MetastoreDbConnectionAuthenticationModeInput` can be one of the following:
//
//	MetastoreDbConnectionAuthenticationModeSqlAuth
//	MetastoreDbConnectionAuthenticationModeIdentityAuth
type MetastoreDbConnectionAuthenticationModeInput interface {
	pulumi.Input

	ToMetastoreDbConnectionAuthenticationModeOutput() MetastoreDbConnectionAuthenticationModeOutput
	ToMetastoreDbConnectionAuthenticationModeOutputWithContext(context.Context) MetastoreDbConnectionAuthenticationModeOutput
}

var metastoreDbConnectionAuthenticationModePtrType = reflect.TypeOf((**MetastoreDbConnectionAuthenticationMode)(nil)).Elem()

type MetastoreDbConnectionAuthenticationModePtrInput interface {
	pulumi.Input

	ToMetastoreDbConnectionAuthenticationModePtrOutput() MetastoreDbConnectionAuthenticationModePtrOutput
	ToMetastoreDbConnectionAuthenticationModePtrOutputWithContext(context.Context) MetastoreDbConnectionAuthenticationModePtrOutput
}

type metastoreDbConnectionAuthenticationModePtr string

func MetastoreDbConnectionAuthenticationModePtr(v string) MetastoreDbConnectionAuthenticationModePtrInput {
	return (*metastoreDbConnectionAuthenticationModePtr)(&v)
}

func (*metastoreDbConnectionAuthenticationModePtr) ElementType() reflect.Type {
	return metastoreDbConnectionAuthenticationModePtrType
}

func (in *metastoreDbConnectionAuthenticationModePtr) ToMetastoreDbConnectionAuthenticationModePtrOutput() MetastoreDbConnectionAuthenticationModePtrOutput {
	return pulumi.ToOutput(in).(MetastoreDbConnectionAuthenticationModePtrOutput)
}

func (in *metastoreDbConnectionAuthenticationModePtr) ToMetastoreDbConnectionAuthenticationModePtrOutputWithContext(ctx context.Context) MetastoreDbConnectionAuthenticationModePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(MetastoreDbConnectionAuthenticationModePtrOutput)
}

// The type of operating system.
type OSType string

const (
	OSTypeWindows = OSType("Windows")
	OSTypeLinux   = OSType("Linux")
)

func (OSType) ElementType() reflect.Type {
	return reflect.TypeOf((*OSType)(nil)).Elem()
}

func (e OSType) ToOSTypeOutput() OSTypeOutput {
	return pulumi.ToOutput(e).(OSTypeOutput)
}

func (e OSType) ToOSTypeOutputWithContext(ctx context.Context) OSTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(OSTypeOutput)
}

func (e OSType) ToOSTypePtrOutput() OSTypePtrOutput {
	return e.ToOSTypePtrOutputWithContext(context.Background())
}

func (e OSType) ToOSTypePtrOutputWithContext(ctx context.Context) OSTypePtrOutput {
	return OSType(e).ToOSTypeOutputWithContext(ctx).ToOSTypePtrOutputWithContext(ctx)
}

func (e OSType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e OSType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e OSType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e OSType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type OSTypeOutput struct{ *pulumi.OutputState }

func (OSTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OSType)(nil)).Elem()
}

func (o OSTypeOutput) ToOSTypeOutput() OSTypeOutput {
	return o
}

func (o OSTypeOutput) ToOSTypeOutputWithContext(ctx context.Context) OSTypeOutput {
	return o
}

func (o OSTypeOutput) ToOSTypePtrOutput() OSTypePtrOutput {
	return o.ToOSTypePtrOutputWithContext(context.Background())
}

func (o OSTypeOutput) ToOSTypePtrOutputWithContext(ctx context.Context) OSTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OSType) *OSType {
		return &v
	}).(OSTypePtrOutput)
}

func (o OSTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o OSTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e OSType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o OSTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o OSTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e OSType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type OSTypePtrOutput struct{ *pulumi.OutputState }

func (OSTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OSType)(nil)).Elem()
}

func (o OSTypePtrOutput) ToOSTypePtrOutput() OSTypePtrOutput {
	return o
}

func (o OSTypePtrOutput) ToOSTypePtrOutputWithContext(ctx context.Context) OSTypePtrOutput {
	return o
}

func (o OSTypePtrOutput) Elem() OSTypeOutput {
	return o.ApplyT(func(v *OSType) OSType {
		if v != nil {
			return *v
		}
		var ret OSType
		return ret
	}).(OSTypeOutput)
}

func (o OSTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o OSTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *OSType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// OSTypeInput is an input type that accepts values of the OSType enum
// A concrete instance of `OSTypeInput` can be one of the following:
//
//	OSTypeWindows
//	OSTypeLinux
type OSTypeInput interface {
	pulumi.Input

	ToOSTypeOutput() OSTypeOutput
	ToOSTypeOutputWithContext(context.Context) OSTypeOutput
}

var ostypePtrType = reflect.TypeOf((**OSType)(nil)).Elem()

type OSTypePtrInput interface {
	pulumi.Input

	ToOSTypePtrOutput() OSTypePtrOutput
	ToOSTypePtrOutputWithContext(context.Context) OSTypePtrOutput
}

type ostypePtr string

func OSTypePtr(v string) OSTypePtrInput {
	return (*ostypePtr)(&v)
}

func (*ostypePtr) ElementType() reflect.Type {
	return ostypePtrType
}

func (in *ostypePtr) ToOSTypePtrOutput() OSTypePtrOutput {
	return pulumi.ToOutput(in).(OSTypePtrOutput)
}

func (in *ostypePtr) ToOSTypePtrOutputWithContext(ctx context.Context) OSTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(OSTypePtrOutput)
}

// A value to describe how the outbound dependencies of a HDInsight cluster are managed. 'Managed' means that the outbound dependencies are managed by the HDInsight service. 'External' means that the outbound dependencies are managed by a customer specific solution.
type OutboundDependenciesManagedType string

const (
	OutboundDependenciesManagedTypeManaged  = OutboundDependenciesManagedType("Managed")
	OutboundDependenciesManagedTypeExternal = OutboundDependenciesManagedType("External")
)

func (OutboundDependenciesManagedType) ElementType() reflect.Type {
	return reflect.TypeOf((*OutboundDependenciesManagedType)(nil)).Elem()
}

func (e OutboundDependenciesManagedType) ToOutboundDependenciesManagedTypeOutput() OutboundDependenciesManagedTypeOutput {
	return pulumi.ToOutput(e).(OutboundDependenciesManagedTypeOutput)
}

func (e OutboundDependenciesManagedType) ToOutboundDependenciesManagedTypeOutputWithContext(ctx context.Context) OutboundDependenciesManagedTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(OutboundDependenciesManagedTypeOutput)
}

func (e OutboundDependenciesManagedType) ToOutboundDependenciesManagedTypePtrOutput() OutboundDependenciesManagedTypePtrOutput {
	return e.ToOutboundDependenciesManagedTypePtrOutputWithContext(context.Background())
}

func (e OutboundDependenciesManagedType) ToOutboundDependenciesManagedTypePtrOutputWithContext(ctx context.Context) OutboundDependenciesManagedTypePtrOutput {
	return OutboundDependenciesManagedType(e).ToOutboundDependenciesManagedTypeOutputWithContext(ctx).ToOutboundDependenciesManagedTypePtrOutputWithContext(ctx)
}

func (e OutboundDependenciesManagedType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e OutboundDependenciesManagedType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e OutboundDependenciesManagedType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e OutboundDependenciesManagedType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type OutboundDependenciesManagedTypeOutput struct{ *pulumi.OutputState }

func (OutboundDependenciesManagedTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OutboundDependenciesManagedType)(nil)).Elem()
}

func (o OutboundDependenciesManagedTypeOutput) ToOutboundDependenciesManagedTypeOutput() OutboundDependenciesManagedTypeOutput {
	return o
}

func (o OutboundDependenciesManagedTypeOutput) ToOutboundDependenciesManagedTypeOutputWithContext(ctx context.Context) OutboundDependenciesManagedTypeOutput {
	return o
}

func (o OutboundDependenciesManagedTypeOutput) ToOutboundDependenciesManagedTypePtrOutput() OutboundDependenciesManagedTypePtrOutput {
	return o.ToOutboundDependenciesManagedTypePtrOutputWithContext(context.Background())
}

func (o OutboundDependenciesManagedTypeOutput) ToOutboundDependenciesManagedTypePtrOutputWithContext(ctx context.Context) OutboundDependenciesManagedTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OutboundDependenciesManagedType) *OutboundDependenciesManagedType {
		return &v
	}).(OutboundDependenciesManagedTypePtrOutput)
}

func (o OutboundDependenciesManagedTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o OutboundDependenciesManagedTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e OutboundDependenciesManagedType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o OutboundDependenciesManagedTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o OutboundDependenciesManagedTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e OutboundDependenciesManagedType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type OutboundDependenciesManagedTypePtrOutput struct{ *pulumi.OutputState }

func (OutboundDependenciesManagedTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OutboundDependenciesManagedType)(nil)).Elem()
}

func (o OutboundDependenciesManagedTypePtrOutput) ToOutboundDependenciesManagedTypePtrOutput() OutboundDependenciesManagedTypePtrOutput {
	return o
}

func (o OutboundDependenciesManagedTypePtrOutput) ToOutboundDependenciesManagedTypePtrOutputWithContext(ctx context.Context) OutboundDependenciesManagedTypePtrOutput {
	return o
}

func (o OutboundDependenciesManagedTypePtrOutput) Elem() OutboundDependenciesManagedTypeOutput {
	return o.ApplyT(func(v *OutboundDependenciesManagedType) OutboundDependenciesManagedType {
		if v != nil {
			return *v
		}
		var ret OutboundDependenciesManagedType
		return ret
	}).(OutboundDependenciesManagedTypeOutput)
}

func (o OutboundDependenciesManagedTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o OutboundDependenciesManagedTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *OutboundDependenciesManagedType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// OutboundDependenciesManagedTypeInput is an input type that accepts values of the OutboundDependenciesManagedType enum
// A concrete instance of `OutboundDependenciesManagedTypeInput` can be one of the following:
//
//	OutboundDependenciesManagedTypeManaged
//	OutboundDependenciesManagedTypeExternal
type OutboundDependenciesManagedTypeInput interface {
	pulumi.Input

	ToOutboundDependenciesManagedTypeOutput() OutboundDependenciesManagedTypeOutput
	ToOutboundDependenciesManagedTypeOutputWithContext(context.Context) OutboundDependenciesManagedTypeOutput
}

var outboundDependenciesManagedTypePtrType = reflect.TypeOf((**OutboundDependenciesManagedType)(nil)).Elem()

type OutboundDependenciesManagedTypePtrInput interface {
	pulumi.Input

	ToOutboundDependenciesManagedTypePtrOutput() OutboundDependenciesManagedTypePtrOutput
	ToOutboundDependenciesManagedTypePtrOutputWithContext(context.Context) OutboundDependenciesManagedTypePtrOutput
}

type outboundDependenciesManagedTypePtr string

func OutboundDependenciesManagedTypePtr(v string) OutboundDependenciesManagedTypePtrInput {
	return (*outboundDependenciesManagedTypePtr)(&v)
}

func (*outboundDependenciesManagedTypePtr) ElementType() reflect.Type {
	return outboundDependenciesManagedTypePtrType
}

func (in *outboundDependenciesManagedTypePtr) ToOutboundDependenciesManagedTypePtrOutput() OutboundDependenciesManagedTypePtrOutput {
	return pulumi.ToOutput(in).(OutboundDependenciesManagedTypePtrOutput)
}

func (in *outboundDependenciesManagedTypePtr) ToOutboundDependenciesManagedTypePtrOutputWithContext(ctx context.Context) OutboundDependenciesManagedTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(OutboundDependenciesManagedTypePtrOutput)
}

// This can only be set at cluster pool creation time and cannot be changed later.
type OutboundType string

const (
	// The load balancer is used for egress through an AKS assigned public IP. This supports Kubernetes services of type 'loadBalancer'.
	OutboundTypeLoadBalancer = OutboundType("loadBalancer")
	// Egress paths must be defined by the user. This is an advanced scenario and requires proper network configuration.
	OutboundTypeUserDefinedRouting = OutboundType("userDefinedRouting")
)

func (OutboundType) ElementType() reflect.Type {
	return reflect.TypeOf((*OutboundType)(nil)).Elem()
}

func (e OutboundType) ToOutboundTypeOutput() OutboundTypeOutput {
	return pulumi.ToOutput(e).(OutboundTypeOutput)
}

func (e OutboundType) ToOutboundTypeOutputWithContext(ctx context.Context) OutboundTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(OutboundTypeOutput)
}

func (e OutboundType) ToOutboundTypePtrOutput() OutboundTypePtrOutput {
	return e.ToOutboundTypePtrOutputWithContext(context.Background())
}

func (e OutboundType) ToOutboundTypePtrOutputWithContext(ctx context.Context) OutboundTypePtrOutput {
	return OutboundType(e).ToOutboundTypeOutputWithContext(ctx).ToOutboundTypePtrOutputWithContext(ctx)
}

func (e OutboundType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e OutboundType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e OutboundType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e OutboundType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type OutboundTypeOutput struct{ *pulumi.OutputState }

func (OutboundTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OutboundType)(nil)).Elem()
}

func (o OutboundTypeOutput) ToOutboundTypeOutput() OutboundTypeOutput {
	return o
}

func (o OutboundTypeOutput) ToOutboundTypeOutputWithContext(ctx context.Context) OutboundTypeOutput {
	return o
}

func (o OutboundTypeOutput) ToOutboundTypePtrOutput() OutboundTypePtrOutput {
	return o.ToOutboundTypePtrOutputWithContext(context.Background())
}

func (o OutboundTypeOutput) ToOutboundTypePtrOutputWithContext(ctx context.Context) OutboundTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OutboundType) *OutboundType {
		return &v
	}).(OutboundTypePtrOutput)
}

func (o OutboundTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o OutboundTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e OutboundType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o OutboundTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o OutboundTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e OutboundType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type OutboundTypePtrOutput struct{ *pulumi.OutputState }

func (OutboundTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OutboundType)(nil)).Elem()
}

func (o OutboundTypePtrOutput) ToOutboundTypePtrOutput() OutboundTypePtrOutput {
	return o
}

func (o OutboundTypePtrOutput) ToOutboundTypePtrOutputWithContext(ctx context.Context) OutboundTypePtrOutput {
	return o
}

func (o OutboundTypePtrOutput) Elem() OutboundTypeOutput {
	return o.ApplyT(func(v *OutboundType) OutboundType {
		if v != nil {
			return *v
		}
		var ret OutboundType
		return ret
	}).(OutboundTypeOutput)
}

func (o OutboundTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o OutboundTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *OutboundType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// OutboundTypeInput is an input type that accepts values of the OutboundType enum
// A concrete instance of `OutboundTypeInput` can be one of the following:
//
//	OutboundTypeLoadBalancer
//	OutboundTypeUserDefinedRouting
type OutboundTypeInput interface {
	pulumi.Input

	ToOutboundTypeOutput() OutboundTypeOutput
	ToOutboundTypeOutputWithContext(context.Context) OutboundTypeOutput
}

var outboundTypePtrType = reflect.TypeOf((**OutboundType)(nil)).Elem()

type OutboundTypePtrInput interface {
	pulumi.Input

	ToOutboundTypePtrOutput() OutboundTypePtrOutput
	ToOutboundTypePtrOutputWithContext(context.Context) OutboundTypePtrOutput
}

type outboundTypePtr string

func OutboundTypePtr(v string) OutboundTypePtrInput {
	return (*outboundTypePtr)(&v)
}

func (*outboundTypePtr) ElementType() reflect.Type {
	return outboundTypePtrType
}

func (in *outboundTypePtr) ToOutboundTypePtrOutput() OutboundTypePtrOutput {
	return pulumi.ToOutput(in).(OutboundTypePtrOutput)
}

func (in *outboundTypePtr) ToOutboundTypePtrOutputWithContext(ctx context.Context) OutboundTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(OutboundTypePtrOutput)
}

// The method that private IP address is allocated.
type PrivateIPAllocationMethod string

const (
	PrivateIPAllocationMethodDynamic = PrivateIPAllocationMethod("dynamic")
	PrivateIPAllocationMethodStatic  = PrivateIPAllocationMethod("static")
)

func (PrivateIPAllocationMethod) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateIPAllocationMethod)(nil)).Elem()
}

func (e PrivateIPAllocationMethod) ToPrivateIPAllocationMethodOutput() PrivateIPAllocationMethodOutput {
	return pulumi.ToOutput(e).(PrivateIPAllocationMethodOutput)
}

func (e PrivateIPAllocationMethod) ToPrivateIPAllocationMethodOutputWithContext(ctx context.Context) PrivateIPAllocationMethodOutput {
	return pulumi.ToOutputWithContext(ctx, e).(PrivateIPAllocationMethodOutput)
}

func (e PrivateIPAllocationMethod) ToPrivateIPAllocationMethodPtrOutput() PrivateIPAllocationMethodPtrOutput {
	return e.ToPrivateIPAllocationMethodPtrOutputWithContext(context.Background())
}

func (e PrivateIPAllocationMethod) ToPrivateIPAllocationMethodPtrOutputWithContext(ctx context.Context) PrivateIPAllocationMethodPtrOutput {
	return PrivateIPAllocationMethod(e).ToPrivateIPAllocationMethodOutputWithContext(ctx).ToPrivateIPAllocationMethodPtrOutputWithContext(ctx)
}

func (e PrivateIPAllocationMethod) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e PrivateIPAllocationMethod) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e PrivateIPAllocationMethod) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e PrivateIPAllocationMethod) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type PrivateIPAllocationMethodOutput struct{ *pulumi.OutputState }

func (PrivateIPAllocationMethodOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateIPAllocationMethod)(nil)).Elem()
}

func (o PrivateIPAllocationMethodOutput) ToPrivateIPAllocationMethodOutput() PrivateIPAllocationMethodOutput {
	return o
}

func (o PrivateIPAllocationMethodOutput) ToPrivateIPAllocationMethodOutputWithContext(ctx context.Context) PrivateIPAllocationMethodOutput {
	return o
}

func (o PrivateIPAllocationMethodOutput) ToPrivateIPAllocationMethodPtrOutput() PrivateIPAllocationMethodPtrOutput {
	return o.ToPrivateIPAllocationMethodPtrOutputWithContext(context.Background())
}

func (o PrivateIPAllocationMethodOutput) ToPrivateIPAllocationMethodPtrOutputWithContext(ctx context.Context) PrivateIPAllocationMethodPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PrivateIPAllocationMethod) *PrivateIPAllocationMethod {
		return &v
	}).(PrivateIPAllocationMethodPtrOutput)
}

func (o PrivateIPAllocationMethodOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o PrivateIPAllocationMethodOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PrivateIPAllocationMethod) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o PrivateIPAllocationMethodOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PrivateIPAllocationMethodOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PrivateIPAllocationMethod) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type PrivateIPAllocationMethodPtrOutput struct{ *pulumi.OutputState }

func (PrivateIPAllocationMethodPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateIPAllocationMethod)(nil)).Elem()
}

func (o PrivateIPAllocationMethodPtrOutput) ToPrivateIPAllocationMethodPtrOutput() PrivateIPAllocationMethodPtrOutput {
	return o
}

func (o PrivateIPAllocationMethodPtrOutput) ToPrivateIPAllocationMethodPtrOutputWithContext(ctx context.Context) PrivateIPAllocationMethodPtrOutput {
	return o
}

func (o PrivateIPAllocationMethodPtrOutput) Elem() PrivateIPAllocationMethodOutput {
	return o.ApplyT(func(v *PrivateIPAllocationMethod) PrivateIPAllocationMethod {
		if v != nil {
			return *v
		}
		var ret PrivateIPAllocationMethod
		return ret
	}).(PrivateIPAllocationMethodOutput)
}

func (o PrivateIPAllocationMethodPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PrivateIPAllocationMethodPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *PrivateIPAllocationMethod) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// PrivateIPAllocationMethodInput is an input type that accepts values of the PrivateIPAllocationMethod enum
// A concrete instance of `PrivateIPAllocationMethodInput` can be one of the following:
//
//	PrivateIPAllocationMethodDynamic
//	PrivateIPAllocationMethodStatic
type PrivateIPAllocationMethodInput interface {
	pulumi.Input

	ToPrivateIPAllocationMethodOutput() PrivateIPAllocationMethodOutput
	ToPrivateIPAllocationMethodOutputWithContext(context.Context) PrivateIPAllocationMethodOutput
}

var privateIPAllocationMethodPtrType = reflect.TypeOf((**PrivateIPAllocationMethod)(nil)).Elem()

type PrivateIPAllocationMethodPtrInput interface {
	pulumi.Input

	ToPrivateIPAllocationMethodPtrOutput() PrivateIPAllocationMethodPtrOutput
	ToPrivateIPAllocationMethodPtrOutputWithContext(context.Context) PrivateIPAllocationMethodPtrOutput
}

type privateIPAllocationMethodPtr string

func PrivateIPAllocationMethodPtr(v string) PrivateIPAllocationMethodPtrInput {
	return (*privateIPAllocationMethodPtr)(&v)
}

func (*privateIPAllocationMethodPtr) ElementType() reflect.Type {
	return privateIPAllocationMethodPtrType
}

func (in *privateIPAllocationMethodPtr) ToPrivateIPAllocationMethodPtrOutput() PrivateIPAllocationMethodPtrOutput {
	return pulumi.ToOutput(in).(PrivateIPAllocationMethodPtrOutput)
}

func (in *privateIPAllocationMethodPtr) ToPrivateIPAllocationMethodPtrOutputWithContext(ctx context.Context) PrivateIPAllocationMethodPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(PrivateIPAllocationMethodPtrOutput)
}

// Indicates whether or not private link is enabled.
type PrivateLink string

const (
	PrivateLinkDisabled = PrivateLink("Disabled")
	PrivateLinkEnabled  = PrivateLink("Enabled")
)

func (PrivateLink) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLink)(nil)).Elem()
}

func (e PrivateLink) ToPrivateLinkOutput() PrivateLinkOutput {
	return pulumi.ToOutput(e).(PrivateLinkOutput)
}

func (e PrivateLink) ToPrivateLinkOutputWithContext(ctx context.Context) PrivateLinkOutput {
	return pulumi.ToOutputWithContext(ctx, e).(PrivateLinkOutput)
}

func (e PrivateLink) ToPrivateLinkPtrOutput() PrivateLinkPtrOutput {
	return e.ToPrivateLinkPtrOutputWithContext(context.Background())
}

func (e PrivateLink) ToPrivateLinkPtrOutputWithContext(ctx context.Context) PrivateLinkPtrOutput {
	return PrivateLink(e).ToPrivateLinkOutputWithContext(ctx).ToPrivateLinkPtrOutputWithContext(ctx)
}

func (e PrivateLink) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e PrivateLink) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e PrivateLink) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e PrivateLink) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type PrivateLinkOutput struct{ *pulumi.OutputState }

func (PrivateLinkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLink)(nil)).Elem()
}

func (o PrivateLinkOutput) ToPrivateLinkOutput() PrivateLinkOutput {
	return o
}

func (o PrivateLinkOutput) ToPrivateLinkOutputWithContext(ctx context.Context) PrivateLinkOutput {
	return o
}

func (o PrivateLinkOutput) ToPrivateLinkPtrOutput() PrivateLinkPtrOutput {
	return o.ToPrivateLinkPtrOutputWithContext(context.Background())
}

func (o PrivateLinkOutput) ToPrivateLinkPtrOutputWithContext(ctx context.Context) PrivateLinkPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PrivateLink) *PrivateLink {
		return &v
	}).(PrivateLinkPtrOutput)
}

func (o PrivateLinkOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o PrivateLinkOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PrivateLink) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o PrivateLinkOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PrivateLinkOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PrivateLink) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type PrivateLinkPtrOutput struct{ *pulumi.OutputState }

func (PrivateLinkPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateLink)(nil)).Elem()
}

func (o PrivateLinkPtrOutput) ToPrivateLinkPtrOutput() PrivateLinkPtrOutput {
	return o
}

func (o PrivateLinkPtrOutput) ToPrivateLinkPtrOutputWithContext(ctx context.Context) PrivateLinkPtrOutput {
	return o
}

func (o PrivateLinkPtrOutput) Elem() PrivateLinkOutput {
	return o.ApplyT(func(v *PrivateLink) PrivateLink {
		if v != nil {
			return *v
		}
		var ret PrivateLink
		return ret
	}).(PrivateLinkOutput)
}

func (o PrivateLinkPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PrivateLinkPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *PrivateLink) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// PrivateLinkInput is an input type that accepts values of the PrivateLink enum
// A concrete instance of `PrivateLinkInput` can be one of the following:
//
//	PrivateLinkDisabled
//	PrivateLinkEnabled
type PrivateLinkInput interface {
	pulumi.Input

	ToPrivateLinkOutput() PrivateLinkOutput
	ToPrivateLinkOutputWithContext(context.Context) PrivateLinkOutput
}

var privateLinkPtrType = reflect.TypeOf((**PrivateLink)(nil)).Elem()

type PrivateLinkPtrInput interface {
	pulumi.Input

	ToPrivateLinkPtrOutput() PrivateLinkPtrOutput
	ToPrivateLinkPtrOutputWithContext(context.Context) PrivateLinkPtrOutput
}

type privateLinkPtr string

func PrivateLinkPtr(v string) PrivateLinkPtrInput {
	return (*privateLinkPtr)(&v)
}

func (*privateLinkPtr) ElementType() reflect.Type {
	return privateLinkPtrType
}

func (in *privateLinkPtr) ToPrivateLinkPtrOutput() PrivateLinkPtrOutput {
	return pulumi.ToOutput(in).(PrivateLinkPtrOutput)
}

func (in *privateLinkPtr) ToPrivateLinkPtrOutputWithContext(ctx context.Context) PrivateLinkPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(PrivateLinkPtrOutput)
}

// The concrete private link service connection.
type PrivateLinkServiceConnectionStatus string

const (
	PrivateLinkServiceConnectionStatusApproved = PrivateLinkServiceConnectionStatus("Approved")
	PrivateLinkServiceConnectionStatusRejected = PrivateLinkServiceConnectionStatus("Rejected")
	PrivateLinkServiceConnectionStatusPending  = PrivateLinkServiceConnectionStatus("Pending")
	PrivateLinkServiceConnectionStatusRemoved  = PrivateLinkServiceConnectionStatus("Removed")
)

func (PrivateLinkServiceConnectionStatus) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkServiceConnectionStatus)(nil)).Elem()
}

func (e PrivateLinkServiceConnectionStatus) ToPrivateLinkServiceConnectionStatusOutput() PrivateLinkServiceConnectionStatusOutput {
	return pulumi.ToOutput(e).(PrivateLinkServiceConnectionStatusOutput)
}

func (e PrivateLinkServiceConnectionStatus) ToPrivateLinkServiceConnectionStatusOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionStatusOutput {
	return pulumi.ToOutputWithContext(ctx, e).(PrivateLinkServiceConnectionStatusOutput)
}

func (e PrivateLinkServiceConnectionStatus) ToPrivateLinkServiceConnectionStatusPtrOutput() PrivateLinkServiceConnectionStatusPtrOutput {
	return e.ToPrivateLinkServiceConnectionStatusPtrOutputWithContext(context.Background())
}

func (e PrivateLinkServiceConnectionStatus) ToPrivateLinkServiceConnectionStatusPtrOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionStatusPtrOutput {
	return PrivateLinkServiceConnectionStatus(e).ToPrivateLinkServiceConnectionStatusOutputWithContext(ctx).ToPrivateLinkServiceConnectionStatusPtrOutputWithContext(ctx)
}

func (e PrivateLinkServiceConnectionStatus) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e PrivateLinkServiceConnectionStatus) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e PrivateLinkServiceConnectionStatus) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e PrivateLinkServiceConnectionStatus) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type PrivateLinkServiceConnectionStatusOutput struct{ *pulumi.OutputState }

func (PrivateLinkServiceConnectionStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkServiceConnectionStatus)(nil)).Elem()
}

func (o PrivateLinkServiceConnectionStatusOutput) ToPrivateLinkServiceConnectionStatusOutput() PrivateLinkServiceConnectionStatusOutput {
	return o
}

func (o PrivateLinkServiceConnectionStatusOutput) ToPrivateLinkServiceConnectionStatusOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionStatusOutput {
	return o
}

func (o PrivateLinkServiceConnectionStatusOutput) ToPrivateLinkServiceConnectionStatusPtrOutput() PrivateLinkServiceConnectionStatusPtrOutput {
	return o.ToPrivateLinkServiceConnectionStatusPtrOutputWithContext(context.Background())
}

func (o PrivateLinkServiceConnectionStatusOutput) ToPrivateLinkServiceConnectionStatusPtrOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PrivateLinkServiceConnectionStatus) *PrivateLinkServiceConnectionStatus {
		return &v
	}).(PrivateLinkServiceConnectionStatusPtrOutput)
}

func (o PrivateLinkServiceConnectionStatusOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o PrivateLinkServiceConnectionStatusOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PrivateLinkServiceConnectionStatus) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o PrivateLinkServiceConnectionStatusOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PrivateLinkServiceConnectionStatusOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PrivateLinkServiceConnectionStatus) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type PrivateLinkServiceConnectionStatusPtrOutput struct{ *pulumi.OutputState }

func (PrivateLinkServiceConnectionStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateLinkServiceConnectionStatus)(nil)).Elem()
}

func (o PrivateLinkServiceConnectionStatusPtrOutput) ToPrivateLinkServiceConnectionStatusPtrOutput() PrivateLinkServiceConnectionStatusPtrOutput {
	return o
}

func (o PrivateLinkServiceConnectionStatusPtrOutput) ToPrivateLinkServiceConnectionStatusPtrOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionStatusPtrOutput {
	return o
}

func (o PrivateLinkServiceConnectionStatusPtrOutput) Elem() PrivateLinkServiceConnectionStatusOutput {
	return o.ApplyT(func(v *PrivateLinkServiceConnectionStatus) PrivateLinkServiceConnectionStatus {
		if v != nil {
			return *v
		}
		var ret PrivateLinkServiceConnectionStatus
		return ret
	}).(PrivateLinkServiceConnectionStatusOutput)
}

func (o PrivateLinkServiceConnectionStatusPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PrivateLinkServiceConnectionStatusPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *PrivateLinkServiceConnectionStatus) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// PrivateLinkServiceConnectionStatusInput is an input type that accepts values of the PrivateLinkServiceConnectionStatus enum
// A concrete instance of `PrivateLinkServiceConnectionStatusInput` can be one of the following:
//
//	PrivateLinkServiceConnectionStatusApproved
//	PrivateLinkServiceConnectionStatusRejected
//	PrivateLinkServiceConnectionStatusPending
//	PrivateLinkServiceConnectionStatusRemoved
type PrivateLinkServiceConnectionStatusInput interface {
	pulumi.Input

	ToPrivateLinkServiceConnectionStatusOutput() PrivateLinkServiceConnectionStatusOutput
	ToPrivateLinkServiceConnectionStatusOutputWithContext(context.Context) PrivateLinkServiceConnectionStatusOutput
}

var privateLinkServiceConnectionStatusPtrType = reflect.TypeOf((**PrivateLinkServiceConnectionStatus)(nil)).Elem()

type PrivateLinkServiceConnectionStatusPtrInput interface {
	pulumi.Input

	ToPrivateLinkServiceConnectionStatusPtrOutput() PrivateLinkServiceConnectionStatusPtrOutput
	ToPrivateLinkServiceConnectionStatusPtrOutputWithContext(context.Context) PrivateLinkServiceConnectionStatusPtrOutput
}

type privateLinkServiceConnectionStatusPtr string

func PrivateLinkServiceConnectionStatusPtr(v string) PrivateLinkServiceConnectionStatusPtrInput {
	return (*privateLinkServiceConnectionStatusPtr)(&v)
}

func (*privateLinkServiceConnectionStatusPtr) ElementType() reflect.Type {
	return privateLinkServiceConnectionStatusPtrType
}

func (in *privateLinkServiceConnectionStatusPtr) ToPrivateLinkServiceConnectionStatusPtrOutput() PrivateLinkServiceConnectionStatusPtrOutput {
	return pulumi.ToOutput(in).(PrivateLinkServiceConnectionStatusPtrOutput)
}

func (in *privateLinkServiceConnectionStatusPtr) ToPrivateLinkServiceConnectionStatusPtrOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(PrivateLinkServiceConnectionStatusPtrOutput)
}

// User & groups can be synced automatically or via a static list that's refreshed.
type RangerUsersyncMode string

const (
	RangerUsersyncModeStatic    = RangerUsersyncMode("static")
	RangerUsersyncModeAutomatic = RangerUsersyncMode("automatic")
)

func (RangerUsersyncMode) ElementType() reflect.Type {
	return reflect.TypeOf((*RangerUsersyncMode)(nil)).Elem()
}

func (e RangerUsersyncMode) ToRangerUsersyncModeOutput() RangerUsersyncModeOutput {
	return pulumi.ToOutput(e).(RangerUsersyncModeOutput)
}

func (e RangerUsersyncMode) ToRangerUsersyncModeOutputWithContext(ctx context.Context) RangerUsersyncModeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(RangerUsersyncModeOutput)
}

func (e RangerUsersyncMode) ToRangerUsersyncModePtrOutput() RangerUsersyncModePtrOutput {
	return e.ToRangerUsersyncModePtrOutputWithContext(context.Background())
}

func (e RangerUsersyncMode) ToRangerUsersyncModePtrOutputWithContext(ctx context.Context) RangerUsersyncModePtrOutput {
	return RangerUsersyncMode(e).ToRangerUsersyncModeOutputWithContext(ctx).ToRangerUsersyncModePtrOutputWithContext(ctx)
}

func (e RangerUsersyncMode) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e RangerUsersyncMode) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e RangerUsersyncMode) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e RangerUsersyncMode) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type RangerUsersyncModeOutput struct{ *pulumi.OutputState }

func (RangerUsersyncModeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RangerUsersyncMode)(nil)).Elem()
}

func (o RangerUsersyncModeOutput) ToRangerUsersyncModeOutput() RangerUsersyncModeOutput {
	return o
}

func (o RangerUsersyncModeOutput) ToRangerUsersyncModeOutputWithContext(ctx context.Context) RangerUsersyncModeOutput {
	return o
}

func (o RangerUsersyncModeOutput) ToRangerUsersyncModePtrOutput() RangerUsersyncModePtrOutput {
	return o.ToRangerUsersyncModePtrOutputWithContext(context.Background())
}

func (o RangerUsersyncModeOutput) ToRangerUsersyncModePtrOutputWithContext(ctx context.Context) RangerUsersyncModePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RangerUsersyncMode) *RangerUsersyncMode {
		return &v
	}).(RangerUsersyncModePtrOutput)
}

func (o RangerUsersyncModeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o RangerUsersyncModeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RangerUsersyncMode) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o RangerUsersyncModeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RangerUsersyncModeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RangerUsersyncMode) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type RangerUsersyncModePtrOutput struct{ *pulumi.OutputState }

func (RangerUsersyncModePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RangerUsersyncMode)(nil)).Elem()
}

func (o RangerUsersyncModePtrOutput) ToRangerUsersyncModePtrOutput() RangerUsersyncModePtrOutput {
	return o
}

func (o RangerUsersyncModePtrOutput) ToRangerUsersyncModePtrOutputWithContext(ctx context.Context) RangerUsersyncModePtrOutput {
	return o
}

func (o RangerUsersyncModePtrOutput) Elem() RangerUsersyncModeOutput {
	return o.ApplyT(func(v *RangerUsersyncMode) RangerUsersyncMode {
		if v != nil {
			return *v
		}
		var ret RangerUsersyncMode
		return ret
	}).(RangerUsersyncModeOutput)
}

func (o RangerUsersyncModePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RangerUsersyncModePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *RangerUsersyncMode) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// RangerUsersyncModeInput is an input type that accepts values of the RangerUsersyncMode enum
// A concrete instance of `RangerUsersyncModeInput` can be one of the following:
//
//	RangerUsersyncModeStatic
//	RangerUsersyncModeAutomatic
type RangerUsersyncModeInput interface {
	pulumi.Input

	ToRangerUsersyncModeOutput() RangerUsersyncModeOutput
	ToRangerUsersyncModeOutputWithContext(context.Context) RangerUsersyncModeOutput
}

var rangerUsersyncModePtrType = reflect.TypeOf((**RangerUsersyncMode)(nil)).Elem()

type RangerUsersyncModePtrInput interface {
	pulumi.Input

	ToRangerUsersyncModePtrOutput() RangerUsersyncModePtrOutput
	ToRangerUsersyncModePtrOutputWithContext(context.Context) RangerUsersyncModePtrOutput
}

type rangerUsersyncModePtr string

func RangerUsersyncModePtr(v string) RangerUsersyncModePtrInput {
	return (*rangerUsersyncModePtr)(&v)
}

func (*rangerUsersyncModePtr) ElementType() reflect.Type {
	return rangerUsersyncModePtrType
}

func (in *rangerUsersyncModePtr) ToRangerUsersyncModePtrOutput() RangerUsersyncModePtrOutput {
	return pulumi.ToOutput(in).(RangerUsersyncModePtrOutput)
}

func (in *rangerUsersyncModePtr) ToRangerUsersyncModePtrOutputWithContext(ctx context.Context) RangerUsersyncModePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(RangerUsersyncModePtrOutput)
}

// The type of identity used for the cluster. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user assigned identities.
type ResourceIdentityType string

const (
	ResourceIdentityTypeSystemAssigned               = ResourceIdentityType("SystemAssigned")
	ResourceIdentityTypeUserAssigned                 = ResourceIdentityType("UserAssigned")
	ResourceIdentityType_SystemAssigned_UserAssigned = ResourceIdentityType("SystemAssigned, UserAssigned")
	ResourceIdentityTypeNone                         = ResourceIdentityType("None")
)

func (ResourceIdentityType) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceIdentityType)(nil)).Elem()
}

func (e ResourceIdentityType) ToResourceIdentityTypeOutput() ResourceIdentityTypeOutput {
	return pulumi.ToOutput(e).(ResourceIdentityTypeOutput)
}

func (e ResourceIdentityType) ToResourceIdentityTypeOutputWithContext(ctx context.Context) ResourceIdentityTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ResourceIdentityTypeOutput)
}

func (e ResourceIdentityType) ToResourceIdentityTypePtrOutput() ResourceIdentityTypePtrOutput {
	return e.ToResourceIdentityTypePtrOutputWithContext(context.Background())
}

func (e ResourceIdentityType) ToResourceIdentityTypePtrOutputWithContext(ctx context.Context) ResourceIdentityTypePtrOutput {
	return ResourceIdentityType(e).ToResourceIdentityTypeOutputWithContext(ctx).ToResourceIdentityTypePtrOutputWithContext(ctx)
}

func (e ResourceIdentityType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ResourceIdentityType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ResourceIdentityType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ResourceIdentityType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ResourceIdentityTypeOutput struct{ *pulumi.OutputState }

func (ResourceIdentityTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceIdentityType)(nil)).Elem()
}

func (o ResourceIdentityTypeOutput) ToResourceIdentityTypeOutput() ResourceIdentityTypeOutput {
	return o
}

func (o ResourceIdentityTypeOutput) ToResourceIdentityTypeOutputWithContext(ctx context.Context) ResourceIdentityTypeOutput {
	return o
}

func (o ResourceIdentityTypeOutput) ToResourceIdentityTypePtrOutput() ResourceIdentityTypePtrOutput {
	return o.ToResourceIdentityTypePtrOutputWithContext(context.Background())
}

func (o ResourceIdentityTypeOutput) ToResourceIdentityTypePtrOutputWithContext(ctx context.Context) ResourceIdentityTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ResourceIdentityType) *ResourceIdentityType {
		return &v
	}).(ResourceIdentityTypePtrOutput)
}

func (o ResourceIdentityTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ResourceIdentityTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ResourceIdentityType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ResourceIdentityTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ResourceIdentityTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ResourceIdentityType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ResourceIdentityTypePtrOutput struct{ *pulumi.OutputState }

func (ResourceIdentityTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceIdentityType)(nil)).Elem()
}

func (o ResourceIdentityTypePtrOutput) ToResourceIdentityTypePtrOutput() ResourceIdentityTypePtrOutput {
	return o
}

func (o ResourceIdentityTypePtrOutput) ToResourceIdentityTypePtrOutputWithContext(ctx context.Context) ResourceIdentityTypePtrOutput {
	return o
}

func (o ResourceIdentityTypePtrOutput) Elem() ResourceIdentityTypeOutput {
	return o.ApplyT(func(v *ResourceIdentityType) ResourceIdentityType {
		if v != nil {
			return *v
		}
		var ret ResourceIdentityType
		return ret
	}).(ResourceIdentityTypeOutput)
}

func (o ResourceIdentityTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ResourceIdentityTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ResourceIdentityType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ResourceIdentityTypeInput is an input type that accepts values of the ResourceIdentityType enum
// A concrete instance of `ResourceIdentityTypeInput` can be one of the following:
//
//	ResourceIdentityTypeSystemAssigned
//	ResourceIdentityTypeUserAssigned
//	ResourceIdentityType_SystemAssigned_UserAssigned
//	ResourceIdentityTypeNone
type ResourceIdentityTypeInput interface {
	pulumi.Input

	ToResourceIdentityTypeOutput() ResourceIdentityTypeOutput
	ToResourceIdentityTypeOutputWithContext(context.Context) ResourceIdentityTypeOutput
}

var resourceIdentityTypePtrType = reflect.TypeOf((**ResourceIdentityType)(nil)).Elem()

type ResourceIdentityTypePtrInput interface {
	pulumi.Input

	ToResourceIdentityTypePtrOutput() ResourceIdentityTypePtrOutput
	ToResourceIdentityTypePtrOutputWithContext(context.Context) ResourceIdentityTypePtrOutput
}

type resourceIdentityTypePtr string

func ResourceIdentityTypePtr(v string) ResourceIdentityTypePtrInput {
	return (*resourceIdentityTypePtr)(&v)
}

func (*resourceIdentityTypePtr) ElementType() reflect.Type {
	return resourceIdentityTypePtrType
}

func (in *resourceIdentityTypePtr) ToResourceIdentityTypePtrOutput() ResourceIdentityTypePtrOutput {
	return pulumi.ToOutput(in).(ResourceIdentityTypePtrOutput)
}

func (in *resourceIdentityTypePtr) ToResourceIdentityTypePtrOutputWithContext(ctx context.Context) ResourceIdentityTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ResourceIdentityTypePtrOutput)
}

// The direction for the resource provider connection.
type ResourceProviderConnection string

const (
	ResourceProviderConnectionInbound  = ResourceProviderConnection("Inbound")
	ResourceProviderConnectionOutbound = ResourceProviderConnection("Outbound")
)

func (ResourceProviderConnection) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceProviderConnection)(nil)).Elem()
}

func (e ResourceProviderConnection) ToResourceProviderConnectionOutput() ResourceProviderConnectionOutput {
	return pulumi.ToOutput(e).(ResourceProviderConnectionOutput)
}

func (e ResourceProviderConnection) ToResourceProviderConnectionOutputWithContext(ctx context.Context) ResourceProviderConnectionOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ResourceProviderConnectionOutput)
}

func (e ResourceProviderConnection) ToResourceProviderConnectionPtrOutput() ResourceProviderConnectionPtrOutput {
	return e.ToResourceProviderConnectionPtrOutputWithContext(context.Background())
}

func (e ResourceProviderConnection) ToResourceProviderConnectionPtrOutputWithContext(ctx context.Context) ResourceProviderConnectionPtrOutput {
	return ResourceProviderConnection(e).ToResourceProviderConnectionOutputWithContext(ctx).ToResourceProviderConnectionPtrOutputWithContext(ctx)
}

func (e ResourceProviderConnection) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ResourceProviderConnection) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ResourceProviderConnection) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ResourceProviderConnection) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ResourceProviderConnectionOutput struct{ *pulumi.OutputState }

func (ResourceProviderConnectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceProviderConnection)(nil)).Elem()
}

func (o ResourceProviderConnectionOutput) ToResourceProviderConnectionOutput() ResourceProviderConnectionOutput {
	return o
}

func (o ResourceProviderConnectionOutput) ToResourceProviderConnectionOutputWithContext(ctx context.Context) ResourceProviderConnectionOutput {
	return o
}

func (o ResourceProviderConnectionOutput) ToResourceProviderConnectionPtrOutput() ResourceProviderConnectionPtrOutput {
	return o.ToResourceProviderConnectionPtrOutputWithContext(context.Background())
}

func (o ResourceProviderConnectionOutput) ToResourceProviderConnectionPtrOutputWithContext(ctx context.Context) ResourceProviderConnectionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ResourceProviderConnection) *ResourceProviderConnection {
		return &v
	}).(ResourceProviderConnectionPtrOutput)
}

func (o ResourceProviderConnectionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ResourceProviderConnectionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ResourceProviderConnection) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ResourceProviderConnectionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ResourceProviderConnectionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ResourceProviderConnection) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ResourceProviderConnectionPtrOutput struct{ *pulumi.OutputState }

func (ResourceProviderConnectionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceProviderConnection)(nil)).Elem()
}

func (o ResourceProviderConnectionPtrOutput) ToResourceProviderConnectionPtrOutput() ResourceProviderConnectionPtrOutput {
	return o
}

func (o ResourceProviderConnectionPtrOutput) ToResourceProviderConnectionPtrOutputWithContext(ctx context.Context) ResourceProviderConnectionPtrOutput {
	return o
}

func (o ResourceProviderConnectionPtrOutput) Elem() ResourceProviderConnectionOutput {
	return o.ApplyT(func(v *ResourceProviderConnection) ResourceProviderConnection {
		if v != nil {
			return *v
		}
		var ret ResourceProviderConnection
		return ret
	}).(ResourceProviderConnectionOutput)
}

func (o ResourceProviderConnectionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ResourceProviderConnectionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ResourceProviderConnection) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ResourceProviderConnectionInput is an input type that accepts values of the ResourceProviderConnection enum
// A concrete instance of `ResourceProviderConnectionInput` can be one of the following:
//
//	ResourceProviderConnectionInbound
//	ResourceProviderConnectionOutbound
type ResourceProviderConnectionInput interface {
	pulumi.Input

	ToResourceProviderConnectionOutput() ResourceProviderConnectionOutput
	ToResourceProviderConnectionOutputWithContext(context.Context) ResourceProviderConnectionOutput
}

var resourceProviderConnectionPtrType = reflect.TypeOf((**ResourceProviderConnection)(nil)).Elem()

type ResourceProviderConnectionPtrInput interface {
	pulumi.Input

	ToResourceProviderConnectionPtrOutput() ResourceProviderConnectionPtrOutput
	ToResourceProviderConnectionPtrOutputWithContext(context.Context) ResourceProviderConnectionPtrOutput
}

type resourceProviderConnectionPtr string

func ResourceProviderConnectionPtr(v string) ResourceProviderConnectionPtrInput {
	return (*resourceProviderConnectionPtr)(&v)
}

func (*resourceProviderConnectionPtr) ElementType() reflect.Type {
	return resourceProviderConnectionPtrType
}

func (in *resourceProviderConnectionPtr) ToResourceProviderConnectionPtrOutput() ResourceProviderConnectionPtrOutput {
	return pulumi.ToOutput(in).(ResourceProviderConnectionPtrOutput)
}

func (in *resourceProviderConnectionPtr) ToResourceProviderConnectionPtrOutputWithContext(ctx context.Context) ResourceProviderConnectionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ResourceProviderConnectionPtrOutput)
}

// The action type.
type ScaleActionType string

const (
	ScaleActionTypeScaleup   = ScaleActionType("scaleup")
	ScaleActionTypeScaledown = ScaleActionType("scaledown")
)

func (ScaleActionType) ElementType() reflect.Type {
	return reflect.TypeOf((*ScaleActionType)(nil)).Elem()
}

func (e ScaleActionType) ToScaleActionTypeOutput() ScaleActionTypeOutput {
	return pulumi.ToOutput(e).(ScaleActionTypeOutput)
}

func (e ScaleActionType) ToScaleActionTypeOutputWithContext(ctx context.Context) ScaleActionTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ScaleActionTypeOutput)
}

func (e ScaleActionType) ToScaleActionTypePtrOutput() ScaleActionTypePtrOutput {
	return e.ToScaleActionTypePtrOutputWithContext(context.Background())
}

func (e ScaleActionType) ToScaleActionTypePtrOutputWithContext(ctx context.Context) ScaleActionTypePtrOutput {
	return ScaleActionType(e).ToScaleActionTypeOutputWithContext(ctx).ToScaleActionTypePtrOutputWithContext(ctx)
}

func (e ScaleActionType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ScaleActionType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ScaleActionType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ScaleActionType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ScaleActionTypeOutput struct{ *pulumi.OutputState }

func (ScaleActionTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScaleActionType)(nil)).Elem()
}

func (o ScaleActionTypeOutput) ToScaleActionTypeOutput() ScaleActionTypeOutput {
	return o
}

func (o ScaleActionTypeOutput) ToScaleActionTypeOutputWithContext(ctx context.Context) ScaleActionTypeOutput {
	return o
}

func (o ScaleActionTypeOutput) ToScaleActionTypePtrOutput() ScaleActionTypePtrOutput {
	return o.ToScaleActionTypePtrOutputWithContext(context.Background())
}

func (o ScaleActionTypeOutput) ToScaleActionTypePtrOutputWithContext(ctx context.Context) ScaleActionTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ScaleActionType) *ScaleActionType {
		return &v
	}).(ScaleActionTypePtrOutput)
}

func (o ScaleActionTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ScaleActionTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ScaleActionType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ScaleActionTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ScaleActionTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ScaleActionType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ScaleActionTypePtrOutput struct{ *pulumi.OutputState }

func (ScaleActionTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ScaleActionType)(nil)).Elem()
}

func (o ScaleActionTypePtrOutput) ToScaleActionTypePtrOutput() ScaleActionTypePtrOutput {
	return o
}

func (o ScaleActionTypePtrOutput) ToScaleActionTypePtrOutputWithContext(ctx context.Context) ScaleActionTypePtrOutput {
	return o
}

func (o ScaleActionTypePtrOutput) Elem() ScaleActionTypeOutput {
	return o.ApplyT(func(v *ScaleActionType) ScaleActionType {
		if v != nil {
			return *v
		}
		var ret ScaleActionType
		return ret
	}).(ScaleActionTypeOutput)
}

func (o ScaleActionTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ScaleActionTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ScaleActionType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ScaleActionTypeInput is an input type that accepts values of the ScaleActionType enum
// A concrete instance of `ScaleActionTypeInput` can be one of the following:
//
//	ScaleActionTypeScaleup
//	ScaleActionTypeScaledown
type ScaleActionTypeInput interface {
	pulumi.Input

	ToScaleActionTypeOutput() ScaleActionTypeOutput
	ToScaleActionTypeOutputWithContext(context.Context) ScaleActionTypeOutput
}

var scaleActionTypePtrType = reflect.TypeOf((**ScaleActionType)(nil)).Elem()

type ScaleActionTypePtrInput interface {
	pulumi.Input

	ToScaleActionTypePtrOutput() ScaleActionTypePtrOutput
	ToScaleActionTypePtrOutputWithContext(context.Context) ScaleActionTypePtrOutput
}

type scaleActionTypePtr string

func ScaleActionTypePtr(v string) ScaleActionTypePtrInput {
	return (*scaleActionTypePtr)(&v)
}

func (*scaleActionTypePtr) ElementType() reflect.Type {
	return scaleActionTypePtrType
}

func (in *scaleActionTypePtr) ToScaleActionTypePtrOutput() ScaleActionTypePtrOutput {
	return pulumi.ToOutput(in).(ScaleActionTypePtrOutput)
}

func (in *scaleActionTypePtr) ToScaleActionTypePtrOutputWithContext(ctx context.Context) ScaleActionTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ScaleActionTypePtrOutput)
}

type ScheduleDay string

const (
	ScheduleDaySunday    = ScheduleDay("Sunday")
	ScheduleDayMonday    = ScheduleDay("Monday")
	ScheduleDayTuesday   = ScheduleDay("Tuesday")
	ScheduleDayWednesday = ScheduleDay("Wednesday")
	ScheduleDayThursday  = ScheduleDay("Thursday")
	ScheduleDayFriday    = ScheduleDay("Friday")
	ScheduleDaySaturday  = ScheduleDay("Saturday")
)

func (ScheduleDay) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduleDay)(nil)).Elem()
}

func (e ScheduleDay) ToScheduleDayOutput() ScheduleDayOutput {
	return pulumi.ToOutput(e).(ScheduleDayOutput)
}

func (e ScheduleDay) ToScheduleDayOutputWithContext(ctx context.Context) ScheduleDayOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ScheduleDayOutput)
}

func (e ScheduleDay) ToScheduleDayPtrOutput() ScheduleDayPtrOutput {
	return e.ToScheduleDayPtrOutputWithContext(context.Background())
}

func (e ScheduleDay) ToScheduleDayPtrOutputWithContext(ctx context.Context) ScheduleDayPtrOutput {
	return ScheduleDay(e).ToScheduleDayOutputWithContext(ctx).ToScheduleDayPtrOutputWithContext(ctx)
}

func (e ScheduleDay) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ScheduleDay) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ScheduleDay) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ScheduleDay) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ScheduleDayOutput struct{ *pulumi.OutputState }

func (ScheduleDayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduleDay)(nil)).Elem()
}

func (o ScheduleDayOutput) ToScheduleDayOutput() ScheduleDayOutput {
	return o
}

func (o ScheduleDayOutput) ToScheduleDayOutputWithContext(ctx context.Context) ScheduleDayOutput {
	return o
}

func (o ScheduleDayOutput) ToScheduleDayPtrOutput() ScheduleDayPtrOutput {
	return o.ToScheduleDayPtrOutputWithContext(context.Background())
}

func (o ScheduleDayOutput) ToScheduleDayPtrOutputWithContext(ctx context.Context) ScheduleDayPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ScheduleDay) *ScheduleDay {
		return &v
	}).(ScheduleDayPtrOutput)
}

func (o ScheduleDayOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ScheduleDayOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ScheduleDay) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ScheduleDayOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ScheduleDayOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ScheduleDay) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ScheduleDayPtrOutput struct{ *pulumi.OutputState }

func (ScheduleDayPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ScheduleDay)(nil)).Elem()
}

func (o ScheduleDayPtrOutput) ToScheduleDayPtrOutput() ScheduleDayPtrOutput {
	return o
}

func (o ScheduleDayPtrOutput) ToScheduleDayPtrOutputWithContext(ctx context.Context) ScheduleDayPtrOutput {
	return o
}

func (o ScheduleDayPtrOutput) Elem() ScheduleDayOutput {
	return o.ApplyT(func(v *ScheduleDay) ScheduleDay {
		if v != nil {
			return *v
		}
		var ret ScheduleDay
		return ret
	}).(ScheduleDayOutput)
}

func (o ScheduleDayPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ScheduleDayPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ScheduleDay) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ScheduleDayInput is an input type that accepts values of the ScheduleDay enum
// A concrete instance of `ScheduleDayInput` can be one of the following:
//
//	ScheduleDaySunday
//	ScheduleDayMonday
//	ScheduleDayTuesday
//	ScheduleDayWednesday
//	ScheduleDayThursday
//	ScheduleDayFriday
//	ScheduleDaySaturday
type ScheduleDayInput interface {
	pulumi.Input

	ToScheduleDayOutput() ScheduleDayOutput
	ToScheduleDayOutputWithContext(context.Context) ScheduleDayOutput
}

var scheduleDayPtrType = reflect.TypeOf((**ScheduleDay)(nil)).Elem()

type ScheduleDayPtrInput interface {
	pulumi.Input

	ToScheduleDayPtrOutput() ScheduleDayPtrOutput
	ToScheduleDayPtrOutputWithContext(context.Context) ScheduleDayPtrOutput
}

type scheduleDayPtr string

func ScheduleDayPtr(v string) ScheduleDayPtrInput {
	return (*scheduleDayPtr)(&v)
}

func (*scheduleDayPtr) ElementType() reflect.Type {
	return scheduleDayPtrType
}

func (in *scheduleDayPtr) ToScheduleDayPtrOutput() ScheduleDayPtrOutput {
	return pulumi.ToOutput(in).(ScheduleDayPtrOutput)
}

func (in *scheduleDayPtr) ToScheduleDayPtrOutputWithContext(ctx context.Context) ScheduleDayPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ScheduleDayPtrOutput)
}

// The cluster tier.
type Tier string

const (
	TierStandard = Tier("Standard")
	TierPremium  = Tier("Premium")
)

func (Tier) ElementType() reflect.Type {
	return reflect.TypeOf((*Tier)(nil)).Elem()
}

func (e Tier) ToTierOutput() TierOutput {
	return pulumi.ToOutput(e).(TierOutput)
}

func (e Tier) ToTierOutputWithContext(ctx context.Context) TierOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TierOutput)
}

func (e Tier) ToTierPtrOutput() TierPtrOutput {
	return e.ToTierPtrOutputWithContext(context.Background())
}

func (e Tier) ToTierPtrOutputWithContext(ctx context.Context) TierPtrOutput {
	return Tier(e).ToTierOutputWithContext(ctx).ToTierPtrOutputWithContext(ctx)
}

func (e Tier) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e Tier) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e Tier) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e Tier) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TierOutput struct{ *pulumi.OutputState }

func (TierOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Tier)(nil)).Elem()
}

func (o TierOutput) ToTierOutput() TierOutput {
	return o
}

func (o TierOutput) ToTierOutputWithContext(ctx context.Context) TierOutput {
	return o
}

func (o TierOutput) ToTierPtrOutput() TierPtrOutput {
	return o.ToTierPtrOutputWithContext(context.Background())
}

func (o TierOutput) ToTierPtrOutputWithContext(ctx context.Context) TierPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Tier) *Tier {
		return &v
	}).(TierPtrOutput)
}

func (o TierOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TierOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e Tier) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TierOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TierOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e Tier) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TierPtrOutput struct{ *pulumi.OutputState }

func (TierPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Tier)(nil)).Elem()
}

func (o TierPtrOutput) ToTierPtrOutput() TierPtrOutput {
	return o
}

func (o TierPtrOutput) ToTierPtrOutputWithContext(ctx context.Context) TierPtrOutput {
	return o
}

func (o TierPtrOutput) Elem() TierOutput {
	return o.ApplyT(func(v *Tier) Tier {
		if v != nil {
			return *v
		}
		var ret Tier
		return ret
	}).(TierOutput)
}

func (o TierPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TierPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *Tier) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TierInput is an input type that accepts values of the Tier enum
// A concrete instance of `TierInput` can be one of the following:
//
//	TierStandard
//	TierPremium
type TierInput interface {
	pulumi.Input

	ToTierOutput() TierOutput
	ToTierOutputWithContext(context.Context) TierOutput
}

var tierPtrType = reflect.TypeOf((**Tier)(nil)).Elem()

type TierPtrInput interface {
	pulumi.Input

	ToTierPtrOutput() TierPtrOutput
	ToTierPtrOutputWithContext(context.Context) TierPtrOutput
}

type tierPtr string

func TierPtr(v string) TierPtrInput {
	return (*tierPtr)(&v)
}

func (*tierPtr) ElementType() reflect.Type {
	return tierPtrType
}

func (in *tierPtr) ToTierPtrOutput() TierPtrOutput {
	return pulumi.ToOutput(in).(TierPtrOutput)
}

func (in *tierPtr) ToTierPtrOutputWithContext(ctx context.Context) TierPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TierPtrOutput)
}

// A string property that indicates the upgrade mode to be performed on the Flink job. It can have one of the following enum values => STATELESS_UPDATE, UPDATE, LAST_STATE_UPDATE.
type UpgradeMode string

const (
	UpgradeMode_STATELESS_UPDATE  = UpgradeMode("STATELESS_UPDATE")
	UpgradeModeUPDATE             = UpgradeMode("UPDATE")
	UpgradeMode_LAST_STATE_UPDATE = UpgradeMode("LAST_STATE_UPDATE")
)

func (UpgradeMode) ElementType() reflect.Type {
	return reflect.TypeOf((*UpgradeMode)(nil)).Elem()
}

func (e UpgradeMode) ToUpgradeModeOutput() UpgradeModeOutput {
	return pulumi.ToOutput(e).(UpgradeModeOutput)
}

func (e UpgradeMode) ToUpgradeModeOutputWithContext(ctx context.Context) UpgradeModeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(UpgradeModeOutput)
}

func (e UpgradeMode) ToUpgradeModePtrOutput() UpgradeModePtrOutput {
	return e.ToUpgradeModePtrOutputWithContext(context.Background())
}

func (e UpgradeMode) ToUpgradeModePtrOutputWithContext(ctx context.Context) UpgradeModePtrOutput {
	return UpgradeMode(e).ToUpgradeModeOutputWithContext(ctx).ToUpgradeModePtrOutputWithContext(ctx)
}

func (e UpgradeMode) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e UpgradeMode) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e UpgradeMode) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e UpgradeMode) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type UpgradeModeOutput struct{ *pulumi.OutputState }

func (UpgradeModeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UpgradeMode)(nil)).Elem()
}

func (o UpgradeModeOutput) ToUpgradeModeOutput() UpgradeModeOutput {
	return o
}

func (o UpgradeModeOutput) ToUpgradeModeOutputWithContext(ctx context.Context) UpgradeModeOutput {
	return o
}

func (o UpgradeModeOutput) ToUpgradeModePtrOutput() UpgradeModePtrOutput {
	return o.ToUpgradeModePtrOutputWithContext(context.Background())
}

func (o UpgradeModeOutput) ToUpgradeModePtrOutputWithContext(ctx context.Context) UpgradeModePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v UpgradeMode) *UpgradeMode {
		return &v
	}).(UpgradeModePtrOutput)
}

func (o UpgradeModeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o UpgradeModeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e UpgradeMode) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o UpgradeModeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o UpgradeModeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e UpgradeMode) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type UpgradeModePtrOutput struct{ *pulumi.OutputState }

func (UpgradeModePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UpgradeMode)(nil)).Elem()
}

func (o UpgradeModePtrOutput) ToUpgradeModePtrOutput() UpgradeModePtrOutput {
	return o
}

func (o UpgradeModePtrOutput) ToUpgradeModePtrOutputWithContext(ctx context.Context) UpgradeModePtrOutput {
	return o
}

func (o UpgradeModePtrOutput) Elem() UpgradeModeOutput {
	return o.ApplyT(func(v *UpgradeMode) UpgradeMode {
		if v != nil {
			return *v
		}
		var ret UpgradeMode
		return ret
	}).(UpgradeModeOutput)
}

func (o UpgradeModePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o UpgradeModePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *UpgradeMode) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// UpgradeModeInput is an input type that accepts values of the UpgradeMode enum
// A concrete instance of `UpgradeModeInput` can be one of the following:
//
//	UpgradeMode_STATELESS_UPDATE
//	UpgradeModeUPDATE
//	UpgradeMode_LAST_STATE_UPDATE
type UpgradeModeInput interface {
	pulumi.Input

	ToUpgradeModeOutput() UpgradeModeOutput
	ToUpgradeModeOutputWithContext(context.Context) UpgradeModeOutput
}

var upgradeModePtrType = reflect.TypeOf((**UpgradeMode)(nil)).Elem()

type UpgradeModePtrInput interface {
	pulumi.Input

	ToUpgradeModePtrOutput() UpgradeModePtrOutput
	ToUpgradeModePtrOutputWithContext(context.Context) UpgradeModePtrOutput
}

type upgradeModePtr string

func UpgradeModePtr(v string) UpgradeModePtrInput {
	return (*upgradeModePtr)(&v)
}

func (*upgradeModePtr) ElementType() reflect.Type {
	return upgradeModePtrType
}

func (in *upgradeModePtr) ToUpgradeModePtrOutput() UpgradeModePtrOutput {
	return pulumi.ToOutput(in).(UpgradeModePtrOutput)
}

func (in *upgradeModePtr) ToUpgradeModePtrOutputWithContext(ctx context.Context) UpgradeModePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(UpgradeModePtrOutput)
}

func init() {
	pulumi.RegisterOutputType(AutoscaleTypeOutput{})
	pulumi.RegisterOutputType(AutoscaleTypePtrOutput{})
	pulumi.RegisterOutputType(ComparisonOperatorOutput{})
	pulumi.RegisterOutputType(ComparisonOperatorPtrOutput{})
	pulumi.RegisterOutputType(ContentEncodingOutput{})
	pulumi.RegisterOutputType(ContentEncodingPtrOutput{})
	pulumi.RegisterOutputType(DataDiskTypeOutput{})
	pulumi.RegisterOutputType(DataDiskTypePtrOutput{})
	pulumi.RegisterOutputType(DaysOfWeekOutput{})
	pulumi.RegisterOutputType(DaysOfWeekPtrOutput{})
	pulumi.RegisterOutputType(DbConnectionAuthenticationModeOutput{})
	pulumi.RegisterOutputType(DbConnectionAuthenticationModePtrOutput{})
	pulumi.RegisterOutputType(DeploymentModeOutput{})
	pulumi.RegisterOutputType(DeploymentModePtrOutput{})
	pulumi.RegisterOutputType(DirectoryTypeOutput{})
	pulumi.RegisterOutputType(DirectoryTypePtrOutput{})
	pulumi.RegisterOutputType(JsonWebKeyEncryptionAlgorithmOutput{})
	pulumi.RegisterOutputType(JsonWebKeyEncryptionAlgorithmPtrOutput{})
	pulumi.RegisterOutputType(KeyVaultObjectTypeOutput{})
	pulumi.RegisterOutputType(KeyVaultObjectTypePtrOutput{})
	pulumi.RegisterOutputType(ManagedIdentityTypeOutput{})
	pulumi.RegisterOutputType(ManagedIdentityTypePtrOutput{})
	pulumi.RegisterOutputType(MetastoreDbConnectionAuthenticationModeOutput{})
	pulumi.RegisterOutputType(MetastoreDbConnectionAuthenticationModePtrOutput{})
	pulumi.RegisterOutputType(OSTypeOutput{})
	pulumi.RegisterOutputType(OSTypePtrOutput{})
	pulumi.RegisterOutputType(OutboundDependenciesManagedTypeOutput{})
	pulumi.RegisterOutputType(OutboundDependenciesManagedTypePtrOutput{})
	pulumi.RegisterOutputType(OutboundTypeOutput{})
	pulumi.RegisterOutputType(OutboundTypePtrOutput{})
	pulumi.RegisterOutputType(PrivateIPAllocationMethodOutput{})
	pulumi.RegisterOutputType(PrivateIPAllocationMethodPtrOutput{})
	pulumi.RegisterOutputType(PrivateLinkOutput{})
	pulumi.RegisterOutputType(PrivateLinkPtrOutput{})
	pulumi.RegisterOutputType(PrivateLinkServiceConnectionStatusOutput{})
	pulumi.RegisterOutputType(PrivateLinkServiceConnectionStatusPtrOutput{})
	pulumi.RegisterOutputType(RangerUsersyncModeOutput{})
	pulumi.RegisterOutputType(RangerUsersyncModePtrOutput{})
	pulumi.RegisterOutputType(ResourceIdentityTypeOutput{})
	pulumi.RegisterOutputType(ResourceIdentityTypePtrOutput{})
	pulumi.RegisterOutputType(ResourceProviderConnectionOutput{})
	pulumi.RegisterOutputType(ResourceProviderConnectionPtrOutput{})
	pulumi.RegisterOutputType(ScaleActionTypeOutput{})
	pulumi.RegisterOutputType(ScaleActionTypePtrOutput{})
	pulumi.RegisterOutputType(ScheduleDayOutput{})
	pulumi.RegisterOutputType(ScheduleDayPtrOutput{})
	pulumi.RegisterOutputType(TierOutput{})
	pulumi.RegisterOutputType(TierPtrOutput{})
	pulumi.RegisterOutputType(UpgradeModeOutput{})
	pulumi.RegisterOutputType(UpgradeModePtrOutput{})
}
