// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package workloads

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Define the backup connection resource of virtual instance for SAP..
// Azure REST API version: 2023-10-01-preview.
type ACSSBackupConnection struct {
	pulumi.CustomResourceState

	// Information about the recovery services vault and backup policy used for backup.
	BackupData pulumi.AnyOutput `pulumi:"backupData"`
	// Defines the errors related to backup connection resource of virtual instance for SAP.
	Errors ConnectorErrorDefinitionResponseOutput `pulumi:"errors"`
	// The geo-location where the resource lives
	Location pulumi.StringOutput `pulumi:"location"`
	// The name of the resource
	Name pulumi.StringOutput `pulumi:"name"`
	// Defines the provisioning states.
	ProvisioningState pulumi.StringOutput `pulumi:"provisioningState"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponseOutput `pulumi:"systemData"`
	// Resource tags.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewACSSBackupConnection registers a new resource with the given unique name, arguments, and options.
func NewACSSBackupConnection(ctx *pulumi.Context,
	name string, args *ACSSBackupConnectionArgs, opts ...pulumi.ResourceOption) (*ACSSBackupConnection, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ConnectorName == nil {
		return nil, errors.New("invalid value for required argument 'ConnectorName'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:workloads/v20231001preview:ACSSBackupConnection"),
		},
	})
	opts = append(opts, aliases)
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource ACSSBackupConnection
	err := ctx.RegisterResource("azure-native:workloads:ACSSBackupConnection", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetACSSBackupConnection gets an existing ACSSBackupConnection resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetACSSBackupConnection(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ACSSBackupConnectionState, opts ...pulumi.ResourceOption) (*ACSSBackupConnection, error) {
	var resource ACSSBackupConnection
	err := ctx.ReadResource("azure-native:workloads:ACSSBackupConnection", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ACSSBackupConnection resources.
type acssbackupConnectionState struct {
}

type ACSSBackupConnectionState struct {
}

func (ACSSBackupConnectionState) ElementType() reflect.Type {
	return reflect.TypeOf((*acssbackupConnectionState)(nil)).Elem()
}

type acssbackupConnectionArgs struct {
	// Information about the recovery services vault and backup policy used for backup.
	BackupData interface{} `pulumi:"backupData"`
	// The name of the backup connection resource of virtual instance for SAP.
	BackupName *string `pulumi:"backupName"`
	// The name of the connector resource
	ConnectorName string `pulumi:"connectorName"`
	// The geo-location where the resource lives
	Location *string `pulumi:"location"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a ACSSBackupConnection resource.
type ACSSBackupConnectionArgs struct {
	// Information about the recovery services vault and backup policy used for backup.
	BackupData pulumi.Input
	// The name of the backup connection resource of virtual instance for SAP.
	BackupName pulumi.StringPtrInput
	// The name of the connector resource
	ConnectorName pulumi.StringInput
	// The geo-location where the resource lives
	Location pulumi.StringPtrInput
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput
	// Resource tags.
	Tags pulumi.StringMapInput
}

func (ACSSBackupConnectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*acssbackupConnectionArgs)(nil)).Elem()
}

type ACSSBackupConnectionInput interface {
	pulumi.Input

	ToACSSBackupConnectionOutput() ACSSBackupConnectionOutput
	ToACSSBackupConnectionOutputWithContext(ctx context.Context) ACSSBackupConnectionOutput
}

func (*ACSSBackupConnection) ElementType() reflect.Type {
	return reflect.TypeOf((**ACSSBackupConnection)(nil)).Elem()
}

func (i *ACSSBackupConnection) ToACSSBackupConnectionOutput() ACSSBackupConnectionOutput {
	return i.ToACSSBackupConnectionOutputWithContext(context.Background())
}

func (i *ACSSBackupConnection) ToACSSBackupConnectionOutputWithContext(ctx context.Context) ACSSBackupConnectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ACSSBackupConnectionOutput)
}

func (i *ACSSBackupConnection) ToOutput(ctx context.Context) pulumix.Output[*ACSSBackupConnection] {
	return pulumix.Output[*ACSSBackupConnection]{
		OutputState: i.ToACSSBackupConnectionOutputWithContext(ctx).OutputState,
	}
}

type ACSSBackupConnectionOutput struct{ *pulumi.OutputState }

func (ACSSBackupConnectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ACSSBackupConnection)(nil)).Elem()
}

func (o ACSSBackupConnectionOutput) ToACSSBackupConnectionOutput() ACSSBackupConnectionOutput {
	return o
}

func (o ACSSBackupConnectionOutput) ToACSSBackupConnectionOutputWithContext(ctx context.Context) ACSSBackupConnectionOutput {
	return o
}

func (o ACSSBackupConnectionOutput) ToOutput(ctx context.Context) pulumix.Output[*ACSSBackupConnection] {
	return pulumix.Output[*ACSSBackupConnection]{
		OutputState: o.OutputState,
	}
}

// Information about the recovery services vault and backup policy used for backup.
func (o ACSSBackupConnectionOutput) BackupData() pulumi.AnyOutput {
	return o.ApplyT(func(v *ACSSBackupConnection) pulumi.AnyOutput { return v.BackupData }).(pulumi.AnyOutput)
}

// Defines the errors related to backup connection resource of virtual instance for SAP.
func (o ACSSBackupConnectionOutput) Errors() ConnectorErrorDefinitionResponseOutput {
	return o.ApplyT(func(v *ACSSBackupConnection) ConnectorErrorDefinitionResponseOutput { return v.Errors }).(ConnectorErrorDefinitionResponseOutput)
}

// The geo-location where the resource lives
func (o ACSSBackupConnectionOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *ACSSBackupConnection) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// The name of the resource
func (o ACSSBackupConnectionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ACSSBackupConnection) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Defines the provisioning states.
func (o ACSSBackupConnectionOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v *ACSSBackupConnection) pulumi.StringOutput { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o ACSSBackupConnectionOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v *ACSSBackupConnection) SystemDataResponseOutput { return v.SystemData }).(SystemDataResponseOutput)
}

// Resource tags.
func (o ACSSBackupConnectionOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ACSSBackupConnection) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o ACSSBackupConnectionOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *ACSSBackupConnection) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(ACSSBackupConnectionOutput{})
}
