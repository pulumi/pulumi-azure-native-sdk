// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20240901

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Get the SAP Disk Configuration Layout prod/non-prod SAP System.
func GetSapVirtualInstanceInvokeDiskConfigurations(ctx *pulumi.Context, args *GetSapVirtualInstanceInvokeDiskConfigurationsArgs, opts ...pulumi.InvokeOption) (*GetSapVirtualInstanceInvokeDiskConfigurationsResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv GetSapVirtualInstanceInvokeDiskConfigurationsResult
	err := ctx.Invoke("azure-native:workloads/v20240901:getSapVirtualInstanceInvokeDiskConfigurations", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type GetSapVirtualInstanceInvokeDiskConfigurationsArgs struct {
	// The geo-location where the SAP resources will be created.
	AppLocation string `pulumi:"appLocation"`
	// The database type. Eg: HANA, DB2, etc
	DatabaseType string `pulumi:"databaseType"`
	// The VM SKU for database instance.
	DbVmSku string `pulumi:"dbVmSku"`
	// The deployment type. Eg: SingleServer/ThreeTier
	DeploymentType string `pulumi:"deploymentType"`
	// Defines the environment type - Production/Non Production.
	Environment string `pulumi:"environment"`
	// The name of the Azure region.
	Location string `pulumi:"location"`
	// Defines the SAP Product type.
	SapProduct string `pulumi:"sapProduct"`
}

// The list of disk configuration for vmSku which are part of SAP deployment.
type GetSapVirtualInstanceInvokeDiskConfigurationsResult struct {
	// The disk configuration for the db volume. For HANA, Required volumes are: ['hana/data', 'hana/log', hana/shared', 'usr/sap', 'os'], Optional volume : ['backup'].
	VolumeConfigurations map[string]SAPDiskConfigurationResponse `pulumi:"volumeConfigurations"`
}

func GetSapVirtualInstanceInvokeDiskConfigurationsOutput(ctx *pulumi.Context, args GetSapVirtualInstanceInvokeDiskConfigurationsOutputArgs, opts ...pulumi.InvokeOption) GetSapVirtualInstanceInvokeDiskConfigurationsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetSapVirtualInstanceInvokeDiskConfigurationsResultOutput, error) {
			args := v.(GetSapVirtualInstanceInvokeDiskConfigurationsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: utilities.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("azure-native:workloads/v20240901:getSapVirtualInstanceInvokeDiskConfigurations", args, GetSapVirtualInstanceInvokeDiskConfigurationsResultOutput{}, options).(GetSapVirtualInstanceInvokeDiskConfigurationsResultOutput), nil
		}).(GetSapVirtualInstanceInvokeDiskConfigurationsResultOutput)
}

type GetSapVirtualInstanceInvokeDiskConfigurationsOutputArgs struct {
	// The geo-location where the SAP resources will be created.
	AppLocation pulumi.StringInput `pulumi:"appLocation"`
	// The database type. Eg: HANA, DB2, etc
	DatabaseType pulumi.StringInput `pulumi:"databaseType"`
	// The VM SKU for database instance.
	DbVmSku pulumi.StringInput `pulumi:"dbVmSku"`
	// The deployment type. Eg: SingleServer/ThreeTier
	DeploymentType pulumi.StringInput `pulumi:"deploymentType"`
	// Defines the environment type - Production/Non Production.
	Environment pulumi.StringInput `pulumi:"environment"`
	// The name of the Azure region.
	Location pulumi.StringInput `pulumi:"location"`
	// Defines the SAP Product type.
	SapProduct pulumi.StringInput `pulumi:"sapProduct"`
}

func (GetSapVirtualInstanceInvokeDiskConfigurationsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSapVirtualInstanceInvokeDiskConfigurationsArgs)(nil)).Elem()
}

// The list of disk configuration for vmSku which are part of SAP deployment.
type GetSapVirtualInstanceInvokeDiskConfigurationsResultOutput struct{ *pulumi.OutputState }

func (GetSapVirtualInstanceInvokeDiskConfigurationsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSapVirtualInstanceInvokeDiskConfigurationsResult)(nil)).Elem()
}

func (o GetSapVirtualInstanceInvokeDiskConfigurationsResultOutput) ToGetSapVirtualInstanceInvokeDiskConfigurationsResultOutput() GetSapVirtualInstanceInvokeDiskConfigurationsResultOutput {
	return o
}

func (o GetSapVirtualInstanceInvokeDiskConfigurationsResultOutput) ToGetSapVirtualInstanceInvokeDiskConfigurationsResultOutputWithContext(ctx context.Context) GetSapVirtualInstanceInvokeDiskConfigurationsResultOutput {
	return o
}

// The disk configuration for the db volume. For HANA, Required volumes are: ['hana/data', 'hana/log', hana/shared', 'usr/sap', 'os'], Optional volume : ['backup'].
func (o GetSapVirtualInstanceInvokeDiskConfigurationsResultOutput) VolumeConfigurations() SAPDiskConfigurationResponseMapOutput {
	return o.ApplyT(func(v GetSapVirtualInstanceInvokeDiskConfigurationsResult) map[string]SAPDiskConfigurationResponse {
		return v.VolumeConfigurations
	}).(SAPDiskConfigurationResponseMapOutput)
}

func init() {
	pulumi.RegisterOutputType(GetSapVirtualInstanceInvokeDiskConfigurationsResultOutput{})
}
