// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20240901

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Gets the SAP Database Instance resource.
func LookupSapDatabaseInstance(ctx *pulumi.Context, args *LookupSapDatabaseInstanceArgs, opts ...pulumi.InvokeOption) (*LookupSapDatabaseInstanceResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv LookupSapDatabaseInstanceResult
	err := ctx.Invoke("azure-native:workloads/v20240901:getSapDatabaseInstance", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupSapDatabaseInstanceArgs struct {
	// Database resource name string modeled as parameter for auto generation to work correctly.
	DatabaseInstanceName string `pulumi:"databaseInstanceName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The name of the Virtual Instances for SAP solutions resource
	SapVirtualInstanceName string `pulumi:"sapVirtualInstanceName"`
}

// Define the Database resource.
type LookupSapDatabaseInstanceResult struct {
	// Database SID name.
	DatabaseSid string `pulumi:"databaseSid"`
	// Database type, that is if the DB is HANA, DB2, Oracle, SAP ASE, Max DB or MS SQL Server.
	DatabaseType string `pulumi:"databaseType"`
	// Defines the errors related to Database resource.
	Errors SAPVirtualInstanceErrorResponse `pulumi:"errors"`
	// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
	Id string `pulumi:"id"`
	// Database IP Address.
	IpAddress string `pulumi:"ipAddress"`
	// The Load Balancer details such as LoadBalancer ID attached to Database Virtual Machines
	LoadBalancerDetails LoadBalancerDetailsResponse `pulumi:"loadBalancerDetails"`
	// The geo-location where the resource lives
	Location string `pulumi:"location"`
	// The name of the resource
	Name string `pulumi:"name"`
	// Defines the provisioning states.
	ProvisioningState string `pulumi:"provisioningState"`
	// Defines the SAP Instance status.
	Status string `pulumi:"status"`
	// Database subnet.
	Subnet string `pulumi:"subnet"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponse `pulumi:"systemData"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type string `pulumi:"type"`
	// The list of virtual machines corresponding to the Database resource.
	VmDetails []DatabaseVmDetailsResponse `pulumi:"vmDetails"`
}

func LookupSapDatabaseInstanceOutput(ctx *pulumi.Context, args LookupSapDatabaseInstanceOutputArgs, opts ...pulumi.InvokeOption) LookupSapDatabaseInstanceResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupSapDatabaseInstanceResult, error) {
			args := v.(LookupSapDatabaseInstanceArgs)
			r, err := LookupSapDatabaseInstance(ctx, &args, opts...)
			var s LookupSapDatabaseInstanceResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupSapDatabaseInstanceResultOutput)
}

type LookupSapDatabaseInstanceOutputArgs struct {
	// Database resource name string modeled as parameter for auto generation to work correctly.
	DatabaseInstanceName pulumi.StringInput `pulumi:"databaseInstanceName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
	// The name of the Virtual Instances for SAP solutions resource
	SapVirtualInstanceName pulumi.StringInput `pulumi:"sapVirtualInstanceName"`
}

func (LookupSapDatabaseInstanceOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSapDatabaseInstanceArgs)(nil)).Elem()
}

// Define the Database resource.
type LookupSapDatabaseInstanceResultOutput struct{ *pulumi.OutputState }

func (LookupSapDatabaseInstanceResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSapDatabaseInstanceResult)(nil)).Elem()
}

func (o LookupSapDatabaseInstanceResultOutput) ToLookupSapDatabaseInstanceResultOutput() LookupSapDatabaseInstanceResultOutput {
	return o
}

func (o LookupSapDatabaseInstanceResultOutput) ToLookupSapDatabaseInstanceResultOutputWithContext(ctx context.Context) LookupSapDatabaseInstanceResultOutput {
	return o
}

// Database SID name.
func (o LookupSapDatabaseInstanceResultOutput) DatabaseSid() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSapDatabaseInstanceResult) string { return v.DatabaseSid }).(pulumi.StringOutput)
}

// Database type, that is if the DB is HANA, DB2, Oracle, SAP ASE, Max DB or MS SQL Server.
func (o LookupSapDatabaseInstanceResultOutput) DatabaseType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSapDatabaseInstanceResult) string { return v.DatabaseType }).(pulumi.StringOutput)
}

// Defines the errors related to Database resource.
func (o LookupSapDatabaseInstanceResultOutput) Errors() SAPVirtualInstanceErrorResponseOutput {
	return o.ApplyT(func(v LookupSapDatabaseInstanceResult) SAPVirtualInstanceErrorResponse { return v.Errors }).(SAPVirtualInstanceErrorResponseOutput)
}

// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
func (o LookupSapDatabaseInstanceResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSapDatabaseInstanceResult) string { return v.Id }).(pulumi.StringOutput)
}

// Database IP Address.
func (o LookupSapDatabaseInstanceResultOutput) IpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSapDatabaseInstanceResult) string { return v.IpAddress }).(pulumi.StringOutput)
}

// The Load Balancer details such as LoadBalancer ID attached to Database Virtual Machines
func (o LookupSapDatabaseInstanceResultOutput) LoadBalancerDetails() LoadBalancerDetailsResponseOutput {
	return o.ApplyT(func(v LookupSapDatabaseInstanceResult) LoadBalancerDetailsResponse { return v.LoadBalancerDetails }).(LoadBalancerDetailsResponseOutput)
}

// The geo-location where the resource lives
func (o LookupSapDatabaseInstanceResultOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSapDatabaseInstanceResult) string { return v.Location }).(pulumi.StringOutput)
}

// The name of the resource
func (o LookupSapDatabaseInstanceResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSapDatabaseInstanceResult) string { return v.Name }).(pulumi.StringOutput)
}

// Defines the provisioning states.
func (o LookupSapDatabaseInstanceResultOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSapDatabaseInstanceResult) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Defines the SAP Instance status.
func (o LookupSapDatabaseInstanceResultOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSapDatabaseInstanceResult) string { return v.Status }).(pulumi.StringOutput)
}

// Database subnet.
func (o LookupSapDatabaseInstanceResultOutput) Subnet() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSapDatabaseInstanceResult) string { return v.Subnet }).(pulumi.StringOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o LookupSapDatabaseInstanceResultOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v LookupSapDatabaseInstanceResult) SystemDataResponse { return v.SystemData }).(SystemDataResponseOutput)
}

// Resource tags.
func (o LookupSapDatabaseInstanceResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupSapDatabaseInstanceResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o LookupSapDatabaseInstanceResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSapDatabaseInstanceResult) string { return v.Type }).(pulumi.StringOutput)
}

// The list of virtual machines corresponding to the Database resource.
func (o LookupSapDatabaseInstanceResultOutput) VmDetails() DatabaseVmDetailsResponseArrayOutput {
	return o.ApplyT(func(v LookupSapDatabaseInstanceResult) []DatabaseVmDetailsResponse { return v.VmDetails }).(DatabaseVmDetailsResponseArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupSapDatabaseInstanceResultOutput{})
}
