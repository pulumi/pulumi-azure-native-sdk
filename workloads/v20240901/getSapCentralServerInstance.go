// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20240901

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Gets the SAP Central Services Instance resource.
func LookupSapCentralServerInstance(ctx *pulumi.Context, args *LookupSapCentralServerInstanceArgs, opts ...pulumi.InvokeOption) (*LookupSapCentralServerInstanceResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv LookupSapCentralServerInstanceResult
	err := ctx.Invoke("azure-native:workloads/v20240901:getSapCentralServerInstance", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupSapCentralServerInstanceArgs struct {
	// Central Services Instance resource name string modeled as parameter for auto generation to work correctly.
	CentralInstanceName string `pulumi:"centralInstanceName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The name of the Virtual Instances for SAP solutions resource
	SapVirtualInstanceName string `pulumi:"sapVirtualInstanceName"`
}

// Define the SAP Central Services Instance resource.
type LookupSapCentralServerInstanceResult struct {
	// Defines the SAP Enqueue Replication Server (ERS) properties.
	EnqueueReplicationServerProperties *EnqueueReplicationServerPropertiesResponse `pulumi:"enqueueReplicationServerProperties"`
	// Defines the SAP Enqueue Server properties.
	EnqueueServerProperties *EnqueueServerPropertiesResponse `pulumi:"enqueueServerProperties"`
	// Defines the errors related to SAP Central Services Instance resource.
	Errors SAPVirtualInstanceErrorResponse `pulumi:"errors"`
	// Defines the SAP Gateway Server properties.
	GatewayServerProperties *GatewayServerPropertiesResponse `pulumi:"gatewayServerProperties"`
	// Defines the health of SAP Instances.
	Health string `pulumi:"health"`
	// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
	Id string `pulumi:"id"`
	// The central services instance number.
	InstanceNo string `pulumi:"instanceNo"`
	// The central services instance Kernel Patch level.
	KernelPatch string `pulumi:"kernelPatch"`
	// The central services instance Kernel Version.
	KernelVersion string `pulumi:"kernelVersion"`
	// The Load Balancer details such as LoadBalancer ID attached to ASCS Virtual Machines
	LoadBalancerDetails LoadBalancerDetailsResponse `pulumi:"loadBalancerDetails"`
	// The geo-location where the resource lives
	Location string `pulumi:"location"`
	// Defines the SAP message server properties.
	MessageServerProperties *MessageServerPropertiesResponse `pulumi:"messageServerProperties"`
	// The name of the resource
	Name string `pulumi:"name"`
	// Defines the provisioning states.
	ProvisioningState string `pulumi:"provisioningState"`
	// Defines the SAP Instance status.
	Status string `pulumi:"status"`
	// The central services instance subnet.
	Subnet string `pulumi:"subnet"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponse `pulumi:"systemData"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type string `pulumi:"type"`
	// The list of virtual machines corresponding to the Central Services instance.
	VmDetails []CentralServerVmDetailsResponse `pulumi:"vmDetails"`
}

func LookupSapCentralServerInstanceOutput(ctx *pulumi.Context, args LookupSapCentralServerInstanceOutputArgs, opts ...pulumi.InvokeOption) LookupSapCentralServerInstanceResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupSapCentralServerInstanceResult, error) {
			args := v.(LookupSapCentralServerInstanceArgs)
			r, err := LookupSapCentralServerInstance(ctx, &args, opts...)
			var s LookupSapCentralServerInstanceResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupSapCentralServerInstanceResultOutput)
}

type LookupSapCentralServerInstanceOutputArgs struct {
	// Central Services Instance resource name string modeled as parameter for auto generation to work correctly.
	CentralInstanceName pulumi.StringInput `pulumi:"centralInstanceName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
	// The name of the Virtual Instances for SAP solutions resource
	SapVirtualInstanceName pulumi.StringInput `pulumi:"sapVirtualInstanceName"`
}

func (LookupSapCentralServerInstanceOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSapCentralServerInstanceArgs)(nil)).Elem()
}

// Define the SAP Central Services Instance resource.
type LookupSapCentralServerInstanceResultOutput struct{ *pulumi.OutputState }

func (LookupSapCentralServerInstanceResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSapCentralServerInstanceResult)(nil)).Elem()
}

func (o LookupSapCentralServerInstanceResultOutput) ToLookupSapCentralServerInstanceResultOutput() LookupSapCentralServerInstanceResultOutput {
	return o
}

func (o LookupSapCentralServerInstanceResultOutput) ToLookupSapCentralServerInstanceResultOutputWithContext(ctx context.Context) LookupSapCentralServerInstanceResultOutput {
	return o
}

// Defines the SAP Enqueue Replication Server (ERS) properties.
func (o LookupSapCentralServerInstanceResultOutput) EnqueueReplicationServerProperties() EnqueueReplicationServerPropertiesResponsePtrOutput {
	return o.ApplyT(func(v LookupSapCentralServerInstanceResult) *EnqueueReplicationServerPropertiesResponse {
		return v.EnqueueReplicationServerProperties
	}).(EnqueueReplicationServerPropertiesResponsePtrOutput)
}

// Defines the SAP Enqueue Server properties.
func (o LookupSapCentralServerInstanceResultOutput) EnqueueServerProperties() EnqueueServerPropertiesResponsePtrOutput {
	return o.ApplyT(func(v LookupSapCentralServerInstanceResult) *EnqueueServerPropertiesResponse {
		return v.EnqueueServerProperties
	}).(EnqueueServerPropertiesResponsePtrOutput)
}

// Defines the errors related to SAP Central Services Instance resource.
func (o LookupSapCentralServerInstanceResultOutput) Errors() SAPVirtualInstanceErrorResponseOutput {
	return o.ApplyT(func(v LookupSapCentralServerInstanceResult) SAPVirtualInstanceErrorResponse { return v.Errors }).(SAPVirtualInstanceErrorResponseOutput)
}

// Defines the SAP Gateway Server properties.
func (o LookupSapCentralServerInstanceResultOutput) GatewayServerProperties() GatewayServerPropertiesResponsePtrOutput {
	return o.ApplyT(func(v LookupSapCentralServerInstanceResult) *GatewayServerPropertiesResponse {
		return v.GatewayServerProperties
	}).(GatewayServerPropertiesResponsePtrOutput)
}

// Defines the health of SAP Instances.
func (o LookupSapCentralServerInstanceResultOutput) Health() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSapCentralServerInstanceResult) string { return v.Health }).(pulumi.StringOutput)
}

// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
func (o LookupSapCentralServerInstanceResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSapCentralServerInstanceResult) string { return v.Id }).(pulumi.StringOutput)
}

// The central services instance number.
func (o LookupSapCentralServerInstanceResultOutput) InstanceNo() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSapCentralServerInstanceResult) string { return v.InstanceNo }).(pulumi.StringOutput)
}

// The central services instance Kernel Patch level.
func (o LookupSapCentralServerInstanceResultOutput) KernelPatch() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSapCentralServerInstanceResult) string { return v.KernelPatch }).(pulumi.StringOutput)
}

// The central services instance Kernel Version.
func (o LookupSapCentralServerInstanceResultOutput) KernelVersion() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSapCentralServerInstanceResult) string { return v.KernelVersion }).(pulumi.StringOutput)
}

// The Load Balancer details such as LoadBalancer ID attached to ASCS Virtual Machines
func (o LookupSapCentralServerInstanceResultOutput) LoadBalancerDetails() LoadBalancerDetailsResponseOutput {
	return o.ApplyT(func(v LookupSapCentralServerInstanceResult) LoadBalancerDetailsResponse { return v.LoadBalancerDetails }).(LoadBalancerDetailsResponseOutput)
}

// The geo-location where the resource lives
func (o LookupSapCentralServerInstanceResultOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSapCentralServerInstanceResult) string { return v.Location }).(pulumi.StringOutput)
}

// Defines the SAP message server properties.
func (o LookupSapCentralServerInstanceResultOutput) MessageServerProperties() MessageServerPropertiesResponsePtrOutput {
	return o.ApplyT(func(v LookupSapCentralServerInstanceResult) *MessageServerPropertiesResponse {
		return v.MessageServerProperties
	}).(MessageServerPropertiesResponsePtrOutput)
}

// The name of the resource
func (o LookupSapCentralServerInstanceResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSapCentralServerInstanceResult) string { return v.Name }).(pulumi.StringOutput)
}

// Defines the provisioning states.
func (o LookupSapCentralServerInstanceResultOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSapCentralServerInstanceResult) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Defines the SAP Instance status.
func (o LookupSapCentralServerInstanceResultOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSapCentralServerInstanceResult) string { return v.Status }).(pulumi.StringOutput)
}

// The central services instance subnet.
func (o LookupSapCentralServerInstanceResultOutput) Subnet() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSapCentralServerInstanceResult) string { return v.Subnet }).(pulumi.StringOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o LookupSapCentralServerInstanceResultOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v LookupSapCentralServerInstanceResult) SystemDataResponse { return v.SystemData }).(SystemDataResponseOutput)
}

// Resource tags.
func (o LookupSapCentralServerInstanceResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupSapCentralServerInstanceResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o LookupSapCentralServerInstanceResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSapCentralServerInstanceResult) string { return v.Type }).(pulumi.StringOutput)
}

// The list of virtual machines corresponding to the Central Services instance.
func (o LookupSapCentralServerInstanceResultOutput) VmDetails() CentralServerVmDetailsResponseArrayOutput {
	return o.ApplyT(func(v LookupSapCentralServerInstanceResult) []CentralServerVmDetailsResponse { return v.VmDetails }).(CentralServerVmDetailsResponseArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupSapCentralServerInstanceResultOutput{})
}
