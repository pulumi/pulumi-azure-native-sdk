// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20240901

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Get the recommended SAP Availability Zone Pair Details for your region.
func GetSapVirtualInstanceAvailabilityZoneDetails(ctx *pulumi.Context, args *GetSapVirtualInstanceAvailabilityZoneDetailsArgs, opts ...pulumi.InvokeOption) (*GetSapVirtualInstanceAvailabilityZoneDetailsResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv GetSapVirtualInstanceAvailabilityZoneDetailsResult
	err := ctx.Invoke("azure-native:workloads/v20240901:getSapVirtualInstanceAvailabilityZoneDetails", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type GetSapVirtualInstanceAvailabilityZoneDetailsArgs struct {
	// The geo-location where the SAP resources will be created.
	AppLocation string `pulumi:"appLocation"`
	// The database type. Eg: HANA, DB2, etc
	DatabaseType string `pulumi:"databaseType"`
	// The name of the Azure region.
	Location string `pulumi:"location"`
	// Defines the SAP Product type.
	SapProduct string `pulumi:"sapProduct"`
}

// The list of supported availability zone pairs which are part of SAP HA deployment.
type GetSapVirtualInstanceAvailabilityZoneDetailsResult struct {
	// Gets the list of availability zone pairs.
	AvailabilityZonePairs []SAPAvailabilityZonePairResponse `pulumi:"availabilityZonePairs"`
}

func GetSapVirtualInstanceAvailabilityZoneDetailsOutput(ctx *pulumi.Context, args GetSapVirtualInstanceAvailabilityZoneDetailsOutputArgs, opts ...pulumi.InvokeOption) GetSapVirtualInstanceAvailabilityZoneDetailsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetSapVirtualInstanceAvailabilityZoneDetailsResult, error) {
			args := v.(GetSapVirtualInstanceAvailabilityZoneDetailsArgs)
			r, err := GetSapVirtualInstanceAvailabilityZoneDetails(ctx, &args, opts...)
			var s GetSapVirtualInstanceAvailabilityZoneDetailsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetSapVirtualInstanceAvailabilityZoneDetailsResultOutput)
}

type GetSapVirtualInstanceAvailabilityZoneDetailsOutputArgs struct {
	// The geo-location where the SAP resources will be created.
	AppLocation pulumi.StringInput `pulumi:"appLocation"`
	// The database type. Eg: HANA, DB2, etc
	DatabaseType pulumi.StringInput `pulumi:"databaseType"`
	// The name of the Azure region.
	Location pulumi.StringInput `pulumi:"location"`
	// Defines the SAP Product type.
	SapProduct pulumi.StringInput `pulumi:"sapProduct"`
}

func (GetSapVirtualInstanceAvailabilityZoneDetailsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSapVirtualInstanceAvailabilityZoneDetailsArgs)(nil)).Elem()
}

// The list of supported availability zone pairs which are part of SAP HA deployment.
type GetSapVirtualInstanceAvailabilityZoneDetailsResultOutput struct{ *pulumi.OutputState }

func (GetSapVirtualInstanceAvailabilityZoneDetailsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSapVirtualInstanceAvailabilityZoneDetailsResult)(nil)).Elem()
}

func (o GetSapVirtualInstanceAvailabilityZoneDetailsResultOutput) ToGetSapVirtualInstanceAvailabilityZoneDetailsResultOutput() GetSapVirtualInstanceAvailabilityZoneDetailsResultOutput {
	return o
}

func (o GetSapVirtualInstanceAvailabilityZoneDetailsResultOutput) ToGetSapVirtualInstanceAvailabilityZoneDetailsResultOutputWithContext(ctx context.Context) GetSapVirtualInstanceAvailabilityZoneDetailsResultOutput {
	return o
}

// Gets the list of availability zone pairs.
func (o GetSapVirtualInstanceAvailabilityZoneDetailsResultOutput) AvailabilityZonePairs() SAPAvailabilityZonePairResponseArrayOutput {
	return o.ApplyT(func(v GetSapVirtualInstanceAvailabilityZoneDetailsResult) []SAPAvailabilityZonePairResponse {
		return v.AvailabilityZonePairs
	}).(SAPAvailabilityZonePairResponseArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetSapVirtualInstanceAvailabilityZoneDetailsResultOutput{})
}
