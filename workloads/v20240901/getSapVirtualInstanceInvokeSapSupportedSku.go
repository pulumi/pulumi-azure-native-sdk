// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20240901

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Get a list of SAP supported SKUs for ASCS, Application and Database tier.
func GetSapVirtualInstanceInvokeSapSupportedSku(ctx *pulumi.Context, args *GetSapVirtualInstanceInvokeSapSupportedSkuArgs, opts ...pulumi.InvokeOption) (*GetSapVirtualInstanceInvokeSapSupportedSkuResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv GetSapVirtualInstanceInvokeSapSupportedSkuResult
	err := ctx.Invoke("azure-native:workloads/v20240901:getSapVirtualInstanceInvokeSapSupportedSku", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type GetSapVirtualInstanceInvokeSapSupportedSkuArgs struct {
	// The geo-location where the resource is to be created.
	AppLocation string `pulumi:"appLocation"`
	// The database type. Eg: HANA, DB2, etc
	DatabaseType string `pulumi:"databaseType"`
	// The deployment type. Eg: SingleServer/ThreeTier
	DeploymentType string `pulumi:"deploymentType"`
	// Defines the environment type - Production/Non Production.
	Environment string `pulumi:"environment"`
	// The high availability type.
	HighAvailabilityType *string `pulumi:"highAvailabilityType"`
	// The name of the Azure region.
	Location string `pulumi:"location"`
	// Defines the SAP Product type.
	SapProduct string `pulumi:"sapProduct"`
}

// The list of supported SKUs for different resources which are part of SAP deployment.
type GetSapVirtualInstanceInvokeSapSupportedSkuResult struct {
	// Gets the list of SAP supported SKUs.
	SupportedSkus []SAPSupportedSkuResponse `pulumi:"supportedSkus"`
}

func GetSapVirtualInstanceInvokeSapSupportedSkuOutput(ctx *pulumi.Context, args GetSapVirtualInstanceInvokeSapSupportedSkuOutputArgs, opts ...pulumi.InvokeOption) GetSapVirtualInstanceInvokeSapSupportedSkuResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetSapVirtualInstanceInvokeSapSupportedSkuResultOutput, error) {
			args := v.(GetSapVirtualInstanceInvokeSapSupportedSkuArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: utilities.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("azure-native:workloads/v20240901:getSapVirtualInstanceInvokeSapSupportedSku", args, GetSapVirtualInstanceInvokeSapSupportedSkuResultOutput{}, options).(GetSapVirtualInstanceInvokeSapSupportedSkuResultOutput), nil
		}).(GetSapVirtualInstanceInvokeSapSupportedSkuResultOutput)
}

type GetSapVirtualInstanceInvokeSapSupportedSkuOutputArgs struct {
	// The geo-location where the resource is to be created.
	AppLocation pulumi.StringInput `pulumi:"appLocation"`
	// The database type. Eg: HANA, DB2, etc
	DatabaseType pulumi.StringInput `pulumi:"databaseType"`
	// The deployment type. Eg: SingleServer/ThreeTier
	DeploymentType pulumi.StringInput `pulumi:"deploymentType"`
	// Defines the environment type - Production/Non Production.
	Environment pulumi.StringInput `pulumi:"environment"`
	// The high availability type.
	HighAvailabilityType pulumi.StringPtrInput `pulumi:"highAvailabilityType"`
	// The name of the Azure region.
	Location pulumi.StringInput `pulumi:"location"`
	// Defines the SAP Product type.
	SapProduct pulumi.StringInput `pulumi:"sapProduct"`
}

func (GetSapVirtualInstanceInvokeSapSupportedSkuOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSapVirtualInstanceInvokeSapSupportedSkuArgs)(nil)).Elem()
}

// The list of supported SKUs for different resources which are part of SAP deployment.
type GetSapVirtualInstanceInvokeSapSupportedSkuResultOutput struct{ *pulumi.OutputState }

func (GetSapVirtualInstanceInvokeSapSupportedSkuResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSapVirtualInstanceInvokeSapSupportedSkuResult)(nil)).Elem()
}

func (o GetSapVirtualInstanceInvokeSapSupportedSkuResultOutput) ToGetSapVirtualInstanceInvokeSapSupportedSkuResultOutput() GetSapVirtualInstanceInvokeSapSupportedSkuResultOutput {
	return o
}

func (o GetSapVirtualInstanceInvokeSapSupportedSkuResultOutput) ToGetSapVirtualInstanceInvokeSapSupportedSkuResultOutputWithContext(ctx context.Context) GetSapVirtualInstanceInvokeSapSupportedSkuResultOutput {
	return o
}

// Gets the list of SAP supported SKUs.
func (o GetSapVirtualInstanceInvokeSapSupportedSkuResultOutput) SupportedSkus() SAPSupportedSkuResponseArrayOutput {
	return o.ApplyT(func(v GetSapVirtualInstanceInvokeSapSupportedSkuResult) []SAPSupportedSkuResponse {
		return v.SupportedSkus
	}).(SAPSupportedSkuResponseArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetSapVirtualInstanceInvokeSapSupportedSkuResultOutput{})
}
