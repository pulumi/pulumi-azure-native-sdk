// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20240901

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Get the SAP Disk Configuration Layout prod/non-prod SAP System.
func GetSapVirtualInstanceDiskConfigurations(ctx *pulumi.Context, args *GetSapVirtualInstanceDiskConfigurationsArgs, opts ...pulumi.InvokeOption) (*GetSapVirtualInstanceDiskConfigurationsResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv GetSapVirtualInstanceDiskConfigurationsResult
	err := ctx.Invoke("azure-native:workloads/v20240901:getSapVirtualInstanceDiskConfigurations", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type GetSapVirtualInstanceDiskConfigurationsArgs struct {
	// The geo-location where the SAP resources will be created.
	AppLocation string `pulumi:"appLocation"`
	// The database type. Eg: HANA, DB2, etc
	DatabaseType string `pulumi:"databaseType"`
	// The VM SKU for database instance.
	DbVmSku string `pulumi:"dbVmSku"`
	// The deployment type. Eg: SingleServer/ThreeTier
	DeploymentType string `pulumi:"deploymentType"`
	// Defines the environment type - Production/Non Production.
	Environment string `pulumi:"environment"`
	// The name of the Azure region.
	Location string `pulumi:"location"`
	// Defines the SAP Product type.
	SapProduct string `pulumi:"sapProduct"`
}

// The list of disk configuration for vmSku which are part of SAP deployment.
type GetSapVirtualInstanceDiskConfigurationsResult struct {
	// The disk configuration for the db volume. For HANA, Required volumes are: ['hana/data', 'hana/log', hana/shared', 'usr/sap', 'os'], Optional volume : ['backup'].
	VolumeConfigurations map[string]SAPDiskConfigurationResponse `pulumi:"volumeConfigurations"`
}

func GetSapVirtualInstanceDiskConfigurationsOutput(ctx *pulumi.Context, args GetSapVirtualInstanceDiskConfigurationsOutputArgs, opts ...pulumi.InvokeOption) GetSapVirtualInstanceDiskConfigurationsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetSapVirtualInstanceDiskConfigurationsResultOutput, error) {
			args := v.(GetSapVirtualInstanceDiskConfigurationsArgs)
			opts = utilities.PkgInvokeDefaultOpts(opts)
			var rv GetSapVirtualInstanceDiskConfigurationsResult
			secret, err := ctx.InvokePackageRaw("azure-native:workloads/v20240901:getSapVirtualInstanceDiskConfigurations", args, &rv, "", opts...)
			if err != nil {
				return GetSapVirtualInstanceDiskConfigurationsResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(GetSapVirtualInstanceDiskConfigurationsResultOutput)
			if secret {
				return pulumi.ToSecret(output).(GetSapVirtualInstanceDiskConfigurationsResultOutput), nil
			}
			return output, nil
		}).(GetSapVirtualInstanceDiskConfigurationsResultOutput)
}

type GetSapVirtualInstanceDiskConfigurationsOutputArgs struct {
	// The geo-location where the SAP resources will be created.
	AppLocation pulumi.StringInput `pulumi:"appLocation"`
	// The database type. Eg: HANA, DB2, etc
	DatabaseType pulumi.StringInput `pulumi:"databaseType"`
	// The VM SKU for database instance.
	DbVmSku pulumi.StringInput `pulumi:"dbVmSku"`
	// The deployment type. Eg: SingleServer/ThreeTier
	DeploymentType pulumi.StringInput `pulumi:"deploymentType"`
	// Defines the environment type - Production/Non Production.
	Environment pulumi.StringInput `pulumi:"environment"`
	// The name of the Azure region.
	Location pulumi.StringInput `pulumi:"location"`
	// Defines the SAP Product type.
	SapProduct pulumi.StringInput `pulumi:"sapProduct"`
}

func (GetSapVirtualInstanceDiskConfigurationsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSapVirtualInstanceDiskConfigurationsArgs)(nil)).Elem()
}

// The list of disk configuration for vmSku which are part of SAP deployment.
type GetSapVirtualInstanceDiskConfigurationsResultOutput struct{ *pulumi.OutputState }

func (GetSapVirtualInstanceDiskConfigurationsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSapVirtualInstanceDiskConfigurationsResult)(nil)).Elem()
}

func (o GetSapVirtualInstanceDiskConfigurationsResultOutput) ToGetSapVirtualInstanceDiskConfigurationsResultOutput() GetSapVirtualInstanceDiskConfigurationsResultOutput {
	return o
}

func (o GetSapVirtualInstanceDiskConfigurationsResultOutput) ToGetSapVirtualInstanceDiskConfigurationsResultOutputWithContext(ctx context.Context) GetSapVirtualInstanceDiskConfigurationsResultOutput {
	return o
}

// The disk configuration for the db volume. For HANA, Required volumes are: ['hana/data', 'hana/log', hana/shared', 'usr/sap', 'os'], Optional volume : ['backup'].
func (o GetSapVirtualInstanceDiskConfigurationsResultOutput) VolumeConfigurations() SAPDiskConfigurationResponseMapOutput {
	return o.ApplyT(func(v GetSapVirtualInstanceDiskConfigurationsResult) map[string]SAPDiskConfigurationResponse {
		return v.VolumeConfigurations
	}).(SAPDiskConfigurationResponseMapOutput)
}

func init() {
	pulumi.RegisterOutputType(GetSapVirtualInstanceDiskConfigurationsResultOutput{})
}
