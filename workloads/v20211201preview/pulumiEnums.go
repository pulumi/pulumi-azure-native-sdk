// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20211201preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Whether to enable Azure front door
type AzureFrontDoorEnabled string

const (
	AzureFrontDoorEnabledEnabled  = AzureFrontDoorEnabled("Enabled")
	AzureFrontDoorEnabledDisabled = AzureFrontDoorEnabled("Disabled")
)

func (AzureFrontDoorEnabled) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFrontDoorEnabled)(nil)).Elem()
}

func (e AzureFrontDoorEnabled) ToAzureFrontDoorEnabledOutput() AzureFrontDoorEnabledOutput {
	return pulumi.ToOutput(e).(AzureFrontDoorEnabledOutput)
}

func (e AzureFrontDoorEnabled) ToAzureFrontDoorEnabledOutputWithContext(ctx context.Context) AzureFrontDoorEnabledOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AzureFrontDoorEnabledOutput)
}

func (e AzureFrontDoorEnabled) ToAzureFrontDoorEnabledPtrOutput() AzureFrontDoorEnabledPtrOutput {
	return e.ToAzureFrontDoorEnabledPtrOutputWithContext(context.Background())
}

func (e AzureFrontDoorEnabled) ToAzureFrontDoorEnabledPtrOutputWithContext(ctx context.Context) AzureFrontDoorEnabledPtrOutput {
	return AzureFrontDoorEnabled(e).ToAzureFrontDoorEnabledOutputWithContext(ctx).ToAzureFrontDoorEnabledPtrOutputWithContext(ctx)
}

func (e AzureFrontDoorEnabled) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AzureFrontDoorEnabled) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AzureFrontDoorEnabled) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AzureFrontDoorEnabled) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AzureFrontDoorEnabledOutput struct{ *pulumi.OutputState }

func (AzureFrontDoorEnabledOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFrontDoorEnabled)(nil)).Elem()
}

func (o AzureFrontDoorEnabledOutput) ToAzureFrontDoorEnabledOutput() AzureFrontDoorEnabledOutput {
	return o
}

func (o AzureFrontDoorEnabledOutput) ToAzureFrontDoorEnabledOutputWithContext(ctx context.Context) AzureFrontDoorEnabledOutput {
	return o
}

func (o AzureFrontDoorEnabledOutput) ToAzureFrontDoorEnabledPtrOutput() AzureFrontDoorEnabledPtrOutput {
	return o.ToAzureFrontDoorEnabledPtrOutputWithContext(context.Background())
}

func (o AzureFrontDoorEnabledOutput) ToAzureFrontDoorEnabledPtrOutputWithContext(ctx context.Context) AzureFrontDoorEnabledPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AzureFrontDoorEnabled) *AzureFrontDoorEnabled {
		return &v
	}).(AzureFrontDoorEnabledPtrOutput)
}

func (o AzureFrontDoorEnabledOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AzureFrontDoorEnabledOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AzureFrontDoorEnabled) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AzureFrontDoorEnabledOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AzureFrontDoorEnabledOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AzureFrontDoorEnabled) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AzureFrontDoorEnabledPtrOutput struct{ *pulumi.OutputState }

func (AzureFrontDoorEnabledPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureFrontDoorEnabled)(nil)).Elem()
}

func (o AzureFrontDoorEnabledPtrOutput) ToAzureFrontDoorEnabledPtrOutput() AzureFrontDoorEnabledPtrOutput {
	return o
}

func (o AzureFrontDoorEnabledPtrOutput) ToAzureFrontDoorEnabledPtrOutputWithContext(ctx context.Context) AzureFrontDoorEnabledPtrOutput {
	return o
}

func (o AzureFrontDoorEnabledPtrOutput) Elem() AzureFrontDoorEnabledOutput {
	return o.ApplyT(func(v *AzureFrontDoorEnabled) AzureFrontDoorEnabled {
		if v != nil {
			return *v
		}
		var ret AzureFrontDoorEnabled
		return ret
	}).(AzureFrontDoorEnabledOutput)
}

func (o AzureFrontDoorEnabledPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AzureFrontDoorEnabledPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AzureFrontDoorEnabled) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AzureFrontDoorEnabledInput is an input type that accepts values of the AzureFrontDoorEnabled enum
// A concrete instance of `AzureFrontDoorEnabledInput` can be one of the following:
//
//	AzureFrontDoorEnabledEnabled
//	AzureFrontDoorEnabledDisabled
type AzureFrontDoorEnabledInput interface {
	pulumi.Input

	ToAzureFrontDoorEnabledOutput() AzureFrontDoorEnabledOutput
	ToAzureFrontDoorEnabledOutputWithContext(context.Context) AzureFrontDoorEnabledOutput
}

var azureFrontDoorEnabledPtrType = reflect.TypeOf((**AzureFrontDoorEnabled)(nil)).Elem()

type AzureFrontDoorEnabledPtrInput interface {
	pulumi.Input

	ToAzureFrontDoorEnabledPtrOutput() AzureFrontDoorEnabledPtrOutput
	ToAzureFrontDoorEnabledPtrOutputWithContext(context.Context) AzureFrontDoorEnabledPtrOutput
}

type azureFrontDoorEnabledPtr string

func AzureFrontDoorEnabledPtr(v string) AzureFrontDoorEnabledPtrInput {
	return (*azureFrontDoorEnabledPtr)(&v)
}

func (*azureFrontDoorEnabledPtr) ElementType() reflect.Type {
	return azureFrontDoorEnabledPtrType
}

func (in *azureFrontDoorEnabledPtr) ToAzureFrontDoorEnabledPtrOutput() AzureFrontDoorEnabledPtrOutput {
	return pulumi.ToOutput(in).(AzureFrontDoorEnabledPtrOutput)
}

func (in *azureFrontDoorEnabledPtr) ToAzureFrontDoorEnabledPtrOutputWithContext(ctx context.Context) AzureFrontDoorEnabledPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AzureFrontDoorEnabledPtrOutput)
}

func (in *azureFrontDoorEnabledPtr) ToOutput(ctx context.Context) pulumix.Output[*AzureFrontDoorEnabled] {
	return pulumix.Output[*AzureFrontDoorEnabled]{
		OutputState: in.ToAzureFrontDoorEnabledPtrOutputWithContext(ctx).OutputState,
	}
}

// Tier of the server SKU
type DatabaseTier string

const (
	DatabaseTierBurstable       = DatabaseTier("Burstable")
	DatabaseTierGeneralPurpose  = DatabaseTier("GeneralPurpose")
	DatabaseTierMemoryOptimized = DatabaseTier("MemoryOptimized")
)

func (DatabaseTier) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseTier)(nil)).Elem()
}

func (e DatabaseTier) ToDatabaseTierOutput() DatabaseTierOutput {
	return pulumi.ToOutput(e).(DatabaseTierOutput)
}

func (e DatabaseTier) ToDatabaseTierOutputWithContext(ctx context.Context) DatabaseTierOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DatabaseTierOutput)
}

func (e DatabaseTier) ToDatabaseTierPtrOutput() DatabaseTierPtrOutput {
	return e.ToDatabaseTierPtrOutputWithContext(context.Background())
}

func (e DatabaseTier) ToDatabaseTierPtrOutputWithContext(ctx context.Context) DatabaseTierPtrOutput {
	return DatabaseTier(e).ToDatabaseTierOutputWithContext(ctx).ToDatabaseTierPtrOutputWithContext(ctx)
}

func (e DatabaseTier) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DatabaseTier) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DatabaseTier) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DatabaseTier) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DatabaseTierOutput struct{ *pulumi.OutputState }

func (DatabaseTierOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseTier)(nil)).Elem()
}

func (o DatabaseTierOutput) ToDatabaseTierOutput() DatabaseTierOutput {
	return o
}

func (o DatabaseTierOutput) ToDatabaseTierOutputWithContext(ctx context.Context) DatabaseTierOutput {
	return o
}

func (o DatabaseTierOutput) ToDatabaseTierPtrOutput() DatabaseTierPtrOutput {
	return o.ToDatabaseTierPtrOutputWithContext(context.Background())
}

func (o DatabaseTierOutput) ToDatabaseTierPtrOutputWithContext(ctx context.Context) DatabaseTierPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatabaseTier) *DatabaseTier {
		return &v
	}).(DatabaseTierPtrOutput)
}

func (o DatabaseTierOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DatabaseTierOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DatabaseTier) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DatabaseTierOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DatabaseTierOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DatabaseTier) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DatabaseTierPtrOutput struct{ *pulumi.OutputState }

func (DatabaseTierPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatabaseTier)(nil)).Elem()
}

func (o DatabaseTierPtrOutput) ToDatabaseTierPtrOutput() DatabaseTierPtrOutput {
	return o
}

func (o DatabaseTierPtrOutput) ToDatabaseTierPtrOutputWithContext(ctx context.Context) DatabaseTierPtrOutput {
	return o
}

func (o DatabaseTierPtrOutput) Elem() DatabaseTierOutput {
	return o.ApplyT(func(v *DatabaseTier) DatabaseTier {
		if v != nil {
			return *v
		}
		var ret DatabaseTier
		return ret
	}).(DatabaseTierOutput)
}

func (o DatabaseTierPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DatabaseTierPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DatabaseTier) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DatabaseTierInput is an input type that accepts values of the DatabaseTier enum
// A concrete instance of `DatabaseTierInput` can be one of the following:
//
//	DatabaseTierBurstable
//	DatabaseTierGeneralPurpose
//	DatabaseTierMemoryOptimized
type DatabaseTierInput interface {
	pulumi.Input

	ToDatabaseTierOutput() DatabaseTierOutput
	ToDatabaseTierOutputWithContext(context.Context) DatabaseTierOutput
}

var databaseTierPtrType = reflect.TypeOf((**DatabaseTier)(nil)).Elem()

type DatabaseTierPtrInput interface {
	pulumi.Input

	ToDatabaseTierPtrOutput() DatabaseTierPtrOutput
	ToDatabaseTierPtrOutputWithContext(context.Context) DatabaseTierPtrOutput
}

type databaseTierPtr string

func DatabaseTierPtr(v string) DatabaseTierPtrInput {
	return (*databaseTierPtr)(&v)
}

func (*databaseTierPtr) ElementType() reflect.Type {
	return databaseTierPtrType
}

func (in *databaseTierPtr) ToDatabaseTierPtrOutput() DatabaseTierPtrOutput {
	return pulumi.ToOutput(in).(DatabaseTierPtrOutput)
}

func (in *databaseTierPtr) ToDatabaseTierPtrOutputWithContext(ctx context.Context) DatabaseTierPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DatabaseTierPtrOutput)
}

func (in *databaseTierPtr) ToOutput(ctx context.Context) pulumix.Output[*DatabaseTier] {
	return pulumix.Output[*DatabaseTier]{
		OutputState: in.ToDatabaseTierPtrOutputWithContext(ctx).OutputState,
	}
}

// Database type
type DatabaseType string

const (
	DatabaseTypeMySql = DatabaseType("MySql")
)

func (DatabaseType) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseType)(nil)).Elem()
}

func (e DatabaseType) ToDatabaseTypeOutput() DatabaseTypeOutput {
	return pulumi.ToOutput(e).(DatabaseTypeOutput)
}

func (e DatabaseType) ToDatabaseTypeOutputWithContext(ctx context.Context) DatabaseTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DatabaseTypeOutput)
}

func (e DatabaseType) ToDatabaseTypePtrOutput() DatabaseTypePtrOutput {
	return e.ToDatabaseTypePtrOutputWithContext(context.Background())
}

func (e DatabaseType) ToDatabaseTypePtrOutputWithContext(ctx context.Context) DatabaseTypePtrOutput {
	return DatabaseType(e).ToDatabaseTypeOutputWithContext(ctx).ToDatabaseTypePtrOutputWithContext(ctx)
}

func (e DatabaseType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DatabaseType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DatabaseType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DatabaseType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DatabaseTypeOutput struct{ *pulumi.OutputState }

func (DatabaseTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseType)(nil)).Elem()
}

func (o DatabaseTypeOutput) ToDatabaseTypeOutput() DatabaseTypeOutput {
	return o
}

func (o DatabaseTypeOutput) ToDatabaseTypeOutputWithContext(ctx context.Context) DatabaseTypeOutput {
	return o
}

func (o DatabaseTypeOutput) ToDatabaseTypePtrOutput() DatabaseTypePtrOutput {
	return o.ToDatabaseTypePtrOutputWithContext(context.Background())
}

func (o DatabaseTypeOutput) ToDatabaseTypePtrOutputWithContext(ctx context.Context) DatabaseTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatabaseType) *DatabaseType {
		return &v
	}).(DatabaseTypePtrOutput)
}

func (o DatabaseTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DatabaseTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DatabaseType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DatabaseTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DatabaseTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DatabaseType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DatabaseTypePtrOutput struct{ *pulumi.OutputState }

func (DatabaseTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatabaseType)(nil)).Elem()
}

func (o DatabaseTypePtrOutput) ToDatabaseTypePtrOutput() DatabaseTypePtrOutput {
	return o
}

func (o DatabaseTypePtrOutput) ToDatabaseTypePtrOutputWithContext(ctx context.Context) DatabaseTypePtrOutput {
	return o
}

func (o DatabaseTypePtrOutput) Elem() DatabaseTypeOutput {
	return o.ApplyT(func(v *DatabaseType) DatabaseType {
		if v != nil {
			return *v
		}
		var ret DatabaseType
		return ret
	}).(DatabaseTypeOutput)
}

func (o DatabaseTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DatabaseTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DatabaseType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DatabaseTypeInput is an input type that accepts values of the DatabaseType enum
// A concrete instance of `DatabaseTypeInput` can be one of the following:
//
//	DatabaseTypeMySql
type DatabaseTypeInput interface {
	pulumi.Input

	ToDatabaseTypeOutput() DatabaseTypeOutput
	ToDatabaseTypeOutputWithContext(context.Context) DatabaseTypeOutput
}

var databaseTypePtrType = reflect.TypeOf((**DatabaseType)(nil)).Elem()

type DatabaseTypePtrInput interface {
	pulumi.Input

	ToDatabaseTypePtrOutput() DatabaseTypePtrOutput
	ToDatabaseTypePtrOutputWithContext(context.Context) DatabaseTypePtrOutput
}

type databaseTypePtr string

func DatabaseTypePtr(v string) DatabaseTypePtrInput {
	return (*databaseTypePtr)(&v)
}

func (*databaseTypePtr) ElementType() reflect.Type {
	return databaseTypePtrType
}

func (in *databaseTypePtr) ToDatabaseTypePtrOutput() DatabaseTypePtrOutput {
	return pulumi.ToOutput(in).(DatabaseTypePtrOutput)
}

func (in *databaseTypePtr) ToDatabaseTypePtrOutputWithContext(ctx context.Context) DatabaseTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DatabaseTypePtrOutput)
}

func (in *databaseTypePtr) ToOutput(ctx context.Context) pulumix.Output[*DatabaseType] {
	return pulumix.Output[*DatabaseType]{
		OutputState: in.ToDatabaseTypePtrOutputWithContext(ctx).OutputState,
	}
}

// Storage type
type DiskStorageType string

const (
	DiskStorageType_Premium_LRS     = DiskStorageType("Premium_LRS")
	DiskStorageType_Standard_LRS    = DiskStorageType("Standard_LRS")
	DiskStorageType_StandardSSD_LRS = DiskStorageType("StandardSSD_LRS")
)

func (DiskStorageType) ElementType() reflect.Type {
	return reflect.TypeOf((*DiskStorageType)(nil)).Elem()
}

func (e DiskStorageType) ToDiskStorageTypeOutput() DiskStorageTypeOutput {
	return pulumi.ToOutput(e).(DiskStorageTypeOutput)
}

func (e DiskStorageType) ToDiskStorageTypeOutputWithContext(ctx context.Context) DiskStorageTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DiskStorageTypeOutput)
}

func (e DiskStorageType) ToDiskStorageTypePtrOutput() DiskStorageTypePtrOutput {
	return e.ToDiskStorageTypePtrOutputWithContext(context.Background())
}

func (e DiskStorageType) ToDiskStorageTypePtrOutputWithContext(ctx context.Context) DiskStorageTypePtrOutput {
	return DiskStorageType(e).ToDiskStorageTypeOutputWithContext(ctx).ToDiskStorageTypePtrOutputWithContext(ctx)
}

func (e DiskStorageType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DiskStorageType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DiskStorageType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DiskStorageType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DiskStorageTypeOutput struct{ *pulumi.OutputState }

func (DiskStorageTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DiskStorageType)(nil)).Elem()
}

func (o DiskStorageTypeOutput) ToDiskStorageTypeOutput() DiskStorageTypeOutput {
	return o
}

func (o DiskStorageTypeOutput) ToDiskStorageTypeOutputWithContext(ctx context.Context) DiskStorageTypeOutput {
	return o
}

func (o DiskStorageTypeOutput) ToDiskStorageTypePtrOutput() DiskStorageTypePtrOutput {
	return o.ToDiskStorageTypePtrOutputWithContext(context.Background())
}

func (o DiskStorageTypeOutput) ToDiskStorageTypePtrOutputWithContext(ctx context.Context) DiskStorageTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DiskStorageType) *DiskStorageType {
		return &v
	}).(DiskStorageTypePtrOutput)
}

func (o DiskStorageTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DiskStorageTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DiskStorageType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DiskStorageTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DiskStorageTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DiskStorageType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DiskStorageTypePtrOutput struct{ *pulumi.OutputState }

func (DiskStorageTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DiskStorageType)(nil)).Elem()
}

func (o DiskStorageTypePtrOutput) ToDiskStorageTypePtrOutput() DiskStorageTypePtrOutput {
	return o
}

func (o DiskStorageTypePtrOutput) ToDiskStorageTypePtrOutputWithContext(ctx context.Context) DiskStorageTypePtrOutput {
	return o
}

func (o DiskStorageTypePtrOutput) Elem() DiskStorageTypeOutput {
	return o.ApplyT(func(v *DiskStorageType) DiskStorageType {
		if v != nil {
			return *v
		}
		var ret DiskStorageType
		return ret
	}).(DiskStorageTypeOutput)
}

func (o DiskStorageTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DiskStorageTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DiskStorageType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DiskStorageTypeInput is an input type that accepts values of the DiskStorageType enum
// A concrete instance of `DiskStorageTypeInput` can be one of the following:
//
//	DiskStorageType_Premium_LRS
//	DiskStorageType_Standard_LRS
//	DiskStorageType_StandardSSD_LRS
type DiskStorageTypeInput interface {
	pulumi.Input

	ToDiskStorageTypeOutput() DiskStorageTypeOutput
	ToDiskStorageTypeOutputWithContext(context.Context) DiskStorageTypeOutput
}

var diskStorageTypePtrType = reflect.TypeOf((**DiskStorageType)(nil)).Elem()

type DiskStorageTypePtrInput interface {
	pulumi.Input

	ToDiskStorageTypePtrOutput() DiskStorageTypePtrOutput
	ToDiskStorageTypePtrOutputWithContext(context.Context) DiskStorageTypePtrOutput
}

type diskStorageTypePtr string

func DiskStorageTypePtr(v string) DiskStorageTypePtrInput {
	return (*diskStorageTypePtr)(&v)
}

func (*diskStorageTypePtr) ElementType() reflect.Type {
	return diskStorageTypePtrType
}

func (in *diskStorageTypePtr) ToDiskStorageTypePtrOutput() DiskStorageTypePtrOutput {
	return pulumi.ToOutput(in).(DiskStorageTypePtrOutput)
}

func (in *diskStorageTypePtr) ToDiskStorageTypePtrOutputWithContext(ctx context.Context) DiskStorageTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DiskStorageTypePtrOutput)
}

func (in *diskStorageTypePtr) ToOutput(ctx context.Context) pulumix.Output[*DiskStorageType] {
	return pulumix.Output[*DiskStorageType]{
		OutputState: in.ToDiskStorageTypePtrOutputWithContext(ctx).OutputState,
	}
}

// Whether to enable Azure backup for the workload
type EnableBackup string

const (
	EnableBackupEnabled  = EnableBackup("Enabled")
	EnableBackupDisabled = EnableBackup("Disabled")
)

func (EnableBackup) ElementType() reflect.Type {
	return reflect.TypeOf((*EnableBackup)(nil)).Elem()
}

func (e EnableBackup) ToEnableBackupOutput() EnableBackupOutput {
	return pulumi.ToOutput(e).(EnableBackupOutput)
}

func (e EnableBackup) ToEnableBackupOutputWithContext(ctx context.Context) EnableBackupOutput {
	return pulumi.ToOutputWithContext(ctx, e).(EnableBackupOutput)
}

func (e EnableBackup) ToEnableBackupPtrOutput() EnableBackupPtrOutput {
	return e.ToEnableBackupPtrOutputWithContext(context.Background())
}

func (e EnableBackup) ToEnableBackupPtrOutputWithContext(ctx context.Context) EnableBackupPtrOutput {
	return EnableBackup(e).ToEnableBackupOutputWithContext(ctx).ToEnableBackupPtrOutputWithContext(ctx)
}

func (e EnableBackup) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e EnableBackup) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e EnableBackup) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e EnableBackup) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type EnableBackupOutput struct{ *pulumi.OutputState }

func (EnableBackupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EnableBackup)(nil)).Elem()
}

func (o EnableBackupOutput) ToEnableBackupOutput() EnableBackupOutput {
	return o
}

func (o EnableBackupOutput) ToEnableBackupOutputWithContext(ctx context.Context) EnableBackupOutput {
	return o
}

func (o EnableBackupOutput) ToEnableBackupPtrOutput() EnableBackupPtrOutput {
	return o.ToEnableBackupPtrOutputWithContext(context.Background())
}

func (o EnableBackupOutput) ToEnableBackupPtrOutputWithContext(ctx context.Context) EnableBackupPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EnableBackup) *EnableBackup {
		return &v
	}).(EnableBackupPtrOutput)
}

func (o EnableBackupOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o EnableBackupOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e EnableBackup) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o EnableBackupOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o EnableBackupOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e EnableBackup) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type EnableBackupPtrOutput struct{ *pulumi.OutputState }

func (EnableBackupPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EnableBackup)(nil)).Elem()
}

func (o EnableBackupPtrOutput) ToEnableBackupPtrOutput() EnableBackupPtrOutput {
	return o
}

func (o EnableBackupPtrOutput) ToEnableBackupPtrOutputWithContext(ctx context.Context) EnableBackupPtrOutput {
	return o
}

func (o EnableBackupPtrOutput) Elem() EnableBackupOutput {
	return o.ApplyT(func(v *EnableBackup) EnableBackup {
		if v != nil {
			return *v
		}
		var ret EnableBackup
		return ret
	}).(EnableBackupOutput)
}

func (o EnableBackupPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o EnableBackupPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *EnableBackup) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// EnableBackupInput is an input type that accepts values of the EnableBackup enum
// A concrete instance of `EnableBackupInput` can be one of the following:
//
//	EnableBackupEnabled
//	EnableBackupDisabled
type EnableBackupInput interface {
	pulumi.Input

	ToEnableBackupOutput() EnableBackupOutput
	ToEnableBackupOutputWithContext(context.Context) EnableBackupOutput
}

var enableBackupPtrType = reflect.TypeOf((**EnableBackup)(nil)).Elem()

type EnableBackupPtrInput interface {
	pulumi.Input

	ToEnableBackupPtrOutput() EnableBackupPtrOutput
	ToEnableBackupPtrOutputWithContext(context.Context) EnableBackupPtrOutput
}

type enableBackupPtr string

func EnableBackupPtr(v string) EnableBackupPtrInput {
	return (*enableBackupPtr)(&v)
}

func (*enableBackupPtr) ElementType() reflect.Type {
	return enableBackupPtrType
}

func (in *enableBackupPtr) ToEnableBackupPtrOutput() EnableBackupPtrOutput {
	return pulumi.ToOutput(in).(EnableBackupPtrOutput)
}

func (in *enableBackupPtr) ToEnableBackupPtrOutputWithContext(ctx context.Context) EnableBackupPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(EnableBackupPtrOutput)
}

func (in *enableBackupPtr) ToOutput(ctx context.Context) pulumix.Output[*EnableBackup] {
	return pulumix.Output[*EnableBackup]{
		OutputState: in.ToEnableBackupPtrOutputWithContext(ctx).OutputState,
	}
}

// Whether to enable SSL enforcement on the database
type EnableSslEnforcement string

const (
	EnableSslEnforcementEnabled  = EnableSslEnforcement("Enabled")
	EnableSslEnforcementDisabled = EnableSslEnforcement("Disabled")
)

func (EnableSslEnforcement) ElementType() reflect.Type {
	return reflect.TypeOf((*EnableSslEnforcement)(nil)).Elem()
}

func (e EnableSslEnforcement) ToEnableSslEnforcementOutput() EnableSslEnforcementOutput {
	return pulumi.ToOutput(e).(EnableSslEnforcementOutput)
}

func (e EnableSslEnforcement) ToEnableSslEnforcementOutputWithContext(ctx context.Context) EnableSslEnforcementOutput {
	return pulumi.ToOutputWithContext(ctx, e).(EnableSslEnforcementOutput)
}

func (e EnableSslEnforcement) ToEnableSslEnforcementPtrOutput() EnableSslEnforcementPtrOutput {
	return e.ToEnableSslEnforcementPtrOutputWithContext(context.Background())
}

func (e EnableSslEnforcement) ToEnableSslEnforcementPtrOutputWithContext(ctx context.Context) EnableSslEnforcementPtrOutput {
	return EnableSslEnforcement(e).ToEnableSslEnforcementOutputWithContext(ctx).ToEnableSslEnforcementPtrOutputWithContext(ctx)
}

func (e EnableSslEnforcement) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e EnableSslEnforcement) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e EnableSslEnforcement) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e EnableSslEnforcement) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type EnableSslEnforcementOutput struct{ *pulumi.OutputState }

func (EnableSslEnforcementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EnableSslEnforcement)(nil)).Elem()
}

func (o EnableSslEnforcementOutput) ToEnableSslEnforcementOutput() EnableSslEnforcementOutput {
	return o
}

func (o EnableSslEnforcementOutput) ToEnableSslEnforcementOutputWithContext(ctx context.Context) EnableSslEnforcementOutput {
	return o
}

func (o EnableSslEnforcementOutput) ToEnableSslEnforcementPtrOutput() EnableSslEnforcementPtrOutput {
	return o.ToEnableSslEnforcementPtrOutputWithContext(context.Background())
}

func (o EnableSslEnforcementOutput) ToEnableSslEnforcementPtrOutputWithContext(ctx context.Context) EnableSslEnforcementPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EnableSslEnforcement) *EnableSslEnforcement {
		return &v
	}).(EnableSslEnforcementPtrOutput)
}

func (o EnableSslEnforcementOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o EnableSslEnforcementOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e EnableSslEnforcement) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o EnableSslEnforcementOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o EnableSslEnforcementOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e EnableSslEnforcement) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type EnableSslEnforcementPtrOutput struct{ *pulumi.OutputState }

func (EnableSslEnforcementPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EnableSslEnforcement)(nil)).Elem()
}

func (o EnableSslEnforcementPtrOutput) ToEnableSslEnforcementPtrOutput() EnableSslEnforcementPtrOutput {
	return o
}

func (o EnableSslEnforcementPtrOutput) ToEnableSslEnforcementPtrOutputWithContext(ctx context.Context) EnableSslEnforcementPtrOutput {
	return o
}

func (o EnableSslEnforcementPtrOutput) Elem() EnableSslEnforcementOutput {
	return o.ApplyT(func(v *EnableSslEnforcement) EnableSslEnforcement {
		if v != nil {
			return *v
		}
		var ret EnableSslEnforcement
		return ret
	}).(EnableSslEnforcementOutput)
}

func (o EnableSslEnforcementPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o EnableSslEnforcementPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *EnableSslEnforcement) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// EnableSslEnforcementInput is an input type that accepts values of the EnableSslEnforcement enum
// A concrete instance of `EnableSslEnforcementInput` can be one of the following:
//
//	EnableSslEnforcementEnabled
//	EnableSslEnforcementDisabled
type EnableSslEnforcementInput interface {
	pulumi.Input

	ToEnableSslEnforcementOutput() EnableSslEnforcementOutput
	ToEnableSslEnforcementOutputWithContext(context.Context) EnableSslEnforcementOutput
}

var enableSslEnforcementPtrType = reflect.TypeOf((**EnableSslEnforcement)(nil)).Elem()

type EnableSslEnforcementPtrInput interface {
	pulumi.Input

	ToEnableSslEnforcementPtrOutput() EnableSslEnforcementPtrOutput
	ToEnableSslEnforcementPtrOutputWithContext(context.Context) EnableSslEnforcementPtrOutput
}

type enableSslEnforcementPtr string

func EnableSslEnforcementPtr(v string) EnableSslEnforcementPtrInput {
	return (*enableSslEnforcementPtr)(&v)
}

func (*enableSslEnforcementPtr) ElementType() reflect.Type {
	return enableSslEnforcementPtrType
}

func (in *enableSslEnforcementPtr) ToEnableSslEnforcementPtrOutput() EnableSslEnforcementPtrOutput {
	return pulumi.ToOutput(in).(EnableSslEnforcementPtrOutput)
}

func (in *enableSslEnforcementPtr) ToEnableSslEnforcementPtrOutputWithContext(ctx context.Context) EnableSslEnforcementPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(EnableSslEnforcementPtrOutput)
}

func (in *enableSslEnforcementPtr) ToOutput(ctx context.Context) pulumix.Output[*EnableSslEnforcement] {
	return pulumix.Output[*EnableSslEnforcement]{
		OutputState: in.ToEnableSslEnforcementPtrOutputWithContext(ctx).OutputState,
	}
}

// File share backing storage type
type FileShareStorageType string

const (
	FileShareStorageType_Standard_LRS = FileShareStorageType("Standard_LRS")
	FileShareStorageType_Standard_GRS = FileShareStorageType("Standard_GRS")
	FileShareStorageType_Standard_ZRS = FileShareStorageType("Standard_ZRS")
	FileShareStorageType_Premium_LRS  = FileShareStorageType("Premium_LRS")
)

func (FileShareStorageType) ElementType() reflect.Type {
	return reflect.TypeOf((*FileShareStorageType)(nil)).Elem()
}

func (e FileShareStorageType) ToFileShareStorageTypeOutput() FileShareStorageTypeOutput {
	return pulumi.ToOutput(e).(FileShareStorageTypeOutput)
}

func (e FileShareStorageType) ToFileShareStorageTypeOutputWithContext(ctx context.Context) FileShareStorageTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(FileShareStorageTypeOutput)
}

func (e FileShareStorageType) ToFileShareStorageTypePtrOutput() FileShareStorageTypePtrOutput {
	return e.ToFileShareStorageTypePtrOutputWithContext(context.Background())
}

func (e FileShareStorageType) ToFileShareStorageTypePtrOutputWithContext(ctx context.Context) FileShareStorageTypePtrOutput {
	return FileShareStorageType(e).ToFileShareStorageTypeOutputWithContext(ctx).ToFileShareStorageTypePtrOutputWithContext(ctx)
}

func (e FileShareStorageType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e FileShareStorageType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e FileShareStorageType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e FileShareStorageType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type FileShareStorageTypeOutput struct{ *pulumi.OutputState }

func (FileShareStorageTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FileShareStorageType)(nil)).Elem()
}

func (o FileShareStorageTypeOutput) ToFileShareStorageTypeOutput() FileShareStorageTypeOutput {
	return o
}

func (o FileShareStorageTypeOutput) ToFileShareStorageTypeOutputWithContext(ctx context.Context) FileShareStorageTypeOutput {
	return o
}

func (o FileShareStorageTypeOutput) ToFileShareStorageTypePtrOutput() FileShareStorageTypePtrOutput {
	return o.ToFileShareStorageTypePtrOutputWithContext(context.Background())
}

func (o FileShareStorageTypeOutput) ToFileShareStorageTypePtrOutputWithContext(ctx context.Context) FileShareStorageTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FileShareStorageType) *FileShareStorageType {
		return &v
	}).(FileShareStorageTypePtrOutput)
}

func (o FileShareStorageTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o FileShareStorageTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e FileShareStorageType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o FileShareStorageTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o FileShareStorageTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e FileShareStorageType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type FileShareStorageTypePtrOutput struct{ *pulumi.OutputState }

func (FileShareStorageTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FileShareStorageType)(nil)).Elem()
}

func (o FileShareStorageTypePtrOutput) ToFileShareStorageTypePtrOutput() FileShareStorageTypePtrOutput {
	return o
}

func (o FileShareStorageTypePtrOutput) ToFileShareStorageTypePtrOutputWithContext(ctx context.Context) FileShareStorageTypePtrOutput {
	return o
}

func (o FileShareStorageTypePtrOutput) Elem() FileShareStorageTypeOutput {
	return o.ApplyT(func(v *FileShareStorageType) FileShareStorageType {
		if v != nil {
			return *v
		}
		var ret FileShareStorageType
		return ret
	}).(FileShareStorageTypeOutput)
}

func (o FileShareStorageTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o FileShareStorageTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *FileShareStorageType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// FileShareStorageTypeInput is an input type that accepts values of the FileShareStorageType enum
// A concrete instance of `FileShareStorageTypeInput` can be one of the following:
//
//	FileShareStorageType_Standard_LRS
//	FileShareStorageType_Standard_GRS
//	FileShareStorageType_Standard_ZRS
//	FileShareStorageType_Premium_LRS
type FileShareStorageTypeInput interface {
	pulumi.Input

	ToFileShareStorageTypeOutput() FileShareStorageTypeOutput
	ToFileShareStorageTypeOutputWithContext(context.Context) FileShareStorageTypeOutput
}

var fileShareStorageTypePtrType = reflect.TypeOf((**FileShareStorageType)(nil)).Elem()

type FileShareStorageTypePtrInput interface {
	pulumi.Input

	ToFileShareStorageTypePtrOutput() FileShareStorageTypePtrOutput
	ToFileShareStorageTypePtrOutputWithContext(context.Context) FileShareStorageTypePtrOutput
}

type fileShareStorageTypePtr string

func FileShareStorageTypePtr(v string) FileShareStorageTypePtrInput {
	return (*fileShareStorageTypePtr)(&v)
}

func (*fileShareStorageTypePtr) ElementType() reflect.Type {
	return fileShareStorageTypePtrType
}

func (in *fileShareStorageTypePtr) ToFileShareStorageTypePtrOutput() FileShareStorageTypePtrOutput {
	return pulumi.ToOutput(in).(FileShareStorageTypePtrOutput)
}

func (in *fileShareStorageTypePtr) ToFileShareStorageTypePtrOutputWithContext(ctx context.Context) FileShareStorageTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(FileShareStorageTypePtrOutput)
}

func (in *fileShareStorageTypePtr) ToOutput(ctx context.Context) pulumix.Output[*FileShareStorageType] {
	return pulumix.Output[*FileShareStorageType]{
		OutputState: in.ToFileShareStorageTypePtrOutputWithContext(ctx).OutputState,
	}
}

// Share type
type FileShareType string

const (
	FileShareTypeNfsOnController = FileShareType("NfsOnController")
	FileShareTypeAzureFiles      = FileShareType("AzureFiles")
)

func (FileShareType) ElementType() reflect.Type {
	return reflect.TypeOf((*FileShareType)(nil)).Elem()
}

func (e FileShareType) ToFileShareTypeOutput() FileShareTypeOutput {
	return pulumi.ToOutput(e).(FileShareTypeOutput)
}

func (e FileShareType) ToFileShareTypeOutputWithContext(ctx context.Context) FileShareTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(FileShareTypeOutput)
}

func (e FileShareType) ToFileShareTypePtrOutput() FileShareTypePtrOutput {
	return e.ToFileShareTypePtrOutputWithContext(context.Background())
}

func (e FileShareType) ToFileShareTypePtrOutputWithContext(ctx context.Context) FileShareTypePtrOutput {
	return FileShareType(e).ToFileShareTypeOutputWithContext(ctx).ToFileShareTypePtrOutputWithContext(ctx)
}

func (e FileShareType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e FileShareType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e FileShareType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e FileShareType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type FileShareTypeOutput struct{ *pulumi.OutputState }

func (FileShareTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FileShareType)(nil)).Elem()
}

func (o FileShareTypeOutput) ToFileShareTypeOutput() FileShareTypeOutput {
	return o
}

func (o FileShareTypeOutput) ToFileShareTypeOutputWithContext(ctx context.Context) FileShareTypeOutput {
	return o
}

func (o FileShareTypeOutput) ToFileShareTypePtrOutput() FileShareTypePtrOutput {
	return o.ToFileShareTypePtrOutputWithContext(context.Background())
}

func (o FileShareTypeOutput) ToFileShareTypePtrOutputWithContext(ctx context.Context) FileShareTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FileShareType) *FileShareType {
		return &v
	}).(FileShareTypePtrOutput)
}

func (o FileShareTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o FileShareTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e FileShareType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o FileShareTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o FileShareTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e FileShareType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type FileShareTypePtrOutput struct{ *pulumi.OutputState }

func (FileShareTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FileShareType)(nil)).Elem()
}

func (o FileShareTypePtrOutput) ToFileShareTypePtrOutput() FileShareTypePtrOutput {
	return o
}

func (o FileShareTypePtrOutput) ToFileShareTypePtrOutputWithContext(ctx context.Context) FileShareTypePtrOutput {
	return o
}

func (o FileShareTypePtrOutput) Elem() FileShareTypeOutput {
	return o.ApplyT(func(v *FileShareType) FileShareType {
		if v != nil {
			return *v
		}
		var ret FileShareType
		return ret
	}).(FileShareTypeOutput)
}

func (o FileShareTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o FileShareTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *FileShareType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// FileShareTypeInput is an input type that accepts values of the FileShareType enum
// A concrete instance of `FileShareTypeInput` can be one of the following:
//
//	FileShareTypeNfsOnController
//	FileShareTypeAzureFiles
type FileShareTypeInput interface {
	pulumi.Input

	ToFileShareTypeOutput() FileShareTypeOutput
	ToFileShareTypeOutputWithContext(context.Context) FileShareTypeOutput
}

var fileShareTypePtrType = reflect.TypeOf((**FileShareType)(nil)).Elem()

type FileShareTypePtrInput interface {
	pulumi.Input

	ToFileShareTypePtrOutput() FileShareTypePtrOutput
	ToFileShareTypePtrOutputWithContext(context.Context) FileShareTypePtrOutput
}

type fileShareTypePtr string

func FileShareTypePtr(v string) FileShareTypePtrInput {
	return (*fileShareTypePtr)(&v)
}

func (*fileShareTypePtr) ElementType() reflect.Type {
	return fileShareTypePtrType
}

func (in *fileShareTypePtr) ToFileShareTypePtrOutput() FileShareTypePtrOutput {
	return pulumi.ToOutput(in).(FileShareTypePtrOutput)
}

func (in *fileShareTypePtr) ToFileShareTypePtrOutputWithContext(ctx context.Context) FileShareTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(FileShareTypePtrOutput)
}

func (in *fileShareTypePtr) ToOutput(ctx context.Context) pulumix.Output[*FileShareType] {
	return pulumix.Output[*FileShareType]{
		OutputState: in.ToFileShareTypePtrOutputWithContext(ctx).OutputState,
	}
}

// Whether to enable HA for the server
type HAEnabled string

const (
	HAEnabledEnabled  = HAEnabled("Enabled")
	HAEnabledDisabled = HAEnabled("Disabled")
)

func (HAEnabled) ElementType() reflect.Type {
	return reflect.TypeOf((*HAEnabled)(nil)).Elem()
}

func (e HAEnabled) ToHAEnabledOutput() HAEnabledOutput {
	return pulumi.ToOutput(e).(HAEnabledOutput)
}

func (e HAEnabled) ToHAEnabledOutputWithContext(ctx context.Context) HAEnabledOutput {
	return pulumi.ToOutputWithContext(ctx, e).(HAEnabledOutput)
}

func (e HAEnabled) ToHAEnabledPtrOutput() HAEnabledPtrOutput {
	return e.ToHAEnabledPtrOutputWithContext(context.Background())
}

func (e HAEnabled) ToHAEnabledPtrOutputWithContext(ctx context.Context) HAEnabledPtrOutput {
	return HAEnabled(e).ToHAEnabledOutputWithContext(ctx).ToHAEnabledPtrOutputWithContext(ctx)
}

func (e HAEnabled) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e HAEnabled) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e HAEnabled) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e HAEnabled) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type HAEnabledOutput struct{ *pulumi.OutputState }

func (HAEnabledOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HAEnabled)(nil)).Elem()
}

func (o HAEnabledOutput) ToHAEnabledOutput() HAEnabledOutput {
	return o
}

func (o HAEnabledOutput) ToHAEnabledOutputWithContext(ctx context.Context) HAEnabledOutput {
	return o
}

func (o HAEnabledOutput) ToHAEnabledPtrOutput() HAEnabledPtrOutput {
	return o.ToHAEnabledPtrOutputWithContext(context.Background())
}

func (o HAEnabledOutput) ToHAEnabledPtrOutputWithContext(ctx context.Context) HAEnabledPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v HAEnabled) *HAEnabled {
		return &v
	}).(HAEnabledPtrOutput)
}

func (o HAEnabledOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o HAEnabledOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e HAEnabled) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o HAEnabledOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o HAEnabledOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e HAEnabled) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type HAEnabledPtrOutput struct{ *pulumi.OutputState }

func (HAEnabledPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HAEnabled)(nil)).Elem()
}

func (o HAEnabledPtrOutput) ToHAEnabledPtrOutput() HAEnabledPtrOutput {
	return o
}

func (o HAEnabledPtrOutput) ToHAEnabledPtrOutputWithContext(ctx context.Context) HAEnabledPtrOutput {
	return o
}

func (o HAEnabledPtrOutput) Elem() HAEnabledOutput {
	return o.ApplyT(func(v *HAEnabled) HAEnabled {
		if v != nil {
			return *v
		}
		var ret HAEnabled
		return ret
	}).(HAEnabledOutput)
}

func (o HAEnabledPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o HAEnabledPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *HAEnabled) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// HAEnabledInput is an input type that accepts values of the HAEnabled enum
// A concrete instance of `HAEnabledInput` can be one of the following:
//
//	HAEnabledEnabled
//	HAEnabledDisabled
type HAEnabledInput interface {
	pulumi.Input

	ToHAEnabledOutput() HAEnabledOutput
	ToHAEnabledOutputWithContext(context.Context) HAEnabledOutput
}

var haenabledPtrType = reflect.TypeOf((**HAEnabled)(nil)).Elem()

type HAEnabledPtrInput interface {
	pulumi.Input

	ToHAEnabledPtrOutput() HAEnabledPtrOutput
	ToHAEnabledPtrOutputWithContext(context.Context) HAEnabledPtrOutput
}

type haenabledPtr string

func HAEnabledPtr(v string) HAEnabledPtrInput {
	return (*haenabledPtr)(&v)
}

func (*haenabledPtr) ElementType() reflect.Type {
	return haenabledPtrType
}

func (in *haenabledPtr) ToHAEnabledPtrOutput() HAEnabledPtrOutput {
	return pulumi.ToOutput(in).(HAEnabledPtrOutput)
}

func (in *haenabledPtr) ToHAEnabledPtrOutputWithContext(ctx context.Context) HAEnabledPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(HAEnabledPtrOutput)
}

func (in *haenabledPtr) ToOutput(ctx context.Context) pulumix.Output[*HAEnabled] {
	return pulumix.Output[*HAEnabled]{
		OutputState: in.ToHAEnabledPtrOutputWithContext(ctx).OutputState,
	}
}

// Load balancer type
type LoadBalancerType string

const (
	LoadBalancerTypeApplicationGateway = LoadBalancerType("ApplicationGateway")
	LoadBalancerTypeLoadBalancer       = LoadBalancerType("LoadBalancer")
)

func (LoadBalancerType) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancerType)(nil)).Elem()
}

func (e LoadBalancerType) ToLoadBalancerTypeOutput() LoadBalancerTypeOutput {
	return pulumi.ToOutput(e).(LoadBalancerTypeOutput)
}

func (e LoadBalancerType) ToLoadBalancerTypeOutputWithContext(ctx context.Context) LoadBalancerTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(LoadBalancerTypeOutput)
}

func (e LoadBalancerType) ToLoadBalancerTypePtrOutput() LoadBalancerTypePtrOutput {
	return e.ToLoadBalancerTypePtrOutputWithContext(context.Background())
}

func (e LoadBalancerType) ToLoadBalancerTypePtrOutputWithContext(ctx context.Context) LoadBalancerTypePtrOutput {
	return LoadBalancerType(e).ToLoadBalancerTypeOutputWithContext(ctx).ToLoadBalancerTypePtrOutputWithContext(ctx)
}

func (e LoadBalancerType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e LoadBalancerType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e LoadBalancerType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e LoadBalancerType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type LoadBalancerTypeOutput struct{ *pulumi.OutputState }

func (LoadBalancerTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancerType)(nil)).Elem()
}

func (o LoadBalancerTypeOutput) ToLoadBalancerTypeOutput() LoadBalancerTypeOutput {
	return o
}

func (o LoadBalancerTypeOutput) ToLoadBalancerTypeOutputWithContext(ctx context.Context) LoadBalancerTypeOutput {
	return o
}

func (o LoadBalancerTypeOutput) ToLoadBalancerTypePtrOutput() LoadBalancerTypePtrOutput {
	return o.ToLoadBalancerTypePtrOutputWithContext(context.Background())
}

func (o LoadBalancerTypeOutput) ToLoadBalancerTypePtrOutputWithContext(ctx context.Context) LoadBalancerTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LoadBalancerType) *LoadBalancerType {
		return &v
	}).(LoadBalancerTypePtrOutput)
}

func (o LoadBalancerTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o LoadBalancerTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e LoadBalancerType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o LoadBalancerTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o LoadBalancerTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e LoadBalancerType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type LoadBalancerTypePtrOutput struct{ *pulumi.OutputState }

func (LoadBalancerTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LoadBalancerType)(nil)).Elem()
}

func (o LoadBalancerTypePtrOutput) ToLoadBalancerTypePtrOutput() LoadBalancerTypePtrOutput {
	return o
}

func (o LoadBalancerTypePtrOutput) ToLoadBalancerTypePtrOutputWithContext(ctx context.Context) LoadBalancerTypePtrOutput {
	return o
}

func (o LoadBalancerTypePtrOutput) Elem() LoadBalancerTypeOutput {
	return o.ApplyT(func(v *LoadBalancerType) LoadBalancerType {
		if v != nil {
			return *v
		}
		var ret LoadBalancerType
		return ret
	}).(LoadBalancerTypeOutput)
}

func (o LoadBalancerTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o LoadBalancerTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *LoadBalancerType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// LoadBalancerTypeInput is an input type that accepts values of the LoadBalancerType enum
// A concrete instance of `LoadBalancerTypeInput` can be one of the following:
//
//	LoadBalancerTypeApplicationGateway
//	LoadBalancerTypeLoadBalancer
type LoadBalancerTypeInput interface {
	pulumi.Input

	ToLoadBalancerTypeOutput() LoadBalancerTypeOutput
	ToLoadBalancerTypeOutputWithContext(context.Context) LoadBalancerTypeOutput
}

var loadBalancerTypePtrType = reflect.TypeOf((**LoadBalancerType)(nil)).Elem()

type LoadBalancerTypePtrInput interface {
	pulumi.Input

	ToLoadBalancerTypePtrOutput() LoadBalancerTypePtrOutput
	ToLoadBalancerTypePtrOutputWithContext(context.Context) LoadBalancerTypePtrOutput
}

type loadBalancerTypePtr string

func LoadBalancerTypePtr(v string) LoadBalancerTypePtrInput {
	return (*loadBalancerTypePtr)(&v)
}

func (*loadBalancerTypePtr) ElementType() reflect.Type {
	return loadBalancerTypePtrType
}

func (in *loadBalancerTypePtr) ToLoadBalancerTypePtrOutput() LoadBalancerTypePtrOutput {
	return pulumi.ToOutput(in).(LoadBalancerTypePtrOutput)
}

func (in *loadBalancerTypePtr) ToLoadBalancerTypePtrOutputWithContext(ctx context.Context) LoadBalancerTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(LoadBalancerTypePtrOutput)
}

func (in *loadBalancerTypePtr) ToOutput(ctx context.Context) pulumix.Output[*LoadBalancerType] {
	return pulumix.Output[*LoadBalancerType]{
		OutputState: in.ToLoadBalancerTypePtrOutputWithContext(ctx).OutputState,
	}
}

// Type of manage identity
type ManagedServiceIdentityType string

const (
	ManagedServiceIdentityTypeNone         = ManagedServiceIdentityType("None")
	ManagedServiceIdentityTypeUserAssigned = ManagedServiceIdentityType("UserAssigned")
)

func (ManagedServiceIdentityType) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedServiceIdentityType)(nil)).Elem()
}

func (e ManagedServiceIdentityType) ToManagedServiceIdentityTypeOutput() ManagedServiceIdentityTypeOutput {
	return pulumi.ToOutput(e).(ManagedServiceIdentityTypeOutput)
}

func (e ManagedServiceIdentityType) ToManagedServiceIdentityTypeOutputWithContext(ctx context.Context) ManagedServiceIdentityTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ManagedServiceIdentityTypeOutput)
}

func (e ManagedServiceIdentityType) ToManagedServiceIdentityTypePtrOutput() ManagedServiceIdentityTypePtrOutput {
	return e.ToManagedServiceIdentityTypePtrOutputWithContext(context.Background())
}

func (e ManagedServiceIdentityType) ToManagedServiceIdentityTypePtrOutputWithContext(ctx context.Context) ManagedServiceIdentityTypePtrOutput {
	return ManagedServiceIdentityType(e).ToManagedServiceIdentityTypeOutputWithContext(ctx).ToManagedServiceIdentityTypePtrOutputWithContext(ctx)
}

func (e ManagedServiceIdentityType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ManagedServiceIdentityType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ManagedServiceIdentityType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ManagedServiceIdentityType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ManagedServiceIdentityTypeOutput struct{ *pulumi.OutputState }

func (ManagedServiceIdentityTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedServiceIdentityType)(nil)).Elem()
}

func (o ManagedServiceIdentityTypeOutput) ToManagedServiceIdentityTypeOutput() ManagedServiceIdentityTypeOutput {
	return o
}

func (o ManagedServiceIdentityTypeOutput) ToManagedServiceIdentityTypeOutputWithContext(ctx context.Context) ManagedServiceIdentityTypeOutput {
	return o
}

func (o ManagedServiceIdentityTypeOutput) ToManagedServiceIdentityTypePtrOutput() ManagedServiceIdentityTypePtrOutput {
	return o.ToManagedServiceIdentityTypePtrOutputWithContext(context.Background())
}

func (o ManagedServiceIdentityTypeOutput) ToManagedServiceIdentityTypePtrOutputWithContext(ctx context.Context) ManagedServiceIdentityTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ManagedServiceIdentityType) *ManagedServiceIdentityType {
		return &v
	}).(ManagedServiceIdentityTypePtrOutput)
}

func (o ManagedServiceIdentityTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ManagedServiceIdentityTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ManagedServiceIdentityType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ManagedServiceIdentityTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ManagedServiceIdentityTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ManagedServiceIdentityType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ManagedServiceIdentityTypePtrOutput struct{ *pulumi.OutputState }

func (ManagedServiceIdentityTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedServiceIdentityType)(nil)).Elem()
}

func (o ManagedServiceIdentityTypePtrOutput) ToManagedServiceIdentityTypePtrOutput() ManagedServiceIdentityTypePtrOutput {
	return o
}

func (o ManagedServiceIdentityTypePtrOutput) ToManagedServiceIdentityTypePtrOutputWithContext(ctx context.Context) ManagedServiceIdentityTypePtrOutput {
	return o
}

func (o ManagedServiceIdentityTypePtrOutput) Elem() ManagedServiceIdentityTypeOutput {
	return o.ApplyT(func(v *ManagedServiceIdentityType) ManagedServiceIdentityType {
		if v != nil {
			return *v
		}
		var ret ManagedServiceIdentityType
		return ret
	}).(ManagedServiceIdentityTypeOutput)
}

func (o ManagedServiceIdentityTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ManagedServiceIdentityTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ManagedServiceIdentityType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ManagedServiceIdentityTypeInput is an input type that accepts values of the ManagedServiceIdentityType enum
// A concrete instance of `ManagedServiceIdentityTypeInput` can be one of the following:
//
//	ManagedServiceIdentityTypeNone
//	ManagedServiceIdentityTypeUserAssigned
type ManagedServiceIdentityTypeInput interface {
	pulumi.Input

	ToManagedServiceIdentityTypeOutput() ManagedServiceIdentityTypeOutput
	ToManagedServiceIdentityTypeOutputWithContext(context.Context) ManagedServiceIdentityTypeOutput
}

var managedServiceIdentityTypePtrType = reflect.TypeOf((**ManagedServiceIdentityType)(nil)).Elem()

type ManagedServiceIdentityTypePtrInput interface {
	pulumi.Input

	ToManagedServiceIdentityTypePtrOutput() ManagedServiceIdentityTypePtrOutput
	ToManagedServiceIdentityTypePtrOutputWithContext(context.Context) ManagedServiceIdentityTypePtrOutput
}

type managedServiceIdentityTypePtr string

func ManagedServiceIdentityTypePtr(v string) ManagedServiceIdentityTypePtrInput {
	return (*managedServiceIdentityTypePtr)(&v)
}

func (*managedServiceIdentityTypePtr) ElementType() reflect.Type {
	return managedServiceIdentityTypePtrType
}

func (in *managedServiceIdentityTypePtr) ToManagedServiceIdentityTypePtrOutput() ManagedServiceIdentityTypePtrOutput {
	return pulumi.ToOutput(in).(ManagedServiceIdentityTypePtrOutput)
}

func (in *managedServiceIdentityTypePtr) ToManagedServiceIdentityTypePtrOutputWithContext(ctx context.Context) ManagedServiceIdentityTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ManagedServiceIdentityTypePtrOutput)
}

func (in *managedServiceIdentityTypePtr) ToOutput(ctx context.Context) pulumix.Output[*ManagedServiceIdentityType] {
	return pulumix.Output[*ManagedServiceIdentityType]{
		OutputState: in.ToManagedServiceIdentityTypePtrOutputWithContext(ctx).OutputState,
	}
}

// OS image offer
type OSImageOffer string

const (
	OSImageOfferUbuntuServer = OSImageOffer("UbuntuServer")
)

func (OSImageOffer) ElementType() reflect.Type {
	return reflect.TypeOf((*OSImageOffer)(nil)).Elem()
}

func (e OSImageOffer) ToOSImageOfferOutput() OSImageOfferOutput {
	return pulumi.ToOutput(e).(OSImageOfferOutput)
}

func (e OSImageOffer) ToOSImageOfferOutputWithContext(ctx context.Context) OSImageOfferOutput {
	return pulumi.ToOutputWithContext(ctx, e).(OSImageOfferOutput)
}

func (e OSImageOffer) ToOSImageOfferPtrOutput() OSImageOfferPtrOutput {
	return e.ToOSImageOfferPtrOutputWithContext(context.Background())
}

func (e OSImageOffer) ToOSImageOfferPtrOutputWithContext(ctx context.Context) OSImageOfferPtrOutput {
	return OSImageOffer(e).ToOSImageOfferOutputWithContext(ctx).ToOSImageOfferPtrOutputWithContext(ctx)
}

func (e OSImageOffer) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e OSImageOffer) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e OSImageOffer) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e OSImageOffer) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type OSImageOfferOutput struct{ *pulumi.OutputState }

func (OSImageOfferOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OSImageOffer)(nil)).Elem()
}

func (o OSImageOfferOutput) ToOSImageOfferOutput() OSImageOfferOutput {
	return o
}

func (o OSImageOfferOutput) ToOSImageOfferOutputWithContext(ctx context.Context) OSImageOfferOutput {
	return o
}

func (o OSImageOfferOutput) ToOSImageOfferPtrOutput() OSImageOfferPtrOutput {
	return o.ToOSImageOfferPtrOutputWithContext(context.Background())
}

func (o OSImageOfferOutput) ToOSImageOfferPtrOutputWithContext(ctx context.Context) OSImageOfferPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OSImageOffer) *OSImageOffer {
		return &v
	}).(OSImageOfferPtrOutput)
}

func (o OSImageOfferOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o OSImageOfferOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e OSImageOffer) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o OSImageOfferOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o OSImageOfferOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e OSImageOffer) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type OSImageOfferPtrOutput struct{ *pulumi.OutputState }

func (OSImageOfferPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OSImageOffer)(nil)).Elem()
}

func (o OSImageOfferPtrOutput) ToOSImageOfferPtrOutput() OSImageOfferPtrOutput {
	return o
}

func (o OSImageOfferPtrOutput) ToOSImageOfferPtrOutputWithContext(ctx context.Context) OSImageOfferPtrOutput {
	return o
}

func (o OSImageOfferPtrOutput) Elem() OSImageOfferOutput {
	return o.ApplyT(func(v *OSImageOffer) OSImageOffer {
		if v != nil {
			return *v
		}
		var ret OSImageOffer
		return ret
	}).(OSImageOfferOutput)
}

func (o OSImageOfferPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o OSImageOfferPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *OSImageOffer) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// OSImageOfferInput is an input type that accepts values of the OSImageOffer enum
// A concrete instance of `OSImageOfferInput` can be one of the following:
//
//	OSImageOfferUbuntuServer
type OSImageOfferInput interface {
	pulumi.Input

	ToOSImageOfferOutput() OSImageOfferOutput
	ToOSImageOfferOutputWithContext(context.Context) OSImageOfferOutput
}

var osimageOfferPtrType = reflect.TypeOf((**OSImageOffer)(nil)).Elem()

type OSImageOfferPtrInput interface {
	pulumi.Input

	ToOSImageOfferPtrOutput() OSImageOfferPtrOutput
	ToOSImageOfferPtrOutputWithContext(context.Context) OSImageOfferPtrOutput
}

type osimageOfferPtr string

func OSImageOfferPtr(v string) OSImageOfferPtrInput {
	return (*osimageOfferPtr)(&v)
}

func (*osimageOfferPtr) ElementType() reflect.Type {
	return osimageOfferPtrType
}

func (in *osimageOfferPtr) ToOSImageOfferPtrOutput() OSImageOfferPtrOutput {
	return pulumi.ToOutput(in).(OSImageOfferPtrOutput)
}

func (in *osimageOfferPtr) ToOSImageOfferPtrOutputWithContext(ctx context.Context) OSImageOfferPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(OSImageOfferPtrOutput)
}

func (in *osimageOfferPtr) ToOutput(ctx context.Context) pulumix.Output[*OSImageOffer] {
	return pulumix.Output[*OSImageOffer]{
		OutputState: in.ToOSImageOfferPtrOutputWithContext(ctx).OutputState,
	}
}

// OS image publisher
type OSImagePublisher string

const (
	OSImagePublisherCanonical = OSImagePublisher("Canonical")
)

func (OSImagePublisher) ElementType() reflect.Type {
	return reflect.TypeOf((*OSImagePublisher)(nil)).Elem()
}

func (e OSImagePublisher) ToOSImagePublisherOutput() OSImagePublisherOutput {
	return pulumi.ToOutput(e).(OSImagePublisherOutput)
}

func (e OSImagePublisher) ToOSImagePublisherOutputWithContext(ctx context.Context) OSImagePublisherOutput {
	return pulumi.ToOutputWithContext(ctx, e).(OSImagePublisherOutput)
}

func (e OSImagePublisher) ToOSImagePublisherPtrOutput() OSImagePublisherPtrOutput {
	return e.ToOSImagePublisherPtrOutputWithContext(context.Background())
}

func (e OSImagePublisher) ToOSImagePublisherPtrOutputWithContext(ctx context.Context) OSImagePublisherPtrOutput {
	return OSImagePublisher(e).ToOSImagePublisherOutputWithContext(ctx).ToOSImagePublisherPtrOutputWithContext(ctx)
}

func (e OSImagePublisher) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e OSImagePublisher) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e OSImagePublisher) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e OSImagePublisher) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type OSImagePublisherOutput struct{ *pulumi.OutputState }

func (OSImagePublisherOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OSImagePublisher)(nil)).Elem()
}

func (o OSImagePublisherOutput) ToOSImagePublisherOutput() OSImagePublisherOutput {
	return o
}

func (o OSImagePublisherOutput) ToOSImagePublisherOutputWithContext(ctx context.Context) OSImagePublisherOutput {
	return o
}

func (o OSImagePublisherOutput) ToOSImagePublisherPtrOutput() OSImagePublisherPtrOutput {
	return o.ToOSImagePublisherPtrOutputWithContext(context.Background())
}

func (o OSImagePublisherOutput) ToOSImagePublisherPtrOutputWithContext(ctx context.Context) OSImagePublisherPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OSImagePublisher) *OSImagePublisher {
		return &v
	}).(OSImagePublisherPtrOutput)
}

func (o OSImagePublisherOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o OSImagePublisherOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e OSImagePublisher) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o OSImagePublisherOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o OSImagePublisherOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e OSImagePublisher) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type OSImagePublisherPtrOutput struct{ *pulumi.OutputState }

func (OSImagePublisherPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OSImagePublisher)(nil)).Elem()
}

func (o OSImagePublisherPtrOutput) ToOSImagePublisherPtrOutput() OSImagePublisherPtrOutput {
	return o
}

func (o OSImagePublisherPtrOutput) ToOSImagePublisherPtrOutputWithContext(ctx context.Context) OSImagePublisherPtrOutput {
	return o
}

func (o OSImagePublisherPtrOutput) Elem() OSImagePublisherOutput {
	return o.ApplyT(func(v *OSImagePublisher) OSImagePublisher {
		if v != nil {
			return *v
		}
		var ret OSImagePublisher
		return ret
	}).(OSImagePublisherOutput)
}

func (o OSImagePublisherPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o OSImagePublisherPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *OSImagePublisher) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// OSImagePublisherInput is an input type that accepts values of the OSImagePublisher enum
// A concrete instance of `OSImagePublisherInput` can be one of the following:
//
//	OSImagePublisherCanonical
type OSImagePublisherInput interface {
	pulumi.Input

	ToOSImagePublisherOutput() OSImagePublisherOutput
	ToOSImagePublisherOutputWithContext(context.Context) OSImagePublisherOutput
}

var osimagePublisherPtrType = reflect.TypeOf((**OSImagePublisher)(nil)).Elem()

type OSImagePublisherPtrInput interface {
	pulumi.Input

	ToOSImagePublisherPtrOutput() OSImagePublisherPtrOutput
	ToOSImagePublisherPtrOutputWithContext(context.Context) OSImagePublisherPtrOutput
}

type osimagePublisherPtr string

func OSImagePublisherPtr(v string) OSImagePublisherPtrInput {
	return (*osimagePublisherPtr)(&v)
}

func (*osimagePublisherPtr) ElementType() reflect.Type {
	return osimagePublisherPtrType
}

func (in *osimagePublisherPtr) ToOSImagePublisherPtrOutput() OSImagePublisherPtrOutput {
	return pulumi.ToOutput(in).(OSImagePublisherPtrOutput)
}

func (in *osimagePublisherPtr) ToOSImagePublisherPtrOutputWithContext(ctx context.Context) OSImagePublisherPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(OSImagePublisherPtrOutput)
}

func (in *osimagePublisherPtr) ToOutput(ctx context.Context) pulumix.Output[*OSImagePublisher] {
	return pulumix.Output[*OSImagePublisher]{
		OutputState: in.ToOSImagePublisherPtrOutputWithContext(ctx).OutputState,
	}
}

// OS image sku
type OSImageSku string

const (
	OSImageSku_18_04_LTS = OSImageSku("18.04-LTS")
	OSImageSku_16_04_LTS = OSImageSku("16.04-LTS")
)

func (OSImageSku) ElementType() reflect.Type {
	return reflect.TypeOf((*OSImageSku)(nil)).Elem()
}

func (e OSImageSku) ToOSImageSkuOutput() OSImageSkuOutput {
	return pulumi.ToOutput(e).(OSImageSkuOutput)
}

func (e OSImageSku) ToOSImageSkuOutputWithContext(ctx context.Context) OSImageSkuOutput {
	return pulumi.ToOutputWithContext(ctx, e).(OSImageSkuOutput)
}

func (e OSImageSku) ToOSImageSkuPtrOutput() OSImageSkuPtrOutput {
	return e.ToOSImageSkuPtrOutputWithContext(context.Background())
}

func (e OSImageSku) ToOSImageSkuPtrOutputWithContext(ctx context.Context) OSImageSkuPtrOutput {
	return OSImageSku(e).ToOSImageSkuOutputWithContext(ctx).ToOSImageSkuPtrOutputWithContext(ctx)
}

func (e OSImageSku) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e OSImageSku) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e OSImageSku) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e OSImageSku) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type OSImageSkuOutput struct{ *pulumi.OutputState }

func (OSImageSkuOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OSImageSku)(nil)).Elem()
}

func (o OSImageSkuOutput) ToOSImageSkuOutput() OSImageSkuOutput {
	return o
}

func (o OSImageSkuOutput) ToOSImageSkuOutputWithContext(ctx context.Context) OSImageSkuOutput {
	return o
}

func (o OSImageSkuOutput) ToOSImageSkuPtrOutput() OSImageSkuPtrOutput {
	return o.ToOSImageSkuPtrOutputWithContext(context.Background())
}

func (o OSImageSkuOutput) ToOSImageSkuPtrOutputWithContext(ctx context.Context) OSImageSkuPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OSImageSku) *OSImageSku {
		return &v
	}).(OSImageSkuPtrOutput)
}

func (o OSImageSkuOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o OSImageSkuOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e OSImageSku) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o OSImageSkuOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o OSImageSkuOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e OSImageSku) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type OSImageSkuPtrOutput struct{ *pulumi.OutputState }

func (OSImageSkuPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OSImageSku)(nil)).Elem()
}

func (o OSImageSkuPtrOutput) ToOSImageSkuPtrOutput() OSImageSkuPtrOutput {
	return o
}

func (o OSImageSkuPtrOutput) ToOSImageSkuPtrOutputWithContext(ctx context.Context) OSImageSkuPtrOutput {
	return o
}

func (o OSImageSkuPtrOutput) Elem() OSImageSkuOutput {
	return o.ApplyT(func(v *OSImageSku) OSImageSku {
		if v != nil {
			return *v
		}
		var ret OSImageSku
		return ret
	}).(OSImageSkuOutput)
}

func (o OSImageSkuPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o OSImageSkuPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *OSImageSku) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// OSImageSkuInput is an input type that accepts values of the OSImageSku enum
// A concrete instance of `OSImageSkuInput` can be one of the following:
//
//	OSImageSku_18_04_LTS
//	OSImageSku_16_04_LTS
type OSImageSkuInput interface {
	pulumi.Input

	ToOSImageSkuOutput() OSImageSkuOutput
	ToOSImageSkuOutputWithContext(context.Context) OSImageSkuOutput
}

var osimageSkuPtrType = reflect.TypeOf((**OSImageSku)(nil)).Elem()

type OSImageSkuPtrInput interface {
	pulumi.Input

	ToOSImageSkuPtrOutput() OSImageSkuPtrOutput
	ToOSImageSkuPtrOutputWithContext(context.Context) OSImageSkuPtrOutput
}

type osimageSkuPtr string

func OSImageSkuPtr(v string) OSImageSkuPtrInput {
	return (*osimageSkuPtr)(&v)
}

func (*osimageSkuPtr) ElementType() reflect.Type {
	return osimageSkuPtrType
}

func (in *osimageSkuPtr) ToOSImageSkuPtrOutput() OSImageSkuPtrOutput {
	return pulumi.ToOutput(in).(OSImageSkuPtrOutput)
}

func (in *osimageSkuPtr) ToOSImageSkuPtrOutputWithContext(ctx context.Context) OSImageSkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(OSImageSkuPtrOutput)
}

func (in *osimageSkuPtr) ToOutput(ctx context.Context) pulumix.Output[*OSImageSku] {
	return pulumix.Output[*OSImageSku]{
		OutputState: in.ToOSImageSkuPtrOutputWithContext(ctx).OutputState,
	}
}

// OS image version
type OSImageVersion string

const (
	OSImageVersionLatest = OSImageVersion("latest")
)

func (OSImageVersion) ElementType() reflect.Type {
	return reflect.TypeOf((*OSImageVersion)(nil)).Elem()
}

func (e OSImageVersion) ToOSImageVersionOutput() OSImageVersionOutput {
	return pulumi.ToOutput(e).(OSImageVersionOutput)
}

func (e OSImageVersion) ToOSImageVersionOutputWithContext(ctx context.Context) OSImageVersionOutput {
	return pulumi.ToOutputWithContext(ctx, e).(OSImageVersionOutput)
}

func (e OSImageVersion) ToOSImageVersionPtrOutput() OSImageVersionPtrOutput {
	return e.ToOSImageVersionPtrOutputWithContext(context.Background())
}

func (e OSImageVersion) ToOSImageVersionPtrOutputWithContext(ctx context.Context) OSImageVersionPtrOutput {
	return OSImageVersion(e).ToOSImageVersionOutputWithContext(ctx).ToOSImageVersionPtrOutputWithContext(ctx)
}

func (e OSImageVersion) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e OSImageVersion) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e OSImageVersion) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e OSImageVersion) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type OSImageVersionOutput struct{ *pulumi.OutputState }

func (OSImageVersionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OSImageVersion)(nil)).Elem()
}

func (o OSImageVersionOutput) ToOSImageVersionOutput() OSImageVersionOutput {
	return o
}

func (o OSImageVersionOutput) ToOSImageVersionOutputWithContext(ctx context.Context) OSImageVersionOutput {
	return o
}

func (o OSImageVersionOutput) ToOSImageVersionPtrOutput() OSImageVersionPtrOutput {
	return o.ToOSImageVersionPtrOutputWithContext(context.Background())
}

func (o OSImageVersionOutput) ToOSImageVersionPtrOutputWithContext(ctx context.Context) OSImageVersionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OSImageVersion) *OSImageVersion {
		return &v
	}).(OSImageVersionPtrOutput)
}

func (o OSImageVersionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o OSImageVersionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e OSImageVersion) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o OSImageVersionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o OSImageVersionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e OSImageVersion) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type OSImageVersionPtrOutput struct{ *pulumi.OutputState }

func (OSImageVersionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OSImageVersion)(nil)).Elem()
}

func (o OSImageVersionPtrOutput) ToOSImageVersionPtrOutput() OSImageVersionPtrOutput {
	return o
}

func (o OSImageVersionPtrOutput) ToOSImageVersionPtrOutputWithContext(ctx context.Context) OSImageVersionPtrOutput {
	return o
}

func (o OSImageVersionPtrOutput) Elem() OSImageVersionOutput {
	return o.ApplyT(func(v *OSImageVersion) OSImageVersion {
		if v != nil {
			return *v
		}
		var ret OSImageVersion
		return ret
	}).(OSImageVersionOutput)
}

func (o OSImageVersionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o OSImageVersionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *OSImageVersion) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// OSImageVersionInput is an input type that accepts values of the OSImageVersion enum
// A concrete instance of `OSImageVersionInput` can be one of the following:
//
//	OSImageVersionLatest
type OSImageVersionInput interface {
	pulumi.Input

	ToOSImageVersionOutput() OSImageVersionOutput
	ToOSImageVersionOutputWithContext(context.Context) OSImageVersionOutput
}

var osimageVersionPtrType = reflect.TypeOf((**OSImageVersion)(nil)).Elem()

type OSImageVersionPtrInput interface {
	pulumi.Input

	ToOSImageVersionPtrOutput() OSImageVersionPtrOutput
	ToOSImageVersionPtrOutputWithContext(context.Context) OSImageVersionPtrOutput
}

type osimageVersionPtr string

func OSImageVersionPtr(v string) OSImageVersionPtrInput {
	return (*osimageVersionPtr)(&v)
}

func (*osimageVersionPtr) ElementType() reflect.Type {
	return osimageVersionPtrType
}

func (in *osimageVersionPtr) ToOSImageVersionPtrOutput() OSImageVersionPtrOutput {
	return pulumi.ToOutput(in).(OSImageVersionPtrOutput)
}

func (in *osimageVersionPtr) ToOSImageVersionPtrOutputWithContext(ctx context.Context) OSImageVersionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(OSImageVersionPtrOutput)
}

func (in *osimageVersionPtr) ToOutput(ctx context.Context) pulumix.Output[*OSImageVersion] {
	return pulumix.Output[*OSImageVersion]{
		OutputState: in.ToOSImageVersionPtrOutputWithContext(ctx).OutputState,
	}
}

// PHP version
type PHPVersion string

const (
	PHPVersion_7_2 = PHPVersion("7.2")
	PHPVersion_7_3 = PHPVersion("7.3")
	PHPVersion_7_4 = PHPVersion("7.4")
)

func (PHPVersion) ElementType() reflect.Type {
	return reflect.TypeOf((*PHPVersion)(nil)).Elem()
}

func (e PHPVersion) ToPHPVersionOutput() PHPVersionOutput {
	return pulumi.ToOutput(e).(PHPVersionOutput)
}

func (e PHPVersion) ToPHPVersionOutputWithContext(ctx context.Context) PHPVersionOutput {
	return pulumi.ToOutputWithContext(ctx, e).(PHPVersionOutput)
}

func (e PHPVersion) ToPHPVersionPtrOutput() PHPVersionPtrOutput {
	return e.ToPHPVersionPtrOutputWithContext(context.Background())
}

func (e PHPVersion) ToPHPVersionPtrOutputWithContext(ctx context.Context) PHPVersionPtrOutput {
	return PHPVersion(e).ToPHPVersionOutputWithContext(ctx).ToPHPVersionPtrOutputWithContext(ctx)
}

func (e PHPVersion) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e PHPVersion) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e PHPVersion) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e PHPVersion) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type PHPVersionOutput struct{ *pulumi.OutputState }

func (PHPVersionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PHPVersion)(nil)).Elem()
}

func (o PHPVersionOutput) ToPHPVersionOutput() PHPVersionOutput {
	return o
}

func (o PHPVersionOutput) ToPHPVersionOutputWithContext(ctx context.Context) PHPVersionOutput {
	return o
}

func (o PHPVersionOutput) ToPHPVersionPtrOutput() PHPVersionPtrOutput {
	return o.ToPHPVersionPtrOutputWithContext(context.Background())
}

func (o PHPVersionOutput) ToPHPVersionPtrOutputWithContext(ctx context.Context) PHPVersionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PHPVersion) *PHPVersion {
		return &v
	}).(PHPVersionPtrOutput)
}

func (o PHPVersionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o PHPVersionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PHPVersion) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o PHPVersionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PHPVersionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PHPVersion) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type PHPVersionPtrOutput struct{ *pulumi.OutputState }

func (PHPVersionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PHPVersion)(nil)).Elem()
}

func (o PHPVersionPtrOutput) ToPHPVersionPtrOutput() PHPVersionPtrOutput {
	return o
}

func (o PHPVersionPtrOutput) ToPHPVersionPtrOutputWithContext(ctx context.Context) PHPVersionPtrOutput {
	return o
}

func (o PHPVersionPtrOutput) Elem() PHPVersionOutput {
	return o.ApplyT(func(v *PHPVersion) PHPVersion {
		if v != nil {
			return *v
		}
		var ret PHPVersion
		return ret
	}).(PHPVersionOutput)
}

func (o PHPVersionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PHPVersionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *PHPVersion) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// PHPVersionInput is an input type that accepts values of the PHPVersion enum
// A concrete instance of `PHPVersionInput` can be one of the following:
//
//	PHPVersion_7_2
//	PHPVersion_7_3
//	PHPVersion_7_4
type PHPVersionInput interface {
	pulumi.Input

	ToPHPVersionOutput() PHPVersionOutput
	ToPHPVersionOutputWithContext(context.Context) PHPVersionOutput
}

var phpversionPtrType = reflect.TypeOf((**PHPVersion)(nil)).Elem()

type PHPVersionPtrInput interface {
	pulumi.Input

	ToPHPVersionPtrOutput() PHPVersionPtrOutput
	ToPHPVersionPtrOutputWithContext(context.Context) PHPVersionPtrOutput
}

type phpversionPtr string

func PHPVersionPtr(v string) PHPVersionPtrInput {
	return (*phpversionPtr)(&v)
}

func (*phpversionPtr) ElementType() reflect.Type {
	return phpversionPtrType
}

func (in *phpversionPtr) ToPHPVersionPtrOutput() PHPVersionPtrOutput {
	return pulumi.ToOutput(in).(PHPVersionPtrOutput)
}

func (in *phpversionPtr) ToPHPVersionPtrOutputWithContext(ctx context.Context) PHPVersionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(PHPVersionPtrOutput)
}

func (in *phpversionPtr) ToOutput(ctx context.Context) pulumix.Output[*PHPVersion] {
	return pulumix.Output[*PHPVersion]{
		OutputState: in.ToPHPVersionPtrOutputWithContext(ctx).OutputState,
	}
}

// Cache family
type RedisCacheFamily string

const (
	RedisCacheFamilyC = RedisCacheFamily("C")
	RedisCacheFamilyP = RedisCacheFamily("P")
)

func (RedisCacheFamily) ElementType() reflect.Type {
	return reflect.TypeOf((*RedisCacheFamily)(nil)).Elem()
}

func (e RedisCacheFamily) ToRedisCacheFamilyOutput() RedisCacheFamilyOutput {
	return pulumi.ToOutput(e).(RedisCacheFamilyOutput)
}

func (e RedisCacheFamily) ToRedisCacheFamilyOutputWithContext(ctx context.Context) RedisCacheFamilyOutput {
	return pulumi.ToOutputWithContext(ctx, e).(RedisCacheFamilyOutput)
}

func (e RedisCacheFamily) ToRedisCacheFamilyPtrOutput() RedisCacheFamilyPtrOutput {
	return e.ToRedisCacheFamilyPtrOutputWithContext(context.Background())
}

func (e RedisCacheFamily) ToRedisCacheFamilyPtrOutputWithContext(ctx context.Context) RedisCacheFamilyPtrOutput {
	return RedisCacheFamily(e).ToRedisCacheFamilyOutputWithContext(ctx).ToRedisCacheFamilyPtrOutputWithContext(ctx)
}

func (e RedisCacheFamily) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e RedisCacheFamily) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e RedisCacheFamily) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e RedisCacheFamily) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type RedisCacheFamilyOutput struct{ *pulumi.OutputState }

func (RedisCacheFamilyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RedisCacheFamily)(nil)).Elem()
}

func (o RedisCacheFamilyOutput) ToRedisCacheFamilyOutput() RedisCacheFamilyOutput {
	return o
}

func (o RedisCacheFamilyOutput) ToRedisCacheFamilyOutputWithContext(ctx context.Context) RedisCacheFamilyOutput {
	return o
}

func (o RedisCacheFamilyOutput) ToRedisCacheFamilyPtrOutput() RedisCacheFamilyPtrOutput {
	return o.ToRedisCacheFamilyPtrOutputWithContext(context.Background())
}

func (o RedisCacheFamilyOutput) ToRedisCacheFamilyPtrOutputWithContext(ctx context.Context) RedisCacheFamilyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RedisCacheFamily) *RedisCacheFamily {
		return &v
	}).(RedisCacheFamilyPtrOutput)
}

func (o RedisCacheFamilyOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o RedisCacheFamilyOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RedisCacheFamily) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o RedisCacheFamilyOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RedisCacheFamilyOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RedisCacheFamily) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type RedisCacheFamilyPtrOutput struct{ *pulumi.OutputState }

func (RedisCacheFamilyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RedisCacheFamily)(nil)).Elem()
}

func (o RedisCacheFamilyPtrOutput) ToRedisCacheFamilyPtrOutput() RedisCacheFamilyPtrOutput {
	return o
}

func (o RedisCacheFamilyPtrOutput) ToRedisCacheFamilyPtrOutputWithContext(ctx context.Context) RedisCacheFamilyPtrOutput {
	return o
}

func (o RedisCacheFamilyPtrOutput) Elem() RedisCacheFamilyOutput {
	return o.ApplyT(func(v *RedisCacheFamily) RedisCacheFamily {
		if v != nil {
			return *v
		}
		var ret RedisCacheFamily
		return ret
	}).(RedisCacheFamilyOutput)
}

func (o RedisCacheFamilyPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RedisCacheFamilyPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *RedisCacheFamily) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// RedisCacheFamilyInput is an input type that accepts values of the RedisCacheFamily enum
// A concrete instance of `RedisCacheFamilyInput` can be one of the following:
//
//	RedisCacheFamilyC
//	RedisCacheFamilyP
type RedisCacheFamilyInput interface {
	pulumi.Input

	ToRedisCacheFamilyOutput() RedisCacheFamilyOutput
	ToRedisCacheFamilyOutputWithContext(context.Context) RedisCacheFamilyOutput
}

var redisCacheFamilyPtrType = reflect.TypeOf((**RedisCacheFamily)(nil)).Elem()

type RedisCacheFamilyPtrInput interface {
	pulumi.Input

	ToRedisCacheFamilyPtrOutput() RedisCacheFamilyPtrOutput
	ToRedisCacheFamilyPtrOutputWithContext(context.Context) RedisCacheFamilyPtrOutput
}

type redisCacheFamilyPtr string

func RedisCacheFamilyPtr(v string) RedisCacheFamilyPtrInput {
	return (*redisCacheFamilyPtr)(&v)
}

func (*redisCacheFamilyPtr) ElementType() reflect.Type {
	return redisCacheFamilyPtrType
}

func (in *redisCacheFamilyPtr) ToRedisCacheFamilyPtrOutput() RedisCacheFamilyPtrOutput {
	return pulumi.ToOutput(in).(RedisCacheFamilyPtrOutput)
}

func (in *redisCacheFamilyPtr) ToRedisCacheFamilyPtrOutputWithContext(ctx context.Context) RedisCacheFamilyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(RedisCacheFamilyPtrOutput)
}

func (in *redisCacheFamilyPtr) ToOutput(ctx context.Context) pulumix.Output[*RedisCacheFamily] {
	return pulumix.Output[*RedisCacheFamily]{
		OutputState: in.ToRedisCacheFamilyPtrOutputWithContext(ctx).OutputState,
	}
}

// The DB scale method.
type SAPDatabaseScaleMethod string

const (
	SAPDatabaseScaleMethodScaleUp = SAPDatabaseScaleMethod("ScaleUp")
)

func (SAPDatabaseScaleMethod) ElementType() reflect.Type {
	return reflect.TypeOf((*SAPDatabaseScaleMethod)(nil)).Elem()
}

func (e SAPDatabaseScaleMethod) ToSAPDatabaseScaleMethodOutput() SAPDatabaseScaleMethodOutput {
	return pulumi.ToOutput(e).(SAPDatabaseScaleMethodOutput)
}

func (e SAPDatabaseScaleMethod) ToSAPDatabaseScaleMethodOutputWithContext(ctx context.Context) SAPDatabaseScaleMethodOutput {
	return pulumi.ToOutputWithContext(ctx, e).(SAPDatabaseScaleMethodOutput)
}

func (e SAPDatabaseScaleMethod) ToSAPDatabaseScaleMethodPtrOutput() SAPDatabaseScaleMethodPtrOutput {
	return e.ToSAPDatabaseScaleMethodPtrOutputWithContext(context.Background())
}

func (e SAPDatabaseScaleMethod) ToSAPDatabaseScaleMethodPtrOutputWithContext(ctx context.Context) SAPDatabaseScaleMethodPtrOutput {
	return SAPDatabaseScaleMethod(e).ToSAPDatabaseScaleMethodOutputWithContext(ctx).ToSAPDatabaseScaleMethodPtrOutputWithContext(ctx)
}

func (e SAPDatabaseScaleMethod) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e SAPDatabaseScaleMethod) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e SAPDatabaseScaleMethod) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e SAPDatabaseScaleMethod) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type SAPDatabaseScaleMethodOutput struct{ *pulumi.OutputState }

func (SAPDatabaseScaleMethodOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SAPDatabaseScaleMethod)(nil)).Elem()
}

func (o SAPDatabaseScaleMethodOutput) ToSAPDatabaseScaleMethodOutput() SAPDatabaseScaleMethodOutput {
	return o
}

func (o SAPDatabaseScaleMethodOutput) ToSAPDatabaseScaleMethodOutputWithContext(ctx context.Context) SAPDatabaseScaleMethodOutput {
	return o
}

func (o SAPDatabaseScaleMethodOutput) ToSAPDatabaseScaleMethodPtrOutput() SAPDatabaseScaleMethodPtrOutput {
	return o.ToSAPDatabaseScaleMethodPtrOutputWithContext(context.Background())
}

func (o SAPDatabaseScaleMethodOutput) ToSAPDatabaseScaleMethodPtrOutputWithContext(ctx context.Context) SAPDatabaseScaleMethodPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SAPDatabaseScaleMethod) *SAPDatabaseScaleMethod {
		return &v
	}).(SAPDatabaseScaleMethodPtrOutput)
}

func (o SAPDatabaseScaleMethodOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o SAPDatabaseScaleMethodOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SAPDatabaseScaleMethod) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o SAPDatabaseScaleMethodOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SAPDatabaseScaleMethodOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SAPDatabaseScaleMethod) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type SAPDatabaseScaleMethodPtrOutput struct{ *pulumi.OutputState }

func (SAPDatabaseScaleMethodPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SAPDatabaseScaleMethod)(nil)).Elem()
}

func (o SAPDatabaseScaleMethodPtrOutput) ToSAPDatabaseScaleMethodPtrOutput() SAPDatabaseScaleMethodPtrOutput {
	return o
}

func (o SAPDatabaseScaleMethodPtrOutput) ToSAPDatabaseScaleMethodPtrOutputWithContext(ctx context.Context) SAPDatabaseScaleMethodPtrOutput {
	return o
}

func (o SAPDatabaseScaleMethodPtrOutput) Elem() SAPDatabaseScaleMethodOutput {
	return o.ApplyT(func(v *SAPDatabaseScaleMethod) SAPDatabaseScaleMethod {
		if v != nil {
			return *v
		}
		var ret SAPDatabaseScaleMethod
		return ret
	}).(SAPDatabaseScaleMethodOutput)
}

func (o SAPDatabaseScaleMethodPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SAPDatabaseScaleMethodPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *SAPDatabaseScaleMethod) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// SAPDatabaseScaleMethodInput is an input type that accepts values of the SAPDatabaseScaleMethod enum
// A concrete instance of `SAPDatabaseScaleMethodInput` can be one of the following:
//
//	SAPDatabaseScaleMethodScaleUp
type SAPDatabaseScaleMethodInput interface {
	pulumi.Input

	ToSAPDatabaseScaleMethodOutput() SAPDatabaseScaleMethodOutput
	ToSAPDatabaseScaleMethodOutputWithContext(context.Context) SAPDatabaseScaleMethodOutput
}

var sapdatabaseScaleMethodPtrType = reflect.TypeOf((**SAPDatabaseScaleMethod)(nil)).Elem()

type SAPDatabaseScaleMethodPtrInput interface {
	pulumi.Input

	ToSAPDatabaseScaleMethodPtrOutput() SAPDatabaseScaleMethodPtrOutput
	ToSAPDatabaseScaleMethodPtrOutputWithContext(context.Context) SAPDatabaseScaleMethodPtrOutput
}

type sapdatabaseScaleMethodPtr string

func SAPDatabaseScaleMethodPtr(v string) SAPDatabaseScaleMethodPtrInput {
	return (*sapdatabaseScaleMethodPtr)(&v)
}

func (*sapdatabaseScaleMethodPtr) ElementType() reflect.Type {
	return sapdatabaseScaleMethodPtrType
}

func (in *sapdatabaseScaleMethodPtr) ToSAPDatabaseScaleMethodPtrOutput() SAPDatabaseScaleMethodPtrOutput {
	return pulumi.ToOutput(in).(SAPDatabaseScaleMethodPtrOutput)
}

func (in *sapdatabaseScaleMethodPtr) ToSAPDatabaseScaleMethodPtrOutputWithContext(ctx context.Context) SAPDatabaseScaleMethodPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(SAPDatabaseScaleMethodPtrOutput)
}

func (in *sapdatabaseScaleMethodPtr) ToOutput(ctx context.Context) pulumix.Output[*SAPDatabaseScaleMethod] {
	return pulumix.Output[*SAPDatabaseScaleMethod]{
		OutputState: in.ToSAPDatabaseScaleMethodPtrOutputWithContext(ctx).OutputState,
	}
}

// The database type. Eg: HANA, DB2, etc
type SAPDatabaseType string

const (
	SAPDatabaseTypeHANA = SAPDatabaseType("HANA")
	SAPDatabaseTypeDB2  = SAPDatabaseType("DB2")
)

func (SAPDatabaseType) ElementType() reflect.Type {
	return reflect.TypeOf((*SAPDatabaseType)(nil)).Elem()
}

func (e SAPDatabaseType) ToSAPDatabaseTypeOutput() SAPDatabaseTypeOutput {
	return pulumi.ToOutput(e).(SAPDatabaseTypeOutput)
}

func (e SAPDatabaseType) ToSAPDatabaseTypeOutputWithContext(ctx context.Context) SAPDatabaseTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(SAPDatabaseTypeOutput)
}

func (e SAPDatabaseType) ToSAPDatabaseTypePtrOutput() SAPDatabaseTypePtrOutput {
	return e.ToSAPDatabaseTypePtrOutputWithContext(context.Background())
}

func (e SAPDatabaseType) ToSAPDatabaseTypePtrOutputWithContext(ctx context.Context) SAPDatabaseTypePtrOutput {
	return SAPDatabaseType(e).ToSAPDatabaseTypeOutputWithContext(ctx).ToSAPDatabaseTypePtrOutputWithContext(ctx)
}

func (e SAPDatabaseType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e SAPDatabaseType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e SAPDatabaseType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e SAPDatabaseType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type SAPDatabaseTypeOutput struct{ *pulumi.OutputState }

func (SAPDatabaseTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SAPDatabaseType)(nil)).Elem()
}

func (o SAPDatabaseTypeOutput) ToSAPDatabaseTypeOutput() SAPDatabaseTypeOutput {
	return o
}

func (o SAPDatabaseTypeOutput) ToSAPDatabaseTypeOutputWithContext(ctx context.Context) SAPDatabaseTypeOutput {
	return o
}

func (o SAPDatabaseTypeOutput) ToSAPDatabaseTypePtrOutput() SAPDatabaseTypePtrOutput {
	return o.ToSAPDatabaseTypePtrOutputWithContext(context.Background())
}

func (o SAPDatabaseTypeOutput) ToSAPDatabaseTypePtrOutputWithContext(ctx context.Context) SAPDatabaseTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SAPDatabaseType) *SAPDatabaseType {
		return &v
	}).(SAPDatabaseTypePtrOutput)
}

func (o SAPDatabaseTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o SAPDatabaseTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SAPDatabaseType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o SAPDatabaseTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SAPDatabaseTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SAPDatabaseType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type SAPDatabaseTypePtrOutput struct{ *pulumi.OutputState }

func (SAPDatabaseTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SAPDatabaseType)(nil)).Elem()
}

func (o SAPDatabaseTypePtrOutput) ToSAPDatabaseTypePtrOutput() SAPDatabaseTypePtrOutput {
	return o
}

func (o SAPDatabaseTypePtrOutput) ToSAPDatabaseTypePtrOutputWithContext(ctx context.Context) SAPDatabaseTypePtrOutput {
	return o
}

func (o SAPDatabaseTypePtrOutput) Elem() SAPDatabaseTypeOutput {
	return o.ApplyT(func(v *SAPDatabaseType) SAPDatabaseType {
		if v != nil {
			return *v
		}
		var ret SAPDatabaseType
		return ret
	}).(SAPDatabaseTypeOutput)
}

func (o SAPDatabaseTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SAPDatabaseTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *SAPDatabaseType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// SAPDatabaseTypeInput is an input type that accepts values of the SAPDatabaseType enum
// A concrete instance of `SAPDatabaseTypeInput` can be one of the following:
//
//	SAPDatabaseTypeHANA
//	SAPDatabaseTypeDB2
type SAPDatabaseTypeInput interface {
	pulumi.Input

	ToSAPDatabaseTypeOutput() SAPDatabaseTypeOutput
	ToSAPDatabaseTypeOutputWithContext(context.Context) SAPDatabaseTypeOutput
}

var sapdatabaseTypePtrType = reflect.TypeOf((**SAPDatabaseType)(nil)).Elem()

type SAPDatabaseTypePtrInput interface {
	pulumi.Input

	ToSAPDatabaseTypePtrOutput() SAPDatabaseTypePtrOutput
	ToSAPDatabaseTypePtrOutputWithContext(context.Context) SAPDatabaseTypePtrOutput
}

type sapdatabaseTypePtr string

func SAPDatabaseTypePtr(v string) SAPDatabaseTypePtrInput {
	return (*sapdatabaseTypePtr)(&v)
}

func (*sapdatabaseTypePtr) ElementType() reflect.Type {
	return sapdatabaseTypePtrType
}

func (in *sapdatabaseTypePtr) ToSAPDatabaseTypePtrOutput() SAPDatabaseTypePtrOutput {
	return pulumi.ToOutput(in).(SAPDatabaseTypePtrOutput)
}

func (in *sapdatabaseTypePtr) ToSAPDatabaseTypePtrOutputWithContext(ctx context.Context) SAPDatabaseTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(SAPDatabaseTypePtrOutput)
}

func (in *sapdatabaseTypePtr) ToOutput(ctx context.Context) pulumix.Output[*SAPDatabaseType] {
	return pulumix.Output[*SAPDatabaseType]{
		OutputState: in.ToSAPDatabaseTypePtrOutputWithContext(ctx).OutputState,
	}
}

// The deployment type. Eg: SingleServer/ThreeTier
type SAPDeploymentType string

const (
	SAPDeploymentTypeSingleServer = SAPDeploymentType("SingleServer")
	SAPDeploymentTypeThreeTier    = SAPDeploymentType("ThreeTier")
)

func (SAPDeploymentType) ElementType() reflect.Type {
	return reflect.TypeOf((*SAPDeploymentType)(nil)).Elem()
}

func (e SAPDeploymentType) ToSAPDeploymentTypeOutput() SAPDeploymentTypeOutput {
	return pulumi.ToOutput(e).(SAPDeploymentTypeOutput)
}

func (e SAPDeploymentType) ToSAPDeploymentTypeOutputWithContext(ctx context.Context) SAPDeploymentTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(SAPDeploymentTypeOutput)
}

func (e SAPDeploymentType) ToSAPDeploymentTypePtrOutput() SAPDeploymentTypePtrOutput {
	return e.ToSAPDeploymentTypePtrOutputWithContext(context.Background())
}

func (e SAPDeploymentType) ToSAPDeploymentTypePtrOutputWithContext(ctx context.Context) SAPDeploymentTypePtrOutput {
	return SAPDeploymentType(e).ToSAPDeploymentTypeOutputWithContext(ctx).ToSAPDeploymentTypePtrOutputWithContext(ctx)
}

func (e SAPDeploymentType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e SAPDeploymentType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e SAPDeploymentType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e SAPDeploymentType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type SAPDeploymentTypeOutput struct{ *pulumi.OutputState }

func (SAPDeploymentTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SAPDeploymentType)(nil)).Elem()
}

func (o SAPDeploymentTypeOutput) ToSAPDeploymentTypeOutput() SAPDeploymentTypeOutput {
	return o
}

func (o SAPDeploymentTypeOutput) ToSAPDeploymentTypeOutputWithContext(ctx context.Context) SAPDeploymentTypeOutput {
	return o
}

func (o SAPDeploymentTypeOutput) ToSAPDeploymentTypePtrOutput() SAPDeploymentTypePtrOutput {
	return o.ToSAPDeploymentTypePtrOutputWithContext(context.Background())
}

func (o SAPDeploymentTypeOutput) ToSAPDeploymentTypePtrOutputWithContext(ctx context.Context) SAPDeploymentTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SAPDeploymentType) *SAPDeploymentType {
		return &v
	}).(SAPDeploymentTypePtrOutput)
}

func (o SAPDeploymentTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o SAPDeploymentTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SAPDeploymentType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o SAPDeploymentTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SAPDeploymentTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SAPDeploymentType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type SAPDeploymentTypePtrOutput struct{ *pulumi.OutputState }

func (SAPDeploymentTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SAPDeploymentType)(nil)).Elem()
}

func (o SAPDeploymentTypePtrOutput) ToSAPDeploymentTypePtrOutput() SAPDeploymentTypePtrOutput {
	return o
}

func (o SAPDeploymentTypePtrOutput) ToSAPDeploymentTypePtrOutputWithContext(ctx context.Context) SAPDeploymentTypePtrOutput {
	return o
}

func (o SAPDeploymentTypePtrOutput) Elem() SAPDeploymentTypeOutput {
	return o.ApplyT(func(v *SAPDeploymentType) SAPDeploymentType {
		if v != nil {
			return *v
		}
		var ret SAPDeploymentType
		return ret
	}).(SAPDeploymentTypeOutput)
}

func (o SAPDeploymentTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SAPDeploymentTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *SAPDeploymentType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// SAPDeploymentTypeInput is an input type that accepts values of the SAPDeploymentType enum
// A concrete instance of `SAPDeploymentTypeInput` can be one of the following:
//
//	SAPDeploymentTypeSingleServer
//	SAPDeploymentTypeThreeTier
type SAPDeploymentTypeInput interface {
	pulumi.Input

	ToSAPDeploymentTypeOutput() SAPDeploymentTypeOutput
	ToSAPDeploymentTypeOutputWithContext(context.Context) SAPDeploymentTypeOutput
}

var sapdeploymentTypePtrType = reflect.TypeOf((**SAPDeploymentType)(nil)).Elem()

type SAPDeploymentTypePtrInput interface {
	pulumi.Input

	ToSAPDeploymentTypePtrOutput() SAPDeploymentTypePtrOutput
	ToSAPDeploymentTypePtrOutputWithContext(context.Context) SAPDeploymentTypePtrOutput
}

type sapdeploymentTypePtr string

func SAPDeploymentTypePtr(v string) SAPDeploymentTypePtrInput {
	return (*sapdeploymentTypePtr)(&v)
}

func (*sapdeploymentTypePtr) ElementType() reflect.Type {
	return sapdeploymentTypePtrType
}

func (in *sapdeploymentTypePtr) ToSAPDeploymentTypePtrOutput() SAPDeploymentTypePtrOutput {
	return pulumi.ToOutput(in).(SAPDeploymentTypePtrOutput)
}

func (in *sapdeploymentTypePtr) ToSAPDeploymentTypePtrOutputWithContext(ctx context.Context) SAPDeploymentTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(SAPDeploymentTypePtrOutput)
}

func (in *sapdeploymentTypePtr) ToOutput(ctx context.Context) pulumix.Output[*SAPDeploymentType] {
	return pulumix.Output[*SAPDeploymentType]{
		OutputState: in.ToSAPDeploymentTypePtrOutputWithContext(ctx).OutputState,
	}
}

// Defines the environment type - Production/Non Production.
type SAPEnvironmentType string

const (
	SAPEnvironmentTypeNonProd = SAPEnvironmentType("NonProd")
	SAPEnvironmentTypeProd    = SAPEnvironmentType("Prod")
)

func (SAPEnvironmentType) ElementType() reflect.Type {
	return reflect.TypeOf((*SAPEnvironmentType)(nil)).Elem()
}

func (e SAPEnvironmentType) ToSAPEnvironmentTypeOutput() SAPEnvironmentTypeOutput {
	return pulumi.ToOutput(e).(SAPEnvironmentTypeOutput)
}

func (e SAPEnvironmentType) ToSAPEnvironmentTypeOutputWithContext(ctx context.Context) SAPEnvironmentTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(SAPEnvironmentTypeOutput)
}

func (e SAPEnvironmentType) ToSAPEnvironmentTypePtrOutput() SAPEnvironmentTypePtrOutput {
	return e.ToSAPEnvironmentTypePtrOutputWithContext(context.Background())
}

func (e SAPEnvironmentType) ToSAPEnvironmentTypePtrOutputWithContext(ctx context.Context) SAPEnvironmentTypePtrOutput {
	return SAPEnvironmentType(e).ToSAPEnvironmentTypeOutputWithContext(ctx).ToSAPEnvironmentTypePtrOutputWithContext(ctx)
}

func (e SAPEnvironmentType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e SAPEnvironmentType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e SAPEnvironmentType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e SAPEnvironmentType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type SAPEnvironmentTypeOutput struct{ *pulumi.OutputState }

func (SAPEnvironmentTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SAPEnvironmentType)(nil)).Elem()
}

func (o SAPEnvironmentTypeOutput) ToSAPEnvironmentTypeOutput() SAPEnvironmentTypeOutput {
	return o
}

func (o SAPEnvironmentTypeOutput) ToSAPEnvironmentTypeOutputWithContext(ctx context.Context) SAPEnvironmentTypeOutput {
	return o
}

func (o SAPEnvironmentTypeOutput) ToSAPEnvironmentTypePtrOutput() SAPEnvironmentTypePtrOutput {
	return o.ToSAPEnvironmentTypePtrOutputWithContext(context.Background())
}

func (o SAPEnvironmentTypeOutput) ToSAPEnvironmentTypePtrOutputWithContext(ctx context.Context) SAPEnvironmentTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SAPEnvironmentType) *SAPEnvironmentType {
		return &v
	}).(SAPEnvironmentTypePtrOutput)
}

func (o SAPEnvironmentTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o SAPEnvironmentTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SAPEnvironmentType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o SAPEnvironmentTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SAPEnvironmentTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SAPEnvironmentType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type SAPEnvironmentTypePtrOutput struct{ *pulumi.OutputState }

func (SAPEnvironmentTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SAPEnvironmentType)(nil)).Elem()
}

func (o SAPEnvironmentTypePtrOutput) ToSAPEnvironmentTypePtrOutput() SAPEnvironmentTypePtrOutput {
	return o
}

func (o SAPEnvironmentTypePtrOutput) ToSAPEnvironmentTypePtrOutputWithContext(ctx context.Context) SAPEnvironmentTypePtrOutput {
	return o
}

func (o SAPEnvironmentTypePtrOutput) Elem() SAPEnvironmentTypeOutput {
	return o.ApplyT(func(v *SAPEnvironmentType) SAPEnvironmentType {
		if v != nil {
			return *v
		}
		var ret SAPEnvironmentType
		return ret
	}).(SAPEnvironmentTypeOutput)
}

func (o SAPEnvironmentTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SAPEnvironmentTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *SAPEnvironmentType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// SAPEnvironmentTypeInput is an input type that accepts values of the SAPEnvironmentType enum
// A concrete instance of `SAPEnvironmentTypeInput` can be one of the following:
//
//	SAPEnvironmentTypeNonProd
//	SAPEnvironmentTypeProd
type SAPEnvironmentTypeInput interface {
	pulumi.Input

	ToSAPEnvironmentTypeOutput() SAPEnvironmentTypeOutput
	ToSAPEnvironmentTypeOutputWithContext(context.Context) SAPEnvironmentTypeOutput
}

var sapenvironmentTypePtrType = reflect.TypeOf((**SAPEnvironmentType)(nil)).Elem()

type SAPEnvironmentTypePtrInput interface {
	pulumi.Input

	ToSAPEnvironmentTypePtrOutput() SAPEnvironmentTypePtrOutput
	ToSAPEnvironmentTypePtrOutputWithContext(context.Context) SAPEnvironmentTypePtrOutput
}

type sapenvironmentTypePtr string

func SAPEnvironmentTypePtr(v string) SAPEnvironmentTypePtrInput {
	return (*sapenvironmentTypePtr)(&v)
}

func (*sapenvironmentTypePtr) ElementType() reflect.Type {
	return sapenvironmentTypePtrType
}

func (in *sapenvironmentTypePtr) ToSAPEnvironmentTypePtrOutput() SAPEnvironmentTypePtrOutput {
	return pulumi.ToOutput(in).(SAPEnvironmentTypePtrOutput)
}

func (in *sapenvironmentTypePtr) ToSAPEnvironmentTypePtrOutputWithContext(ctx context.Context) SAPEnvironmentTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(SAPEnvironmentTypePtrOutput)
}

func (in *sapenvironmentTypePtr) ToOutput(ctx context.Context) pulumix.Output[*SAPEnvironmentType] {
	return pulumix.Output[*SAPEnvironmentType]{
		OutputState: in.ToSAPEnvironmentTypePtrOutputWithContext(ctx).OutputState,
	}
}

// The high availability type.
type SAPHighAvailabilityType string

const (
	SAPHighAvailabilityTypeAvailabilitySet  = SAPHighAvailabilityType("AvailabilitySet")
	SAPHighAvailabilityTypeAvailabilityZone = SAPHighAvailabilityType("AvailabilityZone")
)

func (SAPHighAvailabilityType) ElementType() reflect.Type {
	return reflect.TypeOf((*SAPHighAvailabilityType)(nil)).Elem()
}

func (e SAPHighAvailabilityType) ToSAPHighAvailabilityTypeOutput() SAPHighAvailabilityTypeOutput {
	return pulumi.ToOutput(e).(SAPHighAvailabilityTypeOutput)
}

func (e SAPHighAvailabilityType) ToSAPHighAvailabilityTypeOutputWithContext(ctx context.Context) SAPHighAvailabilityTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(SAPHighAvailabilityTypeOutput)
}

func (e SAPHighAvailabilityType) ToSAPHighAvailabilityTypePtrOutput() SAPHighAvailabilityTypePtrOutput {
	return e.ToSAPHighAvailabilityTypePtrOutputWithContext(context.Background())
}

func (e SAPHighAvailabilityType) ToSAPHighAvailabilityTypePtrOutputWithContext(ctx context.Context) SAPHighAvailabilityTypePtrOutput {
	return SAPHighAvailabilityType(e).ToSAPHighAvailabilityTypeOutputWithContext(ctx).ToSAPHighAvailabilityTypePtrOutputWithContext(ctx)
}

func (e SAPHighAvailabilityType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e SAPHighAvailabilityType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e SAPHighAvailabilityType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e SAPHighAvailabilityType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type SAPHighAvailabilityTypeOutput struct{ *pulumi.OutputState }

func (SAPHighAvailabilityTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SAPHighAvailabilityType)(nil)).Elem()
}

func (o SAPHighAvailabilityTypeOutput) ToSAPHighAvailabilityTypeOutput() SAPHighAvailabilityTypeOutput {
	return o
}

func (o SAPHighAvailabilityTypeOutput) ToSAPHighAvailabilityTypeOutputWithContext(ctx context.Context) SAPHighAvailabilityTypeOutput {
	return o
}

func (o SAPHighAvailabilityTypeOutput) ToSAPHighAvailabilityTypePtrOutput() SAPHighAvailabilityTypePtrOutput {
	return o.ToSAPHighAvailabilityTypePtrOutputWithContext(context.Background())
}

func (o SAPHighAvailabilityTypeOutput) ToSAPHighAvailabilityTypePtrOutputWithContext(ctx context.Context) SAPHighAvailabilityTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SAPHighAvailabilityType) *SAPHighAvailabilityType {
		return &v
	}).(SAPHighAvailabilityTypePtrOutput)
}

func (o SAPHighAvailabilityTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o SAPHighAvailabilityTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SAPHighAvailabilityType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o SAPHighAvailabilityTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SAPHighAvailabilityTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SAPHighAvailabilityType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type SAPHighAvailabilityTypePtrOutput struct{ *pulumi.OutputState }

func (SAPHighAvailabilityTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SAPHighAvailabilityType)(nil)).Elem()
}

func (o SAPHighAvailabilityTypePtrOutput) ToSAPHighAvailabilityTypePtrOutput() SAPHighAvailabilityTypePtrOutput {
	return o
}

func (o SAPHighAvailabilityTypePtrOutput) ToSAPHighAvailabilityTypePtrOutputWithContext(ctx context.Context) SAPHighAvailabilityTypePtrOutput {
	return o
}

func (o SAPHighAvailabilityTypePtrOutput) Elem() SAPHighAvailabilityTypeOutput {
	return o.ApplyT(func(v *SAPHighAvailabilityType) SAPHighAvailabilityType {
		if v != nil {
			return *v
		}
		var ret SAPHighAvailabilityType
		return ret
	}).(SAPHighAvailabilityTypeOutput)
}

func (o SAPHighAvailabilityTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SAPHighAvailabilityTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *SAPHighAvailabilityType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// SAPHighAvailabilityTypeInput is an input type that accepts values of the SAPHighAvailabilityType enum
// A concrete instance of `SAPHighAvailabilityTypeInput` can be one of the following:
//
//	SAPHighAvailabilityTypeAvailabilitySet
//	SAPHighAvailabilityTypeAvailabilityZone
type SAPHighAvailabilityTypeInput interface {
	pulumi.Input

	ToSAPHighAvailabilityTypeOutput() SAPHighAvailabilityTypeOutput
	ToSAPHighAvailabilityTypeOutputWithContext(context.Context) SAPHighAvailabilityTypeOutput
}

var saphighAvailabilityTypePtrType = reflect.TypeOf((**SAPHighAvailabilityType)(nil)).Elem()

type SAPHighAvailabilityTypePtrInput interface {
	pulumi.Input

	ToSAPHighAvailabilityTypePtrOutput() SAPHighAvailabilityTypePtrOutput
	ToSAPHighAvailabilityTypePtrOutputWithContext(context.Context) SAPHighAvailabilityTypePtrOutput
}

type saphighAvailabilityTypePtr string

func SAPHighAvailabilityTypePtr(v string) SAPHighAvailabilityTypePtrInput {
	return (*saphighAvailabilityTypePtr)(&v)
}

func (*saphighAvailabilityTypePtr) ElementType() reflect.Type {
	return saphighAvailabilityTypePtrType
}

func (in *saphighAvailabilityTypePtr) ToSAPHighAvailabilityTypePtrOutput() SAPHighAvailabilityTypePtrOutput {
	return pulumi.ToOutput(in).(SAPHighAvailabilityTypePtrOutput)
}

func (in *saphighAvailabilityTypePtr) ToSAPHighAvailabilityTypePtrOutputWithContext(ctx context.Context) SAPHighAvailabilityTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(SAPHighAvailabilityTypePtrOutput)
}

func (in *saphighAvailabilityTypePtr) ToOutput(ctx context.Context) pulumix.Output[*SAPHighAvailabilityType] {
	return pulumix.Output[*SAPHighAvailabilityType]{
		OutputState: in.ToSAPHighAvailabilityTypePtrOutputWithContext(ctx).OutputState,
	}
}

// Defines the SAP Product type.
type SAPProductType string

const (
	SAPProductTypeECC    = SAPProductType("ECC")
	SAPProductTypeS4HANA = SAPProductType("S4HANA")
	SAPProductTypeOther  = SAPProductType("Other")
)

func (SAPProductType) ElementType() reflect.Type {
	return reflect.TypeOf((*SAPProductType)(nil)).Elem()
}

func (e SAPProductType) ToSAPProductTypeOutput() SAPProductTypeOutput {
	return pulumi.ToOutput(e).(SAPProductTypeOutput)
}

func (e SAPProductType) ToSAPProductTypeOutputWithContext(ctx context.Context) SAPProductTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(SAPProductTypeOutput)
}

func (e SAPProductType) ToSAPProductTypePtrOutput() SAPProductTypePtrOutput {
	return e.ToSAPProductTypePtrOutputWithContext(context.Background())
}

func (e SAPProductType) ToSAPProductTypePtrOutputWithContext(ctx context.Context) SAPProductTypePtrOutput {
	return SAPProductType(e).ToSAPProductTypeOutputWithContext(ctx).ToSAPProductTypePtrOutputWithContext(ctx)
}

func (e SAPProductType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e SAPProductType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e SAPProductType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e SAPProductType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type SAPProductTypeOutput struct{ *pulumi.OutputState }

func (SAPProductTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SAPProductType)(nil)).Elem()
}

func (o SAPProductTypeOutput) ToSAPProductTypeOutput() SAPProductTypeOutput {
	return o
}

func (o SAPProductTypeOutput) ToSAPProductTypeOutputWithContext(ctx context.Context) SAPProductTypeOutput {
	return o
}

func (o SAPProductTypeOutput) ToSAPProductTypePtrOutput() SAPProductTypePtrOutput {
	return o.ToSAPProductTypePtrOutputWithContext(context.Background())
}

func (o SAPProductTypeOutput) ToSAPProductTypePtrOutputWithContext(ctx context.Context) SAPProductTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SAPProductType) *SAPProductType {
		return &v
	}).(SAPProductTypePtrOutput)
}

func (o SAPProductTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o SAPProductTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SAPProductType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o SAPProductTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SAPProductTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SAPProductType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type SAPProductTypePtrOutput struct{ *pulumi.OutputState }

func (SAPProductTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SAPProductType)(nil)).Elem()
}

func (o SAPProductTypePtrOutput) ToSAPProductTypePtrOutput() SAPProductTypePtrOutput {
	return o
}

func (o SAPProductTypePtrOutput) ToSAPProductTypePtrOutputWithContext(ctx context.Context) SAPProductTypePtrOutput {
	return o
}

func (o SAPProductTypePtrOutput) Elem() SAPProductTypeOutput {
	return o.ApplyT(func(v *SAPProductType) SAPProductType {
		if v != nil {
			return *v
		}
		var ret SAPProductType
		return ret
	}).(SAPProductTypeOutput)
}

func (o SAPProductTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SAPProductTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *SAPProductType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// SAPProductTypeInput is an input type that accepts values of the SAPProductType enum
// A concrete instance of `SAPProductTypeInput` can be one of the following:
//
//	SAPProductTypeECC
//	SAPProductTypeS4HANA
//	SAPProductTypeOther
type SAPProductTypeInput interface {
	pulumi.Input

	ToSAPProductTypeOutput() SAPProductTypeOutput
	ToSAPProductTypeOutputWithContext(context.Context) SAPProductTypeOutput
}

var sapproductTypePtrType = reflect.TypeOf((**SAPProductType)(nil)).Elem()

type SAPProductTypePtrInput interface {
	pulumi.Input

	ToSAPProductTypePtrOutput() SAPProductTypePtrOutput
	ToSAPProductTypePtrOutputWithContext(context.Context) SAPProductTypePtrOutput
}

type sapproductTypePtr string

func SAPProductTypePtr(v string) SAPProductTypePtrInput {
	return (*sapproductTypePtr)(&v)
}

func (*sapproductTypePtr) ElementType() reflect.Type {
	return sapproductTypePtrType
}

func (in *sapproductTypePtr) ToSAPProductTypePtrOutput() SAPProductTypePtrOutput {
	return pulumi.ToOutput(in).(SAPProductTypePtrOutput)
}

func (in *sapproductTypePtr) ToSAPProductTypePtrOutputWithContext(ctx context.Context) SAPProductTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(SAPProductTypePtrOutput)
}

func (in *sapproductTypePtr) ToOutput(ctx context.Context) pulumix.Output[*SAPProductType] {
	return pulumix.Output[*SAPProductType]{
		OutputState: in.ToSAPProductTypePtrOutputWithContext(ctx).OutputState,
	}
}

// Search type
type SearchType string

const (
	SearchTypeElastic = SearchType("Elastic")
)

func (SearchType) ElementType() reflect.Type {
	return reflect.TypeOf((*SearchType)(nil)).Elem()
}

func (e SearchType) ToSearchTypeOutput() SearchTypeOutput {
	return pulumi.ToOutput(e).(SearchTypeOutput)
}

func (e SearchType) ToSearchTypeOutputWithContext(ctx context.Context) SearchTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(SearchTypeOutput)
}

func (e SearchType) ToSearchTypePtrOutput() SearchTypePtrOutput {
	return e.ToSearchTypePtrOutputWithContext(context.Background())
}

func (e SearchType) ToSearchTypePtrOutputWithContext(ctx context.Context) SearchTypePtrOutput {
	return SearchType(e).ToSearchTypeOutputWithContext(ctx).ToSearchTypePtrOutputWithContext(ctx)
}

func (e SearchType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e SearchType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e SearchType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e SearchType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type SearchTypeOutput struct{ *pulumi.OutputState }

func (SearchTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SearchType)(nil)).Elem()
}

func (o SearchTypeOutput) ToSearchTypeOutput() SearchTypeOutput {
	return o
}

func (o SearchTypeOutput) ToSearchTypeOutputWithContext(ctx context.Context) SearchTypeOutput {
	return o
}

func (o SearchTypeOutput) ToSearchTypePtrOutput() SearchTypePtrOutput {
	return o.ToSearchTypePtrOutputWithContext(context.Background())
}

func (o SearchTypeOutput) ToSearchTypePtrOutputWithContext(ctx context.Context) SearchTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SearchType) *SearchType {
		return &v
	}).(SearchTypePtrOutput)
}

func (o SearchTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o SearchTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SearchType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o SearchTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SearchTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SearchType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type SearchTypePtrOutput struct{ *pulumi.OutputState }

func (SearchTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SearchType)(nil)).Elem()
}

func (o SearchTypePtrOutput) ToSearchTypePtrOutput() SearchTypePtrOutput {
	return o
}

func (o SearchTypePtrOutput) ToSearchTypePtrOutputWithContext(ctx context.Context) SearchTypePtrOutput {
	return o
}

func (o SearchTypePtrOutput) Elem() SearchTypeOutput {
	return o.ApplyT(func(v *SearchType) SearchType {
		if v != nil {
			return *v
		}
		var ret SearchType
		return ret
	}).(SearchTypeOutput)
}

func (o SearchTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SearchTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *SearchType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// SearchTypeInput is an input type that accepts values of the SearchType enum
// A concrete instance of `SearchTypeInput` can be one of the following:
//
//	SearchTypeElastic
type SearchTypeInput interface {
	pulumi.Input

	ToSearchTypeOutput() SearchTypeOutput
	ToSearchTypeOutputWithContext(context.Context) SearchTypeOutput
}

var searchTypePtrType = reflect.TypeOf((**SearchType)(nil)).Elem()

type SearchTypePtrInput interface {
	pulumi.Input

	ToSearchTypePtrOutput() SearchTypePtrOutput
	ToSearchTypePtrOutputWithContext(context.Context) SearchTypePtrOutput
}

type searchTypePtr string

func SearchTypePtr(v string) SearchTypePtrInput {
	return (*searchTypePtr)(&v)
}

func (*searchTypePtr) ElementType() reflect.Type {
	return searchTypePtrType
}

func (in *searchTypePtr) ToSearchTypePtrOutput() SearchTypePtrOutput {
	return pulumi.ToOutput(in).(SearchTypePtrOutput)
}

func (in *searchTypePtr) ToSearchTypePtrOutputWithContext(ctx context.Context) SearchTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(SearchTypePtrOutput)
}

func (in *searchTypePtr) ToOutput(ctx context.Context) pulumix.Output[*SearchType] {
	return pulumix.Output[*SearchType]{
		OutputState: in.ToSearchTypePtrOutputWithContext(ctx).OutputState,
	}
}

// This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.
type SkuTier string

const (
	SkuTierFree     = SkuTier("Free")
	SkuTierBasic    = SkuTier("Basic")
	SkuTierStandard = SkuTier("Standard")
	SkuTierPremium  = SkuTier("Premium")
)

func (SkuTier) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuTier)(nil)).Elem()
}

func (e SkuTier) ToSkuTierOutput() SkuTierOutput {
	return pulumi.ToOutput(e).(SkuTierOutput)
}

func (e SkuTier) ToSkuTierOutputWithContext(ctx context.Context) SkuTierOutput {
	return pulumi.ToOutputWithContext(ctx, e).(SkuTierOutput)
}

func (e SkuTier) ToSkuTierPtrOutput() SkuTierPtrOutput {
	return e.ToSkuTierPtrOutputWithContext(context.Background())
}

func (e SkuTier) ToSkuTierPtrOutputWithContext(ctx context.Context) SkuTierPtrOutput {
	return SkuTier(e).ToSkuTierOutputWithContext(ctx).ToSkuTierPtrOutputWithContext(ctx)
}

func (e SkuTier) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e SkuTier) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e SkuTier) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e SkuTier) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type SkuTierOutput struct{ *pulumi.OutputState }

func (SkuTierOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuTier)(nil)).Elem()
}

func (o SkuTierOutput) ToSkuTierOutput() SkuTierOutput {
	return o
}

func (o SkuTierOutput) ToSkuTierOutputWithContext(ctx context.Context) SkuTierOutput {
	return o
}

func (o SkuTierOutput) ToSkuTierPtrOutput() SkuTierPtrOutput {
	return o.ToSkuTierPtrOutputWithContext(context.Background())
}

func (o SkuTierOutput) ToSkuTierPtrOutputWithContext(ctx context.Context) SkuTierPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SkuTier) *SkuTier {
		return &v
	}).(SkuTierPtrOutput)
}

func (o SkuTierOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o SkuTierOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SkuTier) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o SkuTierOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SkuTierOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SkuTier) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type SkuTierPtrOutput struct{ *pulumi.OutputState }

func (SkuTierPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SkuTier)(nil)).Elem()
}

func (o SkuTierPtrOutput) ToSkuTierPtrOutput() SkuTierPtrOutput {
	return o
}

func (o SkuTierPtrOutput) ToSkuTierPtrOutputWithContext(ctx context.Context) SkuTierPtrOutput {
	return o
}

func (o SkuTierPtrOutput) Elem() SkuTierOutput {
	return o.ApplyT(func(v *SkuTier) SkuTier {
		if v != nil {
			return *v
		}
		var ret SkuTier
		return ret
	}).(SkuTierOutput)
}

func (o SkuTierPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SkuTierPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *SkuTier) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// SkuTierInput is an input type that accepts values of the SkuTier enum
// A concrete instance of `SkuTierInput` can be one of the following:
//
//	SkuTierFree
//	SkuTierBasic
//	SkuTierStandard
//	SkuTierPremium
type SkuTierInput interface {
	pulumi.Input

	ToSkuTierOutput() SkuTierOutput
	ToSkuTierOutputWithContext(context.Context) SkuTierOutput
}

var skuTierPtrType = reflect.TypeOf((**SkuTier)(nil)).Elem()

type SkuTierPtrInput interface {
	pulumi.Input

	ToSkuTierPtrOutput() SkuTierPtrOutput
	ToSkuTierPtrOutputWithContext(context.Context) SkuTierPtrOutput
}

type skuTierPtr string

func SkuTierPtr(v string) SkuTierPtrInput {
	return (*skuTierPtr)(&v)
}

func (*skuTierPtr) ElementType() reflect.Type {
	return skuTierPtrType
}

func (in *skuTierPtr) ToSkuTierPtrOutput() SkuTierPtrOutput {
	return pulumi.ToOutput(in).(SkuTierPtrOutput)
}

func (in *skuTierPtr) ToSkuTierPtrOutputWithContext(ctx context.Context) SkuTierPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(SkuTierPtrOutput)
}

func (in *skuTierPtr) ToOutput(ctx context.Context) pulumix.Output[*SkuTier] {
	return pulumix.Output[*SkuTier]{
		OutputState: in.ToSkuTierPtrOutputWithContext(ctx).OutputState,
	}
}

// Application version
type WordpressVersions string

const (
	WordpressVersions_5_4_3 = WordpressVersions("5.4.3")
	WordpressVersions_5_4_2 = WordpressVersions("5.4.2")
	WordpressVersions_5_4_1 = WordpressVersions("5.4.1")
	WordpressVersions_5_4   = WordpressVersions("5.4")
)

func (WordpressVersions) ElementType() reflect.Type {
	return reflect.TypeOf((*WordpressVersions)(nil)).Elem()
}

func (e WordpressVersions) ToWordpressVersionsOutput() WordpressVersionsOutput {
	return pulumi.ToOutput(e).(WordpressVersionsOutput)
}

func (e WordpressVersions) ToWordpressVersionsOutputWithContext(ctx context.Context) WordpressVersionsOutput {
	return pulumi.ToOutputWithContext(ctx, e).(WordpressVersionsOutput)
}

func (e WordpressVersions) ToWordpressVersionsPtrOutput() WordpressVersionsPtrOutput {
	return e.ToWordpressVersionsPtrOutputWithContext(context.Background())
}

func (e WordpressVersions) ToWordpressVersionsPtrOutputWithContext(ctx context.Context) WordpressVersionsPtrOutput {
	return WordpressVersions(e).ToWordpressVersionsOutputWithContext(ctx).ToWordpressVersionsPtrOutputWithContext(ctx)
}

func (e WordpressVersions) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e WordpressVersions) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e WordpressVersions) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e WordpressVersions) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type WordpressVersionsOutput struct{ *pulumi.OutputState }

func (WordpressVersionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WordpressVersions)(nil)).Elem()
}

func (o WordpressVersionsOutput) ToWordpressVersionsOutput() WordpressVersionsOutput {
	return o
}

func (o WordpressVersionsOutput) ToWordpressVersionsOutputWithContext(ctx context.Context) WordpressVersionsOutput {
	return o
}

func (o WordpressVersionsOutput) ToWordpressVersionsPtrOutput() WordpressVersionsPtrOutput {
	return o.ToWordpressVersionsPtrOutputWithContext(context.Background())
}

func (o WordpressVersionsOutput) ToWordpressVersionsPtrOutputWithContext(ctx context.Context) WordpressVersionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WordpressVersions) *WordpressVersions {
		return &v
	}).(WordpressVersionsPtrOutput)
}

func (o WordpressVersionsOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o WordpressVersionsOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e WordpressVersions) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o WordpressVersionsOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o WordpressVersionsOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e WordpressVersions) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type WordpressVersionsPtrOutput struct{ *pulumi.OutputState }

func (WordpressVersionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WordpressVersions)(nil)).Elem()
}

func (o WordpressVersionsPtrOutput) ToWordpressVersionsPtrOutput() WordpressVersionsPtrOutput {
	return o
}

func (o WordpressVersionsPtrOutput) ToWordpressVersionsPtrOutputWithContext(ctx context.Context) WordpressVersionsPtrOutput {
	return o
}

func (o WordpressVersionsPtrOutput) Elem() WordpressVersionsOutput {
	return o.ApplyT(func(v *WordpressVersions) WordpressVersions {
		if v != nil {
			return *v
		}
		var ret WordpressVersions
		return ret
	}).(WordpressVersionsOutput)
}

func (o WordpressVersionsPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o WordpressVersionsPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *WordpressVersions) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// WordpressVersionsInput is an input type that accepts values of the WordpressVersions enum
// A concrete instance of `WordpressVersionsInput` can be one of the following:
//
//	WordpressVersions_5_4_3
//	WordpressVersions_5_4_2
//	WordpressVersions_5_4_1
//	WordpressVersions_5_4
type WordpressVersionsInput interface {
	pulumi.Input

	ToWordpressVersionsOutput() WordpressVersionsOutput
	ToWordpressVersionsOutputWithContext(context.Context) WordpressVersionsOutput
}

var wordpressVersionsPtrType = reflect.TypeOf((**WordpressVersions)(nil)).Elem()

type WordpressVersionsPtrInput interface {
	pulumi.Input

	ToWordpressVersionsPtrOutput() WordpressVersionsPtrOutput
	ToWordpressVersionsPtrOutputWithContext(context.Context) WordpressVersionsPtrOutput
}

type wordpressVersionsPtr string

func WordpressVersionsPtr(v string) WordpressVersionsPtrInput {
	return (*wordpressVersionsPtr)(&v)
}

func (*wordpressVersionsPtr) ElementType() reflect.Type {
	return wordpressVersionsPtrType
}

func (in *wordpressVersionsPtr) ToWordpressVersionsPtrOutput() WordpressVersionsPtrOutput {
	return pulumi.ToOutput(in).(WordpressVersionsPtrOutput)
}

func (in *wordpressVersionsPtr) ToWordpressVersionsPtrOutputWithContext(ctx context.Context) WordpressVersionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(WordpressVersionsPtrOutput)
}

func (in *wordpressVersionsPtr) ToOutput(ctx context.Context) pulumix.Output[*WordpressVersions] {
	return pulumix.Output[*WordpressVersions]{
		OutputState: in.ToWordpressVersionsPtrOutputWithContext(ctx).OutputState,
	}
}

// Indicates which kind of php workload this resource represent e.g WordPress
type WorkloadKind string

const (
	WorkloadKindWordPress = WorkloadKind("WordPress")
)

func (WorkloadKind) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadKind)(nil)).Elem()
}

func (e WorkloadKind) ToWorkloadKindOutput() WorkloadKindOutput {
	return pulumi.ToOutput(e).(WorkloadKindOutput)
}

func (e WorkloadKind) ToWorkloadKindOutputWithContext(ctx context.Context) WorkloadKindOutput {
	return pulumi.ToOutputWithContext(ctx, e).(WorkloadKindOutput)
}

func (e WorkloadKind) ToWorkloadKindPtrOutput() WorkloadKindPtrOutput {
	return e.ToWorkloadKindPtrOutputWithContext(context.Background())
}

func (e WorkloadKind) ToWorkloadKindPtrOutputWithContext(ctx context.Context) WorkloadKindPtrOutput {
	return WorkloadKind(e).ToWorkloadKindOutputWithContext(ctx).ToWorkloadKindPtrOutputWithContext(ctx)
}

func (e WorkloadKind) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e WorkloadKind) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e WorkloadKind) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e WorkloadKind) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type WorkloadKindOutput struct{ *pulumi.OutputState }

func (WorkloadKindOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadKind)(nil)).Elem()
}

func (o WorkloadKindOutput) ToWorkloadKindOutput() WorkloadKindOutput {
	return o
}

func (o WorkloadKindOutput) ToWorkloadKindOutputWithContext(ctx context.Context) WorkloadKindOutput {
	return o
}

func (o WorkloadKindOutput) ToWorkloadKindPtrOutput() WorkloadKindPtrOutput {
	return o.ToWorkloadKindPtrOutputWithContext(context.Background())
}

func (o WorkloadKindOutput) ToWorkloadKindPtrOutputWithContext(ctx context.Context) WorkloadKindPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkloadKind) *WorkloadKind {
		return &v
	}).(WorkloadKindPtrOutput)
}

func (o WorkloadKindOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o WorkloadKindOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e WorkloadKind) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o WorkloadKindOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o WorkloadKindOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e WorkloadKind) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type WorkloadKindPtrOutput struct{ *pulumi.OutputState }

func (WorkloadKindPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadKind)(nil)).Elem()
}

func (o WorkloadKindPtrOutput) ToWorkloadKindPtrOutput() WorkloadKindPtrOutput {
	return o
}

func (o WorkloadKindPtrOutput) ToWorkloadKindPtrOutputWithContext(ctx context.Context) WorkloadKindPtrOutput {
	return o
}

func (o WorkloadKindPtrOutput) Elem() WorkloadKindOutput {
	return o.ApplyT(func(v *WorkloadKind) WorkloadKind {
		if v != nil {
			return *v
		}
		var ret WorkloadKind
		return ret
	}).(WorkloadKindOutput)
}

func (o WorkloadKindPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o WorkloadKindPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *WorkloadKind) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// WorkloadKindInput is an input type that accepts values of the WorkloadKind enum
// A concrete instance of `WorkloadKindInput` can be one of the following:
//
//	WorkloadKindWordPress
type WorkloadKindInput interface {
	pulumi.Input

	ToWorkloadKindOutput() WorkloadKindOutput
	ToWorkloadKindOutputWithContext(context.Context) WorkloadKindOutput
}

var workloadKindPtrType = reflect.TypeOf((**WorkloadKind)(nil)).Elem()

type WorkloadKindPtrInput interface {
	pulumi.Input

	ToWorkloadKindPtrOutput() WorkloadKindPtrOutput
	ToWorkloadKindPtrOutputWithContext(context.Context) WorkloadKindPtrOutput
}

type workloadKindPtr string

func WorkloadKindPtr(v string) WorkloadKindPtrInput {
	return (*workloadKindPtr)(&v)
}

func (*workloadKindPtr) ElementType() reflect.Type {
	return workloadKindPtrType
}

func (in *workloadKindPtr) ToWorkloadKindPtrOutput() WorkloadKindPtrOutput {
	return pulumi.ToOutput(in).(WorkloadKindPtrOutput)
}

func (in *workloadKindPtr) ToWorkloadKindPtrOutputWithContext(ctx context.Context) WorkloadKindPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(WorkloadKindPtrOutput)
}

func (in *workloadKindPtr) ToOutput(ctx context.Context) pulumix.Output[*WorkloadKind] {
	return pulumix.Output[*WorkloadKind]{
		OutputState: in.ToWorkloadKindPtrOutputWithContext(ctx).OutputState,
	}
}

func init() {
	pulumi.RegisterOutputType(AzureFrontDoorEnabledOutput{})
	pulumi.RegisterOutputType(AzureFrontDoorEnabledPtrOutput{})
	pulumi.RegisterOutputType(DatabaseTierOutput{})
	pulumi.RegisterOutputType(DatabaseTierPtrOutput{})
	pulumi.RegisterOutputType(DatabaseTypeOutput{})
	pulumi.RegisterOutputType(DatabaseTypePtrOutput{})
	pulumi.RegisterOutputType(DiskStorageTypeOutput{})
	pulumi.RegisterOutputType(DiskStorageTypePtrOutput{})
	pulumi.RegisterOutputType(EnableBackupOutput{})
	pulumi.RegisterOutputType(EnableBackupPtrOutput{})
	pulumi.RegisterOutputType(EnableSslEnforcementOutput{})
	pulumi.RegisterOutputType(EnableSslEnforcementPtrOutput{})
	pulumi.RegisterOutputType(FileShareStorageTypeOutput{})
	pulumi.RegisterOutputType(FileShareStorageTypePtrOutput{})
	pulumi.RegisterOutputType(FileShareTypeOutput{})
	pulumi.RegisterOutputType(FileShareTypePtrOutput{})
	pulumi.RegisterOutputType(HAEnabledOutput{})
	pulumi.RegisterOutputType(HAEnabledPtrOutput{})
	pulumi.RegisterOutputType(LoadBalancerTypeOutput{})
	pulumi.RegisterOutputType(LoadBalancerTypePtrOutput{})
	pulumi.RegisterOutputType(ManagedServiceIdentityTypeOutput{})
	pulumi.RegisterOutputType(ManagedServiceIdentityTypePtrOutput{})
	pulumi.RegisterOutputType(OSImageOfferOutput{})
	pulumi.RegisterOutputType(OSImageOfferPtrOutput{})
	pulumi.RegisterOutputType(OSImagePublisherOutput{})
	pulumi.RegisterOutputType(OSImagePublisherPtrOutput{})
	pulumi.RegisterOutputType(OSImageSkuOutput{})
	pulumi.RegisterOutputType(OSImageSkuPtrOutput{})
	pulumi.RegisterOutputType(OSImageVersionOutput{})
	pulumi.RegisterOutputType(OSImageVersionPtrOutput{})
	pulumi.RegisterOutputType(PHPVersionOutput{})
	pulumi.RegisterOutputType(PHPVersionPtrOutput{})
	pulumi.RegisterOutputType(RedisCacheFamilyOutput{})
	pulumi.RegisterOutputType(RedisCacheFamilyPtrOutput{})
	pulumi.RegisterOutputType(SAPDatabaseScaleMethodOutput{})
	pulumi.RegisterOutputType(SAPDatabaseScaleMethodPtrOutput{})
	pulumi.RegisterOutputType(SAPDatabaseTypeOutput{})
	pulumi.RegisterOutputType(SAPDatabaseTypePtrOutput{})
	pulumi.RegisterOutputType(SAPDeploymentTypeOutput{})
	pulumi.RegisterOutputType(SAPDeploymentTypePtrOutput{})
	pulumi.RegisterOutputType(SAPEnvironmentTypeOutput{})
	pulumi.RegisterOutputType(SAPEnvironmentTypePtrOutput{})
	pulumi.RegisterOutputType(SAPHighAvailabilityTypeOutput{})
	pulumi.RegisterOutputType(SAPHighAvailabilityTypePtrOutput{})
	pulumi.RegisterOutputType(SAPProductTypeOutput{})
	pulumi.RegisterOutputType(SAPProductTypePtrOutput{})
	pulumi.RegisterOutputType(SearchTypeOutput{})
	pulumi.RegisterOutputType(SearchTypePtrOutput{})
	pulumi.RegisterOutputType(SkuTierOutput{})
	pulumi.RegisterOutputType(SkuTierPtrOutput{})
	pulumi.RegisterOutputType(WordpressVersionsOutput{})
	pulumi.RegisterOutputType(WordpressVersionsPtrOutput{})
	pulumi.RegisterOutputType(WorkloadKindOutput{})
	pulumi.RegisterOutputType(WorkloadKindPtrOutput{})
}
