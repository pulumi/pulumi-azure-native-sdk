// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20240201preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The value that indicates whether the alert should be automatically resolved or not. The default is Disable.
type AlertAutoMitigate string

const (
	// The alert should be automatically resolved.
	AlertAutoMitigateEnable = AlertAutoMitigate("Enable")
	// The alert should not be automatically resolved.
	AlertAutoMitigateDisable = AlertAutoMitigate("Disable")
)

func (AlertAutoMitigate) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertAutoMitigate)(nil)).Elem()
}

func (e AlertAutoMitigate) ToAlertAutoMitigateOutput() AlertAutoMitigateOutput {
	return pulumi.ToOutput(e).(AlertAutoMitigateOutput)
}

func (e AlertAutoMitigate) ToAlertAutoMitigateOutputWithContext(ctx context.Context) AlertAutoMitigateOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AlertAutoMitigateOutput)
}

func (e AlertAutoMitigate) ToAlertAutoMitigatePtrOutput() AlertAutoMitigatePtrOutput {
	return e.ToAlertAutoMitigatePtrOutputWithContext(context.Background())
}

func (e AlertAutoMitigate) ToAlertAutoMitigatePtrOutputWithContext(ctx context.Context) AlertAutoMitigatePtrOutput {
	return AlertAutoMitigate(e).ToAlertAutoMitigateOutputWithContext(ctx).ToAlertAutoMitigatePtrOutputWithContext(ctx)
}

func (e AlertAutoMitigate) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AlertAutoMitigate) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AlertAutoMitigate) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AlertAutoMitigate) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AlertAutoMitigateOutput struct{ *pulumi.OutputState }

func (AlertAutoMitigateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertAutoMitigate)(nil)).Elem()
}

func (o AlertAutoMitigateOutput) ToAlertAutoMitigateOutput() AlertAutoMitigateOutput {
	return o
}

func (o AlertAutoMitigateOutput) ToAlertAutoMitigateOutputWithContext(ctx context.Context) AlertAutoMitigateOutput {
	return o
}

func (o AlertAutoMitigateOutput) ToAlertAutoMitigatePtrOutput() AlertAutoMitigatePtrOutput {
	return o.ToAlertAutoMitigatePtrOutputWithContext(context.Background())
}

func (o AlertAutoMitigateOutput) ToAlertAutoMitigatePtrOutputWithContext(ctx context.Context) AlertAutoMitigatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AlertAutoMitigate) *AlertAutoMitigate {
		return &v
	}).(AlertAutoMitigatePtrOutput)
}

func (o AlertAutoMitigateOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AlertAutoMitigateOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AlertAutoMitigate) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AlertAutoMitigateOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AlertAutoMitigateOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AlertAutoMitigate) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AlertAutoMitigatePtrOutput struct{ *pulumi.OutputState }

func (AlertAutoMitigatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AlertAutoMitigate)(nil)).Elem()
}

func (o AlertAutoMitigatePtrOutput) ToAlertAutoMitigatePtrOutput() AlertAutoMitigatePtrOutput {
	return o
}

func (o AlertAutoMitigatePtrOutput) ToAlertAutoMitigatePtrOutputWithContext(ctx context.Context) AlertAutoMitigatePtrOutput {
	return o
}

func (o AlertAutoMitigatePtrOutput) Elem() AlertAutoMitigateOutput {
	return o.ApplyT(func(v *AlertAutoMitigate) AlertAutoMitigate {
		if v != nil {
			return *v
		}
		var ret AlertAutoMitigate
		return ret
	}).(AlertAutoMitigateOutput)
}

func (o AlertAutoMitigatePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AlertAutoMitigatePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AlertAutoMitigate) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AlertAutoMitigateInput is an input type that accepts values of the AlertAutoMitigate enum
// A concrete instance of `AlertAutoMitigateInput` can be one of the following:
//
//	AlertAutoMitigateEnable
//	AlertAutoMitigateDisable
type AlertAutoMitigateInput interface {
	pulumi.Input

	ToAlertAutoMitigateOutput() AlertAutoMitigateOutput
	ToAlertAutoMitigateOutputWithContext(context.Context) AlertAutoMitigateOutput
}

var alertAutoMitigatePtrType = reflect.TypeOf((**AlertAutoMitigate)(nil)).Elem()

type AlertAutoMitigatePtrInput interface {
	pulumi.Input

	ToAlertAutoMitigatePtrOutput() AlertAutoMitigatePtrOutput
	ToAlertAutoMitigatePtrOutputWithContext(context.Context) AlertAutoMitigatePtrOutput
}

type alertAutoMitigatePtr string

func AlertAutoMitigatePtr(v string) AlertAutoMitigatePtrInput {
	return (*alertAutoMitigatePtr)(&v)
}

func (*alertAutoMitigatePtr) ElementType() reflect.Type {
	return alertAutoMitigatePtrType
}

func (in *alertAutoMitigatePtr) ToAlertAutoMitigatePtrOutput() AlertAutoMitigatePtrOutput {
	return pulumi.ToOutput(in).(AlertAutoMitigatePtrOutput)
}

func (in *alertAutoMitigatePtr) ToAlertAutoMitigatePtrOutputWithContext(ctx context.Context) AlertAutoMitigatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AlertAutoMitigatePtrOutput)
}

// Indicates whether the alert is in an enabled state.
type AlertRuleStatus string

const (
	// The scheduled query rule is enabled
	AlertRuleStatusEnabled = AlertRuleStatus("Enabled")
	// The scheduled query rule is disabled
	AlertRuleStatusDisabled = AlertRuleStatus("Disabled")
)

func (AlertRuleStatus) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertRuleStatus)(nil)).Elem()
}

func (e AlertRuleStatus) ToAlertRuleStatusOutput() AlertRuleStatusOutput {
	return pulumi.ToOutput(e).(AlertRuleStatusOutput)
}

func (e AlertRuleStatus) ToAlertRuleStatusOutputWithContext(ctx context.Context) AlertRuleStatusOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AlertRuleStatusOutput)
}

func (e AlertRuleStatus) ToAlertRuleStatusPtrOutput() AlertRuleStatusPtrOutput {
	return e.ToAlertRuleStatusPtrOutputWithContext(context.Background())
}

func (e AlertRuleStatus) ToAlertRuleStatusPtrOutputWithContext(ctx context.Context) AlertRuleStatusPtrOutput {
	return AlertRuleStatus(e).ToAlertRuleStatusOutputWithContext(ctx).ToAlertRuleStatusPtrOutputWithContext(ctx)
}

func (e AlertRuleStatus) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AlertRuleStatus) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AlertRuleStatus) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AlertRuleStatus) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AlertRuleStatusOutput struct{ *pulumi.OutputState }

func (AlertRuleStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertRuleStatus)(nil)).Elem()
}

func (o AlertRuleStatusOutput) ToAlertRuleStatusOutput() AlertRuleStatusOutput {
	return o
}

func (o AlertRuleStatusOutput) ToAlertRuleStatusOutputWithContext(ctx context.Context) AlertRuleStatusOutput {
	return o
}

func (o AlertRuleStatusOutput) ToAlertRuleStatusPtrOutput() AlertRuleStatusPtrOutput {
	return o.ToAlertRuleStatusPtrOutputWithContext(context.Background())
}

func (o AlertRuleStatusOutput) ToAlertRuleStatusPtrOutputWithContext(ctx context.Context) AlertRuleStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AlertRuleStatus) *AlertRuleStatus {
		return &v
	}).(AlertRuleStatusPtrOutput)
}

func (o AlertRuleStatusOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AlertRuleStatusOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AlertRuleStatus) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AlertRuleStatusOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AlertRuleStatusOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AlertRuleStatus) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AlertRuleStatusPtrOutput struct{ *pulumi.OutputState }

func (AlertRuleStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AlertRuleStatus)(nil)).Elem()
}

func (o AlertRuleStatusPtrOutput) ToAlertRuleStatusPtrOutput() AlertRuleStatusPtrOutput {
	return o
}

func (o AlertRuleStatusPtrOutput) ToAlertRuleStatusPtrOutputWithContext(ctx context.Context) AlertRuleStatusPtrOutput {
	return o
}

func (o AlertRuleStatusPtrOutput) Elem() AlertRuleStatusOutput {
	return o.ApplyT(func(v *AlertRuleStatus) AlertRuleStatus {
		if v != nil {
			return *v
		}
		var ret AlertRuleStatus
		return ret
	}).(AlertRuleStatusOutput)
}

func (o AlertRuleStatusPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AlertRuleStatusPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AlertRuleStatus) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AlertRuleStatusInput is an input type that accepts values of the AlertRuleStatus enum
// A concrete instance of `AlertRuleStatusInput` can be one of the following:
//
//	AlertRuleStatusEnabled
//	AlertRuleStatusDisabled
type AlertRuleStatusInput interface {
	pulumi.Input

	ToAlertRuleStatusOutput() AlertRuleStatusOutput
	ToAlertRuleStatusOutputWithContext(context.Context) AlertRuleStatusOutput
}

var alertRuleStatusPtrType = reflect.TypeOf((**AlertRuleStatus)(nil)).Elem()

type AlertRuleStatusPtrInput interface {
	pulumi.Input

	ToAlertRuleStatusPtrOutput() AlertRuleStatusPtrOutput
	ToAlertRuleStatusPtrOutputWithContext(context.Context) AlertRuleStatusPtrOutput
}

type alertRuleStatusPtr string

func AlertRuleStatusPtr(v string) AlertRuleStatusPtrInput {
	return (*alertRuleStatusPtr)(&v)
}

func (*alertRuleStatusPtr) ElementType() reflect.Type {
	return alertRuleStatusPtrType
}

func (in *alertRuleStatusPtr) ToAlertRuleStatusPtrOutput() AlertRuleStatusPtrOutput {
	return pulumi.ToOutput(in).(AlertRuleStatusPtrOutput)
}

func (in *alertRuleStatusPtr) ToAlertRuleStatusPtrOutputWithContext(ctx context.Context) AlertRuleStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AlertRuleStatusPtrOutput)
}

// The App Service plan tier.
type AppServicePlanTier string

const (
	// Elastic Premium plan
	AppServicePlanTierElasticPremium = AppServicePlanTier("ElasticPremium")
	// Dedicated Premium V3 plan
	AppServicePlanTierPremiumV3 = AppServicePlanTier("PremiumV3")
)

func (AppServicePlanTier) ElementType() reflect.Type {
	return reflect.TypeOf((*AppServicePlanTier)(nil)).Elem()
}

func (e AppServicePlanTier) ToAppServicePlanTierOutput() AppServicePlanTierOutput {
	return pulumi.ToOutput(e).(AppServicePlanTierOutput)
}

func (e AppServicePlanTier) ToAppServicePlanTierOutputWithContext(ctx context.Context) AppServicePlanTierOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AppServicePlanTierOutput)
}

func (e AppServicePlanTier) ToAppServicePlanTierPtrOutput() AppServicePlanTierPtrOutput {
	return e.ToAppServicePlanTierPtrOutputWithContext(context.Background())
}

func (e AppServicePlanTier) ToAppServicePlanTierPtrOutputWithContext(ctx context.Context) AppServicePlanTierPtrOutput {
	return AppServicePlanTier(e).ToAppServicePlanTierOutputWithContext(ctx).ToAppServicePlanTierPtrOutputWithContext(ctx)
}

func (e AppServicePlanTier) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AppServicePlanTier) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AppServicePlanTier) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AppServicePlanTier) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AppServicePlanTierOutput struct{ *pulumi.OutputState }

func (AppServicePlanTierOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppServicePlanTier)(nil)).Elem()
}

func (o AppServicePlanTierOutput) ToAppServicePlanTierOutput() AppServicePlanTierOutput {
	return o
}

func (o AppServicePlanTierOutput) ToAppServicePlanTierOutputWithContext(ctx context.Context) AppServicePlanTierOutput {
	return o
}

func (o AppServicePlanTierOutput) ToAppServicePlanTierPtrOutput() AppServicePlanTierPtrOutput {
	return o.ToAppServicePlanTierPtrOutputWithContext(context.Background())
}

func (o AppServicePlanTierOutput) ToAppServicePlanTierPtrOutputWithContext(ctx context.Context) AppServicePlanTierPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AppServicePlanTier) *AppServicePlanTier {
		return &v
	}).(AppServicePlanTierPtrOutput)
}

func (o AppServicePlanTierOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AppServicePlanTierOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AppServicePlanTier) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AppServicePlanTierOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AppServicePlanTierOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AppServicePlanTier) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AppServicePlanTierPtrOutput struct{ *pulumi.OutputState }

func (AppServicePlanTierPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppServicePlanTier)(nil)).Elem()
}

func (o AppServicePlanTierPtrOutput) ToAppServicePlanTierPtrOutput() AppServicePlanTierPtrOutput {
	return o
}

func (o AppServicePlanTierPtrOutput) ToAppServicePlanTierPtrOutputWithContext(ctx context.Context) AppServicePlanTierPtrOutput {
	return o
}

func (o AppServicePlanTierPtrOutput) Elem() AppServicePlanTierOutput {
	return o.ApplyT(func(v *AppServicePlanTier) AppServicePlanTier {
		if v != nil {
			return *v
		}
		var ret AppServicePlanTier
		return ret
	}).(AppServicePlanTierOutput)
}

func (o AppServicePlanTierPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AppServicePlanTierPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AppServicePlanTier) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AppServicePlanTierInput is an input type that accepts values of the AppServicePlanTier enum
// A concrete instance of `AppServicePlanTierInput` can be one of the following:
//
//	AppServicePlanTierElasticPremium
//	AppServicePlanTierPremiumV3
type AppServicePlanTierInput interface {
	pulumi.Input

	ToAppServicePlanTierOutput() AppServicePlanTierOutput
	ToAppServicePlanTierOutputWithContext(context.Context) AppServicePlanTierOutput
}

var appServicePlanTierPtrType = reflect.TypeOf((**AppServicePlanTier)(nil)).Elem()

type AppServicePlanTierPtrInput interface {
	pulumi.Input

	ToAppServicePlanTierPtrOutput() AppServicePlanTierPtrOutput
	ToAppServicePlanTierPtrOutputWithContext(context.Context) AppServicePlanTierPtrOutput
}

type appServicePlanTierPtr string

func AppServicePlanTierPtr(v string) AppServicePlanTierPtrInput {
	return (*appServicePlanTierPtr)(&v)
}

func (*appServicePlanTierPtr) ElementType() reflect.Type {
	return appServicePlanTierPtrType
}

func (in *appServicePlanTierPtr) ToAppServicePlanTierPtrOutput() AppServicePlanTierPtrOutput {
	return pulumi.ToOutput(in).(AppServicePlanTierPtrOutput)
}

func (in *appServicePlanTierPtr) ToAppServicePlanTierPtrOutputWithContext(ctx context.Context) AppServicePlanTierPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AppServicePlanTierPtrOutput)
}

// The threshold operator of the alert.
type ConditionalOperator string

const (
	// The value is less than the specified value.
	ConditionalOperatorLessThan = ConditionalOperator("LessThan")
	// The value is greater than the specified value.
	ConditionalOperatorGreaterThan = ConditionalOperator("GreaterThan")
	// The value is equal to the specified value.
	ConditionalOperatorEqual = ConditionalOperator("Equal")
	// The value is greater than or equal to the specified value.
	ConditionalOperatorGreaterThanOrEqual = ConditionalOperator("GreaterThanOrEqual")
	// The value is less than or equal to the specified value.
	ConditionalOperatorLessThanOrEqual = ConditionalOperator("LessThanOrEqual")
)

func (ConditionalOperator) ElementType() reflect.Type {
	return reflect.TypeOf((*ConditionalOperator)(nil)).Elem()
}

func (e ConditionalOperator) ToConditionalOperatorOutput() ConditionalOperatorOutput {
	return pulumi.ToOutput(e).(ConditionalOperatorOutput)
}

func (e ConditionalOperator) ToConditionalOperatorOutputWithContext(ctx context.Context) ConditionalOperatorOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ConditionalOperatorOutput)
}

func (e ConditionalOperator) ToConditionalOperatorPtrOutput() ConditionalOperatorPtrOutput {
	return e.ToConditionalOperatorPtrOutputWithContext(context.Background())
}

func (e ConditionalOperator) ToConditionalOperatorPtrOutputWithContext(ctx context.Context) ConditionalOperatorPtrOutput {
	return ConditionalOperator(e).ToConditionalOperatorOutputWithContext(ctx).ToConditionalOperatorPtrOutputWithContext(ctx)
}

func (e ConditionalOperator) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ConditionalOperator) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ConditionalOperator) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ConditionalOperator) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ConditionalOperatorOutput struct{ *pulumi.OutputState }

func (ConditionalOperatorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConditionalOperator)(nil)).Elem()
}

func (o ConditionalOperatorOutput) ToConditionalOperatorOutput() ConditionalOperatorOutput {
	return o
}

func (o ConditionalOperatorOutput) ToConditionalOperatorOutputWithContext(ctx context.Context) ConditionalOperatorOutput {
	return o
}

func (o ConditionalOperatorOutput) ToConditionalOperatorPtrOutput() ConditionalOperatorPtrOutput {
	return o.ToConditionalOperatorPtrOutputWithContext(context.Background())
}

func (o ConditionalOperatorOutput) ToConditionalOperatorPtrOutputWithContext(ctx context.Context) ConditionalOperatorPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConditionalOperator) *ConditionalOperator {
		return &v
	}).(ConditionalOperatorPtrOutput)
}

func (o ConditionalOperatorOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ConditionalOperatorOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ConditionalOperator) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ConditionalOperatorOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ConditionalOperatorOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ConditionalOperator) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ConditionalOperatorPtrOutput struct{ *pulumi.OutputState }

func (ConditionalOperatorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConditionalOperator)(nil)).Elem()
}

func (o ConditionalOperatorPtrOutput) ToConditionalOperatorPtrOutput() ConditionalOperatorPtrOutput {
	return o
}

func (o ConditionalOperatorPtrOutput) ToConditionalOperatorPtrOutputWithContext(ctx context.Context) ConditionalOperatorPtrOutput {
	return o
}

func (o ConditionalOperatorPtrOutput) Elem() ConditionalOperatorOutput {
	return o.ApplyT(func(v *ConditionalOperator) ConditionalOperator {
		if v != nil {
			return *v
		}
		var ret ConditionalOperator
		return ret
	}).(ConditionalOperatorOutput)
}

func (o ConditionalOperatorPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ConditionalOperatorPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ConditionalOperator) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ConditionalOperatorInput is an input type that accepts values of the ConditionalOperator enum
// A concrete instance of `ConditionalOperatorInput` can be one of the following:
//
//	ConditionalOperatorLessThan
//	ConditionalOperatorGreaterThan
//	ConditionalOperatorEqual
//	ConditionalOperatorGreaterThanOrEqual
//	ConditionalOperatorLessThanOrEqual
type ConditionalOperatorInput interface {
	pulumi.Input

	ToConditionalOperatorOutput() ConditionalOperatorOutput
	ToConditionalOperatorOutputWithContext(context.Context) ConditionalOperatorOutput
}

var conditionalOperatorPtrType = reflect.TypeOf((**ConditionalOperator)(nil)).Elem()

type ConditionalOperatorPtrInput interface {
	pulumi.Input

	ToConditionalOperatorPtrOutput() ConditionalOperatorPtrOutput
	ToConditionalOperatorPtrOutputWithContext(context.Context) ConditionalOperatorPtrOutput
}

type conditionalOperatorPtr string

func ConditionalOperatorPtr(v string) ConditionalOperatorPtrInput {
	return (*conditionalOperatorPtr)(&v)
}

func (*conditionalOperatorPtr) ElementType() reflect.Type {
	return conditionalOperatorPtrType
}

func (in *conditionalOperatorPtr) ToConditionalOperatorPtrOutput() ConditionalOperatorPtrOutput {
	return pulumi.ToOutput(in).(ConditionalOperatorPtrOutput)
}

func (in *conditionalOperatorPtr) ToConditionalOperatorPtrOutputWithContext(ctx context.Context) ConditionalOperatorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ConditionalOperatorPtrOutput)
}

// Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
type ManagedServiceIdentityType string

const (
	ManagedServiceIdentityTypeNone                         = ManagedServiceIdentityType("None")
	ManagedServiceIdentityTypeSystemAssigned               = ManagedServiceIdentityType("SystemAssigned")
	ManagedServiceIdentityTypeUserAssigned                 = ManagedServiceIdentityType("UserAssigned")
	ManagedServiceIdentityType_SystemAssigned_UserAssigned = ManagedServiceIdentityType("SystemAssigned,UserAssigned")
)

func (ManagedServiceIdentityType) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedServiceIdentityType)(nil)).Elem()
}

func (e ManagedServiceIdentityType) ToManagedServiceIdentityTypeOutput() ManagedServiceIdentityTypeOutput {
	return pulumi.ToOutput(e).(ManagedServiceIdentityTypeOutput)
}

func (e ManagedServiceIdentityType) ToManagedServiceIdentityTypeOutputWithContext(ctx context.Context) ManagedServiceIdentityTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ManagedServiceIdentityTypeOutput)
}

func (e ManagedServiceIdentityType) ToManagedServiceIdentityTypePtrOutput() ManagedServiceIdentityTypePtrOutput {
	return e.ToManagedServiceIdentityTypePtrOutputWithContext(context.Background())
}

func (e ManagedServiceIdentityType) ToManagedServiceIdentityTypePtrOutputWithContext(ctx context.Context) ManagedServiceIdentityTypePtrOutput {
	return ManagedServiceIdentityType(e).ToManagedServiceIdentityTypeOutputWithContext(ctx).ToManagedServiceIdentityTypePtrOutputWithContext(ctx)
}

func (e ManagedServiceIdentityType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ManagedServiceIdentityType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ManagedServiceIdentityType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ManagedServiceIdentityType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ManagedServiceIdentityTypeOutput struct{ *pulumi.OutputState }

func (ManagedServiceIdentityTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedServiceIdentityType)(nil)).Elem()
}

func (o ManagedServiceIdentityTypeOutput) ToManagedServiceIdentityTypeOutput() ManagedServiceIdentityTypeOutput {
	return o
}

func (o ManagedServiceIdentityTypeOutput) ToManagedServiceIdentityTypeOutputWithContext(ctx context.Context) ManagedServiceIdentityTypeOutput {
	return o
}

func (o ManagedServiceIdentityTypeOutput) ToManagedServiceIdentityTypePtrOutput() ManagedServiceIdentityTypePtrOutput {
	return o.ToManagedServiceIdentityTypePtrOutputWithContext(context.Background())
}

func (o ManagedServiceIdentityTypeOutput) ToManagedServiceIdentityTypePtrOutputWithContext(ctx context.Context) ManagedServiceIdentityTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ManagedServiceIdentityType) *ManagedServiceIdentityType {
		return &v
	}).(ManagedServiceIdentityTypePtrOutput)
}

func (o ManagedServiceIdentityTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ManagedServiceIdentityTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ManagedServiceIdentityType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ManagedServiceIdentityTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ManagedServiceIdentityTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ManagedServiceIdentityType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ManagedServiceIdentityTypePtrOutput struct{ *pulumi.OutputState }

func (ManagedServiceIdentityTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedServiceIdentityType)(nil)).Elem()
}

func (o ManagedServiceIdentityTypePtrOutput) ToManagedServiceIdentityTypePtrOutput() ManagedServiceIdentityTypePtrOutput {
	return o
}

func (o ManagedServiceIdentityTypePtrOutput) ToManagedServiceIdentityTypePtrOutputWithContext(ctx context.Context) ManagedServiceIdentityTypePtrOutput {
	return o
}

func (o ManagedServiceIdentityTypePtrOutput) Elem() ManagedServiceIdentityTypeOutput {
	return o.ApplyT(func(v *ManagedServiceIdentityType) ManagedServiceIdentityType {
		if v != nil {
			return *v
		}
		var ret ManagedServiceIdentityType
		return ret
	}).(ManagedServiceIdentityTypeOutput)
}

func (o ManagedServiceIdentityTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ManagedServiceIdentityTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ManagedServiceIdentityType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ManagedServiceIdentityTypeInput is an input type that accepts values of the ManagedServiceIdentityType enum
// A concrete instance of `ManagedServiceIdentityTypeInput` can be one of the following:
//
//	ManagedServiceIdentityTypeNone
//	ManagedServiceIdentityTypeSystemAssigned
//	ManagedServiceIdentityTypeUserAssigned
//	ManagedServiceIdentityType_SystemAssigned_UserAssigned
type ManagedServiceIdentityTypeInput interface {
	pulumi.Input

	ToManagedServiceIdentityTypeOutput() ManagedServiceIdentityTypeOutput
	ToManagedServiceIdentityTypeOutputWithContext(context.Context) ManagedServiceIdentityTypeOutput
}

var managedServiceIdentityTypePtrType = reflect.TypeOf((**ManagedServiceIdentityType)(nil)).Elem()

type ManagedServiceIdentityTypePtrInput interface {
	pulumi.Input

	ToManagedServiceIdentityTypePtrOutput() ManagedServiceIdentityTypePtrOutput
	ToManagedServiceIdentityTypePtrOutputWithContext(context.Context) ManagedServiceIdentityTypePtrOutput
}

type managedServiceIdentityTypePtr string

func ManagedServiceIdentityTypePtr(v string) ManagedServiceIdentityTypePtrInput {
	return (*managedServiceIdentityTypePtr)(&v)
}

func (*managedServiceIdentityTypePtr) ElementType() reflect.Type {
	return managedServiceIdentityTypePtrType
}

func (in *managedServiceIdentityTypePtr) ToManagedServiceIdentityTypePtrOutput() ManagedServiceIdentityTypePtrOutput {
	return pulumi.ToOutput(in).(ManagedServiceIdentityTypePtrOutput)
}

func (in *managedServiceIdentityTypePtr) ToManagedServiceIdentityTypePtrOutputWithContext(ctx context.Context) ManagedServiceIdentityTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ManagedServiceIdentityTypePtrOutput)
}

// Sets the routing preference of the SAP monitor. By default only RFC1918 traffic is routed to the customer VNET.
type RoutingPreference string

const (
	// Default routing preference. Only RFC1918 traffic is routed to the customer VNET.
	RoutingPreferenceDefault = RoutingPreference("Default")
	// Route all traffic to the customer VNET.
	RoutingPreferenceRouteAll = RoutingPreference("RouteAll")
)

func (RoutingPreference) ElementType() reflect.Type {
	return reflect.TypeOf((*RoutingPreference)(nil)).Elem()
}

func (e RoutingPreference) ToRoutingPreferenceOutput() RoutingPreferenceOutput {
	return pulumi.ToOutput(e).(RoutingPreferenceOutput)
}

func (e RoutingPreference) ToRoutingPreferenceOutputWithContext(ctx context.Context) RoutingPreferenceOutput {
	return pulumi.ToOutputWithContext(ctx, e).(RoutingPreferenceOutput)
}

func (e RoutingPreference) ToRoutingPreferencePtrOutput() RoutingPreferencePtrOutput {
	return e.ToRoutingPreferencePtrOutputWithContext(context.Background())
}

func (e RoutingPreference) ToRoutingPreferencePtrOutputWithContext(ctx context.Context) RoutingPreferencePtrOutput {
	return RoutingPreference(e).ToRoutingPreferenceOutputWithContext(ctx).ToRoutingPreferencePtrOutputWithContext(ctx)
}

func (e RoutingPreference) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e RoutingPreference) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e RoutingPreference) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e RoutingPreference) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type RoutingPreferenceOutput struct{ *pulumi.OutputState }

func (RoutingPreferenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RoutingPreference)(nil)).Elem()
}

func (o RoutingPreferenceOutput) ToRoutingPreferenceOutput() RoutingPreferenceOutput {
	return o
}

func (o RoutingPreferenceOutput) ToRoutingPreferenceOutputWithContext(ctx context.Context) RoutingPreferenceOutput {
	return o
}

func (o RoutingPreferenceOutput) ToRoutingPreferencePtrOutput() RoutingPreferencePtrOutput {
	return o.ToRoutingPreferencePtrOutputWithContext(context.Background())
}

func (o RoutingPreferenceOutput) ToRoutingPreferencePtrOutputWithContext(ctx context.Context) RoutingPreferencePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RoutingPreference) *RoutingPreference {
		return &v
	}).(RoutingPreferencePtrOutput)
}

func (o RoutingPreferenceOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o RoutingPreferenceOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RoutingPreference) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o RoutingPreferenceOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RoutingPreferenceOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RoutingPreference) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type RoutingPreferencePtrOutput struct{ *pulumi.OutputState }

func (RoutingPreferencePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RoutingPreference)(nil)).Elem()
}

func (o RoutingPreferencePtrOutput) ToRoutingPreferencePtrOutput() RoutingPreferencePtrOutput {
	return o
}

func (o RoutingPreferencePtrOutput) ToRoutingPreferencePtrOutputWithContext(ctx context.Context) RoutingPreferencePtrOutput {
	return o
}

func (o RoutingPreferencePtrOutput) Elem() RoutingPreferenceOutput {
	return o.ApplyT(func(v *RoutingPreference) RoutingPreference {
		if v != nil {
			return *v
		}
		var ret RoutingPreference
		return ret
	}).(RoutingPreferenceOutput)
}

func (o RoutingPreferencePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RoutingPreferencePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *RoutingPreference) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// RoutingPreferenceInput is an input type that accepts values of the RoutingPreference enum
// A concrete instance of `RoutingPreferenceInput` can be one of the following:
//
//	RoutingPreferenceDefault
//	RoutingPreferenceRouteAll
type RoutingPreferenceInput interface {
	pulumi.Input

	ToRoutingPreferenceOutput() RoutingPreferenceOutput
	ToRoutingPreferenceOutputWithContext(context.Context) RoutingPreferenceOutput
}

var routingPreferencePtrType = reflect.TypeOf((**RoutingPreference)(nil)).Elem()

type RoutingPreferencePtrInput interface {
	pulumi.Input

	ToRoutingPreferencePtrOutput() RoutingPreferencePtrOutput
	ToRoutingPreferencePtrOutputWithContext(context.Context) RoutingPreferencePtrOutput
}

type routingPreferencePtr string

func RoutingPreferencePtr(v string) RoutingPreferencePtrInput {
	return (*routingPreferencePtr)(&v)
}

func (*routingPreferencePtr) ElementType() reflect.Type {
	return routingPreferencePtrType
}

func (in *routingPreferencePtr) ToRoutingPreferencePtrOutput() RoutingPreferencePtrOutput {
	return pulumi.ToOutput(in).(RoutingPreferencePtrOutput)
}

func (in *routingPreferencePtr) ToRoutingPreferencePtrOutputWithContext(ctx context.Context) RoutingPreferencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(RoutingPreferencePtrOutput)
}

// Gets or sets certificate preference if secure communication is enabled.
type SslPreference string

const (
	// Secure communication is disabled.
	SslPreferenceDisabled = SslPreference("Disabled")
	// Secure communication is enabled with root certificate.
	SslPreferenceRootCertificate = SslPreference("RootCertificate")
	// Secure communication is enabled with server certificate.
	SslPreferenceServerCertificate = SslPreference("ServerCertificate")
)

func (SslPreference) ElementType() reflect.Type {
	return reflect.TypeOf((*SslPreference)(nil)).Elem()
}

func (e SslPreference) ToSslPreferenceOutput() SslPreferenceOutput {
	return pulumi.ToOutput(e).(SslPreferenceOutput)
}

func (e SslPreference) ToSslPreferenceOutputWithContext(ctx context.Context) SslPreferenceOutput {
	return pulumi.ToOutputWithContext(ctx, e).(SslPreferenceOutput)
}

func (e SslPreference) ToSslPreferencePtrOutput() SslPreferencePtrOutput {
	return e.ToSslPreferencePtrOutputWithContext(context.Background())
}

func (e SslPreference) ToSslPreferencePtrOutputWithContext(ctx context.Context) SslPreferencePtrOutput {
	return SslPreference(e).ToSslPreferenceOutputWithContext(ctx).ToSslPreferencePtrOutputWithContext(ctx)
}

func (e SslPreference) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e SslPreference) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e SslPreference) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e SslPreference) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type SslPreferenceOutput struct{ *pulumi.OutputState }

func (SslPreferenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SslPreference)(nil)).Elem()
}

func (o SslPreferenceOutput) ToSslPreferenceOutput() SslPreferenceOutput {
	return o
}

func (o SslPreferenceOutput) ToSslPreferenceOutputWithContext(ctx context.Context) SslPreferenceOutput {
	return o
}

func (o SslPreferenceOutput) ToSslPreferencePtrOutput() SslPreferencePtrOutput {
	return o.ToSslPreferencePtrOutputWithContext(context.Background())
}

func (o SslPreferenceOutput) ToSslPreferencePtrOutputWithContext(ctx context.Context) SslPreferencePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SslPreference) *SslPreference {
		return &v
	}).(SslPreferencePtrOutput)
}

func (o SslPreferenceOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o SslPreferenceOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SslPreference) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o SslPreferenceOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SslPreferenceOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SslPreference) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type SslPreferencePtrOutput struct{ *pulumi.OutputState }

func (SslPreferencePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SslPreference)(nil)).Elem()
}

func (o SslPreferencePtrOutput) ToSslPreferencePtrOutput() SslPreferencePtrOutput {
	return o
}

func (o SslPreferencePtrOutput) ToSslPreferencePtrOutputWithContext(ctx context.Context) SslPreferencePtrOutput {
	return o
}

func (o SslPreferencePtrOutput) Elem() SslPreferenceOutput {
	return o.ApplyT(func(v *SslPreference) SslPreference {
		if v != nil {
			return *v
		}
		var ret SslPreference
		return ret
	}).(SslPreferenceOutput)
}

func (o SslPreferencePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SslPreferencePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *SslPreference) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// SslPreferenceInput is an input type that accepts values of the SslPreference enum
// A concrete instance of `SslPreferenceInput` can be one of the following:
//
//	SslPreferenceDisabled
//	SslPreferenceRootCertificate
//	SslPreferenceServerCertificate
type SslPreferenceInput interface {
	pulumi.Input

	ToSslPreferenceOutput() SslPreferenceOutput
	ToSslPreferenceOutputWithContext(context.Context) SslPreferenceOutput
}

var sslPreferencePtrType = reflect.TypeOf((**SslPreference)(nil)).Elem()

type SslPreferencePtrInput interface {
	pulumi.Input

	ToSslPreferencePtrOutput() SslPreferencePtrOutput
	ToSslPreferencePtrOutputWithContext(context.Context) SslPreferencePtrOutput
}

type sslPreferencePtr string

func SslPreferencePtr(v string) SslPreferencePtrInput {
	return (*sslPreferencePtr)(&v)
}

func (*sslPreferencePtr) ElementType() reflect.Type {
	return sslPreferencePtrType
}

func (in *sslPreferencePtr) ToSslPreferencePtrOutput() SslPreferencePtrOutput {
	return pulumi.ToOutput(in).(SslPreferencePtrOutput)
}

func (in *sslPreferencePtr) ToSslPreferencePtrOutputWithContext(ctx context.Context) SslPreferencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(SslPreferencePtrOutput)
}

func init() {
	pulumi.RegisterOutputType(AlertAutoMitigateOutput{})
	pulumi.RegisterOutputType(AlertAutoMitigatePtrOutput{})
	pulumi.RegisterOutputType(AlertRuleStatusOutput{})
	pulumi.RegisterOutputType(AlertRuleStatusPtrOutput{})
	pulumi.RegisterOutputType(AppServicePlanTierOutput{})
	pulumi.RegisterOutputType(AppServicePlanTierPtrOutput{})
	pulumi.RegisterOutputType(ConditionalOperatorOutput{})
	pulumi.RegisterOutputType(ConditionalOperatorPtrOutput{})
	pulumi.RegisterOutputType(ManagedServiceIdentityTypeOutput{})
	pulumi.RegisterOutputType(ManagedServiceIdentityTypePtrOutput{})
	pulumi.RegisterOutputType(RoutingPreferenceOutput{})
	pulumi.RegisterOutputType(RoutingPreferencePtrOutput{})
	pulumi.RegisterOutputType(SslPreferenceOutput{})
	pulumi.RegisterOutputType(SslPreferencePtrOutput{})
}
