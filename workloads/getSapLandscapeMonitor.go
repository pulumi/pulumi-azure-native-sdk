// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package workloads

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Gets configuration values for Single Pane Of Glass for SAP monitor for the specified subscription, resource group, and resource name.
// Azure REST API version: 2023-04-01.
func LookupSapLandscapeMonitor(ctx *pulumi.Context, args *LookupSapLandscapeMonitorArgs, opts ...pulumi.InvokeOption) (*LookupSapLandscapeMonitorResult, error) {
	var rv LookupSapLandscapeMonitorResult
	err := ctx.Invoke("azure-native:workloads:getSapLandscapeMonitor", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupSapLandscapeMonitorArgs struct {
	// Name of the SAP monitor resource.
	MonitorName string `pulumi:"monitorName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// configuration associated with SAP Landscape Monitor Dashboard.
type LookupSapLandscapeMonitorResult struct {
	// Gets or sets the SID groupings by landscape and Environment.
	Grouping *SapLandscapeMonitorPropertiesResponseGrouping `pulumi:"grouping"`
	// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	Id string `pulumi:"id"`
	// The name of the resource
	Name string `pulumi:"name"`
	// State of provisioning of the SAP monitor.
	ProvisioningState string `pulumi:"provisioningState"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponse `pulumi:"systemData"`
	// Gets or sets the list Top Metric Thresholds for SAP Landscape Monitor Dashboard
	TopMetricsThresholds []SapLandscapeMonitorMetricThresholdsResponse `pulumi:"topMetricsThresholds"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type string `pulumi:"type"`
}

func LookupSapLandscapeMonitorOutput(ctx *pulumi.Context, args LookupSapLandscapeMonitorOutputArgs, opts ...pulumi.InvokeOption) LookupSapLandscapeMonitorResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupSapLandscapeMonitorResult, error) {
			args := v.(LookupSapLandscapeMonitorArgs)
			r, err := LookupSapLandscapeMonitor(ctx, &args, opts...)
			var s LookupSapLandscapeMonitorResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupSapLandscapeMonitorResultOutput)
}

type LookupSapLandscapeMonitorOutputArgs struct {
	// Name of the SAP monitor resource.
	MonitorName pulumi.StringInput `pulumi:"monitorName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
}

func (LookupSapLandscapeMonitorOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSapLandscapeMonitorArgs)(nil)).Elem()
}

// configuration associated with SAP Landscape Monitor Dashboard.
type LookupSapLandscapeMonitorResultOutput struct{ *pulumi.OutputState }

func (LookupSapLandscapeMonitorResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSapLandscapeMonitorResult)(nil)).Elem()
}

func (o LookupSapLandscapeMonitorResultOutput) ToLookupSapLandscapeMonitorResultOutput() LookupSapLandscapeMonitorResultOutput {
	return o
}

func (o LookupSapLandscapeMonitorResultOutput) ToLookupSapLandscapeMonitorResultOutputWithContext(ctx context.Context) LookupSapLandscapeMonitorResultOutput {
	return o
}

// Gets or sets the SID groupings by landscape and Environment.
func (o LookupSapLandscapeMonitorResultOutput) Grouping() SapLandscapeMonitorPropertiesResponseGroupingPtrOutput {
	return o.ApplyT(func(v LookupSapLandscapeMonitorResult) *SapLandscapeMonitorPropertiesResponseGrouping {
		return v.Grouping
	}).(SapLandscapeMonitorPropertiesResponseGroupingPtrOutput)
}

// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
func (o LookupSapLandscapeMonitorResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSapLandscapeMonitorResult) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the resource
func (o LookupSapLandscapeMonitorResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSapLandscapeMonitorResult) string { return v.Name }).(pulumi.StringOutput)
}

// State of provisioning of the SAP monitor.
func (o LookupSapLandscapeMonitorResultOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSapLandscapeMonitorResult) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o LookupSapLandscapeMonitorResultOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v LookupSapLandscapeMonitorResult) SystemDataResponse { return v.SystemData }).(SystemDataResponseOutput)
}

// Gets or sets the list Top Metric Thresholds for SAP Landscape Monitor Dashboard
func (o LookupSapLandscapeMonitorResultOutput) TopMetricsThresholds() SapLandscapeMonitorMetricThresholdsResponseArrayOutput {
	return o.ApplyT(func(v LookupSapLandscapeMonitorResult) []SapLandscapeMonitorMetricThresholdsResponse {
		return v.TopMetricsThresholds
	}).(SapLandscapeMonitorMetricThresholdsResponseArrayOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o LookupSapLandscapeMonitorResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSapLandscapeMonitorResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupSapLandscapeMonitorResultOutput{})
}
