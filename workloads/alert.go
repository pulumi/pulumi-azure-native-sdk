// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package workloads

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// A alert associated with SAP monitor.
//
// Uses Azure REST API version 2024-02-01-preview. In version 2.x of the Azure Native provider, it used API version 2024-02-01-preview.
type Alert struct {
	pulumi.CustomResourceState

	// Describes the properties of an alert.
	AlertRuleProperties AlertRulePropertiesResponsePtrOutput `pulumi:"alertRuleProperties"`
	// ID of the alert rule resource created.
	AlertRuleResourceId pulumi.StringOutput `pulumi:"alertRuleResourceId"`
	// The Azure API version of the resource.
	AzureApiVersion pulumi.StringOutput `pulumi:"azureApiVersion"`
	// Defines the alert instance errors.
	Errors ErrorDetailResponseOutput `pulumi:"errors"`
	// The name of the resource
	Name pulumi.StringOutput `pulumi:"name"`
	// Name of provider instances associated with the alert.
	ProviderNames pulumi.StringArrayOutput `pulumi:"providerNames"`
	// The provider type for alert. For example, the value can be SapHana.
	ProviderType pulumi.StringPtrOutput `pulumi:"providerType"`
	// State of provisioning of the alert instance
	ProvisioningState pulumi.StringOutput `pulumi:"provisioningState"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponseOutput `pulumi:"systemData"`
	// Name of the alert template from which it was created.
	TemplateName pulumi.StringPtrOutput `pulumi:"templateName"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewAlert registers a new resource with the given unique name, arguments, and options.
func NewAlert(ctx *pulumi.Context,
	name string, args *AlertArgs, opts ...pulumi.ResourceOption) (*Alert, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.MonitorName == nil {
		return nil, errors.New("invalid value for required argument 'MonitorName'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:workloads/v20240201preview:Alert"),
		},
	})
	opts = append(opts, aliases)
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource Alert
	err := ctx.RegisterResource("azure-native:workloads:Alert", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAlert gets an existing Alert resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAlert(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AlertState, opts ...pulumi.ResourceOption) (*Alert, error) {
	var resource Alert
	err := ctx.ReadResource("azure-native:workloads:Alert", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Alert resources.
type alertState struct {
}

type AlertState struct {
}

func (AlertState) ElementType() reflect.Type {
	return reflect.TypeOf((*alertState)(nil)).Elem()
}

type alertArgs struct {
	// Name of the SAP monitor alert resource.
	AlertName *string `pulumi:"alertName"`
	// Describes the properties of an alert.
	AlertRuleProperties *AlertRuleProperties `pulumi:"alertRuleProperties"`
	// Name of the SAP monitor resource.
	MonitorName string `pulumi:"monitorName"`
	// Name of provider instances associated with the alert.
	ProviderNames []string `pulumi:"providerNames"`
	// The provider type for alert. For example, the value can be SapHana.
	ProviderType *string `pulumi:"providerType"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Name of the alert template from which it was created.
	TemplateName *string `pulumi:"templateName"`
}

// The set of arguments for constructing a Alert resource.
type AlertArgs struct {
	// Name of the SAP monitor alert resource.
	AlertName pulumi.StringPtrInput
	// Describes the properties of an alert.
	AlertRuleProperties AlertRulePropertiesPtrInput
	// Name of the SAP monitor resource.
	MonitorName pulumi.StringInput
	// Name of provider instances associated with the alert.
	ProviderNames pulumi.StringArrayInput
	// The provider type for alert. For example, the value can be SapHana.
	ProviderType pulumi.StringPtrInput
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput
	// Name of the alert template from which it was created.
	TemplateName pulumi.StringPtrInput
}

func (AlertArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*alertArgs)(nil)).Elem()
}

type AlertInput interface {
	pulumi.Input

	ToAlertOutput() AlertOutput
	ToAlertOutputWithContext(ctx context.Context) AlertOutput
}

func (*Alert) ElementType() reflect.Type {
	return reflect.TypeOf((**Alert)(nil)).Elem()
}

func (i *Alert) ToAlertOutput() AlertOutput {
	return i.ToAlertOutputWithContext(context.Background())
}

func (i *Alert) ToAlertOutputWithContext(ctx context.Context) AlertOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertOutput)
}

type AlertOutput struct{ *pulumi.OutputState }

func (AlertOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Alert)(nil)).Elem()
}

func (o AlertOutput) ToAlertOutput() AlertOutput {
	return o
}

func (o AlertOutput) ToAlertOutputWithContext(ctx context.Context) AlertOutput {
	return o
}

// Describes the properties of an alert.
func (o AlertOutput) AlertRuleProperties() AlertRulePropertiesResponsePtrOutput {
	return o.ApplyT(func(v *Alert) AlertRulePropertiesResponsePtrOutput { return v.AlertRuleProperties }).(AlertRulePropertiesResponsePtrOutput)
}

// ID of the alert rule resource created.
func (o AlertOutput) AlertRuleResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v *Alert) pulumi.StringOutput { return v.AlertRuleResourceId }).(pulumi.StringOutput)
}

// The Azure API version of the resource.
func (o AlertOutput) AzureApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *Alert) pulumi.StringOutput { return v.AzureApiVersion }).(pulumi.StringOutput)
}

// Defines the alert instance errors.
func (o AlertOutput) Errors() ErrorDetailResponseOutput {
	return o.ApplyT(func(v *Alert) ErrorDetailResponseOutput { return v.Errors }).(ErrorDetailResponseOutput)
}

// The name of the resource
func (o AlertOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Alert) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Name of provider instances associated with the alert.
func (o AlertOutput) ProviderNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Alert) pulumi.StringArrayOutput { return v.ProviderNames }).(pulumi.StringArrayOutput)
}

// The provider type for alert. For example, the value can be SapHana.
func (o AlertOutput) ProviderType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Alert) pulumi.StringPtrOutput { return v.ProviderType }).(pulumi.StringPtrOutput)
}

// State of provisioning of the alert instance
func (o AlertOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v *Alert) pulumi.StringOutput { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o AlertOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v *Alert) SystemDataResponseOutput { return v.SystemData }).(SystemDataResponseOutput)
}

// Name of the alert template from which it was created.
func (o AlertOutput) TemplateName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Alert) pulumi.StringPtrOutput { return v.TemplateName }).(pulumi.StringPtrOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o AlertOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *Alert) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(AlertOutput{})
}
