// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package edge

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure-native-sdk/v3/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Site as ARM Resource
//
// Uses Azure REST API version 2025-03-01-preview.
type SitesByServiceGroup struct {
	pulumi.CustomResourceState

	// The Azure API version of the resource.
	AzureApiVersion pulumi.StringOutput `pulumi:"azureApiVersion"`
	// The name of the resource
	Name pulumi.StringOutput `pulumi:"name"`
	// The resource-specific properties for this resource.
	Properties SitePropertiesResponseOutput `pulumi:"properties"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponseOutput `pulumi:"systemData"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewSitesByServiceGroup registers a new resource with the given unique name, arguments, and options.
func NewSitesByServiceGroup(ctx *pulumi.Context,
	name string, args *SitesByServiceGroupArgs, opts ...pulumi.ResourceOption) (*SitesByServiceGroup, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ServicegroupName == nil {
		return nil, errors.New("invalid value for required argument 'ServicegroupName'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:edge/v20250301preview:SitesByServiceGroup"),
		},
	})
	opts = append(opts, aliases)
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource SitesByServiceGroup
	err := ctx.RegisterResource("azure-native:edge:SitesByServiceGroup", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSitesByServiceGroup gets an existing SitesByServiceGroup resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSitesByServiceGroup(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SitesByServiceGroupState, opts ...pulumi.ResourceOption) (*SitesByServiceGroup, error) {
	var resource SitesByServiceGroup
	err := ctx.ReadResource("azure-native:edge:SitesByServiceGroup", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SitesByServiceGroup resources.
type sitesByServiceGroupState struct {
}

type SitesByServiceGroupState struct {
}

func (SitesByServiceGroupState) ElementType() reflect.Type {
	return reflect.TypeOf((*sitesByServiceGroupState)(nil)).Elem()
}

type sitesByServiceGroupArgs struct {
	// The resource-specific properties for this resource.
	Properties *SiteProperties `pulumi:"properties"`
	// The name of the service group
	ServicegroupName string `pulumi:"servicegroupName"`
	// The name of the site
	SiteName *string `pulumi:"siteName"`
}

// The set of arguments for constructing a SitesByServiceGroup resource.
type SitesByServiceGroupArgs struct {
	// The resource-specific properties for this resource.
	Properties SitePropertiesPtrInput
	// The name of the service group
	ServicegroupName pulumi.StringInput
	// The name of the site
	SiteName pulumi.StringPtrInput
}

func (SitesByServiceGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*sitesByServiceGroupArgs)(nil)).Elem()
}

type SitesByServiceGroupInput interface {
	pulumi.Input

	ToSitesByServiceGroupOutput() SitesByServiceGroupOutput
	ToSitesByServiceGroupOutputWithContext(ctx context.Context) SitesByServiceGroupOutput
}

func (*SitesByServiceGroup) ElementType() reflect.Type {
	return reflect.TypeOf((**SitesByServiceGroup)(nil)).Elem()
}

func (i *SitesByServiceGroup) ToSitesByServiceGroupOutput() SitesByServiceGroupOutput {
	return i.ToSitesByServiceGroupOutputWithContext(context.Background())
}

func (i *SitesByServiceGroup) ToSitesByServiceGroupOutputWithContext(ctx context.Context) SitesByServiceGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SitesByServiceGroupOutput)
}

type SitesByServiceGroupOutput struct{ *pulumi.OutputState }

func (SitesByServiceGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SitesByServiceGroup)(nil)).Elem()
}

func (o SitesByServiceGroupOutput) ToSitesByServiceGroupOutput() SitesByServiceGroupOutput {
	return o
}

func (o SitesByServiceGroupOutput) ToSitesByServiceGroupOutputWithContext(ctx context.Context) SitesByServiceGroupOutput {
	return o
}

// The Azure API version of the resource.
func (o SitesByServiceGroupOutput) AzureApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *SitesByServiceGroup) pulumi.StringOutput { return v.AzureApiVersion }).(pulumi.StringOutput)
}

// The name of the resource
func (o SitesByServiceGroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *SitesByServiceGroup) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The resource-specific properties for this resource.
func (o SitesByServiceGroupOutput) Properties() SitePropertiesResponseOutput {
	return o.ApplyT(func(v *SitesByServiceGroup) SitePropertiesResponseOutput { return v.Properties }).(SitePropertiesResponseOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o SitesByServiceGroupOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v *SitesByServiceGroup) SystemDataResponseOutput { return v.SystemData }).(SystemDataResponseOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o SitesByServiceGroupOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *SitesByServiceGroup) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(SitesByServiceGroupOutput{})
}
