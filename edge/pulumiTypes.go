// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package edge

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v3/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = utilities.GetEnvOrDefault

// Available Solution template Version along with latest revision
type AvailableSolutionTemplateVersionResponse struct {
	// Has this solution template version been configured
	IsConfigured bool `pulumi:"isConfigured"`
	// Latest Configuration Revision
	LatestConfigRevision string `pulumi:"latestConfigRevision"`
	// Solution template Version
	SolutionTemplateVersion string `pulumi:"solutionTemplateVersion"`
}

// Available Solution template Version along with latest revision
type AvailableSolutionTemplateVersionResponseOutput struct{ *pulumi.OutputState }

func (AvailableSolutionTemplateVersionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AvailableSolutionTemplateVersionResponse)(nil)).Elem()
}

func (o AvailableSolutionTemplateVersionResponseOutput) ToAvailableSolutionTemplateVersionResponseOutput() AvailableSolutionTemplateVersionResponseOutput {
	return o
}

func (o AvailableSolutionTemplateVersionResponseOutput) ToAvailableSolutionTemplateVersionResponseOutputWithContext(ctx context.Context) AvailableSolutionTemplateVersionResponseOutput {
	return o
}

// Has this solution template version been configured
func (o AvailableSolutionTemplateVersionResponseOutput) IsConfigured() pulumi.BoolOutput {
	return o.ApplyT(func(v AvailableSolutionTemplateVersionResponse) bool { return v.IsConfigured }).(pulumi.BoolOutput)
}

// Latest Configuration Revision
func (o AvailableSolutionTemplateVersionResponseOutput) LatestConfigRevision() pulumi.StringOutput {
	return o.ApplyT(func(v AvailableSolutionTemplateVersionResponse) string { return v.LatestConfigRevision }).(pulumi.StringOutput)
}

// Solution template Version
func (o AvailableSolutionTemplateVersionResponseOutput) SolutionTemplateVersion() pulumi.StringOutput {
	return o.ApplyT(func(v AvailableSolutionTemplateVersionResponse) string { return v.SolutionTemplateVersion }).(pulumi.StringOutput)
}

type AvailableSolutionTemplateVersionResponseArrayOutput struct{ *pulumi.OutputState }

func (AvailableSolutionTemplateVersionResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AvailableSolutionTemplateVersionResponse)(nil)).Elem()
}

func (o AvailableSolutionTemplateVersionResponseArrayOutput) ToAvailableSolutionTemplateVersionResponseArrayOutput() AvailableSolutionTemplateVersionResponseArrayOutput {
	return o
}

func (o AvailableSolutionTemplateVersionResponseArrayOutput) ToAvailableSolutionTemplateVersionResponseArrayOutputWithContext(ctx context.Context) AvailableSolutionTemplateVersionResponseArrayOutput {
	return o
}

func (o AvailableSolutionTemplateVersionResponseArrayOutput) Index(i pulumi.IntInput) AvailableSolutionTemplateVersionResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AvailableSolutionTemplateVersionResponse {
		return vs[0].([]AvailableSolutionTemplateVersionResponse)[vs[1].(int)]
	}).(AvailableSolutionTemplateVersionResponseOutput)
}

// The complex type of the extended location.
type AzureResourceManagerCommonTypesExtendedLocation struct {
	// The name of the extended location.
	Name string `pulumi:"name"`
	// The type of the extended location.
	Type string `pulumi:"type"`
}

// AzureResourceManagerCommonTypesExtendedLocationInput is an input type that accepts AzureResourceManagerCommonTypesExtendedLocationArgs and AzureResourceManagerCommonTypesExtendedLocationOutput values.
// You can construct a concrete instance of `AzureResourceManagerCommonTypesExtendedLocationInput` via:
//
//	AzureResourceManagerCommonTypesExtendedLocationArgs{...}
type AzureResourceManagerCommonTypesExtendedLocationInput interface {
	pulumi.Input

	ToAzureResourceManagerCommonTypesExtendedLocationOutput() AzureResourceManagerCommonTypesExtendedLocationOutput
	ToAzureResourceManagerCommonTypesExtendedLocationOutputWithContext(context.Context) AzureResourceManagerCommonTypesExtendedLocationOutput
}

// The complex type of the extended location.
type AzureResourceManagerCommonTypesExtendedLocationArgs struct {
	// The name of the extended location.
	Name pulumi.StringInput `pulumi:"name"`
	// The type of the extended location.
	Type pulumi.StringInput `pulumi:"type"`
}

func (AzureResourceManagerCommonTypesExtendedLocationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureResourceManagerCommonTypesExtendedLocation)(nil)).Elem()
}

func (i AzureResourceManagerCommonTypesExtendedLocationArgs) ToAzureResourceManagerCommonTypesExtendedLocationOutput() AzureResourceManagerCommonTypesExtendedLocationOutput {
	return i.ToAzureResourceManagerCommonTypesExtendedLocationOutputWithContext(context.Background())
}

func (i AzureResourceManagerCommonTypesExtendedLocationArgs) ToAzureResourceManagerCommonTypesExtendedLocationOutputWithContext(ctx context.Context) AzureResourceManagerCommonTypesExtendedLocationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureResourceManagerCommonTypesExtendedLocationOutput)
}

func (i AzureResourceManagerCommonTypesExtendedLocationArgs) ToAzureResourceManagerCommonTypesExtendedLocationPtrOutput() AzureResourceManagerCommonTypesExtendedLocationPtrOutput {
	return i.ToAzureResourceManagerCommonTypesExtendedLocationPtrOutputWithContext(context.Background())
}

func (i AzureResourceManagerCommonTypesExtendedLocationArgs) ToAzureResourceManagerCommonTypesExtendedLocationPtrOutputWithContext(ctx context.Context) AzureResourceManagerCommonTypesExtendedLocationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureResourceManagerCommonTypesExtendedLocationOutput).ToAzureResourceManagerCommonTypesExtendedLocationPtrOutputWithContext(ctx)
}

// AzureResourceManagerCommonTypesExtendedLocationPtrInput is an input type that accepts AzureResourceManagerCommonTypesExtendedLocationArgs, AzureResourceManagerCommonTypesExtendedLocationPtr and AzureResourceManagerCommonTypesExtendedLocationPtrOutput values.
// You can construct a concrete instance of `AzureResourceManagerCommonTypesExtendedLocationPtrInput` via:
//
//	        AzureResourceManagerCommonTypesExtendedLocationArgs{...}
//
//	or:
//
//	        nil
type AzureResourceManagerCommonTypesExtendedLocationPtrInput interface {
	pulumi.Input

	ToAzureResourceManagerCommonTypesExtendedLocationPtrOutput() AzureResourceManagerCommonTypesExtendedLocationPtrOutput
	ToAzureResourceManagerCommonTypesExtendedLocationPtrOutputWithContext(context.Context) AzureResourceManagerCommonTypesExtendedLocationPtrOutput
}

type azureResourceManagerCommonTypesExtendedLocationPtrType AzureResourceManagerCommonTypesExtendedLocationArgs

func AzureResourceManagerCommonTypesExtendedLocationPtr(v *AzureResourceManagerCommonTypesExtendedLocationArgs) AzureResourceManagerCommonTypesExtendedLocationPtrInput {
	return (*azureResourceManagerCommonTypesExtendedLocationPtrType)(v)
}

func (*azureResourceManagerCommonTypesExtendedLocationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureResourceManagerCommonTypesExtendedLocation)(nil)).Elem()
}

func (i *azureResourceManagerCommonTypesExtendedLocationPtrType) ToAzureResourceManagerCommonTypesExtendedLocationPtrOutput() AzureResourceManagerCommonTypesExtendedLocationPtrOutput {
	return i.ToAzureResourceManagerCommonTypesExtendedLocationPtrOutputWithContext(context.Background())
}

func (i *azureResourceManagerCommonTypesExtendedLocationPtrType) ToAzureResourceManagerCommonTypesExtendedLocationPtrOutputWithContext(ctx context.Context) AzureResourceManagerCommonTypesExtendedLocationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureResourceManagerCommonTypesExtendedLocationPtrOutput)
}

// The complex type of the extended location.
type AzureResourceManagerCommonTypesExtendedLocationOutput struct{ *pulumi.OutputState }

func (AzureResourceManagerCommonTypesExtendedLocationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureResourceManagerCommonTypesExtendedLocation)(nil)).Elem()
}

func (o AzureResourceManagerCommonTypesExtendedLocationOutput) ToAzureResourceManagerCommonTypesExtendedLocationOutput() AzureResourceManagerCommonTypesExtendedLocationOutput {
	return o
}

func (o AzureResourceManagerCommonTypesExtendedLocationOutput) ToAzureResourceManagerCommonTypesExtendedLocationOutputWithContext(ctx context.Context) AzureResourceManagerCommonTypesExtendedLocationOutput {
	return o
}

func (o AzureResourceManagerCommonTypesExtendedLocationOutput) ToAzureResourceManagerCommonTypesExtendedLocationPtrOutput() AzureResourceManagerCommonTypesExtendedLocationPtrOutput {
	return o.ToAzureResourceManagerCommonTypesExtendedLocationPtrOutputWithContext(context.Background())
}

func (o AzureResourceManagerCommonTypesExtendedLocationOutput) ToAzureResourceManagerCommonTypesExtendedLocationPtrOutputWithContext(ctx context.Context) AzureResourceManagerCommonTypesExtendedLocationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AzureResourceManagerCommonTypesExtendedLocation) *AzureResourceManagerCommonTypesExtendedLocation {
		return &v
	}).(AzureResourceManagerCommonTypesExtendedLocationPtrOutput)
}

// The name of the extended location.
func (o AzureResourceManagerCommonTypesExtendedLocationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v AzureResourceManagerCommonTypesExtendedLocation) string { return v.Name }).(pulumi.StringOutput)
}

// The type of the extended location.
func (o AzureResourceManagerCommonTypesExtendedLocationOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v AzureResourceManagerCommonTypesExtendedLocation) string { return v.Type }).(pulumi.StringOutput)
}

type AzureResourceManagerCommonTypesExtendedLocationPtrOutput struct{ *pulumi.OutputState }

func (AzureResourceManagerCommonTypesExtendedLocationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureResourceManagerCommonTypesExtendedLocation)(nil)).Elem()
}

func (o AzureResourceManagerCommonTypesExtendedLocationPtrOutput) ToAzureResourceManagerCommonTypesExtendedLocationPtrOutput() AzureResourceManagerCommonTypesExtendedLocationPtrOutput {
	return o
}

func (o AzureResourceManagerCommonTypesExtendedLocationPtrOutput) ToAzureResourceManagerCommonTypesExtendedLocationPtrOutputWithContext(ctx context.Context) AzureResourceManagerCommonTypesExtendedLocationPtrOutput {
	return o
}

func (o AzureResourceManagerCommonTypesExtendedLocationPtrOutput) Elem() AzureResourceManagerCommonTypesExtendedLocationOutput {
	return o.ApplyT(func(v *AzureResourceManagerCommonTypesExtendedLocation) AzureResourceManagerCommonTypesExtendedLocation {
		if v != nil {
			return *v
		}
		var ret AzureResourceManagerCommonTypesExtendedLocation
		return ret
	}).(AzureResourceManagerCommonTypesExtendedLocationOutput)
}

// The name of the extended location.
func (o AzureResourceManagerCommonTypesExtendedLocationPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureResourceManagerCommonTypesExtendedLocation) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The type of the extended location.
func (o AzureResourceManagerCommonTypesExtendedLocationPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureResourceManagerCommonTypesExtendedLocation) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// The complex type of the extended location.
type AzureResourceManagerCommonTypesExtendedLocationResponse struct {
	// The name of the extended location.
	Name string `pulumi:"name"`
	// The type of the extended location.
	Type string `pulumi:"type"`
}

// The complex type of the extended location.
type AzureResourceManagerCommonTypesExtendedLocationResponseOutput struct{ *pulumi.OutputState }

func (AzureResourceManagerCommonTypesExtendedLocationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureResourceManagerCommonTypesExtendedLocationResponse)(nil)).Elem()
}

func (o AzureResourceManagerCommonTypesExtendedLocationResponseOutput) ToAzureResourceManagerCommonTypesExtendedLocationResponseOutput() AzureResourceManagerCommonTypesExtendedLocationResponseOutput {
	return o
}

func (o AzureResourceManagerCommonTypesExtendedLocationResponseOutput) ToAzureResourceManagerCommonTypesExtendedLocationResponseOutputWithContext(ctx context.Context) AzureResourceManagerCommonTypesExtendedLocationResponseOutput {
	return o
}

// The name of the extended location.
func (o AzureResourceManagerCommonTypesExtendedLocationResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v AzureResourceManagerCommonTypesExtendedLocationResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The type of the extended location.
func (o AzureResourceManagerCommonTypesExtendedLocationResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v AzureResourceManagerCommonTypesExtendedLocationResponse) string { return v.Type }).(pulumi.StringOutput)
}

type AzureResourceManagerCommonTypesExtendedLocationResponsePtrOutput struct{ *pulumi.OutputState }

func (AzureResourceManagerCommonTypesExtendedLocationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureResourceManagerCommonTypesExtendedLocationResponse)(nil)).Elem()
}

func (o AzureResourceManagerCommonTypesExtendedLocationResponsePtrOutput) ToAzureResourceManagerCommonTypesExtendedLocationResponsePtrOutput() AzureResourceManagerCommonTypesExtendedLocationResponsePtrOutput {
	return o
}

func (o AzureResourceManagerCommonTypesExtendedLocationResponsePtrOutput) ToAzureResourceManagerCommonTypesExtendedLocationResponsePtrOutputWithContext(ctx context.Context) AzureResourceManagerCommonTypesExtendedLocationResponsePtrOutput {
	return o
}

func (o AzureResourceManagerCommonTypesExtendedLocationResponsePtrOutput) Elem() AzureResourceManagerCommonTypesExtendedLocationResponseOutput {
	return o.ApplyT(func(v *AzureResourceManagerCommonTypesExtendedLocationResponse) AzureResourceManagerCommonTypesExtendedLocationResponse {
		if v != nil {
			return *v
		}
		var ret AzureResourceManagerCommonTypesExtendedLocationResponse
		return ret
	}).(AzureResourceManagerCommonTypesExtendedLocationResponseOutput)
}

// The name of the extended location.
func (o AzureResourceManagerCommonTypesExtendedLocationResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureResourceManagerCommonTypesExtendedLocationResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The type of the extended location.
func (o AzureResourceManagerCommonTypesExtendedLocationResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureResourceManagerCommonTypesExtendedLocationResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// Capability, to match in Solution Templates and Targets
type Capability struct {
	// Description of Capability
	Description string `pulumi:"description"`
	// Name of Capability
	Name string `pulumi:"name"`
	// State of resource
	State *string `pulumi:"state"`
}

// CapabilityInput is an input type that accepts CapabilityArgs and CapabilityOutput values.
// You can construct a concrete instance of `CapabilityInput` via:
//
//	CapabilityArgs{...}
type CapabilityInput interface {
	pulumi.Input

	ToCapabilityOutput() CapabilityOutput
	ToCapabilityOutputWithContext(context.Context) CapabilityOutput
}

// Capability, to match in Solution Templates and Targets
type CapabilityArgs struct {
	// Description of Capability
	Description pulumi.StringInput `pulumi:"description"`
	// Name of Capability
	Name pulumi.StringInput `pulumi:"name"`
	// State of resource
	State pulumi.StringPtrInput `pulumi:"state"`
}

func (CapabilityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Capability)(nil)).Elem()
}

func (i CapabilityArgs) ToCapabilityOutput() CapabilityOutput {
	return i.ToCapabilityOutputWithContext(context.Background())
}

func (i CapabilityArgs) ToCapabilityOutputWithContext(ctx context.Context) CapabilityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CapabilityOutput)
}

// CapabilityArrayInput is an input type that accepts CapabilityArray and CapabilityArrayOutput values.
// You can construct a concrete instance of `CapabilityArrayInput` via:
//
//	CapabilityArray{ CapabilityArgs{...} }
type CapabilityArrayInput interface {
	pulumi.Input

	ToCapabilityArrayOutput() CapabilityArrayOutput
	ToCapabilityArrayOutputWithContext(context.Context) CapabilityArrayOutput
}

type CapabilityArray []CapabilityInput

func (CapabilityArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Capability)(nil)).Elem()
}

func (i CapabilityArray) ToCapabilityArrayOutput() CapabilityArrayOutput {
	return i.ToCapabilityArrayOutputWithContext(context.Background())
}

func (i CapabilityArray) ToCapabilityArrayOutputWithContext(ctx context.Context) CapabilityArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CapabilityArrayOutput)
}

// Capability, to match in Solution Templates and Targets
type CapabilityOutput struct{ *pulumi.OutputState }

func (CapabilityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Capability)(nil)).Elem()
}

func (o CapabilityOutput) ToCapabilityOutput() CapabilityOutput {
	return o
}

func (o CapabilityOutput) ToCapabilityOutputWithContext(ctx context.Context) CapabilityOutput {
	return o
}

// Description of Capability
func (o CapabilityOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v Capability) string { return v.Description }).(pulumi.StringOutput)
}

// Name of Capability
func (o CapabilityOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v Capability) string { return v.Name }).(pulumi.StringOutput)
}

// State of resource
func (o CapabilityOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Capability) *string { return v.State }).(pulumi.StringPtrOutput)
}

type CapabilityArrayOutput struct{ *pulumi.OutputState }

func (CapabilityArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Capability)(nil)).Elem()
}

func (o CapabilityArrayOutput) ToCapabilityArrayOutput() CapabilityArrayOutput {
	return o
}

func (o CapabilityArrayOutput) ToCapabilityArrayOutputWithContext(ctx context.Context) CapabilityArrayOutput {
	return o
}

func (o CapabilityArrayOutput) Index(i pulumi.IntInput) CapabilityOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Capability {
		return vs[0].([]Capability)[vs[1].(int)]
	}).(CapabilityOutput)
}

// Capability, to match in Solution Templates and Targets
type CapabilityResponse struct {
	// Description of Capability
	Description string `pulumi:"description"`
	// Name of Capability
	Name string `pulumi:"name"`
	// State of resource
	State *string `pulumi:"state"`
}

// Capability, to match in Solution Templates and Targets
type CapabilityResponseOutput struct{ *pulumi.OutputState }

func (CapabilityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CapabilityResponse)(nil)).Elem()
}

func (o CapabilityResponseOutput) ToCapabilityResponseOutput() CapabilityResponseOutput {
	return o
}

func (o CapabilityResponseOutput) ToCapabilityResponseOutputWithContext(ctx context.Context) CapabilityResponseOutput {
	return o
}

// Description of Capability
func (o CapabilityResponseOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v CapabilityResponse) string { return v.Description }).(pulumi.StringOutput)
}

// Name of Capability
func (o CapabilityResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v CapabilityResponse) string { return v.Name }).(pulumi.StringOutput)
}

// State of resource
func (o CapabilityResponseOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CapabilityResponse) *string { return v.State }).(pulumi.StringPtrOutput)
}

type CapabilityResponseArrayOutput struct{ *pulumi.OutputState }

func (CapabilityResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CapabilityResponse)(nil)).Elem()
}

func (o CapabilityResponseArrayOutput) ToCapabilityResponseArrayOutput() CapabilityResponseArrayOutput {
	return o
}

func (o CapabilityResponseArrayOutput) ToCapabilityResponseArrayOutputWithContext(ctx context.Context) CapabilityResponseArrayOutput {
	return o
}

func (o CapabilityResponseArrayOutput) Index(i pulumi.IntInput) CapabilityResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CapabilityResponse {
		return vs[0].([]CapabilityResponse)[vs[1].(int)]
	}).(CapabilityResponseOutput)
}

// Component Status
type ComponentStatusResponse struct {
	// Component name
	Name *string `pulumi:"name"`
	// Component status
	Status *string `pulumi:"status"`
}

// Component Status
type ComponentStatusResponseOutput struct{ *pulumi.OutputState }

func (ComponentStatusResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ComponentStatusResponse)(nil)).Elem()
}

func (o ComponentStatusResponseOutput) ToComponentStatusResponseOutput() ComponentStatusResponseOutput {
	return o
}

func (o ComponentStatusResponseOutput) ToComponentStatusResponseOutputWithContext(ctx context.Context) ComponentStatusResponseOutput {
	return o
}

// Component name
func (o ComponentStatusResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComponentStatusResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Component status
func (o ComponentStatusResponseOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComponentStatusResponse) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type ComponentStatusResponseArrayOutput struct{ *pulumi.OutputState }

func (ComponentStatusResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ComponentStatusResponse)(nil)).Elem()
}

func (o ComponentStatusResponseArrayOutput) ToComponentStatusResponseArrayOutput() ComponentStatusResponseArrayOutput {
	return o
}

func (o ComponentStatusResponseArrayOutput) ToComponentStatusResponseArrayOutputWithContext(ctx context.Context) ComponentStatusResponseArrayOutput {
	return o
}

func (o ComponentStatusResponseArrayOutput) Index(i pulumi.IntInput) ComponentStatusResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ComponentStatusResponse {
		return vs[0].([]ComponentStatusResponse)[vs[1].(int)]
	}).(ComponentStatusResponseOutput)
}

// Config Template Properties
type ConfigTemplateProperties struct {
	// Description of config template
	Description string `pulumi:"description"`
}

// ConfigTemplatePropertiesInput is an input type that accepts ConfigTemplatePropertiesArgs and ConfigTemplatePropertiesOutput values.
// You can construct a concrete instance of `ConfigTemplatePropertiesInput` via:
//
//	ConfigTemplatePropertiesArgs{...}
type ConfigTemplatePropertiesInput interface {
	pulumi.Input

	ToConfigTemplatePropertiesOutput() ConfigTemplatePropertiesOutput
	ToConfigTemplatePropertiesOutputWithContext(context.Context) ConfigTemplatePropertiesOutput
}

// Config Template Properties
type ConfigTemplatePropertiesArgs struct {
	// Description of config template
	Description pulumi.StringInput `pulumi:"description"`
}

func (ConfigTemplatePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigTemplateProperties)(nil)).Elem()
}

func (i ConfigTemplatePropertiesArgs) ToConfigTemplatePropertiesOutput() ConfigTemplatePropertiesOutput {
	return i.ToConfigTemplatePropertiesOutputWithContext(context.Background())
}

func (i ConfigTemplatePropertiesArgs) ToConfigTemplatePropertiesOutputWithContext(ctx context.Context) ConfigTemplatePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigTemplatePropertiesOutput)
}

func (i ConfigTemplatePropertiesArgs) ToConfigTemplatePropertiesPtrOutput() ConfigTemplatePropertiesPtrOutput {
	return i.ToConfigTemplatePropertiesPtrOutputWithContext(context.Background())
}

func (i ConfigTemplatePropertiesArgs) ToConfigTemplatePropertiesPtrOutputWithContext(ctx context.Context) ConfigTemplatePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigTemplatePropertiesOutput).ToConfigTemplatePropertiesPtrOutputWithContext(ctx)
}

// ConfigTemplatePropertiesPtrInput is an input type that accepts ConfigTemplatePropertiesArgs, ConfigTemplatePropertiesPtr and ConfigTemplatePropertiesPtrOutput values.
// You can construct a concrete instance of `ConfigTemplatePropertiesPtrInput` via:
//
//	        ConfigTemplatePropertiesArgs{...}
//
//	or:
//
//	        nil
type ConfigTemplatePropertiesPtrInput interface {
	pulumi.Input

	ToConfigTemplatePropertiesPtrOutput() ConfigTemplatePropertiesPtrOutput
	ToConfigTemplatePropertiesPtrOutputWithContext(context.Context) ConfigTemplatePropertiesPtrOutput
}

type configTemplatePropertiesPtrType ConfigTemplatePropertiesArgs

func ConfigTemplatePropertiesPtr(v *ConfigTemplatePropertiesArgs) ConfigTemplatePropertiesPtrInput {
	return (*configTemplatePropertiesPtrType)(v)
}

func (*configTemplatePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConfigTemplateProperties)(nil)).Elem()
}

func (i *configTemplatePropertiesPtrType) ToConfigTemplatePropertiesPtrOutput() ConfigTemplatePropertiesPtrOutput {
	return i.ToConfigTemplatePropertiesPtrOutputWithContext(context.Background())
}

func (i *configTemplatePropertiesPtrType) ToConfigTemplatePropertiesPtrOutputWithContext(ctx context.Context) ConfigTemplatePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigTemplatePropertiesPtrOutput)
}

// Config Template Properties
type ConfigTemplatePropertiesOutput struct{ *pulumi.OutputState }

func (ConfigTemplatePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigTemplateProperties)(nil)).Elem()
}

func (o ConfigTemplatePropertiesOutput) ToConfigTemplatePropertiesOutput() ConfigTemplatePropertiesOutput {
	return o
}

func (o ConfigTemplatePropertiesOutput) ToConfigTemplatePropertiesOutputWithContext(ctx context.Context) ConfigTemplatePropertiesOutput {
	return o
}

func (o ConfigTemplatePropertiesOutput) ToConfigTemplatePropertiesPtrOutput() ConfigTemplatePropertiesPtrOutput {
	return o.ToConfigTemplatePropertiesPtrOutputWithContext(context.Background())
}

func (o ConfigTemplatePropertiesOutput) ToConfigTemplatePropertiesPtrOutputWithContext(ctx context.Context) ConfigTemplatePropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConfigTemplateProperties) *ConfigTemplateProperties {
		return &v
	}).(ConfigTemplatePropertiesPtrOutput)
}

// Description of config template
func (o ConfigTemplatePropertiesOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v ConfigTemplateProperties) string { return v.Description }).(pulumi.StringOutput)
}

type ConfigTemplatePropertiesPtrOutput struct{ *pulumi.OutputState }

func (ConfigTemplatePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConfigTemplateProperties)(nil)).Elem()
}

func (o ConfigTemplatePropertiesPtrOutput) ToConfigTemplatePropertiesPtrOutput() ConfigTemplatePropertiesPtrOutput {
	return o
}

func (o ConfigTemplatePropertiesPtrOutput) ToConfigTemplatePropertiesPtrOutputWithContext(ctx context.Context) ConfigTemplatePropertiesPtrOutput {
	return o
}

func (o ConfigTemplatePropertiesPtrOutput) Elem() ConfigTemplatePropertiesOutput {
	return o.ApplyT(func(v *ConfigTemplateProperties) ConfigTemplateProperties {
		if v != nil {
			return *v
		}
		var ret ConfigTemplateProperties
		return ret
	}).(ConfigTemplatePropertiesOutput)
}

// Description of config template
func (o ConfigTemplatePropertiesPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConfigTemplateProperties) *string {
		if v == nil {
			return nil
		}
		return &v.Description
	}).(pulumi.StringPtrOutput)
}

// Config Template Properties
type ConfigTemplatePropertiesResponse struct {
	// Description of config template
	Description string `pulumi:"description"`
	// Latest config template version
	LatestVersion string `pulumi:"latestVersion"`
	// Provisioning state of resource
	ProvisioningState string `pulumi:"provisioningState"`
}

// Config Template Properties
type ConfigTemplatePropertiesResponseOutput struct{ *pulumi.OutputState }

func (ConfigTemplatePropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigTemplatePropertiesResponse)(nil)).Elem()
}

func (o ConfigTemplatePropertiesResponseOutput) ToConfigTemplatePropertiesResponseOutput() ConfigTemplatePropertiesResponseOutput {
	return o
}

func (o ConfigTemplatePropertiesResponseOutput) ToConfigTemplatePropertiesResponseOutputWithContext(ctx context.Context) ConfigTemplatePropertiesResponseOutput {
	return o
}

// Description of config template
func (o ConfigTemplatePropertiesResponseOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v ConfigTemplatePropertiesResponse) string { return v.Description }).(pulumi.StringOutput)
}

// Latest config template version
func (o ConfigTemplatePropertiesResponseOutput) LatestVersion() pulumi.StringOutput {
	return o.ApplyT(func(v ConfigTemplatePropertiesResponse) string { return v.LatestVersion }).(pulumi.StringOutput)
}

// Provisioning state of resource
func (o ConfigTemplatePropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v ConfigTemplatePropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Configuration Properties
type ConfigurationPropertiesResponse struct {
	// Provisioning state of resource
	ProvisioningState string `pulumi:"provisioningState"`
}

// Configuration Properties
type ConfigurationPropertiesResponseOutput struct{ *pulumi.OutputState }

func (ConfigurationPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigurationPropertiesResponse)(nil)).Elem()
}

func (o ConfigurationPropertiesResponseOutput) ToConfigurationPropertiesResponseOutput() ConfigurationPropertiesResponseOutput {
	return o
}

func (o ConfigurationPropertiesResponseOutput) ToConfigurationPropertiesResponseOutputWithContext(ctx context.Context) ConfigurationPropertiesResponseOutput {
	return o
}

// Provisioning state of resource
func (o ConfigurationPropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v ConfigurationPropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Properties for ConfigurationReference Resource
type ConfigurationReferenceProperties struct {
	// ArmId of Configuration resource
	ConfigurationResourceId *string `pulumi:"configurationResourceId"`
}

// ConfigurationReferencePropertiesInput is an input type that accepts ConfigurationReferencePropertiesArgs and ConfigurationReferencePropertiesOutput values.
// You can construct a concrete instance of `ConfigurationReferencePropertiesInput` via:
//
//	ConfigurationReferencePropertiesArgs{...}
type ConfigurationReferencePropertiesInput interface {
	pulumi.Input

	ToConfigurationReferencePropertiesOutput() ConfigurationReferencePropertiesOutput
	ToConfigurationReferencePropertiesOutputWithContext(context.Context) ConfigurationReferencePropertiesOutput
}

// Properties for ConfigurationReference Resource
type ConfigurationReferencePropertiesArgs struct {
	// ArmId of Configuration resource
	ConfigurationResourceId pulumi.StringPtrInput `pulumi:"configurationResourceId"`
}

func (ConfigurationReferencePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigurationReferenceProperties)(nil)).Elem()
}

func (i ConfigurationReferencePropertiesArgs) ToConfigurationReferencePropertiesOutput() ConfigurationReferencePropertiesOutput {
	return i.ToConfigurationReferencePropertiesOutputWithContext(context.Background())
}

func (i ConfigurationReferencePropertiesArgs) ToConfigurationReferencePropertiesOutputWithContext(ctx context.Context) ConfigurationReferencePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigurationReferencePropertiesOutput)
}

func (i ConfigurationReferencePropertiesArgs) ToConfigurationReferencePropertiesPtrOutput() ConfigurationReferencePropertiesPtrOutput {
	return i.ToConfigurationReferencePropertiesPtrOutputWithContext(context.Background())
}

func (i ConfigurationReferencePropertiesArgs) ToConfigurationReferencePropertiesPtrOutputWithContext(ctx context.Context) ConfigurationReferencePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigurationReferencePropertiesOutput).ToConfigurationReferencePropertiesPtrOutputWithContext(ctx)
}

// ConfigurationReferencePropertiesPtrInput is an input type that accepts ConfigurationReferencePropertiesArgs, ConfigurationReferencePropertiesPtr and ConfigurationReferencePropertiesPtrOutput values.
// You can construct a concrete instance of `ConfigurationReferencePropertiesPtrInput` via:
//
//	        ConfigurationReferencePropertiesArgs{...}
//
//	or:
//
//	        nil
type ConfigurationReferencePropertiesPtrInput interface {
	pulumi.Input

	ToConfigurationReferencePropertiesPtrOutput() ConfigurationReferencePropertiesPtrOutput
	ToConfigurationReferencePropertiesPtrOutputWithContext(context.Context) ConfigurationReferencePropertiesPtrOutput
}

type configurationReferencePropertiesPtrType ConfigurationReferencePropertiesArgs

func ConfigurationReferencePropertiesPtr(v *ConfigurationReferencePropertiesArgs) ConfigurationReferencePropertiesPtrInput {
	return (*configurationReferencePropertiesPtrType)(v)
}

func (*configurationReferencePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConfigurationReferenceProperties)(nil)).Elem()
}

func (i *configurationReferencePropertiesPtrType) ToConfigurationReferencePropertiesPtrOutput() ConfigurationReferencePropertiesPtrOutput {
	return i.ToConfigurationReferencePropertiesPtrOutputWithContext(context.Background())
}

func (i *configurationReferencePropertiesPtrType) ToConfigurationReferencePropertiesPtrOutputWithContext(ctx context.Context) ConfigurationReferencePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigurationReferencePropertiesPtrOutput)
}

// Properties for ConfigurationReference Resource
type ConfigurationReferencePropertiesOutput struct{ *pulumi.OutputState }

func (ConfigurationReferencePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigurationReferenceProperties)(nil)).Elem()
}

func (o ConfigurationReferencePropertiesOutput) ToConfigurationReferencePropertiesOutput() ConfigurationReferencePropertiesOutput {
	return o
}

func (o ConfigurationReferencePropertiesOutput) ToConfigurationReferencePropertiesOutputWithContext(ctx context.Context) ConfigurationReferencePropertiesOutput {
	return o
}

func (o ConfigurationReferencePropertiesOutput) ToConfigurationReferencePropertiesPtrOutput() ConfigurationReferencePropertiesPtrOutput {
	return o.ToConfigurationReferencePropertiesPtrOutputWithContext(context.Background())
}

func (o ConfigurationReferencePropertiesOutput) ToConfigurationReferencePropertiesPtrOutputWithContext(ctx context.Context) ConfigurationReferencePropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConfigurationReferenceProperties) *ConfigurationReferenceProperties {
		return &v
	}).(ConfigurationReferencePropertiesPtrOutput)
}

// ArmId of Configuration resource
func (o ConfigurationReferencePropertiesOutput) ConfigurationResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigurationReferenceProperties) *string { return v.ConfigurationResourceId }).(pulumi.StringPtrOutput)
}

type ConfigurationReferencePropertiesPtrOutput struct{ *pulumi.OutputState }

func (ConfigurationReferencePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConfigurationReferenceProperties)(nil)).Elem()
}

func (o ConfigurationReferencePropertiesPtrOutput) ToConfigurationReferencePropertiesPtrOutput() ConfigurationReferencePropertiesPtrOutput {
	return o
}

func (o ConfigurationReferencePropertiesPtrOutput) ToConfigurationReferencePropertiesPtrOutputWithContext(ctx context.Context) ConfigurationReferencePropertiesPtrOutput {
	return o
}

func (o ConfigurationReferencePropertiesPtrOutput) Elem() ConfigurationReferencePropertiesOutput {
	return o.ApplyT(func(v *ConfigurationReferenceProperties) ConfigurationReferenceProperties {
		if v != nil {
			return *v
		}
		var ret ConfigurationReferenceProperties
		return ret
	}).(ConfigurationReferencePropertiesOutput)
}

// ArmId of Configuration resource
func (o ConfigurationReferencePropertiesPtrOutput) ConfigurationResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConfigurationReferenceProperties) *string {
		if v == nil {
			return nil
		}
		return v.ConfigurationResourceId
	}).(pulumi.StringPtrOutput)
}

// Properties for ConfigurationReference Resource
type ConfigurationReferencePropertiesResponse struct {
	// ArmId of Configuration resource
	ConfigurationResourceId *string `pulumi:"configurationResourceId"`
	// The status of the last operation.
	ProvisioningState string `pulumi:"provisioningState"`
}

// Properties for ConfigurationReference Resource
type ConfigurationReferencePropertiesResponseOutput struct{ *pulumi.OutputState }

func (ConfigurationReferencePropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigurationReferencePropertiesResponse)(nil)).Elem()
}

func (o ConfigurationReferencePropertiesResponseOutput) ToConfigurationReferencePropertiesResponseOutput() ConfigurationReferencePropertiesResponseOutput {
	return o
}

func (o ConfigurationReferencePropertiesResponseOutput) ToConfigurationReferencePropertiesResponseOutputWithContext(ctx context.Context) ConfigurationReferencePropertiesResponseOutput {
	return o
}

// ArmId of Configuration resource
func (o ConfigurationReferencePropertiesResponseOutput) ConfigurationResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigurationReferencePropertiesResponse) *string { return v.ConfigurationResourceId }).(pulumi.StringPtrOutput)
}

// The status of the last operation.
func (o ConfigurationReferencePropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v ConfigurationReferencePropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Context Properties
type ContextProperties struct {
	// List of Capabilities
	Capabilities []Capability `pulumi:"capabilities"`
	// List of Hierarchies
	Hierarchies []Hierarchy `pulumi:"hierarchies"`
}

// ContextPropertiesInput is an input type that accepts ContextPropertiesArgs and ContextPropertiesOutput values.
// You can construct a concrete instance of `ContextPropertiesInput` via:
//
//	ContextPropertiesArgs{...}
type ContextPropertiesInput interface {
	pulumi.Input

	ToContextPropertiesOutput() ContextPropertiesOutput
	ToContextPropertiesOutputWithContext(context.Context) ContextPropertiesOutput
}

// Context Properties
type ContextPropertiesArgs struct {
	// List of Capabilities
	Capabilities CapabilityArrayInput `pulumi:"capabilities"`
	// List of Hierarchies
	Hierarchies HierarchyArrayInput `pulumi:"hierarchies"`
}

func (ContextPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContextProperties)(nil)).Elem()
}

func (i ContextPropertiesArgs) ToContextPropertiesOutput() ContextPropertiesOutput {
	return i.ToContextPropertiesOutputWithContext(context.Background())
}

func (i ContextPropertiesArgs) ToContextPropertiesOutputWithContext(ctx context.Context) ContextPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContextPropertiesOutput)
}

func (i ContextPropertiesArgs) ToContextPropertiesPtrOutput() ContextPropertiesPtrOutput {
	return i.ToContextPropertiesPtrOutputWithContext(context.Background())
}

func (i ContextPropertiesArgs) ToContextPropertiesPtrOutputWithContext(ctx context.Context) ContextPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContextPropertiesOutput).ToContextPropertiesPtrOutputWithContext(ctx)
}

// ContextPropertiesPtrInput is an input type that accepts ContextPropertiesArgs, ContextPropertiesPtr and ContextPropertiesPtrOutput values.
// You can construct a concrete instance of `ContextPropertiesPtrInput` via:
//
//	        ContextPropertiesArgs{...}
//
//	or:
//
//	        nil
type ContextPropertiesPtrInput interface {
	pulumi.Input

	ToContextPropertiesPtrOutput() ContextPropertiesPtrOutput
	ToContextPropertiesPtrOutputWithContext(context.Context) ContextPropertiesPtrOutput
}

type contextPropertiesPtrType ContextPropertiesArgs

func ContextPropertiesPtr(v *ContextPropertiesArgs) ContextPropertiesPtrInput {
	return (*contextPropertiesPtrType)(v)
}

func (*contextPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ContextProperties)(nil)).Elem()
}

func (i *contextPropertiesPtrType) ToContextPropertiesPtrOutput() ContextPropertiesPtrOutput {
	return i.ToContextPropertiesPtrOutputWithContext(context.Background())
}

func (i *contextPropertiesPtrType) ToContextPropertiesPtrOutputWithContext(ctx context.Context) ContextPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContextPropertiesPtrOutput)
}

// Context Properties
type ContextPropertiesOutput struct{ *pulumi.OutputState }

func (ContextPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContextProperties)(nil)).Elem()
}

func (o ContextPropertiesOutput) ToContextPropertiesOutput() ContextPropertiesOutput {
	return o
}

func (o ContextPropertiesOutput) ToContextPropertiesOutputWithContext(ctx context.Context) ContextPropertiesOutput {
	return o
}

func (o ContextPropertiesOutput) ToContextPropertiesPtrOutput() ContextPropertiesPtrOutput {
	return o.ToContextPropertiesPtrOutputWithContext(context.Background())
}

func (o ContextPropertiesOutput) ToContextPropertiesPtrOutputWithContext(ctx context.Context) ContextPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ContextProperties) *ContextProperties {
		return &v
	}).(ContextPropertiesPtrOutput)
}

// List of Capabilities
func (o ContextPropertiesOutput) Capabilities() CapabilityArrayOutput {
	return o.ApplyT(func(v ContextProperties) []Capability { return v.Capabilities }).(CapabilityArrayOutput)
}

// List of Hierarchies
func (o ContextPropertiesOutput) Hierarchies() HierarchyArrayOutput {
	return o.ApplyT(func(v ContextProperties) []Hierarchy { return v.Hierarchies }).(HierarchyArrayOutput)
}

type ContextPropertiesPtrOutput struct{ *pulumi.OutputState }

func (ContextPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ContextProperties)(nil)).Elem()
}

func (o ContextPropertiesPtrOutput) ToContextPropertiesPtrOutput() ContextPropertiesPtrOutput {
	return o
}

func (o ContextPropertiesPtrOutput) ToContextPropertiesPtrOutputWithContext(ctx context.Context) ContextPropertiesPtrOutput {
	return o
}

func (o ContextPropertiesPtrOutput) Elem() ContextPropertiesOutput {
	return o.ApplyT(func(v *ContextProperties) ContextProperties {
		if v != nil {
			return *v
		}
		var ret ContextProperties
		return ret
	}).(ContextPropertiesOutput)
}

// List of Capabilities
func (o ContextPropertiesPtrOutput) Capabilities() CapabilityArrayOutput {
	return o.ApplyT(func(v *ContextProperties) []Capability {
		if v == nil {
			return nil
		}
		return v.Capabilities
	}).(CapabilityArrayOutput)
}

// List of Hierarchies
func (o ContextPropertiesPtrOutput) Hierarchies() HierarchyArrayOutput {
	return o.ApplyT(func(v *ContextProperties) []Hierarchy {
		if v == nil {
			return nil
		}
		return v.Hierarchies
	}).(HierarchyArrayOutput)
}

// Context Properties
type ContextPropertiesResponse struct {
	// List of Capabilities
	Capabilities []CapabilityResponse `pulumi:"capabilities"`
	// List of Hierarchies
	Hierarchies []HierarchyResponse `pulumi:"hierarchies"`
	// Provisioning state of resource
	ProvisioningState string `pulumi:"provisioningState"`
}

// Context Properties
type ContextPropertiesResponseOutput struct{ *pulumi.OutputState }

func (ContextPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContextPropertiesResponse)(nil)).Elem()
}

func (o ContextPropertiesResponseOutput) ToContextPropertiesResponseOutput() ContextPropertiesResponseOutput {
	return o
}

func (o ContextPropertiesResponseOutput) ToContextPropertiesResponseOutputWithContext(ctx context.Context) ContextPropertiesResponseOutput {
	return o
}

// List of Capabilities
func (o ContextPropertiesResponseOutput) Capabilities() CapabilityResponseArrayOutput {
	return o.ApplyT(func(v ContextPropertiesResponse) []CapabilityResponse { return v.Capabilities }).(CapabilityResponseArrayOutput)
}

// List of Hierarchies
func (o ContextPropertiesResponseOutput) Hierarchies() HierarchyResponseArrayOutput {
	return o.ApplyT(func(v ContextPropertiesResponse) []HierarchyResponse { return v.Hierarchies }).(HierarchyResponseArrayOutput)
}

// Provisioning state of resource
func (o ContextPropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v ContextPropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Deployment Status
type DeploymentStatusResponse struct {
	// Indicates if Instance is deployed
	Deployed *int `pulumi:"deployed"`
	// The expected running job id
	ExpectedRunningJobId *int `pulumi:"expectedRunningJobId"`
	// Deployment Generation
	Generation *int `pulumi:"generation"`
	// The lastModified of the Status
	LastModified *string `pulumi:"lastModified"`
	// The running job id
	RunningJobId *int `pulumi:"runningJobId"`
	// Deployment status
	Status *string `pulumi:"status"`
	// Status details
	StatusDetails *string `pulumi:"statusDetails"`
	// Target resource statuses
	TargetStatuses []TargetStatusResponse `pulumi:"targetStatuses"`
}

// Deployment Status
type DeploymentStatusResponseOutput struct{ *pulumi.OutputState }

func (DeploymentStatusResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentStatusResponse)(nil)).Elem()
}

func (o DeploymentStatusResponseOutput) ToDeploymentStatusResponseOutput() DeploymentStatusResponseOutput {
	return o
}

func (o DeploymentStatusResponseOutput) ToDeploymentStatusResponseOutputWithContext(ctx context.Context) DeploymentStatusResponseOutput {
	return o
}

// Indicates if Instance is deployed
func (o DeploymentStatusResponseOutput) Deployed() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DeploymentStatusResponse) *int { return v.Deployed }).(pulumi.IntPtrOutput)
}

// The expected running job id
func (o DeploymentStatusResponseOutput) ExpectedRunningJobId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DeploymentStatusResponse) *int { return v.ExpectedRunningJobId }).(pulumi.IntPtrOutput)
}

// Deployment Generation
func (o DeploymentStatusResponseOutput) Generation() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DeploymentStatusResponse) *int { return v.Generation }).(pulumi.IntPtrOutput)
}

// The lastModified of the Status
func (o DeploymentStatusResponseOutput) LastModified() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentStatusResponse) *string { return v.LastModified }).(pulumi.StringPtrOutput)
}

// The running job id
func (o DeploymentStatusResponseOutput) RunningJobId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DeploymentStatusResponse) *int { return v.RunningJobId }).(pulumi.IntPtrOutput)
}

// Deployment status
func (o DeploymentStatusResponseOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentStatusResponse) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// Status details
func (o DeploymentStatusResponseOutput) StatusDetails() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentStatusResponse) *string { return v.StatusDetails }).(pulumi.StringPtrOutput)
}

// Target resource statuses
func (o DeploymentStatusResponseOutput) TargetStatuses() TargetStatusResponseArrayOutput {
	return o.ApplyT(func(v DeploymentStatusResponse) []TargetStatusResponse { return v.TargetStatuses }).(TargetStatusResponseArrayOutput)
}

// The properties of a Diagnostic resource.
type DiagnosticPropertiesResponse struct {
	// The status of the last operation.
	ProvisioningState string `pulumi:"provisioningState"`
}

// The properties of a Diagnostic resource.
type DiagnosticPropertiesResponseOutput struct{ *pulumi.OutputState }

func (DiagnosticPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DiagnosticPropertiesResponse)(nil)).Elem()
}

func (o DiagnosticPropertiesResponseOutput) ToDiagnosticPropertiesResponseOutput() DiagnosticPropertiesResponseOutput {
	return o
}

func (o DiagnosticPropertiesResponseOutput) ToDiagnosticPropertiesResponseOutputWithContext(ctx context.Context) DiagnosticPropertiesResponseOutput {
	return o
}

// The status of the last operation.
func (o DiagnosticPropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v DiagnosticPropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Dynamic Configuration Properties
type DynamicConfigurationProperties struct {
	// Current Version of dynamic configuration
	CurrentVersion string `pulumi:"currentVersion"`
}

// DynamicConfigurationPropertiesInput is an input type that accepts DynamicConfigurationPropertiesArgs and DynamicConfigurationPropertiesOutput values.
// You can construct a concrete instance of `DynamicConfigurationPropertiesInput` via:
//
//	DynamicConfigurationPropertiesArgs{...}
type DynamicConfigurationPropertiesInput interface {
	pulumi.Input

	ToDynamicConfigurationPropertiesOutput() DynamicConfigurationPropertiesOutput
	ToDynamicConfigurationPropertiesOutputWithContext(context.Context) DynamicConfigurationPropertiesOutput
}

// Dynamic Configuration Properties
type DynamicConfigurationPropertiesArgs struct {
	// Current Version of dynamic configuration
	CurrentVersion pulumi.StringInput `pulumi:"currentVersion"`
}

func (DynamicConfigurationPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DynamicConfigurationProperties)(nil)).Elem()
}

func (i DynamicConfigurationPropertiesArgs) ToDynamicConfigurationPropertiesOutput() DynamicConfigurationPropertiesOutput {
	return i.ToDynamicConfigurationPropertiesOutputWithContext(context.Background())
}

func (i DynamicConfigurationPropertiesArgs) ToDynamicConfigurationPropertiesOutputWithContext(ctx context.Context) DynamicConfigurationPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DynamicConfigurationPropertiesOutput)
}

func (i DynamicConfigurationPropertiesArgs) ToDynamicConfigurationPropertiesPtrOutput() DynamicConfigurationPropertiesPtrOutput {
	return i.ToDynamicConfigurationPropertiesPtrOutputWithContext(context.Background())
}

func (i DynamicConfigurationPropertiesArgs) ToDynamicConfigurationPropertiesPtrOutputWithContext(ctx context.Context) DynamicConfigurationPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DynamicConfigurationPropertiesOutput).ToDynamicConfigurationPropertiesPtrOutputWithContext(ctx)
}

// DynamicConfigurationPropertiesPtrInput is an input type that accepts DynamicConfigurationPropertiesArgs, DynamicConfigurationPropertiesPtr and DynamicConfigurationPropertiesPtrOutput values.
// You can construct a concrete instance of `DynamicConfigurationPropertiesPtrInput` via:
//
//	        DynamicConfigurationPropertiesArgs{...}
//
//	or:
//
//	        nil
type DynamicConfigurationPropertiesPtrInput interface {
	pulumi.Input

	ToDynamicConfigurationPropertiesPtrOutput() DynamicConfigurationPropertiesPtrOutput
	ToDynamicConfigurationPropertiesPtrOutputWithContext(context.Context) DynamicConfigurationPropertiesPtrOutput
}

type dynamicConfigurationPropertiesPtrType DynamicConfigurationPropertiesArgs

func DynamicConfigurationPropertiesPtr(v *DynamicConfigurationPropertiesArgs) DynamicConfigurationPropertiesPtrInput {
	return (*dynamicConfigurationPropertiesPtrType)(v)
}

func (*dynamicConfigurationPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DynamicConfigurationProperties)(nil)).Elem()
}

func (i *dynamicConfigurationPropertiesPtrType) ToDynamicConfigurationPropertiesPtrOutput() DynamicConfigurationPropertiesPtrOutput {
	return i.ToDynamicConfigurationPropertiesPtrOutputWithContext(context.Background())
}

func (i *dynamicConfigurationPropertiesPtrType) ToDynamicConfigurationPropertiesPtrOutputWithContext(ctx context.Context) DynamicConfigurationPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DynamicConfigurationPropertiesPtrOutput)
}

// Dynamic Configuration Properties
type DynamicConfigurationPropertiesOutput struct{ *pulumi.OutputState }

func (DynamicConfigurationPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DynamicConfigurationProperties)(nil)).Elem()
}

func (o DynamicConfigurationPropertiesOutput) ToDynamicConfigurationPropertiesOutput() DynamicConfigurationPropertiesOutput {
	return o
}

func (o DynamicConfigurationPropertiesOutput) ToDynamicConfigurationPropertiesOutputWithContext(ctx context.Context) DynamicConfigurationPropertiesOutput {
	return o
}

func (o DynamicConfigurationPropertiesOutput) ToDynamicConfigurationPropertiesPtrOutput() DynamicConfigurationPropertiesPtrOutput {
	return o.ToDynamicConfigurationPropertiesPtrOutputWithContext(context.Background())
}

func (o DynamicConfigurationPropertiesOutput) ToDynamicConfigurationPropertiesPtrOutputWithContext(ctx context.Context) DynamicConfigurationPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DynamicConfigurationProperties) *DynamicConfigurationProperties {
		return &v
	}).(DynamicConfigurationPropertiesPtrOutput)
}

// Current Version of dynamic configuration
func (o DynamicConfigurationPropertiesOutput) CurrentVersion() pulumi.StringOutput {
	return o.ApplyT(func(v DynamicConfigurationProperties) string { return v.CurrentVersion }).(pulumi.StringOutput)
}

type DynamicConfigurationPropertiesPtrOutput struct{ *pulumi.OutputState }

func (DynamicConfigurationPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DynamicConfigurationProperties)(nil)).Elem()
}

func (o DynamicConfigurationPropertiesPtrOutput) ToDynamicConfigurationPropertiesPtrOutput() DynamicConfigurationPropertiesPtrOutput {
	return o
}

func (o DynamicConfigurationPropertiesPtrOutput) ToDynamicConfigurationPropertiesPtrOutputWithContext(ctx context.Context) DynamicConfigurationPropertiesPtrOutput {
	return o
}

func (o DynamicConfigurationPropertiesPtrOutput) Elem() DynamicConfigurationPropertiesOutput {
	return o.ApplyT(func(v *DynamicConfigurationProperties) DynamicConfigurationProperties {
		if v != nil {
			return *v
		}
		var ret DynamicConfigurationProperties
		return ret
	}).(DynamicConfigurationPropertiesOutput)
}

// Current Version of dynamic configuration
func (o DynamicConfigurationPropertiesPtrOutput) CurrentVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DynamicConfigurationProperties) *string {
		if v == nil {
			return nil
		}
		return &v.CurrentVersion
	}).(pulumi.StringPtrOutput)
}

// Dynamic Configuration Properties
type DynamicConfigurationPropertiesResponse struct {
	// Current Version of dynamic configuration
	CurrentVersion string `pulumi:"currentVersion"`
	// Type of dynamic configuration model
	DynamicConfigurationModel string `pulumi:"dynamicConfigurationModel"`
	// Type of dynamic configuration
	DynamicConfigurationType string `pulumi:"dynamicConfigurationType"`
	// Provisioning state of resource
	ProvisioningState string `pulumi:"provisioningState"`
}

// Dynamic Configuration Properties
type DynamicConfigurationPropertiesResponseOutput struct{ *pulumi.OutputState }

func (DynamicConfigurationPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DynamicConfigurationPropertiesResponse)(nil)).Elem()
}

func (o DynamicConfigurationPropertiesResponseOutput) ToDynamicConfigurationPropertiesResponseOutput() DynamicConfigurationPropertiesResponseOutput {
	return o
}

func (o DynamicConfigurationPropertiesResponseOutput) ToDynamicConfigurationPropertiesResponseOutputWithContext(ctx context.Context) DynamicConfigurationPropertiesResponseOutput {
	return o
}

// Current Version of dynamic configuration
func (o DynamicConfigurationPropertiesResponseOutput) CurrentVersion() pulumi.StringOutput {
	return o.ApplyT(func(v DynamicConfigurationPropertiesResponse) string { return v.CurrentVersion }).(pulumi.StringOutput)
}

// Type of dynamic configuration model
func (o DynamicConfigurationPropertiesResponseOutput) DynamicConfigurationModel() pulumi.StringOutput {
	return o.ApplyT(func(v DynamicConfigurationPropertiesResponse) string { return v.DynamicConfigurationModel }).(pulumi.StringOutput)
}

// Type of dynamic configuration
func (o DynamicConfigurationPropertiesResponseOutput) DynamicConfigurationType() pulumi.StringOutput {
	return o.ApplyT(func(v DynamicConfigurationPropertiesResponse) string { return v.DynamicConfigurationType }).(pulumi.StringOutput)
}

// Provisioning state of resource
func (o DynamicConfigurationPropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v DynamicConfigurationPropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Dynamic Configuration Properties
type DynamicConfigurationVersionProperties struct {
	// Values of configuration version
	Values string `pulumi:"values"`
}

// DynamicConfigurationVersionPropertiesInput is an input type that accepts DynamicConfigurationVersionPropertiesArgs and DynamicConfigurationVersionPropertiesOutput values.
// You can construct a concrete instance of `DynamicConfigurationVersionPropertiesInput` via:
//
//	DynamicConfigurationVersionPropertiesArgs{...}
type DynamicConfigurationVersionPropertiesInput interface {
	pulumi.Input

	ToDynamicConfigurationVersionPropertiesOutput() DynamicConfigurationVersionPropertiesOutput
	ToDynamicConfigurationVersionPropertiesOutputWithContext(context.Context) DynamicConfigurationVersionPropertiesOutput
}

// Dynamic Configuration Properties
type DynamicConfigurationVersionPropertiesArgs struct {
	// Values of configuration version
	Values pulumi.StringInput `pulumi:"values"`
}

func (DynamicConfigurationVersionPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DynamicConfigurationVersionProperties)(nil)).Elem()
}

func (i DynamicConfigurationVersionPropertiesArgs) ToDynamicConfigurationVersionPropertiesOutput() DynamicConfigurationVersionPropertiesOutput {
	return i.ToDynamicConfigurationVersionPropertiesOutputWithContext(context.Background())
}

func (i DynamicConfigurationVersionPropertiesArgs) ToDynamicConfigurationVersionPropertiesOutputWithContext(ctx context.Context) DynamicConfigurationVersionPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DynamicConfigurationVersionPropertiesOutput)
}

func (i DynamicConfigurationVersionPropertiesArgs) ToDynamicConfigurationVersionPropertiesPtrOutput() DynamicConfigurationVersionPropertiesPtrOutput {
	return i.ToDynamicConfigurationVersionPropertiesPtrOutputWithContext(context.Background())
}

func (i DynamicConfigurationVersionPropertiesArgs) ToDynamicConfigurationVersionPropertiesPtrOutputWithContext(ctx context.Context) DynamicConfigurationVersionPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DynamicConfigurationVersionPropertiesOutput).ToDynamicConfigurationVersionPropertiesPtrOutputWithContext(ctx)
}

// DynamicConfigurationVersionPropertiesPtrInput is an input type that accepts DynamicConfigurationVersionPropertiesArgs, DynamicConfigurationVersionPropertiesPtr and DynamicConfigurationVersionPropertiesPtrOutput values.
// You can construct a concrete instance of `DynamicConfigurationVersionPropertiesPtrInput` via:
//
//	        DynamicConfigurationVersionPropertiesArgs{...}
//
//	or:
//
//	        nil
type DynamicConfigurationVersionPropertiesPtrInput interface {
	pulumi.Input

	ToDynamicConfigurationVersionPropertiesPtrOutput() DynamicConfigurationVersionPropertiesPtrOutput
	ToDynamicConfigurationVersionPropertiesPtrOutputWithContext(context.Context) DynamicConfigurationVersionPropertiesPtrOutput
}

type dynamicConfigurationVersionPropertiesPtrType DynamicConfigurationVersionPropertiesArgs

func DynamicConfigurationVersionPropertiesPtr(v *DynamicConfigurationVersionPropertiesArgs) DynamicConfigurationVersionPropertiesPtrInput {
	return (*dynamicConfigurationVersionPropertiesPtrType)(v)
}

func (*dynamicConfigurationVersionPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DynamicConfigurationVersionProperties)(nil)).Elem()
}

func (i *dynamicConfigurationVersionPropertiesPtrType) ToDynamicConfigurationVersionPropertiesPtrOutput() DynamicConfigurationVersionPropertiesPtrOutput {
	return i.ToDynamicConfigurationVersionPropertiesPtrOutputWithContext(context.Background())
}

func (i *dynamicConfigurationVersionPropertiesPtrType) ToDynamicConfigurationVersionPropertiesPtrOutputWithContext(ctx context.Context) DynamicConfigurationVersionPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DynamicConfigurationVersionPropertiesPtrOutput)
}

// Dynamic Configuration Properties
type DynamicConfigurationVersionPropertiesOutput struct{ *pulumi.OutputState }

func (DynamicConfigurationVersionPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DynamicConfigurationVersionProperties)(nil)).Elem()
}

func (o DynamicConfigurationVersionPropertiesOutput) ToDynamicConfigurationVersionPropertiesOutput() DynamicConfigurationVersionPropertiesOutput {
	return o
}

func (o DynamicConfigurationVersionPropertiesOutput) ToDynamicConfigurationVersionPropertiesOutputWithContext(ctx context.Context) DynamicConfigurationVersionPropertiesOutput {
	return o
}

func (o DynamicConfigurationVersionPropertiesOutput) ToDynamicConfigurationVersionPropertiesPtrOutput() DynamicConfigurationVersionPropertiesPtrOutput {
	return o.ToDynamicConfigurationVersionPropertiesPtrOutputWithContext(context.Background())
}

func (o DynamicConfigurationVersionPropertiesOutput) ToDynamicConfigurationVersionPropertiesPtrOutputWithContext(ctx context.Context) DynamicConfigurationVersionPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DynamicConfigurationVersionProperties) *DynamicConfigurationVersionProperties {
		return &v
	}).(DynamicConfigurationVersionPropertiesPtrOutput)
}

// Values of configuration version
func (o DynamicConfigurationVersionPropertiesOutput) Values() pulumi.StringOutput {
	return o.ApplyT(func(v DynamicConfigurationVersionProperties) string { return v.Values }).(pulumi.StringOutput)
}

type DynamicConfigurationVersionPropertiesPtrOutput struct{ *pulumi.OutputState }

func (DynamicConfigurationVersionPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DynamicConfigurationVersionProperties)(nil)).Elem()
}

func (o DynamicConfigurationVersionPropertiesPtrOutput) ToDynamicConfigurationVersionPropertiesPtrOutput() DynamicConfigurationVersionPropertiesPtrOutput {
	return o
}

func (o DynamicConfigurationVersionPropertiesPtrOutput) ToDynamicConfigurationVersionPropertiesPtrOutputWithContext(ctx context.Context) DynamicConfigurationVersionPropertiesPtrOutput {
	return o
}

func (o DynamicConfigurationVersionPropertiesPtrOutput) Elem() DynamicConfigurationVersionPropertiesOutput {
	return o.ApplyT(func(v *DynamicConfigurationVersionProperties) DynamicConfigurationVersionProperties {
		if v != nil {
			return *v
		}
		var ret DynamicConfigurationVersionProperties
		return ret
	}).(DynamicConfigurationVersionPropertiesOutput)
}

// Values of configuration version
func (o DynamicConfigurationVersionPropertiesPtrOutput) Values() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DynamicConfigurationVersionProperties) *string {
		if v == nil {
			return nil
		}
		return &v.Values
	}).(pulumi.StringPtrOutput)
}

// Dynamic Configuration Properties
type DynamicConfigurationVersionPropertiesResponse struct {
	// Provisioning state of resource
	ProvisioningState string `pulumi:"provisioningState"`
	// Schema Id for configuration
	SchemaId string `pulumi:"schemaId"`
	// Values of configuration version
	Values string `pulumi:"values"`
}

// Dynamic Configuration Properties
type DynamicConfigurationVersionPropertiesResponseOutput struct{ *pulumi.OutputState }

func (DynamicConfigurationVersionPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DynamicConfigurationVersionPropertiesResponse)(nil)).Elem()
}

func (o DynamicConfigurationVersionPropertiesResponseOutput) ToDynamicConfigurationVersionPropertiesResponseOutput() DynamicConfigurationVersionPropertiesResponseOutput {
	return o
}

func (o DynamicConfigurationVersionPropertiesResponseOutput) ToDynamicConfigurationVersionPropertiesResponseOutputWithContext(ctx context.Context) DynamicConfigurationVersionPropertiesResponseOutput {
	return o
}

// Provisioning state of resource
func (o DynamicConfigurationVersionPropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v DynamicConfigurationVersionPropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Schema Id for configuration
func (o DynamicConfigurationVersionPropertiesResponseOutput) SchemaId() pulumi.StringOutput {
	return o.ApplyT(func(v DynamicConfigurationVersionPropertiesResponse) string { return v.SchemaId }).(pulumi.StringOutput)
}

// Values of configuration version
func (o DynamicConfigurationVersionPropertiesResponseOutput) Values() pulumi.StringOutput {
	return o.ApplyT(func(v DynamicConfigurationVersionPropertiesResponse) string { return v.Values }).(pulumi.StringOutput)
}

// DynamicSchema Properties
type DynamicSchemaPropertiesResponse struct {
	// Type of configuration model
	ConfigurationModel string `pulumi:"configurationModel"`
	// Type of configuration
	ConfigurationType string `pulumi:"configurationType"`
	// Provisioning state of resource
	ProvisioningState string `pulumi:"provisioningState"`
}

// DynamicSchema Properties
type DynamicSchemaPropertiesResponseOutput struct{ *pulumi.OutputState }

func (DynamicSchemaPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DynamicSchemaPropertiesResponse)(nil)).Elem()
}

func (o DynamicSchemaPropertiesResponseOutput) ToDynamicSchemaPropertiesResponseOutput() DynamicSchemaPropertiesResponseOutput {
	return o
}

func (o DynamicSchemaPropertiesResponseOutput) ToDynamicSchemaPropertiesResponseOutputWithContext(ctx context.Context) DynamicSchemaPropertiesResponseOutput {
	return o
}

// Type of configuration model
func (o DynamicSchemaPropertiesResponseOutput) ConfigurationModel() pulumi.StringOutput {
	return o.ApplyT(func(v DynamicSchemaPropertiesResponse) string { return v.ConfigurationModel }).(pulumi.StringOutput)
}

// Type of configuration
func (o DynamicSchemaPropertiesResponseOutput) ConfigurationType() pulumi.StringOutput {
	return o.ApplyT(func(v DynamicSchemaPropertiesResponse) string { return v.ConfigurationType }).(pulumi.StringOutput)
}

// Provisioning state of resource
func (o DynamicSchemaPropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v DynamicSchemaPropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Error Action Properties
type ErrorAction struct {
	// Max tolerated failures
	MaxToleratedFailures *int `pulumi:"maxToleratedFailures"`
	// Error action mode
	Mode *string `pulumi:"mode"`
}

// Defaults sets the appropriate defaults for ErrorAction
func (val *ErrorAction) Defaults() *ErrorAction {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Mode == nil {
		mode_ := "stopOnAnyFailure"
		tmp.Mode = &mode_
	}
	return &tmp
}

// ErrorActionInput is an input type that accepts ErrorActionArgs and ErrorActionOutput values.
// You can construct a concrete instance of `ErrorActionInput` via:
//
//	ErrorActionArgs{...}
type ErrorActionInput interface {
	pulumi.Input

	ToErrorActionOutput() ErrorActionOutput
	ToErrorActionOutputWithContext(context.Context) ErrorActionOutput
}

// Error Action Properties
type ErrorActionArgs struct {
	// Max tolerated failures
	MaxToleratedFailures pulumi.IntPtrInput `pulumi:"maxToleratedFailures"`
	// Error action mode
	Mode pulumi.StringPtrInput `pulumi:"mode"`
}

// Defaults sets the appropriate defaults for ErrorActionArgs
func (val *ErrorActionArgs) Defaults() *ErrorActionArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Mode == nil {
		tmp.Mode = pulumi.StringPtr("stopOnAnyFailure")
	}
	return &tmp
}
func (ErrorActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ErrorAction)(nil)).Elem()
}

func (i ErrorActionArgs) ToErrorActionOutput() ErrorActionOutput {
	return i.ToErrorActionOutputWithContext(context.Background())
}

func (i ErrorActionArgs) ToErrorActionOutputWithContext(ctx context.Context) ErrorActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ErrorActionOutput)
}

func (i ErrorActionArgs) ToErrorActionPtrOutput() ErrorActionPtrOutput {
	return i.ToErrorActionPtrOutputWithContext(context.Background())
}

func (i ErrorActionArgs) ToErrorActionPtrOutputWithContext(ctx context.Context) ErrorActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ErrorActionOutput).ToErrorActionPtrOutputWithContext(ctx)
}

// ErrorActionPtrInput is an input type that accepts ErrorActionArgs, ErrorActionPtr and ErrorActionPtrOutput values.
// You can construct a concrete instance of `ErrorActionPtrInput` via:
//
//	        ErrorActionArgs{...}
//
//	or:
//
//	        nil
type ErrorActionPtrInput interface {
	pulumi.Input

	ToErrorActionPtrOutput() ErrorActionPtrOutput
	ToErrorActionPtrOutputWithContext(context.Context) ErrorActionPtrOutput
}

type errorActionPtrType ErrorActionArgs

func ErrorActionPtr(v *ErrorActionArgs) ErrorActionPtrInput {
	return (*errorActionPtrType)(v)
}

func (*errorActionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ErrorAction)(nil)).Elem()
}

func (i *errorActionPtrType) ToErrorActionPtrOutput() ErrorActionPtrOutput {
	return i.ToErrorActionPtrOutputWithContext(context.Background())
}

func (i *errorActionPtrType) ToErrorActionPtrOutputWithContext(ctx context.Context) ErrorActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ErrorActionPtrOutput)
}

// Error Action Properties
type ErrorActionOutput struct{ *pulumi.OutputState }

func (ErrorActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ErrorAction)(nil)).Elem()
}

func (o ErrorActionOutput) ToErrorActionOutput() ErrorActionOutput {
	return o
}

func (o ErrorActionOutput) ToErrorActionOutputWithContext(ctx context.Context) ErrorActionOutput {
	return o
}

func (o ErrorActionOutput) ToErrorActionPtrOutput() ErrorActionPtrOutput {
	return o.ToErrorActionPtrOutputWithContext(context.Background())
}

func (o ErrorActionOutput) ToErrorActionPtrOutputWithContext(ctx context.Context) ErrorActionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ErrorAction) *ErrorAction {
		return &v
	}).(ErrorActionPtrOutput)
}

// Max tolerated failures
func (o ErrorActionOutput) MaxToleratedFailures() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ErrorAction) *int { return v.MaxToleratedFailures }).(pulumi.IntPtrOutput)
}

// Error action mode
func (o ErrorActionOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ErrorAction) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

type ErrorActionPtrOutput struct{ *pulumi.OutputState }

func (ErrorActionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ErrorAction)(nil)).Elem()
}

func (o ErrorActionPtrOutput) ToErrorActionPtrOutput() ErrorActionPtrOutput {
	return o
}

func (o ErrorActionPtrOutput) ToErrorActionPtrOutputWithContext(ctx context.Context) ErrorActionPtrOutput {
	return o
}

func (o ErrorActionPtrOutput) Elem() ErrorActionOutput {
	return o.ApplyT(func(v *ErrorAction) ErrorAction {
		if v != nil {
			return *v
		}
		var ret ErrorAction
		return ret
	}).(ErrorActionOutput)
}

// Max tolerated failures
func (o ErrorActionPtrOutput) MaxToleratedFailures() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ErrorAction) *int {
		if v == nil {
			return nil
		}
		return v.MaxToleratedFailures
	}).(pulumi.IntPtrOutput)
}

// Error action mode
func (o ErrorActionPtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ErrorAction) *string {
		if v == nil {
			return nil
		}
		return v.Mode
	}).(pulumi.StringPtrOutput)
}

// Error Action Properties
type ErrorActionResponse struct {
	// Max tolerated failures
	MaxToleratedFailures *int `pulumi:"maxToleratedFailures"`
	// Error action mode
	Mode *string `pulumi:"mode"`
}

// Defaults sets the appropriate defaults for ErrorActionResponse
func (val *ErrorActionResponse) Defaults() *ErrorActionResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Mode == nil {
		mode_ := "stopOnAnyFailure"
		tmp.Mode = &mode_
	}
	return &tmp
}

// Error Action Properties
type ErrorActionResponseOutput struct{ *pulumi.OutputState }

func (ErrorActionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ErrorActionResponse)(nil)).Elem()
}

func (o ErrorActionResponseOutput) ToErrorActionResponseOutput() ErrorActionResponseOutput {
	return o
}

func (o ErrorActionResponseOutput) ToErrorActionResponseOutputWithContext(ctx context.Context) ErrorActionResponseOutput {
	return o
}

// Max tolerated failures
func (o ErrorActionResponseOutput) MaxToleratedFailures() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ErrorActionResponse) *int { return v.MaxToleratedFailures }).(pulumi.IntPtrOutput)
}

// Error action mode
func (o ErrorActionResponseOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ErrorActionResponse) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

type ErrorActionResponsePtrOutput struct{ *pulumi.OutputState }

func (ErrorActionResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ErrorActionResponse)(nil)).Elem()
}

func (o ErrorActionResponsePtrOutput) ToErrorActionResponsePtrOutput() ErrorActionResponsePtrOutput {
	return o
}

func (o ErrorActionResponsePtrOutput) ToErrorActionResponsePtrOutputWithContext(ctx context.Context) ErrorActionResponsePtrOutput {
	return o
}

func (o ErrorActionResponsePtrOutput) Elem() ErrorActionResponseOutput {
	return o.ApplyT(func(v *ErrorActionResponse) ErrorActionResponse {
		if v != nil {
			return *v
		}
		var ret ErrorActionResponse
		return ret
	}).(ErrorActionResponseOutput)
}

// Max tolerated failures
func (o ErrorActionResponsePtrOutput) MaxToleratedFailures() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ErrorActionResponse) *int {
		if v == nil {
			return nil
		}
		return v.MaxToleratedFailures
	}).(pulumi.IntPtrOutput)
}

// Error action mode
func (o ErrorActionResponsePtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ErrorActionResponse) *string {
		if v == nil {
			return nil
		}
		return v.Mode
	}).(pulumi.StringPtrOutput)
}

// The resource management error additional info.
type ErrorAdditionalInfoResponse struct {
	// The additional info.
	Info interface{} `pulumi:"info"`
	// The additional info type.
	Type string `pulumi:"type"`
}

// The resource management error additional info.
type ErrorAdditionalInfoResponseOutput struct{ *pulumi.OutputState }

func (ErrorAdditionalInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ErrorAdditionalInfoResponse)(nil)).Elem()
}

func (o ErrorAdditionalInfoResponseOutput) ToErrorAdditionalInfoResponseOutput() ErrorAdditionalInfoResponseOutput {
	return o
}

func (o ErrorAdditionalInfoResponseOutput) ToErrorAdditionalInfoResponseOutputWithContext(ctx context.Context) ErrorAdditionalInfoResponseOutput {
	return o
}

// The additional info.
func (o ErrorAdditionalInfoResponseOutput) Info() pulumi.AnyOutput {
	return o.ApplyT(func(v ErrorAdditionalInfoResponse) interface{} { return v.Info }).(pulumi.AnyOutput)
}

// The additional info type.
func (o ErrorAdditionalInfoResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ErrorAdditionalInfoResponse) string { return v.Type }).(pulumi.StringOutput)
}

type ErrorAdditionalInfoResponseArrayOutput struct{ *pulumi.OutputState }

func (ErrorAdditionalInfoResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ErrorAdditionalInfoResponse)(nil)).Elem()
}

func (o ErrorAdditionalInfoResponseArrayOutput) ToErrorAdditionalInfoResponseArrayOutput() ErrorAdditionalInfoResponseArrayOutput {
	return o
}

func (o ErrorAdditionalInfoResponseArrayOutput) ToErrorAdditionalInfoResponseArrayOutputWithContext(ctx context.Context) ErrorAdditionalInfoResponseArrayOutput {
	return o
}

func (o ErrorAdditionalInfoResponseArrayOutput) Index(i pulumi.IntInput) ErrorAdditionalInfoResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ErrorAdditionalInfoResponse {
		return vs[0].([]ErrorAdditionalInfoResponse)[vs[1].(int)]
	}).(ErrorAdditionalInfoResponseOutput)
}

// The error detail.
type ErrorDetailResponse struct {
	// The error additional info.
	AdditionalInfo []ErrorAdditionalInfoResponse `pulumi:"additionalInfo"`
	// The error code.
	Code string `pulumi:"code"`
	// The error details.
	Details []ErrorDetailResponse `pulumi:"details"`
	// The error message.
	Message string `pulumi:"message"`
	// The error target.
	Target string `pulumi:"target"`
}

// The error detail.
type ErrorDetailResponseOutput struct{ *pulumi.OutputState }

func (ErrorDetailResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ErrorDetailResponse)(nil)).Elem()
}

func (o ErrorDetailResponseOutput) ToErrorDetailResponseOutput() ErrorDetailResponseOutput {
	return o
}

func (o ErrorDetailResponseOutput) ToErrorDetailResponseOutputWithContext(ctx context.Context) ErrorDetailResponseOutput {
	return o
}

// The error additional info.
func (o ErrorDetailResponseOutput) AdditionalInfo() ErrorAdditionalInfoResponseArrayOutput {
	return o.ApplyT(func(v ErrorDetailResponse) []ErrorAdditionalInfoResponse { return v.AdditionalInfo }).(ErrorAdditionalInfoResponseArrayOutput)
}

// The error code.
func (o ErrorDetailResponseOutput) Code() pulumi.StringOutput {
	return o.ApplyT(func(v ErrorDetailResponse) string { return v.Code }).(pulumi.StringOutput)
}

// The error details.
func (o ErrorDetailResponseOutput) Details() ErrorDetailResponseArrayOutput {
	return o.ApplyT(func(v ErrorDetailResponse) []ErrorDetailResponse { return v.Details }).(ErrorDetailResponseArrayOutput)
}

// The error message.
func (o ErrorDetailResponseOutput) Message() pulumi.StringOutput {
	return o.ApplyT(func(v ErrorDetailResponse) string { return v.Message }).(pulumi.StringOutput)
}

// The error target.
func (o ErrorDetailResponseOutput) Target() pulumi.StringOutput {
	return o.ApplyT(func(v ErrorDetailResponse) string { return v.Target }).(pulumi.StringOutput)
}

type ErrorDetailResponseArrayOutput struct{ *pulumi.OutputState }

func (ErrorDetailResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ErrorDetailResponse)(nil)).Elem()
}

func (o ErrorDetailResponseArrayOutput) ToErrorDetailResponseArrayOutput() ErrorDetailResponseArrayOutput {
	return o
}

func (o ErrorDetailResponseArrayOutput) ToErrorDetailResponseArrayOutputWithContext(ctx context.Context) ErrorDetailResponseArrayOutput {
	return o
}

func (o ErrorDetailResponseArrayOutput) Index(i pulumi.IntInput) ErrorDetailResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ErrorDetailResponse {
		return vs[0].([]ErrorDetailResponse)[vs[1].(int)]
	}).(ErrorDetailResponseOutput)
}

// Execution Properties
type ExecutionProperties struct {
	// Execution specification
	Specification interface{} `pulumi:"specification"`
	// Workflow version of execution
	WorkflowVersionId string `pulumi:"workflowVersionId"`
}

// ExecutionPropertiesInput is an input type that accepts ExecutionPropertiesArgs and ExecutionPropertiesOutput values.
// You can construct a concrete instance of `ExecutionPropertiesInput` via:
//
//	ExecutionPropertiesArgs{...}
type ExecutionPropertiesInput interface {
	pulumi.Input

	ToExecutionPropertiesOutput() ExecutionPropertiesOutput
	ToExecutionPropertiesOutputWithContext(context.Context) ExecutionPropertiesOutput
}

// Execution Properties
type ExecutionPropertiesArgs struct {
	// Execution specification
	Specification pulumi.Input `pulumi:"specification"`
	// Workflow version of execution
	WorkflowVersionId pulumi.StringInput `pulumi:"workflowVersionId"`
}

func (ExecutionPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExecutionProperties)(nil)).Elem()
}

func (i ExecutionPropertiesArgs) ToExecutionPropertiesOutput() ExecutionPropertiesOutput {
	return i.ToExecutionPropertiesOutputWithContext(context.Background())
}

func (i ExecutionPropertiesArgs) ToExecutionPropertiesOutputWithContext(ctx context.Context) ExecutionPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExecutionPropertiesOutput)
}

func (i ExecutionPropertiesArgs) ToExecutionPropertiesPtrOutput() ExecutionPropertiesPtrOutput {
	return i.ToExecutionPropertiesPtrOutputWithContext(context.Background())
}

func (i ExecutionPropertiesArgs) ToExecutionPropertiesPtrOutputWithContext(ctx context.Context) ExecutionPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExecutionPropertiesOutput).ToExecutionPropertiesPtrOutputWithContext(ctx)
}

// ExecutionPropertiesPtrInput is an input type that accepts ExecutionPropertiesArgs, ExecutionPropertiesPtr and ExecutionPropertiesPtrOutput values.
// You can construct a concrete instance of `ExecutionPropertiesPtrInput` via:
//
//	        ExecutionPropertiesArgs{...}
//
//	or:
//
//	        nil
type ExecutionPropertiesPtrInput interface {
	pulumi.Input

	ToExecutionPropertiesPtrOutput() ExecutionPropertiesPtrOutput
	ToExecutionPropertiesPtrOutputWithContext(context.Context) ExecutionPropertiesPtrOutput
}

type executionPropertiesPtrType ExecutionPropertiesArgs

func ExecutionPropertiesPtr(v *ExecutionPropertiesArgs) ExecutionPropertiesPtrInput {
	return (*executionPropertiesPtrType)(v)
}

func (*executionPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ExecutionProperties)(nil)).Elem()
}

func (i *executionPropertiesPtrType) ToExecutionPropertiesPtrOutput() ExecutionPropertiesPtrOutput {
	return i.ToExecutionPropertiesPtrOutputWithContext(context.Background())
}

func (i *executionPropertiesPtrType) ToExecutionPropertiesPtrOutputWithContext(ctx context.Context) ExecutionPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExecutionPropertiesPtrOutput)
}

// Execution Properties
type ExecutionPropertiesOutput struct{ *pulumi.OutputState }

func (ExecutionPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExecutionProperties)(nil)).Elem()
}

func (o ExecutionPropertiesOutput) ToExecutionPropertiesOutput() ExecutionPropertiesOutput {
	return o
}

func (o ExecutionPropertiesOutput) ToExecutionPropertiesOutputWithContext(ctx context.Context) ExecutionPropertiesOutput {
	return o
}

func (o ExecutionPropertiesOutput) ToExecutionPropertiesPtrOutput() ExecutionPropertiesPtrOutput {
	return o.ToExecutionPropertiesPtrOutputWithContext(context.Background())
}

func (o ExecutionPropertiesOutput) ToExecutionPropertiesPtrOutputWithContext(ctx context.Context) ExecutionPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ExecutionProperties) *ExecutionProperties {
		return &v
	}).(ExecutionPropertiesPtrOutput)
}

// Execution specification
func (o ExecutionPropertiesOutput) Specification() pulumi.AnyOutput {
	return o.ApplyT(func(v ExecutionProperties) interface{} { return v.Specification }).(pulumi.AnyOutput)
}

// Workflow version of execution
func (o ExecutionPropertiesOutput) WorkflowVersionId() pulumi.StringOutput {
	return o.ApplyT(func(v ExecutionProperties) string { return v.WorkflowVersionId }).(pulumi.StringOutput)
}

type ExecutionPropertiesPtrOutput struct{ *pulumi.OutputState }

func (ExecutionPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExecutionProperties)(nil)).Elem()
}

func (o ExecutionPropertiesPtrOutput) ToExecutionPropertiesPtrOutput() ExecutionPropertiesPtrOutput {
	return o
}

func (o ExecutionPropertiesPtrOutput) ToExecutionPropertiesPtrOutputWithContext(ctx context.Context) ExecutionPropertiesPtrOutput {
	return o
}

func (o ExecutionPropertiesPtrOutput) Elem() ExecutionPropertiesOutput {
	return o.ApplyT(func(v *ExecutionProperties) ExecutionProperties {
		if v != nil {
			return *v
		}
		var ret ExecutionProperties
		return ret
	}).(ExecutionPropertiesOutput)
}

// Execution specification
func (o ExecutionPropertiesPtrOutput) Specification() pulumi.AnyOutput {
	return o.ApplyT(func(v *ExecutionProperties) interface{} {
		if v == nil {
			return nil
		}
		return v.Specification
	}).(pulumi.AnyOutput)
}

// Workflow version of execution
func (o ExecutionPropertiesPtrOutput) WorkflowVersionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExecutionProperties) *string {
		if v == nil {
			return nil
		}
		return &v.WorkflowVersionId
	}).(pulumi.StringPtrOutput)
}

// Execution Properties
type ExecutionPropertiesResponse struct {
	// Provisioning state of resource
	ProvisioningState string `pulumi:"provisioningState"`
	// Execution specification
	Specification interface{} `pulumi:"specification"`
	// Status of Execution
	Status ExecutionStatusResponse `pulumi:"status"`
	// Workflow version of execution
	WorkflowVersionId string `pulumi:"workflowVersionId"`
}

// Execution Properties
type ExecutionPropertiesResponseOutput struct{ *pulumi.OutputState }

func (ExecutionPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExecutionPropertiesResponse)(nil)).Elem()
}

func (o ExecutionPropertiesResponseOutput) ToExecutionPropertiesResponseOutput() ExecutionPropertiesResponseOutput {
	return o
}

func (o ExecutionPropertiesResponseOutput) ToExecutionPropertiesResponseOutputWithContext(ctx context.Context) ExecutionPropertiesResponseOutput {
	return o
}

// Provisioning state of resource
func (o ExecutionPropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v ExecutionPropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Execution specification
func (o ExecutionPropertiesResponseOutput) Specification() pulumi.AnyOutput {
	return o.ApplyT(func(v ExecutionPropertiesResponse) interface{} { return v.Specification }).(pulumi.AnyOutput)
}

// Status of Execution
func (o ExecutionPropertiesResponseOutput) Status() ExecutionStatusResponseOutput {
	return o.ApplyT(func(v ExecutionPropertiesResponse) ExecutionStatusResponse { return v.Status }).(ExecutionStatusResponseOutput)
}

// Workflow version of execution
func (o ExecutionPropertiesResponseOutput) WorkflowVersionId() pulumi.StringOutput {
	return o.ApplyT(func(v ExecutionPropertiesResponse) string { return v.WorkflowVersionId }).(pulumi.StringOutput)
}

// Execution Status
type ExecutionStatusResponse struct {
	// target resource statuses
	StageHistory []StageStatusResponse `pulumi:"stageHistory"`
	// Deployment status
	Status *int `pulumi:"status"`
	// status details
	StatusMessage *string `pulumi:"statusMessage"`
	// The lastModified timestamp of the Status
	UpdateTime *string `pulumi:"updateTime"`
}

// Execution Status
type ExecutionStatusResponseOutput struct{ *pulumi.OutputState }

func (ExecutionStatusResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExecutionStatusResponse)(nil)).Elem()
}

func (o ExecutionStatusResponseOutput) ToExecutionStatusResponseOutput() ExecutionStatusResponseOutput {
	return o
}

func (o ExecutionStatusResponseOutput) ToExecutionStatusResponseOutputWithContext(ctx context.Context) ExecutionStatusResponseOutput {
	return o
}

// target resource statuses
func (o ExecutionStatusResponseOutput) StageHistory() StageStatusResponseArrayOutput {
	return o.ApplyT(func(v ExecutionStatusResponse) []StageStatusResponse { return v.StageHistory }).(StageStatusResponseArrayOutput)
}

// Deployment status
func (o ExecutionStatusResponseOutput) Status() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ExecutionStatusResponse) *int { return v.Status }).(pulumi.IntPtrOutput)
}

// status details
func (o ExecutionStatusResponseOutput) StatusMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExecutionStatusResponse) *string { return v.StatusMessage }).(pulumi.StringPtrOutput)
}

// The lastModified timestamp of the Status
func (o ExecutionStatusResponseOutput) UpdateTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExecutionStatusResponse) *string { return v.UpdateTime }).(pulumi.StringPtrOutput)
}

// Hierarchy, to tag Sites / Hierarchy Provider nodes with what they represent
type Hierarchy struct {
	// Description of Hierarchy
	Description string `pulumi:"description"`
	// Name of Hierarchy
	Name string `pulumi:"name"`
}

// HierarchyInput is an input type that accepts HierarchyArgs and HierarchyOutput values.
// You can construct a concrete instance of `HierarchyInput` via:
//
//	HierarchyArgs{...}
type HierarchyInput interface {
	pulumi.Input

	ToHierarchyOutput() HierarchyOutput
	ToHierarchyOutputWithContext(context.Context) HierarchyOutput
}

// Hierarchy, to tag Sites / Hierarchy Provider nodes with what they represent
type HierarchyArgs struct {
	// Description of Hierarchy
	Description pulumi.StringInput `pulumi:"description"`
	// Name of Hierarchy
	Name pulumi.StringInput `pulumi:"name"`
}

func (HierarchyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Hierarchy)(nil)).Elem()
}

func (i HierarchyArgs) ToHierarchyOutput() HierarchyOutput {
	return i.ToHierarchyOutputWithContext(context.Background())
}

func (i HierarchyArgs) ToHierarchyOutputWithContext(ctx context.Context) HierarchyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyOutput)
}

// HierarchyArrayInput is an input type that accepts HierarchyArray and HierarchyArrayOutput values.
// You can construct a concrete instance of `HierarchyArrayInput` via:
//
//	HierarchyArray{ HierarchyArgs{...} }
type HierarchyArrayInput interface {
	pulumi.Input

	ToHierarchyArrayOutput() HierarchyArrayOutput
	ToHierarchyArrayOutputWithContext(context.Context) HierarchyArrayOutput
}

type HierarchyArray []HierarchyInput

func (HierarchyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Hierarchy)(nil)).Elem()
}

func (i HierarchyArray) ToHierarchyArrayOutput() HierarchyArrayOutput {
	return i.ToHierarchyArrayOutputWithContext(context.Background())
}

func (i HierarchyArray) ToHierarchyArrayOutputWithContext(ctx context.Context) HierarchyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyArrayOutput)
}

// Hierarchy, to tag Sites / Hierarchy Provider nodes with what they represent
type HierarchyOutput struct{ *pulumi.OutputState }

func (HierarchyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Hierarchy)(nil)).Elem()
}

func (o HierarchyOutput) ToHierarchyOutput() HierarchyOutput {
	return o
}

func (o HierarchyOutput) ToHierarchyOutputWithContext(ctx context.Context) HierarchyOutput {
	return o
}

// Description of Hierarchy
func (o HierarchyOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v Hierarchy) string { return v.Description }).(pulumi.StringOutput)
}

// Name of Hierarchy
func (o HierarchyOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v Hierarchy) string { return v.Name }).(pulumi.StringOutput)
}

type HierarchyArrayOutput struct{ *pulumi.OutputState }

func (HierarchyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Hierarchy)(nil)).Elem()
}

func (o HierarchyArrayOutput) ToHierarchyArrayOutput() HierarchyArrayOutput {
	return o
}

func (o HierarchyArrayOutput) ToHierarchyArrayOutputWithContext(ctx context.Context) HierarchyArrayOutput {
	return o
}

func (o HierarchyArrayOutput) Index(i pulumi.IntInput) HierarchyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Hierarchy {
		return vs[0].([]Hierarchy)[vs[1].(int)]
	}).(HierarchyOutput)
}

// Hierarchy, to tag Sites / Hierarchy Provider nodes with what they represent
type HierarchyResponse struct {
	// Description of Hierarchy
	Description string `pulumi:"description"`
	// Name of Hierarchy
	Name string `pulumi:"name"`
}

// Hierarchy, to tag Sites / Hierarchy Provider nodes with what they represent
type HierarchyResponseOutput struct{ *pulumi.OutputState }

func (HierarchyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HierarchyResponse)(nil)).Elem()
}

func (o HierarchyResponseOutput) ToHierarchyResponseOutput() HierarchyResponseOutput {
	return o
}

func (o HierarchyResponseOutput) ToHierarchyResponseOutputWithContext(ctx context.Context) HierarchyResponseOutput {
	return o
}

// Description of Hierarchy
func (o HierarchyResponseOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v HierarchyResponse) string { return v.Description }).(pulumi.StringOutput)
}

// Name of Hierarchy
func (o HierarchyResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v HierarchyResponse) string { return v.Name }).(pulumi.StringOutput)
}

type HierarchyResponseArrayOutput struct{ *pulumi.OutputState }

func (HierarchyResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HierarchyResponse)(nil)).Elem()
}

func (o HierarchyResponseArrayOutput) ToHierarchyResponseArrayOutput() HierarchyResponseArrayOutput {
	return o
}

func (o HierarchyResponseArrayOutput) ToHierarchyResponseArrayOutputWithContext(ctx context.Context) HierarchyResponseArrayOutput {
	return o
}

func (o HierarchyResponseArrayOutput) Index(i pulumi.IntInput) HierarchyResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) HierarchyResponse {
		return vs[0].([]HierarchyResponse)[vs[1].(int)]
	}).(HierarchyResponseOutput)
}

// Instance Properties
type InstanceProperties struct {
	// State of instance
	ActiveState *string `pulumi:"activeState"`
	// Reconciliation policy of instance
	ReconciliationPolicy *ReconciliationPolicyProperties `pulumi:"reconciliationPolicy"`
	// Scope of instance
	SolutionScope *string `pulumi:"solutionScope"`
	// Solution version of instance
	SolutionVersionId string `pulumi:"solutionVersionId"`
	// Target of instance
	TargetId string `pulumi:"targetId"`
}

// InstancePropertiesInput is an input type that accepts InstancePropertiesArgs and InstancePropertiesOutput values.
// You can construct a concrete instance of `InstancePropertiesInput` via:
//
//	InstancePropertiesArgs{...}
type InstancePropertiesInput interface {
	pulumi.Input

	ToInstancePropertiesOutput() InstancePropertiesOutput
	ToInstancePropertiesOutputWithContext(context.Context) InstancePropertiesOutput
}

// Instance Properties
type InstancePropertiesArgs struct {
	// State of instance
	ActiveState pulumi.StringPtrInput `pulumi:"activeState"`
	// Reconciliation policy of instance
	ReconciliationPolicy ReconciliationPolicyPropertiesPtrInput `pulumi:"reconciliationPolicy"`
	// Scope of instance
	SolutionScope pulumi.StringPtrInput `pulumi:"solutionScope"`
	// Solution version of instance
	SolutionVersionId pulumi.StringInput `pulumi:"solutionVersionId"`
	// Target of instance
	TargetId pulumi.StringInput `pulumi:"targetId"`
}

func (InstancePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceProperties)(nil)).Elem()
}

func (i InstancePropertiesArgs) ToInstancePropertiesOutput() InstancePropertiesOutput {
	return i.ToInstancePropertiesOutputWithContext(context.Background())
}

func (i InstancePropertiesArgs) ToInstancePropertiesOutputWithContext(ctx context.Context) InstancePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstancePropertiesOutput)
}

func (i InstancePropertiesArgs) ToInstancePropertiesPtrOutput() InstancePropertiesPtrOutput {
	return i.ToInstancePropertiesPtrOutputWithContext(context.Background())
}

func (i InstancePropertiesArgs) ToInstancePropertiesPtrOutputWithContext(ctx context.Context) InstancePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstancePropertiesOutput).ToInstancePropertiesPtrOutputWithContext(ctx)
}

// InstancePropertiesPtrInput is an input type that accepts InstancePropertiesArgs, InstancePropertiesPtr and InstancePropertiesPtrOutput values.
// You can construct a concrete instance of `InstancePropertiesPtrInput` via:
//
//	        InstancePropertiesArgs{...}
//
//	or:
//
//	        nil
type InstancePropertiesPtrInput interface {
	pulumi.Input

	ToInstancePropertiesPtrOutput() InstancePropertiesPtrOutput
	ToInstancePropertiesPtrOutputWithContext(context.Context) InstancePropertiesPtrOutput
}

type instancePropertiesPtrType InstancePropertiesArgs

func InstancePropertiesPtr(v *InstancePropertiesArgs) InstancePropertiesPtrInput {
	return (*instancePropertiesPtrType)(v)
}

func (*instancePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceProperties)(nil)).Elem()
}

func (i *instancePropertiesPtrType) ToInstancePropertiesPtrOutput() InstancePropertiesPtrOutput {
	return i.ToInstancePropertiesPtrOutputWithContext(context.Background())
}

func (i *instancePropertiesPtrType) ToInstancePropertiesPtrOutputWithContext(ctx context.Context) InstancePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstancePropertiesPtrOutput)
}

// Instance Properties
type InstancePropertiesOutput struct{ *pulumi.OutputState }

func (InstancePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceProperties)(nil)).Elem()
}

func (o InstancePropertiesOutput) ToInstancePropertiesOutput() InstancePropertiesOutput {
	return o
}

func (o InstancePropertiesOutput) ToInstancePropertiesOutputWithContext(ctx context.Context) InstancePropertiesOutput {
	return o
}

func (o InstancePropertiesOutput) ToInstancePropertiesPtrOutput() InstancePropertiesPtrOutput {
	return o.ToInstancePropertiesPtrOutputWithContext(context.Background())
}

func (o InstancePropertiesOutput) ToInstancePropertiesPtrOutputWithContext(ctx context.Context) InstancePropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InstanceProperties) *InstanceProperties {
		return &v
	}).(InstancePropertiesPtrOutput)
}

// State of instance
func (o InstancePropertiesOutput) ActiveState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceProperties) *string { return v.ActiveState }).(pulumi.StringPtrOutput)
}

// Reconciliation policy of instance
func (o InstancePropertiesOutput) ReconciliationPolicy() ReconciliationPolicyPropertiesPtrOutput {
	return o.ApplyT(func(v InstanceProperties) *ReconciliationPolicyProperties { return v.ReconciliationPolicy }).(ReconciliationPolicyPropertiesPtrOutput)
}

// Scope of instance
func (o InstancePropertiesOutput) SolutionScope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceProperties) *string { return v.SolutionScope }).(pulumi.StringPtrOutput)
}

// Solution version of instance
func (o InstancePropertiesOutput) SolutionVersionId() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceProperties) string { return v.SolutionVersionId }).(pulumi.StringOutput)
}

// Target of instance
func (o InstancePropertiesOutput) TargetId() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceProperties) string { return v.TargetId }).(pulumi.StringOutput)
}

type InstancePropertiesPtrOutput struct{ *pulumi.OutputState }

func (InstancePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceProperties)(nil)).Elem()
}

func (o InstancePropertiesPtrOutput) ToInstancePropertiesPtrOutput() InstancePropertiesPtrOutput {
	return o
}

func (o InstancePropertiesPtrOutput) ToInstancePropertiesPtrOutputWithContext(ctx context.Context) InstancePropertiesPtrOutput {
	return o
}

func (o InstancePropertiesPtrOutput) Elem() InstancePropertiesOutput {
	return o.ApplyT(func(v *InstanceProperties) InstanceProperties {
		if v != nil {
			return *v
		}
		var ret InstanceProperties
		return ret
	}).(InstancePropertiesOutput)
}

// State of instance
func (o InstancePropertiesPtrOutput) ActiveState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceProperties) *string {
		if v == nil {
			return nil
		}
		return v.ActiveState
	}).(pulumi.StringPtrOutput)
}

// Reconciliation policy of instance
func (o InstancePropertiesPtrOutput) ReconciliationPolicy() ReconciliationPolicyPropertiesPtrOutput {
	return o.ApplyT(func(v *InstanceProperties) *ReconciliationPolicyProperties {
		if v == nil {
			return nil
		}
		return v.ReconciliationPolicy
	}).(ReconciliationPolicyPropertiesPtrOutput)
}

// Scope of instance
func (o InstancePropertiesPtrOutput) SolutionScope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceProperties) *string {
		if v == nil {
			return nil
		}
		return v.SolutionScope
	}).(pulumi.StringPtrOutput)
}

// Solution version of instance
func (o InstancePropertiesPtrOutput) SolutionVersionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceProperties) *string {
		if v == nil {
			return nil
		}
		return &v.SolutionVersionId
	}).(pulumi.StringPtrOutput)
}

// Target of instance
func (o InstancePropertiesPtrOutput) TargetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceProperties) *string {
		if v == nil {
			return nil
		}
		return &v.TargetId
	}).(pulumi.StringPtrOutput)
}

// Instance Properties
type InstancePropertiesResponse struct {
	// State of instance
	ActiveState *string `pulumi:"activeState"`
	// Deployment timestamp of instance
	DeploymentTimestampEpoch float64 `pulumi:"deploymentTimestampEpoch"`
	// Provisioning state of resource
	ProvisioningState string `pulumi:"provisioningState"`
	// Reconciliation policy of instance
	ReconciliationPolicy *ReconciliationPolicyPropertiesResponse `pulumi:"reconciliationPolicy"`
	// Scope of instance
	SolutionScope *string `pulumi:"solutionScope"`
	// Solution version of instance
	SolutionVersionId string `pulumi:"solutionVersionId"`
	// Status of instance
	Status DeploymentStatusResponse `pulumi:"status"`
	// Target of instance
	TargetId string `pulumi:"targetId"`
}

// Instance Properties
type InstancePropertiesResponseOutput struct{ *pulumi.OutputState }

func (InstancePropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstancePropertiesResponse)(nil)).Elem()
}

func (o InstancePropertiesResponseOutput) ToInstancePropertiesResponseOutput() InstancePropertiesResponseOutput {
	return o
}

func (o InstancePropertiesResponseOutput) ToInstancePropertiesResponseOutputWithContext(ctx context.Context) InstancePropertiesResponseOutput {
	return o
}

// State of instance
func (o InstancePropertiesResponseOutput) ActiveState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstancePropertiesResponse) *string { return v.ActiveState }).(pulumi.StringPtrOutput)
}

// Deployment timestamp of instance
func (o InstancePropertiesResponseOutput) DeploymentTimestampEpoch() pulumi.Float64Output {
	return o.ApplyT(func(v InstancePropertiesResponse) float64 { return v.DeploymentTimestampEpoch }).(pulumi.Float64Output)
}

// Provisioning state of resource
func (o InstancePropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v InstancePropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Reconciliation policy of instance
func (o InstancePropertiesResponseOutput) ReconciliationPolicy() ReconciliationPolicyPropertiesResponsePtrOutput {
	return o.ApplyT(func(v InstancePropertiesResponse) *ReconciliationPolicyPropertiesResponse {
		return v.ReconciliationPolicy
	}).(ReconciliationPolicyPropertiesResponsePtrOutput)
}

// Scope of instance
func (o InstancePropertiesResponseOutput) SolutionScope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstancePropertiesResponse) *string { return v.SolutionScope }).(pulumi.StringPtrOutput)
}

// Solution version of instance
func (o InstancePropertiesResponseOutput) SolutionVersionId() pulumi.StringOutput {
	return o.ApplyT(func(v InstancePropertiesResponse) string { return v.SolutionVersionId }).(pulumi.StringOutput)
}

// Status of instance
func (o InstancePropertiesResponseOutput) Status() DeploymentStatusResponseOutput {
	return o.ApplyT(func(v InstancePropertiesResponse) DeploymentStatusResponse { return v.Status }).(DeploymentStatusResponseOutput)
}

// Target of instance
func (o InstancePropertiesResponseOutput) TargetId() pulumi.StringOutput {
	return o.ApplyT(func(v InstancePropertiesResponse) string { return v.TargetId }).(pulumi.StringOutput)
}

// Defines a ReconciliationPolicy
type ReconciliationPolicyProperties struct {
	// Policy interval
	Interval string `pulumi:"interval"`
	// The state of the ReconciliationPolicy
	State string `pulumi:"state"`
}

// ReconciliationPolicyPropertiesInput is an input type that accepts ReconciliationPolicyPropertiesArgs and ReconciliationPolicyPropertiesOutput values.
// You can construct a concrete instance of `ReconciliationPolicyPropertiesInput` via:
//
//	ReconciliationPolicyPropertiesArgs{...}
type ReconciliationPolicyPropertiesInput interface {
	pulumi.Input

	ToReconciliationPolicyPropertiesOutput() ReconciliationPolicyPropertiesOutput
	ToReconciliationPolicyPropertiesOutputWithContext(context.Context) ReconciliationPolicyPropertiesOutput
}

// Defines a ReconciliationPolicy
type ReconciliationPolicyPropertiesArgs struct {
	// Policy interval
	Interval pulumi.StringInput `pulumi:"interval"`
	// The state of the ReconciliationPolicy
	State pulumi.StringInput `pulumi:"state"`
}

func (ReconciliationPolicyPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ReconciliationPolicyProperties)(nil)).Elem()
}

func (i ReconciliationPolicyPropertiesArgs) ToReconciliationPolicyPropertiesOutput() ReconciliationPolicyPropertiesOutput {
	return i.ToReconciliationPolicyPropertiesOutputWithContext(context.Background())
}

func (i ReconciliationPolicyPropertiesArgs) ToReconciliationPolicyPropertiesOutputWithContext(ctx context.Context) ReconciliationPolicyPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReconciliationPolicyPropertiesOutput)
}

func (i ReconciliationPolicyPropertiesArgs) ToReconciliationPolicyPropertiesPtrOutput() ReconciliationPolicyPropertiesPtrOutput {
	return i.ToReconciliationPolicyPropertiesPtrOutputWithContext(context.Background())
}

func (i ReconciliationPolicyPropertiesArgs) ToReconciliationPolicyPropertiesPtrOutputWithContext(ctx context.Context) ReconciliationPolicyPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReconciliationPolicyPropertiesOutput).ToReconciliationPolicyPropertiesPtrOutputWithContext(ctx)
}

// ReconciliationPolicyPropertiesPtrInput is an input type that accepts ReconciliationPolicyPropertiesArgs, ReconciliationPolicyPropertiesPtr and ReconciliationPolicyPropertiesPtrOutput values.
// You can construct a concrete instance of `ReconciliationPolicyPropertiesPtrInput` via:
//
//	        ReconciliationPolicyPropertiesArgs{...}
//
//	or:
//
//	        nil
type ReconciliationPolicyPropertiesPtrInput interface {
	pulumi.Input

	ToReconciliationPolicyPropertiesPtrOutput() ReconciliationPolicyPropertiesPtrOutput
	ToReconciliationPolicyPropertiesPtrOutputWithContext(context.Context) ReconciliationPolicyPropertiesPtrOutput
}

type reconciliationPolicyPropertiesPtrType ReconciliationPolicyPropertiesArgs

func ReconciliationPolicyPropertiesPtr(v *ReconciliationPolicyPropertiesArgs) ReconciliationPolicyPropertiesPtrInput {
	return (*reconciliationPolicyPropertiesPtrType)(v)
}

func (*reconciliationPolicyPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ReconciliationPolicyProperties)(nil)).Elem()
}

func (i *reconciliationPolicyPropertiesPtrType) ToReconciliationPolicyPropertiesPtrOutput() ReconciliationPolicyPropertiesPtrOutput {
	return i.ToReconciliationPolicyPropertiesPtrOutputWithContext(context.Background())
}

func (i *reconciliationPolicyPropertiesPtrType) ToReconciliationPolicyPropertiesPtrOutputWithContext(ctx context.Context) ReconciliationPolicyPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReconciliationPolicyPropertiesPtrOutput)
}

// Defines a ReconciliationPolicy
type ReconciliationPolicyPropertiesOutput struct{ *pulumi.OutputState }

func (ReconciliationPolicyPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReconciliationPolicyProperties)(nil)).Elem()
}

func (o ReconciliationPolicyPropertiesOutput) ToReconciliationPolicyPropertiesOutput() ReconciliationPolicyPropertiesOutput {
	return o
}

func (o ReconciliationPolicyPropertiesOutput) ToReconciliationPolicyPropertiesOutputWithContext(ctx context.Context) ReconciliationPolicyPropertiesOutput {
	return o
}

func (o ReconciliationPolicyPropertiesOutput) ToReconciliationPolicyPropertiesPtrOutput() ReconciliationPolicyPropertiesPtrOutput {
	return o.ToReconciliationPolicyPropertiesPtrOutputWithContext(context.Background())
}

func (o ReconciliationPolicyPropertiesOutput) ToReconciliationPolicyPropertiesPtrOutputWithContext(ctx context.Context) ReconciliationPolicyPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ReconciliationPolicyProperties) *ReconciliationPolicyProperties {
		return &v
	}).(ReconciliationPolicyPropertiesPtrOutput)
}

// Policy interval
func (o ReconciliationPolicyPropertiesOutput) Interval() pulumi.StringOutput {
	return o.ApplyT(func(v ReconciliationPolicyProperties) string { return v.Interval }).(pulumi.StringOutput)
}

// The state of the ReconciliationPolicy
func (o ReconciliationPolicyPropertiesOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v ReconciliationPolicyProperties) string { return v.State }).(pulumi.StringOutput)
}

type ReconciliationPolicyPropertiesPtrOutput struct{ *pulumi.OutputState }

func (ReconciliationPolicyPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ReconciliationPolicyProperties)(nil)).Elem()
}

func (o ReconciliationPolicyPropertiesPtrOutput) ToReconciliationPolicyPropertiesPtrOutput() ReconciliationPolicyPropertiesPtrOutput {
	return o
}

func (o ReconciliationPolicyPropertiesPtrOutput) ToReconciliationPolicyPropertiesPtrOutputWithContext(ctx context.Context) ReconciliationPolicyPropertiesPtrOutput {
	return o
}

func (o ReconciliationPolicyPropertiesPtrOutput) Elem() ReconciliationPolicyPropertiesOutput {
	return o.ApplyT(func(v *ReconciliationPolicyProperties) ReconciliationPolicyProperties {
		if v != nil {
			return *v
		}
		var ret ReconciliationPolicyProperties
		return ret
	}).(ReconciliationPolicyPropertiesOutput)
}

// Policy interval
func (o ReconciliationPolicyPropertiesPtrOutput) Interval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReconciliationPolicyProperties) *string {
		if v == nil {
			return nil
		}
		return &v.Interval
	}).(pulumi.StringPtrOutput)
}

// The state of the ReconciliationPolicy
func (o ReconciliationPolicyPropertiesPtrOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReconciliationPolicyProperties) *string {
		if v == nil {
			return nil
		}
		return &v.State
	}).(pulumi.StringPtrOutput)
}

// Defines a ReconciliationPolicy
type ReconciliationPolicyPropertiesResponse struct {
	// Policy interval
	Interval string `pulumi:"interval"`
	// The state of the ReconciliationPolicy
	State string `pulumi:"state"`
}

// Defines a ReconciliationPolicy
type ReconciliationPolicyPropertiesResponseOutput struct{ *pulumi.OutputState }

func (ReconciliationPolicyPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReconciliationPolicyPropertiesResponse)(nil)).Elem()
}

func (o ReconciliationPolicyPropertiesResponseOutput) ToReconciliationPolicyPropertiesResponseOutput() ReconciliationPolicyPropertiesResponseOutput {
	return o
}

func (o ReconciliationPolicyPropertiesResponseOutput) ToReconciliationPolicyPropertiesResponseOutputWithContext(ctx context.Context) ReconciliationPolicyPropertiesResponseOutput {
	return o
}

// Policy interval
func (o ReconciliationPolicyPropertiesResponseOutput) Interval() pulumi.StringOutput {
	return o.ApplyT(func(v ReconciliationPolicyPropertiesResponse) string { return v.Interval }).(pulumi.StringOutput)
}

// The state of the ReconciliationPolicy
func (o ReconciliationPolicyPropertiesResponseOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v ReconciliationPolicyPropertiesResponse) string { return v.State }).(pulumi.StringOutput)
}

type ReconciliationPolicyPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (ReconciliationPolicyPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ReconciliationPolicyPropertiesResponse)(nil)).Elem()
}

func (o ReconciliationPolicyPropertiesResponsePtrOutput) ToReconciliationPolicyPropertiesResponsePtrOutput() ReconciliationPolicyPropertiesResponsePtrOutput {
	return o
}

func (o ReconciliationPolicyPropertiesResponsePtrOutput) ToReconciliationPolicyPropertiesResponsePtrOutputWithContext(ctx context.Context) ReconciliationPolicyPropertiesResponsePtrOutput {
	return o
}

func (o ReconciliationPolicyPropertiesResponsePtrOutput) Elem() ReconciliationPolicyPropertiesResponseOutput {
	return o.ApplyT(func(v *ReconciliationPolicyPropertiesResponse) ReconciliationPolicyPropertiesResponse {
		if v != nil {
			return *v
		}
		var ret ReconciliationPolicyPropertiesResponse
		return ret
	}).(ReconciliationPolicyPropertiesResponseOutput)
}

// Policy interval
func (o ReconciliationPolicyPropertiesResponsePtrOutput) Interval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReconciliationPolicyPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Interval
	}).(pulumi.StringPtrOutput)
}

// The state of the ReconciliationPolicy
func (o ReconciliationPolicyPropertiesResponsePtrOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReconciliationPolicyPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.State
	}).(pulumi.StringPtrOutput)
}

// Schema Properties
type SchemaPropertiesResponse struct {
	// Current Version of schema
	CurrentVersion string `pulumi:"currentVersion"`
	// Provisioning state of resource
	ProvisioningState string `pulumi:"provisioningState"`
}

// Schema Properties
type SchemaPropertiesResponseOutput struct{ *pulumi.OutputState }

func (SchemaPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SchemaPropertiesResponse)(nil)).Elem()
}

func (o SchemaPropertiesResponseOutput) ToSchemaPropertiesResponseOutput() SchemaPropertiesResponseOutput {
	return o
}

func (o SchemaPropertiesResponseOutput) ToSchemaPropertiesResponseOutputWithContext(ctx context.Context) SchemaPropertiesResponseOutput {
	return o
}

// Current Version of schema
func (o SchemaPropertiesResponseOutput) CurrentVersion() pulumi.StringOutput {
	return o.ApplyT(func(v SchemaPropertiesResponse) string { return v.CurrentVersion }).(pulumi.StringOutput)
}

// Provisioning state of resource
func (o SchemaPropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v SchemaPropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Schema Reference Properties
type SchemaReferenceProperties struct {
	// Schema Id of schema reference
	SchemaId string `pulumi:"schemaId"`
}

// SchemaReferencePropertiesInput is an input type that accepts SchemaReferencePropertiesArgs and SchemaReferencePropertiesOutput values.
// You can construct a concrete instance of `SchemaReferencePropertiesInput` via:
//
//	SchemaReferencePropertiesArgs{...}
type SchemaReferencePropertiesInput interface {
	pulumi.Input

	ToSchemaReferencePropertiesOutput() SchemaReferencePropertiesOutput
	ToSchemaReferencePropertiesOutputWithContext(context.Context) SchemaReferencePropertiesOutput
}

// Schema Reference Properties
type SchemaReferencePropertiesArgs struct {
	// Schema Id of schema reference
	SchemaId pulumi.StringInput `pulumi:"schemaId"`
}

func (SchemaReferencePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SchemaReferenceProperties)(nil)).Elem()
}

func (i SchemaReferencePropertiesArgs) ToSchemaReferencePropertiesOutput() SchemaReferencePropertiesOutput {
	return i.ToSchemaReferencePropertiesOutputWithContext(context.Background())
}

func (i SchemaReferencePropertiesArgs) ToSchemaReferencePropertiesOutputWithContext(ctx context.Context) SchemaReferencePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SchemaReferencePropertiesOutput)
}

func (i SchemaReferencePropertiesArgs) ToSchemaReferencePropertiesPtrOutput() SchemaReferencePropertiesPtrOutput {
	return i.ToSchemaReferencePropertiesPtrOutputWithContext(context.Background())
}

func (i SchemaReferencePropertiesArgs) ToSchemaReferencePropertiesPtrOutputWithContext(ctx context.Context) SchemaReferencePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SchemaReferencePropertiesOutput).ToSchemaReferencePropertiesPtrOutputWithContext(ctx)
}

// SchemaReferencePropertiesPtrInput is an input type that accepts SchemaReferencePropertiesArgs, SchemaReferencePropertiesPtr and SchemaReferencePropertiesPtrOutput values.
// You can construct a concrete instance of `SchemaReferencePropertiesPtrInput` via:
//
//	        SchemaReferencePropertiesArgs{...}
//
//	or:
//
//	        nil
type SchemaReferencePropertiesPtrInput interface {
	pulumi.Input

	ToSchemaReferencePropertiesPtrOutput() SchemaReferencePropertiesPtrOutput
	ToSchemaReferencePropertiesPtrOutputWithContext(context.Context) SchemaReferencePropertiesPtrOutput
}

type schemaReferencePropertiesPtrType SchemaReferencePropertiesArgs

func SchemaReferencePropertiesPtr(v *SchemaReferencePropertiesArgs) SchemaReferencePropertiesPtrInput {
	return (*schemaReferencePropertiesPtrType)(v)
}

func (*schemaReferencePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SchemaReferenceProperties)(nil)).Elem()
}

func (i *schemaReferencePropertiesPtrType) ToSchemaReferencePropertiesPtrOutput() SchemaReferencePropertiesPtrOutput {
	return i.ToSchemaReferencePropertiesPtrOutputWithContext(context.Background())
}

func (i *schemaReferencePropertiesPtrType) ToSchemaReferencePropertiesPtrOutputWithContext(ctx context.Context) SchemaReferencePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SchemaReferencePropertiesPtrOutput)
}

// Schema Reference Properties
type SchemaReferencePropertiesOutput struct{ *pulumi.OutputState }

func (SchemaReferencePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SchemaReferenceProperties)(nil)).Elem()
}

func (o SchemaReferencePropertiesOutput) ToSchemaReferencePropertiesOutput() SchemaReferencePropertiesOutput {
	return o
}

func (o SchemaReferencePropertiesOutput) ToSchemaReferencePropertiesOutputWithContext(ctx context.Context) SchemaReferencePropertiesOutput {
	return o
}

func (o SchemaReferencePropertiesOutput) ToSchemaReferencePropertiesPtrOutput() SchemaReferencePropertiesPtrOutput {
	return o.ToSchemaReferencePropertiesPtrOutputWithContext(context.Background())
}

func (o SchemaReferencePropertiesOutput) ToSchemaReferencePropertiesPtrOutputWithContext(ctx context.Context) SchemaReferencePropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SchemaReferenceProperties) *SchemaReferenceProperties {
		return &v
	}).(SchemaReferencePropertiesPtrOutput)
}

// Schema Id of schema reference
func (o SchemaReferencePropertiesOutput) SchemaId() pulumi.StringOutput {
	return o.ApplyT(func(v SchemaReferenceProperties) string { return v.SchemaId }).(pulumi.StringOutput)
}

type SchemaReferencePropertiesPtrOutput struct{ *pulumi.OutputState }

func (SchemaReferencePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SchemaReferenceProperties)(nil)).Elem()
}

func (o SchemaReferencePropertiesPtrOutput) ToSchemaReferencePropertiesPtrOutput() SchemaReferencePropertiesPtrOutput {
	return o
}

func (o SchemaReferencePropertiesPtrOutput) ToSchemaReferencePropertiesPtrOutputWithContext(ctx context.Context) SchemaReferencePropertiesPtrOutput {
	return o
}

func (o SchemaReferencePropertiesPtrOutput) Elem() SchemaReferencePropertiesOutput {
	return o.ApplyT(func(v *SchemaReferenceProperties) SchemaReferenceProperties {
		if v != nil {
			return *v
		}
		var ret SchemaReferenceProperties
		return ret
	}).(SchemaReferencePropertiesOutput)
}

// Schema Id of schema reference
func (o SchemaReferencePropertiesPtrOutput) SchemaId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SchemaReferenceProperties) *string {
		if v == nil {
			return nil
		}
		return &v.SchemaId
	}).(pulumi.StringPtrOutput)
}

// Schema Reference Properties
type SchemaReferencePropertiesResponse struct {
	// Provisioning state of resource
	ProvisioningState string `pulumi:"provisioningState"`
	// Schema Id of schema reference
	SchemaId string `pulumi:"schemaId"`
}

// Schema Reference Properties
type SchemaReferencePropertiesResponseOutput struct{ *pulumi.OutputState }

func (SchemaReferencePropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SchemaReferencePropertiesResponse)(nil)).Elem()
}

func (o SchemaReferencePropertiesResponseOutput) ToSchemaReferencePropertiesResponseOutput() SchemaReferencePropertiesResponseOutput {
	return o
}

func (o SchemaReferencePropertiesResponseOutput) ToSchemaReferencePropertiesResponseOutputWithContext(ctx context.Context) SchemaReferencePropertiesResponseOutput {
	return o
}

// Provisioning state of resource
func (o SchemaReferencePropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v SchemaReferencePropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Schema Id of schema reference
func (o SchemaReferencePropertiesResponseOutput) SchemaId() pulumi.StringOutput {
	return o.ApplyT(func(v SchemaReferencePropertiesResponse) string { return v.SchemaId }).(pulumi.StringOutput)
}

// Schema Version Properties
type SchemaVersionProperties struct {
	// Value of schema version
	Value string `pulumi:"value"`
}

// SchemaVersionPropertiesInput is an input type that accepts SchemaVersionPropertiesArgs and SchemaVersionPropertiesOutput values.
// You can construct a concrete instance of `SchemaVersionPropertiesInput` via:
//
//	SchemaVersionPropertiesArgs{...}
type SchemaVersionPropertiesInput interface {
	pulumi.Input

	ToSchemaVersionPropertiesOutput() SchemaVersionPropertiesOutput
	ToSchemaVersionPropertiesOutputWithContext(context.Context) SchemaVersionPropertiesOutput
}

// Schema Version Properties
type SchemaVersionPropertiesArgs struct {
	// Value of schema version
	Value pulumi.StringInput `pulumi:"value"`
}

func (SchemaVersionPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SchemaVersionProperties)(nil)).Elem()
}

func (i SchemaVersionPropertiesArgs) ToSchemaVersionPropertiesOutput() SchemaVersionPropertiesOutput {
	return i.ToSchemaVersionPropertiesOutputWithContext(context.Background())
}

func (i SchemaVersionPropertiesArgs) ToSchemaVersionPropertiesOutputWithContext(ctx context.Context) SchemaVersionPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SchemaVersionPropertiesOutput)
}

func (i SchemaVersionPropertiesArgs) ToSchemaVersionPropertiesPtrOutput() SchemaVersionPropertiesPtrOutput {
	return i.ToSchemaVersionPropertiesPtrOutputWithContext(context.Background())
}

func (i SchemaVersionPropertiesArgs) ToSchemaVersionPropertiesPtrOutputWithContext(ctx context.Context) SchemaVersionPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SchemaVersionPropertiesOutput).ToSchemaVersionPropertiesPtrOutputWithContext(ctx)
}

// SchemaVersionPropertiesPtrInput is an input type that accepts SchemaVersionPropertiesArgs, SchemaVersionPropertiesPtr and SchemaVersionPropertiesPtrOutput values.
// You can construct a concrete instance of `SchemaVersionPropertiesPtrInput` via:
//
//	        SchemaVersionPropertiesArgs{...}
//
//	or:
//
//	        nil
type SchemaVersionPropertiesPtrInput interface {
	pulumi.Input

	ToSchemaVersionPropertiesPtrOutput() SchemaVersionPropertiesPtrOutput
	ToSchemaVersionPropertiesPtrOutputWithContext(context.Context) SchemaVersionPropertiesPtrOutput
}

type schemaVersionPropertiesPtrType SchemaVersionPropertiesArgs

func SchemaVersionPropertiesPtr(v *SchemaVersionPropertiesArgs) SchemaVersionPropertiesPtrInput {
	return (*schemaVersionPropertiesPtrType)(v)
}

func (*schemaVersionPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SchemaVersionProperties)(nil)).Elem()
}

func (i *schemaVersionPropertiesPtrType) ToSchemaVersionPropertiesPtrOutput() SchemaVersionPropertiesPtrOutput {
	return i.ToSchemaVersionPropertiesPtrOutputWithContext(context.Background())
}

func (i *schemaVersionPropertiesPtrType) ToSchemaVersionPropertiesPtrOutputWithContext(ctx context.Context) SchemaVersionPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SchemaVersionPropertiesPtrOutput)
}

// Schema Version Properties
type SchemaVersionPropertiesOutput struct{ *pulumi.OutputState }

func (SchemaVersionPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SchemaVersionProperties)(nil)).Elem()
}

func (o SchemaVersionPropertiesOutput) ToSchemaVersionPropertiesOutput() SchemaVersionPropertiesOutput {
	return o
}

func (o SchemaVersionPropertiesOutput) ToSchemaVersionPropertiesOutputWithContext(ctx context.Context) SchemaVersionPropertiesOutput {
	return o
}

func (o SchemaVersionPropertiesOutput) ToSchemaVersionPropertiesPtrOutput() SchemaVersionPropertiesPtrOutput {
	return o.ToSchemaVersionPropertiesPtrOutputWithContext(context.Background())
}

func (o SchemaVersionPropertiesOutput) ToSchemaVersionPropertiesPtrOutputWithContext(ctx context.Context) SchemaVersionPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SchemaVersionProperties) *SchemaVersionProperties {
		return &v
	}).(SchemaVersionPropertiesPtrOutput)
}

// Value of schema version
func (o SchemaVersionPropertiesOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v SchemaVersionProperties) string { return v.Value }).(pulumi.StringOutput)
}

type SchemaVersionPropertiesPtrOutput struct{ *pulumi.OutputState }

func (SchemaVersionPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SchemaVersionProperties)(nil)).Elem()
}

func (o SchemaVersionPropertiesPtrOutput) ToSchemaVersionPropertiesPtrOutput() SchemaVersionPropertiesPtrOutput {
	return o
}

func (o SchemaVersionPropertiesPtrOutput) ToSchemaVersionPropertiesPtrOutputWithContext(ctx context.Context) SchemaVersionPropertiesPtrOutput {
	return o
}

func (o SchemaVersionPropertiesPtrOutput) Elem() SchemaVersionPropertiesOutput {
	return o.ApplyT(func(v *SchemaVersionProperties) SchemaVersionProperties {
		if v != nil {
			return *v
		}
		var ret SchemaVersionProperties
		return ret
	}).(SchemaVersionPropertiesOutput)
}

// Value of schema version
func (o SchemaVersionPropertiesPtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SchemaVersionProperties) *string {
		if v == nil {
			return nil
		}
		return &v.Value
	}).(pulumi.StringPtrOutput)
}

// Schema Version Properties
type SchemaVersionPropertiesResponse struct {
	// Provisioning state of resource
	ProvisioningState string `pulumi:"provisioningState"`
	// Value of schema version
	Value string `pulumi:"value"`
}

// Schema Version Properties
type SchemaVersionPropertiesResponseOutput struct{ *pulumi.OutputState }

func (SchemaVersionPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SchemaVersionPropertiesResponse)(nil)).Elem()
}

func (o SchemaVersionPropertiesResponseOutput) ToSchemaVersionPropertiesResponseOutput() SchemaVersionPropertiesResponseOutput {
	return o
}

func (o SchemaVersionPropertiesResponseOutput) ToSchemaVersionPropertiesResponseOutputWithContext(ctx context.Context) SchemaVersionPropertiesResponseOutput {
	return o
}

// Provisioning state of resource
func (o SchemaVersionPropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v SchemaVersionPropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Value of schema version
func (o SchemaVersionPropertiesResponseOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v SchemaVersionPropertiesResponse) string { return v.Value }).(pulumi.StringOutput)
}

// Site address properties
type SiteAddressProperties struct {
	// City of the address
	City *string `pulumi:"city"`
	// Country of the address
	Country *string `pulumi:"country"`
	// Postal or ZIP code of the address
	PostalCode *string `pulumi:"postalCode"`
	// State or province of the address
	StateOrProvince *string `pulumi:"stateOrProvince"`
	// First line of the street address
	StreetAddress1 *string `pulumi:"streetAddress1"`
	// Second line of the street address
	StreetAddress2 *string `pulumi:"streetAddress2"`
}

// SiteAddressPropertiesInput is an input type that accepts SiteAddressPropertiesArgs and SiteAddressPropertiesOutput values.
// You can construct a concrete instance of `SiteAddressPropertiesInput` via:
//
//	SiteAddressPropertiesArgs{...}
type SiteAddressPropertiesInput interface {
	pulumi.Input

	ToSiteAddressPropertiesOutput() SiteAddressPropertiesOutput
	ToSiteAddressPropertiesOutputWithContext(context.Context) SiteAddressPropertiesOutput
}

// Site address properties
type SiteAddressPropertiesArgs struct {
	// City of the address
	City pulumi.StringPtrInput `pulumi:"city"`
	// Country of the address
	Country pulumi.StringPtrInput `pulumi:"country"`
	// Postal or ZIP code of the address
	PostalCode pulumi.StringPtrInput `pulumi:"postalCode"`
	// State or province of the address
	StateOrProvince pulumi.StringPtrInput `pulumi:"stateOrProvince"`
	// First line of the street address
	StreetAddress1 pulumi.StringPtrInput `pulumi:"streetAddress1"`
	// Second line of the street address
	StreetAddress2 pulumi.StringPtrInput `pulumi:"streetAddress2"`
}

func (SiteAddressPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SiteAddressProperties)(nil)).Elem()
}

func (i SiteAddressPropertiesArgs) ToSiteAddressPropertiesOutput() SiteAddressPropertiesOutput {
	return i.ToSiteAddressPropertiesOutputWithContext(context.Background())
}

func (i SiteAddressPropertiesArgs) ToSiteAddressPropertiesOutputWithContext(ctx context.Context) SiteAddressPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SiteAddressPropertiesOutput)
}

func (i SiteAddressPropertiesArgs) ToSiteAddressPropertiesPtrOutput() SiteAddressPropertiesPtrOutput {
	return i.ToSiteAddressPropertiesPtrOutputWithContext(context.Background())
}

func (i SiteAddressPropertiesArgs) ToSiteAddressPropertiesPtrOutputWithContext(ctx context.Context) SiteAddressPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SiteAddressPropertiesOutput).ToSiteAddressPropertiesPtrOutputWithContext(ctx)
}

// SiteAddressPropertiesPtrInput is an input type that accepts SiteAddressPropertiesArgs, SiteAddressPropertiesPtr and SiteAddressPropertiesPtrOutput values.
// You can construct a concrete instance of `SiteAddressPropertiesPtrInput` via:
//
//	        SiteAddressPropertiesArgs{...}
//
//	or:
//
//	        nil
type SiteAddressPropertiesPtrInput interface {
	pulumi.Input

	ToSiteAddressPropertiesPtrOutput() SiteAddressPropertiesPtrOutput
	ToSiteAddressPropertiesPtrOutputWithContext(context.Context) SiteAddressPropertiesPtrOutput
}

type siteAddressPropertiesPtrType SiteAddressPropertiesArgs

func SiteAddressPropertiesPtr(v *SiteAddressPropertiesArgs) SiteAddressPropertiesPtrInput {
	return (*siteAddressPropertiesPtrType)(v)
}

func (*siteAddressPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SiteAddressProperties)(nil)).Elem()
}

func (i *siteAddressPropertiesPtrType) ToSiteAddressPropertiesPtrOutput() SiteAddressPropertiesPtrOutput {
	return i.ToSiteAddressPropertiesPtrOutputWithContext(context.Background())
}

func (i *siteAddressPropertiesPtrType) ToSiteAddressPropertiesPtrOutputWithContext(ctx context.Context) SiteAddressPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SiteAddressPropertiesPtrOutput)
}

// Site address properties
type SiteAddressPropertiesOutput struct{ *pulumi.OutputState }

func (SiteAddressPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SiteAddressProperties)(nil)).Elem()
}

func (o SiteAddressPropertiesOutput) ToSiteAddressPropertiesOutput() SiteAddressPropertiesOutput {
	return o
}

func (o SiteAddressPropertiesOutput) ToSiteAddressPropertiesOutputWithContext(ctx context.Context) SiteAddressPropertiesOutput {
	return o
}

func (o SiteAddressPropertiesOutput) ToSiteAddressPropertiesPtrOutput() SiteAddressPropertiesPtrOutput {
	return o.ToSiteAddressPropertiesPtrOutputWithContext(context.Background())
}

func (o SiteAddressPropertiesOutput) ToSiteAddressPropertiesPtrOutputWithContext(ctx context.Context) SiteAddressPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SiteAddressProperties) *SiteAddressProperties {
		return &v
	}).(SiteAddressPropertiesPtrOutput)
}

// City of the address
func (o SiteAddressPropertiesOutput) City() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteAddressProperties) *string { return v.City }).(pulumi.StringPtrOutput)
}

// Country of the address
func (o SiteAddressPropertiesOutput) Country() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteAddressProperties) *string { return v.Country }).(pulumi.StringPtrOutput)
}

// Postal or ZIP code of the address
func (o SiteAddressPropertiesOutput) PostalCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteAddressProperties) *string { return v.PostalCode }).(pulumi.StringPtrOutput)
}

// State or province of the address
func (o SiteAddressPropertiesOutput) StateOrProvince() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteAddressProperties) *string { return v.StateOrProvince }).(pulumi.StringPtrOutput)
}

// First line of the street address
func (o SiteAddressPropertiesOutput) StreetAddress1() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteAddressProperties) *string { return v.StreetAddress1 }).(pulumi.StringPtrOutput)
}

// Second line of the street address
func (o SiteAddressPropertiesOutput) StreetAddress2() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteAddressProperties) *string { return v.StreetAddress2 }).(pulumi.StringPtrOutput)
}

type SiteAddressPropertiesPtrOutput struct{ *pulumi.OutputState }

func (SiteAddressPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SiteAddressProperties)(nil)).Elem()
}

func (o SiteAddressPropertiesPtrOutput) ToSiteAddressPropertiesPtrOutput() SiteAddressPropertiesPtrOutput {
	return o
}

func (o SiteAddressPropertiesPtrOutput) ToSiteAddressPropertiesPtrOutputWithContext(ctx context.Context) SiteAddressPropertiesPtrOutput {
	return o
}

func (o SiteAddressPropertiesPtrOutput) Elem() SiteAddressPropertiesOutput {
	return o.ApplyT(func(v *SiteAddressProperties) SiteAddressProperties {
		if v != nil {
			return *v
		}
		var ret SiteAddressProperties
		return ret
	}).(SiteAddressPropertiesOutput)
}

// City of the address
func (o SiteAddressPropertiesPtrOutput) City() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteAddressProperties) *string {
		if v == nil {
			return nil
		}
		return v.City
	}).(pulumi.StringPtrOutput)
}

// Country of the address
func (o SiteAddressPropertiesPtrOutput) Country() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteAddressProperties) *string {
		if v == nil {
			return nil
		}
		return v.Country
	}).(pulumi.StringPtrOutput)
}

// Postal or ZIP code of the address
func (o SiteAddressPropertiesPtrOutput) PostalCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteAddressProperties) *string {
		if v == nil {
			return nil
		}
		return v.PostalCode
	}).(pulumi.StringPtrOutput)
}

// State or province of the address
func (o SiteAddressPropertiesPtrOutput) StateOrProvince() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteAddressProperties) *string {
		if v == nil {
			return nil
		}
		return v.StateOrProvince
	}).(pulumi.StringPtrOutput)
}

// First line of the street address
func (o SiteAddressPropertiesPtrOutput) StreetAddress1() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteAddressProperties) *string {
		if v == nil {
			return nil
		}
		return v.StreetAddress1
	}).(pulumi.StringPtrOutput)
}

// Second line of the street address
func (o SiteAddressPropertiesPtrOutput) StreetAddress2() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteAddressProperties) *string {
		if v == nil {
			return nil
		}
		return v.StreetAddress2
	}).(pulumi.StringPtrOutput)
}

// Site address properties
type SiteAddressPropertiesResponse struct {
	// City of the address
	City *string `pulumi:"city"`
	// Country of the address
	Country *string `pulumi:"country"`
	// Postal or ZIP code of the address
	PostalCode *string `pulumi:"postalCode"`
	// State or province of the address
	StateOrProvince *string `pulumi:"stateOrProvince"`
	// First line of the street address
	StreetAddress1 *string `pulumi:"streetAddress1"`
	// Second line of the street address
	StreetAddress2 *string `pulumi:"streetAddress2"`
}

// Site address properties
type SiteAddressPropertiesResponseOutput struct{ *pulumi.OutputState }

func (SiteAddressPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SiteAddressPropertiesResponse)(nil)).Elem()
}

func (o SiteAddressPropertiesResponseOutput) ToSiteAddressPropertiesResponseOutput() SiteAddressPropertiesResponseOutput {
	return o
}

func (o SiteAddressPropertiesResponseOutput) ToSiteAddressPropertiesResponseOutputWithContext(ctx context.Context) SiteAddressPropertiesResponseOutput {
	return o
}

// City of the address
func (o SiteAddressPropertiesResponseOutput) City() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteAddressPropertiesResponse) *string { return v.City }).(pulumi.StringPtrOutput)
}

// Country of the address
func (o SiteAddressPropertiesResponseOutput) Country() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteAddressPropertiesResponse) *string { return v.Country }).(pulumi.StringPtrOutput)
}

// Postal or ZIP code of the address
func (o SiteAddressPropertiesResponseOutput) PostalCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteAddressPropertiesResponse) *string { return v.PostalCode }).(pulumi.StringPtrOutput)
}

// State or province of the address
func (o SiteAddressPropertiesResponseOutput) StateOrProvince() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteAddressPropertiesResponse) *string { return v.StateOrProvince }).(pulumi.StringPtrOutput)
}

// First line of the street address
func (o SiteAddressPropertiesResponseOutput) StreetAddress1() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteAddressPropertiesResponse) *string { return v.StreetAddress1 }).(pulumi.StringPtrOutput)
}

// Second line of the street address
func (o SiteAddressPropertiesResponseOutput) StreetAddress2() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteAddressPropertiesResponse) *string { return v.StreetAddress2 }).(pulumi.StringPtrOutput)
}

type SiteAddressPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (SiteAddressPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SiteAddressPropertiesResponse)(nil)).Elem()
}

func (o SiteAddressPropertiesResponsePtrOutput) ToSiteAddressPropertiesResponsePtrOutput() SiteAddressPropertiesResponsePtrOutput {
	return o
}

func (o SiteAddressPropertiesResponsePtrOutput) ToSiteAddressPropertiesResponsePtrOutputWithContext(ctx context.Context) SiteAddressPropertiesResponsePtrOutput {
	return o
}

func (o SiteAddressPropertiesResponsePtrOutput) Elem() SiteAddressPropertiesResponseOutput {
	return o.ApplyT(func(v *SiteAddressPropertiesResponse) SiteAddressPropertiesResponse {
		if v != nil {
			return *v
		}
		var ret SiteAddressPropertiesResponse
		return ret
	}).(SiteAddressPropertiesResponseOutput)
}

// City of the address
func (o SiteAddressPropertiesResponsePtrOutput) City() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteAddressPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.City
	}).(pulumi.StringPtrOutput)
}

// Country of the address
func (o SiteAddressPropertiesResponsePtrOutput) Country() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteAddressPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.Country
	}).(pulumi.StringPtrOutput)
}

// Postal or ZIP code of the address
func (o SiteAddressPropertiesResponsePtrOutput) PostalCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteAddressPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.PostalCode
	}).(pulumi.StringPtrOutput)
}

// State or province of the address
func (o SiteAddressPropertiesResponsePtrOutput) StateOrProvince() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteAddressPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.StateOrProvince
	}).(pulumi.StringPtrOutput)
}

// First line of the street address
func (o SiteAddressPropertiesResponsePtrOutput) StreetAddress1() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteAddressPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.StreetAddress1
	}).(pulumi.StringPtrOutput)
}

// Second line of the street address
func (o SiteAddressPropertiesResponsePtrOutput) StreetAddress2() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteAddressPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.StreetAddress2
	}).(pulumi.StringPtrOutput)
}

// Site properties
type SiteProperties struct {
	// AddressResource ArmId of Site resource
	AddressResourceId *string `pulumi:"addressResourceId"`
	// Description of Site resource
	Description *string `pulumi:"description"`
	// displayName of Site resource
	DisplayName *string `pulumi:"displayName"`
	// Key-value pairs for labeling the site resource.
	Labels map[string]string `pulumi:"labels"`
	// Physical address of the site
	SiteAddress *SiteAddressProperties `pulumi:"siteAddress"`
}

// SitePropertiesInput is an input type that accepts SitePropertiesArgs and SitePropertiesOutput values.
// You can construct a concrete instance of `SitePropertiesInput` via:
//
//	SitePropertiesArgs{...}
type SitePropertiesInput interface {
	pulumi.Input

	ToSitePropertiesOutput() SitePropertiesOutput
	ToSitePropertiesOutputWithContext(context.Context) SitePropertiesOutput
}

// Site properties
type SitePropertiesArgs struct {
	// AddressResource ArmId of Site resource
	AddressResourceId pulumi.StringPtrInput `pulumi:"addressResourceId"`
	// Description of Site resource
	Description pulumi.StringPtrInput `pulumi:"description"`
	// displayName of Site resource
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	// Key-value pairs for labeling the site resource.
	Labels pulumi.StringMapInput `pulumi:"labels"`
	// Physical address of the site
	SiteAddress SiteAddressPropertiesPtrInput `pulumi:"siteAddress"`
}

func (SitePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SiteProperties)(nil)).Elem()
}

func (i SitePropertiesArgs) ToSitePropertiesOutput() SitePropertiesOutput {
	return i.ToSitePropertiesOutputWithContext(context.Background())
}

func (i SitePropertiesArgs) ToSitePropertiesOutputWithContext(ctx context.Context) SitePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SitePropertiesOutput)
}

func (i SitePropertiesArgs) ToSitePropertiesPtrOutput() SitePropertiesPtrOutput {
	return i.ToSitePropertiesPtrOutputWithContext(context.Background())
}

func (i SitePropertiesArgs) ToSitePropertiesPtrOutputWithContext(ctx context.Context) SitePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SitePropertiesOutput).ToSitePropertiesPtrOutputWithContext(ctx)
}

// SitePropertiesPtrInput is an input type that accepts SitePropertiesArgs, SitePropertiesPtr and SitePropertiesPtrOutput values.
// You can construct a concrete instance of `SitePropertiesPtrInput` via:
//
//	        SitePropertiesArgs{...}
//
//	or:
//
//	        nil
type SitePropertiesPtrInput interface {
	pulumi.Input

	ToSitePropertiesPtrOutput() SitePropertiesPtrOutput
	ToSitePropertiesPtrOutputWithContext(context.Context) SitePropertiesPtrOutput
}

type sitePropertiesPtrType SitePropertiesArgs

func SitePropertiesPtr(v *SitePropertiesArgs) SitePropertiesPtrInput {
	return (*sitePropertiesPtrType)(v)
}

func (*sitePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SiteProperties)(nil)).Elem()
}

func (i *sitePropertiesPtrType) ToSitePropertiesPtrOutput() SitePropertiesPtrOutput {
	return i.ToSitePropertiesPtrOutputWithContext(context.Background())
}

func (i *sitePropertiesPtrType) ToSitePropertiesPtrOutputWithContext(ctx context.Context) SitePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SitePropertiesPtrOutput)
}

// Site properties
type SitePropertiesOutput struct{ *pulumi.OutputState }

func (SitePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SiteProperties)(nil)).Elem()
}

func (o SitePropertiesOutput) ToSitePropertiesOutput() SitePropertiesOutput {
	return o
}

func (o SitePropertiesOutput) ToSitePropertiesOutputWithContext(ctx context.Context) SitePropertiesOutput {
	return o
}

func (o SitePropertiesOutput) ToSitePropertiesPtrOutput() SitePropertiesPtrOutput {
	return o.ToSitePropertiesPtrOutputWithContext(context.Background())
}

func (o SitePropertiesOutput) ToSitePropertiesPtrOutputWithContext(ctx context.Context) SitePropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SiteProperties) *SiteProperties {
		return &v
	}).(SitePropertiesPtrOutput)
}

// AddressResource ArmId of Site resource
func (o SitePropertiesOutput) AddressResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteProperties) *string { return v.AddressResourceId }).(pulumi.StringPtrOutput)
}

// Description of Site resource
func (o SitePropertiesOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteProperties) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// displayName of Site resource
func (o SitePropertiesOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteProperties) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// Key-value pairs for labeling the site resource.
func (o SitePropertiesOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v SiteProperties) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

// Physical address of the site
func (o SitePropertiesOutput) SiteAddress() SiteAddressPropertiesPtrOutput {
	return o.ApplyT(func(v SiteProperties) *SiteAddressProperties { return v.SiteAddress }).(SiteAddressPropertiesPtrOutput)
}

type SitePropertiesPtrOutput struct{ *pulumi.OutputState }

func (SitePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SiteProperties)(nil)).Elem()
}

func (o SitePropertiesPtrOutput) ToSitePropertiesPtrOutput() SitePropertiesPtrOutput {
	return o
}

func (o SitePropertiesPtrOutput) ToSitePropertiesPtrOutputWithContext(ctx context.Context) SitePropertiesPtrOutput {
	return o
}

func (o SitePropertiesPtrOutput) Elem() SitePropertiesOutput {
	return o.ApplyT(func(v *SiteProperties) SiteProperties {
		if v != nil {
			return *v
		}
		var ret SiteProperties
		return ret
	}).(SitePropertiesOutput)
}

// AddressResource ArmId of Site resource
func (o SitePropertiesPtrOutput) AddressResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteProperties) *string {
		if v == nil {
			return nil
		}
		return v.AddressResourceId
	}).(pulumi.StringPtrOutput)
}

// Description of Site resource
func (o SitePropertiesPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteProperties) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// displayName of Site resource
func (o SitePropertiesPtrOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteProperties) *string {
		if v == nil {
			return nil
		}
		return v.DisplayName
	}).(pulumi.StringPtrOutput)
}

// Key-value pairs for labeling the site resource.
func (o SitePropertiesPtrOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *SiteProperties) map[string]string {
		if v == nil {
			return nil
		}
		return v.Labels
	}).(pulumi.StringMapOutput)
}

// Physical address of the site
func (o SitePropertiesPtrOutput) SiteAddress() SiteAddressPropertiesPtrOutput {
	return o.ApplyT(func(v *SiteProperties) *SiteAddressProperties {
		if v == nil {
			return nil
		}
		return v.SiteAddress
	}).(SiteAddressPropertiesPtrOutput)
}

// Site properties
type SitePropertiesResponse struct {
	// AddressResource ArmId of Site resource
	AddressResourceId *string `pulumi:"addressResourceId"`
	// Description of Site resource
	Description *string `pulumi:"description"`
	// displayName of Site resource
	DisplayName *string `pulumi:"displayName"`
	// Key-value pairs for labeling the site resource.
	Labels map[string]string `pulumi:"labels"`
	// Provisioning state of last operation
	ProvisioningState string `pulumi:"provisioningState"`
	// Physical address of the site
	SiteAddress *SiteAddressPropertiesResponse `pulumi:"siteAddress"`
}

// Site properties
type SitePropertiesResponseOutput struct{ *pulumi.OutputState }

func (SitePropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SitePropertiesResponse)(nil)).Elem()
}

func (o SitePropertiesResponseOutput) ToSitePropertiesResponseOutput() SitePropertiesResponseOutput {
	return o
}

func (o SitePropertiesResponseOutput) ToSitePropertiesResponseOutputWithContext(ctx context.Context) SitePropertiesResponseOutput {
	return o
}

// AddressResource ArmId of Site resource
func (o SitePropertiesResponseOutput) AddressResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SitePropertiesResponse) *string { return v.AddressResourceId }).(pulumi.StringPtrOutput)
}

// Description of Site resource
func (o SitePropertiesResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SitePropertiesResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// displayName of Site resource
func (o SitePropertiesResponseOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SitePropertiesResponse) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// Key-value pairs for labeling the site resource.
func (o SitePropertiesResponseOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v SitePropertiesResponse) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

// Provisioning state of last operation
func (o SitePropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v SitePropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Physical address of the site
func (o SitePropertiesResponseOutput) SiteAddress() SiteAddressPropertiesResponsePtrOutput {
	return o.ApplyT(func(v SitePropertiesResponse) *SiteAddressPropertiesResponse { return v.SiteAddress }).(SiteAddressPropertiesResponsePtrOutput)
}

// Site Reference Properties
type SiteReferenceProperties struct {
	// Azure Resource ID for Site
	SiteId string `pulumi:"siteId"`
}

// SiteReferencePropertiesInput is an input type that accepts SiteReferencePropertiesArgs and SiteReferencePropertiesOutput values.
// You can construct a concrete instance of `SiteReferencePropertiesInput` via:
//
//	SiteReferencePropertiesArgs{...}
type SiteReferencePropertiesInput interface {
	pulumi.Input

	ToSiteReferencePropertiesOutput() SiteReferencePropertiesOutput
	ToSiteReferencePropertiesOutputWithContext(context.Context) SiteReferencePropertiesOutput
}

// Site Reference Properties
type SiteReferencePropertiesArgs struct {
	// Azure Resource ID for Site
	SiteId pulumi.StringInput `pulumi:"siteId"`
}

func (SiteReferencePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SiteReferenceProperties)(nil)).Elem()
}

func (i SiteReferencePropertiesArgs) ToSiteReferencePropertiesOutput() SiteReferencePropertiesOutput {
	return i.ToSiteReferencePropertiesOutputWithContext(context.Background())
}

func (i SiteReferencePropertiesArgs) ToSiteReferencePropertiesOutputWithContext(ctx context.Context) SiteReferencePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SiteReferencePropertiesOutput)
}

func (i SiteReferencePropertiesArgs) ToSiteReferencePropertiesPtrOutput() SiteReferencePropertiesPtrOutput {
	return i.ToSiteReferencePropertiesPtrOutputWithContext(context.Background())
}

func (i SiteReferencePropertiesArgs) ToSiteReferencePropertiesPtrOutputWithContext(ctx context.Context) SiteReferencePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SiteReferencePropertiesOutput).ToSiteReferencePropertiesPtrOutputWithContext(ctx)
}

// SiteReferencePropertiesPtrInput is an input type that accepts SiteReferencePropertiesArgs, SiteReferencePropertiesPtr and SiteReferencePropertiesPtrOutput values.
// You can construct a concrete instance of `SiteReferencePropertiesPtrInput` via:
//
//	        SiteReferencePropertiesArgs{...}
//
//	or:
//
//	        nil
type SiteReferencePropertiesPtrInput interface {
	pulumi.Input

	ToSiteReferencePropertiesPtrOutput() SiteReferencePropertiesPtrOutput
	ToSiteReferencePropertiesPtrOutputWithContext(context.Context) SiteReferencePropertiesPtrOutput
}

type siteReferencePropertiesPtrType SiteReferencePropertiesArgs

func SiteReferencePropertiesPtr(v *SiteReferencePropertiesArgs) SiteReferencePropertiesPtrInput {
	return (*siteReferencePropertiesPtrType)(v)
}

func (*siteReferencePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SiteReferenceProperties)(nil)).Elem()
}

func (i *siteReferencePropertiesPtrType) ToSiteReferencePropertiesPtrOutput() SiteReferencePropertiesPtrOutput {
	return i.ToSiteReferencePropertiesPtrOutputWithContext(context.Background())
}

func (i *siteReferencePropertiesPtrType) ToSiteReferencePropertiesPtrOutputWithContext(ctx context.Context) SiteReferencePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SiteReferencePropertiesPtrOutput)
}

// Site Reference Properties
type SiteReferencePropertiesOutput struct{ *pulumi.OutputState }

func (SiteReferencePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SiteReferenceProperties)(nil)).Elem()
}

func (o SiteReferencePropertiesOutput) ToSiteReferencePropertiesOutput() SiteReferencePropertiesOutput {
	return o
}

func (o SiteReferencePropertiesOutput) ToSiteReferencePropertiesOutputWithContext(ctx context.Context) SiteReferencePropertiesOutput {
	return o
}

func (o SiteReferencePropertiesOutput) ToSiteReferencePropertiesPtrOutput() SiteReferencePropertiesPtrOutput {
	return o.ToSiteReferencePropertiesPtrOutputWithContext(context.Background())
}

func (o SiteReferencePropertiesOutput) ToSiteReferencePropertiesPtrOutputWithContext(ctx context.Context) SiteReferencePropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SiteReferenceProperties) *SiteReferenceProperties {
		return &v
	}).(SiteReferencePropertiesPtrOutput)
}

// Azure Resource ID for Site
func (o SiteReferencePropertiesOutput) SiteId() pulumi.StringOutput {
	return o.ApplyT(func(v SiteReferenceProperties) string { return v.SiteId }).(pulumi.StringOutput)
}

type SiteReferencePropertiesPtrOutput struct{ *pulumi.OutputState }

func (SiteReferencePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SiteReferenceProperties)(nil)).Elem()
}

func (o SiteReferencePropertiesPtrOutput) ToSiteReferencePropertiesPtrOutput() SiteReferencePropertiesPtrOutput {
	return o
}

func (o SiteReferencePropertiesPtrOutput) ToSiteReferencePropertiesPtrOutputWithContext(ctx context.Context) SiteReferencePropertiesPtrOutput {
	return o
}

func (o SiteReferencePropertiesPtrOutput) Elem() SiteReferencePropertiesOutput {
	return o.ApplyT(func(v *SiteReferenceProperties) SiteReferenceProperties {
		if v != nil {
			return *v
		}
		var ret SiteReferenceProperties
		return ret
	}).(SiteReferencePropertiesOutput)
}

// Azure Resource ID for Site
func (o SiteReferencePropertiesPtrOutput) SiteId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteReferenceProperties) *string {
		if v == nil {
			return nil
		}
		return &v.SiteId
	}).(pulumi.StringPtrOutput)
}

// Site Reference Properties
type SiteReferencePropertiesResponse struct {
	// Provisioning State
	ProvisioningState string `pulumi:"provisioningState"`
	// Azure Resource ID for Site
	SiteId string `pulumi:"siteId"`
}

// Site Reference Properties
type SiteReferencePropertiesResponseOutput struct{ *pulumi.OutputState }

func (SiteReferencePropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SiteReferencePropertiesResponse)(nil)).Elem()
}

func (o SiteReferencePropertiesResponseOutput) ToSiteReferencePropertiesResponseOutput() SiteReferencePropertiesResponseOutput {
	return o
}

func (o SiteReferencePropertiesResponseOutput) ToSiteReferencePropertiesResponseOutputWithContext(ctx context.Context) SiteReferencePropertiesResponseOutput {
	return o
}

// Provisioning State
func (o SiteReferencePropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v SiteReferencePropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Azure Resource ID for Site
func (o SiteReferencePropertiesResponseOutput) SiteId() pulumi.StringOutput {
	return o.ApplyT(func(v SiteReferencePropertiesResponse) string { return v.SiteId }).(pulumi.StringOutput)
}

// Solution Dependency Context
type SolutionDependencyResponse struct {
	// Solution dependencies
	Dependencies []SolutionDependencyResponse `pulumi:"dependencies"`
	// Solution Instance Name
	SolutionInstanceName *string `pulumi:"solutionInstanceName"`
	// Solution Template Version Id
	SolutionTemplateVersionId string `pulumi:"solutionTemplateVersionId"`
	// Solution Version Id
	SolutionVersionId string `pulumi:"solutionVersionId"`
	// Target Id
	TargetId string `pulumi:"targetId"`
}

// Solution Dependency Context
type SolutionDependencyResponseOutput struct{ *pulumi.OutputState }

func (SolutionDependencyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SolutionDependencyResponse)(nil)).Elem()
}

func (o SolutionDependencyResponseOutput) ToSolutionDependencyResponseOutput() SolutionDependencyResponseOutput {
	return o
}

func (o SolutionDependencyResponseOutput) ToSolutionDependencyResponseOutputWithContext(ctx context.Context) SolutionDependencyResponseOutput {
	return o
}

// Solution dependencies
func (o SolutionDependencyResponseOutput) Dependencies() SolutionDependencyResponseArrayOutput {
	return o.ApplyT(func(v SolutionDependencyResponse) []SolutionDependencyResponse { return v.Dependencies }).(SolutionDependencyResponseArrayOutput)
}

// Solution Instance Name
func (o SolutionDependencyResponseOutput) SolutionInstanceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SolutionDependencyResponse) *string { return v.SolutionInstanceName }).(pulumi.StringPtrOutput)
}

// Solution Template Version Id
func (o SolutionDependencyResponseOutput) SolutionTemplateVersionId() pulumi.StringOutput {
	return o.ApplyT(func(v SolutionDependencyResponse) string { return v.SolutionTemplateVersionId }).(pulumi.StringOutput)
}

// Solution Version Id
func (o SolutionDependencyResponseOutput) SolutionVersionId() pulumi.StringOutput {
	return o.ApplyT(func(v SolutionDependencyResponse) string { return v.SolutionVersionId }).(pulumi.StringOutput)
}

// Target Id
func (o SolutionDependencyResponseOutput) TargetId() pulumi.StringOutput {
	return o.ApplyT(func(v SolutionDependencyResponse) string { return v.TargetId }).(pulumi.StringOutput)
}

type SolutionDependencyResponseArrayOutput struct{ *pulumi.OutputState }

func (SolutionDependencyResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SolutionDependencyResponse)(nil)).Elem()
}

func (o SolutionDependencyResponseArrayOutput) ToSolutionDependencyResponseArrayOutput() SolutionDependencyResponseArrayOutput {
	return o
}

func (o SolutionDependencyResponseArrayOutput) ToSolutionDependencyResponseArrayOutputWithContext(ctx context.Context) SolutionDependencyResponseArrayOutput {
	return o
}

func (o SolutionDependencyResponseArrayOutput) Index(i pulumi.IntInput) SolutionDependencyResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SolutionDependencyResponse {
		return vs[0].([]SolutionDependencyResponse)[vs[1].(int)]
	}).(SolutionDependencyResponseOutput)
}

// Solution Properties
type SolutionPropertiesResponse struct {
	// List of latest revisions for available solution template versions
	AvailableSolutionTemplateVersions []AvailableSolutionTemplateVersionResponse `pulumi:"availableSolutionTemplateVersions"`
	// Provisioning state of resource
	ProvisioningState string `pulumi:"provisioningState"`
	// Solution template Id
	SolutionTemplateId string `pulumi:"solutionTemplateId"`
}

// Solution Properties
type SolutionPropertiesResponseOutput struct{ *pulumi.OutputState }

func (SolutionPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SolutionPropertiesResponse)(nil)).Elem()
}

func (o SolutionPropertiesResponseOutput) ToSolutionPropertiesResponseOutput() SolutionPropertiesResponseOutput {
	return o
}

func (o SolutionPropertiesResponseOutput) ToSolutionPropertiesResponseOutputWithContext(ctx context.Context) SolutionPropertiesResponseOutput {
	return o
}

// List of latest revisions for available solution template versions
func (o SolutionPropertiesResponseOutput) AvailableSolutionTemplateVersions() AvailableSolutionTemplateVersionResponseArrayOutput {
	return o.ApplyT(func(v SolutionPropertiesResponse) []AvailableSolutionTemplateVersionResponse {
		return v.AvailableSolutionTemplateVersions
	}).(AvailableSolutionTemplateVersionResponseArrayOutput)
}

// Provisioning state of resource
func (o SolutionPropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v SolutionPropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Solution template Id
func (o SolutionPropertiesResponseOutput) SolutionTemplateId() pulumi.StringOutput {
	return o.ApplyT(func(v SolutionPropertiesResponse) string { return v.SolutionTemplateId }).(pulumi.StringOutput)
}

// Solution Template Properties
type SolutionTemplateProperties struct {
	// List of capabilities
	Capabilities []string `pulumi:"capabilities"`
	// Description of Solution template
	Description string `pulumi:"description"`
	// Flag to enable external validation
	EnableExternalValidation *bool `pulumi:"enableExternalValidation"`
	// State of resource
	State *string `pulumi:"state"`
}

// SolutionTemplatePropertiesInput is an input type that accepts SolutionTemplatePropertiesArgs and SolutionTemplatePropertiesOutput values.
// You can construct a concrete instance of `SolutionTemplatePropertiesInput` via:
//
//	SolutionTemplatePropertiesArgs{...}
type SolutionTemplatePropertiesInput interface {
	pulumi.Input

	ToSolutionTemplatePropertiesOutput() SolutionTemplatePropertiesOutput
	ToSolutionTemplatePropertiesOutputWithContext(context.Context) SolutionTemplatePropertiesOutput
}

// Solution Template Properties
type SolutionTemplatePropertiesArgs struct {
	// List of capabilities
	Capabilities pulumi.StringArrayInput `pulumi:"capabilities"`
	// Description of Solution template
	Description pulumi.StringInput `pulumi:"description"`
	// Flag to enable external validation
	EnableExternalValidation pulumi.BoolPtrInput `pulumi:"enableExternalValidation"`
	// State of resource
	State pulumi.StringPtrInput `pulumi:"state"`
}

func (SolutionTemplatePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SolutionTemplateProperties)(nil)).Elem()
}

func (i SolutionTemplatePropertiesArgs) ToSolutionTemplatePropertiesOutput() SolutionTemplatePropertiesOutput {
	return i.ToSolutionTemplatePropertiesOutputWithContext(context.Background())
}

func (i SolutionTemplatePropertiesArgs) ToSolutionTemplatePropertiesOutputWithContext(ctx context.Context) SolutionTemplatePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SolutionTemplatePropertiesOutput)
}

func (i SolutionTemplatePropertiesArgs) ToSolutionTemplatePropertiesPtrOutput() SolutionTemplatePropertiesPtrOutput {
	return i.ToSolutionTemplatePropertiesPtrOutputWithContext(context.Background())
}

func (i SolutionTemplatePropertiesArgs) ToSolutionTemplatePropertiesPtrOutputWithContext(ctx context.Context) SolutionTemplatePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SolutionTemplatePropertiesOutput).ToSolutionTemplatePropertiesPtrOutputWithContext(ctx)
}

// SolutionTemplatePropertiesPtrInput is an input type that accepts SolutionTemplatePropertiesArgs, SolutionTemplatePropertiesPtr and SolutionTemplatePropertiesPtrOutput values.
// You can construct a concrete instance of `SolutionTemplatePropertiesPtrInput` via:
//
//	        SolutionTemplatePropertiesArgs{...}
//
//	or:
//
//	        nil
type SolutionTemplatePropertiesPtrInput interface {
	pulumi.Input

	ToSolutionTemplatePropertiesPtrOutput() SolutionTemplatePropertiesPtrOutput
	ToSolutionTemplatePropertiesPtrOutputWithContext(context.Context) SolutionTemplatePropertiesPtrOutput
}

type solutionTemplatePropertiesPtrType SolutionTemplatePropertiesArgs

func SolutionTemplatePropertiesPtr(v *SolutionTemplatePropertiesArgs) SolutionTemplatePropertiesPtrInput {
	return (*solutionTemplatePropertiesPtrType)(v)
}

func (*solutionTemplatePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SolutionTemplateProperties)(nil)).Elem()
}

func (i *solutionTemplatePropertiesPtrType) ToSolutionTemplatePropertiesPtrOutput() SolutionTemplatePropertiesPtrOutput {
	return i.ToSolutionTemplatePropertiesPtrOutputWithContext(context.Background())
}

func (i *solutionTemplatePropertiesPtrType) ToSolutionTemplatePropertiesPtrOutputWithContext(ctx context.Context) SolutionTemplatePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SolutionTemplatePropertiesPtrOutput)
}

// Solution Template Properties
type SolutionTemplatePropertiesOutput struct{ *pulumi.OutputState }

func (SolutionTemplatePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SolutionTemplateProperties)(nil)).Elem()
}

func (o SolutionTemplatePropertiesOutput) ToSolutionTemplatePropertiesOutput() SolutionTemplatePropertiesOutput {
	return o
}

func (o SolutionTemplatePropertiesOutput) ToSolutionTemplatePropertiesOutputWithContext(ctx context.Context) SolutionTemplatePropertiesOutput {
	return o
}

func (o SolutionTemplatePropertiesOutput) ToSolutionTemplatePropertiesPtrOutput() SolutionTemplatePropertiesPtrOutput {
	return o.ToSolutionTemplatePropertiesPtrOutputWithContext(context.Background())
}

func (o SolutionTemplatePropertiesOutput) ToSolutionTemplatePropertiesPtrOutputWithContext(ctx context.Context) SolutionTemplatePropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SolutionTemplateProperties) *SolutionTemplateProperties {
		return &v
	}).(SolutionTemplatePropertiesPtrOutput)
}

// List of capabilities
func (o SolutionTemplatePropertiesOutput) Capabilities() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SolutionTemplateProperties) []string { return v.Capabilities }).(pulumi.StringArrayOutput)
}

// Description of Solution template
func (o SolutionTemplatePropertiesOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v SolutionTemplateProperties) string { return v.Description }).(pulumi.StringOutput)
}

// Flag to enable external validation
func (o SolutionTemplatePropertiesOutput) EnableExternalValidation() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SolutionTemplateProperties) *bool { return v.EnableExternalValidation }).(pulumi.BoolPtrOutput)
}

// State of resource
func (o SolutionTemplatePropertiesOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SolutionTemplateProperties) *string { return v.State }).(pulumi.StringPtrOutput)
}

type SolutionTemplatePropertiesPtrOutput struct{ *pulumi.OutputState }

func (SolutionTemplatePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SolutionTemplateProperties)(nil)).Elem()
}

func (o SolutionTemplatePropertiesPtrOutput) ToSolutionTemplatePropertiesPtrOutput() SolutionTemplatePropertiesPtrOutput {
	return o
}

func (o SolutionTemplatePropertiesPtrOutput) ToSolutionTemplatePropertiesPtrOutputWithContext(ctx context.Context) SolutionTemplatePropertiesPtrOutput {
	return o
}

func (o SolutionTemplatePropertiesPtrOutput) Elem() SolutionTemplatePropertiesOutput {
	return o.ApplyT(func(v *SolutionTemplateProperties) SolutionTemplateProperties {
		if v != nil {
			return *v
		}
		var ret SolutionTemplateProperties
		return ret
	}).(SolutionTemplatePropertiesOutput)
}

// List of capabilities
func (o SolutionTemplatePropertiesPtrOutput) Capabilities() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SolutionTemplateProperties) []string {
		if v == nil {
			return nil
		}
		return v.Capabilities
	}).(pulumi.StringArrayOutput)
}

// Description of Solution template
func (o SolutionTemplatePropertiesPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SolutionTemplateProperties) *string {
		if v == nil {
			return nil
		}
		return &v.Description
	}).(pulumi.StringPtrOutput)
}

// Flag to enable external validation
func (o SolutionTemplatePropertiesPtrOutput) EnableExternalValidation() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SolutionTemplateProperties) *bool {
		if v == nil {
			return nil
		}
		return v.EnableExternalValidation
	}).(pulumi.BoolPtrOutput)
}

// State of resource
func (o SolutionTemplatePropertiesPtrOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SolutionTemplateProperties) *string {
		if v == nil {
			return nil
		}
		return v.State
	}).(pulumi.StringPtrOutput)
}

// Solution Template Properties
type SolutionTemplatePropertiesResponse struct {
	// List of capabilities
	Capabilities []string `pulumi:"capabilities"`
	// Description of Solution template
	Description string `pulumi:"description"`
	// Flag to enable external validation
	EnableExternalValidation *bool `pulumi:"enableExternalValidation"`
	// Latest solution template version
	LatestVersion string `pulumi:"latestVersion"`
	// Provisioning state of resource
	ProvisioningState string `pulumi:"provisioningState"`
	// State of resource
	State *string `pulumi:"state"`
}

// Solution Template Properties
type SolutionTemplatePropertiesResponseOutput struct{ *pulumi.OutputState }

func (SolutionTemplatePropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SolutionTemplatePropertiesResponse)(nil)).Elem()
}

func (o SolutionTemplatePropertiesResponseOutput) ToSolutionTemplatePropertiesResponseOutput() SolutionTemplatePropertiesResponseOutput {
	return o
}

func (o SolutionTemplatePropertiesResponseOutput) ToSolutionTemplatePropertiesResponseOutputWithContext(ctx context.Context) SolutionTemplatePropertiesResponseOutput {
	return o
}

// List of capabilities
func (o SolutionTemplatePropertiesResponseOutput) Capabilities() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SolutionTemplatePropertiesResponse) []string { return v.Capabilities }).(pulumi.StringArrayOutput)
}

// Description of Solution template
func (o SolutionTemplatePropertiesResponseOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v SolutionTemplatePropertiesResponse) string { return v.Description }).(pulumi.StringOutput)
}

// Flag to enable external validation
func (o SolutionTemplatePropertiesResponseOutput) EnableExternalValidation() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SolutionTemplatePropertiesResponse) *bool { return v.EnableExternalValidation }).(pulumi.BoolPtrOutput)
}

// Latest solution template version
func (o SolutionTemplatePropertiesResponseOutput) LatestVersion() pulumi.StringOutput {
	return o.ApplyT(func(v SolutionTemplatePropertiesResponse) string { return v.LatestVersion }).(pulumi.StringOutput)
}

// Provisioning state of resource
func (o SolutionTemplatePropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v SolutionTemplatePropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// State of resource
func (o SolutionTemplatePropertiesResponseOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SolutionTemplatePropertiesResponse) *string { return v.State }).(pulumi.StringPtrOutput)
}

// Solution Version Properties
type SolutionVersionProperties struct {
	// App components spec
	Specification interface{} `pulumi:"specification"`
}

// SolutionVersionPropertiesInput is an input type that accepts SolutionVersionPropertiesArgs and SolutionVersionPropertiesOutput values.
// You can construct a concrete instance of `SolutionVersionPropertiesInput` via:
//
//	SolutionVersionPropertiesArgs{...}
type SolutionVersionPropertiesInput interface {
	pulumi.Input

	ToSolutionVersionPropertiesOutput() SolutionVersionPropertiesOutput
	ToSolutionVersionPropertiesOutputWithContext(context.Context) SolutionVersionPropertiesOutput
}

// Solution Version Properties
type SolutionVersionPropertiesArgs struct {
	// App components spec
	Specification pulumi.Input `pulumi:"specification"`
}

func (SolutionVersionPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SolutionVersionProperties)(nil)).Elem()
}

func (i SolutionVersionPropertiesArgs) ToSolutionVersionPropertiesOutput() SolutionVersionPropertiesOutput {
	return i.ToSolutionVersionPropertiesOutputWithContext(context.Background())
}

func (i SolutionVersionPropertiesArgs) ToSolutionVersionPropertiesOutputWithContext(ctx context.Context) SolutionVersionPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SolutionVersionPropertiesOutput)
}

func (i SolutionVersionPropertiesArgs) ToSolutionVersionPropertiesPtrOutput() SolutionVersionPropertiesPtrOutput {
	return i.ToSolutionVersionPropertiesPtrOutputWithContext(context.Background())
}

func (i SolutionVersionPropertiesArgs) ToSolutionVersionPropertiesPtrOutputWithContext(ctx context.Context) SolutionVersionPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SolutionVersionPropertiesOutput).ToSolutionVersionPropertiesPtrOutputWithContext(ctx)
}

// SolutionVersionPropertiesPtrInput is an input type that accepts SolutionVersionPropertiesArgs, SolutionVersionPropertiesPtr and SolutionVersionPropertiesPtrOutput values.
// You can construct a concrete instance of `SolutionVersionPropertiesPtrInput` via:
//
//	        SolutionVersionPropertiesArgs{...}
//
//	or:
//
//	        nil
type SolutionVersionPropertiesPtrInput interface {
	pulumi.Input

	ToSolutionVersionPropertiesPtrOutput() SolutionVersionPropertiesPtrOutput
	ToSolutionVersionPropertiesPtrOutputWithContext(context.Context) SolutionVersionPropertiesPtrOutput
}

type solutionVersionPropertiesPtrType SolutionVersionPropertiesArgs

func SolutionVersionPropertiesPtr(v *SolutionVersionPropertiesArgs) SolutionVersionPropertiesPtrInput {
	return (*solutionVersionPropertiesPtrType)(v)
}

func (*solutionVersionPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SolutionVersionProperties)(nil)).Elem()
}

func (i *solutionVersionPropertiesPtrType) ToSolutionVersionPropertiesPtrOutput() SolutionVersionPropertiesPtrOutput {
	return i.ToSolutionVersionPropertiesPtrOutputWithContext(context.Background())
}

func (i *solutionVersionPropertiesPtrType) ToSolutionVersionPropertiesPtrOutputWithContext(ctx context.Context) SolutionVersionPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SolutionVersionPropertiesPtrOutput)
}

// Solution Version Properties
type SolutionVersionPropertiesOutput struct{ *pulumi.OutputState }

func (SolutionVersionPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SolutionVersionProperties)(nil)).Elem()
}

func (o SolutionVersionPropertiesOutput) ToSolutionVersionPropertiesOutput() SolutionVersionPropertiesOutput {
	return o
}

func (o SolutionVersionPropertiesOutput) ToSolutionVersionPropertiesOutputWithContext(ctx context.Context) SolutionVersionPropertiesOutput {
	return o
}

func (o SolutionVersionPropertiesOutput) ToSolutionVersionPropertiesPtrOutput() SolutionVersionPropertiesPtrOutput {
	return o.ToSolutionVersionPropertiesPtrOutputWithContext(context.Background())
}

func (o SolutionVersionPropertiesOutput) ToSolutionVersionPropertiesPtrOutputWithContext(ctx context.Context) SolutionVersionPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SolutionVersionProperties) *SolutionVersionProperties {
		return &v
	}).(SolutionVersionPropertiesPtrOutput)
}

// App components spec
func (o SolutionVersionPropertiesOutput) Specification() pulumi.AnyOutput {
	return o.ApplyT(func(v SolutionVersionProperties) interface{} { return v.Specification }).(pulumi.AnyOutput)
}

type SolutionVersionPropertiesPtrOutput struct{ *pulumi.OutputState }

func (SolutionVersionPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SolutionVersionProperties)(nil)).Elem()
}

func (o SolutionVersionPropertiesPtrOutput) ToSolutionVersionPropertiesPtrOutput() SolutionVersionPropertiesPtrOutput {
	return o
}

func (o SolutionVersionPropertiesPtrOutput) ToSolutionVersionPropertiesPtrOutputWithContext(ctx context.Context) SolutionVersionPropertiesPtrOutput {
	return o
}

func (o SolutionVersionPropertiesPtrOutput) Elem() SolutionVersionPropertiesOutput {
	return o.ApplyT(func(v *SolutionVersionProperties) SolutionVersionProperties {
		if v != nil {
			return *v
		}
		var ret SolutionVersionProperties
		return ret
	}).(SolutionVersionPropertiesOutput)
}

// App components spec
func (o SolutionVersionPropertiesPtrOutput) Specification() pulumi.AnyOutput {
	return o.ApplyT(func(v *SolutionVersionProperties) interface{} {
		if v == nil {
			return nil
		}
		return v.Specification
	}).(pulumi.AnyOutput)
}

// Solution Version Properties
type SolutionVersionPropertiesResponse struct {
	// The type of the latest action performed on this solution version.
	ActionType string `pulumi:"actionType"`
	// Resolved configuration values
	Configuration string `pulumi:"configuration"`
	// Error Details if any failure is there
	ErrorDetails ErrorDetailResponse `pulumi:"errorDetails"`
	// External validation id
	ExternalValidationId string `pulumi:"externalValidationId"`
	// The URI for tracking the latest action performed on this solution version.
	LatestActionTrackingUri string `pulumi:"latestActionTrackingUri"`
	// Provisioning state of resource
	ProvisioningState string `pulumi:"provisioningState"`
	// Review id of resolved config for this solution version
	ReviewId string `pulumi:"reviewId"`
	// Revision number of resolved config for this solution version
	Revision int `pulumi:"revision"`
	// Solution Dependency Context
	SolutionDependencies []SolutionDependencyResponse `pulumi:"solutionDependencies"`
	// Solution instance name
	SolutionInstanceName string `pulumi:"solutionInstanceName"`
	// Solution Template Version Id
	SolutionTemplateVersionId string `pulumi:"solutionTemplateVersionId"`
	// App components spec
	Specification interface{} `pulumi:"specification"`
	// State of solution instance
	State string `pulumi:"state"`
	// Name of applicable target's display name
	TargetDisplayName string `pulumi:"targetDisplayName"`
	// Configuration on the line level across all solution template versions
	TargetLevelConfiguration string `pulumi:"targetLevelConfiguration"`
}

// Solution Version Properties
type SolutionVersionPropertiesResponseOutput struct{ *pulumi.OutputState }

func (SolutionVersionPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SolutionVersionPropertiesResponse)(nil)).Elem()
}

func (o SolutionVersionPropertiesResponseOutput) ToSolutionVersionPropertiesResponseOutput() SolutionVersionPropertiesResponseOutput {
	return o
}

func (o SolutionVersionPropertiesResponseOutput) ToSolutionVersionPropertiesResponseOutputWithContext(ctx context.Context) SolutionVersionPropertiesResponseOutput {
	return o
}

// The type of the latest action performed on this solution version.
func (o SolutionVersionPropertiesResponseOutput) ActionType() pulumi.StringOutput {
	return o.ApplyT(func(v SolutionVersionPropertiesResponse) string { return v.ActionType }).(pulumi.StringOutput)
}

// Resolved configuration values
func (o SolutionVersionPropertiesResponseOutput) Configuration() pulumi.StringOutput {
	return o.ApplyT(func(v SolutionVersionPropertiesResponse) string { return v.Configuration }).(pulumi.StringOutput)
}

// Error Details if any failure is there
func (o SolutionVersionPropertiesResponseOutput) ErrorDetails() ErrorDetailResponseOutput {
	return o.ApplyT(func(v SolutionVersionPropertiesResponse) ErrorDetailResponse { return v.ErrorDetails }).(ErrorDetailResponseOutput)
}

// External validation id
func (o SolutionVersionPropertiesResponseOutput) ExternalValidationId() pulumi.StringOutput {
	return o.ApplyT(func(v SolutionVersionPropertiesResponse) string { return v.ExternalValidationId }).(pulumi.StringOutput)
}

// The URI for tracking the latest action performed on this solution version.
func (o SolutionVersionPropertiesResponseOutput) LatestActionTrackingUri() pulumi.StringOutput {
	return o.ApplyT(func(v SolutionVersionPropertiesResponse) string { return v.LatestActionTrackingUri }).(pulumi.StringOutput)
}

// Provisioning state of resource
func (o SolutionVersionPropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v SolutionVersionPropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Review id of resolved config for this solution version
func (o SolutionVersionPropertiesResponseOutput) ReviewId() pulumi.StringOutput {
	return o.ApplyT(func(v SolutionVersionPropertiesResponse) string { return v.ReviewId }).(pulumi.StringOutput)
}

// Revision number of resolved config for this solution version
func (o SolutionVersionPropertiesResponseOutput) Revision() pulumi.IntOutput {
	return o.ApplyT(func(v SolutionVersionPropertiesResponse) int { return v.Revision }).(pulumi.IntOutput)
}

// Solution Dependency Context
func (o SolutionVersionPropertiesResponseOutput) SolutionDependencies() SolutionDependencyResponseArrayOutput {
	return o.ApplyT(func(v SolutionVersionPropertiesResponse) []SolutionDependencyResponse { return v.SolutionDependencies }).(SolutionDependencyResponseArrayOutput)
}

// Solution instance name
func (o SolutionVersionPropertiesResponseOutput) SolutionInstanceName() pulumi.StringOutput {
	return o.ApplyT(func(v SolutionVersionPropertiesResponse) string { return v.SolutionInstanceName }).(pulumi.StringOutput)
}

// Solution Template Version Id
func (o SolutionVersionPropertiesResponseOutput) SolutionTemplateVersionId() pulumi.StringOutput {
	return o.ApplyT(func(v SolutionVersionPropertiesResponse) string { return v.SolutionTemplateVersionId }).(pulumi.StringOutput)
}

// App components spec
func (o SolutionVersionPropertiesResponseOutput) Specification() pulumi.AnyOutput {
	return o.ApplyT(func(v SolutionVersionPropertiesResponse) interface{} { return v.Specification }).(pulumi.AnyOutput)
}

// State of solution instance
func (o SolutionVersionPropertiesResponseOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v SolutionVersionPropertiesResponse) string { return v.State }).(pulumi.StringOutput)
}

// Name of applicable target's display name
func (o SolutionVersionPropertiesResponseOutput) TargetDisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v SolutionVersionPropertiesResponse) string { return v.TargetDisplayName }).(pulumi.StringOutput)
}

// Configuration on the line level across all solution template versions
func (o SolutionVersionPropertiesResponseOutput) TargetLevelConfiguration() pulumi.StringOutput {
	return o.ApplyT(func(v SolutionVersionPropertiesResponse) string { return v.TargetLevelConfiguration }).(pulumi.StringOutput)
}

// Stage Properties
type StageSpec struct {
	// Name of Stage
	Name string `pulumi:"name"`
	// Stage specification
	Specification interface{} `pulumi:"specification"`
	// Task option for the stage
	TaskOption *TaskOption `pulumi:"taskOption"`
	// List of tasks in the stage
	Tasks []TaskSpec `pulumi:"tasks"`
}

// Defaults sets the appropriate defaults for StageSpec
func (val *StageSpec) Defaults() *StageSpec {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.TaskOption = tmp.TaskOption.Defaults()

	return &tmp
}

// StageSpecInput is an input type that accepts StageSpecArgs and StageSpecOutput values.
// You can construct a concrete instance of `StageSpecInput` via:
//
//	StageSpecArgs{...}
type StageSpecInput interface {
	pulumi.Input

	ToStageSpecOutput() StageSpecOutput
	ToStageSpecOutputWithContext(context.Context) StageSpecOutput
}

// Stage Properties
type StageSpecArgs struct {
	// Name of Stage
	Name pulumi.StringInput `pulumi:"name"`
	// Stage specification
	Specification pulumi.Input `pulumi:"specification"`
	// Task option for the stage
	TaskOption TaskOptionPtrInput `pulumi:"taskOption"`
	// List of tasks in the stage
	Tasks TaskSpecArrayInput `pulumi:"tasks"`
}

// Defaults sets the appropriate defaults for StageSpecArgs
func (val *StageSpecArgs) Defaults() *StageSpecArgs {
	if val == nil {
		return nil
	}
	tmp := *val

	return &tmp
}
func (StageSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StageSpec)(nil)).Elem()
}

func (i StageSpecArgs) ToStageSpecOutput() StageSpecOutput {
	return i.ToStageSpecOutputWithContext(context.Background())
}

func (i StageSpecArgs) ToStageSpecOutputWithContext(ctx context.Context) StageSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageSpecOutput)
}

// StageSpecArrayInput is an input type that accepts StageSpecArray and StageSpecArrayOutput values.
// You can construct a concrete instance of `StageSpecArrayInput` via:
//
//	StageSpecArray{ StageSpecArgs{...} }
type StageSpecArrayInput interface {
	pulumi.Input

	ToStageSpecArrayOutput() StageSpecArrayOutput
	ToStageSpecArrayOutputWithContext(context.Context) StageSpecArrayOutput
}

type StageSpecArray []StageSpecInput

func (StageSpecArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StageSpec)(nil)).Elem()
}

func (i StageSpecArray) ToStageSpecArrayOutput() StageSpecArrayOutput {
	return i.ToStageSpecArrayOutputWithContext(context.Background())
}

func (i StageSpecArray) ToStageSpecArrayOutputWithContext(ctx context.Context) StageSpecArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageSpecArrayOutput)
}

// Stage Properties
type StageSpecOutput struct{ *pulumi.OutputState }

func (StageSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StageSpec)(nil)).Elem()
}

func (o StageSpecOutput) ToStageSpecOutput() StageSpecOutput {
	return o
}

func (o StageSpecOutput) ToStageSpecOutputWithContext(ctx context.Context) StageSpecOutput {
	return o
}

// Name of Stage
func (o StageSpecOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v StageSpec) string { return v.Name }).(pulumi.StringOutput)
}

// Stage specification
func (o StageSpecOutput) Specification() pulumi.AnyOutput {
	return o.ApplyT(func(v StageSpec) interface{} { return v.Specification }).(pulumi.AnyOutput)
}

// Task option for the stage
func (o StageSpecOutput) TaskOption() TaskOptionPtrOutput {
	return o.ApplyT(func(v StageSpec) *TaskOption { return v.TaskOption }).(TaskOptionPtrOutput)
}

// List of tasks in the stage
func (o StageSpecOutput) Tasks() TaskSpecArrayOutput {
	return o.ApplyT(func(v StageSpec) []TaskSpec { return v.Tasks }).(TaskSpecArrayOutput)
}

type StageSpecArrayOutput struct{ *pulumi.OutputState }

func (StageSpecArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StageSpec)(nil)).Elem()
}

func (o StageSpecArrayOutput) ToStageSpecArrayOutput() StageSpecArrayOutput {
	return o
}

func (o StageSpecArrayOutput) ToStageSpecArrayOutputWithContext(ctx context.Context) StageSpecArrayOutput {
	return o
}

func (o StageSpecArrayOutput) Index(i pulumi.IntInput) StageSpecOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StageSpec {
		return vs[0].([]StageSpec)[vs[1].(int)]
	}).(StageSpecOutput)
}

// Stage Properties
type StageSpecResponse struct {
	// Name of Stage
	Name string `pulumi:"name"`
	// Stage specification
	Specification interface{} `pulumi:"specification"`
	// Task option for the stage
	TaskOption *TaskOptionResponse `pulumi:"taskOption"`
	// List of tasks in the stage
	Tasks []TaskSpecResponse `pulumi:"tasks"`
}

// Defaults sets the appropriate defaults for StageSpecResponse
func (val *StageSpecResponse) Defaults() *StageSpecResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.TaskOption = tmp.TaskOption.Defaults()

	return &tmp
}

// Stage Properties
type StageSpecResponseOutput struct{ *pulumi.OutputState }

func (StageSpecResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StageSpecResponse)(nil)).Elem()
}

func (o StageSpecResponseOutput) ToStageSpecResponseOutput() StageSpecResponseOutput {
	return o
}

func (o StageSpecResponseOutput) ToStageSpecResponseOutputWithContext(ctx context.Context) StageSpecResponseOutput {
	return o
}

// Name of Stage
func (o StageSpecResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v StageSpecResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Stage specification
func (o StageSpecResponseOutput) Specification() pulumi.AnyOutput {
	return o.ApplyT(func(v StageSpecResponse) interface{} { return v.Specification }).(pulumi.AnyOutput)
}

// Task option for the stage
func (o StageSpecResponseOutput) TaskOption() TaskOptionResponsePtrOutput {
	return o.ApplyT(func(v StageSpecResponse) *TaskOptionResponse { return v.TaskOption }).(TaskOptionResponsePtrOutput)
}

// List of tasks in the stage
func (o StageSpecResponseOutput) Tasks() TaskSpecResponseArrayOutput {
	return o.ApplyT(func(v StageSpecResponse) []TaskSpecResponse { return v.Tasks }).(TaskSpecResponseArrayOutput)
}

type StageSpecResponseArrayOutput struct{ *pulumi.OutputState }

func (StageSpecResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StageSpecResponse)(nil)).Elem()
}

func (o StageSpecResponseArrayOutput) ToStageSpecResponseArrayOutput() StageSpecResponseArrayOutput {
	return o
}

func (o StageSpecResponseArrayOutput) ToStageSpecResponseArrayOutputWithContext(ctx context.Context) StageSpecResponseArrayOutput {
	return o
}

func (o StageSpecResponseArrayOutput) Index(i pulumi.IntInput) StageSpecResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StageSpecResponse {
		return vs[0].([]StageSpecResponse)[vs[1].(int)]
	}).(StageSpecResponseOutput)
}

// Result of Stage execution
type StageStatusResponse struct {
	// Error message
	ErrorMessage *string `pulumi:"errorMessage"`
	// The inputs of the StageHistory, Inputs holds a key-value map of user-defined parameters for the initial stage
	Inputs interface{} `pulumi:"inputs"`
	// whether this stage is active or inactive
	IsActive *string `pulumi:"isActive"`
	// Next stage
	Nextstage *string `pulumi:"nextstage"`
	// The outputs of the StageHistory, it is different as the different input stages.
	Outputs interface{} `pulumi:"outputs"`
	// Current stage
	Stage *string `pulumi:"stage"`
	// Deployment status
	Status *int `pulumi:"status"`
	// Status message
	StatusMessage *string `pulumi:"statusMessage"`
}

// Result of Stage execution
type StageStatusResponseOutput struct{ *pulumi.OutputState }

func (StageStatusResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StageStatusResponse)(nil)).Elem()
}

func (o StageStatusResponseOutput) ToStageStatusResponseOutput() StageStatusResponseOutput {
	return o
}

func (o StageStatusResponseOutput) ToStageStatusResponseOutputWithContext(ctx context.Context) StageStatusResponseOutput {
	return o
}

// Error message
func (o StageStatusResponseOutput) ErrorMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusResponse) *string { return v.ErrorMessage }).(pulumi.StringPtrOutput)
}

// The inputs of the StageHistory, Inputs holds a key-value map of user-defined parameters for the initial stage
func (o StageStatusResponseOutput) Inputs() pulumi.AnyOutput {
	return o.ApplyT(func(v StageStatusResponse) interface{} { return v.Inputs }).(pulumi.AnyOutput)
}

// whether this stage is active or inactive
func (o StageStatusResponseOutput) IsActive() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusResponse) *string { return v.IsActive }).(pulumi.StringPtrOutput)
}

// Next stage
func (o StageStatusResponseOutput) Nextstage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusResponse) *string { return v.Nextstage }).(pulumi.StringPtrOutput)
}

// The outputs of the StageHistory, it is different as the different input stages.
func (o StageStatusResponseOutput) Outputs() pulumi.AnyOutput {
	return o.ApplyT(func(v StageStatusResponse) interface{} { return v.Outputs }).(pulumi.AnyOutput)
}

// Current stage
func (o StageStatusResponseOutput) Stage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusResponse) *string { return v.Stage }).(pulumi.StringPtrOutput)
}

// Deployment status
func (o StageStatusResponseOutput) Status() pulumi.IntPtrOutput {
	return o.ApplyT(func(v StageStatusResponse) *int { return v.Status }).(pulumi.IntPtrOutput)
}

// Status message
func (o StageStatusResponseOutput) StatusMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageStatusResponse) *string { return v.StatusMessage }).(pulumi.StringPtrOutput)
}

type StageStatusResponseArrayOutput struct{ *pulumi.OutputState }

func (StageStatusResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StageStatusResponse)(nil)).Elem()
}

func (o StageStatusResponseArrayOutput) ToStageStatusResponseArrayOutput() StageStatusResponseArrayOutput {
	return o
}

func (o StageStatusResponseArrayOutput) ToStageStatusResponseArrayOutputWithContext(ctx context.Context) StageStatusResponseArrayOutput {
	return o
}

func (o StageStatusResponseArrayOutput) Index(i pulumi.IntInput) StageStatusResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StageStatusResponse {
		return vs[0].([]StageStatusResponse)[vs[1].(int)]
	}).(StageStatusResponseOutput)
}

// Metadata pertaining to creation and last modification of the resource.
type SystemDataResponse struct {
	// The timestamp of resource creation (UTC).
	CreatedAt *string `pulumi:"createdAt"`
	// The identity that created the resource.
	CreatedBy *string `pulumi:"createdBy"`
	// The type of identity that created the resource.
	CreatedByType *string `pulumi:"createdByType"`
	// The timestamp of resource last modification (UTC)
	LastModifiedAt *string `pulumi:"lastModifiedAt"`
	// The identity that last modified the resource.
	LastModifiedBy *string `pulumi:"lastModifiedBy"`
	// The type of identity that last modified the resource.
	LastModifiedByType *string `pulumi:"lastModifiedByType"`
}

// Metadata pertaining to creation and last modification of the resource.
type SystemDataResponseOutput struct{ *pulumi.OutputState }

func (SystemDataResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemDataResponse)(nil)).Elem()
}

func (o SystemDataResponseOutput) ToSystemDataResponseOutput() SystemDataResponseOutput {
	return o
}

func (o SystemDataResponseOutput) ToSystemDataResponseOutputWithContext(ctx context.Context) SystemDataResponseOutput {
	return o
}

// The timestamp of resource creation (UTC).
func (o SystemDataResponseOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedAt }).(pulumi.StringPtrOutput)
}

// The identity that created the resource.
func (o SystemDataResponseOutput) CreatedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedBy }).(pulumi.StringPtrOutput)
}

// The type of identity that created the resource.
func (o SystemDataResponseOutput) CreatedByType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedByType }).(pulumi.StringPtrOutput)
}

// The timestamp of resource last modification (UTC)
func (o SystemDataResponseOutput) LastModifiedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedAt }).(pulumi.StringPtrOutput)
}

// The identity that last modified the resource.
func (o SystemDataResponseOutput) LastModifiedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedBy }).(pulumi.StringPtrOutput)
}

// The type of identity that last modified the resource.
func (o SystemDataResponseOutput) LastModifiedByType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedByType }).(pulumi.StringPtrOutput)
}

// Target Properties
type TargetProperties struct {
	// List of capabilities
	Capabilities []string `pulumi:"capabilities"`
	// ArmId of Context
	ContextId string `pulumi:"contextId"`
	// Description of target
	Description string `pulumi:"description"`
	// Display name of target
	DisplayName string `pulumi:"displayName"`
	// Hierarchy Level
	HierarchyLevel string `pulumi:"hierarchyLevel"`
	// Scope of the target resource
	SolutionScope *string `pulumi:"solutionScope"`
	// State of resource
	State *string `pulumi:"state"`
	// target spec
	TargetSpecification interface{} `pulumi:"targetSpecification"`
}

// TargetPropertiesInput is an input type that accepts TargetPropertiesArgs and TargetPropertiesOutput values.
// You can construct a concrete instance of `TargetPropertiesInput` via:
//
//	TargetPropertiesArgs{...}
type TargetPropertiesInput interface {
	pulumi.Input

	ToTargetPropertiesOutput() TargetPropertiesOutput
	ToTargetPropertiesOutputWithContext(context.Context) TargetPropertiesOutput
}

// Target Properties
type TargetPropertiesArgs struct {
	// List of capabilities
	Capabilities pulumi.StringArrayInput `pulumi:"capabilities"`
	// ArmId of Context
	ContextId pulumi.StringInput `pulumi:"contextId"`
	// Description of target
	Description pulumi.StringInput `pulumi:"description"`
	// Display name of target
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// Hierarchy Level
	HierarchyLevel pulumi.StringInput `pulumi:"hierarchyLevel"`
	// Scope of the target resource
	SolutionScope pulumi.StringPtrInput `pulumi:"solutionScope"`
	// State of resource
	State pulumi.StringPtrInput `pulumi:"state"`
	// target spec
	TargetSpecification pulumi.Input `pulumi:"targetSpecification"`
}

func (TargetPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetProperties)(nil)).Elem()
}

func (i TargetPropertiesArgs) ToTargetPropertiesOutput() TargetPropertiesOutput {
	return i.ToTargetPropertiesOutputWithContext(context.Background())
}

func (i TargetPropertiesArgs) ToTargetPropertiesOutputWithContext(ctx context.Context) TargetPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetPropertiesOutput)
}

func (i TargetPropertiesArgs) ToTargetPropertiesPtrOutput() TargetPropertiesPtrOutput {
	return i.ToTargetPropertiesPtrOutputWithContext(context.Background())
}

func (i TargetPropertiesArgs) ToTargetPropertiesPtrOutputWithContext(ctx context.Context) TargetPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetPropertiesOutput).ToTargetPropertiesPtrOutputWithContext(ctx)
}

// TargetPropertiesPtrInput is an input type that accepts TargetPropertiesArgs, TargetPropertiesPtr and TargetPropertiesPtrOutput values.
// You can construct a concrete instance of `TargetPropertiesPtrInput` via:
//
//	        TargetPropertiesArgs{...}
//
//	or:
//
//	        nil
type TargetPropertiesPtrInput interface {
	pulumi.Input

	ToTargetPropertiesPtrOutput() TargetPropertiesPtrOutput
	ToTargetPropertiesPtrOutputWithContext(context.Context) TargetPropertiesPtrOutput
}

type targetPropertiesPtrType TargetPropertiesArgs

func TargetPropertiesPtr(v *TargetPropertiesArgs) TargetPropertiesPtrInput {
	return (*targetPropertiesPtrType)(v)
}

func (*targetPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TargetProperties)(nil)).Elem()
}

func (i *targetPropertiesPtrType) ToTargetPropertiesPtrOutput() TargetPropertiesPtrOutput {
	return i.ToTargetPropertiesPtrOutputWithContext(context.Background())
}

func (i *targetPropertiesPtrType) ToTargetPropertiesPtrOutputWithContext(ctx context.Context) TargetPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetPropertiesPtrOutput)
}

// Target Properties
type TargetPropertiesOutput struct{ *pulumi.OutputState }

func (TargetPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetProperties)(nil)).Elem()
}

func (o TargetPropertiesOutput) ToTargetPropertiesOutput() TargetPropertiesOutput {
	return o
}

func (o TargetPropertiesOutput) ToTargetPropertiesOutputWithContext(ctx context.Context) TargetPropertiesOutput {
	return o
}

func (o TargetPropertiesOutput) ToTargetPropertiesPtrOutput() TargetPropertiesPtrOutput {
	return o.ToTargetPropertiesPtrOutputWithContext(context.Background())
}

func (o TargetPropertiesOutput) ToTargetPropertiesPtrOutputWithContext(ctx context.Context) TargetPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TargetProperties) *TargetProperties {
		return &v
	}).(TargetPropertiesPtrOutput)
}

// List of capabilities
func (o TargetPropertiesOutput) Capabilities() pulumi.StringArrayOutput {
	return o.ApplyT(func(v TargetProperties) []string { return v.Capabilities }).(pulumi.StringArrayOutput)
}

// ArmId of Context
func (o TargetPropertiesOutput) ContextId() pulumi.StringOutput {
	return o.ApplyT(func(v TargetProperties) string { return v.ContextId }).(pulumi.StringOutput)
}

// Description of target
func (o TargetPropertiesOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v TargetProperties) string { return v.Description }).(pulumi.StringOutput)
}

// Display name of target
func (o TargetPropertiesOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v TargetProperties) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Hierarchy Level
func (o TargetPropertiesOutput) HierarchyLevel() pulumi.StringOutput {
	return o.ApplyT(func(v TargetProperties) string { return v.HierarchyLevel }).(pulumi.StringOutput)
}

// Scope of the target resource
func (o TargetPropertiesOutput) SolutionScope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetProperties) *string { return v.SolutionScope }).(pulumi.StringPtrOutput)
}

// State of resource
func (o TargetPropertiesOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetProperties) *string { return v.State }).(pulumi.StringPtrOutput)
}

// target spec
func (o TargetPropertiesOutput) TargetSpecification() pulumi.AnyOutput {
	return o.ApplyT(func(v TargetProperties) interface{} { return v.TargetSpecification }).(pulumi.AnyOutput)
}

type TargetPropertiesPtrOutput struct{ *pulumi.OutputState }

func (TargetPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TargetProperties)(nil)).Elem()
}

func (o TargetPropertiesPtrOutput) ToTargetPropertiesPtrOutput() TargetPropertiesPtrOutput {
	return o
}

func (o TargetPropertiesPtrOutput) ToTargetPropertiesPtrOutputWithContext(ctx context.Context) TargetPropertiesPtrOutput {
	return o
}

func (o TargetPropertiesPtrOutput) Elem() TargetPropertiesOutput {
	return o.ApplyT(func(v *TargetProperties) TargetProperties {
		if v != nil {
			return *v
		}
		var ret TargetProperties
		return ret
	}).(TargetPropertiesOutput)
}

// List of capabilities
func (o TargetPropertiesPtrOutput) Capabilities() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *TargetProperties) []string {
		if v == nil {
			return nil
		}
		return v.Capabilities
	}).(pulumi.StringArrayOutput)
}

// ArmId of Context
func (o TargetPropertiesPtrOutput) ContextId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TargetProperties) *string {
		if v == nil {
			return nil
		}
		return &v.ContextId
	}).(pulumi.StringPtrOutput)
}

// Description of target
func (o TargetPropertiesPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TargetProperties) *string {
		if v == nil {
			return nil
		}
		return &v.Description
	}).(pulumi.StringPtrOutput)
}

// Display name of target
func (o TargetPropertiesPtrOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TargetProperties) *string {
		if v == nil {
			return nil
		}
		return &v.DisplayName
	}).(pulumi.StringPtrOutput)
}

// Hierarchy Level
func (o TargetPropertiesPtrOutput) HierarchyLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TargetProperties) *string {
		if v == nil {
			return nil
		}
		return &v.HierarchyLevel
	}).(pulumi.StringPtrOutput)
}

// Scope of the target resource
func (o TargetPropertiesPtrOutput) SolutionScope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TargetProperties) *string {
		if v == nil {
			return nil
		}
		return v.SolutionScope
	}).(pulumi.StringPtrOutput)
}

// State of resource
func (o TargetPropertiesPtrOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TargetProperties) *string {
		if v == nil {
			return nil
		}
		return v.State
	}).(pulumi.StringPtrOutput)
}

// target spec
func (o TargetPropertiesPtrOutput) TargetSpecification() pulumi.AnyOutput {
	return o.ApplyT(func(v *TargetProperties) interface{} {
		if v == nil {
			return nil
		}
		return v.TargetSpecification
	}).(pulumi.AnyOutput)
}

// Target Properties
type TargetPropertiesResponse struct {
	// List of capabilities
	Capabilities []string `pulumi:"capabilities"`
	// ArmId of Context
	ContextId string `pulumi:"contextId"`
	// Description of target
	Description string `pulumi:"description"`
	// Display name of target
	DisplayName string `pulumi:"displayName"`
	// Hierarchy Level
	HierarchyLevel string `pulumi:"hierarchyLevel"`
	// Provisioning state of resource
	ProvisioningState string `pulumi:"provisioningState"`
	// Scope of the target resource
	SolutionScope *string `pulumi:"solutionScope"`
	// State of resource
	State *string `pulumi:"state"`
	// Status of target
	Status DeploymentStatusResponse `pulumi:"status"`
	// target spec
	TargetSpecification interface{} `pulumi:"targetSpecification"`
}

// Target Properties
type TargetPropertiesResponseOutput struct{ *pulumi.OutputState }

func (TargetPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetPropertiesResponse)(nil)).Elem()
}

func (o TargetPropertiesResponseOutput) ToTargetPropertiesResponseOutput() TargetPropertiesResponseOutput {
	return o
}

func (o TargetPropertiesResponseOutput) ToTargetPropertiesResponseOutputWithContext(ctx context.Context) TargetPropertiesResponseOutput {
	return o
}

// List of capabilities
func (o TargetPropertiesResponseOutput) Capabilities() pulumi.StringArrayOutput {
	return o.ApplyT(func(v TargetPropertiesResponse) []string { return v.Capabilities }).(pulumi.StringArrayOutput)
}

// ArmId of Context
func (o TargetPropertiesResponseOutput) ContextId() pulumi.StringOutput {
	return o.ApplyT(func(v TargetPropertiesResponse) string { return v.ContextId }).(pulumi.StringOutput)
}

// Description of target
func (o TargetPropertiesResponseOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v TargetPropertiesResponse) string { return v.Description }).(pulumi.StringOutput)
}

// Display name of target
func (o TargetPropertiesResponseOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v TargetPropertiesResponse) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Hierarchy Level
func (o TargetPropertiesResponseOutput) HierarchyLevel() pulumi.StringOutput {
	return o.ApplyT(func(v TargetPropertiesResponse) string { return v.HierarchyLevel }).(pulumi.StringOutput)
}

// Provisioning state of resource
func (o TargetPropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v TargetPropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Scope of the target resource
func (o TargetPropertiesResponseOutput) SolutionScope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetPropertiesResponse) *string { return v.SolutionScope }).(pulumi.StringPtrOutput)
}

// State of resource
func (o TargetPropertiesResponseOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetPropertiesResponse) *string { return v.State }).(pulumi.StringPtrOutput)
}

// Status of target
func (o TargetPropertiesResponseOutput) Status() DeploymentStatusResponseOutput {
	return o.ApplyT(func(v TargetPropertiesResponse) DeploymentStatusResponse { return v.Status }).(DeploymentStatusResponseOutput)
}

// target spec
func (o TargetPropertiesResponseOutput) TargetSpecification() pulumi.AnyOutput {
	return o.ApplyT(func(v TargetPropertiesResponse) interface{} { return v.TargetSpecification }).(pulumi.AnyOutput)
}

// Target Status
type TargetStatusResponse struct {
	// Component statuses
	ComponentStatuses []ComponentStatusResponse `pulumi:"componentStatuses"`
	// Target name
	Name *string `pulumi:"name"`
	// Target status
	Status *string `pulumi:"status"`
}

// Target Status
type TargetStatusResponseOutput struct{ *pulumi.OutputState }

func (TargetStatusResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetStatusResponse)(nil)).Elem()
}

func (o TargetStatusResponseOutput) ToTargetStatusResponseOutput() TargetStatusResponseOutput {
	return o
}

func (o TargetStatusResponseOutput) ToTargetStatusResponseOutputWithContext(ctx context.Context) TargetStatusResponseOutput {
	return o
}

// Component statuses
func (o TargetStatusResponseOutput) ComponentStatuses() ComponentStatusResponseArrayOutput {
	return o.ApplyT(func(v TargetStatusResponse) []ComponentStatusResponse { return v.ComponentStatuses }).(ComponentStatusResponseArrayOutput)
}

// Target name
func (o TargetStatusResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetStatusResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Target status
func (o TargetStatusResponseOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetStatusResponse) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type TargetStatusResponseArrayOutput struct{ *pulumi.OutputState }

func (TargetStatusResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TargetStatusResponse)(nil)).Elem()
}

func (o TargetStatusResponseArrayOutput) ToTargetStatusResponseArrayOutput() TargetStatusResponseArrayOutput {
	return o
}

func (o TargetStatusResponseArrayOutput) ToTargetStatusResponseArrayOutputWithContext(ctx context.Context) TargetStatusResponseArrayOutput {
	return o
}

func (o TargetStatusResponseArrayOutput) Index(i pulumi.IntInput) TargetStatusResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TargetStatusResponse {
		return vs[0].([]TargetStatusResponse)[vs[1].(int)]
	}).(TargetStatusResponseOutput)
}

// Task Option Properties
type TaskOption struct {
	// Parallel worker numbers of the tasks
	Concurrency *int `pulumi:"concurrency"`
	// Error action for the tasks
	ErrorAction *ErrorAction `pulumi:"errorAction"`
}

// Defaults sets the appropriate defaults for TaskOption
func (val *TaskOption) Defaults() *TaskOption {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Concurrency == nil {
		concurrency_ := 1
		tmp.Concurrency = &concurrency_
	}
	tmp.ErrorAction = tmp.ErrorAction.Defaults()

	return &tmp
}

// TaskOptionInput is an input type that accepts TaskOptionArgs and TaskOptionOutput values.
// You can construct a concrete instance of `TaskOptionInput` via:
//
//	TaskOptionArgs{...}
type TaskOptionInput interface {
	pulumi.Input

	ToTaskOptionOutput() TaskOptionOutput
	ToTaskOptionOutputWithContext(context.Context) TaskOptionOutput
}

// Task Option Properties
type TaskOptionArgs struct {
	// Parallel worker numbers of the tasks
	Concurrency pulumi.IntPtrInput `pulumi:"concurrency"`
	// Error action for the tasks
	ErrorAction ErrorActionPtrInput `pulumi:"errorAction"`
}

// Defaults sets the appropriate defaults for TaskOptionArgs
func (val *TaskOptionArgs) Defaults() *TaskOptionArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Concurrency == nil {
		tmp.Concurrency = pulumi.IntPtr(1)
	}

	return &tmp
}
func (TaskOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TaskOption)(nil)).Elem()
}

func (i TaskOptionArgs) ToTaskOptionOutput() TaskOptionOutput {
	return i.ToTaskOptionOutputWithContext(context.Background())
}

func (i TaskOptionArgs) ToTaskOptionOutputWithContext(ctx context.Context) TaskOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TaskOptionOutput)
}

func (i TaskOptionArgs) ToTaskOptionPtrOutput() TaskOptionPtrOutput {
	return i.ToTaskOptionPtrOutputWithContext(context.Background())
}

func (i TaskOptionArgs) ToTaskOptionPtrOutputWithContext(ctx context.Context) TaskOptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TaskOptionOutput).ToTaskOptionPtrOutputWithContext(ctx)
}

// TaskOptionPtrInput is an input type that accepts TaskOptionArgs, TaskOptionPtr and TaskOptionPtrOutput values.
// You can construct a concrete instance of `TaskOptionPtrInput` via:
//
//	        TaskOptionArgs{...}
//
//	or:
//
//	        nil
type TaskOptionPtrInput interface {
	pulumi.Input

	ToTaskOptionPtrOutput() TaskOptionPtrOutput
	ToTaskOptionPtrOutputWithContext(context.Context) TaskOptionPtrOutput
}

type taskOptionPtrType TaskOptionArgs

func TaskOptionPtr(v *TaskOptionArgs) TaskOptionPtrInput {
	return (*taskOptionPtrType)(v)
}

func (*taskOptionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TaskOption)(nil)).Elem()
}

func (i *taskOptionPtrType) ToTaskOptionPtrOutput() TaskOptionPtrOutput {
	return i.ToTaskOptionPtrOutputWithContext(context.Background())
}

func (i *taskOptionPtrType) ToTaskOptionPtrOutputWithContext(ctx context.Context) TaskOptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TaskOptionPtrOutput)
}

// Task Option Properties
type TaskOptionOutput struct{ *pulumi.OutputState }

func (TaskOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TaskOption)(nil)).Elem()
}

func (o TaskOptionOutput) ToTaskOptionOutput() TaskOptionOutput {
	return o
}

func (o TaskOptionOutput) ToTaskOptionOutputWithContext(ctx context.Context) TaskOptionOutput {
	return o
}

func (o TaskOptionOutput) ToTaskOptionPtrOutput() TaskOptionPtrOutput {
	return o.ToTaskOptionPtrOutputWithContext(context.Background())
}

func (o TaskOptionOutput) ToTaskOptionPtrOutputWithContext(ctx context.Context) TaskOptionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TaskOption) *TaskOption {
		return &v
	}).(TaskOptionPtrOutput)
}

// Parallel worker numbers of the tasks
func (o TaskOptionOutput) Concurrency() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TaskOption) *int { return v.Concurrency }).(pulumi.IntPtrOutput)
}

// Error action for the tasks
func (o TaskOptionOutput) ErrorAction() ErrorActionPtrOutput {
	return o.ApplyT(func(v TaskOption) *ErrorAction { return v.ErrorAction }).(ErrorActionPtrOutput)
}

type TaskOptionPtrOutput struct{ *pulumi.OutputState }

func (TaskOptionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TaskOption)(nil)).Elem()
}

func (o TaskOptionPtrOutput) ToTaskOptionPtrOutput() TaskOptionPtrOutput {
	return o
}

func (o TaskOptionPtrOutput) ToTaskOptionPtrOutputWithContext(ctx context.Context) TaskOptionPtrOutput {
	return o
}

func (o TaskOptionPtrOutput) Elem() TaskOptionOutput {
	return o.ApplyT(func(v *TaskOption) TaskOption {
		if v != nil {
			return *v
		}
		var ret TaskOption
		return ret
	}).(TaskOptionOutput)
}

// Parallel worker numbers of the tasks
func (o TaskOptionPtrOutput) Concurrency() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TaskOption) *int {
		if v == nil {
			return nil
		}
		return v.Concurrency
	}).(pulumi.IntPtrOutput)
}

// Error action for the tasks
func (o TaskOptionPtrOutput) ErrorAction() ErrorActionPtrOutput {
	return o.ApplyT(func(v *TaskOption) *ErrorAction {
		if v == nil {
			return nil
		}
		return v.ErrorAction
	}).(ErrorActionPtrOutput)
}

// Task Option Properties
type TaskOptionResponse struct {
	// Parallel worker numbers of the tasks
	Concurrency *int `pulumi:"concurrency"`
	// Error action for the tasks
	ErrorAction *ErrorActionResponse `pulumi:"errorAction"`
}

// Defaults sets the appropriate defaults for TaskOptionResponse
func (val *TaskOptionResponse) Defaults() *TaskOptionResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Concurrency == nil {
		concurrency_ := 1
		tmp.Concurrency = &concurrency_
	}
	tmp.ErrorAction = tmp.ErrorAction.Defaults()

	return &tmp
}

// Task Option Properties
type TaskOptionResponseOutput struct{ *pulumi.OutputState }

func (TaskOptionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TaskOptionResponse)(nil)).Elem()
}

func (o TaskOptionResponseOutput) ToTaskOptionResponseOutput() TaskOptionResponseOutput {
	return o
}

func (o TaskOptionResponseOutput) ToTaskOptionResponseOutputWithContext(ctx context.Context) TaskOptionResponseOutput {
	return o
}

// Parallel worker numbers of the tasks
func (o TaskOptionResponseOutput) Concurrency() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TaskOptionResponse) *int { return v.Concurrency }).(pulumi.IntPtrOutput)
}

// Error action for the tasks
func (o TaskOptionResponseOutput) ErrorAction() ErrorActionResponsePtrOutput {
	return o.ApplyT(func(v TaskOptionResponse) *ErrorActionResponse { return v.ErrorAction }).(ErrorActionResponsePtrOutput)
}

type TaskOptionResponsePtrOutput struct{ *pulumi.OutputState }

func (TaskOptionResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TaskOptionResponse)(nil)).Elem()
}

func (o TaskOptionResponsePtrOutput) ToTaskOptionResponsePtrOutput() TaskOptionResponsePtrOutput {
	return o
}

func (o TaskOptionResponsePtrOutput) ToTaskOptionResponsePtrOutputWithContext(ctx context.Context) TaskOptionResponsePtrOutput {
	return o
}

func (o TaskOptionResponsePtrOutput) Elem() TaskOptionResponseOutput {
	return o.ApplyT(func(v *TaskOptionResponse) TaskOptionResponse {
		if v != nil {
			return *v
		}
		var ret TaskOptionResponse
		return ret
	}).(TaskOptionResponseOutput)
}

// Parallel worker numbers of the tasks
func (o TaskOptionResponsePtrOutput) Concurrency() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TaskOptionResponse) *int {
		if v == nil {
			return nil
		}
		return v.Concurrency
	}).(pulumi.IntPtrOutput)
}

// Error action for the tasks
func (o TaskOptionResponsePtrOutput) ErrorAction() ErrorActionResponsePtrOutput {
	return o.ApplyT(func(v *TaskOptionResponse) *ErrorActionResponse {
		if v == nil {
			return nil
		}
		return v.ErrorAction
	}).(ErrorActionResponsePtrOutput)
}

// Task Spec
type TaskSpec struct {
	// Name of Task
	Name string `pulumi:"name"`
	// Task specification
	Specification interface{} `pulumi:"specification"`
	// Target ARM id
	TargetId *string `pulumi:"targetId"`
}

// TaskSpecInput is an input type that accepts TaskSpecArgs and TaskSpecOutput values.
// You can construct a concrete instance of `TaskSpecInput` via:
//
//	TaskSpecArgs{...}
type TaskSpecInput interface {
	pulumi.Input

	ToTaskSpecOutput() TaskSpecOutput
	ToTaskSpecOutputWithContext(context.Context) TaskSpecOutput
}

// Task Spec
type TaskSpecArgs struct {
	// Name of Task
	Name pulumi.StringInput `pulumi:"name"`
	// Task specification
	Specification pulumi.Input `pulumi:"specification"`
	// Target ARM id
	TargetId pulumi.StringPtrInput `pulumi:"targetId"`
}

func (TaskSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TaskSpec)(nil)).Elem()
}

func (i TaskSpecArgs) ToTaskSpecOutput() TaskSpecOutput {
	return i.ToTaskSpecOutputWithContext(context.Background())
}

func (i TaskSpecArgs) ToTaskSpecOutputWithContext(ctx context.Context) TaskSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TaskSpecOutput)
}

// TaskSpecArrayInput is an input type that accepts TaskSpecArray and TaskSpecArrayOutput values.
// You can construct a concrete instance of `TaskSpecArrayInput` via:
//
//	TaskSpecArray{ TaskSpecArgs{...} }
type TaskSpecArrayInput interface {
	pulumi.Input

	ToTaskSpecArrayOutput() TaskSpecArrayOutput
	ToTaskSpecArrayOutputWithContext(context.Context) TaskSpecArrayOutput
}

type TaskSpecArray []TaskSpecInput

func (TaskSpecArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TaskSpec)(nil)).Elem()
}

func (i TaskSpecArray) ToTaskSpecArrayOutput() TaskSpecArrayOutput {
	return i.ToTaskSpecArrayOutputWithContext(context.Background())
}

func (i TaskSpecArray) ToTaskSpecArrayOutputWithContext(ctx context.Context) TaskSpecArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TaskSpecArrayOutput)
}

// Task Spec
type TaskSpecOutput struct{ *pulumi.OutputState }

func (TaskSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TaskSpec)(nil)).Elem()
}

func (o TaskSpecOutput) ToTaskSpecOutput() TaskSpecOutput {
	return o
}

func (o TaskSpecOutput) ToTaskSpecOutputWithContext(ctx context.Context) TaskSpecOutput {
	return o
}

// Name of Task
func (o TaskSpecOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v TaskSpec) string { return v.Name }).(pulumi.StringOutput)
}

// Task specification
func (o TaskSpecOutput) Specification() pulumi.AnyOutput {
	return o.ApplyT(func(v TaskSpec) interface{} { return v.Specification }).(pulumi.AnyOutput)
}

// Target ARM id
func (o TaskSpecOutput) TargetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TaskSpec) *string { return v.TargetId }).(pulumi.StringPtrOutput)
}

type TaskSpecArrayOutput struct{ *pulumi.OutputState }

func (TaskSpecArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TaskSpec)(nil)).Elem()
}

func (o TaskSpecArrayOutput) ToTaskSpecArrayOutput() TaskSpecArrayOutput {
	return o
}

func (o TaskSpecArrayOutput) ToTaskSpecArrayOutputWithContext(ctx context.Context) TaskSpecArrayOutput {
	return o
}

func (o TaskSpecArrayOutput) Index(i pulumi.IntInput) TaskSpecOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TaskSpec {
		return vs[0].([]TaskSpec)[vs[1].(int)]
	}).(TaskSpecOutput)
}

// Task Spec
type TaskSpecResponse struct {
	// Name of Task
	Name string `pulumi:"name"`
	// Task specification
	Specification interface{} `pulumi:"specification"`
	// Target ARM id
	TargetId *string `pulumi:"targetId"`
}

// Task Spec
type TaskSpecResponseOutput struct{ *pulumi.OutputState }

func (TaskSpecResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TaskSpecResponse)(nil)).Elem()
}

func (o TaskSpecResponseOutput) ToTaskSpecResponseOutput() TaskSpecResponseOutput {
	return o
}

func (o TaskSpecResponseOutput) ToTaskSpecResponseOutputWithContext(ctx context.Context) TaskSpecResponseOutput {
	return o
}

// Name of Task
func (o TaskSpecResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v TaskSpecResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Task specification
func (o TaskSpecResponseOutput) Specification() pulumi.AnyOutput {
	return o.ApplyT(func(v TaskSpecResponse) interface{} { return v.Specification }).(pulumi.AnyOutput)
}

// Target ARM id
func (o TaskSpecResponseOutput) TargetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TaskSpecResponse) *string { return v.TargetId }).(pulumi.StringPtrOutput)
}

type TaskSpecResponseArrayOutput struct{ *pulumi.OutputState }

func (TaskSpecResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TaskSpecResponse)(nil)).Elem()
}

func (o TaskSpecResponseArrayOutput) ToTaskSpecResponseArrayOutput() TaskSpecResponseArrayOutput {
	return o
}

func (o TaskSpecResponseArrayOutput) ToTaskSpecResponseArrayOutputWithContext(ctx context.Context) TaskSpecResponseArrayOutput {
	return o
}

func (o TaskSpecResponseArrayOutput) Index(i pulumi.IntInput) TaskSpecResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TaskSpecResponse {
		return vs[0].([]TaskSpecResponse)[vs[1].(int)]
	}).(TaskSpecResponseOutput)
}

// Workflow Properties
type WorkflowPropertiesResponse struct {
	// Provisioning state of resource
	ProvisioningState string `pulumi:"provisioningState"`
	// Workflow template Id
	WorkflowTemplateId string `pulumi:"workflowTemplateId"`
}

// Workflow Properties
type WorkflowPropertiesResponseOutput struct{ *pulumi.OutputState }

func (WorkflowPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowPropertiesResponse)(nil)).Elem()
}

func (o WorkflowPropertiesResponseOutput) ToWorkflowPropertiesResponseOutput() WorkflowPropertiesResponseOutput {
	return o
}

func (o WorkflowPropertiesResponseOutput) ToWorkflowPropertiesResponseOutputWithContext(ctx context.Context) WorkflowPropertiesResponseOutput {
	return o
}

// Provisioning state of resource
func (o WorkflowPropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowPropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Workflow template Id
func (o WorkflowPropertiesResponseOutput) WorkflowTemplateId() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowPropertiesResponse) string { return v.WorkflowTemplateId }).(pulumi.StringOutput)
}

// Workflow Version Properties
type WorkflowVersionProperties struct {
	// Execution specification
	Specification interface{} `pulumi:"specification"`
	// A list of stage specs
	StageSpec []StageSpec `pulumi:"stageSpec"`
}

// WorkflowVersionPropertiesInput is an input type that accepts WorkflowVersionPropertiesArgs and WorkflowVersionPropertiesOutput values.
// You can construct a concrete instance of `WorkflowVersionPropertiesInput` via:
//
//	WorkflowVersionPropertiesArgs{...}
type WorkflowVersionPropertiesInput interface {
	pulumi.Input

	ToWorkflowVersionPropertiesOutput() WorkflowVersionPropertiesOutput
	ToWorkflowVersionPropertiesOutputWithContext(context.Context) WorkflowVersionPropertiesOutput
}

// Workflow Version Properties
type WorkflowVersionPropertiesArgs struct {
	// Execution specification
	Specification pulumi.Input `pulumi:"specification"`
	// A list of stage specs
	StageSpec StageSpecArrayInput `pulumi:"stageSpec"`
}

func (WorkflowVersionPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowVersionProperties)(nil)).Elem()
}

func (i WorkflowVersionPropertiesArgs) ToWorkflowVersionPropertiesOutput() WorkflowVersionPropertiesOutput {
	return i.ToWorkflowVersionPropertiesOutputWithContext(context.Background())
}

func (i WorkflowVersionPropertiesArgs) ToWorkflowVersionPropertiesOutputWithContext(ctx context.Context) WorkflowVersionPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowVersionPropertiesOutput)
}

func (i WorkflowVersionPropertiesArgs) ToWorkflowVersionPropertiesPtrOutput() WorkflowVersionPropertiesPtrOutput {
	return i.ToWorkflowVersionPropertiesPtrOutputWithContext(context.Background())
}

func (i WorkflowVersionPropertiesArgs) ToWorkflowVersionPropertiesPtrOutputWithContext(ctx context.Context) WorkflowVersionPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowVersionPropertiesOutput).ToWorkflowVersionPropertiesPtrOutputWithContext(ctx)
}

// WorkflowVersionPropertiesPtrInput is an input type that accepts WorkflowVersionPropertiesArgs, WorkflowVersionPropertiesPtr and WorkflowVersionPropertiesPtrOutput values.
// You can construct a concrete instance of `WorkflowVersionPropertiesPtrInput` via:
//
//	        WorkflowVersionPropertiesArgs{...}
//
//	or:
//
//	        nil
type WorkflowVersionPropertiesPtrInput interface {
	pulumi.Input

	ToWorkflowVersionPropertiesPtrOutput() WorkflowVersionPropertiesPtrOutput
	ToWorkflowVersionPropertiesPtrOutputWithContext(context.Context) WorkflowVersionPropertiesPtrOutput
}

type workflowVersionPropertiesPtrType WorkflowVersionPropertiesArgs

func WorkflowVersionPropertiesPtr(v *WorkflowVersionPropertiesArgs) WorkflowVersionPropertiesPtrInput {
	return (*workflowVersionPropertiesPtrType)(v)
}

func (*workflowVersionPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowVersionProperties)(nil)).Elem()
}

func (i *workflowVersionPropertiesPtrType) ToWorkflowVersionPropertiesPtrOutput() WorkflowVersionPropertiesPtrOutput {
	return i.ToWorkflowVersionPropertiesPtrOutputWithContext(context.Background())
}

func (i *workflowVersionPropertiesPtrType) ToWorkflowVersionPropertiesPtrOutputWithContext(ctx context.Context) WorkflowVersionPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowVersionPropertiesPtrOutput)
}

// Workflow Version Properties
type WorkflowVersionPropertiesOutput struct{ *pulumi.OutputState }

func (WorkflowVersionPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowVersionProperties)(nil)).Elem()
}

func (o WorkflowVersionPropertiesOutput) ToWorkflowVersionPropertiesOutput() WorkflowVersionPropertiesOutput {
	return o
}

func (o WorkflowVersionPropertiesOutput) ToWorkflowVersionPropertiesOutputWithContext(ctx context.Context) WorkflowVersionPropertiesOutput {
	return o
}

func (o WorkflowVersionPropertiesOutput) ToWorkflowVersionPropertiesPtrOutput() WorkflowVersionPropertiesPtrOutput {
	return o.ToWorkflowVersionPropertiesPtrOutputWithContext(context.Background())
}

func (o WorkflowVersionPropertiesOutput) ToWorkflowVersionPropertiesPtrOutputWithContext(ctx context.Context) WorkflowVersionPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkflowVersionProperties) *WorkflowVersionProperties {
		return &v
	}).(WorkflowVersionPropertiesPtrOutput)
}

// Execution specification
func (o WorkflowVersionPropertiesOutput) Specification() pulumi.AnyOutput {
	return o.ApplyT(func(v WorkflowVersionProperties) interface{} { return v.Specification }).(pulumi.AnyOutput)
}

// A list of stage specs
func (o WorkflowVersionPropertiesOutput) StageSpec() StageSpecArrayOutput {
	return o.ApplyT(func(v WorkflowVersionProperties) []StageSpec { return v.StageSpec }).(StageSpecArrayOutput)
}

type WorkflowVersionPropertiesPtrOutput struct{ *pulumi.OutputState }

func (WorkflowVersionPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowVersionProperties)(nil)).Elem()
}

func (o WorkflowVersionPropertiesPtrOutput) ToWorkflowVersionPropertiesPtrOutput() WorkflowVersionPropertiesPtrOutput {
	return o
}

func (o WorkflowVersionPropertiesPtrOutput) ToWorkflowVersionPropertiesPtrOutputWithContext(ctx context.Context) WorkflowVersionPropertiesPtrOutput {
	return o
}

func (o WorkflowVersionPropertiesPtrOutput) Elem() WorkflowVersionPropertiesOutput {
	return o.ApplyT(func(v *WorkflowVersionProperties) WorkflowVersionProperties {
		if v != nil {
			return *v
		}
		var ret WorkflowVersionProperties
		return ret
	}).(WorkflowVersionPropertiesOutput)
}

// Execution specification
func (o WorkflowVersionPropertiesPtrOutput) Specification() pulumi.AnyOutput {
	return o.ApplyT(func(v *WorkflowVersionProperties) interface{} {
		if v == nil {
			return nil
		}
		return v.Specification
	}).(pulumi.AnyOutput)
}

// A list of stage specs
func (o WorkflowVersionPropertiesPtrOutput) StageSpec() StageSpecArrayOutput {
	return o.ApplyT(func(v *WorkflowVersionProperties) []StageSpec {
		if v == nil {
			return nil
		}
		return v.StageSpec
	}).(StageSpecArrayOutput)
}

// Workflow Version Properties
type WorkflowVersionPropertiesResponse struct {
	// Resolved configuration values
	Configuration string `pulumi:"configuration"`
	// Provisioning state of resource
	ProvisioningState string `pulumi:"provisioningState"`
	// Review id of resolved config for this workflow version
	ReviewId string `pulumi:"reviewId"`
	// Revision number of resolved config for this workflow version
	Revision int `pulumi:"revision"`
	// Execution specification
	Specification interface{} `pulumi:"specification"`
	// A list of stage specs
	StageSpec []StageSpecResponse `pulumi:"stageSpec"`
	// State of workflow version
	State string `pulumi:"state"`
}

// Workflow Version Properties
type WorkflowVersionPropertiesResponseOutput struct{ *pulumi.OutputState }

func (WorkflowVersionPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowVersionPropertiesResponse)(nil)).Elem()
}

func (o WorkflowVersionPropertiesResponseOutput) ToWorkflowVersionPropertiesResponseOutput() WorkflowVersionPropertiesResponseOutput {
	return o
}

func (o WorkflowVersionPropertiesResponseOutput) ToWorkflowVersionPropertiesResponseOutputWithContext(ctx context.Context) WorkflowVersionPropertiesResponseOutput {
	return o
}

// Resolved configuration values
func (o WorkflowVersionPropertiesResponseOutput) Configuration() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowVersionPropertiesResponse) string { return v.Configuration }).(pulumi.StringOutput)
}

// Provisioning state of resource
func (o WorkflowVersionPropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowVersionPropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Review id of resolved config for this workflow version
func (o WorkflowVersionPropertiesResponseOutput) ReviewId() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowVersionPropertiesResponse) string { return v.ReviewId }).(pulumi.StringOutput)
}

// Revision number of resolved config for this workflow version
func (o WorkflowVersionPropertiesResponseOutput) Revision() pulumi.IntOutput {
	return o.ApplyT(func(v WorkflowVersionPropertiesResponse) int { return v.Revision }).(pulumi.IntOutput)
}

// Execution specification
func (o WorkflowVersionPropertiesResponseOutput) Specification() pulumi.AnyOutput {
	return o.ApplyT(func(v WorkflowVersionPropertiesResponse) interface{} { return v.Specification }).(pulumi.AnyOutput)
}

// A list of stage specs
func (o WorkflowVersionPropertiesResponseOutput) StageSpec() StageSpecResponseArrayOutput {
	return o.ApplyT(func(v WorkflowVersionPropertiesResponse) []StageSpecResponse { return v.StageSpec }).(StageSpecResponseArrayOutput)
}

// State of workflow version
func (o WorkflowVersionPropertiesResponseOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowVersionPropertiesResponse) string { return v.State }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(AvailableSolutionTemplateVersionResponseOutput{})
	pulumi.RegisterOutputType(AvailableSolutionTemplateVersionResponseArrayOutput{})
	pulumi.RegisterOutputType(AzureResourceManagerCommonTypesExtendedLocationOutput{})
	pulumi.RegisterOutputType(AzureResourceManagerCommonTypesExtendedLocationPtrOutput{})
	pulumi.RegisterOutputType(AzureResourceManagerCommonTypesExtendedLocationResponseOutput{})
	pulumi.RegisterOutputType(AzureResourceManagerCommonTypesExtendedLocationResponsePtrOutput{})
	pulumi.RegisterOutputType(CapabilityOutput{})
	pulumi.RegisterOutputType(CapabilityArrayOutput{})
	pulumi.RegisterOutputType(CapabilityResponseOutput{})
	pulumi.RegisterOutputType(CapabilityResponseArrayOutput{})
	pulumi.RegisterOutputType(ComponentStatusResponseOutput{})
	pulumi.RegisterOutputType(ComponentStatusResponseArrayOutput{})
	pulumi.RegisterOutputType(ConfigTemplatePropertiesOutput{})
	pulumi.RegisterOutputType(ConfigTemplatePropertiesPtrOutput{})
	pulumi.RegisterOutputType(ConfigTemplatePropertiesResponseOutput{})
	pulumi.RegisterOutputType(ConfigurationPropertiesResponseOutput{})
	pulumi.RegisterOutputType(ConfigurationReferencePropertiesOutput{})
	pulumi.RegisterOutputType(ConfigurationReferencePropertiesPtrOutput{})
	pulumi.RegisterOutputType(ConfigurationReferencePropertiesResponseOutput{})
	pulumi.RegisterOutputType(ContextPropertiesOutput{})
	pulumi.RegisterOutputType(ContextPropertiesPtrOutput{})
	pulumi.RegisterOutputType(ContextPropertiesResponseOutput{})
	pulumi.RegisterOutputType(DeploymentStatusResponseOutput{})
	pulumi.RegisterOutputType(DiagnosticPropertiesResponseOutput{})
	pulumi.RegisterOutputType(DynamicConfigurationPropertiesOutput{})
	pulumi.RegisterOutputType(DynamicConfigurationPropertiesPtrOutput{})
	pulumi.RegisterOutputType(DynamicConfigurationPropertiesResponseOutput{})
	pulumi.RegisterOutputType(DynamicConfigurationVersionPropertiesOutput{})
	pulumi.RegisterOutputType(DynamicConfigurationVersionPropertiesPtrOutput{})
	pulumi.RegisterOutputType(DynamicConfigurationVersionPropertiesResponseOutput{})
	pulumi.RegisterOutputType(DynamicSchemaPropertiesResponseOutput{})
	pulumi.RegisterOutputType(ErrorActionOutput{})
	pulumi.RegisterOutputType(ErrorActionPtrOutput{})
	pulumi.RegisterOutputType(ErrorActionResponseOutput{})
	pulumi.RegisterOutputType(ErrorActionResponsePtrOutput{})
	pulumi.RegisterOutputType(ErrorAdditionalInfoResponseOutput{})
	pulumi.RegisterOutputType(ErrorAdditionalInfoResponseArrayOutput{})
	pulumi.RegisterOutputType(ErrorDetailResponseOutput{})
	pulumi.RegisterOutputType(ErrorDetailResponseArrayOutput{})
	pulumi.RegisterOutputType(ExecutionPropertiesOutput{})
	pulumi.RegisterOutputType(ExecutionPropertiesPtrOutput{})
	pulumi.RegisterOutputType(ExecutionPropertiesResponseOutput{})
	pulumi.RegisterOutputType(ExecutionStatusResponseOutput{})
	pulumi.RegisterOutputType(HierarchyOutput{})
	pulumi.RegisterOutputType(HierarchyArrayOutput{})
	pulumi.RegisterOutputType(HierarchyResponseOutput{})
	pulumi.RegisterOutputType(HierarchyResponseArrayOutput{})
	pulumi.RegisterOutputType(InstancePropertiesOutput{})
	pulumi.RegisterOutputType(InstancePropertiesPtrOutput{})
	pulumi.RegisterOutputType(InstancePropertiesResponseOutput{})
	pulumi.RegisterOutputType(ReconciliationPolicyPropertiesOutput{})
	pulumi.RegisterOutputType(ReconciliationPolicyPropertiesPtrOutput{})
	pulumi.RegisterOutputType(ReconciliationPolicyPropertiesResponseOutput{})
	pulumi.RegisterOutputType(ReconciliationPolicyPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(SchemaPropertiesResponseOutput{})
	pulumi.RegisterOutputType(SchemaReferencePropertiesOutput{})
	pulumi.RegisterOutputType(SchemaReferencePropertiesPtrOutput{})
	pulumi.RegisterOutputType(SchemaReferencePropertiesResponseOutput{})
	pulumi.RegisterOutputType(SchemaVersionPropertiesOutput{})
	pulumi.RegisterOutputType(SchemaVersionPropertiesPtrOutput{})
	pulumi.RegisterOutputType(SchemaVersionPropertiesResponseOutput{})
	pulumi.RegisterOutputType(SiteAddressPropertiesOutput{})
	pulumi.RegisterOutputType(SiteAddressPropertiesPtrOutput{})
	pulumi.RegisterOutputType(SiteAddressPropertiesResponseOutput{})
	pulumi.RegisterOutputType(SiteAddressPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(SitePropertiesOutput{})
	pulumi.RegisterOutputType(SitePropertiesPtrOutput{})
	pulumi.RegisterOutputType(SitePropertiesResponseOutput{})
	pulumi.RegisterOutputType(SiteReferencePropertiesOutput{})
	pulumi.RegisterOutputType(SiteReferencePropertiesPtrOutput{})
	pulumi.RegisterOutputType(SiteReferencePropertiesResponseOutput{})
	pulumi.RegisterOutputType(SolutionDependencyResponseOutput{})
	pulumi.RegisterOutputType(SolutionDependencyResponseArrayOutput{})
	pulumi.RegisterOutputType(SolutionPropertiesResponseOutput{})
	pulumi.RegisterOutputType(SolutionTemplatePropertiesOutput{})
	pulumi.RegisterOutputType(SolutionTemplatePropertiesPtrOutput{})
	pulumi.RegisterOutputType(SolutionTemplatePropertiesResponseOutput{})
	pulumi.RegisterOutputType(SolutionVersionPropertiesOutput{})
	pulumi.RegisterOutputType(SolutionVersionPropertiesPtrOutput{})
	pulumi.RegisterOutputType(SolutionVersionPropertiesResponseOutput{})
	pulumi.RegisterOutputType(StageSpecOutput{})
	pulumi.RegisterOutputType(StageSpecArrayOutput{})
	pulumi.RegisterOutputType(StageSpecResponseOutput{})
	pulumi.RegisterOutputType(StageSpecResponseArrayOutput{})
	pulumi.RegisterOutputType(StageStatusResponseOutput{})
	pulumi.RegisterOutputType(StageStatusResponseArrayOutput{})
	pulumi.RegisterOutputType(SystemDataResponseOutput{})
	pulumi.RegisterOutputType(TargetPropertiesOutput{})
	pulumi.RegisterOutputType(TargetPropertiesPtrOutput{})
	pulumi.RegisterOutputType(TargetPropertiesResponseOutput{})
	pulumi.RegisterOutputType(TargetStatusResponseOutput{})
	pulumi.RegisterOutputType(TargetStatusResponseArrayOutput{})
	pulumi.RegisterOutputType(TaskOptionOutput{})
	pulumi.RegisterOutputType(TaskOptionPtrOutput{})
	pulumi.RegisterOutputType(TaskOptionResponseOutput{})
	pulumi.RegisterOutputType(TaskOptionResponsePtrOutput{})
	pulumi.RegisterOutputType(TaskSpecOutput{})
	pulumi.RegisterOutputType(TaskSpecArrayOutput{})
	pulumi.RegisterOutputType(TaskSpecResponseOutput{})
	pulumi.RegisterOutputType(TaskSpecResponseArrayOutput{})
	pulumi.RegisterOutputType(WorkflowPropertiesResponseOutput{})
	pulumi.RegisterOutputType(WorkflowVersionPropertiesOutput{})
	pulumi.RegisterOutputType(WorkflowVersionPropertiesPtrOutput{})
	pulumi.RegisterOutputType(WorkflowVersionPropertiesResponseOutput{})
}
