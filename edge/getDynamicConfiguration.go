// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package edge

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v3/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Get a Dynamic Configuration Resource
//
// Uses Azure REST API version 2025-06-01.
//
// Other available API versions: 2025-08-01. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native edge [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
func LookupDynamicConfiguration(ctx *pulumi.Context, args *LookupDynamicConfigurationArgs, opts ...pulumi.InvokeOption) (*LookupDynamicConfigurationResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv LookupDynamicConfigurationResult
	err := ctx.Invoke("azure-native:edge:getDynamicConfiguration", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupDynamicConfigurationArgs struct {
	// Name of the Configuration
	ConfigurationName string `pulumi:"configurationName"`
	// Name of the dynamic configuration
	DynamicConfigurationName string `pulumi:"dynamicConfigurationName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// Dynamic Configuration Resource
type LookupDynamicConfigurationResult struct {
	// The Azure API version of the resource.
	AzureApiVersion string `pulumi:"azureApiVersion"`
	// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
	Id string `pulumi:"id"`
	// The name of the resource
	Name string `pulumi:"name"`
	// The resource-specific properties for this resource.
	Properties DynamicConfigurationPropertiesResponse `pulumi:"properties"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponse `pulumi:"systemData"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type string `pulumi:"type"`
}

func LookupDynamicConfigurationOutput(ctx *pulumi.Context, args LookupDynamicConfigurationOutputArgs, opts ...pulumi.InvokeOption) LookupDynamicConfigurationResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupDynamicConfigurationResultOutput, error) {
			args := v.(LookupDynamicConfigurationArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: utilities.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("azure-native:edge:getDynamicConfiguration", args, LookupDynamicConfigurationResultOutput{}, options).(LookupDynamicConfigurationResultOutput), nil
		}).(LookupDynamicConfigurationResultOutput)
}

type LookupDynamicConfigurationOutputArgs struct {
	// Name of the Configuration
	ConfigurationName pulumi.StringInput `pulumi:"configurationName"`
	// Name of the dynamic configuration
	DynamicConfigurationName pulumi.StringInput `pulumi:"dynamicConfigurationName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
}

func (LookupDynamicConfigurationOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDynamicConfigurationArgs)(nil)).Elem()
}

// Dynamic Configuration Resource
type LookupDynamicConfigurationResultOutput struct{ *pulumi.OutputState }

func (LookupDynamicConfigurationResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDynamicConfigurationResult)(nil)).Elem()
}

func (o LookupDynamicConfigurationResultOutput) ToLookupDynamicConfigurationResultOutput() LookupDynamicConfigurationResultOutput {
	return o
}

func (o LookupDynamicConfigurationResultOutput) ToLookupDynamicConfigurationResultOutputWithContext(ctx context.Context) LookupDynamicConfigurationResultOutput {
	return o
}

// The Azure API version of the resource.
func (o LookupDynamicConfigurationResultOutput) AzureApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDynamicConfigurationResult) string { return v.AzureApiVersion }).(pulumi.StringOutput)
}

// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
func (o LookupDynamicConfigurationResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDynamicConfigurationResult) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the resource
func (o LookupDynamicConfigurationResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDynamicConfigurationResult) string { return v.Name }).(pulumi.StringOutput)
}

// The resource-specific properties for this resource.
func (o LookupDynamicConfigurationResultOutput) Properties() DynamicConfigurationPropertiesResponseOutput {
	return o.ApplyT(func(v LookupDynamicConfigurationResult) DynamicConfigurationPropertiesResponse { return v.Properties }).(DynamicConfigurationPropertiesResponseOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o LookupDynamicConfigurationResultOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v LookupDynamicConfigurationResult) SystemDataResponse { return v.SystemData }).(SystemDataResponseOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o LookupDynamicConfigurationResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDynamicConfigurationResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupDynamicConfigurationResultOutput{})
}
