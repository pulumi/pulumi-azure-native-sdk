// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package edge

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// State of instance
type ActiveState string

const (
	// Instance is active
	ActiveStateActive = ActiveState("active")
	// Instance is inactive
	ActiveStateInactive = ActiveState("inactive")
)

func (ActiveState) ElementType() reflect.Type {
	return reflect.TypeOf((*ActiveState)(nil)).Elem()
}

func (e ActiveState) ToActiveStateOutput() ActiveStateOutput {
	return pulumi.ToOutput(e).(ActiveStateOutput)
}

func (e ActiveState) ToActiveStateOutputWithContext(ctx context.Context) ActiveStateOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ActiveStateOutput)
}

func (e ActiveState) ToActiveStatePtrOutput() ActiveStatePtrOutput {
	return e.ToActiveStatePtrOutputWithContext(context.Background())
}

func (e ActiveState) ToActiveStatePtrOutputWithContext(ctx context.Context) ActiveStatePtrOutput {
	return ActiveState(e).ToActiveStateOutputWithContext(ctx).ToActiveStatePtrOutputWithContext(ctx)
}

func (e ActiveState) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ActiveState) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ActiveState) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ActiveState) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ActiveStateOutput struct{ *pulumi.OutputState }

func (ActiveStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ActiveState)(nil)).Elem()
}

func (o ActiveStateOutput) ToActiveStateOutput() ActiveStateOutput {
	return o
}

func (o ActiveStateOutput) ToActiveStateOutputWithContext(ctx context.Context) ActiveStateOutput {
	return o
}

func (o ActiveStateOutput) ToActiveStatePtrOutput() ActiveStatePtrOutput {
	return o.ToActiveStatePtrOutputWithContext(context.Background())
}

func (o ActiveStateOutput) ToActiveStatePtrOutputWithContext(ctx context.Context) ActiveStatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ActiveState) *ActiveState {
		return &v
	}).(ActiveStatePtrOutput)
}

func (o ActiveStateOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ActiveStateOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ActiveState) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ActiveStateOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ActiveStateOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ActiveState) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ActiveStatePtrOutput struct{ *pulumi.OutputState }

func (ActiveStatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ActiveState)(nil)).Elem()
}

func (o ActiveStatePtrOutput) ToActiveStatePtrOutput() ActiveStatePtrOutput {
	return o
}

func (o ActiveStatePtrOutput) ToActiveStatePtrOutputWithContext(ctx context.Context) ActiveStatePtrOutput {
	return o
}

func (o ActiveStatePtrOutput) Elem() ActiveStateOutput {
	return o.ApplyT(func(v *ActiveState) ActiveState {
		if v != nil {
			return *v
		}
		var ret ActiveState
		return ret
	}).(ActiveStateOutput)
}

func (o ActiveStatePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ActiveStatePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ActiveState) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ActiveStateInput is an input type that accepts values of the ActiveState enum
// A concrete instance of `ActiveStateInput` can be one of the following:
//
//	ActiveStateActive
//	ActiveStateInactive
type ActiveStateInput interface {
	pulumi.Input

	ToActiveStateOutput() ActiveStateOutput
	ToActiveStateOutputWithContext(context.Context) ActiveStateOutput
}

var activeStatePtrType = reflect.TypeOf((**ActiveState)(nil)).Elem()

type ActiveStatePtrInput interface {
	pulumi.Input

	ToActiveStatePtrOutput() ActiveStatePtrOutput
	ToActiveStatePtrOutputWithContext(context.Context) ActiveStatePtrOutput
}

type activeStatePtr string

func ActiveStatePtr(v string) ActiveStatePtrInput {
	return (*activeStatePtr)(&v)
}

func (*activeStatePtr) ElementType() reflect.Type {
	return activeStatePtrType
}

func (in *activeStatePtr) ToActiveStatePtrOutput() ActiveStatePtrOutput {
	return pulumi.ToOutput(in).(ActiveStatePtrOutput)
}

func (in *activeStatePtr) ToActiveStatePtrOutputWithContext(ctx context.Context) ActiveStatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ActiveStatePtrOutput)
}

// Error action mode
type ErrorActionMode string

const (
	// Stop on any failure
	ErrorActionModeStopOnAnyFailure = ErrorActionMode("stopOnAnyFailure")
	// Stop after N cumulative failures
	ErrorActionModeStopOnNFailures = ErrorActionMode("stopOnNFailures")
	// Continue silently despite errors
	ErrorActionModeSilentlyContinue = ErrorActionMode("silentlyContinue")
)

func (ErrorActionMode) ElementType() reflect.Type {
	return reflect.TypeOf((*ErrorActionMode)(nil)).Elem()
}

func (e ErrorActionMode) ToErrorActionModeOutput() ErrorActionModeOutput {
	return pulumi.ToOutput(e).(ErrorActionModeOutput)
}

func (e ErrorActionMode) ToErrorActionModeOutputWithContext(ctx context.Context) ErrorActionModeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ErrorActionModeOutput)
}

func (e ErrorActionMode) ToErrorActionModePtrOutput() ErrorActionModePtrOutput {
	return e.ToErrorActionModePtrOutputWithContext(context.Background())
}

func (e ErrorActionMode) ToErrorActionModePtrOutputWithContext(ctx context.Context) ErrorActionModePtrOutput {
	return ErrorActionMode(e).ToErrorActionModeOutputWithContext(ctx).ToErrorActionModePtrOutputWithContext(ctx)
}

func (e ErrorActionMode) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ErrorActionMode) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ErrorActionMode) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ErrorActionMode) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ErrorActionModeOutput struct{ *pulumi.OutputState }

func (ErrorActionModeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ErrorActionMode)(nil)).Elem()
}

func (o ErrorActionModeOutput) ToErrorActionModeOutput() ErrorActionModeOutput {
	return o
}

func (o ErrorActionModeOutput) ToErrorActionModeOutputWithContext(ctx context.Context) ErrorActionModeOutput {
	return o
}

func (o ErrorActionModeOutput) ToErrorActionModePtrOutput() ErrorActionModePtrOutput {
	return o.ToErrorActionModePtrOutputWithContext(context.Background())
}

func (o ErrorActionModeOutput) ToErrorActionModePtrOutputWithContext(ctx context.Context) ErrorActionModePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ErrorActionMode) *ErrorActionMode {
		return &v
	}).(ErrorActionModePtrOutput)
}

func (o ErrorActionModeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ErrorActionModeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ErrorActionMode) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ErrorActionModeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ErrorActionModeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ErrorActionMode) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ErrorActionModePtrOutput struct{ *pulumi.OutputState }

func (ErrorActionModePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ErrorActionMode)(nil)).Elem()
}

func (o ErrorActionModePtrOutput) ToErrorActionModePtrOutput() ErrorActionModePtrOutput {
	return o
}

func (o ErrorActionModePtrOutput) ToErrorActionModePtrOutputWithContext(ctx context.Context) ErrorActionModePtrOutput {
	return o
}

func (o ErrorActionModePtrOutput) Elem() ErrorActionModeOutput {
	return o.ApplyT(func(v *ErrorActionMode) ErrorActionMode {
		if v != nil {
			return *v
		}
		var ret ErrorActionMode
		return ret
	}).(ErrorActionModeOutput)
}

func (o ErrorActionModePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ErrorActionModePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ErrorActionMode) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ErrorActionModeInput is an input type that accepts values of the ErrorActionMode enum
// A concrete instance of `ErrorActionModeInput` can be one of the following:
//
//	ErrorActionModeStopOnAnyFailure
//	ErrorActionModeStopOnNFailures
//	ErrorActionModeSilentlyContinue
type ErrorActionModeInput interface {
	pulumi.Input

	ToErrorActionModeOutput() ErrorActionModeOutput
	ToErrorActionModeOutputWithContext(context.Context) ErrorActionModeOutput
}

var errorActionModePtrType = reflect.TypeOf((**ErrorActionMode)(nil)).Elem()

type ErrorActionModePtrInput interface {
	pulumi.Input

	ToErrorActionModePtrOutput() ErrorActionModePtrOutput
	ToErrorActionModePtrOutputWithContext(context.Context) ErrorActionModePtrOutput
}

type errorActionModePtr string

func ErrorActionModePtr(v string) ErrorActionModePtrInput {
	return (*errorActionModePtr)(&v)
}

func (*errorActionModePtr) ElementType() reflect.Type {
	return errorActionModePtrType
}

func (in *errorActionModePtr) ToErrorActionModePtrOutput() ErrorActionModePtrOutput {
	return pulumi.ToOutput(in).(ErrorActionModePtrOutput)
}

func (in *errorActionModePtr) ToErrorActionModePtrOutputWithContext(ctx context.Context) ErrorActionModePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ErrorActionModePtrOutput)
}

// The type of the extended location.
type ExtendedLocationType string

const (
	// Azure Edge Zones location type
	ExtendedLocationTypeEdgeZone = ExtendedLocationType("EdgeZone")
	// Azure Custom Locations type
	ExtendedLocationTypeCustomLocation = ExtendedLocationType("CustomLocation")
)

func (ExtendedLocationType) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtendedLocationType)(nil)).Elem()
}

func (e ExtendedLocationType) ToExtendedLocationTypeOutput() ExtendedLocationTypeOutput {
	return pulumi.ToOutput(e).(ExtendedLocationTypeOutput)
}

func (e ExtendedLocationType) ToExtendedLocationTypeOutputWithContext(ctx context.Context) ExtendedLocationTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ExtendedLocationTypeOutput)
}

func (e ExtendedLocationType) ToExtendedLocationTypePtrOutput() ExtendedLocationTypePtrOutput {
	return e.ToExtendedLocationTypePtrOutputWithContext(context.Background())
}

func (e ExtendedLocationType) ToExtendedLocationTypePtrOutputWithContext(ctx context.Context) ExtendedLocationTypePtrOutput {
	return ExtendedLocationType(e).ToExtendedLocationTypeOutputWithContext(ctx).ToExtendedLocationTypePtrOutputWithContext(ctx)
}

func (e ExtendedLocationType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ExtendedLocationType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ExtendedLocationType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ExtendedLocationType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ExtendedLocationTypeOutput struct{ *pulumi.OutputState }

func (ExtendedLocationTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtendedLocationType)(nil)).Elem()
}

func (o ExtendedLocationTypeOutput) ToExtendedLocationTypeOutput() ExtendedLocationTypeOutput {
	return o
}

func (o ExtendedLocationTypeOutput) ToExtendedLocationTypeOutputWithContext(ctx context.Context) ExtendedLocationTypeOutput {
	return o
}

func (o ExtendedLocationTypeOutput) ToExtendedLocationTypePtrOutput() ExtendedLocationTypePtrOutput {
	return o.ToExtendedLocationTypePtrOutputWithContext(context.Background())
}

func (o ExtendedLocationTypeOutput) ToExtendedLocationTypePtrOutputWithContext(ctx context.Context) ExtendedLocationTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ExtendedLocationType) *ExtendedLocationType {
		return &v
	}).(ExtendedLocationTypePtrOutput)
}

func (o ExtendedLocationTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ExtendedLocationTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ExtendedLocationType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ExtendedLocationTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ExtendedLocationTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ExtendedLocationType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ExtendedLocationTypePtrOutput struct{ *pulumi.OutputState }

func (ExtendedLocationTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExtendedLocationType)(nil)).Elem()
}

func (o ExtendedLocationTypePtrOutput) ToExtendedLocationTypePtrOutput() ExtendedLocationTypePtrOutput {
	return o
}

func (o ExtendedLocationTypePtrOutput) ToExtendedLocationTypePtrOutputWithContext(ctx context.Context) ExtendedLocationTypePtrOutput {
	return o
}

func (o ExtendedLocationTypePtrOutput) Elem() ExtendedLocationTypeOutput {
	return o.ApplyT(func(v *ExtendedLocationType) ExtendedLocationType {
		if v != nil {
			return *v
		}
		var ret ExtendedLocationType
		return ret
	}).(ExtendedLocationTypeOutput)
}

func (o ExtendedLocationTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ExtendedLocationTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ExtendedLocationType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ExtendedLocationTypeInput is an input type that accepts values of the ExtendedLocationType enum
// A concrete instance of `ExtendedLocationTypeInput` can be one of the following:
//
//	ExtendedLocationTypeEdgeZone
//	ExtendedLocationTypeCustomLocation
type ExtendedLocationTypeInput interface {
	pulumi.Input

	ToExtendedLocationTypeOutput() ExtendedLocationTypeOutput
	ToExtendedLocationTypeOutputWithContext(context.Context) ExtendedLocationTypeOutput
}

var extendedLocationTypePtrType = reflect.TypeOf((**ExtendedLocationType)(nil)).Elem()

type ExtendedLocationTypePtrInput interface {
	pulumi.Input

	ToExtendedLocationTypePtrOutput() ExtendedLocationTypePtrOutput
	ToExtendedLocationTypePtrOutputWithContext(context.Context) ExtendedLocationTypePtrOutput
}

type extendedLocationTypePtr string

func ExtendedLocationTypePtr(v string) ExtendedLocationTypePtrInput {
	return (*extendedLocationTypePtr)(&v)
}

func (*extendedLocationTypePtr) ElementType() reflect.Type {
	return extendedLocationTypePtrType
}

func (in *extendedLocationTypePtr) ToExtendedLocationTypePtrOutput() ExtendedLocationTypePtrOutput {
	return pulumi.ToOutput(in).(ExtendedLocationTypePtrOutput)
}

func (in *extendedLocationTypePtr) ToExtendedLocationTypePtrOutputWithContext(ctx context.Context) ExtendedLocationTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ExtendedLocationTypePtrOutput)
}

// The state of the ReconciliationPolicy
type ReconciliationState string

const (
	// Reconciliation is inactive
	ReconciliationStateInactive = ReconciliationState("inactive")
	// Reconciliation is active
	ReconciliationStateActive = ReconciliationState("active")
)

func (ReconciliationState) ElementType() reflect.Type {
	return reflect.TypeOf((*ReconciliationState)(nil)).Elem()
}

func (e ReconciliationState) ToReconciliationStateOutput() ReconciliationStateOutput {
	return pulumi.ToOutput(e).(ReconciliationStateOutput)
}

func (e ReconciliationState) ToReconciliationStateOutputWithContext(ctx context.Context) ReconciliationStateOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ReconciliationStateOutput)
}

func (e ReconciliationState) ToReconciliationStatePtrOutput() ReconciliationStatePtrOutput {
	return e.ToReconciliationStatePtrOutputWithContext(context.Background())
}

func (e ReconciliationState) ToReconciliationStatePtrOutputWithContext(ctx context.Context) ReconciliationStatePtrOutput {
	return ReconciliationState(e).ToReconciliationStateOutputWithContext(ctx).ToReconciliationStatePtrOutputWithContext(ctx)
}

func (e ReconciliationState) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ReconciliationState) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ReconciliationState) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ReconciliationState) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ReconciliationStateOutput struct{ *pulumi.OutputState }

func (ReconciliationStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReconciliationState)(nil)).Elem()
}

func (o ReconciliationStateOutput) ToReconciliationStateOutput() ReconciliationStateOutput {
	return o
}

func (o ReconciliationStateOutput) ToReconciliationStateOutputWithContext(ctx context.Context) ReconciliationStateOutput {
	return o
}

func (o ReconciliationStateOutput) ToReconciliationStatePtrOutput() ReconciliationStatePtrOutput {
	return o.ToReconciliationStatePtrOutputWithContext(context.Background())
}

func (o ReconciliationStateOutput) ToReconciliationStatePtrOutputWithContext(ctx context.Context) ReconciliationStatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ReconciliationState) *ReconciliationState {
		return &v
	}).(ReconciliationStatePtrOutput)
}

func (o ReconciliationStateOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ReconciliationStateOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ReconciliationState) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ReconciliationStateOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ReconciliationStateOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ReconciliationState) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ReconciliationStatePtrOutput struct{ *pulumi.OutputState }

func (ReconciliationStatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ReconciliationState)(nil)).Elem()
}

func (o ReconciliationStatePtrOutput) ToReconciliationStatePtrOutput() ReconciliationStatePtrOutput {
	return o
}

func (o ReconciliationStatePtrOutput) ToReconciliationStatePtrOutputWithContext(ctx context.Context) ReconciliationStatePtrOutput {
	return o
}

func (o ReconciliationStatePtrOutput) Elem() ReconciliationStateOutput {
	return o.ApplyT(func(v *ReconciliationState) ReconciliationState {
		if v != nil {
			return *v
		}
		var ret ReconciliationState
		return ret
	}).(ReconciliationStateOutput)
}

func (o ReconciliationStatePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ReconciliationStatePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ReconciliationState) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ReconciliationStateInput is an input type that accepts values of the ReconciliationState enum
// A concrete instance of `ReconciliationStateInput` can be one of the following:
//
//	ReconciliationStateInactive
//	ReconciliationStateActive
type ReconciliationStateInput interface {
	pulumi.Input

	ToReconciliationStateOutput() ReconciliationStateOutput
	ToReconciliationStateOutputWithContext(context.Context) ReconciliationStateOutput
}

var reconciliationStatePtrType = reflect.TypeOf((**ReconciliationState)(nil)).Elem()

type ReconciliationStatePtrInput interface {
	pulumi.Input

	ToReconciliationStatePtrOutput() ReconciliationStatePtrOutput
	ToReconciliationStatePtrOutputWithContext(context.Context) ReconciliationStatePtrOutput
}

type reconciliationStatePtr string

func ReconciliationStatePtr(v string) ReconciliationStatePtrInput {
	return (*reconciliationStatePtr)(&v)
}

func (*reconciliationStatePtr) ElementType() reflect.Type {
	return reconciliationStatePtrType
}

func (in *reconciliationStatePtr) ToReconciliationStatePtrOutput() ReconciliationStatePtrOutput {
	return pulumi.ToOutput(in).(ReconciliationStatePtrOutput)
}

func (in *reconciliationStatePtr) ToReconciliationStatePtrOutputWithContext(ctx context.Context) ReconciliationStatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ReconciliationStatePtrOutput)
}

// State of resource
type ResourceState string

const (
	// Resource is active
	ResourceStateActive = ResourceState("active")
	// Resource is inactive
	ResourceStateInactive = ResourceState("inactive")
)

func (ResourceState) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceState)(nil)).Elem()
}

func (e ResourceState) ToResourceStateOutput() ResourceStateOutput {
	return pulumi.ToOutput(e).(ResourceStateOutput)
}

func (e ResourceState) ToResourceStateOutputWithContext(ctx context.Context) ResourceStateOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ResourceStateOutput)
}

func (e ResourceState) ToResourceStatePtrOutput() ResourceStatePtrOutput {
	return e.ToResourceStatePtrOutputWithContext(context.Background())
}

func (e ResourceState) ToResourceStatePtrOutputWithContext(ctx context.Context) ResourceStatePtrOutput {
	return ResourceState(e).ToResourceStateOutputWithContext(ctx).ToResourceStatePtrOutputWithContext(ctx)
}

func (e ResourceState) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ResourceState) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ResourceState) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ResourceState) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ResourceStateOutput struct{ *pulumi.OutputState }

func (ResourceStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceState)(nil)).Elem()
}

func (o ResourceStateOutput) ToResourceStateOutput() ResourceStateOutput {
	return o
}

func (o ResourceStateOutput) ToResourceStateOutputWithContext(ctx context.Context) ResourceStateOutput {
	return o
}

func (o ResourceStateOutput) ToResourceStatePtrOutput() ResourceStatePtrOutput {
	return o.ToResourceStatePtrOutputWithContext(context.Background())
}

func (o ResourceStateOutput) ToResourceStatePtrOutputWithContext(ctx context.Context) ResourceStatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ResourceState) *ResourceState {
		return &v
	}).(ResourceStatePtrOutput)
}

func (o ResourceStateOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ResourceStateOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ResourceState) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ResourceStateOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ResourceStateOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ResourceState) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ResourceStatePtrOutput struct{ *pulumi.OutputState }

func (ResourceStatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceState)(nil)).Elem()
}

func (o ResourceStatePtrOutput) ToResourceStatePtrOutput() ResourceStatePtrOutput {
	return o
}

func (o ResourceStatePtrOutput) ToResourceStatePtrOutputWithContext(ctx context.Context) ResourceStatePtrOutput {
	return o
}

func (o ResourceStatePtrOutput) Elem() ResourceStateOutput {
	return o.ApplyT(func(v *ResourceState) ResourceState {
		if v != nil {
			return *v
		}
		var ret ResourceState
		return ret
	}).(ResourceStateOutput)
}

func (o ResourceStatePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ResourceStatePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ResourceState) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ResourceStateInput is an input type that accepts values of the ResourceState enum
// A concrete instance of `ResourceStateInput` can be one of the following:
//
//	ResourceStateActive
//	ResourceStateInactive
type ResourceStateInput interface {
	pulumi.Input

	ToResourceStateOutput() ResourceStateOutput
	ToResourceStateOutputWithContext(context.Context) ResourceStateOutput
}

var resourceStatePtrType = reflect.TypeOf((**ResourceState)(nil)).Elem()

type ResourceStatePtrInput interface {
	pulumi.Input

	ToResourceStatePtrOutput() ResourceStatePtrOutput
	ToResourceStatePtrOutputWithContext(context.Context) ResourceStatePtrOutput
}

type resourceStatePtr string

func ResourceStatePtr(v string) ResourceStatePtrInput {
	return (*resourceStatePtr)(&v)
}

func (*resourceStatePtr) ElementType() reflect.Type {
	return resourceStatePtrType
}

func (in *resourceStatePtr) ToResourceStatePtrOutput() ResourceStatePtrOutput {
	return pulumi.ToOutput(in).(ResourceStatePtrOutput)
}

func (in *resourceStatePtr) ToResourceStatePtrOutputWithContext(ctx context.Context) ResourceStatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ResourceStatePtrOutput)
}

func init() {
	pulumi.RegisterOutputType(ActiveStateOutput{})
	pulumi.RegisterOutputType(ActiveStatePtrOutput{})
	pulumi.RegisterOutputType(ErrorActionModeOutput{})
	pulumi.RegisterOutputType(ErrorActionModePtrOutput{})
	pulumi.RegisterOutputType(ExtendedLocationTypeOutput{})
	pulumi.RegisterOutputType(ExtendedLocationTypePtrOutput{})
	pulumi.RegisterOutputType(ReconciliationStateOutput{})
	pulumi.RegisterOutputType(ReconciliationStatePtrOutput{})
	pulumi.RegisterOutputType(ResourceStateOutput{})
	pulumi.RegisterOutputType(ResourceStatePtrOutput{})
}
