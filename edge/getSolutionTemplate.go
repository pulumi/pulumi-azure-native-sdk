// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package edge

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v3/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Get a Solution Template Resource
//
// Uses Azure REST API version 2025-06-01.
//
// Other available API versions: 2025-08-01. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native edge [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
func LookupSolutionTemplate(ctx *pulumi.Context, args *LookupSolutionTemplateArgs, opts ...pulumi.InvokeOption) (*LookupSolutionTemplateResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv LookupSolutionTemplateResult
	err := ctx.Invoke("azure-native:edge:getSolutionTemplate", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupSolutionTemplateArgs struct {
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The name of the SolutionTemplate
	SolutionTemplateName string `pulumi:"solutionTemplateName"`
}

// Solution Template Resource. Contains capabilities and operations for creating versions.
type LookupSolutionTemplateResult struct {
	// The Azure API version of the resource.
	AzureApiVersion string `pulumi:"azureApiVersion"`
	// If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.
	ETag string `pulumi:"eTag"`
	// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
	Id string `pulumi:"id"`
	// The geo-location where the resource lives
	Location string `pulumi:"location"`
	// The name of the resource
	Name string `pulumi:"name"`
	// The resource-specific properties for this resource.
	Properties SolutionTemplatePropertiesResponse `pulumi:"properties"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponse `pulumi:"systemData"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type string `pulumi:"type"`
}

func LookupSolutionTemplateOutput(ctx *pulumi.Context, args LookupSolutionTemplateOutputArgs, opts ...pulumi.InvokeOption) LookupSolutionTemplateResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupSolutionTemplateResultOutput, error) {
			args := v.(LookupSolutionTemplateArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: utilities.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("azure-native:edge:getSolutionTemplate", args, LookupSolutionTemplateResultOutput{}, options).(LookupSolutionTemplateResultOutput), nil
		}).(LookupSolutionTemplateResultOutput)
}

type LookupSolutionTemplateOutputArgs struct {
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
	// The name of the SolutionTemplate
	SolutionTemplateName pulumi.StringInput `pulumi:"solutionTemplateName"`
}

func (LookupSolutionTemplateOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSolutionTemplateArgs)(nil)).Elem()
}

// Solution Template Resource. Contains capabilities and operations for creating versions.
type LookupSolutionTemplateResultOutput struct{ *pulumi.OutputState }

func (LookupSolutionTemplateResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSolutionTemplateResult)(nil)).Elem()
}

func (o LookupSolutionTemplateResultOutput) ToLookupSolutionTemplateResultOutput() LookupSolutionTemplateResultOutput {
	return o
}

func (o LookupSolutionTemplateResultOutput) ToLookupSolutionTemplateResultOutputWithContext(ctx context.Context) LookupSolutionTemplateResultOutput {
	return o
}

// The Azure API version of the resource.
func (o LookupSolutionTemplateResultOutput) AzureApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSolutionTemplateResult) string { return v.AzureApiVersion }).(pulumi.StringOutput)
}

// If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.
func (o LookupSolutionTemplateResultOutput) ETag() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSolutionTemplateResult) string { return v.ETag }).(pulumi.StringOutput)
}

// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
func (o LookupSolutionTemplateResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSolutionTemplateResult) string { return v.Id }).(pulumi.StringOutput)
}

// The geo-location where the resource lives
func (o LookupSolutionTemplateResultOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSolutionTemplateResult) string { return v.Location }).(pulumi.StringOutput)
}

// The name of the resource
func (o LookupSolutionTemplateResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSolutionTemplateResult) string { return v.Name }).(pulumi.StringOutput)
}

// The resource-specific properties for this resource.
func (o LookupSolutionTemplateResultOutput) Properties() SolutionTemplatePropertiesResponseOutput {
	return o.ApplyT(func(v LookupSolutionTemplateResult) SolutionTemplatePropertiesResponse { return v.Properties }).(SolutionTemplatePropertiesResponseOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o LookupSolutionTemplateResultOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v LookupSolutionTemplateResult) SystemDataResponse { return v.SystemData }).(SystemDataResponseOutput)
}

// Resource tags.
func (o LookupSolutionTemplateResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupSolutionTemplateResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o LookupSolutionTemplateResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSolutionTemplateResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupSolutionTemplateResultOutput{})
}
