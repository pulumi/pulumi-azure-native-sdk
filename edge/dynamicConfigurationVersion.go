// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package edge

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure-native-sdk/v3/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Dynamic Configuration Resource
//
// Uses Azure REST API version 2025-06-01.
type DynamicConfigurationVersion struct {
	pulumi.CustomResourceState

	// The Azure API version of the resource.
	AzureApiVersion pulumi.StringOutput `pulumi:"azureApiVersion"`
	// The name of the resource
	Name pulumi.StringOutput `pulumi:"name"`
	// The resource-specific properties for this resource.
	Properties DynamicConfigurationVersionPropertiesResponseOutput `pulumi:"properties"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponseOutput `pulumi:"systemData"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewDynamicConfigurationVersion registers a new resource with the given unique name, arguments, and options.
func NewDynamicConfigurationVersion(ctx *pulumi.Context,
	name string, args *DynamicConfigurationVersionArgs, opts ...pulumi.ResourceOption) (*DynamicConfigurationVersion, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ConfigurationName == nil {
		return nil, errors.New("invalid value for required argument 'ConfigurationName'")
	}
	if args.DynamicConfigurationName == nil {
		return nil, errors.New("invalid value for required argument 'DynamicConfigurationName'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:edge/v20250601:DynamicConfigurationVersion"),
		},
	})
	opts = append(opts, aliases)
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource DynamicConfigurationVersion
	err := ctx.RegisterResource("azure-native:edge:DynamicConfigurationVersion", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDynamicConfigurationVersion gets an existing DynamicConfigurationVersion resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDynamicConfigurationVersion(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DynamicConfigurationVersionState, opts ...pulumi.ResourceOption) (*DynamicConfigurationVersion, error) {
	var resource DynamicConfigurationVersion
	err := ctx.ReadResource("azure-native:edge:DynamicConfigurationVersion", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DynamicConfigurationVersion resources.
type dynamicConfigurationVersionState struct {
}

type DynamicConfigurationVersionState struct {
}

func (DynamicConfigurationVersionState) ElementType() reflect.Type {
	return reflect.TypeOf((*dynamicConfigurationVersionState)(nil)).Elem()
}

type dynamicConfigurationVersionArgs struct {
	// Name of the Configuration
	ConfigurationName string `pulumi:"configurationName"`
	// Name of the dynamic configuration
	DynamicConfigurationName string `pulumi:"dynamicConfigurationName"`
	// The name of the DynamicConfigurationVersion
	DynamicConfigurationVersionName *string `pulumi:"dynamicConfigurationVersionName"`
	// The resource-specific properties for this resource.
	Properties *DynamicConfigurationVersionProperties `pulumi:"properties"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// The set of arguments for constructing a DynamicConfigurationVersion resource.
type DynamicConfigurationVersionArgs struct {
	// Name of the Configuration
	ConfigurationName pulumi.StringInput
	// Name of the dynamic configuration
	DynamicConfigurationName pulumi.StringInput
	// The name of the DynamicConfigurationVersion
	DynamicConfigurationVersionName pulumi.StringPtrInput
	// The resource-specific properties for this resource.
	Properties DynamicConfigurationVersionPropertiesPtrInput
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput
}

func (DynamicConfigurationVersionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*dynamicConfigurationVersionArgs)(nil)).Elem()
}

type DynamicConfigurationVersionInput interface {
	pulumi.Input

	ToDynamicConfigurationVersionOutput() DynamicConfigurationVersionOutput
	ToDynamicConfigurationVersionOutputWithContext(ctx context.Context) DynamicConfigurationVersionOutput
}

func (*DynamicConfigurationVersion) ElementType() reflect.Type {
	return reflect.TypeOf((**DynamicConfigurationVersion)(nil)).Elem()
}

func (i *DynamicConfigurationVersion) ToDynamicConfigurationVersionOutput() DynamicConfigurationVersionOutput {
	return i.ToDynamicConfigurationVersionOutputWithContext(context.Background())
}

func (i *DynamicConfigurationVersion) ToDynamicConfigurationVersionOutputWithContext(ctx context.Context) DynamicConfigurationVersionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DynamicConfigurationVersionOutput)
}

type DynamicConfigurationVersionOutput struct{ *pulumi.OutputState }

func (DynamicConfigurationVersionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DynamicConfigurationVersion)(nil)).Elem()
}

func (o DynamicConfigurationVersionOutput) ToDynamicConfigurationVersionOutput() DynamicConfigurationVersionOutput {
	return o
}

func (o DynamicConfigurationVersionOutput) ToDynamicConfigurationVersionOutputWithContext(ctx context.Context) DynamicConfigurationVersionOutput {
	return o
}

// The Azure API version of the resource.
func (o DynamicConfigurationVersionOutput) AzureApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *DynamicConfigurationVersion) pulumi.StringOutput { return v.AzureApiVersion }).(pulumi.StringOutput)
}

// The name of the resource
func (o DynamicConfigurationVersionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *DynamicConfigurationVersion) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The resource-specific properties for this resource.
func (o DynamicConfigurationVersionOutput) Properties() DynamicConfigurationVersionPropertiesResponseOutput {
	return o.ApplyT(func(v *DynamicConfigurationVersion) DynamicConfigurationVersionPropertiesResponseOutput {
		return v.Properties
	}).(DynamicConfigurationVersionPropertiesResponseOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o DynamicConfigurationVersionOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v *DynamicConfigurationVersion) SystemDataResponseOutput { return v.SystemData }).(SystemDataResponseOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o DynamicConfigurationVersionOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *DynamicConfigurationVersion) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(DynamicConfigurationVersionOutput{})
}
