// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package edge

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure-native-sdk/v3/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ConfigurationReference Resource
//
// Uses Azure REST API version 2025-06-01.
type ConfigurationReference struct {
	pulumi.CustomResourceState

	// The Azure API version of the resource.
	AzureApiVersion pulumi.StringOutput `pulumi:"azureApiVersion"`
	// The name of the resource
	Name pulumi.StringOutput `pulumi:"name"`
	// The resource-specific properties for this resource.
	Properties ConfigurationReferencePropertiesResponseOutput `pulumi:"properties"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponseOutput `pulumi:"systemData"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewConfigurationReference registers a new resource with the given unique name, arguments, and options.
func NewConfigurationReference(ctx *pulumi.Context,
	name string, args *ConfigurationReferenceArgs, opts ...pulumi.ResourceOption) (*ConfigurationReference, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ResourceUri == nil {
		return nil, errors.New("invalid value for required argument 'ResourceUri'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:edge/v20250601:ConfigurationReference"),
		},
	})
	opts = append(opts, aliases)
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource ConfigurationReference
	err := ctx.RegisterResource("azure-native:edge:ConfigurationReference", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetConfigurationReference gets an existing ConfigurationReference resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetConfigurationReference(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ConfigurationReferenceState, opts ...pulumi.ResourceOption) (*ConfigurationReference, error) {
	var resource ConfigurationReference
	err := ctx.ReadResource("azure-native:edge:ConfigurationReference", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ConfigurationReference resources.
type configurationReferenceState struct {
}

type ConfigurationReferenceState struct {
}

func (ConfigurationReferenceState) ElementType() reflect.Type {
	return reflect.TypeOf((*configurationReferenceState)(nil)).Elem()
}

type configurationReferenceArgs struct {
	// The name of the ConfigurationReference
	ConfigurationReferenceName *string `pulumi:"configurationReferenceName"`
	// The resource-specific properties for this resource.
	Properties *ConfigurationReferenceProperties `pulumi:"properties"`
	// The fully qualified Azure Resource manager identifier of the resource.
	ResourceUri string `pulumi:"resourceUri"`
}

// The set of arguments for constructing a ConfigurationReference resource.
type ConfigurationReferenceArgs struct {
	// The name of the ConfigurationReference
	ConfigurationReferenceName pulumi.StringPtrInput
	// The resource-specific properties for this resource.
	Properties ConfigurationReferencePropertiesPtrInput
	// The fully qualified Azure Resource manager identifier of the resource.
	ResourceUri pulumi.StringInput
}

func (ConfigurationReferenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*configurationReferenceArgs)(nil)).Elem()
}

type ConfigurationReferenceInput interface {
	pulumi.Input

	ToConfigurationReferenceOutput() ConfigurationReferenceOutput
	ToConfigurationReferenceOutputWithContext(ctx context.Context) ConfigurationReferenceOutput
}

func (*ConfigurationReference) ElementType() reflect.Type {
	return reflect.TypeOf((**ConfigurationReference)(nil)).Elem()
}

func (i *ConfigurationReference) ToConfigurationReferenceOutput() ConfigurationReferenceOutput {
	return i.ToConfigurationReferenceOutputWithContext(context.Background())
}

func (i *ConfigurationReference) ToConfigurationReferenceOutputWithContext(ctx context.Context) ConfigurationReferenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigurationReferenceOutput)
}

type ConfigurationReferenceOutput struct{ *pulumi.OutputState }

func (ConfigurationReferenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConfigurationReference)(nil)).Elem()
}

func (o ConfigurationReferenceOutput) ToConfigurationReferenceOutput() ConfigurationReferenceOutput {
	return o
}

func (o ConfigurationReferenceOutput) ToConfigurationReferenceOutputWithContext(ctx context.Context) ConfigurationReferenceOutput {
	return o
}

// The Azure API version of the resource.
func (o ConfigurationReferenceOutput) AzureApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *ConfigurationReference) pulumi.StringOutput { return v.AzureApiVersion }).(pulumi.StringOutput)
}

// The name of the resource
func (o ConfigurationReferenceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ConfigurationReference) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The resource-specific properties for this resource.
func (o ConfigurationReferenceOutput) Properties() ConfigurationReferencePropertiesResponseOutput {
	return o.ApplyT(func(v *ConfigurationReference) ConfigurationReferencePropertiesResponseOutput { return v.Properties }).(ConfigurationReferencePropertiesResponseOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o ConfigurationReferenceOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v *ConfigurationReference) SystemDataResponseOutput { return v.SystemData }).(SystemDataResponseOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o ConfigurationReferenceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *ConfigurationReference) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(ConfigurationReferenceOutput{})
}
