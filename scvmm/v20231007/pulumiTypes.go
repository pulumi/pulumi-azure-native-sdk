// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20231007

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = utilities.GetEnvOrDefault

// Defines the resource properties.
type Checkpoint struct {
	// Gets ID of the checkpoint.
	CheckpointID *string `pulumi:"checkpointID"`
	// Gets description of the checkpoint.
	Description *string `pulumi:"description"`
	// Gets name of the checkpoint.
	Name *string `pulumi:"name"`
	// Gets ID of parent of the checkpoint.
	ParentCheckpointID *string `pulumi:"parentCheckpointID"`
}

// CheckpointInput is an input type that accepts CheckpointArgs and CheckpointOutput values.
// You can construct a concrete instance of `CheckpointInput` via:
//
//	CheckpointArgs{...}
type CheckpointInput interface {
	pulumi.Input

	ToCheckpointOutput() CheckpointOutput
	ToCheckpointOutputWithContext(context.Context) CheckpointOutput
}

// Defines the resource properties.
type CheckpointArgs struct {
	// Gets ID of the checkpoint.
	CheckpointID pulumi.StringPtrInput `pulumi:"checkpointID"`
	// Gets description of the checkpoint.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Gets name of the checkpoint.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Gets ID of parent of the checkpoint.
	ParentCheckpointID pulumi.StringPtrInput `pulumi:"parentCheckpointID"`
}

func (CheckpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Checkpoint)(nil)).Elem()
}

func (i CheckpointArgs) ToCheckpointOutput() CheckpointOutput {
	return i.ToCheckpointOutputWithContext(context.Background())
}

func (i CheckpointArgs) ToCheckpointOutputWithContext(ctx context.Context) CheckpointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CheckpointOutput)
}

// CheckpointArrayInput is an input type that accepts CheckpointArray and CheckpointArrayOutput values.
// You can construct a concrete instance of `CheckpointArrayInput` via:
//
//	CheckpointArray{ CheckpointArgs{...} }
type CheckpointArrayInput interface {
	pulumi.Input

	ToCheckpointArrayOutput() CheckpointArrayOutput
	ToCheckpointArrayOutputWithContext(context.Context) CheckpointArrayOutput
}

type CheckpointArray []CheckpointInput

func (CheckpointArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Checkpoint)(nil)).Elem()
}

func (i CheckpointArray) ToCheckpointArrayOutput() CheckpointArrayOutput {
	return i.ToCheckpointArrayOutputWithContext(context.Background())
}

func (i CheckpointArray) ToCheckpointArrayOutputWithContext(ctx context.Context) CheckpointArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CheckpointArrayOutput)
}

// Defines the resource properties.
type CheckpointOutput struct{ *pulumi.OutputState }

func (CheckpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Checkpoint)(nil)).Elem()
}

func (o CheckpointOutput) ToCheckpointOutput() CheckpointOutput {
	return o
}

func (o CheckpointOutput) ToCheckpointOutputWithContext(ctx context.Context) CheckpointOutput {
	return o
}

// Gets ID of the checkpoint.
func (o CheckpointOutput) CheckpointID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Checkpoint) *string { return v.CheckpointID }).(pulumi.StringPtrOutput)
}

// Gets description of the checkpoint.
func (o CheckpointOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Checkpoint) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Gets name of the checkpoint.
func (o CheckpointOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Checkpoint) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Gets ID of parent of the checkpoint.
func (o CheckpointOutput) ParentCheckpointID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Checkpoint) *string { return v.ParentCheckpointID }).(pulumi.StringPtrOutput)
}

type CheckpointArrayOutput struct{ *pulumi.OutputState }

func (CheckpointArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Checkpoint)(nil)).Elem()
}

func (o CheckpointArrayOutput) ToCheckpointArrayOutput() CheckpointArrayOutput {
	return o
}

func (o CheckpointArrayOutput) ToCheckpointArrayOutputWithContext(ctx context.Context) CheckpointArrayOutput {
	return o
}

func (o CheckpointArrayOutput) Index(i pulumi.IntInput) CheckpointOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Checkpoint {
		return vs[0].([]Checkpoint)[vs[1].(int)]
	}).(CheckpointOutput)
}

// Defines the resource properties.
type CheckpointResponse struct {
	// Gets ID of the checkpoint.
	CheckpointID *string `pulumi:"checkpointID"`
	// Gets description of the checkpoint.
	Description *string `pulumi:"description"`
	// Gets name of the checkpoint.
	Name *string `pulumi:"name"`
	// Gets ID of parent of the checkpoint.
	ParentCheckpointID *string `pulumi:"parentCheckpointID"`
}

// Defines the resource properties.
type CheckpointResponseOutput struct{ *pulumi.OutputState }

func (CheckpointResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CheckpointResponse)(nil)).Elem()
}

func (o CheckpointResponseOutput) ToCheckpointResponseOutput() CheckpointResponseOutput {
	return o
}

func (o CheckpointResponseOutput) ToCheckpointResponseOutputWithContext(ctx context.Context) CheckpointResponseOutput {
	return o
}

// Gets ID of the checkpoint.
func (o CheckpointResponseOutput) CheckpointID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CheckpointResponse) *string { return v.CheckpointID }).(pulumi.StringPtrOutput)
}

// Gets description of the checkpoint.
func (o CheckpointResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CheckpointResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Gets name of the checkpoint.
func (o CheckpointResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CheckpointResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Gets ID of parent of the checkpoint.
func (o CheckpointResponseOutput) ParentCheckpointID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CheckpointResponse) *string { return v.ParentCheckpointID }).(pulumi.StringPtrOutput)
}

type CheckpointResponsePtrOutput struct{ *pulumi.OutputState }

func (CheckpointResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CheckpointResponse)(nil)).Elem()
}

func (o CheckpointResponsePtrOutput) ToCheckpointResponsePtrOutput() CheckpointResponsePtrOutput {
	return o
}

func (o CheckpointResponsePtrOutput) ToCheckpointResponsePtrOutputWithContext(ctx context.Context) CheckpointResponsePtrOutput {
	return o
}

func (o CheckpointResponsePtrOutput) Elem() CheckpointResponseOutput {
	return o.ApplyT(func(v *CheckpointResponse) CheckpointResponse {
		if v != nil {
			return *v
		}
		var ret CheckpointResponse
		return ret
	}).(CheckpointResponseOutput)
}

// Gets ID of the checkpoint.
func (o CheckpointResponsePtrOutput) CheckpointID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CheckpointResponse) *string {
		if v == nil {
			return nil
		}
		return v.CheckpointID
	}).(pulumi.StringPtrOutput)
}

// Gets description of the checkpoint.
func (o CheckpointResponsePtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CheckpointResponse) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// Gets name of the checkpoint.
func (o CheckpointResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CheckpointResponse) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Gets ID of parent of the checkpoint.
func (o CheckpointResponsePtrOutput) ParentCheckpointID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CheckpointResponse) *string {
		if v == nil {
			return nil
		}
		return v.ParentCheckpointID
	}).(pulumi.StringPtrOutput)
}

type CheckpointResponseArrayOutput struct{ *pulumi.OutputState }

func (CheckpointResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CheckpointResponse)(nil)).Elem()
}

func (o CheckpointResponseArrayOutput) ToCheckpointResponseArrayOutput() CheckpointResponseArrayOutput {
	return o
}

func (o CheckpointResponseArrayOutput) ToCheckpointResponseArrayOutputWithContext(ctx context.Context) CheckpointResponseArrayOutput {
	return o
}

func (o CheckpointResponseArrayOutput) Index(i pulumi.IntInput) CheckpointResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CheckpointResponse {
		return vs[0].([]CheckpointResponse)[vs[1].(int)]
	}).(CheckpointResponseOutput)
}

// Cloud Capacity model
type CloudCapacityResponse struct {
	// CPUCount specifies the maximum number of CPUs that can be allocated in the cloud.
	CpuCount *float64 `pulumi:"cpuCount"`
	// MemoryMB specifies a memory usage limit in megabytes.
	MemoryMB *float64 `pulumi:"memoryMB"`
	// VMCount gives the max number of VMs that can be deployed in the cloud.
	VmCount *float64 `pulumi:"vmCount"`
}

// Cloud Capacity model
type CloudCapacityResponseOutput struct{ *pulumi.OutputState }

func (CloudCapacityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudCapacityResponse)(nil)).Elem()
}

func (o CloudCapacityResponseOutput) ToCloudCapacityResponseOutput() CloudCapacityResponseOutput {
	return o
}

func (o CloudCapacityResponseOutput) ToCloudCapacityResponseOutputWithContext(ctx context.Context) CloudCapacityResponseOutput {
	return o
}

// CPUCount specifies the maximum number of CPUs that can be allocated in the cloud.
func (o CloudCapacityResponseOutput) CpuCount() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v CloudCapacityResponse) *float64 { return v.CpuCount }).(pulumi.Float64PtrOutput)
}

// MemoryMB specifies a memory usage limit in megabytes.
func (o CloudCapacityResponseOutput) MemoryMB() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v CloudCapacityResponse) *float64 { return v.MemoryMB }).(pulumi.Float64PtrOutput)
}

// VMCount gives the max number of VMs that can be deployed in the cloud.
func (o CloudCapacityResponseOutput) VmCount() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v CloudCapacityResponse) *float64 { return v.VmCount }).(pulumi.Float64PtrOutput)
}

// The extended location.
type ExtendedLocation struct {
	// The extended location name.
	Name *string `pulumi:"name"`
	// The extended location type.
	Type *string `pulumi:"type"`
}

// ExtendedLocationInput is an input type that accepts ExtendedLocationArgs and ExtendedLocationOutput values.
// You can construct a concrete instance of `ExtendedLocationInput` via:
//
//	ExtendedLocationArgs{...}
type ExtendedLocationInput interface {
	pulumi.Input

	ToExtendedLocationOutput() ExtendedLocationOutput
	ToExtendedLocationOutputWithContext(context.Context) ExtendedLocationOutput
}

// The extended location.
type ExtendedLocationArgs struct {
	// The extended location name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The extended location type.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (ExtendedLocationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtendedLocation)(nil)).Elem()
}

func (i ExtendedLocationArgs) ToExtendedLocationOutput() ExtendedLocationOutput {
	return i.ToExtendedLocationOutputWithContext(context.Background())
}

func (i ExtendedLocationArgs) ToExtendedLocationOutputWithContext(ctx context.Context) ExtendedLocationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtendedLocationOutput)
}

// The extended location.
type ExtendedLocationOutput struct{ *pulumi.OutputState }

func (ExtendedLocationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtendedLocation)(nil)).Elem()
}

func (o ExtendedLocationOutput) ToExtendedLocationOutput() ExtendedLocationOutput {
	return o
}

func (o ExtendedLocationOutput) ToExtendedLocationOutputWithContext(ctx context.Context) ExtendedLocationOutput {
	return o
}

// The extended location name.
func (o ExtendedLocationOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtendedLocation) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The extended location type.
func (o ExtendedLocationOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtendedLocation) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// The extended location.
type ExtendedLocationResponse struct {
	// The extended location name.
	Name *string `pulumi:"name"`
	// The extended location type.
	Type *string `pulumi:"type"`
}

// The extended location.
type ExtendedLocationResponseOutput struct{ *pulumi.OutputState }

func (ExtendedLocationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtendedLocationResponse)(nil)).Elem()
}

func (o ExtendedLocationResponseOutput) ToExtendedLocationResponseOutput() ExtendedLocationResponseOutput {
	return o
}

func (o ExtendedLocationResponseOutput) ToExtendedLocationResponseOutputWithContext(ctx context.Context) ExtendedLocationResponseOutput {
	return o
}

// The extended location name.
func (o ExtendedLocationResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtendedLocationResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The extended location type.
func (o ExtendedLocationResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtendedLocationResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// Username / Password Credentials to connect to guest.
type GuestCredential struct {
	// Gets or sets the password to connect with the guest.
	Password string `pulumi:"password"`
	// Gets or sets username to connect with the guest.
	Username string `pulumi:"username"`
}

// GuestCredentialInput is an input type that accepts GuestCredentialArgs and GuestCredentialOutput values.
// You can construct a concrete instance of `GuestCredentialInput` via:
//
//	GuestCredentialArgs{...}
type GuestCredentialInput interface {
	pulumi.Input

	ToGuestCredentialOutput() GuestCredentialOutput
	ToGuestCredentialOutputWithContext(context.Context) GuestCredentialOutput
}

// Username / Password Credentials to connect to guest.
type GuestCredentialArgs struct {
	// Gets or sets the password to connect with the guest.
	Password pulumi.StringInput `pulumi:"password"`
	// Gets or sets username to connect with the guest.
	Username pulumi.StringInput `pulumi:"username"`
}

func (GuestCredentialArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GuestCredential)(nil)).Elem()
}

func (i GuestCredentialArgs) ToGuestCredentialOutput() GuestCredentialOutput {
	return i.ToGuestCredentialOutputWithContext(context.Background())
}

func (i GuestCredentialArgs) ToGuestCredentialOutputWithContext(ctx context.Context) GuestCredentialOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuestCredentialOutput)
}

func (i GuestCredentialArgs) ToGuestCredentialPtrOutput() GuestCredentialPtrOutput {
	return i.ToGuestCredentialPtrOutputWithContext(context.Background())
}

func (i GuestCredentialArgs) ToGuestCredentialPtrOutputWithContext(ctx context.Context) GuestCredentialPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuestCredentialOutput).ToGuestCredentialPtrOutputWithContext(ctx)
}

// GuestCredentialPtrInput is an input type that accepts GuestCredentialArgs, GuestCredentialPtr and GuestCredentialPtrOutput values.
// You can construct a concrete instance of `GuestCredentialPtrInput` via:
//
//	        GuestCredentialArgs{...}
//
//	or:
//
//	        nil
type GuestCredentialPtrInput interface {
	pulumi.Input

	ToGuestCredentialPtrOutput() GuestCredentialPtrOutput
	ToGuestCredentialPtrOutputWithContext(context.Context) GuestCredentialPtrOutput
}

type guestCredentialPtrType GuestCredentialArgs

func GuestCredentialPtr(v *GuestCredentialArgs) GuestCredentialPtrInput {
	return (*guestCredentialPtrType)(v)
}

func (*guestCredentialPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GuestCredential)(nil)).Elem()
}

func (i *guestCredentialPtrType) ToGuestCredentialPtrOutput() GuestCredentialPtrOutput {
	return i.ToGuestCredentialPtrOutputWithContext(context.Background())
}

func (i *guestCredentialPtrType) ToGuestCredentialPtrOutputWithContext(ctx context.Context) GuestCredentialPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuestCredentialPtrOutput)
}

// Username / Password Credentials to connect to guest.
type GuestCredentialOutput struct{ *pulumi.OutputState }

func (GuestCredentialOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GuestCredential)(nil)).Elem()
}

func (o GuestCredentialOutput) ToGuestCredentialOutput() GuestCredentialOutput {
	return o
}

func (o GuestCredentialOutput) ToGuestCredentialOutputWithContext(ctx context.Context) GuestCredentialOutput {
	return o
}

func (o GuestCredentialOutput) ToGuestCredentialPtrOutput() GuestCredentialPtrOutput {
	return o.ToGuestCredentialPtrOutputWithContext(context.Background())
}

func (o GuestCredentialOutput) ToGuestCredentialPtrOutputWithContext(ctx context.Context) GuestCredentialPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GuestCredential) *GuestCredential {
		return &v
	}).(GuestCredentialPtrOutput)
}

// Gets or sets the password to connect with the guest.
func (o GuestCredentialOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v GuestCredential) string { return v.Password }).(pulumi.StringOutput)
}

// Gets or sets username to connect with the guest.
func (o GuestCredentialOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v GuestCredential) string { return v.Username }).(pulumi.StringOutput)
}

type GuestCredentialPtrOutput struct{ *pulumi.OutputState }

func (GuestCredentialPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GuestCredential)(nil)).Elem()
}

func (o GuestCredentialPtrOutput) ToGuestCredentialPtrOutput() GuestCredentialPtrOutput {
	return o
}

func (o GuestCredentialPtrOutput) ToGuestCredentialPtrOutputWithContext(ctx context.Context) GuestCredentialPtrOutput {
	return o
}

func (o GuestCredentialPtrOutput) Elem() GuestCredentialOutput {
	return o.ApplyT(func(v *GuestCredential) GuestCredential {
		if v != nil {
			return *v
		}
		var ret GuestCredential
		return ret
	}).(GuestCredentialOutput)
}

// Gets or sets the password to connect with the guest.
func (o GuestCredentialPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GuestCredential) *string {
		if v == nil {
			return nil
		}
		return &v.Password
	}).(pulumi.StringPtrOutput)
}

// Gets or sets username to connect with the guest.
func (o GuestCredentialPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GuestCredential) *string {
		if v == nil {
			return nil
		}
		return &v.Username
	}).(pulumi.StringPtrOutput)
}

// Username / Password Credentials to connect to guest.
type GuestCredentialResponse struct {
	// Gets or sets username to connect with the guest.
	Username string `pulumi:"username"`
}

// Username / Password Credentials to connect to guest.
type GuestCredentialResponseOutput struct{ *pulumi.OutputState }

func (GuestCredentialResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GuestCredentialResponse)(nil)).Elem()
}

func (o GuestCredentialResponseOutput) ToGuestCredentialResponseOutput() GuestCredentialResponseOutput {
	return o
}

func (o GuestCredentialResponseOutput) ToGuestCredentialResponseOutputWithContext(ctx context.Context) GuestCredentialResponseOutput {
	return o
}

// Gets or sets username to connect with the guest.
func (o GuestCredentialResponseOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v GuestCredentialResponse) string { return v.Username }).(pulumi.StringOutput)
}

type GuestCredentialResponsePtrOutput struct{ *pulumi.OutputState }

func (GuestCredentialResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GuestCredentialResponse)(nil)).Elem()
}

func (o GuestCredentialResponsePtrOutput) ToGuestCredentialResponsePtrOutput() GuestCredentialResponsePtrOutput {
	return o
}

func (o GuestCredentialResponsePtrOutput) ToGuestCredentialResponsePtrOutputWithContext(ctx context.Context) GuestCredentialResponsePtrOutput {
	return o
}

func (o GuestCredentialResponsePtrOutput) Elem() GuestCredentialResponseOutput {
	return o.ApplyT(func(v *GuestCredentialResponse) GuestCredentialResponse {
		if v != nil {
			return *v
		}
		var ret GuestCredentialResponse
		return ret
	}).(GuestCredentialResponseOutput)
}

// Gets or sets username to connect with the guest.
func (o GuestCredentialResponsePtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GuestCredentialResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Username
	}).(pulumi.StringPtrOutput)
}

// Defines the resource properties.
type HardwareProfile struct {
	// Gets or sets the number of vCPUs for the vm.
	CpuCount *int `pulumi:"cpuCount"`
	// Gets or sets a value indicating whether to enable dynamic memory or not.
	DynamicMemoryEnabled *string `pulumi:"dynamicMemoryEnabled"`
	// Gets or sets the max dynamic memory for the vm.
	DynamicMemoryMaxMB *int `pulumi:"dynamicMemoryMaxMB"`
	// Gets or sets the min dynamic memory for the vm.
	DynamicMemoryMinMB *int `pulumi:"dynamicMemoryMinMB"`
	// Gets or sets a value indicating whether to enable processor compatibility mode for live migration of VMs.
	LimitCpuForMigration *string `pulumi:"limitCpuForMigration"`
	// MemoryMB is the size of a virtual machine's memory, in MB.
	MemoryMB *int `pulumi:"memoryMB"`
}

// HardwareProfileInput is an input type that accepts HardwareProfileArgs and HardwareProfileOutput values.
// You can construct a concrete instance of `HardwareProfileInput` via:
//
//	HardwareProfileArgs{...}
type HardwareProfileInput interface {
	pulumi.Input

	ToHardwareProfileOutput() HardwareProfileOutput
	ToHardwareProfileOutputWithContext(context.Context) HardwareProfileOutput
}

// Defines the resource properties.
type HardwareProfileArgs struct {
	// Gets or sets the number of vCPUs for the vm.
	CpuCount pulumi.IntPtrInput `pulumi:"cpuCount"`
	// Gets or sets a value indicating whether to enable dynamic memory or not.
	DynamicMemoryEnabled pulumi.StringPtrInput `pulumi:"dynamicMemoryEnabled"`
	// Gets or sets the max dynamic memory for the vm.
	DynamicMemoryMaxMB pulumi.IntPtrInput `pulumi:"dynamicMemoryMaxMB"`
	// Gets or sets the min dynamic memory for the vm.
	DynamicMemoryMinMB pulumi.IntPtrInput `pulumi:"dynamicMemoryMinMB"`
	// Gets or sets a value indicating whether to enable processor compatibility mode for live migration of VMs.
	LimitCpuForMigration pulumi.StringPtrInput `pulumi:"limitCpuForMigration"`
	// MemoryMB is the size of a virtual machine's memory, in MB.
	MemoryMB pulumi.IntPtrInput `pulumi:"memoryMB"`
}

func (HardwareProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HardwareProfile)(nil)).Elem()
}

func (i HardwareProfileArgs) ToHardwareProfileOutput() HardwareProfileOutput {
	return i.ToHardwareProfileOutputWithContext(context.Background())
}

func (i HardwareProfileArgs) ToHardwareProfileOutputWithContext(ctx context.Context) HardwareProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HardwareProfileOutput)
}

func (i HardwareProfileArgs) ToHardwareProfilePtrOutput() HardwareProfilePtrOutput {
	return i.ToHardwareProfilePtrOutputWithContext(context.Background())
}

func (i HardwareProfileArgs) ToHardwareProfilePtrOutputWithContext(ctx context.Context) HardwareProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HardwareProfileOutput).ToHardwareProfilePtrOutputWithContext(ctx)
}

// HardwareProfilePtrInput is an input type that accepts HardwareProfileArgs, HardwareProfilePtr and HardwareProfilePtrOutput values.
// You can construct a concrete instance of `HardwareProfilePtrInput` via:
//
//	        HardwareProfileArgs{...}
//
//	or:
//
//	        nil
type HardwareProfilePtrInput interface {
	pulumi.Input

	ToHardwareProfilePtrOutput() HardwareProfilePtrOutput
	ToHardwareProfilePtrOutputWithContext(context.Context) HardwareProfilePtrOutput
}

type hardwareProfilePtrType HardwareProfileArgs

func HardwareProfilePtr(v *HardwareProfileArgs) HardwareProfilePtrInput {
	return (*hardwareProfilePtrType)(v)
}

func (*hardwareProfilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**HardwareProfile)(nil)).Elem()
}

func (i *hardwareProfilePtrType) ToHardwareProfilePtrOutput() HardwareProfilePtrOutput {
	return i.ToHardwareProfilePtrOutputWithContext(context.Background())
}

func (i *hardwareProfilePtrType) ToHardwareProfilePtrOutputWithContext(ctx context.Context) HardwareProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HardwareProfilePtrOutput)
}

// Defines the resource properties.
type HardwareProfileOutput struct{ *pulumi.OutputState }

func (HardwareProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HardwareProfile)(nil)).Elem()
}

func (o HardwareProfileOutput) ToHardwareProfileOutput() HardwareProfileOutput {
	return o
}

func (o HardwareProfileOutput) ToHardwareProfileOutputWithContext(ctx context.Context) HardwareProfileOutput {
	return o
}

func (o HardwareProfileOutput) ToHardwareProfilePtrOutput() HardwareProfilePtrOutput {
	return o.ToHardwareProfilePtrOutputWithContext(context.Background())
}

func (o HardwareProfileOutput) ToHardwareProfilePtrOutputWithContext(ctx context.Context) HardwareProfilePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v HardwareProfile) *HardwareProfile {
		return &v
	}).(HardwareProfilePtrOutput)
}

// Gets or sets the number of vCPUs for the vm.
func (o HardwareProfileOutput) CpuCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v HardwareProfile) *int { return v.CpuCount }).(pulumi.IntPtrOutput)
}

// Gets or sets a value indicating whether to enable dynamic memory or not.
func (o HardwareProfileOutput) DynamicMemoryEnabled() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HardwareProfile) *string { return v.DynamicMemoryEnabled }).(pulumi.StringPtrOutput)
}

// Gets or sets the max dynamic memory for the vm.
func (o HardwareProfileOutput) DynamicMemoryMaxMB() pulumi.IntPtrOutput {
	return o.ApplyT(func(v HardwareProfile) *int { return v.DynamicMemoryMaxMB }).(pulumi.IntPtrOutput)
}

// Gets or sets the min dynamic memory for the vm.
func (o HardwareProfileOutput) DynamicMemoryMinMB() pulumi.IntPtrOutput {
	return o.ApplyT(func(v HardwareProfile) *int { return v.DynamicMemoryMinMB }).(pulumi.IntPtrOutput)
}

// Gets or sets a value indicating whether to enable processor compatibility mode for live migration of VMs.
func (o HardwareProfileOutput) LimitCpuForMigration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HardwareProfile) *string { return v.LimitCpuForMigration }).(pulumi.StringPtrOutput)
}

// MemoryMB is the size of a virtual machine's memory, in MB.
func (o HardwareProfileOutput) MemoryMB() pulumi.IntPtrOutput {
	return o.ApplyT(func(v HardwareProfile) *int { return v.MemoryMB }).(pulumi.IntPtrOutput)
}

type HardwareProfilePtrOutput struct{ *pulumi.OutputState }

func (HardwareProfilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HardwareProfile)(nil)).Elem()
}

func (o HardwareProfilePtrOutput) ToHardwareProfilePtrOutput() HardwareProfilePtrOutput {
	return o
}

func (o HardwareProfilePtrOutput) ToHardwareProfilePtrOutputWithContext(ctx context.Context) HardwareProfilePtrOutput {
	return o
}

func (o HardwareProfilePtrOutput) Elem() HardwareProfileOutput {
	return o.ApplyT(func(v *HardwareProfile) HardwareProfile {
		if v != nil {
			return *v
		}
		var ret HardwareProfile
		return ret
	}).(HardwareProfileOutput)
}

// Gets or sets the number of vCPUs for the vm.
func (o HardwareProfilePtrOutput) CpuCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *HardwareProfile) *int {
		if v == nil {
			return nil
		}
		return v.CpuCount
	}).(pulumi.IntPtrOutput)
}

// Gets or sets a value indicating whether to enable dynamic memory or not.
func (o HardwareProfilePtrOutput) DynamicMemoryEnabled() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HardwareProfile) *string {
		if v == nil {
			return nil
		}
		return v.DynamicMemoryEnabled
	}).(pulumi.StringPtrOutput)
}

// Gets or sets the max dynamic memory for the vm.
func (o HardwareProfilePtrOutput) DynamicMemoryMaxMB() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *HardwareProfile) *int {
		if v == nil {
			return nil
		}
		return v.DynamicMemoryMaxMB
	}).(pulumi.IntPtrOutput)
}

// Gets or sets the min dynamic memory for the vm.
func (o HardwareProfilePtrOutput) DynamicMemoryMinMB() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *HardwareProfile) *int {
		if v == nil {
			return nil
		}
		return v.DynamicMemoryMinMB
	}).(pulumi.IntPtrOutput)
}

// Gets or sets a value indicating whether to enable processor compatibility mode for live migration of VMs.
func (o HardwareProfilePtrOutput) LimitCpuForMigration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HardwareProfile) *string {
		if v == nil {
			return nil
		}
		return v.LimitCpuForMigration
	}).(pulumi.StringPtrOutput)
}

// MemoryMB is the size of a virtual machine's memory, in MB.
func (o HardwareProfilePtrOutput) MemoryMB() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *HardwareProfile) *int {
		if v == nil {
			return nil
		}
		return v.MemoryMB
	}).(pulumi.IntPtrOutput)
}

// Defines the resource properties.
type HardwareProfileResponse struct {
	// Gets or sets the number of vCPUs for the vm.
	CpuCount *int `pulumi:"cpuCount"`
	// Gets or sets a value indicating whether to enable dynamic memory or not.
	DynamicMemoryEnabled *string `pulumi:"dynamicMemoryEnabled"`
	// Gets or sets the max dynamic memory for the vm.
	DynamicMemoryMaxMB *int `pulumi:"dynamicMemoryMaxMB"`
	// Gets or sets the min dynamic memory for the vm.
	DynamicMemoryMinMB *int `pulumi:"dynamicMemoryMinMB"`
	// Gets highly available property.
	IsHighlyAvailable string `pulumi:"isHighlyAvailable"`
	// Gets or sets a value indicating whether to enable processor compatibility mode for live migration of VMs.
	LimitCpuForMigration *string `pulumi:"limitCpuForMigration"`
	// MemoryMB is the size of a virtual machine's memory, in MB.
	MemoryMB *int `pulumi:"memoryMB"`
}

// Defines the resource properties.
type HardwareProfileResponseOutput struct{ *pulumi.OutputState }

func (HardwareProfileResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HardwareProfileResponse)(nil)).Elem()
}

func (o HardwareProfileResponseOutput) ToHardwareProfileResponseOutput() HardwareProfileResponseOutput {
	return o
}

func (o HardwareProfileResponseOutput) ToHardwareProfileResponseOutputWithContext(ctx context.Context) HardwareProfileResponseOutput {
	return o
}

// Gets or sets the number of vCPUs for the vm.
func (o HardwareProfileResponseOutput) CpuCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v HardwareProfileResponse) *int { return v.CpuCount }).(pulumi.IntPtrOutput)
}

// Gets or sets a value indicating whether to enable dynamic memory or not.
func (o HardwareProfileResponseOutput) DynamicMemoryEnabled() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HardwareProfileResponse) *string { return v.DynamicMemoryEnabled }).(pulumi.StringPtrOutput)
}

// Gets or sets the max dynamic memory for the vm.
func (o HardwareProfileResponseOutput) DynamicMemoryMaxMB() pulumi.IntPtrOutput {
	return o.ApplyT(func(v HardwareProfileResponse) *int { return v.DynamicMemoryMaxMB }).(pulumi.IntPtrOutput)
}

// Gets or sets the min dynamic memory for the vm.
func (o HardwareProfileResponseOutput) DynamicMemoryMinMB() pulumi.IntPtrOutput {
	return o.ApplyT(func(v HardwareProfileResponse) *int { return v.DynamicMemoryMinMB }).(pulumi.IntPtrOutput)
}

// Gets highly available property.
func (o HardwareProfileResponseOutput) IsHighlyAvailable() pulumi.StringOutput {
	return o.ApplyT(func(v HardwareProfileResponse) string { return v.IsHighlyAvailable }).(pulumi.StringOutput)
}

// Gets or sets a value indicating whether to enable processor compatibility mode for live migration of VMs.
func (o HardwareProfileResponseOutput) LimitCpuForMigration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HardwareProfileResponse) *string { return v.LimitCpuForMigration }).(pulumi.StringPtrOutput)
}

// MemoryMB is the size of a virtual machine's memory, in MB.
func (o HardwareProfileResponseOutput) MemoryMB() pulumi.IntPtrOutput {
	return o.ApplyT(func(v HardwareProfileResponse) *int { return v.MemoryMB }).(pulumi.IntPtrOutput)
}

type HardwareProfileResponsePtrOutput struct{ *pulumi.OutputState }

func (HardwareProfileResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HardwareProfileResponse)(nil)).Elem()
}

func (o HardwareProfileResponsePtrOutput) ToHardwareProfileResponsePtrOutput() HardwareProfileResponsePtrOutput {
	return o
}

func (o HardwareProfileResponsePtrOutput) ToHardwareProfileResponsePtrOutputWithContext(ctx context.Context) HardwareProfileResponsePtrOutput {
	return o
}

func (o HardwareProfileResponsePtrOutput) Elem() HardwareProfileResponseOutput {
	return o.ApplyT(func(v *HardwareProfileResponse) HardwareProfileResponse {
		if v != nil {
			return *v
		}
		var ret HardwareProfileResponse
		return ret
	}).(HardwareProfileResponseOutput)
}

// Gets or sets the number of vCPUs for the vm.
func (o HardwareProfileResponsePtrOutput) CpuCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *HardwareProfileResponse) *int {
		if v == nil {
			return nil
		}
		return v.CpuCount
	}).(pulumi.IntPtrOutput)
}

// Gets or sets a value indicating whether to enable dynamic memory or not.
func (o HardwareProfileResponsePtrOutput) DynamicMemoryEnabled() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HardwareProfileResponse) *string {
		if v == nil {
			return nil
		}
		return v.DynamicMemoryEnabled
	}).(pulumi.StringPtrOutput)
}

// Gets or sets the max dynamic memory for the vm.
func (o HardwareProfileResponsePtrOutput) DynamicMemoryMaxMB() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *HardwareProfileResponse) *int {
		if v == nil {
			return nil
		}
		return v.DynamicMemoryMaxMB
	}).(pulumi.IntPtrOutput)
}

// Gets or sets the min dynamic memory for the vm.
func (o HardwareProfileResponsePtrOutput) DynamicMemoryMinMB() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *HardwareProfileResponse) *int {
		if v == nil {
			return nil
		}
		return v.DynamicMemoryMinMB
	}).(pulumi.IntPtrOutput)
}

// Gets highly available property.
func (o HardwareProfileResponsePtrOutput) IsHighlyAvailable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HardwareProfileResponse) *string {
		if v == nil {
			return nil
		}
		return &v.IsHighlyAvailable
	}).(pulumi.StringPtrOutput)
}

// Gets or sets a value indicating whether to enable processor compatibility mode for live migration of VMs.
func (o HardwareProfileResponsePtrOutput) LimitCpuForMigration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HardwareProfileResponse) *string {
		if v == nil {
			return nil
		}
		return v.LimitCpuForMigration
	}).(pulumi.StringPtrOutput)
}

// MemoryMB is the size of a virtual machine's memory, in MB.
func (o HardwareProfileResponsePtrOutput) MemoryMB() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *HardwareProfileResponse) *int {
		if v == nil {
			return nil
		}
		return v.MemoryMB
	}).(pulumi.IntPtrOutput)
}

// HTTP Proxy configuration for the VM.
type HttpProxyConfiguration struct {
	// Gets or sets httpsProxy url.
	HttpsProxy *string `pulumi:"httpsProxy"`
}

// HttpProxyConfigurationInput is an input type that accepts HttpProxyConfigurationArgs and HttpProxyConfigurationOutput values.
// You can construct a concrete instance of `HttpProxyConfigurationInput` via:
//
//	HttpProxyConfigurationArgs{...}
type HttpProxyConfigurationInput interface {
	pulumi.Input

	ToHttpProxyConfigurationOutput() HttpProxyConfigurationOutput
	ToHttpProxyConfigurationOutputWithContext(context.Context) HttpProxyConfigurationOutput
}

// HTTP Proxy configuration for the VM.
type HttpProxyConfigurationArgs struct {
	// Gets or sets httpsProxy url.
	HttpsProxy pulumi.StringPtrInput `pulumi:"httpsProxy"`
}

func (HttpProxyConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HttpProxyConfiguration)(nil)).Elem()
}

func (i HttpProxyConfigurationArgs) ToHttpProxyConfigurationOutput() HttpProxyConfigurationOutput {
	return i.ToHttpProxyConfigurationOutputWithContext(context.Background())
}

func (i HttpProxyConfigurationArgs) ToHttpProxyConfigurationOutputWithContext(ctx context.Context) HttpProxyConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HttpProxyConfigurationOutput)
}

func (i HttpProxyConfigurationArgs) ToHttpProxyConfigurationPtrOutput() HttpProxyConfigurationPtrOutput {
	return i.ToHttpProxyConfigurationPtrOutputWithContext(context.Background())
}

func (i HttpProxyConfigurationArgs) ToHttpProxyConfigurationPtrOutputWithContext(ctx context.Context) HttpProxyConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HttpProxyConfigurationOutput).ToHttpProxyConfigurationPtrOutputWithContext(ctx)
}

// HttpProxyConfigurationPtrInput is an input type that accepts HttpProxyConfigurationArgs, HttpProxyConfigurationPtr and HttpProxyConfigurationPtrOutput values.
// You can construct a concrete instance of `HttpProxyConfigurationPtrInput` via:
//
//	        HttpProxyConfigurationArgs{...}
//
//	or:
//
//	        nil
type HttpProxyConfigurationPtrInput interface {
	pulumi.Input

	ToHttpProxyConfigurationPtrOutput() HttpProxyConfigurationPtrOutput
	ToHttpProxyConfigurationPtrOutputWithContext(context.Context) HttpProxyConfigurationPtrOutput
}

type httpProxyConfigurationPtrType HttpProxyConfigurationArgs

func HttpProxyConfigurationPtr(v *HttpProxyConfigurationArgs) HttpProxyConfigurationPtrInput {
	return (*httpProxyConfigurationPtrType)(v)
}

func (*httpProxyConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**HttpProxyConfiguration)(nil)).Elem()
}

func (i *httpProxyConfigurationPtrType) ToHttpProxyConfigurationPtrOutput() HttpProxyConfigurationPtrOutput {
	return i.ToHttpProxyConfigurationPtrOutputWithContext(context.Background())
}

func (i *httpProxyConfigurationPtrType) ToHttpProxyConfigurationPtrOutputWithContext(ctx context.Context) HttpProxyConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HttpProxyConfigurationPtrOutput)
}

// HTTP Proxy configuration for the VM.
type HttpProxyConfigurationOutput struct{ *pulumi.OutputState }

func (HttpProxyConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HttpProxyConfiguration)(nil)).Elem()
}

func (o HttpProxyConfigurationOutput) ToHttpProxyConfigurationOutput() HttpProxyConfigurationOutput {
	return o
}

func (o HttpProxyConfigurationOutput) ToHttpProxyConfigurationOutputWithContext(ctx context.Context) HttpProxyConfigurationOutput {
	return o
}

func (o HttpProxyConfigurationOutput) ToHttpProxyConfigurationPtrOutput() HttpProxyConfigurationPtrOutput {
	return o.ToHttpProxyConfigurationPtrOutputWithContext(context.Background())
}

func (o HttpProxyConfigurationOutput) ToHttpProxyConfigurationPtrOutputWithContext(ctx context.Context) HttpProxyConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v HttpProxyConfiguration) *HttpProxyConfiguration {
		return &v
	}).(HttpProxyConfigurationPtrOutput)
}

// Gets or sets httpsProxy url.
func (o HttpProxyConfigurationOutput) HttpsProxy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HttpProxyConfiguration) *string { return v.HttpsProxy }).(pulumi.StringPtrOutput)
}

type HttpProxyConfigurationPtrOutput struct{ *pulumi.OutputState }

func (HttpProxyConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HttpProxyConfiguration)(nil)).Elem()
}

func (o HttpProxyConfigurationPtrOutput) ToHttpProxyConfigurationPtrOutput() HttpProxyConfigurationPtrOutput {
	return o
}

func (o HttpProxyConfigurationPtrOutput) ToHttpProxyConfigurationPtrOutputWithContext(ctx context.Context) HttpProxyConfigurationPtrOutput {
	return o
}

func (o HttpProxyConfigurationPtrOutput) Elem() HttpProxyConfigurationOutput {
	return o.ApplyT(func(v *HttpProxyConfiguration) HttpProxyConfiguration {
		if v != nil {
			return *v
		}
		var ret HttpProxyConfiguration
		return ret
	}).(HttpProxyConfigurationOutput)
}

// Gets or sets httpsProxy url.
func (o HttpProxyConfigurationPtrOutput) HttpsProxy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HttpProxyConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.HttpsProxy
	}).(pulumi.StringPtrOutput)
}

// HTTP Proxy configuration for the VM.
type HttpProxyConfigurationResponse struct {
	// Gets or sets httpsProxy url.
	HttpsProxy *string `pulumi:"httpsProxy"`
}

// HTTP Proxy configuration for the VM.
type HttpProxyConfigurationResponseOutput struct{ *pulumi.OutputState }

func (HttpProxyConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HttpProxyConfigurationResponse)(nil)).Elem()
}

func (o HttpProxyConfigurationResponseOutput) ToHttpProxyConfigurationResponseOutput() HttpProxyConfigurationResponseOutput {
	return o
}

func (o HttpProxyConfigurationResponseOutput) ToHttpProxyConfigurationResponseOutputWithContext(ctx context.Context) HttpProxyConfigurationResponseOutput {
	return o
}

// Gets or sets httpsProxy url.
func (o HttpProxyConfigurationResponseOutput) HttpsProxy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HttpProxyConfigurationResponse) *string { return v.HttpsProxy }).(pulumi.StringPtrOutput)
}

type HttpProxyConfigurationResponsePtrOutput struct{ *pulumi.OutputState }

func (HttpProxyConfigurationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HttpProxyConfigurationResponse)(nil)).Elem()
}

func (o HttpProxyConfigurationResponsePtrOutput) ToHttpProxyConfigurationResponsePtrOutput() HttpProxyConfigurationResponsePtrOutput {
	return o
}

func (o HttpProxyConfigurationResponsePtrOutput) ToHttpProxyConfigurationResponsePtrOutputWithContext(ctx context.Context) HttpProxyConfigurationResponsePtrOutput {
	return o
}

func (o HttpProxyConfigurationResponsePtrOutput) Elem() HttpProxyConfigurationResponseOutput {
	return o.ApplyT(func(v *HttpProxyConfigurationResponse) HttpProxyConfigurationResponse {
		if v != nil {
			return *v
		}
		var ret HttpProxyConfigurationResponse
		return ret
	}).(HttpProxyConfigurationResponseOutput)
}

// Gets or sets httpsProxy url.
func (o HttpProxyConfigurationResponsePtrOutput) HttpsProxy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HttpProxyConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.HttpsProxy
	}).(pulumi.StringPtrOutput)
}

// Specifies the vmmServer infrastructure specific settings for the virtual machine instance.
type InfrastructureProfile struct {
	// Gets or sets the bios guid for the vm.
	BiosGuid *string `pulumi:"biosGuid"`
	// Type of checkpoint supported for the vm.
	CheckpointType *string `pulumi:"checkpointType"`
	// Checkpoints in the vm.
	Checkpoints []Checkpoint `pulumi:"checkpoints"`
	// ARM Id of the cloud resource to use for deploying the vm.
	CloudId *string `pulumi:"cloudId"`
	// Gets or sets the generation for the vm.
	Generation *int `pulumi:"generation"`
	// Gets or sets the inventory Item ID for the resource.
	InventoryItemId *string `pulumi:"inventoryItemId"`
	// ARM Id of the template resource to use for deploying the vm.
	TemplateId *string `pulumi:"templateId"`
	// Unique ID of the virtual machine.
	Uuid *string `pulumi:"uuid"`
	// VMName is the name of VM on the SCVMM server.
	VmName *string `pulumi:"vmName"`
	// ARM Id of the vmmServer resource in which this resource resides.
	VmmServerId *string `pulumi:"vmmServerId"`
}

// InfrastructureProfileInput is an input type that accepts InfrastructureProfileArgs and InfrastructureProfileOutput values.
// You can construct a concrete instance of `InfrastructureProfileInput` via:
//
//	InfrastructureProfileArgs{...}
type InfrastructureProfileInput interface {
	pulumi.Input

	ToInfrastructureProfileOutput() InfrastructureProfileOutput
	ToInfrastructureProfileOutputWithContext(context.Context) InfrastructureProfileOutput
}

// Specifies the vmmServer infrastructure specific settings for the virtual machine instance.
type InfrastructureProfileArgs struct {
	// Gets or sets the bios guid for the vm.
	BiosGuid pulumi.StringPtrInput `pulumi:"biosGuid"`
	// Type of checkpoint supported for the vm.
	CheckpointType pulumi.StringPtrInput `pulumi:"checkpointType"`
	// Checkpoints in the vm.
	Checkpoints CheckpointArrayInput `pulumi:"checkpoints"`
	// ARM Id of the cloud resource to use for deploying the vm.
	CloudId pulumi.StringPtrInput `pulumi:"cloudId"`
	// Gets or sets the generation for the vm.
	Generation pulumi.IntPtrInput `pulumi:"generation"`
	// Gets or sets the inventory Item ID for the resource.
	InventoryItemId pulumi.StringPtrInput `pulumi:"inventoryItemId"`
	// ARM Id of the template resource to use for deploying the vm.
	TemplateId pulumi.StringPtrInput `pulumi:"templateId"`
	// Unique ID of the virtual machine.
	Uuid pulumi.StringPtrInput `pulumi:"uuid"`
	// VMName is the name of VM on the SCVMM server.
	VmName pulumi.StringPtrInput `pulumi:"vmName"`
	// ARM Id of the vmmServer resource in which this resource resides.
	VmmServerId pulumi.StringPtrInput `pulumi:"vmmServerId"`
}

func (InfrastructureProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InfrastructureProfile)(nil)).Elem()
}

func (i InfrastructureProfileArgs) ToInfrastructureProfileOutput() InfrastructureProfileOutput {
	return i.ToInfrastructureProfileOutputWithContext(context.Background())
}

func (i InfrastructureProfileArgs) ToInfrastructureProfileOutputWithContext(ctx context.Context) InfrastructureProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InfrastructureProfileOutput)
}

func (i InfrastructureProfileArgs) ToInfrastructureProfilePtrOutput() InfrastructureProfilePtrOutput {
	return i.ToInfrastructureProfilePtrOutputWithContext(context.Background())
}

func (i InfrastructureProfileArgs) ToInfrastructureProfilePtrOutputWithContext(ctx context.Context) InfrastructureProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InfrastructureProfileOutput).ToInfrastructureProfilePtrOutputWithContext(ctx)
}

// InfrastructureProfilePtrInput is an input type that accepts InfrastructureProfileArgs, InfrastructureProfilePtr and InfrastructureProfilePtrOutput values.
// You can construct a concrete instance of `InfrastructureProfilePtrInput` via:
//
//	        InfrastructureProfileArgs{...}
//
//	or:
//
//	        nil
type InfrastructureProfilePtrInput interface {
	pulumi.Input

	ToInfrastructureProfilePtrOutput() InfrastructureProfilePtrOutput
	ToInfrastructureProfilePtrOutputWithContext(context.Context) InfrastructureProfilePtrOutput
}

type infrastructureProfilePtrType InfrastructureProfileArgs

func InfrastructureProfilePtr(v *InfrastructureProfileArgs) InfrastructureProfilePtrInput {
	return (*infrastructureProfilePtrType)(v)
}

func (*infrastructureProfilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InfrastructureProfile)(nil)).Elem()
}

func (i *infrastructureProfilePtrType) ToInfrastructureProfilePtrOutput() InfrastructureProfilePtrOutput {
	return i.ToInfrastructureProfilePtrOutputWithContext(context.Background())
}

func (i *infrastructureProfilePtrType) ToInfrastructureProfilePtrOutputWithContext(ctx context.Context) InfrastructureProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InfrastructureProfilePtrOutput)
}

// Specifies the vmmServer infrastructure specific settings for the virtual machine instance.
type InfrastructureProfileOutput struct{ *pulumi.OutputState }

func (InfrastructureProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InfrastructureProfile)(nil)).Elem()
}

func (o InfrastructureProfileOutput) ToInfrastructureProfileOutput() InfrastructureProfileOutput {
	return o
}

func (o InfrastructureProfileOutput) ToInfrastructureProfileOutputWithContext(ctx context.Context) InfrastructureProfileOutput {
	return o
}

func (o InfrastructureProfileOutput) ToInfrastructureProfilePtrOutput() InfrastructureProfilePtrOutput {
	return o.ToInfrastructureProfilePtrOutputWithContext(context.Background())
}

func (o InfrastructureProfileOutput) ToInfrastructureProfilePtrOutputWithContext(ctx context.Context) InfrastructureProfilePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InfrastructureProfile) *InfrastructureProfile {
		return &v
	}).(InfrastructureProfilePtrOutput)
}

// Gets or sets the bios guid for the vm.
func (o InfrastructureProfileOutput) BiosGuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InfrastructureProfile) *string { return v.BiosGuid }).(pulumi.StringPtrOutput)
}

// Type of checkpoint supported for the vm.
func (o InfrastructureProfileOutput) CheckpointType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InfrastructureProfile) *string { return v.CheckpointType }).(pulumi.StringPtrOutput)
}

// Checkpoints in the vm.
func (o InfrastructureProfileOutput) Checkpoints() CheckpointArrayOutput {
	return o.ApplyT(func(v InfrastructureProfile) []Checkpoint { return v.Checkpoints }).(CheckpointArrayOutput)
}

// ARM Id of the cloud resource to use for deploying the vm.
func (o InfrastructureProfileOutput) CloudId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InfrastructureProfile) *string { return v.CloudId }).(pulumi.StringPtrOutput)
}

// Gets or sets the generation for the vm.
func (o InfrastructureProfileOutput) Generation() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InfrastructureProfile) *int { return v.Generation }).(pulumi.IntPtrOutput)
}

// Gets or sets the inventory Item ID for the resource.
func (o InfrastructureProfileOutput) InventoryItemId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InfrastructureProfile) *string { return v.InventoryItemId }).(pulumi.StringPtrOutput)
}

// ARM Id of the template resource to use for deploying the vm.
func (o InfrastructureProfileOutput) TemplateId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InfrastructureProfile) *string { return v.TemplateId }).(pulumi.StringPtrOutput)
}

// Unique ID of the virtual machine.
func (o InfrastructureProfileOutput) Uuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InfrastructureProfile) *string { return v.Uuid }).(pulumi.StringPtrOutput)
}

// VMName is the name of VM on the SCVMM server.
func (o InfrastructureProfileOutput) VmName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InfrastructureProfile) *string { return v.VmName }).(pulumi.StringPtrOutput)
}

// ARM Id of the vmmServer resource in which this resource resides.
func (o InfrastructureProfileOutput) VmmServerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InfrastructureProfile) *string { return v.VmmServerId }).(pulumi.StringPtrOutput)
}

type InfrastructureProfilePtrOutput struct{ *pulumi.OutputState }

func (InfrastructureProfilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InfrastructureProfile)(nil)).Elem()
}

func (o InfrastructureProfilePtrOutput) ToInfrastructureProfilePtrOutput() InfrastructureProfilePtrOutput {
	return o
}

func (o InfrastructureProfilePtrOutput) ToInfrastructureProfilePtrOutputWithContext(ctx context.Context) InfrastructureProfilePtrOutput {
	return o
}

func (o InfrastructureProfilePtrOutput) Elem() InfrastructureProfileOutput {
	return o.ApplyT(func(v *InfrastructureProfile) InfrastructureProfile {
		if v != nil {
			return *v
		}
		var ret InfrastructureProfile
		return ret
	}).(InfrastructureProfileOutput)
}

// Gets or sets the bios guid for the vm.
func (o InfrastructureProfilePtrOutput) BiosGuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InfrastructureProfile) *string {
		if v == nil {
			return nil
		}
		return v.BiosGuid
	}).(pulumi.StringPtrOutput)
}

// Type of checkpoint supported for the vm.
func (o InfrastructureProfilePtrOutput) CheckpointType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InfrastructureProfile) *string {
		if v == nil {
			return nil
		}
		return v.CheckpointType
	}).(pulumi.StringPtrOutput)
}

// Checkpoints in the vm.
func (o InfrastructureProfilePtrOutput) Checkpoints() CheckpointArrayOutput {
	return o.ApplyT(func(v *InfrastructureProfile) []Checkpoint {
		if v == nil {
			return nil
		}
		return v.Checkpoints
	}).(CheckpointArrayOutput)
}

// ARM Id of the cloud resource to use for deploying the vm.
func (o InfrastructureProfilePtrOutput) CloudId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InfrastructureProfile) *string {
		if v == nil {
			return nil
		}
		return v.CloudId
	}).(pulumi.StringPtrOutput)
}

// Gets or sets the generation for the vm.
func (o InfrastructureProfilePtrOutput) Generation() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InfrastructureProfile) *int {
		if v == nil {
			return nil
		}
		return v.Generation
	}).(pulumi.IntPtrOutput)
}

// Gets or sets the inventory Item ID for the resource.
func (o InfrastructureProfilePtrOutput) InventoryItemId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InfrastructureProfile) *string {
		if v == nil {
			return nil
		}
		return v.InventoryItemId
	}).(pulumi.StringPtrOutput)
}

// ARM Id of the template resource to use for deploying the vm.
func (o InfrastructureProfilePtrOutput) TemplateId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InfrastructureProfile) *string {
		if v == nil {
			return nil
		}
		return v.TemplateId
	}).(pulumi.StringPtrOutput)
}

// Unique ID of the virtual machine.
func (o InfrastructureProfilePtrOutput) Uuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InfrastructureProfile) *string {
		if v == nil {
			return nil
		}
		return v.Uuid
	}).(pulumi.StringPtrOutput)
}

// VMName is the name of VM on the SCVMM server.
func (o InfrastructureProfilePtrOutput) VmName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InfrastructureProfile) *string {
		if v == nil {
			return nil
		}
		return v.VmName
	}).(pulumi.StringPtrOutput)
}

// ARM Id of the vmmServer resource in which this resource resides.
func (o InfrastructureProfilePtrOutput) VmmServerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InfrastructureProfile) *string {
		if v == nil {
			return nil
		}
		return v.VmmServerId
	}).(pulumi.StringPtrOutput)
}

// Specifies the vmmServer infrastructure specific settings for the virtual machine instance.
type InfrastructureProfileResponse struct {
	// Gets or sets the bios guid for the vm.
	BiosGuid *string `pulumi:"biosGuid"`
	// Type of checkpoint supported for the vm.
	CheckpointType *string `pulumi:"checkpointType"`
	// Checkpoints in the vm.
	Checkpoints []CheckpointResponse `pulumi:"checkpoints"`
	// ARM Id of the cloud resource to use for deploying the vm.
	CloudId *string `pulumi:"cloudId"`
	// Gets or sets the generation for the vm.
	Generation *int `pulumi:"generation"`
	// Gets or sets the inventory Item ID for the resource.
	InventoryItemId *string `pulumi:"inventoryItemId"`
	// Last restored checkpoint in the vm.
	LastRestoredVMCheckpoint CheckpointResponse `pulumi:"lastRestoredVMCheckpoint"`
	// ARM Id of the template resource to use for deploying the vm.
	TemplateId *string `pulumi:"templateId"`
	// Unique ID of the virtual machine.
	Uuid *string `pulumi:"uuid"`
	// VMName is the name of VM on the SCVMM server.
	VmName *string `pulumi:"vmName"`
	// ARM Id of the vmmServer resource in which this resource resides.
	VmmServerId *string `pulumi:"vmmServerId"`
}

// Specifies the vmmServer infrastructure specific settings for the virtual machine instance.
type InfrastructureProfileResponseOutput struct{ *pulumi.OutputState }

func (InfrastructureProfileResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InfrastructureProfileResponse)(nil)).Elem()
}

func (o InfrastructureProfileResponseOutput) ToInfrastructureProfileResponseOutput() InfrastructureProfileResponseOutput {
	return o
}

func (o InfrastructureProfileResponseOutput) ToInfrastructureProfileResponseOutputWithContext(ctx context.Context) InfrastructureProfileResponseOutput {
	return o
}

// Gets or sets the bios guid for the vm.
func (o InfrastructureProfileResponseOutput) BiosGuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InfrastructureProfileResponse) *string { return v.BiosGuid }).(pulumi.StringPtrOutput)
}

// Type of checkpoint supported for the vm.
func (o InfrastructureProfileResponseOutput) CheckpointType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InfrastructureProfileResponse) *string { return v.CheckpointType }).(pulumi.StringPtrOutput)
}

// Checkpoints in the vm.
func (o InfrastructureProfileResponseOutput) Checkpoints() CheckpointResponseArrayOutput {
	return o.ApplyT(func(v InfrastructureProfileResponse) []CheckpointResponse { return v.Checkpoints }).(CheckpointResponseArrayOutput)
}

// ARM Id of the cloud resource to use for deploying the vm.
func (o InfrastructureProfileResponseOutput) CloudId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InfrastructureProfileResponse) *string { return v.CloudId }).(pulumi.StringPtrOutput)
}

// Gets or sets the generation for the vm.
func (o InfrastructureProfileResponseOutput) Generation() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InfrastructureProfileResponse) *int { return v.Generation }).(pulumi.IntPtrOutput)
}

// Gets or sets the inventory Item ID for the resource.
func (o InfrastructureProfileResponseOutput) InventoryItemId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InfrastructureProfileResponse) *string { return v.InventoryItemId }).(pulumi.StringPtrOutput)
}

// Last restored checkpoint in the vm.
func (o InfrastructureProfileResponseOutput) LastRestoredVMCheckpoint() CheckpointResponseOutput {
	return o.ApplyT(func(v InfrastructureProfileResponse) CheckpointResponse { return v.LastRestoredVMCheckpoint }).(CheckpointResponseOutput)
}

// ARM Id of the template resource to use for deploying the vm.
func (o InfrastructureProfileResponseOutput) TemplateId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InfrastructureProfileResponse) *string { return v.TemplateId }).(pulumi.StringPtrOutput)
}

// Unique ID of the virtual machine.
func (o InfrastructureProfileResponseOutput) Uuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InfrastructureProfileResponse) *string { return v.Uuid }).(pulumi.StringPtrOutput)
}

// VMName is the name of VM on the SCVMM server.
func (o InfrastructureProfileResponseOutput) VmName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InfrastructureProfileResponse) *string { return v.VmName }).(pulumi.StringPtrOutput)
}

// ARM Id of the vmmServer resource in which this resource resides.
func (o InfrastructureProfileResponseOutput) VmmServerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InfrastructureProfileResponse) *string { return v.VmmServerId }).(pulumi.StringPtrOutput)
}

type InfrastructureProfileResponsePtrOutput struct{ *pulumi.OutputState }

func (InfrastructureProfileResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InfrastructureProfileResponse)(nil)).Elem()
}

func (o InfrastructureProfileResponsePtrOutput) ToInfrastructureProfileResponsePtrOutput() InfrastructureProfileResponsePtrOutput {
	return o
}

func (o InfrastructureProfileResponsePtrOutput) ToInfrastructureProfileResponsePtrOutputWithContext(ctx context.Context) InfrastructureProfileResponsePtrOutput {
	return o
}

func (o InfrastructureProfileResponsePtrOutput) Elem() InfrastructureProfileResponseOutput {
	return o.ApplyT(func(v *InfrastructureProfileResponse) InfrastructureProfileResponse {
		if v != nil {
			return *v
		}
		var ret InfrastructureProfileResponse
		return ret
	}).(InfrastructureProfileResponseOutput)
}

// Gets or sets the bios guid for the vm.
func (o InfrastructureProfileResponsePtrOutput) BiosGuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InfrastructureProfileResponse) *string {
		if v == nil {
			return nil
		}
		return v.BiosGuid
	}).(pulumi.StringPtrOutput)
}

// Type of checkpoint supported for the vm.
func (o InfrastructureProfileResponsePtrOutput) CheckpointType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InfrastructureProfileResponse) *string {
		if v == nil {
			return nil
		}
		return v.CheckpointType
	}).(pulumi.StringPtrOutput)
}

// Checkpoints in the vm.
func (o InfrastructureProfileResponsePtrOutput) Checkpoints() CheckpointResponseArrayOutput {
	return o.ApplyT(func(v *InfrastructureProfileResponse) []CheckpointResponse {
		if v == nil {
			return nil
		}
		return v.Checkpoints
	}).(CheckpointResponseArrayOutput)
}

// ARM Id of the cloud resource to use for deploying the vm.
func (o InfrastructureProfileResponsePtrOutput) CloudId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InfrastructureProfileResponse) *string {
		if v == nil {
			return nil
		}
		return v.CloudId
	}).(pulumi.StringPtrOutput)
}

// Gets or sets the generation for the vm.
func (o InfrastructureProfileResponsePtrOutput) Generation() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InfrastructureProfileResponse) *int {
		if v == nil {
			return nil
		}
		return v.Generation
	}).(pulumi.IntPtrOutput)
}

// Gets or sets the inventory Item ID for the resource.
func (o InfrastructureProfileResponsePtrOutput) InventoryItemId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InfrastructureProfileResponse) *string {
		if v == nil {
			return nil
		}
		return v.InventoryItemId
	}).(pulumi.StringPtrOutput)
}

// Last restored checkpoint in the vm.
func (o InfrastructureProfileResponsePtrOutput) LastRestoredVMCheckpoint() CheckpointResponsePtrOutput {
	return o.ApplyT(func(v *InfrastructureProfileResponse) *CheckpointResponse {
		if v == nil {
			return nil
		}
		return &v.LastRestoredVMCheckpoint
	}).(CheckpointResponsePtrOutput)
}

// ARM Id of the template resource to use for deploying the vm.
func (o InfrastructureProfileResponsePtrOutput) TemplateId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InfrastructureProfileResponse) *string {
		if v == nil {
			return nil
		}
		return v.TemplateId
	}).(pulumi.StringPtrOutput)
}

// Unique ID of the virtual machine.
func (o InfrastructureProfileResponsePtrOutput) Uuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InfrastructureProfileResponse) *string {
		if v == nil {
			return nil
		}
		return v.Uuid
	}).(pulumi.StringPtrOutput)
}

// VMName is the name of VM on the SCVMM server.
func (o InfrastructureProfileResponsePtrOutput) VmName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InfrastructureProfileResponse) *string {
		if v == nil {
			return nil
		}
		return v.VmName
	}).(pulumi.StringPtrOutput)
}

// ARM Id of the vmmServer resource in which this resource resides.
func (o InfrastructureProfileResponsePtrOutput) VmmServerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InfrastructureProfileResponse) *string {
		if v == nil {
			return nil
		}
		return v.VmmServerId
	}).(pulumi.StringPtrOutput)
}

// Network Interface model
type NetworkInterface struct {
	// Gets or sets the ipv4 address type.
	Ipv4AddressType *string `pulumi:"ipv4AddressType"`
	// Gets or sets the ipv6 address type.
	Ipv6AddressType *string `pulumi:"ipv6AddressType"`
	// Gets or sets the nic MAC address.
	MacAddress *string `pulumi:"macAddress"`
	// Gets or sets the mac address type.
	MacAddressType *string `pulumi:"macAddressType"`
	// Gets or sets the name of the network interface.
	Name *string `pulumi:"name"`
	// Gets or sets the nic id.
	NicId *string `pulumi:"nicId"`
	// Gets or sets the ARM Id of the Microsoft.ScVmm/virtualNetwork resource to connect the nic.
	VirtualNetworkId *string `pulumi:"virtualNetworkId"`
}

// NetworkInterfaceInput is an input type that accepts NetworkInterfaceArgs and NetworkInterfaceOutput values.
// You can construct a concrete instance of `NetworkInterfaceInput` via:
//
//	NetworkInterfaceArgs{...}
type NetworkInterfaceInput interface {
	pulumi.Input

	ToNetworkInterfaceOutput() NetworkInterfaceOutput
	ToNetworkInterfaceOutputWithContext(context.Context) NetworkInterfaceOutput
}

// Network Interface model
type NetworkInterfaceArgs struct {
	// Gets or sets the ipv4 address type.
	Ipv4AddressType pulumi.StringPtrInput `pulumi:"ipv4AddressType"`
	// Gets or sets the ipv6 address type.
	Ipv6AddressType pulumi.StringPtrInput `pulumi:"ipv6AddressType"`
	// Gets or sets the nic MAC address.
	MacAddress pulumi.StringPtrInput `pulumi:"macAddress"`
	// Gets or sets the mac address type.
	MacAddressType pulumi.StringPtrInput `pulumi:"macAddressType"`
	// Gets or sets the name of the network interface.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Gets or sets the nic id.
	NicId pulumi.StringPtrInput `pulumi:"nicId"`
	// Gets or sets the ARM Id of the Microsoft.ScVmm/virtualNetwork resource to connect the nic.
	VirtualNetworkId pulumi.StringPtrInput `pulumi:"virtualNetworkId"`
}

func (NetworkInterfaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInterface)(nil)).Elem()
}

func (i NetworkInterfaceArgs) ToNetworkInterfaceOutput() NetworkInterfaceOutput {
	return i.ToNetworkInterfaceOutputWithContext(context.Background())
}

func (i NetworkInterfaceArgs) ToNetworkInterfaceOutputWithContext(ctx context.Context) NetworkInterfaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInterfaceOutput)
}

// NetworkInterfaceArrayInput is an input type that accepts NetworkInterfaceArray and NetworkInterfaceArrayOutput values.
// You can construct a concrete instance of `NetworkInterfaceArrayInput` via:
//
//	NetworkInterfaceArray{ NetworkInterfaceArgs{...} }
type NetworkInterfaceArrayInput interface {
	pulumi.Input

	ToNetworkInterfaceArrayOutput() NetworkInterfaceArrayOutput
	ToNetworkInterfaceArrayOutputWithContext(context.Context) NetworkInterfaceArrayOutput
}

type NetworkInterfaceArray []NetworkInterfaceInput

func (NetworkInterfaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkInterface)(nil)).Elem()
}

func (i NetworkInterfaceArray) ToNetworkInterfaceArrayOutput() NetworkInterfaceArrayOutput {
	return i.ToNetworkInterfaceArrayOutputWithContext(context.Background())
}

func (i NetworkInterfaceArray) ToNetworkInterfaceArrayOutputWithContext(ctx context.Context) NetworkInterfaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInterfaceArrayOutput)
}

// Network Interface model
type NetworkInterfaceOutput struct{ *pulumi.OutputState }

func (NetworkInterfaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInterface)(nil)).Elem()
}

func (o NetworkInterfaceOutput) ToNetworkInterfaceOutput() NetworkInterfaceOutput {
	return o
}

func (o NetworkInterfaceOutput) ToNetworkInterfaceOutputWithContext(ctx context.Context) NetworkInterfaceOutput {
	return o
}

// Gets or sets the ipv4 address type.
func (o NetworkInterfaceOutput) Ipv4AddressType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterface) *string { return v.Ipv4AddressType }).(pulumi.StringPtrOutput)
}

// Gets or sets the ipv6 address type.
func (o NetworkInterfaceOutput) Ipv6AddressType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterface) *string { return v.Ipv6AddressType }).(pulumi.StringPtrOutput)
}

// Gets or sets the nic MAC address.
func (o NetworkInterfaceOutput) MacAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterface) *string { return v.MacAddress }).(pulumi.StringPtrOutput)
}

// Gets or sets the mac address type.
func (o NetworkInterfaceOutput) MacAddressType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterface) *string { return v.MacAddressType }).(pulumi.StringPtrOutput)
}

// Gets or sets the name of the network interface.
func (o NetworkInterfaceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterface) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Gets or sets the nic id.
func (o NetworkInterfaceOutput) NicId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterface) *string { return v.NicId }).(pulumi.StringPtrOutput)
}

// Gets or sets the ARM Id of the Microsoft.ScVmm/virtualNetwork resource to connect the nic.
func (o NetworkInterfaceOutput) VirtualNetworkId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterface) *string { return v.VirtualNetworkId }).(pulumi.StringPtrOutput)
}

type NetworkInterfaceArrayOutput struct{ *pulumi.OutputState }

func (NetworkInterfaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkInterface)(nil)).Elem()
}

func (o NetworkInterfaceArrayOutput) ToNetworkInterfaceArrayOutput() NetworkInterfaceArrayOutput {
	return o
}

func (o NetworkInterfaceArrayOutput) ToNetworkInterfaceArrayOutputWithContext(ctx context.Context) NetworkInterfaceArrayOutput {
	return o
}

func (o NetworkInterfaceArrayOutput) Index(i pulumi.IntInput) NetworkInterfaceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkInterface {
		return vs[0].([]NetworkInterface)[vs[1].(int)]
	}).(NetworkInterfaceOutput)
}

// Network Interface model
type NetworkInterfaceResponse struct {
	// Gets the display name of the network interface as shown in the vmmServer. This is the fallback label for a NIC when the name is not set.
	DisplayName string `pulumi:"displayName"`
	// Gets or sets the ipv4 address type.
	Ipv4AddressType *string `pulumi:"ipv4AddressType"`
	// Gets the nic ipv4 addresses.
	Ipv4Addresses []string `pulumi:"ipv4Addresses"`
	// Gets or sets the ipv6 address type.
	Ipv6AddressType *string `pulumi:"ipv6AddressType"`
	// Gets the nic ipv6 addresses.
	Ipv6Addresses []string `pulumi:"ipv6Addresses"`
	// Gets or sets the nic MAC address.
	MacAddress *string `pulumi:"macAddress"`
	// Gets or sets the mac address type.
	MacAddressType *string `pulumi:"macAddressType"`
	// Gets or sets the name of the network interface.
	Name *string `pulumi:"name"`
	// Gets the name of the virtual network in vmmServer that the nic is connected to.
	NetworkName string `pulumi:"networkName"`
	// Gets or sets the nic id.
	NicId *string `pulumi:"nicId"`
	// Gets or sets the ARM Id of the Microsoft.ScVmm/virtualNetwork resource to connect the nic.
	VirtualNetworkId *string `pulumi:"virtualNetworkId"`
}

// Network Interface model
type NetworkInterfaceResponseOutput struct{ *pulumi.OutputState }

func (NetworkInterfaceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInterfaceResponse)(nil)).Elem()
}

func (o NetworkInterfaceResponseOutput) ToNetworkInterfaceResponseOutput() NetworkInterfaceResponseOutput {
	return o
}

func (o NetworkInterfaceResponseOutput) ToNetworkInterfaceResponseOutputWithContext(ctx context.Context) NetworkInterfaceResponseOutput {
	return o
}

// Gets the display name of the network interface as shown in the vmmServer. This is the fallback label for a NIC when the name is not set.
func (o NetworkInterfaceResponseOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkInterfaceResponse) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Gets or sets the ipv4 address type.
func (o NetworkInterfaceResponseOutput) Ipv4AddressType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceResponse) *string { return v.Ipv4AddressType }).(pulumi.StringPtrOutput)
}

// Gets the nic ipv4 addresses.
func (o NetworkInterfaceResponseOutput) Ipv4Addresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NetworkInterfaceResponse) []string { return v.Ipv4Addresses }).(pulumi.StringArrayOutput)
}

// Gets or sets the ipv6 address type.
func (o NetworkInterfaceResponseOutput) Ipv6AddressType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceResponse) *string { return v.Ipv6AddressType }).(pulumi.StringPtrOutput)
}

// Gets the nic ipv6 addresses.
func (o NetworkInterfaceResponseOutput) Ipv6Addresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NetworkInterfaceResponse) []string { return v.Ipv6Addresses }).(pulumi.StringArrayOutput)
}

// Gets or sets the nic MAC address.
func (o NetworkInterfaceResponseOutput) MacAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceResponse) *string { return v.MacAddress }).(pulumi.StringPtrOutput)
}

// Gets or sets the mac address type.
func (o NetworkInterfaceResponseOutput) MacAddressType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceResponse) *string { return v.MacAddressType }).(pulumi.StringPtrOutput)
}

// Gets or sets the name of the network interface.
func (o NetworkInterfaceResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Gets the name of the virtual network in vmmServer that the nic is connected to.
func (o NetworkInterfaceResponseOutput) NetworkName() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkInterfaceResponse) string { return v.NetworkName }).(pulumi.StringOutput)
}

// Gets or sets the nic id.
func (o NetworkInterfaceResponseOutput) NicId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceResponse) *string { return v.NicId }).(pulumi.StringPtrOutput)
}

// Gets or sets the ARM Id of the Microsoft.ScVmm/virtualNetwork resource to connect the nic.
func (o NetworkInterfaceResponseOutput) VirtualNetworkId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceResponse) *string { return v.VirtualNetworkId }).(pulumi.StringPtrOutput)
}

type NetworkInterfaceResponseArrayOutput struct{ *pulumi.OutputState }

func (NetworkInterfaceResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkInterfaceResponse)(nil)).Elem()
}

func (o NetworkInterfaceResponseArrayOutput) ToNetworkInterfaceResponseArrayOutput() NetworkInterfaceResponseArrayOutput {
	return o
}

func (o NetworkInterfaceResponseArrayOutput) ToNetworkInterfaceResponseArrayOutputWithContext(ctx context.Context) NetworkInterfaceResponseArrayOutput {
	return o
}

func (o NetworkInterfaceResponseArrayOutput) Index(i pulumi.IntInput) NetworkInterfaceResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkInterfaceResponse {
		return vs[0].([]NetworkInterfaceResponse)[vs[1].(int)]
	}).(NetworkInterfaceResponseOutput)
}

// Defines the resource properties.
type NetworkProfile struct {
	// Gets or sets the list of network interfaces associated with the virtual machine.
	NetworkInterfaces []NetworkInterface `pulumi:"networkInterfaces"`
}

// NetworkProfileInput is an input type that accepts NetworkProfileArgs and NetworkProfileOutput values.
// You can construct a concrete instance of `NetworkProfileInput` via:
//
//	NetworkProfileArgs{...}
type NetworkProfileInput interface {
	pulumi.Input

	ToNetworkProfileOutput() NetworkProfileOutput
	ToNetworkProfileOutputWithContext(context.Context) NetworkProfileOutput
}

// Defines the resource properties.
type NetworkProfileArgs struct {
	// Gets or sets the list of network interfaces associated with the virtual machine.
	NetworkInterfaces NetworkInterfaceArrayInput `pulumi:"networkInterfaces"`
}

func (NetworkProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkProfile)(nil)).Elem()
}

func (i NetworkProfileArgs) ToNetworkProfileOutput() NetworkProfileOutput {
	return i.ToNetworkProfileOutputWithContext(context.Background())
}

func (i NetworkProfileArgs) ToNetworkProfileOutputWithContext(ctx context.Context) NetworkProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkProfileOutput)
}

func (i NetworkProfileArgs) ToNetworkProfilePtrOutput() NetworkProfilePtrOutput {
	return i.ToNetworkProfilePtrOutputWithContext(context.Background())
}

func (i NetworkProfileArgs) ToNetworkProfilePtrOutputWithContext(ctx context.Context) NetworkProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkProfileOutput).ToNetworkProfilePtrOutputWithContext(ctx)
}

// NetworkProfilePtrInput is an input type that accepts NetworkProfileArgs, NetworkProfilePtr and NetworkProfilePtrOutput values.
// You can construct a concrete instance of `NetworkProfilePtrInput` via:
//
//	        NetworkProfileArgs{...}
//
//	or:
//
//	        nil
type NetworkProfilePtrInput interface {
	pulumi.Input

	ToNetworkProfilePtrOutput() NetworkProfilePtrOutput
	ToNetworkProfilePtrOutputWithContext(context.Context) NetworkProfilePtrOutput
}

type networkProfilePtrType NetworkProfileArgs

func NetworkProfilePtr(v *NetworkProfileArgs) NetworkProfilePtrInput {
	return (*networkProfilePtrType)(v)
}

func (*networkProfilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkProfile)(nil)).Elem()
}

func (i *networkProfilePtrType) ToNetworkProfilePtrOutput() NetworkProfilePtrOutput {
	return i.ToNetworkProfilePtrOutputWithContext(context.Background())
}

func (i *networkProfilePtrType) ToNetworkProfilePtrOutputWithContext(ctx context.Context) NetworkProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkProfilePtrOutput)
}

// Defines the resource properties.
type NetworkProfileOutput struct{ *pulumi.OutputState }

func (NetworkProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkProfile)(nil)).Elem()
}

func (o NetworkProfileOutput) ToNetworkProfileOutput() NetworkProfileOutput {
	return o
}

func (o NetworkProfileOutput) ToNetworkProfileOutputWithContext(ctx context.Context) NetworkProfileOutput {
	return o
}

func (o NetworkProfileOutput) ToNetworkProfilePtrOutput() NetworkProfilePtrOutput {
	return o.ToNetworkProfilePtrOutputWithContext(context.Background())
}

func (o NetworkProfileOutput) ToNetworkProfilePtrOutputWithContext(ctx context.Context) NetworkProfilePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NetworkProfile) *NetworkProfile {
		return &v
	}).(NetworkProfilePtrOutput)
}

// Gets or sets the list of network interfaces associated with the virtual machine.
func (o NetworkProfileOutput) NetworkInterfaces() NetworkInterfaceArrayOutput {
	return o.ApplyT(func(v NetworkProfile) []NetworkInterface { return v.NetworkInterfaces }).(NetworkInterfaceArrayOutput)
}

type NetworkProfilePtrOutput struct{ *pulumi.OutputState }

func (NetworkProfilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkProfile)(nil)).Elem()
}

func (o NetworkProfilePtrOutput) ToNetworkProfilePtrOutput() NetworkProfilePtrOutput {
	return o
}

func (o NetworkProfilePtrOutput) ToNetworkProfilePtrOutputWithContext(ctx context.Context) NetworkProfilePtrOutput {
	return o
}

func (o NetworkProfilePtrOutput) Elem() NetworkProfileOutput {
	return o.ApplyT(func(v *NetworkProfile) NetworkProfile {
		if v != nil {
			return *v
		}
		var ret NetworkProfile
		return ret
	}).(NetworkProfileOutput)
}

// Gets or sets the list of network interfaces associated with the virtual machine.
func (o NetworkProfilePtrOutput) NetworkInterfaces() NetworkInterfaceArrayOutput {
	return o.ApplyT(func(v *NetworkProfile) []NetworkInterface {
		if v == nil {
			return nil
		}
		return v.NetworkInterfaces
	}).(NetworkInterfaceArrayOutput)
}

// Defines the resource properties.
type NetworkProfileResponse struct {
	// Gets or sets the list of network interfaces associated with the virtual machine.
	NetworkInterfaces []NetworkInterfaceResponse `pulumi:"networkInterfaces"`
}

// Defines the resource properties.
type NetworkProfileResponseOutput struct{ *pulumi.OutputState }

func (NetworkProfileResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkProfileResponse)(nil)).Elem()
}

func (o NetworkProfileResponseOutput) ToNetworkProfileResponseOutput() NetworkProfileResponseOutput {
	return o
}

func (o NetworkProfileResponseOutput) ToNetworkProfileResponseOutputWithContext(ctx context.Context) NetworkProfileResponseOutput {
	return o
}

// Gets or sets the list of network interfaces associated with the virtual machine.
func (o NetworkProfileResponseOutput) NetworkInterfaces() NetworkInterfaceResponseArrayOutput {
	return o.ApplyT(func(v NetworkProfileResponse) []NetworkInterfaceResponse { return v.NetworkInterfaces }).(NetworkInterfaceResponseArrayOutput)
}

type NetworkProfileResponsePtrOutput struct{ *pulumi.OutputState }

func (NetworkProfileResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkProfileResponse)(nil)).Elem()
}

func (o NetworkProfileResponsePtrOutput) ToNetworkProfileResponsePtrOutput() NetworkProfileResponsePtrOutput {
	return o
}

func (o NetworkProfileResponsePtrOutput) ToNetworkProfileResponsePtrOutputWithContext(ctx context.Context) NetworkProfileResponsePtrOutput {
	return o
}

func (o NetworkProfileResponsePtrOutput) Elem() NetworkProfileResponseOutput {
	return o.ApplyT(func(v *NetworkProfileResponse) NetworkProfileResponse {
		if v != nil {
			return *v
		}
		var ret NetworkProfileResponse
		return ret
	}).(NetworkProfileResponseOutput)
}

// Gets or sets the list of network interfaces associated with the virtual machine.
func (o NetworkProfileResponsePtrOutput) NetworkInterfaces() NetworkInterfaceResponseArrayOutput {
	return o.ApplyT(func(v *NetworkProfileResponse) []NetworkInterfaceResponse {
		if v == nil {
			return nil
		}
		return v.NetworkInterfaces
	}).(NetworkInterfaceResponseArrayOutput)
}

// Defines the resource properties.
type OsProfileForVMInstance struct {
	// Admin password of the virtual machine.
	AdminPassword *string `pulumi:"adminPassword"`
	// Gets or sets computer name.
	ComputerName *string `pulumi:"computerName"`
}

// OsProfileForVMInstanceInput is an input type that accepts OsProfileForVMInstanceArgs and OsProfileForVMInstanceOutput values.
// You can construct a concrete instance of `OsProfileForVMInstanceInput` via:
//
//	OsProfileForVMInstanceArgs{...}
type OsProfileForVMInstanceInput interface {
	pulumi.Input

	ToOsProfileForVMInstanceOutput() OsProfileForVMInstanceOutput
	ToOsProfileForVMInstanceOutputWithContext(context.Context) OsProfileForVMInstanceOutput
}

// Defines the resource properties.
type OsProfileForVMInstanceArgs struct {
	// Admin password of the virtual machine.
	AdminPassword pulumi.StringPtrInput `pulumi:"adminPassword"`
	// Gets or sets computer name.
	ComputerName pulumi.StringPtrInput `pulumi:"computerName"`
}

func (OsProfileForVMInstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OsProfileForVMInstance)(nil)).Elem()
}

func (i OsProfileForVMInstanceArgs) ToOsProfileForVMInstanceOutput() OsProfileForVMInstanceOutput {
	return i.ToOsProfileForVMInstanceOutputWithContext(context.Background())
}

func (i OsProfileForVMInstanceArgs) ToOsProfileForVMInstanceOutputWithContext(ctx context.Context) OsProfileForVMInstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OsProfileForVMInstanceOutput)
}

func (i OsProfileForVMInstanceArgs) ToOsProfileForVMInstancePtrOutput() OsProfileForVMInstancePtrOutput {
	return i.ToOsProfileForVMInstancePtrOutputWithContext(context.Background())
}

func (i OsProfileForVMInstanceArgs) ToOsProfileForVMInstancePtrOutputWithContext(ctx context.Context) OsProfileForVMInstancePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OsProfileForVMInstanceOutput).ToOsProfileForVMInstancePtrOutputWithContext(ctx)
}

// OsProfileForVMInstancePtrInput is an input type that accepts OsProfileForVMInstanceArgs, OsProfileForVMInstancePtr and OsProfileForVMInstancePtrOutput values.
// You can construct a concrete instance of `OsProfileForVMInstancePtrInput` via:
//
//	        OsProfileForVMInstanceArgs{...}
//
//	or:
//
//	        nil
type OsProfileForVMInstancePtrInput interface {
	pulumi.Input

	ToOsProfileForVMInstancePtrOutput() OsProfileForVMInstancePtrOutput
	ToOsProfileForVMInstancePtrOutputWithContext(context.Context) OsProfileForVMInstancePtrOutput
}

type osProfileForVMInstancePtrType OsProfileForVMInstanceArgs

func OsProfileForVMInstancePtr(v *OsProfileForVMInstanceArgs) OsProfileForVMInstancePtrInput {
	return (*osProfileForVMInstancePtrType)(v)
}

func (*osProfileForVMInstancePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OsProfileForVMInstance)(nil)).Elem()
}

func (i *osProfileForVMInstancePtrType) ToOsProfileForVMInstancePtrOutput() OsProfileForVMInstancePtrOutput {
	return i.ToOsProfileForVMInstancePtrOutputWithContext(context.Background())
}

func (i *osProfileForVMInstancePtrType) ToOsProfileForVMInstancePtrOutputWithContext(ctx context.Context) OsProfileForVMInstancePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OsProfileForVMInstancePtrOutput)
}

// Defines the resource properties.
type OsProfileForVMInstanceOutput struct{ *pulumi.OutputState }

func (OsProfileForVMInstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OsProfileForVMInstance)(nil)).Elem()
}

func (o OsProfileForVMInstanceOutput) ToOsProfileForVMInstanceOutput() OsProfileForVMInstanceOutput {
	return o
}

func (o OsProfileForVMInstanceOutput) ToOsProfileForVMInstanceOutputWithContext(ctx context.Context) OsProfileForVMInstanceOutput {
	return o
}

func (o OsProfileForVMInstanceOutput) ToOsProfileForVMInstancePtrOutput() OsProfileForVMInstancePtrOutput {
	return o.ToOsProfileForVMInstancePtrOutputWithContext(context.Background())
}

func (o OsProfileForVMInstanceOutput) ToOsProfileForVMInstancePtrOutputWithContext(ctx context.Context) OsProfileForVMInstancePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OsProfileForVMInstance) *OsProfileForVMInstance {
		return &v
	}).(OsProfileForVMInstancePtrOutput)
}

// Admin password of the virtual machine.
func (o OsProfileForVMInstanceOutput) AdminPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OsProfileForVMInstance) *string { return v.AdminPassword }).(pulumi.StringPtrOutput)
}

// Gets or sets computer name.
func (o OsProfileForVMInstanceOutput) ComputerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OsProfileForVMInstance) *string { return v.ComputerName }).(pulumi.StringPtrOutput)
}

type OsProfileForVMInstancePtrOutput struct{ *pulumi.OutputState }

func (OsProfileForVMInstancePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OsProfileForVMInstance)(nil)).Elem()
}

func (o OsProfileForVMInstancePtrOutput) ToOsProfileForVMInstancePtrOutput() OsProfileForVMInstancePtrOutput {
	return o
}

func (o OsProfileForVMInstancePtrOutput) ToOsProfileForVMInstancePtrOutputWithContext(ctx context.Context) OsProfileForVMInstancePtrOutput {
	return o
}

func (o OsProfileForVMInstancePtrOutput) Elem() OsProfileForVMInstanceOutput {
	return o.ApplyT(func(v *OsProfileForVMInstance) OsProfileForVMInstance {
		if v != nil {
			return *v
		}
		var ret OsProfileForVMInstance
		return ret
	}).(OsProfileForVMInstanceOutput)
}

// Admin password of the virtual machine.
func (o OsProfileForVMInstancePtrOutput) AdminPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OsProfileForVMInstance) *string {
		if v == nil {
			return nil
		}
		return v.AdminPassword
	}).(pulumi.StringPtrOutput)
}

// Gets or sets computer name.
func (o OsProfileForVMInstancePtrOutput) ComputerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OsProfileForVMInstance) *string {
		if v == nil {
			return nil
		}
		return v.ComputerName
	}).(pulumi.StringPtrOutput)
}

// Defines the resource properties.
type OsProfileForVMInstanceResponse struct {
	// Gets or sets computer name.
	ComputerName *string `pulumi:"computerName"`
	// Gets os sku.
	OsSku string `pulumi:"osSku"`
	// Gets the type of the os.
	OsType string `pulumi:"osType"`
	// Gets os version.
	OsVersion string `pulumi:"osVersion"`
}

// Defines the resource properties.
type OsProfileForVMInstanceResponseOutput struct{ *pulumi.OutputState }

func (OsProfileForVMInstanceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OsProfileForVMInstanceResponse)(nil)).Elem()
}

func (o OsProfileForVMInstanceResponseOutput) ToOsProfileForVMInstanceResponseOutput() OsProfileForVMInstanceResponseOutput {
	return o
}

func (o OsProfileForVMInstanceResponseOutput) ToOsProfileForVMInstanceResponseOutputWithContext(ctx context.Context) OsProfileForVMInstanceResponseOutput {
	return o
}

// Gets or sets computer name.
func (o OsProfileForVMInstanceResponseOutput) ComputerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OsProfileForVMInstanceResponse) *string { return v.ComputerName }).(pulumi.StringPtrOutput)
}

// Gets os sku.
func (o OsProfileForVMInstanceResponseOutput) OsSku() pulumi.StringOutput {
	return o.ApplyT(func(v OsProfileForVMInstanceResponse) string { return v.OsSku }).(pulumi.StringOutput)
}

// Gets the type of the os.
func (o OsProfileForVMInstanceResponseOutput) OsType() pulumi.StringOutput {
	return o.ApplyT(func(v OsProfileForVMInstanceResponse) string { return v.OsType }).(pulumi.StringOutput)
}

// Gets os version.
func (o OsProfileForVMInstanceResponseOutput) OsVersion() pulumi.StringOutput {
	return o.ApplyT(func(v OsProfileForVMInstanceResponse) string { return v.OsVersion }).(pulumi.StringOutput)
}

type OsProfileForVMInstanceResponsePtrOutput struct{ *pulumi.OutputState }

func (OsProfileForVMInstanceResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OsProfileForVMInstanceResponse)(nil)).Elem()
}

func (o OsProfileForVMInstanceResponsePtrOutput) ToOsProfileForVMInstanceResponsePtrOutput() OsProfileForVMInstanceResponsePtrOutput {
	return o
}

func (o OsProfileForVMInstanceResponsePtrOutput) ToOsProfileForVMInstanceResponsePtrOutputWithContext(ctx context.Context) OsProfileForVMInstanceResponsePtrOutput {
	return o
}

func (o OsProfileForVMInstanceResponsePtrOutput) Elem() OsProfileForVMInstanceResponseOutput {
	return o.ApplyT(func(v *OsProfileForVMInstanceResponse) OsProfileForVMInstanceResponse {
		if v != nil {
			return *v
		}
		var ret OsProfileForVMInstanceResponse
		return ret
	}).(OsProfileForVMInstanceResponseOutput)
}

// Gets or sets computer name.
func (o OsProfileForVMInstanceResponsePtrOutput) ComputerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OsProfileForVMInstanceResponse) *string {
		if v == nil {
			return nil
		}
		return v.ComputerName
	}).(pulumi.StringPtrOutput)
}

// Gets os sku.
func (o OsProfileForVMInstanceResponsePtrOutput) OsSku() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OsProfileForVMInstanceResponse) *string {
		if v == nil {
			return nil
		}
		return &v.OsSku
	}).(pulumi.StringPtrOutput)
}

// Gets the type of the os.
func (o OsProfileForVMInstanceResponsePtrOutput) OsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OsProfileForVMInstanceResponse) *string {
		if v == nil {
			return nil
		}
		return &v.OsType
	}).(pulumi.StringPtrOutput)
}

// Gets os version.
func (o OsProfileForVMInstanceResponsePtrOutput) OsVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OsProfileForVMInstanceResponse) *string {
		if v == nil {
			return nil
		}
		return &v.OsVersion
	}).(pulumi.StringPtrOutput)
}

// Defines the resource properties.
type StorageProfile struct {
	// Gets or sets the list of virtual disks associated with the virtual machine.
	Disks []VirtualDisk `pulumi:"disks"`
}

// StorageProfileInput is an input type that accepts StorageProfileArgs and StorageProfileOutput values.
// You can construct a concrete instance of `StorageProfileInput` via:
//
//	StorageProfileArgs{...}
type StorageProfileInput interface {
	pulumi.Input

	ToStorageProfileOutput() StorageProfileOutput
	ToStorageProfileOutputWithContext(context.Context) StorageProfileOutput
}

// Defines the resource properties.
type StorageProfileArgs struct {
	// Gets or sets the list of virtual disks associated with the virtual machine.
	Disks VirtualDiskArrayInput `pulumi:"disks"`
}

func (StorageProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageProfile)(nil)).Elem()
}

func (i StorageProfileArgs) ToStorageProfileOutput() StorageProfileOutput {
	return i.ToStorageProfileOutputWithContext(context.Background())
}

func (i StorageProfileArgs) ToStorageProfileOutputWithContext(ctx context.Context) StorageProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageProfileOutput)
}

func (i StorageProfileArgs) ToStorageProfilePtrOutput() StorageProfilePtrOutput {
	return i.ToStorageProfilePtrOutputWithContext(context.Background())
}

func (i StorageProfileArgs) ToStorageProfilePtrOutputWithContext(ctx context.Context) StorageProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageProfileOutput).ToStorageProfilePtrOutputWithContext(ctx)
}

// StorageProfilePtrInput is an input type that accepts StorageProfileArgs, StorageProfilePtr and StorageProfilePtrOutput values.
// You can construct a concrete instance of `StorageProfilePtrInput` via:
//
//	        StorageProfileArgs{...}
//
//	or:
//
//	        nil
type StorageProfilePtrInput interface {
	pulumi.Input

	ToStorageProfilePtrOutput() StorageProfilePtrOutput
	ToStorageProfilePtrOutputWithContext(context.Context) StorageProfilePtrOutput
}

type storageProfilePtrType StorageProfileArgs

func StorageProfilePtr(v *StorageProfileArgs) StorageProfilePtrInput {
	return (*storageProfilePtrType)(v)
}

func (*storageProfilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageProfile)(nil)).Elem()
}

func (i *storageProfilePtrType) ToStorageProfilePtrOutput() StorageProfilePtrOutput {
	return i.ToStorageProfilePtrOutputWithContext(context.Background())
}

func (i *storageProfilePtrType) ToStorageProfilePtrOutputWithContext(ctx context.Context) StorageProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageProfilePtrOutput)
}

// Defines the resource properties.
type StorageProfileOutput struct{ *pulumi.OutputState }

func (StorageProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageProfile)(nil)).Elem()
}

func (o StorageProfileOutput) ToStorageProfileOutput() StorageProfileOutput {
	return o
}

func (o StorageProfileOutput) ToStorageProfileOutputWithContext(ctx context.Context) StorageProfileOutput {
	return o
}

func (o StorageProfileOutput) ToStorageProfilePtrOutput() StorageProfilePtrOutput {
	return o.ToStorageProfilePtrOutputWithContext(context.Background())
}

func (o StorageProfileOutput) ToStorageProfilePtrOutputWithContext(ctx context.Context) StorageProfilePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v StorageProfile) *StorageProfile {
		return &v
	}).(StorageProfilePtrOutput)
}

// Gets or sets the list of virtual disks associated with the virtual machine.
func (o StorageProfileOutput) Disks() VirtualDiskArrayOutput {
	return o.ApplyT(func(v StorageProfile) []VirtualDisk { return v.Disks }).(VirtualDiskArrayOutput)
}

type StorageProfilePtrOutput struct{ *pulumi.OutputState }

func (StorageProfilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageProfile)(nil)).Elem()
}

func (o StorageProfilePtrOutput) ToStorageProfilePtrOutput() StorageProfilePtrOutput {
	return o
}

func (o StorageProfilePtrOutput) ToStorageProfilePtrOutputWithContext(ctx context.Context) StorageProfilePtrOutput {
	return o
}

func (o StorageProfilePtrOutput) Elem() StorageProfileOutput {
	return o.ApplyT(func(v *StorageProfile) StorageProfile {
		if v != nil {
			return *v
		}
		var ret StorageProfile
		return ret
	}).(StorageProfileOutput)
}

// Gets or sets the list of virtual disks associated with the virtual machine.
func (o StorageProfilePtrOutput) Disks() VirtualDiskArrayOutput {
	return o.ApplyT(func(v *StorageProfile) []VirtualDisk {
		if v == nil {
			return nil
		}
		return v.Disks
	}).(VirtualDiskArrayOutput)
}

// Defines the resource properties.
type StorageProfileResponse struct {
	// Gets or sets the list of virtual disks associated with the virtual machine.
	Disks []VirtualDiskResponse `pulumi:"disks"`
}

// Defines the resource properties.
type StorageProfileResponseOutput struct{ *pulumi.OutputState }

func (StorageProfileResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageProfileResponse)(nil)).Elem()
}

func (o StorageProfileResponseOutput) ToStorageProfileResponseOutput() StorageProfileResponseOutput {
	return o
}

func (o StorageProfileResponseOutput) ToStorageProfileResponseOutputWithContext(ctx context.Context) StorageProfileResponseOutput {
	return o
}

// Gets or sets the list of virtual disks associated with the virtual machine.
func (o StorageProfileResponseOutput) Disks() VirtualDiskResponseArrayOutput {
	return o.ApplyT(func(v StorageProfileResponse) []VirtualDiskResponse { return v.Disks }).(VirtualDiskResponseArrayOutput)
}

type StorageProfileResponsePtrOutput struct{ *pulumi.OutputState }

func (StorageProfileResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageProfileResponse)(nil)).Elem()
}

func (o StorageProfileResponsePtrOutput) ToStorageProfileResponsePtrOutput() StorageProfileResponsePtrOutput {
	return o
}

func (o StorageProfileResponsePtrOutput) ToStorageProfileResponsePtrOutputWithContext(ctx context.Context) StorageProfileResponsePtrOutput {
	return o
}

func (o StorageProfileResponsePtrOutput) Elem() StorageProfileResponseOutput {
	return o.ApplyT(func(v *StorageProfileResponse) StorageProfileResponse {
		if v != nil {
			return *v
		}
		var ret StorageProfileResponse
		return ret
	}).(StorageProfileResponseOutput)
}

// Gets or sets the list of virtual disks associated with the virtual machine.
func (o StorageProfileResponsePtrOutput) Disks() VirtualDiskResponseArrayOutput {
	return o.ApplyT(func(v *StorageProfileResponse) []VirtualDiskResponse {
		if v == nil {
			return nil
		}
		return v.Disks
	}).(VirtualDiskResponseArrayOutput)
}

// The StorageQoSPolicyDetails definition.
type StorageQoSPolicyDetails struct {
	// The ID of the QoS policy.
	Id *string `pulumi:"id"`
	// The name of the policy.
	Name *string `pulumi:"name"`
}

// StorageQoSPolicyDetailsInput is an input type that accepts StorageQoSPolicyDetailsArgs and StorageQoSPolicyDetailsOutput values.
// You can construct a concrete instance of `StorageQoSPolicyDetailsInput` via:
//
//	StorageQoSPolicyDetailsArgs{...}
type StorageQoSPolicyDetailsInput interface {
	pulumi.Input

	ToStorageQoSPolicyDetailsOutput() StorageQoSPolicyDetailsOutput
	ToStorageQoSPolicyDetailsOutputWithContext(context.Context) StorageQoSPolicyDetailsOutput
}

// The StorageQoSPolicyDetails definition.
type StorageQoSPolicyDetailsArgs struct {
	// The ID of the QoS policy.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the policy.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (StorageQoSPolicyDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageQoSPolicyDetails)(nil)).Elem()
}

func (i StorageQoSPolicyDetailsArgs) ToStorageQoSPolicyDetailsOutput() StorageQoSPolicyDetailsOutput {
	return i.ToStorageQoSPolicyDetailsOutputWithContext(context.Background())
}

func (i StorageQoSPolicyDetailsArgs) ToStorageQoSPolicyDetailsOutputWithContext(ctx context.Context) StorageQoSPolicyDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageQoSPolicyDetailsOutput)
}

func (i StorageQoSPolicyDetailsArgs) ToStorageQoSPolicyDetailsPtrOutput() StorageQoSPolicyDetailsPtrOutput {
	return i.ToStorageQoSPolicyDetailsPtrOutputWithContext(context.Background())
}

func (i StorageQoSPolicyDetailsArgs) ToStorageQoSPolicyDetailsPtrOutputWithContext(ctx context.Context) StorageQoSPolicyDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageQoSPolicyDetailsOutput).ToStorageQoSPolicyDetailsPtrOutputWithContext(ctx)
}

// StorageQoSPolicyDetailsPtrInput is an input type that accepts StorageQoSPolicyDetailsArgs, StorageQoSPolicyDetailsPtr and StorageQoSPolicyDetailsPtrOutput values.
// You can construct a concrete instance of `StorageQoSPolicyDetailsPtrInput` via:
//
//	        StorageQoSPolicyDetailsArgs{...}
//
//	or:
//
//	        nil
type StorageQoSPolicyDetailsPtrInput interface {
	pulumi.Input

	ToStorageQoSPolicyDetailsPtrOutput() StorageQoSPolicyDetailsPtrOutput
	ToStorageQoSPolicyDetailsPtrOutputWithContext(context.Context) StorageQoSPolicyDetailsPtrOutput
}

type storageQoSPolicyDetailsPtrType StorageQoSPolicyDetailsArgs

func StorageQoSPolicyDetailsPtr(v *StorageQoSPolicyDetailsArgs) StorageQoSPolicyDetailsPtrInput {
	return (*storageQoSPolicyDetailsPtrType)(v)
}

func (*storageQoSPolicyDetailsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageQoSPolicyDetails)(nil)).Elem()
}

func (i *storageQoSPolicyDetailsPtrType) ToStorageQoSPolicyDetailsPtrOutput() StorageQoSPolicyDetailsPtrOutput {
	return i.ToStorageQoSPolicyDetailsPtrOutputWithContext(context.Background())
}

func (i *storageQoSPolicyDetailsPtrType) ToStorageQoSPolicyDetailsPtrOutputWithContext(ctx context.Context) StorageQoSPolicyDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageQoSPolicyDetailsPtrOutput)
}

// The StorageQoSPolicyDetails definition.
type StorageQoSPolicyDetailsOutput struct{ *pulumi.OutputState }

func (StorageQoSPolicyDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageQoSPolicyDetails)(nil)).Elem()
}

func (o StorageQoSPolicyDetailsOutput) ToStorageQoSPolicyDetailsOutput() StorageQoSPolicyDetailsOutput {
	return o
}

func (o StorageQoSPolicyDetailsOutput) ToStorageQoSPolicyDetailsOutputWithContext(ctx context.Context) StorageQoSPolicyDetailsOutput {
	return o
}

func (o StorageQoSPolicyDetailsOutput) ToStorageQoSPolicyDetailsPtrOutput() StorageQoSPolicyDetailsPtrOutput {
	return o.ToStorageQoSPolicyDetailsPtrOutputWithContext(context.Background())
}

func (o StorageQoSPolicyDetailsOutput) ToStorageQoSPolicyDetailsPtrOutputWithContext(ctx context.Context) StorageQoSPolicyDetailsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v StorageQoSPolicyDetails) *StorageQoSPolicyDetails {
		return &v
	}).(StorageQoSPolicyDetailsPtrOutput)
}

// The ID of the QoS policy.
func (o StorageQoSPolicyDetailsOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageQoSPolicyDetails) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the policy.
func (o StorageQoSPolicyDetailsOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageQoSPolicyDetails) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type StorageQoSPolicyDetailsPtrOutput struct{ *pulumi.OutputState }

func (StorageQoSPolicyDetailsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageQoSPolicyDetails)(nil)).Elem()
}

func (o StorageQoSPolicyDetailsPtrOutput) ToStorageQoSPolicyDetailsPtrOutput() StorageQoSPolicyDetailsPtrOutput {
	return o
}

func (o StorageQoSPolicyDetailsPtrOutput) ToStorageQoSPolicyDetailsPtrOutputWithContext(ctx context.Context) StorageQoSPolicyDetailsPtrOutput {
	return o
}

func (o StorageQoSPolicyDetailsPtrOutput) Elem() StorageQoSPolicyDetailsOutput {
	return o.ApplyT(func(v *StorageQoSPolicyDetails) StorageQoSPolicyDetails {
		if v != nil {
			return *v
		}
		var ret StorageQoSPolicyDetails
		return ret
	}).(StorageQoSPolicyDetailsOutput)
}

// The ID of the QoS policy.
func (o StorageQoSPolicyDetailsPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageQoSPolicyDetails) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// The name of the policy.
func (o StorageQoSPolicyDetailsPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageQoSPolicyDetails) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// The StorageQoSPolicyDetails definition.
type StorageQoSPolicyDetailsResponse struct {
	// The ID of the QoS policy.
	Id *string `pulumi:"id"`
	// The name of the policy.
	Name *string `pulumi:"name"`
}

// The StorageQoSPolicyDetails definition.
type StorageQoSPolicyDetailsResponseOutput struct{ *pulumi.OutputState }

func (StorageQoSPolicyDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageQoSPolicyDetailsResponse)(nil)).Elem()
}

func (o StorageQoSPolicyDetailsResponseOutput) ToStorageQoSPolicyDetailsResponseOutput() StorageQoSPolicyDetailsResponseOutput {
	return o
}

func (o StorageQoSPolicyDetailsResponseOutput) ToStorageQoSPolicyDetailsResponseOutputWithContext(ctx context.Context) StorageQoSPolicyDetailsResponseOutput {
	return o
}

// The ID of the QoS policy.
func (o StorageQoSPolicyDetailsResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageQoSPolicyDetailsResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the policy.
func (o StorageQoSPolicyDetailsResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageQoSPolicyDetailsResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type StorageQoSPolicyDetailsResponsePtrOutput struct{ *pulumi.OutputState }

func (StorageQoSPolicyDetailsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageQoSPolicyDetailsResponse)(nil)).Elem()
}

func (o StorageQoSPolicyDetailsResponsePtrOutput) ToStorageQoSPolicyDetailsResponsePtrOutput() StorageQoSPolicyDetailsResponsePtrOutput {
	return o
}

func (o StorageQoSPolicyDetailsResponsePtrOutput) ToStorageQoSPolicyDetailsResponsePtrOutputWithContext(ctx context.Context) StorageQoSPolicyDetailsResponsePtrOutput {
	return o
}

func (o StorageQoSPolicyDetailsResponsePtrOutput) Elem() StorageQoSPolicyDetailsResponseOutput {
	return o.ApplyT(func(v *StorageQoSPolicyDetailsResponse) StorageQoSPolicyDetailsResponse {
		if v != nil {
			return *v
		}
		var ret StorageQoSPolicyDetailsResponse
		return ret
	}).(StorageQoSPolicyDetailsResponseOutput)
}

// The ID of the QoS policy.
func (o StorageQoSPolicyDetailsResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageQoSPolicyDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// The name of the policy.
func (o StorageQoSPolicyDetailsResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageQoSPolicyDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// The StorageQoSPolicy definition.
type StorageQoSPolicyResponse struct {
	// The Bandwidth Limit for internet traffic.
	BandwidthLimit *float64 `pulumi:"bandwidthLimit"`
	// The ID of the QoS policy.
	Id *string `pulumi:"id"`
	// The maximum IO operations per second.
	IopsMaximum *float64 `pulumi:"iopsMaximum"`
	// The minimum IO operations per second.
	IopsMinimum *float64 `pulumi:"iopsMinimum"`
	// The name of the policy.
	Name *string `pulumi:"name"`
	// The underlying policy.
	PolicyId *string `pulumi:"policyId"`
}

// The StorageQoSPolicy definition.
type StorageQoSPolicyResponseOutput struct{ *pulumi.OutputState }

func (StorageQoSPolicyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageQoSPolicyResponse)(nil)).Elem()
}

func (o StorageQoSPolicyResponseOutput) ToStorageQoSPolicyResponseOutput() StorageQoSPolicyResponseOutput {
	return o
}

func (o StorageQoSPolicyResponseOutput) ToStorageQoSPolicyResponseOutputWithContext(ctx context.Context) StorageQoSPolicyResponseOutput {
	return o
}

// The Bandwidth Limit for internet traffic.
func (o StorageQoSPolicyResponseOutput) BandwidthLimit() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v StorageQoSPolicyResponse) *float64 { return v.BandwidthLimit }).(pulumi.Float64PtrOutput)
}

// The ID of the QoS policy.
func (o StorageQoSPolicyResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageQoSPolicyResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The maximum IO operations per second.
func (o StorageQoSPolicyResponseOutput) IopsMaximum() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v StorageQoSPolicyResponse) *float64 { return v.IopsMaximum }).(pulumi.Float64PtrOutput)
}

// The minimum IO operations per second.
func (o StorageQoSPolicyResponseOutput) IopsMinimum() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v StorageQoSPolicyResponse) *float64 { return v.IopsMinimum }).(pulumi.Float64PtrOutput)
}

// The name of the policy.
func (o StorageQoSPolicyResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageQoSPolicyResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The underlying policy.
func (o StorageQoSPolicyResponseOutput) PolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageQoSPolicyResponse) *string { return v.PolicyId }).(pulumi.StringPtrOutput)
}

type StorageQoSPolicyResponseArrayOutput struct{ *pulumi.OutputState }

func (StorageQoSPolicyResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StorageQoSPolicyResponse)(nil)).Elem()
}

func (o StorageQoSPolicyResponseArrayOutput) ToStorageQoSPolicyResponseArrayOutput() StorageQoSPolicyResponseArrayOutput {
	return o
}

func (o StorageQoSPolicyResponseArrayOutput) ToStorageQoSPolicyResponseArrayOutputWithContext(ctx context.Context) StorageQoSPolicyResponseArrayOutput {
	return o
}

func (o StorageQoSPolicyResponseArrayOutput) Index(i pulumi.IntInput) StorageQoSPolicyResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StorageQoSPolicyResponse {
		return vs[0].([]StorageQoSPolicyResponse)[vs[1].(int)]
	}).(StorageQoSPolicyResponseOutput)
}

// Metadata pertaining to creation and last modification of the resource.
type SystemDataResponse struct {
	// The timestamp of resource creation (UTC).
	CreatedAt *string `pulumi:"createdAt"`
	// The identity that created the resource.
	CreatedBy *string `pulumi:"createdBy"`
	// The type of identity that created the resource.
	CreatedByType *string `pulumi:"createdByType"`
	// The timestamp of resource last modification (UTC)
	LastModifiedAt *string `pulumi:"lastModifiedAt"`
	// The identity that last modified the resource.
	LastModifiedBy *string `pulumi:"lastModifiedBy"`
	// The type of identity that last modified the resource.
	LastModifiedByType *string `pulumi:"lastModifiedByType"`
}

// Metadata pertaining to creation and last modification of the resource.
type SystemDataResponseOutput struct{ *pulumi.OutputState }

func (SystemDataResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemDataResponse)(nil)).Elem()
}

func (o SystemDataResponseOutput) ToSystemDataResponseOutput() SystemDataResponseOutput {
	return o
}

func (o SystemDataResponseOutput) ToSystemDataResponseOutputWithContext(ctx context.Context) SystemDataResponseOutput {
	return o
}

// The timestamp of resource creation (UTC).
func (o SystemDataResponseOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedAt }).(pulumi.StringPtrOutput)
}

// The identity that created the resource.
func (o SystemDataResponseOutput) CreatedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedBy }).(pulumi.StringPtrOutput)
}

// The type of identity that created the resource.
func (o SystemDataResponseOutput) CreatedByType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedByType }).(pulumi.StringPtrOutput)
}

// The timestamp of resource last modification (UTC)
func (o SystemDataResponseOutput) LastModifiedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedAt }).(pulumi.StringPtrOutput)
}

// The identity that last modified the resource.
func (o SystemDataResponseOutput) LastModifiedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedBy }).(pulumi.StringPtrOutput)
}

// The type of identity that last modified the resource.
func (o SystemDataResponseOutput) LastModifiedByType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedByType }).(pulumi.StringPtrOutput)
}

// Credentials to connect to VMMServer.
type VMMCredential struct {
	// Password to use to connect to VMMServer.
	Password *string `pulumi:"password"`
	// Username to use to connect to VMMServer.
	Username *string `pulumi:"username"`
}

// VMMCredentialInput is an input type that accepts VMMCredentialArgs and VMMCredentialOutput values.
// You can construct a concrete instance of `VMMCredentialInput` via:
//
//	VMMCredentialArgs{...}
type VMMCredentialInput interface {
	pulumi.Input

	ToVMMCredentialOutput() VMMCredentialOutput
	ToVMMCredentialOutputWithContext(context.Context) VMMCredentialOutput
}

// Credentials to connect to VMMServer.
type VMMCredentialArgs struct {
	// Password to use to connect to VMMServer.
	Password pulumi.StringPtrInput `pulumi:"password"`
	// Username to use to connect to VMMServer.
	Username pulumi.StringPtrInput `pulumi:"username"`
}

func (VMMCredentialArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VMMCredential)(nil)).Elem()
}

func (i VMMCredentialArgs) ToVMMCredentialOutput() VMMCredentialOutput {
	return i.ToVMMCredentialOutputWithContext(context.Background())
}

func (i VMMCredentialArgs) ToVMMCredentialOutputWithContext(ctx context.Context) VMMCredentialOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMMCredentialOutput)
}

func (i VMMCredentialArgs) ToVMMCredentialPtrOutput() VMMCredentialPtrOutput {
	return i.ToVMMCredentialPtrOutputWithContext(context.Background())
}

func (i VMMCredentialArgs) ToVMMCredentialPtrOutputWithContext(ctx context.Context) VMMCredentialPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMMCredentialOutput).ToVMMCredentialPtrOutputWithContext(ctx)
}

// VMMCredentialPtrInput is an input type that accepts VMMCredentialArgs, VMMCredentialPtr and VMMCredentialPtrOutput values.
// You can construct a concrete instance of `VMMCredentialPtrInput` via:
//
//	        VMMCredentialArgs{...}
//
//	or:
//
//	        nil
type VMMCredentialPtrInput interface {
	pulumi.Input

	ToVMMCredentialPtrOutput() VMMCredentialPtrOutput
	ToVMMCredentialPtrOutputWithContext(context.Context) VMMCredentialPtrOutput
}

type vmmcredentialPtrType VMMCredentialArgs

func VMMCredentialPtr(v *VMMCredentialArgs) VMMCredentialPtrInput {
	return (*vmmcredentialPtrType)(v)
}

func (*vmmcredentialPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VMMCredential)(nil)).Elem()
}

func (i *vmmcredentialPtrType) ToVMMCredentialPtrOutput() VMMCredentialPtrOutput {
	return i.ToVMMCredentialPtrOutputWithContext(context.Background())
}

func (i *vmmcredentialPtrType) ToVMMCredentialPtrOutputWithContext(ctx context.Context) VMMCredentialPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMMCredentialPtrOutput)
}

// Credentials to connect to VMMServer.
type VMMCredentialOutput struct{ *pulumi.OutputState }

func (VMMCredentialOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VMMCredential)(nil)).Elem()
}

func (o VMMCredentialOutput) ToVMMCredentialOutput() VMMCredentialOutput {
	return o
}

func (o VMMCredentialOutput) ToVMMCredentialOutputWithContext(ctx context.Context) VMMCredentialOutput {
	return o
}

func (o VMMCredentialOutput) ToVMMCredentialPtrOutput() VMMCredentialPtrOutput {
	return o.ToVMMCredentialPtrOutputWithContext(context.Background())
}

func (o VMMCredentialOutput) ToVMMCredentialPtrOutputWithContext(ctx context.Context) VMMCredentialPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VMMCredential) *VMMCredential {
		return &v
	}).(VMMCredentialPtrOutput)
}

// Password to use to connect to VMMServer.
func (o VMMCredentialOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMMCredential) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// Username to use to connect to VMMServer.
func (o VMMCredentialOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMMCredential) *string { return v.Username }).(pulumi.StringPtrOutput)
}

type VMMCredentialPtrOutput struct{ *pulumi.OutputState }

func (VMMCredentialPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VMMCredential)(nil)).Elem()
}

func (o VMMCredentialPtrOutput) ToVMMCredentialPtrOutput() VMMCredentialPtrOutput {
	return o
}

func (o VMMCredentialPtrOutput) ToVMMCredentialPtrOutputWithContext(ctx context.Context) VMMCredentialPtrOutput {
	return o
}

func (o VMMCredentialPtrOutput) Elem() VMMCredentialOutput {
	return o.ApplyT(func(v *VMMCredential) VMMCredential {
		if v != nil {
			return *v
		}
		var ret VMMCredential
		return ret
	}).(VMMCredentialOutput)
}

// Password to use to connect to VMMServer.
func (o VMMCredentialPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMMCredential) *string {
		if v == nil {
			return nil
		}
		return v.Password
	}).(pulumi.StringPtrOutput)
}

// Username to use to connect to VMMServer.
func (o VMMCredentialPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMMCredential) *string {
		if v == nil {
			return nil
		}
		return v.Username
	}).(pulumi.StringPtrOutput)
}

// Credentials to connect to VMMServer.
type VMMCredentialResponse struct {
	// Username to use to connect to VMMServer.
	Username *string `pulumi:"username"`
}

// Credentials to connect to VMMServer.
type VMMCredentialResponseOutput struct{ *pulumi.OutputState }

func (VMMCredentialResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VMMCredentialResponse)(nil)).Elem()
}

func (o VMMCredentialResponseOutput) ToVMMCredentialResponseOutput() VMMCredentialResponseOutput {
	return o
}

func (o VMMCredentialResponseOutput) ToVMMCredentialResponseOutputWithContext(ctx context.Context) VMMCredentialResponseOutput {
	return o
}

// Username to use to connect to VMMServer.
func (o VMMCredentialResponseOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMMCredentialResponse) *string { return v.Username }).(pulumi.StringPtrOutput)
}

type VMMCredentialResponsePtrOutput struct{ *pulumi.OutputState }

func (VMMCredentialResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VMMCredentialResponse)(nil)).Elem()
}

func (o VMMCredentialResponsePtrOutput) ToVMMCredentialResponsePtrOutput() VMMCredentialResponsePtrOutput {
	return o
}

func (o VMMCredentialResponsePtrOutput) ToVMMCredentialResponsePtrOutputWithContext(ctx context.Context) VMMCredentialResponsePtrOutput {
	return o
}

func (o VMMCredentialResponsePtrOutput) Elem() VMMCredentialResponseOutput {
	return o.ApplyT(func(v *VMMCredentialResponse) VMMCredentialResponse {
		if v != nil {
			return *v
		}
		var ret VMMCredentialResponse
		return ret
	}).(VMMCredentialResponseOutput)
}

// Username to use to connect to VMMServer.
func (o VMMCredentialResponsePtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMMCredentialResponse) *string {
		if v == nil {
			return nil
		}
		return v.Username
	}).(pulumi.StringPtrOutput)
}

// Virtual disk model
type VirtualDisk struct {
	// Gets or sets the disk bus.
	Bus *int `pulumi:"bus"`
	// Gets or sets the disk bus type.
	BusType *string `pulumi:"busType"`
	// Gets or sets a value indicating diff disk.
	CreateDiffDisk *string `pulumi:"createDiffDisk"`
	// Gets or sets the disk id.
	DiskId *string `pulumi:"diskId"`
	// Gets or sets the disk total size.
	DiskSizeGB *int `pulumi:"diskSizeGB"`
	// Gets or sets the disk lun.
	Lun *int `pulumi:"lun"`
	// Gets or sets the name of the disk.
	Name *string `pulumi:"name"`
	// The QoS policy for the disk.
	StorageQoSPolicy *StorageQoSPolicyDetails `pulumi:"storageQoSPolicy"`
	// Gets or sets the disk id in the template.
	TemplateDiskId *string `pulumi:"templateDiskId"`
	// Gets or sets the disk vhd type.
	VhdType *string `pulumi:"vhdType"`
}

// VirtualDiskInput is an input type that accepts VirtualDiskArgs and VirtualDiskOutput values.
// You can construct a concrete instance of `VirtualDiskInput` via:
//
//	VirtualDiskArgs{...}
type VirtualDiskInput interface {
	pulumi.Input

	ToVirtualDiskOutput() VirtualDiskOutput
	ToVirtualDiskOutputWithContext(context.Context) VirtualDiskOutput
}

// Virtual disk model
type VirtualDiskArgs struct {
	// Gets or sets the disk bus.
	Bus pulumi.IntPtrInput `pulumi:"bus"`
	// Gets or sets the disk bus type.
	BusType pulumi.StringPtrInput `pulumi:"busType"`
	// Gets or sets a value indicating diff disk.
	CreateDiffDisk pulumi.StringPtrInput `pulumi:"createDiffDisk"`
	// Gets or sets the disk id.
	DiskId pulumi.StringPtrInput `pulumi:"diskId"`
	// Gets or sets the disk total size.
	DiskSizeGB pulumi.IntPtrInput `pulumi:"diskSizeGB"`
	// Gets or sets the disk lun.
	Lun pulumi.IntPtrInput `pulumi:"lun"`
	// Gets or sets the name of the disk.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The QoS policy for the disk.
	StorageQoSPolicy StorageQoSPolicyDetailsPtrInput `pulumi:"storageQoSPolicy"`
	// Gets or sets the disk id in the template.
	TemplateDiskId pulumi.StringPtrInput `pulumi:"templateDiskId"`
	// Gets or sets the disk vhd type.
	VhdType pulumi.StringPtrInput `pulumi:"vhdType"`
}

func (VirtualDiskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualDisk)(nil)).Elem()
}

func (i VirtualDiskArgs) ToVirtualDiskOutput() VirtualDiskOutput {
	return i.ToVirtualDiskOutputWithContext(context.Background())
}

func (i VirtualDiskArgs) ToVirtualDiskOutputWithContext(ctx context.Context) VirtualDiskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualDiskOutput)
}

// VirtualDiskArrayInput is an input type that accepts VirtualDiskArray and VirtualDiskArrayOutput values.
// You can construct a concrete instance of `VirtualDiskArrayInput` via:
//
//	VirtualDiskArray{ VirtualDiskArgs{...} }
type VirtualDiskArrayInput interface {
	pulumi.Input

	ToVirtualDiskArrayOutput() VirtualDiskArrayOutput
	ToVirtualDiskArrayOutputWithContext(context.Context) VirtualDiskArrayOutput
}

type VirtualDiskArray []VirtualDiskInput

func (VirtualDiskArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualDisk)(nil)).Elem()
}

func (i VirtualDiskArray) ToVirtualDiskArrayOutput() VirtualDiskArrayOutput {
	return i.ToVirtualDiskArrayOutputWithContext(context.Background())
}

func (i VirtualDiskArray) ToVirtualDiskArrayOutputWithContext(ctx context.Context) VirtualDiskArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualDiskArrayOutput)
}

// Virtual disk model
type VirtualDiskOutput struct{ *pulumi.OutputState }

func (VirtualDiskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualDisk)(nil)).Elem()
}

func (o VirtualDiskOutput) ToVirtualDiskOutput() VirtualDiskOutput {
	return o
}

func (o VirtualDiskOutput) ToVirtualDiskOutputWithContext(ctx context.Context) VirtualDiskOutput {
	return o
}

// Gets or sets the disk bus.
func (o VirtualDiskOutput) Bus() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualDisk) *int { return v.Bus }).(pulumi.IntPtrOutput)
}

// Gets or sets the disk bus type.
func (o VirtualDiskOutput) BusType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualDisk) *string { return v.BusType }).(pulumi.StringPtrOutput)
}

// Gets or sets a value indicating diff disk.
func (o VirtualDiskOutput) CreateDiffDisk() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualDisk) *string { return v.CreateDiffDisk }).(pulumi.StringPtrOutput)
}

// Gets or sets the disk id.
func (o VirtualDiskOutput) DiskId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualDisk) *string { return v.DiskId }).(pulumi.StringPtrOutput)
}

// Gets or sets the disk total size.
func (o VirtualDiskOutput) DiskSizeGB() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualDisk) *int { return v.DiskSizeGB }).(pulumi.IntPtrOutput)
}

// Gets or sets the disk lun.
func (o VirtualDiskOutput) Lun() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualDisk) *int { return v.Lun }).(pulumi.IntPtrOutput)
}

// Gets or sets the name of the disk.
func (o VirtualDiskOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualDisk) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The QoS policy for the disk.
func (o VirtualDiskOutput) StorageQoSPolicy() StorageQoSPolicyDetailsPtrOutput {
	return o.ApplyT(func(v VirtualDisk) *StorageQoSPolicyDetails { return v.StorageQoSPolicy }).(StorageQoSPolicyDetailsPtrOutput)
}

// Gets or sets the disk id in the template.
func (o VirtualDiskOutput) TemplateDiskId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualDisk) *string { return v.TemplateDiskId }).(pulumi.StringPtrOutput)
}

// Gets or sets the disk vhd type.
func (o VirtualDiskOutput) VhdType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualDisk) *string { return v.VhdType }).(pulumi.StringPtrOutput)
}

type VirtualDiskArrayOutput struct{ *pulumi.OutputState }

func (VirtualDiskArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualDisk)(nil)).Elem()
}

func (o VirtualDiskArrayOutput) ToVirtualDiskArrayOutput() VirtualDiskArrayOutput {
	return o
}

func (o VirtualDiskArrayOutput) ToVirtualDiskArrayOutputWithContext(ctx context.Context) VirtualDiskArrayOutput {
	return o
}

func (o VirtualDiskArrayOutput) Index(i pulumi.IntInput) VirtualDiskOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualDisk {
		return vs[0].([]VirtualDisk)[vs[1].(int)]
	}).(VirtualDiskOutput)
}

// Virtual disk model
type VirtualDiskResponse struct {
	// Gets or sets the disk bus.
	Bus *int `pulumi:"bus"`
	// Gets or sets the disk bus type.
	BusType *string `pulumi:"busType"`
	// Gets or sets a value indicating diff disk.
	CreateDiffDisk *string `pulumi:"createDiffDisk"`
	// Gets or sets the disk id.
	DiskId *string `pulumi:"diskId"`
	// Gets or sets the disk total size.
	DiskSizeGB *int `pulumi:"diskSizeGB"`
	// Gets the display name of the virtual disk as shown in the vmmServer. This is the fallback label for a disk when the name is not set.
	DisplayName string `pulumi:"displayName"`
	// Gets or sets the disk lun.
	Lun *int `pulumi:"lun"`
	// Gets the max disk size.
	MaxDiskSizeGB int `pulumi:"maxDiskSizeGB"`
	// Gets or sets the name of the disk.
	Name *string `pulumi:"name"`
	// The QoS policy for the disk.
	StorageQoSPolicy *StorageQoSPolicyDetailsResponse `pulumi:"storageQoSPolicy"`
	// Gets or sets the disk id in the template.
	TemplateDiskId *string `pulumi:"templateDiskId"`
	// Gets the disk vhd format type.
	VhdFormatType string `pulumi:"vhdFormatType"`
	// Gets or sets the disk vhd type.
	VhdType *string `pulumi:"vhdType"`
	// Gets the disk volume type.
	VolumeType string `pulumi:"volumeType"`
}

// Virtual disk model
type VirtualDiskResponseOutput struct{ *pulumi.OutputState }

func (VirtualDiskResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualDiskResponse)(nil)).Elem()
}

func (o VirtualDiskResponseOutput) ToVirtualDiskResponseOutput() VirtualDiskResponseOutput {
	return o
}

func (o VirtualDiskResponseOutput) ToVirtualDiskResponseOutputWithContext(ctx context.Context) VirtualDiskResponseOutput {
	return o
}

// Gets or sets the disk bus.
func (o VirtualDiskResponseOutput) Bus() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualDiskResponse) *int { return v.Bus }).(pulumi.IntPtrOutput)
}

// Gets or sets the disk bus type.
func (o VirtualDiskResponseOutput) BusType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualDiskResponse) *string { return v.BusType }).(pulumi.StringPtrOutput)
}

// Gets or sets a value indicating diff disk.
func (o VirtualDiskResponseOutput) CreateDiffDisk() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualDiskResponse) *string { return v.CreateDiffDisk }).(pulumi.StringPtrOutput)
}

// Gets or sets the disk id.
func (o VirtualDiskResponseOutput) DiskId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualDiskResponse) *string { return v.DiskId }).(pulumi.StringPtrOutput)
}

// Gets or sets the disk total size.
func (o VirtualDiskResponseOutput) DiskSizeGB() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualDiskResponse) *int { return v.DiskSizeGB }).(pulumi.IntPtrOutput)
}

// Gets the display name of the virtual disk as shown in the vmmServer. This is the fallback label for a disk when the name is not set.
func (o VirtualDiskResponseOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualDiskResponse) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Gets or sets the disk lun.
func (o VirtualDiskResponseOutput) Lun() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualDiskResponse) *int { return v.Lun }).(pulumi.IntPtrOutput)
}

// Gets the max disk size.
func (o VirtualDiskResponseOutput) MaxDiskSizeGB() pulumi.IntOutput {
	return o.ApplyT(func(v VirtualDiskResponse) int { return v.MaxDiskSizeGB }).(pulumi.IntOutput)
}

// Gets or sets the name of the disk.
func (o VirtualDiskResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualDiskResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The QoS policy for the disk.
func (o VirtualDiskResponseOutput) StorageQoSPolicy() StorageQoSPolicyDetailsResponsePtrOutput {
	return o.ApplyT(func(v VirtualDiskResponse) *StorageQoSPolicyDetailsResponse { return v.StorageQoSPolicy }).(StorageQoSPolicyDetailsResponsePtrOutput)
}

// Gets or sets the disk id in the template.
func (o VirtualDiskResponseOutput) TemplateDiskId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualDiskResponse) *string { return v.TemplateDiskId }).(pulumi.StringPtrOutput)
}

// Gets the disk vhd format type.
func (o VirtualDiskResponseOutput) VhdFormatType() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualDiskResponse) string { return v.VhdFormatType }).(pulumi.StringOutput)
}

// Gets or sets the disk vhd type.
func (o VirtualDiskResponseOutput) VhdType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualDiskResponse) *string { return v.VhdType }).(pulumi.StringPtrOutput)
}

// Gets the disk volume type.
func (o VirtualDiskResponseOutput) VolumeType() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualDiskResponse) string { return v.VolumeType }).(pulumi.StringOutput)
}

type VirtualDiskResponseArrayOutput struct{ *pulumi.OutputState }

func (VirtualDiskResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualDiskResponse)(nil)).Elem()
}

func (o VirtualDiskResponseArrayOutput) ToVirtualDiskResponseArrayOutput() VirtualDiskResponseArrayOutput {
	return o
}

func (o VirtualDiskResponseArrayOutput) ToVirtualDiskResponseArrayOutputWithContext(ctx context.Context) VirtualDiskResponseArrayOutput {
	return o
}

func (o VirtualDiskResponseArrayOutput) Index(i pulumi.IntInput) VirtualDiskResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualDiskResponse {
		return vs[0].([]VirtualDiskResponse)[vs[1].(int)]
	}).(VirtualDiskResponseOutput)
}

// Availability Set model
type VirtualMachineInstancePropertiesAvailabilitySets struct {
	// Gets the ARM Id of the microsoft.scvmm/availabilitySets resource.
	Id *string `pulumi:"id"`
	// Gets or sets the name of the availability set.
	Name *string `pulumi:"name"`
}

// VirtualMachineInstancePropertiesAvailabilitySetsInput is an input type that accepts VirtualMachineInstancePropertiesAvailabilitySetsArgs and VirtualMachineInstancePropertiesAvailabilitySetsOutput values.
// You can construct a concrete instance of `VirtualMachineInstancePropertiesAvailabilitySetsInput` via:
//
//	VirtualMachineInstancePropertiesAvailabilitySetsArgs{...}
type VirtualMachineInstancePropertiesAvailabilitySetsInput interface {
	pulumi.Input

	ToVirtualMachineInstancePropertiesAvailabilitySetsOutput() VirtualMachineInstancePropertiesAvailabilitySetsOutput
	ToVirtualMachineInstancePropertiesAvailabilitySetsOutputWithContext(context.Context) VirtualMachineInstancePropertiesAvailabilitySetsOutput
}

// Availability Set model
type VirtualMachineInstancePropertiesAvailabilitySetsArgs struct {
	// Gets the ARM Id of the microsoft.scvmm/availabilitySets resource.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Gets or sets the name of the availability set.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (VirtualMachineInstancePropertiesAvailabilitySetsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineInstancePropertiesAvailabilitySets)(nil)).Elem()
}

func (i VirtualMachineInstancePropertiesAvailabilitySetsArgs) ToVirtualMachineInstancePropertiesAvailabilitySetsOutput() VirtualMachineInstancePropertiesAvailabilitySetsOutput {
	return i.ToVirtualMachineInstancePropertiesAvailabilitySetsOutputWithContext(context.Background())
}

func (i VirtualMachineInstancePropertiesAvailabilitySetsArgs) ToVirtualMachineInstancePropertiesAvailabilitySetsOutputWithContext(ctx context.Context) VirtualMachineInstancePropertiesAvailabilitySetsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineInstancePropertiesAvailabilitySetsOutput)
}

// VirtualMachineInstancePropertiesAvailabilitySetsArrayInput is an input type that accepts VirtualMachineInstancePropertiesAvailabilitySetsArray and VirtualMachineInstancePropertiesAvailabilitySetsArrayOutput values.
// You can construct a concrete instance of `VirtualMachineInstancePropertiesAvailabilitySetsArrayInput` via:
//
//	VirtualMachineInstancePropertiesAvailabilitySetsArray{ VirtualMachineInstancePropertiesAvailabilitySetsArgs{...} }
type VirtualMachineInstancePropertiesAvailabilitySetsArrayInput interface {
	pulumi.Input

	ToVirtualMachineInstancePropertiesAvailabilitySetsArrayOutput() VirtualMachineInstancePropertiesAvailabilitySetsArrayOutput
	ToVirtualMachineInstancePropertiesAvailabilitySetsArrayOutputWithContext(context.Context) VirtualMachineInstancePropertiesAvailabilitySetsArrayOutput
}

type VirtualMachineInstancePropertiesAvailabilitySetsArray []VirtualMachineInstancePropertiesAvailabilitySetsInput

func (VirtualMachineInstancePropertiesAvailabilitySetsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualMachineInstancePropertiesAvailabilitySets)(nil)).Elem()
}

func (i VirtualMachineInstancePropertiesAvailabilitySetsArray) ToVirtualMachineInstancePropertiesAvailabilitySetsArrayOutput() VirtualMachineInstancePropertiesAvailabilitySetsArrayOutput {
	return i.ToVirtualMachineInstancePropertiesAvailabilitySetsArrayOutputWithContext(context.Background())
}

func (i VirtualMachineInstancePropertiesAvailabilitySetsArray) ToVirtualMachineInstancePropertiesAvailabilitySetsArrayOutputWithContext(ctx context.Context) VirtualMachineInstancePropertiesAvailabilitySetsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineInstancePropertiesAvailabilitySetsArrayOutput)
}

// Availability Set model
type VirtualMachineInstancePropertiesAvailabilitySetsOutput struct{ *pulumi.OutputState }

func (VirtualMachineInstancePropertiesAvailabilitySetsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineInstancePropertiesAvailabilitySets)(nil)).Elem()
}

func (o VirtualMachineInstancePropertiesAvailabilitySetsOutput) ToVirtualMachineInstancePropertiesAvailabilitySetsOutput() VirtualMachineInstancePropertiesAvailabilitySetsOutput {
	return o
}

func (o VirtualMachineInstancePropertiesAvailabilitySetsOutput) ToVirtualMachineInstancePropertiesAvailabilitySetsOutputWithContext(ctx context.Context) VirtualMachineInstancePropertiesAvailabilitySetsOutput {
	return o
}

// Gets the ARM Id of the microsoft.scvmm/availabilitySets resource.
func (o VirtualMachineInstancePropertiesAvailabilitySetsOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineInstancePropertiesAvailabilitySets) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Gets or sets the name of the availability set.
func (o VirtualMachineInstancePropertiesAvailabilitySetsOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineInstancePropertiesAvailabilitySets) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type VirtualMachineInstancePropertiesAvailabilitySetsArrayOutput struct{ *pulumi.OutputState }

func (VirtualMachineInstancePropertiesAvailabilitySetsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualMachineInstancePropertiesAvailabilitySets)(nil)).Elem()
}

func (o VirtualMachineInstancePropertiesAvailabilitySetsArrayOutput) ToVirtualMachineInstancePropertiesAvailabilitySetsArrayOutput() VirtualMachineInstancePropertiesAvailabilitySetsArrayOutput {
	return o
}

func (o VirtualMachineInstancePropertiesAvailabilitySetsArrayOutput) ToVirtualMachineInstancePropertiesAvailabilitySetsArrayOutputWithContext(ctx context.Context) VirtualMachineInstancePropertiesAvailabilitySetsArrayOutput {
	return o
}

func (o VirtualMachineInstancePropertiesAvailabilitySetsArrayOutput) Index(i pulumi.IntInput) VirtualMachineInstancePropertiesAvailabilitySetsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualMachineInstancePropertiesAvailabilitySets {
		return vs[0].([]VirtualMachineInstancePropertiesAvailabilitySets)[vs[1].(int)]
	}).(VirtualMachineInstancePropertiesAvailabilitySetsOutput)
}

// Availability Set model
type VirtualMachineInstancePropertiesResponseAvailabilitySets struct {
	// Gets the ARM Id of the microsoft.scvmm/availabilitySets resource.
	Id *string `pulumi:"id"`
	// Gets or sets the name of the availability set.
	Name *string `pulumi:"name"`
}

// Availability Set model
type VirtualMachineInstancePropertiesResponseAvailabilitySetsOutput struct{ *pulumi.OutputState }

func (VirtualMachineInstancePropertiesResponseAvailabilitySetsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineInstancePropertiesResponseAvailabilitySets)(nil)).Elem()
}

func (o VirtualMachineInstancePropertiesResponseAvailabilitySetsOutput) ToVirtualMachineInstancePropertiesResponseAvailabilitySetsOutput() VirtualMachineInstancePropertiesResponseAvailabilitySetsOutput {
	return o
}

func (o VirtualMachineInstancePropertiesResponseAvailabilitySetsOutput) ToVirtualMachineInstancePropertiesResponseAvailabilitySetsOutputWithContext(ctx context.Context) VirtualMachineInstancePropertiesResponseAvailabilitySetsOutput {
	return o
}

// Gets the ARM Id of the microsoft.scvmm/availabilitySets resource.
func (o VirtualMachineInstancePropertiesResponseAvailabilitySetsOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineInstancePropertiesResponseAvailabilitySets) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Gets or sets the name of the availability set.
func (o VirtualMachineInstancePropertiesResponseAvailabilitySetsOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineInstancePropertiesResponseAvailabilitySets) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type VirtualMachineInstancePropertiesResponseAvailabilitySetsArrayOutput struct{ *pulumi.OutputState }

func (VirtualMachineInstancePropertiesResponseAvailabilitySetsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualMachineInstancePropertiesResponseAvailabilitySets)(nil)).Elem()
}

func (o VirtualMachineInstancePropertiesResponseAvailabilitySetsArrayOutput) ToVirtualMachineInstancePropertiesResponseAvailabilitySetsArrayOutput() VirtualMachineInstancePropertiesResponseAvailabilitySetsArrayOutput {
	return o
}

func (o VirtualMachineInstancePropertiesResponseAvailabilitySetsArrayOutput) ToVirtualMachineInstancePropertiesResponseAvailabilitySetsArrayOutputWithContext(ctx context.Context) VirtualMachineInstancePropertiesResponseAvailabilitySetsArrayOutput {
	return o
}

func (o VirtualMachineInstancePropertiesResponseAvailabilitySetsArrayOutput) Index(i pulumi.IntInput) VirtualMachineInstancePropertiesResponseAvailabilitySetsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualMachineInstancePropertiesResponseAvailabilitySets {
		return vs[0].([]VirtualMachineInstancePropertiesResponseAvailabilitySets)[vs[1].(int)]
	}).(VirtualMachineInstancePropertiesResponseAvailabilitySetsOutput)
}

func init() {
	pulumi.RegisterOutputType(CheckpointOutput{})
	pulumi.RegisterOutputType(CheckpointArrayOutput{})
	pulumi.RegisterOutputType(CheckpointResponseOutput{})
	pulumi.RegisterOutputType(CheckpointResponsePtrOutput{})
	pulumi.RegisterOutputType(CheckpointResponseArrayOutput{})
	pulumi.RegisterOutputType(CloudCapacityResponseOutput{})
	pulumi.RegisterOutputType(ExtendedLocationOutput{})
	pulumi.RegisterOutputType(ExtendedLocationResponseOutput{})
	pulumi.RegisterOutputType(GuestCredentialOutput{})
	pulumi.RegisterOutputType(GuestCredentialPtrOutput{})
	pulumi.RegisterOutputType(GuestCredentialResponseOutput{})
	pulumi.RegisterOutputType(GuestCredentialResponsePtrOutput{})
	pulumi.RegisterOutputType(HardwareProfileOutput{})
	pulumi.RegisterOutputType(HardwareProfilePtrOutput{})
	pulumi.RegisterOutputType(HardwareProfileResponseOutput{})
	pulumi.RegisterOutputType(HardwareProfileResponsePtrOutput{})
	pulumi.RegisterOutputType(HttpProxyConfigurationOutput{})
	pulumi.RegisterOutputType(HttpProxyConfigurationPtrOutput{})
	pulumi.RegisterOutputType(HttpProxyConfigurationResponseOutput{})
	pulumi.RegisterOutputType(HttpProxyConfigurationResponsePtrOutput{})
	pulumi.RegisterOutputType(InfrastructureProfileOutput{})
	pulumi.RegisterOutputType(InfrastructureProfilePtrOutput{})
	pulumi.RegisterOutputType(InfrastructureProfileResponseOutput{})
	pulumi.RegisterOutputType(InfrastructureProfileResponsePtrOutput{})
	pulumi.RegisterOutputType(NetworkInterfaceOutput{})
	pulumi.RegisterOutputType(NetworkInterfaceArrayOutput{})
	pulumi.RegisterOutputType(NetworkInterfaceResponseOutput{})
	pulumi.RegisterOutputType(NetworkInterfaceResponseArrayOutput{})
	pulumi.RegisterOutputType(NetworkProfileOutput{})
	pulumi.RegisterOutputType(NetworkProfilePtrOutput{})
	pulumi.RegisterOutputType(NetworkProfileResponseOutput{})
	pulumi.RegisterOutputType(NetworkProfileResponsePtrOutput{})
	pulumi.RegisterOutputType(OsProfileForVMInstanceOutput{})
	pulumi.RegisterOutputType(OsProfileForVMInstancePtrOutput{})
	pulumi.RegisterOutputType(OsProfileForVMInstanceResponseOutput{})
	pulumi.RegisterOutputType(OsProfileForVMInstanceResponsePtrOutput{})
	pulumi.RegisterOutputType(StorageProfileOutput{})
	pulumi.RegisterOutputType(StorageProfilePtrOutput{})
	pulumi.RegisterOutputType(StorageProfileResponseOutput{})
	pulumi.RegisterOutputType(StorageProfileResponsePtrOutput{})
	pulumi.RegisterOutputType(StorageQoSPolicyDetailsOutput{})
	pulumi.RegisterOutputType(StorageQoSPolicyDetailsPtrOutput{})
	pulumi.RegisterOutputType(StorageQoSPolicyDetailsResponseOutput{})
	pulumi.RegisterOutputType(StorageQoSPolicyDetailsResponsePtrOutput{})
	pulumi.RegisterOutputType(StorageQoSPolicyResponseOutput{})
	pulumi.RegisterOutputType(StorageQoSPolicyResponseArrayOutput{})
	pulumi.RegisterOutputType(SystemDataResponseOutput{})
	pulumi.RegisterOutputType(VMMCredentialOutput{})
	pulumi.RegisterOutputType(VMMCredentialPtrOutput{})
	pulumi.RegisterOutputType(VMMCredentialResponseOutput{})
	pulumi.RegisterOutputType(VMMCredentialResponsePtrOutput{})
	pulumi.RegisterOutputType(VirtualDiskOutput{})
	pulumi.RegisterOutputType(VirtualDiskArrayOutput{})
	pulumi.RegisterOutputType(VirtualDiskResponseOutput{})
	pulumi.RegisterOutputType(VirtualDiskResponseArrayOutput{})
	pulumi.RegisterOutputType(VirtualMachineInstancePropertiesAvailabilitySetsOutput{})
	pulumi.RegisterOutputType(VirtualMachineInstancePropertiesAvailabilitySetsArrayOutput{})
	pulumi.RegisterOutputType(VirtualMachineInstancePropertiesResponseAvailabilitySetsOutput{})
	pulumi.RegisterOutputType(VirtualMachineInstancePropertiesResponseAvailabilitySetsArrayOutput{})
}
