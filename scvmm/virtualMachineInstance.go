// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package scvmm

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Define the virtualMachineInstance.
// Azure REST API version: 2023-04-01-preview.
//
// Other available API versions: 2023-10-07.
type VirtualMachineInstance struct {
	pulumi.CustomResourceState

	// Availability Sets in vm.
	AvailabilitySets VirtualMachineInstancePropertiesResponseAvailabilitySetsArrayOutput `pulumi:"availabilitySets"`
	// Gets or sets the extended location.
	ExtendedLocation ExtendedLocationResponseOutput `pulumi:"extendedLocation"`
	// Hardware properties.
	HardwareProfile HardwareProfileResponsePtrOutput `pulumi:"hardwareProfile"`
	// Gets the infrastructure profile.
	InfrastructureProfile InfrastructureProfileResponsePtrOutput `pulumi:"infrastructureProfile"`
	// The name of the resource
	Name pulumi.StringOutput `pulumi:"name"`
	// Network properties.
	NetworkProfile NetworkProfileResponsePtrOutput `pulumi:"networkProfile"`
	// OS properties.
	OsProfile OsProfileForVMInstanceResponsePtrOutput `pulumi:"osProfile"`
	// Gets the power state of the virtual machine.
	PowerState pulumi.StringOutput `pulumi:"powerState"`
	// Gets or sets the provisioning state.
	ProvisioningState pulumi.StringOutput `pulumi:"provisioningState"`
	// Storage properties.
	StorageProfile StorageProfileResponsePtrOutput `pulumi:"storageProfile"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponseOutput `pulumi:"systemData"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewVirtualMachineInstance registers a new resource with the given unique name, arguments, and options.
func NewVirtualMachineInstance(ctx *pulumi.Context,
	name string, args *VirtualMachineInstanceArgs, opts ...pulumi.ResourceOption) (*VirtualMachineInstance, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ExtendedLocation == nil {
		return nil, errors.New("invalid value for required argument 'ExtendedLocation'")
	}
	if args.ResourceUri == nil {
		return nil, errors.New("invalid value for required argument 'ResourceUri'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:scvmm/v20230401preview:VirtualMachineInstance"),
		},
		{
			Type: pulumi.String("azure-native:scvmm/v20231007:VirtualMachineInstance"),
		},
	})
	opts = append(opts, aliases)
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource VirtualMachineInstance
	err := ctx.RegisterResource("azure-native:scvmm:VirtualMachineInstance", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetVirtualMachineInstance gets an existing VirtualMachineInstance resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetVirtualMachineInstance(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *VirtualMachineInstanceState, opts ...pulumi.ResourceOption) (*VirtualMachineInstance, error) {
	var resource VirtualMachineInstance
	err := ctx.ReadResource("azure-native:scvmm:VirtualMachineInstance", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering VirtualMachineInstance resources.
type virtualMachineInstanceState struct {
}

type VirtualMachineInstanceState struct {
}

func (VirtualMachineInstanceState) ElementType() reflect.Type {
	return reflect.TypeOf((*virtualMachineInstanceState)(nil)).Elem()
}

type virtualMachineInstanceArgs struct {
	// Availability Sets in vm.
	AvailabilitySets []VirtualMachineInstancePropertiesAvailabilitySets `pulumi:"availabilitySets"`
	// Gets or sets the extended location.
	ExtendedLocation ExtendedLocation `pulumi:"extendedLocation"`
	// Hardware properties.
	HardwareProfile *HardwareProfile `pulumi:"hardwareProfile"`
	// Gets the infrastructure profile.
	InfrastructureProfile *InfrastructureProfile `pulumi:"infrastructureProfile"`
	// Network properties.
	NetworkProfile *NetworkProfile `pulumi:"networkProfile"`
	// OS properties.
	OsProfile *OsProfileForVMInstance `pulumi:"osProfile"`
	// The fully qualified Azure Resource manager identifier of the Hybrid Compute machine resource to be extended.
	ResourceUri string `pulumi:"resourceUri"`
	// Storage properties.
	StorageProfile *StorageProfile `pulumi:"storageProfile"`
}

// The set of arguments for constructing a VirtualMachineInstance resource.
type VirtualMachineInstanceArgs struct {
	// Availability Sets in vm.
	AvailabilitySets VirtualMachineInstancePropertiesAvailabilitySetsArrayInput
	// Gets or sets the extended location.
	ExtendedLocation ExtendedLocationInput
	// Hardware properties.
	HardwareProfile HardwareProfilePtrInput
	// Gets the infrastructure profile.
	InfrastructureProfile InfrastructureProfilePtrInput
	// Network properties.
	NetworkProfile NetworkProfilePtrInput
	// OS properties.
	OsProfile OsProfileForVMInstancePtrInput
	// The fully qualified Azure Resource manager identifier of the Hybrid Compute machine resource to be extended.
	ResourceUri pulumi.StringInput
	// Storage properties.
	StorageProfile StorageProfilePtrInput
}

func (VirtualMachineInstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*virtualMachineInstanceArgs)(nil)).Elem()
}

type VirtualMachineInstanceInput interface {
	pulumi.Input

	ToVirtualMachineInstanceOutput() VirtualMachineInstanceOutput
	ToVirtualMachineInstanceOutputWithContext(ctx context.Context) VirtualMachineInstanceOutput
}

func (*VirtualMachineInstance) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineInstance)(nil)).Elem()
}

func (i *VirtualMachineInstance) ToVirtualMachineInstanceOutput() VirtualMachineInstanceOutput {
	return i.ToVirtualMachineInstanceOutputWithContext(context.Background())
}

func (i *VirtualMachineInstance) ToVirtualMachineInstanceOutputWithContext(ctx context.Context) VirtualMachineInstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineInstanceOutput)
}

func (i *VirtualMachineInstance) ToOutput(ctx context.Context) pulumix.Output[*VirtualMachineInstance] {
	return pulumix.Output[*VirtualMachineInstance]{
		OutputState: i.ToVirtualMachineInstanceOutputWithContext(ctx).OutputState,
	}
}

type VirtualMachineInstanceOutput struct{ *pulumi.OutputState }

func (VirtualMachineInstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineInstance)(nil)).Elem()
}

func (o VirtualMachineInstanceOutput) ToVirtualMachineInstanceOutput() VirtualMachineInstanceOutput {
	return o
}

func (o VirtualMachineInstanceOutput) ToVirtualMachineInstanceOutputWithContext(ctx context.Context) VirtualMachineInstanceOutput {
	return o
}

func (o VirtualMachineInstanceOutput) ToOutput(ctx context.Context) pulumix.Output[*VirtualMachineInstance] {
	return pulumix.Output[*VirtualMachineInstance]{
		OutputState: o.OutputState,
	}
}

// Availability Sets in vm.
func (o VirtualMachineInstanceOutput) AvailabilitySets() VirtualMachineInstancePropertiesResponseAvailabilitySetsArrayOutput {
	return o.ApplyT(func(v *VirtualMachineInstance) VirtualMachineInstancePropertiesResponseAvailabilitySetsArrayOutput {
		return v.AvailabilitySets
	}).(VirtualMachineInstancePropertiesResponseAvailabilitySetsArrayOutput)
}

// Gets or sets the extended location.
func (o VirtualMachineInstanceOutput) ExtendedLocation() ExtendedLocationResponseOutput {
	return o.ApplyT(func(v *VirtualMachineInstance) ExtendedLocationResponseOutput { return v.ExtendedLocation }).(ExtendedLocationResponseOutput)
}

// Hardware properties.
func (o VirtualMachineInstanceOutput) HardwareProfile() HardwareProfileResponsePtrOutput {
	return o.ApplyT(func(v *VirtualMachineInstance) HardwareProfileResponsePtrOutput { return v.HardwareProfile }).(HardwareProfileResponsePtrOutput)
}

// Gets the infrastructure profile.
func (o VirtualMachineInstanceOutput) InfrastructureProfile() InfrastructureProfileResponsePtrOutput {
	return o.ApplyT(func(v *VirtualMachineInstance) InfrastructureProfileResponsePtrOutput { return v.InfrastructureProfile }).(InfrastructureProfileResponsePtrOutput)
}

// The name of the resource
func (o VirtualMachineInstanceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *VirtualMachineInstance) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Network properties.
func (o VirtualMachineInstanceOutput) NetworkProfile() NetworkProfileResponsePtrOutput {
	return o.ApplyT(func(v *VirtualMachineInstance) NetworkProfileResponsePtrOutput { return v.NetworkProfile }).(NetworkProfileResponsePtrOutput)
}

// OS properties.
func (o VirtualMachineInstanceOutput) OsProfile() OsProfileForVMInstanceResponsePtrOutput {
	return o.ApplyT(func(v *VirtualMachineInstance) OsProfileForVMInstanceResponsePtrOutput { return v.OsProfile }).(OsProfileForVMInstanceResponsePtrOutput)
}

// Gets the power state of the virtual machine.
func (o VirtualMachineInstanceOutput) PowerState() pulumi.StringOutput {
	return o.ApplyT(func(v *VirtualMachineInstance) pulumi.StringOutput { return v.PowerState }).(pulumi.StringOutput)
}

// Gets or sets the provisioning state.
func (o VirtualMachineInstanceOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v *VirtualMachineInstance) pulumi.StringOutput { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Storage properties.
func (o VirtualMachineInstanceOutput) StorageProfile() StorageProfileResponsePtrOutput {
	return o.ApplyT(func(v *VirtualMachineInstance) StorageProfileResponsePtrOutput { return v.StorageProfile }).(StorageProfileResponsePtrOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o VirtualMachineInstanceOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v *VirtualMachineInstance) SystemDataResponseOutput { return v.SystemData }).(SystemDataResponseOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o VirtualMachineInstanceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *VirtualMachineInstance) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(VirtualMachineInstanceOutput{})
}
