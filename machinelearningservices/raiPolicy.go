// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package machinelearningservices

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Azure OpenAI Content Filters resource.
// Azure REST API version: 2024-04-01-preview.
type RaiPolicy struct {
	pulumi.CustomResourceState

	// The name of the resource
	Name pulumi.StringOutput `pulumi:"name"`
	// Azure OpenAI Content Filters properties.
	Properties RaiPolicyPropertiesResponseOutput `pulumi:"properties"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponseOutput `pulumi:"systemData"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewRaiPolicy registers a new resource with the given unique name, arguments, and options.
func NewRaiPolicy(ctx *pulumi.Context,
	name string, args *RaiPolicyArgs, opts ...pulumi.ResourceOption) (*RaiPolicy, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.EndpointName == nil {
		return nil, errors.New("invalid value for required argument 'EndpointName'")
	}
	if args.Properties == nil {
		return nil, errors.New("invalid value for required argument 'Properties'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	if args.WorkspaceName == nil {
		return nil, errors.New("invalid value for required argument 'WorkspaceName'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:machinelearningservices/v20240401preview:RaiPolicy"),
		},
	})
	opts = append(opts, aliases)
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource RaiPolicy
	err := ctx.RegisterResource("azure-native:machinelearningservices:RaiPolicy", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetRaiPolicy gets an existing RaiPolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetRaiPolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *RaiPolicyState, opts ...pulumi.ResourceOption) (*RaiPolicy, error) {
	var resource RaiPolicy
	err := ctx.ReadResource("azure-native:machinelearningservices:RaiPolicy", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering RaiPolicy resources.
type raiPolicyState struct {
}

type RaiPolicyState struct {
}

func (RaiPolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*raiPolicyState)(nil)).Elem()
}

type raiPolicyArgs struct {
	// Name of the endpoint resource.
	EndpointName string `pulumi:"endpointName"`
	// Azure OpenAI Content Filters properties.
	Properties RaiPolicyProperties `pulumi:"properties"`
	// Name of the Rai Policy.
	RaiPolicyName *string `pulumi:"raiPolicyName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Azure Machine Learning Workspace Name
	WorkspaceName string `pulumi:"workspaceName"`
}

// The set of arguments for constructing a RaiPolicy resource.
type RaiPolicyArgs struct {
	// Name of the endpoint resource.
	EndpointName pulumi.StringInput
	// Azure OpenAI Content Filters properties.
	Properties RaiPolicyPropertiesInput
	// Name of the Rai Policy.
	RaiPolicyName pulumi.StringPtrInput
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput
	// Azure Machine Learning Workspace Name
	WorkspaceName pulumi.StringInput
}

func (RaiPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*raiPolicyArgs)(nil)).Elem()
}

type RaiPolicyInput interface {
	pulumi.Input

	ToRaiPolicyOutput() RaiPolicyOutput
	ToRaiPolicyOutputWithContext(ctx context.Context) RaiPolicyOutput
}

func (*RaiPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((**RaiPolicy)(nil)).Elem()
}

func (i *RaiPolicy) ToRaiPolicyOutput() RaiPolicyOutput {
	return i.ToRaiPolicyOutputWithContext(context.Background())
}

func (i *RaiPolicy) ToRaiPolicyOutputWithContext(ctx context.Context) RaiPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RaiPolicyOutput)
}

type RaiPolicyOutput struct{ *pulumi.OutputState }

func (RaiPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RaiPolicy)(nil)).Elem()
}

func (o RaiPolicyOutput) ToRaiPolicyOutput() RaiPolicyOutput {
	return o
}

func (o RaiPolicyOutput) ToRaiPolicyOutputWithContext(ctx context.Context) RaiPolicyOutput {
	return o
}

// The name of the resource
func (o RaiPolicyOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *RaiPolicy) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Azure OpenAI Content Filters properties.
func (o RaiPolicyOutput) Properties() RaiPolicyPropertiesResponseOutput {
	return o.ApplyT(func(v *RaiPolicy) RaiPolicyPropertiesResponseOutput { return v.Properties }).(RaiPolicyPropertiesResponseOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o RaiPolicyOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v *RaiPolicy) SystemDataResponseOutput { return v.SystemData }).(SystemDataResponseOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o RaiPolicyOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *RaiPolicy) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(RaiPolicyOutput{})
}
