// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package machinelearningservices

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Azure REST API version: 2023-08-01-preview.
//
// Other available API versions: 2024-01-01-preview, 2024-04-01-preview.
type ServerlessEndpoint struct {
	pulumi.CustomResourceState

	// Managed service identity (system assigned and/or user assigned identities)
	Identity ManagedServiceIdentityResponsePtrOutput `pulumi:"identity"`
	// Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type.
	Kind pulumi.StringPtrOutput `pulumi:"kind"`
	// The geo-location where the resource lives
	Location pulumi.StringOutput `pulumi:"location"`
	// The name of the resource
	Name pulumi.StringOutput `pulumi:"name"`
	// [Required] Additional attributes of the entity.
	ServerlessEndpointProperties ServerlessEndpointResponseOutput `pulumi:"serverlessEndpointProperties"`
	// Sku details required for ARM contract for Autoscaling.
	Sku SkuResponsePtrOutput `pulumi:"sku"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponseOutput `pulumi:"systemData"`
	// Resource tags.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewServerlessEndpoint registers a new resource with the given unique name, arguments, and options.
func NewServerlessEndpoint(ctx *pulumi.Context,
	name string, args *ServerlessEndpointArgs, opts ...pulumi.ResourceOption) (*ServerlessEndpoint, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	if args.ServerlessEndpointProperties == nil {
		return nil, errors.New("invalid value for required argument 'ServerlessEndpointProperties'")
	}
	if args.WorkspaceName == nil {
		return nil, errors.New("invalid value for required argument 'WorkspaceName'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:machinelearningservices/v20230801preview:ServerlessEndpoint"),
		},
		{
			Type: pulumi.String("azure-native:machinelearningservices/v20240101preview:ServerlessEndpoint"),
		},
		{
			Type: pulumi.String("azure-native:machinelearningservices/v20240401preview:ServerlessEndpoint"),
		},
	})
	opts = append(opts, aliases)
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource ServerlessEndpoint
	err := ctx.RegisterResource("azure-native:machinelearningservices:ServerlessEndpoint", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetServerlessEndpoint gets an existing ServerlessEndpoint resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetServerlessEndpoint(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ServerlessEndpointState, opts ...pulumi.ResourceOption) (*ServerlessEndpoint, error) {
	var resource ServerlessEndpoint
	err := ctx.ReadResource("azure-native:machinelearningservices:ServerlessEndpoint", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ServerlessEndpoint resources.
type serverlessEndpointState struct {
}

type ServerlessEndpointState struct {
}

func (ServerlessEndpointState) ElementType() reflect.Type {
	return reflect.TypeOf((*serverlessEndpointState)(nil)).Elem()
}

type serverlessEndpointArgs struct {
	// Managed service identity (system assigned and/or user assigned identities)
	Identity *ManagedServiceIdentity `pulumi:"identity"`
	// Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type.
	Kind *string `pulumi:"kind"`
	// The geo-location where the resource lives
	Location *string `pulumi:"location"`
	// Serverless Endpoint name.
	Name *string `pulumi:"name"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// [Required] Additional attributes of the entity.
	ServerlessEndpointProperties ServerlessEndpointType `pulumi:"serverlessEndpointProperties"`
	// Sku details required for ARM contract for Autoscaling.
	Sku *Sku `pulumi:"sku"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// Name of Azure Machine Learning workspace.
	WorkspaceName string `pulumi:"workspaceName"`
}

// The set of arguments for constructing a ServerlessEndpoint resource.
type ServerlessEndpointArgs struct {
	// Managed service identity (system assigned and/or user assigned identities)
	Identity ManagedServiceIdentityPtrInput
	// Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type.
	Kind pulumi.StringPtrInput
	// The geo-location where the resource lives
	Location pulumi.StringPtrInput
	// Serverless Endpoint name.
	Name pulumi.StringPtrInput
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput
	// [Required] Additional attributes of the entity.
	ServerlessEndpointProperties ServerlessEndpointTypeInput
	// Sku details required for ARM contract for Autoscaling.
	Sku SkuPtrInput
	// Resource tags.
	Tags pulumi.StringMapInput
	// Name of Azure Machine Learning workspace.
	WorkspaceName pulumi.StringInput
}

func (ServerlessEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*serverlessEndpointArgs)(nil)).Elem()
}

type ServerlessEndpointInput interface {
	pulumi.Input

	ToServerlessEndpointOutput() ServerlessEndpointOutput
	ToServerlessEndpointOutputWithContext(ctx context.Context) ServerlessEndpointOutput
}

func (*ServerlessEndpoint) ElementType() reflect.Type {
	return reflect.TypeOf((**ServerlessEndpoint)(nil)).Elem()
}

func (i *ServerlessEndpoint) ToServerlessEndpointOutput() ServerlessEndpointOutput {
	return i.ToServerlessEndpointOutputWithContext(context.Background())
}

func (i *ServerlessEndpoint) ToServerlessEndpointOutputWithContext(ctx context.Context) ServerlessEndpointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerlessEndpointOutput)
}

type ServerlessEndpointOutput struct{ *pulumi.OutputState }

func (ServerlessEndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServerlessEndpoint)(nil)).Elem()
}

func (o ServerlessEndpointOutput) ToServerlessEndpointOutput() ServerlessEndpointOutput {
	return o
}

func (o ServerlessEndpointOutput) ToServerlessEndpointOutputWithContext(ctx context.Context) ServerlessEndpointOutput {
	return o
}

// Managed service identity (system assigned and/or user assigned identities)
func (o ServerlessEndpointOutput) Identity() ManagedServiceIdentityResponsePtrOutput {
	return o.ApplyT(func(v *ServerlessEndpoint) ManagedServiceIdentityResponsePtrOutput { return v.Identity }).(ManagedServiceIdentityResponsePtrOutput)
}

// Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type.
func (o ServerlessEndpointOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServerlessEndpoint) pulumi.StringPtrOutput { return v.Kind }).(pulumi.StringPtrOutput)
}

// The geo-location where the resource lives
func (o ServerlessEndpointOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *ServerlessEndpoint) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// The name of the resource
func (o ServerlessEndpointOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ServerlessEndpoint) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// [Required] Additional attributes of the entity.
func (o ServerlessEndpointOutput) ServerlessEndpointProperties() ServerlessEndpointResponseOutput {
	return o.ApplyT(func(v *ServerlessEndpoint) ServerlessEndpointResponseOutput { return v.ServerlessEndpointProperties }).(ServerlessEndpointResponseOutput)
}

// Sku details required for ARM contract for Autoscaling.
func (o ServerlessEndpointOutput) Sku() SkuResponsePtrOutput {
	return o.ApplyT(func(v *ServerlessEndpoint) SkuResponsePtrOutput { return v.Sku }).(SkuResponsePtrOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o ServerlessEndpointOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v *ServerlessEndpoint) SystemDataResponseOutput { return v.SystemData }).(SystemDataResponseOutput)
}

// Resource tags.
func (o ServerlessEndpointOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ServerlessEndpoint) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o ServerlessEndpointOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *ServerlessEndpoint) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(ServerlessEndpointOutput{})
}
