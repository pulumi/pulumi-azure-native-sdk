// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20240401

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = utilities.GetEnvOrDefault

type SystemCreatedStorageAccountResponse struct {
	// Public blob access allowed
	AllowBlobPublicAccess *bool `pulumi:"allowBlobPublicAccess"`
	// This is populated once the storage account is created.
	ArmResourceId *ArmResourceIdResponse `pulumi:"armResourceId"`
	// HNS enabled for storage account
	StorageAccountHnsEnabled *bool `pulumi:"storageAccountHnsEnabled"`
	// Name of the storage account
	StorageAccountName *string `pulumi:"storageAccountName"`
	// Allowed values:
	// "Standard_LRS",
	// "Standard_GRS",
	// "Standard_RAGRS",
	// "Standard_ZRS",
	// "Standard_GZRS",
	// "Standard_RAGZRS",
	// "Premium_LRS",
	// "Premium_ZRS"
	StorageAccountType *string `pulumi:"storageAccountType"`
}

type SystemCreatedStorageAccountResponseOutput struct{ *pulumi.OutputState }

func (SystemCreatedStorageAccountResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemCreatedStorageAccountResponse)(nil)).Elem()
}

func (o SystemCreatedStorageAccountResponseOutput) ToSystemCreatedStorageAccountResponseOutput() SystemCreatedStorageAccountResponseOutput {
	return o
}

func (o SystemCreatedStorageAccountResponseOutput) ToSystemCreatedStorageAccountResponseOutputWithContext(ctx context.Context) SystemCreatedStorageAccountResponseOutput {
	return o
}

// Public blob access allowed
func (o SystemCreatedStorageAccountResponseOutput) AllowBlobPublicAccess() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SystemCreatedStorageAccountResponse) *bool { return v.AllowBlobPublicAccess }).(pulumi.BoolPtrOutput)
}

// This is populated once the storage account is created.
func (o SystemCreatedStorageAccountResponseOutput) ArmResourceId() ArmResourceIdResponsePtrOutput {
	return o.ApplyT(func(v SystemCreatedStorageAccountResponse) *ArmResourceIdResponse { return v.ArmResourceId }).(ArmResourceIdResponsePtrOutput)
}

// HNS enabled for storage account
func (o SystemCreatedStorageAccountResponseOutput) StorageAccountHnsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SystemCreatedStorageAccountResponse) *bool { return v.StorageAccountHnsEnabled }).(pulumi.BoolPtrOutput)
}

// Name of the storage account
func (o SystemCreatedStorageAccountResponseOutput) StorageAccountName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemCreatedStorageAccountResponse) *string { return v.StorageAccountName }).(pulumi.StringPtrOutput)
}

// Allowed values:
// "Standard_LRS",
// "Standard_GRS",
// "Standard_RAGRS",
// "Standard_ZRS",
// "Standard_GZRS",
// "Standard_RAGZRS",
// "Premium_LRS",
// "Premium_ZRS"
func (o SystemCreatedStorageAccountResponseOutput) StorageAccountType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemCreatedStorageAccountResponse) *string { return v.StorageAccountType }).(pulumi.StringPtrOutput)
}

type SystemCreatedStorageAccountResponsePtrOutput struct{ *pulumi.OutputState }

func (SystemCreatedStorageAccountResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemCreatedStorageAccountResponse)(nil)).Elem()
}

func (o SystemCreatedStorageAccountResponsePtrOutput) ToSystemCreatedStorageAccountResponsePtrOutput() SystemCreatedStorageAccountResponsePtrOutput {
	return o
}

func (o SystemCreatedStorageAccountResponsePtrOutput) ToSystemCreatedStorageAccountResponsePtrOutputWithContext(ctx context.Context) SystemCreatedStorageAccountResponsePtrOutput {
	return o
}

func (o SystemCreatedStorageAccountResponsePtrOutput) Elem() SystemCreatedStorageAccountResponseOutput {
	return o.ApplyT(func(v *SystemCreatedStorageAccountResponse) SystemCreatedStorageAccountResponse {
		if v != nil {
			return *v
		}
		var ret SystemCreatedStorageAccountResponse
		return ret
	}).(SystemCreatedStorageAccountResponseOutput)
}

// Public blob access allowed
func (o SystemCreatedStorageAccountResponsePtrOutput) AllowBlobPublicAccess() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SystemCreatedStorageAccountResponse) *bool {
		if v == nil {
			return nil
		}
		return v.AllowBlobPublicAccess
	}).(pulumi.BoolPtrOutput)
}

// This is populated once the storage account is created.
func (o SystemCreatedStorageAccountResponsePtrOutput) ArmResourceId() ArmResourceIdResponsePtrOutput {
	return o.ApplyT(func(v *SystemCreatedStorageAccountResponse) *ArmResourceIdResponse {
		if v == nil {
			return nil
		}
		return v.ArmResourceId
	}).(ArmResourceIdResponsePtrOutput)
}

// HNS enabled for storage account
func (o SystemCreatedStorageAccountResponsePtrOutput) StorageAccountHnsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SystemCreatedStorageAccountResponse) *bool {
		if v == nil {
			return nil
		}
		return v.StorageAccountHnsEnabled
	}).(pulumi.BoolPtrOutput)
}

// Name of the storage account
func (o SystemCreatedStorageAccountResponsePtrOutput) StorageAccountName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemCreatedStorageAccountResponse) *string {
		if v == nil {
			return nil
		}
		return v.StorageAccountName
	}).(pulumi.StringPtrOutput)
}

// Allowed values:
// "Standard_LRS",
// "Standard_GRS",
// "Standard_RAGRS",
// "Standard_ZRS",
// "Standard_GZRS",
// "Standard_RAGZRS",
// "Premium_LRS",
// "Premium_ZRS"
func (o SystemCreatedStorageAccountResponsePtrOutput) StorageAccountType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemCreatedStorageAccountResponse) *string {
		if v == nil {
			return nil
		}
		return v.StorageAccountType
	}).(pulumi.StringPtrOutput)
}

// Metadata pertaining to creation and last modification of the resource.
type SystemDataResponse struct {
	// The timestamp of resource creation (UTC).
	CreatedAt *string `pulumi:"createdAt"`
	// The identity that created the resource.
	CreatedBy *string `pulumi:"createdBy"`
	// The type of identity that created the resource.
	CreatedByType *string `pulumi:"createdByType"`
	// The timestamp of resource last modification (UTC)
	LastModifiedAt *string `pulumi:"lastModifiedAt"`
	// The identity that last modified the resource.
	LastModifiedBy *string `pulumi:"lastModifiedBy"`
	// The type of identity that last modified the resource.
	LastModifiedByType *string `pulumi:"lastModifiedByType"`
}

// Metadata pertaining to creation and last modification of the resource.
type SystemDataResponseOutput struct{ *pulumi.OutputState }

func (SystemDataResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemDataResponse)(nil)).Elem()
}

func (o SystemDataResponseOutput) ToSystemDataResponseOutput() SystemDataResponseOutput {
	return o
}

func (o SystemDataResponseOutput) ToSystemDataResponseOutputWithContext(ctx context.Context) SystemDataResponseOutput {
	return o
}

// The timestamp of resource creation (UTC).
func (o SystemDataResponseOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedAt }).(pulumi.StringPtrOutput)
}

// The identity that created the resource.
func (o SystemDataResponseOutput) CreatedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedBy }).(pulumi.StringPtrOutput)
}

// The type of identity that created the resource.
func (o SystemDataResponseOutput) CreatedByType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedByType }).(pulumi.StringPtrOutput)
}

// The timestamp of resource last modification (UTC)
func (o SystemDataResponseOutput) LastModifiedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedAt }).(pulumi.StringPtrOutput)
}

// The identity that last modified the resource.
func (o SystemDataResponseOutput) LastModifiedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedBy }).(pulumi.StringPtrOutput)
}

// The type of identity that last modified the resource.
func (o SystemDataResponseOutput) LastModifiedByType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedByType }).(pulumi.StringPtrOutput)
}

// A system service running on a compute.
type SystemServiceResponse struct {
	// Public IP address
	PublicIpAddress string `pulumi:"publicIpAddress"`
	// The type of this system service.
	SystemServiceType string `pulumi:"systemServiceType"`
	// The version for this type.
	Version string `pulumi:"version"`
}

// A system service running on a compute.
type SystemServiceResponseOutput struct{ *pulumi.OutputState }

func (SystemServiceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemServiceResponse)(nil)).Elem()
}

func (o SystemServiceResponseOutput) ToSystemServiceResponseOutput() SystemServiceResponseOutput {
	return o
}

func (o SystemServiceResponseOutput) ToSystemServiceResponseOutputWithContext(ctx context.Context) SystemServiceResponseOutput {
	return o
}

// Public IP address
func (o SystemServiceResponseOutput) PublicIpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v SystemServiceResponse) string { return v.PublicIpAddress }).(pulumi.StringOutput)
}

// The type of this system service.
func (o SystemServiceResponseOutput) SystemServiceType() pulumi.StringOutput {
	return o.ApplyT(func(v SystemServiceResponse) string { return v.SystemServiceType }).(pulumi.StringOutput)
}

// The version for this type.
func (o SystemServiceResponseOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v SystemServiceResponse) string { return v.Version }).(pulumi.StringOutput)
}

type SystemServiceResponseArrayOutput struct{ *pulumi.OutputState }

func (SystemServiceResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SystemServiceResponse)(nil)).Elem()
}

func (o SystemServiceResponseArrayOutput) ToSystemServiceResponseArrayOutput() SystemServiceResponseArrayOutput {
	return o
}

func (o SystemServiceResponseArrayOutput) ToSystemServiceResponseArrayOutputWithContext(ctx context.Context) SystemServiceResponseArrayOutput {
	return o
}

func (o SystemServiceResponseArrayOutput) Index(i pulumi.IntInput) SystemServiceResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SystemServiceResponse {
		return vs[0].([]SystemServiceResponse)[vs[1].(int)]
	}).(SystemServiceResponseOutput)
}

// Featurization Configuration.
type TableVerticalFeaturizationSettings struct {
	// These transformers shall not be used in featurization.
	BlockedTransformers []string `pulumi:"blockedTransformers"`
	// Dictionary of column name and its type (int, float, string, datetime etc).
	ColumnNameAndTypes map[string]string `pulumi:"columnNameAndTypes"`
	// Dataset language, useful for the text data.
	DatasetLanguage *string `pulumi:"datasetLanguage"`
	// Determines whether to use Dnn based featurizers for data featurization.
	EnableDnnFeaturization *bool `pulumi:"enableDnnFeaturization"`
	// Featurization mode - User can keep the default 'Auto' mode and AutoML will take care of necessary transformation of the data in featurization phase.
	// If 'Off' is selected then no featurization is done.
	// If 'Custom' is selected then user can specify additional inputs to customize how featurization is done.
	Mode *string `pulumi:"mode"`
	// User can specify additional transformers to be used along with the columns to which it would be applied and parameters for the transformer constructor.
	TransformerParams map[string][]ColumnTransformer `pulumi:"transformerParams"`
}

// Defaults sets the appropriate defaults for TableVerticalFeaturizationSettings
func (val *TableVerticalFeaturizationSettings) Defaults() *TableVerticalFeaturizationSettings {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.EnableDnnFeaturization == nil {
		enableDnnFeaturization_ := false
		tmp.EnableDnnFeaturization = &enableDnnFeaturization_
	}
	if tmp.Mode == nil {
		mode_ := "Auto"
		tmp.Mode = &mode_
	}
	return &tmp
}

// TableVerticalFeaturizationSettingsInput is an input type that accepts TableVerticalFeaturizationSettingsArgs and TableVerticalFeaturizationSettingsOutput values.
// You can construct a concrete instance of `TableVerticalFeaturizationSettingsInput` via:
//
//	TableVerticalFeaturizationSettingsArgs{...}
type TableVerticalFeaturizationSettingsInput interface {
	pulumi.Input

	ToTableVerticalFeaturizationSettingsOutput() TableVerticalFeaturizationSettingsOutput
	ToTableVerticalFeaturizationSettingsOutputWithContext(context.Context) TableVerticalFeaturizationSettingsOutput
}

// Featurization Configuration.
type TableVerticalFeaturizationSettingsArgs struct {
	// These transformers shall not be used in featurization.
	BlockedTransformers pulumi.StringArrayInput `pulumi:"blockedTransformers"`
	// Dictionary of column name and its type (int, float, string, datetime etc).
	ColumnNameAndTypes pulumi.StringMapInput `pulumi:"columnNameAndTypes"`
	// Dataset language, useful for the text data.
	DatasetLanguage pulumi.StringPtrInput `pulumi:"datasetLanguage"`
	// Determines whether to use Dnn based featurizers for data featurization.
	EnableDnnFeaturization pulumi.BoolPtrInput `pulumi:"enableDnnFeaturization"`
	// Featurization mode - User can keep the default 'Auto' mode and AutoML will take care of necessary transformation of the data in featurization phase.
	// If 'Off' is selected then no featurization is done.
	// If 'Custom' is selected then user can specify additional inputs to customize how featurization is done.
	Mode pulumi.StringPtrInput `pulumi:"mode"`
	// User can specify additional transformers to be used along with the columns to which it would be applied and parameters for the transformer constructor.
	TransformerParams ColumnTransformerArrayMapInput `pulumi:"transformerParams"`
}

// Defaults sets the appropriate defaults for TableVerticalFeaturizationSettingsArgs
func (val *TableVerticalFeaturizationSettingsArgs) Defaults() *TableVerticalFeaturizationSettingsArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.EnableDnnFeaturization == nil {
		tmp.EnableDnnFeaturization = pulumi.BoolPtr(false)
	}
	if tmp.Mode == nil {
		tmp.Mode = pulumi.StringPtr("Auto")
	}
	return &tmp
}
func (TableVerticalFeaturizationSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TableVerticalFeaturizationSettings)(nil)).Elem()
}

func (i TableVerticalFeaturizationSettingsArgs) ToTableVerticalFeaturizationSettingsOutput() TableVerticalFeaturizationSettingsOutput {
	return i.ToTableVerticalFeaturizationSettingsOutputWithContext(context.Background())
}

func (i TableVerticalFeaturizationSettingsArgs) ToTableVerticalFeaturizationSettingsOutputWithContext(ctx context.Context) TableVerticalFeaturizationSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TableVerticalFeaturizationSettingsOutput)
}

func (i TableVerticalFeaturizationSettingsArgs) ToTableVerticalFeaturizationSettingsPtrOutput() TableVerticalFeaturizationSettingsPtrOutput {
	return i.ToTableVerticalFeaturizationSettingsPtrOutputWithContext(context.Background())
}

func (i TableVerticalFeaturizationSettingsArgs) ToTableVerticalFeaturizationSettingsPtrOutputWithContext(ctx context.Context) TableVerticalFeaturizationSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TableVerticalFeaturizationSettingsOutput).ToTableVerticalFeaturizationSettingsPtrOutputWithContext(ctx)
}

// TableVerticalFeaturizationSettingsPtrInput is an input type that accepts TableVerticalFeaturizationSettingsArgs, TableVerticalFeaturizationSettingsPtr and TableVerticalFeaturizationSettingsPtrOutput values.
// You can construct a concrete instance of `TableVerticalFeaturizationSettingsPtrInput` via:
//
//	        TableVerticalFeaturizationSettingsArgs{...}
//
//	or:
//
//	        nil
type TableVerticalFeaturizationSettingsPtrInput interface {
	pulumi.Input

	ToTableVerticalFeaturizationSettingsPtrOutput() TableVerticalFeaturizationSettingsPtrOutput
	ToTableVerticalFeaturizationSettingsPtrOutputWithContext(context.Context) TableVerticalFeaturizationSettingsPtrOutput
}

type tableVerticalFeaturizationSettingsPtrType TableVerticalFeaturizationSettingsArgs

func TableVerticalFeaturizationSettingsPtr(v *TableVerticalFeaturizationSettingsArgs) TableVerticalFeaturizationSettingsPtrInput {
	return (*tableVerticalFeaturizationSettingsPtrType)(v)
}

func (*tableVerticalFeaturizationSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TableVerticalFeaturizationSettings)(nil)).Elem()
}

func (i *tableVerticalFeaturizationSettingsPtrType) ToTableVerticalFeaturizationSettingsPtrOutput() TableVerticalFeaturizationSettingsPtrOutput {
	return i.ToTableVerticalFeaturizationSettingsPtrOutputWithContext(context.Background())
}

func (i *tableVerticalFeaturizationSettingsPtrType) ToTableVerticalFeaturizationSettingsPtrOutputWithContext(ctx context.Context) TableVerticalFeaturizationSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TableVerticalFeaturizationSettingsPtrOutput)
}

// Featurization Configuration.
type TableVerticalFeaturizationSettingsOutput struct{ *pulumi.OutputState }

func (TableVerticalFeaturizationSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TableVerticalFeaturizationSettings)(nil)).Elem()
}

func (o TableVerticalFeaturizationSettingsOutput) ToTableVerticalFeaturizationSettingsOutput() TableVerticalFeaturizationSettingsOutput {
	return o
}

func (o TableVerticalFeaturizationSettingsOutput) ToTableVerticalFeaturizationSettingsOutputWithContext(ctx context.Context) TableVerticalFeaturizationSettingsOutput {
	return o
}

func (o TableVerticalFeaturizationSettingsOutput) ToTableVerticalFeaturizationSettingsPtrOutput() TableVerticalFeaturizationSettingsPtrOutput {
	return o.ToTableVerticalFeaturizationSettingsPtrOutputWithContext(context.Background())
}

func (o TableVerticalFeaturizationSettingsOutput) ToTableVerticalFeaturizationSettingsPtrOutputWithContext(ctx context.Context) TableVerticalFeaturizationSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TableVerticalFeaturizationSettings) *TableVerticalFeaturizationSettings {
		return &v
	}).(TableVerticalFeaturizationSettingsPtrOutput)
}

// These transformers shall not be used in featurization.
func (o TableVerticalFeaturizationSettingsOutput) BlockedTransformers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v TableVerticalFeaturizationSettings) []string { return v.BlockedTransformers }).(pulumi.StringArrayOutput)
}

// Dictionary of column name and its type (int, float, string, datetime etc).
func (o TableVerticalFeaturizationSettingsOutput) ColumnNameAndTypes() pulumi.StringMapOutput {
	return o.ApplyT(func(v TableVerticalFeaturizationSettings) map[string]string { return v.ColumnNameAndTypes }).(pulumi.StringMapOutput)
}

// Dataset language, useful for the text data.
func (o TableVerticalFeaturizationSettingsOutput) DatasetLanguage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TableVerticalFeaturizationSettings) *string { return v.DatasetLanguage }).(pulumi.StringPtrOutput)
}

// Determines whether to use Dnn based featurizers for data featurization.
func (o TableVerticalFeaturizationSettingsOutput) EnableDnnFeaturization() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TableVerticalFeaturizationSettings) *bool { return v.EnableDnnFeaturization }).(pulumi.BoolPtrOutput)
}

// Featurization mode - User can keep the default 'Auto' mode and AutoML will take care of necessary transformation of the data in featurization phase.
// If 'Off' is selected then no featurization is done.
// If 'Custom' is selected then user can specify additional inputs to customize how featurization is done.
func (o TableVerticalFeaturizationSettingsOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TableVerticalFeaturizationSettings) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

// User can specify additional transformers to be used along with the columns to which it would be applied and parameters for the transformer constructor.
func (o TableVerticalFeaturizationSettingsOutput) TransformerParams() ColumnTransformerArrayMapOutput {
	return o.ApplyT(func(v TableVerticalFeaturizationSettings) map[string][]ColumnTransformer { return v.TransformerParams }).(ColumnTransformerArrayMapOutput)
}

type TableVerticalFeaturizationSettingsPtrOutput struct{ *pulumi.OutputState }

func (TableVerticalFeaturizationSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TableVerticalFeaturizationSettings)(nil)).Elem()
}

func (o TableVerticalFeaturizationSettingsPtrOutput) ToTableVerticalFeaturizationSettingsPtrOutput() TableVerticalFeaturizationSettingsPtrOutput {
	return o
}

func (o TableVerticalFeaturizationSettingsPtrOutput) ToTableVerticalFeaturizationSettingsPtrOutputWithContext(ctx context.Context) TableVerticalFeaturizationSettingsPtrOutput {
	return o
}

func (o TableVerticalFeaturizationSettingsPtrOutput) Elem() TableVerticalFeaturizationSettingsOutput {
	return o.ApplyT(func(v *TableVerticalFeaturizationSettings) TableVerticalFeaturizationSettings {
		if v != nil {
			return *v
		}
		var ret TableVerticalFeaturizationSettings
		return ret
	}).(TableVerticalFeaturizationSettingsOutput)
}

// These transformers shall not be used in featurization.
func (o TableVerticalFeaturizationSettingsPtrOutput) BlockedTransformers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *TableVerticalFeaturizationSettings) []string {
		if v == nil {
			return nil
		}
		return v.BlockedTransformers
	}).(pulumi.StringArrayOutput)
}

// Dictionary of column name and its type (int, float, string, datetime etc).
func (o TableVerticalFeaturizationSettingsPtrOutput) ColumnNameAndTypes() pulumi.StringMapOutput {
	return o.ApplyT(func(v *TableVerticalFeaturizationSettings) map[string]string {
		if v == nil {
			return nil
		}
		return v.ColumnNameAndTypes
	}).(pulumi.StringMapOutput)
}

// Dataset language, useful for the text data.
func (o TableVerticalFeaturizationSettingsPtrOutput) DatasetLanguage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TableVerticalFeaturizationSettings) *string {
		if v == nil {
			return nil
		}
		return v.DatasetLanguage
	}).(pulumi.StringPtrOutput)
}

// Determines whether to use Dnn based featurizers for data featurization.
func (o TableVerticalFeaturizationSettingsPtrOutput) EnableDnnFeaturization() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TableVerticalFeaturizationSettings) *bool {
		if v == nil {
			return nil
		}
		return v.EnableDnnFeaturization
	}).(pulumi.BoolPtrOutput)
}

// Featurization mode - User can keep the default 'Auto' mode and AutoML will take care of necessary transformation of the data in featurization phase.
// If 'Off' is selected then no featurization is done.
// If 'Custom' is selected then user can specify additional inputs to customize how featurization is done.
func (o TableVerticalFeaturizationSettingsPtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TableVerticalFeaturizationSettings) *string {
		if v == nil {
			return nil
		}
		return v.Mode
	}).(pulumi.StringPtrOutput)
}

// User can specify additional transformers to be used along with the columns to which it would be applied and parameters for the transformer constructor.
func (o TableVerticalFeaturizationSettingsPtrOutput) TransformerParams() ColumnTransformerArrayMapOutput {
	return o.ApplyT(func(v *TableVerticalFeaturizationSettings) map[string][]ColumnTransformer {
		if v == nil {
			return nil
		}
		return v.TransformerParams
	}).(ColumnTransformerArrayMapOutput)
}

// Featurization Configuration.
type TableVerticalFeaturizationSettingsResponse struct {
	// These transformers shall not be used in featurization.
	BlockedTransformers []string `pulumi:"blockedTransformers"`
	// Dictionary of column name and its type (int, float, string, datetime etc).
	ColumnNameAndTypes map[string]string `pulumi:"columnNameAndTypes"`
	// Dataset language, useful for the text data.
	DatasetLanguage *string `pulumi:"datasetLanguage"`
	// Determines whether to use Dnn based featurizers for data featurization.
	EnableDnnFeaturization *bool `pulumi:"enableDnnFeaturization"`
	// Featurization mode - User can keep the default 'Auto' mode and AutoML will take care of necessary transformation of the data in featurization phase.
	// If 'Off' is selected then no featurization is done.
	// If 'Custom' is selected then user can specify additional inputs to customize how featurization is done.
	Mode *string `pulumi:"mode"`
	// User can specify additional transformers to be used along with the columns to which it would be applied and parameters for the transformer constructor.
	TransformerParams map[string][]ColumnTransformerResponse `pulumi:"transformerParams"`
}

// Defaults sets the appropriate defaults for TableVerticalFeaturizationSettingsResponse
func (val *TableVerticalFeaturizationSettingsResponse) Defaults() *TableVerticalFeaturizationSettingsResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.EnableDnnFeaturization == nil {
		enableDnnFeaturization_ := false
		tmp.EnableDnnFeaturization = &enableDnnFeaturization_
	}
	if tmp.Mode == nil {
		mode_ := "Auto"
		tmp.Mode = &mode_
	}
	return &tmp
}

// Featurization Configuration.
type TableVerticalFeaturizationSettingsResponseOutput struct{ *pulumi.OutputState }

func (TableVerticalFeaturizationSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TableVerticalFeaturizationSettingsResponse)(nil)).Elem()
}

func (o TableVerticalFeaturizationSettingsResponseOutput) ToTableVerticalFeaturizationSettingsResponseOutput() TableVerticalFeaturizationSettingsResponseOutput {
	return o
}

func (o TableVerticalFeaturizationSettingsResponseOutput) ToTableVerticalFeaturizationSettingsResponseOutputWithContext(ctx context.Context) TableVerticalFeaturizationSettingsResponseOutput {
	return o
}

// These transformers shall not be used in featurization.
func (o TableVerticalFeaturizationSettingsResponseOutput) BlockedTransformers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v TableVerticalFeaturizationSettingsResponse) []string { return v.BlockedTransformers }).(pulumi.StringArrayOutput)
}

// Dictionary of column name and its type (int, float, string, datetime etc).
func (o TableVerticalFeaturizationSettingsResponseOutput) ColumnNameAndTypes() pulumi.StringMapOutput {
	return o.ApplyT(func(v TableVerticalFeaturizationSettingsResponse) map[string]string { return v.ColumnNameAndTypes }).(pulumi.StringMapOutput)
}

// Dataset language, useful for the text data.
func (o TableVerticalFeaturizationSettingsResponseOutput) DatasetLanguage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TableVerticalFeaturizationSettingsResponse) *string { return v.DatasetLanguage }).(pulumi.StringPtrOutput)
}

// Determines whether to use Dnn based featurizers for data featurization.
func (o TableVerticalFeaturizationSettingsResponseOutput) EnableDnnFeaturization() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TableVerticalFeaturizationSettingsResponse) *bool { return v.EnableDnnFeaturization }).(pulumi.BoolPtrOutput)
}

// Featurization mode - User can keep the default 'Auto' mode and AutoML will take care of necessary transformation of the data in featurization phase.
// If 'Off' is selected then no featurization is done.
// If 'Custom' is selected then user can specify additional inputs to customize how featurization is done.
func (o TableVerticalFeaturizationSettingsResponseOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TableVerticalFeaturizationSettingsResponse) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

// User can specify additional transformers to be used along with the columns to which it would be applied and parameters for the transformer constructor.
func (o TableVerticalFeaturizationSettingsResponseOutput) TransformerParams() ColumnTransformerResponseArrayMapOutput {
	return o.ApplyT(func(v TableVerticalFeaturizationSettingsResponse) map[string][]ColumnTransformerResponse {
		return v.TransformerParams
	}).(ColumnTransformerResponseArrayMapOutput)
}

type TableVerticalFeaturizationSettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (TableVerticalFeaturizationSettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TableVerticalFeaturizationSettingsResponse)(nil)).Elem()
}

func (o TableVerticalFeaturizationSettingsResponsePtrOutput) ToTableVerticalFeaturizationSettingsResponsePtrOutput() TableVerticalFeaturizationSettingsResponsePtrOutput {
	return o
}

func (o TableVerticalFeaturizationSettingsResponsePtrOutput) ToTableVerticalFeaturizationSettingsResponsePtrOutputWithContext(ctx context.Context) TableVerticalFeaturizationSettingsResponsePtrOutput {
	return o
}

func (o TableVerticalFeaturizationSettingsResponsePtrOutput) Elem() TableVerticalFeaturizationSettingsResponseOutput {
	return o.ApplyT(func(v *TableVerticalFeaturizationSettingsResponse) TableVerticalFeaturizationSettingsResponse {
		if v != nil {
			return *v
		}
		var ret TableVerticalFeaturizationSettingsResponse
		return ret
	}).(TableVerticalFeaturizationSettingsResponseOutput)
}

// These transformers shall not be used in featurization.
func (o TableVerticalFeaturizationSettingsResponsePtrOutput) BlockedTransformers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *TableVerticalFeaturizationSettingsResponse) []string {
		if v == nil {
			return nil
		}
		return v.BlockedTransformers
	}).(pulumi.StringArrayOutput)
}

// Dictionary of column name and its type (int, float, string, datetime etc).
func (o TableVerticalFeaturizationSettingsResponsePtrOutput) ColumnNameAndTypes() pulumi.StringMapOutput {
	return o.ApplyT(func(v *TableVerticalFeaturizationSettingsResponse) map[string]string {
		if v == nil {
			return nil
		}
		return v.ColumnNameAndTypes
	}).(pulumi.StringMapOutput)
}

// Dataset language, useful for the text data.
func (o TableVerticalFeaturizationSettingsResponsePtrOutput) DatasetLanguage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TableVerticalFeaturizationSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.DatasetLanguage
	}).(pulumi.StringPtrOutput)
}

// Determines whether to use Dnn based featurizers for data featurization.
func (o TableVerticalFeaturizationSettingsResponsePtrOutput) EnableDnnFeaturization() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TableVerticalFeaturizationSettingsResponse) *bool {
		if v == nil {
			return nil
		}
		return v.EnableDnnFeaturization
	}).(pulumi.BoolPtrOutput)
}

// Featurization mode - User can keep the default 'Auto' mode and AutoML will take care of necessary transformation of the data in featurization phase.
// If 'Off' is selected then no featurization is done.
// If 'Custom' is selected then user can specify additional inputs to customize how featurization is done.
func (o TableVerticalFeaturizationSettingsResponsePtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TableVerticalFeaturizationSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.Mode
	}).(pulumi.StringPtrOutput)
}

// User can specify additional transformers to be used along with the columns to which it would be applied and parameters for the transformer constructor.
func (o TableVerticalFeaturizationSettingsResponsePtrOutput) TransformerParams() ColumnTransformerResponseArrayMapOutput {
	return o.ApplyT(func(v *TableVerticalFeaturizationSettingsResponse) map[string][]ColumnTransformerResponse {
		if v == nil {
			return nil
		}
		return v.TransformerParams
	}).(ColumnTransformerResponseArrayMapOutput)
}

// Job execution constraints.
type TableVerticalLimitSettings struct {
	// Enable early termination, determines whether or not if AutoMLJob will terminate early if there is no score improvement in last 20 iterations.
	EnableEarlyTermination *bool `pulumi:"enableEarlyTermination"`
	// Exit score for the AutoML job.
	ExitScore *float64 `pulumi:"exitScore"`
	// Maximum Concurrent iterations.
	MaxConcurrentTrials *int `pulumi:"maxConcurrentTrials"`
	// Max cores per iteration.
	MaxCoresPerTrial *int `pulumi:"maxCoresPerTrial"`
	// Number of iterations.
	MaxTrials *int `pulumi:"maxTrials"`
	// AutoML job timeout.
	Timeout *string `pulumi:"timeout"`
	// Iteration timeout.
	TrialTimeout *string `pulumi:"trialTimeout"`
}

// Defaults sets the appropriate defaults for TableVerticalLimitSettings
func (val *TableVerticalLimitSettings) Defaults() *TableVerticalLimitSettings {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.EnableEarlyTermination == nil {
		enableEarlyTermination_ := true
		tmp.EnableEarlyTermination = &enableEarlyTermination_
	}
	if tmp.MaxConcurrentTrials == nil {
		maxConcurrentTrials_ := 1
		tmp.MaxConcurrentTrials = &maxConcurrentTrials_
	}
	if tmp.MaxCoresPerTrial == nil {
		maxCoresPerTrial_ := -1
		tmp.MaxCoresPerTrial = &maxCoresPerTrial_
	}
	if tmp.MaxTrials == nil {
		maxTrials_ := 1000
		tmp.MaxTrials = &maxTrials_
	}
	if tmp.Timeout == nil {
		timeout_ := "PT6H"
		tmp.Timeout = &timeout_
	}
	if tmp.TrialTimeout == nil {
		trialTimeout_ := "PT30M"
		tmp.TrialTimeout = &trialTimeout_
	}
	return &tmp
}

// TableVerticalLimitSettingsInput is an input type that accepts TableVerticalLimitSettingsArgs and TableVerticalLimitSettingsOutput values.
// You can construct a concrete instance of `TableVerticalLimitSettingsInput` via:
//
//	TableVerticalLimitSettingsArgs{...}
type TableVerticalLimitSettingsInput interface {
	pulumi.Input

	ToTableVerticalLimitSettingsOutput() TableVerticalLimitSettingsOutput
	ToTableVerticalLimitSettingsOutputWithContext(context.Context) TableVerticalLimitSettingsOutput
}

// Job execution constraints.
type TableVerticalLimitSettingsArgs struct {
	// Enable early termination, determines whether or not if AutoMLJob will terminate early if there is no score improvement in last 20 iterations.
	EnableEarlyTermination pulumi.BoolPtrInput `pulumi:"enableEarlyTermination"`
	// Exit score for the AutoML job.
	ExitScore pulumi.Float64PtrInput `pulumi:"exitScore"`
	// Maximum Concurrent iterations.
	MaxConcurrentTrials pulumi.IntPtrInput `pulumi:"maxConcurrentTrials"`
	// Max cores per iteration.
	MaxCoresPerTrial pulumi.IntPtrInput `pulumi:"maxCoresPerTrial"`
	// Number of iterations.
	MaxTrials pulumi.IntPtrInput `pulumi:"maxTrials"`
	// AutoML job timeout.
	Timeout pulumi.StringPtrInput `pulumi:"timeout"`
	// Iteration timeout.
	TrialTimeout pulumi.StringPtrInput `pulumi:"trialTimeout"`
}

// Defaults sets the appropriate defaults for TableVerticalLimitSettingsArgs
func (val *TableVerticalLimitSettingsArgs) Defaults() *TableVerticalLimitSettingsArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.EnableEarlyTermination == nil {
		tmp.EnableEarlyTermination = pulumi.BoolPtr(true)
	}
	if tmp.MaxConcurrentTrials == nil {
		tmp.MaxConcurrentTrials = pulumi.IntPtr(1)
	}
	if tmp.MaxCoresPerTrial == nil {
		tmp.MaxCoresPerTrial = pulumi.IntPtr(-1)
	}
	if tmp.MaxTrials == nil {
		tmp.MaxTrials = pulumi.IntPtr(1000)
	}
	if tmp.Timeout == nil {
		tmp.Timeout = pulumi.StringPtr("PT6H")
	}
	if tmp.TrialTimeout == nil {
		tmp.TrialTimeout = pulumi.StringPtr("PT30M")
	}
	return &tmp
}
func (TableVerticalLimitSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TableVerticalLimitSettings)(nil)).Elem()
}

func (i TableVerticalLimitSettingsArgs) ToTableVerticalLimitSettingsOutput() TableVerticalLimitSettingsOutput {
	return i.ToTableVerticalLimitSettingsOutputWithContext(context.Background())
}

func (i TableVerticalLimitSettingsArgs) ToTableVerticalLimitSettingsOutputWithContext(ctx context.Context) TableVerticalLimitSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TableVerticalLimitSettingsOutput)
}

func (i TableVerticalLimitSettingsArgs) ToTableVerticalLimitSettingsPtrOutput() TableVerticalLimitSettingsPtrOutput {
	return i.ToTableVerticalLimitSettingsPtrOutputWithContext(context.Background())
}

func (i TableVerticalLimitSettingsArgs) ToTableVerticalLimitSettingsPtrOutputWithContext(ctx context.Context) TableVerticalLimitSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TableVerticalLimitSettingsOutput).ToTableVerticalLimitSettingsPtrOutputWithContext(ctx)
}

// TableVerticalLimitSettingsPtrInput is an input type that accepts TableVerticalLimitSettingsArgs, TableVerticalLimitSettingsPtr and TableVerticalLimitSettingsPtrOutput values.
// You can construct a concrete instance of `TableVerticalLimitSettingsPtrInput` via:
//
//	        TableVerticalLimitSettingsArgs{...}
//
//	or:
//
//	        nil
type TableVerticalLimitSettingsPtrInput interface {
	pulumi.Input

	ToTableVerticalLimitSettingsPtrOutput() TableVerticalLimitSettingsPtrOutput
	ToTableVerticalLimitSettingsPtrOutputWithContext(context.Context) TableVerticalLimitSettingsPtrOutput
}

type tableVerticalLimitSettingsPtrType TableVerticalLimitSettingsArgs

func TableVerticalLimitSettingsPtr(v *TableVerticalLimitSettingsArgs) TableVerticalLimitSettingsPtrInput {
	return (*tableVerticalLimitSettingsPtrType)(v)
}

func (*tableVerticalLimitSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TableVerticalLimitSettings)(nil)).Elem()
}

func (i *tableVerticalLimitSettingsPtrType) ToTableVerticalLimitSettingsPtrOutput() TableVerticalLimitSettingsPtrOutput {
	return i.ToTableVerticalLimitSettingsPtrOutputWithContext(context.Background())
}

func (i *tableVerticalLimitSettingsPtrType) ToTableVerticalLimitSettingsPtrOutputWithContext(ctx context.Context) TableVerticalLimitSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TableVerticalLimitSettingsPtrOutput)
}

// Job execution constraints.
type TableVerticalLimitSettingsOutput struct{ *pulumi.OutputState }

func (TableVerticalLimitSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TableVerticalLimitSettings)(nil)).Elem()
}

func (o TableVerticalLimitSettingsOutput) ToTableVerticalLimitSettingsOutput() TableVerticalLimitSettingsOutput {
	return o
}

func (o TableVerticalLimitSettingsOutput) ToTableVerticalLimitSettingsOutputWithContext(ctx context.Context) TableVerticalLimitSettingsOutput {
	return o
}

func (o TableVerticalLimitSettingsOutput) ToTableVerticalLimitSettingsPtrOutput() TableVerticalLimitSettingsPtrOutput {
	return o.ToTableVerticalLimitSettingsPtrOutputWithContext(context.Background())
}

func (o TableVerticalLimitSettingsOutput) ToTableVerticalLimitSettingsPtrOutputWithContext(ctx context.Context) TableVerticalLimitSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TableVerticalLimitSettings) *TableVerticalLimitSettings {
		return &v
	}).(TableVerticalLimitSettingsPtrOutput)
}

// Enable early termination, determines whether or not if AutoMLJob will terminate early if there is no score improvement in last 20 iterations.
func (o TableVerticalLimitSettingsOutput) EnableEarlyTermination() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TableVerticalLimitSettings) *bool { return v.EnableEarlyTermination }).(pulumi.BoolPtrOutput)
}

// Exit score for the AutoML job.
func (o TableVerticalLimitSettingsOutput) ExitScore() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v TableVerticalLimitSettings) *float64 { return v.ExitScore }).(pulumi.Float64PtrOutput)
}

// Maximum Concurrent iterations.
func (o TableVerticalLimitSettingsOutput) MaxConcurrentTrials() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TableVerticalLimitSettings) *int { return v.MaxConcurrentTrials }).(pulumi.IntPtrOutput)
}

// Max cores per iteration.
func (o TableVerticalLimitSettingsOutput) MaxCoresPerTrial() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TableVerticalLimitSettings) *int { return v.MaxCoresPerTrial }).(pulumi.IntPtrOutput)
}

// Number of iterations.
func (o TableVerticalLimitSettingsOutput) MaxTrials() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TableVerticalLimitSettings) *int { return v.MaxTrials }).(pulumi.IntPtrOutput)
}

// AutoML job timeout.
func (o TableVerticalLimitSettingsOutput) Timeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TableVerticalLimitSettings) *string { return v.Timeout }).(pulumi.StringPtrOutput)
}

// Iteration timeout.
func (o TableVerticalLimitSettingsOutput) TrialTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TableVerticalLimitSettings) *string { return v.TrialTimeout }).(pulumi.StringPtrOutput)
}

type TableVerticalLimitSettingsPtrOutput struct{ *pulumi.OutputState }

func (TableVerticalLimitSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TableVerticalLimitSettings)(nil)).Elem()
}

func (o TableVerticalLimitSettingsPtrOutput) ToTableVerticalLimitSettingsPtrOutput() TableVerticalLimitSettingsPtrOutput {
	return o
}

func (o TableVerticalLimitSettingsPtrOutput) ToTableVerticalLimitSettingsPtrOutputWithContext(ctx context.Context) TableVerticalLimitSettingsPtrOutput {
	return o
}

func (o TableVerticalLimitSettingsPtrOutput) Elem() TableVerticalLimitSettingsOutput {
	return o.ApplyT(func(v *TableVerticalLimitSettings) TableVerticalLimitSettings {
		if v != nil {
			return *v
		}
		var ret TableVerticalLimitSettings
		return ret
	}).(TableVerticalLimitSettingsOutput)
}

// Enable early termination, determines whether or not if AutoMLJob will terminate early if there is no score improvement in last 20 iterations.
func (o TableVerticalLimitSettingsPtrOutput) EnableEarlyTermination() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TableVerticalLimitSettings) *bool {
		if v == nil {
			return nil
		}
		return v.EnableEarlyTermination
	}).(pulumi.BoolPtrOutput)
}

// Exit score for the AutoML job.
func (o TableVerticalLimitSettingsPtrOutput) ExitScore() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *TableVerticalLimitSettings) *float64 {
		if v == nil {
			return nil
		}
		return v.ExitScore
	}).(pulumi.Float64PtrOutput)
}

// Maximum Concurrent iterations.
func (o TableVerticalLimitSettingsPtrOutput) MaxConcurrentTrials() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TableVerticalLimitSettings) *int {
		if v == nil {
			return nil
		}
		return v.MaxConcurrentTrials
	}).(pulumi.IntPtrOutput)
}

// Max cores per iteration.
func (o TableVerticalLimitSettingsPtrOutput) MaxCoresPerTrial() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TableVerticalLimitSettings) *int {
		if v == nil {
			return nil
		}
		return v.MaxCoresPerTrial
	}).(pulumi.IntPtrOutput)
}

// Number of iterations.
func (o TableVerticalLimitSettingsPtrOutput) MaxTrials() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TableVerticalLimitSettings) *int {
		if v == nil {
			return nil
		}
		return v.MaxTrials
	}).(pulumi.IntPtrOutput)
}

// AutoML job timeout.
func (o TableVerticalLimitSettingsPtrOutput) Timeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TableVerticalLimitSettings) *string {
		if v == nil {
			return nil
		}
		return v.Timeout
	}).(pulumi.StringPtrOutput)
}

// Iteration timeout.
func (o TableVerticalLimitSettingsPtrOutput) TrialTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TableVerticalLimitSettings) *string {
		if v == nil {
			return nil
		}
		return v.TrialTimeout
	}).(pulumi.StringPtrOutput)
}

// Job execution constraints.
type TableVerticalLimitSettingsResponse struct {
	// Enable early termination, determines whether or not if AutoMLJob will terminate early if there is no score improvement in last 20 iterations.
	EnableEarlyTermination *bool `pulumi:"enableEarlyTermination"`
	// Exit score for the AutoML job.
	ExitScore *float64 `pulumi:"exitScore"`
	// Maximum Concurrent iterations.
	MaxConcurrentTrials *int `pulumi:"maxConcurrentTrials"`
	// Max cores per iteration.
	MaxCoresPerTrial *int `pulumi:"maxCoresPerTrial"`
	// Number of iterations.
	MaxTrials *int `pulumi:"maxTrials"`
	// AutoML job timeout.
	Timeout *string `pulumi:"timeout"`
	// Iteration timeout.
	TrialTimeout *string `pulumi:"trialTimeout"`
}

// Defaults sets the appropriate defaults for TableVerticalLimitSettingsResponse
func (val *TableVerticalLimitSettingsResponse) Defaults() *TableVerticalLimitSettingsResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.EnableEarlyTermination == nil {
		enableEarlyTermination_ := true
		tmp.EnableEarlyTermination = &enableEarlyTermination_
	}
	if tmp.MaxConcurrentTrials == nil {
		maxConcurrentTrials_ := 1
		tmp.MaxConcurrentTrials = &maxConcurrentTrials_
	}
	if tmp.MaxCoresPerTrial == nil {
		maxCoresPerTrial_ := -1
		tmp.MaxCoresPerTrial = &maxCoresPerTrial_
	}
	if tmp.MaxTrials == nil {
		maxTrials_ := 1000
		tmp.MaxTrials = &maxTrials_
	}
	if tmp.Timeout == nil {
		timeout_ := "PT6H"
		tmp.Timeout = &timeout_
	}
	if tmp.TrialTimeout == nil {
		trialTimeout_ := "PT30M"
		tmp.TrialTimeout = &trialTimeout_
	}
	return &tmp
}

// Job execution constraints.
type TableVerticalLimitSettingsResponseOutput struct{ *pulumi.OutputState }

func (TableVerticalLimitSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TableVerticalLimitSettingsResponse)(nil)).Elem()
}

func (o TableVerticalLimitSettingsResponseOutput) ToTableVerticalLimitSettingsResponseOutput() TableVerticalLimitSettingsResponseOutput {
	return o
}

func (o TableVerticalLimitSettingsResponseOutput) ToTableVerticalLimitSettingsResponseOutputWithContext(ctx context.Context) TableVerticalLimitSettingsResponseOutput {
	return o
}

// Enable early termination, determines whether or not if AutoMLJob will terminate early if there is no score improvement in last 20 iterations.
func (o TableVerticalLimitSettingsResponseOutput) EnableEarlyTermination() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TableVerticalLimitSettingsResponse) *bool { return v.EnableEarlyTermination }).(pulumi.BoolPtrOutput)
}

// Exit score for the AutoML job.
func (o TableVerticalLimitSettingsResponseOutput) ExitScore() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v TableVerticalLimitSettingsResponse) *float64 { return v.ExitScore }).(pulumi.Float64PtrOutput)
}

// Maximum Concurrent iterations.
func (o TableVerticalLimitSettingsResponseOutput) MaxConcurrentTrials() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TableVerticalLimitSettingsResponse) *int { return v.MaxConcurrentTrials }).(pulumi.IntPtrOutput)
}

// Max cores per iteration.
func (o TableVerticalLimitSettingsResponseOutput) MaxCoresPerTrial() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TableVerticalLimitSettingsResponse) *int { return v.MaxCoresPerTrial }).(pulumi.IntPtrOutput)
}

// Number of iterations.
func (o TableVerticalLimitSettingsResponseOutput) MaxTrials() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TableVerticalLimitSettingsResponse) *int { return v.MaxTrials }).(pulumi.IntPtrOutput)
}

// AutoML job timeout.
func (o TableVerticalLimitSettingsResponseOutput) Timeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TableVerticalLimitSettingsResponse) *string { return v.Timeout }).(pulumi.StringPtrOutput)
}

// Iteration timeout.
func (o TableVerticalLimitSettingsResponseOutput) TrialTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TableVerticalLimitSettingsResponse) *string { return v.TrialTimeout }).(pulumi.StringPtrOutput)
}

type TableVerticalLimitSettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (TableVerticalLimitSettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TableVerticalLimitSettingsResponse)(nil)).Elem()
}

func (o TableVerticalLimitSettingsResponsePtrOutput) ToTableVerticalLimitSettingsResponsePtrOutput() TableVerticalLimitSettingsResponsePtrOutput {
	return o
}

func (o TableVerticalLimitSettingsResponsePtrOutput) ToTableVerticalLimitSettingsResponsePtrOutputWithContext(ctx context.Context) TableVerticalLimitSettingsResponsePtrOutput {
	return o
}

func (o TableVerticalLimitSettingsResponsePtrOutput) Elem() TableVerticalLimitSettingsResponseOutput {
	return o.ApplyT(func(v *TableVerticalLimitSettingsResponse) TableVerticalLimitSettingsResponse {
		if v != nil {
			return *v
		}
		var ret TableVerticalLimitSettingsResponse
		return ret
	}).(TableVerticalLimitSettingsResponseOutput)
}

// Enable early termination, determines whether or not if AutoMLJob will terminate early if there is no score improvement in last 20 iterations.
func (o TableVerticalLimitSettingsResponsePtrOutput) EnableEarlyTermination() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TableVerticalLimitSettingsResponse) *bool {
		if v == nil {
			return nil
		}
		return v.EnableEarlyTermination
	}).(pulumi.BoolPtrOutput)
}

// Exit score for the AutoML job.
func (o TableVerticalLimitSettingsResponsePtrOutput) ExitScore() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *TableVerticalLimitSettingsResponse) *float64 {
		if v == nil {
			return nil
		}
		return v.ExitScore
	}).(pulumi.Float64PtrOutput)
}

// Maximum Concurrent iterations.
func (o TableVerticalLimitSettingsResponsePtrOutput) MaxConcurrentTrials() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TableVerticalLimitSettingsResponse) *int {
		if v == nil {
			return nil
		}
		return v.MaxConcurrentTrials
	}).(pulumi.IntPtrOutput)
}

// Max cores per iteration.
func (o TableVerticalLimitSettingsResponsePtrOutput) MaxCoresPerTrial() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TableVerticalLimitSettingsResponse) *int {
		if v == nil {
			return nil
		}
		return v.MaxCoresPerTrial
	}).(pulumi.IntPtrOutput)
}

// Number of iterations.
func (o TableVerticalLimitSettingsResponsePtrOutput) MaxTrials() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TableVerticalLimitSettingsResponse) *int {
		if v == nil {
			return nil
		}
		return v.MaxTrials
	}).(pulumi.IntPtrOutput)
}

// AutoML job timeout.
func (o TableVerticalLimitSettingsResponsePtrOutput) Timeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TableVerticalLimitSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.Timeout
	}).(pulumi.StringPtrOutput)
}

// Iteration timeout.
func (o TableVerticalLimitSettingsResponsePtrOutput) TrialTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TableVerticalLimitSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.TrialTimeout
	}).(pulumi.StringPtrOutput)
}

type TargetUtilizationScaleSettings struct {
	// The maximum number of instances that the deployment can scale to. The quota will be reserved for max_instances.
	MaxInstances *int `pulumi:"maxInstances"`
	// The minimum number of instances to always be present.
	MinInstances *int `pulumi:"minInstances"`
	// The polling interval in ISO 8691 format. Only supports duration with precision as low as Seconds.
	PollingInterval *string `pulumi:"pollingInterval"`
	// Expected value is 'TargetUtilization'.
	ScaleType string `pulumi:"scaleType"`
	// Target CPU usage for the autoscaler.
	TargetUtilizationPercentage *int `pulumi:"targetUtilizationPercentage"`
}

// Defaults sets the appropriate defaults for TargetUtilizationScaleSettings
func (val *TargetUtilizationScaleSettings) Defaults() *TargetUtilizationScaleSettings {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.MaxInstances == nil {
		maxInstances_ := 1
		tmp.MaxInstances = &maxInstances_
	}
	if tmp.MinInstances == nil {
		minInstances_ := 1
		tmp.MinInstances = &minInstances_
	}
	if tmp.PollingInterval == nil {
		pollingInterval_ := "PT1S"
		tmp.PollingInterval = &pollingInterval_
	}
	if tmp.TargetUtilizationPercentage == nil {
		targetUtilizationPercentage_ := 70
		tmp.TargetUtilizationPercentage = &targetUtilizationPercentage_
	}
	return &tmp
}

// TargetUtilizationScaleSettingsInput is an input type that accepts TargetUtilizationScaleSettingsArgs and TargetUtilizationScaleSettingsOutput values.
// You can construct a concrete instance of `TargetUtilizationScaleSettingsInput` via:
//
//	TargetUtilizationScaleSettingsArgs{...}
type TargetUtilizationScaleSettingsInput interface {
	pulumi.Input

	ToTargetUtilizationScaleSettingsOutput() TargetUtilizationScaleSettingsOutput
	ToTargetUtilizationScaleSettingsOutputWithContext(context.Context) TargetUtilizationScaleSettingsOutput
}

type TargetUtilizationScaleSettingsArgs struct {
	// The maximum number of instances that the deployment can scale to. The quota will be reserved for max_instances.
	MaxInstances pulumi.IntPtrInput `pulumi:"maxInstances"`
	// The minimum number of instances to always be present.
	MinInstances pulumi.IntPtrInput `pulumi:"minInstances"`
	// The polling interval in ISO 8691 format. Only supports duration with precision as low as Seconds.
	PollingInterval pulumi.StringPtrInput `pulumi:"pollingInterval"`
	// Expected value is 'TargetUtilization'.
	ScaleType pulumi.StringInput `pulumi:"scaleType"`
	// Target CPU usage for the autoscaler.
	TargetUtilizationPercentage pulumi.IntPtrInput `pulumi:"targetUtilizationPercentage"`
}

// Defaults sets the appropriate defaults for TargetUtilizationScaleSettingsArgs
func (val *TargetUtilizationScaleSettingsArgs) Defaults() *TargetUtilizationScaleSettingsArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.MaxInstances == nil {
		tmp.MaxInstances = pulumi.IntPtr(1)
	}
	if tmp.MinInstances == nil {
		tmp.MinInstances = pulumi.IntPtr(1)
	}
	if tmp.PollingInterval == nil {
		tmp.PollingInterval = pulumi.StringPtr("PT1S")
	}
	if tmp.TargetUtilizationPercentage == nil {
		tmp.TargetUtilizationPercentage = pulumi.IntPtr(70)
	}
	return &tmp
}
func (TargetUtilizationScaleSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetUtilizationScaleSettings)(nil)).Elem()
}

func (i TargetUtilizationScaleSettingsArgs) ToTargetUtilizationScaleSettingsOutput() TargetUtilizationScaleSettingsOutput {
	return i.ToTargetUtilizationScaleSettingsOutputWithContext(context.Background())
}

func (i TargetUtilizationScaleSettingsArgs) ToTargetUtilizationScaleSettingsOutputWithContext(ctx context.Context) TargetUtilizationScaleSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetUtilizationScaleSettingsOutput)
}

func (i TargetUtilizationScaleSettingsArgs) ToTargetUtilizationScaleSettingsPtrOutput() TargetUtilizationScaleSettingsPtrOutput {
	return i.ToTargetUtilizationScaleSettingsPtrOutputWithContext(context.Background())
}

func (i TargetUtilizationScaleSettingsArgs) ToTargetUtilizationScaleSettingsPtrOutputWithContext(ctx context.Context) TargetUtilizationScaleSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetUtilizationScaleSettingsOutput).ToTargetUtilizationScaleSettingsPtrOutputWithContext(ctx)
}

// TargetUtilizationScaleSettingsPtrInput is an input type that accepts TargetUtilizationScaleSettingsArgs, TargetUtilizationScaleSettingsPtr and TargetUtilizationScaleSettingsPtrOutput values.
// You can construct a concrete instance of `TargetUtilizationScaleSettingsPtrInput` via:
//
//	        TargetUtilizationScaleSettingsArgs{...}
//
//	or:
//
//	        nil
type TargetUtilizationScaleSettingsPtrInput interface {
	pulumi.Input

	ToTargetUtilizationScaleSettingsPtrOutput() TargetUtilizationScaleSettingsPtrOutput
	ToTargetUtilizationScaleSettingsPtrOutputWithContext(context.Context) TargetUtilizationScaleSettingsPtrOutput
}

type targetUtilizationScaleSettingsPtrType TargetUtilizationScaleSettingsArgs

func TargetUtilizationScaleSettingsPtr(v *TargetUtilizationScaleSettingsArgs) TargetUtilizationScaleSettingsPtrInput {
	return (*targetUtilizationScaleSettingsPtrType)(v)
}

func (*targetUtilizationScaleSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TargetUtilizationScaleSettings)(nil)).Elem()
}

func (i *targetUtilizationScaleSettingsPtrType) ToTargetUtilizationScaleSettingsPtrOutput() TargetUtilizationScaleSettingsPtrOutput {
	return i.ToTargetUtilizationScaleSettingsPtrOutputWithContext(context.Background())
}

func (i *targetUtilizationScaleSettingsPtrType) ToTargetUtilizationScaleSettingsPtrOutputWithContext(ctx context.Context) TargetUtilizationScaleSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetUtilizationScaleSettingsPtrOutput)
}

type TargetUtilizationScaleSettingsOutput struct{ *pulumi.OutputState }

func (TargetUtilizationScaleSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetUtilizationScaleSettings)(nil)).Elem()
}

func (o TargetUtilizationScaleSettingsOutput) ToTargetUtilizationScaleSettingsOutput() TargetUtilizationScaleSettingsOutput {
	return o
}

func (o TargetUtilizationScaleSettingsOutput) ToTargetUtilizationScaleSettingsOutputWithContext(ctx context.Context) TargetUtilizationScaleSettingsOutput {
	return o
}

func (o TargetUtilizationScaleSettingsOutput) ToTargetUtilizationScaleSettingsPtrOutput() TargetUtilizationScaleSettingsPtrOutput {
	return o.ToTargetUtilizationScaleSettingsPtrOutputWithContext(context.Background())
}

func (o TargetUtilizationScaleSettingsOutput) ToTargetUtilizationScaleSettingsPtrOutputWithContext(ctx context.Context) TargetUtilizationScaleSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TargetUtilizationScaleSettings) *TargetUtilizationScaleSettings {
		return &v
	}).(TargetUtilizationScaleSettingsPtrOutput)
}

// The maximum number of instances that the deployment can scale to. The quota will be reserved for max_instances.
func (o TargetUtilizationScaleSettingsOutput) MaxInstances() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TargetUtilizationScaleSettings) *int { return v.MaxInstances }).(pulumi.IntPtrOutput)
}

// The minimum number of instances to always be present.
func (o TargetUtilizationScaleSettingsOutput) MinInstances() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TargetUtilizationScaleSettings) *int { return v.MinInstances }).(pulumi.IntPtrOutput)
}

// The polling interval in ISO 8691 format. Only supports duration with precision as low as Seconds.
func (o TargetUtilizationScaleSettingsOutput) PollingInterval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetUtilizationScaleSettings) *string { return v.PollingInterval }).(pulumi.StringPtrOutput)
}

// Expected value is 'TargetUtilization'.
func (o TargetUtilizationScaleSettingsOutput) ScaleType() pulumi.StringOutput {
	return o.ApplyT(func(v TargetUtilizationScaleSettings) string { return v.ScaleType }).(pulumi.StringOutput)
}

// Target CPU usage for the autoscaler.
func (o TargetUtilizationScaleSettingsOutput) TargetUtilizationPercentage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TargetUtilizationScaleSettings) *int { return v.TargetUtilizationPercentage }).(pulumi.IntPtrOutput)
}

type TargetUtilizationScaleSettingsPtrOutput struct{ *pulumi.OutputState }

func (TargetUtilizationScaleSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TargetUtilizationScaleSettings)(nil)).Elem()
}

func (o TargetUtilizationScaleSettingsPtrOutput) ToTargetUtilizationScaleSettingsPtrOutput() TargetUtilizationScaleSettingsPtrOutput {
	return o
}

func (o TargetUtilizationScaleSettingsPtrOutput) ToTargetUtilizationScaleSettingsPtrOutputWithContext(ctx context.Context) TargetUtilizationScaleSettingsPtrOutput {
	return o
}

func (o TargetUtilizationScaleSettingsPtrOutput) Elem() TargetUtilizationScaleSettingsOutput {
	return o.ApplyT(func(v *TargetUtilizationScaleSettings) TargetUtilizationScaleSettings {
		if v != nil {
			return *v
		}
		var ret TargetUtilizationScaleSettings
		return ret
	}).(TargetUtilizationScaleSettingsOutput)
}

// The maximum number of instances that the deployment can scale to. The quota will be reserved for max_instances.
func (o TargetUtilizationScaleSettingsPtrOutput) MaxInstances() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TargetUtilizationScaleSettings) *int {
		if v == nil {
			return nil
		}
		return v.MaxInstances
	}).(pulumi.IntPtrOutput)
}

// The minimum number of instances to always be present.
func (o TargetUtilizationScaleSettingsPtrOutput) MinInstances() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TargetUtilizationScaleSettings) *int {
		if v == nil {
			return nil
		}
		return v.MinInstances
	}).(pulumi.IntPtrOutput)
}

// The polling interval in ISO 8691 format. Only supports duration with precision as low as Seconds.
func (o TargetUtilizationScaleSettingsPtrOutput) PollingInterval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TargetUtilizationScaleSettings) *string {
		if v == nil {
			return nil
		}
		return v.PollingInterval
	}).(pulumi.StringPtrOutput)
}

// Expected value is 'TargetUtilization'.
func (o TargetUtilizationScaleSettingsPtrOutput) ScaleType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TargetUtilizationScaleSettings) *string {
		if v == nil {
			return nil
		}
		return &v.ScaleType
	}).(pulumi.StringPtrOutput)
}

// Target CPU usage for the autoscaler.
func (o TargetUtilizationScaleSettingsPtrOutput) TargetUtilizationPercentage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TargetUtilizationScaleSettings) *int {
		if v == nil {
			return nil
		}
		return v.TargetUtilizationPercentage
	}).(pulumi.IntPtrOutput)
}

type TargetUtilizationScaleSettingsResponse struct {
	// The maximum number of instances that the deployment can scale to. The quota will be reserved for max_instances.
	MaxInstances *int `pulumi:"maxInstances"`
	// The minimum number of instances to always be present.
	MinInstances *int `pulumi:"minInstances"`
	// The polling interval in ISO 8691 format. Only supports duration with precision as low as Seconds.
	PollingInterval *string `pulumi:"pollingInterval"`
	// Expected value is 'TargetUtilization'.
	ScaleType string `pulumi:"scaleType"`
	// Target CPU usage for the autoscaler.
	TargetUtilizationPercentage *int `pulumi:"targetUtilizationPercentage"`
}

// Defaults sets the appropriate defaults for TargetUtilizationScaleSettingsResponse
func (val *TargetUtilizationScaleSettingsResponse) Defaults() *TargetUtilizationScaleSettingsResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.MaxInstances == nil {
		maxInstances_ := 1
		tmp.MaxInstances = &maxInstances_
	}
	if tmp.MinInstances == nil {
		minInstances_ := 1
		tmp.MinInstances = &minInstances_
	}
	if tmp.PollingInterval == nil {
		pollingInterval_ := "PT1S"
		tmp.PollingInterval = &pollingInterval_
	}
	if tmp.TargetUtilizationPercentage == nil {
		targetUtilizationPercentage_ := 70
		tmp.TargetUtilizationPercentage = &targetUtilizationPercentage_
	}
	return &tmp
}

type TargetUtilizationScaleSettingsResponseOutput struct{ *pulumi.OutputState }

func (TargetUtilizationScaleSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetUtilizationScaleSettingsResponse)(nil)).Elem()
}

func (o TargetUtilizationScaleSettingsResponseOutput) ToTargetUtilizationScaleSettingsResponseOutput() TargetUtilizationScaleSettingsResponseOutput {
	return o
}

func (o TargetUtilizationScaleSettingsResponseOutput) ToTargetUtilizationScaleSettingsResponseOutputWithContext(ctx context.Context) TargetUtilizationScaleSettingsResponseOutput {
	return o
}

// The maximum number of instances that the deployment can scale to. The quota will be reserved for max_instances.
func (o TargetUtilizationScaleSettingsResponseOutput) MaxInstances() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TargetUtilizationScaleSettingsResponse) *int { return v.MaxInstances }).(pulumi.IntPtrOutput)
}

// The minimum number of instances to always be present.
func (o TargetUtilizationScaleSettingsResponseOutput) MinInstances() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TargetUtilizationScaleSettingsResponse) *int { return v.MinInstances }).(pulumi.IntPtrOutput)
}

// The polling interval in ISO 8691 format. Only supports duration with precision as low as Seconds.
func (o TargetUtilizationScaleSettingsResponseOutput) PollingInterval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetUtilizationScaleSettingsResponse) *string { return v.PollingInterval }).(pulumi.StringPtrOutput)
}

// Expected value is 'TargetUtilization'.
func (o TargetUtilizationScaleSettingsResponseOutput) ScaleType() pulumi.StringOutput {
	return o.ApplyT(func(v TargetUtilizationScaleSettingsResponse) string { return v.ScaleType }).(pulumi.StringOutput)
}

// Target CPU usage for the autoscaler.
func (o TargetUtilizationScaleSettingsResponseOutput) TargetUtilizationPercentage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TargetUtilizationScaleSettingsResponse) *int { return v.TargetUtilizationPercentage }).(pulumi.IntPtrOutput)
}

type TargetUtilizationScaleSettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (TargetUtilizationScaleSettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TargetUtilizationScaleSettingsResponse)(nil)).Elem()
}

func (o TargetUtilizationScaleSettingsResponsePtrOutput) ToTargetUtilizationScaleSettingsResponsePtrOutput() TargetUtilizationScaleSettingsResponsePtrOutput {
	return o
}

func (o TargetUtilizationScaleSettingsResponsePtrOutput) ToTargetUtilizationScaleSettingsResponsePtrOutputWithContext(ctx context.Context) TargetUtilizationScaleSettingsResponsePtrOutput {
	return o
}

func (o TargetUtilizationScaleSettingsResponsePtrOutput) Elem() TargetUtilizationScaleSettingsResponseOutput {
	return o.ApplyT(func(v *TargetUtilizationScaleSettingsResponse) TargetUtilizationScaleSettingsResponse {
		if v != nil {
			return *v
		}
		var ret TargetUtilizationScaleSettingsResponse
		return ret
	}).(TargetUtilizationScaleSettingsResponseOutput)
}

// The maximum number of instances that the deployment can scale to. The quota will be reserved for max_instances.
func (o TargetUtilizationScaleSettingsResponsePtrOutput) MaxInstances() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TargetUtilizationScaleSettingsResponse) *int {
		if v == nil {
			return nil
		}
		return v.MaxInstances
	}).(pulumi.IntPtrOutput)
}

// The minimum number of instances to always be present.
func (o TargetUtilizationScaleSettingsResponsePtrOutput) MinInstances() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TargetUtilizationScaleSettingsResponse) *int {
		if v == nil {
			return nil
		}
		return v.MinInstances
	}).(pulumi.IntPtrOutput)
}

// The polling interval in ISO 8691 format. Only supports duration with precision as low as Seconds.
func (o TargetUtilizationScaleSettingsResponsePtrOutput) PollingInterval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TargetUtilizationScaleSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.PollingInterval
	}).(pulumi.StringPtrOutput)
}

// Expected value is 'TargetUtilization'.
func (o TargetUtilizationScaleSettingsResponsePtrOutput) ScaleType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TargetUtilizationScaleSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ScaleType
	}).(pulumi.StringPtrOutput)
}

// Target CPU usage for the autoscaler.
func (o TargetUtilizationScaleSettingsResponsePtrOutput) TargetUtilizationPercentage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TargetUtilizationScaleSettingsResponse) *int {
		if v == nil {
			return nil
		}
		return v.TargetUtilizationPercentage
	}).(pulumi.IntPtrOutput)
}

// TensorFlow distribution configuration.
type TensorFlow struct {
	// Enum to determine the job distribution type.
	// Expected value is 'TensorFlow'.
	DistributionType string `pulumi:"distributionType"`
	// Number of parameter server tasks.
	ParameterServerCount *int `pulumi:"parameterServerCount"`
	// Number of workers. If not specified, will default to the instance count.
	WorkerCount *int `pulumi:"workerCount"`
}

// Defaults sets the appropriate defaults for TensorFlow
func (val *TensorFlow) Defaults() *TensorFlow {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.ParameterServerCount == nil {
		parameterServerCount_ := 0
		tmp.ParameterServerCount = &parameterServerCount_
	}
	return &tmp
}

// TensorFlowInput is an input type that accepts TensorFlowArgs and TensorFlowOutput values.
// You can construct a concrete instance of `TensorFlowInput` via:
//
//	TensorFlowArgs{...}
type TensorFlowInput interface {
	pulumi.Input

	ToTensorFlowOutput() TensorFlowOutput
	ToTensorFlowOutputWithContext(context.Context) TensorFlowOutput
}

// TensorFlow distribution configuration.
type TensorFlowArgs struct {
	// Enum to determine the job distribution type.
	// Expected value is 'TensorFlow'.
	DistributionType pulumi.StringInput `pulumi:"distributionType"`
	// Number of parameter server tasks.
	ParameterServerCount pulumi.IntPtrInput `pulumi:"parameterServerCount"`
	// Number of workers. If not specified, will default to the instance count.
	WorkerCount pulumi.IntPtrInput `pulumi:"workerCount"`
}

// Defaults sets the appropriate defaults for TensorFlowArgs
func (val *TensorFlowArgs) Defaults() *TensorFlowArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.ParameterServerCount == nil {
		tmp.ParameterServerCount = pulumi.IntPtr(0)
	}
	return &tmp
}
func (TensorFlowArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TensorFlow)(nil)).Elem()
}

func (i TensorFlowArgs) ToTensorFlowOutput() TensorFlowOutput {
	return i.ToTensorFlowOutputWithContext(context.Background())
}

func (i TensorFlowArgs) ToTensorFlowOutputWithContext(ctx context.Context) TensorFlowOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TensorFlowOutput)
}

func (i TensorFlowArgs) ToTensorFlowPtrOutput() TensorFlowPtrOutput {
	return i.ToTensorFlowPtrOutputWithContext(context.Background())
}

func (i TensorFlowArgs) ToTensorFlowPtrOutputWithContext(ctx context.Context) TensorFlowPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TensorFlowOutput).ToTensorFlowPtrOutputWithContext(ctx)
}

// TensorFlowPtrInput is an input type that accepts TensorFlowArgs, TensorFlowPtr and TensorFlowPtrOutput values.
// You can construct a concrete instance of `TensorFlowPtrInput` via:
//
//	        TensorFlowArgs{...}
//
//	or:
//
//	        nil
type TensorFlowPtrInput interface {
	pulumi.Input

	ToTensorFlowPtrOutput() TensorFlowPtrOutput
	ToTensorFlowPtrOutputWithContext(context.Context) TensorFlowPtrOutput
}

type tensorFlowPtrType TensorFlowArgs

func TensorFlowPtr(v *TensorFlowArgs) TensorFlowPtrInput {
	return (*tensorFlowPtrType)(v)
}

func (*tensorFlowPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TensorFlow)(nil)).Elem()
}

func (i *tensorFlowPtrType) ToTensorFlowPtrOutput() TensorFlowPtrOutput {
	return i.ToTensorFlowPtrOutputWithContext(context.Background())
}

func (i *tensorFlowPtrType) ToTensorFlowPtrOutputWithContext(ctx context.Context) TensorFlowPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TensorFlowPtrOutput)
}

// TensorFlow distribution configuration.
type TensorFlowOutput struct{ *pulumi.OutputState }

func (TensorFlowOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TensorFlow)(nil)).Elem()
}

func (o TensorFlowOutput) ToTensorFlowOutput() TensorFlowOutput {
	return o
}

func (o TensorFlowOutput) ToTensorFlowOutputWithContext(ctx context.Context) TensorFlowOutput {
	return o
}

func (o TensorFlowOutput) ToTensorFlowPtrOutput() TensorFlowPtrOutput {
	return o.ToTensorFlowPtrOutputWithContext(context.Background())
}

func (o TensorFlowOutput) ToTensorFlowPtrOutputWithContext(ctx context.Context) TensorFlowPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TensorFlow) *TensorFlow {
		return &v
	}).(TensorFlowPtrOutput)
}

// Enum to determine the job distribution type.
// Expected value is 'TensorFlow'.
func (o TensorFlowOutput) DistributionType() pulumi.StringOutput {
	return o.ApplyT(func(v TensorFlow) string { return v.DistributionType }).(pulumi.StringOutput)
}

// Number of parameter server tasks.
func (o TensorFlowOutput) ParameterServerCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TensorFlow) *int { return v.ParameterServerCount }).(pulumi.IntPtrOutput)
}

// Number of workers. If not specified, will default to the instance count.
func (o TensorFlowOutput) WorkerCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TensorFlow) *int { return v.WorkerCount }).(pulumi.IntPtrOutput)
}

type TensorFlowPtrOutput struct{ *pulumi.OutputState }

func (TensorFlowPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TensorFlow)(nil)).Elem()
}

func (o TensorFlowPtrOutput) ToTensorFlowPtrOutput() TensorFlowPtrOutput {
	return o
}

func (o TensorFlowPtrOutput) ToTensorFlowPtrOutputWithContext(ctx context.Context) TensorFlowPtrOutput {
	return o
}

func (o TensorFlowPtrOutput) Elem() TensorFlowOutput {
	return o.ApplyT(func(v *TensorFlow) TensorFlow {
		if v != nil {
			return *v
		}
		var ret TensorFlow
		return ret
	}).(TensorFlowOutput)
}

// Enum to determine the job distribution type.
// Expected value is 'TensorFlow'.
func (o TensorFlowPtrOutput) DistributionType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TensorFlow) *string {
		if v == nil {
			return nil
		}
		return &v.DistributionType
	}).(pulumi.StringPtrOutput)
}

// Number of parameter server tasks.
func (o TensorFlowPtrOutput) ParameterServerCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TensorFlow) *int {
		if v == nil {
			return nil
		}
		return v.ParameterServerCount
	}).(pulumi.IntPtrOutput)
}

// Number of workers. If not specified, will default to the instance count.
func (o TensorFlowPtrOutput) WorkerCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TensorFlow) *int {
		if v == nil {
			return nil
		}
		return v.WorkerCount
	}).(pulumi.IntPtrOutput)
}

// TensorFlow distribution configuration.
type TensorFlowResponse struct {
	// Enum to determine the job distribution type.
	// Expected value is 'TensorFlow'.
	DistributionType string `pulumi:"distributionType"`
	// Number of parameter server tasks.
	ParameterServerCount *int `pulumi:"parameterServerCount"`
	// Number of workers. If not specified, will default to the instance count.
	WorkerCount *int `pulumi:"workerCount"`
}

// Defaults sets the appropriate defaults for TensorFlowResponse
func (val *TensorFlowResponse) Defaults() *TensorFlowResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.ParameterServerCount == nil {
		parameterServerCount_ := 0
		tmp.ParameterServerCount = &parameterServerCount_
	}
	return &tmp
}

// TensorFlow distribution configuration.
type TensorFlowResponseOutput struct{ *pulumi.OutputState }

func (TensorFlowResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TensorFlowResponse)(nil)).Elem()
}

func (o TensorFlowResponseOutput) ToTensorFlowResponseOutput() TensorFlowResponseOutput {
	return o
}

func (o TensorFlowResponseOutput) ToTensorFlowResponseOutputWithContext(ctx context.Context) TensorFlowResponseOutput {
	return o
}

// Enum to determine the job distribution type.
// Expected value is 'TensorFlow'.
func (o TensorFlowResponseOutput) DistributionType() pulumi.StringOutput {
	return o.ApplyT(func(v TensorFlowResponse) string { return v.DistributionType }).(pulumi.StringOutput)
}

// Number of parameter server tasks.
func (o TensorFlowResponseOutput) ParameterServerCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TensorFlowResponse) *int { return v.ParameterServerCount }).(pulumi.IntPtrOutput)
}

// Number of workers. If not specified, will default to the instance count.
func (o TensorFlowResponseOutput) WorkerCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TensorFlowResponse) *int { return v.WorkerCount }).(pulumi.IntPtrOutput)
}

type TensorFlowResponsePtrOutput struct{ *pulumi.OutputState }

func (TensorFlowResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TensorFlowResponse)(nil)).Elem()
}

func (o TensorFlowResponsePtrOutput) ToTensorFlowResponsePtrOutput() TensorFlowResponsePtrOutput {
	return o
}

func (o TensorFlowResponsePtrOutput) ToTensorFlowResponsePtrOutputWithContext(ctx context.Context) TensorFlowResponsePtrOutput {
	return o
}

func (o TensorFlowResponsePtrOutput) Elem() TensorFlowResponseOutput {
	return o.ApplyT(func(v *TensorFlowResponse) TensorFlowResponse {
		if v != nil {
			return *v
		}
		var ret TensorFlowResponse
		return ret
	}).(TensorFlowResponseOutput)
}

// Enum to determine the job distribution type.
// Expected value is 'TensorFlow'.
func (o TensorFlowResponsePtrOutput) DistributionType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TensorFlowResponse) *string {
		if v == nil {
			return nil
		}
		return &v.DistributionType
	}).(pulumi.StringPtrOutput)
}

// Number of parameter server tasks.
func (o TensorFlowResponsePtrOutput) ParameterServerCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TensorFlowResponse) *int {
		if v == nil {
			return nil
		}
		return v.ParameterServerCount
	}).(pulumi.IntPtrOutput)
}

// Number of workers. If not specified, will default to the instance count.
func (o TensorFlowResponsePtrOutput) WorkerCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TensorFlowResponse) *int {
		if v == nil {
			return nil
		}
		return v.WorkerCount
	}).(pulumi.IntPtrOutput)
}

// Text Classification task in AutoML NLP vertical.
// NLP - Natural Language Processing.
type TextClassification struct {
	// Featurization inputs needed for AutoML job.
	FeaturizationSettings *NlpVerticalFeaturizationSettings `pulumi:"featurizationSettings"`
	// Execution constraints for AutoMLJob.
	LimitSettings *NlpVerticalLimitSettings `pulumi:"limitSettings"`
	// Log verbosity for the job.
	LogVerbosity *string `pulumi:"logVerbosity"`
	// Primary metric for Text-Classification task.
	PrimaryMetric *string `pulumi:"primaryMetric"`
	// Target column name: This is prediction values column.
	// Also known as label column name in context of classification tasks.
	TargetColumnName *string `pulumi:"targetColumnName"`
	// AutoMLJob Task type.
	// Expected value is 'TextClassification'.
	TaskType string `pulumi:"taskType"`
	// [Required] Training data input.
	TrainingData MLTableJobInput `pulumi:"trainingData"`
	// Validation data inputs.
	ValidationData *MLTableJobInput `pulumi:"validationData"`
}

// Defaults sets the appropriate defaults for TextClassification
func (val *TextClassification) Defaults() *TextClassification {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.LimitSettings = tmp.LimitSettings.Defaults()

	if tmp.LogVerbosity == nil {
		logVerbosity_ := "Info"
		tmp.LogVerbosity = &logVerbosity_
	}
	if tmp.PrimaryMetric == nil {
		primaryMetric_ := "Accuracy"
		tmp.PrimaryMetric = &primaryMetric_
	}
	tmp.TrainingData = *tmp.TrainingData.Defaults()

	tmp.ValidationData = tmp.ValidationData.Defaults()

	return &tmp
}

// TextClassificationInput is an input type that accepts TextClassificationArgs and TextClassificationOutput values.
// You can construct a concrete instance of `TextClassificationInput` via:
//
//	TextClassificationArgs{...}
type TextClassificationInput interface {
	pulumi.Input

	ToTextClassificationOutput() TextClassificationOutput
	ToTextClassificationOutputWithContext(context.Context) TextClassificationOutput
}

// Text Classification task in AutoML NLP vertical.
// NLP - Natural Language Processing.
type TextClassificationArgs struct {
	// Featurization inputs needed for AutoML job.
	FeaturizationSettings NlpVerticalFeaturizationSettingsPtrInput `pulumi:"featurizationSettings"`
	// Execution constraints for AutoMLJob.
	LimitSettings NlpVerticalLimitSettingsPtrInput `pulumi:"limitSettings"`
	// Log verbosity for the job.
	LogVerbosity pulumi.StringPtrInput `pulumi:"logVerbosity"`
	// Primary metric for Text-Classification task.
	PrimaryMetric pulumi.StringPtrInput `pulumi:"primaryMetric"`
	// Target column name: This is prediction values column.
	// Also known as label column name in context of classification tasks.
	TargetColumnName pulumi.StringPtrInput `pulumi:"targetColumnName"`
	// AutoMLJob Task type.
	// Expected value is 'TextClassification'.
	TaskType pulumi.StringInput `pulumi:"taskType"`
	// [Required] Training data input.
	TrainingData MLTableJobInputInput `pulumi:"trainingData"`
	// Validation data inputs.
	ValidationData MLTableJobInputPtrInput `pulumi:"validationData"`
}

// Defaults sets the appropriate defaults for TextClassificationArgs
func (val *TextClassificationArgs) Defaults() *TextClassificationArgs {
	if val == nil {
		return nil
	}
	tmp := *val

	if tmp.LogVerbosity == nil {
		tmp.LogVerbosity = pulumi.StringPtr("Info")
	}
	if tmp.PrimaryMetric == nil {
		tmp.PrimaryMetric = pulumi.StringPtr("Accuracy")
	}

	return &tmp
}
func (TextClassificationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TextClassification)(nil)).Elem()
}

func (i TextClassificationArgs) ToTextClassificationOutput() TextClassificationOutput {
	return i.ToTextClassificationOutputWithContext(context.Background())
}

func (i TextClassificationArgs) ToTextClassificationOutputWithContext(ctx context.Context) TextClassificationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TextClassificationOutput)
}

// Text Classification task in AutoML NLP vertical.
// NLP - Natural Language Processing.
type TextClassificationOutput struct{ *pulumi.OutputState }

func (TextClassificationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TextClassification)(nil)).Elem()
}

func (o TextClassificationOutput) ToTextClassificationOutput() TextClassificationOutput {
	return o
}

func (o TextClassificationOutput) ToTextClassificationOutputWithContext(ctx context.Context) TextClassificationOutput {
	return o
}

// Featurization inputs needed for AutoML job.
func (o TextClassificationOutput) FeaturizationSettings() NlpVerticalFeaturizationSettingsPtrOutput {
	return o.ApplyT(func(v TextClassification) *NlpVerticalFeaturizationSettings { return v.FeaturizationSettings }).(NlpVerticalFeaturizationSettingsPtrOutput)
}

// Execution constraints for AutoMLJob.
func (o TextClassificationOutput) LimitSettings() NlpVerticalLimitSettingsPtrOutput {
	return o.ApplyT(func(v TextClassification) *NlpVerticalLimitSettings { return v.LimitSettings }).(NlpVerticalLimitSettingsPtrOutput)
}

// Log verbosity for the job.
func (o TextClassificationOutput) LogVerbosity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TextClassification) *string { return v.LogVerbosity }).(pulumi.StringPtrOutput)
}

// Primary metric for Text-Classification task.
func (o TextClassificationOutput) PrimaryMetric() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TextClassification) *string { return v.PrimaryMetric }).(pulumi.StringPtrOutput)
}

// Target column name: This is prediction values column.
// Also known as label column name in context of classification tasks.
func (o TextClassificationOutput) TargetColumnName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TextClassification) *string { return v.TargetColumnName }).(pulumi.StringPtrOutput)
}

// AutoMLJob Task type.
// Expected value is 'TextClassification'.
func (o TextClassificationOutput) TaskType() pulumi.StringOutput {
	return o.ApplyT(func(v TextClassification) string { return v.TaskType }).(pulumi.StringOutput)
}

// [Required] Training data input.
func (o TextClassificationOutput) TrainingData() MLTableJobInputOutput {
	return o.ApplyT(func(v TextClassification) MLTableJobInput { return v.TrainingData }).(MLTableJobInputOutput)
}

// Validation data inputs.
func (o TextClassificationOutput) ValidationData() MLTableJobInputPtrOutput {
	return o.ApplyT(func(v TextClassification) *MLTableJobInput { return v.ValidationData }).(MLTableJobInputPtrOutput)
}

// Text Classification Multilabel task in AutoML NLP vertical.
// NLP - Natural Language Processing.
type TextClassificationMultilabel struct {
	// Featurization inputs needed for AutoML job.
	FeaturizationSettings *NlpVerticalFeaturizationSettings `pulumi:"featurizationSettings"`
	// Execution constraints for AutoMLJob.
	LimitSettings *NlpVerticalLimitSettings `pulumi:"limitSettings"`
	// Log verbosity for the job.
	LogVerbosity *string `pulumi:"logVerbosity"`
	// Target column name: This is prediction values column.
	// Also known as label column name in context of classification tasks.
	TargetColumnName *string `pulumi:"targetColumnName"`
	// AutoMLJob Task type.
	// Expected value is 'TextClassificationMultilabel'.
	TaskType string `pulumi:"taskType"`
	// [Required] Training data input.
	TrainingData MLTableJobInput `pulumi:"trainingData"`
	// Validation data inputs.
	ValidationData *MLTableJobInput `pulumi:"validationData"`
}

// Defaults sets the appropriate defaults for TextClassificationMultilabel
func (val *TextClassificationMultilabel) Defaults() *TextClassificationMultilabel {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.LimitSettings = tmp.LimitSettings.Defaults()

	if tmp.LogVerbosity == nil {
		logVerbosity_ := "Info"
		tmp.LogVerbosity = &logVerbosity_
	}
	tmp.TrainingData = *tmp.TrainingData.Defaults()

	tmp.ValidationData = tmp.ValidationData.Defaults()

	return &tmp
}

// TextClassificationMultilabelInput is an input type that accepts TextClassificationMultilabelArgs and TextClassificationMultilabelOutput values.
// You can construct a concrete instance of `TextClassificationMultilabelInput` via:
//
//	TextClassificationMultilabelArgs{...}
type TextClassificationMultilabelInput interface {
	pulumi.Input

	ToTextClassificationMultilabelOutput() TextClassificationMultilabelOutput
	ToTextClassificationMultilabelOutputWithContext(context.Context) TextClassificationMultilabelOutput
}

// Text Classification Multilabel task in AutoML NLP vertical.
// NLP - Natural Language Processing.
type TextClassificationMultilabelArgs struct {
	// Featurization inputs needed for AutoML job.
	FeaturizationSettings NlpVerticalFeaturizationSettingsPtrInput `pulumi:"featurizationSettings"`
	// Execution constraints for AutoMLJob.
	LimitSettings NlpVerticalLimitSettingsPtrInput `pulumi:"limitSettings"`
	// Log verbosity for the job.
	LogVerbosity pulumi.StringPtrInput `pulumi:"logVerbosity"`
	// Target column name: This is prediction values column.
	// Also known as label column name in context of classification tasks.
	TargetColumnName pulumi.StringPtrInput `pulumi:"targetColumnName"`
	// AutoMLJob Task type.
	// Expected value is 'TextClassificationMultilabel'.
	TaskType pulumi.StringInput `pulumi:"taskType"`
	// [Required] Training data input.
	TrainingData MLTableJobInputInput `pulumi:"trainingData"`
	// Validation data inputs.
	ValidationData MLTableJobInputPtrInput `pulumi:"validationData"`
}

// Defaults sets the appropriate defaults for TextClassificationMultilabelArgs
func (val *TextClassificationMultilabelArgs) Defaults() *TextClassificationMultilabelArgs {
	if val == nil {
		return nil
	}
	tmp := *val

	if tmp.LogVerbosity == nil {
		tmp.LogVerbosity = pulumi.StringPtr("Info")
	}

	return &tmp
}
func (TextClassificationMultilabelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TextClassificationMultilabel)(nil)).Elem()
}

func (i TextClassificationMultilabelArgs) ToTextClassificationMultilabelOutput() TextClassificationMultilabelOutput {
	return i.ToTextClassificationMultilabelOutputWithContext(context.Background())
}

func (i TextClassificationMultilabelArgs) ToTextClassificationMultilabelOutputWithContext(ctx context.Context) TextClassificationMultilabelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TextClassificationMultilabelOutput)
}

// Text Classification Multilabel task in AutoML NLP vertical.
// NLP - Natural Language Processing.
type TextClassificationMultilabelOutput struct{ *pulumi.OutputState }

func (TextClassificationMultilabelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TextClassificationMultilabel)(nil)).Elem()
}

func (o TextClassificationMultilabelOutput) ToTextClassificationMultilabelOutput() TextClassificationMultilabelOutput {
	return o
}

func (o TextClassificationMultilabelOutput) ToTextClassificationMultilabelOutputWithContext(ctx context.Context) TextClassificationMultilabelOutput {
	return o
}

// Featurization inputs needed for AutoML job.
func (o TextClassificationMultilabelOutput) FeaturizationSettings() NlpVerticalFeaturizationSettingsPtrOutput {
	return o.ApplyT(func(v TextClassificationMultilabel) *NlpVerticalFeaturizationSettings { return v.FeaturizationSettings }).(NlpVerticalFeaturizationSettingsPtrOutput)
}

// Execution constraints for AutoMLJob.
func (o TextClassificationMultilabelOutput) LimitSettings() NlpVerticalLimitSettingsPtrOutput {
	return o.ApplyT(func(v TextClassificationMultilabel) *NlpVerticalLimitSettings { return v.LimitSettings }).(NlpVerticalLimitSettingsPtrOutput)
}

// Log verbosity for the job.
func (o TextClassificationMultilabelOutput) LogVerbosity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TextClassificationMultilabel) *string { return v.LogVerbosity }).(pulumi.StringPtrOutput)
}

// Target column name: This is prediction values column.
// Also known as label column name in context of classification tasks.
func (o TextClassificationMultilabelOutput) TargetColumnName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TextClassificationMultilabel) *string { return v.TargetColumnName }).(pulumi.StringPtrOutput)
}

// AutoMLJob Task type.
// Expected value is 'TextClassificationMultilabel'.
func (o TextClassificationMultilabelOutput) TaskType() pulumi.StringOutput {
	return o.ApplyT(func(v TextClassificationMultilabel) string { return v.TaskType }).(pulumi.StringOutput)
}

// [Required] Training data input.
func (o TextClassificationMultilabelOutput) TrainingData() MLTableJobInputOutput {
	return o.ApplyT(func(v TextClassificationMultilabel) MLTableJobInput { return v.TrainingData }).(MLTableJobInputOutput)
}

// Validation data inputs.
func (o TextClassificationMultilabelOutput) ValidationData() MLTableJobInputPtrOutput {
	return o.ApplyT(func(v TextClassificationMultilabel) *MLTableJobInput { return v.ValidationData }).(MLTableJobInputPtrOutput)
}

// Text Classification Multilabel task in AutoML NLP vertical.
// NLP - Natural Language Processing.
type TextClassificationMultilabelResponse struct {
	// Featurization inputs needed for AutoML job.
	FeaturizationSettings *NlpVerticalFeaturizationSettingsResponse `pulumi:"featurizationSettings"`
	// Execution constraints for AutoMLJob.
	LimitSettings *NlpVerticalLimitSettingsResponse `pulumi:"limitSettings"`
	// Log verbosity for the job.
	LogVerbosity *string `pulumi:"logVerbosity"`
	// Primary metric for Text-Classification-Multilabel task.
	// Currently only Accuracy is supported as primary metric, hence user need not set it explicitly.
	PrimaryMetric string `pulumi:"primaryMetric"`
	// Target column name: This is prediction values column.
	// Also known as label column name in context of classification tasks.
	TargetColumnName *string `pulumi:"targetColumnName"`
	// AutoMLJob Task type.
	// Expected value is 'TextClassificationMultilabel'.
	TaskType string `pulumi:"taskType"`
	// [Required] Training data input.
	TrainingData MLTableJobInputResponse `pulumi:"trainingData"`
	// Validation data inputs.
	ValidationData *MLTableJobInputResponse `pulumi:"validationData"`
}

// Defaults sets the appropriate defaults for TextClassificationMultilabelResponse
func (val *TextClassificationMultilabelResponse) Defaults() *TextClassificationMultilabelResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.LimitSettings = tmp.LimitSettings.Defaults()

	if tmp.LogVerbosity == nil {
		logVerbosity_ := "Info"
		tmp.LogVerbosity = &logVerbosity_
	}
	tmp.TrainingData = *tmp.TrainingData.Defaults()

	tmp.ValidationData = tmp.ValidationData.Defaults()

	return &tmp
}

// Text Classification Multilabel task in AutoML NLP vertical.
// NLP - Natural Language Processing.
type TextClassificationMultilabelResponseOutput struct{ *pulumi.OutputState }

func (TextClassificationMultilabelResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TextClassificationMultilabelResponse)(nil)).Elem()
}

func (o TextClassificationMultilabelResponseOutput) ToTextClassificationMultilabelResponseOutput() TextClassificationMultilabelResponseOutput {
	return o
}

func (o TextClassificationMultilabelResponseOutput) ToTextClassificationMultilabelResponseOutputWithContext(ctx context.Context) TextClassificationMultilabelResponseOutput {
	return o
}

// Featurization inputs needed for AutoML job.
func (o TextClassificationMultilabelResponseOutput) FeaturizationSettings() NlpVerticalFeaturizationSettingsResponsePtrOutput {
	return o.ApplyT(func(v TextClassificationMultilabelResponse) *NlpVerticalFeaturizationSettingsResponse {
		return v.FeaturizationSettings
	}).(NlpVerticalFeaturizationSettingsResponsePtrOutput)
}

// Execution constraints for AutoMLJob.
func (o TextClassificationMultilabelResponseOutput) LimitSettings() NlpVerticalLimitSettingsResponsePtrOutput {
	return o.ApplyT(func(v TextClassificationMultilabelResponse) *NlpVerticalLimitSettingsResponse { return v.LimitSettings }).(NlpVerticalLimitSettingsResponsePtrOutput)
}

// Log verbosity for the job.
func (o TextClassificationMultilabelResponseOutput) LogVerbosity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TextClassificationMultilabelResponse) *string { return v.LogVerbosity }).(pulumi.StringPtrOutput)
}

// Primary metric for Text-Classification-Multilabel task.
// Currently only Accuracy is supported as primary metric, hence user need not set it explicitly.
func (o TextClassificationMultilabelResponseOutput) PrimaryMetric() pulumi.StringOutput {
	return o.ApplyT(func(v TextClassificationMultilabelResponse) string { return v.PrimaryMetric }).(pulumi.StringOutput)
}

// Target column name: This is prediction values column.
// Also known as label column name in context of classification tasks.
func (o TextClassificationMultilabelResponseOutput) TargetColumnName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TextClassificationMultilabelResponse) *string { return v.TargetColumnName }).(pulumi.StringPtrOutput)
}

// AutoMLJob Task type.
// Expected value is 'TextClassificationMultilabel'.
func (o TextClassificationMultilabelResponseOutput) TaskType() pulumi.StringOutput {
	return o.ApplyT(func(v TextClassificationMultilabelResponse) string { return v.TaskType }).(pulumi.StringOutput)
}

// [Required] Training data input.
func (o TextClassificationMultilabelResponseOutput) TrainingData() MLTableJobInputResponseOutput {
	return o.ApplyT(func(v TextClassificationMultilabelResponse) MLTableJobInputResponse { return v.TrainingData }).(MLTableJobInputResponseOutput)
}

// Validation data inputs.
func (o TextClassificationMultilabelResponseOutput) ValidationData() MLTableJobInputResponsePtrOutput {
	return o.ApplyT(func(v TextClassificationMultilabelResponse) *MLTableJobInputResponse { return v.ValidationData }).(MLTableJobInputResponsePtrOutput)
}

// Text Classification task in AutoML NLP vertical.
// NLP - Natural Language Processing.
type TextClassificationResponse struct {
	// Featurization inputs needed for AutoML job.
	FeaturizationSettings *NlpVerticalFeaturizationSettingsResponse `pulumi:"featurizationSettings"`
	// Execution constraints for AutoMLJob.
	LimitSettings *NlpVerticalLimitSettingsResponse `pulumi:"limitSettings"`
	// Log verbosity for the job.
	LogVerbosity *string `pulumi:"logVerbosity"`
	// Primary metric for Text-Classification task.
	PrimaryMetric *string `pulumi:"primaryMetric"`
	// Target column name: This is prediction values column.
	// Also known as label column name in context of classification tasks.
	TargetColumnName *string `pulumi:"targetColumnName"`
	// AutoMLJob Task type.
	// Expected value is 'TextClassification'.
	TaskType string `pulumi:"taskType"`
	// [Required] Training data input.
	TrainingData MLTableJobInputResponse `pulumi:"trainingData"`
	// Validation data inputs.
	ValidationData *MLTableJobInputResponse `pulumi:"validationData"`
}

// Defaults sets the appropriate defaults for TextClassificationResponse
func (val *TextClassificationResponse) Defaults() *TextClassificationResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.LimitSettings = tmp.LimitSettings.Defaults()

	if tmp.LogVerbosity == nil {
		logVerbosity_ := "Info"
		tmp.LogVerbosity = &logVerbosity_
	}
	if tmp.PrimaryMetric == nil {
		primaryMetric_ := "Accuracy"
		tmp.PrimaryMetric = &primaryMetric_
	}
	tmp.TrainingData = *tmp.TrainingData.Defaults()

	tmp.ValidationData = tmp.ValidationData.Defaults()

	return &tmp
}

// Text Classification task in AutoML NLP vertical.
// NLP - Natural Language Processing.
type TextClassificationResponseOutput struct{ *pulumi.OutputState }

func (TextClassificationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TextClassificationResponse)(nil)).Elem()
}

func (o TextClassificationResponseOutput) ToTextClassificationResponseOutput() TextClassificationResponseOutput {
	return o
}

func (o TextClassificationResponseOutput) ToTextClassificationResponseOutputWithContext(ctx context.Context) TextClassificationResponseOutput {
	return o
}

// Featurization inputs needed for AutoML job.
func (o TextClassificationResponseOutput) FeaturizationSettings() NlpVerticalFeaturizationSettingsResponsePtrOutput {
	return o.ApplyT(func(v TextClassificationResponse) *NlpVerticalFeaturizationSettingsResponse {
		return v.FeaturizationSettings
	}).(NlpVerticalFeaturizationSettingsResponsePtrOutput)
}

// Execution constraints for AutoMLJob.
func (o TextClassificationResponseOutput) LimitSettings() NlpVerticalLimitSettingsResponsePtrOutput {
	return o.ApplyT(func(v TextClassificationResponse) *NlpVerticalLimitSettingsResponse { return v.LimitSettings }).(NlpVerticalLimitSettingsResponsePtrOutput)
}

// Log verbosity for the job.
func (o TextClassificationResponseOutput) LogVerbosity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TextClassificationResponse) *string { return v.LogVerbosity }).(pulumi.StringPtrOutput)
}

// Primary metric for Text-Classification task.
func (o TextClassificationResponseOutput) PrimaryMetric() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TextClassificationResponse) *string { return v.PrimaryMetric }).(pulumi.StringPtrOutput)
}

// Target column name: This is prediction values column.
// Also known as label column name in context of classification tasks.
func (o TextClassificationResponseOutput) TargetColumnName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TextClassificationResponse) *string { return v.TargetColumnName }).(pulumi.StringPtrOutput)
}

// AutoMLJob Task type.
// Expected value is 'TextClassification'.
func (o TextClassificationResponseOutput) TaskType() pulumi.StringOutput {
	return o.ApplyT(func(v TextClassificationResponse) string { return v.TaskType }).(pulumi.StringOutput)
}

// [Required] Training data input.
func (o TextClassificationResponseOutput) TrainingData() MLTableJobInputResponseOutput {
	return o.ApplyT(func(v TextClassificationResponse) MLTableJobInputResponse { return v.TrainingData }).(MLTableJobInputResponseOutput)
}

// Validation data inputs.
func (o TextClassificationResponseOutput) ValidationData() MLTableJobInputResponsePtrOutput {
	return o.ApplyT(func(v TextClassificationResponse) *MLTableJobInputResponse { return v.ValidationData }).(MLTableJobInputResponsePtrOutput)
}

// Text-NER task in AutoML NLP vertical.
// NER - Named Entity Recognition.
// NLP - Natural Language Processing.
type TextNer struct {
	// Featurization inputs needed for AutoML job.
	FeaturizationSettings *NlpVerticalFeaturizationSettings `pulumi:"featurizationSettings"`
	// Execution constraints for AutoMLJob.
	LimitSettings *NlpVerticalLimitSettings `pulumi:"limitSettings"`
	// Log verbosity for the job.
	LogVerbosity *string `pulumi:"logVerbosity"`
	// Target column name: This is prediction values column.
	// Also known as label column name in context of classification tasks.
	TargetColumnName *string `pulumi:"targetColumnName"`
	// AutoMLJob Task type.
	// Expected value is 'TextNER'.
	TaskType string `pulumi:"taskType"`
	// [Required] Training data input.
	TrainingData MLTableJobInput `pulumi:"trainingData"`
	// Validation data inputs.
	ValidationData *MLTableJobInput `pulumi:"validationData"`
}

// Defaults sets the appropriate defaults for TextNer
func (val *TextNer) Defaults() *TextNer {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.LimitSettings = tmp.LimitSettings.Defaults()

	if tmp.LogVerbosity == nil {
		logVerbosity_ := "Info"
		tmp.LogVerbosity = &logVerbosity_
	}
	tmp.TrainingData = *tmp.TrainingData.Defaults()

	tmp.ValidationData = tmp.ValidationData.Defaults()

	return &tmp
}

// TextNerInput is an input type that accepts TextNerArgs and TextNerOutput values.
// You can construct a concrete instance of `TextNerInput` via:
//
//	TextNerArgs{...}
type TextNerInput interface {
	pulumi.Input

	ToTextNerOutput() TextNerOutput
	ToTextNerOutputWithContext(context.Context) TextNerOutput
}

// Text-NER task in AutoML NLP vertical.
// NER - Named Entity Recognition.
// NLP - Natural Language Processing.
type TextNerArgs struct {
	// Featurization inputs needed for AutoML job.
	FeaturizationSettings NlpVerticalFeaturizationSettingsPtrInput `pulumi:"featurizationSettings"`
	// Execution constraints for AutoMLJob.
	LimitSettings NlpVerticalLimitSettingsPtrInput `pulumi:"limitSettings"`
	// Log verbosity for the job.
	LogVerbosity pulumi.StringPtrInput `pulumi:"logVerbosity"`
	// Target column name: This is prediction values column.
	// Also known as label column name in context of classification tasks.
	TargetColumnName pulumi.StringPtrInput `pulumi:"targetColumnName"`
	// AutoMLJob Task type.
	// Expected value is 'TextNER'.
	TaskType pulumi.StringInput `pulumi:"taskType"`
	// [Required] Training data input.
	TrainingData MLTableJobInputInput `pulumi:"trainingData"`
	// Validation data inputs.
	ValidationData MLTableJobInputPtrInput `pulumi:"validationData"`
}

// Defaults sets the appropriate defaults for TextNerArgs
func (val *TextNerArgs) Defaults() *TextNerArgs {
	if val == nil {
		return nil
	}
	tmp := *val

	if tmp.LogVerbosity == nil {
		tmp.LogVerbosity = pulumi.StringPtr("Info")
	}

	return &tmp
}
func (TextNerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TextNer)(nil)).Elem()
}

func (i TextNerArgs) ToTextNerOutput() TextNerOutput {
	return i.ToTextNerOutputWithContext(context.Background())
}

func (i TextNerArgs) ToTextNerOutputWithContext(ctx context.Context) TextNerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TextNerOutput)
}

// Text-NER task in AutoML NLP vertical.
// NER - Named Entity Recognition.
// NLP - Natural Language Processing.
type TextNerOutput struct{ *pulumi.OutputState }

func (TextNerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TextNer)(nil)).Elem()
}

func (o TextNerOutput) ToTextNerOutput() TextNerOutput {
	return o
}

func (o TextNerOutput) ToTextNerOutputWithContext(ctx context.Context) TextNerOutput {
	return o
}

// Featurization inputs needed for AutoML job.
func (o TextNerOutput) FeaturizationSettings() NlpVerticalFeaturizationSettingsPtrOutput {
	return o.ApplyT(func(v TextNer) *NlpVerticalFeaturizationSettings { return v.FeaturizationSettings }).(NlpVerticalFeaturizationSettingsPtrOutput)
}

// Execution constraints for AutoMLJob.
func (o TextNerOutput) LimitSettings() NlpVerticalLimitSettingsPtrOutput {
	return o.ApplyT(func(v TextNer) *NlpVerticalLimitSettings { return v.LimitSettings }).(NlpVerticalLimitSettingsPtrOutput)
}

// Log verbosity for the job.
func (o TextNerOutput) LogVerbosity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TextNer) *string { return v.LogVerbosity }).(pulumi.StringPtrOutput)
}

// Target column name: This is prediction values column.
// Also known as label column name in context of classification tasks.
func (o TextNerOutput) TargetColumnName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TextNer) *string { return v.TargetColumnName }).(pulumi.StringPtrOutput)
}

// AutoMLJob Task type.
// Expected value is 'TextNER'.
func (o TextNerOutput) TaskType() pulumi.StringOutput {
	return o.ApplyT(func(v TextNer) string { return v.TaskType }).(pulumi.StringOutput)
}

// [Required] Training data input.
func (o TextNerOutput) TrainingData() MLTableJobInputOutput {
	return o.ApplyT(func(v TextNer) MLTableJobInput { return v.TrainingData }).(MLTableJobInputOutput)
}

// Validation data inputs.
func (o TextNerOutput) ValidationData() MLTableJobInputPtrOutput {
	return o.ApplyT(func(v TextNer) *MLTableJobInput { return v.ValidationData }).(MLTableJobInputPtrOutput)
}

// Text-NER task in AutoML NLP vertical.
// NER - Named Entity Recognition.
// NLP - Natural Language Processing.
type TextNerResponse struct {
	// Featurization inputs needed for AutoML job.
	FeaturizationSettings *NlpVerticalFeaturizationSettingsResponse `pulumi:"featurizationSettings"`
	// Execution constraints for AutoMLJob.
	LimitSettings *NlpVerticalLimitSettingsResponse `pulumi:"limitSettings"`
	// Log verbosity for the job.
	LogVerbosity *string `pulumi:"logVerbosity"`
	// Primary metric for Text-NER task.
	// Only 'Accuracy' is supported for Text-NER, so user need not set this explicitly.
	PrimaryMetric string `pulumi:"primaryMetric"`
	// Target column name: This is prediction values column.
	// Also known as label column name in context of classification tasks.
	TargetColumnName *string `pulumi:"targetColumnName"`
	// AutoMLJob Task type.
	// Expected value is 'TextNER'.
	TaskType string `pulumi:"taskType"`
	// [Required] Training data input.
	TrainingData MLTableJobInputResponse `pulumi:"trainingData"`
	// Validation data inputs.
	ValidationData *MLTableJobInputResponse `pulumi:"validationData"`
}

// Defaults sets the appropriate defaults for TextNerResponse
func (val *TextNerResponse) Defaults() *TextNerResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.LimitSettings = tmp.LimitSettings.Defaults()

	if tmp.LogVerbosity == nil {
		logVerbosity_ := "Info"
		tmp.LogVerbosity = &logVerbosity_
	}
	tmp.TrainingData = *tmp.TrainingData.Defaults()

	tmp.ValidationData = tmp.ValidationData.Defaults()

	return &tmp
}

// Text-NER task in AutoML NLP vertical.
// NER - Named Entity Recognition.
// NLP - Natural Language Processing.
type TextNerResponseOutput struct{ *pulumi.OutputState }

func (TextNerResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TextNerResponse)(nil)).Elem()
}

func (o TextNerResponseOutput) ToTextNerResponseOutput() TextNerResponseOutput {
	return o
}

func (o TextNerResponseOutput) ToTextNerResponseOutputWithContext(ctx context.Context) TextNerResponseOutput {
	return o
}

// Featurization inputs needed for AutoML job.
func (o TextNerResponseOutput) FeaturizationSettings() NlpVerticalFeaturizationSettingsResponsePtrOutput {
	return o.ApplyT(func(v TextNerResponse) *NlpVerticalFeaturizationSettingsResponse { return v.FeaturizationSettings }).(NlpVerticalFeaturizationSettingsResponsePtrOutput)
}

// Execution constraints for AutoMLJob.
func (o TextNerResponseOutput) LimitSettings() NlpVerticalLimitSettingsResponsePtrOutput {
	return o.ApplyT(func(v TextNerResponse) *NlpVerticalLimitSettingsResponse { return v.LimitSettings }).(NlpVerticalLimitSettingsResponsePtrOutput)
}

// Log verbosity for the job.
func (o TextNerResponseOutput) LogVerbosity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TextNerResponse) *string { return v.LogVerbosity }).(pulumi.StringPtrOutput)
}

// Primary metric for Text-NER task.
// Only 'Accuracy' is supported for Text-NER, so user need not set this explicitly.
func (o TextNerResponseOutput) PrimaryMetric() pulumi.StringOutput {
	return o.ApplyT(func(v TextNerResponse) string { return v.PrimaryMetric }).(pulumi.StringOutput)
}

// Target column name: This is prediction values column.
// Also known as label column name in context of classification tasks.
func (o TextNerResponseOutput) TargetColumnName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TextNerResponse) *string { return v.TargetColumnName }).(pulumi.StringPtrOutput)
}

// AutoMLJob Task type.
// Expected value is 'TextNER'.
func (o TextNerResponseOutput) TaskType() pulumi.StringOutput {
	return o.ApplyT(func(v TextNerResponse) string { return v.TaskType }).(pulumi.StringOutput)
}

// [Required] Training data input.
func (o TextNerResponseOutput) TrainingData() MLTableJobInputResponseOutput {
	return o.ApplyT(func(v TextNerResponse) MLTableJobInputResponse { return v.TrainingData }).(MLTableJobInputResponseOutput)
}

// Validation data inputs.
func (o TextNerResponseOutput) ValidationData() MLTableJobInputResponsePtrOutput {
	return o.ApplyT(func(v TextNerResponse) *MLTableJobInputResponse { return v.ValidationData }).(MLTableJobInputResponsePtrOutput)
}

// Describes the tmpfs options for the container
type TmpfsOptions struct {
	// Mention the Tmpfs size
	Size *int `pulumi:"size"`
}

// TmpfsOptionsInput is an input type that accepts TmpfsOptionsArgs and TmpfsOptionsOutput values.
// You can construct a concrete instance of `TmpfsOptionsInput` via:
//
//	TmpfsOptionsArgs{...}
type TmpfsOptionsInput interface {
	pulumi.Input

	ToTmpfsOptionsOutput() TmpfsOptionsOutput
	ToTmpfsOptionsOutputWithContext(context.Context) TmpfsOptionsOutput
}

// Describes the tmpfs options for the container
type TmpfsOptionsArgs struct {
	// Mention the Tmpfs size
	Size pulumi.IntPtrInput `pulumi:"size"`
}

func (TmpfsOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TmpfsOptions)(nil)).Elem()
}

func (i TmpfsOptionsArgs) ToTmpfsOptionsOutput() TmpfsOptionsOutput {
	return i.ToTmpfsOptionsOutputWithContext(context.Background())
}

func (i TmpfsOptionsArgs) ToTmpfsOptionsOutputWithContext(ctx context.Context) TmpfsOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TmpfsOptionsOutput)
}

func (i TmpfsOptionsArgs) ToTmpfsOptionsPtrOutput() TmpfsOptionsPtrOutput {
	return i.ToTmpfsOptionsPtrOutputWithContext(context.Background())
}

func (i TmpfsOptionsArgs) ToTmpfsOptionsPtrOutputWithContext(ctx context.Context) TmpfsOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TmpfsOptionsOutput).ToTmpfsOptionsPtrOutputWithContext(ctx)
}

// TmpfsOptionsPtrInput is an input type that accepts TmpfsOptionsArgs, TmpfsOptionsPtr and TmpfsOptionsPtrOutput values.
// You can construct a concrete instance of `TmpfsOptionsPtrInput` via:
//
//	        TmpfsOptionsArgs{...}
//
//	or:
//
//	        nil
type TmpfsOptionsPtrInput interface {
	pulumi.Input

	ToTmpfsOptionsPtrOutput() TmpfsOptionsPtrOutput
	ToTmpfsOptionsPtrOutputWithContext(context.Context) TmpfsOptionsPtrOutput
}

type tmpfsOptionsPtrType TmpfsOptionsArgs

func TmpfsOptionsPtr(v *TmpfsOptionsArgs) TmpfsOptionsPtrInput {
	return (*tmpfsOptionsPtrType)(v)
}

func (*tmpfsOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TmpfsOptions)(nil)).Elem()
}

func (i *tmpfsOptionsPtrType) ToTmpfsOptionsPtrOutput() TmpfsOptionsPtrOutput {
	return i.ToTmpfsOptionsPtrOutputWithContext(context.Background())
}

func (i *tmpfsOptionsPtrType) ToTmpfsOptionsPtrOutputWithContext(ctx context.Context) TmpfsOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TmpfsOptionsPtrOutput)
}

// Describes the tmpfs options for the container
type TmpfsOptionsOutput struct{ *pulumi.OutputState }

func (TmpfsOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TmpfsOptions)(nil)).Elem()
}

func (o TmpfsOptionsOutput) ToTmpfsOptionsOutput() TmpfsOptionsOutput {
	return o
}

func (o TmpfsOptionsOutput) ToTmpfsOptionsOutputWithContext(ctx context.Context) TmpfsOptionsOutput {
	return o
}

func (o TmpfsOptionsOutput) ToTmpfsOptionsPtrOutput() TmpfsOptionsPtrOutput {
	return o.ToTmpfsOptionsPtrOutputWithContext(context.Background())
}

func (o TmpfsOptionsOutput) ToTmpfsOptionsPtrOutputWithContext(ctx context.Context) TmpfsOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TmpfsOptions) *TmpfsOptions {
		return &v
	}).(TmpfsOptionsPtrOutput)
}

// Mention the Tmpfs size
func (o TmpfsOptionsOutput) Size() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TmpfsOptions) *int { return v.Size }).(pulumi.IntPtrOutput)
}

type TmpfsOptionsPtrOutput struct{ *pulumi.OutputState }

func (TmpfsOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TmpfsOptions)(nil)).Elem()
}

func (o TmpfsOptionsPtrOutput) ToTmpfsOptionsPtrOutput() TmpfsOptionsPtrOutput {
	return o
}

func (o TmpfsOptionsPtrOutput) ToTmpfsOptionsPtrOutputWithContext(ctx context.Context) TmpfsOptionsPtrOutput {
	return o
}

func (o TmpfsOptionsPtrOutput) Elem() TmpfsOptionsOutput {
	return o.ApplyT(func(v *TmpfsOptions) TmpfsOptions {
		if v != nil {
			return *v
		}
		var ret TmpfsOptions
		return ret
	}).(TmpfsOptionsOutput)
}

// Mention the Tmpfs size
func (o TmpfsOptionsPtrOutput) Size() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TmpfsOptions) *int {
		if v == nil {
			return nil
		}
		return v.Size
	}).(pulumi.IntPtrOutput)
}

// Describes the tmpfs options for the container
type TmpfsOptionsResponse struct {
	// Mention the Tmpfs size
	Size *int `pulumi:"size"`
}

// Describes the tmpfs options for the container
type TmpfsOptionsResponseOutput struct{ *pulumi.OutputState }

func (TmpfsOptionsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TmpfsOptionsResponse)(nil)).Elem()
}

func (o TmpfsOptionsResponseOutput) ToTmpfsOptionsResponseOutput() TmpfsOptionsResponseOutput {
	return o
}

func (o TmpfsOptionsResponseOutput) ToTmpfsOptionsResponseOutputWithContext(ctx context.Context) TmpfsOptionsResponseOutput {
	return o
}

// Mention the Tmpfs size
func (o TmpfsOptionsResponseOutput) Size() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TmpfsOptionsResponse) *int { return v.Size }).(pulumi.IntPtrOutput)
}

type TmpfsOptionsResponsePtrOutput struct{ *pulumi.OutputState }

func (TmpfsOptionsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TmpfsOptionsResponse)(nil)).Elem()
}

func (o TmpfsOptionsResponsePtrOutput) ToTmpfsOptionsResponsePtrOutput() TmpfsOptionsResponsePtrOutput {
	return o
}

func (o TmpfsOptionsResponsePtrOutput) ToTmpfsOptionsResponsePtrOutputWithContext(ctx context.Context) TmpfsOptionsResponsePtrOutput {
	return o
}

func (o TmpfsOptionsResponsePtrOutput) Elem() TmpfsOptionsResponseOutput {
	return o.ApplyT(func(v *TmpfsOptionsResponse) TmpfsOptionsResponse {
		if v != nil {
			return *v
		}
		var ret TmpfsOptionsResponse
		return ret
	}).(TmpfsOptionsResponseOutput)
}

// Mention the Tmpfs size
func (o TmpfsOptionsResponsePtrOutput) Size() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TmpfsOptionsResponse) *int {
		if v == nil {
			return nil
		}
		return v.Size
	}).(pulumi.IntPtrOutput)
}

type TopNFeaturesByAttribution struct {
	// Expected value is 'TopNByAttribution'.
	FilterType string `pulumi:"filterType"`
	// The number of top features to include.
	Top *int `pulumi:"top"`
}

// Defaults sets the appropriate defaults for TopNFeaturesByAttribution
func (val *TopNFeaturesByAttribution) Defaults() *TopNFeaturesByAttribution {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Top == nil {
		top_ := 10
		tmp.Top = &top_
	}
	return &tmp
}

// TopNFeaturesByAttributionInput is an input type that accepts TopNFeaturesByAttributionArgs and TopNFeaturesByAttributionOutput values.
// You can construct a concrete instance of `TopNFeaturesByAttributionInput` via:
//
//	TopNFeaturesByAttributionArgs{...}
type TopNFeaturesByAttributionInput interface {
	pulumi.Input

	ToTopNFeaturesByAttributionOutput() TopNFeaturesByAttributionOutput
	ToTopNFeaturesByAttributionOutputWithContext(context.Context) TopNFeaturesByAttributionOutput
}

type TopNFeaturesByAttributionArgs struct {
	// Expected value is 'TopNByAttribution'.
	FilterType pulumi.StringInput `pulumi:"filterType"`
	// The number of top features to include.
	Top pulumi.IntPtrInput `pulumi:"top"`
}

// Defaults sets the appropriate defaults for TopNFeaturesByAttributionArgs
func (val *TopNFeaturesByAttributionArgs) Defaults() *TopNFeaturesByAttributionArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Top == nil {
		tmp.Top = pulumi.IntPtr(10)
	}
	return &tmp
}
func (TopNFeaturesByAttributionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TopNFeaturesByAttribution)(nil)).Elem()
}

func (i TopNFeaturesByAttributionArgs) ToTopNFeaturesByAttributionOutput() TopNFeaturesByAttributionOutput {
	return i.ToTopNFeaturesByAttributionOutputWithContext(context.Background())
}

func (i TopNFeaturesByAttributionArgs) ToTopNFeaturesByAttributionOutputWithContext(ctx context.Context) TopNFeaturesByAttributionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopNFeaturesByAttributionOutput)
}

func (i TopNFeaturesByAttributionArgs) ToTopNFeaturesByAttributionPtrOutput() TopNFeaturesByAttributionPtrOutput {
	return i.ToTopNFeaturesByAttributionPtrOutputWithContext(context.Background())
}

func (i TopNFeaturesByAttributionArgs) ToTopNFeaturesByAttributionPtrOutputWithContext(ctx context.Context) TopNFeaturesByAttributionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopNFeaturesByAttributionOutput).ToTopNFeaturesByAttributionPtrOutputWithContext(ctx)
}

// TopNFeaturesByAttributionPtrInput is an input type that accepts TopNFeaturesByAttributionArgs, TopNFeaturesByAttributionPtr and TopNFeaturesByAttributionPtrOutput values.
// You can construct a concrete instance of `TopNFeaturesByAttributionPtrInput` via:
//
//	        TopNFeaturesByAttributionArgs{...}
//
//	or:
//
//	        nil
type TopNFeaturesByAttributionPtrInput interface {
	pulumi.Input

	ToTopNFeaturesByAttributionPtrOutput() TopNFeaturesByAttributionPtrOutput
	ToTopNFeaturesByAttributionPtrOutputWithContext(context.Context) TopNFeaturesByAttributionPtrOutput
}

type topNFeaturesByAttributionPtrType TopNFeaturesByAttributionArgs

func TopNFeaturesByAttributionPtr(v *TopNFeaturesByAttributionArgs) TopNFeaturesByAttributionPtrInput {
	return (*topNFeaturesByAttributionPtrType)(v)
}

func (*topNFeaturesByAttributionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TopNFeaturesByAttribution)(nil)).Elem()
}

func (i *topNFeaturesByAttributionPtrType) ToTopNFeaturesByAttributionPtrOutput() TopNFeaturesByAttributionPtrOutput {
	return i.ToTopNFeaturesByAttributionPtrOutputWithContext(context.Background())
}

func (i *topNFeaturesByAttributionPtrType) ToTopNFeaturesByAttributionPtrOutputWithContext(ctx context.Context) TopNFeaturesByAttributionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopNFeaturesByAttributionPtrOutput)
}

type TopNFeaturesByAttributionOutput struct{ *pulumi.OutputState }

func (TopNFeaturesByAttributionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TopNFeaturesByAttribution)(nil)).Elem()
}

func (o TopNFeaturesByAttributionOutput) ToTopNFeaturesByAttributionOutput() TopNFeaturesByAttributionOutput {
	return o
}

func (o TopNFeaturesByAttributionOutput) ToTopNFeaturesByAttributionOutputWithContext(ctx context.Context) TopNFeaturesByAttributionOutput {
	return o
}

func (o TopNFeaturesByAttributionOutput) ToTopNFeaturesByAttributionPtrOutput() TopNFeaturesByAttributionPtrOutput {
	return o.ToTopNFeaturesByAttributionPtrOutputWithContext(context.Background())
}

func (o TopNFeaturesByAttributionOutput) ToTopNFeaturesByAttributionPtrOutputWithContext(ctx context.Context) TopNFeaturesByAttributionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TopNFeaturesByAttribution) *TopNFeaturesByAttribution {
		return &v
	}).(TopNFeaturesByAttributionPtrOutput)
}

// Expected value is 'TopNByAttribution'.
func (o TopNFeaturesByAttributionOutput) FilterType() pulumi.StringOutput {
	return o.ApplyT(func(v TopNFeaturesByAttribution) string { return v.FilterType }).(pulumi.StringOutput)
}

// The number of top features to include.
func (o TopNFeaturesByAttributionOutput) Top() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TopNFeaturesByAttribution) *int { return v.Top }).(pulumi.IntPtrOutput)
}

type TopNFeaturesByAttributionPtrOutput struct{ *pulumi.OutputState }

func (TopNFeaturesByAttributionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TopNFeaturesByAttribution)(nil)).Elem()
}

func (o TopNFeaturesByAttributionPtrOutput) ToTopNFeaturesByAttributionPtrOutput() TopNFeaturesByAttributionPtrOutput {
	return o
}

func (o TopNFeaturesByAttributionPtrOutput) ToTopNFeaturesByAttributionPtrOutputWithContext(ctx context.Context) TopNFeaturesByAttributionPtrOutput {
	return o
}

func (o TopNFeaturesByAttributionPtrOutput) Elem() TopNFeaturesByAttributionOutput {
	return o.ApplyT(func(v *TopNFeaturesByAttribution) TopNFeaturesByAttribution {
		if v != nil {
			return *v
		}
		var ret TopNFeaturesByAttribution
		return ret
	}).(TopNFeaturesByAttributionOutput)
}

// Expected value is 'TopNByAttribution'.
func (o TopNFeaturesByAttributionPtrOutput) FilterType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopNFeaturesByAttribution) *string {
		if v == nil {
			return nil
		}
		return &v.FilterType
	}).(pulumi.StringPtrOutput)
}

// The number of top features to include.
func (o TopNFeaturesByAttributionPtrOutput) Top() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TopNFeaturesByAttribution) *int {
		if v == nil {
			return nil
		}
		return v.Top
	}).(pulumi.IntPtrOutput)
}

type TopNFeaturesByAttributionResponse struct {
	// Expected value is 'TopNByAttribution'.
	FilterType string `pulumi:"filterType"`
	// The number of top features to include.
	Top *int `pulumi:"top"`
}

// Defaults sets the appropriate defaults for TopNFeaturesByAttributionResponse
func (val *TopNFeaturesByAttributionResponse) Defaults() *TopNFeaturesByAttributionResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Top == nil {
		top_ := 10
		tmp.Top = &top_
	}
	return &tmp
}

type TopNFeaturesByAttributionResponseOutput struct{ *pulumi.OutputState }

func (TopNFeaturesByAttributionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TopNFeaturesByAttributionResponse)(nil)).Elem()
}

func (o TopNFeaturesByAttributionResponseOutput) ToTopNFeaturesByAttributionResponseOutput() TopNFeaturesByAttributionResponseOutput {
	return o
}

func (o TopNFeaturesByAttributionResponseOutput) ToTopNFeaturesByAttributionResponseOutputWithContext(ctx context.Context) TopNFeaturesByAttributionResponseOutput {
	return o
}

// Expected value is 'TopNByAttribution'.
func (o TopNFeaturesByAttributionResponseOutput) FilterType() pulumi.StringOutput {
	return o.ApplyT(func(v TopNFeaturesByAttributionResponse) string { return v.FilterType }).(pulumi.StringOutput)
}

// The number of top features to include.
func (o TopNFeaturesByAttributionResponseOutput) Top() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TopNFeaturesByAttributionResponse) *int { return v.Top }).(pulumi.IntPtrOutput)
}

type TopNFeaturesByAttributionResponsePtrOutput struct{ *pulumi.OutputState }

func (TopNFeaturesByAttributionResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TopNFeaturesByAttributionResponse)(nil)).Elem()
}

func (o TopNFeaturesByAttributionResponsePtrOutput) ToTopNFeaturesByAttributionResponsePtrOutput() TopNFeaturesByAttributionResponsePtrOutput {
	return o
}

func (o TopNFeaturesByAttributionResponsePtrOutput) ToTopNFeaturesByAttributionResponsePtrOutputWithContext(ctx context.Context) TopNFeaturesByAttributionResponsePtrOutput {
	return o
}

func (o TopNFeaturesByAttributionResponsePtrOutput) Elem() TopNFeaturesByAttributionResponseOutput {
	return o.ApplyT(func(v *TopNFeaturesByAttributionResponse) TopNFeaturesByAttributionResponse {
		if v != nil {
			return *v
		}
		var ret TopNFeaturesByAttributionResponse
		return ret
	}).(TopNFeaturesByAttributionResponseOutput)
}

// Expected value is 'TopNByAttribution'.
func (o TopNFeaturesByAttributionResponsePtrOutput) FilterType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopNFeaturesByAttributionResponse) *string {
		if v == nil {
			return nil
		}
		return &v.FilterType
	}).(pulumi.StringPtrOutput)
}

// The number of top features to include.
func (o TopNFeaturesByAttributionResponsePtrOutput) Top() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TopNFeaturesByAttributionResponse) *int {
		if v == nil {
			return nil
		}
		return v.Top
	}).(pulumi.IntPtrOutput)
}

// Trial component definition.
type TrialComponent struct {
	// ARM resource ID of the code asset.
	CodeId *string `pulumi:"codeId"`
	// [Required] The command to execute on startup of the job. eg. "python train.py"
	Command string `pulumi:"command"`
	// Distribution configuration of the job. If set, this should be one of Mpi, Tensorflow, PyTorch, or null.
	Distribution interface{} `pulumi:"distribution"`
	// [Required] The ARM resource ID of the Environment specification for the job.
	EnvironmentId string `pulumi:"environmentId"`
	// Environment variables included in the job.
	EnvironmentVariables map[string]string `pulumi:"environmentVariables"`
	// Compute Resource configuration for the job.
	Resources *JobResourceConfiguration `pulumi:"resources"`
}

// Defaults sets the appropriate defaults for TrialComponent
func (val *TrialComponent) Defaults() *TrialComponent {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.Resources = tmp.Resources.Defaults()

	return &tmp
}

// TrialComponentInput is an input type that accepts TrialComponentArgs and TrialComponentOutput values.
// You can construct a concrete instance of `TrialComponentInput` via:
//
//	TrialComponentArgs{...}
type TrialComponentInput interface {
	pulumi.Input

	ToTrialComponentOutput() TrialComponentOutput
	ToTrialComponentOutputWithContext(context.Context) TrialComponentOutput
}

// Trial component definition.
type TrialComponentArgs struct {
	// ARM resource ID of the code asset.
	CodeId pulumi.StringPtrInput `pulumi:"codeId"`
	// [Required] The command to execute on startup of the job. eg. "python train.py"
	Command pulumi.StringInput `pulumi:"command"`
	// Distribution configuration of the job. If set, this should be one of Mpi, Tensorflow, PyTorch, or null.
	Distribution pulumi.Input `pulumi:"distribution"`
	// [Required] The ARM resource ID of the Environment specification for the job.
	EnvironmentId pulumi.StringInput `pulumi:"environmentId"`
	// Environment variables included in the job.
	EnvironmentVariables pulumi.StringMapInput `pulumi:"environmentVariables"`
	// Compute Resource configuration for the job.
	Resources JobResourceConfigurationPtrInput `pulumi:"resources"`
}

// Defaults sets the appropriate defaults for TrialComponentArgs
func (val *TrialComponentArgs) Defaults() *TrialComponentArgs {
	if val == nil {
		return nil
	}
	tmp := *val

	return &tmp
}
func (TrialComponentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TrialComponent)(nil)).Elem()
}

func (i TrialComponentArgs) ToTrialComponentOutput() TrialComponentOutput {
	return i.ToTrialComponentOutputWithContext(context.Background())
}

func (i TrialComponentArgs) ToTrialComponentOutputWithContext(ctx context.Context) TrialComponentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TrialComponentOutput)
}

// Trial component definition.
type TrialComponentOutput struct{ *pulumi.OutputState }

func (TrialComponentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TrialComponent)(nil)).Elem()
}

func (o TrialComponentOutput) ToTrialComponentOutput() TrialComponentOutput {
	return o
}

func (o TrialComponentOutput) ToTrialComponentOutputWithContext(ctx context.Context) TrialComponentOutput {
	return o
}

// ARM resource ID of the code asset.
func (o TrialComponentOutput) CodeId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TrialComponent) *string { return v.CodeId }).(pulumi.StringPtrOutput)
}

// [Required] The command to execute on startup of the job. eg. "python train.py"
func (o TrialComponentOutput) Command() pulumi.StringOutput {
	return o.ApplyT(func(v TrialComponent) string { return v.Command }).(pulumi.StringOutput)
}

// Distribution configuration of the job. If set, this should be one of Mpi, Tensorflow, PyTorch, or null.
func (o TrialComponentOutput) Distribution() pulumi.AnyOutput {
	return o.ApplyT(func(v TrialComponent) interface{} { return v.Distribution }).(pulumi.AnyOutput)
}

// [Required] The ARM resource ID of the Environment specification for the job.
func (o TrialComponentOutput) EnvironmentId() pulumi.StringOutput {
	return o.ApplyT(func(v TrialComponent) string { return v.EnvironmentId }).(pulumi.StringOutput)
}

// Environment variables included in the job.
func (o TrialComponentOutput) EnvironmentVariables() pulumi.StringMapOutput {
	return o.ApplyT(func(v TrialComponent) map[string]string { return v.EnvironmentVariables }).(pulumi.StringMapOutput)
}

// Compute Resource configuration for the job.
func (o TrialComponentOutput) Resources() JobResourceConfigurationPtrOutput {
	return o.ApplyT(func(v TrialComponent) *JobResourceConfiguration { return v.Resources }).(JobResourceConfigurationPtrOutput)
}

// Trial component definition.
type TrialComponentResponse struct {
	// ARM resource ID of the code asset.
	CodeId *string `pulumi:"codeId"`
	// [Required] The command to execute on startup of the job. eg. "python train.py"
	Command string `pulumi:"command"`
	// Distribution configuration of the job. If set, this should be one of Mpi, Tensorflow, PyTorch, or null.
	Distribution interface{} `pulumi:"distribution"`
	// [Required] The ARM resource ID of the Environment specification for the job.
	EnvironmentId string `pulumi:"environmentId"`
	// Environment variables included in the job.
	EnvironmentVariables map[string]string `pulumi:"environmentVariables"`
	// Compute Resource configuration for the job.
	Resources *JobResourceConfigurationResponse `pulumi:"resources"`
}

// Defaults sets the appropriate defaults for TrialComponentResponse
func (val *TrialComponentResponse) Defaults() *TrialComponentResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.Resources = tmp.Resources.Defaults()

	return &tmp
}

// Trial component definition.
type TrialComponentResponseOutput struct{ *pulumi.OutputState }

func (TrialComponentResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TrialComponentResponse)(nil)).Elem()
}

func (o TrialComponentResponseOutput) ToTrialComponentResponseOutput() TrialComponentResponseOutput {
	return o
}

func (o TrialComponentResponseOutput) ToTrialComponentResponseOutputWithContext(ctx context.Context) TrialComponentResponseOutput {
	return o
}

// ARM resource ID of the code asset.
func (o TrialComponentResponseOutput) CodeId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TrialComponentResponse) *string { return v.CodeId }).(pulumi.StringPtrOutput)
}

// [Required] The command to execute on startup of the job. eg. "python train.py"
func (o TrialComponentResponseOutput) Command() pulumi.StringOutput {
	return o.ApplyT(func(v TrialComponentResponse) string { return v.Command }).(pulumi.StringOutput)
}

// Distribution configuration of the job. If set, this should be one of Mpi, Tensorflow, PyTorch, or null.
func (o TrialComponentResponseOutput) Distribution() pulumi.AnyOutput {
	return o.ApplyT(func(v TrialComponentResponse) interface{} { return v.Distribution }).(pulumi.AnyOutput)
}

// [Required] The ARM resource ID of the Environment specification for the job.
func (o TrialComponentResponseOutput) EnvironmentId() pulumi.StringOutput {
	return o.ApplyT(func(v TrialComponentResponse) string { return v.EnvironmentId }).(pulumi.StringOutput)
}

// Environment variables included in the job.
func (o TrialComponentResponseOutput) EnvironmentVariables() pulumi.StringMapOutput {
	return o.ApplyT(func(v TrialComponentResponse) map[string]string { return v.EnvironmentVariables }).(pulumi.StringMapOutput)
}

// Compute Resource configuration for the job.
func (o TrialComponentResponseOutput) Resources() JobResourceConfigurationResponsePtrOutput {
	return o.ApplyT(func(v TrialComponentResponse) *JobResourceConfigurationResponse { return v.Resources }).(JobResourceConfigurationResponsePtrOutput)
}

type TritonModelJobInput struct {
	// Description for the input.
	Description *string `pulumi:"description"`
	// Enum to determine the Job Input Type.
	// Expected value is 'triton_model'.
	JobInputType string `pulumi:"jobInputType"`
	// Input Asset Delivery Mode.
	Mode *string `pulumi:"mode"`
	// [Required] Input Asset URI.
	Uri string `pulumi:"uri"`
}

// Defaults sets the appropriate defaults for TritonModelJobInput
func (val *TritonModelJobInput) Defaults() *TritonModelJobInput {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Mode == nil {
		mode_ := "ReadOnlyMount"
		tmp.Mode = &mode_
	}
	return &tmp
}

// TritonModelJobInputInput is an input type that accepts TritonModelJobInputArgs and TritonModelJobInputOutput values.
// You can construct a concrete instance of `TritonModelJobInputInput` via:
//
//	TritonModelJobInputArgs{...}
type TritonModelJobInputInput interface {
	pulumi.Input

	ToTritonModelJobInputOutput() TritonModelJobInputOutput
	ToTritonModelJobInputOutputWithContext(context.Context) TritonModelJobInputOutput
}

type TritonModelJobInputArgs struct {
	// Description for the input.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Enum to determine the Job Input Type.
	// Expected value is 'triton_model'.
	JobInputType pulumi.StringInput `pulumi:"jobInputType"`
	// Input Asset Delivery Mode.
	Mode pulumi.StringPtrInput `pulumi:"mode"`
	// [Required] Input Asset URI.
	Uri pulumi.StringInput `pulumi:"uri"`
}

// Defaults sets the appropriate defaults for TritonModelJobInputArgs
func (val *TritonModelJobInputArgs) Defaults() *TritonModelJobInputArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Mode == nil {
		tmp.Mode = pulumi.StringPtr("ReadOnlyMount")
	}
	return &tmp
}
func (TritonModelJobInputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TritonModelJobInput)(nil)).Elem()
}

func (i TritonModelJobInputArgs) ToTritonModelJobInputOutput() TritonModelJobInputOutput {
	return i.ToTritonModelJobInputOutputWithContext(context.Background())
}

func (i TritonModelJobInputArgs) ToTritonModelJobInputOutputWithContext(ctx context.Context) TritonModelJobInputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TritonModelJobInputOutput)
}

type TritonModelJobInputOutput struct{ *pulumi.OutputState }

func (TritonModelJobInputOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TritonModelJobInput)(nil)).Elem()
}

func (o TritonModelJobInputOutput) ToTritonModelJobInputOutput() TritonModelJobInputOutput {
	return o
}

func (o TritonModelJobInputOutput) ToTritonModelJobInputOutputWithContext(ctx context.Context) TritonModelJobInputOutput {
	return o
}

// Description for the input.
func (o TritonModelJobInputOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TritonModelJobInput) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Enum to determine the Job Input Type.
// Expected value is 'triton_model'.
func (o TritonModelJobInputOutput) JobInputType() pulumi.StringOutput {
	return o.ApplyT(func(v TritonModelJobInput) string { return v.JobInputType }).(pulumi.StringOutput)
}

// Input Asset Delivery Mode.
func (o TritonModelJobInputOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TritonModelJobInput) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

// [Required] Input Asset URI.
func (o TritonModelJobInputOutput) Uri() pulumi.StringOutput {
	return o.ApplyT(func(v TritonModelJobInput) string { return v.Uri }).(pulumi.StringOutput)
}

type TritonModelJobInputResponse struct {
	// Description for the input.
	Description *string `pulumi:"description"`
	// Enum to determine the Job Input Type.
	// Expected value is 'triton_model'.
	JobInputType string `pulumi:"jobInputType"`
	// Input Asset Delivery Mode.
	Mode *string `pulumi:"mode"`
	// [Required] Input Asset URI.
	Uri string `pulumi:"uri"`
}

// Defaults sets the appropriate defaults for TritonModelJobInputResponse
func (val *TritonModelJobInputResponse) Defaults() *TritonModelJobInputResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Mode == nil {
		mode_ := "ReadOnlyMount"
		tmp.Mode = &mode_
	}
	return &tmp
}

type TritonModelJobInputResponseOutput struct{ *pulumi.OutputState }

func (TritonModelJobInputResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TritonModelJobInputResponse)(nil)).Elem()
}

func (o TritonModelJobInputResponseOutput) ToTritonModelJobInputResponseOutput() TritonModelJobInputResponseOutput {
	return o
}

func (o TritonModelJobInputResponseOutput) ToTritonModelJobInputResponseOutputWithContext(ctx context.Context) TritonModelJobInputResponseOutput {
	return o
}

// Description for the input.
func (o TritonModelJobInputResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TritonModelJobInputResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Enum to determine the Job Input Type.
// Expected value is 'triton_model'.
func (o TritonModelJobInputResponseOutput) JobInputType() pulumi.StringOutput {
	return o.ApplyT(func(v TritonModelJobInputResponse) string { return v.JobInputType }).(pulumi.StringOutput)
}

// Input Asset Delivery Mode.
func (o TritonModelJobInputResponseOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TritonModelJobInputResponse) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

// [Required] Input Asset URI.
func (o TritonModelJobInputResponseOutput) Uri() pulumi.StringOutput {
	return o.ApplyT(func(v TritonModelJobInputResponse) string { return v.Uri }).(pulumi.StringOutput)
}

type TritonModelJobOutput struct {
	// Description for the output.
	Description *string `pulumi:"description"`
	// Enum to determine the Job Output Type.
	// Expected value is 'triton_model'.
	JobOutputType string `pulumi:"jobOutputType"`
	// Output Asset Delivery Mode.
	Mode *string `pulumi:"mode"`
	// Output Asset URI.
	Uri *string `pulumi:"uri"`
}

// Defaults sets the appropriate defaults for TritonModelJobOutput
func (val *TritonModelJobOutput) Defaults() *TritonModelJobOutput {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Mode == nil {
		mode_ := "ReadWriteMount"
		tmp.Mode = &mode_
	}
	return &tmp
}

// TritonModelJobOutputInput is an input type that accepts TritonModelJobOutputArgs and TritonModelJobOutputOutput values.
// You can construct a concrete instance of `TritonModelJobOutputInput` via:
//
//	TritonModelJobOutputArgs{...}
type TritonModelJobOutputInput interface {
	pulumi.Input

	ToTritonModelJobOutputOutput() TritonModelJobOutputOutput
	ToTritonModelJobOutputOutputWithContext(context.Context) TritonModelJobOutputOutput
}

type TritonModelJobOutputArgs struct {
	// Description for the output.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Enum to determine the Job Output Type.
	// Expected value is 'triton_model'.
	JobOutputType pulumi.StringInput `pulumi:"jobOutputType"`
	// Output Asset Delivery Mode.
	Mode pulumi.StringPtrInput `pulumi:"mode"`
	// Output Asset URI.
	Uri pulumi.StringPtrInput `pulumi:"uri"`
}

// Defaults sets the appropriate defaults for TritonModelJobOutputArgs
func (val *TritonModelJobOutputArgs) Defaults() *TritonModelJobOutputArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Mode == nil {
		tmp.Mode = pulumi.StringPtr("ReadWriteMount")
	}
	return &tmp
}
func (TritonModelJobOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TritonModelJobOutput)(nil)).Elem()
}

func (i TritonModelJobOutputArgs) ToTritonModelJobOutputOutput() TritonModelJobOutputOutput {
	return i.ToTritonModelJobOutputOutputWithContext(context.Background())
}

func (i TritonModelJobOutputArgs) ToTritonModelJobOutputOutputWithContext(ctx context.Context) TritonModelJobOutputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TritonModelJobOutputOutput)
}

type TritonModelJobOutputOutput struct{ *pulumi.OutputState }

func (TritonModelJobOutputOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TritonModelJobOutput)(nil)).Elem()
}

func (o TritonModelJobOutputOutput) ToTritonModelJobOutputOutput() TritonModelJobOutputOutput {
	return o
}

func (o TritonModelJobOutputOutput) ToTritonModelJobOutputOutputWithContext(ctx context.Context) TritonModelJobOutputOutput {
	return o
}

// Description for the output.
func (o TritonModelJobOutputOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TritonModelJobOutput) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Enum to determine the Job Output Type.
// Expected value is 'triton_model'.
func (o TritonModelJobOutputOutput) JobOutputType() pulumi.StringOutput {
	return o.ApplyT(func(v TritonModelJobOutput) string { return v.JobOutputType }).(pulumi.StringOutput)
}

// Output Asset Delivery Mode.
func (o TritonModelJobOutputOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TritonModelJobOutput) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

// Output Asset URI.
func (o TritonModelJobOutputOutput) Uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TritonModelJobOutput) *string { return v.Uri }).(pulumi.StringPtrOutput)
}

type TritonModelJobOutputResponse struct {
	// Description for the output.
	Description *string `pulumi:"description"`
	// Enum to determine the Job Output Type.
	// Expected value is 'triton_model'.
	JobOutputType string `pulumi:"jobOutputType"`
	// Output Asset Delivery Mode.
	Mode *string `pulumi:"mode"`
	// Output Asset URI.
	Uri *string `pulumi:"uri"`
}

// Defaults sets the appropriate defaults for TritonModelJobOutputResponse
func (val *TritonModelJobOutputResponse) Defaults() *TritonModelJobOutputResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Mode == nil {
		mode_ := "ReadWriteMount"
		tmp.Mode = &mode_
	}
	return &tmp
}

type TritonModelJobOutputResponseOutput struct{ *pulumi.OutputState }

func (TritonModelJobOutputResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TritonModelJobOutputResponse)(nil)).Elem()
}

func (o TritonModelJobOutputResponseOutput) ToTritonModelJobOutputResponseOutput() TritonModelJobOutputResponseOutput {
	return o
}

func (o TritonModelJobOutputResponseOutput) ToTritonModelJobOutputResponseOutputWithContext(ctx context.Context) TritonModelJobOutputResponseOutput {
	return o
}

// Description for the output.
func (o TritonModelJobOutputResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TritonModelJobOutputResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Enum to determine the Job Output Type.
// Expected value is 'triton_model'.
func (o TritonModelJobOutputResponseOutput) JobOutputType() pulumi.StringOutput {
	return o.ApplyT(func(v TritonModelJobOutputResponse) string { return v.JobOutputType }).(pulumi.StringOutput)
}

// Output Asset Delivery Mode.
func (o TritonModelJobOutputResponseOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TritonModelJobOutputResponse) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

// Output Asset URI.
func (o TritonModelJobOutputResponseOutput) Uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TritonModelJobOutputResponse) *string { return v.Uri }).(pulumi.StringPtrOutput)
}

// Defines an early termination policy that cancels a given percentage of runs at each evaluation interval.
type TruncationSelectionPolicy struct {
	// Number of intervals by which to delay the first evaluation.
	DelayEvaluation *int `pulumi:"delayEvaluation"`
	// Interval (number of runs) between policy evaluations.
	EvaluationInterval *int `pulumi:"evaluationInterval"`
	// Expected value is 'TruncationSelection'.
	PolicyType string `pulumi:"policyType"`
	// The percentage of runs to cancel at each evaluation interval.
	TruncationPercentage *int `pulumi:"truncationPercentage"`
}

// Defaults sets the appropriate defaults for TruncationSelectionPolicy
func (val *TruncationSelectionPolicy) Defaults() *TruncationSelectionPolicy {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.DelayEvaluation == nil {
		delayEvaluation_ := 0
		tmp.DelayEvaluation = &delayEvaluation_
	}
	if tmp.EvaluationInterval == nil {
		evaluationInterval_ := 0
		tmp.EvaluationInterval = &evaluationInterval_
	}
	if tmp.TruncationPercentage == nil {
		truncationPercentage_ := 0
		tmp.TruncationPercentage = &truncationPercentage_
	}
	return &tmp
}

// TruncationSelectionPolicyInput is an input type that accepts TruncationSelectionPolicyArgs and TruncationSelectionPolicyOutput values.
// You can construct a concrete instance of `TruncationSelectionPolicyInput` via:
//
//	TruncationSelectionPolicyArgs{...}
type TruncationSelectionPolicyInput interface {
	pulumi.Input

	ToTruncationSelectionPolicyOutput() TruncationSelectionPolicyOutput
	ToTruncationSelectionPolicyOutputWithContext(context.Context) TruncationSelectionPolicyOutput
}

// Defines an early termination policy that cancels a given percentage of runs at each evaluation interval.
type TruncationSelectionPolicyArgs struct {
	// Number of intervals by which to delay the first evaluation.
	DelayEvaluation pulumi.IntPtrInput `pulumi:"delayEvaluation"`
	// Interval (number of runs) between policy evaluations.
	EvaluationInterval pulumi.IntPtrInput `pulumi:"evaluationInterval"`
	// Expected value is 'TruncationSelection'.
	PolicyType pulumi.StringInput `pulumi:"policyType"`
	// The percentage of runs to cancel at each evaluation interval.
	TruncationPercentage pulumi.IntPtrInput `pulumi:"truncationPercentage"`
}

// Defaults sets the appropriate defaults for TruncationSelectionPolicyArgs
func (val *TruncationSelectionPolicyArgs) Defaults() *TruncationSelectionPolicyArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.DelayEvaluation == nil {
		tmp.DelayEvaluation = pulumi.IntPtr(0)
	}
	if tmp.EvaluationInterval == nil {
		tmp.EvaluationInterval = pulumi.IntPtr(0)
	}
	if tmp.TruncationPercentage == nil {
		tmp.TruncationPercentage = pulumi.IntPtr(0)
	}
	return &tmp
}
func (TruncationSelectionPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TruncationSelectionPolicy)(nil)).Elem()
}

func (i TruncationSelectionPolicyArgs) ToTruncationSelectionPolicyOutput() TruncationSelectionPolicyOutput {
	return i.ToTruncationSelectionPolicyOutputWithContext(context.Background())
}

func (i TruncationSelectionPolicyArgs) ToTruncationSelectionPolicyOutputWithContext(ctx context.Context) TruncationSelectionPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TruncationSelectionPolicyOutput)
}

func (i TruncationSelectionPolicyArgs) ToTruncationSelectionPolicyPtrOutput() TruncationSelectionPolicyPtrOutput {
	return i.ToTruncationSelectionPolicyPtrOutputWithContext(context.Background())
}

func (i TruncationSelectionPolicyArgs) ToTruncationSelectionPolicyPtrOutputWithContext(ctx context.Context) TruncationSelectionPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TruncationSelectionPolicyOutput).ToTruncationSelectionPolicyPtrOutputWithContext(ctx)
}

// TruncationSelectionPolicyPtrInput is an input type that accepts TruncationSelectionPolicyArgs, TruncationSelectionPolicyPtr and TruncationSelectionPolicyPtrOutput values.
// You can construct a concrete instance of `TruncationSelectionPolicyPtrInput` via:
//
//	        TruncationSelectionPolicyArgs{...}
//
//	or:
//
//	        nil
type TruncationSelectionPolicyPtrInput interface {
	pulumi.Input

	ToTruncationSelectionPolicyPtrOutput() TruncationSelectionPolicyPtrOutput
	ToTruncationSelectionPolicyPtrOutputWithContext(context.Context) TruncationSelectionPolicyPtrOutput
}

type truncationSelectionPolicyPtrType TruncationSelectionPolicyArgs

func TruncationSelectionPolicyPtr(v *TruncationSelectionPolicyArgs) TruncationSelectionPolicyPtrInput {
	return (*truncationSelectionPolicyPtrType)(v)
}

func (*truncationSelectionPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TruncationSelectionPolicy)(nil)).Elem()
}

func (i *truncationSelectionPolicyPtrType) ToTruncationSelectionPolicyPtrOutput() TruncationSelectionPolicyPtrOutput {
	return i.ToTruncationSelectionPolicyPtrOutputWithContext(context.Background())
}

func (i *truncationSelectionPolicyPtrType) ToTruncationSelectionPolicyPtrOutputWithContext(ctx context.Context) TruncationSelectionPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TruncationSelectionPolicyPtrOutput)
}

// Defines an early termination policy that cancels a given percentage of runs at each evaluation interval.
type TruncationSelectionPolicyOutput struct{ *pulumi.OutputState }

func (TruncationSelectionPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TruncationSelectionPolicy)(nil)).Elem()
}

func (o TruncationSelectionPolicyOutput) ToTruncationSelectionPolicyOutput() TruncationSelectionPolicyOutput {
	return o
}

func (o TruncationSelectionPolicyOutput) ToTruncationSelectionPolicyOutputWithContext(ctx context.Context) TruncationSelectionPolicyOutput {
	return o
}

func (o TruncationSelectionPolicyOutput) ToTruncationSelectionPolicyPtrOutput() TruncationSelectionPolicyPtrOutput {
	return o.ToTruncationSelectionPolicyPtrOutputWithContext(context.Background())
}

func (o TruncationSelectionPolicyOutput) ToTruncationSelectionPolicyPtrOutputWithContext(ctx context.Context) TruncationSelectionPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TruncationSelectionPolicy) *TruncationSelectionPolicy {
		return &v
	}).(TruncationSelectionPolicyPtrOutput)
}

// Number of intervals by which to delay the first evaluation.
func (o TruncationSelectionPolicyOutput) DelayEvaluation() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TruncationSelectionPolicy) *int { return v.DelayEvaluation }).(pulumi.IntPtrOutput)
}

// Interval (number of runs) between policy evaluations.
func (o TruncationSelectionPolicyOutput) EvaluationInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TruncationSelectionPolicy) *int { return v.EvaluationInterval }).(pulumi.IntPtrOutput)
}

// Expected value is 'TruncationSelection'.
func (o TruncationSelectionPolicyOutput) PolicyType() pulumi.StringOutput {
	return o.ApplyT(func(v TruncationSelectionPolicy) string { return v.PolicyType }).(pulumi.StringOutput)
}

// The percentage of runs to cancel at each evaluation interval.
func (o TruncationSelectionPolicyOutput) TruncationPercentage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TruncationSelectionPolicy) *int { return v.TruncationPercentage }).(pulumi.IntPtrOutput)
}

type TruncationSelectionPolicyPtrOutput struct{ *pulumi.OutputState }

func (TruncationSelectionPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TruncationSelectionPolicy)(nil)).Elem()
}

func (o TruncationSelectionPolicyPtrOutput) ToTruncationSelectionPolicyPtrOutput() TruncationSelectionPolicyPtrOutput {
	return o
}

func (o TruncationSelectionPolicyPtrOutput) ToTruncationSelectionPolicyPtrOutputWithContext(ctx context.Context) TruncationSelectionPolicyPtrOutput {
	return o
}

func (o TruncationSelectionPolicyPtrOutput) Elem() TruncationSelectionPolicyOutput {
	return o.ApplyT(func(v *TruncationSelectionPolicy) TruncationSelectionPolicy {
		if v != nil {
			return *v
		}
		var ret TruncationSelectionPolicy
		return ret
	}).(TruncationSelectionPolicyOutput)
}

// Number of intervals by which to delay the first evaluation.
func (o TruncationSelectionPolicyPtrOutput) DelayEvaluation() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TruncationSelectionPolicy) *int {
		if v == nil {
			return nil
		}
		return v.DelayEvaluation
	}).(pulumi.IntPtrOutput)
}

// Interval (number of runs) between policy evaluations.
func (o TruncationSelectionPolicyPtrOutput) EvaluationInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TruncationSelectionPolicy) *int {
		if v == nil {
			return nil
		}
		return v.EvaluationInterval
	}).(pulumi.IntPtrOutput)
}

// Expected value is 'TruncationSelection'.
func (o TruncationSelectionPolicyPtrOutput) PolicyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TruncationSelectionPolicy) *string {
		if v == nil {
			return nil
		}
		return &v.PolicyType
	}).(pulumi.StringPtrOutput)
}

// The percentage of runs to cancel at each evaluation interval.
func (o TruncationSelectionPolicyPtrOutput) TruncationPercentage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TruncationSelectionPolicy) *int {
		if v == nil {
			return nil
		}
		return v.TruncationPercentage
	}).(pulumi.IntPtrOutput)
}

// Defines an early termination policy that cancels a given percentage of runs at each evaluation interval.
type TruncationSelectionPolicyResponse struct {
	// Number of intervals by which to delay the first evaluation.
	DelayEvaluation *int `pulumi:"delayEvaluation"`
	// Interval (number of runs) between policy evaluations.
	EvaluationInterval *int `pulumi:"evaluationInterval"`
	// Expected value is 'TruncationSelection'.
	PolicyType string `pulumi:"policyType"`
	// The percentage of runs to cancel at each evaluation interval.
	TruncationPercentage *int `pulumi:"truncationPercentage"`
}

// Defaults sets the appropriate defaults for TruncationSelectionPolicyResponse
func (val *TruncationSelectionPolicyResponse) Defaults() *TruncationSelectionPolicyResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.DelayEvaluation == nil {
		delayEvaluation_ := 0
		tmp.DelayEvaluation = &delayEvaluation_
	}
	if tmp.EvaluationInterval == nil {
		evaluationInterval_ := 0
		tmp.EvaluationInterval = &evaluationInterval_
	}
	if tmp.TruncationPercentage == nil {
		truncationPercentage_ := 0
		tmp.TruncationPercentage = &truncationPercentage_
	}
	return &tmp
}

// Defines an early termination policy that cancels a given percentage of runs at each evaluation interval.
type TruncationSelectionPolicyResponseOutput struct{ *pulumi.OutputState }

func (TruncationSelectionPolicyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TruncationSelectionPolicyResponse)(nil)).Elem()
}

func (o TruncationSelectionPolicyResponseOutput) ToTruncationSelectionPolicyResponseOutput() TruncationSelectionPolicyResponseOutput {
	return o
}

func (o TruncationSelectionPolicyResponseOutput) ToTruncationSelectionPolicyResponseOutputWithContext(ctx context.Context) TruncationSelectionPolicyResponseOutput {
	return o
}

// Number of intervals by which to delay the first evaluation.
func (o TruncationSelectionPolicyResponseOutput) DelayEvaluation() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TruncationSelectionPolicyResponse) *int { return v.DelayEvaluation }).(pulumi.IntPtrOutput)
}

// Interval (number of runs) between policy evaluations.
func (o TruncationSelectionPolicyResponseOutput) EvaluationInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TruncationSelectionPolicyResponse) *int { return v.EvaluationInterval }).(pulumi.IntPtrOutput)
}

// Expected value is 'TruncationSelection'.
func (o TruncationSelectionPolicyResponseOutput) PolicyType() pulumi.StringOutput {
	return o.ApplyT(func(v TruncationSelectionPolicyResponse) string { return v.PolicyType }).(pulumi.StringOutput)
}

// The percentage of runs to cancel at each evaluation interval.
func (o TruncationSelectionPolicyResponseOutput) TruncationPercentage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TruncationSelectionPolicyResponse) *int { return v.TruncationPercentage }).(pulumi.IntPtrOutput)
}

type TruncationSelectionPolicyResponsePtrOutput struct{ *pulumi.OutputState }

func (TruncationSelectionPolicyResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TruncationSelectionPolicyResponse)(nil)).Elem()
}

func (o TruncationSelectionPolicyResponsePtrOutput) ToTruncationSelectionPolicyResponsePtrOutput() TruncationSelectionPolicyResponsePtrOutput {
	return o
}

func (o TruncationSelectionPolicyResponsePtrOutput) ToTruncationSelectionPolicyResponsePtrOutputWithContext(ctx context.Context) TruncationSelectionPolicyResponsePtrOutput {
	return o
}

func (o TruncationSelectionPolicyResponsePtrOutput) Elem() TruncationSelectionPolicyResponseOutput {
	return o.ApplyT(func(v *TruncationSelectionPolicyResponse) TruncationSelectionPolicyResponse {
		if v != nil {
			return *v
		}
		var ret TruncationSelectionPolicyResponse
		return ret
	}).(TruncationSelectionPolicyResponseOutput)
}

// Number of intervals by which to delay the first evaluation.
func (o TruncationSelectionPolicyResponsePtrOutput) DelayEvaluation() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TruncationSelectionPolicyResponse) *int {
		if v == nil {
			return nil
		}
		return v.DelayEvaluation
	}).(pulumi.IntPtrOutput)
}

// Interval (number of runs) between policy evaluations.
func (o TruncationSelectionPolicyResponsePtrOutput) EvaluationInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TruncationSelectionPolicyResponse) *int {
		if v == nil {
			return nil
		}
		return v.EvaluationInterval
	}).(pulumi.IntPtrOutput)
}

// Expected value is 'TruncationSelection'.
func (o TruncationSelectionPolicyResponsePtrOutput) PolicyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TruncationSelectionPolicyResponse) *string {
		if v == nil {
			return nil
		}
		return &v.PolicyType
	}).(pulumi.StringPtrOutput)
}

// The percentage of runs to cancel at each evaluation interval.
func (o TruncationSelectionPolicyResponsePtrOutput) TruncationPercentage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TruncationSelectionPolicyResponse) *int {
		if v == nil {
			return nil
		}
		return v.TruncationPercentage
	}).(pulumi.IntPtrOutput)
}

// uri-file data version entity
type UriFileDataVersion struct {
	// Enum to determine the type of data.
	// Expected value is 'uri_file'.
	DataType string `pulumi:"dataType"`
	// [Required] Uri of the data. Example: https://go.microsoft.com/fwlink/?linkid=2202330
	DataUri string `pulumi:"dataUri"`
	// The asset description text.
	Description *string `pulumi:"description"`
	// If the name version are system generated (anonymous registration).
	IsAnonymous *bool `pulumi:"isAnonymous"`
	// Is the asset archived?
	IsArchived *bool `pulumi:"isArchived"`
	// The asset property dictionary.
	Properties map[string]string `pulumi:"properties"`
	// Tag dictionary. Tags can be added, removed, and updated.
	Tags map[string]string `pulumi:"tags"`
}

// Defaults sets the appropriate defaults for UriFileDataVersion
func (val *UriFileDataVersion) Defaults() *UriFileDataVersion {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.IsAnonymous == nil {
		isAnonymous_ := false
		tmp.IsAnonymous = &isAnonymous_
	}
	if tmp.IsArchived == nil {
		isArchived_ := false
		tmp.IsArchived = &isArchived_
	}
	return &tmp
}

// UriFileDataVersionInput is an input type that accepts UriFileDataVersionArgs and UriFileDataVersionOutput values.
// You can construct a concrete instance of `UriFileDataVersionInput` via:
//
//	UriFileDataVersionArgs{...}
type UriFileDataVersionInput interface {
	pulumi.Input

	ToUriFileDataVersionOutput() UriFileDataVersionOutput
	ToUriFileDataVersionOutputWithContext(context.Context) UriFileDataVersionOutput
}

// uri-file data version entity
type UriFileDataVersionArgs struct {
	// Enum to determine the type of data.
	// Expected value is 'uri_file'.
	DataType pulumi.StringInput `pulumi:"dataType"`
	// [Required] Uri of the data. Example: https://go.microsoft.com/fwlink/?linkid=2202330
	DataUri pulumi.StringInput `pulumi:"dataUri"`
	// The asset description text.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// If the name version are system generated (anonymous registration).
	IsAnonymous pulumi.BoolPtrInput `pulumi:"isAnonymous"`
	// Is the asset archived?
	IsArchived pulumi.BoolPtrInput `pulumi:"isArchived"`
	// The asset property dictionary.
	Properties pulumi.StringMapInput `pulumi:"properties"`
	// Tag dictionary. Tags can be added, removed, and updated.
	Tags pulumi.StringMapInput `pulumi:"tags"`
}

// Defaults sets the appropriate defaults for UriFileDataVersionArgs
func (val *UriFileDataVersionArgs) Defaults() *UriFileDataVersionArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.IsAnonymous == nil {
		tmp.IsAnonymous = pulumi.BoolPtr(false)
	}
	if tmp.IsArchived == nil {
		tmp.IsArchived = pulumi.BoolPtr(false)
	}
	return &tmp
}
func (UriFileDataVersionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UriFileDataVersion)(nil)).Elem()
}

func (i UriFileDataVersionArgs) ToUriFileDataVersionOutput() UriFileDataVersionOutput {
	return i.ToUriFileDataVersionOutputWithContext(context.Background())
}

func (i UriFileDataVersionArgs) ToUriFileDataVersionOutputWithContext(ctx context.Context) UriFileDataVersionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UriFileDataVersionOutput)
}

// uri-file data version entity
type UriFileDataVersionOutput struct{ *pulumi.OutputState }

func (UriFileDataVersionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UriFileDataVersion)(nil)).Elem()
}

func (o UriFileDataVersionOutput) ToUriFileDataVersionOutput() UriFileDataVersionOutput {
	return o
}

func (o UriFileDataVersionOutput) ToUriFileDataVersionOutputWithContext(ctx context.Context) UriFileDataVersionOutput {
	return o
}

// Enum to determine the type of data.
// Expected value is 'uri_file'.
func (o UriFileDataVersionOutput) DataType() pulumi.StringOutput {
	return o.ApplyT(func(v UriFileDataVersion) string { return v.DataType }).(pulumi.StringOutput)
}

// [Required] Uri of the data. Example: https://go.microsoft.com/fwlink/?linkid=2202330
func (o UriFileDataVersionOutput) DataUri() pulumi.StringOutput {
	return o.ApplyT(func(v UriFileDataVersion) string { return v.DataUri }).(pulumi.StringOutput)
}

// The asset description text.
func (o UriFileDataVersionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UriFileDataVersion) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// If the name version are system generated (anonymous registration).
func (o UriFileDataVersionOutput) IsAnonymous() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v UriFileDataVersion) *bool { return v.IsAnonymous }).(pulumi.BoolPtrOutput)
}

// Is the asset archived?
func (o UriFileDataVersionOutput) IsArchived() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v UriFileDataVersion) *bool { return v.IsArchived }).(pulumi.BoolPtrOutput)
}

// The asset property dictionary.
func (o UriFileDataVersionOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v UriFileDataVersion) map[string]string { return v.Properties }).(pulumi.StringMapOutput)
}

// Tag dictionary. Tags can be added, removed, and updated.
func (o UriFileDataVersionOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v UriFileDataVersion) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// uri-file data version entity
type UriFileDataVersionResponse struct {
	// Enum to determine the type of data.
	// Expected value is 'uri_file'.
	DataType string `pulumi:"dataType"`
	// [Required] Uri of the data. Example: https://go.microsoft.com/fwlink/?linkid=2202330
	DataUri string `pulumi:"dataUri"`
	// The asset description text.
	Description *string `pulumi:"description"`
	// If the name version are system generated (anonymous registration).
	IsAnonymous *bool `pulumi:"isAnonymous"`
	// Is the asset archived?
	IsArchived *bool `pulumi:"isArchived"`
	// The asset property dictionary.
	Properties map[string]string `pulumi:"properties"`
	// Tag dictionary. Tags can be added, removed, and updated.
	Tags map[string]string `pulumi:"tags"`
}

// Defaults sets the appropriate defaults for UriFileDataVersionResponse
func (val *UriFileDataVersionResponse) Defaults() *UriFileDataVersionResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.IsAnonymous == nil {
		isAnonymous_ := false
		tmp.IsAnonymous = &isAnonymous_
	}
	if tmp.IsArchived == nil {
		isArchived_ := false
		tmp.IsArchived = &isArchived_
	}
	return &tmp
}

// uri-file data version entity
type UriFileDataVersionResponseOutput struct{ *pulumi.OutputState }

func (UriFileDataVersionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UriFileDataVersionResponse)(nil)).Elem()
}

func (o UriFileDataVersionResponseOutput) ToUriFileDataVersionResponseOutput() UriFileDataVersionResponseOutput {
	return o
}

func (o UriFileDataVersionResponseOutput) ToUriFileDataVersionResponseOutputWithContext(ctx context.Context) UriFileDataVersionResponseOutput {
	return o
}

// Enum to determine the type of data.
// Expected value is 'uri_file'.
func (o UriFileDataVersionResponseOutput) DataType() pulumi.StringOutput {
	return o.ApplyT(func(v UriFileDataVersionResponse) string { return v.DataType }).(pulumi.StringOutput)
}

// [Required] Uri of the data. Example: https://go.microsoft.com/fwlink/?linkid=2202330
func (o UriFileDataVersionResponseOutput) DataUri() pulumi.StringOutput {
	return o.ApplyT(func(v UriFileDataVersionResponse) string { return v.DataUri }).(pulumi.StringOutput)
}

// The asset description text.
func (o UriFileDataVersionResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UriFileDataVersionResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// If the name version are system generated (anonymous registration).
func (o UriFileDataVersionResponseOutput) IsAnonymous() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v UriFileDataVersionResponse) *bool { return v.IsAnonymous }).(pulumi.BoolPtrOutput)
}

// Is the asset archived?
func (o UriFileDataVersionResponseOutput) IsArchived() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v UriFileDataVersionResponse) *bool { return v.IsArchived }).(pulumi.BoolPtrOutput)
}

// The asset property dictionary.
func (o UriFileDataVersionResponseOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v UriFileDataVersionResponse) map[string]string { return v.Properties }).(pulumi.StringMapOutput)
}

// Tag dictionary. Tags can be added, removed, and updated.
func (o UriFileDataVersionResponseOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v UriFileDataVersionResponse) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

type UriFileJobInput struct {
	// Description for the input.
	Description *string `pulumi:"description"`
	// Enum to determine the Job Input Type.
	// Expected value is 'uri_file'.
	JobInputType string `pulumi:"jobInputType"`
	// Input Asset Delivery Mode.
	Mode *string `pulumi:"mode"`
	// [Required] Input Asset URI.
	Uri string `pulumi:"uri"`
}

// Defaults sets the appropriate defaults for UriFileJobInput
func (val *UriFileJobInput) Defaults() *UriFileJobInput {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Mode == nil {
		mode_ := "ReadOnlyMount"
		tmp.Mode = &mode_
	}
	return &tmp
}

// UriFileJobInputInput is an input type that accepts UriFileJobInputArgs and UriFileJobInputOutput values.
// You can construct a concrete instance of `UriFileJobInputInput` via:
//
//	UriFileJobInputArgs{...}
type UriFileJobInputInput interface {
	pulumi.Input

	ToUriFileJobInputOutput() UriFileJobInputOutput
	ToUriFileJobInputOutputWithContext(context.Context) UriFileJobInputOutput
}

type UriFileJobInputArgs struct {
	// Description for the input.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Enum to determine the Job Input Type.
	// Expected value is 'uri_file'.
	JobInputType pulumi.StringInput `pulumi:"jobInputType"`
	// Input Asset Delivery Mode.
	Mode pulumi.StringPtrInput `pulumi:"mode"`
	// [Required] Input Asset URI.
	Uri pulumi.StringInput `pulumi:"uri"`
}

// Defaults sets the appropriate defaults for UriFileJobInputArgs
func (val *UriFileJobInputArgs) Defaults() *UriFileJobInputArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Mode == nil {
		tmp.Mode = pulumi.StringPtr("ReadOnlyMount")
	}
	return &tmp
}
func (UriFileJobInputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UriFileJobInput)(nil)).Elem()
}

func (i UriFileJobInputArgs) ToUriFileJobInputOutput() UriFileJobInputOutput {
	return i.ToUriFileJobInputOutputWithContext(context.Background())
}

func (i UriFileJobInputArgs) ToUriFileJobInputOutputWithContext(ctx context.Context) UriFileJobInputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UriFileJobInputOutput)
}

type UriFileJobInputOutput struct{ *pulumi.OutputState }

func (UriFileJobInputOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UriFileJobInput)(nil)).Elem()
}

func (o UriFileJobInputOutput) ToUriFileJobInputOutput() UriFileJobInputOutput {
	return o
}

func (o UriFileJobInputOutput) ToUriFileJobInputOutputWithContext(ctx context.Context) UriFileJobInputOutput {
	return o
}

// Description for the input.
func (o UriFileJobInputOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UriFileJobInput) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Enum to determine the Job Input Type.
// Expected value is 'uri_file'.
func (o UriFileJobInputOutput) JobInputType() pulumi.StringOutput {
	return o.ApplyT(func(v UriFileJobInput) string { return v.JobInputType }).(pulumi.StringOutput)
}

// Input Asset Delivery Mode.
func (o UriFileJobInputOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UriFileJobInput) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

// [Required] Input Asset URI.
func (o UriFileJobInputOutput) Uri() pulumi.StringOutput {
	return o.ApplyT(func(v UriFileJobInput) string { return v.Uri }).(pulumi.StringOutput)
}

type UriFileJobInputResponse struct {
	// Description for the input.
	Description *string `pulumi:"description"`
	// Enum to determine the Job Input Type.
	// Expected value is 'uri_file'.
	JobInputType string `pulumi:"jobInputType"`
	// Input Asset Delivery Mode.
	Mode *string `pulumi:"mode"`
	// [Required] Input Asset URI.
	Uri string `pulumi:"uri"`
}

// Defaults sets the appropriate defaults for UriFileJobInputResponse
func (val *UriFileJobInputResponse) Defaults() *UriFileJobInputResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Mode == nil {
		mode_ := "ReadOnlyMount"
		tmp.Mode = &mode_
	}
	return &tmp
}

type UriFileJobInputResponseOutput struct{ *pulumi.OutputState }

func (UriFileJobInputResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UriFileJobInputResponse)(nil)).Elem()
}

func (o UriFileJobInputResponseOutput) ToUriFileJobInputResponseOutput() UriFileJobInputResponseOutput {
	return o
}

func (o UriFileJobInputResponseOutput) ToUriFileJobInputResponseOutputWithContext(ctx context.Context) UriFileJobInputResponseOutput {
	return o
}

// Description for the input.
func (o UriFileJobInputResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UriFileJobInputResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Enum to determine the Job Input Type.
// Expected value is 'uri_file'.
func (o UriFileJobInputResponseOutput) JobInputType() pulumi.StringOutput {
	return o.ApplyT(func(v UriFileJobInputResponse) string { return v.JobInputType }).(pulumi.StringOutput)
}

// Input Asset Delivery Mode.
func (o UriFileJobInputResponseOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UriFileJobInputResponse) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

// [Required] Input Asset URI.
func (o UriFileJobInputResponseOutput) Uri() pulumi.StringOutput {
	return o.ApplyT(func(v UriFileJobInputResponse) string { return v.Uri }).(pulumi.StringOutput)
}

type UriFileJobOutput struct {
	// Description for the output.
	Description *string `pulumi:"description"`
	// Enum to determine the Job Output Type.
	// Expected value is 'uri_file'.
	JobOutputType string `pulumi:"jobOutputType"`
	// Output Asset Delivery Mode.
	Mode *string `pulumi:"mode"`
	// Output Asset URI.
	Uri *string `pulumi:"uri"`
}

// Defaults sets the appropriate defaults for UriFileJobOutput
func (val *UriFileJobOutput) Defaults() *UriFileJobOutput {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Mode == nil {
		mode_ := "ReadWriteMount"
		tmp.Mode = &mode_
	}
	return &tmp
}

// UriFileJobOutputInput is an input type that accepts UriFileJobOutputArgs and UriFileJobOutputOutput values.
// You can construct a concrete instance of `UriFileJobOutputInput` via:
//
//	UriFileJobOutputArgs{...}
type UriFileJobOutputInput interface {
	pulumi.Input

	ToUriFileJobOutputOutput() UriFileJobOutputOutput
	ToUriFileJobOutputOutputWithContext(context.Context) UriFileJobOutputOutput
}

type UriFileJobOutputArgs struct {
	// Description for the output.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Enum to determine the Job Output Type.
	// Expected value is 'uri_file'.
	JobOutputType pulumi.StringInput `pulumi:"jobOutputType"`
	// Output Asset Delivery Mode.
	Mode pulumi.StringPtrInput `pulumi:"mode"`
	// Output Asset URI.
	Uri pulumi.StringPtrInput `pulumi:"uri"`
}

// Defaults sets the appropriate defaults for UriFileJobOutputArgs
func (val *UriFileJobOutputArgs) Defaults() *UriFileJobOutputArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Mode == nil {
		tmp.Mode = pulumi.StringPtr("ReadWriteMount")
	}
	return &tmp
}
func (UriFileJobOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UriFileJobOutput)(nil)).Elem()
}

func (i UriFileJobOutputArgs) ToUriFileJobOutputOutput() UriFileJobOutputOutput {
	return i.ToUriFileJobOutputOutputWithContext(context.Background())
}

func (i UriFileJobOutputArgs) ToUriFileJobOutputOutputWithContext(ctx context.Context) UriFileJobOutputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UriFileJobOutputOutput)
}

type UriFileJobOutputOutput struct{ *pulumi.OutputState }

func (UriFileJobOutputOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UriFileJobOutput)(nil)).Elem()
}

func (o UriFileJobOutputOutput) ToUriFileJobOutputOutput() UriFileJobOutputOutput {
	return o
}

func (o UriFileJobOutputOutput) ToUriFileJobOutputOutputWithContext(ctx context.Context) UriFileJobOutputOutput {
	return o
}

// Description for the output.
func (o UriFileJobOutputOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UriFileJobOutput) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Enum to determine the Job Output Type.
// Expected value is 'uri_file'.
func (o UriFileJobOutputOutput) JobOutputType() pulumi.StringOutput {
	return o.ApplyT(func(v UriFileJobOutput) string { return v.JobOutputType }).(pulumi.StringOutput)
}

// Output Asset Delivery Mode.
func (o UriFileJobOutputOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UriFileJobOutput) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

// Output Asset URI.
func (o UriFileJobOutputOutput) Uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UriFileJobOutput) *string { return v.Uri }).(pulumi.StringPtrOutput)
}

type UriFileJobOutputResponse struct {
	// Description for the output.
	Description *string `pulumi:"description"`
	// Enum to determine the Job Output Type.
	// Expected value is 'uri_file'.
	JobOutputType string `pulumi:"jobOutputType"`
	// Output Asset Delivery Mode.
	Mode *string `pulumi:"mode"`
	// Output Asset URI.
	Uri *string `pulumi:"uri"`
}

// Defaults sets the appropriate defaults for UriFileJobOutputResponse
func (val *UriFileJobOutputResponse) Defaults() *UriFileJobOutputResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Mode == nil {
		mode_ := "ReadWriteMount"
		tmp.Mode = &mode_
	}
	return &tmp
}

type UriFileJobOutputResponseOutput struct{ *pulumi.OutputState }

func (UriFileJobOutputResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UriFileJobOutputResponse)(nil)).Elem()
}

func (o UriFileJobOutputResponseOutput) ToUriFileJobOutputResponseOutput() UriFileJobOutputResponseOutput {
	return o
}

func (o UriFileJobOutputResponseOutput) ToUriFileJobOutputResponseOutputWithContext(ctx context.Context) UriFileJobOutputResponseOutput {
	return o
}

// Description for the output.
func (o UriFileJobOutputResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UriFileJobOutputResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Enum to determine the Job Output Type.
// Expected value is 'uri_file'.
func (o UriFileJobOutputResponseOutput) JobOutputType() pulumi.StringOutput {
	return o.ApplyT(func(v UriFileJobOutputResponse) string { return v.JobOutputType }).(pulumi.StringOutput)
}

// Output Asset Delivery Mode.
func (o UriFileJobOutputResponseOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UriFileJobOutputResponse) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

// Output Asset URI.
func (o UriFileJobOutputResponseOutput) Uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UriFileJobOutputResponse) *string { return v.Uri }).(pulumi.StringPtrOutput)
}

// uri-folder data version entity
type UriFolderDataVersion struct {
	// Enum to determine the type of data.
	// Expected value is 'uri_folder'.
	DataType string `pulumi:"dataType"`
	// [Required] Uri of the data. Example: https://go.microsoft.com/fwlink/?linkid=2202330
	DataUri string `pulumi:"dataUri"`
	// The asset description text.
	Description *string `pulumi:"description"`
	// If the name version are system generated (anonymous registration).
	IsAnonymous *bool `pulumi:"isAnonymous"`
	// Is the asset archived?
	IsArchived *bool `pulumi:"isArchived"`
	// The asset property dictionary.
	Properties map[string]string `pulumi:"properties"`
	// Tag dictionary. Tags can be added, removed, and updated.
	Tags map[string]string `pulumi:"tags"`
}

// Defaults sets the appropriate defaults for UriFolderDataVersion
func (val *UriFolderDataVersion) Defaults() *UriFolderDataVersion {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.IsAnonymous == nil {
		isAnonymous_ := false
		tmp.IsAnonymous = &isAnonymous_
	}
	if tmp.IsArchived == nil {
		isArchived_ := false
		tmp.IsArchived = &isArchived_
	}
	return &tmp
}

// UriFolderDataVersionInput is an input type that accepts UriFolderDataVersionArgs and UriFolderDataVersionOutput values.
// You can construct a concrete instance of `UriFolderDataVersionInput` via:
//
//	UriFolderDataVersionArgs{...}
type UriFolderDataVersionInput interface {
	pulumi.Input

	ToUriFolderDataVersionOutput() UriFolderDataVersionOutput
	ToUriFolderDataVersionOutputWithContext(context.Context) UriFolderDataVersionOutput
}

// uri-folder data version entity
type UriFolderDataVersionArgs struct {
	// Enum to determine the type of data.
	// Expected value is 'uri_folder'.
	DataType pulumi.StringInput `pulumi:"dataType"`
	// [Required] Uri of the data. Example: https://go.microsoft.com/fwlink/?linkid=2202330
	DataUri pulumi.StringInput `pulumi:"dataUri"`
	// The asset description text.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// If the name version are system generated (anonymous registration).
	IsAnonymous pulumi.BoolPtrInput `pulumi:"isAnonymous"`
	// Is the asset archived?
	IsArchived pulumi.BoolPtrInput `pulumi:"isArchived"`
	// The asset property dictionary.
	Properties pulumi.StringMapInput `pulumi:"properties"`
	// Tag dictionary. Tags can be added, removed, and updated.
	Tags pulumi.StringMapInput `pulumi:"tags"`
}

// Defaults sets the appropriate defaults for UriFolderDataVersionArgs
func (val *UriFolderDataVersionArgs) Defaults() *UriFolderDataVersionArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.IsAnonymous == nil {
		tmp.IsAnonymous = pulumi.BoolPtr(false)
	}
	if tmp.IsArchived == nil {
		tmp.IsArchived = pulumi.BoolPtr(false)
	}
	return &tmp
}
func (UriFolderDataVersionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UriFolderDataVersion)(nil)).Elem()
}

func (i UriFolderDataVersionArgs) ToUriFolderDataVersionOutput() UriFolderDataVersionOutput {
	return i.ToUriFolderDataVersionOutputWithContext(context.Background())
}

func (i UriFolderDataVersionArgs) ToUriFolderDataVersionOutputWithContext(ctx context.Context) UriFolderDataVersionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UriFolderDataVersionOutput)
}

// uri-folder data version entity
type UriFolderDataVersionOutput struct{ *pulumi.OutputState }

func (UriFolderDataVersionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UriFolderDataVersion)(nil)).Elem()
}

func (o UriFolderDataVersionOutput) ToUriFolderDataVersionOutput() UriFolderDataVersionOutput {
	return o
}

func (o UriFolderDataVersionOutput) ToUriFolderDataVersionOutputWithContext(ctx context.Context) UriFolderDataVersionOutput {
	return o
}

// Enum to determine the type of data.
// Expected value is 'uri_folder'.
func (o UriFolderDataVersionOutput) DataType() pulumi.StringOutput {
	return o.ApplyT(func(v UriFolderDataVersion) string { return v.DataType }).(pulumi.StringOutput)
}

// [Required] Uri of the data. Example: https://go.microsoft.com/fwlink/?linkid=2202330
func (o UriFolderDataVersionOutput) DataUri() pulumi.StringOutput {
	return o.ApplyT(func(v UriFolderDataVersion) string { return v.DataUri }).(pulumi.StringOutput)
}

// The asset description text.
func (o UriFolderDataVersionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UriFolderDataVersion) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// If the name version are system generated (anonymous registration).
func (o UriFolderDataVersionOutput) IsAnonymous() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v UriFolderDataVersion) *bool { return v.IsAnonymous }).(pulumi.BoolPtrOutput)
}

// Is the asset archived?
func (o UriFolderDataVersionOutput) IsArchived() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v UriFolderDataVersion) *bool { return v.IsArchived }).(pulumi.BoolPtrOutput)
}

// The asset property dictionary.
func (o UriFolderDataVersionOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v UriFolderDataVersion) map[string]string { return v.Properties }).(pulumi.StringMapOutput)
}

// Tag dictionary. Tags can be added, removed, and updated.
func (o UriFolderDataVersionOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v UriFolderDataVersion) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// uri-folder data version entity
type UriFolderDataVersionResponse struct {
	// Enum to determine the type of data.
	// Expected value is 'uri_folder'.
	DataType string `pulumi:"dataType"`
	// [Required] Uri of the data. Example: https://go.microsoft.com/fwlink/?linkid=2202330
	DataUri string `pulumi:"dataUri"`
	// The asset description text.
	Description *string `pulumi:"description"`
	// If the name version are system generated (anonymous registration).
	IsAnonymous *bool `pulumi:"isAnonymous"`
	// Is the asset archived?
	IsArchived *bool `pulumi:"isArchived"`
	// The asset property dictionary.
	Properties map[string]string `pulumi:"properties"`
	// Tag dictionary. Tags can be added, removed, and updated.
	Tags map[string]string `pulumi:"tags"`
}

// Defaults sets the appropriate defaults for UriFolderDataVersionResponse
func (val *UriFolderDataVersionResponse) Defaults() *UriFolderDataVersionResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.IsAnonymous == nil {
		isAnonymous_ := false
		tmp.IsAnonymous = &isAnonymous_
	}
	if tmp.IsArchived == nil {
		isArchived_ := false
		tmp.IsArchived = &isArchived_
	}
	return &tmp
}

// uri-folder data version entity
type UriFolderDataVersionResponseOutput struct{ *pulumi.OutputState }

func (UriFolderDataVersionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UriFolderDataVersionResponse)(nil)).Elem()
}

func (o UriFolderDataVersionResponseOutput) ToUriFolderDataVersionResponseOutput() UriFolderDataVersionResponseOutput {
	return o
}

func (o UriFolderDataVersionResponseOutput) ToUriFolderDataVersionResponseOutputWithContext(ctx context.Context) UriFolderDataVersionResponseOutput {
	return o
}

// Enum to determine the type of data.
// Expected value is 'uri_folder'.
func (o UriFolderDataVersionResponseOutput) DataType() pulumi.StringOutput {
	return o.ApplyT(func(v UriFolderDataVersionResponse) string { return v.DataType }).(pulumi.StringOutput)
}

// [Required] Uri of the data. Example: https://go.microsoft.com/fwlink/?linkid=2202330
func (o UriFolderDataVersionResponseOutput) DataUri() pulumi.StringOutput {
	return o.ApplyT(func(v UriFolderDataVersionResponse) string { return v.DataUri }).(pulumi.StringOutput)
}

// The asset description text.
func (o UriFolderDataVersionResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UriFolderDataVersionResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// If the name version are system generated (anonymous registration).
func (o UriFolderDataVersionResponseOutput) IsAnonymous() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v UriFolderDataVersionResponse) *bool { return v.IsAnonymous }).(pulumi.BoolPtrOutput)
}

// Is the asset archived?
func (o UriFolderDataVersionResponseOutput) IsArchived() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v UriFolderDataVersionResponse) *bool { return v.IsArchived }).(pulumi.BoolPtrOutput)
}

// The asset property dictionary.
func (o UriFolderDataVersionResponseOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v UriFolderDataVersionResponse) map[string]string { return v.Properties }).(pulumi.StringMapOutput)
}

// Tag dictionary. Tags can be added, removed, and updated.
func (o UriFolderDataVersionResponseOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v UriFolderDataVersionResponse) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

type UriFolderJobInput struct {
	// Description for the input.
	Description *string `pulumi:"description"`
	// Enum to determine the Job Input Type.
	// Expected value is 'uri_folder'.
	JobInputType string `pulumi:"jobInputType"`
	// Input Asset Delivery Mode.
	Mode *string `pulumi:"mode"`
	// [Required] Input Asset URI.
	Uri string `pulumi:"uri"`
}

// Defaults sets the appropriate defaults for UriFolderJobInput
func (val *UriFolderJobInput) Defaults() *UriFolderJobInput {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Mode == nil {
		mode_ := "ReadOnlyMount"
		tmp.Mode = &mode_
	}
	return &tmp
}

// UriFolderJobInputInput is an input type that accepts UriFolderJobInputArgs and UriFolderJobInputOutput values.
// You can construct a concrete instance of `UriFolderJobInputInput` via:
//
//	UriFolderJobInputArgs{...}
type UriFolderJobInputInput interface {
	pulumi.Input

	ToUriFolderJobInputOutput() UriFolderJobInputOutput
	ToUriFolderJobInputOutputWithContext(context.Context) UriFolderJobInputOutput
}

type UriFolderJobInputArgs struct {
	// Description for the input.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Enum to determine the Job Input Type.
	// Expected value is 'uri_folder'.
	JobInputType pulumi.StringInput `pulumi:"jobInputType"`
	// Input Asset Delivery Mode.
	Mode pulumi.StringPtrInput `pulumi:"mode"`
	// [Required] Input Asset URI.
	Uri pulumi.StringInput `pulumi:"uri"`
}

// Defaults sets the appropriate defaults for UriFolderJobInputArgs
func (val *UriFolderJobInputArgs) Defaults() *UriFolderJobInputArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Mode == nil {
		tmp.Mode = pulumi.StringPtr("ReadOnlyMount")
	}
	return &tmp
}
func (UriFolderJobInputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UriFolderJobInput)(nil)).Elem()
}

func (i UriFolderJobInputArgs) ToUriFolderJobInputOutput() UriFolderJobInputOutput {
	return i.ToUriFolderJobInputOutputWithContext(context.Background())
}

func (i UriFolderJobInputArgs) ToUriFolderJobInputOutputWithContext(ctx context.Context) UriFolderJobInputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UriFolderJobInputOutput)
}

type UriFolderJobInputOutput struct{ *pulumi.OutputState }

func (UriFolderJobInputOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UriFolderJobInput)(nil)).Elem()
}

func (o UriFolderJobInputOutput) ToUriFolderJobInputOutput() UriFolderJobInputOutput {
	return o
}

func (o UriFolderJobInputOutput) ToUriFolderJobInputOutputWithContext(ctx context.Context) UriFolderJobInputOutput {
	return o
}

// Description for the input.
func (o UriFolderJobInputOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UriFolderJobInput) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Enum to determine the Job Input Type.
// Expected value is 'uri_folder'.
func (o UriFolderJobInputOutput) JobInputType() pulumi.StringOutput {
	return o.ApplyT(func(v UriFolderJobInput) string { return v.JobInputType }).(pulumi.StringOutput)
}

// Input Asset Delivery Mode.
func (o UriFolderJobInputOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UriFolderJobInput) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

// [Required] Input Asset URI.
func (o UriFolderJobInputOutput) Uri() pulumi.StringOutput {
	return o.ApplyT(func(v UriFolderJobInput) string { return v.Uri }).(pulumi.StringOutput)
}

type UriFolderJobInputResponse struct {
	// Description for the input.
	Description *string `pulumi:"description"`
	// Enum to determine the Job Input Type.
	// Expected value is 'uri_folder'.
	JobInputType string `pulumi:"jobInputType"`
	// Input Asset Delivery Mode.
	Mode *string `pulumi:"mode"`
	// [Required] Input Asset URI.
	Uri string `pulumi:"uri"`
}

// Defaults sets the appropriate defaults for UriFolderJobInputResponse
func (val *UriFolderJobInputResponse) Defaults() *UriFolderJobInputResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Mode == nil {
		mode_ := "ReadOnlyMount"
		tmp.Mode = &mode_
	}
	return &tmp
}

type UriFolderJobInputResponseOutput struct{ *pulumi.OutputState }

func (UriFolderJobInputResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UriFolderJobInputResponse)(nil)).Elem()
}

func (o UriFolderJobInputResponseOutput) ToUriFolderJobInputResponseOutput() UriFolderJobInputResponseOutput {
	return o
}

func (o UriFolderJobInputResponseOutput) ToUriFolderJobInputResponseOutputWithContext(ctx context.Context) UriFolderJobInputResponseOutput {
	return o
}

// Description for the input.
func (o UriFolderJobInputResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UriFolderJobInputResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Enum to determine the Job Input Type.
// Expected value is 'uri_folder'.
func (o UriFolderJobInputResponseOutput) JobInputType() pulumi.StringOutput {
	return o.ApplyT(func(v UriFolderJobInputResponse) string { return v.JobInputType }).(pulumi.StringOutput)
}

// Input Asset Delivery Mode.
func (o UriFolderJobInputResponseOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UriFolderJobInputResponse) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

// [Required] Input Asset URI.
func (o UriFolderJobInputResponseOutput) Uri() pulumi.StringOutput {
	return o.ApplyT(func(v UriFolderJobInputResponse) string { return v.Uri }).(pulumi.StringOutput)
}

type UriFolderJobOutput struct {
	// Description for the output.
	Description *string `pulumi:"description"`
	// Enum to determine the Job Output Type.
	// Expected value is 'uri_folder'.
	JobOutputType string `pulumi:"jobOutputType"`
	// Output Asset Delivery Mode.
	Mode *string `pulumi:"mode"`
	// Output Asset URI.
	Uri *string `pulumi:"uri"`
}

// Defaults sets the appropriate defaults for UriFolderJobOutput
func (val *UriFolderJobOutput) Defaults() *UriFolderJobOutput {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Mode == nil {
		mode_ := "ReadWriteMount"
		tmp.Mode = &mode_
	}
	return &tmp
}

// UriFolderJobOutputInput is an input type that accepts UriFolderJobOutputArgs and UriFolderJobOutputOutput values.
// You can construct a concrete instance of `UriFolderJobOutputInput` via:
//
//	UriFolderJobOutputArgs{...}
type UriFolderJobOutputInput interface {
	pulumi.Input

	ToUriFolderJobOutputOutput() UriFolderJobOutputOutput
	ToUriFolderJobOutputOutputWithContext(context.Context) UriFolderJobOutputOutput
}

type UriFolderJobOutputArgs struct {
	// Description for the output.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Enum to determine the Job Output Type.
	// Expected value is 'uri_folder'.
	JobOutputType pulumi.StringInput `pulumi:"jobOutputType"`
	// Output Asset Delivery Mode.
	Mode pulumi.StringPtrInput `pulumi:"mode"`
	// Output Asset URI.
	Uri pulumi.StringPtrInput `pulumi:"uri"`
}

// Defaults sets the appropriate defaults for UriFolderJobOutputArgs
func (val *UriFolderJobOutputArgs) Defaults() *UriFolderJobOutputArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Mode == nil {
		tmp.Mode = pulumi.StringPtr("ReadWriteMount")
	}
	return &tmp
}
func (UriFolderJobOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UriFolderJobOutput)(nil)).Elem()
}

func (i UriFolderJobOutputArgs) ToUriFolderJobOutputOutput() UriFolderJobOutputOutput {
	return i.ToUriFolderJobOutputOutputWithContext(context.Background())
}

func (i UriFolderJobOutputArgs) ToUriFolderJobOutputOutputWithContext(ctx context.Context) UriFolderJobOutputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UriFolderJobOutputOutput)
}

type UriFolderJobOutputOutput struct{ *pulumi.OutputState }

func (UriFolderJobOutputOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UriFolderJobOutput)(nil)).Elem()
}

func (o UriFolderJobOutputOutput) ToUriFolderJobOutputOutput() UriFolderJobOutputOutput {
	return o
}

func (o UriFolderJobOutputOutput) ToUriFolderJobOutputOutputWithContext(ctx context.Context) UriFolderJobOutputOutput {
	return o
}

// Description for the output.
func (o UriFolderJobOutputOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UriFolderJobOutput) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Enum to determine the Job Output Type.
// Expected value is 'uri_folder'.
func (o UriFolderJobOutputOutput) JobOutputType() pulumi.StringOutput {
	return o.ApplyT(func(v UriFolderJobOutput) string { return v.JobOutputType }).(pulumi.StringOutput)
}

// Output Asset Delivery Mode.
func (o UriFolderJobOutputOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UriFolderJobOutput) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

// Output Asset URI.
func (o UriFolderJobOutputOutput) Uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UriFolderJobOutput) *string { return v.Uri }).(pulumi.StringPtrOutput)
}

type UriFolderJobOutputResponse struct {
	// Description for the output.
	Description *string `pulumi:"description"`
	// Enum to determine the Job Output Type.
	// Expected value is 'uri_folder'.
	JobOutputType string `pulumi:"jobOutputType"`
	// Output Asset Delivery Mode.
	Mode *string `pulumi:"mode"`
	// Output Asset URI.
	Uri *string `pulumi:"uri"`
}

// Defaults sets the appropriate defaults for UriFolderJobOutputResponse
func (val *UriFolderJobOutputResponse) Defaults() *UriFolderJobOutputResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Mode == nil {
		mode_ := "ReadWriteMount"
		tmp.Mode = &mode_
	}
	return &tmp
}

type UriFolderJobOutputResponseOutput struct{ *pulumi.OutputState }

func (UriFolderJobOutputResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UriFolderJobOutputResponse)(nil)).Elem()
}

func (o UriFolderJobOutputResponseOutput) ToUriFolderJobOutputResponseOutput() UriFolderJobOutputResponseOutput {
	return o
}

func (o UriFolderJobOutputResponseOutput) ToUriFolderJobOutputResponseOutputWithContext(ctx context.Context) UriFolderJobOutputResponseOutput {
	return o
}

// Description for the output.
func (o UriFolderJobOutputResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UriFolderJobOutputResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Enum to determine the Job Output Type.
// Expected value is 'uri_folder'.
func (o UriFolderJobOutputResponseOutput) JobOutputType() pulumi.StringOutput {
	return o.ApplyT(func(v UriFolderJobOutputResponse) string { return v.JobOutputType }).(pulumi.StringOutput)
}

// Output Asset Delivery Mode.
func (o UriFolderJobOutputResponseOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UriFolderJobOutputResponse) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

// Output Asset URI.
func (o UriFolderJobOutputResponseOutput) Uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UriFolderJobOutputResponse) *string { return v.Uri }).(pulumi.StringPtrOutput)
}

// Settings for user account that gets created on each on the nodes of a compute.
type UserAccountCredentials struct {
	// Name of the administrator user account which can be used to SSH to nodes.
	AdminUserName string `pulumi:"adminUserName"`
	// Password of the administrator user account.
	AdminUserPassword *string `pulumi:"adminUserPassword"`
	// SSH public key of the administrator user account.
	AdminUserSshPublicKey *string `pulumi:"adminUserSshPublicKey"`
}

// UserAccountCredentialsInput is an input type that accepts UserAccountCredentialsArgs and UserAccountCredentialsOutput values.
// You can construct a concrete instance of `UserAccountCredentialsInput` via:
//
//	UserAccountCredentialsArgs{...}
type UserAccountCredentialsInput interface {
	pulumi.Input

	ToUserAccountCredentialsOutput() UserAccountCredentialsOutput
	ToUserAccountCredentialsOutputWithContext(context.Context) UserAccountCredentialsOutput
}

// Settings for user account that gets created on each on the nodes of a compute.
type UserAccountCredentialsArgs struct {
	// Name of the administrator user account which can be used to SSH to nodes.
	AdminUserName pulumi.StringInput `pulumi:"adminUserName"`
	// Password of the administrator user account.
	AdminUserPassword pulumi.StringPtrInput `pulumi:"adminUserPassword"`
	// SSH public key of the administrator user account.
	AdminUserSshPublicKey pulumi.StringPtrInput `pulumi:"adminUserSshPublicKey"`
}

func (UserAccountCredentialsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserAccountCredentials)(nil)).Elem()
}

func (i UserAccountCredentialsArgs) ToUserAccountCredentialsOutput() UserAccountCredentialsOutput {
	return i.ToUserAccountCredentialsOutputWithContext(context.Background())
}

func (i UserAccountCredentialsArgs) ToUserAccountCredentialsOutputWithContext(ctx context.Context) UserAccountCredentialsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserAccountCredentialsOutput)
}

func (i UserAccountCredentialsArgs) ToUserAccountCredentialsPtrOutput() UserAccountCredentialsPtrOutput {
	return i.ToUserAccountCredentialsPtrOutputWithContext(context.Background())
}

func (i UserAccountCredentialsArgs) ToUserAccountCredentialsPtrOutputWithContext(ctx context.Context) UserAccountCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserAccountCredentialsOutput).ToUserAccountCredentialsPtrOutputWithContext(ctx)
}

// UserAccountCredentialsPtrInput is an input type that accepts UserAccountCredentialsArgs, UserAccountCredentialsPtr and UserAccountCredentialsPtrOutput values.
// You can construct a concrete instance of `UserAccountCredentialsPtrInput` via:
//
//	        UserAccountCredentialsArgs{...}
//
//	or:
//
//	        nil
type UserAccountCredentialsPtrInput interface {
	pulumi.Input

	ToUserAccountCredentialsPtrOutput() UserAccountCredentialsPtrOutput
	ToUserAccountCredentialsPtrOutputWithContext(context.Context) UserAccountCredentialsPtrOutput
}

type userAccountCredentialsPtrType UserAccountCredentialsArgs

func UserAccountCredentialsPtr(v *UserAccountCredentialsArgs) UserAccountCredentialsPtrInput {
	return (*userAccountCredentialsPtrType)(v)
}

func (*userAccountCredentialsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UserAccountCredentials)(nil)).Elem()
}

func (i *userAccountCredentialsPtrType) ToUserAccountCredentialsPtrOutput() UserAccountCredentialsPtrOutput {
	return i.ToUserAccountCredentialsPtrOutputWithContext(context.Background())
}

func (i *userAccountCredentialsPtrType) ToUserAccountCredentialsPtrOutputWithContext(ctx context.Context) UserAccountCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserAccountCredentialsPtrOutput)
}

// Settings for user account that gets created on each on the nodes of a compute.
type UserAccountCredentialsOutput struct{ *pulumi.OutputState }

func (UserAccountCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserAccountCredentials)(nil)).Elem()
}

func (o UserAccountCredentialsOutput) ToUserAccountCredentialsOutput() UserAccountCredentialsOutput {
	return o
}

func (o UserAccountCredentialsOutput) ToUserAccountCredentialsOutputWithContext(ctx context.Context) UserAccountCredentialsOutput {
	return o
}

func (o UserAccountCredentialsOutput) ToUserAccountCredentialsPtrOutput() UserAccountCredentialsPtrOutput {
	return o.ToUserAccountCredentialsPtrOutputWithContext(context.Background())
}

func (o UserAccountCredentialsOutput) ToUserAccountCredentialsPtrOutputWithContext(ctx context.Context) UserAccountCredentialsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v UserAccountCredentials) *UserAccountCredentials {
		return &v
	}).(UserAccountCredentialsPtrOutput)
}

// Name of the administrator user account which can be used to SSH to nodes.
func (o UserAccountCredentialsOutput) AdminUserName() pulumi.StringOutput {
	return o.ApplyT(func(v UserAccountCredentials) string { return v.AdminUserName }).(pulumi.StringOutput)
}

// Password of the administrator user account.
func (o UserAccountCredentialsOutput) AdminUserPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserAccountCredentials) *string { return v.AdminUserPassword }).(pulumi.StringPtrOutput)
}

// SSH public key of the administrator user account.
func (o UserAccountCredentialsOutput) AdminUserSshPublicKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserAccountCredentials) *string { return v.AdminUserSshPublicKey }).(pulumi.StringPtrOutput)
}

type UserAccountCredentialsPtrOutput struct{ *pulumi.OutputState }

func (UserAccountCredentialsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserAccountCredentials)(nil)).Elem()
}

func (o UserAccountCredentialsPtrOutput) ToUserAccountCredentialsPtrOutput() UserAccountCredentialsPtrOutput {
	return o
}

func (o UserAccountCredentialsPtrOutput) ToUserAccountCredentialsPtrOutputWithContext(ctx context.Context) UserAccountCredentialsPtrOutput {
	return o
}

func (o UserAccountCredentialsPtrOutput) Elem() UserAccountCredentialsOutput {
	return o.ApplyT(func(v *UserAccountCredentials) UserAccountCredentials {
		if v != nil {
			return *v
		}
		var ret UserAccountCredentials
		return ret
	}).(UserAccountCredentialsOutput)
}

// Name of the administrator user account which can be used to SSH to nodes.
func (o UserAccountCredentialsPtrOutput) AdminUserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserAccountCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.AdminUserName
	}).(pulumi.StringPtrOutput)
}

// Password of the administrator user account.
func (o UserAccountCredentialsPtrOutput) AdminUserPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserAccountCredentials) *string {
		if v == nil {
			return nil
		}
		return v.AdminUserPassword
	}).(pulumi.StringPtrOutput)
}

// SSH public key of the administrator user account.
func (o UserAccountCredentialsPtrOutput) AdminUserSshPublicKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserAccountCredentials) *string {
		if v == nil {
			return nil
		}
		return v.AdminUserSshPublicKey
	}).(pulumi.StringPtrOutput)
}

// Settings for user account that gets created on each on the nodes of a compute.
type UserAccountCredentialsResponse struct {
	// Name of the administrator user account which can be used to SSH to nodes.
	AdminUserName string `pulumi:"adminUserName"`
	// Password of the administrator user account.
	AdminUserPassword *string `pulumi:"adminUserPassword"`
	// SSH public key of the administrator user account.
	AdminUserSshPublicKey *string `pulumi:"adminUserSshPublicKey"`
}

// Settings for user account that gets created on each on the nodes of a compute.
type UserAccountCredentialsResponseOutput struct{ *pulumi.OutputState }

func (UserAccountCredentialsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserAccountCredentialsResponse)(nil)).Elem()
}

func (o UserAccountCredentialsResponseOutput) ToUserAccountCredentialsResponseOutput() UserAccountCredentialsResponseOutput {
	return o
}

func (o UserAccountCredentialsResponseOutput) ToUserAccountCredentialsResponseOutputWithContext(ctx context.Context) UserAccountCredentialsResponseOutput {
	return o
}

// Name of the administrator user account which can be used to SSH to nodes.
func (o UserAccountCredentialsResponseOutput) AdminUserName() pulumi.StringOutput {
	return o.ApplyT(func(v UserAccountCredentialsResponse) string { return v.AdminUserName }).(pulumi.StringOutput)
}

// Password of the administrator user account.
func (o UserAccountCredentialsResponseOutput) AdminUserPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserAccountCredentialsResponse) *string { return v.AdminUserPassword }).(pulumi.StringPtrOutput)
}

// SSH public key of the administrator user account.
func (o UserAccountCredentialsResponseOutput) AdminUserSshPublicKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserAccountCredentialsResponse) *string { return v.AdminUserSshPublicKey }).(pulumi.StringPtrOutput)
}

type UserAccountCredentialsResponsePtrOutput struct{ *pulumi.OutputState }

func (UserAccountCredentialsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserAccountCredentialsResponse)(nil)).Elem()
}

func (o UserAccountCredentialsResponsePtrOutput) ToUserAccountCredentialsResponsePtrOutput() UserAccountCredentialsResponsePtrOutput {
	return o
}

func (o UserAccountCredentialsResponsePtrOutput) ToUserAccountCredentialsResponsePtrOutputWithContext(ctx context.Context) UserAccountCredentialsResponsePtrOutput {
	return o
}

func (o UserAccountCredentialsResponsePtrOutput) Elem() UserAccountCredentialsResponseOutput {
	return o.ApplyT(func(v *UserAccountCredentialsResponse) UserAccountCredentialsResponse {
		if v != nil {
			return *v
		}
		var ret UserAccountCredentialsResponse
		return ret
	}).(UserAccountCredentialsResponseOutput)
}

// Name of the administrator user account which can be used to SSH to nodes.
func (o UserAccountCredentialsResponsePtrOutput) AdminUserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserAccountCredentialsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.AdminUserName
	}).(pulumi.StringPtrOutput)
}

// Password of the administrator user account.
func (o UserAccountCredentialsResponsePtrOutput) AdminUserPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserAccountCredentialsResponse) *string {
		if v == nil {
			return nil
		}
		return v.AdminUserPassword
	}).(pulumi.StringPtrOutput)
}

// SSH public key of the administrator user account.
func (o UserAccountCredentialsResponsePtrOutput) AdminUserSshPublicKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserAccountCredentialsResponse) *string {
		if v == nil {
			return nil
		}
		return v.AdminUserSshPublicKey
	}).(pulumi.StringPtrOutput)
}

// User assigned identity properties
type UserAssignedIdentityResponse struct {
	// The client ID of the assigned identity.
	ClientId string `pulumi:"clientId"`
	// The principal ID of the assigned identity.
	PrincipalId string `pulumi:"principalId"`
}

// User assigned identity properties
type UserAssignedIdentityResponseOutput struct{ *pulumi.OutputState }

func (UserAssignedIdentityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserAssignedIdentityResponse)(nil)).Elem()
}

func (o UserAssignedIdentityResponseOutput) ToUserAssignedIdentityResponseOutput() UserAssignedIdentityResponseOutput {
	return o
}

func (o UserAssignedIdentityResponseOutput) ToUserAssignedIdentityResponseOutputWithContext(ctx context.Context) UserAssignedIdentityResponseOutput {
	return o
}

// The client ID of the assigned identity.
func (o UserAssignedIdentityResponseOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v UserAssignedIdentityResponse) string { return v.ClientId }).(pulumi.StringOutput)
}

// The principal ID of the assigned identity.
func (o UserAssignedIdentityResponseOutput) PrincipalId() pulumi.StringOutput {
	return o.ApplyT(func(v UserAssignedIdentityResponse) string { return v.PrincipalId }).(pulumi.StringOutput)
}

type UserAssignedIdentityResponseMapOutput struct{ *pulumi.OutputState }

func (UserAssignedIdentityResponseMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]UserAssignedIdentityResponse)(nil)).Elem()
}

func (o UserAssignedIdentityResponseMapOutput) ToUserAssignedIdentityResponseMapOutput() UserAssignedIdentityResponseMapOutput {
	return o
}

func (o UserAssignedIdentityResponseMapOutput) ToUserAssignedIdentityResponseMapOutputWithContext(ctx context.Context) UserAssignedIdentityResponseMapOutput {
	return o
}

func (o UserAssignedIdentityResponseMapOutput) MapIndex(k pulumi.StringInput) UserAssignedIdentityResponseOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) UserAssignedIdentityResponse {
		return vs[0].(map[string]UserAssignedIdentityResponse)[vs[1].(string)]
	}).(UserAssignedIdentityResponseOutput)
}

type UserCreatedAcrAccount struct {
	// ARM ResourceId of a resource
	ArmResourceId *ArmResourceId `pulumi:"armResourceId"`
}

// UserCreatedAcrAccountInput is an input type that accepts UserCreatedAcrAccountArgs and UserCreatedAcrAccountOutput values.
// You can construct a concrete instance of `UserCreatedAcrAccountInput` via:
//
//	UserCreatedAcrAccountArgs{...}
type UserCreatedAcrAccountInput interface {
	pulumi.Input

	ToUserCreatedAcrAccountOutput() UserCreatedAcrAccountOutput
	ToUserCreatedAcrAccountOutputWithContext(context.Context) UserCreatedAcrAccountOutput
}

type UserCreatedAcrAccountArgs struct {
	// ARM ResourceId of a resource
	ArmResourceId ArmResourceIdPtrInput `pulumi:"armResourceId"`
}

func (UserCreatedAcrAccountArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserCreatedAcrAccount)(nil)).Elem()
}

func (i UserCreatedAcrAccountArgs) ToUserCreatedAcrAccountOutput() UserCreatedAcrAccountOutput {
	return i.ToUserCreatedAcrAccountOutputWithContext(context.Background())
}

func (i UserCreatedAcrAccountArgs) ToUserCreatedAcrAccountOutputWithContext(ctx context.Context) UserCreatedAcrAccountOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserCreatedAcrAccountOutput)
}

func (i UserCreatedAcrAccountArgs) ToUserCreatedAcrAccountPtrOutput() UserCreatedAcrAccountPtrOutput {
	return i.ToUserCreatedAcrAccountPtrOutputWithContext(context.Background())
}

func (i UserCreatedAcrAccountArgs) ToUserCreatedAcrAccountPtrOutputWithContext(ctx context.Context) UserCreatedAcrAccountPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserCreatedAcrAccountOutput).ToUserCreatedAcrAccountPtrOutputWithContext(ctx)
}

// UserCreatedAcrAccountPtrInput is an input type that accepts UserCreatedAcrAccountArgs, UserCreatedAcrAccountPtr and UserCreatedAcrAccountPtrOutput values.
// You can construct a concrete instance of `UserCreatedAcrAccountPtrInput` via:
//
//	        UserCreatedAcrAccountArgs{...}
//
//	or:
//
//	        nil
type UserCreatedAcrAccountPtrInput interface {
	pulumi.Input

	ToUserCreatedAcrAccountPtrOutput() UserCreatedAcrAccountPtrOutput
	ToUserCreatedAcrAccountPtrOutputWithContext(context.Context) UserCreatedAcrAccountPtrOutput
}

type userCreatedAcrAccountPtrType UserCreatedAcrAccountArgs

func UserCreatedAcrAccountPtr(v *UserCreatedAcrAccountArgs) UserCreatedAcrAccountPtrInput {
	return (*userCreatedAcrAccountPtrType)(v)
}

func (*userCreatedAcrAccountPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UserCreatedAcrAccount)(nil)).Elem()
}

func (i *userCreatedAcrAccountPtrType) ToUserCreatedAcrAccountPtrOutput() UserCreatedAcrAccountPtrOutput {
	return i.ToUserCreatedAcrAccountPtrOutputWithContext(context.Background())
}

func (i *userCreatedAcrAccountPtrType) ToUserCreatedAcrAccountPtrOutputWithContext(ctx context.Context) UserCreatedAcrAccountPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserCreatedAcrAccountPtrOutput)
}

type UserCreatedAcrAccountOutput struct{ *pulumi.OutputState }

func (UserCreatedAcrAccountOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserCreatedAcrAccount)(nil)).Elem()
}

func (o UserCreatedAcrAccountOutput) ToUserCreatedAcrAccountOutput() UserCreatedAcrAccountOutput {
	return o
}

func (o UserCreatedAcrAccountOutput) ToUserCreatedAcrAccountOutputWithContext(ctx context.Context) UserCreatedAcrAccountOutput {
	return o
}

func (o UserCreatedAcrAccountOutput) ToUserCreatedAcrAccountPtrOutput() UserCreatedAcrAccountPtrOutput {
	return o.ToUserCreatedAcrAccountPtrOutputWithContext(context.Background())
}

func (o UserCreatedAcrAccountOutput) ToUserCreatedAcrAccountPtrOutputWithContext(ctx context.Context) UserCreatedAcrAccountPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v UserCreatedAcrAccount) *UserCreatedAcrAccount {
		return &v
	}).(UserCreatedAcrAccountPtrOutput)
}

// ARM ResourceId of a resource
func (o UserCreatedAcrAccountOutput) ArmResourceId() ArmResourceIdPtrOutput {
	return o.ApplyT(func(v UserCreatedAcrAccount) *ArmResourceId { return v.ArmResourceId }).(ArmResourceIdPtrOutput)
}

type UserCreatedAcrAccountPtrOutput struct{ *pulumi.OutputState }

func (UserCreatedAcrAccountPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserCreatedAcrAccount)(nil)).Elem()
}

func (o UserCreatedAcrAccountPtrOutput) ToUserCreatedAcrAccountPtrOutput() UserCreatedAcrAccountPtrOutput {
	return o
}

func (o UserCreatedAcrAccountPtrOutput) ToUserCreatedAcrAccountPtrOutputWithContext(ctx context.Context) UserCreatedAcrAccountPtrOutput {
	return o
}

func (o UserCreatedAcrAccountPtrOutput) Elem() UserCreatedAcrAccountOutput {
	return o.ApplyT(func(v *UserCreatedAcrAccount) UserCreatedAcrAccount {
		if v != nil {
			return *v
		}
		var ret UserCreatedAcrAccount
		return ret
	}).(UserCreatedAcrAccountOutput)
}

// ARM ResourceId of a resource
func (o UserCreatedAcrAccountPtrOutput) ArmResourceId() ArmResourceIdPtrOutput {
	return o.ApplyT(func(v *UserCreatedAcrAccount) *ArmResourceId {
		if v == nil {
			return nil
		}
		return v.ArmResourceId
	}).(ArmResourceIdPtrOutput)
}

type UserCreatedAcrAccountResponse struct {
	// ARM ResourceId of a resource
	ArmResourceId *ArmResourceIdResponse `pulumi:"armResourceId"`
}

type UserCreatedAcrAccountResponseOutput struct{ *pulumi.OutputState }

func (UserCreatedAcrAccountResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserCreatedAcrAccountResponse)(nil)).Elem()
}

func (o UserCreatedAcrAccountResponseOutput) ToUserCreatedAcrAccountResponseOutput() UserCreatedAcrAccountResponseOutput {
	return o
}

func (o UserCreatedAcrAccountResponseOutput) ToUserCreatedAcrAccountResponseOutputWithContext(ctx context.Context) UserCreatedAcrAccountResponseOutput {
	return o
}

// ARM ResourceId of a resource
func (o UserCreatedAcrAccountResponseOutput) ArmResourceId() ArmResourceIdResponsePtrOutput {
	return o.ApplyT(func(v UserCreatedAcrAccountResponse) *ArmResourceIdResponse { return v.ArmResourceId }).(ArmResourceIdResponsePtrOutput)
}

type UserCreatedAcrAccountResponsePtrOutput struct{ *pulumi.OutputState }

func (UserCreatedAcrAccountResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserCreatedAcrAccountResponse)(nil)).Elem()
}

func (o UserCreatedAcrAccountResponsePtrOutput) ToUserCreatedAcrAccountResponsePtrOutput() UserCreatedAcrAccountResponsePtrOutput {
	return o
}

func (o UserCreatedAcrAccountResponsePtrOutput) ToUserCreatedAcrAccountResponsePtrOutputWithContext(ctx context.Context) UserCreatedAcrAccountResponsePtrOutput {
	return o
}

func (o UserCreatedAcrAccountResponsePtrOutput) Elem() UserCreatedAcrAccountResponseOutput {
	return o.ApplyT(func(v *UserCreatedAcrAccountResponse) UserCreatedAcrAccountResponse {
		if v != nil {
			return *v
		}
		var ret UserCreatedAcrAccountResponse
		return ret
	}).(UserCreatedAcrAccountResponseOutput)
}

// ARM ResourceId of a resource
func (o UserCreatedAcrAccountResponsePtrOutput) ArmResourceId() ArmResourceIdResponsePtrOutput {
	return o.ApplyT(func(v *UserCreatedAcrAccountResponse) *ArmResourceIdResponse {
		if v == nil {
			return nil
		}
		return v.ArmResourceId
	}).(ArmResourceIdResponsePtrOutput)
}

type UserCreatedStorageAccount struct {
	// ARM ResourceId of a resource
	ArmResourceId *ArmResourceId `pulumi:"armResourceId"`
}

// UserCreatedStorageAccountInput is an input type that accepts UserCreatedStorageAccountArgs and UserCreatedStorageAccountOutput values.
// You can construct a concrete instance of `UserCreatedStorageAccountInput` via:
//
//	UserCreatedStorageAccountArgs{...}
type UserCreatedStorageAccountInput interface {
	pulumi.Input

	ToUserCreatedStorageAccountOutput() UserCreatedStorageAccountOutput
	ToUserCreatedStorageAccountOutputWithContext(context.Context) UserCreatedStorageAccountOutput
}

type UserCreatedStorageAccountArgs struct {
	// ARM ResourceId of a resource
	ArmResourceId ArmResourceIdPtrInput `pulumi:"armResourceId"`
}

func (UserCreatedStorageAccountArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserCreatedStorageAccount)(nil)).Elem()
}

func (i UserCreatedStorageAccountArgs) ToUserCreatedStorageAccountOutput() UserCreatedStorageAccountOutput {
	return i.ToUserCreatedStorageAccountOutputWithContext(context.Background())
}

func (i UserCreatedStorageAccountArgs) ToUserCreatedStorageAccountOutputWithContext(ctx context.Context) UserCreatedStorageAccountOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserCreatedStorageAccountOutput)
}

func (i UserCreatedStorageAccountArgs) ToUserCreatedStorageAccountPtrOutput() UserCreatedStorageAccountPtrOutput {
	return i.ToUserCreatedStorageAccountPtrOutputWithContext(context.Background())
}

func (i UserCreatedStorageAccountArgs) ToUserCreatedStorageAccountPtrOutputWithContext(ctx context.Context) UserCreatedStorageAccountPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserCreatedStorageAccountOutput).ToUserCreatedStorageAccountPtrOutputWithContext(ctx)
}

// UserCreatedStorageAccountPtrInput is an input type that accepts UserCreatedStorageAccountArgs, UserCreatedStorageAccountPtr and UserCreatedStorageAccountPtrOutput values.
// You can construct a concrete instance of `UserCreatedStorageAccountPtrInput` via:
//
//	        UserCreatedStorageAccountArgs{...}
//
//	or:
//
//	        nil
type UserCreatedStorageAccountPtrInput interface {
	pulumi.Input

	ToUserCreatedStorageAccountPtrOutput() UserCreatedStorageAccountPtrOutput
	ToUserCreatedStorageAccountPtrOutputWithContext(context.Context) UserCreatedStorageAccountPtrOutput
}

type userCreatedStorageAccountPtrType UserCreatedStorageAccountArgs

func UserCreatedStorageAccountPtr(v *UserCreatedStorageAccountArgs) UserCreatedStorageAccountPtrInput {
	return (*userCreatedStorageAccountPtrType)(v)
}

func (*userCreatedStorageAccountPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UserCreatedStorageAccount)(nil)).Elem()
}

func (i *userCreatedStorageAccountPtrType) ToUserCreatedStorageAccountPtrOutput() UserCreatedStorageAccountPtrOutput {
	return i.ToUserCreatedStorageAccountPtrOutputWithContext(context.Background())
}

func (i *userCreatedStorageAccountPtrType) ToUserCreatedStorageAccountPtrOutputWithContext(ctx context.Context) UserCreatedStorageAccountPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserCreatedStorageAccountPtrOutput)
}

type UserCreatedStorageAccountOutput struct{ *pulumi.OutputState }

func (UserCreatedStorageAccountOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserCreatedStorageAccount)(nil)).Elem()
}

func (o UserCreatedStorageAccountOutput) ToUserCreatedStorageAccountOutput() UserCreatedStorageAccountOutput {
	return o
}

func (o UserCreatedStorageAccountOutput) ToUserCreatedStorageAccountOutputWithContext(ctx context.Context) UserCreatedStorageAccountOutput {
	return o
}

func (o UserCreatedStorageAccountOutput) ToUserCreatedStorageAccountPtrOutput() UserCreatedStorageAccountPtrOutput {
	return o.ToUserCreatedStorageAccountPtrOutputWithContext(context.Background())
}

func (o UserCreatedStorageAccountOutput) ToUserCreatedStorageAccountPtrOutputWithContext(ctx context.Context) UserCreatedStorageAccountPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v UserCreatedStorageAccount) *UserCreatedStorageAccount {
		return &v
	}).(UserCreatedStorageAccountPtrOutput)
}

// ARM ResourceId of a resource
func (o UserCreatedStorageAccountOutput) ArmResourceId() ArmResourceIdPtrOutput {
	return o.ApplyT(func(v UserCreatedStorageAccount) *ArmResourceId { return v.ArmResourceId }).(ArmResourceIdPtrOutput)
}

type UserCreatedStorageAccountPtrOutput struct{ *pulumi.OutputState }

func (UserCreatedStorageAccountPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserCreatedStorageAccount)(nil)).Elem()
}

func (o UserCreatedStorageAccountPtrOutput) ToUserCreatedStorageAccountPtrOutput() UserCreatedStorageAccountPtrOutput {
	return o
}

func (o UserCreatedStorageAccountPtrOutput) ToUserCreatedStorageAccountPtrOutputWithContext(ctx context.Context) UserCreatedStorageAccountPtrOutput {
	return o
}

func (o UserCreatedStorageAccountPtrOutput) Elem() UserCreatedStorageAccountOutput {
	return o.ApplyT(func(v *UserCreatedStorageAccount) UserCreatedStorageAccount {
		if v != nil {
			return *v
		}
		var ret UserCreatedStorageAccount
		return ret
	}).(UserCreatedStorageAccountOutput)
}

// ARM ResourceId of a resource
func (o UserCreatedStorageAccountPtrOutput) ArmResourceId() ArmResourceIdPtrOutput {
	return o.ApplyT(func(v *UserCreatedStorageAccount) *ArmResourceId {
		if v == nil {
			return nil
		}
		return v.ArmResourceId
	}).(ArmResourceIdPtrOutput)
}

type UserCreatedStorageAccountResponse struct {
	// ARM ResourceId of a resource
	ArmResourceId *ArmResourceIdResponse `pulumi:"armResourceId"`
}

type UserCreatedStorageAccountResponseOutput struct{ *pulumi.OutputState }

func (UserCreatedStorageAccountResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserCreatedStorageAccountResponse)(nil)).Elem()
}

func (o UserCreatedStorageAccountResponseOutput) ToUserCreatedStorageAccountResponseOutput() UserCreatedStorageAccountResponseOutput {
	return o
}

func (o UserCreatedStorageAccountResponseOutput) ToUserCreatedStorageAccountResponseOutputWithContext(ctx context.Context) UserCreatedStorageAccountResponseOutput {
	return o
}

// ARM ResourceId of a resource
func (o UserCreatedStorageAccountResponseOutput) ArmResourceId() ArmResourceIdResponsePtrOutput {
	return o.ApplyT(func(v UserCreatedStorageAccountResponse) *ArmResourceIdResponse { return v.ArmResourceId }).(ArmResourceIdResponsePtrOutput)
}

type UserCreatedStorageAccountResponsePtrOutput struct{ *pulumi.OutputState }

func (UserCreatedStorageAccountResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserCreatedStorageAccountResponse)(nil)).Elem()
}

func (o UserCreatedStorageAccountResponsePtrOutput) ToUserCreatedStorageAccountResponsePtrOutput() UserCreatedStorageAccountResponsePtrOutput {
	return o
}

func (o UserCreatedStorageAccountResponsePtrOutput) ToUserCreatedStorageAccountResponsePtrOutputWithContext(ctx context.Context) UserCreatedStorageAccountResponsePtrOutput {
	return o
}

func (o UserCreatedStorageAccountResponsePtrOutput) Elem() UserCreatedStorageAccountResponseOutput {
	return o.ApplyT(func(v *UserCreatedStorageAccountResponse) UserCreatedStorageAccountResponse {
		if v != nil {
			return *v
		}
		var ret UserCreatedStorageAccountResponse
		return ret
	}).(UserCreatedStorageAccountResponseOutput)
}

// ARM ResourceId of a resource
func (o UserCreatedStorageAccountResponsePtrOutput) ArmResourceId() ArmResourceIdResponsePtrOutput {
	return o.ApplyT(func(v *UserCreatedStorageAccountResponse) *ArmResourceIdResponse {
		if v == nil {
			return nil
		}
		return v.ArmResourceId
	}).(ArmResourceIdResponsePtrOutput)
}

// User identity configuration.
type UserIdentity struct {
	// Enum to determine identity framework.
	// Expected value is 'UserIdentity'.
	IdentityType string `pulumi:"identityType"`
}

// UserIdentityInput is an input type that accepts UserIdentityArgs and UserIdentityOutput values.
// You can construct a concrete instance of `UserIdentityInput` via:
//
//	UserIdentityArgs{...}
type UserIdentityInput interface {
	pulumi.Input

	ToUserIdentityOutput() UserIdentityOutput
	ToUserIdentityOutputWithContext(context.Context) UserIdentityOutput
}

// User identity configuration.
type UserIdentityArgs struct {
	// Enum to determine identity framework.
	// Expected value is 'UserIdentity'.
	IdentityType pulumi.StringInput `pulumi:"identityType"`
}

func (UserIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserIdentity)(nil)).Elem()
}

func (i UserIdentityArgs) ToUserIdentityOutput() UserIdentityOutput {
	return i.ToUserIdentityOutputWithContext(context.Background())
}

func (i UserIdentityArgs) ToUserIdentityOutputWithContext(ctx context.Context) UserIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserIdentityOutput)
}

func (i UserIdentityArgs) ToUserIdentityPtrOutput() UserIdentityPtrOutput {
	return i.ToUserIdentityPtrOutputWithContext(context.Background())
}

func (i UserIdentityArgs) ToUserIdentityPtrOutputWithContext(ctx context.Context) UserIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserIdentityOutput).ToUserIdentityPtrOutputWithContext(ctx)
}

// UserIdentityPtrInput is an input type that accepts UserIdentityArgs, UserIdentityPtr and UserIdentityPtrOutput values.
// You can construct a concrete instance of `UserIdentityPtrInput` via:
//
//	        UserIdentityArgs{...}
//
//	or:
//
//	        nil
type UserIdentityPtrInput interface {
	pulumi.Input

	ToUserIdentityPtrOutput() UserIdentityPtrOutput
	ToUserIdentityPtrOutputWithContext(context.Context) UserIdentityPtrOutput
}

type userIdentityPtrType UserIdentityArgs

func UserIdentityPtr(v *UserIdentityArgs) UserIdentityPtrInput {
	return (*userIdentityPtrType)(v)
}

func (*userIdentityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UserIdentity)(nil)).Elem()
}

func (i *userIdentityPtrType) ToUserIdentityPtrOutput() UserIdentityPtrOutput {
	return i.ToUserIdentityPtrOutputWithContext(context.Background())
}

func (i *userIdentityPtrType) ToUserIdentityPtrOutputWithContext(ctx context.Context) UserIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserIdentityPtrOutput)
}

// User identity configuration.
type UserIdentityOutput struct{ *pulumi.OutputState }

func (UserIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserIdentity)(nil)).Elem()
}

func (o UserIdentityOutput) ToUserIdentityOutput() UserIdentityOutput {
	return o
}

func (o UserIdentityOutput) ToUserIdentityOutputWithContext(ctx context.Context) UserIdentityOutput {
	return o
}

func (o UserIdentityOutput) ToUserIdentityPtrOutput() UserIdentityPtrOutput {
	return o.ToUserIdentityPtrOutputWithContext(context.Background())
}

func (o UserIdentityOutput) ToUserIdentityPtrOutputWithContext(ctx context.Context) UserIdentityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v UserIdentity) *UserIdentity {
		return &v
	}).(UserIdentityPtrOutput)
}

// Enum to determine identity framework.
// Expected value is 'UserIdentity'.
func (o UserIdentityOutput) IdentityType() pulumi.StringOutput {
	return o.ApplyT(func(v UserIdentity) string { return v.IdentityType }).(pulumi.StringOutput)
}

type UserIdentityPtrOutput struct{ *pulumi.OutputState }

func (UserIdentityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserIdentity)(nil)).Elem()
}

func (o UserIdentityPtrOutput) ToUserIdentityPtrOutput() UserIdentityPtrOutput {
	return o
}

func (o UserIdentityPtrOutput) ToUserIdentityPtrOutputWithContext(ctx context.Context) UserIdentityPtrOutput {
	return o
}

func (o UserIdentityPtrOutput) Elem() UserIdentityOutput {
	return o.ApplyT(func(v *UserIdentity) UserIdentity {
		if v != nil {
			return *v
		}
		var ret UserIdentity
		return ret
	}).(UserIdentityOutput)
}

// Enum to determine identity framework.
// Expected value is 'UserIdentity'.
func (o UserIdentityPtrOutput) IdentityType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserIdentity) *string {
		if v == nil {
			return nil
		}
		return &v.IdentityType
	}).(pulumi.StringPtrOutput)
}

// User identity configuration.
type UserIdentityResponse struct {
	// Enum to determine identity framework.
	// Expected value is 'UserIdentity'.
	IdentityType string `pulumi:"identityType"`
}

// User identity configuration.
type UserIdentityResponseOutput struct{ *pulumi.OutputState }

func (UserIdentityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserIdentityResponse)(nil)).Elem()
}

func (o UserIdentityResponseOutput) ToUserIdentityResponseOutput() UserIdentityResponseOutput {
	return o
}

func (o UserIdentityResponseOutput) ToUserIdentityResponseOutputWithContext(ctx context.Context) UserIdentityResponseOutput {
	return o
}

// Enum to determine identity framework.
// Expected value is 'UserIdentity'.
func (o UserIdentityResponseOutput) IdentityType() pulumi.StringOutput {
	return o.ApplyT(func(v UserIdentityResponse) string { return v.IdentityType }).(pulumi.StringOutput)
}

type UserIdentityResponsePtrOutput struct{ *pulumi.OutputState }

func (UserIdentityResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserIdentityResponse)(nil)).Elem()
}

func (o UserIdentityResponsePtrOutput) ToUserIdentityResponsePtrOutput() UserIdentityResponsePtrOutput {
	return o
}

func (o UserIdentityResponsePtrOutput) ToUserIdentityResponsePtrOutputWithContext(ctx context.Context) UserIdentityResponsePtrOutput {
	return o
}

func (o UserIdentityResponsePtrOutput) Elem() UserIdentityResponseOutput {
	return o.ApplyT(func(v *UserIdentityResponse) UserIdentityResponse {
		if v != nil {
			return *v
		}
		var ret UserIdentityResponse
		return ret
	}).(UserIdentityResponseOutput)
}

// Enum to determine identity framework.
// Expected value is 'UserIdentity'.
func (o UserIdentityResponsePtrOutput) IdentityType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserIdentityResponse) *string {
		if v == nil {
			return nil
		}
		return &v.IdentityType
	}).(pulumi.StringPtrOutput)
}

type UsernamePasswordAuthTypeWorkspaceConnectionProperties struct {
	// Authentication type of the connection target
	// Expected value is 'UsernamePassword'.
	AuthType string `pulumi:"authType"`
	// Category of the connection
	Category      *string                              `pulumi:"category"`
	Credentials   *WorkspaceConnectionUsernamePassword `pulumi:"credentials"`
	ExpiryTime    *string                              `pulumi:"expiryTime"`
	IsSharedToAll *bool                                `pulumi:"isSharedToAll"`
	// Store user metadata for this connection
	Metadata       map[string]string `pulumi:"metadata"`
	SharedUserList []string          `pulumi:"sharedUserList"`
	Target         *string           `pulumi:"target"`
	// Value details of the workspace connection.
	Value *string `pulumi:"value"`
	// format for the workspace connection value
	ValueFormat *string `pulumi:"valueFormat"`
}

// UsernamePasswordAuthTypeWorkspaceConnectionPropertiesInput is an input type that accepts UsernamePasswordAuthTypeWorkspaceConnectionPropertiesArgs and UsernamePasswordAuthTypeWorkspaceConnectionPropertiesOutput values.
// You can construct a concrete instance of `UsernamePasswordAuthTypeWorkspaceConnectionPropertiesInput` via:
//
//	UsernamePasswordAuthTypeWorkspaceConnectionPropertiesArgs{...}
type UsernamePasswordAuthTypeWorkspaceConnectionPropertiesInput interface {
	pulumi.Input

	ToUsernamePasswordAuthTypeWorkspaceConnectionPropertiesOutput() UsernamePasswordAuthTypeWorkspaceConnectionPropertiesOutput
	ToUsernamePasswordAuthTypeWorkspaceConnectionPropertiesOutputWithContext(context.Context) UsernamePasswordAuthTypeWorkspaceConnectionPropertiesOutput
}

type UsernamePasswordAuthTypeWorkspaceConnectionPropertiesArgs struct {
	// Authentication type of the connection target
	// Expected value is 'UsernamePassword'.
	AuthType pulumi.StringInput `pulumi:"authType"`
	// Category of the connection
	Category      pulumi.StringPtrInput                       `pulumi:"category"`
	Credentials   WorkspaceConnectionUsernamePasswordPtrInput `pulumi:"credentials"`
	ExpiryTime    pulumi.StringPtrInput                       `pulumi:"expiryTime"`
	IsSharedToAll pulumi.BoolPtrInput                         `pulumi:"isSharedToAll"`
	// Store user metadata for this connection
	Metadata       pulumi.StringMapInput   `pulumi:"metadata"`
	SharedUserList pulumi.StringArrayInput `pulumi:"sharedUserList"`
	Target         pulumi.StringPtrInput   `pulumi:"target"`
	// Value details of the workspace connection.
	Value pulumi.StringPtrInput `pulumi:"value"`
	// format for the workspace connection value
	ValueFormat pulumi.StringPtrInput `pulumi:"valueFormat"`
}

func (UsernamePasswordAuthTypeWorkspaceConnectionPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UsernamePasswordAuthTypeWorkspaceConnectionProperties)(nil)).Elem()
}

func (i UsernamePasswordAuthTypeWorkspaceConnectionPropertiesArgs) ToUsernamePasswordAuthTypeWorkspaceConnectionPropertiesOutput() UsernamePasswordAuthTypeWorkspaceConnectionPropertiesOutput {
	return i.ToUsernamePasswordAuthTypeWorkspaceConnectionPropertiesOutputWithContext(context.Background())
}

func (i UsernamePasswordAuthTypeWorkspaceConnectionPropertiesArgs) ToUsernamePasswordAuthTypeWorkspaceConnectionPropertiesOutputWithContext(ctx context.Context) UsernamePasswordAuthTypeWorkspaceConnectionPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UsernamePasswordAuthTypeWorkspaceConnectionPropertiesOutput)
}

type UsernamePasswordAuthTypeWorkspaceConnectionPropertiesOutput struct{ *pulumi.OutputState }

func (UsernamePasswordAuthTypeWorkspaceConnectionPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UsernamePasswordAuthTypeWorkspaceConnectionProperties)(nil)).Elem()
}

func (o UsernamePasswordAuthTypeWorkspaceConnectionPropertiesOutput) ToUsernamePasswordAuthTypeWorkspaceConnectionPropertiesOutput() UsernamePasswordAuthTypeWorkspaceConnectionPropertiesOutput {
	return o
}

func (o UsernamePasswordAuthTypeWorkspaceConnectionPropertiesOutput) ToUsernamePasswordAuthTypeWorkspaceConnectionPropertiesOutputWithContext(ctx context.Context) UsernamePasswordAuthTypeWorkspaceConnectionPropertiesOutput {
	return o
}

// Authentication type of the connection target
// Expected value is 'UsernamePassword'.
func (o UsernamePasswordAuthTypeWorkspaceConnectionPropertiesOutput) AuthType() pulumi.StringOutput {
	return o.ApplyT(func(v UsernamePasswordAuthTypeWorkspaceConnectionProperties) string { return v.AuthType }).(pulumi.StringOutput)
}

// Category of the connection
func (o UsernamePasswordAuthTypeWorkspaceConnectionPropertiesOutput) Category() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UsernamePasswordAuthTypeWorkspaceConnectionProperties) *string { return v.Category }).(pulumi.StringPtrOutput)
}

func (o UsernamePasswordAuthTypeWorkspaceConnectionPropertiesOutput) Credentials() WorkspaceConnectionUsernamePasswordPtrOutput {
	return o.ApplyT(func(v UsernamePasswordAuthTypeWorkspaceConnectionProperties) *WorkspaceConnectionUsernamePassword {
		return v.Credentials
	}).(WorkspaceConnectionUsernamePasswordPtrOutput)
}

func (o UsernamePasswordAuthTypeWorkspaceConnectionPropertiesOutput) ExpiryTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UsernamePasswordAuthTypeWorkspaceConnectionProperties) *string { return v.ExpiryTime }).(pulumi.StringPtrOutput)
}

func (o UsernamePasswordAuthTypeWorkspaceConnectionPropertiesOutput) IsSharedToAll() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v UsernamePasswordAuthTypeWorkspaceConnectionProperties) *bool { return v.IsSharedToAll }).(pulumi.BoolPtrOutput)
}

// Store user metadata for this connection
func (o UsernamePasswordAuthTypeWorkspaceConnectionPropertiesOutput) Metadata() pulumi.StringMapOutput {
	return o.ApplyT(func(v UsernamePasswordAuthTypeWorkspaceConnectionProperties) map[string]string { return v.Metadata }).(pulumi.StringMapOutput)
}

func (o UsernamePasswordAuthTypeWorkspaceConnectionPropertiesOutput) SharedUserList() pulumi.StringArrayOutput {
	return o.ApplyT(func(v UsernamePasswordAuthTypeWorkspaceConnectionProperties) []string { return v.SharedUserList }).(pulumi.StringArrayOutput)
}

func (o UsernamePasswordAuthTypeWorkspaceConnectionPropertiesOutput) Target() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UsernamePasswordAuthTypeWorkspaceConnectionProperties) *string { return v.Target }).(pulumi.StringPtrOutput)
}

// Value details of the workspace connection.
func (o UsernamePasswordAuthTypeWorkspaceConnectionPropertiesOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UsernamePasswordAuthTypeWorkspaceConnectionProperties) *string { return v.Value }).(pulumi.StringPtrOutput)
}

// format for the workspace connection value
func (o UsernamePasswordAuthTypeWorkspaceConnectionPropertiesOutput) ValueFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UsernamePasswordAuthTypeWorkspaceConnectionProperties) *string { return v.ValueFormat }).(pulumi.StringPtrOutput)
}

type UsernamePasswordAuthTypeWorkspaceConnectionPropertiesResponse struct {
	// Authentication type of the connection target
	// Expected value is 'UsernamePassword'.
	AuthType string `pulumi:"authType"`
	// Category of the connection
	Category                *string                                      `pulumi:"category"`
	CreatedByWorkspaceArmId string                                       `pulumi:"createdByWorkspaceArmId"`
	Credentials             *WorkspaceConnectionUsernamePasswordResponse `pulumi:"credentials"`
	ExpiryTime              *string                                      `pulumi:"expiryTime"`
	// Group based on connection category
	Group         string `pulumi:"group"`
	IsSharedToAll *bool  `pulumi:"isSharedToAll"`
	// Store user metadata for this connection
	Metadata       map[string]string `pulumi:"metadata"`
	SharedUserList []string          `pulumi:"sharedUserList"`
	Target         *string           `pulumi:"target"`
	// Value details of the workspace connection.
	Value *string `pulumi:"value"`
	// format for the workspace connection value
	ValueFormat *string `pulumi:"valueFormat"`
}

type UsernamePasswordAuthTypeWorkspaceConnectionPropertiesResponseOutput struct{ *pulumi.OutputState }

func (UsernamePasswordAuthTypeWorkspaceConnectionPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UsernamePasswordAuthTypeWorkspaceConnectionPropertiesResponse)(nil)).Elem()
}

func (o UsernamePasswordAuthTypeWorkspaceConnectionPropertiesResponseOutput) ToUsernamePasswordAuthTypeWorkspaceConnectionPropertiesResponseOutput() UsernamePasswordAuthTypeWorkspaceConnectionPropertiesResponseOutput {
	return o
}

func (o UsernamePasswordAuthTypeWorkspaceConnectionPropertiesResponseOutput) ToUsernamePasswordAuthTypeWorkspaceConnectionPropertiesResponseOutputWithContext(ctx context.Context) UsernamePasswordAuthTypeWorkspaceConnectionPropertiesResponseOutput {
	return o
}

// Authentication type of the connection target
// Expected value is 'UsernamePassword'.
func (o UsernamePasswordAuthTypeWorkspaceConnectionPropertiesResponseOutput) AuthType() pulumi.StringOutput {
	return o.ApplyT(func(v UsernamePasswordAuthTypeWorkspaceConnectionPropertiesResponse) string { return v.AuthType }).(pulumi.StringOutput)
}

// Category of the connection
func (o UsernamePasswordAuthTypeWorkspaceConnectionPropertiesResponseOutput) Category() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UsernamePasswordAuthTypeWorkspaceConnectionPropertiesResponse) *string { return v.Category }).(pulumi.StringPtrOutput)
}

func (o UsernamePasswordAuthTypeWorkspaceConnectionPropertiesResponseOutput) CreatedByWorkspaceArmId() pulumi.StringOutput {
	return o.ApplyT(func(v UsernamePasswordAuthTypeWorkspaceConnectionPropertiesResponse) string {
		return v.CreatedByWorkspaceArmId
	}).(pulumi.StringOutput)
}

func (o UsernamePasswordAuthTypeWorkspaceConnectionPropertiesResponseOutput) Credentials() WorkspaceConnectionUsernamePasswordResponsePtrOutput {
	return o.ApplyT(func(v UsernamePasswordAuthTypeWorkspaceConnectionPropertiesResponse) *WorkspaceConnectionUsernamePasswordResponse {
		return v.Credentials
	}).(WorkspaceConnectionUsernamePasswordResponsePtrOutput)
}

func (o UsernamePasswordAuthTypeWorkspaceConnectionPropertiesResponseOutput) ExpiryTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UsernamePasswordAuthTypeWorkspaceConnectionPropertiesResponse) *string { return v.ExpiryTime }).(pulumi.StringPtrOutput)
}

// Group based on connection category
func (o UsernamePasswordAuthTypeWorkspaceConnectionPropertiesResponseOutput) Group() pulumi.StringOutput {
	return o.ApplyT(func(v UsernamePasswordAuthTypeWorkspaceConnectionPropertiesResponse) string { return v.Group }).(pulumi.StringOutput)
}

func (o UsernamePasswordAuthTypeWorkspaceConnectionPropertiesResponseOutput) IsSharedToAll() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v UsernamePasswordAuthTypeWorkspaceConnectionPropertiesResponse) *bool { return v.IsSharedToAll }).(pulumi.BoolPtrOutput)
}

// Store user metadata for this connection
func (o UsernamePasswordAuthTypeWorkspaceConnectionPropertiesResponseOutput) Metadata() pulumi.StringMapOutput {
	return o.ApplyT(func(v UsernamePasswordAuthTypeWorkspaceConnectionPropertiesResponse) map[string]string {
		return v.Metadata
	}).(pulumi.StringMapOutput)
}

func (o UsernamePasswordAuthTypeWorkspaceConnectionPropertiesResponseOutput) SharedUserList() pulumi.StringArrayOutput {
	return o.ApplyT(func(v UsernamePasswordAuthTypeWorkspaceConnectionPropertiesResponse) []string {
		return v.SharedUserList
	}).(pulumi.StringArrayOutput)
}

func (o UsernamePasswordAuthTypeWorkspaceConnectionPropertiesResponseOutput) Target() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UsernamePasswordAuthTypeWorkspaceConnectionPropertiesResponse) *string { return v.Target }).(pulumi.StringPtrOutput)
}

// Value details of the workspace connection.
func (o UsernamePasswordAuthTypeWorkspaceConnectionPropertiesResponseOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UsernamePasswordAuthTypeWorkspaceConnectionPropertiesResponse) *string { return v.Value }).(pulumi.StringPtrOutput)
}

// format for the workspace connection value
func (o UsernamePasswordAuthTypeWorkspaceConnectionPropertiesResponseOutput) ValueFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UsernamePasswordAuthTypeWorkspaceConnectionPropertiesResponse) *string { return v.ValueFormat }).(pulumi.StringPtrOutput)
}

// A Machine Learning compute based on Azure Virtual Machines.
type VirtualMachine struct {
	// Location for the underlying compute
	ComputeLocation *string `pulumi:"computeLocation"`
	// The type of compute
	// Expected value is 'VirtualMachine'.
	ComputeType string `pulumi:"computeType"`
	// The description of the Machine Learning compute.
	Description *string `pulumi:"description"`
	// Opt-out of local authentication and ensure customers can use only MSI and AAD exclusively for authentication.
	DisableLocalAuth *bool                           `pulumi:"disableLocalAuth"`
	Properties       *VirtualMachineSchemaProperties `pulumi:"properties"`
	// ARM resource id of the underlying compute
	ResourceId *string `pulumi:"resourceId"`
}

// VirtualMachineInput is an input type that accepts VirtualMachineArgs and VirtualMachineOutput values.
// You can construct a concrete instance of `VirtualMachineInput` via:
//
//	VirtualMachineArgs{...}
type VirtualMachineInput interface {
	pulumi.Input

	ToVirtualMachineOutput() VirtualMachineOutput
	ToVirtualMachineOutputWithContext(context.Context) VirtualMachineOutput
}

// A Machine Learning compute based on Azure Virtual Machines.
type VirtualMachineArgs struct {
	// Location for the underlying compute
	ComputeLocation pulumi.StringPtrInput `pulumi:"computeLocation"`
	// The type of compute
	// Expected value is 'VirtualMachine'.
	ComputeType pulumi.StringInput `pulumi:"computeType"`
	// The description of the Machine Learning compute.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Opt-out of local authentication and ensure customers can use only MSI and AAD exclusively for authentication.
	DisableLocalAuth pulumi.BoolPtrInput                    `pulumi:"disableLocalAuth"`
	Properties       VirtualMachineSchemaPropertiesPtrInput `pulumi:"properties"`
	// ARM resource id of the underlying compute
	ResourceId pulumi.StringPtrInput `pulumi:"resourceId"`
}

func (VirtualMachineArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachine)(nil)).Elem()
}

func (i VirtualMachineArgs) ToVirtualMachineOutput() VirtualMachineOutput {
	return i.ToVirtualMachineOutputWithContext(context.Background())
}

func (i VirtualMachineArgs) ToVirtualMachineOutputWithContext(ctx context.Context) VirtualMachineOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineOutput)
}

func (i VirtualMachineArgs) ToVirtualMachinePtrOutput() VirtualMachinePtrOutput {
	return i.ToVirtualMachinePtrOutputWithContext(context.Background())
}

func (i VirtualMachineArgs) ToVirtualMachinePtrOutputWithContext(ctx context.Context) VirtualMachinePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineOutput).ToVirtualMachinePtrOutputWithContext(ctx)
}

// VirtualMachinePtrInput is an input type that accepts VirtualMachineArgs, VirtualMachinePtr and VirtualMachinePtrOutput values.
// You can construct a concrete instance of `VirtualMachinePtrInput` via:
//
//	        VirtualMachineArgs{...}
//
//	or:
//
//	        nil
type VirtualMachinePtrInput interface {
	pulumi.Input

	ToVirtualMachinePtrOutput() VirtualMachinePtrOutput
	ToVirtualMachinePtrOutputWithContext(context.Context) VirtualMachinePtrOutput
}

type virtualMachinePtrType VirtualMachineArgs

func VirtualMachinePtr(v *VirtualMachineArgs) VirtualMachinePtrInput {
	return (*virtualMachinePtrType)(v)
}

func (*virtualMachinePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachine)(nil)).Elem()
}

func (i *virtualMachinePtrType) ToVirtualMachinePtrOutput() VirtualMachinePtrOutput {
	return i.ToVirtualMachinePtrOutputWithContext(context.Background())
}

func (i *virtualMachinePtrType) ToVirtualMachinePtrOutputWithContext(ctx context.Context) VirtualMachinePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachinePtrOutput)
}

// A Machine Learning compute based on Azure Virtual Machines.
type VirtualMachineOutput struct{ *pulumi.OutputState }

func (VirtualMachineOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachine)(nil)).Elem()
}

func (o VirtualMachineOutput) ToVirtualMachineOutput() VirtualMachineOutput {
	return o
}

func (o VirtualMachineOutput) ToVirtualMachineOutputWithContext(ctx context.Context) VirtualMachineOutput {
	return o
}

func (o VirtualMachineOutput) ToVirtualMachinePtrOutput() VirtualMachinePtrOutput {
	return o.ToVirtualMachinePtrOutputWithContext(context.Background())
}

func (o VirtualMachineOutput) ToVirtualMachinePtrOutputWithContext(ctx context.Context) VirtualMachinePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualMachine) *VirtualMachine {
		return &v
	}).(VirtualMachinePtrOutput)
}

// Location for the underlying compute
func (o VirtualMachineOutput) ComputeLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachine) *string { return v.ComputeLocation }).(pulumi.StringPtrOutput)
}

// The type of compute
// Expected value is 'VirtualMachine'.
func (o VirtualMachineOutput) ComputeType() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualMachine) string { return v.ComputeType }).(pulumi.StringOutput)
}

// The description of the Machine Learning compute.
func (o VirtualMachineOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachine) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Opt-out of local authentication and ensure customers can use only MSI and AAD exclusively for authentication.
func (o VirtualMachineOutput) DisableLocalAuth() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualMachine) *bool { return v.DisableLocalAuth }).(pulumi.BoolPtrOutput)
}

func (o VirtualMachineOutput) Properties() VirtualMachineSchemaPropertiesPtrOutput {
	return o.ApplyT(func(v VirtualMachine) *VirtualMachineSchemaProperties { return v.Properties }).(VirtualMachineSchemaPropertiesPtrOutput)
}

// ARM resource id of the underlying compute
func (o VirtualMachineOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachine) *string { return v.ResourceId }).(pulumi.StringPtrOutput)
}

type VirtualMachinePtrOutput struct{ *pulumi.OutputState }

func (VirtualMachinePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachine)(nil)).Elem()
}

func (o VirtualMachinePtrOutput) ToVirtualMachinePtrOutput() VirtualMachinePtrOutput {
	return o
}

func (o VirtualMachinePtrOutput) ToVirtualMachinePtrOutputWithContext(ctx context.Context) VirtualMachinePtrOutput {
	return o
}

func (o VirtualMachinePtrOutput) Elem() VirtualMachineOutput {
	return o.ApplyT(func(v *VirtualMachine) VirtualMachine {
		if v != nil {
			return *v
		}
		var ret VirtualMachine
		return ret
	}).(VirtualMachineOutput)
}

// Location for the underlying compute
func (o VirtualMachinePtrOutput) ComputeLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachine) *string {
		if v == nil {
			return nil
		}
		return v.ComputeLocation
	}).(pulumi.StringPtrOutput)
}

// The type of compute
// Expected value is 'VirtualMachine'.
func (o VirtualMachinePtrOutput) ComputeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachine) *string {
		if v == nil {
			return nil
		}
		return &v.ComputeType
	}).(pulumi.StringPtrOutput)
}

// The description of the Machine Learning compute.
func (o VirtualMachinePtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachine) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// Opt-out of local authentication and ensure customers can use only MSI and AAD exclusively for authentication.
func (o VirtualMachinePtrOutput) DisableLocalAuth() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VirtualMachine) *bool {
		if v == nil {
			return nil
		}
		return v.DisableLocalAuth
	}).(pulumi.BoolPtrOutput)
}

func (o VirtualMachinePtrOutput) Properties() VirtualMachineSchemaPropertiesPtrOutput {
	return o.ApplyT(func(v *VirtualMachine) *VirtualMachineSchemaProperties {
		if v == nil {
			return nil
		}
		return v.Properties
	}).(VirtualMachineSchemaPropertiesPtrOutput)
}

// ARM resource id of the underlying compute
func (o VirtualMachinePtrOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachine) *string {
		if v == nil {
			return nil
		}
		return v.ResourceId
	}).(pulumi.StringPtrOutput)
}

// Virtual Machine image for Windows AML Compute
type VirtualMachineImage struct {
	// Virtual Machine image path
	Id string `pulumi:"id"`
}

// VirtualMachineImageInput is an input type that accepts VirtualMachineImageArgs and VirtualMachineImageOutput values.
// You can construct a concrete instance of `VirtualMachineImageInput` via:
//
//	VirtualMachineImageArgs{...}
type VirtualMachineImageInput interface {
	pulumi.Input

	ToVirtualMachineImageOutput() VirtualMachineImageOutput
	ToVirtualMachineImageOutputWithContext(context.Context) VirtualMachineImageOutput
}

// Virtual Machine image for Windows AML Compute
type VirtualMachineImageArgs struct {
	// Virtual Machine image path
	Id pulumi.StringInput `pulumi:"id"`
}

func (VirtualMachineImageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineImage)(nil)).Elem()
}

func (i VirtualMachineImageArgs) ToVirtualMachineImageOutput() VirtualMachineImageOutput {
	return i.ToVirtualMachineImageOutputWithContext(context.Background())
}

func (i VirtualMachineImageArgs) ToVirtualMachineImageOutputWithContext(ctx context.Context) VirtualMachineImageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineImageOutput)
}

func (i VirtualMachineImageArgs) ToVirtualMachineImagePtrOutput() VirtualMachineImagePtrOutput {
	return i.ToVirtualMachineImagePtrOutputWithContext(context.Background())
}

func (i VirtualMachineImageArgs) ToVirtualMachineImagePtrOutputWithContext(ctx context.Context) VirtualMachineImagePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineImageOutput).ToVirtualMachineImagePtrOutputWithContext(ctx)
}

// VirtualMachineImagePtrInput is an input type that accepts VirtualMachineImageArgs, VirtualMachineImagePtr and VirtualMachineImagePtrOutput values.
// You can construct a concrete instance of `VirtualMachineImagePtrInput` via:
//
//	        VirtualMachineImageArgs{...}
//
//	or:
//
//	        nil
type VirtualMachineImagePtrInput interface {
	pulumi.Input

	ToVirtualMachineImagePtrOutput() VirtualMachineImagePtrOutput
	ToVirtualMachineImagePtrOutputWithContext(context.Context) VirtualMachineImagePtrOutput
}

type virtualMachineImagePtrType VirtualMachineImageArgs

func VirtualMachineImagePtr(v *VirtualMachineImageArgs) VirtualMachineImagePtrInput {
	return (*virtualMachineImagePtrType)(v)
}

func (*virtualMachineImagePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineImage)(nil)).Elem()
}

func (i *virtualMachineImagePtrType) ToVirtualMachineImagePtrOutput() VirtualMachineImagePtrOutput {
	return i.ToVirtualMachineImagePtrOutputWithContext(context.Background())
}

func (i *virtualMachineImagePtrType) ToVirtualMachineImagePtrOutputWithContext(ctx context.Context) VirtualMachineImagePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineImagePtrOutput)
}

// Virtual Machine image for Windows AML Compute
type VirtualMachineImageOutput struct{ *pulumi.OutputState }

func (VirtualMachineImageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineImage)(nil)).Elem()
}

func (o VirtualMachineImageOutput) ToVirtualMachineImageOutput() VirtualMachineImageOutput {
	return o
}

func (o VirtualMachineImageOutput) ToVirtualMachineImageOutputWithContext(ctx context.Context) VirtualMachineImageOutput {
	return o
}

func (o VirtualMachineImageOutput) ToVirtualMachineImagePtrOutput() VirtualMachineImagePtrOutput {
	return o.ToVirtualMachineImagePtrOutputWithContext(context.Background())
}

func (o VirtualMachineImageOutput) ToVirtualMachineImagePtrOutputWithContext(ctx context.Context) VirtualMachineImagePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualMachineImage) *VirtualMachineImage {
		return &v
	}).(VirtualMachineImagePtrOutput)
}

// Virtual Machine image path
func (o VirtualMachineImageOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualMachineImage) string { return v.Id }).(pulumi.StringOutput)
}

type VirtualMachineImagePtrOutput struct{ *pulumi.OutputState }

func (VirtualMachineImagePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineImage)(nil)).Elem()
}

func (o VirtualMachineImagePtrOutput) ToVirtualMachineImagePtrOutput() VirtualMachineImagePtrOutput {
	return o
}

func (o VirtualMachineImagePtrOutput) ToVirtualMachineImagePtrOutputWithContext(ctx context.Context) VirtualMachineImagePtrOutput {
	return o
}

func (o VirtualMachineImagePtrOutput) Elem() VirtualMachineImageOutput {
	return o.ApplyT(func(v *VirtualMachineImage) VirtualMachineImage {
		if v != nil {
			return *v
		}
		var ret VirtualMachineImage
		return ret
	}).(VirtualMachineImageOutput)
}

// Virtual Machine image path
func (o VirtualMachineImagePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineImage) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

// Virtual Machine image for Windows AML Compute
type VirtualMachineImageResponse struct {
	// Virtual Machine image path
	Id string `pulumi:"id"`
}

// Virtual Machine image for Windows AML Compute
type VirtualMachineImageResponseOutput struct{ *pulumi.OutputState }

func (VirtualMachineImageResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineImageResponse)(nil)).Elem()
}

func (o VirtualMachineImageResponseOutput) ToVirtualMachineImageResponseOutput() VirtualMachineImageResponseOutput {
	return o
}

func (o VirtualMachineImageResponseOutput) ToVirtualMachineImageResponseOutputWithContext(ctx context.Context) VirtualMachineImageResponseOutput {
	return o
}

// Virtual Machine image path
func (o VirtualMachineImageResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualMachineImageResponse) string { return v.Id }).(pulumi.StringOutput)
}

type VirtualMachineImageResponsePtrOutput struct{ *pulumi.OutputState }

func (VirtualMachineImageResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineImageResponse)(nil)).Elem()
}

func (o VirtualMachineImageResponsePtrOutput) ToVirtualMachineImageResponsePtrOutput() VirtualMachineImageResponsePtrOutput {
	return o
}

func (o VirtualMachineImageResponsePtrOutput) ToVirtualMachineImageResponsePtrOutputWithContext(ctx context.Context) VirtualMachineImageResponsePtrOutput {
	return o
}

func (o VirtualMachineImageResponsePtrOutput) Elem() VirtualMachineImageResponseOutput {
	return o.ApplyT(func(v *VirtualMachineImageResponse) VirtualMachineImageResponse {
		if v != nil {
			return *v
		}
		var ret VirtualMachineImageResponse
		return ret
	}).(VirtualMachineImageResponseOutput)
}

// Virtual Machine image path
func (o VirtualMachineImageResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineImageResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

// A Machine Learning compute based on Azure Virtual Machines.
type VirtualMachineResponse struct {
	// Location for the underlying compute
	ComputeLocation *string `pulumi:"computeLocation"`
	// The type of compute
	// Expected value is 'VirtualMachine'.
	ComputeType string `pulumi:"computeType"`
	// The time at which the compute was created.
	CreatedOn string `pulumi:"createdOn"`
	// The description of the Machine Learning compute.
	Description *string `pulumi:"description"`
	// Opt-out of local authentication and ensure customers can use only MSI and AAD exclusively for authentication.
	DisableLocalAuth *bool `pulumi:"disableLocalAuth"`
	// Indicating whether the compute was provisioned by user and brought from outside if true, or machine learning service provisioned it if false.
	IsAttachedCompute bool `pulumi:"isAttachedCompute"`
	// The time at which the compute was last modified.
	ModifiedOn string                                  `pulumi:"modifiedOn"`
	Properties *VirtualMachineSchemaResponseProperties `pulumi:"properties"`
	// Errors during provisioning
	ProvisioningErrors []ErrorResponseResponse `pulumi:"provisioningErrors"`
	// The provision state of the cluster. Valid values are Unknown, Updating, Provisioning, Succeeded, and Failed.
	ProvisioningState string `pulumi:"provisioningState"`
	// ARM resource id of the underlying compute
	ResourceId *string `pulumi:"resourceId"`
}

// A Machine Learning compute based on Azure Virtual Machines.
type VirtualMachineResponseOutput struct{ *pulumi.OutputState }

func (VirtualMachineResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineResponse)(nil)).Elem()
}

func (o VirtualMachineResponseOutput) ToVirtualMachineResponseOutput() VirtualMachineResponseOutput {
	return o
}

func (o VirtualMachineResponseOutput) ToVirtualMachineResponseOutputWithContext(ctx context.Context) VirtualMachineResponseOutput {
	return o
}

// Location for the underlying compute
func (o VirtualMachineResponseOutput) ComputeLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineResponse) *string { return v.ComputeLocation }).(pulumi.StringPtrOutput)
}

// The type of compute
// Expected value is 'VirtualMachine'.
func (o VirtualMachineResponseOutput) ComputeType() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualMachineResponse) string { return v.ComputeType }).(pulumi.StringOutput)
}

// The time at which the compute was created.
func (o VirtualMachineResponseOutput) CreatedOn() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualMachineResponse) string { return v.CreatedOn }).(pulumi.StringOutput)
}

// The description of the Machine Learning compute.
func (o VirtualMachineResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Opt-out of local authentication and ensure customers can use only MSI and AAD exclusively for authentication.
func (o VirtualMachineResponseOutput) DisableLocalAuth() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualMachineResponse) *bool { return v.DisableLocalAuth }).(pulumi.BoolPtrOutput)
}

// Indicating whether the compute was provisioned by user and brought from outside if true, or machine learning service provisioned it if false.
func (o VirtualMachineResponseOutput) IsAttachedCompute() pulumi.BoolOutput {
	return o.ApplyT(func(v VirtualMachineResponse) bool { return v.IsAttachedCompute }).(pulumi.BoolOutput)
}

// The time at which the compute was last modified.
func (o VirtualMachineResponseOutput) ModifiedOn() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualMachineResponse) string { return v.ModifiedOn }).(pulumi.StringOutput)
}

func (o VirtualMachineResponseOutput) Properties() VirtualMachineSchemaResponsePropertiesPtrOutput {
	return o.ApplyT(func(v VirtualMachineResponse) *VirtualMachineSchemaResponseProperties { return v.Properties }).(VirtualMachineSchemaResponsePropertiesPtrOutput)
}

// Errors during provisioning
func (o VirtualMachineResponseOutput) ProvisioningErrors() ErrorResponseResponseArrayOutput {
	return o.ApplyT(func(v VirtualMachineResponse) []ErrorResponseResponse { return v.ProvisioningErrors }).(ErrorResponseResponseArrayOutput)
}

// The provision state of the cluster. Valid values are Unknown, Updating, Provisioning, Succeeded, and Failed.
func (o VirtualMachineResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualMachineResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// ARM resource id of the underlying compute
func (o VirtualMachineResponseOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineResponse) *string { return v.ResourceId }).(pulumi.StringPtrOutput)
}

type VirtualMachineSchemaProperties struct {
	// Public IP address of the virtual machine.
	Address *string `pulumi:"address"`
	// Admin credentials for virtual machine
	AdministratorAccount *VirtualMachineSshCredentials `pulumi:"administratorAccount"`
	// Indicates whether this compute will be used for running notebooks.
	IsNotebookInstanceCompute *bool `pulumi:"isNotebookInstanceCompute"`
	// Notebook server port open for ssh connections.
	NotebookServerPort *int `pulumi:"notebookServerPort"`
	// Port open for ssh connections.
	SshPort *int `pulumi:"sshPort"`
	// Virtual Machine size
	VirtualMachineSize *string `pulumi:"virtualMachineSize"`
}

// VirtualMachineSchemaPropertiesInput is an input type that accepts VirtualMachineSchemaPropertiesArgs and VirtualMachineSchemaPropertiesOutput values.
// You can construct a concrete instance of `VirtualMachineSchemaPropertiesInput` via:
//
//	VirtualMachineSchemaPropertiesArgs{...}
type VirtualMachineSchemaPropertiesInput interface {
	pulumi.Input

	ToVirtualMachineSchemaPropertiesOutput() VirtualMachineSchemaPropertiesOutput
	ToVirtualMachineSchemaPropertiesOutputWithContext(context.Context) VirtualMachineSchemaPropertiesOutput
}

type VirtualMachineSchemaPropertiesArgs struct {
	// Public IP address of the virtual machine.
	Address pulumi.StringPtrInput `pulumi:"address"`
	// Admin credentials for virtual machine
	AdministratorAccount VirtualMachineSshCredentialsPtrInput `pulumi:"administratorAccount"`
	// Indicates whether this compute will be used for running notebooks.
	IsNotebookInstanceCompute pulumi.BoolPtrInput `pulumi:"isNotebookInstanceCompute"`
	// Notebook server port open for ssh connections.
	NotebookServerPort pulumi.IntPtrInput `pulumi:"notebookServerPort"`
	// Port open for ssh connections.
	SshPort pulumi.IntPtrInput `pulumi:"sshPort"`
	// Virtual Machine size
	VirtualMachineSize pulumi.StringPtrInput `pulumi:"virtualMachineSize"`
}

func (VirtualMachineSchemaPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineSchemaProperties)(nil)).Elem()
}

func (i VirtualMachineSchemaPropertiesArgs) ToVirtualMachineSchemaPropertiesOutput() VirtualMachineSchemaPropertiesOutput {
	return i.ToVirtualMachineSchemaPropertiesOutputWithContext(context.Background())
}

func (i VirtualMachineSchemaPropertiesArgs) ToVirtualMachineSchemaPropertiesOutputWithContext(ctx context.Context) VirtualMachineSchemaPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineSchemaPropertiesOutput)
}

func (i VirtualMachineSchemaPropertiesArgs) ToVirtualMachineSchemaPropertiesPtrOutput() VirtualMachineSchemaPropertiesPtrOutput {
	return i.ToVirtualMachineSchemaPropertiesPtrOutputWithContext(context.Background())
}

func (i VirtualMachineSchemaPropertiesArgs) ToVirtualMachineSchemaPropertiesPtrOutputWithContext(ctx context.Context) VirtualMachineSchemaPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineSchemaPropertiesOutput).ToVirtualMachineSchemaPropertiesPtrOutputWithContext(ctx)
}

// VirtualMachineSchemaPropertiesPtrInput is an input type that accepts VirtualMachineSchemaPropertiesArgs, VirtualMachineSchemaPropertiesPtr and VirtualMachineSchemaPropertiesPtrOutput values.
// You can construct a concrete instance of `VirtualMachineSchemaPropertiesPtrInput` via:
//
//	        VirtualMachineSchemaPropertiesArgs{...}
//
//	or:
//
//	        nil
type VirtualMachineSchemaPropertiesPtrInput interface {
	pulumi.Input

	ToVirtualMachineSchemaPropertiesPtrOutput() VirtualMachineSchemaPropertiesPtrOutput
	ToVirtualMachineSchemaPropertiesPtrOutputWithContext(context.Context) VirtualMachineSchemaPropertiesPtrOutput
}

type virtualMachineSchemaPropertiesPtrType VirtualMachineSchemaPropertiesArgs

func VirtualMachineSchemaPropertiesPtr(v *VirtualMachineSchemaPropertiesArgs) VirtualMachineSchemaPropertiesPtrInput {
	return (*virtualMachineSchemaPropertiesPtrType)(v)
}

func (*virtualMachineSchemaPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineSchemaProperties)(nil)).Elem()
}

func (i *virtualMachineSchemaPropertiesPtrType) ToVirtualMachineSchemaPropertiesPtrOutput() VirtualMachineSchemaPropertiesPtrOutput {
	return i.ToVirtualMachineSchemaPropertiesPtrOutputWithContext(context.Background())
}

func (i *virtualMachineSchemaPropertiesPtrType) ToVirtualMachineSchemaPropertiesPtrOutputWithContext(ctx context.Context) VirtualMachineSchemaPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineSchemaPropertiesPtrOutput)
}

type VirtualMachineSchemaPropertiesOutput struct{ *pulumi.OutputState }

func (VirtualMachineSchemaPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineSchemaProperties)(nil)).Elem()
}

func (o VirtualMachineSchemaPropertiesOutput) ToVirtualMachineSchemaPropertiesOutput() VirtualMachineSchemaPropertiesOutput {
	return o
}

func (o VirtualMachineSchemaPropertiesOutput) ToVirtualMachineSchemaPropertiesOutputWithContext(ctx context.Context) VirtualMachineSchemaPropertiesOutput {
	return o
}

func (o VirtualMachineSchemaPropertiesOutput) ToVirtualMachineSchemaPropertiesPtrOutput() VirtualMachineSchemaPropertiesPtrOutput {
	return o.ToVirtualMachineSchemaPropertiesPtrOutputWithContext(context.Background())
}

func (o VirtualMachineSchemaPropertiesOutput) ToVirtualMachineSchemaPropertiesPtrOutputWithContext(ctx context.Context) VirtualMachineSchemaPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualMachineSchemaProperties) *VirtualMachineSchemaProperties {
		return &v
	}).(VirtualMachineSchemaPropertiesPtrOutput)
}

// Public IP address of the virtual machine.
func (o VirtualMachineSchemaPropertiesOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineSchemaProperties) *string { return v.Address }).(pulumi.StringPtrOutput)
}

// Admin credentials for virtual machine
func (o VirtualMachineSchemaPropertiesOutput) AdministratorAccount() VirtualMachineSshCredentialsPtrOutput {
	return o.ApplyT(func(v VirtualMachineSchemaProperties) *VirtualMachineSshCredentials { return v.AdministratorAccount }).(VirtualMachineSshCredentialsPtrOutput)
}

// Indicates whether this compute will be used for running notebooks.
func (o VirtualMachineSchemaPropertiesOutput) IsNotebookInstanceCompute() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualMachineSchemaProperties) *bool { return v.IsNotebookInstanceCompute }).(pulumi.BoolPtrOutput)
}

// Notebook server port open for ssh connections.
func (o VirtualMachineSchemaPropertiesOutput) NotebookServerPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualMachineSchemaProperties) *int { return v.NotebookServerPort }).(pulumi.IntPtrOutput)
}

// Port open for ssh connections.
func (o VirtualMachineSchemaPropertiesOutput) SshPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualMachineSchemaProperties) *int { return v.SshPort }).(pulumi.IntPtrOutput)
}

// Virtual Machine size
func (o VirtualMachineSchemaPropertiesOutput) VirtualMachineSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineSchemaProperties) *string { return v.VirtualMachineSize }).(pulumi.StringPtrOutput)
}

type VirtualMachineSchemaPropertiesPtrOutput struct{ *pulumi.OutputState }

func (VirtualMachineSchemaPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineSchemaProperties)(nil)).Elem()
}

func (o VirtualMachineSchemaPropertiesPtrOutput) ToVirtualMachineSchemaPropertiesPtrOutput() VirtualMachineSchemaPropertiesPtrOutput {
	return o
}

func (o VirtualMachineSchemaPropertiesPtrOutput) ToVirtualMachineSchemaPropertiesPtrOutputWithContext(ctx context.Context) VirtualMachineSchemaPropertiesPtrOutput {
	return o
}

func (o VirtualMachineSchemaPropertiesPtrOutput) Elem() VirtualMachineSchemaPropertiesOutput {
	return o.ApplyT(func(v *VirtualMachineSchemaProperties) VirtualMachineSchemaProperties {
		if v != nil {
			return *v
		}
		var ret VirtualMachineSchemaProperties
		return ret
	}).(VirtualMachineSchemaPropertiesOutput)
}

// Public IP address of the virtual machine.
func (o VirtualMachineSchemaPropertiesPtrOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineSchemaProperties) *string {
		if v == nil {
			return nil
		}
		return v.Address
	}).(pulumi.StringPtrOutput)
}

// Admin credentials for virtual machine
func (o VirtualMachineSchemaPropertiesPtrOutput) AdministratorAccount() VirtualMachineSshCredentialsPtrOutput {
	return o.ApplyT(func(v *VirtualMachineSchemaProperties) *VirtualMachineSshCredentials {
		if v == nil {
			return nil
		}
		return v.AdministratorAccount
	}).(VirtualMachineSshCredentialsPtrOutput)
}

// Indicates whether this compute will be used for running notebooks.
func (o VirtualMachineSchemaPropertiesPtrOutput) IsNotebookInstanceCompute() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VirtualMachineSchemaProperties) *bool {
		if v == nil {
			return nil
		}
		return v.IsNotebookInstanceCompute
	}).(pulumi.BoolPtrOutput)
}

// Notebook server port open for ssh connections.
func (o VirtualMachineSchemaPropertiesPtrOutput) NotebookServerPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VirtualMachineSchemaProperties) *int {
		if v == nil {
			return nil
		}
		return v.NotebookServerPort
	}).(pulumi.IntPtrOutput)
}

// Port open for ssh connections.
func (o VirtualMachineSchemaPropertiesPtrOutput) SshPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VirtualMachineSchemaProperties) *int {
		if v == nil {
			return nil
		}
		return v.SshPort
	}).(pulumi.IntPtrOutput)
}

// Virtual Machine size
func (o VirtualMachineSchemaPropertiesPtrOutput) VirtualMachineSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineSchemaProperties) *string {
		if v == nil {
			return nil
		}
		return v.VirtualMachineSize
	}).(pulumi.StringPtrOutput)
}

type VirtualMachineSchemaResponseProperties struct {
	// Public IP address of the virtual machine.
	Address *string `pulumi:"address"`
	// Admin credentials for virtual machine
	AdministratorAccount *VirtualMachineSshCredentialsResponse `pulumi:"administratorAccount"`
	// Indicates whether this compute will be used for running notebooks.
	IsNotebookInstanceCompute *bool `pulumi:"isNotebookInstanceCompute"`
	// Notebook server port open for ssh connections.
	NotebookServerPort *int `pulumi:"notebookServerPort"`
	// Port open for ssh connections.
	SshPort *int `pulumi:"sshPort"`
	// Virtual Machine size
	VirtualMachineSize *string `pulumi:"virtualMachineSize"`
}

type VirtualMachineSchemaResponsePropertiesOutput struct{ *pulumi.OutputState }

func (VirtualMachineSchemaResponsePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineSchemaResponseProperties)(nil)).Elem()
}

func (o VirtualMachineSchemaResponsePropertiesOutput) ToVirtualMachineSchemaResponsePropertiesOutput() VirtualMachineSchemaResponsePropertiesOutput {
	return o
}

func (o VirtualMachineSchemaResponsePropertiesOutput) ToVirtualMachineSchemaResponsePropertiesOutputWithContext(ctx context.Context) VirtualMachineSchemaResponsePropertiesOutput {
	return o
}

// Public IP address of the virtual machine.
func (o VirtualMachineSchemaResponsePropertiesOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineSchemaResponseProperties) *string { return v.Address }).(pulumi.StringPtrOutput)
}

// Admin credentials for virtual machine
func (o VirtualMachineSchemaResponsePropertiesOutput) AdministratorAccount() VirtualMachineSshCredentialsResponsePtrOutput {
	return o.ApplyT(func(v VirtualMachineSchemaResponseProperties) *VirtualMachineSshCredentialsResponse {
		return v.AdministratorAccount
	}).(VirtualMachineSshCredentialsResponsePtrOutput)
}

// Indicates whether this compute will be used for running notebooks.
func (o VirtualMachineSchemaResponsePropertiesOutput) IsNotebookInstanceCompute() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualMachineSchemaResponseProperties) *bool { return v.IsNotebookInstanceCompute }).(pulumi.BoolPtrOutput)
}

// Notebook server port open for ssh connections.
func (o VirtualMachineSchemaResponsePropertiesOutput) NotebookServerPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualMachineSchemaResponseProperties) *int { return v.NotebookServerPort }).(pulumi.IntPtrOutput)
}

// Port open for ssh connections.
func (o VirtualMachineSchemaResponsePropertiesOutput) SshPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualMachineSchemaResponseProperties) *int { return v.SshPort }).(pulumi.IntPtrOutput)
}

// Virtual Machine size
func (o VirtualMachineSchemaResponsePropertiesOutput) VirtualMachineSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineSchemaResponseProperties) *string { return v.VirtualMachineSize }).(pulumi.StringPtrOutput)
}

type VirtualMachineSchemaResponsePropertiesPtrOutput struct{ *pulumi.OutputState }

func (VirtualMachineSchemaResponsePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineSchemaResponseProperties)(nil)).Elem()
}

func (o VirtualMachineSchemaResponsePropertiesPtrOutput) ToVirtualMachineSchemaResponsePropertiesPtrOutput() VirtualMachineSchemaResponsePropertiesPtrOutput {
	return o
}

func (o VirtualMachineSchemaResponsePropertiesPtrOutput) ToVirtualMachineSchemaResponsePropertiesPtrOutputWithContext(ctx context.Context) VirtualMachineSchemaResponsePropertiesPtrOutput {
	return o
}

func (o VirtualMachineSchemaResponsePropertiesPtrOutput) Elem() VirtualMachineSchemaResponsePropertiesOutput {
	return o.ApplyT(func(v *VirtualMachineSchemaResponseProperties) VirtualMachineSchemaResponseProperties {
		if v != nil {
			return *v
		}
		var ret VirtualMachineSchemaResponseProperties
		return ret
	}).(VirtualMachineSchemaResponsePropertiesOutput)
}

// Public IP address of the virtual machine.
func (o VirtualMachineSchemaResponsePropertiesPtrOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineSchemaResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.Address
	}).(pulumi.StringPtrOutput)
}

// Admin credentials for virtual machine
func (o VirtualMachineSchemaResponsePropertiesPtrOutput) AdministratorAccount() VirtualMachineSshCredentialsResponsePtrOutput {
	return o.ApplyT(func(v *VirtualMachineSchemaResponseProperties) *VirtualMachineSshCredentialsResponse {
		if v == nil {
			return nil
		}
		return v.AdministratorAccount
	}).(VirtualMachineSshCredentialsResponsePtrOutput)
}

// Indicates whether this compute will be used for running notebooks.
func (o VirtualMachineSchemaResponsePropertiesPtrOutput) IsNotebookInstanceCompute() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VirtualMachineSchemaResponseProperties) *bool {
		if v == nil {
			return nil
		}
		return v.IsNotebookInstanceCompute
	}).(pulumi.BoolPtrOutput)
}

// Notebook server port open for ssh connections.
func (o VirtualMachineSchemaResponsePropertiesPtrOutput) NotebookServerPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VirtualMachineSchemaResponseProperties) *int {
		if v == nil {
			return nil
		}
		return v.NotebookServerPort
	}).(pulumi.IntPtrOutput)
}

// Port open for ssh connections.
func (o VirtualMachineSchemaResponsePropertiesPtrOutput) SshPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VirtualMachineSchemaResponseProperties) *int {
		if v == nil {
			return nil
		}
		return v.SshPort
	}).(pulumi.IntPtrOutput)
}

// Virtual Machine size
func (o VirtualMachineSchemaResponsePropertiesPtrOutput) VirtualMachineSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineSchemaResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.VirtualMachineSize
	}).(pulumi.StringPtrOutput)
}

// Admin credentials for virtual machine
type VirtualMachineSshCredentials struct {
	// Password of admin account
	Password *string `pulumi:"password"`
	// Private key data
	PrivateKeyData *string `pulumi:"privateKeyData"`
	// Public key data
	PublicKeyData *string `pulumi:"publicKeyData"`
	// Username of admin account
	Username *string `pulumi:"username"`
}

// VirtualMachineSshCredentialsInput is an input type that accepts VirtualMachineSshCredentialsArgs and VirtualMachineSshCredentialsOutput values.
// You can construct a concrete instance of `VirtualMachineSshCredentialsInput` via:
//
//	VirtualMachineSshCredentialsArgs{...}
type VirtualMachineSshCredentialsInput interface {
	pulumi.Input

	ToVirtualMachineSshCredentialsOutput() VirtualMachineSshCredentialsOutput
	ToVirtualMachineSshCredentialsOutputWithContext(context.Context) VirtualMachineSshCredentialsOutput
}

// Admin credentials for virtual machine
type VirtualMachineSshCredentialsArgs struct {
	// Password of admin account
	Password pulumi.StringPtrInput `pulumi:"password"`
	// Private key data
	PrivateKeyData pulumi.StringPtrInput `pulumi:"privateKeyData"`
	// Public key data
	PublicKeyData pulumi.StringPtrInput `pulumi:"publicKeyData"`
	// Username of admin account
	Username pulumi.StringPtrInput `pulumi:"username"`
}

func (VirtualMachineSshCredentialsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineSshCredentials)(nil)).Elem()
}

func (i VirtualMachineSshCredentialsArgs) ToVirtualMachineSshCredentialsOutput() VirtualMachineSshCredentialsOutput {
	return i.ToVirtualMachineSshCredentialsOutputWithContext(context.Background())
}

func (i VirtualMachineSshCredentialsArgs) ToVirtualMachineSshCredentialsOutputWithContext(ctx context.Context) VirtualMachineSshCredentialsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineSshCredentialsOutput)
}

func (i VirtualMachineSshCredentialsArgs) ToVirtualMachineSshCredentialsPtrOutput() VirtualMachineSshCredentialsPtrOutput {
	return i.ToVirtualMachineSshCredentialsPtrOutputWithContext(context.Background())
}

func (i VirtualMachineSshCredentialsArgs) ToVirtualMachineSshCredentialsPtrOutputWithContext(ctx context.Context) VirtualMachineSshCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineSshCredentialsOutput).ToVirtualMachineSshCredentialsPtrOutputWithContext(ctx)
}

// VirtualMachineSshCredentialsPtrInput is an input type that accepts VirtualMachineSshCredentialsArgs, VirtualMachineSshCredentialsPtr and VirtualMachineSshCredentialsPtrOutput values.
// You can construct a concrete instance of `VirtualMachineSshCredentialsPtrInput` via:
//
//	        VirtualMachineSshCredentialsArgs{...}
//
//	or:
//
//	        nil
type VirtualMachineSshCredentialsPtrInput interface {
	pulumi.Input

	ToVirtualMachineSshCredentialsPtrOutput() VirtualMachineSshCredentialsPtrOutput
	ToVirtualMachineSshCredentialsPtrOutputWithContext(context.Context) VirtualMachineSshCredentialsPtrOutput
}

type virtualMachineSshCredentialsPtrType VirtualMachineSshCredentialsArgs

func VirtualMachineSshCredentialsPtr(v *VirtualMachineSshCredentialsArgs) VirtualMachineSshCredentialsPtrInput {
	return (*virtualMachineSshCredentialsPtrType)(v)
}

func (*virtualMachineSshCredentialsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineSshCredentials)(nil)).Elem()
}

func (i *virtualMachineSshCredentialsPtrType) ToVirtualMachineSshCredentialsPtrOutput() VirtualMachineSshCredentialsPtrOutput {
	return i.ToVirtualMachineSshCredentialsPtrOutputWithContext(context.Background())
}

func (i *virtualMachineSshCredentialsPtrType) ToVirtualMachineSshCredentialsPtrOutputWithContext(ctx context.Context) VirtualMachineSshCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineSshCredentialsPtrOutput)
}

// Admin credentials for virtual machine
type VirtualMachineSshCredentialsOutput struct{ *pulumi.OutputState }

func (VirtualMachineSshCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineSshCredentials)(nil)).Elem()
}

func (o VirtualMachineSshCredentialsOutput) ToVirtualMachineSshCredentialsOutput() VirtualMachineSshCredentialsOutput {
	return o
}

func (o VirtualMachineSshCredentialsOutput) ToVirtualMachineSshCredentialsOutputWithContext(ctx context.Context) VirtualMachineSshCredentialsOutput {
	return o
}

func (o VirtualMachineSshCredentialsOutput) ToVirtualMachineSshCredentialsPtrOutput() VirtualMachineSshCredentialsPtrOutput {
	return o.ToVirtualMachineSshCredentialsPtrOutputWithContext(context.Background())
}

func (o VirtualMachineSshCredentialsOutput) ToVirtualMachineSshCredentialsPtrOutputWithContext(ctx context.Context) VirtualMachineSshCredentialsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualMachineSshCredentials) *VirtualMachineSshCredentials {
		return &v
	}).(VirtualMachineSshCredentialsPtrOutput)
}

// Password of admin account
func (o VirtualMachineSshCredentialsOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineSshCredentials) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// Private key data
func (o VirtualMachineSshCredentialsOutput) PrivateKeyData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineSshCredentials) *string { return v.PrivateKeyData }).(pulumi.StringPtrOutput)
}

// Public key data
func (o VirtualMachineSshCredentialsOutput) PublicKeyData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineSshCredentials) *string { return v.PublicKeyData }).(pulumi.StringPtrOutput)
}

// Username of admin account
func (o VirtualMachineSshCredentialsOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineSshCredentials) *string { return v.Username }).(pulumi.StringPtrOutput)
}

type VirtualMachineSshCredentialsPtrOutput struct{ *pulumi.OutputState }

func (VirtualMachineSshCredentialsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineSshCredentials)(nil)).Elem()
}

func (o VirtualMachineSshCredentialsPtrOutput) ToVirtualMachineSshCredentialsPtrOutput() VirtualMachineSshCredentialsPtrOutput {
	return o
}

func (o VirtualMachineSshCredentialsPtrOutput) ToVirtualMachineSshCredentialsPtrOutputWithContext(ctx context.Context) VirtualMachineSshCredentialsPtrOutput {
	return o
}

func (o VirtualMachineSshCredentialsPtrOutput) Elem() VirtualMachineSshCredentialsOutput {
	return o.ApplyT(func(v *VirtualMachineSshCredentials) VirtualMachineSshCredentials {
		if v != nil {
			return *v
		}
		var ret VirtualMachineSshCredentials
		return ret
	}).(VirtualMachineSshCredentialsOutput)
}

// Password of admin account
func (o VirtualMachineSshCredentialsPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineSshCredentials) *string {
		if v == nil {
			return nil
		}
		return v.Password
	}).(pulumi.StringPtrOutput)
}

// Private key data
func (o VirtualMachineSshCredentialsPtrOutput) PrivateKeyData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineSshCredentials) *string {
		if v == nil {
			return nil
		}
		return v.PrivateKeyData
	}).(pulumi.StringPtrOutput)
}

// Public key data
func (o VirtualMachineSshCredentialsPtrOutput) PublicKeyData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineSshCredentials) *string {
		if v == nil {
			return nil
		}
		return v.PublicKeyData
	}).(pulumi.StringPtrOutput)
}

// Username of admin account
func (o VirtualMachineSshCredentialsPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineSshCredentials) *string {
		if v == nil {
			return nil
		}
		return v.Username
	}).(pulumi.StringPtrOutput)
}

// Admin credentials for virtual machine
type VirtualMachineSshCredentialsResponse struct {
	// Password of admin account
	Password *string `pulumi:"password"`
	// Private key data
	PrivateKeyData *string `pulumi:"privateKeyData"`
	// Public key data
	PublicKeyData *string `pulumi:"publicKeyData"`
	// Username of admin account
	Username *string `pulumi:"username"`
}

// Admin credentials for virtual machine
type VirtualMachineSshCredentialsResponseOutput struct{ *pulumi.OutputState }

func (VirtualMachineSshCredentialsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineSshCredentialsResponse)(nil)).Elem()
}

func (o VirtualMachineSshCredentialsResponseOutput) ToVirtualMachineSshCredentialsResponseOutput() VirtualMachineSshCredentialsResponseOutput {
	return o
}

func (o VirtualMachineSshCredentialsResponseOutput) ToVirtualMachineSshCredentialsResponseOutputWithContext(ctx context.Context) VirtualMachineSshCredentialsResponseOutput {
	return o
}

// Password of admin account
func (o VirtualMachineSshCredentialsResponseOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineSshCredentialsResponse) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// Private key data
func (o VirtualMachineSshCredentialsResponseOutput) PrivateKeyData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineSshCredentialsResponse) *string { return v.PrivateKeyData }).(pulumi.StringPtrOutput)
}

// Public key data
func (o VirtualMachineSshCredentialsResponseOutput) PublicKeyData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineSshCredentialsResponse) *string { return v.PublicKeyData }).(pulumi.StringPtrOutput)
}

// Username of admin account
func (o VirtualMachineSshCredentialsResponseOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineSshCredentialsResponse) *string { return v.Username }).(pulumi.StringPtrOutput)
}

type VirtualMachineSshCredentialsResponsePtrOutput struct{ *pulumi.OutputState }

func (VirtualMachineSshCredentialsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineSshCredentialsResponse)(nil)).Elem()
}

func (o VirtualMachineSshCredentialsResponsePtrOutput) ToVirtualMachineSshCredentialsResponsePtrOutput() VirtualMachineSshCredentialsResponsePtrOutput {
	return o
}

func (o VirtualMachineSshCredentialsResponsePtrOutput) ToVirtualMachineSshCredentialsResponsePtrOutputWithContext(ctx context.Context) VirtualMachineSshCredentialsResponsePtrOutput {
	return o
}

func (o VirtualMachineSshCredentialsResponsePtrOutput) Elem() VirtualMachineSshCredentialsResponseOutput {
	return o.ApplyT(func(v *VirtualMachineSshCredentialsResponse) VirtualMachineSshCredentialsResponse {
		if v != nil {
			return *v
		}
		var ret VirtualMachineSshCredentialsResponse
		return ret
	}).(VirtualMachineSshCredentialsResponseOutput)
}

// Password of admin account
func (o VirtualMachineSshCredentialsResponsePtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineSshCredentialsResponse) *string {
		if v == nil {
			return nil
		}
		return v.Password
	}).(pulumi.StringPtrOutput)
}

// Private key data
func (o VirtualMachineSshCredentialsResponsePtrOutput) PrivateKeyData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineSshCredentialsResponse) *string {
		if v == nil {
			return nil
		}
		return v.PrivateKeyData
	}).(pulumi.StringPtrOutput)
}

// Public key data
func (o VirtualMachineSshCredentialsResponsePtrOutput) PublicKeyData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineSshCredentialsResponse) *string {
		if v == nil {
			return nil
		}
		return v.PublicKeyData
	}).(pulumi.StringPtrOutput)
}

// Username of admin account
func (o VirtualMachineSshCredentialsResponsePtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineSshCredentialsResponse) *string {
		if v == nil {
			return nil
		}
		return v.Username
	}).(pulumi.StringPtrOutput)
}

// Describes the volume configuration for the container
type VolumeDefinition struct {
	// Bind Options of the mount
	Bind *BindOptions `pulumi:"bind"`
	// Consistency of the volume
	Consistency *string `pulumi:"consistency"`
	// Indicate whether to mount volume as readOnly. Default value for this is false.
	ReadOnly *bool `pulumi:"readOnly"`
	// Source of the mount. For bind mounts this is the host path.
	Source *string `pulumi:"source"`
	// Target of the mount. For bind mounts this is the path in the container.
	Target *string `pulumi:"target"`
	// tmpfs option of the mount
	Tmpfs *TmpfsOptions `pulumi:"tmpfs"`
	// Type of Volume Definition. Possible Values: bind,volume,tmpfs,npipe
	Type *string `pulumi:"type"`
	// Volume Options of the mount
	Volume *VolumeOptions `pulumi:"volume"`
}

// Defaults sets the appropriate defaults for VolumeDefinition
func (val *VolumeDefinition) Defaults() *VolumeDefinition {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Type == nil {
		type_ := "bind"
		tmp.Type = &type_
	}
	return &tmp
}

// VolumeDefinitionInput is an input type that accepts VolumeDefinitionArgs and VolumeDefinitionOutput values.
// You can construct a concrete instance of `VolumeDefinitionInput` via:
//
//	VolumeDefinitionArgs{...}
type VolumeDefinitionInput interface {
	pulumi.Input

	ToVolumeDefinitionOutput() VolumeDefinitionOutput
	ToVolumeDefinitionOutputWithContext(context.Context) VolumeDefinitionOutput
}

// Describes the volume configuration for the container
type VolumeDefinitionArgs struct {
	// Bind Options of the mount
	Bind BindOptionsPtrInput `pulumi:"bind"`
	// Consistency of the volume
	Consistency pulumi.StringPtrInput `pulumi:"consistency"`
	// Indicate whether to mount volume as readOnly. Default value for this is false.
	ReadOnly pulumi.BoolPtrInput `pulumi:"readOnly"`
	// Source of the mount. For bind mounts this is the host path.
	Source pulumi.StringPtrInput `pulumi:"source"`
	// Target of the mount. For bind mounts this is the path in the container.
	Target pulumi.StringPtrInput `pulumi:"target"`
	// tmpfs option of the mount
	Tmpfs TmpfsOptionsPtrInput `pulumi:"tmpfs"`
	// Type of Volume Definition. Possible Values: bind,volume,tmpfs,npipe
	Type pulumi.StringPtrInput `pulumi:"type"`
	// Volume Options of the mount
	Volume VolumeOptionsPtrInput `pulumi:"volume"`
}

// Defaults sets the appropriate defaults for VolumeDefinitionArgs
func (val *VolumeDefinitionArgs) Defaults() *VolumeDefinitionArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Type == nil {
		tmp.Type = pulumi.StringPtr("bind")
	}
	return &tmp
}
func (VolumeDefinitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VolumeDefinition)(nil)).Elem()
}

func (i VolumeDefinitionArgs) ToVolumeDefinitionOutput() VolumeDefinitionOutput {
	return i.ToVolumeDefinitionOutputWithContext(context.Background())
}

func (i VolumeDefinitionArgs) ToVolumeDefinitionOutputWithContext(ctx context.Context) VolumeDefinitionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VolumeDefinitionOutput)
}

// VolumeDefinitionArrayInput is an input type that accepts VolumeDefinitionArray and VolumeDefinitionArrayOutput values.
// You can construct a concrete instance of `VolumeDefinitionArrayInput` via:
//
//	VolumeDefinitionArray{ VolumeDefinitionArgs{...} }
type VolumeDefinitionArrayInput interface {
	pulumi.Input

	ToVolumeDefinitionArrayOutput() VolumeDefinitionArrayOutput
	ToVolumeDefinitionArrayOutputWithContext(context.Context) VolumeDefinitionArrayOutput
}

type VolumeDefinitionArray []VolumeDefinitionInput

func (VolumeDefinitionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VolumeDefinition)(nil)).Elem()
}

func (i VolumeDefinitionArray) ToVolumeDefinitionArrayOutput() VolumeDefinitionArrayOutput {
	return i.ToVolumeDefinitionArrayOutputWithContext(context.Background())
}

func (i VolumeDefinitionArray) ToVolumeDefinitionArrayOutputWithContext(ctx context.Context) VolumeDefinitionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VolumeDefinitionArrayOutput)
}

// Describes the volume configuration for the container
type VolumeDefinitionOutput struct{ *pulumi.OutputState }

func (VolumeDefinitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VolumeDefinition)(nil)).Elem()
}

func (o VolumeDefinitionOutput) ToVolumeDefinitionOutput() VolumeDefinitionOutput {
	return o
}

func (o VolumeDefinitionOutput) ToVolumeDefinitionOutputWithContext(ctx context.Context) VolumeDefinitionOutput {
	return o
}

// Bind Options of the mount
func (o VolumeDefinitionOutput) Bind() BindOptionsPtrOutput {
	return o.ApplyT(func(v VolumeDefinition) *BindOptions { return v.Bind }).(BindOptionsPtrOutput)
}

// Consistency of the volume
func (o VolumeDefinitionOutput) Consistency() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VolumeDefinition) *string { return v.Consistency }).(pulumi.StringPtrOutput)
}

// Indicate whether to mount volume as readOnly. Default value for this is false.
func (o VolumeDefinitionOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VolumeDefinition) *bool { return v.ReadOnly }).(pulumi.BoolPtrOutput)
}

// Source of the mount. For bind mounts this is the host path.
func (o VolumeDefinitionOutput) Source() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VolumeDefinition) *string { return v.Source }).(pulumi.StringPtrOutput)
}

// Target of the mount. For bind mounts this is the path in the container.
func (o VolumeDefinitionOutput) Target() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VolumeDefinition) *string { return v.Target }).(pulumi.StringPtrOutput)
}

// tmpfs option of the mount
func (o VolumeDefinitionOutput) Tmpfs() TmpfsOptionsPtrOutput {
	return o.ApplyT(func(v VolumeDefinition) *TmpfsOptions { return v.Tmpfs }).(TmpfsOptionsPtrOutput)
}

// Type of Volume Definition. Possible Values: bind,volume,tmpfs,npipe
func (o VolumeDefinitionOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VolumeDefinition) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// Volume Options of the mount
func (o VolumeDefinitionOutput) Volume() VolumeOptionsPtrOutput {
	return o.ApplyT(func(v VolumeDefinition) *VolumeOptions { return v.Volume }).(VolumeOptionsPtrOutput)
}

type VolumeDefinitionArrayOutput struct{ *pulumi.OutputState }

func (VolumeDefinitionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VolumeDefinition)(nil)).Elem()
}

func (o VolumeDefinitionArrayOutput) ToVolumeDefinitionArrayOutput() VolumeDefinitionArrayOutput {
	return o
}

func (o VolumeDefinitionArrayOutput) ToVolumeDefinitionArrayOutputWithContext(ctx context.Context) VolumeDefinitionArrayOutput {
	return o
}

func (o VolumeDefinitionArrayOutput) Index(i pulumi.IntInput) VolumeDefinitionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VolumeDefinition {
		return vs[0].([]VolumeDefinition)[vs[1].(int)]
	}).(VolumeDefinitionOutput)
}

// Describes the volume configuration for the container
type VolumeDefinitionResponse struct {
	// Bind Options of the mount
	Bind *BindOptionsResponse `pulumi:"bind"`
	// Consistency of the volume
	Consistency *string `pulumi:"consistency"`
	// Indicate whether to mount volume as readOnly. Default value for this is false.
	ReadOnly *bool `pulumi:"readOnly"`
	// Source of the mount. For bind mounts this is the host path.
	Source *string `pulumi:"source"`
	// Target of the mount. For bind mounts this is the path in the container.
	Target *string `pulumi:"target"`
	// tmpfs option of the mount
	Tmpfs *TmpfsOptionsResponse `pulumi:"tmpfs"`
	// Type of Volume Definition. Possible Values: bind,volume,tmpfs,npipe
	Type *string `pulumi:"type"`
	// Volume Options of the mount
	Volume *VolumeOptionsResponse `pulumi:"volume"`
}

// Defaults sets the appropriate defaults for VolumeDefinitionResponse
func (val *VolumeDefinitionResponse) Defaults() *VolumeDefinitionResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Type == nil {
		type_ := "bind"
		tmp.Type = &type_
	}
	return &tmp
}

// Describes the volume configuration for the container
type VolumeDefinitionResponseOutput struct{ *pulumi.OutputState }

func (VolumeDefinitionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VolumeDefinitionResponse)(nil)).Elem()
}

func (o VolumeDefinitionResponseOutput) ToVolumeDefinitionResponseOutput() VolumeDefinitionResponseOutput {
	return o
}

func (o VolumeDefinitionResponseOutput) ToVolumeDefinitionResponseOutputWithContext(ctx context.Context) VolumeDefinitionResponseOutput {
	return o
}

// Bind Options of the mount
func (o VolumeDefinitionResponseOutput) Bind() BindOptionsResponsePtrOutput {
	return o.ApplyT(func(v VolumeDefinitionResponse) *BindOptionsResponse { return v.Bind }).(BindOptionsResponsePtrOutput)
}

// Consistency of the volume
func (o VolumeDefinitionResponseOutput) Consistency() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VolumeDefinitionResponse) *string { return v.Consistency }).(pulumi.StringPtrOutput)
}

// Indicate whether to mount volume as readOnly. Default value for this is false.
func (o VolumeDefinitionResponseOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VolumeDefinitionResponse) *bool { return v.ReadOnly }).(pulumi.BoolPtrOutput)
}

// Source of the mount. For bind mounts this is the host path.
func (o VolumeDefinitionResponseOutput) Source() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VolumeDefinitionResponse) *string { return v.Source }).(pulumi.StringPtrOutput)
}

// Target of the mount. For bind mounts this is the path in the container.
func (o VolumeDefinitionResponseOutput) Target() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VolumeDefinitionResponse) *string { return v.Target }).(pulumi.StringPtrOutput)
}

// tmpfs option of the mount
func (o VolumeDefinitionResponseOutput) Tmpfs() TmpfsOptionsResponsePtrOutput {
	return o.ApplyT(func(v VolumeDefinitionResponse) *TmpfsOptionsResponse { return v.Tmpfs }).(TmpfsOptionsResponsePtrOutput)
}

// Type of Volume Definition. Possible Values: bind,volume,tmpfs,npipe
func (o VolumeDefinitionResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VolumeDefinitionResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// Volume Options of the mount
func (o VolumeDefinitionResponseOutput) Volume() VolumeOptionsResponsePtrOutput {
	return o.ApplyT(func(v VolumeDefinitionResponse) *VolumeOptionsResponse { return v.Volume }).(VolumeOptionsResponsePtrOutput)
}

type VolumeDefinitionResponseArrayOutput struct{ *pulumi.OutputState }

func (VolumeDefinitionResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VolumeDefinitionResponse)(nil)).Elem()
}

func (o VolumeDefinitionResponseArrayOutput) ToVolumeDefinitionResponseArrayOutput() VolumeDefinitionResponseArrayOutput {
	return o
}

func (o VolumeDefinitionResponseArrayOutput) ToVolumeDefinitionResponseArrayOutputWithContext(ctx context.Context) VolumeDefinitionResponseArrayOutput {
	return o
}

func (o VolumeDefinitionResponseArrayOutput) Index(i pulumi.IntInput) VolumeDefinitionResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VolumeDefinitionResponse {
		return vs[0].([]VolumeDefinitionResponse)[vs[1].(int)]
	}).(VolumeDefinitionResponseOutput)
}

// Describes the volume options for the container
type VolumeOptions struct {
	// Indicate whether volume is nocopy
	Nocopy *bool `pulumi:"nocopy"`
}

// VolumeOptionsInput is an input type that accepts VolumeOptionsArgs and VolumeOptionsOutput values.
// You can construct a concrete instance of `VolumeOptionsInput` via:
//
//	VolumeOptionsArgs{...}
type VolumeOptionsInput interface {
	pulumi.Input

	ToVolumeOptionsOutput() VolumeOptionsOutput
	ToVolumeOptionsOutputWithContext(context.Context) VolumeOptionsOutput
}

// Describes the volume options for the container
type VolumeOptionsArgs struct {
	// Indicate whether volume is nocopy
	Nocopy pulumi.BoolPtrInput `pulumi:"nocopy"`
}

func (VolumeOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VolumeOptions)(nil)).Elem()
}

func (i VolumeOptionsArgs) ToVolumeOptionsOutput() VolumeOptionsOutput {
	return i.ToVolumeOptionsOutputWithContext(context.Background())
}

func (i VolumeOptionsArgs) ToVolumeOptionsOutputWithContext(ctx context.Context) VolumeOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VolumeOptionsOutput)
}

func (i VolumeOptionsArgs) ToVolumeOptionsPtrOutput() VolumeOptionsPtrOutput {
	return i.ToVolumeOptionsPtrOutputWithContext(context.Background())
}

func (i VolumeOptionsArgs) ToVolumeOptionsPtrOutputWithContext(ctx context.Context) VolumeOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VolumeOptionsOutput).ToVolumeOptionsPtrOutputWithContext(ctx)
}

// VolumeOptionsPtrInput is an input type that accepts VolumeOptionsArgs, VolumeOptionsPtr and VolumeOptionsPtrOutput values.
// You can construct a concrete instance of `VolumeOptionsPtrInput` via:
//
//	        VolumeOptionsArgs{...}
//
//	or:
//
//	        nil
type VolumeOptionsPtrInput interface {
	pulumi.Input

	ToVolumeOptionsPtrOutput() VolumeOptionsPtrOutput
	ToVolumeOptionsPtrOutputWithContext(context.Context) VolumeOptionsPtrOutput
}

type volumeOptionsPtrType VolumeOptionsArgs

func VolumeOptionsPtr(v *VolumeOptionsArgs) VolumeOptionsPtrInput {
	return (*volumeOptionsPtrType)(v)
}

func (*volumeOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VolumeOptions)(nil)).Elem()
}

func (i *volumeOptionsPtrType) ToVolumeOptionsPtrOutput() VolumeOptionsPtrOutput {
	return i.ToVolumeOptionsPtrOutputWithContext(context.Background())
}

func (i *volumeOptionsPtrType) ToVolumeOptionsPtrOutputWithContext(ctx context.Context) VolumeOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VolumeOptionsPtrOutput)
}

// Describes the volume options for the container
type VolumeOptionsOutput struct{ *pulumi.OutputState }

func (VolumeOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VolumeOptions)(nil)).Elem()
}

func (o VolumeOptionsOutput) ToVolumeOptionsOutput() VolumeOptionsOutput {
	return o
}

func (o VolumeOptionsOutput) ToVolumeOptionsOutputWithContext(ctx context.Context) VolumeOptionsOutput {
	return o
}

func (o VolumeOptionsOutput) ToVolumeOptionsPtrOutput() VolumeOptionsPtrOutput {
	return o.ToVolumeOptionsPtrOutputWithContext(context.Background())
}

func (o VolumeOptionsOutput) ToVolumeOptionsPtrOutputWithContext(ctx context.Context) VolumeOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VolumeOptions) *VolumeOptions {
		return &v
	}).(VolumeOptionsPtrOutput)
}

// Indicate whether volume is nocopy
func (o VolumeOptionsOutput) Nocopy() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VolumeOptions) *bool { return v.Nocopy }).(pulumi.BoolPtrOutput)
}

type VolumeOptionsPtrOutput struct{ *pulumi.OutputState }

func (VolumeOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VolumeOptions)(nil)).Elem()
}

func (o VolumeOptionsPtrOutput) ToVolumeOptionsPtrOutput() VolumeOptionsPtrOutput {
	return o
}

func (o VolumeOptionsPtrOutput) ToVolumeOptionsPtrOutputWithContext(ctx context.Context) VolumeOptionsPtrOutput {
	return o
}

func (o VolumeOptionsPtrOutput) Elem() VolumeOptionsOutput {
	return o.ApplyT(func(v *VolumeOptions) VolumeOptions {
		if v != nil {
			return *v
		}
		var ret VolumeOptions
		return ret
	}).(VolumeOptionsOutput)
}

// Indicate whether volume is nocopy
func (o VolumeOptionsPtrOutput) Nocopy() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VolumeOptions) *bool {
		if v == nil {
			return nil
		}
		return v.Nocopy
	}).(pulumi.BoolPtrOutput)
}

// Describes the volume options for the container
type VolumeOptionsResponse struct {
	// Indicate whether volume is nocopy
	Nocopy *bool `pulumi:"nocopy"`
}

// Describes the volume options for the container
type VolumeOptionsResponseOutput struct{ *pulumi.OutputState }

func (VolumeOptionsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VolumeOptionsResponse)(nil)).Elem()
}

func (o VolumeOptionsResponseOutput) ToVolumeOptionsResponseOutput() VolumeOptionsResponseOutput {
	return o
}

func (o VolumeOptionsResponseOutput) ToVolumeOptionsResponseOutputWithContext(ctx context.Context) VolumeOptionsResponseOutput {
	return o
}

// Indicate whether volume is nocopy
func (o VolumeOptionsResponseOutput) Nocopy() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VolumeOptionsResponse) *bool { return v.Nocopy }).(pulumi.BoolPtrOutput)
}

type VolumeOptionsResponsePtrOutput struct{ *pulumi.OutputState }

func (VolumeOptionsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VolumeOptionsResponse)(nil)).Elem()
}

func (o VolumeOptionsResponsePtrOutput) ToVolumeOptionsResponsePtrOutput() VolumeOptionsResponsePtrOutput {
	return o
}

func (o VolumeOptionsResponsePtrOutput) ToVolumeOptionsResponsePtrOutputWithContext(ctx context.Context) VolumeOptionsResponsePtrOutput {
	return o
}

func (o VolumeOptionsResponsePtrOutput) Elem() VolumeOptionsResponseOutput {
	return o.ApplyT(func(v *VolumeOptionsResponse) VolumeOptionsResponse {
		if v != nil {
			return *v
		}
		var ret VolumeOptionsResponse
		return ret
	}).(VolumeOptionsResponseOutput)
}

// Indicate whether volume is nocopy
func (o VolumeOptionsResponsePtrOutput) Nocopy() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VolumeOptionsResponse) *bool {
		if v == nil {
			return nil
		}
		return v.Nocopy
	}).(pulumi.BoolPtrOutput)
}

type WorkspaceConnectionAccessKey struct {
	AccessKeyId     *string `pulumi:"accessKeyId"`
	SecretAccessKey *string `pulumi:"secretAccessKey"`
}

// WorkspaceConnectionAccessKeyInput is an input type that accepts WorkspaceConnectionAccessKeyArgs and WorkspaceConnectionAccessKeyOutput values.
// You can construct a concrete instance of `WorkspaceConnectionAccessKeyInput` via:
//
//	WorkspaceConnectionAccessKeyArgs{...}
type WorkspaceConnectionAccessKeyInput interface {
	pulumi.Input

	ToWorkspaceConnectionAccessKeyOutput() WorkspaceConnectionAccessKeyOutput
	ToWorkspaceConnectionAccessKeyOutputWithContext(context.Context) WorkspaceConnectionAccessKeyOutput
}

type WorkspaceConnectionAccessKeyArgs struct {
	AccessKeyId     pulumi.StringPtrInput `pulumi:"accessKeyId"`
	SecretAccessKey pulumi.StringPtrInput `pulumi:"secretAccessKey"`
}

func (WorkspaceConnectionAccessKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspaceConnectionAccessKey)(nil)).Elem()
}

func (i WorkspaceConnectionAccessKeyArgs) ToWorkspaceConnectionAccessKeyOutput() WorkspaceConnectionAccessKeyOutput {
	return i.ToWorkspaceConnectionAccessKeyOutputWithContext(context.Background())
}

func (i WorkspaceConnectionAccessKeyArgs) ToWorkspaceConnectionAccessKeyOutputWithContext(ctx context.Context) WorkspaceConnectionAccessKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceConnectionAccessKeyOutput)
}

func (i WorkspaceConnectionAccessKeyArgs) ToWorkspaceConnectionAccessKeyPtrOutput() WorkspaceConnectionAccessKeyPtrOutput {
	return i.ToWorkspaceConnectionAccessKeyPtrOutputWithContext(context.Background())
}

func (i WorkspaceConnectionAccessKeyArgs) ToWorkspaceConnectionAccessKeyPtrOutputWithContext(ctx context.Context) WorkspaceConnectionAccessKeyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceConnectionAccessKeyOutput).ToWorkspaceConnectionAccessKeyPtrOutputWithContext(ctx)
}

// WorkspaceConnectionAccessKeyPtrInput is an input type that accepts WorkspaceConnectionAccessKeyArgs, WorkspaceConnectionAccessKeyPtr and WorkspaceConnectionAccessKeyPtrOutput values.
// You can construct a concrete instance of `WorkspaceConnectionAccessKeyPtrInput` via:
//
//	        WorkspaceConnectionAccessKeyArgs{...}
//
//	or:
//
//	        nil
type WorkspaceConnectionAccessKeyPtrInput interface {
	pulumi.Input

	ToWorkspaceConnectionAccessKeyPtrOutput() WorkspaceConnectionAccessKeyPtrOutput
	ToWorkspaceConnectionAccessKeyPtrOutputWithContext(context.Context) WorkspaceConnectionAccessKeyPtrOutput
}

type workspaceConnectionAccessKeyPtrType WorkspaceConnectionAccessKeyArgs

func WorkspaceConnectionAccessKeyPtr(v *WorkspaceConnectionAccessKeyArgs) WorkspaceConnectionAccessKeyPtrInput {
	return (*workspaceConnectionAccessKeyPtrType)(v)
}

func (*workspaceConnectionAccessKeyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkspaceConnectionAccessKey)(nil)).Elem()
}

func (i *workspaceConnectionAccessKeyPtrType) ToWorkspaceConnectionAccessKeyPtrOutput() WorkspaceConnectionAccessKeyPtrOutput {
	return i.ToWorkspaceConnectionAccessKeyPtrOutputWithContext(context.Background())
}

func (i *workspaceConnectionAccessKeyPtrType) ToWorkspaceConnectionAccessKeyPtrOutputWithContext(ctx context.Context) WorkspaceConnectionAccessKeyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceConnectionAccessKeyPtrOutput)
}

type WorkspaceConnectionAccessKeyOutput struct{ *pulumi.OutputState }

func (WorkspaceConnectionAccessKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspaceConnectionAccessKey)(nil)).Elem()
}

func (o WorkspaceConnectionAccessKeyOutput) ToWorkspaceConnectionAccessKeyOutput() WorkspaceConnectionAccessKeyOutput {
	return o
}

func (o WorkspaceConnectionAccessKeyOutput) ToWorkspaceConnectionAccessKeyOutputWithContext(ctx context.Context) WorkspaceConnectionAccessKeyOutput {
	return o
}

func (o WorkspaceConnectionAccessKeyOutput) ToWorkspaceConnectionAccessKeyPtrOutput() WorkspaceConnectionAccessKeyPtrOutput {
	return o.ToWorkspaceConnectionAccessKeyPtrOutputWithContext(context.Background())
}

func (o WorkspaceConnectionAccessKeyOutput) ToWorkspaceConnectionAccessKeyPtrOutputWithContext(ctx context.Context) WorkspaceConnectionAccessKeyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkspaceConnectionAccessKey) *WorkspaceConnectionAccessKey {
		return &v
	}).(WorkspaceConnectionAccessKeyPtrOutput)
}

func (o WorkspaceConnectionAccessKeyOutput) AccessKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkspaceConnectionAccessKey) *string { return v.AccessKeyId }).(pulumi.StringPtrOutput)
}

func (o WorkspaceConnectionAccessKeyOutput) SecretAccessKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkspaceConnectionAccessKey) *string { return v.SecretAccessKey }).(pulumi.StringPtrOutput)
}

type WorkspaceConnectionAccessKeyPtrOutput struct{ *pulumi.OutputState }

func (WorkspaceConnectionAccessKeyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkspaceConnectionAccessKey)(nil)).Elem()
}

func (o WorkspaceConnectionAccessKeyPtrOutput) ToWorkspaceConnectionAccessKeyPtrOutput() WorkspaceConnectionAccessKeyPtrOutput {
	return o
}

func (o WorkspaceConnectionAccessKeyPtrOutput) ToWorkspaceConnectionAccessKeyPtrOutputWithContext(ctx context.Context) WorkspaceConnectionAccessKeyPtrOutput {
	return o
}

func (o WorkspaceConnectionAccessKeyPtrOutput) Elem() WorkspaceConnectionAccessKeyOutput {
	return o.ApplyT(func(v *WorkspaceConnectionAccessKey) WorkspaceConnectionAccessKey {
		if v != nil {
			return *v
		}
		var ret WorkspaceConnectionAccessKey
		return ret
	}).(WorkspaceConnectionAccessKeyOutput)
}

func (o WorkspaceConnectionAccessKeyPtrOutput) AccessKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceConnectionAccessKey) *string {
		if v == nil {
			return nil
		}
		return v.AccessKeyId
	}).(pulumi.StringPtrOutput)
}

func (o WorkspaceConnectionAccessKeyPtrOutput) SecretAccessKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceConnectionAccessKey) *string {
		if v == nil {
			return nil
		}
		return v.SecretAccessKey
	}).(pulumi.StringPtrOutput)
}

type WorkspaceConnectionAccessKeyResponse struct {
	AccessKeyId     *string `pulumi:"accessKeyId"`
	SecretAccessKey *string `pulumi:"secretAccessKey"`
}

type WorkspaceConnectionAccessKeyResponseOutput struct{ *pulumi.OutputState }

func (WorkspaceConnectionAccessKeyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspaceConnectionAccessKeyResponse)(nil)).Elem()
}

func (o WorkspaceConnectionAccessKeyResponseOutput) ToWorkspaceConnectionAccessKeyResponseOutput() WorkspaceConnectionAccessKeyResponseOutput {
	return o
}

func (o WorkspaceConnectionAccessKeyResponseOutput) ToWorkspaceConnectionAccessKeyResponseOutputWithContext(ctx context.Context) WorkspaceConnectionAccessKeyResponseOutput {
	return o
}

func (o WorkspaceConnectionAccessKeyResponseOutput) AccessKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkspaceConnectionAccessKeyResponse) *string { return v.AccessKeyId }).(pulumi.StringPtrOutput)
}

func (o WorkspaceConnectionAccessKeyResponseOutput) SecretAccessKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkspaceConnectionAccessKeyResponse) *string { return v.SecretAccessKey }).(pulumi.StringPtrOutput)
}

type WorkspaceConnectionAccessKeyResponsePtrOutput struct{ *pulumi.OutputState }

func (WorkspaceConnectionAccessKeyResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkspaceConnectionAccessKeyResponse)(nil)).Elem()
}

func (o WorkspaceConnectionAccessKeyResponsePtrOutput) ToWorkspaceConnectionAccessKeyResponsePtrOutput() WorkspaceConnectionAccessKeyResponsePtrOutput {
	return o
}

func (o WorkspaceConnectionAccessKeyResponsePtrOutput) ToWorkspaceConnectionAccessKeyResponsePtrOutputWithContext(ctx context.Context) WorkspaceConnectionAccessKeyResponsePtrOutput {
	return o
}

func (o WorkspaceConnectionAccessKeyResponsePtrOutput) Elem() WorkspaceConnectionAccessKeyResponseOutput {
	return o.ApplyT(func(v *WorkspaceConnectionAccessKeyResponse) WorkspaceConnectionAccessKeyResponse {
		if v != nil {
			return *v
		}
		var ret WorkspaceConnectionAccessKeyResponse
		return ret
	}).(WorkspaceConnectionAccessKeyResponseOutput)
}

func (o WorkspaceConnectionAccessKeyResponsePtrOutput) AccessKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceConnectionAccessKeyResponse) *string {
		if v == nil {
			return nil
		}
		return v.AccessKeyId
	}).(pulumi.StringPtrOutput)
}

func (o WorkspaceConnectionAccessKeyResponsePtrOutput) SecretAccessKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceConnectionAccessKeyResponse) *string {
		if v == nil {
			return nil
		}
		return v.SecretAccessKey
	}).(pulumi.StringPtrOutput)
}

// Api key object for workspace connection credential.
type WorkspaceConnectionApiKey struct {
	Key *string `pulumi:"key"`
}

// WorkspaceConnectionApiKeyInput is an input type that accepts WorkspaceConnectionApiKeyArgs and WorkspaceConnectionApiKeyOutput values.
// You can construct a concrete instance of `WorkspaceConnectionApiKeyInput` via:
//
//	WorkspaceConnectionApiKeyArgs{...}
type WorkspaceConnectionApiKeyInput interface {
	pulumi.Input

	ToWorkspaceConnectionApiKeyOutput() WorkspaceConnectionApiKeyOutput
	ToWorkspaceConnectionApiKeyOutputWithContext(context.Context) WorkspaceConnectionApiKeyOutput
}

// Api key object for workspace connection credential.
type WorkspaceConnectionApiKeyArgs struct {
	Key pulumi.StringPtrInput `pulumi:"key"`
}

func (WorkspaceConnectionApiKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspaceConnectionApiKey)(nil)).Elem()
}

func (i WorkspaceConnectionApiKeyArgs) ToWorkspaceConnectionApiKeyOutput() WorkspaceConnectionApiKeyOutput {
	return i.ToWorkspaceConnectionApiKeyOutputWithContext(context.Background())
}

func (i WorkspaceConnectionApiKeyArgs) ToWorkspaceConnectionApiKeyOutputWithContext(ctx context.Context) WorkspaceConnectionApiKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceConnectionApiKeyOutput)
}

func (i WorkspaceConnectionApiKeyArgs) ToWorkspaceConnectionApiKeyPtrOutput() WorkspaceConnectionApiKeyPtrOutput {
	return i.ToWorkspaceConnectionApiKeyPtrOutputWithContext(context.Background())
}

func (i WorkspaceConnectionApiKeyArgs) ToWorkspaceConnectionApiKeyPtrOutputWithContext(ctx context.Context) WorkspaceConnectionApiKeyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceConnectionApiKeyOutput).ToWorkspaceConnectionApiKeyPtrOutputWithContext(ctx)
}

// WorkspaceConnectionApiKeyPtrInput is an input type that accepts WorkspaceConnectionApiKeyArgs, WorkspaceConnectionApiKeyPtr and WorkspaceConnectionApiKeyPtrOutput values.
// You can construct a concrete instance of `WorkspaceConnectionApiKeyPtrInput` via:
//
//	        WorkspaceConnectionApiKeyArgs{...}
//
//	or:
//
//	        nil
type WorkspaceConnectionApiKeyPtrInput interface {
	pulumi.Input

	ToWorkspaceConnectionApiKeyPtrOutput() WorkspaceConnectionApiKeyPtrOutput
	ToWorkspaceConnectionApiKeyPtrOutputWithContext(context.Context) WorkspaceConnectionApiKeyPtrOutput
}

type workspaceConnectionApiKeyPtrType WorkspaceConnectionApiKeyArgs

func WorkspaceConnectionApiKeyPtr(v *WorkspaceConnectionApiKeyArgs) WorkspaceConnectionApiKeyPtrInput {
	return (*workspaceConnectionApiKeyPtrType)(v)
}

func (*workspaceConnectionApiKeyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkspaceConnectionApiKey)(nil)).Elem()
}

func (i *workspaceConnectionApiKeyPtrType) ToWorkspaceConnectionApiKeyPtrOutput() WorkspaceConnectionApiKeyPtrOutput {
	return i.ToWorkspaceConnectionApiKeyPtrOutputWithContext(context.Background())
}

func (i *workspaceConnectionApiKeyPtrType) ToWorkspaceConnectionApiKeyPtrOutputWithContext(ctx context.Context) WorkspaceConnectionApiKeyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceConnectionApiKeyPtrOutput)
}

// Api key object for workspace connection credential.
type WorkspaceConnectionApiKeyOutput struct{ *pulumi.OutputState }

func (WorkspaceConnectionApiKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspaceConnectionApiKey)(nil)).Elem()
}

func (o WorkspaceConnectionApiKeyOutput) ToWorkspaceConnectionApiKeyOutput() WorkspaceConnectionApiKeyOutput {
	return o
}

func (o WorkspaceConnectionApiKeyOutput) ToWorkspaceConnectionApiKeyOutputWithContext(ctx context.Context) WorkspaceConnectionApiKeyOutput {
	return o
}

func (o WorkspaceConnectionApiKeyOutput) ToWorkspaceConnectionApiKeyPtrOutput() WorkspaceConnectionApiKeyPtrOutput {
	return o.ToWorkspaceConnectionApiKeyPtrOutputWithContext(context.Background())
}

func (o WorkspaceConnectionApiKeyOutput) ToWorkspaceConnectionApiKeyPtrOutputWithContext(ctx context.Context) WorkspaceConnectionApiKeyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkspaceConnectionApiKey) *WorkspaceConnectionApiKey {
		return &v
	}).(WorkspaceConnectionApiKeyPtrOutput)
}

func (o WorkspaceConnectionApiKeyOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkspaceConnectionApiKey) *string { return v.Key }).(pulumi.StringPtrOutput)
}

type WorkspaceConnectionApiKeyPtrOutput struct{ *pulumi.OutputState }

func (WorkspaceConnectionApiKeyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkspaceConnectionApiKey)(nil)).Elem()
}

func (o WorkspaceConnectionApiKeyPtrOutput) ToWorkspaceConnectionApiKeyPtrOutput() WorkspaceConnectionApiKeyPtrOutput {
	return o
}

func (o WorkspaceConnectionApiKeyPtrOutput) ToWorkspaceConnectionApiKeyPtrOutputWithContext(ctx context.Context) WorkspaceConnectionApiKeyPtrOutput {
	return o
}

func (o WorkspaceConnectionApiKeyPtrOutput) Elem() WorkspaceConnectionApiKeyOutput {
	return o.ApplyT(func(v *WorkspaceConnectionApiKey) WorkspaceConnectionApiKey {
		if v != nil {
			return *v
		}
		var ret WorkspaceConnectionApiKey
		return ret
	}).(WorkspaceConnectionApiKeyOutput)
}

func (o WorkspaceConnectionApiKeyPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceConnectionApiKey) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Api key object for workspace connection credential.
type WorkspaceConnectionApiKeyResponse struct {
	Key *string `pulumi:"key"`
}

// Api key object for workspace connection credential.
type WorkspaceConnectionApiKeyResponseOutput struct{ *pulumi.OutputState }

func (WorkspaceConnectionApiKeyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspaceConnectionApiKeyResponse)(nil)).Elem()
}

func (o WorkspaceConnectionApiKeyResponseOutput) ToWorkspaceConnectionApiKeyResponseOutput() WorkspaceConnectionApiKeyResponseOutput {
	return o
}

func (o WorkspaceConnectionApiKeyResponseOutput) ToWorkspaceConnectionApiKeyResponseOutputWithContext(ctx context.Context) WorkspaceConnectionApiKeyResponseOutput {
	return o
}

func (o WorkspaceConnectionApiKeyResponseOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkspaceConnectionApiKeyResponse) *string { return v.Key }).(pulumi.StringPtrOutput)
}

type WorkspaceConnectionApiKeyResponsePtrOutput struct{ *pulumi.OutputState }

func (WorkspaceConnectionApiKeyResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkspaceConnectionApiKeyResponse)(nil)).Elem()
}

func (o WorkspaceConnectionApiKeyResponsePtrOutput) ToWorkspaceConnectionApiKeyResponsePtrOutput() WorkspaceConnectionApiKeyResponsePtrOutput {
	return o
}

func (o WorkspaceConnectionApiKeyResponsePtrOutput) ToWorkspaceConnectionApiKeyResponsePtrOutputWithContext(ctx context.Context) WorkspaceConnectionApiKeyResponsePtrOutput {
	return o
}

func (o WorkspaceConnectionApiKeyResponsePtrOutput) Elem() WorkspaceConnectionApiKeyResponseOutput {
	return o.ApplyT(func(v *WorkspaceConnectionApiKeyResponse) WorkspaceConnectionApiKeyResponse {
		if v != nil {
			return *v
		}
		var ret WorkspaceConnectionApiKeyResponse
		return ret
	}).(WorkspaceConnectionApiKeyResponseOutput)
}

func (o WorkspaceConnectionApiKeyResponsePtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceConnectionApiKeyResponse) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

type WorkspaceConnectionManagedIdentity struct {
	ClientId   *string `pulumi:"clientId"`
	ResourceId *string `pulumi:"resourceId"`
}

// WorkspaceConnectionManagedIdentityInput is an input type that accepts WorkspaceConnectionManagedIdentityArgs and WorkspaceConnectionManagedIdentityOutput values.
// You can construct a concrete instance of `WorkspaceConnectionManagedIdentityInput` via:
//
//	WorkspaceConnectionManagedIdentityArgs{...}
type WorkspaceConnectionManagedIdentityInput interface {
	pulumi.Input

	ToWorkspaceConnectionManagedIdentityOutput() WorkspaceConnectionManagedIdentityOutput
	ToWorkspaceConnectionManagedIdentityOutputWithContext(context.Context) WorkspaceConnectionManagedIdentityOutput
}

type WorkspaceConnectionManagedIdentityArgs struct {
	ClientId   pulumi.StringPtrInput `pulumi:"clientId"`
	ResourceId pulumi.StringPtrInput `pulumi:"resourceId"`
}

func (WorkspaceConnectionManagedIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspaceConnectionManagedIdentity)(nil)).Elem()
}

func (i WorkspaceConnectionManagedIdentityArgs) ToWorkspaceConnectionManagedIdentityOutput() WorkspaceConnectionManagedIdentityOutput {
	return i.ToWorkspaceConnectionManagedIdentityOutputWithContext(context.Background())
}

func (i WorkspaceConnectionManagedIdentityArgs) ToWorkspaceConnectionManagedIdentityOutputWithContext(ctx context.Context) WorkspaceConnectionManagedIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceConnectionManagedIdentityOutput)
}

func (i WorkspaceConnectionManagedIdentityArgs) ToWorkspaceConnectionManagedIdentityPtrOutput() WorkspaceConnectionManagedIdentityPtrOutput {
	return i.ToWorkspaceConnectionManagedIdentityPtrOutputWithContext(context.Background())
}

func (i WorkspaceConnectionManagedIdentityArgs) ToWorkspaceConnectionManagedIdentityPtrOutputWithContext(ctx context.Context) WorkspaceConnectionManagedIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceConnectionManagedIdentityOutput).ToWorkspaceConnectionManagedIdentityPtrOutputWithContext(ctx)
}

// WorkspaceConnectionManagedIdentityPtrInput is an input type that accepts WorkspaceConnectionManagedIdentityArgs, WorkspaceConnectionManagedIdentityPtr and WorkspaceConnectionManagedIdentityPtrOutput values.
// You can construct a concrete instance of `WorkspaceConnectionManagedIdentityPtrInput` via:
//
//	        WorkspaceConnectionManagedIdentityArgs{...}
//
//	or:
//
//	        nil
type WorkspaceConnectionManagedIdentityPtrInput interface {
	pulumi.Input

	ToWorkspaceConnectionManagedIdentityPtrOutput() WorkspaceConnectionManagedIdentityPtrOutput
	ToWorkspaceConnectionManagedIdentityPtrOutputWithContext(context.Context) WorkspaceConnectionManagedIdentityPtrOutput
}

type workspaceConnectionManagedIdentityPtrType WorkspaceConnectionManagedIdentityArgs

func WorkspaceConnectionManagedIdentityPtr(v *WorkspaceConnectionManagedIdentityArgs) WorkspaceConnectionManagedIdentityPtrInput {
	return (*workspaceConnectionManagedIdentityPtrType)(v)
}

func (*workspaceConnectionManagedIdentityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkspaceConnectionManagedIdentity)(nil)).Elem()
}

func (i *workspaceConnectionManagedIdentityPtrType) ToWorkspaceConnectionManagedIdentityPtrOutput() WorkspaceConnectionManagedIdentityPtrOutput {
	return i.ToWorkspaceConnectionManagedIdentityPtrOutputWithContext(context.Background())
}

func (i *workspaceConnectionManagedIdentityPtrType) ToWorkspaceConnectionManagedIdentityPtrOutputWithContext(ctx context.Context) WorkspaceConnectionManagedIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceConnectionManagedIdentityPtrOutput)
}

type WorkspaceConnectionManagedIdentityOutput struct{ *pulumi.OutputState }

func (WorkspaceConnectionManagedIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspaceConnectionManagedIdentity)(nil)).Elem()
}

func (o WorkspaceConnectionManagedIdentityOutput) ToWorkspaceConnectionManagedIdentityOutput() WorkspaceConnectionManagedIdentityOutput {
	return o
}

func (o WorkspaceConnectionManagedIdentityOutput) ToWorkspaceConnectionManagedIdentityOutputWithContext(ctx context.Context) WorkspaceConnectionManagedIdentityOutput {
	return o
}

func (o WorkspaceConnectionManagedIdentityOutput) ToWorkspaceConnectionManagedIdentityPtrOutput() WorkspaceConnectionManagedIdentityPtrOutput {
	return o.ToWorkspaceConnectionManagedIdentityPtrOutputWithContext(context.Background())
}

func (o WorkspaceConnectionManagedIdentityOutput) ToWorkspaceConnectionManagedIdentityPtrOutputWithContext(ctx context.Context) WorkspaceConnectionManagedIdentityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkspaceConnectionManagedIdentity) *WorkspaceConnectionManagedIdentity {
		return &v
	}).(WorkspaceConnectionManagedIdentityPtrOutput)
}

func (o WorkspaceConnectionManagedIdentityOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkspaceConnectionManagedIdentity) *string { return v.ClientId }).(pulumi.StringPtrOutput)
}

func (o WorkspaceConnectionManagedIdentityOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkspaceConnectionManagedIdentity) *string { return v.ResourceId }).(pulumi.StringPtrOutput)
}

type WorkspaceConnectionManagedIdentityPtrOutput struct{ *pulumi.OutputState }

func (WorkspaceConnectionManagedIdentityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkspaceConnectionManagedIdentity)(nil)).Elem()
}

func (o WorkspaceConnectionManagedIdentityPtrOutput) ToWorkspaceConnectionManagedIdentityPtrOutput() WorkspaceConnectionManagedIdentityPtrOutput {
	return o
}

func (o WorkspaceConnectionManagedIdentityPtrOutput) ToWorkspaceConnectionManagedIdentityPtrOutputWithContext(ctx context.Context) WorkspaceConnectionManagedIdentityPtrOutput {
	return o
}

func (o WorkspaceConnectionManagedIdentityPtrOutput) Elem() WorkspaceConnectionManagedIdentityOutput {
	return o.ApplyT(func(v *WorkspaceConnectionManagedIdentity) WorkspaceConnectionManagedIdentity {
		if v != nil {
			return *v
		}
		var ret WorkspaceConnectionManagedIdentity
		return ret
	}).(WorkspaceConnectionManagedIdentityOutput)
}

func (o WorkspaceConnectionManagedIdentityPtrOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceConnectionManagedIdentity) *string {
		if v == nil {
			return nil
		}
		return v.ClientId
	}).(pulumi.StringPtrOutput)
}

func (o WorkspaceConnectionManagedIdentityPtrOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceConnectionManagedIdentity) *string {
		if v == nil {
			return nil
		}
		return v.ResourceId
	}).(pulumi.StringPtrOutput)
}

type WorkspaceConnectionManagedIdentityResponse struct {
	ClientId   *string `pulumi:"clientId"`
	ResourceId *string `pulumi:"resourceId"`
}

type WorkspaceConnectionManagedIdentityResponseOutput struct{ *pulumi.OutputState }

func (WorkspaceConnectionManagedIdentityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspaceConnectionManagedIdentityResponse)(nil)).Elem()
}

func (o WorkspaceConnectionManagedIdentityResponseOutput) ToWorkspaceConnectionManagedIdentityResponseOutput() WorkspaceConnectionManagedIdentityResponseOutput {
	return o
}

func (o WorkspaceConnectionManagedIdentityResponseOutput) ToWorkspaceConnectionManagedIdentityResponseOutputWithContext(ctx context.Context) WorkspaceConnectionManagedIdentityResponseOutput {
	return o
}

func (o WorkspaceConnectionManagedIdentityResponseOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkspaceConnectionManagedIdentityResponse) *string { return v.ClientId }).(pulumi.StringPtrOutput)
}

func (o WorkspaceConnectionManagedIdentityResponseOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkspaceConnectionManagedIdentityResponse) *string { return v.ResourceId }).(pulumi.StringPtrOutput)
}

type WorkspaceConnectionManagedIdentityResponsePtrOutput struct{ *pulumi.OutputState }

func (WorkspaceConnectionManagedIdentityResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkspaceConnectionManagedIdentityResponse)(nil)).Elem()
}

func (o WorkspaceConnectionManagedIdentityResponsePtrOutput) ToWorkspaceConnectionManagedIdentityResponsePtrOutput() WorkspaceConnectionManagedIdentityResponsePtrOutput {
	return o
}

func (o WorkspaceConnectionManagedIdentityResponsePtrOutput) ToWorkspaceConnectionManagedIdentityResponsePtrOutputWithContext(ctx context.Context) WorkspaceConnectionManagedIdentityResponsePtrOutput {
	return o
}

func (o WorkspaceConnectionManagedIdentityResponsePtrOutput) Elem() WorkspaceConnectionManagedIdentityResponseOutput {
	return o.ApplyT(func(v *WorkspaceConnectionManagedIdentityResponse) WorkspaceConnectionManagedIdentityResponse {
		if v != nil {
			return *v
		}
		var ret WorkspaceConnectionManagedIdentityResponse
		return ret
	}).(WorkspaceConnectionManagedIdentityResponseOutput)
}

func (o WorkspaceConnectionManagedIdentityResponsePtrOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceConnectionManagedIdentityResponse) *string {
		if v == nil {
			return nil
		}
		return v.ClientId
	}).(pulumi.StringPtrOutput)
}

func (o WorkspaceConnectionManagedIdentityResponsePtrOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceConnectionManagedIdentityResponse) *string {
		if v == nil {
			return nil
		}
		return v.ResourceId
	}).(pulumi.StringPtrOutput)
}

// ClientId and ClientSecret are required. Other properties are optional
// depending on each OAuth2 provider's implementation.
type WorkspaceConnectionOAuth2 struct {
	// Required by Concur connection category
	AuthUrl *string `pulumi:"authUrl"`
	// Client id in the format of UUID
	ClientId     *string `pulumi:"clientId"`
	ClientSecret *string `pulumi:"clientSecret"`
	// Required by GoogleAdWords connection category
	DeveloperToken *string `pulumi:"developerToken"`
	Password       *string `pulumi:"password"`
	// Required by GoogleBigQuery, GoogleAdWords, Hubspot, QuickBooks, Square, Xero, Zoho
	// where user needs to get RefreshToken offline
	RefreshToken *string `pulumi:"refreshToken"`
	// Required by QuickBooks and Xero connection categories
	TenantId *string `pulumi:"tenantId"`
	// Concur, ServiceNow auth server AccessToken grant type is 'Password'
	// which requires UsernamePassword
	Username *string `pulumi:"username"`
}

// WorkspaceConnectionOAuth2Input is an input type that accepts WorkspaceConnectionOAuth2Args and WorkspaceConnectionOAuth2Output values.
// You can construct a concrete instance of `WorkspaceConnectionOAuth2Input` via:
//
//	WorkspaceConnectionOAuth2Args{...}
type WorkspaceConnectionOAuth2Input interface {
	pulumi.Input

	ToWorkspaceConnectionOAuth2Output() WorkspaceConnectionOAuth2Output
	ToWorkspaceConnectionOAuth2OutputWithContext(context.Context) WorkspaceConnectionOAuth2Output
}

// ClientId and ClientSecret are required. Other properties are optional
// depending on each OAuth2 provider's implementation.
type WorkspaceConnectionOAuth2Args struct {
	// Required by Concur connection category
	AuthUrl pulumi.StringPtrInput `pulumi:"authUrl"`
	// Client id in the format of UUID
	ClientId     pulumi.StringPtrInput `pulumi:"clientId"`
	ClientSecret pulumi.StringPtrInput `pulumi:"clientSecret"`
	// Required by GoogleAdWords connection category
	DeveloperToken pulumi.StringPtrInput `pulumi:"developerToken"`
	Password       pulumi.StringPtrInput `pulumi:"password"`
	// Required by GoogleBigQuery, GoogleAdWords, Hubspot, QuickBooks, Square, Xero, Zoho
	// where user needs to get RefreshToken offline
	RefreshToken pulumi.StringPtrInput `pulumi:"refreshToken"`
	// Required by QuickBooks and Xero connection categories
	TenantId pulumi.StringPtrInput `pulumi:"tenantId"`
	// Concur, ServiceNow auth server AccessToken grant type is 'Password'
	// which requires UsernamePassword
	Username pulumi.StringPtrInput `pulumi:"username"`
}

func (WorkspaceConnectionOAuth2Args) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspaceConnectionOAuth2)(nil)).Elem()
}

func (i WorkspaceConnectionOAuth2Args) ToWorkspaceConnectionOAuth2Output() WorkspaceConnectionOAuth2Output {
	return i.ToWorkspaceConnectionOAuth2OutputWithContext(context.Background())
}

func (i WorkspaceConnectionOAuth2Args) ToWorkspaceConnectionOAuth2OutputWithContext(ctx context.Context) WorkspaceConnectionOAuth2Output {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceConnectionOAuth2Output)
}

func (i WorkspaceConnectionOAuth2Args) ToWorkspaceConnectionOAuth2PtrOutput() WorkspaceConnectionOAuth2PtrOutput {
	return i.ToWorkspaceConnectionOAuth2PtrOutputWithContext(context.Background())
}

func (i WorkspaceConnectionOAuth2Args) ToWorkspaceConnectionOAuth2PtrOutputWithContext(ctx context.Context) WorkspaceConnectionOAuth2PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceConnectionOAuth2Output).ToWorkspaceConnectionOAuth2PtrOutputWithContext(ctx)
}

// WorkspaceConnectionOAuth2PtrInput is an input type that accepts WorkspaceConnectionOAuth2Args, WorkspaceConnectionOAuth2Ptr and WorkspaceConnectionOAuth2PtrOutput values.
// You can construct a concrete instance of `WorkspaceConnectionOAuth2PtrInput` via:
//
//	        WorkspaceConnectionOAuth2Args{...}
//
//	or:
//
//	        nil
type WorkspaceConnectionOAuth2PtrInput interface {
	pulumi.Input

	ToWorkspaceConnectionOAuth2PtrOutput() WorkspaceConnectionOAuth2PtrOutput
	ToWorkspaceConnectionOAuth2PtrOutputWithContext(context.Context) WorkspaceConnectionOAuth2PtrOutput
}

type workspaceConnectionOAuth2PtrType WorkspaceConnectionOAuth2Args

func WorkspaceConnectionOAuth2Ptr(v *WorkspaceConnectionOAuth2Args) WorkspaceConnectionOAuth2PtrInput {
	return (*workspaceConnectionOAuth2PtrType)(v)
}

func (*workspaceConnectionOAuth2PtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkspaceConnectionOAuth2)(nil)).Elem()
}

func (i *workspaceConnectionOAuth2PtrType) ToWorkspaceConnectionOAuth2PtrOutput() WorkspaceConnectionOAuth2PtrOutput {
	return i.ToWorkspaceConnectionOAuth2PtrOutputWithContext(context.Background())
}

func (i *workspaceConnectionOAuth2PtrType) ToWorkspaceConnectionOAuth2PtrOutputWithContext(ctx context.Context) WorkspaceConnectionOAuth2PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceConnectionOAuth2PtrOutput)
}

// ClientId and ClientSecret are required. Other properties are optional
// depending on each OAuth2 provider's implementation.
type WorkspaceConnectionOAuth2Output struct{ *pulumi.OutputState }

func (WorkspaceConnectionOAuth2Output) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspaceConnectionOAuth2)(nil)).Elem()
}

func (o WorkspaceConnectionOAuth2Output) ToWorkspaceConnectionOAuth2Output() WorkspaceConnectionOAuth2Output {
	return o
}

func (o WorkspaceConnectionOAuth2Output) ToWorkspaceConnectionOAuth2OutputWithContext(ctx context.Context) WorkspaceConnectionOAuth2Output {
	return o
}

func (o WorkspaceConnectionOAuth2Output) ToWorkspaceConnectionOAuth2PtrOutput() WorkspaceConnectionOAuth2PtrOutput {
	return o.ToWorkspaceConnectionOAuth2PtrOutputWithContext(context.Background())
}

func (o WorkspaceConnectionOAuth2Output) ToWorkspaceConnectionOAuth2PtrOutputWithContext(ctx context.Context) WorkspaceConnectionOAuth2PtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkspaceConnectionOAuth2) *WorkspaceConnectionOAuth2 {
		return &v
	}).(WorkspaceConnectionOAuth2PtrOutput)
}

// Required by Concur connection category
func (o WorkspaceConnectionOAuth2Output) AuthUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkspaceConnectionOAuth2) *string { return v.AuthUrl }).(pulumi.StringPtrOutput)
}

// Client id in the format of UUID
func (o WorkspaceConnectionOAuth2Output) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkspaceConnectionOAuth2) *string { return v.ClientId }).(pulumi.StringPtrOutput)
}

func (o WorkspaceConnectionOAuth2Output) ClientSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkspaceConnectionOAuth2) *string { return v.ClientSecret }).(pulumi.StringPtrOutput)
}

// Required by GoogleAdWords connection category
func (o WorkspaceConnectionOAuth2Output) DeveloperToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkspaceConnectionOAuth2) *string { return v.DeveloperToken }).(pulumi.StringPtrOutput)
}

func (o WorkspaceConnectionOAuth2Output) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkspaceConnectionOAuth2) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// Required by GoogleBigQuery, GoogleAdWords, Hubspot, QuickBooks, Square, Xero, Zoho
// where user needs to get RefreshToken offline
func (o WorkspaceConnectionOAuth2Output) RefreshToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkspaceConnectionOAuth2) *string { return v.RefreshToken }).(pulumi.StringPtrOutput)
}

// Required by QuickBooks and Xero connection categories
func (o WorkspaceConnectionOAuth2Output) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkspaceConnectionOAuth2) *string { return v.TenantId }).(pulumi.StringPtrOutput)
}

// Concur, ServiceNow auth server AccessToken grant type is 'Password'
// which requires UsernamePassword
func (o WorkspaceConnectionOAuth2Output) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkspaceConnectionOAuth2) *string { return v.Username }).(pulumi.StringPtrOutput)
}

type WorkspaceConnectionOAuth2PtrOutput struct{ *pulumi.OutputState }

func (WorkspaceConnectionOAuth2PtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkspaceConnectionOAuth2)(nil)).Elem()
}

func (o WorkspaceConnectionOAuth2PtrOutput) ToWorkspaceConnectionOAuth2PtrOutput() WorkspaceConnectionOAuth2PtrOutput {
	return o
}

func (o WorkspaceConnectionOAuth2PtrOutput) ToWorkspaceConnectionOAuth2PtrOutputWithContext(ctx context.Context) WorkspaceConnectionOAuth2PtrOutput {
	return o
}

func (o WorkspaceConnectionOAuth2PtrOutput) Elem() WorkspaceConnectionOAuth2Output {
	return o.ApplyT(func(v *WorkspaceConnectionOAuth2) WorkspaceConnectionOAuth2 {
		if v != nil {
			return *v
		}
		var ret WorkspaceConnectionOAuth2
		return ret
	}).(WorkspaceConnectionOAuth2Output)
}

// Required by Concur connection category
func (o WorkspaceConnectionOAuth2PtrOutput) AuthUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceConnectionOAuth2) *string {
		if v == nil {
			return nil
		}
		return v.AuthUrl
	}).(pulumi.StringPtrOutput)
}

// Client id in the format of UUID
func (o WorkspaceConnectionOAuth2PtrOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceConnectionOAuth2) *string {
		if v == nil {
			return nil
		}
		return v.ClientId
	}).(pulumi.StringPtrOutput)
}

func (o WorkspaceConnectionOAuth2PtrOutput) ClientSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceConnectionOAuth2) *string {
		if v == nil {
			return nil
		}
		return v.ClientSecret
	}).(pulumi.StringPtrOutput)
}

// Required by GoogleAdWords connection category
func (o WorkspaceConnectionOAuth2PtrOutput) DeveloperToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceConnectionOAuth2) *string {
		if v == nil {
			return nil
		}
		return v.DeveloperToken
	}).(pulumi.StringPtrOutput)
}

func (o WorkspaceConnectionOAuth2PtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceConnectionOAuth2) *string {
		if v == nil {
			return nil
		}
		return v.Password
	}).(pulumi.StringPtrOutput)
}

// Required by GoogleBigQuery, GoogleAdWords, Hubspot, QuickBooks, Square, Xero, Zoho
// where user needs to get RefreshToken offline
func (o WorkspaceConnectionOAuth2PtrOutput) RefreshToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceConnectionOAuth2) *string {
		if v == nil {
			return nil
		}
		return v.RefreshToken
	}).(pulumi.StringPtrOutput)
}

// Required by QuickBooks and Xero connection categories
func (o WorkspaceConnectionOAuth2PtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceConnectionOAuth2) *string {
		if v == nil {
			return nil
		}
		return v.TenantId
	}).(pulumi.StringPtrOutput)
}

// Concur, ServiceNow auth server AccessToken grant type is 'Password'
// which requires UsernamePassword
func (o WorkspaceConnectionOAuth2PtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceConnectionOAuth2) *string {
		if v == nil {
			return nil
		}
		return v.Username
	}).(pulumi.StringPtrOutput)
}

// ClientId and ClientSecret are required. Other properties are optional
// depending on each OAuth2 provider's implementation.
type WorkspaceConnectionOAuth2Response struct {
	// Required by Concur connection category
	AuthUrl *string `pulumi:"authUrl"`
	// Client id in the format of UUID
	ClientId     *string `pulumi:"clientId"`
	ClientSecret *string `pulumi:"clientSecret"`
	// Required by GoogleAdWords connection category
	DeveloperToken *string `pulumi:"developerToken"`
	Password       *string `pulumi:"password"`
	// Required by GoogleBigQuery, GoogleAdWords, Hubspot, QuickBooks, Square, Xero, Zoho
	// where user needs to get RefreshToken offline
	RefreshToken *string `pulumi:"refreshToken"`
	// Required by QuickBooks and Xero connection categories
	TenantId *string `pulumi:"tenantId"`
	// Concur, ServiceNow auth server AccessToken grant type is 'Password'
	// which requires UsernamePassword
	Username *string `pulumi:"username"`
}

// ClientId and ClientSecret are required. Other properties are optional
// depending on each OAuth2 provider's implementation.
type WorkspaceConnectionOAuth2ResponseOutput struct{ *pulumi.OutputState }

func (WorkspaceConnectionOAuth2ResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspaceConnectionOAuth2Response)(nil)).Elem()
}

func (o WorkspaceConnectionOAuth2ResponseOutput) ToWorkspaceConnectionOAuth2ResponseOutput() WorkspaceConnectionOAuth2ResponseOutput {
	return o
}

func (o WorkspaceConnectionOAuth2ResponseOutput) ToWorkspaceConnectionOAuth2ResponseOutputWithContext(ctx context.Context) WorkspaceConnectionOAuth2ResponseOutput {
	return o
}

// Required by Concur connection category
func (o WorkspaceConnectionOAuth2ResponseOutput) AuthUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkspaceConnectionOAuth2Response) *string { return v.AuthUrl }).(pulumi.StringPtrOutput)
}

// Client id in the format of UUID
func (o WorkspaceConnectionOAuth2ResponseOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkspaceConnectionOAuth2Response) *string { return v.ClientId }).(pulumi.StringPtrOutput)
}

func (o WorkspaceConnectionOAuth2ResponseOutput) ClientSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkspaceConnectionOAuth2Response) *string { return v.ClientSecret }).(pulumi.StringPtrOutput)
}

// Required by GoogleAdWords connection category
func (o WorkspaceConnectionOAuth2ResponseOutput) DeveloperToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkspaceConnectionOAuth2Response) *string { return v.DeveloperToken }).(pulumi.StringPtrOutput)
}

func (o WorkspaceConnectionOAuth2ResponseOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkspaceConnectionOAuth2Response) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// Required by GoogleBigQuery, GoogleAdWords, Hubspot, QuickBooks, Square, Xero, Zoho
// where user needs to get RefreshToken offline
func (o WorkspaceConnectionOAuth2ResponseOutput) RefreshToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkspaceConnectionOAuth2Response) *string { return v.RefreshToken }).(pulumi.StringPtrOutput)
}

// Required by QuickBooks and Xero connection categories
func (o WorkspaceConnectionOAuth2ResponseOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkspaceConnectionOAuth2Response) *string { return v.TenantId }).(pulumi.StringPtrOutput)
}

// Concur, ServiceNow auth server AccessToken grant type is 'Password'
// which requires UsernamePassword
func (o WorkspaceConnectionOAuth2ResponseOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkspaceConnectionOAuth2Response) *string { return v.Username }).(pulumi.StringPtrOutput)
}

type WorkspaceConnectionOAuth2ResponsePtrOutput struct{ *pulumi.OutputState }

func (WorkspaceConnectionOAuth2ResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkspaceConnectionOAuth2Response)(nil)).Elem()
}

func (o WorkspaceConnectionOAuth2ResponsePtrOutput) ToWorkspaceConnectionOAuth2ResponsePtrOutput() WorkspaceConnectionOAuth2ResponsePtrOutput {
	return o
}

func (o WorkspaceConnectionOAuth2ResponsePtrOutput) ToWorkspaceConnectionOAuth2ResponsePtrOutputWithContext(ctx context.Context) WorkspaceConnectionOAuth2ResponsePtrOutput {
	return o
}

func (o WorkspaceConnectionOAuth2ResponsePtrOutput) Elem() WorkspaceConnectionOAuth2ResponseOutput {
	return o.ApplyT(func(v *WorkspaceConnectionOAuth2Response) WorkspaceConnectionOAuth2Response {
		if v != nil {
			return *v
		}
		var ret WorkspaceConnectionOAuth2Response
		return ret
	}).(WorkspaceConnectionOAuth2ResponseOutput)
}

// Required by Concur connection category
func (o WorkspaceConnectionOAuth2ResponsePtrOutput) AuthUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceConnectionOAuth2Response) *string {
		if v == nil {
			return nil
		}
		return v.AuthUrl
	}).(pulumi.StringPtrOutput)
}

// Client id in the format of UUID
func (o WorkspaceConnectionOAuth2ResponsePtrOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceConnectionOAuth2Response) *string {
		if v == nil {
			return nil
		}
		return v.ClientId
	}).(pulumi.StringPtrOutput)
}

func (o WorkspaceConnectionOAuth2ResponsePtrOutput) ClientSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceConnectionOAuth2Response) *string {
		if v == nil {
			return nil
		}
		return v.ClientSecret
	}).(pulumi.StringPtrOutput)
}

// Required by GoogleAdWords connection category
func (o WorkspaceConnectionOAuth2ResponsePtrOutput) DeveloperToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceConnectionOAuth2Response) *string {
		if v == nil {
			return nil
		}
		return v.DeveloperToken
	}).(pulumi.StringPtrOutput)
}

func (o WorkspaceConnectionOAuth2ResponsePtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceConnectionOAuth2Response) *string {
		if v == nil {
			return nil
		}
		return v.Password
	}).(pulumi.StringPtrOutput)
}

// Required by GoogleBigQuery, GoogleAdWords, Hubspot, QuickBooks, Square, Xero, Zoho
// where user needs to get RefreshToken offline
func (o WorkspaceConnectionOAuth2ResponsePtrOutput) RefreshToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceConnectionOAuth2Response) *string {
		if v == nil {
			return nil
		}
		return v.RefreshToken
	}).(pulumi.StringPtrOutput)
}

// Required by QuickBooks and Xero connection categories
func (o WorkspaceConnectionOAuth2ResponsePtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceConnectionOAuth2Response) *string {
		if v == nil {
			return nil
		}
		return v.TenantId
	}).(pulumi.StringPtrOutput)
}

// Concur, ServiceNow auth server AccessToken grant type is 'Password'
// which requires UsernamePassword
func (o WorkspaceConnectionOAuth2ResponsePtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceConnectionOAuth2Response) *string {
		if v == nil {
			return nil
		}
		return v.Username
	}).(pulumi.StringPtrOutput)
}

type WorkspaceConnectionPersonalAccessToken struct {
	Pat *string `pulumi:"pat"`
}

// WorkspaceConnectionPersonalAccessTokenInput is an input type that accepts WorkspaceConnectionPersonalAccessTokenArgs and WorkspaceConnectionPersonalAccessTokenOutput values.
// You can construct a concrete instance of `WorkspaceConnectionPersonalAccessTokenInput` via:
//
//	WorkspaceConnectionPersonalAccessTokenArgs{...}
type WorkspaceConnectionPersonalAccessTokenInput interface {
	pulumi.Input

	ToWorkspaceConnectionPersonalAccessTokenOutput() WorkspaceConnectionPersonalAccessTokenOutput
	ToWorkspaceConnectionPersonalAccessTokenOutputWithContext(context.Context) WorkspaceConnectionPersonalAccessTokenOutput
}

type WorkspaceConnectionPersonalAccessTokenArgs struct {
	Pat pulumi.StringPtrInput `pulumi:"pat"`
}

func (WorkspaceConnectionPersonalAccessTokenArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspaceConnectionPersonalAccessToken)(nil)).Elem()
}

func (i WorkspaceConnectionPersonalAccessTokenArgs) ToWorkspaceConnectionPersonalAccessTokenOutput() WorkspaceConnectionPersonalAccessTokenOutput {
	return i.ToWorkspaceConnectionPersonalAccessTokenOutputWithContext(context.Background())
}

func (i WorkspaceConnectionPersonalAccessTokenArgs) ToWorkspaceConnectionPersonalAccessTokenOutputWithContext(ctx context.Context) WorkspaceConnectionPersonalAccessTokenOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceConnectionPersonalAccessTokenOutput)
}

func (i WorkspaceConnectionPersonalAccessTokenArgs) ToWorkspaceConnectionPersonalAccessTokenPtrOutput() WorkspaceConnectionPersonalAccessTokenPtrOutput {
	return i.ToWorkspaceConnectionPersonalAccessTokenPtrOutputWithContext(context.Background())
}

func (i WorkspaceConnectionPersonalAccessTokenArgs) ToWorkspaceConnectionPersonalAccessTokenPtrOutputWithContext(ctx context.Context) WorkspaceConnectionPersonalAccessTokenPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceConnectionPersonalAccessTokenOutput).ToWorkspaceConnectionPersonalAccessTokenPtrOutputWithContext(ctx)
}

// WorkspaceConnectionPersonalAccessTokenPtrInput is an input type that accepts WorkspaceConnectionPersonalAccessTokenArgs, WorkspaceConnectionPersonalAccessTokenPtr and WorkspaceConnectionPersonalAccessTokenPtrOutput values.
// You can construct a concrete instance of `WorkspaceConnectionPersonalAccessTokenPtrInput` via:
//
//	        WorkspaceConnectionPersonalAccessTokenArgs{...}
//
//	or:
//
//	        nil
type WorkspaceConnectionPersonalAccessTokenPtrInput interface {
	pulumi.Input

	ToWorkspaceConnectionPersonalAccessTokenPtrOutput() WorkspaceConnectionPersonalAccessTokenPtrOutput
	ToWorkspaceConnectionPersonalAccessTokenPtrOutputWithContext(context.Context) WorkspaceConnectionPersonalAccessTokenPtrOutput
}

type workspaceConnectionPersonalAccessTokenPtrType WorkspaceConnectionPersonalAccessTokenArgs

func WorkspaceConnectionPersonalAccessTokenPtr(v *WorkspaceConnectionPersonalAccessTokenArgs) WorkspaceConnectionPersonalAccessTokenPtrInput {
	return (*workspaceConnectionPersonalAccessTokenPtrType)(v)
}

func (*workspaceConnectionPersonalAccessTokenPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkspaceConnectionPersonalAccessToken)(nil)).Elem()
}

func (i *workspaceConnectionPersonalAccessTokenPtrType) ToWorkspaceConnectionPersonalAccessTokenPtrOutput() WorkspaceConnectionPersonalAccessTokenPtrOutput {
	return i.ToWorkspaceConnectionPersonalAccessTokenPtrOutputWithContext(context.Background())
}

func (i *workspaceConnectionPersonalAccessTokenPtrType) ToWorkspaceConnectionPersonalAccessTokenPtrOutputWithContext(ctx context.Context) WorkspaceConnectionPersonalAccessTokenPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceConnectionPersonalAccessTokenPtrOutput)
}

type WorkspaceConnectionPersonalAccessTokenOutput struct{ *pulumi.OutputState }

func (WorkspaceConnectionPersonalAccessTokenOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspaceConnectionPersonalAccessToken)(nil)).Elem()
}

func (o WorkspaceConnectionPersonalAccessTokenOutput) ToWorkspaceConnectionPersonalAccessTokenOutput() WorkspaceConnectionPersonalAccessTokenOutput {
	return o
}

func (o WorkspaceConnectionPersonalAccessTokenOutput) ToWorkspaceConnectionPersonalAccessTokenOutputWithContext(ctx context.Context) WorkspaceConnectionPersonalAccessTokenOutput {
	return o
}

func (o WorkspaceConnectionPersonalAccessTokenOutput) ToWorkspaceConnectionPersonalAccessTokenPtrOutput() WorkspaceConnectionPersonalAccessTokenPtrOutput {
	return o.ToWorkspaceConnectionPersonalAccessTokenPtrOutputWithContext(context.Background())
}

func (o WorkspaceConnectionPersonalAccessTokenOutput) ToWorkspaceConnectionPersonalAccessTokenPtrOutputWithContext(ctx context.Context) WorkspaceConnectionPersonalAccessTokenPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkspaceConnectionPersonalAccessToken) *WorkspaceConnectionPersonalAccessToken {
		return &v
	}).(WorkspaceConnectionPersonalAccessTokenPtrOutput)
}

func (o WorkspaceConnectionPersonalAccessTokenOutput) Pat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkspaceConnectionPersonalAccessToken) *string { return v.Pat }).(pulumi.StringPtrOutput)
}

type WorkspaceConnectionPersonalAccessTokenPtrOutput struct{ *pulumi.OutputState }

func (WorkspaceConnectionPersonalAccessTokenPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkspaceConnectionPersonalAccessToken)(nil)).Elem()
}

func (o WorkspaceConnectionPersonalAccessTokenPtrOutput) ToWorkspaceConnectionPersonalAccessTokenPtrOutput() WorkspaceConnectionPersonalAccessTokenPtrOutput {
	return o
}

func (o WorkspaceConnectionPersonalAccessTokenPtrOutput) ToWorkspaceConnectionPersonalAccessTokenPtrOutputWithContext(ctx context.Context) WorkspaceConnectionPersonalAccessTokenPtrOutput {
	return o
}

func (o WorkspaceConnectionPersonalAccessTokenPtrOutput) Elem() WorkspaceConnectionPersonalAccessTokenOutput {
	return o.ApplyT(func(v *WorkspaceConnectionPersonalAccessToken) WorkspaceConnectionPersonalAccessToken {
		if v != nil {
			return *v
		}
		var ret WorkspaceConnectionPersonalAccessToken
		return ret
	}).(WorkspaceConnectionPersonalAccessTokenOutput)
}

func (o WorkspaceConnectionPersonalAccessTokenPtrOutput) Pat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceConnectionPersonalAccessToken) *string {
		if v == nil {
			return nil
		}
		return v.Pat
	}).(pulumi.StringPtrOutput)
}

type WorkspaceConnectionPersonalAccessTokenResponse struct {
	Pat *string `pulumi:"pat"`
}

type WorkspaceConnectionPersonalAccessTokenResponseOutput struct{ *pulumi.OutputState }

func (WorkspaceConnectionPersonalAccessTokenResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspaceConnectionPersonalAccessTokenResponse)(nil)).Elem()
}

func (o WorkspaceConnectionPersonalAccessTokenResponseOutput) ToWorkspaceConnectionPersonalAccessTokenResponseOutput() WorkspaceConnectionPersonalAccessTokenResponseOutput {
	return o
}

func (o WorkspaceConnectionPersonalAccessTokenResponseOutput) ToWorkspaceConnectionPersonalAccessTokenResponseOutputWithContext(ctx context.Context) WorkspaceConnectionPersonalAccessTokenResponseOutput {
	return o
}

func (o WorkspaceConnectionPersonalAccessTokenResponseOutput) Pat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkspaceConnectionPersonalAccessTokenResponse) *string { return v.Pat }).(pulumi.StringPtrOutput)
}

type WorkspaceConnectionPersonalAccessTokenResponsePtrOutput struct{ *pulumi.OutputState }

func (WorkspaceConnectionPersonalAccessTokenResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkspaceConnectionPersonalAccessTokenResponse)(nil)).Elem()
}

func (o WorkspaceConnectionPersonalAccessTokenResponsePtrOutput) ToWorkspaceConnectionPersonalAccessTokenResponsePtrOutput() WorkspaceConnectionPersonalAccessTokenResponsePtrOutput {
	return o
}

func (o WorkspaceConnectionPersonalAccessTokenResponsePtrOutput) ToWorkspaceConnectionPersonalAccessTokenResponsePtrOutputWithContext(ctx context.Context) WorkspaceConnectionPersonalAccessTokenResponsePtrOutput {
	return o
}

func (o WorkspaceConnectionPersonalAccessTokenResponsePtrOutput) Elem() WorkspaceConnectionPersonalAccessTokenResponseOutput {
	return o.ApplyT(func(v *WorkspaceConnectionPersonalAccessTokenResponse) WorkspaceConnectionPersonalAccessTokenResponse {
		if v != nil {
			return *v
		}
		var ret WorkspaceConnectionPersonalAccessTokenResponse
		return ret
	}).(WorkspaceConnectionPersonalAccessTokenResponseOutput)
}

func (o WorkspaceConnectionPersonalAccessTokenResponsePtrOutput) Pat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceConnectionPersonalAccessTokenResponse) *string {
		if v == nil {
			return nil
		}
		return v.Pat
	}).(pulumi.StringPtrOutput)
}

type WorkspaceConnectionServicePrincipal struct {
	ClientId     *string `pulumi:"clientId"`
	ClientSecret *string `pulumi:"clientSecret"`
	TenantId     *string `pulumi:"tenantId"`
}

// WorkspaceConnectionServicePrincipalInput is an input type that accepts WorkspaceConnectionServicePrincipalArgs and WorkspaceConnectionServicePrincipalOutput values.
// You can construct a concrete instance of `WorkspaceConnectionServicePrincipalInput` via:
//
//	WorkspaceConnectionServicePrincipalArgs{...}
type WorkspaceConnectionServicePrincipalInput interface {
	pulumi.Input

	ToWorkspaceConnectionServicePrincipalOutput() WorkspaceConnectionServicePrincipalOutput
	ToWorkspaceConnectionServicePrincipalOutputWithContext(context.Context) WorkspaceConnectionServicePrincipalOutput
}

type WorkspaceConnectionServicePrincipalArgs struct {
	ClientId     pulumi.StringPtrInput `pulumi:"clientId"`
	ClientSecret pulumi.StringPtrInput `pulumi:"clientSecret"`
	TenantId     pulumi.StringPtrInput `pulumi:"tenantId"`
}

func (WorkspaceConnectionServicePrincipalArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspaceConnectionServicePrincipal)(nil)).Elem()
}

func (i WorkspaceConnectionServicePrincipalArgs) ToWorkspaceConnectionServicePrincipalOutput() WorkspaceConnectionServicePrincipalOutput {
	return i.ToWorkspaceConnectionServicePrincipalOutputWithContext(context.Background())
}

func (i WorkspaceConnectionServicePrincipalArgs) ToWorkspaceConnectionServicePrincipalOutputWithContext(ctx context.Context) WorkspaceConnectionServicePrincipalOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceConnectionServicePrincipalOutput)
}

func (i WorkspaceConnectionServicePrincipalArgs) ToWorkspaceConnectionServicePrincipalPtrOutput() WorkspaceConnectionServicePrincipalPtrOutput {
	return i.ToWorkspaceConnectionServicePrincipalPtrOutputWithContext(context.Background())
}

func (i WorkspaceConnectionServicePrincipalArgs) ToWorkspaceConnectionServicePrincipalPtrOutputWithContext(ctx context.Context) WorkspaceConnectionServicePrincipalPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceConnectionServicePrincipalOutput).ToWorkspaceConnectionServicePrincipalPtrOutputWithContext(ctx)
}

// WorkspaceConnectionServicePrincipalPtrInput is an input type that accepts WorkspaceConnectionServicePrincipalArgs, WorkspaceConnectionServicePrincipalPtr and WorkspaceConnectionServicePrincipalPtrOutput values.
// You can construct a concrete instance of `WorkspaceConnectionServicePrincipalPtrInput` via:
//
//	        WorkspaceConnectionServicePrincipalArgs{...}
//
//	or:
//
//	        nil
type WorkspaceConnectionServicePrincipalPtrInput interface {
	pulumi.Input

	ToWorkspaceConnectionServicePrincipalPtrOutput() WorkspaceConnectionServicePrincipalPtrOutput
	ToWorkspaceConnectionServicePrincipalPtrOutputWithContext(context.Context) WorkspaceConnectionServicePrincipalPtrOutput
}

type workspaceConnectionServicePrincipalPtrType WorkspaceConnectionServicePrincipalArgs

func WorkspaceConnectionServicePrincipalPtr(v *WorkspaceConnectionServicePrincipalArgs) WorkspaceConnectionServicePrincipalPtrInput {
	return (*workspaceConnectionServicePrincipalPtrType)(v)
}

func (*workspaceConnectionServicePrincipalPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkspaceConnectionServicePrincipal)(nil)).Elem()
}

func (i *workspaceConnectionServicePrincipalPtrType) ToWorkspaceConnectionServicePrincipalPtrOutput() WorkspaceConnectionServicePrincipalPtrOutput {
	return i.ToWorkspaceConnectionServicePrincipalPtrOutputWithContext(context.Background())
}

func (i *workspaceConnectionServicePrincipalPtrType) ToWorkspaceConnectionServicePrincipalPtrOutputWithContext(ctx context.Context) WorkspaceConnectionServicePrincipalPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceConnectionServicePrincipalPtrOutput)
}

type WorkspaceConnectionServicePrincipalOutput struct{ *pulumi.OutputState }

func (WorkspaceConnectionServicePrincipalOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspaceConnectionServicePrincipal)(nil)).Elem()
}

func (o WorkspaceConnectionServicePrincipalOutput) ToWorkspaceConnectionServicePrincipalOutput() WorkspaceConnectionServicePrincipalOutput {
	return o
}

func (o WorkspaceConnectionServicePrincipalOutput) ToWorkspaceConnectionServicePrincipalOutputWithContext(ctx context.Context) WorkspaceConnectionServicePrincipalOutput {
	return o
}

func (o WorkspaceConnectionServicePrincipalOutput) ToWorkspaceConnectionServicePrincipalPtrOutput() WorkspaceConnectionServicePrincipalPtrOutput {
	return o.ToWorkspaceConnectionServicePrincipalPtrOutputWithContext(context.Background())
}

func (o WorkspaceConnectionServicePrincipalOutput) ToWorkspaceConnectionServicePrincipalPtrOutputWithContext(ctx context.Context) WorkspaceConnectionServicePrincipalPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkspaceConnectionServicePrincipal) *WorkspaceConnectionServicePrincipal {
		return &v
	}).(WorkspaceConnectionServicePrincipalPtrOutput)
}

func (o WorkspaceConnectionServicePrincipalOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkspaceConnectionServicePrincipal) *string { return v.ClientId }).(pulumi.StringPtrOutput)
}

func (o WorkspaceConnectionServicePrincipalOutput) ClientSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkspaceConnectionServicePrincipal) *string { return v.ClientSecret }).(pulumi.StringPtrOutput)
}

func (o WorkspaceConnectionServicePrincipalOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkspaceConnectionServicePrincipal) *string { return v.TenantId }).(pulumi.StringPtrOutput)
}

type WorkspaceConnectionServicePrincipalPtrOutput struct{ *pulumi.OutputState }

func (WorkspaceConnectionServicePrincipalPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkspaceConnectionServicePrincipal)(nil)).Elem()
}

func (o WorkspaceConnectionServicePrincipalPtrOutput) ToWorkspaceConnectionServicePrincipalPtrOutput() WorkspaceConnectionServicePrincipalPtrOutput {
	return o
}

func (o WorkspaceConnectionServicePrincipalPtrOutput) ToWorkspaceConnectionServicePrincipalPtrOutputWithContext(ctx context.Context) WorkspaceConnectionServicePrincipalPtrOutput {
	return o
}

func (o WorkspaceConnectionServicePrincipalPtrOutput) Elem() WorkspaceConnectionServicePrincipalOutput {
	return o.ApplyT(func(v *WorkspaceConnectionServicePrincipal) WorkspaceConnectionServicePrincipal {
		if v != nil {
			return *v
		}
		var ret WorkspaceConnectionServicePrincipal
		return ret
	}).(WorkspaceConnectionServicePrincipalOutput)
}

func (o WorkspaceConnectionServicePrincipalPtrOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceConnectionServicePrincipal) *string {
		if v == nil {
			return nil
		}
		return v.ClientId
	}).(pulumi.StringPtrOutput)
}

func (o WorkspaceConnectionServicePrincipalPtrOutput) ClientSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceConnectionServicePrincipal) *string {
		if v == nil {
			return nil
		}
		return v.ClientSecret
	}).(pulumi.StringPtrOutput)
}

func (o WorkspaceConnectionServicePrincipalPtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceConnectionServicePrincipal) *string {
		if v == nil {
			return nil
		}
		return v.TenantId
	}).(pulumi.StringPtrOutput)
}

type WorkspaceConnectionServicePrincipalResponse struct {
	ClientId     *string `pulumi:"clientId"`
	ClientSecret *string `pulumi:"clientSecret"`
	TenantId     *string `pulumi:"tenantId"`
}

type WorkspaceConnectionServicePrincipalResponseOutput struct{ *pulumi.OutputState }

func (WorkspaceConnectionServicePrincipalResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspaceConnectionServicePrincipalResponse)(nil)).Elem()
}

func (o WorkspaceConnectionServicePrincipalResponseOutput) ToWorkspaceConnectionServicePrincipalResponseOutput() WorkspaceConnectionServicePrincipalResponseOutput {
	return o
}

func (o WorkspaceConnectionServicePrincipalResponseOutput) ToWorkspaceConnectionServicePrincipalResponseOutputWithContext(ctx context.Context) WorkspaceConnectionServicePrincipalResponseOutput {
	return o
}

func (o WorkspaceConnectionServicePrincipalResponseOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkspaceConnectionServicePrincipalResponse) *string { return v.ClientId }).(pulumi.StringPtrOutput)
}

func (o WorkspaceConnectionServicePrincipalResponseOutput) ClientSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkspaceConnectionServicePrincipalResponse) *string { return v.ClientSecret }).(pulumi.StringPtrOutput)
}

func (o WorkspaceConnectionServicePrincipalResponseOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkspaceConnectionServicePrincipalResponse) *string { return v.TenantId }).(pulumi.StringPtrOutput)
}

type WorkspaceConnectionServicePrincipalResponsePtrOutput struct{ *pulumi.OutputState }

func (WorkspaceConnectionServicePrincipalResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkspaceConnectionServicePrincipalResponse)(nil)).Elem()
}

func (o WorkspaceConnectionServicePrincipalResponsePtrOutput) ToWorkspaceConnectionServicePrincipalResponsePtrOutput() WorkspaceConnectionServicePrincipalResponsePtrOutput {
	return o
}

func (o WorkspaceConnectionServicePrincipalResponsePtrOutput) ToWorkspaceConnectionServicePrincipalResponsePtrOutputWithContext(ctx context.Context) WorkspaceConnectionServicePrincipalResponsePtrOutput {
	return o
}

func (o WorkspaceConnectionServicePrincipalResponsePtrOutput) Elem() WorkspaceConnectionServicePrincipalResponseOutput {
	return o.ApplyT(func(v *WorkspaceConnectionServicePrincipalResponse) WorkspaceConnectionServicePrincipalResponse {
		if v != nil {
			return *v
		}
		var ret WorkspaceConnectionServicePrincipalResponse
		return ret
	}).(WorkspaceConnectionServicePrincipalResponseOutput)
}

func (o WorkspaceConnectionServicePrincipalResponsePtrOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceConnectionServicePrincipalResponse) *string {
		if v == nil {
			return nil
		}
		return v.ClientId
	}).(pulumi.StringPtrOutput)
}

func (o WorkspaceConnectionServicePrincipalResponsePtrOutput) ClientSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceConnectionServicePrincipalResponse) *string {
		if v == nil {
			return nil
		}
		return v.ClientSecret
	}).(pulumi.StringPtrOutput)
}

func (o WorkspaceConnectionServicePrincipalResponsePtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceConnectionServicePrincipalResponse) *string {
		if v == nil {
			return nil
		}
		return v.TenantId
	}).(pulumi.StringPtrOutput)
}

type WorkspaceConnectionSharedAccessSignature struct {
	Sas *string `pulumi:"sas"`
}

// WorkspaceConnectionSharedAccessSignatureInput is an input type that accepts WorkspaceConnectionSharedAccessSignatureArgs and WorkspaceConnectionSharedAccessSignatureOutput values.
// You can construct a concrete instance of `WorkspaceConnectionSharedAccessSignatureInput` via:
//
//	WorkspaceConnectionSharedAccessSignatureArgs{...}
type WorkspaceConnectionSharedAccessSignatureInput interface {
	pulumi.Input

	ToWorkspaceConnectionSharedAccessSignatureOutput() WorkspaceConnectionSharedAccessSignatureOutput
	ToWorkspaceConnectionSharedAccessSignatureOutputWithContext(context.Context) WorkspaceConnectionSharedAccessSignatureOutput
}

type WorkspaceConnectionSharedAccessSignatureArgs struct {
	Sas pulumi.StringPtrInput `pulumi:"sas"`
}

func (WorkspaceConnectionSharedAccessSignatureArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspaceConnectionSharedAccessSignature)(nil)).Elem()
}

func (i WorkspaceConnectionSharedAccessSignatureArgs) ToWorkspaceConnectionSharedAccessSignatureOutput() WorkspaceConnectionSharedAccessSignatureOutput {
	return i.ToWorkspaceConnectionSharedAccessSignatureOutputWithContext(context.Background())
}

func (i WorkspaceConnectionSharedAccessSignatureArgs) ToWorkspaceConnectionSharedAccessSignatureOutputWithContext(ctx context.Context) WorkspaceConnectionSharedAccessSignatureOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceConnectionSharedAccessSignatureOutput)
}

func (i WorkspaceConnectionSharedAccessSignatureArgs) ToWorkspaceConnectionSharedAccessSignaturePtrOutput() WorkspaceConnectionSharedAccessSignaturePtrOutput {
	return i.ToWorkspaceConnectionSharedAccessSignaturePtrOutputWithContext(context.Background())
}

func (i WorkspaceConnectionSharedAccessSignatureArgs) ToWorkspaceConnectionSharedAccessSignaturePtrOutputWithContext(ctx context.Context) WorkspaceConnectionSharedAccessSignaturePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceConnectionSharedAccessSignatureOutput).ToWorkspaceConnectionSharedAccessSignaturePtrOutputWithContext(ctx)
}

// WorkspaceConnectionSharedAccessSignaturePtrInput is an input type that accepts WorkspaceConnectionSharedAccessSignatureArgs, WorkspaceConnectionSharedAccessSignaturePtr and WorkspaceConnectionSharedAccessSignaturePtrOutput values.
// You can construct a concrete instance of `WorkspaceConnectionSharedAccessSignaturePtrInput` via:
//
//	        WorkspaceConnectionSharedAccessSignatureArgs{...}
//
//	or:
//
//	        nil
type WorkspaceConnectionSharedAccessSignaturePtrInput interface {
	pulumi.Input

	ToWorkspaceConnectionSharedAccessSignaturePtrOutput() WorkspaceConnectionSharedAccessSignaturePtrOutput
	ToWorkspaceConnectionSharedAccessSignaturePtrOutputWithContext(context.Context) WorkspaceConnectionSharedAccessSignaturePtrOutput
}

type workspaceConnectionSharedAccessSignaturePtrType WorkspaceConnectionSharedAccessSignatureArgs

func WorkspaceConnectionSharedAccessSignaturePtr(v *WorkspaceConnectionSharedAccessSignatureArgs) WorkspaceConnectionSharedAccessSignaturePtrInput {
	return (*workspaceConnectionSharedAccessSignaturePtrType)(v)
}

func (*workspaceConnectionSharedAccessSignaturePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkspaceConnectionSharedAccessSignature)(nil)).Elem()
}

func (i *workspaceConnectionSharedAccessSignaturePtrType) ToWorkspaceConnectionSharedAccessSignaturePtrOutput() WorkspaceConnectionSharedAccessSignaturePtrOutput {
	return i.ToWorkspaceConnectionSharedAccessSignaturePtrOutputWithContext(context.Background())
}

func (i *workspaceConnectionSharedAccessSignaturePtrType) ToWorkspaceConnectionSharedAccessSignaturePtrOutputWithContext(ctx context.Context) WorkspaceConnectionSharedAccessSignaturePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceConnectionSharedAccessSignaturePtrOutput)
}

type WorkspaceConnectionSharedAccessSignatureOutput struct{ *pulumi.OutputState }

func (WorkspaceConnectionSharedAccessSignatureOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspaceConnectionSharedAccessSignature)(nil)).Elem()
}

func (o WorkspaceConnectionSharedAccessSignatureOutput) ToWorkspaceConnectionSharedAccessSignatureOutput() WorkspaceConnectionSharedAccessSignatureOutput {
	return o
}

func (o WorkspaceConnectionSharedAccessSignatureOutput) ToWorkspaceConnectionSharedAccessSignatureOutputWithContext(ctx context.Context) WorkspaceConnectionSharedAccessSignatureOutput {
	return o
}

func (o WorkspaceConnectionSharedAccessSignatureOutput) ToWorkspaceConnectionSharedAccessSignaturePtrOutput() WorkspaceConnectionSharedAccessSignaturePtrOutput {
	return o.ToWorkspaceConnectionSharedAccessSignaturePtrOutputWithContext(context.Background())
}

func (o WorkspaceConnectionSharedAccessSignatureOutput) ToWorkspaceConnectionSharedAccessSignaturePtrOutputWithContext(ctx context.Context) WorkspaceConnectionSharedAccessSignaturePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkspaceConnectionSharedAccessSignature) *WorkspaceConnectionSharedAccessSignature {
		return &v
	}).(WorkspaceConnectionSharedAccessSignaturePtrOutput)
}

func (o WorkspaceConnectionSharedAccessSignatureOutput) Sas() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkspaceConnectionSharedAccessSignature) *string { return v.Sas }).(pulumi.StringPtrOutput)
}

type WorkspaceConnectionSharedAccessSignaturePtrOutput struct{ *pulumi.OutputState }

func (WorkspaceConnectionSharedAccessSignaturePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkspaceConnectionSharedAccessSignature)(nil)).Elem()
}

func (o WorkspaceConnectionSharedAccessSignaturePtrOutput) ToWorkspaceConnectionSharedAccessSignaturePtrOutput() WorkspaceConnectionSharedAccessSignaturePtrOutput {
	return o
}

func (o WorkspaceConnectionSharedAccessSignaturePtrOutput) ToWorkspaceConnectionSharedAccessSignaturePtrOutputWithContext(ctx context.Context) WorkspaceConnectionSharedAccessSignaturePtrOutput {
	return o
}

func (o WorkspaceConnectionSharedAccessSignaturePtrOutput) Elem() WorkspaceConnectionSharedAccessSignatureOutput {
	return o.ApplyT(func(v *WorkspaceConnectionSharedAccessSignature) WorkspaceConnectionSharedAccessSignature {
		if v != nil {
			return *v
		}
		var ret WorkspaceConnectionSharedAccessSignature
		return ret
	}).(WorkspaceConnectionSharedAccessSignatureOutput)
}

func (o WorkspaceConnectionSharedAccessSignaturePtrOutput) Sas() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceConnectionSharedAccessSignature) *string {
		if v == nil {
			return nil
		}
		return v.Sas
	}).(pulumi.StringPtrOutput)
}

type WorkspaceConnectionSharedAccessSignatureResponse struct {
	Sas *string `pulumi:"sas"`
}

type WorkspaceConnectionSharedAccessSignatureResponseOutput struct{ *pulumi.OutputState }

func (WorkspaceConnectionSharedAccessSignatureResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspaceConnectionSharedAccessSignatureResponse)(nil)).Elem()
}

func (o WorkspaceConnectionSharedAccessSignatureResponseOutput) ToWorkspaceConnectionSharedAccessSignatureResponseOutput() WorkspaceConnectionSharedAccessSignatureResponseOutput {
	return o
}

func (o WorkspaceConnectionSharedAccessSignatureResponseOutput) ToWorkspaceConnectionSharedAccessSignatureResponseOutputWithContext(ctx context.Context) WorkspaceConnectionSharedAccessSignatureResponseOutput {
	return o
}

func (o WorkspaceConnectionSharedAccessSignatureResponseOutput) Sas() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkspaceConnectionSharedAccessSignatureResponse) *string { return v.Sas }).(pulumi.StringPtrOutput)
}

type WorkspaceConnectionSharedAccessSignatureResponsePtrOutput struct{ *pulumi.OutputState }

func (WorkspaceConnectionSharedAccessSignatureResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkspaceConnectionSharedAccessSignatureResponse)(nil)).Elem()
}

func (o WorkspaceConnectionSharedAccessSignatureResponsePtrOutput) ToWorkspaceConnectionSharedAccessSignatureResponsePtrOutput() WorkspaceConnectionSharedAccessSignatureResponsePtrOutput {
	return o
}

func (o WorkspaceConnectionSharedAccessSignatureResponsePtrOutput) ToWorkspaceConnectionSharedAccessSignatureResponsePtrOutputWithContext(ctx context.Context) WorkspaceConnectionSharedAccessSignatureResponsePtrOutput {
	return o
}

func (o WorkspaceConnectionSharedAccessSignatureResponsePtrOutput) Elem() WorkspaceConnectionSharedAccessSignatureResponseOutput {
	return o.ApplyT(func(v *WorkspaceConnectionSharedAccessSignatureResponse) WorkspaceConnectionSharedAccessSignatureResponse {
		if v != nil {
			return *v
		}
		var ret WorkspaceConnectionSharedAccessSignatureResponse
		return ret
	}).(WorkspaceConnectionSharedAccessSignatureResponseOutput)
}

func (o WorkspaceConnectionSharedAccessSignatureResponsePtrOutput) Sas() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceConnectionSharedAccessSignatureResponse) *string {
		if v == nil {
			return nil
		}
		return v.Sas
	}).(pulumi.StringPtrOutput)
}

type WorkspaceConnectionUsernamePassword struct {
	Password *string `pulumi:"password"`
	// Optional, required by connections like SalesForce for extra security in addition to UsernamePassword
	SecurityToken *string `pulumi:"securityToken"`
	Username      *string `pulumi:"username"`
}

// WorkspaceConnectionUsernamePasswordInput is an input type that accepts WorkspaceConnectionUsernamePasswordArgs and WorkspaceConnectionUsernamePasswordOutput values.
// You can construct a concrete instance of `WorkspaceConnectionUsernamePasswordInput` via:
//
//	WorkspaceConnectionUsernamePasswordArgs{...}
type WorkspaceConnectionUsernamePasswordInput interface {
	pulumi.Input

	ToWorkspaceConnectionUsernamePasswordOutput() WorkspaceConnectionUsernamePasswordOutput
	ToWorkspaceConnectionUsernamePasswordOutputWithContext(context.Context) WorkspaceConnectionUsernamePasswordOutput
}

type WorkspaceConnectionUsernamePasswordArgs struct {
	Password pulumi.StringPtrInput `pulumi:"password"`
	// Optional, required by connections like SalesForce for extra security in addition to UsernamePassword
	SecurityToken pulumi.StringPtrInput `pulumi:"securityToken"`
	Username      pulumi.StringPtrInput `pulumi:"username"`
}

func (WorkspaceConnectionUsernamePasswordArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspaceConnectionUsernamePassword)(nil)).Elem()
}

func (i WorkspaceConnectionUsernamePasswordArgs) ToWorkspaceConnectionUsernamePasswordOutput() WorkspaceConnectionUsernamePasswordOutput {
	return i.ToWorkspaceConnectionUsernamePasswordOutputWithContext(context.Background())
}

func (i WorkspaceConnectionUsernamePasswordArgs) ToWorkspaceConnectionUsernamePasswordOutputWithContext(ctx context.Context) WorkspaceConnectionUsernamePasswordOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceConnectionUsernamePasswordOutput)
}

func (i WorkspaceConnectionUsernamePasswordArgs) ToWorkspaceConnectionUsernamePasswordPtrOutput() WorkspaceConnectionUsernamePasswordPtrOutput {
	return i.ToWorkspaceConnectionUsernamePasswordPtrOutputWithContext(context.Background())
}

func (i WorkspaceConnectionUsernamePasswordArgs) ToWorkspaceConnectionUsernamePasswordPtrOutputWithContext(ctx context.Context) WorkspaceConnectionUsernamePasswordPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceConnectionUsernamePasswordOutput).ToWorkspaceConnectionUsernamePasswordPtrOutputWithContext(ctx)
}

// WorkspaceConnectionUsernamePasswordPtrInput is an input type that accepts WorkspaceConnectionUsernamePasswordArgs, WorkspaceConnectionUsernamePasswordPtr and WorkspaceConnectionUsernamePasswordPtrOutput values.
// You can construct a concrete instance of `WorkspaceConnectionUsernamePasswordPtrInput` via:
//
//	        WorkspaceConnectionUsernamePasswordArgs{...}
//
//	or:
//
//	        nil
type WorkspaceConnectionUsernamePasswordPtrInput interface {
	pulumi.Input

	ToWorkspaceConnectionUsernamePasswordPtrOutput() WorkspaceConnectionUsernamePasswordPtrOutput
	ToWorkspaceConnectionUsernamePasswordPtrOutputWithContext(context.Context) WorkspaceConnectionUsernamePasswordPtrOutput
}

type workspaceConnectionUsernamePasswordPtrType WorkspaceConnectionUsernamePasswordArgs

func WorkspaceConnectionUsernamePasswordPtr(v *WorkspaceConnectionUsernamePasswordArgs) WorkspaceConnectionUsernamePasswordPtrInput {
	return (*workspaceConnectionUsernamePasswordPtrType)(v)
}

func (*workspaceConnectionUsernamePasswordPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkspaceConnectionUsernamePassword)(nil)).Elem()
}

func (i *workspaceConnectionUsernamePasswordPtrType) ToWorkspaceConnectionUsernamePasswordPtrOutput() WorkspaceConnectionUsernamePasswordPtrOutput {
	return i.ToWorkspaceConnectionUsernamePasswordPtrOutputWithContext(context.Background())
}

func (i *workspaceConnectionUsernamePasswordPtrType) ToWorkspaceConnectionUsernamePasswordPtrOutputWithContext(ctx context.Context) WorkspaceConnectionUsernamePasswordPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceConnectionUsernamePasswordPtrOutput)
}

type WorkspaceConnectionUsernamePasswordOutput struct{ *pulumi.OutputState }

func (WorkspaceConnectionUsernamePasswordOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspaceConnectionUsernamePassword)(nil)).Elem()
}

func (o WorkspaceConnectionUsernamePasswordOutput) ToWorkspaceConnectionUsernamePasswordOutput() WorkspaceConnectionUsernamePasswordOutput {
	return o
}

func (o WorkspaceConnectionUsernamePasswordOutput) ToWorkspaceConnectionUsernamePasswordOutputWithContext(ctx context.Context) WorkspaceConnectionUsernamePasswordOutput {
	return o
}

func (o WorkspaceConnectionUsernamePasswordOutput) ToWorkspaceConnectionUsernamePasswordPtrOutput() WorkspaceConnectionUsernamePasswordPtrOutput {
	return o.ToWorkspaceConnectionUsernamePasswordPtrOutputWithContext(context.Background())
}

func (o WorkspaceConnectionUsernamePasswordOutput) ToWorkspaceConnectionUsernamePasswordPtrOutputWithContext(ctx context.Context) WorkspaceConnectionUsernamePasswordPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkspaceConnectionUsernamePassword) *WorkspaceConnectionUsernamePassword {
		return &v
	}).(WorkspaceConnectionUsernamePasswordPtrOutput)
}

func (o WorkspaceConnectionUsernamePasswordOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkspaceConnectionUsernamePassword) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// Optional, required by connections like SalesForce for extra security in addition to UsernamePassword
func (o WorkspaceConnectionUsernamePasswordOutput) SecurityToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkspaceConnectionUsernamePassword) *string { return v.SecurityToken }).(pulumi.StringPtrOutput)
}

func (o WorkspaceConnectionUsernamePasswordOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkspaceConnectionUsernamePassword) *string { return v.Username }).(pulumi.StringPtrOutput)
}

type WorkspaceConnectionUsernamePasswordPtrOutput struct{ *pulumi.OutputState }

func (WorkspaceConnectionUsernamePasswordPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkspaceConnectionUsernamePassword)(nil)).Elem()
}

func (o WorkspaceConnectionUsernamePasswordPtrOutput) ToWorkspaceConnectionUsernamePasswordPtrOutput() WorkspaceConnectionUsernamePasswordPtrOutput {
	return o
}

func (o WorkspaceConnectionUsernamePasswordPtrOutput) ToWorkspaceConnectionUsernamePasswordPtrOutputWithContext(ctx context.Context) WorkspaceConnectionUsernamePasswordPtrOutput {
	return o
}

func (o WorkspaceConnectionUsernamePasswordPtrOutput) Elem() WorkspaceConnectionUsernamePasswordOutput {
	return o.ApplyT(func(v *WorkspaceConnectionUsernamePassword) WorkspaceConnectionUsernamePassword {
		if v != nil {
			return *v
		}
		var ret WorkspaceConnectionUsernamePassword
		return ret
	}).(WorkspaceConnectionUsernamePasswordOutput)
}

func (o WorkspaceConnectionUsernamePasswordPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceConnectionUsernamePassword) *string {
		if v == nil {
			return nil
		}
		return v.Password
	}).(pulumi.StringPtrOutput)
}

// Optional, required by connections like SalesForce for extra security in addition to UsernamePassword
func (o WorkspaceConnectionUsernamePasswordPtrOutput) SecurityToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceConnectionUsernamePassword) *string {
		if v == nil {
			return nil
		}
		return v.SecurityToken
	}).(pulumi.StringPtrOutput)
}

func (o WorkspaceConnectionUsernamePasswordPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceConnectionUsernamePassword) *string {
		if v == nil {
			return nil
		}
		return v.Username
	}).(pulumi.StringPtrOutput)
}

type WorkspaceConnectionUsernamePasswordResponse struct {
	Password *string `pulumi:"password"`
	// Optional, required by connections like SalesForce for extra security in addition to UsernamePassword
	SecurityToken *string `pulumi:"securityToken"`
	Username      *string `pulumi:"username"`
}

type WorkspaceConnectionUsernamePasswordResponseOutput struct{ *pulumi.OutputState }

func (WorkspaceConnectionUsernamePasswordResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspaceConnectionUsernamePasswordResponse)(nil)).Elem()
}

func (o WorkspaceConnectionUsernamePasswordResponseOutput) ToWorkspaceConnectionUsernamePasswordResponseOutput() WorkspaceConnectionUsernamePasswordResponseOutput {
	return o
}

func (o WorkspaceConnectionUsernamePasswordResponseOutput) ToWorkspaceConnectionUsernamePasswordResponseOutputWithContext(ctx context.Context) WorkspaceConnectionUsernamePasswordResponseOutput {
	return o
}

func (o WorkspaceConnectionUsernamePasswordResponseOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkspaceConnectionUsernamePasswordResponse) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// Optional, required by connections like SalesForce for extra security in addition to UsernamePassword
func (o WorkspaceConnectionUsernamePasswordResponseOutput) SecurityToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkspaceConnectionUsernamePasswordResponse) *string { return v.SecurityToken }).(pulumi.StringPtrOutput)
}

func (o WorkspaceConnectionUsernamePasswordResponseOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkspaceConnectionUsernamePasswordResponse) *string { return v.Username }).(pulumi.StringPtrOutput)
}

type WorkspaceConnectionUsernamePasswordResponsePtrOutput struct{ *pulumi.OutputState }

func (WorkspaceConnectionUsernamePasswordResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkspaceConnectionUsernamePasswordResponse)(nil)).Elem()
}

func (o WorkspaceConnectionUsernamePasswordResponsePtrOutput) ToWorkspaceConnectionUsernamePasswordResponsePtrOutput() WorkspaceConnectionUsernamePasswordResponsePtrOutput {
	return o
}

func (o WorkspaceConnectionUsernamePasswordResponsePtrOutput) ToWorkspaceConnectionUsernamePasswordResponsePtrOutputWithContext(ctx context.Context) WorkspaceConnectionUsernamePasswordResponsePtrOutput {
	return o
}

func (o WorkspaceConnectionUsernamePasswordResponsePtrOutput) Elem() WorkspaceConnectionUsernamePasswordResponseOutput {
	return o.ApplyT(func(v *WorkspaceConnectionUsernamePasswordResponse) WorkspaceConnectionUsernamePasswordResponse {
		if v != nil {
			return *v
		}
		var ret WorkspaceConnectionUsernamePasswordResponse
		return ret
	}).(WorkspaceConnectionUsernamePasswordResponseOutput)
}

func (o WorkspaceConnectionUsernamePasswordResponsePtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceConnectionUsernamePasswordResponse) *string {
		if v == nil {
			return nil
		}
		return v.Password
	}).(pulumi.StringPtrOutput)
}

// Optional, required by connections like SalesForce for extra security in addition to UsernamePassword
func (o WorkspaceConnectionUsernamePasswordResponsePtrOutput) SecurityToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceConnectionUsernamePasswordResponse) *string {
		if v == nil {
			return nil
		}
		return v.SecurityToken
	}).(pulumi.StringPtrOutput)
}

func (o WorkspaceConnectionUsernamePasswordResponsePtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceConnectionUsernamePasswordResponse) *string {
		if v == nil {
			return nil
		}
		return v.Username
	}).(pulumi.StringPtrOutput)
}

// WorkspaceHub's configuration object.
type WorkspaceHubConfig struct {
	AdditionalWorkspaceStorageAccounts []string `pulumi:"additionalWorkspaceStorageAccounts"`
	DefaultWorkspaceResourceGroup      *string  `pulumi:"defaultWorkspaceResourceGroup"`
}

// WorkspaceHubConfigInput is an input type that accepts WorkspaceHubConfigArgs and WorkspaceHubConfigOutput values.
// You can construct a concrete instance of `WorkspaceHubConfigInput` via:
//
//	WorkspaceHubConfigArgs{...}
type WorkspaceHubConfigInput interface {
	pulumi.Input

	ToWorkspaceHubConfigOutput() WorkspaceHubConfigOutput
	ToWorkspaceHubConfigOutputWithContext(context.Context) WorkspaceHubConfigOutput
}

// WorkspaceHub's configuration object.
type WorkspaceHubConfigArgs struct {
	AdditionalWorkspaceStorageAccounts pulumi.StringArrayInput `pulumi:"additionalWorkspaceStorageAccounts"`
	DefaultWorkspaceResourceGroup      pulumi.StringPtrInput   `pulumi:"defaultWorkspaceResourceGroup"`
}

func (WorkspaceHubConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspaceHubConfig)(nil)).Elem()
}

func (i WorkspaceHubConfigArgs) ToWorkspaceHubConfigOutput() WorkspaceHubConfigOutput {
	return i.ToWorkspaceHubConfigOutputWithContext(context.Background())
}

func (i WorkspaceHubConfigArgs) ToWorkspaceHubConfigOutputWithContext(ctx context.Context) WorkspaceHubConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceHubConfigOutput)
}

func (i WorkspaceHubConfigArgs) ToWorkspaceHubConfigPtrOutput() WorkspaceHubConfigPtrOutput {
	return i.ToWorkspaceHubConfigPtrOutputWithContext(context.Background())
}

func (i WorkspaceHubConfigArgs) ToWorkspaceHubConfigPtrOutputWithContext(ctx context.Context) WorkspaceHubConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceHubConfigOutput).ToWorkspaceHubConfigPtrOutputWithContext(ctx)
}

// WorkspaceHubConfigPtrInput is an input type that accepts WorkspaceHubConfigArgs, WorkspaceHubConfigPtr and WorkspaceHubConfigPtrOutput values.
// You can construct a concrete instance of `WorkspaceHubConfigPtrInput` via:
//
//	        WorkspaceHubConfigArgs{...}
//
//	or:
//
//	        nil
type WorkspaceHubConfigPtrInput interface {
	pulumi.Input

	ToWorkspaceHubConfigPtrOutput() WorkspaceHubConfigPtrOutput
	ToWorkspaceHubConfigPtrOutputWithContext(context.Context) WorkspaceHubConfigPtrOutput
}

type workspaceHubConfigPtrType WorkspaceHubConfigArgs

func WorkspaceHubConfigPtr(v *WorkspaceHubConfigArgs) WorkspaceHubConfigPtrInput {
	return (*workspaceHubConfigPtrType)(v)
}

func (*workspaceHubConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkspaceHubConfig)(nil)).Elem()
}

func (i *workspaceHubConfigPtrType) ToWorkspaceHubConfigPtrOutput() WorkspaceHubConfigPtrOutput {
	return i.ToWorkspaceHubConfigPtrOutputWithContext(context.Background())
}

func (i *workspaceHubConfigPtrType) ToWorkspaceHubConfigPtrOutputWithContext(ctx context.Context) WorkspaceHubConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceHubConfigPtrOutput)
}

// WorkspaceHub's configuration object.
type WorkspaceHubConfigOutput struct{ *pulumi.OutputState }

func (WorkspaceHubConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspaceHubConfig)(nil)).Elem()
}

func (o WorkspaceHubConfigOutput) ToWorkspaceHubConfigOutput() WorkspaceHubConfigOutput {
	return o
}

func (o WorkspaceHubConfigOutput) ToWorkspaceHubConfigOutputWithContext(ctx context.Context) WorkspaceHubConfigOutput {
	return o
}

func (o WorkspaceHubConfigOutput) ToWorkspaceHubConfigPtrOutput() WorkspaceHubConfigPtrOutput {
	return o.ToWorkspaceHubConfigPtrOutputWithContext(context.Background())
}

func (o WorkspaceHubConfigOutput) ToWorkspaceHubConfigPtrOutputWithContext(ctx context.Context) WorkspaceHubConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkspaceHubConfig) *WorkspaceHubConfig {
		return &v
	}).(WorkspaceHubConfigPtrOutput)
}

func (o WorkspaceHubConfigOutput) AdditionalWorkspaceStorageAccounts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WorkspaceHubConfig) []string { return v.AdditionalWorkspaceStorageAccounts }).(pulumi.StringArrayOutput)
}

func (o WorkspaceHubConfigOutput) DefaultWorkspaceResourceGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkspaceHubConfig) *string { return v.DefaultWorkspaceResourceGroup }).(pulumi.StringPtrOutput)
}

type WorkspaceHubConfigPtrOutput struct{ *pulumi.OutputState }

func (WorkspaceHubConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkspaceHubConfig)(nil)).Elem()
}

func (o WorkspaceHubConfigPtrOutput) ToWorkspaceHubConfigPtrOutput() WorkspaceHubConfigPtrOutput {
	return o
}

func (o WorkspaceHubConfigPtrOutput) ToWorkspaceHubConfigPtrOutputWithContext(ctx context.Context) WorkspaceHubConfigPtrOutput {
	return o
}

func (o WorkspaceHubConfigPtrOutput) Elem() WorkspaceHubConfigOutput {
	return o.ApplyT(func(v *WorkspaceHubConfig) WorkspaceHubConfig {
		if v != nil {
			return *v
		}
		var ret WorkspaceHubConfig
		return ret
	}).(WorkspaceHubConfigOutput)
}

func (o WorkspaceHubConfigPtrOutput) AdditionalWorkspaceStorageAccounts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *WorkspaceHubConfig) []string {
		if v == nil {
			return nil
		}
		return v.AdditionalWorkspaceStorageAccounts
	}).(pulumi.StringArrayOutput)
}

func (o WorkspaceHubConfigPtrOutput) DefaultWorkspaceResourceGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceHubConfig) *string {
		if v == nil {
			return nil
		}
		return v.DefaultWorkspaceResourceGroup
	}).(pulumi.StringPtrOutput)
}

// WorkspaceHub's configuration object.
type WorkspaceHubConfigResponse struct {
	AdditionalWorkspaceStorageAccounts []string `pulumi:"additionalWorkspaceStorageAccounts"`
	DefaultWorkspaceResourceGroup      *string  `pulumi:"defaultWorkspaceResourceGroup"`
}

// WorkspaceHub's configuration object.
type WorkspaceHubConfigResponseOutput struct{ *pulumi.OutputState }

func (WorkspaceHubConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspaceHubConfigResponse)(nil)).Elem()
}

func (o WorkspaceHubConfigResponseOutput) ToWorkspaceHubConfigResponseOutput() WorkspaceHubConfigResponseOutput {
	return o
}

func (o WorkspaceHubConfigResponseOutput) ToWorkspaceHubConfigResponseOutputWithContext(ctx context.Context) WorkspaceHubConfigResponseOutput {
	return o
}

func (o WorkspaceHubConfigResponseOutput) AdditionalWorkspaceStorageAccounts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WorkspaceHubConfigResponse) []string { return v.AdditionalWorkspaceStorageAccounts }).(pulumi.StringArrayOutput)
}

func (o WorkspaceHubConfigResponseOutput) DefaultWorkspaceResourceGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkspaceHubConfigResponse) *string { return v.DefaultWorkspaceResourceGroup }).(pulumi.StringPtrOutput)
}

type WorkspaceHubConfigResponsePtrOutput struct{ *pulumi.OutputState }

func (WorkspaceHubConfigResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkspaceHubConfigResponse)(nil)).Elem()
}

func (o WorkspaceHubConfigResponsePtrOutput) ToWorkspaceHubConfigResponsePtrOutput() WorkspaceHubConfigResponsePtrOutput {
	return o
}

func (o WorkspaceHubConfigResponsePtrOutput) ToWorkspaceHubConfigResponsePtrOutputWithContext(ctx context.Context) WorkspaceHubConfigResponsePtrOutput {
	return o
}

func (o WorkspaceHubConfigResponsePtrOutput) Elem() WorkspaceHubConfigResponseOutput {
	return o.ApplyT(func(v *WorkspaceHubConfigResponse) WorkspaceHubConfigResponse {
		if v != nil {
			return *v
		}
		var ret WorkspaceHubConfigResponse
		return ret
	}).(WorkspaceHubConfigResponseOutput)
}

func (o WorkspaceHubConfigResponsePtrOutput) AdditionalWorkspaceStorageAccounts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *WorkspaceHubConfigResponse) []string {
		if v == nil {
			return nil
		}
		return v.AdditionalWorkspaceStorageAccounts
	}).(pulumi.StringArrayOutput)
}

func (o WorkspaceHubConfigResponsePtrOutput) DefaultWorkspaceResourceGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceHubConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.DefaultWorkspaceResourceGroup
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(SystemCreatedStorageAccountResponseOutput{})
	pulumi.RegisterOutputType(SystemCreatedStorageAccountResponsePtrOutput{})
	pulumi.RegisterOutputType(SystemDataResponseOutput{})
	pulumi.RegisterOutputType(SystemServiceResponseOutput{})
	pulumi.RegisterOutputType(SystemServiceResponseArrayOutput{})
	pulumi.RegisterOutputType(TableVerticalFeaturizationSettingsOutput{})
	pulumi.RegisterOutputType(TableVerticalFeaturizationSettingsPtrOutput{})
	pulumi.RegisterOutputType(TableVerticalFeaturizationSettingsResponseOutput{})
	pulumi.RegisterOutputType(TableVerticalFeaturizationSettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(TableVerticalLimitSettingsOutput{})
	pulumi.RegisterOutputType(TableVerticalLimitSettingsPtrOutput{})
	pulumi.RegisterOutputType(TableVerticalLimitSettingsResponseOutput{})
	pulumi.RegisterOutputType(TableVerticalLimitSettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(TargetUtilizationScaleSettingsOutput{})
	pulumi.RegisterOutputType(TargetUtilizationScaleSettingsPtrOutput{})
	pulumi.RegisterOutputType(TargetUtilizationScaleSettingsResponseOutput{})
	pulumi.RegisterOutputType(TargetUtilizationScaleSettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(TensorFlowOutput{})
	pulumi.RegisterOutputType(TensorFlowPtrOutput{})
	pulumi.RegisterOutputType(TensorFlowResponseOutput{})
	pulumi.RegisterOutputType(TensorFlowResponsePtrOutput{})
	pulumi.RegisterOutputType(TextClassificationOutput{})
	pulumi.RegisterOutputType(TextClassificationMultilabelOutput{})
	pulumi.RegisterOutputType(TextClassificationMultilabelResponseOutput{})
	pulumi.RegisterOutputType(TextClassificationResponseOutput{})
	pulumi.RegisterOutputType(TextNerOutput{})
	pulumi.RegisterOutputType(TextNerResponseOutput{})
	pulumi.RegisterOutputType(TmpfsOptionsOutput{})
	pulumi.RegisterOutputType(TmpfsOptionsPtrOutput{})
	pulumi.RegisterOutputType(TmpfsOptionsResponseOutput{})
	pulumi.RegisterOutputType(TmpfsOptionsResponsePtrOutput{})
	pulumi.RegisterOutputType(TopNFeaturesByAttributionOutput{})
	pulumi.RegisterOutputType(TopNFeaturesByAttributionPtrOutput{})
	pulumi.RegisterOutputType(TopNFeaturesByAttributionResponseOutput{})
	pulumi.RegisterOutputType(TopNFeaturesByAttributionResponsePtrOutput{})
	pulumi.RegisterOutputType(TrialComponentOutput{})
	pulumi.RegisterOutputType(TrialComponentResponseOutput{})
	pulumi.RegisterOutputType(TritonModelJobInputOutput{})
	pulumi.RegisterOutputType(TritonModelJobInputResponseOutput{})
	pulumi.RegisterOutputType(TritonModelJobOutputOutput{})
	pulumi.RegisterOutputType(TritonModelJobOutputResponseOutput{})
	pulumi.RegisterOutputType(TruncationSelectionPolicyOutput{})
	pulumi.RegisterOutputType(TruncationSelectionPolicyPtrOutput{})
	pulumi.RegisterOutputType(TruncationSelectionPolicyResponseOutput{})
	pulumi.RegisterOutputType(TruncationSelectionPolicyResponsePtrOutput{})
	pulumi.RegisterOutputType(UriFileDataVersionOutput{})
	pulumi.RegisterOutputType(UriFileDataVersionResponseOutput{})
	pulumi.RegisterOutputType(UriFileJobInputOutput{})
	pulumi.RegisterOutputType(UriFileJobInputResponseOutput{})
	pulumi.RegisterOutputType(UriFileJobOutputOutput{})
	pulumi.RegisterOutputType(UriFileJobOutputResponseOutput{})
	pulumi.RegisterOutputType(UriFolderDataVersionOutput{})
	pulumi.RegisterOutputType(UriFolderDataVersionResponseOutput{})
	pulumi.RegisterOutputType(UriFolderJobInputOutput{})
	pulumi.RegisterOutputType(UriFolderJobInputResponseOutput{})
	pulumi.RegisterOutputType(UriFolderJobOutputOutput{})
	pulumi.RegisterOutputType(UriFolderJobOutputResponseOutput{})
	pulumi.RegisterOutputType(UserAccountCredentialsOutput{})
	pulumi.RegisterOutputType(UserAccountCredentialsPtrOutput{})
	pulumi.RegisterOutputType(UserAccountCredentialsResponseOutput{})
	pulumi.RegisterOutputType(UserAccountCredentialsResponsePtrOutput{})
	pulumi.RegisterOutputType(UserAssignedIdentityResponseOutput{})
	pulumi.RegisterOutputType(UserAssignedIdentityResponseMapOutput{})
	pulumi.RegisterOutputType(UserCreatedAcrAccountOutput{})
	pulumi.RegisterOutputType(UserCreatedAcrAccountPtrOutput{})
	pulumi.RegisterOutputType(UserCreatedAcrAccountResponseOutput{})
	pulumi.RegisterOutputType(UserCreatedAcrAccountResponsePtrOutput{})
	pulumi.RegisterOutputType(UserCreatedStorageAccountOutput{})
	pulumi.RegisterOutputType(UserCreatedStorageAccountPtrOutput{})
	pulumi.RegisterOutputType(UserCreatedStorageAccountResponseOutput{})
	pulumi.RegisterOutputType(UserCreatedStorageAccountResponsePtrOutput{})
	pulumi.RegisterOutputType(UserIdentityOutput{})
	pulumi.RegisterOutputType(UserIdentityPtrOutput{})
	pulumi.RegisterOutputType(UserIdentityResponseOutput{})
	pulumi.RegisterOutputType(UserIdentityResponsePtrOutput{})
	pulumi.RegisterOutputType(UsernamePasswordAuthTypeWorkspaceConnectionPropertiesOutput{})
	pulumi.RegisterOutputType(UsernamePasswordAuthTypeWorkspaceConnectionPropertiesResponseOutput{})
	pulumi.RegisterOutputType(VirtualMachineOutput{})
	pulumi.RegisterOutputType(VirtualMachinePtrOutput{})
	pulumi.RegisterOutputType(VirtualMachineImageOutput{})
	pulumi.RegisterOutputType(VirtualMachineImagePtrOutput{})
	pulumi.RegisterOutputType(VirtualMachineImageResponseOutput{})
	pulumi.RegisterOutputType(VirtualMachineImageResponsePtrOutput{})
	pulumi.RegisterOutputType(VirtualMachineResponseOutput{})
	pulumi.RegisterOutputType(VirtualMachineSchemaPropertiesOutput{})
	pulumi.RegisterOutputType(VirtualMachineSchemaPropertiesPtrOutput{})
	pulumi.RegisterOutputType(VirtualMachineSchemaResponsePropertiesOutput{})
	pulumi.RegisterOutputType(VirtualMachineSchemaResponsePropertiesPtrOutput{})
	pulumi.RegisterOutputType(VirtualMachineSshCredentialsOutput{})
	pulumi.RegisterOutputType(VirtualMachineSshCredentialsPtrOutput{})
	pulumi.RegisterOutputType(VirtualMachineSshCredentialsResponseOutput{})
	pulumi.RegisterOutputType(VirtualMachineSshCredentialsResponsePtrOutput{})
	pulumi.RegisterOutputType(VolumeDefinitionOutput{})
	pulumi.RegisterOutputType(VolumeDefinitionArrayOutput{})
	pulumi.RegisterOutputType(VolumeDefinitionResponseOutput{})
	pulumi.RegisterOutputType(VolumeDefinitionResponseArrayOutput{})
	pulumi.RegisterOutputType(VolumeOptionsOutput{})
	pulumi.RegisterOutputType(VolumeOptionsPtrOutput{})
	pulumi.RegisterOutputType(VolumeOptionsResponseOutput{})
	pulumi.RegisterOutputType(VolumeOptionsResponsePtrOutput{})
	pulumi.RegisterOutputType(WorkspaceConnectionAccessKeyOutput{})
	pulumi.RegisterOutputType(WorkspaceConnectionAccessKeyPtrOutput{})
	pulumi.RegisterOutputType(WorkspaceConnectionAccessKeyResponseOutput{})
	pulumi.RegisterOutputType(WorkspaceConnectionAccessKeyResponsePtrOutput{})
	pulumi.RegisterOutputType(WorkspaceConnectionApiKeyOutput{})
	pulumi.RegisterOutputType(WorkspaceConnectionApiKeyPtrOutput{})
	pulumi.RegisterOutputType(WorkspaceConnectionApiKeyResponseOutput{})
	pulumi.RegisterOutputType(WorkspaceConnectionApiKeyResponsePtrOutput{})
	pulumi.RegisterOutputType(WorkspaceConnectionManagedIdentityOutput{})
	pulumi.RegisterOutputType(WorkspaceConnectionManagedIdentityPtrOutput{})
	pulumi.RegisterOutputType(WorkspaceConnectionManagedIdentityResponseOutput{})
	pulumi.RegisterOutputType(WorkspaceConnectionManagedIdentityResponsePtrOutput{})
	pulumi.RegisterOutputType(WorkspaceConnectionOAuth2Output{})
	pulumi.RegisterOutputType(WorkspaceConnectionOAuth2PtrOutput{})
	pulumi.RegisterOutputType(WorkspaceConnectionOAuth2ResponseOutput{})
	pulumi.RegisterOutputType(WorkspaceConnectionOAuth2ResponsePtrOutput{})
	pulumi.RegisterOutputType(WorkspaceConnectionPersonalAccessTokenOutput{})
	pulumi.RegisterOutputType(WorkspaceConnectionPersonalAccessTokenPtrOutput{})
	pulumi.RegisterOutputType(WorkspaceConnectionPersonalAccessTokenResponseOutput{})
	pulumi.RegisterOutputType(WorkspaceConnectionPersonalAccessTokenResponsePtrOutput{})
	pulumi.RegisterOutputType(WorkspaceConnectionServicePrincipalOutput{})
	pulumi.RegisterOutputType(WorkspaceConnectionServicePrincipalPtrOutput{})
	pulumi.RegisterOutputType(WorkspaceConnectionServicePrincipalResponseOutput{})
	pulumi.RegisterOutputType(WorkspaceConnectionServicePrincipalResponsePtrOutput{})
	pulumi.RegisterOutputType(WorkspaceConnectionSharedAccessSignatureOutput{})
	pulumi.RegisterOutputType(WorkspaceConnectionSharedAccessSignaturePtrOutput{})
	pulumi.RegisterOutputType(WorkspaceConnectionSharedAccessSignatureResponseOutput{})
	pulumi.RegisterOutputType(WorkspaceConnectionSharedAccessSignatureResponsePtrOutput{})
	pulumi.RegisterOutputType(WorkspaceConnectionUsernamePasswordOutput{})
	pulumi.RegisterOutputType(WorkspaceConnectionUsernamePasswordPtrOutput{})
	pulumi.RegisterOutputType(WorkspaceConnectionUsernamePasswordResponseOutput{})
	pulumi.RegisterOutputType(WorkspaceConnectionUsernamePasswordResponsePtrOutput{})
	pulumi.RegisterOutputType(WorkspaceHubConfigOutput{})
	pulumi.RegisterOutputType(WorkspaceHubConfigPtrOutput{})
	pulumi.RegisterOutputType(WorkspaceHubConfigResponseOutput{})
	pulumi.RegisterOutputType(WorkspaceHubConfigResponsePtrOutput{})
}
