// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package machinelearningservices

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Azure REST API version: 2024-04-01-preview.
type ConnectionDeployment struct {
	pulumi.CustomResourceState

	// The name of the resource
	Name       pulumi.StringOutput `pulumi:"name"`
	Properties pulumi.AnyOutput    `pulumi:"properties"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponseOutput `pulumi:"systemData"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewConnectionDeployment registers a new resource with the given unique name, arguments, and options.
func NewConnectionDeployment(ctx *pulumi.Context,
	name string, args *ConnectionDeploymentArgs, opts ...pulumi.ResourceOption) (*ConnectionDeployment, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ConnectionName == nil {
		return nil, errors.New("invalid value for required argument 'ConnectionName'")
	}
	if args.Properties == nil {
		return nil, errors.New("invalid value for required argument 'Properties'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	if args.WorkspaceName == nil {
		return nil, errors.New("invalid value for required argument 'WorkspaceName'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:machinelearningservices/v20240401preview:ConnectionDeployment"),
		},
	})
	opts = append(opts, aliases)
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource ConnectionDeployment
	err := ctx.RegisterResource("azure-native:machinelearningservices:ConnectionDeployment", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetConnectionDeployment gets an existing ConnectionDeployment resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetConnectionDeployment(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ConnectionDeploymentState, opts ...pulumi.ResourceOption) (*ConnectionDeployment, error) {
	var resource ConnectionDeployment
	err := ctx.ReadResource("azure-native:machinelearningservices:ConnectionDeployment", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ConnectionDeployment resources.
type connectionDeploymentState struct {
}

type ConnectionDeploymentState struct {
}

func (ConnectionDeploymentState) ElementType() reflect.Type {
	return reflect.TypeOf((*connectionDeploymentState)(nil)).Elem()
}

type connectionDeploymentArgs struct {
	// Friendly name of the workspace connection
	ConnectionName string `pulumi:"connectionName"`
	// Name of the deployment resource
	DeploymentName *string     `pulumi:"deploymentName"`
	Properties     interface{} `pulumi:"properties"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Azure Machine Learning Workspace Name
	WorkspaceName string `pulumi:"workspaceName"`
}

// The set of arguments for constructing a ConnectionDeployment resource.
type ConnectionDeploymentArgs struct {
	// Friendly name of the workspace connection
	ConnectionName pulumi.StringInput
	// Name of the deployment resource
	DeploymentName pulumi.StringPtrInput
	Properties     pulumi.Input
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput
	// Azure Machine Learning Workspace Name
	WorkspaceName pulumi.StringInput
}

func (ConnectionDeploymentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*connectionDeploymentArgs)(nil)).Elem()
}

type ConnectionDeploymentInput interface {
	pulumi.Input

	ToConnectionDeploymentOutput() ConnectionDeploymentOutput
	ToConnectionDeploymentOutputWithContext(ctx context.Context) ConnectionDeploymentOutput
}

func (*ConnectionDeployment) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionDeployment)(nil)).Elem()
}

func (i *ConnectionDeployment) ToConnectionDeploymentOutput() ConnectionDeploymentOutput {
	return i.ToConnectionDeploymentOutputWithContext(context.Background())
}

func (i *ConnectionDeployment) ToConnectionDeploymentOutputWithContext(ctx context.Context) ConnectionDeploymentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionDeploymentOutput)
}

type ConnectionDeploymentOutput struct{ *pulumi.OutputState }

func (ConnectionDeploymentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionDeployment)(nil)).Elem()
}

func (o ConnectionDeploymentOutput) ToConnectionDeploymentOutput() ConnectionDeploymentOutput {
	return o
}

func (o ConnectionDeploymentOutput) ToConnectionDeploymentOutputWithContext(ctx context.Context) ConnectionDeploymentOutput {
	return o
}

// The name of the resource
func (o ConnectionDeploymentOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ConnectionDeployment) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o ConnectionDeploymentOutput) Properties() pulumi.AnyOutput {
	return o.ApplyT(func(v *ConnectionDeployment) pulumi.AnyOutput { return v.Properties }).(pulumi.AnyOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o ConnectionDeploymentOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v *ConnectionDeployment) SystemDataResponseOutput { return v.SystemData }).(SystemDataResponseOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o ConnectionDeploymentOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *ConnectionDeployment) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(ConnectionDeploymentOutput{})
}
