// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20230401

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Policy for sharing applications on this compute instance among users of parent workspace. If Personal, only the creator can access applications on this compute instance. When Shared, any workspace user can access applications on this instance depending on his/her assigned role.
type ApplicationSharingPolicy string

const (
	ApplicationSharingPolicyPersonal = ApplicationSharingPolicy("Personal")
	ApplicationSharingPolicyShared   = ApplicationSharingPolicy("Shared")
)

func (ApplicationSharingPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationSharingPolicy)(nil)).Elem()
}

func (e ApplicationSharingPolicy) ToApplicationSharingPolicyOutput() ApplicationSharingPolicyOutput {
	return pulumi.ToOutput(e).(ApplicationSharingPolicyOutput)
}

func (e ApplicationSharingPolicy) ToApplicationSharingPolicyOutputWithContext(ctx context.Context) ApplicationSharingPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ApplicationSharingPolicyOutput)
}

func (e ApplicationSharingPolicy) ToApplicationSharingPolicyPtrOutput() ApplicationSharingPolicyPtrOutput {
	return e.ToApplicationSharingPolicyPtrOutputWithContext(context.Background())
}

func (e ApplicationSharingPolicy) ToApplicationSharingPolicyPtrOutputWithContext(ctx context.Context) ApplicationSharingPolicyPtrOutput {
	return ApplicationSharingPolicy(e).ToApplicationSharingPolicyOutputWithContext(ctx).ToApplicationSharingPolicyPtrOutputWithContext(ctx)
}

func (e ApplicationSharingPolicy) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ApplicationSharingPolicy) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ApplicationSharingPolicy) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ApplicationSharingPolicy) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ApplicationSharingPolicyOutput struct{ *pulumi.OutputState }

func (ApplicationSharingPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationSharingPolicy)(nil)).Elem()
}

func (o ApplicationSharingPolicyOutput) ToApplicationSharingPolicyOutput() ApplicationSharingPolicyOutput {
	return o
}

func (o ApplicationSharingPolicyOutput) ToApplicationSharingPolicyOutputWithContext(ctx context.Context) ApplicationSharingPolicyOutput {
	return o
}

func (o ApplicationSharingPolicyOutput) ToApplicationSharingPolicyPtrOutput() ApplicationSharingPolicyPtrOutput {
	return o.ToApplicationSharingPolicyPtrOutputWithContext(context.Background())
}

func (o ApplicationSharingPolicyOutput) ToApplicationSharingPolicyPtrOutputWithContext(ctx context.Context) ApplicationSharingPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApplicationSharingPolicy) *ApplicationSharingPolicy {
		return &v
	}).(ApplicationSharingPolicyPtrOutput)
}

func (o ApplicationSharingPolicyOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ApplicationSharingPolicyOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ApplicationSharingPolicy) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ApplicationSharingPolicyOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ApplicationSharingPolicyOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ApplicationSharingPolicy) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ApplicationSharingPolicyPtrOutput struct{ *pulumi.OutputState }

func (ApplicationSharingPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationSharingPolicy)(nil)).Elem()
}

func (o ApplicationSharingPolicyPtrOutput) ToApplicationSharingPolicyPtrOutput() ApplicationSharingPolicyPtrOutput {
	return o
}

func (o ApplicationSharingPolicyPtrOutput) ToApplicationSharingPolicyPtrOutputWithContext(ctx context.Context) ApplicationSharingPolicyPtrOutput {
	return o
}

func (o ApplicationSharingPolicyPtrOutput) Elem() ApplicationSharingPolicyOutput {
	return o.ApplyT(func(v *ApplicationSharingPolicy) ApplicationSharingPolicy {
		if v != nil {
			return *v
		}
		var ret ApplicationSharingPolicy
		return ret
	}).(ApplicationSharingPolicyOutput)
}

func (o ApplicationSharingPolicyPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ApplicationSharingPolicyPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ApplicationSharingPolicy) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ApplicationSharingPolicyInput is an input type that accepts values of the ApplicationSharingPolicy enum
// A concrete instance of `ApplicationSharingPolicyInput` can be one of the following:
//
//	ApplicationSharingPolicyPersonal
//	ApplicationSharingPolicyShared
type ApplicationSharingPolicyInput interface {
	pulumi.Input

	ToApplicationSharingPolicyOutput() ApplicationSharingPolicyOutput
	ToApplicationSharingPolicyOutputWithContext(context.Context) ApplicationSharingPolicyOutput
}

var applicationSharingPolicyPtrType = reflect.TypeOf((**ApplicationSharingPolicy)(nil)).Elem()

type ApplicationSharingPolicyPtrInput interface {
	pulumi.Input

	ToApplicationSharingPolicyPtrOutput() ApplicationSharingPolicyPtrOutput
	ToApplicationSharingPolicyPtrOutputWithContext(context.Context) ApplicationSharingPolicyPtrOutput
}

type applicationSharingPolicyPtr string

func ApplicationSharingPolicyPtr(v string) ApplicationSharingPolicyPtrInput {
	return (*applicationSharingPolicyPtr)(&v)
}

func (*applicationSharingPolicyPtr) ElementType() reflect.Type {
	return applicationSharingPolicyPtrType
}

func (in *applicationSharingPolicyPtr) ToApplicationSharingPolicyPtrOutput() ApplicationSharingPolicyPtrOutput {
	return pulumi.ToOutput(in).(ApplicationSharingPolicyPtrOutput)
}

func (in *applicationSharingPolicyPtr) ToApplicationSharingPolicyPtrOutputWithContext(ctx context.Context) ApplicationSharingPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ApplicationSharingPolicyPtrOutput)
}

// Defines if image needs to be rebuilt based on base image changes.
type AutoRebuildSetting string

const (
	AutoRebuildSettingDisabled          = AutoRebuildSetting("Disabled")
	AutoRebuildSettingOnBaseImageUpdate = AutoRebuildSetting("OnBaseImageUpdate")
)

func (AutoRebuildSetting) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoRebuildSetting)(nil)).Elem()
}

func (e AutoRebuildSetting) ToAutoRebuildSettingOutput() AutoRebuildSettingOutput {
	return pulumi.ToOutput(e).(AutoRebuildSettingOutput)
}

func (e AutoRebuildSetting) ToAutoRebuildSettingOutputWithContext(ctx context.Context) AutoRebuildSettingOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AutoRebuildSettingOutput)
}

func (e AutoRebuildSetting) ToAutoRebuildSettingPtrOutput() AutoRebuildSettingPtrOutput {
	return e.ToAutoRebuildSettingPtrOutputWithContext(context.Background())
}

func (e AutoRebuildSetting) ToAutoRebuildSettingPtrOutputWithContext(ctx context.Context) AutoRebuildSettingPtrOutput {
	return AutoRebuildSetting(e).ToAutoRebuildSettingOutputWithContext(ctx).ToAutoRebuildSettingPtrOutputWithContext(ctx)
}

func (e AutoRebuildSetting) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AutoRebuildSetting) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AutoRebuildSetting) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AutoRebuildSetting) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AutoRebuildSettingOutput struct{ *pulumi.OutputState }

func (AutoRebuildSettingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoRebuildSetting)(nil)).Elem()
}

func (o AutoRebuildSettingOutput) ToAutoRebuildSettingOutput() AutoRebuildSettingOutput {
	return o
}

func (o AutoRebuildSettingOutput) ToAutoRebuildSettingOutputWithContext(ctx context.Context) AutoRebuildSettingOutput {
	return o
}

func (o AutoRebuildSettingOutput) ToAutoRebuildSettingPtrOutput() AutoRebuildSettingPtrOutput {
	return o.ToAutoRebuildSettingPtrOutputWithContext(context.Background())
}

func (o AutoRebuildSettingOutput) ToAutoRebuildSettingPtrOutputWithContext(ctx context.Context) AutoRebuildSettingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AutoRebuildSetting) *AutoRebuildSetting {
		return &v
	}).(AutoRebuildSettingPtrOutput)
}

func (o AutoRebuildSettingOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AutoRebuildSettingOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AutoRebuildSetting) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AutoRebuildSettingOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AutoRebuildSettingOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AutoRebuildSetting) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AutoRebuildSettingPtrOutput struct{ *pulumi.OutputState }

func (AutoRebuildSettingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoRebuildSetting)(nil)).Elem()
}

func (o AutoRebuildSettingPtrOutput) ToAutoRebuildSettingPtrOutput() AutoRebuildSettingPtrOutput {
	return o
}

func (o AutoRebuildSettingPtrOutput) ToAutoRebuildSettingPtrOutputWithContext(ctx context.Context) AutoRebuildSettingPtrOutput {
	return o
}

func (o AutoRebuildSettingPtrOutput) Elem() AutoRebuildSettingOutput {
	return o.ApplyT(func(v *AutoRebuildSetting) AutoRebuildSetting {
		if v != nil {
			return *v
		}
		var ret AutoRebuildSetting
		return ret
	}).(AutoRebuildSettingOutput)
}

func (o AutoRebuildSettingPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AutoRebuildSettingPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AutoRebuildSetting) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AutoRebuildSettingInput is an input type that accepts values of the AutoRebuildSetting enum
// A concrete instance of `AutoRebuildSettingInput` can be one of the following:
//
//	AutoRebuildSettingDisabled
//	AutoRebuildSettingOnBaseImageUpdate
type AutoRebuildSettingInput interface {
	pulumi.Input

	ToAutoRebuildSettingOutput() AutoRebuildSettingOutput
	ToAutoRebuildSettingOutputWithContext(context.Context) AutoRebuildSettingOutput
}

var autoRebuildSettingPtrType = reflect.TypeOf((**AutoRebuildSetting)(nil)).Elem()

type AutoRebuildSettingPtrInput interface {
	pulumi.Input

	ToAutoRebuildSettingPtrOutput() AutoRebuildSettingPtrOutput
	ToAutoRebuildSettingPtrOutputWithContext(context.Context) AutoRebuildSettingPtrOutput
}

type autoRebuildSettingPtr string

func AutoRebuildSettingPtr(v string) AutoRebuildSettingPtrInput {
	return (*autoRebuildSettingPtr)(&v)
}

func (*autoRebuildSettingPtr) ElementType() reflect.Type {
	return autoRebuildSettingPtrType
}

func (in *autoRebuildSettingPtr) ToAutoRebuildSettingPtrOutput() AutoRebuildSettingPtrOutput {
	return pulumi.ToOutput(in).(AutoRebuildSettingPtrOutput)
}

func (in *autoRebuildSettingPtr) ToAutoRebuildSettingPtrOutputWithContext(ctx context.Context) AutoRebuildSettingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AutoRebuildSettingPtrOutput)
}

// Logging level for batch inference operation.
type BatchLoggingLevel string

const (
	BatchLoggingLevelInfo    = BatchLoggingLevel("Info")
	BatchLoggingLevelWarning = BatchLoggingLevel("Warning")
	BatchLoggingLevelDebug   = BatchLoggingLevel("Debug")
)

func (BatchLoggingLevel) ElementType() reflect.Type {
	return reflect.TypeOf((*BatchLoggingLevel)(nil)).Elem()
}

func (e BatchLoggingLevel) ToBatchLoggingLevelOutput() BatchLoggingLevelOutput {
	return pulumi.ToOutput(e).(BatchLoggingLevelOutput)
}

func (e BatchLoggingLevel) ToBatchLoggingLevelOutputWithContext(ctx context.Context) BatchLoggingLevelOutput {
	return pulumi.ToOutputWithContext(ctx, e).(BatchLoggingLevelOutput)
}

func (e BatchLoggingLevel) ToBatchLoggingLevelPtrOutput() BatchLoggingLevelPtrOutput {
	return e.ToBatchLoggingLevelPtrOutputWithContext(context.Background())
}

func (e BatchLoggingLevel) ToBatchLoggingLevelPtrOutputWithContext(ctx context.Context) BatchLoggingLevelPtrOutput {
	return BatchLoggingLevel(e).ToBatchLoggingLevelOutputWithContext(ctx).ToBatchLoggingLevelPtrOutputWithContext(ctx)
}

func (e BatchLoggingLevel) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e BatchLoggingLevel) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e BatchLoggingLevel) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e BatchLoggingLevel) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type BatchLoggingLevelOutput struct{ *pulumi.OutputState }

func (BatchLoggingLevelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BatchLoggingLevel)(nil)).Elem()
}

func (o BatchLoggingLevelOutput) ToBatchLoggingLevelOutput() BatchLoggingLevelOutput {
	return o
}

func (o BatchLoggingLevelOutput) ToBatchLoggingLevelOutputWithContext(ctx context.Context) BatchLoggingLevelOutput {
	return o
}

func (o BatchLoggingLevelOutput) ToBatchLoggingLevelPtrOutput() BatchLoggingLevelPtrOutput {
	return o.ToBatchLoggingLevelPtrOutputWithContext(context.Background())
}

func (o BatchLoggingLevelOutput) ToBatchLoggingLevelPtrOutputWithContext(ctx context.Context) BatchLoggingLevelPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BatchLoggingLevel) *BatchLoggingLevel {
		return &v
	}).(BatchLoggingLevelPtrOutput)
}

func (o BatchLoggingLevelOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o BatchLoggingLevelOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e BatchLoggingLevel) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o BatchLoggingLevelOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o BatchLoggingLevelOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e BatchLoggingLevel) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type BatchLoggingLevelPtrOutput struct{ *pulumi.OutputState }

func (BatchLoggingLevelPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BatchLoggingLevel)(nil)).Elem()
}

func (o BatchLoggingLevelPtrOutput) ToBatchLoggingLevelPtrOutput() BatchLoggingLevelPtrOutput {
	return o
}

func (o BatchLoggingLevelPtrOutput) ToBatchLoggingLevelPtrOutputWithContext(ctx context.Context) BatchLoggingLevelPtrOutput {
	return o
}

func (o BatchLoggingLevelPtrOutput) Elem() BatchLoggingLevelOutput {
	return o.ApplyT(func(v *BatchLoggingLevel) BatchLoggingLevel {
		if v != nil {
			return *v
		}
		var ret BatchLoggingLevel
		return ret
	}).(BatchLoggingLevelOutput)
}

func (o BatchLoggingLevelPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o BatchLoggingLevelPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *BatchLoggingLevel) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// BatchLoggingLevelInput is an input type that accepts values of the BatchLoggingLevel enum
// A concrete instance of `BatchLoggingLevelInput` can be one of the following:
//
//	BatchLoggingLevelInfo
//	BatchLoggingLevelWarning
//	BatchLoggingLevelDebug
type BatchLoggingLevelInput interface {
	pulumi.Input

	ToBatchLoggingLevelOutput() BatchLoggingLevelOutput
	ToBatchLoggingLevelOutputWithContext(context.Context) BatchLoggingLevelOutput
}

var batchLoggingLevelPtrType = reflect.TypeOf((**BatchLoggingLevel)(nil)).Elem()

type BatchLoggingLevelPtrInput interface {
	pulumi.Input

	ToBatchLoggingLevelPtrOutput() BatchLoggingLevelPtrOutput
	ToBatchLoggingLevelPtrOutputWithContext(context.Context) BatchLoggingLevelPtrOutput
}

type batchLoggingLevelPtr string

func BatchLoggingLevelPtr(v string) BatchLoggingLevelPtrInput {
	return (*batchLoggingLevelPtr)(&v)
}

func (*batchLoggingLevelPtr) ElementType() reflect.Type {
	return batchLoggingLevelPtrType
}

func (in *batchLoggingLevelPtr) ToBatchLoggingLevelPtrOutput() BatchLoggingLevelPtrOutput {
	return pulumi.ToOutput(in).(BatchLoggingLevelPtrOutput)
}

func (in *batchLoggingLevelPtr) ToBatchLoggingLevelPtrOutputWithContext(ctx context.Context) BatchLoggingLevelPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(BatchLoggingLevelPtrOutput)
}

// Indicates how the output will be organized.
type BatchOutputAction string

const (
	BatchOutputActionSummaryOnly = BatchOutputAction("SummaryOnly")
	BatchOutputActionAppendRow   = BatchOutputAction("AppendRow")
)

func (BatchOutputAction) ElementType() reflect.Type {
	return reflect.TypeOf((*BatchOutputAction)(nil)).Elem()
}

func (e BatchOutputAction) ToBatchOutputActionOutput() BatchOutputActionOutput {
	return pulumi.ToOutput(e).(BatchOutputActionOutput)
}

func (e BatchOutputAction) ToBatchOutputActionOutputWithContext(ctx context.Context) BatchOutputActionOutput {
	return pulumi.ToOutputWithContext(ctx, e).(BatchOutputActionOutput)
}

func (e BatchOutputAction) ToBatchOutputActionPtrOutput() BatchOutputActionPtrOutput {
	return e.ToBatchOutputActionPtrOutputWithContext(context.Background())
}

func (e BatchOutputAction) ToBatchOutputActionPtrOutputWithContext(ctx context.Context) BatchOutputActionPtrOutput {
	return BatchOutputAction(e).ToBatchOutputActionOutputWithContext(ctx).ToBatchOutputActionPtrOutputWithContext(ctx)
}

func (e BatchOutputAction) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e BatchOutputAction) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e BatchOutputAction) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e BatchOutputAction) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type BatchOutputActionOutput struct{ *pulumi.OutputState }

func (BatchOutputActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BatchOutputAction)(nil)).Elem()
}

func (o BatchOutputActionOutput) ToBatchOutputActionOutput() BatchOutputActionOutput {
	return o
}

func (o BatchOutputActionOutput) ToBatchOutputActionOutputWithContext(ctx context.Context) BatchOutputActionOutput {
	return o
}

func (o BatchOutputActionOutput) ToBatchOutputActionPtrOutput() BatchOutputActionPtrOutput {
	return o.ToBatchOutputActionPtrOutputWithContext(context.Background())
}

func (o BatchOutputActionOutput) ToBatchOutputActionPtrOutputWithContext(ctx context.Context) BatchOutputActionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BatchOutputAction) *BatchOutputAction {
		return &v
	}).(BatchOutputActionPtrOutput)
}

func (o BatchOutputActionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o BatchOutputActionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e BatchOutputAction) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o BatchOutputActionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o BatchOutputActionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e BatchOutputAction) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type BatchOutputActionPtrOutput struct{ *pulumi.OutputState }

func (BatchOutputActionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BatchOutputAction)(nil)).Elem()
}

func (o BatchOutputActionPtrOutput) ToBatchOutputActionPtrOutput() BatchOutputActionPtrOutput {
	return o
}

func (o BatchOutputActionPtrOutput) ToBatchOutputActionPtrOutputWithContext(ctx context.Context) BatchOutputActionPtrOutput {
	return o
}

func (o BatchOutputActionPtrOutput) Elem() BatchOutputActionOutput {
	return o.ApplyT(func(v *BatchOutputAction) BatchOutputAction {
		if v != nil {
			return *v
		}
		var ret BatchOutputAction
		return ret
	}).(BatchOutputActionOutput)
}

func (o BatchOutputActionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o BatchOutputActionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *BatchOutputAction) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// BatchOutputActionInput is an input type that accepts values of the BatchOutputAction enum
// A concrete instance of `BatchOutputActionInput` can be one of the following:
//
//	BatchOutputActionSummaryOnly
//	BatchOutputActionAppendRow
type BatchOutputActionInput interface {
	pulumi.Input

	ToBatchOutputActionOutput() BatchOutputActionOutput
	ToBatchOutputActionOutputWithContext(context.Context) BatchOutputActionOutput
}

var batchOutputActionPtrType = reflect.TypeOf((**BatchOutputAction)(nil)).Elem()

type BatchOutputActionPtrInput interface {
	pulumi.Input

	ToBatchOutputActionPtrOutput() BatchOutputActionPtrOutput
	ToBatchOutputActionPtrOutputWithContext(context.Context) BatchOutputActionPtrOutput
}

type batchOutputActionPtr string

func BatchOutputActionPtr(v string) BatchOutputActionPtrInput {
	return (*batchOutputActionPtr)(&v)
}

func (*batchOutputActionPtr) ElementType() reflect.Type {
	return batchOutputActionPtrType
}

func (in *batchOutputActionPtr) ToBatchOutputActionPtrOutput() BatchOutputActionPtrOutput {
	return pulumi.ToOutput(in).(BatchOutputActionPtrOutput)
}

func (in *batchOutputActionPtr) ToBatchOutputActionPtrOutputWithContext(ctx context.Context) BatchOutputActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(BatchOutputActionPtrOutput)
}

// Enum for all classification models supported by AutoML.
type BlockedTransformers string

const (
	// Target encoding for text data.
	BlockedTransformersTextTargetEncoder = BlockedTransformers("TextTargetEncoder")
	// Ohe hot encoding creates a binary feature transformation.
	BlockedTransformersOneHotEncoder = BlockedTransformers("OneHotEncoder")
	// Target encoding for categorical data.
	BlockedTransformersCatTargetEncoder = BlockedTransformers("CatTargetEncoder")
	// Tf-Idf stands for, term-frequency times inverse document-frequency. This is a common term weighting scheme for identifying information from documents.
	BlockedTransformersTfIdf = BlockedTransformers("TfIdf")
	// Weight of Evidence encoding is a technique used to encode categorical variables. It uses the natural log of the P(1)/P(0) to create weights.
	BlockedTransformersWoETargetEncoder = BlockedTransformers("WoETargetEncoder")
	// Label encoder converts labels/categorical variables in a numerical form.
	BlockedTransformersLabelEncoder = BlockedTransformers("LabelEncoder")
	// Word embedding helps represents words or phrases as a vector, or a series of numbers.
	BlockedTransformersWordEmbedding = BlockedTransformers("WordEmbedding")
	// Naive Bayes is a classified that is used for classification of discrete features that are categorically distributed.
	BlockedTransformersNaiveBayes = BlockedTransformers("NaiveBayes")
	// Count Vectorizer converts a collection of text documents to a matrix of token counts.
	BlockedTransformersCountVectorizer = BlockedTransformers("CountVectorizer")
	// Hashing One Hot Encoder can turn categorical variables into a limited number of new features. This is often used for high-cardinality categorical features.
	BlockedTransformersHashOneHotEncoder = BlockedTransformers("HashOneHotEncoder")
)

func (BlockedTransformers) ElementType() reflect.Type {
	return reflect.TypeOf((*BlockedTransformers)(nil)).Elem()
}

func (e BlockedTransformers) ToBlockedTransformersOutput() BlockedTransformersOutput {
	return pulumi.ToOutput(e).(BlockedTransformersOutput)
}

func (e BlockedTransformers) ToBlockedTransformersOutputWithContext(ctx context.Context) BlockedTransformersOutput {
	return pulumi.ToOutputWithContext(ctx, e).(BlockedTransformersOutput)
}

func (e BlockedTransformers) ToBlockedTransformersPtrOutput() BlockedTransformersPtrOutput {
	return e.ToBlockedTransformersPtrOutputWithContext(context.Background())
}

func (e BlockedTransformers) ToBlockedTransformersPtrOutputWithContext(ctx context.Context) BlockedTransformersPtrOutput {
	return BlockedTransformers(e).ToBlockedTransformersOutputWithContext(ctx).ToBlockedTransformersPtrOutputWithContext(ctx)
}

func (e BlockedTransformers) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e BlockedTransformers) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e BlockedTransformers) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e BlockedTransformers) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type BlockedTransformersOutput struct{ *pulumi.OutputState }

func (BlockedTransformersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BlockedTransformers)(nil)).Elem()
}

func (o BlockedTransformersOutput) ToBlockedTransformersOutput() BlockedTransformersOutput {
	return o
}

func (o BlockedTransformersOutput) ToBlockedTransformersOutputWithContext(ctx context.Context) BlockedTransformersOutput {
	return o
}

func (o BlockedTransformersOutput) ToBlockedTransformersPtrOutput() BlockedTransformersPtrOutput {
	return o.ToBlockedTransformersPtrOutputWithContext(context.Background())
}

func (o BlockedTransformersOutput) ToBlockedTransformersPtrOutputWithContext(ctx context.Context) BlockedTransformersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BlockedTransformers) *BlockedTransformers {
		return &v
	}).(BlockedTransformersPtrOutput)
}

func (o BlockedTransformersOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o BlockedTransformersOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e BlockedTransformers) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o BlockedTransformersOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o BlockedTransformersOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e BlockedTransformers) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type BlockedTransformersPtrOutput struct{ *pulumi.OutputState }

func (BlockedTransformersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BlockedTransformers)(nil)).Elem()
}

func (o BlockedTransformersPtrOutput) ToBlockedTransformersPtrOutput() BlockedTransformersPtrOutput {
	return o
}

func (o BlockedTransformersPtrOutput) ToBlockedTransformersPtrOutputWithContext(ctx context.Context) BlockedTransformersPtrOutput {
	return o
}

func (o BlockedTransformersPtrOutput) Elem() BlockedTransformersOutput {
	return o.ApplyT(func(v *BlockedTransformers) BlockedTransformers {
		if v != nil {
			return *v
		}
		var ret BlockedTransformers
		return ret
	}).(BlockedTransformersOutput)
}

func (o BlockedTransformersPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o BlockedTransformersPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *BlockedTransformers) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// BlockedTransformersInput is an input type that accepts values of the BlockedTransformers enum
// A concrete instance of `BlockedTransformersInput` can be one of the following:
//
//	BlockedTransformersTextTargetEncoder
//	BlockedTransformersOneHotEncoder
//	BlockedTransformersCatTargetEncoder
//	BlockedTransformersTfIdf
//	BlockedTransformersWoETargetEncoder
//	BlockedTransformersLabelEncoder
//	BlockedTransformersWordEmbedding
//	BlockedTransformersNaiveBayes
//	BlockedTransformersCountVectorizer
//	BlockedTransformersHashOneHotEncoder
type BlockedTransformersInput interface {
	pulumi.Input

	ToBlockedTransformersOutput() BlockedTransformersOutput
	ToBlockedTransformersOutputWithContext(context.Context) BlockedTransformersOutput
}

var blockedTransformersPtrType = reflect.TypeOf((**BlockedTransformers)(nil)).Elem()

type BlockedTransformersPtrInput interface {
	pulumi.Input

	ToBlockedTransformersPtrOutput() BlockedTransformersPtrOutput
	ToBlockedTransformersPtrOutputWithContext(context.Context) BlockedTransformersPtrOutput
}

type blockedTransformersPtr string

func BlockedTransformersPtr(v string) BlockedTransformersPtrInput {
	return (*blockedTransformersPtr)(&v)
}

func (*blockedTransformersPtr) ElementType() reflect.Type {
	return blockedTransformersPtrType
}

func (in *blockedTransformersPtr) ToBlockedTransformersPtrOutput() BlockedTransformersPtrOutput {
	return pulumi.ToOutput(in).(BlockedTransformersPtrOutput)
}

func (in *blockedTransformersPtr) ToBlockedTransformersPtrOutputWithContext(ctx context.Context) BlockedTransformersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(BlockedTransformersPtrOutput)
}

// Enum for all classification models supported by AutoML.
type ClassificationModels string

const (
	// Logistic regression is a fundamental classification technique.
	// It belongs to the group of linear classifiers and is somewhat similar to polynomial and linear regression.
	// Logistic regression is fast and relatively uncomplicated, and it's convenient for you to interpret the results.
	// Although it's essentially a method for binary classification, it can also be applied to multiclass problems.
	ClassificationModelsLogisticRegression = ClassificationModels("LogisticRegression")
	// SGD: Stochastic gradient descent is an optimization algorithm often used in machine learning applications
	// to find the model parameters that correspond to the best fit between predicted and actual outputs.
	ClassificationModelsSGD = ClassificationModels("SGD")
	// The multinomial Naive Bayes classifier is suitable for classification with discrete features (e.g., word counts for text classification).
	// The multinomial distribution normally requires integer feature counts. However, in practice, fractional counts such as tf-idf may also work.
	ClassificationModelsMultinomialNaiveBayes = ClassificationModels("MultinomialNaiveBayes")
	// Naive Bayes classifier for multivariate Bernoulli models.
	ClassificationModelsBernoulliNaiveBayes = ClassificationModels("BernoulliNaiveBayes")
	// A support vector machine (SVM) is a supervised machine learning model that uses classification algorithms for two-group classification problems.
	// After giving an SVM model sets of labeled training data for each category, they're able to categorize new text.
	ClassificationModelsSVM = ClassificationModels("SVM")
	// A support vector machine (SVM) is a supervised machine learning model that uses classification algorithms for two-group classification problems.
	// After giving an SVM model sets of labeled training data for each category, they're able to categorize new text.
	// Linear SVM performs best when input data is linear, i.e., data can be easily classified by drawing the straight line between classified values on a plotted graph.
	ClassificationModelsLinearSVM = ClassificationModels("LinearSVM")
	// K-nearest neighbors (KNN) algorithm uses 'feature similarity' to predict the values of new datapoints
	// which further means that the new data point will be assigned a value based on how closely it matches the points in the training set.
	ClassificationModelsKNN = ClassificationModels("KNN")
	// Decision Trees are a non-parametric supervised learning method used for both classification and regression tasks.
	// The goal is to create a model that predicts the value of a target variable by learning simple decision rules inferred from the data features.
	ClassificationModelsDecisionTree = ClassificationModels("DecisionTree")
	// Random forest is a supervised learning algorithm.
	// The "forest" it builds, is an ensemble of decision trees, usually trained with the “bagging” method.
	// The general idea of the bagging method is that a combination of learning models increases the overall result.
	ClassificationModelsRandomForest = ClassificationModels("RandomForest")
	// Extreme Trees is an ensemble machine learning algorithm that combines the predictions from many decision trees. It is related to the widely used random forest algorithm.
	ClassificationModelsExtremeRandomTrees = ClassificationModels("ExtremeRandomTrees")
	// LightGBM is a gradient boosting framework that uses tree based learning algorithms.
	ClassificationModelsLightGBM = ClassificationModels("LightGBM")
	// The technique of transiting week learners into a strong learner is called Boosting. The gradient boosting algorithm process works on this theory of execution.
	ClassificationModelsGradientBoosting = ClassificationModels("GradientBoosting")
	// XGBoost: Extreme Gradient Boosting Algorithm. This algorithm is used for structured data where target column values can be divided into distinct class values.
	ClassificationModelsXGBoostClassifier = ClassificationModels("XGBoostClassifier")
)

func (ClassificationModels) ElementType() reflect.Type {
	return reflect.TypeOf((*ClassificationModels)(nil)).Elem()
}

func (e ClassificationModels) ToClassificationModelsOutput() ClassificationModelsOutput {
	return pulumi.ToOutput(e).(ClassificationModelsOutput)
}

func (e ClassificationModels) ToClassificationModelsOutputWithContext(ctx context.Context) ClassificationModelsOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ClassificationModelsOutput)
}

func (e ClassificationModels) ToClassificationModelsPtrOutput() ClassificationModelsPtrOutput {
	return e.ToClassificationModelsPtrOutputWithContext(context.Background())
}

func (e ClassificationModels) ToClassificationModelsPtrOutputWithContext(ctx context.Context) ClassificationModelsPtrOutput {
	return ClassificationModels(e).ToClassificationModelsOutputWithContext(ctx).ToClassificationModelsPtrOutputWithContext(ctx)
}

func (e ClassificationModels) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ClassificationModels) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ClassificationModels) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ClassificationModels) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ClassificationModelsOutput struct{ *pulumi.OutputState }

func (ClassificationModelsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClassificationModels)(nil)).Elem()
}

func (o ClassificationModelsOutput) ToClassificationModelsOutput() ClassificationModelsOutput {
	return o
}

func (o ClassificationModelsOutput) ToClassificationModelsOutputWithContext(ctx context.Context) ClassificationModelsOutput {
	return o
}

func (o ClassificationModelsOutput) ToClassificationModelsPtrOutput() ClassificationModelsPtrOutput {
	return o.ToClassificationModelsPtrOutputWithContext(context.Background())
}

func (o ClassificationModelsOutput) ToClassificationModelsPtrOutputWithContext(ctx context.Context) ClassificationModelsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClassificationModels) *ClassificationModels {
		return &v
	}).(ClassificationModelsPtrOutput)
}

func (o ClassificationModelsOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ClassificationModelsOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ClassificationModels) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ClassificationModelsOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ClassificationModelsOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ClassificationModels) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ClassificationModelsPtrOutput struct{ *pulumi.OutputState }

func (ClassificationModelsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClassificationModels)(nil)).Elem()
}

func (o ClassificationModelsPtrOutput) ToClassificationModelsPtrOutput() ClassificationModelsPtrOutput {
	return o
}

func (o ClassificationModelsPtrOutput) ToClassificationModelsPtrOutputWithContext(ctx context.Context) ClassificationModelsPtrOutput {
	return o
}

func (o ClassificationModelsPtrOutput) Elem() ClassificationModelsOutput {
	return o.ApplyT(func(v *ClassificationModels) ClassificationModels {
		if v != nil {
			return *v
		}
		var ret ClassificationModels
		return ret
	}).(ClassificationModelsOutput)
}

func (o ClassificationModelsPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ClassificationModelsPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ClassificationModels) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ClassificationModelsInput is an input type that accepts values of the ClassificationModels enum
// A concrete instance of `ClassificationModelsInput` can be one of the following:
//
//	ClassificationModelsLogisticRegression
//	ClassificationModelsSGD
//	ClassificationModelsMultinomialNaiveBayes
//	ClassificationModelsBernoulliNaiveBayes
//	ClassificationModelsSVM
//	ClassificationModelsLinearSVM
//	ClassificationModelsKNN
//	ClassificationModelsDecisionTree
//	ClassificationModelsRandomForest
//	ClassificationModelsExtremeRandomTrees
//	ClassificationModelsLightGBM
//	ClassificationModelsGradientBoosting
//	ClassificationModelsXGBoostClassifier
type ClassificationModelsInput interface {
	pulumi.Input

	ToClassificationModelsOutput() ClassificationModelsOutput
	ToClassificationModelsOutputWithContext(context.Context) ClassificationModelsOutput
}

var classificationModelsPtrType = reflect.TypeOf((**ClassificationModels)(nil)).Elem()

type ClassificationModelsPtrInput interface {
	pulumi.Input

	ToClassificationModelsPtrOutput() ClassificationModelsPtrOutput
	ToClassificationModelsPtrOutputWithContext(context.Context) ClassificationModelsPtrOutput
}

type classificationModelsPtr string

func ClassificationModelsPtr(v string) ClassificationModelsPtrInput {
	return (*classificationModelsPtr)(&v)
}

func (*classificationModelsPtr) ElementType() reflect.Type {
	return classificationModelsPtrType
}

func (in *classificationModelsPtr) ToClassificationModelsPtrOutput() ClassificationModelsPtrOutput {
	return pulumi.ToOutput(in).(ClassificationModelsPtrOutput)
}

func (in *classificationModelsPtr) ToClassificationModelsPtrOutputWithContext(ctx context.Context) ClassificationModelsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ClassificationModelsPtrOutput)
}

// Primary metric to optimize for this task.
type ClassificationMultilabelPrimaryMetrics string

const (
	// AUC is the Area under the curve.
	// This metric represents arithmetic mean of the score for each class,
	// weighted by the number of true instances in each class.
	ClassificationMultilabelPrimaryMetricsAUCWeighted = ClassificationMultilabelPrimaryMetrics("AUCWeighted")
	// Accuracy is the ratio of predictions that exactly match the true class labels.
	ClassificationMultilabelPrimaryMetricsAccuracy = ClassificationMultilabelPrimaryMetrics("Accuracy")
	// Normalized macro recall is recall macro-averaged and normalized, so that random
	// performance has a score of 0, and perfect performance has a score of 1.
	ClassificationMultilabelPrimaryMetricsNormMacroRecall = ClassificationMultilabelPrimaryMetrics("NormMacroRecall")
	// The arithmetic mean of the average precision score for each class, weighted by
	// the number of true instances in each class.
	ClassificationMultilabelPrimaryMetricsAveragePrecisionScoreWeighted = ClassificationMultilabelPrimaryMetrics("AveragePrecisionScoreWeighted")
	// The arithmetic mean of precision for each class, weighted by number of true instances in each class.
	ClassificationMultilabelPrimaryMetricsPrecisionScoreWeighted = ClassificationMultilabelPrimaryMetrics("PrecisionScoreWeighted")
	// Intersection Over Union. Intersection of predictions divided by union of predictions.
	ClassificationMultilabelPrimaryMetricsIOU = ClassificationMultilabelPrimaryMetrics("IOU")
)

func (ClassificationMultilabelPrimaryMetrics) ElementType() reflect.Type {
	return reflect.TypeOf((*ClassificationMultilabelPrimaryMetrics)(nil)).Elem()
}

func (e ClassificationMultilabelPrimaryMetrics) ToClassificationMultilabelPrimaryMetricsOutput() ClassificationMultilabelPrimaryMetricsOutput {
	return pulumi.ToOutput(e).(ClassificationMultilabelPrimaryMetricsOutput)
}

func (e ClassificationMultilabelPrimaryMetrics) ToClassificationMultilabelPrimaryMetricsOutputWithContext(ctx context.Context) ClassificationMultilabelPrimaryMetricsOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ClassificationMultilabelPrimaryMetricsOutput)
}

func (e ClassificationMultilabelPrimaryMetrics) ToClassificationMultilabelPrimaryMetricsPtrOutput() ClassificationMultilabelPrimaryMetricsPtrOutput {
	return e.ToClassificationMultilabelPrimaryMetricsPtrOutputWithContext(context.Background())
}

func (e ClassificationMultilabelPrimaryMetrics) ToClassificationMultilabelPrimaryMetricsPtrOutputWithContext(ctx context.Context) ClassificationMultilabelPrimaryMetricsPtrOutput {
	return ClassificationMultilabelPrimaryMetrics(e).ToClassificationMultilabelPrimaryMetricsOutputWithContext(ctx).ToClassificationMultilabelPrimaryMetricsPtrOutputWithContext(ctx)
}

func (e ClassificationMultilabelPrimaryMetrics) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ClassificationMultilabelPrimaryMetrics) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ClassificationMultilabelPrimaryMetrics) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ClassificationMultilabelPrimaryMetrics) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ClassificationMultilabelPrimaryMetricsOutput struct{ *pulumi.OutputState }

func (ClassificationMultilabelPrimaryMetricsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClassificationMultilabelPrimaryMetrics)(nil)).Elem()
}

func (o ClassificationMultilabelPrimaryMetricsOutput) ToClassificationMultilabelPrimaryMetricsOutput() ClassificationMultilabelPrimaryMetricsOutput {
	return o
}

func (o ClassificationMultilabelPrimaryMetricsOutput) ToClassificationMultilabelPrimaryMetricsOutputWithContext(ctx context.Context) ClassificationMultilabelPrimaryMetricsOutput {
	return o
}

func (o ClassificationMultilabelPrimaryMetricsOutput) ToClassificationMultilabelPrimaryMetricsPtrOutput() ClassificationMultilabelPrimaryMetricsPtrOutput {
	return o.ToClassificationMultilabelPrimaryMetricsPtrOutputWithContext(context.Background())
}

func (o ClassificationMultilabelPrimaryMetricsOutput) ToClassificationMultilabelPrimaryMetricsPtrOutputWithContext(ctx context.Context) ClassificationMultilabelPrimaryMetricsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClassificationMultilabelPrimaryMetrics) *ClassificationMultilabelPrimaryMetrics {
		return &v
	}).(ClassificationMultilabelPrimaryMetricsPtrOutput)
}

func (o ClassificationMultilabelPrimaryMetricsOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ClassificationMultilabelPrimaryMetricsOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ClassificationMultilabelPrimaryMetrics) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ClassificationMultilabelPrimaryMetricsOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ClassificationMultilabelPrimaryMetricsOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ClassificationMultilabelPrimaryMetrics) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ClassificationMultilabelPrimaryMetricsPtrOutput struct{ *pulumi.OutputState }

func (ClassificationMultilabelPrimaryMetricsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClassificationMultilabelPrimaryMetrics)(nil)).Elem()
}

func (o ClassificationMultilabelPrimaryMetricsPtrOutput) ToClassificationMultilabelPrimaryMetricsPtrOutput() ClassificationMultilabelPrimaryMetricsPtrOutput {
	return o
}

func (o ClassificationMultilabelPrimaryMetricsPtrOutput) ToClassificationMultilabelPrimaryMetricsPtrOutputWithContext(ctx context.Context) ClassificationMultilabelPrimaryMetricsPtrOutput {
	return o
}

func (o ClassificationMultilabelPrimaryMetricsPtrOutput) Elem() ClassificationMultilabelPrimaryMetricsOutput {
	return o.ApplyT(func(v *ClassificationMultilabelPrimaryMetrics) ClassificationMultilabelPrimaryMetrics {
		if v != nil {
			return *v
		}
		var ret ClassificationMultilabelPrimaryMetrics
		return ret
	}).(ClassificationMultilabelPrimaryMetricsOutput)
}

func (o ClassificationMultilabelPrimaryMetricsPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ClassificationMultilabelPrimaryMetricsPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ClassificationMultilabelPrimaryMetrics) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ClassificationMultilabelPrimaryMetricsInput is an input type that accepts values of the ClassificationMultilabelPrimaryMetrics enum
// A concrete instance of `ClassificationMultilabelPrimaryMetricsInput` can be one of the following:
//
//	ClassificationMultilabelPrimaryMetricsAUCWeighted
//	ClassificationMultilabelPrimaryMetricsAccuracy
//	ClassificationMultilabelPrimaryMetricsNormMacroRecall
//	ClassificationMultilabelPrimaryMetricsAveragePrecisionScoreWeighted
//	ClassificationMultilabelPrimaryMetricsPrecisionScoreWeighted
//	ClassificationMultilabelPrimaryMetricsIOU
type ClassificationMultilabelPrimaryMetricsInput interface {
	pulumi.Input

	ToClassificationMultilabelPrimaryMetricsOutput() ClassificationMultilabelPrimaryMetricsOutput
	ToClassificationMultilabelPrimaryMetricsOutputWithContext(context.Context) ClassificationMultilabelPrimaryMetricsOutput
}

var classificationMultilabelPrimaryMetricsPtrType = reflect.TypeOf((**ClassificationMultilabelPrimaryMetrics)(nil)).Elem()

type ClassificationMultilabelPrimaryMetricsPtrInput interface {
	pulumi.Input

	ToClassificationMultilabelPrimaryMetricsPtrOutput() ClassificationMultilabelPrimaryMetricsPtrOutput
	ToClassificationMultilabelPrimaryMetricsPtrOutputWithContext(context.Context) ClassificationMultilabelPrimaryMetricsPtrOutput
}

type classificationMultilabelPrimaryMetricsPtr string

func ClassificationMultilabelPrimaryMetricsPtr(v string) ClassificationMultilabelPrimaryMetricsPtrInput {
	return (*classificationMultilabelPrimaryMetricsPtr)(&v)
}

func (*classificationMultilabelPrimaryMetricsPtr) ElementType() reflect.Type {
	return classificationMultilabelPrimaryMetricsPtrType
}

func (in *classificationMultilabelPrimaryMetricsPtr) ToClassificationMultilabelPrimaryMetricsPtrOutput() ClassificationMultilabelPrimaryMetricsPtrOutput {
	return pulumi.ToOutput(in).(ClassificationMultilabelPrimaryMetricsPtrOutput)
}

func (in *classificationMultilabelPrimaryMetricsPtr) ToClassificationMultilabelPrimaryMetricsPtrOutputWithContext(ctx context.Context) ClassificationMultilabelPrimaryMetricsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ClassificationMultilabelPrimaryMetricsPtrOutput)
}

// Primary metric for Text-Classification task.
type ClassificationPrimaryMetrics string

const (
	// AUC is the Area under the curve.
	// This metric represents arithmetic mean of the score for each class,
	// weighted by the number of true instances in each class.
	ClassificationPrimaryMetricsAUCWeighted = ClassificationPrimaryMetrics("AUCWeighted")
	// Accuracy is the ratio of predictions that exactly match the true class labels.
	ClassificationPrimaryMetricsAccuracy = ClassificationPrimaryMetrics("Accuracy")
	// Normalized macro recall is recall macro-averaged and normalized, so that random
	// performance has a score of 0, and perfect performance has a score of 1.
	ClassificationPrimaryMetricsNormMacroRecall = ClassificationPrimaryMetrics("NormMacroRecall")
	// The arithmetic mean of the average precision score for each class, weighted by
	// the number of true instances in each class.
	ClassificationPrimaryMetricsAveragePrecisionScoreWeighted = ClassificationPrimaryMetrics("AveragePrecisionScoreWeighted")
	// The arithmetic mean of precision for each class, weighted by number of true instances in each class.
	ClassificationPrimaryMetricsPrecisionScoreWeighted = ClassificationPrimaryMetrics("PrecisionScoreWeighted")
)

func (ClassificationPrimaryMetrics) ElementType() reflect.Type {
	return reflect.TypeOf((*ClassificationPrimaryMetrics)(nil)).Elem()
}

func (e ClassificationPrimaryMetrics) ToClassificationPrimaryMetricsOutput() ClassificationPrimaryMetricsOutput {
	return pulumi.ToOutput(e).(ClassificationPrimaryMetricsOutput)
}

func (e ClassificationPrimaryMetrics) ToClassificationPrimaryMetricsOutputWithContext(ctx context.Context) ClassificationPrimaryMetricsOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ClassificationPrimaryMetricsOutput)
}

func (e ClassificationPrimaryMetrics) ToClassificationPrimaryMetricsPtrOutput() ClassificationPrimaryMetricsPtrOutput {
	return e.ToClassificationPrimaryMetricsPtrOutputWithContext(context.Background())
}

func (e ClassificationPrimaryMetrics) ToClassificationPrimaryMetricsPtrOutputWithContext(ctx context.Context) ClassificationPrimaryMetricsPtrOutput {
	return ClassificationPrimaryMetrics(e).ToClassificationPrimaryMetricsOutputWithContext(ctx).ToClassificationPrimaryMetricsPtrOutputWithContext(ctx)
}

func (e ClassificationPrimaryMetrics) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ClassificationPrimaryMetrics) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ClassificationPrimaryMetrics) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ClassificationPrimaryMetrics) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ClassificationPrimaryMetricsOutput struct{ *pulumi.OutputState }

func (ClassificationPrimaryMetricsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClassificationPrimaryMetrics)(nil)).Elem()
}

func (o ClassificationPrimaryMetricsOutput) ToClassificationPrimaryMetricsOutput() ClassificationPrimaryMetricsOutput {
	return o
}

func (o ClassificationPrimaryMetricsOutput) ToClassificationPrimaryMetricsOutputWithContext(ctx context.Context) ClassificationPrimaryMetricsOutput {
	return o
}

func (o ClassificationPrimaryMetricsOutput) ToClassificationPrimaryMetricsPtrOutput() ClassificationPrimaryMetricsPtrOutput {
	return o.ToClassificationPrimaryMetricsPtrOutputWithContext(context.Background())
}

func (o ClassificationPrimaryMetricsOutput) ToClassificationPrimaryMetricsPtrOutputWithContext(ctx context.Context) ClassificationPrimaryMetricsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClassificationPrimaryMetrics) *ClassificationPrimaryMetrics {
		return &v
	}).(ClassificationPrimaryMetricsPtrOutput)
}

func (o ClassificationPrimaryMetricsOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ClassificationPrimaryMetricsOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ClassificationPrimaryMetrics) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ClassificationPrimaryMetricsOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ClassificationPrimaryMetricsOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ClassificationPrimaryMetrics) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ClassificationPrimaryMetricsPtrOutput struct{ *pulumi.OutputState }

func (ClassificationPrimaryMetricsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClassificationPrimaryMetrics)(nil)).Elem()
}

func (o ClassificationPrimaryMetricsPtrOutput) ToClassificationPrimaryMetricsPtrOutput() ClassificationPrimaryMetricsPtrOutput {
	return o
}

func (o ClassificationPrimaryMetricsPtrOutput) ToClassificationPrimaryMetricsPtrOutputWithContext(ctx context.Context) ClassificationPrimaryMetricsPtrOutput {
	return o
}

func (o ClassificationPrimaryMetricsPtrOutput) Elem() ClassificationPrimaryMetricsOutput {
	return o.ApplyT(func(v *ClassificationPrimaryMetrics) ClassificationPrimaryMetrics {
		if v != nil {
			return *v
		}
		var ret ClassificationPrimaryMetrics
		return ret
	}).(ClassificationPrimaryMetricsOutput)
}

func (o ClassificationPrimaryMetricsPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ClassificationPrimaryMetricsPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ClassificationPrimaryMetrics) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ClassificationPrimaryMetricsInput is an input type that accepts values of the ClassificationPrimaryMetrics enum
// A concrete instance of `ClassificationPrimaryMetricsInput` can be one of the following:
//
//	ClassificationPrimaryMetricsAUCWeighted
//	ClassificationPrimaryMetricsAccuracy
//	ClassificationPrimaryMetricsNormMacroRecall
//	ClassificationPrimaryMetricsAveragePrecisionScoreWeighted
//	ClassificationPrimaryMetricsPrecisionScoreWeighted
type ClassificationPrimaryMetricsInput interface {
	pulumi.Input

	ToClassificationPrimaryMetricsOutput() ClassificationPrimaryMetricsOutput
	ToClassificationPrimaryMetricsOutputWithContext(context.Context) ClassificationPrimaryMetricsOutput
}

var classificationPrimaryMetricsPtrType = reflect.TypeOf((**ClassificationPrimaryMetrics)(nil)).Elem()

type ClassificationPrimaryMetricsPtrInput interface {
	pulumi.Input

	ToClassificationPrimaryMetricsPtrOutput() ClassificationPrimaryMetricsPtrOutput
	ToClassificationPrimaryMetricsPtrOutputWithContext(context.Context) ClassificationPrimaryMetricsPtrOutput
}

type classificationPrimaryMetricsPtr string

func ClassificationPrimaryMetricsPtr(v string) ClassificationPrimaryMetricsPtrInput {
	return (*classificationPrimaryMetricsPtr)(&v)
}

func (*classificationPrimaryMetricsPtr) ElementType() reflect.Type {
	return classificationPrimaryMetricsPtrType
}

func (in *classificationPrimaryMetricsPtr) ToClassificationPrimaryMetricsPtrOutput() ClassificationPrimaryMetricsPtrOutput {
	return pulumi.ToOutput(in).(ClassificationPrimaryMetricsPtrOutput)
}

func (in *classificationPrimaryMetricsPtr) ToClassificationPrimaryMetricsPtrOutputWithContext(ctx context.Context) ClassificationPrimaryMetricsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ClassificationPrimaryMetricsPtrOutput)
}

// Intended usage of the cluster
type ClusterPurpose string

const (
	ClusterPurposeFastProd  = ClusterPurpose("FastProd")
	ClusterPurposeDenseProd = ClusterPurpose("DenseProd")
	ClusterPurposeDevTest   = ClusterPurpose("DevTest")
)

func (ClusterPurpose) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterPurpose)(nil)).Elem()
}

func (e ClusterPurpose) ToClusterPurposeOutput() ClusterPurposeOutput {
	return pulumi.ToOutput(e).(ClusterPurposeOutput)
}

func (e ClusterPurpose) ToClusterPurposeOutputWithContext(ctx context.Context) ClusterPurposeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ClusterPurposeOutput)
}

func (e ClusterPurpose) ToClusterPurposePtrOutput() ClusterPurposePtrOutput {
	return e.ToClusterPurposePtrOutputWithContext(context.Background())
}

func (e ClusterPurpose) ToClusterPurposePtrOutputWithContext(ctx context.Context) ClusterPurposePtrOutput {
	return ClusterPurpose(e).ToClusterPurposeOutputWithContext(ctx).ToClusterPurposePtrOutputWithContext(ctx)
}

func (e ClusterPurpose) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ClusterPurpose) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ClusterPurpose) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ClusterPurpose) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ClusterPurposeOutput struct{ *pulumi.OutputState }

func (ClusterPurposeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterPurpose)(nil)).Elem()
}

func (o ClusterPurposeOutput) ToClusterPurposeOutput() ClusterPurposeOutput {
	return o
}

func (o ClusterPurposeOutput) ToClusterPurposeOutputWithContext(ctx context.Context) ClusterPurposeOutput {
	return o
}

func (o ClusterPurposeOutput) ToClusterPurposePtrOutput() ClusterPurposePtrOutput {
	return o.ToClusterPurposePtrOutputWithContext(context.Background())
}

func (o ClusterPurposeOutput) ToClusterPurposePtrOutputWithContext(ctx context.Context) ClusterPurposePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterPurpose) *ClusterPurpose {
		return &v
	}).(ClusterPurposePtrOutput)
}

func (o ClusterPurposeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ClusterPurposeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ClusterPurpose) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ClusterPurposeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ClusterPurposeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ClusterPurpose) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ClusterPurposePtrOutput struct{ *pulumi.OutputState }

func (ClusterPurposePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterPurpose)(nil)).Elem()
}

func (o ClusterPurposePtrOutput) ToClusterPurposePtrOutput() ClusterPurposePtrOutput {
	return o
}

func (o ClusterPurposePtrOutput) ToClusterPurposePtrOutputWithContext(ctx context.Context) ClusterPurposePtrOutput {
	return o
}

func (o ClusterPurposePtrOutput) Elem() ClusterPurposeOutput {
	return o.ApplyT(func(v *ClusterPurpose) ClusterPurpose {
		if v != nil {
			return *v
		}
		var ret ClusterPurpose
		return ret
	}).(ClusterPurposeOutput)
}

func (o ClusterPurposePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ClusterPurposePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ClusterPurpose) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ClusterPurposeInput is an input type that accepts values of the ClusterPurpose enum
// A concrete instance of `ClusterPurposeInput` can be one of the following:
//
//	ClusterPurposeFastProd
//	ClusterPurposeDenseProd
//	ClusterPurposeDevTest
type ClusterPurposeInput interface {
	pulumi.Input

	ToClusterPurposeOutput() ClusterPurposeOutput
	ToClusterPurposeOutputWithContext(context.Context) ClusterPurposeOutput
}

var clusterPurposePtrType = reflect.TypeOf((**ClusterPurpose)(nil)).Elem()

type ClusterPurposePtrInput interface {
	pulumi.Input

	ToClusterPurposePtrOutput() ClusterPurposePtrOutput
	ToClusterPurposePtrOutputWithContext(context.Context) ClusterPurposePtrOutput
}

type clusterPurposePtr string

func ClusterPurposePtr(v string) ClusterPurposePtrInput {
	return (*clusterPurposePtr)(&v)
}

func (*clusterPurposePtr) ElementType() reflect.Type {
	return clusterPurposePtrType
}

func (in *clusterPurposePtr) ToClusterPurposePtrOutput() ClusterPurposePtrOutput {
	return pulumi.ToOutput(in).(ClusterPurposePtrOutput)
}

func (in *clusterPurposePtr) ToClusterPurposePtrOutputWithContext(ctx context.Context) ClusterPurposePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ClusterPurposePtrOutput)
}

// The Compute Instance Authorization type. Available values are personal (default).
type ComputeInstanceAuthorizationType string

const (
	ComputeInstanceAuthorizationTypePersonal = ComputeInstanceAuthorizationType("personal")
)

func (ComputeInstanceAuthorizationType) ElementType() reflect.Type {
	return reflect.TypeOf((*ComputeInstanceAuthorizationType)(nil)).Elem()
}

func (e ComputeInstanceAuthorizationType) ToComputeInstanceAuthorizationTypeOutput() ComputeInstanceAuthorizationTypeOutput {
	return pulumi.ToOutput(e).(ComputeInstanceAuthorizationTypeOutput)
}

func (e ComputeInstanceAuthorizationType) ToComputeInstanceAuthorizationTypeOutputWithContext(ctx context.Context) ComputeInstanceAuthorizationTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ComputeInstanceAuthorizationTypeOutput)
}

func (e ComputeInstanceAuthorizationType) ToComputeInstanceAuthorizationTypePtrOutput() ComputeInstanceAuthorizationTypePtrOutput {
	return e.ToComputeInstanceAuthorizationTypePtrOutputWithContext(context.Background())
}

func (e ComputeInstanceAuthorizationType) ToComputeInstanceAuthorizationTypePtrOutputWithContext(ctx context.Context) ComputeInstanceAuthorizationTypePtrOutput {
	return ComputeInstanceAuthorizationType(e).ToComputeInstanceAuthorizationTypeOutputWithContext(ctx).ToComputeInstanceAuthorizationTypePtrOutputWithContext(ctx)
}

func (e ComputeInstanceAuthorizationType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ComputeInstanceAuthorizationType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ComputeInstanceAuthorizationType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ComputeInstanceAuthorizationType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ComputeInstanceAuthorizationTypeOutput struct{ *pulumi.OutputState }

func (ComputeInstanceAuthorizationTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ComputeInstanceAuthorizationType)(nil)).Elem()
}

func (o ComputeInstanceAuthorizationTypeOutput) ToComputeInstanceAuthorizationTypeOutput() ComputeInstanceAuthorizationTypeOutput {
	return o
}

func (o ComputeInstanceAuthorizationTypeOutput) ToComputeInstanceAuthorizationTypeOutputWithContext(ctx context.Context) ComputeInstanceAuthorizationTypeOutput {
	return o
}

func (o ComputeInstanceAuthorizationTypeOutput) ToComputeInstanceAuthorizationTypePtrOutput() ComputeInstanceAuthorizationTypePtrOutput {
	return o.ToComputeInstanceAuthorizationTypePtrOutputWithContext(context.Background())
}

func (o ComputeInstanceAuthorizationTypeOutput) ToComputeInstanceAuthorizationTypePtrOutputWithContext(ctx context.Context) ComputeInstanceAuthorizationTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ComputeInstanceAuthorizationType) *ComputeInstanceAuthorizationType {
		return &v
	}).(ComputeInstanceAuthorizationTypePtrOutput)
}

func (o ComputeInstanceAuthorizationTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ComputeInstanceAuthorizationTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ComputeInstanceAuthorizationType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ComputeInstanceAuthorizationTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ComputeInstanceAuthorizationTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ComputeInstanceAuthorizationType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ComputeInstanceAuthorizationTypePtrOutput struct{ *pulumi.OutputState }

func (ComputeInstanceAuthorizationTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeInstanceAuthorizationType)(nil)).Elem()
}

func (o ComputeInstanceAuthorizationTypePtrOutput) ToComputeInstanceAuthorizationTypePtrOutput() ComputeInstanceAuthorizationTypePtrOutput {
	return o
}

func (o ComputeInstanceAuthorizationTypePtrOutput) ToComputeInstanceAuthorizationTypePtrOutputWithContext(ctx context.Context) ComputeInstanceAuthorizationTypePtrOutput {
	return o
}

func (o ComputeInstanceAuthorizationTypePtrOutput) Elem() ComputeInstanceAuthorizationTypeOutput {
	return o.ApplyT(func(v *ComputeInstanceAuthorizationType) ComputeInstanceAuthorizationType {
		if v != nil {
			return *v
		}
		var ret ComputeInstanceAuthorizationType
		return ret
	}).(ComputeInstanceAuthorizationTypeOutput)
}

func (o ComputeInstanceAuthorizationTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ComputeInstanceAuthorizationTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ComputeInstanceAuthorizationType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ComputeInstanceAuthorizationTypeInput is an input type that accepts values of the ComputeInstanceAuthorizationType enum
// A concrete instance of `ComputeInstanceAuthorizationTypeInput` can be one of the following:
//
//	ComputeInstanceAuthorizationTypePersonal
type ComputeInstanceAuthorizationTypeInput interface {
	pulumi.Input

	ToComputeInstanceAuthorizationTypeOutput() ComputeInstanceAuthorizationTypeOutput
	ToComputeInstanceAuthorizationTypeOutputWithContext(context.Context) ComputeInstanceAuthorizationTypeOutput
}

var computeInstanceAuthorizationTypePtrType = reflect.TypeOf((**ComputeInstanceAuthorizationType)(nil)).Elem()

type ComputeInstanceAuthorizationTypePtrInput interface {
	pulumi.Input

	ToComputeInstanceAuthorizationTypePtrOutput() ComputeInstanceAuthorizationTypePtrOutput
	ToComputeInstanceAuthorizationTypePtrOutputWithContext(context.Context) ComputeInstanceAuthorizationTypePtrOutput
}

type computeInstanceAuthorizationTypePtr string

func ComputeInstanceAuthorizationTypePtr(v string) ComputeInstanceAuthorizationTypePtrInput {
	return (*computeInstanceAuthorizationTypePtr)(&v)
}

func (*computeInstanceAuthorizationTypePtr) ElementType() reflect.Type {
	return computeInstanceAuthorizationTypePtrType
}

func (in *computeInstanceAuthorizationTypePtr) ToComputeInstanceAuthorizationTypePtrOutput() ComputeInstanceAuthorizationTypePtrOutput {
	return pulumi.ToOutput(in).(ComputeInstanceAuthorizationTypePtrOutput)
}

func (in *computeInstanceAuthorizationTypePtr) ToComputeInstanceAuthorizationTypePtrOutputWithContext(ctx context.Context) ComputeInstanceAuthorizationTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ComputeInstanceAuthorizationTypePtrOutput)
}

// [Required] The compute power action.
type ComputePowerAction string

const (
	ComputePowerActionStart = ComputePowerAction("Start")
	ComputePowerActionStop  = ComputePowerAction("Stop")
)

func (ComputePowerAction) ElementType() reflect.Type {
	return reflect.TypeOf((*ComputePowerAction)(nil)).Elem()
}

func (e ComputePowerAction) ToComputePowerActionOutput() ComputePowerActionOutput {
	return pulumi.ToOutput(e).(ComputePowerActionOutput)
}

func (e ComputePowerAction) ToComputePowerActionOutputWithContext(ctx context.Context) ComputePowerActionOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ComputePowerActionOutput)
}

func (e ComputePowerAction) ToComputePowerActionPtrOutput() ComputePowerActionPtrOutput {
	return e.ToComputePowerActionPtrOutputWithContext(context.Background())
}

func (e ComputePowerAction) ToComputePowerActionPtrOutputWithContext(ctx context.Context) ComputePowerActionPtrOutput {
	return ComputePowerAction(e).ToComputePowerActionOutputWithContext(ctx).ToComputePowerActionPtrOutputWithContext(ctx)
}

func (e ComputePowerAction) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ComputePowerAction) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ComputePowerAction) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ComputePowerAction) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ComputePowerActionOutput struct{ *pulumi.OutputState }

func (ComputePowerActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ComputePowerAction)(nil)).Elem()
}

func (o ComputePowerActionOutput) ToComputePowerActionOutput() ComputePowerActionOutput {
	return o
}

func (o ComputePowerActionOutput) ToComputePowerActionOutputWithContext(ctx context.Context) ComputePowerActionOutput {
	return o
}

func (o ComputePowerActionOutput) ToComputePowerActionPtrOutput() ComputePowerActionPtrOutput {
	return o.ToComputePowerActionPtrOutputWithContext(context.Background())
}

func (o ComputePowerActionOutput) ToComputePowerActionPtrOutputWithContext(ctx context.Context) ComputePowerActionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ComputePowerAction) *ComputePowerAction {
		return &v
	}).(ComputePowerActionPtrOutput)
}

func (o ComputePowerActionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ComputePowerActionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ComputePowerAction) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ComputePowerActionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ComputePowerActionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ComputePowerAction) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ComputePowerActionPtrOutput struct{ *pulumi.OutputState }

func (ComputePowerActionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputePowerAction)(nil)).Elem()
}

func (o ComputePowerActionPtrOutput) ToComputePowerActionPtrOutput() ComputePowerActionPtrOutput {
	return o
}

func (o ComputePowerActionPtrOutput) ToComputePowerActionPtrOutputWithContext(ctx context.Context) ComputePowerActionPtrOutput {
	return o
}

func (o ComputePowerActionPtrOutput) Elem() ComputePowerActionOutput {
	return o.ApplyT(func(v *ComputePowerAction) ComputePowerAction {
		if v != nil {
			return *v
		}
		var ret ComputePowerAction
		return ret
	}).(ComputePowerActionOutput)
}

func (o ComputePowerActionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ComputePowerActionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ComputePowerAction) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ComputePowerActionInput is an input type that accepts values of the ComputePowerAction enum
// A concrete instance of `ComputePowerActionInput` can be one of the following:
//
//	ComputePowerActionStart
//	ComputePowerActionStop
type ComputePowerActionInput interface {
	pulumi.Input

	ToComputePowerActionOutput() ComputePowerActionOutput
	ToComputePowerActionOutputWithContext(context.Context) ComputePowerActionOutput
}

var computePowerActionPtrType = reflect.TypeOf((**ComputePowerAction)(nil)).Elem()

type ComputePowerActionPtrInput interface {
	pulumi.Input

	ToComputePowerActionPtrOutput() ComputePowerActionPtrOutput
	ToComputePowerActionPtrOutputWithContext(context.Context) ComputePowerActionPtrOutput
}

type computePowerActionPtr string

func ComputePowerActionPtr(v string) ComputePowerActionPtrInput {
	return (*computePowerActionPtr)(&v)
}

func (*computePowerActionPtr) ElementType() reflect.Type {
	return computePowerActionPtrType
}

func (in *computePowerActionPtr) ToComputePowerActionPtrOutput() ComputePowerActionPtrOutput {
	return pulumi.ToOutput(in).(ComputePowerActionPtrOutput)
}

func (in *computePowerActionPtr) ToComputePowerActionPtrOutputWithContext(ctx context.Context) ComputePowerActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ComputePowerActionPtrOutput)
}

// The type of compute
type ComputeType string

const (
	ComputeTypeAKS               = ComputeType("AKS")
	ComputeTypeKubernetes        = ComputeType("Kubernetes")
	ComputeTypeAmlCompute        = ComputeType("AmlCompute")
	ComputeTypeComputeInstance   = ComputeType("ComputeInstance")
	ComputeTypeDataFactory       = ComputeType("DataFactory")
	ComputeTypeVirtualMachine    = ComputeType("VirtualMachine")
	ComputeTypeHDInsight         = ComputeType("HDInsight")
	ComputeTypeDatabricks        = ComputeType("Databricks")
	ComputeTypeDataLakeAnalytics = ComputeType("DataLakeAnalytics")
	ComputeTypeSynapseSpark      = ComputeType("SynapseSpark")
)

// Authentication type of the connection target
type ConnectionAuthType string

const (
	ConnectionAuthTypePAT              = ConnectionAuthType("PAT")
	ConnectionAuthTypeManagedIdentity  = ConnectionAuthType("ManagedIdentity")
	ConnectionAuthTypeUsernamePassword = ConnectionAuthType("UsernamePassword")
	ConnectionAuthTypeNone             = ConnectionAuthType("None")
	ConnectionAuthTypeSAS              = ConnectionAuthType("SAS")
)

// Category of the connection
type ConnectionCategory string

const (
	ConnectionCategoryPythonFeed        = ConnectionCategory("PythonFeed")
	ConnectionCategoryContainerRegistry = ConnectionCategory("ContainerRegistry")
	ConnectionCategoryGit               = ConnectionCategory("Git")
)

func (ConnectionCategory) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionCategory)(nil)).Elem()
}

func (e ConnectionCategory) ToConnectionCategoryOutput() ConnectionCategoryOutput {
	return pulumi.ToOutput(e).(ConnectionCategoryOutput)
}

func (e ConnectionCategory) ToConnectionCategoryOutputWithContext(ctx context.Context) ConnectionCategoryOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ConnectionCategoryOutput)
}

func (e ConnectionCategory) ToConnectionCategoryPtrOutput() ConnectionCategoryPtrOutput {
	return e.ToConnectionCategoryPtrOutputWithContext(context.Background())
}

func (e ConnectionCategory) ToConnectionCategoryPtrOutputWithContext(ctx context.Context) ConnectionCategoryPtrOutput {
	return ConnectionCategory(e).ToConnectionCategoryOutputWithContext(ctx).ToConnectionCategoryPtrOutputWithContext(ctx)
}

func (e ConnectionCategory) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ConnectionCategory) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ConnectionCategory) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ConnectionCategory) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ConnectionCategoryOutput struct{ *pulumi.OutputState }

func (ConnectionCategoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionCategory)(nil)).Elem()
}

func (o ConnectionCategoryOutput) ToConnectionCategoryOutput() ConnectionCategoryOutput {
	return o
}

func (o ConnectionCategoryOutput) ToConnectionCategoryOutputWithContext(ctx context.Context) ConnectionCategoryOutput {
	return o
}

func (o ConnectionCategoryOutput) ToConnectionCategoryPtrOutput() ConnectionCategoryPtrOutput {
	return o.ToConnectionCategoryPtrOutputWithContext(context.Background())
}

func (o ConnectionCategoryOutput) ToConnectionCategoryPtrOutputWithContext(ctx context.Context) ConnectionCategoryPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectionCategory) *ConnectionCategory {
		return &v
	}).(ConnectionCategoryPtrOutput)
}

func (o ConnectionCategoryOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ConnectionCategoryOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ConnectionCategory) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ConnectionCategoryOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ConnectionCategoryOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ConnectionCategory) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ConnectionCategoryPtrOutput struct{ *pulumi.OutputState }

func (ConnectionCategoryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionCategory)(nil)).Elem()
}

func (o ConnectionCategoryPtrOutput) ToConnectionCategoryPtrOutput() ConnectionCategoryPtrOutput {
	return o
}

func (o ConnectionCategoryPtrOutput) ToConnectionCategoryPtrOutputWithContext(ctx context.Context) ConnectionCategoryPtrOutput {
	return o
}

func (o ConnectionCategoryPtrOutput) Elem() ConnectionCategoryOutput {
	return o.ApplyT(func(v *ConnectionCategory) ConnectionCategory {
		if v != nil {
			return *v
		}
		var ret ConnectionCategory
		return ret
	}).(ConnectionCategoryOutput)
}

func (o ConnectionCategoryPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ConnectionCategoryPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ConnectionCategory) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ConnectionCategoryInput is an input type that accepts values of the ConnectionCategory enum
// A concrete instance of `ConnectionCategoryInput` can be one of the following:
//
//	ConnectionCategoryPythonFeed
//	ConnectionCategoryContainerRegistry
//	ConnectionCategoryGit
type ConnectionCategoryInput interface {
	pulumi.Input

	ToConnectionCategoryOutput() ConnectionCategoryOutput
	ToConnectionCategoryOutputWithContext(context.Context) ConnectionCategoryOutput
}

var connectionCategoryPtrType = reflect.TypeOf((**ConnectionCategory)(nil)).Elem()

type ConnectionCategoryPtrInput interface {
	pulumi.Input

	ToConnectionCategoryPtrOutput() ConnectionCategoryPtrOutput
	ToConnectionCategoryPtrOutputWithContext(context.Context) ConnectionCategoryPtrOutput
}

type connectionCategoryPtr string

func ConnectionCategoryPtr(v string) ConnectionCategoryPtrInput {
	return (*connectionCategoryPtr)(&v)
}

func (*connectionCategoryPtr) ElementType() reflect.Type {
	return connectionCategoryPtrType
}

func (in *connectionCategoryPtr) ToConnectionCategoryPtrOutput() ConnectionCategoryPtrOutput {
	return pulumi.ToOutput(in).(ConnectionCategoryPtrOutput)
}

func (in *connectionCategoryPtr) ToConnectionCategoryPtrOutputWithContext(ctx context.Context) ConnectionCategoryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ConnectionCategoryPtrOutput)
}

// The type of container to retrieve logs from.
type ContainerType string

const (
	ContainerTypeStorageInitializer = ContainerType("StorageInitializer")
	ContainerTypeInferenceServer    = ContainerType("InferenceServer")
)

func (ContainerType) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerType)(nil)).Elem()
}

func (e ContainerType) ToContainerTypeOutput() ContainerTypeOutput {
	return pulumi.ToOutput(e).(ContainerTypeOutput)
}

func (e ContainerType) ToContainerTypeOutputWithContext(ctx context.Context) ContainerTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ContainerTypeOutput)
}

func (e ContainerType) ToContainerTypePtrOutput() ContainerTypePtrOutput {
	return e.ToContainerTypePtrOutputWithContext(context.Background())
}

func (e ContainerType) ToContainerTypePtrOutputWithContext(ctx context.Context) ContainerTypePtrOutput {
	return ContainerType(e).ToContainerTypeOutputWithContext(ctx).ToContainerTypePtrOutputWithContext(ctx)
}

func (e ContainerType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ContainerType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ContainerType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ContainerType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ContainerTypeOutput struct{ *pulumi.OutputState }

func (ContainerTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerType)(nil)).Elem()
}

func (o ContainerTypeOutput) ToContainerTypeOutput() ContainerTypeOutput {
	return o
}

func (o ContainerTypeOutput) ToContainerTypeOutputWithContext(ctx context.Context) ContainerTypeOutput {
	return o
}

func (o ContainerTypeOutput) ToContainerTypePtrOutput() ContainerTypePtrOutput {
	return o.ToContainerTypePtrOutputWithContext(context.Background())
}

func (o ContainerTypeOutput) ToContainerTypePtrOutputWithContext(ctx context.Context) ContainerTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ContainerType) *ContainerType {
		return &v
	}).(ContainerTypePtrOutput)
}

func (o ContainerTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ContainerTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ContainerType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ContainerTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ContainerTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ContainerType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ContainerTypePtrOutput struct{ *pulumi.OutputState }

func (ContainerTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerType)(nil)).Elem()
}

func (o ContainerTypePtrOutput) ToContainerTypePtrOutput() ContainerTypePtrOutput {
	return o
}

func (o ContainerTypePtrOutput) ToContainerTypePtrOutputWithContext(ctx context.Context) ContainerTypePtrOutput {
	return o
}

func (o ContainerTypePtrOutput) Elem() ContainerTypeOutput {
	return o.ApplyT(func(v *ContainerType) ContainerType {
		if v != nil {
			return *v
		}
		var ret ContainerType
		return ret
	}).(ContainerTypeOutput)
}

func (o ContainerTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ContainerTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ContainerType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ContainerTypeInput is an input type that accepts values of the ContainerType enum
// A concrete instance of `ContainerTypeInput` can be one of the following:
//
//	ContainerTypeStorageInitializer
//	ContainerTypeInferenceServer
type ContainerTypeInput interface {
	pulumi.Input

	ToContainerTypeOutput() ContainerTypeOutput
	ToContainerTypeOutputWithContext(context.Context) ContainerTypeOutput
}

var containerTypePtrType = reflect.TypeOf((**ContainerType)(nil)).Elem()

type ContainerTypePtrInput interface {
	pulumi.Input

	ToContainerTypePtrOutput() ContainerTypePtrOutput
	ToContainerTypePtrOutputWithContext(context.Context) ContainerTypePtrOutput
}

type containerTypePtr string

func ContainerTypePtr(v string) ContainerTypePtrInput {
	return (*containerTypePtr)(&v)
}

func (*containerTypePtr) ElementType() reflect.Type {
	return containerTypePtrType
}

func (in *containerTypePtr) ToContainerTypePtrOutput() ContainerTypePtrOutput {
	return pulumi.ToOutput(in).(ContainerTypePtrOutput)
}

func (in *containerTypePtr) ToContainerTypePtrOutputWithContext(ctx context.Context) ContainerTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ContainerTypePtrOutput)
}

// [Required] Credential type used to authentication with storage.
type CredentialsType string

const (
	CredentialsTypeAccountKey       = CredentialsType("AccountKey")
	CredentialsTypeCertificate      = CredentialsType("Certificate")
	CredentialsTypeNone             = CredentialsType("None")
	CredentialsTypeSas              = CredentialsType("Sas")
	CredentialsTypeServicePrincipal = CredentialsType("ServicePrincipal")
)

// [Required] Specifies the type of data.
type DataType string

const (
	DataType_Uri_file   = DataType("uri_file")
	DataType_Uri_folder = DataType("uri_folder")
	DataTypeMltable     = DataType("mltable")
)

func (DataType) ElementType() reflect.Type {
	return reflect.TypeOf((*DataType)(nil)).Elem()
}

func (e DataType) ToDataTypeOutput() DataTypeOutput {
	return pulumi.ToOutput(e).(DataTypeOutput)
}

func (e DataType) ToDataTypeOutputWithContext(ctx context.Context) DataTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DataTypeOutput)
}

func (e DataType) ToDataTypePtrOutput() DataTypePtrOutput {
	return e.ToDataTypePtrOutputWithContext(context.Background())
}

func (e DataType) ToDataTypePtrOutputWithContext(ctx context.Context) DataTypePtrOutput {
	return DataType(e).ToDataTypeOutputWithContext(ctx).ToDataTypePtrOutputWithContext(ctx)
}

func (e DataType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DataType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DataType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DataType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DataTypeOutput struct{ *pulumi.OutputState }

func (DataTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataType)(nil)).Elem()
}

func (o DataTypeOutput) ToDataTypeOutput() DataTypeOutput {
	return o
}

func (o DataTypeOutput) ToDataTypeOutputWithContext(ctx context.Context) DataTypeOutput {
	return o
}

func (o DataTypeOutput) ToDataTypePtrOutput() DataTypePtrOutput {
	return o.ToDataTypePtrOutputWithContext(context.Background())
}

func (o DataTypeOutput) ToDataTypePtrOutputWithContext(ctx context.Context) DataTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataType) *DataType {
		return &v
	}).(DataTypePtrOutput)
}

func (o DataTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DataTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DataType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DataTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DataTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DataType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DataTypePtrOutput struct{ *pulumi.OutputState }

func (DataTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataType)(nil)).Elem()
}

func (o DataTypePtrOutput) ToDataTypePtrOutput() DataTypePtrOutput {
	return o
}

func (o DataTypePtrOutput) ToDataTypePtrOutputWithContext(ctx context.Context) DataTypePtrOutput {
	return o
}

func (o DataTypePtrOutput) Elem() DataTypeOutput {
	return o.ApplyT(func(v *DataType) DataType {
		if v != nil {
			return *v
		}
		var ret DataType
		return ret
	}).(DataTypeOutput)
}

func (o DataTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DataTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DataType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DataTypeInput is an input type that accepts values of the DataType enum
// A concrete instance of `DataTypeInput` can be one of the following:
//
//	DataType_Uri_file
//	DataType_Uri_folder
//	DataTypeMltable
type DataTypeInput interface {
	pulumi.Input

	ToDataTypeOutput() DataTypeOutput
	ToDataTypeOutputWithContext(context.Context) DataTypeOutput
}

var dataTypePtrType = reflect.TypeOf((**DataType)(nil)).Elem()

type DataTypePtrInput interface {
	pulumi.Input

	ToDataTypePtrOutput() DataTypePtrOutput
	ToDataTypePtrOutputWithContext(context.Context) DataTypePtrOutput
}

type dataTypePtr string

func DataTypePtr(v string) DataTypePtrInput {
	return (*dataTypePtr)(&v)
}

func (*dataTypePtr) ElementType() reflect.Type {
	return dataTypePtrType
}

func (in *dataTypePtr) ToDataTypePtrOutput() DataTypePtrOutput {
	return pulumi.ToOutput(in).(DataTypePtrOutput)
}

func (in *dataTypePtr) ToDataTypePtrOutputWithContext(ctx context.Context) DataTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DataTypePtrOutput)
}

// [Required] Storage type backing the datastore.
type DatastoreType string

const (
	DatastoreTypeAzureBlob         = DatastoreType("AzureBlob")
	DatastoreTypeAzureDataLakeGen1 = DatastoreType("AzureDataLakeGen1")
	DatastoreTypeAzureDataLakeGen2 = DatastoreType("AzureDataLakeGen2")
	DatastoreTypeAzureFile         = DatastoreType("AzureFile")
)

// [Required] Specifies the type of distribution framework.
type DistributionType string

const (
	DistributionTypePyTorch    = DistributionType("PyTorch")
	DistributionTypeTensorFlow = DistributionType("TensorFlow")
	DistributionTypeMpi        = DistributionType("Mpi")
)

// [Required] Name of policy configuration
type EarlyTerminationPolicyType string

const (
	EarlyTerminationPolicyTypeBandit              = EarlyTerminationPolicyType("Bandit")
	EarlyTerminationPolicyTypeMedianStopping      = EarlyTerminationPolicyType("MedianStopping")
	EarlyTerminationPolicyTypeTruncationSelection = EarlyTerminationPolicyType("TruncationSelection")
)

// If Enabled, allow egress public network access. If Disabled, this will create secure egress. Default: Enabled.
type EgressPublicNetworkAccessType string

const (
	EgressPublicNetworkAccessTypeEnabled  = EgressPublicNetworkAccessType("Enabled")
	EgressPublicNetworkAccessTypeDisabled = EgressPublicNetworkAccessType("Disabled")
)

func (EgressPublicNetworkAccessType) ElementType() reflect.Type {
	return reflect.TypeOf((*EgressPublicNetworkAccessType)(nil)).Elem()
}

func (e EgressPublicNetworkAccessType) ToEgressPublicNetworkAccessTypeOutput() EgressPublicNetworkAccessTypeOutput {
	return pulumi.ToOutput(e).(EgressPublicNetworkAccessTypeOutput)
}

func (e EgressPublicNetworkAccessType) ToEgressPublicNetworkAccessTypeOutputWithContext(ctx context.Context) EgressPublicNetworkAccessTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(EgressPublicNetworkAccessTypeOutput)
}

func (e EgressPublicNetworkAccessType) ToEgressPublicNetworkAccessTypePtrOutput() EgressPublicNetworkAccessTypePtrOutput {
	return e.ToEgressPublicNetworkAccessTypePtrOutputWithContext(context.Background())
}

func (e EgressPublicNetworkAccessType) ToEgressPublicNetworkAccessTypePtrOutputWithContext(ctx context.Context) EgressPublicNetworkAccessTypePtrOutput {
	return EgressPublicNetworkAccessType(e).ToEgressPublicNetworkAccessTypeOutputWithContext(ctx).ToEgressPublicNetworkAccessTypePtrOutputWithContext(ctx)
}

func (e EgressPublicNetworkAccessType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e EgressPublicNetworkAccessType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e EgressPublicNetworkAccessType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e EgressPublicNetworkAccessType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type EgressPublicNetworkAccessTypeOutput struct{ *pulumi.OutputState }

func (EgressPublicNetworkAccessTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EgressPublicNetworkAccessType)(nil)).Elem()
}

func (o EgressPublicNetworkAccessTypeOutput) ToEgressPublicNetworkAccessTypeOutput() EgressPublicNetworkAccessTypeOutput {
	return o
}

func (o EgressPublicNetworkAccessTypeOutput) ToEgressPublicNetworkAccessTypeOutputWithContext(ctx context.Context) EgressPublicNetworkAccessTypeOutput {
	return o
}

func (o EgressPublicNetworkAccessTypeOutput) ToEgressPublicNetworkAccessTypePtrOutput() EgressPublicNetworkAccessTypePtrOutput {
	return o.ToEgressPublicNetworkAccessTypePtrOutputWithContext(context.Background())
}

func (o EgressPublicNetworkAccessTypeOutput) ToEgressPublicNetworkAccessTypePtrOutputWithContext(ctx context.Context) EgressPublicNetworkAccessTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EgressPublicNetworkAccessType) *EgressPublicNetworkAccessType {
		return &v
	}).(EgressPublicNetworkAccessTypePtrOutput)
}

func (o EgressPublicNetworkAccessTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o EgressPublicNetworkAccessTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e EgressPublicNetworkAccessType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o EgressPublicNetworkAccessTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o EgressPublicNetworkAccessTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e EgressPublicNetworkAccessType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type EgressPublicNetworkAccessTypePtrOutput struct{ *pulumi.OutputState }

func (EgressPublicNetworkAccessTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EgressPublicNetworkAccessType)(nil)).Elem()
}

func (o EgressPublicNetworkAccessTypePtrOutput) ToEgressPublicNetworkAccessTypePtrOutput() EgressPublicNetworkAccessTypePtrOutput {
	return o
}

func (o EgressPublicNetworkAccessTypePtrOutput) ToEgressPublicNetworkAccessTypePtrOutputWithContext(ctx context.Context) EgressPublicNetworkAccessTypePtrOutput {
	return o
}

func (o EgressPublicNetworkAccessTypePtrOutput) Elem() EgressPublicNetworkAccessTypeOutput {
	return o.ApplyT(func(v *EgressPublicNetworkAccessType) EgressPublicNetworkAccessType {
		if v != nil {
			return *v
		}
		var ret EgressPublicNetworkAccessType
		return ret
	}).(EgressPublicNetworkAccessTypeOutput)
}

func (o EgressPublicNetworkAccessTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o EgressPublicNetworkAccessTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *EgressPublicNetworkAccessType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// EgressPublicNetworkAccessTypeInput is an input type that accepts values of the EgressPublicNetworkAccessType enum
// A concrete instance of `EgressPublicNetworkAccessTypeInput` can be one of the following:
//
//	EgressPublicNetworkAccessTypeEnabled
//	EgressPublicNetworkAccessTypeDisabled
type EgressPublicNetworkAccessTypeInput interface {
	pulumi.Input

	ToEgressPublicNetworkAccessTypeOutput() EgressPublicNetworkAccessTypeOutput
	ToEgressPublicNetworkAccessTypeOutputWithContext(context.Context) EgressPublicNetworkAccessTypeOutput
}

var egressPublicNetworkAccessTypePtrType = reflect.TypeOf((**EgressPublicNetworkAccessType)(nil)).Elem()

type EgressPublicNetworkAccessTypePtrInput interface {
	pulumi.Input

	ToEgressPublicNetworkAccessTypePtrOutput() EgressPublicNetworkAccessTypePtrOutput
	ToEgressPublicNetworkAccessTypePtrOutputWithContext(context.Context) EgressPublicNetworkAccessTypePtrOutput
}

type egressPublicNetworkAccessTypePtr string

func EgressPublicNetworkAccessTypePtr(v string) EgressPublicNetworkAccessTypePtrInput {
	return (*egressPublicNetworkAccessTypePtr)(&v)
}

func (*egressPublicNetworkAccessTypePtr) ElementType() reflect.Type {
	return egressPublicNetworkAccessTypePtrType
}

func (in *egressPublicNetworkAccessTypePtr) ToEgressPublicNetworkAccessTypePtrOutput() EgressPublicNetworkAccessTypePtrOutput {
	return pulumi.ToOutput(in).(EgressPublicNetworkAccessTypePtrOutput)
}

func (in *egressPublicNetworkAccessTypePtr) ToEgressPublicNetworkAccessTypePtrOutputWithContext(ctx context.Context) EgressPublicNetworkAccessTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(EgressPublicNetworkAccessTypePtrOutput)
}

// Indicates whether or not the encryption is enabled for the workspace.
type EncryptionStatus string

const (
	EncryptionStatusEnabled  = EncryptionStatus("Enabled")
	EncryptionStatusDisabled = EncryptionStatus("Disabled")
)

func (EncryptionStatus) ElementType() reflect.Type {
	return reflect.TypeOf((*EncryptionStatus)(nil)).Elem()
}

func (e EncryptionStatus) ToEncryptionStatusOutput() EncryptionStatusOutput {
	return pulumi.ToOutput(e).(EncryptionStatusOutput)
}

func (e EncryptionStatus) ToEncryptionStatusOutputWithContext(ctx context.Context) EncryptionStatusOutput {
	return pulumi.ToOutputWithContext(ctx, e).(EncryptionStatusOutput)
}

func (e EncryptionStatus) ToEncryptionStatusPtrOutput() EncryptionStatusPtrOutput {
	return e.ToEncryptionStatusPtrOutputWithContext(context.Background())
}

func (e EncryptionStatus) ToEncryptionStatusPtrOutputWithContext(ctx context.Context) EncryptionStatusPtrOutput {
	return EncryptionStatus(e).ToEncryptionStatusOutputWithContext(ctx).ToEncryptionStatusPtrOutputWithContext(ctx)
}

func (e EncryptionStatus) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e EncryptionStatus) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e EncryptionStatus) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e EncryptionStatus) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type EncryptionStatusOutput struct{ *pulumi.OutputState }

func (EncryptionStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EncryptionStatus)(nil)).Elem()
}

func (o EncryptionStatusOutput) ToEncryptionStatusOutput() EncryptionStatusOutput {
	return o
}

func (o EncryptionStatusOutput) ToEncryptionStatusOutputWithContext(ctx context.Context) EncryptionStatusOutput {
	return o
}

func (o EncryptionStatusOutput) ToEncryptionStatusPtrOutput() EncryptionStatusPtrOutput {
	return o.ToEncryptionStatusPtrOutputWithContext(context.Background())
}

func (o EncryptionStatusOutput) ToEncryptionStatusPtrOutputWithContext(ctx context.Context) EncryptionStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EncryptionStatus) *EncryptionStatus {
		return &v
	}).(EncryptionStatusPtrOutput)
}

func (o EncryptionStatusOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o EncryptionStatusOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e EncryptionStatus) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o EncryptionStatusOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o EncryptionStatusOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e EncryptionStatus) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type EncryptionStatusPtrOutput struct{ *pulumi.OutputState }

func (EncryptionStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EncryptionStatus)(nil)).Elem()
}

func (o EncryptionStatusPtrOutput) ToEncryptionStatusPtrOutput() EncryptionStatusPtrOutput {
	return o
}

func (o EncryptionStatusPtrOutput) ToEncryptionStatusPtrOutputWithContext(ctx context.Context) EncryptionStatusPtrOutput {
	return o
}

func (o EncryptionStatusPtrOutput) Elem() EncryptionStatusOutput {
	return o.ApplyT(func(v *EncryptionStatus) EncryptionStatus {
		if v != nil {
			return *v
		}
		var ret EncryptionStatus
		return ret
	}).(EncryptionStatusOutput)
}

func (o EncryptionStatusPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o EncryptionStatusPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *EncryptionStatus) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// EncryptionStatusInput is an input type that accepts values of the EncryptionStatus enum
// A concrete instance of `EncryptionStatusInput` can be one of the following:
//
//	EncryptionStatusEnabled
//	EncryptionStatusDisabled
type EncryptionStatusInput interface {
	pulumi.Input

	ToEncryptionStatusOutput() EncryptionStatusOutput
	ToEncryptionStatusOutputWithContext(context.Context) EncryptionStatusOutput
}

var encryptionStatusPtrType = reflect.TypeOf((**EncryptionStatus)(nil)).Elem()

type EncryptionStatusPtrInput interface {
	pulumi.Input

	ToEncryptionStatusPtrOutput() EncryptionStatusPtrOutput
	ToEncryptionStatusPtrOutputWithContext(context.Context) EncryptionStatusPtrOutput
}

type encryptionStatusPtr string

func EncryptionStatusPtr(v string) EncryptionStatusPtrInput {
	return (*encryptionStatusPtr)(&v)
}

func (*encryptionStatusPtr) ElementType() reflect.Type {
	return encryptionStatusPtrType
}

func (in *encryptionStatusPtr) ToEncryptionStatusPtrOutput() EncryptionStatusPtrOutput {
	return pulumi.ToOutput(in).(EncryptionStatusPtrOutput)
}

func (in *encryptionStatusPtr) ToEncryptionStatusPtrOutputWithContext(ctx context.Context) EncryptionStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(EncryptionStatusPtrOutput)
}

// [Required] Use 'Key' for key based authentication and 'AMLToken' for Azure Machine Learning token-based authentication. 'Key' doesn't expire but 'AMLToken' does.
type EndpointAuthMode string

const (
	EndpointAuthModeAMLToken = EndpointAuthMode("AMLToken")
	EndpointAuthModeKey      = EndpointAuthMode("Key")
	EndpointAuthModeAADToken = EndpointAuthMode("AADToken")
)

func (EndpointAuthMode) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointAuthMode)(nil)).Elem()
}

func (e EndpointAuthMode) ToEndpointAuthModeOutput() EndpointAuthModeOutput {
	return pulumi.ToOutput(e).(EndpointAuthModeOutput)
}

func (e EndpointAuthMode) ToEndpointAuthModeOutputWithContext(ctx context.Context) EndpointAuthModeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(EndpointAuthModeOutput)
}

func (e EndpointAuthMode) ToEndpointAuthModePtrOutput() EndpointAuthModePtrOutput {
	return e.ToEndpointAuthModePtrOutputWithContext(context.Background())
}

func (e EndpointAuthMode) ToEndpointAuthModePtrOutputWithContext(ctx context.Context) EndpointAuthModePtrOutput {
	return EndpointAuthMode(e).ToEndpointAuthModeOutputWithContext(ctx).ToEndpointAuthModePtrOutputWithContext(ctx)
}

func (e EndpointAuthMode) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e EndpointAuthMode) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e EndpointAuthMode) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e EndpointAuthMode) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type EndpointAuthModeOutput struct{ *pulumi.OutputState }

func (EndpointAuthModeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointAuthMode)(nil)).Elem()
}

func (o EndpointAuthModeOutput) ToEndpointAuthModeOutput() EndpointAuthModeOutput {
	return o
}

func (o EndpointAuthModeOutput) ToEndpointAuthModeOutputWithContext(ctx context.Context) EndpointAuthModeOutput {
	return o
}

func (o EndpointAuthModeOutput) ToEndpointAuthModePtrOutput() EndpointAuthModePtrOutput {
	return o.ToEndpointAuthModePtrOutputWithContext(context.Background())
}

func (o EndpointAuthModeOutput) ToEndpointAuthModePtrOutputWithContext(ctx context.Context) EndpointAuthModePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EndpointAuthMode) *EndpointAuthMode {
		return &v
	}).(EndpointAuthModePtrOutput)
}

func (o EndpointAuthModeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o EndpointAuthModeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e EndpointAuthMode) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o EndpointAuthModeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o EndpointAuthModeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e EndpointAuthMode) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type EndpointAuthModePtrOutput struct{ *pulumi.OutputState }

func (EndpointAuthModePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EndpointAuthMode)(nil)).Elem()
}

func (o EndpointAuthModePtrOutput) ToEndpointAuthModePtrOutput() EndpointAuthModePtrOutput {
	return o
}

func (o EndpointAuthModePtrOutput) ToEndpointAuthModePtrOutputWithContext(ctx context.Context) EndpointAuthModePtrOutput {
	return o
}

func (o EndpointAuthModePtrOutput) Elem() EndpointAuthModeOutput {
	return o.ApplyT(func(v *EndpointAuthMode) EndpointAuthMode {
		if v != nil {
			return *v
		}
		var ret EndpointAuthMode
		return ret
	}).(EndpointAuthModeOutput)
}

func (o EndpointAuthModePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o EndpointAuthModePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *EndpointAuthMode) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// EndpointAuthModeInput is an input type that accepts values of the EndpointAuthMode enum
// A concrete instance of `EndpointAuthModeInput` can be one of the following:
//
//	EndpointAuthModeAMLToken
//	EndpointAuthModeKey
//	EndpointAuthModeAADToken
type EndpointAuthModeInput interface {
	pulumi.Input

	ToEndpointAuthModeOutput() EndpointAuthModeOutput
	ToEndpointAuthModeOutputWithContext(context.Context) EndpointAuthModeOutput
}

var endpointAuthModePtrType = reflect.TypeOf((**EndpointAuthMode)(nil)).Elem()

type EndpointAuthModePtrInput interface {
	pulumi.Input

	ToEndpointAuthModePtrOutput() EndpointAuthModePtrOutput
	ToEndpointAuthModePtrOutputWithContext(context.Context) EndpointAuthModePtrOutput
}

type endpointAuthModePtr string

func EndpointAuthModePtr(v string) EndpointAuthModePtrInput {
	return (*endpointAuthModePtr)(&v)
}

func (*endpointAuthModePtr) ElementType() reflect.Type {
	return endpointAuthModePtrType
}

func (in *endpointAuthModePtr) ToEndpointAuthModePtrOutput() EndpointAuthModePtrOutput {
	return pulumi.ToOutput(in).(EndpointAuthModePtrOutput)
}

func (in *endpointAuthModePtr) ToEndpointAuthModePtrOutputWithContext(ctx context.Context) EndpointAuthModePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(EndpointAuthModePtrOutput)
}

// [Required] The compute type of the endpoint.
type EndpointComputeType string

const (
	EndpointComputeTypeManaged        = EndpointComputeType("Managed")
	EndpointComputeTypeKubernetes     = EndpointComputeType("Kubernetes")
	EndpointComputeTypeAzureMLCompute = EndpointComputeType("AzureMLCompute")
)

// Connection status of the service consumer with the service provider
type EndpointServiceConnectionStatus string

const (
	EndpointServiceConnectionStatusApproved     = EndpointServiceConnectionStatus("Approved")
	EndpointServiceConnectionStatusPending      = EndpointServiceConnectionStatus("Pending")
	EndpointServiceConnectionStatusRejected     = EndpointServiceConnectionStatus("Rejected")
	EndpointServiceConnectionStatusDisconnected = EndpointServiceConnectionStatus("Disconnected")
)

func (EndpointServiceConnectionStatus) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointServiceConnectionStatus)(nil)).Elem()
}

func (e EndpointServiceConnectionStatus) ToEndpointServiceConnectionStatusOutput() EndpointServiceConnectionStatusOutput {
	return pulumi.ToOutput(e).(EndpointServiceConnectionStatusOutput)
}

func (e EndpointServiceConnectionStatus) ToEndpointServiceConnectionStatusOutputWithContext(ctx context.Context) EndpointServiceConnectionStatusOutput {
	return pulumi.ToOutputWithContext(ctx, e).(EndpointServiceConnectionStatusOutput)
}

func (e EndpointServiceConnectionStatus) ToEndpointServiceConnectionStatusPtrOutput() EndpointServiceConnectionStatusPtrOutput {
	return e.ToEndpointServiceConnectionStatusPtrOutputWithContext(context.Background())
}

func (e EndpointServiceConnectionStatus) ToEndpointServiceConnectionStatusPtrOutputWithContext(ctx context.Context) EndpointServiceConnectionStatusPtrOutput {
	return EndpointServiceConnectionStatus(e).ToEndpointServiceConnectionStatusOutputWithContext(ctx).ToEndpointServiceConnectionStatusPtrOutputWithContext(ctx)
}

func (e EndpointServiceConnectionStatus) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e EndpointServiceConnectionStatus) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e EndpointServiceConnectionStatus) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e EndpointServiceConnectionStatus) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type EndpointServiceConnectionStatusOutput struct{ *pulumi.OutputState }

func (EndpointServiceConnectionStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointServiceConnectionStatus)(nil)).Elem()
}

func (o EndpointServiceConnectionStatusOutput) ToEndpointServiceConnectionStatusOutput() EndpointServiceConnectionStatusOutput {
	return o
}

func (o EndpointServiceConnectionStatusOutput) ToEndpointServiceConnectionStatusOutputWithContext(ctx context.Context) EndpointServiceConnectionStatusOutput {
	return o
}

func (o EndpointServiceConnectionStatusOutput) ToEndpointServiceConnectionStatusPtrOutput() EndpointServiceConnectionStatusPtrOutput {
	return o.ToEndpointServiceConnectionStatusPtrOutputWithContext(context.Background())
}

func (o EndpointServiceConnectionStatusOutput) ToEndpointServiceConnectionStatusPtrOutputWithContext(ctx context.Context) EndpointServiceConnectionStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EndpointServiceConnectionStatus) *EndpointServiceConnectionStatus {
		return &v
	}).(EndpointServiceConnectionStatusPtrOutput)
}

func (o EndpointServiceConnectionStatusOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o EndpointServiceConnectionStatusOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e EndpointServiceConnectionStatus) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o EndpointServiceConnectionStatusOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o EndpointServiceConnectionStatusOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e EndpointServiceConnectionStatus) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type EndpointServiceConnectionStatusPtrOutput struct{ *pulumi.OutputState }

func (EndpointServiceConnectionStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EndpointServiceConnectionStatus)(nil)).Elem()
}

func (o EndpointServiceConnectionStatusPtrOutput) ToEndpointServiceConnectionStatusPtrOutput() EndpointServiceConnectionStatusPtrOutput {
	return o
}

func (o EndpointServiceConnectionStatusPtrOutput) ToEndpointServiceConnectionStatusPtrOutputWithContext(ctx context.Context) EndpointServiceConnectionStatusPtrOutput {
	return o
}

func (o EndpointServiceConnectionStatusPtrOutput) Elem() EndpointServiceConnectionStatusOutput {
	return o.ApplyT(func(v *EndpointServiceConnectionStatus) EndpointServiceConnectionStatus {
		if v != nil {
			return *v
		}
		var ret EndpointServiceConnectionStatus
		return ret
	}).(EndpointServiceConnectionStatusOutput)
}

func (o EndpointServiceConnectionStatusPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o EndpointServiceConnectionStatusPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *EndpointServiceConnectionStatus) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// EndpointServiceConnectionStatusInput is an input type that accepts values of the EndpointServiceConnectionStatus enum
// A concrete instance of `EndpointServiceConnectionStatusInput` can be one of the following:
//
//	EndpointServiceConnectionStatusApproved
//	EndpointServiceConnectionStatusPending
//	EndpointServiceConnectionStatusRejected
//	EndpointServiceConnectionStatusDisconnected
type EndpointServiceConnectionStatusInput interface {
	pulumi.Input

	ToEndpointServiceConnectionStatusOutput() EndpointServiceConnectionStatusOutput
	ToEndpointServiceConnectionStatusOutputWithContext(context.Context) EndpointServiceConnectionStatusOutput
}

var endpointServiceConnectionStatusPtrType = reflect.TypeOf((**EndpointServiceConnectionStatus)(nil)).Elem()

type EndpointServiceConnectionStatusPtrInput interface {
	pulumi.Input

	ToEndpointServiceConnectionStatusPtrOutput() EndpointServiceConnectionStatusPtrOutput
	ToEndpointServiceConnectionStatusPtrOutputWithContext(context.Context) EndpointServiceConnectionStatusPtrOutput
}

type endpointServiceConnectionStatusPtr string

func EndpointServiceConnectionStatusPtr(v string) EndpointServiceConnectionStatusPtrInput {
	return (*endpointServiceConnectionStatusPtr)(&v)
}

func (*endpointServiceConnectionStatusPtr) ElementType() reflect.Type {
	return endpointServiceConnectionStatusPtrType
}

func (in *endpointServiceConnectionStatusPtr) ToEndpointServiceConnectionStatusPtrOutput() EndpointServiceConnectionStatusPtrOutput {
	return pulumi.ToOutput(in).(EndpointServiceConnectionStatusPtrOutput)
}

func (in *endpointServiceConnectionStatusPtr) ToEndpointServiceConnectionStatusPtrOutputWithContext(ctx context.Context) EndpointServiceConnectionStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(EndpointServiceConnectionStatusPtrOutput)
}

// Type of the Environment Variable. Possible values are: local - For local variable
type EnvironmentVariableType string

const (
	EnvironmentVariableTypeLocal = EnvironmentVariableType("local")
)

func (EnvironmentVariableType) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentVariableType)(nil)).Elem()
}

func (e EnvironmentVariableType) ToEnvironmentVariableTypeOutput() EnvironmentVariableTypeOutput {
	return pulumi.ToOutput(e).(EnvironmentVariableTypeOutput)
}

func (e EnvironmentVariableType) ToEnvironmentVariableTypeOutputWithContext(ctx context.Context) EnvironmentVariableTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(EnvironmentVariableTypeOutput)
}

func (e EnvironmentVariableType) ToEnvironmentVariableTypePtrOutput() EnvironmentVariableTypePtrOutput {
	return e.ToEnvironmentVariableTypePtrOutputWithContext(context.Background())
}

func (e EnvironmentVariableType) ToEnvironmentVariableTypePtrOutputWithContext(ctx context.Context) EnvironmentVariableTypePtrOutput {
	return EnvironmentVariableType(e).ToEnvironmentVariableTypeOutputWithContext(ctx).ToEnvironmentVariableTypePtrOutputWithContext(ctx)
}

func (e EnvironmentVariableType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e EnvironmentVariableType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e EnvironmentVariableType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e EnvironmentVariableType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type EnvironmentVariableTypeOutput struct{ *pulumi.OutputState }

func (EnvironmentVariableTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentVariableType)(nil)).Elem()
}

func (o EnvironmentVariableTypeOutput) ToEnvironmentVariableTypeOutput() EnvironmentVariableTypeOutput {
	return o
}

func (o EnvironmentVariableTypeOutput) ToEnvironmentVariableTypeOutputWithContext(ctx context.Context) EnvironmentVariableTypeOutput {
	return o
}

func (o EnvironmentVariableTypeOutput) ToEnvironmentVariableTypePtrOutput() EnvironmentVariableTypePtrOutput {
	return o.ToEnvironmentVariableTypePtrOutputWithContext(context.Background())
}

func (o EnvironmentVariableTypeOutput) ToEnvironmentVariableTypePtrOutputWithContext(ctx context.Context) EnvironmentVariableTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EnvironmentVariableType) *EnvironmentVariableType {
		return &v
	}).(EnvironmentVariableTypePtrOutput)
}

func (o EnvironmentVariableTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o EnvironmentVariableTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e EnvironmentVariableType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o EnvironmentVariableTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o EnvironmentVariableTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e EnvironmentVariableType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type EnvironmentVariableTypePtrOutput struct{ *pulumi.OutputState }

func (EnvironmentVariableTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EnvironmentVariableType)(nil)).Elem()
}

func (o EnvironmentVariableTypePtrOutput) ToEnvironmentVariableTypePtrOutput() EnvironmentVariableTypePtrOutput {
	return o
}

func (o EnvironmentVariableTypePtrOutput) ToEnvironmentVariableTypePtrOutputWithContext(ctx context.Context) EnvironmentVariableTypePtrOutput {
	return o
}

func (o EnvironmentVariableTypePtrOutput) Elem() EnvironmentVariableTypeOutput {
	return o.ApplyT(func(v *EnvironmentVariableType) EnvironmentVariableType {
		if v != nil {
			return *v
		}
		var ret EnvironmentVariableType
		return ret
	}).(EnvironmentVariableTypeOutput)
}

func (o EnvironmentVariableTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o EnvironmentVariableTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *EnvironmentVariableType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// EnvironmentVariableTypeInput is an input type that accepts values of the EnvironmentVariableType enum
// A concrete instance of `EnvironmentVariableTypeInput` can be one of the following:
//
//	EnvironmentVariableTypeLocal
type EnvironmentVariableTypeInput interface {
	pulumi.Input

	ToEnvironmentVariableTypeOutput() EnvironmentVariableTypeOutput
	ToEnvironmentVariableTypeOutputWithContext(context.Context) EnvironmentVariableTypeOutput
}

var environmentVariableTypePtrType = reflect.TypeOf((**EnvironmentVariableType)(nil)).Elem()

type EnvironmentVariableTypePtrInput interface {
	pulumi.Input

	ToEnvironmentVariableTypePtrOutput() EnvironmentVariableTypePtrOutput
	ToEnvironmentVariableTypePtrOutputWithContext(context.Context) EnvironmentVariableTypePtrOutput
}

type environmentVariableTypePtr string

func EnvironmentVariableTypePtr(v string) EnvironmentVariableTypePtrInput {
	return (*environmentVariableTypePtr)(&v)
}

func (*environmentVariableTypePtr) ElementType() reflect.Type {
	return environmentVariableTypePtrType
}

func (in *environmentVariableTypePtr) ToEnvironmentVariableTypePtrOutput() EnvironmentVariableTypePtrOutput {
	return pulumi.ToOutput(in).(EnvironmentVariableTypePtrOutput)
}

func (in *environmentVariableTypePtr) ToEnvironmentVariableTypePtrOutputWithContext(ctx context.Context) EnvironmentVariableTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(EnvironmentVariableTypePtrOutput)
}

// Flag for generating lags for the numeric features with 'auto' or null.
type FeatureLags string

const (
	// No feature lags generated.
	FeatureLagsNone = FeatureLags("None")
	// System auto-generates feature lags.
	FeatureLagsAuto = FeatureLags("Auto")
)

func (FeatureLags) ElementType() reflect.Type {
	return reflect.TypeOf((*FeatureLags)(nil)).Elem()
}

func (e FeatureLags) ToFeatureLagsOutput() FeatureLagsOutput {
	return pulumi.ToOutput(e).(FeatureLagsOutput)
}

func (e FeatureLags) ToFeatureLagsOutputWithContext(ctx context.Context) FeatureLagsOutput {
	return pulumi.ToOutputWithContext(ctx, e).(FeatureLagsOutput)
}

func (e FeatureLags) ToFeatureLagsPtrOutput() FeatureLagsPtrOutput {
	return e.ToFeatureLagsPtrOutputWithContext(context.Background())
}

func (e FeatureLags) ToFeatureLagsPtrOutputWithContext(ctx context.Context) FeatureLagsPtrOutput {
	return FeatureLags(e).ToFeatureLagsOutputWithContext(ctx).ToFeatureLagsPtrOutputWithContext(ctx)
}

func (e FeatureLags) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e FeatureLags) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e FeatureLags) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e FeatureLags) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type FeatureLagsOutput struct{ *pulumi.OutputState }

func (FeatureLagsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FeatureLags)(nil)).Elem()
}

func (o FeatureLagsOutput) ToFeatureLagsOutput() FeatureLagsOutput {
	return o
}

func (o FeatureLagsOutput) ToFeatureLagsOutputWithContext(ctx context.Context) FeatureLagsOutput {
	return o
}

func (o FeatureLagsOutput) ToFeatureLagsPtrOutput() FeatureLagsPtrOutput {
	return o.ToFeatureLagsPtrOutputWithContext(context.Background())
}

func (o FeatureLagsOutput) ToFeatureLagsPtrOutputWithContext(ctx context.Context) FeatureLagsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FeatureLags) *FeatureLags {
		return &v
	}).(FeatureLagsPtrOutput)
}

func (o FeatureLagsOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o FeatureLagsOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e FeatureLags) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o FeatureLagsOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o FeatureLagsOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e FeatureLags) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type FeatureLagsPtrOutput struct{ *pulumi.OutputState }

func (FeatureLagsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FeatureLags)(nil)).Elem()
}

func (o FeatureLagsPtrOutput) ToFeatureLagsPtrOutput() FeatureLagsPtrOutput {
	return o
}

func (o FeatureLagsPtrOutput) ToFeatureLagsPtrOutputWithContext(ctx context.Context) FeatureLagsPtrOutput {
	return o
}

func (o FeatureLagsPtrOutput) Elem() FeatureLagsOutput {
	return o.ApplyT(func(v *FeatureLags) FeatureLags {
		if v != nil {
			return *v
		}
		var ret FeatureLags
		return ret
	}).(FeatureLagsOutput)
}

func (o FeatureLagsPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o FeatureLagsPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *FeatureLags) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// FeatureLagsInput is an input type that accepts values of the FeatureLags enum
// A concrete instance of `FeatureLagsInput` can be one of the following:
//
//	FeatureLagsNone
//	FeatureLagsAuto
type FeatureLagsInput interface {
	pulumi.Input

	ToFeatureLagsOutput() FeatureLagsOutput
	ToFeatureLagsOutputWithContext(context.Context) FeatureLagsOutput
}

var featureLagsPtrType = reflect.TypeOf((**FeatureLags)(nil)).Elem()

type FeatureLagsPtrInput interface {
	pulumi.Input

	ToFeatureLagsPtrOutput() FeatureLagsPtrOutput
	ToFeatureLagsPtrOutputWithContext(context.Context) FeatureLagsPtrOutput
}

type featureLagsPtr string

func FeatureLagsPtr(v string) FeatureLagsPtrInput {
	return (*featureLagsPtr)(&v)
}

func (*featureLagsPtr) ElementType() reflect.Type {
	return featureLagsPtrType
}

func (in *featureLagsPtr) ToFeatureLagsPtrOutput() FeatureLagsPtrOutput {
	return pulumi.ToOutput(in).(FeatureLagsPtrOutput)
}

func (in *featureLagsPtr) ToFeatureLagsPtrOutputWithContext(ctx context.Context) FeatureLagsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(FeatureLagsPtrOutput)
}

// Featurization mode - User can keep the default 'Auto' mode and AutoML will take care of necessary transformation of the data in featurization phase.
// If 'Off' is selected then no featurization is done.
// If 'Custom' is selected then user can specify additional inputs to customize how featurization is done.
type FeaturizationMode string

const (
	// Auto mode, system performs featurization without any custom featurization inputs.
	FeaturizationModeAuto = FeaturizationMode("Auto")
	// Custom featurization.
	FeaturizationModeCustom = FeaturizationMode("Custom")
	// Featurization off. 'Forecasting' task cannot use this value.
	FeaturizationModeOff = FeaturizationMode("Off")
)

func (FeaturizationMode) ElementType() reflect.Type {
	return reflect.TypeOf((*FeaturizationMode)(nil)).Elem()
}

func (e FeaturizationMode) ToFeaturizationModeOutput() FeaturizationModeOutput {
	return pulumi.ToOutput(e).(FeaturizationModeOutput)
}

func (e FeaturizationMode) ToFeaturizationModeOutputWithContext(ctx context.Context) FeaturizationModeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(FeaturizationModeOutput)
}

func (e FeaturizationMode) ToFeaturizationModePtrOutput() FeaturizationModePtrOutput {
	return e.ToFeaturizationModePtrOutputWithContext(context.Background())
}

func (e FeaturizationMode) ToFeaturizationModePtrOutputWithContext(ctx context.Context) FeaturizationModePtrOutput {
	return FeaturizationMode(e).ToFeaturizationModeOutputWithContext(ctx).ToFeaturizationModePtrOutputWithContext(ctx)
}

func (e FeaturizationMode) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e FeaturizationMode) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e FeaturizationMode) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e FeaturizationMode) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type FeaturizationModeOutput struct{ *pulumi.OutputState }

func (FeaturizationModeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FeaturizationMode)(nil)).Elem()
}

func (o FeaturizationModeOutput) ToFeaturizationModeOutput() FeaturizationModeOutput {
	return o
}

func (o FeaturizationModeOutput) ToFeaturizationModeOutputWithContext(ctx context.Context) FeaturizationModeOutput {
	return o
}

func (o FeaturizationModeOutput) ToFeaturizationModePtrOutput() FeaturizationModePtrOutput {
	return o.ToFeaturizationModePtrOutputWithContext(context.Background())
}

func (o FeaturizationModeOutput) ToFeaturizationModePtrOutputWithContext(ctx context.Context) FeaturizationModePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FeaturizationMode) *FeaturizationMode {
		return &v
	}).(FeaturizationModePtrOutput)
}

func (o FeaturizationModeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o FeaturizationModeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e FeaturizationMode) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o FeaturizationModeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o FeaturizationModeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e FeaturizationMode) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type FeaturizationModePtrOutput struct{ *pulumi.OutputState }

func (FeaturizationModePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FeaturizationMode)(nil)).Elem()
}

func (o FeaturizationModePtrOutput) ToFeaturizationModePtrOutput() FeaturizationModePtrOutput {
	return o
}

func (o FeaturizationModePtrOutput) ToFeaturizationModePtrOutputWithContext(ctx context.Context) FeaturizationModePtrOutput {
	return o
}

func (o FeaturizationModePtrOutput) Elem() FeaturizationModeOutput {
	return o.ApplyT(func(v *FeaturizationMode) FeaturizationMode {
		if v != nil {
			return *v
		}
		var ret FeaturizationMode
		return ret
	}).(FeaturizationModeOutput)
}

func (o FeaturizationModePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o FeaturizationModePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *FeaturizationMode) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// FeaturizationModeInput is an input type that accepts values of the FeaturizationMode enum
// A concrete instance of `FeaturizationModeInput` can be one of the following:
//
//	FeaturizationModeAuto
//	FeaturizationModeCustom
//	FeaturizationModeOff
type FeaturizationModeInput interface {
	pulumi.Input

	ToFeaturizationModeOutput() FeaturizationModeOutput
	ToFeaturizationModeOutputWithContext(context.Context) FeaturizationModeOutput
}

var featurizationModePtrType = reflect.TypeOf((**FeaturizationMode)(nil)).Elem()

type FeaturizationModePtrInput interface {
	pulumi.Input

	ToFeaturizationModePtrOutput() FeaturizationModePtrOutput
	ToFeaturizationModePtrOutputWithContext(context.Context) FeaturizationModePtrOutput
}

type featurizationModePtr string

func FeaturizationModePtr(v string) FeaturizationModePtrInput {
	return (*featurizationModePtr)(&v)
}

func (*featurizationModePtr) ElementType() reflect.Type {
	return featurizationModePtrType
}

func (in *featurizationModePtr) ToFeaturizationModePtrOutput() FeaturizationModePtrOutput {
	return pulumi.ToOutput(in).(FeaturizationModePtrOutput)
}

func (in *featurizationModePtr) ToFeaturizationModePtrOutputWithContext(ctx context.Context) FeaturizationModePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(FeaturizationModePtrOutput)
}

// [Required] Set forecast horizon value selection mode.
type ForecastHorizonMode string

const (
	// Forecast horizon to be determined automatically.
	ForecastHorizonModeAuto = ForecastHorizonMode("Auto")
	// Use the custom forecast horizon.
	ForecastHorizonModeCustom = ForecastHorizonMode("Custom")
)

// Enum for all forecasting models supported by AutoML.
type ForecastingModels string

const (
	// Auto-Autoregressive Integrated Moving Average (ARIMA) model uses time-series data and statistical analysis to interpret the data and make future predictions.
	// This model aims to explain data by using time series data on its past values and uses linear regression to make predictions.
	ForecastingModelsAutoArima = ForecastingModels("AutoArima")
	// Prophet is a procedure for forecasting time series data based on an additive model where non-linear trends are fit with yearly, weekly, and daily seasonality, plus holiday effects.
	// It works best with time series that have strong seasonal effects and several seasons of historical data. Prophet is robust to missing data and shifts in the trend, and typically handles outliers well.
	ForecastingModelsProphet = ForecastingModels("Prophet")
	// The Naive forecasting model makes predictions by carrying forward the latest target value for each time-series in the training data.
	ForecastingModelsNaive = ForecastingModels("Naive")
	// The Seasonal Naive forecasting model makes predictions by carrying forward the latest season of target values for each time-series in the training data.
	ForecastingModelsSeasonalNaive = ForecastingModels("SeasonalNaive")
	// The Average forecasting model makes predictions by carrying forward the average of the target values for each time-series in the training data.
	ForecastingModelsAverage = ForecastingModels("Average")
	// The Seasonal Average forecasting model makes predictions by carrying forward the average value of the latest season of data for each time-series in the training data.
	ForecastingModelsSeasonalAverage = ForecastingModels("SeasonalAverage")
	// Exponential smoothing is a time series forecasting method for univariate data that can be extended to support data with a systematic trend or seasonal component.
	ForecastingModelsExponentialSmoothing = ForecastingModels("ExponentialSmoothing")
	// An Autoregressive Integrated Moving Average with Explanatory Variable (ARIMAX) model can be viewed as a multiple regression model with one or more autoregressive (AR) terms and/or one or more moving average (MA) terms.
	// This method is suitable for forecasting when data is stationary/non stationary, and multivariate with any type of data pattern, i.e., level/trend /seasonality/cyclicity.
	ForecastingModelsArimax = ForecastingModels("Arimax")
	// TCNForecaster: Temporal Convolutional Networks Forecaster. //TODO: Ask forecasting team for brief intro.
	ForecastingModelsTCNForecaster = ForecastingModels("TCNForecaster")
	// Elastic net is a popular type of regularized linear regression that combines two popular penalties, specifically the L1 and L2 penalty functions.
	ForecastingModelsElasticNet = ForecastingModels("ElasticNet")
	// The technique of transiting week learners into a strong learner is called Boosting. The gradient boosting algorithm process works on this theory of execution.
	ForecastingModelsGradientBoosting = ForecastingModels("GradientBoosting")
	// Decision Trees are a non-parametric supervised learning method used for both classification and regression tasks.
	// The goal is to create a model that predicts the value of a target variable by learning simple decision rules inferred from the data features.
	ForecastingModelsDecisionTree = ForecastingModels("DecisionTree")
	// K-nearest neighbors (KNN) algorithm uses 'feature similarity' to predict the values of new datapoints
	// which further means that the new data point will be assigned a value based on how closely it matches the points in the training set.
	ForecastingModelsKNN = ForecastingModels("KNN")
	// Lasso model fit with Least Angle Regression a.k.a. Lars. It is a Linear Model trained with an L1 prior as regularizer.
	ForecastingModelsLassoLars = ForecastingModels("LassoLars")
	// SGD: Stochastic gradient descent is an optimization algorithm often used in machine learning applications
	// to find the model parameters that correspond to the best fit between predicted and actual outputs.
	// It's an inexact but powerful technique.
	ForecastingModelsSGD = ForecastingModels("SGD")
	// Random forest is a supervised learning algorithm.
	// The "forest" it builds, is an ensemble of decision trees, usually trained with the “bagging” method.
	// The general idea of the bagging method is that a combination of learning models increases the overall result.
	ForecastingModelsRandomForest = ForecastingModels("RandomForest")
	// Extreme Trees is an ensemble machine learning algorithm that combines the predictions from many decision trees. It is related to the widely used random forest algorithm.
	ForecastingModelsExtremeRandomTrees = ForecastingModels("ExtremeRandomTrees")
	// LightGBM is a gradient boosting framework that uses tree based learning algorithms.
	ForecastingModelsLightGBM = ForecastingModels("LightGBM")
	// XGBoostRegressor: Extreme Gradient Boosting Regressor is a supervised machine learning model using ensemble of base learners.
	ForecastingModelsXGBoostRegressor = ForecastingModels("XGBoostRegressor")
)

func (ForecastingModels) ElementType() reflect.Type {
	return reflect.TypeOf((*ForecastingModels)(nil)).Elem()
}

func (e ForecastingModels) ToForecastingModelsOutput() ForecastingModelsOutput {
	return pulumi.ToOutput(e).(ForecastingModelsOutput)
}

func (e ForecastingModels) ToForecastingModelsOutputWithContext(ctx context.Context) ForecastingModelsOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ForecastingModelsOutput)
}

func (e ForecastingModels) ToForecastingModelsPtrOutput() ForecastingModelsPtrOutput {
	return e.ToForecastingModelsPtrOutputWithContext(context.Background())
}

func (e ForecastingModels) ToForecastingModelsPtrOutputWithContext(ctx context.Context) ForecastingModelsPtrOutput {
	return ForecastingModels(e).ToForecastingModelsOutputWithContext(ctx).ToForecastingModelsPtrOutputWithContext(ctx)
}

func (e ForecastingModels) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ForecastingModels) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ForecastingModels) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ForecastingModels) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ForecastingModelsOutput struct{ *pulumi.OutputState }

func (ForecastingModelsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ForecastingModels)(nil)).Elem()
}

func (o ForecastingModelsOutput) ToForecastingModelsOutput() ForecastingModelsOutput {
	return o
}

func (o ForecastingModelsOutput) ToForecastingModelsOutputWithContext(ctx context.Context) ForecastingModelsOutput {
	return o
}

func (o ForecastingModelsOutput) ToForecastingModelsPtrOutput() ForecastingModelsPtrOutput {
	return o.ToForecastingModelsPtrOutputWithContext(context.Background())
}

func (o ForecastingModelsOutput) ToForecastingModelsPtrOutputWithContext(ctx context.Context) ForecastingModelsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ForecastingModels) *ForecastingModels {
		return &v
	}).(ForecastingModelsPtrOutput)
}

func (o ForecastingModelsOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ForecastingModelsOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ForecastingModels) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ForecastingModelsOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ForecastingModelsOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ForecastingModels) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ForecastingModelsPtrOutput struct{ *pulumi.OutputState }

func (ForecastingModelsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ForecastingModels)(nil)).Elem()
}

func (o ForecastingModelsPtrOutput) ToForecastingModelsPtrOutput() ForecastingModelsPtrOutput {
	return o
}

func (o ForecastingModelsPtrOutput) ToForecastingModelsPtrOutputWithContext(ctx context.Context) ForecastingModelsPtrOutput {
	return o
}

func (o ForecastingModelsPtrOutput) Elem() ForecastingModelsOutput {
	return o.ApplyT(func(v *ForecastingModels) ForecastingModels {
		if v != nil {
			return *v
		}
		var ret ForecastingModels
		return ret
	}).(ForecastingModelsOutput)
}

func (o ForecastingModelsPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ForecastingModelsPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ForecastingModels) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ForecastingModelsInput is an input type that accepts values of the ForecastingModels enum
// A concrete instance of `ForecastingModelsInput` can be one of the following:
//
//	ForecastingModelsAutoArima
//	ForecastingModelsProphet
//	ForecastingModelsNaive
//	ForecastingModelsSeasonalNaive
//	ForecastingModelsAverage
//	ForecastingModelsSeasonalAverage
//	ForecastingModelsExponentialSmoothing
//	ForecastingModelsArimax
//	ForecastingModelsTCNForecaster
//	ForecastingModelsElasticNet
//	ForecastingModelsGradientBoosting
//	ForecastingModelsDecisionTree
//	ForecastingModelsKNN
//	ForecastingModelsLassoLars
//	ForecastingModelsSGD
//	ForecastingModelsRandomForest
//	ForecastingModelsExtremeRandomTrees
//	ForecastingModelsLightGBM
//	ForecastingModelsXGBoostRegressor
type ForecastingModelsInput interface {
	pulumi.Input

	ToForecastingModelsOutput() ForecastingModelsOutput
	ToForecastingModelsOutputWithContext(context.Context) ForecastingModelsOutput
}

var forecastingModelsPtrType = reflect.TypeOf((**ForecastingModels)(nil)).Elem()

type ForecastingModelsPtrInput interface {
	pulumi.Input

	ToForecastingModelsPtrOutput() ForecastingModelsPtrOutput
	ToForecastingModelsPtrOutputWithContext(context.Context) ForecastingModelsPtrOutput
}

type forecastingModelsPtr string

func ForecastingModelsPtr(v string) ForecastingModelsPtrInput {
	return (*forecastingModelsPtr)(&v)
}

func (*forecastingModelsPtr) ElementType() reflect.Type {
	return forecastingModelsPtrType
}

func (in *forecastingModelsPtr) ToForecastingModelsPtrOutput() ForecastingModelsPtrOutput {
	return pulumi.ToOutput(in).(ForecastingModelsPtrOutput)
}

func (in *forecastingModelsPtr) ToForecastingModelsPtrOutputWithContext(ctx context.Context) ForecastingModelsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ForecastingModelsPtrOutput)
}

// Primary metric for forecasting task.
type ForecastingPrimaryMetrics string

const (
	// The Spearman's rank coefficient of correlation is a non-parametric measure of rank correlation.
	ForecastingPrimaryMetricsSpearmanCorrelation = ForecastingPrimaryMetrics("SpearmanCorrelation")
	// The Normalized Root Mean Squared Error (NRMSE) the RMSE facilitates the comparison between models with different scales.
	ForecastingPrimaryMetricsNormalizedRootMeanSquaredError = ForecastingPrimaryMetrics("NormalizedRootMeanSquaredError")
	// The R2 score is one of the performance evaluation measures for forecasting-based machine learning models.
	ForecastingPrimaryMetricsR2Score = ForecastingPrimaryMetrics("R2Score")
	// The Normalized Mean Absolute Error (NMAE) is a validation metric to compare the Mean Absolute Error (MAE) of (time) series with different scales.
	ForecastingPrimaryMetricsNormalizedMeanAbsoluteError = ForecastingPrimaryMetrics("NormalizedMeanAbsoluteError")
)

func (ForecastingPrimaryMetrics) ElementType() reflect.Type {
	return reflect.TypeOf((*ForecastingPrimaryMetrics)(nil)).Elem()
}

func (e ForecastingPrimaryMetrics) ToForecastingPrimaryMetricsOutput() ForecastingPrimaryMetricsOutput {
	return pulumi.ToOutput(e).(ForecastingPrimaryMetricsOutput)
}

func (e ForecastingPrimaryMetrics) ToForecastingPrimaryMetricsOutputWithContext(ctx context.Context) ForecastingPrimaryMetricsOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ForecastingPrimaryMetricsOutput)
}

func (e ForecastingPrimaryMetrics) ToForecastingPrimaryMetricsPtrOutput() ForecastingPrimaryMetricsPtrOutput {
	return e.ToForecastingPrimaryMetricsPtrOutputWithContext(context.Background())
}

func (e ForecastingPrimaryMetrics) ToForecastingPrimaryMetricsPtrOutputWithContext(ctx context.Context) ForecastingPrimaryMetricsPtrOutput {
	return ForecastingPrimaryMetrics(e).ToForecastingPrimaryMetricsOutputWithContext(ctx).ToForecastingPrimaryMetricsPtrOutputWithContext(ctx)
}

func (e ForecastingPrimaryMetrics) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ForecastingPrimaryMetrics) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ForecastingPrimaryMetrics) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ForecastingPrimaryMetrics) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ForecastingPrimaryMetricsOutput struct{ *pulumi.OutputState }

func (ForecastingPrimaryMetricsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ForecastingPrimaryMetrics)(nil)).Elem()
}

func (o ForecastingPrimaryMetricsOutput) ToForecastingPrimaryMetricsOutput() ForecastingPrimaryMetricsOutput {
	return o
}

func (o ForecastingPrimaryMetricsOutput) ToForecastingPrimaryMetricsOutputWithContext(ctx context.Context) ForecastingPrimaryMetricsOutput {
	return o
}

func (o ForecastingPrimaryMetricsOutput) ToForecastingPrimaryMetricsPtrOutput() ForecastingPrimaryMetricsPtrOutput {
	return o.ToForecastingPrimaryMetricsPtrOutputWithContext(context.Background())
}

func (o ForecastingPrimaryMetricsOutput) ToForecastingPrimaryMetricsPtrOutputWithContext(ctx context.Context) ForecastingPrimaryMetricsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ForecastingPrimaryMetrics) *ForecastingPrimaryMetrics {
		return &v
	}).(ForecastingPrimaryMetricsPtrOutput)
}

func (o ForecastingPrimaryMetricsOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ForecastingPrimaryMetricsOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ForecastingPrimaryMetrics) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ForecastingPrimaryMetricsOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ForecastingPrimaryMetricsOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ForecastingPrimaryMetrics) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ForecastingPrimaryMetricsPtrOutput struct{ *pulumi.OutputState }

func (ForecastingPrimaryMetricsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ForecastingPrimaryMetrics)(nil)).Elem()
}

func (o ForecastingPrimaryMetricsPtrOutput) ToForecastingPrimaryMetricsPtrOutput() ForecastingPrimaryMetricsPtrOutput {
	return o
}

func (o ForecastingPrimaryMetricsPtrOutput) ToForecastingPrimaryMetricsPtrOutputWithContext(ctx context.Context) ForecastingPrimaryMetricsPtrOutput {
	return o
}

func (o ForecastingPrimaryMetricsPtrOutput) Elem() ForecastingPrimaryMetricsOutput {
	return o.ApplyT(func(v *ForecastingPrimaryMetrics) ForecastingPrimaryMetrics {
		if v != nil {
			return *v
		}
		var ret ForecastingPrimaryMetrics
		return ret
	}).(ForecastingPrimaryMetricsOutput)
}

func (o ForecastingPrimaryMetricsPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ForecastingPrimaryMetricsPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ForecastingPrimaryMetrics) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ForecastingPrimaryMetricsInput is an input type that accepts values of the ForecastingPrimaryMetrics enum
// A concrete instance of `ForecastingPrimaryMetricsInput` can be one of the following:
//
//	ForecastingPrimaryMetricsSpearmanCorrelation
//	ForecastingPrimaryMetricsNormalizedRootMeanSquaredError
//	ForecastingPrimaryMetricsR2Score
//	ForecastingPrimaryMetricsNormalizedMeanAbsoluteError
type ForecastingPrimaryMetricsInput interface {
	pulumi.Input

	ToForecastingPrimaryMetricsOutput() ForecastingPrimaryMetricsOutput
	ToForecastingPrimaryMetricsOutputWithContext(context.Context) ForecastingPrimaryMetricsOutput
}

var forecastingPrimaryMetricsPtrType = reflect.TypeOf((**ForecastingPrimaryMetrics)(nil)).Elem()

type ForecastingPrimaryMetricsPtrInput interface {
	pulumi.Input

	ToForecastingPrimaryMetricsPtrOutput() ForecastingPrimaryMetricsPtrOutput
	ToForecastingPrimaryMetricsPtrOutputWithContext(context.Context) ForecastingPrimaryMetricsPtrOutput
}

type forecastingPrimaryMetricsPtr string

func ForecastingPrimaryMetricsPtr(v string) ForecastingPrimaryMetricsPtrInput {
	return (*forecastingPrimaryMetricsPtr)(&v)
}

func (*forecastingPrimaryMetricsPtr) ElementType() reflect.Type {
	return forecastingPrimaryMetricsPtrType
}

func (in *forecastingPrimaryMetricsPtr) ToForecastingPrimaryMetricsPtrOutput() ForecastingPrimaryMetricsPtrOutput {
	return pulumi.ToOutput(in).(ForecastingPrimaryMetricsPtrOutput)
}

func (in *forecastingPrimaryMetricsPtr) ToForecastingPrimaryMetricsPtrOutputWithContext(ctx context.Context) ForecastingPrimaryMetricsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ForecastingPrimaryMetricsPtrOutput)
}

// [Required] Defines supported metric goals for hyperparameter tuning
type Goal string

const (
	GoalMinimize = Goal("Minimize")
	GoalMaximize = Goal("Maximize")
)

func (Goal) ElementType() reflect.Type {
	return reflect.TypeOf((*Goal)(nil)).Elem()
}

func (e Goal) ToGoalOutput() GoalOutput {
	return pulumi.ToOutput(e).(GoalOutput)
}

func (e Goal) ToGoalOutputWithContext(ctx context.Context) GoalOutput {
	return pulumi.ToOutputWithContext(ctx, e).(GoalOutput)
}

func (e Goal) ToGoalPtrOutput() GoalPtrOutput {
	return e.ToGoalPtrOutputWithContext(context.Background())
}

func (e Goal) ToGoalPtrOutputWithContext(ctx context.Context) GoalPtrOutput {
	return Goal(e).ToGoalOutputWithContext(ctx).ToGoalPtrOutputWithContext(ctx)
}

func (e Goal) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e Goal) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e Goal) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e Goal) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type GoalOutput struct{ *pulumi.OutputState }

func (GoalOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Goal)(nil)).Elem()
}

func (o GoalOutput) ToGoalOutput() GoalOutput {
	return o
}

func (o GoalOutput) ToGoalOutputWithContext(ctx context.Context) GoalOutput {
	return o
}

func (o GoalOutput) ToGoalPtrOutput() GoalPtrOutput {
	return o.ToGoalPtrOutputWithContext(context.Background())
}

func (o GoalOutput) ToGoalPtrOutputWithContext(ctx context.Context) GoalPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Goal) *Goal {
		return &v
	}).(GoalPtrOutput)
}

func (o GoalOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o GoalOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e Goal) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o GoalOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o GoalOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e Goal) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type GoalPtrOutput struct{ *pulumi.OutputState }

func (GoalPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Goal)(nil)).Elem()
}

func (o GoalPtrOutput) ToGoalPtrOutput() GoalPtrOutput {
	return o
}

func (o GoalPtrOutput) ToGoalPtrOutputWithContext(ctx context.Context) GoalPtrOutput {
	return o
}

func (o GoalPtrOutput) Elem() GoalOutput {
	return o.ApplyT(func(v *Goal) Goal {
		if v != nil {
			return *v
		}
		var ret Goal
		return ret
	}).(GoalOutput)
}

func (o GoalPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o GoalPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *Goal) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// GoalInput is an input type that accepts values of the Goal enum
// A concrete instance of `GoalInput` can be one of the following:
//
//	GoalMinimize
//	GoalMaximize
type GoalInput interface {
	pulumi.Input

	ToGoalOutput() GoalOutput
	ToGoalOutputWithContext(context.Context) GoalOutput
}

var goalPtrType = reflect.TypeOf((**Goal)(nil)).Elem()

type GoalPtrInput interface {
	pulumi.Input

	ToGoalPtrOutput() GoalPtrOutput
	ToGoalPtrOutputWithContext(context.Context) GoalPtrOutput
}

type goalPtr string

func GoalPtr(v string) GoalPtrInput {
	return (*goalPtr)(&v)
}

func (*goalPtr) ElementType() reflect.Type {
	return goalPtrType
}

func (in *goalPtr) ToGoalPtrOutput() GoalPtrOutput {
	return pulumi.ToOutput(in).(GoalPtrOutput)
}

func (in *goalPtr) ToGoalPtrOutputWithContext(ctx context.Context) GoalPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(GoalPtrOutput)
}

// [Required] Specifies the type of identity framework.
type IdentityConfigurationType string

const (
	IdentityConfigurationTypeManaged      = IdentityConfigurationType("Managed")
	IdentityConfigurationTypeAMLToken     = IdentityConfigurationType("AMLToken")
	IdentityConfigurationTypeUserIdentity = IdentityConfigurationType("UserIdentity")
)

// Type of the image. Possible values are: docker - For docker images. azureml - For AzureML images
type ImageType string

const (
	ImageTypeDocker  = ImageType("docker")
	ImageTypeAzureml = ImageType("azureml")
)

func (ImageType) ElementType() reflect.Type {
	return reflect.TypeOf((*ImageType)(nil)).Elem()
}

func (e ImageType) ToImageTypeOutput() ImageTypeOutput {
	return pulumi.ToOutput(e).(ImageTypeOutput)
}

func (e ImageType) ToImageTypeOutputWithContext(ctx context.Context) ImageTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ImageTypeOutput)
}

func (e ImageType) ToImageTypePtrOutput() ImageTypePtrOutput {
	return e.ToImageTypePtrOutputWithContext(context.Background())
}

func (e ImageType) ToImageTypePtrOutputWithContext(ctx context.Context) ImageTypePtrOutput {
	return ImageType(e).ToImageTypeOutputWithContext(ctx).ToImageTypePtrOutputWithContext(ctx)
}

func (e ImageType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ImageType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ImageType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ImageType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ImageTypeOutput struct{ *pulumi.OutputState }

func (ImageTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ImageType)(nil)).Elem()
}

func (o ImageTypeOutput) ToImageTypeOutput() ImageTypeOutput {
	return o
}

func (o ImageTypeOutput) ToImageTypeOutputWithContext(ctx context.Context) ImageTypeOutput {
	return o
}

func (o ImageTypeOutput) ToImageTypePtrOutput() ImageTypePtrOutput {
	return o.ToImageTypePtrOutputWithContext(context.Background())
}

func (o ImageTypeOutput) ToImageTypePtrOutputWithContext(ctx context.Context) ImageTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ImageType) *ImageType {
		return &v
	}).(ImageTypePtrOutput)
}

func (o ImageTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ImageTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ImageType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ImageTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ImageTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ImageType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ImageTypePtrOutput struct{ *pulumi.OutputState }

func (ImageTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ImageType)(nil)).Elem()
}

func (o ImageTypePtrOutput) ToImageTypePtrOutput() ImageTypePtrOutput {
	return o
}

func (o ImageTypePtrOutput) ToImageTypePtrOutputWithContext(ctx context.Context) ImageTypePtrOutput {
	return o
}

func (o ImageTypePtrOutput) Elem() ImageTypeOutput {
	return o.ApplyT(func(v *ImageType) ImageType {
		if v != nil {
			return *v
		}
		var ret ImageType
		return ret
	}).(ImageTypeOutput)
}

func (o ImageTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ImageTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ImageType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ImageTypeInput is an input type that accepts values of the ImageType enum
// A concrete instance of `ImageTypeInput` can be one of the following:
//
//	ImageTypeDocker
//	ImageTypeAzureml
type ImageTypeInput interface {
	pulumi.Input

	ToImageTypeOutput() ImageTypeOutput
	ToImageTypeOutputWithContext(context.Context) ImageTypeOutput
}

var imageTypePtrType = reflect.TypeOf((**ImageType)(nil)).Elem()

type ImageTypePtrInput interface {
	pulumi.Input

	ToImageTypePtrOutput() ImageTypePtrOutput
	ToImageTypePtrOutputWithContext(context.Context) ImageTypePtrOutput
}

type imageTypePtr string

func ImageTypePtr(v string) ImageTypePtrInput {
	return (*imageTypePtr)(&v)
}

func (*imageTypePtr) ElementType() reflect.Type {
	return imageTypePtrType
}

func (in *imageTypePtr) ToImageTypePtrOutput() ImageTypePtrOutput {
	return pulumi.ToOutput(in).(ImageTypePtrOutput)
}

func (in *imageTypePtr) ToImageTypePtrOutputWithContext(ctx context.Context) ImageTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ImageTypePtrOutput)
}

// Input Asset Delivery Mode.
type InputDeliveryMode string

const (
	InputDeliveryModeReadOnlyMount  = InputDeliveryMode("ReadOnlyMount")
	InputDeliveryModeReadWriteMount = InputDeliveryMode("ReadWriteMount")
	InputDeliveryModeDownload       = InputDeliveryMode("Download")
	InputDeliveryModeDirect         = InputDeliveryMode("Direct")
	InputDeliveryModeEvalMount      = InputDeliveryMode("EvalMount")
	InputDeliveryModeEvalDownload   = InputDeliveryMode("EvalDownload")
)

func (InputDeliveryMode) ElementType() reflect.Type {
	return reflect.TypeOf((*InputDeliveryMode)(nil)).Elem()
}

func (e InputDeliveryMode) ToInputDeliveryModeOutput() InputDeliveryModeOutput {
	return pulumi.ToOutput(e).(InputDeliveryModeOutput)
}

func (e InputDeliveryMode) ToInputDeliveryModeOutputWithContext(ctx context.Context) InputDeliveryModeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(InputDeliveryModeOutput)
}

func (e InputDeliveryMode) ToInputDeliveryModePtrOutput() InputDeliveryModePtrOutput {
	return e.ToInputDeliveryModePtrOutputWithContext(context.Background())
}

func (e InputDeliveryMode) ToInputDeliveryModePtrOutputWithContext(ctx context.Context) InputDeliveryModePtrOutput {
	return InputDeliveryMode(e).ToInputDeliveryModeOutputWithContext(ctx).ToInputDeliveryModePtrOutputWithContext(ctx)
}

func (e InputDeliveryMode) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e InputDeliveryMode) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e InputDeliveryMode) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e InputDeliveryMode) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type InputDeliveryModeOutput struct{ *pulumi.OutputState }

func (InputDeliveryModeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InputDeliveryMode)(nil)).Elem()
}

func (o InputDeliveryModeOutput) ToInputDeliveryModeOutput() InputDeliveryModeOutput {
	return o
}

func (o InputDeliveryModeOutput) ToInputDeliveryModeOutputWithContext(ctx context.Context) InputDeliveryModeOutput {
	return o
}

func (o InputDeliveryModeOutput) ToInputDeliveryModePtrOutput() InputDeliveryModePtrOutput {
	return o.ToInputDeliveryModePtrOutputWithContext(context.Background())
}

func (o InputDeliveryModeOutput) ToInputDeliveryModePtrOutputWithContext(ctx context.Context) InputDeliveryModePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InputDeliveryMode) *InputDeliveryMode {
		return &v
	}).(InputDeliveryModePtrOutput)
}

func (o InputDeliveryModeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o InputDeliveryModeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e InputDeliveryMode) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o InputDeliveryModeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o InputDeliveryModeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e InputDeliveryMode) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type InputDeliveryModePtrOutput struct{ *pulumi.OutputState }

func (InputDeliveryModePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InputDeliveryMode)(nil)).Elem()
}

func (o InputDeliveryModePtrOutput) ToInputDeliveryModePtrOutput() InputDeliveryModePtrOutput {
	return o
}

func (o InputDeliveryModePtrOutput) ToInputDeliveryModePtrOutputWithContext(ctx context.Context) InputDeliveryModePtrOutput {
	return o
}

func (o InputDeliveryModePtrOutput) Elem() InputDeliveryModeOutput {
	return o.ApplyT(func(v *InputDeliveryMode) InputDeliveryMode {
		if v != nil {
			return *v
		}
		var ret InputDeliveryMode
		return ret
	}).(InputDeliveryModeOutput)
}

func (o InputDeliveryModePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o InputDeliveryModePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *InputDeliveryMode) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// InputDeliveryModeInput is an input type that accepts values of the InputDeliveryMode enum
// A concrete instance of `InputDeliveryModeInput` can be one of the following:
//
//	InputDeliveryModeReadOnlyMount
//	InputDeliveryModeReadWriteMount
//	InputDeliveryModeDownload
//	InputDeliveryModeDirect
//	InputDeliveryModeEvalMount
//	InputDeliveryModeEvalDownload
type InputDeliveryModeInput interface {
	pulumi.Input

	ToInputDeliveryModeOutput() InputDeliveryModeOutput
	ToInputDeliveryModeOutputWithContext(context.Context) InputDeliveryModeOutput
}

var inputDeliveryModePtrType = reflect.TypeOf((**InputDeliveryMode)(nil)).Elem()

type InputDeliveryModePtrInput interface {
	pulumi.Input

	ToInputDeliveryModePtrOutput() InputDeliveryModePtrOutput
	ToInputDeliveryModePtrOutputWithContext(context.Context) InputDeliveryModePtrOutput
}

type inputDeliveryModePtr string

func InputDeliveryModePtr(v string) InputDeliveryModePtrInput {
	return (*inputDeliveryModePtr)(&v)
}

func (*inputDeliveryModePtr) ElementType() reflect.Type {
	return inputDeliveryModePtrType
}

func (in *inputDeliveryModePtr) ToInputDeliveryModePtrOutput() InputDeliveryModePtrOutput {
	return pulumi.ToOutput(in).(InputDeliveryModePtrOutput)
}

func (in *inputDeliveryModePtr) ToInputDeliveryModePtrOutputWithContext(ctx context.Context) InputDeliveryModePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(InputDeliveryModePtrOutput)
}

// Primary metric to optimize for this task.
type InstanceSegmentationPrimaryMetrics string

const (
	// Mean Average Precision (MAP) is the average of AP (Average Precision).
	// AP is calculated for each class and averaged to get the MAP.
	InstanceSegmentationPrimaryMetricsMeanAveragePrecision = InstanceSegmentationPrimaryMetrics("MeanAveragePrecision")
)

func (InstanceSegmentationPrimaryMetrics) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceSegmentationPrimaryMetrics)(nil)).Elem()
}

func (e InstanceSegmentationPrimaryMetrics) ToInstanceSegmentationPrimaryMetricsOutput() InstanceSegmentationPrimaryMetricsOutput {
	return pulumi.ToOutput(e).(InstanceSegmentationPrimaryMetricsOutput)
}

func (e InstanceSegmentationPrimaryMetrics) ToInstanceSegmentationPrimaryMetricsOutputWithContext(ctx context.Context) InstanceSegmentationPrimaryMetricsOutput {
	return pulumi.ToOutputWithContext(ctx, e).(InstanceSegmentationPrimaryMetricsOutput)
}

func (e InstanceSegmentationPrimaryMetrics) ToInstanceSegmentationPrimaryMetricsPtrOutput() InstanceSegmentationPrimaryMetricsPtrOutput {
	return e.ToInstanceSegmentationPrimaryMetricsPtrOutputWithContext(context.Background())
}

func (e InstanceSegmentationPrimaryMetrics) ToInstanceSegmentationPrimaryMetricsPtrOutputWithContext(ctx context.Context) InstanceSegmentationPrimaryMetricsPtrOutput {
	return InstanceSegmentationPrimaryMetrics(e).ToInstanceSegmentationPrimaryMetricsOutputWithContext(ctx).ToInstanceSegmentationPrimaryMetricsPtrOutputWithContext(ctx)
}

func (e InstanceSegmentationPrimaryMetrics) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e InstanceSegmentationPrimaryMetrics) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e InstanceSegmentationPrimaryMetrics) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e InstanceSegmentationPrimaryMetrics) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type InstanceSegmentationPrimaryMetricsOutput struct{ *pulumi.OutputState }

func (InstanceSegmentationPrimaryMetricsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceSegmentationPrimaryMetrics)(nil)).Elem()
}

func (o InstanceSegmentationPrimaryMetricsOutput) ToInstanceSegmentationPrimaryMetricsOutput() InstanceSegmentationPrimaryMetricsOutput {
	return o
}

func (o InstanceSegmentationPrimaryMetricsOutput) ToInstanceSegmentationPrimaryMetricsOutputWithContext(ctx context.Context) InstanceSegmentationPrimaryMetricsOutput {
	return o
}

func (o InstanceSegmentationPrimaryMetricsOutput) ToInstanceSegmentationPrimaryMetricsPtrOutput() InstanceSegmentationPrimaryMetricsPtrOutput {
	return o.ToInstanceSegmentationPrimaryMetricsPtrOutputWithContext(context.Background())
}

func (o InstanceSegmentationPrimaryMetricsOutput) ToInstanceSegmentationPrimaryMetricsPtrOutputWithContext(ctx context.Context) InstanceSegmentationPrimaryMetricsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InstanceSegmentationPrimaryMetrics) *InstanceSegmentationPrimaryMetrics {
		return &v
	}).(InstanceSegmentationPrimaryMetricsPtrOutput)
}

func (o InstanceSegmentationPrimaryMetricsOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o InstanceSegmentationPrimaryMetricsOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e InstanceSegmentationPrimaryMetrics) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o InstanceSegmentationPrimaryMetricsOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o InstanceSegmentationPrimaryMetricsOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e InstanceSegmentationPrimaryMetrics) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type InstanceSegmentationPrimaryMetricsPtrOutput struct{ *pulumi.OutputState }

func (InstanceSegmentationPrimaryMetricsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceSegmentationPrimaryMetrics)(nil)).Elem()
}

func (o InstanceSegmentationPrimaryMetricsPtrOutput) ToInstanceSegmentationPrimaryMetricsPtrOutput() InstanceSegmentationPrimaryMetricsPtrOutput {
	return o
}

func (o InstanceSegmentationPrimaryMetricsPtrOutput) ToInstanceSegmentationPrimaryMetricsPtrOutputWithContext(ctx context.Context) InstanceSegmentationPrimaryMetricsPtrOutput {
	return o
}

func (o InstanceSegmentationPrimaryMetricsPtrOutput) Elem() InstanceSegmentationPrimaryMetricsOutput {
	return o.ApplyT(func(v *InstanceSegmentationPrimaryMetrics) InstanceSegmentationPrimaryMetrics {
		if v != nil {
			return *v
		}
		var ret InstanceSegmentationPrimaryMetrics
		return ret
	}).(InstanceSegmentationPrimaryMetricsOutput)
}

func (o InstanceSegmentationPrimaryMetricsPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o InstanceSegmentationPrimaryMetricsPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *InstanceSegmentationPrimaryMetrics) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// InstanceSegmentationPrimaryMetricsInput is an input type that accepts values of the InstanceSegmentationPrimaryMetrics enum
// A concrete instance of `InstanceSegmentationPrimaryMetricsInput` can be one of the following:
//
//	InstanceSegmentationPrimaryMetricsMeanAveragePrecision
type InstanceSegmentationPrimaryMetricsInput interface {
	pulumi.Input

	ToInstanceSegmentationPrimaryMetricsOutput() InstanceSegmentationPrimaryMetricsOutput
	ToInstanceSegmentationPrimaryMetricsOutputWithContext(context.Context) InstanceSegmentationPrimaryMetricsOutput
}

var instanceSegmentationPrimaryMetricsPtrType = reflect.TypeOf((**InstanceSegmentationPrimaryMetrics)(nil)).Elem()

type InstanceSegmentationPrimaryMetricsPtrInput interface {
	pulumi.Input

	ToInstanceSegmentationPrimaryMetricsPtrOutput() InstanceSegmentationPrimaryMetricsPtrOutput
	ToInstanceSegmentationPrimaryMetricsPtrOutputWithContext(context.Context) InstanceSegmentationPrimaryMetricsPtrOutput
}

type instanceSegmentationPrimaryMetricsPtr string

func InstanceSegmentationPrimaryMetricsPtr(v string) InstanceSegmentationPrimaryMetricsPtrInput {
	return (*instanceSegmentationPrimaryMetricsPtr)(&v)
}

func (*instanceSegmentationPrimaryMetricsPtr) ElementType() reflect.Type {
	return instanceSegmentationPrimaryMetricsPtrType
}

func (in *instanceSegmentationPrimaryMetricsPtr) ToInstanceSegmentationPrimaryMetricsPtrOutput() InstanceSegmentationPrimaryMetricsPtrOutput {
	return pulumi.ToOutput(in).(InstanceSegmentationPrimaryMetricsPtrOutput)
}

func (in *instanceSegmentationPrimaryMetricsPtr) ToInstanceSegmentationPrimaryMetricsPtrOutputWithContext(ctx context.Context) InstanceSegmentationPrimaryMetricsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(InstanceSegmentationPrimaryMetricsPtrOutput)
}

// [Required] Specifies the type of job.
type JobInputType string

const (
	JobInputTypeLiteral       = JobInputType("literal")
	JobInputType_Uri_file     = JobInputType("uri_file")
	JobInputType_Uri_folder   = JobInputType("uri_folder")
	JobInputTypeMltable       = JobInputType("mltable")
	JobInputType_Custom_model = JobInputType("custom_model")
	JobInputType_Mlflow_model = JobInputType("mlflow_model")
	JobInputType_Triton_model = JobInputType("triton_model")
)

// [Required] JobLimit type.
type JobLimitsType string

const (
	JobLimitsTypeCommand = JobLimitsType("Command")
	JobLimitsTypeSweep   = JobLimitsType("Sweep")
)

// [Required] Specifies the type of job.
type JobOutputType string

const (
	JobOutputType_Uri_file     = JobOutputType("uri_file")
	JobOutputType_Uri_folder   = JobOutputType("uri_folder")
	JobOutputTypeMltable       = JobOutputType("mltable")
	JobOutputType_Custom_model = JobOutputType("custom_model")
	JobOutputType_Mlflow_model = JobOutputType("mlflow_model")
	JobOutputType_Triton_model = JobOutputType("triton_model")
)

// [Required] Specifies the type of job.
type JobType string

const (
	JobTypeAutoML   = JobType("AutoML")
	JobTypeCommand  = JobType("Command")
	JobTypeSweep    = JobType("Sweep")
	JobTypePipeline = JobType("Pipeline")
)

// Type of learning rate scheduler. Must be 'warmup_cosine' or 'step'.
type LearningRateScheduler string

const (
	// No learning rate scheduler selected.
	LearningRateSchedulerNone = LearningRateScheduler("None")
	// Cosine Annealing With Warmup.
	LearningRateSchedulerWarmupCosine = LearningRateScheduler("WarmupCosine")
	// Step learning rate scheduler.
	LearningRateSchedulerStep = LearningRateScheduler("Step")
)

func (LearningRateScheduler) ElementType() reflect.Type {
	return reflect.TypeOf((*LearningRateScheduler)(nil)).Elem()
}

func (e LearningRateScheduler) ToLearningRateSchedulerOutput() LearningRateSchedulerOutput {
	return pulumi.ToOutput(e).(LearningRateSchedulerOutput)
}

func (e LearningRateScheduler) ToLearningRateSchedulerOutputWithContext(ctx context.Context) LearningRateSchedulerOutput {
	return pulumi.ToOutputWithContext(ctx, e).(LearningRateSchedulerOutput)
}

func (e LearningRateScheduler) ToLearningRateSchedulerPtrOutput() LearningRateSchedulerPtrOutput {
	return e.ToLearningRateSchedulerPtrOutputWithContext(context.Background())
}

func (e LearningRateScheduler) ToLearningRateSchedulerPtrOutputWithContext(ctx context.Context) LearningRateSchedulerPtrOutput {
	return LearningRateScheduler(e).ToLearningRateSchedulerOutputWithContext(ctx).ToLearningRateSchedulerPtrOutputWithContext(ctx)
}

func (e LearningRateScheduler) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e LearningRateScheduler) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e LearningRateScheduler) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e LearningRateScheduler) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type LearningRateSchedulerOutput struct{ *pulumi.OutputState }

func (LearningRateSchedulerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LearningRateScheduler)(nil)).Elem()
}

func (o LearningRateSchedulerOutput) ToLearningRateSchedulerOutput() LearningRateSchedulerOutput {
	return o
}

func (o LearningRateSchedulerOutput) ToLearningRateSchedulerOutputWithContext(ctx context.Context) LearningRateSchedulerOutput {
	return o
}

func (o LearningRateSchedulerOutput) ToLearningRateSchedulerPtrOutput() LearningRateSchedulerPtrOutput {
	return o.ToLearningRateSchedulerPtrOutputWithContext(context.Background())
}

func (o LearningRateSchedulerOutput) ToLearningRateSchedulerPtrOutputWithContext(ctx context.Context) LearningRateSchedulerPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LearningRateScheduler) *LearningRateScheduler {
		return &v
	}).(LearningRateSchedulerPtrOutput)
}

func (o LearningRateSchedulerOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o LearningRateSchedulerOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e LearningRateScheduler) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o LearningRateSchedulerOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o LearningRateSchedulerOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e LearningRateScheduler) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type LearningRateSchedulerPtrOutput struct{ *pulumi.OutputState }

func (LearningRateSchedulerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LearningRateScheduler)(nil)).Elem()
}

func (o LearningRateSchedulerPtrOutput) ToLearningRateSchedulerPtrOutput() LearningRateSchedulerPtrOutput {
	return o
}

func (o LearningRateSchedulerPtrOutput) ToLearningRateSchedulerPtrOutputWithContext(ctx context.Context) LearningRateSchedulerPtrOutput {
	return o
}

func (o LearningRateSchedulerPtrOutput) Elem() LearningRateSchedulerOutput {
	return o.ApplyT(func(v *LearningRateScheduler) LearningRateScheduler {
		if v != nil {
			return *v
		}
		var ret LearningRateScheduler
		return ret
	}).(LearningRateSchedulerOutput)
}

func (o LearningRateSchedulerPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o LearningRateSchedulerPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *LearningRateScheduler) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// LearningRateSchedulerInput is an input type that accepts values of the LearningRateScheduler enum
// A concrete instance of `LearningRateSchedulerInput` can be one of the following:
//
//	LearningRateSchedulerNone
//	LearningRateSchedulerWarmupCosine
//	LearningRateSchedulerStep
type LearningRateSchedulerInput interface {
	pulumi.Input

	ToLearningRateSchedulerOutput() LearningRateSchedulerOutput
	ToLearningRateSchedulerOutputWithContext(context.Context) LearningRateSchedulerOutput
}

var learningRateSchedulerPtrType = reflect.TypeOf((**LearningRateScheduler)(nil)).Elem()

type LearningRateSchedulerPtrInput interface {
	pulumi.Input

	ToLearningRateSchedulerPtrOutput() LearningRateSchedulerPtrOutput
	ToLearningRateSchedulerPtrOutputWithContext(context.Context) LearningRateSchedulerPtrOutput
}

type learningRateSchedulerPtr string

func LearningRateSchedulerPtr(v string) LearningRateSchedulerPtrInput {
	return (*learningRateSchedulerPtr)(&v)
}

func (*learningRateSchedulerPtr) ElementType() reflect.Type {
	return learningRateSchedulerPtrType
}

func (in *learningRateSchedulerPtr) ToLearningRateSchedulerPtrOutput() LearningRateSchedulerPtrOutput {
	return pulumi.ToOutput(in).(LearningRateSchedulerPtrOutput)
}

func (in *learningRateSchedulerPtr) ToLearningRateSchedulerPtrOutputWithContext(ctx context.Context) LearningRateSchedulerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(LearningRateSchedulerPtrOutput)
}

// Load Balancer Type
type LoadBalancerType string

const (
	LoadBalancerTypePublicIp             = LoadBalancerType("PublicIp")
	LoadBalancerTypeInternalLoadBalancer = LoadBalancerType("InternalLoadBalancer")
)

func (LoadBalancerType) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancerType)(nil)).Elem()
}

func (e LoadBalancerType) ToLoadBalancerTypeOutput() LoadBalancerTypeOutput {
	return pulumi.ToOutput(e).(LoadBalancerTypeOutput)
}

func (e LoadBalancerType) ToLoadBalancerTypeOutputWithContext(ctx context.Context) LoadBalancerTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(LoadBalancerTypeOutput)
}

func (e LoadBalancerType) ToLoadBalancerTypePtrOutput() LoadBalancerTypePtrOutput {
	return e.ToLoadBalancerTypePtrOutputWithContext(context.Background())
}

func (e LoadBalancerType) ToLoadBalancerTypePtrOutputWithContext(ctx context.Context) LoadBalancerTypePtrOutput {
	return LoadBalancerType(e).ToLoadBalancerTypeOutputWithContext(ctx).ToLoadBalancerTypePtrOutputWithContext(ctx)
}

func (e LoadBalancerType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e LoadBalancerType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e LoadBalancerType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e LoadBalancerType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type LoadBalancerTypeOutput struct{ *pulumi.OutputState }

func (LoadBalancerTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancerType)(nil)).Elem()
}

func (o LoadBalancerTypeOutput) ToLoadBalancerTypeOutput() LoadBalancerTypeOutput {
	return o
}

func (o LoadBalancerTypeOutput) ToLoadBalancerTypeOutputWithContext(ctx context.Context) LoadBalancerTypeOutput {
	return o
}

func (o LoadBalancerTypeOutput) ToLoadBalancerTypePtrOutput() LoadBalancerTypePtrOutput {
	return o.ToLoadBalancerTypePtrOutputWithContext(context.Background())
}

func (o LoadBalancerTypeOutput) ToLoadBalancerTypePtrOutputWithContext(ctx context.Context) LoadBalancerTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LoadBalancerType) *LoadBalancerType {
		return &v
	}).(LoadBalancerTypePtrOutput)
}

func (o LoadBalancerTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o LoadBalancerTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e LoadBalancerType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o LoadBalancerTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o LoadBalancerTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e LoadBalancerType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type LoadBalancerTypePtrOutput struct{ *pulumi.OutputState }

func (LoadBalancerTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LoadBalancerType)(nil)).Elem()
}

func (o LoadBalancerTypePtrOutput) ToLoadBalancerTypePtrOutput() LoadBalancerTypePtrOutput {
	return o
}

func (o LoadBalancerTypePtrOutput) ToLoadBalancerTypePtrOutputWithContext(ctx context.Context) LoadBalancerTypePtrOutput {
	return o
}

func (o LoadBalancerTypePtrOutput) Elem() LoadBalancerTypeOutput {
	return o.ApplyT(func(v *LoadBalancerType) LoadBalancerType {
		if v != nil {
			return *v
		}
		var ret LoadBalancerType
		return ret
	}).(LoadBalancerTypeOutput)
}

func (o LoadBalancerTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o LoadBalancerTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *LoadBalancerType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// LoadBalancerTypeInput is an input type that accepts values of the LoadBalancerType enum
// A concrete instance of `LoadBalancerTypeInput` can be one of the following:
//
//	LoadBalancerTypePublicIp
//	LoadBalancerTypeInternalLoadBalancer
type LoadBalancerTypeInput interface {
	pulumi.Input

	ToLoadBalancerTypeOutput() LoadBalancerTypeOutput
	ToLoadBalancerTypeOutputWithContext(context.Context) LoadBalancerTypeOutput
}

var loadBalancerTypePtrType = reflect.TypeOf((**LoadBalancerType)(nil)).Elem()

type LoadBalancerTypePtrInput interface {
	pulumi.Input

	ToLoadBalancerTypePtrOutput() LoadBalancerTypePtrOutput
	ToLoadBalancerTypePtrOutputWithContext(context.Context) LoadBalancerTypePtrOutput
}

type loadBalancerTypePtr string

func LoadBalancerTypePtr(v string) LoadBalancerTypePtrInput {
	return (*loadBalancerTypePtr)(&v)
}

func (*loadBalancerTypePtr) ElementType() reflect.Type {
	return loadBalancerTypePtrType
}

func (in *loadBalancerTypePtr) ToLoadBalancerTypePtrOutput() LoadBalancerTypePtrOutput {
	return pulumi.ToOutput(in).(LoadBalancerTypePtrOutput)
}

func (in *loadBalancerTypePtr) ToLoadBalancerTypePtrOutputWithContext(ctx context.Context) LoadBalancerTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(LoadBalancerTypePtrOutput)
}

// Log verbosity for the job.
type LogVerbosity string

const (
	// No logs emitted.
	LogVerbosityNotSet = LogVerbosity("NotSet")
	// Debug and above log statements logged.
	LogVerbosityDebug = LogVerbosity("Debug")
	// Info and above log statements logged.
	LogVerbosityInfo = LogVerbosity("Info")
	// Warning and above log statements logged.
	LogVerbosityWarning = LogVerbosity("Warning")
	// Error and above log statements logged.
	LogVerbosityError = LogVerbosity("Error")
	// Only critical statements logged.
	LogVerbosityCritical = LogVerbosity("Critical")
)

func (LogVerbosity) ElementType() reflect.Type {
	return reflect.TypeOf((*LogVerbosity)(nil)).Elem()
}

func (e LogVerbosity) ToLogVerbosityOutput() LogVerbosityOutput {
	return pulumi.ToOutput(e).(LogVerbosityOutput)
}

func (e LogVerbosity) ToLogVerbosityOutputWithContext(ctx context.Context) LogVerbosityOutput {
	return pulumi.ToOutputWithContext(ctx, e).(LogVerbosityOutput)
}

func (e LogVerbosity) ToLogVerbosityPtrOutput() LogVerbosityPtrOutput {
	return e.ToLogVerbosityPtrOutputWithContext(context.Background())
}

func (e LogVerbosity) ToLogVerbosityPtrOutputWithContext(ctx context.Context) LogVerbosityPtrOutput {
	return LogVerbosity(e).ToLogVerbosityOutputWithContext(ctx).ToLogVerbosityPtrOutputWithContext(ctx)
}

func (e LogVerbosity) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e LogVerbosity) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e LogVerbosity) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e LogVerbosity) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type LogVerbosityOutput struct{ *pulumi.OutputState }

func (LogVerbosityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LogVerbosity)(nil)).Elem()
}

func (o LogVerbosityOutput) ToLogVerbosityOutput() LogVerbosityOutput {
	return o
}

func (o LogVerbosityOutput) ToLogVerbosityOutputWithContext(ctx context.Context) LogVerbosityOutput {
	return o
}

func (o LogVerbosityOutput) ToLogVerbosityPtrOutput() LogVerbosityPtrOutput {
	return o.ToLogVerbosityPtrOutputWithContext(context.Background())
}

func (o LogVerbosityOutput) ToLogVerbosityPtrOutputWithContext(ctx context.Context) LogVerbosityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LogVerbosity) *LogVerbosity {
		return &v
	}).(LogVerbosityPtrOutput)
}

func (o LogVerbosityOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o LogVerbosityOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e LogVerbosity) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o LogVerbosityOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o LogVerbosityOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e LogVerbosity) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type LogVerbosityPtrOutput struct{ *pulumi.OutputState }

func (LogVerbosityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LogVerbosity)(nil)).Elem()
}

func (o LogVerbosityPtrOutput) ToLogVerbosityPtrOutput() LogVerbosityPtrOutput {
	return o
}

func (o LogVerbosityPtrOutput) ToLogVerbosityPtrOutputWithContext(ctx context.Context) LogVerbosityPtrOutput {
	return o
}

func (o LogVerbosityPtrOutput) Elem() LogVerbosityOutput {
	return o.ApplyT(func(v *LogVerbosity) LogVerbosity {
		if v != nil {
			return *v
		}
		var ret LogVerbosity
		return ret
	}).(LogVerbosityOutput)
}

func (o LogVerbosityPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o LogVerbosityPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *LogVerbosity) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// LogVerbosityInput is an input type that accepts values of the LogVerbosity enum
// A concrete instance of `LogVerbosityInput` can be one of the following:
//
//	LogVerbosityNotSet
//	LogVerbosityDebug
//	LogVerbosityInfo
//	LogVerbosityWarning
//	LogVerbosityError
//	LogVerbosityCritical
type LogVerbosityInput interface {
	pulumi.Input

	ToLogVerbosityOutput() LogVerbosityOutput
	ToLogVerbosityOutputWithContext(context.Context) LogVerbosityOutput
}

var logVerbosityPtrType = reflect.TypeOf((**LogVerbosity)(nil)).Elem()

type LogVerbosityPtrInput interface {
	pulumi.Input

	ToLogVerbosityPtrOutput() LogVerbosityPtrOutput
	ToLogVerbosityPtrOutputWithContext(context.Context) LogVerbosityPtrOutput
}

type logVerbosityPtr string

func LogVerbosityPtr(v string) LogVerbosityPtrInput {
	return (*logVerbosityPtr)(&v)
}

func (*logVerbosityPtr) ElementType() reflect.Type {
	return logVerbosityPtrType
}

func (in *logVerbosityPtr) ToLogVerbosityPtrOutput() LogVerbosityPtrOutput {
	return pulumi.ToOutput(in).(LogVerbosityPtrOutput)
}

func (in *logVerbosityPtr) ToLogVerbosityPtrOutputWithContext(ctx context.Context) LogVerbosityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(LogVerbosityPtrOutput)
}

// Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
type ManagedServiceIdentityType string

const (
	ManagedServiceIdentityTypeNone                         = ManagedServiceIdentityType("None")
	ManagedServiceIdentityTypeSystemAssigned               = ManagedServiceIdentityType("SystemAssigned")
	ManagedServiceIdentityTypeUserAssigned                 = ManagedServiceIdentityType("UserAssigned")
	ManagedServiceIdentityType_SystemAssigned_UserAssigned = ManagedServiceIdentityType("SystemAssigned,UserAssigned")
)

func (ManagedServiceIdentityType) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedServiceIdentityType)(nil)).Elem()
}

func (e ManagedServiceIdentityType) ToManagedServiceIdentityTypeOutput() ManagedServiceIdentityTypeOutput {
	return pulumi.ToOutput(e).(ManagedServiceIdentityTypeOutput)
}

func (e ManagedServiceIdentityType) ToManagedServiceIdentityTypeOutputWithContext(ctx context.Context) ManagedServiceIdentityTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ManagedServiceIdentityTypeOutput)
}

func (e ManagedServiceIdentityType) ToManagedServiceIdentityTypePtrOutput() ManagedServiceIdentityTypePtrOutput {
	return e.ToManagedServiceIdentityTypePtrOutputWithContext(context.Background())
}

func (e ManagedServiceIdentityType) ToManagedServiceIdentityTypePtrOutputWithContext(ctx context.Context) ManagedServiceIdentityTypePtrOutput {
	return ManagedServiceIdentityType(e).ToManagedServiceIdentityTypeOutputWithContext(ctx).ToManagedServiceIdentityTypePtrOutputWithContext(ctx)
}

func (e ManagedServiceIdentityType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ManagedServiceIdentityType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ManagedServiceIdentityType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ManagedServiceIdentityType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ManagedServiceIdentityTypeOutput struct{ *pulumi.OutputState }

func (ManagedServiceIdentityTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedServiceIdentityType)(nil)).Elem()
}

func (o ManagedServiceIdentityTypeOutput) ToManagedServiceIdentityTypeOutput() ManagedServiceIdentityTypeOutput {
	return o
}

func (o ManagedServiceIdentityTypeOutput) ToManagedServiceIdentityTypeOutputWithContext(ctx context.Context) ManagedServiceIdentityTypeOutput {
	return o
}

func (o ManagedServiceIdentityTypeOutput) ToManagedServiceIdentityTypePtrOutput() ManagedServiceIdentityTypePtrOutput {
	return o.ToManagedServiceIdentityTypePtrOutputWithContext(context.Background())
}

func (o ManagedServiceIdentityTypeOutput) ToManagedServiceIdentityTypePtrOutputWithContext(ctx context.Context) ManagedServiceIdentityTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ManagedServiceIdentityType) *ManagedServiceIdentityType {
		return &v
	}).(ManagedServiceIdentityTypePtrOutput)
}

func (o ManagedServiceIdentityTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ManagedServiceIdentityTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ManagedServiceIdentityType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ManagedServiceIdentityTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ManagedServiceIdentityTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ManagedServiceIdentityType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ManagedServiceIdentityTypePtrOutput struct{ *pulumi.OutputState }

func (ManagedServiceIdentityTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedServiceIdentityType)(nil)).Elem()
}

func (o ManagedServiceIdentityTypePtrOutput) ToManagedServiceIdentityTypePtrOutput() ManagedServiceIdentityTypePtrOutput {
	return o
}

func (o ManagedServiceIdentityTypePtrOutput) ToManagedServiceIdentityTypePtrOutputWithContext(ctx context.Context) ManagedServiceIdentityTypePtrOutput {
	return o
}

func (o ManagedServiceIdentityTypePtrOutput) Elem() ManagedServiceIdentityTypeOutput {
	return o.ApplyT(func(v *ManagedServiceIdentityType) ManagedServiceIdentityType {
		if v != nil {
			return *v
		}
		var ret ManagedServiceIdentityType
		return ret
	}).(ManagedServiceIdentityTypeOutput)
}

func (o ManagedServiceIdentityTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ManagedServiceIdentityTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ManagedServiceIdentityType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ManagedServiceIdentityTypeInput is an input type that accepts values of the ManagedServiceIdentityType enum
// A concrete instance of `ManagedServiceIdentityTypeInput` can be one of the following:
//
//	ManagedServiceIdentityTypeNone
//	ManagedServiceIdentityTypeSystemAssigned
//	ManagedServiceIdentityTypeUserAssigned
//	ManagedServiceIdentityType_SystemAssigned_UserAssigned
type ManagedServiceIdentityTypeInput interface {
	pulumi.Input

	ToManagedServiceIdentityTypeOutput() ManagedServiceIdentityTypeOutput
	ToManagedServiceIdentityTypeOutputWithContext(context.Context) ManagedServiceIdentityTypeOutput
}

var managedServiceIdentityTypePtrType = reflect.TypeOf((**ManagedServiceIdentityType)(nil)).Elem()

type ManagedServiceIdentityTypePtrInput interface {
	pulumi.Input

	ToManagedServiceIdentityTypePtrOutput() ManagedServiceIdentityTypePtrOutput
	ToManagedServiceIdentityTypePtrOutputWithContext(context.Context) ManagedServiceIdentityTypePtrOutput
}

type managedServiceIdentityTypePtr string

func ManagedServiceIdentityTypePtr(v string) ManagedServiceIdentityTypePtrInput {
	return (*managedServiceIdentityTypePtr)(&v)
}

func (*managedServiceIdentityTypePtr) ElementType() reflect.Type {
	return managedServiceIdentityTypePtrType
}

func (in *managedServiceIdentityTypePtr) ToManagedServiceIdentityTypePtrOutput() ManagedServiceIdentityTypePtrOutput {
	return pulumi.ToOutput(in).(ManagedServiceIdentityTypePtrOutput)
}

func (in *managedServiceIdentityTypePtr) ToManagedServiceIdentityTypePtrOutputWithContext(ctx context.Context) ManagedServiceIdentityTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ManagedServiceIdentityTypePtrOutput)
}

// Model size. Must be 'small', 'medium', 'large', or 'xlarge'.
// Note: training run may get into CUDA OOM if the model size is too big.
// Note: This settings is only supported for the 'yolov5' algorithm.
type ModelSize string

const (
	// No value selected.
	ModelSizeNone = ModelSize("None")
	// Small size.
	ModelSizeSmall = ModelSize("Small")
	// Medium size.
	ModelSizeMedium = ModelSize("Medium")
	// Large size.
	ModelSizeLarge = ModelSize("Large")
	// Extra large size.
	ModelSizeExtraLarge = ModelSize("ExtraLarge")
)

func (ModelSize) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelSize)(nil)).Elem()
}

func (e ModelSize) ToModelSizeOutput() ModelSizeOutput {
	return pulumi.ToOutput(e).(ModelSizeOutput)
}

func (e ModelSize) ToModelSizeOutputWithContext(ctx context.Context) ModelSizeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ModelSizeOutput)
}

func (e ModelSize) ToModelSizePtrOutput() ModelSizePtrOutput {
	return e.ToModelSizePtrOutputWithContext(context.Background())
}

func (e ModelSize) ToModelSizePtrOutputWithContext(ctx context.Context) ModelSizePtrOutput {
	return ModelSize(e).ToModelSizeOutputWithContext(ctx).ToModelSizePtrOutputWithContext(ctx)
}

func (e ModelSize) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ModelSize) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ModelSize) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ModelSize) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ModelSizeOutput struct{ *pulumi.OutputState }

func (ModelSizeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelSize)(nil)).Elem()
}

func (o ModelSizeOutput) ToModelSizeOutput() ModelSizeOutput {
	return o
}

func (o ModelSizeOutput) ToModelSizeOutputWithContext(ctx context.Context) ModelSizeOutput {
	return o
}

func (o ModelSizeOutput) ToModelSizePtrOutput() ModelSizePtrOutput {
	return o.ToModelSizePtrOutputWithContext(context.Background())
}

func (o ModelSizeOutput) ToModelSizePtrOutputWithContext(ctx context.Context) ModelSizePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ModelSize) *ModelSize {
		return &v
	}).(ModelSizePtrOutput)
}

func (o ModelSizeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ModelSizeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ModelSize) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ModelSizeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ModelSizeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ModelSize) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ModelSizePtrOutput struct{ *pulumi.OutputState }

func (ModelSizePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelSize)(nil)).Elem()
}

func (o ModelSizePtrOutput) ToModelSizePtrOutput() ModelSizePtrOutput {
	return o
}

func (o ModelSizePtrOutput) ToModelSizePtrOutputWithContext(ctx context.Context) ModelSizePtrOutput {
	return o
}

func (o ModelSizePtrOutput) Elem() ModelSizeOutput {
	return o.ApplyT(func(v *ModelSize) ModelSize {
		if v != nil {
			return *v
		}
		var ret ModelSize
		return ret
	}).(ModelSizeOutput)
}

func (o ModelSizePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ModelSizePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ModelSize) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ModelSizeInput is an input type that accepts values of the ModelSize enum
// A concrete instance of `ModelSizeInput` can be one of the following:
//
//	ModelSizeNone
//	ModelSizeSmall
//	ModelSizeMedium
//	ModelSizeLarge
//	ModelSizeExtraLarge
type ModelSizeInput interface {
	pulumi.Input

	ToModelSizeOutput() ModelSizeOutput
	ToModelSizeOutputWithContext(context.Context) ModelSizeOutput
}

var modelSizePtrType = reflect.TypeOf((**ModelSize)(nil)).Elem()

type ModelSizePtrInput interface {
	pulumi.Input

	ToModelSizePtrOutput() ModelSizePtrOutput
	ToModelSizePtrOutputWithContext(context.Context) ModelSizePtrOutput
}

type modelSizePtr string

func ModelSizePtr(v string) ModelSizePtrInput {
	return (*modelSizePtr)(&v)
}

func (*modelSizePtr) ElementType() reflect.Type {
	return modelSizePtrType
}

func (in *modelSizePtr) ToModelSizePtrOutput() ModelSizePtrOutput {
	return pulumi.ToOutput(in).(ModelSizePtrOutput)
}

func (in *modelSizePtr) ToModelSizePtrOutputWithContext(ctx context.Context) ModelSizePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ModelSizePtrOutput)
}

// [Required] Mode for determining N-Cross validations.
type NCrossValidationsMode string

const (
	// Determine N-Cross validations value automatically. Supported only for 'Forecasting' AutoML task.
	NCrossValidationsModeAuto = NCrossValidationsMode("Auto")
	// Use custom N-Cross validations value.
	NCrossValidationsModeCustom = NCrossValidationsMode("Custom")
)

// [Required] Type of the Nodes value
type NodesValueType string

const (
	NodesValueTypeAll = NodesValueType("All")
)

// Primary metric to optimize for this task.
type ObjectDetectionPrimaryMetrics string

const (
	// Mean Average Precision (MAP) is the average of AP (Average Precision).
	// AP is calculated for each class and averaged to get the MAP.
	ObjectDetectionPrimaryMetricsMeanAveragePrecision = ObjectDetectionPrimaryMetrics("MeanAveragePrecision")
)

func (ObjectDetectionPrimaryMetrics) ElementType() reflect.Type {
	return reflect.TypeOf((*ObjectDetectionPrimaryMetrics)(nil)).Elem()
}

func (e ObjectDetectionPrimaryMetrics) ToObjectDetectionPrimaryMetricsOutput() ObjectDetectionPrimaryMetricsOutput {
	return pulumi.ToOutput(e).(ObjectDetectionPrimaryMetricsOutput)
}

func (e ObjectDetectionPrimaryMetrics) ToObjectDetectionPrimaryMetricsOutputWithContext(ctx context.Context) ObjectDetectionPrimaryMetricsOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ObjectDetectionPrimaryMetricsOutput)
}

func (e ObjectDetectionPrimaryMetrics) ToObjectDetectionPrimaryMetricsPtrOutput() ObjectDetectionPrimaryMetricsPtrOutput {
	return e.ToObjectDetectionPrimaryMetricsPtrOutputWithContext(context.Background())
}

func (e ObjectDetectionPrimaryMetrics) ToObjectDetectionPrimaryMetricsPtrOutputWithContext(ctx context.Context) ObjectDetectionPrimaryMetricsPtrOutput {
	return ObjectDetectionPrimaryMetrics(e).ToObjectDetectionPrimaryMetricsOutputWithContext(ctx).ToObjectDetectionPrimaryMetricsPtrOutputWithContext(ctx)
}

func (e ObjectDetectionPrimaryMetrics) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ObjectDetectionPrimaryMetrics) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ObjectDetectionPrimaryMetrics) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ObjectDetectionPrimaryMetrics) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ObjectDetectionPrimaryMetricsOutput struct{ *pulumi.OutputState }

func (ObjectDetectionPrimaryMetricsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ObjectDetectionPrimaryMetrics)(nil)).Elem()
}

func (o ObjectDetectionPrimaryMetricsOutput) ToObjectDetectionPrimaryMetricsOutput() ObjectDetectionPrimaryMetricsOutput {
	return o
}

func (o ObjectDetectionPrimaryMetricsOutput) ToObjectDetectionPrimaryMetricsOutputWithContext(ctx context.Context) ObjectDetectionPrimaryMetricsOutput {
	return o
}

func (o ObjectDetectionPrimaryMetricsOutput) ToObjectDetectionPrimaryMetricsPtrOutput() ObjectDetectionPrimaryMetricsPtrOutput {
	return o.ToObjectDetectionPrimaryMetricsPtrOutputWithContext(context.Background())
}

func (o ObjectDetectionPrimaryMetricsOutput) ToObjectDetectionPrimaryMetricsPtrOutputWithContext(ctx context.Context) ObjectDetectionPrimaryMetricsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ObjectDetectionPrimaryMetrics) *ObjectDetectionPrimaryMetrics {
		return &v
	}).(ObjectDetectionPrimaryMetricsPtrOutput)
}

func (o ObjectDetectionPrimaryMetricsOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ObjectDetectionPrimaryMetricsOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ObjectDetectionPrimaryMetrics) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ObjectDetectionPrimaryMetricsOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ObjectDetectionPrimaryMetricsOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ObjectDetectionPrimaryMetrics) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ObjectDetectionPrimaryMetricsPtrOutput struct{ *pulumi.OutputState }

func (ObjectDetectionPrimaryMetricsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ObjectDetectionPrimaryMetrics)(nil)).Elem()
}

func (o ObjectDetectionPrimaryMetricsPtrOutput) ToObjectDetectionPrimaryMetricsPtrOutput() ObjectDetectionPrimaryMetricsPtrOutput {
	return o
}

func (o ObjectDetectionPrimaryMetricsPtrOutput) ToObjectDetectionPrimaryMetricsPtrOutputWithContext(ctx context.Context) ObjectDetectionPrimaryMetricsPtrOutput {
	return o
}

func (o ObjectDetectionPrimaryMetricsPtrOutput) Elem() ObjectDetectionPrimaryMetricsOutput {
	return o.ApplyT(func(v *ObjectDetectionPrimaryMetrics) ObjectDetectionPrimaryMetrics {
		if v != nil {
			return *v
		}
		var ret ObjectDetectionPrimaryMetrics
		return ret
	}).(ObjectDetectionPrimaryMetricsOutput)
}

func (o ObjectDetectionPrimaryMetricsPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ObjectDetectionPrimaryMetricsPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ObjectDetectionPrimaryMetrics) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ObjectDetectionPrimaryMetricsInput is an input type that accepts values of the ObjectDetectionPrimaryMetrics enum
// A concrete instance of `ObjectDetectionPrimaryMetricsInput` can be one of the following:
//
//	ObjectDetectionPrimaryMetricsMeanAveragePrecision
type ObjectDetectionPrimaryMetricsInput interface {
	pulumi.Input

	ToObjectDetectionPrimaryMetricsOutput() ObjectDetectionPrimaryMetricsOutput
	ToObjectDetectionPrimaryMetricsOutputWithContext(context.Context) ObjectDetectionPrimaryMetricsOutput
}

var objectDetectionPrimaryMetricsPtrType = reflect.TypeOf((**ObjectDetectionPrimaryMetrics)(nil)).Elem()

type ObjectDetectionPrimaryMetricsPtrInput interface {
	pulumi.Input

	ToObjectDetectionPrimaryMetricsPtrOutput() ObjectDetectionPrimaryMetricsPtrOutput
	ToObjectDetectionPrimaryMetricsPtrOutputWithContext(context.Context) ObjectDetectionPrimaryMetricsPtrOutput
}

type objectDetectionPrimaryMetricsPtr string

func ObjectDetectionPrimaryMetricsPtr(v string) ObjectDetectionPrimaryMetricsPtrInput {
	return (*objectDetectionPrimaryMetricsPtr)(&v)
}

func (*objectDetectionPrimaryMetricsPtr) ElementType() reflect.Type {
	return objectDetectionPrimaryMetricsPtrType
}

func (in *objectDetectionPrimaryMetricsPtr) ToObjectDetectionPrimaryMetricsPtrOutput() ObjectDetectionPrimaryMetricsPtrOutput {
	return pulumi.ToOutput(in).(ObjectDetectionPrimaryMetricsPtrOutput)
}

func (in *objectDetectionPrimaryMetricsPtr) ToObjectDetectionPrimaryMetricsPtrOutputWithContext(ctx context.Context) ObjectDetectionPrimaryMetricsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ObjectDetectionPrimaryMetricsPtrOutput)
}

// The OS type of the environment.
type OperatingSystemType string

const (
	OperatingSystemTypeLinux   = OperatingSystemType("Linux")
	OperatingSystemTypeWindows = OperatingSystemType("Windows")
)

func (OperatingSystemType) ElementType() reflect.Type {
	return reflect.TypeOf((*OperatingSystemType)(nil)).Elem()
}

func (e OperatingSystemType) ToOperatingSystemTypeOutput() OperatingSystemTypeOutput {
	return pulumi.ToOutput(e).(OperatingSystemTypeOutput)
}

func (e OperatingSystemType) ToOperatingSystemTypeOutputWithContext(ctx context.Context) OperatingSystemTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(OperatingSystemTypeOutput)
}

func (e OperatingSystemType) ToOperatingSystemTypePtrOutput() OperatingSystemTypePtrOutput {
	return e.ToOperatingSystemTypePtrOutputWithContext(context.Background())
}

func (e OperatingSystemType) ToOperatingSystemTypePtrOutputWithContext(ctx context.Context) OperatingSystemTypePtrOutput {
	return OperatingSystemType(e).ToOperatingSystemTypeOutputWithContext(ctx).ToOperatingSystemTypePtrOutputWithContext(ctx)
}

func (e OperatingSystemType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e OperatingSystemType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e OperatingSystemType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e OperatingSystemType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type OperatingSystemTypeOutput struct{ *pulumi.OutputState }

func (OperatingSystemTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OperatingSystemType)(nil)).Elem()
}

func (o OperatingSystemTypeOutput) ToOperatingSystemTypeOutput() OperatingSystemTypeOutput {
	return o
}

func (o OperatingSystemTypeOutput) ToOperatingSystemTypeOutputWithContext(ctx context.Context) OperatingSystemTypeOutput {
	return o
}

func (o OperatingSystemTypeOutput) ToOperatingSystemTypePtrOutput() OperatingSystemTypePtrOutput {
	return o.ToOperatingSystemTypePtrOutputWithContext(context.Background())
}

func (o OperatingSystemTypeOutput) ToOperatingSystemTypePtrOutputWithContext(ctx context.Context) OperatingSystemTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OperatingSystemType) *OperatingSystemType {
		return &v
	}).(OperatingSystemTypePtrOutput)
}

func (o OperatingSystemTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o OperatingSystemTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e OperatingSystemType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o OperatingSystemTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o OperatingSystemTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e OperatingSystemType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type OperatingSystemTypePtrOutput struct{ *pulumi.OutputState }

func (OperatingSystemTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OperatingSystemType)(nil)).Elem()
}

func (o OperatingSystemTypePtrOutput) ToOperatingSystemTypePtrOutput() OperatingSystemTypePtrOutput {
	return o
}

func (o OperatingSystemTypePtrOutput) ToOperatingSystemTypePtrOutputWithContext(ctx context.Context) OperatingSystemTypePtrOutput {
	return o
}

func (o OperatingSystemTypePtrOutput) Elem() OperatingSystemTypeOutput {
	return o.ApplyT(func(v *OperatingSystemType) OperatingSystemType {
		if v != nil {
			return *v
		}
		var ret OperatingSystemType
		return ret
	}).(OperatingSystemTypeOutput)
}

func (o OperatingSystemTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o OperatingSystemTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *OperatingSystemType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// OperatingSystemTypeInput is an input type that accepts values of the OperatingSystemType enum
// A concrete instance of `OperatingSystemTypeInput` can be one of the following:
//
//	OperatingSystemTypeLinux
//	OperatingSystemTypeWindows
type OperatingSystemTypeInput interface {
	pulumi.Input

	ToOperatingSystemTypeOutput() OperatingSystemTypeOutput
	ToOperatingSystemTypeOutputWithContext(context.Context) OperatingSystemTypeOutput
}

var operatingSystemTypePtrType = reflect.TypeOf((**OperatingSystemType)(nil)).Elem()

type OperatingSystemTypePtrInput interface {
	pulumi.Input

	ToOperatingSystemTypePtrOutput() OperatingSystemTypePtrOutput
	ToOperatingSystemTypePtrOutputWithContext(context.Context) OperatingSystemTypePtrOutput
}

type operatingSystemTypePtr string

func OperatingSystemTypePtr(v string) OperatingSystemTypePtrInput {
	return (*operatingSystemTypePtr)(&v)
}

func (*operatingSystemTypePtr) ElementType() reflect.Type {
	return operatingSystemTypePtrType
}

func (in *operatingSystemTypePtr) ToOperatingSystemTypePtrOutput() OperatingSystemTypePtrOutput {
	return pulumi.ToOutput(in).(OperatingSystemTypePtrOutput)
}

func (in *operatingSystemTypePtr) ToOperatingSystemTypePtrOutputWithContext(ctx context.Context) OperatingSystemTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(OperatingSystemTypePtrOutput)
}

// Compute OS Type
type OsType string

const (
	OsTypeLinux   = OsType("Linux")
	OsTypeWindows = OsType("Windows")
)

func (OsType) ElementType() reflect.Type {
	return reflect.TypeOf((*OsType)(nil)).Elem()
}

func (e OsType) ToOsTypeOutput() OsTypeOutput {
	return pulumi.ToOutput(e).(OsTypeOutput)
}

func (e OsType) ToOsTypeOutputWithContext(ctx context.Context) OsTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(OsTypeOutput)
}

func (e OsType) ToOsTypePtrOutput() OsTypePtrOutput {
	return e.ToOsTypePtrOutputWithContext(context.Background())
}

func (e OsType) ToOsTypePtrOutputWithContext(ctx context.Context) OsTypePtrOutput {
	return OsType(e).ToOsTypeOutputWithContext(ctx).ToOsTypePtrOutputWithContext(ctx)
}

func (e OsType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e OsType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e OsType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e OsType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type OsTypeOutput struct{ *pulumi.OutputState }

func (OsTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OsType)(nil)).Elem()
}

func (o OsTypeOutput) ToOsTypeOutput() OsTypeOutput {
	return o
}

func (o OsTypeOutput) ToOsTypeOutputWithContext(ctx context.Context) OsTypeOutput {
	return o
}

func (o OsTypeOutput) ToOsTypePtrOutput() OsTypePtrOutput {
	return o.ToOsTypePtrOutputWithContext(context.Background())
}

func (o OsTypeOutput) ToOsTypePtrOutputWithContext(ctx context.Context) OsTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OsType) *OsType {
		return &v
	}).(OsTypePtrOutput)
}

func (o OsTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o OsTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e OsType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o OsTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o OsTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e OsType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type OsTypePtrOutput struct{ *pulumi.OutputState }

func (OsTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OsType)(nil)).Elem()
}

func (o OsTypePtrOutput) ToOsTypePtrOutput() OsTypePtrOutput {
	return o
}

func (o OsTypePtrOutput) ToOsTypePtrOutputWithContext(ctx context.Context) OsTypePtrOutput {
	return o
}

func (o OsTypePtrOutput) Elem() OsTypeOutput {
	return o.ApplyT(func(v *OsType) OsType {
		if v != nil {
			return *v
		}
		var ret OsType
		return ret
	}).(OsTypeOutput)
}

func (o OsTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o OsTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *OsType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// OsTypeInput is an input type that accepts values of the OsType enum
// A concrete instance of `OsTypeInput` can be one of the following:
//
//	OsTypeLinux
//	OsTypeWindows
type OsTypeInput interface {
	pulumi.Input

	ToOsTypeOutput() OsTypeOutput
	ToOsTypeOutputWithContext(context.Context) OsTypeOutput
}

var osTypePtrType = reflect.TypeOf((**OsType)(nil)).Elem()

type OsTypePtrInput interface {
	pulumi.Input

	ToOsTypePtrOutput() OsTypePtrOutput
	ToOsTypePtrOutputWithContext(context.Context) OsTypePtrOutput
}

type osTypePtr string

func OsTypePtr(v string) OsTypePtrInput {
	return (*osTypePtr)(&v)
}

func (*osTypePtr) ElementType() reflect.Type {
	return osTypePtrType
}

func (in *osTypePtr) ToOsTypePtrOutput() OsTypePtrOutput {
	return pulumi.ToOutput(in).(OsTypePtrOutput)
}

func (in *osTypePtr) ToOsTypePtrOutputWithContext(ctx context.Context) OsTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(OsTypePtrOutput)
}

// Output Asset Delivery Mode.
type OutputDeliveryMode string

const (
	OutputDeliveryModeReadWriteMount = OutputDeliveryMode("ReadWriteMount")
	OutputDeliveryModeUpload         = OutputDeliveryMode("Upload")
)

func (OutputDeliveryMode) ElementType() reflect.Type {
	return reflect.TypeOf((*OutputDeliveryMode)(nil)).Elem()
}

func (e OutputDeliveryMode) ToOutputDeliveryModeOutput() OutputDeliveryModeOutput {
	return pulumi.ToOutput(e).(OutputDeliveryModeOutput)
}

func (e OutputDeliveryMode) ToOutputDeliveryModeOutputWithContext(ctx context.Context) OutputDeliveryModeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(OutputDeliveryModeOutput)
}

func (e OutputDeliveryMode) ToOutputDeliveryModePtrOutput() OutputDeliveryModePtrOutput {
	return e.ToOutputDeliveryModePtrOutputWithContext(context.Background())
}

func (e OutputDeliveryMode) ToOutputDeliveryModePtrOutputWithContext(ctx context.Context) OutputDeliveryModePtrOutput {
	return OutputDeliveryMode(e).ToOutputDeliveryModeOutputWithContext(ctx).ToOutputDeliveryModePtrOutputWithContext(ctx)
}

func (e OutputDeliveryMode) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e OutputDeliveryMode) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e OutputDeliveryMode) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e OutputDeliveryMode) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type OutputDeliveryModeOutput struct{ *pulumi.OutputState }

func (OutputDeliveryModeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OutputDeliveryMode)(nil)).Elem()
}

func (o OutputDeliveryModeOutput) ToOutputDeliveryModeOutput() OutputDeliveryModeOutput {
	return o
}

func (o OutputDeliveryModeOutput) ToOutputDeliveryModeOutputWithContext(ctx context.Context) OutputDeliveryModeOutput {
	return o
}

func (o OutputDeliveryModeOutput) ToOutputDeliveryModePtrOutput() OutputDeliveryModePtrOutput {
	return o.ToOutputDeliveryModePtrOutputWithContext(context.Background())
}

func (o OutputDeliveryModeOutput) ToOutputDeliveryModePtrOutputWithContext(ctx context.Context) OutputDeliveryModePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OutputDeliveryMode) *OutputDeliveryMode {
		return &v
	}).(OutputDeliveryModePtrOutput)
}

func (o OutputDeliveryModeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o OutputDeliveryModeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e OutputDeliveryMode) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o OutputDeliveryModeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o OutputDeliveryModeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e OutputDeliveryMode) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type OutputDeliveryModePtrOutput struct{ *pulumi.OutputState }

func (OutputDeliveryModePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OutputDeliveryMode)(nil)).Elem()
}

func (o OutputDeliveryModePtrOutput) ToOutputDeliveryModePtrOutput() OutputDeliveryModePtrOutput {
	return o
}

func (o OutputDeliveryModePtrOutput) ToOutputDeliveryModePtrOutputWithContext(ctx context.Context) OutputDeliveryModePtrOutput {
	return o
}

func (o OutputDeliveryModePtrOutput) Elem() OutputDeliveryModeOutput {
	return o.ApplyT(func(v *OutputDeliveryMode) OutputDeliveryMode {
		if v != nil {
			return *v
		}
		var ret OutputDeliveryMode
		return ret
	}).(OutputDeliveryModeOutput)
}

func (o OutputDeliveryModePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o OutputDeliveryModePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *OutputDeliveryMode) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// OutputDeliveryModeInput is an input type that accepts values of the OutputDeliveryMode enum
// A concrete instance of `OutputDeliveryModeInput` can be one of the following:
//
//	OutputDeliveryModeReadWriteMount
//	OutputDeliveryModeUpload
type OutputDeliveryModeInput interface {
	pulumi.Input

	ToOutputDeliveryModeOutput() OutputDeliveryModeOutput
	ToOutputDeliveryModeOutputWithContext(context.Context) OutputDeliveryModeOutput
}

var outputDeliveryModePtrType = reflect.TypeOf((**OutputDeliveryMode)(nil)).Elem()

type OutputDeliveryModePtrInput interface {
	pulumi.Input

	ToOutputDeliveryModePtrOutput() OutputDeliveryModePtrOutput
	ToOutputDeliveryModePtrOutputWithContext(context.Context) OutputDeliveryModePtrOutput
}

type outputDeliveryModePtr string

func OutputDeliveryModePtr(v string) OutputDeliveryModePtrInput {
	return (*outputDeliveryModePtr)(&v)
}

func (*outputDeliveryModePtr) ElementType() reflect.Type {
	return outputDeliveryModePtrType
}

func (in *outputDeliveryModePtr) ToOutputDeliveryModePtrOutput() OutputDeliveryModePtrOutput {
	return pulumi.ToOutput(in).(OutputDeliveryModePtrOutput)
}

func (in *outputDeliveryModePtr) ToOutputDeliveryModePtrOutputWithContext(ctx context.Context) OutputDeliveryModePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(OutputDeliveryModePtrOutput)
}

// Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
type PrivateEndpointServiceConnectionStatus string

const (
	PrivateEndpointServiceConnectionStatusPending      = PrivateEndpointServiceConnectionStatus("Pending")
	PrivateEndpointServiceConnectionStatusApproved     = PrivateEndpointServiceConnectionStatus("Approved")
	PrivateEndpointServiceConnectionStatusRejected     = PrivateEndpointServiceConnectionStatus("Rejected")
	PrivateEndpointServiceConnectionStatusDisconnected = PrivateEndpointServiceConnectionStatus("Disconnected")
	PrivateEndpointServiceConnectionStatusTimeout      = PrivateEndpointServiceConnectionStatus("Timeout")
)

func (PrivateEndpointServiceConnectionStatus) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateEndpointServiceConnectionStatus)(nil)).Elem()
}

func (e PrivateEndpointServiceConnectionStatus) ToPrivateEndpointServiceConnectionStatusOutput() PrivateEndpointServiceConnectionStatusOutput {
	return pulumi.ToOutput(e).(PrivateEndpointServiceConnectionStatusOutput)
}

func (e PrivateEndpointServiceConnectionStatus) ToPrivateEndpointServiceConnectionStatusOutputWithContext(ctx context.Context) PrivateEndpointServiceConnectionStatusOutput {
	return pulumi.ToOutputWithContext(ctx, e).(PrivateEndpointServiceConnectionStatusOutput)
}

func (e PrivateEndpointServiceConnectionStatus) ToPrivateEndpointServiceConnectionStatusPtrOutput() PrivateEndpointServiceConnectionStatusPtrOutput {
	return e.ToPrivateEndpointServiceConnectionStatusPtrOutputWithContext(context.Background())
}

func (e PrivateEndpointServiceConnectionStatus) ToPrivateEndpointServiceConnectionStatusPtrOutputWithContext(ctx context.Context) PrivateEndpointServiceConnectionStatusPtrOutput {
	return PrivateEndpointServiceConnectionStatus(e).ToPrivateEndpointServiceConnectionStatusOutputWithContext(ctx).ToPrivateEndpointServiceConnectionStatusPtrOutputWithContext(ctx)
}

func (e PrivateEndpointServiceConnectionStatus) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e PrivateEndpointServiceConnectionStatus) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e PrivateEndpointServiceConnectionStatus) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e PrivateEndpointServiceConnectionStatus) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type PrivateEndpointServiceConnectionStatusOutput struct{ *pulumi.OutputState }

func (PrivateEndpointServiceConnectionStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateEndpointServiceConnectionStatus)(nil)).Elem()
}

func (o PrivateEndpointServiceConnectionStatusOutput) ToPrivateEndpointServiceConnectionStatusOutput() PrivateEndpointServiceConnectionStatusOutput {
	return o
}

func (o PrivateEndpointServiceConnectionStatusOutput) ToPrivateEndpointServiceConnectionStatusOutputWithContext(ctx context.Context) PrivateEndpointServiceConnectionStatusOutput {
	return o
}

func (o PrivateEndpointServiceConnectionStatusOutput) ToPrivateEndpointServiceConnectionStatusPtrOutput() PrivateEndpointServiceConnectionStatusPtrOutput {
	return o.ToPrivateEndpointServiceConnectionStatusPtrOutputWithContext(context.Background())
}

func (o PrivateEndpointServiceConnectionStatusOutput) ToPrivateEndpointServiceConnectionStatusPtrOutputWithContext(ctx context.Context) PrivateEndpointServiceConnectionStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PrivateEndpointServiceConnectionStatus) *PrivateEndpointServiceConnectionStatus {
		return &v
	}).(PrivateEndpointServiceConnectionStatusPtrOutput)
}

func (o PrivateEndpointServiceConnectionStatusOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o PrivateEndpointServiceConnectionStatusOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PrivateEndpointServiceConnectionStatus) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o PrivateEndpointServiceConnectionStatusOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PrivateEndpointServiceConnectionStatusOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PrivateEndpointServiceConnectionStatus) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type PrivateEndpointServiceConnectionStatusPtrOutput struct{ *pulumi.OutputState }

func (PrivateEndpointServiceConnectionStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateEndpointServiceConnectionStatus)(nil)).Elem()
}

func (o PrivateEndpointServiceConnectionStatusPtrOutput) ToPrivateEndpointServiceConnectionStatusPtrOutput() PrivateEndpointServiceConnectionStatusPtrOutput {
	return o
}

func (o PrivateEndpointServiceConnectionStatusPtrOutput) ToPrivateEndpointServiceConnectionStatusPtrOutputWithContext(ctx context.Context) PrivateEndpointServiceConnectionStatusPtrOutput {
	return o
}

func (o PrivateEndpointServiceConnectionStatusPtrOutput) Elem() PrivateEndpointServiceConnectionStatusOutput {
	return o.ApplyT(func(v *PrivateEndpointServiceConnectionStatus) PrivateEndpointServiceConnectionStatus {
		if v != nil {
			return *v
		}
		var ret PrivateEndpointServiceConnectionStatus
		return ret
	}).(PrivateEndpointServiceConnectionStatusOutput)
}

func (o PrivateEndpointServiceConnectionStatusPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PrivateEndpointServiceConnectionStatusPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *PrivateEndpointServiceConnectionStatus) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// PrivateEndpointServiceConnectionStatusInput is an input type that accepts values of the PrivateEndpointServiceConnectionStatus enum
// A concrete instance of `PrivateEndpointServiceConnectionStatusInput` can be one of the following:
//
//	PrivateEndpointServiceConnectionStatusPending
//	PrivateEndpointServiceConnectionStatusApproved
//	PrivateEndpointServiceConnectionStatusRejected
//	PrivateEndpointServiceConnectionStatusDisconnected
//	PrivateEndpointServiceConnectionStatusTimeout
type PrivateEndpointServiceConnectionStatusInput interface {
	pulumi.Input

	ToPrivateEndpointServiceConnectionStatusOutput() PrivateEndpointServiceConnectionStatusOutput
	ToPrivateEndpointServiceConnectionStatusOutputWithContext(context.Context) PrivateEndpointServiceConnectionStatusOutput
}

var privateEndpointServiceConnectionStatusPtrType = reflect.TypeOf((**PrivateEndpointServiceConnectionStatus)(nil)).Elem()

type PrivateEndpointServiceConnectionStatusPtrInput interface {
	pulumi.Input

	ToPrivateEndpointServiceConnectionStatusPtrOutput() PrivateEndpointServiceConnectionStatusPtrOutput
	ToPrivateEndpointServiceConnectionStatusPtrOutputWithContext(context.Context) PrivateEndpointServiceConnectionStatusPtrOutput
}

type privateEndpointServiceConnectionStatusPtr string

func PrivateEndpointServiceConnectionStatusPtr(v string) PrivateEndpointServiceConnectionStatusPtrInput {
	return (*privateEndpointServiceConnectionStatusPtr)(&v)
}

func (*privateEndpointServiceConnectionStatusPtr) ElementType() reflect.Type {
	return privateEndpointServiceConnectionStatusPtrType
}

func (in *privateEndpointServiceConnectionStatusPtr) ToPrivateEndpointServiceConnectionStatusPtrOutput() PrivateEndpointServiceConnectionStatusPtrOutput {
	return pulumi.ToOutput(in).(PrivateEndpointServiceConnectionStatusPtrOutput)
}

func (in *privateEndpointServiceConnectionStatusPtr) ToPrivateEndpointServiceConnectionStatusPtrOutputWithContext(ctx context.Context) PrivateEndpointServiceConnectionStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(PrivateEndpointServiceConnectionStatusPtrOutput)
}

// Protocol over which communication will happen over this endpoint
type Protocol string

const (
	ProtocolTcp  = Protocol("tcp")
	ProtocolUdp  = Protocol("udp")
	ProtocolHttp = Protocol("http")
)

func (Protocol) ElementType() reflect.Type {
	return reflect.TypeOf((*Protocol)(nil)).Elem()
}

func (e Protocol) ToProtocolOutput() ProtocolOutput {
	return pulumi.ToOutput(e).(ProtocolOutput)
}

func (e Protocol) ToProtocolOutputWithContext(ctx context.Context) ProtocolOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ProtocolOutput)
}

func (e Protocol) ToProtocolPtrOutput() ProtocolPtrOutput {
	return e.ToProtocolPtrOutputWithContext(context.Background())
}

func (e Protocol) ToProtocolPtrOutputWithContext(ctx context.Context) ProtocolPtrOutput {
	return Protocol(e).ToProtocolOutputWithContext(ctx).ToProtocolPtrOutputWithContext(ctx)
}

func (e Protocol) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e Protocol) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e Protocol) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e Protocol) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ProtocolOutput struct{ *pulumi.OutputState }

func (ProtocolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Protocol)(nil)).Elem()
}

func (o ProtocolOutput) ToProtocolOutput() ProtocolOutput {
	return o
}

func (o ProtocolOutput) ToProtocolOutputWithContext(ctx context.Context) ProtocolOutput {
	return o
}

func (o ProtocolOutput) ToProtocolPtrOutput() ProtocolPtrOutput {
	return o.ToProtocolPtrOutputWithContext(context.Background())
}

func (o ProtocolOutput) ToProtocolPtrOutputWithContext(ctx context.Context) ProtocolPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Protocol) *Protocol {
		return &v
	}).(ProtocolPtrOutput)
}

func (o ProtocolOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ProtocolOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e Protocol) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ProtocolOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ProtocolOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e Protocol) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ProtocolPtrOutput struct{ *pulumi.OutputState }

func (ProtocolPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Protocol)(nil)).Elem()
}

func (o ProtocolPtrOutput) ToProtocolPtrOutput() ProtocolPtrOutput {
	return o
}

func (o ProtocolPtrOutput) ToProtocolPtrOutputWithContext(ctx context.Context) ProtocolPtrOutput {
	return o
}

func (o ProtocolPtrOutput) Elem() ProtocolOutput {
	return o.ApplyT(func(v *Protocol) Protocol {
		if v != nil {
			return *v
		}
		var ret Protocol
		return ret
	}).(ProtocolOutput)
}

func (o ProtocolPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ProtocolPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *Protocol) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ProtocolInput is an input type that accepts values of the Protocol enum
// A concrete instance of `ProtocolInput` can be one of the following:
//
//	ProtocolTcp
//	ProtocolUdp
//	ProtocolHttp
type ProtocolInput interface {
	pulumi.Input

	ToProtocolOutput() ProtocolOutput
	ToProtocolOutputWithContext(context.Context) ProtocolOutput
}

var protocolPtrType = reflect.TypeOf((**Protocol)(nil)).Elem()

type ProtocolPtrInput interface {
	pulumi.Input

	ToProtocolPtrOutput() ProtocolPtrOutput
	ToProtocolPtrOutputWithContext(context.Context) ProtocolPtrOutput
}

type protocolPtr string

func ProtocolPtr(v string) ProtocolPtrInput {
	return (*protocolPtr)(&v)
}

func (*protocolPtr) ElementType() reflect.Type {
	return protocolPtrType
}

func (in *protocolPtr) ToProtocolPtrOutput() ProtocolPtrOutput {
	return pulumi.ToOutput(in).(ProtocolPtrOutput)
}

func (in *protocolPtr) ToProtocolPtrOutputWithContext(ctx context.Context) ProtocolPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ProtocolPtrOutput)
}

// Whether requests from Public Network are allowed.
type PublicNetworkAccess string

const (
	PublicNetworkAccessEnabled  = PublicNetworkAccess("Enabled")
	PublicNetworkAccessDisabled = PublicNetworkAccess("Disabled")
)

func (PublicNetworkAccess) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicNetworkAccess)(nil)).Elem()
}

func (e PublicNetworkAccess) ToPublicNetworkAccessOutput() PublicNetworkAccessOutput {
	return pulumi.ToOutput(e).(PublicNetworkAccessOutput)
}

func (e PublicNetworkAccess) ToPublicNetworkAccessOutputWithContext(ctx context.Context) PublicNetworkAccessOutput {
	return pulumi.ToOutputWithContext(ctx, e).(PublicNetworkAccessOutput)
}

func (e PublicNetworkAccess) ToPublicNetworkAccessPtrOutput() PublicNetworkAccessPtrOutput {
	return e.ToPublicNetworkAccessPtrOutputWithContext(context.Background())
}

func (e PublicNetworkAccess) ToPublicNetworkAccessPtrOutputWithContext(ctx context.Context) PublicNetworkAccessPtrOutput {
	return PublicNetworkAccess(e).ToPublicNetworkAccessOutputWithContext(ctx).ToPublicNetworkAccessPtrOutputWithContext(ctx)
}

func (e PublicNetworkAccess) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e PublicNetworkAccess) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e PublicNetworkAccess) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e PublicNetworkAccess) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type PublicNetworkAccessOutput struct{ *pulumi.OutputState }

func (PublicNetworkAccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicNetworkAccess)(nil)).Elem()
}

func (o PublicNetworkAccessOutput) ToPublicNetworkAccessOutput() PublicNetworkAccessOutput {
	return o
}

func (o PublicNetworkAccessOutput) ToPublicNetworkAccessOutputWithContext(ctx context.Context) PublicNetworkAccessOutput {
	return o
}

func (o PublicNetworkAccessOutput) ToPublicNetworkAccessPtrOutput() PublicNetworkAccessPtrOutput {
	return o.ToPublicNetworkAccessPtrOutputWithContext(context.Background())
}

func (o PublicNetworkAccessOutput) ToPublicNetworkAccessPtrOutputWithContext(ctx context.Context) PublicNetworkAccessPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PublicNetworkAccess) *PublicNetworkAccess {
		return &v
	}).(PublicNetworkAccessPtrOutput)
}

func (o PublicNetworkAccessOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o PublicNetworkAccessOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PublicNetworkAccess) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o PublicNetworkAccessOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PublicNetworkAccessOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PublicNetworkAccess) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type PublicNetworkAccessPtrOutput struct{ *pulumi.OutputState }

func (PublicNetworkAccessPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PublicNetworkAccess)(nil)).Elem()
}

func (o PublicNetworkAccessPtrOutput) ToPublicNetworkAccessPtrOutput() PublicNetworkAccessPtrOutput {
	return o
}

func (o PublicNetworkAccessPtrOutput) ToPublicNetworkAccessPtrOutputWithContext(ctx context.Context) PublicNetworkAccessPtrOutput {
	return o
}

func (o PublicNetworkAccessPtrOutput) Elem() PublicNetworkAccessOutput {
	return o.ApplyT(func(v *PublicNetworkAccess) PublicNetworkAccess {
		if v != nil {
			return *v
		}
		var ret PublicNetworkAccess
		return ret
	}).(PublicNetworkAccessOutput)
}

func (o PublicNetworkAccessPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PublicNetworkAccessPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *PublicNetworkAccess) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// PublicNetworkAccessInput is an input type that accepts values of the PublicNetworkAccess enum
// A concrete instance of `PublicNetworkAccessInput` can be one of the following:
//
//	PublicNetworkAccessEnabled
//	PublicNetworkAccessDisabled
type PublicNetworkAccessInput interface {
	pulumi.Input

	ToPublicNetworkAccessOutput() PublicNetworkAccessOutput
	ToPublicNetworkAccessOutputWithContext(context.Context) PublicNetworkAccessOutput
}

var publicNetworkAccessPtrType = reflect.TypeOf((**PublicNetworkAccess)(nil)).Elem()

type PublicNetworkAccessPtrInput interface {
	pulumi.Input

	ToPublicNetworkAccessPtrOutput() PublicNetworkAccessPtrOutput
	ToPublicNetworkAccessPtrOutputWithContext(context.Context) PublicNetworkAccessPtrOutput
}

type publicNetworkAccessPtr string

func PublicNetworkAccessPtr(v string) PublicNetworkAccessPtrInput {
	return (*publicNetworkAccessPtr)(&v)
}

func (*publicNetworkAccessPtr) ElementType() reflect.Type {
	return publicNetworkAccessPtrType
}

func (in *publicNetworkAccessPtr) ToPublicNetworkAccessPtrOutput() PublicNetworkAccessPtrOutput {
	return pulumi.ToOutput(in).(PublicNetworkAccessPtrOutput)
}

func (in *publicNetworkAccessPtr) ToPublicNetworkAccessPtrOutputWithContext(ctx context.Context) PublicNetworkAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(PublicNetworkAccessPtrOutput)
}

// Set to "Enabled" for endpoints that should allow public access when Private Link is enabled.
type PublicNetworkAccessType string

const (
	PublicNetworkAccessTypeEnabled  = PublicNetworkAccessType("Enabled")
	PublicNetworkAccessTypeDisabled = PublicNetworkAccessType("Disabled")
)

func (PublicNetworkAccessType) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicNetworkAccessType)(nil)).Elem()
}

func (e PublicNetworkAccessType) ToPublicNetworkAccessTypeOutput() PublicNetworkAccessTypeOutput {
	return pulumi.ToOutput(e).(PublicNetworkAccessTypeOutput)
}

func (e PublicNetworkAccessType) ToPublicNetworkAccessTypeOutputWithContext(ctx context.Context) PublicNetworkAccessTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(PublicNetworkAccessTypeOutput)
}

func (e PublicNetworkAccessType) ToPublicNetworkAccessTypePtrOutput() PublicNetworkAccessTypePtrOutput {
	return e.ToPublicNetworkAccessTypePtrOutputWithContext(context.Background())
}

func (e PublicNetworkAccessType) ToPublicNetworkAccessTypePtrOutputWithContext(ctx context.Context) PublicNetworkAccessTypePtrOutput {
	return PublicNetworkAccessType(e).ToPublicNetworkAccessTypeOutputWithContext(ctx).ToPublicNetworkAccessTypePtrOutputWithContext(ctx)
}

func (e PublicNetworkAccessType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e PublicNetworkAccessType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e PublicNetworkAccessType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e PublicNetworkAccessType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type PublicNetworkAccessTypeOutput struct{ *pulumi.OutputState }

func (PublicNetworkAccessTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicNetworkAccessType)(nil)).Elem()
}

func (o PublicNetworkAccessTypeOutput) ToPublicNetworkAccessTypeOutput() PublicNetworkAccessTypeOutput {
	return o
}

func (o PublicNetworkAccessTypeOutput) ToPublicNetworkAccessTypeOutputWithContext(ctx context.Context) PublicNetworkAccessTypeOutput {
	return o
}

func (o PublicNetworkAccessTypeOutput) ToPublicNetworkAccessTypePtrOutput() PublicNetworkAccessTypePtrOutput {
	return o.ToPublicNetworkAccessTypePtrOutputWithContext(context.Background())
}

func (o PublicNetworkAccessTypeOutput) ToPublicNetworkAccessTypePtrOutputWithContext(ctx context.Context) PublicNetworkAccessTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PublicNetworkAccessType) *PublicNetworkAccessType {
		return &v
	}).(PublicNetworkAccessTypePtrOutput)
}

func (o PublicNetworkAccessTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o PublicNetworkAccessTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PublicNetworkAccessType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o PublicNetworkAccessTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PublicNetworkAccessTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PublicNetworkAccessType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type PublicNetworkAccessTypePtrOutput struct{ *pulumi.OutputState }

func (PublicNetworkAccessTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PublicNetworkAccessType)(nil)).Elem()
}

func (o PublicNetworkAccessTypePtrOutput) ToPublicNetworkAccessTypePtrOutput() PublicNetworkAccessTypePtrOutput {
	return o
}

func (o PublicNetworkAccessTypePtrOutput) ToPublicNetworkAccessTypePtrOutputWithContext(ctx context.Context) PublicNetworkAccessTypePtrOutput {
	return o
}

func (o PublicNetworkAccessTypePtrOutput) Elem() PublicNetworkAccessTypeOutput {
	return o.ApplyT(func(v *PublicNetworkAccessType) PublicNetworkAccessType {
		if v != nil {
			return *v
		}
		var ret PublicNetworkAccessType
		return ret
	}).(PublicNetworkAccessTypeOutput)
}

func (o PublicNetworkAccessTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PublicNetworkAccessTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *PublicNetworkAccessType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// PublicNetworkAccessTypeInput is an input type that accepts values of the PublicNetworkAccessType enum
// A concrete instance of `PublicNetworkAccessTypeInput` can be one of the following:
//
//	PublicNetworkAccessTypeEnabled
//	PublicNetworkAccessTypeDisabled
type PublicNetworkAccessTypeInput interface {
	pulumi.Input

	ToPublicNetworkAccessTypeOutput() PublicNetworkAccessTypeOutput
	ToPublicNetworkAccessTypeOutputWithContext(context.Context) PublicNetworkAccessTypeOutput
}

var publicNetworkAccessTypePtrType = reflect.TypeOf((**PublicNetworkAccessType)(nil)).Elem()

type PublicNetworkAccessTypePtrInput interface {
	pulumi.Input

	ToPublicNetworkAccessTypePtrOutput() PublicNetworkAccessTypePtrOutput
	ToPublicNetworkAccessTypePtrOutputWithContext(context.Context) PublicNetworkAccessTypePtrOutput
}

type publicNetworkAccessTypePtr string

func PublicNetworkAccessTypePtr(v string) PublicNetworkAccessTypePtrInput {
	return (*publicNetworkAccessTypePtr)(&v)
}

func (*publicNetworkAccessTypePtr) ElementType() reflect.Type {
	return publicNetworkAccessTypePtrType
}

func (in *publicNetworkAccessTypePtr) ToPublicNetworkAccessTypePtrOutput() PublicNetworkAccessTypePtrOutput {
	return pulumi.ToOutput(in).(PublicNetworkAccessTypePtrOutput)
}

func (in *publicNetworkAccessTypePtr) ToPublicNetworkAccessTypePtrOutputWithContext(ctx context.Context) PublicNetworkAccessTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(PublicNetworkAccessTypePtrOutput)
}

// The specific type of random algorithm
type RandomSamplingAlgorithmRule string

const (
	RandomSamplingAlgorithmRuleRandom = RandomSamplingAlgorithmRule("Random")
	RandomSamplingAlgorithmRuleSobol  = RandomSamplingAlgorithmRule("Sobol")
)

func (RandomSamplingAlgorithmRule) ElementType() reflect.Type {
	return reflect.TypeOf((*RandomSamplingAlgorithmRule)(nil)).Elem()
}

func (e RandomSamplingAlgorithmRule) ToRandomSamplingAlgorithmRuleOutput() RandomSamplingAlgorithmRuleOutput {
	return pulumi.ToOutput(e).(RandomSamplingAlgorithmRuleOutput)
}

func (e RandomSamplingAlgorithmRule) ToRandomSamplingAlgorithmRuleOutputWithContext(ctx context.Context) RandomSamplingAlgorithmRuleOutput {
	return pulumi.ToOutputWithContext(ctx, e).(RandomSamplingAlgorithmRuleOutput)
}

func (e RandomSamplingAlgorithmRule) ToRandomSamplingAlgorithmRulePtrOutput() RandomSamplingAlgorithmRulePtrOutput {
	return e.ToRandomSamplingAlgorithmRulePtrOutputWithContext(context.Background())
}

func (e RandomSamplingAlgorithmRule) ToRandomSamplingAlgorithmRulePtrOutputWithContext(ctx context.Context) RandomSamplingAlgorithmRulePtrOutput {
	return RandomSamplingAlgorithmRule(e).ToRandomSamplingAlgorithmRuleOutputWithContext(ctx).ToRandomSamplingAlgorithmRulePtrOutputWithContext(ctx)
}

func (e RandomSamplingAlgorithmRule) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e RandomSamplingAlgorithmRule) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e RandomSamplingAlgorithmRule) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e RandomSamplingAlgorithmRule) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type RandomSamplingAlgorithmRuleOutput struct{ *pulumi.OutputState }

func (RandomSamplingAlgorithmRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RandomSamplingAlgorithmRule)(nil)).Elem()
}

func (o RandomSamplingAlgorithmRuleOutput) ToRandomSamplingAlgorithmRuleOutput() RandomSamplingAlgorithmRuleOutput {
	return o
}

func (o RandomSamplingAlgorithmRuleOutput) ToRandomSamplingAlgorithmRuleOutputWithContext(ctx context.Context) RandomSamplingAlgorithmRuleOutput {
	return o
}

func (o RandomSamplingAlgorithmRuleOutput) ToRandomSamplingAlgorithmRulePtrOutput() RandomSamplingAlgorithmRulePtrOutput {
	return o.ToRandomSamplingAlgorithmRulePtrOutputWithContext(context.Background())
}

func (o RandomSamplingAlgorithmRuleOutput) ToRandomSamplingAlgorithmRulePtrOutputWithContext(ctx context.Context) RandomSamplingAlgorithmRulePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RandomSamplingAlgorithmRule) *RandomSamplingAlgorithmRule {
		return &v
	}).(RandomSamplingAlgorithmRulePtrOutput)
}

func (o RandomSamplingAlgorithmRuleOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o RandomSamplingAlgorithmRuleOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RandomSamplingAlgorithmRule) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o RandomSamplingAlgorithmRuleOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RandomSamplingAlgorithmRuleOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RandomSamplingAlgorithmRule) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type RandomSamplingAlgorithmRulePtrOutput struct{ *pulumi.OutputState }

func (RandomSamplingAlgorithmRulePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RandomSamplingAlgorithmRule)(nil)).Elem()
}

func (o RandomSamplingAlgorithmRulePtrOutput) ToRandomSamplingAlgorithmRulePtrOutput() RandomSamplingAlgorithmRulePtrOutput {
	return o
}

func (o RandomSamplingAlgorithmRulePtrOutput) ToRandomSamplingAlgorithmRulePtrOutputWithContext(ctx context.Context) RandomSamplingAlgorithmRulePtrOutput {
	return o
}

func (o RandomSamplingAlgorithmRulePtrOutput) Elem() RandomSamplingAlgorithmRuleOutput {
	return o.ApplyT(func(v *RandomSamplingAlgorithmRule) RandomSamplingAlgorithmRule {
		if v != nil {
			return *v
		}
		var ret RandomSamplingAlgorithmRule
		return ret
	}).(RandomSamplingAlgorithmRuleOutput)
}

func (o RandomSamplingAlgorithmRulePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RandomSamplingAlgorithmRulePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *RandomSamplingAlgorithmRule) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// RandomSamplingAlgorithmRuleInput is an input type that accepts values of the RandomSamplingAlgorithmRule enum
// A concrete instance of `RandomSamplingAlgorithmRuleInput` can be one of the following:
//
//	RandomSamplingAlgorithmRuleRandom
//	RandomSamplingAlgorithmRuleSobol
type RandomSamplingAlgorithmRuleInput interface {
	pulumi.Input

	ToRandomSamplingAlgorithmRuleOutput() RandomSamplingAlgorithmRuleOutput
	ToRandomSamplingAlgorithmRuleOutputWithContext(context.Context) RandomSamplingAlgorithmRuleOutput
}

var randomSamplingAlgorithmRulePtrType = reflect.TypeOf((**RandomSamplingAlgorithmRule)(nil)).Elem()

type RandomSamplingAlgorithmRulePtrInput interface {
	pulumi.Input

	ToRandomSamplingAlgorithmRulePtrOutput() RandomSamplingAlgorithmRulePtrOutput
	ToRandomSamplingAlgorithmRulePtrOutputWithContext(context.Context) RandomSamplingAlgorithmRulePtrOutput
}

type randomSamplingAlgorithmRulePtr string

func RandomSamplingAlgorithmRulePtr(v string) RandomSamplingAlgorithmRulePtrInput {
	return (*randomSamplingAlgorithmRulePtr)(&v)
}

func (*randomSamplingAlgorithmRulePtr) ElementType() reflect.Type {
	return randomSamplingAlgorithmRulePtrType
}

func (in *randomSamplingAlgorithmRulePtr) ToRandomSamplingAlgorithmRulePtrOutput() RandomSamplingAlgorithmRulePtrOutput {
	return pulumi.ToOutput(in).(RandomSamplingAlgorithmRulePtrOutput)
}

func (in *randomSamplingAlgorithmRulePtr) ToRandomSamplingAlgorithmRulePtrOutputWithContext(ctx context.Context) RandomSamplingAlgorithmRulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(RandomSamplingAlgorithmRulePtrOutput)
}

// [Required] The frequency to trigger schedule.
type RecurrenceFrequency string

const (
	// Minute frequency
	RecurrenceFrequencyMinute = RecurrenceFrequency("Minute")
	// Hour frequency
	RecurrenceFrequencyHour = RecurrenceFrequency("Hour")
	// Day frequency
	RecurrenceFrequencyDay = RecurrenceFrequency("Day")
	// Week frequency
	RecurrenceFrequencyWeek = RecurrenceFrequency("Week")
	// Month frequency
	RecurrenceFrequencyMonth = RecurrenceFrequency("Month")
)

func (RecurrenceFrequency) ElementType() reflect.Type {
	return reflect.TypeOf((*RecurrenceFrequency)(nil)).Elem()
}

func (e RecurrenceFrequency) ToRecurrenceFrequencyOutput() RecurrenceFrequencyOutput {
	return pulumi.ToOutput(e).(RecurrenceFrequencyOutput)
}

func (e RecurrenceFrequency) ToRecurrenceFrequencyOutputWithContext(ctx context.Context) RecurrenceFrequencyOutput {
	return pulumi.ToOutputWithContext(ctx, e).(RecurrenceFrequencyOutput)
}

func (e RecurrenceFrequency) ToRecurrenceFrequencyPtrOutput() RecurrenceFrequencyPtrOutput {
	return e.ToRecurrenceFrequencyPtrOutputWithContext(context.Background())
}

func (e RecurrenceFrequency) ToRecurrenceFrequencyPtrOutputWithContext(ctx context.Context) RecurrenceFrequencyPtrOutput {
	return RecurrenceFrequency(e).ToRecurrenceFrequencyOutputWithContext(ctx).ToRecurrenceFrequencyPtrOutputWithContext(ctx)
}

func (e RecurrenceFrequency) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e RecurrenceFrequency) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e RecurrenceFrequency) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e RecurrenceFrequency) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type RecurrenceFrequencyOutput struct{ *pulumi.OutputState }

func (RecurrenceFrequencyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RecurrenceFrequency)(nil)).Elem()
}

func (o RecurrenceFrequencyOutput) ToRecurrenceFrequencyOutput() RecurrenceFrequencyOutput {
	return o
}

func (o RecurrenceFrequencyOutput) ToRecurrenceFrequencyOutputWithContext(ctx context.Context) RecurrenceFrequencyOutput {
	return o
}

func (o RecurrenceFrequencyOutput) ToRecurrenceFrequencyPtrOutput() RecurrenceFrequencyPtrOutput {
	return o.ToRecurrenceFrequencyPtrOutputWithContext(context.Background())
}

func (o RecurrenceFrequencyOutput) ToRecurrenceFrequencyPtrOutputWithContext(ctx context.Context) RecurrenceFrequencyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RecurrenceFrequency) *RecurrenceFrequency {
		return &v
	}).(RecurrenceFrequencyPtrOutput)
}

func (o RecurrenceFrequencyOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o RecurrenceFrequencyOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RecurrenceFrequency) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o RecurrenceFrequencyOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RecurrenceFrequencyOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RecurrenceFrequency) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type RecurrenceFrequencyPtrOutput struct{ *pulumi.OutputState }

func (RecurrenceFrequencyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RecurrenceFrequency)(nil)).Elem()
}

func (o RecurrenceFrequencyPtrOutput) ToRecurrenceFrequencyPtrOutput() RecurrenceFrequencyPtrOutput {
	return o
}

func (o RecurrenceFrequencyPtrOutput) ToRecurrenceFrequencyPtrOutputWithContext(ctx context.Context) RecurrenceFrequencyPtrOutput {
	return o
}

func (o RecurrenceFrequencyPtrOutput) Elem() RecurrenceFrequencyOutput {
	return o.ApplyT(func(v *RecurrenceFrequency) RecurrenceFrequency {
		if v != nil {
			return *v
		}
		var ret RecurrenceFrequency
		return ret
	}).(RecurrenceFrequencyOutput)
}

func (o RecurrenceFrequencyPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RecurrenceFrequencyPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *RecurrenceFrequency) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// RecurrenceFrequencyInput is an input type that accepts values of the RecurrenceFrequency enum
// A concrete instance of `RecurrenceFrequencyInput` can be one of the following:
//
//	RecurrenceFrequencyMinute
//	RecurrenceFrequencyHour
//	RecurrenceFrequencyDay
//	RecurrenceFrequencyWeek
//	RecurrenceFrequencyMonth
type RecurrenceFrequencyInput interface {
	pulumi.Input

	ToRecurrenceFrequencyOutput() RecurrenceFrequencyOutput
	ToRecurrenceFrequencyOutputWithContext(context.Context) RecurrenceFrequencyOutput
}

var recurrenceFrequencyPtrType = reflect.TypeOf((**RecurrenceFrequency)(nil)).Elem()

type RecurrenceFrequencyPtrInput interface {
	pulumi.Input

	ToRecurrenceFrequencyPtrOutput() RecurrenceFrequencyPtrOutput
	ToRecurrenceFrequencyPtrOutputWithContext(context.Context) RecurrenceFrequencyPtrOutput
}

type recurrenceFrequencyPtr string

func RecurrenceFrequencyPtr(v string) RecurrenceFrequencyPtrInput {
	return (*recurrenceFrequencyPtr)(&v)
}

func (*recurrenceFrequencyPtr) ElementType() reflect.Type {
	return recurrenceFrequencyPtrType
}

func (in *recurrenceFrequencyPtr) ToRecurrenceFrequencyPtrOutput() RecurrenceFrequencyPtrOutput {
	return pulumi.ToOutput(in).(RecurrenceFrequencyPtrOutput)
}

func (in *recurrenceFrequencyPtr) ToRecurrenceFrequencyPtrOutputWithContext(ctx context.Context) RecurrenceFrequencyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(RecurrenceFrequencyPtrOutput)
}

// [Required] Specifies the type of asset reference.
type ReferenceType string

const (
	ReferenceTypeId         = ReferenceType("Id")
	ReferenceTypeDataPath   = ReferenceType("DataPath")
	ReferenceTypeOutputPath = ReferenceType("OutputPath")
)

// Enum for all Regression models supported by AutoML.
type RegressionModels string

const (
	// Elastic net is a popular type of regularized linear regression that combines two popular penalties, specifically the L1 and L2 penalty functions.
	RegressionModelsElasticNet = RegressionModels("ElasticNet")
	// The technique of transiting week learners into a strong learner is called Boosting. The gradient boosting algorithm process works on this theory of execution.
	RegressionModelsGradientBoosting = RegressionModels("GradientBoosting")
	// Decision Trees are a non-parametric supervised learning method used for both classification and regression tasks.
	// The goal is to create a model that predicts the value of a target variable by learning simple decision rules inferred from the data features.
	RegressionModelsDecisionTree = RegressionModels("DecisionTree")
	// K-nearest neighbors (KNN) algorithm uses 'feature similarity' to predict the values of new datapoints
	// which further means that the new data point will be assigned a value based on how closely it matches the points in the training set.
	RegressionModelsKNN = RegressionModels("KNN")
	// Lasso model fit with Least Angle Regression a.k.a. Lars. It is a Linear Model trained with an L1 prior as regularizer.
	RegressionModelsLassoLars = RegressionModels("LassoLars")
	// SGD: Stochastic gradient descent is an optimization algorithm often used in machine learning applications
	// to find the model parameters that correspond to the best fit between predicted and actual outputs.
	// It's an inexact but powerful technique.
	RegressionModelsSGD = RegressionModels("SGD")
	// Random forest is a supervised learning algorithm.
	// The "forest" it builds, is an ensemble of decision trees, usually trained with the “bagging” method.
	// The general idea of the bagging method is that a combination of learning models increases the overall result.
	RegressionModelsRandomForest = RegressionModels("RandomForest")
	// Extreme Trees is an ensemble machine learning algorithm that combines the predictions from many decision trees. It is related to the widely used random forest algorithm.
	RegressionModelsExtremeRandomTrees = RegressionModels("ExtremeRandomTrees")
	// LightGBM is a gradient boosting framework that uses tree based learning algorithms.
	RegressionModelsLightGBM = RegressionModels("LightGBM")
	// XGBoostRegressor: Extreme Gradient Boosting Regressor is a supervised machine learning model using ensemble of base learners.
	RegressionModelsXGBoostRegressor = RegressionModels("XGBoostRegressor")
)

func (RegressionModels) ElementType() reflect.Type {
	return reflect.TypeOf((*RegressionModels)(nil)).Elem()
}

func (e RegressionModels) ToRegressionModelsOutput() RegressionModelsOutput {
	return pulumi.ToOutput(e).(RegressionModelsOutput)
}

func (e RegressionModels) ToRegressionModelsOutputWithContext(ctx context.Context) RegressionModelsOutput {
	return pulumi.ToOutputWithContext(ctx, e).(RegressionModelsOutput)
}

func (e RegressionModels) ToRegressionModelsPtrOutput() RegressionModelsPtrOutput {
	return e.ToRegressionModelsPtrOutputWithContext(context.Background())
}

func (e RegressionModels) ToRegressionModelsPtrOutputWithContext(ctx context.Context) RegressionModelsPtrOutput {
	return RegressionModels(e).ToRegressionModelsOutputWithContext(ctx).ToRegressionModelsPtrOutputWithContext(ctx)
}

func (e RegressionModels) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e RegressionModels) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e RegressionModels) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e RegressionModels) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type RegressionModelsOutput struct{ *pulumi.OutputState }

func (RegressionModelsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RegressionModels)(nil)).Elem()
}

func (o RegressionModelsOutput) ToRegressionModelsOutput() RegressionModelsOutput {
	return o
}

func (o RegressionModelsOutput) ToRegressionModelsOutputWithContext(ctx context.Context) RegressionModelsOutput {
	return o
}

func (o RegressionModelsOutput) ToRegressionModelsPtrOutput() RegressionModelsPtrOutput {
	return o.ToRegressionModelsPtrOutputWithContext(context.Background())
}

func (o RegressionModelsOutput) ToRegressionModelsPtrOutputWithContext(ctx context.Context) RegressionModelsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RegressionModels) *RegressionModels {
		return &v
	}).(RegressionModelsPtrOutput)
}

func (o RegressionModelsOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o RegressionModelsOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RegressionModels) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o RegressionModelsOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RegressionModelsOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RegressionModels) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type RegressionModelsPtrOutput struct{ *pulumi.OutputState }

func (RegressionModelsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RegressionModels)(nil)).Elem()
}

func (o RegressionModelsPtrOutput) ToRegressionModelsPtrOutput() RegressionModelsPtrOutput {
	return o
}

func (o RegressionModelsPtrOutput) ToRegressionModelsPtrOutputWithContext(ctx context.Context) RegressionModelsPtrOutput {
	return o
}

func (o RegressionModelsPtrOutput) Elem() RegressionModelsOutput {
	return o.ApplyT(func(v *RegressionModels) RegressionModels {
		if v != nil {
			return *v
		}
		var ret RegressionModels
		return ret
	}).(RegressionModelsOutput)
}

func (o RegressionModelsPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RegressionModelsPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *RegressionModels) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// RegressionModelsInput is an input type that accepts values of the RegressionModels enum
// A concrete instance of `RegressionModelsInput` can be one of the following:
//
//	RegressionModelsElasticNet
//	RegressionModelsGradientBoosting
//	RegressionModelsDecisionTree
//	RegressionModelsKNN
//	RegressionModelsLassoLars
//	RegressionModelsSGD
//	RegressionModelsRandomForest
//	RegressionModelsExtremeRandomTrees
//	RegressionModelsLightGBM
//	RegressionModelsXGBoostRegressor
type RegressionModelsInput interface {
	pulumi.Input

	ToRegressionModelsOutput() RegressionModelsOutput
	ToRegressionModelsOutputWithContext(context.Context) RegressionModelsOutput
}

var regressionModelsPtrType = reflect.TypeOf((**RegressionModels)(nil)).Elem()

type RegressionModelsPtrInput interface {
	pulumi.Input

	ToRegressionModelsPtrOutput() RegressionModelsPtrOutput
	ToRegressionModelsPtrOutputWithContext(context.Context) RegressionModelsPtrOutput
}

type regressionModelsPtr string

func RegressionModelsPtr(v string) RegressionModelsPtrInput {
	return (*regressionModelsPtr)(&v)
}

func (*regressionModelsPtr) ElementType() reflect.Type {
	return regressionModelsPtrType
}

func (in *regressionModelsPtr) ToRegressionModelsPtrOutput() RegressionModelsPtrOutput {
	return pulumi.ToOutput(in).(RegressionModelsPtrOutput)
}

func (in *regressionModelsPtr) ToRegressionModelsPtrOutputWithContext(ctx context.Context) RegressionModelsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(RegressionModelsPtrOutput)
}

// Primary metric for regression task.
type RegressionPrimaryMetrics string

const (
	// The Spearman's rank coefficient of correlation is a nonparametric measure of rank correlation.
	RegressionPrimaryMetricsSpearmanCorrelation = RegressionPrimaryMetrics("SpearmanCorrelation")
	// The Normalized Root Mean Squared Error (NRMSE) the RMSE facilitates the comparison between models with different scales.
	RegressionPrimaryMetricsNormalizedRootMeanSquaredError = RegressionPrimaryMetrics("NormalizedRootMeanSquaredError")
	// The R2 score is one of the performance evaluation measures for forecasting-based machine learning models.
	RegressionPrimaryMetricsR2Score = RegressionPrimaryMetrics("R2Score")
	// The Normalized Mean Absolute Error (NMAE) is a validation metric to compare the Mean Absolute Error (MAE) of (time) series with different scales.
	RegressionPrimaryMetricsNormalizedMeanAbsoluteError = RegressionPrimaryMetrics("NormalizedMeanAbsoluteError")
)

func (RegressionPrimaryMetrics) ElementType() reflect.Type {
	return reflect.TypeOf((*RegressionPrimaryMetrics)(nil)).Elem()
}

func (e RegressionPrimaryMetrics) ToRegressionPrimaryMetricsOutput() RegressionPrimaryMetricsOutput {
	return pulumi.ToOutput(e).(RegressionPrimaryMetricsOutput)
}

func (e RegressionPrimaryMetrics) ToRegressionPrimaryMetricsOutputWithContext(ctx context.Context) RegressionPrimaryMetricsOutput {
	return pulumi.ToOutputWithContext(ctx, e).(RegressionPrimaryMetricsOutput)
}

func (e RegressionPrimaryMetrics) ToRegressionPrimaryMetricsPtrOutput() RegressionPrimaryMetricsPtrOutput {
	return e.ToRegressionPrimaryMetricsPtrOutputWithContext(context.Background())
}

func (e RegressionPrimaryMetrics) ToRegressionPrimaryMetricsPtrOutputWithContext(ctx context.Context) RegressionPrimaryMetricsPtrOutput {
	return RegressionPrimaryMetrics(e).ToRegressionPrimaryMetricsOutputWithContext(ctx).ToRegressionPrimaryMetricsPtrOutputWithContext(ctx)
}

func (e RegressionPrimaryMetrics) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e RegressionPrimaryMetrics) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e RegressionPrimaryMetrics) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e RegressionPrimaryMetrics) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type RegressionPrimaryMetricsOutput struct{ *pulumi.OutputState }

func (RegressionPrimaryMetricsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RegressionPrimaryMetrics)(nil)).Elem()
}

func (o RegressionPrimaryMetricsOutput) ToRegressionPrimaryMetricsOutput() RegressionPrimaryMetricsOutput {
	return o
}

func (o RegressionPrimaryMetricsOutput) ToRegressionPrimaryMetricsOutputWithContext(ctx context.Context) RegressionPrimaryMetricsOutput {
	return o
}

func (o RegressionPrimaryMetricsOutput) ToRegressionPrimaryMetricsPtrOutput() RegressionPrimaryMetricsPtrOutput {
	return o.ToRegressionPrimaryMetricsPtrOutputWithContext(context.Background())
}

func (o RegressionPrimaryMetricsOutput) ToRegressionPrimaryMetricsPtrOutputWithContext(ctx context.Context) RegressionPrimaryMetricsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RegressionPrimaryMetrics) *RegressionPrimaryMetrics {
		return &v
	}).(RegressionPrimaryMetricsPtrOutput)
}

func (o RegressionPrimaryMetricsOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o RegressionPrimaryMetricsOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RegressionPrimaryMetrics) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o RegressionPrimaryMetricsOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RegressionPrimaryMetricsOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RegressionPrimaryMetrics) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type RegressionPrimaryMetricsPtrOutput struct{ *pulumi.OutputState }

func (RegressionPrimaryMetricsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RegressionPrimaryMetrics)(nil)).Elem()
}

func (o RegressionPrimaryMetricsPtrOutput) ToRegressionPrimaryMetricsPtrOutput() RegressionPrimaryMetricsPtrOutput {
	return o
}

func (o RegressionPrimaryMetricsPtrOutput) ToRegressionPrimaryMetricsPtrOutputWithContext(ctx context.Context) RegressionPrimaryMetricsPtrOutput {
	return o
}

func (o RegressionPrimaryMetricsPtrOutput) Elem() RegressionPrimaryMetricsOutput {
	return o.ApplyT(func(v *RegressionPrimaryMetrics) RegressionPrimaryMetrics {
		if v != nil {
			return *v
		}
		var ret RegressionPrimaryMetrics
		return ret
	}).(RegressionPrimaryMetricsOutput)
}

func (o RegressionPrimaryMetricsPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RegressionPrimaryMetricsPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *RegressionPrimaryMetrics) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// RegressionPrimaryMetricsInput is an input type that accepts values of the RegressionPrimaryMetrics enum
// A concrete instance of `RegressionPrimaryMetricsInput` can be one of the following:
//
//	RegressionPrimaryMetricsSpearmanCorrelation
//	RegressionPrimaryMetricsNormalizedRootMeanSquaredError
//	RegressionPrimaryMetricsR2Score
//	RegressionPrimaryMetricsNormalizedMeanAbsoluteError
type RegressionPrimaryMetricsInput interface {
	pulumi.Input

	ToRegressionPrimaryMetricsOutput() RegressionPrimaryMetricsOutput
	ToRegressionPrimaryMetricsOutputWithContext(context.Context) RegressionPrimaryMetricsOutput
}

var regressionPrimaryMetricsPtrType = reflect.TypeOf((**RegressionPrimaryMetrics)(nil)).Elem()

type RegressionPrimaryMetricsPtrInput interface {
	pulumi.Input

	ToRegressionPrimaryMetricsPtrOutput() RegressionPrimaryMetricsPtrOutput
	ToRegressionPrimaryMetricsPtrOutputWithContext(context.Context) RegressionPrimaryMetricsPtrOutput
}

type regressionPrimaryMetricsPtr string

func RegressionPrimaryMetricsPtr(v string) RegressionPrimaryMetricsPtrInput {
	return (*regressionPrimaryMetricsPtr)(&v)
}

func (*regressionPrimaryMetricsPtr) ElementType() reflect.Type {
	return regressionPrimaryMetricsPtrType
}

func (in *regressionPrimaryMetricsPtr) ToRegressionPrimaryMetricsPtrOutput() RegressionPrimaryMetricsPtrOutput {
	return pulumi.ToOutput(in).(RegressionPrimaryMetricsPtrOutput)
}

func (in *regressionPrimaryMetricsPtr) ToRegressionPrimaryMetricsPtrOutputWithContext(ctx context.Context) RegressionPrimaryMetricsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(RegressionPrimaryMetricsPtrOutput)
}

// State of the public SSH port. Possible values are: Disabled - Indicates that the public ssh port is closed on all nodes of the cluster. Enabled - Indicates that the public ssh port is open on all nodes of the cluster. NotSpecified - Indicates that the public ssh port is closed on all nodes of the cluster if VNet is defined, else is open all public nodes. It can be default only during cluster creation time, after creation it will be either enabled or disabled.
type RemoteLoginPortPublicAccess string

const (
	RemoteLoginPortPublicAccessEnabled      = RemoteLoginPortPublicAccess("Enabled")
	RemoteLoginPortPublicAccessDisabled     = RemoteLoginPortPublicAccess("Disabled")
	RemoteLoginPortPublicAccessNotSpecified = RemoteLoginPortPublicAccess("NotSpecified")
)

func (RemoteLoginPortPublicAccess) ElementType() reflect.Type {
	return reflect.TypeOf((*RemoteLoginPortPublicAccess)(nil)).Elem()
}

func (e RemoteLoginPortPublicAccess) ToRemoteLoginPortPublicAccessOutput() RemoteLoginPortPublicAccessOutput {
	return pulumi.ToOutput(e).(RemoteLoginPortPublicAccessOutput)
}

func (e RemoteLoginPortPublicAccess) ToRemoteLoginPortPublicAccessOutputWithContext(ctx context.Context) RemoteLoginPortPublicAccessOutput {
	return pulumi.ToOutputWithContext(ctx, e).(RemoteLoginPortPublicAccessOutput)
}

func (e RemoteLoginPortPublicAccess) ToRemoteLoginPortPublicAccessPtrOutput() RemoteLoginPortPublicAccessPtrOutput {
	return e.ToRemoteLoginPortPublicAccessPtrOutputWithContext(context.Background())
}

func (e RemoteLoginPortPublicAccess) ToRemoteLoginPortPublicAccessPtrOutputWithContext(ctx context.Context) RemoteLoginPortPublicAccessPtrOutput {
	return RemoteLoginPortPublicAccess(e).ToRemoteLoginPortPublicAccessOutputWithContext(ctx).ToRemoteLoginPortPublicAccessPtrOutputWithContext(ctx)
}

func (e RemoteLoginPortPublicAccess) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e RemoteLoginPortPublicAccess) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e RemoteLoginPortPublicAccess) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e RemoteLoginPortPublicAccess) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type RemoteLoginPortPublicAccessOutput struct{ *pulumi.OutputState }

func (RemoteLoginPortPublicAccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RemoteLoginPortPublicAccess)(nil)).Elem()
}

func (o RemoteLoginPortPublicAccessOutput) ToRemoteLoginPortPublicAccessOutput() RemoteLoginPortPublicAccessOutput {
	return o
}

func (o RemoteLoginPortPublicAccessOutput) ToRemoteLoginPortPublicAccessOutputWithContext(ctx context.Context) RemoteLoginPortPublicAccessOutput {
	return o
}

func (o RemoteLoginPortPublicAccessOutput) ToRemoteLoginPortPublicAccessPtrOutput() RemoteLoginPortPublicAccessPtrOutput {
	return o.ToRemoteLoginPortPublicAccessPtrOutputWithContext(context.Background())
}

func (o RemoteLoginPortPublicAccessOutput) ToRemoteLoginPortPublicAccessPtrOutputWithContext(ctx context.Context) RemoteLoginPortPublicAccessPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RemoteLoginPortPublicAccess) *RemoteLoginPortPublicAccess {
		return &v
	}).(RemoteLoginPortPublicAccessPtrOutput)
}

func (o RemoteLoginPortPublicAccessOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o RemoteLoginPortPublicAccessOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RemoteLoginPortPublicAccess) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o RemoteLoginPortPublicAccessOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RemoteLoginPortPublicAccessOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RemoteLoginPortPublicAccess) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type RemoteLoginPortPublicAccessPtrOutput struct{ *pulumi.OutputState }

func (RemoteLoginPortPublicAccessPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RemoteLoginPortPublicAccess)(nil)).Elem()
}

func (o RemoteLoginPortPublicAccessPtrOutput) ToRemoteLoginPortPublicAccessPtrOutput() RemoteLoginPortPublicAccessPtrOutput {
	return o
}

func (o RemoteLoginPortPublicAccessPtrOutput) ToRemoteLoginPortPublicAccessPtrOutputWithContext(ctx context.Context) RemoteLoginPortPublicAccessPtrOutput {
	return o
}

func (o RemoteLoginPortPublicAccessPtrOutput) Elem() RemoteLoginPortPublicAccessOutput {
	return o.ApplyT(func(v *RemoteLoginPortPublicAccess) RemoteLoginPortPublicAccess {
		if v != nil {
			return *v
		}
		var ret RemoteLoginPortPublicAccess
		return ret
	}).(RemoteLoginPortPublicAccessOutput)
}

func (o RemoteLoginPortPublicAccessPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RemoteLoginPortPublicAccessPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *RemoteLoginPortPublicAccess) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// RemoteLoginPortPublicAccessInput is an input type that accepts values of the RemoteLoginPortPublicAccess enum
// A concrete instance of `RemoteLoginPortPublicAccessInput` can be one of the following:
//
//	RemoteLoginPortPublicAccessEnabled
//	RemoteLoginPortPublicAccessDisabled
//	RemoteLoginPortPublicAccessNotSpecified
type RemoteLoginPortPublicAccessInput interface {
	pulumi.Input

	ToRemoteLoginPortPublicAccessOutput() RemoteLoginPortPublicAccessOutput
	ToRemoteLoginPortPublicAccessOutputWithContext(context.Context) RemoteLoginPortPublicAccessOutput
}

var remoteLoginPortPublicAccessPtrType = reflect.TypeOf((**RemoteLoginPortPublicAccess)(nil)).Elem()

type RemoteLoginPortPublicAccessPtrInput interface {
	pulumi.Input

	ToRemoteLoginPortPublicAccessPtrOutput() RemoteLoginPortPublicAccessPtrOutput
	ToRemoteLoginPortPublicAccessPtrOutputWithContext(context.Context) RemoteLoginPortPublicAccessPtrOutput
}

type remoteLoginPortPublicAccessPtr string

func RemoteLoginPortPublicAccessPtr(v string) RemoteLoginPortPublicAccessPtrInput {
	return (*remoteLoginPortPublicAccessPtr)(&v)
}

func (*remoteLoginPortPublicAccessPtr) ElementType() reflect.Type {
	return remoteLoginPortPublicAccessPtrType
}

func (in *remoteLoginPortPublicAccessPtr) ToRemoteLoginPortPublicAccessPtrOutput() RemoteLoginPortPublicAccessPtrOutput {
	return pulumi.ToOutput(in).(RemoteLoginPortPublicAccessPtrOutput)
}

func (in *remoteLoginPortPublicAccessPtr) ToRemoteLoginPortPublicAccessPtrOutputWithContext(ctx context.Context) RemoteLoginPortPublicAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(RemoteLoginPortPublicAccessPtrOutput)
}

// [Required] The algorithm used for generating hyperparameter values, along with configuration properties
type SamplingAlgorithmType string

const (
	SamplingAlgorithmTypeGrid     = SamplingAlgorithmType("Grid")
	SamplingAlgorithmTypeRandom   = SamplingAlgorithmType("Random")
	SamplingAlgorithmTypeBayesian = SamplingAlgorithmType("Bayesian")
)

func (SamplingAlgorithmType) ElementType() reflect.Type {
	return reflect.TypeOf((*SamplingAlgorithmType)(nil)).Elem()
}

func (e SamplingAlgorithmType) ToSamplingAlgorithmTypeOutput() SamplingAlgorithmTypeOutput {
	return pulumi.ToOutput(e).(SamplingAlgorithmTypeOutput)
}

func (e SamplingAlgorithmType) ToSamplingAlgorithmTypeOutputWithContext(ctx context.Context) SamplingAlgorithmTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(SamplingAlgorithmTypeOutput)
}

func (e SamplingAlgorithmType) ToSamplingAlgorithmTypePtrOutput() SamplingAlgorithmTypePtrOutput {
	return e.ToSamplingAlgorithmTypePtrOutputWithContext(context.Background())
}

func (e SamplingAlgorithmType) ToSamplingAlgorithmTypePtrOutputWithContext(ctx context.Context) SamplingAlgorithmTypePtrOutput {
	return SamplingAlgorithmType(e).ToSamplingAlgorithmTypeOutputWithContext(ctx).ToSamplingAlgorithmTypePtrOutputWithContext(ctx)
}

func (e SamplingAlgorithmType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e SamplingAlgorithmType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e SamplingAlgorithmType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e SamplingAlgorithmType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type SamplingAlgorithmTypeOutput struct{ *pulumi.OutputState }

func (SamplingAlgorithmTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SamplingAlgorithmType)(nil)).Elem()
}

func (o SamplingAlgorithmTypeOutput) ToSamplingAlgorithmTypeOutput() SamplingAlgorithmTypeOutput {
	return o
}

func (o SamplingAlgorithmTypeOutput) ToSamplingAlgorithmTypeOutputWithContext(ctx context.Context) SamplingAlgorithmTypeOutput {
	return o
}

func (o SamplingAlgorithmTypeOutput) ToSamplingAlgorithmTypePtrOutput() SamplingAlgorithmTypePtrOutput {
	return o.ToSamplingAlgorithmTypePtrOutputWithContext(context.Background())
}

func (o SamplingAlgorithmTypeOutput) ToSamplingAlgorithmTypePtrOutputWithContext(ctx context.Context) SamplingAlgorithmTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SamplingAlgorithmType) *SamplingAlgorithmType {
		return &v
	}).(SamplingAlgorithmTypePtrOutput)
}

func (o SamplingAlgorithmTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o SamplingAlgorithmTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SamplingAlgorithmType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o SamplingAlgorithmTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SamplingAlgorithmTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SamplingAlgorithmType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type SamplingAlgorithmTypePtrOutput struct{ *pulumi.OutputState }

func (SamplingAlgorithmTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SamplingAlgorithmType)(nil)).Elem()
}

func (o SamplingAlgorithmTypePtrOutput) ToSamplingAlgorithmTypePtrOutput() SamplingAlgorithmTypePtrOutput {
	return o
}

func (o SamplingAlgorithmTypePtrOutput) ToSamplingAlgorithmTypePtrOutputWithContext(ctx context.Context) SamplingAlgorithmTypePtrOutput {
	return o
}

func (o SamplingAlgorithmTypePtrOutput) Elem() SamplingAlgorithmTypeOutput {
	return o.ApplyT(func(v *SamplingAlgorithmType) SamplingAlgorithmType {
		if v != nil {
			return *v
		}
		var ret SamplingAlgorithmType
		return ret
	}).(SamplingAlgorithmTypeOutput)
}

func (o SamplingAlgorithmTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SamplingAlgorithmTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *SamplingAlgorithmType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// SamplingAlgorithmTypeInput is an input type that accepts values of the SamplingAlgorithmType enum
// A concrete instance of `SamplingAlgorithmTypeInput` can be one of the following:
//
//	SamplingAlgorithmTypeGrid
//	SamplingAlgorithmTypeRandom
//	SamplingAlgorithmTypeBayesian
type SamplingAlgorithmTypeInput interface {
	pulumi.Input

	ToSamplingAlgorithmTypeOutput() SamplingAlgorithmTypeOutput
	ToSamplingAlgorithmTypeOutputWithContext(context.Context) SamplingAlgorithmTypeOutput
}

var samplingAlgorithmTypePtrType = reflect.TypeOf((**SamplingAlgorithmType)(nil)).Elem()

type SamplingAlgorithmTypePtrInput interface {
	pulumi.Input

	ToSamplingAlgorithmTypePtrOutput() SamplingAlgorithmTypePtrOutput
	ToSamplingAlgorithmTypePtrOutputWithContext(context.Context) SamplingAlgorithmTypePtrOutput
}

type samplingAlgorithmTypePtr string

func SamplingAlgorithmTypePtr(v string) SamplingAlgorithmTypePtrInput {
	return (*samplingAlgorithmTypePtr)(&v)
}

func (*samplingAlgorithmTypePtr) ElementType() reflect.Type {
	return samplingAlgorithmTypePtrType
}

func (in *samplingAlgorithmTypePtr) ToSamplingAlgorithmTypePtrOutput() SamplingAlgorithmTypePtrOutput {
	return pulumi.ToOutput(in).(SamplingAlgorithmTypePtrOutput)
}

func (in *samplingAlgorithmTypePtr) ToSamplingAlgorithmTypePtrOutputWithContext(ctx context.Context) SamplingAlgorithmTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(SamplingAlgorithmTypePtrOutput)
}

// [Required] Type of deployment scaling algorithm
type ScaleType string

const (
	ScaleTypeDefault           = ScaleType("Default")
	ScaleTypeTargetUtilization = ScaleType("TargetUtilization")
)

// [Required] Specifies the action type of the schedule
type ScheduleActionType string

const (
	ScheduleActionTypeCreateJob           = ScheduleActionType("CreateJob")
	ScheduleActionTypeInvokeBatchEndpoint = ScheduleActionType("InvokeBatchEndpoint")
)

// The current deployment state of schedule.
type ScheduleProvisioningState string

const (
	ScheduleProvisioningStateCompleted    = ScheduleProvisioningState("Completed")
	ScheduleProvisioningStateProvisioning = ScheduleProvisioningState("Provisioning")
	ScheduleProvisioningStateFailed       = ScheduleProvisioningState("Failed")
)

func (ScheduleProvisioningState) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduleProvisioningState)(nil)).Elem()
}

func (e ScheduleProvisioningState) ToScheduleProvisioningStateOutput() ScheduleProvisioningStateOutput {
	return pulumi.ToOutput(e).(ScheduleProvisioningStateOutput)
}

func (e ScheduleProvisioningState) ToScheduleProvisioningStateOutputWithContext(ctx context.Context) ScheduleProvisioningStateOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ScheduleProvisioningStateOutput)
}

func (e ScheduleProvisioningState) ToScheduleProvisioningStatePtrOutput() ScheduleProvisioningStatePtrOutput {
	return e.ToScheduleProvisioningStatePtrOutputWithContext(context.Background())
}

func (e ScheduleProvisioningState) ToScheduleProvisioningStatePtrOutputWithContext(ctx context.Context) ScheduleProvisioningStatePtrOutput {
	return ScheduleProvisioningState(e).ToScheduleProvisioningStateOutputWithContext(ctx).ToScheduleProvisioningStatePtrOutputWithContext(ctx)
}

func (e ScheduleProvisioningState) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ScheduleProvisioningState) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ScheduleProvisioningState) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ScheduleProvisioningState) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ScheduleProvisioningStateOutput struct{ *pulumi.OutputState }

func (ScheduleProvisioningStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduleProvisioningState)(nil)).Elem()
}

func (o ScheduleProvisioningStateOutput) ToScheduleProvisioningStateOutput() ScheduleProvisioningStateOutput {
	return o
}

func (o ScheduleProvisioningStateOutput) ToScheduleProvisioningStateOutputWithContext(ctx context.Context) ScheduleProvisioningStateOutput {
	return o
}

func (o ScheduleProvisioningStateOutput) ToScheduleProvisioningStatePtrOutput() ScheduleProvisioningStatePtrOutput {
	return o.ToScheduleProvisioningStatePtrOutputWithContext(context.Background())
}

func (o ScheduleProvisioningStateOutput) ToScheduleProvisioningStatePtrOutputWithContext(ctx context.Context) ScheduleProvisioningStatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ScheduleProvisioningState) *ScheduleProvisioningState {
		return &v
	}).(ScheduleProvisioningStatePtrOutput)
}

func (o ScheduleProvisioningStateOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ScheduleProvisioningStateOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ScheduleProvisioningState) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ScheduleProvisioningStateOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ScheduleProvisioningStateOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ScheduleProvisioningState) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ScheduleProvisioningStatePtrOutput struct{ *pulumi.OutputState }

func (ScheduleProvisioningStatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ScheduleProvisioningState)(nil)).Elem()
}

func (o ScheduleProvisioningStatePtrOutput) ToScheduleProvisioningStatePtrOutput() ScheduleProvisioningStatePtrOutput {
	return o
}

func (o ScheduleProvisioningStatePtrOutput) ToScheduleProvisioningStatePtrOutputWithContext(ctx context.Context) ScheduleProvisioningStatePtrOutput {
	return o
}

func (o ScheduleProvisioningStatePtrOutput) Elem() ScheduleProvisioningStateOutput {
	return o.ApplyT(func(v *ScheduleProvisioningState) ScheduleProvisioningState {
		if v != nil {
			return *v
		}
		var ret ScheduleProvisioningState
		return ret
	}).(ScheduleProvisioningStateOutput)
}

func (o ScheduleProvisioningStatePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ScheduleProvisioningStatePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ScheduleProvisioningState) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ScheduleProvisioningStateInput is an input type that accepts values of the ScheduleProvisioningState enum
// A concrete instance of `ScheduleProvisioningStateInput` can be one of the following:
//
//	ScheduleProvisioningStateCompleted
//	ScheduleProvisioningStateProvisioning
//	ScheduleProvisioningStateFailed
type ScheduleProvisioningStateInput interface {
	pulumi.Input

	ToScheduleProvisioningStateOutput() ScheduleProvisioningStateOutput
	ToScheduleProvisioningStateOutputWithContext(context.Context) ScheduleProvisioningStateOutput
}

var scheduleProvisioningStatePtrType = reflect.TypeOf((**ScheduleProvisioningState)(nil)).Elem()

type ScheduleProvisioningStatePtrInput interface {
	pulumi.Input

	ToScheduleProvisioningStatePtrOutput() ScheduleProvisioningStatePtrOutput
	ToScheduleProvisioningStatePtrOutputWithContext(context.Context) ScheduleProvisioningStatePtrOutput
}

type scheduleProvisioningStatePtr string

func ScheduleProvisioningStatePtr(v string) ScheduleProvisioningStatePtrInput {
	return (*scheduleProvisioningStatePtr)(&v)
}

func (*scheduleProvisioningStatePtr) ElementType() reflect.Type {
	return scheduleProvisioningStatePtrType
}

func (in *scheduleProvisioningStatePtr) ToScheduleProvisioningStatePtrOutput() ScheduleProvisioningStatePtrOutput {
	return pulumi.ToOutput(in).(ScheduleProvisioningStatePtrOutput)
}

func (in *scheduleProvisioningStatePtr) ToScheduleProvisioningStatePtrOutputWithContext(ctx context.Context) ScheduleProvisioningStatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ScheduleProvisioningStatePtrOutput)
}

// Is the schedule enabled or disabled?
type ScheduleStatus string

const (
	ScheduleStatusEnabled  = ScheduleStatus("Enabled")
	ScheduleStatusDisabled = ScheduleStatus("Disabled")
)

func (ScheduleStatus) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduleStatus)(nil)).Elem()
}

func (e ScheduleStatus) ToScheduleStatusOutput() ScheduleStatusOutput {
	return pulumi.ToOutput(e).(ScheduleStatusOutput)
}

func (e ScheduleStatus) ToScheduleStatusOutputWithContext(ctx context.Context) ScheduleStatusOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ScheduleStatusOutput)
}

func (e ScheduleStatus) ToScheduleStatusPtrOutput() ScheduleStatusPtrOutput {
	return e.ToScheduleStatusPtrOutputWithContext(context.Background())
}

func (e ScheduleStatus) ToScheduleStatusPtrOutputWithContext(ctx context.Context) ScheduleStatusPtrOutput {
	return ScheduleStatus(e).ToScheduleStatusOutputWithContext(ctx).ToScheduleStatusPtrOutputWithContext(ctx)
}

func (e ScheduleStatus) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ScheduleStatus) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ScheduleStatus) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ScheduleStatus) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ScheduleStatusOutput struct{ *pulumi.OutputState }

func (ScheduleStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduleStatus)(nil)).Elem()
}

func (o ScheduleStatusOutput) ToScheduleStatusOutput() ScheduleStatusOutput {
	return o
}

func (o ScheduleStatusOutput) ToScheduleStatusOutputWithContext(ctx context.Context) ScheduleStatusOutput {
	return o
}

func (o ScheduleStatusOutput) ToScheduleStatusPtrOutput() ScheduleStatusPtrOutput {
	return o.ToScheduleStatusPtrOutputWithContext(context.Background())
}

func (o ScheduleStatusOutput) ToScheduleStatusPtrOutputWithContext(ctx context.Context) ScheduleStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ScheduleStatus) *ScheduleStatus {
		return &v
	}).(ScheduleStatusPtrOutput)
}

func (o ScheduleStatusOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ScheduleStatusOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ScheduleStatus) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ScheduleStatusOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ScheduleStatusOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ScheduleStatus) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ScheduleStatusPtrOutput struct{ *pulumi.OutputState }

func (ScheduleStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ScheduleStatus)(nil)).Elem()
}

func (o ScheduleStatusPtrOutput) ToScheduleStatusPtrOutput() ScheduleStatusPtrOutput {
	return o
}

func (o ScheduleStatusPtrOutput) ToScheduleStatusPtrOutputWithContext(ctx context.Context) ScheduleStatusPtrOutput {
	return o
}

func (o ScheduleStatusPtrOutput) Elem() ScheduleStatusOutput {
	return o.ApplyT(func(v *ScheduleStatus) ScheduleStatus {
		if v != nil {
			return *v
		}
		var ret ScheduleStatus
		return ret
	}).(ScheduleStatusOutput)
}

func (o ScheduleStatusPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ScheduleStatusPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ScheduleStatus) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ScheduleStatusInput is an input type that accepts values of the ScheduleStatus enum
// A concrete instance of `ScheduleStatusInput` can be one of the following:
//
//	ScheduleStatusEnabled
//	ScheduleStatusDisabled
type ScheduleStatusInput interface {
	pulumi.Input

	ToScheduleStatusOutput() ScheduleStatusOutput
	ToScheduleStatusOutputWithContext(context.Context) ScheduleStatusOutput
}

var scheduleStatusPtrType = reflect.TypeOf((**ScheduleStatus)(nil)).Elem()

type ScheduleStatusPtrInput interface {
	pulumi.Input

	ToScheduleStatusPtrOutput() ScheduleStatusPtrOutput
	ToScheduleStatusPtrOutputWithContext(context.Context) ScheduleStatusPtrOutput
}

type scheduleStatusPtr string

func ScheduleStatusPtr(v string) ScheduleStatusPtrInput {
	return (*scheduleStatusPtr)(&v)
}

func (*scheduleStatusPtr) ElementType() reflect.Type {
	return scheduleStatusPtrType
}

func (in *scheduleStatusPtr) ToScheduleStatusPtrOutput() ScheduleStatusPtrOutput {
	return pulumi.ToOutput(in).(ScheduleStatusPtrOutput)
}

func (in *scheduleStatusPtr) ToScheduleStatusPtrOutputWithContext(ctx context.Context) ScheduleStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ScheduleStatusPtrOutput)
}

// [Required] Seasonality mode.
type SeasonalityMode string

const (
	// Seasonality to be determined automatically.
	SeasonalityModeAuto = SeasonalityMode("Auto")
	// Use the custom seasonality value.
	SeasonalityModeCustom = SeasonalityMode("Custom")
)

// [Required] Credential type used to authentication with storage.
type SecretsType string

const (
	SecretsTypeAccountKey       = SecretsType("AccountKey")
	SecretsTypeCertificate      = SecretsType("Certificate")
	SecretsTypeSas              = SecretsType("Sas")
	SecretsTypeServicePrincipal = SecretsType("ServicePrincipal")
)

// Indicates which identity to use to authenticate service data access to customer's storage.
type ServiceDataAccessAuthIdentity string

const (
	// Do not use any identity for service data access.
	ServiceDataAccessAuthIdentityNone = ServiceDataAccessAuthIdentity("None")
	// Use the system assigned managed identity of the Workspace to authenticate service data access.
	ServiceDataAccessAuthIdentityWorkspaceSystemAssignedIdentity = ServiceDataAccessAuthIdentity("WorkspaceSystemAssignedIdentity")
	// Use the user assigned managed identity of the Workspace to authenticate service data access.
	ServiceDataAccessAuthIdentityWorkspaceUserAssignedIdentity = ServiceDataAccessAuthIdentity("WorkspaceUserAssignedIdentity")
)

func (ServiceDataAccessAuthIdentity) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceDataAccessAuthIdentity)(nil)).Elem()
}

func (e ServiceDataAccessAuthIdentity) ToServiceDataAccessAuthIdentityOutput() ServiceDataAccessAuthIdentityOutput {
	return pulumi.ToOutput(e).(ServiceDataAccessAuthIdentityOutput)
}

func (e ServiceDataAccessAuthIdentity) ToServiceDataAccessAuthIdentityOutputWithContext(ctx context.Context) ServiceDataAccessAuthIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ServiceDataAccessAuthIdentityOutput)
}

func (e ServiceDataAccessAuthIdentity) ToServiceDataAccessAuthIdentityPtrOutput() ServiceDataAccessAuthIdentityPtrOutput {
	return e.ToServiceDataAccessAuthIdentityPtrOutputWithContext(context.Background())
}

func (e ServiceDataAccessAuthIdentity) ToServiceDataAccessAuthIdentityPtrOutputWithContext(ctx context.Context) ServiceDataAccessAuthIdentityPtrOutput {
	return ServiceDataAccessAuthIdentity(e).ToServiceDataAccessAuthIdentityOutputWithContext(ctx).ToServiceDataAccessAuthIdentityPtrOutputWithContext(ctx)
}

func (e ServiceDataAccessAuthIdentity) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ServiceDataAccessAuthIdentity) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ServiceDataAccessAuthIdentity) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ServiceDataAccessAuthIdentity) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ServiceDataAccessAuthIdentityOutput struct{ *pulumi.OutputState }

func (ServiceDataAccessAuthIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceDataAccessAuthIdentity)(nil)).Elem()
}

func (o ServiceDataAccessAuthIdentityOutput) ToServiceDataAccessAuthIdentityOutput() ServiceDataAccessAuthIdentityOutput {
	return o
}

func (o ServiceDataAccessAuthIdentityOutput) ToServiceDataAccessAuthIdentityOutputWithContext(ctx context.Context) ServiceDataAccessAuthIdentityOutput {
	return o
}

func (o ServiceDataAccessAuthIdentityOutput) ToServiceDataAccessAuthIdentityPtrOutput() ServiceDataAccessAuthIdentityPtrOutput {
	return o.ToServiceDataAccessAuthIdentityPtrOutputWithContext(context.Background())
}

func (o ServiceDataAccessAuthIdentityOutput) ToServiceDataAccessAuthIdentityPtrOutputWithContext(ctx context.Context) ServiceDataAccessAuthIdentityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServiceDataAccessAuthIdentity) *ServiceDataAccessAuthIdentity {
		return &v
	}).(ServiceDataAccessAuthIdentityPtrOutput)
}

func (o ServiceDataAccessAuthIdentityOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ServiceDataAccessAuthIdentityOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ServiceDataAccessAuthIdentity) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ServiceDataAccessAuthIdentityOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ServiceDataAccessAuthIdentityOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ServiceDataAccessAuthIdentity) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ServiceDataAccessAuthIdentityPtrOutput struct{ *pulumi.OutputState }

func (ServiceDataAccessAuthIdentityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceDataAccessAuthIdentity)(nil)).Elem()
}

func (o ServiceDataAccessAuthIdentityPtrOutput) ToServiceDataAccessAuthIdentityPtrOutput() ServiceDataAccessAuthIdentityPtrOutput {
	return o
}

func (o ServiceDataAccessAuthIdentityPtrOutput) ToServiceDataAccessAuthIdentityPtrOutputWithContext(ctx context.Context) ServiceDataAccessAuthIdentityPtrOutput {
	return o
}

func (o ServiceDataAccessAuthIdentityPtrOutput) Elem() ServiceDataAccessAuthIdentityOutput {
	return o.ApplyT(func(v *ServiceDataAccessAuthIdentity) ServiceDataAccessAuthIdentity {
		if v != nil {
			return *v
		}
		var ret ServiceDataAccessAuthIdentity
		return ret
	}).(ServiceDataAccessAuthIdentityOutput)
}

func (o ServiceDataAccessAuthIdentityPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ServiceDataAccessAuthIdentityPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ServiceDataAccessAuthIdentity) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ServiceDataAccessAuthIdentityInput is an input type that accepts values of the ServiceDataAccessAuthIdentity enum
// A concrete instance of `ServiceDataAccessAuthIdentityInput` can be one of the following:
//
//	ServiceDataAccessAuthIdentityNone
//	ServiceDataAccessAuthIdentityWorkspaceSystemAssignedIdentity
//	ServiceDataAccessAuthIdentityWorkspaceUserAssignedIdentity
type ServiceDataAccessAuthIdentityInput interface {
	pulumi.Input

	ToServiceDataAccessAuthIdentityOutput() ServiceDataAccessAuthIdentityOutput
	ToServiceDataAccessAuthIdentityOutputWithContext(context.Context) ServiceDataAccessAuthIdentityOutput
}

var serviceDataAccessAuthIdentityPtrType = reflect.TypeOf((**ServiceDataAccessAuthIdentity)(nil)).Elem()

type ServiceDataAccessAuthIdentityPtrInput interface {
	pulumi.Input

	ToServiceDataAccessAuthIdentityPtrOutput() ServiceDataAccessAuthIdentityPtrOutput
	ToServiceDataAccessAuthIdentityPtrOutputWithContext(context.Context) ServiceDataAccessAuthIdentityPtrOutput
}

type serviceDataAccessAuthIdentityPtr string

func ServiceDataAccessAuthIdentityPtr(v string) ServiceDataAccessAuthIdentityPtrInput {
	return (*serviceDataAccessAuthIdentityPtr)(&v)
}

func (*serviceDataAccessAuthIdentityPtr) ElementType() reflect.Type {
	return serviceDataAccessAuthIdentityPtrType
}

func (in *serviceDataAccessAuthIdentityPtr) ToServiceDataAccessAuthIdentityPtrOutput() ServiceDataAccessAuthIdentityPtrOutput {
	return pulumi.ToOutput(in).(ServiceDataAccessAuthIdentityPtrOutput)
}

func (in *serviceDataAccessAuthIdentityPtr) ToServiceDataAccessAuthIdentityPtrOutputWithContext(ctx context.Context) ServiceDataAccessAuthIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ServiceDataAccessAuthIdentityPtrOutput)
}

// The parameter defining how if AutoML should handle short time series.
type ShortSeriesHandlingConfiguration string

const (
	// Represents no/null value.
	ShortSeriesHandlingConfigurationNone = ShortSeriesHandlingConfiguration("None")
	// Short series will be padded if there are no long series, otherwise short series will be dropped.
	ShortSeriesHandlingConfigurationAuto = ShortSeriesHandlingConfiguration("Auto")
	// All the short series will be padded.
	ShortSeriesHandlingConfigurationPad = ShortSeriesHandlingConfiguration("Pad")
	// All the short series will be dropped.
	ShortSeriesHandlingConfigurationDrop = ShortSeriesHandlingConfiguration("Drop")
)

func (ShortSeriesHandlingConfiguration) ElementType() reflect.Type {
	return reflect.TypeOf((*ShortSeriesHandlingConfiguration)(nil)).Elem()
}

func (e ShortSeriesHandlingConfiguration) ToShortSeriesHandlingConfigurationOutput() ShortSeriesHandlingConfigurationOutput {
	return pulumi.ToOutput(e).(ShortSeriesHandlingConfigurationOutput)
}

func (e ShortSeriesHandlingConfiguration) ToShortSeriesHandlingConfigurationOutputWithContext(ctx context.Context) ShortSeriesHandlingConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ShortSeriesHandlingConfigurationOutput)
}

func (e ShortSeriesHandlingConfiguration) ToShortSeriesHandlingConfigurationPtrOutput() ShortSeriesHandlingConfigurationPtrOutput {
	return e.ToShortSeriesHandlingConfigurationPtrOutputWithContext(context.Background())
}

func (e ShortSeriesHandlingConfiguration) ToShortSeriesHandlingConfigurationPtrOutputWithContext(ctx context.Context) ShortSeriesHandlingConfigurationPtrOutput {
	return ShortSeriesHandlingConfiguration(e).ToShortSeriesHandlingConfigurationOutputWithContext(ctx).ToShortSeriesHandlingConfigurationPtrOutputWithContext(ctx)
}

func (e ShortSeriesHandlingConfiguration) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ShortSeriesHandlingConfiguration) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ShortSeriesHandlingConfiguration) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ShortSeriesHandlingConfiguration) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ShortSeriesHandlingConfigurationOutput struct{ *pulumi.OutputState }

func (ShortSeriesHandlingConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ShortSeriesHandlingConfiguration)(nil)).Elem()
}

func (o ShortSeriesHandlingConfigurationOutput) ToShortSeriesHandlingConfigurationOutput() ShortSeriesHandlingConfigurationOutput {
	return o
}

func (o ShortSeriesHandlingConfigurationOutput) ToShortSeriesHandlingConfigurationOutputWithContext(ctx context.Context) ShortSeriesHandlingConfigurationOutput {
	return o
}

func (o ShortSeriesHandlingConfigurationOutput) ToShortSeriesHandlingConfigurationPtrOutput() ShortSeriesHandlingConfigurationPtrOutput {
	return o.ToShortSeriesHandlingConfigurationPtrOutputWithContext(context.Background())
}

func (o ShortSeriesHandlingConfigurationOutput) ToShortSeriesHandlingConfigurationPtrOutputWithContext(ctx context.Context) ShortSeriesHandlingConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ShortSeriesHandlingConfiguration) *ShortSeriesHandlingConfiguration {
		return &v
	}).(ShortSeriesHandlingConfigurationPtrOutput)
}

func (o ShortSeriesHandlingConfigurationOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ShortSeriesHandlingConfigurationOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ShortSeriesHandlingConfiguration) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ShortSeriesHandlingConfigurationOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ShortSeriesHandlingConfigurationOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ShortSeriesHandlingConfiguration) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ShortSeriesHandlingConfigurationPtrOutput struct{ *pulumi.OutputState }

func (ShortSeriesHandlingConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ShortSeriesHandlingConfiguration)(nil)).Elem()
}

func (o ShortSeriesHandlingConfigurationPtrOutput) ToShortSeriesHandlingConfigurationPtrOutput() ShortSeriesHandlingConfigurationPtrOutput {
	return o
}

func (o ShortSeriesHandlingConfigurationPtrOutput) ToShortSeriesHandlingConfigurationPtrOutputWithContext(ctx context.Context) ShortSeriesHandlingConfigurationPtrOutput {
	return o
}

func (o ShortSeriesHandlingConfigurationPtrOutput) Elem() ShortSeriesHandlingConfigurationOutput {
	return o.ApplyT(func(v *ShortSeriesHandlingConfiguration) ShortSeriesHandlingConfiguration {
		if v != nil {
			return *v
		}
		var ret ShortSeriesHandlingConfiguration
		return ret
	}).(ShortSeriesHandlingConfigurationOutput)
}

func (o ShortSeriesHandlingConfigurationPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ShortSeriesHandlingConfigurationPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ShortSeriesHandlingConfiguration) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ShortSeriesHandlingConfigurationInput is an input type that accepts values of the ShortSeriesHandlingConfiguration enum
// A concrete instance of `ShortSeriesHandlingConfigurationInput` can be one of the following:
//
//	ShortSeriesHandlingConfigurationNone
//	ShortSeriesHandlingConfigurationAuto
//	ShortSeriesHandlingConfigurationPad
//	ShortSeriesHandlingConfigurationDrop
type ShortSeriesHandlingConfigurationInput interface {
	pulumi.Input

	ToShortSeriesHandlingConfigurationOutput() ShortSeriesHandlingConfigurationOutput
	ToShortSeriesHandlingConfigurationOutputWithContext(context.Context) ShortSeriesHandlingConfigurationOutput
}

var shortSeriesHandlingConfigurationPtrType = reflect.TypeOf((**ShortSeriesHandlingConfiguration)(nil)).Elem()

type ShortSeriesHandlingConfigurationPtrInput interface {
	pulumi.Input

	ToShortSeriesHandlingConfigurationPtrOutput() ShortSeriesHandlingConfigurationPtrOutput
	ToShortSeriesHandlingConfigurationPtrOutputWithContext(context.Context) ShortSeriesHandlingConfigurationPtrOutput
}

type shortSeriesHandlingConfigurationPtr string

func ShortSeriesHandlingConfigurationPtr(v string) ShortSeriesHandlingConfigurationPtrInput {
	return (*shortSeriesHandlingConfigurationPtr)(&v)
}

func (*shortSeriesHandlingConfigurationPtr) ElementType() reflect.Type {
	return shortSeriesHandlingConfigurationPtrType
}

func (in *shortSeriesHandlingConfigurationPtr) ToShortSeriesHandlingConfigurationPtrOutput() ShortSeriesHandlingConfigurationPtrOutput {
	return pulumi.ToOutput(in).(ShortSeriesHandlingConfigurationPtrOutput)
}

func (in *shortSeriesHandlingConfigurationPtr) ToShortSeriesHandlingConfigurationPtrOutputWithContext(ctx context.Context) ShortSeriesHandlingConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ShortSeriesHandlingConfigurationPtrOutput)
}

// This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.
type SkuTier string

const (
	SkuTierFree     = SkuTier("Free")
	SkuTierBasic    = SkuTier("Basic")
	SkuTierStandard = SkuTier("Standard")
	SkuTierPremium  = SkuTier("Premium")
)

func (SkuTier) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuTier)(nil)).Elem()
}

func (e SkuTier) ToSkuTierOutput() SkuTierOutput {
	return pulumi.ToOutput(e).(SkuTierOutput)
}

func (e SkuTier) ToSkuTierOutputWithContext(ctx context.Context) SkuTierOutput {
	return pulumi.ToOutputWithContext(ctx, e).(SkuTierOutput)
}

func (e SkuTier) ToSkuTierPtrOutput() SkuTierPtrOutput {
	return e.ToSkuTierPtrOutputWithContext(context.Background())
}

func (e SkuTier) ToSkuTierPtrOutputWithContext(ctx context.Context) SkuTierPtrOutput {
	return SkuTier(e).ToSkuTierOutputWithContext(ctx).ToSkuTierPtrOutputWithContext(ctx)
}

func (e SkuTier) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e SkuTier) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e SkuTier) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e SkuTier) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type SkuTierOutput struct{ *pulumi.OutputState }

func (SkuTierOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuTier)(nil)).Elem()
}

func (o SkuTierOutput) ToSkuTierOutput() SkuTierOutput {
	return o
}

func (o SkuTierOutput) ToSkuTierOutputWithContext(ctx context.Context) SkuTierOutput {
	return o
}

func (o SkuTierOutput) ToSkuTierPtrOutput() SkuTierPtrOutput {
	return o.ToSkuTierPtrOutputWithContext(context.Background())
}

func (o SkuTierOutput) ToSkuTierPtrOutputWithContext(ctx context.Context) SkuTierPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SkuTier) *SkuTier {
		return &v
	}).(SkuTierPtrOutput)
}

func (o SkuTierOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o SkuTierOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SkuTier) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o SkuTierOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SkuTierOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SkuTier) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type SkuTierPtrOutput struct{ *pulumi.OutputState }

func (SkuTierPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SkuTier)(nil)).Elem()
}

func (o SkuTierPtrOutput) ToSkuTierPtrOutput() SkuTierPtrOutput {
	return o
}

func (o SkuTierPtrOutput) ToSkuTierPtrOutputWithContext(ctx context.Context) SkuTierPtrOutput {
	return o
}

func (o SkuTierPtrOutput) Elem() SkuTierOutput {
	return o.ApplyT(func(v *SkuTier) SkuTier {
		if v != nil {
			return *v
		}
		var ret SkuTier
		return ret
	}).(SkuTierOutput)
}

func (o SkuTierPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SkuTierPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *SkuTier) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// SkuTierInput is an input type that accepts values of the SkuTier enum
// A concrete instance of `SkuTierInput` can be one of the following:
//
//	SkuTierFree
//	SkuTierBasic
//	SkuTierStandard
//	SkuTierPremium
type SkuTierInput interface {
	pulumi.Input

	ToSkuTierOutput() SkuTierOutput
	ToSkuTierOutputWithContext(context.Context) SkuTierOutput
}

var skuTierPtrType = reflect.TypeOf((**SkuTier)(nil)).Elem()

type SkuTierPtrInput interface {
	pulumi.Input

	ToSkuTierPtrOutput() SkuTierPtrOutput
	ToSkuTierPtrOutputWithContext(context.Context) SkuTierPtrOutput
}

type skuTierPtr string

func SkuTierPtr(v string) SkuTierPtrInput {
	return (*skuTierPtr)(&v)
}

func (*skuTierPtr) ElementType() reflect.Type {
	return skuTierPtrType
}

func (in *skuTierPtr) ToSkuTierPtrOutput() SkuTierPtrOutput {
	return pulumi.ToOutput(in).(SkuTierPtrOutput)
}

func (in *skuTierPtr) ToSkuTierPtrOutputWithContext(ctx context.Context) SkuTierPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(SkuTierPtrOutput)
}

// State of the public SSH port. Possible values are: Disabled - Indicates that the public ssh port is closed on this instance. Enabled - Indicates that the public ssh port is open and accessible according to the VNet/subnet policy if applicable.
type SshPublicAccess string

const (
	SshPublicAccessEnabled  = SshPublicAccess("Enabled")
	SshPublicAccessDisabled = SshPublicAccess("Disabled")
)

func (SshPublicAccess) ElementType() reflect.Type {
	return reflect.TypeOf((*SshPublicAccess)(nil)).Elem()
}

func (e SshPublicAccess) ToSshPublicAccessOutput() SshPublicAccessOutput {
	return pulumi.ToOutput(e).(SshPublicAccessOutput)
}

func (e SshPublicAccess) ToSshPublicAccessOutputWithContext(ctx context.Context) SshPublicAccessOutput {
	return pulumi.ToOutputWithContext(ctx, e).(SshPublicAccessOutput)
}

func (e SshPublicAccess) ToSshPublicAccessPtrOutput() SshPublicAccessPtrOutput {
	return e.ToSshPublicAccessPtrOutputWithContext(context.Background())
}

func (e SshPublicAccess) ToSshPublicAccessPtrOutputWithContext(ctx context.Context) SshPublicAccessPtrOutput {
	return SshPublicAccess(e).ToSshPublicAccessOutputWithContext(ctx).ToSshPublicAccessPtrOutputWithContext(ctx)
}

func (e SshPublicAccess) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e SshPublicAccess) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e SshPublicAccess) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e SshPublicAccess) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type SshPublicAccessOutput struct{ *pulumi.OutputState }

func (SshPublicAccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SshPublicAccess)(nil)).Elem()
}

func (o SshPublicAccessOutput) ToSshPublicAccessOutput() SshPublicAccessOutput {
	return o
}

func (o SshPublicAccessOutput) ToSshPublicAccessOutputWithContext(ctx context.Context) SshPublicAccessOutput {
	return o
}

func (o SshPublicAccessOutput) ToSshPublicAccessPtrOutput() SshPublicAccessPtrOutput {
	return o.ToSshPublicAccessPtrOutputWithContext(context.Background())
}

func (o SshPublicAccessOutput) ToSshPublicAccessPtrOutputWithContext(ctx context.Context) SshPublicAccessPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SshPublicAccess) *SshPublicAccess {
		return &v
	}).(SshPublicAccessPtrOutput)
}

func (o SshPublicAccessOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o SshPublicAccessOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SshPublicAccess) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o SshPublicAccessOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SshPublicAccessOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SshPublicAccess) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type SshPublicAccessPtrOutput struct{ *pulumi.OutputState }

func (SshPublicAccessPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SshPublicAccess)(nil)).Elem()
}

func (o SshPublicAccessPtrOutput) ToSshPublicAccessPtrOutput() SshPublicAccessPtrOutput {
	return o
}

func (o SshPublicAccessPtrOutput) ToSshPublicAccessPtrOutputWithContext(ctx context.Context) SshPublicAccessPtrOutput {
	return o
}

func (o SshPublicAccessPtrOutput) Elem() SshPublicAccessOutput {
	return o.ApplyT(func(v *SshPublicAccess) SshPublicAccess {
		if v != nil {
			return *v
		}
		var ret SshPublicAccess
		return ret
	}).(SshPublicAccessOutput)
}

func (o SshPublicAccessPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SshPublicAccessPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *SshPublicAccess) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// SshPublicAccessInput is an input type that accepts values of the SshPublicAccess enum
// A concrete instance of `SshPublicAccessInput` can be one of the following:
//
//	SshPublicAccessEnabled
//	SshPublicAccessDisabled
type SshPublicAccessInput interface {
	pulumi.Input

	ToSshPublicAccessOutput() SshPublicAccessOutput
	ToSshPublicAccessOutputWithContext(context.Context) SshPublicAccessOutput
}

var sshPublicAccessPtrType = reflect.TypeOf((**SshPublicAccess)(nil)).Elem()

type SshPublicAccessPtrInput interface {
	pulumi.Input

	ToSshPublicAccessPtrOutput() SshPublicAccessPtrOutput
	ToSshPublicAccessPtrOutputWithContext(context.Context) SshPublicAccessPtrOutput
}

type sshPublicAccessPtr string

func SshPublicAccessPtr(v string) SshPublicAccessPtrInput {
	return (*sshPublicAccessPtr)(&v)
}

func (*sshPublicAccessPtr) ElementType() reflect.Type {
	return sshPublicAccessPtrType
}

func (in *sshPublicAccessPtr) ToSshPublicAccessPtrOutput() SshPublicAccessPtrOutput {
	return pulumi.ToOutput(in).(SshPublicAccessPtrOutput)
}

func (in *sshPublicAccessPtr) ToSshPublicAccessPtrOutputWithContext(ctx context.Context) SshPublicAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(SshPublicAccessPtrOutput)
}

// Enable or disable ssl for scoring
type SslConfigStatus string

const (
	SslConfigStatusDisabled = SslConfigStatus("Disabled")
	SslConfigStatusEnabled  = SslConfigStatus("Enabled")
	SslConfigStatusAuto     = SslConfigStatus("Auto")
)

func (SslConfigStatus) ElementType() reflect.Type {
	return reflect.TypeOf((*SslConfigStatus)(nil)).Elem()
}

func (e SslConfigStatus) ToSslConfigStatusOutput() SslConfigStatusOutput {
	return pulumi.ToOutput(e).(SslConfigStatusOutput)
}

func (e SslConfigStatus) ToSslConfigStatusOutputWithContext(ctx context.Context) SslConfigStatusOutput {
	return pulumi.ToOutputWithContext(ctx, e).(SslConfigStatusOutput)
}

func (e SslConfigStatus) ToSslConfigStatusPtrOutput() SslConfigStatusPtrOutput {
	return e.ToSslConfigStatusPtrOutputWithContext(context.Background())
}

func (e SslConfigStatus) ToSslConfigStatusPtrOutputWithContext(ctx context.Context) SslConfigStatusPtrOutput {
	return SslConfigStatus(e).ToSslConfigStatusOutputWithContext(ctx).ToSslConfigStatusPtrOutputWithContext(ctx)
}

func (e SslConfigStatus) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e SslConfigStatus) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e SslConfigStatus) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e SslConfigStatus) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type SslConfigStatusOutput struct{ *pulumi.OutputState }

func (SslConfigStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SslConfigStatus)(nil)).Elem()
}

func (o SslConfigStatusOutput) ToSslConfigStatusOutput() SslConfigStatusOutput {
	return o
}

func (o SslConfigStatusOutput) ToSslConfigStatusOutputWithContext(ctx context.Context) SslConfigStatusOutput {
	return o
}

func (o SslConfigStatusOutput) ToSslConfigStatusPtrOutput() SslConfigStatusPtrOutput {
	return o.ToSslConfigStatusPtrOutputWithContext(context.Background())
}

func (o SslConfigStatusOutput) ToSslConfigStatusPtrOutputWithContext(ctx context.Context) SslConfigStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SslConfigStatus) *SslConfigStatus {
		return &v
	}).(SslConfigStatusPtrOutput)
}

func (o SslConfigStatusOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o SslConfigStatusOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SslConfigStatus) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o SslConfigStatusOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SslConfigStatusOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SslConfigStatus) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type SslConfigStatusPtrOutput struct{ *pulumi.OutputState }

func (SslConfigStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SslConfigStatus)(nil)).Elem()
}

func (o SslConfigStatusPtrOutput) ToSslConfigStatusPtrOutput() SslConfigStatusPtrOutput {
	return o
}

func (o SslConfigStatusPtrOutput) ToSslConfigStatusPtrOutputWithContext(ctx context.Context) SslConfigStatusPtrOutput {
	return o
}

func (o SslConfigStatusPtrOutput) Elem() SslConfigStatusOutput {
	return o.ApplyT(func(v *SslConfigStatus) SslConfigStatus {
		if v != nil {
			return *v
		}
		var ret SslConfigStatus
		return ret
	}).(SslConfigStatusOutput)
}

func (o SslConfigStatusPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SslConfigStatusPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *SslConfigStatus) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// SslConfigStatusInput is an input type that accepts values of the SslConfigStatus enum
// A concrete instance of `SslConfigStatusInput` can be one of the following:
//
//	SslConfigStatusDisabled
//	SslConfigStatusEnabled
//	SslConfigStatusAuto
type SslConfigStatusInput interface {
	pulumi.Input

	ToSslConfigStatusOutput() SslConfigStatusOutput
	ToSslConfigStatusOutputWithContext(context.Context) SslConfigStatusOutput
}

var sslConfigStatusPtrType = reflect.TypeOf((**SslConfigStatus)(nil)).Elem()

type SslConfigStatusPtrInput interface {
	pulumi.Input

	ToSslConfigStatusPtrOutput() SslConfigStatusPtrOutput
	ToSslConfigStatusPtrOutputWithContext(context.Context) SslConfigStatusPtrOutput
}

type sslConfigStatusPtr string

func SslConfigStatusPtr(v string) SslConfigStatusPtrInput {
	return (*sslConfigStatusPtr)(&v)
}

func (*sslConfigStatusPtr) ElementType() reflect.Type {
	return sslConfigStatusPtrType
}

func (in *sslConfigStatusPtr) ToSslConfigStatusPtrOutput() SslConfigStatusPtrOutput {
	return pulumi.ToOutput(in).(SslConfigStatusPtrOutput)
}

func (in *sslConfigStatusPtr) ToSslConfigStatusPtrOutputWithContext(ctx context.Context) SslConfigStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(SslConfigStatusPtrOutput)
}

// The meta-learner is a model trained on the output of the individual heterogeneous models.
type StackMetaLearnerType string

const (
	StackMetaLearnerTypeNone = StackMetaLearnerType("None")
	// Default meta-learners are LogisticRegression for classification tasks.
	StackMetaLearnerTypeLogisticRegression = StackMetaLearnerType("LogisticRegression")
	// Default meta-learners are LogisticRegression for classification task when CV is on.
	StackMetaLearnerTypeLogisticRegressionCV = StackMetaLearnerType("LogisticRegressionCV")
	StackMetaLearnerTypeLightGBMClassifier   = StackMetaLearnerType("LightGBMClassifier")
	// Default meta-learners are LogisticRegression for regression task.
	StackMetaLearnerTypeElasticNet = StackMetaLearnerType("ElasticNet")
	// Default meta-learners are LogisticRegression for regression task when CV is on.
	StackMetaLearnerTypeElasticNetCV      = StackMetaLearnerType("ElasticNetCV")
	StackMetaLearnerTypeLightGBMRegressor = StackMetaLearnerType("LightGBMRegressor")
	StackMetaLearnerTypeLinearRegression  = StackMetaLearnerType("LinearRegression")
)

func (StackMetaLearnerType) ElementType() reflect.Type {
	return reflect.TypeOf((*StackMetaLearnerType)(nil)).Elem()
}

func (e StackMetaLearnerType) ToStackMetaLearnerTypeOutput() StackMetaLearnerTypeOutput {
	return pulumi.ToOutput(e).(StackMetaLearnerTypeOutput)
}

func (e StackMetaLearnerType) ToStackMetaLearnerTypeOutputWithContext(ctx context.Context) StackMetaLearnerTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(StackMetaLearnerTypeOutput)
}

func (e StackMetaLearnerType) ToStackMetaLearnerTypePtrOutput() StackMetaLearnerTypePtrOutput {
	return e.ToStackMetaLearnerTypePtrOutputWithContext(context.Background())
}

func (e StackMetaLearnerType) ToStackMetaLearnerTypePtrOutputWithContext(ctx context.Context) StackMetaLearnerTypePtrOutput {
	return StackMetaLearnerType(e).ToStackMetaLearnerTypeOutputWithContext(ctx).ToStackMetaLearnerTypePtrOutputWithContext(ctx)
}

func (e StackMetaLearnerType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e StackMetaLearnerType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e StackMetaLearnerType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e StackMetaLearnerType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type StackMetaLearnerTypeOutput struct{ *pulumi.OutputState }

func (StackMetaLearnerTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StackMetaLearnerType)(nil)).Elem()
}

func (o StackMetaLearnerTypeOutput) ToStackMetaLearnerTypeOutput() StackMetaLearnerTypeOutput {
	return o
}

func (o StackMetaLearnerTypeOutput) ToStackMetaLearnerTypeOutputWithContext(ctx context.Context) StackMetaLearnerTypeOutput {
	return o
}

func (o StackMetaLearnerTypeOutput) ToStackMetaLearnerTypePtrOutput() StackMetaLearnerTypePtrOutput {
	return o.ToStackMetaLearnerTypePtrOutputWithContext(context.Background())
}

func (o StackMetaLearnerTypeOutput) ToStackMetaLearnerTypePtrOutputWithContext(ctx context.Context) StackMetaLearnerTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v StackMetaLearnerType) *StackMetaLearnerType {
		return &v
	}).(StackMetaLearnerTypePtrOutput)
}

func (o StackMetaLearnerTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o StackMetaLearnerTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e StackMetaLearnerType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o StackMetaLearnerTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o StackMetaLearnerTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e StackMetaLearnerType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type StackMetaLearnerTypePtrOutput struct{ *pulumi.OutputState }

func (StackMetaLearnerTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StackMetaLearnerType)(nil)).Elem()
}

func (o StackMetaLearnerTypePtrOutput) ToStackMetaLearnerTypePtrOutput() StackMetaLearnerTypePtrOutput {
	return o
}

func (o StackMetaLearnerTypePtrOutput) ToStackMetaLearnerTypePtrOutputWithContext(ctx context.Context) StackMetaLearnerTypePtrOutput {
	return o
}

func (o StackMetaLearnerTypePtrOutput) Elem() StackMetaLearnerTypeOutput {
	return o.ApplyT(func(v *StackMetaLearnerType) StackMetaLearnerType {
		if v != nil {
			return *v
		}
		var ret StackMetaLearnerType
		return ret
	}).(StackMetaLearnerTypeOutput)
}

func (o StackMetaLearnerTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o StackMetaLearnerTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *StackMetaLearnerType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// StackMetaLearnerTypeInput is an input type that accepts values of the StackMetaLearnerType enum
// A concrete instance of `StackMetaLearnerTypeInput` can be one of the following:
//
//	StackMetaLearnerTypeNone
//	StackMetaLearnerTypeLogisticRegression
//	StackMetaLearnerTypeLogisticRegressionCV
//	StackMetaLearnerTypeLightGBMClassifier
//	StackMetaLearnerTypeElasticNet
//	StackMetaLearnerTypeElasticNetCV
//	StackMetaLearnerTypeLightGBMRegressor
//	StackMetaLearnerTypeLinearRegression
type StackMetaLearnerTypeInput interface {
	pulumi.Input

	ToStackMetaLearnerTypeOutput() StackMetaLearnerTypeOutput
	ToStackMetaLearnerTypeOutputWithContext(context.Context) StackMetaLearnerTypeOutput
}

var stackMetaLearnerTypePtrType = reflect.TypeOf((**StackMetaLearnerType)(nil)).Elem()

type StackMetaLearnerTypePtrInput interface {
	pulumi.Input

	ToStackMetaLearnerTypePtrOutput() StackMetaLearnerTypePtrOutput
	ToStackMetaLearnerTypePtrOutputWithContext(context.Context) StackMetaLearnerTypePtrOutput
}

type stackMetaLearnerTypePtr string

func StackMetaLearnerTypePtr(v string) StackMetaLearnerTypePtrInput {
	return (*stackMetaLearnerTypePtr)(&v)
}

func (*stackMetaLearnerTypePtr) ElementType() reflect.Type {
	return stackMetaLearnerTypePtrType
}

func (in *stackMetaLearnerTypePtr) ToStackMetaLearnerTypePtrOutput() StackMetaLearnerTypePtrOutput {
	return pulumi.ToOutput(in).(StackMetaLearnerTypePtrOutput)
}

func (in *stackMetaLearnerTypePtr) ToStackMetaLearnerTypePtrOutputWithContext(ctx context.Context) StackMetaLearnerTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(StackMetaLearnerTypePtrOutput)
}

// Type of optimizer.
type StochasticOptimizer string

const (
	// No optimizer selected.
	StochasticOptimizerNone = StochasticOptimizer("None")
	// Stochastic Gradient Descent optimizer.
	StochasticOptimizerSgd = StochasticOptimizer("Sgd")
	// Adam is algorithm the optimizes stochastic objective functions based on adaptive estimates of moments
	StochasticOptimizerAdam = StochasticOptimizer("Adam")
	// AdamW is a variant of the optimizer Adam that has an improved implementation of weight decay.
	StochasticOptimizerAdamw = StochasticOptimizer("Adamw")
)

func (StochasticOptimizer) ElementType() reflect.Type {
	return reflect.TypeOf((*StochasticOptimizer)(nil)).Elem()
}

func (e StochasticOptimizer) ToStochasticOptimizerOutput() StochasticOptimizerOutput {
	return pulumi.ToOutput(e).(StochasticOptimizerOutput)
}

func (e StochasticOptimizer) ToStochasticOptimizerOutputWithContext(ctx context.Context) StochasticOptimizerOutput {
	return pulumi.ToOutputWithContext(ctx, e).(StochasticOptimizerOutput)
}

func (e StochasticOptimizer) ToStochasticOptimizerPtrOutput() StochasticOptimizerPtrOutput {
	return e.ToStochasticOptimizerPtrOutputWithContext(context.Background())
}

func (e StochasticOptimizer) ToStochasticOptimizerPtrOutputWithContext(ctx context.Context) StochasticOptimizerPtrOutput {
	return StochasticOptimizer(e).ToStochasticOptimizerOutputWithContext(ctx).ToStochasticOptimizerPtrOutputWithContext(ctx)
}

func (e StochasticOptimizer) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e StochasticOptimizer) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e StochasticOptimizer) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e StochasticOptimizer) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type StochasticOptimizerOutput struct{ *pulumi.OutputState }

func (StochasticOptimizerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StochasticOptimizer)(nil)).Elem()
}

func (o StochasticOptimizerOutput) ToStochasticOptimizerOutput() StochasticOptimizerOutput {
	return o
}

func (o StochasticOptimizerOutput) ToStochasticOptimizerOutputWithContext(ctx context.Context) StochasticOptimizerOutput {
	return o
}

func (o StochasticOptimizerOutput) ToStochasticOptimizerPtrOutput() StochasticOptimizerPtrOutput {
	return o.ToStochasticOptimizerPtrOutputWithContext(context.Background())
}

func (o StochasticOptimizerOutput) ToStochasticOptimizerPtrOutputWithContext(ctx context.Context) StochasticOptimizerPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v StochasticOptimizer) *StochasticOptimizer {
		return &v
	}).(StochasticOptimizerPtrOutput)
}

func (o StochasticOptimizerOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o StochasticOptimizerOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e StochasticOptimizer) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o StochasticOptimizerOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o StochasticOptimizerOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e StochasticOptimizer) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type StochasticOptimizerPtrOutput struct{ *pulumi.OutputState }

func (StochasticOptimizerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StochasticOptimizer)(nil)).Elem()
}

func (o StochasticOptimizerPtrOutput) ToStochasticOptimizerPtrOutput() StochasticOptimizerPtrOutput {
	return o
}

func (o StochasticOptimizerPtrOutput) ToStochasticOptimizerPtrOutputWithContext(ctx context.Context) StochasticOptimizerPtrOutput {
	return o
}

func (o StochasticOptimizerPtrOutput) Elem() StochasticOptimizerOutput {
	return o.ApplyT(func(v *StochasticOptimizer) StochasticOptimizer {
		if v != nil {
			return *v
		}
		var ret StochasticOptimizer
		return ret
	}).(StochasticOptimizerOutput)
}

func (o StochasticOptimizerPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o StochasticOptimizerPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *StochasticOptimizer) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// StochasticOptimizerInput is an input type that accepts values of the StochasticOptimizer enum
// A concrete instance of `StochasticOptimizerInput` can be one of the following:
//
//	StochasticOptimizerNone
//	StochasticOptimizerSgd
//	StochasticOptimizerAdam
//	StochasticOptimizerAdamw
type StochasticOptimizerInput interface {
	pulumi.Input

	ToStochasticOptimizerOutput() StochasticOptimizerOutput
	ToStochasticOptimizerOutputWithContext(context.Context) StochasticOptimizerOutput
}

var stochasticOptimizerPtrType = reflect.TypeOf((**StochasticOptimizer)(nil)).Elem()

type StochasticOptimizerPtrInput interface {
	pulumi.Input

	ToStochasticOptimizerPtrOutput() StochasticOptimizerPtrOutput
	ToStochasticOptimizerPtrOutputWithContext(context.Context) StochasticOptimizerPtrOutput
}

type stochasticOptimizerPtr string

func StochasticOptimizerPtr(v string) StochasticOptimizerPtrInput {
	return (*stochasticOptimizerPtr)(&v)
}

func (*stochasticOptimizerPtr) ElementType() reflect.Type {
	return stochasticOptimizerPtrType
}

func (in *stochasticOptimizerPtr) ToStochasticOptimizerPtrOutput() StochasticOptimizerPtrOutput {
	return pulumi.ToOutput(in).(StochasticOptimizerPtrOutput)
}

func (in *stochasticOptimizerPtr) ToStochasticOptimizerPtrOutputWithContext(ctx context.Context) StochasticOptimizerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(StochasticOptimizerPtrOutput)
}

// The function to be used to aggregate the time series target column to conform to a user specified frequency.
// If the TargetAggregateFunction is set i.e. not 'None', but the freq parameter is not set, the error is raised. The possible target aggregation functions are: "sum", "max", "min" and "mean".
type TargetAggregationFunction string

const (
	// Represent no value set.
	TargetAggregationFunctionNone = TargetAggregationFunction("None")
	TargetAggregationFunctionSum  = TargetAggregationFunction("Sum")
	TargetAggregationFunctionMax  = TargetAggregationFunction("Max")
	TargetAggregationFunctionMin  = TargetAggregationFunction("Min")
	TargetAggregationFunctionMean = TargetAggregationFunction("Mean")
)

func (TargetAggregationFunction) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetAggregationFunction)(nil)).Elem()
}

func (e TargetAggregationFunction) ToTargetAggregationFunctionOutput() TargetAggregationFunctionOutput {
	return pulumi.ToOutput(e).(TargetAggregationFunctionOutput)
}

func (e TargetAggregationFunction) ToTargetAggregationFunctionOutputWithContext(ctx context.Context) TargetAggregationFunctionOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TargetAggregationFunctionOutput)
}

func (e TargetAggregationFunction) ToTargetAggregationFunctionPtrOutput() TargetAggregationFunctionPtrOutput {
	return e.ToTargetAggregationFunctionPtrOutputWithContext(context.Background())
}

func (e TargetAggregationFunction) ToTargetAggregationFunctionPtrOutputWithContext(ctx context.Context) TargetAggregationFunctionPtrOutput {
	return TargetAggregationFunction(e).ToTargetAggregationFunctionOutputWithContext(ctx).ToTargetAggregationFunctionPtrOutputWithContext(ctx)
}

func (e TargetAggregationFunction) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TargetAggregationFunction) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TargetAggregationFunction) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TargetAggregationFunction) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TargetAggregationFunctionOutput struct{ *pulumi.OutputState }

func (TargetAggregationFunctionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetAggregationFunction)(nil)).Elem()
}

func (o TargetAggregationFunctionOutput) ToTargetAggregationFunctionOutput() TargetAggregationFunctionOutput {
	return o
}

func (o TargetAggregationFunctionOutput) ToTargetAggregationFunctionOutputWithContext(ctx context.Context) TargetAggregationFunctionOutput {
	return o
}

func (o TargetAggregationFunctionOutput) ToTargetAggregationFunctionPtrOutput() TargetAggregationFunctionPtrOutput {
	return o.ToTargetAggregationFunctionPtrOutputWithContext(context.Background())
}

func (o TargetAggregationFunctionOutput) ToTargetAggregationFunctionPtrOutputWithContext(ctx context.Context) TargetAggregationFunctionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TargetAggregationFunction) *TargetAggregationFunction {
		return &v
	}).(TargetAggregationFunctionPtrOutput)
}

func (o TargetAggregationFunctionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TargetAggregationFunctionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TargetAggregationFunction) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TargetAggregationFunctionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TargetAggregationFunctionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TargetAggregationFunction) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TargetAggregationFunctionPtrOutput struct{ *pulumi.OutputState }

func (TargetAggregationFunctionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TargetAggregationFunction)(nil)).Elem()
}

func (o TargetAggregationFunctionPtrOutput) ToTargetAggregationFunctionPtrOutput() TargetAggregationFunctionPtrOutput {
	return o
}

func (o TargetAggregationFunctionPtrOutput) ToTargetAggregationFunctionPtrOutputWithContext(ctx context.Context) TargetAggregationFunctionPtrOutput {
	return o
}

func (o TargetAggregationFunctionPtrOutput) Elem() TargetAggregationFunctionOutput {
	return o.ApplyT(func(v *TargetAggregationFunction) TargetAggregationFunction {
		if v != nil {
			return *v
		}
		var ret TargetAggregationFunction
		return ret
	}).(TargetAggregationFunctionOutput)
}

func (o TargetAggregationFunctionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TargetAggregationFunctionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TargetAggregationFunction) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TargetAggregationFunctionInput is an input type that accepts values of the TargetAggregationFunction enum
// A concrete instance of `TargetAggregationFunctionInput` can be one of the following:
//
//	TargetAggregationFunctionNone
//	TargetAggregationFunctionSum
//	TargetAggregationFunctionMax
//	TargetAggregationFunctionMin
//	TargetAggregationFunctionMean
type TargetAggregationFunctionInput interface {
	pulumi.Input

	ToTargetAggregationFunctionOutput() TargetAggregationFunctionOutput
	ToTargetAggregationFunctionOutputWithContext(context.Context) TargetAggregationFunctionOutput
}

var targetAggregationFunctionPtrType = reflect.TypeOf((**TargetAggregationFunction)(nil)).Elem()

type TargetAggregationFunctionPtrInput interface {
	pulumi.Input

	ToTargetAggregationFunctionPtrOutput() TargetAggregationFunctionPtrOutput
	ToTargetAggregationFunctionPtrOutputWithContext(context.Context) TargetAggregationFunctionPtrOutput
}

type targetAggregationFunctionPtr string

func TargetAggregationFunctionPtr(v string) TargetAggregationFunctionPtrInput {
	return (*targetAggregationFunctionPtr)(&v)
}

func (*targetAggregationFunctionPtr) ElementType() reflect.Type {
	return targetAggregationFunctionPtrType
}

func (in *targetAggregationFunctionPtr) ToTargetAggregationFunctionPtrOutput() TargetAggregationFunctionPtrOutput {
	return pulumi.ToOutput(in).(TargetAggregationFunctionPtrOutput)
}

func (in *targetAggregationFunctionPtr) ToTargetAggregationFunctionPtrOutputWithContext(ctx context.Context) TargetAggregationFunctionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TargetAggregationFunctionPtrOutput)
}

// [Required] Set target lags mode - Auto/Custom
type TargetLagsMode string

const (
	// Target lags to be determined automatically.
	TargetLagsModeAuto = TargetLagsMode("Auto")
	// Use the custom target lags.
	TargetLagsModeCustom = TargetLagsMode("Custom")
)

// [Required] TargetRollingWindowSiz detection mode.
type TargetRollingWindowSizeMode string

const (
	// Determine rolling windows size automatically.
	TargetRollingWindowSizeModeAuto = TargetRollingWindowSizeMode("Auto")
	// Use the specified rolling window size.
	TargetRollingWindowSizeModeCustom = TargetRollingWindowSizeMode("Custom")
)

// [Required] Task type for AutoMLJob.
type TaskType string

const (
	// Classification in machine learning and statistics is a supervised learning approach in which
	// the computer program learns from the data given to it and make new observations or classifications.
	TaskTypeClassification = TaskType("Classification")
	// Regression means to predict the value using the input data. Regression models are used to predict a continuous value.
	TaskTypeRegression = TaskType("Regression")
	// Forecasting is a special kind of regression task that deals with time-series data and creates forecasting model
	// that can be used to predict the near future values based on the inputs.
	TaskTypeForecasting = TaskType("Forecasting")
	// Image Classification. Multi-class image classification is used when an image is classified with only a single label
	// from a set of classes - e.g. each image is classified as either an image of a 'cat' or a 'dog' or a 'duck'.
	TaskTypeImageClassification = TaskType("ImageClassification")
	// Image Classification Multilabel. Multi-label image classification is used when an image could have one or more labels
	// from a set of labels - e.g. an image could be labeled with both 'cat' and 'dog'.
	TaskTypeImageClassificationMultilabel = TaskType("ImageClassificationMultilabel")
	// Image Object Detection. Object detection is used to identify objects in an image and locate each object with a
	// bounding box e.g. locate all dogs and cats in an image and draw a bounding box around each.
	TaskTypeImageObjectDetection = TaskType("ImageObjectDetection")
	// Image Instance Segmentation. Instance segmentation is used to identify objects in an image at the pixel level,
	// drawing a polygon around each object in the image.
	TaskTypeImageInstanceSegmentation = TaskType("ImageInstanceSegmentation")
	// Text classification (also known as text tagging or text categorization) is the process of sorting texts into categories.
	// Categories are mutually exclusive.
	TaskTypeTextClassification = TaskType("TextClassification")
	// Multilabel classification task assigns each sample to a group (zero or more) of target labels.
	TaskTypeTextClassificationMultilabel = TaskType("TextClassificationMultilabel")
	// Text Named Entity Recognition a.k.a. TextNER.
	// Named Entity Recognition (NER) is the ability to take free-form text and identify the occurrences of entities such as people, locations, organizations, and more.
	TaskTypeTextNER = TaskType("TextNER")
)

// [Required]
type TriggerType string

const (
	TriggerTypeRecurrence = TriggerType("Recurrence")
	TriggerTypeCron       = TriggerType("Cron")
)

func (TriggerType) ElementType() reflect.Type {
	return reflect.TypeOf((*TriggerType)(nil)).Elem()
}

func (e TriggerType) ToTriggerTypeOutput() TriggerTypeOutput {
	return pulumi.ToOutput(e).(TriggerTypeOutput)
}

func (e TriggerType) ToTriggerTypeOutputWithContext(ctx context.Context) TriggerTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TriggerTypeOutput)
}

func (e TriggerType) ToTriggerTypePtrOutput() TriggerTypePtrOutput {
	return e.ToTriggerTypePtrOutputWithContext(context.Background())
}

func (e TriggerType) ToTriggerTypePtrOutputWithContext(ctx context.Context) TriggerTypePtrOutput {
	return TriggerType(e).ToTriggerTypeOutputWithContext(ctx).ToTriggerTypePtrOutputWithContext(ctx)
}

func (e TriggerType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TriggerType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TriggerType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TriggerType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TriggerTypeOutput struct{ *pulumi.OutputState }

func (TriggerTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TriggerType)(nil)).Elem()
}

func (o TriggerTypeOutput) ToTriggerTypeOutput() TriggerTypeOutput {
	return o
}

func (o TriggerTypeOutput) ToTriggerTypeOutputWithContext(ctx context.Context) TriggerTypeOutput {
	return o
}

func (o TriggerTypeOutput) ToTriggerTypePtrOutput() TriggerTypePtrOutput {
	return o.ToTriggerTypePtrOutputWithContext(context.Background())
}

func (o TriggerTypeOutput) ToTriggerTypePtrOutputWithContext(ctx context.Context) TriggerTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TriggerType) *TriggerType {
		return &v
	}).(TriggerTypePtrOutput)
}

func (o TriggerTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TriggerTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TriggerType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TriggerTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TriggerTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TriggerType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TriggerTypePtrOutput struct{ *pulumi.OutputState }

func (TriggerTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TriggerType)(nil)).Elem()
}

func (o TriggerTypePtrOutput) ToTriggerTypePtrOutput() TriggerTypePtrOutput {
	return o
}

func (o TriggerTypePtrOutput) ToTriggerTypePtrOutputWithContext(ctx context.Context) TriggerTypePtrOutput {
	return o
}

func (o TriggerTypePtrOutput) Elem() TriggerTypeOutput {
	return o.ApplyT(func(v *TriggerType) TriggerType {
		if v != nil {
			return *v
		}
		var ret TriggerType
		return ret
	}).(TriggerTypeOutput)
}

func (o TriggerTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TriggerTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TriggerType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TriggerTypeInput is an input type that accepts values of the TriggerType enum
// A concrete instance of `TriggerTypeInput` can be one of the following:
//
//	TriggerTypeRecurrence
//	TriggerTypeCron
type TriggerTypeInput interface {
	pulumi.Input

	ToTriggerTypeOutput() TriggerTypeOutput
	ToTriggerTypeOutputWithContext(context.Context) TriggerTypeOutput
}

var triggerTypePtrType = reflect.TypeOf((**TriggerType)(nil)).Elem()

type TriggerTypePtrInput interface {
	pulumi.Input

	ToTriggerTypePtrOutput() TriggerTypePtrOutput
	ToTriggerTypePtrOutputWithContext(context.Context) TriggerTypePtrOutput
}

type triggerTypePtr string

func TriggerTypePtr(v string) TriggerTypePtrInput {
	return (*triggerTypePtr)(&v)
}

func (*triggerTypePtr) ElementType() reflect.Type {
	return triggerTypePtrType
}

func (in *triggerTypePtr) ToTriggerTypePtrOutput() TriggerTypePtrOutput {
	return pulumi.ToOutput(in).(TriggerTypePtrOutput)
}

func (in *triggerTypePtr) ToTriggerTypePtrOutputWithContext(ctx context.Context) TriggerTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TriggerTypePtrOutput)
}

// Configure STL Decomposition of the time-series target column.
type UseStl string

const (
	// No stl decomposition.
	UseStlNone        = UseStl("None")
	UseStlSeason      = UseStl("Season")
	UseStlSeasonTrend = UseStl("SeasonTrend")
)

func (UseStl) ElementType() reflect.Type {
	return reflect.TypeOf((*UseStl)(nil)).Elem()
}

func (e UseStl) ToUseStlOutput() UseStlOutput {
	return pulumi.ToOutput(e).(UseStlOutput)
}

func (e UseStl) ToUseStlOutputWithContext(ctx context.Context) UseStlOutput {
	return pulumi.ToOutputWithContext(ctx, e).(UseStlOutput)
}

func (e UseStl) ToUseStlPtrOutput() UseStlPtrOutput {
	return e.ToUseStlPtrOutputWithContext(context.Background())
}

func (e UseStl) ToUseStlPtrOutputWithContext(ctx context.Context) UseStlPtrOutput {
	return UseStl(e).ToUseStlOutputWithContext(ctx).ToUseStlPtrOutputWithContext(ctx)
}

func (e UseStl) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e UseStl) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e UseStl) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e UseStl) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type UseStlOutput struct{ *pulumi.OutputState }

func (UseStlOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UseStl)(nil)).Elem()
}

func (o UseStlOutput) ToUseStlOutput() UseStlOutput {
	return o
}

func (o UseStlOutput) ToUseStlOutputWithContext(ctx context.Context) UseStlOutput {
	return o
}

func (o UseStlOutput) ToUseStlPtrOutput() UseStlPtrOutput {
	return o.ToUseStlPtrOutputWithContext(context.Background())
}

func (o UseStlOutput) ToUseStlPtrOutputWithContext(ctx context.Context) UseStlPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v UseStl) *UseStl {
		return &v
	}).(UseStlPtrOutput)
}

func (o UseStlOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o UseStlOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e UseStl) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o UseStlOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o UseStlOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e UseStl) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type UseStlPtrOutput struct{ *pulumi.OutputState }

func (UseStlPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UseStl)(nil)).Elem()
}

func (o UseStlPtrOutput) ToUseStlPtrOutput() UseStlPtrOutput {
	return o
}

func (o UseStlPtrOutput) ToUseStlPtrOutputWithContext(ctx context.Context) UseStlPtrOutput {
	return o
}

func (o UseStlPtrOutput) Elem() UseStlOutput {
	return o.ApplyT(func(v *UseStl) UseStl {
		if v != nil {
			return *v
		}
		var ret UseStl
		return ret
	}).(UseStlOutput)
}

func (o UseStlPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o UseStlPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *UseStl) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// UseStlInput is an input type that accepts values of the UseStl enum
// A concrete instance of `UseStlInput` can be one of the following:
//
//	UseStlNone
//	UseStlSeason
//	UseStlSeasonTrend
type UseStlInput interface {
	pulumi.Input

	ToUseStlOutput() UseStlOutput
	ToUseStlOutputWithContext(context.Context) UseStlOutput
}

var useStlPtrType = reflect.TypeOf((**UseStl)(nil)).Elem()

type UseStlPtrInput interface {
	pulumi.Input

	ToUseStlPtrOutput() UseStlPtrOutput
	ToUseStlPtrOutputWithContext(context.Context) UseStlPtrOutput
}

type useStlPtr string

func UseStlPtr(v string) UseStlPtrInput {
	return (*useStlPtr)(&v)
}

func (*useStlPtr) ElementType() reflect.Type {
	return useStlPtrType
}

func (in *useStlPtr) ToUseStlPtrOutput() UseStlPtrOutput {
	return pulumi.ToOutput(in).(UseStlPtrOutput)
}

func (in *useStlPtr) ToUseStlPtrOutputWithContext(ctx context.Context) UseStlPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(UseStlPtrOutput)
}

// Metric computation method to use for validation metrics.
type ValidationMetricType string

const (
	// No metric.
	ValidationMetricTypeNone = ValidationMetricType("None")
	// Coco metric.
	ValidationMetricTypeCoco = ValidationMetricType("Coco")
	// Voc metric.
	ValidationMetricTypeVoc = ValidationMetricType("Voc")
	// CocoVoc metric.
	ValidationMetricTypeCocoVoc = ValidationMetricType("CocoVoc")
)

func (ValidationMetricType) ElementType() reflect.Type {
	return reflect.TypeOf((*ValidationMetricType)(nil)).Elem()
}

func (e ValidationMetricType) ToValidationMetricTypeOutput() ValidationMetricTypeOutput {
	return pulumi.ToOutput(e).(ValidationMetricTypeOutput)
}

func (e ValidationMetricType) ToValidationMetricTypeOutputWithContext(ctx context.Context) ValidationMetricTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ValidationMetricTypeOutput)
}

func (e ValidationMetricType) ToValidationMetricTypePtrOutput() ValidationMetricTypePtrOutput {
	return e.ToValidationMetricTypePtrOutputWithContext(context.Background())
}

func (e ValidationMetricType) ToValidationMetricTypePtrOutputWithContext(ctx context.Context) ValidationMetricTypePtrOutput {
	return ValidationMetricType(e).ToValidationMetricTypeOutputWithContext(ctx).ToValidationMetricTypePtrOutputWithContext(ctx)
}

func (e ValidationMetricType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ValidationMetricType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ValidationMetricType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ValidationMetricType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ValidationMetricTypeOutput struct{ *pulumi.OutputState }

func (ValidationMetricTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ValidationMetricType)(nil)).Elem()
}

func (o ValidationMetricTypeOutput) ToValidationMetricTypeOutput() ValidationMetricTypeOutput {
	return o
}

func (o ValidationMetricTypeOutput) ToValidationMetricTypeOutputWithContext(ctx context.Context) ValidationMetricTypeOutput {
	return o
}

func (o ValidationMetricTypeOutput) ToValidationMetricTypePtrOutput() ValidationMetricTypePtrOutput {
	return o.ToValidationMetricTypePtrOutputWithContext(context.Background())
}

func (o ValidationMetricTypeOutput) ToValidationMetricTypePtrOutputWithContext(ctx context.Context) ValidationMetricTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ValidationMetricType) *ValidationMetricType {
		return &v
	}).(ValidationMetricTypePtrOutput)
}

func (o ValidationMetricTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ValidationMetricTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ValidationMetricType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ValidationMetricTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ValidationMetricTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ValidationMetricType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ValidationMetricTypePtrOutput struct{ *pulumi.OutputState }

func (ValidationMetricTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ValidationMetricType)(nil)).Elem()
}

func (o ValidationMetricTypePtrOutput) ToValidationMetricTypePtrOutput() ValidationMetricTypePtrOutput {
	return o
}

func (o ValidationMetricTypePtrOutput) ToValidationMetricTypePtrOutputWithContext(ctx context.Context) ValidationMetricTypePtrOutput {
	return o
}

func (o ValidationMetricTypePtrOutput) Elem() ValidationMetricTypeOutput {
	return o.ApplyT(func(v *ValidationMetricType) ValidationMetricType {
		if v != nil {
			return *v
		}
		var ret ValidationMetricType
		return ret
	}).(ValidationMetricTypeOutput)
}

func (o ValidationMetricTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ValidationMetricTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ValidationMetricType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ValidationMetricTypeInput is an input type that accepts values of the ValidationMetricType enum
// A concrete instance of `ValidationMetricTypeInput` can be one of the following:
//
//	ValidationMetricTypeNone
//	ValidationMetricTypeCoco
//	ValidationMetricTypeVoc
//	ValidationMetricTypeCocoVoc
type ValidationMetricTypeInput interface {
	pulumi.Input

	ToValidationMetricTypeOutput() ValidationMetricTypeOutput
	ToValidationMetricTypeOutputWithContext(context.Context) ValidationMetricTypeOutput
}

var validationMetricTypePtrType = reflect.TypeOf((**ValidationMetricType)(nil)).Elem()

type ValidationMetricTypePtrInput interface {
	pulumi.Input

	ToValidationMetricTypePtrOutput() ValidationMetricTypePtrOutput
	ToValidationMetricTypePtrOutputWithContext(context.Context) ValidationMetricTypePtrOutput
}

type validationMetricTypePtr string

func ValidationMetricTypePtr(v string) ValidationMetricTypePtrInput {
	return (*validationMetricTypePtr)(&v)
}

func (*validationMetricTypePtr) ElementType() reflect.Type {
	return validationMetricTypePtrType
}

func (in *validationMetricTypePtr) ToValidationMetricTypePtrOutput() ValidationMetricTypePtrOutput {
	return pulumi.ToOutput(in).(ValidationMetricTypePtrOutput)
}

func (in *validationMetricTypePtr) ToValidationMetricTypePtrOutputWithContext(ctx context.Context) ValidationMetricTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ValidationMetricTypePtrOutput)
}

// format for the workspace connection value
type ValueFormat string

const (
	ValueFormatJSON = ValueFormat("JSON")
)

func (ValueFormat) ElementType() reflect.Type {
	return reflect.TypeOf((*ValueFormat)(nil)).Elem()
}

func (e ValueFormat) ToValueFormatOutput() ValueFormatOutput {
	return pulumi.ToOutput(e).(ValueFormatOutput)
}

func (e ValueFormat) ToValueFormatOutputWithContext(ctx context.Context) ValueFormatOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ValueFormatOutput)
}

func (e ValueFormat) ToValueFormatPtrOutput() ValueFormatPtrOutput {
	return e.ToValueFormatPtrOutputWithContext(context.Background())
}

func (e ValueFormat) ToValueFormatPtrOutputWithContext(ctx context.Context) ValueFormatPtrOutput {
	return ValueFormat(e).ToValueFormatOutputWithContext(ctx).ToValueFormatPtrOutputWithContext(ctx)
}

func (e ValueFormat) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ValueFormat) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ValueFormat) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ValueFormat) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ValueFormatOutput struct{ *pulumi.OutputState }

func (ValueFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ValueFormat)(nil)).Elem()
}

func (o ValueFormatOutput) ToValueFormatOutput() ValueFormatOutput {
	return o
}

func (o ValueFormatOutput) ToValueFormatOutputWithContext(ctx context.Context) ValueFormatOutput {
	return o
}

func (o ValueFormatOutput) ToValueFormatPtrOutput() ValueFormatPtrOutput {
	return o.ToValueFormatPtrOutputWithContext(context.Background())
}

func (o ValueFormatOutput) ToValueFormatPtrOutputWithContext(ctx context.Context) ValueFormatPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ValueFormat) *ValueFormat {
		return &v
	}).(ValueFormatPtrOutput)
}

func (o ValueFormatOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ValueFormatOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ValueFormat) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ValueFormatOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ValueFormatOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ValueFormat) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ValueFormatPtrOutput struct{ *pulumi.OutputState }

func (ValueFormatPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ValueFormat)(nil)).Elem()
}

func (o ValueFormatPtrOutput) ToValueFormatPtrOutput() ValueFormatPtrOutput {
	return o
}

func (o ValueFormatPtrOutput) ToValueFormatPtrOutputWithContext(ctx context.Context) ValueFormatPtrOutput {
	return o
}

func (o ValueFormatPtrOutput) Elem() ValueFormatOutput {
	return o.ApplyT(func(v *ValueFormat) ValueFormat {
		if v != nil {
			return *v
		}
		var ret ValueFormat
		return ret
	}).(ValueFormatOutput)
}

func (o ValueFormatPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ValueFormatPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ValueFormat) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ValueFormatInput is an input type that accepts values of the ValueFormat enum
// A concrete instance of `ValueFormatInput` can be one of the following:
//
//	ValueFormatJSON
type ValueFormatInput interface {
	pulumi.Input

	ToValueFormatOutput() ValueFormatOutput
	ToValueFormatOutputWithContext(context.Context) ValueFormatOutput
}

var valueFormatPtrType = reflect.TypeOf((**ValueFormat)(nil)).Elem()

type ValueFormatPtrInput interface {
	pulumi.Input

	ToValueFormatPtrOutput() ValueFormatPtrOutput
	ToValueFormatPtrOutputWithContext(context.Context) ValueFormatPtrOutput
}

type valueFormatPtr string

func ValueFormatPtr(v string) ValueFormatPtrInput {
	return (*valueFormatPtr)(&v)
}

func (*valueFormatPtr) ElementType() reflect.Type {
	return valueFormatPtrType
}

func (in *valueFormatPtr) ToValueFormatPtrOutput() ValueFormatPtrOutput {
	return pulumi.ToOutput(in).(ValueFormatPtrOutput)
}

func (in *valueFormatPtr) ToValueFormatPtrOutputWithContext(ctx context.Context) ValueFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ValueFormatPtrOutput)
}

// Virtual Machine priority
type VmPriority string

const (
	VmPriorityDedicated   = VmPriority("Dedicated")
	VmPriorityLowPriority = VmPriority("LowPriority")
)

func (VmPriority) ElementType() reflect.Type {
	return reflect.TypeOf((*VmPriority)(nil)).Elem()
}

func (e VmPriority) ToVmPriorityOutput() VmPriorityOutput {
	return pulumi.ToOutput(e).(VmPriorityOutput)
}

func (e VmPriority) ToVmPriorityOutputWithContext(ctx context.Context) VmPriorityOutput {
	return pulumi.ToOutputWithContext(ctx, e).(VmPriorityOutput)
}

func (e VmPriority) ToVmPriorityPtrOutput() VmPriorityPtrOutput {
	return e.ToVmPriorityPtrOutputWithContext(context.Background())
}

func (e VmPriority) ToVmPriorityPtrOutputWithContext(ctx context.Context) VmPriorityPtrOutput {
	return VmPriority(e).ToVmPriorityOutputWithContext(ctx).ToVmPriorityPtrOutputWithContext(ctx)
}

func (e VmPriority) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e VmPriority) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e VmPriority) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e VmPriority) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type VmPriorityOutput struct{ *pulumi.OutputState }

func (VmPriorityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VmPriority)(nil)).Elem()
}

func (o VmPriorityOutput) ToVmPriorityOutput() VmPriorityOutput {
	return o
}

func (o VmPriorityOutput) ToVmPriorityOutputWithContext(ctx context.Context) VmPriorityOutput {
	return o
}

func (o VmPriorityOutput) ToVmPriorityPtrOutput() VmPriorityPtrOutput {
	return o.ToVmPriorityPtrOutputWithContext(context.Background())
}

func (o VmPriorityOutput) ToVmPriorityPtrOutputWithContext(ctx context.Context) VmPriorityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VmPriority) *VmPriority {
		return &v
	}).(VmPriorityPtrOutput)
}

func (o VmPriorityOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o VmPriorityOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e VmPriority) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o VmPriorityOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o VmPriorityOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e VmPriority) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type VmPriorityPtrOutput struct{ *pulumi.OutputState }

func (VmPriorityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VmPriority)(nil)).Elem()
}

func (o VmPriorityPtrOutput) ToVmPriorityPtrOutput() VmPriorityPtrOutput {
	return o
}

func (o VmPriorityPtrOutput) ToVmPriorityPtrOutputWithContext(ctx context.Context) VmPriorityPtrOutput {
	return o
}

func (o VmPriorityPtrOutput) Elem() VmPriorityOutput {
	return o.ApplyT(func(v *VmPriority) VmPriority {
		if v != nil {
			return *v
		}
		var ret VmPriority
		return ret
	}).(VmPriorityOutput)
}

func (o VmPriorityPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o VmPriorityPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *VmPriority) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// VmPriorityInput is an input type that accepts values of the VmPriority enum
// A concrete instance of `VmPriorityInput` can be one of the following:
//
//	VmPriorityDedicated
//	VmPriorityLowPriority
type VmPriorityInput interface {
	pulumi.Input

	ToVmPriorityOutput() VmPriorityOutput
	ToVmPriorityOutputWithContext(context.Context) VmPriorityOutput
}

var vmPriorityPtrType = reflect.TypeOf((**VmPriority)(nil)).Elem()

type VmPriorityPtrInput interface {
	pulumi.Input

	ToVmPriorityPtrOutput() VmPriorityPtrOutput
	ToVmPriorityPtrOutputWithContext(context.Context) VmPriorityPtrOutput
}

type vmPriorityPtr string

func VmPriorityPtr(v string) VmPriorityPtrInput {
	return (*vmPriorityPtr)(&v)
}

func (*vmPriorityPtr) ElementType() reflect.Type {
	return vmPriorityPtrType
}

func (in *vmPriorityPtr) ToVmPriorityPtrOutput() VmPriorityPtrOutput {
	return pulumi.ToOutput(in).(VmPriorityPtrOutput)
}

func (in *vmPriorityPtr) ToVmPriorityPtrOutputWithContext(ctx context.Context) VmPriorityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(VmPriorityPtrOutput)
}

// Type of Volume Definition. Possible Values: bind,volume,tmpfs,npipe
type VolumeDefinitionType string

const (
	VolumeDefinitionTypeBind   = VolumeDefinitionType("bind")
	VolumeDefinitionTypeVolume = VolumeDefinitionType("volume")
	VolumeDefinitionTypeTmpfs  = VolumeDefinitionType("tmpfs")
	VolumeDefinitionTypeNpipe  = VolumeDefinitionType("npipe")
)

func (VolumeDefinitionType) ElementType() reflect.Type {
	return reflect.TypeOf((*VolumeDefinitionType)(nil)).Elem()
}

func (e VolumeDefinitionType) ToVolumeDefinitionTypeOutput() VolumeDefinitionTypeOutput {
	return pulumi.ToOutput(e).(VolumeDefinitionTypeOutput)
}

func (e VolumeDefinitionType) ToVolumeDefinitionTypeOutputWithContext(ctx context.Context) VolumeDefinitionTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(VolumeDefinitionTypeOutput)
}

func (e VolumeDefinitionType) ToVolumeDefinitionTypePtrOutput() VolumeDefinitionTypePtrOutput {
	return e.ToVolumeDefinitionTypePtrOutputWithContext(context.Background())
}

func (e VolumeDefinitionType) ToVolumeDefinitionTypePtrOutputWithContext(ctx context.Context) VolumeDefinitionTypePtrOutput {
	return VolumeDefinitionType(e).ToVolumeDefinitionTypeOutputWithContext(ctx).ToVolumeDefinitionTypePtrOutputWithContext(ctx)
}

func (e VolumeDefinitionType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e VolumeDefinitionType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e VolumeDefinitionType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e VolumeDefinitionType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type VolumeDefinitionTypeOutput struct{ *pulumi.OutputState }

func (VolumeDefinitionTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VolumeDefinitionType)(nil)).Elem()
}

func (o VolumeDefinitionTypeOutput) ToVolumeDefinitionTypeOutput() VolumeDefinitionTypeOutput {
	return o
}

func (o VolumeDefinitionTypeOutput) ToVolumeDefinitionTypeOutputWithContext(ctx context.Context) VolumeDefinitionTypeOutput {
	return o
}

func (o VolumeDefinitionTypeOutput) ToVolumeDefinitionTypePtrOutput() VolumeDefinitionTypePtrOutput {
	return o.ToVolumeDefinitionTypePtrOutputWithContext(context.Background())
}

func (o VolumeDefinitionTypeOutput) ToVolumeDefinitionTypePtrOutputWithContext(ctx context.Context) VolumeDefinitionTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VolumeDefinitionType) *VolumeDefinitionType {
		return &v
	}).(VolumeDefinitionTypePtrOutput)
}

func (o VolumeDefinitionTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o VolumeDefinitionTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e VolumeDefinitionType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o VolumeDefinitionTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o VolumeDefinitionTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e VolumeDefinitionType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type VolumeDefinitionTypePtrOutput struct{ *pulumi.OutputState }

func (VolumeDefinitionTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VolumeDefinitionType)(nil)).Elem()
}

func (o VolumeDefinitionTypePtrOutput) ToVolumeDefinitionTypePtrOutput() VolumeDefinitionTypePtrOutput {
	return o
}

func (o VolumeDefinitionTypePtrOutput) ToVolumeDefinitionTypePtrOutputWithContext(ctx context.Context) VolumeDefinitionTypePtrOutput {
	return o
}

func (o VolumeDefinitionTypePtrOutput) Elem() VolumeDefinitionTypeOutput {
	return o.ApplyT(func(v *VolumeDefinitionType) VolumeDefinitionType {
		if v != nil {
			return *v
		}
		var ret VolumeDefinitionType
		return ret
	}).(VolumeDefinitionTypeOutput)
}

func (o VolumeDefinitionTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o VolumeDefinitionTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *VolumeDefinitionType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// VolumeDefinitionTypeInput is an input type that accepts values of the VolumeDefinitionType enum
// A concrete instance of `VolumeDefinitionTypeInput` can be one of the following:
//
//	VolumeDefinitionTypeBind
//	VolumeDefinitionTypeVolume
//	VolumeDefinitionTypeTmpfs
//	VolumeDefinitionTypeNpipe
type VolumeDefinitionTypeInput interface {
	pulumi.Input

	ToVolumeDefinitionTypeOutput() VolumeDefinitionTypeOutput
	ToVolumeDefinitionTypeOutputWithContext(context.Context) VolumeDefinitionTypeOutput
}

var volumeDefinitionTypePtrType = reflect.TypeOf((**VolumeDefinitionType)(nil)).Elem()

type VolumeDefinitionTypePtrInput interface {
	pulumi.Input

	ToVolumeDefinitionTypePtrOutput() VolumeDefinitionTypePtrOutput
	ToVolumeDefinitionTypePtrOutputWithContext(context.Context) VolumeDefinitionTypePtrOutput
}

type volumeDefinitionTypePtr string

func VolumeDefinitionTypePtr(v string) VolumeDefinitionTypePtrInput {
	return (*volumeDefinitionTypePtr)(&v)
}

func (*volumeDefinitionTypePtr) ElementType() reflect.Type {
	return volumeDefinitionTypePtrType
}

func (in *volumeDefinitionTypePtr) ToVolumeDefinitionTypePtrOutput() VolumeDefinitionTypePtrOutput {
	return pulumi.ToOutput(in).(VolumeDefinitionTypePtrOutput)
}

func (in *volumeDefinitionTypePtr) ToVolumeDefinitionTypePtrOutputWithContext(ctx context.Context) VolumeDefinitionTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(VolumeDefinitionTypePtrOutput)
}

// Enum of weekday
type WeekDay string

const (
	// Monday weekday
	WeekDayMonday = WeekDay("Monday")
	// Tuesday weekday
	WeekDayTuesday = WeekDay("Tuesday")
	// Wednesday weekday
	WeekDayWednesday = WeekDay("Wednesday")
	// Thursday weekday
	WeekDayThursday = WeekDay("Thursday")
	// Friday weekday
	WeekDayFriday = WeekDay("Friday")
	// Saturday weekday
	WeekDaySaturday = WeekDay("Saturday")
	// Sunday weekday
	WeekDaySunday = WeekDay("Sunday")
)

func (WeekDay) ElementType() reflect.Type {
	return reflect.TypeOf((*WeekDay)(nil)).Elem()
}

func (e WeekDay) ToWeekDayOutput() WeekDayOutput {
	return pulumi.ToOutput(e).(WeekDayOutput)
}

func (e WeekDay) ToWeekDayOutputWithContext(ctx context.Context) WeekDayOutput {
	return pulumi.ToOutputWithContext(ctx, e).(WeekDayOutput)
}

func (e WeekDay) ToWeekDayPtrOutput() WeekDayPtrOutput {
	return e.ToWeekDayPtrOutputWithContext(context.Background())
}

func (e WeekDay) ToWeekDayPtrOutputWithContext(ctx context.Context) WeekDayPtrOutput {
	return WeekDay(e).ToWeekDayOutputWithContext(ctx).ToWeekDayPtrOutputWithContext(ctx)
}

func (e WeekDay) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e WeekDay) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e WeekDay) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e WeekDay) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type WeekDayOutput struct{ *pulumi.OutputState }

func (WeekDayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WeekDay)(nil)).Elem()
}

func (o WeekDayOutput) ToWeekDayOutput() WeekDayOutput {
	return o
}

func (o WeekDayOutput) ToWeekDayOutputWithContext(ctx context.Context) WeekDayOutput {
	return o
}

func (o WeekDayOutput) ToWeekDayPtrOutput() WeekDayPtrOutput {
	return o.ToWeekDayPtrOutputWithContext(context.Background())
}

func (o WeekDayOutput) ToWeekDayPtrOutputWithContext(ctx context.Context) WeekDayPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WeekDay) *WeekDay {
		return &v
	}).(WeekDayPtrOutput)
}

func (o WeekDayOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o WeekDayOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e WeekDay) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o WeekDayOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o WeekDayOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e WeekDay) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type WeekDayPtrOutput struct{ *pulumi.OutputState }

func (WeekDayPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WeekDay)(nil)).Elem()
}

func (o WeekDayPtrOutput) ToWeekDayPtrOutput() WeekDayPtrOutput {
	return o
}

func (o WeekDayPtrOutput) ToWeekDayPtrOutputWithContext(ctx context.Context) WeekDayPtrOutput {
	return o
}

func (o WeekDayPtrOutput) Elem() WeekDayOutput {
	return o.ApplyT(func(v *WeekDay) WeekDay {
		if v != nil {
			return *v
		}
		var ret WeekDay
		return ret
	}).(WeekDayOutput)
}

func (o WeekDayPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o WeekDayPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *WeekDay) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// WeekDayInput is an input type that accepts values of the WeekDay enum
// A concrete instance of `WeekDayInput` can be one of the following:
//
//	WeekDayMonday
//	WeekDayTuesday
//	WeekDayWednesday
//	WeekDayThursday
//	WeekDayFriday
//	WeekDaySaturday
//	WeekDaySunday
type WeekDayInput interface {
	pulumi.Input

	ToWeekDayOutput() WeekDayOutput
	ToWeekDayOutputWithContext(context.Context) WeekDayOutput
}

var weekDayPtrType = reflect.TypeOf((**WeekDay)(nil)).Elem()

type WeekDayPtrInput interface {
	pulumi.Input

	ToWeekDayPtrOutput() WeekDayPtrOutput
	ToWeekDayPtrOutputWithContext(context.Context) WeekDayPtrOutput
}

type weekDayPtr string

func WeekDayPtr(v string) WeekDayPtrInput {
	return (*weekDayPtr)(&v)
}

func (*weekDayPtr) ElementType() reflect.Type {
	return weekDayPtrType
}

func (in *weekDayPtr) ToWeekDayPtrOutput() WeekDayPtrOutput {
	return pulumi.ToOutput(in).(WeekDayPtrOutput)
}

func (in *weekDayPtr) ToWeekDayPtrOutputWithContext(ctx context.Context) WeekDayPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(WeekDayPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(ApplicationSharingPolicyOutput{})
	pulumi.RegisterOutputType(ApplicationSharingPolicyPtrOutput{})
	pulumi.RegisterOutputType(AutoRebuildSettingOutput{})
	pulumi.RegisterOutputType(AutoRebuildSettingPtrOutput{})
	pulumi.RegisterOutputType(BatchLoggingLevelOutput{})
	pulumi.RegisterOutputType(BatchLoggingLevelPtrOutput{})
	pulumi.RegisterOutputType(BatchOutputActionOutput{})
	pulumi.RegisterOutputType(BatchOutputActionPtrOutput{})
	pulumi.RegisterOutputType(BlockedTransformersOutput{})
	pulumi.RegisterOutputType(BlockedTransformersPtrOutput{})
	pulumi.RegisterOutputType(ClassificationModelsOutput{})
	pulumi.RegisterOutputType(ClassificationModelsPtrOutput{})
	pulumi.RegisterOutputType(ClassificationMultilabelPrimaryMetricsOutput{})
	pulumi.RegisterOutputType(ClassificationMultilabelPrimaryMetricsPtrOutput{})
	pulumi.RegisterOutputType(ClassificationPrimaryMetricsOutput{})
	pulumi.RegisterOutputType(ClassificationPrimaryMetricsPtrOutput{})
	pulumi.RegisterOutputType(ClusterPurposeOutput{})
	pulumi.RegisterOutputType(ClusterPurposePtrOutput{})
	pulumi.RegisterOutputType(ComputeInstanceAuthorizationTypeOutput{})
	pulumi.RegisterOutputType(ComputeInstanceAuthorizationTypePtrOutput{})
	pulumi.RegisterOutputType(ComputePowerActionOutput{})
	pulumi.RegisterOutputType(ComputePowerActionPtrOutput{})
	pulumi.RegisterOutputType(ConnectionCategoryOutput{})
	pulumi.RegisterOutputType(ConnectionCategoryPtrOutput{})
	pulumi.RegisterOutputType(ContainerTypeOutput{})
	pulumi.RegisterOutputType(ContainerTypePtrOutput{})
	pulumi.RegisterOutputType(DataTypeOutput{})
	pulumi.RegisterOutputType(DataTypePtrOutput{})
	pulumi.RegisterOutputType(EgressPublicNetworkAccessTypeOutput{})
	pulumi.RegisterOutputType(EgressPublicNetworkAccessTypePtrOutput{})
	pulumi.RegisterOutputType(EncryptionStatusOutput{})
	pulumi.RegisterOutputType(EncryptionStatusPtrOutput{})
	pulumi.RegisterOutputType(EndpointAuthModeOutput{})
	pulumi.RegisterOutputType(EndpointAuthModePtrOutput{})
	pulumi.RegisterOutputType(EndpointServiceConnectionStatusOutput{})
	pulumi.RegisterOutputType(EndpointServiceConnectionStatusPtrOutput{})
	pulumi.RegisterOutputType(EnvironmentVariableTypeOutput{})
	pulumi.RegisterOutputType(EnvironmentVariableTypePtrOutput{})
	pulumi.RegisterOutputType(FeatureLagsOutput{})
	pulumi.RegisterOutputType(FeatureLagsPtrOutput{})
	pulumi.RegisterOutputType(FeaturizationModeOutput{})
	pulumi.RegisterOutputType(FeaturizationModePtrOutput{})
	pulumi.RegisterOutputType(ForecastingModelsOutput{})
	pulumi.RegisterOutputType(ForecastingModelsPtrOutput{})
	pulumi.RegisterOutputType(ForecastingPrimaryMetricsOutput{})
	pulumi.RegisterOutputType(ForecastingPrimaryMetricsPtrOutput{})
	pulumi.RegisterOutputType(GoalOutput{})
	pulumi.RegisterOutputType(GoalPtrOutput{})
	pulumi.RegisterOutputType(ImageTypeOutput{})
	pulumi.RegisterOutputType(ImageTypePtrOutput{})
	pulumi.RegisterOutputType(InputDeliveryModeOutput{})
	pulumi.RegisterOutputType(InputDeliveryModePtrOutput{})
	pulumi.RegisterOutputType(InstanceSegmentationPrimaryMetricsOutput{})
	pulumi.RegisterOutputType(InstanceSegmentationPrimaryMetricsPtrOutput{})
	pulumi.RegisterOutputType(LearningRateSchedulerOutput{})
	pulumi.RegisterOutputType(LearningRateSchedulerPtrOutput{})
	pulumi.RegisterOutputType(LoadBalancerTypeOutput{})
	pulumi.RegisterOutputType(LoadBalancerTypePtrOutput{})
	pulumi.RegisterOutputType(LogVerbosityOutput{})
	pulumi.RegisterOutputType(LogVerbosityPtrOutput{})
	pulumi.RegisterOutputType(ManagedServiceIdentityTypeOutput{})
	pulumi.RegisterOutputType(ManagedServiceIdentityTypePtrOutput{})
	pulumi.RegisterOutputType(ModelSizeOutput{})
	pulumi.RegisterOutputType(ModelSizePtrOutput{})
	pulumi.RegisterOutputType(ObjectDetectionPrimaryMetricsOutput{})
	pulumi.RegisterOutputType(ObjectDetectionPrimaryMetricsPtrOutput{})
	pulumi.RegisterOutputType(OperatingSystemTypeOutput{})
	pulumi.RegisterOutputType(OperatingSystemTypePtrOutput{})
	pulumi.RegisterOutputType(OsTypeOutput{})
	pulumi.RegisterOutputType(OsTypePtrOutput{})
	pulumi.RegisterOutputType(OutputDeliveryModeOutput{})
	pulumi.RegisterOutputType(OutputDeliveryModePtrOutput{})
	pulumi.RegisterOutputType(PrivateEndpointServiceConnectionStatusOutput{})
	pulumi.RegisterOutputType(PrivateEndpointServiceConnectionStatusPtrOutput{})
	pulumi.RegisterOutputType(ProtocolOutput{})
	pulumi.RegisterOutputType(ProtocolPtrOutput{})
	pulumi.RegisterOutputType(PublicNetworkAccessOutput{})
	pulumi.RegisterOutputType(PublicNetworkAccessPtrOutput{})
	pulumi.RegisterOutputType(PublicNetworkAccessTypeOutput{})
	pulumi.RegisterOutputType(PublicNetworkAccessTypePtrOutput{})
	pulumi.RegisterOutputType(RandomSamplingAlgorithmRuleOutput{})
	pulumi.RegisterOutputType(RandomSamplingAlgorithmRulePtrOutput{})
	pulumi.RegisterOutputType(RecurrenceFrequencyOutput{})
	pulumi.RegisterOutputType(RecurrenceFrequencyPtrOutput{})
	pulumi.RegisterOutputType(RegressionModelsOutput{})
	pulumi.RegisterOutputType(RegressionModelsPtrOutput{})
	pulumi.RegisterOutputType(RegressionPrimaryMetricsOutput{})
	pulumi.RegisterOutputType(RegressionPrimaryMetricsPtrOutput{})
	pulumi.RegisterOutputType(RemoteLoginPortPublicAccessOutput{})
	pulumi.RegisterOutputType(RemoteLoginPortPublicAccessPtrOutput{})
	pulumi.RegisterOutputType(SamplingAlgorithmTypeOutput{})
	pulumi.RegisterOutputType(SamplingAlgorithmTypePtrOutput{})
	pulumi.RegisterOutputType(ScheduleProvisioningStateOutput{})
	pulumi.RegisterOutputType(ScheduleProvisioningStatePtrOutput{})
	pulumi.RegisterOutputType(ScheduleStatusOutput{})
	pulumi.RegisterOutputType(ScheduleStatusPtrOutput{})
	pulumi.RegisterOutputType(ServiceDataAccessAuthIdentityOutput{})
	pulumi.RegisterOutputType(ServiceDataAccessAuthIdentityPtrOutput{})
	pulumi.RegisterOutputType(ShortSeriesHandlingConfigurationOutput{})
	pulumi.RegisterOutputType(ShortSeriesHandlingConfigurationPtrOutput{})
	pulumi.RegisterOutputType(SkuTierOutput{})
	pulumi.RegisterOutputType(SkuTierPtrOutput{})
	pulumi.RegisterOutputType(SshPublicAccessOutput{})
	pulumi.RegisterOutputType(SshPublicAccessPtrOutput{})
	pulumi.RegisterOutputType(SslConfigStatusOutput{})
	pulumi.RegisterOutputType(SslConfigStatusPtrOutput{})
	pulumi.RegisterOutputType(StackMetaLearnerTypeOutput{})
	pulumi.RegisterOutputType(StackMetaLearnerTypePtrOutput{})
	pulumi.RegisterOutputType(StochasticOptimizerOutput{})
	pulumi.RegisterOutputType(StochasticOptimizerPtrOutput{})
	pulumi.RegisterOutputType(TargetAggregationFunctionOutput{})
	pulumi.RegisterOutputType(TargetAggregationFunctionPtrOutput{})
	pulumi.RegisterOutputType(TriggerTypeOutput{})
	pulumi.RegisterOutputType(TriggerTypePtrOutput{})
	pulumi.RegisterOutputType(UseStlOutput{})
	pulumi.RegisterOutputType(UseStlPtrOutput{})
	pulumi.RegisterOutputType(ValidationMetricTypeOutput{})
	pulumi.RegisterOutputType(ValidationMetricTypePtrOutput{})
	pulumi.RegisterOutputType(ValueFormatOutput{})
	pulumi.RegisterOutputType(ValueFormatPtrOutput{})
	pulumi.RegisterOutputType(VmPriorityOutput{})
	pulumi.RegisterOutputType(VmPriorityPtrOutput{})
	pulumi.RegisterOutputType(VolumeDefinitionTypeOutput{})
	pulumi.RegisterOutputType(VolumeDefinitionTypePtrOutput{})
	pulumi.RegisterOutputType(WeekDayOutput{})
	pulumi.RegisterOutputType(WeekDayPtrOutput{})
}
