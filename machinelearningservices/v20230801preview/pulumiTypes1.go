// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20230801preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = utilities.GetEnvOrDefault

// Properties of the Private Endpoint Connection
type RegistryPrivateEndpointConnectionPropertiesResponse struct {
	// The group ids
	GroupIds []string `pulumi:"groupIds"`
	// The PE network resource that is linked to this PE connection.
	PrivateEndpoint *PrivateEndpointResourceResponse `pulumi:"privateEndpoint"`
	// One of null, "Succeeded", "Provisioning", "Failed". While not approved, it's null.
	ProvisioningState *string `pulumi:"provisioningState"`
	// The connection state.
	RegistryPrivateLinkServiceConnectionState *RegistryPrivateLinkServiceConnectionStateResponse `pulumi:"registryPrivateLinkServiceConnectionState"`
}

// Properties of the Private Endpoint Connection
type RegistryPrivateEndpointConnectionPropertiesResponseOutput struct{ *pulumi.OutputState }

func (RegistryPrivateEndpointConnectionPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RegistryPrivateEndpointConnectionPropertiesResponse)(nil)).Elem()
}

func (o RegistryPrivateEndpointConnectionPropertiesResponseOutput) ToRegistryPrivateEndpointConnectionPropertiesResponseOutput() RegistryPrivateEndpointConnectionPropertiesResponseOutput {
	return o
}

func (o RegistryPrivateEndpointConnectionPropertiesResponseOutput) ToRegistryPrivateEndpointConnectionPropertiesResponseOutputWithContext(ctx context.Context) RegistryPrivateEndpointConnectionPropertiesResponseOutput {
	return o
}

// The group ids
func (o RegistryPrivateEndpointConnectionPropertiesResponseOutput) GroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RegistryPrivateEndpointConnectionPropertiesResponse) []string { return v.GroupIds }).(pulumi.StringArrayOutput)
}

// The PE network resource that is linked to this PE connection.
func (o RegistryPrivateEndpointConnectionPropertiesResponseOutput) PrivateEndpoint() PrivateEndpointResourceResponsePtrOutput {
	return o.ApplyT(func(v RegistryPrivateEndpointConnectionPropertiesResponse) *PrivateEndpointResourceResponse {
		return v.PrivateEndpoint
	}).(PrivateEndpointResourceResponsePtrOutput)
}

// One of null, "Succeeded", "Provisioning", "Failed". While not approved, it's null.
func (o RegistryPrivateEndpointConnectionPropertiesResponseOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RegistryPrivateEndpointConnectionPropertiesResponse) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// The connection state.
func (o RegistryPrivateEndpointConnectionPropertiesResponseOutput) RegistryPrivateLinkServiceConnectionState() RegistryPrivateLinkServiceConnectionStateResponsePtrOutput {
	return o.ApplyT(func(v RegistryPrivateEndpointConnectionPropertiesResponse) *RegistryPrivateLinkServiceConnectionStateResponse {
		return v.RegistryPrivateLinkServiceConnectionState
	}).(RegistryPrivateLinkServiceConnectionStateResponsePtrOutput)
}

type RegistryPrivateEndpointConnectionPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (RegistryPrivateEndpointConnectionPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RegistryPrivateEndpointConnectionPropertiesResponse)(nil)).Elem()
}

func (o RegistryPrivateEndpointConnectionPropertiesResponsePtrOutput) ToRegistryPrivateEndpointConnectionPropertiesResponsePtrOutput() RegistryPrivateEndpointConnectionPropertiesResponsePtrOutput {
	return o
}

func (o RegistryPrivateEndpointConnectionPropertiesResponsePtrOutput) ToRegistryPrivateEndpointConnectionPropertiesResponsePtrOutputWithContext(ctx context.Context) RegistryPrivateEndpointConnectionPropertiesResponsePtrOutput {
	return o
}

func (o RegistryPrivateEndpointConnectionPropertiesResponsePtrOutput) Elem() RegistryPrivateEndpointConnectionPropertiesResponseOutput {
	return o.ApplyT(func(v *RegistryPrivateEndpointConnectionPropertiesResponse) RegistryPrivateEndpointConnectionPropertiesResponse {
		if v != nil {
			return *v
		}
		var ret RegistryPrivateEndpointConnectionPropertiesResponse
		return ret
	}).(RegistryPrivateEndpointConnectionPropertiesResponseOutput)
}

// The group ids
func (o RegistryPrivateEndpointConnectionPropertiesResponsePtrOutput) GroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *RegistryPrivateEndpointConnectionPropertiesResponse) []string {
		if v == nil {
			return nil
		}
		return v.GroupIds
	}).(pulumi.StringArrayOutput)
}

// The PE network resource that is linked to this PE connection.
func (o RegistryPrivateEndpointConnectionPropertiesResponsePtrOutput) PrivateEndpoint() PrivateEndpointResourceResponsePtrOutput {
	return o.ApplyT(func(v *RegistryPrivateEndpointConnectionPropertiesResponse) *PrivateEndpointResourceResponse {
		if v == nil {
			return nil
		}
		return v.PrivateEndpoint
	}).(PrivateEndpointResourceResponsePtrOutput)
}

// One of null, "Succeeded", "Provisioning", "Failed". While not approved, it's null.
func (o RegistryPrivateEndpointConnectionPropertiesResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RegistryPrivateEndpointConnectionPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// The connection state.
func (o RegistryPrivateEndpointConnectionPropertiesResponsePtrOutput) RegistryPrivateLinkServiceConnectionState() RegistryPrivateLinkServiceConnectionStateResponsePtrOutput {
	return o.ApplyT(func(v *RegistryPrivateEndpointConnectionPropertiesResponse) *RegistryPrivateLinkServiceConnectionStateResponse {
		if v == nil {
			return nil
		}
		return v.RegistryPrivateLinkServiceConnectionState
	}).(RegistryPrivateLinkServiceConnectionStateResponsePtrOutput)
}

// Private endpoint connection definition.
type RegistryPrivateEndpointConnectionResponse struct {
	// This is the private endpoint connection name created on SRP
	// Full resource id: /subscriptions/{subId}/resourceGroups/{rgName}/providers/Microsoft.MachineLearningServices/{resourceType}/{resourceName}/registryPrivateEndpointConnections/{peConnectionName}
	Id *string `pulumi:"id"`
	// Same as workspace location.
	Location *string `pulumi:"location"`
	// Properties of the Private Endpoint Connection
	Properties *RegistryPrivateEndpointConnectionPropertiesResponse `pulumi:"properties"`
}

// Private endpoint connection definition.
type RegistryPrivateEndpointConnectionResponseOutput struct{ *pulumi.OutputState }

func (RegistryPrivateEndpointConnectionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RegistryPrivateEndpointConnectionResponse)(nil)).Elem()
}

func (o RegistryPrivateEndpointConnectionResponseOutput) ToRegistryPrivateEndpointConnectionResponseOutput() RegistryPrivateEndpointConnectionResponseOutput {
	return o
}

func (o RegistryPrivateEndpointConnectionResponseOutput) ToRegistryPrivateEndpointConnectionResponseOutputWithContext(ctx context.Context) RegistryPrivateEndpointConnectionResponseOutput {
	return o
}

// This is the private endpoint connection name created on SRP
// Full resource id: /subscriptions/{subId}/resourceGroups/{rgName}/providers/Microsoft.MachineLearningServices/{resourceType}/{resourceName}/registryPrivateEndpointConnections/{peConnectionName}
func (o RegistryPrivateEndpointConnectionResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RegistryPrivateEndpointConnectionResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Same as workspace location.
func (o RegistryPrivateEndpointConnectionResponseOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RegistryPrivateEndpointConnectionResponse) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// Properties of the Private Endpoint Connection
func (o RegistryPrivateEndpointConnectionResponseOutput) Properties() RegistryPrivateEndpointConnectionPropertiesResponsePtrOutput {
	return o.ApplyT(func(v RegistryPrivateEndpointConnectionResponse) *RegistryPrivateEndpointConnectionPropertiesResponse {
		return v.Properties
	}).(RegistryPrivateEndpointConnectionPropertiesResponsePtrOutput)
}

type RegistryPrivateEndpointConnectionResponseArrayOutput struct{ *pulumi.OutputState }

func (RegistryPrivateEndpointConnectionResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RegistryPrivateEndpointConnectionResponse)(nil)).Elem()
}

func (o RegistryPrivateEndpointConnectionResponseArrayOutput) ToRegistryPrivateEndpointConnectionResponseArrayOutput() RegistryPrivateEndpointConnectionResponseArrayOutput {
	return o
}

func (o RegistryPrivateEndpointConnectionResponseArrayOutput) ToRegistryPrivateEndpointConnectionResponseArrayOutputWithContext(ctx context.Context) RegistryPrivateEndpointConnectionResponseArrayOutput {
	return o
}

func (o RegistryPrivateEndpointConnectionResponseArrayOutput) Index(i pulumi.IntInput) RegistryPrivateEndpointConnectionResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RegistryPrivateEndpointConnectionResponse {
		return vs[0].([]RegistryPrivateEndpointConnectionResponse)[vs[1].(int)]
	}).(RegistryPrivateEndpointConnectionResponseOutput)
}

// The connection state.
type RegistryPrivateLinkServiceConnectionState struct {
	// Some RP chose "None". Other RPs use this for region expansion.
	ActionsRequired *string `pulumi:"actionsRequired"`
	// User-defined message that, per NRP doc, may be used for approval-related message.
	Description *string `pulumi:"description"`
	// Connection status of the service consumer with the service provider
	Status *string `pulumi:"status"`
}

// RegistryPrivateLinkServiceConnectionStateInput is an input type that accepts RegistryPrivateLinkServiceConnectionStateArgs and RegistryPrivateLinkServiceConnectionStateOutput values.
// You can construct a concrete instance of `RegistryPrivateLinkServiceConnectionStateInput` via:
//
//	RegistryPrivateLinkServiceConnectionStateArgs{...}
type RegistryPrivateLinkServiceConnectionStateInput interface {
	pulumi.Input

	ToRegistryPrivateLinkServiceConnectionStateOutput() RegistryPrivateLinkServiceConnectionStateOutput
	ToRegistryPrivateLinkServiceConnectionStateOutputWithContext(context.Context) RegistryPrivateLinkServiceConnectionStateOutput
}

// The connection state.
type RegistryPrivateLinkServiceConnectionStateArgs struct {
	// Some RP chose "None". Other RPs use this for region expansion.
	ActionsRequired pulumi.StringPtrInput `pulumi:"actionsRequired"`
	// User-defined message that, per NRP doc, may be used for approval-related message.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Connection status of the service consumer with the service provider
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (RegistryPrivateLinkServiceConnectionStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RegistryPrivateLinkServiceConnectionState)(nil)).Elem()
}

func (i RegistryPrivateLinkServiceConnectionStateArgs) ToRegistryPrivateLinkServiceConnectionStateOutput() RegistryPrivateLinkServiceConnectionStateOutput {
	return i.ToRegistryPrivateLinkServiceConnectionStateOutputWithContext(context.Background())
}

func (i RegistryPrivateLinkServiceConnectionStateArgs) ToRegistryPrivateLinkServiceConnectionStateOutputWithContext(ctx context.Context) RegistryPrivateLinkServiceConnectionStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegistryPrivateLinkServiceConnectionStateOutput)
}

func (i RegistryPrivateLinkServiceConnectionStateArgs) ToRegistryPrivateLinkServiceConnectionStatePtrOutput() RegistryPrivateLinkServiceConnectionStatePtrOutput {
	return i.ToRegistryPrivateLinkServiceConnectionStatePtrOutputWithContext(context.Background())
}

func (i RegistryPrivateLinkServiceConnectionStateArgs) ToRegistryPrivateLinkServiceConnectionStatePtrOutputWithContext(ctx context.Context) RegistryPrivateLinkServiceConnectionStatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegistryPrivateLinkServiceConnectionStateOutput).ToRegistryPrivateLinkServiceConnectionStatePtrOutputWithContext(ctx)
}

// RegistryPrivateLinkServiceConnectionStatePtrInput is an input type that accepts RegistryPrivateLinkServiceConnectionStateArgs, RegistryPrivateLinkServiceConnectionStatePtr and RegistryPrivateLinkServiceConnectionStatePtrOutput values.
// You can construct a concrete instance of `RegistryPrivateLinkServiceConnectionStatePtrInput` via:
//
//	        RegistryPrivateLinkServiceConnectionStateArgs{...}
//
//	or:
//
//	        nil
type RegistryPrivateLinkServiceConnectionStatePtrInput interface {
	pulumi.Input

	ToRegistryPrivateLinkServiceConnectionStatePtrOutput() RegistryPrivateLinkServiceConnectionStatePtrOutput
	ToRegistryPrivateLinkServiceConnectionStatePtrOutputWithContext(context.Context) RegistryPrivateLinkServiceConnectionStatePtrOutput
}

type registryPrivateLinkServiceConnectionStatePtrType RegistryPrivateLinkServiceConnectionStateArgs

func RegistryPrivateLinkServiceConnectionStatePtr(v *RegistryPrivateLinkServiceConnectionStateArgs) RegistryPrivateLinkServiceConnectionStatePtrInput {
	return (*registryPrivateLinkServiceConnectionStatePtrType)(v)
}

func (*registryPrivateLinkServiceConnectionStatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RegistryPrivateLinkServiceConnectionState)(nil)).Elem()
}

func (i *registryPrivateLinkServiceConnectionStatePtrType) ToRegistryPrivateLinkServiceConnectionStatePtrOutput() RegistryPrivateLinkServiceConnectionStatePtrOutput {
	return i.ToRegistryPrivateLinkServiceConnectionStatePtrOutputWithContext(context.Background())
}

func (i *registryPrivateLinkServiceConnectionStatePtrType) ToRegistryPrivateLinkServiceConnectionStatePtrOutputWithContext(ctx context.Context) RegistryPrivateLinkServiceConnectionStatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegistryPrivateLinkServiceConnectionStatePtrOutput)
}

// The connection state.
type RegistryPrivateLinkServiceConnectionStateOutput struct{ *pulumi.OutputState }

func (RegistryPrivateLinkServiceConnectionStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RegistryPrivateLinkServiceConnectionState)(nil)).Elem()
}

func (o RegistryPrivateLinkServiceConnectionStateOutput) ToRegistryPrivateLinkServiceConnectionStateOutput() RegistryPrivateLinkServiceConnectionStateOutput {
	return o
}

func (o RegistryPrivateLinkServiceConnectionStateOutput) ToRegistryPrivateLinkServiceConnectionStateOutputWithContext(ctx context.Context) RegistryPrivateLinkServiceConnectionStateOutput {
	return o
}

func (o RegistryPrivateLinkServiceConnectionStateOutput) ToRegistryPrivateLinkServiceConnectionStatePtrOutput() RegistryPrivateLinkServiceConnectionStatePtrOutput {
	return o.ToRegistryPrivateLinkServiceConnectionStatePtrOutputWithContext(context.Background())
}

func (o RegistryPrivateLinkServiceConnectionStateOutput) ToRegistryPrivateLinkServiceConnectionStatePtrOutputWithContext(ctx context.Context) RegistryPrivateLinkServiceConnectionStatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RegistryPrivateLinkServiceConnectionState) *RegistryPrivateLinkServiceConnectionState {
		return &v
	}).(RegistryPrivateLinkServiceConnectionStatePtrOutput)
}

// Some RP chose "None". Other RPs use this for region expansion.
func (o RegistryPrivateLinkServiceConnectionStateOutput) ActionsRequired() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RegistryPrivateLinkServiceConnectionState) *string { return v.ActionsRequired }).(pulumi.StringPtrOutput)
}

// User-defined message that, per NRP doc, may be used for approval-related message.
func (o RegistryPrivateLinkServiceConnectionStateOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RegistryPrivateLinkServiceConnectionState) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Connection status of the service consumer with the service provider
func (o RegistryPrivateLinkServiceConnectionStateOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RegistryPrivateLinkServiceConnectionState) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type RegistryPrivateLinkServiceConnectionStatePtrOutput struct{ *pulumi.OutputState }

func (RegistryPrivateLinkServiceConnectionStatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RegistryPrivateLinkServiceConnectionState)(nil)).Elem()
}

func (o RegistryPrivateLinkServiceConnectionStatePtrOutput) ToRegistryPrivateLinkServiceConnectionStatePtrOutput() RegistryPrivateLinkServiceConnectionStatePtrOutput {
	return o
}

func (o RegistryPrivateLinkServiceConnectionStatePtrOutput) ToRegistryPrivateLinkServiceConnectionStatePtrOutputWithContext(ctx context.Context) RegistryPrivateLinkServiceConnectionStatePtrOutput {
	return o
}

func (o RegistryPrivateLinkServiceConnectionStatePtrOutput) Elem() RegistryPrivateLinkServiceConnectionStateOutput {
	return o.ApplyT(func(v *RegistryPrivateLinkServiceConnectionState) RegistryPrivateLinkServiceConnectionState {
		if v != nil {
			return *v
		}
		var ret RegistryPrivateLinkServiceConnectionState
		return ret
	}).(RegistryPrivateLinkServiceConnectionStateOutput)
}

// Some RP chose "None". Other RPs use this for region expansion.
func (o RegistryPrivateLinkServiceConnectionStatePtrOutput) ActionsRequired() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RegistryPrivateLinkServiceConnectionState) *string {
		if v == nil {
			return nil
		}
		return v.ActionsRequired
	}).(pulumi.StringPtrOutput)
}

// User-defined message that, per NRP doc, may be used for approval-related message.
func (o RegistryPrivateLinkServiceConnectionStatePtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RegistryPrivateLinkServiceConnectionState) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// Connection status of the service consumer with the service provider
func (o RegistryPrivateLinkServiceConnectionStatePtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RegistryPrivateLinkServiceConnectionState) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

// The connection state.
type RegistryPrivateLinkServiceConnectionStateResponse struct {
	// Some RP chose "None". Other RPs use this for region expansion.
	ActionsRequired *string `pulumi:"actionsRequired"`
	// User-defined message that, per NRP doc, may be used for approval-related message.
	Description *string `pulumi:"description"`
	// Connection status of the service consumer with the service provider
	Status *string `pulumi:"status"`
}

// The connection state.
type RegistryPrivateLinkServiceConnectionStateResponseOutput struct{ *pulumi.OutputState }

func (RegistryPrivateLinkServiceConnectionStateResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RegistryPrivateLinkServiceConnectionStateResponse)(nil)).Elem()
}

func (o RegistryPrivateLinkServiceConnectionStateResponseOutput) ToRegistryPrivateLinkServiceConnectionStateResponseOutput() RegistryPrivateLinkServiceConnectionStateResponseOutput {
	return o
}

func (o RegistryPrivateLinkServiceConnectionStateResponseOutput) ToRegistryPrivateLinkServiceConnectionStateResponseOutputWithContext(ctx context.Context) RegistryPrivateLinkServiceConnectionStateResponseOutput {
	return o
}

// Some RP chose "None". Other RPs use this for region expansion.
func (o RegistryPrivateLinkServiceConnectionStateResponseOutput) ActionsRequired() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RegistryPrivateLinkServiceConnectionStateResponse) *string { return v.ActionsRequired }).(pulumi.StringPtrOutput)
}

// User-defined message that, per NRP doc, may be used for approval-related message.
func (o RegistryPrivateLinkServiceConnectionStateResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RegistryPrivateLinkServiceConnectionStateResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Connection status of the service consumer with the service provider
func (o RegistryPrivateLinkServiceConnectionStateResponseOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RegistryPrivateLinkServiceConnectionStateResponse) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type RegistryPrivateLinkServiceConnectionStateResponsePtrOutput struct{ *pulumi.OutputState }

func (RegistryPrivateLinkServiceConnectionStateResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RegistryPrivateLinkServiceConnectionStateResponse)(nil)).Elem()
}

func (o RegistryPrivateLinkServiceConnectionStateResponsePtrOutput) ToRegistryPrivateLinkServiceConnectionStateResponsePtrOutput() RegistryPrivateLinkServiceConnectionStateResponsePtrOutput {
	return o
}

func (o RegistryPrivateLinkServiceConnectionStateResponsePtrOutput) ToRegistryPrivateLinkServiceConnectionStateResponsePtrOutputWithContext(ctx context.Context) RegistryPrivateLinkServiceConnectionStateResponsePtrOutput {
	return o
}

func (o RegistryPrivateLinkServiceConnectionStateResponsePtrOutput) Elem() RegistryPrivateLinkServiceConnectionStateResponseOutput {
	return o.ApplyT(func(v *RegistryPrivateLinkServiceConnectionStateResponse) RegistryPrivateLinkServiceConnectionStateResponse {
		if v != nil {
			return *v
		}
		var ret RegistryPrivateLinkServiceConnectionStateResponse
		return ret
	}).(RegistryPrivateLinkServiceConnectionStateResponseOutput)
}

// Some RP chose "None". Other RPs use this for region expansion.
func (o RegistryPrivateLinkServiceConnectionStateResponsePtrOutput) ActionsRequired() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RegistryPrivateLinkServiceConnectionStateResponse) *string {
		if v == nil {
			return nil
		}
		return v.ActionsRequired
	}).(pulumi.StringPtrOutput)
}

// User-defined message that, per NRP doc, may be used for approval-related message.
func (o RegistryPrivateLinkServiceConnectionStateResponsePtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RegistryPrivateLinkServiceConnectionStateResponse) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// Connection status of the service consumer with the service provider
func (o RegistryPrivateLinkServiceConnectionStateResponsePtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RegistryPrivateLinkServiceConnectionStateResponse) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

// Details for each region the registry is in
type RegistryRegionArmDetails struct {
	// List of ACR accounts
	AcrDetails []AcrDetails `pulumi:"acrDetails"`
	// The location where the registry exists
	Location *string `pulumi:"location"`
	// List of storage accounts
	StorageAccountDetails []StorageAccountDetails `pulumi:"storageAccountDetails"`
}

// RegistryRegionArmDetailsInput is an input type that accepts RegistryRegionArmDetailsArgs and RegistryRegionArmDetailsOutput values.
// You can construct a concrete instance of `RegistryRegionArmDetailsInput` via:
//
//	RegistryRegionArmDetailsArgs{...}
type RegistryRegionArmDetailsInput interface {
	pulumi.Input

	ToRegistryRegionArmDetailsOutput() RegistryRegionArmDetailsOutput
	ToRegistryRegionArmDetailsOutputWithContext(context.Context) RegistryRegionArmDetailsOutput
}

// Details for each region the registry is in
type RegistryRegionArmDetailsArgs struct {
	// List of ACR accounts
	AcrDetails AcrDetailsArrayInput `pulumi:"acrDetails"`
	// The location where the registry exists
	Location pulumi.StringPtrInput `pulumi:"location"`
	// List of storage accounts
	StorageAccountDetails StorageAccountDetailsArrayInput `pulumi:"storageAccountDetails"`
}

func (RegistryRegionArmDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RegistryRegionArmDetails)(nil)).Elem()
}

func (i RegistryRegionArmDetailsArgs) ToRegistryRegionArmDetailsOutput() RegistryRegionArmDetailsOutput {
	return i.ToRegistryRegionArmDetailsOutputWithContext(context.Background())
}

func (i RegistryRegionArmDetailsArgs) ToRegistryRegionArmDetailsOutputWithContext(ctx context.Context) RegistryRegionArmDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegistryRegionArmDetailsOutput)
}

// RegistryRegionArmDetailsArrayInput is an input type that accepts RegistryRegionArmDetailsArray and RegistryRegionArmDetailsArrayOutput values.
// You can construct a concrete instance of `RegistryRegionArmDetailsArrayInput` via:
//
//	RegistryRegionArmDetailsArray{ RegistryRegionArmDetailsArgs{...} }
type RegistryRegionArmDetailsArrayInput interface {
	pulumi.Input

	ToRegistryRegionArmDetailsArrayOutput() RegistryRegionArmDetailsArrayOutput
	ToRegistryRegionArmDetailsArrayOutputWithContext(context.Context) RegistryRegionArmDetailsArrayOutput
}

type RegistryRegionArmDetailsArray []RegistryRegionArmDetailsInput

func (RegistryRegionArmDetailsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RegistryRegionArmDetails)(nil)).Elem()
}

func (i RegistryRegionArmDetailsArray) ToRegistryRegionArmDetailsArrayOutput() RegistryRegionArmDetailsArrayOutput {
	return i.ToRegistryRegionArmDetailsArrayOutputWithContext(context.Background())
}

func (i RegistryRegionArmDetailsArray) ToRegistryRegionArmDetailsArrayOutputWithContext(ctx context.Context) RegistryRegionArmDetailsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegistryRegionArmDetailsArrayOutput)
}

// Details for each region the registry is in
type RegistryRegionArmDetailsOutput struct{ *pulumi.OutputState }

func (RegistryRegionArmDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RegistryRegionArmDetails)(nil)).Elem()
}

func (o RegistryRegionArmDetailsOutput) ToRegistryRegionArmDetailsOutput() RegistryRegionArmDetailsOutput {
	return o
}

func (o RegistryRegionArmDetailsOutput) ToRegistryRegionArmDetailsOutputWithContext(ctx context.Context) RegistryRegionArmDetailsOutput {
	return o
}

// List of ACR accounts
func (o RegistryRegionArmDetailsOutput) AcrDetails() AcrDetailsArrayOutput {
	return o.ApplyT(func(v RegistryRegionArmDetails) []AcrDetails { return v.AcrDetails }).(AcrDetailsArrayOutput)
}

// The location where the registry exists
func (o RegistryRegionArmDetailsOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RegistryRegionArmDetails) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// List of storage accounts
func (o RegistryRegionArmDetailsOutput) StorageAccountDetails() StorageAccountDetailsArrayOutput {
	return o.ApplyT(func(v RegistryRegionArmDetails) []StorageAccountDetails { return v.StorageAccountDetails }).(StorageAccountDetailsArrayOutput)
}

type RegistryRegionArmDetailsArrayOutput struct{ *pulumi.OutputState }

func (RegistryRegionArmDetailsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RegistryRegionArmDetails)(nil)).Elem()
}

func (o RegistryRegionArmDetailsArrayOutput) ToRegistryRegionArmDetailsArrayOutput() RegistryRegionArmDetailsArrayOutput {
	return o
}

func (o RegistryRegionArmDetailsArrayOutput) ToRegistryRegionArmDetailsArrayOutputWithContext(ctx context.Context) RegistryRegionArmDetailsArrayOutput {
	return o
}

func (o RegistryRegionArmDetailsArrayOutput) Index(i pulumi.IntInput) RegistryRegionArmDetailsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RegistryRegionArmDetails {
		return vs[0].([]RegistryRegionArmDetails)[vs[1].(int)]
	}).(RegistryRegionArmDetailsOutput)
}

// Details for each region the registry is in
type RegistryRegionArmDetailsResponse struct {
	// List of ACR accounts
	AcrDetails []AcrDetailsResponse `pulumi:"acrDetails"`
	// The location where the registry exists
	Location *string `pulumi:"location"`
	// List of storage accounts
	StorageAccountDetails []StorageAccountDetailsResponse `pulumi:"storageAccountDetails"`
}

// Details for each region the registry is in
type RegistryRegionArmDetailsResponseOutput struct{ *pulumi.OutputState }

func (RegistryRegionArmDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RegistryRegionArmDetailsResponse)(nil)).Elem()
}

func (o RegistryRegionArmDetailsResponseOutput) ToRegistryRegionArmDetailsResponseOutput() RegistryRegionArmDetailsResponseOutput {
	return o
}

func (o RegistryRegionArmDetailsResponseOutput) ToRegistryRegionArmDetailsResponseOutputWithContext(ctx context.Context) RegistryRegionArmDetailsResponseOutput {
	return o
}

// List of ACR accounts
func (o RegistryRegionArmDetailsResponseOutput) AcrDetails() AcrDetailsResponseArrayOutput {
	return o.ApplyT(func(v RegistryRegionArmDetailsResponse) []AcrDetailsResponse { return v.AcrDetails }).(AcrDetailsResponseArrayOutput)
}

// The location where the registry exists
func (o RegistryRegionArmDetailsResponseOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RegistryRegionArmDetailsResponse) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// List of storage accounts
func (o RegistryRegionArmDetailsResponseOutput) StorageAccountDetails() StorageAccountDetailsResponseArrayOutput {
	return o.ApplyT(func(v RegistryRegionArmDetailsResponse) []StorageAccountDetailsResponse {
		return v.StorageAccountDetails
	}).(StorageAccountDetailsResponseArrayOutput)
}

type RegistryRegionArmDetailsResponseArrayOutput struct{ *pulumi.OutputState }

func (RegistryRegionArmDetailsResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RegistryRegionArmDetailsResponse)(nil)).Elem()
}

func (o RegistryRegionArmDetailsResponseArrayOutput) ToRegistryRegionArmDetailsResponseArrayOutput() RegistryRegionArmDetailsResponseArrayOutput {
	return o
}

func (o RegistryRegionArmDetailsResponseArrayOutput) ToRegistryRegionArmDetailsResponseArrayOutputWithContext(ctx context.Context) RegistryRegionArmDetailsResponseArrayOutput {
	return o
}

func (o RegistryRegionArmDetailsResponseArrayOutput) Index(i pulumi.IntInput) RegistryRegionArmDetailsResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RegistryRegionArmDetailsResponse {
		return vs[0].([]RegistryRegionArmDetailsResponse)[vs[1].(int)]
	}).(RegistryRegionArmDetailsResponseOutput)
}

// Details of the Registry
type RegistryResponse struct {
	// Discovery URL for the Registry
	DiscoveryUrl *string `pulumi:"discoveryUrl"`
	// IntellectualPropertyPublisher for the registry
	IntellectualPropertyPublisher *string `pulumi:"intellectualPropertyPublisher"`
	// ResourceId of the managed RG if the registry has system created resources
	ManagedResourceGroup *ArmResourceIdResponse `pulumi:"managedResourceGroup"`
	// MLFlow Registry URI for the Registry
	MlFlowRegistryUri *string `pulumi:"mlFlowRegistryUri"`
	// Is the Registry accessible from the internet?
	// Possible values: "Enabled" or "Disabled"
	PublicNetworkAccess *string `pulumi:"publicNetworkAccess"`
	// Details of each region the registry is in
	RegionDetails []RegistryRegionArmDetailsResponse `pulumi:"regionDetails"`
	// Private endpoint connections info used for pending connections in private link portal
	RegistryPrivateEndpointConnections []RegistryPrivateEndpointConnectionResponse `pulumi:"registryPrivateEndpointConnections"`
}

// Details of the Registry
type RegistryResponseOutput struct{ *pulumi.OutputState }

func (RegistryResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RegistryResponse)(nil)).Elem()
}

func (o RegistryResponseOutput) ToRegistryResponseOutput() RegistryResponseOutput {
	return o
}

func (o RegistryResponseOutput) ToRegistryResponseOutputWithContext(ctx context.Context) RegistryResponseOutput {
	return o
}

// Discovery URL for the Registry
func (o RegistryResponseOutput) DiscoveryUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RegistryResponse) *string { return v.DiscoveryUrl }).(pulumi.StringPtrOutput)
}

// IntellectualPropertyPublisher for the registry
func (o RegistryResponseOutput) IntellectualPropertyPublisher() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RegistryResponse) *string { return v.IntellectualPropertyPublisher }).(pulumi.StringPtrOutput)
}

// ResourceId of the managed RG if the registry has system created resources
func (o RegistryResponseOutput) ManagedResourceGroup() ArmResourceIdResponsePtrOutput {
	return o.ApplyT(func(v RegistryResponse) *ArmResourceIdResponse { return v.ManagedResourceGroup }).(ArmResourceIdResponsePtrOutput)
}

// MLFlow Registry URI for the Registry
func (o RegistryResponseOutput) MlFlowRegistryUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RegistryResponse) *string { return v.MlFlowRegistryUri }).(pulumi.StringPtrOutput)
}

// Is the Registry accessible from the internet?
// Possible values: "Enabled" or "Disabled"
func (o RegistryResponseOutput) PublicNetworkAccess() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RegistryResponse) *string { return v.PublicNetworkAccess }).(pulumi.StringPtrOutput)
}

// Details of each region the registry is in
func (o RegistryResponseOutput) RegionDetails() RegistryRegionArmDetailsResponseArrayOutput {
	return o.ApplyT(func(v RegistryResponse) []RegistryRegionArmDetailsResponse { return v.RegionDetails }).(RegistryRegionArmDetailsResponseArrayOutput)
}

// Private endpoint connections info used for pending connections in private link portal
func (o RegistryResponseOutput) RegistryPrivateEndpointConnections() RegistryPrivateEndpointConnectionResponseArrayOutput {
	return o.ApplyT(func(v RegistryResponse) []RegistryPrivateEndpointConnectionResponse {
		return v.RegistryPrivateEndpointConnections
	}).(RegistryPrivateEndpointConnectionResponseArrayOutput)
}

// Regression task in AutoML Table vertical.
type Regression struct {
	// Columns to use for CVSplit data.
	CvSplitColumnNames []string `pulumi:"cvSplitColumnNames"`
	// Featurization inputs needed for AutoML job.
	FeaturizationSettings *TableVerticalFeaturizationSettings `pulumi:"featurizationSettings"`
	// Model/training parameters that will remain constant throughout training.
	FixedParameters *TableFixedParameters `pulumi:"fixedParameters"`
	// Execution constraints for AutoMLJob.
	LimitSettings *TableVerticalLimitSettings `pulumi:"limitSettings"`
	// Log verbosity for the job.
	LogVerbosity *string `pulumi:"logVerbosity"`
	// Number of cross validation folds to be applied on training dataset
	// when validation dataset is not provided.
	NCrossValidations interface{} `pulumi:"nCrossValidations"`
	// Primary metric for regression task.
	PrimaryMetric *string `pulumi:"primaryMetric"`
	// Search space for sampling different combinations of models and their hyperparameters.
	SearchSpace []TableParameterSubspace `pulumi:"searchSpace"`
	// Settings for model sweeping and hyperparameter tuning.
	SweepSettings *TableSweepSettings `pulumi:"sweepSettings"`
	// Target column name: This is prediction values column.
	// Also known as label column name in context of classification tasks.
	TargetColumnName *string `pulumi:"targetColumnName"`
	// AutoMLJob Task type.
	// Expected value is 'Regression'.
	TaskType string `pulumi:"taskType"`
	// Test data input.
	TestData *MLTableJobInput `pulumi:"testData"`
	// The fraction of test dataset that needs to be set aside for validation purpose.
	// Values between (0.0 , 1.0)
	// Applied when validation dataset is not provided.
	TestDataSize *float64 `pulumi:"testDataSize"`
	// [Required] Training data input.
	TrainingData MLTableJobInput `pulumi:"trainingData"`
	// Inputs for training phase for an AutoML Job.
	TrainingSettings *RegressionTrainingSettings `pulumi:"trainingSettings"`
	// Validation data inputs.
	ValidationData *MLTableJobInput `pulumi:"validationData"`
	// The fraction of training dataset that needs to be set aside for validation purpose.
	// Values between (0.0 , 1.0)
	// Applied when validation dataset is not provided.
	ValidationDataSize *float64 `pulumi:"validationDataSize"`
	// The name of the sample weight column. Automated ML supports a weighted column as an input, causing rows in the data to be weighted up or down.
	WeightColumnName *string `pulumi:"weightColumnName"`
}

// Defaults sets the appropriate defaults for Regression
func (val *Regression) Defaults() *Regression {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.FeaturizationSettings = tmp.FeaturizationSettings.Defaults()

	tmp.FixedParameters = tmp.FixedParameters.Defaults()

	tmp.LimitSettings = tmp.LimitSettings.Defaults()

	if tmp.LogVerbosity == nil {
		logVerbosity_ := "Info"
		tmp.LogVerbosity = &logVerbosity_
	}
	if tmp.PrimaryMetric == nil {
		primaryMetric_ := "NormalizedRootMeanSquaredError"
		tmp.PrimaryMetric = &primaryMetric_
	}
	tmp.TestData = tmp.TestData.Defaults()

	tmp.TrainingData = *tmp.TrainingData.Defaults()

	tmp.TrainingSettings = tmp.TrainingSettings.Defaults()

	tmp.ValidationData = tmp.ValidationData.Defaults()

	return &tmp
}

type RegressionModelPerformanceMetricThreshold struct {
	// [Required] The regression model performance metric to calculate.
	Metric string `pulumi:"metric"`
	// Expected value is 'Regression'.
	ModelType string `pulumi:"modelType"`
	// The threshold value. If null, a default value will be set depending on the selected metric.
	Threshold *MonitoringThreshold `pulumi:"threshold"`
}

type RegressionModelPerformanceMetricThresholdResponse struct {
	// [Required] The regression model performance metric to calculate.
	Metric string `pulumi:"metric"`
	// Expected value is 'Regression'.
	ModelType string `pulumi:"modelType"`
	// The threshold value. If null, a default value will be set depending on the selected metric.
	Threshold *MonitoringThresholdResponse `pulumi:"threshold"`
}

// Regression task in AutoML Table vertical.
type RegressionResponse struct {
	// Columns to use for CVSplit data.
	CvSplitColumnNames []string `pulumi:"cvSplitColumnNames"`
	// Featurization inputs needed for AutoML job.
	FeaturizationSettings *TableVerticalFeaturizationSettingsResponse `pulumi:"featurizationSettings"`
	// Model/training parameters that will remain constant throughout training.
	FixedParameters *TableFixedParametersResponse `pulumi:"fixedParameters"`
	// Execution constraints for AutoMLJob.
	LimitSettings *TableVerticalLimitSettingsResponse `pulumi:"limitSettings"`
	// Log verbosity for the job.
	LogVerbosity *string `pulumi:"logVerbosity"`
	// Number of cross validation folds to be applied on training dataset
	// when validation dataset is not provided.
	NCrossValidations interface{} `pulumi:"nCrossValidations"`
	// Primary metric for regression task.
	PrimaryMetric *string `pulumi:"primaryMetric"`
	// Search space for sampling different combinations of models and their hyperparameters.
	SearchSpace []TableParameterSubspaceResponse `pulumi:"searchSpace"`
	// Settings for model sweeping and hyperparameter tuning.
	SweepSettings *TableSweepSettingsResponse `pulumi:"sweepSettings"`
	// Target column name: This is prediction values column.
	// Also known as label column name in context of classification tasks.
	TargetColumnName *string `pulumi:"targetColumnName"`
	// AutoMLJob Task type.
	// Expected value is 'Regression'.
	TaskType string `pulumi:"taskType"`
	// Test data input.
	TestData *MLTableJobInputResponse `pulumi:"testData"`
	// The fraction of test dataset that needs to be set aside for validation purpose.
	// Values between (0.0 , 1.0)
	// Applied when validation dataset is not provided.
	TestDataSize *float64 `pulumi:"testDataSize"`
	// [Required] Training data input.
	TrainingData MLTableJobInputResponse `pulumi:"trainingData"`
	// Inputs for training phase for an AutoML Job.
	TrainingSettings *RegressionTrainingSettingsResponse `pulumi:"trainingSettings"`
	// Validation data inputs.
	ValidationData *MLTableJobInputResponse `pulumi:"validationData"`
	// The fraction of training dataset that needs to be set aside for validation purpose.
	// Values between (0.0 , 1.0)
	// Applied when validation dataset is not provided.
	ValidationDataSize *float64 `pulumi:"validationDataSize"`
	// The name of the sample weight column. Automated ML supports a weighted column as an input, causing rows in the data to be weighted up or down.
	WeightColumnName *string `pulumi:"weightColumnName"`
}

// Defaults sets the appropriate defaults for RegressionResponse
func (val *RegressionResponse) Defaults() *RegressionResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.FeaturizationSettings = tmp.FeaturizationSettings.Defaults()

	tmp.FixedParameters = tmp.FixedParameters.Defaults()

	tmp.LimitSettings = tmp.LimitSettings.Defaults()

	if tmp.LogVerbosity == nil {
		logVerbosity_ := "Info"
		tmp.LogVerbosity = &logVerbosity_
	}
	if tmp.PrimaryMetric == nil {
		primaryMetric_ := "NormalizedRootMeanSquaredError"
		tmp.PrimaryMetric = &primaryMetric_
	}
	tmp.TestData = tmp.TestData.Defaults()

	tmp.TrainingData = *tmp.TrainingData.Defaults()

	tmp.TrainingSettings = tmp.TrainingSettings.Defaults()

	tmp.ValidationData = tmp.ValidationData.Defaults()

	return &tmp
}

// Regression Training related configuration.
type RegressionTrainingSettings struct {
	// Allowed models for regression task.
	AllowedTrainingAlgorithms []string `pulumi:"allowedTrainingAlgorithms"`
	// Blocked models for regression task.
	BlockedTrainingAlgorithms []string `pulumi:"blockedTrainingAlgorithms"`
	// Enable recommendation of DNN models.
	EnableDnnTraining *bool `pulumi:"enableDnnTraining"`
	// Flag to turn on explainability on best model.
	EnableModelExplainability *bool `pulumi:"enableModelExplainability"`
	// Flag for enabling onnx compatible models.
	EnableOnnxCompatibleModels *bool `pulumi:"enableOnnxCompatibleModels"`
	// Enable stack ensemble run.
	EnableStackEnsemble *bool `pulumi:"enableStackEnsemble"`
	// Enable voting ensemble run.
	EnableVoteEnsemble *bool `pulumi:"enableVoteEnsemble"`
	// During VotingEnsemble and StackEnsemble model generation, multiple fitted models from the previous child runs are downloaded.
	// Configure this parameter with a higher value than 300 secs, if more time is needed.
	EnsembleModelDownloadTimeout *string `pulumi:"ensembleModelDownloadTimeout"`
	// Stack ensemble settings for stack ensemble run.
	StackEnsembleSettings *StackEnsembleSettings `pulumi:"stackEnsembleSettings"`
	// TrainingMode mode - Setting to 'auto' is same as setting it to 'non-distributed' for now, however in the future may result in mixed mode or heuristics based mode selection. Default is 'auto'.
	// If 'Distributed' then only distributed featurization is used and distributed algorithms are chosen.
	// If 'NonDistributed' then only non distributed algorithms are chosen.
	TrainingMode *string `pulumi:"trainingMode"`
}

// Defaults sets the appropriate defaults for RegressionTrainingSettings
func (val *RegressionTrainingSettings) Defaults() *RegressionTrainingSettings {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.EnableDnnTraining == nil {
		enableDnnTraining_ := false
		tmp.EnableDnnTraining = &enableDnnTraining_
	}
	if tmp.EnableModelExplainability == nil {
		enableModelExplainability_ := true
		tmp.EnableModelExplainability = &enableModelExplainability_
	}
	if tmp.EnableOnnxCompatibleModels == nil {
		enableOnnxCompatibleModels_ := false
		tmp.EnableOnnxCompatibleModels = &enableOnnxCompatibleModels_
	}
	if tmp.EnableStackEnsemble == nil {
		enableStackEnsemble_ := true
		tmp.EnableStackEnsemble = &enableStackEnsemble_
	}
	if tmp.EnableVoteEnsemble == nil {
		enableVoteEnsemble_ := true
		tmp.EnableVoteEnsemble = &enableVoteEnsemble_
	}
	if tmp.EnsembleModelDownloadTimeout == nil {
		ensembleModelDownloadTimeout_ := "PT5M"
		tmp.EnsembleModelDownloadTimeout = &ensembleModelDownloadTimeout_
	}
	tmp.StackEnsembleSettings = tmp.StackEnsembleSettings.Defaults()

	if tmp.TrainingMode == nil {
		trainingMode_ := "Auto"
		tmp.TrainingMode = &trainingMode_
	}
	return &tmp
}

// Regression Training related configuration.
type RegressionTrainingSettingsResponse struct {
	// Allowed models for regression task.
	AllowedTrainingAlgorithms []string `pulumi:"allowedTrainingAlgorithms"`
	// Blocked models for regression task.
	BlockedTrainingAlgorithms []string `pulumi:"blockedTrainingAlgorithms"`
	// Enable recommendation of DNN models.
	EnableDnnTraining *bool `pulumi:"enableDnnTraining"`
	// Flag to turn on explainability on best model.
	EnableModelExplainability *bool `pulumi:"enableModelExplainability"`
	// Flag for enabling onnx compatible models.
	EnableOnnxCompatibleModels *bool `pulumi:"enableOnnxCompatibleModels"`
	// Enable stack ensemble run.
	EnableStackEnsemble *bool `pulumi:"enableStackEnsemble"`
	// Enable voting ensemble run.
	EnableVoteEnsemble *bool `pulumi:"enableVoteEnsemble"`
	// During VotingEnsemble and StackEnsemble model generation, multiple fitted models from the previous child runs are downloaded.
	// Configure this parameter with a higher value than 300 secs, if more time is needed.
	EnsembleModelDownloadTimeout *string `pulumi:"ensembleModelDownloadTimeout"`
	// Stack ensemble settings for stack ensemble run.
	StackEnsembleSettings *StackEnsembleSettingsResponse `pulumi:"stackEnsembleSettings"`
	// TrainingMode mode - Setting to 'auto' is same as setting it to 'non-distributed' for now, however in the future may result in mixed mode or heuristics based mode selection. Default is 'auto'.
	// If 'Distributed' then only distributed featurization is used and distributed algorithms are chosen.
	// If 'NonDistributed' then only non distributed algorithms are chosen.
	TrainingMode *string `pulumi:"trainingMode"`
}

// Defaults sets the appropriate defaults for RegressionTrainingSettingsResponse
func (val *RegressionTrainingSettingsResponse) Defaults() *RegressionTrainingSettingsResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.EnableDnnTraining == nil {
		enableDnnTraining_ := false
		tmp.EnableDnnTraining = &enableDnnTraining_
	}
	if tmp.EnableModelExplainability == nil {
		enableModelExplainability_ := true
		tmp.EnableModelExplainability = &enableModelExplainability_
	}
	if tmp.EnableOnnxCompatibleModels == nil {
		enableOnnxCompatibleModels_ := false
		tmp.EnableOnnxCompatibleModels = &enableOnnxCompatibleModels_
	}
	if tmp.EnableStackEnsemble == nil {
		enableStackEnsemble_ := true
		tmp.EnableStackEnsemble = &enableStackEnsemble_
	}
	if tmp.EnableVoteEnsemble == nil {
		enableVoteEnsemble_ := true
		tmp.EnableVoteEnsemble = &enableVoteEnsemble_
	}
	if tmp.EnsembleModelDownloadTimeout == nil {
		ensembleModelDownloadTimeout_ := "PT5M"
		tmp.EnsembleModelDownloadTimeout = &ensembleModelDownloadTimeout_
	}
	tmp.StackEnsembleSettings = tmp.StackEnsembleSettings.Defaults()

	if tmp.TrainingMode == nil {
		trainingMode_ := "Auto"
		tmp.TrainingMode = &trainingMode_
	}
	return &tmp
}

// Scoring requests configuration.
type RequestConfiguration struct {
	// The number of maximum concurrent requests per node allowed per deployment. Defaults to 1.
	MaxConcurrentRequestsPerInstance *int `pulumi:"maxConcurrentRequestsPerInstance"`
	// The scoring timeout in ISO 8601 format.
	// Defaults to 5000ms.
	RequestTimeout *string `pulumi:"requestTimeout"`
}

// Defaults sets the appropriate defaults for RequestConfiguration
func (val *RequestConfiguration) Defaults() *RequestConfiguration {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.MaxConcurrentRequestsPerInstance == nil {
		maxConcurrentRequestsPerInstance_ := 1
		tmp.MaxConcurrentRequestsPerInstance = &maxConcurrentRequestsPerInstance_
	}
	if tmp.RequestTimeout == nil {
		requestTimeout_ := "PT5S"
		tmp.RequestTimeout = &requestTimeout_
	}
	return &tmp
}

// RequestConfigurationInput is an input type that accepts RequestConfigurationArgs and RequestConfigurationOutput values.
// You can construct a concrete instance of `RequestConfigurationInput` via:
//
//	RequestConfigurationArgs{...}
type RequestConfigurationInput interface {
	pulumi.Input

	ToRequestConfigurationOutput() RequestConfigurationOutput
	ToRequestConfigurationOutputWithContext(context.Context) RequestConfigurationOutput
}

// Scoring requests configuration.
type RequestConfigurationArgs struct {
	// The number of maximum concurrent requests per node allowed per deployment. Defaults to 1.
	MaxConcurrentRequestsPerInstance pulumi.IntPtrInput `pulumi:"maxConcurrentRequestsPerInstance"`
	// The scoring timeout in ISO 8601 format.
	// Defaults to 5000ms.
	RequestTimeout pulumi.StringPtrInput `pulumi:"requestTimeout"`
}

// Defaults sets the appropriate defaults for RequestConfigurationArgs
func (val *RequestConfigurationArgs) Defaults() *RequestConfigurationArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.MaxConcurrentRequestsPerInstance == nil {
		tmp.MaxConcurrentRequestsPerInstance = pulumi.IntPtr(1)
	}
	if tmp.RequestTimeout == nil {
		tmp.RequestTimeout = pulumi.StringPtr("PT5S")
	}
	return &tmp
}
func (RequestConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestConfiguration)(nil)).Elem()
}

func (i RequestConfigurationArgs) ToRequestConfigurationOutput() RequestConfigurationOutput {
	return i.ToRequestConfigurationOutputWithContext(context.Background())
}

func (i RequestConfigurationArgs) ToRequestConfigurationOutputWithContext(ctx context.Context) RequestConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestConfigurationOutput)
}

func (i RequestConfigurationArgs) ToRequestConfigurationPtrOutput() RequestConfigurationPtrOutput {
	return i.ToRequestConfigurationPtrOutputWithContext(context.Background())
}

func (i RequestConfigurationArgs) ToRequestConfigurationPtrOutputWithContext(ctx context.Context) RequestConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestConfigurationOutput).ToRequestConfigurationPtrOutputWithContext(ctx)
}

// RequestConfigurationPtrInput is an input type that accepts RequestConfigurationArgs, RequestConfigurationPtr and RequestConfigurationPtrOutput values.
// You can construct a concrete instance of `RequestConfigurationPtrInput` via:
//
//	        RequestConfigurationArgs{...}
//
//	or:
//
//	        nil
type RequestConfigurationPtrInput interface {
	pulumi.Input

	ToRequestConfigurationPtrOutput() RequestConfigurationPtrOutput
	ToRequestConfigurationPtrOutputWithContext(context.Context) RequestConfigurationPtrOutput
}

type requestConfigurationPtrType RequestConfigurationArgs

func RequestConfigurationPtr(v *RequestConfigurationArgs) RequestConfigurationPtrInput {
	return (*requestConfigurationPtrType)(v)
}

func (*requestConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RequestConfiguration)(nil)).Elem()
}

func (i *requestConfigurationPtrType) ToRequestConfigurationPtrOutput() RequestConfigurationPtrOutput {
	return i.ToRequestConfigurationPtrOutputWithContext(context.Background())
}

func (i *requestConfigurationPtrType) ToRequestConfigurationPtrOutputWithContext(ctx context.Context) RequestConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestConfigurationPtrOutput)
}

// Scoring requests configuration.
type RequestConfigurationOutput struct{ *pulumi.OutputState }

func (RequestConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestConfiguration)(nil)).Elem()
}

func (o RequestConfigurationOutput) ToRequestConfigurationOutput() RequestConfigurationOutput {
	return o
}

func (o RequestConfigurationOutput) ToRequestConfigurationOutputWithContext(ctx context.Context) RequestConfigurationOutput {
	return o
}

func (o RequestConfigurationOutput) ToRequestConfigurationPtrOutput() RequestConfigurationPtrOutput {
	return o.ToRequestConfigurationPtrOutputWithContext(context.Background())
}

func (o RequestConfigurationOutput) ToRequestConfigurationPtrOutputWithContext(ctx context.Context) RequestConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RequestConfiguration) *RequestConfiguration {
		return &v
	}).(RequestConfigurationPtrOutput)
}

// The number of maximum concurrent requests per node allowed per deployment. Defaults to 1.
func (o RequestConfigurationOutput) MaxConcurrentRequestsPerInstance() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RequestConfiguration) *int { return v.MaxConcurrentRequestsPerInstance }).(pulumi.IntPtrOutput)
}

// The scoring timeout in ISO 8601 format.
// Defaults to 5000ms.
func (o RequestConfigurationOutput) RequestTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RequestConfiguration) *string { return v.RequestTimeout }).(pulumi.StringPtrOutput)
}

type RequestConfigurationPtrOutput struct{ *pulumi.OutputState }

func (RequestConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RequestConfiguration)(nil)).Elem()
}

func (o RequestConfigurationPtrOutput) ToRequestConfigurationPtrOutput() RequestConfigurationPtrOutput {
	return o
}

func (o RequestConfigurationPtrOutput) ToRequestConfigurationPtrOutputWithContext(ctx context.Context) RequestConfigurationPtrOutput {
	return o
}

func (o RequestConfigurationPtrOutput) Elem() RequestConfigurationOutput {
	return o.ApplyT(func(v *RequestConfiguration) RequestConfiguration {
		if v != nil {
			return *v
		}
		var ret RequestConfiguration
		return ret
	}).(RequestConfigurationOutput)
}

// The number of maximum concurrent requests per node allowed per deployment. Defaults to 1.
func (o RequestConfigurationPtrOutput) MaxConcurrentRequestsPerInstance() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RequestConfiguration) *int {
		if v == nil {
			return nil
		}
		return v.MaxConcurrentRequestsPerInstance
	}).(pulumi.IntPtrOutput)
}

// The scoring timeout in ISO 8601 format.
// Defaults to 5000ms.
func (o RequestConfigurationPtrOutput) RequestTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RequestConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.RequestTimeout
	}).(pulumi.StringPtrOutput)
}

// Scoring requests configuration.
type RequestConfigurationResponse struct {
	// The number of maximum concurrent requests per node allowed per deployment. Defaults to 1.
	MaxConcurrentRequestsPerInstance *int `pulumi:"maxConcurrentRequestsPerInstance"`
	// The scoring timeout in ISO 8601 format.
	// Defaults to 5000ms.
	RequestTimeout *string `pulumi:"requestTimeout"`
}

// Defaults sets the appropriate defaults for RequestConfigurationResponse
func (val *RequestConfigurationResponse) Defaults() *RequestConfigurationResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.MaxConcurrentRequestsPerInstance == nil {
		maxConcurrentRequestsPerInstance_ := 1
		tmp.MaxConcurrentRequestsPerInstance = &maxConcurrentRequestsPerInstance_
	}
	if tmp.RequestTimeout == nil {
		requestTimeout_ := "PT5S"
		tmp.RequestTimeout = &requestTimeout_
	}
	return &tmp
}

// Scoring requests configuration.
type RequestConfigurationResponseOutput struct{ *pulumi.OutputState }

func (RequestConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestConfigurationResponse)(nil)).Elem()
}

func (o RequestConfigurationResponseOutput) ToRequestConfigurationResponseOutput() RequestConfigurationResponseOutput {
	return o
}

func (o RequestConfigurationResponseOutput) ToRequestConfigurationResponseOutputWithContext(ctx context.Context) RequestConfigurationResponseOutput {
	return o
}

// The number of maximum concurrent requests per node allowed per deployment. Defaults to 1.
func (o RequestConfigurationResponseOutput) MaxConcurrentRequestsPerInstance() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RequestConfigurationResponse) *int { return v.MaxConcurrentRequestsPerInstance }).(pulumi.IntPtrOutput)
}

// The scoring timeout in ISO 8601 format.
// Defaults to 5000ms.
func (o RequestConfigurationResponseOutput) RequestTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RequestConfigurationResponse) *string { return v.RequestTimeout }).(pulumi.StringPtrOutput)
}

type RequestConfigurationResponsePtrOutput struct{ *pulumi.OutputState }

func (RequestConfigurationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RequestConfigurationResponse)(nil)).Elem()
}

func (o RequestConfigurationResponsePtrOutput) ToRequestConfigurationResponsePtrOutput() RequestConfigurationResponsePtrOutput {
	return o
}

func (o RequestConfigurationResponsePtrOutput) ToRequestConfigurationResponsePtrOutputWithContext(ctx context.Context) RequestConfigurationResponsePtrOutput {
	return o
}

func (o RequestConfigurationResponsePtrOutput) Elem() RequestConfigurationResponseOutput {
	return o.ApplyT(func(v *RequestConfigurationResponse) RequestConfigurationResponse {
		if v != nil {
			return *v
		}
		var ret RequestConfigurationResponse
		return ret
	}).(RequestConfigurationResponseOutput)
}

// The number of maximum concurrent requests per node allowed per deployment. Defaults to 1.
func (o RequestConfigurationResponsePtrOutput) MaxConcurrentRequestsPerInstance() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RequestConfigurationResponse) *int {
		if v == nil {
			return nil
		}
		return v.MaxConcurrentRequestsPerInstance
	}).(pulumi.IntPtrOutput)
}

// The scoring timeout in ISO 8601 format.
// Defaults to 5000ms.
func (o RequestConfigurationResponsePtrOutput) RequestTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RequestConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.RequestTimeout
	}).(pulumi.StringPtrOutput)
}

type RequestLogging struct {
	// For payload logging, we only collect payload by default. If customers also want to collect the specified headers, they can set them in captureHeaders so that backend will collect those headers along with payload.
	CaptureHeaders []string `pulumi:"captureHeaders"`
}

type RequestLoggingResponse struct {
	// For payload logging, we only collect payload by default. If customers also want to collect the specified headers, they can set them in captureHeaders so that backend will collect those headers along with payload.
	CaptureHeaders []string `pulumi:"captureHeaders"`
}

// Represents a resource ID. For example, for a subnet, it is the resource URL for the subnet.
type ResourceId struct {
	// The ID of the resource
	Id string `pulumi:"id"`
}

// Represents a resource ID. For example, for a subnet, it is the resource URL for the subnet.
type ResourceIdResponse struct {
	// The ID of the resource
	Id string `pulumi:"id"`
}

// Rolling input data definition.
type RollingInputData struct {
	// Mapping of column names to special uses.
	Columns map[string]string `pulumi:"columns"`
	// The context metadata of the data source.
	DataContext *string `pulumi:"dataContext"`
	// Monitoring input data type enum.
	// Expected value is 'Rolling'.
	InputDataType string `pulumi:"inputDataType"`
	// [Required] Specifies the type of job.
	JobInputType string `pulumi:"jobInputType"`
	// The ARM resource ID of the component resource used to preprocess the data.
	PreprocessingComponentId *string `pulumi:"preprocessingComponentId"`
	// [Required] Input Asset URI.
	Uri string `pulumi:"uri"`
	// [Required] The time offset between the end of the data window and the monitor's current run time.
	WindowOffset string `pulumi:"windowOffset"`
	// [Required] The size of the trailing data window.
	WindowSize string `pulumi:"windowSize"`
}

// Rolling input data definition.
type RollingInputDataResponse struct {
	// Mapping of column names to special uses.
	Columns map[string]string `pulumi:"columns"`
	// The context metadata of the data source.
	DataContext *string `pulumi:"dataContext"`
	// Monitoring input data type enum.
	// Expected value is 'Rolling'.
	InputDataType string `pulumi:"inputDataType"`
	// [Required] Specifies the type of job.
	JobInputType string `pulumi:"jobInputType"`
	// The ARM resource ID of the component resource used to preprocess the data.
	PreprocessingComponentId *string `pulumi:"preprocessingComponentId"`
	// [Required] Input Asset URI.
	Uri string `pulumi:"uri"`
	// [Required] The time offset between the end of the data window and the monitor's current run time.
	WindowOffset string `pulumi:"windowOffset"`
	// [Required] The size of the trailing data window.
	WindowSize string `pulumi:"windowSize"`
}

type Route struct {
	// [Required] The path for the route.
	Path string `pulumi:"path"`
	// [Required] The port for the route.
	Port int `pulumi:"port"`
}

// RouteInput is an input type that accepts RouteArgs and RouteOutput values.
// You can construct a concrete instance of `RouteInput` via:
//
//	RouteArgs{...}
type RouteInput interface {
	pulumi.Input

	ToRouteOutput() RouteOutput
	ToRouteOutputWithContext(context.Context) RouteOutput
}

type RouteArgs struct {
	// [Required] The path for the route.
	Path pulumi.StringInput `pulumi:"path"`
	// [Required] The port for the route.
	Port pulumi.IntInput `pulumi:"port"`
}

func (RouteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Route)(nil)).Elem()
}

func (i RouteArgs) ToRouteOutput() RouteOutput {
	return i.ToRouteOutputWithContext(context.Background())
}

func (i RouteArgs) ToRouteOutputWithContext(ctx context.Context) RouteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteOutput)
}

func (i RouteArgs) ToRoutePtrOutput() RoutePtrOutput {
	return i.ToRoutePtrOutputWithContext(context.Background())
}

func (i RouteArgs) ToRoutePtrOutputWithContext(ctx context.Context) RoutePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteOutput).ToRoutePtrOutputWithContext(ctx)
}

// RoutePtrInput is an input type that accepts RouteArgs, RoutePtr and RoutePtrOutput values.
// You can construct a concrete instance of `RoutePtrInput` via:
//
//	        RouteArgs{...}
//
//	or:
//
//	        nil
type RoutePtrInput interface {
	pulumi.Input

	ToRoutePtrOutput() RoutePtrOutput
	ToRoutePtrOutputWithContext(context.Context) RoutePtrOutput
}

type routePtrType RouteArgs

func RoutePtr(v *RouteArgs) RoutePtrInput {
	return (*routePtrType)(v)
}

func (*routePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Route)(nil)).Elem()
}

func (i *routePtrType) ToRoutePtrOutput() RoutePtrOutput {
	return i.ToRoutePtrOutputWithContext(context.Background())
}

func (i *routePtrType) ToRoutePtrOutputWithContext(ctx context.Context) RoutePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoutePtrOutput)
}

type RouteOutput struct{ *pulumi.OutputState }

func (RouteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Route)(nil)).Elem()
}

func (o RouteOutput) ToRouteOutput() RouteOutput {
	return o
}

func (o RouteOutput) ToRouteOutputWithContext(ctx context.Context) RouteOutput {
	return o
}

func (o RouteOutput) ToRoutePtrOutput() RoutePtrOutput {
	return o.ToRoutePtrOutputWithContext(context.Background())
}

func (o RouteOutput) ToRoutePtrOutputWithContext(ctx context.Context) RoutePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Route) *Route {
		return &v
	}).(RoutePtrOutput)
}

// [Required] The path for the route.
func (o RouteOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v Route) string { return v.Path }).(pulumi.StringOutput)
}

// [Required] The port for the route.
func (o RouteOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v Route) int { return v.Port }).(pulumi.IntOutput)
}

type RoutePtrOutput struct{ *pulumi.OutputState }

func (RoutePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Route)(nil)).Elem()
}

func (o RoutePtrOutput) ToRoutePtrOutput() RoutePtrOutput {
	return o
}

func (o RoutePtrOutput) ToRoutePtrOutputWithContext(ctx context.Context) RoutePtrOutput {
	return o
}

func (o RoutePtrOutput) Elem() RouteOutput {
	return o.ApplyT(func(v *Route) Route {
		if v != nil {
			return *v
		}
		var ret Route
		return ret
	}).(RouteOutput)
}

// [Required] The path for the route.
func (o RoutePtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Route) *string {
		if v == nil {
			return nil
		}
		return &v.Path
	}).(pulumi.StringPtrOutput)
}

// [Required] The port for the route.
func (o RoutePtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Route) *int {
		if v == nil {
			return nil
		}
		return &v.Port
	}).(pulumi.IntPtrOutput)
}

type RouteResponse struct {
	// [Required] The path for the route.
	Path string `pulumi:"path"`
	// [Required] The port for the route.
	Port int `pulumi:"port"`
}

type RouteResponseOutput struct{ *pulumi.OutputState }

func (RouteResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteResponse)(nil)).Elem()
}

func (o RouteResponseOutput) ToRouteResponseOutput() RouteResponseOutput {
	return o
}

func (o RouteResponseOutput) ToRouteResponseOutputWithContext(ctx context.Context) RouteResponseOutput {
	return o
}

// [Required] The path for the route.
func (o RouteResponseOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v RouteResponse) string { return v.Path }).(pulumi.StringOutput)
}

// [Required] The port for the route.
func (o RouteResponseOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v RouteResponse) int { return v.Port }).(pulumi.IntOutput)
}

type RouteResponsePtrOutput struct{ *pulumi.OutputState }

func (RouteResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteResponse)(nil)).Elem()
}

func (o RouteResponsePtrOutput) ToRouteResponsePtrOutput() RouteResponsePtrOutput {
	return o
}

func (o RouteResponsePtrOutput) ToRouteResponsePtrOutputWithContext(ctx context.Context) RouteResponsePtrOutput {
	return o
}

func (o RouteResponsePtrOutput) Elem() RouteResponseOutput {
	return o.ApplyT(func(v *RouteResponse) RouteResponse {
		if v != nil {
			return *v
		}
		var ret RouteResponse
		return ret
	}).(RouteResponseOutput)
}

// [Required] The path for the route.
func (o RouteResponsePtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Path
	}).(pulumi.StringPtrOutput)
}

// [Required] The port for the route.
func (o RouteResponsePtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RouteResponse) *int {
		if v == nil {
			return nil
		}
		return &v.Port
	}).(pulumi.IntPtrOutput)
}

type SASAuthTypeWorkspaceConnectionProperties struct {
	// Authentication type of the connection target
	// Expected value is 'SAS'.
	AuthType string `pulumi:"authType"`
	// Category of the connection
	Category    *string                                   `pulumi:"category"`
	Credentials *WorkspaceConnectionSharedAccessSignature `pulumi:"credentials"`
	ExpiryTime  *string                                   `pulumi:"expiryTime"`
	// whether this connection will be shared to all the project workspace under the hub
	IsSharedToAll *bool       `pulumi:"isSharedToAll"`
	Metadata      interface{} `pulumi:"metadata"`
	Target        *string     `pulumi:"target"`
}

type SASAuthTypeWorkspaceConnectionPropertiesResponse struct {
	// Authentication type of the connection target
	// Expected value is 'SAS'.
	AuthType string `pulumi:"authType"`
	// Category of the connection
	Category *string `pulumi:"category"`
	// The arm id of the workspace which created this connection
	CreatedByWorkspaceArmId string                                            `pulumi:"createdByWorkspaceArmId"`
	Credentials             *WorkspaceConnectionSharedAccessSignatureResponse `pulumi:"credentials"`
	ExpiryTime              *string                                           `pulumi:"expiryTime"`
	// whether this connection will be shared to all the project workspace under the hub
	IsSharedToAll *bool       `pulumi:"isSharedToAll"`
	Metadata      interface{} `pulumi:"metadata"`
	Target        *string     `pulumi:"target"`
}

// SAS datastore credentials configuration.
type SasDatastoreCredentials struct {
	// Enum to determine the datastore credentials type.
	// Expected value is 'Sas'.
	CredentialsType string `pulumi:"credentialsType"`
	// [Required] Storage container secrets.
	Secrets SasDatastoreSecrets `pulumi:"secrets"`
}

// SAS datastore credentials configuration.
type SasDatastoreCredentialsResponse struct {
	// Enum to determine the datastore credentials type.
	// Expected value is 'Sas'.
	CredentialsType string `pulumi:"credentialsType"`
}

// Datastore SAS secrets.
type SasDatastoreSecrets struct {
	// Storage container SAS token.
	SasToken *string `pulumi:"sasToken"`
	// Enum to determine the datastore secrets type.
	// Expected value is 'Sas'.
	SecretsType string `pulumi:"secretsType"`
}

// scale settings for AML Compute
type ScaleSettings struct {
	// Max number of nodes to use
	MaxNodeCount int `pulumi:"maxNodeCount"`
	// Min number of nodes to use
	MinNodeCount *int `pulumi:"minNodeCount"`
	// Node Idle Time before scaling down amlCompute. This string needs to be in the RFC Format.
	NodeIdleTimeBeforeScaleDown *string `pulumi:"nodeIdleTimeBeforeScaleDown"`
}

// Defaults sets the appropriate defaults for ScaleSettings
func (val *ScaleSettings) Defaults() *ScaleSettings {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.MinNodeCount == nil {
		minNodeCount_ := 0
		tmp.MinNodeCount = &minNodeCount_
	}
	return &tmp
}

// scale settings for AML Compute
type ScaleSettingsResponse struct {
	// Max number of nodes to use
	MaxNodeCount int `pulumi:"maxNodeCount"`
	// Min number of nodes to use
	MinNodeCount *int `pulumi:"minNodeCount"`
	// Node Idle Time before scaling down amlCompute. This string needs to be in the RFC Format.
	NodeIdleTimeBeforeScaleDown *string `pulumi:"nodeIdleTimeBeforeScaleDown"`
}

// Defaults sets the appropriate defaults for ScaleSettingsResponse
func (val *ScaleSettingsResponse) Defaults() *ScaleSettingsResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.MinNodeCount == nil {
		minNodeCount_ := 0
		tmp.MinNodeCount = &minNodeCount_
	}
	return &tmp
}

// Base definition of a schedule
type ScheduleType struct {
	// [Required] Specifies the action of the schedule
	Action interface{} `pulumi:"action"`
	// The asset description text.
	Description *string `pulumi:"description"`
	// Display name of schedule.
	DisplayName *string `pulumi:"displayName"`
	// Is the schedule enabled?
	IsEnabled *bool `pulumi:"isEnabled"`
	// The asset property dictionary.
	Properties map[string]string `pulumi:"properties"`
	// Tag dictionary. Tags can be added, removed, and updated.
	Tags map[string]string `pulumi:"tags"`
	// [Required] Specifies the trigger details
	Trigger interface{} `pulumi:"trigger"`
}

// Defaults sets the appropriate defaults for ScheduleType
func (val *ScheduleType) Defaults() *ScheduleType {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.IsEnabled == nil {
		isEnabled_ := true
		tmp.IsEnabled = &isEnabled_
	}
	return &tmp
}

// ScheduleTypeInput is an input type that accepts ScheduleTypeArgs and ScheduleTypeOutput values.
// You can construct a concrete instance of `ScheduleTypeInput` via:
//
//	ScheduleTypeArgs{...}
type ScheduleTypeInput interface {
	pulumi.Input

	ToScheduleTypeOutput() ScheduleTypeOutput
	ToScheduleTypeOutputWithContext(context.Context) ScheduleTypeOutput
}

// Base definition of a schedule
type ScheduleTypeArgs struct {
	// [Required] Specifies the action of the schedule
	Action pulumi.Input `pulumi:"action"`
	// The asset description text.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Display name of schedule.
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	// Is the schedule enabled?
	IsEnabled pulumi.BoolPtrInput `pulumi:"isEnabled"`
	// The asset property dictionary.
	Properties pulumi.StringMapInput `pulumi:"properties"`
	// Tag dictionary. Tags can be added, removed, and updated.
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// [Required] Specifies the trigger details
	Trigger pulumi.Input `pulumi:"trigger"`
}

// Defaults sets the appropriate defaults for ScheduleTypeArgs
func (val *ScheduleTypeArgs) Defaults() *ScheduleTypeArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.IsEnabled == nil {
		tmp.IsEnabled = pulumi.BoolPtr(true)
	}
	return &tmp
}
func (ScheduleTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduleType)(nil)).Elem()
}

func (i ScheduleTypeArgs) ToScheduleTypeOutput() ScheduleTypeOutput {
	return i.ToScheduleTypeOutputWithContext(context.Background())
}

func (i ScheduleTypeArgs) ToScheduleTypeOutputWithContext(ctx context.Context) ScheduleTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduleTypeOutput)
}

// Base definition of a schedule
type ScheduleTypeOutput struct{ *pulumi.OutputState }

func (ScheduleTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduleType)(nil)).Elem()
}

func (o ScheduleTypeOutput) ToScheduleTypeOutput() ScheduleTypeOutput {
	return o
}

func (o ScheduleTypeOutput) ToScheduleTypeOutputWithContext(ctx context.Context) ScheduleTypeOutput {
	return o
}

// [Required] Specifies the action of the schedule
func (o ScheduleTypeOutput) Action() pulumi.AnyOutput {
	return o.ApplyT(func(v ScheduleType) interface{} { return v.Action }).(pulumi.AnyOutput)
}

// The asset description text.
func (o ScheduleTypeOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScheduleType) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Display name of schedule.
func (o ScheduleTypeOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScheduleType) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// Is the schedule enabled?
func (o ScheduleTypeOutput) IsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ScheduleType) *bool { return v.IsEnabled }).(pulumi.BoolPtrOutput)
}

// The asset property dictionary.
func (o ScheduleTypeOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v ScheduleType) map[string]string { return v.Properties }).(pulumi.StringMapOutput)
}

// Tag dictionary. Tags can be added, removed, and updated.
func (o ScheduleTypeOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v ScheduleType) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// [Required] Specifies the trigger details
func (o ScheduleTypeOutput) Trigger() pulumi.AnyOutput {
	return o.ApplyT(func(v ScheduleType) interface{} { return v.Trigger }).(pulumi.AnyOutput)
}

type ScheduleBase struct {
	// A system assigned id for the schedule.
	Id *string `pulumi:"id"`
	// The current deployment state of schedule.
	ProvisioningStatus *string `pulumi:"provisioningStatus"`
	// Is the schedule enabled or disabled?
	Status *string `pulumi:"status"`
}

type ScheduleBaseResponse struct {
	// A system assigned id for the schedule.
	Id *string `pulumi:"id"`
	// The current deployment state of schedule.
	ProvisioningStatus *string `pulumi:"provisioningStatus"`
	// Is the schedule enabled or disabled?
	Status *string `pulumi:"status"`
}

// Base definition of a schedule
type ScheduleResponse struct {
	// [Required] Specifies the action of the schedule
	Action interface{} `pulumi:"action"`
	// The asset description text.
	Description *string `pulumi:"description"`
	// Display name of schedule.
	DisplayName *string `pulumi:"displayName"`
	// Is the schedule enabled?
	IsEnabled *bool `pulumi:"isEnabled"`
	// The asset property dictionary.
	Properties map[string]string `pulumi:"properties"`
	// Provisioning state for the schedule.
	ProvisioningState string `pulumi:"provisioningState"`
	// Tag dictionary. Tags can be added, removed, and updated.
	Tags map[string]string `pulumi:"tags"`
	// [Required] Specifies the trigger details
	Trigger interface{} `pulumi:"trigger"`
}

// Defaults sets the appropriate defaults for ScheduleResponse
func (val *ScheduleResponse) Defaults() *ScheduleResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.IsEnabled == nil {
		isEnabled_ := true
		tmp.IsEnabled = &isEnabled_
	}
	return &tmp
}

// Base definition of a schedule
type ScheduleResponseOutput struct{ *pulumi.OutputState }

func (ScheduleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduleResponse)(nil)).Elem()
}

func (o ScheduleResponseOutput) ToScheduleResponseOutput() ScheduleResponseOutput {
	return o
}

func (o ScheduleResponseOutput) ToScheduleResponseOutputWithContext(ctx context.Context) ScheduleResponseOutput {
	return o
}

// [Required] Specifies the action of the schedule
func (o ScheduleResponseOutput) Action() pulumi.AnyOutput {
	return o.ApplyT(func(v ScheduleResponse) interface{} { return v.Action }).(pulumi.AnyOutput)
}

// The asset description text.
func (o ScheduleResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScheduleResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Display name of schedule.
func (o ScheduleResponseOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScheduleResponse) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// Is the schedule enabled?
func (o ScheduleResponseOutput) IsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ScheduleResponse) *bool { return v.IsEnabled }).(pulumi.BoolPtrOutput)
}

// The asset property dictionary.
func (o ScheduleResponseOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v ScheduleResponse) map[string]string { return v.Properties }).(pulumi.StringMapOutput)
}

// Provisioning state for the schedule.
func (o ScheduleResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v ScheduleResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Tag dictionary. Tags can be added, removed, and updated.
func (o ScheduleResponseOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v ScheduleResponse) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// [Required] Specifies the trigger details
func (o ScheduleResponseOutput) Trigger() pulumi.AnyOutput {
	return o.ApplyT(func(v ScheduleResponse) interface{} { return v.Trigger }).(pulumi.AnyOutput)
}

// Script reference
type ScriptReference struct {
	// Optional command line arguments passed to the script to run.
	ScriptArguments *string `pulumi:"scriptArguments"`
	// The location of scripts in the mounted volume.
	ScriptData *string `pulumi:"scriptData"`
	// The storage source of the script: inline, workspace.
	ScriptSource *string `pulumi:"scriptSource"`
	// Optional time period passed to timeout command.
	Timeout *string `pulumi:"timeout"`
}

// Script reference
type ScriptReferenceResponse struct {
	// Optional command line arguments passed to the script to run.
	ScriptArguments *string `pulumi:"scriptArguments"`
	// The location of scripts in the mounted volume.
	ScriptData *string `pulumi:"scriptData"`
	// The storage source of the script: inline, workspace.
	ScriptSource *string `pulumi:"scriptSource"`
	// Optional time period passed to timeout command.
	Timeout *string `pulumi:"timeout"`
}

// Customized setup scripts
type ScriptsToExecute struct {
	// Script that's run only once during provision of the compute.
	CreationScript *ScriptReference `pulumi:"creationScript"`
	// Script that's run every time the machine starts.
	StartupScript *ScriptReference `pulumi:"startupScript"`
}

// Customized setup scripts
type ScriptsToExecuteResponse struct {
	// Script that's run only once during provision of the compute.
	CreationScript *ScriptReferenceResponse `pulumi:"creationScript"`
	// Script that's run every time the machine starts.
	StartupScript *ScriptReferenceResponse `pulumi:"startupScript"`
}

// Secret Configuration definition.
type SecretConfiguration struct {
	// Secret Uri.
	// Sample Uri : https://myvault.vault.azure.net/secrets/mysecretname/secretversion
	Uri *string `pulumi:"uri"`
	// Name of secret in workspace key vault.
	WorkspaceSecretName *string `pulumi:"workspaceSecretName"`
}

// SecretConfigurationInput is an input type that accepts SecretConfigurationArgs and SecretConfigurationOutput values.
// You can construct a concrete instance of `SecretConfigurationInput` via:
//
//	SecretConfigurationArgs{...}
type SecretConfigurationInput interface {
	pulumi.Input

	ToSecretConfigurationOutput() SecretConfigurationOutput
	ToSecretConfigurationOutputWithContext(context.Context) SecretConfigurationOutput
}

// Secret Configuration definition.
type SecretConfigurationArgs struct {
	// Secret Uri.
	// Sample Uri : https://myvault.vault.azure.net/secrets/mysecretname/secretversion
	Uri pulumi.StringPtrInput `pulumi:"uri"`
	// Name of secret in workspace key vault.
	WorkspaceSecretName pulumi.StringPtrInput `pulumi:"workspaceSecretName"`
}

func (SecretConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretConfiguration)(nil)).Elem()
}

func (i SecretConfigurationArgs) ToSecretConfigurationOutput() SecretConfigurationOutput {
	return i.ToSecretConfigurationOutputWithContext(context.Background())
}

func (i SecretConfigurationArgs) ToSecretConfigurationOutputWithContext(ctx context.Context) SecretConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretConfigurationOutput)
}

// SecretConfigurationMapInput is an input type that accepts SecretConfigurationMap and SecretConfigurationMapOutput values.
// You can construct a concrete instance of `SecretConfigurationMapInput` via:
//
//	SecretConfigurationMap{ "key": SecretConfigurationArgs{...} }
type SecretConfigurationMapInput interface {
	pulumi.Input

	ToSecretConfigurationMapOutput() SecretConfigurationMapOutput
	ToSecretConfigurationMapOutputWithContext(context.Context) SecretConfigurationMapOutput
}

type SecretConfigurationMap map[string]SecretConfigurationInput

func (SecretConfigurationMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]SecretConfiguration)(nil)).Elem()
}

func (i SecretConfigurationMap) ToSecretConfigurationMapOutput() SecretConfigurationMapOutput {
	return i.ToSecretConfigurationMapOutputWithContext(context.Background())
}

func (i SecretConfigurationMap) ToSecretConfigurationMapOutputWithContext(ctx context.Context) SecretConfigurationMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretConfigurationMapOutput)
}

// Secret Configuration definition.
type SecretConfigurationOutput struct{ *pulumi.OutputState }

func (SecretConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretConfiguration)(nil)).Elem()
}

func (o SecretConfigurationOutput) ToSecretConfigurationOutput() SecretConfigurationOutput {
	return o
}

func (o SecretConfigurationOutput) ToSecretConfigurationOutputWithContext(ctx context.Context) SecretConfigurationOutput {
	return o
}

// Secret Uri.
// Sample Uri : https://myvault.vault.azure.net/secrets/mysecretname/secretversion
func (o SecretConfigurationOutput) Uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretConfiguration) *string { return v.Uri }).(pulumi.StringPtrOutput)
}

// Name of secret in workspace key vault.
func (o SecretConfigurationOutput) WorkspaceSecretName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretConfiguration) *string { return v.WorkspaceSecretName }).(pulumi.StringPtrOutput)
}

type SecretConfigurationMapOutput struct{ *pulumi.OutputState }

func (SecretConfigurationMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]SecretConfiguration)(nil)).Elem()
}

func (o SecretConfigurationMapOutput) ToSecretConfigurationMapOutput() SecretConfigurationMapOutput {
	return o
}

func (o SecretConfigurationMapOutput) ToSecretConfigurationMapOutputWithContext(ctx context.Context) SecretConfigurationMapOutput {
	return o
}

func (o SecretConfigurationMapOutput) MapIndex(k pulumi.StringInput) SecretConfigurationOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) SecretConfiguration {
		return vs[0].(map[string]SecretConfiguration)[vs[1].(string)]
	}).(SecretConfigurationOutput)
}

// Secret Configuration definition.
type SecretConfigurationResponse struct {
	// Secret Uri.
	// Sample Uri : https://myvault.vault.azure.net/secrets/mysecretname/secretversion
	Uri *string `pulumi:"uri"`
	// Name of secret in workspace key vault.
	WorkspaceSecretName *string `pulumi:"workspaceSecretName"`
}

// Secret Configuration definition.
type SecretConfigurationResponseOutput struct{ *pulumi.OutputState }

func (SecretConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretConfigurationResponse)(nil)).Elem()
}

func (o SecretConfigurationResponseOutput) ToSecretConfigurationResponseOutput() SecretConfigurationResponseOutput {
	return o
}

func (o SecretConfigurationResponseOutput) ToSecretConfigurationResponseOutputWithContext(ctx context.Context) SecretConfigurationResponseOutput {
	return o
}

// Secret Uri.
// Sample Uri : https://myvault.vault.azure.net/secrets/mysecretname/secretversion
func (o SecretConfigurationResponseOutput) Uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretConfigurationResponse) *string { return v.Uri }).(pulumi.StringPtrOutput)
}

// Name of secret in workspace key vault.
func (o SecretConfigurationResponseOutput) WorkspaceSecretName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretConfigurationResponse) *string { return v.WorkspaceSecretName }).(pulumi.StringPtrOutput)
}

type SecretConfigurationResponseMapOutput struct{ *pulumi.OutputState }

func (SecretConfigurationResponseMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]SecretConfigurationResponse)(nil)).Elem()
}

func (o SecretConfigurationResponseMapOutput) ToSecretConfigurationResponseMapOutput() SecretConfigurationResponseMapOutput {
	return o
}

func (o SecretConfigurationResponseMapOutput) ToSecretConfigurationResponseMapOutputWithContext(ctx context.Context) SecretConfigurationResponseMapOutput {
	return o
}

func (o SecretConfigurationResponseMapOutput) MapIndex(k pulumi.StringInput) SecretConfigurationResponseOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) SecretConfigurationResponse {
		return vs[0].(map[string]SecretConfigurationResponse)[vs[1].(string)]
	}).(SecretConfigurationResponseOutput)
}

type ServerlessComputeSettings struct {
	// The resource ID of an existing virtual network subnet in which serverless compute nodes should be deployed
	ServerlessComputeCustomSubnet *string `pulumi:"serverlessComputeCustomSubnet"`
	// The flag to signal if serverless compute nodes deployed in custom vNet would have no public IP addresses for a workspace with private endpoint
	ServerlessComputeNoPublicIP *bool `pulumi:"serverlessComputeNoPublicIP"`
}

// ServerlessComputeSettingsInput is an input type that accepts ServerlessComputeSettingsArgs and ServerlessComputeSettingsOutput values.
// You can construct a concrete instance of `ServerlessComputeSettingsInput` via:
//
//	ServerlessComputeSettingsArgs{...}
type ServerlessComputeSettingsInput interface {
	pulumi.Input

	ToServerlessComputeSettingsOutput() ServerlessComputeSettingsOutput
	ToServerlessComputeSettingsOutputWithContext(context.Context) ServerlessComputeSettingsOutput
}

type ServerlessComputeSettingsArgs struct {
	// The resource ID of an existing virtual network subnet in which serverless compute nodes should be deployed
	ServerlessComputeCustomSubnet pulumi.StringPtrInput `pulumi:"serverlessComputeCustomSubnet"`
	// The flag to signal if serverless compute nodes deployed in custom vNet would have no public IP addresses for a workspace with private endpoint
	ServerlessComputeNoPublicIP pulumi.BoolPtrInput `pulumi:"serverlessComputeNoPublicIP"`
}

func (ServerlessComputeSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerlessComputeSettings)(nil)).Elem()
}

func (i ServerlessComputeSettingsArgs) ToServerlessComputeSettingsOutput() ServerlessComputeSettingsOutput {
	return i.ToServerlessComputeSettingsOutputWithContext(context.Background())
}

func (i ServerlessComputeSettingsArgs) ToServerlessComputeSettingsOutputWithContext(ctx context.Context) ServerlessComputeSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerlessComputeSettingsOutput)
}

func (i ServerlessComputeSettingsArgs) ToServerlessComputeSettingsPtrOutput() ServerlessComputeSettingsPtrOutput {
	return i.ToServerlessComputeSettingsPtrOutputWithContext(context.Background())
}

func (i ServerlessComputeSettingsArgs) ToServerlessComputeSettingsPtrOutputWithContext(ctx context.Context) ServerlessComputeSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerlessComputeSettingsOutput).ToServerlessComputeSettingsPtrOutputWithContext(ctx)
}

// ServerlessComputeSettingsPtrInput is an input type that accepts ServerlessComputeSettingsArgs, ServerlessComputeSettingsPtr and ServerlessComputeSettingsPtrOutput values.
// You can construct a concrete instance of `ServerlessComputeSettingsPtrInput` via:
//
//	        ServerlessComputeSettingsArgs{...}
//
//	or:
//
//	        nil
type ServerlessComputeSettingsPtrInput interface {
	pulumi.Input

	ToServerlessComputeSettingsPtrOutput() ServerlessComputeSettingsPtrOutput
	ToServerlessComputeSettingsPtrOutputWithContext(context.Context) ServerlessComputeSettingsPtrOutput
}

type serverlessComputeSettingsPtrType ServerlessComputeSettingsArgs

func ServerlessComputeSettingsPtr(v *ServerlessComputeSettingsArgs) ServerlessComputeSettingsPtrInput {
	return (*serverlessComputeSettingsPtrType)(v)
}

func (*serverlessComputeSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServerlessComputeSettings)(nil)).Elem()
}

func (i *serverlessComputeSettingsPtrType) ToServerlessComputeSettingsPtrOutput() ServerlessComputeSettingsPtrOutput {
	return i.ToServerlessComputeSettingsPtrOutputWithContext(context.Background())
}

func (i *serverlessComputeSettingsPtrType) ToServerlessComputeSettingsPtrOutputWithContext(ctx context.Context) ServerlessComputeSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerlessComputeSettingsPtrOutput)
}

type ServerlessComputeSettingsOutput struct{ *pulumi.OutputState }

func (ServerlessComputeSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerlessComputeSettings)(nil)).Elem()
}

func (o ServerlessComputeSettingsOutput) ToServerlessComputeSettingsOutput() ServerlessComputeSettingsOutput {
	return o
}

func (o ServerlessComputeSettingsOutput) ToServerlessComputeSettingsOutputWithContext(ctx context.Context) ServerlessComputeSettingsOutput {
	return o
}

func (o ServerlessComputeSettingsOutput) ToServerlessComputeSettingsPtrOutput() ServerlessComputeSettingsPtrOutput {
	return o.ToServerlessComputeSettingsPtrOutputWithContext(context.Background())
}

func (o ServerlessComputeSettingsOutput) ToServerlessComputeSettingsPtrOutputWithContext(ctx context.Context) ServerlessComputeSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServerlessComputeSettings) *ServerlessComputeSettings {
		return &v
	}).(ServerlessComputeSettingsPtrOutput)
}

// The resource ID of an existing virtual network subnet in which serverless compute nodes should be deployed
func (o ServerlessComputeSettingsOutput) ServerlessComputeCustomSubnet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServerlessComputeSettings) *string { return v.ServerlessComputeCustomSubnet }).(pulumi.StringPtrOutput)
}

// The flag to signal if serverless compute nodes deployed in custom vNet would have no public IP addresses for a workspace with private endpoint
func (o ServerlessComputeSettingsOutput) ServerlessComputeNoPublicIP() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServerlessComputeSettings) *bool { return v.ServerlessComputeNoPublicIP }).(pulumi.BoolPtrOutput)
}

type ServerlessComputeSettingsPtrOutput struct{ *pulumi.OutputState }

func (ServerlessComputeSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServerlessComputeSettings)(nil)).Elem()
}

func (o ServerlessComputeSettingsPtrOutput) ToServerlessComputeSettingsPtrOutput() ServerlessComputeSettingsPtrOutput {
	return o
}

func (o ServerlessComputeSettingsPtrOutput) ToServerlessComputeSettingsPtrOutputWithContext(ctx context.Context) ServerlessComputeSettingsPtrOutput {
	return o
}

func (o ServerlessComputeSettingsPtrOutput) Elem() ServerlessComputeSettingsOutput {
	return o.ApplyT(func(v *ServerlessComputeSettings) ServerlessComputeSettings {
		if v != nil {
			return *v
		}
		var ret ServerlessComputeSettings
		return ret
	}).(ServerlessComputeSettingsOutput)
}

// The resource ID of an existing virtual network subnet in which serverless compute nodes should be deployed
func (o ServerlessComputeSettingsPtrOutput) ServerlessComputeCustomSubnet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServerlessComputeSettings) *string {
		if v == nil {
			return nil
		}
		return v.ServerlessComputeCustomSubnet
	}).(pulumi.StringPtrOutput)
}

// The flag to signal if serverless compute nodes deployed in custom vNet would have no public IP addresses for a workspace with private endpoint
func (o ServerlessComputeSettingsPtrOutput) ServerlessComputeNoPublicIP() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ServerlessComputeSettings) *bool {
		if v == nil {
			return nil
		}
		return v.ServerlessComputeNoPublicIP
	}).(pulumi.BoolPtrOutput)
}

type ServerlessComputeSettingsResponse struct {
	// The resource ID of an existing virtual network subnet in which serverless compute nodes should be deployed
	ServerlessComputeCustomSubnet *string `pulumi:"serverlessComputeCustomSubnet"`
	// The flag to signal if serverless compute nodes deployed in custom vNet would have no public IP addresses for a workspace with private endpoint
	ServerlessComputeNoPublicIP *bool `pulumi:"serverlessComputeNoPublicIP"`
}

type ServerlessComputeSettingsResponseOutput struct{ *pulumi.OutputState }

func (ServerlessComputeSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerlessComputeSettingsResponse)(nil)).Elem()
}

func (o ServerlessComputeSettingsResponseOutput) ToServerlessComputeSettingsResponseOutput() ServerlessComputeSettingsResponseOutput {
	return o
}

func (o ServerlessComputeSettingsResponseOutput) ToServerlessComputeSettingsResponseOutputWithContext(ctx context.Context) ServerlessComputeSettingsResponseOutput {
	return o
}

// The resource ID of an existing virtual network subnet in which serverless compute nodes should be deployed
func (o ServerlessComputeSettingsResponseOutput) ServerlessComputeCustomSubnet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServerlessComputeSettingsResponse) *string { return v.ServerlessComputeCustomSubnet }).(pulumi.StringPtrOutput)
}

// The flag to signal if serverless compute nodes deployed in custom vNet would have no public IP addresses for a workspace with private endpoint
func (o ServerlessComputeSettingsResponseOutput) ServerlessComputeNoPublicIP() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServerlessComputeSettingsResponse) *bool { return v.ServerlessComputeNoPublicIP }).(pulumi.BoolPtrOutput)
}

type ServerlessComputeSettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (ServerlessComputeSettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServerlessComputeSettingsResponse)(nil)).Elem()
}

func (o ServerlessComputeSettingsResponsePtrOutput) ToServerlessComputeSettingsResponsePtrOutput() ServerlessComputeSettingsResponsePtrOutput {
	return o
}

func (o ServerlessComputeSettingsResponsePtrOutput) ToServerlessComputeSettingsResponsePtrOutputWithContext(ctx context.Context) ServerlessComputeSettingsResponsePtrOutput {
	return o
}

func (o ServerlessComputeSettingsResponsePtrOutput) Elem() ServerlessComputeSettingsResponseOutput {
	return o.ApplyT(func(v *ServerlessComputeSettingsResponse) ServerlessComputeSettingsResponse {
		if v != nil {
			return *v
		}
		var ret ServerlessComputeSettingsResponse
		return ret
	}).(ServerlessComputeSettingsResponseOutput)
}

// The resource ID of an existing virtual network subnet in which serverless compute nodes should be deployed
func (o ServerlessComputeSettingsResponsePtrOutput) ServerlessComputeCustomSubnet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServerlessComputeSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.ServerlessComputeCustomSubnet
	}).(pulumi.StringPtrOutput)
}

// The flag to signal if serverless compute nodes deployed in custom vNet would have no public IP addresses for a workspace with private endpoint
func (o ServerlessComputeSettingsResponsePtrOutput) ServerlessComputeNoPublicIP() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ServerlessComputeSettingsResponse) *bool {
		if v == nil {
			return nil
		}
		return v.ServerlessComputeNoPublicIP
	}).(pulumi.BoolPtrOutput)
}

type ServerlessEndpointType struct {
	// Specifies the authentication mode for the Serverless endpoint.
	AuthMode *string `pulumi:"authMode"`
	// Optional capacity reservation information for the endpoint. When specified, the Serverless Endpoint
	// will be allocated capacity from the specified capacity reservation group.
	CapacityReservation *ServerlessEndpointCapacityReservation `pulumi:"capacityReservation"`
	// [Required] The publisher-defined Serverless Offer to provision the endpoint with.
	Offer ServerlessOffer `pulumi:"offer"`
}

// ServerlessEndpointTypeInput is an input type that accepts ServerlessEndpointTypeArgs and ServerlessEndpointTypeOutput values.
// You can construct a concrete instance of `ServerlessEndpointTypeInput` via:
//
//	ServerlessEndpointTypeArgs{...}
type ServerlessEndpointTypeInput interface {
	pulumi.Input

	ToServerlessEndpointTypeOutput() ServerlessEndpointTypeOutput
	ToServerlessEndpointTypeOutputWithContext(context.Context) ServerlessEndpointTypeOutput
}

type ServerlessEndpointTypeArgs struct {
	// Specifies the authentication mode for the Serverless endpoint.
	AuthMode pulumi.StringPtrInput `pulumi:"authMode"`
	// Optional capacity reservation information for the endpoint. When specified, the Serverless Endpoint
	// will be allocated capacity from the specified capacity reservation group.
	CapacityReservation ServerlessEndpointCapacityReservationPtrInput `pulumi:"capacityReservation"`
	// [Required] The publisher-defined Serverless Offer to provision the endpoint with.
	Offer ServerlessOfferInput `pulumi:"offer"`
}

func (ServerlessEndpointTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerlessEndpointType)(nil)).Elem()
}

func (i ServerlessEndpointTypeArgs) ToServerlessEndpointTypeOutput() ServerlessEndpointTypeOutput {
	return i.ToServerlessEndpointTypeOutputWithContext(context.Background())
}

func (i ServerlessEndpointTypeArgs) ToServerlessEndpointTypeOutputWithContext(ctx context.Context) ServerlessEndpointTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerlessEndpointTypeOutput)
}

type ServerlessEndpointTypeOutput struct{ *pulumi.OutputState }

func (ServerlessEndpointTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerlessEndpointType)(nil)).Elem()
}

func (o ServerlessEndpointTypeOutput) ToServerlessEndpointTypeOutput() ServerlessEndpointTypeOutput {
	return o
}

func (o ServerlessEndpointTypeOutput) ToServerlessEndpointTypeOutputWithContext(ctx context.Context) ServerlessEndpointTypeOutput {
	return o
}

// Specifies the authentication mode for the Serverless endpoint.
func (o ServerlessEndpointTypeOutput) AuthMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServerlessEndpointType) *string { return v.AuthMode }).(pulumi.StringPtrOutput)
}

// Optional capacity reservation information for the endpoint. When specified, the Serverless Endpoint
// will be allocated capacity from the specified capacity reservation group.
func (o ServerlessEndpointTypeOutput) CapacityReservation() ServerlessEndpointCapacityReservationPtrOutput {
	return o.ApplyT(func(v ServerlessEndpointType) *ServerlessEndpointCapacityReservation { return v.CapacityReservation }).(ServerlessEndpointCapacityReservationPtrOutput)
}

// [Required] The publisher-defined Serverless Offer to provision the endpoint with.
func (o ServerlessEndpointTypeOutput) Offer() ServerlessOfferOutput {
	return o.ApplyT(func(v ServerlessEndpointType) ServerlessOffer { return v.Offer }).(ServerlessOfferOutput)
}

type ServerlessEndpointCapacityReservation struct {
	// [Required] Specifies a capacity reservation group ID to allocate capacity from.
	CapacityReservationGroupId string `pulumi:"capacityReservationGroupId"`
	// Specifies a capacity amount to reserve for this endpoint within the parent capacity reservation group.
	EndpointReservedCapacity *int `pulumi:"endpointReservedCapacity"`
}

// ServerlessEndpointCapacityReservationInput is an input type that accepts ServerlessEndpointCapacityReservationArgs and ServerlessEndpointCapacityReservationOutput values.
// You can construct a concrete instance of `ServerlessEndpointCapacityReservationInput` via:
//
//	ServerlessEndpointCapacityReservationArgs{...}
type ServerlessEndpointCapacityReservationInput interface {
	pulumi.Input

	ToServerlessEndpointCapacityReservationOutput() ServerlessEndpointCapacityReservationOutput
	ToServerlessEndpointCapacityReservationOutputWithContext(context.Context) ServerlessEndpointCapacityReservationOutput
}

type ServerlessEndpointCapacityReservationArgs struct {
	// [Required] Specifies a capacity reservation group ID to allocate capacity from.
	CapacityReservationGroupId pulumi.StringInput `pulumi:"capacityReservationGroupId"`
	// Specifies a capacity amount to reserve for this endpoint within the parent capacity reservation group.
	EndpointReservedCapacity pulumi.IntPtrInput `pulumi:"endpointReservedCapacity"`
}

func (ServerlessEndpointCapacityReservationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerlessEndpointCapacityReservation)(nil)).Elem()
}

func (i ServerlessEndpointCapacityReservationArgs) ToServerlessEndpointCapacityReservationOutput() ServerlessEndpointCapacityReservationOutput {
	return i.ToServerlessEndpointCapacityReservationOutputWithContext(context.Background())
}

func (i ServerlessEndpointCapacityReservationArgs) ToServerlessEndpointCapacityReservationOutputWithContext(ctx context.Context) ServerlessEndpointCapacityReservationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerlessEndpointCapacityReservationOutput)
}

func (i ServerlessEndpointCapacityReservationArgs) ToServerlessEndpointCapacityReservationPtrOutput() ServerlessEndpointCapacityReservationPtrOutput {
	return i.ToServerlessEndpointCapacityReservationPtrOutputWithContext(context.Background())
}

func (i ServerlessEndpointCapacityReservationArgs) ToServerlessEndpointCapacityReservationPtrOutputWithContext(ctx context.Context) ServerlessEndpointCapacityReservationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerlessEndpointCapacityReservationOutput).ToServerlessEndpointCapacityReservationPtrOutputWithContext(ctx)
}

// ServerlessEndpointCapacityReservationPtrInput is an input type that accepts ServerlessEndpointCapacityReservationArgs, ServerlessEndpointCapacityReservationPtr and ServerlessEndpointCapacityReservationPtrOutput values.
// You can construct a concrete instance of `ServerlessEndpointCapacityReservationPtrInput` via:
//
//	        ServerlessEndpointCapacityReservationArgs{...}
//
//	or:
//
//	        nil
type ServerlessEndpointCapacityReservationPtrInput interface {
	pulumi.Input

	ToServerlessEndpointCapacityReservationPtrOutput() ServerlessEndpointCapacityReservationPtrOutput
	ToServerlessEndpointCapacityReservationPtrOutputWithContext(context.Context) ServerlessEndpointCapacityReservationPtrOutput
}

type serverlessEndpointCapacityReservationPtrType ServerlessEndpointCapacityReservationArgs

func ServerlessEndpointCapacityReservationPtr(v *ServerlessEndpointCapacityReservationArgs) ServerlessEndpointCapacityReservationPtrInput {
	return (*serverlessEndpointCapacityReservationPtrType)(v)
}

func (*serverlessEndpointCapacityReservationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServerlessEndpointCapacityReservation)(nil)).Elem()
}

func (i *serverlessEndpointCapacityReservationPtrType) ToServerlessEndpointCapacityReservationPtrOutput() ServerlessEndpointCapacityReservationPtrOutput {
	return i.ToServerlessEndpointCapacityReservationPtrOutputWithContext(context.Background())
}

func (i *serverlessEndpointCapacityReservationPtrType) ToServerlessEndpointCapacityReservationPtrOutputWithContext(ctx context.Context) ServerlessEndpointCapacityReservationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerlessEndpointCapacityReservationPtrOutput)
}

type ServerlessEndpointCapacityReservationOutput struct{ *pulumi.OutputState }

func (ServerlessEndpointCapacityReservationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerlessEndpointCapacityReservation)(nil)).Elem()
}

func (o ServerlessEndpointCapacityReservationOutput) ToServerlessEndpointCapacityReservationOutput() ServerlessEndpointCapacityReservationOutput {
	return o
}

func (o ServerlessEndpointCapacityReservationOutput) ToServerlessEndpointCapacityReservationOutputWithContext(ctx context.Context) ServerlessEndpointCapacityReservationOutput {
	return o
}

func (o ServerlessEndpointCapacityReservationOutput) ToServerlessEndpointCapacityReservationPtrOutput() ServerlessEndpointCapacityReservationPtrOutput {
	return o.ToServerlessEndpointCapacityReservationPtrOutputWithContext(context.Background())
}

func (o ServerlessEndpointCapacityReservationOutput) ToServerlessEndpointCapacityReservationPtrOutputWithContext(ctx context.Context) ServerlessEndpointCapacityReservationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServerlessEndpointCapacityReservation) *ServerlessEndpointCapacityReservation {
		return &v
	}).(ServerlessEndpointCapacityReservationPtrOutput)
}

// [Required] Specifies a capacity reservation group ID to allocate capacity from.
func (o ServerlessEndpointCapacityReservationOutput) CapacityReservationGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v ServerlessEndpointCapacityReservation) string { return v.CapacityReservationGroupId }).(pulumi.StringOutput)
}

// Specifies a capacity amount to reserve for this endpoint within the parent capacity reservation group.
func (o ServerlessEndpointCapacityReservationOutput) EndpointReservedCapacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ServerlessEndpointCapacityReservation) *int { return v.EndpointReservedCapacity }).(pulumi.IntPtrOutput)
}

type ServerlessEndpointCapacityReservationPtrOutput struct{ *pulumi.OutputState }

func (ServerlessEndpointCapacityReservationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServerlessEndpointCapacityReservation)(nil)).Elem()
}

func (o ServerlessEndpointCapacityReservationPtrOutput) ToServerlessEndpointCapacityReservationPtrOutput() ServerlessEndpointCapacityReservationPtrOutput {
	return o
}

func (o ServerlessEndpointCapacityReservationPtrOutput) ToServerlessEndpointCapacityReservationPtrOutputWithContext(ctx context.Context) ServerlessEndpointCapacityReservationPtrOutput {
	return o
}

func (o ServerlessEndpointCapacityReservationPtrOutput) Elem() ServerlessEndpointCapacityReservationOutput {
	return o.ApplyT(func(v *ServerlessEndpointCapacityReservation) ServerlessEndpointCapacityReservation {
		if v != nil {
			return *v
		}
		var ret ServerlessEndpointCapacityReservation
		return ret
	}).(ServerlessEndpointCapacityReservationOutput)
}

// [Required] Specifies a capacity reservation group ID to allocate capacity from.
func (o ServerlessEndpointCapacityReservationPtrOutput) CapacityReservationGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServerlessEndpointCapacityReservation) *string {
		if v == nil {
			return nil
		}
		return &v.CapacityReservationGroupId
	}).(pulumi.StringPtrOutput)
}

// Specifies a capacity amount to reserve for this endpoint within the parent capacity reservation group.
func (o ServerlessEndpointCapacityReservationPtrOutput) EndpointReservedCapacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ServerlessEndpointCapacityReservation) *int {
		if v == nil {
			return nil
		}
		return v.EndpointReservedCapacity
	}).(pulumi.IntPtrOutput)
}

type ServerlessEndpointCapacityReservationResponse struct {
	// [Required] Specifies a capacity reservation group ID to allocate capacity from.
	CapacityReservationGroupId string `pulumi:"capacityReservationGroupId"`
	// Specifies a capacity amount to reserve for this endpoint within the parent capacity reservation group.
	EndpointReservedCapacity *int `pulumi:"endpointReservedCapacity"`
}

type ServerlessEndpointCapacityReservationResponseOutput struct{ *pulumi.OutputState }

func (ServerlessEndpointCapacityReservationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerlessEndpointCapacityReservationResponse)(nil)).Elem()
}

func (o ServerlessEndpointCapacityReservationResponseOutput) ToServerlessEndpointCapacityReservationResponseOutput() ServerlessEndpointCapacityReservationResponseOutput {
	return o
}

func (o ServerlessEndpointCapacityReservationResponseOutput) ToServerlessEndpointCapacityReservationResponseOutputWithContext(ctx context.Context) ServerlessEndpointCapacityReservationResponseOutput {
	return o
}

// [Required] Specifies a capacity reservation group ID to allocate capacity from.
func (o ServerlessEndpointCapacityReservationResponseOutput) CapacityReservationGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v ServerlessEndpointCapacityReservationResponse) string { return v.CapacityReservationGroupId }).(pulumi.StringOutput)
}

// Specifies a capacity amount to reserve for this endpoint within the parent capacity reservation group.
func (o ServerlessEndpointCapacityReservationResponseOutput) EndpointReservedCapacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ServerlessEndpointCapacityReservationResponse) *int { return v.EndpointReservedCapacity }).(pulumi.IntPtrOutput)
}

type ServerlessEndpointCapacityReservationResponsePtrOutput struct{ *pulumi.OutputState }

func (ServerlessEndpointCapacityReservationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServerlessEndpointCapacityReservationResponse)(nil)).Elem()
}

func (o ServerlessEndpointCapacityReservationResponsePtrOutput) ToServerlessEndpointCapacityReservationResponsePtrOutput() ServerlessEndpointCapacityReservationResponsePtrOutput {
	return o
}

func (o ServerlessEndpointCapacityReservationResponsePtrOutput) ToServerlessEndpointCapacityReservationResponsePtrOutputWithContext(ctx context.Context) ServerlessEndpointCapacityReservationResponsePtrOutput {
	return o
}

func (o ServerlessEndpointCapacityReservationResponsePtrOutput) Elem() ServerlessEndpointCapacityReservationResponseOutput {
	return o.ApplyT(func(v *ServerlessEndpointCapacityReservationResponse) ServerlessEndpointCapacityReservationResponse {
		if v != nil {
			return *v
		}
		var ret ServerlessEndpointCapacityReservationResponse
		return ret
	}).(ServerlessEndpointCapacityReservationResponseOutput)
}

// [Required] Specifies a capacity reservation group ID to allocate capacity from.
func (o ServerlessEndpointCapacityReservationResponsePtrOutput) CapacityReservationGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServerlessEndpointCapacityReservationResponse) *string {
		if v == nil {
			return nil
		}
		return &v.CapacityReservationGroupId
	}).(pulumi.StringPtrOutput)
}

// Specifies a capacity amount to reserve for this endpoint within the parent capacity reservation group.
func (o ServerlessEndpointCapacityReservationResponsePtrOutput) EndpointReservedCapacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ServerlessEndpointCapacityReservationResponse) *int {
		if v == nil {
			return nil
		}
		return v.EndpointReservedCapacity
	}).(pulumi.IntPtrOutput)
}

type ServerlessEndpointResponse struct {
	// Specifies the authentication mode for the Serverless endpoint.
	AuthMode *string `pulumi:"authMode"`
	// Optional capacity reservation information for the endpoint. When specified, the Serverless Endpoint
	// will be allocated capacity from the specified capacity reservation group.
	CapacityReservation *ServerlessEndpointCapacityReservationResponse `pulumi:"capacityReservation"`
	// The inference uri to target when making requests against the serverless endpoint
	InferenceEndpoint ServerlessInferenceEndpointResponse `pulumi:"inferenceEndpoint"`
	// [Required] The publisher-defined Serverless Offer to provision the endpoint with.
	Offer ServerlessOfferResponse `pulumi:"offer"`
	// Provisioning state for the endpoint.
	ProvisioningState string `pulumi:"provisioningState"`
}

type ServerlessEndpointResponseOutput struct{ *pulumi.OutputState }

func (ServerlessEndpointResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerlessEndpointResponse)(nil)).Elem()
}

func (o ServerlessEndpointResponseOutput) ToServerlessEndpointResponseOutput() ServerlessEndpointResponseOutput {
	return o
}

func (o ServerlessEndpointResponseOutput) ToServerlessEndpointResponseOutputWithContext(ctx context.Context) ServerlessEndpointResponseOutput {
	return o
}

// Specifies the authentication mode for the Serverless endpoint.
func (o ServerlessEndpointResponseOutput) AuthMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServerlessEndpointResponse) *string { return v.AuthMode }).(pulumi.StringPtrOutput)
}

// Optional capacity reservation information for the endpoint. When specified, the Serverless Endpoint
// will be allocated capacity from the specified capacity reservation group.
func (o ServerlessEndpointResponseOutput) CapacityReservation() ServerlessEndpointCapacityReservationResponsePtrOutput {
	return o.ApplyT(func(v ServerlessEndpointResponse) *ServerlessEndpointCapacityReservationResponse {
		return v.CapacityReservation
	}).(ServerlessEndpointCapacityReservationResponsePtrOutput)
}

// The inference uri to target when making requests against the serverless endpoint
func (o ServerlessEndpointResponseOutput) InferenceEndpoint() ServerlessInferenceEndpointResponseOutput {
	return o.ApplyT(func(v ServerlessEndpointResponse) ServerlessInferenceEndpointResponse { return v.InferenceEndpoint }).(ServerlessInferenceEndpointResponseOutput)
}

// [Required] The publisher-defined Serverless Offer to provision the endpoint with.
func (o ServerlessEndpointResponseOutput) Offer() ServerlessOfferResponseOutput {
	return o.ApplyT(func(v ServerlessEndpointResponse) ServerlessOfferResponse { return v.Offer }).(ServerlessOfferResponseOutput)
}

// Provisioning state for the endpoint.
func (o ServerlessEndpointResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v ServerlessEndpointResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

type ServerlessInferenceEndpointResponse struct {
	// Specifies any required headers to target this serverless endpoint.
	Headers map[string]string `pulumi:"headers"`
	// [Required] The inference uri to target when making requests against the Serverless Endpoint.
	Uri string `pulumi:"uri"`
}

type ServerlessInferenceEndpointResponseOutput struct{ *pulumi.OutputState }

func (ServerlessInferenceEndpointResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerlessInferenceEndpointResponse)(nil)).Elem()
}

func (o ServerlessInferenceEndpointResponseOutput) ToServerlessInferenceEndpointResponseOutput() ServerlessInferenceEndpointResponseOutput {
	return o
}

func (o ServerlessInferenceEndpointResponseOutput) ToServerlessInferenceEndpointResponseOutputWithContext(ctx context.Context) ServerlessInferenceEndpointResponseOutput {
	return o
}

// Specifies any required headers to target this serverless endpoint.
func (o ServerlessInferenceEndpointResponseOutput) Headers() pulumi.StringMapOutput {
	return o.ApplyT(func(v ServerlessInferenceEndpointResponse) map[string]string { return v.Headers }).(pulumi.StringMapOutput)
}

// [Required] The inference uri to target when making requests against the Serverless Endpoint.
func (o ServerlessInferenceEndpointResponseOutput) Uri() pulumi.StringOutput {
	return o.ApplyT(func(v ServerlessInferenceEndpointResponse) string { return v.Uri }).(pulumi.StringOutput)
}

type ServerlessOffer struct {
	// [Required] The name of the Serverless Offer
	OfferName string `pulumi:"offerName"`
	// [Required] Publisher name of the Serverless Offer
	Publisher string `pulumi:"publisher"`
}

// ServerlessOfferInput is an input type that accepts ServerlessOfferArgs and ServerlessOfferOutput values.
// You can construct a concrete instance of `ServerlessOfferInput` via:
//
//	ServerlessOfferArgs{...}
type ServerlessOfferInput interface {
	pulumi.Input

	ToServerlessOfferOutput() ServerlessOfferOutput
	ToServerlessOfferOutputWithContext(context.Context) ServerlessOfferOutput
}

type ServerlessOfferArgs struct {
	// [Required] The name of the Serverless Offer
	OfferName pulumi.StringInput `pulumi:"offerName"`
	// [Required] Publisher name of the Serverless Offer
	Publisher pulumi.StringInput `pulumi:"publisher"`
}

func (ServerlessOfferArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerlessOffer)(nil)).Elem()
}

func (i ServerlessOfferArgs) ToServerlessOfferOutput() ServerlessOfferOutput {
	return i.ToServerlessOfferOutputWithContext(context.Background())
}

func (i ServerlessOfferArgs) ToServerlessOfferOutputWithContext(ctx context.Context) ServerlessOfferOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerlessOfferOutput)
}

func (i ServerlessOfferArgs) ToServerlessOfferPtrOutput() ServerlessOfferPtrOutput {
	return i.ToServerlessOfferPtrOutputWithContext(context.Background())
}

func (i ServerlessOfferArgs) ToServerlessOfferPtrOutputWithContext(ctx context.Context) ServerlessOfferPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerlessOfferOutput).ToServerlessOfferPtrOutputWithContext(ctx)
}

// ServerlessOfferPtrInput is an input type that accepts ServerlessOfferArgs, ServerlessOfferPtr and ServerlessOfferPtrOutput values.
// You can construct a concrete instance of `ServerlessOfferPtrInput` via:
//
//	        ServerlessOfferArgs{...}
//
//	or:
//
//	        nil
type ServerlessOfferPtrInput interface {
	pulumi.Input

	ToServerlessOfferPtrOutput() ServerlessOfferPtrOutput
	ToServerlessOfferPtrOutputWithContext(context.Context) ServerlessOfferPtrOutput
}

type serverlessOfferPtrType ServerlessOfferArgs

func ServerlessOfferPtr(v *ServerlessOfferArgs) ServerlessOfferPtrInput {
	return (*serverlessOfferPtrType)(v)
}

func (*serverlessOfferPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServerlessOffer)(nil)).Elem()
}

func (i *serverlessOfferPtrType) ToServerlessOfferPtrOutput() ServerlessOfferPtrOutput {
	return i.ToServerlessOfferPtrOutputWithContext(context.Background())
}

func (i *serverlessOfferPtrType) ToServerlessOfferPtrOutputWithContext(ctx context.Context) ServerlessOfferPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerlessOfferPtrOutput)
}

type ServerlessOfferOutput struct{ *pulumi.OutputState }

func (ServerlessOfferOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerlessOffer)(nil)).Elem()
}

func (o ServerlessOfferOutput) ToServerlessOfferOutput() ServerlessOfferOutput {
	return o
}

func (o ServerlessOfferOutput) ToServerlessOfferOutputWithContext(ctx context.Context) ServerlessOfferOutput {
	return o
}

func (o ServerlessOfferOutput) ToServerlessOfferPtrOutput() ServerlessOfferPtrOutput {
	return o.ToServerlessOfferPtrOutputWithContext(context.Background())
}

func (o ServerlessOfferOutput) ToServerlessOfferPtrOutputWithContext(ctx context.Context) ServerlessOfferPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServerlessOffer) *ServerlessOffer {
		return &v
	}).(ServerlessOfferPtrOutput)
}

// [Required] The name of the Serverless Offer
func (o ServerlessOfferOutput) OfferName() pulumi.StringOutput {
	return o.ApplyT(func(v ServerlessOffer) string { return v.OfferName }).(pulumi.StringOutput)
}

// [Required] Publisher name of the Serverless Offer
func (o ServerlessOfferOutput) Publisher() pulumi.StringOutput {
	return o.ApplyT(func(v ServerlessOffer) string { return v.Publisher }).(pulumi.StringOutput)
}

type ServerlessOfferPtrOutput struct{ *pulumi.OutputState }

func (ServerlessOfferPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServerlessOffer)(nil)).Elem()
}

func (o ServerlessOfferPtrOutput) ToServerlessOfferPtrOutput() ServerlessOfferPtrOutput {
	return o
}

func (o ServerlessOfferPtrOutput) ToServerlessOfferPtrOutputWithContext(ctx context.Context) ServerlessOfferPtrOutput {
	return o
}

func (o ServerlessOfferPtrOutput) Elem() ServerlessOfferOutput {
	return o.ApplyT(func(v *ServerlessOffer) ServerlessOffer {
		if v != nil {
			return *v
		}
		var ret ServerlessOffer
		return ret
	}).(ServerlessOfferOutput)
}

// [Required] The name of the Serverless Offer
func (o ServerlessOfferPtrOutput) OfferName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServerlessOffer) *string {
		if v == nil {
			return nil
		}
		return &v.OfferName
	}).(pulumi.StringPtrOutput)
}

// [Required] Publisher name of the Serverless Offer
func (o ServerlessOfferPtrOutput) Publisher() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServerlessOffer) *string {
		if v == nil {
			return nil
		}
		return &v.Publisher
	}).(pulumi.StringPtrOutput)
}

type ServerlessOfferResponse struct {
	// [Required] The name of the Serverless Offer
	OfferName string `pulumi:"offerName"`
	// [Required] Publisher name of the Serverless Offer
	Publisher string `pulumi:"publisher"`
}

type ServerlessOfferResponseOutput struct{ *pulumi.OutputState }

func (ServerlessOfferResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerlessOfferResponse)(nil)).Elem()
}

func (o ServerlessOfferResponseOutput) ToServerlessOfferResponseOutput() ServerlessOfferResponseOutput {
	return o
}

func (o ServerlessOfferResponseOutput) ToServerlessOfferResponseOutputWithContext(ctx context.Context) ServerlessOfferResponseOutput {
	return o
}

// [Required] The name of the Serverless Offer
func (o ServerlessOfferResponseOutput) OfferName() pulumi.StringOutput {
	return o.ApplyT(func(v ServerlessOfferResponse) string { return v.OfferName }).(pulumi.StringOutput)
}

// [Required] Publisher name of the Serverless Offer
func (o ServerlessOfferResponseOutput) Publisher() pulumi.StringOutput {
	return o.ApplyT(func(v ServerlessOfferResponse) string { return v.Publisher }).(pulumi.StringOutput)
}

type ServerlessOfferResponsePtrOutput struct{ *pulumi.OutputState }

func (ServerlessOfferResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServerlessOfferResponse)(nil)).Elem()
}

func (o ServerlessOfferResponsePtrOutput) ToServerlessOfferResponsePtrOutput() ServerlessOfferResponsePtrOutput {
	return o
}

func (o ServerlessOfferResponsePtrOutput) ToServerlessOfferResponsePtrOutputWithContext(ctx context.Context) ServerlessOfferResponsePtrOutput {
	return o
}

func (o ServerlessOfferResponsePtrOutput) Elem() ServerlessOfferResponseOutput {
	return o.ApplyT(func(v *ServerlessOfferResponse) ServerlessOfferResponse {
		if v != nil {
			return *v
		}
		var ret ServerlessOfferResponse
		return ret
	}).(ServerlessOfferResponseOutput)
}

// [Required] The name of the Serverless Offer
func (o ServerlessOfferResponsePtrOutput) OfferName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServerlessOfferResponse) *string {
		if v == nil {
			return nil
		}
		return &v.OfferName
	}).(pulumi.StringPtrOutput)
}

// [Required] Publisher name of the Serverless Offer
func (o ServerlessOfferResponsePtrOutput) Publisher() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServerlessOfferResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Publisher
	}).(pulumi.StringPtrOutput)
}

type ServiceManagedResourcesSettings struct {
	CosmosDb *CosmosDbSettings `pulumi:"cosmosDb"`
}

// ServiceManagedResourcesSettingsInput is an input type that accepts ServiceManagedResourcesSettingsArgs and ServiceManagedResourcesSettingsOutput values.
// You can construct a concrete instance of `ServiceManagedResourcesSettingsInput` via:
//
//	ServiceManagedResourcesSettingsArgs{...}
type ServiceManagedResourcesSettingsInput interface {
	pulumi.Input

	ToServiceManagedResourcesSettingsOutput() ServiceManagedResourcesSettingsOutput
	ToServiceManagedResourcesSettingsOutputWithContext(context.Context) ServiceManagedResourcesSettingsOutput
}

type ServiceManagedResourcesSettingsArgs struct {
	CosmosDb CosmosDbSettingsPtrInput `pulumi:"cosmosDb"`
}

func (ServiceManagedResourcesSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceManagedResourcesSettings)(nil)).Elem()
}

func (i ServiceManagedResourcesSettingsArgs) ToServiceManagedResourcesSettingsOutput() ServiceManagedResourcesSettingsOutput {
	return i.ToServiceManagedResourcesSettingsOutputWithContext(context.Background())
}

func (i ServiceManagedResourcesSettingsArgs) ToServiceManagedResourcesSettingsOutputWithContext(ctx context.Context) ServiceManagedResourcesSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceManagedResourcesSettingsOutput)
}

func (i ServiceManagedResourcesSettingsArgs) ToServiceManagedResourcesSettingsPtrOutput() ServiceManagedResourcesSettingsPtrOutput {
	return i.ToServiceManagedResourcesSettingsPtrOutputWithContext(context.Background())
}

func (i ServiceManagedResourcesSettingsArgs) ToServiceManagedResourcesSettingsPtrOutputWithContext(ctx context.Context) ServiceManagedResourcesSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceManagedResourcesSettingsOutput).ToServiceManagedResourcesSettingsPtrOutputWithContext(ctx)
}

// ServiceManagedResourcesSettingsPtrInput is an input type that accepts ServiceManagedResourcesSettingsArgs, ServiceManagedResourcesSettingsPtr and ServiceManagedResourcesSettingsPtrOutput values.
// You can construct a concrete instance of `ServiceManagedResourcesSettingsPtrInput` via:
//
//	        ServiceManagedResourcesSettingsArgs{...}
//
//	or:
//
//	        nil
type ServiceManagedResourcesSettingsPtrInput interface {
	pulumi.Input

	ToServiceManagedResourcesSettingsPtrOutput() ServiceManagedResourcesSettingsPtrOutput
	ToServiceManagedResourcesSettingsPtrOutputWithContext(context.Context) ServiceManagedResourcesSettingsPtrOutput
}

type serviceManagedResourcesSettingsPtrType ServiceManagedResourcesSettingsArgs

func ServiceManagedResourcesSettingsPtr(v *ServiceManagedResourcesSettingsArgs) ServiceManagedResourcesSettingsPtrInput {
	return (*serviceManagedResourcesSettingsPtrType)(v)
}

func (*serviceManagedResourcesSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceManagedResourcesSettings)(nil)).Elem()
}

func (i *serviceManagedResourcesSettingsPtrType) ToServiceManagedResourcesSettingsPtrOutput() ServiceManagedResourcesSettingsPtrOutput {
	return i.ToServiceManagedResourcesSettingsPtrOutputWithContext(context.Background())
}

func (i *serviceManagedResourcesSettingsPtrType) ToServiceManagedResourcesSettingsPtrOutputWithContext(ctx context.Context) ServiceManagedResourcesSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceManagedResourcesSettingsPtrOutput)
}

type ServiceManagedResourcesSettingsOutput struct{ *pulumi.OutputState }

func (ServiceManagedResourcesSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceManagedResourcesSettings)(nil)).Elem()
}

func (o ServiceManagedResourcesSettingsOutput) ToServiceManagedResourcesSettingsOutput() ServiceManagedResourcesSettingsOutput {
	return o
}

func (o ServiceManagedResourcesSettingsOutput) ToServiceManagedResourcesSettingsOutputWithContext(ctx context.Context) ServiceManagedResourcesSettingsOutput {
	return o
}

func (o ServiceManagedResourcesSettingsOutput) ToServiceManagedResourcesSettingsPtrOutput() ServiceManagedResourcesSettingsPtrOutput {
	return o.ToServiceManagedResourcesSettingsPtrOutputWithContext(context.Background())
}

func (o ServiceManagedResourcesSettingsOutput) ToServiceManagedResourcesSettingsPtrOutputWithContext(ctx context.Context) ServiceManagedResourcesSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServiceManagedResourcesSettings) *ServiceManagedResourcesSettings {
		return &v
	}).(ServiceManagedResourcesSettingsPtrOutput)
}

func (o ServiceManagedResourcesSettingsOutput) CosmosDb() CosmosDbSettingsPtrOutput {
	return o.ApplyT(func(v ServiceManagedResourcesSettings) *CosmosDbSettings { return v.CosmosDb }).(CosmosDbSettingsPtrOutput)
}

type ServiceManagedResourcesSettingsPtrOutput struct{ *pulumi.OutputState }

func (ServiceManagedResourcesSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceManagedResourcesSettings)(nil)).Elem()
}

func (o ServiceManagedResourcesSettingsPtrOutput) ToServiceManagedResourcesSettingsPtrOutput() ServiceManagedResourcesSettingsPtrOutput {
	return o
}

func (o ServiceManagedResourcesSettingsPtrOutput) ToServiceManagedResourcesSettingsPtrOutputWithContext(ctx context.Context) ServiceManagedResourcesSettingsPtrOutput {
	return o
}

func (o ServiceManagedResourcesSettingsPtrOutput) Elem() ServiceManagedResourcesSettingsOutput {
	return o.ApplyT(func(v *ServiceManagedResourcesSettings) ServiceManagedResourcesSettings {
		if v != nil {
			return *v
		}
		var ret ServiceManagedResourcesSettings
		return ret
	}).(ServiceManagedResourcesSettingsOutput)
}

func (o ServiceManagedResourcesSettingsPtrOutput) CosmosDb() CosmosDbSettingsPtrOutput {
	return o.ApplyT(func(v *ServiceManagedResourcesSettings) *CosmosDbSettings {
		if v == nil {
			return nil
		}
		return v.CosmosDb
	}).(CosmosDbSettingsPtrOutput)
}

type ServiceManagedResourcesSettingsResponse struct {
	CosmosDb *CosmosDbSettingsResponse `pulumi:"cosmosDb"`
}

type ServiceManagedResourcesSettingsResponseOutput struct{ *pulumi.OutputState }

func (ServiceManagedResourcesSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceManagedResourcesSettingsResponse)(nil)).Elem()
}

func (o ServiceManagedResourcesSettingsResponseOutput) ToServiceManagedResourcesSettingsResponseOutput() ServiceManagedResourcesSettingsResponseOutput {
	return o
}

func (o ServiceManagedResourcesSettingsResponseOutput) ToServiceManagedResourcesSettingsResponseOutputWithContext(ctx context.Context) ServiceManagedResourcesSettingsResponseOutput {
	return o
}

func (o ServiceManagedResourcesSettingsResponseOutput) CosmosDb() CosmosDbSettingsResponsePtrOutput {
	return o.ApplyT(func(v ServiceManagedResourcesSettingsResponse) *CosmosDbSettingsResponse { return v.CosmosDb }).(CosmosDbSettingsResponsePtrOutput)
}

type ServiceManagedResourcesSettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (ServiceManagedResourcesSettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceManagedResourcesSettingsResponse)(nil)).Elem()
}

func (o ServiceManagedResourcesSettingsResponsePtrOutput) ToServiceManagedResourcesSettingsResponsePtrOutput() ServiceManagedResourcesSettingsResponsePtrOutput {
	return o
}

func (o ServiceManagedResourcesSettingsResponsePtrOutput) ToServiceManagedResourcesSettingsResponsePtrOutputWithContext(ctx context.Context) ServiceManagedResourcesSettingsResponsePtrOutput {
	return o
}

func (o ServiceManagedResourcesSettingsResponsePtrOutput) Elem() ServiceManagedResourcesSettingsResponseOutput {
	return o.ApplyT(func(v *ServiceManagedResourcesSettingsResponse) ServiceManagedResourcesSettingsResponse {
		if v != nil {
			return *v
		}
		var ret ServiceManagedResourcesSettingsResponse
		return ret
	}).(ServiceManagedResourcesSettingsResponseOutput)
}

func (o ServiceManagedResourcesSettingsResponsePtrOutput) CosmosDb() CosmosDbSettingsResponsePtrOutput {
	return o.ApplyT(func(v *ServiceManagedResourcesSettingsResponse) *CosmosDbSettingsResponse {
		if v == nil {
			return nil
		}
		return v.CosmosDb
	}).(CosmosDbSettingsResponsePtrOutput)
}

type ServicePrincipalAuthTypeWorkspaceConnectionProperties struct {
	// Authentication type of the connection target
	// Expected value is 'ServicePrincipal'.
	AuthType string `pulumi:"authType"`
	// Category of the connection
	Category    *string                              `pulumi:"category"`
	Credentials *WorkspaceConnectionServicePrincipal `pulumi:"credentials"`
	ExpiryTime  *string                              `pulumi:"expiryTime"`
	// whether this connection will be shared to all the project workspace under the hub
	IsSharedToAll *bool       `pulumi:"isSharedToAll"`
	Metadata      interface{} `pulumi:"metadata"`
	Target        *string     `pulumi:"target"`
}

type ServicePrincipalAuthTypeWorkspaceConnectionPropertiesResponse struct {
	// Authentication type of the connection target
	// Expected value is 'ServicePrincipal'.
	AuthType string `pulumi:"authType"`
	// Category of the connection
	Category *string `pulumi:"category"`
	// The arm id of the workspace which created this connection
	CreatedByWorkspaceArmId string                                       `pulumi:"createdByWorkspaceArmId"`
	Credentials             *WorkspaceConnectionServicePrincipalResponse `pulumi:"credentials"`
	ExpiryTime              *string                                      `pulumi:"expiryTime"`
	// whether this connection will be shared to all the project workspace under the hub
	IsSharedToAll *bool       `pulumi:"isSharedToAll"`
	Metadata      interface{} `pulumi:"metadata"`
	Target        *string     `pulumi:"target"`
}

// Service Principal datastore credentials configuration.
type ServicePrincipalDatastoreCredentials struct {
	// Authority URL used for authentication.
	AuthorityUrl *string `pulumi:"authorityUrl"`
	// [Required] Service principal client ID.
	ClientId string `pulumi:"clientId"`
	// Enum to determine the datastore credentials type.
	// Expected value is 'ServicePrincipal'.
	CredentialsType string `pulumi:"credentialsType"`
	// Resource the service principal has access to.
	ResourceUrl *string `pulumi:"resourceUrl"`
	// [Required] Service principal secrets.
	Secrets ServicePrincipalDatastoreSecrets `pulumi:"secrets"`
	// [Required] ID of the tenant to which the service principal belongs.
	TenantId string `pulumi:"tenantId"`
}

// Service Principal datastore credentials configuration.
type ServicePrincipalDatastoreCredentialsResponse struct {
	// Authority URL used for authentication.
	AuthorityUrl *string `pulumi:"authorityUrl"`
	// [Required] Service principal client ID.
	ClientId string `pulumi:"clientId"`
	// Enum to determine the datastore credentials type.
	// Expected value is 'ServicePrincipal'.
	CredentialsType string `pulumi:"credentialsType"`
	// Resource the service principal has access to.
	ResourceUrl *string `pulumi:"resourceUrl"`
	// [Required] ID of the tenant to which the service principal belongs.
	TenantId string `pulumi:"tenantId"`
}

// Datastore Service Principal secrets.
type ServicePrincipalDatastoreSecrets struct {
	// Service principal secret.
	ClientSecret *string `pulumi:"clientSecret"`
	// Enum to determine the datastore secrets type.
	// Expected value is 'ServicePrincipal'.
	SecretsType string `pulumi:"secretsType"`
}

// Service Tag destination for a Service Tag Outbound Rule for the managed network of a machine learning workspace.
type ServiceTagDestination struct {
	// The action enum for networking rule.
	Action     *string `pulumi:"action"`
	PortRanges *string `pulumi:"portRanges"`
	Protocol   *string `pulumi:"protocol"`
	ServiceTag *string `pulumi:"serviceTag"`
}

// Service Tag destination for a Service Tag Outbound Rule for the managed network of a machine learning workspace.
type ServiceTagDestinationResponse struct {
	// The action enum for networking rule.
	Action *string `pulumi:"action"`
	// Optional, if provided, the ServiceTag property will be ignored.
	AddressPrefixes []string `pulumi:"addressPrefixes"`
	PortRanges      *string  `pulumi:"portRanges"`
	Protocol        *string  `pulumi:"protocol"`
	ServiceTag      *string  `pulumi:"serviceTag"`
}

// Service Tag Outbound Rule for the managed network of a machine learning workspace.
type ServiceTagOutboundRule struct {
	// Category of a managed network outbound rule of a machine learning workspace.
	Category *string `pulumi:"category"`
	// Service Tag destination for a Service Tag Outbound Rule for the managed network of a machine learning workspace.
	Destination *ServiceTagDestination `pulumi:"destination"`
	// Type of a managed network outbound rule of a machine learning workspace.
	Status *string `pulumi:"status"`
	// Type of a managed network Outbound Rule of a machine learning workspace.
	// Expected value is 'ServiceTag'.
	Type string `pulumi:"type"`
}

// Service Tag Outbound Rule for the managed network of a machine learning workspace.
type ServiceTagOutboundRuleResponse struct {
	// Category of a managed network outbound rule of a machine learning workspace.
	Category *string `pulumi:"category"`
	// Service Tag destination for a Service Tag Outbound Rule for the managed network of a machine learning workspace.
	Destination *ServiceTagDestinationResponse `pulumi:"destination"`
	// Type of a managed network outbound rule of a machine learning workspace.
	Status *string `pulumi:"status"`
	// Type of a managed network Outbound Rule of a machine learning workspace.
	// Expected value is 'ServiceTag'.
	Type string `pulumi:"type"`
}

// Details of customized scripts to execute for setting up the cluster.
type SetupScripts struct {
	// Customized setup scripts
	Scripts *ScriptsToExecute `pulumi:"scripts"`
}

// Details of customized scripts to execute for setting up the cluster.
type SetupScriptsResponse struct {
	// Customized setup scripts
	Scripts *ScriptsToExecuteResponse `pulumi:"scripts"`
}

type SharedPrivateLinkResource struct {
	// group id of the private link
	GroupId *string `pulumi:"groupId"`
	// Unique name of the private link
	Name *string `pulumi:"name"`
	// the resource id that private link links to
	PrivateLinkResourceId *string `pulumi:"privateLinkResourceId"`
	// Request message
	RequestMessage *string `pulumi:"requestMessage"`
	// Connection status of the service consumer with the service provider
	// Possible state transitions
	// Pending -> Approved (Service provider approves the connection request)
	// Pending -> Rejected (Service provider rejects the connection request)
	// Pending -> Disconnected (Service provider deletes the connection)
	// Approved -> Rejected (Service provider rejects the approved connection)
	// Approved -> Disconnected (Service provider deletes the connection)
	// Rejected -> Pending (Service consumer re-initiates the connection request that was rejected)
	// Rejected -> Disconnected (Service provider deletes the connection)
	Status *string `pulumi:"status"`
}

// SharedPrivateLinkResourceInput is an input type that accepts SharedPrivateLinkResourceArgs and SharedPrivateLinkResourceOutput values.
// You can construct a concrete instance of `SharedPrivateLinkResourceInput` via:
//
//	SharedPrivateLinkResourceArgs{...}
type SharedPrivateLinkResourceInput interface {
	pulumi.Input

	ToSharedPrivateLinkResourceOutput() SharedPrivateLinkResourceOutput
	ToSharedPrivateLinkResourceOutputWithContext(context.Context) SharedPrivateLinkResourceOutput
}

type SharedPrivateLinkResourceArgs struct {
	// group id of the private link
	GroupId pulumi.StringPtrInput `pulumi:"groupId"`
	// Unique name of the private link
	Name pulumi.StringPtrInput `pulumi:"name"`
	// the resource id that private link links to
	PrivateLinkResourceId pulumi.StringPtrInput `pulumi:"privateLinkResourceId"`
	// Request message
	RequestMessage pulumi.StringPtrInput `pulumi:"requestMessage"`
	// Connection status of the service consumer with the service provider
	// Possible state transitions
	// Pending -> Approved (Service provider approves the connection request)
	// Pending -> Rejected (Service provider rejects the connection request)
	// Pending -> Disconnected (Service provider deletes the connection)
	// Approved -> Rejected (Service provider rejects the approved connection)
	// Approved -> Disconnected (Service provider deletes the connection)
	// Rejected -> Pending (Service consumer re-initiates the connection request that was rejected)
	// Rejected -> Disconnected (Service provider deletes the connection)
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (SharedPrivateLinkResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SharedPrivateLinkResource)(nil)).Elem()
}

func (i SharedPrivateLinkResourceArgs) ToSharedPrivateLinkResourceOutput() SharedPrivateLinkResourceOutput {
	return i.ToSharedPrivateLinkResourceOutputWithContext(context.Background())
}

func (i SharedPrivateLinkResourceArgs) ToSharedPrivateLinkResourceOutputWithContext(ctx context.Context) SharedPrivateLinkResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SharedPrivateLinkResourceOutput)
}

// SharedPrivateLinkResourceArrayInput is an input type that accepts SharedPrivateLinkResourceArray and SharedPrivateLinkResourceArrayOutput values.
// You can construct a concrete instance of `SharedPrivateLinkResourceArrayInput` via:
//
//	SharedPrivateLinkResourceArray{ SharedPrivateLinkResourceArgs{...} }
type SharedPrivateLinkResourceArrayInput interface {
	pulumi.Input

	ToSharedPrivateLinkResourceArrayOutput() SharedPrivateLinkResourceArrayOutput
	ToSharedPrivateLinkResourceArrayOutputWithContext(context.Context) SharedPrivateLinkResourceArrayOutput
}

type SharedPrivateLinkResourceArray []SharedPrivateLinkResourceInput

func (SharedPrivateLinkResourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SharedPrivateLinkResource)(nil)).Elem()
}

func (i SharedPrivateLinkResourceArray) ToSharedPrivateLinkResourceArrayOutput() SharedPrivateLinkResourceArrayOutput {
	return i.ToSharedPrivateLinkResourceArrayOutputWithContext(context.Background())
}

func (i SharedPrivateLinkResourceArray) ToSharedPrivateLinkResourceArrayOutputWithContext(ctx context.Context) SharedPrivateLinkResourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SharedPrivateLinkResourceArrayOutput)
}

type SharedPrivateLinkResourceOutput struct{ *pulumi.OutputState }

func (SharedPrivateLinkResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SharedPrivateLinkResource)(nil)).Elem()
}

func (o SharedPrivateLinkResourceOutput) ToSharedPrivateLinkResourceOutput() SharedPrivateLinkResourceOutput {
	return o
}

func (o SharedPrivateLinkResourceOutput) ToSharedPrivateLinkResourceOutputWithContext(ctx context.Context) SharedPrivateLinkResourceOutput {
	return o
}

// group id of the private link
func (o SharedPrivateLinkResourceOutput) GroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SharedPrivateLinkResource) *string { return v.GroupId }).(pulumi.StringPtrOutput)
}

// Unique name of the private link
func (o SharedPrivateLinkResourceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SharedPrivateLinkResource) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// the resource id that private link links to
func (o SharedPrivateLinkResourceOutput) PrivateLinkResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SharedPrivateLinkResource) *string { return v.PrivateLinkResourceId }).(pulumi.StringPtrOutput)
}

// Request message
func (o SharedPrivateLinkResourceOutput) RequestMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SharedPrivateLinkResource) *string { return v.RequestMessage }).(pulumi.StringPtrOutput)
}

// Connection status of the service consumer with the service provider
// Possible state transitions
// Pending -> Approved (Service provider approves the connection request)
// Pending -> Rejected (Service provider rejects the connection request)
// Pending -> Disconnected (Service provider deletes the connection)
// Approved -> Rejected (Service provider rejects the approved connection)
// Approved -> Disconnected (Service provider deletes the connection)
// Rejected -> Pending (Service consumer re-initiates the connection request that was rejected)
// Rejected -> Disconnected (Service provider deletes the connection)
func (o SharedPrivateLinkResourceOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SharedPrivateLinkResource) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type SharedPrivateLinkResourceArrayOutput struct{ *pulumi.OutputState }

func (SharedPrivateLinkResourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SharedPrivateLinkResource)(nil)).Elem()
}

func (o SharedPrivateLinkResourceArrayOutput) ToSharedPrivateLinkResourceArrayOutput() SharedPrivateLinkResourceArrayOutput {
	return o
}

func (o SharedPrivateLinkResourceArrayOutput) ToSharedPrivateLinkResourceArrayOutputWithContext(ctx context.Context) SharedPrivateLinkResourceArrayOutput {
	return o
}

func (o SharedPrivateLinkResourceArrayOutput) Index(i pulumi.IntInput) SharedPrivateLinkResourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SharedPrivateLinkResource {
		return vs[0].([]SharedPrivateLinkResource)[vs[1].(int)]
	}).(SharedPrivateLinkResourceOutput)
}

type SharedPrivateLinkResourceResponse struct {
	// group id of the private link
	GroupId *string `pulumi:"groupId"`
	// Unique name of the private link
	Name *string `pulumi:"name"`
	// the resource id that private link links to
	PrivateLinkResourceId *string `pulumi:"privateLinkResourceId"`
	// Request message
	RequestMessage *string `pulumi:"requestMessage"`
	// Connection status of the service consumer with the service provider
	// Possible state transitions
	// Pending -> Approved (Service provider approves the connection request)
	// Pending -> Rejected (Service provider rejects the connection request)
	// Pending -> Disconnected (Service provider deletes the connection)
	// Approved -> Rejected (Service provider rejects the approved connection)
	// Approved -> Disconnected (Service provider deletes the connection)
	// Rejected -> Pending (Service consumer re-initiates the connection request that was rejected)
	// Rejected -> Disconnected (Service provider deletes the connection)
	Status *string `pulumi:"status"`
}

type SharedPrivateLinkResourceResponseOutput struct{ *pulumi.OutputState }

func (SharedPrivateLinkResourceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SharedPrivateLinkResourceResponse)(nil)).Elem()
}

func (o SharedPrivateLinkResourceResponseOutput) ToSharedPrivateLinkResourceResponseOutput() SharedPrivateLinkResourceResponseOutput {
	return o
}

func (o SharedPrivateLinkResourceResponseOutput) ToSharedPrivateLinkResourceResponseOutputWithContext(ctx context.Context) SharedPrivateLinkResourceResponseOutput {
	return o
}

// group id of the private link
func (o SharedPrivateLinkResourceResponseOutput) GroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SharedPrivateLinkResourceResponse) *string { return v.GroupId }).(pulumi.StringPtrOutput)
}

// Unique name of the private link
func (o SharedPrivateLinkResourceResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SharedPrivateLinkResourceResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// the resource id that private link links to
func (o SharedPrivateLinkResourceResponseOutput) PrivateLinkResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SharedPrivateLinkResourceResponse) *string { return v.PrivateLinkResourceId }).(pulumi.StringPtrOutput)
}

// Request message
func (o SharedPrivateLinkResourceResponseOutput) RequestMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SharedPrivateLinkResourceResponse) *string { return v.RequestMessage }).(pulumi.StringPtrOutput)
}

// Connection status of the service consumer with the service provider
// Possible state transitions
// Pending -> Approved (Service provider approves the connection request)
// Pending -> Rejected (Service provider rejects the connection request)
// Pending -> Disconnected (Service provider deletes the connection)
// Approved -> Rejected (Service provider rejects the approved connection)
// Approved -> Disconnected (Service provider deletes the connection)
// Rejected -> Pending (Service consumer re-initiates the connection request that was rejected)
// Rejected -> Disconnected (Service provider deletes the connection)
func (o SharedPrivateLinkResourceResponseOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SharedPrivateLinkResourceResponse) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type SharedPrivateLinkResourceResponseArrayOutput struct{ *pulumi.OutputState }

func (SharedPrivateLinkResourceResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SharedPrivateLinkResourceResponse)(nil)).Elem()
}

func (o SharedPrivateLinkResourceResponseArrayOutput) ToSharedPrivateLinkResourceResponseArrayOutput() SharedPrivateLinkResourceResponseArrayOutput {
	return o
}

func (o SharedPrivateLinkResourceResponseArrayOutput) ToSharedPrivateLinkResourceResponseArrayOutputWithContext(ctx context.Context) SharedPrivateLinkResourceResponseArrayOutput {
	return o
}

func (o SharedPrivateLinkResourceResponseArrayOutput) Index(i pulumi.IntInput) SharedPrivateLinkResourceResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SharedPrivateLinkResourceResponse {
		return vs[0].([]SharedPrivateLinkResourceResponse)[vs[1].(int)]
	}).(SharedPrivateLinkResourceResponseOutput)
}

// The resource model definition representing SKU
type Sku struct {
	// If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.
	Capacity *int `pulumi:"capacity"`
	// If the service has different generations of hardware, for the same SKU, then that can be captured here.
	Family *string `pulumi:"family"`
	// The name of the SKU. Ex - P3. It is typically a letter+number code
	Name string `pulumi:"name"`
	// The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code.
	Size *string `pulumi:"size"`
	// This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.
	Tier *SkuTier `pulumi:"tier"`
}

// SkuInput is an input type that accepts SkuArgs and SkuOutput values.
// You can construct a concrete instance of `SkuInput` via:
//
//	SkuArgs{...}
type SkuInput interface {
	pulumi.Input

	ToSkuOutput() SkuOutput
	ToSkuOutputWithContext(context.Context) SkuOutput
}

// The resource model definition representing SKU
type SkuArgs struct {
	// If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.
	Capacity pulumi.IntPtrInput `pulumi:"capacity"`
	// If the service has different generations of hardware, for the same SKU, then that can be captured here.
	Family pulumi.StringPtrInput `pulumi:"family"`
	// The name of the SKU. Ex - P3. It is typically a letter+number code
	Name pulumi.StringInput `pulumi:"name"`
	// The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code.
	Size pulumi.StringPtrInput `pulumi:"size"`
	// This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.
	Tier SkuTierPtrInput `pulumi:"tier"`
}

func (SkuArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Sku)(nil)).Elem()
}

func (i SkuArgs) ToSkuOutput() SkuOutput {
	return i.ToSkuOutputWithContext(context.Background())
}

func (i SkuArgs) ToSkuOutputWithContext(ctx context.Context) SkuOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuOutput)
}

func (i SkuArgs) ToSkuPtrOutput() SkuPtrOutput {
	return i.ToSkuPtrOutputWithContext(context.Background())
}

func (i SkuArgs) ToSkuPtrOutputWithContext(ctx context.Context) SkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuOutput).ToSkuPtrOutputWithContext(ctx)
}

// SkuPtrInput is an input type that accepts SkuArgs, SkuPtr and SkuPtrOutput values.
// You can construct a concrete instance of `SkuPtrInput` via:
//
//	        SkuArgs{...}
//
//	or:
//
//	        nil
type SkuPtrInput interface {
	pulumi.Input

	ToSkuPtrOutput() SkuPtrOutput
	ToSkuPtrOutputWithContext(context.Context) SkuPtrOutput
}

type skuPtrType SkuArgs

func SkuPtr(v *SkuArgs) SkuPtrInput {
	return (*skuPtrType)(v)
}

func (*skuPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Sku)(nil)).Elem()
}

func (i *skuPtrType) ToSkuPtrOutput() SkuPtrOutput {
	return i.ToSkuPtrOutputWithContext(context.Background())
}

func (i *skuPtrType) ToSkuPtrOutputWithContext(ctx context.Context) SkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuPtrOutput)
}

// The resource model definition representing SKU
type SkuOutput struct{ *pulumi.OutputState }

func (SkuOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Sku)(nil)).Elem()
}

func (o SkuOutput) ToSkuOutput() SkuOutput {
	return o
}

func (o SkuOutput) ToSkuOutputWithContext(ctx context.Context) SkuOutput {
	return o
}

func (o SkuOutput) ToSkuPtrOutput() SkuPtrOutput {
	return o.ToSkuPtrOutputWithContext(context.Background())
}

func (o SkuOutput) ToSkuPtrOutputWithContext(ctx context.Context) SkuPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Sku) *Sku {
		return &v
	}).(SkuPtrOutput)
}

// If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.
func (o SkuOutput) Capacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Sku) *int { return v.Capacity }).(pulumi.IntPtrOutput)
}

// If the service has different generations of hardware, for the same SKU, then that can be captured here.
func (o SkuOutput) Family() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Sku) *string { return v.Family }).(pulumi.StringPtrOutput)
}

// The name of the SKU. Ex - P3. It is typically a letter+number code
func (o SkuOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v Sku) string { return v.Name }).(pulumi.StringOutput)
}

// The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code.
func (o SkuOutput) Size() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Sku) *string { return v.Size }).(pulumi.StringPtrOutput)
}

// This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.
func (o SkuOutput) Tier() SkuTierPtrOutput {
	return o.ApplyT(func(v Sku) *SkuTier { return v.Tier }).(SkuTierPtrOutput)
}

type SkuPtrOutput struct{ *pulumi.OutputState }

func (SkuPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Sku)(nil)).Elem()
}

func (o SkuPtrOutput) ToSkuPtrOutput() SkuPtrOutput {
	return o
}

func (o SkuPtrOutput) ToSkuPtrOutputWithContext(ctx context.Context) SkuPtrOutput {
	return o
}

func (o SkuPtrOutput) Elem() SkuOutput {
	return o.ApplyT(func(v *Sku) Sku {
		if v != nil {
			return *v
		}
		var ret Sku
		return ret
	}).(SkuOutput)
}

// If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.
func (o SkuPtrOutput) Capacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Sku) *int {
		if v == nil {
			return nil
		}
		return v.Capacity
	}).(pulumi.IntPtrOutput)
}

// If the service has different generations of hardware, for the same SKU, then that can be captured here.
func (o SkuPtrOutput) Family() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Sku) *string {
		if v == nil {
			return nil
		}
		return v.Family
	}).(pulumi.StringPtrOutput)
}

// The name of the SKU. Ex - P3. It is typically a letter+number code
func (o SkuPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Sku) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code.
func (o SkuPtrOutput) Size() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Sku) *string {
		if v == nil {
			return nil
		}
		return v.Size
	}).(pulumi.StringPtrOutput)
}

// This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.
func (o SkuPtrOutput) Tier() SkuTierPtrOutput {
	return o.ApplyT(func(v *Sku) *SkuTier {
		if v == nil {
			return nil
		}
		return v.Tier
	}).(SkuTierPtrOutput)
}

// The resource model definition representing SKU
type SkuResponse struct {
	// If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.
	Capacity *int `pulumi:"capacity"`
	// If the service has different generations of hardware, for the same SKU, then that can be captured here.
	Family *string `pulumi:"family"`
	// The name of the SKU. Ex - P3. It is typically a letter+number code
	Name string `pulumi:"name"`
	// The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code.
	Size *string `pulumi:"size"`
	// This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.
	Tier *string `pulumi:"tier"`
}

// The resource model definition representing SKU
type SkuResponseOutput struct{ *pulumi.OutputState }

func (SkuResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuResponse)(nil)).Elem()
}

func (o SkuResponseOutput) ToSkuResponseOutput() SkuResponseOutput {
	return o
}

func (o SkuResponseOutput) ToSkuResponseOutputWithContext(ctx context.Context) SkuResponseOutput {
	return o
}

// If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.
func (o SkuResponseOutput) Capacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SkuResponse) *int { return v.Capacity }).(pulumi.IntPtrOutput)
}

// If the service has different generations of hardware, for the same SKU, then that can be captured here.
func (o SkuResponseOutput) Family() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SkuResponse) *string { return v.Family }).(pulumi.StringPtrOutput)
}

// The name of the SKU. Ex - P3. It is typically a letter+number code
func (o SkuResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v SkuResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code.
func (o SkuResponseOutput) Size() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SkuResponse) *string { return v.Size }).(pulumi.StringPtrOutput)
}

// This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.
func (o SkuResponseOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SkuResponse) *string { return v.Tier }).(pulumi.StringPtrOutput)
}

type SkuResponsePtrOutput struct{ *pulumi.OutputState }

func (SkuResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SkuResponse)(nil)).Elem()
}

func (o SkuResponsePtrOutput) ToSkuResponsePtrOutput() SkuResponsePtrOutput {
	return o
}

func (o SkuResponsePtrOutput) ToSkuResponsePtrOutputWithContext(ctx context.Context) SkuResponsePtrOutput {
	return o
}

func (o SkuResponsePtrOutput) Elem() SkuResponseOutput {
	return o.ApplyT(func(v *SkuResponse) SkuResponse {
		if v != nil {
			return *v
		}
		var ret SkuResponse
		return ret
	}).(SkuResponseOutput)
}

// If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.
func (o SkuResponsePtrOutput) Capacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SkuResponse) *int {
		if v == nil {
			return nil
		}
		return v.Capacity
	}).(pulumi.IntPtrOutput)
}

// If the service has different generations of hardware, for the same SKU, then that can be captured here.
func (o SkuResponsePtrOutput) Family() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkuResponse) *string {
		if v == nil {
			return nil
		}
		return v.Family
	}).(pulumi.StringPtrOutput)
}

// The name of the SKU. Ex - P3. It is typically a letter+number code
func (o SkuResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkuResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code.
func (o SkuResponsePtrOutput) Size() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkuResponse) *string {
		if v == nil {
			return nil
		}
		return v.Size
	}).(pulumi.StringPtrOutput)
}

// This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.
func (o SkuResponsePtrOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkuResponse) *string {
		if v == nil {
			return nil
		}
		return v.Tier
	}).(pulumi.StringPtrOutput)
}

// Spark job definition.
type SparkJob struct {
	// Archive files used in the job.
	Archives []string `pulumi:"archives"`
	// Arguments for the job.
	Args *string `pulumi:"args"`
	// [Required] ARM resource ID of the code asset.
	CodeId string `pulumi:"codeId"`
	// ARM resource ID of the component resource.
	ComponentId *string `pulumi:"componentId"`
	// ARM resource ID of the compute resource.
	ComputeId *string `pulumi:"computeId"`
	// Spark configured properties.
	Conf map[string]string `pulumi:"conf"`
	// The asset description text.
	Description *string `pulumi:"description"`
	// Display name of job.
	DisplayName *string `pulumi:"displayName"`
	// [Required] The entry to execute on startup of the job.
	Entry interface{} `pulumi:"entry"`
	// The ARM resource ID of the Environment specification for the job.
	EnvironmentId *string `pulumi:"environmentId"`
	// Environment variables included in the job.
	EnvironmentVariables map[string]string `pulumi:"environmentVariables"`
	// The name of the experiment the job belongs to. If not set, the job is placed in the "Default" experiment.
	ExperimentName *string `pulumi:"experimentName"`
	// Files used in the job.
	Files []string `pulumi:"files"`
	// Identity configuration. If set, this should be one of AmlToken, ManagedIdentity, UserIdentity or null.
	// Defaults to AmlToken if null.
	Identity interface{} `pulumi:"identity"`
	// Mapping of input data bindings used in the job.
	Inputs map[string]interface{} `pulumi:"inputs"`
	// Is the asset archived?
	IsArchived *bool `pulumi:"isArchived"`
	// Jar files used in the job.
	Jars []string `pulumi:"jars"`
	// Enum to determine the type of job.
	// Expected value is 'Spark'.
	JobType string `pulumi:"jobType"`
	// Notification setting for the job
	NotificationSetting *NotificationSetting `pulumi:"notificationSetting"`
	// Mapping of output data bindings used in the job.
	Outputs map[string]interface{} `pulumi:"outputs"`
	// The asset property dictionary.
	Properties map[string]string `pulumi:"properties"`
	// Python files used in the job.
	PyFiles []string `pulumi:"pyFiles"`
	// Queue settings for the job
	QueueSettings *QueueSettings `pulumi:"queueSettings"`
	// Compute Resource configuration for the job.
	Resources *SparkResourceConfiguration `pulumi:"resources"`
	// Configuration for secrets to be made available during runtime.
	SecretsConfiguration map[string]SecretConfiguration `pulumi:"secretsConfiguration"`
	// List of JobEndpoints.
	// For local jobs, a job endpoint will have an endpoint value of FileStreamObject.
	Services map[string]JobService `pulumi:"services"`
	// Tag dictionary. Tags can be added, removed, and updated.
	Tags map[string]string `pulumi:"tags"`
}

// Defaults sets the appropriate defaults for SparkJob
func (val *SparkJob) Defaults() *SparkJob {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.ExperimentName == nil {
		experimentName_ := "Default"
		tmp.ExperimentName = &experimentName_
	}
	if tmp.IsArchived == nil {
		isArchived_ := false
		tmp.IsArchived = &isArchived_
	}
	tmp.QueueSettings = tmp.QueueSettings.Defaults()

	tmp.Resources = tmp.Resources.Defaults()

	return &tmp
}

type SparkJobPythonEntry struct {
	// [Required] Relative python file path for job entry point.
	File string `pulumi:"file"`
	// Expected value is 'SparkJobPythonEntry'.
	SparkJobEntryType string `pulumi:"sparkJobEntryType"`
}

type SparkJobPythonEntryResponse struct {
	// [Required] Relative python file path for job entry point.
	File string `pulumi:"file"`
	// Expected value is 'SparkJobPythonEntry'.
	SparkJobEntryType string `pulumi:"sparkJobEntryType"`
}

// Spark job definition.
type SparkJobResponse struct {
	// Archive files used in the job.
	Archives []string `pulumi:"archives"`
	// Arguments for the job.
	Args *string `pulumi:"args"`
	// [Required] ARM resource ID of the code asset.
	CodeId string `pulumi:"codeId"`
	// ARM resource ID of the component resource.
	ComponentId *string `pulumi:"componentId"`
	// ARM resource ID of the compute resource.
	ComputeId *string `pulumi:"computeId"`
	// Spark configured properties.
	Conf map[string]string `pulumi:"conf"`
	// The asset description text.
	Description *string `pulumi:"description"`
	// Display name of job.
	DisplayName *string `pulumi:"displayName"`
	// [Required] The entry to execute on startup of the job.
	Entry interface{} `pulumi:"entry"`
	// The ARM resource ID of the Environment specification for the job.
	EnvironmentId *string `pulumi:"environmentId"`
	// Environment variables included in the job.
	EnvironmentVariables map[string]string `pulumi:"environmentVariables"`
	// The name of the experiment the job belongs to. If not set, the job is placed in the "Default" experiment.
	ExperimentName *string `pulumi:"experimentName"`
	// Files used in the job.
	Files []string `pulumi:"files"`
	// Identity configuration. If set, this should be one of AmlToken, ManagedIdentity, UserIdentity or null.
	// Defaults to AmlToken if null.
	Identity interface{} `pulumi:"identity"`
	// Mapping of input data bindings used in the job.
	Inputs map[string]interface{} `pulumi:"inputs"`
	// Is the asset archived?
	IsArchived *bool `pulumi:"isArchived"`
	// Jar files used in the job.
	Jars []string `pulumi:"jars"`
	// Enum to determine the type of job.
	// Expected value is 'Spark'.
	JobType string `pulumi:"jobType"`
	// Notification setting for the job
	NotificationSetting *NotificationSettingResponse `pulumi:"notificationSetting"`
	// Mapping of output data bindings used in the job.
	Outputs map[string]interface{} `pulumi:"outputs"`
	// The asset property dictionary.
	Properties map[string]string `pulumi:"properties"`
	// Python files used in the job.
	PyFiles []string `pulumi:"pyFiles"`
	// Queue settings for the job
	QueueSettings *QueueSettingsResponse `pulumi:"queueSettings"`
	// Compute Resource configuration for the job.
	Resources *SparkResourceConfigurationResponse `pulumi:"resources"`
	// Configuration for secrets to be made available during runtime.
	SecretsConfiguration map[string]SecretConfigurationResponse `pulumi:"secretsConfiguration"`
	// List of JobEndpoints.
	// For local jobs, a job endpoint will have an endpoint value of FileStreamObject.
	Services map[string]JobServiceResponse `pulumi:"services"`
	// Status of the job.
	Status string `pulumi:"status"`
	// Tag dictionary. Tags can be added, removed, and updated.
	Tags map[string]string `pulumi:"tags"`
}

// Defaults sets the appropriate defaults for SparkJobResponse
func (val *SparkJobResponse) Defaults() *SparkJobResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.ExperimentName == nil {
		experimentName_ := "Default"
		tmp.ExperimentName = &experimentName_
	}
	if tmp.IsArchived == nil {
		isArchived_ := false
		tmp.IsArchived = &isArchived_
	}
	tmp.QueueSettings = tmp.QueueSettings.Defaults()

	tmp.Resources = tmp.Resources.Defaults()

	return &tmp
}

type SparkJobScalaEntry struct {
	// [Required] Scala class name used as entry point.
	ClassName string `pulumi:"className"`
	// Expected value is 'SparkJobScalaEntry'.
	SparkJobEntryType string `pulumi:"sparkJobEntryType"`
}

type SparkJobScalaEntryResponse struct {
	// [Required] Scala class name used as entry point.
	ClassName string `pulumi:"className"`
	// Expected value is 'SparkJobScalaEntry'.
	SparkJobEntryType string `pulumi:"sparkJobEntryType"`
}

type SparkResourceConfiguration struct {
	// Optional type of VM used as supported by the compute target.
	InstanceType *string `pulumi:"instanceType"`
	// Version of spark runtime used for the job.
	RuntimeVersion *string `pulumi:"runtimeVersion"`
}

// Defaults sets the appropriate defaults for SparkResourceConfiguration
func (val *SparkResourceConfiguration) Defaults() *SparkResourceConfiguration {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.RuntimeVersion == nil {
		runtimeVersion_ := "3.1"
		tmp.RuntimeVersion = &runtimeVersion_
	}
	return &tmp
}

type SparkResourceConfigurationResponse struct {
	// Optional type of VM used as supported by the compute target.
	InstanceType *string `pulumi:"instanceType"`
	// Version of spark runtime used for the job.
	RuntimeVersion *string `pulumi:"runtimeVersion"`
}

// Defaults sets the appropriate defaults for SparkResourceConfigurationResponse
func (val *SparkResourceConfigurationResponse) Defaults() *SparkResourceConfigurationResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.RuntimeVersion == nil {
		runtimeVersion_ := "3.1"
		tmp.RuntimeVersion = &runtimeVersion_
	}
	return &tmp
}

// The ssl configuration for scoring
type SslConfiguration struct {
	// Cert data
	Cert *string `pulumi:"cert"`
	// CNAME of the cert
	Cname *string `pulumi:"cname"`
	// Key data
	Key *string `pulumi:"key"`
	// Leaf domain label of public endpoint
	LeafDomainLabel *string `pulumi:"leafDomainLabel"`
	// Indicates whether to overwrite existing domain label.
	OverwriteExistingDomain *bool `pulumi:"overwriteExistingDomain"`
	// Enable or disable ssl for scoring
	Status *string `pulumi:"status"`
}

// The ssl configuration for scoring
type SslConfigurationResponse struct {
	// Cert data
	Cert *string `pulumi:"cert"`
	// CNAME of the cert
	Cname *string `pulumi:"cname"`
	// Key data
	Key *string `pulumi:"key"`
	// Leaf domain label of public endpoint
	LeafDomainLabel *string `pulumi:"leafDomainLabel"`
	// Indicates whether to overwrite existing domain label.
	OverwriteExistingDomain *bool `pulumi:"overwriteExistingDomain"`
	// Enable or disable ssl for scoring
	Status *string `pulumi:"status"`
}

// Advances setting to customize StackEnsemble run.
type StackEnsembleSettings struct {
	// Optional parameters to pass to the initializer of the meta-learner.
	StackMetaLearnerKWargs interface{} `pulumi:"stackMetaLearnerKWargs"`
	// Specifies the proportion of the training set (when choosing train and validation type of training) to be reserved for training the meta-learner. Default value is 0.2.
	StackMetaLearnerTrainPercentage *float64 `pulumi:"stackMetaLearnerTrainPercentage"`
	// The meta-learner is a model trained on the output of the individual heterogeneous models.
	StackMetaLearnerType *string `pulumi:"stackMetaLearnerType"`
}

// Defaults sets the appropriate defaults for StackEnsembleSettings
func (val *StackEnsembleSettings) Defaults() *StackEnsembleSettings {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.StackMetaLearnerTrainPercentage == nil {
		stackMetaLearnerTrainPercentage_ := 0.2
		tmp.StackMetaLearnerTrainPercentage = &stackMetaLearnerTrainPercentage_
	}
	if tmp.StackMetaLearnerType == nil {
		stackMetaLearnerType_ := "None"
		tmp.StackMetaLearnerType = &stackMetaLearnerType_
	}
	return &tmp
}

// Advances setting to customize StackEnsemble run.
type StackEnsembleSettingsResponse struct {
	// Optional parameters to pass to the initializer of the meta-learner.
	StackMetaLearnerKWargs interface{} `pulumi:"stackMetaLearnerKWargs"`
	// Specifies the proportion of the training set (when choosing train and validation type of training) to be reserved for training the meta-learner. Default value is 0.2.
	StackMetaLearnerTrainPercentage *float64 `pulumi:"stackMetaLearnerTrainPercentage"`
	// The meta-learner is a model trained on the output of the individual heterogeneous models.
	StackMetaLearnerType *string `pulumi:"stackMetaLearnerType"`
}

// Defaults sets the appropriate defaults for StackEnsembleSettingsResponse
func (val *StackEnsembleSettingsResponse) Defaults() *StackEnsembleSettingsResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.StackMetaLearnerTrainPercentage == nil {
		stackMetaLearnerTrainPercentage_ := 0.2
		tmp.StackMetaLearnerTrainPercentage = &stackMetaLearnerTrainPercentage_
	}
	if tmp.StackMetaLearnerType == nil {
		stackMetaLearnerType_ := "None"
		tmp.StackMetaLearnerType = &stackMetaLearnerType_
	}
	return &tmp
}

// Static input data definition.
type StaticInputData struct {
	// Mapping of column names to special uses.
	Columns map[string]string `pulumi:"columns"`
	// The context metadata of the data source.
	DataContext *string `pulumi:"dataContext"`
	// Monitoring input data type enum.
	// Expected value is 'Static'.
	InputDataType string `pulumi:"inputDataType"`
	// [Required] Specifies the type of job.
	JobInputType string `pulumi:"jobInputType"`
	// The ARM resource ID of the component resource used to preprocess the data.
	PreprocessingComponentId *string `pulumi:"preprocessingComponentId"`
	// [Required] Input Asset URI.
	Uri string `pulumi:"uri"`
	// [Required] The end date of the data window.
	WindowEnd string `pulumi:"windowEnd"`
	// [Required] The start date of the data window.
	WindowStart string `pulumi:"windowStart"`
}

// Static input data definition.
type StaticInputDataResponse struct {
	// Mapping of column names to special uses.
	Columns map[string]string `pulumi:"columns"`
	// The context metadata of the data source.
	DataContext *string `pulumi:"dataContext"`
	// Monitoring input data type enum.
	// Expected value is 'Static'.
	InputDataType string `pulumi:"inputDataType"`
	// [Required] Specifies the type of job.
	JobInputType string `pulumi:"jobInputType"`
	// The ARM resource ID of the component resource used to preprocess the data.
	PreprocessingComponentId *string `pulumi:"preprocessingComponentId"`
	// [Required] Input Asset URI.
	Uri string `pulumi:"uri"`
	// [Required] The end date of the data window.
	WindowEnd string `pulumi:"windowEnd"`
	// [Required] The start date of the data window.
	WindowStart string `pulumi:"windowStart"`
}

// Active message associated with project
type StatusMessageResponse struct {
	// Service-defined message code.
	Code string `pulumi:"code"`
	// Time in UTC at which the message was created.
	CreatedDateTime string `pulumi:"createdDateTime"`
	// Severity level of message.
	Level string `pulumi:"level"`
	// A human-readable representation of the message code.
	Message string `pulumi:"message"`
}

// Active message associated with project
type StatusMessageResponseOutput struct{ *pulumi.OutputState }

func (StatusMessageResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StatusMessageResponse)(nil)).Elem()
}

func (o StatusMessageResponseOutput) ToStatusMessageResponseOutput() StatusMessageResponseOutput {
	return o
}

func (o StatusMessageResponseOutput) ToStatusMessageResponseOutputWithContext(ctx context.Context) StatusMessageResponseOutput {
	return o
}

// Service-defined message code.
func (o StatusMessageResponseOutput) Code() pulumi.StringOutput {
	return o.ApplyT(func(v StatusMessageResponse) string { return v.Code }).(pulumi.StringOutput)
}

// Time in UTC at which the message was created.
func (o StatusMessageResponseOutput) CreatedDateTime() pulumi.StringOutput {
	return o.ApplyT(func(v StatusMessageResponse) string { return v.CreatedDateTime }).(pulumi.StringOutput)
}

// Severity level of message.
func (o StatusMessageResponseOutput) Level() pulumi.StringOutput {
	return o.ApplyT(func(v StatusMessageResponse) string { return v.Level }).(pulumi.StringOutput)
}

// A human-readable representation of the message code.
func (o StatusMessageResponseOutput) Message() pulumi.StringOutput {
	return o.ApplyT(func(v StatusMessageResponse) string { return v.Message }).(pulumi.StringOutput)
}

type StatusMessageResponseArrayOutput struct{ *pulumi.OutputState }

func (StatusMessageResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StatusMessageResponse)(nil)).Elem()
}

func (o StatusMessageResponseArrayOutput) ToStatusMessageResponseArrayOutput() StatusMessageResponseArrayOutput {
	return o
}

func (o StatusMessageResponseArrayOutput) ToStatusMessageResponseArrayOutputWithContext(ctx context.Context) StatusMessageResponseArrayOutput {
	return o
}

func (o StatusMessageResponseArrayOutput) Index(i pulumi.IntInput) StatusMessageResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StatusMessageResponse {
		return vs[0].([]StatusMessageResponse)[vs[1].(int)]
	}).(StatusMessageResponseOutput)
}

// Details of storage account to be used for the Registry
type StorageAccountDetails struct {
	// Details of system created storage account to be used for the registry
	SystemCreatedStorageAccount *SystemCreatedStorageAccount `pulumi:"systemCreatedStorageAccount"`
	// Details of user created storage account to be used for the registry
	UserCreatedStorageAccount *UserCreatedStorageAccount `pulumi:"userCreatedStorageAccount"`
}

// StorageAccountDetailsInput is an input type that accepts StorageAccountDetailsArgs and StorageAccountDetailsOutput values.
// You can construct a concrete instance of `StorageAccountDetailsInput` via:
//
//	StorageAccountDetailsArgs{...}
type StorageAccountDetailsInput interface {
	pulumi.Input

	ToStorageAccountDetailsOutput() StorageAccountDetailsOutput
	ToStorageAccountDetailsOutputWithContext(context.Context) StorageAccountDetailsOutput
}

// Details of storage account to be used for the Registry
type StorageAccountDetailsArgs struct {
	// Details of system created storage account to be used for the registry
	SystemCreatedStorageAccount SystemCreatedStorageAccountPtrInput `pulumi:"systemCreatedStorageAccount"`
	// Details of user created storage account to be used for the registry
	UserCreatedStorageAccount UserCreatedStorageAccountPtrInput `pulumi:"userCreatedStorageAccount"`
}

func (StorageAccountDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageAccountDetails)(nil)).Elem()
}

func (i StorageAccountDetailsArgs) ToStorageAccountDetailsOutput() StorageAccountDetailsOutput {
	return i.ToStorageAccountDetailsOutputWithContext(context.Background())
}

func (i StorageAccountDetailsArgs) ToStorageAccountDetailsOutputWithContext(ctx context.Context) StorageAccountDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageAccountDetailsOutput)
}

// StorageAccountDetailsArrayInput is an input type that accepts StorageAccountDetailsArray and StorageAccountDetailsArrayOutput values.
// You can construct a concrete instance of `StorageAccountDetailsArrayInput` via:
//
//	StorageAccountDetailsArray{ StorageAccountDetailsArgs{...} }
type StorageAccountDetailsArrayInput interface {
	pulumi.Input

	ToStorageAccountDetailsArrayOutput() StorageAccountDetailsArrayOutput
	ToStorageAccountDetailsArrayOutputWithContext(context.Context) StorageAccountDetailsArrayOutput
}

type StorageAccountDetailsArray []StorageAccountDetailsInput

func (StorageAccountDetailsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StorageAccountDetails)(nil)).Elem()
}

func (i StorageAccountDetailsArray) ToStorageAccountDetailsArrayOutput() StorageAccountDetailsArrayOutput {
	return i.ToStorageAccountDetailsArrayOutputWithContext(context.Background())
}

func (i StorageAccountDetailsArray) ToStorageAccountDetailsArrayOutputWithContext(ctx context.Context) StorageAccountDetailsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageAccountDetailsArrayOutput)
}

// Details of storage account to be used for the Registry
type StorageAccountDetailsOutput struct{ *pulumi.OutputState }

func (StorageAccountDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageAccountDetails)(nil)).Elem()
}

func (o StorageAccountDetailsOutput) ToStorageAccountDetailsOutput() StorageAccountDetailsOutput {
	return o
}

func (o StorageAccountDetailsOutput) ToStorageAccountDetailsOutputWithContext(ctx context.Context) StorageAccountDetailsOutput {
	return o
}

// Details of system created storage account to be used for the registry
func (o StorageAccountDetailsOutput) SystemCreatedStorageAccount() SystemCreatedStorageAccountPtrOutput {
	return o.ApplyT(func(v StorageAccountDetails) *SystemCreatedStorageAccount { return v.SystemCreatedStorageAccount }).(SystemCreatedStorageAccountPtrOutput)
}

// Details of user created storage account to be used for the registry
func (o StorageAccountDetailsOutput) UserCreatedStorageAccount() UserCreatedStorageAccountPtrOutput {
	return o.ApplyT(func(v StorageAccountDetails) *UserCreatedStorageAccount { return v.UserCreatedStorageAccount }).(UserCreatedStorageAccountPtrOutput)
}

type StorageAccountDetailsArrayOutput struct{ *pulumi.OutputState }

func (StorageAccountDetailsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StorageAccountDetails)(nil)).Elem()
}

func (o StorageAccountDetailsArrayOutput) ToStorageAccountDetailsArrayOutput() StorageAccountDetailsArrayOutput {
	return o
}

func (o StorageAccountDetailsArrayOutput) ToStorageAccountDetailsArrayOutputWithContext(ctx context.Context) StorageAccountDetailsArrayOutput {
	return o
}

func (o StorageAccountDetailsArrayOutput) Index(i pulumi.IntInput) StorageAccountDetailsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StorageAccountDetails {
		return vs[0].([]StorageAccountDetails)[vs[1].(int)]
	}).(StorageAccountDetailsOutput)
}

// Details of storage account to be used for the Registry
type StorageAccountDetailsResponse struct {
	// Details of system created storage account to be used for the registry
	SystemCreatedStorageAccount *SystemCreatedStorageAccountResponse `pulumi:"systemCreatedStorageAccount"`
	// Details of user created storage account to be used for the registry
	UserCreatedStorageAccount *UserCreatedStorageAccountResponse `pulumi:"userCreatedStorageAccount"`
}

// Details of storage account to be used for the Registry
type StorageAccountDetailsResponseOutput struct{ *pulumi.OutputState }

func (StorageAccountDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageAccountDetailsResponse)(nil)).Elem()
}

func (o StorageAccountDetailsResponseOutput) ToStorageAccountDetailsResponseOutput() StorageAccountDetailsResponseOutput {
	return o
}

func (o StorageAccountDetailsResponseOutput) ToStorageAccountDetailsResponseOutputWithContext(ctx context.Context) StorageAccountDetailsResponseOutput {
	return o
}

// Details of system created storage account to be used for the registry
func (o StorageAccountDetailsResponseOutput) SystemCreatedStorageAccount() SystemCreatedStorageAccountResponsePtrOutput {
	return o.ApplyT(func(v StorageAccountDetailsResponse) *SystemCreatedStorageAccountResponse {
		return v.SystemCreatedStorageAccount
	}).(SystemCreatedStorageAccountResponsePtrOutput)
}

// Details of user created storage account to be used for the registry
func (o StorageAccountDetailsResponseOutput) UserCreatedStorageAccount() UserCreatedStorageAccountResponsePtrOutput {
	return o.ApplyT(func(v StorageAccountDetailsResponse) *UserCreatedStorageAccountResponse {
		return v.UserCreatedStorageAccount
	}).(UserCreatedStorageAccountResponsePtrOutput)
}

type StorageAccountDetailsResponseArrayOutput struct{ *pulumi.OutputState }

func (StorageAccountDetailsResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StorageAccountDetailsResponse)(nil)).Elem()
}

func (o StorageAccountDetailsResponseArrayOutput) ToStorageAccountDetailsResponseArrayOutput() StorageAccountDetailsResponseArrayOutput {
	return o
}

func (o StorageAccountDetailsResponseArrayOutput) ToStorageAccountDetailsResponseArrayOutputWithContext(ctx context.Context) StorageAccountDetailsResponseArrayOutput {
	return o
}

func (o StorageAccountDetailsResponseArrayOutput) Index(i pulumi.IntInput) StorageAccountDetailsResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StorageAccountDetailsResponse {
		return vs[0].([]StorageAccountDetailsResponse)[vs[1].(int)]
	}).(StorageAccountDetailsResponseOutput)
}

// Sweep job definition.
type SweepJob struct {
	// Component Configuration for sweep over component
	ComponentConfiguration *ComponentConfiguration `pulumi:"componentConfiguration"`
	// ARM resource ID of the component resource.
	ComponentId *string `pulumi:"componentId"`
	// ARM resource ID of the compute resource.
	ComputeId *string `pulumi:"computeId"`
	// The asset description text.
	Description *string `pulumi:"description"`
	// Display name of job.
	DisplayName *string `pulumi:"displayName"`
	// Early termination policies enable canceling poor-performing runs before they complete
	EarlyTermination interface{} `pulumi:"earlyTermination"`
	// The name of the experiment the job belongs to. If not set, the job is placed in the "Default" experiment.
	ExperimentName *string `pulumi:"experimentName"`
	// Identity configuration. If set, this should be one of AmlToken, ManagedIdentity, UserIdentity or null.
	// Defaults to AmlToken if null.
	Identity interface{} `pulumi:"identity"`
	// Mapping of input data bindings used in the job.
	Inputs map[string]interface{} `pulumi:"inputs"`
	// Is the asset archived?
	IsArchived *bool `pulumi:"isArchived"`
	// Enum to determine the type of job.
	// Expected value is 'Sweep'.
	JobType string `pulumi:"jobType"`
	// Sweep Job limit.
	Limits *SweepJobLimits `pulumi:"limits"`
	// Notification setting for the job
	NotificationSetting *NotificationSetting `pulumi:"notificationSetting"`
	// [Required] Optimization objective.
	Objective Objective `pulumi:"objective"`
	// Mapping of output data bindings used in the job.
	Outputs map[string]interface{} `pulumi:"outputs"`
	// The asset property dictionary.
	Properties map[string]string `pulumi:"properties"`
	// Queue settings for the job
	QueueSettings *QueueSettings `pulumi:"queueSettings"`
	// Compute Resource configuration for the job.
	Resources *JobResourceConfiguration `pulumi:"resources"`
	// [Required] The hyperparameter sampling algorithm
	SamplingAlgorithm interface{} `pulumi:"samplingAlgorithm"`
	// [Required] A dictionary containing each parameter and its distribution. The dictionary key is the name of the parameter
	SearchSpace interface{} `pulumi:"searchSpace"`
	// Configuration for secrets to be made available during runtime.
	SecretsConfiguration map[string]SecretConfiguration `pulumi:"secretsConfiguration"`
	// List of JobEndpoints.
	// For local jobs, a job endpoint will have an endpoint value of FileStreamObject.
	Services map[string]JobService `pulumi:"services"`
	// Tag dictionary. Tags can be added, removed, and updated.
	Tags map[string]string `pulumi:"tags"`
	// [Required] Trial component definition.
	Trial TrialComponent `pulumi:"trial"`
}

// Defaults sets the appropriate defaults for SweepJob
func (val *SweepJob) Defaults() *SweepJob {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.ExperimentName == nil {
		experimentName_ := "Default"
		tmp.ExperimentName = &experimentName_
	}
	if tmp.IsArchived == nil {
		isArchived_ := false
		tmp.IsArchived = &isArchived_
	}
	tmp.QueueSettings = tmp.QueueSettings.Defaults()

	tmp.Resources = tmp.Resources.Defaults()

	tmp.Trial = *tmp.Trial.Defaults()

	return &tmp
}

// Sweep Job limit class.
type SweepJobLimits struct {
	// Expected value is 'Sweep'.
	JobLimitsType string `pulumi:"jobLimitsType"`
	// Sweep Job max concurrent trials.
	MaxConcurrentTrials *int `pulumi:"maxConcurrentTrials"`
	// Sweep Job max total trials.
	MaxTotalTrials *int `pulumi:"maxTotalTrials"`
	// The max run duration in ISO 8601 format, after which the job will be cancelled. Only supports duration with precision as low as Seconds.
	Timeout *string `pulumi:"timeout"`
	// Sweep Job Trial timeout value.
	TrialTimeout *string `pulumi:"trialTimeout"`
}

// Sweep Job limit class.
type SweepJobLimitsResponse struct {
	// Expected value is 'Sweep'.
	JobLimitsType string `pulumi:"jobLimitsType"`
	// Sweep Job max concurrent trials.
	MaxConcurrentTrials *int `pulumi:"maxConcurrentTrials"`
	// Sweep Job max total trials.
	MaxTotalTrials *int `pulumi:"maxTotalTrials"`
	// The max run duration in ISO 8601 format, after which the job will be cancelled. Only supports duration with precision as low as Seconds.
	Timeout *string `pulumi:"timeout"`
	// Sweep Job Trial timeout value.
	TrialTimeout *string `pulumi:"trialTimeout"`
}

// Sweep job definition.
type SweepJobResponse struct {
	// Component Configuration for sweep over component
	ComponentConfiguration *ComponentConfigurationResponse `pulumi:"componentConfiguration"`
	// ARM resource ID of the component resource.
	ComponentId *string `pulumi:"componentId"`
	// ARM resource ID of the compute resource.
	ComputeId *string `pulumi:"computeId"`
	// The asset description text.
	Description *string `pulumi:"description"`
	// Display name of job.
	DisplayName *string `pulumi:"displayName"`
	// Early termination policies enable canceling poor-performing runs before they complete
	EarlyTermination interface{} `pulumi:"earlyTermination"`
	// The name of the experiment the job belongs to. If not set, the job is placed in the "Default" experiment.
	ExperimentName *string `pulumi:"experimentName"`
	// Identity configuration. If set, this should be one of AmlToken, ManagedIdentity, UserIdentity or null.
	// Defaults to AmlToken if null.
	Identity interface{} `pulumi:"identity"`
	// Mapping of input data bindings used in the job.
	Inputs map[string]interface{} `pulumi:"inputs"`
	// Is the asset archived?
	IsArchived *bool `pulumi:"isArchived"`
	// Enum to determine the type of job.
	// Expected value is 'Sweep'.
	JobType string `pulumi:"jobType"`
	// Sweep Job limit.
	Limits *SweepJobLimitsResponse `pulumi:"limits"`
	// Notification setting for the job
	NotificationSetting *NotificationSettingResponse `pulumi:"notificationSetting"`
	// [Required] Optimization objective.
	Objective ObjectiveResponse `pulumi:"objective"`
	// Mapping of output data bindings used in the job.
	Outputs map[string]interface{} `pulumi:"outputs"`
	// The asset property dictionary.
	Properties map[string]string `pulumi:"properties"`
	// Queue settings for the job
	QueueSettings *QueueSettingsResponse `pulumi:"queueSettings"`
	// Compute Resource configuration for the job.
	Resources *JobResourceConfigurationResponse `pulumi:"resources"`
	// [Required] The hyperparameter sampling algorithm
	SamplingAlgorithm interface{} `pulumi:"samplingAlgorithm"`
	// [Required] A dictionary containing each parameter and its distribution. The dictionary key is the name of the parameter
	SearchSpace interface{} `pulumi:"searchSpace"`
	// Configuration for secrets to be made available during runtime.
	SecretsConfiguration map[string]SecretConfigurationResponse `pulumi:"secretsConfiguration"`
	// List of JobEndpoints.
	// For local jobs, a job endpoint will have an endpoint value of FileStreamObject.
	Services map[string]JobServiceResponse `pulumi:"services"`
	// Status of the job.
	Status string `pulumi:"status"`
	// Tag dictionary. Tags can be added, removed, and updated.
	Tags map[string]string `pulumi:"tags"`
	// [Required] Trial component definition.
	Trial TrialComponentResponse `pulumi:"trial"`
}

// Defaults sets the appropriate defaults for SweepJobResponse
func (val *SweepJobResponse) Defaults() *SweepJobResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.ExperimentName == nil {
		experimentName_ := "Default"
		tmp.ExperimentName = &experimentName_
	}
	if tmp.IsArchived == nil {
		isArchived_ := false
		tmp.IsArchived = &isArchived_
	}
	tmp.QueueSettings = tmp.QueueSettings.Defaults()

	tmp.Resources = tmp.Resources.Defaults()

	tmp.Trial = *tmp.Trial.Defaults()

	return &tmp
}

// A SynapseSpark compute.
type SynapseSpark struct {
	// Location for the underlying compute
	ComputeLocation *string `pulumi:"computeLocation"`
	// The type of compute
	// Expected value is 'SynapseSpark'.
	ComputeType string `pulumi:"computeType"`
	// The description of the Machine Learning compute.
	Description *string `pulumi:"description"`
	// Opt-out of local authentication and ensure customers can use only MSI and AAD exclusively for authentication.
	DisableLocalAuth *bool                   `pulumi:"disableLocalAuth"`
	Properties       *SynapseSparkProperties `pulumi:"properties"`
	// ARM resource id of the underlying compute
	ResourceId *string `pulumi:"resourceId"`
}

type SynapseSparkProperties struct {
	// Auto pause properties.
	AutoPauseProperties *AutoPauseProperties `pulumi:"autoPauseProperties"`
	// Auto scale properties.
	AutoScaleProperties *AutoScaleProperties `pulumi:"autoScaleProperties"`
	// The number of compute nodes currently assigned to the compute.
	NodeCount *int `pulumi:"nodeCount"`
	// Node size.
	NodeSize *string `pulumi:"nodeSize"`
	// Node size family.
	NodeSizeFamily *string `pulumi:"nodeSizeFamily"`
	// Pool name.
	PoolName *string `pulumi:"poolName"`
	// Name of the resource group in which workspace is located.
	ResourceGroup *string `pulumi:"resourceGroup"`
	// Spark version.
	SparkVersion *string `pulumi:"sparkVersion"`
	// Azure subscription identifier.
	SubscriptionId *string `pulumi:"subscriptionId"`
	// Name of Azure Machine Learning workspace.
	WorkspaceName *string `pulumi:"workspaceName"`
}

// A SynapseSpark compute.
type SynapseSparkResponse struct {
	// Location for the underlying compute
	ComputeLocation *string `pulumi:"computeLocation"`
	// The type of compute
	// Expected value is 'SynapseSpark'.
	ComputeType string `pulumi:"computeType"`
	// The time at which the compute was created.
	CreatedOn string `pulumi:"createdOn"`
	// The description of the Machine Learning compute.
	Description *string `pulumi:"description"`
	// Opt-out of local authentication and ensure customers can use only MSI and AAD exclusively for authentication.
	DisableLocalAuth *bool `pulumi:"disableLocalAuth"`
	// Indicating whether the compute was provisioned by user and brought from outside if true, or machine learning service provisioned it if false.
	IsAttachedCompute bool `pulumi:"isAttachedCompute"`
	// The time at which the compute was last modified.
	ModifiedOn string                          `pulumi:"modifiedOn"`
	Properties *SynapseSparkResponseProperties `pulumi:"properties"`
	// Errors during provisioning
	ProvisioningErrors []ErrorResponseResponse `pulumi:"provisioningErrors"`
	// The provision state of the cluster. Valid values are Unknown, Updating, Provisioning, Succeeded, and Failed.
	ProvisioningState string `pulumi:"provisioningState"`
	// ARM resource id of the underlying compute
	ResourceId *string `pulumi:"resourceId"`
}

type SynapseSparkResponseProperties struct {
	// Auto pause properties.
	AutoPauseProperties *AutoPausePropertiesResponse `pulumi:"autoPauseProperties"`
	// Auto scale properties.
	AutoScaleProperties *AutoScalePropertiesResponse `pulumi:"autoScaleProperties"`
	// The number of compute nodes currently assigned to the compute.
	NodeCount *int `pulumi:"nodeCount"`
	// Node size.
	NodeSize *string `pulumi:"nodeSize"`
	// Node size family.
	NodeSizeFamily *string `pulumi:"nodeSizeFamily"`
	// Pool name.
	PoolName *string `pulumi:"poolName"`
	// Name of the resource group in which workspace is located.
	ResourceGroup *string `pulumi:"resourceGroup"`
	// Spark version.
	SparkVersion *string `pulumi:"sparkVersion"`
	// Azure subscription identifier.
	SubscriptionId *string `pulumi:"subscriptionId"`
	// Name of Azure Machine Learning workspace.
	WorkspaceName *string `pulumi:"workspaceName"`
}

type SystemCreatedAcrAccount struct {
	// Name of the ACR account
	AcrAccountName *string `pulumi:"acrAccountName"`
	// SKU of the ACR account
	AcrAccountSku *string `pulumi:"acrAccountSku"`
	// This is populated once the ACR account is created.
	ArmResourceId *ArmResourceId `pulumi:"armResourceId"`
}

// SystemCreatedAcrAccountInput is an input type that accepts SystemCreatedAcrAccountArgs and SystemCreatedAcrAccountOutput values.
// You can construct a concrete instance of `SystemCreatedAcrAccountInput` via:
//
//	SystemCreatedAcrAccountArgs{...}
type SystemCreatedAcrAccountInput interface {
	pulumi.Input

	ToSystemCreatedAcrAccountOutput() SystemCreatedAcrAccountOutput
	ToSystemCreatedAcrAccountOutputWithContext(context.Context) SystemCreatedAcrAccountOutput
}

type SystemCreatedAcrAccountArgs struct {
	// Name of the ACR account
	AcrAccountName pulumi.StringPtrInput `pulumi:"acrAccountName"`
	// SKU of the ACR account
	AcrAccountSku pulumi.StringPtrInput `pulumi:"acrAccountSku"`
	// This is populated once the ACR account is created.
	ArmResourceId ArmResourceIdPtrInput `pulumi:"armResourceId"`
}

func (SystemCreatedAcrAccountArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemCreatedAcrAccount)(nil)).Elem()
}

func (i SystemCreatedAcrAccountArgs) ToSystemCreatedAcrAccountOutput() SystemCreatedAcrAccountOutput {
	return i.ToSystemCreatedAcrAccountOutputWithContext(context.Background())
}

func (i SystemCreatedAcrAccountArgs) ToSystemCreatedAcrAccountOutputWithContext(ctx context.Context) SystemCreatedAcrAccountOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemCreatedAcrAccountOutput)
}

func (i SystemCreatedAcrAccountArgs) ToSystemCreatedAcrAccountPtrOutput() SystemCreatedAcrAccountPtrOutput {
	return i.ToSystemCreatedAcrAccountPtrOutputWithContext(context.Background())
}

func (i SystemCreatedAcrAccountArgs) ToSystemCreatedAcrAccountPtrOutputWithContext(ctx context.Context) SystemCreatedAcrAccountPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemCreatedAcrAccountOutput).ToSystemCreatedAcrAccountPtrOutputWithContext(ctx)
}

// SystemCreatedAcrAccountPtrInput is an input type that accepts SystemCreatedAcrAccountArgs, SystemCreatedAcrAccountPtr and SystemCreatedAcrAccountPtrOutput values.
// You can construct a concrete instance of `SystemCreatedAcrAccountPtrInput` via:
//
//	        SystemCreatedAcrAccountArgs{...}
//
//	or:
//
//	        nil
type SystemCreatedAcrAccountPtrInput interface {
	pulumi.Input

	ToSystemCreatedAcrAccountPtrOutput() SystemCreatedAcrAccountPtrOutput
	ToSystemCreatedAcrAccountPtrOutputWithContext(context.Context) SystemCreatedAcrAccountPtrOutput
}

type systemCreatedAcrAccountPtrType SystemCreatedAcrAccountArgs

func SystemCreatedAcrAccountPtr(v *SystemCreatedAcrAccountArgs) SystemCreatedAcrAccountPtrInput {
	return (*systemCreatedAcrAccountPtrType)(v)
}

func (*systemCreatedAcrAccountPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemCreatedAcrAccount)(nil)).Elem()
}

func (i *systemCreatedAcrAccountPtrType) ToSystemCreatedAcrAccountPtrOutput() SystemCreatedAcrAccountPtrOutput {
	return i.ToSystemCreatedAcrAccountPtrOutputWithContext(context.Background())
}

func (i *systemCreatedAcrAccountPtrType) ToSystemCreatedAcrAccountPtrOutputWithContext(ctx context.Context) SystemCreatedAcrAccountPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemCreatedAcrAccountPtrOutput)
}

type SystemCreatedAcrAccountOutput struct{ *pulumi.OutputState }

func (SystemCreatedAcrAccountOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemCreatedAcrAccount)(nil)).Elem()
}

func (o SystemCreatedAcrAccountOutput) ToSystemCreatedAcrAccountOutput() SystemCreatedAcrAccountOutput {
	return o
}

func (o SystemCreatedAcrAccountOutput) ToSystemCreatedAcrAccountOutputWithContext(ctx context.Context) SystemCreatedAcrAccountOutput {
	return o
}

func (o SystemCreatedAcrAccountOutput) ToSystemCreatedAcrAccountPtrOutput() SystemCreatedAcrAccountPtrOutput {
	return o.ToSystemCreatedAcrAccountPtrOutputWithContext(context.Background())
}

func (o SystemCreatedAcrAccountOutput) ToSystemCreatedAcrAccountPtrOutputWithContext(ctx context.Context) SystemCreatedAcrAccountPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SystemCreatedAcrAccount) *SystemCreatedAcrAccount {
		return &v
	}).(SystemCreatedAcrAccountPtrOutput)
}

// Name of the ACR account
func (o SystemCreatedAcrAccountOutput) AcrAccountName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemCreatedAcrAccount) *string { return v.AcrAccountName }).(pulumi.StringPtrOutput)
}

// SKU of the ACR account
func (o SystemCreatedAcrAccountOutput) AcrAccountSku() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemCreatedAcrAccount) *string { return v.AcrAccountSku }).(pulumi.StringPtrOutput)
}

// This is populated once the ACR account is created.
func (o SystemCreatedAcrAccountOutput) ArmResourceId() ArmResourceIdPtrOutput {
	return o.ApplyT(func(v SystemCreatedAcrAccount) *ArmResourceId { return v.ArmResourceId }).(ArmResourceIdPtrOutput)
}

type SystemCreatedAcrAccountPtrOutput struct{ *pulumi.OutputState }

func (SystemCreatedAcrAccountPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemCreatedAcrAccount)(nil)).Elem()
}

func (o SystemCreatedAcrAccountPtrOutput) ToSystemCreatedAcrAccountPtrOutput() SystemCreatedAcrAccountPtrOutput {
	return o
}

func (o SystemCreatedAcrAccountPtrOutput) ToSystemCreatedAcrAccountPtrOutputWithContext(ctx context.Context) SystemCreatedAcrAccountPtrOutput {
	return o
}

func (o SystemCreatedAcrAccountPtrOutput) Elem() SystemCreatedAcrAccountOutput {
	return o.ApplyT(func(v *SystemCreatedAcrAccount) SystemCreatedAcrAccount {
		if v != nil {
			return *v
		}
		var ret SystemCreatedAcrAccount
		return ret
	}).(SystemCreatedAcrAccountOutput)
}

// Name of the ACR account
func (o SystemCreatedAcrAccountPtrOutput) AcrAccountName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemCreatedAcrAccount) *string {
		if v == nil {
			return nil
		}
		return v.AcrAccountName
	}).(pulumi.StringPtrOutput)
}

// SKU of the ACR account
func (o SystemCreatedAcrAccountPtrOutput) AcrAccountSku() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemCreatedAcrAccount) *string {
		if v == nil {
			return nil
		}
		return v.AcrAccountSku
	}).(pulumi.StringPtrOutput)
}

// This is populated once the ACR account is created.
func (o SystemCreatedAcrAccountPtrOutput) ArmResourceId() ArmResourceIdPtrOutput {
	return o.ApplyT(func(v *SystemCreatedAcrAccount) *ArmResourceId {
		if v == nil {
			return nil
		}
		return v.ArmResourceId
	}).(ArmResourceIdPtrOutput)
}

type SystemCreatedAcrAccountResponse struct {
	// Name of the ACR account
	AcrAccountName *string `pulumi:"acrAccountName"`
	// SKU of the ACR account
	AcrAccountSku *string `pulumi:"acrAccountSku"`
	// This is populated once the ACR account is created.
	ArmResourceId *ArmResourceIdResponse `pulumi:"armResourceId"`
}

type SystemCreatedAcrAccountResponseOutput struct{ *pulumi.OutputState }

func (SystemCreatedAcrAccountResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemCreatedAcrAccountResponse)(nil)).Elem()
}

func (o SystemCreatedAcrAccountResponseOutput) ToSystemCreatedAcrAccountResponseOutput() SystemCreatedAcrAccountResponseOutput {
	return o
}

func (o SystemCreatedAcrAccountResponseOutput) ToSystemCreatedAcrAccountResponseOutputWithContext(ctx context.Context) SystemCreatedAcrAccountResponseOutput {
	return o
}

// Name of the ACR account
func (o SystemCreatedAcrAccountResponseOutput) AcrAccountName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemCreatedAcrAccountResponse) *string { return v.AcrAccountName }).(pulumi.StringPtrOutput)
}

// SKU of the ACR account
func (o SystemCreatedAcrAccountResponseOutput) AcrAccountSku() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemCreatedAcrAccountResponse) *string { return v.AcrAccountSku }).(pulumi.StringPtrOutput)
}

// This is populated once the ACR account is created.
func (o SystemCreatedAcrAccountResponseOutput) ArmResourceId() ArmResourceIdResponsePtrOutput {
	return o.ApplyT(func(v SystemCreatedAcrAccountResponse) *ArmResourceIdResponse { return v.ArmResourceId }).(ArmResourceIdResponsePtrOutput)
}

type SystemCreatedAcrAccountResponsePtrOutput struct{ *pulumi.OutputState }

func (SystemCreatedAcrAccountResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemCreatedAcrAccountResponse)(nil)).Elem()
}

func (o SystemCreatedAcrAccountResponsePtrOutput) ToSystemCreatedAcrAccountResponsePtrOutput() SystemCreatedAcrAccountResponsePtrOutput {
	return o
}

func (o SystemCreatedAcrAccountResponsePtrOutput) ToSystemCreatedAcrAccountResponsePtrOutputWithContext(ctx context.Context) SystemCreatedAcrAccountResponsePtrOutput {
	return o
}

func (o SystemCreatedAcrAccountResponsePtrOutput) Elem() SystemCreatedAcrAccountResponseOutput {
	return o.ApplyT(func(v *SystemCreatedAcrAccountResponse) SystemCreatedAcrAccountResponse {
		if v != nil {
			return *v
		}
		var ret SystemCreatedAcrAccountResponse
		return ret
	}).(SystemCreatedAcrAccountResponseOutput)
}

// Name of the ACR account
func (o SystemCreatedAcrAccountResponsePtrOutput) AcrAccountName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemCreatedAcrAccountResponse) *string {
		if v == nil {
			return nil
		}
		return v.AcrAccountName
	}).(pulumi.StringPtrOutput)
}

// SKU of the ACR account
func (o SystemCreatedAcrAccountResponsePtrOutput) AcrAccountSku() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemCreatedAcrAccountResponse) *string {
		if v == nil {
			return nil
		}
		return v.AcrAccountSku
	}).(pulumi.StringPtrOutput)
}

// This is populated once the ACR account is created.
func (o SystemCreatedAcrAccountResponsePtrOutput) ArmResourceId() ArmResourceIdResponsePtrOutput {
	return o.ApplyT(func(v *SystemCreatedAcrAccountResponse) *ArmResourceIdResponse {
		if v == nil {
			return nil
		}
		return v.ArmResourceId
	}).(ArmResourceIdResponsePtrOutput)
}

type SystemCreatedStorageAccount struct {
	// Public blob access allowed
	AllowBlobPublicAccess *bool `pulumi:"allowBlobPublicAccess"`
	// This is populated once the storage account is created.
	ArmResourceId *ArmResourceId `pulumi:"armResourceId"`
	// HNS enabled for storage account
	StorageAccountHnsEnabled *bool `pulumi:"storageAccountHnsEnabled"`
	// Name of the storage account
	StorageAccountName *string `pulumi:"storageAccountName"`
	// Allowed values:
	// "Standard_LRS",
	// "Standard_GRS",
	// "Standard_RAGRS",
	// "Standard_ZRS",
	// "Standard_GZRS",
	// "Standard_RAGZRS",
	// "Premium_LRS",
	// "Premium_ZRS"
	StorageAccountType *string `pulumi:"storageAccountType"`
}

// SystemCreatedStorageAccountInput is an input type that accepts SystemCreatedStorageAccountArgs and SystemCreatedStorageAccountOutput values.
// You can construct a concrete instance of `SystemCreatedStorageAccountInput` via:
//
//	SystemCreatedStorageAccountArgs{...}
type SystemCreatedStorageAccountInput interface {
	pulumi.Input

	ToSystemCreatedStorageAccountOutput() SystemCreatedStorageAccountOutput
	ToSystemCreatedStorageAccountOutputWithContext(context.Context) SystemCreatedStorageAccountOutput
}

type SystemCreatedStorageAccountArgs struct {
	// Public blob access allowed
	AllowBlobPublicAccess pulumi.BoolPtrInput `pulumi:"allowBlobPublicAccess"`
	// This is populated once the storage account is created.
	ArmResourceId ArmResourceIdPtrInput `pulumi:"armResourceId"`
	// HNS enabled for storage account
	StorageAccountHnsEnabled pulumi.BoolPtrInput `pulumi:"storageAccountHnsEnabled"`
	// Name of the storage account
	StorageAccountName pulumi.StringPtrInput `pulumi:"storageAccountName"`
	// Allowed values:
	// "Standard_LRS",
	// "Standard_GRS",
	// "Standard_RAGRS",
	// "Standard_ZRS",
	// "Standard_GZRS",
	// "Standard_RAGZRS",
	// "Premium_LRS",
	// "Premium_ZRS"
	StorageAccountType pulumi.StringPtrInput `pulumi:"storageAccountType"`
}

func (SystemCreatedStorageAccountArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemCreatedStorageAccount)(nil)).Elem()
}

func (i SystemCreatedStorageAccountArgs) ToSystemCreatedStorageAccountOutput() SystemCreatedStorageAccountOutput {
	return i.ToSystemCreatedStorageAccountOutputWithContext(context.Background())
}

func (i SystemCreatedStorageAccountArgs) ToSystemCreatedStorageAccountOutputWithContext(ctx context.Context) SystemCreatedStorageAccountOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemCreatedStorageAccountOutput)
}

func (i SystemCreatedStorageAccountArgs) ToSystemCreatedStorageAccountPtrOutput() SystemCreatedStorageAccountPtrOutput {
	return i.ToSystemCreatedStorageAccountPtrOutputWithContext(context.Background())
}

func (i SystemCreatedStorageAccountArgs) ToSystemCreatedStorageAccountPtrOutputWithContext(ctx context.Context) SystemCreatedStorageAccountPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemCreatedStorageAccountOutput).ToSystemCreatedStorageAccountPtrOutputWithContext(ctx)
}

// SystemCreatedStorageAccountPtrInput is an input type that accepts SystemCreatedStorageAccountArgs, SystemCreatedStorageAccountPtr and SystemCreatedStorageAccountPtrOutput values.
// You can construct a concrete instance of `SystemCreatedStorageAccountPtrInput` via:
//
//	        SystemCreatedStorageAccountArgs{...}
//
//	or:
//
//	        nil
type SystemCreatedStorageAccountPtrInput interface {
	pulumi.Input

	ToSystemCreatedStorageAccountPtrOutput() SystemCreatedStorageAccountPtrOutput
	ToSystemCreatedStorageAccountPtrOutputWithContext(context.Context) SystemCreatedStorageAccountPtrOutput
}

type systemCreatedStorageAccountPtrType SystemCreatedStorageAccountArgs

func SystemCreatedStorageAccountPtr(v *SystemCreatedStorageAccountArgs) SystemCreatedStorageAccountPtrInput {
	return (*systemCreatedStorageAccountPtrType)(v)
}

func (*systemCreatedStorageAccountPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemCreatedStorageAccount)(nil)).Elem()
}

func (i *systemCreatedStorageAccountPtrType) ToSystemCreatedStorageAccountPtrOutput() SystemCreatedStorageAccountPtrOutput {
	return i.ToSystemCreatedStorageAccountPtrOutputWithContext(context.Background())
}

func (i *systemCreatedStorageAccountPtrType) ToSystemCreatedStorageAccountPtrOutputWithContext(ctx context.Context) SystemCreatedStorageAccountPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemCreatedStorageAccountPtrOutput)
}

type SystemCreatedStorageAccountOutput struct{ *pulumi.OutputState }

func (SystemCreatedStorageAccountOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemCreatedStorageAccount)(nil)).Elem()
}

func (o SystemCreatedStorageAccountOutput) ToSystemCreatedStorageAccountOutput() SystemCreatedStorageAccountOutput {
	return o
}

func (o SystemCreatedStorageAccountOutput) ToSystemCreatedStorageAccountOutputWithContext(ctx context.Context) SystemCreatedStorageAccountOutput {
	return o
}

func (o SystemCreatedStorageAccountOutput) ToSystemCreatedStorageAccountPtrOutput() SystemCreatedStorageAccountPtrOutput {
	return o.ToSystemCreatedStorageAccountPtrOutputWithContext(context.Background())
}

func (o SystemCreatedStorageAccountOutput) ToSystemCreatedStorageAccountPtrOutputWithContext(ctx context.Context) SystemCreatedStorageAccountPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SystemCreatedStorageAccount) *SystemCreatedStorageAccount {
		return &v
	}).(SystemCreatedStorageAccountPtrOutput)
}

// Public blob access allowed
func (o SystemCreatedStorageAccountOutput) AllowBlobPublicAccess() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SystemCreatedStorageAccount) *bool { return v.AllowBlobPublicAccess }).(pulumi.BoolPtrOutput)
}

// This is populated once the storage account is created.
func (o SystemCreatedStorageAccountOutput) ArmResourceId() ArmResourceIdPtrOutput {
	return o.ApplyT(func(v SystemCreatedStorageAccount) *ArmResourceId { return v.ArmResourceId }).(ArmResourceIdPtrOutput)
}

// HNS enabled for storage account
func (o SystemCreatedStorageAccountOutput) StorageAccountHnsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SystemCreatedStorageAccount) *bool { return v.StorageAccountHnsEnabled }).(pulumi.BoolPtrOutput)
}

// Name of the storage account
func (o SystemCreatedStorageAccountOutput) StorageAccountName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemCreatedStorageAccount) *string { return v.StorageAccountName }).(pulumi.StringPtrOutput)
}

// Allowed values:
// "Standard_LRS",
// "Standard_GRS",
// "Standard_RAGRS",
// "Standard_ZRS",
// "Standard_GZRS",
// "Standard_RAGZRS",
// "Premium_LRS",
// "Premium_ZRS"
func (o SystemCreatedStorageAccountOutput) StorageAccountType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemCreatedStorageAccount) *string { return v.StorageAccountType }).(pulumi.StringPtrOutput)
}

type SystemCreatedStorageAccountPtrOutput struct{ *pulumi.OutputState }

func (SystemCreatedStorageAccountPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemCreatedStorageAccount)(nil)).Elem()
}

func (o SystemCreatedStorageAccountPtrOutput) ToSystemCreatedStorageAccountPtrOutput() SystemCreatedStorageAccountPtrOutput {
	return o
}

func (o SystemCreatedStorageAccountPtrOutput) ToSystemCreatedStorageAccountPtrOutputWithContext(ctx context.Context) SystemCreatedStorageAccountPtrOutput {
	return o
}

func (o SystemCreatedStorageAccountPtrOutput) Elem() SystemCreatedStorageAccountOutput {
	return o.ApplyT(func(v *SystemCreatedStorageAccount) SystemCreatedStorageAccount {
		if v != nil {
			return *v
		}
		var ret SystemCreatedStorageAccount
		return ret
	}).(SystemCreatedStorageAccountOutput)
}

// Public blob access allowed
func (o SystemCreatedStorageAccountPtrOutput) AllowBlobPublicAccess() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SystemCreatedStorageAccount) *bool {
		if v == nil {
			return nil
		}
		return v.AllowBlobPublicAccess
	}).(pulumi.BoolPtrOutput)
}

// This is populated once the storage account is created.
func (o SystemCreatedStorageAccountPtrOutput) ArmResourceId() ArmResourceIdPtrOutput {
	return o.ApplyT(func(v *SystemCreatedStorageAccount) *ArmResourceId {
		if v == nil {
			return nil
		}
		return v.ArmResourceId
	}).(ArmResourceIdPtrOutput)
}

// HNS enabled for storage account
func (o SystemCreatedStorageAccountPtrOutput) StorageAccountHnsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SystemCreatedStorageAccount) *bool {
		if v == nil {
			return nil
		}
		return v.StorageAccountHnsEnabled
	}).(pulumi.BoolPtrOutput)
}

// Name of the storage account
func (o SystemCreatedStorageAccountPtrOutput) StorageAccountName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemCreatedStorageAccount) *string {
		if v == nil {
			return nil
		}
		return v.StorageAccountName
	}).(pulumi.StringPtrOutput)
}

// Allowed values:
// "Standard_LRS",
// "Standard_GRS",
// "Standard_RAGRS",
// "Standard_ZRS",
// "Standard_GZRS",
// "Standard_RAGZRS",
// "Premium_LRS",
// "Premium_ZRS"
func (o SystemCreatedStorageAccountPtrOutput) StorageAccountType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemCreatedStorageAccount) *string {
		if v == nil {
			return nil
		}
		return v.StorageAccountType
	}).(pulumi.StringPtrOutput)
}

type SystemCreatedStorageAccountResponse struct {
	// Public blob access allowed
	AllowBlobPublicAccess *bool `pulumi:"allowBlobPublicAccess"`
	// This is populated once the storage account is created.
	ArmResourceId *ArmResourceIdResponse `pulumi:"armResourceId"`
	// HNS enabled for storage account
	StorageAccountHnsEnabled *bool `pulumi:"storageAccountHnsEnabled"`
	// Name of the storage account
	StorageAccountName *string `pulumi:"storageAccountName"`
	// Allowed values:
	// "Standard_LRS",
	// "Standard_GRS",
	// "Standard_RAGRS",
	// "Standard_ZRS",
	// "Standard_GZRS",
	// "Standard_RAGZRS",
	// "Premium_LRS",
	// "Premium_ZRS"
	StorageAccountType *string `pulumi:"storageAccountType"`
}

type SystemCreatedStorageAccountResponseOutput struct{ *pulumi.OutputState }

func (SystemCreatedStorageAccountResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemCreatedStorageAccountResponse)(nil)).Elem()
}

func (o SystemCreatedStorageAccountResponseOutput) ToSystemCreatedStorageAccountResponseOutput() SystemCreatedStorageAccountResponseOutput {
	return o
}

func (o SystemCreatedStorageAccountResponseOutput) ToSystemCreatedStorageAccountResponseOutputWithContext(ctx context.Context) SystemCreatedStorageAccountResponseOutput {
	return o
}

// Public blob access allowed
func (o SystemCreatedStorageAccountResponseOutput) AllowBlobPublicAccess() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SystemCreatedStorageAccountResponse) *bool { return v.AllowBlobPublicAccess }).(pulumi.BoolPtrOutput)
}

// This is populated once the storage account is created.
func (o SystemCreatedStorageAccountResponseOutput) ArmResourceId() ArmResourceIdResponsePtrOutput {
	return o.ApplyT(func(v SystemCreatedStorageAccountResponse) *ArmResourceIdResponse { return v.ArmResourceId }).(ArmResourceIdResponsePtrOutput)
}

// HNS enabled for storage account
func (o SystemCreatedStorageAccountResponseOutput) StorageAccountHnsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SystemCreatedStorageAccountResponse) *bool { return v.StorageAccountHnsEnabled }).(pulumi.BoolPtrOutput)
}

// Name of the storage account
func (o SystemCreatedStorageAccountResponseOutput) StorageAccountName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemCreatedStorageAccountResponse) *string { return v.StorageAccountName }).(pulumi.StringPtrOutput)
}

// Allowed values:
// "Standard_LRS",
// "Standard_GRS",
// "Standard_RAGRS",
// "Standard_ZRS",
// "Standard_GZRS",
// "Standard_RAGZRS",
// "Premium_LRS",
// "Premium_ZRS"
func (o SystemCreatedStorageAccountResponseOutput) StorageAccountType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemCreatedStorageAccountResponse) *string { return v.StorageAccountType }).(pulumi.StringPtrOutput)
}

type SystemCreatedStorageAccountResponsePtrOutput struct{ *pulumi.OutputState }

func (SystemCreatedStorageAccountResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemCreatedStorageAccountResponse)(nil)).Elem()
}

func (o SystemCreatedStorageAccountResponsePtrOutput) ToSystemCreatedStorageAccountResponsePtrOutput() SystemCreatedStorageAccountResponsePtrOutput {
	return o
}

func (o SystemCreatedStorageAccountResponsePtrOutput) ToSystemCreatedStorageAccountResponsePtrOutputWithContext(ctx context.Context) SystemCreatedStorageAccountResponsePtrOutput {
	return o
}

func (o SystemCreatedStorageAccountResponsePtrOutput) Elem() SystemCreatedStorageAccountResponseOutput {
	return o.ApplyT(func(v *SystemCreatedStorageAccountResponse) SystemCreatedStorageAccountResponse {
		if v != nil {
			return *v
		}
		var ret SystemCreatedStorageAccountResponse
		return ret
	}).(SystemCreatedStorageAccountResponseOutput)
}

// Public blob access allowed
func (o SystemCreatedStorageAccountResponsePtrOutput) AllowBlobPublicAccess() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SystemCreatedStorageAccountResponse) *bool {
		if v == nil {
			return nil
		}
		return v.AllowBlobPublicAccess
	}).(pulumi.BoolPtrOutput)
}

// This is populated once the storage account is created.
func (o SystemCreatedStorageAccountResponsePtrOutput) ArmResourceId() ArmResourceIdResponsePtrOutput {
	return o.ApplyT(func(v *SystemCreatedStorageAccountResponse) *ArmResourceIdResponse {
		if v == nil {
			return nil
		}
		return v.ArmResourceId
	}).(ArmResourceIdResponsePtrOutput)
}

// HNS enabled for storage account
func (o SystemCreatedStorageAccountResponsePtrOutput) StorageAccountHnsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SystemCreatedStorageAccountResponse) *bool {
		if v == nil {
			return nil
		}
		return v.StorageAccountHnsEnabled
	}).(pulumi.BoolPtrOutput)
}

// Name of the storage account
func (o SystemCreatedStorageAccountResponsePtrOutput) StorageAccountName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemCreatedStorageAccountResponse) *string {
		if v == nil {
			return nil
		}
		return v.StorageAccountName
	}).(pulumi.StringPtrOutput)
}

// Allowed values:
// "Standard_LRS",
// "Standard_GRS",
// "Standard_RAGRS",
// "Standard_ZRS",
// "Standard_GZRS",
// "Standard_RAGZRS",
// "Premium_LRS",
// "Premium_ZRS"
func (o SystemCreatedStorageAccountResponsePtrOutput) StorageAccountType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemCreatedStorageAccountResponse) *string {
		if v == nil {
			return nil
		}
		return v.StorageAccountType
	}).(pulumi.StringPtrOutput)
}

// Metadata pertaining to creation and last modification of the resource.
type SystemDataResponse struct {
	// The timestamp of resource creation (UTC).
	CreatedAt *string `pulumi:"createdAt"`
	// The identity that created the resource.
	CreatedBy *string `pulumi:"createdBy"`
	// The type of identity that created the resource.
	CreatedByType *string `pulumi:"createdByType"`
	// The timestamp of resource last modification (UTC)
	LastModifiedAt *string `pulumi:"lastModifiedAt"`
	// The identity that last modified the resource.
	LastModifiedBy *string `pulumi:"lastModifiedBy"`
	// The type of identity that last modified the resource.
	LastModifiedByType *string `pulumi:"lastModifiedByType"`
}

// Metadata pertaining to creation and last modification of the resource.
type SystemDataResponseOutput struct{ *pulumi.OutputState }

func (SystemDataResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemDataResponse)(nil)).Elem()
}

func (o SystemDataResponseOutput) ToSystemDataResponseOutput() SystemDataResponseOutput {
	return o
}

func (o SystemDataResponseOutput) ToSystemDataResponseOutputWithContext(ctx context.Context) SystemDataResponseOutput {
	return o
}

// The timestamp of resource creation (UTC).
func (o SystemDataResponseOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedAt }).(pulumi.StringPtrOutput)
}

// The identity that created the resource.
func (o SystemDataResponseOutput) CreatedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedBy }).(pulumi.StringPtrOutput)
}

// The type of identity that created the resource.
func (o SystemDataResponseOutput) CreatedByType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedByType }).(pulumi.StringPtrOutput)
}

// The timestamp of resource last modification (UTC)
func (o SystemDataResponseOutput) LastModifiedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedAt }).(pulumi.StringPtrOutput)
}

// The identity that last modified the resource.
func (o SystemDataResponseOutput) LastModifiedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedBy }).(pulumi.StringPtrOutput)
}

// The type of identity that last modified the resource.
func (o SystemDataResponseOutput) LastModifiedByType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedByType }).(pulumi.StringPtrOutput)
}

// A system service running on a compute.
type SystemServiceResponse struct {
	// Public IP address
	PublicIpAddress string `pulumi:"publicIpAddress"`
	// The type of this system service.
	SystemServiceType string `pulumi:"systemServiceType"`
	// The version for this type.
	Version string `pulumi:"version"`
}

// Fixed training parameters that won't be swept over during AutoML Table training.
type TableFixedParameters struct {
	// Specify the boosting type, e.g gbdt for XGBoost.
	Booster *string `pulumi:"booster"`
	// Specify the boosting type, e.g gbdt for LightGBM.
	BoostingType *string `pulumi:"boostingType"`
	// Specify the grow policy, which controls the way new nodes are added to the tree.
	GrowPolicy *string `pulumi:"growPolicy"`
	// The learning rate for the training procedure.
	LearningRate *float64 `pulumi:"learningRate"`
	// Specify the Maximum number of discrete bins to bucket continuous features .
	MaxBin *int `pulumi:"maxBin"`
	// Specify the max depth to limit the tree depth explicitly.
	MaxDepth *int `pulumi:"maxDepth"`
	// Specify the max leaves to limit the tree leaves explicitly.
	MaxLeaves *int `pulumi:"maxLeaves"`
	// The minimum number of data per leaf.
	MinDataInLeaf *int `pulumi:"minDataInLeaf"`
	// Minimum loss reduction required to make a further partition on a leaf node of the tree.
	MinSplitGain *float64 `pulumi:"minSplitGain"`
	// The name of the model to train.
	ModelName *string `pulumi:"modelName"`
	// Specify the number of trees (or rounds) in an model.
	NEstimators *int `pulumi:"nEstimators"`
	// Specify the number of leaves.
	NumLeaves *int `pulumi:"numLeaves"`
	// The name of the preprocessor to use.
	PreprocessorName *string `pulumi:"preprocessorName"`
	// L1 regularization term on weights.
	RegAlpha *float64 `pulumi:"regAlpha"`
	// L2 regularization term on weights.
	RegLambda *float64 `pulumi:"regLambda"`
	// Subsample ratio of the training instance.
	Subsample *float64 `pulumi:"subsample"`
	// Frequency of subsample.
	SubsampleFreq *float64 `pulumi:"subsampleFreq"`
	// Specify the tree method.
	TreeMethod *string `pulumi:"treeMethod"`
	// If true, center before scaling the data with StandardScalar.
	WithMean *bool `pulumi:"withMean"`
	// If true, scaling the data with Unit Variance with StandardScalar.
	WithStd *bool `pulumi:"withStd"`
}

// Defaults sets the appropriate defaults for TableFixedParameters
func (val *TableFixedParameters) Defaults() *TableFixedParameters {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.WithMean == nil {
		withMean_ := false
		tmp.WithMean = &withMean_
	}
	if tmp.WithStd == nil {
		withStd_ := false
		tmp.WithStd = &withStd_
	}
	return &tmp
}

// Fixed training parameters that won't be swept over during AutoML Table training.
type TableFixedParametersResponse struct {
	// Specify the boosting type, e.g gbdt for XGBoost.
	Booster *string `pulumi:"booster"`
	// Specify the boosting type, e.g gbdt for LightGBM.
	BoostingType *string `pulumi:"boostingType"`
	// Specify the grow policy, which controls the way new nodes are added to the tree.
	GrowPolicy *string `pulumi:"growPolicy"`
	// The learning rate for the training procedure.
	LearningRate *float64 `pulumi:"learningRate"`
	// Specify the Maximum number of discrete bins to bucket continuous features .
	MaxBin *int `pulumi:"maxBin"`
	// Specify the max depth to limit the tree depth explicitly.
	MaxDepth *int `pulumi:"maxDepth"`
	// Specify the max leaves to limit the tree leaves explicitly.
	MaxLeaves *int `pulumi:"maxLeaves"`
	// The minimum number of data per leaf.
	MinDataInLeaf *int `pulumi:"minDataInLeaf"`
	// Minimum loss reduction required to make a further partition on a leaf node of the tree.
	MinSplitGain *float64 `pulumi:"minSplitGain"`
	// The name of the model to train.
	ModelName *string `pulumi:"modelName"`
	// Specify the number of trees (or rounds) in an model.
	NEstimators *int `pulumi:"nEstimators"`
	// Specify the number of leaves.
	NumLeaves *int `pulumi:"numLeaves"`
	// The name of the preprocessor to use.
	PreprocessorName *string `pulumi:"preprocessorName"`
	// L1 regularization term on weights.
	RegAlpha *float64 `pulumi:"regAlpha"`
	// L2 regularization term on weights.
	RegLambda *float64 `pulumi:"regLambda"`
	// Subsample ratio of the training instance.
	Subsample *float64 `pulumi:"subsample"`
	// Frequency of subsample.
	SubsampleFreq *float64 `pulumi:"subsampleFreq"`
	// Specify the tree method.
	TreeMethod *string `pulumi:"treeMethod"`
	// If true, center before scaling the data with StandardScalar.
	WithMean *bool `pulumi:"withMean"`
	// If true, scaling the data with Unit Variance with StandardScalar.
	WithStd *bool `pulumi:"withStd"`
}

// Defaults sets the appropriate defaults for TableFixedParametersResponse
func (val *TableFixedParametersResponse) Defaults() *TableFixedParametersResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.WithMean == nil {
		withMean_ := false
		tmp.WithMean = &withMean_
	}
	if tmp.WithStd == nil {
		withStd_ := false
		tmp.WithStd = &withStd_
	}
	return &tmp
}

type TableParameterSubspace struct {
	// Specify the boosting type, e.g gbdt for XGBoost.
	Booster *string `pulumi:"booster"`
	// Specify the boosting type, e.g gbdt for LightGBM.
	BoostingType *string `pulumi:"boostingType"`
	// Specify the grow policy, which controls the way new nodes are added to the tree.
	GrowPolicy *string `pulumi:"growPolicy"`
	// The learning rate for the training procedure.
	LearningRate *string `pulumi:"learningRate"`
	// Specify the Maximum number of discrete bins to bucket continuous features .
	MaxBin *string `pulumi:"maxBin"`
	// Specify the max depth to limit the tree depth explicitly.
	MaxDepth *string `pulumi:"maxDepth"`
	// Specify the max leaves to limit the tree leaves explicitly.
	MaxLeaves *string `pulumi:"maxLeaves"`
	// The minimum number of data per leaf.
	MinDataInLeaf *string `pulumi:"minDataInLeaf"`
	// Minimum loss reduction required to make a further partition on a leaf node of the tree.
	MinSplitGain *string `pulumi:"minSplitGain"`
	// The name of the model to train.
	ModelName *string `pulumi:"modelName"`
	// Specify the number of trees (or rounds) in an model.
	NEstimators *string `pulumi:"nEstimators"`
	// Specify the number of leaves.
	NumLeaves *string `pulumi:"numLeaves"`
	// The name of the preprocessor to use.
	PreprocessorName *string `pulumi:"preprocessorName"`
	// L1 regularization term on weights.
	RegAlpha *string `pulumi:"regAlpha"`
	// L2 regularization term on weights.
	RegLambda *string `pulumi:"regLambda"`
	// Subsample ratio of the training instance.
	Subsample *string `pulumi:"subsample"`
	// Frequency of subsample
	SubsampleFreq *string `pulumi:"subsampleFreq"`
	// Specify the tree method.
	TreeMethod *string `pulumi:"treeMethod"`
	// If true, center before scaling the data with StandardScalar.
	WithMean *string `pulumi:"withMean"`
	// If true, scaling the data with Unit Variance with StandardScalar.
	WithStd *string `pulumi:"withStd"`
}

type TableParameterSubspaceResponse struct {
	// Specify the boosting type, e.g gbdt for XGBoost.
	Booster *string `pulumi:"booster"`
	// Specify the boosting type, e.g gbdt for LightGBM.
	BoostingType *string `pulumi:"boostingType"`
	// Specify the grow policy, which controls the way new nodes are added to the tree.
	GrowPolicy *string `pulumi:"growPolicy"`
	// The learning rate for the training procedure.
	LearningRate *string `pulumi:"learningRate"`
	// Specify the Maximum number of discrete bins to bucket continuous features .
	MaxBin *string `pulumi:"maxBin"`
	// Specify the max depth to limit the tree depth explicitly.
	MaxDepth *string `pulumi:"maxDepth"`
	// Specify the max leaves to limit the tree leaves explicitly.
	MaxLeaves *string `pulumi:"maxLeaves"`
	// The minimum number of data per leaf.
	MinDataInLeaf *string `pulumi:"minDataInLeaf"`
	// Minimum loss reduction required to make a further partition on a leaf node of the tree.
	MinSplitGain *string `pulumi:"minSplitGain"`
	// The name of the model to train.
	ModelName *string `pulumi:"modelName"`
	// Specify the number of trees (or rounds) in an model.
	NEstimators *string `pulumi:"nEstimators"`
	// Specify the number of leaves.
	NumLeaves *string `pulumi:"numLeaves"`
	// The name of the preprocessor to use.
	PreprocessorName *string `pulumi:"preprocessorName"`
	// L1 regularization term on weights.
	RegAlpha *string `pulumi:"regAlpha"`
	// L2 regularization term on weights.
	RegLambda *string `pulumi:"regLambda"`
	// Subsample ratio of the training instance.
	Subsample *string `pulumi:"subsample"`
	// Frequency of subsample
	SubsampleFreq *string `pulumi:"subsampleFreq"`
	// Specify the tree method.
	TreeMethod *string `pulumi:"treeMethod"`
	// If true, center before scaling the data with StandardScalar.
	WithMean *string `pulumi:"withMean"`
	// If true, scaling the data with Unit Variance with StandardScalar.
	WithStd *string `pulumi:"withStd"`
}

type TableSweepSettings struct {
	// Type of early termination policy for the sweeping job.
	EarlyTermination interface{} `pulumi:"earlyTermination"`
	// [Required] Type of sampling algorithm.
	SamplingAlgorithm string `pulumi:"samplingAlgorithm"`
}

type TableSweepSettingsResponse struct {
	// Type of early termination policy for the sweeping job.
	EarlyTermination interface{} `pulumi:"earlyTermination"`
	// [Required] Type of sampling algorithm.
	SamplingAlgorithm string `pulumi:"samplingAlgorithm"`
}

// Featurization Configuration.
type TableVerticalFeaturizationSettings struct {
	// These transformers shall not be used in featurization.
	BlockedTransformers []string `pulumi:"blockedTransformers"`
	// Dictionary of column name and its type (int, float, string, datetime etc).
	ColumnNameAndTypes map[string]string `pulumi:"columnNameAndTypes"`
	// Dataset language, useful for the text data.
	DatasetLanguage *string `pulumi:"datasetLanguage"`
	// Determines whether to use Dnn based featurizers for data featurization.
	EnableDnnFeaturization *bool `pulumi:"enableDnnFeaturization"`
	// Featurization mode - User can keep the default 'Auto' mode and AutoML will take care of necessary transformation of the data in featurization phase.
	// If 'Off' is selected then no featurization is done.
	// If 'Custom' is selected then user can specify additional inputs to customize how featurization is done.
	Mode *string `pulumi:"mode"`
	// User can specify additional transformers to be used along with the columns to which it would be applied and parameters for the transformer constructor.
	TransformerParams map[string][]ColumnTransformer `pulumi:"transformerParams"`
}

// Defaults sets the appropriate defaults for TableVerticalFeaturizationSettings
func (val *TableVerticalFeaturizationSettings) Defaults() *TableVerticalFeaturizationSettings {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.EnableDnnFeaturization == nil {
		enableDnnFeaturization_ := false
		tmp.EnableDnnFeaturization = &enableDnnFeaturization_
	}
	if tmp.Mode == nil {
		mode_ := "Auto"
		tmp.Mode = &mode_
	}
	return &tmp
}

// Featurization Configuration.
type TableVerticalFeaturizationSettingsResponse struct {
	// These transformers shall not be used in featurization.
	BlockedTransformers []string `pulumi:"blockedTransformers"`
	// Dictionary of column name and its type (int, float, string, datetime etc).
	ColumnNameAndTypes map[string]string `pulumi:"columnNameAndTypes"`
	// Dataset language, useful for the text data.
	DatasetLanguage *string `pulumi:"datasetLanguage"`
	// Determines whether to use Dnn based featurizers for data featurization.
	EnableDnnFeaturization *bool `pulumi:"enableDnnFeaturization"`
	// Featurization mode - User can keep the default 'Auto' mode and AutoML will take care of necessary transformation of the data in featurization phase.
	// If 'Off' is selected then no featurization is done.
	// If 'Custom' is selected then user can specify additional inputs to customize how featurization is done.
	Mode *string `pulumi:"mode"`
	// User can specify additional transformers to be used along with the columns to which it would be applied and parameters for the transformer constructor.
	TransformerParams map[string][]ColumnTransformerResponse `pulumi:"transformerParams"`
}

// Defaults sets the appropriate defaults for TableVerticalFeaturizationSettingsResponse
func (val *TableVerticalFeaturizationSettingsResponse) Defaults() *TableVerticalFeaturizationSettingsResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.EnableDnnFeaturization == nil {
		enableDnnFeaturization_ := false
		tmp.EnableDnnFeaturization = &enableDnnFeaturization_
	}
	if tmp.Mode == nil {
		mode_ := "Auto"
		tmp.Mode = &mode_
	}
	return &tmp
}

// Job execution constraints.
type TableVerticalLimitSettings struct {
	// Enable early termination, determines whether or not if AutoMLJob will terminate early if there is no score improvement in last 20 iterations.
	EnableEarlyTermination *bool `pulumi:"enableEarlyTermination"`
	// Exit score for the AutoML job.
	ExitScore *float64 `pulumi:"exitScore"`
	// Maximum Concurrent iterations.
	MaxConcurrentTrials *int `pulumi:"maxConcurrentTrials"`
	// Max cores per iteration.
	MaxCoresPerTrial *int `pulumi:"maxCoresPerTrial"`
	// Maximum nodes to use for the experiment.
	MaxNodes *int `pulumi:"maxNodes"`
	// Number of iterations.
	MaxTrials *int `pulumi:"maxTrials"`
	// Number of concurrent sweeping runs that user wants to trigger.
	SweepConcurrentTrials *int `pulumi:"sweepConcurrentTrials"`
	// Number of sweeping runs that user wants to trigger.
	SweepTrials *int `pulumi:"sweepTrials"`
	// AutoML job timeout.
	Timeout *string `pulumi:"timeout"`
	// Iteration timeout.
	TrialTimeout *string `pulumi:"trialTimeout"`
}

// Defaults sets the appropriate defaults for TableVerticalLimitSettings
func (val *TableVerticalLimitSettings) Defaults() *TableVerticalLimitSettings {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.EnableEarlyTermination == nil {
		enableEarlyTermination_ := true
		tmp.EnableEarlyTermination = &enableEarlyTermination_
	}
	if tmp.MaxConcurrentTrials == nil {
		maxConcurrentTrials_ := 1
		tmp.MaxConcurrentTrials = &maxConcurrentTrials_
	}
	if tmp.MaxCoresPerTrial == nil {
		maxCoresPerTrial_ := -1
		tmp.MaxCoresPerTrial = &maxCoresPerTrial_
	}
	if tmp.MaxNodes == nil {
		maxNodes_ := 1
		tmp.MaxNodes = &maxNodes_
	}
	if tmp.MaxTrials == nil {
		maxTrials_ := 1000
		tmp.MaxTrials = &maxTrials_
	}
	if tmp.SweepConcurrentTrials == nil {
		sweepConcurrentTrials_ := 0
		tmp.SweepConcurrentTrials = &sweepConcurrentTrials_
	}
	if tmp.SweepTrials == nil {
		sweepTrials_ := 0
		tmp.SweepTrials = &sweepTrials_
	}
	if tmp.Timeout == nil {
		timeout_ := "PT6H"
		tmp.Timeout = &timeout_
	}
	if tmp.TrialTimeout == nil {
		trialTimeout_ := "PT30M"
		tmp.TrialTimeout = &trialTimeout_
	}
	return &tmp
}

// Job execution constraints.
type TableVerticalLimitSettingsResponse struct {
	// Enable early termination, determines whether or not if AutoMLJob will terminate early if there is no score improvement in last 20 iterations.
	EnableEarlyTermination *bool `pulumi:"enableEarlyTermination"`
	// Exit score for the AutoML job.
	ExitScore *float64 `pulumi:"exitScore"`
	// Maximum Concurrent iterations.
	MaxConcurrentTrials *int `pulumi:"maxConcurrentTrials"`
	// Max cores per iteration.
	MaxCoresPerTrial *int `pulumi:"maxCoresPerTrial"`
	// Maximum nodes to use for the experiment.
	MaxNodes *int `pulumi:"maxNodes"`
	// Number of iterations.
	MaxTrials *int `pulumi:"maxTrials"`
	// Number of concurrent sweeping runs that user wants to trigger.
	SweepConcurrentTrials *int `pulumi:"sweepConcurrentTrials"`
	// Number of sweeping runs that user wants to trigger.
	SweepTrials *int `pulumi:"sweepTrials"`
	// AutoML job timeout.
	Timeout *string `pulumi:"timeout"`
	// Iteration timeout.
	TrialTimeout *string `pulumi:"trialTimeout"`
}

// Defaults sets the appropriate defaults for TableVerticalLimitSettingsResponse
func (val *TableVerticalLimitSettingsResponse) Defaults() *TableVerticalLimitSettingsResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.EnableEarlyTermination == nil {
		enableEarlyTermination_ := true
		tmp.EnableEarlyTermination = &enableEarlyTermination_
	}
	if tmp.MaxConcurrentTrials == nil {
		maxConcurrentTrials_ := 1
		tmp.MaxConcurrentTrials = &maxConcurrentTrials_
	}
	if tmp.MaxCoresPerTrial == nil {
		maxCoresPerTrial_ := -1
		tmp.MaxCoresPerTrial = &maxCoresPerTrial_
	}
	if tmp.MaxNodes == nil {
		maxNodes_ := 1
		tmp.MaxNodes = &maxNodes_
	}
	if tmp.MaxTrials == nil {
		maxTrials_ := 1000
		tmp.MaxTrials = &maxTrials_
	}
	if tmp.SweepConcurrentTrials == nil {
		sweepConcurrentTrials_ := 0
		tmp.SweepConcurrentTrials = &sweepConcurrentTrials_
	}
	if tmp.SweepTrials == nil {
		sweepTrials_ := 0
		tmp.SweepTrials = &sweepTrials_
	}
	if tmp.Timeout == nil {
		timeout_ := "PT6H"
		tmp.Timeout = &timeout_
	}
	if tmp.TrialTimeout == nil {
		trialTimeout_ := "PT30M"
		tmp.TrialTimeout = &trialTimeout_
	}
	return &tmp
}

type TargetUtilizationScaleSettings struct {
	// The maximum number of instances that the deployment can scale to. The quota will be reserved for max_instances.
	MaxInstances *int `pulumi:"maxInstances"`
	// The minimum number of instances to always be present.
	MinInstances *int `pulumi:"minInstances"`
	// The polling interval in ISO 8691 format. Only supports duration with precision as low as Seconds.
	PollingInterval *string `pulumi:"pollingInterval"`
	// Expected value is 'TargetUtilization'.
	ScaleType string `pulumi:"scaleType"`
	// Target CPU usage for the autoscaler.
	TargetUtilizationPercentage *int `pulumi:"targetUtilizationPercentage"`
}

// Defaults sets the appropriate defaults for TargetUtilizationScaleSettings
func (val *TargetUtilizationScaleSettings) Defaults() *TargetUtilizationScaleSettings {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.MaxInstances == nil {
		maxInstances_ := 1
		tmp.MaxInstances = &maxInstances_
	}
	if tmp.MinInstances == nil {
		minInstances_ := 1
		tmp.MinInstances = &minInstances_
	}
	if tmp.PollingInterval == nil {
		pollingInterval_ := "PT1S"
		tmp.PollingInterval = &pollingInterval_
	}
	if tmp.TargetUtilizationPercentage == nil {
		targetUtilizationPercentage_ := 70
		tmp.TargetUtilizationPercentage = &targetUtilizationPercentage_
	}
	return &tmp
}

type TargetUtilizationScaleSettingsResponse struct {
	// The maximum number of instances that the deployment can scale to. The quota will be reserved for max_instances.
	MaxInstances *int `pulumi:"maxInstances"`
	// The minimum number of instances to always be present.
	MinInstances *int `pulumi:"minInstances"`
	// The polling interval in ISO 8691 format. Only supports duration with precision as low as Seconds.
	PollingInterval *string `pulumi:"pollingInterval"`
	// Expected value is 'TargetUtilization'.
	ScaleType string `pulumi:"scaleType"`
	// Target CPU usage for the autoscaler.
	TargetUtilizationPercentage *int `pulumi:"targetUtilizationPercentage"`
}

// Defaults sets the appropriate defaults for TargetUtilizationScaleSettingsResponse
func (val *TargetUtilizationScaleSettingsResponse) Defaults() *TargetUtilizationScaleSettingsResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.MaxInstances == nil {
		maxInstances_ := 1
		tmp.MaxInstances = &maxInstances_
	}
	if tmp.MinInstances == nil {
		minInstances_ := 1
		tmp.MinInstances = &minInstances_
	}
	if tmp.PollingInterval == nil {
		pollingInterval_ := "PT1S"
		tmp.PollingInterval = &pollingInterval_
	}
	if tmp.TargetUtilizationPercentage == nil {
		targetUtilizationPercentage_ := 70
		tmp.TargetUtilizationPercentage = &targetUtilizationPercentage_
	}
	return &tmp
}

// TensorFlow distribution configuration.
type TensorFlow struct {
	// Enum to determine the job distribution type.
	// Expected value is 'TensorFlow'.
	DistributionType string `pulumi:"distributionType"`
	// Number of parameter server tasks.
	ParameterServerCount *int `pulumi:"parameterServerCount"`
	// Number of workers. If not specified, will default to the instance count.
	WorkerCount *int `pulumi:"workerCount"`
}

// Defaults sets the appropriate defaults for TensorFlow
func (val *TensorFlow) Defaults() *TensorFlow {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.ParameterServerCount == nil {
		parameterServerCount_ := 0
		tmp.ParameterServerCount = &parameterServerCount_
	}
	return &tmp
}

// TensorFlow distribution configuration.
type TensorFlowResponse struct {
	// Enum to determine the job distribution type.
	// Expected value is 'TensorFlow'.
	DistributionType string `pulumi:"distributionType"`
	// Number of parameter server tasks.
	ParameterServerCount *int `pulumi:"parameterServerCount"`
	// Number of workers. If not specified, will default to the instance count.
	WorkerCount *int `pulumi:"workerCount"`
}

// Defaults sets the appropriate defaults for TensorFlowResponse
func (val *TensorFlowResponse) Defaults() *TensorFlowResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.ParameterServerCount == nil {
		parameterServerCount_ := 0
		tmp.ParameterServerCount = &parameterServerCount_
	}
	return &tmp
}

// Text Classification task in AutoML NLP vertical.
// NLP - Natural Language Processing.
type TextClassification struct {
	// Featurization inputs needed for AutoML job.
	FeaturizationSettings *NlpVerticalFeaturizationSettings `pulumi:"featurizationSettings"`
	// Model/training parameters that will remain constant throughout training.
	FixedParameters *NlpFixedParameters `pulumi:"fixedParameters"`
	// Execution constraints for AutoMLJob.
	LimitSettings *NlpVerticalLimitSettings `pulumi:"limitSettings"`
	// Log verbosity for the job.
	LogVerbosity *string `pulumi:"logVerbosity"`
	// Primary metric for Text-Classification task.
	PrimaryMetric *string `pulumi:"primaryMetric"`
	// Search space for sampling different combinations of models and their hyperparameters.
	SearchSpace []NlpParameterSubspace `pulumi:"searchSpace"`
	// Settings for model sweeping and hyperparameter tuning.
	SweepSettings *NlpSweepSettings `pulumi:"sweepSettings"`
	// Target column name: This is prediction values column.
	// Also known as label column name in context of classification tasks.
	TargetColumnName *string `pulumi:"targetColumnName"`
	// AutoMLJob Task type.
	// Expected value is 'TextClassification'.
	TaskType string `pulumi:"taskType"`
	// [Required] Training data input.
	TrainingData MLTableJobInput `pulumi:"trainingData"`
	// Validation data inputs.
	ValidationData *MLTableJobInput `pulumi:"validationData"`
}

// Defaults sets the appropriate defaults for TextClassification
func (val *TextClassification) Defaults() *TextClassification {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.FixedParameters = tmp.FixedParameters.Defaults()

	tmp.LimitSettings = tmp.LimitSettings.Defaults()

	if tmp.LogVerbosity == nil {
		logVerbosity_ := "Info"
		tmp.LogVerbosity = &logVerbosity_
	}
	if tmp.PrimaryMetric == nil {
		primaryMetric_ := "Accuracy"
		tmp.PrimaryMetric = &primaryMetric_
	}
	tmp.TrainingData = *tmp.TrainingData.Defaults()

	tmp.ValidationData = tmp.ValidationData.Defaults()

	return &tmp
}

// Text Classification Multilabel task in AutoML NLP vertical.
// NLP - Natural Language Processing.
type TextClassificationMultilabel struct {
	// Featurization inputs needed for AutoML job.
	FeaturizationSettings *NlpVerticalFeaturizationSettings `pulumi:"featurizationSettings"`
	// Model/training parameters that will remain constant throughout training.
	FixedParameters *NlpFixedParameters `pulumi:"fixedParameters"`
	// Execution constraints for AutoMLJob.
	LimitSettings *NlpVerticalLimitSettings `pulumi:"limitSettings"`
	// Log verbosity for the job.
	LogVerbosity *string `pulumi:"logVerbosity"`
	// Search space for sampling different combinations of models and their hyperparameters.
	SearchSpace []NlpParameterSubspace `pulumi:"searchSpace"`
	// Settings for model sweeping and hyperparameter tuning.
	SweepSettings *NlpSweepSettings `pulumi:"sweepSettings"`
	// Target column name: This is prediction values column.
	// Also known as label column name in context of classification tasks.
	TargetColumnName *string `pulumi:"targetColumnName"`
	// AutoMLJob Task type.
	// Expected value is 'TextClassificationMultilabel'.
	TaskType string `pulumi:"taskType"`
	// [Required] Training data input.
	TrainingData MLTableJobInput `pulumi:"trainingData"`
	// Validation data inputs.
	ValidationData *MLTableJobInput `pulumi:"validationData"`
}

// Defaults sets the appropriate defaults for TextClassificationMultilabel
func (val *TextClassificationMultilabel) Defaults() *TextClassificationMultilabel {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.FixedParameters = tmp.FixedParameters.Defaults()

	tmp.LimitSettings = tmp.LimitSettings.Defaults()

	if tmp.LogVerbosity == nil {
		logVerbosity_ := "Info"
		tmp.LogVerbosity = &logVerbosity_
	}
	tmp.TrainingData = *tmp.TrainingData.Defaults()

	tmp.ValidationData = tmp.ValidationData.Defaults()

	return &tmp
}

// Text Classification Multilabel task in AutoML NLP vertical.
// NLP - Natural Language Processing.
type TextClassificationMultilabelResponse struct {
	// Featurization inputs needed for AutoML job.
	FeaturizationSettings *NlpVerticalFeaturizationSettingsResponse `pulumi:"featurizationSettings"`
	// Model/training parameters that will remain constant throughout training.
	FixedParameters *NlpFixedParametersResponse `pulumi:"fixedParameters"`
	// Execution constraints for AutoMLJob.
	LimitSettings *NlpVerticalLimitSettingsResponse `pulumi:"limitSettings"`
	// Log verbosity for the job.
	LogVerbosity *string `pulumi:"logVerbosity"`
	// Primary metric for Text-Classification-Multilabel task.
	// Currently only Accuracy is supported as primary metric, hence user need not set it explicitly.
	PrimaryMetric string `pulumi:"primaryMetric"`
	// Search space for sampling different combinations of models and their hyperparameters.
	SearchSpace []NlpParameterSubspaceResponse `pulumi:"searchSpace"`
	// Settings for model sweeping and hyperparameter tuning.
	SweepSettings *NlpSweepSettingsResponse `pulumi:"sweepSettings"`
	// Target column name: This is prediction values column.
	// Also known as label column name in context of classification tasks.
	TargetColumnName *string `pulumi:"targetColumnName"`
	// AutoMLJob Task type.
	// Expected value is 'TextClassificationMultilabel'.
	TaskType string `pulumi:"taskType"`
	// [Required] Training data input.
	TrainingData MLTableJobInputResponse `pulumi:"trainingData"`
	// Validation data inputs.
	ValidationData *MLTableJobInputResponse `pulumi:"validationData"`
}

// Defaults sets the appropriate defaults for TextClassificationMultilabelResponse
func (val *TextClassificationMultilabelResponse) Defaults() *TextClassificationMultilabelResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.FixedParameters = tmp.FixedParameters.Defaults()

	tmp.LimitSettings = tmp.LimitSettings.Defaults()

	if tmp.LogVerbosity == nil {
		logVerbosity_ := "Info"
		tmp.LogVerbosity = &logVerbosity_
	}
	tmp.TrainingData = *tmp.TrainingData.Defaults()

	tmp.ValidationData = tmp.ValidationData.Defaults()

	return &tmp
}

// Text Classification task in AutoML NLP vertical.
// NLP - Natural Language Processing.
type TextClassificationResponse struct {
	// Featurization inputs needed for AutoML job.
	FeaturizationSettings *NlpVerticalFeaturizationSettingsResponse `pulumi:"featurizationSettings"`
	// Model/training parameters that will remain constant throughout training.
	FixedParameters *NlpFixedParametersResponse `pulumi:"fixedParameters"`
	// Execution constraints for AutoMLJob.
	LimitSettings *NlpVerticalLimitSettingsResponse `pulumi:"limitSettings"`
	// Log verbosity for the job.
	LogVerbosity *string `pulumi:"logVerbosity"`
	// Primary metric for Text-Classification task.
	PrimaryMetric *string `pulumi:"primaryMetric"`
	// Search space for sampling different combinations of models and their hyperparameters.
	SearchSpace []NlpParameterSubspaceResponse `pulumi:"searchSpace"`
	// Settings for model sweeping and hyperparameter tuning.
	SweepSettings *NlpSweepSettingsResponse `pulumi:"sweepSettings"`
	// Target column name: This is prediction values column.
	// Also known as label column name in context of classification tasks.
	TargetColumnName *string `pulumi:"targetColumnName"`
	// AutoMLJob Task type.
	// Expected value is 'TextClassification'.
	TaskType string `pulumi:"taskType"`
	// [Required] Training data input.
	TrainingData MLTableJobInputResponse `pulumi:"trainingData"`
	// Validation data inputs.
	ValidationData *MLTableJobInputResponse `pulumi:"validationData"`
}

// Defaults sets the appropriate defaults for TextClassificationResponse
func (val *TextClassificationResponse) Defaults() *TextClassificationResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.FixedParameters = tmp.FixedParameters.Defaults()

	tmp.LimitSettings = tmp.LimitSettings.Defaults()

	if tmp.LogVerbosity == nil {
		logVerbosity_ := "Info"
		tmp.LogVerbosity = &logVerbosity_
	}
	if tmp.PrimaryMetric == nil {
		primaryMetric_ := "Accuracy"
		tmp.PrimaryMetric = &primaryMetric_
	}
	tmp.TrainingData = *tmp.TrainingData.Defaults()

	tmp.ValidationData = tmp.ValidationData.Defaults()

	return &tmp
}

// Text-NER task in AutoML NLP vertical.
// NER - Named Entity Recognition.
// NLP - Natural Language Processing.
type TextNer struct {
	// Featurization inputs needed for AutoML job.
	FeaturizationSettings *NlpVerticalFeaturizationSettings `pulumi:"featurizationSettings"`
	// Model/training parameters that will remain constant throughout training.
	FixedParameters *NlpFixedParameters `pulumi:"fixedParameters"`
	// Execution constraints for AutoMLJob.
	LimitSettings *NlpVerticalLimitSettings `pulumi:"limitSettings"`
	// Log verbosity for the job.
	LogVerbosity *string `pulumi:"logVerbosity"`
	// Search space for sampling different combinations of models and their hyperparameters.
	SearchSpace []NlpParameterSubspace `pulumi:"searchSpace"`
	// Settings for model sweeping and hyperparameter tuning.
	SweepSettings *NlpSweepSettings `pulumi:"sweepSettings"`
	// Target column name: This is prediction values column.
	// Also known as label column name in context of classification tasks.
	TargetColumnName *string `pulumi:"targetColumnName"`
	// AutoMLJob Task type.
	// Expected value is 'TextNER'.
	TaskType string `pulumi:"taskType"`
	// [Required] Training data input.
	TrainingData MLTableJobInput `pulumi:"trainingData"`
	// Validation data inputs.
	ValidationData *MLTableJobInput `pulumi:"validationData"`
}

// Defaults sets the appropriate defaults for TextNer
func (val *TextNer) Defaults() *TextNer {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.FixedParameters = tmp.FixedParameters.Defaults()

	tmp.LimitSettings = tmp.LimitSettings.Defaults()

	if tmp.LogVerbosity == nil {
		logVerbosity_ := "Info"
		tmp.LogVerbosity = &logVerbosity_
	}
	tmp.TrainingData = *tmp.TrainingData.Defaults()

	tmp.ValidationData = tmp.ValidationData.Defaults()

	return &tmp
}

// Text-NER task in AutoML NLP vertical.
// NER - Named Entity Recognition.
// NLP - Natural Language Processing.
type TextNerResponse struct {
	// Featurization inputs needed for AutoML job.
	FeaturizationSettings *NlpVerticalFeaturizationSettingsResponse `pulumi:"featurizationSettings"`
	// Model/training parameters that will remain constant throughout training.
	FixedParameters *NlpFixedParametersResponse `pulumi:"fixedParameters"`
	// Execution constraints for AutoMLJob.
	LimitSettings *NlpVerticalLimitSettingsResponse `pulumi:"limitSettings"`
	// Log verbosity for the job.
	LogVerbosity *string `pulumi:"logVerbosity"`
	// Primary metric for Text-NER task.
	// Only 'Accuracy' is supported for Text-NER, so user need not set this explicitly.
	PrimaryMetric string `pulumi:"primaryMetric"`
	// Search space for sampling different combinations of models and their hyperparameters.
	SearchSpace []NlpParameterSubspaceResponse `pulumi:"searchSpace"`
	// Settings for model sweeping and hyperparameter tuning.
	SweepSettings *NlpSweepSettingsResponse `pulumi:"sweepSettings"`
	// Target column name: This is prediction values column.
	// Also known as label column name in context of classification tasks.
	TargetColumnName *string `pulumi:"targetColumnName"`
	// AutoMLJob Task type.
	// Expected value is 'TextNER'.
	TaskType string `pulumi:"taskType"`
	// [Required] Training data input.
	TrainingData MLTableJobInputResponse `pulumi:"trainingData"`
	// Validation data inputs.
	ValidationData *MLTableJobInputResponse `pulumi:"validationData"`
}

// Defaults sets the appropriate defaults for TextNerResponse
func (val *TextNerResponse) Defaults() *TextNerResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.FixedParameters = tmp.FixedParameters.Defaults()

	tmp.LimitSettings = tmp.LimitSettings.Defaults()

	if tmp.LogVerbosity == nil {
		logVerbosity_ := "Info"
		tmp.LogVerbosity = &logVerbosity_
	}
	tmp.TrainingData = *tmp.TrainingData.Defaults()

	tmp.ValidationData = tmp.ValidationData.Defaults()

	return &tmp
}

type TmpfsOptions struct {
	// Mention the Tmpfs size
	Size *int `pulumi:"size"`
}

type TmpfsOptionsResponse struct {
	// Mention the Tmpfs size
	Size *int `pulumi:"size"`
}

type TopNFeaturesByAttribution struct {
	// Expected value is 'TopNByAttribution'.
	FilterType string `pulumi:"filterType"`
	// The number of top features to include.
	Top *int `pulumi:"top"`
}

// Defaults sets the appropriate defaults for TopNFeaturesByAttribution
func (val *TopNFeaturesByAttribution) Defaults() *TopNFeaturesByAttribution {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Top == nil {
		top_ := 10
		tmp.Top = &top_
	}
	return &tmp
}

type TopNFeaturesByAttributionResponse struct {
	// Expected value is 'TopNByAttribution'.
	FilterType string `pulumi:"filterType"`
	// The number of top features to include.
	Top *int `pulumi:"top"`
}

// Defaults sets the appropriate defaults for TopNFeaturesByAttributionResponse
func (val *TopNFeaturesByAttributionResponse) Defaults() *TopNFeaturesByAttributionResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Top == nil {
		top_ := 10
		tmp.Top = &top_
	}
	return &tmp
}

// Trial component definition.
type TrialComponent struct {
	// ARM resource ID of the code asset.
	CodeId *string `pulumi:"codeId"`
	// [Required] The command to execute on startup of the job. eg. "python train.py"
	Command string `pulumi:"command"`
	// Distribution configuration of the job. If set, this should be one of Mpi, Tensorflow, PyTorch, or null.
	Distribution interface{} `pulumi:"distribution"`
	// [Required] The ARM resource ID of the Environment specification for the job.
	EnvironmentId string `pulumi:"environmentId"`
	// Environment variables included in the job.
	EnvironmentVariables map[string]string `pulumi:"environmentVariables"`
	// Compute Resource configuration for the job.
	Resources *JobResourceConfiguration `pulumi:"resources"`
}

// Defaults sets the appropriate defaults for TrialComponent
func (val *TrialComponent) Defaults() *TrialComponent {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.Resources = tmp.Resources.Defaults()

	return &tmp
}

// Trial component definition.
type TrialComponentResponse struct {
	// ARM resource ID of the code asset.
	CodeId *string `pulumi:"codeId"`
	// [Required] The command to execute on startup of the job. eg. "python train.py"
	Command string `pulumi:"command"`
	// Distribution configuration of the job. If set, this should be one of Mpi, Tensorflow, PyTorch, or null.
	Distribution interface{} `pulumi:"distribution"`
	// [Required] The ARM resource ID of the Environment specification for the job.
	EnvironmentId string `pulumi:"environmentId"`
	// Environment variables included in the job.
	EnvironmentVariables map[string]string `pulumi:"environmentVariables"`
	// Compute Resource configuration for the job.
	Resources *JobResourceConfigurationResponse `pulumi:"resources"`
}

// Defaults sets the appropriate defaults for TrialComponentResponse
func (val *TrialComponentResponse) Defaults() *TrialComponentResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.Resources = tmp.Resources.Defaults()

	return &tmp
}

type TritonModelJobInput struct {
	// Description for the input.
	Description *string `pulumi:"description"`
	// Enum to determine the Job Input Type.
	// Expected value is 'triton_model'.
	JobInputType string `pulumi:"jobInputType"`
	// Input Asset Delivery Mode.
	Mode *string `pulumi:"mode"`
	// [Required] Input Asset URI.
	Uri string `pulumi:"uri"`
}

// Defaults sets the appropriate defaults for TritonModelJobInput
func (val *TritonModelJobInput) Defaults() *TritonModelJobInput {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Mode == nil {
		mode_ := "ReadOnlyMount"
		tmp.Mode = &mode_
	}
	return &tmp
}

type TritonModelJobInputResponse struct {
	// Description for the input.
	Description *string `pulumi:"description"`
	// Enum to determine the Job Input Type.
	// Expected value is 'triton_model'.
	JobInputType string `pulumi:"jobInputType"`
	// Input Asset Delivery Mode.
	Mode *string `pulumi:"mode"`
	// [Required] Input Asset URI.
	Uri string `pulumi:"uri"`
}

// Defaults sets the appropriate defaults for TritonModelJobInputResponse
func (val *TritonModelJobInputResponse) Defaults() *TritonModelJobInputResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Mode == nil {
		mode_ := "ReadOnlyMount"
		tmp.Mode = &mode_
	}
	return &tmp
}

type TritonModelJobOutput struct {
	// Output Asset Name.
	AssetName *string `pulumi:"assetName"`
	// Output Asset Version.
	AssetVersion *string `pulumi:"assetVersion"`
	// Auto delete setting of output data asset.
	AutoDeleteSetting *AutoDeleteSetting `pulumi:"autoDeleteSetting"`
	// Description for the output.
	Description *string `pulumi:"description"`
	// Enum to determine the Job Output Type.
	// Expected value is 'triton_model'.
	JobOutputType string `pulumi:"jobOutputType"`
	// Output Asset Delivery Mode.
	Mode *string `pulumi:"mode"`
	// Output Asset URI.
	Uri *string `pulumi:"uri"`
}

// Defaults sets the appropriate defaults for TritonModelJobOutput
func (val *TritonModelJobOutput) Defaults() *TritonModelJobOutput {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.AutoDeleteSetting = tmp.AutoDeleteSetting.Defaults()

	if tmp.Mode == nil {
		mode_ := "ReadWriteMount"
		tmp.Mode = &mode_
	}
	return &tmp
}

type TritonModelJobOutputResponse struct {
	// Output Asset Name.
	AssetName *string `pulumi:"assetName"`
	// Output Asset Version.
	AssetVersion *string `pulumi:"assetVersion"`
	// Auto delete setting of output data asset.
	AutoDeleteSetting *AutoDeleteSettingResponse `pulumi:"autoDeleteSetting"`
	// Description for the output.
	Description *string `pulumi:"description"`
	// Enum to determine the Job Output Type.
	// Expected value is 'triton_model'.
	JobOutputType string `pulumi:"jobOutputType"`
	// Output Asset Delivery Mode.
	Mode *string `pulumi:"mode"`
	// Output Asset URI.
	Uri *string `pulumi:"uri"`
}

// Defaults sets the appropriate defaults for TritonModelJobOutputResponse
func (val *TritonModelJobOutputResponse) Defaults() *TritonModelJobOutputResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.AutoDeleteSetting = tmp.AutoDeleteSetting.Defaults()

	if tmp.Mode == nil {
		mode_ := "ReadWriteMount"
		tmp.Mode = &mode_
	}
	return &tmp
}

// Defines an early termination policy that cancels a given percentage of runs at each evaluation interval.
type TruncationSelectionPolicy struct {
	// Number of intervals by which to delay the first evaluation.
	DelayEvaluation *int `pulumi:"delayEvaluation"`
	// Interval (number of runs) between policy evaluations.
	EvaluationInterval *int `pulumi:"evaluationInterval"`
	// Expected value is 'TruncationSelection'.
	PolicyType string `pulumi:"policyType"`
	// The percentage of runs to cancel at each evaluation interval.
	TruncationPercentage *int `pulumi:"truncationPercentage"`
}

// Defaults sets the appropriate defaults for TruncationSelectionPolicy
func (val *TruncationSelectionPolicy) Defaults() *TruncationSelectionPolicy {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.DelayEvaluation == nil {
		delayEvaluation_ := 0
		tmp.DelayEvaluation = &delayEvaluation_
	}
	if tmp.EvaluationInterval == nil {
		evaluationInterval_ := 0
		tmp.EvaluationInterval = &evaluationInterval_
	}
	if tmp.TruncationPercentage == nil {
		truncationPercentage_ := 0
		tmp.TruncationPercentage = &truncationPercentage_
	}
	return &tmp
}

// Defines an early termination policy that cancels a given percentage of runs at each evaluation interval.
type TruncationSelectionPolicyResponse struct {
	// Number of intervals by which to delay the first evaluation.
	DelayEvaluation *int `pulumi:"delayEvaluation"`
	// Interval (number of runs) between policy evaluations.
	EvaluationInterval *int `pulumi:"evaluationInterval"`
	// Expected value is 'TruncationSelection'.
	PolicyType string `pulumi:"policyType"`
	// The percentage of runs to cancel at each evaluation interval.
	TruncationPercentage *int `pulumi:"truncationPercentage"`
}

// Defaults sets the appropriate defaults for TruncationSelectionPolicyResponse
func (val *TruncationSelectionPolicyResponse) Defaults() *TruncationSelectionPolicyResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.DelayEvaluation == nil {
		delayEvaluation_ := 0
		tmp.DelayEvaluation = &delayEvaluation_
	}
	if tmp.EvaluationInterval == nil {
		evaluationInterval_ := 0
		tmp.EvaluationInterval = &evaluationInterval_
	}
	if tmp.TruncationPercentage == nil {
		truncationPercentage_ := 0
		tmp.TruncationPercentage = &truncationPercentage_
	}
	return &tmp
}

// uri-file data version entity
type UriFileDataVersion struct {
	// Specifies the lifecycle setting of managed data asset.
	AutoDeleteSetting *AutoDeleteSetting `pulumi:"autoDeleteSetting"`
	// Enum to determine the type of data.
	// Expected value is 'uri_file'.
	DataType string `pulumi:"dataType"`
	// [Required] Uri of the data. Example: https://go.microsoft.com/fwlink/?linkid=2202330
	DataUri string `pulumi:"dataUri"`
	// The asset description text.
	Description *string `pulumi:"description"`
	// Intellectual Property details. Used if data is an Intellectual Property.
	IntellectualProperty *IntellectualProperty `pulumi:"intellectualProperty"`
	// If the name version are system generated (anonymous registration). For types where Stage is defined, when Stage is provided it will be used to populate IsAnonymous
	IsAnonymous *bool `pulumi:"isAnonymous"`
	// Is the asset archived? For types where Stage is defined, when Stage is provided it will be used to populate IsArchived
	IsArchived *bool `pulumi:"isArchived"`
	// The asset property dictionary.
	Properties map[string]string `pulumi:"properties"`
	// Stage in the data lifecycle assigned to this data asset
	Stage *string `pulumi:"stage"`
	// Tag dictionary. Tags can be added, removed, and updated.
	Tags map[string]string `pulumi:"tags"`
}

// Defaults sets the appropriate defaults for UriFileDataVersion
func (val *UriFileDataVersion) Defaults() *UriFileDataVersion {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.AutoDeleteSetting = tmp.AutoDeleteSetting.Defaults()

	tmp.IntellectualProperty = tmp.IntellectualProperty.Defaults()

	if tmp.IsAnonymous == nil {
		isAnonymous_ := false
		tmp.IsAnonymous = &isAnonymous_
	}
	if tmp.IsArchived == nil {
		isArchived_ := false
		tmp.IsArchived = &isArchived_
	}
	return &tmp
}

// uri-file data version entity
type UriFileDataVersionResponse struct {
	// Specifies the lifecycle setting of managed data asset.
	AutoDeleteSetting *AutoDeleteSettingResponse `pulumi:"autoDeleteSetting"`
	// Enum to determine the type of data.
	// Expected value is 'uri_file'.
	DataType string `pulumi:"dataType"`
	// [Required] Uri of the data. Example: https://go.microsoft.com/fwlink/?linkid=2202330
	DataUri string `pulumi:"dataUri"`
	// The asset description text.
	Description *string `pulumi:"description"`
	// Intellectual Property details. Used if data is an Intellectual Property.
	IntellectualProperty *IntellectualPropertyResponse `pulumi:"intellectualProperty"`
	// If the name version are system generated (anonymous registration). For types where Stage is defined, when Stage is provided it will be used to populate IsAnonymous
	IsAnonymous *bool `pulumi:"isAnonymous"`
	// Is the asset archived? For types where Stage is defined, when Stage is provided it will be used to populate IsArchived
	IsArchived *bool `pulumi:"isArchived"`
	// The asset property dictionary.
	Properties map[string]string `pulumi:"properties"`
	// Stage in the data lifecycle assigned to this data asset
	Stage *string `pulumi:"stage"`
	// Tag dictionary. Tags can be added, removed, and updated.
	Tags map[string]string `pulumi:"tags"`
}

// Defaults sets the appropriate defaults for UriFileDataVersionResponse
func (val *UriFileDataVersionResponse) Defaults() *UriFileDataVersionResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.AutoDeleteSetting = tmp.AutoDeleteSetting.Defaults()

	tmp.IntellectualProperty = tmp.IntellectualProperty.Defaults()

	if tmp.IsAnonymous == nil {
		isAnonymous_ := false
		tmp.IsAnonymous = &isAnonymous_
	}
	if tmp.IsArchived == nil {
		isArchived_ := false
		tmp.IsArchived = &isArchived_
	}
	return &tmp
}

type UriFileJobInput struct {
	// Description for the input.
	Description *string `pulumi:"description"`
	// Enum to determine the Job Input Type.
	// Expected value is 'uri_file'.
	JobInputType string `pulumi:"jobInputType"`
	// Input Asset Delivery Mode.
	Mode *string `pulumi:"mode"`
	// [Required] Input Asset URI.
	Uri string `pulumi:"uri"`
}

// Defaults sets the appropriate defaults for UriFileJobInput
func (val *UriFileJobInput) Defaults() *UriFileJobInput {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Mode == nil {
		mode_ := "ReadOnlyMount"
		tmp.Mode = &mode_
	}
	return &tmp
}

type UriFileJobInputResponse struct {
	// Description for the input.
	Description *string `pulumi:"description"`
	// Enum to determine the Job Input Type.
	// Expected value is 'uri_file'.
	JobInputType string `pulumi:"jobInputType"`
	// Input Asset Delivery Mode.
	Mode *string `pulumi:"mode"`
	// [Required] Input Asset URI.
	Uri string `pulumi:"uri"`
}

// Defaults sets the appropriate defaults for UriFileJobInputResponse
func (val *UriFileJobInputResponse) Defaults() *UriFileJobInputResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Mode == nil {
		mode_ := "ReadOnlyMount"
		tmp.Mode = &mode_
	}
	return &tmp
}

type UriFileJobOutput struct {
	// Output Asset Name.
	AssetName *string `pulumi:"assetName"`
	// Output Asset Version.
	AssetVersion *string `pulumi:"assetVersion"`
	// Auto delete setting of output data asset.
	AutoDeleteSetting *AutoDeleteSetting `pulumi:"autoDeleteSetting"`
	// Description for the output.
	Description *string `pulumi:"description"`
	// Enum to determine the Job Output Type.
	// Expected value is 'uri_file'.
	JobOutputType string `pulumi:"jobOutputType"`
	// Output Asset Delivery Mode.
	Mode *string `pulumi:"mode"`
	// Output Asset URI.
	Uri *string `pulumi:"uri"`
}

// Defaults sets the appropriate defaults for UriFileJobOutput
func (val *UriFileJobOutput) Defaults() *UriFileJobOutput {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.AutoDeleteSetting = tmp.AutoDeleteSetting.Defaults()

	if tmp.Mode == nil {
		mode_ := "ReadWriteMount"
		tmp.Mode = &mode_
	}
	return &tmp
}

type UriFileJobOutputResponse struct {
	// Output Asset Name.
	AssetName *string `pulumi:"assetName"`
	// Output Asset Version.
	AssetVersion *string `pulumi:"assetVersion"`
	// Auto delete setting of output data asset.
	AutoDeleteSetting *AutoDeleteSettingResponse `pulumi:"autoDeleteSetting"`
	// Description for the output.
	Description *string `pulumi:"description"`
	// Enum to determine the Job Output Type.
	// Expected value is 'uri_file'.
	JobOutputType string `pulumi:"jobOutputType"`
	// Output Asset Delivery Mode.
	Mode *string `pulumi:"mode"`
	// Output Asset URI.
	Uri *string `pulumi:"uri"`
}

// Defaults sets the appropriate defaults for UriFileJobOutputResponse
func (val *UriFileJobOutputResponse) Defaults() *UriFileJobOutputResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.AutoDeleteSetting = tmp.AutoDeleteSetting.Defaults()

	if tmp.Mode == nil {
		mode_ := "ReadWriteMount"
		tmp.Mode = &mode_
	}
	return &tmp
}

// uri-folder data version entity
type UriFolderDataVersion struct {
	// Specifies the lifecycle setting of managed data asset.
	AutoDeleteSetting *AutoDeleteSetting `pulumi:"autoDeleteSetting"`
	// Enum to determine the type of data.
	// Expected value is 'uri_folder'.
	DataType string `pulumi:"dataType"`
	// [Required] Uri of the data. Example: https://go.microsoft.com/fwlink/?linkid=2202330
	DataUri string `pulumi:"dataUri"`
	// The asset description text.
	Description *string `pulumi:"description"`
	// Intellectual Property details. Used if data is an Intellectual Property.
	IntellectualProperty *IntellectualProperty `pulumi:"intellectualProperty"`
	// If the name version are system generated (anonymous registration). For types where Stage is defined, when Stage is provided it will be used to populate IsAnonymous
	IsAnonymous *bool `pulumi:"isAnonymous"`
	// Is the asset archived? For types where Stage is defined, when Stage is provided it will be used to populate IsArchived
	IsArchived *bool `pulumi:"isArchived"`
	// The asset property dictionary.
	Properties map[string]string `pulumi:"properties"`
	// Stage in the data lifecycle assigned to this data asset
	Stage *string `pulumi:"stage"`
	// Tag dictionary. Tags can be added, removed, and updated.
	Tags map[string]string `pulumi:"tags"`
}

// Defaults sets the appropriate defaults for UriFolderDataVersion
func (val *UriFolderDataVersion) Defaults() *UriFolderDataVersion {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.AutoDeleteSetting = tmp.AutoDeleteSetting.Defaults()

	tmp.IntellectualProperty = tmp.IntellectualProperty.Defaults()

	if tmp.IsAnonymous == nil {
		isAnonymous_ := false
		tmp.IsAnonymous = &isAnonymous_
	}
	if tmp.IsArchived == nil {
		isArchived_ := false
		tmp.IsArchived = &isArchived_
	}
	return &tmp
}

// uri-folder data version entity
type UriFolderDataVersionResponse struct {
	// Specifies the lifecycle setting of managed data asset.
	AutoDeleteSetting *AutoDeleteSettingResponse `pulumi:"autoDeleteSetting"`
	// Enum to determine the type of data.
	// Expected value is 'uri_folder'.
	DataType string `pulumi:"dataType"`
	// [Required] Uri of the data. Example: https://go.microsoft.com/fwlink/?linkid=2202330
	DataUri string `pulumi:"dataUri"`
	// The asset description text.
	Description *string `pulumi:"description"`
	// Intellectual Property details. Used if data is an Intellectual Property.
	IntellectualProperty *IntellectualPropertyResponse `pulumi:"intellectualProperty"`
	// If the name version are system generated (anonymous registration). For types where Stage is defined, when Stage is provided it will be used to populate IsAnonymous
	IsAnonymous *bool `pulumi:"isAnonymous"`
	// Is the asset archived? For types where Stage is defined, when Stage is provided it will be used to populate IsArchived
	IsArchived *bool `pulumi:"isArchived"`
	// The asset property dictionary.
	Properties map[string]string `pulumi:"properties"`
	// Stage in the data lifecycle assigned to this data asset
	Stage *string `pulumi:"stage"`
	// Tag dictionary. Tags can be added, removed, and updated.
	Tags map[string]string `pulumi:"tags"`
}

// Defaults sets the appropriate defaults for UriFolderDataVersionResponse
func (val *UriFolderDataVersionResponse) Defaults() *UriFolderDataVersionResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.AutoDeleteSetting = tmp.AutoDeleteSetting.Defaults()

	tmp.IntellectualProperty = tmp.IntellectualProperty.Defaults()

	if tmp.IsAnonymous == nil {
		isAnonymous_ := false
		tmp.IsAnonymous = &isAnonymous_
	}
	if tmp.IsArchived == nil {
		isArchived_ := false
		tmp.IsArchived = &isArchived_
	}
	return &tmp
}

type UriFolderJobInput struct {
	// Description for the input.
	Description *string `pulumi:"description"`
	// Enum to determine the Job Input Type.
	// Expected value is 'uri_folder'.
	JobInputType string `pulumi:"jobInputType"`
	// Input Asset Delivery Mode.
	Mode *string `pulumi:"mode"`
	// [Required] Input Asset URI.
	Uri string `pulumi:"uri"`
}

// Defaults sets the appropriate defaults for UriFolderJobInput
func (val *UriFolderJobInput) Defaults() *UriFolderJobInput {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Mode == nil {
		mode_ := "ReadOnlyMount"
		tmp.Mode = &mode_
	}
	return &tmp
}

type UriFolderJobInputResponse struct {
	// Description for the input.
	Description *string `pulumi:"description"`
	// Enum to determine the Job Input Type.
	// Expected value is 'uri_folder'.
	JobInputType string `pulumi:"jobInputType"`
	// Input Asset Delivery Mode.
	Mode *string `pulumi:"mode"`
	// [Required] Input Asset URI.
	Uri string `pulumi:"uri"`
}

// Defaults sets the appropriate defaults for UriFolderJobInputResponse
func (val *UriFolderJobInputResponse) Defaults() *UriFolderJobInputResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Mode == nil {
		mode_ := "ReadOnlyMount"
		tmp.Mode = &mode_
	}
	return &tmp
}

type UriFolderJobOutput struct {
	// Output Asset Name.
	AssetName *string `pulumi:"assetName"`
	// Output Asset Version.
	AssetVersion *string `pulumi:"assetVersion"`
	// Auto delete setting of output data asset.
	AutoDeleteSetting *AutoDeleteSetting `pulumi:"autoDeleteSetting"`
	// Description for the output.
	Description *string `pulumi:"description"`
	// Enum to determine the Job Output Type.
	// Expected value is 'uri_folder'.
	JobOutputType string `pulumi:"jobOutputType"`
	// Output Asset Delivery Mode.
	Mode *string `pulumi:"mode"`
	// Output Asset URI.
	Uri *string `pulumi:"uri"`
}

// Defaults sets the appropriate defaults for UriFolderJobOutput
func (val *UriFolderJobOutput) Defaults() *UriFolderJobOutput {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.AutoDeleteSetting = tmp.AutoDeleteSetting.Defaults()

	if tmp.Mode == nil {
		mode_ := "ReadWriteMount"
		tmp.Mode = &mode_
	}
	return &tmp
}

type UriFolderJobOutputResponse struct {
	// Output Asset Name.
	AssetName *string `pulumi:"assetName"`
	// Output Asset Version.
	AssetVersion *string `pulumi:"assetVersion"`
	// Auto delete setting of output data asset.
	AutoDeleteSetting *AutoDeleteSettingResponse `pulumi:"autoDeleteSetting"`
	// Description for the output.
	Description *string `pulumi:"description"`
	// Enum to determine the Job Output Type.
	// Expected value is 'uri_folder'.
	JobOutputType string `pulumi:"jobOutputType"`
	// Output Asset Delivery Mode.
	Mode *string `pulumi:"mode"`
	// Output Asset URI.
	Uri *string `pulumi:"uri"`
}

// Defaults sets the appropriate defaults for UriFolderJobOutputResponse
func (val *UriFolderJobOutputResponse) Defaults() *UriFolderJobOutputResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.AutoDeleteSetting = tmp.AutoDeleteSetting.Defaults()

	if tmp.Mode == nil {
		mode_ := "ReadWriteMount"
		tmp.Mode = &mode_
	}
	return &tmp
}

// Settings for user account that gets created on each on the nodes of a compute.
type UserAccountCredentials struct {
	// Name of the administrator user account which can be used to SSH to nodes.
	AdminUserName string `pulumi:"adminUserName"`
	// Password of the administrator user account.
	AdminUserPassword *string `pulumi:"adminUserPassword"`
	// SSH public key of the administrator user account.
	AdminUserSshPublicKey *string `pulumi:"adminUserSshPublicKey"`
}

// Settings for user account that gets created on each on the nodes of a compute.
type UserAccountCredentialsResponse struct {
	// Name of the administrator user account which can be used to SSH to nodes.
	AdminUserName string `pulumi:"adminUserName"`
	// Password of the administrator user account.
	AdminUserPassword *string `pulumi:"adminUserPassword"`
	// SSH public key of the administrator user account.
	AdminUserSshPublicKey *string `pulumi:"adminUserSshPublicKey"`
}

// User assigned identity properties
type UserAssignedIdentityResponse struct {
	// The client ID of the assigned identity.
	ClientId string `pulumi:"clientId"`
	// The principal ID of the assigned identity.
	PrincipalId string `pulumi:"principalId"`
}

// User assigned identity properties
type UserAssignedIdentityResponseOutput struct{ *pulumi.OutputState }

func (UserAssignedIdentityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserAssignedIdentityResponse)(nil)).Elem()
}

func (o UserAssignedIdentityResponseOutput) ToUserAssignedIdentityResponseOutput() UserAssignedIdentityResponseOutput {
	return o
}

func (o UserAssignedIdentityResponseOutput) ToUserAssignedIdentityResponseOutputWithContext(ctx context.Context) UserAssignedIdentityResponseOutput {
	return o
}

// The client ID of the assigned identity.
func (o UserAssignedIdentityResponseOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v UserAssignedIdentityResponse) string { return v.ClientId }).(pulumi.StringOutput)
}

// The principal ID of the assigned identity.
func (o UserAssignedIdentityResponseOutput) PrincipalId() pulumi.StringOutput {
	return o.ApplyT(func(v UserAssignedIdentityResponse) string { return v.PrincipalId }).(pulumi.StringOutput)
}

type UserAssignedIdentityResponseMapOutput struct{ *pulumi.OutputState }

func (UserAssignedIdentityResponseMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]UserAssignedIdentityResponse)(nil)).Elem()
}

func (o UserAssignedIdentityResponseMapOutput) ToUserAssignedIdentityResponseMapOutput() UserAssignedIdentityResponseMapOutput {
	return o
}

func (o UserAssignedIdentityResponseMapOutput) ToUserAssignedIdentityResponseMapOutputWithContext(ctx context.Context) UserAssignedIdentityResponseMapOutput {
	return o
}

func (o UserAssignedIdentityResponseMapOutput) MapIndex(k pulumi.StringInput) UserAssignedIdentityResponseOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) UserAssignedIdentityResponse {
		return vs[0].(map[string]UserAssignedIdentityResponse)[vs[1].(string)]
	}).(UserAssignedIdentityResponseOutput)
}

type UserCreatedAcrAccount struct {
	// ARM ResourceId of a resource
	ArmResourceId *ArmResourceId `pulumi:"armResourceId"`
}

// UserCreatedAcrAccountInput is an input type that accepts UserCreatedAcrAccountArgs and UserCreatedAcrAccountOutput values.
// You can construct a concrete instance of `UserCreatedAcrAccountInput` via:
//
//	UserCreatedAcrAccountArgs{...}
type UserCreatedAcrAccountInput interface {
	pulumi.Input

	ToUserCreatedAcrAccountOutput() UserCreatedAcrAccountOutput
	ToUserCreatedAcrAccountOutputWithContext(context.Context) UserCreatedAcrAccountOutput
}

type UserCreatedAcrAccountArgs struct {
	// ARM ResourceId of a resource
	ArmResourceId ArmResourceIdPtrInput `pulumi:"armResourceId"`
}

func (UserCreatedAcrAccountArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserCreatedAcrAccount)(nil)).Elem()
}

func (i UserCreatedAcrAccountArgs) ToUserCreatedAcrAccountOutput() UserCreatedAcrAccountOutput {
	return i.ToUserCreatedAcrAccountOutputWithContext(context.Background())
}

func (i UserCreatedAcrAccountArgs) ToUserCreatedAcrAccountOutputWithContext(ctx context.Context) UserCreatedAcrAccountOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserCreatedAcrAccountOutput)
}

func (i UserCreatedAcrAccountArgs) ToUserCreatedAcrAccountPtrOutput() UserCreatedAcrAccountPtrOutput {
	return i.ToUserCreatedAcrAccountPtrOutputWithContext(context.Background())
}

func (i UserCreatedAcrAccountArgs) ToUserCreatedAcrAccountPtrOutputWithContext(ctx context.Context) UserCreatedAcrAccountPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserCreatedAcrAccountOutput).ToUserCreatedAcrAccountPtrOutputWithContext(ctx)
}

// UserCreatedAcrAccountPtrInput is an input type that accepts UserCreatedAcrAccountArgs, UserCreatedAcrAccountPtr and UserCreatedAcrAccountPtrOutput values.
// You can construct a concrete instance of `UserCreatedAcrAccountPtrInput` via:
//
//	        UserCreatedAcrAccountArgs{...}
//
//	or:
//
//	        nil
type UserCreatedAcrAccountPtrInput interface {
	pulumi.Input

	ToUserCreatedAcrAccountPtrOutput() UserCreatedAcrAccountPtrOutput
	ToUserCreatedAcrAccountPtrOutputWithContext(context.Context) UserCreatedAcrAccountPtrOutput
}

type userCreatedAcrAccountPtrType UserCreatedAcrAccountArgs

func UserCreatedAcrAccountPtr(v *UserCreatedAcrAccountArgs) UserCreatedAcrAccountPtrInput {
	return (*userCreatedAcrAccountPtrType)(v)
}

func (*userCreatedAcrAccountPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UserCreatedAcrAccount)(nil)).Elem()
}

func (i *userCreatedAcrAccountPtrType) ToUserCreatedAcrAccountPtrOutput() UserCreatedAcrAccountPtrOutput {
	return i.ToUserCreatedAcrAccountPtrOutputWithContext(context.Background())
}

func (i *userCreatedAcrAccountPtrType) ToUserCreatedAcrAccountPtrOutputWithContext(ctx context.Context) UserCreatedAcrAccountPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserCreatedAcrAccountPtrOutput)
}

type UserCreatedAcrAccountOutput struct{ *pulumi.OutputState }

func (UserCreatedAcrAccountOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserCreatedAcrAccount)(nil)).Elem()
}

func (o UserCreatedAcrAccountOutput) ToUserCreatedAcrAccountOutput() UserCreatedAcrAccountOutput {
	return o
}

func (o UserCreatedAcrAccountOutput) ToUserCreatedAcrAccountOutputWithContext(ctx context.Context) UserCreatedAcrAccountOutput {
	return o
}

func (o UserCreatedAcrAccountOutput) ToUserCreatedAcrAccountPtrOutput() UserCreatedAcrAccountPtrOutput {
	return o.ToUserCreatedAcrAccountPtrOutputWithContext(context.Background())
}

func (o UserCreatedAcrAccountOutput) ToUserCreatedAcrAccountPtrOutputWithContext(ctx context.Context) UserCreatedAcrAccountPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v UserCreatedAcrAccount) *UserCreatedAcrAccount {
		return &v
	}).(UserCreatedAcrAccountPtrOutput)
}

// ARM ResourceId of a resource
func (o UserCreatedAcrAccountOutput) ArmResourceId() ArmResourceIdPtrOutput {
	return o.ApplyT(func(v UserCreatedAcrAccount) *ArmResourceId { return v.ArmResourceId }).(ArmResourceIdPtrOutput)
}

type UserCreatedAcrAccountPtrOutput struct{ *pulumi.OutputState }

func (UserCreatedAcrAccountPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserCreatedAcrAccount)(nil)).Elem()
}

func (o UserCreatedAcrAccountPtrOutput) ToUserCreatedAcrAccountPtrOutput() UserCreatedAcrAccountPtrOutput {
	return o
}

func (o UserCreatedAcrAccountPtrOutput) ToUserCreatedAcrAccountPtrOutputWithContext(ctx context.Context) UserCreatedAcrAccountPtrOutput {
	return o
}

func (o UserCreatedAcrAccountPtrOutput) Elem() UserCreatedAcrAccountOutput {
	return o.ApplyT(func(v *UserCreatedAcrAccount) UserCreatedAcrAccount {
		if v != nil {
			return *v
		}
		var ret UserCreatedAcrAccount
		return ret
	}).(UserCreatedAcrAccountOutput)
}

// ARM ResourceId of a resource
func (o UserCreatedAcrAccountPtrOutput) ArmResourceId() ArmResourceIdPtrOutput {
	return o.ApplyT(func(v *UserCreatedAcrAccount) *ArmResourceId {
		if v == nil {
			return nil
		}
		return v.ArmResourceId
	}).(ArmResourceIdPtrOutput)
}

type UserCreatedAcrAccountResponse struct {
	// ARM ResourceId of a resource
	ArmResourceId *ArmResourceIdResponse `pulumi:"armResourceId"`
}

type UserCreatedAcrAccountResponseOutput struct{ *pulumi.OutputState }

func (UserCreatedAcrAccountResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserCreatedAcrAccountResponse)(nil)).Elem()
}

func (o UserCreatedAcrAccountResponseOutput) ToUserCreatedAcrAccountResponseOutput() UserCreatedAcrAccountResponseOutput {
	return o
}

func (o UserCreatedAcrAccountResponseOutput) ToUserCreatedAcrAccountResponseOutputWithContext(ctx context.Context) UserCreatedAcrAccountResponseOutput {
	return o
}

// ARM ResourceId of a resource
func (o UserCreatedAcrAccountResponseOutput) ArmResourceId() ArmResourceIdResponsePtrOutput {
	return o.ApplyT(func(v UserCreatedAcrAccountResponse) *ArmResourceIdResponse { return v.ArmResourceId }).(ArmResourceIdResponsePtrOutput)
}

type UserCreatedAcrAccountResponsePtrOutput struct{ *pulumi.OutputState }

func (UserCreatedAcrAccountResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserCreatedAcrAccountResponse)(nil)).Elem()
}

func (o UserCreatedAcrAccountResponsePtrOutput) ToUserCreatedAcrAccountResponsePtrOutput() UserCreatedAcrAccountResponsePtrOutput {
	return o
}

func (o UserCreatedAcrAccountResponsePtrOutput) ToUserCreatedAcrAccountResponsePtrOutputWithContext(ctx context.Context) UserCreatedAcrAccountResponsePtrOutput {
	return o
}

func (o UserCreatedAcrAccountResponsePtrOutput) Elem() UserCreatedAcrAccountResponseOutput {
	return o.ApplyT(func(v *UserCreatedAcrAccountResponse) UserCreatedAcrAccountResponse {
		if v != nil {
			return *v
		}
		var ret UserCreatedAcrAccountResponse
		return ret
	}).(UserCreatedAcrAccountResponseOutput)
}

// ARM ResourceId of a resource
func (o UserCreatedAcrAccountResponsePtrOutput) ArmResourceId() ArmResourceIdResponsePtrOutput {
	return o.ApplyT(func(v *UserCreatedAcrAccountResponse) *ArmResourceIdResponse {
		if v == nil {
			return nil
		}
		return v.ArmResourceId
	}).(ArmResourceIdResponsePtrOutput)
}

type UserCreatedStorageAccount struct {
	// ARM ResourceId of a resource
	ArmResourceId *ArmResourceId `pulumi:"armResourceId"`
}

// UserCreatedStorageAccountInput is an input type that accepts UserCreatedStorageAccountArgs and UserCreatedStorageAccountOutput values.
// You can construct a concrete instance of `UserCreatedStorageAccountInput` via:
//
//	UserCreatedStorageAccountArgs{...}
type UserCreatedStorageAccountInput interface {
	pulumi.Input

	ToUserCreatedStorageAccountOutput() UserCreatedStorageAccountOutput
	ToUserCreatedStorageAccountOutputWithContext(context.Context) UserCreatedStorageAccountOutput
}

type UserCreatedStorageAccountArgs struct {
	// ARM ResourceId of a resource
	ArmResourceId ArmResourceIdPtrInput `pulumi:"armResourceId"`
}

func (UserCreatedStorageAccountArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserCreatedStorageAccount)(nil)).Elem()
}

func (i UserCreatedStorageAccountArgs) ToUserCreatedStorageAccountOutput() UserCreatedStorageAccountOutput {
	return i.ToUserCreatedStorageAccountOutputWithContext(context.Background())
}

func (i UserCreatedStorageAccountArgs) ToUserCreatedStorageAccountOutputWithContext(ctx context.Context) UserCreatedStorageAccountOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserCreatedStorageAccountOutput)
}

func (i UserCreatedStorageAccountArgs) ToUserCreatedStorageAccountPtrOutput() UserCreatedStorageAccountPtrOutput {
	return i.ToUserCreatedStorageAccountPtrOutputWithContext(context.Background())
}

func (i UserCreatedStorageAccountArgs) ToUserCreatedStorageAccountPtrOutputWithContext(ctx context.Context) UserCreatedStorageAccountPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserCreatedStorageAccountOutput).ToUserCreatedStorageAccountPtrOutputWithContext(ctx)
}

// UserCreatedStorageAccountPtrInput is an input type that accepts UserCreatedStorageAccountArgs, UserCreatedStorageAccountPtr and UserCreatedStorageAccountPtrOutput values.
// You can construct a concrete instance of `UserCreatedStorageAccountPtrInput` via:
//
//	        UserCreatedStorageAccountArgs{...}
//
//	or:
//
//	        nil
type UserCreatedStorageAccountPtrInput interface {
	pulumi.Input

	ToUserCreatedStorageAccountPtrOutput() UserCreatedStorageAccountPtrOutput
	ToUserCreatedStorageAccountPtrOutputWithContext(context.Context) UserCreatedStorageAccountPtrOutput
}

type userCreatedStorageAccountPtrType UserCreatedStorageAccountArgs

func UserCreatedStorageAccountPtr(v *UserCreatedStorageAccountArgs) UserCreatedStorageAccountPtrInput {
	return (*userCreatedStorageAccountPtrType)(v)
}

func (*userCreatedStorageAccountPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UserCreatedStorageAccount)(nil)).Elem()
}

func (i *userCreatedStorageAccountPtrType) ToUserCreatedStorageAccountPtrOutput() UserCreatedStorageAccountPtrOutput {
	return i.ToUserCreatedStorageAccountPtrOutputWithContext(context.Background())
}

func (i *userCreatedStorageAccountPtrType) ToUserCreatedStorageAccountPtrOutputWithContext(ctx context.Context) UserCreatedStorageAccountPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserCreatedStorageAccountPtrOutput)
}

type UserCreatedStorageAccountOutput struct{ *pulumi.OutputState }

func (UserCreatedStorageAccountOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserCreatedStorageAccount)(nil)).Elem()
}

func (o UserCreatedStorageAccountOutput) ToUserCreatedStorageAccountOutput() UserCreatedStorageAccountOutput {
	return o
}

func (o UserCreatedStorageAccountOutput) ToUserCreatedStorageAccountOutputWithContext(ctx context.Context) UserCreatedStorageAccountOutput {
	return o
}

func (o UserCreatedStorageAccountOutput) ToUserCreatedStorageAccountPtrOutput() UserCreatedStorageAccountPtrOutput {
	return o.ToUserCreatedStorageAccountPtrOutputWithContext(context.Background())
}

func (o UserCreatedStorageAccountOutput) ToUserCreatedStorageAccountPtrOutputWithContext(ctx context.Context) UserCreatedStorageAccountPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v UserCreatedStorageAccount) *UserCreatedStorageAccount {
		return &v
	}).(UserCreatedStorageAccountPtrOutput)
}

// ARM ResourceId of a resource
func (o UserCreatedStorageAccountOutput) ArmResourceId() ArmResourceIdPtrOutput {
	return o.ApplyT(func(v UserCreatedStorageAccount) *ArmResourceId { return v.ArmResourceId }).(ArmResourceIdPtrOutput)
}

type UserCreatedStorageAccountPtrOutput struct{ *pulumi.OutputState }

func (UserCreatedStorageAccountPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserCreatedStorageAccount)(nil)).Elem()
}

func (o UserCreatedStorageAccountPtrOutput) ToUserCreatedStorageAccountPtrOutput() UserCreatedStorageAccountPtrOutput {
	return o
}

func (o UserCreatedStorageAccountPtrOutput) ToUserCreatedStorageAccountPtrOutputWithContext(ctx context.Context) UserCreatedStorageAccountPtrOutput {
	return o
}

func (o UserCreatedStorageAccountPtrOutput) Elem() UserCreatedStorageAccountOutput {
	return o.ApplyT(func(v *UserCreatedStorageAccount) UserCreatedStorageAccount {
		if v != nil {
			return *v
		}
		var ret UserCreatedStorageAccount
		return ret
	}).(UserCreatedStorageAccountOutput)
}

// ARM ResourceId of a resource
func (o UserCreatedStorageAccountPtrOutput) ArmResourceId() ArmResourceIdPtrOutput {
	return o.ApplyT(func(v *UserCreatedStorageAccount) *ArmResourceId {
		if v == nil {
			return nil
		}
		return v.ArmResourceId
	}).(ArmResourceIdPtrOutput)
}

type UserCreatedStorageAccountResponse struct {
	// ARM ResourceId of a resource
	ArmResourceId *ArmResourceIdResponse `pulumi:"armResourceId"`
}

type UserCreatedStorageAccountResponseOutput struct{ *pulumi.OutputState }

func (UserCreatedStorageAccountResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserCreatedStorageAccountResponse)(nil)).Elem()
}

func (o UserCreatedStorageAccountResponseOutput) ToUserCreatedStorageAccountResponseOutput() UserCreatedStorageAccountResponseOutput {
	return o
}

func (o UserCreatedStorageAccountResponseOutput) ToUserCreatedStorageAccountResponseOutputWithContext(ctx context.Context) UserCreatedStorageAccountResponseOutput {
	return o
}

// ARM ResourceId of a resource
func (o UserCreatedStorageAccountResponseOutput) ArmResourceId() ArmResourceIdResponsePtrOutput {
	return o.ApplyT(func(v UserCreatedStorageAccountResponse) *ArmResourceIdResponse { return v.ArmResourceId }).(ArmResourceIdResponsePtrOutput)
}

type UserCreatedStorageAccountResponsePtrOutput struct{ *pulumi.OutputState }

func (UserCreatedStorageAccountResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserCreatedStorageAccountResponse)(nil)).Elem()
}

func (o UserCreatedStorageAccountResponsePtrOutput) ToUserCreatedStorageAccountResponsePtrOutput() UserCreatedStorageAccountResponsePtrOutput {
	return o
}

func (o UserCreatedStorageAccountResponsePtrOutput) ToUserCreatedStorageAccountResponsePtrOutputWithContext(ctx context.Context) UserCreatedStorageAccountResponsePtrOutput {
	return o
}

func (o UserCreatedStorageAccountResponsePtrOutput) Elem() UserCreatedStorageAccountResponseOutput {
	return o.ApplyT(func(v *UserCreatedStorageAccountResponse) UserCreatedStorageAccountResponse {
		if v != nil {
			return *v
		}
		var ret UserCreatedStorageAccountResponse
		return ret
	}).(UserCreatedStorageAccountResponseOutput)
}

// ARM ResourceId of a resource
func (o UserCreatedStorageAccountResponsePtrOutput) ArmResourceId() ArmResourceIdResponsePtrOutput {
	return o.ApplyT(func(v *UserCreatedStorageAccountResponse) *ArmResourceIdResponse {
		if v == nil {
			return nil
		}
		return v.ArmResourceId
	}).(ArmResourceIdResponsePtrOutput)
}

// User identity configuration.
type UserIdentity struct {
	// Enum to determine identity framework.
	// Expected value is 'UserIdentity'.
	IdentityType string `pulumi:"identityType"`
}

// User identity configuration.
type UserIdentityResponse struct {
	// Enum to determine identity framework.
	// Expected value is 'UserIdentity'.
	IdentityType string `pulumi:"identityType"`
}

type UsernamePasswordAuthTypeWorkspaceConnectionProperties struct {
	// Authentication type of the connection target
	// Expected value is 'UsernamePassword'.
	AuthType string `pulumi:"authType"`
	// Category of the connection
	Category    *string                              `pulumi:"category"`
	Credentials *WorkspaceConnectionUsernamePassword `pulumi:"credentials"`
	ExpiryTime  *string                              `pulumi:"expiryTime"`
	// whether this connection will be shared to all the project workspace under the hub
	IsSharedToAll *bool       `pulumi:"isSharedToAll"`
	Metadata      interface{} `pulumi:"metadata"`
	Target        *string     `pulumi:"target"`
}

type UsernamePasswordAuthTypeWorkspaceConnectionPropertiesResponse struct {
	// Authentication type of the connection target
	// Expected value is 'UsernamePassword'.
	AuthType string `pulumi:"authType"`
	// Category of the connection
	Category *string `pulumi:"category"`
	// The arm id of the workspace which created this connection
	CreatedByWorkspaceArmId string                                       `pulumi:"createdByWorkspaceArmId"`
	Credentials             *WorkspaceConnectionUsernamePasswordResponse `pulumi:"credentials"`
	ExpiryTime              *string                                      `pulumi:"expiryTime"`
	// whether this connection will be shared to all the project workspace under the hub
	IsSharedToAll *bool       `pulumi:"isSharedToAll"`
	Metadata      interface{} `pulumi:"metadata"`
	Target        *string     `pulumi:"target"`
}

// A Machine Learning compute based on Azure Virtual Machines.
type VirtualMachine struct {
	// Location for the underlying compute
	ComputeLocation *string `pulumi:"computeLocation"`
	// The type of compute
	// Expected value is 'VirtualMachine'.
	ComputeType string `pulumi:"computeType"`
	// The description of the Machine Learning compute.
	Description *string `pulumi:"description"`
	// Opt-out of local authentication and ensure customers can use only MSI and AAD exclusively for authentication.
	DisableLocalAuth *bool                           `pulumi:"disableLocalAuth"`
	Properties       *VirtualMachineSchemaProperties `pulumi:"properties"`
	// ARM resource id of the underlying compute
	ResourceId *string `pulumi:"resourceId"`
}

// Virtual Machine image for Windows AML Compute
type VirtualMachineImage struct {
	// Virtual Machine image path
	Id string `pulumi:"id"`
}

// Virtual Machine image for Windows AML Compute
type VirtualMachineImageResponse struct {
	// Virtual Machine image path
	Id string `pulumi:"id"`
}

// A Machine Learning compute based on Azure Virtual Machines.
type VirtualMachineResponse struct {
	// Location for the underlying compute
	ComputeLocation *string `pulumi:"computeLocation"`
	// The type of compute
	// Expected value is 'VirtualMachine'.
	ComputeType string `pulumi:"computeType"`
	// The time at which the compute was created.
	CreatedOn string `pulumi:"createdOn"`
	// The description of the Machine Learning compute.
	Description *string `pulumi:"description"`
	// Opt-out of local authentication and ensure customers can use only MSI and AAD exclusively for authentication.
	DisableLocalAuth *bool `pulumi:"disableLocalAuth"`
	// Indicating whether the compute was provisioned by user and brought from outside if true, or machine learning service provisioned it if false.
	IsAttachedCompute bool `pulumi:"isAttachedCompute"`
	// The time at which the compute was last modified.
	ModifiedOn string                                  `pulumi:"modifiedOn"`
	Properties *VirtualMachineSchemaResponseProperties `pulumi:"properties"`
	// Errors during provisioning
	ProvisioningErrors []ErrorResponseResponse `pulumi:"provisioningErrors"`
	// The provision state of the cluster. Valid values are Unknown, Updating, Provisioning, Succeeded, and Failed.
	ProvisioningState string `pulumi:"provisioningState"`
	// ARM resource id of the underlying compute
	ResourceId *string `pulumi:"resourceId"`
}

type VirtualMachineSchemaProperties struct {
	// Public IP address of the virtual machine.
	Address *string `pulumi:"address"`
	// Admin credentials for virtual machine
	AdministratorAccount *VirtualMachineSshCredentials `pulumi:"administratorAccount"`
	// Indicates whether this compute will be used for running notebooks.
	IsNotebookInstanceCompute *bool `pulumi:"isNotebookInstanceCompute"`
	// Notebook server port open for ssh connections.
	NotebookServerPort *int `pulumi:"notebookServerPort"`
	// Port open for ssh connections.
	SshPort *int `pulumi:"sshPort"`
	// Virtual Machine size
	VirtualMachineSize *string `pulumi:"virtualMachineSize"`
}

type VirtualMachineSchemaResponseProperties struct {
	// Public IP address of the virtual machine.
	Address *string `pulumi:"address"`
	// Admin credentials for virtual machine
	AdministratorAccount *VirtualMachineSshCredentialsResponse `pulumi:"administratorAccount"`
	// Indicates whether this compute will be used for running notebooks.
	IsNotebookInstanceCompute *bool `pulumi:"isNotebookInstanceCompute"`
	// Notebook server port open for ssh connections.
	NotebookServerPort *int `pulumi:"notebookServerPort"`
	// Port open for ssh connections.
	SshPort *int `pulumi:"sshPort"`
	// Virtual Machine size
	VirtualMachineSize *string `pulumi:"virtualMachineSize"`
}

// Describes the properties of a VM size.
type VirtualMachineSizeResponse struct {
	// The estimated price information for using a VM.
	EstimatedVMPrices *EstimatedVMPricesResponse `pulumi:"estimatedVMPrices"`
	// The family name of the virtual machine size.
	Family string `pulumi:"family"`
	// The number of gPUs supported by the virtual machine size.
	Gpus int `pulumi:"gpus"`
	// Specifies if the virtual machine size supports low priority VMs.
	LowPriorityCapable bool `pulumi:"lowPriorityCapable"`
	// The resource volume size, in MB, allowed by the virtual machine size.
	MaxResourceVolumeMB int `pulumi:"maxResourceVolumeMB"`
	// The amount of memory, in GB, supported by the virtual machine size.
	MemoryGB float64 `pulumi:"memoryGB"`
	// The name of the virtual machine size.
	Name string `pulumi:"name"`
	// The OS VHD disk size, in MB, allowed by the virtual machine size.
	OsVhdSizeMB int `pulumi:"osVhdSizeMB"`
	// Specifies if the virtual machine size supports premium IO.
	PremiumIO bool `pulumi:"premiumIO"`
	// Specifies the compute types supported by the virtual machine size.
	SupportedComputeTypes []string `pulumi:"supportedComputeTypes"`
	// The number of vCPUs supported by the virtual machine size.
	VCPUs int `pulumi:"vCPUs"`
}

// Describes the properties of a VM size.
type VirtualMachineSizeResponseOutput struct{ *pulumi.OutputState }

func (VirtualMachineSizeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineSizeResponse)(nil)).Elem()
}

func (o VirtualMachineSizeResponseOutput) ToVirtualMachineSizeResponseOutput() VirtualMachineSizeResponseOutput {
	return o
}

func (o VirtualMachineSizeResponseOutput) ToVirtualMachineSizeResponseOutputWithContext(ctx context.Context) VirtualMachineSizeResponseOutput {
	return o
}

// The estimated price information for using a VM.
func (o VirtualMachineSizeResponseOutput) EstimatedVMPrices() EstimatedVMPricesResponsePtrOutput {
	return o.ApplyT(func(v VirtualMachineSizeResponse) *EstimatedVMPricesResponse { return v.EstimatedVMPrices }).(EstimatedVMPricesResponsePtrOutput)
}

// The family name of the virtual machine size.
func (o VirtualMachineSizeResponseOutput) Family() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualMachineSizeResponse) string { return v.Family }).(pulumi.StringOutput)
}

// The number of gPUs supported by the virtual machine size.
func (o VirtualMachineSizeResponseOutput) Gpus() pulumi.IntOutput {
	return o.ApplyT(func(v VirtualMachineSizeResponse) int { return v.Gpus }).(pulumi.IntOutput)
}

// Specifies if the virtual machine size supports low priority VMs.
func (o VirtualMachineSizeResponseOutput) LowPriorityCapable() pulumi.BoolOutput {
	return o.ApplyT(func(v VirtualMachineSizeResponse) bool { return v.LowPriorityCapable }).(pulumi.BoolOutput)
}

// The resource volume size, in MB, allowed by the virtual machine size.
func (o VirtualMachineSizeResponseOutput) MaxResourceVolumeMB() pulumi.IntOutput {
	return o.ApplyT(func(v VirtualMachineSizeResponse) int { return v.MaxResourceVolumeMB }).(pulumi.IntOutput)
}

// The amount of memory, in GB, supported by the virtual machine size.
func (o VirtualMachineSizeResponseOutput) MemoryGB() pulumi.Float64Output {
	return o.ApplyT(func(v VirtualMachineSizeResponse) float64 { return v.MemoryGB }).(pulumi.Float64Output)
}

// The name of the virtual machine size.
func (o VirtualMachineSizeResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualMachineSizeResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The OS VHD disk size, in MB, allowed by the virtual machine size.
func (o VirtualMachineSizeResponseOutput) OsVhdSizeMB() pulumi.IntOutput {
	return o.ApplyT(func(v VirtualMachineSizeResponse) int { return v.OsVhdSizeMB }).(pulumi.IntOutput)
}

// Specifies if the virtual machine size supports premium IO.
func (o VirtualMachineSizeResponseOutput) PremiumIO() pulumi.BoolOutput {
	return o.ApplyT(func(v VirtualMachineSizeResponse) bool { return v.PremiumIO }).(pulumi.BoolOutput)
}

// Specifies the compute types supported by the virtual machine size.
func (o VirtualMachineSizeResponseOutput) SupportedComputeTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VirtualMachineSizeResponse) []string { return v.SupportedComputeTypes }).(pulumi.StringArrayOutput)
}

// The number of vCPUs supported by the virtual machine size.
func (o VirtualMachineSizeResponseOutput) VCPUs() pulumi.IntOutput {
	return o.ApplyT(func(v VirtualMachineSizeResponse) int { return v.VCPUs }).(pulumi.IntOutput)
}

type VirtualMachineSizeResponseArrayOutput struct{ *pulumi.OutputState }

func (VirtualMachineSizeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualMachineSizeResponse)(nil)).Elem()
}

func (o VirtualMachineSizeResponseArrayOutput) ToVirtualMachineSizeResponseArrayOutput() VirtualMachineSizeResponseArrayOutput {
	return o
}

func (o VirtualMachineSizeResponseArrayOutput) ToVirtualMachineSizeResponseArrayOutputWithContext(ctx context.Context) VirtualMachineSizeResponseArrayOutput {
	return o
}

func (o VirtualMachineSizeResponseArrayOutput) Index(i pulumi.IntInput) VirtualMachineSizeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualMachineSizeResponse {
		return vs[0].([]VirtualMachineSizeResponse)[vs[1].(int)]
	}).(VirtualMachineSizeResponseOutput)
}

// Admin credentials for virtual machine
type VirtualMachineSshCredentials struct {
	// Password of admin account
	Password *string `pulumi:"password"`
	// Private key data
	PrivateKeyData *string `pulumi:"privateKeyData"`
	// Public key data
	PublicKeyData *string `pulumi:"publicKeyData"`
	// Username of admin account
	Username *string `pulumi:"username"`
}

// Admin credentials for virtual machine
type VirtualMachineSshCredentialsResponse struct {
	// Password of admin account
	Password *string `pulumi:"password"`
	// Private key data
	PrivateKeyData *string `pulumi:"privateKeyData"`
	// Public key data
	PublicKeyData *string `pulumi:"publicKeyData"`
	// Username of admin account
	Username *string `pulumi:"username"`
}

type VolumeDefinition struct {
	// Bind Options of the mount
	Bind *BindOptions `pulumi:"bind"`
	// Consistency of the volume
	Consistency *string `pulumi:"consistency"`
	// Indicate whether to mount volume as readOnly. Default value for this is false.
	ReadOnly *bool `pulumi:"readOnly"`
	// Source of the mount. For bind mounts this is the host path.
	Source *string `pulumi:"source"`
	// Target of the mount. For bind mounts this is the path in the container.
	Target *string `pulumi:"target"`
	// tmpfs option of the mount
	Tmpfs *TmpfsOptions `pulumi:"tmpfs"`
	// Type of Volume Definition. Possible Values: bind,volume,tmpfs,npipe
	Type *string `pulumi:"type"`
	// Volume Options of the mount
	Volume *VolumeOptions `pulumi:"volume"`
}

// Defaults sets the appropriate defaults for VolumeDefinition
func (val *VolumeDefinition) Defaults() *VolumeDefinition {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Type == nil {
		type_ := "bind"
		tmp.Type = &type_
	}
	return &tmp
}

type VolumeDefinitionResponse struct {
	// Bind Options of the mount
	Bind *BindOptionsResponse `pulumi:"bind"`
	// Consistency of the volume
	Consistency *string `pulumi:"consistency"`
	// Indicate whether to mount volume as readOnly. Default value for this is false.
	ReadOnly *bool `pulumi:"readOnly"`
	// Source of the mount. For bind mounts this is the host path.
	Source *string `pulumi:"source"`
	// Target of the mount. For bind mounts this is the path in the container.
	Target *string `pulumi:"target"`
	// tmpfs option of the mount
	Tmpfs *TmpfsOptionsResponse `pulumi:"tmpfs"`
	// Type of Volume Definition. Possible Values: bind,volume,tmpfs,npipe
	Type *string `pulumi:"type"`
	// Volume Options of the mount
	Volume *VolumeOptionsResponse `pulumi:"volume"`
}

// Defaults sets the appropriate defaults for VolumeDefinitionResponse
func (val *VolumeDefinitionResponse) Defaults() *VolumeDefinitionResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Type == nil {
		type_ := "bind"
		tmp.Type = &type_
	}
	return &tmp
}

type VolumeOptions struct {
	// Indicate whether volume is nocopy
	Nocopy *bool `pulumi:"nocopy"`
}

type VolumeOptionsResponse struct {
	// Indicate whether volume is nocopy
	Nocopy *bool `pulumi:"nocopy"`
}

type WorkspaceConnectionAccessKey struct {
	AccessKeyId     *string `pulumi:"accessKeyId"`
	SecretAccessKey *string `pulumi:"secretAccessKey"`
}

type WorkspaceConnectionAccessKeyResponse struct {
	AccessKeyId     *string `pulumi:"accessKeyId"`
	SecretAccessKey *string `pulumi:"secretAccessKey"`
}

// Api key object for workspace connection credential.
type WorkspaceConnectionApiKey struct {
	Key *string `pulumi:"key"`
}

// Api key object for workspace connection credential.
type WorkspaceConnectionApiKeyResponse struct {
	Key *string `pulumi:"key"`
}

type WorkspaceConnectionManagedIdentity struct {
	ClientId   *string `pulumi:"clientId"`
	ResourceId *string `pulumi:"resourceId"`
}

type WorkspaceConnectionManagedIdentityResponse struct {
	ClientId   *string `pulumi:"clientId"`
	ResourceId *string `pulumi:"resourceId"`
}

type WorkspaceConnectionPersonalAccessToken struct {
	Pat *string `pulumi:"pat"`
}

type WorkspaceConnectionPersonalAccessTokenResponse struct {
	Pat *string `pulumi:"pat"`
}

type WorkspaceConnectionServicePrincipal struct {
	ClientId     *string `pulumi:"clientId"`
	ClientSecret *string `pulumi:"clientSecret"`
	TenantId     *string `pulumi:"tenantId"`
}

type WorkspaceConnectionServicePrincipalResponse struct {
	ClientId     *string `pulumi:"clientId"`
	ClientSecret *string `pulumi:"clientSecret"`
	TenantId     *string `pulumi:"tenantId"`
}

type WorkspaceConnectionSharedAccessSignature struct {
	Sas *string `pulumi:"sas"`
}

type WorkspaceConnectionSharedAccessSignatureResponse struct {
	Sas *string `pulumi:"sas"`
}

type WorkspaceConnectionUsernamePassword struct {
	Password *string `pulumi:"password"`
	Username *string `pulumi:"username"`
}

type WorkspaceConnectionUsernamePasswordResponse struct {
	Password *string `pulumi:"password"`
	Username *string `pulumi:"username"`
}

// WorkspaceHub's configuration object.
type WorkspaceHubConfig struct {
	AdditionalWorkspaceStorageAccounts []string `pulumi:"additionalWorkspaceStorageAccounts"`
	DefaultWorkspaceResourceGroup      *string  `pulumi:"defaultWorkspaceResourceGroup"`
}

// WorkspaceHubConfigInput is an input type that accepts WorkspaceHubConfigArgs and WorkspaceHubConfigOutput values.
// You can construct a concrete instance of `WorkspaceHubConfigInput` via:
//
//	WorkspaceHubConfigArgs{...}
type WorkspaceHubConfigInput interface {
	pulumi.Input

	ToWorkspaceHubConfigOutput() WorkspaceHubConfigOutput
	ToWorkspaceHubConfigOutputWithContext(context.Context) WorkspaceHubConfigOutput
}

// WorkspaceHub's configuration object.
type WorkspaceHubConfigArgs struct {
	AdditionalWorkspaceStorageAccounts pulumi.StringArrayInput `pulumi:"additionalWorkspaceStorageAccounts"`
	DefaultWorkspaceResourceGroup      pulumi.StringPtrInput   `pulumi:"defaultWorkspaceResourceGroup"`
}

func (WorkspaceHubConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspaceHubConfig)(nil)).Elem()
}

func (i WorkspaceHubConfigArgs) ToWorkspaceHubConfigOutput() WorkspaceHubConfigOutput {
	return i.ToWorkspaceHubConfigOutputWithContext(context.Background())
}

func (i WorkspaceHubConfigArgs) ToWorkspaceHubConfigOutputWithContext(ctx context.Context) WorkspaceHubConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceHubConfigOutput)
}

func (i WorkspaceHubConfigArgs) ToWorkspaceHubConfigPtrOutput() WorkspaceHubConfigPtrOutput {
	return i.ToWorkspaceHubConfigPtrOutputWithContext(context.Background())
}

func (i WorkspaceHubConfigArgs) ToWorkspaceHubConfigPtrOutputWithContext(ctx context.Context) WorkspaceHubConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceHubConfigOutput).ToWorkspaceHubConfigPtrOutputWithContext(ctx)
}

// WorkspaceHubConfigPtrInput is an input type that accepts WorkspaceHubConfigArgs, WorkspaceHubConfigPtr and WorkspaceHubConfigPtrOutput values.
// You can construct a concrete instance of `WorkspaceHubConfigPtrInput` via:
//
//	        WorkspaceHubConfigArgs{...}
//
//	or:
//
//	        nil
type WorkspaceHubConfigPtrInput interface {
	pulumi.Input

	ToWorkspaceHubConfigPtrOutput() WorkspaceHubConfigPtrOutput
	ToWorkspaceHubConfigPtrOutputWithContext(context.Context) WorkspaceHubConfigPtrOutput
}

type workspaceHubConfigPtrType WorkspaceHubConfigArgs

func WorkspaceHubConfigPtr(v *WorkspaceHubConfigArgs) WorkspaceHubConfigPtrInput {
	return (*workspaceHubConfigPtrType)(v)
}

func (*workspaceHubConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkspaceHubConfig)(nil)).Elem()
}

func (i *workspaceHubConfigPtrType) ToWorkspaceHubConfigPtrOutput() WorkspaceHubConfigPtrOutput {
	return i.ToWorkspaceHubConfigPtrOutputWithContext(context.Background())
}

func (i *workspaceHubConfigPtrType) ToWorkspaceHubConfigPtrOutputWithContext(ctx context.Context) WorkspaceHubConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceHubConfigPtrOutput)
}

// WorkspaceHub's configuration object.
type WorkspaceHubConfigOutput struct{ *pulumi.OutputState }

func (WorkspaceHubConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspaceHubConfig)(nil)).Elem()
}

func (o WorkspaceHubConfigOutput) ToWorkspaceHubConfigOutput() WorkspaceHubConfigOutput {
	return o
}

func (o WorkspaceHubConfigOutput) ToWorkspaceHubConfigOutputWithContext(ctx context.Context) WorkspaceHubConfigOutput {
	return o
}

func (o WorkspaceHubConfigOutput) ToWorkspaceHubConfigPtrOutput() WorkspaceHubConfigPtrOutput {
	return o.ToWorkspaceHubConfigPtrOutputWithContext(context.Background())
}

func (o WorkspaceHubConfigOutput) ToWorkspaceHubConfigPtrOutputWithContext(ctx context.Context) WorkspaceHubConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkspaceHubConfig) *WorkspaceHubConfig {
		return &v
	}).(WorkspaceHubConfigPtrOutput)
}

func (o WorkspaceHubConfigOutput) AdditionalWorkspaceStorageAccounts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WorkspaceHubConfig) []string { return v.AdditionalWorkspaceStorageAccounts }).(pulumi.StringArrayOutput)
}

func (o WorkspaceHubConfigOutput) DefaultWorkspaceResourceGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkspaceHubConfig) *string { return v.DefaultWorkspaceResourceGroup }).(pulumi.StringPtrOutput)
}

type WorkspaceHubConfigPtrOutput struct{ *pulumi.OutputState }

func (WorkspaceHubConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkspaceHubConfig)(nil)).Elem()
}

func (o WorkspaceHubConfigPtrOutput) ToWorkspaceHubConfigPtrOutput() WorkspaceHubConfigPtrOutput {
	return o
}

func (o WorkspaceHubConfigPtrOutput) ToWorkspaceHubConfigPtrOutputWithContext(ctx context.Context) WorkspaceHubConfigPtrOutput {
	return o
}

func (o WorkspaceHubConfigPtrOutput) Elem() WorkspaceHubConfigOutput {
	return o.ApplyT(func(v *WorkspaceHubConfig) WorkspaceHubConfig {
		if v != nil {
			return *v
		}
		var ret WorkspaceHubConfig
		return ret
	}).(WorkspaceHubConfigOutput)
}

func (o WorkspaceHubConfigPtrOutput) AdditionalWorkspaceStorageAccounts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *WorkspaceHubConfig) []string {
		if v == nil {
			return nil
		}
		return v.AdditionalWorkspaceStorageAccounts
	}).(pulumi.StringArrayOutput)
}

func (o WorkspaceHubConfigPtrOutput) DefaultWorkspaceResourceGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceHubConfig) *string {
		if v == nil {
			return nil
		}
		return v.DefaultWorkspaceResourceGroup
	}).(pulumi.StringPtrOutput)
}

// WorkspaceHub's configuration object.
type WorkspaceHubConfigResponse struct {
	AdditionalWorkspaceStorageAccounts []string `pulumi:"additionalWorkspaceStorageAccounts"`
	DefaultWorkspaceResourceGroup      *string  `pulumi:"defaultWorkspaceResourceGroup"`
}

// WorkspaceHub's configuration object.
type WorkspaceHubConfigResponseOutput struct{ *pulumi.OutputState }

func (WorkspaceHubConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspaceHubConfigResponse)(nil)).Elem()
}

func (o WorkspaceHubConfigResponseOutput) ToWorkspaceHubConfigResponseOutput() WorkspaceHubConfigResponseOutput {
	return o
}

func (o WorkspaceHubConfigResponseOutput) ToWorkspaceHubConfigResponseOutputWithContext(ctx context.Context) WorkspaceHubConfigResponseOutput {
	return o
}

func (o WorkspaceHubConfigResponseOutput) AdditionalWorkspaceStorageAccounts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WorkspaceHubConfigResponse) []string { return v.AdditionalWorkspaceStorageAccounts }).(pulumi.StringArrayOutput)
}

func (o WorkspaceHubConfigResponseOutput) DefaultWorkspaceResourceGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkspaceHubConfigResponse) *string { return v.DefaultWorkspaceResourceGroup }).(pulumi.StringPtrOutput)
}

type WorkspaceHubConfigResponsePtrOutput struct{ *pulumi.OutputState }

func (WorkspaceHubConfigResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkspaceHubConfigResponse)(nil)).Elem()
}

func (o WorkspaceHubConfigResponsePtrOutput) ToWorkspaceHubConfigResponsePtrOutput() WorkspaceHubConfigResponsePtrOutput {
	return o
}

func (o WorkspaceHubConfigResponsePtrOutput) ToWorkspaceHubConfigResponsePtrOutputWithContext(ctx context.Context) WorkspaceHubConfigResponsePtrOutput {
	return o
}

func (o WorkspaceHubConfigResponsePtrOutput) Elem() WorkspaceHubConfigResponseOutput {
	return o.ApplyT(func(v *WorkspaceHubConfigResponse) WorkspaceHubConfigResponse {
		if v != nil {
			return *v
		}
		var ret WorkspaceHubConfigResponse
		return ret
	}).(WorkspaceHubConfigResponseOutput)
}

func (o WorkspaceHubConfigResponsePtrOutput) AdditionalWorkspaceStorageAccounts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *WorkspaceHubConfigResponse) []string {
		if v == nil {
			return nil
		}
		return v.AdditionalWorkspaceStorageAccounts
	}).(pulumi.StringArrayOutput)
}

func (o WorkspaceHubConfigResponsePtrOutput) DefaultWorkspaceResourceGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceHubConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.DefaultWorkspaceResourceGroup
	}).(pulumi.StringPtrOutput)
}

// The Private Endpoint resource.
type WorkspacePrivateEndpointResourceResponse struct {
	// e.g. /subscriptions/{networkSubscriptionId}/resourceGroups/{rgName}/providers/Microsoft.Network/privateEndpoints/{privateEndpointName}
	Id string `pulumi:"id"`
	// The subnetId that the private endpoint is connected to.
	SubnetArmId string `pulumi:"subnetArmId"`
}

// The Private Endpoint resource.
type WorkspacePrivateEndpointResourceResponseOutput struct{ *pulumi.OutputState }

func (WorkspacePrivateEndpointResourceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspacePrivateEndpointResourceResponse)(nil)).Elem()
}

func (o WorkspacePrivateEndpointResourceResponseOutput) ToWorkspacePrivateEndpointResourceResponseOutput() WorkspacePrivateEndpointResourceResponseOutput {
	return o
}

func (o WorkspacePrivateEndpointResourceResponseOutput) ToWorkspacePrivateEndpointResourceResponseOutputWithContext(ctx context.Context) WorkspacePrivateEndpointResourceResponseOutput {
	return o
}

// e.g. /subscriptions/{networkSubscriptionId}/resourceGroups/{rgName}/providers/Microsoft.Network/privateEndpoints/{privateEndpointName}
func (o WorkspacePrivateEndpointResourceResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspacePrivateEndpointResourceResponse) string { return v.Id }).(pulumi.StringOutput)
}

// The subnetId that the private endpoint is connected to.
func (o WorkspacePrivateEndpointResourceResponseOutput) SubnetArmId() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspacePrivateEndpointResourceResponse) string { return v.SubnetArmId }).(pulumi.StringOutput)
}

type WorkspacePrivateEndpointResourceResponsePtrOutput struct{ *pulumi.OutputState }

func (WorkspacePrivateEndpointResourceResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkspacePrivateEndpointResourceResponse)(nil)).Elem()
}

func (o WorkspacePrivateEndpointResourceResponsePtrOutput) ToWorkspacePrivateEndpointResourceResponsePtrOutput() WorkspacePrivateEndpointResourceResponsePtrOutput {
	return o
}

func (o WorkspacePrivateEndpointResourceResponsePtrOutput) ToWorkspacePrivateEndpointResourceResponsePtrOutputWithContext(ctx context.Context) WorkspacePrivateEndpointResourceResponsePtrOutput {
	return o
}

func (o WorkspacePrivateEndpointResourceResponsePtrOutput) Elem() WorkspacePrivateEndpointResourceResponseOutput {
	return o.ApplyT(func(v *WorkspacePrivateEndpointResourceResponse) WorkspacePrivateEndpointResourceResponse {
		if v != nil {
			return *v
		}
		var ret WorkspacePrivateEndpointResourceResponse
		return ret
	}).(WorkspacePrivateEndpointResourceResponseOutput)
}

// e.g. /subscriptions/{networkSubscriptionId}/resourceGroups/{rgName}/providers/Microsoft.Network/privateEndpoints/{privateEndpointName}
func (o WorkspacePrivateEndpointResourceResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspacePrivateEndpointResourceResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

// The subnetId that the private endpoint is connected to.
func (o WorkspacePrivateEndpointResourceResponsePtrOutput) SubnetArmId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspacePrivateEndpointResourceResponse) *string {
		if v == nil {
			return nil
		}
		return &v.SubnetArmId
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(RegistryPrivateEndpointConnectionPropertiesResponseOutput{})
	pulumi.RegisterOutputType(RegistryPrivateEndpointConnectionPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(RegistryPrivateEndpointConnectionResponseOutput{})
	pulumi.RegisterOutputType(RegistryPrivateEndpointConnectionResponseArrayOutput{})
	pulumi.RegisterOutputType(RegistryPrivateLinkServiceConnectionStateOutput{})
	pulumi.RegisterOutputType(RegistryPrivateLinkServiceConnectionStatePtrOutput{})
	pulumi.RegisterOutputType(RegistryPrivateLinkServiceConnectionStateResponseOutput{})
	pulumi.RegisterOutputType(RegistryPrivateLinkServiceConnectionStateResponsePtrOutput{})
	pulumi.RegisterOutputType(RegistryRegionArmDetailsOutput{})
	pulumi.RegisterOutputType(RegistryRegionArmDetailsArrayOutput{})
	pulumi.RegisterOutputType(RegistryRegionArmDetailsResponseOutput{})
	pulumi.RegisterOutputType(RegistryRegionArmDetailsResponseArrayOutput{})
	pulumi.RegisterOutputType(RegistryResponseOutput{})
	pulumi.RegisterOutputType(RequestConfigurationOutput{})
	pulumi.RegisterOutputType(RequestConfigurationPtrOutput{})
	pulumi.RegisterOutputType(RequestConfigurationResponseOutput{})
	pulumi.RegisterOutputType(RequestConfigurationResponsePtrOutput{})
	pulumi.RegisterOutputType(RouteOutput{})
	pulumi.RegisterOutputType(RoutePtrOutput{})
	pulumi.RegisterOutputType(RouteResponseOutput{})
	pulumi.RegisterOutputType(RouteResponsePtrOutput{})
	pulumi.RegisterOutputType(ScheduleTypeOutput{})
	pulumi.RegisterOutputType(ScheduleResponseOutput{})
	pulumi.RegisterOutputType(SecretConfigurationOutput{})
	pulumi.RegisterOutputType(SecretConfigurationMapOutput{})
	pulumi.RegisterOutputType(SecretConfigurationResponseOutput{})
	pulumi.RegisterOutputType(SecretConfigurationResponseMapOutput{})
	pulumi.RegisterOutputType(ServerlessComputeSettingsOutput{})
	pulumi.RegisterOutputType(ServerlessComputeSettingsPtrOutput{})
	pulumi.RegisterOutputType(ServerlessComputeSettingsResponseOutput{})
	pulumi.RegisterOutputType(ServerlessComputeSettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(ServerlessEndpointTypeOutput{})
	pulumi.RegisterOutputType(ServerlessEndpointCapacityReservationOutput{})
	pulumi.RegisterOutputType(ServerlessEndpointCapacityReservationPtrOutput{})
	pulumi.RegisterOutputType(ServerlessEndpointCapacityReservationResponseOutput{})
	pulumi.RegisterOutputType(ServerlessEndpointCapacityReservationResponsePtrOutput{})
	pulumi.RegisterOutputType(ServerlessEndpointResponseOutput{})
	pulumi.RegisterOutputType(ServerlessInferenceEndpointResponseOutput{})
	pulumi.RegisterOutputType(ServerlessOfferOutput{})
	pulumi.RegisterOutputType(ServerlessOfferPtrOutput{})
	pulumi.RegisterOutputType(ServerlessOfferResponseOutput{})
	pulumi.RegisterOutputType(ServerlessOfferResponsePtrOutput{})
	pulumi.RegisterOutputType(ServiceManagedResourcesSettingsOutput{})
	pulumi.RegisterOutputType(ServiceManagedResourcesSettingsPtrOutput{})
	pulumi.RegisterOutputType(ServiceManagedResourcesSettingsResponseOutput{})
	pulumi.RegisterOutputType(ServiceManagedResourcesSettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(SharedPrivateLinkResourceOutput{})
	pulumi.RegisterOutputType(SharedPrivateLinkResourceArrayOutput{})
	pulumi.RegisterOutputType(SharedPrivateLinkResourceResponseOutput{})
	pulumi.RegisterOutputType(SharedPrivateLinkResourceResponseArrayOutput{})
	pulumi.RegisterOutputType(SkuOutput{})
	pulumi.RegisterOutputType(SkuPtrOutput{})
	pulumi.RegisterOutputType(SkuResponseOutput{})
	pulumi.RegisterOutputType(SkuResponsePtrOutput{})
	pulumi.RegisterOutputType(StatusMessageResponseOutput{})
	pulumi.RegisterOutputType(StatusMessageResponseArrayOutput{})
	pulumi.RegisterOutputType(StorageAccountDetailsOutput{})
	pulumi.RegisterOutputType(StorageAccountDetailsArrayOutput{})
	pulumi.RegisterOutputType(StorageAccountDetailsResponseOutput{})
	pulumi.RegisterOutputType(StorageAccountDetailsResponseArrayOutput{})
	pulumi.RegisterOutputType(SystemCreatedAcrAccountOutput{})
	pulumi.RegisterOutputType(SystemCreatedAcrAccountPtrOutput{})
	pulumi.RegisterOutputType(SystemCreatedAcrAccountResponseOutput{})
	pulumi.RegisterOutputType(SystemCreatedAcrAccountResponsePtrOutput{})
	pulumi.RegisterOutputType(SystemCreatedStorageAccountOutput{})
	pulumi.RegisterOutputType(SystemCreatedStorageAccountPtrOutput{})
	pulumi.RegisterOutputType(SystemCreatedStorageAccountResponseOutput{})
	pulumi.RegisterOutputType(SystemCreatedStorageAccountResponsePtrOutput{})
	pulumi.RegisterOutputType(SystemDataResponseOutput{})
	pulumi.RegisterOutputType(UserAssignedIdentityResponseOutput{})
	pulumi.RegisterOutputType(UserAssignedIdentityResponseMapOutput{})
	pulumi.RegisterOutputType(UserCreatedAcrAccountOutput{})
	pulumi.RegisterOutputType(UserCreatedAcrAccountPtrOutput{})
	pulumi.RegisterOutputType(UserCreatedAcrAccountResponseOutput{})
	pulumi.RegisterOutputType(UserCreatedAcrAccountResponsePtrOutput{})
	pulumi.RegisterOutputType(UserCreatedStorageAccountOutput{})
	pulumi.RegisterOutputType(UserCreatedStorageAccountPtrOutput{})
	pulumi.RegisterOutputType(UserCreatedStorageAccountResponseOutput{})
	pulumi.RegisterOutputType(UserCreatedStorageAccountResponsePtrOutput{})
	pulumi.RegisterOutputType(VirtualMachineSizeResponseOutput{})
	pulumi.RegisterOutputType(VirtualMachineSizeResponseArrayOutput{})
	pulumi.RegisterOutputType(WorkspaceHubConfigOutput{})
	pulumi.RegisterOutputType(WorkspaceHubConfigPtrOutput{})
	pulumi.RegisterOutputType(WorkspaceHubConfigResponseOutput{})
	pulumi.RegisterOutputType(WorkspaceHubConfigResponsePtrOutput{})
	pulumi.RegisterOutputType(WorkspacePrivateEndpointResourceResponseOutput{})
	pulumi.RegisterOutputType(WorkspacePrivateEndpointResourceResponsePtrOutput{})
}
