// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package machinelearningservices

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v3/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Get the details (e.g IP address, port etc) of all the compute nodes in the compute.
//
// Uses Azure REST API version 2024-10-01.
//
// Other available API versions: 2021-03-01-preview, 2021-07-01, 2022-01-01-preview, 2022-02-01-preview, 2022-05-01, 2022-06-01-preview, 2022-10-01, 2022-10-01-preview, 2022-12-01-preview, 2023-02-01-preview, 2023-04-01, 2023-04-01-preview, 2023-06-01-preview, 2023-08-01-preview, 2023-10-01, 2024-01-01-preview, 2024-04-01, 2024-07-01-preview, 2024-10-01-preview, 2025-01-01-preview. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native machinelearningservices [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
func ListComputeNodes(ctx *pulumi.Context, args *ListComputeNodesArgs, opts ...pulumi.InvokeOption) (*ListComputeNodesResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv ListComputeNodesResult
	err := ctx.Invoke("azure-native:machinelearningservices:listComputeNodes", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type ListComputeNodesArgs struct {
	// Name of the Azure Machine Learning compute.
	ComputeName string `pulumi:"computeName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Name of Azure Machine Learning workspace.
	WorkspaceName string `pulumi:"workspaceName"`
}

// Result of AmlCompute Nodes
type ListComputeNodesResult struct {
	// The continuation token.
	NextLink string `pulumi:"nextLink"`
	// The collection of returned AmlCompute nodes details.
	Nodes []AmlComputeNodeInformationResponse `pulumi:"nodes"`
}

func ListComputeNodesOutput(ctx *pulumi.Context, args ListComputeNodesOutputArgs, opts ...pulumi.InvokeOption) ListComputeNodesResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (ListComputeNodesResultOutput, error) {
			args := v.(ListComputeNodesArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: utilities.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("azure-native:machinelearningservices:listComputeNodes", args, ListComputeNodesResultOutput{}, options).(ListComputeNodesResultOutput), nil
		}).(ListComputeNodesResultOutput)
}

type ListComputeNodesOutputArgs struct {
	// Name of the Azure Machine Learning compute.
	ComputeName pulumi.StringInput `pulumi:"computeName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
	// Name of Azure Machine Learning workspace.
	WorkspaceName pulumi.StringInput `pulumi:"workspaceName"`
}

func (ListComputeNodesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ListComputeNodesArgs)(nil)).Elem()
}

// Result of AmlCompute Nodes
type ListComputeNodesResultOutput struct{ *pulumi.OutputState }

func (ListComputeNodesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListComputeNodesResult)(nil)).Elem()
}

func (o ListComputeNodesResultOutput) ToListComputeNodesResultOutput() ListComputeNodesResultOutput {
	return o
}

func (o ListComputeNodesResultOutput) ToListComputeNodesResultOutputWithContext(ctx context.Context) ListComputeNodesResultOutput {
	return o
}

// The continuation token.
func (o ListComputeNodesResultOutput) NextLink() pulumi.StringOutput {
	return o.ApplyT(func(v ListComputeNodesResult) string { return v.NextLink }).(pulumi.StringOutput)
}

// The collection of returned AmlCompute nodes details.
func (o ListComputeNodesResultOutput) Nodes() AmlComputeNodeInformationResponseArrayOutput {
	return o.ApplyT(func(v ListComputeNodesResult) []AmlComputeNodeInformationResponse { return v.Nodes }).(AmlComputeNodeInformationResponseArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(ListComputeNodesResultOutput{})
}
