// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20220101preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Allow a soft deleted workspace to be recovered
type AllowRecoverSoftDeletedWorkspace string

const (
	AllowRecoverSoftDeletedWorkspaceTrue  = AllowRecoverSoftDeletedWorkspace("True")
	AllowRecoverSoftDeletedWorkspaceFalse = AllowRecoverSoftDeletedWorkspace("False")
)

func (AllowRecoverSoftDeletedWorkspace) ElementType() reflect.Type {
	return reflect.TypeOf((*AllowRecoverSoftDeletedWorkspace)(nil)).Elem()
}

func (e AllowRecoverSoftDeletedWorkspace) ToAllowRecoverSoftDeletedWorkspaceOutput() AllowRecoverSoftDeletedWorkspaceOutput {
	return pulumi.ToOutput(e).(AllowRecoverSoftDeletedWorkspaceOutput)
}

func (e AllowRecoverSoftDeletedWorkspace) ToAllowRecoverSoftDeletedWorkspaceOutputWithContext(ctx context.Context) AllowRecoverSoftDeletedWorkspaceOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AllowRecoverSoftDeletedWorkspaceOutput)
}

func (e AllowRecoverSoftDeletedWorkspace) ToAllowRecoverSoftDeletedWorkspacePtrOutput() AllowRecoverSoftDeletedWorkspacePtrOutput {
	return e.ToAllowRecoverSoftDeletedWorkspacePtrOutputWithContext(context.Background())
}

func (e AllowRecoverSoftDeletedWorkspace) ToAllowRecoverSoftDeletedWorkspacePtrOutputWithContext(ctx context.Context) AllowRecoverSoftDeletedWorkspacePtrOutput {
	return AllowRecoverSoftDeletedWorkspace(e).ToAllowRecoverSoftDeletedWorkspaceOutputWithContext(ctx).ToAllowRecoverSoftDeletedWorkspacePtrOutputWithContext(ctx)
}

func (e AllowRecoverSoftDeletedWorkspace) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AllowRecoverSoftDeletedWorkspace) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AllowRecoverSoftDeletedWorkspace) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AllowRecoverSoftDeletedWorkspace) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AllowRecoverSoftDeletedWorkspaceOutput struct{ *pulumi.OutputState }

func (AllowRecoverSoftDeletedWorkspaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AllowRecoverSoftDeletedWorkspace)(nil)).Elem()
}

func (o AllowRecoverSoftDeletedWorkspaceOutput) ToAllowRecoverSoftDeletedWorkspaceOutput() AllowRecoverSoftDeletedWorkspaceOutput {
	return o
}

func (o AllowRecoverSoftDeletedWorkspaceOutput) ToAllowRecoverSoftDeletedWorkspaceOutputWithContext(ctx context.Context) AllowRecoverSoftDeletedWorkspaceOutput {
	return o
}

func (o AllowRecoverSoftDeletedWorkspaceOutput) ToAllowRecoverSoftDeletedWorkspacePtrOutput() AllowRecoverSoftDeletedWorkspacePtrOutput {
	return o.ToAllowRecoverSoftDeletedWorkspacePtrOutputWithContext(context.Background())
}

func (o AllowRecoverSoftDeletedWorkspaceOutput) ToAllowRecoverSoftDeletedWorkspacePtrOutputWithContext(ctx context.Context) AllowRecoverSoftDeletedWorkspacePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AllowRecoverSoftDeletedWorkspace) *AllowRecoverSoftDeletedWorkspace {
		return &v
	}).(AllowRecoverSoftDeletedWorkspacePtrOutput)
}

func (o AllowRecoverSoftDeletedWorkspaceOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AllowRecoverSoftDeletedWorkspaceOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AllowRecoverSoftDeletedWorkspace) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AllowRecoverSoftDeletedWorkspaceOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AllowRecoverSoftDeletedWorkspaceOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AllowRecoverSoftDeletedWorkspace) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AllowRecoverSoftDeletedWorkspacePtrOutput struct{ *pulumi.OutputState }

func (AllowRecoverSoftDeletedWorkspacePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AllowRecoverSoftDeletedWorkspace)(nil)).Elem()
}

func (o AllowRecoverSoftDeletedWorkspacePtrOutput) ToAllowRecoverSoftDeletedWorkspacePtrOutput() AllowRecoverSoftDeletedWorkspacePtrOutput {
	return o
}

func (o AllowRecoverSoftDeletedWorkspacePtrOutput) ToAllowRecoverSoftDeletedWorkspacePtrOutputWithContext(ctx context.Context) AllowRecoverSoftDeletedWorkspacePtrOutput {
	return o
}

func (o AllowRecoverSoftDeletedWorkspacePtrOutput) Elem() AllowRecoverSoftDeletedWorkspaceOutput {
	return o.ApplyT(func(v *AllowRecoverSoftDeletedWorkspace) AllowRecoverSoftDeletedWorkspace {
		if v != nil {
			return *v
		}
		var ret AllowRecoverSoftDeletedWorkspace
		return ret
	}).(AllowRecoverSoftDeletedWorkspaceOutput)
}

func (o AllowRecoverSoftDeletedWorkspacePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AllowRecoverSoftDeletedWorkspacePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AllowRecoverSoftDeletedWorkspace) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AllowRecoverSoftDeletedWorkspaceInput is an input type that accepts values of the AllowRecoverSoftDeletedWorkspace enum
// A concrete instance of `AllowRecoverSoftDeletedWorkspaceInput` can be one of the following:
//
//	AllowRecoverSoftDeletedWorkspaceTrue
//	AllowRecoverSoftDeletedWorkspaceFalse
type AllowRecoverSoftDeletedWorkspaceInput interface {
	pulumi.Input

	ToAllowRecoverSoftDeletedWorkspaceOutput() AllowRecoverSoftDeletedWorkspaceOutput
	ToAllowRecoverSoftDeletedWorkspaceOutputWithContext(context.Context) AllowRecoverSoftDeletedWorkspaceOutput
}

var allowRecoverSoftDeletedWorkspacePtrType = reflect.TypeOf((**AllowRecoverSoftDeletedWorkspace)(nil)).Elem()

type AllowRecoverSoftDeletedWorkspacePtrInput interface {
	pulumi.Input

	ToAllowRecoverSoftDeletedWorkspacePtrOutput() AllowRecoverSoftDeletedWorkspacePtrOutput
	ToAllowRecoverSoftDeletedWorkspacePtrOutputWithContext(context.Context) AllowRecoverSoftDeletedWorkspacePtrOutput
}

type allowRecoverSoftDeletedWorkspacePtr string

func AllowRecoverSoftDeletedWorkspacePtr(v string) AllowRecoverSoftDeletedWorkspacePtrInput {
	return (*allowRecoverSoftDeletedWorkspacePtr)(&v)
}

func (*allowRecoverSoftDeletedWorkspacePtr) ElementType() reflect.Type {
	return allowRecoverSoftDeletedWorkspacePtrType
}

func (in *allowRecoverSoftDeletedWorkspacePtr) ToAllowRecoverSoftDeletedWorkspacePtrOutput() AllowRecoverSoftDeletedWorkspacePtrOutput {
	return pulumi.ToOutput(in).(AllowRecoverSoftDeletedWorkspacePtrOutput)
}

func (in *allowRecoverSoftDeletedWorkspacePtr) ToAllowRecoverSoftDeletedWorkspacePtrOutputWithContext(ctx context.Context) AllowRecoverSoftDeletedWorkspacePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AllowRecoverSoftDeletedWorkspacePtrOutput)
}

// Policy for sharing applications on this compute instance among users of parent workspace. If Personal, only the creator can access applications on this compute instance. When Shared, any workspace user can access applications on this instance depending on his/her assigned role.
type ApplicationSharingPolicy string

const (
	ApplicationSharingPolicyPersonal = ApplicationSharingPolicy("Personal")
	ApplicationSharingPolicyShared   = ApplicationSharingPolicy("Shared")
)

func (ApplicationSharingPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationSharingPolicy)(nil)).Elem()
}

func (e ApplicationSharingPolicy) ToApplicationSharingPolicyOutput() ApplicationSharingPolicyOutput {
	return pulumi.ToOutput(e).(ApplicationSharingPolicyOutput)
}

func (e ApplicationSharingPolicy) ToApplicationSharingPolicyOutputWithContext(ctx context.Context) ApplicationSharingPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ApplicationSharingPolicyOutput)
}

func (e ApplicationSharingPolicy) ToApplicationSharingPolicyPtrOutput() ApplicationSharingPolicyPtrOutput {
	return e.ToApplicationSharingPolicyPtrOutputWithContext(context.Background())
}

func (e ApplicationSharingPolicy) ToApplicationSharingPolicyPtrOutputWithContext(ctx context.Context) ApplicationSharingPolicyPtrOutput {
	return ApplicationSharingPolicy(e).ToApplicationSharingPolicyOutputWithContext(ctx).ToApplicationSharingPolicyPtrOutputWithContext(ctx)
}

func (e ApplicationSharingPolicy) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ApplicationSharingPolicy) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ApplicationSharingPolicy) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ApplicationSharingPolicy) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ApplicationSharingPolicyOutput struct{ *pulumi.OutputState }

func (ApplicationSharingPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationSharingPolicy)(nil)).Elem()
}

func (o ApplicationSharingPolicyOutput) ToApplicationSharingPolicyOutput() ApplicationSharingPolicyOutput {
	return o
}

func (o ApplicationSharingPolicyOutput) ToApplicationSharingPolicyOutputWithContext(ctx context.Context) ApplicationSharingPolicyOutput {
	return o
}

func (o ApplicationSharingPolicyOutput) ToApplicationSharingPolicyPtrOutput() ApplicationSharingPolicyPtrOutput {
	return o.ToApplicationSharingPolicyPtrOutputWithContext(context.Background())
}

func (o ApplicationSharingPolicyOutput) ToApplicationSharingPolicyPtrOutputWithContext(ctx context.Context) ApplicationSharingPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApplicationSharingPolicy) *ApplicationSharingPolicy {
		return &v
	}).(ApplicationSharingPolicyPtrOutput)
}

func (o ApplicationSharingPolicyOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ApplicationSharingPolicyOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ApplicationSharingPolicy) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ApplicationSharingPolicyOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ApplicationSharingPolicyOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ApplicationSharingPolicy) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ApplicationSharingPolicyPtrOutput struct{ *pulumi.OutputState }

func (ApplicationSharingPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationSharingPolicy)(nil)).Elem()
}

func (o ApplicationSharingPolicyPtrOutput) ToApplicationSharingPolicyPtrOutput() ApplicationSharingPolicyPtrOutput {
	return o
}

func (o ApplicationSharingPolicyPtrOutput) ToApplicationSharingPolicyPtrOutputWithContext(ctx context.Context) ApplicationSharingPolicyPtrOutput {
	return o
}

func (o ApplicationSharingPolicyPtrOutput) Elem() ApplicationSharingPolicyOutput {
	return o.ApplyT(func(v *ApplicationSharingPolicy) ApplicationSharingPolicy {
		if v != nil {
			return *v
		}
		var ret ApplicationSharingPolicy
		return ret
	}).(ApplicationSharingPolicyOutput)
}

func (o ApplicationSharingPolicyPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ApplicationSharingPolicyPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ApplicationSharingPolicy) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ApplicationSharingPolicyInput is an input type that accepts values of the ApplicationSharingPolicy enum
// A concrete instance of `ApplicationSharingPolicyInput` can be one of the following:
//
//	ApplicationSharingPolicyPersonal
//	ApplicationSharingPolicyShared
type ApplicationSharingPolicyInput interface {
	pulumi.Input

	ToApplicationSharingPolicyOutput() ApplicationSharingPolicyOutput
	ToApplicationSharingPolicyOutputWithContext(context.Context) ApplicationSharingPolicyOutput
}

var applicationSharingPolicyPtrType = reflect.TypeOf((**ApplicationSharingPolicy)(nil)).Elem()

type ApplicationSharingPolicyPtrInput interface {
	pulumi.Input

	ToApplicationSharingPolicyPtrOutput() ApplicationSharingPolicyPtrOutput
	ToApplicationSharingPolicyPtrOutputWithContext(context.Context) ApplicationSharingPolicyPtrOutput
}

type applicationSharingPolicyPtr string

func ApplicationSharingPolicyPtr(v string) ApplicationSharingPolicyPtrInput {
	return (*applicationSharingPolicyPtr)(&v)
}

func (*applicationSharingPolicyPtr) ElementType() reflect.Type {
	return applicationSharingPolicyPtrType
}

func (in *applicationSharingPolicyPtr) ToApplicationSharingPolicyPtrOutput() ApplicationSharingPolicyPtrOutput {
	return pulumi.ToOutput(in).(ApplicationSharingPolicyPtrOutput)
}

func (in *applicationSharingPolicyPtr) ToApplicationSharingPolicyPtrOutputWithContext(ctx context.Context) ApplicationSharingPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ApplicationSharingPolicyPtrOutput)
}

// Intended usage of the cluster
type ClusterPurpose string

const (
	ClusterPurposeFastProd  = ClusterPurpose("FastProd")
	ClusterPurposeDenseProd = ClusterPurpose("DenseProd")
	ClusterPurposeDevTest   = ClusterPurpose("DevTest")
)

func (ClusterPurpose) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterPurpose)(nil)).Elem()
}

func (e ClusterPurpose) ToClusterPurposeOutput() ClusterPurposeOutput {
	return pulumi.ToOutput(e).(ClusterPurposeOutput)
}

func (e ClusterPurpose) ToClusterPurposeOutputWithContext(ctx context.Context) ClusterPurposeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ClusterPurposeOutput)
}

func (e ClusterPurpose) ToClusterPurposePtrOutput() ClusterPurposePtrOutput {
	return e.ToClusterPurposePtrOutputWithContext(context.Background())
}

func (e ClusterPurpose) ToClusterPurposePtrOutputWithContext(ctx context.Context) ClusterPurposePtrOutput {
	return ClusterPurpose(e).ToClusterPurposeOutputWithContext(ctx).ToClusterPurposePtrOutputWithContext(ctx)
}

func (e ClusterPurpose) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ClusterPurpose) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ClusterPurpose) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ClusterPurpose) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ClusterPurposeOutput struct{ *pulumi.OutputState }

func (ClusterPurposeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterPurpose)(nil)).Elem()
}

func (o ClusterPurposeOutput) ToClusterPurposeOutput() ClusterPurposeOutput {
	return o
}

func (o ClusterPurposeOutput) ToClusterPurposeOutputWithContext(ctx context.Context) ClusterPurposeOutput {
	return o
}

func (o ClusterPurposeOutput) ToClusterPurposePtrOutput() ClusterPurposePtrOutput {
	return o.ToClusterPurposePtrOutputWithContext(context.Background())
}

func (o ClusterPurposeOutput) ToClusterPurposePtrOutputWithContext(ctx context.Context) ClusterPurposePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterPurpose) *ClusterPurpose {
		return &v
	}).(ClusterPurposePtrOutput)
}

func (o ClusterPurposeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ClusterPurposeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ClusterPurpose) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ClusterPurposeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ClusterPurposeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ClusterPurpose) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ClusterPurposePtrOutput struct{ *pulumi.OutputState }

func (ClusterPurposePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterPurpose)(nil)).Elem()
}

func (o ClusterPurposePtrOutput) ToClusterPurposePtrOutput() ClusterPurposePtrOutput {
	return o
}

func (o ClusterPurposePtrOutput) ToClusterPurposePtrOutputWithContext(ctx context.Context) ClusterPurposePtrOutput {
	return o
}

func (o ClusterPurposePtrOutput) Elem() ClusterPurposeOutput {
	return o.ApplyT(func(v *ClusterPurpose) ClusterPurpose {
		if v != nil {
			return *v
		}
		var ret ClusterPurpose
		return ret
	}).(ClusterPurposeOutput)
}

func (o ClusterPurposePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ClusterPurposePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ClusterPurpose) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ClusterPurposeInput is an input type that accepts values of the ClusterPurpose enum
// A concrete instance of `ClusterPurposeInput` can be one of the following:
//
//	ClusterPurposeFastProd
//	ClusterPurposeDenseProd
//	ClusterPurposeDevTest
type ClusterPurposeInput interface {
	pulumi.Input

	ToClusterPurposeOutput() ClusterPurposeOutput
	ToClusterPurposeOutputWithContext(context.Context) ClusterPurposeOutput
}

var clusterPurposePtrType = reflect.TypeOf((**ClusterPurpose)(nil)).Elem()

type ClusterPurposePtrInput interface {
	pulumi.Input

	ToClusterPurposePtrOutput() ClusterPurposePtrOutput
	ToClusterPurposePtrOutputWithContext(context.Context) ClusterPurposePtrOutput
}

type clusterPurposePtr string

func ClusterPurposePtr(v string) ClusterPurposePtrInput {
	return (*clusterPurposePtr)(&v)
}

func (*clusterPurposePtr) ElementType() reflect.Type {
	return clusterPurposePtrType
}

func (in *clusterPurposePtr) ToClusterPurposePtrOutput() ClusterPurposePtrOutput {
	return pulumi.ToOutput(in).(ClusterPurposePtrOutput)
}

func (in *clusterPurposePtr) ToClusterPurposePtrOutputWithContext(ctx context.Context) ClusterPurposePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ClusterPurposePtrOutput)
}

// The Compute Instance Authorization type. Available values are personal (default).
type ComputeInstanceAuthorizationType string

const (
	ComputeInstanceAuthorizationTypePersonal = ComputeInstanceAuthorizationType("personal")
)

func (ComputeInstanceAuthorizationType) ElementType() reflect.Type {
	return reflect.TypeOf((*ComputeInstanceAuthorizationType)(nil)).Elem()
}

func (e ComputeInstanceAuthorizationType) ToComputeInstanceAuthorizationTypeOutput() ComputeInstanceAuthorizationTypeOutput {
	return pulumi.ToOutput(e).(ComputeInstanceAuthorizationTypeOutput)
}

func (e ComputeInstanceAuthorizationType) ToComputeInstanceAuthorizationTypeOutputWithContext(ctx context.Context) ComputeInstanceAuthorizationTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ComputeInstanceAuthorizationTypeOutput)
}

func (e ComputeInstanceAuthorizationType) ToComputeInstanceAuthorizationTypePtrOutput() ComputeInstanceAuthorizationTypePtrOutput {
	return e.ToComputeInstanceAuthorizationTypePtrOutputWithContext(context.Background())
}

func (e ComputeInstanceAuthorizationType) ToComputeInstanceAuthorizationTypePtrOutputWithContext(ctx context.Context) ComputeInstanceAuthorizationTypePtrOutput {
	return ComputeInstanceAuthorizationType(e).ToComputeInstanceAuthorizationTypeOutputWithContext(ctx).ToComputeInstanceAuthorizationTypePtrOutputWithContext(ctx)
}

func (e ComputeInstanceAuthorizationType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ComputeInstanceAuthorizationType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ComputeInstanceAuthorizationType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ComputeInstanceAuthorizationType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ComputeInstanceAuthorizationTypeOutput struct{ *pulumi.OutputState }

func (ComputeInstanceAuthorizationTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ComputeInstanceAuthorizationType)(nil)).Elem()
}

func (o ComputeInstanceAuthorizationTypeOutput) ToComputeInstanceAuthorizationTypeOutput() ComputeInstanceAuthorizationTypeOutput {
	return o
}

func (o ComputeInstanceAuthorizationTypeOutput) ToComputeInstanceAuthorizationTypeOutputWithContext(ctx context.Context) ComputeInstanceAuthorizationTypeOutput {
	return o
}

func (o ComputeInstanceAuthorizationTypeOutput) ToComputeInstanceAuthorizationTypePtrOutput() ComputeInstanceAuthorizationTypePtrOutput {
	return o.ToComputeInstanceAuthorizationTypePtrOutputWithContext(context.Background())
}

func (o ComputeInstanceAuthorizationTypeOutput) ToComputeInstanceAuthorizationTypePtrOutputWithContext(ctx context.Context) ComputeInstanceAuthorizationTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ComputeInstanceAuthorizationType) *ComputeInstanceAuthorizationType {
		return &v
	}).(ComputeInstanceAuthorizationTypePtrOutput)
}

func (o ComputeInstanceAuthorizationTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ComputeInstanceAuthorizationTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ComputeInstanceAuthorizationType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ComputeInstanceAuthorizationTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ComputeInstanceAuthorizationTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ComputeInstanceAuthorizationType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ComputeInstanceAuthorizationTypePtrOutput struct{ *pulumi.OutputState }

func (ComputeInstanceAuthorizationTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeInstanceAuthorizationType)(nil)).Elem()
}

func (o ComputeInstanceAuthorizationTypePtrOutput) ToComputeInstanceAuthorizationTypePtrOutput() ComputeInstanceAuthorizationTypePtrOutput {
	return o
}

func (o ComputeInstanceAuthorizationTypePtrOutput) ToComputeInstanceAuthorizationTypePtrOutputWithContext(ctx context.Context) ComputeInstanceAuthorizationTypePtrOutput {
	return o
}

func (o ComputeInstanceAuthorizationTypePtrOutput) Elem() ComputeInstanceAuthorizationTypeOutput {
	return o.ApplyT(func(v *ComputeInstanceAuthorizationType) ComputeInstanceAuthorizationType {
		if v != nil {
			return *v
		}
		var ret ComputeInstanceAuthorizationType
		return ret
	}).(ComputeInstanceAuthorizationTypeOutput)
}

func (o ComputeInstanceAuthorizationTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ComputeInstanceAuthorizationTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ComputeInstanceAuthorizationType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ComputeInstanceAuthorizationTypeInput is an input type that accepts values of the ComputeInstanceAuthorizationType enum
// A concrete instance of `ComputeInstanceAuthorizationTypeInput` can be one of the following:
//
//	ComputeInstanceAuthorizationTypePersonal
type ComputeInstanceAuthorizationTypeInput interface {
	pulumi.Input

	ToComputeInstanceAuthorizationTypeOutput() ComputeInstanceAuthorizationTypeOutput
	ToComputeInstanceAuthorizationTypeOutputWithContext(context.Context) ComputeInstanceAuthorizationTypeOutput
}

var computeInstanceAuthorizationTypePtrType = reflect.TypeOf((**ComputeInstanceAuthorizationType)(nil)).Elem()

type ComputeInstanceAuthorizationTypePtrInput interface {
	pulumi.Input

	ToComputeInstanceAuthorizationTypePtrOutput() ComputeInstanceAuthorizationTypePtrOutput
	ToComputeInstanceAuthorizationTypePtrOutputWithContext(context.Context) ComputeInstanceAuthorizationTypePtrOutput
}

type computeInstanceAuthorizationTypePtr string

func ComputeInstanceAuthorizationTypePtr(v string) ComputeInstanceAuthorizationTypePtrInput {
	return (*computeInstanceAuthorizationTypePtr)(&v)
}

func (*computeInstanceAuthorizationTypePtr) ElementType() reflect.Type {
	return computeInstanceAuthorizationTypePtrType
}

func (in *computeInstanceAuthorizationTypePtr) ToComputeInstanceAuthorizationTypePtrOutput() ComputeInstanceAuthorizationTypePtrOutput {
	return pulumi.ToOutput(in).(ComputeInstanceAuthorizationTypePtrOutput)
}

func (in *computeInstanceAuthorizationTypePtr) ToComputeInstanceAuthorizationTypePtrOutputWithContext(ctx context.Context) ComputeInstanceAuthorizationTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ComputeInstanceAuthorizationTypePtrOutput)
}

// The type of compute
type ComputeType string

const (
	ComputeTypeAKS               = ComputeType("AKS")
	ComputeTypeKubernetes        = ComputeType("Kubernetes")
	ComputeTypeAmlCompute        = ComputeType("AmlCompute")
	ComputeTypeComputeInstance   = ComputeType("ComputeInstance")
	ComputeTypeDataFactory       = ComputeType("DataFactory")
	ComputeTypeVirtualMachine    = ComputeType("VirtualMachine")
	ComputeTypeHDInsight         = ComputeType("HDInsight")
	ComputeTypeDatabricks        = ComputeType("Databricks")
	ComputeTypeDataLakeAnalytics = ComputeType("DataLakeAnalytics")
	ComputeTypeSynapseSpark      = ComputeType("SynapseSpark")
)

// Indicates whether or not the encryption is enabled for the workspace.
type EncryptionStatus string

const (
	EncryptionStatusEnabled  = EncryptionStatus("Enabled")
	EncryptionStatusDisabled = EncryptionStatus("Disabled")
)

func (EncryptionStatus) ElementType() reflect.Type {
	return reflect.TypeOf((*EncryptionStatus)(nil)).Elem()
}

func (e EncryptionStatus) ToEncryptionStatusOutput() EncryptionStatusOutput {
	return pulumi.ToOutput(e).(EncryptionStatusOutput)
}

func (e EncryptionStatus) ToEncryptionStatusOutputWithContext(ctx context.Context) EncryptionStatusOutput {
	return pulumi.ToOutputWithContext(ctx, e).(EncryptionStatusOutput)
}

func (e EncryptionStatus) ToEncryptionStatusPtrOutput() EncryptionStatusPtrOutput {
	return e.ToEncryptionStatusPtrOutputWithContext(context.Background())
}

func (e EncryptionStatus) ToEncryptionStatusPtrOutputWithContext(ctx context.Context) EncryptionStatusPtrOutput {
	return EncryptionStatus(e).ToEncryptionStatusOutputWithContext(ctx).ToEncryptionStatusPtrOutputWithContext(ctx)
}

func (e EncryptionStatus) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e EncryptionStatus) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e EncryptionStatus) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e EncryptionStatus) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type EncryptionStatusOutput struct{ *pulumi.OutputState }

func (EncryptionStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EncryptionStatus)(nil)).Elem()
}

func (o EncryptionStatusOutput) ToEncryptionStatusOutput() EncryptionStatusOutput {
	return o
}

func (o EncryptionStatusOutput) ToEncryptionStatusOutputWithContext(ctx context.Context) EncryptionStatusOutput {
	return o
}

func (o EncryptionStatusOutput) ToEncryptionStatusPtrOutput() EncryptionStatusPtrOutput {
	return o.ToEncryptionStatusPtrOutputWithContext(context.Background())
}

func (o EncryptionStatusOutput) ToEncryptionStatusPtrOutputWithContext(ctx context.Context) EncryptionStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EncryptionStatus) *EncryptionStatus {
		return &v
	}).(EncryptionStatusPtrOutput)
}

func (o EncryptionStatusOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o EncryptionStatusOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e EncryptionStatus) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o EncryptionStatusOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o EncryptionStatusOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e EncryptionStatus) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type EncryptionStatusPtrOutput struct{ *pulumi.OutputState }

func (EncryptionStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EncryptionStatus)(nil)).Elem()
}

func (o EncryptionStatusPtrOutput) ToEncryptionStatusPtrOutput() EncryptionStatusPtrOutput {
	return o
}

func (o EncryptionStatusPtrOutput) ToEncryptionStatusPtrOutputWithContext(ctx context.Context) EncryptionStatusPtrOutput {
	return o
}

func (o EncryptionStatusPtrOutput) Elem() EncryptionStatusOutput {
	return o.ApplyT(func(v *EncryptionStatus) EncryptionStatus {
		if v != nil {
			return *v
		}
		var ret EncryptionStatus
		return ret
	}).(EncryptionStatusOutput)
}

func (o EncryptionStatusPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o EncryptionStatusPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *EncryptionStatus) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// EncryptionStatusInput is an input type that accepts values of the EncryptionStatus enum
// A concrete instance of `EncryptionStatusInput` can be one of the following:
//
//	EncryptionStatusEnabled
//	EncryptionStatusDisabled
type EncryptionStatusInput interface {
	pulumi.Input

	ToEncryptionStatusOutput() EncryptionStatusOutput
	ToEncryptionStatusOutputWithContext(context.Context) EncryptionStatusOutput
}

var encryptionStatusPtrType = reflect.TypeOf((**EncryptionStatus)(nil)).Elem()

type EncryptionStatusPtrInput interface {
	pulumi.Input

	ToEncryptionStatusPtrOutput() EncryptionStatusPtrOutput
	ToEncryptionStatusPtrOutputWithContext(context.Context) EncryptionStatusPtrOutput
}

type encryptionStatusPtr string

func EncryptionStatusPtr(v string) EncryptionStatusPtrInput {
	return (*encryptionStatusPtr)(&v)
}

func (*encryptionStatusPtr) ElementType() reflect.Type {
	return encryptionStatusPtrType
}

func (in *encryptionStatusPtr) ToEncryptionStatusPtrOutput() EncryptionStatusPtrOutput {
	return pulumi.ToOutput(in).(EncryptionStatusPtrOutput)
}

func (in *encryptionStatusPtr) ToEncryptionStatusPtrOutputWithContext(ctx context.Context) EncryptionStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(EncryptionStatusPtrOutput)
}

// Load Balancer Type
type LoadBalancerType string

const (
	LoadBalancerTypePublicIp             = LoadBalancerType("PublicIp")
	LoadBalancerTypeInternalLoadBalancer = LoadBalancerType("InternalLoadBalancer")
)

func (LoadBalancerType) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancerType)(nil)).Elem()
}

func (e LoadBalancerType) ToLoadBalancerTypeOutput() LoadBalancerTypeOutput {
	return pulumi.ToOutput(e).(LoadBalancerTypeOutput)
}

func (e LoadBalancerType) ToLoadBalancerTypeOutputWithContext(ctx context.Context) LoadBalancerTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(LoadBalancerTypeOutput)
}

func (e LoadBalancerType) ToLoadBalancerTypePtrOutput() LoadBalancerTypePtrOutput {
	return e.ToLoadBalancerTypePtrOutputWithContext(context.Background())
}

func (e LoadBalancerType) ToLoadBalancerTypePtrOutputWithContext(ctx context.Context) LoadBalancerTypePtrOutput {
	return LoadBalancerType(e).ToLoadBalancerTypeOutputWithContext(ctx).ToLoadBalancerTypePtrOutputWithContext(ctx)
}

func (e LoadBalancerType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e LoadBalancerType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e LoadBalancerType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e LoadBalancerType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type LoadBalancerTypeOutput struct{ *pulumi.OutputState }

func (LoadBalancerTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancerType)(nil)).Elem()
}

func (o LoadBalancerTypeOutput) ToLoadBalancerTypeOutput() LoadBalancerTypeOutput {
	return o
}

func (o LoadBalancerTypeOutput) ToLoadBalancerTypeOutputWithContext(ctx context.Context) LoadBalancerTypeOutput {
	return o
}

func (o LoadBalancerTypeOutput) ToLoadBalancerTypePtrOutput() LoadBalancerTypePtrOutput {
	return o.ToLoadBalancerTypePtrOutputWithContext(context.Background())
}

func (o LoadBalancerTypeOutput) ToLoadBalancerTypePtrOutputWithContext(ctx context.Context) LoadBalancerTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LoadBalancerType) *LoadBalancerType {
		return &v
	}).(LoadBalancerTypePtrOutput)
}

func (o LoadBalancerTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o LoadBalancerTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e LoadBalancerType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o LoadBalancerTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o LoadBalancerTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e LoadBalancerType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type LoadBalancerTypePtrOutput struct{ *pulumi.OutputState }

func (LoadBalancerTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LoadBalancerType)(nil)).Elem()
}

func (o LoadBalancerTypePtrOutput) ToLoadBalancerTypePtrOutput() LoadBalancerTypePtrOutput {
	return o
}

func (o LoadBalancerTypePtrOutput) ToLoadBalancerTypePtrOutputWithContext(ctx context.Context) LoadBalancerTypePtrOutput {
	return o
}

func (o LoadBalancerTypePtrOutput) Elem() LoadBalancerTypeOutput {
	return o.ApplyT(func(v *LoadBalancerType) LoadBalancerType {
		if v != nil {
			return *v
		}
		var ret LoadBalancerType
		return ret
	}).(LoadBalancerTypeOutput)
}

func (o LoadBalancerTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o LoadBalancerTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *LoadBalancerType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// LoadBalancerTypeInput is an input type that accepts values of the LoadBalancerType enum
// A concrete instance of `LoadBalancerTypeInput` can be one of the following:
//
//	LoadBalancerTypePublicIp
//	LoadBalancerTypeInternalLoadBalancer
type LoadBalancerTypeInput interface {
	pulumi.Input

	ToLoadBalancerTypeOutput() LoadBalancerTypeOutput
	ToLoadBalancerTypeOutputWithContext(context.Context) LoadBalancerTypeOutput
}

var loadBalancerTypePtrType = reflect.TypeOf((**LoadBalancerType)(nil)).Elem()

type LoadBalancerTypePtrInput interface {
	pulumi.Input

	ToLoadBalancerTypePtrOutput() LoadBalancerTypePtrOutput
	ToLoadBalancerTypePtrOutputWithContext(context.Context) LoadBalancerTypePtrOutput
}

type loadBalancerTypePtr string

func LoadBalancerTypePtr(v string) LoadBalancerTypePtrInput {
	return (*loadBalancerTypePtr)(&v)
}

func (*loadBalancerTypePtr) ElementType() reflect.Type {
	return loadBalancerTypePtrType
}

func (in *loadBalancerTypePtr) ToLoadBalancerTypePtrOutput() LoadBalancerTypePtrOutput {
	return pulumi.ToOutput(in).(LoadBalancerTypePtrOutput)
}

func (in *loadBalancerTypePtr) ToLoadBalancerTypePtrOutputWithContext(ctx context.Context) LoadBalancerTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(LoadBalancerTypePtrOutput)
}

// Compute OS Type
type OsType string

const (
	OsTypeLinux   = OsType("Linux")
	OsTypeWindows = OsType("Windows")
)

func (OsType) ElementType() reflect.Type {
	return reflect.TypeOf((*OsType)(nil)).Elem()
}

func (e OsType) ToOsTypeOutput() OsTypeOutput {
	return pulumi.ToOutput(e).(OsTypeOutput)
}

func (e OsType) ToOsTypeOutputWithContext(ctx context.Context) OsTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(OsTypeOutput)
}

func (e OsType) ToOsTypePtrOutput() OsTypePtrOutput {
	return e.ToOsTypePtrOutputWithContext(context.Background())
}

func (e OsType) ToOsTypePtrOutputWithContext(ctx context.Context) OsTypePtrOutput {
	return OsType(e).ToOsTypeOutputWithContext(ctx).ToOsTypePtrOutputWithContext(ctx)
}

func (e OsType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e OsType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e OsType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e OsType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type OsTypeOutput struct{ *pulumi.OutputState }

func (OsTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OsType)(nil)).Elem()
}

func (o OsTypeOutput) ToOsTypeOutput() OsTypeOutput {
	return o
}

func (o OsTypeOutput) ToOsTypeOutputWithContext(ctx context.Context) OsTypeOutput {
	return o
}

func (o OsTypeOutput) ToOsTypePtrOutput() OsTypePtrOutput {
	return o.ToOsTypePtrOutputWithContext(context.Background())
}

func (o OsTypeOutput) ToOsTypePtrOutputWithContext(ctx context.Context) OsTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OsType) *OsType {
		return &v
	}).(OsTypePtrOutput)
}

func (o OsTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o OsTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e OsType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o OsTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o OsTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e OsType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type OsTypePtrOutput struct{ *pulumi.OutputState }

func (OsTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OsType)(nil)).Elem()
}

func (o OsTypePtrOutput) ToOsTypePtrOutput() OsTypePtrOutput {
	return o
}

func (o OsTypePtrOutput) ToOsTypePtrOutputWithContext(ctx context.Context) OsTypePtrOutput {
	return o
}

func (o OsTypePtrOutput) Elem() OsTypeOutput {
	return o.ApplyT(func(v *OsType) OsType {
		if v != nil {
			return *v
		}
		var ret OsType
		return ret
	}).(OsTypeOutput)
}

func (o OsTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o OsTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *OsType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// OsTypeInput is an input type that accepts values of the OsType enum
// A concrete instance of `OsTypeInput` can be one of the following:
//
//	OsTypeLinux
//	OsTypeWindows
type OsTypeInput interface {
	pulumi.Input

	ToOsTypeOutput() OsTypeOutput
	ToOsTypeOutputWithContext(context.Context) OsTypeOutput
}

var osTypePtrType = reflect.TypeOf((**OsType)(nil)).Elem()

type OsTypePtrInput interface {
	pulumi.Input

	ToOsTypePtrOutput() OsTypePtrOutput
	ToOsTypePtrOutputWithContext(context.Context) OsTypePtrOutput
}

type osTypePtr string

func OsTypePtr(v string) OsTypePtrInput {
	return (*osTypePtr)(&v)
}

func (*osTypePtr) ElementType() reflect.Type {
	return osTypePtrType
}

func (in *osTypePtr) ToOsTypePtrOutput() OsTypePtrOutput {
	return pulumi.ToOutput(in).(OsTypePtrOutput)
}

func (in *osTypePtr) ToOsTypePtrOutputWithContext(ctx context.Context) OsTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(OsTypePtrOutput)
}

// Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
type PrivateEndpointServiceConnectionStatus string

const (
	PrivateEndpointServiceConnectionStatusPending      = PrivateEndpointServiceConnectionStatus("Pending")
	PrivateEndpointServiceConnectionStatusApproved     = PrivateEndpointServiceConnectionStatus("Approved")
	PrivateEndpointServiceConnectionStatusRejected     = PrivateEndpointServiceConnectionStatus("Rejected")
	PrivateEndpointServiceConnectionStatusDisconnected = PrivateEndpointServiceConnectionStatus("Disconnected")
	PrivateEndpointServiceConnectionStatusTimeout      = PrivateEndpointServiceConnectionStatus("Timeout")
)

func (PrivateEndpointServiceConnectionStatus) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateEndpointServiceConnectionStatus)(nil)).Elem()
}

func (e PrivateEndpointServiceConnectionStatus) ToPrivateEndpointServiceConnectionStatusOutput() PrivateEndpointServiceConnectionStatusOutput {
	return pulumi.ToOutput(e).(PrivateEndpointServiceConnectionStatusOutput)
}

func (e PrivateEndpointServiceConnectionStatus) ToPrivateEndpointServiceConnectionStatusOutputWithContext(ctx context.Context) PrivateEndpointServiceConnectionStatusOutput {
	return pulumi.ToOutputWithContext(ctx, e).(PrivateEndpointServiceConnectionStatusOutput)
}

func (e PrivateEndpointServiceConnectionStatus) ToPrivateEndpointServiceConnectionStatusPtrOutput() PrivateEndpointServiceConnectionStatusPtrOutput {
	return e.ToPrivateEndpointServiceConnectionStatusPtrOutputWithContext(context.Background())
}

func (e PrivateEndpointServiceConnectionStatus) ToPrivateEndpointServiceConnectionStatusPtrOutputWithContext(ctx context.Context) PrivateEndpointServiceConnectionStatusPtrOutput {
	return PrivateEndpointServiceConnectionStatus(e).ToPrivateEndpointServiceConnectionStatusOutputWithContext(ctx).ToPrivateEndpointServiceConnectionStatusPtrOutputWithContext(ctx)
}

func (e PrivateEndpointServiceConnectionStatus) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e PrivateEndpointServiceConnectionStatus) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e PrivateEndpointServiceConnectionStatus) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e PrivateEndpointServiceConnectionStatus) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type PrivateEndpointServiceConnectionStatusOutput struct{ *pulumi.OutputState }

func (PrivateEndpointServiceConnectionStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateEndpointServiceConnectionStatus)(nil)).Elem()
}

func (o PrivateEndpointServiceConnectionStatusOutput) ToPrivateEndpointServiceConnectionStatusOutput() PrivateEndpointServiceConnectionStatusOutput {
	return o
}

func (o PrivateEndpointServiceConnectionStatusOutput) ToPrivateEndpointServiceConnectionStatusOutputWithContext(ctx context.Context) PrivateEndpointServiceConnectionStatusOutput {
	return o
}

func (o PrivateEndpointServiceConnectionStatusOutput) ToPrivateEndpointServiceConnectionStatusPtrOutput() PrivateEndpointServiceConnectionStatusPtrOutput {
	return o.ToPrivateEndpointServiceConnectionStatusPtrOutputWithContext(context.Background())
}

func (o PrivateEndpointServiceConnectionStatusOutput) ToPrivateEndpointServiceConnectionStatusPtrOutputWithContext(ctx context.Context) PrivateEndpointServiceConnectionStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PrivateEndpointServiceConnectionStatus) *PrivateEndpointServiceConnectionStatus {
		return &v
	}).(PrivateEndpointServiceConnectionStatusPtrOutput)
}

func (o PrivateEndpointServiceConnectionStatusOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o PrivateEndpointServiceConnectionStatusOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PrivateEndpointServiceConnectionStatus) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o PrivateEndpointServiceConnectionStatusOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PrivateEndpointServiceConnectionStatusOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PrivateEndpointServiceConnectionStatus) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type PrivateEndpointServiceConnectionStatusPtrOutput struct{ *pulumi.OutputState }

func (PrivateEndpointServiceConnectionStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateEndpointServiceConnectionStatus)(nil)).Elem()
}

func (o PrivateEndpointServiceConnectionStatusPtrOutput) ToPrivateEndpointServiceConnectionStatusPtrOutput() PrivateEndpointServiceConnectionStatusPtrOutput {
	return o
}

func (o PrivateEndpointServiceConnectionStatusPtrOutput) ToPrivateEndpointServiceConnectionStatusPtrOutputWithContext(ctx context.Context) PrivateEndpointServiceConnectionStatusPtrOutput {
	return o
}

func (o PrivateEndpointServiceConnectionStatusPtrOutput) Elem() PrivateEndpointServiceConnectionStatusOutput {
	return o.ApplyT(func(v *PrivateEndpointServiceConnectionStatus) PrivateEndpointServiceConnectionStatus {
		if v != nil {
			return *v
		}
		var ret PrivateEndpointServiceConnectionStatus
		return ret
	}).(PrivateEndpointServiceConnectionStatusOutput)
}

func (o PrivateEndpointServiceConnectionStatusPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PrivateEndpointServiceConnectionStatusPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *PrivateEndpointServiceConnectionStatus) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// PrivateEndpointServiceConnectionStatusInput is an input type that accepts values of the PrivateEndpointServiceConnectionStatus enum
// A concrete instance of `PrivateEndpointServiceConnectionStatusInput` can be one of the following:
//
//	PrivateEndpointServiceConnectionStatusPending
//	PrivateEndpointServiceConnectionStatusApproved
//	PrivateEndpointServiceConnectionStatusRejected
//	PrivateEndpointServiceConnectionStatusDisconnected
//	PrivateEndpointServiceConnectionStatusTimeout
type PrivateEndpointServiceConnectionStatusInput interface {
	pulumi.Input

	ToPrivateEndpointServiceConnectionStatusOutput() PrivateEndpointServiceConnectionStatusOutput
	ToPrivateEndpointServiceConnectionStatusOutputWithContext(context.Context) PrivateEndpointServiceConnectionStatusOutput
}

var privateEndpointServiceConnectionStatusPtrType = reflect.TypeOf((**PrivateEndpointServiceConnectionStatus)(nil)).Elem()

type PrivateEndpointServiceConnectionStatusPtrInput interface {
	pulumi.Input

	ToPrivateEndpointServiceConnectionStatusPtrOutput() PrivateEndpointServiceConnectionStatusPtrOutput
	ToPrivateEndpointServiceConnectionStatusPtrOutputWithContext(context.Context) PrivateEndpointServiceConnectionStatusPtrOutput
}

type privateEndpointServiceConnectionStatusPtr string

func PrivateEndpointServiceConnectionStatusPtr(v string) PrivateEndpointServiceConnectionStatusPtrInput {
	return (*privateEndpointServiceConnectionStatusPtr)(&v)
}

func (*privateEndpointServiceConnectionStatusPtr) ElementType() reflect.Type {
	return privateEndpointServiceConnectionStatusPtrType
}

func (in *privateEndpointServiceConnectionStatusPtr) ToPrivateEndpointServiceConnectionStatusPtrOutput() PrivateEndpointServiceConnectionStatusPtrOutput {
	return pulumi.ToOutput(in).(PrivateEndpointServiceConnectionStatusPtrOutput)
}

func (in *privateEndpointServiceConnectionStatusPtr) ToPrivateEndpointServiceConnectionStatusPtrOutputWithContext(ctx context.Context) PrivateEndpointServiceConnectionStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(PrivateEndpointServiceConnectionStatusPtrOutput)
}

// Whether requests from Public Network are allowed.
type PublicNetworkAccess string

const (
	PublicNetworkAccessEnabled  = PublicNetworkAccess("Enabled")
	PublicNetworkAccessDisabled = PublicNetworkAccess("Disabled")
)

func (PublicNetworkAccess) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicNetworkAccess)(nil)).Elem()
}

func (e PublicNetworkAccess) ToPublicNetworkAccessOutput() PublicNetworkAccessOutput {
	return pulumi.ToOutput(e).(PublicNetworkAccessOutput)
}

func (e PublicNetworkAccess) ToPublicNetworkAccessOutputWithContext(ctx context.Context) PublicNetworkAccessOutput {
	return pulumi.ToOutputWithContext(ctx, e).(PublicNetworkAccessOutput)
}

func (e PublicNetworkAccess) ToPublicNetworkAccessPtrOutput() PublicNetworkAccessPtrOutput {
	return e.ToPublicNetworkAccessPtrOutputWithContext(context.Background())
}

func (e PublicNetworkAccess) ToPublicNetworkAccessPtrOutputWithContext(ctx context.Context) PublicNetworkAccessPtrOutput {
	return PublicNetworkAccess(e).ToPublicNetworkAccessOutputWithContext(ctx).ToPublicNetworkAccessPtrOutputWithContext(ctx)
}

func (e PublicNetworkAccess) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e PublicNetworkAccess) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e PublicNetworkAccess) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e PublicNetworkAccess) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type PublicNetworkAccessOutput struct{ *pulumi.OutputState }

func (PublicNetworkAccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicNetworkAccess)(nil)).Elem()
}

func (o PublicNetworkAccessOutput) ToPublicNetworkAccessOutput() PublicNetworkAccessOutput {
	return o
}

func (o PublicNetworkAccessOutput) ToPublicNetworkAccessOutputWithContext(ctx context.Context) PublicNetworkAccessOutput {
	return o
}

func (o PublicNetworkAccessOutput) ToPublicNetworkAccessPtrOutput() PublicNetworkAccessPtrOutput {
	return o.ToPublicNetworkAccessPtrOutputWithContext(context.Background())
}

func (o PublicNetworkAccessOutput) ToPublicNetworkAccessPtrOutputWithContext(ctx context.Context) PublicNetworkAccessPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PublicNetworkAccess) *PublicNetworkAccess {
		return &v
	}).(PublicNetworkAccessPtrOutput)
}

func (o PublicNetworkAccessOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o PublicNetworkAccessOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PublicNetworkAccess) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o PublicNetworkAccessOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PublicNetworkAccessOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PublicNetworkAccess) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type PublicNetworkAccessPtrOutput struct{ *pulumi.OutputState }

func (PublicNetworkAccessPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PublicNetworkAccess)(nil)).Elem()
}

func (o PublicNetworkAccessPtrOutput) ToPublicNetworkAccessPtrOutput() PublicNetworkAccessPtrOutput {
	return o
}

func (o PublicNetworkAccessPtrOutput) ToPublicNetworkAccessPtrOutputWithContext(ctx context.Context) PublicNetworkAccessPtrOutput {
	return o
}

func (o PublicNetworkAccessPtrOutput) Elem() PublicNetworkAccessOutput {
	return o.ApplyT(func(v *PublicNetworkAccess) PublicNetworkAccess {
		if v != nil {
			return *v
		}
		var ret PublicNetworkAccess
		return ret
	}).(PublicNetworkAccessOutput)
}

func (o PublicNetworkAccessPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PublicNetworkAccessPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *PublicNetworkAccess) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// PublicNetworkAccessInput is an input type that accepts values of the PublicNetworkAccess enum
// A concrete instance of `PublicNetworkAccessInput` can be one of the following:
//
//	PublicNetworkAccessEnabled
//	PublicNetworkAccessDisabled
type PublicNetworkAccessInput interface {
	pulumi.Input

	ToPublicNetworkAccessOutput() PublicNetworkAccessOutput
	ToPublicNetworkAccessOutputWithContext(context.Context) PublicNetworkAccessOutput
}

var publicNetworkAccessPtrType = reflect.TypeOf((**PublicNetworkAccess)(nil)).Elem()

type PublicNetworkAccessPtrInput interface {
	pulumi.Input

	ToPublicNetworkAccessPtrOutput() PublicNetworkAccessPtrOutput
	ToPublicNetworkAccessPtrOutputWithContext(context.Context) PublicNetworkAccessPtrOutput
}

type publicNetworkAccessPtr string

func PublicNetworkAccessPtr(v string) PublicNetworkAccessPtrInput {
	return (*publicNetworkAccessPtr)(&v)
}

func (*publicNetworkAccessPtr) ElementType() reflect.Type {
	return publicNetworkAccessPtrType
}

func (in *publicNetworkAccessPtr) ToPublicNetworkAccessPtrOutput() PublicNetworkAccessPtrOutput {
	return pulumi.ToOutput(in).(PublicNetworkAccessPtrOutput)
}

func (in *publicNetworkAccessPtr) ToPublicNetworkAccessPtrOutputWithContext(ctx context.Context) PublicNetworkAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(PublicNetworkAccessPtrOutput)
}

// State of the public SSH port. Possible values are: Disabled - Indicates that the public ssh port is closed on all nodes of the cluster. Enabled - Indicates that the public ssh port is open on all nodes of the cluster. NotSpecified - Indicates that the public ssh port is closed on all nodes of the cluster if VNet is defined, else is open all public nodes. It can be default only during cluster creation time, after creation it will be either enabled or disabled.
type RemoteLoginPortPublicAccess string

const (
	RemoteLoginPortPublicAccessEnabled      = RemoteLoginPortPublicAccess("Enabled")
	RemoteLoginPortPublicAccessDisabled     = RemoteLoginPortPublicAccess("Disabled")
	RemoteLoginPortPublicAccessNotSpecified = RemoteLoginPortPublicAccess("NotSpecified")
)

func (RemoteLoginPortPublicAccess) ElementType() reflect.Type {
	return reflect.TypeOf((*RemoteLoginPortPublicAccess)(nil)).Elem()
}

func (e RemoteLoginPortPublicAccess) ToRemoteLoginPortPublicAccessOutput() RemoteLoginPortPublicAccessOutput {
	return pulumi.ToOutput(e).(RemoteLoginPortPublicAccessOutput)
}

func (e RemoteLoginPortPublicAccess) ToRemoteLoginPortPublicAccessOutputWithContext(ctx context.Context) RemoteLoginPortPublicAccessOutput {
	return pulumi.ToOutputWithContext(ctx, e).(RemoteLoginPortPublicAccessOutput)
}

func (e RemoteLoginPortPublicAccess) ToRemoteLoginPortPublicAccessPtrOutput() RemoteLoginPortPublicAccessPtrOutput {
	return e.ToRemoteLoginPortPublicAccessPtrOutputWithContext(context.Background())
}

func (e RemoteLoginPortPublicAccess) ToRemoteLoginPortPublicAccessPtrOutputWithContext(ctx context.Context) RemoteLoginPortPublicAccessPtrOutput {
	return RemoteLoginPortPublicAccess(e).ToRemoteLoginPortPublicAccessOutputWithContext(ctx).ToRemoteLoginPortPublicAccessPtrOutputWithContext(ctx)
}

func (e RemoteLoginPortPublicAccess) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e RemoteLoginPortPublicAccess) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e RemoteLoginPortPublicAccess) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e RemoteLoginPortPublicAccess) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type RemoteLoginPortPublicAccessOutput struct{ *pulumi.OutputState }

func (RemoteLoginPortPublicAccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RemoteLoginPortPublicAccess)(nil)).Elem()
}

func (o RemoteLoginPortPublicAccessOutput) ToRemoteLoginPortPublicAccessOutput() RemoteLoginPortPublicAccessOutput {
	return o
}

func (o RemoteLoginPortPublicAccessOutput) ToRemoteLoginPortPublicAccessOutputWithContext(ctx context.Context) RemoteLoginPortPublicAccessOutput {
	return o
}

func (o RemoteLoginPortPublicAccessOutput) ToRemoteLoginPortPublicAccessPtrOutput() RemoteLoginPortPublicAccessPtrOutput {
	return o.ToRemoteLoginPortPublicAccessPtrOutputWithContext(context.Background())
}

func (o RemoteLoginPortPublicAccessOutput) ToRemoteLoginPortPublicAccessPtrOutputWithContext(ctx context.Context) RemoteLoginPortPublicAccessPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RemoteLoginPortPublicAccess) *RemoteLoginPortPublicAccess {
		return &v
	}).(RemoteLoginPortPublicAccessPtrOutput)
}

func (o RemoteLoginPortPublicAccessOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o RemoteLoginPortPublicAccessOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RemoteLoginPortPublicAccess) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o RemoteLoginPortPublicAccessOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RemoteLoginPortPublicAccessOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RemoteLoginPortPublicAccess) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type RemoteLoginPortPublicAccessPtrOutput struct{ *pulumi.OutputState }

func (RemoteLoginPortPublicAccessPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RemoteLoginPortPublicAccess)(nil)).Elem()
}

func (o RemoteLoginPortPublicAccessPtrOutput) ToRemoteLoginPortPublicAccessPtrOutput() RemoteLoginPortPublicAccessPtrOutput {
	return o
}

func (o RemoteLoginPortPublicAccessPtrOutput) ToRemoteLoginPortPublicAccessPtrOutputWithContext(ctx context.Context) RemoteLoginPortPublicAccessPtrOutput {
	return o
}

func (o RemoteLoginPortPublicAccessPtrOutput) Elem() RemoteLoginPortPublicAccessOutput {
	return o.ApplyT(func(v *RemoteLoginPortPublicAccess) RemoteLoginPortPublicAccess {
		if v != nil {
			return *v
		}
		var ret RemoteLoginPortPublicAccess
		return ret
	}).(RemoteLoginPortPublicAccessOutput)
}

func (o RemoteLoginPortPublicAccessPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RemoteLoginPortPublicAccessPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *RemoteLoginPortPublicAccess) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// RemoteLoginPortPublicAccessInput is an input type that accepts values of the RemoteLoginPortPublicAccess enum
// A concrete instance of `RemoteLoginPortPublicAccessInput` can be one of the following:
//
//	RemoteLoginPortPublicAccessEnabled
//	RemoteLoginPortPublicAccessDisabled
//	RemoteLoginPortPublicAccessNotSpecified
type RemoteLoginPortPublicAccessInput interface {
	pulumi.Input

	ToRemoteLoginPortPublicAccessOutput() RemoteLoginPortPublicAccessOutput
	ToRemoteLoginPortPublicAccessOutputWithContext(context.Context) RemoteLoginPortPublicAccessOutput
}

var remoteLoginPortPublicAccessPtrType = reflect.TypeOf((**RemoteLoginPortPublicAccess)(nil)).Elem()

type RemoteLoginPortPublicAccessPtrInput interface {
	pulumi.Input

	ToRemoteLoginPortPublicAccessPtrOutput() RemoteLoginPortPublicAccessPtrOutput
	ToRemoteLoginPortPublicAccessPtrOutputWithContext(context.Context) RemoteLoginPortPublicAccessPtrOutput
}

type remoteLoginPortPublicAccessPtr string

func RemoteLoginPortPublicAccessPtr(v string) RemoteLoginPortPublicAccessPtrInput {
	return (*remoteLoginPortPublicAccessPtr)(&v)
}

func (*remoteLoginPortPublicAccessPtr) ElementType() reflect.Type {
	return remoteLoginPortPublicAccessPtrType
}

func (in *remoteLoginPortPublicAccessPtr) ToRemoteLoginPortPublicAccessPtrOutput() RemoteLoginPortPublicAccessPtrOutput {
	return pulumi.ToOutput(in).(RemoteLoginPortPublicAccessPtrOutput)
}

func (in *remoteLoginPortPublicAccessPtr) ToRemoteLoginPortPublicAccessPtrOutputWithContext(ctx context.Context) RemoteLoginPortPublicAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(RemoteLoginPortPublicAccessPtrOutput)
}

// The identity type.
type ResourceIdentityType string

const (
	ResourceIdentityTypeSystemAssigned               = ResourceIdentityType("SystemAssigned")
	ResourceIdentityType_SystemAssigned_UserAssigned = ResourceIdentityType("SystemAssigned,UserAssigned")
	ResourceIdentityTypeUserAssigned                 = ResourceIdentityType("UserAssigned")
	ResourceIdentityTypeNone                         = ResourceIdentityType("None")
)

func (ResourceIdentityType) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceIdentityType)(nil)).Elem()
}

func (e ResourceIdentityType) ToResourceIdentityTypeOutput() ResourceIdentityTypeOutput {
	return pulumi.ToOutput(e).(ResourceIdentityTypeOutput)
}

func (e ResourceIdentityType) ToResourceIdentityTypeOutputWithContext(ctx context.Context) ResourceIdentityTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ResourceIdentityTypeOutput)
}

func (e ResourceIdentityType) ToResourceIdentityTypePtrOutput() ResourceIdentityTypePtrOutput {
	return e.ToResourceIdentityTypePtrOutputWithContext(context.Background())
}

func (e ResourceIdentityType) ToResourceIdentityTypePtrOutputWithContext(ctx context.Context) ResourceIdentityTypePtrOutput {
	return ResourceIdentityType(e).ToResourceIdentityTypeOutputWithContext(ctx).ToResourceIdentityTypePtrOutputWithContext(ctx)
}

func (e ResourceIdentityType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ResourceIdentityType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ResourceIdentityType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ResourceIdentityType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ResourceIdentityTypeOutput struct{ *pulumi.OutputState }

func (ResourceIdentityTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceIdentityType)(nil)).Elem()
}

func (o ResourceIdentityTypeOutput) ToResourceIdentityTypeOutput() ResourceIdentityTypeOutput {
	return o
}

func (o ResourceIdentityTypeOutput) ToResourceIdentityTypeOutputWithContext(ctx context.Context) ResourceIdentityTypeOutput {
	return o
}

func (o ResourceIdentityTypeOutput) ToResourceIdentityTypePtrOutput() ResourceIdentityTypePtrOutput {
	return o.ToResourceIdentityTypePtrOutputWithContext(context.Background())
}

func (o ResourceIdentityTypeOutput) ToResourceIdentityTypePtrOutputWithContext(ctx context.Context) ResourceIdentityTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ResourceIdentityType) *ResourceIdentityType {
		return &v
	}).(ResourceIdentityTypePtrOutput)
}

func (o ResourceIdentityTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ResourceIdentityTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ResourceIdentityType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ResourceIdentityTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ResourceIdentityTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ResourceIdentityType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ResourceIdentityTypePtrOutput struct{ *pulumi.OutputState }

func (ResourceIdentityTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceIdentityType)(nil)).Elem()
}

func (o ResourceIdentityTypePtrOutput) ToResourceIdentityTypePtrOutput() ResourceIdentityTypePtrOutput {
	return o
}

func (o ResourceIdentityTypePtrOutput) ToResourceIdentityTypePtrOutputWithContext(ctx context.Context) ResourceIdentityTypePtrOutput {
	return o
}

func (o ResourceIdentityTypePtrOutput) Elem() ResourceIdentityTypeOutput {
	return o.ApplyT(func(v *ResourceIdentityType) ResourceIdentityType {
		if v != nil {
			return *v
		}
		var ret ResourceIdentityType
		return ret
	}).(ResourceIdentityTypeOutput)
}

func (o ResourceIdentityTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ResourceIdentityTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ResourceIdentityType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ResourceIdentityTypeInput is an input type that accepts values of the ResourceIdentityType enum
// A concrete instance of `ResourceIdentityTypeInput` can be one of the following:
//
//	ResourceIdentityTypeSystemAssigned
//	ResourceIdentityType_SystemAssigned_UserAssigned
//	ResourceIdentityTypeUserAssigned
//	ResourceIdentityTypeNone
type ResourceIdentityTypeInput interface {
	pulumi.Input

	ToResourceIdentityTypeOutput() ResourceIdentityTypeOutput
	ToResourceIdentityTypeOutputWithContext(context.Context) ResourceIdentityTypeOutput
}

var resourceIdentityTypePtrType = reflect.TypeOf((**ResourceIdentityType)(nil)).Elem()

type ResourceIdentityTypePtrInput interface {
	pulumi.Input

	ToResourceIdentityTypePtrOutput() ResourceIdentityTypePtrOutput
	ToResourceIdentityTypePtrOutputWithContext(context.Context) ResourceIdentityTypePtrOutput
}

type resourceIdentityTypePtr string

func ResourceIdentityTypePtr(v string) ResourceIdentityTypePtrInput {
	return (*resourceIdentityTypePtr)(&v)
}

func (*resourceIdentityTypePtr) ElementType() reflect.Type {
	return resourceIdentityTypePtrType
}

func (in *resourceIdentityTypePtr) ToResourceIdentityTypePtrOutput() ResourceIdentityTypePtrOutput {
	return pulumi.ToOutput(in).(ResourceIdentityTypePtrOutput)
}

func (in *resourceIdentityTypePtr) ToResourceIdentityTypePtrOutputWithContext(ctx context.Context) ResourceIdentityTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ResourceIdentityTypePtrOutput)
}

// create a workspace with soft delete capability
type SoftDeleteEnabled string

const (
	SoftDeleteEnabledTrue  = SoftDeleteEnabled("True")
	SoftDeleteEnabledFalse = SoftDeleteEnabled("False")
)

func (SoftDeleteEnabled) ElementType() reflect.Type {
	return reflect.TypeOf((*SoftDeleteEnabled)(nil)).Elem()
}

func (e SoftDeleteEnabled) ToSoftDeleteEnabledOutput() SoftDeleteEnabledOutput {
	return pulumi.ToOutput(e).(SoftDeleteEnabledOutput)
}

func (e SoftDeleteEnabled) ToSoftDeleteEnabledOutputWithContext(ctx context.Context) SoftDeleteEnabledOutput {
	return pulumi.ToOutputWithContext(ctx, e).(SoftDeleteEnabledOutput)
}

func (e SoftDeleteEnabled) ToSoftDeleteEnabledPtrOutput() SoftDeleteEnabledPtrOutput {
	return e.ToSoftDeleteEnabledPtrOutputWithContext(context.Background())
}

func (e SoftDeleteEnabled) ToSoftDeleteEnabledPtrOutputWithContext(ctx context.Context) SoftDeleteEnabledPtrOutput {
	return SoftDeleteEnabled(e).ToSoftDeleteEnabledOutputWithContext(ctx).ToSoftDeleteEnabledPtrOutputWithContext(ctx)
}

func (e SoftDeleteEnabled) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e SoftDeleteEnabled) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e SoftDeleteEnabled) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e SoftDeleteEnabled) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type SoftDeleteEnabledOutput struct{ *pulumi.OutputState }

func (SoftDeleteEnabledOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SoftDeleteEnabled)(nil)).Elem()
}

func (o SoftDeleteEnabledOutput) ToSoftDeleteEnabledOutput() SoftDeleteEnabledOutput {
	return o
}

func (o SoftDeleteEnabledOutput) ToSoftDeleteEnabledOutputWithContext(ctx context.Context) SoftDeleteEnabledOutput {
	return o
}

func (o SoftDeleteEnabledOutput) ToSoftDeleteEnabledPtrOutput() SoftDeleteEnabledPtrOutput {
	return o.ToSoftDeleteEnabledPtrOutputWithContext(context.Background())
}

func (o SoftDeleteEnabledOutput) ToSoftDeleteEnabledPtrOutputWithContext(ctx context.Context) SoftDeleteEnabledPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SoftDeleteEnabled) *SoftDeleteEnabled {
		return &v
	}).(SoftDeleteEnabledPtrOutput)
}

func (o SoftDeleteEnabledOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o SoftDeleteEnabledOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SoftDeleteEnabled) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o SoftDeleteEnabledOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SoftDeleteEnabledOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SoftDeleteEnabled) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type SoftDeleteEnabledPtrOutput struct{ *pulumi.OutputState }

func (SoftDeleteEnabledPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SoftDeleteEnabled)(nil)).Elem()
}

func (o SoftDeleteEnabledPtrOutput) ToSoftDeleteEnabledPtrOutput() SoftDeleteEnabledPtrOutput {
	return o
}

func (o SoftDeleteEnabledPtrOutput) ToSoftDeleteEnabledPtrOutputWithContext(ctx context.Context) SoftDeleteEnabledPtrOutput {
	return o
}

func (o SoftDeleteEnabledPtrOutput) Elem() SoftDeleteEnabledOutput {
	return o.ApplyT(func(v *SoftDeleteEnabled) SoftDeleteEnabled {
		if v != nil {
			return *v
		}
		var ret SoftDeleteEnabled
		return ret
	}).(SoftDeleteEnabledOutput)
}

func (o SoftDeleteEnabledPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SoftDeleteEnabledPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *SoftDeleteEnabled) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// SoftDeleteEnabledInput is an input type that accepts values of the SoftDeleteEnabled enum
// A concrete instance of `SoftDeleteEnabledInput` can be one of the following:
//
//	SoftDeleteEnabledTrue
//	SoftDeleteEnabledFalse
type SoftDeleteEnabledInput interface {
	pulumi.Input

	ToSoftDeleteEnabledOutput() SoftDeleteEnabledOutput
	ToSoftDeleteEnabledOutputWithContext(context.Context) SoftDeleteEnabledOutput
}

var softDeleteEnabledPtrType = reflect.TypeOf((**SoftDeleteEnabled)(nil)).Elem()

type SoftDeleteEnabledPtrInput interface {
	pulumi.Input

	ToSoftDeleteEnabledPtrOutput() SoftDeleteEnabledPtrOutput
	ToSoftDeleteEnabledPtrOutputWithContext(context.Context) SoftDeleteEnabledPtrOutput
}

type softDeleteEnabledPtr string

func SoftDeleteEnabledPtr(v string) SoftDeleteEnabledPtrInput {
	return (*softDeleteEnabledPtr)(&v)
}

func (*softDeleteEnabledPtr) ElementType() reflect.Type {
	return softDeleteEnabledPtrType
}

func (in *softDeleteEnabledPtr) ToSoftDeleteEnabledPtrOutput() SoftDeleteEnabledPtrOutput {
	return pulumi.ToOutput(in).(SoftDeleteEnabledPtrOutput)
}

func (in *softDeleteEnabledPtr) ToSoftDeleteEnabledPtrOutputWithContext(ctx context.Context) SoftDeleteEnabledPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(SoftDeleteEnabledPtrOutput)
}

// State of the public SSH port. Possible values are: Disabled - Indicates that the public ssh port is closed on this instance. Enabled - Indicates that the public ssh port is open and accessible according to the VNet/subnet policy if applicable.
type SshPublicAccess string

const (
	SshPublicAccessEnabled  = SshPublicAccess("Enabled")
	SshPublicAccessDisabled = SshPublicAccess("Disabled")
)

func (SshPublicAccess) ElementType() reflect.Type {
	return reflect.TypeOf((*SshPublicAccess)(nil)).Elem()
}

func (e SshPublicAccess) ToSshPublicAccessOutput() SshPublicAccessOutput {
	return pulumi.ToOutput(e).(SshPublicAccessOutput)
}

func (e SshPublicAccess) ToSshPublicAccessOutputWithContext(ctx context.Context) SshPublicAccessOutput {
	return pulumi.ToOutputWithContext(ctx, e).(SshPublicAccessOutput)
}

func (e SshPublicAccess) ToSshPublicAccessPtrOutput() SshPublicAccessPtrOutput {
	return e.ToSshPublicAccessPtrOutputWithContext(context.Background())
}

func (e SshPublicAccess) ToSshPublicAccessPtrOutputWithContext(ctx context.Context) SshPublicAccessPtrOutput {
	return SshPublicAccess(e).ToSshPublicAccessOutputWithContext(ctx).ToSshPublicAccessPtrOutputWithContext(ctx)
}

func (e SshPublicAccess) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e SshPublicAccess) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e SshPublicAccess) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e SshPublicAccess) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type SshPublicAccessOutput struct{ *pulumi.OutputState }

func (SshPublicAccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SshPublicAccess)(nil)).Elem()
}

func (o SshPublicAccessOutput) ToSshPublicAccessOutput() SshPublicAccessOutput {
	return o
}

func (o SshPublicAccessOutput) ToSshPublicAccessOutputWithContext(ctx context.Context) SshPublicAccessOutput {
	return o
}

func (o SshPublicAccessOutput) ToSshPublicAccessPtrOutput() SshPublicAccessPtrOutput {
	return o.ToSshPublicAccessPtrOutputWithContext(context.Background())
}

func (o SshPublicAccessOutput) ToSshPublicAccessPtrOutputWithContext(ctx context.Context) SshPublicAccessPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SshPublicAccess) *SshPublicAccess {
		return &v
	}).(SshPublicAccessPtrOutput)
}

func (o SshPublicAccessOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o SshPublicAccessOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SshPublicAccess) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o SshPublicAccessOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SshPublicAccessOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SshPublicAccess) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type SshPublicAccessPtrOutput struct{ *pulumi.OutputState }

func (SshPublicAccessPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SshPublicAccess)(nil)).Elem()
}

func (o SshPublicAccessPtrOutput) ToSshPublicAccessPtrOutput() SshPublicAccessPtrOutput {
	return o
}

func (o SshPublicAccessPtrOutput) ToSshPublicAccessPtrOutputWithContext(ctx context.Context) SshPublicAccessPtrOutput {
	return o
}

func (o SshPublicAccessPtrOutput) Elem() SshPublicAccessOutput {
	return o.ApplyT(func(v *SshPublicAccess) SshPublicAccess {
		if v != nil {
			return *v
		}
		var ret SshPublicAccess
		return ret
	}).(SshPublicAccessOutput)
}

func (o SshPublicAccessPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SshPublicAccessPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *SshPublicAccess) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// SshPublicAccessInput is an input type that accepts values of the SshPublicAccess enum
// A concrete instance of `SshPublicAccessInput` can be one of the following:
//
//	SshPublicAccessEnabled
//	SshPublicAccessDisabled
type SshPublicAccessInput interface {
	pulumi.Input

	ToSshPublicAccessOutput() SshPublicAccessOutput
	ToSshPublicAccessOutputWithContext(context.Context) SshPublicAccessOutput
}

var sshPublicAccessPtrType = reflect.TypeOf((**SshPublicAccess)(nil)).Elem()

type SshPublicAccessPtrInput interface {
	pulumi.Input

	ToSshPublicAccessPtrOutput() SshPublicAccessPtrOutput
	ToSshPublicAccessPtrOutputWithContext(context.Context) SshPublicAccessPtrOutput
}

type sshPublicAccessPtr string

func SshPublicAccessPtr(v string) SshPublicAccessPtrInput {
	return (*sshPublicAccessPtr)(&v)
}

func (*sshPublicAccessPtr) ElementType() reflect.Type {
	return sshPublicAccessPtrType
}

func (in *sshPublicAccessPtr) ToSshPublicAccessPtrOutput() SshPublicAccessPtrOutput {
	return pulumi.ToOutput(in).(SshPublicAccessPtrOutput)
}

func (in *sshPublicAccessPtr) ToSshPublicAccessPtrOutputWithContext(ctx context.Context) SshPublicAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(SshPublicAccessPtrOutput)
}

// Virtual Machine priority
type VmPriority string

const (
	VmPriorityDedicated   = VmPriority("Dedicated")
	VmPriorityLowPriority = VmPriority("LowPriority")
)

func (VmPriority) ElementType() reflect.Type {
	return reflect.TypeOf((*VmPriority)(nil)).Elem()
}

func (e VmPriority) ToVmPriorityOutput() VmPriorityOutput {
	return pulumi.ToOutput(e).(VmPriorityOutput)
}

func (e VmPriority) ToVmPriorityOutputWithContext(ctx context.Context) VmPriorityOutput {
	return pulumi.ToOutputWithContext(ctx, e).(VmPriorityOutput)
}

func (e VmPriority) ToVmPriorityPtrOutput() VmPriorityPtrOutput {
	return e.ToVmPriorityPtrOutputWithContext(context.Background())
}

func (e VmPriority) ToVmPriorityPtrOutputWithContext(ctx context.Context) VmPriorityPtrOutput {
	return VmPriority(e).ToVmPriorityOutputWithContext(ctx).ToVmPriorityPtrOutputWithContext(ctx)
}

func (e VmPriority) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e VmPriority) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e VmPriority) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e VmPriority) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type VmPriorityOutput struct{ *pulumi.OutputState }

func (VmPriorityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VmPriority)(nil)).Elem()
}

func (o VmPriorityOutput) ToVmPriorityOutput() VmPriorityOutput {
	return o
}

func (o VmPriorityOutput) ToVmPriorityOutputWithContext(ctx context.Context) VmPriorityOutput {
	return o
}

func (o VmPriorityOutput) ToVmPriorityPtrOutput() VmPriorityPtrOutput {
	return o.ToVmPriorityPtrOutputWithContext(context.Background())
}

func (o VmPriorityOutput) ToVmPriorityPtrOutputWithContext(ctx context.Context) VmPriorityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VmPriority) *VmPriority {
		return &v
	}).(VmPriorityPtrOutput)
}

func (o VmPriorityOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o VmPriorityOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e VmPriority) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o VmPriorityOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o VmPriorityOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e VmPriority) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type VmPriorityPtrOutput struct{ *pulumi.OutputState }

func (VmPriorityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VmPriority)(nil)).Elem()
}

func (o VmPriorityPtrOutput) ToVmPriorityPtrOutput() VmPriorityPtrOutput {
	return o
}

func (o VmPriorityPtrOutput) ToVmPriorityPtrOutputWithContext(ctx context.Context) VmPriorityPtrOutput {
	return o
}

func (o VmPriorityPtrOutput) Elem() VmPriorityOutput {
	return o.ApplyT(func(v *VmPriority) VmPriority {
		if v != nil {
			return *v
		}
		var ret VmPriority
		return ret
	}).(VmPriorityOutput)
}

func (o VmPriorityPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o VmPriorityPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *VmPriority) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// VmPriorityInput is an input type that accepts values of the VmPriority enum
// A concrete instance of `VmPriorityInput` can be one of the following:
//
//	VmPriorityDedicated
//	VmPriorityLowPriority
type VmPriorityInput interface {
	pulumi.Input

	ToVmPriorityOutput() VmPriorityOutput
	ToVmPriorityOutputWithContext(context.Context) VmPriorityOutput
}

var vmPriorityPtrType = reflect.TypeOf((**VmPriority)(nil)).Elem()

type VmPriorityPtrInput interface {
	pulumi.Input

	ToVmPriorityPtrOutput() VmPriorityPtrOutput
	ToVmPriorityPtrOutputWithContext(context.Context) VmPriorityPtrOutput
}

type vmPriorityPtr string

func VmPriorityPtr(v string) VmPriorityPtrInput {
	return (*vmPriorityPtr)(&v)
}

func (*vmPriorityPtr) ElementType() reflect.Type {
	return vmPriorityPtrType
}

func (in *vmPriorityPtr) ToVmPriorityPtrOutput() VmPriorityPtrOutput {
	return pulumi.ToOutput(in).(VmPriorityPtrOutput)
}

func (in *vmPriorityPtr) ToVmPriorityPtrOutputWithContext(ctx context.Context) VmPriorityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(VmPriorityPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(AllowRecoverSoftDeletedWorkspaceOutput{})
	pulumi.RegisterOutputType(AllowRecoverSoftDeletedWorkspacePtrOutput{})
	pulumi.RegisterOutputType(ApplicationSharingPolicyOutput{})
	pulumi.RegisterOutputType(ApplicationSharingPolicyPtrOutput{})
	pulumi.RegisterOutputType(ClusterPurposeOutput{})
	pulumi.RegisterOutputType(ClusterPurposePtrOutput{})
	pulumi.RegisterOutputType(ComputeInstanceAuthorizationTypeOutput{})
	pulumi.RegisterOutputType(ComputeInstanceAuthorizationTypePtrOutput{})
	pulumi.RegisterOutputType(EncryptionStatusOutput{})
	pulumi.RegisterOutputType(EncryptionStatusPtrOutput{})
	pulumi.RegisterOutputType(LoadBalancerTypeOutput{})
	pulumi.RegisterOutputType(LoadBalancerTypePtrOutput{})
	pulumi.RegisterOutputType(OsTypeOutput{})
	pulumi.RegisterOutputType(OsTypePtrOutput{})
	pulumi.RegisterOutputType(PrivateEndpointServiceConnectionStatusOutput{})
	pulumi.RegisterOutputType(PrivateEndpointServiceConnectionStatusPtrOutput{})
	pulumi.RegisterOutputType(PublicNetworkAccessOutput{})
	pulumi.RegisterOutputType(PublicNetworkAccessPtrOutput{})
	pulumi.RegisterOutputType(RemoteLoginPortPublicAccessOutput{})
	pulumi.RegisterOutputType(RemoteLoginPortPublicAccessPtrOutput{})
	pulumi.RegisterOutputType(ResourceIdentityTypeOutput{})
	pulumi.RegisterOutputType(ResourceIdentityTypePtrOutput{})
	pulumi.RegisterOutputType(SoftDeleteEnabledOutput{})
	pulumi.RegisterOutputType(SoftDeleteEnabledPtrOutput{})
	pulumi.RegisterOutputType(SshPublicAccessOutput{})
	pulumi.RegisterOutputType(SshPublicAccessPtrOutput{})
	pulumi.RegisterOutputType(VmPriorityOutput{})
	pulumi.RegisterOutputType(VmPriorityPtrOutput{})
}
