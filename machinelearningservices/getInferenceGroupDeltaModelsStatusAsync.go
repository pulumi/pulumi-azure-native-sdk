// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package machinelearningservices

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Contract returning to user the delta models.
// Azure REST API version: 2024-10-01-preview.
func GetInferenceGroupDeltaModelsStatusAsync(ctx *pulumi.Context, args *GetInferenceGroupDeltaModelsStatusAsyncArgs, opts ...pulumi.InvokeOption) (*GetInferenceGroupDeltaModelsStatusAsyncResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv GetInferenceGroupDeltaModelsStatusAsyncResult
	err := ctx.Invoke("azure-native:machinelearningservices:getInferenceGroupDeltaModelsStatusAsync", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return rv.Defaults(), nil
}

type GetInferenceGroupDeltaModelsStatusAsyncArgs struct {
	// Gets or sets collection of delta models to retrieve status for.
	DeltaModels []string `pulumi:"deltaModels"`
	// InferenceGroup name.
	GroupName string `pulumi:"groupName"`
	// InferencePool name.
	PoolName string `pulumi:"poolName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Gets or sets target base model.
	TargetBaseModel *string `pulumi:"targetBaseModel"`
	// Name of Azure Machine Learning workspace.
	WorkspaceName string `pulumi:"workspaceName"`
}

// Contract returning to user the delta models.
type GetInferenceGroupDeltaModelsStatusAsyncResult struct {
	// Gets or sets actual instance count.
	ActualInstanceCount *int `pulumi:"actualInstanceCount"`
	// Gets or sets dictionary representing modelID and its current state.
	DeltaModels map[string][]DeltaModelCurrentStateResponse `pulumi:"deltaModels"`
	// Gets or sets expected instance count.
	ExpectedInstanceCount *int `pulumi:"expectedInstanceCount"`
	// Gets or sets revision ID.
	RevisionId *string `pulumi:"revisionId"`
	// Gets or sets target base model.
	TargetBaseModel *string `pulumi:"targetBaseModel"`
}

// Defaults sets the appropriate defaults for GetInferenceGroupDeltaModelsStatusAsyncResult
func (val *GetInferenceGroupDeltaModelsStatusAsyncResult) Defaults() *GetInferenceGroupDeltaModelsStatusAsyncResult {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.ActualInstanceCount == nil {
		actualInstanceCount_ := 0
		tmp.ActualInstanceCount = &actualInstanceCount_
	}
	if tmp.ExpectedInstanceCount == nil {
		expectedInstanceCount_ := 0
		tmp.ExpectedInstanceCount = &expectedInstanceCount_
	}
	return &tmp
}

func GetInferenceGroupDeltaModelsStatusAsyncOutput(ctx *pulumi.Context, args GetInferenceGroupDeltaModelsStatusAsyncOutputArgs, opts ...pulumi.InvokeOption) GetInferenceGroupDeltaModelsStatusAsyncResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetInferenceGroupDeltaModelsStatusAsyncResultOutput, error) {
			args := v.(GetInferenceGroupDeltaModelsStatusAsyncArgs)
			opts = utilities.PkgInvokeDefaultOpts(opts)
			var rv GetInferenceGroupDeltaModelsStatusAsyncResult
			secret, err := ctx.InvokePackageRaw("azure-native:machinelearningservices:getInferenceGroupDeltaModelsStatusAsync", args, &rv, "", opts...)
			if err != nil {
				return GetInferenceGroupDeltaModelsStatusAsyncResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(GetInferenceGroupDeltaModelsStatusAsyncResultOutput)
			if secret {
				return pulumi.ToSecret(output).(GetInferenceGroupDeltaModelsStatusAsyncResultOutput), nil
			}
			return output, nil
		}).(GetInferenceGroupDeltaModelsStatusAsyncResultOutput)
}

type GetInferenceGroupDeltaModelsStatusAsyncOutputArgs struct {
	// Gets or sets collection of delta models to retrieve status for.
	DeltaModels pulumi.StringArrayInput `pulumi:"deltaModels"`
	// InferenceGroup name.
	GroupName pulumi.StringInput `pulumi:"groupName"`
	// InferencePool name.
	PoolName pulumi.StringInput `pulumi:"poolName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
	// Gets or sets target base model.
	TargetBaseModel pulumi.StringPtrInput `pulumi:"targetBaseModel"`
	// Name of Azure Machine Learning workspace.
	WorkspaceName pulumi.StringInput `pulumi:"workspaceName"`
}

func (GetInferenceGroupDeltaModelsStatusAsyncOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInferenceGroupDeltaModelsStatusAsyncArgs)(nil)).Elem()
}

// Contract returning to user the delta models.
type GetInferenceGroupDeltaModelsStatusAsyncResultOutput struct{ *pulumi.OutputState }

func (GetInferenceGroupDeltaModelsStatusAsyncResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInferenceGroupDeltaModelsStatusAsyncResult)(nil)).Elem()
}

func (o GetInferenceGroupDeltaModelsStatusAsyncResultOutput) ToGetInferenceGroupDeltaModelsStatusAsyncResultOutput() GetInferenceGroupDeltaModelsStatusAsyncResultOutput {
	return o
}

func (o GetInferenceGroupDeltaModelsStatusAsyncResultOutput) ToGetInferenceGroupDeltaModelsStatusAsyncResultOutputWithContext(ctx context.Context) GetInferenceGroupDeltaModelsStatusAsyncResultOutput {
	return o
}

// Gets or sets actual instance count.
func (o GetInferenceGroupDeltaModelsStatusAsyncResultOutput) ActualInstanceCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetInferenceGroupDeltaModelsStatusAsyncResult) *int { return v.ActualInstanceCount }).(pulumi.IntPtrOutput)
}

// Gets or sets dictionary representing modelID and its current state.
func (o GetInferenceGroupDeltaModelsStatusAsyncResultOutput) DeltaModels() DeltaModelCurrentStateResponseArrayMapOutput {
	return o.ApplyT(func(v GetInferenceGroupDeltaModelsStatusAsyncResult) map[string][]DeltaModelCurrentStateResponse {
		return v.DeltaModels
	}).(DeltaModelCurrentStateResponseArrayMapOutput)
}

// Gets or sets expected instance count.
func (o GetInferenceGroupDeltaModelsStatusAsyncResultOutput) ExpectedInstanceCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetInferenceGroupDeltaModelsStatusAsyncResult) *int { return v.ExpectedInstanceCount }).(pulumi.IntPtrOutput)
}

// Gets or sets revision ID.
func (o GetInferenceGroupDeltaModelsStatusAsyncResultOutput) RevisionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetInferenceGroupDeltaModelsStatusAsyncResult) *string { return v.RevisionId }).(pulumi.StringPtrOutput)
}

// Gets or sets target base model.
func (o GetInferenceGroupDeltaModelsStatusAsyncResultOutput) TargetBaseModel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetInferenceGroupDeltaModelsStatusAsyncResult) *string { return v.TargetBaseModel }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetInferenceGroupDeltaModelsStatusAsyncResultOutput{})
}
