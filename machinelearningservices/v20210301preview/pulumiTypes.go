// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20210301preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = utilities.GetEnvOrDefault

// Account key datastore credentials configuration.
type AccountKeyDatastoreCredentials struct {
	// Enum to determine the datastore credentials type.
	// Expected value is 'AccountKey'.
	CredentialsType string `pulumi:"credentialsType"`
	// Storage account secrets.
	Secrets *AccountKeyDatastoreSecrets `pulumi:"secrets"`
}

// AccountKeyDatastoreCredentialsInput is an input type that accepts AccountKeyDatastoreCredentialsArgs and AccountKeyDatastoreCredentialsOutput values.
// You can construct a concrete instance of `AccountKeyDatastoreCredentialsInput` via:
//
//	AccountKeyDatastoreCredentialsArgs{...}
type AccountKeyDatastoreCredentialsInput interface {
	pulumi.Input

	ToAccountKeyDatastoreCredentialsOutput() AccountKeyDatastoreCredentialsOutput
	ToAccountKeyDatastoreCredentialsOutputWithContext(context.Context) AccountKeyDatastoreCredentialsOutput
}

// Account key datastore credentials configuration.
type AccountKeyDatastoreCredentialsArgs struct {
	// Enum to determine the datastore credentials type.
	// Expected value is 'AccountKey'.
	CredentialsType pulumi.StringInput `pulumi:"credentialsType"`
	// Storage account secrets.
	Secrets AccountKeyDatastoreSecretsPtrInput `pulumi:"secrets"`
}

func (AccountKeyDatastoreCredentialsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccountKeyDatastoreCredentials)(nil)).Elem()
}

func (i AccountKeyDatastoreCredentialsArgs) ToAccountKeyDatastoreCredentialsOutput() AccountKeyDatastoreCredentialsOutput {
	return i.ToAccountKeyDatastoreCredentialsOutputWithContext(context.Background())
}

func (i AccountKeyDatastoreCredentialsArgs) ToAccountKeyDatastoreCredentialsOutputWithContext(ctx context.Context) AccountKeyDatastoreCredentialsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountKeyDatastoreCredentialsOutput)
}

// Account key datastore credentials configuration.
type AccountKeyDatastoreCredentialsOutput struct{ *pulumi.OutputState }

func (AccountKeyDatastoreCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccountKeyDatastoreCredentials)(nil)).Elem()
}

func (o AccountKeyDatastoreCredentialsOutput) ToAccountKeyDatastoreCredentialsOutput() AccountKeyDatastoreCredentialsOutput {
	return o
}

func (o AccountKeyDatastoreCredentialsOutput) ToAccountKeyDatastoreCredentialsOutputWithContext(ctx context.Context) AccountKeyDatastoreCredentialsOutput {
	return o
}

// Enum to determine the datastore credentials type.
// Expected value is 'AccountKey'.
func (o AccountKeyDatastoreCredentialsOutput) CredentialsType() pulumi.StringOutput {
	return o.ApplyT(func(v AccountKeyDatastoreCredentials) string { return v.CredentialsType }).(pulumi.StringOutput)
}

// Storage account secrets.
func (o AccountKeyDatastoreCredentialsOutput) Secrets() AccountKeyDatastoreSecretsPtrOutput {
	return o.ApplyT(func(v AccountKeyDatastoreCredentials) *AccountKeyDatastoreSecrets { return v.Secrets }).(AccountKeyDatastoreSecretsPtrOutput)
}

// Account key datastore credentials configuration.
type AccountKeyDatastoreCredentialsResponse struct {
	// Enum to determine the datastore credentials type.
	// Expected value is 'AccountKey'.
	CredentialsType string `pulumi:"credentialsType"`
}

// Account key datastore credentials configuration.
type AccountKeyDatastoreCredentialsResponseOutput struct{ *pulumi.OutputState }

func (AccountKeyDatastoreCredentialsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccountKeyDatastoreCredentialsResponse)(nil)).Elem()
}

func (o AccountKeyDatastoreCredentialsResponseOutput) ToAccountKeyDatastoreCredentialsResponseOutput() AccountKeyDatastoreCredentialsResponseOutput {
	return o
}

func (o AccountKeyDatastoreCredentialsResponseOutput) ToAccountKeyDatastoreCredentialsResponseOutputWithContext(ctx context.Context) AccountKeyDatastoreCredentialsResponseOutput {
	return o
}

// Enum to determine the datastore credentials type.
// Expected value is 'AccountKey'.
func (o AccountKeyDatastoreCredentialsResponseOutput) CredentialsType() pulumi.StringOutput {
	return o.ApplyT(func(v AccountKeyDatastoreCredentialsResponse) string { return v.CredentialsType }).(pulumi.StringOutput)
}

// Datastore account key secrets.
type AccountKeyDatastoreSecrets struct {
	// Storage account key.
	Key *string `pulumi:"key"`
	// Enum to determine the datastore secrets type.
	// Expected value is 'AccountKey'.
	SecretsType string `pulumi:"secretsType"`
}

// AccountKeyDatastoreSecretsInput is an input type that accepts AccountKeyDatastoreSecretsArgs and AccountKeyDatastoreSecretsOutput values.
// You can construct a concrete instance of `AccountKeyDatastoreSecretsInput` via:
//
//	AccountKeyDatastoreSecretsArgs{...}
type AccountKeyDatastoreSecretsInput interface {
	pulumi.Input

	ToAccountKeyDatastoreSecretsOutput() AccountKeyDatastoreSecretsOutput
	ToAccountKeyDatastoreSecretsOutputWithContext(context.Context) AccountKeyDatastoreSecretsOutput
}

// Datastore account key secrets.
type AccountKeyDatastoreSecretsArgs struct {
	// Storage account key.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Enum to determine the datastore secrets type.
	// Expected value is 'AccountKey'.
	SecretsType pulumi.StringInput `pulumi:"secretsType"`
}

func (AccountKeyDatastoreSecretsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccountKeyDatastoreSecrets)(nil)).Elem()
}

func (i AccountKeyDatastoreSecretsArgs) ToAccountKeyDatastoreSecretsOutput() AccountKeyDatastoreSecretsOutput {
	return i.ToAccountKeyDatastoreSecretsOutputWithContext(context.Background())
}

func (i AccountKeyDatastoreSecretsArgs) ToAccountKeyDatastoreSecretsOutputWithContext(ctx context.Context) AccountKeyDatastoreSecretsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountKeyDatastoreSecretsOutput)
}

func (i AccountKeyDatastoreSecretsArgs) ToAccountKeyDatastoreSecretsPtrOutput() AccountKeyDatastoreSecretsPtrOutput {
	return i.ToAccountKeyDatastoreSecretsPtrOutputWithContext(context.Background())
}

func (i AccountKeyDatastoreSecretsArgs) ToAccountKeyDatastoreSecretsPtrOutputWithContext(ctx context.Context) AccountKeyDatastoreSecretsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountKeyDatastoreSecretsOutput).ToAccountKeyDatastoreSecretsPtrOutputWithContext(ctx)
}

// AccountKeyDatastoreSecretsPtrInput is an input type that accepts AccountKeyDatastoreSecretsArgs, AccountKeyDatastoreSecretsPtr and AccountKeyDatastoreSecretsPtrOutput values.
// You can construct a concrete instance of `AccountKeyDatastoreSecretsPtrInput` via:
//
//	        AccountKeyDatastoreSecretsArgs{...}
//
//	or:
//
//	        nil
type AccountKeyDatastoreSecretsPtrInput interface {
	pulumi.Input

	ToAccountKeyDatastoreSecretsPtrOutput() AccountKeyDatastoreSecretsPtrOutput
	ToAccountKeyDatastoreSecretsPtrOutputWithContext(context.Context) AccountKeyDatastoreSecretsPtrOutput
}

type accountKeyDatastoreSecretsPtrType AccountKeyDatastoreSecretsArgs

func AccountKeyDatastoreSecretsPtr(v *AccountKeyDatastoreSecretsArgs) AccountKeyDatastoreSecretsPtrInput {
	return (*accountKeyDatastoreSecretsPtrType)(v)
}

func (*accountKeyDatastoreSecretsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AccountKeyDatastoreSecrets)(nil)).Elem()
}

func (i *accountKeyDatastoreSecretsPtrType) ToAccountKeyDatastoreSecretsPtrOutput() AccountKeyDatastoreSecretsPtrOutput {
	return i.ToAccountKeyDatastoreSecretsPtrOutputWithContext(context.Background())
}

func (i *accountKeyDatastoreSecretsPtrType) ToAccountKeyDatastoreSecretsPtrOutputWithContext(ctx context.Context) AccountKeyDatastoreSecretsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountKeyDatastoreSecretsPtrOutput)
}

// Datastore account key secrets.
type AccountKeyDatastoreSecretsOutput struct{ *pulumi.OutputState }

func (AccountKeyDatastoreSecretsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccountKeyDatastoreSecrets)(nil)).Elem()
}

func (o AccountKeyDatastoreSecretsOutput) ToAccountKeyDatastoreSecretsOutput() AccountKeyDatastoreSecretsOutput {
	return o
}

func (o AccountKeyDatastoreSecretsOutput) ToAccountKeyDatastoreSecretsOutputWithContext(ctx context.Context) AccountKeyDatastoreSecretsOutput {
	return o
}

func (o AccountKeyDatastoreSecretsOutput) ToAccountKeyDatastoreSecretsPtrOutput() AccountKeyDatastoreSecretsPtrOutput {
	return o.ToAccountKeyDatastoreSecretsPtrOutputWithContext(context.Background())
}

func (o AccountKeyDatastoreSecretsOutput) ToAccountKeyDatastoreSecretsPtrOutputWithContext(ctx context.Context) AccountKeyDatastoreSecretsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AccountKeyDatastoreSecrets) *AccountKeyDatastoreSecrets {
		return &v
	}).(AccountKeyDatastoreSecretsPtrOutput)
}

// Storage account key.
func (o AccountKeyDatastoreSecretsOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccountKeyDatastoreSecrets) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Enum to determine the datastore secrets type.
// Expected value is 'AccountKey'.
func (o AccountKeyDatastoreSecretsOutput) SecretsType() pulumi.StringOutput {
	return o.ApplyT(func(v AccountKeyDatastoreSecrets) string { return v.SecretsType }).(pulumi.StringOutput)
}

type AccountKeyDatastoreSecretsPtrOutput struct{ *pulumi.OutputState }

func (AccountKeyDatastoreSecretsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AccountKeyDatastoreSecrets)(nil)).Elem()
}

func (o AccountKeyDatastoreSecretsPtrOutput) ToAccountKeyDatastoreSecretsPtrOutput() AccountKeyDatastoreSecretsPtrOutput {
	return o
}

func (o AccountKeyDatastoreSecretsPtrOutput) ToAccountKeyDatastoreSecretsPtrOutputWithContext(ctx context.Context) AccountKeyDatastoreSecretsPtrOutput {
	return o
}

func (o AccountKeyDatastoreSecretsPtrOutput) Elem() AccountKeyDatastoreSecretsOutput {
	return o.ApplyT(func(v *AccountKeyDatastoreSecrets) AccountKeyDatastoreSecrets {
		if v != nil {
			return *v
		}
		var ret AccountKeyDatastoreSecrets
		return ret
	}).(AccountKeyDatastoreSecretsOutput)
}

// Storage account key.
func (o AccountKeyDatastoreSecretsPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccountKeyDatastoreSecrets) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Enum to determine the datastore secrets type.
// Expected value is 'AccountKey'.
func (o AccountKeyDatastoreSecretsPtrOutput) SecretsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccountKeyDatastoreSecrets) *string {
		if v == nil {
			return nil
		}
		return &v.SecretsType
	}).(pulumi.StringPtrOutput)
}

// AML Token identity configuration.
type AmlToken struct {
	// Enum to determine identity framework.
	// Expected value is 'AMLToken'.
	IdentityType string `pulumi:"identityType"`
}

// AmlTokenInput is an input type that accepts AmlTokenArgs and AmlTokenOutput values.
// You can construct a concrete instance of `AmlTokenInput` via:
//
//	AmlTokenArgs{...}
type AmlTokenInput interface {
	pulumi.Input

	ToAmlTokenOutput() AmlTokenOutput
	ToAmlTokenOutputWithContext(context.Context) AmlTokenOutput
}

// AML Token identity configuration.
type AmlTokenArgs struct {
	// Enum to determine identity framework.
	// Expected value is 'AMLToken'.
	IdentityType pulumi.StringInput `pulumi:"identityType"`
}

func (AmlTokenArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AmlToken)(nil)).Elem()
}

func (i AmlTokenArgs) ToAmlTokenOutput() AmlTokenOutput {
	return i.ToAmlTokenOutputWithContext(context.Background())
}

func (i AmlTokenArgs) ToAmlTokenOutputWithContext(ctx context.Context) AmlTokenOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AmlTokenOutput)
}

func (i AmlTokenArgs) ToAmlTokenPtrOutput() AmlTokenPtrOutput {
	return i.ToAmlTokenPtrOutputWithContext(context.Background())
}

func (i AmlTokenArgs) ToAmlTokenPtrOutputWithContext(ctx context.Context) AmlTokenPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AmlTokenOutput).ToAmlTokenPtrOutputWithContext(ctx)
}

// AmlTokenPtrInput is an input type that accepts AmlTokenArgs, AmlTokenPtr and AmlTokenPtrOutput values.
// You can construct a concrete instance of `AmlTokenPtrInput` via:
//
//	        AmlTokenArgs{...}
//
//	or:
//
//	        nil
type AmlTokenPtrInput interface {
	pulumi.Input

	ToAmlTokenPtrOutput() AmlTokenPtrOutput
	ToAmlTokenPtrOutputWithContext(context.Context) AmlTokenPtrOutput
}

type amlTokenPtrType AmlTokenArgs

func AmlTokenPtr(v *AmlTokenArgs) AmlTokenPtrInput {
	return (*amlTokenPtrType)(v)
}

func (*amlTokenPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AmlToken)(nil)).Elem()
}

func (i *amlTokenPtrType) ToAmlTokenPtrOutput() AmlTokenPtrOutput {
	return i.ToAmlTokenPtrOutputWithContext(context.Background())
}

func (i *amlTokenPtrType) ToAmlTokenPtrOutputWithContext(ctx context.Context) AmlTokenPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AmlTokenPtrOutput)
}

// AML Token identity configuration.
type AmlTokenOutput struct{ *pulumi.OutputState }

func (AmlTokenOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AmlToken)(nil)).Elem()
}

func (o AmlTokenOutput) ToAmlTokenOutput() AmlTokenOutput {
	return o
}

func (o AmlTokenOutput) ToAmlTokenOutputWithContext(ctx context.Context) AmlTokenOutput {
	return o
}

func (o AmlTokenOutput) ToAmlTokenPtrOutput() AmlTokenPtrOutput {
	return o.ToAmlTokenPtrOutputWithContext(context.Background())
}

func (o AmlTokenOutput) ToAmlTokenPtrOutputWithContext(ctx context.Context) AmlTokenPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AmlToken) *AmlToken {
		return &v
	}).(AmlTokenPtrOutput)
}

// Enum to determine identity framework.
// Expected value is 'AMLToken'.
func (o AmlTokenOutput) IdentityType() pulumi.StringOutput {
	return o.ApplyT(func(v AmlToken) string { return v.IdentityType }).(pulumi.StringOutput)
}

type AmlTokenPtrOutput struct{ *pulumi.OutputState }

func (AmlTokenPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AmlToken)(nil)).Elem()
}

func (o AmlTokenPtrOutput) ToAmlTokenPtrOutput() AmlTokenPtrOutput {
	return o
}

func (o AmlTokenPtrOutput) ToAmlTokenPtrOutputWithContext(ctx context.Context) AmlTokenPtrOutput {
	return o
}

func (o AmlTokenPtrOutput) Elem() AmlTokenOutput {
	return o.ApplyT(func(v *AmlToken) AmlToken {
		if v != nil {
			return *v
		}
		var ret AmlToken
		return ret
	}).(AmlTokenOutput)
}

// Enum to determine identity framework.
// Expected value is 'AMLToken'.
func (o AmlTokenPtrOutput) IdentityType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AmlToken) *string {
		if v == nil {
			return nil
		}
		return &v.IdentityType
	}).(pulumi.StringPtrOutput)
}

// AML Token identity configuration.
type AmlTokenResponse struct {
	// Enum to determine identity framework.
	// Expected value is 'AMLToken'.
	IdentityType string `pulumi:"identityType"`
}

// AML Token identity configuration.
type AmlTokenResponseOutput struct{ *pulumi.OutputState }

func (AmlTokenResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AmlTokenResponse)(nil)).Elem()
}

func (o AmlTokenResponseOutput) ToAmlTokenResponseOutput() AmlTokenResponseOutput {
	return o
}

func (o AmlTokenResponseOutput) ToAmlTokenResponseOutputWithContext(ctx context.Context) AmlTokenResponseOutput {
	return o
}

// Enum to determine identity framework.
// Expected value is 'AMLToken'.
func (o AmlTokenResponseOutput) IdentityType() pulumi.StringOutput {
	return o.ApplyT(func(v AmlTokenResponse) string { return v.IdentityType }).(pulumi.StringOutput)
}

type AmlTokenResponsePtrOutput struct{ *pulumi.OutputState }

func (AmlTokenResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AmlTokenResponse)(nil)).Elem()
}

func (o AmlTokenResponsePtrOutput) ToAmlTokenResponsePtrOutput() AmlTokenResponsePtrOutput {
	return o
}

func (o AmlTokenResponsePtrOutput) ToAmlTokenResponsePtrOutputWithContext(ctx context.Context) AmlTokenResponsePtrOutput {
	return o
}

func (o AmlTokenResponsePtrOutput) Elem() AmlTokenResponseOutput {
	return o.ApplyT(func(v *AmlTokenResponse) AmlTokenResponse {
		if v != nil {
			return *v
		}
		var ret AmlTokenResponse
		return ret
	}).(AmlTokenResponseOutput)
}

// Enum to determine identity framework.
// Expected value is 'AMLToken'.
func (o AmlTokenResponsePtrOutput) IdentityType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AmlTokenResponse) *string {
		if v == nil {
			return nil
		}
		return &v.IdentityType
	}).(pulumi.StringPtrOutput)
}

type AutoScaleSettings struct {
	// Maximum number of instances for this deployment.
	MaxInstances *int `pulumi:"maxInstances"`
	// Minimum number of instances for this deployment.
	MinInstances *int `pulumi:"minInstances"`
	// The polling interval in ISO 8691 format. Only supports duration with precision as low as Seconds.
	PollingInterval *string `pulumi:"pollingInterval"`
	// Expected value is 'Auto'.
	ScaleType string `pulumi:"scaleType"`
	// Target CPU usage for the autoscaler.
	TargetUtilizationPercentage *int `pulumi:"targetUtilizationPercentage"`
}

// AutoScaleSettingsInput is an input type that accepts AutoScaleSettingsArgs and AutoScaleSettingsOutput values.
// You can construct a concrete instance of `AutoScaleSettingsInput` via:
//
//	AutoScaleSettingsArgs{...}
type AutoScaleSettingsInput interface {
	pulumi.Input

	ToAutoScaleSettingsOutput() AutoScaleSettingsOutput
	ToAutoScaleSettingsOutputWithContext(context.Context) AutoScaleSettingsOutput
}

type AutoScaleSettingsArgs struct {
	// Maximum number of instances for this deployment.
	MaxInstances pulumi.IntPtrInput `pulumi:"maxInstances"`
	// Minimum number of instances for this deployment.
	MinInstances pulumi.IntPtrInput `pulumi:"minInstances"`
	// The polling interval in ISO 8691 format. Only supports duration with precision as low as Seconds.
	PollingInterval pulumi.StringPtrInput `pulumi:"pollingInterval"`
	// Expected value is 'Auto'.
	ScaleType pulumi.StringInput `pulumi:"scaleType"`
	// Target CPU usage for the autoscaler.
	TargetUtilizationPercentage pulumi.IntPtrInput `pulumi:"targetUtilizationPercentage"`
}

func (AutoScaleSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoScaleSettings)(nil)).Elem()
}

func (i AutoScaleSettingsArgs) ToAutoScaleSettingsOutput() AutoScaleSettingsOutput {
	return i.ToAutoScaleSettingsOutputWithContext(context.Background())
}

func (i AutoScaleSettingsArgs) ToAutoScaleSettingsOutputWithContext(ctx context.Context) AutoScaleSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoScaleSettingsOutput)
}

func (i AutoScaleSettingsArgs) ToAutoScaleSettingsPtrOutput() AutoScaleSettingsPtrOutput {
	return i.ToAutoScaleSettingsPtrOutputWithContext(context.Background())
}

func (i AutoScaleSettingsArgs) ToAutoScaleSettingsPtrOutputWithContext(ctx context.Context) AutoScaleSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoScaleSettingsOutput).ToAutoScaleSettingsPtrOutputWithContext(ctx)
}

// AutoScaleSettingsPtrInput is an input type that accepts AutoScaleSettingsArgs, AutoScaleSettingsPtr and AutoScaleSettingsPtrOutput values.
// You can construct a concrete instance of `AutoScaleSettingsPtrInput` via:
//
//	        AutoScaleSettingsArgs{...}
//
//	or:
//
//	        nil
type AutoScaleSettingsPtrInput interface {
	pulumi.Input

	ToAutoScaleSettingsPtrOutput() AutoScaleSettingsPtrOutput
	ToAutoScaleSettingsPtrOutputWithContext(context.Context) AutoScaleSettingsPtrOutput
}

type autoScaleSettingsPtrType AutoScaleSettingsArgs

func AutoScaleSettingsPtr(v *AutoScaleSettingsArgs) AutoScaleSettingsPtrInput {
	return (*autoScaleSettingsPtrType)(v)
}

func (*autoScaleSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoScaleSettings)(nil)).Elem()
}

func (i *autoScaleSettingsPtrType) ToAutoScaleSettingsPtrOutput() AutoScaleSettingsPtrOutput {
	return i.ToAutoScaleSettingsPtrOutputWithContext(context.Background())
}

func (i *autoScaleSettingsPtrType) ToAutoScaleSettingsPtrOutputWithContext(ctx context.Context) AutoScaleSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoScaleSettingsPtrOutput)
}

type AutoScaleSettingsOutput struct{ *pulumi.OutputState }

func (AutoScaleSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoScaleSettings)(nil)).Elem()
}

func (o AutoScaleSettingsOutput) ToAutoScaleSettingsOutput() AutoScaleSettingsOutput {
	return o
}

func (o AutoScaleSettingsOutput) ToAutoScaleSettingsOutputWithContext(ctx context.Context) AutoScaleSettingsOutput {
	return o
}

func (o AutoScaleSettingsOutput) ToAutoScaleSettingsPtrOutput() AutoScaleSettingsPtrOutput {
	return o.ToAutoScaleSettingsPtrOutputWithContext(context.Background())
}

func (o AutoScaleSettingsOutput) ToAutoScaleSettingsPtrOutputWithContext(ctx context.Context) AutoScaleSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AutoScaleSettings) *AutoScaleSettings {
		return &v
	}).(AutoScaleSettingsPtrOutput)
}

// Maximum number of instances for this deployment.
func (o AutoScaleSettingsOutput) MaxInstances() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AutoScaleSettings) *int { return v.MaxInstances }).(pulumi.IntPtrOutput)
}

// Minimum number of instances for this deployment.
func (o AutoScaleSettingsOutput) MinInstances() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AutoScaleSettings) *int { return v.MinInstances }).(pulumi.IntPtrOutput)
}

// The polling interval in ISO 8691 format. Only supports duration with precision as low as Seconds.
func (o AutoScaleSettingsOutput) PollingInterval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AutoScaleSettings) *string { return v.PollingInterval }).(pulumi.StringPtrOutput)
}

// Expected value is 'Auto'.
func (o AutoScaleSettingsOutput) ScaleType() pulumi.StringOutput {
	return o.ApplyT(func(v AutoScaleSettings) string { return v.ScaleType }).(pulumi.StringOutput)
}

// Target CPU usage for the autoscaler.
func (o AutoScaleSettingsOutput) TargetUtilizationPercentage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AutoScaleSettings) *int { return v.TargetUtilizationPercentage }).(pulumi.IntPtrOutput)
}

type AutoScaleSettingsPtrOutput struct{ *pulumi.OutputState }

func (AutoScaleSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoScaleSettings)(nil)).Elem()
}

func (o AutoScaleSettingsPtrOutput) ToAutoScaleSettingsPtrOutput() AutoScaleSettingsPtrOutput {
	return o
}

func (o AutoScaleSettingsPtrOutput) ToAutoScaleSettingsPtrOutputWithContext(ctx context.Context) AutoScaleSettingsPtrOutput {
	return o
}

func (o AutoScaleSettingsPtrOutput) Elem() AutoScaleSettingsOutput {
	return o.ApplyT(func(v *AutoScaleSettings) AutoScaleSettings {
		if v != nil {
			return *v
		}
		var ret AutoScaleSettings
		return ret
	}).(AutoScaleSettingsOutput)
}

// Maximum number of instances for this deployment.
func (o AutoScaleSettingsPtrOutput) MaxInstances() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AutoScaleSettings) *int {
		if v == nil {
			return nil
		}
		return v.MaxInstances
	}).(pulumi.IntPtrOutput)
}

// Minimum number of instances for this deployment.
func (o AutoScaleSettingsPtrOutput) MinInstances() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AutoScaleSettings) *int {
		if v == nil {
			return nil
		}
		return v.MinInstances
	}).(pulumi.IntPtrOutput)
}

// The polling interval in ISO 8691 format. Only supports duration with precision as low as Seconds.
func (o AutoScaleSettingsPtrOutput) PollingInterval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AutoScaleSettings) *string {
		if v == nil {
			return nil
		}
		return v.PollingInterval
	}).(pulumi.StringPtrOutput)
}

// Expected value is 'Auto'.
func (o AutoScaleSettingsPtrOutput) ScaleType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AutoScaleSettings) *string {
		if v == nil {
			return nil
		}
		return &v.ScaleType
	}).(pulumi.StringPtrOutput)
}

// Target CPU usage for the autoscaler.
func (o AutoScaleSettingsPtrOutput) TargetUtilizationPercentage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AutoScaleSettings) *int {
		if v == nil {
			return nil
		}
		return v.TargetUtilizationPercentage
	}).(pulumi.IntPtrOutput)
}

type AutoScaleSettingsResponse struct {
	// Maximum number of instances for this deployment.
	MaxInstances *int `pulumi:"maxInstances"`
	// Minimum number of instances for this deployment.
	MinInstances *int `pulumi:"minInstances"`
	// The polling interval in ISO 8691 format. Only supports duration with precision as low as Seconds.
	PollingInterval *string `pulumi:"pollingInterval"`
	// Expected value is 'Auto'.
	ScaleType string `pulumi:"scaleType"`
	// Target CPU usage for the autoscaler.
	TargetUtilizationPercentage *int `pulumi:"targetUtilizationPercentage"`
}

type AutoScaleSettingsResponseOutput struct{ *pulumi.OutputState }

func (AutoScaleSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoScaleSettingsResponse)(nil)).Elem()
}

func (o AutoScaleSettingsResponseOutput) ToAutoScaleSettingsResponseOutput() AutoScaleSettingsResponseOutput {
	return o
}

func (o AutoScaleSettingsResponseOutput) ToAutoScaleSettingsResponseOutputWithContext(ctx context.Context) AutoScaleSettingsResponseOutput {
	return o
}

// Maximum number of instances for this deployment.
func (o AutoScaleSettingsResponseOutput) MaxInstances() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AutoScaleSettingsResponse) *int { return v.MaxInstances }).(pulumi.IntPtrOutput)
}

// Minimum number of instances for this deployment.
func (o AutoScaleSettingsResponseOutput) MinInstances() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AutoScaleSettingsResponse) *int { return v.MinInstances }).(pulumi.IntPtrOutput)
}

// The polling interval in ISO 8691 format. Only supports duration with precision as low as Seconds.
func (o AutoScaleSettingsResponseOutput) PollingInterval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AutoScaleSettingsResponse) *string { return v.PollingInterval }).(pulumi.StringPtrOutput)
}

// Expected value is 'Auto'.
func (o AutoScaleSettingsResponseOutput) ScaleType() pulumi.StringOutput {
	return o.ApplyT(func(v AutoScaleSettingsResponse) string { return v.ScaleType }).(pulumi.StringOutput)
}

// Target CPU usage for the autoscaler.
func (o AutoScaleSettingsResponseOutput) TargetUtilizationPercentage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AutoScaleSettingsResponse) *int { return v.TargetUtilizationPercentage }).(pulumi.IntPtrOutput)
}

type AutoScaleSettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (AutoScaleSettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoScaleSettingsResponse)(nil)).Elem()
}

func (o AutoScaleSettingsResponsePtrOutput) ToAutoScaleSettingsResponsePtrOutput() AutoScaleSettingsResponsePtrOutput {
	return o
}

func (o AutoScaleSettingsResponsePtrOutput) ToAutoScaleSettingsResponsePtrOutputWithContext(ctx context.Context) AutoScaleSettingsResponsePtrOutput {
	return o
}

func (o AutoScaleSettingsResponsePtrOutput) Elem() AutoScaleSettingsResponseOutput {
	return o.ApplyT(func(v *AutoScaleSettingsResponse) AutoScaleSettingsResponse {
		if v != nil {
			return *v
		}
		var ret AutoScaleSettingsResponse
		return ret
	}).(AutoScaleSettingsResponseOutput)
}

// Maximum number of instances for this deployment.
func (o AutoScaleSettingsResponsePtrOutput) MaxInstances() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AutoScaleSettingsResponse) *int {
		if v == nil {
			return nil
		}
		return v.MaxInstances
	}).(pulumi.IntPtrOutput)
}

// Minimum number of instances for this deployment.
func (o AutoScaleSettingsResponsePtrOutput) MinInstances() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AutoScaleSettingsResponse) *int {
		if v == nil {
			return nil
		}
		return v.MinInstances
	}).(pulumi.IntPtrOutput)
}

// The polling interval in ISO 8691 format. Only supports duration with precision as low as Seconds.
func (o AutoScaleSettingsResponsePtrOutput) PollingInterval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AutoScaleSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.PollingInterval
	}).(pulumi.StringPtrOutput)
}

// Expected value is 'Auto'.
func (o AutoScaleSettingsResponsePtrOutput) ScaleType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AutoScaleSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ScaleType
	}).(pulumi.StringPtrOutput)
}

// Target CPU usage for the autoscaler.
func (o AutoScaleSettingsResponsePtrOutput) TargetUtilizationPercentage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AutoScaleSettingsResponse) *int {
		if v == nil {
			return nil
		}
		return v.TargetUtilizationPercentage
	}).(pulumi.IntPtrOutput)
}

// Azure Blob datastore configuration.
type AzureBlobContents struct {
	// [Required] Storage account name.
	AccountName string `pulumi:"accountName"`
	// [Required] Storage account container name.
	ContainerName string `pulumi:"containerName"`
	// Enum to determine the datastore contents type.
	// Expected value is 'AzureBlob'.
	ContentsType string `pulumi:"contentsType"`
	// [Required] Account credentials.
	Credentials interface{} `pulumi:"credentials"`
	// [Required] Azure cloud endpoint for the storage account.
	Endpoint string `pulumi:"endpoint"`
	// [Required] Protocol used to communicate with the storage account.
	Protocol string `pulumi:"protocol"`
}

// AzureBlobContentsInput is an input type that accepts AzureBlobContentsArgs and AzureBlobContentsOutput values.
// You can construct a concrete instance of `AzureBlobContentsInput` via:
//
//	AzureBlobContentsArgs{...}
type AzureBlobContentsInput interface {
	pulumi.Input

	ToAzureBlobContentsOutput() AzureBlobContentsOutput
	ToAzureBlobContentsOutputWithContext(context.Context) AzureBlobContentsOutput
}

// Azure Blob datastore configuration.
type AzureBlobContentsArgs struct {
	// [Required] Storage account name.
	AccountName pulumi.StringInput `pulumi:"accountName"`
	// [Required] Storage account container name.
	ContainerName pulumi.StringInput `pulumi:"containerName"`
	// Enum to determine the datastore contents type.
	// Expected value is 'AzureBlob'.
	ContentsType pulumi.StringInput `pulumi:"contentsType"`
	// [Required] Account credentials.
	Credentials pulumi.Input `pulumi:"credentials"`
	// [Required] Azure cloud endpoint for the storage account.
	Endpoint pulumi.StringInput `pulumi:"endpoint"`
	// [Required] Protocol used to communicate with the storage account.
	Protocol pulumi.StringInput `pulumi:"protocol"`
}

func (AzureBlobContentsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureBlobContents)(nil)).Elem()
}

func (i AzureBlobContentsArgs) ToAzureBlobContentsOutput() AzureBlobContentsOutput {
	return i.ToAzureBlobContentsOutputWithContext(context.Background())
}

func (i AzureBlobContentsArgs) ToAzureBlobContentsOutputWithContext(ctx context.Context) AzureBlobContentsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureBlobContentsOutput)
}

// Azure Blob datastore configuration.
type AzureBlobContentsOutput struct{ *pulumi.OutputState }

func (AzureBlobContentsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureBlobContents)(nil)).Elem()
}

func (o AzureBlobContentsOutput) ToAzureBlobContentsOutput() AzureBlobContentsOutput {
	return o
}

func (o AzureBlobContentsOutput) ToAzureBlobContentsOutputWithContext(ctx context.Context) AzureBlobContentsOutput {
	return o
}

// [Required] Storage account name.
func (o AzureBlobContentsOutput) AccountName() pulumi.StringOutput {
	return o.ApplyT(func(v AzureBlobContents) string { return v.AccountName }).(pulumi.StringOutput)
}

// [Required] Storage account container name.
func (o AzureBlobContentsOutput) ContainerName() pulumi.StringOutput {
	return o.ApplyT(func(v AzureBlobContents) string { return v.ContainerName }).(pulumi.StringOutput)
}

// Enum to determine the datastore contents type.
// Expected value is 'AzureBlob'.
func (o AzureBlobContentsOutput) ContentsType() pulumi.StringOutput {
	return o.ApplyT(func(v AzureBlobContents) string { return v.ContentsType }).(pulumi.StringOutput)
}

// [Required] Account credentials.
func (o AzureBlobContentsOutput) Credentials() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureBlobContents) interface{} { return v.Credentials }).(pulumi.AnyOutput)
}

// [Required] Azure cloud endpoint for the storage account.
func (o AzureBlobContentsOutput) Endpoint() pulumi.StringOutput {
	return o.ApplyT(func(v AzureBlobContents) string { return v.Endpoint }).(pulumi.StringOutput)
}

// [Required] Protocol used to communicate with the storage account.
func (o AzureBlobContentsOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v AzureBlobContents) string { return v.Protocol }).(pulumi.StringOutput)
}

// Azure Blob datastore configuration.
type AzureBlobContentsResponse struct {
	// [Required] Storage account name.
	AccountName string `pulumi:"accountName"`
	// [Required] Storage account container name.
	ContainerName string `pulumi:"containerName"`
	// Enum to determine the datastore contents type.
	// Expected value is 'AzureBlob'.
	ContentsType string `pulumi:"contentsType"`
	// [Required] Account credentials.
	Credentials interface{} `pulumi:"credentials"`
	// [Required] Azure cloud endpoint for the storage account.
	Endpoint string `pulumi:"endpoint"`
	// [Required] Protocol used to communicate with the storage account.
	Protocol string `pulumi:"protocol"`
}

// Azure Blob datastore configuration.
type AzureBlobContentsResponseOutput struct{ *pulumi.OutputState }

func (AzureBlobContentsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureBlobContentsResponse)(nil)).Elem()
}

func (o AzureBlobContentsResponseOutput) ToAzureBlobContentsResponseOutput() AzureBlobContentsResponseOutput {
	return o
}

func (o AzureBlobContentsResponseOutput) ToAzureBlobContentsResponseOutputWithContext(ctx context.Context) AzureBlobContentsResponseOutput {
	return o
}

// [Required] Storage account name.
func (o AzureBlobContentsResponseOutput) AccountName() pulumi.StringOutput {
	return o.ApplyT(func(v AzureBlobContentsResponse) string { return v.AccountName }).(pulumi.StringOutput)
}

// [Required] Storage account container name.
func (o AzureBlobContentsResponseOutput) ContainerName() pulumi.StringOutput {
	return o.ApplyT(func(v AzureBlobContentsResponse) string { return v.ContainerName }).(pulumi.StringOutput)
}

// Enum to determine the datastore contents type.
// Expected value is 'AzureBlob'.
func (o AzureBlobContentsResponseOutput) ContentsType() pulumi.StringOutput {
	return o.ApplyT(func(v AzureBlobContentsResponse) string { return v.ContentsType }).(pulumi.StringOutput)
}

// [Required] Account credentials.
func (o AzureBlobContentsResponseOutput) Credentials() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureBlobContentsResponse) interface{} { return v.Credentials }).(pulumi.AnyOutput)
}

// [Required] Azure cloud endpoint for the storage account.
func (o AzureBlobContentsResponseOutput) Endpoint() pulumi.StringOutput {
	return o.ApplyT(func(v AzureBlobContentsResponse) string { return v.Endpoint }).(pulumi.StringOutput)
}

// [Required] Protocol used to communicate with the storage account.
func (o AzureBlobContentsResponseOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v AzureBlobContentsResponse) string { return v.Protocol }).(pulumi.StringOutput)
}

// Azure Data Lake Gen1 datastore configuration.
type AzureDataLakeGen1Contents struct {
	// Enum to determine the datastore contents type.
	// Expected value is 'AzureDataLakeGen1'.
	ContentsType string `pulumi:"contentsType"`
	// [Required] Account credentials.
	Credentials interface{} `pulumi:"credentials"`
	// [Required] Azure Data Lake store name.
	StoreName string `pulumi:"storeName"`
}

// AzureDataLakeGen1ContentsInput is an input type that accepts AzureDataLakeGen1ContentsArgs and AzureDataLakeGen1ContentsOutput values.
// You can construct a concrete instance of `AzureDataLakeGen1ContentsInput` via:
//
//	AzureDataLakeGen1ContentsArgs{...}
type AzureDataLakeGen1ContentsInput interface {
	pulumi.Input

	ToAzureDataLakeGen1ContentsOutput() AzureDataLakeGen1ContentsOutput
	ToAzureDataLakeGen1ContentsOutputWithContext(context.Context) AzureDataLakeGen1ContentsOutput
}

// Azure Data Lake Gen1 datastore configuration.
type AzureDataLakeGen1ContentsArgs struct {
	// Enum to determine the datastore contents type.
	// Expected value is 'AzureDataLakeGen1'.
	ContentsType pulumi.StringInput `pulumi:"contentsType"`
	// [Required] Account credentials.
	Credentials pulumi.Input `pulumi:"credentials"`
	// [Required] Azure Data Lake store name.
	StoreName pulumi.StringInput `pulumi:"storeName"`
}

func (AzureDataLakeGen1ContentsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureDataLakeGen1Contents)(nil)).Elem()
}

func (i AzureDataLakeGen1ContentsArgs) ToAzureDataLakeGen1ContentsOutput() AzureDataLakeGen1ContentsOutput {
	return i.ToAzureDataLakeGen1ContentsOutputWithContext(context.Background())
}

func (i AzureDataLakeGen1ContentsArgs) ToAzureDataLakeGen1ContentsOutputWithContext(ctx context.Context) AzureDataLakeGen1ContentsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureDataLakeGen1ContentsOutput)
}

// Azure Data Lake Gen1 datastore configuration.
type AzureDataLakeGen1ContentsOutput struct{ *pulumi.OutputState }

func (AzureDataLakeGen1ContentsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureDataLakeGen1Contents)(nil)).Elem()
}

func (o AzureDataLakeGen1ContentsOutput) ToAzureDataLakeGen1ContentsOutput() AzureDataLakeGen1ContentsOutput {
	return o
}

func (o AzureDataLakeGen1ContentsOutput) ToAzureDataLakeGen1ContentsOutputWithContext(ctx context.Context) AzureDataLakeGen1ContentsOutput {
	return o
}

// Enum to determine the datastore contents type.
// Expected value is 'AzureDataLakeGen1'.
func (o AzureDataLakeGen1ContentsOutput) ContentsType() pulumi.StringOutput {
	return o.ApplyT(func(v AzureDataLakeGen1Contents) string { return v.ContentsType }).(pulumi.StringOutput)
}

// [Required] Account credentials.
func (o AzureDataLakeGen1ContentsOutput) Credentials() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureDataLakeGen1Contents) interface{} { return v.Credentials }).(pulumi.AnyOutput)
}

// [Required] Azure Data Lake store name.
func (o AzureDataLakeGen1ContentsOutput) StoreName() pulumi.StringOutput {
	return o.ApplyT(func(v AzureDataLakeGen1Contents) string { return v.StoreName }).(pulumi.StringOutput)
}

// Azure Data Lake Gen1 datastore configuration.
type AzureDataLakeGen1ContentsResponse struct {
	// Enum to determine the datastore contents type.
	// Expected value is 'AzureDataLakeGen1'.
	ContentsType string `pulumi:"contentsType"`
	// [Required] Account credentials.
	Credentials interface{} `pulumi:"credentials"`
	// [Required] Azure Data Lake store name.
	StoreName string `pulumi:"storeName"`
}

// Azure Data Lake Gen1 datastore configuration.
type AzureDataLakeGen1ContentsResponseOutput struct{ *pulumi.OutputState }

func (AzureDataLakeGen1ContentsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureDataLakeGen1ContentsResponse)(nil)).Elem()
}

func (o AzureDataLakeGen1ContentsResponseOutput) ToAzureDataLakeGen1ContentsResponseOutput() AzureDataLakeGen1ContentsResponseOutput {
	return o
}

func (o AzureDataLakeGen1ContentsResponseOutput) ToAzureDataLakeGen1ContentsResponseOutputWithContext(ctx context.Context) AzureDataLakeGen1ContentsResponseOutput {
	return o
}

// Enum to determine the datastore contents type.
// Expected value is 'AzureDataLakeGen1'.
func (o AzureDataLakeGen1ContentsResponseOutput) ContentsType() pulumi.StringOutput {
	return o.ApplyT(func(v AzureDataLakeGen1ContentsResponse) string { return v.ContentsType }).(pulumi.StringOutput)
}

// [Required] Account credentials.
func (o AzureDataLakeGen1ContentsResponseOutput) Credentials() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureDataLakeGen1ContentsResponse) interface{} { return v.Credentials }).(pulumi.AnyOutput)
}

// [Required] Azure Data Lake store name.
func (o AzureDataLakeGen1ContentsResponseOutput) StoreName() pulumi.StringOutput {
	return o.ApplyT(func(v AzureDataLakeGen1ContentsResponse) string { return v.StoreName }).(pulumi.StringOutput)
}

// Azure Data Lake Gen2 datastore configuration.
type AzureDataLakeGen2Contents struct {
	// [Required] Storage account name.
	AccountName string `pulumi:"accountName"`
	// [Required] Storage account container name.
	ContainerName string `pulumi:"containerName"`
	// Enum to determine the datastore contents type.
	// Expected value is 'AzureDataLakeGen2'.
	ContentsType string `pulumi:"contentsType"`
	// [Required] Account credentials.
	Credentials interface{} `pulumi:"credentials"`
	// [Required] Azure cloud endpoint for the storage account.
	Endpoint string `pulumi:"endpoint"`
	// [Required] Protocol used to communicate with the storage account.
	Protocol string `pulumi:"protocol"`
}

// AzureDataLakeGen2ContentsInput is an input type that accepts AzureDataLakeGen2ContentsArgs and AzureDataLakeGen2ContentsOutput values.
// You can construct a concrete instance of `AzureDataLakeGen2ContentsInput` via:
//
//	AzureDataLakeGen2ContentsArgs{...}
type AzureDataLakeGen2ContentsInput interface {
	pulumi.Input

	ToAzureDataLakeGen2ContentsOutput() AzureDataLakeGen2ContentsOutput
	ToAzureDataLakeGen2ContentsOutputWithContext(context.Context) AzureDataLakeGen2ContentsOutput
}

// Azure Data Lake Gen2 datastore configuration.
type AzureDataLakeGen2ContentsArgs struct {
	// [Required] Storage account name.
	AccountName pulumi.StringInput `pulumi:"accountName"`
	// [Required] Storage account container name.
	ContainerName pulumi.StringInput `pulumi:"containerName"`
	// Enum to determine the datastore contents type.
	// Expected value is 'AzureDataLakeGen2'.
	ContentsType pulumi.StringInput `pulumi:"contentsType"`
	// [Required] Account credentials.
	Credentials pulumi.Input `pulumi:"credentials"`
	// [Required] Azure cloud endpoint for the storage account.
	Endpoint pulumi.StringInput `pulumi:"endpoint"`
	// [Required] Protocol used to communicate with the storage account.
	Protocol pulumi.StringInput `pulumi:"protocol"`
}

func (AzureDataLakeGen2ContentsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureDataLakeGen2Contents)(nil)).Elem()
}

func (i AzureDataLakeGen2ContentsArgs) ToAzureDataLakeGen2ContentsOutput() AzureDataLakeGen2ContentsOutput {
	return i.ToAzureDataLakeGen2ContentsOutputWithContext(context.Background())
}

func (i AzureDataLakeGen2ContentsArgs) ToAzureDataLakeGen2ContentsOutputWithContext(ctx context.Context) AzureDataLakeGen2ContentsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureDataLakeGen2ContentsOutput)
}

// Azure Data Lake Gen2 datastore configuration.
type AzureDataLakeGen2ContentsOutput struct{ *pulumi.OutputState }

func (AzureDataLakeGen2ContentsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureDataLakeGen2Contents)(nil)).Elem()
}

func (o AzureDataLakeGen2ContentsOutput) ToAzureDataLakeGen2ContentsOutput() AzureDataLakeGen2ContentsOutput {
	return o
}

func (o AzureDataLakeGen2ContentsOutput) ToAzureDataLakeGen2ContentsOutputWithContext(ctx context.Context) AzureDataLakeGen2ContentsOutput {
	return o
}

// [Required] Storage account name.
func (o AzureDataLakeGen2ContentsOutput) AccountName() pulumi.StringOutput {
	return o.ApplyT(func(v AzureDataLakeGen2Contents) string { return v.AccountName }).(pulumi.StringOutput)
}

// [Required] Storage account container name.
func (o AzureDataLakeGen2ContentsOutput) ContainerName() pulumi.StringOutput {
	return o.ApplyT(func(v AzureDataLakeGen2Contents) string { return v.ContainerName }).(pulumi.StringOutput)
}

// Enum to determine the datastore contents type.
// Expected value is 'AzureDataLakeGen2'.
func (o AzureDataLakeGen2ContentsOutput) ContentsType() pulumi.StringOutput {
	return o.ApplyT(func(v AzureDataLakeGen2Contents) string { return v.ContentsType }).(pulumi.StringOutput)
}

// [Required] Account credentials.
func (o AzureDataLakeGen2ContentsOutput) Credentials() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureDataLakeGen2Contents) interface{} { return v.Credentials }).(pulumi.AnyOutput)
}

// [Required] Azure cloud endpoint for the storage account.
func (o AzureDataLakeGen2ContentsOutput) Endpoint() pulumi.StringOutput {
	return o.ApplyT(func(v AzureDataLakeGen2Contents) string { return v.Endpoint }).(pulumi.StringOutput)
}

// [Required] Protocol used to communicate with the storage account.
func (o AzureDataLakeGen2ContentsOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v AzureDataLakeGen2Contents) string { return v.Protocol }).(pulumi.StringOutput)
}

// Azure Data Lake Gen2 datastore configuration.
type AzureDataLakeGen2ContentsResponse struct {
	// [Required] Storage account name.
	AccountName string `pulumi:"accountName"`
	// [Required] Storage account container name.
	ContainerName string `pulumi:"containerName"`
	// Enum to determine the datastore contents type.
	// Expected value is 'AzureDataLakeGen2'.
	ContentsType string `pulumi:"contentsType"`
	// [Required] Account credentials.
	Credentials interface{} `pulumi:"credentials"`
	// [Required] Azure cloud endpoint for the storage account.
	Endpoint string `pulumi:"endpoint"`
	// [Required] Protocol used to communicate with the storage account.
	Protocol string `pulumi:"protocol"`
}

// Azure Data Lake Gen2 datastore configuration.
type AzureDataLakeGen2ContentsResponseOutput struct{ *pulumi.OutputState }

func (AzureDataLakeGen2ContentsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureDataLakeGen2ContentsResponse)(nil)).Elem()
}

func (o AzureDataLakeGen2ContentsResponseOutput) ToAzureDataLakeGen2ContentsResponseOutput() AzureDataLakeGen2ContentsResponseOutput {
	return o
}

func (o AzureDataLakeGen2ContentsResponseOutput) ToAzureDataLakeGen2ContentsResponseOutputWithContext(ctx context.Context) AzureDataLakeGen2ContentsResponseOutput {
	return o
}

// [Required] Storage account name.
func (o AzureDataLakeGen2ContentsResponseOutput) AccountName() pulumi.StringOutput {
	return o.ApplyT(func(v AzureDataLakeGen2ContentsResponse) string { return v.AccountName }).(pulumi.StringOutput)
}

// [Required] Storage account container name.
func (o AzureDataLakeGen2ContentsResponseOutput) ContainerName() pulumi.StringOutput {
	return o.ApplyT(func(v AzureDataLakeGen2ContentsResponse) string { return v.ContainerName }).(pulumi.StringOutput)
}

// Enum to determine the datastore contents type.
// Expected value is 'AzureDataLakeGen2'.
func (o AzureDataLakeGen2ContentsResponseOutput) ContentsType() pulumi.StringOutput {
	return o.ApplyT(func(v AzureDataLakeGen2ContentsResponse) string { return v.ContentsType }).(pulumi.StringOutput)
}

// [Required] Account credentials.
func (o AzureDataLakeGen2ContentsResponseOutput) Credentials() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureDataLakeGen2ContentsResponse) interface{} { return v.Credentials }).(pulumi.AnyOutput)
}

// [Required] Azure cloud endpoint for the storage account.
func (o AzureDataLakeGen2ContentsResponseOutput) Endpoint() pulumi.StringOutput {
	return o.ApplyT(func(v AzureDataLakeGen2ContentsResponse) string { return v.Endpoint }).(pulumi.StringOutput)
}

// [Required] Protocol used to communicate with the storage account.
func (o AzureDataLakeGen2ContentsResponseOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v AzureDataLakeGen2ContentsResponse) string { return v.Protocol }).(pulumi.StringOutput)
}

// Azure File datastore configuration.
type AzureFileContents struct {
	// [Required] Storage account name.
	AccountName string `pulumi:"accountName"`
	// [Required] Storage account container name.
	ContainerName string `pulumi:"containerName"`
	// Enum to determine the datastore contents type.
	// Expected value is 'AzureFile'.
	ContentsType string `pulumi:"contentsType"`
	// [Required] Account credentials.
	Credentials interface{} `pulumi:"credentials"`
	// [Required] Azure cloud endpoint for the storage account.
	Endpoint string `pulumi:"endpoint"`
	// [Required] Protocol used to communicate with the storage account.
	Protocol string `pulumi:"protocol"`
}

// AzureFileContentsInput is an input type that accepts AzureFileContentsArgs and AzureFileContentsOutput values.
// You can construct a concrete instance of `AzureFileContentsInput` via:
//
//	AzureFileContentsArgs{...}
type AzureFileContentsInput interface {
	pulumi.Input

	ToAzureFileContentsOutput() AzureFileContentsOutput
	ToAzureFileContentsOutputWithContext(context.Context) AzureFileContentsOutput
}

// Azure File datastore configuration.
type AzureFileContentsArgs struct {
	// [Required] Storage account name.
	AccountName pulumi.StringInput `pulumi:"accountName"`
	// [Required] Storage account container name.
	ContainerName pulumi.StringInput `pulumi:"containerName"`
	// Enum to determine the datastore contents type.
	// Expected value is 'AzureFile'.
	ContentsType pulumi.StringInput `pulumi:"contentsType"`
	// [Required] Account credentials.
	Credentials pulumi.Input `pulumi:"credentials"`
	// [Required] Azure cloud endpoint for the storage account.
	Endpoint pulumi.StringInput `pulumi:"endpoint"`
	// [Required] Protocol used to communicate with the storage account.
	Protocol pulumi.StringInput `pulumi:"protocol"`
}

func (AzureFileContentsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFileContents)(nil)).Elem()
}

func (i AzureFileContentsArgs) ToAzureFileContentsOutput() AzureFileContentsOutput {
	return i.ToAzureFileContentsOutputWithContext(context.Background())
}

func (i AzureFileContentsArgs) ToAzureFileContentsOutputWithContext(ctx context.Context) AzureFileContentsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFileContentsOutput)
}

// Azure File datastore configuration.
type AzureFileContentsOutput struct{ *pulumi.OutputState }

func (AzureFileContentsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFileContents)(nil)).Elem()
}

func (o AzureFileContentsOutput) ToAzureFileContentsOutput() AzureFileContentsOutput {
	return o
}

func (o AzureFileContentsOutput) ToAzureFileContentsOutputWithContext(ctx context.Context) AzureFileContentsOutput {
	return o
}

// [Required] Storage account name.
func (o AzureFileContentsOutput) AccountName() pulumi.StringOutput {
	return o.ApplyT(func(v AzureFileContents) string { return v.AccountName }).(pulumi.StringOutput)
}

// [Required] Storage account container name.
func (o AzureFileContentsOutput) ContainerName() pulumi.StringOutput {
	return o.ApplyT(func(v AzureFileContents) string { return v.ContainerName }).(pulumi.StringOutput)
}

// Enum to determine the datastore contents type.
// Expected value is 'AzureFile'.
func (o AzureFileContentsOutput) ContentsType() pulumi.StringOutput {
	return o.ApplyT(func(v AzureFileContents) string { return v.ContentsType }).(pulumi.StringOutput)
}

// [Required] Account credentials.
func (o AzureFileContentsOutput) Credentials() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureFileContents) interface{} { return v.Credentials }).(pulumi.AnyOutput)
}

// [Required] Azure cloud endpoint for the storage account.
func (o AzureFileContentsOutput) Endpoint() pulumi.StringOutput {
	return o.ApplyT(func(v AzureFileContents) string { return v.Endpoint }).(pulumi.StringOutput)
}

// [Required] Protocol used to communicate with the storage account.
func (o AzureFileContentsOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v AzureFileContents) string { return v.Protocol }).(pulumi.StringOutput)
}

// Azure File datastore configuration.
type AzureFileContentsResponse struct {
	// [Required] Storage account name.
	AccountName string `pulumi:"accountName"`
	// [Required] Storage account container name.
	ContainerName string `pulumi:"containerName"`
	// Enum to determine the datastore contents type.
	// Expected value is 'AzureFile'.
	ContentsType string `pulumi:"contentsType"`
	// [Required] Account credentials.
	Credentials interface{} `pulumi:"credentials"`
	// [Required] Azure cloud endpoint for the storage account.
	Endpoint string `pulumi:"endpoint"`
	// [Required] Protocol used to communicate with the storage account.
	Protocol string `pulumi:"protocol"`
}

// Azure File datastore configuration.
type AzureFileContentsResponseOutput struct{ *pulumi.OutputState }

func (AzureFileContentsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFileContentsResponse)(nil)).Elem()
}

func (o AzureFileContentsResponseOutput) ToAzureFileContentsResponseOutput() AzureFileContentsResponseOutput {
	return o
}

func (o AzureFileContentsResponseOutput) ToAzureFileContentsResponseOutputWithContext(ctx context.Context) AzureFileContentsResponseOutput {
	return o
}

// [Required] Storage account name.
func (o AzureFileContentsResponseOutput) AccountName() pulumi.StringOutput {
	return o.ApplyT(func(v AzureFileContentsResponse) string { return v.AccountName }).(pulumi.StringOutput)
}

// [Required] Storage account container name.
func (o AzureFileContentsResponseOutput) ContainerName() pulumi.StringOutput {
	return o.ApplyT(func(v AzureFileContentsResponse) string { return v.ContainerName }).(pulumi.StringOutput)
}

// Enum to determine the datastore contents type.
// Expected value is 'AzureFile'.
func (o AzureFileContentsResponseOutput) ContentsType() pulumi.StringOutput {
	return o.ApplyT(func(v AzureFileContentsResponse) string { return v.ContentsType }).(pulumi.StringOutput)
}

// [Required] Account credentials.
func (o AzureFileContentsResponseOutput) Credentials() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureFileContentsResponse) interface{} { return v.Credentials }).(pulumi.AnyOutput)
}

// [Required] Azure cloud endpoint for the storage account.
func (o AzureFileContentsResponseOutput) Endpoint() pulumi.StringOutput {
	return o.ApplyT(func(v AzureFileContentsResponse) string { return v.Endpoint }).(pulumi.StringOutput)
}

// [Required] Protocol used to communicate with the storage account.
func (o AzureFileContentsResponseOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v AzureFileContentsResponse) string { return v.Protocol }).(pulumi.StringOutput)
}

// Azure Postgre SQL datastore configuration.
type AzurePostgreSqlContents struct {
	// Enum to determine the datastore contents type.
	// Expected value is 'AzurePostgreSql'.
	ContentsType string `pulumi:"contentsType"`
	// [Required] Account credentials.
	Credentials interface{} `pulumi:"credentials"`
	// [Required] Azure SQL database name.
	DatabaseName string `pulumi:"databaseName"`
	// Whether the Azure PostgreSQL server requires SSL.
	EnableSSL *bool `pulumi:"enableSSL"`
	// [Required] Azure cloud endpoint for the database.
	Endpoint string `pulumi:"endpoint"`
	// [Required] Azure SQL server port.
	PortNumber int `pulumi:"portNumber"`
	// [Required] Azure SQL server name.
	ServerName string `pulumi:"serverName"`
}

// AzurePostgreSqlContentsInput is an input type that accepts AzurePostgreSqlContentsArgs and AzurePostgreSqlContentsOutput values.
// You can construct a concrete instance of `AzurePostgreSqlContentsInput` via:
//
//	AzurePostgreSqlContentsArgs{...}
type AzurePostgreSqlContentsInput interface {
	pulumi.Input

	ToAzurePostgreSqlContentsOutput() AzurePostgreSqlContentsOutput
	ToAzurePostgreSqlContentsOutputWithContext(context.Context) AzurePostgreSqlContentsOutput
}

// Azure Postgre SQL datastore configuration.
type AzurePostgreSqlContentsArgs struct {
	// Enum to determine the datastore contents type.
	// Expected value is 'AzurePostgreSql'.
	ContentsType pulumi.StringInput `pulumi:"contentsType"`
	// [Required] Account credentials.
	Credentials pulumi.Input `pulumi:"credentials"`
	// [Required] Azure SQL database name.
	DatabaseName pulumi.StringInput `pulumi:"databaseName"`
	// Whether the Azure PostgreSQL server requires SSL.
	EnableSSL pulumi.BoolPtrInput `pulumi:"enableSSL"`
	// [Required] Azure cloud endpoint for the database.
	Endpoint pulumi.StringInput `pulumi:"endpoint"`
	// [Required] Azure SQL server port.
	PortNumber pulumi.IntInput `pulumi:"portNumber"`
	// [Required] Azure SQL server name.
	ServerName pulumi.StringInput `pulumi:"serverName"`
}

func (AzurePostgreSqlContentsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzurePostgreSqlContents)(nil)).Elem()
}

func (i AzurePostgreSqlContentsArgs) ToAzurePostgreSqlContentsOutput() AzurePostgreSqlContentsOutput {
	return i.ToAzurePostgreSqlContentsOutputWithContext(context.Background())
}

func (i AzurePostgreSqlContentsArgs) ToAzurePostgreSqlContentsOutputWithContext(ctx context.Context) AzurePostgreSqlContentsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzurePostgreSqlContentsOutput)
}

// Azure Postgre SQL datastore configuration.
type AzurePostgreSqlContentsOutput struct{ *pulumi.OutputState }

func (AzurePostgreSqlContentsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzurePostgreSqlContents)(nil)).Elem()
}

func (o AzurePostgreSqlContentsOutput) ToAzurePostgreSqlContentsOutput() AzurePostgreSqlContentsOutput {
	return o
}

func (o AzurePostgreSqlContentsOutput) ToAzurePostgreSqlContentsOutputWithContext(ctx context.Context) AzurePostgreSqlContentsOutput {
	return o
}

// Enum to determine the datastore contents type.
// Expected value is 'AzurePostgreSql'.
func (o AzurePostgreSqlContentsOutput) ContentsType() pulumi.StringOutput {
	return o.ApplyT(func(v AzurePostgreSqlContents) string { return v.ContentsType }).(pulumi.StringOutput)
}

// [Required] Account credentials.
func (o AzurePostgreSqlContentsOutput) Credentials() pulumi.AnyOutput {
	return o.ApplyT(func(v AzurePostgreSqlContents) interface{} { return v.Credentials }).(pulumi.AnyOutput)
}

// [Required] Azure SQL database name.
func (o AzurePostgreSqlContentsOutput) DatabaseName() pulumi.StringOutput {
	return o.ApplyT(func(v AzurePostgreSqlContents) string { return v.DatabaseName }).(pulumi.StringOutput)
}

// Whether the Azure PostgreSQL server requires SSL.
func (o AzurePostgreSqlContentsOutput) EnableSSL() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzurePostgreSqlContents) *bool { return v.EnableSSL }).(pulumi.BoolPtrOutput)
}

// [Required] Azure cloud endpoint for the database.
func (o AzurePostgreSqlContentsOutput) Endpoint() pulumi.StringOutput {
	return o.ApplyT(func(v AzurePostgreSqlContents) string { return v.Endpoint }).(pulumi.StringOutput)
}

// [Required] Azure SQL server port.
func (o AzurePostgreSqlContentsOutput) PortNumber() pulumi.IntOutput {
	return o.ApplyT(func(v AzurePostgreSqlContents) int { return v.PortNumber }).(pulumi.IntOutput)
}

// [Required] Azure SQL server name.
func (o AzurePostgreSqlContentsOutput) ServerName() pulumi.StringOutput {
	return o.ApplyT(func(v AzurePostgreSqlContents) string { return v.ServerName }).(pulumi.StringOutput)
}

// Azure Postgre SQL datastore configuration.
type AzurePostgreSqlContentsResponse struct {
	// Enum to determine the datastore contents type.
	// Expected value is 'AzurePostgreSql'.
	ContentsType string `pulumi:"contentsType"`
	// [Required] Account credentials.
	Credentials interface{} `pulumi:"credentials"`
	// [Required] Azure SQL database name.
	DatabaseName string `pulumi:"databaseName"`
	// Whether the Azure PostgreSQL server requires SSL.
	EnableSSL *bool `pulumi:"enableSSL"`
	// [Required] Azure cloud endpoint for the database.
	Endpoint string `pulumi:"endpoint"`
	// [Required] Azure SQL server port.
	PortNumber int `pulumi:"portNumber"`
	// [Required] Azure SQL server name.
	ServerName string `pulumi:"serverName"`
}

// Azure Postgre SQL datastore configuration.
type AzurePostgreSqlContentsResponseOutput struct{ *pulumi.OutputState }

func (AzurePostgreSqlContentsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzurePostgreSqlContentsResponse)(nil)).Elem()
}

func (o AzurePostgreSqlContentsResponseOutput) ToAzurePostgreSqlContentsResponseOutput() AzurePostgreSqlContentsResponseOutput {
	return o
}

func (o AzurePostgreSqlContentsResponseOutput) ToAzurePostgreSqlContentsResponseOutputWithContext(ctx context.Context) AzurePostgreSqlContentsResponseOutput {
	return o
}

// Enum to determine the datastore contents type.
// Expected value is 'AzurePostgreSql'.
func (o AzurePostgreSqlContentsResponseOutput) ContentsType() pulumi.StringOutput {
	return o.ApplyT(func(v AzurePostgreSqlContentsResponse) string { return v.ContentsType }).(pulumi.StringOutput)
}

// [Required] Account credentials.
func (o AzurePostgreSqlContentsResponseOutput) Credentials() pulumi.AnyOutput {
	return o.ApplyT(func(v AzurePostgreSqlContentsResponse) interface{} { return v.Credentials }).(pulumi.AnyOutput)
}

// [Required] Azure SQL database name.
func (o AzurePostgreSqlContentsResponseOutput) DatabaseName() pulumi.StringOutput {
	return o.ApplyT(func(v AzurePostgreSqlContentsResponse) string { return v.DatabaseName }).(pulumi.StringOutput)
}

// Whether the Azure PostgreSQL server requires SSL.
func (o AzurePostgreSqlContentsResponseOutput) EnableSSL() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzurePostgreSqlContentsResponse) *bool { return v.EnableSSL }).(pulumi.BoolPtrOutput)
}

// [Required] Azure cloud endpoint for the database.
func (o AzurePostgreSqlContentsResponseOutput) Endpoint() pulumi.StringOutput {
	return o.ApplyT(func(v AzurePostgreSqlContentsResponse) string { return v.Endpoint }).(pulumi.StringOutput)
}

// [Required] Azure SQL server port.
func (o AzurePostgreSqlContentsResponseOutput) PortNumber() pulumi.IntOutput {
	return o.ApplyT(func(v AzurePostgreSqlContentsResponse) int { return v.PortNumber }).(pulumi.IntOutput)
}

// [Required] Azure SQL server name.
func (o AzurePostgreSqlContentsResponseOutput) ServerName() pulumi.StringOutput {
	return o.ApplyT(func(v AzurePostgreSqlContentsResponse) string { return v.ServerName }).(pulumi.StringOutput)
}

// Azure SQL Database datastore configuration.
type AzureSqlDatabaseContents struct {
	// Enum to determine the datastore contents type.
	// Expected value is 'AzureSqlDatabase'.
	ContentsType string `pulumi:"contentsType"`
	// [Required] Account credentials.
	Credentials interface{} `pulumi:"credentials"`
	// [Required] Azure SQL database name.
	DatabaseName string `pulumi:"databaseName"`
	// [Required] Azure cloud endpoint for the database.
	Endpoint string `pulumi:"endpoint"`
	// [Required] Azure SQL server port.
	PortNumber int `pulumi:"portNumber"`
	// [Required] Azure SQL server name.
	ServerName string `pulumi:"serverName"`
}

// AzureSqlDatabaseContentsInput is an input type that accepts AzureSqlDatabaseContentsArgs and AzureSqlDatabaseContentsOutput values.
// You can construct a concrete instance of `AzureSqlDatabaseContentsInput` via:
//
//	AzureSqlDatabaseContentsArgs{...}
type AzureSqlDatabaseContentsInput interface {
	pulumi.Input

	ToAzureSqlDatabaseContentsOutput() AzureSqlDatabaseContentsOutput
	ToAzureSqlDatabaseContentsOutputWithContext(context.Context) AzureSqlDatabaseContentsOutput
}

// Azure SQL Database datastore configuration.
type AzureSqlDatabaseContentsArgs struct {
	// Enum to determine the datastore contents type.
	// Expected value is 'AzureSqlDatabase'.
	ContentsType pulumi.StringInput `pulumi:"contentsType"`
	// [Required] Account credentials.
	Credentials pulumi.Input `pulumi:"credentials"`
	// [Required] Azure SQL database name.
	DatabaseName pulumi.StringInput `pulumi:"databaseName"`
	// [Required] Azure cloud endpoint for the database.
	Endpoint pulumi.StringInput `pulumi:"endpoint"`
	// [Required] Azure SQL server port.
	PortNumber pulumi.IntInput `pulumi:"portNumber"`
	// [Required] Azure SQL server name.
	ServerName pulumi.StringInput `pulumi:"serverName"`
}

func (AzureSqlDatabaseContentsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureSqlDatabaseContents)(nil)).Elem()
}

func (i AzureSqlDatabaseContentsArgs) ToAzureSqlDatabaseContentsOutput() AzureSqlDatabaseContentsOutput {
	return i.ToAzureSqlDatabaseContentsOutputWithContext(context.Background())
}

func (i AzureSqlDatabaseContentsArgs) ToAzureSqlDatabaseContentsOutputWithContext(ctx context.Context) AzureSqlDatabaseContentsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureSqlDatabaseContentsOutput)
}

// Azure SQL Database datastore configuration.
type AzureSqlDatabaseContentsOutput struct{ *pulumi.OutputState }

func (AzureSqlDatabaseContentsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureSqlDatabaseContents)(nil)).Elem()
}

func (o AzureSqlDatabaseContentsOutput) ToAzureSqlDatabaseContentsOutput() AzureSqlDatabaseContentsOutput {
	return o
}

func (o AzureSqlDatabaseContentsOutput) ToAzureSqlDatabaseContentsOutputWithContext(ctx context.Context) AzureSqlDatabaseContentsOutput {
	return o
}

// Enum to determine the datastore contents type.
// Expected value is 'AzureSqlDatabase'.
func (o AzureSqlDatabaseContentsOutput) ContentsType() pulumi.StringOutput {
	return o.ApplyT(func(v AzureSqlDatabaseContents) string { return v.ContentsType }).(pulumi.StringOutput)
}

// [Required] Account credentials.
func (o AzureSqlDatabaseContentsOutput) Credentials() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureSqlDatabaseContents) interface{} { return v.Credentials }).(pulumi.AnyOutput)
}

// [Required] Azure SQL database name.
func (o AzureSqlDatabaseContentsOutput) DatabaseName() pulumi.StringOutput {
	return o.ApplyT(func(v AzureSqlDatabaseContents) string { return v.DatabaseName }).(pulumi.StringOutput)
}

// [Required] Azure cloud endpoint for the database.
func (o AzureSqlDatabaseContentsOutput) Endpoint() pulumi.StringOutput {
	return o.ApplyT(func(v AzureSqlDatabaseContents) string { return v.Endpoint }).(pulumi.StringOutput)
}

// [Required] Azure SQL server port.
func (o AzureSqlDatabaseContentsOutput) PortNumber() pulumi.IntOutput {
	return o.ApplyT(func(v AzureSqlDatabaseContents) int { return v.PortNumber }).(pulumi.IntOutput)
}

// [Required] Azure SQL server name.
func (o AzureSqlDatabaseContentsOutput) ServerName() pulumi.StringOutput {
	return o.ApplyT(func(v AzureSqlDatabaseContents) string { return v.ServerName }).(pulumi.StringOutput)
}

// Azure SQL Database datastore configuration.
type AzureSqlDatabaseContentsResponse struct {
	// Enum to determine the datastore contents type.
	// Expected value is 'AzureSqlDatabase'.
	ContentsType string `pulumi:"contentsType"`
	// [Required] Account credentials.
	Credentials interface{} `pulumi:"credentials"`
	// [Required] Azure SQL database name.
	DatabaseName string `pulumi:"databaseName"`
	// [Required] Azure cloud endpoint for the database.
	Endpoint string `pulumi:"endpoint"`
	// [Required] Azure SQL server port.
	PortNumber int `pulumi:"portNumber"`
	// [Required] Azure SQL server name.
	ServerName string `pulumi:"serverName"`
}

// Azure SQL Database datastore configuration.
type AzureSqlDatabaseContentsResponseOutput struct{ *pulumi.OutputState }

func (AzureSqlDatabaseContentsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureSqlDatabaseContentsResponse)(nil)).Elem()
}

func (o AzureSqlDatabaseContentsResponseOutput) ToAzureSqlDatabaseContentsResponseOutput() AzureSqlDatabaseContentsResponseOutput {
	return o
}

func (o AzureSqlDatabaseContentsResponseOutput) ToAzureSqlDatabaseContentsResponseOutputWithContext(ctx context.Context) AzureSqlDatabaseContentsResponseOutput {
	return o
}

// Enum to determine the datastore contents type.
// Expected value is 'AzureSqlDatabase'.
func (o AzureSqlDatabaseContentsResponseOutput) ContentsType() pulumi.StringOutput {
	return o.ApplyT(func(v AzureSqlDatabaseContentsResponse) string { return v.ContentsType }).(pulumi.StringOutput)
}

// [Required] Account credentials.
func (o AzureSqlDatabaseContentsResponseOutput) Credentials() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureSqlDatabaseContentsResponse) interface{} { return v.Credentials }).(pulumi.AnyOutput)
}

// [Required] Azure SQL database name.
func (o AzureSqlDatabaseContentsResponseOutput) DatabaseName() pulumi.StringOutput {
	return o.ApplyT(func(v AzureSqlDatabaseContentsResponse) string { return v.DatabaseName }).(pulumi.StringOutput)
}

// [Required] Azure cloud endpoint for the database.
func (o AzureSqlDatabaseContentsResponseOutput) Endpoint() pulumi.StringOutput {
	return o.ApplyT(func(v AzureSqlDatabaseContentsResponse) string { return v.Endpoint }).(pulumi.StringOutput)
}

// [Required] Azure SQL server port.
func (o AzureSqlDatabaseContentsResponseOutput) PortNumber() pulumi.IntOutput {
	return o.ApplyT(func(v AzureSqlDatabaseContentsResponse) int { return v.PortNumber }).(pulumi.IntOutput)
}

// [Required] Azure SQL server name.
func (o AzureSqlDatabaseContentsResponseOutput) ServerName() pulumi.StringOutput {
	return o.ApplyT(func(v AzureSqlDatabaseContentsResponse) string { return v.ServerName }).(pulumi.StringOutput)
}

// Defines an early termination policy based on slack criteria, and a frequency and delay interval for evaluation.
type BanditPolicy struct {
	// Number of intervals by which to delay the first evaluation.
	DelayEvaluation *int `pulumi:"delayEvaluation"`
	// Interval (number of runs) between policy evaluations.
	EvaluationInterval *int `pulumi:"evaluationInterval"`
	// Expected value is 'Bandit'.
	PolicyType string `pulumi:"policyType"`
	// Absolute distance allowed from the best performing run.
	SlackAmount *float64 `pulumi:"slackAmount"`
	// Ratio of the allowed distance from the best performing run.
	SlackFactor *float64 `pulumi:"slackFactor"`
}

// BanditPolicyInput is an input type that accepts BanditPolicyArgs and BanditPolicyOutput values.
// You can construct a concrete instance of `BanditPolicyInput` via:
//
//	BanditPolicyArgs{...}
type BanditPolicyInput interface {
	pulumi.Input

	ToBanditPolicyOutput() BanditPolicyOutput
	ToBanditPolicyOutputWithContext(context.Context) BanditPolicyOutput
}

// Defines an early termination policy based on slack criteria, and a frequency and delay interval for evaluation.
type BanditPolicyArgs struct {
	// Number of intervals by which to delay the first evaluation.
	DelayEvaluation pulumi.IntPtrInput `pulumi:"delayEvaluation"`
	// Interval (number of runs) between policy evaluations.
	EvaluationInterval pulumi.IntPtrInput `pulumi:"evaluationInterval"`
	// Expected value is 'Bandit'.
	PolicyType pulumi.StringInput `pulumi:"policyType"`
	// Absolute distance allowed from the best performing run.
	SlackAmount pulumi.Float64PtrInput `pulumi:"slackAmount"`
	// Ratio of the allowed distance from the best performing run.
	SlackFactor pulumi.Float64PtrInput `pulumi:"slackFactor"`
}

func (BanditPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BanditPolicy)(nil)).Elem()
}

func (i BanditPolicyArgs) ToBanditPolicyOutput() BanditPolicyOutput {
	return i.ToBanditPolicyOutputWithContext(context.Background())
}

func (i BanditPolicyArgs) ToBanditPolicyOutputWithContext(ctx context.Context) BanditPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BanditPolicyOutput)
}

func (i BanditPolicyArgs) ToBanditPolicyPtrOutput() BanditPolicyPtrOutput {
	return i.ToBanditPolicyPtrOutputWithContext(context.Background())
}

func (i BanditPolicyArgs) ToBanditPolicyPtrOutputWithContext(ctx context.Context) BanditPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BanditPolicyOutput).ToBanditPolicyPtrOutputWithContext(ctx)
}

// BanditPolicyPtrInput is an input type that accepts BanditPolicyArgs, BanditPolicyPtr and BanditPolicyPtrOutput values.
// You can construct a concrete instance of `BanditPolicyPtrInput` via:
//
//	        BanditPolicyArgs{...}
//
//	or:
//
//	        nil
type BanditPolicyPtrInput interface {
	pulumi.Input

	ToBanditPolicyPtrOutput() BanditPolicyPtrOutput
	ToBanditPolicyPtrOutputWithContext(context.Context) BanditPolicyPtrOutput
}

type banditPolicyPtrType BanditPolicyArgs

func BanditPolicyPtr(v *BanditPolicyArgs) BanditPolicyPtrInput {
	return (*banditPolicyPtrType)(v)
}

func (*banditPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BanditPolicy)(nil)).Elem()
}

func (i *banditPolicyPtrType) ToBanditPolicyPtrOutput() BanditPolicyPtrOutput {
	return i.ToBanditPolicyPtrOutputWithContext(context.Background())
}

func (i *banditPolicyPtrType) ToBanditPolicyPtrOutputWithContext(ctx context.Context) BanditPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BanditPolicyPtrOutput)
}

// Defines an early termination policy based on slack criteria, and a frequency and delay interval for evaluation.
type BanditPolicyOutput struct{ *pulumi.OutputState }

func (BanditPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BanditPolicy)(nil)).Elem()
}

func (o BanditPolicyOutput) ToBanditPolicyOutput() BanditPolicyOutput {
	return o
}

func (o BanditPolicyOutput) ToBanditPolicyOutputWithContext(ctx context.Context) BanditPolicyOutput {
	return o
}

func (o BanditPolicyOutput) ToBanditPolicyPtrOutput() BanditPolicyPtrOutput {
	return o.ToBanditPolicyPtrOutputWithContext(context.Background())
}

func (o BanditPolicyOutput) ToBanditPolicyPtrOutputWithContext(ctx context.Context) BanditPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BanditPolicy) *BanditPolicy {
		return &v
	}).(BanditPolicyPtrOutput)
}

// Number of intervals by which to delay the first evaluation.
func (o BanditPolicyOutput) DelayEvaluation() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BanditPolicy) *int { return v.DelayEvaluation }).(pulumi.IntPtrOutput)
}

// Interval (number of runs) between policy evaluations.
func (o BanditPolicyOutput) EvaluationInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BanditPolicy) *int { return v.EvaluationInterval }).(pulumi.IntPtrOutput)
}

// Expected value is 'Bandit'.
func (o BanditPolicyOutput) PolicyType() pulumi.StringOutput {
	return o.ApplyT(func(v BanditPolicy) string { return v.PolicyType }).(pulumi.StringOutput)
}

// Absolute distance allowed from the best performing run.
func (o BanditPolicyOutput) SlackAmount() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v BanditPolicy) *float64 { return v.SlackAmount }).(pulumi.Float64PtrOutput)
}

// Ratio of the allowed distance from the best performing run.
func (o BanditPolicyOutput) SlackFactor() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v BanditPolicy) *float64 { return v.SlackFactor }).(pulumi.Float64PtrOutput)
}

type BanditPolicyPtrOutput struct{ *pulumi.OutputState }

func (BanditPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BanditPolicy)(nil)).Elem()
}

func (o BanditPolicyPtrOutput) ToBanditPolicyPtrOutput() BanditPolicyPtrOutput {
	return o
}

func (o BanditPolicyPtrOutput) ToBanditPolicyPtrOutputWithContext(ctx context.Context) BanditPolicyPtrOutput {
	return o
}

func (o BanditPolicyPtrOutput) Elem() BanditPolicyOutput {
	return o.ApplyT(func(v *BanditPolicy) BanditPolicy {
		if v != nil {
			return *v
		}
		var ret BanditPolicy
		return ret
	}).(BanditPolicyOutput)
}

// Number of intervals by which to delay the first evaluation.
func (o BanditPolicyPtrOutput) DelayEvaluation() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BanditPolicy) *int {
		if v == nil {
			return nil
		}
		return v.DelayEvaluation
	}).(pulumi.IntPtrOutput)
}

// Interval (number of runs) between policy evaluations.
func (o BanditPolicyPtrOutput) EvaluationInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BanditPolicy) *int {
		if v == nil {
			return nil
		}
		return v.EvaluationInterval
	}).(pulumi.IntPtrOutput)
}

// Expected value is 'Bandit'.
func (o BanditPolicyPtrOutput) PolicyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BanditPolicy) *string {
		if v == nil {
			return nil
		}
		return &v.PolicyType
	}).(pulumi.StringPtrOutput)
}

// Absolute distance allowed from the best performing run.
func (o BanditPolicyPtrOutput) SlackAmount() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *BanditPolicy) *float64 {
		if v == nil {
			return nil
		}
		return v.SlackAmount
	}).(pulumi.Float64PtrOutput)
}

// Ratio of the allowed distance from the best performing run.
func (o BanditPolicyPtrOutput) SlackFactor() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *BanditPolicy) *float64 {
		if v == nil {
			return nil
		}
		return v.SlackFactor
	}).(pulumi.Float64PtrOutput)
}

// Defines an early termination policy based on slack criteria, and a frequency and delay interval for evaluation.
type BanditPolicyResponse struct {
	// Number of intervals by which to delay the first evaluation.
	DelayEvaluation *int `pulumi:"delayEvaluation"`
	// Interval (number of runs) between policy evaluations.
	EvaluationInterval *int `pulumi:"evaluationInterval"`
	// Expected value is 'Bandit'.
	PolicyType string `pulumi:"policyType"`
	// Absolute distance allowed from the best performing run.
	SlackAmount *float64 `pulumi:"slackAmount"`
	// Ratio of the allowed distance from the best performing run.
	SlackFactor *float64 `pulumi:"slackFactor"`
}

// Defines an early termination policy based on slack criteria, and a frequency and delay interval for evaluation.
type BanditPolicyResponseOutput struct{ *pulumi.OutputState }

func (BanditPolicyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BanditPolicyResponse)(nil)).Elem()
}

func (o BanditPolicyResponseOutput) ToBanditPolicyResponseOutput() BanditPolicyResponseOutput {
	return o
}

func (o BanditPolicyResponseOutput) ToBanditPolicyResponseOutputWithContext(ctx context.Context) BanditPolicyResponseOutput {
	return o
}

// Number of intervals by which to delay the first evaluation.
func (o BanditPolicyResponseOutput) DelayEvaluation() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BanditPolicyResponse) *int { return v.DelayEvaluation }).(pulumi.IntPtrOutput)
}

// Interval (number of runs) between policy evaluations.
func (o BanditPolicyResponseOutput) EvaluationInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BanditPolicyResponse) *int { return v.EvaluationInterval }).(pulumi.IntPtrOutput)
}

// Expected value is 'Bandit'.
func (o BanditPolicyResponseOutput) PolicyType() pulumi.StringOutput {
	return o.ApplyT(func(v BanditPolicyResponse) string { return v.PolicyType }).(pulumi.StringOutput)
}

// Absolute distance allowed from the best performing run.
func (o BanditPolicyResponseOutput) SlackAmount() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v BanditPolicyResponse) *float64 { return v.SlackAmount }).(pulumi.Float64PtrOutput)
}

// Ratio of the allowed distance from the best performing run.
func (o BanditPolicyResponseOutput) SlackFactor() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v BanditPolicyResponse) *float64 { return v.SlackFactor }).(pulumi.Float64PtrOutput)
}

type BanditPolicyResponsePtrOutput struct{ *pulumi.OutputState }

func (BanditPolicyResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BanditPolicyResponse)(nil)).Elem()
}

func (o BanditPolicyResponsePtrOutput) ToBanditPolicyResponsePtrOutput() BanditPolicyResponsePtrOutput {
	return o
}

func (o BanditPolicyResponsePtrOutput) ToBanditPolicyResponsePtrOutputWithContext(ctx context.Context) BanditPolicyResponsePtrOutput {
	return o
}

func (o BanditPolicyResponsePtrOutput) Elem() BanditPolicyResponseOutput {
	return o.ApplyT(func(v *BanditPolicyResponse) BanditPolicyResponse {
		if v != nil {
			return *v
		}
		var ret BanditPolicyResponse
		return ret
	}).(BanditPolicyResponseOutput)
}

// Number of intervals by which to delay the first evaluation.
func (o BanditPolicyResponsePtrOutput) DelayEvaluation() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BanditPolicyResponse) *int {
		if v == nil {
			return nil
		}
		return v.DelayEvaluation
	}).(pulumi.IntPtrOutput)
}

// Interval (number of runs) between policy evaluations.
func (o BanditPolicyResponsePtrOutput) EvaluationInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BanditPolicyResponse) *int {
		if v == nil {
			return nil
		}
		return v.EvaluationInterval
	}).(pulumi.IntPtrOutput)
}

// Expected value is 'Bandit'.
func (o BanditPolicyResponsePtrOutput) PolicyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BanditPolicyResponse) *string {
		if v == nil {
			return nil
		}
		return &v.PolicyType
	}).(pulumi.StringPtrOutput)
}

// Absolute distance allowed from the best performing run.
func (o BanditPolicyResponsePtrOutput) SlackAmount() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *BanditPolicyResponse) *float64 {
		if v == nil {
			return nil
		}
		return v.SlackAmount
	}).(pulumi.Float64PtrOutput)
}

// Ratio of the allowed distance from the best performing run.
func (o BanditPolicyResponsePtrOutput) SlackFactor() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *BanditPolicyResponse) *float64 {
		if v == nil {
			return nil
		}
		return v.SlackFactor
	}).(pulumi.Float64PtrOutput)
}

// Batch inference settings per deployment.
type BatchDeploymentType struct {
	// Code configuration for the endpoint deployment.
	CodeConfiguration *CodeConfiguration `pulumi:"codeConfiguration"`
	// Configuration for compute binding.
	Compute *ComputeConfiguration `pulumi:"compute"`
	// Description of the endpoint deployment.
	Description *string `pulumi:"description"`
	// ARM resource ID of the environment specification for the endpoint deployment.
	EnvironmentId *string `pulumi:"environmentId"`
	// Environment variables configuration for the deployment.
	EnvironmentVariables map[string]string `pulumi:"environmentVariables"`
	// Error threshold, if the error count for the entire input goes above this value,
	// the batch inference will be aborted. Range is [-1, int.MaxValue].
	// For FileDataset, this value is the count of file failures.
	// For TabularDataset, this value is the count of record failures.
	// If set to -1 (the lower bound), all failures during batch inference will be ignored.
	ErrorThreshold *int `pulumi:"errorThreshold"`
	// Logging level for batch inference operation.
	LoggingLevel *string `pulumi:"loggingLevel"`
	// Size of the mini-batch passed to each batch invocation.
	// For FileDataset, this is the number of files per mini-batch.
	// For TabularDataset, this is the size of the records in bytes, per mini-batch.
	MiniBatchSize *float64 `pulumi:"miniBatchSize"`
	// Reference to the model asset for the endpoint deployment.
	Model interface{} `pulumi:"model"`
	// Output configuration for the batch inference operation.
	OutputConfiguration *BatchOutputConfiguration `pulumi:"outputConfiguration"`
	// Partition keys list used for Named partitioning.
	PartitionKeys []string `pulumi:"partitionKeys"`
	// Property dictionary. Properties can be added, but not removed or altered.
	Properties map[string]string `pulumi:"properties"`
	// Retry Settings for the batch inference operation.
	RetrySettings *BatchRetrySettings `pulumi:"retrySettings"`
}

// BatchDeploymentTypeInput is an input type that accepts BatchDeploymentTypeArgs and BatchDeploymentTypeOutput values.
// You can construct a concrete instance of `BatchDeploymentTypeInput` via:
//
//	BatchDeploymentTypeArgs{...}
type BatchDeploymentTypeInput interface {
	pulumi.Input

	ToBatchDeploymentTypeOutput() BatchDeploymentTypeOutput
	ToBatchDeploymentTypeOutputWithContext(context.Context) BatchDeploymentTypeOutput
}

// Batch inference settings per deployment.
type BatchDeploymentTypeArgs struct {
	// Code configuration for the endpoint deployment.
	CodeConfiguration CodeConfigurationPtrInput `pulumi:"codeConfiguration"`
	// Configuration for compute binding.
	Compute ComputeConfigurationPtrInput `pulumi:"compute"`
	// Description of the endpoint deployment.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// ARM resource ID of the environment specification for the endpoint deployment.
	EnvironmentId pulumi.StringPtrInput `pulumi:"environmentId"`
	// Environment variables configuration for the deployment.
	EnvironmentVariables pulumi.StringMapInput `pulumi:"environmentVariables"`
	// Error threshold, if the error count for the entire input goes above this value,
	// the batch inference will be aborted. Range is [-1, int.MaxValue].
	// For FileDataset, this value is the count of file failures.
	// For TabularDataset, this value is the count of record failures.
	// If set to -1 (the lower bound), all failures during batch inference will be ignored.
	ErrorThreshold pulumi.IntPtrInput `pulumi:"errorThreshold"`
	// Logging level for batch inference operation.
	LoggingLevel pulumi.StringPtrInput `pulumi:"loggingLevel"`
	// Size of the mini-batch passed to each batch invocation.
	// For FileDataset, this is the number of files per mini-batch.
	// For TabularDataset, this is the size of the records in bytes, per mini-batch.
	MiniBatchSize pulumi.Float64PtrInput `pulumi:"miniBatchSize"`
	// Reference to the model asset for the endpoint deployment.
	Model pulumi.Input `pulumi:"model"`
	// Output configuration for the batch inference operation.
	OutputConfiguration BatchOutputConfigurationPtrInput `pulumi:"outputConfiguration"`
	// Partition keys list used for Named partitioning.
	PartitionKeys pulumi.StringArrayInput `pulumi:"partitionKeys"`
	// Property dictionary. Properties can be added, but not removed or altered.
	Properties pulumi.StringMapInput `pulumi:"properties"`
	// Retry Settings for the batch inference operation.
	RetrySettings BatchRetrySettingsPtrInput `pulumi:"retrySettings"`
}

func (BatchDeploymentTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BatchDeploymentType)(nil)).Elem()
}

func (i BatchDeploymentTypeArgs) ToBatchDeploymentTypeOutput() BatchDeploymentTypeOutput {
	return i.ToBatchDeploymentTypeOutputWithContext(context.Background())
}

func (i BatchDeploymentTypeArgs) ToBatchDeploymentTypeOutputWithContext(ctx context.Context) BatchDeploymentTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BatchDeploymentTypeOutput)
}

// Batch inference settings per deployment.
type BatchDeploymentTypeOutput struct{ *pulumi.OutputState }

func (BatchDeploymentTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BatchDeploymentType)(nil)).Elem()
}

func (o BatchDeploymentTypeOutput) ToBatchDeploymentTypeOutput() BatchDeploymentTypeOutput {
	return o
}

func (o BatchDeploymentTypeOutput) ToBatchDeploymentTypeOutputWithContext(ctx context.Context) BatchDeploymentTypeOutput {
	return o
}

// Code configuration for the endpoint deployment.
func (o BatchDeploymentTypeOutput) CodeConfiguration() CodeConfigurationPtrOutput {
	return o.ApplyT(func(v BatchDeploymentType) *CodeConfiguration { return v.CodeConfiguration }).(CodeConfigurationPtrOutput)
}

// Configuration for compute binding.
func (o BatchDeploymentTypeOutput) Compute() ComputeConfigurationPtrOutput {
	return o.ApplyT(func(v BatchDeploymentType) *ComputeConfiguration { return v.Compute }).(ComputeConfigurationPtrOutput)
}

// Description of the endpoint deployment.
func (o BatchDeploymentTypeOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BatchDeploymentType) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// ARM resource ID of the environment specification for the endpoint deployment.
func (o BatchDeploymentTypeOutput) EnvironmentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BatchDeploymentType) *string { return v.EnvironmentId }).(pulumi.StringPtrOutput)
}

// Environment variables configuration for the deployment.
func (o BatchDeploymentTypeOutput) EnvironmentVariables() pulumi.StringMapOutput {
	return o.ApplyT(func(v BatchDeploymentType) map[string]string { return v.EnvironmentVariables }).(pulumi.StringMapOutput)
}

// Error threshold, if the error count for the entire input goes above this value,
// the batch inference will be aborted. Range is [-1, int.MaxValue].
// For FileDataset, this value is the count of file failures.
// For TabularDataset, this value is the count of record failures.
// If set to -1 (the lower bound), all failures during batch inference will be ignored.
func (o BatchDeploymentTypeOutput) ErrorThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BatchDeploymentType) *int { return v.ErrorThreshold }).(pulumi.IntPtrOutput)
}

// Logging level for batch inference operation.
func (o BatchDeploymentTypeOutput) LoggingLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BatchDeploymentType) *string { return v.LoggingLevel }).(pulumi.StringPtrOutput)
}

// Size of the mini-batch passed to each batch invocation.
// For FileDataset, this is the number of files per mini-batch.
// For TabularDataset, this is the size of the records in bytes, per mini-batch.
func (o BatchDeploymentTypeOutput) MiniBatchSize() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v BatchDeploymentType) *float64 { return v.MiniBatchSize }).(pulumi.Float64PtrOutput)
}

// Reference to the model asset for the endpoint deployment.
func (o BatchDeploymentTypeOutput) Model() pulumi.AnyOutput {
	return o.ApplyT(func(v BatchDeploymentType) interface{} { return v.Model }).(pulumi.AnyOutput)
}

// Output configuration for the batch inference operation.
func (o BatchDeploymentTypeOutput) OutputConfiguration() BatchOutputConfigurationPtrOutput {
	return o.ApplyT(func(v BatchDeploymentType) *BatchOutputConfiguration { return v.OutputConfiguration }).(BatchOutputConfigurationPtrOutput)
}

// Partition keys list used for Named partitioning.
func (o BatchDeploymentTypeOutput) PartitionKeys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BatchDeploymentType) []string { return v.PartitionKeys }).(pulumi.StringArrayOutput)
}

// Property dictionary. Properties can be added, but not removed or altered.
func (o BatchDeploymentTypeOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v BatchDeploymentType) map[string]string { return v.Properties }).(pulumi.StringMapOutput)
}

// Retry Settings for the batch inference operation.
func (o BatchDeploymentTypeOutput) RetrySettings() BatchRetrySettingsPtrOutput {
	return o.ApplyT(func(v BatchDeploymentType) *BatchRetrySettings { return v.RetrySettings }).(BatchRetrySettingsPtrOutput)
}

// Batch inference settings per deployment.
type BatchDeploymentResponse struct {
	// Code configuration for the endpoint deployment.
	CodeConfiguration *CodeConfigurationResponse `pulumi:"codeConfiguration"`
	// Configuration for compute binding.
	Compute *ComputeConfigurationResponse `pulumi:"compute"`
	// Description of the endpoint deployment.
	Description *string `pulumi:"description"`
	// ARM resource ID of the environment specification for the endpoint deployment.
	EnvironmentId *string `pulumi:"environmentId"`
	// Environment variables configuration for the deployment.
	EnvironmentVariables map[string]string `pulumi:"environmentVariables"`
	// Error threshold, if the error count for the entire input goes above this value,
	// the batch inference will be aborted. Range is [-1, int.MaxValue].
	// For FileDataset, this value is the count of file failures.
	// For TabularDataset, this value is the count of record failures.
	// If set to -1 (the lower bound), all failures during batch inference will be ignored.
	ErrorThreshold *int `pulumi:"errorThreshold"`
	// Logging level for batch inference operation.
	LoggingLevel *string `pulumi:"loggingLevel"`
	// Size of the mini-batch passed to each batch invocation.
	// For FileDataset, this is the number of files per mini-batch.
	// For TabularDataset, this is the size of the records in bytes, per mini-batch.
	MiniBatchSize *float64 `pulumi:"miniBatchSize"`
	// Reference to the model asset for the endpoint deployment.
	Model interface{} `pulumi:"model"`
	// Output configuration for the batch inference operation.
	OutputConfiguration *BatchOutputConfigurationResponse `pulumi:"outputConfiguration"`
	// Partition keys list used for Named partitioning.
	PartitionKeys []string `pulumi:"partitionKeys"`
	// Property dictionary. Properties can be added, but not removed or altered.
	Properties map[string]string `pulumi:"properties"`
	// Retry Settings for the batch inference operation.
	RetrySettings *BatchRetrySettingsResponse `pulumi:"retrySettings"`
}

// Batch inference settings per deployment.
type BatchDeploymentResponseOutput struct{ *pulumi.OutputState }

func (BatchDeploymentResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BatchDeploymentResponse)(nil)).Elem()
}

func (o BatchDeploymentResponseOutput) ToBatchDeploymentResponseOutput() BatchDeploymentResponseOutput {
	return o
}

func (o BatchDeploymentResponseOutput) ToBatchDeploymentResponseOutputWithContext(ctx context.Context) BatchDeploymentResponseOutput {
	return o
}

// Code configuration for the endpoint deployment.
func (o BatchDeploymentResponseOutput) CodeConfiguration() CodeConfigurationResponsePtrOutput {
	return o.ApplyT(func(v BatchDeploymentResponse) *CodeConfigurationResponse { return v.CodeConfiguration }).(CodeConfigurationResponsePtrOutput)
}

// Configuration for compute binding.
func (o BatchDeploymentResponseOutput) Compute() ComputeConfigurationResponsePtrOutput {
	return o.ApplyT(func(v BatchDeploymentResponse) *ComputeConfigurationResponse { return v.Compute }).(ComputeConfigurationResponsePtrOutput)
}

// Description of the endpoint deployment.
func (o BatchDeploymentResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BatchDeploymentResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// ARM resource ID of the environment specification for the endpoint deployment.
func (o BatchDeploymentResponseOutput) EnvironmentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BatchDeploymentResponse) *string { return v.EnvironmentId }).(pulumi.StringPtrOutput)
}

// Environment variables configuration for the deployment.
func (o BatchDeploymentResponseOutput) EnvironmentVariables() pulumi.StringMapOutput {
	return o.ApplyT(func(v BatchDeploymentResponse) map[string]string { return v.EnvironmentVariables }).(pulumi.StringMapOutput)
}

// Error threshold, if the error count for the entire input goes above this value,
// the batch inference will be aborted. Range is [-1, int.MaxValue].
// For FileDataset, this value is the count of file failures.
// For TabularDataset, this value is the count of record failures.
// If set to -1 (the lower bound), all failures during batch inference will be ignored.
func (o BatchDeploymentResponseOutput) ErrorThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BatchDeploymentResponse) *int { return v.ErrorThreshold }).(pulumi.IntPtrOutput)
}

// Logging level for batch inference operation.
func (o BatchDeploymentResponseOutput) LoggingLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BatchDeploymentResponse) *string { return v.LoggingLevel }).(pulumi.StringPtrOutput)
}

// Size of the mini-batch passed to each batch invocation.
// For FileDataset, this is the number of files per mini-batch.
// For TabularDataset, this is the size of the records in bytes, per mini-batch.
func (o BatchDeploymentResponseOutput) MiniBatchSize() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v BatchDeploymentResponse) *float64 { return v.MiniBatchSize }).(pulumi.Float64PtrOutput)
}

// Reference to the model asset for the endpoint deployment.
func (o BatchDeploymentResponseOutput) Model() pulumi.AnyOutput {
	return o.ApplyT(func(v BatchDeploymentResponse) interface{} { return v.Model }).(pulumi.AnyOutput)
}

// Output configuration for the batch inference operation.
func (o BatchDeploymentResponseOutput) OutputConfiguration() BatchOutputConfigurationResponsePtrOutput {
	return o.ApplyT(func(v BatchDeploymentResponse) *BatchOutputConfigurationResponse { return v.OutputConfiguration }).(BatchOutputConfigurationResponsePtrOutput)
}

// Partition keys list used for Named partitioning.
func (o BatchDeploymentResponseOutput) PartitionKeys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BatchDeploymentResponse) []string { return v.PartitionKeys }).(pulumi.StringArrayOutput)
}

// Property dictionary. Properties can be added, but not removed or altered.
func (o BatchDeploymentResponseOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v BatchDeploymentResponse) map[string]string { return v.Properties }).(pulumi.StringMapOutput)
}

// Retry Settings for the batch inference operation.
func (o BatchDeploymentResponseOutput) RetrySettings() BatchRetrySettingsResponsePtrOutput {
	return o.ApplyT(func(v BatchDeploymentResponse) *BatchRetrySettingsResponse { return v.RetrySettings }).(BatchRetrySettingsResponsePtrOutput)
}

// Batch endpoint configuration.
type BatchEndpointType struct {
	// [Required] Inference endpoint authentication mode type
	AuthMode *string `pulumi:"authMode"`
	// Description of the inference endpoint.
	Description *string `pulumi:"description"`
	// EndpointAuthKeys to set initially on an Endpoint.
	// This property will always be returned as null. AuthKey values must be retrieved using the ListKeys API.
	Keys *EndpointAuthKeys `pulumi:"keys"`
	// Property dictionary. Properties can be added, but not removed or altered.
	Properties map[string]string `pulumi:"properties"`
	// Traffic rules on how the traffic will be routed across deployments.
	Traffic map[string]int `pulumi:"traffic"`
}

// BatchEndpointTypeInput is an input type that accepts BatchEndpointTypeArgs and BatchEndpointTypeOutput values.
// You can construct a concrete instance of `BatchEndpointTypeInput` via:
//
//	BatchEndpointTypeArgs{...}
type BatchEndpointTypeInput interface {
	pulumi.Input

	ToBatchEndpointTypeOutput() BatchEndpointTypeOutput
	ToBatchEndpointTypeOutputWithContext(context.Context) BatchEndpointTypeOutput
}

// Batch endpoint configuration.
type BatchEndpointTypeArgs struct {
	// [Required] Inference endpoint authentication mode type
	AuthMode pulumi.StringPtrInput `pulumi:"authMode"`
	// Description of the inference endpoint.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// EndpointAuthKeys to set initially on an Endpoint.
	// This property will always be returned as null. AuthKey values must be retrieved using the ListKeys API.
	Keys EndpointAuthKeysPtrInput `pulumi:"keys"`
	// Property dictionary. Properties can be added, but not removed or altered.
	Properties pulumi.StringMapInput `pulumi:"properties"`
	// Traffic rules on how the traffic will be routed across deployments.
	Traffic pulumi.IntMapInput `pulumi:"traffic"`
}

func (BatchEndpointTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BatchEndpointType)(nil)).Elem()
}

func (i BatchEndpointTypeArgs) ToBatchEndpointTypeOutput() BatchEndpointTypeOutput {
	return i.ToBatchEndpointTypeOutputWithContext(context.Background())
}

func (i BatchEndpointTypeArgs) ToBatchEndpointTypeOutputWithContext(ctx context.Context) BatchEndpointTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BatchEndpointTypeOutput)
}

// Batch endpoint configuration.
type BatchEndpointTypeOutput struct{ *pulumi.OutputState }

func (BatchEndpointTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BatchEndpointType)(nil)).Elem()
}

func (o BatchEndpointTypeOutput) ToBatchEndpointTypeOutput() BatchEndpointTypeOutput {
	return o
}

func (o BatchEndpointTypeOutput) ToBatchEndpointTypeOutputWithContext(ctx context.Context) BatchEndpointTypeOutput {
	return o
}

// [Required] Inference endpoint authentication mode type
func (o BatchEndpointTypeOutput) AuthMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BatchEndpointType) *string { return v.AuthMode }).(pulumi.StringPtrOutput)
}

// Description of the inference endpoint.
func (o BatchEndpointTypeOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BatchEndpointType) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// EndpointAuthKeys to set initially on an Endpoint.
// This property will always be returned as null. AuthKey values must be retrieved using the ListKeys API.
func (o BatchEndpointTypeOutput) Keys() EndpointAuthKeysPtrOutput {
	return o.ApplyT(func(v BatchEndpointType) *EndpointAuthKeys { return v.Keys }).(EndpointAuthKeysPtrOutput)
}

// Property dictionary. Properties can be added, but not removed or altered.
func (o BatchEndpointTypeOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v BatchEndpointType) map[string]string { return v.Properties }).(pulumi.StringMapOutput)
}

// Traffic rules on how the traffic will be routed across deployments.
func (o BatchEndpointTypeOutput) Traffic() pulumi.IntMapOutput {
	return o.ApplyT(func(v BatchEndpointType) map[string]int { return v.Traffic }).(pulumi.IntMapOutput)
}

// Batch endpoint configuration.
type BatchEndpointResponse struct {
	// [Required] Inference endpoint authentication mode type
	AuthMode *string `pulumi:"authMode"`
	// Description of the inference endpoint.
	Description *string `pulumi:"description"`
	// Property dictionary. Properties can be added, but not removed or altered.
	Properties map[string]string `pulumi:"properties"`
	// Endpoint URI.
	ScoringUri string `pulumi:"scoringUri"`
	// Endpoint Swagger URI.
	SwaggerUri string `pulumi:"swaggerUri"`
	// Traffic rules on how the traffic will be routed across deployments.
	Traffic map[string]int `pulumi:"traffic"`
}

// Batch endpoint configuration.
type BatchEndpointResponseOutput struct{ *pulumi.OutputState }

func (BatchEndpointResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BatchEndpointResponse)(nil)).Elem()
}

func (o BatchEndpointResponseOutput) ToBatchEndpointResponseOutput() BatchEndpointResponseOutput {
	return o
}

func (o BatchEndpointResponseOutput) ToBatchEndpointResponseOutputWithContext(ctx context.Context) BatchEndpointResponseOutput {
	return o
}

// [Required] Inference endpoint authentication mode type
func (o BatchEndpointResponseOutput) AuthMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BatchEndpointResponse) *string { return v.AuthMode }).(pulumi.StringPtrOutput)
}

// Description of the inference endpoint.
func (o BatchEndpointResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BatchEndpointResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Property dictionary. Properties can be added, but not removed or altered.
func (o BatchEndpointResponseOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v BatchEndpointResponse) map[string]string { return v.Properties }).(pulumi.StringMapOutput)
}

// Endpoint URI.
func (o BatchEndpointResponseOutput) ScoringUri() pulumi.StringOutput {
	return o.ApplyT(func(v BatchEndpointResponse) string { return v.ScoringUri }).(pulumi.StringOutput)
}

// Endpoint Swagger URI.
func (o BatchEndpointResponseOutput) SwaggerUri() pulumi.StringOutput {
	return o.ApplyT(func(v BatchEndpointResponse) string { return v.SwaggerUri }).(pulumi.StringOutput)
}

// Traffic rules on how the traffic will be routed across deployments.
func (o BatchEndpointResponseOutput) Traffic() pulumi.IntMapOutput {
	return o.ApplyT(func(v BatchEndpointResponse) map[string]int { return v.Traffic }).(pulumi.IntMapOutput)
}

// Batch inference output configuration.
type BatchOutputConfiguration struct {
	// Customized output file name for append_row output action.
	AppendRowFileName *string `pulumi:"appendRowFileName"`
	// Indicates how the output will be organized.
	OutputAction *string `pulumi:"outputAction"`
}

// BatchOutputConfigurationInput is an input type that accepts BatchOutputConfigurationArgs and BatchOutputConfigurationOutput values.
// You can construct a concrete instance of `BatchOutputConfigurationInput` via:
//
//	BatchOutputConfigurationArgs{...}
type BatchOutputConfigurationInput interface {
	pulumi.Input

	ToBatchOutputConfigurationOutput() BatchOutputConfigurationOutput
	ToBatchOutputConfigurationOutputWithContext(context.Context) BatchOutputConfigurationOutput
}

// Batch inference output configuration.
type BatchOutputConfigurationArgs struct {
	// Customized output file name for append_row output action.
	AppendRowFileName pulumi.StringPtrInput `pulumi:"appendRowFileName"`
	// Indicates how the output will be organized.
	OutputAction pulumi.StringPtrInput `pulumi:"outputAction"`
}

func (BatchOutputConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BatchOutputConfiguration)(nil)).Elem()
}

func (i BatchOutputConfigurationArgs) ToBatchOutputConfigurationOutput() BatchOutputConfigurationOutput {
	return i.ToBatchOutputConfigurationOutputWithContext(context.Background())
}

func (i BatchOutputConfigurationArgs) ToBatchOutputConfigurationOutputWithContext(ctx context.Context) BatchOutputConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BatchOutputConfigurationOutput)
}

func (i BatchOutputConfigurationArgs) ToBatchOutputConfigurationPtrOutput() BatchOutputConfigurationPtrOutput {
	return i.ToBatchOutputConfigurationPtrOutputWithContext(context.Background())
}

func (i BatchOutputConfigurationArgs) ToBatchOutputConfigurationPtrOutputWithContext(ctx context.Context) BatchOutputConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BatchOutputConfigurationOutput).ToBatchOutputConfigurationPtrOutputWithContext(ctx)
}

// BatchOutputConfigurationPtrInput is an input type that accepts BatchOutputConfigurationArgs, BatchOutputConfigurationPtr and BatchOutputConfigurationPtrOutput values.
// You can construct a concrete instance of `BatchOutputConfigurationPtrInput` via:
//
//	        BatchOutputConfigurationArgs{...}
//
//	or:
//
//	        nil
type BatchOutputConfigurationPtrInput interface {
	pulumi.Input

	ToBatchOutputConfigurationPtrOutput() BatchOutputConfigurationPtrOutput
	ToBatchOutputConfigurationPtrOutputWithContext(context.Context) BatchOutputConfigurationPtrOutput
}

type batchOutputConfigurationPtrType BatchOutputConfigurationArgs

func BatchOutputConfigurationPtr(v *BatchOutputConfigurationArgs) BatchOutputConfigurationPtrInput {
	return (*batchOutputConfigurationPtrType)(v)
}

func (*batchOutputConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BatchOutputConfiguration)(nil)).Elem()
}

func (i *batchOutputConfigurationPtrType) ToBatchOutputConfigurationPtrOutput() BatchOutputConfigurationPtrOutput {
	return i.ToBatchOutputConfigurationPtrOutputWithContext(context.Background())
}

func (i *batchOutputConfigurationPtrType) ToBatchOutputConfigurationPtrOutputWithContext(ctx context.Context) BatchOutputConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BatchOutputConfigurationPtrOutput)
}

// Batch inference output configuration.
type BatchOutputConfigurationOutput struct{ *pulumi.OutputState }

func (BatchOutputConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BatchOutputConfiguration)(nil)).Elem()
}

func (o BatchOutputConfigurationOutput) ToBatchOutputConfigurationOutput() BatchOutputConfigurationOutput {
	return o
}

func (o BatchOutputConfigurationOutput) ToBatchOutputConfigurationOutputWithContext(ctx context.Context) BatchOutputConfigurationOutput {
	return o
}

func (o BatchOutputConfigurationOutput) ToBatchOutputConfigurationPtrOutput() BatchOutputConfigurationPtrOutput {
	return o.ToBatchOutputConfigurationPtrOutputWithContext(context.Background())
}

func (o BatchOutputConfigurationOutput) ToBatchOutputConfigurationPtrOutputWithContext(ctx context.Context) BatchOutputConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BatchOutputConfiguration) *BatchOutputConfiguration {
		return &v
	}).(BatchOutputConfigurationPtrOutput)
}

// Customized output file name for append_row output action.
func (o BatchOutputConfigurationOutput) AppendRowFileName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BatchOutputConfiguration) *string { return v.AppendRowFileName }).(pulumi.StringPtrOutput)
}

// Indicates how the output will be organized.
func (o BatchOutputConfigurationOutput) OutputAction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BatchOutputConfiguration) *string { return v.OutputAction }).(pulumi.StringPtrOutput)
}

type BatchOutputConfigurationPtrOutput struct{ *pulumi.OutputState }

func (BatchOutputConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BatchOutputConfiguration)(nil)).Elem()
}

func (o BatchOutputConfigurationPtrOutput) ToBatchOutputConfigurationPtrOutput() BatchOutputConfigurationPtrOutput {
	return o
}

func (o BatchOutputConfigurationPtrOutput) ToBatchOutputConfigurationPtrOutputWithContext(ctx context.Context) BatchOutputConfigurationPtrOutput {
	return o
}

func (o BatchOutputConfigurationPtrOutput) Elem() BatchOutputConfigurationOutput {
	return o.ApplyT(func(v *BatchOutputConfiguration) BatchOutputConfiguration {
		if v != nil {
			return *v
		}
		var ret BatchOutputConfiguration
		return ret
	}).(BatchOutputConfigurationOutput)
}

// Customized output file name for append_row output action.
func (o BatchOutputConfigurationPtrOutput) AppendRowFileName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BatchOutputConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.AppendRowFileName
	}).(pulumi.StringPtrOutput)
}

// Indicates how the output will be organized.
func (o BatchOutputConfigurationPtrOutput) OutputAction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BatchOutputConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.OutputAction
	}).(pulumi.StringPtrOutput)
}

// Batch inference output configuration.
type BatchOutputConfigurationResponse struct {
	// Customized output file name for append_row output action.
	AppendRowFileName *string `pulumi:"appendRowFileName"`
	// Indicates how the output will be organized.
	OutputAction *string `pulumi:"outputAction"`
}

// Batch inference output configuration.
type BatchOutputConfigurationResponseOutput struct{ *pulumi.OutputState }

func (BatchOutputConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BatchOutputConfigurationResponse)(nil)).Elem()
}

func (o BatchOutputConfigurationResponseOutput) ToBatchOutputConfigurationResponseOutput() BatchOutputConfigurationResponseOutput {
	return o
}

func (o BatchOutputConfigurationResponseOutput) ToBatchOutputConfigurationResponseOutputWithContext(ctx context.Context) BatchOutputConfigurationResponseOutput {
	return o
}

// Customized output file name for append_row output action.
func (o BatchOutputConfigurationResponseOutput) AppendRowFileName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BatchOutputConfigurationResponse) *string { return v.AppendRowFileName }).(pulumi.StringPtrOutput)
}

// Indicates how the output will be organized.
func (o BatchOutputConfigurationResponseOutput) OutputAction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BatchOutputConfigurationResponse) *string { return v.OutputAction }).(pulumi.StringPtrOutput)
}

type BatchOutputConfigurationResponsePtrOutput struct{ *pulumi.OutputState }

func (BatchOutputConfigurationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BatchOutputConfigurationResponse)(nil)).Elem()
}

func (o BatchOutputConfigurationResponsePtrOutput) ToBatchOutputConfigurationResponsePtrOutput() BatchOutputConfigurationResponsePtrOutput {
	return o
}

func (o BatchOutputConfigurationResponsePtrOutput) ToBatchOutputConfigurationResponsePtrOutputWithContext(ctx context.Context) BatchOutputConfigurationResponsePtrOutput {
	return o
}

func (o BatchOutputConfigurationResponsePtrOutput) Elem() BatchOutputConfigurationResponseOutput {
	return o.ApplyT(func(v *BatchOutputConfigurationResponse) BatchOutputConfigurationResponse {
		if v != nil {
			return *v
		}
		var ret BatchOutputConfigurationResponse
		return ret
	}).(BatchOutputConfigurationResponseOutput)
}

// Customized output file name for append_row output action.
func (o BatchOutputConfigurationResponsePtrOutput) AppendRowFileName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BatchOutputConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.AppendRowFileName
	}).(pulumi.StringPtrOutput)
}

// Indicates how the output will be organized.
func (o BatchOutputConfigurationResponsePtrOutput) OutputAction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BatchOutputConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.OutputAction
	}).(pulumi.StringPtrOutput)
}

// Retry settings for a batch inference operation.
type BatchRetrySettings struct {
	// Maximum retry count for a mini-batch
	MaxRetries *int `pulumi:"maxRetries"`
	// Invocation timeout for a mini-batch, in ISO 8601 format.
	Timeout *string `pulumi:"timeout"`
}

// BatchRetrySettingsInput is an input type that accepts BatchRetrySettingsArgs and BatchRetrySettingsOutput values.
// You can construct a concrete instance of `BatchRetrySettingsInput` via:
//
//	BatchRetrySettingsArgs{...}
type BatchRetrySettingsInput interface {
	pulumi.Input

	ToBatchRetrySettingsOutput() BatchRetrySettingsOutput
	ToBatchRetrySettingsOutputWithContext(context.Context) BatchRetrySettingsOutput
}

// Retry settings for a batch inference operation.
type BatchRetrySettingsArgs struct {
	// Maximum retry count for a mini-batch
	MaxRetries pulumi.IntPtrInput `pulumi:"maxRetries"`
	// Invocation timeout for a mini-batch, in ISO 8601 format.
	Timeout pulumi.StringPtrInput `pulumi:"timeout"`
}

func (BatchRetrySettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BatchRetrySettings)(nil)).Elem()
}

func (i BatchRetrySettingsArgs) ToBatchRetrySettingsOutput() BatchRetrySettingsOutput {
	return i.ToBatchRetrySettingsOutputWithContext(context.Background())
}

func (i BatchRetrySettingsArgs) ToBatchRetrySettingsOutputWithContext(ctx context.Context) BatchRetrySettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BatchRetrySettingsOutput)
}

func (i BatchRetrySettingsArgs) ToBatchRetrySettingsPtrOutput() BatchRetrySettingsPtrOutput {
	return i.ToBatchRetrySettingsPtrOutputWithContext(context.Background())
}

func (i BatchRetrySettingsArgs) ToBatchRetrySettingsPtrOutputWithContext(ctx context.Context) BatchRetrySettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BatchRetrySettingsOutput).ToBatchRetrySettingsPtrOutputWithContext(ctx)
}

// BatchRetrySettingsPtrInput is an input type that accepts BatchRetrySettingsArgs, BatchRetrySettingsPtr and BatchRetrySettingsPtrOutput values.
// You can construct a concrete instance of `BatchRetrySettingsPtrInput` via:
//
//	        BatchRetrySettingsArgs{...}
//
//	or:
//
//	        nil
type BatchRetrySettingsPtrInput interface {
	pulumi.Input

	ToBatchRetrySettingsPtrOutput() BatchRetrySettingsPtrOutput
	ToBatchRetrySettingsPtrOutputWithContext(context.Context) BatchRetrySettingsPtrOutput
}

type batchRetrySettingsPtrType BatchRetrySettingsArgs

func BatchRetrySettingsPtr(v *BatchRetrySettingsArgs) BatchRetrySettingsPtrInput {
	return (*batchRetrySettingsPtrType)(v)
}

func (*batchRetrySettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BatchRetrySettings)(nil)).Elem()
}

func (i *batchRetrySettingsPtrType) ToBatchRetrySettingsPtrOutput() BatchRetrySettingsPtrOutput {
	return i.ToBatchRetrySettingsPtrOutputWithContext(context.Background())
}

func (i *batchRetrySettingsPtrType) ToBatchRetrySettingsPtrOutputWithContext(ctx context.Context) BatchRetrySettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BatchRetrySettingsPtrOutput)
}

// Retry settings for a batch inference operation.
type BatchRetrySettingsOutput struct{ *pulumi.OutputState }

func (BatchRetrySettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BatchRetrySettings)(nil)).Elem()
}

func (o BatchRetrySettingsOutput) ToBatchRetrySettingsOutput() BatchRetrySettingsOutput {
	return o
}

func (o BatchRetrySettingsOutput) ToBatchRetrySettingsOutputWithContext(ctx context.Context) BatchRetrySettingsOutput {
	return o
}

func (o BatchRetrySettingsOutput) ToBatchRetrySettingsPtrOutput() BatchRetrySettingsPtrOutput {
	return o.ToBatchRetrySettingsPtrOutputWithContext(context.Background())
}

func (o BatchRetrySettingsOutput) ToBatchRetrySettingsPtrOutputWithContext(ctx context.Context) BatchRetrySettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BatchRetrySettings) *BatchRetrySettings {
		return &v
	}).(BatchRetrySettingsPtrOutput)
}

// Maximum retry count for a mini-batch
func (o BatchRetrySettingsOutput) MaxRetries() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BatchRetrySettings) *int { return v.MaxRetries }).(pulumi.IntPtrOutput)
}

// Invocation timeout for a mini-batch, in ISO 8601 format.
func (o BatchRetrySettingsOutput) Timeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BatchRetrySettings) *string { return v.Timeout }).(pulumi.StringPtrOutput)
}

type BatchRetrySettingsPtrOutput struct{ *pulumi.OutputState }

func (BatchRetrySettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BatchRetrySettings)(nil)).Elem()
}

func (o BatchRetrySettingsPtrOutput) ToBatchRetrySettingsPtrOutput() BatchRetrySettingsPtrOutput {
	return o
}

func (o BatchRetrySettingsPtrOutput) ToBatchRetrySettingsPtrOutputWithContext(ctx context.Context) BatchRetrySettingsPtrOutput {
	return o
}

func (o BatchRetrySettingsPtrOutput) Elem() BatchRetrySettingsOutput {
	return o.ApplyT(func(v *BatchRetrySettings) BatchRetrySettings {
		if v != nil {
			return *v
		}
		var ret BatchRetrySettings
		return ret
	}).(BatchRetrySettingsOutput)
}

// Maximum retry count for a mini-batch
func (o BatchRetrySettingsPtrOutput) MaxRetries() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BatchRetrySettings) *int {
		if v == nil {
			return nil
		}
		return v.MaxRetries
	}).(pulumi.IntPtrOutput)
}

// Invocation timeout for a mini-batch, in ISO 8601 format.
func (o BatchRetrySettingsPtrOutput) Timeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BatchRetrySettings) *string {
		if v == nil {
			return nil
		}
		return v.Timeout
	}).(pulumi.StringPtrOutput)
}

// Retry settings for a batch inference operation.
type BatchRetrySettingsResponse struct {
	// Maximum retry count for a mini-batch
	MaxRetries *int `pulumi:"maxRetries"`
	// Invocation timeout for a mini-batch, in ISO 8601 format.
	Timeout *string `pulumi:"timeout"`
}

// Retry settings for a batch inference operation.
type BatchRetrySettingsResponseOutput struct{ *pulumi.OutputState }

func (BatchRetrySettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BatchRetrySettingsResponse)(nil)).Elem()
}

func (o BatchRetrySettingsResponseOutput) ToBatchRetrySettingsResponseOutput() BatchRetrySettingsResponseOutput {
	return o
}

func (o BatchRetrySettingsResponseOutput) ToBatchRetrySettingsResponseOutputWithContext(ctx context.Context) BatchRetrySettingsResponseOutput {
	return o
}

// Maximum retry count for a mini-batch
func (o BatchRetrySettingsResponseOutput) MaxRetries() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BatchRetrySettingsResponse) *int { return v.MaxRetries }).(pulumi.IntPtrOutput)
}

// Invocation timeout for a mini-batch, in ISO 8601 format.
func (o BatchRetrySettingsResponseOutput) Timeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BatchRetrySettingsResponse) *string { return v.Timeout }).(pulumi.StringPtrOutput)
}

type BatchRetrySettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (BatchRetrySettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BatchRetrySettingsResponse)(nil)).Elem()
}

func (o BatchRetrySettingsResponsePtrOutput) ToBatchRetrySettingsResponsePtrOutput() BatchRetrySettingsResponsePtrOutput {
	return o
}

func (o BatchRetrySettingsResponsePtrOutput) ToBatchRetrySettingsResponsePtrOutputWithContext(ctx context.Context) BatchRetrySettingsResponsePtrOutput {
	return o
}

func (o BatchRetrySettingsResponsePtrOutput) Elem() BatchRetrySettingsResponseOutput {
	return o.ApplyT(func(v *BatchRetrySettingsResponse) BatchRetrySettingsResponse {
		if v != nil {
			return *v
		}
		var ret BatchRetrySettingsResponse
		return ret
	}).(BatchRetrySettingsResponseOutput)
}

// Maximum retry count for a mini-batch
func (o BatchRetrySettingsResponsePtrOutput) MaxRetries() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BatchRetrySettingsResponse) *int {
		if v == nil {
			return nil
		}
		return v.MaxRetries
	}).(pulumi.IntPtrOutput)
}

// Invocation timeout for a mini-batch, in ISO 8601 format.
func (o BatchRetrySettingsResponsePtrOutput) Timeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BatchRetrySettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.Timeout
	}).(pulumi.StringPtrOutput)
}

// Certificate datastore credentials configuration.
type CertificateDatastoreCredentials struct {
	// Authority URL used for authentication.
	AuthorityUrl *string `pulumi:"authorityUrl"`
	// [Required] Service principal client ID.
	ClientId string `pulumi:"clientId"`
	// Enum to determine the datastore credentials type.
	// Expected value is 'Certificate'.
	CredentialsType string `pulumi:"credentialsType"`
	// Resource the service principal has access to.
	ResourceUri *string `pulumi:"resourceUri"`
	// Service principal secrets.
	Secrets *CertificateDatastoreSecrets `pulumi:"secrets"`
	// [Required] ID of the tenant to which the service principal belongs.
	TenantId string `pulumi:"tenantId"`
	// [Required] Thumbprint of the certificate used for authentication.
	Thumbprint string `pulumi:"thumbprint"`
}

// CertificateDatastoreCredentialsInput is an input type that accepts CertificateDatastoreCredentialsArgs and CertificateDatastoreCredentialsOutput values.
// You can construct a concrete instance of `CertificateDatastoreCredentialsInput` via:
//
//	CertificateDatastoreCredentialsArgs{...}
type CertificateDatastoreCredentialsInput interface {
	pulumi.Input

	ToCertificateDatastoreCredentialsOutput() CertificateDatastoreCredentialsOutput
	ToCertificateDatastoreCredentialsOutputWithContext(context.Context) CertificateDatastoreCredentialsOutput
}

// Certificate datastore credentials configuration.
type CertificateDatastoreCredentialsArgs struct {
	// Authority URL used for authentication.
	AuthorityUrl pulumi.StringPtrInput `pulumi:"authorityUrl"`
	// [Required] Service principal client ID.
	ClientId pulumi.StringInput `pulumi:"clientId"`
	// Enum to determine the datastore credentials type.
	// Expected value is 'Certificate'.
	CredentialsType pulumi.StringInput `pulumi:"credentialsType"`
	// Resource the service principal has access to.
	ResourceUri pulumi.StringPtrInput `pulumi:"resourceUri"`
	// Service principal secrets.
	Secrets CertificateDatastoreSecretsPtrInput `pulumi:"secrets"`
	// [Required] ID of the tenant to which the service principal belongs.
	TenantId pulumi.StringInput `pulumi:"tenantId"`
	// [Required] Thumbprint of the certificate used for authentication.
	Thumbprint pulumi.StringInput `pulumi:"thumbprint"`
}

func (CertificateDatastoreCredentialsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateDatastoreCredentials)(nil)).Elem()
}

func (i CertificateDatastoreCredentialsArgs) ToCertificateDatastoreCredentialsOutput() CertificateDatastoreCredentialsOutput {
	return i.ToCertificateDatastoreCredentialsOutputWithContext(context.Background())
}

func (i CertificateDatastoreCredentialsArgs) ToCertificateDatastoreCredentialsOutputWithContext(ctx context.Context) CertificateDatastoreCredentialsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateDatastoreCredentialsOutput)
}

// Certificate datastore credentials configuration.
type CertificateDatastoreCredentialsOutput struct{ *pulumi.OutputState }

func (CertificateDatastoreCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateDatastoreCredentials)(nil)).Elem()
}

func (o CertificateDatastoreCredentialsOutput) ToCertificateDatastoreCredentialsOutput() CertificateDatastoreCredentialsOutput {
	return o
}

func (o CertificateDatastoreCredentialsOutput) ToCertificateDatastoreCredentialsOutputWithContext(ctx context.Context) CertificateDatastoreCredentialsOutput {
	return o
}

// Authority URL used for authentication.
func (o CertificateDatastoreCredentialsOutput) AuthorityUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateDatastoreCredentials) *string { return v.AuthorityUrl }).(pulumi.StringPtrOutput)
}

// [Required] Service principal client ID.
func (o CertificateDatastoreCredentialsOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v CertificateDatastoreCredentials) string { return v.ClientId }).(pulumi.StringOutput)
}

// Enum to determine the datastore credentials type.
// Expected value is 'Certificate'.
func (o CertificateDatastoreCredentialsOutput) CredentialsType() pulumi.StringOutput {
	return o.ApplyT(func(v CertificateDatastoreCredentials) string { return v.CredentialsType }).(pulumi.StringOutput)
}

// Resource the service principal has access to.
func (o CertificateDatastoreCredentialsOutput) ResourceUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateDatastoreCredentials) *string { return v.ResourceUri }).(pulumi.StringPtrOutput)
}

// Service principal secrets.
func (o CertificateDatastoreCredentialsOutput) Secrets() CertificateDatastoreSecretsPtrOutput {
	return o.ApplyT(func(v CertificateDatastoreCredentials) *CertificateDatastoreSecrets { return v.Secrets }).(CertificateDatastoreSecretsPtrOutput)
}

// [Required] ID of the tenant to which the service principal belongs.
func (o CertificateDatastoreCredentialsOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v CertificateDatastoreCredentials) string { return v.TenantId }).(pulumi.StringOutput)
}

// [Required] Thumbprint of the certificate used for authentication.
func (o CertificateDatastoreCredentialsOutput) Thumbprint() pulumi.StringOutput {
	return o.ApplyT(func(v CertificateDatastoreCredentials) string { return v.Thumbprint }).(pulumi.StringOutput)
}

// Certificate datastore credentials configuration.
type CertificateDatastoreCredentialsResponse struct {
	// Authority URL used for authentication.
	AuthorityUrl *string `pulumi:"authorityUrl"`
	// [Required] Service principal client ID.
	ClientId string `pulumi:"clientId"`
	// Enum to determine the datastore credentials type.
	// Expected value is 'Certificate'.
	CredentialsType string `pulumi:"credentialsType"`
	// Resource the service principal has access to.
	ResourceUri *string `pulumi:"resourceUri"`
	// [Required] ID of the tenant to which the service principal belongs.
	TenantId string `pulumi:"tenantId"`
	// [Required] Thumbprint of the certificate used for authentication.
	Thumbprint string `pulumi:"thumbprint"`
}

// Certificate datastore credentials configuration.
type CertificateDatastoreCredentialsResponseOutput struct{ *pulumi.OutputState }

func (CertificateDatastoreCredentialsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateDatastoreCredentialsResponse)(nil)).Elem()
}

func (o CertificateDatastoreCredentialsResponseOutput) ToCertificateDatastoreCredentialsResponseOutput() CertificateDatastoreCredentialsResponseOutput {
	return o
}

func (o CertificateDatastoreCredentialsResponseOutput) ToCertificateDatastoreCredentialsResponseOutputWithContext(ctx context.Context) CertificateDatastoreCredentialsResponseOutput {
	return o
}

// Authority URL used for authentication.
func (o CertificateDatastoreCredentialsResponseOutput) AuthorityUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateDatastoreCredentialsResponse) *string { return v.AuthorityUrl }).(pulumi.StringPtrOutput)
}

// [Required] Service principal client ID.
func (o CertificateDatastoreCredentialsResponseOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v CertificateDatastoreCredentialsResponse) string { return v.ClientId }).(pulumi.StringOutput)
}

// Enum to determine the datastore credentials type.
// Expected value is 'Certificate'.
func (o CertificateDatastoreCredentialsResponseOutput) CredentialsType() pulumi.StringOutput {
	return o.ApplyT(func(v CertificateDatastoreCredentialsResponse) string { return v.CredentialsType }).(pulumi.StringOutput)
}

// Resource the service principal has access to.
func (o CertificateDatastoreCredentialsResponseOutput) ResourceUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateDatastoreCredentialsResponse) *string { return v.ResourceUri }).(pulumi.StringPtrOutput)
}

// [Required] ID of the tenant to which the service principal belongs.
func (o CertificateDatastoreCredentialsResponseOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v CertificateDatastoreCredentialsResponse) string { return v.TenantId }).(pulumi.StringOutput)
}

// [Required] Thumbprint of the certificate used for authentication.
func (o CertificateDatastoreCredentialsResponseOutput) Thumbprint() pulumi.StringOutput {
	return o.ApplyT(func(v CertificateDatastoreCredentialsResponse) string { return v.Thumbprint }).(pulumi.StringOutput)
}

// Datastore certificate secrets.
type CertificateDatastoreSecrets struct {
	// Service principal certificate.
	Certificate *string `pulumi:"certificate"`
	// Enum to determine the datastore secrets type.
	// Expected value is 'Certificate'.
	SecretsType string `pulumi:"secretsType"`
}

// CertificateDatastoreSecretsInput is an input type that accepts CertificateDatastoreSecretsArgs and CertificateDatastoreSecretsOutput values.
// You can construct a concrete instance of `CertificateDatastoreSecretsInput` via:
//
//	CertificateDatastoreSecretsArgs{...}
type CertificateDatastoreSecretsInput interface {
	pulumi.Input

	ToCertificateDatastoreSecretsOutput() CertificateDatastoreSecretsOutput
	ToCertificateDatastoreSecretsOutputWithContext(context.Context) CertificateDatastoreSecretsOutput
}

// Datastore certificate secrets.
type CertificateDatastoreSecretsArgs struct {
	// Service principal certificate.
	Certificate pulumi.StringPtrInput `pulumi:"certificate"`
	// Enum to determine the datastore secrets type.
	// Expected value is 'Certificate'.
	SecretsType pulumi.StringInput `pulumi:"secretsType"`
}

func (CertificateDatastoreSecretsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateDatastoreSecrets)(nil)).Elem()
}

func (i CertificateDatastoreSecretsArgs) ToCertificateDatastoreSecretsOutput() CertificateDatastoreSecretsOutput {
	return i.ToCertificateDatastoreSecretsOutputWithContext(context.Background())
}

func (i CertificateDatastoreSecretsArgs) ToCertificateDatastoreSecretsOutputWithContext(ctx context.Context) CertificateDatastoreSecretsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateDatastoreSecretsOutput)
}

func (i CertificateDatastoreSecretsArgs) ToCertificateDatastoreSecretsPtrOutput() CertificateDatastoreSecretsPtrOutput {
	return i.ToCertificateDatastoreSecretsPtrOutputWithContext(context.Background())
}

func (i CertificateDatastoreSecretsArgs) ToCertificateDatastoreSecretsPtrOutputWithContext(ctx context.Context) CertificateDatastoreSecretsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateDatastoreSecretsOutput).ToCertificateDatastoreSecretsPtrOutputWithContext(ctx)
}

// CertificateDatastoreSecretsPtrInput is an input type that accepts CertificateDatastoreSecretsArgs, CertificateDatastoreSecretsPtr and CertificateDatastoreSecretsPtrOutput values.
// You can construct a concrete instance of `CertificateDatastoreSecretsPtrInput` via:
//
//	        CertificateDatastoreSecretsArgs{...}
//
//	or:
//
//	        nil
type CertificateDatastoreSecretsPtrInput interface {
	pulumi.Input

	ToCertificateDatastoreSecretsPtrOutput() CertificateDatastoreSecretsPtrOutput
	ToCertificateDatastoreSecretsPtrOutputWithContext(context.Context) CertificateDatastoreSecretsPtrOutput
}

type certificateDatastoreSecretsPtrType CertificateDatastoreSecretsArgs

func CertificateDatastoreSecretsPtr(v *CertificateDatastoreSecretsArgs) CertificateDatastoreSecretsPtrInput {
	return (*certificateDatastoreSecretsPtrType)(v)
}

func (*certificateDatastoreSecretsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CertificateDatastoreSecrets)(nil)).Elem()
}

func (i *certificateDatastoreSecretsPtrType) ToCertificateDatastoreSecretsPtrOutput() CertificateDatastoreSecretsPtrOutput {
	return i.ToCertificateDatastoreSecretsPtrOutputWithContext(context.Background())
}

func (i *certificateDatastoreSecretsPtrType) ToCertificateDatastoreSecretsPtrOutputWithContext(ctx context.Context) CertificateDatastoreSecretsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateDatastoreSecretsPtrOutput)
}

// Datastore certificate secrets.
type CertificateDatastoreSecretsOutput struct{ *pulumi.OutputState }

func (CertificateDatastoreSecretsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateDatastoreSecrets)(nil)).Elem()
}

func (o CertificateDatastoreSecretsOutput) ToCertificateDatastoreSecretsOutput() CertificateDatastoreSecretsOutput {
	return o
}

func (o CertificateDatastoreSecretsOutput) ToCertificateDatastoreSecretsOutputWithContext(ctx context.Context) CertificateDatastoreSecretsOutput {
	return o
}

func (o CertificateDatastoreSecretsOutput) ToCertificateDatastoreSecretsPtrOutput() CertificateDatastoreSecretsPtrOutput {
	return o.ToCertificateDatastoreSecretsPtrOutputWithContext(context.Background())
}

func (o CertificateDatastoreSecretsOutput) ToCertificateDatastoreSecretsPtrOutputWithContext(ctx context.Context) CertificateDatastoreSecretsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CertificateDatastoreSecrets) *CertificateDatastoreSecrets {
		return &v
	}).(CertificateDatastoreSecretsPtrOutput)
}

// Service principal certificate.
func (o CertificateDatastoreSecretsOutput) Certificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateDatastoreSecrets) *string { return v.Certificate }).(pulumi.StringPtrOutput)
}

// Enum to determine the datastore secrets type.
// Expected value is 'Certificate'.
func (o CertificateDatastoreSecretsOutput) SecretsType() pulumi.StringOutput {
	return o.ApplyT(func(v CertificateDatastoreSecrets) string { return v.SecretsType }).(pulumi.StringOutput)
}

type CertificateDatastoreSecretsPtrOutput struct{ *pulumi.OutputState }

func (CertificateDatastoreSecretsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CertificateDatastoreSecrets)(nil)).Elem()
}

func (o CertificateDatastoreSecretsPtrOutput) ToCertificateDatastoreSecretsPtrOutput() CertificateDatastoreSecretsPtrOutput {
	return o
}

func (o CertificateDatastoreSecretsPtrOutput) ToCertificateDatastoreSecretsPtrOutputWithContext(ctx context.Context) CertificateDatastoreSecretsPtrOutput {
	return o
}

func (o CertificateDatastoreSecretsPtrOutput) Elem() CertificateDatastoreSecretsOutput {
	return o.ApplyT(func(v *CertificateDatastoreSecrets) CertificateDatastoreSecrets {
		if v != nil {
			return *v
		}
		var ret CertificateDatastoreSecrets
		return ret
	}).(CertificateDatastoreSecretsOutput)
}

// Service principal certificate.
func (o CertificateDatastoreSecretsPtrOutput) Certificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateDatastoreSecrets) *string {
		if v == nil {
			return nil
		}
		return v.Certificate
	}).(pulumi.StringPtrOutput)
}

// Enum to determine the datastore secrets type.
// Expected value is 'Certificate'.
func (o CertificateDatastoreSecretsPtrOutput) SecretsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateDatastoreSecrets) *string {
		if v == nil {
			return nil
		}
		return &v.SecretsType
	}).(pulumi.StringPtrOutput)
}

// Configuration for a scoring code asset.
type CodeConfiguration struct {
	// ARM resource ID of the code asset.
	CodeId *string `pulumi:"codeId"`
	// [Required] The script to execute on startup. eg. "score.py"
	ScoringScript string `pulumi:"scoringScript"`
}

// CodeConfigurationInput is an input type that accepts CodeConfigurationArgs and CodeConfigurationOutput values.
// You can construct a concrete instance of `CodeConfigurationInput` via:
//
//	CodeConfigurationArgs{...}
type CodeConfigurationInput interface {
	pulumi.Input

	ToCodeConfigurationOutput() CodeConfigurationOutput
	ToCodeConfigurationOutputWithContext(context.Context) CodeConfigurationOutput
}

// Configuration for a scoring code asset.
type CodeConfigurationArgs struct {
	// ARM resource ID of the code asset.
	CodeId pulumi.StringPtrInput `pulumi:"codeId"`
	// [Required] The script to execute on startup. eg. "score.py"
	ScoringScript pulumi.StringInput `pulumi:"scoringScript"`
}

func (CodeConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CodeConfiguration)(nil)).Elem()
}

func (i CodeConfigurationArgs) ToCodeConfigurationOutput() CodeConfigurationOutput {
	return i.ToCodeConfigurationOutputWithContext(context.Background())
}

func (i CodeConfigurationArgs) ToCodeConfigurationOutputWithContext(ctx context.Context) CodeConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CodeConfigurationOutput)
}

func (i CodeConfigurationArgs) ToCodeConfigurationPtrOutput() CodeConfigurationPtrOutput {
	return i.ToCodeConfigurationPtrOutputWithContext(context.Background())
}

func (i CodeConfigurationArgs) ToCodeConfigurationPtrOutputWithContext(ctx context.Context) CodeConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CodeConfigurationOutput).ToCodeConfigurationPtrOutputWithContext(ctx)
}

// CodeConfigurationPtrInput is an input type that accepts CodeConfigurationArgs, CodeConfigurationPtr and CodeConfigurationPtrOutput values.
// You can construct a concrete instance of `CodeConfigurationPtrInput` via:
//
//	        CodeConfigurationArgs{...}
//
//	or:
//
//	        nil
type CodeConfigurationPtrInput interface {
	pulumi.Input

	ToCodeConfigurationPtrOutput() CodeConfigurationPtrOutput
	ToCodeConfigurationPtrOutputWithContext(context.Context) CodeConfigurationPtrOutput
}

type codeConfigurationPtrType CodeConfigurationArgs

func CodeConfigurationPtr(v *CodeConfigurationArgs) CodeConfigurationPtrInput {
	return (*codeConfigurationPtrType)(v)
}

func (*codeConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CodeConfiguration)(nil)).Elem()
}

func (i *codeConfigurationPtrType) ToCodeConfigurationPtrOutput() CodeConfigurationPtrOutput {
	return i.ToCodeConfigurationPtrOutputWithContext(context.Background())
}

func (i *codeConfigurationPtrType) ToCodeConfigurationPtrOutputWithContext(ctx context.Context) CodeConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CodeConfigurationPtrOutput)
}

// Configuration for a scoring code asset.
type CodeConfigurationOutput struct{ *pulumi.OutputState }

func (CodeConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CodeConfiguration)(nil)).Elem()
}

func (o CodeConfigurationOutput) ToCodeConfigurationOutput() CodeConfigurationOutput {
	return o
}

func (o CodeConfigurationOutput) ToCodeConfigurationOutputWithContext(ctx context.Context) CodeConfigurationOutput {
	return o
}

func (o CodeConfigurationOutput) ToCodeConfigurationPtrOutput() CodeConfigurationPtrOutput {
	return o.ToCodeConfigurationPtrOutputWithContext(context.Background())
}

func (o CodeConfigurationOutput) ToCodeConfigurationPtrOutputWithContext(ctx context.Context) CodeConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CodeConfiguration) *CodeConfiguration {
		return &v
	}).(CodeConfigurationPtrOutput)
}

// ARM resource ID of the code asset.
func (o CodeConfigurationOutput) CodeId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CodeConfiguration) *string { return v.CodeId }).(pulumi.StringPtrOutput)
}

// [Required] The script to execute on startup. eg. "score.py"
func (o CodeConfigurationOutput) ScoringScript() pulumi.StringOutput {
	return o.ApplyT(func(v CodeConfiguration) string { return v.ScoringScript }).(pulumi.StringOutput)
}

type CodeConfigurationPtrOutput struct{ *pulumi.OutputState }

func (CodeConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CodeConfiguration)(nil)).Elem()
}

func (o CodeConfigurationPtrOutput) ToCodeConfigurationPtrOutput() CodeConfigurationPtrOutput {
	return o
}

func (o CodeConfigurationPtrOutput) ToCodeConfigurationPtrOutputWithContext(ctx context.Context) CodeConfigurationPtrOutput {
	return o
}

func (o CodeConfigurationPtrOutput) Elem() CodeConfigurationOutput {
	return o.ApplyT(func(v *CodeConfiguration) CodeConfiguration {
		if v != nil {
			return *v
		}
		var ret CodeConfiguration
		return ret
	}).(CodeConfigurationOutput)
}

// ARM resource ID of the code asset.
func (o CodeConfigurationPtrOutput) CodeId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CodeConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.CodeId
	}).(pulumi.StringPtrOutput)
}

// [Required] The script to execute on startup. eg. "score.py"
func (o CodeConfigurationPtrOutput) ScoringScript() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CodeConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.ScoringScript
	}).(pulumi.StringPtrOutput)
}

// Configuration for a scoring code asset.
type CodeConfigurationResponse struct {
	// ARM resource ID of the code asset.
	CodeId *string `pulumi:"codeId"`
	// [Required] The script to execute on startup. eg. "score.py"
	ScoringScript string `pulumi:"scoringScript"`
}

// Configuration for a scoring code asset.
type CodeConfigurationResponseOutput struct{ *pulumi.OutputState }

func (CodeConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CodeConfigurationResponse)(nil)).Elem()
}

func (o CodeConfigurationResponseOutput) ToCodeConfigurationResponseOutput() CodeConfigurationResponseOutput {
	return o
}

func (o CodeConfigurationResponseOutput) ToCodeConfigurationResponseOutputWithContext(ctx context.Context) CodeConfigurationResponseOutput {
	return o
}

// ARM resource ID of the code asset.
func (o CodeConfigurationResponseOutput) CodeId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CodeConfigurationResponse) *string { return v.CodeId }).(pulumi.StringPtrOutput)
}

// [Required] The script to execute on startup. eg. "score.py"
func (o CodeConfigurationResponseOutput) ScoringScript() pulumi.StringOutput {
	return o.ApplyT(func(v CodeConfigurationResponse) string { return v.ScoringScript }).(pulumi.StringOutput)
}

type CodeConfigurationResponsePtrOutput struct{ *pulumi.OutputState }

func (CodeConfigurationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CodeConfigurationResponse)(nil)).Elem()
}

func (o CodeConfigurationResponsePtrOutput) ToCodeConfigurationResponsePtrOutput() CodeConfigurationResponsePtrOutput {
	return o
}

func (o CodeConfigurationResponsePtrOutput) ToCodeConfigurationResponsePtrOutputWithContext(ctx context.Context) CodeConfigurationResponsePtrOutput {
	return o
}

func (o CodeConfigurationResponsePtrOutput) Elem() CodeConfigurationResponseOutput {
	return o.ApplyT(func(v *CodeConfigurationResponse) CodeConfigurationResponse {
		if v != nil {
			return *v
		}
		var ret CodeConfigurationResponse
		return ret
	}).(CodeConfigurationResponseOutput)
}

// ARM resource ID of the code asset.
func (o CodeConfigurationResponsePtrOutput) CodeId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CodeConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.CodeId
	}).(pulumi.StringPtrOutput)
}

// [Required] The script to execute on startup. eg. "score.py"
func (o CodeConfigurationResponsePtrOutput) ScoringScript() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CodeConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ScoringScript
	}).(pulumi.StringPtrOutput)
}

// Container for code asset versions.
type CodeContainerType struct {
	// The asset description text.
	Description *string `pulumi:"description"`
	// The asset property dictionary.
	Properties map[string]string `pulumi:"properties"`
	// Tag dictionary. Tags can be added, removed, and updated.
	Tags map[string]string `pulumi:"tags"`
}

// CodeContainerTypeInput is an input type that accepts CodeContainerTypeArgs and CodeContainerTypeOutput values.
// You can construct a concrete instance of `CodeContainerTypeInput` via:
//
//	CodeContainerTypeArgs{...}
type CodeContainerTypeInput interface {
	pulumi.Input

	ToCodeContainerTypeOutput() CodeContainerTypeOutput
	ToCodeContainerTypeOutputWithContext(context.Context) CodeContainerTypeOutput
}

// Container for code asset versions.
type CodeContainerTypeArgs struct {
	// The asset description text.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The asset property dictionary.
	Properties pulumi.StringMapInput `pulumi:"properties"`
	// Tag dictionary. Tags can be added, removed, and updated.
	Tags pulumi.StringMapInput `pulumi:"tags"`
}

func (CodeContainerTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CodeContainerType)(nil)).Elem()
}

func (i CodeContainerTypeArgs) ToCodeContainerTypeOutput() CodeContainerTypeOutput {
	return i.ToCodeContainerTypeOutputWithContext(context.Background())
}

func (i CodeContainerTypeArgs) ToCodeContainerTypeOutputWithContext(ctx context.Context) CodeContainerTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CodeContainerTypeOutput)
}

// Container for code asset versions.
type CodeContainerTypeOutput struct{ *pulumi.OutputState }

func (CodeContainerTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CodeContainerType)(nil)).Elem()
}

func (o CodeContainerTypeOutput) ToCodeContainerTypeOutput() CodeContainerTypeOutput {
	return o
}

func (o CodeContainerTypeOutput) ToCodeContainerTypeOutputWithContext(ctx context.Context) CodeContainerTypeOutput {
	return o
}

// The asset description text.
func (o CodeContainerTypeOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CodeContainerType) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The asset property dictionary.
func (o CodeContainerTypeOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v CodeContainerType) map[string]string { return v.Properties }).(pulumi.StringMapOutput)
}

// Tag dictionary. Tags can be added, removed, and updated.
func (o CodeContainerTypeOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v CodeContainerType) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Container for code asset versions.
type CodeContainerResponse struct {
	// The asset description text.
	Description *string `pulumi:"description"`
	// The asset property dictionary.
	Properties map[string]string `pulumi:"properties"`
	// Tag dictionary. Tags can be added, removed, and updated.
	Tags map[string]string `pulumi:"tags"`
}

// Container for code asset versions.
type CodeContainerResponseOutput struct{ *pulumi.OutputState }

func (CodeContainerResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CodeContainerResponse)(nil)).Elem()
}

func (o CodeContainerResponseOutput) ToCodeContainerResponseOutput() CodeContainerResponseOutput {
	return o
}

func (o CodeContainerResponseOutput) ToCodeContainerResponseOutputWithContext(ctx context.Context) CodeContainerResponseOutput {
	return o
}

// The asset description text.
func (o CodeContainerResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CodeContainerResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The asset property dictionary.
func (o CodeContainerResponseOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v CodeContainerResponse) map[string]string { return v.Properties }).(pulumi.StringMapOutput)
}

// Tag dictionary. Tags can be added, removed, and updated.
func (o CodeContainerResponseOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v CodeContainerResponse) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Code asset version details.
type CodeVersionType struct {
	// ARM resource ID of the datastore where the asset is located.
	DatastoreId *string `pulumi:"datastoreId"`
	// The asset description text.
	Description *string `pulumi:"description"`
	// If the name version are system generated (anonymous registration).
	IsAnonymous *bool `pulumi:"isAnonymous"`
	// [Required] The path of the file/directory in the datastore.
	Path string `pulumi:"path"`
	// The asset property dictionary.
	Properties map[string]string `pulumi:"properties"`
	// Tag dictionary. Tags can be added, removed, and updated.
	Tags map[string]string `pulumi:"tags"`
}

// CodeVersionTypeInput is an input type that accepts CodeVersionTypeArgs and CodeVersionTypeOutput values.
// You can construct a concrete instance of `CodeVersionTypeInput` via:
//
//	CodeVersionTypeArgs{...}
type CodeVersionTypeInput interface {
	pulumi.Input

	ToCodeVersionTypeOutput() CodeVersionTypeOutput
	ToCodeVersionTypeOutputWithContext(context.Context) CodeVersionTypeOutput
}

// Code asset version details.
type CodeVersionTypeArgs struct {
	// ARM resource ID of the datastore where the asset is located.
	DatastoreId pulumi.StringPtrInput `pulumi:"datastoreId"`
	// The asset description text.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// If the name version are system generated (anonymous registration).
	IsAnonymous pulumi.BoolPtrInput `pulumi:"isAnonymous"`
	// [Required] The path of the file/directory in the datastore.
	Path pulumi.StringInput `pulumi:"path"`
	// The asset property dictionary.
	Properties pulumi.StringMapInput `pulumi:"properties"`
	// Tag dictionary. Tags can be added, removed, and updated.
	Tags pulumi.StringMapInput `pulumi:"tags"`
}

func (CodeVersionTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CodeVersionType)(nil)).Elem()
}

func (i CodeVersionTypeArgs) ToCodeVersionTypeOutput() CodeVersionTypeOutput {
	return i.ToCodeVersionTypeOutputWithContext(context.Background())
}

func (i CodeVersionTypeArgs) ToCodeVersionTypeOutputWithContext(ctx context.Context) CodeVersionTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CodeVersionTypeOutput)
}

// Code asset version details.
type CodeVersionTypeOutput struct{ *pulumi.OutputState }

func (CodeVersionTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CodeVersionType)(nil)).Elem()
}

func (o CodeVersionTypeOutput) ToCodeVersionTypeOutput() CodeVersionTypeOutput {
	return o
}

func (o CodeVersionTypeOutput) ToCodeVersionTypeOutputWithContext(ctx context.Context) CodeVersionTypeOutput {
	return o
}

// ARM resource ID of the datastore where the asset is located.
func (o CodeVersionTypeOutput) DatastoreId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CodeVersionType) *string { return v.DatastoreId }).(pulumi.StringPtrOutput)
}

// The asset description text.
func (o CodeVersionTypeOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CodeVersionType) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// If the name version are system generated (anonymous registration).
func (o CodeVersionTypeOutput) IsAnonymous() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CodeVersionType) *bool { return v.IsAnonymous }).(pulumi.BoolPtrOutput)
}

// [Required] The path of the file/directory in the datastore.
func (o CodeVersionTypeOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v CodeVersionType) string { return v.Path }).(pulumi.StringOutput)
}

// The asset property dictionary.
func (o CodeVersionTypeOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v CodeVersionType) map[string]string { return v.Properties }).(pulumi.StringMapOutput)
}

// Tag dictionary. Tags can be added, removed, and updated.
func (o CodeVersionTypeOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v CodeVersionType) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Code asset version details.
type CodeVersionResponse struct {
	// ARM resource ID of the datastore where the asset is located.
	DatastoreId *string `pulumi:"datastoreId"`
	// The asset description text.
	Description *string `pulumi:"description"`
	// If the name version are system generated (anonymous registration).
	IsAnonymous *bool `pulumi:"isAnonymous"`
	// [Required] The path of the file/directory in the datastore.
	Path string `pulumi:"path"`
	// The asset property dictionary.
	Properties map[string]string `pulumi:"properties"`
	// Tag dictionary. Tags can be added, removed, and updated.
	Tags map[string]string `pulumi:"tags"`
}

// Code asset version details.
type CodeVersionResponseOutput struct{ *pulumi.OutputState }

func (CodeVersionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CodeVersionResponse)(nil)).Elem()
}

func (o CodeVersionResponseOutput) ToCodeVersionResponseOutput() CodeVersionResponseOutput {
	return o
}

func (o CodeVersionResponseOutput) ToCodeVersionResponseOutputWithContext(ctx context.Context) CodeVersionResponseOutput {
	return o
}

// ARM resource ID of the datastore where the asset is located.
func (o CodeVersionResponseOutput) DatastoreId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CodeVersionResponse) *string { return v.DatastoreId }).(pulumi.StringPtrOutput)
}

// The asset description text.
func (o CodeVersionResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CodeVersionResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// If the name version are system generated (anonymous registration).
func (o CodeVersionResponseOutput) IsAnonymous() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CodeVersionResponse) *bool { return v.IsAnonymous }).(pulumi.BoolPtrOutput)
}

// [Required] The path of the file/directory in the datastore.
func (o CodeVersionResponseOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v CodeVersionResponse) string { return v.Path }).(pulumi.StringOutput)
}

// The asset property dictionary.
func (o CodeVersionResponseOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v CodeVersionResponse) map[string]string { return v.Properties }).(pulumi.StringMapOutput)
}

// Tag dictionary. Tags can be added, removed, and updated.
func (o CodeVersionResponseOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v CodeVersionResponse) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Command job definition.
type CommandJob struct {
	// ARM resource ID of the code asset.
	CodeId *string `pulumi:"codeId"`
	// [Required] The command to execute on startup of the job. eg. "python train.py"
	Command string `pulumi:"command"`
	// [Required] Compute binding for the job.
	Compute ComputeConfiguration `pulumi:"compute"`
	// The asset description text.
	Description *string `pulumi:"description"`
	// Distribution configuration of the job. If set, this should be one of Mpi, Tensorflow, PyTorch, or null.
	Distribution interface{} `pulumi:"distribution"`
	// The ARM resource ID of the Environment specification for the job.
	EnvironmentId *string `pulumi:"environmentId"`
	// Environment variables included in the job.
	EnvironmentVariables map[string]string `pulumi:"environmentVariables"`
	// The name of the experiment the job belongs to. If not set, the job is placed in the "Default" experiment.
	ExperimentName *string `pulumi:"experimentName"`
	// Identity configuration. If set, this should be one of AmlToken, ManagedIdentity, or null.
	// Defaults to AmlToken if null.
	Identity interface{} `pulumi:"identity"`
	// Mapping of input data bindings used in the job.
	InputDataBindings map[string]InputDataBinding `pulumi:"inputDataBindings"`
	// Enum to determine the type of job.
	// Expected value is 'Command'.
	JobType string `pulumi:"jobType"`
	// Mapping of output data bindings used in the job.
	OutputDataBindings map[string]OutputDataBinding `pulumi:"outputDataBindings"`
	// Job priority for scheduling policy. Only applies to AMLCompute.
	// Private preview feature and only available to users on the allow list.
	Priority *int `pulumi:"priority"`
	// The asset property dictionary.
	Properties map[string]string `pulumi:"properties"`
	// Tag dictionary. Tags can be added, removed, and updated.
	Tags map[string]string `pulumi:"tags"`
	// The max run duration in ISO 8601 format, after which the job will be cancelled. Only supports duration with precision as low as Seconds.
	Timeout *string `pulumi:"timeout"`
}

// CommandJobInput is an input type that accepts CommandJobArgs and CommandJobOutput values.
// You can construct a concrete instance of `CommandJobInput` via:
//
//	CommandJobArgs{...}
type CommandJobInput interface {
	pulumi.Input

	ToCommandJobOutput() CommandJobOutput
	ToCommandJobOutputWithContext(context.Context) CommandJobOutput
}

// Command job definition.
type CommandJobArgs struct {
	// ARM resource ID of the code asset.
	CodeId pulumi.StringPtrInput `pulumi:"codeId"`
	// [Required] The command to execute on startup of the job. eg. "python train.py"
	Command pulumi.StringInput `pulumi:"command"`
	// [Required] Compute binding for the job.
	Compute ComputeConfigurationInput `pulumi:"compute"`
	// The asset description text.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Distribution configuration of the job. If set, this should be one of Mpi, Tensorflow, PyTorch, or null.
	Distribution pulumi.Input `pulumi:"distribution"`
	// The ARM resource ID of the Environment specification for the job.
	EnvironmentId pulumi.StringPtrInput `pulumi:"environmentId"`
	// Environment variables included in the job.
	EnvironmentVariables pulumi.StringMapInput `pulumi:"environmentVariables"`
	// The name of the experiment the job belongs to. If not set, the job is placed in the "Default" experiment.
	ExperimentName pulumi.StringPtrInput `pulumi:"experimentName"`
	// Identity configuration. If set, this should be one of AmlToken, ManagedIdentity, or null.
	// Defaults to AmlToken if null.
	Identity pulumi.Input `pulumi:"identity"`
	// Mapping of input data bindings used in the job.
	InputDataBindings InputDataBindingMapInput `pulumi:"inputDataBindings"`
	// Enum to determine the type of job.
	// Expected value is 'Command'.
	JobType pulumi.StringInput `pulumi:"jobType"`
	// Mapping of output data bindings used in the job.
	OutputDataBindings OutputDataBindingMapInput `pulumi:"outputDataBindings"`
	// Job priority for scheduling policy. Only applies to AMLCompute.
	// Private preview feature and only available to users on the allow list.
	Priority pulumi.IntPtrInput `pulumi:"priority"`
	// The asset property dictionary.
	Properties pulumi.StringMapInput `pulumi:"properties"`
	// Tag dictionary. Tags can be added, removed, and updated.
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// The max run duration in ISO 8601 format, after which the job will be cancelled. Only supports duration with precision as low as Seconds.
	Timeout pulumi.StringPtrInput `pulumi:"timeout"`
}

func (CommandJobArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CommandJob)(nil)).Elem()
}

func (i CommandJobArgs) ToCommandJobOutput() CommandJobOutput {
	return i.ToCommandJobOutputWithContext(context.Background())
}

func (i CommandJobArgs) ToCommandJobOutputWithContext(ctx context.Context) CommandJobOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CommandJobOutput)
}

// Command job definition.
type CommandJobOutput struct{ *pulumi.OutputState }

func (CommandJobOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CommandJob)(nil)).Elem()
}

func (o CommandJobOutput) ToCommandJobOutput() CommandJobOutput {
	return o
}

func (o CommandJobOutput) ToCommandJobOutputWithContext(ctx context.Context) CommandJobOutput {
	return o
}

// ARM resource ID of the code asset.
func (o CommandJobOutput) CodeId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CommandJob) *string { return v.CodeId }).(pulumi.StringPtrOutput)
}

// [Required] The command to execute on startup of the job. eg. "python train.py"
func (o CommandJobOutput) Command() pulumi.StringOutput {
	return o.ApplyT(func(v CommandJob) string { return v.Command }).(pulumi.StringOutput)
}

// [Required] Compute binding for the job.
func (o CommandJobOutput) Compute() ComputeConfigurationOutput {
	return o.ApplyT(func(v CommandJob) ComputeConfiguration { return v.Compute }).(ComputeConfigurationOutput)
}

// The asset description text.
func (o CommandJobOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CommandJob) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Distribution configuration of the job. If set, this should be one of Mpi, Tensorflow, PyTorch, or null.
func (o CommandJobOutput) Distribution() pulumi.AnyOutput {
	return o.ApplyT(func(v CommandJob) interface{} { return v.Distribution }).(pulumi.AnyOutput)
}

// The ARM resource ID of the Environment specification for the job.
func (o CommandJobOutput) EnvironmentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CommandJob) *string { return v.EnvironmentId }).(pulumi.StringPtrOutput)
}

// Environment variables included in the job.
func (o CommandJobOutput) EnvironmentVariables() pulumi.StringMapOutput {
	return o.ApplyT(func(v CommandJob) map[string]string { return v.EnvironmentVariables }).(pulumi.StringMapOutput)
}

// The name of the experiment the job belongs to. If not set, the job is placed in the "Default" experiment.
func (o CommandJobOutput) ExperimentName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CommandJob) *string { return v.ExperimentName }).(pulumi.StringPtrOutput)
}

// Identity configuration. If set, this should be one of AmlToken, ManagedIdentity, or null.
// Defaults to AmlToken if null.
func (o CommandJobOutput) Identity() pulumi.AnyOutput {
	return o.ApplyT(func(v CommandJob) interface{} { return v.Identity }).(pulumi.AnyOutput)
}

// Mapping of input data bindings used in the job.
func (o CommandJobOutput) InputDataBindings() InputDataBindingMapOutput {
	return o.ApplyT(func(v CommandJob) map[string]InputDataBinding { return v.InputDataBindings }).(InputDataBindingMapOutput)
}

// Enum to determine the type of job.
// Expected value is 'Command'.
func (o CommandJobOutput) JobType() pulumi.StringOutput {
	return o.ApplyT(func(v CommandJob) string { return v.JobType }).(pulumi.StringOutput)
}

// Mapping of output data bindings used in the job.
func (o CommandJobOutput) OutputDataBindings() OutputDataBindingMapOutput {
	return o.ApplyT(func(v CommandJob) map[string]OutputDataBinding { return v.OutputDataBindings }).(OutputDataBindingMapOutput)
}

// Job priority for scheduling policy. Only applies to AMLCompute.
// Private preview feature and only available to users on the allow list.
func (o CommandJobOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v CommandJob) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

// The asset property dictionary.
func (o CommandJobOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v CommandJob) map[string]string { return v.Properties }).(pulumi.StringMapOutput)
}

// Tag dictionary. Tags can be added, removed, and updated.
func (o CommandJobOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v CommandJob) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// The max run duration in ISO 8601 format, after which the job will be cancelled. Only supports duration with precision as low as Seconds.
func (o CommandJobOutput) Timeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CommandJob) *string { return v.Timeout }).(pulumi.StringPtrOutput)
}

// Command job definition.
type CommandJobResponse struct {
	// ARM resource ID of the code asset.
	CodeId *string `pulumi:"codeId"`
	// [Required] The command to execute on startup of the job. eg. "python train.py"
	Command string `pulumi:"command"`
	// [Required] Compute binding for the job.
	Compute ComputeConfigurationResponse `pulumi:"compute"`
	// The asset description text.
	Description *string `pulumi:"description"`
	// Distribution configuration of the job. If set, this should be one of Mpi, Tensorflow, PyTorch, or null.
	Distribution interface{} `pulumi:"distribution"`
	// The ARM resource ID of the Environment specification for the job.
	EnvironmentId *string `pulumi:"environmentId"`
	// Environment variables included in the job.
	EnvironmentVariables map[string]string `pulumi:"environmentVariables"`
	// The name of the experiment the job belongs to. If not set, the job is placed in the "Default" experiment.
	ExperimentName *string `pulumi:"experimentName"`
	// Identity configuration. If set, this should be one of AmlToken, ManagedIdentity, or null.
	// Defaults to AmlToken if null.
	Identity interface{} `pulumi:"identity"`
	// Mapping of input data bindings used in the job.
	InputDataBindings map[string]InputDataBindingResponse `pulumi:"inputDataBindings"`
	// List of JobEndpoints.
	// For local jobs, a job endpoint will have an endpoint value of FileStreamObject.
	InteractionEndpoints map[string]JobEndpointResponse `pulumi:"interactionEndpoints"`
	// Enum to determine the type of job.
	// Expected value is 'Command'.
	JobType string `pulumi:"jobType"`
	// Location of the job output logs and artifacts.
	Output JobOutputResponse `pulumi:"output"`
	// Mapping of output data bindings used in the job.
	OutputDataBindings map[string]OutputDataBindingResponse `pulumi:"outputDataBindings"`
	// Input parameters.
	Parameters interface{} `pulumi:"parameters"`
	// Job priority for scheduling policy. Only applies to AMLCompute.
	// Private preview feature and only available to users on the allow list.
	Priority *int `pulumi:"priority"`
	// The asset property dictionary.
	Properties map[string]string `pulumi:"properties"`
	// Specifies the job provisioning state.
	ProvisioningState string `pulumi:"provisioningState"`
	// Status of the job.
	Status string `pulumi:"status"`
	// Tag dictionary. Tags can be added, removed, and updated.
	Tags map[string]string `pulumi:"tags"`
	// The max run duration in ISO 8601 format, after which the job will be cancelled. Only supports duration with precision as low as Seconds.
	Timeout *string `pulumi:"timeout"`
}

// Command job definition.
type CommandJobResponseOutput struct{ *pulumi.OutputState }

func (CommandJobResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CommandJobResponse)(nil)).Elem()
}

func (o CommandJobResponseOutput) ToCommandJobResponseOutput() CommandJobResponseOutput {
	return o
}

func (o CommandJobResponseOutput) ToCommandJobResponseOutputWithContext(ctx context.Context) CommandJobResponseOutput {
	return o
}

// ARM resource ID of the code asset.
func (o CommandJobResponseOutput) CodeId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CommandJobResponse) *string { return v.CodeId }).(pulumi.StringPtrOutput)
}

// [Required] The command to execute on startup of the job. eg. "python train.py"
func (o CommandJobResponseOutput) Command() pulumi.StringOutput {
	return o.ApplyT(func(v CommandJobResponse) string { return v.Command }).(pulumi.StringOutput)
}

// [Required] Compute binding for the job.
func (o CommandJobResponseOutput) Compute() ComputeConfigurationResponseOutput {
	return o.ApplyT(func(v CommandJobResponse) ComputeConfigurationResponse { return v.Compute }).(ComputeConfigurationResponseOutput)
}

// The asset description text.
func (o CommandJobResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CommandJobResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Distribution configuration of the job. If set, this should be one of Mpi, Tensorflow, PyTorch, or null.
func (o CommandJobResponseOutput) Distribution() pulumi.AnyOutput {
	return o.ApplyT(func(v CommandJobResponse) interface{} { return v.Distribution }).(pulumi.AnyOutput)
}

// The ARM resource ID of the Environment specification for the job.
func (o CommandJobResponseOutput) EnvironmentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CommandJobResponse) *string { return v.EnvironmentId }).(pulumi.StringPtrOutput)
}

// Environment variables included in the job.
func (o CommandJobResponseOutput) EnvironmentVariables() pulumi.StringMapOutput {
	return o.ApplyT(func(v CommandJobResponse) map[string]string { return v.EnvironmentVariables }).(pulumi.StringMapOutput)
}

// The name of the experiment the job belongs to. If not set, the job is placed in the "Default" experiment.
func (o CommandJobResponseOutput) ExperimentName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CommandJobResponse) *string { return v.ExperimentName }).(pulumi.StringPtrOutput)
}

// Identity configuration. If set, this should be one of AmlToken, ManagedIdentity, or null.
// Defaults to AmlToken if null.
func (o CommandJobResponseOutput) Identity() pulumi.AnyOutput {
	return o.ApplyT(func(v CommandJobResponse) interface{} { return v.Identity }).(pulumi.AnyOutput)
}

// Mapping of input data bindings used in the job.
func (o CommandJobResponseOutput) InputDataBindings() InputDataBindingResponseMapOutput {
	return o.ApplyT(func(v CommandJobResponse) map[string]InputDataBindingResponse { return v.InputDataBindings }).(InputDataBindingResponseMapOutput)
}

// List of JobEndpoints.
// For local jobs, a job endpoint will have an endpoint value of FileStreamObject.
func (o CommandJobResponseOutput) InteractionEndpoints() JobEndpointResponseMapOutput {
	return o.ApplyT(func(v CommandJobResponse) map[string]JobEndpointResponse { return v.InteractionEndpoints }).(JobEndpointResponseMapOutput)
}

// Enum to determine the type of job.
// Expected value is 'Command'.
func (o CommandJobResponseOutput) JobType() pulumi.StringOutput {
	return o.ApplyT(func(v CommandJobResponse) string { return v.JobType }).(pulumi.StringOutput)
}

// Location of the job output logs and artifacts.
func (o CommandJobResponseOutput) Output() JobOutputResponseOutput {
	return o.ApplyT(func(v CommandJobResponse) JobOutputResponse { return v.Output }).(JobOutputResponseOutput)
}

// Mapping of output data bindings used in the job.
func (o CommandJobResponseOutput) OutputDataBindings() OutputDataBindingResponseMapOutput {
	return o.ApplyT(func(v CommandJobResponse) map[string]OutputDataBindingResponse { return v.OutputDataBindings }).(OutputDataBindingResponseMapOutput)
}

// Input parameters.
func (o CommandJobResponseOutput) Parameters() pulumi.AnyOutput {
	return o.ApplyT(func(v CommandJobResponse) interface{} { return v.Parameters }).(pulumi.AnyOutput)
}

// Job priority for scheduling policy. Only applies to AMLCompute.
// Private preview feature and only available to users on the allow list.
func (o CommandJobResponseOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v CommandJobResponse) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

// The asset property dictionary.
func (o CommandJobResponseOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v CommandJobResponse) map[string]string { return v.Properties }).(pulumi.StringMapOutput)
}

// Specifies the job provisioning state.
func (o CommandJobResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v CommandJobResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Status of the job.
func (o CommandJobResponseOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v CommandJobResponse) string { return v.Status }).(pulumi.StringOutput)
}

// Tag dictionary. Tags can be added, removed, and updated.
func (o CommandJobResponseOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v CommandJobResponse) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// The max run duration in ISO 8601 format, after which the job will be cancelled. Only supports duration with precision as low as Seconds.
func (o CommandJobResponseOutput) Timeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CommandJobResponse) *string { return v.Timeout }).(pulumi.StringPtrOutput)
}

// Configuration for compute binding.
type ComputeConfiguration struct {
	// Number of instances or nodes.
	InstanceCount *int `pulumi:"instanceCount"`
	// SKU type to run on.
	InstanceType *string `pulumi:"instanceType"`
	// Set to true for jobs running on local compute.
	IsLocal *bool `pulumi:"isLocal"`
	// Location for virtual cluster run.
	Location *string `pulumi:"location"`
	// Additional properties.
	Properties map[string]string `pulumi:"properties"`
	// ARM resource ID of the Compute you are targeting. If not provided the resource will be deployed as Managed.
	Target *string `pulumi:"target"`
}

// ComputeConfigurationInput is an input type that accepts ComputeConfigurationArgs and ComputeConfigurationOutput values.
// You can construct a concrete instance of `ComputeConfigurationInput` via:
//
//	ComputeConfigurationArgs{...}
type ComputeConfigurationInput interface {
	pulumi.Input

	ToComputeConfigurationOutput() ComputeConfigurationOutput
	ToComputeConfigurationOutputWithContext(context.Context) ComputeConfigurationOutput
}

// Configuration for compute binding.
type ComputeConfigurationArgs struct {
	// Number of instances or nodes.
	InstanceCount pulumi.IntPtrInput `pulumi:"instanceCount"`
	// SKU type to run on.
	InstanceType pulumi.StringPtrInput `pulumi:"instanceType"`
	// Set to true for jobs running on local compute.
	IsLocal pulumi.BoolPtrInput `pulumi:"isLocal"`
	// Location for virtual cluster run.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// Additional properties.
	Properties pulumi.StringMapInput `pulumi:"properties"`
	// ARM resource ID of the Compute you are targeting. If not provided the resource will be deployed as Managed.
	Target pulumi.StringPtrInput `pulumi:"target"`
}

func (ComputeConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ComputeConfiguration)(nil)).Elem()
}

func (i ComputeConfigurationArgs) ToComputeConfigurationOutput() ComputeConfigurationOutput {
	return i.ToComputeConfigurationOutputWithContext(context.Background())
}

func (i ComputeConfigurationArgs) ToComputeConfigurationOutputWithContext(ctx context.Context) ComputeConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeConfigurationOutput)
}

func (i ComputeConfigurationArgs) ToComputeConfigurationPtrOutput() ComputeConfigurationPtrOutput {
	return i.ToComputeConfigurationPtrOutputWithContext(context.Background())
}

func (i ComputeConfigurationArgs) ToComputeConfigurationPtrOutputWithContext(ctx context.Context) ComputeConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeConfigurationOutput).ToComputeConfigurationPtrOutputWithContext(ctx)
}

// ComputeConfigurationPtrInput is an input type that accepts ComputeConfigurationArgs, ComputeConfigurationPtr and ComputeConfigurationPtrOutput values.
// You can construct a concrete instance of `ComputeConfigurationPtrInput` via:
//
//	        ComputeConfigurationArgs{...}
//
//	or:
//
//	        nil
type ComputeConfigurationPtrInput interface {
	pulumi.Input

	ToComputeConfigurationPtrOutput() ComputeConfigurationPtrOutput
	ToComputeConfigurationPtrOutputWithContext(context.Context) ComputeConfigurationPtrOutput
}

type computeConfigurationPtrType ComputeConfigurationArgs

func ComputeConfigurationPtr(v *ComputeConfigurationArgs) ComputeConfigurationPtrInput {
	return (*computeConfigurationPtrType)(v)
}

func (*computeConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeConfiguration)(nil)).Elem()
}

func (i *computeConfigurationPtrType) ToComputeConfigurationPtrOutput() ComputeConfigurationPtrOutput {
	return i.ToComputeConfigurationPtrOutputWithContext(context.Background())
}

func (i *computeConfigurationPtrType) ToComputeConfigurationPtrOutputWithContext(ctx context.Context) ComputeConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeConfigurationPtrOutput)
}

// Configuration for compute binding.
type ComputeConfigurationOutput struct{ *pulumi.OutputState }

func (ComputeConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ComputeConfiguration)(nil)).Elem()
}

func (o ComputeConfigurationOutput) ToComputeConfigurationOutput() ComputeConfigurationOutput {
	return o
}

func (o ComputeConfigurationOutput) ToComputeConfigurationOutputWithContext(ctx context.Context) ComputeConfigurationOutput {
	return o
}

func (o ComputeConfigurationOutput) ToComputeConfigurationPtrOutput() ComputeConfigurationPtrOutput {
	return o.ToComputeConfigurationPtrOutputWithContext(context.Background())
}

func (o ComputeConfigurationOutput) ToComputeConfigurationPtrOutputWithContext(ctx context.Context) ComputeConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ComputeConfiguration) *ComputeConfiguration {
		return &v
	}).(ComputeConfigurationPtrOutput)
}

// Number of instances or nodes.
func (o ComputeConfigurationOutput) InstanceCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ComputeConfiguration) *int { return v.InstanceCount }).(pulumi.IntPtrOutput)
}

// SKU type to run on.
func (o ComputeConfigurationOutput) InstanceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComputeConfiguration) *string { return v.InstanceType }).(pulumi.StringPtrOutput)
}

// Set to true for jobs running on local compute.
func (o ComputeConfigurationOutput) IsLocal() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ComputeConfiguration) *bool { return v.IsLocal }).(pulumi.BoolPtrOutput)
}

// Location for virtual cluster run.
func (o ComputeConfigurationOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComputeConfiguration) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// Additional properties.
func (o ComputeConfigurationOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v ComputeConfiguration) map[string]string { return v.Properties }).(pulumi.StringMapOutput)
}

// ARM resource ID of the Compute you are targeting. If not provided the resource will be deployed as Managed.
func (o ComputeConfigurationOutput) Target() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComputeConfiguration) *string { return v.Target }).(pulumi.StringPtrOutput)
}

type ComputeConfigurationPtrOutput struct{ *pulumi.OutputState }

func (ComputeConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeConfiguration)(nil)).Elem()
}

func (o ComputeConfigurationPtrOutput) ToComputeConfigurationPtrOutput() ComputeConfigurationPtrOutput {
	return o
}

func (o ComputeConfigurationPtrOutput) ToComputeConfigurationPtrOutputWithContext(ctx context.Context) ComputeConfigurationPtrOutput {
	return o
}

func (o ComputeConfigurationPtrOutput) Elem() ComputeConfigurationOutput {
	return o.ApplyT(func(v *ComputeConfiguration) ComputeConfiguration {
		if v != nil {
			return *v
		}
		var ret ComputeConfiguration
		return ret
	}).(ComputeConfigurationOutput)
}

// Number of instances or nodes.
func (o ComputeConfigurationPtrOutput) InstanceCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ComputeConfiguration) *int {
		if v == nil {
			return nil
		}
		return v.InstanceCount
	}).(pulumi.IntPtrOutput)
}

// SKU type to run on.
func (o ComputeConfigurationPtrOutput) InstanceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComputeConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.InstanceType
	}).(pulumi.StringPtrOutput)
}

// Set to true for jobs running on local compute.
func (o ComputeConfigurationPtrOutput) IsLocal() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ComputeConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.IsLocal
	}).(pulumi.BoolPtrOutput)
}

// Location for virtual cluster run.
func (o ComputeConfigurationPtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComputeConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.Location
	}).(pulumi.StringPtrOutput)
}

// Additional properties.
func (o ComputeConfigurationPtrOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ComputeConfiguration) map[string]string {
		if v == nil {
			return nil
		}
		return v.Properties
	}).(pulumi.StringMapOutput)
}

// ARM resource ID of the Compute you are targeting. If not provided the resource will be deployed as Managed.
func (o ComputeConfigurationPtrOutput) Target() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComputeConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.Target
	}).(pulumi.StringPtrOutput)
}

// Configuration for compute binding.
type ComputeConfigurationResponse struct {
	// Number of instances or nodes.
	InstanceCount *int `pulumi:"instanceCount"`
	// SKU type to run on.
	InstanceType *string `pulumi:"instanceType"`
	// Set to true for jobs running on local compute.
	IsLocal *bool `pulumi:"isLocal"`
	// Location for virtual cluster run.
	Location *string `pulumi:"location"`
	// Additional properties.
	Properties map[string]string `pulumi:"properties"`
	// ARM resource ID of the Compute you are targeting. If not provided the resource will be deployed as Managed.
	Target *string `pulumi:"target"`
}

// Configuration for compute binding.
type ComputeConfigurationResponseOutput struct{ *pulumi.OutputState }

func (ComputeConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ComputeConfigurationResponse)(nil)).Elem()
}

func (o ComputeConfigurationResponseOutput) ToComputeConfigurationResponseOutput() ComputeConfigurationResponseOutput {
	return o
}

func (o ComputeConfigurationResponseOutput) ToComputeConfigurationResponseOutputWithContext(ctx context.Context) ComputeConfigurationResponseOutput {
	return o
}

// Number of instances or nodes.
func (o ComputeConfigurationResponseOutput) InstanceCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ComputeConfigurationResponse) *int { return v.InstanceCount }).(pulumi.IntPtrOutput)
}

// SKU type to run on.
func (o ComputeConfigurationResponseOutput) InstanceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComputeConfigurationResponse) *string { return v.InstanceType }).(pulumi.StringPtrOutput)
}

// Set to true for jobs running on local compute.
func (o ComputeConfigurationResponseOutput) IsLocal() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ComputeConfigurationResponse) *bool { return v.IsLocal }).(pulumi.BoolPtrOutput)
}

// Location for virtual cluster run.
func (o ComputeConfigurationResponseOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComputeConfigurationResponse) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// Additional properties.
func (o ComputeConfigurationResponseOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v ComputeConfigurationResponse) map[string]string { return v.Properties }).(pulumi.StringMapOutput)
}

// ARM resource ID of the Compute you are targeting. If not provided the resource will be deployed as Managed.
func (o ComputeConfigurationResponseOutput) Target() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComputeConfigurationResponse) *string { return v.Target }).(pulumi.StringPtrOutput)
}

type ComputeConfigurationResponsePtrOutput struct{ *pulumi.OutputState }

func (ComputeConfigurationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeConfigurationResponse)(nil)).Elem()
}

func (o ComputeConfigurationResponsePtrOutput) ToComputeConfigurationResponsePtrOutput() ComputeConfigurationResponsePtrOutput {
	return o
}

func (o ComputeConfigurationResponsePtrOutput) ToComputeConfigurationResponsePtrOutputWithContext(ctx context.Context) ComputeConfigurationResponsePtrOutput {
	return o
}

func (o ComputeConfigurationResponsePtrOutput) Elem() ComputeConfigurationResponseOutput {
	return o.ApplyT(func(v *ComputeConfigurationResponse) ComputeConfigurationResponse {
		if v != nil {
			return *v
		}
		var ret ComputeConfigurationResponse
		return ret
	}).(ComputeConfigurationResponseOutput)
}

// Number of instances or nodes.
func (o ComputeConfigurationResponsePtrOutput) InstanceCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ComputeConfigurationResponse) *int {
		if v == nil {
			return nil
		}
		return v.InstanceCount
	}).(pulumi.IntPtrOutput)
}

// SKU type to run on.
func (o ComputeConfigurationResponsePtrOutput) InstanceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComputeConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.InstanceType
	}).(pulumi.StringPtrOutput)
}

// Set to true for jobs running on local compute.
func (o ComputeConfigurationResponsePtrOutput) IsLocal() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ComputeConfigurationResponse) *bool {
		if v == nil {
			return nil
		}
		return v.IsLocal
	}).(pulumi.BoolPtrOutput)
}

// Location for virtual cluster run.
func (o ComputeConfigurationResponsePtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComputeConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.Location
	}).(pulumi.StringPtrOutput)
}

// Additional properties.
func (o ComputeConfigurationResponsePtrOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ComputeConfigurationResponse) map[string]string {
		if v == nil {
			return nil
		}
		return v.Properties
	}).(pulumi.StringMapOutput)
}

// ARM resource ID of the Compute you are targeting. If not provided the resource will be deployed as Managed.
func (o ComputeConfigurationResponsePtrOutput) Target() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComputeConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.Target
	}).(pulumi.StringPtrOutput)
}

// The resource requirements for the container (cpu and memory).
type ContainerResourceRequirements struct {
	// The minimum amount of CPU cores to be used by the container. More info:
	// https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
	Cpu *float64 `pulumi:"cpu"`
	// The maximum amount of CPU cores allowed to be used by the container. More info:
	// https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
	CpuLimit *float64 `pulumi:"cpuLimit"`
	// The number of FPGA PCIE devices exposed to the container. Must be multiple of 2.
	Fpga *int `pulumi:"fpga"`
	// The number of GPU cores in the container.
	Gpu *int `pulumi:"gpu"`
	// The minimum amount of memory (in GB) to be used by the container. More info:
	// https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
	MemoryInGB *float64 `pulumi:"memoryInGB"`
	// The maximum amount of memory (in GB) allowed to be used by the container. More info:
	// https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
	MemoryInGBLimit *float64 `pulumi:"memoryInGBLimit"`
}

// ContainerResourceRequirementsInput is an input type that accepts ContainerResourceRequirementsArgs and ContainerResourceRequirementsOutput values.
// You can construct a concrete instance of `ContainerResourceRequirementsInput` via:
//
//	ContainerResourceRequirementsArgs{...}
type ContainerResourceRequirementsInput interface {
	pulumi.Input

	ToContainerResourceRequirementsOutput() ContainerResourceRequirementsOutput
	ToContainerResourceRequirementsOutputWithContext(context.Context) ContainerResourceRequirementsOutput
}

// The resource requirements for the container (cpu and memory).
type ContainerResourceRequirementsArgs struct {
	// The minimum amount of CPU cores to be used by the container. More info:
	// https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
	Cpu pulumi.Float64PtrInput `pulumi:"cpu"`
	// The maximum amount of CPU cores allowed to be used by the container. More info:
	// https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
	CpuLimit pulumi.Float64PtrInput `pulumi:"cpuLimit"`
	// The number of FPGA PCIE devices exposed to the container. Must be multiple of 2.
	Fpga pulumi.IntPtrInput `pulumi:"fpga"`
	// The number of GPU cores in the container.
	Gpu pulumi.IntPtrInput `pulumi:"gpu"`
	// The minimum amount of memory (in GB) to be used by the container. More info:
	// https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
	MemoryInGB pulumi.Float64PtrInput `pulumi:"memoryInGB"`
	// The maximum amount of memory (in GB) allowed to be used by the container. More info:
	// https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
	MemoryInGBLimit pulumi.Float64PtrInput `pulumi:"memoryInGBLimit"`
}

func (ContainerResourceRequirementsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerResourceRequirements)(nil)).Elem()
}

func (i ContainerResourceRequirementsArgs) ToContainerResourceRequirementsOutput() ContainerResourceRequirementsOutput {
	return i.ToContainerResourceRequirementsOutputWithContext(context.Background())
}

func (i ContainerResourceRequirementsArgs) ToContainerResourceRequirementsOutputWithContext(ctx context.Context) ContainerResourceRequirementsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerResourceRequirementsOutput)
}

func (i ContainerResourceRequirementsArgs) ToContainerResourceRequirementsPtrOutput() ContainerResourceRequirementsPtrOutput {
	return i.ToContainerResourceRequirementsPtrOutputWithContext(context.Background())
}

func (i ContainerResourceRequirementsArgs) ToContainerResourceRequirementsPtrOutputWithContext(ctx context.Context) ContainerResourceRequirementsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerResourceRequirementsOutput).ToContainerResourceRequirementsPtrOutputWithContext(ctx)
}

// ContainerResourceRequirementsPtrInput is an input type that accepts ContainerResourceRequirementsArgs, ContainerResourceRequirementsPtr and ContainerResourceRequirementsPtrOutput values.
// You can construct a concrete instance of `ContainerResourceRequirementsPtrInput` via:
//
//	        ContainerResourceRequirementsArgs{...}
//
//	or:
//
//	        nil
type ContainerResourceRequirementsPtrInput interface {
	pulumi.Input

	ToContainerResourceRequirementsPtrOutput() ContainerResourceRequirementsPtrOutput
	ToContainerResourceRequirementsPtrOutputWithContext(context.Context) ContainerResourceRequirementsPtrOutput
}

type containerResourceRequirementsPtrType ContainerResourceRequirementsArgs

func ContainerResourceRequirementsPtr(v *ContainerResourceRequirementsArgs) ContainerResourceRequirementsPtrInput {
	return (*containerResourceRequirementsPtrType)(v)
}

func (*containerResourceRequirementsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerResourceRequirements)(nil)).Elem()
}

func (i *containerResourceRequirementsPtrType) ToContainerResourceRequirementsPtrOutput() ContainerResourceRequirementsPtrOutput {
	return i.ToContainerResourceRequirementsPtrOutputWithContext(context.Background())
}

func (i *containerResourceRequirementsPtrType) ToContainerResourceRequirementsPtrOutputWithContext(ctx context.Context) ContainerResourceRequirementsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerResourceRequirementsPtrOutput)
}

// The resource requirements for the container (cpu and memory).
type ContainerResourceRequirementsOutput struct{ *pulumi.OutputState }

func (ContainerResourceRequirementsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerResourceRequirements)(nil)).Elem()
}

func (o ContainerResourceRequirementsOutput) ToContainerResourceRequirementsOutput() ContainerResourceRequirementsOutput {
	return o
}

func (o ContainerResourceRequirementsOutput) ToContainerResourceRequirementsOutputWithContext(ctx context.Context) ContainerResourceRequirementsOutput {
	return o
}

func (o ContainerResourceRequirementsOutput) ToContainerResourceRequirementsPtrOutput() ContainerResourceRequirementsPtrOutput {
	return o.ToContainerResourceRequirementsPtrOutputWithContext(context.Background())
}

func (o ContainerResourceRequirementsOutput) ToContainerResourceRequirementsPtrOutputWithContext(ctx context.Context) ContainerResourceRequirementsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ContainerResourceRequirements) *ContainerResourceRequirements {
		return &v
	}).(ContainerResourceRequirementsPtrOutput)
}

// The minimum amount of CPU cores to be used by the container. More info:
// https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
func (o ContainerResourceRequirementsOutput) Cpu() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ContainerResourceRequirements) *float64 { return v.Cpu }).(pulumi.Float64PtrOutput)
}

// The maximum amount of CPU cores allowed to be used by the container. More info:
// https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
func (o ContainerResourceRequirementsOutput) CpuLimit() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ContainerResourceRequirements) *float64 { return v.CpuLimit }).(pulumi.Float64PtrOutput)
}

// The number of FPGA PCIE devices exposed to the container. Must be multiple of 2.
func (o ContainerResourceRequirementsOutput) Fpga() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ContainerResourceRequirements) *int { return v.Fpga }).(pulumi.IntPtrOutput)
}

// The number of GPU cores in the container.
func (o ContainerResourceRequirementsOutput) Gpu() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ContainerResourceRequirements) *int { return v.Gpu }).(pulumi.IntPtrOutput)
}

// The minimum amount of memory (in GB) to be used by the container. More info:
// https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
func (o ContainerResourceRequirementsOutput) MemoryInGB() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ContainerResourceRequirements) *float64 { return v.MemoryInGB }).(pulumi.Float64PtrOutput)
}

// The maximum amount of memory (in GB) allowed to be used by the container. More info:
// https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
func (o ContainerResourceRequirementsOutput) MemoryInGBLimit() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ContainerResourceRequirements) *float64 { return v.MemoryInGBLimit }).(pulumi.Float64PtrOutput)
}

type ContainerResourceRequirementsPtrOutput struct{ *pulumi.OutputState }

func (ContainerResourceRequirementsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerResourceRequirements)(nil)).Elem()
}

func (o ContainerResourceRequirementsPtrOutput) ToContainerResourceRequirementsPtrOutput() ContainerResourceRequirementsPtrOutput {
	return o
}

func (o ContainerResourceRequirementsPtrOutput) ToContainerResourceRequirementsPtrOutputWithContext(ctx context.Context) ContainerResourceRequirementsPtrOutput {
	return o
}

func (o ContainerResourceRequirementsPtrOutput) Elem() ContainerResourceRequirementsOutput {
	return o.ApplyT(func(v *ContainerResourceRequirements) ContainerResourceRequirements {
		if v != nil {
			return *v
		}
		var ret ContainerResourceRequirements
		return ret
	}).(ContainerResourceRequirementsOutput)
}

// The minimum amount of CPU cores to be used by the container. More info:
// https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
func (o ContainerResourceRequirementsPtrOutput) Cpu() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *ContainerResourceRequirements) *float64 {
		if v == nil {
			return nil
		}
		return v.Cpu
	}).(pulumi.Float64PtrOutput)
}

// The maximum amount of CPU cores allowed to be used by the container. More info:
// https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
func (o ContainerResourceRequirementsPtrOutput) CpuLimit() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *ContainerResourceRequirements) *float64 {
		if v == nil {
			return nil
		}
		return v.CpuLimit
	}).(pulumi.Float64PtrOutput)
}

// The number of FPGA PCIE devices exposed to the container. Must be multiple of 2.
func (o ContainerResourceRequirementsPtrOutput) Fpga() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ContainerResourceRequirements) *int {
		if v == nil {
			return nil
		}
		return v.Fpga
	}).(pulumi.IntPtrOutput)
}

// The number of GPU cores in the container.
func (o ContainerResourceRequirementsPtrOutput) Gpu() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ContainerResourceRequirements) *int {
		if v == nil {
			return nil
		}
		return v.Gpu
	}).(pulumi.IntPtrOutput)
}

// The minimum amount of memory (in GB) to be used by the container. More info:
// https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
func (o ContainerResourceRequirementsPtrOutput) MemoryInGB() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *ContainerResourceRequirements) *float64 {
		if v == nil {
			return nil
		}
		return v.MemoryInGB
	}).(pulumi.Float64PtrOutput)
}

// The maximum amount of memory (in GB) allowed to be used by the container. More info:
// https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
func (o ContainerResourceRequirementsPtrOutput) MemoryInGBLimit() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *ContainerResourceRequirements) *float64 {
		if v == nil {
			return nil
		}
		return v.MemoryInGBLimit
	}).(pulumi.Float64PtrOutput)
}

// The resource requirements for the container (cpu and memory).
type ContainerResourceRequirementsResponse struct {
	// The minimum amount of CPU cores to be used by the container. More info:
	// https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
	Cpu *float64 `pulumi:"cpu"`
	// The maximum amount of CPU cores allowed to be used by the container. More info:
	// https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
	CpuLimit *float64 `pulumi:"cpuLimit"`
	// The number of FPGA PCIE devices exposed to the container. Must be multiple of 2.
	Fpga *int `pulumi:"fpga"`
	// The number of GPU cores in the container.
	Gpu *int `pulumi:"gpu"`
	// The minimum amount of memory (in GB) to be used by the container. More info:
	// https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
	MemoryInGB *float64 `pulumi:"memoryInGB"`
	// The maximum amount of memory (in GB) allowed to be used by the container. More info:
	// https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
	MemoryInGBLimit *float64 `pulumi:"memoryInGBLimit"`
}

// The resource requirements for the container (cpu and memory).
type ContainerResourceRequirementsResponseOutput struct{ *pulumi.OutputState }

func (ContainerResourceRequirementsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerResourceRequirementsResponse)(nil)).Elem()
}

func (o ContainerResourceRequirementsResponseOutput) ToContainerResourceRequirementsResponseOutput() ContainerResourceRequirementsResponseOutput {
	return o
}

func (o ContainerResourceRequirementsResponseOutput) ToContainerResourceRequirementsResponseOutputWithContext(ctx context.Context) ContainerResourceRequirementsResponseOutput {
	return o
}

// The minimum amount of CPU cores to be used by the container. More info:
// https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
func (o ContainerResourceRequirementsResponseOutput) Cpu() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ContainerResourceRequirementsResponse) *float64 { return v.Cpu }).(pulumi.Float64PtrOutput)
}

// The maximum amount of CPU cores allowed to be used by the container. More info:
// https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
func (o ContainerResourceRequirementsResponseOutput) CpuLimit() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ContainerResourceRequirementsResponse) *float64 { return v.CpuLimit }).(pulumi.Float64PtrOutput)
}

// The number of FPGA PCIE devices exposed to the container. Must be multiple of 2.
func (o ContainerResourceRequirementsResponseOutput) Fpga() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ContainerResourceRequirementsResponse) *int { return v.Fpga }).(pulumi.IntPtrOutput)
}

// The number of GPU cores in the container.
func (o ContainerResourceRequirementsResponseOutput) Gpu() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ContainerResourceRequirementsResponse) *int { return v.Gpu }).(pulumi.IntPtrOutput)
}

// The minimum amount of memory (in GB) to be used by the container. More info:
// https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
func (o ContainerResourceRequirementsResponseOutput) MemoryInGB() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ContainerResourceRequirementsResponse) *float64 { return v.MemoryInGB }).(pulumi.Float64PtrOutput)
}

// The maximum amount of memory (in GB) allowed to be used by the container. More info:
// https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
func (o ContainerResourceRequirementsResponseOutput) MemoryInGBLimit() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ContainerResourceRequirementsResponse) *float64 { return v.MemoryInGBLimit }).(pulumi.Float64PtrOutput)
}

type ContainerResourceRequirementsResponsePtrOutput struct{ *pulumi.OutputState }

func (ContainerResourceRequirementsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerResourceRequirementsResponse)(nil)).Elem()
}

func (o ContainerResourceRequirementsResponsePtrOutput) ToContainerResourceRequirementsResponsePtrOutput() ContainerResourceRequirementsResponsePtrOutput {
	return o
}

func (o ContainerResourceRequirementsResponsePtrOutput) ToContainerResourceRequirementsResponsePtrOutputWithContext(ctx context.Context) ContainerResourceRequirementsResponsePtrOutput {
	return o
}

func (o ContainerResourceRequirementsResponsePtrOutput) Elem() ContainerResourceRequirementsResponseOutput {
	return o.ApplyT(func(v *ContainerResourceRequirementsResponse) ContainerResourceRequirementsResponse {
		if v != nil {
			return *v
		}
		var ret ContainerResourceRequirementsResponse
		return ret
	}).(ContainerResourceRequirementsResponseOutput)
}

// The minimum amount of CPU cores to be used by the container. More info:
// https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
func (o ContainerResourceRequirementsResponsePtrOutput) Cpu() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *ContainerResourceRequirementsResponse) *float64 {
		if v == nil {
			return nil
		}
		return v.Cpu
	}).(pulumi.Float64PtrOutput)
}

// The maximum amount of CPU cores allowed to be used by the container. More info:
// https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
func (o ContainerResourceRequirementsResponsePtrOutput) CpuLimit() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *ContainerResourceRequirementsResponse) *float64 {
		if v == nil {
			return nil
		}
		return v.CpuLimit
	}).(pulumi.Float64PtrOutput)
}

// The number of FPGA PCIE devices exposed to the container. Must be multiple of 2.
func (o ContainerResourceRequirementsResponsePtrOutput) Fpga() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ContainerResourceRequirementsResponse) *int {
		if v == nil {
			return nil
		}
		return v.Fpga
	}).(pulumi.IntPtrOutput)
}

// The number of GPU cores in the container.
func (o ContainerResourceRequirementsResponsePtrOutput) Gpu() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ContainerResourceRequirementsResponse) *int {
		if v == nil {
			return nil
		}
		return v.Gpu
	}).(pulumi.IntPtrOutput)
}

// The minimum amount of memory (in GB) to be used by the container. More info:
// https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
func (o ContainerResourceRequirementsResponsePtrOutput) MemoryInGB() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *ContainerResourceRequirementsResponse) *float64 {
		if v == nil {
			return nil
		}
		return v.MemoryInGB
	}).(pulumi.Float64PtrOutput)
}

// The maximum amount of memory (in GB) allowed to be used by the container. More info:
// https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
func (o ContainerResourceRequirementsResponsePtrOutput) MemoryInGBLimit() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *ContainerResourceRequirementsResponse) *float64 {
		if v == nil {
			return nil
		}
		return v.MemoryInGBLimit
	}).(pulumi.Float64PtrOutput)
}

// Container for data asset versions.
type DataContainerType struct {
	// The asset description text.
	Description *string `pulumi:"description"`
	// The asset property dictionary.
	Properties map[string]string `pulumi:"properties"`
	// Tag dictionary. Tags can be added, removed, and updated.
	Tags map[string]string `pulumi:"tags"`
}

// DataContainerTypeInput is an input type that accepts DataContainerTypeArgs and DataContainerTypeOutput values.
// You can construct a concrete instance of `DataContainerTypeInput` via:
//
//	DataContainerTypeArgs{...}
type DataContainerTypeInput interface {
	pulumi.Input

	ToDataContainerTypeOutput() DataContainerTypeOutput
	ToDataContainerTypeOutputWithContext(context.Context) DataContainerTypeOutput
}

// Container for data asset versions.
type DataContainerTypeArgs struct {
	// The asset description text.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The asset property dictionary.
	Properties pulumi.StringMapInput `pulumi:"properties"`
	// Tag dictionary. Tags can be added, removed, and updated.
	Tags pulumi.StringMapInput `pulumi:"tags"`
}

func (DataContainerTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataContainerType)(nil)).Elem()
}

func (i DataContainerTypeArgs) ToDataContainerTypeOutput() DataContainerTypeOutput {
	return i.ToDataContainerTypeOutputWithContext(context.Background())
}

func (i DataContainerTypeArgs) ToDataContainerTypeOutputWithContext(ctx context.Context) DataContainerTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataContainerTypeOutput)
}

// Container for data asset versions.
type DataContainerTypeOutput struct{ *pulumi.OutputState }

func (DataContainerTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataContainerType)(nil)).Elem()
}

func (o DataContainerTypeOutput) ToDataContainerTypeOutput() DataContainerTypeOutput {
	return o
}

func (o DataContainerTypeOutput) ToDataContainerTypeOutputWithContext(ctx context.Context) DataContainerTypeOutput {
	return o
}

// The asset description text.
func (o DataContainerTypeOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataContainerType) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The asset property dictionary.
func (o DataContainerTypeOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v DataContainerType) map[string]string { return v.Properties }).(pulumi.StringMapOutput)
}

// Tag dictionary. Tags can be added, removed, and updated.
func (o DataContainerTypeOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v DataContainerType) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Container for data asset versions.
type DataContainerResponse struct {
	// The asset description text.
	Description *string `pulumi:"description"`
	// The asset property dictionary.
	Properties map[string]string `pulumi:"properties"`
	// Tag dictionary. Tags can be added, removed, and updated.
	Tags map[string]string `pulumi:"tags"`
}

// Container for data asset versions.
type DataContainerResponseOutput struct{ *pulumi.OutputState }

func (DataContainerResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataContainerResponse)(nil)).Elem()
}

func (o DataContainerResponseOutput) ToDataContainerResponseOutput() DataContainerResponseOutput {
	return o
}

func (o DataContainerResponseOutput) ToDataContainerResponseOutputWithContext(ctx context.Context) DataContainerResponseOutput {
	return o
}

// The asset description text.
func (o DataContainerResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataContainerResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The asset property dictionary.
func (o DataContainerResponseOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v DataContainerResponse) map[string]string { return v.Properties }).(pulumi.StringMapOutput)
}

// Tag dictionary. Tags can be added, removed, and updated.
func (o DataContainerResponseOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v DataContainerResponse) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Reference to an asset via its path in a datastore.
type DataPathAssetReference struct {
	// ARM resource ID of the datastore where the asset is located.
	DatastoreId *string `pulumi:"datastoreId"`
	// The path of the file/directory in the datastore.
	Path *string `pulumi:"path"`
	// Enum to determine which reference method to use for an asset.
	// Expected value is 'DataPath'.
	ReferenceType string `pulumi:"referenceType"`
}

// DataPathAssetReferenceInput is an input type that accepts DataPathAssetReferenceArgs and DataPathAssetReferenceOutput values.
// You can construct a concrete instance of `DataPathAssetReferenceInput` via:
//
//	DataPathAssetReferenceArgs{...}
type DataPathAssetReferenceInput interface {
	pulumi.Input

	ToDataPathAssetReferenceOutput() DataPathAssetReferenceOutput
	ToDataPathAssetReferenceOutputWithContext(context.Context) DataPathAssetReferenceOutput
}

// Reference to an asset via its path in a datastore.
type DataPathAssetReferenceArgs struct {
	// ARM resource ID of the datastore where the asset is located.
	DatastoreId pulumi.StringPtrInput `pulumi:"datastoreId"`
	// The path of the file/directory in the datastore.
	Path pulumi.StringPtrInput `pulumi:"path"`
	// Enum to determine which reference method to use for an asset.
	// Expected value is 'DataPath'.
	ReferenceType pulumi.StringInput `pulumi:"referenceType"`
}

func (DataPathAssetReferenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataPathAssetReference)(nil)).Elem()
}

func (i DataPathAssetReferenceArgs) ToDataPathAssetReferenceOutput() DataPathAssetReferenceOutput {
	return i.ToDataPathAssetReferenceOutputWithContext(context.Background())
}

func (i DataPathAssetReferenceArgs) ToDataPathAssetReferenceOutputWithContext(ctx context.Context) DataPathAssetReferenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataPathAssetReferenceOutput)
}

func (i DataPathAssetReferenceArgs) ToDataPathAssetReferencePtrOutput() DataPathAssetReferencePtrOutput {
	return i.ToDataPathAssetReferencePtrOutputWithContext(context.Background())
}

func (i DataPathAssetReferenceArgs) ToDataPathAssetReferencePtrOutputWithContext(ctx context.Context) DataPathAssetReferencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataPathAssetReferenceOutput).ToDataPathAssetReferencePtrOutputWithContext(ctx)
}

// DataPathAssetReferencePtrInput is an input type that accepts DataPathAssetReferenceArgs, DataPathAssetReferencePtr and DataPathAssetReferencePtrOutput values.
// You can construct a concrete instance of `DataPathAssetReferencePtrInput` via:
//
//	        DataPathAssetReferenceArgs{...}
//
//	or:
//
//	        nil
type DataPathAssetReferencePtrInput interface {
	pulumi.Input

	ToDataPathAssetReferencePtrOutput() DataPathAssetReferencePtrOutput
	ToDataPathAssetReferencePtrOutputWithContext(context.Context) DataPathAssetReferencePtrOutput
}

type dataPathAssetReferencePtrType DataPathAssetReferenceArgs

func DataPathAssetReferencePtr(v *DataPathAssetReferenceArgs) DataPathAssetReferencePtrInput {
	return (*dataPathAssetReferencePtrType)(v)
}

func (*dataPathAssetReferencePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataPathAssetReference)(nil)).Elem()
}

func (i *dataPathAssetReferencePtrType) ToDataPathAssetReferencePtrOutput() DataPathAssetReferencePtrOutput {
	return i.ToDataPathAssetReferencePtrOutputWithContext(context.Background())
}

func (i *dataPathAssetReferencePtrType) ToDataPathAssetReferencePtrOutputWithContext(ctx context.Context) DataPathAssetReferencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataPathAssetReferencePtrOutput)
}

// Reference to an asset via its path in a datastore.
type DataPathAssetReferenceOutput struct{ *pulumi.OutputState }

func (DataPathAssetReferenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataPathAssetReference)(nil)).Elem()
}

func (o DataPathAssetReferenceOutput) ToDataPathAssetReferenceOutput() DataPathAssetReferenceOutput {
	return o
}

func (o DataPathAssetReferenceOutput) ToDataPathAssetReferenceOutputWithContext(ctx context.Context) DataPathAssetReferenceOutput {
	return o
}

func (o DataPathAssetReferenceOutput) ToDataPathAssetReferencePtrOutput() DataPathAssetReferencePtrOutput {
	return o.ToDataPathAssetReferencePtrOutputWithContext(context.Background())
}

func (o DataPathAssetReferenceOutput) ToDataPathAssetReferencePtrOutputWithContext(ctx context.Context) DataPathAssetReferencePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataPathAssetReference) *DataPathAssetReference {
		return &v
	}).(DataPathAssetReferencePtrOutput)
}

// ARM resource ID of the datastore where the asset is located.
func (o DataPathAssetReferenceOutput) DatastoreId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataPathAssetReference) *string { return v.DatastoreId }).(pulumi.StringPtrOutput)
}

// The path of the file/directory in the datastore.
func (o DataPathAssetReferenceOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataPathAssetReference) *string { return v.Path }).(pulumi.StringPtrOutput)
}

// Enum to determine which reference method to use for an asset.
// Expected value is 'DataPath'.
func (o DataPathAssetReferenceOutput) ReferenceType() pulumi.StringOutput {
	return o.ApplyT(func(v DataPathAssetReference) string { return v.ReferenceType }).(pulumi.StringOutput)
}

type DataPathAssetReferencePtrOutput struct{ *pulumi.OutputState }

func (DataPathAssetReferencePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataPathAssetReference)(nil)).Elem()
}

func (o DataPathAssetReferencePtrOutput) ToDataPathAssetReferencePtrOutput() DataPathAssetReferencePtrOutput {
	return o
}

func (o DataPathAssetReferencePtrOutput) ToDataPathAssetReferencePtrOutputWithContext(ctx context.Context) DataPathAssetReferencePtrOutput {
	return o
}

func (o DataPathAssetReferencePtrOutput) Elem() DataPathAssetReferenceOutput {
	return o.ApplyT(func(v *DataPathAssetReference) DataPathAssetReference {
		if v != nil {
			return *v
		}
		var ret DataPathAssetReference
		return ret
	}).(DataPathAssetReferenceOutput)
}

// ARM resource ID of the datastore where the asset is located.
func (o DataPathAssetReferencePtrOutput) DatastoreId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataPathAssetReference) *string {
		if v == nil {
			return nil
		}
		return v.DatastoreId
	}).(pulumi.StringPtrOutput)
}

// The path of the file/directory in the datastore.
func (o DataPathAssetReferencePtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataPathAssetReference) *string {
		if v == nil {
			return nil
		}
		return v.Path
	}).(pulumi.StringPtrOutput)
}

// Enum to determine which reference method to use for an asset.
// Expected value is 'DataPath'.
func (o DataPathAssetReferencePtrOutput) ReferenceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataPathAssetReference) *string {
		if v == nil {
			return nil
		}
		return &v.ReferenceType
	}).(pulumi.StringPtrOutput)
}

// Reference to an asset via its path in a datastore.
type DataPathAssetReferenceResponse struct {
	// ARM resource ID of the datastore where the asset is located.
	DatastoreId *string `pulumi:"datastoreId"`
	// The path of the file/directory in the datastore.
	Path *string `pulumi:"path"`
	// Enum to determine which reference method to use for an asset.
	// Expected value is 'DataPath'.
	ReferenceType string `pulumi:"referenceType"`
}

// Reference to an asset via its path in a datastore.
type DataPathAssetReferenceResponseOutput struct{ *pulumi.OutputState }

func (DataPathAssetReferenceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataPathAssetReferenceResponse)(nil)).Elem()
}

func (o DataPathAssetReferenceResponseOutput) ToDataPathAssetReferenceResponseOutput() DataPathAssetReferenceResponseOutput {
	return o
}

func (o DataPathAssetReferenceResponseOutput) ToDataPathAssetReferenceResponseOutputWithContext(ctx context.Context) DataPathAssetReferenceResponseOutput {
	return o
}

// ARM resource ID of the datastore where the asset is located.
func (o DataPathAssetReferenceResponseOutput) DatastoreId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataPathAssetReferenceResponse) *string { return v.DatastoreId }).(pulumi.StringPtrOutput)
}

// The path of the file/directory in the datastore.
func (o DataPathAssetReferenceResponseOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataPathAssetReferenceResponse) *string { return v.Path }).(pulumi.StringPtrOutput)
}

// Enum to determine which reference method to use for an asset.
// Expected value is 'DataPath'.
func (o DataPathAssetReferenceResponseOutput) ReferenceType() pulumi.StringOutput {
	return o.ApplyT(func(v DataPathAssetReferenceResponse) string { return v.ReferenceType }).(pulumi.StringOutput)
}

type DataPathAssetReferenceResponsePtrOutput struct{ *pulumi.OutputState }

func (DataPathAssetReferenceResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataPathAssetReferenceResponse)(nil)).Elem()
}

func (o DataPathAssetReferenceResponsePtrOutput) ToDataPathAssetReferenceResponsePtrOutput() DataPathAssetReferenceResponsePtrOutput {
	return o
}

func (o DataPathAssetReferenceResponsePtrOutput) ToDataPathAssetReferenceResponsePtrOutputWithContext(ctx context.Context) DataPathAssetReferenceResponsePtrOutput {
	return o
}

func (o DataPathAssetReferenceResponsePtrOutput) Elem() DataPathAssetReferenceResponseOutput {
	return o.ApplyT(func(v *DataPathAssetReferenceResponse) DataPathAssetReferenceResponse {
		if v != nil {
			return *v
		}
		var ret DataPathAssetReferenceResponse
		return ret
	}).(DataPathAssetReferenceResponseOutput)
}

// ARM resource ID of the datastore where the asset is located.
func (o DataPathAssetReferenceResponsePtrOutput) DatastoreId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataPathAssetReferenceResponse) *string {
		if v == nil {
			return nil
		}
		return v.DatastoreId
	}).(pulumi.StringPtrOutput)
}

// The path of the file/directory in the datastore.
func (o DataPathAssetReferenceResponsePtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataPathAssetReferenceResponse) *string {
		if v == nil {
			return nil
		}
		return v.Path
	}).(pulumi.StringPtrOutput)
}

// Enum to determine which reference method to use for an asset.
// Expected value is 'DataPath'.
func (o DataPathAssetReferenceResponsePtrOutput) ReferenceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataPathAssetReferenceResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ReferenceType
	}).(pulumi.StringPtrOutput)
}

// Data asset version details.
type DataVersionType struct {
	// The Format of dataset.
	DatasetType *string `pulumi:"datasetType"`
	// ARM resource ID of the datastore where the asset is located.
	DatastoreId *string `pulumi:"datastoreId"`
	// The asset description text.
	Description *string `pulumi:"description"`
	// If the name version are system generated (anonymous registration).
	IsAnonymous *bool `pulumi:"isAnonymous"`
	// [Required] The path of the file/directory in the datastore.
	Path string `pulumi:"path"`
	// The asset property dictionary.
	Properties map[string]string `pulumi:"properties"`
	// Tag dictionary. Tags can be added, removed, and updated.
	Tags map[string]string `pulumi:"tags"`
}

// DataVersionTypeInput is an input type that accepts DataVersionTypeArgs and DataVersionTypeOutput values.
// You can construct a concrete instance of `DataVersionTypeInput` via:
//
//	DataVersionTypeArgs{...}
type DataVersionTypeInput interface {
	pulumi.Input

	ToDataVersionTypeOutput() DataVersionTypeOutput
	ToDataVersionTypeOutputWithContext(context.Context) DataVersionTypeOutput
}

// Data asset version details.
type DataVersionTypeArgs struct {
	// The Format of dataset.
	DatasetType pulumi.StringPtrInput `pulumi:"datasetType"`
	// ARM resource ID of the datastore where the asset is located.
	DatastoreId pulumi.StringPtrInput `pulumi:"datastoreId"`
	// The asset description text.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// If the name version are system generated (anonymous registration).
	IsAnonymous pulumi.BoolPtrInput `pulumi:"isAnonymous"`
	// [Required] The path of the file/directory in the datastore.
	Path pulumi.StringInput `pulumi:"path"`
	// The asset property dictionary.
	Properties pulumi.StringMapInput `pulumi:"properties"`
	// Tag dictionary. Tags can be added, removed, and updated.
	Tags pulumi.StringMapInput `pulumi:"tags"`
}

func (DataVersionTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataVersionType)(nil)).Elem()
}

func (i DataVersionTypeArgs) ToDataVersionTypeOutput() DataVersionTypeOutput {
	return i.ToDataVersionTypeOutputWithContext(context.Background())
}

func (i DataVersionTypeArgs) ToDataVersionTypeOutputWithContext(ctx context.Context) DataVersionTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataVersionTypeOutput)
}

// Data asset version details.
type DataVersionTypeOutput struct{ *pulumi.OutputState }

func (DataVersionTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataVersionType)(nil)).Elem()
}

func (o DataVersionTypeOutput) ToDataVersionTypeOutput() DataVersionTypeOutput {
	return o
}

func (o DataVersionTypeOutput) ToDataVersionTypeOutputWithContext(ctx context.Context) DataVersionTypeOutput {
	return o
}

// The Format of dataset.
func (o DataVersionTypeOutput) DatasetType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataVersionType) *string { return v.DatasetType }).(pulumi.StringPtrOutput)
}

// ARM resource ID of the datastore where the asset is located.
func (o DataVersionTypeOutput) DatastoreId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataVersionType) *string { return v.DatastoreId }).(pulumi.StringPtrOutput)
}

// The asset description text.
func (o DataVersionTypeOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataVersionType) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// If the name version are system generated (anonymous registration).
func (o DataVersionTypeOutput) IsAnonymous() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DataVersionType) *bool { return v.IsAnonymous }).(pulumi.BoolPtrOutput)
}

// [Required] The path of the file/directory in the datastore.
func (o DataVersionTypeOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v DataVersionType) string { return v.Path }).(pulumi.StringOutput)
}

// The asset property dictionary.
func (o DataVersionTypeOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v DataVersionType) map[string]string { return v.Properties }).(pulumi.StringMapOutput)
}

// Tag dictionary. Tags can be added, removed, and updated.
func (o DataVersionTypeOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v DataVersionType) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Data asset version details.
type DataVersionResponse struct {
	// The Format of dataset.
	DatasetType *string `pulumi:"datasetType"`
	// ARM resource ID of the datastore where the asset is located.
	DatastoreId *string `pulumi:"datastoreId"`
	// The asset description text.
	Description *string `pulumi:"description"`
	// If the name version are system generated (anonymous registration).
	IsAnonymous *bool `pulumi:"isAnonymous"`
	// [Required] The path of the file/directory in the datastore.
	Path string `pulumi:"path"`
	// The asset property dictionary.
	Properties map[string]string `pulumi:"properties"`
	// Tag dictionary. Tags can be added, removed, and updated.
	Tags map[string]string `pulumi:"tags"`
}

// Data asset version details.
type DataVersionResponseOutput struct{ *pulumi.OutputState }

func (DataVersionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataVersionResponse)(nil)).Elem()
}

func (o DataVersionResponseOutput) ToDataVersionResponseOutput() DataVersionResponseOutput {
	return o
}

func (o DataVersionResponseOutput) ToDataVersionResponseOutputWithContext(ctx context.Context) DataVersionResponseOutput {
	return o
}

// The Format of dataset.
func (o DataVersionResponseOutput) DatasetType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataVersionResponse) *string { return v.DatasetType }).(pulumi.StringPtrOutput)
}

// ARM resource ID of the datastore where the asset is located.
func (o DataVersionResponseOutput) DatastoreId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataVersionResponse) *string { return v.DatastoreId }).(pulumi.StringPtrOutput)
}

// The asset description text.
func (o DataVersionResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataVersionResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// If the name version are system generated (anonymous registration).
func (o DataVersionResponseOutput) IsAnonymous() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DataVersionResponse) *bool { return v.IsAnonymous }).(pulumi.BoolPtrOutput)
}

// [Required] The path of the file/directory in the datastore.
func (o DataVersionResponseOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v DataVersionResponse) string { return v.Path }).(pulumi.StringOutput)
}

// The asset property dictionary.
func (o DataVersionResponseOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v DataVersionResponse) map[string]string { return v.Properties }).(pulumi.StringMapOutput)
}

// Tag dictionary. Tags can be added, removed, and updated.
func (o DataVersionResponseOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v DataVersionResponse) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Datastore definition.
type DatastoreProperties struct {
	// [Required] Reference to the datastore storage contents.
	Contents interface{} `pulumi:"contents"`
	// The asset description text.
	Description *string `pulumi:"description"`
	// Whether this datastore is the default for the workspace.
	IsDefault *bool `pulumi:"isDefault"`
	// Information about the datastore origin, if linked.
	LinkedInfo *LinkedInfo `pulumi:"linkedInfo"`
	// The asset property dictionary.
	Properties map[string]string `pulumi:"properties"`
	// Tag dictionary. Tags can be added, removed, and updated.
	Tags map[string]string `pulumi:"tags"`
}

// DatastorePropertiesInput is an input type that accepts DatastorePropertiesArgs and DatastorePropertiesOutput values.
// You can construct a concrete instance of `DatastorePropertiesInput` via:
//
//	DatastorePropertiesArgs{...}
type DatastorePropertiesInput interface {
	pulumi.Input

	ToDatastorePropertiesOutput() DatastorePropertiesOutput
	ToDatastorePropertiesOutputWithContext(context.Context) DatastorePropertiesOutput
}

// Datastore definition.
type DatastorePropertiesArgs struct {
	// [Required] Reference to the datastore storage contents.
	Contents pulumi.Input `pulumi:"contents"`
	// The asset description text.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Whether this datastore is the default for the workspace.
	IsDefault pulumi.BoolPtrInput `pulumi:"isDefault"`
	// Information about the datastore origin, if linked.
	LinkedInfo LinkedInfoPtrInput `pulumi:"linkedInfo"`
	// The asset property dictionary.
	Properties pulumi.StringMapInput `pulumi:"properties"`
	// Tag dictionary. Tags can be added, removed, and updated.
	Tags pulumi.StringMapInput `pulumi:"tags"`
}

func (DatastorePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatastoreProperties)(nil)).Elem()
}

func (i DatastorePropertiesArgs) ToDatastorePropertiesOutput() DatastorePropertiesOutput {
	return i.ToDatastorePropertiesOutputWithContext(context.Background())
}

func (i DatastorePropertiesArgs) ToDatastorePropertiesOutputWithContext(ctx context.Context) DatastorePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatastorePropertiesOutput)
}

// Datastore definition.
type DatastorePropertiesOutput struct{ *pulumi.OutputState }

func (DatastorePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatastoreProperties)(nil)).Elem()
}

func (o DatastorePropertiesOutput) ToDatastorePropertiesOutput() DatastorePropertiesOutput {
	return o
}

func (o DatastorePropertiesOutput) ToDatastorePropertiesOutputWithContext(ctx context.Context) DatastorePropertiesOutput {
	return o
}

// [Required] Reference to the datastore storage contents.
func (o DatastorePropertiesOutput) Contents() pulumi.AnyOutput {
	return o.ApplyT(func(v DatastoreProperties) interface{} { return v.Contents }).(pulumi.AnyOutput)
}

// The asset description text.
func (o DatastorePropertiesOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatastoreProperties) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Whether this datastore is the default for the workspace.
func (o DatastorePropertiesOutput) IsDefault() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DatastoreProperties) *bool { return v.IsDefault }).(pulumi.BoolPtrOutput)
}

// Information about the datastore origin, if linked.
func (o DatastorePropertiesOutput) LinkedInfo() LinkedInfoPtrOutput {
	return o.ApplyT(func(v DatastoreProperties) *LinkedInfo { return v.LinkedInfo }).(LinkedInfoPtrOutput)
}

// The asset property dictionary.
func (o DatastorePropertiesOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v DatastoreProperties) map[string]string { return v.Properties }).(pulumi.StringMapOutput)
}

// Tag dictionary. Tags can be added, removed, and updated.
func (o DatastorePropertiesOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v DatastoreProperties) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Datastore definition.
type DatastorePropertiesResponse struct {
	// [Required] Reference to the datastore storage contents.
	Contents interface{} `pulumi:"contents"`
	// The asset description text.
	Description *string `pulumi:"description"`
	// Whether the service has validated access to the datastore with the provided credentials.
	HasBeenValidated bool `pulumi:"hasBeenValidated"`
	// Whether this datastore is the default for the workspace.
	IsDefault *bool `pulumi:"isDefault"`
	// Information about the datastore origin, if linked.
	LinkedInfo *LinkedInfoResponse `pulumi:"linkedInfo"`
	// The asset property dictionary.
	Properties map[string]string `pulumi:"properties"`
	// Tag dictionary. Tags can be added, removed, and updated.
	Tags map[string]string `pulumi:"tags"`
}

// Datastore definition.
type DatastorePropertiesResponseOutput struct{ *pulumi.OutputState }

func (DatastorePropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatastorePropertiesResponse)(nil)).Elem()
}

func (o DatastorePropertiesResponseOutput) ToDatastorePropertiesResponseOutput() DatastorePropertiesResponseOutput {
	return o
}

func (o DatastorePropertiesResponseOutput) ToDatastorePropertiesResponseOutputWithContext(ctx context.Context) DatastorePropertiesResponseOutput {
	return o
}

// [Required] Reference to the datastore storage contents.
func (o DatastorePropertiesResponseOutput) Contents() pulumi.AnyOutput {
	return o.ApplyT(func(v DatastorePropertiesResponse) interface{} { return v.Contents }).(pulumi.AnyOutput)
}

// The asset description text.
func (o DatastorePropertiesResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatastorePropertiesResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Whether the service has validated access to the datastore with the provided credentials.
func (o DatastorePropertiesResponseOutput) HasBeenValidated() pulumi.BoolOutput {
	return o.ApplyT(func(v DatastorePropertiesResponse) bool { return v.HasBeenValidated }).(pulumi.BoolOutput)
}

// Whether this datastore is the default for the workspace.
func (o DatastorePropertiesResponseOutput) IsDefault() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DatastorePropertiesResponse) *bool { return v.IsDefault }).(pulumi.BoolPtrOutput)
}

// Information about the datastore origin, if linked.
func (o DatastorePropertiesResponseOutput) LinkedInfo() LinkedInfoResponsePtrOutput {
	return o.ApplyT(func(v DatastorePropertiesResponse) *LinkedInfoResponse { return v.LinkedInfo }).(LinkedInfoResponsePtrOutput)
}

// The asset property dictionary.
func (o DatastorePropertiesResponseOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v DatastorePropertiesResponse) map[string]string { return v.Properties }).(pulumi.StringMapOutput)
}

// Tag dictionary. Tags can be added, removed, and updated.
func (o DatastorePropertiesResponseOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v DatastorePropertiesResponse) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Class to represent configuration settings for Docker Build
type DockerBuild struct {
	// Path to a snapshot of the Docker Context. This property is only valid if Dockerfile is specified.
	// The path is relative to the asset path which must contain a single Blob URI value.
	// <seealso href="https://docs.docker.com/engine/context/working-with-contexts/" />
	Context *string `pulumi:"context"`
	// Enum to determine docker specification type. Must be either Build or Image.
	// Expected value is 'Build'.
	DockerSpecificationType string `pulumi:"dockerSpecificationType"`
	// [Required] Docker command line instructions to assemble an image.
	// <seealso href="https://repo2docker.readthedocs.io/en/latest/config_files.html#dockerfile-advanced-environments" />
	Dockerfile string `pulumi:"dockerfile"`
	// The platform information of the docker image.
	Platform *DockerImagePlatform `pulumi:"platform"`
}

// DockerBuildInput is an input type that accepts DockerBuildArgs and DockerBuildOutput values.
// You can construct a concrete instance of `DockerBuildInput` via:
//
//	DockerBuildArgs{...}
type DockerBuildInput interface {
	pulumi.Input

	ToDockerBuildOutput() DockerBuildOutput
	ToDockerBuildOutputWithContext(context.Context) DockerBuildOutput
}

// Class to represent configuration settings for Docker Build
type DockerBuildArgs struct {
	// Path to a snapshot of the Docker Context. This property is only valid if Dockerfile is specified.
	// The path is relative to the asset path which must contain a single Blob URI value.
	// <seealso href="https://docs.docker.com/engine/context/working-with-contexts/" />
	Context pulumi.StringPtrInput `pulumi:"context"`
	// Enum to determine docker specification type. Must be either Build or Image.
	// Expected value is 'Build'.
	DockerSpecificationType pulumi.StringInput `pulumi:"dockerSpecificationType"`
	// [Required] Docker command line instructions to assemble an image.
	// <seealso href="https://repo2docker.readthedocs.io/en/latest/config_files.html#dockerfile-advanced-environments" />
	Dockerfile pulumi.StringInput `pulumi:"dockerfile"`
	// The platform information of the docker image.
	Platform DockerImagePlatformPtrInput `pulumi:"platform"`
}

func (DockerBuildArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DockerBuild)(nil)).Elem()
}

func (i DockerBuildArgs) ToDockerBuildOutput() DockerBuildOutput {
	return i.ToDockerBuildOutputWithContext(context.Background())
}

func (i DockerBuildArgs) ToDockerBuildOutputWithContext(ctx context.Context) DockerBuildOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DockerBuildOutput)
}

func (i DockerBuildArgs) ToDockerBuildPtrOutput() DockerBuildPtrOutput {
	return i.ToDockerBuildPtrOutputWithContext(context.Background())
}

func (i DockerBuildArgs) ToDockerBuildPtrOutputWithContext(ctx context.Context) DockerBuildPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DockerBuildOutput).ToDockerBuildPtrOutputWithContext(ctx)
}

// DockerBuildPtrInput is an input type that accepts DockerBuildArgs, DockerBuildPtr and DockerBuildPtrOutput values.
// You can construct a concrete instance of `DockerBuildPtrInput` via:
//
//	        DockerBuildArgs{...}
//
//	or:
//
//	        nil
type DockerBuildPtrInput interface {
	pulumi.Input

	ToDockerBuildPtrOutput() DockerBuildPtrOutput
	ToDockerBuildPtrOutputWithContext(context.Context) DockerBuildPtrOutput
}

type dockerBuildPtrType DockerBuildArgs

func DockerBuildPtr(v *DockerBuildArgs) DockerBuildPtrInput {
	return (*dockerBuildPtrType)(v)
}

func (*dockerBuildPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DockerBuild)(nil)).Elem()
}

func (i *dockerBuildPtrType) ToDockerBuildPtrOutput() DockerBuildPtrOutput {
	return i.ToDockerBuildPtrOutputWithContext(context.Background())
}

func (i *dockerBuildPtrType) ToDockerBuildPtrOutputWithContext(ctx context.Context) DockerBuildPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DockerBuildPtrOutput)
}

// Class to represent configuration settings for Docker Build
type DockerBuildOutput struct{ *pulumi.OutputState }

func (DockerBuildOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DockerBuild)(nil)).Elem()
}

func (o DockerBuildOutput) ToDockerBuildOutput() DockerBuildOutput {
	return o
}

func (o DockerBuildOutput) ToDockerBuildOutputWithContext(ctx context.Context) DockerBuildOutput {
	return o
}

func (o DockerBuildOutput) ToDockerBuildPtrOutput() DockerBuildPtrOutput {
	return o.ToDockerBuildPtrOutputWithContext(context.Background())
}

func (o DockerBuildOutput) ToDockerBuildPtrOutputWithContext(ctx context.Context) DockerBuildPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DockerBuild) *DockerBuild {
		return &v
	}).(DockerBuildPtrOutput)
}

// Path to a snapshot of the Docker Context. This property is only valid if Dockerfile is specified.
// The path is relative to the asset path which must contain a single Blob URI value.
// <seealso href="https://docs.docker.com/engine/context/working-with-contexts/" />
func (o DockerBuildOutput) Context() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DockerBuild) *string { return v.Context }).(pulumi.StringPtrOutput)
}

// Enum to determine docker specification type. Must be either Build or Image.
// Expected value is 'Build'.
func (o DockerBuildOutput) DockerSpecificationType() pulumi.StringOutput {
	return o.ApplyT(func(v DockerBuild) string { return v.DockerSpecificationType }).(pulumi.StringOutput)
}

// [Required] Docker command line instructions to assemble an image.
// <seealso href="https://repo2docker.readthedocs.io/en/latest/config_files.html#dockerfile-advanced-environments" />
func (o DockerBuildOutput) Dockerfile() pulumi.StringOutput {
	return o.ApplyT(func(v DockerBuild) string { return v.Dockerfile }).(pulumi.StringOutput)
}

// The platform information of the docker image.
func (o DockerBuildOutput) Platform() DockerImagePlatformPtrOutput {
	return o.ApplyT(func(v DockerBuild) *DockerImagePlatform { return v.Platform }).(DockerImagePlatformPtrOutput)
}

type DockerBuildPtrOutput struct{ *pulumi.OutputState }

func (DockerBuildPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DockerBuild)(nil)).Elem()
}

func (o DockerBuildPtrOutput) ToDockerBuildPtrOutput() DockerBuildPtrOutput {
	return o
}

func (o DockerBuildPtrOutput) ToDockerBuildPtrOutputWithContext(ctx context.Context) DockerBuildPtrOutput {
	return o
}

func (o DockerBuildPtrOutput) Elem() DockerBuildOutput {
	return o.ApplyT(func(v *DockerBuild) DockerBuild {
		if v != nil {
			return *v
		}
		var ret DockerBuild
		return ret
	}).(DockerBuildOutput)
}

// Path to a snapshot of the Docker Context. This property is only valid if Dockerfile is specified.
// The path is relative to the asset path which must contain a single Blob URI value.
// <seealso href="https://docs.docker.com/engine/context/working-with-contexts/" />
func (o DockerBuildPtrOutput) Context() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DockerBuild) *string {
		if v == nil {
			return nil
		}
		return v.Context
	}).(pulumi.StringPtrOutput)
}

// Enum to determine docker specification type. Must be either Build or Image.
// Expected value is 'Build'.
func (o DockerBuildPtrOutput) DockerSpecificationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DockerBuild) *string {
		if v == nil {
			return nil
		}
		return &v.DockerSpecificationType
	}).(pulumi.StringPtrOutput)
}

// [Required] Docker command line instructions to assemble an image.
// <seealso href="https://repo2docker.readthedocs.io/en/latest/config_files.html#dockerfile-advanced-environments" />
func (o DockerBuildPtrOutput) Dockerfile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DockerBuild) *string {
		if v == nil {
			return nil
		}
		return &v.Dockerfile
	}).(pulumi.StringPtrOutput)
}

// The platform information of the docker image.
func (o DockerBuildPtrOutput) Platform() DockerImagePlatformPtrOutput {
	return o.ApplyT(func(v *DockerBuild) *DockerImagePlatform {
		if v == nil {
			return nil
		}
		return v.Platform
	}).(DockerImagePlatformPtrOutput)
}

// Class to represent configuration settings for Docker Build
type DockerBuildResponse struct {
	// Path to a snapshot of the Docker Context. This property is only valid if Dockerfile is specified.
	// The path is relative to the asset path which must contain a single Blob URI value.
	// <seealso href="https://docs.docker.com/engine/context/working-with-contexts/" />
	Context *string `pulumi:"context"`
	// Enum to determine docker specification type. Must be either Build or Image.
	// Expected value is 'Build'.
	DockerSpecificationType string `pulumi:"dockerSpecificationType"`
	// [Required] Docker command line instructions to assemble an image.
	// <seealso href="https://repo2docker.readthedocs.io/en/latest/config_files.html#dockerfile-advanced-environments" />
	Dockerfile string `pulumi:"dockerfile"`
	// The platform information of the docker image.
	Platform *DockerImagePlatformResponse `pulumi:"platform"`
}

// Class to represent configuration settings for Docker Build
type DockerBuildResponseOutput struct{ *pulumi.OutputState }

func (DockerBuildResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DockerBuildResponse)(nil)).Elem()
}

func (o DockerBuildResponseOutput) ToDockerBuildResponseOutput() DockerBuildResponseOutput {
	return o
}

func (o DockerBuildResponseOutput) ToDockerBuildResponseOutputWithContext(ctx context.Context) DockerBuildResponseOutput {
	return o
}

// Path to a snapshot of the Docker Context. This property is only valid if Dockerfile is specified.
// The path is relative to the asset path which must contain a single Blob URI value.
// <seealso href="https://docs.docker.com/engine/context/working-with-contexts/" />
func (o DockerBuildResponseOutput) Context() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DockerBuildResponse) *string { return v.Context }).(pulumi.StringPtrOutput)
}

// Enum to determine docker specification type. Must be either Build or Image.
// Expected value is 'Build'.
func (o DockerBuildResponseOutput) DockerSpecificationType() pulumi.StringOutput {
	return o.ApplyT(func(v DockerBuildResponse) string { return v.DockerSpecificationType }).(pulumi.StringOutput)
}

// [Required] Docker command line instructions to assemble an image.
// <seealso href="https://repo2docker.readthedocs.io/en/latest/config_files.html#dockerfile-advanced-environments" />
func (o DockerBuildResponseOutput) Dockerfile() pulumi.StringOutput {
	return o.ApplyT(func(v DockerBuildResponse) string { return v.Dockerfile }).(pulumi.StringOutput)
}

// The platform information of the docker image.
func (o DockerBuildResponseOutput) Platform() DockerImagePlatformResponsePtrOutput {
	return o.ApplyT(func(v DockerBuildResponse) *DockerImagePlatformResponse { return v.Platform }).(DockerImagePlatformResponsePtrOutput)
}

type DockerBuildResponsePtrOutput struct{ *pulumi.OutputState }

func (DockerBuildResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DockerBuildResponse)(nil)).Elem()
}

func (o DockerBuildResponsePtrOutput) ToDockerBuildResponsePtrOutput() DockerBuildResponsePtrOutput {
	return o
}

func (o DockerBuildResponsePtrOutput) ToDockerBuildResponsePtrOutputWithContext(ctx context.Context) DockerBuildResponsePtrOutput {
	return o
}

func (o DockerBuildResponsePtrOutput) Elem() DockerBuildResponseOutput {
	return o.ApplyT(func(v *DockerBuildResponse) DockerBuildResponse {
		if v != nil {
			return *v
		}
		var ret DockerBuildResponse
		return ret
	}).(DockerBuildResponseOutput)
}

// Path to a snapshot of the Docker Context. This property is only valid if Dockerfile is specified.
// The path is relative to the asset path which must contain a single Blob URI value.
// <seealso href="https://docs.docker.com/engine/context/working-with-contexts/" />
func (o DockerBuildResponsePtrOutput) Context() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DockerBuildResponse) *string {
		if v == nil {
			return nil
		}
		return v.Context
	}).(pulumi.StringPtrOutput)
}

// Enum to determine docker specification type. Must be either Build or Image.
// Expected value is 'Build'.
func (o DockerBuildResponsePtrOutput) DockerSpecificationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DockerBuildResponse) *string {
		if v == nil {
			return nil
		}
		return &v.DockerSpecificationType
	}).(pulumi.StringPtrOutput)
}

// [Required] Docker command line instructions to assemble an image.
// <seealso href="https://repo2docker.readthedocs.io/en/latest/config_files.html#dockerfile-advanced-environments" />
func (o DockerBuildResponsePtrOutput) Dockerfile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DockerBuildResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Dockerfile
	}).(pulumi.StringPtrOutput)
}

// The platform information of the docker image.
func (o DockerBuildResponsePtrOutput) Platform() DockerImagePlatformResponsePtrOutput {
	return o.ApplyT(func(v *DockerBuildResponse) *DockerImagePlatformResponse {
		if v == nil {
			return nil
		}
		return v.Platform
	}).(DockerImagePlatformResponsePtrOutput)
}

// Class to represent configuration settings for Docker Build
type DockerImage struct {
	// [Required] Image name of a custom base image.
	// <seealso href="https://docs.microsoft.com/en-us/azure/machine-learning/how-to-deploy-custom-docker-image#use-a-custom-base-image" />
	DockerImageUri string `pulumi:"dockerImageUri"`
	// Enum to determine docker specification type. Must be either Build or Image.
	// Expected value is 'Image'.
	DockerSpecificationType string `pulumi:"dockerSpecificationType"`
	// The platform information of the docker image.
	Platform *DockerImagePlatform `pulumi:"platform"`
}

// DockerImageInput is an input type that accepts DockerImageArgs and DockerImageOutput values.
// You can construct a concrete instance of `DockerImageInput` via:
//
//	DockerImageArgs{...}
type DockerImageInput interface {
	pulumi.Input

	ToDockerImageOutput() DockerImageOutput
	ToDockerImageOutputWithContext(context.Context) DockerImageOutput
}

// Class to represent configuration settings for Docker Build
type DockerImageArgs struct {
	// [Required] Image name of a custom base image.
	// <seealso href="https://docs.microsoft.com/en-us/azure/machine-learning/how-to-deploy-custom-docker-image#use-a-custom-base-image" />
	DockerImageUri pulumi.StringInput `pulumi:"dockerImageUri"`
	// Enum to determine docker specification type. Must be either Build or Image.
	// Expected value is 'Image'.
	DockerSpecificationType pulumi.StringInput `pulumi:"dockerSpecificationType"`
	// The platform information of the docker image.
	Platform DockerImagePlatformPtrInput `pulumi:"platform"`
}

func (DockerImageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DockerImage)(nil)).Elem()
}

func (i DockerImageArgs) ToDockerImageOutput() DockerImageOutput {
	return i.ToDockerImageOutputWithContext(context.Background())
}

func (i DockerImageArgs) ToDockerImageOutputWithContext(ctx context.Context) DockerImageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DockerImageOutput)
}

func (i DockerImageArgs) ToDockerImagePtrOutput() DockerImagePtrOutput {
	return i.ToDockerImagePtrOutputWithContext(context.Background())
}

func (i DockerImageArgs) ToDockerImagePtrOutputWithContext(ctx context.Context) DockerImagePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DockerImageOutput).ToDockerImagePtrOutputWithContext(ctx)
}

// DockerImagePtrInput is an input type that accepts DockerImageArgs, DockerImagePtr and DockerImagePtrOutput values.
// You can construct a concrete instance of `DockerImagePtrInput` via:
//
//	        DockerImageArgs{...}
//
//	or:
//
//	        nil
type DockerImagePtrInput interface {
	pulumi.Input

	ToDockerImagePtrOutput() DockerImagePtrOutput
	ToDockerImagePtrOutputWithContext(context.Context) DockerImagePtrOutput
}

type dockerImagePtrType DockerImageArgs

func DockerImagePtr(v *DockerImageArgs) DockerImagePtrInput {
	return (*dockerImagePtrType)(v)
}

func (*dockerImagePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DockerImage)(nil)).Elem()
}

func (i *dockerImagePtrType) ToDockerImagePtrOutput() DockerImagePtrOutput {
	return i.ToDockerImagePtrOutputWithContext(context.Background())
}

func (i *dockerImagePtrType) ToDockerImagePtrOutputWithContext(ctx context.Context) DockerImagePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DockerImagePtrOutput)
}

// Class to represent configuration settings for Docker Build
type DockerImageOutput struct{ *pulumi.OutputState }

func (DockerImageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DockerImage)(nil)).Elem()
}

func (o DockerImageOutput) ToDockerImageOutput() DockerImageOutput {
	return o
}

func (o DockerImageOutput) ToDockerImageOutputWithContext(ctx context.Context) DockerImageOutput {
	return o
}

func (o DockerImageOutput) ToDockerImagePtrOutput() DockerImagePtrOutput {
	return o.ToDockerImagePtrOutputWithContext(context.Background())
}

func (o DockerImageOutput) ToDockerImagePtrOutputWithContext(ctx context.Context) DockerImagePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DockerImage) *DockerImage {
		return &v
	}).(DockerImagePtrOutput)
}

// [Required] Image name of a custom base image.
// <seealso href="https://docs.microsoft.com/en-us/azure/machine-learning/how-to-deploy-custom-docker-image#use-a-custom-base-image" />
func (o DockerImageOutput) DockerImageUri() pulumi.StringOutput {
	return o.ApplyT(func(v DockerImage) string { return v.DockerImageUri }).(pulumi.StringOutput)
}

// Enum to determine docker specification type. Must be either Build or Image.
// Expected value is 'Image'.
func (o DockerImageOutput) DockerSpecificationType() pulumi.StringOutput {
	return o.ApplyT(func(v DockerImage) string { return v.DockerSpecificationType }).(pulumi.StringOutput)
}

// The platform information of the docker image.
func (o DockerImageOutput) Platform() DockerImagePlatformPtrOutput {
	return o.ApplyT(func(v DockerImage) *DockerImagePlatform { return v.Platform }).(DockerImagePlatformPtrOutput)
}

type DockerImagePtrOutput struct{ *pulumi.OutputState }

func (DockerImagePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DockerImage)(nil)).Elem()
}

func (o DockerImagePtrOutput) ToDockerImagePtrOutput() DockerImagePtrOutput {
	return o
}

func (o DockerImagePtrOutput) ToDockerImagePtrOutputWithContext(ctx context.Context) DockerImagePtrOutput {
	return o
}

func (o DockerImagePtrOutput) Elem() DockerImageOutput {
	return o.ApplyT(func(v *DockerImage) DockerImage {
		if v != nil {
			return *v
		}
		var ret DockerImage
		return ret
	}).(DockerImageOutput)
}

// [Required] Image name of a custom base image.
// <seealso href="https://docs.microsoft.com/en-us/azure/machine-learning/how-to-deploy-custom-docker-image#use-a-custom-base-image" />
func (o DockerImagePtrOutput) DockerImageUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DockerImage) *string {
		if v == nil {
			return nil
		}
		return &v.DockerImageUri
	}).(pulumi.StringPtrOutput)
}

// Enum to determine docker specification type. Must be either Build or Image.
// Expected value is 'Image'.
func (o DockerImagePtrOutput) DockerSpecificationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DockerImage) *string {
		if v == nil {
			return nil
		}
		return &v.DockerSpecificationType
	}).(pulumi.StringPtrOutput)
}

// The platform information of the docker image.
func (o DockerImagePtrOutput) Platform() DockerImagePlatformPtrOutput {
	return o.ApplyT(func(v *DockerImage) *DockerImagePlatform {
		if v == nil {
			return nil
		}
		return v.Platform
	}).(DockerImagePlatformPtrOutput)
}

type DockerImagePlatform struct {
	// The OS type the Environment.
	OperatingSystemType *string `pulumi:"operatingSystemType"`
}

// DockerImagePlatformInput is an input type that accepts DockerImagePlatformArgs and DockerImagePlatformOutput values.
// You can construct a concrete instance of `DockerImagePlatformInput` via:
//
//	DockerImagePlatformArgs{...}
type DockerImagePlatformInput interface {
	pulumi.Input

	ToDockerImagePlatformOutput() DockerImagePlatformOutput
	ToDockerImagePlatformOutputWithContext(context.Context) DockerImagePlatformOutput
}

type DockerImagePlatformArgs struct {
	// The OS type the Environment.
	OperatingSystemType pulumi.StringPtrInput `pulumi:"operatingSystemType"`
}

func (DockerImagePlatformArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DockerImagePlatform)(nil)).Elem()
}

func (i DockerImagePlatformArgs) ToDockerImagePlatformOutput() DockerImagePlatformOutput {
	return i.ToDockerImagePlatformOutputWithContext(context.Background())
}

func (i DockerImagePlatformArgs) ToDockerImagePlatformOutputWithContext(ctx context.Context) DockerImagePlatformOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DockerImagePlatformOutput)
}

func (i DockerImagePlatformArgs) ToDockerImagePlatformPtrOutput() DockerImagePlatformPtrOutput {
	return i.ToDockerImagePlatformPtrOutputWithContext(context.Background())
}

func (i DockerImagePlatformArgs) ToDockerImagePlatformPtrOutputWithContext(ctx context.Context) DockerImagePlatformPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DockerImagePlatformOutput).ToDockerImagePlatformPtrOutputWithContext(ctx)
}

// DockerImagePlatformPtrInput is an input type that accepts DockerImagePlatformArgs, DockerImagePlatformPtr and DockerImagePlatformPtrOutput values.
// You can construct a concrete instance of `DockerImagePlatformPtrInput` via:
//
//	        DockerImagePlatformArgs{...}
//
//	or:
//
//	        nil
type DockerImagePlatformPtrInput interface {
	pulumi.Input

	ToDockerImagePlatformPtrOutput() DockerImagePlatformPtrOutput
	ToDockerImagePlatformPtrOutputWithContext(context.Context) DockerImagePlatformPtrOutput
}

type dockerImagePlatformPtrType DockerImagePlatformArgs

func DockerImagePlatformPtr(v *DockerImagePlatformArgs) DockerImagePlatformPtrInput {
	return (*dockerImagePlatformPtrType)(v)
}

func (*dockerImagePlatformPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DockerImagePlatform)(nil)).Elem()
}

func (i *dockerImagePlatformPtrType) ToDockerImagePlatformPtrOutput() DockerImagePlatformPtrOutput {
	return i.ToDockerImagePlatformPtrOutputWithContext(context.Background())
}

func (i *dockerImagePlatformPtrType) ToDockerImagePlatformPtrOutputWithContext(ctx context.Context) DockerImagePlatformPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DockerImagePlatformPtrOutput)
}

type DockerImagePlatformOutput struct{ *pulumi.OutputState }

func (DockerImagePlatformOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DockerImagePlatform)(nil)).Elem()
}

func (o DockerImagePlatformOutput) ToDockerImagePlatformOutput() DockerImagePlatformOutput {
	return o
}

func (o DockerImagePlatformOutput) ToDockerImagePlatformOutputWithContext(ctx context.Context) DockerImagePlatformOutput {
	return o
}

func (o DockerImagePlatformOutput) ToDockerImagePlatformPtrOutput() DockerImagePlatformPtrOutput {
	return o.ToDockerImagePlatformPtrOutputWithContext(context.Background())
}

func (o DockerImagePlatformOutput) ToDockerImagePlatformPtrOutputWithContext(ctx context.Context) DockerImagePlatformPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DockerImagePlatform) *DockerImagePlatform {
		return &v
	}).(DockerImagePlatformPtrOutput)
}

// The OS type the Environment.
func (o DockerImagePlatformOutput) OperatingSystemType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DockerImagePlatform) *string { return v.OperatingSystemType }).(pulumi.StringPtrOutput)
}

type DockerImagePlatformPtrOutput struct{ *pulumi.OutputState }

func (DockerImagePlatformPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DockerImagePlatform)(nil)).Elem()
}

func (o DockerImagePlatformPtrOutput) ToDockerImagePlatformPtrOutput() DockerImagePlatformPtrOutput {
	return o
}

func (o DockerImagePlatformPtrOutput) ToDockerImagePlatformPtrOutputWithContext(ctx context.Context) DockerImagePlatformPtrOutput {
	return o
}

func (o DockerImagePlatformPtrOutput) Elem() DockerImagePlatformOutput {
	return o.ApplyT(func(v *DockerImagePlatform) DockerImagePlatform {
		if v != nil {
			return *v
		}
		var ret DockerImagePlatform
		return ret
	}).(DockerImagePlatformOutput)
}

// The OS type the Environment.
func (o DockerImagePlatformPtrOutput) OperatingSystemType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DockerImagePlatform) *string {
		if v == nil {
			return nil
		}
		return v.OperatingSystemType
	}).(pulumi.StringPtrOutput)
}

type DockerImagePlatformResponse struct {
	// The OS type the Environment.
	OperatingSystemType *string `pulumi:"operatingSystemType"`
}

type DockerImagePlatformResponseOutput struct{ *pulumi.OutputState }

func (DockerImagePlatformResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DockerImagePlatformResponse)(nil)).Elem()
}

func (o DockerImagePlatformResponseOutput) ToDockerImagePlatformResponseOutput() DockerImagePlatformResponseOutput {
	return o
}

func (o DockerImagePlatformResponseOutput) ToDockerImagePlatformResponseOutputWithContext(ctx context.Context) DockerImagePlatformResponseOutput {
	return o
}

// The OS type the Environment.
func (o DockerImagePlatformResponseOutput) OperatingSystemType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DockerImagePlatformResponse) *string { return v.OperatingSystemType }).(pulumi.StringPtrOutput)
}

type DockerImagePlatformResponsePtrOutput struct{ *pulumi.OutputState }

func (DockerImagePlatformResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DockerImagePlatformResponse)(nil)).Elem()
}

func (o DockerImagePlatformResponsePtrOutput) ToDockerImagePlatformResponsePtrOutput() DockerImagePlatformResponsePtrOutput {
	return o
}

func (o DockerImagePlatformResponsePtrOutput) ToDockerImagePlatformResponsePtrOutputWithContext(ctx context.Context) DockerImagePlatformResponsePtrOutput {
	return o
}

func (o DockerImagePlatformResponsePtrOutput) Elem() DockerImagePlatformResponseOutput {
	return o.ApplyT(func(v *DockerImagePlatformResponse) DockerImagePlatformResponse {
		if v != nil {
			return *v
		}
		var ret DockerImagePlatformResponse
		return ret
	}).(DockerImagePlatformResponseOutput)
}

// The OS type the Environment.
func (o DockerImagePlatformResponsePtrOutput) OperatingSystemType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DockerImagePlatformResponse) *string {
		if v == nil {
			return nil
		}
		return v.OperatingSystemType
	}).(pulumi.StringPtrOutput)
}

// Class to represent configuration settings for Docker Build
type DockerImageResponse struct {
	// [Required] Image name of a custom base image.
	// <seealso href="https://docs.microsoft.com/en-us/azure/machine-learning/how-to-deploy-custom-docker-image#use-a-custom-base-image" />
	DockerImageUri string `pulumi:"dockerImageUri"`
	// Enum to determine docker specification type. Must be either Build or Image.
	// Expected value is 'Image'.
	DockerSpecificationType string `pulumi:"dockerSpecificationType"`
	// The platform information of the docker image.
	Platform *DockerImagePlatformResponse `pulumi:"platform"`
}

// Class to represent configuration settings for Docker Build
type DockerImageResponseOutput struct{ *pulumi.OutputState }

func (DockerImageResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DockerImageResponse)(nil)).Elem()
}

func (o DockerImageResponseOutput) ToDockerImageResponseOutput() DockerImageResponseOutput {
	return o
}

func (o DockerImageResponseOutput) ToDockerImageResponseOutputWithContext(ctx context.Context) DockerImageResponseOutput {
	return o
}

// [Required] Image name of a custom base image.
// <seealso href="https://docs.microsoft.com/en-us/azure/machine-learning/how-to-deploy-custom-docker-image#use-a-custom-base-image" />
func (o DockerImageResponseOutput) DockerImageUri() pulumi.StringOutput {
	return o.ApplyT(func(v DockerImageResponse) string { return v.DockerImageUri }).(pulumi.StringOutput)
}

// Enum to determine docker specification type. Must be either Build or Image.
// Expected value is 'Image'.
func (o DockerImageResponseOutput) DockerSpecificationType() pulumi.StringOutput {
	return o.ApplyT(func(v DockerImageResponse) string { return v.DockerSpecificationType }).(pulumi.StringOutput)
}

// The platform information of the docker image.
func (o DockerImageResponseOutput) Platform() DockerImagePlatformResponsePtrOutput {
	return o.ApplyT(func(v DockerImageResponse) *DockerImagePlatformResponse { return v.Platform }).(DockerImagePlatformResponsePtrOutput)
}

type DockerImageResponsePtrOutput struct{ *pulumi.OutputState }

func (DockerImageResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DockerImageResponse)(nil)).Elem()
}

func (o DockerImageResponsePtrOutput) ToDockerImageResponsePtrOutput() DockerImageResponsePtrOutput {
	return o
}

func (o DockerImageResponsePtrOutput) ToDockerImageResponsePtrOutputWithContext(ctx context.Context) DockerImageResponsePtrOutput {
	return o
}

func (o DockerImageResponsePtrOutput) Elem() DockerImageResponseOutput {
	return o.ApplyT(func(v *DockerImageResponse) DockerImageResponse {
		if v != nil {
			return *v
		}
		var ret DockerImageResponse
		return ret
	}).(DockerImageResponseOutput)
}

// [Required] Image name of a custom base image.
// <seealso href="https://docs.microsoft.com/en-us/azure/machine-learning/how-to-deploy-custom-docker-image#use-a-custom-base-image" />
func (o DockerImageResponsePtrOutput) DockerImageUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DockerImageResponse) *string {
		if v == nil {
			return nil
		}
		return &v.DockerImageUri
	}).(pulumi.StringPtrOutput)
}

// Enum to determine docker specification type. Must be either Build or Image.
// Expected value is 'Image'.
func (o DockerImageResponsePtrOutput) DockerSpecificationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DockerImageResponse) *string {
		if v == nil {
			return nil
		}
		return &v.DockerSpecificationType
	}).(pulumi.StringPtrOutput)
}

// The platform information of the docker image.
func (o DockerImageResponsePtrOutput) Platform() DockerImagePlatformResponsePtrOutput {
	return o.ApplyT(func(v *DockerImageResponse) *DockerImagePlatformResponse {
		if v == nil {
			return nil
		}
		return v.Platform
	}).(DockerImagePlatformResponsePtrOutput)
}

// Keys for endpoint authentication.
type EndpointAuthKeys struct {
	// The primary key.
	PrimaryKey *string `pulumi:"primaryKey"`
	// The secondary key.
	SecondaryKey *string `pulumi:"secondaryKey"`
}

// EndpointAuthKeysInput is an input type that accepts EndpointAuthKeysArgs and EndpointAuthKeysOutput values.
// You can construct a concrete instance of `EndpointAuthKeysInput` via:
//
//	EndpointAuthKeysArgs{...}
type EndpointAuthKeysInput interface {
	pulumi.Input

	ToEndpointAuthKeysOutput() EndpointAuthKeysOutput
	ToEndpointAuthKeysOutputWithContext(context.Context) EndpointAuthKeysOutput
}

// Keys for endpoint authentication.
type EndpointAuthKeysArgs struct {
	// The primary key.
	PrimaryKey pulumi.StringPtrInput `pulumi:"primaryKey"`
	// The secondary key.
	SecondaryKey pulumi.StringPtrInput `pulumi:"secondaryKey"`
}

func (EndpointAuthKeysArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointAuthKeys)(nil)).Elem()
}

func (i EndpointAuthKeysArgs) ToEndpointAuthKeysOutput() EndpointAuthKeysOutput {
	return i.ToEndpointAuthKeysOutputWithContext(context.Background())
}

func (i EndpointAuthKeysArgs) ToEndpointAuthKeysOutputWithContext(ctx context.Context) EndpointAuthKeysOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointAuthKeysOutput)
}

func (i EndpointAuthKeysArgs) ToEndpointAuthKeysPtrOutput() EndpointAuthKeysPtrOutput {
	return i.ToEndpointAuthKeysPtrOutputWithContext(context.Background())
}

func (i EndpointAuthKeysArgs) ToEndpointAuthKeysPtrOutputWithContext(ctx context.Context) EndpointAuthKeysPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointAuthKeysOutput).ToEndpointAuthKeysPtrOutputWithContext(ctx)
}

// EndpointAuthKeysPtrInput is an input type that accepts EndpointAuthKeysArgs, EndpointAuthKeysPtr and EndpointAuthKeysPtrOutput values.
// You can construct a concrete instance of `EndpointAuthKeysPtrInput` via:
//
//	        EndpointAuthKeysArgs{...}
//
//	or:
//
//	        nil
type EndpointAuthKeysPtrInput interface {
	pulumi.Input

	ToEndpointAuthKeysPtrOutput() EndpointAuthKeysPtrOutput
	ToEndpointAuthKeysPtrOutputWithContext(context.Context) EndpointAuthKeysPtrOutput
}

type endpointAuthKeysPtrType EndpointAuthKeysArgs

func EndpointAuthKeysPtr(v *EndpointAuthKeysArgs) EndpointAuthKeysPtrInput {
	return (*endpointAuthKeysPtrType)(v)
}

func (*endpointAuthKeysPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EndpointAuthKeys)(nil)).Elem()
}

func (i *endpointAuthKeysPtrType) ToEndpointAuthKeysPtrOutput() EndpointAuthKeysPtrOutput {
	return i.ToEndpointAuthKeysPtrOutputWithContext(context.Background())
}

func (i *endpointAuthKeysPtrType) ToEndpointAuthKeysPtrOutputWithContext(ctx context.Context) EndpointAuthKeysPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointAuthKeysPtrOutput)
}

// Keys for endpoint authentication.
type EndpointAuthKeysOutput struct{ *pulumi.OutputState }

func (EndpointAuthKeysOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointAuthKeys)(nil)).Elem()
}

func (o EndpointAuthKeysOutput) ToEndpointAuthKeysOutput() EndpointAuthKeysOutput {
	return o
}

func (o EndpointAuthKeysOutput) ToEndpointAuthKeysOutputWithContext(ctx context.Context) EndpointAuthKeysOutput {
	return o
}

func (o EndpointAuthKeysOutput) ToEndpointAuthKeysPtrOutput() EndpointAuthKeysPtrOutput {
	return o.ToEndpointAuthKeysPtrOutputWithContext(context.Background())
}

func (o EndpointAuthKeysOutput) ToEndpointAuthKeysPtrOutputWithContext(ctx context.Context) EndpointAuthKeysPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EndpointAuthKeys) *EndpointAuthKeys {
		return &v
	}).(EndpointAuthKeysPtrOutput)
}

// The primary key.
func (o EndpointAuthKeysOutput) PrimaryKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointAuthKeys) *string { return v.PrimaryKey }).(pulumi.StringPtrOutput)
}

// The secondary key.
func (o EndpointAuthKeysOutput) SecondaryKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointAuthKeys) *string { return v.SecondaryKey }).(pulumi.StringPtrOutput)
}

type EndpointAuthKeysPtrOutput struct{ *pulumi.OutputState }

func (EndpointAuthKeysPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EndpointAuthKeys)(nil)).Elem()
}

func (o EndpointAuthKeysPtrOutput) ToEndpointAuthKeysPtrOutput() EndpointAuthKeysPtrOutput {
	return o
}

func (o EndpointAuthKeysPtrOutput) ToEndpointAuthKeysPtrOutputWithContext(ctx context.Context) EndpointAuthKeysPtrOutput {
	return o
}

func (o EndpointAuthKeysPtrOutput) Elem() EndpointAuthKeysOutput {
	return o.ApplyT(func(v *EndpointAuthKeys) EndpointAuthKeys {
		if v != nil {
			return *v
		}
		var ret EndpointAuthKeys
		return ret
	}).(EndpointAuthKeysOutput)
}

// The primary key.
func (o EndpointAuthKeysPtrOutput) PrimaryKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EndpointAuthKeys) *string {
		if v == nil {
			return nil
		}
		return v.PrimaryKey
	}).(pulumi.StringPtrOutput)
}

// The secondary key.
func (o EndpointAuthKeysPtrOutput) SecondaryKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EndpointAuthKeys) *string {
		if v == nil {
			return nil
		}
		return v.SecondaryKey
	}).(pulumi.StringPtrOutput)
}

// Container for environment specification versions.
type EnvironmentContainerType struct {
	// The asset description text.
	Description *string `pulumi:"description"`
	// The asset property dictionary.
	Properties map[string]string `pulumi:"properties"`
	// Tag dictionary. Tags can be added, removed, and updated.
	Tags map[string]string `pulumi:"tags"`
}

// EnvironmentContainerTypeInput is an input type that accepts EnvironmentContainerTypeArgs and EnvironmentContainerTypeOutput values.
// You can construct a concrete instance of `EnvironmentContainerTypeInput` via:
//
//	EnvironmentContainerTypeArgs{...}
type EnvironmentContainerTypeInput interface {
	pulumi.Input

	ToEnvironmentContainerTypeOutput() EnvironmentContainerTypeOutput
	ToEnvironmentContainerTypeOutputWithContext(context.Context) EnvironmentContainerTypeOutput
}

// Container for environment specification versions.
type EnvironmentContainerTypeArgs struct {
	// The asset description text.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The asset property dictionary.
	Properties pulumi.StringMapInput `pulumi:"properties"`
	// Tag dictionary. Tags can be added, removed, and updated.
	Tags pulumi.StringMapInput `pulumi:"tags"`
}

func (EnvironmentContainerTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentContainerType)(nil)).Elem()
}

func (i EnvironmentContainerTypeArgs) ToEnvironmentContainerTypeOutput() EnvironmentContainerTypeOutput {
	return i.ToEnvironmentContainerTypeOutputWithContext(context.Background())
}

func (i EnvironmentContainerTypeArgs) ToEnvironmentContainerTypeOutputWithContext(ctx context.Context) EnvironmentContainerTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentContainerTypeOutput)
}

// Container for environment specification versions.
type EnvironmentContainerTypeOutput struct{ *pulumi.OutputState }

func (EnvironmentContainerTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentContainerType)(nil)).Elem()
}

func (o EnvironmentContainerTypeOutput) ToEnvironmentContainerTypeOutput() EnvironmentContainerTypeOutput {
	return o
}

func (o EnvironmentContainerTypeOutput) ToEnvironmentContainerTypeOutputWithContext(ctx context.Context) EnvironmentContainerTypeOutput {
	return o
}

// The asset description text.
func (o EnvironmentContainerTypeOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EnvironmentContainerType) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The asset property dictionary.
func (o EnvironmentContainerTypeOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v EnvironmentContainerType) map[string]string { return v.Properties }).(pulumi.StringMapOutput)
}

// Tag dictionary. Tags can be added, removed, and updated.
func (o EnvironmentContainerTypeOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v EnvironmentContainerType) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Container for environment specification versions.
type EnvironmentContainerResponse struct {
	// The asset description text.
	Description *string `pulumi:"description"`
	// The asset property dictionary.
	Properties map[string]string `pulumi:"properties"`
	// Tag dictionary. Tags can be added, removed, and updated.
	Tags map[string]string `pulumi:"tags"`
}

// Container for environment specification versions.
type EnvironmentContainerResponseOutput struct{ *pulumi.OutputState }

func (EnvironmentContainerResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentContainerResponse)(nil)).Elem()
}

func (o EnvironmentContainerResponseOutput) ToEnvironmentContainerResponseOutput() EnvironmentContainerResponseOutput {
	return o
}

func (o EnvironmentContainerResponseOutput) ToEnvironmentContainerResponseOutputWithContext(ctx context.Context) EnvironmentContainerResponseOutput {
	return o
}

// The asset description text.
func (o EnvironmentContainerResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EnvironmentContainerResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The asset property dictionary.
func (o EnvironmentContainerResponseOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v EnvironmentContainerResponse) map[string]string { return v.Properties }).(pulumi.StringMapOutput)
}

// Tag dictionary. Tags can be added, removed, and updated.
func (o EnvironmentContainerResponseOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v EnvironmentContainerResponse) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Environment specification version details.
// <see href="https://repo2docker.readthedocs.io/en/latest/specification.html" />
type EnvironmentSpecificationVersionType struct {
	// Standard configuration file used by Conda that lets you install any kind of package, including Python, R, and C/C++ packages.
	// <see href="https://repo2docker.readthedocs.io/en/latest/config_files.html#environment-yml-install-a-conda-environment" />
	CondaFile *string `pulumi:"condaFile"`
	// The asset description text.
	Description *string `pulumi:"description"`
	// Configuration settings for Docker.
	Docker interface{} `pulumi:"docker"`
	// Defines configuration specific to inference.
	InferenceContainerProperties *InferenceContainerProperties `pulumi:"inferenceContainerProperties"`
	// If the name version are system generated (anonymous registration).
	IsAnonymous *bool `pulumi:"isAnonymous"`
	// The asset property dictionary.
	Properties map[string]string `pulumi:"properties"`
	// Tag dictionary. Tags can be added, removed, and updated.
	Tags map[string]string `pulumi:"tags"`
}

// EnvironmentSpecificationVersionTypeInput is an input type that accepts EnvironmentSpecificationVersionTypeArgs and EnvironmentSpecificationVersionTypeOutput values.
// You can construct a concrete instance of `EnvironmentSpecificationVersionTypeInput` via:
//
//	EnvironmentSpecificationVersionTypeArgs{...}
type EnvironmentSpecificationVersionTypeInput interface {
	pulumi.Input

	ToEnvironmentSpecificationVersionTypeOutput() EnvironmentSpecificationVersionTypeOutput
	ToEnvironmentSpecificationVersionTypeOutputWithContext(context.Context) EnvironmentSpecificationVersionTypeOutput
}

// Environment specification version details.
// <see href="https://repo2docker.readthedocs.io/en/latest/specification.html" />
type EnvironmentSpecificationVersionTypeArgs struct {
	// Standard configuration file used by Conda that lets you install any kind of package, including Python, R, and C/C++ packages.
	// <see href="https://repo2docker.readthedocs.io/en/latest/config_files.html#environment-yml-install-a-conda-environment" />
	CondaFile pulumi.StringPtrInput `pulumi:"condaFile"`
	// The asset description text.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Configuration settings for Docker.
	Docker pulumi.Input `pulumi:"docker"`
	// Defines configuration specific to inference.
	InferenceContainerProperties InferenceContainerPropertiesPtrInput `pulumi:"inferenceContainerProperties"`
	// If the name version are system generated (anonymous registration).
	IsAnonymous pulumi.BoolPtrInput `pulumi:"isAnonymous"`
	// The asset property dictionary.
	Properties pulumi.StringMapInput `pulumi:"properties"`
	// Tag dictionary. Tags can be added, removed, and updated.
	Tags pulumi.StringMapInput `pulumi:"tags"`
}

func (EnvironmentSpecificationVersionTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentSpecificationVersionType)(nil)).Elem()
}

func (i EnvironmentSpecificationVersionTypeArgs) ToEnvironmentSpecificationVersionTypeOutput() EnvironmentSpecificationVersionTypeOutput {
	return i.ToEnvironmentSpecificationVersionTypeOutputWithContext(context.Background())
}

func (i EnvironmentSpecificationVersionTypeArgs) ToEnvironmentSpecificationVersionTypeOutputWithContext(ctx context.Context) EnvironmentSpecificationVersionTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentSpecificationVersionTypeOutput)
}

// Environment specification version details.
// <see href="https://repo2docker.readthedocs.io/en/latest/specification.html" />
type EnvironmentSpecificationVersionTypeOutput struct{ *pulumi.OutputState }

func (EnvironmentSpecificationVersionTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentSpecificationVersionType)(nil)).Elem()
}

func (o EnvironmentSpecificationVersionTypeOutput) ToEnvironmentSpecificationVersionTypeOutput() EnvironmentSpecificationVersionTypeOutput {
	return o
}

func (o EnvironmentSpecificationVersionTypeOutput) ToEnvironmentSpecificationVersionTypeOutputWithContext(ctx context.Context) EnvironmentSpecificationVersionTypeOutput {
	return o
}

// Standard configuration file used by Conda that lets you install any kind of package, including Python, R, and C/C++ packages.
// <see href="https://repo2docker.readthedocs.io/en/latest/config_files.html#environment-yml-install-a-conda-environment" />
func (o EnvironmentSpecificationVersionTypeOutput) CondaFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EnvironmentSpecificationVersionType) *string { return v.CondaFile }).(pulumi.StringPtrOutput)
}

// The asset description text.
func (o EnvironmentSpecificationVersionTypeOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EnvironmentSpecificationVersionType) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Configuration settings for Docker.
func (o EnvironmentSpecificationVersionTypeOutput) Docker() pulumi.AnyOutput {
	return o.ApplyT(func(v EnvironmentSpecificationVersionType) interface{} { return v.Docker }).(pulumi.AnyOutput)
}

// Defines configuration specific to inference.
func (o EnvironmentSpecificationVersionTypeOutput) InferenceContainerProperties() InferenceContainerPropertiesPtrOutput {
	return o.ApplyT(func(v EnvironmentSpecificationVersionType) *InferenceContainerProperties {
		return v.InferenceContainerProperties
	}).(InferenceContainerPropertiesPtrOutput)
}

// If the name version are system generated (anonymous registration).
func (o EnvironmentSpecificationVersionTypeOutput) IsAnonymous() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v EnvironmentSpecificationVersionType) *bool { return v.IsAnonymous }).(pulumi.BoolPtrOutput)
}

// The asset property dictionary.
func (o EnvironmentSpecificationVersionTypeOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v EnvironmentSpecificationVersionType) map[string]string { return v.Properties }).(pulumi.StringMapOutput)
}

// Tag dictionary. Tags can be added, removed, and updated.
func (o EnvironmentSpecificationVersionTypeOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v EnvironmentSpecificationVersionType) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Environment specification version details.
// <see href="https://repo2docker.readthedocs.io/en/latest/specification.html" />
type EnvironmentSpecificationVersionResponse struct {
	// Standard configuration file used by Conda that lets you install any kind of package, including Python, R, and C/C++ packages.
	// <see href="https://repo2docker.readthedocs.io/en/latest/config_files.html#environment-yml-install-a-conda-environment" />
	CondaFile *string `pulumi:"condaFile"`
	// The asset description text.
	Description *string `pulumi:"description"`
	// Configuration settings for Docker.
	Docker interface{} `pulumi:"docker"`
	// Environment specification is either user managed or curated by the Azure ML service
	// <see href="https://docs.microsoft.com/en-us/azure/machine-learning/resource-curated-environments" />
	EnvironmentSpecificationType string `pulumi:"environmentSpecificationType"`
	// Defines configuration specific to inference.
	InferenceContainerProperties *InferenceContainerPropertiesResponse `pulumi:"inferenceContainerProperties"`
	// If the name version are system generated (anonymous registration).
	IsAnonymous *bool `pulumi:"isAnonymous"`
	// The asset property dictionary.
	Properties map[string]string `pulumi:"properties"`
	// Tag dictionary. Tags can be added, removed, and updated.
	Tags map[string]string `pulumi:"tags"`
}

// Environment specification version details.
// <see href="https://repo2docker.readthedocs.io/en/latest/specification.html" />
type EnvironmentSpecificationVersionResponseOutput struct{ *pulumi.OutputState }

func (EnvironmentSpecificationVersionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentSpecificationVersionResponse)(nil)).Elem()
}

func (o EnvironmentSpecificationVersionResponseOutput) ToEnvironmentSpecificationVersionResponseOutput() EnvironmentSpecificationVersionResponseOutput {
	return o
}

func (o EnvironmentSpecificationVersionResponseOutput) ToEnvironmentSpecificationVersionResponseOutputWithContext(ctx context.Context) EnvironmentSpecificationVersionResponseOutput {
	return o
}

// Standard configuration file used by Conda that lets you install any kind of package, including Python, R, and C/C++ packages.
// <see href="https://repo2docker.readthedocs.io/en/latest/config_files.html#environment-yml-install-a-conda-environment" />
func (o EnvironmentSpecificationVersionResponseOutput) CondaFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EnvironmentSpecificationVersionResponse) *string { return v.CondaFile }).(pulumi.StringPtrOutput)
}

// The asset description text.
func (o EnvironmentSpecificationVersionResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EnvironmentSpecificationVersionResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Configuration settings for Docker.
func (o EnvironmentSpecificationVersionResponseOutput) Docker() pulumi.AnyOutput {
	return o.ApplyT(func(v EnvironmentSpecificationVersionResponse) interface{} { return v.Docker }).(pulumi.AnyOutput)
}

// Environment specification is either user managed or curated by the Azure ML service
// <see href="https://docs.microsoft.com/en-us/azure/machine-learning/resource-curated-environments" />
func (o EnvironmentSpecificationVersionResponseOutput) EnvironmentSpecificationType() pulumi.StringOutput {
	return o.ApplyT(func(v EnvironmentSpecificationVersionResponse) string { return v.EnvironmentSpecificationType }).(pulumi.StringOutput)
}

// Defines configuration specific to inference.
func (o EnvironmentSpecificationVersionResponseOutput) InferenceContainerProperties() InferenceContainerPropertiesResponsePtrOutput {
	return o.ApplyT(func(v EnvironmentSpecificationVersionResponse) *InferenceContainerPropertiesResponse {
		return v.InferenceContainerProperties
	}).(InferenceContainerPropertiesResponsePtrOutput)
}

// If the name version are system generated (anonymous registration).
func (o EnvironmentSpecificationVersionResponseOutput) IsAnonymous() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v EnvironmentSpecificationVersionResponse) *bool { return v.IsAnonymous }).(pulumi.BoolPtrOutput)
}

// The asset property dictionary.
func (o EnvironmentSpecificationVersionResponseOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v EnvironmentSpecificationVersionResponse) map[string]string { return v.Properties }).(pulumi.StringMapOutput)
}

// Tag dictionary. Tags can be added, removed, and updated.
func (o EnvironmentSpecificationVersionResponseOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v EnvironmentSpecificationVersionResponse) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

type FlavorData struct {
	// Model flavor-specific data.
	Data map[string]string `pulumi:"data"`
}

// FlavorDataInput is an input type that accepts FlavorDataArgs and FlavorDataOutput values.
// You can construct a concrete instance of `FlavorDataInput` via:
//
//	FlavorDataArgs{...}
type FlavorDataInput interface {
	pulumi.Input

	ToFlavorDataOutput() FlavorDataOutput
	ToFlavorDataOutputWithContext(context.Context) FlavorDataOutput
}

type FlavorDataArgs struct {
	// Model flavor-specific data.
	Data pulumi.StringMapInput `pulumi:"data"`
}

func (FlavorDataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FlavorData)(nil)).Elem()
}

func (i FlavorDataArgs) ToFlavorDataOutput() FlavorDataOutput {
	return i.ToFlavorDataOutputWithContext(context.Background())
}

func (i FlavorDataArgs) ToFlavorDataOutputWithContext(ctx context.Context) FlavorDataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlavorDataOutput)
}

// FlavorDataMapInput is an input type that accepts FlavorDataMap and FlavorDataMapOutput values.
// You can construct a concrete instance of `FlavorDataMapInput` via:
//
//	FlavorDataMap{ "key": FlavorDataArgs{...} }
type FlavorDataMapInput interface {
	pulumi.Input

	ToFlavorDataMapOutput() FlavorDataMapOutput
	ToFlavorDataMapOutputWithContext(context.Context) FlavorDataMapOutput
}

type FlavorDataMap map[string]FlavorDataInput

func (FlavorDataMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]FlavorData)(nil)).Elem()
}

func (i FlavorDataMap) ToFlavorDataMapOutput() FlavorDataMapOutput {
	return i.ToFlavorDataMapOutputWithContext(context.Background())
}

func (i FlavorDataMap) ToFlavorDataMapOutputWithContext(ctx context.Context) FlavorDataMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlavorDataMapOutput)
}

type FlavorDataOutput struct{ *pulumi.OutputState }

func (FlavorDataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlavorData)(nil)).Elem()
}

func (o FlavorDataOutput) ToFlavorDataOutput() FlavorDataOutput {
	return o
}

func (o FlavorDataOutput) ToFlavorDataOutputWithContext(ctx context.Context) FlavorDataOutput {
	return o
}

// Model flavor-specific data.
func (o FlavorDataOutput) Data() pulumi.StringMapOutput {
	return o.ApplyT(func(v FlavorData) map[string]string { return v.Data }).(pulumi.StringMapOutput)
}

type FlavorDataMapOutput struct{ *pulumi.OutputState }

func (FlavorDataMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]FlavorData)(nil)).Elem()
}

func (o FlavorDataMapOutput) ToFlavorDataMapOutput() FlavorDataMapOutput {
	return o
}

func (o FlavorDataMapOutput) ToFlavorDataMapOutputWithContext(ctx context.Context) FlavorDataMapOutput {
	return o
}

func (o FlavorDataMapOutput) MapIndex(k pulumi.StringInput) FlavorDataOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) FlavorData {
		return vs[0].(map[string]FlavorData)[vs[1].(string)]
	}).(FlavorDataOutput)
}

type FlavorDataResponse struct {
	// Model flavor-specific data.
	Data map[string]string `pulumi:"data"`
}

type FlavorDataResponseOutput struct{ *pulumi.OutputState }

func (FlavorDataResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlavorDataResponse)(nil)).Elem()
}

func (o FlavorDataResponseOutput) ToFlavorDataResponseOutput() FlavorDataResponseOutput {
	return o
}

func (o FlavorDataResponseOutput) ToFlavorDataResponseOutputWithContext(ctx context.Context) FlavorDataResponseOutput {
	return o
}

// Model flavor-specific data.
func (o FlavorDataResponseOutput) Data() pulumi.StringMapOutput {
	return o.ApplyT(func(v FlavorDataResponse) map[string]string { return v.Data }).(pulumi.StringMapOutput)
}

type FlavorDataResponseMapOutput struct{ *pulumi.OutputState }

func (FlavorDataResponseMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]FlavorDataResponse)(nil)).Elem()
}

func (o FlavorDataResponseMapOutput) ToFlavorDataResponseMapOutput() FlavorDataResponseMapOutput {
	return o
}

func (o FlavorDataResponseMapOutput) ToFlavorDataResponseMapOutputWithContext(ctx context.Context) FlavorDataResponseMapOutput {
	return o
}

func (o FlavorDataResponseMapOutput) MapIndex(k pulumi.StringInput) FlavorDataResponseOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) FlavorDataResponse {
		return vs[0].(map[string]FlavorDataResponse)[vs[1].(string)]
	}).(FlavorDataResponseOutput)
}

// GlusterFs datastore configuration.
type GlusterFsContents struct {
	// Enum to determine the datastore contents type.
	// Expected value is 'GlusterFs'.
	ContentsType string `pulumi:"contentsType"`
	// [Required] GlusterFS server address (can be the IP address or server name).
	ServerAddress string `pulumi:"serverAddress"`
	// [Required] GlusterFS volume name.
	VolumeName string `pulumi:"volumeName"`
}

// GlusterFsContentsInput is an input type that accepts GlusterFsContentsArgs and GlusterFsContentsOutput values.
// You can construct a concrete instance of `GlusterFsContentsInput` via:
//
//	GlusterFsContentsArgs{...}
type GlusterFsContentsInput interface {
	pulumi.Input

	ToGlusterFsContentsOutput() GlusterFsContentsOutput
	ToGlusterFsContentsOutputWithContext(context.Context) GlusterFsContentsOutput
}

// GlusterFs datastore configuration.
type GlusterFsContentsArgs struct {
	// Enum to determine the datastore contents type.
	// Expected value is 'GlusterFs'.
	ContentsType pulumi.StringInput `pulumi:"contentsType"`
	// [Required] GlusterFS server address (can be the IP address or server name).
	ServerAddress pulumi.StringInput `pulumi:"serverAddress"`
	// [Required] GlusterFS volume name.
	VolumeName pulumi.StringInput `pulumi:"volumeName"`
}

func (GlusterFsContentsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GlusterFsContents)(nil)).Elem()
}

func (i GlusterFsContentsArgs) ToGlusterFsContentsOutput() GlusterFsContentsOutput {
	return i.ToGlusterFsContentsOutputWithContext(context.Background())
}

func (i GlusterFsContentsArgs) ToGlusterFsContentsOutputWithContext(ctx context.Context) GlusterFsContentsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GlusterFsContentsOutput)
}

// GlusterFs datastore configuration.
type GlusterFsContentsOutput struct{ *pulumi.OutputState }

func (GlusterFsContentsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GlusterFsContents)(nil)).Elem()
}

func (o GlusterFsContentsOutput) ToGlusterFsContentsOutput() GlusterFsContentsOutput {
	return o
}

func (o GlusterFsContentsOutput) ToGlusterFsContentsOutputWithContext(ctx context.Context) GlusterFsContentsOutput {
	return o
}

// Enum to determine the datastore contents type.
// Expected value is 'GlusterFs'.
func (o GlusterFsContentsOutput) ContentsType() pulumi.StringOutput {
	return o.ApplyT(func(v GlusterFsContents) string { return v.ContentsType }).(pulumi.StringOutput)
}

// [Required] GlusterFS server address (can be the IP address or server name).
func (o GlusterFsContentsOutput) ServerAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GlusterFsContents) string { return v.ServerAddress }).(pulumi.StringOutput)
}

// [Required] GlusterFS volume name.
func (o GlusterFsContentsOutput) VolumeName() pulumi.StringOutput {
	return o.ApplyT(func(v GlusterFsContents) string { return v.VolumeName }).(pulumi.StringOutput)
}

// GlusterFs datastore configuration.
type GlusterFsContentsResponse struct {
	// Enum to determine the datastore contents type.
	// Expected value is 'GlusterFs'.
	ContentsType string `pulumi:"contentsType"`
	// [Required] GlusterFS server address (can be the IP address or server name).
	ServerAddress string `pulumi:"serverAddress"`
	// [Required] GlusterFS volume name.
	VolumeName string `pulumi:"volumeName"`
}

// GlusterFs datastore configuration.
type GlusterFsContentsResponseOutput struct{ *pulumi.OutputState }

func (GlusterFsContentsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GlusterFsContentsResponse)(nil)).Elem()
}

func (o GlusterFsContentsResponseOutput) ToGlusterFsContentsResponseOutput() GlusterFsContentsResponseOutput {
	return o
}

func (o GlusterFsContentsResponseOutput) ToGlusterFsContentsResponseOutputWithContext(ctx context.Context) GlusterFsContentsResponseOutput {
	return o
}

// Enum to determine the datastore contents type.
// Expected value is 'GlusterFs'.
func (o GlusterFsContentsResponseOutput) ContentsType() pulumi.StringOutput {
	return o.ApplyT(func(v GlusterFsContentsResponse) string { return v.ContentsType }).(pulumi.StringOutput)
}

// [Required] GlusterFS server address (can be the IP address or server name).
func (o GlusterFsContentsResponseOutput) ServerAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GlusterFsContentsResponse) string { return v.ServerAddress }).(pulumi.StringOutput)
}

// [Required] GlusterFS volume name.
func (o GlusterFsContentsResponseOutput) VolumeName() pulumi.StringOutput {
	return o.ApplyT(func(v GlusterFsContentsResponse) string { return v.VolumeName }).(pulumi.StringOutput)
}

// Reference to an asset via its ARM resource ID.
type IdAssetReference struct {
	// [Required] ARM resource ID of the asset.
	AssetId string `pulumi:"assetId"`
	// Enum to determine which reference method to use for an asset.
	// Expected value is 'Id'.
	ReferenceType string `pulumi:"referenceType"`
}

// IdAssetReferenceInput is an input type that accepts IdAssetReferenceArgs and IdAssetReferenceOutput values.
// You can construct a concrete instance of `IdAssetReferenceInput` via:
//
//	IdAssetReferenceArgs{...}
type IdAssetReferenceInput interface {
	pulumi.Input

	ToIdAssetReferenceOutput() IdAssetReferenceOutput
	ToIdAssetReferenceOutputWithContext(context.Context) IdAssetReferenceOutput
}

// Reference to an asset via its ARM resource ID.
type IdAssetReferenceArgs struct {
	// [Required] ARM resource ID of the asset.
	AssetId pulumi.StringInput `pulumi:"assetId"`
	// Enum to determine which reference method to use for an asset.
	// Expected value is 'Id'.
	ReferenceType pulumi.StringInput `pulumi:"referenceType"`
}

func (IdAssetReferenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IdAssetReference)(nil)).Elem()
}

func (i IdAssetReferenceArgs) ToIdAssetReferenceOutput() IdAssetReferenceOutput {
	return i.ToIdAssetReferenceOutputWithContext(context.Background())
}

func (i IdAssetReferenceArgs) ToIdAssetReferenceOutputWithContext(ctx context.Context) IdAssetReferenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdAssetReferenceOutput)
}

func (i IdAssetReferenceArgs) ToIdAssetReferencePtrOutput() IdAssetReferencePtrOutput {
	return i.ToIdAssetReferencePtrOutputWithContext(context.Background())
}

func (i IdAssetReferenceArgs) ToIdAssetReferencePtrOutputWithContext(ctx context.Context) IdAssetReferencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdAssetReferenceOutput).ToIdAssetReferencePtrOutputWithContext(ctx)
}

// IdAssetReferencePtrInput is an input type that accepts IdAssetReferenceArgs, IdAssetReferencePtr and IdAssetReferencePtrOutput values.
// You can construct a concrete instance of `IdAssetReferencePtrInput` via:
//
//	        IdAssetReferenceArgs{...}
//
//	or:
//
//	        nil
type IdAssetReferencePtrInput interface {
	pulumi.Input

	ToIdAssetReferencePtrOutput() IdAssetReferencePtrOutput
	ToIdAssetReferencePtrOutputWithContext(context.Context) IdAssetReferencePtrOutput
}

type idAssetReferencePtrType IdAssetReferenceArgs

func IdAssetReferencePtr(v *IdAssetReferenceArgs) IdAssetReferencePtrInput {
	return (*idAssetReferencePtrType)(v)
}

func (*idAssetReferencePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IdAssetReference)(nil)).Elem()
}

func (i *idAssetReferencePtrType) ToIdAssetReferencePtrOutput() IdAssetReferencePtrOutput {
	return i.ToIdAssetReferencePtrOutputWithContext(context.Background())
}

func (i *idAssetReferencePtrType) ToIdAssetReferencePtrOutputWithContext(ctx context.Context) IdAssetReferencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdAssetReferencePtrOutput)
}

// Reference to an asset via its ARM resource ID.
type IdAssetReferenceOutput struct{ *pulumi.OutputState }

func (IdAssetReferenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IdAssetReference)(nil)).Elem()
}

func (o IdAssetReferenceOutput) ToIdAssetReferenceOutput() IdAssetReferenceOutput {
	return o
}

func (o IdAssetReferenceOutput) ToIdAssetReferenceOutputWithContext(ctx context.Context) IdAssetReferenceOutput {
	return o
}

func (o IdAssetReferenceOutput) ToIdAssetReferencePtrOutput() IdAssetReferencePtrOutput {
	return o.ToIdAssetReferencePtrOutputWithContext(context.Background())
}

func (o IdAssetReferenceOutput) ToIdAssetReferencePtrOutputWithContext(ctx context.Context) IdAssetReferencePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IdAssetReference) *IdAssetReference {
		return &v
	}).(IdAssetReferencePtrOutput)
}

// [Required] ARM resource ID of the asset.
func (o IdAssetReferenceOutput) AssetId() pulumi.StringOutput {
	return o.ApplyT(func(v IdAssetReference) string { return v.AssetId }).(pulumi.StringOutput)
}

// Enum to determine which reference method to use for an asset.
// Expected value is 'Id'.
func (o IdAssetReferenceOutput) ReferenceType() pulumi.StringOutput {
	return o.ApplyT(func(v IdAssetReference) string { return v.ReferenceType }).(pulumi.StringOutput)
}

type IdAssetReferencePtrOutput struct{ *pulumi.OutputState }

func (IdAssetReferencePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IdAssetReference)(nil)).Elem()
}

func (o IdAssetReferencePtrOutput) ToIdAssetReferencePtrOutput() IdAssetReferencePtrOutput {
	return o
}

func (o IdAssetReferencePtrOutput) ToIdAssetReferencePtrOutputWithContext(ctx context.Context) IdAssetReferencePtrOutput {
	return o
}

func (o IdAssetReferencePtrOutput) Elem() IdAssetReferenceOutput {
	return o.ApplyT(func(v *IdAssetReference) IdAssetReference {
		if v != nil {
			return *v
		}
		var ret IdAssetReference
		return ret
	}).(IdAssetReferenceOutput)
}

// [Required] ARM resource ID of the asset.
func (o IdAssetReferencePtrOutput) AssetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdAssetReference) *string {
		if v == nil {
			return nil
		}
		return &v.AssetId
	}).(pulumi.StringPtrOutput)
}

// Enum to determine which reference method to use for an asset.
// Expected value is 'Id'.
func (o IdAssetReferencePtrOutput) ReferenceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdAssetReference) *string {
		if v == nil {
			return nil
		}
		return &v.ReferenceType
	}).(pulumi.StringPtrOutput)
}

// Reference to an asset via its ARM resource ID.
type IdAssetReferenceResponse struct {
	// [Required] ARM resource ID of the asset.
	AssetId string `pulumi:"assetId"`
	// Enum to determine which reference method to use for an asset.
	// Expected value is 'Id'.
	ReferenceType string `pulumi:"referenceType"`
}

// Reference to an asset via its ARM resource ID.
type IdAssetReferenceResponseOutput struct{ *pulumi.OutputState }

func (IdAssetReferenceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IdAssetReferenceResponse)(nil)).Elem()
}

func (o IdAssetReferenceResponseOutput) ToIdAssetReferenceResponseOutput() IdAssetReferenceResponseOutput {
	return o
}

func (o IdAssetReferenceResponseOutput) ToIdAssetReferenceResponseOutputWithContext(ctx context.Context) IdAssetReferenceResponseOutput {
	return o
}

// [Required] ARM resource ID of the asset.
func (o IdAssetReferenceResponseOutput) AssetId() pulumi.StringOutput {
	return o.ApplyT(func(v IdAssetReferenceResponse) string { return v.AssetId }).(pulumi.StringOutput)
}

// Enum to determine which reference method to use for an asset.
// Expected value is 'Id'.
func (o IdAssetReferenceResponseOutput) ReferenceType() pulumi.StringOutput {
	return o.ApplyT(func(v IdAssetReferenceResponse) string { return v.ReferenceType }).(pulumi.StringOutput)
}

type IdAssetReferenceResponsePtrOutput struct{ *pulumi.OutputState }

func (IdAssetReferenceResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IdAssetReferenceResponse)(nil)).Elem()
}

func (o IdAssetReferenceResponsePtrOutput) ToIdAssetReferenceResponsePtrOutput() IdAssetReferenceResponsePtrOutput {
	return o
}

func (o IdAssetReferenceResponsePtrOutput) ToIdAssetReferenceResponsePtrOutputWithContext(ctx context.Context) IdAssetReferenceResponsePtrOutput {
	return o
}

func (o IdAssetReferenceResponsePtrOutput) Elem() IdAssetReferenceResponseOutput {
	return o.ApplyT(func(v *IdAssetReferenceResponse) IdAssetReferenceResponse {
		if v != nil {
			return *v
		}
		var ret IdAssetReferenceResponse
		return ret
	}).(IdAssetReferenceResponseOutput)
}

// [Required] ARM resource ID of the asset.
func (o IdAssetReferenceResponsePtrOutput) AssetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdAssetReferenceResponse) *string {
		if v == nil {
			return nil
		}
		return &v.AssetId
	}).(pulumi.StringPtrOutput)
}

// Enum to determine which reference method to use for an asset.
// Expected value is 'Id'.
func (o IdAssetReferenceResponsePtrOutput) ReferenceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdAssetReferenceResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ReferenceType
	}).(pulumi.StringPtrOutput)
}

type InferenceContainerProperties struct {
	// The route to check the liveness of the inference server container.
	LivenessRoute *Route `pulumi:"livenessRoute"`
	// The route to check the readiness of the inference server container.
	ReadinessRoute *Route `pulumi:"readinessRoute"`
	// The port to send the scoring requests to, within the inference server container.
	ScoringRoute *Route `pulumi:"scoringRoute"`
}

// InferenceContainerPropertiesInput is an input type that accepts InferenceContainerPropertiesArgs and InferenceContainerPropertiesOutput values.
// You can construct a concrete instance of `InferenceContainerPropertiesInput` via:
//
//	InferenceContainerPropertiesArgs{...}
type InferenceContainerPropertiesInput interface {
	pulumi.Input

	ToInferenceContainerPropertiesOutput() InferenceContainerPropertiesOutput
	ToInferenceContainerPropertiesOutputWithContext(context.Context) InferenceContainerPropertiesOutput
}

type InferenceContainerPropertiesArgs struct {
	// The route to check the liveness of the inference server container.
	LivenessRoute RoutePtrInput `pulumi:"livenessRoute"`
	// The route to check the readiness of the inference server container.
	ReadinessRoute RoutePtrInput `pulumi:"readinessRoute"`
	// The port to send the scoring requests to, within the inference server container.
	ScoringRoute RoutePtrInput `pulumi:"scoringRoute"`
}

func (InferenceContainerPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InferenceContainerProperties)(nil)).Elem()
}

func (i InferenceContainerPropertiesArgs) ToInferenceContainerPropertiesOutput() InferenceContainerPropertiesOutput {
	return i.ToInferenceContainerPropertiesOutputWithContext(context.Background())
}

func (i InferenceContainerPropertiesArgs) ToInferenceContainerPropertiesOutputWithContext(ctx context.Context) InferenceContainerPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InferenceContainerPropertiesOutput)
}

func (i InferenceContainerPropertiesArgs) ToInferenceContainerPropertiesPtrOutput() InferenceContainerPropertiesPtrOutput {
	return i.ToInferenceContainerPropertiesPtrOutputWithContext(context.Background())
}

func (i InferenceContainerPropertiesArgs) ToInferenceContainerPropertiesPtrOutputWithContext(ctx context.Context) InferenceContainerPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InferenceContainerPropertiesOutput).ToInferenceContainerPropertiesPtrOutputWithContext(ctx)
}

// InferenceContainerPropertiesPtrInput is an input type that accepts InferenceContainerPropertiesArgs, InferenceContainerPropertiesPtr and InferenceContainerPropertiesPtrOutput values.
// You can construct a concrete instance of `InferenceContainerPropertiesPtrInput` via:
//
//	        InferenceContainerPropertiesArgs{...}
//
//	or:
//
//	        nil
type InferenceContainerPropertiesPtrInput interface {
	pulumi.Input

	ToInferenceContainerPropertiesPtrOutput() InferenceContainerPropertiesPtrOutput
	ToInferenceContainerPropertiesPtrOutputWithContext(context.Context) InferenceContainerPropertiesPtrOutput
}

type inferenceContainerPropertiesPtrType InferenceContainerPropertiesArgs

func InferenceContainerPropertiesPtr(v *InferenceContainerPropertiesArgs) InferenceContainerPropertiesPtrInput {
	return (*inferenceContainerPropertiesPtrType)(v)
}

func (*inferenceContainerPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InferenceContainerProperties)(nil)).Elem()
}

func (i *inferenceContainerPropertiesPtrType) ToInferenceContainerPropertiesPtrOutput() InferenceContainerPropertiesPtrOutput {
	return i.ToInferenceContainerPropertiesPtrOutputWithContext(context.Background())
}

func (i *inferenceContainerPropertiesPtrType) ToInferenceContainerPropertiesPtrOutputWithContext(ctx context.Context) InferenceContainerPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InferenceContainerPropertiesPtrOutput)
}

type InferenceContainerPropertiesOutput struct{ *pulumi.OutputState }

func (InferenceContainerPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InferenceContainerProperties)(nil)).Elem()
}

func (o InferenceContainerPropertiesOutput) ToInferenceContainerPropertiesOutput() InferenceContainerPropertiesOutput {
	return o
}

func (o InferenceContainerPropertiesOutput) ToInferenceContainerPropertiesOutputWithContext(ctx context.Context) InferenceContainerPropertiesOutput {
	return o
}

func (o InferenceContainerPropertiesOutput) ToInferenceContainerPropertiesPtrOutput() InferenceContainerPropertiesPtrOutput {
	return o.ToInferenceContainerPropertiesPtrOutputWithContext(context.Background())
}

func (o InferenceContainerPropertiesOutput) ToInferenceContainerPropertiesPtrOutputWithContext(ctx context.Context) InferenceContainerPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InferenceContainerProperties) *InferenceContainerProperties {
		return &v
	}).(InferenceContainerPropertiesPtrOutput)
}

// The route to check the liveness of the inference server container.
func (o InferenceContainerPropertiesOutput) LivenessRoute() RoutePtrOutput {
	return o.ApplyT(func(v InferenceContainerProperties) *Route { return v.LivenessRoute }).(RoutePtrOutput)
}

// The route to check the readiness of the inference server container.
func (o InferenceContainerPropertiesOutput) ReadinessRoute() RoutePtrOutput {
	return o.ApplyT(func(v InferenceContainerProperties) *Route { return v.ReadinessRoute }).(RoutePtrOutput)
}

// The port to send the scoring requests to, within the inference server container.
func (o InferenceContainerPropertiesOutput) ScoringRoute() RoutePtrOutput {
	return o.ApplyT(func(v InferenceContainerProperties) *Route { return v.ScoringRoute }).(RoutePtrOutput)
}

type InferenceContainerPropertiesPtrOutput struct{ *pulumi.OutputState }

func (InferenceContainerPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InferenceContainerProperties)(nil)).Elem()
}

func (o InferenceContainerPropertiesPtrOutput) ToInferenceContainerPropertiesPtrOutput() InferenceContainerPropertiesPtrOutput {
	return o
}

func (o InferenceContainerPropertiesPtrOutput) ToInferenceContainerPropertiesPtrOutputWithContext(ctx context.Context) InferenceContainerPropertiesPtrOutput {
	return o
}

func (o InferenceContainerPropertiesPtrOutput) Elem() InferenceContainerPropertiesOutput {
	return o.ApplyT(func(v *InferenceContainerProperties) InferenceContainerProperties {
		if v != nil {
			return *v
		}
		var ret InferenceContainerProperties
		return ret
	}).(InferenceContainerPropertiesOutput)
}

// The route to check the liveness of the inference server container.
func (o InferenceContainerPropertiesPtrOutput) LivenessRoute() RoutePtrOutput {
	return o.ApplyT(func(v *InferenceContainerProperties) *Route {
		if v == nil {
			return nil
		}
		return v.LivenessRoute
	}).(RoutePtrOutput)
}

// The route to check the readiness of the inference server container.
func (o InferenceContainerPropertiesPtrOutput) ReadinessRoute() RoutePtrOutput {
	return o.ApplyT(func(v *InferenceContainerProperties) *Route {
		if v == nil {
			return nil
		}
		return v.ReadinessRoute
	}).(RoutePtrOutput)
}

// The port to send the scoring requests to, within the inference server container.
func (o InferenceContainerPropertiesPtrOutput) ScoringRoute() RoutePtrOutput {
	return o.ApplyT(func(v *InferenceContainerProperties) *Route {
		if v == nil {
			return nil
		}
		return v.ScoringRoute
	}).(RoutePtrOutput)
}

type InferenceContainerPropertiesResponse struct {
	// The route to check the liveness of the inference server container.
	LivenessRoute *RouteResponse `pulumi:"livenessRoute"`
	// The route to check the readiness of the inference server container.
	ReadinessRoute *RouteResponse `pulumi:"readinessRoute"`
	// The port to send the scoring requests to, within the inference server container.
	ScoringRoute *RouteResponse `pulumi:"scoringRoute"`
}

type InferenceContainerPropertiesResponseOutput struct{ *pulumi.OutputState }

func (InferenceContainerPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InferenceContainerPropertiesResponse)(nil)).Elem()
}

func (o InferenceContainerPropertiesResponseOutput) ToInferenceContainerPropertiesResponseOutput() InferenceContainerPropertiesResponseOutput {
	return o
}

func (o InferenceContainerPropertiesResponseOutput) ToInferenceContainerPropertiesResponseOutputWithContext(ctx context.Context) InferenceContainerPropertiesResponseOutput {
	return o
}

// The route to check the liveness of the inference server container.
func (o InferenceContainerPropertiesResponseOutput) LivenessRoute() RouteResponsePtrOutput {
	return o.ApplyT(func(v InferenceContainerPropertiesResponse) *RouteResponse { return v.LivenessRoute }).(RouteResponsePtrOutput)
}

// The route to check the readiness of the inference server container.
func (o InferenceContainerPropertiesResponseOutput) ReadinessRoute() RouteResponsePtrOutput {
	return o.ApplyT(func(v InferenceContainerPropertiesResponse) *RouteResponse { return v.ReadinessRoute }).(RouteResponsePtrOutput)
}

// The port to send the scoring requests to, within the inference server container.
func (o InferenceContainerPropertiesResponseOutput) ScoringRoute() RouteResponsePtrOutput {
	return o.ApplyT(func(v InferenceContainerPropertiesResponse) *RouteResponse { return v.ScoringRoute }).(RouteResponsePtrOutput)
}

type InferenceContainerPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (InferenceContainerPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InferenceContainerPropertiesResponse)(nil)).Elem()
}

func (o InferenceContainerPropertiesResponsePtrOutput) ToInferenceContainerPropertiesResponsePtrOutput() InferenceContainerPropertiesResponsePtrOutput {
	return o
}

func (o InferenceContainerPropertiesResponsePtrOutput) ToInferenceContainerPropertiesResponsePtrOutputWithContext(ctx context.Context) InferenceContainerPropertiesResponsePtrOutput {
	return o
}

func (o InferenceContainerPropertiesResponsePtrOutput) Elem() InferenceContainerPropertiesResponseOutput {
	return o.ApplyT(func(v *InferenceContainerPropertiesResponse) InferenceContainerPropertiesResponse {
		if v != nil {
			return *v
		}
		var ret InferenceContainerPropertiesResponse
		return ret
	}).(InferenceContainerPropertiesResponseOutput)
}

// The route to check the liveness of the inference server container.
func (o InferenceContainerPropertiesResponsePtrOutput) LivenessRoute() RouteResponsePtrOutput {
	return o.ApplyT(func(v *InferenceContainerPropertiesResponse) *RouteResponse {
		if v == nil {
			return nil
		}
		return v.LivenessRoute
	}).(RouteResponsePtrOutput)
}

// The route to check the readiness of the inference server container.
func (o InferenceContainerPropertiesResponsePtrOutput) ReadinessRoute() RouteResponsePtrOutput {
	return o.ApplyT(func(v *InferenceContainerPropertiesResponse) *RouteResponse {
		if v == nil {
			return nil
		}
		return v.ReadinessRoute
	}).(RouteResponsePtrOutput)
}

// The port to send the scoring requests to, within the inference server container.
func (o InferenceContainerPropertiesResponsePtrOutput) ScoringRoute() RouteResponsePtrOutput {
	return o.ApplyT(func(v *InferenceContainerPropertiesResponse) *RouteResponse {
		if v == nil {
			return nil
		}
		return v.ScoringRoute
	}).(RouteResponsePtrOutput)
}

type InputDataBinding struct {
	// ARM resource ID of the registered dataVersion.
	DataId *string `pulumi:"dataId"`
	// Mechanism for accessing the data artifact.
	Mode *string `pulumi:"mode"`
	// Location of data inside the container process.
	PathOnCompute *string `pulumi:"pathOnCompute"`
}

// InputDataBindingInput is an input type that accepts InputDataBindingArgs and InputDataBindingOutput values.
// You can construct a concrete instance of `InputDataBindingInput` via:
//
//	InputDataBindingArgs{...}
type InputDataBindingInput interface {
	pulumi.Input

	ToInputDataBindingOutput() InputDataBindingOutput
	ToInputDataBindingOutputWithContext(context.Context) InputDataBindingOutput
}

type InputDataBindingArgs struct {
	// ARM resource ID of the registered dataVersion.
	DataId pulumi.StringPtrInput `pulumi:"dataId"`
	// Mechanism for accessing the data artifact.
	Mode pulumi.StringPtrInput `pulumi:"mode"`
	// Location of data inside the container process.
	PathOnCompute pulumi.StringPtrInput `pulumi:"pathOnCompute"`
}

func (InputDataBindingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InputDataBinding)(nil)).Elem()
}

func (i InputDataBindingArgs) ToInputDataBindingOutput() InputDataBindingOutput {
	return i.ToInputDataBindingOutputWithContext(context.Background())
}

func (i InputDataBindingArgs) ToInputDataBindingOutputWithContext(ctx context.Context) InputDataBindingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InputDataBindingOutput)
}

// InputDataBindingMapInput is an input type that accepts InputDataBindingMap and InputDataBindingMapOutput values.
// You can construct a concrete instance of `InputDataBindingMapInput` via:
//
//	InputDataBindingMap{ "key": InputDataBindingArgs{...} }
type InputDataBindingMapInput interface {
	pulumi.Input

	ToInputDataBindingMapOutput() InputDataBindingMapOutput
	ToInputDataBindingMapOutputWithContext(context.Context) InputDataBindingMapOutput
}

type InputDataBindingMap map[string]InputDataBindingInput

func (InputDataBindingMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]InputDataBinding)(nil)).Elem()
}

func (i InputDataBindingMap) ToInputDataBindingMapOutput() InputDataBindingMapOutput {
	return i.ToInputDataBindingMapOutputWithContext(context.Background())
}

func (i InputDataBindingMap) ToInputDataBindingMapOutputWithContext(ctx context.Context) InputDataBindingMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InputDataBindingMapOutput)
}

type InputDataBindingOutput struct{ *pulumi.OutputState }

func (InputDataBindingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InputDataBinding)(nil)).Elem()
}

func (o InputDataBindingOutput) ToInputDataBindingOutput() InputDataBindingOutput {
	return o
}

func (o InputDataBindingOutput) ToInputDataBindingOutputWithContext(ctx context.Context) InputDataBindingOutput {
	return o
}

// ARM resource ID of the registered dataVersion.
func (o InputDataBindingOutput) DataId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InputDataBinding) *string { return v.DataId }).(pulumi.StringPtrOutput)
}

// Mechanism for accessing the data artifact.
func (o InputDataBindingOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InputDataBinding) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

// Location of data inside the container process.
func (o InputDataBindingOutput) PathOnCompute() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InputDataBinding) *string { return v.PathOnCompute }).(pulumi.StringPtrOutput)
}

type InputDataBindingMapOutput struct{ *pulumi.OutputState }

func (InputDataBindingMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]InputDataBinding)(nil)).Elem()
}

func (o InputDataBindingMapOutput) ToInputDataBindingMapOutput() InputDataBindingMapOutput {
	return o
}

func (o InputDataBindingMapOutput) ToInputDataBindingMapOutputWithContext(ctx context.Context) InputDataBindingMapOutput {
	return o
}

func (o InputDataBindingMapOutput) MapIndex(k pulumi.StringInput) InputDataBindingOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) InputDataBinding {
		return vs[0].(map[string]InputDataBinding)[vs[1].(string)]
	}).(InputDataBindingOutput)
}

type InputDataBindingResponse struct {
	// ARM resource ID of the registered dataVersion.
	DataId *string `pulumi:"dataId"`
	// Mechanism for accessing the data artifact.
	Mode *string `pulumi:"mode"`
	// Location of data inside the container process.
	PathOnCompute *string `pulumi:"pathOnCompute"`
}

type InputDataBindingResponseOutput struct{ *pulumi.OutputState }

func (InputDataBindingResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InputDataBindingResponse)(nil)).Elem()
}

func (o InputDataBindingResponseOutput) ToInputDataBindingResponseOutput() InputDataBindingResponseOutput {
	return o
}

func (o InputDataBindingResponseOutput) ToInputDataBindingResponseOutputWithContext(ctx context.Context) InputDataBindingResponseOutput {
	return o
}

// ARM resource ID of the registered dataVersion.
func (o InputDataBindingResponseOutput) DataId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InputDataBindingResponse) *string { return v.DataId }).(pulumi.StringPtrOutput)
}

// Mechanism for accessing the data artifact.
func (o InputDataBindingResponseOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InputDataBindingResponse) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

// Location of data inside the container process.
func (o InputDataBindingResponseOutput) PathOnCompute() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InputDataBindingResponse) *string { return v.PathOnCompute }).(pulumi.StringPtrOutput)
}

type InputDataBindingResponseMapOutput struct{ *pulumi.OutputState }

func (InputDataBindingResponseMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]InputDataBindingResponse)(nil)).Elem()
}

func (o InputDataBindingResponseMapOutput) ToInputDataBindingResponseMapOutput() InputDataBindingResponseMapOutput {
	return o
}

func (o InputDataBindingResponseMapOutput) ToInputDataBindingResponseMapOutputWithContext(ctx context.Context) InputDataBindingResponseMapOutput {
	return o
}

func (o InputDataBindingResponseMapOutput) MapIndex(k pulumi.StringInput) InputDataBindingResponseOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) InputDataBindingResponse {
		return vs[0].(map[string]InputDataBindingResponse)[vs[1].(string)]
	}).(InputDataBindingResponseOutput)
}

// Job endpoint definition
type JobEndpointResponse struct {
	// Url for endpoint.
	Endpoint *string `pulumi:"endpoint"`
	// Endpoint type.
	JobEndpointType *string `pulumi:"jobEndpointType"`
	// Port for endpoint.
	Port *int `pulumi:"port"`
	// Additional properties to set on the endpoint.
	Properties map[string]string `pulumi:"properties"`
}

// Job endpoint definition
type JobEndpointResponseOutput struct{ *pulumi.OutputState }

func (JobEndpointResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JobEndpointResponse)(nil)).Elem()
}

func (o JobEndpointResponseOutput) ToJobEndpointResponseOutput() JobEndpointResponseOutput {
	return o
}

func (o JobEndpointResponseOutput) ToJobEndpointResponseOutputWithContext(ctx context.Context) JobEndpointResponseOutput {
	return o
}

// Url for endpoint.
func (o JobEndpointResponseOutput) Endpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobEndpointResponse) *string { return v.Endpoint }).(pulumi.StringPtrOutput)
}

// Endpoint type.
func (o JobEndpointResponseOutput) JobEndpointType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobEndpointResponse) *string { return v.JobEndpointType }).(pulumi.StringPtrOutput)
}

// Port for endpoint.
func (o JobEndpointResponseOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v JobEndpointResponse) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// Additional properties to set on the endpoint.
func (o JobEndpointResponseOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v JobEndpointResponse) map[string]string { return v.Properties }).(pulumi.StringMapOutput)
}

type JobEndpointResponseMapOutput struct{ *pulumi.OutputState }

func (JobEndpointResponseMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]JobEndpointResponse)(nil)).Elem()
}

func (o JobEndpointResponseMapOutput) ToJobEndpointResponseMapOutput() JobEndpointResponseMapOutput {
	return o
}

func (o JobEndpointResponseMapOutput) ToJobEndpointResponseMapOutputWithContext(ctx context.Context) JobEndpointResponseMapOutput {
	return o
}

func (o JobEndpointResponseMapOutput) MapIndex(k pulumi.StringInput) JobEndpointResponseOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) JobEndpointResponse {
		return vs[0].(map[string]JobEndpointResponse)[vs[1].(string)]
	}).(JobEndpointResponseOutput)
}

// Job output definition container information on where to find job output/logs.
type JobOutputResponse struct {
	// ARM ID of the datastore where the job logs and artifacts are stored, or null for the default container ("azureml") in the workspace's storage account.
	DatastoreId string `pulumi:"datastoreId"`
	// Path within the datastore to the job logs and artifacts.
	Path string `pulumi:"path"`
}

// Job output definition container information on where to find job output/logs.
type JobOutputResponseOutput struct{ *pulumi.OutputState }

func (JobOutputResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JobOutputResponse)(nil)).Elem()
}

func (o JobOutputResponseOutput) ToJobOutputResponseOutput() JobOutputResponseOutput {
	return o
}

func (o JobOutputResponseOutput) ToJobOutputResponseOutputWithContext(ctx context.Context) JobOutputResponseOutput {
	return o
}

// ARM ID of the datastore where the job logs and artifacts are stored, or null for the default container ("azureml") in the workspace's storage account.
func (o JobOutputResponseOutput) DatastoreId() pulumi.StringOutput {
	return o.ApplyT(func(v JobOutputResponse) string { return v.DatastoreId }).(pulumi.StringOutput)
}

// Path within the datastore to the job logs and artifacts.
func (o JobOutputResponseOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v JobOutputResponse) string { return v.Path }).(pulumi.StringOutput)
}

type K8sOnlineDeployment struct {
	// If true, enables Application Insights logging.
	AppInsightsEnabled *bool `pulumi:"appInsightsEnabled"`
	// Code configuration for the endpoint deployment.
	CodeConfiguration *CodeConfiguration `pulumi:"codeConfiguration"`
	// Resource requirements for each container instance within an online deployment.
	ContainerResourceRequirements *ContainerResourceRequirements `pulumi:"containerResourceRequirements"`
	// Description of the endpoint deployment.
	Description *string `pulumi:"description"`
	// Enum to determine endpoint compute type.
	// Expected value is 'K8S'.
	EndpointComputeType string `pulumi:"endpointComputeType"`
	// ARM resource ID of the environment specification for the endpoint deployment.
	EnvironmentId *string `pulumi:"environmentId"`
	// Environment variables configuration for the deployment.
	EnvironmentVariables map[string]string `pulumi:"environmentVariables"`
	// Deployment container liveness/readiness probe configuration.
	LivenessProbe *ProbeSettings `pulumi:"livenessProbe"`
	// Reference to the model asset for the endpoint deployment.
	Model interface{} `pulumi:"model"`
	// Property dictionary. Properties can be added, but not removed or altered.
	Properties map[string]string `pulumi:"properties"`
	// Online deployment scoring requests configuration.
	RequestSettings *OnlineRequestSettings `pulumi:"requestSettings"`
	// Online deployment scaling configuration.
	ScaleSettings interface{} `pulumi:"scaleSettings"`
}

// K8sOnlineDeploymentInput is an input type that accepts K8sOnlineDeploymentArgs and K8sOnlineDeploymentOutput values.
// You can construct a concrete instance of `K8sOnlineDeploymentInput` via:
//
//	K8sOnlineDeploymentArgs{...}
type K8sOnlineDeploymentInput interface {
	pulumi.Input

	ToK8sOnlineDeploymentOutput() K8sOnlineDeploymentOutput
	ToK8sOnlineDeploymentOutputWithContext(context.Context) K8sOnlineDeploymentOutput
}

type K8sOnlineDeploymentArgs struct {
	// If true, enables Application Insights logging.
	AppInsightsEnabled pulumi.BoolPtrInput `pulumi:"appInsightsEnabled"`
	// Code configuration for the endpoint deployment.
	CodeConfiguration CodeConfigurationPtrInput `pulumi:"codeConfiguration"`
	// Resource requirements for each container instance within an online deployment.
	ContainerResourceRequirements ContainerResourceRequirementsPtrInput `pulumi:"containerResourceRequirements"`
	// Description of the endpoint deployment.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Enum to determine endpoint compute type.
	// Expected value is 'K8S'.
	EndpointComputeType pulumi.StringInput `pulumi:"endpointComputeType"`
	// ARM resource ID of the environment specification for the endpoint deployment.
	EnvironmentId pulumi.StringPtrInput `pulumi:"environmentId"`
	// Environment variables configuration for the deployment.
	EnvironmentVariables pulumi.StringMapInput `pulumi:"environmentVariables"`
	// Deployment container liveness/readiness probe configuration.
	LivenessProbe ProbeSettingsPtrInput `pulumi:"livenessProbe"`
	// Reference to the model asset for the endpoint deployment.
	Model pulumi.Input `pulumi:"model"`
	// Property dictionary. Properties can be added, but not removed or altered.
	Properties pulumi.StringMapInput `pulumi:"properties"`
	// Online deployment scoring requests configuration.
	RequestSettings OnlineRequestSettingsPtrInput `pulumi:"requestSettings"`
	// Online deployment scaling configuration.
	ScaleSettings pulumi.Input `pulumi:"scaleSettings"`
}

func (K8sOnlineDeploymentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*K8sOnlineDeployment)(nil)).Elem()
}

func (i K8sOnlineDeploymentArgs) ToK8sOnlineDeploymentOutput() K8sOnlineDeploymentOutput {
	return i.ToK8sOnlineDeploymentOutputWithContext(context.Background())
}

func (i K8sOnlineDeploymentArgs) ToK8sOnlineDeploymentOutputWithContext(ctx context.Context) K8sOnlineDeploymentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(K8sOnlineDeploymentOutput)
}

type K8sOnlineDeploymentOutput struct{ *pulumi.OutputState }

func (K8sOnlineDeploymentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*K8sOnlineDeployment)(nil)).Elem()
}

func (o K8sOnlineDeploymentOutput) ToK8sOnlineDeploymentOutput() K8sOnlineDeploymentOutput {
	return o
}

func (o K8sOnlineDeploymentOutput) ToK8sOnlineDeploymentOutputWithContext(ctx context.Context) K8sOnlineDeploymentOutput {
	return o
}

// If true, enables Application Insights logging.
func (o K8sOnlineDeploymentOutput) AppInsightsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v K8sOnlineDeployment) *bool { return v.AppInsightsEnabled }).(pulumi.BoolPtrOutput)
}

// Code configuration for the endpoint deployment.
func (o K8sOnlineDeploymentOutput) CodeConfiguration() CodeConfigurationPtrOutput {
	return o.ApplyT(func(v K8sOnlineDeployment) *CodeConfiguration { return v.CodeConfiguration }).(CodeConfigurationPtrOutput)
}

// Resource requirements for each container instance within an online deployment.
func (o K8sOnlineDeploymentOutput) ContainerResourceRequirements() ContainerResourceRequirementsPtrOutput {
	return o.ApplyT(func(v K8sOnlineDeployment) *ContainerResourceRequirements { return v.ContainerResourceRequirements }).(ContainerResourceRequirementsPtrOutput)
}

// Description of the endpoint deployment.
func (o K8sOnlineDeploymentOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v K8sOnlineDeployment) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Enum to determine endpoint compute type.
// Expected value is 'K8S'.
func (o K8sOnlineDeploymentOutput) EndpointComputeType() pulumi.StringOutput {
	return o.ApplyT(func(v K8sOnlineDeployment) string { return v.EndpointComputeType }).(pulumi.StringOutput)
}

// ARM resource ID of the environment specification for the endpoint deployment.
func (o K8sOnlineDeploymentOutput) EnvironmentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v K8sOnlineDeployment) *string { return v.EnvironmentId }).(pulumi.StringPtrOutput)
}

// Environment variables configuration for the deployment.
func (o K8sOnlineDeploymentOutput) EnvironmentVariables() pulumi.StringMapOutput {
	return o.ApplyT(func(v K8sOnlineDeployment) map[string]string { return v.EnvironmentVariables }).(pulumi.StringMapOutput)
}

// Deployment container liveness/readiness probe configuration.
func (o K8sOnlineDeploymentOutput) LivenessProbe() ProbeSettingsPtrOutput {
	return o.ApplyT(func(v K8sOnlineDeployment) *ProbeSettings { return v.LivenessProbe }).(ProbeSettingsPtrOutput)
}

// Reference to the model asset for the endpoint deployment.
func (o K8sOnlineDeploymentOutput) Model() pulumi.AnyOutput {
	return o.ApplyT(func(v K8sOnlineDeployment) interface{} { return v.Model }).(pulumi.AnyOutput)
}

// Property dictionary. Properties can be added, but not removed or altered.
func (o K8sOnlineDeploymentOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v K8sOnlineDeployment) map[string]string { return v.Properties }).(pulumi.StringMapOutput)
}

// Online deployment scoring requests configuration.
func (o K8sOnlineDeploymentOutput) RequestSettings() OnlineRequestSettingsPtrOutput {
	return o.ApplyT(func(v K8sOnlineDeployment) *OnlineRequestSettings { return v.RequestSettings }).(OnlineRequestSettingsPtrOutput)
}

// Online deployment scaling configuration.
func (o K8sOnlineDeploymentOutput) ScaleSettings() pulumi.AnyOutput {
	return o.ApplyT(func(v K8sOnlineDeployment) interface{} { return v.ScaleSettings }).(pulumi.AnyOutput)
}

type K8sOnlineDeploymentResponse struct {
	// If true, enables Application Insights logging.
	AppInsightsEnabled *bool `pulumi:"appInsightsEnabled"`
	// Code configuration for the endpoint deployment.
	CodeConfiguration *CodeConfigurationResponse `pulumi:"codeConfiguration"`
	// Resource requirements for each container instance within an online deployment.
	ContainerResourceRequirements *ContainerResourceRequirementsResponse `pulumi:"containerResourceRequirements"`
	// Description of the endpoint deployment.
	Description *string `pulumi:"description"`
	// Enum to determine endpoint compute type.
	// Expected value is 'K8S'.
	EndpointComputeType string `pulumi:"endpointComputeType"`
	// ARM resource ID of the environment specification for the endpoint deployment.
	EnvironmentId *string `pulumi:"environmentId"`
	// Environment variables configuration for the deployment.
	EnvironmentVariables map[string]string `pulumi:"environmentVariables"`
	// Deployment container liveness/readiness probe configuration.
	LivenessProbe *ProbeSettingsResponse `pulumi:"livenessProbe"`
	// Reference to the model asset for the endpoint deployment.
	Model interface{} `pulumi:"model"`
	// Property dictionary. Properties can be added, but not removed or altered.
	Properties map[string]string `pulumi:"properties"`
	// Provisioning state for the endpoint deployment.
	ProvisioningState string `pulumi:"provisioningState"`
	// Online deployment scoring requests configuration.
	RequestSettings *OnlineRequestSettingsResponse `pulumi:"requestSettings"`
	// Online deployment scaling configuration.
	ScaleSettings interface{} `pulumi:"scaleSettings"`
}

type K8sOnlineDeploymentResponseOutput struct{ *pulumi.OutputState }

func (K8sOnlineDeploymentResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*K8sOnlineDeploymentResponse)(nil)).Elem()
}

func (o K8sOnlineDeploymentResponseOutput) ToK8sOnlineDeploymentResponseOutput() K8sOnlineDeploymentResponseOutput {
	return o
}

func (o K8sOnlineDeploymentResponseOutput) ToK8sOnlineDeploymentResponseOutputWithContext(ctx context.Context) K8sOnlineDeploymentResponseOutput {
	return o
}

// If true, enables Application Insights logging.
func (o K8sOnlineDeploymentResponseOutput) AppInsightsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v K8sOnlineDeploymentResponse) *bool { return v.AppInsightsEnabled }).(pulumi.BoolPtrOutput)
}

// Code configuration for the endpoint deployment.
func (o K8sOnlineDeploymentResponseOutput) CodeConfiguration() CodeConfigurationResponsePtrOutput {
	return o.ApplyT(func(v K8sOnlineDeploymentResponse) *CodeConfigurationResponse { return v.CodeConfiguration }).(CodeConfigurationResponsePtrOutput)
}

// Resource requirements for each container instance within an online deployment.
func (o K8sOnlineDeploymentResponseOutput) ContainerResourceRequirements() ContainerResourceRequirementsResponsePtrOutput {
	return o.ApplyT(func(v K8sOnlineDeploymentResponse) *ContainerResourceRequirementsResponse {
		return v.ContainerResourceRequirements
	}).(ContainerResourceRequirementsResponsePtrOutput)
}

// Description of the endpoint deployment.
func (o K8sOnlineDeploymentResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v K8sOnlineDeploymentResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Enum to determine endpoint compute type.
// Expected value is 'K8S'.
func (o K8sOnlineDeploymentResponseOutput) EndpointComputeType() pulumi.StringOutput {
	return o.ApplyT(func(v K8sOnlineDeploymentResponse) string { return v.EndpointComputeType }).(pulumi.StringOutput)
}

// ARM resource ID of the environment specification for the endpoint deployment.
func (o K8sOnlineDeploymentResponseOutput) EnvironmentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v K8sOnlineDeploymentResponse) *string { return v.EnvironmentId }).(pulumi.StringPtrOutput)
}

// Environment variables configuration for the deployment.
func (o K8sOnlineDeploymentResponseOutput) EnvironmentVariables() pulumi.StringMapOutput {
	return o.ApplyT(func(v K8sOnlineDeploymentResponse) map[string]string { return v.EnvironmentVariables }).(pulumi.StringMapOutput)
}

// Deployment container liveness/readiness probe configuration.
func (o K8sOnlineDeploymentResponseOutput) LivenessProbe() ProbeSettingsResponsePtrOutput {
	return o.ApplyT(func(v K8sOnlineDeploymentResponse) *ProbeSettingsResponse { return v.LivenessProbe }).(ProbeSettingsResponsePtrOutput)
}

// Reference to the model asset for the endpoint deployment.
func (o K8sOnlineDeploymentResponseOutput) Model() pulumi.AnyOutput {
	return o.ApplyT(func(v K8sOnlineDeploymentResponse) interface{} { return v.Model }).(pulumi.AnyOutput)
}

// Property dictionary. Properties can be added, but not removed or altered.
func (o K8sOnlineDeploymentResponseOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v K8sOnlineDeploymentResponse) map[string]string { return v.Properties }).(pulumi.StringMapOutput)
}

// Provisioning state for the endpoint deployment.
func (o K8sOnlineDeploymentResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v K8sOnlineDeploymentResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Online deployment scoring requests configuration.
func (o K8sOnlineDeploymentResponseOutput) RequestSettings() OnlineRequestSettingsResponsePtrOutput {
	return o.ApplyT(func(v K8sOnlineDeploymentResponse) *OnlineRequestSettingsResponse { return v.RequestSettings }).(OnlineRequestSettingsResponsePtrOutput)
}

// Online deployment scaling configuration.
func (o K8sOnlineDeploymentResponseOutput) ScaleSettings() pulumi.AnyOutput {
	return o.ApplyT(func(v K8sOnlineDeploymentResponse) interface{} { return v.ScaleSettings }).(pulumi.AnyOutput)
}

// Label category definition
type LabelCategory struct {
	// Indicates whether it is allowed to select multiple classes in this category.
	AllowMultiSelect *bool `pulumi:"allowMultiSelect"`
	// Dictionary of label classes in this category.
	Classes map[string]LabelClass `pulumi:"classes"`
	// Display name of the label category.
	DisplayName *string `pulumi:"displayName"`
}

// LabelCategoryInput is an input type that accepts LabelCategoryArgs and LabelCategoryOutput values.
// You can construct a concrete instance of `LabelCategoryInput` via:
//
//	LabelCategoryArgs{...}
type LabelCategoryInput interface {
	pulumi.Input

	ToLabelCategoryOutput() LabelCategoryOutput
	ToLabelCategoryOutputWithContext(context.Context) LabelCategoryOutput
}

// Label category definition
type LabelCategoryArgs struct {
	// Indicates whether it is allowed to select multiple classes in this category.
	AllowMultiSelect pulumi.BoolPtrInput `pulumi:"allowMultiSelect"`
	// Dictionary of label classes in this category.
	Classes LabelClassMapInput `pulumi:"classes"`
	// Display name of the label category.
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
}

func (LabelCategoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LabelCategory)(nil)).Elem()
}

func (i LabelCategoryArgs) ToLabelCategoryOutput() LabelCategoryOutput {
	return i.ToLabelCategoryOutputWithContext(context.Background())
}

func (i LabelCategoryArgs) ToLabelCategoryOutputWithContext(ctx context.Context) LabelCategoryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LabelCategoryOutput)
}

// LabelCategoryMapInput is an input type that accepts LabelCategoryMap and LabelCategoryMapOutput values.
// You can construct a concrete instance of `LabelCategoryMapInput` via:
//
//	LabelCategoryMap{ "key": LabelCategoryArgs{...} }
type LabelCategoryMapInput interface {
	pulumi.Input

	ToLabelCategoryMapOutput() LabelCategoryMapOutput
	ToLabelCategoryMapOutputWithContext(context.Context) LabelCategoryMapOutput
}

type LabelCategoryMap map[string]LabelCategoryInput

func (LabelCategoryMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]LabelCategory)(nil)).Elem()
}

func (i LabelCategoryMap) ToLabelCategoryMapOutput() LabelCategoryMapOutput {
	return i.ToLabelCategoryMapOutputWithContext(context.Background())
}

func (i LabelCategoryMap) ToLabelCategoryMapOutputWithContext(ctx context.Context) LabelCategoryMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LabelCategoryMapOutput)
}

// Label category definition
type LabelCategoryOutput struct{ *pulumi.OutputState }

func (LabelCategoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LabelCategory)(nil)).Elem()
}

func (o LabelCategoryOutput) ToLabelCategoryOutput() LabelCategoryOutput {
	return o
}

func (o LabelCategoryOutput) ToLabelCategoryOutputWithContext(ctx context.Context) LabelCategoryOutput {
	return o
}

// Indicates whether it is allowed to select multiple classes in this category.
func (o LabelCategoryOutput) AllowMultiSelect() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LabelCategory) *bool { return v.AllowMultiSelect }).(pulumi.BoolPtrOutput)
}

// Dictionary of label classes in this category.
func (o LabelCategoryOutput) Classes() LabelClassMapOutput {
	return o.ApplyT(func(v LabelCategory) map[string]LabelClass { return v.Classes }).(LabelClassMapOutput)
}

// Display name of the label category.
func (o LabelCategoryOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LabelCategory) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

type LabelCategoryMapOutput struct{ *pulumi.OutputState }

func (LabelCategoryMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]LabelCategory)(nil)).Elem()
}

func (o LabelCategoryMapOutput) ToLabelCategoryMapOutput() LabelCategoryMapOutput {
	return o
}

func (o LabelCategoryMapOutput) ToLabelCategoryMapOutputWithContext(ctx context.Context) LabelCategoryMapOutput {
	return o
}

func (o LabelCategoryMapOutput) MapIndex(k pulumi.StringInput) LabelCategoryOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) LabelCategory {
		return vs[0].(map[string]LabelCategory)[vs[1].(string)]
	}).(LabelCategoryOutput)
}

// Label category definition
type LabelCategoryResponse struct {
	// Indicates whether it is allowed to select multiple classes in this category.
	AllowMultiSelect *bool `pulumi:"allowMultiSelect"`
	// Dictionary of label classes in this category.
	Classes map[string]LabelClassResponse `pulumi:"classes"`
	// Display name of the label category.
	DisplayName *string `pulumi:"displayName"`
}

// Label category definition
type LabelCategoryResponseOutput struct{ *pulumi.OutputState }

func (LabelCategoryResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LabelCategoryResponse)(nil)).Elem()
}

func (o LabelCategoryResponseOutput) ToLabelCategoryResponseOutput() LabelCategoryResponseOutput {
	return o
}

func (o LabelCategoryResponseOutput) ToLabelCategoryResponseOutputWithContext(ctx context.Context) LabelCategoryResponseOutput {
	return o
}

// Indicates whether it is allowed to select multiple classes in this category.
func (o LabelCategoryResponseOutput) AllowMultiSelect() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LabelCategoryResponse) *bool { return v.AllowMultiSelect }).(pulumi.BoolPtrOutput)
}

// Dictionary of label classes in this category.
func (o LabelCategoryResponseOutput) Classes() LabelClassResponseMapOutput {
	return o.ApplyT(func(v LabelCategoryResponse) map[string]LabelClassResponse { return v.Classes }).(LabelClassResponseMapOutput)
}

// Display name of the label category.
func (o LabelCategoryResponseOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LabelCategoryResponse) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

type LabelCategoryResponseMapOutput struct{ *pulumi.OutputState }

func (LabelCategoryResponseMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]LabelCategoryResponse)(nil)).Elem()
}

func (o LabelCategoryResponseMapOutput) ToLabelCategoryResponseMapOutput() LabelCategoryResponseMapOutput {
	return o
}

func (o LabelCategoryResponseMapOutput) ToLabelCategoryResponseMapOutputWithContext(ctx context.Context) LabelCategoryResponseMapOutput {
	return o
}

func (o LabelCategoryResponseMapOutput) MapIndex(k pulumi.StringInput) LabelCategoryResponseOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) LabelCategoryResponse {
		return vs[0].(map[string]LabelCategoryResponse)[vs[1].(string)]
	}).(LabelCategoryResponseOutput)
}

// Label class definition
type LabelClass struct {
	// Display name of the label class.
	DisplayName *string `pulumi:"displayName"`
	// Dictionary of subclasses of the label class.
	Subclasses map[string]LabelClass `pulumi:"subclasses"`
}

// LabelClassInput is an input type that accepts LabelClassArgs and LabelClassOutput values.
// You can construct a concrete instance of `LabelClassInput` via:
//
//	LabelClassArgs{...}
type LabelClassInput interface {
	pulumi.Input

	ToLabelClassOutput() LabelClassOutput
	ToLabelClassOutputWithContext(context.Context) LabelClassOutput
}

// Label class definition
type LabelClassArgs struct {
	// Display name of the label class.
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	// Dictionary of subclasses of the label class.
	Subclasses LabelClassMapInput `pulumi:"subclasses"`
}

func (LabelClassArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LabelClass)(nil)).Elem()
}

func (i LabelClassArgs) ToLabelClassOutput() LabelClassOutput {
	return i.ToLabelClassOutputWithContext(context.Background())
}

func (i LabelClassArgs) ToLabelClassOutputWithContext(ctx context.Context) LabelClassOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LabelClassOutput)
}

// LabelClassMapInput is an input type that accepts LabelClassMap and LabelClassMapOutput values.
// You can construct a concrete instance of `LabelClassMapInput` via:
//
//	LabelClassMap{ "key": LabelClassArgs{...} }
type LabelClassMapInput interface {
	pulumi.Input

	ToLabelClassMapOutput() LabelClassMapOutput
	ToLabelClassMapOutputWithContext(context.Context) LabelClassMapOutput
}

type LabelClassMap map[string]LabelClassInput

func (LabelClassMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]LabelClass)(nil)).Elem()
}

func (i LabelClassMap) ToLabelClassMapOutput() LabelClassMapOutput {
	return i.ToLabelClassMapOutputWithContext(context.Background())
}

func (i LabelClassMap) ToLabelClassMapOutputWithContext(ctx context.Context) LabelClassMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LabelClassMapOutput)
}

// Label class definition
type LabelClassOutput struct{ *pulumi.OutputState }

func (LabelClassOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LabelClass)(nil)).Elem()
}

func (o LabelClassOutput) ToLabelClassOutput() LabelClassOutput {
	return o
}

func (o LabelClassOutput) ToLabelClassOutputWithContext(ctx context.Context) LabelClassOutput {
	return o
}

// Display name of the label class.
func (o LabelClassOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LabelClass) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// Dictionary of subclasses of the label class.
func (o LabelClassOutput) Subclasses() LabelClassMapOutput {
	return o.ApplyT(func(v LabelClass) map[string]LabelClass { return v.Subclasses }).(LabelClassMapOutput)
}

type LabelClassMapOutput struct{ *pulumi.OutputState }

func (LabelClassMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]LabelClass)(nil)).Elem()
}

func (o LabelClassMapOutput) ToLabelClassMapOutput() LabelClassMapOutput {
	return o
}

func (o LabelClassMapOutput) ToLabelClassMapOutputWithContext(ctx context.Context) LabelClassMapOutput {
	return o
}

func (o LabelClassMapOutput) MapIndex(k pulumi.StringInput) LabelClassOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) LabelClass {
		return vs[0].(map[string]LabelClass)[vs[1].(string)]
	}).(LabelClassOutput)
}

// Label class definition
type LabelClassResponse struct {
	// Display name of the label class.
	DisplayName *string `pulumi:"displayName"`
	// Dictionary of subclasses of the label class.
	Subclasses map[string]LabelClassResponse `pulumi:"subclasses"`
}

// Label class definition
type LabelClassResponseOutput struct{ *pulumi.OutputState }

func (LabelClassResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LabelClassResponse)(nil)).Elem()
}

func (o LabelClassResponseOutput) ToLabelClassResponseOutput() LabelClassResponseOutput {
	return o
}

func (o LabelClassResponseOutput) ToLabelClassResponseOutputWithContext(ctx context.Context) LabelClassResponseOutput {
	return o
}

// Display name of the label class.
func (o LabelClassResponseOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LabelClassResponse) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// Dictionary of subclasses of the label class.
func (o LabelClassResponseOutput) Subclasses() LabelClassResponseMapOutput {
	return o.ApplyT(func(v LabelClassResponse) map[string]LabelClassResponse { return v.Subclasses }).(LabelClassResponseMapOutput)
}

type LabelClassResponseMapOutput struct{ *pulumi.OutputState }

func (LabelClassResponseMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]LabelClassResponse)(nil)).Elem()
}

func (o LabelClassResponseMapOutput) ToLabelClassResponseMapOutput() LabelClassResponseMapOutput {
	return o
}

func (o LabelClassResponseMapOutput) ToLabelClassResponseMapOutputWithContext(ctx context.Context) LabelClassResponseMapOutput {
	return o
}

func (o LabelClassResponseMapOutput) MapIndex(k pulumi.StringInput) LabelClassResponseOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) LabelClassResponse {
		return vs[0].(map[string]LabelClassResponse)[vs[1].(string)]
	}).(LabelClassResponseOutput)
}

// Labeling dataset configuration definition
type LabelingDatasetConfiguration struct {
	// Name of the data asset to perform labeling.
	AssetName *string `pulumi:"assetName"`
	// AML dataset version.
	DatasetVersion *string `pulumi:"datasetVersion"`
	// Indicates whether to enable incremental dataset refresh.
	IncrementalDatasetRefreshEnabled *bool `pulumi:"incrementalDatasetRefreshEnabled"`
}

// LabelingDatasetConfigurationInput is an input type that accepts LabelingDatasetConfigurationArgs and LabelingDatasetConfigurationOutput values.
// You can construct a concrete instance of `LabelingDatasetConfigurationInput` via:
//
//	LabelingDatasetConfigurationArgs{...}
type LabelingDatasetConfigurationInput interface {
	pulumi.Input

	ToLabelingDatasetConfigurationOutput() LabelingDatasetConfigurationOutput
	ToLabelingDatasetConfigurationOutputWithContext(context.Context) LabelingDatasetConfigurationOutput
}

// Labeling dataset configuration definition
type LabelingDatasetConfigurationArgs struct {
	// Name of the data asset to perform labeling.
	AssetName pulumi.StringPtrInput `pulumi:"assetName"`
	// AML dataset version.
	DatasetVersion pulumi.StringPtrInput `pulumi:"datasetVersion"`
	// Indicates whether to enable incremental dataset refresh.
	IncrementalDatasetRefreshEnabled pulumi.BoolPtrInput `pulumi:"incrementalDatasetRefreshEnabled"`
}

func (LabelingDatasetConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LabelingDatasetConfiguration)(nil)).Elem()
}

func (i LabelingDatasetConfigurationArgs) ToLabelingDatasetConfigurationOutput() LabelingDatasetConfigurationOutput {
	return i.ToLabelingDatasetConfigurationOutputWithContext(context.Background())
}

func (i LabelingDatasetConfigurationArgs) ToLabelingDatasetConfigurationOutputWithContext(ctx context.Context) LabelingDatasetConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LabelingDatasetConfigurationOutput)
}

func (i LabelingDatasetConfigurationArgs) ToLabelingDatasetConfigurationPtrOutput() LabelingDatasetConfigurationPtrOutput {
	return i.ToLabelingDatasetConfigurationPtrOutputWithContext(context.Background())
}

func (i LabelingDatasetConfigurationArgs) ToLabelingDatasetConfigurationPtrOutputWithContext(ctx context.Context) LabelingDatasetConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LabelingDatasetConfigurationOutput).ToLabelingDatasetConfigurationPtrOutputWithContext(ctx)
}

// LabelingDatasetConfigurationPtrInput is an input type that accepts LabelingDatasetConfigurationArgs, LabelingDatasetConfigurationPtr and LabelingDatasetConfigurationPtrOutput values.
// You can construct a concrete instance of `LabelingDatasetConfigurationPtrInput` via:
//
//	        LabelingDatasetConfigurationArgs{...}
//
//	or:
//
//	        nil
type LabelingDatasetConfigurationPtrInput interface {
	pulumi.Input

	ToLabelingDatasetConfigurationPtrOutput() LabelingDatasetConfigurationPtrOutput
	ToLabelingDatasetConfigurationPtrOutputWithContext(context.Context) LabelingDatasetConfigurationPtrOutput
}

type labelingDatasetConfigurationPtrType LabelingDatasetConfigurationArgs

func LabelingDatasetConfigurationPtr(v *LabelingDatasetConfigurationArgs) LabelingDatasetConfigurationPtrInput {
	return (*labelingDatasetConfigurationPtrType)(v)
}

func (*labelingDatasetConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LabelingDatasetConfiguration)(nil)).Elem()
}

func (i *labelingDatasetConfigurationPtrType) ToLabelingDatasetConfigurationPtrOutput() LabelingDatasetConfigurationPtrOutput {
	return i.ToLabelingDatasetConfigurationPtrOutputWithContext(context.Background())
}

func (i *labelingDatasetConfigurationPtrType) ToLabelingDatasetConfigurationPtrOutputWithContext(ctx context.Context) LabelingDatasetConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LabelingDatasetConfigurationPtrOutput)
}

// Labeling dataset configuration definition
type LabelingDatasetConfigurationOutput struct{ *pulumi.OutputState }

func (LabelingDatasetConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LabelingDatasetConfiguration)(nil)).Elem()
}

func (o LabelingDatasetConfigurationOutput) ToLabelingDatasetConfigurationOutput() LabelingDatasetConfigurationOutput {
	return o
}

func (o LabelingDatasetConfigurationOutput) ToLabelingDatasetConfigurationOutputWithContext(ctx context.Context) LabelingDatasetConfigurationOutput {
	return o
}

func (o LabelingDatasetConfigurationOutput) ToLabelingDatasetConfigurationPtrOutput() LabelingDatasetConfigurationPtrOutput {
	return o.ToLabelingDatasetConfigurationPtrOutputWithContext(context.Background())
}

func (o LabelingDatasetConfigurationOutput) ToLabelingDatasetConfigurationPtrOutputWithContext(ctx context.Context) LabelingDatasetConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LabelingDatasetConfiguration) *LabelingDatasetConfiguration {
		return &v
	}).(LabelingDatasetConfigurationPtrOutput)
}

// Name of the data asset to perform labeling.
func (o LabelingDatasetConfigurationOutput) AssetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LabelingDatasetConfiguration) *string { return v.AssetName }).(pulumi.StringPtrOutput)
}

// AML dataset version.
func (o LabelingDatasetConfigurationOutput) DatasetVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LabelingDatasetConfiguration) *string { return v.DatasetVersion }).(pulumi.StringPtrOutput)
}

// Indicates whether to enable incremental dataset refresh.
func (o LabelingDatasetConfigurationOutput) IncrementalDatasetRefreshEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LabelingDatasetConfiguration) *bool { return v.IncrementalDatasetRefreshEnabled }).(pulumi.BoolPtrOutput)
}

type LabelingDatasetConfigurationPtrOutput struct{ *pulumi.OutputState }

func (LabelingDatasetConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LabelingDatasetConfiguration)(nil)).Elem()
}

func (o LabelingDatasetConfigurationPtrOutput) ToLabelingDatasetConfigurationPtrOutput() LabelingDatasetConfigurationPtrOutput {
	return o
}

func (o LabelingDatasetConfigurationPtrOutput) ToLabelingDatasetConfigurationPtrOutputWithContext(ctx context.Context) LabelingDatasetConfigurationPtrOutput {
	return o
}

func (o LabelingDatasetConfigurationPtrOutput) Elem() LabelingDatasetConfigurationOutput {
	return o.ApplyT(func(v *LabelingDatasetConfiguration) LabelingDatasetConfiguration {
		if v != nil {
			return *v
		}
		var ret LabelingDatasetConfiguration
		return ret
	}).(LabelingDatasetConfigurationOutput)
}

// Name of the data asset to perform labeling.
func (o LabelingDatasetConfigurationPtrOutput) AssetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LabelingDatasetConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.AssetName
	}).(pulumi.StringPtrOutput)
}

// AML dataset version.
func (o LabelingDatasetConfigurationPtrOutput) DatasetVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LabelingDatasetConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.DatasetVersion
	}).(pulumi.StringPtrOutput)
}

// Indicates whether to enable incremental dataset refresh.
func (o LabelingDatasetConfigurationPtrOutput) IncrementalDatasetRefreshEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *LabelingDatasetConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.IncrementalDatasetRefreshEnabled
	}).(pulumi.BoolPtrOutput)
}

// Labeling dataset configuration definition
type LabelingDatasetConfigurationResponse struct {
	// Name of the data asset to perform labeling.
	AssetName *string `pulumi:"assetName"`
	// AML dataset version.
	DatasetVersion *string `pulumi:"datasetVersion"`
	// Indicates whether to enable incremental dataset refresh.
	IncrementalDatasetRefreshEnabled *bool `pulumi:"incrementalDatasetRefreshEnabled"`
}

// Labeling dataset configuration definition
type LabelingDatasetConfigurationResponseOutput struct{ *pulumi.OutputState }

func (LabelingDatasetConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LabelingDatasetConfigurationResponse)(nil)).Elem()
}

func (o LabelingDatasetConfigurationResponseOutput) ToLabelingDatasetConfigurationResponseOutput() LabelingDatasetConfigurationResponseOutput {
	return o
}

func (o LabelingDatasetConfigurationResponseOutput) ToLabelingDatasetConfigurationResponseOutputWithContext(ctx context.Context) LabelingDatasetConfigurationResponseOutput {
	return o
}

// Name of the data asset to perform labeling.
func (o LabelingDatasetConfigurationResponseOutput) AssetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LabelingDatasetConfigurationResponse) *string { return v.AssetName }).(pulumi.StringPtrOutput)
}

// AML dataset version.
func (o LabelingDatasetConfigurationResponseOutput) DatasetVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LabelingDatasetConfigurationResponse) *string { return v.DatasetVersion }).(pulumi.StringPtrOutput)
}

// Indicates whether to enable incremental dataset refresh.
func (o LabelingDatasetConfigurationResponseOutput) IncrementalDatasetRefreshEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LabelingDatasetConfigurationResponse) *bool { return v.IncrementalDatasetRefreshEnabled }).(pulumi.BoolPtrOutput)
}

type LabelingDatasetConfigurationResponsePtrOutput struct{ *pulumi.OutputState }

func (LabelingDatasetConfigurationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LabelingDatasetConfigurationResponse)(nil)).Elem()
}

func (o LabelingDatasetConfigurationResponsePtrOutput) ToLabelingDatasetConfigurationResponsePtrOutput() LabelingDatasetConfigurationResponsePtrOutput {
	return o
}

func (o LabelingDatasetConfigurationResponsePtrOutput) ToLabelingDatasetConfigurationResponsePtrOutputWithContext(ctx context.Context) LabelingDatasetConfigurationResponsePtrOutput {
	return o
}

func (o LabelingDatasetConfigurationResponsePtrOutput) Elem() LabelingDatasetConfigurationResponseOutput {
	return o.ApplyT(func(v *LabelingDatasetConfigurationResponse) LabelingDatasetConfigurationResponse {
		if v != nil {
			return *v
		}
		var ret LabelingDatasetConfigurationResponse
		return ret
	}).(LabelingDatasetConfigurationResponseOutput)
}

// Name of the data asset to perform labeling.
func (o LabelingDatasetConfigurationResponsePtrOutput) AssetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LabelingDatasetConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.AssetName
	}).(pulumi.StringPtrOutput)
}

// AML dataset version.
func (o LabelingDatasetConfigurationResponsePtrOutput) DatasetVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LabelingDatasetConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.DatasetVersion
	}).(pulumi.StringPtrOutput)
}

// Indicates whether to enable incremental dataset refresh.
func (o LabelingDatasetConfigurationResponsePtrOutput) IncrementalDatasetRefreshEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *LabelingDatasetConfigurationResponse) *bool {
		if v == nil {
			return nil
		}
		return v.IncrementalDatasetRefreshEnabled
	}).(pulumi.BoolPtrOutput)
}

// Labeling job definition
type LabelingJobType struct {
	// Configuration of dataset used in the job.
	DatasetConfiguration *LabelingDatasetConfiguration `pulumi:"datasetConfiguration"`
	// The asset description text.
	Description *string `pulumi:"description"`
	// Labeling instructions of the job.
	JobInstructions *LabelingJobInstructions `pulumi:"jobInstructions"`
	// [Required] Specifies the type of job. This field should always be set to "Labeling".
	JobType string `pulumi:"jobType"`
	// Label categories of the job.
	LabelCategories map[string]LabelCategory `pulumi:"labelCategories"`
	// Media type specific properties in the job.
	LabelingJobMediaProperties interface{} `pulumi:"labelingJobMediaProperties"`
	// Configuration of MLAssist feature in the job.
	MlAssistConfiguration *MLAssistConfiguration `pulumi:"mlAssistConfiguration"`
	// The asset property dictionary.
	Properties map[string]string `pulumi:"properties"`
	// Tag dictionary. Tags can be added, removed, and updated.
	Tags map[string]string `pulumi:"tags"`
}

// LabelingJobTypeInput is an input type that accepts LabelingJobTypeArgs and LabelingJobTypeOutput values.
// You can construct a concrete instance of `LabelingJobTypeInput` via:
//
//	LabelingJobTypeArgs{...}
type LabelingJobTypeInput interface {
	pulumi.Input

	ToLabelingJobTypeOutput() LabelingJobTypeOutput
	ToLabelingJobTypeOutputWithContext(context.Context) LabelingJobTypeOutput
}

// Labeling job definition
type LabelingJobTypeArgs struct {
	// Configuration of dataset used in the job.
	DatasetConfiguration LabelingDatasetConfigurationPtrInput `pulumi:"datasetConfiguration"`
	// The asset description text.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Labeling instructions of the job.
	JobInstructions LabelingJobInstructionsPtrInput `pulumi:"jobInstructions"`
	// [Required] Specifies the type of job. This field should always be set to "Labeling".
	JobType pulumi.StringInput `pulumi:"jobType"`
	// Label categories of the job.
	LabelCategories LabelCategoryMapInput `pulumi:"labelCategories"`
	// Media type specific properties in the job.
	LabelingJobMediaProperties pulumi.Input `pulumi:"labelingJobMediaProperties"`
	// Configuration of MLAssist feature in the job.
	MlAssistConfiguration MLAssistConfigurationPtrInput `pulumi:"mlAssistConfiguration"`
	// The asset property dictionary.
	Properties pulumi.StringMapInput `pulumi:"properties"`
	// Tag dictionary. Tags can be added, removed, and updated.
	Tags pulumi.StringMapInput `pulumi:"tags"`
}

func (LabelingJobTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LabelingJobType)(nil)).Elem()
}

func (i LabelingJobTypeArgs) ToLabelingJobTypeOutput() LabelingJobTypeOutput {
	return i.ToLabelingJobTypeOutputWithContext(context.Background())
}

func (i LabelingJobTypeArgs) ToLabelingJobTypeOutputWithContext(ctx context.Context) LabelingJobTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LabelingJobTypeOutput)
}

// Labeling job definition
type LabelingJobTypeOutput struct{ *pulumi.OutputState }

func (LabelingJobTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LabelingJobType)(nil)).Elem()
}

func (o LabelingJobTypeOutput) ToLabelingJobTypeOutput() LabelingJobTypeOutput {
	return o
}

func (o LabelingJobTypeOutput) ToLabelingJobTypeOutputWithContext(ctx context.Context) LabelingJobTypeOutput {
	return o
}

// Configuration of dataset used in the job.
func (o LabelingJobTypeOutput) DatasetConfiguration() LabelingDatasetConfigurationPtrOutput {
	return o.ApplyT(func(v LabelingJobType) *LabelingDatasetConfiguration { return v.DatasetConfiguration }).(LabelingDatasetConfigurationPtrOutput)
}

// The asset description text.
func (o LabelingJobTypeOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LabelingJobType) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Labeling instructions of the job.
func (o LabelingJobTypeOutput) JobInstructions() LabelingJobInstructionsPtrOutput {
	return o.ApplyT(func(v LabelingJobType) *LabelingJobInstructions { return v.JobInstructions }).(LabelingJobInstructionsPtrOutput)
}

// [Required] Specifies the type of job. This field should always be set to "Labeling".
func (o LabelingJobTypeOutput) JobType() pulumi.StringOutput {
	return o.ApplyT(func(v LabelingJobType) string { return v.JobType }).(pulumi.StringOutput)
}

// Label categories of the job.
func (o LabelingJobTypeOutput) LabelCategories() LabelCategoryMapOutput {
	return o.ApplyT(func(v LabelingJobType) map[string]LabelCategory { return v.LabelCategories }).(LabelCategoryMapOutput)
}

// Media type specific properties in the job.
func (o LabelingJobTypeOutput) LabelingJobMediaProperties() pulumi.AnyOutput {
	return o.ApplyT(func(v LabelingJobType) interface{} { return v.LabelingJobMediaProperties }).(pulumi.AnyOutput)
}

// Configuration of MLAssist feature in the job.
func (o LabelingJobTypeOutput) MlAssistConfiguration() MLAssistConfigurationPtrOutput {
	return o.ApplyT(func(v LabelingJobType) *MLAssistConfiguration { return v.MlAssistConfiguration }).(MLAssistConfigurationPtrOutput)
}

// The asset property dictionary.
func (o LabelingJobTypeOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v LabelingJobType) map[string]string { return v.Properties }).(pulumi.StringMapOutput)
}

// Tag dictionary. Tags can be added, removed, and updated.
func (o LabelingJobTypeOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LabelingJobType) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Properties of a labeling job for image data
type LabelingJobImageProperties struct {
	// Annotation type of image labeling job.
	AnnotationType *string `pulumi:"annotationType"`
	// Media type of data asset.
	// Expected value is 'Image'.
	MediaType string `pulumi:"mediaType"`
}

// LabelingJobImagePropertiesInput is an input type that accepts LabelingJobImagePropertiesArgs and LabelingJobImagePropertiesOutput values.
// You can construct a concrete instance of `LabelingJobImagePropertiesInput` via:
//
//	LabelingJobImagePropertiesArgs{...}
type LabelingJobImagePropertiesInput interface {
	pulumi.Input

	ToLabelingJobImagePropertiesOutput() LabelingJobImagePropertiesOutput
	ToLabelingJobImagePropertiesOutputWithContext(context.Context) LabelingJobImagePropertiesOutput
}

// Properties of a labeling job for image data
type LabelingJobImagePropertiesArgs struct {
	// Annotation type of image labeling job.
	AnnotationType pulumi.StringPtrInput `pulumi:"annotationType"`
	// Media type of data asset.
	// Expected value is 'Image'.
	MediaType pulumi.StringInput `pulumi:"mediaType"`
}

func (LabelingJobImagePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LabelingJobImageProperties)(nil)).Elem()
}

func (i LabelingJobImagePropertiesArgs) ToLabelingJobImagePropertiesOutput() LabelingJobImagePropertiesOutput {
	return i.ToLabelingJobImagePropertiesOutputWithContext(context.Background())
}

func (i LabelingJobImagePropertiesArgs) ToLabelingJobImagePropertiesOutputWithContext(ctx context.Context) LabelingJobImagePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LabelingJobImagePropertiesOutput)
}

func (i LabelingJobImagePropertiesArgs) ToLabelingJobImagePropertiesPtrOutput() LabelingJobImagePropertiesPtrOutput {
	return i.ToLabelingJobImagePropertiesPtrOutputWithContext(context.Background())
}

func (i LabelingJobImagePropertiesArgs) ToLabelingJobImagePropertiesPtrOutputWithContext(ctx context.Context) LabelingJobImagePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LabelingJobImagePropertiesOutput).ToLabelingJobImagePropertiesPtrOutputWithContext(ctx)
}

// LabelingJobImagePropertiesPtrInput is an input type that accepts LabelingJobImagePropertiesArgs, LabelingJobImagePropertiesPtr and LabelingJobImagePropertiesPtrOutput values.
// You can construct a concrete instance of `LabelingJobImagePropertiesPtrInput` via:
//
//	        LabelingJobImagePropertiesArgs{...}
//
//	or:
//
//	        nil
type LabelingJobImagePropertiesPtrInput interface {
	pulumi.Input

	ToLabelingJobImagePropertiesPtrOutput() LabelingJobImagePropertiesPtrOutput
	ToLabelingJobImagePropertiesPtrOutputWithContext(context.Context) LabelingJobImagePropertiesPtrOutput
}

type labelingJobImagePropertiesPtrType LabelingJobImagePropertiesArgs

func LabelingJobImagePropertiesPtr(v *LabelingJobImagePropertiesArgs) LabelingJobImagePropertiesPtrInput {
	return (*labelingJobImagePropertiesPtrType)(v)
}

func (*labelingJobImagePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LabelingJobImageProperties)(nil)).Elem()
}

func (i *labelingJobImagePropertiesPtrType) ToLabelingJobImagePropertiesPtrOutput() LabelingJobImagePropertiesPtrOutput {
	return i.ToLabelingJobImagePropertiesPtrOutputWithContext(context.Background())
}

func (i *labelingJobImagePropertiesPtrType) ToLabelingJobImagePropertiesPtrOutputWithContext(ctx context.Context) LabelingJobImagePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LabelingJobImagePropertiesPtrOutput)
}

// Properties of a labeling job for image data
type LabelingJobImagePropertiesOutput struct{ *pulumi.OutputState }

func (LabelingJobImagePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LabelingJobImageProperties)(nil)).Elem()
}

func (o LabelingJobImagePropertiesOutput) ToLabelingJobImagePropertiesOutput() LabelingJobImagePropertiesOutput {
	return o
}

func (o LabelingJobImagePropertiesOutput) ToLabelingJobImagePropertiesOutputWithContext(ctx context.Context) LabelingJobImagePropertiesOutput {
	return o
}

func (o LabelingJobImagePropertiesOutput) ToLabelingJobImagePropertiesPtrOutput() LabelingJobImagePropertiesPtrOutput {
	return o.ToLabelingJobImagePropertiesPtrOutputWithContext(context.Background())
}

func (o LabelingJobImagePropertiesOutput) ToLabelingJobImagePropertiesPtrOutputWithContext(ctx context.Context) LabelingJobImagePropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LabelingJobImageProperties) *LabelingJobImageProperties {
		return &v
	}).(LabelingJobImagePropertiesPtrOutput)
}

// Annotation type of image labeling job.
func (o LabelingJobImagePropertiesOutput) AnnotationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LabelingJobImageProperties) *string { return v.AnnotationType }).(pulumi.StringPtrOutput)
}

// Media type of data asset.
// Expected value is 'Image'.
func (o LabelingJobImagePropertiesOutput) MediaType() pulumi.StringOutput {
	return o.ApplyT(func(v LabelingJobImageProperties) string { return v.MediaType }).(pulumi.StringOutput)
}

type LabelingJobImagePropertiesPtrOutput struct{ *pulumi.OutputState }

func (LabelingJobImagePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LabelingJobImageProperties)(nil)).Elem()
}

func (o LabelingJobImagePropertiesPtrOutput) ToLabelingJobImagePropertiesPtrOutput() LabelingJobImagePropertiesPtrOutput {
	return o
}

func (o LabelingJobImagePropertiesPtrOutput) ToLabelingJobImagePropertiesPtrOutputWithContext(ctx context.Context) LabelingJobImagePropertiesPtrOutput {
	return o
}

func (o LabelingJobImagePropertiesPtrOutput) Elem() LabelingJobImagePropertiesOutput {
	return o.ApplyT(func(v *LabelingJobImageProperties) LabelingJobImageProperties {
		if v != nil {
			return *v
		}
		var ret LabelingJobImageProperties
		return ret
	}).(LabelingJobImagePropertiesOutput)
}

// Annotation type of image labeling job.
func (o LabelingJobImagePropertiesPtrOutput) AnnotationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LabelingJobImageProperties) *string {
		if v == nil {
			return nil
		}
		return v.AnnotationType
	}).(pulumi.StringPtrOutput)
}

// Media type of data asset.
// Expected value is 'Image'.
func (o LabelingJobImagePropertiesPtrOutput) MediaType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LabelingJobImageProperties) *string {
		if v == nil {
			return nil
		}
		return &v.MediaType
	}).(pulumi.StringPtrOutput)
}

// Properties of a labeling job for image data
type LabelingJobImagePropertiesResponse struct {
	// Annotation type of image labeling job.
	AnnotationType *string `pulumi:"annotationType"`
	// Media type of data asset.
	// Expected value is 'Image'.
	MediaType string `pulumi:"mediaType"`
}

// Properties of a labeling job for image data
type LabelingJobImagePropertiesResponseOutput struct{ *pulumi.OutputState }

func (LabelingJobImagePropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LabelingJobImagePropertiesResponse)(nil)).Elem()
}

func (o LabelingJobImagePropertiesResponseOutput) ToLabelingJobImagePropertiesResponseOutput() LabelingJobImagePropertiesResponseOutput {
	return o
}

func (o LabelingJobImagePropertiesResponseOutput) ToLabelingJobImagePropertiesResponseOutputWithContext(ctx context.Context) LabelingJobImagePropertiesResponseOutput {
	return o
}

// Annotation type of image labeling job.
func (o LabelingJobImagePropertiesResponseOutput) AnnotationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LabelingJobImagePropertiesResponse) *string { return v.AnnotationType }).(pulumi.StringPtrOutput)
}

// Media type of data asset.
// Expected value is 'Image'.
func (o LabelingJobImagePropertiesResponseOutput) MediaType() pulumi.StringOutput {
	return o.ApplyT(func(v LabelingJobImagePropertiesResponse) string { return v.MediaType }).(pulumi.StringOutput)
}

type LabelingJobImagePropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (LabelingJobImagePropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LabelingJobImagePropertiesResponse)(nil)).Elem()
}

func (o LabelingJobImagePropertiesResponsePtrOutput) ToLabelingJobImagePropertiesResponsePtrOutput() LabelingJobImagePropertiesResponsePtrOutput {
	return o
}

func (o LabelingJobImagePropertiesResponsePtrOutput) ToLabelingJobImagePropertiesResponsePtrOutputWithContext(ctx context.Context) LabelingJobImagePropertiesResponsePtrOutput {
	return o
}

func (o LabelingJobImagePropertiesResponsePtrOutput) Elem() LabelingJobImagePropertiesResponseOutput {
	return o.ApplyT(func(v *LabelingJobImagePropertiesResponse) LabelingJobImagePropertiesResponse {
		if v != nil {
			return *v
		}
		var ret LabelingJobImagePropertiesResponse
		return ret
	}).(LabelingJobImagePropertiesResponseOutput)
}

// Annotation type of image labeling job.
func (o LabelingJobImagePropertiesResponsePtrOutput) AnnotationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LabelingJobImagePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.AnnotationType
	}).(pulumi.StringPtrOutput)
}

// Media type of data asset.
// Expected value is 'Image'.
func (o LabelingJobImagePropertiesResponsePtrOutput) MediaType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LabelingJobImagePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.MediaType
	}).(pulumi.StringPtrOutput)
}

// Instructions for labeling job
type LabelingJobInstructions struct {
	// The link to a page with detailed labeling instructions for labelers.
	Uri *string `pulumi:"uri"`
}

// LabelingJobInstructionsInput is an input type that accepts LabelingJobInstructionsArgs and LabelingJobInstructionsOutput values.
// You can construct a concrete instance of `LabelingJobInstructionsInput` via:
//
//	LabelingJobInstructionsArgs{...}
type LabelingJobInstructionsInput interface {
	pulumi.Input

	ToLabelingJobInstructionsOutput() LabelingJobInstructionsOutput
	ToLabelingJobInstructionsOutputWithContext(context.Context) LabelingJobInstructionsOutput
}

// Instructions for labeling job
type LabelingJobInstructionsArgs struct {
	// The link to a page with detailed labeling instructions for labelers.
	Uri pulumi.StringPtrInput `pulumi:"uri"`
}

func (LabelingJobInstructionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LabelingJobInstructions)(nil)).Elem()
}

func (i LabelingJobInstructionsArgs) ToLabelingJobInstructionsOutput() LabelingJobInstructionsOutput {
	return i.ToLabelingJobInstructionsOutputWithContext(context.Background())
}

func (i LabelingJobInstructionsArgs) ToLabelingJobInstructionsOutputWithContext(ctx context.Context) LabelingJobInstructionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LabelingJobInstructionsOutput)
}

func (i LabelingJobInstructionsArgs) ToLabelingJobInstructionsPtrOutput() LabelingJobInstructionsPtrOutput {
	return i.ToLabelingJobInstructionsPtrOutputWithContext(context.Background())
}

func (i LabelingJobInstructionsArgs) ToLabelingJobInstructionsPtrOutputWithContext(ctx context.Context) LabelingJobInstructionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LabelingJobInstructionsOutput).ToLabelingJobInstructionsPtrOutputWithContext(ctx)
}

// LabelingJobInstructionsPtrInput is an input type that accepts LabelingJobInstructionsArgs, LabelingJobInstructionsPtr and LabelingJobInstructionsPtrOutput values.
// You can construct a concrete instance of `LabelingJobInstructionsPtrInput` via:
//
//	        LabelingJobInstructionsArgs{...}
//
//	or:
//
//	        nil
type LabelingJobInstructionsPtrInput interface {
	pulumi.Input

	ToLabelingJobInstructionsPtrOutput() LabelingJobInstructionsPtrOutput
	ToLabelingJobInstructionsPtrOutputWithContext(context.Context) LabelingJobInstructionsPtrOutput
}

type labelingJobInstructionsPtrType LabelingJobInstructionsArgs

func LabelingJobInstructionsPtr(v *LabelingJobInstructionsArgs) LabelingJobInstructionsPtrInput {
	return (*labelingJobInstructionsPtrType)(v)
}

func (*labelingJobInstructionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LabelingJobInstructions)(nil)).Elem()
}

func (i *labelingJobInstructionsPtrType) ToLabelingJobInstructionsPtrOutput() LabelingJobInstructionsPtrOutput {
	return i.ToLabelingJobInstructionsPtrOutputWithContext(context.Background())
}

func (i *labelingJobInstructionsPtrType) ToLabelingJobInstructionsPtrOutputWithContext(ctx context.Context) LabelingJobInstructionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LabelingJobInstructionsPtrOutput)
}

// Instructions for labeling job
type LabelingJobInstructionsOutput struct{ *pulumi.OutputState }

func (LabelingJobInstructionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LabelingJobInstructions)(nil)).Elem()
}

func (o LabelingJobInstructionsOutput) ToLabelingJobInstructionsOutput() LabelingJobInstructionsOutput {
	return o
}

func (o LabelingJobInstructionsOutput) ToLabelingJobInstructionsOutputWithContext(ctx context.Context) LabelingJobInstructionsOutput {
	return o
}

func (o LabelingJobInstructionsOutput) ToLabelingJobInstructionsPtrOutput() LabelingJobInstructionsPtrOutput {
	return o.ToLabelingJobInstructionsPtrOutputWithContext(context.Background())
}

func (o LabelingJobInstructionsOutput) ToLabelingJobInstructionsPtrOutputWithContext(ctx context.Context) LabelingJobInstructionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LabelingJobInstructions) *LabelingJobInstructions {
		return &v
	}).(LabelingJobInstructionsPtrOutput)
}

// The link to a page with detailed labeling instructions for labelers.
func (o LabelingJobInstructionsOutput) Uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LabelingJobInstructions) *string { return v.Uri }).(pulumi.StringPtrOutput)
}

type LabelingJobInstructionsPtrOutput struct{ *pulumi.OutputState }

func (LabelingJobInstructionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LabelingJobInstructions)(nil)).Elem()
}

func (o LabelingJobInstructionsPtrOutput) ToLabelingJobInstructionsPtrOutput() LabelingJobInstructionsPtrOutput {
	return o
}

func (o LabelingJobInstructionsPtrOutput) ToLabelingJobInstructionsPtrOutputWithContext(ctx context.Context) LabelingJobInstructionsPtrOutput {
	return o
}

func (o LabelingJobInstructionsPtrOutput) Elem() LabelingJobInstructionsOutput {
	return o.ApplyT(func(v *LabelingJobInstructions) LabelingJobInstructions {
		if v != nil {
			return *v
		}
		var ret LabelingJobInstructions
		return ret
	}).(LabelingJobInstructionsOutput)
}

// The link to a page with detailed labeling instructions for labelers.
func (o LabelingJobInstructionsPtrOutput) Uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LabelingJobInstructions) *string {
		if v == nil {
			return nil
		}
		return v.Uri
	}).(pulumi.StringPtrOutput)
}

// Instructions for labeling job
type LabelingJobInstructionsResponse struct {
	// The link to a page with detailed labeling instructions for labelers.
	Uri *string `pulumi:"uri"`
}

// Instructions for labeling job
type LabelingJobInstructionsResponseOutput struct{ *pulumi.OutputState }

func (LabelingJobInstructionsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LabelingJobInstructionsResponse)(nil)).Elem()
}

func (o LabelingJobInstructionsResponseOutput) ToLabelingJobInstructionsResponseOutput() LabelingJobInstructionsResponseOutput {
	return o
}

func (o LabelingJobInstructionsResponseOutput) ToLabelingJobInstructionsResponseOutputWithContext(ctx context.Context) LabelingJobInstructionsResponseOutput {
	return o
}

// The link to a page with detailed labeling instructions for labelers.
func (o LabelingJobInstructionsResponseOutput) Uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LabelingJobInstructionsResponse) *string { return v.Uri }).(pulumi.StringPtrOutput)
}

type LabelingJobInstructionsResponsePtrOutput struct{ *pulumi.OutputState }

func (LabelingJobInstructionsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LabelingJobInstructionsResponse)(nil)).Elem()
}

func (o LabelingJobInstructionsResponsePtrOutput) ToLabelingJobInstructionsResponsePtrOutput() LabelingJobInstructionsResponsePtrOutput {
	return o
}

func (o LabelingJobInstructionsResponsePtrOutput) ToLabelingJobInstructionsResponsePtrOutputWithContext(ctx context.Context) LabelingJobInstructionsResponsePtrOutput {
	return o
}

func (o LabelingJobInstructionsResponsePtrOutput) Elem() LabelingJobInstructionsResponseOutput {
	return o.ApplyT(func(v *LabelingJobInstructionsResponse) LabelingJobInstructionsResponse {
		if v != nil {
			return *v
		}
		var ret LabelingJobInstructionsResponse
		return ret
	}).(LabelingJobInstructionsResponseOutput)
}

// The link to a page with detailed labeling instructions for labelers.
func (o LabelingJobInstructionsResponsePtrOutput) Uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LabelingJobInstructionsResponse) *string {
		if v == nil {
			return nil
		}
		return v.Uri
	}).(pulumi.StringPtrOutput)
}

// Labeling job definition
type LabelingJobResponse struct {
	// Created time of the job in UTC timezone.
	CreatedTimeUtc string `pulumi:"createdTimeUtc"`
	// Configuration of dataset used in the job.
	DatasetConfiguration *LabelingDatasetConfigurationResponse `pulumi:"datasetConfiguration"`
	// The asset description text.
	Description *string `pulumi:"description"`
	// List of JobEndpoints.
	// For local jobs, a job endpoint will have an endpoint value of FileStreamObject.
	InteractionEndpoints map[string]JobEndpointResponse `pulumi:"interactionEndpoints"`
	// Labeling instructions of the job.
	JobInstructions *LabelingJobInstructionsResponse `pulumi:"jobInstructions"`
	// [Required] Specifies the type of job. This field should always be set to "Labeling".
	JobType string `pulumi:"jobType"`
	// Label categories of the job.
	LabelCategories map[string]LabelCategoryResponse `pulumi:"labelCategories"`
	// Media type specific properties in the job.
	LabelingJobMediaProperties interface{} `pulumi:"labelingJobMediaProperties"`
	// Configuration of MLAssist feature in the job.
	MlAssistConfiguration *MLAssistConfigurationResponse `pulumi:"mlAssistConfiguration"`
	// Progress metrics of the job.
	ProgressMetrics ProgressMetricsResponse `pulumi:"progressMetrics"`
	// Internal id of the job(Previously called project).
	ProjectId string `pulumi:"projectId"`
	// The asset property dictionary.
	Properties map[string]string `pulumi:"properties"`
	// Specifies the labeling job provisioning state.
	ProvisioningState string `pulumi:"provisioningState"`
	// Status of the job.
	Status string `pulumi:"status"`
	// Status messages of the job.
	StatusMessages []StatusMessageResponse `pulumi:"statusMessages"`
	// Tag dictionary. Tags can be added, removed, and updated.
	Tags map[string]string `pulumi:"tags"`
}

// Labeling job definition
type LabelingJobResponseOutput struct{ *pulumi.OutputState }

func (LabelingJobResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LabelingJobResponse)(nil)).Elem()
}

func (o LabelingJobResponseOutput) ToLabelingJobResponseOutput() LabelingJobResponseOutput {
	return o
}

func (o LabelingJobResponseOutput) ToLabelingJobResponseOutputWithContext(ctx context.Context) LabelingJobResponseOutput {
	return o
}

// Created time of the job in UTC timezone.
func (o LabelingJobResponseOutput) CreatedTimeUtc() pulumi.StringOutput {
	return o.ApplyT(func(v LabelingJobResponse) string { return v.CreatedTimeUtc }).(pulumi.StringOutput)
}

// Configuration of dataset used in the job.
func (o LabelingJobResponseOutput) DatasetConfiguration() LabelingDatasetConfigurationResponsePtrOutput {
	return o.ApplyT(func(v LabelingJobResponse) *LabelingDatasetConfigurationResponse { return v.DatasetConfiguration }).(LabelingDatasetConfigurationResponsePtrOutput)
}

// The asset description text.
func (o LabelingJobResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LabelingJobResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// List of JobEndpoints.
// For local jobs, a job endpoint will have an endpoint value of FileStreamObject.
func (o LabelingJobResponseOutput) InteractionEndpoints() JobEndpointResponseMapOutput {
	return o.ApplyT(func(v LabelingJobResponse) map[string]JobEndpointResponse { return v.InteractionEndpoints }).(JobEndpointResponseMapOutput)
}

// Labeling instructions of the job.
func (o LabelingJobResponseOutput) JobInstructions() LabelingJobInstructionsResponsePtrOutput {
	return o.ApplyT(func(v LabelingJobResponse) *LabelingJobInstructionsResponse { return v.JobInstructions }).(LabelingJobInstructionsResponsePtrOutput)
}

// [Required] Specifies the type of job. This field should always be set to "Labeling".
func (o LabelingJobResponseOutput) JobType() pulumi.StringOutput {
	return o.ApplyT(func(v LabelingJobResponse) string { return v.JobType }).(pulumi.StringOutput)
}

// Label categories of the job.
func (o LabelingJobResponseOutput) LabelCategories() LabelCategoryResponseMapOutput {
	return o.ApplyT(func(v LabelingJobResponse) map[string]LabelCategoryResponse { return v.LabelCategories }).(LabelCategoryResponseMapOutput)
}

// Media type specific properties in the job.
func (o LabelingJobResponseOutput) LabelingJobMediaProperties() pulumi.AnyOutput {
	return o.ApplyT(func(v LabelingJobResponse) interface{} { return v.LabelingJobMediaProperties }).(pulumi.AnyOutput)
}

// Configuration of MLAssist feature in the job.
func (o LabelingJobResponseOutput) MlAssistConfiguration() MLAssistConfigurationResponsePtrOutput {
	return o.ApplyT(func(v LabelingJobResponse) *MLAssistConfigurationResponse { return v.MlAssistConfiguration }).(MLAssistConfigurationResponsePtrOutput)
}

// Progress metrics of the job.
func (o LabelingJobResponseOutput) ProgressMetrics() ProgressMetricsResponseOutput {
	return o.ApplyT(func(v LabelingJobResponse) ProgressMetricsResponse { return v.ProgressMetrics }).(ProgressMetricsResponseOutput)
}

// Internal id of the job(Previously called project).
func (o LabelingJobResponseOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v LabelingJobResponse) string { return v.ProjectId }).(pulumi.StringOutput)
}

// The asset property dictionary.
func (o LabelingJobResponseOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v LabelingJobResponse) map[string]string { return v.Properties }).(pulumi.StringMapOutput)
}

// Specifies the labeling job provisioning state.
func (o LabelingJobResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v LabelingJobResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Status of the job.
func (o LabelingJobResponseOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v LabelingJobResponse) string { return v.Status }).(pulumi.StringOutput)
}

// Status messages of the job.
func (o LabelingJobResponseOutput) StatusMessages() StatusMessageResponseArrayOutput {
	return o.ApplyT(func(v LabelingJobResponse) []StatusMessageResponse { return v.StatusMessages }).(StatusMessageResponseArrayOutput)
}

// Tag dictionary. Tags can be added, removed, and updated.
func (o LabelingJobResponseOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LabelingJobResponse) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Properties of a labeling job for text data
type LabelingJobTextProperties struct {
	// Annotation type of text labeling job.
	AnnotationType *string `pulumi:"annotationType"`
	// Media type of data asset.
	// Expected value is 'Text'.
	MediaType string `pulumi:"mediaType"`
}

// LabelingJobTextPropertiesInput is an input type that accepts LabelingJobTextPropertiesArgs and LabelingJobTextPropertiesOutput values.
// You can construct a concrete instance of `LabelingJobTextPropertiesInput` via:
//
//	LabelingJobTextPropertiesArgs{...}
type LabelingJobTextPropertiesInput interface {
	pulumi.Input

	ToLabelingJobTextPropertiesOutput() LabelingJobTextPropertiesOutput
	ToLabelingJobTextPropertiesOutputWithContext(context.Context) LabelingJobTextPropertiesOutput
}

// Properties of a labeling job for text data
type LabelingJobTextPropertiesArgs struct {
	// Annotation type of text labeling job.
	AnnotationType pulumi.StringPtrInput `pulumi:"annotationType"`
	// Media type of data asset.
	// Expected value is 'Text'.
	MediaType pulumi.StringInput `pulumi:"mediaType"`
}

func (LabelingJobTextPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LabelingJobTextProperties)(nil)).Elem()
}

func (i LabelingJobTextPropertiesArgs) ToLabelingJobTextPropertiesOutput() LabelingJobTextPropertiesOutput {
	return i.ToLabelingJobTextPropertiesOutputWithContext(context.Background())
}

func (i LabelingJobTextPropertiesArgs) ToLabelingJobTextPropertiesOutputWithContext(ctx context.Context) LabelingJobTextPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LabelingJobTextPropertiesOutput)
}

func (i LabelingJobTextPropertiesArgs) ToLabelingJobTextPropertiesPtrOutput() LabelingJobTextPropertiesPtrOutput {
	return i.ToLabelingJobTextPropertiesPtrOutputWithContext(context.Background())
}

func (i LabelingJobTextPropertiesArgs) ToLabelingJobTextPropertiesPtrOutputWithContext(ctx context.Context) LabelingJobTextPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LabelingJobTextPropertiesOutput).ToLabelingJobTextPropertiesPtrOutputWithContext(ctx)
}

// LabelingJobTextPropertiesPtrInput is an input type that accepts LabelingJobTextPropertiesArgs, LabelingJobTextPropertiesPtr and LabelingJobTextPropertiesPtrOutput values.
// You can construct a concrete instance of `LabelingJobTextPropertiesPtrInput` via:
//
//	        LabelingJobTextPropertiesArgs{...}
//
//	or:
//
//	        nil
type LabelingJobTextPropertiesPtrInput interface {
	pulumi.Input

	ToLabelingJobTextPropertiesPtrOutput() LabelingJobTextPropertiesPtrOutput
	ToLabelingJobTextPropertiesPtrOutputWithContext(context.Context) LabelingJobTextPropertiesPtrOutput
}

type labelingJobTextPropertiesPtrType LabelingJobTextPropertiesArgs

func LabelingJobTextPropertiesPtr(v *LabelingJobTextPropertiesArgs) LabelingJobTextPropertiesPtrInput {
	return (*labelingJobTextPropertiesPtrType)(v)
}

func (*labelingJobTextPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LabelingJobTextProperties)(nil)).Elem()
}

func (i *labelingJobTextPropertiesPtrType) ToLabelingJobTextPropertiesPtrOutput() LabelingJobTextPropertiesPtrOutput {
	return i.ToLabelingJobTextPropertiesPtrOutputWithContext(context.Background())
}

func (i *labelingJobTextPropertiesPtrType) ToLabelingJobTextPropertiesPtrOutputWithContext(ctx context.Context) LabelingJobTextPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LabelingJobTextPropertiesPtrOutput)
}

// Properties of a labeling job for text data
type LabelingJobTextPropertiesOutput struct{ *pulumi.OutputState }

func (LabelingJobTextPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LabelingJobTextProperties)(nil)).Elem()
}

func (o LabelingJobTextPropertiesOutput) ToLabelingJobTextPropertiesOutput() LabelingJobTextPropertiesOutput {
	return o
}

func (o LabelingJobTextPropertiesOutput) ToLabelingJobTextPropertiesOutputWithContext(ctx context.Context) LabelingJobTextPropertiesOutput {
	return o
}

func (o LabelingJobTextPropertiesOutput) ToLabelingJobTextPropertiesPtrOutput() LabelingJobTextPropertiesPtrOutput {
	return o.ToLabelingJobTextPropertiesPtrOutputWithContext(context.Background())
}

func (o LabelingJobTextPropertiesOutput) ToLabelingJobTextPropertiesPtrOutputWithContext(ctx context.Context) LabelingJobTextPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LabelingJobTextProperties) *LabelingJobTextProperties {
		return &v
	}).(LabelingJobTextPropertiesPtrOutput)
}

// Annotation type of text labeling job.
func (o LabelingJobTextPropertiesOutput) AnnotationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LabelingJobTextProperties) *string { return v.AnnotationType }).(pulumi.StringPtrOutput)
}

// Media type of data asset.
// Expected value is 'Text'.
func (o LabelingJobTextPropertiesOutput) MediaType() pulumi.StringOutput {
	return o.ApplyT(func(v LabelingJobTextProperties) string { return v.MediaType }).(pulumi.StringOutput)
}

type LabelingJobTextPropertiesPtrOutput struct{ *pulumi.OutputState }

func (LabelingJobTextPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LabelingJobTextProperties)(nil)).Elem()
}

func (o LabelingJobTextPropertiesPtrOutput) ToLabelingJobTextPropertiesPtrOutput() LabelingJobTextPropertiesPtrOutput {
	return o
}

func (o LabelingJobTextPropertiesPtrOutput) ToLabelingJobTextPropertiesPtrOutputWithContext(ctx context.Context) LabelingJobTextPropertiesPtrOutput {
	return o
}

func (o LabelingJobTextPropertiesPtrOutput) Elem() LabelingJobTextPropertiesOutput {
	return o.ApplyT(func(v *LabelingJobTextProperties) LabelingJobTextProperties {
		if v != nil {
			return *v
		}
		var ret LabelingJobTextProperties
		return ret
	}).(LabelingJobTextPropertiesOutput)
}

// Annotation type of text labeling job.
func (o LabelingJobTextPropertiesPtrOutput) AnnotationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LabelingJobTextProperties) *string {
		if v == nil {
			return nil
		}
		return v.AnnotationType
	}).(pulumi.StringPtrOutput)
}

// Media type of data asset.
// Expected value is 'Text'.
func (o LabelingJobTextPropertiesPtrOutput) MediaType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LabelingJobTextProperties) *string {
		if v == nil {
			return nil
		}
		return &v.MediaType
	}).(pulumi.StringPtrOutput)
}

// Properties of a labeling job for text data
type LabelingJobTextPropertiesResponse struct {
	// Annotation type of text labeling job.
	AnnotationType *string `pulumi:"annotationType"`
	// Media type of data asset.
	// Expected value is 'Text'.
	MediaType string `pulumi:"mediaType"`
}

// Properties of a labeling job for text data
type LabelingJobTextPropertiesResponseOutput struct{ *pulumi.OutputState }

func (LabelingJobTextPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LabelingJobTextPropertiesResponse)(nil)).Elem()
}

func (o LabelingJobTextPropertiesResponseOutput) ToLabelingJobTextPropertiesResponseOutput() LabelingJobTextPropertiesResponseOutput {
	return o
}

func (o LabelingJobTextPropertiesResponseOutput) ToLabelingJobTextPropertiesResponseOutputWithContext(ctx context.Context) LabelingJobTextPropertiesResponseOutput {
	return o
}

// Annotation type of text labeling job.
func (o LabelingJobTextPropertiesResponseOutput) AnnotationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LabelingJobTextPropertiesResponse) *string { return v.AnnotationType }).(pulumi.StringPtrOutput)
}

// Media type of data asset.
// Expected value is 'Text'.
func (o LabelingJobTextPropertiesResponseOutput) MediaType() pulumi.StringOutput {
	return o.ApplyT(func(v LabelingJobTextPropertiesResponse) string { return v.MediaType }).(pulumi.StringOutput)
}

type LabelingJobTextPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (LabelingJobTextPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LabelingJobTextPropertiesResponse)(nil)).Elem()
}

func (o LabelingJobTextPropertiesResponsePtrOutput) ToLabelingJobTextPropertiesResponsePtrOutput() LabelingJobTextPropertiesResponsePtrOutput {
	return o
}

func (o LabelingJobTextPropertiesResponsePtrOutput) ToLabelingJobTextPropertiesResponsePtrOutputWithContext(ctx context.Context) LabelingJobTextPropertiesResponsePtrOutput {
	return o
}

func (o LabelingJobTextPropertiesResponsePtrOutput) Elem() LabelingJobTextPropertiesResponseOutput {
	return o.ApplyT(func(v *LabelingJobTextPropertiesResponse) LabelingJobTextPropertiesResponse {
		if v != nil {
			return *v
		}
		var ret LabelingJobTextPropertiesResponse
		return ret
	}).(LabelingJobTextPropertiesResponseOutput)
}

// Annotation type of text labeling job.
func (o LabelingJobTextPropertiesResponsePtrOutput) AnnotationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LabelingJobTextPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.AnnotationType
	}).(pulumi.StringPtrOutput)
}

// Media type of data asset.
// Expected value is 'Text'.
func (o LabelingJobTextPropertiesResponsePtrOutput) MediaType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LabelingJobTextPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.MediaType
	}).(pulumi.StringPtrOutput)
}

// Information about a datastore origin, if linked.
type LinkedInfo struct {
	// Linked service ID.
	LinkedId *string `pulumi:"linkedId"`
	// Linked service resource name.
	LinkedResourceName *string `pulumi:"linkedResourceName"`
	// Type of the linked service.
	Origin *string `pulumi:"origin"`
}

// LinkedInfoInput is an input type that accepts LinkedInfoArgs and LinkedInfoOutput values.
// You can construct a concrete instance of `LinkedInfoInput` via:
//
//	LinkedInfoArgs{...}
type LinkedInfoInput interface {
	pulumi.Input

	ToLinkedInfoOutput() LinkedInfoOutput
	ToLinkedInfoOutputWithContext(context.Context) LinkedInfoOutput
}

// Information about a datastore origin, if linked.
type LinkedInfoArgs struct {
	// Linked service ID.
	LinkedId pulumi.StringPtrInput `pulumi:"linkedId"`
	// Linked service resource name.
	LinkedResourceName pulumi.StringPtrInput `pulumi:"linkedResourceName"`
	// Type of the linked service.
	Origin pulumi.StringPtrInput `pulumi:"origin"`
}

func (LinkedInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LinkedInfo)(nil)).Elem()
}

func (i LinkedInfoArgs) ToLinkedInfoOutput() LinkedInfoOutput {
	return i.ToLinkedInfoOutputWithContext(context.Background())
}

func (i LinkedInfoArgs) ToLinkedInfoOutputWithContext(ctx context.Context) LinkedInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinkedInfoOutput)
}

func (i LinkedInfoArgs) ToLinkedInfoPtrOutput() LinkedInfoPtrOutput {
	return i.ToLinkedInfoPtrOutputWithContext(context.Background())
}

func (i LinkedInfoArgs) ToLinkedInfoPtrOutputWithContext(ctx context.Context) LinkedInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinkedInfoOutput).ToLinkedInfoPtrOutputWithContext(ctx)
}

// LinkedInfoPtrInput is an input type that accepts LinkedInfoArgs, LinkedInfoPtr and LinkedInfoPtrOutput values.
// You can construct a concrete instance of `LinkedInfoPtrInput` via:
//
//	        LinkedInfoArgs{...}
//
//	or:
//
//	        nil
type LinkedInfoPtrInput interface {
	pulumi.Input

	ToLinkedInfoPtrOutput() LinkedInfoPtrOutput
	ToLinkedInfoPtrOutputWithContext(context.Context) LinkedInfoPtrOutput
}

type linkedInfoPtrType LinkedInfoArgs

func LinkedInfoPtr(v *LinkedInfoArgs) LinkedInfoPtrInput {
	return (*linkedInfoPtrType)(v)
}

func (*linkedInfoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LinkedInfo)(nil)).Elem()
}

func (i *linkedInfoPtrType) ToLinkedInfoPtrOutput() LinkedInfoPtrOutput {
	return i.ToLinkedInfoPtrOutputWithContext(context.Background())
}

func (i *linkedInfoPtrType) ToLinkedInfoPtrOutputWithContext(ctx context.Context) LinkedInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinkedInfoPtrOutput)
}

// Information about a datastore origin, if linked.
type LinkedInfoOutput struct{ *pulumi.OutputState }

func (LinkedInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LinkedInfo)(nil)).Elem()
}

func (o LinkedInfoOutput) ToLinkedInfoOutput() LinkedInfoOutput {
	return o
}

func (o LinkedInfoOutput) ToLinkedInfoOutputWithContext(ctx context.Context) LinkedInfoOutput {
	return o
}

func (o LinkedInfoOutput) ToLinkedInfoPtrOutput() LinkedInfoPtrOutput {
	return o.ToLinkedInfoPtrOutputWithContext(context.Background())
}

func (o LinkedInfoOutput) ToLinkedInfoPtrOutputWithContext(ctx context.Context) LinkedInfoPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LinkedInfo) *LinkedInfo {
		return &v
	}).(LinkedInfoPtrOutput)
}

// Linked service ID.
func (o LinkedInfoOutput) LinkedId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LinkedInfo) *string { return v.LinkedId }).(pulumi.StringPtrOutput)
}

// Linked service resource name.
func (o LinkedInfoOutput) LinkedResourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LinkedInfo) *string { return v.LinkedResourceName }).(pulumi.StringPtrOutput)
}

// Type of the linked service.
func (o LinkedInfoOutput) Origin() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LinkedInfo) *string { return v.Origin }).(pulumi.StringPtrOutput)
}

type LinkedInfoPtrOutput struct{ *pulumi.OutputState }

func (LinkedInfoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LinkedInfo)(nil)).Elem()
}

func (o LinkedInfoPtrOutput) ToLinkedInfoPtrOutput() LinkedInfoPtrOutput {
	return o
}

func (o LinkedInfoPtrOutput) ToLinkedInfoPtrOutputWithContext(ctx context.Context) LinkedInfoPtrOutput {
	return o
}

func (o LinkedInfoPtrOutput) Elem() LinkedInfoOutput {
	return o.ApplyT(func(v *LinkedInfo) LinkedInfo {
		if v != nil {
			return *v
		}
		var ret LinkedInfo
		return ret
	}).(LinkedInfoOutput)
}

// Linked service ID.
func (o LinkedInfoPtrOutput) LinkedId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LinkedInfo) *string {
		if v == nil {
			return nil
		}
		return v.LinkedId
	}).(pulumi.StringPtrOutput)
}

// Linked service resource name.
func (o LinkedInfoPtrOutput) LinkedResourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LinkedInfo) *string {
		if v == nil {
			return nil
		}
		return v.LinkedResourceName
	}).(pulumi.StringPtrOutput)
}

// Type of the linked service.
func (o LinkedInfoPtrOutput) Origin() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LinkedInfo) *string {
		if v == nil {
			return nil
		}
		return v.Origin
	}).(pulumi.StringPtrOutput)
}

// Information about a datastore origin, if linked.
type LinkedInfoResponse struct {
	// Linked service ID.
	LinkedId *string `pulumi:"linkedId"`
	// Linked service resource name.
	LinkedResourceName *string `pulumi:"linkedResourceName"`
	// Type of the linked service.
	Origin *string `pulumi:"origin"`
}

// Information about a datastore origin, if linked.
type LinkedInfoResponseOutput struct{ *pulumi.OutputState }

func (LinkedInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LinkedInfoResponse)(nil)).Elem()
}

func (o LinkedInfoResponseOutput) ToLinkedInfoResponseOutput() LinkedInfoResponseOutput {
	return o
}

func (o LinkedInfoResponseOutput) ToLinkedInfoResponseOutputWithContext(ctx context.Context) LinkedInfoResponseOutput {
	return o
}

// Linked service ID.
func (o LinkedInfoResponseOutput) LinkedId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LinkedInfoResponse) *string { return v.LinkedId }).(pulumi.StringPtrOutput)
}

// Linked service resource name.
func (o LinkedInfoResponseOutput) LinkedResourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LinkedInfoResponse) *string { return v.LinkedResourceName }).(pulumi.StringPtrOutput)
}

// Type of the linked service.
func (o LinkedInfoResponseOutput) Origin() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LinkedInfoResponse) *string { return v.Origin }).(pulumi.StringPtrOutput)
}

type LinkedInfoResponsePtrOutput struct{ *pulumi.OutputState }

func (LinkedInfoResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LinkedInfoResponse)(nil)).Elem()
}

func (o LinkedInfoResponsePtrOutput) ToLinkedInfoResponsePtrOutput() LinkedInfoResponsePtrOutput {
	return o
}

func (o LinkedInfoResponsePtrOutput) ToLinkedInfoResponsePtrOutputWithContext(ctx context.Context) LinkedInfoResponsePtrOutput {
	return o
}

func (o LinkedInfoResponsePtrOutput) Elem() LinkedInfoResponseOutput {
	return o.ApplyT(func(v *LinkedInfoResponse) LinkedInfoResponse {
		if v != nil {
			return *v
		}
		var ret LinkedInfoResponse
		return ret
	}).(LinkedInfoResponseOutput)
}

// Linked service ID.
func (o LinkedInfoResponsePtrOutput) LinkedId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LinkedInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.LinkedId
	}).(pulumi.StringPtrOutput)
}

// Linked service resource name.
func (o LinkedInfoResponsePtrOutput) LinkedResourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LinkedInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.LinkedResourceName
	}).(pulumi.StringPtrOutput)
}

// Type of the linked service.
func (o LinkedInfoResponsePtrOutput) Origin() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LinkedInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.Origin
	}).(pulumi.StringPtrOutput)
}

// Labeling MLAssist configuration definition
type MLAssistConfiguration struct {
	// AML compute binding used in inferencing.
	InferencingComputeBinding *ComputeConfiguration `pulumi:"inferencingComputeBinding"`
	// Indicates whether MLAssist feature is enabled.
	MlAssistEnabled *bool `pulumi:"mlAssistEnabled"`
	// AML compute binding used in training.
	TrainingComputeBinding *ComputeConfiguration `pulumi:"trainingComputeBinding"`
}

// MLAssistConfigurationInput is an input type that accepts MLAssistConfigurationArgs and MLAssistConfigurationOutput values.
// You can construct a concrete instance of `MLAssistConfigurationInput` via:
//
//	MLAssistConfigurationArgs{...}
type MLAssistConfigurationInput interface {
	pulumi.Input

	ToMLAssistConfigurationOutput() MLAssistConfigurationOutput
	ToMLAssistConfigurationOutputWithContext(context.Context) MLAssistConfigurationOutput
}

// Labeling MLAssist configuration definition
type MLAssistConfigurationArgs struct {
	// AML compute binding used in inferencing.
	InferencingComputeBinding ComputeConfigurationPtrInput `pulumi:"inferencingComputeBinding"`
	// Indicates whether MLAssist feature is enabled.
	MlAssistEnabled pulumi.BoolPtrInput `pulumi:"mlAssistEnabled"`
	// AML compute binding used in training.
	TrainingComputeBinding ComputeConfigurationPtrInput `pulumi:"trainingComputeBinding"`
}

func (MLAssistConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MLAssistConfiguration)(nil)).Elem()
}

func (i MLAssistConfigurationArgs) ToMLAssistConfigurationOutput() MLAssistConfigurationOutput {
	return i.ToMLAssistConfigurationOutputWithContext(context.Background())
}

func (i MLAssistConfigurationArgs) ToMLAssistConfigurationOutputWithContext(ctx context.Context) MLAssistConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MLAssistConfigurationOutput)
}

func (i MLAssistConfigurationArgs) ToMLAssistConfigurationPtrOutput() MLAssistConfigurationPtrOutput {
	return i.ToMLAssistConfigurationPtrOutputWithContext(context.Background())
}

func (i MLAssistConfigurationArgs) ToMLAssistConfigurationPtrOutputWithContext(ctx context.Context) MLAssistConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MLAssistConfigurationOutput).ToMLAssistConfigurationPtrOutputWithContext(ctx)
}

// MLAssistConfigurationPtrInput is an input type that accepts MLAssistConfigurationArgs, MLAssistConfigurationPtr and MLAssistConfigurationPtrOutput values.
// You can construct a concrete instance of `MLAssistConfigurationPtrInput` via:
//
//	        MLAssistConfigurationArgs{...}
//
//	or:
//
//	        nil
type MLAssistConfigurationPtrInput interface {
	pulumi.Input

	ToMLAssistConfigurationPtrOutput() MLAssistConfigurationPtrOutput
	ToMLAssistConfigurationPtrOutputWithContext(context.Context) MLAssistConfigurationPtrOutput
}

type mlassistConfigurationPtrType MLAssistConfigurationArgs

func MLAssistConfigurationPtr(v *MLAssistConfigurationArgs) MLAssistConfigurationPtrInput {
	return (*mlassistConfigurationPtrType)(v)
}

func (*mlassistConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MLAssistConfiguration)(nil)).Elem()
}

func (i *mlassistConfigurationPtrType) ToMLAssistConfigurationPtrOutput() MLAssistConfigurationPtrOutput {
	return i.ToMLAssistConfigurationPtrOutputWithContext(context.Background())
}

func (i *mlassistConfigurationPtrType) ToMLAssistConfigurationPtrOutputWithContext(ctx context.Context) MLAssistConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MLAssistConfigurationPtrOutput)
}

// Labeling MLAssist configuration definition
type MLAssistConfigurationOutput struct{ *pulumi.OutputState }

func (MLAssistConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MLAssistConfiguration)(nil)).Elem()
}

func (o MLAssistConfigurationOutput) ToMLAssistConfigurationOutput() MLAssistConfigurationOutput {
	return o
}

func (o MLAssistConfigurationOutput) ToMLAssistConfigurationOutputWithContext(ctx context.Context) MLAssistConfigurationOutput {
	return o
}

func (o MLAssistConfigurationOutput) ToMLAssistConfigurationPtrOutput() MLAssistConfigurationPtrOutput {
	return o.ToMLAssistConfigurationPtrOutputWithContext(context.Background())
}

func (o MLAssistConfigurationOutput) ToMLAssistConfigurationPtrOutputWithContext(ctx context.Context) MLAssistConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MLAssistConfiguration) *MLAssistConfiguration {
		return &v
	}).(MLAssistConfigurationPtrOutput)
}

// AML compute binding used in inferencing.
func (o MLAssistConfigurationOutput) InferencingComputeBinding() ComputeConfigurationPtrOutput {
	return o.ApplyT(func(v MLAssistConfiguration) *ComputeConfiguration { return v.InferencingComputeBinding }).(ComputeConfigurationPtrOutput)
}

// Indicates whether MLAssist feature is enabled.
func (o MLAssistConfigurationOutput) MlAssistEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MLAssistConfiguration) *bool { return v.MlAssistEnabled }).(pulumi.BoolPtrOutput)
}

// AML compute binding used in training.
func (o MLAssistConfigurationOutput) TrainingComputeBinding() ComputeConfigurationPtrOutput {
	return o.ApplyT(func(v MLAssistConfiguration) *ComputeConfiguration { return v.TrainingComputeBinding }).(ComputeConfigurationPtrOutput)
}

type MLAssistConfigurationPtrOutput struct{ *pulumi.OutputState }

func (MLAssistConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MLAssistConfiguration)(nil)).Elem()
}

func (o MLAssistConfigurationPtrOutput) ToMLAssistConfigurationPtrOutput() MLAssistConfigurationPtrOutput {
	return o
}

func (o MLAssistConfigurationPtrOutput) ToMLAssistConfigurationPtrOutputWithContext(ctx context.Context) MLAssistConfigurationPtrOutput {
	return o
}

func (o MLAssistConfigurationPtrOutput) Elem() MLAssistConfigurationOutput {
	return o.ApplyT(func(v *MLAssistConfiguration) MLAssistConfiguration {
		if v != nil {
			return *v
		}
		var ret MLAssistConfiguration
		return ret
	}).(MLAssistConfigurationOutput)
}

// AML compute binding used in inferencing.
func (o MLAssistConfigurationPtrOutput) InferencingComputeBinding() ComputeConfigurationPtrOutput {
	return o.ApplyT(func(v *MLAssistConfiguration) *ComputeConfiguration {
		if v == nil {
			return nil
		}
		return v.InferencingComputeBinding
	}).(ComputeConfigurationPtrOutput)
}

// Indicates whether MLAssist feature is enabled.
func (o MLAssistConfigurationPtrOutput) MlAssistEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MLAssistConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.MlAssistEnabled
	}).(pulumi.BoolPtrOutput)
}

// AML compute binding used in training.
func (o MLAssistConfigurationPtrOutput) TrainingComputeBinding() ComputeConfigurationPtrOutput {
	return o.ApplyT(func(v *MLAssistConfiguration) *ComputeConfiguration {
		if v == nil {
			return nil
		}
		return v.TrainingComputeBinding
	}).(ComputeConfigurationPtrOutput)
}

// Labeling MLAssist configuration definition
type MLAssistConfigurationResponse struct {
	// AML compute binding used in inferencing.
	InferencingComputeBinding *ComputeConfigurationResponse `pulumi:"inferencingComputeBinding"`
	// Indicates whether MLAssist feature is enabled.
	MlAssistEnabled *bool `pulumi:"mlAssistEnabled"`
	// AML compute binding used in training.
	TrainingComputeBinding *ComputeConfigurationResponse `pulumi:"trainingComputeBinding"`
}

// Labeling MLAssist configuration definition
type MLAssistConfigurationResponseOutput struct{ *pulumi.OutputState }

func (MLAssistConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MLAssistConfigurationResponse)(nil)).Elem()
}

func (o MLAssistConfigurationResponseOutput) ToMLAssistConfigurationResponseOutput() MLAssistConfigurationResponseOutput {
	return o
}

func (o MLAssistConfigurationResponseOutput) ToMLAssistConfigurationResponseOutputWithContext(ctx context.Context) MLAssistConfigurationResponseOutput {
	return o
}

// AML compute binding used in inferencing.
func (o MLAssistConfigurationResponseOutput) InferencingComputeBinding() ComputeConfigurationResponsePtrOutput {
	return o.ApplyT(func(v MLAssistConfigurationResponse) *ComputeConfigurationResponse {
		return v.InferencingComputeBinding
	}).(ComputeConfigurationResponsePtrOutput)
}

// Indicates whether MLAssist feature is enabled.
func (o MLAssistConfigurationResponseOutput) MlAssistEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MLAssistConfigurationResponse) *bool { return v.MlAssistEnabled }).(pulumi.BoolPtrOutput)
}

// AML compute binding used in training.
func (o MLAssistConfigurationResponseOutput) TrainingComputeBinding() ComputeConfigurationResponsePtrOutput {
	return o.ApplyT(func(v MLAssistConfigurationResponse) *ComputeConfigurationResponse { return v.TrainingComputeBinding }).(ComputeConfigurationResponsePtrOutput)
}

type MLAssistConfigurationResponsePtrOutput struct{ *pulumi.OutputState }

func (MLAssistConfigurationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MLAssistConfigurationResponse)(nil)).Elem()
}

func (o MLAssistConfigurationResponsePtrOutput) ToMLAssistConfigurationResponsePtrOutput() MLAssistConfigurationResponsePtrOutput {
	return o
}

func (o MLAssistConfigurationResponsePtrOutput) ToMLAssistConfigurationResponsePtrOutputWithContext(ctx context.Context) MLAssistConfigurationResponsePtrOutput {
	return o
}

func (o MLAssistConfigurationResponsePtrOutput) Elem() MLAssistConfigurationResponseOutput {
	return o.ApplyT(func(v *MLAssistConfigurationResponse) MLAssistConfigurationResponse {
		if v != nil {
			return *v
		}
		var ret MLAssistConfigurationResponse
		return ret
	}).(MLAssistConfigurationResponseOutput)
}

// AML compute binding used in inferencing.
func (o MLAssistConfigurationResponsePtrOutput) InferencingComputeBinding() ComputeConfigurationResponsePtrOutput {
	return o.ApplyT(func(v *MLAssistConfigurationResponse) *ComputeConfigurationResponse {
		if v == nil {
			return nil
		}
		return v.InferencingComputeBinding
	}).(ComputeConfigurationResponsePtrOutput)
}

// Indicates whether MLAssist feature is enabled.
func (o MLAssistConfigurationResponsePtrOutput) MlAssistEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MLAssistConfigurationResponse) *bool {
		if v == nil {
			return nil
		}
		return v.MlAssistEnabled
	}).(pulumi.BoolPtrOutput)
}

// AML compute binding used in training.
func (o MLAssistConfigurationResponsePtrOutput) TrainingComputeBinding() ComputeConfigurationResponsePtrOutput {
	return o.ApplyT(func(v *MLAssistConfigurationResponse) *ComputeConfigurationResponse {
		if v == nil {
			return nil
		}
		return v.TrainingComputeBinding
	}).(ComputeConfigurationResponsePtrOutput)
}

// Managed identity configuration.
type ManagedIdentity struct {
	// Specifies a user-assigned identity by client ID. For system-assigned, do not set this field.
	ClientId *string `pulumi:"clientId"`
	// Enum to determine identity framework.
	// Expected value is 'Managed'.
	IdentityType string `pulumi:"identityType"`
	// Specifies a user-assigned identity by object ID. For system-assigned, do not set this field.
	ObjectId *string `pulumi:"objectId"`
	// Specifies a user-assigned identity by ARM resource ID. For system-assigned, do not set this field.
	ResourceId *string `pulumi:"resourceId"`
}

// ManagedIdentityInput is an input type that accepts ManagedIdentityArgs and ManagedIdentityOutput values.
// You can construct a concrete instance of `ManagedIdentityInput` via:
//
//	ManagedIdentityArgs{...}
type ManagedIdentityInput interface {
	pulumi.Input

	ToManagedIdentityOutput() ManagedIdentityOutput
	ToManagedIdentityOutputWithContext(context.Context) ManagedIdentityOutput
}

// Managed identity configuration.
type ManagedIdentityArgs struct {
	// Specifies a user-assigned identity by client ID. For system-assigned, do not set this field.
	ClientId pulumi.StringPtrInput `pulumi:"clientId"`
	// Enum to determine identity framework.
	// Expected value is 'Managed'.
	IdentityType pulumi.StringInput `pulumi:"identityType"`
	// Specifies a user-assigned identity by object ID. For system-assigned, do not set this field.
	ObjectId pulumi.StringPtrInput `pulumi:"objectId"`
	// Specifies a user-assigned identity by ARM resource ID. For system-assigned, do not set this field.
	ResourceId pulumi.StringPtrInput `pulumi:"resourceId"`
}

func (ManagedIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedIdentity)(nil)).Elem()
}

func (i ManagedIdentityArgs) ToManagedIdentityOutput() ManagedIdentityOutput {
	return i.ToManagedIdentityOutputWithContext(context.Background())
}

func (i ManagedIdentityArgs) ToManagedIdentityOutputWithContext(ctx context.Context) ManagedIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedIdentityOutput)
}

func (i ManagedIdentityArgs) ToManagedIdentityPtrOutput() ManagedIdentityPtrOutput {
	return i.ToManagedIdentityPtrOutputWithContext(context.Background())
}

func (i ManagedIdentityArgs) ToManagedIdentityPtrOutputWithContext(ctx context.Context) ManagedIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedIdentityOutput).ToManagedIdentityPtrOutputWithContext(ctx)
}

// ManagedIdentityPtrInput is an input type that accepts ManagedIdentityArgs, ManagedIdentityPtr and ManagedIdentityPtrOutput values.
// You can construct a concrete instance of `ManagedIdentityPtrInput` via:
//
//	        ManagedIdentityArgs{...}
//
//	or:
//
//	        nil
type ManagedIdentityPtrInput interface {
	pulumi.Input

	ToManagedIdentityPtrOutput() ManagedIdentityPtrOutput
	ToManagedIdentityPtrOutputWithContext(context.Context) ManagedIdentityPtrOutput
}

type managedIdentityPtrType ManagedIdentityArgs

func ManagedIdentityPtr(v *ManagedIdentityArgs) ManagedIdentityPtrInput {
	return (*managedIdentityPtrType)(v)
}

func (*managedIdentityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedIdentity)(nil)).Elem()
}

func (i *managedIdentityPtrType) ToManagedIdentityPtrOutput() ManagedIdentityPtrOutput {
	return i.ToManagedIdentityPtrOutputWithContext(context.Background())
}

func (i *managedIdentityPtrType) ToManagedIdentityPtrOutputWithContext(ctx context.Context) ManagedIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedIdentityPtrOutput)
}

// Managed identity configuration.
type ManagedIdentityOutput struct{ *pulumi.OutputState }

func (ManagedIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedIdentity)(nil)).Elem()
}

func (o ManagedIdentityOutput) ToManagedIdentityOutput() ManagedIdentityOutput {
	return o
}

func (o ManagedIdentityOutput) ToManagedIdentityOutputWithContext(ctx context.Context) ManagedIdentityOutput {
	return o
}

func (o ManagedIdentityOutput) ToManagedIdentityPtrOutput() ManagedIdentityPtrOutput {
	return o.ToManagedIdentityPtrOutputWithContext(context.Background())
}

func (o ManagedIdentityOutput) ToManagedIdentityPtrOutputWithContext(ctx context.Context) ManagedIdentityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ManagedIdentity) *ManagedIdentity {
		return &v
	}).(ManagedIdentityPtrOutput)
}

// Specifies a user-assigned identity by client ID. For system-assigned, do not set this field.
func (o ManagedIdentityOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedIdentity) *string { return v.ClientId }).(pulumi.StringPtrOutput)
}

// Enum to determine identity framework.
// Expected value is 'Managed'.
func (o ManagedIdentityOutput) IdentityType() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedIdentity) string { return v.IdentityType }).(pulumi.StringOutput)
}

// Specifies a user-assigned identity by object ID. For system-assigned, do not set this field.
func (o ManagedIdentityOutput) ObjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedIdentity) *string { return v.ObjectId }).(pulumi.StringPtrOutput)
}

// Specifies a user-assigned identity by ARM resource ID. For system-assigned, do not set this field.
func (o ManagedIdentityOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedIdentity) *string { return v.ResourceId }).(pulumi.StringPtrOutput)
}

type ManagedIdentityPtrOutput struct{ *pulumi.OutputState }

func (ManagedIdentityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedIdentity)(nil)).Elem()
}

func (o ManagedIdentityPtrOutput) ToManagedIdentityPtrOutput() ManagedIdentityPtrOutput {
	return o
}

func (o ManagedIdentityPtrOutput) ToManagedIdentityPtrOutputWithContext(ctx context.Context) ManagedIdentityPtrOutput {
	return o
}

func (o ManagedIdentityPtrOutput) Elem() ManagedIdentityOutput {
	return o.ApplyT(func(v *ManagedIdentity) ManagedIdentity {
		if v != nil {
			return *v
		}
		var ret ManagedIdentity
		return ret
	}).(ManagedIdentityOutput)
}

// Specifies a user-assigned identity by client ID. For system-assigned, do not set this field.
func (o ManagedIdentityPtrOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedIdentity) *string {
		if v == nil {
			return nil
		}
		return v.ClientId
	}).(pulumi.StringPtrOutput)
}

// Enum to determine identity framework.
// Expected value is 'Managed'.
func (o ManagedIdentityPtrOutput) IdentityType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedIdentity) *string {
		if v == nil {
			return nil
		}
		return &v.IdentityType
	}).(pulumi.StringPtrOutput)
}

// Specifies a user-assigned identity by object ID. For system-assigned, do not set this field.
func (o ManagedIdentityPtrOutput) ObjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedIdentity) *string {
		if v == nil {
			return nil
		}
		return v.ObjectId
	}).(pulumi.StringPtrOutput)
}

// Specifies a user-assigned identity by ARM resource ID. For system-assigned, do not set this field.
func (o ManagedIdentityPtrOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedIdentity) *string {
		if v == nil {
			return nil
		}
		return v.ResourceId
	}).(pulumi.StringPtrOutput)
}

// Managed identity configuration.
type ManagedIdentityResponse struct {
	// Specifies a user-assigned identity by client ID. For system-assigned, do not set this field.
	ClientId *string `pulumi:"clientId"`
	// Enum to determine identity framework.
	// Expected value is 'Managed'.
	IdentityType string `pulumi:"identityType"`
	// Specifies a user-assigned identity by object ID. For system-assigned, do not set this field.
	ObjectId *string `pulumi:"objectId"`
	// Specifies a user-assigned identity by ARM resource ID. For system-assigned, do not set this field.
	ResourceId *string `pulumi:"resourceId"`
}

// Managed identity configuration.
type ManagedIdentityResponseOutput struct{ *pulumi.OutputState }

func (ManagedIdentityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedIdentityResponse)(nil)).Elem()
}

func (o ManagedIdentityResponseOutput) ToManagedIdentityResponseOutput() ManagedIdentityResponseOutput {
	return o
}

func (o ManagedIdentityResponseOutput) ToManagedIdentityResponseOutputWithContext(ctx context.Context) ManagedIdentityResponseOutput {
	return o
}

// Specifies a user-assigned identity by client ID. For system-assigned, do not set this field.
func (o ManagedIdentityResponseOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedIdentityResponse) *string { return v.ClientId }).(pulumi.StringPtrOutput)
}

// Enum to determine identity framework.
// Expected value is 'Managed'.
func (o ManagedIdentityResponseOutput) IdentityType() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedIdentityResponse) string { return v.IdentityType }).(pulumi.StringOutput)
}

// Specifies a user-assigned identity by object ID. For system-assigned, do not set this field.
func (o ManagedIdentityResponseOutput) ObjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedIdentityResponse) *string { return v.ObjectId }).(pulumi.StringPtrOutput)
}

// Specifies a user-assigned identity by ARM resource ID. For system-assigned, do not set this field.
func (o ManagedIdentityResponseOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedIdentityResponse) *string { return v.ResourceId }).(pulumi.StringPtrOutput)
}

type ManagedIdentityResponsePtrOutput struct{ *pulumi.OutputState }

func (ManagedIdentityResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedIdentityResponse)(nil)).Elem()
}

func (o ManagedIdentityResponsePtrOutput) ToManagedIdentityResponsePtrOutput() ManagedIdentityResponsePtrOutput {
	return o
}

func (o ManagedIdentityResponsePtrOutput) ToManagedIdentityResponsePtrOutputWithContext(ctx context.Context) ManagedIdentityResponsePtrOutput {
	return o
}

func (o ManagedIdentityResponsePtrOutput) Elem() ManagedIdentityResponseOutput {
	return o.ApplyT(func(v *ManagedIdentityResponse) ManagedIdentityResponse {
		if v != nil {
			return *v
		}
		var ret ManagedIdentityResponse
		return ret
	}).(ManagedIdentityResponseOutput)
}

// Specifies a user-assigned identity by client ID. For system-assigned, do not set this field.
func (o ManagedIdentityResponsePtrOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedIdentityResponse) *string {
		if v == nil {
			return nil
		}
		return v.ClientId
	}).(pulumi.StringPtrOutput)
}

// Enum to determine identity framework.
// Expected value is 'Managed'.
func (o ManagedIdentityResponsePtrOutput) IdentityType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedIdentityResponse) *string {
		if v == nil {
			return nil
		}
		return &v.IdentityType
	}).(pulumi.StringPtrOutput)
}

// Specifies a user-assigned identity by object ID. For system-assigned, do not set this field.
func (o ManagedIdentityResponsePtrOutput) ObjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedIdentityResponse) *string {
		if v == nil {
			return nil
		}
		return v.ObjectId
	}).(pulumi.StringPtrOutput)
}

// Specifies a user-assigned identity by ARM resource ID. For system-assigned, do not set this field.
func (o ManagedIdentityResponsePtrOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedIdentityResponse) *string {
		if v == nil {
			return nil
		}
		return v.ResourceId
	}).(pulumi.StringPtrOutput)
}

type ManagedOnlineDeployment struct {
	// If true, enables Application Insights logging.
	AppInsightsEnabled *bool `pulumi:"appInsightsEnabled"`
	// Code configuration for the endpoint deployment.
	CodeConfiguration *CodeConfiguration `pulumi:"codeConfiguration"`
	// Description of the endpoint deployment.
	Description *string `pulumi:"description"`
	// Enum to determine endpoint compute type.
	// Expected value is 'Managed'.
	EndpointComputeType string `pulumi:"endpointComputeType"`
	// ARM resource ID of the environment specification for the endpoint deployment.
	EnvironmentId *string `pulumi:"environmentId"`
	// Environment variables configuration for the deployment.
	EnvironmentVariables map[string]string `pulumi:"environmentVariables"`
	// Compute instance type.
	InstanceType *string `pulumi:"instanceType"`
	// Deployment container liveness/readiness probe configuration.
	LivenessProbe *ProbeSettings `pulumi:"livenessProbe"`
	// Reference to the model asset for the endpoint deployment.
	Model interface{} `pulumi:"model"`
	// Property dictionary. Properties can be added, but not removed or altered.
	Properties map[string]string `pulumi:"properties"`
	// Deployment container liveness/readiness probe configuration.
	ReadinessProbe *ProbeSettings `pulumi:"readinessProbe"`
	// Online deployment scoring requests configuration.
	RequestSettings *OnlineRequestSettings `pulumi:"requestSettings"`
	// Online deployment scaling configuration.
	ScaleSettings interface{} `pulumi:"scaleSettings"`
}

// ManagedOnlineDeploymentInput is an input type that accepts ManagedOnlineDeploymentArgs and ManagedOnlineDeploymentOutput values.
// You can construct a concrete instance of `ManagedOnlineDeploymentInput` via:
//
//	ManagedOnlineDeploymentArgs{...}
type ManagedOnlineDeploymentInput interface {
	pulumi.Input

	ToManagedOnlineDeploymentOutput() ManagedOnlineDeploymentOutput
	ToManagedOnlineDeploymentOutputWithContext(context.Context) ManagedOnlineDeploymentOutput
}

type ManagedOnlineDeploymentArgs struct {
	// If true, enables Application Insights logging.
	AppInsightsEnabled pulumi.BoolPtrInput `pulumi:"appInsightsEnabled"`
	// Code configuration for the endpoint deployment.
	CodeConfiguration CodeConfigurationPtrInput `pulumi:"codeConfiguration"`
	// Description of the endpoint deployment.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Enum to determine endpoint compute type.
	// Expected value is 'Managed'.
	EndpointComputeType pulumi.StringInput `pulumi:"endpointComputeType"`
	// ARM resource ID of the environment specification for the endpoint deployment.
	EnvironmentId pulumi.StringPtrInput `pulumi:"environmentId"`
	// Environment variables configuration for the deployment.
	EnvironmentVariables pulumi.StringMapInput `pulumi:"environmentVariables"`
	// Compute instance type.
	InstanceType pulumi.StringPtrInput `pulumi:"instanceType"`
	// Deployment container liveness/readiness probe configuration.
	LivenessProbe ProbeSettingsPtrInput `pulumi:"livenessProbe"`
	// Reference to the model asset for the endpoint deployment.
	Model pulumi.Input `pulumi:"model"`
	// Property dictionary. Properties can be added, but not removed or altered.
	Properties pulumi.StringMapInput `pulumi:"properties"`
	// Deployment container liveness/readiness probe configuration.
	ReadinessProbe ProbeSettingsPtrInput `pulumi:"readinessProbe"`
	// Online deployment scoring requests configuration.
	RequestSettings OnlineRequestSettingsPtrInput `pulumi:"requestSettings"`
	// Online deployment scaling configuration.
	ScaleSettings pulumi.Input `pulumi:"scaleSettings"`
}

func (ManagedOnlineDeploymentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedOnlineDeployment)(nil)).Elem()
}

func (i ManagedOnlineDeploymentArgs) ToManagedOnlineDeploymentOutput() ManagedOnlineDeploymentOutput {
	return i.ToManagedOnlineDeploymentOutputWithContext(context.Background())
}

func (i ManagedOnlineDeploymentArgs) ToManagedOnlineDeploymentOutputWithContext(ctx context.Context) ManagedOnlineDeploymentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedOnlineDeploymentOutput)
}

type ManagedOnlineDeploymentOutput struct{ *pulumi.OutputState }

func (ManagedOnlineDeploymentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedOnlineDeployment)(nil)).Elem()
}

func (o ManagedOnlineDeploymentOutput) ToManagedOnlineDeploymentOutput() ManagedOnlineDeploymentOutput {
	return o
}

func (o ManagedOnlineDeploymentOutput) ToManagedOnlineDeploymentOutputWithContext(ctx context.Context) ManagedOnlineDeploymentOutput {
	return o
}

// If true, enables Application Insights logging.
func (o ManagedOnlineDeploymentOutput) AppInsightsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ManagedOnlineDeployment) *bool { return v.AppInsightsEnabled }).(pulumi.BoolPtrOutput)
}

// Code configuration for the endpoint deployment.
func (o ManagedOnlineDeploymentOutput) CodeConfiguration() CodeConfigurationPtrOutput {
	return o.ApplyT(func(v ManagedOnlineDeployment) *CodeConfiguration { return v.CodeConfiguration }).(CodeConfigurationPtrOutput)
}

// Description of the endpoint deployment.
func (o ManagedOnlineDeploymentOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedOnlineDeployment) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Enum to determine endpoint compute type.
// Expected value is 'Managed'.
func (o ManagedOnlineDeploymentOutput) EndpointComputeType() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedOnlineDeployment) string { return v.EndpointComputeType }).(pulumi.StringOutput)
}

// ARM resource ID of the environment specification for the endpoint deployment.
func (o ManagedOnlineDeploymentOutput) EnvironmentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedOnlineDeployment) *string { return v.EnvironmentId }).(pulumi.StringPtrOutput)
}

// Environment variables configuration for the deployment.
func (o ManagedOnlineDeploymentOutput) EnvironmentVariables() pulumi.StringMapOutput {
	return o.ApplyT(func(v ManagedOnlineDeployment) map[string]string { return v.EnvironmentVariables }).(pulumi.StringMapOutput)
}

// Compute instance type.
func (o ManagedOnlineDeploymentOutput) InstanceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedOnlineDeployment) *string { return v.InstanceType }).(pulumi.StringPtrOutput)
}

// Deployment container liveness/readiness probe configuration.
func (o ManagedOnlineDeploymentOutput) LivenessProbe() ProbeSettingsPtrOutput {
	return o.ApplyT(func(v ManagedOnlineDeployment) *ProbeSettings { return v.LivenessProbe }).(ProbeSettingsPtrOutput)
}

// Reference to the model asset for the endpoint deployment.
func (o ManagedOnlineDeploymentOutput) Model() pulumi.AnyOutput {
	return o.ApplyT(func(v ManagedOnlineDeployment) interface{} { return v.Model }).(pulumi.AnyOutput)
}

// Property dictionary. Properties can be added, but not removed or altered.
func (o ManagedOnlineDeploymentOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v ManagedOnlineDeployment) map[string]string { return v.Properties }).(pulumi.StringMapOutput)
}

// Deployment container liveness/readiness probe configuration.
func (o ManagedOnlineDeploymentOutput) ReadinessProbe() ProbeSettingsPtrOutput {
	return o.ApplyT(func(v ManagedOnlineDeployment) *ProbeSettings { return v.ReadinessProbe }).(ProbeSettingsPtrOutput)
}

// Online deployment scoring requests configuration.
func (o ManagedOnlineDeploymentOutput) RequestSettings() OnlineRequestSettingsPtrOutput {
	return o.ApplyT(func(v ManagedOnlineDeployment) *OnlineRequestSettings { return v.RequestSettings }).(OnlineRequestSettingsPtrOutput)
}

// Online deployment scaling configuration.
func (o ManagedOnlineDeploymentOutput) ScaleSettings() pulumi.AnyOutput {
	return o.ApplyT(func(v ManagedOnlineDeployment) interface{} { return v.ScaleSettings }).(pulumi.AnyOutput)
}

type ManagedOnlineDeploymentResponse struct {
	// If true, enables Application Insights logging.
	AppInsightsEnabled *bool `pulumi:"appInsightsEnabled"`
	// Code configuration for the endpoint deployment.
	CodeConfiguration *CodeConfigurationResponse `pulumi:"codeConfiguration"`
	// Description of the endpoint deployment.
	Description *string `pulumi:"description"`
	// Enum to determine endpoint compute type.
	// Expected value is 'Managed'.
	EndpointComputeType string `pulumi:"endpointComputeType"`
	// ARM resource ID of the environment specification for the endpoint deployment.
	EnvironmentId *string `pulumi:"environmentId"`
	// Environment variables configuration for the deployment.
	EnvironmentVariables map[string]string `pulumi:"environmentVariables"`
	// Compute instance type.
	InstanceType *string `pulumi:"instanceType"`
	// Deployment container liveness/readiness probe configuration.
	LivenessProbe *ProbeSettingsResponse `pulumi:"livenessProbe"`
	// Reference to the model asset for the endpoint deployment.
	Model interface{} `pulumi:"model"`
	// Property dictionary. Properties can be added, but not removed or altered.
	Properties map[string]string `pulumi:"properties"`
	// Provisioning state for the endpoint deployment.
	ProvisioningState string `pulumi:"provisioningState"`
	// Deployment container liveness/readiness probe configuration.
	ReadinessProbe *ProbeSettingsResponse `pulumi:"readinessProbe"`
	// Online deployment scoring requests configuration.
	RequestSettings *OnlineRequestSettingsResponse `pulumi:"requestSettings"`
	// Online deployment scaling configuration.
	ScaleSettings interface{} `pulumi:"scaleSettings"`
}

type ManagedOnlineDeploymentResponseOutput struct{ *pulumi.OutputState }

func (ManagedOnlineDeploymentResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedOnlineDeploymentResponse)(nil)).Elem()
}

func (o ManagedOnlineDeploymentResponseOutput) ToManagedOnlineDeploymentResponseOutput() ManagedOnlineDeploymentResponseOutput {
	return o
}

func (o ManagedOnlineDeploymentResponseOutput) ToManagedOnlineDeploymentResponseOutputWithContext(ctx context.Context) ManagedOnlineDeploymentResponseOutput {
	return o
}

// If true, enables Application Insights logging.
func (o ManagedOnlineDeploymentResponseOutput) AppInsightsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ManagedOnlineDeploymentResponse) *bool { return v.AppInsightsEnabled }).(pulumi.BoolPtrOutput)
}

// Code configuration for the endpoint deployment.
func (o ManagedOnlineDeploymentResponseOutput) CodeConfiguration() CodeConfigurationResponsePtrOutput {
	return o.ApplyT(func(v ManagedOnlineDeploymentResponse) *CodeConfigurationResponse { return v.CodeConfiguration }).(CodeConfigurationResponsePtrOutput)
}

// Description of the endpoint deployment.
func (o ManagedOnlineDeploymentResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedOnlineDeploymentResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Enum to determine endpoint compute type.
// Expected value is 'Managed'.
func (o ManagedOnlineDeploymentResponseOutput) EndpointComputeType() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedOnlineDeploymentResponse) string { return v.EndpointComputeType }).(pulumi.StringOutput)
}

// ARM resource ID of the environment specification for the endpoint deployment.
func (o ManagedOnlineDeploymentResponseOutput) EnvironmentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedOnlineDeploymentResponse) *string { return v.EnvironmentId }).(pulumi.StringPtrOutput)
}

// Environment variables configuration for the deployment.
func (o ManagedOnlineDeploymentResponseOutput) EnvironmentVariables() pulumi.StringMapOutput {
	return o.ApplyT(func(v ManagedOnlineDeploymentResponse) map[string]string { return v.EnvironmentVariables }).(pulumi.StringMapOutput)
}

// Compute instance type.
func (o ManagedOnlineDeploymentResponseOutput) InstanceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedOnlineDeploymentResponse) *string { return v.InstanceType }).(pulumi.StringPtrOutput)
}

// Deployment container liveness/readiness probe configuration.
func (o ManagedOnlineDeploymentResponseOutput) LivenessProbe() ProbeSettingsResponsePtrOutput {
	return o.ApplyT(func(v ManagedOnlineDeploymentResponse) *ProbeSettingsResponse { return v.LivenessProbe }).(ProbeSettingsResponsePtrOutput)
}

// Reference to the model asset for the endpoint deployment.
func (o ManagedOnlineDeploymentResponseOutput) Model() pulumi.AnyOutput {
	return o.ApplyT(func(v ManagedOnlineDeploymentResponse) interface{} { return v.Model }).(pulumi.AnyOutput)
}

// Property dictionary. Properties can be added, but not removed or altered.
func (o ManagedOnlineDeploymentResponseOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v ManagedOnlineDeploymentResponse) map[string]string { return v.Properties }).(pulumi.StringMapOutput)
}

// Provisioning state for the endpoint deployment.
func (o ManagedOnlineDeploymentResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedOnlineDeploymentResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Deployment container liveness/readiness probe configuration.
func (o ManagedOnlineDeploymentResponseOutput) ReadinessProbe() ProbeSettingsResponsePtrOutput {
	return o.ApplyT(func(v ManagedOnlineDeploymentResponse) *ProbeSettingsResponse { return v.ReadinessProbe }).(ProbeSettingsResponsePtrOutput)
}

// Online deployment scoring requests configuration.
func (o ManagedOnlineDeploymentResponseOutput) RequestSettings() OnlineRequestSettingsResponsePtrOutput {
	return o.ApplyT(func(v ManagedOnlineDeploymentResponse) *OnlineRequestSettingsResponse { return v.RequestSettings }).(OnlineRequestSettingsResponsePtrOutput)
}

// Online deployment scaling configuration.
func (o ManagedOnlineDeploymentResponseOutput) ScaleSettings() pulumi.AnyOutput {
	return o.ApplyT(func(v ManagedOnlineDeploymentResponse) interface{} { return v.ScaleSettings }).(pulumi.AnyOutput)
}

type ManualScaleSettings struct {
	// Fixed number of instances for this deployment.
	InstanceCount *int `pulumi:"instanceCount"`
	// Maximum number of instances for this deployment.
	MaxInstances *int `pulumi:"maxInstances"`
	// Minimum number of instances for this deployment.
	MinInstances *int `pulumi:"minInstances"`
	// Expected value is 'Manual'.
	ScaleType string `pulumi:"scaleType"`
}

// ManualScaleSettingsInput is an input type that accepts ManualScaleSettingsArgs and ManualScaleSettingsOutput values.
// You can construct a concrete instance of `ManualScaleSettingsInput` via:
//
//	ManualScaleSettingsArgs{...}
type ManualScaleSettingsInput interface {
	pulumi.Input

	ToManualScaleSettingsOutput() ManualScaleSettingsOutput
	ToManualScaleSettingsOutputWithContext(context.Context) ManualScaleSettingsOutput
}

type ManualScaleSettingsArgs struct {
	// Fixed number of instances for this deployment.
	InstanceCount pulumi.IntPtrInput `pulumi:"instanceCount"`
	// Maximum number of instances for this deployment.
	MaxInstances pulumi.IntPtrInput `pulumi:"maxInstances"`
	// Minimum number of instances for this deployment.
	MinInstances pulumi.IntPtrInput `pulumi:"minInstances"`
	// Expected value is 'Manual'.
	ScaleType pulumi.StringInput `pulumi:"scaleType"`
}

func (ManualScaleSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManualScaleSettings)(nil)).Elem()
}

func (i ManualScaleSettingsArgs) ToManualScaleSettingsOutput() ManualScaleSettingsOutput {
	return i.ToManualScaleSettingsOutputWithContext(context.Background())
}

func (i ManualScaleSettingsArgs) ToManualScaleSettingsOutputWithContext(ctx context.Context) ManualScaleSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManualScaleSettingsOutput)
}

func (i ManualScaleSettingsArgs) ToManualScaleSettingsPtrOutput() ManualScaleSettingsPtrOutput {
	return i.ToManualScaleSettingsPtrOutputWithContext(context.Background())
}

func (i ManualScaleSettingsArgs) ToManualScaleSettingsPtrOutputWithContext(ctx context.Context) ManualScaleSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManualScaleSettingsOutput).ToManualScaleSettingsPtrOutputWithContext(ctx)
}

// ManualScaleSettingsPtrInput is an input type that accepts ManualScaleSettingsArgs, ManualScaleSettingsPtr and ManualScaleSettingsPtrOutput values.
// You can construct a concrete instance of `ManualScaleSettingsPtrInput` via:
//
//	        ManualScaleSettingsArgs{...}
//
//	or:
//
//	        nil
type ManualScaleSettingsPtrInput interface {
	pulumi.Input

	ToManualScaleSettingsPtrOutput() ManualScaleSettingsPtrOutput
	ToManualScaleSettingsPtrOutputWithContext(context.Context) ManualScaleSettingsPtrOutput
}

type manualScaleSettingsPtrType ManualScaleSettingsArgs

func ManualScaleSettingsPtr(v *ManualScaleSettingsArgs) ManualScaleSettingsPtrInput {
	return (*manualScaleSettingsPtrType)(v)
}

func (*manualScaleSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManualScaleSettings)(nil)).Elem()
}

func (i *manualScaleSettingsPtrType) ToManualScaleSettingsPtrOutput() ManualScaleSettingsPtrOutput {
	return i.ToManualScaleSettingsPtrOutputWithContext(context.Background())
}

func (i *manualScaleSettingsPtrType) ToManualScaleSettingsPtrOutputWithContext(ctx context.Context) ManualScaleSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManualScaleSettingsPtrOutput)
}

type ManualScaleSettingsOutput struct{ *pulumi.OutputState }

func (ManualScaleSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManualScaleSettings)(nil)).Elem()
}

func (o ManualScaleSettingsOutput) ToManualScaleSettingsOutput() ManualScaleSettingsOutput {
	return o
}

func (o ManualScaleSettingsOutput) ToManualScaleSettingsOutputWithContext(ctx context.Context) ManualScaleSettingsOutput {
	return o
}

func (o ManualScaleSettingsOutput) ToManualScaleSettingsPtrOutput() ManualScaleSettingsPtrOutput {
	return o.ToManualScaleSettingsPtrOutputWithContext(context.Background())
}

func (o ManualScaleSettingsOutput) ToManualScaleSettingsPtrOutputWithContext(ctx context.Context) ManualScaleSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ManualScaleSettings) *ManualScaleSettings {
		return &v
	}).(ManualScaleSettingsPtrOutput)
}

// Fixed number of instances for this deployment.
func (o ManualScaleSettingsOutput) InstanceCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManualScaleSettings) *int { return v.InstanceCount }).(pulumi.IntPtrOutput)
}

// Maximum number of instances for this deployment.
func (o ManualScaleSettingsOutput) MaxInstances() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManualScaleSettings) *int { return v.MaxInstances }).(pulumi.IntPtrOutput)
}

// Minimum number of instances for this deployment.
func (o ManualScaleSettingsOutput) MinInstances() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManualScaleSettings) *int { return v.MinInstances }).(pulumi.IntPtrOutput)
}

// Expected value is 'Manual'.
func (o ManualScaleSettingsOutput) ScaleType() pulumi.StringOutput {
	return o.ApplyT(func(v ManualScaleSettings) string { return v.ScaleType }).(pulumi.StringOutput)
}

type ManualScaleSettingsPtrOutput struct{ *pulumi.OutputState }

func (ManualScaleSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManualScaleSettings)(nil)).Elem()
}

func (o ManualScaleSettingsPtrOutput) ToManualScaleSettingsPtrOutput() ManualScaleSettingsPtrOutput {
	return o
}

func (o ManualScaleSettingsPtrOutput) ToManualScaleSettingsPtrOutputWithContext(ctx context.Context) ManualScaleSettingsPtrOutput {
	return o
}

func (o ManualScaleSettingsPtrOutput) Elem() ManualScaleSettingsOutput {
	return o.ApplyT(func(v *ManualScaleSettings) ManualScaleSettings {
		if v != nil {
			return *v
		}
		var ret ManualScaleSettings
		return ret
	}).(ManualScaleSettingsOutput)
}

// Fixed number of instances for this deployment.
func (o ManualScaleSettingsPtrOutput) InstanceCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ManualScaleSettings) *int {
		if v == nil {
			return nil
		}
		return v.InstanceCount
	}).(pulumi.IntPtrOutput)
}

// Maximum number of instances for this deployment.
func (o ManualScaleSettingsPtrOutput) MaxInstances() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ManualScaleSettings) *int {
		if v == nil {
			return nil
		}
		return v.MaxInstances
	}).(pulumi.IntPtrOutput)
}

// Minimum number of instances for this deployment.
func (o ManualScaleSettingsPtrOutput) MinInstances() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ManualScaleSettings) *int {
		if v == nil {
			return nil
		}
		return v.MinInstances
	}).(pulumi.IntPtrOutput)
}

// Expected value is 'Manual'.
func (o ManualScaleSettingsPtrOutput) ScaleType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManualScaleSettings) *string {
		if v == nil {
			return nil
		}
		return &v.ScaleType
	}).(pulumi.StringPtrOutput)
}

type ManualScaleSettingsResponse struct {
	// Fixed number of instances for this deployment.
	InstanceCount *int `pulumi:"instanceCount"`
	// Maximum number of instances for this deployment.
	MaxInstances *int `pulumi:"maxInstances"`
	// Minimum number of instances for this deployment.
	MinInstances *int `pulumi:"minInstances"`
	// Expected value is 'Manual'.
	ScaleType string `pulumi:"scaleType"`
}

type ManualScaleSettingsResponseOutput struct{ *pulumi.OutputState }

func (ManualScaleSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManualScaleSettingsResponse)(nil)).Elem()
}

func (o ManualScaleSettingsResponseOutput) ToManualScaleSettingsResponseOutput() ManualScaleSettingsResponseOutput {
	return o
}

func (o ManualScaleSettingsResponseOutput) ToManualScaleSettingsResponseOutputWithContext(ctx context.Context) ManualScaleSettingsResponseOutput {
	return o
}

// Fixed number of instances for this deployment.
func (o ManualScaleSettingsResponseOutput) InstanceCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManualScaleSettingsResponse) *int { return v.InstanceCount }).(pulumi.IntPtrOutput)
}

// Maximum number of instances for this deployment.
func (o ManualScaleSettingsResponseOutput) MaxInstances() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManualScaleSettingsResponse) *int { return v.MaxInstances }).(pulumi.IntPtrOutput)
}

// Minimum number of instances for this deployment.
func (o ManualScaleSettingsResponseOutput) MinInstances() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManualScaleSettingsResponse) *int { return v.MinInstances }).(pulumi.IntPtrOutput)
}

// Expected value is 'Manual'.
func (o ManualScaleSettingsResponseOutput) ScaleType() pulumi.StringOutput {
	return o.ApplyT(func(v ManualScaleSettingsResponse) string { return v.ScaleType }).(pulumi.StringOutput)
}

type ManualScaleSettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (ManualScaleSettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManualScaleSettingsResponse)(nil)).Elem()
}

func (o ManualScaleSettingsResponsePtrOutput) ToManualScaleSettingsResponsePtrOutput() ManualScaleSettingsResponsePtrOutput {
	return o
}

func (o ManualScaleSettingsResponsePtrOutput) ToManualScaleSettingsResponsePtrOutputWithContext(ctx context.Context) ManualScaleSettingsResponsePtrOutput {
	return o
}

func (o ManualScaleSettingsResponsePtrOutput) Elem() ManualScaleSettingsResponseOutput {
	return o.ApplyT(func(v *ManualScaleSettingsResponse) ManualScaleSettingsResponse {
		if v != nil {
			return *v
		}
		var ret ManualScaleSettingsResponse
		return ret
	}).(ManualScaleSettingsResponseOutput)
}

// Fixed number of instances for this deployment.
func (o ManualScaleSettingsResponsePtrOutput) InstanceCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ManualScaleSettingsResponse) *int {
		if v == nil {
			return nil
		}
		return v.InstanceCount
	}).(pulumi.IntPtrOutput)
}

// Maximum number of instances for this deployment.
func (o ManualScaleSettingsResponsePtrOutput) MaxInstances() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ManualScaleSettingsResponse) *int {
		if v == nil {
			return nil
		}
		return v.MaxInstances
	}).(pulumi.IntPtrOutput)
}

// Minimum number of instances for this deployment.
func (o ManualScaleSettingsResponsePtrOutput) MinInstances() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ManualScaleSettingsResponse) *int {
		if v == nil {
			return nil
		}
		return v.MinInstances
	}).(pulumi.IntPtrOutput)
}

// Expected value is 'Manual'.
func (o ManualScaleSettingsResponsePtrOutput) ScaleType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManualScaleSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ScaleType
	}).(pulumi.StringPtrOutput)
}

// Defines an early termination policy based on running averages of the primary metric of all runs.
type MedianStoppingPolicy struct {
	// Number of intervals by which to delay the first evaluation.
	DelayEvaluation *int `pulumi:"delayEvaluation"`
	// Interval (number of runs) between policy evaluations.
	EvaluationInterval *int `pulumi:"evaluationInterval"`
	// Expected value is 'MedianStopping'.
	PolicyType string `pulumi:"policyType"`
}

// MedianStoppingPolicyInput is an input type that accepts MedianStoppingPolicyArgs and MedianStoppingPolicyOutput values.
// You can construct a concrete instance of `MedianStoppingPolicyInput` via:
//
//	MedianStoppingPolicyArgs{...}
type MedianStoppingPolicyInput interface {
	pulumi.Input

	ToMedianStoppingPolicyOutput() MedianStoppingPolicyOutput
	ToMedianStoppingPolicyOutputWithContext(context.Context) MedianStoppingPolicyOutput
}

// Defines an early termination policy based on running averages of the primary metric of all runs.
type MedianStoppingPolicyArgs struct {
	// Number of intervals by which to delay the first evaluation.
	DelayEvaluation pulumi.IntPtrInput `pulumi:"delayEvaluation"`
	// Interval (number of runs) between policy evaluations.
	EvaluationInterval pulumi.IntPtrInput `pulumi:"evaluationInterval"`
	// Expected value is 'MedianStopping'.
	PolicyType pulumi.StringInput `pulumi:"policyType"`
}

func (MedianStoppingPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MedianStoppingPolicy)(nil)).Elem()
}

func (i MedianStoppingPolicyArgs) ToMedianStoppingPolicyOutput() MedianStoppingPolicyOutput {
	return i.ToMedianStoppingPolicyOutputWithContext(context.Background())
}

func (i MedianStoppingPolicyArgs) ToMedianStoppingPolicyOutputWithContext(ctx context.Context) MedianStoppingPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MedianStoppingPolicyOutput)
}

func (i MedianStoppingPolicyArgs) ToMedianStoppingPolicyPtrOutput() MedianStoppingPolicyPtrOutput {
	return i.ToMedianStoppingPolicyPtrOutputWithContext(context.Background())
}

func (i MedianStoppingPolicyArgs) ToMedianStoppingPolicyPtrOutputWithContext(ctx context.Context) MedianStoppingPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MedianStoppingPolicyOutput).ToMedianStoppingPolicyPtrOutputWithContext(ctx)
}

// MedianStoppingPolicyPtrInput is an input type that accepts MedianStoppingPolicyArgs, MedianStoppingPolicyPtr and MedianStoppingPolicyPtrOutput values.
// You can construct a concrete instance of `MedianStoppingPolicyPtrInput` via:
//
//	        MedianStoppingPolicyArgs{...}
//
//	or:
//
//	        nil
type MedianStoppingPolicyPtrInput interface {
	pulumi.Input

	ToMedianStoppingPolicyPtrOutput() MedianStoppingPolicyPtrOutput
	ToMedianStoppingPolicyPtrOutputWithContext(context.Context) MedianStoppingPolicyPtrOutput
}

type medianStoppingPolicyPtrType MedianStoppingPolicyArgs

func MedianStoppingPolicyPtr(v *MedianStoppingPolicyArgs) MedianStoppingPolicyPtrInput {
	return (*medianStoppingPolicyPtrType)(v)
}

func (*medianStoppingPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MedianStoppingPolicy)(nil)).Elem()
}

func (i *medianStoppingPolicyPtrType) ToMedianStoppingPolicyPtrOutput() MedianStoppingPolicyPtrOutput {
	return i.ToMedianStoppingPolicyPtrOutputWithContext(context.Background())
}

func (i *medianStoppingPolicyPtrType) ToMedianStoppingPolicyPtrOutputWithContext(ctx context.Context) MedianStoppingPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MedianStoppingPolicyPtrOutput)
}

// Defines an early termination policy based on running averages of the primary metric of all runs.
type MedianStoppingPolicyOutput struct{ *pulumi.OutputState }

func (MedianStoppingPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MedianStoppingPolicy)(nil)).Elem()
}

func (o MedianStoppingPolicyOutput) ToMedianStoppingPolicyOutput() MedianStoppingPolicyOutput {
	return o
}

func (o MedianStoppingPolicyOutput) ToMedianStoppingPolicyOutputWithContext(ctx context.Context) MedianStoppingPolicyOutput {
	return o
}

func (o MedianStoppingPolicyOutput) ToMedianStoppingPolicyPtrOutput() MedianStoppingPolicyPtrOutput {
	return o.ToMedianStoppingPolicyPtrOutputWithContext(context.Background())
}

func (o MedianStoppingPolicyOutput) ToMedianStoppingPolicyPtrOutputWithContext(ctx context.Context) MedianStoppingPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MedianStoppingPolicy) *MedianStoppingPolicy {
		return &v
	}).(MedianStoppingPolicyPtrOutput)
}

// Number of intervals by which to delay the first evaluation.
func (o MedianStoppingPolicyOutput) DelayEvaluation() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MedianStoppingPolicy) *int { return v.DelayEvaluation }).(pulumi.IntPtrOutput)
}

// Interval (number of runs) between policy evaluations.
func (o MedianStoppingPolicyOutput) EvaluationInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MedianStoppingPolicy) *int { return v.EvaluationInterval }).(pulumi.IntPtrOutput)
}

// Expected value is 'MedianStopping'.
func (o MedianStoppingPolicyOutput) PolicyType() pulumi.StringOutput {
	return o.ApplyT(func(v MedianStoppingPolicy) string { return v.PolicyType }).(pulumi.StringOutput)
}

type MedianStoppingPolicyPtrOutput struct{ *pulumi.OutputState }

func (MedianStoppingPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MedianStoppingPolicy)(nil)).Elem()
}

func (o MedianStoppingPolicyPtrOutput) ToMedianStoppingPolicyPtrOutput() MedianStoppingPolicyPtrOutput {
	return o
}

func (o MedianStoppingPolicyPtrOutput) ToMedianStoppingPolicyPtrOutputWithContext(ctx context.Context) MedianStoppingPolicyPtrOutput {
	return o
}

func (o MedianStoppingPolicyPtrOutput) Elem() MedianStoppingPolicyOutput {
	return o.ApplyT(func(v *MedianStoppingPolicy) MedianStoppingPolicy {
		if v != nil {
			return *v
		}
		var ret MedianStoppingPolicy
		return ret
	}).(MedianStoppingPolicyOutput)
}

// Number of intervals by which to delay the first evaluation.
func (o MedianStoppingPolicyPtrOutput) DelayEvaluation() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MedianStoppingPolicy) *int {
		if v == nil {
			return nil
		}
		return v.DelayEvaluation
	}).(pulumi.IntPtrOutput)
}

// Interval (number of runs) between policy evaluations.
func (o MedianStoppingPolicyPtrOutput) EvaluationInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MedianStoppingPolicy) *int {
		if v == nil {
			return nil
		}
		return v.EvaluationInterval
	}).(pulumi.IntPtrOutput)
}

// Expected value is 'MedianStopping'.
func (o MedianStoppingPolicyPtrOutput) PolicyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MedianStoppingPolicy) *string {
		if v == nil {
			return nil
		}
		return &v.PolicyType
	}).(pulumi.StringPtrOutput)
}

// Defines an early termination policy based on running averages of the primary metric of all runs.
type MedianStoppingPolicyResponse struct {
	// Number of intervals by which to delay the first evaluation.
	DelayEvaluation *int `pulumi:"delayEvaluation"`
	// Interval (number of runs) between policy evaluations.
	EvaluationInterval *int `pulumi:"evaluationInterval"`
	// Expected value is 'MedianStopping'.
	PolicyType string `pulumi:"policyType"`
}

// Defines an early termination policy based on running averages of the primary metric of all runs.
type MedianStoppingPolicyResponseOutput struct{ *pulumi.OutputState }

func (MedianStoppingPolicyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MedianStoppingPolicyResponse)(nil)).Elem()
}

func (o MedianStoppingPolicyResponseOutput) ToMedianStoppingPolicyResponseOutput() MedianStoppingPolicyResponseOutput {
	return o
}

func (o MedianStoppingPolicyResponseOutput) ToMedianStoppingPolicyResponseOutputWithContext(ctx context.Context) MedianStoppingPolicyResponseOutput {
	return o
}

// Number of intervals by which to delay the first evaluation.
func (o MedianStoppingPolicyResponseOutput) DelayEvaluation() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MedianStoppingPolicyResponse) *int { return v.DelayEvaluation }).(pulumi.IntPtrOutput)
}

// Interval (number of runs) between policy evaluations.
func (o MedianStoppingPolicyResponseOutput) EvaluationInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MedianStoppingPolicyResponse) *int { return v.EvaluationInterval }).(pulumi.IntPtrOutput)
}

// Expected value is 'MedianStopping'.
func (o MedianStoppingPolicyResponseOutput) PolicyType() pulumi.StringOutput {
	return o.ApplyT(func(v MedianStoppingPolicyResponse) string { return v.PolicyType }).(pulumi.StringOutput)
}

type MedianStoppingPolicyResponsePtrOutput struct{ *pulumi.OutputState }

func (MedianStoppingPolicyResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MedianStoppingPolicyResponse)(nil)).Elem()
}

func (o MedianStoppingPolicyResponsePtrOutput) ToMedianStoppingPolicyResponsePtrOutput() MedianStoppingPolicyResponsePtrOutput {
	return o
}

func (o MedianStoppingPolicyResponsePtrOutput) ToMedianStoppingPolicyResponsePtrOutputWithContext(ctx context.Context) MedianStoppingPolicyResponsePtrOutput {
	return o
}

func (o MedianStoppingPolicyResponsePtrOutput) Elem() MedianStoppingPolicyResponseOutput {
	return o.ApplyT(func(v *MedianStoppingPolicyResponse) MedianStoppingPolicyResponse {
		if v != nil {
			return *v
		}
		var ret MedianStoppingPolicyResponse
		return ret
	}).(MedianStoppingPolicyResponseOutput)
}

// Number of intervals by which to delay the first evaluation.
func (o MedianStoppingPolicyResponsePtrOutput) DelayEvaluation() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MedianStoppingPolicyResponse) *int {
		if v == nil {
			return nil
		}
		return v.DelayEvaluation
	}).(pulumi.IntPtrOutput)
}

// Interval (number of runs) between policy evaluations.
func (o MedianStoppingPolicyResponsePtrOutput) EvaluationInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MedianStoppingPolicyResponse) *int {
		if v == nil {
			return nil
		}
		return v.EvaluationInterval
	}).(pulumi.IntPtrOutput)
}

// Expected value is 'MedianStopping'.
func (o MedianStoppingPolicyResponsePtrOutput) PolicyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MedianStoppingPolicyResponse) *string {
		if v == nil {
			return nil
		}
		return &v.PolicyType
	}).(pulumi.StringPtrOutput)
}

type ModelContainerType struct {
	// The asset description text.
	Description *string `pulumi:"description"`
	// The asset property dictionary.
	Properties map[string]string `pulumi:"properties"`
	// Tag dictionary. Tags can be added, removed, and updated.
	Tags map[string]string `pulumi:"tags"`
}

// ModelContainerTypeInput is an input type that accepts ModelContainerTypeArgs and ModelContainerTypeOutput values.
// You can construct a concrete instance of `ModelContainerTypeInput` via:
//
//	ModelContainerTypeArgs{...}
type ModelContainerTypeInput interface {
	pulumi.Input

	ToModelContainerTypeOutput() ModelContainerTypeOutput
	ToModelContainerTypeOutputWithContext(context.Context) ModelContainerTypeOutput
}

type ModelContainerTypeArgs struct {
	// The asset description text.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The asset property dictionary.
	Properties pulumi.StringMapInput `pulumi:"properties"`
	// Tag dictionary. Tags can be added, removed, and updated.
	Tags pulumi.StringMapInput `pulumi:"tags"`
}

func (ModelContainerTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelContainerType)(nil)).Elem()
}

func (i ModelContainerTypeArgs) ToModelContainerTypeOutput() ModelContainerTypeOutput {
	return i.ToModelContainerTypeOutputWithContext(context.Background())
}

func (i ModelContainerTypeArgs) ToModelContainerTypeOutputWithContext(ctx context.Context) ModelContainerTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelContainerTypeOutput)
}

type ModelContainerTypeOutput struct{ *pulumi.OutputState }

func (ModelContainerTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelContainerType)(nil)).Elem()
}

func (o ModelContainerTypeOutput) ToModelContainerTypeOutput() ModelContainerTypeOutput {
	return o
}

func (o ModelContainerTypeOutput) ToModelContainerTypeOutputWithContext(ctx context.Context) ModelContainerTypeOutput {
	return o
}

// The asset description text.
func (o ModelContainerTypeOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelContainerType) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The asset property dictionary.
func (o ModelContainerTypeOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v ModelContainerType) map[string]string { return v.Properties }).(pulumi.StringMapOutput)
}

// Tag dictionary. Tags can be added, removed, and updated.
func (o ModelContainerTypeOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v ModelContainerType) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

type ModelContainerResponse struct {
	// The asset description text.
	Description *string `pulumi:"description"`
	// The asset property dictionary.
	Properties map[string]string `pulumi:"properties"`
	// Tag dictionary. Tags can be added, removed, and updated.
	Tags map[string]string `pulumi:"tags"`
}

type ModelContainerResponseOutput struct{ *pulumi.OutputState }

func (ModelContainerResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelContainerResponse)(nil)).Elem()
}

func (o ModelContainerResponseOutput) ToModelContainerResponseOutput() ModelContainerResponseOutput {
	return o
}

func (o ModelContainerResponseOutput) ToModelContainerResponseOutputWithContext(ctx context.Context) ModelContainerResponseOutput {
	return o
}

// The asset description text.
func (o ModelContainerResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelContainerResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The asset property dictionary.
func (o ModelContainerResponseOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v ModelContainerResponse) map[string]string { return v.Properties }).(pulumi.StringMapOutput)
}

// Tag dictionary. Tags can be added, removed, and updated.
func (o ModelContainerResponseOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v ModelContainerResponse) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Model asset version details.
type ModelVersionType struct {
	// ARM resource ID of the datastore where the asset is located.
	DatastoreId *string `pulumi:"datastoreId"`
	// The asset description text.
	Description *string `pulumi:"description"`
	// Mapping of model flavors to their properties.
	Flavors map[string]FlavorData `pulumi:"flavors"`
	// If the name version are system generated (anonymous registration).
	IsAnonymous *bool `pulumi:"isAnonymous"`
	// [Required] The path of the file/directory in the datastore.
	Path string `pulumi:"path"`
	// The asset property dictionary.
	Properties map[string]string `pulumi:"properties"`
	// Tag dictionary. Tags can be added, removed, and updated.
	Tags map[string]string `pulumi:"tags"`
}

// ModelVersionTypeInput is an input type that accepts ModelVersionTypeArgs and ModelVersionTypeOutput values.
// You can construct a concrete instance of `ModelVersionTypeInput` via:
//
//	ModelVersionTypeArgs{...}
type ModelVersionTypeInput interface {
	pulumi.Input

	ToModelVersionTypeOutput() ModelVersionTypeOutput
	ToModelVersionTypeOutputWithContext(context.Context) ModelVersionTypeOutput
}

// Model asset version details.
type ModelVersionTypeArgs struct {
	// ARM resource ID of the datastore where the asset is located.
	DatastoreId pulumi.StringPtrInput `pulumi:"datastoreId"`
	// The asset description text.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Mapping of model flavors to their properties.
	Flavors FlavorDataMapInput `pulumi:"flavors"`
	// If the name version are system generated (anonymous registration).
	IsAnonymous pulumi.BoolPtrInput `pulumi:"isAnonymous"`
	// [Required] The path of the file/directory in the datastore.
	Path pulumi.StringInput `pulumi:"path"`
	// The asset property dictionary.
	Properties pulumi.StringMapInput `pulumi:"properties"`
	// Tag dictionary. Tags can be added, removed, and updated.
	Tags pulumi.StringMapInput `pulumi:"tags"`
}

func (ModelVersionTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelVersionType)(nil)).Elem()
}

func (i ModelVersionTypeArgs) ToModelVersionTypeOutput() ModelVersionTypeOutput {
	return i.ToModelVersionTypeOutputWithContext(context.Background())
}

func (i ModelVersionTypeArgs) ToModelVersionTypeOutputWithContext(ctx context.Context) ModelVersionTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelVersionTypeOutput)
}

// Model asset version details.
type ModelVersionTypeOutput struct{ *pulumi.OutputState }

func (ModelVersionTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelVersionType)(nil)).Elem()
}

func (o ModelVersionTypeOutput) ToModelVersionTypeOutput() ModelVersionTypeOutput {
	return o
}

func (o ModelVersionTypeOutput) ToModelVersionTypeOutputWithContext(ctx context.Context) ModelVersionTypeOutput {
	return o
}

// ARM resource ID of the datastore where the asset is located.
func (o ModelVersionTypeOutput) DatastoreId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelVersionType) *string { return v.DatastoreId }).(pulumi.StringPtrOutput)
}

// The asset description text.
func (o ModelVersionTypeOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelVersionType) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Mapping of model flavors to their properties.
func (o ModelVersionTypeOutput) Flavors() FlavorDataMapOutput {
	return o.ApplyT(func(v ModelVersionType) map[string]FlavorData { return v.Flavors }).(FlavorDataMapOutput)
}

// If the name version are system generated (anonymous registration).
func (o ModelVersionTypeOutput) IsAnonymous() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ModelVersionType) *bool { return v.IsAnonymous }).(pulumi.BoolPtrOutput)
}

// [Required] The path of the file/directory in the datastore.
func (o ModelVersionTypeOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v ModelVersionType) string { return v.Path }).(pulumi.StringOutput)
}

// The asset property dictionary.
func (o ModelVersionTypeOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v ModelVersionType) map[string]string { return v.Properties }).(pulumi.StringMapOutput)
}

// Tag dictionary. Tags can be added, removed, and updated.
func (o ModelVersionTypeOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v ModelVersionType) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Model asset version details.
type ModelVersionResponse struct {
	// ARM resource ID of the datastore where the asset is located.
	DatastoreId *string `pulumi:"datastoreId"`
	// The asset description text.
	Description *string `pulumi:"description"`
	// Mapping of model flavors to their properties.
	Flavors map[string]FlavorDataResponse `pulumi:"flavors"`
	// If the name version are system generated (anonymous registration).
	IsAnonymous *bool `pulumi:"isAnonymous"`
	// [Required] The path of the file/directory in the datastore.
	Path string `pulumi:"path"`
	// The asset property dictionary.
	Properties map[string]string `pulumi:"properties"`
	// Tag dictionary. Tags can be added, removed, and updated.
	Tags map[string]string `pulumi:"tags"`
}

// Model asset version details.
type ModelVersionResponseOutput struct{ *pulumi.OutputState }

func (ModelVersionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelVersionResponse)(nil)).Elem()
}

func (o ModelVersionResponseOutput) ToModelVersionResponseOutput() ModelVersionResponseOutput {
	return o
}

func (o ModelVersionResponseOutput) ToModelVersionResponseOutputWithContext(ctx context.Context) ModelVersionResponseOutput {
	return o
}

// ARM resource ID of the datastore where the asset is located.
func (o ModelVersionResponseOutput) DatastoreId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelVersionResponse) *string { return v.DatastoreId }).(pulumi.StringPtrOutput)
}

// The asset description text.
func (o ModelVersionResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelVersionResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Mapping of model flavors to their properties.
func (o ModelVersionResponseOutput) Flavors() FlavorDataResponseMapOutput {
	return o.ApplyT(func(v ModelVersionResponse) map[string]FlavorDataResponse { return v.Flavors }).(FlavorDataResponseMapOutput)
}

// If the name version are system generated (anonymous registration).
func (o ModelVersionResponseOutput) IsAnonymous() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ModelVersionResponse) *bool { return v.IsAnonymous }).(pulumi.BoolPtrOutput)
}

// [Required] The path of the file/directory in the datastore.
func (o ModelVersionResponseOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v ModelVersionResponse) string { return v.Path }).(pulumi.StringOutput)
}

// The asset property dictionary.
func (o ModelVersionResponseOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v ModelVersionResponse) map[string]string { return v.Properties }).(pulumi.StringMapOutput)
}

// Tag dictionary. Tags can be added, removed, and updated.
func (o ModelVersionResponseOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v ModelVersionResponse) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// MPI distribution configuration.
type Mpi struct {
	// Enum to determine the job distribution type.
	// Expected value is 'Mpi'.
	DistributionType string `pulumi:"distributionType"`
	// Number of processes per MPI node.
	ProcessCountPerInstance *int `pulumi:"processCountPerInstance"`
}

// MpiInput is an input type that accepts MpiArgs and MpiOutput values.
// You can construct a concrete instance of `MpiInput` via:
//
//	MpiArgs{...}
type MpiInput interface {
	pulumi.Input

	ToMpiOutput() MpiOutput
	ToMpiOutputWithContext(context.Context) MpiOutput
}

// MPI distribution configuration.
type MpiArgs struct {
	// Enum to determine the job distribution type.
	// Expected value is 'Mpi'.
	DistributionType pulumi.StringInput `pulumi:"distributionType"`
	// Number of processes per MPI node.
	ProcessCountPerInstance pulumi.IntPtrInput `pulumi:"processCountPerInstance"`
}

func (MpiArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Mpi)(nil)).Elem()
}

func (i MpiArgs) ToMpiOutput() MpiOutput {
	return i.ToMpiOutputWithContext(context.Background())
}

func (i MpiArgs) ToMpiOutputWithContext(ctx context.Context) MpiOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MpiOutput)
}

func (i MpiArgs) ToMpiPtrOutput() MpiPtrOutput {
	return i.ToMpiPtrOutputWithContext(context.Background())
}

func (i MpiArgs) ToMpiPtrOutputWithContext(ctx context.Context) MpiPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MpiOutput).ToMpiPtrOutputWithContext(ctx)
}

// MpiPtrInput is an input type that accepts MpiArgs, MpiPtr and MpiPtrOutput values.
// You can construct a concrete instance of `MpiPtrInput` via:
//
//	        MpiArgs{...}
//
//	or:
//
//	        nil
type MpiPtrInput interface {
	pulumi.Input

	ToMpiPtrOutput() MpiPtrOutput
	ToMpiPtrOutputWithContext(context.Context) MpiPtrOutput
}

type mpiPtrType MpiArgs

func MpiPtr(v *MpiArgs) MpiPtrInput {
	return (*mpiPtrType)(v)
}

func (*mpiPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Mpi)(nil)).Elem()
}

func (i *mpiPtrType) ToMpiPtrOutput() MpiPtrOutput {
	return i.ToMpiPtrOutputWithContext(context.Background())
}

func (i *mpiPtrType) ToMpiPtrOutputWithContext(ctx context.Context) MpiPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MpiPtrOutput)
}

// MPI distribution configuration.
type MpiOutput struct{ *pulumi.OutputState }

func (MpiOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Mpi)(nil)).Elem()
}

func (o MpiOutput) ToMpiOutput() MpiOutput {
	return o
}

func (o MpiOutput) ToMpiOutputWithContext(ctx context.Context) MpiOutput {
	return o
}

func (o MpiOutput) ToMpiPtrOutput() MpiPtrOutput {
	return o.ToMpiPtrOutputWithContext(context.Background())
}

func (o MpiOutput) ToMpiPtrOutputWithContext(ctx context.Context) MpiPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Mpi) *Mpi {
		return &v
	}).(MpiPtrOutput)
}

// Enum to determine the job distribution type.
// Expected value is 'Mpi'.
func (o MpiOutput) DistributionType() pulumi.StringOutput {
	return o.ApplyT(func(v Mpi) string { return v.DistributionType }).(pulumi.StringOutput)
}

// Number of processes per MPI node.
func (o MpiOutput) ProcessCountPerInstance() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Mpi) *int { return v.ProcessCountPerInstance }).(pulumi.IntPtrOutput)
}

type MpiPtrOutput struct{ *pulumi.OutputState }

func (MpiPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Mpi)(nil)).Elem()
}

func (o MpiPtrOutput) ToMpiPtrOutput() MpiPtrOutput {
	return o
}

func (o MpiPtrOutput) ToMpiPtrOutputWithContext(ctx context.Context) MpiPtrOutput {
	return o
}

func (o MpiPtrOutput) Elem() MpiOutput {
	return o.ApplyT(func(v *Mpi) Mpi {
		if v != nil {
			return *v
		}
		var ret Mpi
		return ret
	}).(MpiOutput)
}

// Enum to determine the job distribution type.
// Expected value is 'Mpi'.
func (o MpiPtrOutput) DistributionType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Mpi) *string {
		if v == nil {
			return nil
		}
		return &v.DistributionType
	}).(pulumi.StringPtrOutput)
}

// Number of processes per MPI node.
func (o MpiPtrOutput) ProcessCountPerInstance() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Mpi) *int {
		if v == nil {
			return nil
		}
		return v.ProcessCountPerInstance
	}).(pulumi.IntPtrOutput)
}

// MPI distribution configuration.
type MpiResponse struct {
	// Enum to determine the job distribution type.
	// Expected value is 'Mpi'.
	DistributionType string `pulumi:"distributionType"`
	// Number of processes per MPI node.
	ProcessCountPerInstance *int `pulumi:"processCountPerInstance"`
}

// MPI distribution configuration.
type MpiResponseOutput struct{ *pulumi.OutputState }

func (MpiResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MpiResponse)(nil)).Elem()
}

func (o MpiResponseOutput) ToMpiResponseOutput() MpiResponseOutput {
	return o
}

func (o MpiResponseOutput) ToMpiResponseOutputWithContext(ctx context.Context) MpiResponseOutput {
	return o
}

// Enum to determine the job distribution type.
// Expected value is 'Mpi'.
func (o MpiResponseOutput) DistributionType() pulumi.StringOutput {
	return o.ApplyT(func(v MpiResponse) string { return v.DistributionType }).(pulumi.StringOutput)
}

// Number of processes per MPI node.
func (o MpiResponseOutput) ProcessCountPerInstance() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MpiResponse) *int { return v.ProcessCountPerInstance }).(pulumi.IntPtrOutput)
}

type MpiResponsePtrOutput struct{ *pulumi.OutputState }

func (MpiResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MpiResponse)(nil)).Elem()
}

func (o MpiResponsePtrOutput) ToMpiResponsePtrOutput() MpiResponsePtrOutput {
	return o
}

func (o MpiResponsePtrOutput) ToMpiResponsePtrOutputWithContext(ctx context.Context) MpiResponsePtrOutput {
	return o
}

func (o MpiResponsePtrOutput) Elem() MpiResponseOutput {
	return o.ApplyT(func(v *MpiResponse) MpiResponse {
		if v != nil {
			return *v
		}
		var ret MpiResponse
		return ret
	}).(MpiResponseOutput)
}

// Enum to determine the job distribution type.
// Expected value is 'Mpi'.
func (o MpiResponsePtrOutput) DistributionType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MpiResponse) *string {
		if v == nil {
			return nil
		}
		return &v.DistributionType
	}).(pulumi.StringPtrOutput)
}

// Number of processes per MPI node.
func (o MpiResponsePtrOutput) ProcessCountPerInstance() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MpiResponse) *int {
		if v == nil {
			return nil
		}
		return v.ProcessCountPerInstance
	}).(pulumi.IntPtrOutput)
}

// Empty/none datastore credentials.
type NoneDatastoreCredentials struct {
	// Enum to determine the datastore credentials type.
	// Expected value is 'None'.
	CredentialsType string `pulumi:"credentialsType"`
	// Empty/none datastore secret.
	Secrets *NoneDatastoreSecrets `pulumi:"secrets"`
}

// NoneDatastoreCredentialsInput is an input type that accepts NoneDatastoreCredentialsArgs and NoneDatastoreCredentialsOutput values.
// You can construct a concrete instance of `NoneDatastoreCredentialsInput` via:
//
//	NoneDatastoreCredentialsArgs{...}
type NoneDatastoreCredentialsInput interface {
	pulumi.Input

	ToNoneDatastoreCredentialsOutput() NoneDatastoreCredentialsOutput
	ToNoneDatastoreCredentialsOutputWithContext(context.Context) NoneDatastoreCredentialsOutput
}

// Empty/none datastore credentials.
type NoneDatastoreCredentialsArgs struct {
	// Enum to determine the datastore credentials type.
	// Expected value is 'None'.
	CredentialsType pulumi.StringInput `pulumi:"credentialsType"`
	// Empty/none datastore secret.
	Secrets NoneDatastoreSecretsPtrInput `pulumi:"secrets"`
}

func (NoneDatastoreCredentialsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NoneDatastoreCredentials)(nil)).Elem()
}

func (i NoneDatastoreCredentialsArgs) ToNoneDatastoreCredentialsOutput() NoneDatastoreCredentialsOutput {
	return i.ToNoneDatastoreCredentialsOutputWithContext(context.Background())
}

func (i NoneDatastoreCredentialsArgs) ToNoneDatastoreCredentialsOutputWithContext(ctx context.Context) NoneDatastoreCredentialsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NoneDatastoreCredentialsOutput)
}

// Empty/none datastore credentials.
type NoneDatastoreCredentialsOutput struct{ *pulumi.OutputState }

func (NoneDatastoreCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NoneDatastoreCredentials)(nil)).Elem()
}

func (o NoneDatastoreCredentialsOutput) ToNoneDatastoreCredentialsOutput() NoneDatastoreCredentialsOutput {
	return o
}

func (o NoneDatastoreCredentialsOutput) ToNoneDatastoreCredentialsOutputWithContext(ctx context.Context) NoneDatastoreCredentialsOutput {
	return o
}

// Enum to determine the datastore credentials type.
// Expected value is 'None'.
func (o NoneDatastoreCredentialsOutput) CredentialsType() pulumi.StringOutput {
	return o.ApplyT(func(v NoneDatastoreCredentials) string { return v.CredentialsType }).(pulumi.StringOutput)
}

// Empty/none datastore secret.
func (o NoneDatastoreCredentialsOutput) Secrets() NoneDatastoreSecretsPtrOutput {
	return o.ApplyT(func(v NoneDatastoreCredentials) *NoneDatastoreSecrets { return v.Secrets }).(NoneDatastoreSecretsPtrOutput)
}

// Empty/none datastore credentials.
type NoneDatastoreCredentialsResponse struct {
	// Enum to determine the datastore credentials type.
	// Expected value is 'None'.
	CredentialsType string `pulumi:"credentialsType"`
}

// Empty/none datastore credentials.
type NoneDatastoreCredentialsResponseOutput struct{ *pulumi.OutputState }

func (NoneDatastoreCredentialsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NoneDatastoreCredentialsResponse)(nil)).Elem()
}

func (o NoneDatastoreCredentialsResponseOutput) ToNoneDatastoreCredentialsResponseOutput() NoneDatastoreCredentialsResponseOutput {
	return o
}

func (o NoneDatastoreCredentialsResponseOutput) ToNoneDatastoreCredentialsResponseOutputWithContext(ctx context.Context) NoneDatastoreCredentialsResponseOutput {
	return o
}

// Enum to determine the datastore credentials type.
// Expected value is 'None'.
func (o NoneDatastoreCredentialsResponseOutput) CredentialsType() pulumi.StringOutput {
	return o.ApplyT(func(v NoneDatastoreCredentialsResponse) string { return v.CredentialsType }).(pulumi.StringOutput)
}

// Empty/none datastore secret.
type NoneDatastoreSecrets struct {
	// Enum to determine the datastore secrets type.
	// Expected value is 'None'.
	SecretsType string `pulumi:"secretsType"`
}

// NoneDatastoreSecretsInput is an input type that accepts NoneDatastoreSecretsArgs and NoneDatastoreSecretsOutput values.
// You can construct a concrete instance of `NoneDatastoreSecretsInput` via:
//
//	NoneDatastoreSecretsArgs{...}
type NoneDatastoreSecretsInput interface {
	pulumi.Input

	ToNoneDatastoreSecretsOutput() NoneDatastoreSecretsOutput
	ToNoneDatastoreSecretsOutputWithContext(context.Context) NoneDatastoreSecretsOutput
}

// Empty/none datastore secret.
type NoneDatastoreSecretsArgs struct {
	// Enum to determine the datastore secrets type.
	// Expected value is 'None'.
	SecretsType pulumi.StringInput `pulumi:"secretsType"`
}

func (NoneDatastoreSecretsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NoneDatastoreSecrets)(nil)).Elem()
}

func (i NoneDatastoreSecretsArgs) ToNoneDatastoreSecretsOutput() NoneDatastoreSecretsOutput {
	return i.ToNoneDatastoreSecretsOutputWithContext(context.Background())
}

func (i NoneDatastoreSecretsArgs) ToNoneDatastoreSecretsOutputWithContext(ctx context.Context) NoneDatastoreSecretsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NoneDatastoreSecretsOutput)
}

func (i NoneDatastoreSecretsArgs) ToNoneDatastoreSecretsPtrOutput() NoneDatastoreSecretsPtrOutput {
	return i.ToNoneDatastoreSecretsPtrOutputWithContext(context.Background())
}

func (i NoneDatastoreSecretsArgs) ToNoneDatastoreSecretsPtrOutputWithContext(ctx context.Context) NoneDatastoreSecretsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NoneDatastoreSecretsOutput).ToNoneDatastoreSecretsPtrOutputWithContext(ctx)
}

// NoneDatastoreSecretsPtrInput is an input type that accepts NoneDatastoreSecretsArgs, NoneDatastoreSecretsPtr and NoneDatastoreSecretsPtrOutput values.
// You can construct a concrete instance of `NoneDatastoreSecretsPtrInput` via:
//
//	        NoneDatastoreSecretsArgs{...}
//
//	or:
//
//	        nil
type NoneDatastoreSecretsPtrInput interface {
	pulumi.Input

	ToNoneDatastoreSecretsPtrOutput() NoneDatastoreSecretsPtrOutput
	ToNoneDatastoreSecretsPtrOutputWithContext(context.Context) NoneDatastoreSecretsPtrOutput
}

type noneDatastoreSecretsPtrType NoneDatastoreSecretsArgs

func NoneDatastoreSecretsPtr(v *NoneDatastoreSecretsArgs) NoneDatastoreSecretsPtrInput {
	return (*noneDatastoreSecretsPtrType)(v)
}

func (*noneDatastoreSecretsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NoneDatastoreSecrets)(nil)).Elem()
}

func (i *noneDatastoreSecretsPtrType) ToNoneDatastoreSecretsPtrOutput() NoneDatastoreSecretsPtrOutput {
	return i.ToNoneDatastoreSecretsPtrOutputWithContext(context.Background())
}

func (i *noneDatastoreSecretsPtrType) ToNoneDatastoreSecretsPtrOutputWithContext(ctx context.Context) NoneDatastoreSecretsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NoneDatastoreSecretsPtrOutput)
}

// Empty/none datastore secret.
type NoneDatastoreSecretsOutput struct{ *pulumi.OutputState }

func (NoneDatastoreSecretsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NoneDatastoreSecrets)(nil)).Elem()
}

func (o NoneDatastoreSecretsOutput) ToNoneDatastoreSecretsOutput() NoneDatastoreSecretsOutput {
	return o
}

func (o NoneDatastoreSecretsOutput) ToNoneDatastoreSecretsOutputWithContext(ctx context.Context) NoneDatastoreSecretsOutput {
	return o
}

func (o NoneDatastoreSecretsOutput) ToNoneDatastoreSecretsPtrOutput() NoneDatastoreSecretsPtrOutput {
	return o.ToNoneDatastoreSecretsPtrOutputWithContext(context.Background())
}

func (o NoneDatastoreSecretsOutput) ToNoneDatastoreSecretsPtrOutputWithContext(ctx context.Context) NoneDatastoreSecretsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NoneDatastoreSecrets) *NoneDatastoreSecrets {
		return &v
	}).(NoneDatastoreSecretsPtrOutput)
}

// Enum to determine the datastore secrets type.
// Expected value is 'None'.
func (o NoneDatastoreSecretsOutput) SecretsType() pulumi.StringOutput {
	return o.ApplyT(func(v NoneDatastoreSecrets) string { return v.SecretsType }).(pulumi.StringOutput)
}

type NoneDatastoreSecretsPtrOutput struct{ *pulumi.OutputState }

func (NoneDatastoreSecretsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NoneDatastoreSecrets)(nil)).Elem()
}

func (o NoneDatastoreSecretsPtrOutput) ToNoneDatastoreSecretsPtrOutput() NoneDatastoreSecretsPtrOutput {
	return o
}

func (o NoneDatastoreSecretsPtrOutput) ToNoneDatastoreSecretsPtrOutputWithContext(ctx context.Context) NoneDatastoreSecretsPtrOutput {
	return o
}

func (o NoneDatastoreSecretsPtrOutput) Elem() NoneDatastoreSecretsOutput {
	return o.ApplyT(func(v *NoneDatastoreSecrets) NoneDatastoreSecrets {
		if v != nil {
			return *v
		}
		var ret NoneDatastoreSecrets
		return ret
	}).(NoneDatastoreSecretsOutput)
}

// Enum to determine the datastore secrets type.
// Expected value is 'None'.
func (o NoneDatastoreSecretsPtrOutput) SecretsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NoneDatastoreSecrets) *string {
		if v == nil {
			return nil
		}
		return &v.SecretsType
	}).(pulumi.StringPtrOutput)
}

// Optimization objective.
type Objective struct {
	// [Required] Defines supported metric goals for hyperparameter tuning
	Goal string `pulumi:"goal"`
	// [Required] Name of the metric to optimize.
	PrimaryMetric string `pulumi:"primaryMetric"`
}

// ObjectiveInput is an input type that accepts ObjectiveArgs and ObjectiveOutput values.
// You can construct a concrete instance of `ObjectiveInput` via:
//
//	ObjectiveArgs{...}
type ObjectiveInput interface {
	pulumi.Input

	ToObjectiveOutput() ObjectiveOutput
	ToObjectiveOutputWithContext(context.Context) ObjectiveOutput
}

// Optimization objective.
type ObjectiveArgs struct {
	// [Required] Defines supported metric goals for hyperparameter tuning
	Goal pulumi.StringInput `pulumi:"goal"`
	// [Required] Name of the metric to optimize.
	PrimaryMetric pulumi.StringInput `pulumi:"primaryMetric"`
}

func (ObjectiveArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Objective)(nil)).Elem()
}

func (i ObjectiveArgs) ToObjectiveOutput() ObjectiveOutput {
	return i.ToObjectiveOutputWithContext(context.Background())
}

func (i ObjectiveArgs) ToObjectiveOutputWithContext(ctx context.Context) ObjectiveOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObjectiveOutput)
}

// Optimization objective.
type ObjectiveOutput struct{ *pulumi.OutputState }

func (ObjectiveOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Objective)(nil)).Elem()
}

func (o ObjectiveOutput) ToObjectiveOutput() ObjectiveOutput {
	return o
}

func (o ObjectiveOutput) ToObjectiveOutputWithContext(ctx context.Context) ObjectiveOutput {
	return o
}

// [Required] Defines supported metric goals for hyperparameter tuning
func (o ObjectiveOutput) Goal() pulumi.StringOutput {
	return o.ApplyT(func(v Objective) string { return v.Goal }).(pulumi.StringOutput)
}

// [Required] Name of the metric to optimize.
func (o ObjectiveOutput) PrimaryMetric() pulumi.StringOutput {
	return o.ApplyT(func(v Objective) string { return v.PrimaryMetric }).(pulumi.StringOutput)
}

// Optimization objective.
type ObjectiveResponse struct {
	// [Required] Defines supported metric goals for hyperparameter tuning
	Goal string `pulumi:"goal"`
	// [Required] Name of the metric to optimize.
	PrimaryMetric string `pulumi:"primaryMetric"`
}

// Optimization objective.
type ObjectiveResponseOutput struct{ *pulumi.OutputState }

func (ObjectiveResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ObjectiveResponse)(nil)).Elem()
}

func (o ObjectiveResponseOutput) ToObjectiveResponseOutput() ObjectiveResponseOutput {
	return o
}

func (o ObjectiveResponseOutput) ToObjectiveResponseOutputWithContext(ctx context.Context) ObjectiveResponseOutput {
	return o
}

// [Required] Defines supported metric goals for hyperparameter tuning
func (o ObjectiveResponseOutput) Goal() pulumi.StringOutput {
	return o.ApplyT(func(v ObjectiveResponse) string { return v.Goal }).(pulumi.StringOutput)
}

// [Required] Name of the metric to optimize.
func (o ObjectiveResponseOutput) PrimaryMetric() pulumi.StringOutput {
	return o.ApplyT(func(v ObjectiveResponse) string { return v.PrimaryMetric }).(pulumi.StringOutput)
}

// Online endpoint configuration
type OnlineEndpointType struct {
	// [Required] Inference endpoint authentication mode type
	AuthMode string `pulumi:"authMode"`
	// Description of the inference endpoint.
	Description *string `pulumi:"description"`
	// EndpointAuthKeys to set initially on an Endpoint.
	// This property will always be returned as null. AuthKey values must be retrieved using the ListKeys API.
	Keys *EndpointAuthKeys `pulumi:"keys"`
	// Property dictionary. Properties can be added, but not removed or altered.
	Properties map[string]string `pulumi:"properties"`
	// ARM resource ID of the compute if it exists.
	// optional
	Target *string `pulumi:"target"`
	// Traffic rules on how the traffic will be routed across deployments.
	Traffic map[string]int `pulumi:"traffic"`
}

// OnlineEndpointTypeInput is an input type that accepts OnlineEndpointTypeArgs and OnlineEndpointTypeOutput values.
// You can construct a concrete instance of `OnlineEndpointTypeInput` via:
//
//	OnlineEndpointTypeArgs{...}
type OnlineEndpointTypeInput interface {
	pulumi.Input

	ToOnlineEndpointTypeOutput() OnlineEndpointTypeOutput
	ToOnlineEndpointTypeOutputWithContext(context.Context) OnlineEndpointTypeOutput
}

// Online endpoint configuration
type OnlineEndpointTypeArgs struct {
	// [Required] Inference endpoint authentication mode type
	AuthMode pulumi.StringInput `pulumi:"authMode"`
	// Description of the inference endpoint.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// EndpointAuthKeys to set initially on an Endpoint.
	// This property will always be returned as null. AuthKey values must be retrieved using the ListKeys API.
	Keys EndpointAuthKeysPtrInput `pulumi:"keys"`
	// Property dictionary. Properties can be added, but not removed or altered.
	Properties pulumi.StringMapInput `pulumi:"properties"`
	// ARM resource ID of the compute if it exists.
	// optional
	Target pulumi.StringPtrInput `pulumi:"target"`
	// Traffic rules on how the traffic will be routed across deployments.
	Traffic pulumi.IntMapInput `pulumi:"traffic"`
}

func (OnlineEndpointTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OnlineEndpointType)(nil)).Elem()
}

func (i OnlineEndpointTypeArgs) ToOnlineEndpointTypeOutput() OnlineEndpointTypeOutput {
	return i.ToOnlineEndpointTypeOutputWithContext(context.Background())
}

func (i OnlineEndpointTypeArgs) ToOnlineEndpointTypeOutputWithContext(ctx context.Context) OnlineEndpointTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OnlineEndpointTypeOutput)
}

// Online endpoint configuration
type OnlineEndpointTypeOutput struct{ *pulumi.OutputState }

func (OnlineEndpointTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OnlineEndpointType)(nil)).Elem()
}

func (o OnlineEndpointTypeOutput) ToOnlineEndpointTypeOutput() OnlineEndpointTypeOutput {
	return o
}

func (o OnlineEndpointTypeOutput) ToOnlineEndpointTypeOutputWithContext(ctx context.Context) OnlineEndpointTypeOutput {
	return o
}

// [Required] Inference endpoint authentication mode type
func (o OnlineEndpointTypeOutput) AuthMode() pulumi.StringOutput {
	return o.ApplyT(func(v OnlineEndpointType) string { return v.AuthMode }).(pulumi.StringOutput)
}

// Description of the inference endpoint.
func (o OnlineEndpointTypeOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OnlineEndpointType) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// EndpointAuthKeys to set initially on an Endpoint.
// This property will always be returned as null. AuthKey values must be retrieved using the ListKeys API.
func (o OnlineEndpointTypeOutput) Keys() EndpointAuthKeysPtrOutput {
	return o.ApplyT(func(v OnlineEndpointType) *EndpointAuthKeys { return v.Keys }).(EndpointAuthKeysPtrOutput)
}

// Property dictionary. Properties can be added, but not removed or altered.
func (o OnlineEndpointTypeOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v OnlineEndpointType) map[string]string { return v.Properties }).(pulumi.StringMapOutput)
}

// ARM resource ID of the compute if it exists.
// optional
func (o OnlineEndpointTypeOutput) Target() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OnlineEndpointType) *string { return v.Target }).(pulumi.StringPtrOutput)
}

// Traffic rules on how the traffic will be routed across deployments.
func (o OnlineEndpointTypeOutput) Traffic() pulumi.IntMapOutput {
	return o.ApplyT(func(v OnlineEndpointType) map[string]int { return v.Traffic }).(pulumi.IntMapOutput)
}

// Online endpoint configuration
type OnlineEndpointResponse struct {
	// [Required] Inference endpoint authentication mode type
	AuthMode string `pulumi:"authMode"`
	// Description of the inference endpoint.
	Description *string `pulumi:"description"`
	// Property dictionary. Properties can be added, but not removed or altered.
	Properties map[string]string `pulumi:"properties"`
	// State of endpoint provisioning.
	ProvisioningState string `pulumi:"provisioningState"`
	// Endpoint URI.
	ScoringUri string `pulumi:"scoringUri"`
	// Endpoint Swagger URI.
	SwaggerUri string `pulumi:"swaggerUri"`
	// ARM resource ID of the compute if it exists.
	// optional
	Target *string `pulumi:"target"`
	// Traffic rules on how the traffic will be routed across deployments.
	Traffic map[string]int `pulumi:"traffic"`
}

// Online endpoint configuration
type OnlineEndpointResponseOutput struct{ *pulumi.OutputState }

func (OnlineEndpointResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OnlineEndpointResponse)(nil)).Elem()
}

func (o OnlineEndpointResponseOutput) ToOnlineEndpointResponseOutput() OnlineEndpointResponseOutput {
	return o
}

func (o OnlineEndpointResponseOutput) ToOnlineEndpointResponseOutputWithContext(ctx context.Context) OnlineEndpointResponseOutput {
	return o
}

// [Required] Inference endpoint authentication mode type
func (o OnlineEndpointResponseOutput) AuthMode() pulumi.StringOutput {
	return o.ApplyT(func(v OnlineEndpointResponse) string { return v.AuthMode }).(pulumi.StringOutput)
}

// Description of the inference endpoint.
func (o OnlineEndpointResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OnlineEndpointResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Property dictionary. Properties can be added, but not removed or altered.
func (o OnlineEndpointResponseOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v OnlineEndpointResponse) map[string]string { return v.Properties }).(pulumi.StringMapOutput)
}

// State of endpoint provisioning.
func (o OnlineEndpointResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v OnlineEndpointResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Endpoint URI.
func (o OnlineEndpointResponseOutput) ScoringUri() pulumi.StringOutput {
	return o.ApplyT(func(v OnlineEndpointResponse) string { return v.ScoringUri }).(pulumi.StringOutput)
}

// Endpoint Swagger URI.
func (o OnlineEndpointResponseOutput) SwaggerUri() pulumi.StringOutput {
	return o.ApplyT(func(v OnlineEndpointResponse) string { return v.SwaggerUri }).(pulumi.StringOutput)
}

// ARM resource ID of the compute if it exists.
// optional
func (o OnlineEndpointResponseOutput) Target() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OnlineEndpointResponse) *string { return v.Target }).(pulumi.StringPtrOutput)
}

// Traffic rules on how the traffic will be routed across deployments.
func (o OnlineEndpointResponseOutput) Traffic() pulumi.IntMapOutput {
	return o.ApplyT(func(v OnlineEndpointResponse) map[string]int { return v.Traffic }).(pulumi.IntMapOutput)
}

// Online deployment scoring requests configuration.
type OnlineRequestSettings struct {
	// The number of requests allowed to queue at once for this deployment.
	MaxConcurrentRequestsPerInstance *int `pulumi:"maxConcurrentRequestsPerInstance"`
	// The maximum queue wait time in ISO 8601 format. Supports millisecond precision.
	MaxQueueWait *string `pulumi:"maxQueueWait"`
	// The request timeout in ISO 8601 format. Supports millisecond precision.
	RequestTimeout *string `pulumi:"requestTimeout"`
}

// OnlineRequestSettingsInput is an input type that accepts OnlineRequestSettingsArgs and OnlineRequestSettingsOutput values.
// You can construct a concrete instance of `OnlineRequestSettingsInput` via:
//
//	OnlineRequestSettingsArgs{...}
type OnlineRequestSettingsInput interface {
	pulumi.Input

	ToOnlineRequestSettingsOutput() OnlineRequestSettingsOutput
	ToOnlineRequestSettingsOutputWithContext(context.Context) OnlineRequestSettingsOutput
}

// Online deployment scoring requests configuration.
type OnlineRequestSettingsArgs struct {
	// The number of requests allowed to queue at once for this deployment.
	MaxConcurrentRequestsPerInstance pulumi.IntPtrInput `pulumi:"maxConcurrentRequestsPerInstance"`
	// The maximum queue wait time in ISO 8601 format. Supports millisecond precision.
	MaxQueueWait pulumi.StringPtrInput `pulumi:"maxQueueWait"`
	// The request timeout in ISO 8601 format. Supports millisecond precision.
	RequestTimeout pulumi.StringPtrInput `pulumi:"requestTimeout"`
}

func (OnlineRequestSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OnlineRequestSettings)(nil)).Elem()
}

func (i OnlineRequestSettingsArgs) ToOnlineRequestSettingsOutput() OnlineRequestSettingsOutput {
	return i.ToOnlineRequestSettingsOutputWithContext(context.Background())
}

func (i OnlineRequestSettingsArgs) ToOnlineRequestSettingsOutputWithContext(ctx context.Context) OnlineRequestSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OnlineRequestSettingsOutput)
}

func (i OnlineRequestSettingsArgs) ToOnlineRequestSettingsPtrOutput() OnlineRequestSettingsPtrOutput {
	return i.ToOnlineRequestSettingsPtrOutputWithContext(context.Background())
}

func (i OnlineRequestSettingsArgs) ToOnlineRequestSettingsPtrOutputWithContext(ctx context.Context) OnlineRequestSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OnlineRequestSettingsOutput).ToOnlineRequestSettingsPtrOutputWithContext(ctx)
}

// OnlineRequestSettingsPtrInput is an input type that accepts OnlineRequestSettingsArgs, OnlineRequestSettingsPtr and OnlineRequestSettingsPtrOutput values.
// You can construct a concrete instance of `OnlineRequestSettingsPtrInput` via:
//
//	        OnlineRequestSettingsArgs{...}
//
//	or:
//
//	        nil
type OnlineRequestSettingsPtrInput interface {
	pulumi.Input

	ToOnlineRequestSettingsPtrOutput() OnlineRequestSettingsPtrOutput
	ToOnlineRequestSettingsPtrOutputWithContext(context.Context) OnlineRequestSettingsPtrOutput
}

type onlineRequestSettingsPtrType OnlineRequestSettingsArgs

func OnlineRequestSettingsPtr(v *OnlineRequestSettingsArgs) OnlineRequestSettingsPtrInput {
	return (*onlineRequestSettingsPtrType)(v)
}

func (*onlineRequestSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OnlineRequestSettings)(nil)).Elem()
}

func (i *onlineRequestSettingsPtrType) ToOnlineRequestSettingsPtrOutput() OnlineRequestSettingsPtrOutput {
	return i.ToOnlineRequestSettingsPtrOutputWithContext(context.Background())
}

func (i *onlineRequestSettingsPtrType) ToOnlineRequestSettingsPtrOutputWithContext(ctx context.Context) OnlineRequestSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OnlineRequestSettingsPtrOutput)
}

// Online deployment scoring requests configuration.
type OnlineRequestSettingsOutput struct{ *pulumi.OutputState }

func (OnlineRequestSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OnlineRequestSettings)(nil)).Elem()
}

func (o OnlineRequestSettingsOutput) ToOnlineRequestSettingsOutput() OnlineRequestSettingsOutput {
	return o
}

func (o OnlineRequestSettingsOutput) ToOnlineRequestSettingsOutputWithContext(ctx context.Context) OnlineRequestSettingsOutput {
	return o
}

func (o OnlineRequestSettingsOutput) ToOnlineRequestSettingsPtrOutput() OnlineRequestSettingsPtrOutput {
	return o.ToOnlineRequestSettingsPtrOutputWithContext(context.Background())
}

func (o OnlineRequestSettingsOutput) ToOnlineRequestSettingsPtrOutputWithContext(ctx context.Context) OnlineRequestSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OnlineRequestSettings) *OnlineRequestSettings {
		return &v
	}).(OnlineRequestSettingsPtrOutput)
}

// The number of requests allowed to queue at once for this deployment.
func (o OnlineRequestSettingsOutput) MaxConcurrentRequestsPerInstance() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OnlineRequestSettings) *int { return v.MaxConcurrentRequestsPerInstance }).(pulumi.IntPtrOutput)
}

// The maximum queue wait time in ISO 8601 format. Supports millisecond precision.
func (o OnlineRequestSettingsOutput) MaxQueueWait() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OnlineRequestSettings) *string { return v.MaxQueueWait }).(pulumi.StringPtrOutput)
}

// The request timeout in ISO 8601 format. Supports millisecond precision.
func (o OnlineRequestSettingsOutput) RequestTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OnlineRequestSettings) *string { return v.RequestTimeout }).(pulumi.StringPtrOutput)
}

type OnlineRequestSettingsPtrOutput struct{ *pulumi.OutputState }

func (OnlineRequestSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OnlineRequestSettings)(nil)).Elem()
}

func (o OnlineRequestSettingsPtrOutput) ToOnlineRequestSettingsPtrOutput() OnlineRequestSettingsPtrOutput {
	return o
}

func (o OnlineRequestSettingsPtrOutput) ToOnlineRequestSettingsPtrOutputWithContext(ctx context.Context) OnlineRequestSettingsPtrOutput {
	return o
}

func (o OnlineRequestSettingsPtrOutput) Elem() OnlineRequestSettingsOutput {
	return o.ApplyT(func(v *OnlineRequestSettings) OnlineRequestSettings {
		if v != nil {
			return *v
		}
		var ret OnlineRequestSettings
		return ret
	}).(OnlineRequestSettingsOutput)
}

// The number of requests allowed to queue at once for this deployment.
func (o OnlineRequestSettingsPtrOutput) MaxConcurrentRequestsPerInstance() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *OnlineRequestSettings) *int {
		if v == nil {
			return nil
		}
		return v.MaxConcurrentRequestsPerInstance
	}).(pulumi.IntPtrOutput)
}

// The maximum queue wait time in ISO 8601 format. Supports millisecond precision.
func (o OnlineRequestSettingsPtrOutput) MaxQueueWait() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OnlineRequestSettings) *string {
		if v == nil {
			return nil
		}
		return v.MaxQueueWait
	}).(pulumi.StringPtrOutput)
}

// The request timeout in ISO 8601 format. Supports millisecond precision.
func (o OnlineRequestSettingsPtrOutput) RequestTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OnlineRequestSettings) *string {
		if v == nil {
			return nil
		}
		return v.RequestTimeout
	}).(pulumi.StringPtrOutput)
}

// Online deployment scoring requests configuration.
type OnlineRequestSettingsResponse struct {
	// The number of requests allowed to queue at once for this deployment.
	MaxConcurrentRequestsPerInstance *int `pulumi:"maxConcurrentRequestsPerInstance"`
	// The maximum queue wait time in ISO 8601 format. Supports millisecond precision.
	MaxQueueWait *string `pulumi:"maxQueueWait"`
	// The request timeout in ISO 8601 format. Supports millisecond precision.
	RequestTimeout *string `pulumi:"requestTimeout"`
}

// Online deployment scoring requests configuration.
type OnlineRequestSettingsResponseOutput struct{ *pulumi.OutputState }

func (OnlineRequestSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OnlineRequestSettingsResponse)(nil)).Elem()
}

func (o OnlineRequestSettingsResponseOutput) ToOnlineRequestSettingsResponseOutput() OnlineRequestSettingsResponseOutput {
	return o
}

func (o OnlineRequestSettingsResponseOutput) ToOnlineRequestSettingsResponseOutputWithContext(ctx context.Context) OnlineRequestSettingsResponseOutput {
	return o
}

// The number of requests allowed to queue at once for this deployment.
func (o OnlineRequestSettingsResponseOutput) MaxConcurrentRequestsPerInstance() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OnlineRequestSettingsResponse) *int { return v.MaxConcurrentRequestsPerInstance }).(pulumi.IntPtrOutput)
}

// The maximum queue wait time in ISO 8601 format. Supports millisecond precision.
func (o OnlineRequestSettingsResponseOutput) MaxQueueWait() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OnlineRequestSettingsResponse) *string { return v.MaxQueueWait }).(pulumi.StringPtrOutput)
}

// The request timeout in ISO 8601 format. Supports millisecond precision.
func (o OnlineRequestSettingsResponseOutput) RequestTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OnlineRequestSettingsResponse) *string { return v.RequestTimeout }).(pulumi.StringPtrOutput)
}

type OnlineRequestSettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (OnlineRequestSettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OnlineRequestSettingsResponse)(nil)).Elem()
}

func (o OnlineRequestSettingsResponsePtrOutput) ToOnlineRequestSettingsResponsePtrOutput() OnlineRequestSettingsResponsePtrOutput {
	return o
}

func (o OnlineRequestSettingsResponsePtrOutput) ToOnlineRequestSettingsResponsePtrOutputWithContext(ctx context.Context) OnlineRequestSettingsResponsePtrOutput {
	return o
}

func (o OnlineRequestSettingsResponsePtrOutput) Elem() OnlineRequestSettingsResponseOutput {
	return o.ApplyT(func(v *OnlineRequestSettingsResponse) OnlineRequestSettingsResponse {
		if v != nil {
			return *v
		}
		var ret OnlineRequestSettingsResponse
		return ret
	}).(OnlineRequestSettingsResponseOutput)
}

// The number of requests allowed to queue at once for this deployment.
func (o OnlineRequestSettingsResponsePtrOutput) MaxConcurrentRequestsPerInstance() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *OnlineRequestSettingsResponse) *int {
		if v == nil {
			return nil
		}
		return v.MaxConcurrentRequestsPerInstance
	}).(pulumi.IntPtrOutput)
}

// The maximum queue wait time in ISO 8601 format. Supports millisecond precision.
func (o OnlineRequestSettingsResponsePtrOutput) MaxQueueWait() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OnlineRequestSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.MaxQueueWait
	}).(pulumi.StringPtrOutput)
}

// The request timeout in ISO 8601 format. Supports millisecond precision.
func (o OnlineRequestSettingsResponsePtrOutput) RequestTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OnlineRequestSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.RequestTimeout
	}).(pulumi.StringPtrOutput)
}

type OutputDataBinding struct {
	// ARM resource ID of the datastore where the data output will be stored.
	DatastoreId *string `pulumi:"datastoreId"`
	// Mechanism for data movement to datastore.
	Mode *string `pulumi:"mode"`
	// Location of data inside the container process.
	PathOnCompute *string `pulumi:"pathOnCompute"`
	// Path within the datastore to the data.
	PathOnDatastore *string `pulumi:"pathOnDatastore"`
}

// OutputDataBindingInput is an input type that accepts OutputDataBindingArgs and OutputDataBindingOutput values.
// You can construct a concrete instance of `OutputDataBindingInput` via:
//
//	OutputDataBindingArgs{...}
type OutputDataBindingInput interface {
	pulumi.Input

	ToOutputDataBindingOutput() OutputDataBindingOutput
	ToOutputDataBindingOutputWithContext(context.Context) OutputDataBindingOutput
}

type OutputDataBindingArgs struct {
	// ARM resource ID of the datastore where the data output will be stored.
	DatastoreId pulumi.StringPtrInput `pulumi:"datastoreId"`
	// Mechanism for data movement to datastore.
	Mode pulumi.StringPtrInput `pulumi:"mode"`
	// Location of data inside the container process.
	PathOnCompute pulumi.StringPtrInput `pulumi:"pathOnCompute"`
	// Path within the datastore to the data.
	PathOnDatastore pulumi.StringPtrInput `pulumi:"pathOnDatastore"`
}

func (OutputDataBindingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OutputDataBinding)(nil)).Elem()
}

func (i OutputDataBindingArgs) ToOutputDataBindingOutput() OutputDataBindingOutput {
	return i.ToOutputDataBindingOutputWithContext(context.Background())
}

func (i OutputDataBindingArgs) ToOutputDataBindingOutputWithContext(ctx context.Context) OutputDataBindingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OutputDataBindingOutput)
}

// OutputDataBindingMapInput is an input type that accepts OutputDataBindingMap and OutputDataBindingMapOutput values.
// You can construct a concrete instance of `OutputDataBindingMapInput` via:
//
//	OutputDataBindingMap{ "key": OutputDataBindingArgs{...} }
type OutputDataBindingMapInput interface {
	pulumi.Input

	ToOutputDataBindingMapOutput() OutputDataBindingMapOutput
	ToOutputDataBindingMapOutputWithContext(context.Context) OutputDataBindingMapOutput
}

type OutputDataBindingMap map[string]OutputDataBindingInput

func (OutputDataBindingMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]OutputDataBinding)(nil)).Elem()
}

func (i OutputDataBindingMap) ToOutputDataBindingMapOutput() OutputDataBindingMapOutput {
	return i.ToOutputDataBindingMapOutputWithContext(context.Background())
}

func (i OutputDataBindingMap) ToOutputDataBindingMapOutputWithContext(ctx context.Context) OutputDataBindingMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OutputDataBindingMapOutput)
}

type OutputDataBindingOutput struct{ *pulumi.OutputState }

func (OutputDataBindingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OutputDataBinding)(nil)).Elem()
}

func (o OutputDataBindingOutput) ToOutputDataBindingOutput() OutputDataBindingOutput {
	return o
}

func (o OutputDataBindingOutput) ToOutputDataBindingOutputWithContext(ctx context.Context) OutputDataBindingOutput {
	return o
}

// ARM resource ID of the datastore where the data output will be stored.
func (o OutputDataBindingOutput) DatastoreId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OutputDataBinding) *string { return v.DatastoreId }).(pulumi.StringPtrOutput)
}

// Mechanism for data movement to datastore.
func (o OutputDataBindingOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OutputDataBinding) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

// Location of data inside the container process.
func (o OutputDataBindingOutput) PathOnCompute() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OutputDataBinding) *string { return v.PathOnCompute }).(pulumi.StringPtrOutput)
}

// Path within the datastore to the data.
func (o OutputDataBindingOutput) PathOnDatastore() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OutputDataBinding) *string { return v.PathOnDatastore }).(pulumi.StringPtrOutput)
}

type OutputDataBindingMapOutput struct{ *pulumi.OutputState }

func (OutputDataBindingMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]OutputDataBinding)(nil)).Elem()
}

func (o OutputDataBindingMapOutput) ToOutputDataBindingMapOutput() OutputDataBindingMapOutput {
	return o
}

func (o OutputDataBindingMapOutput) ToOutputDataBindingMapOutputWithContext(ctx context.Context) OutputDataBindingMapOutput {
	return o
}

func (o OutputDataBindingMapOutput) MapIndex(k pulumi.StringInput) OutputDataBindingOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) OutputDataBinding {
		return vs[0].(map[string]OutputDataBinding)[vs[1].(string)]
	}).(OutputDataBindingOutput)
}

type OutputDataBindingResponse struct {
	// ARM resource ID of the datastore where the data output will be stored.
	DatastoreId *string `pulumi:"datastoreId"`
	// Mechanism for data movement to datastore.
	Mode *string `pulumi:"mode"`
	// Location of data inside the container process.
	PathOnCompute *string `pulumi:"pathOnCompute"`
	// Path within the datastore to the data.
	PathOnDatastore *string `pulumi:"pathOnDatastore"`
}

type OutputDataBindingResponseOutput struct{ *pulumi.OutputState }

func (OutputDataBindingResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OutputDataBindingResponse)(nil)).Elem()
}

func (o OutputDataBindingResponseOutput) ToOutputDataBindingResponseOutput() OutputDataBindingResponseOutput {
	return o
}

func (o OutputDataBindingResponseOutput) ToOutputDataBindingResponseOutputWithContext(ctx context.Context) OutputDataBindingResponseOutput {
	return o
}

// ARM resource ID of the datastore where the data output will be stored.
func (o OutputDataBindingResponseOutput) DatastoreId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OutputDataBindingResponse) *string { return v.DatastoreId }).(pulumi.StringPtrOutput)
}

// Mechanism for data movement to datastore.
func (o OutputDataBindingResponseOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OutputDataBindingResponse) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

// Location of data inside the container process.
func (o OutputDataBindingResponseOutput) PathOnCompute() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OutputDataBindingResponse) *string { return v.PathOnCompute }).(pulumi.StringPtrOutput)
}

// Path within the datastore to the data.
func (o OutputDataBindingResponseOutput) PathOnDatastore() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OutputDataBindingResponse) *string { return v.PathOnDatastore }).(pulumi.StringPtrOutput)
}

type OutputDataBindingResponseMapOutput struct{ *pulumi.OutputState }

func (OutputDataBindingResponseMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]OutputDataBindingResponse)(nil)).Elem()
}

func (o OutputDataBindingResponseMapOutput) ToOutputDataBindingResponseMapOutput() OutputDataBindingResponseMapOutput {
	return o
}

func (o OutputDataBindingResponseMapOutput) ToOutputDataBindingResponseMapOutputWithContext(ctx context.Context) OutputDataBindingResponseMapOutput {
	return o
}

func (o OutputDataBindingResponseMapOutput) MapIndex(k pulumi.StringInput) OutputDataBindingResponseOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) OutputDataBindingResponse {
		return vs[0].(map[string]OutputDataBindingResponse)[vs[1].(string)]
	}).(OutputDataBindingResponseOutput)
}

// Reference to an asset via its path in a job output.
type OutputPathAssetReference struct {
	// ARM resource ID of the job.
	JobId *string `pulumi:"jobId"`
	// The path of the file/directory in the job output.
	Path *string `pulumi:"path"`
	// Enum to determine which reference method to use for an asset.
	// Expected value is 'OutputPath'.
	ReferenceType string `pulumi:"referenceType"`
}

// OutputPathAssetReferenceInput is an input type that accepts OutputPathAssetReferenceArgs and OutputPathAssetReferenceOutput values.
// You can construct a concrete instance of `OutputPathAssetReferenceInput` via:
//
//	OutputPathAssetReferenceArgs{...}
type OutputPathAssetReferenceInput interface {
	pulumi.Input

	ToOutputPathAssetReferenceOutput() OutputPathAssetReferenceOutput
	ToOutputPathAssetReferenceOutputWithContext(context.Context) OutputPathAssetReferenceOutput
}

// Reference to an asset via its path in a job output.
type OutputPathAssetReferenceArgs struct {
	// ARM resource ID of the job.
	JobId pulumi.StringPtrInput `pulumi:"jobId"`
	// The path of the file/directory in the job output.
	Path pulumi.StringPtrInput `pulumi:"path"`
	// Enum to determine which reference method to use for an asset.
	// Expected value is 'OutputPath'.
	ReferenceType pulumi.StringInput `pulumi:"referenceType"`
}

func (OutputPathAssetReferenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OutputPathAssetReference)(nil)).Elem()
}

func (i OutputPathAssetReferenceArgs) ToOutputPathAssetReferenceOutput() OutputPathAssetReferenceOutput {
	return i.ToOutputPathAssetReferenceOutputWithContext(context.Background())
}

func (i OutputPathAssetReferenceArgs) ToOutputPathAssetReferenceOutputWithContext(ctx context.Context) OutputPathAssetReferenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OutputPathAssetReferenceOutput)
}

func (i OutputPathAssetReferenceArgs) ToOutputPathAssetReferencePtrOutput() OutputPathAssetReferencePtrOutput {
	return i.ToOutputPathAssetReferencePtrOutputWithContext(context.Background())
}

func (i OutputPathAssetReferenceArgs) ToOutputPathAssetReferencePtrOutputWithContext(ctx context.Context) OutputPathAssetReferencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OutputPathAssetReferenceOutput).ToOutputPathAssetReferencePtrOutputWithContext(ctx)
}

// OutputPathAssetReferencePtrInput is an input type that accepts OutputPathAssetReferenceArgs, OutputPathAssetReferencePtr and OutputPathAssetReferencePtrOutput values.
// You can construct a concrete instance of `OutputPathAssetReferencePtrInput` via:
//
//	        OutputPathAssetReferenceArgs{...}
//
//	or:
//
//	        nil
type OutputPathAssetReferencePtrInput interface {
	pulumi.Input

	ToOutputPathAssetReferencePtrOutput() OutputPathAssetReferencePtrOutput
	ToOutputPathAssetReferencePtrOutputWithContext(context.Context) OutputPathAssetReferencePtrOutput
}

type outputPathAssetReferencePtrType OutputPathAssetReferenceArgs

func OutputPathAssetReferencePtr(v *OutputPathAssetReferenceArgs) OutputPathAssetReferencePtrInput {
	return (*outputPathAssetReferencePtrType)(v)
}

func (*outputPathAssetReferencePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OutputPathAssetReference)(nil)).Elem()
}

func (i *outputPathAssetReferencePtrType) ToOutputPathAssetReferencePtrOutput() OutputPathAssetReferencePtrOutput {
	return i.ToOutputPathAssetReferencePtrOutputWithContext(context.Background())
}

func (i *outputPathAssetReferencePtrType) ToOutputPathAssetReferencePtrOutputWithContext(ctx context.Context) OutputPathAssetReferencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OutputPathAssetReferencePtrOutput)
}

// Reference to an asset via its path in a job output.
type OutputPathAssetReferenceOutput struct{ *pulumi.OutputState }

func (OutputPathAssetReferenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OutputPathAssetReference)(nil)).Elem()
}

func (o OutputPathAssetReferenceOutput) ToOutputPathAssetReferenceOutput() OutputPathAssetReferenceOutput {
	return o
}

func (o OutputPathAssetReferenceOutput) ToOutputPathAssetReferenceOutputWithContext(ctx context.Context) OutputPathAssetReferenceOutput {
	return o
}

func (o OutputPathAssetReferenceOutput) ToOutputPathAssetReferencePtrOutput() OutputPathAssetReferencePtrOutput {
	return o.ToOutputPathAssetReferencePtrOutputWithContext(context.Background())
}

func (o OutputPathAssetReferenceOutput) ToOutputPathAssetReferencePtrOutputWithContext(ctx context.Context) OutputPathAssetReferencePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OutputPathAssetReference) *OutputPathAssetReference {
		return &v
	}).(OutputPathAssetReferencePtrOutput)
}

// ARM resource ID of the job.
func (o OutputPathAssetReferenceOutput) JobId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OutputPathAssetReference) *string { return v.JobId }).(pulumi.StringPtrOutput)
}

// The path of the file/directory in the job output.
func (o OutputPathAssetReferenceOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OutputPathAssetReference) *string { return v.Path }).(pulumi.StringPtrOutput)
}

// Enum to determine which reference method to use for an asset.
// Expected value is 'OutputPath'.
func (o OutputPathAssetReferenceOutput) ReferenceType() pulumi.StringOutput {
	return o.ApplyT(func(v OutputPathAssetReference) string { return v.ReferenceType }).(pulumi.StringOutput)
}

type OutputPathAssetReferencePtrOutput struct{ *pulumi.OutputState }

func (OutputPathAssetReferencePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OutputPathAssetReference)(nil)).Elem()
}

func (o OutputPathAssetReferencePtrOutput) ToOutputPathAssetReferencePtrOutput() OutputPathAssetReferencePtrOutput {
	return o
}

func (o OutputPathAssetReferencePtrOutput) ToOutputPathAssetReferencePtrOutputWithContext(ctx context.Context) OutputPathAssetReferencePtrOutput {
	return o
}

func (o OutputPathAssetReferencePtrOutput) Elem() OutputPathAssetReferenceOutput {
	return o.ApplyT(func(v *OutputPathAssetReference) OutputPathAssetReference {
		if v != nil {
			return *v
		}
		var ret OutputPathAssetReference
		return ret
	}).(OutputPathAssetReferenceOutput)
}

// ARM resource ID of the job.
func (o OutputPathAssetReferencePtrOutput) JobId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OutputPathAssetReference) *string {
		if v == nil {
			return nil
		}
		return v.JobId
	}).(pulumi.StringPtrOutput)
}

// The path of the file/directory in the job output.
func (o OutputPathAssetReferencePtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OutputPathAssetReference) *string {
		if v == nil {
			return nil
		}
		return v.Path
	}).(pulumi.StringPtrOutput)
}

// Enum to determine which reference method to use for an asset.
// Expected value is 'OutputPath'.
func (o OutputPathAssetReferencePtrOutput) ReferenceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OutputPathAssetReference) *string {
		if v == nil {
			return nil
		}
		return &v.ReferenceType
	}).(pulumi.StringPtrOutput)
}

// Reference to an asset via its path in a job output.
type OutputPathAssetReferenceResponse struct {
	// ARM resource ID of the job.
	JobId *string `pulumi:"jobId"`
	// The path of the file/directory in the job output.
	Path *string `pulumi:"path"`
	// Enum to determine which reference method to use for an asset.
	// Expected value is 'OutputPath'.
	ReferenceType string `pulumi:"referenceType"`
}

// Reference to an asset via its path in a job output.
type OutputPathAssetReferenceResponseOutput struct{ *pulumi.OutputState }

func (OutputPathAssetReferenceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OutputPathAssetReferenceResponse)(nil)).Elem()
}

func (o OutputPathAssetReferenceResponseOutput) ToOutputPathAssetReferenceResponseOutput() OutputPathAssetReferenceResponseOutput {
	return o
}

func (o OutputPathAssetReferenceResponseOutput) ToOutputPathAssetReferenceResponseOutputWithContext(ctx context.Context) OutputPathAssetReferenceResponseOutput {
	return o
}

// ARM resource ID of the job.
func (o OutputPathAssetReferenceResponseOutput) JobId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OutputPathAssetReferenceResponse) *string { return v.JobId }).(pulumi.StringPtrOutput)
}

// The path of the file/directory in the job output.
func (o OutputPathAssetReferenceResponseOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OutputPathAssetReferenceResponse) *string { return v.Path }).(pulumi.StringPtrOutput)
}

// Enum to determine which reference method to use for an asset.
// Expected value is 'OutputPath'.
func (o OutputPathAssetReferenceResponseOutput) ReferenceType() pulumi.StringOutput {
	return o.ApplyT(func(v OutputPathAssetReferenceResponse) string { return v.ReferenceType }).(pulumi.StringOutput)
}

type OutputPathAssetReferenceResponsePtrOutput struct{ *pulumi.OutputState }

func (OutputPathAssetReferenceResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OutputPathAssetReferenceResponse)(nil)).Elem()
}

func (o OutputPathAssetReferenceResponsePtrOutput) ToOutputPathAssetReferenceResponsePtrOutput() OutputPathAssetReferenceResponsePtrOutput {
	return o
}

func (o OutputPathAssetReferenceResponsePtrOutput) ToOutputPathAssetReferenceResponsePtrOutputWithContext(ctx context.Context) OutputPathAssetReferenceResponsePtrOutput {
	return o
}

func (o OutputPathAssetReferenceResponsePtrOutput) Elem() OutputPathAssetReferenceResponseOutput {
	return o.ApplyT(func(v *OutputPathAssetReferenceResponse) OutputPathAssetReferenceResponse {
		if v != nil {
			return *v
		}
		var ret OutputPathAssetReferenceResponse
		return ret
	}).(OutputPathAssetReferenceResponseOutput)
}

// ARM resource ID of the job.
func (o OutputPathAssetReferenceResponsePtrOutput) JobId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OutputPathAssetReferenceResponse) *string {
		if v == nil {
			return nil
		}
		return v.JobId
	}).(pulumi.StringPtrOutput)
}

// The path of the file/directory in the job output.
func (o OutputPathAssetReferenceResponsePtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OutputPathAssetReferenceResponse) *string {
		if v == nil {
			return nil
		}
		return v.Path
	}).(pulumi.StringPtrOutput)
}

// Enum to determine which reference method to use for an asset.
// Expected value is 'OutputPath'.
func (o OutputPathAssetReferenceResponsePtrOutput) ReferenceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OutputPathAssetReferenceResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ReferenceType
	}).(pulumi.StringPtrOutput)
}

// Deployment container liveness/readiness probe configuration.
type ProbeSettings struct {
	// The number of failures to allow before returning an unhealthy status.
	FailureThreshold *int `pulumi:"failureThreshold"`
	// The delay before the first probe in ISO 8601 format.
	InitialDelay *string `pulumi:"initialDelay"`
	// The length of time between probes in ISO 8601 format.
	Period *string `pulumi:"period"`
	// The number of successful probes before returning a healthy status.
	SuccessThreshold *int `pulumi:"successThreshold"`
	// The probe timeout in ISO 8601 format.
	Timeout *string `pulumi:"timeout"`
}

// ProbeSettingsInput is an input type that accepts ProbeSettingsArgs and ProbeSettingsOutput values.
// You can construct a concrete instance of `ProbeSettingsInput` via:
//
//	ProbeSettingsArgs{...}
type ProbeSettingsInput interface {
	pulumi.Input

	ToProbeSettingsOutput() ProbeSettingsOutput
	ToProbeSettingsOutputWithContext(context.Context) ProbeSettingsOutput
}

// Deployment container liveness/readiness probe configuration.
type ProbeSettingsArgs struct {
	// The number of failures to allow before returning an unhealthy status.
	FailureThreshold pulumi.IntPtrInput `pulumi:"failureThreshold"`
	// The delay before the first probe in ISO 8601 format.
	InitialDelay pulumi.StringPtrInput `pulumi:"initialDelay"`
	// The length of time between probes in ISO 8601 format.
	Period pulumi.StringPtrInput `pulumi:"period"`
	// The number of successful probes before returning a healthy status.
	SuccessThreshold pulumi.IntPtrInput `pulumi:"successThreshold"`
	// The probe timeout in ISO 8601 format.
	Timeout pulumi.StringPtrInput `pulumi:"timeout"`
}

func (ProbeSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProbeSettings)(nil)).Elem()
}

func (i ProbeSettingsArgs) ToProbeSettingsOutput() ProbeSettingsOutput {
	return i.ToProbeSettingsOutputWithContext(context.Background())
}

func (i ProbeSettingsArgs) ToProbeSettingsOutputWithContext(ctx context.Context) ProbeSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProbeSettingsOutput)
}

func (i ProbeSettingsArgs) ToProbeSettingsPtrOutput() ProbeSettingsPtrOutput {
	return i.ToProbeSettingsPtrOutputWithContext(context.Background())
}

func (i ProbeSettingsArgs) ToProbeSettingsPtrOutputWithContext(ctx context.Context) ProbeSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProbeSettingsOutput).ToProbeSettingsPtrOutputWithContext(ctx)
}

// ProbeSettingsPtrInput is an input type that accepts ProbeSettingsArgs, ProbeSettingsPtr and ProbeSettingsPtrOutput values.
// You can construct a concrete instance of `ProbeSettingsPtrInput` via:
//
//	        ProbeSettingsArgs{...}
//
//	or:
//
//	        nil
type ProbeSettingsPtrInput interface {
	pulumi.Input

	ToProbeSettingsPtrOutput() ProbeSettingsPtrOutput
	ToProbeSettingsPtrOutputWithContext(context.Context) ProbeSettingsPtrOutput
}

type probeSettingsPtrType ProbeSettingsArgs

func ProbeSettingsPtr(v *ProbeSettingsArgs) ProbeSettingsPtrInput {
	return (*probeSettingsPtrType)(v)
}

func (*probeSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProbeSettings)(nil)).Elem()
}

func (i *probeSettingsPtrType) ToProbeSettingsPtrOutput() ProbeSettingsPtrOutput {
	return i.ToProbeSettingsPtrOutputWithContext(context.Background())
}

func (i *probeSettingsPtrType) ToProbeSettingsPtrOutputWithContext(ctx context.Context) ProbeSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProbeSettingsPtrOutput)
}

// Deployment container liveness/readiness probe configuration.
type ProbeSettingsOutput struct{ *pulumi.OutputState }

func (ProbeSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProbeSettings)(nil)).Elem()
}

func (o ProbeSettingsOutput) ToProbeSettingsOutput() ProbeSettingsOutput {
	return o
}

func (o ProbeSettingsOutput) ToProbeSettingsOutputWithContext(ctx context.Context) ProbeSettingsOutput {
	return o
}

func (o ProbeSettingsOutput) ToProbeSettingsPtrOutput() ProbeSettingsPtrOutput {
	return o.ToProbeSettingsPtrOutputWithContext(context.Background())
}

func (o ProbeSettingsOutput) ToProbeSettingsPtrOutputWithContext(ctx context.Context) ProbeSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProbeSettings) *ProbeSettings {
		return &v
	}).(ProbeSettingsPtrOutput)
}

// The number of failures to allow before returning an unhealthy status.
func (o ProbeSettingsOutput) FailureThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProbeSettings) *int { return v.FailureThreshold }).(pulumi.IntPtrOutput)
}

// The delay before the first probe in ISO 8601 format.
func (o ProbeSettingsOutput) InitialDelay() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProbeSettings) *string { return v.InitialDelay }).(pulumi.StringPtrOutput)
}

// The length of time between probes in ISO 8601 format.
func (o ProbeSettingsOutput) Period() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProbeSettings) *string { return v.Period }).(pulumi.StringPtrOutput)
}

// The number of successful probes before returning a healthy status.
func (o ProbeSettingsOutput) SuccessThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProbeSettings) *int { return v.SuccessThreshold }).(pulumi.IntPtrOutput)
}

// The probe timeout in ISO 8601 format.
func (o ProbeSettingsOutput) Timeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProbeSettings) *string { return v.Timeout }).(pulumi.StringPtrOutput)
}

type ProbeSettingsPtrOutput struct{ *pulumi.OutputState }

func (ProbeSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProbeSettings)(nil)).Elem()
}

func (o ProbeSettingsPtrOutput) ToProbeSettingsPtrOutput() ProbeSettingsPtrOutput {
	return o
}

func (o ProbeSettingsPtrOutput) ToProbeSettingsPtrOutputWithContext(ctx context.Context) ProbeSettingsPtrOutput {
	return o
}

func (o ProbeSettingsPtrOutput) Elem() ProbeSettingsOutput {
	return o.ApplyT(func(v *ProbeSettings) ProbeSettings {
		if v != nil {
			return *v
		}
		var ret ProbeSettings
		return ret
	}).(ProbeSettingsOutput)
}

// The number of failures to allow before returning an unhealthy status.
func (o ProbeSettingsPtrOutput) FailureThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ProbeSettings) *int {
		if v == nil {
			return nil
		}
		return v.FailureThreshold
	}).(pulumi.IntPtrOutput)
}

// The delay before the first probe in ISO 8601 format.
func (o ProbeSettingsPtrOutput) InitialDelay() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProbeSettings) *string {
		if v == nil {
			return nil
		}
		return v.InitialDelay
	}).(pulumi.StringPtrOutput)
}

// The length of time between probes in ISO 8601 format.
func (o ProbeSettingsPtrOutput) Period() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProbeSettings) *string {
		if v == nil {
			return nil
		}
		return v.Period
	}).(pulumi.StringPtrOutput)
}

// The number of successful probes before returning a healthy status.
func (o ProbeSettingsPtrOutput) SuccessThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ProbeSettings) *int {
		if v == nil {
			return nil
		}
		return v.SuccessThreshold
	}).(pulumi.IntPtrOutput)
}

// The probe timeout in ISO 8601 format.
func (o ProbeSettingsPtrOutput) Timeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProbeSettings) *string {
		if v == nil {
			return nil
		}
		return v.Timeout
	}).(pulumi.StringPtrOutput)
}

// Deployment container liveness/readiness probe configuration.
type ProbeSettingsResponse struct {
	// The number of failures to allow before returning an unhealthy status.
	FailureThreshold *int `pulumi:"failureThreshold"`
	// The delay before the first probe in ISO 8601 format.
	InitialDelay *string `pulumi:"initialDelay"`
	// The length of time between probes in ISO 8601 format.
	Period *string `pulumi:"period"`
	// The number of successful probes before returning a healthy status.
	SuccessThreshold *int `pulumi:"successThreshold"`
	// The probe timeout in ISO 8601 format.
	Timeout *string `pulumi:"timeout"`
}

// Deployment container liveness/readiness probe configuration.
type ProbeSettingsResponseOutput struct{ *pulumi.OutputState }

func (ProbeSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProbeSettingsResponse)(nil)).Elem()
}

func (o ProbeSettingsResponseOutput) ToProbeSettingsResponseOutput() ProbeSettingsResponseOutput {
	return o
}

func (o ProbeSettingsResponseOutput) ToProbeSettingsResponseOutputWithContext(ctx context.Context) ProbeSettingsResponseOutput {
	return o
}

// The number of failures to allow before returning an unhealthy status.
func (o ProbeSettingsResponseOutput) FailureThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProbeSettingsResponse) *int { return v.FailureThreshold }).(pulumi.IntPtrOutput)
}

// The delay before the first probe in ISO 8601 format.
func (o ProbeSettingsResponseOutput) InitialDelay() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProbeSettingsResponse) *string { return v.InitialDelay }).(pulumi.StringPtrOutput)
}

// The length of time between probes in ISO 8601 format.
func (o ProbeSettingsResponseOutput) Period() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProbeSettingsResponse) *string { return v.Period }).(pulumi.StringPtrOutput)
}

// The number of successful probes before returning a healthy status.
func (o ProbeSettingsResponseOutput) SuccessThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProbeSettingsResponse) *int { return v.SuccessThreshold }).(pulumi.IntPtrOutput)
}

// The probe timeout in ISO 8601 format.
func (o ProbeSettingsResponseOutput) Timeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProbeSettingsResponse) *string { return v.Timeout }).(pulumi.StringPtrOutput)
}

type ProbeSettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (ProbeSettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProbeSettingsResponse)(nil)).Elem()
}

func (o ProbeSettingsResponsePtrOutput) ToProbeSettingsResponsePtrOutput() ProbeSettingsResponsePtrOutput {
	return o
}

func (o ProbeSettingsResponsePtrOutput) ToProbeSettingsResponsePtrOutputWithContext(ctx context.Context) ProbeSettingsResponsePtrOutput {
	return o
}

func (o ProbeSettingsResponsePtrOutput) Elem() ProbeSettingsResponseOutput {
	return o.ApplyT(func(v *ProbeSettingsResponse) ProbeSettingsResponse {
		if v != nil {
			return *v
		}
		var ret ProbeSettingsResponse
		return ret
	}).(ProbeSettingsResponseOutput)
}

// The number of failures to allow before returning an unhealthy status.
func (o ProbeSettingsResponsePtrOutput) FailureThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ProbeSettingsResponse) *int {
		if v == nil {
			return nil
		}
		return v.FailureThreshold
	}).(pulumi.IntPtrOutput)
}

// The delay before the first probe in ISO 8601 format.
func (o ProbeSettingsResponsePtrOutput) InitialDelay() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProbeSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.InitialDelay
	}).(pulumi.StringPtrOutput)
}

// The length of time between probes in ISO 8601 format.
func (o ProbeSettingsResponsePtrOutput) Period() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProbeSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.Period
	}).(pulumi.StringPtrOutput)
}

// The number of successful probes before returning a healthy status.
func (o ProbeSettingsResponsePtrOutput) SuccessThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ProbeSettingsResponse) *int {
		if v == nil {
			return nil
		}
		return v.SuccessThreshold
	}).(pulumi.IntPtrOutput)
}

// The probe timeout in ISO 8601 format.
func (o ProbeSettingsResponsePtrOutput) Timeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProbeSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.Timeout
	}).(pulumi.StringPtrOutput)
}

// Progress metrics definition
type ProgressMetricsResponse struct {
	// The completed datapoint count.
	CompletedDatapointCount float64 `pulumi:"completedDatapointCount"`
	// The time of last successful incremental dataset refresh in UTC.
	IncrementalDatasetLastRefreshTime string `pulumi:"incrementalDatasetLastRefreshTime"`
	// The skipped datapoint count.
	SkippedDatapointCount float64 `pulumi:"skippedDatapointCount"`
	// The total datapoint count.
	TotalDatapointCount float64 `pulumi:"totalDatapointCount"`
}

// Progress metrics definition
type ProgressMetricsResponseOutput struct{ *pulumi.OutputState }

func (ProgressMetricsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProgressMetricsResponse)(nil)).Elem()
}

func (o ProgressMetricsResponseOutput) ToProgressMetricsResponseOutput() ProgressMetricsResponseOutput {
	return o
}

func (o ProgressMetricsResponseOutput) ToProgressMetricsResponseOutputWithContext(ctx context.Context) ProgressMetricsResponseOutput {
	return o
}

// The completed datapoint count.
func (o ProgressMetricsResponseOutput) CompletedDatapointCount() pulumi.Float64Output {
	return o.ApplyT(func(v ProgressMetricsResponse) float64 { return v.CompletedDatapointCount }).(pulumi.Float64Output)
}

// The time of last successful incremental dataset refresh in UTC.
func (o ProgressMetricsResponseOutput) IncrementalDatasetLastRefreshTime() pulumi.StringOutput {
	return o.ApplyT(func(v ProgressMetricsResponse) string { return v.IncrementalDatasetLastRefreshTime }).(pulumi.StringOutput)
}

// The skipped datapoint count.
func (o ProgressMetricsResponseOutput) SkippedDatapointCount() pulumi.Float64Output {
	return o.ApplyT(func(v ProgressMetricsResponse) float64 { return v.SkippedDatapointCount }).(pulumi.Float64Output)
}

// The total datapoint count.
func (o ProgressMetricsResponseOutput) TotalDatapointCount() pulumi.Float64Output {
	return o.ApplyT(func(v ProgressMetricsResponse) float64 { return v.TotalDatapointCount }).(pulumi.Float64Output)
}

// PyTorch distribution configuration.
type PyTorch struct {
	// Enum to determine the job distribution type.
	// Expected value is 'PyTorch'.
	DistributionType string `pulumi:"distributionType"`
	// Total process count for the distributed job.
	ProcessCount *int `pulumi:"processCount"`
}

// PyTorchInput is an input type that accepts PyTorchArgs and PyTorchOutput values.
// You can construct a concrete instance of `PyTorchInput` via:
//
//	PyTorchArgs{...}
type PyTorchInput interface {
	pulumi.Input

	ToPyTorchOutput() PyTorchOutput
	ToPyTorchOutputWithContext(context.Context) PyTorchOutput
}

// PyTorch distribution configuration.
type PyTorchArgs struct {
	// Enum to determine the job distribution type.
	// Expected value is 'PyTorch'.
	DistributionType pulumi.StringInput `pulumi:"distributionType"`
	// Total process count for the distributed job.
	ProcessCount pulumi.IntPtrInput `pulumi:"processCount"`
}

func (PyTorchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PyTorch)(nil)).Elem()
}

func (i PyTorchArgs) ToPyTorchOutput() PyTorchOutput {
	return i.ToPyTorchOutputWithContext(context.Background())
}

func (i PyTorchArgs) ToPyTorchOutputWithContext(ctx context.Context) PyTorchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PyTorchOutput)
}

func (i PyTorchArgs) ToPyTorchPtrOutput() PyTorchPtrOutput {
	return i.ToPyTorchPtrOutputWithContext(context.Background())
}

func (i PyTorchArgs) ToPyTorchPtrOutputWithContext(ctx context.Context) PyTorchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PyTorchOutput).ToPyTorchPtrOutputWithContext(ctx)
}

// PyTorchPtrInput is an input type that accepts PyTorchArgs, PyTorchPtr and PyTorchPtrOutput values.
// You can construct a concrete instance of `PyTorchPtrInput` via:
//
//	        PyTorchArgs{...}
//
//	or:
//
//	        nil
type PyTorchPtrInput interface {
	pulumi.Input

	ToPyTorchPtrOutput() PyTorchPtrOutput
	ToPyTorchPtrOutputWithContext(context.Context) PyTorchPtrOutput
}

type pyTorchPtrType PyTorchArgs

func PyTorchPtr(v *PyTorchArgs) PyTorchPtrInput {
	return (*pyTorchPtrType)(v)
}

func (*pyTorchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PyTorch)(nil)).Elem()
}

func (i *pyTorchPtrType) ToPyTorchPtrOutput() PyTorchPtrOutput {
	return i.ToPyTorchPtrOutputWithContext(context.Background())
}

func (i *pyTorchPtrType) ToPyTorchPtrOutputWithContext(ctx context.Context) PyTorchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PyTorchPtrOutput)
}

// PyTorch distribution configuration.
type PyTorchOutput struct{ *pulumi.OutputState }

func (PyTorchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PyTorch)(nil)).Elem()
}

func (o PyTorchOutput) ToPyTorchOutput() PyTorchOutput {
	return o
}

func (o PyTorchOutput) ToPyTorchOutputWithContext(ctx context.Context) PyTorchOutput {
	return o
}

func (o PyTorchOutput) ToPyTorchPtrOutput() PyTorchPtrOutput {
	return o.ToPyTorchPtrOutputWithContext(context.Background())
}

func (o PyTorchOutput) ToPyTorchPtrOutputWithContext(ctx context.Context) PyTorchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PyTorch) *PyTorch {
		return &v
	}).(PyTorchPtrOutput)
}

// Enum to determine the job distribution type.
// Expected value is 'PyTorch'.
func (o PyTorchOutput) DistributionType() pulumi.StringOutput {
	return o.ApplyT(func(v PyTorch) string { return v.DistributionType }).(pulumi.StringOutput)
}

// Total process count for the distributed job.
func (o PyTorchOutput) ProcessCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PyTorch) *int { return v.ProcessCount }).(pulumi.IntPtrOutput)
}

type PyTorchPtrOutput struct{ *pulumi.OutputState }

func (PyTorchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PyTorch)(nil)).Elem()
}

func (o PyTorchPtrOutput) ToPyTorchPtrOutput() PyTorchPtrOutput {
	return o
}

func (o PyTorchPtrOutput) ToPyTorchPtrOutputWithContext(ctx context.Context) PyTorchPtrOutput {
	return o
}

func (o PyTorchPtrOutput) Elem() PyTorchOutput {
	return o.ApplyT(func(v *PyTorch) PyTorch {
		if v != nil {
			return *v
		}
		var ret PyTorch
		return ret
	}).(PyTorchOutput)
}

// Enum to determine the job distribution type.
// Expected value is 'PyTorch'.
func (o PyTorchPtrOutput) DistributionType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PyTorch) *string {
		if v == nil {
			return nil
		}
		return &v.DistributionType
	}).(pulumi.StringPtrOutput)
}

// Total process count for the distributed job.
func (o PyTorchPtrOutput) ProcessCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PyTorch) *int {
		if v == nil {
			return nil
		}
		return v.ProcessCount
	}).(pulumi.IntPtrOutput)
}

// PyTorch distribution configuration.
type PyTorchResponse struct {
	// Enum to determine the job distribution type.
	// Expected value is 'PyTorch'.
	DistributionType string `pulumi:"distributionType"`
	// Total process count for the distributed job.
	ProcessCount *int `pulumi:"processCount"`
}

// PyTorch distribution configuration.
type PyTorchResponseOutput struct{ *pulumi.OutputState }

func (PyTorchResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PyTorchResponse)(nil)).Elem()
}

func (o PyTorchResponseOutput) ToPyTorchResponseOutput() PyTorchResponseOutput {
	return o
}

func (o PyTorchResponseOutput) ToPyTorchResponseOutputWithContext(ctx context.Context) PyTorchResponseOutput {
	return o
}

// Enum to determine the job distribution type.
// Expected value is 'PyTorch'.
func (o PyTorchResponseOutput) DistributionType() pulumi.StringOutput {
	return o.ApplyT(func(v PyTorchResponse) string { return v.DistributionType }).(pulumi.StringOutput)
}

// Total process count for the distributed job.
func (o PyTorchResponseOutput) ProcessCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PyTorchResponse) *int { return v.ProcessCount }).(pulumi.IntPtrOutput)
}

type PyTorchResponsePtrOutput struct{ *pulumi.OutputState }

func (PyTorchResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PyTorchResponse)(nil)).Elem()
}

func (o PyTorchResponsePtrOutput) ToPyTorchResponsePtrOutput() PyTorchResponsePtrOutput {
	return o
}

func (o PyTorchResponsePtrOutput) ToPyTorchResponsePtrOutputWithContext(ctx context.Context) PyTorchResponsePtrOutput {
	return o
}

func (o PyTorchResponsePtrOutput) Elem() PyTorchResponseOutput {
	return o.ApplyT(func(v *PyTorchResponse) PyTorchResponse {
		if v != nil {
			return *v
		}
		var ret PyTorchResponse
		return ret
	}).(PyTorchResponseOutput)
}

// Enum to determine the job distribution type.
// Expected value is 'PyTorch'.
func (o PyTorchResponsePtrOutput) DistributionType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PyTorchResponse) *string {
		if v == nil {
			return nil
		}
		return &v.DistributionType
	}).(pulumi.StringPtrOutput)
}

// Total process count for the distributed job.
func (o PyTorchResponsePtrOutput) ProcessCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PyTorchResponse) *int {
		if v == nil {
			return nil
		}
		return v.ProcessCount
	}).(pulumi.IntPtrOutput)
}

// Service identity associated with a resource.
type ResourceIdentity struct {
	// Defines values for a ResourceIdentity's type.
	Type *string `pulumi:"type"`
	// Dictionary of the user assigned identities, key is ARM resource ID of the UAI.
	UserAssignedIdentities map[string]UserAssignedIdentityMeta `pulumi:"userAssignedIdentities"`
}

// ResourceIdentityInput is an input type that accepts ResourceIdentityArgs and ResourceIdentityOutput values.
// You can construct a concrete instance of `ResourceIdentityInput` via:
//
//	ResourceIdentityArgs{...}
type ResourceIdentityInput interface {
	pulumi.Input

	ToResourceIdentityOutput() ResourceIdentityOutput
	ToResourceIdentityOutputWithContext(context.Context) ResourceIdentityOutput
}

// Service identity associated with a resource.
type ResourceIdentityArgs struct {
	// Defines values for a ResourceIdentity's type.
	Type pulumi.StringPtrInput `pulumi:"type"`
	// Dictionary of the user assigned identities, key is ARM resource ID of the UAI.
	UserAssignedIdentities UserAssignedIdentityMetaMapInput `pulumi:"userAssignedIdentities"`
}

func (ResourceIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceIdentity)(nil)).Elem()
}

func (i ResourceIdentityArgs) ToResourceIdentityOutput() ResourceIdentityOutput {
	return i.ToResourceIdentityOutputWithContext(context.Background())
}

func (i ResourceIdentityArgs) ToResourceIdentityOutputWithContext(ctx context.Context) ResourceIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceIdentityOutput)
}

func (i ResourceIdentityArgs) ToResourceIdentityPtrOutput() ResourceIdentityPtrOutput {
	return i.ToResourceIdentityPtrOutputWithContext(context.Background())
}

func (i ResourceIdentityArgs) ToResourceIdentityPtrOutputWithContext(ctx context.Context) ResourceIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceIdentityOutput).ToResourceIdentityPtrOutputWithContext(ctx)
}

// ResourceIdentityPtrInput is an input type that accepts ResourceIdentityArgs, ResourceIdentityPtr and ResourceIdentityPtrOutput values.
// You can construct a concrete instance of `ResourceIdentityPtrInput` via:
//
//	        ResourceIdentityArgs{...}
//
//	or:
//
//	        nil
type ResourceIdentityPtrInput interface {
	pulumi.Input

	ToResourceIdentityPtrOutput() ResourceIdentityPtrOutput
	ToResourceIdentityPtrOutputWithContext(context.Context) ResourceIdentityPtrOutput
}

type resourceIdentityPtrType ResourceIdentityArgs

func ResourceIdentityPtr(v *ResourceIdentityArgs) ResourceIdentityPtrInput {
	return (*resourceIdentityPtrType)(v)
}

func (*resourceIdentityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceIdentity)(nil)).Elem()
}

func (i *resourceIdentityPtrType) ToResourceIdentityPtrOutput() ResourceIdentityPtrOutput {
	return i.ToResourceIdentityPtrOutputWithContext(context.Background())
}

func (i *resourceIdentityPtrType) ToResourceIdentityPtrOutputWithContext(ctx context.Context) ResourceIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceIdentityPtrOutput)
}

// Service identity associated with a resource.
type ResourceIdentityOutput struct{ *pulumi.OutputState }

func (ResourceIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceIdentity)(nil)).Elem()
}

func (o ResourceIdentityOutput) ToResourceIdentityOutput() ResourceIdentityOutput {
	return o
}

func (o ResourceIdentityOutput) ToResourceIdentityOutputWithContext(ctx context.Context) ResourceIdentityOutput {
	return o
}

func (o ResourceIdentityOutput) ToResourceIdentityPtrOutput() ResourceIdentityPtrOutput {
	return o.ToResourceIdentityPtrOutputWithContext(context.Background())
}

func (o ResourceIdentityOutput) ToResourceIdentityPtrOutputWithContext(ctx context.Context) ResourceIdentityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ResourceIdentity) *ResourceIdentity {
		return &v
	}).(ResourceIdentityPtrOutput)
}

// Defines values for a ResourceIdentity's type.
func (o ResourceIdentityOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceIdentity) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// Dictionary of the user assigned identities, key is ARM resource ID of the UAI.
func (o ResourceIdentityOutput) UserAssignedIdentities() UserAssignedIdentityMetaMapOutput {
	return o.ApplyT(func(v ResourceIdentity) map[string]UserAssignedIdentityMeta { return v.UserAssignedIdentities }).(UserAssignedIdentityMetaMapOutput)
}

type ResourceIdentityPtrOutput struct{ *pulumi.OutputState }

func (ResourceIdentityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceIdentity)(nil)).Elem()
}

func (o ResourceIdentityPtrOutput) ToResourceIdentityPtrOutput() ResourceIdentityPtrOutput {
	return o
}

func (o ResourceIdentityPtrOutput) ToResourceIdentityPtrOutputWithContext(ctx context.Context) ResourceIdentityPtrOutput {
	return o
}

func (o ResourceIdentityPtrOutput) Elem() ResourceIdentityOutput {
	return o.ApplyT(func(v *ResourceIdentity) ResourceIdentity {
		if v != nil {
			return *v
		}
		var ret ResourceIdentity
		return ret
	}).(ResourceIdentityOutput)
}

// Defines values for a ResourceIdentity's type.
func (o ResourceIdentityPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceIdentity) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// Dictionary of the user assigned identities, key is ARM resource ID of the UAI.
func (o ResourceIdentityPtrOutput) UserAssignedIdentities() UserAssignedIdentityMetaMapOutput {
	return o.ApplyT(func(v *ResourceIdentity) map[string]UserAssignedIdentityMeta {
		if v == nil {
			return nil
		}
		return v.UserAssignedIdentities
	}).(UserAssignedIdentityMetaMapOutput)
}

// Service identity associated with a resource.
type ResourceIdentityResponse struct {
	// Client ID that is used when authenticating.
	PrincipalId string `pulumi:"principalId"`
	// AAD Tenant where this identity lives.
	TenantId string `pulumi:"tenantId"`
	// Defines values for a ResourceIdentity's type.
	Type *string `pulumi:"type"`
	// Dictionary of the user assigned identities, key is ARM resource ID of the UAI.
	UserAssignedIdentities map[string]UserAssignedIdentityMetaResponse `pulumi:"userAssignedIdentities"`
}

// Service identity associated with a resource.
type ResourceIdentityResponseOutput struct{ *pulumi.OutputState }

func (ResourceIdentityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceIdentityResponse)(nil)).Elem()
}

func (o ResourceIdentityResponseOutput) ToResourceIdentityResponseOutput() ResourceIdentityResponseOutput {
	return o
}

func (o ResourceIdentityResponseOutput) ToResourceIdentityResponseOutputWithContext(ctx context.Context) ResourceIdentityResponseOutput {
	return o
}

// Client ID that is used when authenticating.
func (o ResourceIdentityResponseOutput) PrincipalId() pulumi.StringOutput {
	return o.ApplyT(func(v ResourceIdentityResponse) string { return v.PrincipalId }).(pulumi.StringOutput)
}

// AAD Tenant where this identity lives.
func (o ResourceIdentityResponseOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v ResourceIdentityResponse) string { return v.TenantId }).(pulumi.StringOutput)
}

// Defines values for a ResourceIdentity's type.
func (o ResourceIdentityResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceIdentityResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// Dictionary of the user assigned identities, key is ARM resource ID of the UAI.
func (o ResourceIdentityResponseOutput) UserAssignedIdentities() UserAssignedIdentityMetaResponseMapOutput {
	return o.ApplyT(func(v ResourceIdentityResponse) map[string]UserAssignedIdentityMetaResponse {
		return v.UserAssignedIdentities
	}).(UserAssignedIdentityMetaResponseMapOutput)
}

type ResourceIdentityResponsePtrOutput struct{ *pulumi.OutputState }

func (ResourceIdentityResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceIdentityResponse)(nil)).Elem()
}

func (o ResourceIdentityResponsePtrOutput) ToResourceIdentityResponsePtrOutput() ResourceIdentityResponsePtrOutput {
	return o
}

func (o ResourceIdentityResponsePtrOutput) ToResourceIdentityResponsePtrOutputWithContext(ctx context.Context) ResourceIdentityResponsePtrOutput {
	return o
}

func (o ResourceIdentityResponsePtrOutput) Elem() ResourceIdentityResponseOutput {
	return o.ApplyT(func(v *ResourceIdentityResponse) ResourceIdentityResponse {
		if v != nil {
			return *v
		}
		var ret ResourceIdentityResponse
		return ret
	}).(ResourceIdentityResponseOutput)
}

// Client ID that is used when authenticating.
func (o ResourceIdentityResponsePtrOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceIdentityResponse) *string {
		if v == nil {
			return nil
		}
		return &v.PrincipalId
	}).(pulumi.StringPtrOutput)
}

// AAD Tenant where this identity lives.
func (o ResourceIdentityResponsePtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceIdentityResponse) *string {
		if v == nil {
			return nil
		}
		return &v.TenantId
	}).(pulumi.StringPtrOutput)
}

// Defines values for a ResourceIdentity's type.
func (o ResourceIdentityResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceIdentityResponse) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// Dictionary of the user assigned identities, key is ARM resource ID of the UAI.
func (o ResourceIdentityResponsePtrOutput) UserAssignedIdentities() UserAssignedIdentityMetaResponseMapOutput {
	return o.ApplyT(func(v *ResourceIdentityResponse) map[string]UserAssignedIdentityMetaResponse {
		if v == nil {
			return nil
		}
		return v.UserAssignedIdentities
	}).(UserAssignedIdentityMetaResponseMapOutput)
}

type Route struct {
	// [Required] The path for the route.
	Path string `pulumi:"path"`
	// [Required] The port for the route.
	Port int `pulumi:"port"`
}

// RouteInput is an input type that accepts RouteArgs and RouteOutput values.
// You can construct a concrete instance of `RouteInput` via:
//
//	RouteArgs{...}
type RouteInput interface {
	pulumi.Input

	ToRouteOutput() RouteOutput
	ToRouteOutputWithContext(context.Context) RouteOutput
}

type RouteArgs struct {
	// [Required] The path for the route.
	Path pulumi.StringInput `pulumi:"path"`
	// [Required] The port for the route.
	Port pulumi.IntInput `pulumi:"port"`
}

func (RouteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Route)(nil)).Elem()
}

func (i RouteArgs) ToRouteOutput() RouteOutput {
	return i.ToRouteOutputWithContext(context.Background())
}

func (i RouteArgs) ToRouteOutputWithContext(ctx context.Context) RouteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteOutput)
}

func (i RouteArgs) ToRoutePtrOutput() RoutePtrOutput {
	return i.ToRoutePtrOutputWithContext(context.Background())
}

func (i RouteArgs) ToRoutePtrOutputWithContext(ctx context.Context) RoutePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteOutput).ToRoutePtrOutputWithContext(ctx)
}

// RoutePtrInput is an input type that accepts RouteArgs, RoutePtr and RoutePtrOutput values.
// You can construct a concrete instance of `RoutePtrInput` via:
//
//	        RouteArgs{...}
//
//	or:
//
//	        nil
type RoutePtrInput interface {
	pulumi.Input

	ToRoutePtrOutput() RoutePtrOutput
	ToRoutePtrOutputWithContext(context.Context) RoutePtrOutput
}

type routePtrType RouteArgs

func RoutePtr(v *RouteArgs) RoutePtrInput {
	return (*routePtrType)(v)
}

func (*routePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Route)(nil)).Elem()
}

func (i *routePtrType) ToRoutePtrOutput() RoutePtrOutput {
	return i.ToRoutePtrOutputWithContext(context.Background())
}

func (i *routePtrType) ToRoutePtrOutputWithContext(ctx context.Context) RoutePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoutePtrOutput)
}

type RouteOutput struct{ *pulumi.OutputState }

func (RouteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Route)(nil)).Elem()
}

func (o RouteOutput) ToRouteOutput() RouteOutput {
	return o
}

func (o RouteOutput) ToRouteOutputWithContext(ctx context.Context) RouteOutput {
	return o
}

func (o RouteOutput) ToRoutePtrOutput() RoutePtrOutput {
	return o.ToRoutePtrOutputWithContext(context.Background())
}

func (o RouteOutput) ToRoutePtrOutputWithContext(ctx context.Context) RoutePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Route) *Route {
		return &v
	}).(RoutePtrOutput)
}

// [Required] The path for the route.
func (o RouteOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v Route) string { return v.Path }).(pulumi.StringOutput)
}

// [Required] The port for the route.
func (o RouteOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v Route) int { return v.Port }).(pulumi.IntOutput)
}

type RoutePtrOutput struct{ *pulumi.OutputState }

func (RoutePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Route)(nil)).Elem()
}

func (o RoutePtrOutput) ToRoutePtrOutput() RoutePtrOutput {
	return o
}

func (o RoutePtrOutput) ToRoutePtrOutputWithContext(ctx context.Context) RoutePtrOutput {
	return o
}

func (o RoutePtrOutput) Elem() RouteOutput {
	return o.ApplyT(func(v *Route) Route {
		if v != nil {
			return *v
		}
		var ret Route
		return ret
	}).(RouteOutput)
}

// [Required] The path for the route.
func (o RoutePtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Route) *string {
		if v == nil {
			return nil
		}
		return &v.Path
	}).(pulumi.StringPtrOutput)
}

// [Required] The port for the route.
func (o RoutePtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Route) *int {
		if v == nil {
			return nil
		}
		return &v.Port
	}).(pulumi.IntPtrOutput)
}

type RouteResponse struct {
	// [Required] The path for the route.
	Path string `pulumi:"path"`
	// [Required] The port for the route.
	Port int `pulumi:"port"`
}

type RouteResponseOutput struct{ *pulumi.OutputState }

func (RouteResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteResponse)(nil)).Elem()
}

func (o RouteResponseOutput) ToRouteResponseOutput() RouteResponseOutput {
	return o
}

func (o RouteResponseOutput) ToRouteResponseOutputWithContext(ctx context.Context) RouteResponseOutput {
	return o
}

// [Required] The path for the route.
func (o RouteResponseOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v RouteResponse) string { return v.Path }).(pulumi.StringOutput)
}

// [Required] The port for the route.
func (o RouteResponseOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v RouteResponse) int { return v.Port }).(pulumi.IntOutput)
}

type RouteResponsePtrOutput struct{ *pulumi.OutputState }

func (RouteResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteResponse)(nil)).Elem()
}

func (o RouteResponsePtrOutput) ToRouteResponsePtrOutput() RouteResponsePtrOutput {
	return o
}

func (o RouteResponsePtrOutput) ToRouteResponsePtrOutputWithContext(ctx context.Context) RouteResponsePtrOutput {
	return o
}

func (o RouteResponsePtrOutput) Elem() RouteResponseOutput {
	return o.ApplyT(func(v *RouteResponse) RouteResponse {
		if v != nil {
			return *v
		}
		var ret RouteResponse
		return ret
	}).(RouteResponseOutput)
}

// [Required] The path for the route.
func (o RouteResponsePtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Path
	}).(pulumi.StringPtrOutput)
}

// [Required] The port for the route.
func (o RouteResponsePtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RouteResponse) *int {
		if v == nil {
			return nil
		}
		return &v.Port
	}).(pulumi.IntPtrOutput)
}

// SAS datastore credentials configuration.
type SasDatastoreCredentials struct {
	// Enum to determine the datastore credentials type.
	// Expected value is 'Sas'.
	CredentialsType string `pulumi:"credentialsType"`
	// Storage container secrets.
	Secrets *SasDatastoreSecrets `pulumi:"secrets"`
}

// SasDatastoreCredentialsInput is an input type that accepts SasDatastoreCredentialsArgs and SasDatastoreCredentialsOutput values.
// You can construct a concrete instance of `SasDatastoreCredentialsInput` via:
//
//	SasDatastoreCredentialsArgs{...}
type SasDatastoreCredentialsInput interface {
	pulumi.Input

	ToSasDatastoreCredentialsOutput() SasDatastoreCredentialsOutput
	ToSasDatastoreCredentialsOutputWithContext(context.Context) SasDatastoreCredentialsOutput
}

// SAS datastore credentials configuration.
type SasDatastoreCredentialsArgs struct {
	// Enum to determine the datastore credentials type.
	// Expected value is 'Sas'.
	CredentialsType pulumi.StringInput `pulumi:"credentialsType"`
	// Storage container secrets.
	Secrets SasDatastoreSecretsPtrInput `pulumi:"secrets"`
}

func (SasDatastoreCredentialsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SasDatastoreCredentials)(nil)).Elem()
}

func (i SasDatastoreCredentialsArgs) ToSasDatastoreCredentialsOutput() SasDatastoreCredentialsOutput {
	return i.ToSasDatastoreCredentialsOutputWithContext(context.Background())
}

func (i SasDatastoreCredentialsArgs) ToSasDatastoreCredentialsOutputWithContext(ctx context.Context) SasDatastoreCredentialsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SasDatastoreCredentialsOutput)
}

// SAS datastore credentials configuration.
type SasDatastoreCredentialsOutput struct{ *pulumi.OutputState }

func (SasDatastoreCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SasDatastoreCredentials)(nil)).Elem()
}

func (o SasDatastoreCredentialsOutput) ToSasDatastoreCredentialsOutput() SasDatastoreCredentialsOutput {
	return o
}

func (o SasDatastoreCredentialsOutput) ToSasDatastoreCredentialsOutputWithContext(ctx context.Context) SasDatastoreCredentialsOutput {
	return o
}

// Enum to determine the datastore credentials type.
// Expected value is 'Sas'.
func (o SasDatastoreCredentialsOutput) CredentialsType() pulumi.StringOutput {
	return o.ApplyT(func(v SasDatastoreCredentials) string { return v.CredentialsType }).(pulumi.StringOutput)
}

// Storage container secrets.
func (o SasDatastoreCredentialsOutput) Secrets() SasDatastoreSecretsPtrOutput {
	return o.ApplyT(func(v SasDatastoreCredentials) *SasDatastoreSecrets { return v.Secrets }).(SasDatastoreSecretsPtrOutput)
}

// SAS datastore credentials configuration.
type SasDatastoreCredentialsResponse struct {
	// Enum to determine the datastore credentials type.
	// Expected value is 'Sas'.
	CredentialsType string `pulumi:"credentialsType"`
}

// SAS datastore credentials configuration.
type SasDatastoreCredentialsResponseOutput struct{ *pulumi.OutputState }

func (SasDatastoreCredentialsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SasDatastoreCredentialsResponse)(nil)).Elem()
}

func (o SasDatastoreCredentialsResponseOutput) ToSasDatastoreCredentialsResponseOutput() SasDatastoreCredentialsResponseOutput {
	return o
}

func (o SasDatastoreCredentialsResponseOutput) ToSasDatastoreCredentialsResponseOutputWithContext(ctx context.Context) SasDatastoreCredentialsResponseOutput {
	return o
}

// Enum to determine the datastore credentials type.
// Expected value is 'Sas'.
func (o SasDatastoreCredentialsResponseOutput) CredentialsType() pulumi.StringOutput {
	return o.ApplyT(func(v SasDatastoreCredentialsResponse) string { return v.CredentialsType }).(pulumi.StringOutput)
}

// Datastore SAS secrets.
type SasDatastoreSecrets struct {
	// Storage container SAS token.
	SasToken *string `pulumi:"sasToken"`
	// Enum to determine the datastore secrets type.
	// Expected value is 'Sas'.
	SecretsType string `pulumi:"secretsType"`
}

// SasDatastoreSecretsInput is an input type that accepts SasDatastoreSecretsArgs and SasDatastoreSecretsOutput values.
// You can construct a concrete instance of `SasDatastoreSecretsInput` via:
//
//	SasDatastoreSecretsArgs{...}
type SasDatastoreSecretsInput interface {
	pulumi.Input

	ToSasDatastoreSecretsOutput() SasDatastoreSecretsOutput
	ToSasDatastoreSecretsOutputWithContext(context.Context) SasDatastoreSecretsOutput
}

// Datastore SAS secrets.
type SasDatastoreSecretsArgs struct {
	// Storage container SAS token.
	SasToken pulumi.StringPtrInput `pulumi:"sasToken"`
	// Enum to determine the datastore secrets type.
	// Expected value is 'Sas'.
	SecretsType pulumi.StringInput `pulumi:"secretsType"`
}

func (SasDatastoreSecretsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SasDatastoreSecrets)(nil)).Elem()
}

func (i SasDatastoreSecretsArgs) ToSasDatastoreSecretsOutput() SasDatastoreSecretsOutput {
	return i.ToSasDatastoreSecretsOutputWithContext(context.Background())
}

func (i SasDatastoreSecretsArgs) ToSasDatastoreSecretsOutputWithContext(ctx context.Context) SasDatastoreSecretsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SasDatastoreSecretsOutput)
}

func (i SasDatastoreSecretsArgs) ToSasDatastoreSecretsPtrOutput() SasDatastoreSecretsPtrOutput {
	return i.ToSasDatastoreSecretsPtrOutputWithContext(context.Background())
}

func (i SasDatastoreSecretsArgs) ToSasDatastoreSecretsPtrOutputWithContext(ctx context.Context) SasDatastoreSecretsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SasDatastoreSecretsOutput).ToSasDatastoreSecretsPtrOutputWithContext(ctx)
}

// SasDatastoreSecretsPtrInput is an input type that accepts SasDatastoreSecretsArgs, SasDatastoreSecretsPtr and SasDatastoreSecretsPtrOutput values.
// You can construct a concrete instance of `SasDatastoreSecretsPtrInput` via:
//
//	        SasDatastoreSecretsArgs{...}
//
//	or:
//
//	        nil
type SasDatastoreSecretsPtrInput interface {
	pulumi.Input

	ToSasDatastoreSecretsPtrOutput() SasDatastoreSecretsPtrOutput
	ToSasDatastoreSecretsPtrOutputWithContext(context.Context) SasDatastoreSecretsPtrOutput
}

type sasDatastoreSecretsPtrType SasDatastoreSecretsArgs

func SasDatastoreSecretsPtr(v *SasDatastoreSecretsArgs) SasDatastoreSecretsPtrInput {
	return (*sasDatastoreSecretsPtrType)(v)
}

func (*sasDatastoreSecretsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SasDatastoreSecrets)(nil)).Elem()
}

func (i *sasDatastoreSecretsPtrType) ToSasDatastoreSecretsPtrOutput() SasDatastoreSecretsPtrOutput {
	return i.ToSasDatastoreSecretsPtrOutputWithContext(context.Background())
}

func (i *sasDatastoreSecretsPtrType) ToSasDatastoreSecretsPtrOutputWithContext(ctx context.Context) SasDatastoreSecretsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SasDatastoreSecretsPtrOutput)
}

// Datastore SAS secrets.
type SasDatastoreSecretsOutput struct{ *pulumi.OutputState }

func (SasDatastoreSecretsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SasDatastoreSecrets)(nil)).Elem()
}

func (o SasDatastoreSecretsOutput) ToSasDatastoreSecretsOutput() SasDatastoreSecretsOutput {
	return o
}

func (o SasDatastoreSecretsOutput) ToSasDatastoreSecretsOutputWithContext(ctx context.Context) SasDatastoreSecretsOutput {
	return o
}

func (o SasDatastoreSecretsOutput) ToSasDatastoreSecretsPtrOutput() SasDatastoreSecretsPtrOutput {
	return o.ToSasDatastoreSecretsPtrOutputWithContext(context.Background())
}

func (o SasDatastoreSecretsOutput) ToSasDatastoreSecretsPtrOutputWithContext(ctx context.Context) SasDatastoreSecretsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SasDatastoreSecrets) *SasDatastoreSecrets {
		return &v
	}).(SasDatastoreSecretsPtrOutput)
}

// Storage container SAS token.
func (o SasDatastoreSecretsOutput) SasToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SasDatastoreSecrets) *string { return v.SasToken }).(pulumi.StringPtrOutput)
}

// Enum to determine the datastore secrets type.
// Expected value is 'Sas'.
func (o SasDatastoreSecretsOutput) SecretsType() pulumi.StringOutput {
	return o.ApplyT(func(v SasDatastoreSecrets) string { return v.SecretsType }).(pulumi.StringOutput)
}

type SasDatastoreSecretsPtrOutput struct{ *pulumi.OutputState }

func (SasDatastoreSecretsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SasDatastoreSecrets)(nil)).Elem()
}

func (o SasDatastoreSecretsPtrOutput) ToSasDatastoreSecretsPtrOutput() SasDatastoreSecretsPtrOutput {
	return o
}

func (o SasDatastoreSecretsPtrOutput) ToSasDatastoreSecretsPtrOutputWithContext(ctx context.Context) SasDatastoreSecretsPtrOutput {
	return o
}

func (o SasDatastoreSecretsPtrOutput) Elem() SasDatastoreSecretsOutput {
	return o.ApplyT(func(v *SasDatastoreSecrets) SasDatastoreSecrets {
		if v != nil {
			return *v
		}
		var ret SasDatastoreSecrets
		return ret
	}).(SasDatastoreSecretsOutput)
}

// Storage container SAS token.
func (o SasDatastoreSecretsPtrOutput) SasToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SasDatastoreSecrets) *string {
		if v == nil {
			return nil
		}
		return v.SasToken
	}).(pulumi.StringPtrOutput)
}

// Enum to determine the datastore secrets type.
// Expected value is 'Sas'.
func (o SasDatastoreSecretsPtrOutput) SecretsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SasDatastoreSecrets) *string {
		if v == nil {
			return nil
		}
		return &v.SecretsType
	}).(pulumi.StringPtrOutput)
}

// Service Principal datastore credentials configuration.
type ServicePrincipalDatastoreCredentials struct {
	// Authority URL used for authentication.
	AuthorityUrl *string `pulumi:"authorityUrl"`
	// [Required] Service principal client ID.
	ClientId string `pulumi:"clientId"`
	// Enum to determine the datastore credentials type.
	// Expected value is 'ServicePrincipal'.
	CredentialsType string `pulumi:"credentialsType"`
	// Resource the service principal has access to.
	ResourceUri *string `pulumi:"resourceUri"`
	// Service principal secrets.
	Secrets *ServicePrincipalDatastoreSecrets `pulumi:"secrets"`
	// [Required] ID of the tenant to which the service principal belongs.
	TenantId string `pulumi:"tenantId"`
}

// ServicePrincipalDatastoreCredentialsInput is an input type that accepts ServicePrincipalDatastoreCredentialsArgs and ServicePrincipalDatastoreCredentialsOutput values.
// You can construct a concrete instance of `ServicePrincipalDatastoreCredentialsInput` via:
//
//	ServicePrincipalDatastoreCredentialsArgs{...}
type ServicePrincipalDatastoreCredentialsInput interface {
	pulumi.Input

	ToServicePrincipalDatastoreCredentialsOutput() ServicePrincipalDatastoreCredentialsOutput
	ToServicePrincipalDatastoreCredentialsOutputWithContext(context.Context) ServicePrincipalDatastoreCredentialsOutput
}

// Service Principal datastore credentials configuration.
type ServicePrincipalDatastoreCredentialsArgs struct {
	// Authority URL used for authentication.
	AuthorityUrl pulumi.StringPtrInput `pulumi:"authorityUrl"`
	// [Required] Service principal client ID.
	ClientId pulumi.StringInput `pulumi:"clientId"`
	// Enum to determine the datastore credentials type.
	// Expected value is 'ServicePrincipal'.
	CredentialsType pulumi.StringInput `pulumi:"credentialsType"`
	// Resource the service principal has access to.
	ResourceUri pulumi.StringPtrInput `pulumi:"resourceUri"`
	// Service principal secrets.
	Secrets ServicePrincipalDatastoreSecretsPtrInput `pulumi:"secrets"`
	// [Required] ID of the tenant to which the service principal belongs.
	TenantId pulumi.StringInput `pulumi:"tenantId"`
}

func (ServicePrincipalDatastoreCredentialsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServicePrincipalDatastoreCredentials)(nil)).Elem()
}

func (i ServicePrincipalDatastoreCredentialsArgs) ToServicePrincipalDatastoreCredentialsOutput() ServicePrincipalDatastoreCredentialsOutput {
	return i.ToServicePrincipalDatastoreCredentialsOutputWithContext(context.Background())
}

func (i ServicePrincipalDatastoreCredentialsArgs) ToServicePrincipalDatastoreCredentialsOutputWithContext(ctx context.Context) ServicePrincipalDatastoreCredentialsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServicePrincipalDatastoreCredentialsOutput)
}

// Service Principal datastore credentials configuration.
type ServicePrincipalDatastoreCredentialsOutput struct{ *pulumi.OutputState }

func (ServicePrincipalDatastoreCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServicePrincipalDatastoreCredentials)(nil)).Elem()
}

func (o ServicePrincipalDatastoreCredentialsOutput) ToServicePrincipalDatastoreCredentialsOutput() ServicePrincipalDatastoreCredentialsOutput {
	return o
}

func (o ServicePrincipalDatastoreCredentialsOutput) ToServicePrincipalDatastoreCredentialsOutputWithContext(ctx context.Context) ServicePrincipalDatastoreCredentialsOutput {
	return o
}

// Authority URL used for authentication.
func (o ServicePrincipalDatastoreCredentialsOutput) AuthorityUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServicePrincipalDatastoreCredentials) *string { return v.AuthorityUrl }).(pulumi.StringPtrOutput)
}

// [Required] Service principal client ID.
func (o ServicePrincipalDatastoreCredentialsOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v ServicePrincipalDatastoreCredentials) string { return v.ClientId }).(pulumi.StringOutput)
}

// Enum to determine the datastore credentials type.
// Expected value is 'ServicePrincipal'.
func (o ServicePrincipalDatastoreCredentialsOutput) CredentialsType() pulumi.StringOutput {
	return o.ApplyT(func(v ServicePrincipalDatastoreCredentials) string { return v.CredentialsType }).(pulumi.StringOutput)
}

// Resource the service principal has access to.
func (o ServicePrincipalDatastoreCredentialsOutput) ResourceUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServicePrincipalDatastoreCredentials) *string { return v.ResourceUri }).(pulumi.StringPtrOutput)
}

// Service principal secrets.
func (o ServicePrincipalDatastoreCredentialsOutput) Secrets() ServicePrincipalDatastoreSecretsPtrOutput {
	return o.ApplyT(func(v ServicePrincipalDatastoreCredentials) *ServicePrincipalDatastoreSecrets { return v.Secrets }).(ServicePrincipalDatastoreSecretsPtrOutput)
}

// [Required] ID of the tenant to which the service principal belongs.
func (o ServicePrincipalDatastoreCredentialsOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v ServicePrincipalDatastoreCredentials) string { return v.TenantId }).(pulumi.StringOutput)
}

// Service Principal datastore credentials configuration.
type ServicePrincipalDatastoreCredentialsResponse struct {
	// Authority URL used for authentication.
	AuthorityUrl *string `pulumi:"authorityUrl"`
	// [Required] Service principal client ID.
	ClientId string `pulumi:"clientId"`
	// Enum to determine the datastore credentials type.
	// Expected value is 'ServicePrincipal'.
	CredentialsType string `pulumi:"credentialsType"`
	// Resource the service principal has access to.
	ResourceUri *string `pulumi:"resourceUri"`
	// [Required] ID of the tenant to which the service principal belongs.
	TenantId string `pulumi:"tenantId"`
}

// Service Principal datastore credentials configuration.
type ServicePrincipalDatastoreCredentialsResponseOutput struct{ *pulumi.OutputState }

func (ServicePrincipalDatastoreCredentialsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServicePrincipalDatastoreCredentialsResponse)(nil)).Elem()
}

func (o ServicePrincipalDatastoreCredentialsResponseOutput) ToServicePrincipalDatastoreCredentialsResponseOutput() ServicePrincipalDatastoreCredentialsResponseOutput {
	return o
}

func (o ServicePrincipalDatastoreCredentialsResponseOutput) ToServicePrincipalDatastoreCredentialsResponseOutputWithContext(ctx context.Context) ServicePrincipalDatastoreCredentialsResponseOutput {
	return o
}

// Authority URL used for authentication.
func (o ServicePrincipalDatastoreCredentialsResponseOutput) AuthorityUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServicePrincipalDatastoreCredentialsResponse) *string { return v.AuthorityUrl }).(pulumi.StringPtrOutput)
}

// [Required] Service principal client ID.
func (o ServicePrincipalDatastoreCredentialsResponseOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v ServicePrincipalDatastoreCredentialsResponse) string { return v.ClientId }).(pulumi.StringOutput)
}

// Enum to determine the datastore credentials type.
// Expected value is 'ServicePrincipal'.
func (o ServicePrincipalDatastoreCredentialsResponseOutput) CredentialsType() pulumi.StringOutput {
	return o.ApplyT(func(v ServicePrincipalDatastoreCredentialsResponse) string { return v.CredentialsType }).(pulumi.StringOutput)
}

// Resource the service principal has access to.
func (o ServicePrincipalDatastoreCredentialsResponseOutput) ResourceUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServicePrincipalDatastoreCredentialsResponse) *string { return v.ResourceUri }).(pulumi.StringPtrOutput)
}

// [Required] ID of the tenant to which the service principal belongs.
func (o ServicePrincipalDatastoreCredentialsResponseOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v ServicePrincipalDatastoreCredentialsResponse) string { return v.TenantId }).(pulumi.StringOutput)
}

// Datastore Service Principal secrets.
type ServicePrincipalDatastoreSecrets struct {
	// Service principal secret.
	ClientSecret *string `pulumi:"clientSecret"`
	// Enum to determine the datastore secrets type.
	// Expected value is 'ServicePrincipal'.
	SecretsType string `pulumi:"secretsType"`
}

// ServicePrincipalDatastoreSecretsInput is an input type that accepts ServicePrincipalDatastoreSecretsArgs and ServicePrincipalDatastoreSecretsOutput values.
// You can construct a concrete instance of `ServicePrincipalDatastoreSecretsInput` via:
//
//	ServicePrincipalDatastoreSecretsArgs{...}
type ServicePrincipalDatastoreSecretsInput interface {
	pulumi.Input

	ToServicePrincipalDatastoreSecretsOutput() ServicePrincipalDatastoreSecretsOutput
	ToServicePrincipalDatastoreSecretsOutputWithContext(context.Context) ServicePrincipalDatastoreSecretsOutput
}

// Datastore Service Principal secrets.
type ServicePrincipalDatastoreSecretsArgs struct {
	// Service principal secret.
	ClientSecret pulumi.StringPtrInput `pulumi:"clientSecret"`
	// Enum to determine the datastore secrets type.
	// Expected value is 'ServicePrincipal'.
	SecretsType pulumi.StringInput `pulumi:"secretsType"`
}

func (ServicePrincipalDatastoreSecretsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServicePrincipalDatastoreSecrets)(nil)).Elem()
}

func (i ServicePrincipalDatastoreSecretsArgs) ToServicePrincipalDatastoreSecretsOutput() ServicePrincipalDatastoreSecretsOutput {
	return i.ToServicePrincipalDatastoreSecretsOutputWithContext(context.Background())
}

func (i ServicePrincipalDatastoreSecretsArgs) ToServicePrincipalDatastoreSecretsOutputWithContext(ctx context.Context) ServicePrincipalDatastoreSecretsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServicePrincipalDatastoreSecretsOutput)
}

func (i ServicePrincipalDatastoreSecretsArgs) ToServicePrincipalDatastoreSecretsPtrOutput() ServicePrincipalDatastoreSecretsPtrOutput {
	return i.ToServicePrincipalDatastoreSecretsPtrOutputWithContext(context.Background())
}

func (i ServicePrincipalDatastoreSecretsArgs) ToServicePrincipalDatastoreSecretsPtrOutputWithContext(ctx context.Context) ServicePrincipalDatastoreSecretsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServicePrincipalDatastoreSecretsOutput).ToServicePrincipalDatastoreSecretsPtrOutputWithContext(ctx)
}

// ServicePrincipalDatastoreSecretsPtrInput is an input type that accepts ServicePrincipalDatastoreSecretsArgs, ServicePrincipalDatastoreSecretsPtr and ServicePrincipalDatastoreSecretsPtrOutput values.
// You can construct a concrete instance of `ServicePrincipalDatastoreSecretsPtrInput` via:
//
//	        ServicePrincipalDatastoreSecretsArgs{...}
//
//	or:
//
//	        nil
type ServicePrincipalDatastoreSecretsPtrInput interface {
	pulumi.Input

	ToServicePrincipalDatastoreSecretsPtrOutput() ServicePrincipalDatastoreSecretsPtrOutput
	ToServicePrincipalDatastoreSecretsPtrOutputWithContext(context.Context) ServicePrincipalDatastoreSecretsPtrOutput
}

type servicePrincipalDatastoreSecretsPtrType ServicePrincipalDatastoreSecretsArgs

func ServicePrincipalDatastoreSecretsPtr(v *ServicePrincipalDatastoreSecretsArgs) ServicePrincipalDatastoreSecretsPtrInput {
	return (*servicePrincipalDatastoreSecretsPtrType)(v)
}

func (*servicePrincipalDatastoreSecretsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServicePrincipalDatastoreSecrets)(nil)).Elem()
}

func (i *servicePrincipalDatastoreSecretsPtrType) ToServicePrincipalDatastoreSecretsPtrOutput() ServicePrincipalDatastoreSecretsPtrOutput {
	return i.ToServicePrincipalDatastoreSecretsPtrOutputWithContext(context.Background())
}

func (i *servicePrincipalDatastoreSecretsPtrType) ToServicePrincipalDatastoreSecretsPtrOutputWithContext(ctx context.Context) ServicePrincipalDatastoreSecretsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServicePrincipalDatastoreSecretsPtrOutput)
}

// Datastore Service Principal secrets.
type ServicePrincipalDatastoreSecretsOutput struct{ *pulumi.OutputState }

func (ServicePrincipalDatastoreSecretsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServicePrincipalDatastoreSecrets)(nil)).Elem()
}

func (o ServicePrincipalDatastoreSecretsOutput) ToServicePrincipalDatastoreSecretsOutput() ServicePrincipalDatastoreSecretsOutput {
	return o
}

func (o ServicePrincipalDatastoreSecretsOutput) ToServicePrincipalDatastoreSecretsOutputWithContext(ctx context.Context) ServicePrincipalDatastoreSecretsOutput {
	return o
}

func (o ServicePrincipalDatastoreSecretsOutput) ToServicePrincipalDatastoreSecretsPtrOutput() ServicePrincipalDatastoreSecretsPtrOutput {
	return o.ToServicePrincipalDatastoreSecretsPtrOutputWithContext(context.Background())
}

func (o ServicePrincipalDatastoreSecretsOutput) ToServicePrincipalDatastoreSecretsPtrOutputWithContext(ctx context.Context) ServicePrincipalDatastoreSecretsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServicePrincipalDatastoreSecrets) *ServicePrincipalDatastoreSecrets {
		return &v
	}).(ServicePrincipalDatastoreSecretsPtrOutput)
}

// Service principal secret.
func (o ServicePrincipalDatastoreSecretsOutput) ClientSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServicePrincipalDatastoreSecrets) *string { return v.ClientSecret }).(pulumi.StringPtrOutput)
}

// Enum to determine the datastore secrets type.
// Expected value is 'ServicePrincipal'.
func (o ServicePrincipalDatastoreSecretsOutput) SecretsType() pulumi.StringOutput {
	return o.ApplyT(func(v ServicePrincipalDatastoreSecrets) string { return v.SecretsType }).(pulumi.StringOutput)
}

type ServicePrincipalDatastoreSecretsPtrOutput struct{ *pulumi.OutputState }

func (ServicePrincipalDatastoreSecretsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServicePrincipalDatastoreSecrets)(nil)).Elem()
}

func (o ServicePrincipalDatastoreSecretsPtrOutput) ToServicePrincipalDatastoreSecretsPtrOutput() ServicePrincipalDatastoreSecretsPtrOutput {
	return o
}

func (o ServicePrincipalDatastoreSecretsPtrOutput) ToServicePrincipalDatastoreSecretsPtrOutputWithContext(ctx context.Context) ServicePrincipalDatastoreSecretsPtrOutput {
	return o
}

func (o ServicePrincipalDatastoreSecretsPtrOutput) Elem() ServicePrincipalDatastoreSecretsOutput {
	return o.ApplyT(func(v *ServicePrincipalDatastoreSecrets) ServicePrincipalDatastoreSecrets {
		if v != nil {
			return *v
		}
		var ret ServicePrincipalDatastoreSecrets
		return ret
	}).(ServicePrincipalDatastoreSecretsOutput)
}

// Service principal secret.
func (o ServicePrincipalDatastoreSecretsPtrOutput) ClientSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServicePrincipalDatastoreSecrets) *string {
		if v == nil {
			return nil
		}
		return v.ClientSecret
	}).(pulumi.StringPtrOutput)
}

// Enum to determine the datastore secrets type.
// Expected value is 'ServicePrincipal'.
func (o ServicePrincipalDatastoreSecretsPtrOutput) SecretsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServicePrincipalDatastoreSecrets) *string {
		if v == nil {
			return nil
		}
		return &v.SecretsType
	}).(pulumi.StringPtrOutput)
}

// SQL Admin datastore credentials configuration.
type SqlAdminDatastoreCredentials struct {
	// Enum to determine the datastore credentials type.
	// Expected value is 'SqlAdmin'.
	CredentialsType string `pulumi:"credentialsType"`
	// SQL database secrets.
	Secrets *SqlAdminDatastoreSecrets `pulumi:"secrets"`
	// [Required] SQL database user name.
	UserId string `pulumi:"userId"`
}

// SqlAdminDatastoreCredentialsInput is an input type that accepts SqlAdminDatastoreCredentialsArgs and SqlAdminDatastoreCredentialsOutput values.
// You can construct a concrete instance of `SqlAdminDatastoreCredentialsInput` via:
//
//	SqlAdminDatastoreCredentialsArgs{...}
type SqlAdminDatastoreCredentialsInput interface {
	pulumi.Input

	ToSqlAdminDatastoreCredentialsOutput() SqlAdminDatastoreCredentialsOutput
	ToSqlAdminDatastoreCredentialsOutputWithContext(context.Context) SqlAdminDatastoreCredentialsOutput
}

// SQL Admin datastore credentials configuration.
type SqlAdminDatastoreCredentialsArgs struct {
	// Enum to determine the datastore credentials type.
	// Expected value is 'SqlAdmin'.
	CredentialsType pulumi.StringInput `pulumi:"credentialsType"`
	// SQL database secrets.
	Secrets SqlAdminDatastoreSecretsPtrInput `pulumi:"secrets"`
	// [Required] SQL database user name.
	UserId pulumi.StringInput `pulumi:"userId"`
}

func (SqlAdminDatastoreCredentialsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlAdminDatastoreCredentials)(nil)).Elem()
}

func (i SqlAdminDatastoreCredentialsArgs) ToSqlAdminDatastoreCredentialsOutput() SqlAdminDatastoreCredentialsOutput {
	return i.ToSqlAdminDatastoreCredentialsOutputWithContext(context.Background())
}

func (i SqlAdminDatastoreCredentialsArgs) ToSqlAdminDatastoreCredentialsOutputWithContext(ctx context.Context) SqlAdminDatastoreCredentialsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlAdminDatastoreCredentialsOutput)
}

// SQL Admin datastore credentials configuration.
type SqlAdminDatastoreCredentialsOutput struct{ *pulumi.OutputState }

func (SqlAdminDatastoreCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlAdminDatastoreCredentials)(nil)).Elem()
}

func (o SqlAdminDatastoreCredentialsOutput) ToSqlAdminDatastoreCredentialsOutput() SqlAdminDatastoreCredentialsOutput {
	return o
}

func (o SqlAdminDatastoreCredentialsOutput) ToSqlAdminDatastoreCredentialsOutputWithContext(ctx context.Context) SqlAdminDatastoreCredentialsOutput {
	return o
}

// Enum to determine the datastore credentials type.
// Expected value is 'SqlAdmin'.
func (o SqlAdminDatastoreCredentialsOutput) CredentialsType() pulumi.StringOutput {
	return o.ApplyT(func(v SqlAdminDatastoreCredentials) string { return v.CredentialsType }).(pulumi.StringOutput)
}

// SQL database secrets.
func (o SqlAdminDatastoreCredentialsOutput) Secrets() SqlAdminDatastoreSecretsPtrOutput {
	return o.ApplyT(func(v SqlAdminDatastoreCredentials) *SqlAdminDatastoreSecrets { return v.Secrets }).(SqlAdminDatastoreSecretsPtrOutput)
}

// [Required] SQL database user name.
func (o SqlAdminDatastoreCredentialsOutput) UserId() pulumi.StringOutput {
	return o.ApplyT(func(v SqlAdminDatastoreCredentials) string { return v.UserId }).(pulumi.StringOutput)
}

// SQL Admin datastore credentials configuration.
type SqlAdminDatastoreCredentialsResponse struct {
	// Enum to determine the datastore credentials type.
	// Expected value is 'SqlAdmin'.
	CredentialsType string `pulumi:"credentialsType"`
	// [Required] SQL database user name.
	UserId string `pulumi:"userId"`
}

// SQL Admin datastore credentials configuration.
type SqlAdminDatastoreCredentialsResponseOutput struct{ *pulumi.OutputState }

func (SqlAdminDatastoreCredentialsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlAdminDatastoreCredentialsResponse)(nil)).Elem()
}

func (o SqlAdminDatastoreCredentialsResponseOutput) ToSqlAdminDatastoreCredentialsResponseOutput() SqlAdminDatastoreCredentialsResponseOutput {
	return o
}

func (o SqlAdminDatastoreCredentialsResponseOutput) ToSqlAdminDatastoreCredentialsResponseOutputWithContext(ctx context.Context) SqlAdminDatastoreCredentialsResponseOutput {
	return o
}

// Enum to determine the datastore credentials type.
// Expected value is 'SqlAdmin'.
func (o SqlAdminDatastoreCredentialsResponseOutput) CredentialsType() pulumi.StringOutput {
	return o.ApplyT(func(v SqlAdminDatastoreCredentialsResponse) string { return v.CredentialsType }).(pulumi.StringOutput)
}

// [Required] SQL database user name.
func (o SqlAdminDatastoreCredentialsResponseOutput) UserId() pulumi.StringOutput {
	return o.ApplyT(func(v SqlAdminDatastoreCredentialsResponse) string { return v.UserId }).(pulumi.StringOutput)
}

// Datastore SQL Admin secrets.
type SqlAdminDatastoreSecrets struct {
	// SQL database password.
	Password *string `pulumi:"password"`
	// Enum to determine the datastore secrets type.
	// Expected value is 'SqlAdmin'.
	SecretsType string `pulumi:"secretsType"`
}

// SqlAdminDatastoreSecretsInput is an input type that accepts SqlAdminDatastoreSecretsArgs and SqlAdminDatastoreSecretsOutput values.
// You can construct a concrete instance of `SqlAdminDatastoreSecretsInput` via:
//
//	SqlAdminDatastoreSecretsArgs{...}
type SqlAdminDatastoreSecretsInput interface {
	pulumi.Input

	ToSqlAdminDatastoreSecretsOutput() SqlAdminDatastoreSecretsOutput
	ToSqlAdminDatastoreSecretsOutputWithContext(context.Context) SqlAdminDatastoreSecretsOutput
}

// Datastore SQL Admin secrets.
type SqlAdminDatastoreSecretsArgs struct {
	// SQL database password.
	Password pulumi.StringPtrInput `pulumi:"password"`
	// Enum to determine the datastore secrets type.
	// Expected value is 'SqlAdmin'.
	SecretsType pulumi.StringInput `pulumi:"secretsType"`
}

func (SqlAdminDatastoreSecretsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlAdminDatastoreSecrets)(nil)).Elem()
}

func (i SqlAdminDatastoreSecretsArgs) ToSqlAdminDatastoreSecretsOutput() SqlAdminDatastoreSecretsOutput {
	return i.ToSqlAdminDatastoreSecretsOutputWithContext(context.Background())
}

func (i SqlAdminDatastoreSecretsArgs) ToSqlAdminDatastoreSecretsOutputWithContext(ctx context.Context) SqlAdminDatastoreSecretsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlAdminDatastoreSecretsOutput)
}

func (i SqlAdminDatastoreSecretsArgs) ToSqlAdminDatastoreSecretsPtrOutput() SqlAdminDatastoreSecretsPtrOutput {
	return i.ToSqlAdminDatastoreSecretsPtrOutputWithContext(context.Background())
}

func (i SqlAdminDatastoreSecretsArgs) ToSqlAdminDatastoreSecretsPtrOutputWithContext(ctx context.Context) SqlAdminDatastoreSecretsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlAdminDatastoreSecretsOutput).ToSqlAdminDatastoreSecretsPtrOutputWithContext(ctx)
}

// SqlAdminDatastoreSecretsPtrInput is an input type that accepts SqlAdminDatastoreSecretsArgs, SqlAdminDatastoreSecretsPtr and SqlAdminDatastoreSecretsPtrOutput values.
// You can construct a concrete instance of `SqlAdminDatastoreSecretsPtrInput` via:
//
//	        SqlAdminDatastoreSecretsArgs{...}
//
//	or:
//
//	        nil
type SqlAdminDatastoreSecretsPtrInput interface {
	pulumi.Input

	ToSqlAdminDatastoreSecretsPtrOutput() SqlAdminDatastoreSecretsPtrOutput
	ToSqlAdminDatastoreSecretsPtrOutputWithContext(context.Context) SqlAdminDatastoreSecretsPtrOutput
}

type sqlAdminDatastoreSecretsPtrType SqlAdminDatastoreSecretsArgs

func SqlAdminDatastoreSecretsPtr(v *SqlAdminDatastoreSecretsArgs) SqlAdminDatastoreSecretsPtrInput {
	return (*sqlAdminDatastoreSecretsPtrType)(v)
}

func (*sqlAdminDatastoreSecretsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SqlAdminDatastoreSecrets)(nil)).Elem()
}

func (i *sqlAdminDatastoreSecretsPtrType) ToSqlAdminDatastoreSecretsPtrOutput() SqlAdminDatastoreSecretsPtrOutput {
	return i.ToSqlAdminDatastoreSecretsPtrOutputWithContext(context.Background())
}

func (i *sqlAdminDatastoreSecretsPtrType) ToSqlAdminDatastoreSecretsPtrOutputWithContext(ctx context.Context) SqlAdminDatastoreSecretsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlAdminDatastoreSecretsPtrOutput)
}

// Datastore SQL Admin secrets.
type SqlAdminDatastoreSecretsOutput struct{ *pulumi.OutputState }

func (SqlAdminDatastoreSecretsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlAdminDatastoreSecrets)(nil)).Elem()
}

func (o SqlAdminDatastoreSecretsOutput) ToSqlAdminDatastoreSecretsOutput() SqlAdminDatastoreSecretsOutput {
	return o
}

func (o SqlAdminDatastoreSecretsOutput) ToSqlAdminDatastoreSecretsOutputWithContext(ctx context.Context) SqlAdminDatastoreSecretsOutput {
	return o
}

func (o SqlAdminDatastoreSecretsOutput) ToSqlAdminDatastoreSecretsPtrOutput() SqlAdminDatastoreSecretsPtrOutput {
	return o.ToSqlAdminDatastoreSecretsPtrOutputWithContext(context.Background())
}

func (o SqlAdminDatastoreSecretsOutput) ToSqlAdminDatastoreSecretsPtrOutputWithContext(ctx context.Context) SqlAdminDatastoreSecretsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SqlAdminDatastoreSecrets) *SqlAdminDatastoreSecrets {
		return &v
	}).(SqlAdminDatastoreSecretsPtrOutput)
}

// SQL database password.
func (o SqlAdminDatastoreSecretsOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SqlAdminDatastoreSecrets) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// Enum to determine the datastore secrets type.
// Expected value is 'SqlAdmin'.
func (o SqlAdminDatastoreSecretsOutput) SecretsType() pulumi.StringOutput {
	return o.ApplyT(func(v SqlAdminDatastoreSecrets) string { return v.SecretsType }).(pulumi.StringOutput)
}

type SqlAdminDatastoreSecretsPtrOutput struct{ *pulumi.OutputState }

func (SqlAdminDatastoreSecretsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SqlAdminDatastoreSecrets)(nil)).Elem()
}

func (o SqlAdminDatastoreSecretsPtrOutput) ToSqlAdminDatastoreSecretsPtrOutput() SqlAdminDatastoreSecretsPtrOutput {
	return o
}

func (o SqlAdminDatastoreSecretsPtrOutput) ToSqlAdminDatastoreSecretsPtrOutputWithContext(ctx context.Context) SqlAdminDatastoreSecretsPtrOutput {
	return o
}

func (o SqlAdminDatastoreSecretsPtrOutput) Elem() SqlAdminDatastoreSecretsOutput {
	return o.ApplyT(func(v *SqlAdminDatastoreSecrets) SqlAdminDatastoreSecrets {
		if v != nil {
			return *v
		}
		var ret SqlAdminDatastoreSecrets
		return ret
	}).(SqlAdminDatastoreSecretsOutput)
}

// SQL database password.
func (o SqlAdminDatastoreSecretsPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SqlAdminDatastoreSecrets) *string {
		if v == nil {
			return nil
		}
		return v.Password
	}).(pulumi.StringPtrOutput)
}

// Enum to determine the datastore secrets type.
// Expected value is 'SqlAdmin'.
func (o SqlAdminDatastoreSecretsPtrOutput) SecretsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SqlAdminDatastoreSecrets) *string {
		if v == nil {
			return nil
		}
		return &v.SecretsType
	}).(pulumi.StringPtrOutput)
}

// Active message associated with project
type StatusMessageResponse struct {
	// Service-defined message code.
	Code string `pulumi:"code"`
	// Time in UTC at which the message was created.
	CreatedTimeUtc string `pulumi:"createdTimeUtc"`
	// Severity level of message.
	Level string `pulumi:"level"`
	// A human-readable representation of the message code.
	Message string `pulumi:"message"`
}

// Active message associated with project
type StatusMessageResponseOutput struct{ *pulumi.OutputState }

func (StatusMessageResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StatusMessageResponse)(nil)).Elem()
}

func (o StatusMessageResponseOutput) ToStatusMessageResponseOutput() StatusMessageResponseOutput {
	return o
}

func (o StatusMessageResponseOutput) ToStatusMessageResponseOutputWithContext(ctx context.Context) StatusMessageResponseOutput {
	return o
}

// Service-defined message code.
func (o StatusMessageResponseOutput) Code() pulumi.StringOutput {
	return o.ApplyT(func(v StatusMessageResponse) string { return v.Code }).(pulumi.StringOutput)
}

// Time in UTC at which the message was created.
func (o StatusMessageResponseOutput) CreatedTimeUtc() pulumi.StringOutput {
	return o.ApplyT(func(v StatusMessageResponse) string { return v.CreatedTimeUtc }).(pulumi.StringOutput)
}

// Severity level of message.
func (o StatusMessageResponseOutput) Level() pulumi.StringOutput {
	return o.ApplyT(func(v StatusMessageResponse) string { return v.Level }).(pulumi.StringOutput)
}

// A human-readable representation of the message code.
func (o StatusMessageResponseOutput) Message() pulumi.StringOutput {
	return o.ApplyT(func(v StatusMessageResponse) string { return v.Message }).(pulumi.StringOutput)
}

type StatusMessageResponseArrayOutput struct{ *pulumi.OutputState }

func (StatusMessageResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StatusMessageResponse)(nil)).Elem()
}

func (o StatusMessageResponseArrayOutput) ToStatusMessageResponseArrayOutput() StatusMessageResponseArrayOutput {
	return o
}

func (o StatusMessageResponseArrayOutput) ToStatusMessageResponseArrayOutputWithContext(ctx context.Context) StatusMessageResponseArrayOutput {
	return o
}

func (o StatusMessageResponseArrayOutput) Index(i pulumi.IntInput) StatusMessageResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StatusMessageResponse {
		return vs[0].([]StatusMessageResponse)[vs[1].(int)]
	}).(StatusMessageResponseOutput)
}

// Sweep job definition.
type SweepJob struct {
	// [Required] Type of the hyperparameter sampling algorithms
	Algorithm string `pulumi:"algorithm"`
	// [Required] Compute binding for the job.
	Compute ComputeConfiguration `pulumi:"compute"`
	// The asset description text.
	Description *string `pulumi:"description"`
	// Early termination policies enable canceling poor-performing runs before they complete.
	EarlyTermination interface{} `pulumi:"earlyTermination"`
	// The name of the experiment the job belongs to. If not set, the job is placed in the "Default" experiment.
	ExperimentName *string `pulumi:"experimentName"`
	// Identity configuration. If set, this should be one of AmlToken, ManagedIdentity or null.
	// Defaults to AmlToken if null.
	Identity interface{} `pulumi:"identity"`
	// Enum to determine the type of job.
	// Expected value is 'Sweep'.
	JobType string `pulumi:"jobType"`
	// An upper bound on the number of trials performed in parallel.
	MaxConcurrentTrials *int `pulumi:"maxConcurrentTrials"`
	// An upper bound on the number of trials to perform.
	MaxTotalTrials *int `pulumi:"maxTotalTrials"`
	// [Required] Optimization objective.
	Objective Objective `pulumi:"objective"`
	// Job priority for scheduling policy. Only applies to AMLCompute.
	// Private preview feature and only available to users on the allow list.
	Priority *int `pulumi:"priority"`
	// The asset property dictionary.
	Properties map[string]string `pulumi:"properties"`
	// [Required] A dictionary containing each parameter and its distribution. The dictionary key is the name of the parameter
	SearchSpace map[string]interface{} `pulumi:"searchSpace"`
	// Tag dictionary. Tags can be added, removed, and updated.
	Tags map[string]string `pulumi:"tags"`
	// The total timeout in ISO 8601 format. Only supports duration with precision as low as Minutes.
	Timeout *string `pulumi:"timeout"`
	// Trial component definition.
	Trial *TrialComponent `pulumi:"trial"`
}

// SweepJobInput is an input type that accepts SweepJobArgs and SweepJobOutput values.
// You can construct a concrete instance of `SweepJobInput` via:
//
//	SweepJobArgs{...}
type SweepJobInput interface {
	pulumi.Input

	ToSweepJobOutput() SweepJobOutput
	ToSweepJobOutputWithContext(context.Context) SweepJobOutput
}

// Sweep job definition.
type SweepJobArgs struct {
	// [Required] Type of the hyperparameter sampling algorithms
	Algorithm pulumi.StringInput `pulumi:"algorithm"`
	// [Required] Compute binding for the job.
	Compute ComputeConfigurationInput `pulumi:"compute"`
	// The asset description text.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Early termination policies enable canceling poor-performing runs before they complete.
	EarlyTermination pulumi.Input `pulumi:"earlyTermination"`
	// The name of the experiment the job belongs to. If not set, the job is placed in the "Default" experiment.
	ExperimentName pulumi.StringPtrInput `pulumi:"experimentName"`
	// Identity configuration. If set, this should be one of AmlToken, ManagedIdentity or null.
	// Defaults to AmlToken if null.
	Identity pulumi.Input `pulumi:"identity"`
	// Enum to determine the type of job.
	// Expected value is 'Sweep'.
	JobType pulumi.StringInput `pulumi:"jobType"`
	// An upper bound on the number of trials performed in parallel.
	MaxConcurrentTrials pulumi.IntPtrInput `pulumi:"maxConcurrentTrials"`
	// An upper bound on the number of trials to perform.
	MaxTotalTrials pulumi.IntPtrInput `pulumi:"maxTotalTrials"`
	// [Required] Optimization objective.
	Objective ObjectiveInput `pulumi:"objective"`
	// Job priority for scheduling policy. Only applies to AMLCompute.
	// Private preview feature and only available to users on the allow list.
	Priority pulumi.IntPtrInput `pulumi:"priority"`
	// The asset property dictionary.
	Properties pulumi.StringMapInput `pulumi:"properties"`
	// [Required] A dictionary containing each parameter and its distribution. The dictionary key is the name of the parameter
	SearchSpace pulumi.MapInput `pulumi:"searchSpace"`
	// Tag dictionary. Tags can be added, removed, and updated.
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// The total timeout in ISO 8601 format. Only supports duration with precision as low as Minutes.
	Timeout pulumi.StringPtrInput `pulumi:"timeout"`
	// Trial component definition.
	Trial TrialComponentPtrInput `pulumi:"trial"`
}

func (SweepJobArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SweepJob)(nil)).Elem()
}

func (i SweepJobArgs) ToSweepJobOutput() SweepJobOutput {
	return i.ToSweepJobOutputWithContext(context.Background())
}

func (i SweepJobArgs) ToSweepJobOutputWithContext(ctx context.Context) SweepJobOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SweepJobOutput)
}

// Sweep job definition.
type SweepJobOutput struct{ *pulumi.OutputState }

func (SweepJobOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SweepJob)(nil)).Elem()
}

func (o SweepJobOutput) ToSweepJobOutput() SweepJobOutput {
	return o
}

func (o SweepJobOutput) ToSweepJobOutputWithContext(ctx context.Context) SweepJobOutput {
	return o
}

// [Required] Type of the hyperparameter sampling algorithms
func (o SweepJobOutput) Algorithm() pulumi.StringOutput {
	return o.ApplyT(func(v SweepJob) string { return v.Algorithm }).(pulumi.StringOutput)
}

// [Required] Compute binding for the job.
func (o SweepJobOutput) Compute() ComputeConfigurationOutput {
	return o.ApplyT(func(v SweepJob) ComputeConfiguration { return v.Compute }).(ComputeConfigurationOutput)
}

// The asset description text.
func (o SweepJobOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SweepJob) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Early termination policies enable canceling poor-performing runs before they complete.
func (o SweepJobOutput) EarlyTermination() pulumi.AnyOutput {
	return o.ApplyT(func(v SweepJob) interface{} { return v.EarlyTermination }).(pulumi.AnyOutput)
}

// The name of the experiment the job belongs to. If not set, the job is placed in the "Default" experiment.
func (o SweepJobOutput) ExperimentName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SweepJob) *string { return v.ExperimentName }).(pulumi.StringPtrOutput)
}

// Identity configuration. If set, this should be one of AmlToken, ManagedIdentity or null.
// Defaults to AmlToken if null.
func (o SweepJobOutput) Identity() pulumi.AnyOutput {
	return o.ApplyT(func(v SweepJob) interface{} { return v.Identity }).(pulumi.AnyOutput)
}

// Enum to determine the type of job.
// Expected value is 'Sweep'.
func (o SweepJobOutput) JobType() pulumi.StringOutput {
	return o.ApplyT(func(v SweepJob) string { return v.JobType }).(pulumi.StringOutput)
}

// An upper bound on the number of trials performed in parallel.
func (o SweepJobOutput) MaxConcurrentTrials() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SweepJob) *int { return v.MaxConcurrentTrials }).(pulumi.IntPtrOutput)
}

// An upper bound on the number of trials to perform.
func (o SweepJobOutput) MaxTotalTrials() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SweepJob) *int { return v.MaxTotalTrials }).(pulumi.IntPtrOutput)
}

// [Required] Optimization objective.
func (o SweepJobOutput) Objective() ObjectiveOutput {
	return o.ApplyT(func(v SweepJob) Objective { return v.Objective }).(ObjectiveOutput)
}

// Job priority for scheduling policy. Only applies to AMLCompute.
// Private preview feature and only available to users on the allow list.
func (o SweepJobOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SweepJob) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

// The asset property dictionary.
func (o SweepJobOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v SweepJob) map[string]string { return v.Properties }).(pulumi.StringMapOutput)
}

// [Required] A dictionary containing each parameter and its distribution. The dictionary key is the name of the parameter
func (o SweepJobOutput) SearchSpace() pulumi.MapOutput {
	return o.ApplyT(func(v SweepJob) map[string]interface{} { return v.SearchSpace }).(pulumi.MapOutput)
}

// Tag dictionary. Tags can be added, removed, and updated.
func (o SweepJobOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v SweepJob) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// The total timeout in ISO 8601 format. Only supports duration with precision as low as Minutes.
func (o SweepJobOutput) Timeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SweepJob) *string { return v.Timeout }).(pulumi.StringPtrOutput)
}

// Trial component definition.
func (o SweepJobOutput) Trial() TrialComponentPtrOutput {
	return o.ApplyT(func(v SweepJob) *TrialComponent { return v.Trial }).(TrialComponentPtrOutput)
}

// Sweep job definition.
type SweepJobResponse struct {
	// [Required] Type of the hyperparameter sampling algorithms
	Algorithm string `pulumi:"algorithm"`
	// [Required] Compute binding for the job.
	Compute ComputeConfigurationResponse `pulumi:"compute"`
	// The asset description text.
	Description *string `pulumi:"description"`
	// Early termination policies enable canceling poor-performing runs before they complete.
	EarlyTermination interface{} `pulumi:"earlyTermination"`
	// The name of the experiment the job belongs to. If not set, the job is placed in the "Default" experiment.
	ExperimentName *string `pulumi:"experimentName"`
	// Identity configuration. If set, this should be one of AmlToken, ManagedIdentity or null.
	// Defaults to AmlToken if null.
	Identity interface{} `pulumi:"identity"`
	// List of JobEndpoints.
	// For local jobs, a job endpoint will have an endpoint value of FileStreamObject.
	InteractionEndpoints map[string]JobEndpointResponse `pulumi:"interactionEndpoints"`
	// Enum to determine the type of job.
	// Expected value is 'Sweep'.
	JobType string `pulumi:"jobType"`
	// An upper bound on the number of trials performed in parallel.
	MaxConcurrentTrials *int `pulumi:"maxConcurrentTrials"`
	// An upper bound on the number of trials to perform.
	MaxTotalTrials *int `pulumi:"maxTotalTrials"`
	// [Required] Optimization objective.
	Objective ObjectiveResponse `pulumi:"objective"`
	// Location of the job output logs and artifacts.
	Output JobOutputResponse `pulumi:"output"`
	// Job priority for scheduling policy. Only applies to AMLCompute.
	// Private preview feature and only available to users on the allow list.
	Priority *int `pulumi:"priority"`
	// The asset property dictionary.
	Properties map[string]string `pulumi:"properties"`
	// Specifies the job provisioning state.
	ProvisioningState string `pulumi:"provisioningState"`
	// [Required] A dictionary containing each parameter and its distribution. The dictionary key is the name of the parameter
	SearchSpace map[string]interface{} `pulumi:"searchSpace"`
	// The status of a job.
	Status string `pulumi:"status"`
	// Tag dictionary. Tags can be added, removed, and updated.
	Tags map[string]string `pulumi:"tags"`
	// The total timeout in ISO 8601 format. Only supports duration with precision as low as Minutes.
	Timeout *string `pulumi:"timeout"`
	// Trial component definition.
	Trial *TrialComponentResponse `pulumi:"trial"`
}

// Sweep job definition.
type SweepJobResponseOutput struct{ *pulumi.OutputState }

func (SweepJobResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SweepJobResponse)(nil)).Elem()
}

func (o SweepJobResponseOutput) ToSweepJobResponseOutput() SweepJobResponseOutput {
	return o
}

func (o SweepJobResponseOutput) ToSweepJobResponseOutputWithContext(ctx context.Context) SweepJobResponseOutput {
	return o
}

// [Required] Type of the hyperparameter sampling algorithms
func (o SweepJobResponseOutput) Algorithm() pulumi.StringOutput {
	return o.ApplyT(func(v SweepJobResponse) string { return v.Algorithm }).(pulumi.StringOutput)
}

// [Required] Compute binding for the job.
func (o SweepJobResponseOutput) Compute() ComputeConfigurationResponseOutput {
	return o.ApplyT(func(v SweepJobResponse) ComputeConfigurationResponse { return v.Compute }).(ComputeConfigurationResponseOutput)
}

// The asset description text.
func (o SweepJobResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SweepJobResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Early termination policies enable canceling poor-performing runs before they complete.
func (o SweepJobResponseOutput) EarlyTermination() pulumi.AnyOutput {
	return o.ApplyT(func(v SweepJobResponse) interface{} { return v.EarlyTermination }).(pulumi.AnyOutput)
}

// The name of the experiment the job belongs to. If not set, the job is placed in the "Default" experiment.
func (o SweepJobResponseOutput) ExperimentName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SweepJobResponse) *string { return v.ExperimentName }).(pulumi.StringPtrOutput)
}

// Identity configuration. If set, this should be one of AmlToken, ManagedIdentity or null.
// Defaults to AmlToken if null.
func (o SweepJobResponseOutput) Identity() pulumi.AnyOutput {
	return o.ApplyT(func(v SweepJobResponse) interface{} { return v.Identity }).(pulumi.AnyOutput)
}

// List of JobEndpoints.
// For local jobs, a job endpoint will have an endpoint value of FileStreamObject.
func (o SweepJobResponseOutput) InteractionEndpoints() JobEndpointResponseMapOutput {
	return o.ApplyT(func(v SweepJobResponse) map[string]JobEndpointResponse { return v.InteractionEndpoints }).(JobEndpointResponseMapOutput)
}

// Enum to determine the type of job.
// Expected value is 'Sweep'.
func (o SweepJobResponseOutput) JobType() pulumi.StringOutput {
	return o.ApplyT(func(v SweepJobResponse) string { return v.JobType }).(pulumi.StringOutput)
}

// An upper bound on the number of trials performed in parallel.
func (o SweepJobResponseOutput) MaxConcurrentTrials() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SweepJobResponse) *int { return v.MaxConcurrentTrials }).(pulumi.IntPtrOutput)
}

// An upper bound on the number of trials to perform.
func (o SweepJobResponseOutput) MaxTotalTrials() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SweepJobResponse) *int { return v.MaxTotalTrials }).(pulumi.IntPtrOutput)
}

// [Required] Optimization objective.
func (o SweepJobResponseOutput) Objective() ObjectiveResponseOutput {
	return o.ApplyT(func(v SweepJobResponse) ObjectiveResponse { return v.Objective }).(ObjectiveResponseOutput)
}

// Location of the job output logs and artifacts.
func (o SweepJobResponseOutput) Output() JobOutputResponseOutput {
	return o.ApplyT(func(v SweepJobResponse) JobOutputResponse { return v.Output }).(JobOutputResponseOutput)
}

// Job priority for scheduling policy. Only applies to AMLCompute.
// Private preview feature and only available to users on the allow list.
func (o SweepJobResponseOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SweepJobResponse) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

// The asset property dictionary.
func (o SweepJobResponseOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v SweepJobResponse) map[string]string { return v.Properties }).(pulumi.StringMapOutput)
}

// Specifies the job provisioning state.
func (o SweepJobResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v SweepJobResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// [Required] A dictionary containing each parameter and its distribution. The dictionary key is the name of the parameter
func (o SweepJobResponseOutput) SearchSpace() pulumi.MapOutput {
	return o.ApplyT(func(v SweepJobResponse) map[string]interface{} { return v.SearchSpace }).(pulumi.MapOutput)
}

// The status of a job.
func (o SweepJobResponseOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v SweepJobResponse) string { return v.Status }).(pulumi.StringOutput)
}

// Tag dictionary. Tags can be added, removed, and updated.
func (o SweepJobResponseOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v SweepJobResponse) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// The total timeout in ISO 8601 format. Only supports duration with precision as low as Minutes.
func (o SweepJobResponseOutput) Timeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SweepJobResponse) *string { return v.Timeout }).(pulumi.StringPtrOutput)
}

// Trial component definition.
func (o SweepJobResponseOutput) Trial() TrialComponentResponsePtrOutput {
	return o.ApplyT(func(v SweepJobResponse) *TrialComponentResponse { return v.Trial }).(TrialComponentResponsePtrOutput)
}

// Metadata pertaining to creation and last modification of the resource.
type SystemDataResponse struct {
	// The timestamp of resource creation (UTC).
	CreatedAt *string `pulumi:"createdAt"`
	// The identity that created the resource.
	CreatedBy *string `pulumi:"createdBy"`
	// The type of identity that created the resource.
	CreatedByType *string `pulumi:"createdByType"`
	// The timestamp of resource last modification (UTC)
	LastModifiedAt *string `pulumi:"lastModifiedAt"`
	// The identity that last modified the resource.
	LastModifiedBy *string `pulumi:"lastModifiedBy"`
	// The type of identity that last modified the resource.
	LastModifiedByType *string `pulumi:"lastModifiedByType"`
}

// Metadata pertaining to creation and last modification of the resource.
type SystemDataResponseOutput struct{ *pulumi.OutputState }

func (SystemDataResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemDataResponse)(nil)).Elem()
}

func (o SystemDataResponseOutput) ToSystemDataResponseOutput() SystemDataResponseOutput {
	return o
}

func (o SystemDataResponseOutput) ToSystemDataResponseOutputWithContext(ctx context.Context) SystemDataResponseOutput {
	return o
}

// The timestamp of resource creation (UTC).
func (o SystemDataResponseOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedAt }).(pulumi.StringPtrOutput)
}

// The identity that created the resource.
func (o SystemDataResponseOutput) CreatedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedBy }).(pulumi.StringPtrOutput)
}

// The type of identity that created the resource.
func (o SystemDataResponseOutput) CreatedByType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedByType }).(pulumi.StringPtrOutput)
}

// The timestamp of resource last modification (UTC)
func (o SystemDataResponseOutput) LastModifiedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedAt }).(pulumi.StringPtrOutput)
}

// The identity that last modified the resource.
func (o SystemDataResponseOutput) LastModifiedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedBy }).(pulumi.StringPtrOutput)
}

// The type of identity that last modified the resource.
func (o SystemDataResponseOutput) LastModifiedByType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedByType }).(pulumi.StringPtrOutput)
}

// TensorFlow distribution configuration.
type TensorFlow struct {
	// Enum to determine the job distribution type.
	// Expected value is 'TensorFlow'.
	DistributionType string `pulumi:"distributionType"`
	// Number of parameter server tasks.
	ParameterServerCount *int `pulumi:"parameterServerCount"`
	// Number of workers. Overwrites the node count in compute binding.
	WorkerCount *int `pulumi:"workerCount"`
}

// TensorFlowInput is an input type that accepts TensorFlowArgs and TensorFlowOutput values.
// You can construct a concrete instance of `TensorFlowInput` via:
//
//	TensorFlowArgs{...}
type TensorFlowInput interface {
	pulumi.Input

	ToTensorFlowOutput() TensorFlowOutput
	ToTensorFlowOutputWithContext(context.Context) TensorFlowOutput
}

// TensorFlow distribution configuration.
type TensorFlowArgs struct {
	// Enum to determine the job distribution type.
	// Expected value is 'TensorFlow'.
	DistributionType pulumi.StringInput `pulumi:"distributionType"`
	// Number of parameter server tasks.
	ParameterServerCount pulumi.IntPtrInput `pulumi:"parameterServerCount"`
	// Number of workers. Overwrites the node count in compute binding.
	WorkerCount pulumi.IntPtrInput `pulumi:"workerCount"`
}

func (TensorFlowArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TensorFlow)(nil)).Elem()
}

func (i TensorFlowArgs) ToTensorFlowOutput() TensorFlowOutput {
	return i.ToTensorFlowOutputWithContext(context.Background())
}

func (i TensorFlowArgs) ToTensorFlowOutputWithContext(ctx context.Context) TensorFlowOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TensorFlowOutput)
}

func (i TensorFlowArgs) ToTensorFlowPtrOutput() TensorFlowPtrOutput {
	return i.ToTensorFlowPtrOutputWithContext(context.Background())
}

func (i TensorFlowArgs) ToTensorFlowPtrOutputWithContext(ctx context.Context) TensorFlowPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TensorFlowOutput).ToTensorFlowPtrOutputWithContext(ctx)
}

// TensorFlowPtrInput is an input type that accepts TensorFlowArgs, TensorFlowPtr and TensorFlowPtrOutput values.
// You can construct a concrete instance of `TensorFlowPtrInput` via:
//
//	        TensorFlowArgs{...}
//
//	or:
//
//	        nil
type TensorFlowPtrInput interface {
	pulumi.Input

	ToTensorFlowPtrOutput() TensorFlowPtrOutput
	ToTensorFlowPtrOutputWithContext(context.Context) TensorFlowPtrOutput
}

type tensorFlowPtrType TensorFlowArgs

func TensorFlowPtr(v *TensorFlowArgs) TensorFlowPtrInput {
	return (*tensorFlowPtrType)(v)
}

func (*tensorFlowPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TensorFlow)(nil)).Elem()
}

func (i *tensorFlowPtrType) ToTensorFlowPtrOutput() TensorFlowPtrOutput {
	return i.ToTensorFlowPtrOutputWithContext(context.Background())
}

func (i *tensorFlowPtrType) ToTensorFlowPtrOutputWithContext(ctx context.Context) TensorFlowPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TensorFlowPtrOutput)
}

// TensorFlow distribution configuration.
type TensorFlowOutput struct{ *pulumi.OutputState }

func (TensorFlowOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TensorFlow)(nil)).Elem()
}

func (o TensorFlowOutput) ToTensorFlowOutput() TensorFlowOutput {
	return o
}

func (o TensorFlowOutput) ToTensorFlowOutputWithContext(ctx context.Context) TensorFlowOutput {
	return o
}

func (o TensorFlowOutput) ToTensorFlowPtrOutput() TensorFlowPtrOutput {
	return o.ToTensorFlowPtrOutputWithContext(context.Background())
}

func (o TensorFlowOutput) ToTensorFlowPtrOutputWithContext(ctx context.Context) TensorFlowPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TensorFlow) *TensorFlow {
		return &v
	}).(TensorFlowPtrOutput)
}

// Enum to determine the job distribution type.
// Expected value is 'TensorFlow'.
func (o TensorFlowOutput) DistributionType() pulumi.StringOutput {
	return o.ApplyT(func(v TensorFlow) string { return v.DistributionType }).(pulumi.StringOutput)
}

// Number of parameter server tasks.
func (o TensorFlowOutput) ParameterServerCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TensorFlow) *int { return v.ParameterServerCount }).(pulumi.IntPtrOutput)
}

// Number of workers. Overwrites the node count in compute binding.
func (o TensorFlowOutput) WorkerCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TensorFlow) *int { return v.WorkerCount }).(pulumi.IntPtrOutput)
}

type TensorFlowPtrOutput struct{ *pulumi.OutputState }

func (TensorFlowPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TensorFlow)(nil)).Elem()
}

func (o TensorFlowPtrOutput) ToTensorFlowPtrOutput() TensorFlowPtrOutput {
	return o
}

func (o TensorFlowPtrOutput) ToTensorFlowPtrOutputWithContext(ctx context.Context) TensorFlowPtrOutput {
	return o
}

func (o TensorFlowPtrOutput) Elem() TensorFlowOutput {
	return o.ApplyT(func(v *TensorFlow) TensorFlow {
		if v != nil {
			return *v
		}
		var ret TensorFlow
		return ret
	}).(TensorFlowOutput)
}

// Enum to determine the job distribution type.
// Expected value is 'TensorFlow'.
func (o TensorFlowPtrOutput) DistributionType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TensorFlow) *string {
		if v == nil {
			return nil
		}
		return &v.DistributionType
	}).(pulumi.StringPtrOutput)
}

// Number of parameter server tasks.
func (o TensorFlowPtrOutput) ParameterServerCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TensorFlow) *int {
		if v == nil {
			return nil
		}
		return v.ParameterServerCount
	}).(pulumi.IntPtrOutput)
}

// Number of workers. Overwrites the node count in compute binding.
func (o TensorFlowPtrOutput) WorkerCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TensorFlow) *int {
		if v == nil {
			return nil
		}
		return v.WorkerCount
	}).(pulumi.IntPtrOutput)
}

// TensorFlow distribution configuration.
type TensorFlowResponse struct {
	// Enum to determine the job distribution type.
	// Expected value is 'TensorFlow'.
	DistributionType string `pulumi:"distributionType"`
	// Number of parameter server tasks.
	ParameterServerCount *int `pulumi:"parameterServerCount"`
	// Number of workers. Overwrites the node count in compute binding.
	WorkerCount *int `pulumi:"workerCount"`
}

// TensorFlow distribution configuration.
type TensorFlowResponseOutput struct{ *pulumi.OutputState }

func (TensorFlowResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TensorFlowResponse)(nil)).Elem()
}

func (o TensorFlowResponseOutput) ToTensorFlowResponseOutput() TensorFlowResponseOutput {
	return o
}

func (o TensorFlowResponseOutput) ToTensorFlowResponseOutputWithContext(ctx context.Context) TensorFlowResponseOutput {
	return o
}

// Enum to determine the job distribution type.
// Expected value is 'TensorFlow'.
func (o TensorFlowResponseOutput) DistributionType() pulumi.StringOutput {
	return o.ApplyT(func(v TensorFlowResponse) string { return v.DistributionType }).(pulumi.StringOutput)
}

// Number of parameter server tasks.
func (o TensorFlowResponseOutput) ParameterServerCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TensorFlowResponse) *int { return v.ParameterServerCount }).(pulumi.IntPtrOutput)
}

// Number of workers. Overwrites the node count in compute binding.
func (o TensorFlowResponseOutput) WorkerCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TensorFlowResponse) *int { return v.WorkerCount }).(pulumi.IntPtrOutput)
}

type TensorFlowResponsePtrOutput struct{ *pulumi.OutputState }

func (TensorFlowResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TensorFlowResponse)(nil)).Elem()
}

func (o TensorFlowResponsePtrOutput) ToTensorFlowResponsePtrOutput() TensorFlowResponsePtrOutput {
	return o
}

func (o TensorFlowResponsePtrOutput) ToTensorFlowResponsePtrOutputWithContext(ctx context.Context) TensorFlowResponsePtrOutput {
	return o
}

func (o TensorFlowResponsePtrOutput) Elem() TensorFlowResponseOutput {
	return o.ApplyT(func(v *TensorFlowResponse) TensorFlowResponse {
		if v != nil {
			return *v
		}
		var ret TensorFlowResponse
		return ret
	}).(TensorFlowResponseOutput)
}

// Enum to determine the job distribution type.
// Expected value is 'TensorFlow'.
func (o TensorFlowResponsePtrOutput) DistributionType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TensorFlowResponse) *string {
		if v == nil {
			return nil
		}
		return &v.DistributionType
	}).(pulumi.StringPtrOutput)
}

// Number of parameter server tasks.
func (o TensorFlowResponsePtrOutput) ParameterServerCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TensorFlowResponse) *int {
		if v == nil {
			return nil
		}
		return v.ParameterServerCount
	}).(pulumi.IntPtrOutput)
}

// Number of workers. Overwrites the node count in compute binding.
func (o TensorFlowResponsePtrOutput) WorkerCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TensorFlowResponse) *int {
		if v == nil {
			return nil
		}
		return v.WorkerCount
	}).(pulumi.IntPtrOutput)
}

// Trial component definition.
type TrialComponent struct {
	// ARM resource ID of the code asset.
	CodeId *string `pulumi:"codeId"`
	// [Required] The command to execute on startup of the job. eg. "python train.py"
	Command string `pulumi:"command"`
	// Distribution configuration of the job. If set, this should be one of Mpi, Tensorflow, PyTorch, or null.
	Distribution interface{} `pulumi:"distribution"`
	// The ARM resource ID of the Environment specification for the job.
	EnvironmentId *string `pulumi:"environmentId"`
	// Environment variables included in the job.
	EnvironmentVariables map[string]string `pulumi:"environmentVariables"`
	// Mapping of input data bindings used in the job.
	InputDataBindings map[string]InputDataBinding `pulumi:"inputDataBindings"`
	// Mapping of output data bindings used in the job.
	OutputDataBindings map[string]OutputDataBinding `pulumi:"outputDataBindings"`
	// The max run duration in ISO 8601 format, after which the trial component will be cancelled.
	// Only supports duration with precision as low as Seconds.
	Timeout *string `pulumi:"timeout"`
}

// TrialComponentInput is an input type that accepts TrialComponentArgs and TrialComponentOutput values.
// You can construct a concrete instance of `TrialComponentInput` via:
//
//	TrialComponentArgs{...}
type TrialComponentInput interface {
	pulumi.Input

	ToTrialComponentOutput() TrialComponentOutput
	ToTrialComponentOutputWithContext(context.Context) TrialComponentOutput
}

// Trial component definition.
type TrialComponentArgs struct {
	// ARM resource ID of the code asset.
	CodeId pulumi.StringPtrInput `pulumi:"codeId"`
	// [Required] The command to execute on startup of the job. eg. "python train.py"
	Command pulumi.StringInput `pulumi:"command"`
	// Distribution configuration of the job. If set, this should be one of Mpi, Tensorflow, PyTorch, or null.
	Distribution pulumi.Input `pulumi:"distribution"`
	// The ARM resource ID of the Environment specification for the job.
	EnvironmentId pulumi.StringPtrInput `pulumi:"environmentId"`
	// Environment variables included in the job.
	EnvironmentVariables pulumi.StringMapInput `pulumi:"environmentVariables"`
	// Mapping of input data bindings used in the job.
	InputDataBindings InputDataBindingMapInput `pulumi:"inputDataBindings"`
	// Mapping of output data bindings used in the job.
	OutputDataBindings OutputDataBindingMapInput `pulumi:"outputDataBindings"`
	// The max run duration in ISO 8601 format, after which the trial component will be cancelled.
	// Only supports duration with precision as low as Seconds.
	Timeout pulumi.StringPtrInput `pulumi:"timeout"`
}

func (TrialComponentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TrialComponent)(nil)).Elem()
}

func (i TrialComponentArgs) ToTrialComponentOutput() TrialComponentOutput {
	return i.ToTrialComponentOutputWithContext(context.Background())
}

func (i TrialComponentArgs) ToTrialComponentOutputWithContext(ctx context.Context) TrialComponentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TrialComponentOutput)
}

func (i TrialComponentArgs) ToTrialComponentPtrOutput() TrialComponentPtrOutput {
	return i.ToTrialComponentPtrOutputWithContext(context.Background())
}

func (i TrialComponentArgs) ToTrialComponentPtrOutputWithContext(ctx context.Context) TrialComponentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TrialComponentOutput).ToTrialComponentPtrOutputWithContext(ctx)
}

// TrialComponentPtrInput is an input type that accepts TrialComponentArgs, TrialComponentPtr and TrialComponentPtrOutput values.
// You can construct a concrete instance of `TrialComponentPtrInput` via:
//
//	        TrialComponentArgs{...}
//
//	or:
//
//	        nil
type TrialComponentPtrInput interface {
	pulumi.Input

	ToTrialComponentPtrOutput() TrialComponentPtrOutput
	ToTrialComponentPtrOutputWithContext(context.Context) TrialComponentPtrOutput
}

type trialComponentPtrType TrialComponentArgs

func TrialComponentPtr(v *TrialComponentArgs) TrialComponentPtrInput {
	return (*trialComponentPtrType)(v)
}

func (*trialComponentPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TrialComponent)(nil)).Elem()
}

func (i *trialComponentPtrType) ToTrialComponentPtrOutput() TrialComponentPtrOutput {
	return i.ToTrialComponentPtrOutputWithContext(context.Background())
}

func (i *trialComponentPtrType) ToTrialComponentPtrOutputWithContext(ctx context.Context) TrialComponentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TrialComponentPtrOutput)
}

// Trial component definition.
type TrialComponentOutput struct{ *pulumi.OutputState }

func (TrialComponentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TrialComponent)(nil)).Elem()
}

func (o TrialComponentOutput) ToTrialComponentOutput() TrialComponentOutput {
	return o
}

func (o TrialComponentOutput) ToTrialComponentOutputWithContext(ctx context.Context) TrialComponentOutput {
	return o
}

func (o TrialComponentOutput) ToTrialComponentPtrOutput() TrialComponentPtrOutput {
	return o.ToTrialComponentPtrOutputWithContext(context.Background())
}

func (o TrialComponentOutput) ToTrialComponentPtrOutputWithContext(ctx context.Context) TrialComponentPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TrialComponent) *TrialComponent {
		return &v
	}).(TrialComponentPtrOutput)
}

// ARM resource ID of the code asset.
func (o TrialComponentOutput) CodeId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TrialComponent) *string { return v.CodeId }).(pulumi.StringPtrOutput)
}

// [Required] The command to execute on startup of the job. eg. "python train.py"
func (o TrialComponentOutput) Command() pulumi.StringOutput {
	return o.ApplyT(func(v TrialComponent) string { return v.Command }).(pulumi.StringOutput)
}

// Distribution configuration of the job. If set, this should be one of Mpi, Tensorflow, PyTorch, or null.
func (o TrialComponentOutput) Distribution() pulumi.AnyOutput {
	return o.ApplyT(func(v TrialComponent) interface{} { return v.Distribution }).(pulumi.AnyOutput)
}

// The ARM resource ID of the Environment specification for the job.
func (o TrialComponentOutput) EnvironmentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TrialComponent) *string { return v.EnvironmentId }).(pulumi.StringPtrOutput)
}

// Environment variables included in the job.
func (o TrialComponentOutput) EnvironmentVariables() pulumi.StringMapOutput {
	return o.ApplyT(func(v TrialComponent) map[string]string { return v.EnvironmentVariables }).(pulumi.StringMapOutput)
}

// Mapping of input data bindings used in the job.
func (o TrialComponentOutput) InputDataBindings() InputDataBindingMapOutput {
	return o.ApplyT(func(v TrialComponent) map[string]InputDataBinding { return v.InputDataBindings }).(InputDataBindingMapOutput)
}

// Mapping of output data bindings used in the job.
func (o TrialComponentOutput) OutputDataBindings() OutputDataBindingMapOutput {
	return o.ApplyT(func(v TrialComponent) map[string]OutputDataBinding { return v.OutputDataBindings }).(OutputDataBindingMapOutput)
}

// The max run duration in ISO 8601 format, after which the trial component will be cancelled.
// Only supports duration with precision as low as Seconds.
func (o TrialComponentOutput) Timeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TrialComponent) *string { return v.Timeout }).(pulumi.StringPtrOutput)
}

type TrialComponentPtrOutput struct{ *pulumi.OutputState }

func (TrialComponentPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TrialComponent)(nil)).Elem()
}

func (o TrialComponentPtrOutput) ToTrialComponentPtrOutput() TrialComponentPtrOutput {
	return o
}

func (o TrialComponentPtrOutput) ToTrialComponentPtrOutputWithContext(ctx context.Context) TrialComponentPtrOutput {
	return o
}

func (o TrialComponentPtrOutput) Elem() TrialComponentOutput {
	return o.ApplyT(func(v *TrialComponent) TrialComponent {
		if v != nil {
			return *v
		}
		var ret TrialComponent
		return ret
	}).(TrialComponentOutput)
}

// ARM resource ID of the code asset.
func (o TrialComponentPtrOutput) CodeId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TrialComponent) *string {
		if v == nil {
			return nil
		}
		return v.CodeId
	}).(pulumi.StringPtrOutput)
}

// [Required] The command to execute on startup of the job. eg. "python train.py"
func (o TrialComponentPtrOutput) Command() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TrialComponent) *string {
		if v == nil {
			return nil
		}
		return &v.Command
	}).(pulumi.StringPtrOutput)
}

// Distribution configuration of the job. If set, this should be one of Mpi, Tensorflow, PyTorch, or null.
func (o TrialComponentPtrOutput) Distribution() pulumi.AnyOutput {
	return o.ApplyT(func(v *TrialComponent) interface{} {
		if v == nil {
			return nil
		}
		return v.Distribution
	}).(pulumi.AnyOutput)
}

// The ARM resource ID of the Environment specification for the job.
func (o TrialComponentPtrOutput) EnvironmentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TrialComponent) *string {
		if v == nil {
			return nil
		}
		return v.EnvironmentId
	}).(pulumi.StringPtrOutput)
}

// Environment variables included in the job.
func (o TrialComponentPtrOutput) EnvironmentVariables() pulumi.StringMapOutput {
	return o.ApplyT(func(v *TrialComponent) map[string]string {
		if v == nil {
			return nil
		}
		return v.EnvironmentVariables
	}).(pulumi.StringMapOutput)
}

// Mapping of input data bindings used in the job.
func (o TrialComponentPtrOutput) InputDataBindings() InputDataBindingMapOutput {
	return o.ApplyT(func(v *TrialComponent) map[string]InputDataBinding {
		if v == nil {
			return nil
		}
		return v.InputDataBindings
	}).(InputDataBindingMapOutput)
}

// Mapping of output data bindings used in the job.
func (o TrialComponentPtrOutput) OutputDataBindings() OutputDataBindingMapOutput {
	return o.ApplyT(func(v *TrialComponent) map[string]OutputDataBinding {
		if v == nil {
			return nil
		}
		return v.OutputDataBindings
	}).(OutputDataBindingMapOutput)
}

// The max run duration in ISO 8601 format, after which the trial component will be cancelled.
// Only supports duration with precision as low as Seconds.
func (o TrialComponentPtrOutput) Timeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TrialComponent) *string {
		if v == nil {
			return nil
		}
		return v.Timeout
	}).(pulumi.StringPtrOutput)
}

// Trial component definition.
type TrialComponentResponse struct {
	// ARM resource ID of the code asset.
	CodeId *string `pulumi:"codeId"`
	// [Required] The command to execute on startup of the job. eg. "python train.py"
	Command string `pulumi:"command"`
	// Distribution configuration of the job. If set, this should be one of Mpi, Tensorflow, PyTorch, or null.
	Distribution interface{} `pulumi:"distribution"`
	// The ARM resource ID of the Environment specification for the job.
	EnvironmentId *string `pulumi:"environmentId"`
	// Environment variables included in the job.
	EnvironmentVariables map[string]string `pulumi:"environmentVariables"`
	// Mapping of input data bindings used in the job.
	InputDataBindings map[string]InputDataBindingResponse `pulumi:"inputDataBindings"`
	// Mapping of output data bindings used in the job.
	OutputDataBindings map[string]OutputDataBindingResponse `pulumi:"outputDataBindings"`
	// The max run duration in ISO 8601 format, after which the trial component will be cancelled.
	// Only supports duration with precision as low as Seconds.
	Timeout *string `pulumi:"timeout"`
}

// Trial component definition.
type TrialComponentResponseOutput struct{ *pulumi.OutputState }

func (TrialComponentResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TrialComponentResponse)(nil)).Elem()
}

func (o TrialComponentResponseOutput) ToTrialComponentResponseOutput() TrialComponentResponseOutput {
	return o
}

func (o TrialComponentResponseOutput) ToTrialComponentResponseOutputWithContext(ctx context.Context) TrialComponentResponseOutput {
	return o
}

// ARM resource ID of the code asset.
func (o TrialComponentResponseOutput) CodeId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TrialComponentResponse) *string { return v.CodeId }).(pulumi.StringPtrOutput)
}

// [Required] The command to execute on startup of the job. eg. "python train.py"
func (o TrialComponentResponseOutput) Command() pulumi.StringOutput {
	return o.ApplyT(func(v TrialComponentResponse) string { return v.Command }).(pulumi.StringOutput)
}

// Distribution configuration of the job. If set, this should be one of Mpi, Tensorflow, PyTorch, or null.
func (o TrialComponentResponseOutput) Distribution() pulumi.AnyOutput {
	return o.ApplyT(func(v TrialComponentResponse) interface{} { return v.Distribution }).(pulumi.AnyOutput)
}

// The ARM resource ID of the Environment specification for the job.
func (o TrialComponentResponseOutput) EnvironmentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TrialComponentResponse) *string { return v.EnvironmentId }).(pulumi.StringPtrOutput)
}

// Environment variables included in the job.
func (o TrialComponentResponseOutput) EnvironmentVariables() pulumi.StringMapOutput {
	return o.ApplyT(func(v TrialComponentResponse) map[string]string { return v.EnvironmentVariables }).(pulumi.StringMapOutput)
}

// Mapping of input data bindings used in the job.
func (o TrialComponentResponseOutput) InputDataBindings() InputDataBindingResponseMapOutput {
	return o.ApplyT(func(v TrialComponentResponse) map[string]InputDataBindingResponse { return v.InputDataBindings }).(InputDataBindingResponseMapOutput)
}

// Mapping of output data bindings used in the job.
func (o TrialComponentResponseOutput) OutputDataBindings() OutputDataBindingResponseMapOutput {
	return o.ApplyT(func(v TrialComponentResponse) map[string]OutputDataBindingResponse { return v.OutputDataBindings }).(OutputDataBindingResponseMapOutput)
}

// The max run duration in ISO 8601 format, after which the trial component will be cancelled.
// Only supports duration with precision as low as Seconds.
func (o TrialComponentResponseOutput) Timeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TrialComponentResponse) *string { return v.Timeout }).(pulumi.StringPtrOutput)
}

type TrialComponentResponsePtrOutput struct{ *pulumi.OutputState }

func (TrialComponentResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TrialComponentResponse)(nil)).Elem()
}

func (o TrialComponentResponsePtrOutput) ToTrialComponentResponsePtrOutput() TrialComponentResponsePtrOutput {
	return o
}

func (o TrialComponentResponsePtrOutput) ToTrialComponentResponsePtrOutputWithContext(ctx context.Context) TrialComponentResponsePtrOutput {
	return o
}

func (o TrialComponentResponsePtrOutput) Elem() TrialComponentResponseOutput {
	return o.ApplyT(func(v *TrialComponentResponse) TrialComponentResponse {
		if v != nil {
			return *v
		}
		var ret TrialComponentResponse
		return ret
	}).(TrialComponentResponseOutput)
}

// ARM resource ID of the code asset.
func (o TrialComponentResponsePtrOutput) CodeId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TrialComponentResponse) *string {
		if v == nil {
			return nil
		}
		return v.CodeId
	}).(pulumi.StringPtrOutput)
}

// [Required] The command to execute on startup of the job. eg. "python train.py"
func (o TrialComponentResponsePtrOutput) Command() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TrialComponentResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Command
	}).(pulumi.StringPtrOutput)
}

// Distribution configuration of the job. If set, this should be one of Mpi, Tensorflow, PyTorch, or null.
func (o TrialComponentResponsePtrOutput) Distribution() pulumi.AnyOutput {
	return o.ApplyT(func(v *TrialComponentResponse) interface{} {
		if v == nil {
			return nil
		}
		return v.Distribution
	}).(pulumi.AnyOutput)
}

// The ARM resource ID of the Environment specification for the job.
func (o TrialComponentResponsePtrOutput) EnvironmentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TrialComponentResponse) *string {
		if v == nil {
			return nil
		}
		return v.EnvironmentId
	}).(pulumi.StringPtrOutput)
}

// Environment variables included in the job.
func (o TrialComponentResponsePtrOutput) EnvironmentVariables() pulumi.StringMapOutput {
	return o.ApplyT(func(v *TrialComponentResponse) map[string]string {
		if v == nil {
			return nil
		}
		return v.EnvironmentVariables
	}).(pulumi.StringMapOutput)
}

// Mapping of input data bindings used in the job.
func (o TrialComponentResponsePtrOutput) InputDataBindings() InputDataBindingResponseMapOutput {
	return o.ApplyT(func(v *TrialComponentResponse) map[string]InputDataBindingResponse {
		if v == nil {
			return nil
		}
		return v.InputDataBindings
	}).(InputDataBindingResponseMapOutput)
}

// Mapping of output data bindings used in the job.
func (o TrialComponentResponsePtrOutput) OutputDataBindings() OutputDataBindingResponseMapOutput {
	return o.ApplyT(func(v *TrialComponentResponse) map[string]OutputDataBindingResponse {
		if v == nil {
			return nil
		}
		return v.OutputDataBindings
	}).(OutputDataBindingResponseMapOutput)
}

// The max run duration in ISO 8601 format, after which the trial component will be cancelled.
// Only supports duration with precision as low as Seconds.
func (o TrialComponentResponsePtrOutput) Timeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TrialComponentResponse) *string {
		if v == nil {
			return nil
		}
		return v.Timeout
	}).(pulumi.StringPtrOutput)
}

// Defines an early termination policy that cancels a given percentage of runs at each evaluation interval.
type TruncationSelectionPolicy struct {
	// Number of intervals by which to delay the first evaluation.
	DelayEvaluation *int `pulumi:"delayEvaluation"`
	// Interval (number of runs) between policy evaluations.
	EvaluationInterval *int `pulumi:"evaluationInterval"`
	// Expected value is 'TruncationSelection'.
	PolicyType string `pulumi:"policyType"`
	// The percentage of runs to cancel at each evaluation interval.
	TruncationPercentage *int `pulumi:"truncationPercentage"`
}

// TruncationSelectionPolicyInput is an input type that accepts TruncationSelectionPolicyArgs and TruncationSelectionPolicyOutput values.
// You can construct a concrete instance of `TruncationSelectionPolicyInput` via:
//
//	TruncationSelectionPolicyArgs{...}
type TruncationSelectionPolicyInput interface {
	pulumi.Input

	ToTruncationSelectionPolicyOutput() TruncationSelectionPolicyOutput
	ToTruncationSelectionPolicyOutputWithContext(context.Context) TruncationSelectionPolicyOutput
}

// Defines an early termination policy that cancels a given percentage of runs at each evaluation interval.
type TruncationSelectionPolicyArgs struct {
	// Number of intervals by which to delay the first evaluation.
	DelayEvaluation pulumi.IntPtrInput `pulumi:"delayEvaluation"`
	// Interval (number of runs) between policy evaluations.
	EvaluationInterval pulumi.IntPtrInput `pulumi:"evaluationInterval"`
	// Expected value is 'TruncationSelection'.
	PolicyType pulumi.StringInput `pulumi:"policyType"`
	// The percentage of runs to cancel at each evaluation interval.
	TruncationPercentage pulumi.IntPtrInput `pulumi:"truncationPercentage"`
}

func (TruncationSelectionPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TruncationSelectionPolicy)(nil)).Elem()
}

func (i TruncationSelectionPolicyArgs) ToTruncationSelectionPolicyOutput() TruncationSelectionPolicyOutput {
	return i.ToTruncationSelectionPolicyOutputWithContext(context.Background())
}

func (i TruncationSelectionPolicyArgs) ToTruncationSelectionPolicyOutputWithContext(ctx context.Context) TruncationSelectionPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TruncationSelectionPolicyOutput)
}

func (i TruncationSelectionPolicyArgs) ToTruncationSelectionPolicyPtrOutput() TruncationSelectionPolicyPtrOutput {
	return i.ToTruncationSelectionPolicyPtrOutputWithContext(context.Background())
}

func (i TruncationSelectionPolicyArgs) ToTruncationSelectionPolicyPtrOutputWithContext(ctx context.Context) TruncationSelectionPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TruncationSelectionPolicyOutput).ToTruncationSelectionPolicyPtrOutputWithContext(ctx)
}

// TruncationSelectionPolicyPtrInput is an input type that accepts TruncationSelectionPolicyArgs, TruncationSelectionPolicyPtr and TruncationSelectionPolicyPtrOutput values.
// You can construct a concrete instance of `TruncationSelectionPolicyPtrInput` via:
//
//	        TruncationSelectionPolicyArgs{...}
//
//	or:
//
//	        nil
type TruncationSelectionPolicyPtrInput interface {
	pulumi.Input

	ToTruncationSelectionPolicyPtrOutput() TruncationSelectionPolicyPtrOutput
	ToTruncationSelectionPolicyPtrOutputWithContext(context.Context) TruncationSelectionPolicyPtrOutput
}

type truncationSelectionPolicyPtrType TruncationSelectionPolicyArgs

func TruncationSelectionPolicyPtr(v *TruncationSelectionPolicyArgs) TruncationSelectionPolicyPtrInput {
	return (*truncationSelectionPolicyPtrType)(v)
}

func (*truncationSelectionPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TruncationSelectionPolicy)(nil)).Elem()
}

func (i *truncationSelectionPolicyPtrType) ToTruncationSelectionPolicyPtrOutput() TruncationSelectionPolicyPtrOutput {
	return i.ToTruncationSelectionPolicyPtrOutputWithContext(context.Background())
}

func (i *truncationSelectionPolicyPtrType) ToTruncationSelectionPolicyPtrOutputWithContext(ctx context.Context) TruncationSelectionPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TruncationSelectionPolicyPtrOutput)
}

// Defines an early termination policy that cancels a given percentage of runs at each evaluation interval.
type TruncationSelectionPolicyOutput struct{ *pulumi.OutputState }

func (TruncationSelectionPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TruncationSelectionPolicy)(nil)).Elem()
}

func (o TruncationSelectionPolicyOutput) ToTruncationSelectionPolicyOutput() TruncationSelectionPolicyOutput {
	return o
}

func (o TruncationSelectionPolicyOutput) ToTruncationSelectionPolicyOutputWithContext(ctx context.Context) TruncationSelectionPolicyOutput {
	return o
}

func (o TruncationSelectionPolicyOutput) ToTruncationSelectionPolicyPtrOutput() TruncationSelectionPolicyPtrOutput {
	return o.ToTruncationSelectionPolicyPtrOutputWithContext(context.Background())
}

func (o TruncationSelectionPolicyOutput) ToTruncationSelectionPolicyPtrOutputWithContext(ctx context.Context) TruncationSelectionPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TruncationSelectionPolicy) *TruncationSelectionPolicy {
		return &v
	}).(TruncationSelectionPolicyPtrOutput)
}

// Number of intervals by which to delay the first evaluation.
func (o TruncationSelectionPolicyOutput) DelayEvaluation() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TruncationSelectionPolicy) *int { return v.DelayEvaluation }).(pulumi.IntPtrOutput)
}

// Interval (number of runs) between policy evaluations.
func (o TruncationSelectionPolicyOutput) EvaluationInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TruncationSelectionPolicy) *int { return v.EvaluationInterval }).(pulumi.IntPtrOutput)
}

// Expected value is 'TruncationSelection'.
func (o TruncationSelectionPolicyOutput) PolicyType() pulumi.StringOutput {
	return o.ApplyT(func(v TruncationSelectionPolicy) string { return v.PolicyType }).(pulumi.StringOutput)
}

// The percentage of runs to cancel at each evaluation interval.
func (o TruncationSelectionPolicyOutput) TruncationPercentage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TruncationSelectionPolicy) *int { return v.TruncationPercentage }).(pulumi.IntPtrOutput)
}

type TruncationSelectionPolicyPtrOutput struct{ *pulumi.OutputState }

func (TruncationSelectionPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TruncationSelectionPolicy)(nil)).Elem()
}

func (o TruncationSelectionPolicyPtrOutput) ToTruncationSelectionPolicyPtrOutput() TruncationSelectionPolicyPtrOutput {
	return o
}

func (o TruncationSelectionPolicyPtrOutput) ToTruncationSelectionPolicyPtrOutputWithContext(ctx context.Context) TruncationSelectionPolicyPtrOutput {
	return o
}

func (o TruncationSelectionPolicyPtrOutput) Elem() TruncationSelectionPolicyOutput {
	return o.ApplyT(func(v *TruncationSelectionPolicy) TruncationSelectionPolicy {
		if v != nil {
			return *v
		}
		var ret TruncationSelectionPolicy
		return ret
	}).(TruncationSelectionPolicyOutput)
}

// Number of intervals by which to delay the first evaluation.
func (o TruncationSelectionPolicyPtrOutput) DelayEvaluation() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TruncationSelectionPolicy) *int {
		if v == nil {
			return nil
		}
		return v.DelayEvaluation
	}).(pulumi.IntPtrOutput)
}

// Interval (number of runs) between policy evaluations.
func (o TruncationSelectionPolicyPtrOutput) EvaluationInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TruncationSelectionPolicy) *int {
		if v == nil {
			return nil
		}
		return v.EvaluationInterval
	}).(pulumi.IntPtrOutput)
}

// Expected value is 'TruncationSelection'.
func (o TruncationSelectionPolicyPtrOutput) PolicyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TruncationSelectionPolicy) *string {
		if v == nil {
			return nil
		}
		return &v.PolicyType
	}).(pulumi.StringPtrOutput)
}

// The percentage of runs to cancel at each evaluation interval.
func (o TruncationSelectionPolicyPtrOutput) TruncationPercentage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TruncationSelectionPolicy) *int {
		if v == nil {
			return nil
		}
		return v.TruncationPercentage
	}).(pulumi.IntPtrOutput)
}

// Defines an early termination policy that cancels a given percentage of runs at each evaluation interval.
type TruncationSelectionPolicyResponse struct {
	// Number of intervals by which to delay the first evaluation.
	DelayEvaluation *int `pulumi:"delayEvaluation"`
	// Interval (number of runs) between policy evaluations.
	EvaluationInterval *int `pulumi:"evaluationInterval"`
	// Expected value is 'TruncationSelection'.
	PolicyType string `pulumi:"policyType"`
	// The percentage of runs to cancel at each evaluation interval.
	TruncationPercentage *int `pulumi:"truncationPercentage"`
}

// Defines an early termination policy that cancels a given percentage of runs at each evaluation interval.
type TruncationSelectionPolicyResponseOutput struct{ *pulumi.OutputState }

func (TruncationSelectionPolicyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TruncationSelectionPolicyResponse)(nil)).Elem()
}

func (o TruncationSelectionPolicyResponseOutput) ToTruncationSelectionPolicyResponseOutput() TruncationSelectionPolicyResponseOutput {
	return o
}

func (o TruncationSelectionPolicyResponseOutput) ToTruncationSelectionPolicyResponseOutputWithContext(ctx context.Context) TruncationSelectionPolicyResponseOutput {
	return o
}

// Number of intervals by which to delay the first evaluation.
func (o TruncationSelectionPolicyResponseOutput) DelayEvaluation() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TruncationSelectionPolicyResponse) *int { return v.DelayEvaluation }).(pulumi.IntPtrOutput)
}

// Interval (number of runs) between policy evaluations.
func (o TruncationSelectionPolicyResponseOutput) EvaluationInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TruncationSelectionPolicyResponse) *int { return v.EvaluationInterval }).(pulumi.IntPtrOutput)
}

// Expected value is 'TruncationSelection'.
func (o TruncationSelectionPolicyResponseOutput) PolicyType() pulumi.StringOutput {
	return o.ApplyT(func(v TruncationSelectionPolicyResponse) string { return v.PolicyType }).(pulumi.StringOutput)
}

// The percentage of runs to cancel at each evaluation interval.
func (o TruncationSelectionPolicyResponseOutput) TruncationPercentage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TruncationSelectionPolicyResponse) *int { return v.TruncationPercentage }).(pulumi.IntPtrOutput)
}

type TruncationSelectionPolicyResponsePtrOutput struct{ *pulumi.OutputState }

func (TruncationSelectionPolicyResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TruncationSelectionPolicyResponse)(nil)).Elem()
}

func (o TruncationSelectionPolicyResponsePtrOutput) ToTruncationSelectionPolicyResponsePtrOutput() TruncationSelectionPolicyResponsePtrOutput {
	return o
}

func (o TruncationSelectionPolicyResponsePtrOutput) ToTruncationSelectionPolicyResponsePtrOutputWithContext(ctx context.Context) TruncationSelectionPolicyResponsePtrOutput {
	return o
}

func (o TruncationSelectionPolicyResponsePtrOutput) Elem() TruncationSelectionPolicyResponseOutput {
	return o.ApplyT(func(v *TruncationSelectionPolicyResponse) TruncationSelectionPolicyResponse {
		if v != nil {
			return *v
		}
		var ret TruncationSelectionPolicyResponse
		return ret
	}).(TruncationSelectionPolicyResponseOutput)
}

// Number of intervals by which to delay the first evaluation.
func (o TruncationSelectionPolicyResponsePtrOutput) DelayEvaluation() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TruncationSelectionPolicyResponse) *int {
		if v == nil {
			return nil
		}
		return v.DelayEvaluation
	}).(pulumi.IntPtrOutput)
}

// Interval (number of runs) between policy evaluations.
func (o TruncationSelectionPolicyResponsePtrOutput) EvaluationInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TruncationSelectionPolicyResponse) *int {
		if v == nil {
			return nil
		}
		return v.EvaluationInterval
	}).(pulumi.IntPtrOutput)
}

// Expected value is 'TruncationSelection'.
func (o TruncationSelectionPolicyResponsePtrOutput) PolicyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TruncationSelectionPolicyResponse) *string {
		if v == nil {
			return nil
		}
		return &v.PolicyType
	}).(pulumi.StringPtrOutput)
}

// The percentage of runs to cancel at each evaluation interval.
func (o TruncationSelectionPolicyResponsePtrOutput) TruncationPercentage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TruncationSelectionPolicyResponse) *int {
		if v == nil {
			return nil
		}
		return v.TruncationPercentage
	}).(pulumi.IntPtrOutput)
}

// User assigned identities associated with a resource.
type UserAssignedIdentityMeta struct {
	// Aka application ID, a unique identifier generated by Azure AD that is tied to an application and service principal during its initial provisioning.
	ClientId *string `pulumi:"clientId"`
	// The object ID of the service principal object for your managed identity that is used to grant role-based access to an Azure resource.
	PrincipalId *string `pulumi:"principalId"`
}

// UserAssignedIdentityMetaInput is an input type that accepts UserAssignedIdentityMetaArgs and UserAssignedIdentityMetaOutput values.
// You can construct a concrete instance of `UserAssignedIdentityMetaInput` via:
//
//	UserAssignedIdentityMetaArgs{...}
type UserAssignedIdentityMetaInput interface {
	pulumi.Input

	ToUserAssignedIdentityMetaOutput() UserAssignedIdentityMetaOutput
	ToUserAssignedIdentityMetaOutputWithContext(context.Context) UserAssignedIdentityMetaOutput
}

// User assigned identities associated with a resource.
type UserAssignedIdentityMetaArgs struct {
	// Aka application ID, a unique identifier generated by Azure AD that is tied to an application and service principal during its initial provisioning.
	ClientId pulumi.StringPtrInput `pulumi:"clientId"`
	// The object ID of the service principal object for your managed identity that is used to grant role-based access to an Azure resource.
	PrincipalId pulumi.StringPtrInput `pulumi:"principalId"`
}

func (UserAssignedIdentityMetaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserAssignedIdentityMeta)(nil)).Elem()
}

func (i UserAssignedIdentityMetaArgs) ToUserAssignedIdentityMetaOutput() UserAssignedIdentityMetaOutput {
	return i.ToUserAssignedIdentityMetaOutputWithContext(context.Background())
}

func (i UserAssignedIdentityMetaArgs) ToUserAssignedIdentityMetaOutputWithContext(ctx context.Context) UserAssignedIdentityMetaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserAssignedIdentityMetaOutput)
}

// UserAssignedIdentityMetaMapInput is an input type that accepts UserAssignedIdentityMetaMap and UserAssignedIdentityMetaMapOutput values.
// You can construct a concrete instance of `UserAssignedIdentityMetaMapInput` via:
//
//	UserAssignedIdentityMetaMap{ "key": UserAssignedIdentityMetaArgs{...} }
type UserAssignedIdentityMetaMapInput interface {
	pulumi.Input

	ToUserAssignedIdentityMetaMapOutput() UserAssignedIdentityMetaMapOutput
	ToUserAssignedIdentityMetaMapOutputWithContext(context.Context) UserAssignedIdentityMetaMapOutput
}

type UserAssignedIdentityMetaMap map[string]UserAssignedIdentityMetaInput

func (UserAssignedIdentityMetaMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]UserAssignedIdentityMeta)(nil)).Elem()
}

func (i UserAssignedIdentityMetaMap) ToUserAssignedIdentityMetaMapOutput() UserAssignedIdentityMetaMapOutput {
	return i.ToUserAssignedIdentityMetaMapOutputWithContext(context.Background())
}

func (i UserAssignedIdentityMetaMap) ToUserAssignedIdentityMetaMapOutputWithContext(ctx context.Context) UserAssignedIdentityMetaMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserAssignedIdentityMetaMapOutput)
}

// User assigned identities associated with a resource.
type UserAssignedIdentityMetaOutput struct{ *pulumi.OutputState }

func (UserAssignedIdentityMetaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserAssignedIdentityMeta)(nil)).Elem()
}

func (o UserAssignedIdentityMetaOutput) ToUserAssignedIdentityMetaOutput() UserAssignedIdentityMetaOutput {
	return o
}

func (o UserAssignedIdentityMetaOutput) ToUserAssignedIdentityMetaOutputWithContext(ctx context.Context) UserAssignedIdentityMetaOutput {
	return o
}

// Aka application ID, a unique identifier generated by Azure AD that is tied to an application and service principal during its initial provisioning.
func (o UserAssignedIdentityMetaOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserAssignedIdentityMeta) *string { return v.ClientId }).(pulumi.StringPtrOutput)
}

// The object ID of the service principal object for your managed identity that is used to grant role-based access to an Azure resource.
func (o UserAssignedIdentityMetaOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserAssignedIdentityMeta) *string { return v.PrincipalId }).(pulumi.StringPtrOutput)
}

type UserAssignedIdentityMetaMapOutput struct{ *pulumi.OutputState }

func (UserAssignedIdentityMetaMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]UserAssignedIdentityMeta)(nil)).Elem()
}

func (o UserAssignedIdentityMetaMapOutput) ToUserAssignedIdentityMetaMapOutput() UserAssignedIdentityMetaMapOutput {
	return o
}

func (o UserAssignedIdentityMetaMapOutput) ToUserAssignedIdentityMetaMapOutputWithContext(ctx context.Context) UserAssignedIdentityMetaMapOutput {
	return o
}

func (o UserAssignedIdentityMetaMapOutput) MapIndex(k pulumi.StringInput) UserAssignedIdentityMetaOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) UserAssignedIdentityMeta {
		return vs[0].(map[string]UserAssignedIdentityMeta)[vs[1].(string)]
	}).(UserAssignedIdentityMetaOutput)
}

// User assigned identities associated with a resource.
type UserAssignedIdentityMetaResponse struct {
	// Aka application ID, a unique identifier generated by Azure AD that is tied to an application and service principal during its initial provisioning.
	ClientId *string `pulumi:"clientId"`
	// The object ID of the service principal object for your managed identity that is used to grant role-based access to an Azure resource.
	PrincipalId *string `pulumi:"principalId"`
}

// User assigned identities associated with a resource.
type UserAssignedIdentityMetaResponseOutput struct{ *pulumi.OutputState }

func (UserAssignedIdentityMetaResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserAssignedIdentityMetaResponse)(nil)).Elem()
}

func (o UserAssignedIdentityMetaResponseOutput) ToUserAssignedIdentityMetaResponseOutput() UserAssignedIdentityMetaResponseOutput {
	return o
}

func (o UserAssignedIdentityMetaResponseOutput) ToUserAssignedIdentityMetaResponseOutputWithContext(ctx context.Context) UserAssignedIdentityMetaResponseOutput {
	return o
}

// Aka application ID, a unique identifier generated by Azure AD that is tied to an application and service principal during its initial provisioning.
func (o UserAssignedIdentityMetaResponseOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserAssignedIdentityMetaResponse) *string { return v.ClientId }).(pulumi.StringPtrOutput)
}

// The object ID of the service principal object for your managed identity that is used to grant role-based access to an Azure resource.
func (o UserAssignedIdentityMetaResponseOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserAssignedIdentityMetaResponse) *string { return v.PrincipalId }).(pulumi.StringPtrOutput)
}

type UserAssignedIdentityMetaResponseMapOutput struct{ *pulumi.OutputState }

func (UserAssignedIdentityMetaResponseMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]UserAssignedIdentityMetaResponse)(nil)).Elem()
}

func (o UserAssignedIdentityMetaResponseMapOutput) ToUserAssignedIdentityMetaResponseMapOutput() UserAssignedIdentityMetaResponseMapOutput {
	return o
}

func (o UserAssignedIdentityMetaResponseMapOutput) ToUserAssignedIdentityMetaResponseMapOutputWithContext(ctx context.Context) UserAssignedIdentityMetaResponseMapOutput {
	return o
}

func (o UserAssignedIdentityMetaResponseMapOutput) MapIndex(k pulumi.StringInput) UserAssignedIdentityMetaResponseOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) UserAssignedIdentityMetaResponse {
		return vs[0].(map[string]UserAssignedIdentityMetaResponse)[vs[1].(string)]
	}).(UserAssignedIdentityMetaResponseOutput)
}

func init() {
	pulumi.RegisterOutputType(AccountKeyDatastoreCredentialsOutput{})
	pulumi.RegisterOutputType(AccountKeyDatastoreCredentialsResponseOutput{})
	pulumi.RegisterOutputType(AccountKeyDatastoreSecretsOutput{})
	pulumi.RegisterOutputType(AccountKeyDatastoreSecretsPtrOutput{})
	pulumi.RegisterOutputType(AmlTokenOutput{})
	pulumi.RegisterOutputType(AmlTokenPtrOutput{})
	pulumi.RegisterOutputType(AmlTokenResponseOutput{})
	pulumi.RegisterOutputType(AmlTokenResponsePtrOutput{})
	pulumi.RegisterOutputType(AutoScaleSettingsOutput{})
	pulumi.RegisterOutputType(AutoScaleSettingsPtrOutput{})
	pulumi.RegisterOutputType(AutoScaleSettingsResponseOutput{})
	pulumi.RegisterOutputType(AutoScaleSettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(AzureBlobContentsOutput{})
	pulumi.RegisterOutputType(AzureBlobContentsResponseOutput{})
	pulumi.RegisterOutputType(AzureDataLakeGen1ContentsOutput{})
	pulumi.RegisterOutputType(AzureDataLakeGen1ContentsResponseOutput{})
	pulumi.RegisterOutputType(AzureDataLakeGen2ContentsOutput{})
	pulumi.RegisterOutputType(AzureDataLakeGen2ContentsResponseOutput{})
	pulumi.RegisterOutputType(AzureFileContentsOutput{})
	pulumi.RegisterOutputType(AzureFileContentsResponseOutput{})
	pulumi.RegisterOutputType(AzurePostgreSqlContentsOutput{})
	pulumi.RegisterOutputType(AzurePostgreSqlContentsResponseOutput{})
	pulumi.RegisterOutputType(AzureSqlDatabaseContentsOutput{})
	pulumi.RegisterOutputType(AzureSqlDatabaseContentsResponseOutput{})
	pulumi.RegisterOutputType(BanditPolicyOutput{})
	pulumi.RegisterOutputType(BanditPolicyPtrOutput{})
	pulumi.RegisterOutputType(BanditPolicyResponseOutput{})
	pulumi.RegisterOutputType(BanditPolicyResponsePtrOutput{})
	pulumi.RegisterOutputType(BatchDeploymentTypeOutput{})
	pulumi.RegisterOutputType(BatchDeploymentResponseOutput{})
	pulumi.RegisterOutputType(BatchEndpointTypeOutput{})
	pulumi.RegisterOutputType(BatchEndpointResponseOutput{})
	pulumi.RegisterOutputType(BatchOutputConfigurationOutput{})
	pulumi.RegisterOutputType(BatchOutputConfigurationPtrOutput{})
	pulumi.RegisterOutputType(BatchOutputConfigurationResponseOutput{})
	pulumi.RegisterOutputType(BatchOutputConfigurationResponsePtrOutput{})
	pulumi.RegisterOutputType(BatchRetrySettingsOutput{})
	pulumi.RegisterOutputType(BatchRetrySettingsPtrOutput{})
	pulumi.RegisterOutputType(BatchRetrySettingsResponseOutput{})
	pulumi.RegisterOutputType(BatchRetrySettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(CertificateDatastoreCredentialsOutput{})
	pulumi.RegisterOutputType(CertificateDatastoreCredentialsResponseOutput{})
	pulumi.RegisterOutputType(CertificateDatastoreSecretsOutput{})
	pulumi.RegisterOutputType(CertificateDatastoreSecretsPtrOutput{})
	pulumi.RegisterOutputType(CodeConfigurationOutput{})
	pulumi.RegisterOutputType(CodeConfigurationPtrOutput{})
	pulumi.RegisterOutputType(CodeConfigurationResponseOutput{})
	pulumi.RegisterOutputType(CodeConfigurationResponsePtrOutput{})
	pulumi.RegisterOutputType(CodeContainerTypeOutput{})
	pulumi.RegisterOutputType(CodeContainerResponseOutput{})
	pulumi.RegisterOutputType(CodeVersionTypeOutput{})
	pulumi.RegisterOutputType(CodeVersionResponseOutput{})
	pulumi.RegisterOutputType(CommandJobOutput{})
	pulumi.RegisterOutputType(CommandJobResponseOutput{})
	pulumi.RegisterOutputType(ComputeConfigurationOutput{})
	pulumi.RegisterOutputType(ComputeConfigurationPtrOutput{})
	pulumi.RegisterOutputType(ComputeConfigurationResponseOutput{})
	pulumi.RegisterOutputType(ComputeConfigurationResponsePtrOutput{})
	pulumi.RegisterOutputType(ContainerResourceRequirementsOutput{})
	pulumi.RegisterOutputType(ContainerResourceRequirementsPtrOutput{})
	pulumi.RegisterOutputType(ContainerResourceRequirementsResponseOutput{})
	pulumi.RegisterOutputType(ContainerResourceRequirementsResponsePtrOutput{})
	pulumi.RegisterOutputType(DataContainerTypeOutput{})
	pulumi.RegisterOutputType(DataContainerResponseOutput{})
	pulumi.RegisterOutputType(DataPathAssetReferenceOutput{})
	pulumi.RegisterOutputType(DataPathAssetReferencePtrOutput{})
	pulumi.RegisterOutputType(DataPathAssetReferenceResponseOutput{})
	pulumi.RegisterOutputType(DataPathAssetReferenceResponsePtrOutput{})
	pulumi.RegisterOutputType(DataVersionTypeOutput{})
	pulumi.RegisterOutputType(DataVersionResponseOutput{})
	pulumi.RegisterOutputType(DatastorePropertiesOutput{})
	pulumi.RegisterOutputType(DatastorePropertiesResponseOutput{})
	pulumi.RegisterOutputType(DockerBuildOutput{})
	pulumi.RegisterOutputType(DockerBuildPtrOutput{})
	pulumi.RegisterOutputType(DockerBuildResponseOutput{})
	pulumi.RegisterOutputType(DockerBuildResponsePtrOutput{})
	pulumi.RegisterOutputType(DockerImageOutput{})
	pulumi.RegisterOutputType(DockerImagePtrOutput{})
	pulumi.RegisterOutputType(DockerImagePlatformOutput{})
	pulumi.RegisterOutputType(DockerImagePlatformPtrOutput{})
	pulumi.RegisterOutputType(DockerImagePlatformResponseOutput{})
	pulumi.RegisterOutputType(DockerImagePlatformResponsePtrOutput{})
	pulumi.RegisterOutputType(DockerImageResponseOutput{})
	pulumi.RegisterOutputType(DockerImageResponsePtrOutput{})
	pulumi.RegisterOutputType(EndpointAuthKeysOutput{})
	pulumi.RegisterOutputType(EndpointAuthKeysPtrOutput{})
	pulumi.RegisterOutputType(EnvironmentContainerTypeOutput{})
	pulumi.RegisterOutputType(EnvironmentContainerResponseOutput{})
	pulumi.RegisterOutputType(EnvironmentSpecificationVersionTypeOutput{})
	pulumi.RegisterOutputType(EnvironmentSpecificationVersionResponseOutput{})
	pulumi.RegisterOutputType(FlavorDataOutput{})
	pulumi.RegisterOutputType(FlavorDataMapOutput{})
	pulumi.RegisterOutputType(FlavorDataResponseOutput{})
	pulumi.RegisterOutputType(FlavorDataResponseMapOutput{})
	pulumi.RegisterOutputType(GlusterFsContentsOutput{})
	pulumi.RegisterOutputType(GlusterFsContentsResponseOutput{})
	pulumi.RegisterOutputType(IdAssetReferenceOutput{})
	pulumi.RegisterOutputType(IdAssetReferencePtrOutput{})
	pulumi.RegisterOutputType(IdAssetReferenceResponseOutput{})
	pulumi.RegisterOutputType(IdAssetReferenceResponsePtrOutput{})
	pulumi.RegisterOutputType(InferenceContainerPropertiesOutput{})
	pulumi.RegisterOutputType(InferenceContainerPropertiesPtrOutput{})
	pulumi.RegisterOutputType(InferenceContainerPropertiesResponseOutput{})
	pulumi.RegisterOutputType(InferenceContainerPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(InputDataBindingOutput{})
	pulumi.RegisterOutputType(InputDataBindingMapOutput{})
	pulumi.RegisterOutputType(InputDataBindingResponseOutput{})
	pulumi.RegisterOutputType(InputDataBindingResponseMapOutput{})
	pulumi.RegisterOutputType(JobEndpointResponseOutput{})
	pulumi.RegisterOutputType(JobEndpointResponseMapOutput{})
	pulumi.RegisterOutputType(JobOutputResponseOutput{})
	pulumi.RegisterOutputType(K8sOnlineDeploymentOutput{})
	pulumi.RegisterOutputType(K8sOnlineDeploymentResponseOutput{})
	pulumi.RegisterOutputType(LabelCategoryOutput{})
	pulumi.RegisterOutputType(LabelCategoryMapOutput{})
	pulumi.RegisterOutputType(LabelCategoryResponseOutput{})
	pulumi.RegisterOutputType(LabelCategoryResponseMapOutput{})
	pulumi.RegisterOutputType(LabelClassOutput{})
	pulumi.RegisterOutputType(LabelClassMapOutput{})
	pulumi.RegisterOutputType(LabelClassResponseOutput{})
	pulumi.RegisterOutputType(LabelClassResponseMapOutput{})
	pulumi.RegisterOutputType(LabelingDatasetConfigurationOutput{})
	pulumi.RegisterOutputType(LabelingDatasetConfigurationPtrOutput{})
	pulumi.RegisterOutputType(LabelingDatasetConfigurationResponseOutput{})
	pulumi.RegisterOutputType(LabelingDatasetConfigurationResponsePtrOutput{})
	pulumi.RegisterOutputType(LabelingJobTypeOutput{})
	pulumi.RegisterOutputType(LabelingJobImagePropertiesOutput{})
	pulumi.RegisterOutputType(LabelingJobImagePropertiesPtrOutput{})
	pulumi.RegisterOutputType(LabelingJobImagePropertiesResponseOutput{})
	pulumi.RegisterOutputType(LabelingJobImagePropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(LabelingJobInstructionsOutput{})
	pulumi.RegisterOutputType(LabelingJobInstructionsPtrOutput{})
	pulumi.RegisterOutputType(LabelingJobInstructionsResponseOutput{})
	pulumi.RegisterOutputType(LabelingJobInstructionsResponsePtrOutput{})
	pulumi.RegisterOutputType(LabelingJobResponseOutput{})
	pulumi.RegisterOutputType(LabelingJobTextPropertiesOutput{})
	pulumi.RegisterOutputType(LabelingJobTextPropertiesPtrOutput{})
	pulumi.RegisterOutputType(LabelingJobTextPropertiesResponseOutput{})
	pulumi.RegisterOutputType(LabelingJobTextPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(LinkedInfoOutput{})
	pulumi.RegisterOutputType(LinkedInfoPtrOutput{})
	pulumi.RegisterOutputType(LinkedInfoResponseOutput{})
	pulumi.RegisterOutputType(LinkedInfoResponsePtrOutput{})
	pulumi.RegisterOutputType(MLAssistConfigurationOutput{})
	pulumi.RegisterOutputType(MLAssistConfigurationPtrOutput{})
	pulumi.RegisterOutputType(MLAssistConfigurationResponseOutput{})
	pulumi.RegisterOutputType(MLAssistConfigurationResponsePtrOutput{})
	pulumi.RegisterOutputType(ManagedIdentityOutput{})
	pulumi.RegisterOutputType(ManagedIdentityPtrOutput{})
	pulumi.RegisterOutputType(ManagedIdentityResponseOutput{})
	pulumi.RegisterOutputType(ManagedIdentityResponsePtrOutput{})
	pulumi.RegisterOutputType(ManagedOnlineDeploymentOutput{})
	pulumi.RegisterOutputType(ManagedOnlineDeploymentResponseOutput{})
	pulumi.RegisterOutputType(ManualScaleSettingsOutput{})
	pulumi.RegisterOutputType(ManualScaleSettingsPtrOutput{})
	pulumi.RegisterOutputType(ManualScaleSettingsResponseOutput{})
	pulumi.RegisterOutputType(ManualScaleSettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(MedianStoppingPolicyOutput{})
	pulumi.RegisterOutputType(MedianStoppingPolicyPtrOutput{})
	pulumi.RegisterOutputType(MedianStoppingPolicyResponseOutput{})
	pulumi.RegisterOutputType(MedianStoppingPolicyResponsePtrOutput{})
	pulumi.RegisterOutputType(ModelContainerTypeOutput{})
	pulumi.RegisterOutputType(ModelContainerResponseOutput{})
	pulumi.RegisterOutputType(ModelVersionTypeOutput{})
	pulumi.RegisterOutputType(ModelVersionResponseOutput{})
	pulumi.RegisterOutputType(MpiOutput{})
	pulumi.RegisterOutputType(MpiPtrOutput{})
	pulumi.RegisterOutputType(MpiResponseOutput{})
	pulumi.RegisterOutputType(MpiResponsePtrOutput{})
	pulumi.RegisterOutputType(NoneDatastoreCredentialsOutput{})
	pulumi.RegisterOutputType(NoneDatastoreCredentialsResponseOutput{})
	pulumi.RegisterOutputType(NoneDatastoreSecretsOutput{})
	pulumi.RegisterOutputType(NoneDatastoreSecretsPtrOutput{})
	pulumi.RegisterOutputType(ObjectiveOutput{})
	pulumi.RegisterOutputType(ObjectiveResponseOutput{})
	pulumi.RegisterOutputType(OnlineEndpointTypeOutput{})
	pulumi.RegisterOutputType(OnlineEndpointResponseOutput{})
	pulumi.RegisterOutputType(OnlineRequestSettingsOutput{})
	pulumi.RegisterOutputType(OnlineRequestSettingsPtrOutput{})
	pulumi.RegisterOutputType(OnlineRequestSettingsResponseOutput{})
	pulumi.RegisterOutputType(OnlineRequestSettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(OutputDataBindingOutput{})
	pulumi.RegisterOutputType(OutputDataBindingMapOutput{})
	pulumi.RegisterOutputType(OutputDataBindingResponseOutput{})
	pulumi.RegisterOutputType(OutputDataBindingResponseMapOutput{})
	pulumi.RegisterOutputType(OutputPathAssetReferenceOutput{})
	pulumi.RegisterOutputType(OutputPathAssetReferencePtrOutput{})
	pulumi.RegisterOutputType(OutputPathAssetReferenceResponseOutput{})
	pulumi.RegisterOutputType(OutputPathAssetReferenceResponsePtrOutput{})
	pulumi.RegisterOutputType(ProbeSettingsOutput{})
	pulumi.RegisterOutputType(ProbeSettingsPtrOutput{})
	pulumi.RegisterOutputType(ProbeSettingsResponseOutput{})
	pulumi.RegisterOutputType(ProbeSettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(ProgressMetricsResponseOutput{})
	pulumi.RegisterOutputType(PyTorchOutput{})
	pulumi.RegisterOutputType(PyTorchPtrOutput{})
	pulumi.RegisterOutputType(PyTorchResponseOutput{})
	pulumi.RegisterOutputType(PyTorchResponsePtrOutput{})
	pulumi.RegisterOutputType(ResourceIdentityOutput{})
	pulumi.RegisterOutputType(ResourceIdentityPtrOutput{})
	pulumi.RegisterOutputType(ResourceIdentityResponseOutput{})
	pulumi.RegisterOutputType(ResourceIdentityResponsePtrOutput{})
	pulumi.RegisterOutputType(RouteOutput{})
	pulumi.RegisterOutputType(RoutePtrOutput{})
	pulumi.RegisterOutputType(RouteResponseOutput{})
	pulumi.RegisterOutputType(RouteResponsePtrOutput{})
	pulumi.RegisterOutputType(SasDatastoreCredentialsOutput{})
	pulumi.RegisterOutputType(SasDatastoreCredentialsResponseOutput{})
	pulumi.RegisterOutputType(SasDatastoreSecretsOutput{})
	pulumi.RegisterOutputType(SasDatastoreSecretsPtrOutput{})
	pulumi.RegisterOutputType(ServicePrincipalDatastoreCredentialsOutput{})
	pulumi.RegisterOutputType(ServicePrincipalDatastoreCredentialsResponseOutput{})
	pulumi.RegisterOutputType(ServicePrincipalDatastoreSecretsOutput{})
	pulumi.RegisterOutputType(ServicePrincipalDatastoreSecretsPtrOutput{})
	pulumi.RegisterOutputType(SqlAdminDatastoreCredentialsOutput{})
	pulumi.RegisterOutputType(SqlAdminDatastoreCredentialsResponseOutput{})
	pulumi.RegisterOutputType(SqlAdminDatastoreSecretsOutput{})
	pulumi.RegisterOutputType(SqlAdminDatastoreSecretsPtrOutput{})
	pulumi.RegisterOutputType(StatusMessageResponseOutput{})
	pulumi.RegisterOutputType(StatusMessageResponseArrayOutput{})
	pulumi.RegisterOutputType(SweepJobOutput{})
	pulumi.RegisterOutputType(SweepJobResponseOutput{})
	pulumi.RegisterOutputType(SystemDataResponseOutput{})
	pulumi.RegisterOutputType(TensorFlowOutput{})
	pulumi.RegisterOutputType(TensorFlowPtrOutput{})
	pulumi.RegisterOutputType(TensorFlowResponseOutput{})
	pulumi.RegisterOutputType(TensorFlowResponsePtrOutput{})
	pulumi.RegisterOutputType(TrialComponentOutput{})
	pulumi.RegisterOutputType(TrialComponentPtrOutput{})
	pulumi.RegisterOutputType(TrialComponentResponseOutput{})
	pulumi.RegisterOutputType(TrialComponentResponsePtrOutput{})
	pulumi.RegisterOutputType(TruncationSelectionPolicyOutput{})
	pulumi.RegisterOutputType(TruncationSelectionPolicyPtrOutput{})
	pulumi.RegisterOutputType(TruncationSelectionPolicyResponseOutput{})
	pulumi.RegisterOutputType(TruncationSelectionPolicyResponsePtrOutput{})
	pulumi.RegisterOutputType(UserAssignedIdentityMetaOutput{})
	pulumi.RegisterOutputType(UserAssignedIdentityMetaMapOutput{})
	pulumi.RegisterOutputType(UserAssignedIdentityMetaResponseOutput{})
	pulumi.RegisterOutputType(UserAssignedIdentityMetaResponseMapOutput{})
}
