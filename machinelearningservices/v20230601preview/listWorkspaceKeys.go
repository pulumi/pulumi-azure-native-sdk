// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20230601preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

func ListWorkspaceKeys(ctx *pulumi.Context, args *ListWorkspaceKeysArgs, opts ...pulumi.InvokeOption) (*ListWorkspaceKeysResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv ListWorkspaceKeysResult
	err := ctx.Invoke("azure-native:machinelearningservices/v20230601preview:listWorkspaceKeys", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type ListWorkspaceKeysArgs struct {
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Name of Azure Machine Learning workspace.
	WorkspaceName string `pulumi:"workspaceName"`
}

type ListWorkspaceKeysResult struct {
	// The access key of the workspace app insights
	AppInsightsInstrumentationKey string                                 `pulumi:"appInsightsInstrumentationKey"`
	ContainerRegistryCredentials  *RegistryListCredentialsResultResponse `pulumi:"containerRegistryCredentials"`
	NotebookAccessKeys            *ListNotebookKeysResultResponse        `pulumi:"notebookAccessKeys"`
	// The arm Id key of the workspace storage
	UserStorageArmId string `pulumi:"userStorageArmId"`
	// The access key of the workspace storage
	UserStorageKey string `pulumi:"userStorageKey"`
}

func ListWorkspaceKeysOutput(ctx *pulumi.Context, args ListWorkspaceKeysOutputArgs, opts ...pulumi.InvokeOption) ListWorkspaceKeysResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (ListWorkspaceKeysResult, error) {
			args := v.(ListWorkspaceKeysArgs)
			r, err := ListWorkspaceKeys(ctx, &args, opts...)
			var s ListWorkspaceKeysResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(ListWorkspaceKeysResultOutput)
}

type ListWorkspaceKeysOutputArgs struct {
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
	// Name of Azure Machine Learning workspace.
	WorkspaceName pulumi.StringInput `pulumi:"workspaceName"`
}

func (ListWorkspaceKeysOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ListWorkspaceKeysArgs)(nil)).Elem()
}

type ListWorkspaceKeysResultOutput struct{ *pulumi.OutputState }

func (ListWorkspaceKeysResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListWorkspaceKeysResult)(nil)).Elem()
}

func (o ListWorkspaceKeysResultOutput) ToListWorkspaceKeysResultOutput() ListWorkspaceKeysResultOutput {
	return o
}

func (o ListWorkspaceKeysResultOutput) ToListWorkspaceKeysResultOutputWithContext(ctx context.Context) ListWorkspaceKeysResultOutput {
	return o
}

func (o ListWorkspaceKeysResultOutput) ToOutput(ctx context.Context) pulumix.Output[ListWorkspaceKeysResult] {
	return pulumix.Output[ListWorkspaceKeysResult]{
		OutputState: o.OutputState,
	}
}

// The access key of the workspace app insights
func (o ListWorkspaceKeysResultOutput) AppInsightsInstrumentationKey() pulumi.StringOutput {
	return o.ApplyT(func(v ListWorkspaceKeysResult) string { return v.AppInsightsInstrumentationKey }).(pulumi.StringOutput)
}

func (o ListWorkspaceKeysResultOutput) ContainerRegistryCredentials() RegistryListCredentialsResultResponsePtrOutput {
	return o.ApplyT(func(v ListWorkspaceKeysResult) *RegistryListCredentialsResultResponse {
		return v.ContainerRegistryCredentials
	}).(RegistryListCredentialsResultResponsePtrOutput)
}

func (o ListWorkspaceKeysResultOutput) NotebookAccessKeys() ListNotebookKeysResultResponsePtrOutput {
	return o.ApplyT(func(v ListWorkspaceKeysResult) *ListNotebookKeysResultResponse { return v.NotebookAccessKeys }).(ListNotebookKeysResultResponsePtrOutput)
}

// The arm Id key of the workspace storage
func (o ListWorkspaceKeysResultOutput) UserStorageArmId() pulumi.StringOutput {
	return o.ApplyT(func(v ListWorkspaceKeysResult) string { return v.UserStorageArmId }).(pulumi.StringOutput)
}

// The access key of the workspace storage
func (o ListWorkspaceKeysResultOutput) UserStorageKey() pulumi.StringOutput {
	return o.ApplyT(func(v ListWorkspaceKeysResult) string { return v.UserStorageKey }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(ListWorkspaceKeysResultOutput{})
}
