// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20230401preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

var _ = utilities.GetEnvOrDefault

// Service Tag Outbound Rule for the managed network of a machine learning workspace.
type ServiceTagOutboundRule struct {
	// Category of a managed network Outbound Rule of a machine learning workspace.
	Category *string `pulumi:"category"`
	// Service Tag destination for a Service Tag Outbound Rule for the managed network of a machine learning workspace.
	Destination *ServiceTagDestination `pulumi:"destination"`
	// Status of a managed network Outbound Rule of a machine learning workspace.
	Status *string `pulumi:"status"`
	// Type of a managed network Outbound Rule of a machine learning workspace.
	// Expected value is 'ServiceTag'.
	Type string `pulumi:"type"`
}

// Service Tag Outbound Rule for the managed network of a machine learning workspace.
type ServiceTagOutboundRuleResponse struct {
	// Category of a managed network Outbound Rule of a machine learning workspace.
	Category *string `pulumi:"category"`
	// Service Tag destination for a Service Tag Outbound Rule for the managed network of a machine learning workspace.
	Destination *ServiceTagDestinationResponse `pulumi:"destination"`
	// Status of a managed network Outbound Rule of a machine learning workspace.
	Status *string `pulumi:"status"`
	// Type of a managed network Outbound Rule of a machine learning workspace.
	// Expected value is 'ServiceTag'.
	Type string `pulumi:"type"`
}

// Details of customized scripts to execute for setting up the cluster.
type SetupScripts struct {
	// Customized setup scripts
	Scripts *ScriptsToExecute `pulumi:"scripts"`
}

// Details of customized scripts to execute for setting up the cluster.
type SetupScriptsResponse struct {
	// Customized setup scripts
	Scripts *ScriptsToExecuteResponse `pulumi:"scripts"`
}

type SharedPrivateLinkResource struct {
	// The private link resource group id.
	GroupId *string `pulumi:"groupId"`
	// Unique name of the private link.
	Name *string `pulumi:"name"`
	// The resource id that private link links to.
	PrivateLinkResourceId *string `pulumi:"privateLinkResourceId"`
	// Request message.
	RequestMessage *string `pulumi:"requestMessage"`
	// Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
	Status *string `pulumi:"status"`
}

// SharedPrivateLinkResourceInput is an input type that accepts SharedPrivateLinkResourceArgs and SharedPrivateLinkResourceOutput values.
// You can construct a concrete instance of `SharedPrivateLinkResourceInput` via:
//
//	SharedPrivateLinkResourceArgs{...}
type SharedPrivateLinkResourceInput interface {
	pulumi.Input

	ToSharedPrivateLinkResourceOutput() SharedPrivateLinkResourceOutput
	ToSharedPrivateLinkResourceOutputWithContext(context.Context) SharedPrivateLinkResourceOutput
}

type SharedPrivateLinkResourceArgs struct {
	// The private link resource group id.
	GroupId pulumi.StringPtrInput `pulumi:"groupId"`
	// Unique name of the private link.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The resource id that private link links to.
	PrivateLinkResourceId pulumi.StringPtrInput `pulumi:"privateLinkResourceId"`
	// Request message.
	RequestMessage pulumi.StringPtrInput `pulumi:"requestMessage"`
	// Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (SharedPrivateLinkResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SharedPrivateLinkResource)(nil)).Elem()
}

func (i SharedPrivateLinkResourceArgs) ToSharedPrivateLinkResourceOutput() SharedPrivateLinkResourceOutput {
	return i.ToSharedPrivateLinkResourceOutputWithContext(context.Background())
}

func (i SharedPrivateLinkResourceArgs) ToSharedPrivateLinkResourceOutputWithContext(ctx context.Context) SharedPrivateLinkResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SharedPrivateLinkResourceOutput)
}

func (i SharedPrivateLinkResourceArgs) ToOutput(ctx context.Context) pulumix.Output[SharedPrivateLinkResource] {
	return pulumix.Output[SharedPrivateLinkResource]{
		OutputState: i.ToSharedPrivateLinkResourceOutputWithContext(ctx).OutputState,
	}
}

// SharedPrivateLinkResourceArrayInput is an input type that accepts SharedPrivateLinkResourceArray and SharedPrivateLinkResourceArrayOutput values.
// You can construct a concrete instance of `SharedPrivateLinkResourceArrayInput` via:
//
//	SharedPrivateLinkResourceArray{ SharedPrivateLinkResourceArgs{...} }
type SharedPrivateLinkResourceArrayInput interface {
	pulumi.Input

	ToSharedPrivateLinkResourceArrayOutput() SharedPrivateLinkResourceArrayOutput
	ToSharedPrivateLinkResourceArrayOutputWithContext(context.Context) SharedPrivateLinkResourceArrayOutput
}

type SharedPrivateLinkResourceArray []SharedPrivateLinkResourceInput

func (SharedPrivateLinkResourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SharedPrivateLinkResource)(nil)).Elem()
}

func (i SharedPrivateLinkResourceArray) ToSharedPrivateLinkResourceArrayOutput() SharedPrivateLinkResourceArrayOutput {
	return i.ToSharedPrivateLinkResourceArrayOutputWithContext(context.Background())
}

func (i SharedPrivateLinkResourceArray) ToSharedPrivateLinkResourceArrayOutputWithContext(ctx context.Context) SharedPrivateLinkResourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SharedPrivateLinkResourceArrayOutput)
}

func (i SharedPrivateLinkResourceArray) ToOutput(ctx context.Context) pulumix.Output[[]SharedPrivateLinkResource] {
	return pulumix.Output[[]SharedPrivateLinkResource]{
		OutputState: i.ToSharedPrivateLinkResourceArrayOutputWithContext(ctx).OutputState,
	}
}

type SharedPrivateLinkResourceOutput struct{ *pulumi.OutputState }

func (SharedPrivateLinkResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SharedPrivateLinkResource)(nil)).Elem()
}

func (o SharedPrivateLinkResourceOutput) ToSharedPrivateLinkResourceOutput() SharedPrivateLinkResourceOutput {
	return o
}

func (o SharedPrivateLinkResourceOutput) ToSharedPrivateLinkResourceOutputWithContext(ctx context.Context) SharedPrivateLinkResourceOutput {
	return o
}

func (o SharedPrivateLinkResourceOutput) ToOutput(ctx context.Context) pulumix.Output[SharedPrivateLinkResource] {
	return pulumix.Output[SharedPrivateLinkResource]{
		OutputState: o.OutputState,
	}
}

// The private link resource group id.
func (o SharedPrivateLinkResourceOutput) GroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SharedPrivateLinkResource) *string { return v.GroupId }).(pulumi.StringPtrOutput)
}

// Unique name of the private link.
func (o SharedPrivateLinkResourceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SharedPrivateLinkResource) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The resource id that private link links to.
func (o SharedPrivateLinkResourceOutput) PrivateLinkResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SharedPrivateLinkResource) *string { return v.PrivateLinkResourceId }).(pulumi.StringPtrOutput)
}

// Request message.
func (o SharedPrivateLinkResourceOutput) RequestMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SharedPrivateLinkResource) *string { return v.RequestMessage }).(pulumi.StringPtrOutput)
}

// Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
func (o SharedPrivateLinkResourceOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SharedPrivateLinkResource) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type SharedPrivateLinkResourceArrayOutput struct{ *pulumi.OutputState }

func (SharedPrivateLinkResourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SharedPrivateLinkResource)(nil)).Elem()
}

func (o SharedPrivateLinkResourceArrayOutput) ToSharedPrivateLinkResourceArrayOutput() SharedPrivateLinkResourceArrayOutput {
	return o
}

func (o SharedPrivateLinkResourceArrayOutput) ToSharedPrivateLinkResourceArrayOutputWithContext(ctx context.Context) SharedPrivateLinkResourceArrayOutput {
	return o
}

func (o SharedPrivateLinkResourceArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SharedPrivateLinkResource] {
	return pulumix.Output[[]SharedPrivateLinkResource]{
		OutputState: o.OutputState,
	}
}

func (o SharedPrivateLinkResourceArrayOutput) Index(i pulumi.IntInput) SharedPrivateLinkResourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SharedPrivateLinkResource {
		return vs[0].([]SharedPrivateLinkResource)[vs[1].(int)]
	}).(SharedPrivateLinkResourceOutput)
}

type SharedPrivateLinkResourceResponse struct {
	// The private link resource group id.
	GroupId *string `pulumi:"groupId"`
	// Unique name of the private link.
	Name *string `pulumi:"name"`
	// The resource id that private link links to.
	PrivateLinkResourceId *string `pulumi:"privateLinkResourceId"`
	// Request message.
	RequestMessage *string `pulumi:"requestMessage"`
	// Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
	Status *string `pulumi:"status"`
}

type SharedPrivateLinkResourceResponseOutput struct{ *pulumi.OutputState }

func (SharedPrivateLinkResourceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SharedPrivateLinkResourceResponse)(nil)).Elem()
}

func (o SharedPrivateLinkResourceResponseOutput) ToSharedPrivateLinkResourceResponseOutput() SharedPrivateLinkResourceResponseOutput {
	return o
}

func (o SharedPrivateLinkResourceResponseOutput) ToSharedPrivateLinkResourceResponseOutputWithContext(ctx context.Context) SharedPrivateLinkResourceResponseOutput {
	return o
}

func (o SharedPrivateLinkResourceResponseOutput) ToOutput(ctx context.Context) pulumix.Output[SharedPrivateLinkResourceResponse] {
	return pulumix.Output[SharedPrivateLinkResourceResponse]{
		OutputState: o.OutputState,
	}
}

// The private link resource group id.
func (o SharedPrivateLinkResourceResponseOutput) GroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SharedPrivateLinkResourceResponse) *string { return v.GroupId }).(pulumi.StringPtrOutput)
}

// Unique name of the private link.
func (o SharedPrivateLinkResourceResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SharedPrivateLinkResourceResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The resource id that private link links to.
func (o SharedPrivateLinkResourceResponseOutput) PrivateLinkResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SharedPrivateLinkResourceResponse) *string { return v.PrivateLinkResourceId }).(pulumi.StringPtrOutput)
}

// Request message.
func (o SharedPrivateLinkResourceResponseOutput) RequestMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SharedPrivateLinkResourceResponse) *string { return v.RequestMessage }).(pulumi.StringPtrOutput)
}

// Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
func (o SharedPrivateLinkResourceResponseOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SharedPrivateLinkResourceResponse) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type SharedPrivateLinkResourceResponseArrayOutput struct{ *pulumi.OutputState }

func (SharedPrivateLinkResourceResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SharedPrivateLinkResourceResponse)(nil)).Elem()
}

func (o SharedPrivateLinkResourceResponseArrayOutput) ToSharedPrivateLinkResourceResponseArrayOutput() SharedPrivateLinkResourceResponseArrayOutput {
	return o
}

func (o SharedPrivateLinkResourceResponseArrayOutput) ToSharedPrivateLinkResourceResponseArrayOutputWithContext(ctx context.Context) SharedPrivateLinkResourceResponseArrayOutput {
	return o
}

func (o SharedPrivateLinkResourceResponseArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SharedPrivateLinkResourceResponse] {
	return pulumix.Output[[]SharedPrivateLinkResourceResponse]{
		OutputState: o.OutputState,
	}
}

func (o SharedPrivateLinkResourceResponseArrayOutput) Index(i pulumi.IntInput) SharedPrivateLinkResourceResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SharedPrivateLinkResourceResponse {
		return vs[0].([]SharedPrivateLinkResourceResponse)[vs[1].(int)]
	}).(SharedPrivateLinkResourceResponseOutput)
}

// The resource model definition representing SKU
type Sku struct {
	// If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.
	Capacity *int `pulumi:"capacity"`
	// If the service has different generations of hardware, for the same SKU, then that can be captured here.
	Family *string `pulumi:"family"`
	// The name of the SKU. Ex - P3. It is typically a letter+number code
	Name string `pulumi:"name"`
	// The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code.
	Size *string `pulumi:"size"`
	// This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.
	Tier *SkuTier `pulumi:"tier"`
}

// SkuInput is an input type that accepts SkuArgs and SkuOutput values.
// You can construct a concrete instance of `SkuInput` via:
//
//	SkuArgs{...}
type SkuInput interface {
	pulumi.Input

	ToSkuOutput() SkuOutput
	ToSkuOutputWithContext(context.Context) SkuOutput
}

// The resource model definition representing SKU
type SkuArgs struct {
	// If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.
	Capacity pulumi.IntPtrInput `pulumi:"capacity"`
	// If the service has different generations of hardware, for the same SKU, then that can be captured here.
	Family pulumi.StringPtrInput `pulumi:"family"`
	// The name of the SKU. Ex - P3. It is typically a letter+number code
	Name pulumi.StringInput `pulumi:"name"`
	// The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code.
	Size pulumi.StringPtrInput `pulumi:"size"`
	// This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.
	Tier SkuTierPtrInput `pulumi:"tier"`
}

func (SkuArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Sku)(nil)).Elem()
}

func (i SkuArgs) ToSkuOutput() SkuOutput {
	return i.ToSkuOutputWithContext(context.Background())
}

func (i SkuArgs) ToSkuOutputWithContext(ctx context.Context) SkuOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuOutput)
}

func (i SkuArgs) ToOutput(ctx context.Context) pulumix.Output[Sku] {
	return pulumix.Output[Sku]{
		OutputState: i.ToSkuOutputWithContext(ctx).OutputState,
	}
}

func (i SkuArgs) ToSkuPtrOutput() SkuPtrOutput {
	return i.ToSkuPtrOutputWithContext(context.Background())
}

func (i SkuArgs) ToSkuPtrOutputWithContext(ctx context.Context) SkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuOutput).ToSkuPtrOutputWithContext(ctx)
}

// SkuPtrInput is an input type that accepts SkuArgs, SkuPtr and SkuPtrOutput values.
// You can construct a concrete instance of `SkuPtrInput` via:
//
//	        SkuArgs{...}
//
//	or:
//
//	        nil
type SkuPtrInput interface {
	pulumi.Input

	ToSkuPtrOutput() SkuPtrOutput
	ToSkuPtrOutputWithContext(context.Context) SkuPtrOutput
}

type skuPtrType SkuArgs

func SkuPtr(v *SkuArgs) SkuPtrInput {
	return (*skuPtrType)(v)
}

func (*skuPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Sku)(nil)).Elem()
}

func (i *skuPtrType) ToSkuPtrOutput() SkuPtrOutput {
	return i.ToSkuPtrOutputWithContext(context.Background())
}

func (i *skuPtrType) ToSkuPtrOutputWithContext(ctx context.Context) SkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuPtrOutput)
}

func (i *skuPtrType) ToOutput(ctx context.Context) pulumix.Output[*Sku] {
	return pulumix.Output[*Sku]{
		OutputState: i.ToSkuPtrOutputWithContext(ctx).OutputState,
	}
}

// The resource model definition representing SKU
type SkuOutput struct{ *pulumi.OutputState }

func (SkuOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Sku)(nil)).Elem()
}

func (o SkuOutput) ToSkuOutput() SkuOutput {
	return o
}

func (o SkuOutput) ToSkuOutputWithContext(ctx context.Context) SkuOutput {
	return o
}

func (o SkuOutput) ToSkuPtrOutput() SkuPtrOutput {
	return o.ToSkuPtrOutputWithContext(context.Background())
}

func (o SkuOutput) ToSkuPtrOutputWithContext(ctx context.Context) SkuPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Sku) *Sku {
		return &v
	}).(SkuPtrOutput)
}

func (o SkuOutput) ToOutput(ctx context.Context) pulumix.Output[Sku] {
	return pulumix.Output[Sku]{
		OutputState: o.OutputState,
	}
}

// If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.
func (o SkuOutput) Capacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Sku) *int { return v.Capacity }).(pulumi.IntPtrOutput)
}

// If the service has different generations of hardware, for the same SKU, then that can be captured here.
func (o SkuOutput) Family() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Sku) *string { return v.Family }).(pulumi.StringPtrOutput)
}

// The name of the SKU. Ex - P3. It is typically a letter+number code
func (o SkuOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v Sku) string { return v.Name }).(pulumi.StringOutput)
}

// The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code.
func (o SkuOutput) Size() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Sku) *string { return v.Size }).(pulumi.StringPtrOutput)
}

// This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.
func (o SkuOutput) Tier() SkuTierPtrOutput {
	return o.ApplyT(func(v Sku) *SkuTier { return v.Tier }).(SkuTierPtrOutput)
}

type SkuPtrOutput struct{ *pulumi.OutputState }

func (SkuPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Sku)(nil)).Elem()
}

func (o SkuPtrOutput) ToSkuPtrOutput() SkuPtrOutput {
	return o
}

func (o SkuPtrOutput) ToSkuPtrOutputWithContext(ctx context.Context) SkuPtrOutput {
	return o
}

func (o SkuPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*Sku] {
	return pulumix.Output[*Sku]{
		OutputState: o.OutputState,
	}
}

func (o SkuPtrOutput) Elem() SkuOutput {
	return o.ApplyT(func(v *Sku) Sku {
		if v != nil {
			return *v
		}
		var ret Sku
		return ret
	}).(SkuOutput)
}

// If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.
func (o SkuPtrOutput) Capacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Sku) *int {
		if v == nil {
			return nil
		}
		return v.Capacity
	}).(pulumi.IntPtrOutput)
}

// If the service has different generations of hardware, for the same SKU, then that can be captured here.
func (o SkuPtrOutput) Family() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Sku) *string {
		if v == nil {
			return nil
		}
		return v.Family
	}).(pulumi.StringPtrOutput)
}

// The name of the SKU. Ex - P3. It is typically a letter+number code
func (o SkuPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Sku) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code.
func (o SkuPtrOutput) Size() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Sku) *string {
		if v == nil {
			return nil
		}
		return v.Size
	}).(pulumi.StringPtrOutput)
}

// This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.
func (o SkuPtrOutput) Tier() SkuTierPtrOutput {
	return o.ApplyT(func(v *Sku) *SkuTier {
		if v == nil {
			return nil
		}
		return v.Tier
	}).(SkuTierPtrOutput)
}

// The resource model definition representing SKU
type SkuResponse struct {
	// If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.
	Capacity *int `pulumi:"capacity"`
	// If the service has different generations of hardware, for the same SKU, then that can be captured here.
	Family *string `pulumi:"family"`
	// The name of the SKU. Ex - P3. It is typically a letter+number code
	Name string `pulumi:"name"`
	// The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code.
	Size *string `pulumi:"size"`
	// This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.
	Tier *string `pulumi:"tier"`
}

// The resource model definition representing SKU
type SkuResponseOutput struct{ *pulumi.OutputState }

func (SkuResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuResponse)(nil)).Elem()
}

func (o SkuResponseOutput) ToSkuResponseOutput() SkuResponseOutput {
	return o
}

func (o SkuResponseOutput) ToSkuResponseOutputWithContext(ctx context.Context) SkuResponseOutput {
	return o
}

func (o SkuResponseOutput) ToOutput(ctx context.Context) pulumix.Output[SkuResponse] {
	return pulumix.Output[SkuResponse]{
		OutputState: o.OutputState,
	}
}

// If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.
func (o SkuResponseOutput) Capacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SkuResponse) *int { return v.Capacity }).(pulumi.IntPtrOutput)
}

// If the service has different generations of hardware, for the same SKU, then that can be captured here.
func (o SkuResponseOutput) Family() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SkuResponse) *string { return v.Family }).(pulumi.StringPtrOutput)
}

// The name of the SKU. Ex - P3. It is typically a letter+number code
func (o SkuResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v SkuResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code.
func (o SkuResponseOutput) Size() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SkuResponse) *string { return v.Size }).(pulumi.StringPtrOutput)
}

// This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.
func (o SkuResponseOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SkuResponse) *string { return v.Tier }).(pulumi.StringPtrOutput)
}

type SkuResponsePtrOutput struct{ *pulumi.OutputState }

func (SkuResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SkuResponse)(nil)).Elem()
}

func (o SkuResponsePtrOutput) ToSkuResponsePtrOutput() SkuResponsePtrOutput {
	return o
}

func (o SkuResponsePtrOutput) ToSkuResponsePtrOutputWithContext(ctx context.Context) SkuResponsePtrOutput {
	return o
}

func (o SkuResponsePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*SkuResponse] {
	return pulumix.Output[*SkuResponse]{
		OutputState: o.OutputState,
	}
}

func (o SkuResponsePtrOutput) Elem() SkuResponseOutput {
	return o.ApplyT(func(v *SkuResponse) SkuResponse {
		if v != nil {
			return *v
		}
		var ret SkuResponse
		return ret
	}).(SkuResponseOutput)
}

// If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.
func (o SkuResponsePtrOutput) Capacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SkuResponse) *int {
		if v == nil {
			return nil
		}
		return v.Capacity
	}).(pulumi.IntPtrOutput)
}

// If the service has different generations of hardware, for the same SKU, then that can be captured here.
func (o SkuResponsePtrOutput) Family() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkuResponse) *string {
		if v == nil {
			return nil
		}
		return v.Family
	}).(pulumi.StringPtrOutput)
}

// The name of the SKU. Ex - P3. It is typically a letter+number code
func (o SkuResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkuResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code.
func (o SkuResponsePtrOutput) Size() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkuResponse) *string {
		if v == nil {
			return nil
		}
		return v.Size
	}).(pulumi.StringPtrOutput)
}

// This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.
func (o SkuResponsePtrOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkuResponse) *string {
		if v == nil {
			return nil
		}
		return v.Tier
	}).(pulumi.StringPtrOutput)
}

// Spark job definition.
type SparkJob struct {
	// Archive files used in the job.
	Archives []string `pulumi:"archives"`
	// Arguments for the job.
	Args *string `pulumi:"args"`
	// [Required] ARM resource ID of the code asset.
	CodeId string `pulumi:"codeId"`
	// ARM resource ID of the component resource.
	ComponentId *string `pulumi:"componentId"`
	// ARM resource ID of the compute resource.
	ComputeId *string `pulumi:"computeId"`
	// Spark configured properties.
	Conf map[string]string `pulumi:"conf"`
	// The asset description text.
	Description *string `pulumi:"description"`
	// Display name of job.
	DisplayName *string `pulumi:"displayName"`
	// [Required] The entry to execute on startup of the job.
	Entry interface{} `pulumi:"entry"`
	// The ARM resource ID of the Environment specification for the job.
	EnvironmentId *string `pulumi:"environmentId"`
	// The name of the experiment the job belongs to. If not set, the job is placed in the "Default" experiment.
	ExperimentName *string `pulumi:"experimentName"`
	// Files used in the job.
	Files []string `pulumi:"files"`
	// Identity configuration. If set, this should be one of AmlToken, ManagedIdentity, UserIdentity or null.
	// Defaults to AmlToken if null.
	Identity interface{} `pulumi:"identity"`
	// Mapping of input data bindings used in the job.
	Inputs map[string]interface{} `pulumi:"inputs"`
	// Is the asset archived?
	IsArchived *bool `pulumi:"isArchived"`
	// Jar files used in the job.
	Jars []string `pulumi:"jars"`
	// Enum to determine the type of job.
	// Expected value is 'Spark'.
	JobType string `pulumi:"jobType"`
	// Notification setting for the job
	NotificationSetting *NotificationSetting `pulumi:"notificationSetting"`
	// Mapping of output data bindings used in the job.
	Outputs map[string]interface{} `pulumi:"outputs"`
	// The asset property dictionary.
	Properties map[string]string `pulumi:"properties"`
	// Python files used in the job.
	PyFiles []string `pulumi:"pyFiles"`
	// Queue settings for the job
	QueueSettings *QueueSettings `pulumi:"queueSettings"`
	// Compute Resource configuration for the job.
	Resources *SparkResourceConfiguration `pulumi:"resources"`
	// Configuration for secrets to be made available during runtime.
	SecretsConfiguration map[string]SecretConfiguration `pulumi:"secretsConfiguration"`
	// List of JobEndpoints.
	// For local jobs, a job endpoint will have an endpoint value of FileStreamObject.
	Services map[string]JobService `pulumi:"services"`
	// Tag dictionary. Tags can be added, removed, and updated.
	Tags map[string]string `pulumi:"tags"`
}

// Defaults sets the appropriate defaults for SparkJob
func (val *SparkJob) Defaults() *SparkJob {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.ExperimentName == nil {
		experimentName_ := "Default"
		tmp.ExperimentName = &experimentName_
	}
	if tmp.IsArchived == nil {
		isArchived_ := false
		tmp.IsArchived = &isArchived_
	}
	tmp.QueueSettings = tmp.QueueSettings.Defaults()

	tmp.Resources = tmp.Resources.Defaults()

	return &tmp
}

type SparkJobPythonEntry struct {
	// [Required] Relative python file path for job entry point.
	File string `pulumi:"file"`
	// Expected value is 'SparkJobPythonEntry'.
	SparkJobEntryType string `pulumi:"sparkJobEntryType"`
}

type SparkJobPythonEntryResponse struct {
	// [Required] Relative python file path for job entry point.
	File string `pulumi:"file"`
	// Expected value is 'SparkJobPythonEntry'.
	SparkJobEntryType string `pulumi:"sparkJobEntryType"`
}

// Spark job definition.
type SparkJobResponse struct {
	// Archive files used in the job.
	Archives []string `pulumi:"archives"`
	// Arguments for the job.
	Args *string `pulumi:"args"`
	// [Required] ARM resource ID of the code asset.
	CodeId string `pulumi:"codeId"`
	// ARM resource ID of the component resource.
	ComponentId *string `pulumi:"componentId"`
	// ARM resource ID of the compute resource.
	ComputeId *string `pulumi:"computeId"`
	// Spark configured properties.
	Conf map[string]string `pulumi:"conf"`
	// The asset description text.
	Description *string `pulumi:"description"`
	// Display name of job.
	DisplayName *string `pulumi:"displayName"`
	// [Required] The entry to execute on startup of the job.
	Entry interface{} `pulumi:"entry"`
	// The ARM resource ID of the Environment specification for the job.
	EnvironmentId *string `pulumi:"environmentId"`
	// The name of the experiment the job belongs to. If not set, the job is placed in the "Default" experiment.
	ExperimentName *string `pulumi:"experimentName"`
	// Files used in the job.
	Files []string `pulumi:"files"`
	// Identity configuration. If set, this should be one of AmlToken, ManagedIdentity, UserIdentity or null.
	// Defaults to AmlToken if null.
	Identity interface{} `pulumi:"identity"`
	// Mapping of input data bindings used in the job.
	Inputs map[string]interface{} `pulumi:"inputs"`
	// Is the asset archived?
	IsArchived *bool `pulumi:"isArchived"`
	// Jar files used in the job.
	Jars []string `pulumi:"jars"`
	// Enum to determine the type of job.
	// Expected value is 'Spark'.
	JobType string `pulumi:"jobType"`
	// Notification setting for the job
	NotificationSetting *NotificationSettingResponse `pulumi:"notificationSetting"`
	// Mapping of output data bindings used in the job.
	Outputs map[string]interface{} `pulumi:"outputs"`
	// The asset property dictionary.
	Properties map[string]string `pulumi:"properties"`
	// Python files used in the job.
	PyFiles []string `pulumi:"pyFiles"`
	// Queue settings for the job
	QueueSettings *QueueSettingsResponse `pulumi:"queueSettings"`
	// Compute Resource configuration for the job.
	Resources *SparkResourceConfigurationResponse `pulumi:"resources"`
	// Configuration for secrets to be made available during runtime.
	SecretsConfiguration map[string]SecretConfigurationResponse `pulumi:"secretsConfiguration"`
	// List of JobEndpoints.
	// For local jobs, a job endpoint will have an endpoint value of FileStreamObject.
	Services map[string]JobServiceResponse `pulumi:"services"`
	// Status of the job.
	Status string `pulumi:"status"`
	// Tag dictionary. Tags can be added, removed, and updated.
	Tags map[string]string `pulumi:"tags"`
}

// Defaults sets the appropriate defaults for SparkJobResponse
func (val *SparkJobResponse) Defaults() *SparkJobResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.ExperimentName == nil {
		experimentName_ := "Default"
		tmp.ExperimentName = &experimentName_
	}
	if tmp.IsArchived == nil {
		isArchived_ := false
		tmp.IsArchived = &isArchived_
	}
	tmp.QueueSettings = tmp.QueueSettings.Defaults()

	tmp.Resources = tmp.Resources.Defaults()

	return &tmp
}

type SparkJobScalaEntry struct {
	// [Required] Scala class name used as entry point.
	ClassName string `pulumi:"className"`
	// Expected value is 'SparkJobScalaEntry'.
	SparkJobEntryType string `pulumi:"sparkJobEntryType"`
}

type SparkJobScalaEntryResponse struct {
	// [Required] Scala class name used as entry point.
	ClassName string `pulumi:"className"`
	// Expected value is 'SparkJobScalaEntry'.
	SparkJobEntryType string `pulumi:"sparkJobEntryType"`
}

type SparkResourceConfiguration struct {
	// Optional type of VM used as supported by the compute target.
	InstanceType *string `pulumi:"instanceType"`
	// Version of spark runtime used for the job.
	RuntimeVersion *string `pulumi:"runtimeVersion"`
}

// Defaults sets the appropriate defaults for SparkResourceConfiguration
func (val *SparkResourceConfiguration) Defaults() *SparkResourceConfiguration {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.RuntimeVersion == nil {
		runtimeVersion_ := "3.1"
		tmp.RuntimeVersion = &runtimeVersion_
	}
	return &tmp
}

type SparkResourceConfigurationResponse struct {
	// Optional type of VM used as supported by the compute target.
	InstanceType *string `pulumi:"instanceType"`
	// Version of spark runtime used for the job.
	RuntimeVersion *string `pulumi:"runtimeVersion"`
}

// Defaults sets the appropriate defaults for SparkResourceConfigurationResponse
func (val *SparkResourceConfigurationResponse) Defaults() *SparkResourceConfigurationResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.RuntimeVersion == nil {
		runtimeVersion_ := "3.1"
		tmp.RuntimeVersion = &runtimeVersion_
	}
	return &tmp
}

// The ssl configuration for scoring
type SslConfiguration struct {
	// Cert data
	Cert *string `pulumi:"cert"`
	// CNAME of the cert
	Cname *string `pulumi:"cname"`
	// Key data
	Key *string `pulumi:"key"`
	// Leaf domain label of public endpoint
	LeafDomainLabel *string `pulumi:"leafDomainLabel"`
	// Indicates whether to overwrite existing domain label.
	OverwriteExistingDomain *bool `pulumi:"overwriteExistingDomain"`
	// Enable or disable ssl for scoring
	Status *string `pulumi:"status"`
}

// The ssl configuration for scoring
type SslConfigurationResponse struct {
	// Cert data
	Cert *string `pulumi:"cert"`
	// CNAME of the cert
	Cname *string `pulumi:"cname"`
	// Key data
	Key *string `pulumi:"key"`
	// Leaf domain label of public endpoint
	LeafDomainLabel *string `pulumi:"leafDomainLabel"`
	// Indicates whether to overwrite existing domain label.
	OverwriteExistingDomain *bool `pulumi:"overwriteExistingDomain"`
	// Enable or disable ssl for scoring
	Status *string `pulumi:"status"`
}

// Advances setting to customize StackEnsemble run.
type StackEnsembleSettings struct {
	// Optional parameters to pass to the initializer of the meta-learner.
	StackMetaLearnerKWargs interface{} `pulumi:"stackMetaLearnerKWargs"`
	// Specifies the proportion of the training set (when choosing train and validation type of training) to be reserved for training the meta-learner. Default value is 0.2.
	StackMetaLearnerTrainPercentage *float64 `pulumi:"stackMetaLearnerTrainPercentage"`
	// The meta-learner is a model trained on the output of the individual heterogeneous models.
	StackMetaLearnerType *string `pulumi:"stackMetaLearnerType"`
}

// Defaults sets the appropriate defaults for StackEnsembleSettings
func (val *StackEnsembleSettings) Defaults() *StackEnsembleSettings {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.StackMetaLearnerTrainPercentage == nil {
		stackMetaLearnerTrainPercentage_ := 0.2
		tmp.StackMetaLearnerTrainPercentage = &stackMetaLearnerTrainPercentage_
	}
	if tmp.StackMetaLearnerType == nil {
		stackMetaLearnerType_ := "None"
		tmp.StackMetaLearnerType = &stackMetaLearnerType_
	}
	return &tmp
}

// Advances setting to customize StackEnsemble run.
type StackEnsembleSettingsResponse struct {
	// Optional parameters to pass to the initializer of the meta-learner.
	StackMetaLearnerKWargs interface{} `pulumi:"stackMetaLearnerKWargs"`
	// Specifies the proportion of the training set (when choosing train and validation type of training) to be reserved for training the meta-learner. Default value is 0.2.
	StackMetaLearnerTrainPercentage *float64 `pulumi:"stackMetaLearnerTrainPercentage"`
	// The meta-learner is a model trained on the output of the individual heterogeneous models.
	StackMetaLearnerType *string `pulumi:"stackMetaLearnerType"`
}

// Defaults sets the appropriate defaults for StackEnsembleSettingsResponse
func (val *StackEnsembleSettingsResponse) Defaults() *StackEnsembleSettingsResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.StackMetaLearnerTrainPercentage == nil {
		stackMetaLearnerTrainPercentage_ := 0.2
		tmp.StackMetaLearnerTrainPercentage = &stackMetaLearnerTrainPercentage_
	}
	if tmp.StackMetaLearnerType == nil {
		stackMetaLearnerType_ := "None"
		tmp.StackMetaLearnerType = &stackMetaLearnerType_
	}
	return &tmp
}

// Active message associated with project
type StatusMessageResponse struct {
	// Service-defined message code.
	Code string `pulumi:"code"`
	// Time in UTC at which the message was created.
	CreatedDateTime string `pulumi:"createdDateTime"`
	// Severity level of message.
	Level string `pulumi:"level"`
	// A human-readable representation of the message code.
	Message string `pulumi:"message"`
}

// Active message associated with project
type StatusMessageResponseOutput struct{ *pulumi.OutputState }

func (StatusMessageResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StatusMessageResponse)(nil)).Elem()
}

func (o StatusMessageResponseOutput) ToStatusMessageResponseOutput() StatusMessageResponseOutput {
	return o
}

func (o StatusMessageResponseOutput) ToStatusMessageResponseOutputWithContext(ctx context.Context) StatusMessageResponseOutput {
	return o
}

func (o StatusMessageResponseOutput) ToOutput(ctx context.Context) pulumix.Output[StatusMessageResponse] {
	return pulumix.Output[StatusMessageResponse]{
		OutputState: o.OutputState,
	}
}

// Service-defined message code.
func (o StatusMessageResponseOutput) Code() pulumi.StringOutput {
	return o.ApplyT(func(v StatusMessageResponse) string { return v.Code }).(pulumi.StringOutput)
}

// Time in UTC at which the message was created.
func (o StatusMessageResponseOutput) CreatedDateTime() pulumi.StringOutput {
	return o.ApplyT(func(v StatusMessageResponse) string { return v.CreatedDateTime }).(pulumi.StringOutput)
}

// Severity level of message.
func (o StatusMessageResponseOutput) Level() pulumi.StringOutput {
	return o.ApplyT(func(v StatusMessageResponse) string { return v.Level }).(pulumi.StringOutput)
}

// A human-readable representation of the message code.
func (o StatusMessageResponseOutput) Message() pulumi.StringOutput {
	return o.ApplyT(func(v StatusMessageResponse) string { return v.Message }).(pulumi.StringOutput)
}

type StatusMessageResponseArrayOutput struct{ *pulumi.OutputState }

func (StatusMessageResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StatusMessageResponse)(nil)).Elem()
}

func (o StatusMessageResponseArrayOutput) ToStatusMessageResponseArrayOutput() StatusMessageResponseArrayOutput {
	return o
}

func (o StatusMessageResponseArrayOutput) ToStatusMessageResponseArrayOutputWithContext(ctx context.Context) StatusMessageResponseArrayOutput {
	return o
}

func (o StatusMessageResponseArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]StatusMessageResponse] {
	return pulumix.Output[[]StatusMessageResponse]{
		OutputState: o.OutputState,
	}
}

func (o StatusMessageResponseArrayOutput) Index(i pulumi.IntInput) StatusMessageResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StatusMessageResponse {
		return vs[0].([]StatusMessageResponse)[vs[1].(int)]
	}).(StatusMessageResponseOutput)
}

// Details of storage account to be used for the Registry
type StorageAccountDetails struct {
	// Details of system created storage account to be used for the registry
	SystemCreatedStorageAccount *SystemCreatedStorageAccount `pulumi:"systemCreatedStorageAccount"`
	// Details of user created storage account to be used for the registry
	UserCreatedStorageAccount *UserCreatedStorageAccount `pulumi:"userCreatedStorageAccount"`
}

// StorageAccountDetailsInput is an input type that accepts StorageAccountDetailsArgs and StorageAccountDetailsOutput values.
// You can construct a concrete instance of `StorageAccountDetailsInput` via:
//
//	StorageAccountDetailsArgs{...}
type StorageAccountDetailsInput interface {
	pulumi.Input

	ToStorageAccountDetailsOutput() StorageAccountDetailsOutput
	ToStorageAccountDetailsOutputWithContext(context.Context) StorageAccountDetailsOutput
}

// Details of storage account to be used for the Registry
type StorageAccountDetailsArgs struct {
	// Details of system created storage account to be used for the registry
	SystemCreatedStorageAccount SystemCreatedStorageAccountPtrInput `pulumi:"systemCreatedStorageAccount"`
	// Details of user created storage account to be used for the registry
	UserCreatedStorageAccount UserCreatedStorageAccountPtrInput `pulumi:"userCreatedStorageAccount"`
}

func (StorageAccountDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageAccountDetails)(nil)).Elem()
}

func (i StorageAccountDetailsArgs) ToStorageAccountDetailsOutput() StorageAccountDetailsOutput {
	return i.ToStorageAccountDetailsOutputWithContext(context.Background())
}

func (i StorageAccountDetailsArgs) ToStorageAccountDetailsOutputWithContext(ctx context.Context) StorageAccountDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageAccountDetailsOutput)
}

func (i StorageAccountDetailsArgs) ToOutput(ctx context.Context) pulumix.Output[StorageAccountDetails] {
	return pulumix.Output[StorageAccountDetails]{
		OutputState: i.ToStorageAccountDetailsOutputWithContext(ctx).OutputState,
	}
}

// StorageAccountDetailsArrayInput is an input type that accepts StorageAccountDetailsArray and StorageAccountDetailsArrayOutput values.
// You can construct a concrete instance of `StorageAccountDetailsArrayInput` via:
//
//	StorageAccountDetailsArray{ StorageAccountDetailsArgs{...} }
type StorageAccountDetailsArrayInput interface {
	pulumi.Input

	ToStorageAccountDetailsArrayOutput() StorageAccountDetailsArrayOutput
	ToStorageAccountDetailsArrayOutputWithContext(context.Context) StorageAccountDetailsArrayOutput
}

type StorageAccountDetailsArray []StorageAccountDetailsInput

func (StorageAccountDetailsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StorageAccountDetails)(nil)).Elem()
}

func (i StorageAccountDetailsArray) ToStorageAccountDetailsArrayOutput() StorageAccountDetailsArrayOutput {
	return i.ToStorageAccountDetailsArrayOutputWithContext(context.Background())
}

func (i StorageAccountDetailsArray) ToStorageAccountDetailsArrayOutputWithContext(ctx context.Context) StorageAccountDetailsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageAccountDetailsArrayOutput)
}

func (i StorageAccountDetailsArray) ToOutput(ctx context.Context) pulumix.Output[[]StorageAccountDetails] {
	return pulumix.Output[[]StorageAccountDetails]{
		OutputState: i.ToStorageAccountDetailsArrayOutputWithContext(ctx).OutputState,
	}
}

// Details of storage account to be used for the Registry
type StorageAccountDetailsOutput struct{ *pulumi.OutputState }

func (StorageAccountDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageAccountDetails)(nil)).Elem()
}

func (o StorageAccountDetailsOutput) ToStorageAccountDetailsOutput() StorageAccountDetailsOutput {
	return o
}

func (o StorageAccountDetailsOutput) ToStorageAccountDetailsOutputWithContext(ctx context.Context) StorageAccountDetailsOutput {
	return o
}

func (o StorageAccountDetailsOutput) ToOutput(ctx context.Context) pulumix.Output[StorageAccountDetails] {
	return pulumix.Output[StorageAccountDetails]{
		OutputState: o.OutputState,
	}
}

// Details of system created storage account to be used for the registry
func (o StorageAccountDetailsOutput) SystemCreatedStorageAccount() SystemCreatedStorageAccountPtrOutput {
	return o.ApplyT(func(v StorageAccountDetails) *SystemCreatedStorageAccount { return v.SystemCreatedStorageAccount }).(SystemCreatedStorageAccountPtrOutput)
}

// Details of user created storage account to be used for the registry
func (o StorageAccountDetailsOutput) UserCreatedStorageAccount() UserCreatedStorageAccountPtrOutput {
	return o.ApplyT(func(v StorageAccountDetails) *UserCreatedStorageAccount { return v.UserCreatedStorageAccount }).(UserCreatedStorageAccountPtrOutput)
}

type StorageAccountDetailsArrayOutput struct{ *pulumi.OutputState }

func (StorageAccountDetailsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StorageAccountDetails)(nil)).Elem()
}

func (o StorageAccountDetailsArrayOutput) ToStorageAccountDetailsArrayOutput() StorageAccountDetailsArrayOutput {
	return o
}

func (o StorageAccountDetailsArrayOutput) ToStorageAccountDetailsArrayOutputWithContext(ctx context.Context) StorageAccountDetailsArrayOutput {
	return o
}

func (o StorageAccountDetailsArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]StorageAccountDetails] {
	return pulumix.Output[[]StorageAccountDetails]{
		OutputState: o.OutputState,
	}
}

func (o StorageAccountDetailsArrayOutput) Index(i pulumi.IntInput) StorageAccountDetailsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StorageAccountDetails {
		return vs[0].([]StorageAccountDetails)[vs[1].(int)]
	}).(StorageAccountDetailsOutput)
}

// Details of storage account to be used for the Registry
type StorageAccountDetailsResponse struct {
	// Details of system created storage account to be used for the registry
	SystemCreatedStorageAccount *SystemCreatedStorageAccountResponse `pulumi:"systemCreatedStorageAccount"`
	// Details of user created storage account to be used for the registry
	UserCreatedStorageAccount *UserCreatedStorageAccountResponse `pulumi:"userCreatedStorageAccount"`
}

// Details of storage account to be used for the Registry
type StorageAccountDetailsResponseOutput struct{ *pulumi.OutputState }

func (StorageAccountDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageAccountDetailsResponse)(nil)).Elem()
}

func (o StorageAccountDetailsResponseOutput) ToStorageAccountDetailsResponseOutput() StorageAccountDetailsResponseOutput {
	return o
}

func (o StorageAccountDetailsResponseOutput) ToStorageAccountDetailsResponseOutputWithContext(ctx context.Context) StorageAccountDetailsResponseOutput {
	return o
}

func (o StorageAccountDetailsResponseOutput) ToOutput(ctx context.Context) pulumix.Output[StorageAccountDetailsResponse] {
	return pulumix.Output[StorageAccountDetailsResponse]{
		OutputState: o.OutputState,
	}
}

// Details of system created storage account to be used for the registry
func (o StorageAccountDetailsResponseOutput) SystemCreatedStorageAccount() SystemCreatedStorageAccountResponsePtrOutput {
	return o.ApplyT(func(v StorageAccountDetailsResponse) *SystemCreatedStorageAccountResponse {
		return v.SystemCreatedStorageAccount
	}).(SystemCreatedStorageAccountResponsePtrOutput)
}

// Details of user created storage account to be used for the registry
func (o StorageAccountDetailsResponseOutput) UserCreatedStorageAccount() UserCreatedStorageAccountResponsePtrOutput {
	return o.ApplyT(func(v StorageAccountDetailsResponse) *UserCreatedStorageAccountResponse {
		return v.UserCreatedStorageAccount
	}).(UserCreatedStorageAccountResponsePtrOutput)
}

type StorageAccountDetailsResponseArrayOutput struct{ *pulumi.OutputState }

func (StorageAccountDetailsResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StorageAccountDetailsResponse)(nil)).Elem()
}

func (o StorageAccountDetailsResponseArrayOutput) ToStorageAccountDetailsResponseArrayOutput() StorageAccountDetailsResponseArrayOutput {
	return o
}

func (o StorageAccountDetailsResponseArrayOutput) ToStorageAccountDetailsResponseArrayOutputWithContext(ctx context.Context) StorageAccountDetailsResponseArrayOutput {
	return o
}

func (o StorageAccountDetailsResponseArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]StorageAccountDetailsResponse] {
	return pulumix.Output[[]StorageAccountDetailsResponse]{
		OutputState: o.OutputState,
	}
}

func (o StorageAccountDetailsResponseArrayOutput) Index(i pulumi.IntInput) StorageAccountDetailsResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StorageAccountDetailsResponse {
		return vs[0].([]StorageAccountDetailsResponse)[vs[1].(int)]
	}).(StorageAccountDetailsResponseOutput)
}

// Sweep job definition.
type SweepJob struct {
	// ARM resource ID of the component resource.
	ComponentId *string `pulumi:"componentId"`
	// ARM resource ID of the compute resource.
	ComputeId *string `pulumi:"computeId"`
	// The asset description text.
	Description *string `pulumi:"description"`
	// Display name of job.
	DisplayName *string `pulumi:"displayName"`
	// Early termination policies enable canceling poor-performing runs before they complete
	EarlyTermination interface{} `pulumi:"earlyTermination"`
	// The name of the experiment the job belongs to. If not set, the job is placed in the "Default" experiment.
	ExperimentName *string `pulumi:"experimentName"`
	// Identity configuration. If set, this should be one of AmlToken, ManagedIdentity, UserIdentity or null.
	// Defaults to AmlToken if null.
	Identity interface{} `pulumi:"identity"`
	// Mapping of input data bindings used in the job.
	Inputs map[string]interface{} `pulumi:"inputs"`
	// Is the asset archived?
	IsArchived *bool `pulumi:"isArchived"`
	// Enum to determine the type of job.
	// Expected value is 'Sweep'.
	JobType string `pulumi:"jobType"`
	// Sweep Job limit.
	Limits *SweepJobLimits `pulumi:"limits"`
	// Notification setting for the job
	NotificationSetting *NotificationSetting `pulumi:"notificationSetting"`
	// [Required] Optimization objective.
	Objective Objective `pulumi:"objective"`
	// Mapping of output data bindings used in the job.
	Outputs map[string]interface{} `pulumi:"outputs"`
	// The asset property dictionary.
	Properties map[string]string `pulumi:"properties"`
	// Queue settings for the job
	QueueSettings *QueueSettings `pulumi:"queueSettings"`
	// [Required] The hyperparameter sampling algorithm
	SamplingAlgorithm interface{} `pulumi:"samplingAlgorithm"`
	// [Required] A dictionary containing each parameter and its distribution. The dictionary key is the name of the parameter
	SearchSpace interface{} `pulumi:"searchSpace"`
	// Configuration for secrets to be made available during runtime.
	SecretsConfiguration map[string]SecretConfiguration `pulumi:"secretsConfiguration"`
	// List of JobEndpoints.
	// For local jobs, a job endpoint will have an endpoint value of FileStreamObject.
	Services map[string]JobService `pulumi:"services"`
	// Tag dictionary. Tags can be added, removed, and updated.
	Tags map[string]string `pulumi:"tags"`
	// [Required] Trial component definition.
	Trial TrialComponent `pulumi:"trial"`
}

// Defaults sets the appropriate defaults for SweepJob
func (val *SweepJob) Defaults() *SweepJob {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.ExperimentName == nil {
		experimentName_ := "Default"
		tmp.ExperimentName = &experimentName_
	}
	if tmp.IsArchived == nil {
		isArchived_ := false
		tmp.IsArchived = &isArchived_
	}
	tmp.QueueSettings = tmp.QueueSettings.Defaults()

	tmp.Trial = *tmp.Trial.Defaults()

	return &tmp
}

// Sweep Job limit class.
type SweepJobLimits struct {
	// Expected value is 'Sweep'.
	JobLimitsType string `pulumi:"jobLimitsType"`
	// Sweep Job max concurrent trials.
	MaxConcurrentTrials *int `pulumi:"maxConcurrentTrials"`
	// Sweep Job max total trials.
	MaxTotalTrials *int `pulumi:"maxTotalTrials"`
	// The max run duration in ISO 8601 format, after which the job will be cancelled. Only supports duration with precision as low as Seconds.
	Timeout *string `pulumi:"timeout"`
	// Sweep Job Trial timeout value.
	TrialTimeout *string `pulumi:"trialTimeout"`
}

// Sweep Job limit class.
type SweepJobLimitsResponse struct {
	// Expected value is 'Sweep'.
	JobLimitsType string `pulumi:"jobLimitsType"`
	// Sweep Job max concurrent trials.
	MaxConcurrentTrials *int `pulumi:"maxConcurrentTrials"`
	// Sweep Job max total trials.
	MaxTotalTrials *int `pulumi:"maxTotalTrials"`
	// The max run duration in ISO 8601 format, after which the job will be cancelled. Only supports duration with precision as low as Seconds.
	Timeout *string `pulumi:"timeout"`
	// Sweep Job Trial timeout value.
	TrialTimeout *string `pulumi:"trialTimeout"`
}

// Sweep job definition.
type SweepJobResponse struct {
	// ARM resource ID of the component resource.
	ComponentId *string `pulumi:"componentId"`
	// ARM resource ID of the compute resource.
	ComputeId *string `pulumi:"computeId"`
	// The asset description text.
	Description *string `pulumi:"description"`
	// Display name of job.
	DisplayName *string `pulumi:"displayName"`
	// Early termination policies enable canceling poor-performing runs before they complete
	EarlyTermination interface{} `pulumi:"earlyTermination"`
	// The name of the experiment the job belongs to. If not set, the job is placed in the "Default" experiment.
	ExperimentName *string `pulumi:"experimentName"`
	// Identity configuration. If set, this should be one of AmlToken, ManagedIdentity, UserIdentity or null.
	// Defaults to AmlToken if null.
	Identity interface{} `pulumi:"identity"`
	// Mapping of input data bindings used in the job.
	Inputs map[string]interface{} `pulumi:"inputs"`
	// Is the asset archived?
	IsArchived *bool `pulumi:"isArchived"`
	// Enum to determine the type of job.
	// Expected value is 'Sweep'.
	JobType string `pulumi:"jobType"`
	// Sweep Job limit.
	Limits *SweepJobLimitsResponse `pulumi:"limits"`
	// Notification setting for the job
	NotificationSetting *NotificationSettingResponse `pulumi:"notificationSetting"`
	// [Required] Optimization objective.
	Objective ObjectiveResponse `pulumi:"objective"`
	// Mapping of output data bindings used in the job.
	Outputs map[string]interface{} `pulumi:"outputs"`
	// The asset property dictionary.
	Properties map[string]string `pulumi:"properties"`
	// Queue settings for the job
	QueueSettings *QueueSettingsResponse `pulumi:"queueSettings"`
	// [Required] The hyperparameter sampling algorithm
	SamplingAlgorithm interface{} `pulumi:"samplingAlgorithm"`
	// [Required] A dictionary containing each parameter and its distribution. The dictionary key is the name of the parameter
	SearchSpace interface{} `pulumi:"searchSpace"`
	// Configuration for secrets to be made available during runtime.
	SecretsConfiguration map[string]SecretConfigurationResponse `pulumi:"secretsConfiguration"`
	// List of JobEndpoints.
	// For local jobs, a job endpoint will have an endpoint value of FileStreamObject.
	Services map[string]JobServiceResponse `pulumi:"services"`
	// Status of the job.
	Status string `pulumi:"status"`
	// Tag dictionary. Tags can be added, removed, and updated.
	Tags map[string]string `pulumi:"tags"`
	// [Required] Trial component definition.
	Trial TrialComponentResponse `pulumi:"trial"`
}

// Defaults sets the appropriate defaults for SweepJobResponse
func (val *SweepJobResponse) Defaults() *SweepJobResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.ExperimentName == nil {
		experimentName_ := "Default"
		tmp.ExperimentName = &experimentName_
	}
	if tmp.IsArchived == nil {
		isArchived_ := false
		tmp.IsArchived = &isArchived_
	}
	tmp.QueueSettings = tmp.QueueSettings.Defaults()

	tmp.Trial = *tmp.Trial.Defaults()

	return &tmp
}

// A SynapseSpark compute.
type SynapseSpark struct {
	// Location for the underlying compute
	ComputeLocation *string `pulumi:"computeLocation"`
	// The type of compute
	// Expected value is 'SynapseSpark'.
	ComputeType string `pulumi:"computeType"`
	// The description of the Machine Learning compute.
	Description *string `pulumi:"description"`
	// Opt-out of local authentication and ensure customers can use only MSI and AAD exclusively for authentication.
	DisableLocalAuth *bool                   `pulumi:"disableLocalAuth"`
	Properties       *SynapseSparkProperties `pulumi:"properties"`
	// ARM resource id of the underlying compute
	ResourceId *string `pulumi:"resourceId"`
}

type SynapseSparkProperties struct {
	// Auto pause properties.
	AutoPauseProperties *AutoPauseProperties `pulumi:"autoPauseProperties"`
	// Auto scale properties.
	AutoScaleProperties *AutoScaleProperties `pulumi:"autoScaleProperties"`
	// The number of compute nodes currently assigned to the compute.
	NodeCount *int `pulumi:"nodeCount"`
	// Node size.
	NodeSize *string `pulumi:"nodeSize"`
	// Node size family.
	NodeSizeFamily *string `pulumi:"nodeSizeFamily"`
	// Pool name.
	PoolName *string `pulumi:"poolName"`
	// Name of the resource group in which workspace is located.
	ResourceGroup *string `pulumi:"resourceGroup"`
	// Spark version.
	SparkVersion *string `pulumi:"sparkVersion"`
	// Azure subscription identifier.
	SubscriptionId *string `pulumi:"subscriptionId"`
	// Name of Azure Machine Learning workspace.
	WorkspaceName *string `pulumi:"workspaceName"`
}

// A SynapseSpark compute.
type SynapseSparkResponse struct {
	// Location for the underlying compute
	ComputeLocation *string `pulumi:"computeLocation"`
	// The type of compute
	// Expected value is 'SynapseSpark'.
	ComputeType string `pulumi:"computeType"`
	// The time at which the compute was created.
	CreatedOn string `pulumi:"createdOn"`
	// The description of the Machine Learning compute.
	Description *string `pulumi:"description"`
	// Opt-out of local authentication and ensure customers can use only MSI and AAD exclusively for authentication.
	DisableLocalAuth *bool `pulumi:"disableLocalAuth"`
	// Indicating whether the compute was provisioned by user and brought from outside if true, or machine learning service provisioned it if false.
	IsAttachedCompute bool `pulumi:"isAttachedCompute"`
	// The time at which the compute was last modified.
	ModifiedOn string                          `pulumi:"modifiedOn"`
	Properties *SynapseSparkResponseProperties `pulumi:"properties"`
	// Errors during provisioning
	ProvisioningErrors []ErrorResponseResponse `pulumi:"provisioningErrors"`
	// The provision state of the cluster. Valid values are Unknown, Updating, Provisioning, Succeeded, and Failed.
	ProvisioningState string `pulumi:"provisioningState"`
	// ARM resource id of the underlying compute
	ResourceId *string `pulumi:"resourceId"`
}

type SynapseSparkResponseProperties struct {
	// Auto pause properties.
	AutoPauseProperties *AutoPausePropertiesResponse `pulumi:"autoPauseProperties"`
	// Auto scale properties.
	AutoScaleProperties *AutoScalePropertiesResponse `pulumi:"autoScaleProperties"`
	// The number of compute nodes currently assigned to the compute.
	NodeCount *int `pulumi:"nodeCount"`
	// Node size.
	NodeSize *string `pulumi:"nodeSize"`
	// Node size family.
	NodeSizeFamily *string `pulumi:"nodeSizeFamily"`
	// Pool name.
	PoolName *string `pulumi:"poolName"`
	// Name of the resource group in which workspace is located.
	ResourceGroup *string `pulumi:"resourceGroup"`
	// Spark version.
	SparkVersion *string `pulumi:"sparkVersion"`
	// Azure subscription identifier.
	SubscriptionId *string `pulumi:"subscriptionId"`
	// Name of Azure Machine Learning workspace.
	WorkspaceName *string `pulumi:"workspaceName"`
}

type SystemCreatedAcrAccount struct {
	// Name of the ACR account
	AcrAccountName *string `pulumi:"acrAccountName"`
	// SKU of the ACR account
	AcrAccountSku *string `pulumi:"acrAccountSku"`
	// This is populated once the ACR account is created.
	ArmResourceId *ArmResourceId `pulumi:"armResourceId"`
}

// SystemCreatedAcrAccountInput is an input type that accepts SystemCreatedAcrAccountArgs and SystemCreatedAcrAccountOutput values.
// You can construct a concrete instance of `SystemCreatedAcrAccountInput` via:
//
//	SystemCreatedAcrAccountArgs{...}
type SystemCreatedAcrAccountInput interface {
	pulumi.Input

	ToSystemCreatedAcrAccountOutput() SystemCreatedAcrAccountOutput
	ToSystemCreatedAcrAccountOutputWithContext(context.Context) SystemCreatedAcrAccountOutput
}

type SystemCreatedAcrAccountArgs struct {
	// Name of the ACR account
	AcrAccountName pulumi.StringPtrInput `pulumi:"acrAccountName"`
	// SKU of the ACR account
	AcrAccountSku pulumi.StringPtrInput `pulumi:"acrAccountSku"`
	// This is populated once the ACR account is created.
	ArmResourceId ArmResourceIdPtrInput `pulumi:"armResourceId"`
}

func (SystemCreatedAcrAccountArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemCreatedAcrAccount)(nil)).Elem()
}

func (i SystemCreatedAcrAccountArgs) ToSystemCreatedAcrAccountOutput() SystemCreatedAcrAccountOutput {
	return i.ToSystemCreatedAcrAccountOutputWithContext(context.Background())
}

func (i SystemCreatedAcrAccountArgs) ToSystemCreatedAcrAccountOutputWithContext(ctx context.Context) SystemCreatedAcrAccountOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemCreatedAcrAccountOutput)
}

func (i SystemCreatedAcrAccountArgs) ToOutput(ctx context.Context) pulumix.Output[SystemCreatedAcrAccount] {
	return pulumix.Output[SystemCreatedAcrAccount]{
		OutputState: i.ToSystemCreatedAcrAccountOutputWithContext(ctx).OutputState,
	}
}

func (i SystemCreatedAcrAccountArgs) ToSystemCreatedAcrAccountPtrOutput() SystemCreatedAcrAccountPtrOutput {
	return i.ToSystemCreatedAcrAccountPtrOutputWithContext(context.Background())
}

func (i SystemCreatedAcrAccountArgs) ToSystemCreatedAcrAccountPtrOutputWithContext(ctx context.Context) SystemCreatedAcrAccountPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemCreatedAcrAccountOutput).ToSystemCreatedAcrAccountPtrOutputWithContext(ctx)
}

// SystemCreatedAcrAccountPtrInput is an input type that accepts SystemCreatedAcrAccountArgs, SystemCreatedAcrAccountPtr and SystemCreatedAcrAccountPtrOutput values.
// You can construct a concrete instance of `SystemCreatedAcrAccountPtrInput` via:
//
//	        SystemCreatedAcrAccountArgs{...}
//
//	or:
//
//	        nil
type SystemCreatedAcrAccountPtrInput interface {
	pulumi.Input

	ToSystemCreatedAcrAccountPtrOutput() SystemCreatedAcrAccountPtrOutput
	ToSystemCreatedAcrAccountPtrOutputWithContext(context.Context) SystemCreatedAcrAccountPtrOutput
}

type systemCreatedAcrAccountPtrType SystemCreatedAcrAccountArgs

func SystemCreatedAcrAccountPtr(v *SystemCreatedAcrAccountArgs) SystemCreatedAcrAccountPtrInput {
	return (*systemCreatedAcrAccountPtrType)(v)
}

func (*systemCreatedAcrAccountPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemCreatedAcrAccount)(nil)).Elem()
}

func (i *systemCreatedAcrAccountPtrType) ToSystemCreatedAcrAccountPtrOutput() SystemCreatedAcrAccountPtrOutput {
	return i.ToSystemCreatedAcrAccountPtrOutputWithContext(context.Background())
}

func (i *systemCreatedAcrAccountPtrType) ToSystemCreatedAcrAccountPtrOutputWithContext(ctx context.Context) SystemCreatedAcrAccountPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemCreatedAcrAccountPtrOutput)
}

func (i *systemCreatedAcrAccountPtrType) ToOutput(ctx context.Context) pulumix.Output[*SystemCreatedAcrAccount] {
	return pulumix.Output[*SystemCreatedAcrAccount]{
		OutputState: i.ToSystemCreatedAcrAccountPtrOutputWithContext(ctx).OutputState,
	}
}

type SystemCreatedAcrAccountOutput struct{ *pulumi.OutputState }

func (SystemCreatedAcrAccountOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemCreatedAcrAccount)(nil)).Elem()
}

func (o SystemCreatedAcrAccountOutput) ToSystemCreatedAcrAccountOutput() SystemCreatedAcrAccountOutput {
	return o
}

func (o SystemCreatedAcrAccountOutput) ToSystemCreatedAcrAccountOutputWithContext(ctx context.Context) SystemCreatedAcrAccountOutput {
	return o
}

func (o SystemCreatedAcrAccountOutput) ToSystemCreatedAcrAccountPtrOutput() SystemCreatedAcrAccountPtrOutput {
	return o.ToSystemCreatedAcrAccountPtrOutputWithContext(context.Background())
}

func (o SystemCreatedAcrAccountOutput) ToSystemCreatedAcrAccountPtrOutputWithContext(ctx context.Context) SystemCreatedAcrAccountPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SystemCreatedAcrAccount) *SystemCreatedAcrAccount {
		return &v
	}).(SystemCreatedAcrAccountPtrOutput)
}

func (o SystemCreatedAcrAccountOutput) ToOutput(ctx context.Context) pulumix.Output[SystemCreatedAcrAccount] {
	return pulumix.Output[SystemCreatedAcrAccount]{
		OutputState: o.OutputState,
	}
}

// Name of the ACR account
func (o SystemCreatedAcrAccountOutput) AcrAccountName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemCreatedAcrAccount) *string { return v.AcrAccountName }).(pulumi.StringPtrOutput)
}

// SKU of the ACR account
func (o SystemCreatedAcrAccountOutput) AcrAccountSku() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemCreatedAcrAccount) *string { return v.AcrAccountSku }).(pulumi.StringPtrOutput)
}

// This is populated once the ACR account is created.
func (o SystemCreatedAcrAccountOutput) ArmResourceId() ArmResourceIdPtrOutput {
	return o.ApplyT(func(v SystemCreatedAcrAccount) *ArmResourceId { return v.ArmResourceId }).(ArmResourceIdPtrOutput)
}

type SystemCreatedAcrAccountPtrOutput struct{ *pulumi.OutputState }

func (SystemCreatedAcrAccountPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemCreatedAcrAccount)(nil)).Elem()
}

func (o SystemCreatedAcrAccountPtrOutput) ToSystemCreatedAcrAccountPtrOutput() SystemCreatedAcrAccountPtrOutput {
	return o
}

func (o SystemCreatedAcrAccountPtrOutput) ToSystemCreatedAcrAccountPtrOutputWithContext(ctx context.Context) SystemCreatedAcrAccountPtrOutput {
	return o
}

func (o SystemCreatedAcrAccountPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*SystemCreatedAcrAccount] {
	return pulumix.Output[*SystemCreatedAcrAccount]{
		OutputState: o.OutputState,
	}
}

func (o SystemCreatedAcrAccountPtrOutput) Elem() SystemCreatedAcrAccountOutput {
	return o.ApplyT(func(v *SystemCreatedAcrAccount) SystemCreatedAcrAccount {
		if v != nil {
			return *v
		}
		var ret SystemCreatedAcrAccount
		return ret
	}).(SystemCreatedAcrAccountOutput)
}

// Name of the ACR account
func (o SystemCreatedAcrAccountPtrOutput) AcrAccountName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemCreatedAcrAccount) *string {
		if v == nil {
			return nil
		}
		return v.AcrAccountName
	}).(pulumi.StringPtrOutput)
}

// SKU of the ACR account
func (o SystemCreatedAcrAccountPtrOutput) AcrAccountSku() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemCreatedAcrAccount) *string {
		if v == nil {
			return nil
		}
		return v.AcrAccountSku
	}).(pulumi.StringPtrOutput)
}

// This is populated once the ACR account is created.
func (o SystemCreatedAcrAccountPtrOutput) ArmResourceId() ArmResourceIdPtrOutput {
	return o.ApplyT(func(v *SystemCreatedAcrAccount) *ArmResourceId {
		if v == nil {
			return nil
		}
		return v.ArmResourceId
	}).(ArmResourceIdPtrOutput)
}

type SystemCreatedAcrAccountResponse struct {
	// Name of the ACR account
	AcrAccountName *string `pulumi:"acrAccountName"`
	// SKU of the ACR account
	AcrAccountSku *string `pulumi:"acrAccountSku"`
	// This is populated once the ACR account is created.
	ArmResourceId *ArmResourceIdResponse `pulumi:"armResourceId"`
}

type SystemCreatedAcrAccountResponseOutput struct{ *pulumi.OutputState }

func (SystemCreatedAcrAccountResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemCreatedAcrAccountResponse)(nil)).Elem()
}

func (o SystemCreatedAcrAccountResponseOutput) ToSystemCreatedAcrAccountResponseOutput() SystemCreatedAcrAccountResponseOutput {
	return o
}

func (o SystemCreatedAcrAccountResponseOutput) ToSystemCreatedAcrAccountResponseOutputWithContext(ctx context.Context) SystemCreatedAcrAccountResponseOutput {
	return o
}

func (o SystemCreatedAcrAccountResponseOutput) ToOutput(ctx context.Context) pulumix.Output[SystemCreatedAcrAccountResponse] {
	return pulumix.Output[SystemCreatedAcrAccountResponse]{
		OutputState: o.OutputState,
	}
}

// Name of the ACR account
func (o SystemCreatedAcrAccountResponseOutput) AcrAccountName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemCreatedAcrAccountResponse) *string { return v.AcrAccountName }).(pulumi.StringPtrOutput)
}

// SKU of the ACR account
func (o SystemCreatedAcrAccountResponseOutput) AcrAccountSku() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemCreatedAcrAccountResponse) *string { return v.AcrAccountSku }).(pulumi.StringPtrOutput)
}

// This is populated once the ACR account is created.
func (o SystemCreatedAcrAccountResponseOutput) ArmResourceId() ArmResourceIdResponsePtrOutput {
	return o.ApplyT(func(v SystemCreatedAcrAccountResponse) *ArmResourceIdResponse { return v.ArmResourceId }).(ArmResourceIdResponsePtrOutput)
}

type SystemCreatedAcrAccountResponsePtrOutput struct{ *pulumi.OutputState }

func (SystemCreatedAcrAccountResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemCreatedAcrAccountResponse)(nil)).Elem()
}

func (o SystemCreatedAcrAccountResponsePtrOutput) ToSystemCreatedAcrAccountResponsePtrOutput() SystemCreatedAcrAccountResponsePtrOutput {
	return o
}

func (o SystemCreatedAcrAccountResponsePtrOutput) ToSystemCreatedAcrAccountResponsePtrOutputWithContext(ctx context.Context) SystemCreatedAcrAccountResponsePtrOutput {
	return o
}

func (o SystemCreatedAcrAccountResponsePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*SystemCreatedAcrAccountResponse] {
	return pulumix.Output[*SystemCreatedAcrAccountResponse]{
		OutputState: o.OutputState,
	}
}

func (o SystemCreatedAcrAccountResponsePtrOutput) Elem() SystemCreatedAcrAccountResponseOutput {
	return o.ApplyT(func(v *SystemCreatedAcrAccountResponse) SystemCreatedAcrAccountResponse {
		if v != nil {
			return *v
		}
		var ret SystemCreatedAcrAccountResponse
		return ret
	}).(SystemCreatedAcrAccountResponseOutput)
}

// Name of the ACR account
func (o SystemCreatedAcrAccountResponsePtrOutput) AcrAccountName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemCreatedAcrAccountResponse) *string {
		if v == nil {
			return nil
		}
		return v.AcrAccountName
	}).(pulumi.StringPtrOutput)
}

// SKU of the ACR account
func (o SystemCreatedAcrAccountResponsePtrOutput) AcrAccountSku() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemCreatedAcrAccountResponse) *string {
		if v == nil {
			return nil
		}
		return v.AcrAccountSku
	}).(pulumi.StringPtrOutput)
}

// This is populated once the ACR account is created.
func (o SystemCreatedAcrAccountResponsePtrOutput) ArmResourceId() ArmResourceIdResponsePtrOutput {
	return o.ApplyT(func(v *SystemCreatedAcrAccountResponse) *ArmResourceIdResponse {
		if v == nil {
			return nil
		}
		return v.ArmResourceId
	}).(ArmResourceIdResponsePtrOutput)
}

type SystemCreatedStorageAccount struct {
	// Public blob access allowed
	AllowBlobPublicAccess *bool `pulumi:"allowBlobPublicAccess"`
	// This is populated once the storage account is created.
	ArmResourceId *ArmResourceId `pulumi:"armResourceId"`
	// HNS enabled for storage account
	StorageAccountHnsEnabled *bool `pulumi:"storageAccountHnsEnabled"`
	// Name of the storage account
	StorageAccountName *string `pulumi:"storageAccountName"`
	// Allowed values:
	// "Standard_LRS",
	// "Standard_GRS",
	// "Standard_RAGRS",
	// "Standard_ZRS",
	// "Standard_GZRS",
	// "Standard_RAGZRS",
	// "Premium_LRS",
	// "Premium_ZRS"
	StorageAccountType *string `pulumi:"storageAccountType"`
}

// SystemCreatedStorageAccountInput is an input type that accepts SystemCreatedStorageAccountArgs and SystemCreatedStorageAccountOutput values.
// You can construct a concrete instance of `SystemCreatedStorageAccountInput` via:
//
//	SystemCreatedStorageAccountArgs{...}
type SystemCreatedStorageAccountInput interface {
	pulumi.Input

	ToSystemCreatedStorageAccountOutput() SystemCreatedStorageAccountOutput
	ToSystemCreatedStorageAccountOutputWithContext(context.Context) SystemCreatedStorageAccountOutput
}

type SystemCreatedStorageAccountArgs struct {
	// Public blob access allowed
	AllowBlobPublicAccess pulumi.BoolPtrInput `pulumi:"allowBlobPublicAccess"`
	// This is populated once the storage account is created.
	ArmResourceId ArmResourceIdPtrInput `pulumi:"armResourceId"`
	// HNS enabled for storage account
	StorageAccountHnsEnabled pulumi.BoolPtrInput `pulumi:"storageAccountHnsEnabled"`
	// Name of the storage account
	StorageAccountName pulumi.StringPtrInput `pulumi:"storageAccountName"`
	// Allowed values:
	// "Standard_LRS",
	// "Standard_GRS",
	// "Standard_RAGRS",
	// "Standard_ZRS",
	// "Standard_GZRS",
	// "Standard_RAGZRS",
	// "Premium_LRS",
	// "Premium_ZRS"
	StorageAccountType pulumi.StringPtrInput `pulumi:"storageAccountType"`
}

func (SystemCreatedStorageAccountArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemCreatedStorageAccount)(nil)).Elem()
}

func (i SystemCreatedStorageAccountArgs) ToSystemCreatedStorageAccountOutput() SystemCreatedStorageAccountOutput {
	return i.ToSystemCreatedStorageAccountOutputWithContext(context.Background())
}

func (i SystemCreatedStorageAccountArgs) ToSystemCreatedStorageAccountOutputWithContext(ctx context.Context) SystemCreatedStorageAccountOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemCreatedStorageAccountOutput)
}

func (i SystemCreatedStorageAccountArgs) ToOutput(ctx context.Context) pulumix.Output[SystemCreatedStorageAccount] {
	return pulumix.Output[SystemCreatedStorageAccount]{
		OutputState: i.ToSystemCreatedStorageAccountOutputWithContext(ctx).OutputState,
	}
}

func (i SystemCreatedStorageAccountArgs) ToSystemCreatedStorageAccountPtrOutput() SystemCreatedStorageAccountPtrOutput {
	return i.ToSystemCreatedStorageAccountPtrOutputWithContext(context.Background())
}

func (i SystemCreatedStorageAccountArgs) ToSystemCreatedStorageAccountPtrOutputWithContext(ctx context.Context) SystemCreatedStorageAccountPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemCreatedStorageAccountOutput).ToSystemCreatedStorageAccountPtrOutputWithContext(ctx)
}

// SystemCreatedStorageAccountPtrInput is an input type that accepts SystemCreatedStorageAccountArgs, SystemCreatedStorageAccountPtr and SystemCreatedStorageAccountPtrOutput values.
// You can construct a concrete instance of `SystemCreatedStorageAccountPtrInput` via:
//
//	        SystemCreatedStorageAccountArgs{...}
//
//	or:
//
//	        nil
type SystemCreatedStorageAccountPtrInput interface {
	pulumi.Input

	ToSystemCreatedStorageAccountPtrOutput() SystemCreatedStorageAccountPtrOutput
	ToSystemCreatedStorageAccountPtrOutputWithContext(context.Context) SystemCreatedStorageAccountPtrOutput
}

type systemCreatedStorageAccountPtrType SystemCreatedStorageAccountArgs

func SystemCreatedStorageAccountPtr(v *SystemCreatedStorageAccountArgs) SystemCreatedStorageAccountPtrInput {
	return (*systemCreatedStorageAccountPtrType)(v)
}

func (*systemCreatedStorageAccountPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemCreatedStorageAccount)(nil)).Elem()
}

func (i *systemCreatedStorageAccountPtrType) ToSystemCreatedStorageAccountPtrOutput() SystemCreatedStorageAccountPtrOutput {
	return i.ToSystemCreatedStorageAccountPtrOutputWithContext(context.Background())
}

func (i *systemCreatedStorageAccountPtrType) ToSystemCreatedStorageAccountPtrOutputWithContext(ctx context.Context) SystemCreatedStorageAccountPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemCreatedStorageAccountPtrOutput)
}

func (i *systemCreatedStorageAccountPtrType) ToOutput(ctx context.Context) pulumix.Output[*SystemCreatedStorageAccount] {
	return pulumix.Output[*SystemCreatedStorageAccount]{
		OutputState: i.ToSystemCreatedStorageAccountPtrOutputWithContext(ctx).OutputState,
	}
}

type SystemCreatedStorageAccountOutput struct{ *pulumi.OutputState }

func (SystemCreatedStorageAccountOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemCreatedStorageAccount)(nil)).Elem()
}

func (o SystemCreatedStorageAccountOutput) ToSystemCreatedStorageAccountOutput() SystemCreatedStorageAccountOutput {
	return o
}

func (o SystemCreatedStorageAccountOutput) ToSystemCreatedStorageAccountOutputWithContext(ctx context.Context) SystemCreatedStorageAccountOutput {
	return o
}

func (o SystemCreatedStorageAccountOutput) ToSystemCreatedStorageAccountPtrOutput() SystemCreatedStorageAccountPtrOutput {
	return o.ToSystemCreatedStorageAccountPtrOutputWithContext(context.Background())
}

func (o SystemCreatedStorageAccountOutput) ToSystemCreatedStorageAccountPtrOutputWithContext(ctx context.Context) SystemCreatedStorageAccountPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SystemCreatedStorageAccount) *SystemCreatedStorageAccount {
		return &v
	}).(SystemCreatedStorageAccountPtrOutput)
}

func (o SystemCreatedStorageAccountOutput) ToOutput(ctx context.Context) pulumix.Output[SystemCreatedStorageAccount] {
	return pulumix.Output[SystemCreatedStorageAccount]{
		OutputState: o.OutputState,
	}
}

// Public blob access allowed
func (o SystemCreatedStorageAccountOutput) AllowBlobPublicAccess() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SystemCreatedStorageAccount) *bool { return v.AllowBlobPublicAccess }).(pulumi.BoolPtrOutput)
}

// This is populated once the storage account is created.
func (o SystemCreatedStorageAccountOutput) ArmResourceId() ArmResourceIdPtrOutput {
	return o.ApplyT(func(v SystemCreatedStorageAccount) *ArmResourceId { return v.ArmResourceId }).(ArmResourceIdPtrOutput)
}

// HNS enabled for storage account
func (o SystemCreatedStorageAccountOutput) StorageAccountHnsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SystemCreatedStorageAccount) *bool { return v.StorageAccountHnsEnabled }).(pulumi.BoolPtrOutput)
}

// Name of the storage account
func (o SystemCreatedStorageAccountOutput) StorageAccountName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemCreatedStorageAccount) *string { return v.StorageAccountName }).(pulumi.StringPtrOutput)
}

// Allowed values:
// "Standard_LRS",
// "Standard_GRS",
// "Standard_RAGRS",
// "Standard_ZRS",
// "Standard_GZRS",
// "Standard_RAGZRS",
// "Premium_LRS",
// "Premium_ZRS"
func (o SystemCreatedStorageAccountOutput) StorageAccountType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemCreatedStorageAccount) *string { return v.StorageAccountType }).(pulumi.StringPtrOutput)
}

type SystemCreatedStorageAccountPtrOutput struct{ *pulumi.OutputState }

func (SystemCreatedStorageAccountPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemCreatedStorageAccount)(nil)).Elem()
}

func (o SystemCreatedStorageAccountPtrOutput) ToSystemCreatedStorageAccountPtrOutput() SystemCreatedStorageAccountPtrOutput {
	return o
}

func (o SystemCreatedStorageAccountPtrOutput) ToSystemCreatedStorageAccountPtrOutputWithContext(ctx context.Context) SystemCreatedStorageAccountPtrOutput {
	return o
}

func (o SystemCreatedStorageAccountPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*SystemCreatedStorageAccount] {
	return pulumix.Output[*SystemCreatedStorageAccount]{
		OutputState: o.OutputState,
	}
}

func (o SystemCreatedStorageAccountPtrOutput) Elem() SystemCreatedStorageAccountOutput {
	return o.ApplyT(func(v *SystemCreatedStorageAccount) SystemCreatedStorageAccount {
		if v != nil {
			return *v
		}
		var ret SystemCreatedStorageAccount
		return ret
	}).(SystemCreatedStorageAccountOutput)
}

// Public blob access allowed
func (o SystemCreatedStorageAccountPtrOutput) AllowBlobPublicAccess() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SystemCreatedStorageAccount) *bool {
		if v == nil {
			return nil
		}
		return v.AllowBlobPublicAccess
	}).(pulumi.BoolPtrOutput)
}

// This is populated once the storage account is created.
func (o SystemCreatedStorageAccountPtrOutput) ArmResourceId() ArmResourceIdPtrOutput {
	return o.ApplyT(func(v *SystemCreatedStorageAccount) *ArmResourceId {
		if v == nil {
			return nil
		}
		return v.ArmResourceId
	}).(ArmResourceIdPtrOutput)
}

// HNS enabled for storage account
func (o SystemCreatedStorageAccountPtrOutput) StorageAccountHnsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SystemCreatedStorageAccount) *bool {
		if v == nil {
			return nil
		}
		return v.StorageAccountHnsEnabled
	}).(pulumi.BoolPtrOutput)
}

// Name of the storage account
func (o SystemCreatedStorageAccountPtrOutput) StorageAccountName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemCreatedStorageAccount) *string {
		if v == nil {
			return nil
		}
		return v.StorageAccountName
	}).(pulumi.StringPtrOutput)
}

// Allowed values:
// "Standard_LRS",
// "Standard_GRS",
// "Standard_RAGRS",
// "Standard_ZRS",
// "Standard_GZRS",
// "Standard_RAGZRS",
// "Premium_LRS",
// "Premium_ZRS"
func (o SystemCreatedStorageAccountPtrOutput) StorageAccountType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemCreatedStorageAccount) *string {
		if v == nil {
			return nil
		}
		return v.StorageAccountType
	}).(pulumi.StringPtrOutput)
}

type SystemCreatedStorageAccountResponse struct {
	// Public blob access allowed
	AllowBlobPublicAccess *bool `pulumi:"allowBlobPublicAccess"`
	// This is populated once the storage account is created.
	ArmResourceId *ArmResourceIdResponse `pulumi:"armResourceId"`
	// HNS enabled for storage account
	StorageAccountHnsEnabled *bool `pulumi:"storageAccountHnsEnabled"`
	// Name of the storage account
	StorageAccountName *string `pulumi:"storageAccountName"`
	// Allowed values:
	// "Standard_LRS",
	// "Standard_GRS",
	// "Standard_RAGRS",
	// "Standard_ZRS",
	// "Standard_GZRS",
	// "Standard_RAGZRS",
	// "Premium_LRS",
	// "Premium_ZRS"
	StorageAccountType *string `pulumi:"storageAccountType"`
}

type SystemCreatedStorageAccountResponseOutput struct{ *pulumi.OutputState }

func (SystemCreatedStorageAccountResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemCreatedStorageAccountResponse)(nil)).Elem()
}

func (o SystemCreatedStorageAccountResponseOutput) ToSystemCreatedStorageAccountResponseOutput() SystemCreatedStorageAccountResponseOutput {
	return o
}

func (o SystemCreatedStorageAccountResponseOutput) ToSystemCreatedStorageAccountResponseOutputWithContext(ctx context.Context) SystemCreatedStorageAccountResponseOutput {
	return o
}

func (o SystemCreatedStorageAccountResponseOutput) ToOutput(ctx context.Context) pulumix.Output[SystemCreatedStorageAccountResponse] {
	return pulumix.Output[SystemCreatedStorageAccountResponse]{
		OutputState: o.OutputState,
	}
}

// Public blob access allowed
func (o SystemCreatedStorageAccountResponseOutput) AllowBlobPublicAccess() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SystemCreatedStorageAccountResponse) *bool { return v.AllowBlobPublicAccess }).(pulumi.BoolPtrOutput)
}

// This is populated once the storage account is created.
func (o SystemCreatedStorageAccountResponseOutput) ArmResourceId() ArmResourceIdResponsePtrOutput {
	return o.ApplyT(func(v SystemCreatedStorageAccountResponse) *ArmResourceIdResponse { return v.ArmResourceId }).(ArmResourceIdResponsePtrOutput)
}

// HNS enabled for storage account
func (o SystemCreatedStorageAccountResponseOutput) StorageAccountHnsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SystemCreatedStorageAccountResponse) *bool { return v.StorageAccountHnsEnabled }).(pulumi.BoolPtrOutput)
}

// Name of the storage account
func (o SystemCreatedStorageAccountResponseOutput) StorageAccountName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemCreatedStorageAccountResponse) *string { return v.StorageAccountName }).(pulumi.StringPtrOutput)
}

// Allowed values:
// "Standard_LRS",
// "Standard_GRS",
// "Standard_RAGRS",
// "Standard_ZRS",
// "Standard_GZRS",
// "Standard_RAGZRS",
// "Premium_LRS",
// "Premium_ZRS"
func (o SystemCreatedStorageAccountResponseOutput) StorageAccountType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemCreatedStorageAccountResponse) *string { return v.StorageAccountType }).(pulumi.StringPtrOutput)
}

type SystemCreatedStorageAccountResponsePtrOutput struct{ *pulumi.OutputState }

func (SystemCreatedStorageAccountResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemCreatedStorageAccountResponse)(nil)).Elem()
}

func (o SystemCreatedStorageAccountResponsePtrOutput) ToSystemCreatedStorageAccountResponsePtrOutput() SystemCreatedStorageAccountResponsePtrOutput {
	return o
}

func (o SystemCreatedStorageAccountResponsePtrOutput) ToSystemCreatedStorageAccountResponsePtrOutputWithContext(ctx context.Context) SystemCreatedStorageAccountResponsePtrOutput {
	return o
}

func (o SystemCreatedStorageAccountResponsePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*SystemCreatedStorageAccountResponse] {
	return pulumix.Output[*SystemCreatedStorageAccountResponse]{
		OutputState: o.OutputState,
	}
}

func (o SystemCreatedStorageAccountResponsePtrOutput) Elem() SystemCreatedStorageAccountResponseOutput {
	return o.ApplyT(func(v *SystemCreatedStorageAccountResponse) SystemCreatedStorageAccountResponse {
		if v != nil {
			return *v
		}
		var ret SystemCreatedStorageAccountResponse
		return ret
	}).(SystemCreatedStorageAccountResponseOutput)
}

// Public blob access allowed
func (o SystemCreatedStorageAccountResponsePtrOutput) AllowBlobPublicAccess() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SystemCreatedStorageAccountResponse) *bool {
		if v == nil {
			return nil
		}
		return v.AllowBlobPublicAccess
	}).(pulumi.BoolPtrOutput)
}

// This is populated once the storage account is created.
func (o SystemCreatedStorageAccountResponsePtrOutput) ArmResourceId() ArmResourceIdResponsePtrOutput {
	return o.ApplyT(func(v *SystemCreatedStorageAccountResponse) *ArmResourceIdResponse {
		if v == nil {
			return nil
		}
		return v.ArmResourceId
	}).(ArmResourceIdResponsePtrOutput)
}

// HNS enabled for storage account
func (o SystemCreatedStorageAccountResponsePtrOutput) StorageAccountHnsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SystemCreatedStorageAccountResponse) *bool {
		if v == nil {
			return nil
		}
		return v.StorageAccountHnsEnabled
	}).(pulumi.BoolPtrOutput)
}

// Name of the storage account
func (o SystemCreatedStorageAccountResponsePtrOutput) StorageAccountName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemCreatedStorageAccountResponse) *string {
		if v == nil {
			return nil
		}
		return v.StorageAccountName
	}).(pulumi.StringPtrOutput)
}

// Allowed values:
// "Standard_LRS",
// "Standard_GRS",
// "Standard_RAGRS",
// "Standard_ZRS",
// "Standard_GZRS",
// "Standard_RAGZRS",
// "Premium_LRS",
// "Premium_ZRS"
func (o SystemCreatedStorageAccountResponsePtrOutput) StorageAccountType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemCreatedStorageAccountResponse) *string {
		if v == nil {
			return nil
		}
		return v.StorageAccountType
	}).(pulumi.StringPtrOutput)
}

// Metadata pertaining to creation and last modification of the resource.
type SystemDataResponse struct {
	// The timestamp of resource creation (UTC).
	CreatedAt *string `pulumi:"createdAt"`
	// The identity that created the resource.
	CreatedBy *string `pulumi:"createdBy"`
	// The type of identity that created the resource.
	CreatedByType *string `pulumi:"createdByType"`
	// The timestamp of resource last modification (UTC)
	LastModifiedAt *string `pulumi:"lastModifiedAt"`
	// The identity that last modified the resource.
	LastModifiedBy *string `pulumi:"lastModifiedBy"`
	// The type of identity that last modified the resource.
	LastModifiedByType *string `pulumi:"lastModifiedByType"`
}

// Metadata pertaining to creation and last modification of the resource.
type SystemDataResponseOutput struct{ *pulumi.OutputState }

func (SystemDataResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemDataResponse)(nil)).Elem()
}

func (o SystemDataResponseOutput) ToSystemDataResponseOutput() SystemDataResponseOutput {
	return o
}

func (o SystemDataResponseOutput) ToSystemDataResponseOutputWithContext(ctx context.Context) SystemDataResponseOutput {
	return o
}

func (o SystemDataResponseOutput) ToOutput(ctx context.Context) pulumix.Output[SystemDataResponse] {
	return pulumix.Output[SystemDataResponse]{
		OutputState: o.OutputState,
	}
}

// The timestamp of resource creation (UTC).
func (o SystemDataResponseOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedAt }).(pulumi.StringPtrOutput)
}

// The identity that created the resource.
func (o SystemDataResponseOutput) CreatedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedBy }).(pulumi.StringPtrOutput)
}

// The type of identity that created the resource.
func (o SystemDataResponseOutput) CreatedByType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedByType }).(pulumi.StringPtrOutput)
}

// The timestamp of resource last modification (UTC)
func (o SystemDataResponseOutput) LastModifiedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedAt }).(pulumi.StringPtrOutput)
}

// The identity that last modified the resource.
func (o SystemDataResponseOutput) LastModifiedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedBy }).(pulumi.StringPtrOutput)
}

// The type of identity that last modified the resource.
func (o SystemDataResponseOutput) LastModifiedByType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedByType }).(pulumi.StringPtrOutput)
}

// A system service running on a compute.
type SystemServiceResponse struct {
	// Public IP address
	PublicIpAddress string `pulumi:"publicIpAddress"`
	// The type of this system service.
	SystemServiceType string `pulumi:"systemServiceType"`
	// The version for this type.
	Version string `pulumi:"version"`
}

// Fixed training parameters that won't be swept over during AutoML Table training.
type TableFixedParameters struct {
	// Specify the boosting type, e.g gbdt for XGBoost.
	Booster *string `pulumi:"booster"`
	// Specify the boosting type, e.g gbdt for LightGBM.
	BoostingType *string `pulumi:"boostingType"`
	// Specify the grow policy, which controls the way new nodes are added to the tree.
	GrowPolicy *string `pulumi:"growPolicy"`
	// The learning rate for the training procedure.
	LearningRate *float64 `pulumi:"learningRate"`
	// Specify the Maximum number of discrete bins to bucket continuous features .
	MaxBin *int `pulumi:"maxBin"`
	// Specify the max depth to limit the tree depth explicitly.
	MaxDepth *int `pulumi:"maxDepth"`
	// Specify the max leaves to limit the tree leaves explicitly.
	MaxLeaves *int `pulumi:"maxLeaves"`
	// The minimum number of data per leaf.
	MinDataInLeaf *int `pulumi:"minDataInLeaf"`
	// Minimum loss reduction required to make a further partition on a leaf node of the tree.
	MinSplitGain *float64 `pulumi:"minSplitGain"`
	// The name of the model to train.
	ModelName *string `pulumi:"modelName"`
	// Specify the number of trees (or rounds) in an model.
	NEstimators *int `pulumi:"nEstimators"`
	// Specify the number of leaves.
	NumLeaves *int `pulumi:"numLeaves"`
	// The name of the preprocessor to use.
	PreprocessorName *string `pulumi:"preprocessorName"`
	// L1 regularization term on weights.
	RegAlpha *float64 `pulumi:"regAlpha"`
	// L2 regularization term on weights.
	RegLambda *float64 `pulumi:"regLambda"`
	// Subsample ratio of the training instance.
	Subsample *float64 `pulumi:"subsample"`
	// Frequency of subsample.
	SubsampleFreq *float64 `pulumi:"subsampleFreq"`
	// Specify the tree method.
	TreeMethod *string `pulumi:"treeMethod"`
	// If true, center before scaling the data with StandardScalar.
	WithMean *bool `pulumi:"withMean"`
	// If true, scaling the data with Unit Variance with StandardScalar.
	WithStd *bool `pulumi:"withStd"`
}

// Defaults sets the appropriate defaults for TableFixedParameters
func (val *TableFixedParameters) Defaults() *TableFixedParameters {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.WithMean == nil {
		withMean_ := false
		tmp.WithMean = &withMean_
	}
	if tmp.WithStd == nil {
		withStd_ := false
		tmp.WithStd = &withStd_
	}
	return &tmp
}

// Fixed training parameters that won't be swept over during AutoML Table training.
type TableFixedParametersResponse struct {
	// Specify the boosting type, e.g gbdt for XGBoost.
	Booster *string `pulumi:"booster"`
	// Specify the boosting type, e.g gbdt for LightGBM.
	BoostingType *string `pulumi:"boostingType"`
	// Specify the grow policy, which controls the way new nodes are added to the tree.
	GrowPolicy *string `pulumi:"growPolicy"`
	// The learning rate for the training procedure.
	LearningRate *float64 `pulumi:"learningRate"`
	// Specify the Maximum number of discrete bins to bucket continuous features .
	MaxBin *int `pulumi:"maxBin"`
	// Specify the max depth to limit the tree depth explicitly.
	MaxDepth *int `pulumi:"maxDepth"`
	// Specify the max leaves to limit the tree leaves explicitly.
	MaxLeaves *int `pulumi:"maxLeaves"`
	// The minimum number of data per leaf.
	MinDataInLeaf *int `pulumi:"minDataInLeaf"`
	// Minimum loss reduction required to make a further partition on a leaf node of the tree.
	MinSplitGain *float64 `pulumi:"minSplitGain"`
	// The name of the model to train.
	ModelName *string `pulumi:"modelName"`
	// Specify the number of trees (or rounds) in an model.
	NEstimators *int `pulumi:"nEstimators"`
	// Specify the number of leaves.
	NumLeaves *int `pulumi:"numLeaves"`
	// The name of the preprocessor to use.
	PreprocessorName *string `pulumi:"preprocessorName"`
	// L1 regularization term on weights.
	RegAlpha *float64 `pulumi:"regAlpha"`
	// L2 regularization term on weights.
	RegLambda *float64 `pulumi:"regLambda"`
	// Subsample ratio of the training instance.
	Subsample *float64 `pulumi:"subsample"`
	// Frequency of subsample.
	SubsampleFreq *float64 `pulumi:"subsampleFreq"`
	// Specify the tree method.
	TreeMethod *string `pulumi:"treeMethod"`
	// If true, center before scaling the data with StandardScalar.
	WithMean *bool `pulumi:"withMean"`
	// If true, scaling the data with Unit Variance with StandardScalar.
	WithStd *bool `pulumi:"withStd"`
}

// Defaults sets the appropriate defaults for TableFixedParametersResponse
func (val *TableFixedParametersResponse) Defaults() *TableFixedParametersResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.WithMean == nil {
		withMean_ := false
		tmp.WithMean = &withMean_
	}
	if tmp.WithStd == nil {
		withStd_ := false
		tmp.WithStd = &withStd_
	}
	return &tmp
}

type TableParameterSubspace struct {
	// Specify the boosting type, e.g gbdt for XGBoost.
	Booster *string `pulumi:"booster"`
	// Specify the boosting type, e.g gbdt for LightGBM.
	BoostingType *string `pulumi:"boostingType"`
	// Specify the grow policy, which controls the way new nodes are added to the tree.
	GrowPolicy *string `pulumi:"growPolicy"`
	// The learning rate for the training procedure.
	LearningRate *string `pulumi:"learningRate"`
	// Specify the Maximum number of discrete bins to bucket continuous features .
	MaxBin *string `pulumi:"maxBin"`
	// Specify the max depth to limit the tree depth explicitly.
	MaxDepth *string `pulumi:"maxDepth"`
	// Specify the max leaves to limit the tree leaves explicitly.
	MaxLeaves *string `pulumi:"maxLeaves"`
	// The minimum number of data per leaf.
	MinDataInLeaf *string `pulumi:"minDataInLeaf"`
	// Minimum loss reduction required to make a further partition on a leaf node of the tree.
	MinSplitGain *string `pulumi:"minSplitGain"`
	// The name of the model to train.
	ModelName *string `pulumi:"modelName"`
	// Specify the number of trees (or rounds) in an model.
	NEstimators *string `pulumi:"nEstimators"`
	// Specify the number of leaves.
	NumLeaves *string `pulumi:"numLeaves"`
	// The name of the preprocessor to use.
	PreprocessorName *string `pulumi:"preprocessorName"`
	// L1 regularization term on weights.
	RegAlpha *string `pulumi:"regAlpha"`
	// L2 regularization term on weights.
	RegLambda *string `pulumi:"regLambda"`
	// Subsample ratio of the training instance.
	Subsample *string `pulumi:"subsample"`
	// Frequency of subsample
	SubsampleFreq *string `pulumi:"subsampleFreq"`
	// Specify the tree method.
	TreeMethod *string `pulumi:"treeMethod"`
	// If true, center before scaling the data with StandardScalar.
	WithMean *string `pulumi:"withMean"`
	// If true, scaling the data with Unit Variance with StandardScalar.
	WithStd *string `pulumi:"withStd"`
}

type TableParameterSubspaceResponse struct {
	// Specify the boosting type, e.g gbdt for XGBoost.
	Booster *string `pulumi:"booster"`
	// Specify the boosting type, e.g gbdt for LightGBM.
	BoostingType *string `pulumi:"boostingType"`
	// Specify the grow policy, which controls the way new nodes are added to the tree.
	GrowPolicy *string `pulumi:"growPolicy"`
	// The learning rate for the training procedure.
	LearningRate *string `pulumi:"learningRate"`
	// Specify the Maximum number of discrete bins to bucket continuous features .
	MaxBin *string `pulumi:"maxBin"`
	// Specify the max depth to limit the tree depth explicitly.
	MaxDepth *string `pulumi:"maxDepth"`
	// Specify the max leaves to limit the tree leaves explicitly.
	MaxLeaves *string `pulumi:"maxLeaves"`
	// The minimum number of data per leaf.
	MinDataInLeaf *string `pulumi:"minDataInLeaf"`
	// Minimum loss reduction required to make a further partition on a leaf node of the tree.
	MinSplitGain *string `pulumi:"minSplitGain"`
	// The name of the model to train.
	ModelName *string `pulumi:"modelName"`
	// Specify the number of trees (or rounds) in an model.
	NEstimators *string `pulumi:"nEstimators"`
	// Specify the number of leaves.
	NumLeaves *string `pulumi:"numLeaves"`
	// The name of the preprocessor to use.
	PreprocessorName *string `pulumi:"preprocessorName"`
	// L1 regularization term on weights.
	RegAlpha *string `pulumi:"regAlpha"`
	// L2 regularization term on weights.
	RegLambda *string `pulumi:"regLambda"`
	// Subsample ratio of the training instance.
	Subsample *string `pulumi:"subsample"`
	// Frequency of subsample
	SubsampleFreq *string `pulumi:"subsampleFreq"`
	// Specify the tree method.
	TreeMethod *string `pulumi:"treeMethod"`
	// If true, center before scaling the data with StandardScalar.
	WithMean *string `pulumi:"withMean"`
	// If true, scaling the data with Unit Variance with StandardScalar.
	WithStd *string `pulumi:"withStd"`
}

type TableSweepSettings struct {
	// Type of early termination policy for the sweeping job.
	EarlyTermination interface{} `pulumi:"earlyTermination"`
	// [Required] Type of sampling algorithm.
	SamplingAlgorithm string `pulumi:"samplingAlgorithm"`
}

type TableSweepSettingsResponse struct {
	// Type of early termination policy for the sweeping job.
	EarlyTermination interface{} `pulumi:"earlyTermination"`
	// [Required] Type of sampling algorithm.
	SamplingAlgorithm string `pulumi:"samplingAlgorithm"`
}

// Featurization Configuration.
type TableVerticalFeaturizationSettings struct {
	// These transformers shall not be used in featurization.
	BlockedTransformers []string `pulumi:"blockedTransformers"`
	// Dictionary of column name and its type (int, float, string, datetime etc).
	ColumnNameAndTypes map[string]string `pulumi:"columnNameAndTypes"`
	// Dataset language, useful for the text data.
	DatasetLanguage *string `pulumi:"datasetLanguage"`
	// Determines whether to use Dnn based featurizers for data featurization.
	EnableDnnFeaturization *bool `pulumi:"enableDnnFeaturization"`
	// Featurization mode - User can keep the default 'Auto' mode and AutoML will take care of necessary transformation of the data in featurization phase.
	// If 'Off' is selected then no featurization is done.
	// If 'Custom' is selected then user can specify additional inputs to customize how featurization is done.
	Mode *string `pulumi:"mode"`
	// User can specify additional transformers to be used along with the columns to which it would be applied and parameters for the transformer constructor.
	TransformerParams map[string][]ColumnTransformer `pulumi:"transformerParams"`
}

// Defaults sets the appropriate defaults for TableVerticalFeaturizationSettings
func (val *TableVerticalFeaturizationSettings) Defaults() *TableVerticalFeaturizationSettings {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.EnableDnnFeaturization == nil {
		enableDnnFeaturization_ := false
		tmp.EnableDnnFeaturization = &enableDnnFeaturization_
	}
	if tmp.Mode == nil {
		mode_ := "Auto"
		tmp.Mode = &mode_
	}
	return &tmp
}

// Featurization Configuration.
type TableVerticalFeaturizationSettingsResponse struct {
	// These transformers shall not be used in featurization.
	BlockedTransformers []string `pulumi:"blockedTransformers"`
	// Dictionary of column name and its type (int, float, string, datetime etc).
	ColumnNameAndTypes map[string]string `pulumi:"columnNameAndTypes"`
	// Dataset language, useful for the text data.
	DatasetLanguage *string `pulumi:"datasetLanguage"`
	// Determines whether to use Dnn based featurizers for data featurization.
	EnableDnnFeaturization *bool `pulumi:"enableDnnFeaturization"`
	// Featurization mode - User can keep the default 'Auto' mode and AutoML will take care of necessary transformation of the data in featurization phase.
	// If 'Off' is selected then no featurization is done.
	// If 'Custom' is selected then user can specify additional inputs to customize how featurization is done.
	Mode *string `pulumi:"mode"`
	// User can specify additional transformers to be used along with the columns to which it would be applied and parameters for the transformer constructor.
	TransformerParams map[string][]ColumnTransformerResponse `pulumi:"transformerParams"`
}

// Defaults sets the appropriate defaults for TableVerticalFeaturizationSettingsResponse
func (val *TableVerticalFeaturizationSettingsResponse) Defaults() *TableVerticalFeaturizationSettingsResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.EnableDnnFeaturization == nil {
		enableDnnFeaturization_ := false
		tmp.EnableDnnFeaturization = &enableDnnFeaturization_
	}
	if tmp.Mode == nil {
		mode_ := "Auto"
		tmp.Mode = &mode_
	}
	return &tmp
}

// Job execution constraints.
type TableVerticalLimitSettings struct {
	// Enable early termination, determines whether or not if AutoMLJob will terminate early if there is no score improvement in last 20 iterations.
	EnableEarlyTermination *bool `pulumi:"enableEarlyTermination"`
	// Exit score for the AutoML job.
	ExitScore *float64 `pulumi:"exitScore"`
	// Maximum Concurrent iterations.
	MaxConcurrentTrials *int `pulumi:"maxConcurrentTrials"`
	// Max cores per iteration.
	MaxCoresPerTrial *int `pulumi:"maxCoresPerTrial"`
	// Maximum nodes to use for the experiment.
	MaxNodes *int `pulumi:"maxNodes"`
	// Number of iterations.
	MaxTrials *int `pulumi:"maxTrials"`
	// Number of concurrent sweeping runs that user wants to trigger.
	SweepConcurrentTrials *int `pulumi:"sweepConcurrentTrials"`
	// Number of sweeping runs that user wants to trigger.
	SweepTrials *int `pulumi:"sweepTrials"`
	// AutoML job timeout.
	Timeout *string `pulumi:"timeout"`
	// Iteration timeout.
	TrialTimeout *string `pulumi:"trialTimeout"`
}

// Defaults sets the appropriate defaults for TableVerticalLimitSettings
func (val *TableVerticalLimitSettings) Defaults() *TableVerticalLimitSettings {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.EnableEarlyTermination == nil {
		enableEarlyTermination_ := true
		tmp.EnableEarlyTermination = &enableEarlyTermination_
	}
	if tmp.MaxConcurrentTrials == nil {
		maxConcurrentTrials_ := 1
		tmp.MaxConcurrentTrials = &maxConcurrentTrials_
	}
	if tmp.MaxCoresPerTrial == nil {
		maxCoresPerTrial_ := -1
		tmp.MaxCoresPerTrial = &maxCoresPerTrial_
	}
	if tmp.MaxNodes == nil {
		maxNodes_ := 1
		tmp.MaxNodes = &maxNodes_
	}
	if tmp.MaxTrials == nil {
		maxTrials_ := 1000
		tmp.MaxTrials = &maxTrials_
	}
	if tmp.SweepConcurrentTrials == nil {
		sweepConcurrentTrials_ := 0
		tmp.SweepConcurrentTrials = &sweepConcurrentTrials_
	}
	if tmp.SweepTrials == nil {
		sweepTrials_ := 0
		tmp.SweepTrials = &sweepTrials_
	}
	if tmp.Timeout == nil {
		timeout_ := "PT6H"
		tmp.Timeout = &timeout_
	}
	if tmp.TrialTimeout == nil {
		trialTimeout_ := "PT30M"
		tmp.TrialTimeout = &trialTimeout_
	}
	return &tmp
}

// Job execution constraints.
type TableVerticalLimitSettingsResponse struct {
	// Enable early termination, determines whether or not if AutoMLJob will terminate early if there is no score improvement in last 20 iterations.
	EnableEarlyTermination *bool `pulumi:"enableEarlyTermination"`
	// Exit score for the AutoML job.
	ExitScore *float64 `pulumi:"exitScore"`
	// Maximum Concurrent iterations.
	MaxConcurrentTrials *int `pulumi:"maxConcurrentTrials"`
	// Max cores per iteration.
	MaxCoresPerTrial *int `pulumi:"maxCoresPerTrial"`
	// Maximum nodes to use for the experiment.
	MaxNodes *int `pulumi:"maxNodes"`
	// Number of iterations.
	MaxTrials *int `pulumi:"maxTrials"`
	// Number of concurrent sweeping runs that user wants to trigger.
	SweepConcurrentTrials *int `pulumi:"sweepConcurrentTrials"`
	// Number of sweeping runs that user wants to trigger.
	SweepTrials *int `pulumi:"sweepTrials"`
	// AutoML job timeout.
	Timeout *string `pulumi:"timeout"`
	// Iteration timeout.
	TrialTimeout *string `pulumi:"trialTimeout"`
}

// Defaults sets the appropriate defaults for TableVerticalLimitSettingsResponse
func (val *TableVerticalLimitSettingsResponse) Defaults() *TableVerticalLimitSettingsResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.EnableEarlyTermination == nil {
		enableEarlyTermination_ := true
		tmp.EnableEarlyTermination = &enableEarlyTermination_
	}
	if tmp.MaxConcurrentTrials == nil {
		maxConcurrentTrials_ := 1
		tmp.MaxConcurrentTrials = &maxConcurrentTrials_
	}
	if tmp.MaxCoresPerTrial == nil {
		maxCoresPerTrial_ := -1
		tmp.MaxCoresPerTrial = &maxCoresPerTrial_
	}
	if tmp.MaxNodes == nil {
		maxNodes_ := 1
		tmp.MaxNodes = &maxNodes_
	}
	if tmp.MaxTrials == nil {
		maxTrials_ := 1000
		tmp.MaxTrials = &maxTrials_
	}
	if tmp.SweepConcurrentTrials == nil {
		sweepConcurrentTrials_ := 0
		tmp.SweepConcurrentTrials = &sweepConcurrentTrials_
	}
	if tmp.SweepTrials == nil {
		sweepTrials_ := 0
		tmp.SweepTrials = &sweepTrials_
	}
	if tmp.Timeout == nil {
		timeout_ := "PT6H"
		tmp.Timeout = &timeout_
	}
	if tmp.TrialTimeout == nil {
		trialTimeout_ := "PT30M"
		tmp.TrialTimeout = &trialTimeout_
	}
	return &tmp
}

type TargetUtilizationScaleSettings struct {
	// The maximum number of instances that the deployment can scale to. The quota will be reserved for max_instances.
	MaxInstances *int `pulumi:"maxInstances"`
	// The minimum number of instances to always be present.
	MinInstances *int `pulumi:"minInstances"`
	// The polling interval in ISO 8691 format. Only supports duration with precision as low as Seconds.
	PollingInterval *string `pulumi:"pollingInterval"`
	// Expected value is 'TargetUtilization'.
	ScaleType string `pulumi:"scaleType"`
	// Target CPU usage for the autoscaler.
	TargetUtilizationPercentage *int `pulumi:"targetUtilizationPercentage"`
}

// Defaults sets the appropriate defaults for TargetUtilizationScaleSettings
func (val *TargetUtilizationScaleSettings) Defaults() *TargetUtilizationScaleSettings {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.MaxInstances == nil {
		maxInstances_ := 1
		tmp.MaxInstances = &maxInstances_
	}
	if tmp.MinInstances == nil {
		minInstances_ := 1
		tmp.MinInstances = &minInstances_
	}
	if tmp.PollingInterval == nil {
		pollingInterval_ := "PT1S"
		tmp.PollingInterval = &pollingInterval_
	}
	if tmp.TargetUtilizationPercentage == nil {
		targetUtilizationPercentage_ := 70
		tmp.TargetUtilizationPercentage = &targetUtilizationPercentage_
	}
	return &tmp
}

type TargetUtilizationScaleSettingsResponse struct {
	// The maximum number of instances that the deployment can scale to. The quota will be reserved for max_instances.
	MaxInstances *int `pulumi:"maxInstances"`
	// The minimum number of instances to always be present.
	MinInstances *int `pulumi:"minInstances"`
	// The polling interval in ISO 8691 format. Only supports duration with precision as low as Seconds.
	PollingInterval *string `pulumi:"pollingInterval"`
	// Expected value is 'TargetUtilization'.
	ScaleType string `pulumi:"scaleType"`
	// Target CPU usage for the autoscaler.
	TargetUtilizationPercentage *int `pulumi:"targetUtilizationPercentage"`
}

// Defaults sets the appropriate defaults for TargetUtilizationScaleSettingsResponse
func (val *TargetUtilizationScaleSettingsResponse) Defaults() *TargetUtilizationScaleSettingsResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.MaxInstances == nil {
		maxInstances_ := 1
		tmp.MaxInstances = &maxInstances_
	}
	if tmp.MinInstances == nil {
		minInstances_ := 1
		tmp.MinInstances = &minInstances_
	}
	if tmp.PollingInterval == nil {
		pollingInterval_ := "PT1S"
		tmp.PollingInterval = &pollingInterval_
	}
	if tmp.TargetUtilizationPercentage == nil {
		targetUtilizationPercentage_ := 70
		tmp.TargetUtilizationPercentage = &targetUtilizationPercentage_
	}
	return &tmp
}

// TensorFlow distribution configuration.
type TensorFlow struct {
	// Enum to determine the job distribution type.
	// Expected value is 'TensorFlow'.
	DistributionType string `pulumi:"distributionType"`
	// Number of parameter server tasks.
	ParameterServerCount *int `pulumi:"parameterServerCount"`
	// Number of workers. If not specified, will default to the instance count.
	WorkerCount *int `pulumi:"workerCount"`
}

// Defaults sets the appropriate defaults for TensorFlow
func (val *TensorFlow) Defaults() *TensorFlow {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.ParameterServerCount == nil {
		parameterServerCount_ := 0
		tmp.ParameterServerCount = &parameterServerCount_
	}
	return &tmp
}

// TensorFlow distribution configuration.
type TensorFlowResponse struct {
	// Enum to determine the job distribution type.
	// Expected value is 'TensorFlow'.
	DistributionType string `pulumi:"distributionType"`
	// Number of parameter server tasks.
	ParameterServerCount *int `pulumi:"parameterServerCount"`
	// Number of workers. If not specified, will default to the instance count.
	WorkerCount *int `pulumi:"workerCount"`
}

// Defaults sets the appropriate defaults for TensorFlowResponse
func (val *TensorFlowResponse) Defaults() *TensorFlowResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.ParameterServerCount == nil {
		parameterServerCount_ := 0
		tmp.ParameterServerCount = &parameterServerCount_
	}
	return &tmp
}

// Text Classification task in AutoML NLP vertical.
// NLP - Natural Language Processing.
type TextClassification struct {
	// Featurization inputs needed for AutoML job.
	FeaturizationSettings *NlpVerticalFeaturizationSettings `pulumi:"featurizationSettings"`
	// Model/training parameters that will remain constant throughout training.
	FixedParameters *NlpFixedParameters `pulumi:"fixedParameters"`
	// Execution constraints for AutoMLJob.
	LimitSettings *NlpVerticalLimitSettings `pulumi:"limitSettings"`
	// Log verbosity for the job.
	LogVerbosity *string `pulumi:"logVerbosity"`
	// Primary metric for Text-Classification task.
	PrimaryMetric *string `pulumi:"primaryMetric"`
	// Search space for sampling different combinations of models and their hyperparameters.
	SearchSpace []NlpParameterSubspace `pulumi:"searchSpace"`
	// Settings for model sweeping and hyperparameter tuning.
	SweepSettings *NlpSweepSettings `pulumi:"sweepSettings"`
	// Target column name: This is prediction values column.
	// Also known as label column name in context of classification tasks.
	TargetColumnName *string `pulumi:"targetColumnName"`
	// AutoMLJob Task type.
	// Expected value is 'TextClassification'.
	TaskType string `pulumi:"taskType"`
	// [Required] Training data input.
	TrainingData MLTableJobInput `pulumi:"trainingData"`
	// Validation data inputs.
	ValidationData *MLTableJobInput `pulumi:"validationData"`
}

// Defaults sets the appropriate defaults for TextClassification
func (val *TextClassification) Defaults() *TextClassification {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.FixedParameters = tmp.FixedParameters.Defaults()

	tmp.LimitSettings = tmp.LimitSettings.Defaults()

	if tmp.LogVerbosity == nil {
		logVerbosity_ := "Info"
		tmp.LogVerbosity = &logVerbosity_
	}
	if tmp.PrimaryMetric == nil {
		primaryMetric_ := "Accuracy"
		tmp.PrimaryMetric = &primaryMetric_
	}
	tmp.TrainingData = *tmp.TrainingData.Defaults()

	tmp.ValidationData = tmp.ValidationData.Defaults()

	return &tmp
}

// Text Classification Multilabel task in AutoML NLP vertical.
// NLP - Natural Language Processing.
type TextClassificationMultilabel struct {
	// Featurization inputs needed for AutoML job.
	FeaturizationSettings *NlpVerticalFeaturizationSettings `pulumi:"featurizationSettings"`
	// Model/training parameters that will remain constant throughout training.
	FixedParameters *NlpFixedParameters `pulumi:"fixedParameters"`
	// Execution constraints for AutoMLJob.
	LimitSettings *NlpVerticalLimitSettings `pulumi:"limitSettings"`
	// Log verbosity for the job.
	LogVerbosity *string `pulumi:"logVerbosity"`
	// Search space for sampling different combinations of models and their hyperparameters.
	SearchSpace []NlpParameterSubspace `pulumi:"searchSpace"`
	// Settings for model sweeping and hyperparameter tuning.
	SweepSettings *NlpSweepSettings `pulumi:"sweepSettings"`
	// Target column name: This is prediction values column.
	// Also known as label column name in context of classification tasks.
	TargetColumnName *string `pulumi:"targetColumnName"`
	// AutoMLJob Task type.
	// Expected value is 'TextClassificationMultilabel'.
	TaskType string `pulumi:"taskType"`
	// [Required] Training data input.
	TrainingData MLTableJobInput `pulumi:"trainingData"`
	// Validation data inputs.
	ValidationData *MLTableJobInput `pulumi:"validationData"`
}

// Defaults sets the appropriate defaults for TextClassificationMultilabel
func (val *TextClassificationMultilabel) Defaults() *TextClassificationMultilabel {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.FixedParameters = tmp.FixedParameters.Defaults()

	tmp.LimitSettings = tmp.LimitSettings.Defaults()

	if tmp.LogVerbosity == nil {
		logVerbosity_ := "Info"
		tmp.LogVerbosity = &logVerbosity_
	}
	tmp.TrainingData = *tmp.TrainingData.Defaults()

	tmp.ValidationData = tmp.ValidationData.Defaults()

	return &tmp
}

// Text Classification Multilabel task in AutoML NLP vertical.
// NLP - Natural Language Processing.
type TextClassificationMultilabelResponse struct {
	// Featurization inputs needed for AutoML job.
	FeaturizationSettings *NlpVerticalFeaturizationSettingsResponse `pulumi:"featurizationSettings"`
	// Model/training parameters that will remain constant throughout training.
	FixedParameters *NlpFixedParametersResponse `pulumi:"fixedParameters"`
	// Execution constraints for AutoMLJob.
	LimitSettings *NlpVerticalLimitSettingsResponse `pulumi:"limitSettings"`
	// Log verbosity for the job.
	LogVerbosity *string `pulumi:"logVerbosity"`
	// Primary metric for Text-Classification-Multilabel task.
	// Currently only Accuracy is supported as primary metric, hence user need not set it explicitly.
	PrimaryMetric string `pulumi:"primaryMetric"`
	// Search space for sampling different combinations of models and their hyperparameters.
	SearchSpace []NlpParameterSubspaceResponse `pulumi:"searchSpace"`
	// Settings for model sweeping and hyperparameter tuning.
	SweepSettings *NlpSweepSettingsResponse `pulumi:"sweepSettings"`
	// Target column name: This is prediction values column.
	// Also known as label column name in context of classification tasks.
	TargetColumnName *string `pulumi:"targetColumnName"`
	// AutoMLJob Task type.
	// Expected value is 'TextClassificationMultilabel'.
	TaskType string `pulumi:"taskType"`
	// [Required] Training data input.
	TrainingData MLTableJobInputResponse `pulumi:"trainingData"`
	// Validation data inputs.
	ValidationData *MLTableJobInputResponse `pulumi:"validationData"`
}

// Defaults sets the appropriate defaults for TextClassificationMultilabelResponse
func (val *TextClassificationMultilabelResponse) Defaults() *TextClassificationMultilabelResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.FixedParameters = tmp.FixedParameters.Defaults()

	tmp.LimitSettings = tmp.LimitSettings.Defaults()

	if tmp.LogVerbosity == nil {
		logVerbosity_ := "Info"
		tmp.LogVerbosity = &logVerbosity_
	}
	tmp.TrainingData = *tmp.TrainingData.Defaults()

	tmp.ValidationData = tmp.ValidationData.Defaults()

	return &tmp
}

// Text Classification task in AutoML NLP vertical.
// NLP - Natural Language Processing.
type TextClassificationResponse struct {
	// Featurization inputs needed for AutoML job.
	FeaturizationSettings *NlpVerticalFeaturizationSettingsResponse `pulumi:"featurizationSettings"`
	// Model/training parameters that will remain constant throughout training.
	FixedParameters *NlpFixedParametersResponse `pulumi:"fixedParameters"`
	// Execution constraints for AutoMLJob.
	LimitSettings *NlpVerticalLimitSettingsResponse `pulumi:"limitSettings"`
	// Log verbosity for the job.
	LogVerbosity *string `pulumi:"logVerbosity"`
	// Primary metric for Text-Classification task.
	PrimaryMetric *string `pulumi:"primaryMetric"`
	// Search space for sampling different combinations of models and their hyperparameters.
	SearchSpace []NlpParameterSubspaceResponse `pulumi:"searchSpace"`
	// Settings for model sweeping and hyperparameter tuning.
	SweepSettings *NlpSweepSettingsResponse `pulumi:"sweepSettings"`
	// Target column name: This is prediction values column.
	// Also known as label column name in context of classification tasks.
	TargetColumnName *string `pulumi:"targetColumnName"`
	// AutoMLJob Task type.
	// Expected value is 'TextClassification'.
	TaskType string `pulumi:"taskType"`
	// [Required] Training data input.
	TrainingData MLTableJobInputResponse `pulumi:"trainingData"`
	// Validation data inputs.
	ValidationData *MLTableJobInputResponse `pulumi:"validationData"`
}

// Defaults sets the appropriate defaults for TextClassificationResponse
func (val *TextClassificationResponse) Defaults() *TextClassificationResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.FixedParameters = tmp.FixedParameters.Defaults()

	tmp.LimitSettings = tmp.LimitSettings.Defaults()

	if tmp.LogVerbosity == nil {
		logVerbosity_ := "Info"
		tmp.LogVerbosity = &logVerbosity_
	}
	if tmp.PrimaryMetric == nil {
		primaryMetric_ := "Accuracy"
		tmp.PrimaryMetric = &primaryMetric_
	}
	tmp.TrainingData = *tmp.TrainingData.Defaults()

	tmp.ValidationData = tmp.ValidationData.Defaults()

	return &tmp
}

// Text-NER task in AutoML NLP vertical.
// NER - Named Entity Recognition.
// NLP - Natural Language Processing.
type TextNer struct {
	// Featurization inputs needed for AutoML job.
	FeaturizationSettings *NlpVerticalFeaturizationSettings `pulumi:"featurizationSettings"`
	// Model/training parameters that will remain constant throughout training.
	FixedParameters *NlpFixedParameters `pulumi:"fixedParameters"`
	// Execution constraints for AutoMLJob.
	LimitSettings *NlpVerticalLimitSettings `pulumi:"limitSettings"`
	// Log verbosity for the job.
	LogVerbosity *string `pulumi:"logVerbosity"`
	// Search space for sampling different combinations of models and their hyperparameters.
	SearchSpace []NlpParameterSubspace `pulumi:"searchSpace"`
	// Settings for model sweeping and hyperparameter tuning.
	SweepSettings *NlpSweepSettings `pulumi:"sweepSettings"`
	// Target column name: This is prediction values column.
	// Also known as label column name in context of classification tasks.
	TargetColumnName *string `pulumi:"targetColumnName"`
	// AutoMLJob Task type.
	// Expected value is 'TextNER'.
	TaskType string `pulumi:"taskType"`
	// [Required] Training data input.
	TrainingData MLTableJobInput `pulumi:"trainingData"`
	// Validation data inputs.
	ValidationData *MLTableJobInput `pulumi:"validationData"`
}

// Defaults sets the appropriate defaults for TextNer
func (val *TextNer) Defaults() *TextNer {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.FixedParameters = tmp.FixedParameters.Defaults()

	tmp.LimitSettings = tmp.LimitSettings.Defaults()

	if tmp.LogVerbosity == nil {
		logVerbosity_ := "Info"
		tmp.LogVerbosity = &logVerbosity_
	}
	tmp.TrainingData = *tmp.TrainingData.Defaults()

	tmp.ValidationData = tmp.ValidationData.Defaults()

	return &tmp
}

// Text-NER task in AutoML NLP vertical.
// NER - Named Entity Recognition.
// NLP - Natural Language Processing.
type TextNerResponse struct {
	// Featurization inputs needed for AutoML job.
	FeaturizationSettings *NlpVerticalFeaturizationSettingsResponse `pulumi:"featurizationSettings"`
	// Model/training parameters that will remain constant throughout training.
	FixedParameters *NlpFixedParametersResponse `pulumi:"fixedParameters"`
	// Execution constraints for AutoMLJob.
	LimitSettings *NlpVerticalLimitSettingsResponse `pulumi:"limitSettings"`
	// Log verbosity for the job.
	LogVerbosity *string `pulumi:"logVerbosity"`
	// Primary metric for Text-NER task.
	// Only 'Accuracy' is supported for Text-NER, so user need not set this explicitly.
	PrimaryMetric string `pulumi:"primaryMetric"`
	// Search space for sampling different combinations of models and their hyperparameters.
	SearchSpace []NlpParameterSubspaceResponse `pulumi:"searchSpace"`
	// Settings for model sweeping and hyperparameter tuning.
	SweepSettings *NlpSweepSettingsResponse `pulumi:"sweepSettings"`
	// Target column name: This is prediction values column.
	// Also known as label column name in context of classification tasks.
	TargetColumnName *string `pulumi:"targetColumnName"`
	// AutoMLJob Task type.
	// Expected value is 'TextNER'.
	TaskType string `pulumi:"taskType"`
	// [Required] Training data input.
	TrainingData MLTableJobInputResponse `pulumi:"trainingData"`
	// Validation data inputs.
	ValidationData *MLTableJobInputResponse `pulumi:"validationData"`
}

// Defaults sets the appropriate defaults for TextNerResponse
func (val *TextNerResponse) Defaults() *TextNerResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.FixedParameters = tmp.FixedParameters.Defaults()

	tmp.LimitSettings = tmp.LimitSettings.Defaults()

	if tmp.LogVerbosity == nil {
		logVerbosity_ := "Info"
		tmp.LogVerbosity = &logVerbosity_
	}
	tmp.TrainingData = *tmp.TrainingData.Defaults()

	tmp.ValidationData = tmp.ValidationData.Defaults()

	return &tmp
}

type TmpfsOptions struct {
	// Mention the Tmpfs size
	Size *int `pulumi:"size"`
}

type TmpfsOptionsResponse struct {
	// Mention the Tmpfs size
	Size *int `pulumi:"size"`
}

type TopNFeaturesByAttribution struct {
	// Expected value is 'TopNByAttribution'.
	FilterType string `pulumi:"filterType"`
	// The number of top features to include.
	Top *int `pulumi:"top"`
}

// Defaults sets the appropriate defaults for TopNFeaturesByAttribution
func (val *TopNFeaturesByAttribution) Defaults() *TopNFeaturesByAttribution {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Top == nil {
		top_ := 10
		tmp.Top = &top_
	}
	return &tmp
}

type TopNFeaturesByAttributionResponse struct {
	// Expected value is 'TopNByAttribution'.
	FilterType string `pulumi:"filterType"`
	// The number of top features to include.
	Top *int `pulumi:"top"`
}

// Defaults sets the appropriate defaults for TopNFeaturesByAttributionResponse
func (val *TopNFeaturesByAttributionResponse) Defaults() *TopNFeaturesByAttributionResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Top == nil {
		top_ := 10
		tmp.Top = &top_
	}
	return &tmp
}

// Trial component definition.
type TrialComponent struct {
	// ARM resource ID of the code asset.
	CodeId *string `pulumi:"codeId"`
	// [Required] The command to execute on startup of the job. eg. "python train.py"
	Command string `pulumi:"command"`
	// Distribution configuration of the job. If set, this should be one of Mpi, Tensorflow, PyTorch, or null.
	Distribution interface{} `pulumi:"distribution"`
	// [Required] The ARM resource ID of the Environment specification for the job.
	EnvironmentId string `pulumi:"environmentId"`
	// Environment variables included in the job.
	EnvironmentVariables map[string]string `pulumi:"environmentVariables"`
	// Compute Resource configuration for the job.
	Resources *JobResourceConfiguration `pulumi:"resources"`
}

// Defaults sets the appropriate defaults for TrialComponent
func (val *TrialComponent) Defaults() *TrialComponent {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.Resources = tmp.Resources.Defaults()

	return &tmp
}

// Trial component definition.
type TrialComponentResponse struct {
	// ARM resource ID of the code asset.
	CodeId *string `pulumi:"codeId"`
	// [Required] The command to execute on startup of the job. eg. "python train.py"
	Command string `pulumi:"command"`
	// Distribution configuration of the job. If set, this should be one of Mpi, Tensorflow, PyTorch, or null.
	Distribution interface{} `pulumi:"distribution"`
	// [Required] The ARM resource ID of the Environment specification for the job.
	EnvironmentId string `pulumi:"environmentId"`
	// Environment variables included in the job.
	EnvironmentVariables map[string]string `pulumi:"environmentVariables"`
	// Compute Resource configuration for the job.
	Resources *JobResourceConfigurationResponse `pulumi:"resources"`
}

// Defaults sets the appropriate defaults for TrialComponentResponse
func (val *TrialComponentResponse) Defaults() *TrialComponentResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.Resources = tmp.Resources.Defaults()

	return &tmp
}

type TritonModelJobInput struct {
	// Description for the input.
	Description *string `pulumi:"description"`
	// Enum to determine the Job Input Type.
	// Expected value is 'triton_model'.
	JobInputType string `pulumi:"jobInputType"`
	// Input Asset Delivery Mode.
	Mode *string `pulumi:"mode"`
	// [Required] Input Asset URI.
	Uri string `pulumi:"uri"`
}

// Defaults sets the appropriate defaults for TritonModelJobInput
func (val *TritonModelJobInput) Defaults() *TritonModelJobInput {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Mode == nil {
		mode_ := "ReadOnlyMount"
		tmp.Mode = &mode_
	}
	return &tmp
}

type TritonModelJobInputResponse struct {
	// Description for the input.
	Description *string `pulumi:"description"`
	// Enum to determine the Job Input Type.
	// Expected value is 'triton_model'.
	JobInputType string `pulumi:"jobInputType"`
	// Input Asset Delivery Mode.
	Mode *string `pulumi:"mode"`
	// [Required] Input Asset URI.
	Uri string `pulumi:"uri"`
}

// Defaults sets the appropriate defaults for TritonModelJobInputResponse
func (val *TritonModelJobInputResponse) Defaults() *TritonModelJobInputResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Mode == nil {
		mode_ := "ReadOnlyMount"
		tmp.Mode = &mode_
	}
	return &tmp
}

type TritonModelJobOutput struct {
	// Output Asset Name.
	AssetName *string `pulumi:"assetName"`
	// Output Asset Version.
	AssetVersion *string `pulumi:"assetVersion"`
	// Auto delete setting of output data asset.
	AutoDeleteSetting *AutoDeleteSetting `pulumi:"autoDeleteSetting"`
	// Description for the output.
	Description *string `pulumi:"description"`
	// Enum to determine the Job Output Type.
	// Expected value is 'triton_model'.
	JobOutputType string `pulumi:"jobOutputType"`
	// Output Asset Delivery Mode.
	Mode *string `pulumi:"mode"`
	// Output Asset URI.
	Uri *string `pulumi:"uri"`
}

// Defaults sets the appropriate defaults for TritonModelJobOutput
func (val *TritonModelJobOutput) Defaults() *TritonModelJobOutput {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.AutoDeleteSetting = tmp.AutoDeleteSetting.Defaults()

	if tmp.Mode == nil {
		mode_ := "ReadWriteMount"
		tmp.Mode = &mode_
	}
	return &tmp
}

type TritonModelJobOutputResponse struct {
	// Output Asset Name.
	AssetName *string `pulumi:"assetName"`
	// Output Asset Version.
	AssetVersion *string `pulumi:"assetVersion"`
	// Auto delete setting of output data asset.
	AutoDeleteSetting *AutoDeleteSettingResponse `pulumi:"autoDeleteSetting"`
	// Description for the output.
	Description *string `pulumi:"description"`
	// Enum to determine the Job Output Type.
	// Expected value is 'triton_model'.
	JobOutputType string `pulumi:"jobOutputType"`
	// Output Asset Delivery Mode.
	Mode *string `pulumi:"mode"`
	// Output Asset URI.
	Uri *string `pulumi:"uri"`
}

// Defaults sets the appropriate defaults for TritonModelJobOutputResponse
func (val *TritonModelJobOutputResponse) Defaults() *TritonModelJobOutputResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.AutoDeleteSetting = tmp.AutoDeleteSetting.Defaults()

	if tmp.Mode == nil {
		mode_ := "ReadWriteMount"
		tmp.Mode = &mode_
	}
	return &tmp
}

// Defines an early termination policy that cancels a given percentage of runs at each evaluation interval.
type TruncationSelectionPolicy struct {
	// Number of intervals by which to delay the first evaluation.
	DelayEvaluation *int `pulumi:"delayEvaluation"`
	// Interval (number of runs) between policy evaluations.
	EvaluationInterval *int `pulumi:"evaluationInterval"`
	// Expected value is 'TruncationSelection'.
	PolicyType string `pulumi:"policyType"`
	// The percentage of runs to cancel at each evaluation interval.
	TruncationPercentage *int `pulumi:"truncationPercentage"`
}

// Defaults sets the appropriate defaults for TruncationSelectionPolicy
func (val *TruncationSelectionPolicy) Defaults() *TruncationSelectionPolicy {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.DelayEvaluation == nil {
		delayEvaluation_ := 0
		tmp.DelayEvaluation = &delayEvaluation_
	}
	if tmp.EvaluationInterval == nil {
		evaluationInterval_ := 0
		tmp.EvaluationInterval = &evaluationInterval_
	}
	if tmp.TruncationPercentage == nil {
		truncationPercentage_ := 0
		tmp.TruncationPercentage = &truncationPercentage_
	}
	return &tmp
}

// Defines an early termination policy that cancels a given percentage of runs at each evaluation interval.
type TruncationSelectionPolicyResponse struct {
	// Number of intervals by which to delay the first evaluation.
	DelayEvaluation *int `pulumi:"delayEvaluation"`
	// Interval (number of runs) between policy evaluations.
	EvaluationInterval *int `pulumi:"evaluationInterval"`
	// Expected value is 'TruncationSelection'.
	PolicyType string `pulumi:"policyType"`
	// The percentage of runs to cancel at each evaluation interval.
	TruncationPercentage *int `pulumi:"truncationPercentage"`
}

// Defaults sets the appropriate defaults for TruncationSelectionPolicyResponse
func (val *TruncationSelectionPolicyResponse) Defaults() *TruncationSelectionPolicyResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.DelayEvaluation == nil {
		delayEvaluation_ := 0
		tmp.DelayEvaluation = &delayEvaluation_
	}
	if tmp.EvaluationInterval == nil {
		evaluationInterval_ := 0
		tmp.EvaluationInterval = &evaluationInterval_
	}
	if tmp.TruncationPercentage == nil {
		truncationPercentage_ := 0
		tmp.TruncationPercentage = &truncationPercentage_
	}
	return &tmp
}

// uri-file data version entity
type UriFileDataVersion struct {
	// Specifies the lifecycle setting of managed data asset.
	AutoDeleteSetting *AutoDeleteSetting `pulumi:"autoDeleteSetting"`
	// Enum to determine the type of data.
	// Expected value is 'uri_file'.
	DataType string `pulumi:"dataType"`
	// [Required] Uri of the data. Example: https://go.microsoft.com/fwlink/?linkid=2202330
	DataUri string `pulumi:"dataUri"`
	// The asset description text.
	Description *string `pulumi:"description"`
	// Intellectual Property details. Used if data is an Intellectual Property.
	IntellectualProperty *IntellectualProperty `pulumi:"intellectualProperty"`
	// If the name version are system generated (anonymous registration). For types where Stage is defined, when Stage is provided it will be used to populate IsAnonymous
	IsAnonymous *bool `pulumi:"isAnonymous"`
	// Is the asset archived? For types where Stage is defined, when Stage is provided it will be used to populate IsArchived
	IsArchived *bool `pulumi:"isArchived"`
	// The asset property dictionary.
	Properties map[string]string `pulumi:"properties"`
	// Stage in the data lifecycle assigned to this data asset
	Stage *string `pulumi:"stage"`
	// Tag dictionary. Tags can be added, removed, and updated.
	Tags map[string]string `pulumi:"tags"`
}

// Defaults sets the appropriate defaults for UriFileDataVersion
func (val *UriFileDataVersion) Defaults() *UriFileDataVersion {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.AutoDeleteSetting = tmp.AutoDeleteSetting.Defaults()

	tmp.IntellectualProperty = tmp.IntellectualProperty.Defaults()

	if tmp.IsAnonymous == nil {
		isAnonymous_ := false
		tmp.IsAnonymous = &isAnonymous_
	}
	if tmp.IsArchived == nil {
		isArchived_ := false
		tmp.IsArchived = &isArchived_
	}
	return &tmp
}

// uri-file data version entity
type UriFileDataVersionResponse struct {
	// Specifies the lifecycle setting of managed data asset.
	AutoDeleteSetting *AutoDeleteSettingResponse `pulumi:"autoDeleteSetting"`
	// Enum to determine the type of data.
	// Expected value is 'uri_file'.
	DataType string `pulumi:"dataType"`
	// [Required] Uri of the data. Example: https://go.microsoft.com/fwlink/?linkid=2202330
	DataUri string `pulumi:"dataUri"`
	// The asset description text.
	Description *string `pulumi:"description"`
	// Intellectual Property details. Used if data is an Intellectual Property.
	IntellectualProperty *IntellectualPropertyResponse `pulumi:"intellectualProperty"`
	// If the name version are system generated (anonymous registration). For types where Stage is defined, when Stage is provided it will be used to populate IsAnonymous
	IsAnonymous *bool `pulumi:"isAnonymous"`
	// Is the asset archived? For types where Stage is defined, when Stage is provided it will be used to populate IsArchived
	IsArchived *bool `pulumi:"isArchived"`
	// The asset property dictionary.
	Properties map[string]string `pulumi:"properties"`
	// Stage in the data lifecycle assigned to this data asset
	Stage *string `pulumi:"stage"`
	// Tag dictionary. Tags can be added, removed, and updated.
	Tags map[string]string `pulumi:"tags"`
}

// Defaults sets the appropriate defaults for UriFileDataVersionResponse
func (val *UriFileDataVersionResponse) Defaults() *UriFileDataVersionResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.AutoDeleteSetting = tmp.AutoDeleteSetting.Defaults()

	tmp.IntellectualProperty = tmp.IntellectualProperty.Defaults()

	if tmp.IsAnonymous == nil {
		isAnonymous_ := false
		tmp.IsAnonymous = &isAnonymous_
	}
	if tmp.IsArchived == nil {
		isArchived_ := false
		tmp.IsArchived = &isArchived_
	}
	return &tmp
}

type UriFileJobInput struct {
	// Description for the input.
	Description *string `pulumi:"description"`
	// Enum to determine the Job Input Type.
	// Expected value is 'uri_file'.
	JobInputType string `pulumi:"jobInputType"`
	// Input Asset Delivery Mode.
	Mode *string `pulumi:"mode"`
	// [Required] Input Asset URI.
	Uri string `pulumi:"uri"`
}

// Defaults sets the appropriate defaults for UriFileJobInput
func (val *UriFileJobInput) Defaults() *UriFileJobInput {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Mode == nil {
		mode_ := "ReadOnlyMount"
		tmp.Mode = &mode_
	}
	return &tmp
}

type UriFileJobInputResponse struct {
	// Description for the input.
	Description *string `pulumi:"description"`
	// Enum to determine the Job Input Type.
	// Expected value is 'uri_file'.
	JobInputType string `pulumi:"jobInputType"`
	// Input Asset Delivery Mode.
	Mode *string `pulumi:"mode"`
	// [Required] Input Asset URI.
	Uri string `pulumi:"uri"`
}

// Defaults sets the appropriate defaults for UriFileJobInputResponse
func (val *UriFileJobInputResponse) Defaults() *UriFileJobInputResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Mode == nil {
		mode_ := "ReadOnlyMount"
		tmp.Mode = &mode_
	}
	return &tmp
}

type UriFileJobOutput struct {
	// Output Asset Name.
	AssetName *string `pulumi:"assetName"`
	// Output Asset Version.
	AssetVersion *string `pulumi:"assetVersion"`
	// Auto delete setting of output data asset.
	AutoDeleteSetting *AutoDeleteSetting `pulumi:"autoDeleteSetting"`
	// Description for the output.
	Description *string `pulumi:"description"`
	// Enum to determine the Job Output Type.
	// Expected value is 'uri_file'.
	JobOutputType string `pulumi:"jobOutputType"`
	// Output Asset Delivery Mode.
	Mode *string `pulumi:"mode"`
	// Output Asset URI.
	Uri *string `pulumi:"uri"`
}

// Defaults sets the appropriate defaults for UriFileJobOutput
func (val *UriFileJobOutput) Defaults() *UriFileJobOutput {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.AutoDeleteSetting = tmp.AutoDeleteSetting.Defaults()

	if tmp.Mode == nil {
		mode_ := "ReadWriteMount"
		tmp.Mode = &mode_
	}
	return &tmp
}

type UriFileJobOutputResponse struct {
	// Output Asset Name.
	AssetName *string `pulumi:"assetName"`
	// Output Asset Version.
	AssetVersion *string `pulumi:"assetVersion"`
	// Auto delete setting of output data asset.
	AutoDeleteSetting *AutoDeleteSettingResponse `pulumi:"autoDeleteSetting"`
	// Description for the output.
	Description *string `pulumi:"description"`
	// Enum to determine the Job Output Type.
	// Expected value is 'uri_file'.
	JobOutputType string `pulumi:"jobOutputType"`
	// Output Asset Delivery Mode.
	Mode *string `pulumi:"mode"`
	// Output Asset URI.
	Uri *string `pulumi:"uri"`
}

// Defaults sets the appropriate defaults for UriFileJobOutputResponse
func (val *UriFileJobOutputResponse) Defaults() *UriFileJobOutputResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.AutoDeleteSetting = tmp.AutoDeleteSetting.Defaults()

	if tmp.Mode == nil {
		mode_ := "ReadWriteMount"
		tmp.Mode = &mode_
	}
	return &tmp
}

// uri-folder data version entity
type UriFolderDataVersion struct {
	// Specifies the lifecycle setting of managed data asset.
	AutoDeleteSetting *AutoDeleteSetting `pulumi:"autoDeleteSetting"`
	// Enum to determine the type of data.
	// Expected value is 'uri_folder'.
	DataType string `pulumi:"dataType"`
	// [Required] Uri of the data. Example: https://go.microsoft.com/fwlink/?linkid=2202330
	DataUri string `pulumi:"dataUri"`
	// The asset description text.
	Description *string `pulumi:"description"`
	// Intellectual Property details. Used if data is an Intellectual Property.
	IntellectualProperty *IntellectualProperty `pulumi:"intellectualProperty"`
	// If the name version are system generated (anonymous registration). For types where Stage is defined, when Stage is provided it will be used to populate IsAnonymous
	IsAnonymous *bool `pulumi:"isAnonymous"`
	// Is the asset archived? For types where Stage is defined, when Stage is provided it will be used to populate IsArchived
	IsArchived *bool `pulumi:"isArchived"`
	// The asset property dictionary.
	Properties map[string]string `pulumi:"properties"`
	// Stage in the data lifecycle assigned to this data asset
	Stage *string `pulumi:"stage"`
	// Tag dictionary. Tags can be added, removed, and updated.
	Tags map[string]string `pulumi:"tags"`
}

// Defaults sets the appropriate defaults for UriFolderDataVersion
func (val *UriFolderDataVersion) Defaults() *UriFolderDataVersion {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.AutoDeleteSetting = tmp.AutoDeleteSetting.Defaults()

	tmp.IntellectualProperty = tmp.IntellectualProperty.Defaults()

	if tmp.IsAnonymous == nil {
		isAnonymous_ := false
		tmp.IsAnonymous = &isAnonymous_
	}
	if tmp.IsArchived == nil {
		isArchived_ := false
		tmp.IsArchived = &isArchived_
	}
	return &tmp
}

// uri-folder data version entity
type UriFolderDataVersionResponse struct {
	// Specifies the lifecycle setting of managed data asset.
	AutoDeleteSetting *AutoDeleteSettingResponse `pulumi:"autoDeleteSetting"`
	// Enum to determine the type of data.
	// Expected value is 'uri_folder'.
	DataType string `pulumi:"dataType"`
	// [Required] Uri of the data. Example: https://go.microsoft.com/fwlink/?linkid=2202330
	DataUri string `pulumi:"dataUri"`
	// The asset description text.
	Description *string `pulumi:"description"`
	// Intellectual Property details. Used if data is an Intellectual Property.
	IntellectualProperty *IntellectualPropertyResponse `pulumi:"intellectualProperty"`
	// If the name version are system generated (anonymous registration). For types where Stage is defined, when Stage is provided it will be used to populate IsAnonymous
	IsAnonymous *bool `pulumi:"isAnonymous"`
	// Is the asset archived? For types where Stage is defined, when Stage is provided it will be used to populate IsArchived
	IsArchived *bool `pulumi:"isArchived"`
	// The asset property dictionary.
	Properties map[string]string `pulumi:"properties"`
	// Stage in the data lifecycle assigned to this data asset
	Stage *string `pulumi:"stage"`
	// Tag dictionary. Tags can be added, removed, and updated.
	Tags map[string]string `pulumi:"tags"`
}

// Defaults sets the appropriate defaults for UriFolderDataVersionResponse
func (val *UriFolderDataVersionResponse) Defaults() *UriFolderDataVersionResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.AutoDeleteSetting = tmp.AutoDeleteSetting.Defaults()

	tmp.IntellectualProperty = tmp.IntellectualProperty.Defaults()

	if tmp.IsAnonymous == nil {
		isAnonymous_ := false
		tmp.IsAnonymous = &isAnonymous_
	}
	if tmp.IsArchived == nil {
		isArchived_ := false
		tmp.IsArchived = &isArchived_
	}
	return &tmp
}

type UriFolderJobInput struct {
	// Description for the input.
	Description *string `pulumi:"description"`
	// Enum to determine the Job Input Type.
	// Expected value is 'uri_folder'.
	JobInputType string `pulumi:"jobInputType"`
	// Input Asset Delivery Mode.
	Mode *string `pulumi:"mode"`
	// [Required] Input Asset URI.
	Uri string `pulumi:"uri"`
}

// Defaults sets the appropriate defaults for UriFolderJobInput
func (val *UriFolderJobInput) Defaults() *UriFolderJobInput {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Mode == nil {
		mode_ := "ReadOnlyMount"
		tmp.Mode = &mode_
	}
	return &tmp
}

type UriFolderJobInputResponse struct {
	// Description for the input.
	Description *string `pulumi:"description"`
	// Enum to determine the Job Input Type.
	// Expected value is 'uri_folder'.
	JobInputType string `pulumi:"jobInputType"`
	// Input Asset Delivery Mode.
	Mode *string `pulumi:"mode"`
	// [Required] Input Asset URI.
	Uri string `pulumi:"uri"`
}

// Defaults sets the appropriate defaults for UriFolderJobInputResponse
func (val *UriFolderJobInputResponse) Defaults() *UriFolderJobInputResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Mode == nil {
		mode_ := "ReadOnlyMount"
		tmp.Mode = &mode_
	}
	return &tmp
}

type UriFolderJobOutput struct {
	// Output Asset Name.
	AssetName *string `pulumi:"assetName"`
	// Output Asset Version.
	AssetVersion *string `pulumi:"assetVersion"`
	// Auto delete setting of output data asset.
	AutoDeleteSetting *AutoDeleteSetting `pulumi:"autoDeleteSetting"`
	// Description for the output.
	Description *string `pulumi:"description"`
	// Enum to determine the Job Output Type.
	// Expected value is 'uri_folder'.
	JobOutputType string `pulumi:"jobOutputType"`
	// Output Asset Delivery Mode.
	Mode *string `pulumi:"mode"`
	// Output Asset URI.
	Uri *string `pulumi:"uri"`
}

// Defaults sets the appropriate defaults for UriFolderJobOutput
func (val *UriFolderJobOutput) Defaults() *UriFolderJobOutput {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.AutoDeleteSetting = tmp.AutoDeleteSetting.Defaults()

	if tmp.Mode == nil {
		mode_ := "ReadWriteMount"
		tmp.Mode = &mode_
	}
	return &tmp
}

type UriFolderJobOutputResponse struct {
	// Output Asset Name.
	AssetName *string `pulumi:"assetName"`
	// Output Asset Version.
	AssetVersion *string `pulumi:"assetVersion"`
	// Auto delete setting of output data asset.
	AutoDeleteSetting *AutoDeleteSettingResponse `pulumi:"autoDeleteSetting"`
	// Description for the output.
	Description *string `pulumi:"description"`
	// Enum to determine the Job Output Type.
	// Expected value is 'uri_folder'.
	JobOutputType string `pulumi:"jobOutputType"`
	// Output Asset Delivery Mode.
	Mode *string `pulumi:"mode"`
	// Output Asset URI.
	Uri *string `pulumi:"uri"`
}

// Defaults sets the appropriate defaults for UriFolderJobOutputResponse
func (val *UriFolderJobOutputResponse) Defaults() *UriFolderJobOutputResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.AutoDeleteSetting = tmp.AutoDeleteSetting.Defaults()

	if tmp.Mode == nil {
		mode_ := "ReadWriteMount"
		tmp.Mode = &mode_
	}
	return &tmp
}

// Settings for user account that gets created on each on the nodes of a compute.
type UserAccountCredentials struct {
	// Name of the administrator user account which can be used to SSH to nodes.
	AdminUserName string `pulumi:"adminUserName"`
	// Password of the administrator user account.
	AdminUserPassword *string `pulumi:"adminUserPassword"`
	// SSH public key of the administrator user account.
	AdminUserSshPublicKey *string `pulumi:"adminUserSshPublicKey"`
}

// Settings for user account that gets created on each on the nodes of a compute.
type UserAccountCredentialsResponse struct {
	// Name of the administrator user account which can be used to SSH to nodes.
	AdminUserName string `pulumi:"adminUserName"`
	// Password of the administrator user account.
	AdminUserPassword *string `pulumi:"adminUserPassword"`
	// SSH public key of the administrator user account.
	AdminUserSshPublicKey *string `pulumi:"adminUserSshPublicKey"`
}

// User assigned identity properties
type UserAssignedIdentityResponse struct {
	// The client ID of the assigned identity.
	ClientId string `pulumi:"clientId"`
	// The principal ID of the assigned identity.
	PrincipalId string `pulumi:"principalId"`
}

// User assigned identity properties
type UserAssignedIdentityResponseOutput struct{ *pulumi.OutputState }

func (UserAssignedIdentityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserAssignedIdentityResponse)(nil)).Elem()
}

func (o UserAssignedIdentityResponseOutput) ToUserAssignedIdentityResponseOutput() UserAssignedIdentityResponseOutput {
	return o
}

func (o UserAssignedIdentityResponseOutput) ToUserAssignedIdentityResponseOutputWithContext(ctx context.Context) UserAssignedIdentityResponseOutput {
	return o
}

func (o UserAssignedIdentityResponseOutput) ToOutput(ctx context.Context) pulumix.Output[UserAssignedIdentityResponse] {
	return pulumix.Output[UserAssignedIdentityResponse]{
		OutputState: o.OutputState,
	}
}

// The client ID of the assigned identity.
func (o UserAssignedIdentityResponseOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v UserAssignedIdentityResponse) string { return v.ClientId }).(pulumi.StringOutput)
}

// The principal ID of the assigned identity.
func (o UserAssignedIdentityResponseOutput) PrincipalId() pulumi.StringOutput {
	return o.ApplyT(func(v UserAssignedIdentityResponse) string { return v.PrincipalId }).(pulumi.StringOutput)
}

type UserAssignedIdentityResponseMapOutput struct{ *pulumi.OutputState }

func (UserAssignedIdentityResponseMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]UserAssignedIdentityResponse)(nil)).Elem()
}

func (o UserAssignedIdentityResponseMapOutput) ToUserAssignedIdentityResponseMapOutput() UserAssignedIdentityResponseMapOutput {
	return o
}

func (o UserAssignedIdentityResponseMapOutput) ToUserAssignedIdentityResponseMapOutputWithContext(ctx context.Context) UserAssignedIdentityResponseMapOutput {
	return o
}

func (o UserAssignedIdentityResponseMapOutput) ToOutput(ctx context.Context) pulumix.Output[map[string]UserAssignedIdentityResponse] {
	return pulumix.Output[map[string]UserAssignedIdentityResponse]{
		OutputState: o.OutputState,
	}
}

func (o UserAssignedIdentityResponseMapOutput) MapIndex(k pulumi.StringInput) UserAssignedIdentityResponseOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) UserAssignedIdentityResponse {
		return vs[0].(map[string]UserAssignedIdentityResponse)[vs[1].(string)]
	}).(UserAssignedIdentityResponseOutput)
}

type UserCreatedAcrAccount struct {
	// ARM ResourceId of a resource
	ArmResourceId *ArmResourceId `pulumi:"armResourceId"`
}

// UserCreatedAcrAccountInput is an input type that accepts UserCreatedAcrAccountArgs and UserCreatedAcrAccountOutput values.
// You can construct a concrete instance of `UserCreatedAcrAccountInput` via:
//
//	UserCreatedAcrAccountArgs{...}
type UserCreatedAcrAccountInput interface {
	pulumi.Input

	ToUserCreatedAcrAccountOutput() UserCreatedAcrAccountOutput
	ToUserCreatedAcrAccountOutputWithContext(context.Context) UserCreatedAcrAccountOutput
}

type UserCreatedAcrAccountArgs struct {
	// ARM ResourceId of a resource
	ArmResourceId ArmResourceIdPtrInput `pulumi:"armResourceId"`
}

func (UserCreatedAcrAccountArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserCreatedAcrAccount)(nil)).Elem()
}

func (i UserCreatedAcrAccountArgs) ToUserCreatedAcrAccountOutput() UserCreatedAcrAccountOutput {
	return i.ToUserCreatedAcrAccountOutputWithContext(context.Background())
}

func (i UserCreatedAcrAccountArgs) ToUserCreatedAcrAccountOutputWithContext(ctx context.Context) UserCreatedAcrAccountOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserCreatedAcrAccountOutput)
}

func (i UserCreatedAcrAccountArgs) ToOutput(ctx context.Context) pulumix.Output[UserCreatedAcrAccount] {
	return pulumix.Output[UserCreatedAcrAccount]{
		OutputState: i.ToUserCreatedAcrAccountOutputWithContext(ctx).OutputState,
	}
}

func (i UserCreatedAcrAccountArgs) ToUserCreatedAcrAccountPtrOutput() UserCreatedAcrAccountPtrOutput {
	return i.ToUserCreatedAcrAccountPtrOutputWithContext(context.Background())
}

func (i UserCreatedAcrAccountArgs) ToUserCreatedAcrAccountPtrOutputWithContext(ctx context.Context) UserCreatedAcrAccountPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserCreatedAcrAccountOutput).ToUserCreatedAcrAccountPtrOutputWithContext(ctx)
}

// UserCreatedAcrAccountPtrInput is an input type that accepts UserCreatedAcrAccountArgs, UserCreatedAcrAccountPtr and UserCreatedAcrAccountPtrOutput values.
// You can construct a concrete instance of `UserCreatedAcrAccountPtrInput` via:
//
//	        UserCreatedAcrAccountArgs{...}
//
//	or:
//
//	        nil
type UserCreatedAcrAccountPtrInput interface {
	pulumi.Input

	ToUserCreatedAcrAccountPtrOutput() UserCreatedAcrAccountPtrOutput
	ToUserCreatedAcrAccountPtrOutputWithContext(context.Context) UserCreatedAcrAccountPtrOutput
}

type userCreatedAcrAccountPtrType UserCreatedAcrAccountArgs

func UserCreatedAcrAccountPtr(v *UserCreatedAcrAccountArgs) UserCreatedAcrAccountPtrInput {
	return (*userCreatedAcrAccountPtrType)(v)
}

func (*userCreatedAcrAccountPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UserCreatedAcrAccount)(nil)).Elem()
}

func (i *userCreatedAcrAccountPtrType) ToUserCreatedAcrAccountPtrOutput() UserCreatedAcrAccountPtrOutput {
	return i.ToUserCreatedAcrAccountPtrOutputWithContext(context.Background())
}

func (i *userCreatedAcrAccountPtrType) ToUserCreatedAcrAccountPtrOutputWithContext(ctx context.Context) UserCreatedAcrAccountPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserCreatedAcrAccountPtrOutput)
}

func (i *userCreatedAcrAccountPtrType) ToOutput(ctx context.Context) pulumix.Output[*UserCreatedAcrAccount] {
	return pulumix.Output[*UserCreatedAcrAccount]{
		OutputState: i.ToUserCreatedAcrAccountPtrOutputWithContext(ctx).OutputState,
	}
}

type UserCreatedAcrAccountOutput struct{ *pulumi.OutputState }

func (UserCreatedAcrAccountOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserCreatedAcrAccount)(nil)).Elem()
}

func (o UserCreatedAcrAccountOutput) ToUserCreatedAcrAccountOutput() UserCreatedAcrAccountOutput {
	return o
}

func (o UserCreatedAcrAccountOutput) ToUserCreatedAcrAccountOutputWithContext(ctx context.Context) UserCreatedAcrAccountOutput {
	return o
}

func (o UserCreatedAcrAccountOutput) ToUserCreatedAcrAccountPtrOutput() UserCreatedAcrAccountPtrOutput {
	return o.ToUserCreatedAcrAccountPtrOutputWithContext(context.Background())
}

func (o UserCreatedAcrAccountOutput) ToUserCreatedAcrAccountPtrOutputWithContext(ctx context.Context) UserCreatedAcrAccountPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v UserCreatedAcrAccount) *UserCreatedAcrAccount {
		return &v
	}).(UserCreatedAcrAccountPtrOutput)
}

func (o UserCreatedAcrAccountOutput) ToOutput(ctx context.Context) pulumix.Output[UserCreatedAcrAccount] {
	return pulumix.Output[UserCreatedAcrAccount]{
		OutputState: o.OutputState,
	}
}

// ARM ResourceId of a resource
func (o UserCreatedAcrAccountOutput) ArmResourceId() ArmResourceIdPtrOutput {
	return o.ApplyT(func(v UserCreatedAcrAccount) *ArmResourceId { return v.ArmResourceId }).(ArmResourceIdPtrOutput)
}

type UserCreatedAcrAccountPtrOutput struct{ *pulumi.OutputState }

func (UserCreatedAcrAccountPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserCreatedAcrAccount)(nil)).Elem()
}

func (o UserCreatedAcrAccountPtrOutput) ToUserCreatedAcrAccountPtrOutput() UserCreatedAcrAccountPtrOutput {
	return o
}

func (o UserCreatedAcrAccountPtrOutput) ToUserCreatedAcrAccountPtrOutputWithContext(ctx context.Context) UserCreatedAcrAccountPtrOutput {
	return o
}

func (o UserCreatedAcrAccountPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*UserCreatedAcrAccount] {
	return pulumix.Output[*UserCreatedAcrAccount]{
		OutputState: o.OutputState,
	}
}

func (o UserCreatedAcrAccountPtrOutput) Elem() UserCreatedAcrAccountOutput {
	return o.ApplyT(func(v *UserCreatedAcrAccount) UserCreatedAcrAccount {
		if v != nil {
			return *v
		}
		var ret UserCreatedAcrAccount
		return ret
	}).(UserCreatedAcrAccountOutput)
}

// ARM ResourceId of a resource
func (o UserCreatedAcrAccountPtrOutput) ArmResourceId() ArmResourceIdPtrOutput {
	return o.ApplyT(func(v *UserCreatedAcrAccount) *ArmResourceId {
		if v == nil {
			return nil
		}
		return v.ArmResourceId
	}).(ArmResourceIdPtrOutput)
}

type UserCreatedAcrAccountResponse struct {
	// ARM ResourceId of a resource
	ArmResourceId *ArmResourceIdResponse `pulumi:"armResourceId"`
}

type UserCreatedAcrAccountResponseOutput struct{ *pulumi.OutputState }

func (UserCreatedAcrAccountResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserCreatedAcrAccountResponse)(nil)).Elem()
}

func (o UserCreatedAcrAccountResponseOutput) ToUserCreatedAcrAccountResponseOutput() UserCreatedAcrAccountResponseOutput {
	return o
}

func (o UserCreatedAcrAccountResponseOutput) ToUserCreatedAcrAccountResponseOutputWithContext(ctx context.Context) UserCreatedAcrAccountResponseOutput {
	return o
}

func (o UserCreatedAcrAccountResponseOutput) ToOutput(ctx context.Context) pulumix.Output[UserCreatedAcrAccountResponse] {
	return pulumix.Output[UserCreatedAcrAccountResponse]{
		OutputState: o.OutputState,
	}
}

// ARM ResourceId of a resource
func (o UserCreatedAcrAccountResponseOutput) ArmResourceId() ArmResourceIdResponsePtrOutput {
	return o.ApplyT(func(v UserCreatedAcrAccountResponse) *ArmResourceIdResponse { return v.ArmResourceId }).(ArmResourceIdResponsePtrOutput)
}

type UserCreatedAcrAccountResponsePtrOutput struct{ *pulumi.OutputState }

func (UserCreatedAcrAccountResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserCreatedAcrAccountResponse)(nil)).Elem()
}

func (o UserCreatedAcrAccountResponsePtrOutput) ToUserCreatedAcrAccountResponsePtrOutput() UserCreatedAcrAccountResponsePtrOutput {
	return o
}

func (o UserCreatedAcrAccountResponsePtrOutput) ToUserCreatedAcrAccountResponsePtrOutputWithContext(ctx context.Context) UserCreatedAcrAccountResponsePtrOutput {
	return o
}

func (o UserCreatedAcrAccountResponsePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*UserCreatedAcrAccountResponse] {
	return pulumix.Output[*UserCreatedAcrAccountResponse]{
		OutputState: o.OutputState,
	}
}

func (o UserCreatedAcrAccountResponsePtrOutput) Elem() UserCreatedAcrAccountResponseOutput {
	return o.ApplyT(func(v *UserCreatedAcrAccountResponse) UserCreatedAcrAccountResponse {
		if v != nil {
			return *v
		}
		var ret UserCreatedAcrAccountResponse
		return ret
	}).(UserCreatedAcrAccountResponseOutput)
}

// ARM ResourceId of a resource
func (o UserCreatedAcrAccountResponsePtrOutput) ArmResourceId() ArmResourceIdResponsePtrOutput {
	return o.ApplyT(func(v *UserCreatedAcrAccountResponse) *ArmResourceIdResponse {
		if v == nil {
			return nil
		}
		return v.ArmResourceId
	}).(ArmResourceIdResponsePtrOutput)
}

type UserCreatedStorageAccount struct {
	// ARM ResourceId of a resource
	ArmResourceId *ArmResourceId `pulumi:"armResourceId"`
}

// UserCreatedStorageAccountInput is an input type that accepts UserCreatedStorageAccountArgs and UserCreatedStorageAccountOutput values.
// You can construct a concrete instance of `UserCreatedStorageAccountInput` via:
//
//	UserCreatedStorageAccountArgs{...}
type UserCreatedStorageAccountInput interface {
	pulumi.Input

	ToUserCreatedStorageAccountOutput() UserCreatedStorageAccountOutput
	ToUserCreatedStorageAccountOutputWithContext(context.Context) UserCreatedStorageAccountOutput
}

type UserCreatedStorageAccountArgs struct {
	// ARM ResourceId of a resource
	ArmResourceId ArmResourceIdPtrInput `pulumi:"armResourceId"`
}

func (UserCreatedStorageAccountArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserCreatedStorageAccount)(nil)).Elem()
}

func (i UserCreatedStorageAccountArgs) ToUserCreatedStorageAccountOutput() UserCreatedStorageAccountOutput {
	return i.ToUserCreatedStorageAccountOutputWithContext(context.Background())
}

func (i UserCreatedStorageAccountArgs) ToUserCreatedStorageAccountOutputWithContext(ctx context.Context) UserCreatedStorageAccountOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserCreatedStorageAccountOutput)
}

func (i UserCreatedStorageAccountArgs) ToOutput(ctx context.Context) pulumix.Output[UserCreatedStorageAccount] {
	return pulumix.Output[UserCreatedStorageAccount]{
		OutputState: i.ToUserCreatedStorageAccountOutputWithContext(ctx).OutputState,
	}
}

func (i UserCreatedStorageAccountArgs) ToUserCreatedStorageAccountPtrOutput() UserCreatedStorageAccountPtrOutput {
	return i.ToUserCreatedStorageAccountPtrOutputWithContext(context.Background())
}

func (i UserCreatedStorageAccountArgs) ToUserCreatedStorageAccountPtrOutputWithContext(ctx context.Context) UserCreatedStorageAccountPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserCreatedStorageAccountOutput).ToUserCreatedStorageAccountPtrOutputWithContext(ctx)
}

// UserCreatedStorageAccountPtrInput is an input type that accepts UserCreatedStorageAccountArgs, UserCreatedStorageAccountPtr and UserCreatedStorageAccountPtrOutput values.
// You can construct a concrete instance of `UserCreatedStorageAccountPtrInput` via:
//
//	        UserCreatedStorageAccountArgs{...}
//
//	or:
//
//	        nil
type UserCreatedStorageAccountPtrInput interface {
	pulumi.Input

	ToUserCreatedStorageAccountPtrOutput() UserCreatedStorageAccountPtrOutput
	ToUserCreatedStorageAccountPtrOutputWithContext(context.Context) UserCreatedStorageAccountPtrOutput
}

type userCreatedStorageAccountPtrType UserCreatedStorageAccountArgs

func UserCreatedStorageAccountPtr(v *UserCreatedStorageAccountArgs) UserCreatedStorageAccountPtrInput {
	return (*userCreatedStorageAccountPtrType)(v)
}

func (*userCreatedStorageAccountPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UserCreatedStorageAccount)(nil)).Elem()
}

func (i *userCreatedStorageAccountPtrType) ToUserCreatedStorageAccountPtrOutput() UserCreatedStorageAccountPtrOutput {
	return i.ToUserCreatedStorageAccountPtrOutputWithContext(context.Background())
}

func (i *userCreatedStorageAccountPtrType) ToUserCreatedStorageAccountPtrOutputWithContext(ctx context.Context) UserCreatedStorageAccountPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserCreatedStorageAccountPtrOutput)
}

func (i *userCreatedStorageAccountPtrType) ToOutput(ctx context.Context) pulumix.Output[*UserCreatedStorageAccount] {
	return pulumix.Output[*UserCreatedStorageAccount]{
		OutputState: i.ToUserCreatedStorageAccountPtrOutputWithContext(ctx).OutputState,
	}
}

type UserCreatedStorageAccountOutput struct{ *pulumi.OutputState }

func (UserCreatedStorageAccountOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserCreatedStorageAccount)(nil)).Elem()
}

func (o UserCreatedStorageAccountOutput) ToUserCreatedStorageAccountOutput() UserCreatedStorageAccountOutput {
	return o
}

func (o UserCreatedStorageAccountOutput) ToUserCreatedStorageAccountOutputWithContext(ctx context.Context) UserCreatedStorageAccountOutput {
	return o
}

func (o UserCreatedStorageAccountOutput) ToUserCreatedStorageAccountPtrOutput() UserCreatedStorageAccountPtrOutput {
	return o.ToUserCreatedStorageAccountPtrOutputWithContext(context.Background())
}

func (o UserCreatedStorageAccountOutput) ToUserCreatedStorageAccountPtrOutputWithContext(ctx context.Context) UserCreatedStorageAccountPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v UserCreatedStorageAccount) *UserCreatedStorageAccount {
		return &v
	}).(UserCreatedStorageAccountPtrOutput)
}

func (o UserCreatedStorageAccountOutput) ToOutput(ctx context.Context) pulumix.Output[UserCreatedStorageAccount] {
	return pulumix.Output[UserCreatedStorageAccount]{
		OutputState: o.OutputState,
	}
}

// ARM ResourceId of a resource
func (o UserCreatedStorageAccountOutput) ArmResourceId() ArmResourceIdPtrOutput {
	return o.ApplyT(func(v UserCreatedStorageAccount) *ArmResourceId { return v.ArmResourceId }).(ArmResourceIdPtrOutput)
}

type UserCreatedStorageAccountPtrOutput struct{ *pulumi.OutputState }

func (UserCreatedStorageAccountPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserCreatedStorageAccount)(nil)).Elem()
}

func (o UserCreatedStorageAccountPtrOutput) ToUserCreatedStorageAccountPtrOutput() UserCreatedStorageAccountPtrOutput {
	return o
}

func (o UserCreatedStorageAccountPtrOutput) ToUserCreatedStorageAccountPtrOutputWithContext(ctx context.Context) UserCreatedStorageAccountPtrOutput {
	return o
}

func (o UserCreatedStorageAccountPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*UserCreatedStorageAccount] {
	return pulumix.Output[*UserCreatedStorageAccount]{
		OutputState: o.OutputState,
	}
}

func (o UserCreatedStorageAccountPtrOutput) Elem() UserCreatedStorageAccountOutput {
	return o.ApplyT(func(v *UserCreatedStorageAccount) UserCreatedStorageAccount {
		if v != nil {
			return *v
		}
		var ret UserCreatedStorageAccount
		return ret
	}).(UserCreatedStorageAccountOutput)
}

// ARM ResourceId of a resource
func (o UserCreatedStorageAccountPtrOutput) ArmResourceId() ArmResourceIdPtrOutput {
	return o.ApplyT(func(v *UserCreatedStorageAccount) *ArmResourceId {
		if v == nil {
			return nil
		}
		return v.ArmResourceId
	}).(ArmResourceIdPtrOutput)
}

type UserCreatedStorageAccountResponse struct {
	// ARM ResourceId of a resource
	ArmResourceId *ArmResourceIdResponse `pulumi:"armResourceId"`
}

type UserCreatedStorageAccountResponseOutput struct{ *pulumi.OutputState }

func (UserCreatedStorageAccountResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserCreatedStorageAccountResponse)(nil)).Elem()
}

func (o UserCreatedStorageAccountResponseOutput) ToUserCreatedStorageAccountResponseOutput() UserCreatedStorageAccountResponseOutput {
	return o
}

func (o UserCreatedStorageAccountResponseOutput) ToUserCreatedStorageAccountResponseOutputWithContext(ctx context.Context) UserCreatedStorageAccountResponseOutput {
	return o
}

func (o UserCreatedStorageAccountResponseOutput) ToOutput(ctx context.Context) pulumix.Output[UserCreatedStorageAccountResponse] {
	return pulumix.Output[UserCreatedStorageAccountResponse]{
		OutputState: o.OutputState,
	}
}

// ARM ResourceId of a resource
func (o UserCreatedStorageAccountResponseOutput) ArmResourceId() ArmResourceIdResponsePtrOutput {
	return o.ApplyT(func(v UserCreatedStorageAccountResponse) *ArmResourceIdResponse { return v.ArmResourceId }).(ArmResourceIdResponsePtrOutput)
}

type UserCreatedStorageAccountResponsePtrOutput struct{ *pulumi.OutputState }

func (UserCreatedStorageAccountResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserCreatedStorageAccountResponse)(nil)).Elem()
}

func (o UserCreatedStorageAccountResponsePtrOutput) ToUserCreatedStorageAccountResponsePtrOutput() UserCreatedStorageAccountResponsePtrOutput {
	return o
}

func (o UserCreatedStorageAccountResponsePtrOutput) ToUserCreatedStorageAccountResponsePtrOutputWithContext(ctx context.Context) UserCreatedStorageAccountResponsePtrOutput {
	return o
}

func (o UserCreatedStorageAccountResponsePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*UserCreatedStorageAccountResponse] {
	return pulumix.Output[*UserCreatedStorageAccountResponse]{
		OutputState: o.OutputState,
	}
}

func (o UserCreatedStorageAccountResponsePtrOutput) Elem() UserCreatedStorageAccountResponseOutput {
	return o.ApplyT(func(v *UserCreatedStorageAccountResponse) UserCreatedStorageAccountResponse {
		if v != nil {
			return *v
		}
		var ret UserCreatedStorageAccountResponse
		return ret
	}).(UserCreatedStorageAccountResponseOutput)
}

// ARM ResourceId of a resource
func (o UserCreatedStorageAccountResponsePtrOutput) ArmResourceId() ArmResourceIdResponsePtrOutput {
	return o.ApplyT(func(v *UserCreatedStorageAccountResponse) *ArmResourceIdResponse {
		if v == nil {
			return nil
		}
		return v.ArmResourceId
	}).(ArmResourceIdResponsePtrOutput)
}

// User identity configuration.
type UserIdentity struct {
	// Enum to determine identity framework.
	// Expected value is 'UserIdentity'.
	IdentityType string `pulumi:"identityType"`
}

// User identity configuration.
type UserIdentityResponse struct {
	// Enum to determine identity framework.
	// Expected value is 'UserIdentity'.
	IdentityType string `pulumi:"identityType"`
}

type UsernamePasswordAuthTypeWorkspaceConnectionProperties struct {
	// Authentication type of the connection target
	// Expected value is 'UsernamePassword'.
	AuthType string `pulumi:"authType"`
	// Category of the connection
	Category    *string                              `pulumi:"category"`
	Credentials *WorkspaceConnectionUsernamePassword `pulumi:"credentials"`
	ExpiryTime  *string                              `pulumi:"expiryTime"`
	Target      *string                              `pulumi:"target"`
	// Value details of the workspace connection.
	Value *string `pulumi:"value"`
	// format for the workspace connection value
	ValueFormat *string `pulumi:"valueFormat"`
}

type UsernamePasswordAuthTypeWorkspaceConnectionPropertiesResponse struct {
	// Authentication type of the connection target
	// Expected value is 'UsernamePassword'.
	AuthType string `pulumi:"authType"`
	// Category of the connection
	Category    *string                                      `pulumi:"category"`
	Credentials *WorkspaceConnectionUsernamePasswordResponse `pulumi:"credentials"`
	ExpiryTime  *string                                      `pulumi:"expiryTime"`
	Target      *string                                      `pulumi:"target"`
	// Value details of the workspace connection.
	Value *string `pulumi:"value"`
	// format for the workspace connection value
	ValueFormat *string `pulumi:"valueFormat"`
}

// A Machine Learning compute based on Azure Virtual Machines.
type VirtualMachine struct {
	// Location for the underlying compute
	ComputeLocation *string `pulumi:"computeLocation"`
	// The type of compute
	// Expected value is 'VirtualMachine'.
	ComputeType string `pulumi:"computeType"`
	// The description of the Machine Learning compute.
	Description *string `pulumi:"description"`
	// Opt-out of local authentication and ensure customers can use only MSI and AAD exclusively for authentication.
	DisableLocalAuth *bool                           `pulumi:"disableLocalAuth"`
	Properties       *VirtualMachineSchemaProperties `pulumi:"properties"`
	// ARM resource id of the underlying compute
	ResourceId *string `pulumi:"resourceId"`
}

// Virtual Machine image for Windows AML Compute
type VirtualMachineImage struct {
	// Virtual Machine image path
	Id string `pulumi:"id"`
}

// Virtual Machine image for Windows AML Compute
type VirtualMachineImageResponse struct {
	// Virtual Machine image path
	Id string `pulumi:"id"`
}

// A Machine Learning compute based on Azure Virtual Machines.
type VirtualMachineResponse struct {
	// Location for the underlying compute
	ComputeLocation *string `pulumi:"computeLocation"`
	// The type of compute
	// Expected value is 'VirtualMachine'.
	ComputeType string `pulumi:"computeType"`
	// The time at which the compute was created.
	CreatedOn string `pulumi:"createdOn"`
	// The description of the Machine Learning compute.
	Description *string `pulumi:"description"`
	// Opt-out of local authentication and ensure customers can use only MSI and AAD exclusively for authentication.
	DisableLocalAuth *bool `pulumi:"disableLocalAuth"`
	// Indicating whether the compute was provisioned by user and brought from outside if true, or machine learning service provisioned it if false.
	IsAttachedCompute bool `pulumi:"isAttachedCompute"`
	// The time at which the compute was last modified.
	ModifiedOn string                                  `pulumi:"modifiedOn"`
	Properties *VirtualMachineSchemaResponseProperties `pulumi:"properties"`
	// Errors during provisioning
	ProvisioningErrors []ErrorResponseResponse `pulumi:"provisioningErrors"`
	// The provision state of the cluster. Valid values are Unknown, Updating, Provisioning, Succeeded, and Failed.
	ProvisioningState string `pulumi:"provisioningState"`
	// ARM resource id of the underlying compute
	ResourceId *string `pulumi:"resourceId"`
}

type VirtualMachineSchemaProperties struct {
	// Public IP address of the virtual machine.
	Address *string `pulumi:"address"`
	// Admin credentials for virtual machine
	AdministratorAccount *VirtualMachineSshCredentials `pulumi:"administratorAccount"`
	// Indicates whether this compute will be used for running notebooks.
	IsNotebookInstanceCompute *bool `pulumi:"isNotebookInstanceCompute"`
	// Notebook server port open for ssh connections.
	NotebookServerPort *int `pulumi:"notebookServerPort"`
	// Port open for ssh connections.
	SshPort *int `pulumi:"sshPort"`
	// Virtual Machine size
	VirtualMachineSize *string `pulumi:"virtualMachineSize"`
}

type VirtualMachineSchemaResponseProperties struct {
	// Public IP address of the virtual machine.
	Address *string `pulumi:"address"`
	// Admin credentials for virtual machine
	AdministratorAccount *VirtualMachineSshCredentialsResponse `pulumi:"administratorAccount"`
	// Indicates whether this compute will be used for running notebooks.
	IsNotebookInstanceCompute *bool `pulumi:"isNotebookInstanceCompute"`
	// Notebook server port open for ssh connections.
	NotebookServerPort *int `pulumi:"notebookServerPort"`
	// Port open for ssh connections.
	SshPort *int `pulumi:"sshPort"`
	// Virtual Machine size
	VirtualMachineSize *string `pulumi:"virtualMachineSize"`
}

// Admin credentials for virtual machine
type VirtualMachineSshCredentials struct {
	// Password of admin account
	Password *string `pulumi:"password"`
	// Private key data
	PrivateKeyData *string `pulumi:"privateKeyData"`
	// Public key data
	PublicKeyData *string `pulumi:"publicKeyData"`
	// Username of admin account
	Username *string `pulumi:"username"`
}

// Admin credentials for virtual machine
type VirtualMachineSshCredentialsResponse struct {
	// Password of admin account
	Password *string `pulumi:"password"`
	// Private key data
	PrivateKeyData *string `pulumi:"privateKeyData"`
	// Public key data
	PublicKeyData *string `pulumi:"publicKeyData"`
	// Username of admin account
	Username *string `pulumi:"username"`
}

type VolumeDefinition struct {
	// Bind Options of the mount
	Bind *BindOptions `pulumi:"bind"`
	// Consistency of the volume
	Consistency *string `pulumi:"consistency"`
	// Indicate whether to mount volume as readOnly. Default value for this is false.
	ReadOnly *bool `pulumi:"readOnly"`
	// Source of the mount. For bind mounts this is the host path.
	Source *string `pulumi:"source"`
	// Target of the mount. For bind mounts this is the path in the container.
	Target *string `pulumi:"target"`
	// tmpfs option of the mount
	Tmpfs *TmpfsOptions `pulumi:"tmpfs"`
	// Type of Volume Definition. Possible Values: bind,volume,tmpfs,npipe
	Type *string `pulumi:"type"`
	// Volume Options of the mount
	Volume *VolumeOptions `pulumi:"volume"`
}

// Defaults sets the appropriate defaults for VolumeDefinition
func (val *VolumeDefinition) Defaults() *VolumeDefinition {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Type == nil {
		type_ := "bind"
		tmp.Type = &type_
	}
	return &tmp
}

type VolumeDefinitionResponse struct {
	// Bind Options of the mount
	Bind *BindOptionsResponse `pulumi:"bind"`
	// Consistency of the volume
	Consistency *string `pulumi:"consistency"`
	// Indicate whether to mount volume as readOnly. Default value for this is false.
	ReadOnly *bool `pulumi:"readOnly"`
	// Source of the mount. For bind mounts this is the host path.
	Source *string `pulumi:"source"`
	// Target of the mount. For bind mounts this is the path in the container.
	Target *string `pulumi:"target"`
	// tmpfs option of the mount
	Tmpfs *TmpfsOptionsResponse `pulumi:"tmpfs"`
	// Type of Volume Definition. Possible Values: bind,volume,tmpfs,npipe
	Type *string `pulumi:"type"`
	// Volume Options of the mount
	Volume *VolumeOptionsResponse `pulumi:"volume"`
}

// Defaults sets the appropriate defaults for VolumeDefinitionResponse
func (val *VolumeDefinitionResponse) Defaults() *VolumeDefinitionResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Type == nil {
		type_ := "bind"
		tmp.Type = &type_
	}
	return &tmp
}

type VolumeOptions struct {
	// Indicate whether volume is nocopy
	Nocopy *bool `pulumi:"nocopy"`
}

type VolumeOptionsResponse struct {
	// Indicate whether volume is nocopy
	Nocopy *bool `pulumi:"nocopy"`
}

type WorkspaceConnectionAccessKey struct {
	AccessKeyId     *string `pulumi:"accessKeyId"`
	SecretAccessKey *string `pulumi:"secretAccessKey"`
}

type WorkspaceConnectionAccessKeyResponse struct {
	AccessKeyId     *string `pulumi:"accessKeyId"`
	SecretAccessKey *string `pulumi:"secretAccessKey"`
}

type WorkspaceConnectionManagedIdentity struct {
	ClientId   *string `pulumi:"clientId"`
	ResourceId *string `pulumi:"resourceId"`
}

type WorkspaceConnectionManagedIdentityResponse struct {
	ClientId   *string `pulumi:"clientId"`
	ResourceId *string `pulumi:"resourceId"`
}

type WorkspaceConnectionPersonalAccessToken struct {
	Pat *string `pulumi:"pat"`
}

type WorkspaceConnectionPersonalAccessTokenResponse struct {
	Pat *string `pulumi:"pat"`
}

type WorkspaceConnectionServicePrincipal struct {
	ClientId     *string `pulumi:"clientId"`
	ClientSecret *string `pulumi:"clientSecret"`
	TenantId     *string `pulumi:"tenantId"`
}

type WorkspaceConnectionServicePrincipalResponse struct {
	ClientId     *string `pulumi:"clientId"`
	ClientSecret *string `pulumi:"clientSecret"`
	TenantId     *string `pulumi:"tenantId"`
}

type WorkspaceConnectionSharedAccessSignature struct {
	Sas *string `pulumi:"sas"`
}

type WorkspaceConnectionSharedAccessSignatureResponse struct {
	Sas *string `pulumi:"sas"`
}

type WorkspaceConnectionUsernamePassword struct {
	Password *string `pulumi:"password"`
	Username *string `pulumi:"username"`
}

type WorkspaceConnectionUsernamePasswordResponse struct {
	Password *string `pulumi:"password"`
	Username *string `pulumi:"username"`
}

func init() {
	pulumi.RegisterOutputType(SharedPrivateLinkResourceOutput{})
	pulumi.RegisterOutputType(SharedPrivateLinkResourceArrayOutput{})
	pulumi.RegisterOutputType(SharedPrivateLinkResourceResponseOutput{})
	pulumi.RegisterOutputType(SharedPrivateLinkResourceResponseArrayOutput{})
	pulumi.RegisterOutputType(SkuOutput{})
	pulumi.RegisterOutputType(SkuPtrOutput{})
	pulumi.RegisterOutputType(SkuResponseOutput{})
	pulumi.RegisterOutputType(SkuResponsePtrOutput{})
	pulumi.RegisterOutputType(StatusMessageResponseOutput{})
	pulumi.RegisterOutputType(StatusMessageResponseArrayOutput{})
	pulumi.RegisterOutputType(StorageAccountDetailsOutput{})
	pulumi.RegisterOutputType(StorageAccountDetailsArrayOutput{})
	pulumi.RegisterOutputType(StorageAccountDetailsResponseOutput{})
	pulumi.RegisterOutputType(StorageAccountDetailsResponseArrayOutput{})
	pulumi.RegisterOutputType(SystemCreatedAcrAccountOutput{})
	pulumi.RegisterOutputType(SystemCreatedAcrAccountPtrOutput{})
	pulumi.RegisterOutputType(SystemCreatedAcrAccountResponseOutput{})
	pulumi.RegisterOutputType(SystemCreatedAcrAccountResponsePtrOutput{})
	pulumi.RegisterOutputType(SystemCreatedStorageAccountOutput{})
	pulumi.RegisterOutputType(SystemCreatedStorageAccountPtrOutput{})
	pulumi.RegisterOutputType(SystemCreatedStorageAccountResponseOutput{})
	pulumi.RegisterOutputType(SystemCreatedStorageAccountResponsePtrOutput{})
	pulumi.RegisterOutputType(SystemDataResponseOutput{})
	pulumi.RegisterOutputType(UserAssignedIdentityResponseOutput{})
	pulumi.RegisterOutputType(UserAssignedIdentityResponseMapOutput{})
	pulumi.RegisterOutputType(UserCreatedAcrAccountOutput{})
	pulumi.RegisterOutputType(UserCreatedAcrAccountPtrOutput{})
	pulumi.RegisterOutputType(UserCreatedAcrAccountResponseOutput{})
	pulumi.RegisterOutputType(UserCreatedAcrAccountResponsePtrOutput{})
	pulumi.RegisterOutputType(UserCreatedStorageAccountOutput{})
	pulumi.RegisterOutputType(UserCreatedStorageAccountPtrOutput{})
	pulumi.RegisterOutputType(UserCreatedStorageAccountResponseOutput{})
	pulumi.RegisterOutputType(UserCreatedStorageAccountResponsePtrOutput{})
}
