// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package machinelearningservices

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure-native-sdk/v3/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Azure Resource Manager resource envelope.
//
// Uses Azure REST API version 2025-09-01. In version 2.x of the Azure Native provider, it used API version 2023-04-01.
//
// Other available API versions: 2022-10-01-preview, 2022-12-01-preview, 2023-02-01-preview, 2023-04-01, 2023-04-01-preview, 2023-06-01-preview, 2023-08-01-preview, 2023-10-01, 2024-01-01-preview, 2024-04-01, 2024-07-01-preview, 2024-10-01, 2024-10-01-preview, 2025-01-01-preview, 2025-04-01, 2025-04-01-preview, 2025-06-01, 2025-07-01-preview. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native machinelearningservices [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
type RegistryEnvironmentVersion struct {
	pulumi.CustomResourceState

	// The Azure API version of the resource.
	AzureApiVersion pulumi.StringOutput `pulumi:"azureApiVersion"`
	// [Required] Additional attributes of the entity.
	EnvironmentVersionProperties EnvironmentVersionResponseOutput `pulumi:"environmentVersionProperties"`
	// The name of the resource
	Name pulumi.StringOutput `pulumi:"name"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponseOutput `pulumi:"systemData"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewRegistryEnvironmentVersion registers a new resource with the given unique name, arguments, and options.
func NewRegistryEnvironmentVersion(ctx *pulumi.Context,
	name string, args *RegistryEnvironmentVersionArgs, opts ...pulumi.ResourceOption) (*RegistryEnvironmentVersion, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.EnvironmentName == nil {
		return nil, errors.New("invalid value for required argument 'EnvironmentName'")
	}
	if args.EnvironmentVersionProperties == nil {
		return nil, errors.New("invalid value for required argument 'EnvironmentVersionProperties'")
	}
	if args.RegistryName == nil {
		return nil, errors.New("invalid value for required argument 'RegistryName'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	args.EnvironmentVersionProperties = args.EnvironmentVersionProperties.ToEnvironmentVersionTypeOutput().ApplyT(func(v EnvironmentVersionType) EnvironmentVersionType { return *v.Defaults() }).(EnvironmentVersionTypeOutput)
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:machinelearningservices/v20221001preview:RegistryEnvironmentVersion"),
		},
		{
			Type: pulumi.String("azure-native:machinelearningservices/v20221201preview:RegistryEnvironmentVersion"),
		},
		{
			Type: pulumi.String("azure-native:machinelearningservices/v20230201preview:RegistryEnvironmentVersion"),
		},
		{
			Type: pulumi.String("azure-native:machinelearningservices/v20230401:RegistryEnvironmentVersion"),
		},
		{
			Type: pulumi.String("azure-native:machinelearningservices/v20230401preview:RegistryEnvironmentVersion"),
		},
		{
			Type: pulumi.String("azure-native:machinelearningservices/v20230601preview:RegistryEnvironmentVersion"),
		},
		{
			Type: pulumi.String("azure-native:machinelearningservices/v20230801preview:RegistryEnvironmentVersion"),
		},
		{
			Type: pulumi.String("azure-native:machinelearningservices/v20231001:RegistryEnvironmentVersion"),
		},
		{
			Type: pulumi.String("azure-native:machinelearningservices/v20240101preview:RegistryEnvironmentVersion"),
		},
		{
			Type: pulumi.String("azure-native:machinelearningservices/v20240401:RegistryEnvironmentVersion"),
		},
		{
			Type: pulumi.String("azure-native:machinelearningservices/v20240401preview:RegistryEnvironmentVersion"),
		},
		{
			Type: pulumi.String("azure-native:machinelearningservices/v20240701preview:RegistryEnvironmentVersion"),
		},
		{
			Type: pulumi.String("azure-native:machinelearningservices/v20241001:RegistryEnvironmentVersion"),
		},
		{
			Type: pulumi.String("azure-native:machinelearningservices/v20241001preview:RegistryEnvironmentVersion"),
		},
		{
			Type: pulumi.String("azure-native:machinelearningservices/v20250101preview:RegistryEnvironmentVersion"),
		},
		{
			Type: pulumi.String("azure-native:machinelearningservices/v20250401:RegistryEnvironmentVersion"),
		},
		{
			Type: pulumi.String("azure-native:machinelearningservices/v20250401preview:RegistryEnvironmentVersion"),
		},
		{
			Type: pulumi.String("azure-native:machinelearningservices/v20250601:RegistryEnvironmentVersion"),
		},
		{
			Type: pulumi.String("azure-native:machinelearningservices/v20250701preview:RegistryEnvironmentVersion"),
		},
		{
			Type: pulumi.String("azure-native:machinelearningservices/v20250901:RegistryEnvironmentVersion"),
		},
	})
	opts = append(opts, aliases)
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource RegistryEnvironmentVersion
	err := ctx.RegisterResource("azure-native:machinelearningservices:RegistryEnvironmentVersion", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetRegistryEnvironmentVersion gets an existing RegistryEnvironmentVersion resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetRegistryEnvironmentVersion(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *RegistryEnvironmentVersionState, opts ...pulumi.ResourceOption) (*RegistryEnvironmentVersion, error) {
	var resource RegistryEnvironmentVersion
	err := ctx.ReadResource("azure-native:machinelearningservices:RegistryEnvironmentVersion", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering RegistryEnvironmentVersion resources.
type registryEnvironmentVersionState struct {
}

type RegistryEnvironmentVersionState struct {
}

func (RegistryEnvironmentVersionState) ElementType() reflect.Type {
	return reflect.TypeOf((*registryEnvironmentVersionState)(nil)).Elem()
}

type registryEnvironmentVersionArgs struct {
	// Container name.
	EnvironmentName string `pulumi:"environmentName"`
	// [Required] Additional attributes of the entity.
	EnvironmentVersionProperties EnvironmentVersionType `pulumi:"environmentVersionProperties"`
	// Name of Azure Machine Learning registry. This is case-insensitive
	RegistryName string `pulumi:"registryName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Version identifier.
	Version *string `pulumi:"version"`
}

// The set of arguments for constructing a RegistryEnvironmentVersion resource.
type RegistryEnvironmentVersionArgs struct {
	// Container name.
	EnvironmentName pulumi.StringInput
	// [Required] Additional attributes of the entity.
	EnvironmentVersionProperties EnvironmentVersionTypeInput
	// Name of Azure Machine Learning registry. This is case-insensitive
	RegistryName pulumi.StringInput
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput
	// Version identifier.
	Version pulumi.StringPtrInput
}

func (RegistryEnvironmentVersionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*registryEnvironmentVersionArgs)(nil)).Elem()
}

type RegistryEnvironmentVersionInput interface {
	pulumi.Input

	ToRegistryEnvironmentVersionOutput() RegistryEnvironmentVersionOutput
	ToRegistryEnvironmentVersionOutputWithContext(ctx context.Context) RegistryEnvironmentVersionOutput
}

func (*RegistryEnvironmentVersion) ElementType() reflect.Type {
	return reflect.TypeOf((**RegistryEnvironmentVersion)(nil)).Elem()
}

func (i *RegistryEnvironmentVersion) ToRegistryEnvironmentVersionOutput() RegistryEnvironmentVersionOutput {
	return i.ToRegistryEnvironmentVersionOutputWithContext(context.Background())
}

func (i *RegistryEnvironmentVersion) ToRegistryEnvironmentVersionOutputWithContext(ctx context.Context) RegistryEnvironmentVersionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegistryEnvironmentVersionOutput)
}

type RegistryEnvironmentVersionOutput struct{ *pulumi.OutputState }

func (RegistryEnvironmentVersionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RegistryEnvironmentVersion)(nil)).Elem()
}

func (o RegistryEnvironmentVersionOutput) ToRegistryEnvironmentVersionOutput() RegistryEnvironmentVersionOutput {
	return o
}

func (o RegistryEnvironmentVersionOutput) ToRegistryEnvironmentVersionOutputWithContext(ctx context.Context) RegistryEnvironmentVersionOutput {
	return o
}

// The Azure API version of the resource.
func (o RegistryEnvironmentVersionOutput) AzureApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *RegistryEnvironmentVersion) pulumi.StringOutput { return v.AzureApiVersion }).(pulumi.StringOutput)
}

// [Required] Additional attributes of the entity.
func (o RegistryEnvironmentVersionOutput) EnvironmentVersionProperties() EnvironmentVersionResponseOutput {
	return o.ApplyT(func(v *RegistryEnvironmentVersion) EnvironmentVersionResponseOutput {
		return v.EnvironmentVersionProperties
	}).(EnvironmentVersionResponseOutput)
}

// The name of the resource
func (o RegistryEnvironmentVersionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *RegistryEnvironmentVersion) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o RegistryEnvironmentVersionOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v *RegistryEnvironmentVersion) SystemDataResponseOutput { return v.SystemData }).(SystemDataResponseOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o RegistryEnvironmentVersionOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *RegistryEnvironmentVersion) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(RegistryEnvironmentVersionOutput{})
}
