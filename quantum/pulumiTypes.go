// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package quantum

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = utilities.GetEnvOrDefault

// Azure quantum workspace Api key details.
type ApiKeyResponse struct {
	// The creation time of the api key.
	CreatedAt *string `pulumi:"createdAt"`
	// The Api key.
	Key string `pulumi:"key"`
}

// Azure quantum workspace Api key details.
type ApiKeyResponseOutput struct{ *pulumi.OutputState }

func (ApiKeyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiKeyResponse)(nil)).Elem()
}

func (o ApiKeyResponseOutput) ToApiKeyResponseOutput() ApiKeyResponseOutput {
	return o
}

func (o ApiKeyResponseOutput) ToApiKeyResponseOutputWithContext(ctx context.Context) ApiKeyResponseOutput {
	return o
}

// The creation time of the api key.
func (o ApiKeyResponseOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiKeyResponse) *string { return v.CreatedAt }).(pulumi.StringPtrOutput)
}

// The Api key.
func (o ApiKeyResponseOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v ApiKeyResponse) string { return v.Key }).(pulumi.StringOutput)
}

type ApiKeyResponsePtrOutput struct{ *pulumi.OutputState }

func (ApiKeyResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiKeyResponse)(nil)).Elem()
}

func (o ApiKeyResponsePtrOutput) ToApiKeyResponsePtrOutput() ApiKeyResponsePtrOutput {
	return o
}

func (o ApiKeyResponsePtrOutput) ToApiKeyResponsePtrOutputWithContext(ctx context.Context) ApiKeyResponsePtrOutput {
	return o
}

func (o ApiKeyResponsePtrOutput) Elem() ApiKeyResponseOutput {
	return o.ApplyT(func(v *ApiKeyResponse) ApiKeyResponse {
		if v != nil {
			return *v
		}
		var ret ApiKeyResponse
		return ret
	}).(ApiKeyResponseOutput)
}

// The creation time of the api key.
func (o ApiKeyResponsePtrOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiKeyResponse) *string {
		if v == nil {
			return nil
		}
		return v.CreatedAt
	}).(pulumi.StringPtrOutput)
}

// The Api key.
func (o ApiKeyResponsePtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiKeyResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Key
	}).(pulumi.StringPtrOutput)
}

// Managed service identity (system assigned and/or user assigned identities)
type ManagedServiceIdentity struct {
	// Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
	Type string `pulumi:"type"`
	// The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.
	UserAssignedIdentities []string `pulumi:"userAssignedIdentities"`
}

// ManagedServiceIdentityInput is an input type that accepts ManagedServiceIdentityArgs and ManagedServiceIdentityOutput values.
// You can construct a concrete instance of `ManagedServiceIdentityInput` via:
//
//	ManagedServiceIdentityArgs{...}
type ManagedServiceIdentityInput interface {
	pulumi.Input

	ToManagedServiceIdentityOutput() ManagedServiceIdentityOutput
	ToManagedServiceIdentityOutputWithContext(context.Context) ManagedServiceIdentityOutput
}

// Managed service identity (system assigned and/or user assigned identities)
type ManagedServiceIdentityArgs struct {
	// Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
	Type pulumi.StringInput `pulumi:"type"`
	// The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.
	UserAssignedIdentities pulumi.StringArrayInput `pulumi:"userAssignedIdentities"`
}

func (ManagedServiceIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedServiceIdentity)(nil)).Elem()
}

func (i ManagedServiceIdentityArgs) ToManagedServiceIdentityOutput() ManagedServiceIdentityOutput {
	return i.ToManagedServiceIdentityOutputWithContext(context.Background())
}

func (i ManagedServiceIdentityArgs) ToManagedServiceIdentityOutputWithContext(ctx context.Context) ManagedServiceIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedServiceIdentityOutput)
}

func (i ManagedServiceIdentityArgs) ToManagedServiceIdentityPtrOutput() ManagedServiceIdentityPtrOutput {
	return i.ToManagedServiceIdentityPtrOutputWithContext(context.Background())
}

func (i ManagedServiceIdentityArgs) ToManagedServiceIdentityPtrOutputWithContext(ctx context.Context) ManagedServiceIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedServiceIdentityOutput).ToManagedServiceIdentityPtrOutputWithContext(ctx)
}

// ManagedServiceIdentityPtrInput is an input type that accepts ManagedServiceIdentityArgs, ManagedServiceIdentityPtr and ManagedServiceIdentityPtrOutput values.
// You can construct a concrete instance of `ManagedServiceIdentityPtrInput` via:
//
//	        ManagedServiceIdentityArgs{...}
//
//	or:
//
//	        nil
type ManagedServiceIdentityPtrInput interface {
	pulumi.Input

	ToManagedServiceIdentityPtrOutput() ManagedServiceIdentityPtrOutput
	ToManagedServiceIdentityPtrOutputWithContext(context.Context) ManagedServiceIdentityPtrOutput
}

type managedServiceIdentityPtrType ManagedServiceIdentityArgs

func ManagedServiceIdentityPtr(v *ManagedServiceIdentityArgs) ManagedServiceIdentityPtrInput {
	return (*managedServiceIdentityPtrType)(v)
}

func (*managedServiceIdentityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedServiceIdentity)(nil)).Elem()
}

func (i *managedServiceIdentityPtrType) ToManagedServiceIdentityPtrOutput() ManagedServiceIdentityPtrOutput {
	return i.ToManagedServiceIdentityPtrOutputWithContext(context.Background())
}

func (i *managedServiceIdentityPtrType) ToManagedServiceIdentityPtrOutputWithContext(ctx context.Context) ManagedServiceIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedServiceIdentityPtrOutput)
}

// Managed service identity (system assigned and/or user assigned identities)
type ManagedServiceIdentityOutput struct{ *pulumi.OutputState }

func (ManagedServiceIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedServiceIdentity)(nil)).Elem()
}

func (o ManagedServiceIdentityOutput) ToManagedServiceIdentityOutput() ManagedServiceIdentityOutput {
	return o
}

func (o ManagedServiceIdentityOutput) ToManagedServiceIdentityOutputWithContext(ctx context.Context) ManagedServiceIdentityOutput {
	return o
}

func (o ManagedServiceIdentityOutput) ToManagedServiceIdentityPtrOutput() ManagedServiceIdentityPtrOutput {
	return o.ToManagedServiceIdentityPtrOutputWithContext(context.Background())
}

func (o ManagedServiceIdentityOutput) ToManagedServiceIdentityPtrOutputWithContext(ctx context.Context) ManagedServiceIdentityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ManagedServiceIdentity) *ManagedServiceIdentity {
		return &v
	}).(ManagedServiceIdentityPtrOutput)
}

// Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
func (o ManagedServiceIdentityOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedServiceIdentity) string { return v.Type }).(pulumi.StringOutput)
}

// The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.
func (o ManagedServiceIdentityOutput) UserAssignedIdentities() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ManagedServiceIdentity) []string { return v.UserAssignedIdentities }).(pulumi.StringArrayOutput)
}

type ManagedServiceIdentityPtrOutput struct{ *pulumi.OutputState }

func (ManagedServiceIdentityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedServiceIdentity)(nil)).Elem()
}

func (o ManagedServiceIdentityPtrOutput) ToManagedServiceIdentityPtrOutput() ManagedServiceIdentityPtrOutput {
	return o
}

func (o ManagedServiceIdentityPtrOutput) ToManagedServiceIdentityPtrOutputWithContext(ctx context.Context) ManagedServiceIdentityPtrOutput {
	return o
}

func (o ManagedServiceIdentityPtrOutput) Elem() ManagedServiceIdentityOutput {
	return o.ApplyT(func(v *ManagedServiceIdentity) ManagedServiceIdentity {
		if v != nil {
			return *v
		}
		var ret ManagedServiceIdentity
		return ret
	}).(ManagedServiceIdentityOutput)
}

// Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
func (o ManagedServiceIdentityPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedServiceIdentity) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.
func (o ManagedServiceIdentityPtrOutput) UserAssignedIdentities() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ManagedServiceIdentity) []string {
		if v == nil {
			return nil
		}
		return v.UserAssignedIdentities
	}).(pulumi.StringArrayOutput)
}

// Managed service identity (system assigned and/or user assigned identities)
type ManagedServiceIdentityResponse struct {
	// The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.
	PrincipalId string `pulumi:"principalId"`
	// The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.
	TenantId string `pulumi:"tenantId"`
	// Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
	Type string `pulumi:"type"`
	// The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.
	UserAssignedIdentities map[string]UserAssignedIdentityResponse `pulumi:"userAssignedIdentities"`
}

// Managed service identity (system assigned and/or user assigned identities)
type ManagedServiceIdentityResponseOutput struct{ *pulumi.OutputState }

func (ManagedServiceIdentityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedServiceIdentityResponse)(nil)).Elem()
}

func (o ManagedServiceIdentityResponseOutput) ToManagedServiceIdentityResponseOutput() ManagedServiceIdentityResponseOutput {
	return o
}

func (o ManagedServiceIdentityResponseOutput) ToManagedServiceIdentityResponseOutputWithContext(ctx context.Context) ManagedServiceIdentityResponseOutput {
	return o
}

// The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.
func (o ManagedServiceIdentityResponseOutput) PrincipalId() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedServiceIdentityResponse) string { return v.PrincipalId }).(pulumi.StringOutput)
}

// The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.
func (o ManagedServiceIdentityResponseOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedServiceIdentityResponse) string { return v.TenantId }).(pulumi.StringOutput)
}

// Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
func (o ManagedServiceIdentityResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedServiceIdentityResponse) string { return v.Type }).(pulumi.StringOutput)
}

// The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.
func (o ManagedServiceIdentityResponseOutput) UserAssignedIdentities() UserAssignedIdentityResponseMapOutput {
	return o.ApplyT(func(v ManagedServiceIdentityResponse) map[string]UserAssignedIdentityResponse {
		return v.UserAssignedIdentities
	}).(UserAssignedIdentityResponseMapOutput)
}

type ManagedServiceIdentityResponsePtrOutput struct{ *pulumi.OutputState }

func (ManagedServiceIdentityResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedServiceIdentityResponse)(nil)).Elem()
}

func (o ManagedServiceIdentityResponsePtrOutput) ToManagedServiceIdentityResponsePtrOutput() ManagedServiceIdentityResponsePtrOutput {
	return o
}

func (o ManagedServiceIdentityResponsePtrOutput) ToManagedServiceIdentityResponsePtrOutputWithContext(ctx context.Context) ManagedServiceIdentityResponsePtrOutput {
	return o
}

func (o ManagedServiceIdentityResponsePtrOutput) Elem() ManagedServiceIdentityResponseOutput {
	return o.ApplyT(func(v *ManagedServiceIdentityResponse) ManagedServiceIdentityResponse {
		if v != nil {
			return *v
		}
		var ret ManagedServiceIdentityResponse
		return ret
	}).(ManagedServiceIdentityResponseOutput)
}

// The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.
func (o ManagedServiceIdentityResponsePtrOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedServiceIdentityResponse) *string {
		if v == nil {
			return nil
		}
		return &v.PrincipalId
	}).(pulumi.StringPtrOutput)
}

// The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.
func (o ManagedServiceIdentityResponsePtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedServiceIdentityResponse) *string {
		if v == nil {
			return nil
		}
		return &v.TenantId
	}).(pulumi.StringPtrOutput)
}

// Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
func (o ManagedServiceIdentityResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedServiceIdentityResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.
func (o ManagedServiceIdentityResponsePtrOutput) UserAssignedIdentities() UserAssignedIdentityResponseMapOutput {
	return o.ApplyT(func(v *ManagedServiceIdentityResponse) map[string]UserAssignedIdentityResponse {
		if v == nil {
			return nil
		}
		return v.UserAssignedIdentities
	}).(UserAssignedIdentityResponseMapOutput)
}

// Information about a Provider. A Provider is an entity that offers Targets to run Azure Quantum Jobs.
type Provider struct {
	// The provider's marketplace application display name.
	ApplicationName *string `pulumi:"applicationName"`
	// A Uri identifying the specific instance of this provider.
	InstanceUri *string `pulumi:"instanceUri"`
	// Unique id of this provider.
	ProviderId *string `pulumi:"providerId"`
	// The sku associated with pricing information for this provider.
	ProviderSku *string `pulumi:"providerSku"`
	// Provisioning status field
	ProvisioningState *string `pulumi:"provisioningState"`
	// Id to track resource usage for the provider.
	ResourceUsageId *string `pulumi:"resourceUsageId"`
}

// ProviderInput is an input type that accepts ProviderArgs and ProviderOutput values.
// You can construct a concrete instance of `ProviderInput` via:
//
//	ProviderArgs{...}
type ProviderInput interface {
	pulumi.Input

	ToProviderOutput() ProviderOutput
	ToProviderOutputWithContext(context.Context) ProviderOutput
}

// Information about a Provider. A Provider is an entity that offers Targets to run Azure Quantum Jobs.
type ProviderArgs struct {
	// The provider's marketplace application display name.
	ApplicationName pulumi.StringPtrInput `pulumi:"applicationName"`
	// A Uri identifying the specific instance of this provider.
	InstanceUri pulumi.StringPtrInput `pulumi:"instanceUri"`
	// Unique id of this provider.
	ProviderId pulumi.StringPtrInput `pulumi:"providerId"`
	// The sku associated with pricing information for this provider.
	ProviderSku pulumi.StringPtrInput `pulumi:"providerSku"`
	// Provisioning status field
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// Id to track resource usage for the provider.
	ResourceUsageId pulumi.StringPtrInput `pulumi:"resourceUsageId"`
}

func (ProviderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Provider)(nil)).Elem()
}

func (i ProviderArgs) ToProviderOutput() ProviderOutput {
	return i.ToProviderOutputWithContext(context.Background())
}

func (i ProviderArgs) ToProviderOutputWithContext(ctx context.Context) ProviderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderOutput)
}

// ProviderArrayInput is an input type that accepts ProviderArray and ProviderArrayOutput values.
// You can construct a concrete instance of `ProviderArrayInput` via:
//
//	ProviderArray{ ProviderArgs{...} }
type ProviderArrayInput interface {
	pulumi.Input

	ToProviderArrayOutput() ProviderArrayOutput
	ToProviderArrayOutputWithContext(context.Context) ProviderArrayOutput
}

type ProviderArray []ProviderInput

func (ProviderArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Provider)(nil)).Elem()
}

func (i ProviderArray) ToProviderArrayOutput() ProviderArrayOutput {
	return i.ToProviderArrayOutputWithContext(context.Background())
}

func (i ProviderArray) ToProviderArrayOutputWithContext(ctx context.Context) ProviderArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderArrayOutput)
}

// Information about a Provider. A Provider is an entity that offers Targets to run Azure Quantum Jobs.
type ProviderOutput struct{ *pulumi.OutputState }

func (ProviderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Provider)(nil)).Elem()
}

func (o ProviderOutput) ToProviderOutput() ProviderOutput {
	return o
}

func (o ProviderOutput) ToProviderOutputWithContext(ctx context.Context) ProviderOutput {
	return o
}

// The provider's marketplace application display name.
func (o ProviderOutput) ApplicationName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Provider) *string { return v.ApplicationName }).(pulumi.StringPtrOutput)
}

// A Uri identifying the specific instance of this provider.
func (o ProviderOutput) InstanceUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Provider) *string { return v.InstanceUri }).(pulumi.StringPtrOutput)
}

// Unique id of this provider.
func (o ProviderOutput) ProviderId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Provider) *string { return v.ProviderId }).(pulumi.StringPtrOutput)
}

// The sku associated with pricing information for this provider.
func (o ProviderOutput) ProviderSku() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Provider) *string { return v.ProviderSku }).(pulumi.StringPtrOutput)
}

// Provisioning status field
func (o ProviderOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Provider) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// Id to track resource usage for the provider.
func (o ProviderOutput) ResourceUsageId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Provider) *string { return v.ResourceUsageId }).(pulumi.StringPtrOutput)
}

type ProviderArrayOutput struct{ *pulumi.OutputState }

func (ProviderArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Provider)(nil)).Elem()
}

func (o ProviderArrayOutput) ToProviderArrayOutput() ProviderArrayOutput {
	return o
}

func (o ProviderArrayOutput) ToProviderArrayOutputWithContext(ctx context.Context) ProviderArrayOutput {
	return o
}

func (o ProviderArrayOutput) Index(i pulumi.IntInput) ProviderOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Provider {
		return vs[0].([]Provider)[vs[1].(int)]
	}).(ProviderOutput)
}

// Information about a Provider. A Provider is an entity that offers Targets to run Azure Quantum Jobs.
type ProviderResponse struct {
	// The provider's marketplace application display name.
	ApplicationName *string `pulumi:"applicationName"`
	// A Uri identifying the specific instance of this provider.
	InstanceUri *string `pulumi:"instanceUri"`
	// Unique id of this provider.
	ProviderId *string `pulumi:"providerId"`
	// The sku associated with pricing information for this provider.
	ProviderSku *string `pulumi:"providerSku"`
	// Provisioning status field
	ProvisioningState *string `pulumi:"provisioningState"`
	// Id to track resource usage for the provider.
	ResourceUsageId *string `pulumi:"resourceUsageId"`
}

// Information about a Provider. A Provider is an entity that offers Targets to run Azure Quantum Jobs.
type ProviderResponseOutput struct{ *pulumi.OutputState }

func (ProviderResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProviderResponse)(nil)).Elem()
}

func (o ProviderResponseOutput) ToProviderResponseOutput() ProviderResponseOutput {
	return o
}

func (o ProviderResponseOutput) ToProviderResponseOutputWithContext(ctx context.Context) ProviderResponseOutput {
	return o
}

// The provider's marketplace application display name.
func (o ProviderResponseOutput) ApplicationName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderResponse) *string { return v.ApplicationName }).(pulumi.StringPtrOutput)
}

// A Uri identifying the specific instance of this provider.
func (o ProviderResponseOutput) InstanceUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderResponse) *string { return v.InstanceUri }).(pulumi.StringPtrOutput)
}

// Unique id of this provider.
func (o ProviderResponseOutput) ProviderId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderResponse) *string { return v.ProviderId }).(pulumi.StringPtrOutput)
}

// The sku associated with pricing information for this provider.
func (o ProviderResponseOutput) ProviderSku() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderResponse) *string { return v.ProviderSku }).(pulumi.StringPtrOutput)
}

// Provisioning status field
func (o ProviderResponseOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderResponse) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// Id to track resource usage for the provider.
func (o ProviderResponseOutput) ResourceUsageId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderResponse) *string { return v.ResourceUsageId }).(pulumi.StringPtrOutput)
}

type ProviderResponseArrayOutput struct{ *pulumi.OutputState }

func (ProviderResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProviderResponse)(nil)).Elem()
}

func (o ProviderResponseArrayOutput) ToProviderResponseArrayOutput() ProviderResponseArrayOutput {
	return o
}

func (o ProviderResponseArrayOutput) ToProviderResponseArrayOutputWithContext(ctx context.Context) ProviderResponseArrayOutput {
	return o
}

func (o ProviderResponseArrayOutput) Index(i pulumi.IntInput) ProviderResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProviderResponse {
		return vs[0].([]ProviderResponse)[vs[1].(int)]
	}).(ProviderResponseOutput)
}

// Metadata pertaining to creation and last modification of the resource.
type SystemDataResponse struct {
	// The timestamp of resource creation (UTC).
	CreatedAt *string `pulumi:"createdAt"`
	// The identity that created the resource.
	CreatedBy *string `pulumi:"createdBy"`
	// The type of identity that created the resource.
	CreatedByType *string `pulumi:"createdByType"`
	// The timestamp of resource last modification (UTC)
	LastModifiedAt *string `pulumi:"lastModifiedAt"`
	// The identity that last modified the resource.
	LastModifiedBy *string `pulumi:"lastModifiedBy"`
	// The type of identity that last modified the resource.
	LastModifiedByType *string `pulumi:"lastModifiedByType"`
}

// Metadata pertaining to creation and last modification of the resource.
type SystemDataResponseOutput struct{ *pulumi.OutputState }

func (SystemDataResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemDataResponse)(nil)).Elem()
}

func (o SystemDataResponseOutput) ToSystemDataResponseOutput() SystemDataResponseOutput {
	return o
}

func (o SystemDataResponseOutput) ToSystemDataResponseOutputWithContext(ctx context.Context) SystemDataResponseOutput {
	return o
}

// The timestamp of resource creation (UTC).
func (o SystemDataResponseOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedAt }).(pulumi.StringPtrOutput)
}

// The identity that created the resource.
func (o SystemDataResponseOutput) CreatedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedBy }).(pulumi.StringPtrOutput)
}

// The type of identity that created the resource.
func (o SystemDataResponseOutput) CreatedByType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedByType }).(pulumi.StringPtrOutput)
}

// The timestamp of resource last modification (UTC)
func (o SystemDataResponseOutput) LastModifiedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedAt }).(pulumi.StringPtrOutput)
}

// The identity that last modified the resource.
func (o SystemDataResponseOutput) LastModifiedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedBy }).(pulumi.StringPtrOutput)
}

// The type of identity that last modified the resource.
func (o SystemDataResponseOutput) LastModifiedByType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedByType }).(pulumi.StringPtrOutput)
}

// User assigned identity properties
type UserAssignedIdentityResponse struct {
	// The client ID of the assigned identity.
	ClientId string `pulumi:"clientId"`
	// The principal ID of the assigned identity.
	PrincipalId string `pulumi:"principalId"`
}

// User assigned identity properties
type UserAssignedIdentityResponseOutput struct{ *pulumi.OutputState }

func (UserAssignedIdentityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserAssignedIdentityResponse)(nil)).Elem()
}

func (o UserAssignedIdentityResponseOutput) ToUserAssignedIdentityResponseOutput() UserAssignedIdentityResponseOutput {
	return o
}

func (o UserAssignedIdentityResponseOutput) ToUserAssignedIdentityResponseOutputWithContext(ctx context.Context) UserAssignedIdentityResponseOutput {
	return o
}

// The client ID of the assigned identity.
func (o UserAssignedIdentityResponseOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v UserAssignedIdentityResponse) string { return v.ClientId }).(pulumi.StringOutput)
}

// The principal ID of the assigned identity.
func (o UserAssignedIdentityResponseOutput) PrincipalId() pulumi.StringOutput {
	return o.ApplyT(func(v UserAssignedIdentityResponse) string { return v.PrincipalId }).(pulumi.StringOutput)
}

type UserAssignedIdentityResponseMapOutput struct{ *pulumi.OutputState }

func (UserAssignedIdentityResponseMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]UserAssignedIdentityResponse)(nil)).Elem()
}

func (o UserAssignedIdentityResponseMapOutput) ToUserAssignedIdentityResponseMapOutput() UserAssignedIdentityResponseMapOutput {
	return o
}

func (o UserAssignedIdentityResponseMapOutput) ToUserAssignedIdentityResponseMapOutputWithContext(ctx context.Context) UserAssignedIdentityResponseMapOutput {
	return o
}

func (o UserAssignedIdentityResponseMapOutput) MapIndex(k pulumi.StringInput) UserAssignedIdentityResponseOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) UserAssignedIdentityResponse {
		return vs[0].(map[string]UserAssignedIdentityResponse)[vs[1].(string)]
	}).(UserAssignedIdentityResponseOutput)
}

// Properties of a Workspace
type WorkspaceResourceProperties struct {
	// Indicator of enablement of the Quantum workspace Api keys.
	ApiKeyEnabled *bool `pulumi:"apiKeyEnabled"`
	// List of Providers selected for this Workspace
	Providers []Provider `pulumi:"providers"`
	// ARM Resource Id of the storage account associated with this workspace.
	StorageAccount *string `pulumi:"storageAccount"`
}

// WorkspaceResourcePropertiesInput is an input type that accepts WorkspaceResourcePropertiesArgs and WorkspaceResourcePropertiesOutput values.
// You can construct a concrete instance of `WorkspaceResourcePropertiesInput` via:
//
//	WorkspaceResourcePropertiesArgs{...}
type WorkspaceResourcePropertiesInput interface {
	pulumi.Input

	ToWorkspaceResourcePropertiesOutput() WorkspaceResourcePropertiesOutput
	ToWorkspaceResourcePropertiesOutputWithContext(context.Context) WorkspaceResourcePropertiesOutput
}

// Properties of a Workspace
type WorkspaceResourcePropertiesArgs struct {
	// Indicator of enablement of the Quantum workspace Api keys.
	ApiKeyEnabled pulumi.BoolPtrInput `pulumi:"apiKeyEnabled"`
	// List of Providers selected for this Workspace
	Providers ProviderArrayInput `pulumi:"providers"`
	// ARM Resource Id of the storage account associated with this workspace.
	StorageAccount pulumi.StringPtrInput `pulumi:"storageAccount"`
}

func (WorkspaceResourcePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspaceResourceProperties)(nil)).Elem()
}

func (i WorkspaceResourcePropertiesArgs) ToWorkspaceResourcePropertiesOutput() WorkspaceResourcePropertiesOutput {
	return i.ToWorkspaceResourcePropertiesOutputWithContext(context.Background())
}

func (i WorkspaceResourcePropertiesArgs) ToWorkspaceResourcePropertiesOutputWithContext(ctx context.Context) WorkspaceResourcePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceResourcePropertiesOutput)
}

func (i WorkspaceResourcePropertiesArgs) ToWorkspaceResourcePropertiesPtrOutput() WorkspaceResourcePropertiesPtrOutput {
	return i.ToWorkspaceResourcePropertiesPtrOutputWithContext(context.Background())
}

func (i WorkspaceResourcePropertiesArgs) ToWorkspaceResourcePropertiesPtrOutputWithContext(ctx context.Context) WorkspaceResourcePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceResourcePropertiesOutput).ToWorkspaceResourcePropertiesPtrOutputWithContext(ctx)
}

// WorkspaceResourcePropertiesPtrInput is an input type that accepts WorkspaceResourcePropertiesArgs, WorkspaceResourcePropertiesPtr and WorkspaceResourcePropertiesPtrOutput values.
// You can construct a concrete instance of `WorkspaceResourcePropertiesPtrInput` via:
//
//	        WorkspaceResourcePropertiesArgs{...}
//
//	or:
//
//	        nil
type WorkspaceResourcePropertiesPtrInput interface {
	pulumi.Input

	ToWorkspaceResourcePropertiesPtrOutput() WorkspaceResourcePropertiesPtrOutput
	ToWorkspaceResourcePropertiesPtrOutputWithContext(context.Context) WorkspaceResourcePropertiesPtrOutput
}

type workspaceResourcePropertiesPtrType WorkspaceResourcePropertiesArgs

func WorkspaceResourcePropertiesPtr(v *WorkspaceResourcePropertiesArgs) WorkspaceResourcePropertiesPtrInput {
	return (*workspaceResourcePropertiesPtrType)(v)
}

func (*workspaceResourcePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkspaceResourceProperties)(nil)).Elem()
}

func (i *workspaceResourcePropertiesPtrType) ToWorkspaceResourcePropertiesPtrOutput() WorkspaceResourcePropertiesPtrOutput {
	return i.ToWorkspaceResourcePropertiesPtrOutputWithContext(context.Background())
}

func (i *workspaceResourcePropertiesPtrType) ToWorkspaceResourcePropertiesPtrOutputWithContext(ctx context.Context) WorkspaceResourcePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceResourcePropertiesPtrOutput)
}

// Properties of a Workspace
type WorkspaceResourcePropertiesOutput struct{ *pulumi.OutputState }

func (WorkspaceResourcePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspaceResourceProperties)(nil)).Elem()
}

func (o WorkspaceResourcePropertiesOutput) ToWorkspaceResourcePropertiesOutput() WorkspaceResourcePropertiesOutput {
	return o
}

func (o WorkspaceResourcePropertiesOutput) ToWorkspaceResourcePropertiesOutputWithContext(ctx context.Context) WorkspaceResourcePropertiesOutput {
	return o
}

func (o WorkspaceResourcePropertiesOutput) ToWorkspaceResourcePropertiesPtrOutput() WorkspaceResourcePropertiesPtrOutput {
	return o.ToWorkspaceResourcePropertiesPtrOutputWithContext(context.Background())
}

func (o WorkspaceResourcePropertiesOutput) ToWorkspaceResourcePropertiesPtrOutputWithContext(ctx context.Context) WorkspaceResourcePropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkspaceResourceProperties) *WorkspaceResourceProperties {
		return &v
	}).(WorkspaceResourcePropertiesPtrOutput)
}

// Indicator of enablement of the Quantum workspace Api keys.
func (o WorkspaceResourcePropertiesOutput) ApiKeyEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WorkspaceResourceProperties) *bool { return v.ApiKeyEnabled }).(pulumi.BoolPtrOutput)
}

// List of Providers selected for this Workspace
func (o WorkspaceResourcePropertiesOutput) Providers() ProviderArrayOutput {
	return o.ApplyT(func(v WorkspaceResourceProperties) []Provider { return v.Providers }).(ProviderArrayOutput)
}

// ARM Resource Id of the storage account associated with this workspace.
func (o WorkspaceResourcePropertiesOutput) StorageAccount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkspaceResourceProperties) *string { return v.StorageAccount }).(pulumi.StringPtrOutput)
}

type WorkspaceResourcePropertiesPtrOutput struct{ *pulumi.OutputState }

func (WorkspaceResourcePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkspaceResourceProperties)(nil)).Elem()
}

func (o WorkspaceResourcePropertiesPtrOutput) ToWorkspaceResourcePropertiesPtrOutput() WorkspaceResourcePropertiesPtrOutput {
	return o
}

func (o WorkspaceResourcePropertiesPtrOutput) ToWorkspaceResourcePropertiesPtrOutputWithContext(ctx context.Context) WorkspaceResourcePropertiesPtrOutput {
	return o
}

func (o WorkspaceResourcePropertiesPtrOutput) Elem() WorkspaceResourcePropertiesOutput {
	return o.ApplyT(func(v *WorkspaceResourceProperties) WorkspaceResourceProperties {
		if v != nil {
			return *v
		}
		var ret WorkspaceResourceProperties
		return ret
	}).(WorkspaceResourcePropertiesOutput)
}

// Indicator of enablement of the Quantum workspace Api keys.
func (o WorkspaceResourcePropertiesPtrOutput) ApiKeyEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkspaceResourceProperties) *bool {
		if v == nil {
			return nil
		}
		return v.ApiKeyEnabled
	}).(pulumi.BoolPtrOutput)
}

// List of Providers selected for this Workspace
func (o WorkspaceResourcePropertiesPtrOutput) Providers() ProviderArrayOutput {
	return o.ApplyT(func(v *WorkspaceResourceProperties) []Provider {
		if v == nil {
			return nil
		}
		return v.Providers
	}).(ProviderArrayOutput)
}

// ARM Resource Id of the storage account associated with this workspace.
func (o WorkspaceResourcePropertiesPtrOutput) StorageAccount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceResourceProperties) *string {
		if v == nil {
			return nil
		}
		return v.StorageAccount
	}).(pulumi.StringPtrOutput)
}

// Properties of a Workspace
type WorkspaceResourcePropertiesResponse struct {
	// Indicator of enablement of the Quantum workspace Api keys.
	ApiKeyEnabled *bool `pulumi:"apiKeyEnabled"`
	// The URI of the workspace endpoint.
	EndpointUri string `pulumi:"endpointUri"`
	// List of Providers selected for this Workspace
	Providers []ProviderResponse `pulumi:"providers"`
	// Provisioning status field
	ProvisioningState string `pulumi:"provisioningState"`
	// ARM Resource Id of the storage account associated with this workspace.
	StorageAccount *string `pulumi:"storageAccount"`
	// Whether the current workspace is ready to accept Jobs.
	Usable string `pulumi:"usable"`
}

// Properties of a Workspace
type WorkspaceResourcePropertiesResponseOutput struct{ *pulumi.OutputState }

func (WorkspaceResourcePropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspaceResourcePropertiesResponse)(nil)).Elem()
}

func (o WorkspaceResourcePropertiesResponseOutput) ToWorkspaceResourcePropertiesResponseOutput() WorkspaceResourcePropertiesResponseOutput {
	return o
}

func (o WorkspaceResourcePropertiesResponseOutput) ToWorkspaceResourcePropertiesResponseOutputWithContext(ctx context.Context) WorkspaceResourcePropertiesResponseOutput {
	return o
}

// Indicator of enablement of the Quantum workspace Api keys.
func (o WorkspaceResourcePropertiesResponseOutput) ApiKeyEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WorkspaceResourcePropertiesResponse) *bool { return v.ApiKeyEnabled }).(pulumi.BoolPtrOutput)
}

// The URI of the workspace endpoint.
func (o WorkspaceResourcePropertiesResponseOutput) EndpointUri() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceResourcePropertiesResponse) string { return v.EndpointUri }).(pulumi.StringOutput)
}

// List of Providers selected for this Workspace
func (o WorkspaceResourcePropertiesResponseOutput) Providers() ProviderResponseArrayOutput {
	return o.ApplyT(func(v WorkspaceResourcePropertiesResponse) []ProviderResponse { return v.Providers }).(ProviderResponseArrayOutput)
}

// Provisioning status field
func (o WorkspaceResourcePropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceResourcePropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// ARM Resource Id of the storage account associated with this workspace.
func (o WorkspaceResourcePropertiesResponseOutput) StorageAccount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkspaceResourcePropertiesResponse) *string { return v.StorageAccount }).(pulumi.StringPtrOutput)
}

// Whether the current workspace is ready to accept Jobs.
func (o WorkspaceResourcePropertiesResponseOutput) Usable() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceResourcePropertiesResponse) string { return v.Usable }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(ApiKeyResponseOutput{})
	pulumi.RegisterOutputType(ApiKeyResponsePtrOutput{})
	pulumi.RegisterOutputType(ManagedServiceIdentityOutput{})
	pulumi.RegisterOutputType(ManagedServiceIdentityPtrOutput{})
	pulumi.RegisterOutputType(ManagedServiceIdentityResponseOutput{})
	pulumi.RegisterOutputType(ManagedServiceIdentityResponsePtrOutput{})
	pulumi.RegisterOutputType(ProviderOutput{})
	pulumi.RegisterOutputType(ProviderArrayOutput{})
	pulumi.RegisterOutputType(ProviderResponseOutput{})
	pulumi.RegisterOutputType(ProviderResponseArrayOutput{})
	pulumi.RegisterOutputType(SystemDataResponseOutput{})
	pulumi.RegisterOutputType(UserAssignedIdentityResponseOutput{})
	pulumi.RegisterOutputType(UserAssignedIdentityResponseMapOutput{})
	pulumi.RegisterOutputType(WorkspaceResourcePropertiesOutput{})
	pulumi.RegisterOutputType(WorkspaceResourcePropertiesPtrOutput{})
	pulumi.RegisterOutputType(WorkspaceResourcePropertiesResponseOutput{})
}
