// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20221111preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Indicates whether Dev Boxes created with this definition are capable of hibernation. Not all images are capable of supporting hibernation. To find out more see https://aka.ms/devbox/hibernate
type HibernateSupport string

const (
	HibernateSupportDisabled = HibernateSupport("Disabled")
	HibernateSupportEnabled  = HibernateSupport("Enabled")
)

func (HibernateSupport) ElementType() reflect.Type {
	return reflect.TypeOf((*HibernateSupport)(nil)).Elem()
}

func (e HibernateSupport) ToHibernateSupportOutput() HibernateSupportOutput {
	return pulumi.ToOutput(e).(HibernateSupportOutput)
}

func (e HibernateSupport) ToHibernateSupportOutputWithContext(ctx context.Context) HibernateSupportOutput {
	return pulumi.ToOutputWithContext(ctx, e).(HibernateSupportOutput)
}

func (e HibernateSupport) ToHibernateSupportPtrOutput() HibernateSupportPtrOutput {
	return e.ToHibernateSupportPtrOutputWithContext(context.Background())
}

func (e HibernateSupport) ToHibernateSupportPtrOutputWithContext(ctx context.Context) HibernateSupportPtrOutput {
	return HibernateSupport(e).ToHibernateSupportOutputWithContext(ctx).ToHibernateSupportPtrOutputWithContext(ctx)
}

func (e HibernateSupport) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e HibernateSupport) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e HibernateSupport) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e HibernateSupport) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type HibernateSupportOutput struct{ *pulumi.OutputState }

func (HibernateSupportOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HibernateSupport)(nil)).Elem()
}

func (o HibernateSupportOutput) ToHibernateSupportOutput() HibernateSupportOutput {
	return o
}

func (o HibernateSupportOutput) ToHibernateSupportOutputWithContext(ctx context.Context) HibernateSupportOutput {
	return o
}

func (o HibernateSupportOutput) ToHibernateSupportPtrOutput() HibernateSupportPtrOutput {
	return o.ToHibernateSupportPtrOutputWithContext(context.Background())
}

func (o HibernateSupportOutput) ToHibernateSupportPtrOutputWithContext(ctx context.Context) HibernateSupportPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v HibernateSupport) *HibernateSupport {
		return &v
	}).(HibernateSupportPtrOutput)
}

func (o HibernateSupportOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o HibernateSupportOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e HibernateSupport) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o HibernateSupportOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o HibernateSupportOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e HibernateSupport) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type HibernateSupportPtrOutput struct{ *pulumi.OutputState }

func (HibernateSupportPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HibernateSupport)(nil)).Elem()
}

func (o HibernateSupportPtrOutput) ToHibernateSupportPtrOutput() HibernateSupportPtrOutput {
	return o
}

func (o HibernateSupportPtrOutput) ToHibernateSupportPtrOutputWithContext(ctx context.Context) HibernateSupportPtrOutput {
	return o
}

func (o HibernateSupportPtrOutput) Elem() HibernateSupportOutput {
	return o.ApplyT(func(v *HibernateSupport) HibernateSupport {
		if v != nil {
			return *v
		}
		var ret HibernateSupport
		return ret
	}).(HibernateSupportOutput)
}

func (o HibernateSupportPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o HibernateSupportPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *HibernateSupport) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// HibernateSupportInput is an input type that accepts values of the HibernateSupport enum
// A concrete instance of `HibernateSupportInput` can be one of the following:
//
//	HibernateSupportDisabled
//	HibernateSupportEnabled
type HibernateSupportInput interface {
	pulumi.Input

	ToHibernateSupportOutput() HibernateSupportOutput
	ToHibernateSupportOutputWithContext(context.Context) HibernateSupportOutput
}

var hibernateSupportPtrType = reflect.TypeOf((**HibernateSupport)(nil)).Elem()

type HibernateSupportPtrInput interface {
	pulumi.Input

	ToHibernateSupportPtrOutput() HibernateSupportPtrOutput
	ToHibernateSupportPtrOutputWithContext(context.Context) HibernateSupportPtrOutput
}

type hibernateSupportPtr string

func HibernateSupportPtr(v string) HibernateSupportPtrInput {
	return (*hibernateSupportPtr)(&v)
}

func (*hibernateSupportPtr) ElementType() reflect.Type {
	return hibernateSupportPtrType
}

func (in *hibernateSupportPtr) ToHibernateSupportPtrOutput() HibernateSupportPtrOutput {
	return pulumi.ToOutput(in).(HibernateSupportPtrOutput)
}

func (in *hibernateSupportPtr) ToHibernateSupportPtrOutputWithContext(ctx context.Context) HibernateSupportPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(HibernateSupportPtrOutput)
}

// This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.
type SkuTier string

const (
	SkuTierFree     = SkuTier("Free")
	SkuTierBasic    = SkuTier("Basic")
	SkuTierStandard = SkuTier("Standard")
	SkuTierPremium  = SkuTier("Premium")
)

func (SkuTier) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuTier)(nil)).Elem()
}

func (e SkuTier) ToSkuTierOutput() SkuTierOutput {
	return pulumi.ToOutput(e).(SkuTierOutput)
}

func (e SkuTier) ToSkuTierOutputWithContext(ctx context.Context) SkuTierOutput {
	return pulumi.ToOutputWithContext(ctx, e).(SkuTierOutput)
}

func (e SkuTier) ToSkuTierPtrOutput() SkuTierPtrOutput {
	return e.ToSkuTierPtrOutputWithContext(context.Background())
}

func (e SkuTier) ToSkuTierPtrOutputWithContext(ctx context.Context) SkuTierPtrOutput {
	return SkuTier(e).ToSkuTierOutputWithContext(ctx).ToSkuTierPtrOutputWithContext(ctx)
}

func (e SkuTier) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e SkuTier) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e SkuTier) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e SkuTier) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type SkuTierOutput struct{ *pulumi.OutputState }

func (SkuTierOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuTier)(nil)).Elem()
}

func (o SkuTierOutput) ToSkuTierOutput() SkuTierOutput {
	return o
}

func (o SkuTierOutput) ToSkuTierOutputWithContext(ctx context.Context) SkuTierOutput {
	return o
}

func (o SkuTierOutput) ToSkuTierPtrOutput() SkuTierPtrOutput {
	return o.ToSkuTierPtrOutputWithContext(context.Background())
}

func (o SkuTierOutput) ToSkuTierPtrOutputWithContext(ctx context.Context) SkuTierPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SkuTier) *SkuTier {
		return &v
	}).(SkuTierPtrOutput)
}

func (o SkuTierOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o SkuTierOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SkuTier) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o SkuTierOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SkuTierOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SkuTier) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type SkuTierPtrOutput struct{ *pulumi.OutputState }

func (SkuTierPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SkuTier)(nil)).Elem()
}

func (o SkuTierPtrOutput) ToSkuTierPtrOutput() SkuTierPtrOutput {
	return o
}

func (o SkuTierPtrOutput) ToSkuTierPtrOutputWithContext(ctx context.Context) SkuTierPtrOutput {
	return o
}

func (o SkuTierPtrOutput) Elem() SkuTierOutput {
	return o.ApplyT(func(v *SkuTier) SkuTier {
		if v != nil {
			return *v
		}
		var ret SkuTier
		return ret
	}).(SkuTierOutput)
}

func (o SkuTierPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SkuTierPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *SkuTier) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// SkuTierInput is an input type that accepts values of the SkuTier enum
// A concrete instance of `SkuTierInput` can be one of the following:
//
//	SkuTierFree
//	SkuTierBasic
//	SkuTierStandard
//	SkuTierPremium
type SkuTierInput interface {
	pulumi.Input

	ToSkuTierOutput() SkuTierOutput
	ToSkuTierOutputWithContext(context.Context) SkuTierOutput
}

var skuTierPtrType = reflect.TypeOf((**SkuTier)(nil)).Elem()

type SkuTierPtrInput interface {
	pulumi.Input

	ToSkuTierPtrOutput() SkuTierPtrOutput
	ToSkuTierPtrOutputWithContext(context.Context) SkuTierPtrOutput
}

type skuTierPtr string

func SkuTierPtr(v string) SkuTierPtrInput {
	return (*skuTierPtr)(&v)
}

func (*skuTierPtr) ElementType() reflect.Type {
	return skuTierPtrType
}

func (in *skuTierPtr) ToSkuTierPtrOutput() SkuTierPtrOutput {
	return pulumi.ToOutput(in).(SkuTierPtrOutput)
}

func (in *skuTierPtr) ToSkuTierPtrOutputWithContext(ctx context.Context) SkuTierPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(SkuTierPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(HibernateSupportOutput{})
	pulumi.RegisterOutputType(HibernateSupportPtrOutput{})
	pulumi.RegisterOutputType(SkuTierOutput{})
	pulumi.RegisterOutputType(SkuTierPtrOutput{})
}
