// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package devcenter

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v3/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Gets Image Definition error details
//
// Uses Azure REST API version 2025-04-01-preview.
func GetDevCenterCatalogImageDefinitionErrorDetails(ctx *pulumi.Context, args *GetDevCenterCatalogImageDefinitionErrorDetailsArgs, opts ...pulumi.InvokeOption) (*GetDevCenterCatalogImageDefinitionErrorDetailsResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv GetDevCenterCatalogImageDefinitionErrorDetailsResult
	err := ctx.Invoke("azure-native:devcenter:getDevCenterCatalogImageDefinitionErrorDetails", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type GetDevCenterCatalogImageDefinitionErrorDetailsArgs struct {
	// The name of the Catalog.
	CatalogName string `pulumi:"catalogName"`
	// The name of the devcenter.
	DevCenterName string `pulumi:"devCenterName"`
	// The name of the Image Definition.
	ImageDefinitionName string `pulumi:"imageDefinitionName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// List of validator error details. Populated when changes are made to the resource or its dependent resources that impact the validity of the Catalog resource.
type GetDevCenterCatalogImageDefinitionErrorDetailsResult struct {
	// Errors associated with resources synchronized from the catalog.
	Errors []CatalogErrorDetailsResponse `pulumi:"errors"`
}

func GetDevCenterCatalogImageDefinitionErrorDetailsOutput(ctx *pulumi.Context, args GetDevCenterCatalogImageDefinitionErrorDetailsOutputArgs, opts ...pulumi.InvokeOption) GetDevCenterCatalogImageDefinitionErrorDetailsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetDevCenterCatalogImageDefinitionErrorDetailsResultOutput, error) {
			args := v.(GetDevCenterCatalogImageDefinitionErrorDetailsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: utilities.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("azure-native:devcenter:getDevCenterCatalogImageDefinitionErrorDetails", args, GetDevCenterCatalogImageDefinitionErrorDetailsResultOutput{}, options).(GetDevCenterCatalogImageDefinitionErrorDetailsResultOutput), nil
		}).(GetDevCenterCatalogImageDefinitionErrorDetailsResultOutput)
}

type GetDevCenterCatalogImageDefinitionErrorDetailsOutputArgs struct {
	// The name of the Catalog.
	CatalogName pulumi.StringInput `pulumi:"catalogName"`
	// The name of the devcenter.
	DevCenterName pulumi.StringInput `pulumi:"devCenterName"`
	// The name of the Image Definition.
	ImageDefinitionName pulumi.StringInput `pulumi:"imageDefinitionName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
}

func (GetDevCenterCatalogImageDefinitionErrorDetailsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDevCenterCatalogImageDefinitionErrorDetailsArgs)(nil)).Elem()
}

// List of validator error details. Populated when changes are made to the resource or its dependent resources that impact the validity of the Catalog resource.
type GetDevCenterCatalogImageDefinitionErrorDetailsResultOutput struct{ *pulumi.OutputState }

func (GetDevCenterCatalogImageDefinitionErrorDetailsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDevCenterCatalogImageDefinitionErrorDetailsResult)(nil)).Elem()
}

func (o GetDevCenterCatalogImageDefinitionErrorDetailsResultOutput) ToGetDevCenterCatalogImageDefinitionErrorDetailsResultOutput() GetDevCenterCatalogImageDefinitionErrorDetailsResultOutput {
	return o
}

func (o GetDevCenterCatalogImageDefinitionErrorDetailsResultOutput) ToGetDevCenterCatalogImageDefinitionErrorDetailsResultOutputWithContext(ctx context.Context) GetDevCenterCatalogImageDefinitionErrorDetailsResultOutput {
	return o
}

// Errors associated with resources synchronized from the catalog.
func (o GetDevCenterCatalogImageDefinitionErrorDetailsResultOutput) Errors() CatalogErrorDetailsResponseArrayOutput {
	return o.ApplyT(func(v GetDevCenterCatalogImageDefinitionErrorDetailsResult) []CatalogErrorDetailsResponse {
		return v.Errors
	}).(CatalogErrorDetailsResponseArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetDevCenterCatalogImageDefinitionErrorDetailsResultOutput{})
}
