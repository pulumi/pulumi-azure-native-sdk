// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package devcenter

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// AAD Join type.
type DomainJoinType string

const (
	DomainJoinTypeHybridAzureADJoin = DomainJoinType("HybridAzureADJoin")
	DomainJoinTypeAzureADJoin       = DomainJoinType("AzureADJoin")
)

func (DomainJoinType) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainJoinType)(nil)).Elem()
}

func (e DomainJoinType) ToDomainJoinTypeOutput() DomainJoinTypeOutput {
	return pulumi.ToOutput(e).(DomainJoinTypeOutput)
}

func (e DomainJoinType) ToDomainJoinTypeOutputWithContext(ctx context.Context) DomainJoinTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DomainJoinTypeOutput)
}

func (e DomainJoinType) ToDomainJoinTypePtrOutput() DomainJoinTypePtrOutput {
	return e.ToDomainJoinTypePtrOutputWithContext(context.Background())
}

func (e DomainJoinType) ToDomainJoinTypePtrOutputWithContext(ctx context.Context) DomainJoinTypePtrOutput {
	return DomainJoinType(e).ToDomainJoinTypeOutputWithContext(ctx).ToDomainJoinTypePtrOutputWithContext(ctx)
}

func (e DomainJoinType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DomainJoinType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DomainJoinType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DomainJoinType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DomainJoinTypeOutput struct{ *pulumi.OutputState }

func (DomainJoinTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainJoinType)(nil)).Elem()
}

func (o DomainJoinTypeOutput) ToDomainJoinTypeOutput() DomainJoinTypeOutput {
	return o
}

func (o DomainJoinTypeOutput) ToDomainJoinTypeOutputWithContext(ctx context.Context) DomainJoinTypeOutput {
	return o
}

func (o DomainJoinTypeOutput) ToDomainJoinTypePtrOutput() DomainJoinTypePtrOutput {
	return o.ToDomainJoinTypePtrOutputWithContext(context.Background())
}

func (o DomainJoinTypeOutput) ToDomainJoinTypePtrOutputWithContext(ctx context.Context) DomainJoinTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DomainJoinType) *DomainJoinType {
		return &v
	}).(DomainJoinTypePtrOutput)
}

func (o DomainJoinTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DomainJoinTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DomainJoinType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DomainJoinTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DomainJoinTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DomainJoinType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DomainJoinTypePtrOutput struct{ *pulumi.OutputState }

func (DomainJoinTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainJoinType)(nil)).Elem()
}

func (o DomainJoinTypePtrOutput) ToDomainJoinTypePtrOutput() DomainJoinTypePtrOutput {
	return o
}

func (o DomainJoinTypePtrOutput) ToDomainJoinTypePtrOutputWithContext(ctx context.Context) DomainJoinTypePtrOutput {
	return o
}

func (o DomainJoinTypePtrOutput) Elem() DomainJoinTypeOutput {
	return o.ApplyT(func(v *DomainJoinType) DomainJoinType {
		if v != nil {
			return *v
		}
		var ret DomainJoinType
		return ret
	}).(DomainJoinTypeOutput)
}

func (o DomainJoinTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DomainJoinTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DomainJoinType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DomainJoinTypeInput is an input type that accepts values of the DomainJoinType enum
// A concrete instance of `DomainJoinTypeInput` can be one of the following:
//
//	DomainJoinTypeHybridAzureADJoin
//	DomainJoinTypeAzureADJoin
type DomainJoinTypeInput interface {
	pulumi.Input

	ToDomainJoinTypeOutput() DomainJoinTypeOutput
	ToDomainJoinTypeOutputWithContext(context.Context) DomainJoinTypeOutput
}

var domainJoinTypePtrType = reflect.TypeOf((**DomainJoinType)(nil)).Elem()

type DomainJoinTypePtrInput interface {
	pulumi.Input

	ToDomainJoinTypePtrOutput() DomainJoinTypePtrOutput
	ToDomainJoinTypePtrOutputWithContext(context.Context) DomainJoinTypePtrOutput
}

type domainJoinTypePtr string

func DomainJoinTypePtr(v string) DomainJoinTypePtrInput {
	return (*domainJoinTypePtr)(&v)
}

func (*domainJoinTypePtr) ElementType() reflect.Type {
	return domainJoinTypePtrType
}

func (in *domainJoinTypePtr) ToDomainJoinTypePtrOutput() DomainJoinTypePtrOutput {
	return pulumi.ToOutput(in).(DomainJoinTypePtrOutput)
}

func (in *domainJoinTypePtr) ToDomainJoinTypePtrOutputWithContext(ctx context.Context) DomainJoinTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DomainJoinTypePtrOutput)
}

// Defines whether this Environment Type can be used in this Project.
type EnvironmentTypeEnableStatus string

const (
	EnvironmentTypeEnableStatusEnabled  = EnvironmentTypeEnableStatus("Enabled")
	EnvironmentTypeEnableStatusDisabled = EnvironmentTypeEnableStatus("Disabled")
)

func (EnvironmentTypeEnableStatus) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentTypeEnableStatus)(nil)).Elem()
}

func (e EnvironmentTypeEnableStatus) ToEnvironmentTypeEnableStatusOutput() EnvironmentTypeEnableStatusOutput {
	return pulumi.ToOutput(e).(EnvironmentTypeEnableStatusOutput)
}

func (e EnvironmentTypeEnableStatus) ToEnvironmentTypeEnableStatusOutputWithContext(ctx context.Context) EnvironmentTypeEnableStatusOutput {
	return pulumi.ToOutputWithContext(ctx, e).(EnvironmentTypeEnableStatusOutput)
}

func (e EnvironmentTypeEnableStatus) ToEnvironmentTypeEnableStatusPtrOutput() EnvironmentTypeEnableStatusPtrOutput {
	return e.ToEnvironmentTypeEnableStatusPtrOutputWithContext(context.Background())
}

func (e EnvironmentTypeEnableStatus) ToEnvironmentTypeEnableStatusPtrOutputWithContext(ctx context.Context) EnvironmentTypeEnableStatusPtrOutput {
	return EnvironmentTypeEnableStatus(e).ToEnvironmentTypeEnableStatusOutputWithContext(ctx).ToEnvironmentTypeEnableStatusPtrOutputWithContext(ctx)
}

func (e EnvironmentTypeEnableStatus) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e EnvironmentTypeEnableStatus) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e EnvironmentTypeEnableStatus) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e EnvironmentTypeEnableStatus) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type EnvironmentTypeEnableStatusOutput struct{ *pulumi.OutputState }

func (EnvironmentTypeEnableStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentTypeEnableStatus)(nil)).Elem()
}

func (o EnvironmentTypeEnableStatusOutput) ToEnvironmentTypeEnableStatusOutput() EnvironmentTypeEnableStatusOutput {
	return o
}

func (o EnvironmentTypeEnableStatusOutput) ToEnvironmentTypeEnableStatusOutputWithContext(ctx context.Context) EnvironmentTypeEnableStatusOutput {
	return o
}

func (o EnvironmentTypeEnableStatusOutput) ToEnvironmentTypeEnableStatusPtrOutput() EnvironmentTypeEnableStatusPtrOutput {
	return o.ToEnvironmentTypeEnableStatusPtrOutputWithContext(context.Background())
}

func (o EnvironmentTypeEnableStatusOutput) ToEnvironmentTypeEnableStatusPtrOutputWithContext(ctx context.Context) EnvironmentTypeEnableStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EnvironmentTypeEnableStatus) *EnvironmentTypeEnableStatus {
		return &v
	}).(EnvironmentTypeEnableStatusPtrOutput)
}

func (o EnvironmentTypeEnableStatusOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o EnvironmentTypeEnableStatusOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e EnvironmentTypeEnableStatus) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o EnvironmentTypeEnableStatusOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o EnvironmentTypeEnableStatusOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e EnvironmentTypeEnableStatus) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type EnvironmentTypeEnableStatusPtrOutput struct{ *pulumi.OutputState }

func (EnvironmentTypeEnableStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EnvironmentTypeEnableStatus)(nil)).Elem()
}

func (o EnvironmentTypeEnableStatusPtrOutput) ToEnvironmentTypeEnableStatusPtrOutput() EnvironmentTypeEnableStatusPtrOutput {
	return o
}

func (o EnvironmentTypeEnableStatusPtrOutput) ToEnvironmentTypeEnableStatusPtrOutputWithContext(ctx context.Context) EnvironmentTypeEnableStatusPtrOutput {
	return o
}

func (o EnvironmentTypeEnableStatusPtrOutput) Elem() EnvironmentTypeEnableStatusOutput {
	return o.ApplyT(func(v *EnvironmentTypeEnableStatus) EnvironmentTypeEnableStatus {
		if v != nil {
			return *v
		}
		var ret EnvironmentTypeEnableStatus
		return ret
	}).(EnvironmentTypeEnableStatusOutput)
}

func (o EnvironmentTypeEnableStatusPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o EnvironmentTypeEnableStatusPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *EnvironmentTypeEnableStatus) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// EnvironmentTypeEnableStatusInput is an input type that accepts values of the EnvironmentTypeEnableStatus enum
// A concrete instance of `EnvironmentTypeEnableStatusInput` can be one of the following:
//
//	EnvironmentTypeEnableStatusEnabled
//	EnvironmentTypeEnableStatusDisabled
type EnvironmentTypeEnableStatusInput interface {
	pulumi.Input

	ToEnvironmentTypeEnableStatusOutput() EnvironmentTypeEnableStatusOutput
	ToEnvironmentTypeEnableStatusOutputWithContext(context.Context) EnvironmentTypeEnableStatusOutput
}

var environmentTypeEnableStatusPtrType = reflect.TypeOf((**EnvironmentTypeEnableStatus)(nil)).Elem()

type EnvironmentTypeEnableStatusPtrInput interface {
	pulumi.Input

	ToEnvironmentTypeEnableStatusPtrOutput() EnvironmentTypeEnableStatusPtrOutput
	ToEnvironmentTypeEnableStatusPtrOutputWithContext(context.Context) EnvironmentTypeEnableStatusPtrOutput
}

type environmentTypeEnableStatusPtr string

func EnvironmentTypeEnableStatusPtr(v string) EnvironmentTypeEnableStatusPtrInput {
	return (*environmentTypeEnableStatusPtr)(&v)
}

func (*environmentTypeEnableStatusPtr) ElementType() reflect.Type {
	return environmentTypeEnableStatusPtrType
}

func (in *environmentTypeEnableStatusPtr) ToEnvironmentTypeEnableStatusPtrOutput() EnvironmentTypeEnableStatusPtrOutput {
	return pulumi.ToOutput(in).(EnvironmentTypeEnableStatusPtrOutput)
}

func (in *environmentTypeEnableStatusPtr) ToEnvironmentTypeEnableStatusPtrOutputWithContext(ctx context.Context) EnvironmentTypeEnableStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(EnvironmentTypeEnableStatusPtrOutput)
}

// Indicates whether Dev Boxes created with this definition are capable of hibernation. Not all images are capable of supporting hibernation. To find out more see https://aka.ms/devbox/hibernate
type HibernateSupport string

const (
	HibernateSupportDisabled = HibernateSupport("Disabled")
	HibernateSupportEnabled  = HibernateSupport("Enabled")
)

func (HibernateSupport) ElementType() reflect.Type {
	return reflect.TypeOf((*HibernateSupport)(nil)).Elem()
}

func (e HibernateSupport) ToHibernateSupportOutput() HibernateSupportOutput {
	return pulumi.ToOutput(e).(HibernateSupportOutput)
}

func (e HibernateSupport) ToHibernateSupportOutputWithContext(ctx context.Context) HibernateSupportOutput {
	return pulumi.ToOutputWithContext(ctx, e).(HibernateSupportOutput)
}

func (e HibernateSupport) ToHibernateSupportPtrOutput() HibernateSupportPtrOutput {
	return e.ToHibernateSupportPtrOutputWithContext(context.Background())
}

func (e HibernateSupport) ToHibernateSupportPtrOutputWithContext(ctx context.Context) HibernateSupportPtrOutput {
	return HibernateSupport(e).ToHibernateSupportOutputWithContext(ctx).ToHibernateSupportPtrOutputWithContext(ctx)
}

func (e HibernateSupport) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e HibernateSupport) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e HibernateSupport) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e HibernateSupport) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type HibernateSupportOutput struct{ *pulumi.OutputState }

func (HibernateSupportOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HibernateSupport)(nil)).Elem()
}

func (o HibernateSupportOutput) ToHibernateSupportOutput() HibernateSupportOutput {
	return o
}

func (o HibernateSupportOutput) ToHibernateSupportOutputWithContext(ctx context.Context) HibernateSupportOutput {
	return o
}

func (o HibernateSupportOutput) ToHibernateSupportPtrOutput() HibernateSupportPtrOutput {
	return o.ToHibernateSupportPtrOutputWithContext(context.Background())
}

func (o HibernateSupportOutput) ToHibernateSupportPtrOutputWithContext(ctx context.Context) HibernateSupportPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v HibernateSupport) *HibernateSupport {
		return &v
	}).(HibernateSupportPtrOutput)
}

func (o HibernateSupportOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o HibernateSupportOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e HibernateSupport) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o HibernateSupportOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o HibernateSupportOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e HibernateSupport) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type HibernateSupportPtrOutput struct{ *pulumi.OutputState }

func (HibernateSupportPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HibernateSupport)(nil)).Elem()
}

func (o HibernateSupportPtrOutput) ToHibernateSupportPtrOutput() HibernateSupportPtrOutput {
	return o
}

func (o HibernateSupportPtrOutput) ToHibernateSupportPtrOutputWithContext(ctx context.Context) HibernateSupportPtrOutput {
	return o
}

func (o HibernateSupportPtrOutput) Elem() HibernateSupportOutput {
	return o.ApplyT(func(v *HibernateSupport) HibernateSupport {
		if v != nil {
			return *v
		}
		var ret HibernateSupport
		return ret
	}).(HibernateSupportOutput)
}

func (o HibernateSupportPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o HibernateSupportPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *HibernateSupport) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// HibernateSupportInput is an input type that accepts values of the HibernateSupport enum
// A concrete instance of `HibernateSupportInput` can be one of the following:
//
//	HibernateSupportDisabled
//	HibernateSupportEnabled
type HibernateSupportInput interface {
	pulumi.Input

	ToHibernateSupportOutput() HibernateSupportOutput
	ToHibernateSupportOutputWithContext(context.Context) HibernateSupportOutput
}

var hibernateSupportPtrType = reflect.TypeOf((**HibernateSupport)(nil)).Elem()

type HibernateSupportPtrInput interface {
	pulumi.Input

	ToHibernateSupportPtrOutput() HibernateSupportPtrOutput
	ToHibernateSupportPtrOutputWithContext(context.Context) HibernateSupportPtrOutput
}

type hibernateSupportPtr string

func HibernateSupportPtr(v string) HibernateSupportPtrInput {
	return (*hibernateSupportPtr)(&v)
}

func (*hibernateSupportPtr) ElementType() reflect.Type {
	return hibernateSupportPtrType
}

func (in *hibernateSupportPtr) ToHibernateSupportPtrOutput() HibernateSupportPtrOutput {
	return pulumi.ToOutput(in).(HibernateSupportPtrOutput)
}

func (in *hibernateSupportPtr) ToHibernateSupportPtrOutputWithContext(ctx context.Context) HibernateSupportPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(HibernateSupportPtrOutput)
}

// Specifies the license type indicating the caller has already acquired licenses for the Dev Boxes that will be created.
type LicenseType string

const (
	LicenseType_Windows_Client = LicenseType("Windows_Client")
)

func (LicenseType) ElementType() reflect.Type {
	return reflect.TypeOf((*LicenseType)(nil)).Elem()
}

func (e LicenseType) ToLicenseTypeOutput() LicenseTypeOutput {
	return pulumi.ToOutput(e).(LicenseTypeOutput)
}

func (e LicenseType) ToLicenseTypeOutputWithContext(ctx context.Context) LicenseTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(LicenseTypeOutput)
}

func (e LicenseType) ToLicenseTypePtrOutput() LicenseTypePtrOutput {
	return e.ToLicenseTypePtrOutputWithContext(context.Background())
}

func (e LicenseType) ToLicenseTypePtrOutputWithContext(ctx context.Context) LicenseTypePtrOutput {
	return LicenseType(e).ToLicenseTypeOutputWithContext(ctx).ToLicenseTypePtrOutputWithContext(ctx)
}

func (e LicenseType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e LicenseType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e LicenseType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e LicenseType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type LicenseTypeOutput struct{ *pulumi.OutputState }

func (LicenseTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LicenseType)(nil)).Elem()
}

func (o LicenseTypeOutput) ToLicenseTypeOutput() LicenseTypeOutput {
	return o
}

func (o LicenseTypeOutput) ToLicenseTypeOutputWithContext(ctx context.Context) LicenseTypeOutput {
	return o
}

func (o LicenseTypeOutput) ToLicenseTypePtrOutput() LicenseTypePtrOutput {
	return o.ToLicenseTypePtrOutputWithContext(context.Background())
}

func (o LicenseTypeOutput) ToLicenseTypePtrOutputWithContext(ctx context.Context) LicenseTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LicenseType) *LicenseType {
		return &v
	}).(LicenseTypePtrOutput)
}

func (o LicenseTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o LicenseTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e LicenseType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o LicenseTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o LicenseTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e LicenseType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type LicenseTypePtrOutput struct{ *pulumi.OutputState }

func (LicenseTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LicenseType)(nil)).Elem()
}

func (o LicenseTypePtrOutput) ToLicenseTypePtrOutput() LicenseTypePtrOutput {
	return o
}

func (o LicenseTypePtrOutput) ToLicenseTypePtrOutputWithContext(ctx context.Context) LicenseTypePtrOutput {
	return o
}

func (o LicenseTypePtrOutput) Elem() LicenseTypeOutput {
	return o.ApplyT(func(v *LicenseType) LicenseType {
		if v != nil {
			return *v
		}
		var ret LicenseType
		return ret
	}).(LicenseTypeOutput)
}

func (o LicenseTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o LicenseTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *LicenseType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// LicenseTypeInput is an input type that accepts values of the LicenseType enum
// A concrete instance of `LicenseTypeInput` can be one of the following:
//
//	LicenseType_Windows_Client
type LicenseTypeInput interface {
	pulumi.Input

	ToLicenseTypeOutput() LicenseTypeOutput
	ToLicenseTypeOutputWithContext(context.Context) LicenseTypeOutput
}

var licenseTypePtrType = reflect.TypeOf((**LicenseType)(nil)).Elem()

type LicenseTypePtrInput interface {
	pulumi.Input

	ToLicenseTypePtrOutput() LicenseTypePtrOutput
	ToLicenseTypePtrOutputWithContext(context.Context) LicenseTypePtrOutput
}

type licenseTypePtr string

func LicenseTypePtr(v string) LicenseTypePtrInput {
	return (*licenseTypePtr)(&v)
}

func (*licenseTypePtr) ElementType() reflect.Type {
	return licenseTypePtrType
}

func (in *licenseTypePtr) ToLicenseTypePtrOutput() LicenseTypePtrOutput {
	return pulumi.ToOutput(in).(LicenseTypePtrOutput)
}

func (in *licenseTypePtr) ToLicenseTypePtrOutputWithContext(ctx context.Context) LicenseTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(LicenseTypePtrOutput)
}

// Indicates whether owners of Dev Boxes in this pool are added as local administrators on the Dev Box.
type LocalAdminStatus string

const (
	LocalAdminStatusDisabled = LocalAdminStatus("Disabled")
	LocalAdminStatusEnabled  = LocalAdminStatus("Enabled")
)

func (LocalAdminStatus) ElementType() reflect.Type {
	return reflect.TypeOf((*LocalAdminStatus)(nil)).Elem()
}

func (e LocalAdminStatus) ToLocalAdminStatusOutput() LocalAdminStatusOutput {
	return pulumi.ToOutput(e).(LocalAdminStatusOutput)
}

func (e LocalAdminStatus) ToLocalAdminStatusOutputWithContext(ctx context.Context) LocalAdminStatusOutput {
	return pulumi.ToOutputWithContext(ctx, e).(LocalAdminStatusOutput)
}

func (e LocalAdminStatus) ToLocalAdminStatusPtrOutput() LocalAdminStatusPtrOutput {
	return e.ToLocalAdminStatusPtrOutputWithContext(context.Background())
}

func (e LocalAdminStatus) ToLocalAdminStatusPtrOutputWithContext(ctx context.Context) LocalAdminStatusPtrOutput {
	return LocalAdminStatus(e).ToLocalAdminStatusOutputWithContext(ctx).ToLocalAdminStatusPtrOutputWithContext(ctx)
}

func (e LocalAdminStatus) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e LocalAdminStatus) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e LocalAdminStatus) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e LocalAdminStatus) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type LocalAdminStatusOutput struct{ *pulumi.OutputState }

func (LocalAdminStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LocalAdminStatus)(nil)).Elem()
}

func (o LocalAdminStatusOutput) ToLocalAdminStatusOutput() LocalAdminStatusOutput {
	return o
}

func (o LocalAdminStatusOutput) ToLocalAdminStatusOutputWithContext(ctx context.Context) LocalAdminStatusOutput {
	return o
}

func (o LocalAdminStatusOutput) ToLocalAdminStatusPtrOutput() LocalAdminStatusPtrOutput {
	return o.ToLocalAdminStatusPtrOutputWithContext(context.Background())
}

func (o LocalAdminStatusOutput) ToLocalAdminStatusPtrOutputWithContext(ctx context.Context) LocalAdminStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LocalAdminStatus) *LocalAdminStatus {
		return &v
	}).(LocalAdminStatusPtrOutput)
}

func (o LocalAdminStatusOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o LocalAdminStatusOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e LocalAdminStatus) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o LocalAdminStatusOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o LocalAdminStatusOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e LocalAdminStatus) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type LocalAdminStatusPtrOutput struct{ *pulumi.OutputState }

func (LocalAdminStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LocalAdminStatus)(nil)).Elem()
}

func (o LocalAdminStatusPtrOutput) ToLocalAdminStatusPtrOutput() LocalAdminStatusPtrOutput {
	return o
}

func (o LocalAdminStatusPtrOutput) ToLocalAdminStatusPtrOutputWithContext(ctx context.Context) LocalAdminStatusPtrOutput {
	return o
}

func (o LocalAdminStatusPtrOutput) Elem() LocalAdminStatusOutput {
	return o.ApplyT(func(v *LocalAdminStatus) LocalAdminStatus {
		if v != nil {
			return *v
		}
		var ret LocalAdminStatus
		return ret
	}).(LocalAdminStatusOutput)
}

func (o LocalAdminStatusPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o LocalAdminStatusPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *LocalAdminStatus) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// LocalAdminStatusInput is an input type that accepts values of the LocalAdminStatus enum
// A concrete instance of `LocalAdminStatusInput` can be one of the following:
//
//	LocalAdminStatusDisabled
//	LocalAdminStatusEnabled
type LocalAdminStatusInput interface {
	pulumi.Input

	ToLocalAdminStatusOutput() LocalAdminStatusOutput
	ToLocalAdminStatusOutputWithContext(context.Context) LocalAdminStatusOutput
}

var localAdminStatusPtrType = reflect.TypeOf((**LocalAdminStatus)(nil)).Elem()

type LocalAdminStatusPtrInput interface {
	pulumi.Input

	ToLocalAdminStatusPtrOutput() LocalAdminStatusPtrOutput
	ToLocalAdminStatusPtrOutputWithContext(context.Context) LocalAdminStatusPtrOutput
}

type localAdminStatusPtr string

func LocalAdminStatusPtr(v string) LocalAdminStatusPtrInput {
	return (*localAdminStatusPtr)(&v)
}

func (*localAdminStatusPtr) ElementType() reflect.Type {
	return localAdminStatusPtrType
}

func (in *localAdminStatusPtr) ToLocalAdminStatusPtrOutput() LocalAdminStatusPtrOutput {
	return pulumi.ToOutput(in).(LocalAdminStatusPtrOutput)
}

func (in *localAdminStatusPtr) ToLocalAdminStatusPtrOutputWithContext(ctx context.Context) LocalAdminStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(LocalAdminStatusPtrOutput)
}

// Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
type ManagedServiceIdentityType string

const (
	ManagedServiceIdentityTypeNone                         = ManagedServiceIdentityType("None")
	ManagedServiceIdentityTypeSystemAssigned               = ManagedServiceIdentityType("SystemAssigned")
	ManagedServiceIdentityTypeUserAssigned                 = ManagedServiceIdentityType("UserAssigned")
	ManagedServiceIdentityType_SystemAssigned_UserAssigned = ManagedServiceIdentityType("SystemAssigned, UserAssigned")
)

func (ManagedServiceIdentityType) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedServiceIdentityType)(nil)).Elem()
}

func (e ManagedServiceIdentityType) ToManagedServiceIdentityTypeOutput() ManagedServiceIdentityTypeOutput {
	return pulumi.ToOutput(e).(ManagedServiceIdentityTypeOutput)
}

func (e ManagedServiceIdentityType) ToManagedServiceIdentityTypeOutputWithContext(ctx context.Context) ManagedServiceIdentityTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ManagedServiceIdentityTypeOutput)
}

func (e ManagedServiceIdentityType) ToManagedServiceIdentityTypePtrOutput() ManagedServiceIdentityTypePtrOutput {
	return e.ToManagedServiceIdentityTypePtrOutputWithContext(context.Background())
}

func (e ManagedServiceIdentityType) ToManagedServiceIdentityTypePtrOutputWithContext(ctx context.Context) ManagedServiceIdentityTypePtrOutput {
	return ManagedServiceIdentityType(e).ToManagedServiceIdentityTypeOutputWithContext(ctx).ToManagedServiceIdentityTypePtrOutputWithContext(ctx)
}

func (e ManagedServiceIdentityType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ManagedServiceIdentityType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ManagedServiceIdentityType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ManagedServiceIdentityType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ManagedServiceIdentityTypeOutput struct{ *pulumi.OutputState }

func (ManagedServiceIdentityTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedServiceIdentityType)(nil)).Elem()
}

func (o ManagedServiceIdentityTypeOutput) ToManagedServiceIdentityTypeOutput() ManagedServiceIdentityTypeOutput {
	return o
}

func (o ManagedServiceIdentityTypeOutput) ToManagedServiceIdentityTypeOutputWithContext(ctx context.Context) ManagedServiceIdentityTypeOutput {
	return o
}

func (o ManagedServiceIdentityTypeOutput) ToManagedServiceIdentityTypePtrOutput() ManagedServiceIdentityTypePtrOutput {
	return o.ToManagedServiceIdentityTypePtrOutputWithContext(context.Background())
}

func (o ManagedServiceIdentityTypeOutput) ToManagedServiceIdentityTypePtrOutputWithContext(ctx context.Context) ManagedServiceIdentityTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ManagedServiceIdentityType) *ManagedServiceIdentityType {
		return &v
	}).(ManagedServiceIdentityTypePtrOutput)
}

func (o ManagedServiceIdentityTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ManagedServiceIdentityTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ManagedServiceIdentityType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ManagedServiceIdentityTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ManagedServiceIdentityTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ManagedServiceIdentityType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ManagedServiceIdentityTypePtrOutput struct{ *pulumi.OutputState }

func (ManagedServiceIdentityTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedServiceIdentityType)(nil)).Elem()
}

func (o ManagedServiceIdentityTypePtrOutput) ToManagedServiceIdentityTypePtrOutput() ManagedServiceIdentityTypePtrOutput {
	return o
}

func (o ManagedServiceIdentityTypePtrOutput) ToManagedServiceIdentityTypePtrOutputWithContext(ctx context.Context) ManagedServiceIdentityTypePtrOutput {
	return o
}

func (o ManagedServiceIdentityTypePtrOutput) Elem() ManagedServiceIdentityTypeOutput {
	return o.ApplyT(func(v *ManagedServiceIdentityType) ManagedServiceIdentityType {
		if v != nil {
			return *v
		}
		var ret ManagedServiceIdentityType
		return ret
	}).(ManagedServiceIdentityTypeOutput)
}

func (o ManagedServiceIdentityTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ManagedServiceIdentityTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ManagedServiceIdentityType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ManagedServiceIdentityTypeInput is an input type that accepts values of the ManagedServiceIdentityType enum
// A concrete instance of `ManagedServiceIdentityTypeInput` can be one of the following:
//
//	ManagedServiceIdentityTypeNone
//	ManagedServiceIdentityTypeSystemAssigned
//	ManagedServiceIdentityTypeUserAssigned
//	ManagedServiceIdentityType_SystemAssigned_UserAssigned
type ManagedServiceIdentityTypeInput interface {
	pulumi.Input

	ToManagedServiceIdentityTypeOutput() ManagedServiceIdentityTypeOutput
	ToManagedServiceIdentityTypeOutputWithContext(context.Context) ManagedServiceIdentityTypeOutput
}

var managedServiceIdentityTypePtrType = reflect.TypeOf((**ManagedServiceIdentityType)(nil)).Elem()

type ManagedServiceIdentityTypePtrInput interface {
	pulumi.Input

	ToManagedServiceIdentityTypePtrOutput() ManagedServiceIdentityTypePtrOutput
	ToManagedServiceIdentityTypePtrOutputWithContext(context.Context) ManagedServiceIdentityTypePtrOutput
}

type managedServiceIdentityTypePtr string

func ManagedServiceIdentityTypePtr(v string) ManagedServiceIdentityTypePtrInput {
	return (*managedServiceIdentityTypePtr)(&v)
}

func (*managedServiceIdentityTypePtr) ElementType() reflect.Type {
	return managedServiceIdentityTypePtrType
}

func (in *managedServiceIdentityTypePtr) ToManagedServiceIdentityTypePtrOutput() ManagedServiceIdentityTypePtrOutput {
	return pulumi.ToOutput(in).(ManagedServiceIdentityTypePtrOutput)
}

func (in *managedServiceIdentityTypePtr) ToManagedServiceIdentityTypePtrOutputWithContext(ctx context.Context) ManagedServiceIdentityTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ManagedServiceIdentityTypePtrOutput)
}

// Indicates whether or not this scheduled task is enabled.
type ScheduleEnableStatus string

const (
	ScheduleEnableStatusEnabled  = ScheduleEnableStatus("Enabled")
	ScheduleEnableStatusDisabled = ScheduleEnableStatus("Disabled")
)

func (ScheduleEnableStatus) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduleEnableStatus)(nil)).Elem()
}

func (e ScheduleEnableStatus) ToScheduleEnableStatusOutput() ScheduleEnableStatusOutput {
	return pulumi.ToOutput(e).(ScheduleEnableStatusOutput)
}

func (e ScheduleEnableStatus) ToScheduleEnableStatusOutputWithContext(ctx context.Context) ScheduleEnableStatusOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ScheduleEnableStatusOutput)
}

func (e ScheduleEnableStatus) ToScheduleEnableStatusPtrOutput() ScheduleEnableStatusPtrOutput {
	return e.ToScheduleEnableStatusPtrOutputWithContext(context.Background())
}

func (e ScheduleEnableStatus) ToScheduleEnableStatusPtrOutputWithContext(ctx context.Context) ScheduleEnableStatusPtrOutput {
	return ScheduleEnableStatus(e).ToScheduleEnableStatusOutputWithContext(ctx).ToScheduleEnableStatusPtrOutputWithContext(ctx)
}

func (e ScheduleEnableStatus) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ScheduleEnableStatus) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ScheduleEnableStatus) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ScheduleEnableStatus) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ScheduleEnableStatusOutput struct{ *pulumi.OutputState }

func (ScheduleEnableStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduleEnableStatus)(nil)).Elem()
}

func (o ScheduleEnableStatusOutput) ToScheduleEnableStatusOutput() ScheduleEnableStatusOutput {
	return o
}

func (o ScheduleEnableStatusOutput) ToScheduleEnableStatusOutputWithContext(ctx context.Context) ScheduleEnableStatusOutput {
	return o
}

func (o ScheduleEnableStatusOutput) ToScheduleEnableStatusPtrOutput() ScheduleEnableStatusPtrOutput {
	return o.ToScheduleEnableStatusPtrOutputWithContext(context.Background())
}

func (o ScheduleEnableStatusOutput) ToScheduleEnableStatusPtrOutputWithContext(ctx context.Context) ScheduleEnableStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ScheduleEnableStatus) *ScheduleEnableStatus {
		return &v
	}).(ScheduleEnableStatusPtrOutput)
}

func (o ScheduleEnableStatusOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ScheduleEnableStatusOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ScheduleEnableStatus) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ScheduleEnableStatusOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ScheduleEnableStatusOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ScheduleEnableStatus) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ScheduleEnableStatusPtrOutput struct{ *pulumi.OutputState }

func (ScheduleEnableStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ScheduleEnableStatus)(nil)).Elem()
}

func (o ScheduleEnableStatusPtrOutput) ToScheduleEnableStatusPtrOutput() ScheduleEnableStatusPtrOutput {
	return o
}

func (o ScheduleEnableStatusPtrOutput) ToScheduleEnableStatusPtrOutputWithContext(ctx context.Context) ScheduleEnableStatusPtrOutput {
	return o
}

func (o ScheduleEnableStatusPtrOutput) Elem() ScheduleEnableStatusOutput {
	return o.ApplyT(func(v *ScheduleEnableStatus) ScheduleEnableStatus {
		if v != nil {
			return *v
		}
		var ret ScheduleEnableStatus
		return ret
	}).(ScheduleEnableStatusOutput)
}

func (o ScheduleEnableStatusPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ScheduleEnableStatusPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ScheduleEnableStatus) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ScheduleEnableStatusInput is an input type that accepts values of the ScheduleEnableStatus enum
// A concrete instance of `ScheduleEnableStatusInput` can be one of the following:
//
//	ScheduleEnableStatusEnabled
//	ScheduleEnableStatusDisabled
type ScheduleEnableStatusInput interface {
	pulumi.Input

	ToScheduleEnableStatusOutput() ScheduleEnableStatusOutput
	ToScheduleEnableStatusOutputWithContext(context.Context) ScheduleEnableStatusOutput
}

var scheduleEnableStatusPtrType = reflect.TypeOf((**ScheduleEnableStatus)(nil)).Elem()

type ScheduleEnableStatusPtrInput interface {
	pulumi.Input

	ToScheduleEnableStatusPtrOutput() ScheduleEnableStatusPtrOutput
	ToScheduleEnableStatusPtrOutputWithContext(context.Context) ScheduleEnableStatusPtrOutput
}

type scheduleEnableStatusPtr string

func ScheduleEnableStatusPtr(v string) ScheduleEnableStatusPtrInput {
	return (*scheduleEnableStatusPtr)(&v)
}

func (*scheduleEnableStatusPtr) ElementType() reflect.Type {
	return scheduleEnableStatusPtrType
}

func (in *scheduleEnableStatusPtr) ToScheduleEnableStatusPtrOutput() ScheduleEnableStatusPtrOutput {
	return pulumi.ToOutput(in).(ScheduleEnableStatusPtrOutput)
}

func (in *scheduleEnableStatusPtr) ToScheduleEnableStatusPtrOutputWithContext(ctx context.Context) ScheduleEnableStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ScheduleEnableStatusPtrOutput)
}

// The frequency of this scheduled task.
type ScheduledFrequency string

const (
	ScheduledFrequencyDaily = ScheduledFrequency("Daily")
)

func (ScheduledFrequency) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduledFrequency)(nil)).Elem()
}

func (e ScheduledFrequency) ToScheduledFrequencyOutput() ScheduledFrequencyOutput {
	return pulumi.ToOutput(e).(ScheduledFrequencyOutput)
}

func (e ScheduledFrequency) ToScheduledFrequencyOutputWithContext(ctx context.Context) ScheduledFrequencyOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ScheduledFrequencyOutput)
}

func (e ScheduledFrequency) ToScheduledFrequencyPtrOutput() ScheduledFrequencyPtrOutput {
	return e.ToScheduledFrequencyPtrOutputWithContext(context.Background())
}

func (e ScheduledFrequency) ToScheduledFrequencyPtrOutputWithContext(ctx context.Context) ScheduledFrequencyPtrOutput {
	return ScheduledFrequency(e).ToScheduledFrequencyOutputWithContext(ctx).ToScheduledFrequencyPtrOutputWithContext(ctx)
}

func (e ScheduledFrequency) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ScheduledFrequency) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ScheduledFrequency) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ScheduledFrequency) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ScheduledFrequencyOutput struct{ *pulumi.OutputState }

func (ScheduledFrequencyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduledFrequency)(nil)).Elem()
}

func (o ScheduledFrequencyOutput) ToScheduledFrequencyOutput() ScheduledFrequencyOutput {
	return o
}

func (o ScheduledFrequencyOutput) ToScheduledFrequencyOutputWithContext(ctx context.Context) ScheduledFrequencyOutput {
	return o
}

func (o ScheduledFrequencyOutput) ToScheduledFrequencyPtrOutput() ScheduledFrequencyPtrOutput {
	return o.ToScheduledFrequencyPtrOutputWithContext(context.Background())
}

func (o ScheduledFrequencyOutput) ToScheduledFrequencyPtrOutputWithContext(ctx context.Context) ScheduledFrequencyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ScheduledFrequency) *ScheduledFrequency {
		return &v
	}).(ScheduledFrequencyPtrOutput)
}

func (o ScheduledFrequencyOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ScheduledFrequencyOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ScheduledFrequency) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ScheduledFrequencyOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ScheduledFrequencyOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ScheduledFrequency) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ScheduledFrequencyPtrOutput struct{ *pulumi.OutputState }

func (ScheduledFrequencyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ScheduledFrequency)(nil)).Elem()
}

func (o ScheduledFrequencyPtrOutput) ToScheduledFrequencyPtrOutput() ScheduledFrequencyPtrOutput {
	return o
}

func (o ScheduledFrequencyPtrOutput) ToScheduledFrequencyPtrOutputWithContext(ctx context.Context) ScheduledFrequencyPtrOutput {
	return o
}

func (o ScheduledFrequencyPtrOutput) Elem() ScheduledFrequencyOutput {
	return o.ApplyT(func(v *ScheduledFrequency) ScheduledFrequency {
		if v != nil {
			return *v
		}
		var ret ScheduledFrequency
		return ret
	}).(ScheduledFrequencyOutput)
}

func (o ScheduledFrequencyPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ScheduledFrequencyPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ScheduledFrequency) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ScheduledFrequencyInput is an input type that accepts values of the ScheduledFrequency enum
// A concrete instance of `ScheduledFrequencyInput` can be one of the following:
//
//	ScheduledFrequencyDaily
type ScheduledFrequencyInput interface {
	pulumi.Input

	ToScheduledFrequencyOutput() ScheduledFrequencyOutput
	ToScheduledFrequencyOutputWithContext(context.Context) ScheduledFrequencyOutput
}

var scheduledFrequencyPtrType = reflect.TypeOf((**ScheduledFrequency)(nil)).Elem()

type ScheduledFrequencyPtrInput interface {
	pulumi.Input

	ToScheduledFrequencyPtrOutput() ScheduledFrequencyPtrOutput
	ToScheduledFrequencyPtrOutputWithContext(context.Context) ScheduledFrequencyPtrOutput
}

type scheduledFrequencyPtr string

func ScheduledFrequencyPtr(v string) ScheduledFrequencyPtrInput {
	return (*scheduledFrequencyPtr)(&v)
}

func (*scheduledFrequencyPtr) ElementType() reflect.Type {
	return scheduledFrequencyPtrType
}

func (in *scheduledFrequencyPtr) ToScheduledFrequencyPtrOutput() ScheduledFrequencyPtrOutput {
	return pulumi.ToOutput(in).(ScheduledFrequencyPtrOutput)
}

func (in *scheduledFrequencyPtr) ToScheduledFrequencyPtrOutputWithContext(ctx context.Context) ScheduledFrequencyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ScheduledFrequencyPtrOutput)
}

// Supported type this scheduled task represents.
type ScheduledType string

const (
	ScheduledTypeStopDevBox = ScheduledType("StopDevBox")
)

func (ScheduledType) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduledType)(nil)).Elem()
}

func (e ScheduledType) ToScheduledTypeOutput() ScheduledTypeOutput {
	return pulumi.ToOutput(e).(ScheduledTypeOutput)
}

func (e ScheduledType) ToScheduledTypeOutputWithContext(ctx context.Context) ScheduledTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ScheduledTypeOutput)
}

func (e ScheduledType) ToScheduledTypePtrOutput() ScheduledTypePtrOutput {
	return e.ToScheduledTypePtrOutputWithContext(context.Background())
}

func (e ScheduledType) ToScheduledTypePtrOutputWithContext(ctx context.Context) ScheduledTypePtrOutput {
	return ScheduledType(e).ToScheduledTypeOutputWithContext(ctx).ToScheduledTypePtrOutputWithContext(ctx)
}

func (e ScheduledType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ScheduledType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ScheduledType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ScheduledType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ScheduledTypeOutput struct{ *pulumi.OutputState }

func (ScheduledTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduledType)(nil)).Elem()
}

func (o ScheduledTypeOutput) ToScheduledTypeOutput() ScheduledTypeOutput {
	return o
}

func (o ScheduledTypeOutput) ToScheduledTypeOutputWithContext(ctx context.Context) ScheduledTypeOutput {
	return o
}

func (o ScheduledTypeOutput) ToScheduledTypePtrOutput() ScheduledTypePtrOutput {
	return o.ToScheduledTypePtrOutputWithContext(context.Background())
}

func (o ScheduledTypeOutput) ToScheduledTypePtrOutputWithContext(ctx context.Context) ScheduledTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ScheduledType) *ScheduledType {
		return &v
	}).(ScheduledTypePtrOutput)
}

func (o ScheduledTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ScheduledTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ScheduledType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ScheduledTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ScheduledTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ScheduledType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ScheduledTypePtrOutput struct{ *pulumi.OutputState }

func (ScheduledTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ScheduledType)(nil)).Elem()
}

func (o ScheduledTypePtrOutput) ToScheduledTypePtrOutput() ScheduledTypePtrOutput {
	return o
}

func (o ScheduledTypePtrOutput) ToScheduledTypePtrOutputWithContext(ctx context.Context) ScheduledTypePtrOutput {
	return o
}

func (o ScheduledTypePtrOutput) Elem() ScheduledTypeOutput {
	return o.ApplyT(func(v *ScheduledType) ScheduledType {
		if v != nil {
			return *v
		}
		var ret ScheduledType
		return ret
	}).(ScheduledTypeOutput)
}

func (o ScheduledTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ScheduledTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ScheduledType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ScheduledTypeInput is an input type that accepts values of the ScheduledType enum
// A concrete instance of `ScheduledTypeInput` can be one of the following:
//
//	ScheduledTypeStopDevBox
type ScheduledTypeInput interface {
	pulumi.Input

	ToScheduledTypeOutput() ScheduledTypeOutput
	ToScheduledTypeOutputWithContext(context.Context) ScheduledTypeOutput
}

var scheduledTypePtrType = reflect.TypeOf((**ScheduledType)(nil)).Elem()

type ScheduledTypePtrInput interface {
	pulumi.Input

	ToScheduledTypePtrOutput() ScheduledTypePtrOutput
	ToScheduledTypePtrOutputWithContext(context.Context) ScheduledTypePtrOutput
}

type scheduledTypePtr string

func ScheduledTypePtr(v string) ScheduledTypePtrInput {
	return (*scheduledTypePtr)(&v)
}

func (*scheduledTypePtr) ElementType() reflect.Type {
	return scheduledTypePtrType
}

func (in *scheduledTypePtr) ToScheduledTypePtrOutput() ScheduledTypePtrOutput {
	return pulumi.ToOutput(in).(ScheduledTypePtrOutput)
}

func (in *scheduledTypePtr) ToScheduledTypePtrOutputWithContext(ctx context.Context) ScheduledTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ScheduledTypePtrOutput)
}

// This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.
type SkuTier string

const (
	SkuTierFree     = SkuTier("Free")
	SkuTierBasic    = SkuTier("Basic")
	SkuTierStandard = SkuTier("Standard")
	SkuTierPremium  = SkuTier("Premium")
)

func (SkuTier) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuTier)(nil)).Elem()
}

func (e SkuTier) ToSkuTierOutput() SkuTierOutput {
	return pulumi.ToOutput(e).(SkuTierOutput)
}

func (e SkuTier) ToSkuTierOutputWithContext(ctx context.Context) SkuTierOutput {
	return pulumi.ToOutputWithContext(ctx, e).(SkuTierOutput)
}

func (e SkuTier) ToSkuTierPtrOutput() SkuTierPtrOutput {
	return e.ToSkuTierPtrOutputWithContext(context.Background())
}

func (e SkuTier) ToSkuTierPtrOutputWithContext(ctx context.Context) SkuTierPtrOutput {
	return SkuTier(e).ToSkuTierOutputWithContext(ctx).ToSkuTierPtrOutputWithContext(ctx)
}

func (e SkuTier) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e SkuTier) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e SkuTier) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e SkuTier) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type SkuTierOutput struct{ *pulumi.OutputState }

func (SkuTierOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuTier)(nil)).Elem()
}

func (o SkuTierOutput) ToSkuTierOutput() SkuTierOutput {
	return o
}

func (o SkuTierOutput) ToSkuTierOutputWithContext(ctx context.Context) SkuTierOutput {
	return o
}

func (o SkuTierOutput) ToSkuTierPtrOutput() SkuTierPtrOutput {
	return o.ToSkuTierPtrOutputWithContext(context.Background())
}

func (o SkuTierOutput) ToSkuTierPtrOutputWithContext(ctx context.Context) SkuTierPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SkuTier) *SkuTier {
		return &v
	}).(SkuTierPtrOutput)
}

func (o SkuTierOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o SkuTierOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SkuTier) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o SkuTierOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SkuTierOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SkuTier) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type SkuTierPtrOutput struct{ *pulumi.OutputState }

func (SkuTierPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SkuTier)(nil)).Elem()
}

func (o SkuTierPtrOutput) ToSkuTierPtrOutput() SkuTierPtrOutput {
	return o
}

func (o SkuTierPtrOutput) ToSkuTierPtrOutputWithContext(ctx context.Context) SkuTierPtrOutput {
	return o
}

func (o SkuTierPtrOutput) Elem() SkuTierOutput {
	return o.ApplyT(func(v *SkuTier) SkuTier {
		if v != nil {
			return *v
		}
		var ret SkuTier
		return ret
	}).(SkuTierOutput)
}

func (o SkuTierPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SkuTierPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *SkuTier) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// SkuTierInput is an input type that accepts values of the SkuTier enum
// A concrete instance of `SkuTierInput` can be one of the following:
//
//	SkuTierFree
//	SkuTierBasic
//	SkuTierStandard
//	SkuTierPremium
type SkuTierInput interface {
	pulumi.Input

	ToSkuTierOutput() SkuTierOutput
	ToSkuTierOutputWithContext(context.Context) SkuTierOutput
}

var skuTierPtrType = reflect.TypeOf((**SkuTier)(nil)).Elem()

type SkuTierPtrInput interface {
	pulumi.Input

	ToSkuTierPtrOutput() SkuTierPtrOutput
	ToSkuTierPtrOutputWithContext(context.Context) SkuTierPtrOutput
}

type skuTierPtr string

func SkuTierPtr(v string) SkuTierPtrInput {
	return (*skuTierPtr)(&v)
}

func (*skuTierPtr) ElementType() reflect.Type {
	return skuTierPtrType
}

func (in *skuTierPtr) ToSkuTierPtrOutput() SkuTierPtrOutput {
	return pulumi.ToOutput(in).(SkuTierPtrOutput)
}

func (in *skuTierPtr) ToSkuTierPtrOutputWithContext(ctx context.Context) SkuTierPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(SkuTierPtrOutput)
}

// Whether the feature to stop the Dev Box on disconnect once the grace period has lapsed is enabled.
type StopOnDisconnectEnableStatus string

const (
	StopOnDisconnectEnableStatusEnabled  = StopOnDisconnectEnableStatus("Enabled")
	StopOnDisconnectEnableStatusDisabled = StopOnDisconnectEnableStatus("Disabled")
)

func (StopOnDisconnectEnableStatus) ElementType() reflect.Type {
	return reflect.TypeOf((*StopOnDisconnectEnableStatus)(nil)).Elem()
}

func (e StopOnDisconnectEnableStatus) ToStopOnDisconnectEnableStatusOutput() StopOnDisconnectEnableStatusOutput {
	return pulumi.ToOutput(e).(StopOnDisconnectEnableStatusOutput)
}

func (e StopOnDisconnectEnableStatus) ToStopOnDisconnectEnableStatusOutputWithContext(ctx context.Context) StopOnDisconnectEnableStatusOutput {
	return pulumi.ToOutputWithContext(ctx, e).(StopOnDisconnectEnableStatusOutput)
}

func (e StopOnDisconnectEnableStatus) ToStopOnDisconnectEnableStatusPtrOutput() StopOnDisconnectEnableStatusPtrOutput {
	return e.ToStopOnDisconnectEnableStatusPtrOutputWithContext(context.Background())
}

func (e StopOnDisconnectEnableStatus) ToStopOnDisconnectEnableStatusPtrOutputWithContext(ctx context.Context) StopOnDisconnectEnableStatusPtrOutput {
	return StopOnDisconnectEnableStatus(e).ToStopOnDisconnectEnableStatusOutputWithContext(ctx).ToStopOnDisconnectEnableStatusPtrOutputWithContext(ctx)
}

func (e StopOnDisconnectEnableStatus) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e StopOnDisconnectEnableStatus) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e StopOnDisconnectEnableStatus) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e StopOnDisconnectEnableStatus) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type StopOnDisconnectEnableStatusOutput struct{ *pulumi.OutputState }

func (StopOnDisconnectEnableStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StopOnDisconnectEnableStatus)(nil)).Elem()
}

func (o StopOnDisconnectEnableStatusOutput) ToStopOnDisconnectEnableStatusOutput() StopOnDisconnectEnableStatusOutput {
	return o
}

func (o StopOnDisconnectEnableStatusOutput) ToStopOnDisconnectEnableStatusOutputWithContext(ctx context.Context) StopOnDisconnectEnableStatusOutput {
	return o
}

func (o StopOnDisconnectEnableStatusOutput) ToStopOnDisconnectEnableStatusPtrOutput() StopOnDisconnectEnableStatusPtrOutput {
	return o.ToStopOnDisconnectEnableStatusPtrOutputWithContext(context.Background())
}

func (o StopOnDisconnectEnableStatusOutput) ToStopOnDisconnectEnableStatusPtrOutputWithContext(ctx context.Context) StopOnDisconnectEnableStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v StopOnDisconnectEnableStatus) *StopOnDisconnectEnableStatus {
		return &v
	}).(StopOnDisconnectEnableStatusPtrOutput)
}

func (o StopOnDisconnectEnableStatusOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o StopOnDisconnectEnableStatusOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e StopOnDisconnectEnableStatus) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o StopOnDisconnectEnableStatusOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o StopOnDisconnectEnableStatusOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e StopOnDisconnectEnableStatus) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type StopOnDisconnectEnableStatusPtrOutput struct{ *pulumi.OutputState }

func (StopOnDisconnectEnableStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StopOnDisconnectEnableStatus)(nil)).Elem()
}

func (o StopOnDisconnectEnableStatusPtrOutput) ToStopOnDisconnectEnableStatusPtrOutput() StopOnDisconnectEnableStatusPtrOutput {
	return o
}

func (o StopOnDisconnectEnableStatusPtrOutput) ToStopOnDisconnectEnableStatusPtrOutputWithContext(ctx context.Context) StopOnDisconnectEnableStatusPtrOutput {
	return o
}

func (o StopOnDisconnectEnableStatusPtrOutput) Elem() StopOnDisconnectEnableStatusOutput {
	return o.ApplyT(func(v *StopOnDisconnectEnableStatus) StopOnDisconnectEnableStatus {
		if v != nil {
			return *v
		}
		var ret StopOnDisconnectEnableStatus
		return ret
	}).(StopOnDisconnectEnableStatusOutput)
}

func (o StopOnDisconnectEnableStatusPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o StopOnDisconnectEnableStatusPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *StopOnDisconnectEnableStatus) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// StopOnDisconnectEnableStatusInput is an input type that accepts values of the StopOnDisconnectEnableStatus enum
// A concrete instance of `StopOnDisconnectEnableStatusInput` can be one of the following:
//
//	StopOnDisconnectEnableStatusEnabled
//	StopOnDisconnectEnableStatusDisabled
type StopOnDisconnectEnableStatusInput interface {
	pulumi.Input

	ToStopOnDisconnectEnableStatusOutput() StopOnDisconnectEnableStatusOutput
	ToStopOnDisconnectEnableStatusOutputWithContext(context.Context) StopOnDisconnectEnableStatusOutput
}

var stopOnDisconnectEnableStatusPtrType = reflect.TypeOf((**StopOnDisconnectEnableStatus)(nil)).Elem()

type StopOnDisconnectEnableStatusPtrInput interface {
	pulumi.Input

	ToStopOnDisconnectEnableStatusPtrOutput() StopOnDisconnectEnableStatusPtrOutput
	ToStopOnDisconnectEnableStatusPtrOutputWithContext(context.Context) StopOnDisconnectEnableStatusPtrOutput
}

type stopOnDisconnectEnableStatusPtr string

func StopOnDisconnectEnableStatusPtr(v string) StopOnDisconnectEnableStatusPtrInput {
	return (*stopOnDisconnectEnableStatusPtr)(&v)
}

func (*stopOnDisconnectEnableStatusPtr) ElementType() reflect.Type {
	return stopOnDisconnectEnableStatusPtrType
}

func (in *stopOnDisconnectEnableStatusPtr) ToStopOnDisconnectEnableStatusPtrOutput() StopOnDisconnectEnableStatusPtrOutput {
	return pulumi.ToOutput(in).(StopOnDisconnectEnableStatusPtrOutput)
}

func (in *stopOnDisconnectEnableStatusPtr) ToStopOnDisconnectEnableStatusPtrOutputWithContext(ctx context.Context) StopOnDisconnectEnableStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(StopOnDisconnectEnableStatusPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(DomainJoinTypeOutput{})
	pulumi.RegisterOutputType(DomainJoinTypePtrOutput{})
	pulumi.RegisterOutputType(EnvironmentTypeEnableStatusOutput{})
	pulumi.RegisterOutputType(EnvironmentTypeEnableStatusPtrOutput{})
	pulumi.RegisterOutputType(HibernateSupportOutput{})
	pulumi.RegisterOutputType(HibernateSupportPtrOutput{})
	pulumi.RegisterOutputType(LicenseTypeOutput{})
	pulumi.RegisterOutputType(LicenseTypePtrOutput{})
	pulumi.RegisterOutputType(LocalAdminStatusOutput{})
	pulumi.RegisterOutputType(LocalAdminStatusPtrOutput{})
	pulumi.RegisterOutputType(ManagedServiceIdentityTypeOutput{})
	pulumi.RegisterOutputType(ManagedServiceIdentityTypePtrOutput{})
	pulumi.RegisterOutputType(ScheduleEnableStatusOutput{})
	pulumi.RegisterOutputType(ScheduleEnableStatusPtrOutput{})
	pulumi.RegisterOutputType(ScheduledFrequencyOutput{})
	pulumi.RegisterOutputType(ScheduledFrequencyPtrOutput{})
	pulumi.RegisterOutputType(ScheduledTypeOutput{})
	pulumi.RegisterOutputType(ScheduledTypePtrOutput{})
	pulumi.RegisterOutputType(SkuTierOutput{})
	pulumi.RegisterOutputType(SkuTierPtrOutput{})
	pulumi.RegisterOutputType(StopOnDisconnectEnableStatusOutput{})
	pulumi.RegisterOutputType(StopOnDisconnectEnableStatusPtrOutput{})
}
