// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20241001preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Gets a specific curation profile.
func LookupCurationProfile(ctx *pulumi.Context, args *LookupCurationProfileArgs, opts ...pulumi.InvokeOption) (*LookupCurationProfileResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv LookupCurationProfileResult
	err := ctx.Invoke("azure-native:devcenter/v20241001preview:getCurationProfile", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupCurationProfileArgs struct {
	// The name of the curation profile.
	CurationProfileName string `pulumi:"curationProfileName"`
	// The name of the devcenter.
	DevCenterName string `pulumi:"devCenterName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// Represents an curation profile resource.
type LookupCurationProfileResult struct {
	// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
	Id string `pulumi:"id"`
	// The name of the resource
	Name string `pulumi:"name"`
	// The provisioning state of the resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// Resource policies that are a part of this curation profile.
	ResourcePolicies []ResourcePolicyResponse `pulumi:"resourcePolicies"`
	// Resources that have access to the shared resources that are a part of this curation profile.
	Scopes []string `pulumi:"scopes"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponse `pulumi:"systemData"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type string `pulumi:"type"`
}

func LookupCurationProfileOutput(ctx *pulumi.Context, args LookupCurationProfileOutputArgs, opts ...pulumi.InvokeOption) LookupCurationProfileResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupCurationProfileResultOutput, error) {
			args := v.(LookupCurationProfileArgs)
			opts = utilities.PkgInvokeDefaultOpts(opts)
			var rv LookupCurationProfileResult
			secret, err := ctx.InvokePackageRaw("azure-native:devcenter/v20241001preview:getCurationProfile", args, &rv, "", opts...)
			if err != nil {
				return LookupCurationProfileResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(LookupCurationProfileResultOutput)
			if secret {
				return pulumi.ToSecret(output).(LookupCurationProfileResultOutput), nil
			}
			return output, nil
		}).(LookupCurationProfileResultOutput)
}

type LookupCurationProfileOutputArgs struct {
	// The name of the curation profile.
	CurationProfileName pulumi.StringInput `pulumi:"curationProfileName"`
	// The name of the devcenter.
	DevCenterName pulumi.StringInput `pulumi:"devCenterName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
}

func (LookupCurationProfileOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupCurationProfileArgs)(nil)).Elem()
}

// Represents an curation profile resource.
type LookupCurationProfileResultOutput struct{ *pulumi.OutputState }

func (LookupCurationProfileResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupCurationProfileResult)(nil)).Elem()
}

func (o LookupCurationProfileResultOutput) ToLookupCurationProfileResultOutput() LookupCurationProfileResultOutput {
	return o
}

func (o LookupCurationProfileResultOutput) ToLookupCurationProfileResultOutputWithContext(ctx context.Context) LookupCurationProfileResultOutput {
	return o
}

// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
func (o LookupCurationProfileResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCurationProfileResult) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the resource
func (o LookupCurationProfileResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCurationProfileResult) string { return v.Name }).(pulumi.StringOutput)
}

// The provisioning state of the resource.
func (o LookupCurationProfileResultOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCurationProfileResult) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Resource policies that are a part of this curation profile.
func (o LookupCurationProfileResultOutput) ResourcePolicies() ResourcePolicyResponseArrayOutput {
	return o.ApplyT(func(v LookupCurationProfileResult) []ResourcePolicyResponse { return v.ResourcePolicies }).(ResourcePolicyResponseArrayOutput)
}

// Resources that have access to the shared resources that are a part of this curation profile.
func (o LookupCurationProfileResultOutput) Scopes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupCurationProfileResult) []string { return v.Scopes }).(pulumi.StringArrayOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o LookupCurationProfileResultOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v LookupCurationProfileResult) SystemDataResponse { return v.SystemData }).(SystemDataResponseOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o LookupCurationProfileResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCurationProfileResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupCurationProfileResultOutput{})
}
