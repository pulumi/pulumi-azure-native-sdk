// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package devcenter

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v3/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Gets Build details
//
// Uses Azure REST API version 2025-04-01-preview.
func GetDevCenterCatalogImageDefinitionBuildDetails(ctx *pulumi.Context, args *GetDevCenterCatalogImageDefinitionBuildDetailsArgs, opts ...pulumi.InvokeOption) (*GetDevCenterCatalogImageDefinitionBuildDetailsResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv GetDevCenterCatalogImageDefinitionBuildDetailsResult
	err := ctx.Invoke("azure-native:devcenter:getDevCenterCatalogImageDefinitionBuildDetails", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type GetDevCenterCatalogImageDefinitionBuildDetailsArgs struct {
	// The ID of the Image Definition Build.
	BuildName string `pulumi:"buildName"`
	// The name of the Catalog.
	CatalogName string `pulumi:"catalogName"`
	// The name of the devcenter.
	DevCenterName string `pulumi:"devCenterName"`
	// The name of the Image Definition.
	ImageDefinitionName string `pulumi:"imageDefinitionName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// Represents a specific build of an Image Definition.
type GetDevCenterCatalogImageDefinitionBuildDetailsResult struct {
	// End time of the task group.
	EndTime string `pulumi:"endTime"`
	// Details for image creation error. Populated when the image creation is not successful.
	ErrorDetails ImageCreationErrorDetailsResponse `pulumi:"errorDetails"`
	// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
	Id string `pulumi:"id"`
	// The specific image version used by the build.
	ImageReference ImageReferenceResponse `pulumi:"imageReference"`
	// The name of the resource
	Name string `pulumi:"name"`
	// Start time of the task group.
	StartTime string `pulumi:"startTime"`
	// The status of the build.
	Status string `pulumi:"status"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponse `pulumi:"systemData"`
	// The list of task groups executed during the image definition build.
	TaskGroups []ImageDefinitionBuildTaskGroupResponse `pulumi:"taskGroups"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type string `pulumi:"type"`
}

func GetDevCenterCatalogImageDefinitionBuildDetailsOutput(ctx *pulumi.Context, args GetDevCenterCatalogImageDefinitionBuildDetailsOutputArgs, opts ...pulumi.InvokeOption) GetDevCenterCatalogImageDefinitionBuildDetailsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetDevCenterCatalogImageDefinitionBuildDetailsResultOutput, error) {
			args := v.(GetDevCenterCatalogImageDefinitionBuildDetailsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: utilities.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("azure-native:devcenter:getDevCenterCatalogImageDefinitionBuildDetails", args, GetDevCenterCatalogImageDefinitionBuildDetailsResultOutput{}, options).(GetDevCenterCatalogImageDefinitionBuildDetailsResultOutput), nil
		}).(GetDevCenterCatalogImageDefinitionBuildDetailsResultOutput)
}

type GetDevCenterCatalogImageDefinitionBuildDetailsOutputArgs struct {
	// The ID of the Image Definition Build.
	BuildName pulumi.StringInput `pulumi:"buildName"`
	// The name of the Catalog.
	CatalogName pulumi.StringInput `pulumi:"catalogName"`
	// The name of the devcenter.
	DevCenterName pulumi.StringInput `pulumi:"devCenterName"`
	// The name of the Image Definition.
	ImageDefinitionName pulumi.StringInput `pulumi:"imageDefinitionName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
}

func (GetDevCenterCatalogImageDefinitionBuildDetailsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDevCenterCatalogImageDefinitionBuildDetailsArgs)(nil)).Elem()
}

// Represents a specific build of an Image Definition.
type GetDevCenterCatalogImageDefinitionBuildDetailsResultOutput struct{ *pulumi.OutputState }

func (GetDevCenterCatalogImageDefinitionBuildDetailsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDevCenterCatalogImageDefinitionBuildDetailsResult)(nil)).Elem()
}

func (o GetDevCenterCatalogImageDefinitionBuildDetailsResultOutput) ToGetDevCenterCatalogImageDefinitionBuildDetailsResultOutput() GetDevCenterCatalogImageDefinitionBuildDetailsResultOutput {
	return o
}

func (o GetDevCenterCatalogImageDefinitionBuildDetailsResultOutput) ToGetDevCenterCatalogImageDefinitionBuildDetailsResultOutputWithContext(ctx context.Context) GetDevCenterCatalogImageDefinitionBuildDetailsResultOutput {
	return o
}

// End time of the task group.
func (o GetDevCenterCatalogImageDefinitionBuildDetailsResultOutput) EndTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetDevCenterCatalogImageDefinitionBuildDetailsResult) string { return v.EndTime }).(pulumi.StringOutput)
}

// Details for image creation error. Populated when the image creation is not successful.
func (o GetDevCenterCatalogImageDefinitionBuildDetailsResultOutput) ErrorDetails() ImageCreationErrorDetailsResponseOutput {
	return o.ApplyT(func(v GetDevCenterCatalogImageDefinitionBuildDetailsResult) ImageCreationErrorDetailsResponse {
		return v.ErrorDetails
	}).(ImageCreationErrorDetailsResponseOutput)
}

// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
func (o GetDevCenterCatalogImageDefinitionBuildDetailsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetDevCenterCatalogImageDefinitionBuildDetailsResult) string { return v.Id }).(pulumi.StringOutput)
}

// The specific image version used by the build.
func (o GetDevCenterCatalogImageDefinitionBuildDetailsResultOutput) ImageReference() ImageReferenceResponseOutput {
	return o.ApplyT(func(v GetDevCenterCatalogImageDefinitionBuildDetailsResult) ImageReferenceResponse {
		return v.ImageReference
	}).(ImageReferenceResponseOutput)
}

// The name of the resource
func (o GetDevCenterCatalogImageDefinitionBuildDetailsResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetDevCenterCatalogImageDefinitionBuildDetailsResult) string { return v.Name }).(pulumi.StringOutput)
}

// Start time of the task group.
func (o GetDevCenterCatalogImageDefinitionBuildDetailsResultOutput) StartTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetDevCenterCatalogImageDefinitionBuildDetailsResult) string { return v.StartTime }).(pulumi.StringOutput)
}

// The status of the build.
func (o GetDevCenterCatalogImageDefinitionBuildDetailsResultOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetDevCenterCatalogImageDefinitionBuildDetailsResult) string { return v.Status }).(pulumi.StringOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o GetDevCenterCatalogImageDefinitionBuildDetailsResultOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v GetDevCenterCatalogImageDefinitionBuildDetailsResult) SystemDataResponse { return v.SystemData }).(SystemDataResponseOutput)
}

// The list of task groups executed during the image definition build.
func (o GetDevCenterCatalogImageDefinitionBuildDetailsResultOutput) TaskGroups() ImageDefinitionBuildTaskGroupResponseArrayOutput {
	return o.ApplyT(func(v GetDevCenterCatalogImageDefinitionBuildDetailsResult) []ImageDefinitionBuildTaskGroupResponse {
		return v.TaskGroups
	}).(ImageDefinitionBuildTaskGroupResponseArrayOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o GetDevCenterCatalogImageDefinitionBuildDetailsResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetDevCenterCatalogImageDefinitionBuildDetailsResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetDevCenterCatalogImageDefinitionBuildDetailsResultOutput{})
}
