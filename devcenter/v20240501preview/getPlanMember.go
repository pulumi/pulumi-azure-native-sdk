// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20240501preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Gets a devcenter plan member.
func LookupPlanMember(ctx *pulumi.Context, args *LookupPlanMemberArgs, opts ...pulumi.InvokeOption) (*LookupPlanMemberResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv LookupPlanMemberResult
	err := ctx.Invoke("azure-native:devcenter/v20240501preview:getPlanMember", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupPlanMemberArgs struct {
	// The name of a devcenter plan member.
	MemberName string `pulumi:"memberName"`
	// The name of the devcenter plan.
	PlanName string `pulumi:"planName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// Represents a devcenter plan member resource.
type LookupPlanMemberResult struct {
	// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
	Id string `pulumi:"id"`
	// The unique id of the member.
	MemberId *string `pulumi:"memberId"`
	// The type of the member (user, group)
	MemberType *string `pulumi:"memberType"`
	// The name of the resource
	Name string `pulumi:"name"`
	// The provisioning state of the resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponse `pulumi:"systemData"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type string `pulumi:"type"`
}

func LookupPlanMemberOutput(ctx *pulumi.Context, args LookupPlanMemberOutputArgs, opts ...pulumi.InvokeOption) LookupPlanMemberResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupPlanMemberResult, error) {
			args := v.(LookupPlanMemberArgs)
			r, err := LookupPlanMember(ctx, &args, opts...)
			var s LookupPlanMemberResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupPlanMemberResultOutput)
}

type LookupPlanMemberOutputArgs struct {
	// The name of a devcenter plan member.
	MemberName pulumi.StringInput `pulumi:"memberName"`
	// The name of the devcenter plan.
	PlanName pulumi.StringInput `pulumi:"planName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
}

func (LookupPlanMemberOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupPlanMemberArgs)(nil)).Elem()
}

// Represents a devcenter plan member resource.
type LookupPlanMemberResultOutput struct{ *pulumi.OutputState }

func (LookupPlanMemberResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupPlanMemberResult)(nil)).Elem()
}

func (o LookupPlanMemberResultOutput) ToLookupPlanMemberResultOutput() LookupPlanMemberResultOutput {
	return o
}

func (o LookupPlanMemberResultOutput) ToLookupPlanMemberResultOutputWithContext(ctx context.Context) LookupPlanMemberResultOutput {
	return o
}

// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
func (o LookupPlanMemberResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPlanMemberResult) string { return v.Id }).(pulumi.StringOutput)
}

// The unique id of the member.
func (o LookupPlanMemberResultOutput) MemberId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupPlanMemberResult) *string { return v.MemberId }).(pulumi.StringPtrOutput)
}

// The type of the member (user, group)
func (o LookupPlanMemberResultOutput) MemberType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupPlanMemberResult) *string { return v.MemberType }).(pulumi.StringPtrOutput)
}

// The name of the resource
func (o LookupPlanMemberResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPlanMemberResult) string { return v.Name }).(pulumi.StringOutput)
}

// The provisioning state of the resource.
func (o LookupPlanMemberResultOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPlanMemberResult) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o LookupPlanMemberResultOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v LookupPlanMemberResult) SystemDataResponse { return v.SystemData }).(SystemDataResponseOutput)
}

// Resource tags.
func (o LookupPlanMemberResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupPlanMemberResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o LookupPlanMemberResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPlanMemberResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupPlanMemberResultOutput{})
}
