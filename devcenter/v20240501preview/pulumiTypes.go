// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20240501preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = utilities.GetEnvOrDefault

// An individual conflict error.
type CatalogConflictErrorResponse struct {
	// Name of the conflicting catalog item.
	Name string `pulumi:"name"`
	// The path of the file that has a conflicting name.
	Path string `pulumi:"path"`
}

// An individual conflict error.
type CatalogConflictErrorResponseOutput struct{ *pulumi.OutputState }

func (CatalogConflictErrorResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CatalogConflictErrorResponse)(nil)).Elem()
}

func (o CatalogConflictErrorResponseOutput) ToCatalogConflictErrorResponseOutput() CatalogConflictErrorResponseOutput {
	return o
}

func (o CatalogConflictErrorResponseOutput) ToCatalogConflictErrorResponseOutputWithContext(ctx context.Context) CatalogConflictErrorResponseOutput {
	return o
}

// Name of the conflicting catalog item.
func (o CatalogConflictErrorResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v CatalogConflictErrorResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The path of the file that has a conflicting name.
func (o CatalogConflictErrorResponseOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v CatalogConflictErrorResponse) string { return v.Path }).(pulumi.StringOutput)
}

type CatalogConflictErrorResponseArrayOutput struct{ *pulumi.OutputState }

func (CatalogConflictErrorResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CatalogConflictErrorResponse)(nil)).Elem()
}

func (o CatalogConflictErrorResponseArrayOutput) ToCatalogConflictErrorResponseArrayOutput() CatalogConflictErrorResponseArrayOutput {
	return o
}

func (o CatalogConflictErrorResponseArrayOutput) ToCatalogConflictErrorResponseArrayOutputWithContext(ctx context.Context) CatalogConflictErrorResponseArrayOutput {
	return o
}

func (o CatalogConflictErrorResponseArrayOutput) Index(i pulumi.IntInput) CatalogConflictErrorResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CatalogConflictErrorResponse {
		return vs[0].([]CatalogConflictErrorResponse)[vs[1].(int)]
	}).(CatalogConflictErrorResponseOutput)
}

// Catalog error details
type CatalogErrorDetailsResponse struct {
	// An identifier for the error.
	Code *string `pulumi:"code"`
	// A message describing the error.
	Message *string `pulumi:"message"`
}

// Catalog error details
type CatalogErrorDetailsResponseOutput struct{ *pulumi.OutputState }

func (CatalogErrorDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CatalogErrorDetailsResponse)(nil)).Elem()
}

func (o CatalogErrorDetailsResponseOutput) ToCatalogErrorDetailsResponseOutput() CatalogErrorDetailsResponseOutput {
	return o
}

func (o CatalogErrorDetailsResponseOutput) ToCatalogErrorDetailsResponseOutputWithContext(ctx context.Context) CatalogErrorDetailsResponseOutput {
	return o
}

// An identifier for the error.
func (o CatalogErrorDetailsResponseOutput) Code() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CatalogErrorDetailsResponse) *string { return v.Code }).(pulumi.StringPtrOutput)
}

// A message describing the error.
func (o CatalogErrorDetailsResponseOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CatalogErrorDetailsResponse) *string { return v.Message }).(pulumi.StringPtrOutput)
}

type CatalogErrorDetailsResponseArrayOutput struct{ *pulumi.OutputState }

func (CatalogErrorDetailsResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CatalogErrorDetailsResponse)(nil)).Elem()
}

func (o CatalogErrorDetailsResponseArrayOutput) ToCatalogErrorDetailsResponseArrayOutput() CatalogErrorDetailsResponseArrayOutput {
	return o
}

func (o CatalogErrorDetailsResponseArrayOutput) ToCatalogErrorDetailsResponseArrayOutputWithContext(ctx context.Context) CatalogErrorDetailsResponseArrayOutput {
	return o
}

func (o CatalogErrorDetailsResponseArrayOutput) Index(i pulumi.IntInput) CatalogErrorDetailsResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CatalogErrorDetailsResponse {
		return vs[0].([]CatalogErrorDetailsResponse)[vs[1].(int)]
	}).(CatalogErrorDetailsResponseOutput)
}

// An individual synchronization error.
type CatalogSyncErrorResponse struct {
	// Errors associated with the file.
	ErrorDetails []CatalogErrorDetailsResponse `pulumi:"errorDetails"`
	// The path of the file the error is associated with.
	Path string `pulumi:"path"`
}

// An individual synchronization error.
type CatalogSyncErrorResponseOutput struct{ *pulumi.OutputState }

func (CatalogSyncErrorResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CatalogSyncErrorResponse)(nil)).Elem()
}

func (o CatalogSyncErrorResponseOutput) ToCatalogSyncErrorResponseOutput() CatalogSyncErrorResponseOutput {
	return o
}

func (o CatalogSyncErrorResponseOutput) ToCatalogSyncErrorResponseOutputWithContext(ctx context.Context) CatalogSyncErrorResponseOutput {
	return o
}

// Errors associated with the file.
func (o CatalogSyncErrorResponseOutput) ErrorDetails() CatalogErrorDetailsResponseArrayOutput {
	return o.ApplyT(func(v CatalogSyncErrorResponse) []CatalogErrorDetailsResponse { return v.ErrorDetails }).(CatalogErrorDetailsResponseArrayOutput)
}

// The path of the file the error is associated with.
func (o CatalogSyncErrorResponseOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v CatalogSyncErrorResponse) string { return v.Path }).(pulumi.StringOutput)
}

type CatalogSyncErrorResponseArrayOutput struct{ *pulumi.OutputState }

func (CatalogSyncErrorResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CatalogSyncErrorResponse)(nil)).Elem()
}

func (o CatalogSyncErrorResponseArrayOutput) ToCatalogSyncErrorResponseArrayOutput() CatalogSyncErrorResponseArrayOutput {
	return o
}

func (o CatalogSyncErrorResponseArrayOutput) ToCatalogSyncErrorResponseArrayOutputWithContext(ctx context.Context) CatalogSyncErrorResponseArrayOutput {
	return o
}

func (o CatalogSyncErrorResponseArrayOutput) Index(i pulumi.IntInput) CatalogSyncErrorResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CatalogSyncErrorResponse {
		return vs[0].([]CatalogSyncErrorResponse)[vs[1].(int)]
	}).(CatalogSyncErrorResponseOutput)
}

// All Customer-managed key encryption properties for the resource.
type CustomerManagedKeyEncryption struct {
	// All identity configuration for Customer-managed key settings defining which identity should be used to auth to Key Vault.
	KeyEncryptionKeyIdentity *CustomerManagedKeyEncryptionKeyEncryptionKeyIdentity `pulumi:"keyEncryptionKeyIdentity"`
	// key encryption key Url, versioned or non-versioned. Ex: https://contosovault.vault.azure.net/keys/contosokek/562a4bb76b524a1493a6afe8e536ee78 or https://contosovault.vault.azure.net/keys/contosokek.
	KeyEncryptionKeyUrl *string `pulumi:"keyEncryptionKeyUrl"`
}

// CustomerManagedKeyEncryptionInput is an input type that accepts CustomerManagedKeyEncryptionArgs and CustomerManagedKeyEncryptionOutput values.
// You can construct a concrete instance of `CustomerManagedKeyEncryptionInput` via:
//
//	CustomerManagedKeyEncryptionArgs{...}
type CustomerManagedKeyEncryptionInput interface {
	pulumi.Input

	ToCustomerManagedKeyEncryptionOutput() CustomerManagedKeyEncryptionOutput
	ToCustomerManagedKeyEncryptionOutputWithContext(context.Context) CustomerManagedKeyEncryptionOutput
}

// All Customer-managed key encryption properties for the resource.
type CustomerManagedKeyEncryptionArgs struct {
	// All identity configuration for Customer-managed key settings defining which identity should be used to auth to Key Vault.
	KeyEncryptionKeyIdentity CustomerManagedKeyEncryptionKeyEncryptionKeyIdentityPtrInput `pulumi:"keyEncryptionKeyIdentity"`
	// key encryption key Url, versioned or non-versioned. Ex: https://contosovault.vault.azure.net/keys/contosokek/562a4bb76b524a1493a6afe8e536ee78 or https://contosovault.vault.azure.net/keys/contosokek.
	KeyEncryptionKeyUrl pulumi.StringPtrInput `pulumi:"keyEncryptionKeyUrl"`
}

func (CustomerManagedKeyEncryptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomerManagedKeyEncryption)(nil)).Elem()
}

func (i CustomerManagedKeyEncryptionArgs) ToCustomerManagedKeyEncryptionOutput() CustomerManagedKeyEncryptionOutput {
	return i.ToCustomerManagedKeyEncryptionOutputWithContext(context.Background())
}

func (i CustomerManagedKeyEncryptionArgs) ToCustomerManagedKeyEncryptionOutputWithContext(ctx context.Context) CustomerManagedKeyEncryptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomerManagedKeyEncryptionOutput)
}

func (i CustomerManagedKeyEncryptionArgs) ToCustomerManagedKeyEncryptionPtrOutput() CustomerManagedKeyEncryptionPtrOutput {
	return i.ToCustomerManagedKeyEncryptionPtrOutputWithContext(context.Background())
}

func (i CustomerManagedKeyEncryptionArgs) ToCustomerManagedKeyEncryptionPtrOutputWithContext(ctx context.Context) CustomerManagedKeyEncryptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomerManagedKeyEncryptionOutput).ToCustomerManagedKeyEncryptionPtrOutputWithContext(ctx)
}

// CustomerManagedKeyEncryptionPtrInput is an input type that accepts CustomerManagedKeyEncryptionArgs, CustomerManagedKeyEncryptionPtr and CustomerManagedKeyEncryptionPtrOutput values.
// You can construct a concrete instance of `CustomerManagedKeyEncryptionPtrInput` via:
//
//	        CustomerManagedKeyEncryptionArgs{...}
//
//	or:
//
//	        nil
type CustomerManagedKeyEncryptionPtrInput interface {
	pulumi.Input

	ToCustomerManagedKeyEncryptionPtrOutput() CustomerManagedKeyEncryptionPtrOutput
	ToCustomerManagedKeyEncryptionPtrOutputWithContext(context.Context) CustomerManagedKeyEncryptionPtrOutput
}

type customerManagedKeyEncryptionPtrType CustomerManagedKeyEncryptionArgs

func CustomerManagedKeyEncryptionPtr(v *CustomerManagedKeyEncryptionArgs) CustomerManagedKeyEncryptionPtrInput {
	return (*customerManagedKeyEncryptionPtrType)(v)
}

func (*customerManagedKeyEncryptionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomerManagedKeyEncryption)(nil)).Elem()
}

func (i *customerManagedKeyEncryptionPtrType) ToCustomerManagedKeyEncryptionPtrOutput() CustomerManagedKeyEncryptionPtrOutput {
	return i.ToCustomerManagedKeyEncryptionPtrOutputWithContext(context.Background())
}

func (i *customerManagedKeyEncryptionPtrType) ToCustomerManagedKeyEncryptionPtrOutputWithContext(ctx context.Context) CustomerManagedKeyEncryptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomerManagedKeyEncryptionPtrOutput)
}

// All Customer-managed key encryption properties for the resource.
type CustomerManagedKeyEncryptionOutput struct{ *pulumi.OutputState }

func (CustomerManagedKeyEncryptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomerManagedKeyEncryption)(nil)).Elem()
}

func (o CustomerManagedKeyEncryptionOutput) ToCustomerManagedKeyEncryptionOutput() CustomerManagedKeyEncryptionOutput {
	return o
}

func (o CustomerManagedKeyEncryptionOutput) ToCustomerManagedKeyEncryptionOutputWithContext(ctx context.Context) CustomerManagedKeyEncryptionOutput {
	return o
}

func (o CustomerManagedKeyEncryptionOutput) ToCustomerManagedKeyEncryptionPtrOutput() CustomerManagedKeyEncryptionPtrOutput {
	return o.ToCustomerManagedKeyEncryptionPtrOutputWithContext(context.Background())
}

func (o CustomerManagedKeyEncryptionOutput) ToCustomerManagedKeyEncryptionPtrOutputWithContext(ctx context.Context) CustomerManagedKeyEncryptionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CustomerManagedKeyEncryption) *CustomerManagedKeyEncryption {
		return &v
	}).(CustomerManagedKeyEncryptionPtrOutput)
}

// All identity configuration for Customer-managed key settings defining which identity should be used to auth to Key Vault.
func (o CustomerManagedKeyEncryptionOutput) KeyEncryptionKeyIdentity() CustomerManagedKeyEncryptionKeyEncryptionKeyIdentityPtrOutput {
	return o.ApplyT(func(v CustomerManagedKeyEncryption) *CustomerManagedKeyEncryptionKeyEncryptionKeyIdentity {
		return v.KeyEncryptionKeyIdentity
	}).(CustomerManagedKeyEncryptionKeyEncryptionKeyIdentityPtrOutput)
}

// key encryption key Url, versioned or non-versioned. Ex: https://contosovault.vault.azure.net/keys/contosokek/562a4bb76b524a1493a6afe8e536ee78 or https://contosovault.vault.azure.net/keys/contosokek.
func (o CustomerManagedKeyEncryptionOutput) KeyEncryptionKeyUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomerManagedKeyEncryption) *string { return v.KeyEncryptionKeyUrl }).(pulumi.StringPtrOutput)
}

type CustomerManagedKeyEncryptionPtrOutput struct{ *pulumi.OutputState }

func (CustomerManagedKeyEncryptionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomerManagedKeyEncryption)(nil)).Elem()
}

func (o CustomerManagedKeyEncryptionPtrOutput) ToCustomerManagedKeyEncryptionPtrOutput() CustomerManagedKeyEncryptionPtrOutput {
	return o
}

func (o CustomerManagedKeyEncryptionPtrOutput) ToCustomerManagedKeyEncryptionPtrOutputWithContext(ctx context.Context) CustomerManagedKeyEncryptionPtrOutput {
	return o
}

func (o CustomerManagedKeyEncryptionPtrOutput) Elem() CustomerManagedKeyEncryptionOutput {
	return o.ApplyT(func(v *CustomerManagedKeyEncryption) CustomerManagedKeyEncryption {
		if v != nil {
			return *v
		}
		var ret CustomerManagedKeyEncryption
		return ret
	}).(CustomerManagedKeyEncryptionOutput)
}

// All identity configuration for Customer-managed key settings defining which identity should be used to auth to Key Vault.
func (o CustomerManagedKeyEncryptionPtrOutput) KeyEncryptionKeyIdentity() CustomerManagedKeyEncryptionKeyEncryptionKeyIdentityPtrOutput {
	return o.ApplyT(func(v *CustomerManagedKeyEncryption) *CustomerManagedKeyEncryptionKeyEncryptionKeyIdentity {
		if v == nil {
			return nil
		}
		return v.KeyEncryptionKeyIdentity
	}).(CustomerManagedKeyEncryptionKeyEncryptionKeyIdentityPtrOutput)
}

// key encryption key Url, versioned or non-versioned. Ex: https://contosovault.vault.azure.net/keys/contosokek/562a4bb76b524a1493a6afe8e536ee78 or https://contosovault.vault.azure.net/keys/contosokek.
func (o CustomerManagedKeyEncryptionPtrOutput) KeyEncryptionKeyUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CustomerManagedKeyEncryption) *string {
		if v == nil {
			return nil
		}
		return v.KeyEncryptionKeyUrl
	}).(pulumi.StringPtrOutput)
}

// All identity configuration for Customer-managed key settings defining which identity should be used to auth to Key Vault.
type CustomerManagedKeyEncryptionKeyEncryptionKeyIdentity struct {
	// delegated identity to use for accessing key encryption key Url. Ex: /subscriptions/fa5fc227-a624-475e-b696-cdd604c735bc/resourceGroups/<resource group>/providers/Microsoft.ManagedIdentity/userAssignedIdentities/myId. Mutually exclusive with identityType systemAssignedIdentity and userAssignedIdentity - internal use only.
	DelegatedIdentityClientId *string `pulumi:"delegatedIdentityClientId"`
	// Values can be systemAssignedIdentity or userAssignedIdentity
	IdentityType *string `pulumi:"identityType"`
	// user assigned identity to use for accessing key encryption key Url. Ex: /subscriptions/fa5fc227-a624-475e-b696-cdd604c735bc/resourceGroups/<resource group>/providers/Microsoft.ManagedIdentity/userAssignedIdentities/myId. Mutually exclusive with identityType systemAssignedIdentity and delegatedResourceIdentity.
	UserAssignedIdentityResourceId *string `pulumi:"userAssignedIdentityResourceId"`
}

// CustomerManagedKeyEncryptionKeyEncryptionKeyIdentityInput is an input type that accepts CustomerManagedKeyEncryptionKeyEncryptionKeyIdentityArgs and CustomerManagedKeyEncryptionKeyEncryptionKeyIdentityOutput values.
// You can construct a concrete instance of `CustomerManagedKeyEncryptionKeyEncryptionKeyIdentityInput` via:
//
//	CustomerManagedKeyEncryptionKeyEncryptionKeyIdentityArgs{...}
type CustomerManagedKeyEncryptionKeyEncryptionKeyIdentityInput interface {
	pulumi.Input

	ToCustomerManagedKeyEncryptionKeyEncryptionKeyIdentityOutput() CustomerManagedKeyEncryptionKeyEncryptionKeyIdentityOutput
	ToCustomerManagedKeyEncryptionKeyEncryptionKeyIdentityOutputWithContext(context.Context) CustomerManagedKeyEncryptionKeyEncryptionKeyIdentityOutput
}

// All identity configuration for Customer-managed key settings defining which identity should be used to auth to Key Vault.
type CustomerManagedKeyEncryptionKeyEncryptionKeyIdentityArgs struct {
	// delegated identity to use for accessing key encryption key Url. Ex: /subscriptions/fa5fc227-a624-475e-b696-cdd604c735bc/resourceGroups/<resource group>/providers/Microsoft.ManagedIdentity/userAssignedIdentities/myId. Mutually exclusive with identityType systemAssignedIdentity and userAssignedIdentity - internal use only.
	DelegatedIdentityClientId pulumi.StringPtrInput `pulumi:"delegatedIdentityClientId"`
	// Values can be systemAssignedIdentity or userAssignedIdentity
	IdentityType pulumi.StringPtrInput `pulumi:"identityType"`
	// user assigned identity to use for accessing key encryption key Url. Ex: /subscriptions/fa5fc227-a624-475e-b696-cdd604c735bc/resourceGroups/<resource group>/providers/Microsoft.ManagedIdentity/userAssignedIdentities/myId. Mutually exclusive with identityType systemAssignedIdentity and delegatedResourceIdentity.
	UserAssignedIdentityResourceId pulumi.StringPtrInput `pulumi:"userAssignedIdentityResourceId"`
}

func (CustomerManagedKeyEncryptionKeyEncryptionKeyIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomerManagedKeyEncryptionKeyEncryptionKeyIdentity)(nil)).Elem()
}

func (i CustomerManagedKeyEncryptionKeyEncryptionKeyIdentityArgs) ToCustomerManagedKeyEncryptionKeyEncryptionKeyIdentityOutput() CustomerManagedKeyEncryptionKeyEncryptionKeyIdentityOutput {
	return i.ToCustomerManagedKeyEncryptionKeyEncryptionKeyIdentityOutputWithContext(context.Background())
}

func (i CustomerManagedKeyEncryptionKeyEncryptionKeyIdentityArgs) ToCustomerManagedKeyEncryptionKeyEncryptionKeyIdentityOutputWithContext(ctx context.Context) CustomerManagedKeyEncryptionKeyEncryptionKeyIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomerManagedKeyEncryptionKeyEncryptionKeyIdentityOutput)
}

func (i CustomerManagedKeyEncryptionKeyEncryptionKeyIdentityArgs) ToCustomerManagedKeyEncryptionKeyEncryptionKeyIdentityPtrOutput() CustomerManagedKeyEncryptionKeyEncryptionKeyIdentityPtrOutput {
	return i.ToCustomerManagedKeyEncryptionKeyEncryptionKeyIdentityPtrOutputWithContext(context.Background())
}

func (i CustomerManagedKeyEncryptionKeyEncryptionKeyIdentityArgs) ToCustomerManagedKeyEncryptionKeyEncryptionKeyIdentityPtrOutputWithContext(ctx context.Context) CustomerManagedKeyEncryptionKeyEncryptionKeyIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomerManagedKeyEncryptionKeyEncryptionKeyIdentityOutput).ToCustomerManagedKeyEncryptionKeyEncryptionKeyIdentityPtrOutputWithContext(ctx)
}

// CustomerManagedKeyEncryptionKeyEncryptionKeyIdentityPtrInput is an input type that accepts CustomerManagedKeyEncryptionKeyEncryptionKeyIdentityArgs, CustomerManagedKeyEncryptionKeyEncryptionKeyIdentityPtr and CustomerManagedKeyEncryptionKeyEncryptionKeyIdentityPtrOutput values.
// You can construct a concrete instance of `CustomerManagedKeyEncryptionKeyEncryptionKeyIdentityPtrInput` via:
//
//	        CustomerManagedKeyEncryptionKeyEncryptionKeyIdentityArgs{...}
//
//	or:
//
//	        nil
type CustomerManagedKeyEncryptionKeyEncryptionKeyIdentityPtrInput interface {
	pulumi.Input

	ToCustomerManagedKeyEncryptionKeyEncryptionKeyIdentityPtrOutput() CustomerManagedKeyEncryptionKeyEncryptionKeyIdentityPtrOutput
	ToCustomerManagedKeyEncryptionKeyEncryptionKeyIdentityPtrOutputWithContext(context.Context) CustomerManagedKeyEncryptionKeyEncryptionKeyIdentityPtrOutput
}

type customerManagedKeyEncryptionKeyEncryptionKeyIdentityPtrType CustomerManagedKeyEncryptionKeyEncryptionKeyIdentityArgs

func CustomerManagedKeyEncryptionKeyEncryptionKeyIdentityPtr(v *CustomerManagedKeyEncryptionKeyEncryptionKeyIdentityArgs) CustomerManagedKeyEncryptionKeyEncryptionKeyIdentityPtrInput {
	return (*customerManagedKeyEncryptionKeyEncryptionKeyIdentityPtrType)(v)
}

func (*customerManagedKeyEncryptionKeyEncryptionKeyIdentityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomerManagedKeyEncryptionKeyEncryptionKeyIdentity)(nil)).Elem()
}

func (i *customerManagedKeyEncryptionKeyEncryptionKeyIdentityPtrType) ToCustomerManagedKeyEncryptionKeyEncryptionKeyIdentityPtrOutput() CustomerManagedKeyEncryptionKeyEncryptionKeyIdentityPtrOutput {
	return i.ToCustomerManagedKeyEncryptionKeyEncryptionKeyIdentityPtrOutputWithContext(context.Background())
}

func (i *customerManagedKeyEncryptionKeyEncryptionKeyIdentityPtrType) ToCustomerManagedKeyEncryptionKeyEncryptionKeyIdentityPtrOutputWithContext(ctx context.Context) CustomerManagedKeyEncryptionKeyEncryptionKeyIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomerManagedKeyEncryptionKeyEncryptionKeyIdentityPtrOutput)
}

// All identity configuration for Customer-managed key settings defining which identity should be used to auth to Key Vault.
type CustomerManagedKeyEncryptionKeyEncryptionKeyIdentityOutput struct{ *pulumi.OutputState }

func (CustomerManagedKeyEncryptionKeyEncryptionKeyIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomerManagedKeyEncryptionKeyEncryptionKeyIdentity)(nil)).Elem()
}

func (o CustomerManagedKeyEncryptionKeyEncryptionKeyIdentityOutput) ToCustomerManagedKeyEncryptionKeyEncryptionKeyIdentityOutput() CustomerManagedKeyEncryptionKeyEncryptionKeyIdentityOutput {
	return o
}

func (o CustomerManagedKeyEncryptionKeyEncryptionKeyIdentityOutput) ToCustomerManagedKeyEncryptionKeyEncryptionKeyIdentityOutputWithContext(ctx context.Context) CustomerManagedKeyEncryptionKeyEncryptionKeyIdentityOutput {
	return o
}

func (o CustomerManagedKeyEncryptionKeyEncryptionKeyIdentityOutput) ToCustomerManagedKeyEncryptionKeyEncryptionKeyIdentityPtrOutput() CustomerManagedKeyEncryptionKeyEncryptionKeyIdentityPtrOutput {
	return o.ToCustomerManagedKeyEncryptionKeyEncryptionKeyIdentityPtrOutputWithContext(context.Background())
}

func (o CustomerManagedKeyEncryptionKeyEncryptionKeyIdentityOutput) ToCustomerManagedKeyEncryptionKeyEncryptionKeyIdentityPtrOutputWithContext(ctx context.Context) CustomerManagedKeyEncryptionKeyEncryptionKeyIdentityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CustomerManagedKeyEncryptionKeyEncryptionKeyIdentity) *CustomerManagedKeyEncryptionKeyEncryptionKeyIdentity {
		return &v
	}).(CustomerManagedKeyEncryptionKeyEncryptionKeyIdentityPtrOutput)
}

// delegated identity to use for accessing key encryption key Url. Ex: /subscriptions/fa5fc227-a624-475e-b696-cdd604c735bc/resourceGroups/<resource group>/providers/Microsoft.ManagedIdentity/userAssignedIdentities/myId. Mutually exclusive with identityType systemAssignedIdentity and userAssignedIdentity - internal use only.
func (o CustomerManagedKeyEncryptionKeyEncryptionKeyIdentityOutput) DelegatedIdentityClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomerManagedKeyEncryptionKeyEncryptionKeyIdentity) *string {
		return v.DelegatedIdentityClientId
	}).(pulumi.StringPtrOutput)
}

// Values can be systemAssignedIdentity or userAssignedIdentity
func (o CustomerManagedKeyEncryptionKeyEncryptionKeyIdentityOutput) IdentityType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomerManagedKeyEncryptionKeyEncryptionKeyIdentity) *string { return v.IdentityType }).(pulumi.StringPtrOutput)
}

// user assigned identity to use for accessing key encryption key Url. Ex: /subscriptions/fa5fc227-a624-475e-b696-cdd604c735bc/resourceGroups/<resource group>/providers/Microsoft.ManagedIdentity/userAssignedIdentities/myId. Mutually exclusive with identityType systemAssignedIdentity and delegatedResourceIdentity.
func (o CustomerManagedKeyEncryptionKeyEncryptionKeyIdentityOutput) UserAssignedIdentityResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomerManagedKeyEncryptionKeyEncryptionKeyIdentity) *string {
		return v.UserAssignedIdentityResourceId
	}).(pulumi.StringPtrOutput)
}

type CustomerManagedKeyEncryptionKeyEncryptionKeyIdentityPtrOutput struct{ *pulumi.OutputState }

func (CustomerManagedKeyEncryptionKeyEncryptionKeyIdentityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomerManagedKeyEncryptionKeyEncryptionKeyIdentity)(nil)).Elem()
}

func (o CustomerManagedKeyEncryptionKeyEncryptionKeyIdentityPtrOutput) ToCustomerManagedKeyEncryptionKeyEncryptionKeyIdentityPtrOutput() CustomerManagedKeyEncryptionKeyEncryptionKeyIdentityPtrOutput {
	return o
}

func (o CustomerManagedKeyEncryptionKeyEncryptionKeyIdentityPtrOutput) ToCustomerManagedKeyEncryptionKeyEncryptionKeyIdentityPtrOutputWithContext(ctx context.Context) CustomerManagedKeyEncryptionKeyEncryptionKeyIdentityPtrOutput {
	return o
}

func (o CustomerManagedKeyEncryptionKeyEncryptionKeyIdentityPtrOutput) Elem() CustomerManagedKeyEncryptionKeyEncryptionKeyIdentityOutput {
	return o.ApplyT(func(v *CustomerManagedKeyEncryptionKeyEncryptionKeyIdentity) CustomerManagedKeyEncryptionKeyEncryptionKeyIdentity {
		if v != nil {
			return *v
		}
		var ret CustomerManagedKeyEncryptionKeyEncryptionKeyIdentity
		return ret
	}).(CustomerManagedKeyEncryptionKeyEncryptionKeyIdentityOutput)
}

// delegated identity to use for accessing key encryption key Url. Ex: /subscriptions/fa5fc227-a624-475e-b696-cdd604c735bc/resourceGroups/<resource group>/providers/Microsoft.ManagedIdentity/userAssignedIdentities/myId. Mutually exclusive with identityType systemAssignedIdentity and userAssignedIdentity - internal use only.
func (o CustomerManagedKeyEncryptionKeyEncryptionKeyIdentityPtrOutput) DelegatedIdentityClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CustomerManagedKeyEncryptionKeyEncryptionKeyIdentity) *string {
		if v == nil {
			return nil
		}
		return v.DelegatedIdentityClientId
	}).(pulumi.StringPtrOutput)
}

// Values can be systemAssignedIdentity or userAssignedIdentity
func (o CustomerManagedKeyEncryptionKeyEncryptionKeyIdentityPtrOutput) IdentityType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CustomerManagedKeyEncryptionKeyEncryptionKeyIdentity) *string {
		if v == nil {
			return nil
		}
		return v.IdentityType
	}).(pulumi.StringPtrOutput)
}

// user assigned identity to use for accessing key encryption key Url. Ex: /subscriptions/fa5fc227-a624-475e-b696-cdd604c735bc/resourceGroups/<resource group>/providers/Microsoft.ManagedIdentity/userAssignedIdentities/myId. Mutually exclusive with identityType systemAssignedIdentity and delegatedResourceIdentity.
func (o CustomerManagedKeyEncryptionKeyEncryptionKeyIdentityPtrOutput) UserAssignedIdentityResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CustomerManagedKeyEncryptionKeyEncryptionKeyIdentity) *string {
		if v == nil {
			return nil
		}
		return v.UserAssignedIdentityResourceId
	}).(pulumi.StringPtrOutput)
}

// All Customer-managed key encryption properties for the resource.
type CustomerManagedKeyEncryptionResponse struct {
	// All identity configuration for Customer-managed key settings defining which identity should be used to auth to Key Vault.
	KeyEncryptionKeyIdentity *CustomerManagedKeyEncryptionResponseKeyEncryptionKeyIdentity `pulumi:"keyEncryptionKeyIdentity"`
	// key encryption key Url, versioned or non-versioned. Ex: https://contosovault.vault.azure.net/keys/contosokek/562a4bb76b524a1493a6afe8e536ee78 or https://contosovault.vault.azure.net/keys/contosokek.
	KeyEncryptionKeyUrl *string `pulumi:"keyEncryptionKeyUrl"`
}

// All Customer-managed key encryption properties for the resource.
type CustomerManagedKeyEncryptionResponseOutput struct{ *pulumi.OutputState }

func (CustomerManagedKeyEncryptionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomerManagedKeyEncryptionResponse)(nil)).Elem()
}

func (o CustomerManagedKeyEncryptionResponseOutput) ToCustomerManagedKeyEncryptionResponseOutput() CustomerManagedKeyEncryptionResponseOutput {
	return o
}

func (o CustomerManagedKeyEncryptionResponseOutput) ToCustomerManagedKeyEncryptionResponseOutputWithContext(ctx context.Context) CustomerManagedKeyEncryptionResponseOutput {
	return o
}

// All identity configuration for Customer-managed key settings defining which identity should be used to auth to Key Vault.
func (o CustomerManagedKeyEncryptionResponseOutput) KeyEncryptionKeyIdentity() CustomerManagedKeyEncryptionResponseKeyEncryptionKeyIdentityPtrOutput {
	return o.ApplyT(func(v CustomerManagedKeyEncryptionResponse) *CustomerManagedKeyEncryptionResponseKeyEncryptionKeyIdentity {
		return v.KeyEncryptionKeyIdentity
	}).(CustomerManagedKeyEncryptionResponseKeyEncryptionKeyIdentityPtrOutput)
}

// key encryption key Url, versioned or non-versioned. Ex: https://contosovault.vault.azure.net/keys/contosokek/562a4bb76b524a1493a6afe8e536ee78 or https://contosovault.vault.azure.net/keys/contosokek.
func (o CustomerManagedKeyEncryptionResponseOutput) KeyEncryptionKeyUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomerManagedKeyEncryptionResponse) *string { return v.KeyEncryptionKeyUrl }).(pulumi.StringPtrOutput)
}

type CustomerManagedKeyEncryptionResponsePtrOutput struct{ *pulumi.OutputState }

func (CustomerManagedKeyEncryptionResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomerManagedKeyEncryptionResponse)(nil)).Elem()
}

func (o CustomerManagedKeyEncryptionResponsePtrOutput) ToCustomerManagedKeyEncryptionResponsePtrOutput() CustomerManagedKeyEncryptionResponsePtrOutput {
	return o
}

func (o CustomerManagedKeyEncryptionResponsePtrOutput) ToCustomerManagedKeyEncryptionResponsePtrOutputWithContext(ctx context.Context) CustomerManagedKeyEncryptionResponsePtrOutput {
	return o
}

func (o CustomerManagedKeyEncryptionResponsePtrOutput) Elem() CustomerManagedKeyEncryptionResponseOutput {
	return o.ApplyT(func(v *CustomerManagedKeyEncryptionResponse) CustomerManagedKeyEncryptionResponse {
		if v != nil {
			return *v
		}
		var ret CustomerManagedKeyEncryptionResponse
		return ret
	}).(CustomerManagedKeyEncryptionResponseOutput)
}

// All identity configuration for Customer-managed key settings defining which identity should be used to auth to Key Vault.
func (o CustomerManagedKeyEncryptionResponsePtrOutput) KeyEncryptionKeyIdentity() CustomerManagedKeyEncryptionResponseKeyEncryptionKeyIdentityPtrOutput {
	return o.ApplyT(func(v *CustomerManagedKeyEncryptionResponse) *CustomerManagedKeyEncryptionResponseKeyEncryptionKeyIdentity {
		if v == nil {
			return nil
		}
		return v.KeyEncryptionKeyIdentity
	}).(CustomerManagedKeyEncryptionResponseKeyEncryptionKeyIdentityPtrOutput)
}

// key encryption key Url, versioned or non-versioned. Ex: https://contosovault.vault.azure.net/keys/contosokek/562a4bb76b524a1493a6afe8e536ee78 or https://contosovault.vault.azure.net/keys/contosokek.
func (o CustomerManagedKeyEncryptionResponsePtrOutput) KeyEncryptionKeyUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CustomerManagedKeyEncryptionResponse) *string {
		if v == nil {
			return nil
		}
		return v.KeyEncryptionKeyUrl
	}).(pulumi.StringPtrOutput)
}

// All identity configuration for Customer-managed key settings defining which identity should be used to auth to Key Vault.
type CustomerManagedKeyEncryptionResponseKeyEncryptionKeyIdentity struct {
	// delegated identity to use for accessing key encryption key Url. Ex: /subscriptions/fa5fc227-a624-475e-b696-cdd604c735bc/resourceGroups/<resource group>/providers/Microsoft.ManagedIdentity/userAssignedIdentities/myId. Mutually exclusive with identityType systemAssignedIdentity and userAssignedIdentity - internal use only.
	DelegatedIdentityClientId *string `pulumi:"delegatedIdentityClientId"`
	// Values can be systemAssignedIdentity or userAssignedIdentity
	IdentityType *string `pulumi:"identityType"`
	// user assigned identity to use for accessing key encryption key Url. Ex: /subscriptions/fa5fc227-a624-475e-b696-cdd604c735bc/resourceGroups/<resource group>/providers/Microsoft.ManagedIdentity/userAssignedIdentities/myId. Mutually exclusive with identityType systemAssignedIdentity and delegatedResourceIdentity.
	UserAssignedIdentityResourceId *string `pulumi:"userAssignedIdentityResourceId"`
}

// All identity configuration for Customer-managed key settings defining which identity should be used to auth to Key Vault.
type CustomerManagedKeyEncryptionResponseKeyEncryptionKeyIdentityOutput struct{ *pulumi.OutputState }

func (CustomerManagedKeyEncryptionResponseKeyEncryptionKeyIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomerManagedKeyEncryptionResponseKeyEncryptionKeyIdentity)(nil)).Elem()
}

func (o CustomerManagedKeyEncryptionResponseKeyEncryptionKeyIdentityOutput) ToCustomerManagedKeyEncryptionResponseKeyEncryptionKeyIdentityOutput() CustomerManagedKeyEncryptionResponseKeyEncryptionKeyIdentityOutput {
	return o
}

func (o CustomerManagedKeyEncryptionResponseKeyEncryptionKeyIdentityOutput) ToCustomerManagedKeyEncryptionResponseKeyEncryptionKeyIdentityOutputWithContext(ctx context.Context) CustomerManagedKeyEncryptionResponseKeyEncryptionKeyIdentityOutput {
	return o
}

// delegated identity to use for accessing key encryption key Url. Ex: /subscriptions/fa5fc227-a624-475e-b696-cdd604c735bc/resourceGroups/<resource group>/providers/Microsoft.ManagedIdentity/userAssignedIdentities/myId. Mutually exclusive with identityType systemAssignedIdentity and userAssignedIdentity - internal use only.
func (o CustomerManagedKeyEncryptionResponseKeyEncryptionKeyIdentityOutput) DelegatedIdentityClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomerManagedKeyEncryptionResponseKeyEncryptionKeyIdentity) *string {
		return v.DelegatedIdentityClientId
	}).(pulumi.StringPtrOutput)
}

// Values can be systemAssignedIdentity or userAssignedIdentity
func (o CustomerManagedKeyEncryptionResponseKeyEncryptionKeyIdentityOutput) IdentityType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomerManagedKeyEncryptionResponseKeyEncryptionKeyIdentity) *string { return v.IdentityType }).(pulumi.StringPtrOutput)
}

// user assigned identity to use for accessing key encryption key Url. Ex: /subscriptions/fa5fc227-a624-475e-b696-cdd604c735bc/resourceGroups/<resource group>/providers/Microsoft.ManagedIdentity/userAssignedIdentities/myId. Mutually exclusive with identityType systemAssignedIdentity and delegatedResourceIdentity.
func (o CustomerManagedKeyEncryptionResponseKeyEncryptionKeyIdentityOutput) UserAssignedIdentityResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomerManagedKeyEncryptionResponseKeyEncryptionKeyIdentity) *string {
		return v.UserAssignedIdentityResourceId
	}).(pulumi.StringPtrOutput)
}

type CustomerManagedKeyEncryptionResponseKeyEncryptionKeyIdentityPtrOutput struct{ *pulumi.OutputState }

func (CustomerManagedKeyEncryptionResponseKeyEncryptionKeyIdentityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomerManagedKeyEncryptionResponseKeyEncryptionKeyIdentity)(nil)).Elem()
}

func (o CustomerManagedKeyEncryptionResponseKeyEncryptionKeyIdentityPtrOutput) ToCustomerManagedKeyEncryptionResponseKeyEncryptionKeyIdentityPtrOutput() CustomerManagedKeyEncryptionResponseKeyEncryptionKeyIdentityPtrOutput {
	return o
}

func (o CustomerManagedKeyEncryptionResponseKeyEncryptionKeyIdentityPtrOutput) ToCustomerManagedKeyEncryptionResponseKeyEncryptionKeyIdentityPtrOutputWithContext(ctx context.Context) CustomerManagedKeyEncryptionResponseKeyEncryptionKeyIdentityPtrOutput {
	return o
}

func (o CustomerManagedKeyEncryptionResponseKeyEncryptionKeyIdentityPtrOutput) Elem() CustomerManagedKeyEncryptionResponseKeyEncryptionKeyIdentityOutput {
	return o.ApplyT(func(v *CustomerManagedKeyEncryptionResponseKeyEncryptionKeyIdentity) CustomerManagedKeyEncryptionResponseKeyEncryptionKeyIdentity {
		if v != nil {
			return *v
		}
		var ret CustomerManagedKeyEncryptionResponseKeyEncryptionKeyIdentity
		return ret
	}).(CustomerManagedKeyEncryptionResponseKeyEncryptionKeyIdentityOutput)
}

// delegated identity to use for accessing key encryption key Url. Ex: /subscriptions/fa5fc227-a624-475e-b696-cdd604c735bc/resourceGroups/<resource group>/providers/Microsoft.ManagedIdentity/userAssignedIdentities/myId. Mutually exclusive with identityType systemAssignedIdentity and userAssignedIdentity - internal use only.
func (o CustomerManagedKeyEncryptionResponseKeyEncryptionKeyIdentityPtrOutput) DelegatedIdentityClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CustomerManagedKeyEncryptionResponseKeyEncryptionKeyIdentity) *string {
		if v == nil {
			return nil
		}
		return v.DelegatedIdentityClientId
	}).(pulumi.StringPtrOutput)
}

// Values can be systemAssignedIdentity or userAssignedIdentity
func (o CustomerManagedKeyEncryptionResponseKeyEncryptionKeyIdentityPtrOutput) IdentityType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CustomerManagedKeyEncryptionResponseKeyEncryptionKeyIdentity) *string {
		if v == nil {
			return nil
		}
		return v.IdentityType
	}).(pulumi.StringPtrOutput)
}

// user assigned identity to use for accessing key encryption key Url. Ex: /subscriptions/fa5fc227-a624-475e-b696-cdd604c735bc/resourceGroups/<resource group>/providers/Microsoft.ManagedIdentity/userAssignedIdentities/myId. Mutually exclusive with identityType systemAssignedIdentity and delegatedResourceIdentity.
func (o CustomerManagedKeyEncryptionResponseKeyEncryptionKeyIdentityPtrOutput) UserAssignedIdentityResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CustomerManagedKeyEncryptionResponseKeyEncryptionKeyIdentity) *string {
		if v == nil {
			return nil
		}
		return v.UserAssignedIdentityResourceId
	}).(pulumi.StringPtrOutput)
}

// Provisioning settings that apply to all Dev Boxes created in this dev center
type DevBoxProvisioningSettings struct {
	// Whether project catalogs associated with projects in this dev center can be configured to sync catalog items.
	InstallAzureMonitorAgentEnableStatus *string `pulumi:"installAzureMonitorAgentEnableStatus"`
}

// DevBoxProvisioningSettingsInput is an input type that accepts DevBoxProvisioningSettingsArgs and DevBoxProvisioningSettingsOutput values.
// You can construct a concrete instance of `DevBoxProvisioningSettingsInput` via:
//
//	DevBoxProvisioningSettingsArgs{...}
type DevBoxProvisioningSettingsInput interface {
	pulumi.Input

	ToDevBoxProvisioningSettingsOutput() DevBoxProvisioningSettingsOutput
	ToDevBoxProvisioningSettingsOutputWithContext(context.Context) DevBoxProvisioningSettingsOutput
}

// Provisioning settings that apply to all Dev Boxes created in this dev center
type DevBoxProvisioningSettingsArgs struct {
	// Whether project catalogs associated with projects in this dev center can be configured to sync catalog items.
	InstallAzureMonitorAgentEnableStatus pulumi.StringPtrInput `pulumi:"installAzureMonitorAgentEnableStatus"`
}

func (DevBoxProvisioningSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DevBoxProvisioningSettings)(nil)).Elem()
}

func (i DevBoxProvisioningSettingsArgs) ToDevBoxProvisioningSettingsOutput() DevBoxProvisioningSettingsOutput {
	return i.ToDevBoxProvisioningSettingsOutputWithContext(context.Background())
}

func (i DevBoxProvisioningSettingsArgs) ToDevBoxProvisioningSettingsOutputWithContext(ctx context.Context) DevBoxProvisioningSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DevBoxProvisioningSettingsOutput)
}

func (i DevBoxProvisioningSettingsArgs) ToDevBoxProvisioningSettingsPtrOutput() DevBoxProvisioningSettingsPtrOutput {
	return i.ToDevBoxProvisioningSettingsPtrOutputWithContext(context.Background())
}

func (i DevBoxProvisioningSettingsArgs) ToDevBoxProvisioningSettingsPtrOutputWithContext(ctx context.Context) DevBoxProvisioningSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DevBoxProvisioningSettingsOutput).ToDevBoxProvisioningSettingsPtrOutputWithContext(ctx)
}

// DevBoxProvisioningSettingsPtrInput is an input type that accepts DevBoxProvisioningSettingsArgs, DevBoxProvisioningSettingsPtr and DevBoxProvisioningSettingsPtrOutput values.
// You can construct a concrete instance of `DevBoxProvisioningSettingsPtrInput` via:
//
//	        DevBoxProvisioningSettingsArgs{...}
//
//	or:
//
//	        nil
type DevBoxProvisioningSettingsPtrInput interface {
	pulumi.Input

	ToDevBoxProvisioningSettingsPtrOutput() DevBoxProvisioningSettingsPtrOutput
	ToDevBoxProvisioningSettingsPtrOutputWithContext(context.Context) DevBoxProvisioningSettingsPtrOutput
}

type devBoxProvisioningSettingsPtrType DevBoxProvisioningSettingsArgs

func DevBoxProvisioningSettingsPtr(v *DevBoxProvisioningSettingsArgs) DevBoxProvisioningSettingsPtrInput {
	return (*devBoxProvisioningSettingsPtrType)(v)
}

func (*devBoxProvisioningSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DevBoxProvisioningSettings)(nil)).Elem()
}

func (i *devBoxProvisioningSettingsPtrType) ToDevBoxProvisioningSettingsPtrOutput() DevBoxProvisioningSettingsPtrOutput {
	return i.ToDevBoxProvisioningSettingsPtrOutputWithContext(context.Background())
}

func (i *devBoxProvisioningSettingsPtrType) ToDevBoxProvisioningSettingsPtrOutputWithContext(ctx context.Context) DevBoxProvisioningSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DevBoxProvisioningSettingsPtrOutput)
}

// Provisioning settings that apply to all Dev Boxes created in this dev center
type DevBoxProvisioningSettingsOutput struct{ *pulumi.OutputState }

func (DevBoxProvisioningSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DevBoxProvisioningSettings)(nil)).Elem()
}

func (o DevBoxProvisioningSettingsOutput) ToDevBoxProvisioningSettingsOutput() DevBoxProvisioningSettingsOutput {
	return o
}

func (o DevBoxProvisioningSettingsOutput) ToDevBoxProvisioningSettingsOutputWithContext(ctx context.Context) DevBoxProvisioningSettingsOutput {
	return o
}

func (o DevBoxProvisioningSettingsOutput) ToDevBoxProvisioningSettingsPtrOutput() DevBoxProvisioningSettingsPtrOutput {
	return o.ToDevBoxProvisioningSettingsPtrOutputWithContext(context.Background())
}

func (o DevBoxProvisioningSettingsOutput) ToDevBoxProvisioningSettingsPtrOutputWithContext(ctx context.Context) DevBoxProvisioningSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DevBoxProvisioningSettings) *DevBoxProvisioningSettings {
		return &v
	}).(DevBoxProvisioningSettingsPtrOutput)
}

// Whether project catalogs associated with projects in this dev center can be configured to sync catalog items.
func (o DevBoxProvisioningSettingsOutput) InstallAzureMonitorAgentEnableStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DevBoxProvisioningSettings) *string { return v.InstallAzureMonitorAgentEnableStatus }).(pulumi.StringPtrOutput)
}

type DevBoxProvisioningSettingsPtrOutput struct{ *pulumi.OutputState }

func (DevBoxProvisioningSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DevBoxProvisioningSettings)(nil)).Elem()
}

func (o DevBoxProvisioningSettingsPtrOutput) ToDevBoxProvisioningSettingsPtrOutput() DevBoxProvisioningSettingsPtrOutput {
	return o
}

func (o DevBoxProvisioningSettingsPtrOutput) ToDevBoxProvisioningSettingsPtrOutputWithContext(ctx context.Context) DevBoxProvisioningSettingsPtrOutput {
	return o
}

func (o DevBoxProvisioningSettingsPtrOutput) Elem() DevBoxProvisioningSettingsOutput {
	return o.ApplyT(func(v *DevBoxProvisioningSettings) DevBoxProvisioningSettings {
		if v != nil {
			return *v
		}
		var ret DevBoxProvisioningSettings
		return ret
	}).(DevBoxProvisioningSettingsOutput)
}

// Whether project catalogs associated with projects in this dev center can be configured to sync catalog items.
func (o DevBoxProvisioningSettingsPtrOutput) InstallAzureMonitorAgentEnableStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DevBoxProvisioningSettings) *string {
		if v == nil {
			return nil
		}
		return v.InstallAzureMonitorAgentEnableStatus
	}).(pulumi.StringPtrOutput)
}

// Provisioning settings that apply to all Dev Boxes created in this dev center
type DevBoxProvisioningSettingsResponse struct {
	// Whether project catalogs associated with projects in this dev center can be configured to sync catalog items.
	InstallAzureMonitorAgentEnableStatus *string `pulumi:"installAzureMonitorAgentEnableStatus"`
}

// Provisioning settings that apply to all Dev Boxes created in this dev center
type DevBoxProvisioningSettingsResponseOutput struct{ *pulumi.OutputState }

func (DevBoxProvisioningSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DevBoxProvisioningSettingsResponse)(nil)).Elem()
}

func (o DevBoxProvisioningSettingsResponseOutput) ToDevBoxProvisioningSettingsResponseOutput() DevBoxProvisioningSettingsResponseOutput {
	return o
}

func (o DevBoxProvisioningSettingsResponseOutput) ToDevBoxProvisioningSettingsResponseOutputWithContext(ctx context.Context) DevBoxProvisioningSettingsResponseOutput {
	return o
}

// Whether project catalogs associated with projects in this dev center can be configured to sync catalog items.
func (o DevBoxProvisioningSettingsResponseOutput) InstallAzureMonitorAgentEnableStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DevBoxProvisioningSettingsResponse) *string { return v.InstallAzureMonitorAgentEnableStatus }).(pulumi.StringPtrOutput)
}

type DevBoxProvisioningSettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (DevBoxProvisioningSettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DevBoxProvisioningSettingsResponse)(nil)).Elem()
}

func (o DevBoxProvisioningSettingsResponsePtrOutput) ToDevBoxProvisioningSettingsResponsePtrOutput() DevBoxProvisioningSettingsResponsePtrOutput {
	return o
}

func (o DevBoxProvisioningSettingsResponsePtrOutput) ToDevBoxProvisioningSettingsResponsePtrOutputWithContext(ctx context.Context) DevBoxProvisioningSettingsResponsePtrOutput {
	return o
}

func (o DevBoxProvisioningSettingsResponsePtrOutput) Elem() DevBoxProvisioningSettingsResponseOutput {
	return o.ApplyT(func(v *DevBoxProvisioningSettingsResponse) DevBoxProvisioningSettingsResponse {
		if v != nil {
			return *v
		}
		var ret DevBoxProvisioningSettingsResponse
		return ret
	}).(DevBoxProvisioningSettingsResponseOutput)
}

// Whether project catalogs associated with projects in this dev center can be configured to sync catalog items.
func (o DevBoxProvisioningSettingsResponsePtrOutput) InstallAzureMonitorAgentEnableStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DevBoxProvisioningSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.InstallAzureMonitorAgentEnableStatus
	}).(pulumi.StringPtrOutput)
}

// Network settings for the Dev Center.
type DevCenterNetworkSettings struct {
	// Indicates whether pools in this Dev Center can use Microsoft Hosted Networks. Defaults to Enabled if not set.
	MicrosoftHostedNetworkEnableStatus *string `pulumi:"microsoftHostedNetworkEnableStatus"`
}

// DevCenterNetworkSettingsInput is an input type that accepts DevCenterNetworkSettingsArgs and DevCenterNetworkSettingsOutput values.
// You can construct a concrete instance of `DevCenterNetworkSettingsInput` via:
//
//	DevCenterNetworkSettingsArgs{...}
type DevCenterNetworkSettingsInput interface {
	pulumi.Input

	ToDevCenterNetworkSettingsOutput() DevCenterNetworkSettingsOutput
	ToDevCenterNetworkSettingsOutputWithContext(context.Context) DevCenterNetworkSettingsOutput
}

// Network settings for the Dev Center.
type DevCenterNetworkSettingsArgs struct {
	// Indicates whether pools in this Dev Center can use Microsoft Hosted Networks. Defaults to Enabled if not set.
	MicrosoftHostedNetworkEnableStatus pulumi.StringPtrInput `pulumi:"microsoftHostedNetworkEnableStatus"`
}

func (DevCenterNetworkSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DevCenterNetworkSettings)(nil)).Elem()
}

func (i DevCenterNetworkSettingsArgs) ToDevCenterNetworkSettingsOutput() DevCenterNetworkSettingsOutput {
	return i.ToDevCenterNetworkSettingsOutputWithContext(context.Background())
}

func (i DevCenterNetworkSettingsArgs) ToDevCenterNetworkSettingsOutputWithContext(ctx context.Context) DevCenterNetworkSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DevCenterNetworkSettingsOutput)
}

func (i DevCenterNetworkSettingsArgs) ToDevCenterNetworkSettingsPtrOutput() DevCenterNetworkSettingsPtrOutput {
	return i.ToDevCenterNetworkSettingsPtrOutputWithContext(context.Background())
}

func (i DevCenterNetworkSettingsArgs) ToDevCenterNetworkSettingsPtrOutputWithContext(ctx context.Context) DevCenterNetworkSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DevCenterNetworkSettingsOutput).ToDevCenterNetworkSettingsPtrOutputWithContext(ctx)
}

// DevCenterNetworkSettingsPtrInput is an input type that accepts DevCenterNetworkSettingsArgs, DevCenterNetworkSettingsPtr and DevCenterNetworkSettingsPtrOutput values.
// You can construct a concrete instance of `DevCenterNetworkSettingsPtrInput` via:
//
//	        DevCenterNetworkSettingsArgs{...}
//
//	or:
//
//	        nil
type DevCenterNetworkSettingsPtrInput interface {
	pulumi.Input

	ToDevCenterNetworkSettingsPtrOutput() DevCenterNetworkSettingsPtrOutput
	ToDevCenterNetworkSettingsPtrOutputWithContext(context.Context) DevCenterNetworkSettingsPtrOutput
}

type devCenterNetworkSettingsPtrType DevCenterNetworkSettingsArgs

func DevCenterNetworkSettingsPtr(v *DevCenterNetworkSettingsArgs) DevCenterNetworkSettingsPtrInput {
	return (*devCenterNetworkSettingsPtrType)(v)
}

func (*devCenterNetworkSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DevCenterNetworkSettings)(nil)).Elem()
}

func (i *devCenterNetworkSettingsPtrType) ToDevCenterNetworkSettingsPtrOutput() DevCenterNetworkSettingsPtrOutput {
	return i.ToDevCenterNetworkSettingsPtrOutputWithContext(context.Background())
}

func (i *devCenterNetworkSettingsPtrType) ToDevCenterNetworkSettingsPtrOutputWithContext(ctx context.Context) DevCenterNetworkSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DevCenterNetworkSettingsPtrOutput)
}

// Network settings for the Dev Center.
type DevCenterNetworkSettingsOutput struct{ *pulumi.OutputState }

func (DevCenterNetworkSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DevCenterNetworkSettings)(nil)).Elem()
}

func (o DevCenterNetworkSettingsOutput) ToDevCenterNetworkSettingsOutput() DevCenterNetworkSettingsOutput {
	return o
}

func (o DevCenterNetworkSettingsOutput) ToDevCenterNetworkSettingsOutputWithContext(ctx context.Context) DevCenterNetworkSettingsOutput {
	return o
}

func (o DevCenterNetworkSettingsOutput) ToDevCenterNetworkSettingsPtrOutput() DevCenterNetworkSettingsPtrOutput {
	return o.ToDevCenterNetworkSettingsPtrOutputWithContext(context.Background())
}

func (o DevCenterNetworkSettingsOutput) ToDevCenterNetworkSettingsPtrOutputWithContext(ctx context.Context) DevCenterNetworkSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DevCenterNetworkSettings) *DevCenterNetworkSettings {
		return &v
	}).(DevCenterNetworkSettingsPtrOutput)
}

// Indicates whether pools in this Dev Center can use Microsoft Hosted Networks. Defaults to Enabled if not set.
func (o DevCenterNetworkSettingsOutput) MicrosoftHostedNetworkEnableStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DevCenterNetworkSettings) *string { return v.MicrosoftHostedNetworkEnableStatus }).(pulumi.StringPtrOutput)
}

type DevCenterNetworkSettingsPtrOutput struct{ *pulumi.OutputState }

func (DevCenterNetworkSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DevCenterNetworkSettings)(nil)).Elem()
}

func (o DevCenterNetworkSettingsPtrOutput) ToDevCenterNetworkSettingsPtrOutput() DevCenterNetworkSettingsPtrOutput {
	return o
}

func (o DevCenterNetworkSettingsPtrOutput) ToDevCenterNetworkSettingsPtrOutputWithContext(ctx context.Context) DevCenterNetworkSettingsPtrOutput {
	return o
}

func (o DevCenterNetworkSettingsPtrOutput) Elem() DevCenterNetworkSettingsOutput {
	return o.ApplyT(func(v *DevCenterNetworkSettings) DevCenterNetworkSettings {
		if v != nil {
			return *v
		}
		var ret DevCenterNetworkSettings
		return ret
	}).(DevCenterNetworkSettingsOutput)
}

// Indicates whether pools in this Dev Center can use Microsoft Hosted Networks. Defaults to Enabled if not set.
func (o DevCenterNetworkSettingsPtrOutput) MicrosoftHostedNetworkEnableStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DevCenterNetworkSettings) *string {
		if v == nil {
			return nil
		}
		return v.MicrosoftHostedNetworkEnableStatus
	}).(pulumi.StringPtrOutput)
}

// Network settings for the Dev Center.
type DevCenterNetworkSettingsResponse struct {
	// Indicates whether pools in this Dev Center can use Microsoft Hosted Networks. Defaults to Enabled if not set.
	MicrosoftHostedNetworkEnableStatus *string `pulumi:"microsoftHostedNetworkEnableStatus"`
}

// Network settings for the Dev Center.
type DevCenterNetworkSettingsResponseOutput struct{ *pulumi.OutputState }

func (DevCenterNetworkSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DevCenterNetworkSettingsResponse)(nil)).Elem()
}

func (o DevCenterNetworkSettingsResponseOutput) ToDevCenterNetworkSettingsResponseOutput() DevCenterNetworkSettingsResponseOutput {
	return o
}

func (o DevCenterNetworkSettingsResponseOutput) ToDevCenterNetworkSettingsResponseOutputWithContext(ctx context.Context) DevCenterNetworkSettingsResponseOutput {
	return o
}

// Indicates whether pools in this Dev Center can use Microsoft Hosted Networks. Defaults to Enabled if not set.
func (o DevCenterNetworkSettingsResponseOutput) MicrosoftHostedNetworkEnableStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DevCenterNetworkSettingsResponse) *string { return v.MicrosoftHostedNetworkEnableStatus }).(pulumi.StringPtrOutput)
}

type DevCenterNetworkSettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (DevCenterNetworkSettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DevCenterNetworkSettingsResponse)(nil)).Elem()
}

func (o DevCenterNetworkSettingsResponsePtrOutput) ToDevCenterNetworkSettingsResponsePtrOutput() DevCenterNetworkSettingsResponsePtrOutput {
	return o
}

func (o DevCenterNetworkSettingsResponsePtrOutput) ToDevCenterNetworkSettingsResponsePtrOutputWithContext(ctx context.Context) DevCenterNetworkSettingsResponsePtrOutput {
	return o
}

func (o DevCenterNetworkSettingsResponsePtrOutput) Elem() DevCenterNetworkSettingsResponseOutput {
	return o.ApplyT(func(v *DevCenterNetworkSettingsResponse) DevCenterNetworkSettingsResponse {
		if v != nil {
			return *v
		}
		var ret DevCenterNetworkSettingsResponse
		return ret
	}).(DevCenterNetworkSettingsResponseOutput)
}

// Indicates whether pools in this Dev Center can use Microsoft Hosted Networks. Defaults to Enabled if not set.
func (o DevCenterNetworkSettingsResponsePtrOutput) MicrosoftHostedNetworkEnableStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DevCenterNetworkSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.MicrosoftHostedNetworkEnableStatus
	}).(pulumi.StringPtrOutput)
}

// Project catalog settings for project catalogs under a project associated to this dev center.
type DevCenterProjectCatalogSettings struct {
	// Whether project catalogs associated with projects in this dev center can be configured to sync catalog items.
	CatalogItemSyncEnableStatus *string `pulumi:"catalogItemSyncEnableStatus"`
}

// DevCenterProjectCatalogSettingsInput is an input type that accepts DevCenterProjectCatalogSettingsArgs and DevCenterProjectCatalogSettingsOutput values.
// You can construct a concrete instance of `DevCenterProjectCatalogSettingsInput` via:
//
//	DevCenterProjectCatalogSettingsArgs{...}
type DevCenterProjectCatalogSettingsInput interface {
	pulumi.Input

	ToDevCenterProjectCatalogSettingsOutput() DevCenterProjectCatalogSettingsOutput
	ToDevCenterProjectCatalogSettingsOutputWithContext(context.Context) DevCenterProjectCatalogSettingsOutput
}

// Project catalog settings for project catalogs under a project associated to this dev center.
type DevCenterProjectCatalogSettingsArgs struct {
	// Whether project catalogs associated with projects in this dev center can be configured to sync catalog items.
	CatalogItemSyncEnableStatus pulumi.StringPtrInput `pulumi:"catalogItemSyncEnableStatus"`
}

func (DevCenterProjectCatalogSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DevCenterProjectCatalogSettings)(nil)).Elem()
}

func (i DevCenterProjectCatalogSettingsArgs) ToDevCenterProjectCatalogSettingsOutput() DevCenterProjectCatalogSettingsOutput {
	return i.ToDevCenterProjectCatalogSettingsOutputWithContext(context.Background())
}

func (i DevCenterProjectCatalogSettingsArgs) ToDevCenterProjectCatalogSettingsOutputWithContext(ctx context.Context) DevCenterProjectCatalogSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DevCenterProjectCatalogSettingsOutput)
}

func (i DevCenterProjectCatalogSettingsArgs) ToDevCenterProjectCatalogSettingsPtrOutput() DevCenterProjectCatalogSettingsPtrOutput {
	return i.ToDevCenterProjectCatalogSettingsPtrOutputWithContext(context.Background())
}

func (i DevCenterProjectCatalogSettingsArgs) ToDevCenterProjectCatalogSettingsPtrOutputWithContext(ctx context.Context) DevCenterProjectCatalogSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DevCenterProjectCatalogSettingsOutput).ToDevCenterProjectCatalogSettingsPtrOutputWithContext(ctx)
}

// DevCenterProjectCatalogSettingsPtrInput is an input type that accepts DevCenterProjectCatalogSettingsArgs, DevCenterProjectCatalogSettingsPtr and DevCenterProjectCatalogSettingsPtrOutput values.
// You can construct a concrete instance of `DevCenterProjectCatalogSettingsPtrInput` via:
//
//	        DevCenterProjectCatalogSettingsArgs{...}
//
//	or:
//
//	        nil
type DevCenterProjectCatalogSettingsPtrInput interface {
	pulumi.Input

	ToDevCenterProjectCatalogSettingsPtrOutput() DevCenterProjectCatalogSettingsPtrOutput
	ToDevCenterProjectCatalogSettingsPtrOutputWithContext(context.Context) DevCenterProjectCatalogSettingsPtrOutput
}

type devCenterProjectCatalogSettingsPtrType DevCenterProjectCatalogSettingsArgs

func DevCenterProjectCatalogSettingsPtr(v *DevCenterProjectCatalogSettingsArgs) DevCenterProjectCatalogSettingsPtrInput {
	return (*devCenterProjectCatalogSettingsPtrType)(v)
}

func (*devCenterProjectCatalogSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DevCenterProjectCatalogSettings)(nil)).Elem()
}

func (i *devCenterProjectCatalogSettingsPtrType) ToDevCenterProjectCatalogSettingsPtrOutput() DevCenterProjectCatalogSettingsPtrOutput {
	return i.ToDevCenterProjectCatalogSettingsPtrOutputWithContext(context.Background())
}

func (i *devCenterProjectCatalogSettingsPtrType) ToDevCenterProjectCatalogSettingsPtrOutputWithContext(ctx context.Context) DevCenterProjectCatalogSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DevCenterProjectCatalogSettingsPtrOutput)
}

// Project catalog settings for project catalogs under a project associated to this dev center.
type DevCenterProjectCatalogSettingsOutput struct{ *pulumi.OutputState }

func (DevCenterProjectCatalogSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DevCenterProjectCatalogSettings)(nil)).Elem()
}

func (o DevCenterProjectCatalogSettingsOutput) ToDevCenterProjectCatalogSettingsOutput() DevCenterProjectCatalogSettingsOutput {
	return o
}

func (o DevCenterProjectCatalogSettingsOutput) ToDevCenterProjectCatalogSettingsOutputWithContext(ctx context.Context) DevCenterProjectCatalogSettingsOutput {
	return o
}

func (o DevCenterProjectCatalogSettingsOutput) ToDevCenterProjectCatalogSettingsPtrOutput() DevCenterProjectCatalogSettingsPtrOutput {
	return o.ToDevCenterProjectCatalogSettingsPtrOutputWithContext(context.Background())
}

func (o DevCenterProjectCatalogSettingsOutput) ToDevCenterProjectCatalogSettingsPtrOutputWithContext(ctx context.Context) DevCenterProjectCatalogSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DevCenterProjectCatalogSettings) *DevCenterProjectCatalogSettings {
		return &v
	}).(DevCenterProjectCatalogSettingsPtrOutput)
}

// Whether project catalogs associated with projects in this dev center can be configured to sync catalog items.
func (o DevCenterProjectCatalogSettingsOutput) CatalogItemSyncEnableStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DevCenterProjectCatalogSettings) *string { return v.CatalogItemSyncEnableStatus }).(pulumi.StringPtrOutput)
}

type DevCenterProjectCatalogSettingsPtrOutput struct{ *pulumi.OutputState }

func (DevCenterProjectCatalogSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DevCenterProjectCatalogSettings)(nil)).Elem()
}

func (o DevCenterProjectCatalogSettingsPtrOutput) ToDevCenterProjectCatalogSettingsPtrOutput() DevCenterProjectCatalogSettingsPtrOutput {
	return o
}

func (o DevCenterProjectCatalogSettingsPtrOutput) ToDevCenterProjectCatalogSettingsPtrOutputWithContext(ctx context.Context) DevCenterProjectCatalogSettingsPtrOutput {
	return o
}

func (o DevCenterProjectCatalogSettingsPtrOutput) Elem() DevCenterProjectCatalogSettingsOutput {
	return o.ApplyT(func(v *DevCenterProjectCatalogSettings) DevCenterProjectCatalogSettings {
		if v != nil {
			return *v
		}
		var ret DevCenterProjectCatalogSettings
		return ret
	}).(DevCenterProjectCatalogSettingsOutput)
}

// Whether project catalogs associated with projects in this dev center can be configured to sync catalog items.
func (o DevCenterProjectCatalogSettingsPtrOutput) CatalogItemSyncEnableStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DevCenterProjectCatalogSettings) *string {
		if v == nil {
			return nil
		}
		return v.CatalogItemSyncEnableStatus
	}).(pulumi.StringPtrOutput)
}

// Project catalog settings for project catalogs under a project associated to this dev center.
type DevCenterProjectCatalogSettingsResponse struct {
	// Whether project catalogs associated with projects in this dev center can be configured to sync catalog items.
	CatalogItemSyncEnableStatus *string `pulumi:"catalogItemSyncEnableStatus"`
}

// Project catalog settings for project catalogs under a project associated to this dev center.
type DevCenterProjectCatalogSettingsResponseOutput struct{ *pulumi.OutputState }

func (DevCenterProjectCatalogSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DevCenterProjectCatalogSettingsResponse)(nil)).Elem()
}

func (o DevCenterProjectCatalogSettingsResponseOutput) ToDevCenterProjectCatalogSettingsResponseOutput() DevCenterProjectCatalogSettingsResponseOutput {
	return o
}

func (o DevCenterProjectCatalogSettingsResponseOutput) ToDevCenterProjectCatalogSettingsResponseOutputWithContext(ctx context.Context) DevCenterProjectCatalogSettingsResponseOutput {
	return o
}

// Whether project catalogs associated with projects in this dev center can be configured to sync catalog items.
func (o DevCenterProjectCatalogSettingsResponseOutput) CatalogItemSyncEnableStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DevCenterProjectCatalogSettingsResponse) *string { return v.CatalogItemSyncEnableStatus }).(pulumi.StringPtrOutput)
}

type DevCenterProjectCatalogSettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (DevCenterProjectCatalogSettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DevCenterProjectCatalogSettingsResponse)(nil)).Elem()
}

func (o DevCenterProjectCatalogSettingsResponsePtrOutput) ToDevCenterProjectCatalogSettingsResponsePtrOutput() DevCenterProjectCatalogSettingsResponsePtrOutput {
	return o
}

func (o DevCenterProjectCatalogSettingsResponsePtrOutput) ToDevCenterProjectCatalogSettingsResponsePtrOutputWithContext(ctx context.Context) DevCenterProjectCatalogSettingsResponsePtrOutput {
	return o
}

func (o DevCenterProjectCatalogSettingsResponsePtrOutput) Elem() DevCenterProjectCatalogSettingsResponseOutput {
	return o.ApplyT(func(v *DevCenterProjectCatalogSettingsResponse) DevCenterProjectCatalogSettingsResponse {
		if v != nil {
			return *v
		}
		var ret DevCenterProjectCatalogSettingsResponse
		return ret
	}).(DevCenterProjectCatalogSettingsResponseOutput)
}

// Whether project catalogs associated with projects in this dev center can be configured to sync catalog items.
func (o DevCenterProjectCatalogSettingsResponsePtrOutput) CatalogItemSyncEnableStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DevCenterProjectCatalogSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.CatalogItemSyncEnableStatus
	}).(pulumi.StringPtrOutput)
}

type Encryption struct {
	// All Customer-managed key encryption properties for the resource.
	CustomerManagedKeyEncryption *CustomerManagedKeyEncryption `pulumi:"customerManagedKeyEncryption"`
}

// EncryptionInput is an input type that accepts EncryptionArgs and EncryptionOutput values.
// You can construct a concrete instance of `EncryptionInput` via:
//
//	EncryptionArgs{...}
type EncryptionInput interface {
	pulumi.Input

	ToEncryptionOutput() EncryptionOutput
	ToEncryptionOutputWithContext(context.Context) EncryptionOutput
}

type EncryptionArgs struct {
	// All Customer-managed key encryption properties for the resource.
	CustomerManagedKeyEncryption CustomerManagedKeyEncryptionPtrInput `pulumi:"customerManagedKeyEncryption"`
}

func (EncryptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Encryption)(nil)).Elem()
}

func (i EncryptionArgs) ToEncryptionOutput() EncryptionOutput {
	return i.ToEncryptionOutputWithContext(context.Background())
}

func (i EncryptionArgs) ToEncryptionOutputWithContext(ctx context.Context) EncryptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncryptionOutput)
}

func (i EncryptionArgs) ToEncryptionPtrOutput() EncryptionPtrOutput {
	return i.ToEncryptionPtrOutputWithContext(context.Background())
}

func (i EncryptionArgs) ToEncryptionPtrOutputWithContext(ctx context.Context) EncryptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncryptionOutput).ToEncryptionPtrOutputWithContext(ctx)
}

// EncryptionPtrInput is an input type that accepts EncryptionArgs, EncryptionPtr and EncryptionPtrOutput values.
// You can construct a concrete instance of `EncryptionPtrInput` via:
//
//	        EncryptionArgs{...}
//
//	or:
//
//	        nil
type EncryptionPtrInput interface {
	pulumi.Input

	ToEncryptionPtrOutput() EncryptionPtrOutput
	ToEncryptionPtrOutputWithContext(context.Context) EncryptionPtrOutput
}

type encryptionPtrType EncryptionArgs

func EncryptionPtr(v *EncryptionArgs) EncryptionPtrInput {
	return (*encryptionPtrType)(v)
}

func (*encryptionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Encryption)(nil)).Elem()
}

func (i *encryptionPtrType) ToEncryptionPtrOutput() EncryptionPtrOutput {
	return i.ToEncryptionPtrOutputWithContext(context.Background())
}

func (i *encryptionPtrType) ToEncryptionPtrOutputWithContext(ctx context.Context) EncryptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncryptionPtrOutput)
}

type EncryptionOutput struct{ *pulumi.OutputState }

func (EncryptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Encryption)(nil)).Elem()
}

func (o EncryptionOutput) ToEncryptionOutput() EncryptionOutput {
	return o
}

func (o EncryptionOutput) ToEncryptionOutputWithContext(ctx context.Context) EncryptionOutput {
	return o
}

func (o EncryptionOutput) ToEncryptionPtrOutput() EncryptionPtrOutput {
	return o.ToEncryptionPtrOutputWithContext(context.Background())
}

func (o EncryptionOutput) ToEncryptionPtrOutputWithContext(ctx context.Context) EncryptionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Encryption) *Encryption {
		return &v
	}).(EncryptionPtrOutput)
}

// All Customer-managed key encryption properties for the resource.
func (o EncryptionOutput) CustomerManagedKeyEncryption() CustomerManagedKeyEncryptionPtrOutput {
	return o.ApplyT(func(v Encryption) *CustomerManagedKeyEncryption { return v.CustomerManagedKeyEncryption }).(CustomerManagedKeyEncryptionPtrOutput)
}

type EncryptionPtrOutput struct{ *pulumi.OutputState }

func (EncryptionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Encryption)(nil)).Elem()
}

func (o EncryptionPtrOutput) ToEncryptionPtrOutput() EncryptionPtrOutput {
	return o
}

func (o EncryptionPtrOutput) ToEncryptionPtrOutputWithContext(ctx context.Context) EncryptionPtrOutput {
	return o
}

func (o EncryptionPtrOutput) Elem() EncryptionOutput {
	return o.ApplyT(func(v *Encryption) Encryption {
		if v != nil {
			return *v
		}
		var ret Encryption
		return ret
	}).(EncryptionOutput)
}

// All Customer-managed key encryption properties for the resource.
func (o EncryptionPtrOutput) CustomerManagedKeyEncryption() CustomerManagedKeyEncryptionPtrOutput {
	return o.ApplyT(func(v *Encryption) *CustomerManagedKeyEncryption {
		if v == nil {
			return nil
		}
		return v.CustomerManagedKeyEncryption
	}).(CustomerManagedKeyEncryptionPtrOutput)
}

type EncryptionResponse struct {
	// All Customer-managed key encryption properties for the resource.
	CustomerManagedKeyEncryption *CustomerManagedKeyEncryptionResponse `pulumi:"customerManagedKeyEncryption"`
}

type EncryptionResponseOutput struct{ *pulumi.OutputState }

func (EncryptionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EncryptionResponse)(nil)).Elem()
}

func (o EncryptionResponseOutput) ToEncryptionResponseOutput() EncryptionResponseOutput {
	return o
}

func (o EncryptionResponseOutput) ToEncryptionResponseOutputWithContext(ctx context.Context) EncryptionResponseOutput {
	return o
}

// All Customer-managed key encryption properties for the resource.
func (o EncryptionResponseOutput) CustomerManagedKeyEncryption() CustomerManagedKeyEncryptionResponsePtrOutput {
	return o.ApplyT(func(v EncryptionResponse) *CustomerManagedKeyEncryptionResponse {
		return v.CustomerManagedKeyEncryption
	}).(CustomerManagedKeyEncryptionResponsePtrOutput)
}

type EncryptionResponsePtrOutput struct{ *pulumi.OutputState }

func (EncryptionResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EncryptionResponse)(nil)).Elem()
}

func (o EncryptionResponsePtrOutput) ToEncryptionResponsePtrOutput() EncryptionResponsePtrOutput {
	return o
}

func (o EncryptionResponsePtrOutput) ToEncryptionResponsePtrOutputWithContext(ctx context.Context) EncryptionResponsePtrOutput {
	return o
}

func (o EncryptionResponsePtrOutput) Elem() EncryptionResponseOutput {
	return o.ApplyT(func(v *EncryptionResponse) EncryptionResponse {
		if v != nil {
			return *v
		}
		var ret EncryptionResponse
		return ret
	}).(EncryptionResponseOutput)
}

// All Customer-managed key encryption properties for the resource.
func (o EncryptionResponsePtrOutput) CustomerManagedKeyEncryption() CustomerManagedKeyEncryptionResponsePtrOutput {
	return o.ApplyT(func(v *EncryptionResponse) *CustomerManagedKeyEncryptionResponse {
		if v == nil {
			return nil
		}
		return v.CustomerManagedKeyEncryption
	}).(CustomerManagedKeyEncryptionResponsePtrOutput)
}

// A role that can be assigned to a user.
type EnvironmentRoleResponse struct {
	// This is a description of the Role Assignment.
	Description string `pulumi:"description"`
	// The common name of the Role Assignment. This is a descriptive name such as 'AcrPush'.
	RoleName string `pulumi:"roleName"`
}

// A role that can be assigned to a user.
type EnvironmentRoleResponseOutput struct{ *pulumi.OutputState }

func (EnvironmentRoleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentRoleResponse)(nil)).Elem()
}

func (o EnvironmentRoleResponseOutput) ToEnvironmentRoleResponseOutput() EnvironmentRoleResponseOutput {
	return o
}

func (o EnvironmentRoleResponseOutput) ToEnvironmentRoleResponseOutputWithContext(ctx context.Context) EnvironmentRoleResponseOutput {
	return o
}

// This is a description of the Role Assignment.
func (o EnvironmentRoleResponseOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v EnvironmentRoleResponse) string { return v.Description }).(pulumi.StringOutput)
}

// The common name of the Role Assignment. This is a descriptive name such as 'AcrPush'.
func (o EnvironmentRoleResponseOutput) RoleName() pulumi.StringOutput {
	return o.ApplyT(func(v EnvironmentRoleResponse) string { return v.RoleName }).(pulumi.StringOutput)
}

type EnvironmentRoleResponseMapOutput struct{ *pulumi.OutputState }

func (EnvironmentRoleResponseMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]EnvironmentRoleResponse)(nil)).Elem()
}

func (o EnvironmentRoleResponseMapOutput) ToEnvironmentRoleResponseMapOutput() EnvironmentRoleResponseMapOutput {
	return o
}

func (o EnvironmentRoleResponseMapOutput) ToEnvironmentRoleResponseMapOutputWithContext(ctx context.Context) EnvironmentRoleResponseMapOutput {
	return o
}

func (o EnvironmentRoleResponseMapOutput) MapIndex(k pulumi.StringInput) EnvironmentRoleResponseOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) EnvironmentRoleResponse {
		return vs[0].(map[string]EnvironmentRoleResponse)[vs[1].(string)]
	}).(EnvironmentRoleResponseOutput)
}

// Properties for a Git repository catalog.
type GitCatalog struct {
	// Git branch.
	Branch *string `pulumi:"branch"`
	// The folder where the catalog items can be found inside the repository.
	Path *string `pulumi:"path"`
	// A reference to the Key Vault secret containing a security token to authenticate to a Git repository.
	SecretIdentifier *string `pulumi:"secretIdentifier"`
	// Git URI.
	Uri *string `pulumi:"uri"`
}

// GitCatalogInput is an input type that accepts GitCatalogArgs and GitCatalogOutput values.
// You can construct a concrete instance of `GitCatalogInput` via:
//
//	GitCatalogArgs{...}
type GitCatalogInput interface {
	pulumi.Input

	ToGitCatalogOutput() GitCatalogOutput
	ToGitCatalogOutputWithContext(context.Context) GitCatalogOutput
}

// Properties for a Git repository catalog.
type GitCatalogArgs struct {
	// Git branch.
	Branch pulumi.StringPtrInput `pulumi:"branch"`
	// The folder where the catalog items can be found inside the repository.
	Path pulumi.StringPtrInput `pulumi:"path"`
	// A reference to the Key Vault secret containing a security token to authenticate to a Git repository.
	SecretIdentifier pulumi.StringPtrInput `pulumi:"secretIdentifier"`
	// Git URI.
	Uri pulumi.StringPtrInput `pulumi:"uri"`
}

func (GitCatalogArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GitCatalog)(nil)).Elem()
}

func (i GitCatalogArgs) ToGitCatalogOutput() GitCatalogOutput {
	return i.ToGitCatalogOutputWithContext(context.Background())
}

func (i GitCatalogArgs) ToGitCatalogOutputWithContext(ctx context.Context) GitCatalogOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitCatalogOutput)
}

func (i GitCatalogArgs) ToGitCatalogPtrOutput() GitCatalogPtrOutput {
	return i.ToGitCatalogPtrOutputWithContext(context.Background())
}

func (i GitCatalogArgs) ToGitCatalogPtrOutputWithContext(ctx context.Context) GitCatalogPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitCatalogOutput).ToGitCatalogPtrOutputWithContext(ctx)
}

// GitCatalogPtrInput is an input type that accepts GitCatalogArgs, GitCatalogPtr and GitCatalogPtrOutput values.
// You can construct a concrete instance of `GitCatalogPtrInput` via:
//
//	        GitCatalogArgs{...}
//
//	or:
//
//	        nil
type GitCatalogPtrInput interface {
	pulumi.Input

	ToGitCatalogPtrOutput() GitCatalogPtrOutput
	ToGitCatalogPtrOutputWithContext(context.Context) GitCatalogPtrOutput
}

type gitCatalogPtrType GitCatalogArgs

func GitCatalogPtr(v *GitCatalogArgs) GitCatalogPtrInput {
	return (*gitCatalogPtrType)(v)
}

func (*gitCatalogPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GitCatalog)(nil)).Elem()
}

func (i *gitCatalogPtrType) ToGitCatalogPtrOutput() GitCatalogPtrOutput {
	return i.ToGitCatalogPtrOutputWithContext(context.Background())
}

func (i *gitCatalogPtrType) ToGitCatalogPtrOutputWithContext(ctx context.Context) GitCatalogPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitCatalogPtrOutput)
}

// Properties for a Git repository catalog.
type GitCatalogOutput struct{ *pulumi.OutputState }

func (GitCatalogOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GitCatalog)(nil)).Elem()
}

func (o GitCatalogOutput) ToGitCatalogOutput() GitCatalogOutput {
	return o
}

func (o GitCatalogOutput) ToGitCatalogOutputWithContext(ctx context.Context) GitCatalogOutput {
	return o
}

func (o GitCatalogOutput) ToGitCatalogPtrOutput() GitCatalogPtrOutput {
	return o.ToGitCatalogPtrOutputWithContext(context.Background())
}

func (o GitCatalogOutput) ToGitCatalogPtrOutputWithContext(ctx context.Context) GitCatalogPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GitCatalog) *GitCatalog {
		return &v
	}).(GitCatalogPtrOutput)
}

// Git branch.
func (o GitCatalogOutput) Branch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitCatalog) *string { return v.Branch }).(pulumi.StringPtrOutput)
}

// The folder where the catalog items can be found inside the repository.
func (o GitCatalogOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitCatalog) *string { return v.Path }).(pulumi.StringPtrOutput)
}

// A reference to the Key Vault secret containing a security token to authenticate to a Git repository.
func (o GitCatalogOutput) SecretIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitCatalog) *string { return v.SecretIdentifier }).(pulumi.StringPtrOutput)
}

// Git URI.
func (o GitCatalogOutput) Uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitCatalog) *string { return v.Uri }).(pulumi.StringPtrOutput)
}

type GitCatalogPtrOutput struct{ *pulumi.OutputState }

func (GitCatalogPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GitCatalog)(nil)).Elem()
}

func (o GitCatalogPtrOutput) ToGitCatalogPtrOutput() GitCatalogPtrOutput {
	return o
}

func (o GitCatalogPtrOutput) ToGitCatalogPtrOutputWithContext(ctx context.Context) GitCatalogPtrOutput {
	return o
}

func (o GitCatalogPtrOutput) Elem() GitCatalogOutput {
	return o.ApplyT(func(v *GitCatalog) GitCatalog {
		if v != nil {
			return *v
		}
		var ret GitCatalog
		return ret
	}).(GitCatalogOutput)
}

// Git branch.
func (o GitCatalogPtrOutput) Branch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GitCatalog) *string {
		if v == nil {
			return nil
		}
		return v.Branch
	}).(pulumi.StringPtrOutput)
}

// The folder where the catalog items can be found inside the repository.
func (o GitCatalogPtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GitCatalog) *string {
		if v == nil {
			return nil
		}
		return v.Path
	}).(pulumi.StringPtrOutput)
}

// A reference to the Key Vault secret containing a security token to authenticate to a Git repository.
func (o GitCatalogPtrOutput) SecretIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GitCatalog) *string {
		if v == nil {
			return nil
		}
		return v.SecretIdentifier
	}).(pulumi.StringPtrOutput)
}

// Git URI.
func (o GitCatalogPtrOutput) Uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GitCatalog) *string {
		if v == nil {
			return nil
		}
		return v.Uri
	}).(pulumi.StringPtrOutput)
}

// Properties for a Git repository catalog.
type GitCatalogResponse struct {
	// Git branch.
	Branch *string `pulumi:"branch"`
	// The folder where the catalog items can be found inside the repository.
	Path *string `pulumi:"path"`
	// A reference to the Key Vault secret containing a security token to authenticate to a Git repository.
	SecretIdentifier *string `pulumi:"secretIdentifier"`
	// Git URI.
	Uri *string `pulumi:"uri"`
}

// Properties for a Git repository catalog.
type GitCatalogResponseOutput struct{ *pulumi.OutputState }

func (GitCatalogResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GitCatalogResponse)(nil)).Elem()
}

func (o GitCatalogResponseOutput) ToGitCatalogResponseOutput() GitCatalogResponseOutput {
	return o
}

func (o GitCatalogResponseOutput) ToGitCatalogResponseOutputWithContext(ctx context.Context) GitCatalogResponseOutput {
	return o
}

// Git branch.
func (o GitCatalogResponseOutput) Branch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitCatalogResponse) *string { return v.Branch }).(pulumi.StringPtrOutput)
}

// The folder where the catalog items can be found inside the repository.
func (o GitCatalogResponseOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitCatalogResponse) *string { return v.Path }).(pulumi.StringPtrOutput)
}

// A reference to the Key Vault secret containing a security token to authenticate to a Git repository.
func (o GitCatalogResponseOutput) SecretIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitCatalogResponse) *string { return v.SecretIdentifier }).(pulumi.StringPtrOutput)
}

// Git URI.
func (o GitCatalogResponseOutput) Uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitCatalogResponse) *string { return v.Uri }).(pulumi.StringPtrOutput)
}

type GitCatalogResponsePtrOutput struct{ *pulumi.OutputState }

func (GitCatalogResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GitCatalogResponse)(nil)).Elem()
}

func (o GitCatalogResponsePtrOutput) ToGitCatalogResponsePtrOutput() GitCatalogResponsePtrOutput {
	return o
}

func (o GitCatalogResponsePtrOutput) ToGitCatalogResponsePtrOutputWithContext(ctx context.Context) GitCatalogResponsePtrOutput {
	return o
}

func (o GitCatalogResponsePtrOutput) Elem() GitCatalogResponseOutput {
	return o.ApplyT(func(v *GitCatalogResponse) GitCatalogResponse {
		if v != nil {
			return *v
		}
		var ret GitCatalogResponse
		return ret
	}).(GitCatalogResponseOutput)
}

// Git branch.
func (o GitCatalogResponsePtrOutput) Branch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GitCatalogResponse) *string {
		if v == nil {
			return nil
		}
		return v.Branch
	}).(pulumi.StringPtrOutput)
}

// The folder where the catalog items can be found inside the repository.
func (o GitCatalogResponsePtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GitCatalogResponse) *string {
		if v == nil {
			return nil
		}
		return v.Path
	}).(pulumi.StringPtrOutput)
}

// A reference to the Key Vault secret containing a security token to authenticate to a Git repository.
func (o GitCatalogResponsePtrOutput) SecretIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GitCatalogResponse) *string {
		if v == nil {
			return nil
		}
		return v.SecretIdentifier
	}).(pulumi.StringPtrOutput)
}

// Git URI.
func (o GitCatalogResponsePtrOutput) Uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GitCatalogResponse) *string {
		if v == nil {
			return nil
		}
		return v.Uri
	}).(pulumi.StringPtrOutput)
}

// Pool health status detail.
type HealthStatusDetailResponse struct {
	// An identifier for the issue.
	Code string `pulumi:"code"`
	// A message describing the issue, intended to be suitable for display in a user interface
	Message string `pulumi:"message"`
}

// Pool health status detail.
type HealthStatusDetailResponseOutput struct{ *pulumi.OutputState }

func (HealthStatusDetailResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HealthStatusDetailResponse)(nil)).Elem()
}

func (o HealthStatusDetailResponseOutput) ToHealthStatusDetailResponseOutput() HealthStatusDetailResponseOutput {
	return o
}

func (o HealthStatusDetailResponseOutput) ToHealthStatusDetailResponseOutputWithContext(ctx context.Context) HealthStatusDetailResponseOutput {
	return o
}

// An identifier for the issue.
func (o HealthStatusDetailResponseOutput) Code() pulumi.StringOutput {
	return o.ApplyT(func(v HealthStatusDetailResponse) string { return v.Code }).(pulumi.StringOutput)
}

// A message describing the issue, intended to be suitable for display in a user interface
func (o HealthStatusDetailResponseOutput) Message() pulumi.StringOutput {
	return o.ApplyT(func(v HealthStatusDetailResponse) string { return v.Message }).(pulumi.StringOutput)
}

type HealthStatusDetailResponseArrayOutput struct{ *pulumi.OutputState }

func (HealthStatusDetailResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HealthStatusDetailResponse)(nil)).Elem()
}

func (o HealthStatusDetailResponseArrayOutput) ToHealthStatusDetailResponseArrayOutput() HealthStatusDetailResponseArrayOutput {
	return o
}

func (o HealthStatusDetailResponseArrayOutput) ToHealthStatusDetailResponseArrayOutputWithContext(ctx context.Context) HealthStatusDetailResponseArrayOutput {
	return o
}

func (o HealthStatusDetailResponseArrayOutput) Index(i pulumi.IntInput) HealthStatusDetailResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) HealthStatusDetailResponse {
		return vs[0].([]HealthStatusDetailResponse)[vs[1].(int)]
	}).(HealthStatusDetailResponseOutput)
}

// Image reference information
type ImageReference struct {
	// Image ID, or Image version ID. When Image ID is provided, its latest version will be used.
	Id *string `pulumi:"id"`
}

// ImageReferenceInput is an input type that accepts ImageReferenceArgs and ImageReferenceOutput values.
// You can construct a concrete instance of `ImageReferenceInput` via:
//
//	ImageReferenceArgs{...}
type ImageReferenceInput interface {
	pulumi.Input

	ToImageReferenceOutput() ImageReferenceOutput
	ToImageReferenceOutputWithContext(context.Context) ImageReferenceOutput
}

// Image reference information
type ImageReferenceArgs struct {
	// Image ID, or Image version ID. When Image ID is provided, its latest version will be used.
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (ImageReferenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ImageReference)(nil)).Elem()
}

func (i ImageReferenceArgs) ToImageReferenceOutput() ImageReferenceOutput {
	return i.ToImageReferenceOutputWithContext(context.Background())
}

func (i ImageReferenceArgs) ToImageReferenceOutputWithContext(ctx context.Context) ImageReferenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImageReferenceOutput)
}

// Image reference information
type ImageReferenceOutput struct{ *pulumi.OutputState }

func (ImageReferenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ImageReference)(nil)).Elem()
}

func (o ImageReferenceOutput) ToImageReferenceOutput() ImageReferenceOutput {
	return o
}

func (o ImageReferenceOutput) ToImageReferenceOutputWithContext(ctx context.Context) ImageReferenceOutput {
	return o
}

// Image ID, or Image version ID. When Image ID is provided, its latest version will be used.
func (o ImageReferenceOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ImageReference) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Image reference information
type ImageReferenceResponse struct {
	// The actual version of the image after use. When id references a gallery image latest version, this will indicate the actual version in use.
	ExactVersion string `pulumi:"exactVersion"`
	// Image ID, or Image version ID. When Image ID is provided, its latest version will be used.
	Id *string `pulumi:"id"`
}

// Image reference information
type ImageReferenceResponseOutput struct{ *pulumi.OutputState }

func (ImageReferenceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ImageReferenceResponse)(nil)).Elem()
}

func (o ImageReferenceResponseOutput) ToImageReferenceResponseOutput() ImageReferenceResponseOutput {
	return o
}

func (o ImageReferenceResponseOutput) ToImageReferenceResponseOutputWithContext(ctx context.Context) ImageReferenceResponseOutput {
	return o
}

// The actual version of the image after use. When id references a gallery image latest version, this will indicate the actual version in use.
func (o ImageReferenceResponseOutput) ExactVersion() pulumi.StringOutput {
	return o.ApplyT(func(v ImageReferenceResponse) string { return v.ExactVersion }).(pulumi.StringOutput)
}

// Image ID, or Image version ID. When Image ID is provided, its latest version will be used.
func (o ImageReferenceResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ImageReferenceResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Image validation error details
type ImageValidationErrorDetailsResponse struct {
	// An identifier for the error.
	Code *string `pulumi:"code"`
	// A message describing the error.
	Message *string `pulumi:"message"`
}

// Image validation error details
type ImageValidationErrorDetailsResponseOutput struct{ *pulumi.OutputState }

func (ImageValidationErrorDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ImageValidationErrorDetailsResponse)(nil)).Elem()
}

func (o ImageValidationErrorDetailsResponseOutput) ToImageValidationErrorDetailsResponseOutput() ImageValidationErrorDetailsResponseOutput {
	return o
}

func (o ImageValidationErrorDetailsResponseOutput) ToImageValidationErrorDetailsResponseOutputWithContext(ctx context.Context) ImageValidationErrorDetailsResponseOutput {
	return o
}

// An identifier for the error.
func (o ImageValidationErrorDetailsResponseOutput) Code() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ImageValidationErrorDetailsResponse) *string { return v.Code }).(pulumi.StringPtrOutput)
}

// A message describing the error.
func (o ImageValidationErrorDetailsResponseOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ImageValidationErrorDetailsResponse) *string { return v.Message }).(pulumi.StringPtrOutput)
}

// Managed service identity (system assigned and/or user assigned identities)
type ManagedServiceIdentity struct {
	// Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
	Type string `pulumi:"type"`
	// The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.
	UserAssignedIdentities []string `pulumi:"userAssignedIdentities"`
}

// ManagedServiceIdentityInput is an input type that accepts ManagedServiceIdentityArgs and ManagedServiceIdentityOutput values.
// You can construct a concrete instance of `ManagedServiceIdentityInput` via:
//
//	ManagedServiceIdentityArgs{...}
type ManagedServiceIdentityInput interface {
	pulumi.Input

	ToManagedServiceIdentityOutput() ManagedServiceIdentityOutput
	ToManagedServiceIdentityOutputWithContext(context.Context) ManagedServiceIdentityOutput
}

// Managed service identity (system assigned and/or user assigned identities)
type ManagedServiceIdentityArgs struct {
	// Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
	Type pulumi.StringInput `pulumi:"type"`
	// The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.
	UserAssignedIdentities pulumi.StringArrayInput `pulumi:"userAssignedIdentities"`
}

func (ManagedServiceIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedServiceIdentity)(nil)).Elem()
}

func (i ManagedServiceIdentityArgs) ToManagedServiceIdentityOutput() ManagedServiceIdentityOutput {
	return i.ToManagedServiceIdentityOutputWithContext(context.Background())
}

func (i ManagedServiceIdentityArgs) ToManagedServiceIdentityOutputWithContext(ctx context.Context) ManagedServiceIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedServiceIdentityOutput)
}

func (i ManagedServiceIdentityArgs) ToManagedServiceIdentityPtrOutput() ManagedServiceIdentityPtrOutput {
	return i.ToManagedServiceIdentityPtrOutputWithContext(context.Background())
}

func (i ManagedServiceIdentityArgs) ToManagedServiceIdentityPtrOutputWithContext(ctx context.Context) ManagedServiceIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedServiceIdentityOutput).ToManagedServiceIdentityPtrOutputWithContext(ctx)
}

// ManagedServiceIdentityPtrInput is an input type that accepts ManagedServiceIdentityArgs, ManagedServiceIdentityPtr and ManagedServiceIdentityPtrOutput values.
// You can construct a concrete instance of `ManagedServiceIdentityPtrInput` via:
//
//	        ManagedServiceIdentityArgs{...}
//
//	or:
//
//	        nil
type ManagedServiceIdentityPtrInput interface {
	pulumi.Input

	ToManagedServiceIdentityPtrOutput() ManagedServiceIdentityPtrOutput
	ToManagedServiceIdentityPtrOutputWithContext(context.Context) ManagedServiceIdentityPtrOutput
}

type managedServiceIdentityPtrType ManagedServiceIdentityArgs

func ManagedServiceIdentityPtr(v *ManagedServiceIdentityArgs) ManagedServiceIdentityPtrInput {
	return (*managedServiceIdentityPtrType)(v)
}

func (*managedServiceIdentityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedServiceIdentity)(nil)).Elem()
}

func (i *managedServiceIdentityPtrType) ToManagedServiceIdentityPtrOutput() ManagedServiceIdentityPtrOutput {
	return i.ToManagedServiceIdentityPtrOutputWithContext(context.Background())
}

func (i *managedServiceIdentityPtrType) ToManagedServiceIdentityPtrOutputWithContext(ctx context.Context) ManagedServiceIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedServiceIdentityPtrOutput)
}

// Managed service identity (system assigned and/or user assigned identities)
type ManagedServiceIdentityOutput struct{ *pulumi.OutputState }

func (ManagedServiceIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedServiceIdentity)(nil)).Elem()
}

func (o ManagedServiceIdentityOutput) ToManagedServiceIdentityOutput() ManagedServiceIdentityOutput {
	return o
}

func (o ManagedServiceIdentityOutput) ToManagedServiceIdentityOutputWithContext(ctx context.Context) ManagedServiceIdentityOutput {
	return o
}

func (o ManagedServiceIdentityOutput) ToManagedServiceIdentityPtrOutput() ManagedServiceIdentityPtrOutput {
	return o.ToManagedServiceIdentityPtrOutputWithContext(context.Background())
}

func (o ManagedServiceIdentityOutput) ToManagedServiceIdentityPtrOutputWithContext(ctx context.Context) ManagedServiceIdentityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ManagedServiceIdentity) *ManagedServiceIdentity {
		return &v
	}).(ManagedServiceIdentityPtrOutput)
}

// Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
func (o ManagedServiceIdentityOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedServiceIdentity) string { return v.Type }).(pulumi.StringOutput)
}

// The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.
func (o ManagedServiceIdentityOutput) UserAssignedIdentities() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ManagedServiceIdentity) []string { return v.UserAssignedIdentities }).(pulumi.StringArrayOutput)
}

type ManagedServiceIdentityPtrOutput struct{ *pulumi.OutputState }

func (ManagedServiceIdentityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedServiceIdentity)(nil)).Elem()
}

func (o ManagedServiceIdentityPtrOutput) ToManagedServiceIdentityPtrOutput() ManagedServiceIdentityPtrOutput {
	return o
}

func (o ManagedServiceIdentityPtrOutput) ToManagedServiceIdentityPtrOutputWithContext(ctx context.Context) ManagedServiceIdentityPtrOutput {
	return o
}

func (o ManagedServiceIdentityPtrOutput) Elem() ManagedServiceIdentityOutput {
	return o.ApplyT(func(v *ManagedServiceIdentity) ManagedServiceIdentity {
		if v != nil {
			return *v
		}
		var ret ManagedServiceIdentity
		return ret
	}).(ManagedServiceIdentityOutput)
}

// Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
func (o ManagedServiceIdentityPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedServiceIdentity) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.
func (o ManagedServiceIdentityPtrOutput) UserAssignedIdentities() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ManagedServiceIdentity) []string {
		if v == nil {
			return nil
		}
		return v.UserAssignedIdentities
	}).(pulumi.StringArrayOutput)
}

// Managed service identity (system assigned and/or user assigned identities)
type ManagedServiceIdentityResponse struct {
	// The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.
	PrincipalId string `pulumi:"principalId"`
	// The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.
	TenantId string `pulumi:"tenantId"`
	// Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
	Type string `pulumi:"type"`
	// The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.
	UserAssignedIdentities map[string]UserAssignedIdentityResponse `pulumi:"userAssignedIdentities"`
}

// Managed service identity (system assigned and/or user assigned identities)
type ManagedServiceIdentityResponseOutput struct{ *pulumi.OutputState }

func (ManagedServiceIdentityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedServiceIdentityResponse)(nil)).Elem()
}

func (o ManagedServiceIdentityResponseOutput) ToManagedServiceIdentityResponseOutput() ManagedServiceIdentityResponseOutput {
	return o
}

func (o ManagedServiceIdentityResponseOutput) ToManagedServiceIdentityResponseOutputWithContext(ctx context.Context) ManagedServiceIdentityResponseOutput {
	return o
}

// The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.
func (o ManagedServiceIdentityResponseOutput) PrincipalId() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedServiceIdentityResponse) string { return v.PrincipalId }).(pulumi.StringOutput)
}

// The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.
func (o ManagedServiceIdentityResponseOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedServiceIdentityResponse) string { return v.TenantId }).(pulumi.StringOutput)
}

// Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
func (o ManagedServiceIdentityResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedServiceIdentityResponse) string { return v.Type }).(pulumi.StringOutput)
}

// The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.
func (o ManagedServiceIdentityResponseOutput) UserAssignedIdentities() UserAssignedIdentityResponseMapOutput {
	return o.ApplyT(func(v ManagedServiceIdentityResponse) map[string]UserAssignedIdentityResponse {
		return v.UserAssignedIdentities
	}).(UserAssignedIdentityResponseMapOutput)
}

type ManagedServiceIdentityResponsePtrOutput struct{ *pulumi.OutputState }

func (ManagedServiceIdentityResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedServiceIdentityResponse)(nil)).Elem()
}

func (o ManagedServiceIdentityResponsePtrOutput) ToManagedServiceIdentityResponsePtrOutput() ManagedServiceIdentityResponsePtrOutput {
	return o
}

func (o ManagedServiceIdentityResponsePtrOutput) ToManagedServiceIdentityResponsePtrOutputWithContext(ctx context.Context) ManagedServiceIdentityResponsePtrOutput {
	return o
}

func (o ManagedServiceIdentityResponsePtrOutput) Elem() ManagedServiceIdentityResponseOutput {
	return o.ApplyT(func(v *ManagedServiceIdentityResponse) ManagedServiceIdentityResponse {
		if v != nil {
			return *v
		}
		var ret ManagedServiceIdentityResponse
		return ret
	}).(ManagedServiceIdentityResponseOutput)
}

// The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.
func (o ManagedServiceIdentityResponsePtrOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedServiceIdentityResponse) *string {
		if v == nil {
			return nil
		}
		return &v.PrincipalId
	}).(pulumi.StringPtrOutput)
}

// The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.
func (o ManagedServiceIdentityResponsePtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedServiceIdentityResponse) *string {
		if v == nil {
			return nil
		}
		return &v.TenantId
	}).(pulumi.StringPtrOutput)
}

// Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
func (o ManagedServiceIdentityResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedServiceIdentityResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.
func (o ManagedServiceIdentityResponsePtrOutput) UserAssignedIdentities() UserAssignedIdentityResponseMapOutput {
	return o.ApplyT(func(v *ManagedServiceIdentityResponse) map[string]UserAssignedIdentityResponse {
		if v == nil {
			return nil
		}
		return v.UserAssignedIdentities
	}).(UserAssignedIdentityResponseMapOutput)
}

// Settings to be used when associating a project with a catalog.
type ProjectCatalogSettings struct {
	// Indicates catalog item types that can be synced.
	CatalogItemSyncTypes []string `pulumi:"catalogItemSyncTypes"`
}

// ProjectCatalogSettingsInput is an input type that accepts ProjectCatalogSettingsArgs and ProjectCatalogSettingsOutput values.
// You can construct a concrete instance of `ProjectCatalogSettingsInput` via:
//
//	ProjectCatalogSettingsArgs{...}
type ProjectCatalogSettingsInput interface {
	pulumi.Input

	ToProjectCatalogSettingsOutput() ProjectCatalogSettingsOutput
	ToProjectCatalogSettingsOutputWithContext(context.Context) ProjectCatalogSettingsOutput
}

// Settings to be used when associating a project with a catalog.
type ProjectCatalogSettingsArgs struct {
	// Indicates catalog item types that can be synced.
	CatalogItemSyncTypes pulumi.StringArrayInput `pulumi:"catalogItemSyncTypes"`
}

func (ProjectCatalogSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectCatalogSettings)(nil)).Elem()
}

func (i ProjectCatalogSettingsArgs) ToProjectCatalogSettingsOutput() ProjectCatalogSettingsOutput {
	return i.ToProjectCatalogSettingsOutputWithContext(context.Background())
}

func (i ProjectCatalogSettingsArgs) ToProjectCatalogSettingsOutputWithContext(ctx context.Context) ProjectCatalogSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectCatalogSettingsOutput)
}

func (i ProjectCatalogSettingsArgs) ToProjectCatalogSettingsPtrOutput() ProjectCatalogSettingsPtrOutput {
	return i.ToProjectCatalogSettingsPtrOutputWithContext(context.Background())
}

func (i ProjectCatalogSettingsArgs) ToProjectCatalogSettingsPtrOutputWithContext(ctx context.Context) ProjectCatalogSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectCatalogSettingsOutput).ToProjectCatalogSettingsPtrOutputWithContext(ctx)
}

// ProjectCatalogSettingsPtrInput is an input type that accepts ProjectCatalogSettingsArgs, ProjectCatalogSettingsPtr and ProjectCatalogSettingsPtrOutput values.
// You can construct a concrete instance of `ProjectCatalogSettingsPtrInput` via:
//
//	        ProjectCatalogSettingsArgs{...}
//
//	or:
//
//	        nil
type ProjectCatalogSettingsPtrInput interface {
	pulumi.Input

	ToProjectCatalogSettingsPtrOutput() ProjectCatalogSettingsPtrOutput
	ToProjectCatalogSettingsPtrOutputWithContext(context.Context) ProjectCatalogSettingsPtrOutput
}

type projectCatalogSettingsPtrType ProjectCatalogSettingsArgs

func ProjectCatalogSettingsPtr(v *ProjectCatalogSettingsArgs) ProjectCatalogSettingsPtrInput {
	return (*projectCatalogSettingsPtrType)(v)
}

func (*projectCatalogSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectCatalogSettings)(nil)).Elem()
}

func (i *projectCatalogSettingsPtrType) ToProjectCatalogSettingsPtrOutput() ProjectCatalogSettingsPtrOutput {
	return i.ToProjectCatalogSettingsPtrOutputWithContext(context.Background())
}

func (i *projectCatalogSettingsPtrType) ToProjectCatalogSettingsPtrOutputWithContext(ctx context.Context) ProjectCatalogSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectCatalogSettingsPtrOutput)
}

// Settings to be used when associating a project with a catalog.
type ProjectCatalogSettingsOutput struct{ *pulumi.OutputState }

func (ProjectCatalogSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectCatalogSettings)(nil)).Elem()
}

func (o ProjectCatalogSettingsOutput) ToProjectCatalogSettingsOutput() ProjectCatalogSettingsOutput {
	return o
}

func (o ProjectCatalogSettingsOutput) ToProjectCatalogSettingsOutputWithContext(ctx context.Context) ProjectCatalogSettingsOutput {
	return o
}

func (o ProjectCatalogSettingsOutput) ToProjectCatalogSettingsPtrOutput() ProjectCatalogSettingsPtrOutput {
	return o.ToProjectCatalogSettingsPtrOutputWithContext(context.Background())
}

func (o ProjectCatalogSettingsOutput) ToProjectCatalogSettingsPtrOutputWithContext(ctx context.Context) ProjectCatalogSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProjectCatalogSettings) *ProjectCatalogSettings {
		return &v
	}).(ProjectCatalogSettingsPtrOutput)
}

// Indicates catalog item types that can be synced.
func (o ProjectCatalogSettingsOutput) CatalogItemSyncTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ProjectCatalogSettings) []string { return v.CatalogItemSyncTypes }).(pulumi.StringArrayOutput)
}

type ProjectCatalogSettingsPtrOutput struct{ *pulumi.OutputState }

func (ProjectCatalogSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectCatalogSettings)(nil)).Elem()
}

func (o ProjectCatalogSettingsPtrOutput) ToProjectCatalogSettingsPtrOutput() ProjectCatalogSettingsPtrOutput {
	return o
}

func (o ProjectCatalogSettingsPtrOutput) ToProjectCatalogSettingsPtrOutputWithContext(ctx context.Context) ProjectCatalogSettingsPtrOutput {
	return o
}

func (o ProjectCatalogSettingsPtrOutput) Elem() ProjectCatalogSettingsOutput {
	return o.ApplyT(func(v *ProjectCatalogSettings) ProjectCatalogSettings {
		if v != nil {
			return *v
		}
		var ret ProjectCatalogSettings
		return ret
	}).(ProjectCatalogSettingsOutput)
}

// Indicates catalog item types that can be synced.
func (o ProjectCatalogSettingsPtrOutput) CatalogItemSyncTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ProjectCatalogSettings) []string {
		if v == nil {
			return nil
		}
		return v.CatalogItemSyncTypes
	}).(pulumi.StringArrayOutput)
}

// Settings to be used when associating a project with a catalog.
type ProjectCatalogSettingsResponse struct {
	// Indicates catalog item types that can be synced.
	CatalogItemSyncTypes []string `pulumi:"catalogItemSyncTypes"`
}

// Settings to be used when associating a project with a catalog.
type ProjectCatalogSettingsResponseOutput struct{ *pulumi.OutputState }

func (ProjectCatalogSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectCatalogSettingsResponse)(nil)).Elem()
}

func (o ProjectCatalogSettingsResponseOutput) ToProjectCatalogSettingsResponseOutput() ProjectCatalogSettingsResponseOutput {
	return o
}

func (o ProjectCatalogSettingsResponseOutput) ToProjectCatalogSettingsResponseOutputWithContext(ctx context.Context) ProjectCatalogSettingsResponseOutput {
	return o
}

// Indicates catalog item types that can be synced.
func (o ProjectCatalogSettingsResponseOutput) CatalogItemSyncTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ProjectCatalogSettingsResponse) []string { return v.CatalogItemSyncTypes }).(pulumi.StringArrayOutput)
}

type ProjectCatalogSettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (ProjectCatalogSettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectCatalogSettingsResponse)(nil)).Elem()
}

func (o ProjectCatalogSettingsResponsePtrOutput) ToProjectCatalogSettingsResponsePtrOutput() ProjectCatalogSettingsResponsePtrOutput {
	return o
}

func (o ProjectCatalogSettingsResponsePtrOutput) ToProjectCatalogSettingsResponsePtrOutputWithContext(ctx context.Context) ProjectCatalogSettingsResponsePtrOutput {
	return o
}

func (o ProjectCatalogSettingsResponsePtrOutput) Elem() ProjectCatalogSettingsResponseOutput {
	return o.ApplyT(func(v *ProjectCatalogSettingsResponse) ProjectCatalogSettingsResponse {
		if v != nil {
			return *v
		}
		var ret ProjectCatalogSettingsResponse
		return ret
	}).(ProjectCatalogSettingsResponseOutput)
}

// Indicates catalog item types that can be synced.
func (o ProjectCatalogSettingsResponsePtrOutput) CatalogItemSyncTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ProjectCatalogSettingsResponse) []string {
		if v == nil {
			return nil
		}
		return v.CatalogItemSyncTypes
	}).(pulumi.StringArrayOutput)
}

// The role definition assigned to the environment creator on backing resources.
type ProjectEnvironmentTypeUpdatePropertiesCreatorRoleAssignment struct {
	// A map of roles to assign to the environment creator.
	Roles []string `pulumi:"roles"`
}

// ProjectEnvironmentTypeUpdatePropertiesCreatorRoleAssignmentInput is an input type that accepts ProjectEnvironmentTypeUpdatePropertiesCreatorRoleAssignmentArgs and ProjectEnvironmentTypeUpdatePropertiesCreatorRoleAssignmentOutput values.
// You can construct a concrete instance of `ProjectEnvironmentTypeUpdatePropertiesCreatorRoleAssignmentInput` via:
//
//	ProjectEnvironmentTypeUpdatePropertiesCreatorRoleAssignmentArgs{...}
type ProjectEnvironmentTypeUpdatePropertiesCreatorRoleAssignmentInput interface {
	pulumi.Input

	ToProjectEnvironmentTypeUpdatePropertiesCreatorRoleAssignmentOutput() ProjectEnvironmentTypeUpdatePropertiesCreatorRoleAssignmentOutput
	ToProjectEnvironmentTypeUpdatePropertiesCreatorRoleAssignmentOutputWithContext(context.Context) ProjectEnvironmentTypeUpdatePropertiesCreatorRoleAssignmentOutput
}

// The role definition assigned to the environment creator on backing resources.
type ProjectEnvironmentTypeUpdatePropertiesCreatorRoleAssignmentArgs struct {
	// A map of roles to assign to the environment creator.
	Roles pulumi.StringArrayInput `pulumi:"roles"`
}

func (ProjectEnvironmentTypeUpdatePropertiesCreatorRoleAssignmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectEnvironmentTypeUpdatePropertiesCreatorRoleAssignment)(nil)).Elem()
}

func (i ProjectEnvironmentTypeUpdatePropertiesCreatorRoleAssignmentArgs) ToProjectEnvironmentTypeUpdatePropertiesCreatorRoleAssignmentOutput() ProjectEnvironmentTypeUpdatePropertiesCreatorRoleAssignmentOutput {
	return i.ToProjectEnvironmentTypeUpdatePropertiesCreatorRoleAssignmentOutputWithContext(context.Background())
}

func (i ProjectEnvironmentTypeUpdatePropertiesCreatorRoleAssignmentArgs) ToProjectEnvironmentTypeUpdatePropertiesCreatorRoleAssignmentOutputWithContext(ctx context.Context) ProjectEnvironmentTypeUpdatePropertiesCreatorRoleAssignmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectEnvironmentTypeUpdatePropertiesCreatorRoleAssignmentOutput)
}

func (i ProjectEnvironmentTypeUpdatePropertiesCreatorRoleAssignmentArgs) ToProjectEnvironmentTypeUpdatePropertiesCreatorRoleAssignmentPtrOutput() ProjectEnvironmentTypeUpdatePropertiesCreatorRoleAssignmentPtrOutput {
	return i.ToProjectEnvironmentTypeUpdatePropertiesCreatorRoleAssignmentPtrOutputWithContext(context.Background())
}

func (i ProjectEnvironmentTypeUpdatePropertiesCreatorRoleAssignmentArgs) ToProjectEnvironmentTypeUpdatePropertiesCreatorRoleAssignmentPtrOutputWithContext(ctx context.Context) ProjectEnvironmentTypeUpdatePropertiesCreatorRoleAssignmentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectEnvironmentTypeUpdatePropertiesCreatorRoleAssignmentOutput).ToProjectEnvironmentTypeUpdatePropertiesCreatorRoleAssignmentPtrOutputWithContext(ctx)
}

// ProjectEnvironmentTypeUpdatePropertiesCreatorRoleAssignmentPtrInput is an input type that accepts ProjectEnvironmentTypeUpdatePropertiesCreatorRoleAssignmentArgs, ProjectEnvironmentTypeUpdatePropertiesCreatorRoleAssignmentPtr and ProjectEnvironmentTypeUpdatePropertiesCreatorRoleAssignmentPtrOutput values.
// You can construct a concrete instance of `ProjectEnvironmentTypeUpdatePropertiesCreatorRoleAssignmentPtrInput` via:
//
//	        ProjectEnvironmentTypeUpdatePropertiesCreatorRoleAssignmentArgs{...}
//
//	or:
//
//	        nil
type ProjectEnvironmentTypeUpdatePropertiesCreatorRoleAssignmentPtrInput interface {
	pulumi.Input

	ToProjectEnvironmentTypeUpdatePropertiesCreatorRoleAssignmentPtrOutput() ProjectEnvironmentTypeUpdatePropertiesCreatorRoleAssignmentPtrOutput
	ToProjectEnvironmentTypeUpdatePropertiesCreatorRoleAssignmentPtrOutputWithContext(context.Context) ProjectEnvironmentTypeUpdatePropertiesCreatorRoleAssignmentPtrOutput
}

type projectEnvironmentTypeUpdatePropertiesCreatorRoleAssignmentPtrType ProjectEnvironmentTypeUpdatePropertiesCreatorRoleAssignmentArgs

func ProjectEnvironmentTypeUpdatePropertiesCreatorRoleAssignmentPtr(v *ProjectEnvironmentTypeUpdatePropertiesCreatorRoleAssignmentArgs) ProjectEnvironmentTypeUpdatePropertiesCreatorRoleAssignmentPtrInput {
	return (*projectEnvironmentTypeUpdatePropertiesCreatorRoleAssignmentPtrType)(v)
}

func (*projectEnvironmentTypeUpdatePropertiesCreatorRoleAssignmentPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectEnvironmentTypeUpdatePropertiesCreatorRoleAssignment)(nil)).Elem()
}

func (i *projectEnvironmentTypeUpdatePropertiesCreatorRoleAssignmentPtrType) ToProjectEnvironmentTypeUpdatePropertiesCreatorRoleAssignmentPtrOutput() ProjectEnvironmentTypeUpdatePropertiesCreatorRoleAssignmentPtrOutput {
	return i.ToProjectEnvironmentTypeUpdatePropertiesCreatorRoleAssignmentPtrOutputWithContext(context.Background())
}

func (i *projectEnvironmentTypeUpdatePropertiesCreatorRoleAssignmentPtrType) ToProjectEnvironmentTypeUpdatePropertiesCreatorRoleAssignmentPtrOutputWithContext(ctx context.Context) ProjectEnvironmentTypeUpdatePropertiesCreatorRoleAssignmentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectEnvironmentTypeUpdatePropertiesCreatorRoleAssignmentPtrOutput)
}

// The role definition assigned to the environment creator on backing resources.
type ProjectEnvironmentTypeUpdatePropertiesCreatorRoleAssignmentOutput struct{ *pulumi.OutputState }

func (ProjectEnvironmentTypeUpdatePropertiesCreatorRoleAssignmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectEnvironmentTypeUpdatePropertiesCreatorRoleAssignment)(nil)).Elem()
}

func (o ProjectEnvironmentTypeUpdatePropertiesCreatorRoleAssignmentOutput) ToProjectEnvironmentTypeUpdatePropertiesCreatorRoleAssignmentOutput() ProjectEnvironmentTypeUpdatePropertiesCreatorRoleAssignmentOutput {
	return o
}

func (o ProjectEnvironmentTypeUpdatePropertiesCreatorRoleAssignmentOutput) ToProjectEnvironmentTypeUpdatePropertiesCreatorRoleAssignmentOutputWithContext(ctx context.Context) ProjectEnvironmentTypeUpdatePropertiesCreatorRoleAssignmentOutput {
	return o
}

func (o ProjectEnvironmentTypeUpdatePropertiesCreatorRoleAssignmentOutput) ToProjectEnvironmentTypeUpdatePropertiesCreatorRoleAssignmentPtrOutput() ProjectEnvironmentTypeUpdatePropertiesCreatorRoleAssignmentPtrOutput {
	return o.ToProjectEnvironmentTypeUpdatePropertiesCreatorRoleAssignmentPtrOutputWithContext(context.Background())
}

func (o ProjectEnvironmentTypeUpdatePropertiesCreatorRoleAssignmentOutput) ToProjectEnvironmentTypeUpdatePropertiesCreatorRoleAssignmentPtrOutputWithContext(ctx context.Context) ProjectEnvironmentTypeUpdatePropertiesCreatorRoleAssignmentPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProjectEnvironmentTypeUpdatePropertiesCreatorRoleAssignment) *ProjectEnvironmentTypeUpdatePropertiesCreatorRoleAssignment {
		return &v
	}).(ProjectEnvironmentTypeUpdatePropertiesCreatorRoleAssignmentPtrOutput)
}

// A map of roles to assign to the environment creator.
func (o ProjectEnvironmentTypeUpdatePropertiesCreatorRoleAssignmentOutput) Roles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ProjectEnvironmentTypeUpdatePropertiesCreatorRoleAssignment) []string { return v.Roles }).(pulumi.StringArrayOutput)
}

type ProjectEnvironmentTypeUpdatePropertiesCreatorRoleAssignmentPtrOutput struct{ *pulumi.OutputState }

func (ProjectEnvironmentTypeUpdatePropertiesCreatorRoleAssignmentPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectEnvironmentTypeUpdatePropertiesCreatorRoleAssignment)(nil)).Elem()
}

func (o ProjectEnvironmentTypeUpdatePropertiesCreatorRoleAssignmentPtrOutput) ToProjectEnvironmentTypeUpdatePropertiesCreatorRoleAssignmentPtrOutput() ProjectEnvironmentTypeUpdatePropertiesCreatorRoleAssignmentPtrOutput {
	return o
}

func (o ProjectEnvironmentTypeUpdatePropertiesCreatorRoleAssignmentPtrOutput) ToProjectEnvironmentTypeUpdatePropertiesCreatorRoleAssignmentPtrOutputWithContext(ctx context.Context) ProjectEnvironmentTypeUpdatePropertiesCreatorRoleAssignmentPtrOutput {
	return o
}

func (o ProjectEnvironmentTypeUpdatePropertiesCreatorRoleAssignmentPtrOutput) Elem() ProjectEnvironmentTypeUpdatePropertiesCreatorRoleAssignmentOutput {
	return o.ApplyT(func(v *ProjectEnvironmentTypeUpdatePropertiesCreatorRoleAssignment) ProjectEnvironmentTypeUpdatePropertiesCreatorRoleAssignment {
		if v != nil {
			return *v
		}
		var ret ProjectEnvironmentTypeUpdatePropertiesCreatorRoleAssignment
		return ret
	}).(ProjectEnvironmentTypeUpdatePropertiesCreatorRoleAssignmentOutput)
}

// A map of roles to assign to the environment creator.
func (o ProjectEnvironmentTypeUpdatePropertiesCreatorRoleAssignmentPtrOutput) Roles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ProjectEnvironmentTypeUpdatePropertiesCreatorRoleAssignment) []string {
		if v == nil {
			return nil
		}
		return v.Roles
	}).(pulumi.StringArrayOutput)
}

// The role definition assigned to the environment creator on backing resources.
type ProjectEnvironmentTypeUpdatePropertiesResponseCreatorRoleAssignment struct {
	// A map of roles to assign to the environment creator.
	Roles map[string]EnvironmentRoleResponse `pulumi:"roles"`
}

// The role definition assigned to the environment creator on backing resources.
type ProjectEnvironmentTypeUpdatePropertiesResponseCreatorRoleAssignmentOutput struct{ *pulumi.OutputState }

func (ProjectEnvironmentTypeUpdatePropertiesResponseCreatorRoleAssignmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectEnvironmentTypeUpdatePropertiesResponseCreatorRoleAssignment)(nil)).Elem()
}

func (o ProjectEnvironmentTypeUpdatePropertiesResponseCreatorRoleAssignmentOutput) ToProjectEnvironmentTypeUpdatePropertiesResponseCreatorRoleAssignmentOutput() ProjectEnvironmentTypeUpdatePropertiesResponseCreatorRoleAssignmentOutput {
	return o
}

func (o ProjectEnvironmentTypeUpdatePropertiesResponseCreatorRoleAssignmentOutput) ToProjectEnvironmentTypeUpdatePropertiesResponseCreatorRoleAssignmentOutputWithContext(ctx context.Context) ProjectEnvironmentTypeUpdatePropertiesResponseCreatorRoleAssignmentOutput {
	return o
}

// A map of roles to assign to the environment creator.
func (o ProjectEnvironmentTypeUpdatePropertiesResponseCreatorRoleAssignmentOutput) Roles() EnvironmentRoleResponseMapOutput {
	return o.ApplyT(func(v ProjectEnvironmentTypeUpdatePropertiesResponseCreatorRoleAssignment) map[string]EnvironmentRoleResponse {
		return v.Roles
	}).(EnvironmentRoleResponseMapOutput)
}

type ProjectEnvironmentTypeUpdatePropertiesResponseCreatorRoleAssignmentPtrOutput struct{ *pulumi.OutputState }

func (ProjectEnvironmentTypeUpdatePropertiesResponseCreatorRoleAssignmentPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectEnvironmentTypeUpdatePropertiesResponseCreatorRoleAssignment)(nil)).Elem()
}

func (o ProjectEnvironmentTypeUpdatePropertiesResponseCreatorRoleAssignmentPtrOutput) ToProjectEnvironmentTypeUpdatePropertiesResponseCreatorRoleAssignmentPtrOutput() ProjectEnvironmentTypeUpdatePropertiesResponseCreatorRoleAssignmentPtrOutput {
	return o
}

func (o ProjectEnvironmentTypeUpdatePropertiesResponseCreatorRoleAssignmentPtrOutput) ToProjectEnvironmentTypeUpdatePropertiesResponseCreatorRoleAssignmentPtrOutputWithContext(ctx context.Context) ProjectEnvironmentTypeUpdatePropertiesResponseCreatorRoleAssignmentPtrOutput {
	return o
}

func (o ProjectEnvironmentTypeUpdatePropertiesResponseCreatorRoleAssignmentPtrOutput) Elem() ProjectEnvironmentTypeUpdatePropertiesResponseCreatorRoleAssignmentOutput {
	return o.ApplyT(func(v *ProjectEnvironmentTypeUpdatePropertiesResponseCreatorRoleAssignment) ProjectEnvironmentTypeUpdatePropertiesResponseCreatorRoleAssignment {
		if v != nil {
			return *v
		}
		var ret ProjectEnvironmentTypeUpdatePropertiesResponseCreatorRoleAssignment
		return ret
	}).(ProjectEnvironmentTypeUpdatePropertiesResponseCreatorRoleAssignmentOutput)
}

// A map of roles to assign to the environment creator.
func (o ProjectEnvironmentTypeUpdatePropertiesResponseCreatorRoleAssignmentPtrOutput) Roles() EnvironmentRoleResponseMapOutput {
	return o.ApplyT(func(v *ProjectEnvironmentTypeUpdatePropertiesResponseCreatorRoleAssignment) map[string]EnvironmentRoleResponse {
		if v == nil {
			return nil
		}
		return v.Roles
	}).(EnvironmentRoleResponseMapOutput)
}

// Network settings for the project.
type ProjectNetworkSettingsResponse struct {
	// Indicates whether pools in this Dev Center can use Microsoft Hosted Networks. Defaults to Enabled if not set.
	MicrosoftHostedNetworkEnableStatus string `pulumi:"microsoftHostedNetworkEnableStatus"`
}

// Network settings for the project.
type ProjectNetworkSettingsResponseOutput struct{ *pulumi.OutputState }

func (ProjectNetworkSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectNetworkSettingsResponse)(nil)).Elem()
}

func (o ProjectNetworkSettingsResponseOutput) ToProjectNetworkSettingsResponseOutput() ProjectNetworkSettingsResponseOutput {
	return o
}

func (o ProjectNetworkSettingsResponseOutput) ToProjectNetworkSettingsResponseOutputWithContext(ctx context.Context) ProjectNetworkSettingsResponseOutput {
	return o
}

// Indicates whether pools in this Dev Center can use Microsoft Hosted Networks. Defaults to Enabled if not set.
func (o ProjectNetworkSettingsResponseOutput) MicrosoftHostedNetworkEnableStatus() pulumi.StringOutput {
	return o.ApplyT(func(v ProjectNetworkSettingsResponse) string { return v.MicrosoftHostedNetworkEnableStatus }).(pulumi.StringOutput)
}

// The resource model definition representing SKU
type Sku struct {
	// If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.
	Capacity *int `pulumi:"capacity"`
	// If the service has different generations of hardware, for the same SKU, then that can be captured here.
	Family *string `pulumi:"family"`
	// The name of the SKU. E.g. P3. It is typically a letter+number code
	Name string `pulumi:"name"`
	// The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code.
	Size *string `pulumi:"size"`
	// This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.
	Tier *SkuTier `pulumi:"tier"`
}

// SkuInput is an input type that accepts SkuArgs and SkuOutput values.
// You can construct a concrete instance of `SkuInput` via:
//
//	SkuArgs{...}
type SkuInput interface {
	pulumi.Input

	ToSkuOutput() SkuOutput
	ToSkuOutputWithContext(context.Context) SkuOutput
}

// The resource model definition representing SKU
type SkuArgs struct {
	// If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.
	Capacity pulumi.IntPtrInput `pulumi:"capacity"`
	// If the service has different generations of hardware, for the same SKU, then that can be captured here.
	Family pulumi.StringPtrInput `pulumi:"family"`
	// The name of the SKU. E.g. P3. It is typically a letter+number code
	Name pulumi.StringInput `pulumi:"name"`
	// The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code.
	Size pulumi.StringPtrInput `pulumi:"size"`
	// This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.
	Tier SkuTierPtrInput `pulumi:"tier"`
}

func (SkuArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Sku)(nil)).Elem()
}

func (i SkuArgs) ToSkuOutput() SkuOutput {
	return i.ToSkuOutputWithContext(context.Background())
}

func (i SkuArgs) ToSkuOutputWithContext(ctx context.Context) SkuOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuOutput)
}

func (i SkuArgs) ToSkuPtrOutput() SkuPtrOutput {
	return i.ToSkuPtrOutputWithContext(context.Background())
}

func (i SkuArgs) ToSkuPtrOutputWithContext(ctx context.Context) SkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuOutput).ToSkuPtrOutputWithContext(ctx)
}

// SkuPtrInput is an input type that accepts SkuArgs, SkuPtr and SkuPtrOutput values.
// You can construct a concrete instance of `SkuPtrInput` via:
//
//	        SkuArgs{...}
//
//	or:
//
//	        nil
type SkuPtrInput interface {
	pulumi.Input

	ToSkuPtrOutput() SkuPtrOutput
	ToSkuPtrOutputWithContext(context.Context) SkuPtrOutput
}

type skuPtrType SkuArgs

func SkuPtr(v *SkuArgs) SkuPtrInput {
	return (*skuPtrType)(v)
}

func (*skuPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Sku)(nil)).Elem()
}

func (i *skuPtrType) ToSkuPtrOutput() SkuPtrOutput {
	return i.ToSkuPtrOutputWithContext(context.Background())
}

func (i *skuPtrType) ToSkuPtrOutputWithContext(ctx context.Context) SkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuPtrOutput)
}

// The resource model definition representing SKU
type SkuOutput struct{ *pulumi.OutputState }

func (SkuOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Sku)(nil)).Elem()
}

func (o SkuOutput) ToSkuOutput() SkuOutput {
	return o
}

func (o SkuOutput) ToSkuOutputWithContext(ctx context.Context) SkuOutput {
	return o
}

func (o SkuOutput) ToSkuPtrOutput() SkuPtrOutput {
	return o.ToSkuPtrOutputWithContext(context.Background())
}

func (o SkuOutput) ToSkuPtrOutputWithContext(ctx context.Context) SkuPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Sku) *Sku {
		return &v
	}).(SkuPtrOutput)
}

// If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.
func (o SkuOutput) Capacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Sku) *int { return v.Capacity }).(pulumi.IntPtrOutput)
}

// If the service has different generations of hardware, for the same SKU, then that can be captured here.
func (o SkuOutput) Family() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Sku) *string { return v.Family }).(pulumi.StringPtrOutput)
}

// The name of the SKU. E.g. P3. It is typically a letter+number code
func (o SkuOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v Sku) string { return v.Name }).(pulumi.StringOutput)
}

// The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code.
func (o SkuOutput) Size() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Sku) *string { return v.Size }).(pulumi.StringPtrOutput)
}

// This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.
func (o SkuOutput) Tier() SkuTierPtrOutput {
	return o.ApplyT(func(v Sku) *SkuTier { return v.Tier }).(SkuTierPtrOutput)
}

type SkuPtrOutput struct{ *pulumi.OutputState }

func (SkuPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Sku)(nil)).Elem()
}

func (o SkuPtrOutput) ToSkuPtrOutput() SkuPtrOutput {
	return o
}

func (o SkuPtrOutput) ToSkuPtrOutputWithContext(ctx context.Context) SkuPtrOutput {
	return o
}

func (o SkuPtrOutput) Elem() SkuOutput {
	return o.ApplyT(func(v *Sku) Sku {
		if v != nil {
			return *v
		}
		var ret Sku
		return ret
	}).(SkuOutput)
}

// If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.
func (o SkuPtrOutput) Capacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Sku) *int {
		if v == nil {
			return nil
		}
		return v.Capacity
	}).(pulumi.IntPtrOutput)
}

// If the service has different generations of hardware, for the same SKU, then that can be captured here.
func (o SkuPtrOutput) Family() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Sku) *string {
		if v == nil {
			return nil
		}
		return v.Family
	}).(pulumi.StringPtrOutput)
}

// The name of the SKU. E.g. P3. It is typically a letter+number code
func (o SkuPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Sku) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code.
func (o SkuPtrOutput) Size() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Sku) *string {
		if v == nil {
			return nil
		}
		return v.Size
	}).(pulumi.StringPtrOutput)
}

// This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.
func (o SkuPtrOutput) Tier() SkuTierPtrOutput {
	return o.ApplyT(func(v *Sku) *SkuTier {
		if v == nil {
			return nil
		}
		return v.Tier
	}).(SkuTierPtrOutput)
}

// The resource model definition representing SKU
type SkuResponse struct {
	// If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.
	Capacity *int `pulumi:"capacity"`
	// If the service has different generations of hardware, for the same SKU, then that can be captured here.
	Family *string `pulumi:"family"`
	// The name of the SKU. E.g. P3. It is typically a letter+number code
	Name string `pulumi:"name"`
	// The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code.
	Size *string `pulumi:"size"`
	// This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.
	Tier *string `pulumi:"tier"`
}

// The resource model definition representing SKU
type SkuResponseOutput struct{ *pulumi.OutputState }

func (SkuResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuResponse)(nil)).Elem()
}

func (o SkuResponseOutput) ToSkuResponseOutput() SkuResponseOutput {
	return o
}

func (o SkuResponseOutput) ToSkuResponseOutputWithContext(ctx context.Context) SkuResponseOutput {
	return o
}

// If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.
func (o SkuResponseOutput) Capacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SkuResponse) *int { return v.Capacity }).(pulumi.IntPtrOutput)
}

// If the service has different generations of hardware, for the same SKU, then that can be captured here.
func (o SkuResponseOutput) Family() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SkuResponse) *string { return v.Family }).(pulumi.StringPtrOutput)
}

// The name of the SKU. E.g. P3. It is typically a letter+number code
func (o SkuResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v SkuResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code.
func (o SkuResponseOutput) Size() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SkuResponse) *string { return v.Size }).(pulumi.StringPtrOutput)
}

// This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.
func (o SkuResponseOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SkuResponse) *string { return v.Tier }).(pulumi.StringPtrOutput)
}

type SkuResponsePtrOutput struct{ *pulumi.OutputState }

func (SkuResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SkuResponse)(nil)).Elem()
}

func (o SkuResponsePtrOutput) ToSkuResponsePtrOutput() SkuResponsePtrOutput {
	return o
}

func (o SkuResponsePtrOutput) ToSkuResponsePtrOutputWithContext(ctx context.Context) SkuResponsePtrOutput {
	return o
}

func (o SkuResponsePtrOutput) Elem() SkuResponseOutput {
	return o.ApplyT(func(v *SkuResponse) SkuResponse {
		if v != nil {
			return *v
		}
		var ret SkuResponse
		return ret
	}).(SkuResponseOutput)
}

// If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.
func (o SkuResponsePtrOutput) Capacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SkuResponse) *int {
		if v == nil {
			return nil
		}
		return v.Capacity
	}).(pulumi.IntPtrOutput)
}

// If the service has different generations of hardware, for the same SKU, then that can be captured here.
func (o SkuResponsePtrOutput) Family() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkuResponse) *string {
		if v == nil {
			return nil
		}
		return v.Family
	}).(pulumi.StringPtrOutput)
}

// The name of the SKU. E.g. P3. It is typically a letter+number code
func (o SkuResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkuResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code.
func (o SkuResponsePtrOutput) Size() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkuResponse) *string {
		if v == nil {
			return nil
		}
		return v.Size
	}).(pulumi.StringPtrOutput)
}

// This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.
func (o SkuResponsePtrOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkuResponse) *string {
		if v == nil {
			return nil
		}
		return v.Tier
	}).(pulumi.StringPtrOutput)
}

// Stop on disconnect configuration settings for Dev Boxes created in this pool.
type StopOnDisconnectConfiguration struct {
	// The specified time in minutes to wait before stopping a Dev Box once disconnect is detected.
	GracePeriodMinutes *int `pulumi:"gracePeriodMinutes"`
	// Whether the feature to stop the Dev Box on disconnect once the grace period has lapsed is enabled.
	Status *string `pulumi:"status"`
}

// StopOnDisconnectConfigurationInput is an input type that accepts StopOnDisconnectConfigurationArgs and StopOnDisconnectConfigurationOutput values.
// You can construct a concrete instance of `StopOnDisconnectConfigurationInput` via:
//
//	StopOnDisconnectConfigurationArgs{...}
type StopOnDisconnectConfigurationInput interface {
	pulumi.Input

	ToStopOnDisconnectConfigurationOutput() StopOnDisconnectConfigurationOutput
	ToStopOnDisconnectConfigurationOutputWithContext(context.Context) StopOnDisconnectConfigurationOutput
}

// Stop on disconnect configuration settings for Dev Boxes created in this pool.
type StopOnDisconnectConfigurationArgs struct {
	// The specified time in minutes to wait before stopping a Dev Box once disconnect is detected.
	GracePeriodMinutes pulumi.IntPtrInput `pulumi:"gracePeriodMinutes"`
	// Whether the feature to stop the Dev Box on disconnect once the grace period has lapsed is enabled.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (StopOnDisconnectConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StopOnDisconnectConfiguration)(nil)).Elem()
}

func (i StopOnDisconnectConfigurationArgs) ToStopOnDisconnectConfigurationOutput() StopOnDisconnectConfigurationOutput {
	return i.ToStopOnDisconnectConfigurationOutputWithContext(context.Background())
}

func (i StopOnDisconnectConfigurationArgs) ToStopOnDisconnectConfigurationOutputWithContext(ctx context.Context) StopOnDisconnectConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StopOnDisconnectConfigurationOutput)
}

func (i StopOnDisconnectConfigurationArgs) ToStopOnDisconnectConfigurationPtrOutput() StopOnDisconnectConfigurationPtrOutput {
	return i.ToStopOnDisconnectConfigurationPtrOutputWithContext(context.Background())
}

func (i StopOnDisconnectConfigurationArgs) ToStopOnDisconnectConfigurationPtrOutputWithContext(ctx context.Context) StopOnDisconnectConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StopOnDisconnectConfigurationOutput).ToStopOnDisconnectConfigurationPtrOutputWithContext(ctx)
}

// StopOnDisconnectConfigurationPtrInput is an input type that accepts StopOnDisconnectConfigurationArgs, StopOnDisconnectConfigurationPtr and StopOnDisconnectConfigurationPtrOutput values.
// You can construct a concrete instance of `StopOnDisconnectConfigurationPtrInput` via:
//
//	        StopOnDisconnectConfigurationArgs{...}
//
//	or:
//
//	        nil
type StopOnDisconnectConfigurationPtrInput interface {
	pulumi.Input

	ToStopOnDisconnectConfigurationPtrOutput() StopOnDisconnectConfigurationPtrOutput
	ToStopOnDisconnectConfigurationPtrOutputWithContext(context.Context) StopOnDisconnectConfigurationPtrOutput
}

type stopOnDisconnectConfigurationPtrType StopOnDisconnectConfigurationArgs

func StopOnDisconnectConfigurationPtr(v *StopOnDisconnectConfigurationArgs) StopOnDisconnectConfigurationPtrInput {
	return (*stopOnDisconnectConfigurationPtrType)(v)
}

func (*stopOnDisconnectConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StopOnDisconnectConfiguration)(nil)).Elem()
}

func (i *stopOnDisconnectConfigurationPtrType) ToStopOnDisconnectConfigurationPtrOutput() StopOnDisconnectConfigurationPtrOutput {
	return i.ToStopOnDisconnectConfigurationPtrOutputWithContext(context.Background())
}

func (i *stopOnDisconnectConfigurationPtrType) ToStopOnDisconnectConfigurationPtrOutputWithContext(ctx context.Context) StopOnDisconnectConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StopOnDisconnectConfigurationPtrOutput)
}

// Stop on disconnect configuration settings for Dev Boxes created in this pool.
type StopOnDisconnectConfigurationOutput struct{ *pulumi.OutputState }

func (StopOnDisconnectConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StopOnDisconnectConfiguration)(nil)).Elem()
}

func (o StopOnDisconnectConfigurationOutput) ToStopOnDisconnectConfigurationOutput() StopOnDisconnectConfigurationOutput {
	return o
}

func (o StopOnDisconnectConfigurationOutput) ToStopOnDisconnectConfigurationOutputWithContext(ctx context.Context) StopOnDisconnectConfigurationOutput {
	return o
}

func (o StopOnDisconnectConfigurationOutput) ToStopOnDisconnectConfigurationPtrOutput() StopOnDisconnectConfigurationPtrOutput {
	return o.ToStopOnDisconnectConfigurationPtrOutputWithContext(context.Background())
}

func (o StopOnDisconnectConfigurationOutput) ToStopOnDisconnectConfigurationPtrOutputWithContext(ctx context.Context) StopOnDisconnectConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v StopOnDisconnectConfiguration) *StopOnDisconnectConfiguration {
		return &v
	}).(StopOnDisconnectConfigurationPtrOutput)
}

// The specified time in minutes to wait before stopping a Dev Box once disconnect is detected.
func (o StopOnDisconnectConfigurationOutput) GracePeriodMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v StopOnDisconnectConfiguration) *int { return v.GracePeriodMinutes }).(pulumi.IntPtrOutput)
}

// Whether the feature to stop the Dev Box on disconnect once the grace period has lapsed is enabled.
func (o StopOnDisconnectConfigurationOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StopOnDisconnectConfiguration) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type StopOnDisconnectConfigurationPtrOutput struct{ *pulumi.OutputState }

func (StopOnDisconnectConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StopOnDisconnectConfiguration)(nil)).Elem()
}

func (o StopOnDisconnectConfigurationPtrOutput) ToStopOnDisconnectConfigurationPtrOutput() StopOnDisconnectConfigurationPtrOutput {
	return o
}

func (o StopOnDisconnectConfigurationPtrOutput) ToStopOnDisconnectConfigurationPtrOutputWithContext(ctx context.Context) StopOnDisconnectConfigurationPtrOutput {
	return o
}

func (o StopOnDisconnectConfigurationPtrOutput) Elem() StopOnDisconnectConfigurationOutput {
	return o.ApplyT(func(v *StopOnDisconnectConfiguration) StopOnDisconnectConfiguration {
		if v != nil {
			return *v
		}
		var ret StopOnDisconnectConfiguration
		return ret
	}).(StopOnDisconnectConfigurationOutput)
}

// The specified time in minutes to wait before stopping a Dev Box once disconnect is detected.
func (o StopOnDisconnectConfigurationPtrOutput) GracePeriodMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *StopOnDisconnectConfiguration) *int {
		if v == nil {
			return nil
		}
		return v.GracePeriodMinutes
	}).(pulumi.IntPtrOutput)
}

// Whether the feature to stop the Dev Box on disconnect once the grace period has lapsed is enabled.
func (o StopOnDisconnectConfigurationPtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StopOnDisconnectConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

// Stop on disconnect configuration settings for Dev Boxes created in this pool.
type StopOnDisconnectConfigurationResponse struct {
	// The specified time in minutes to wait before stopping a Dev Box once disconnect is detected.
	GracePeriodMinutes *int `pulumi:"gracePeriodMinutes"`
	// Whether the feature to stop the Dev Box on disconnect once the grace period has lapsed is enabled.
	Status *string `pulumi:"status"`
}

// Stop on disconnect configuration settings for Dev Boxes created in this pool.
type StopOnDisconnectConfigurationResponseOutput struct{ *pulumi.OutputState }

func (StopOnDisconnectConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StopOnDisconnectConfigurationResponse)(nil)).Elem()
}

func (o StopOnDisconnectConfigurationResponseOutput) ToStopOnDisconnectConfigurationResponseOutput() StopOnDisconnectConfigurationResponseOutput {
	return o
}

func (o StopOnDisconnectConfigurationResponseOutput) ToStopOnDisconnectConfigurationResponseOutputWithContext(ctx context.Context) StopOnDisconnectConfigurationResponseOutput {
	return o
}

// The specified time in minutes to wait before stopping a Dev Box once disconnect is detected.
func (o StopOnDisconnectConfigurationResponseOutput) GracePeriodMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v StopOnDisconnectConfigurationResponse) *int { return v.GracePeriodMinutes }).(pulumi.IntPtrOutput)
}

// Whether the feature to stop the Dev Box on disconnect once the grace period has lapsed is enabled.
func (o StopOnDisconnectConfigurationResponseOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StopOnDisconnectConfigurationResponse) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type StopOnDisconnectConfigurationResponsePtrOutput struct{ *pulumi.OutputState }

func (StopOnDisconnectConfigurationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StopOnDisconnectConfigurationResponse)(nil)).Elem()
}

func (o StopOnDisconnectConfigurationResponsePtrOutput) ToStopOnDisconnectConfigurationResponsePtrOutput() StopOnDisconnectConfigurationResponsePtrOutput {
	return o
}

func (o StopOnDisconnectConfigurationResponsePtrOutput) ToStopOnDisconnectConfigurationResponsePtrOutputWithContext(ctx context.Context) StopOnDisconnectConfigurationResponsePtrOutput {
	return o
}

func (o StopOnDisconnectConfigurationResponsePtrOutput) Elem() StopOnDisconnectConfigurationResponseOutput {
	return o.ApplyT(func(v *StopOnDisconnectConfigurationResponse) StopOnDisconnectConfigurationResponse {
		if v != nil {
			return *v
		}
		var ret StopOnDisconnectConfigurationResponse
		return ret
	}).(StopOnDisconnectConfigurationResponseOutput)
}

// The specified time in minutes to wait before stopping a Dev Box once disconnect is detected.
func (o StopOnDisconnectConfigurationResponsePtrOutput) GracePeriodMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *StopOnDisconnectConfigurationResponse) *int {
		if v == nil {
			return nil
		}
		return v.GracePeriodMinutes
	}).(pulumi.IntPtrOutput)
}

// Whether the feature to stop the Dev Box on disconnect once the grace period has lapsed is enabled.
func (o StopOnDisconnectConfigurationResponsePtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StopOnDisconnectConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

// Stats of the synchronization.
type SyncStatsResponse struct {
	// Count of catalog items added during synchronization.
	Added int `pulumi:"added"`
	// Count of catalog items removed during synchronization.
	Removed int `pulumi:"removed"`
	// Indicates catalog item types that were synced.
	SyncedCatalogItemTypes []string `pulumi:"syncedCatalogItemTypes"`
	// Count of synchronization errors that occured during synchronization.
	SynchronizationErrors int `pulumi:"synchronizationErrors"`
	// Count of catalog items that were unchanged during synchronization.
	Unchanged int `pulumi:"unchanged"`
	// Count of catalog items updated during synchronization.
	Updated int `pulumi:"updated"`
	// Count of catalog items that had validation errors during synchronization.
	ValidationErrors int `pulumi:"validationErrors"`
}

// Stats of the synchronization.
type SyncStatsResponseOutput struct{ *pulumi.OutputState }

func (SyncStatsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SyncStatsResponse)(nil)).Elem()
}

func (o SyncStatsResponseOutput) ToSyncStatsResponseOutput() SyncStatsResponseOutput {
	return o
}

func (o SyncStatsResponseOutput) ToSyncStatsResponseOutputWithContext(ctx context.Context) SyncStatsResponseOutput {
	return o
}

// Count of catalog items added during synchronization.
func (o SyncStatsResponseOutput) Added() pulumi.IntOutput {
	return o.ApplyT(func(v SyncStatsResponse) int { return v.Added }).(pulumi.IntOutput)
}

// Count of catalog items removed during synchronization.
func (o SyncStatsResponseOutput) Removed() pulumi.IntOutput {
	return o.ApplyT(func(v SyncStatsResponse) int { return v.Removed }).(pulumi.IntOutput)
}

// Indicates catalog item types that were synced.
func (o SyncStatsResponseOutput) SyncedCatalogItemTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SyncStatsResponse) []string { return v.SyncedCatalogItemTypes }).(pulumi.StringArrayOutput)
}

// Count of synchronization errors that occured during synchronization.
func (o SyncStatsResponseOutput) SynchronizationErrors() pulumi.IntOutput {
	return o.ApplyT(func(v SyncStatsResponse) int { return v.SynchronizationErrors }).(pulumi.IntOutput)
}

// Count of catalog items that were unchanged during synchronization.
func (o SyncStatsResponseOutput) Unchanged() pulumi.IntOutput {
	return o.ApplyT(func(v SyncStatsResponse) int { return v.Unchanged }).(pulumi.IntOutput)
}

// Count of catalog items updated during synchronization.
func (o SyncStatsResponseOutput) Updated() pulumi.IntOutput {
	return o.ApplyT(func(v SyncStatsResponse) int { return v.Updated }).(pulumi.IntOutput)
}

// Count of catalog items that had validation errors during synchronization.
func (o SyncStatsResponseOutput) ValidationErrors() pulumi.IntOutput {
	return o.ApplyT(func(v SyncStatsResponse) int { return v.ValidationErrors }).(pulumi.IntOutput)
}

// Metadata pertaining to creation and last modification of the resource.
type SystemDataResponse struct {
	// The timestamp of resource creation (UTC).
	CreatedAt *string `pulumi:"createdAt"`
	// The identity that created the resource.
	CreatedBy *string `pulumi:"createdBy"`
	// The type of identity that created the resource.
	CreatedByType *string `pulumi:"createdByType"`
	// The timestamp of resource last modification (UTC)
	LastModifiedAt *string `pulumi:"lastModifiedAt"`
	// The identity that last modified the resource.
	LastModifiedBy *string `pulumi:"lastModifiedBy"`
	// The type of identity that last modified the resource.
	LastModifiedByType *string `pulumi:"lastModifiedByType"`
}

// Metadata pertaining to creation and last modification of the resource.
type SystemDataResponseOutput struct{ *pulumi.OutputState }

func (SystemDataResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemDataResponse)(nil)).Elem()
}

func (o SystemDataResponseOutput) ToSystemDataResponseOutput() SystemDataResponseOutput {
	return o
}

func (o SystemDataResponseOutput) ToSystemDataResponseOutputWithContext(ctx context.Context) SystemDataResponseOutput {
	return o
}

// The timestamp of resource creation (UTC).
func (o SystemDataResponseOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedAt }).(pulumi.StringPtrOutput)
}

// The identity that created the resource.
func (o SystemDataResponseOutput) CreatedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedBy }).(pulumi.StringPtrOutput)
}

// The type of identity that created the resource.
func (o SystemDataResponseOutput) CreatedByType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedByType }).(pulumi.StringPtrOutput)
}

// The timestamp of resource last modification (UTC)
func (o SystemDataResponseOutput) LastModifiedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedAt }).(pulumi.StringPtrOutput)
}

// The identity that last modified the resource.
func (o SystemDataResponseOutput) LastModifiedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedBy }).(pulumi.StringPtrOutput)
}

// The type of identity that last modified the resource.
func (o SystemDataResponseOutput) LastModifiedByType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedByType }).(pulumi.StringPtrOutput)
}

// User assigned identity properties
type UserAssignedIdentityResponse struct {
	// The client ID of the assigned identity.
	ClientId string `pulumi:"clientId"`
	// The principal ID of the assigned identity.
	PrincipalId string `pulumi:"principalId"`
}

// User assigned identity properties
type UserAssignedIdentityResponseOutput struct{ *pulumi.OutputState }

func (UserAssignedIdentityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserAssignedIdentityResponse)(nil)).Elem()
}

func (o UserAssignedIdentityResponseOutput) ToUserAssignedIdentityResponseOutput() UserAssignedIdentityResponseOutput {
	return o
}

func (o UserAssignedIdentityResponseOutput) ToUserAssignedIdentityResponseOutputWithContext(ctx context.Context) UserAssignedIdentityResponseOutput {
	return o
}

// The client ID of the assigned identity.
func (o UserAssignedIdentityResponseOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v UserAssignedIdentityResponse) string { return v.ClientId }).(pulumi.StringOutput)
}

// The principal ID of the assigned identity.
func (o UserAssignedIdentityResponseOutput) PrincipalId() pulumi.StringOutput {
	return o.ApplyT(func(v UserAssignedIdentityResponse) string { return v.PrincipalId }).(pulumi.StringOutput)
}

type UserAssignedIdentityResponseMapOutput struct{ *pulumi.OutputState }

func (UserAssignedIdentityResponseMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]UserAssignedIdentityResponse)(nil)).Elem()
}

func (o UserAssignedIdentityResponseMapOutput) ToUserAssignedIdentityResponseMapOutput() UserAssignedIdentityResponseMapOutput {
	return o
}

func (o UserAssignedIdentityResponseMapOutput) ToUserAssignedIdentityResponseMapOutputWithContext(ctx context.Context) UserAssignedIdentityResponseMapOutput {
	return o
}

func (o UserAssignedIdentityResponseMapOutput) MapIndex(k pulumi.StringInput) UserAssignedIdentityResponseOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) UserAssignedIdentityResponse {
		return vs[0].(map[string]UserAssignedIdentityResponse)[vs[1].(string)]
	}).(UserAssignedIdentityResponseOutput)
}

// Mapping of user object ID to role assignments.
type UserRoleAssignment struct {
	// A map of roles to assign to the parent user.
	Roles []string `pulumi:"roles"`
}

// UserRoleAssignmentInput is an input type that accepts UserRoleAssignmentArgs and UserRoleAssignmentOutput values.
// You can construct a concrete instance of `UserRoleAssignmentInput` via:
//
//	UserRoleAssignmentArgs{...}
type UserRoleAssignmentInput interface {
	pulumi.Input

	ToUserRoleAssignmentOutput() UserRoleAssignmentOutput
	ToUserRoleAssignmentOutputWithContext(context.Context) UserRoleAssignmentOutput
}

// Mapping of user object ID to role assignments.
type UserRoleAssignmentArgs struct {
	// A map of roles to assign to the parent user.
	Roles pulumi.StringArrayInput `pulumi:"roles"`
}

func (UserRoleAssignmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserRoleAssignment)(nil)).Elem()
}

func (i UserRoleAssignmentArgs) ToUserRoleAssignmentOutput() UserRoleAssignmentOutput {
	return i.ToUserRoleAssignmentOutputWithContext(context.Background())
}

func (i UserRoleAssignmentArgs) ToUserRoleAssignmentOutputWithContext(ctx context.Context) UserRoleAssignmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserRoleAssignmentOutput)
}

// UserRoleAssignmentMapInput is an input type that accepts UserRoleAssignmentMap and UserRoleAssignmentMapOutput values.
// You can construct a concrete instance of `UserRoleAssignmentMapInput` via:
//
//	UserRoleAssignmentMap{ "key": UserRoleAssignmentArgs{...} }
type UserRoleAssignmentMapInput interface {
	pulumi.Input

	ToUserRoleAssignmentMapOutput() UserRoleAssignmentMapOutput
	ToUserRoleAssignmentMapOutputWithContext(context.Context) UserRoleAssignmentMapOutput
}

type UserRoleAssignmentMap map[string]UserRoleAssignmentInput

func (UserRoleAssignmentMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]UserRoleAssignment)(nil)).Elem()
}

func (i UserRoleAssignmentMap) ToUserRoleAssignmentMapOutput() UserRoleAssignmentMapOutput {
	return i.ToUserRoleAssignmentMapOutputWithContext(context.Background())
}

func (i UserRoleAssignmentMap) ToUserRoleAssignmentMapOutputWithContext(ctx context.Context) UserRoleAssignmentMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserRoleAssignmentMapOutput)
}

// Mapping of user object ID to role assignments.
type UserRoleAssignmentOutput struct{ *pulumi.OutputState }

func (UserRoleAssignmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserRoleAssignment)(nil)).Elem()
}

func (o UserRoleAssignmentOutput) ToUserRoleAssignmentOutput() UserRoleAssignmentOutput {
	return o
}

func (o UserRoleAssignmentOutput) ToUserRoleAssignmentOutputWithContext(ctx context.Context) UserRoleAssignmentOutput {
	return o
}

// A map of roles to assign to the parent user.
func (o UserRoleAssignmentOutput) Roles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v UserRoleAssignment) []string { return v.Roles }).(pulumi.StringArrayOutput)
}

type UserRoleAssignmentMapOutput struct{ *pulumi.OutputState }

func (UserRoleAssignmentMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]UserRoleAssignment)(nil)).Elem()
}

func (o UserRoleAssignmentMapOutput) ToUserRoleAssignmentMapOutput() UserRoleAssignmentMapOutput {
	return o
}

func (o UserRoleAssignmentMapOutput) ToUserRoleAssignmentMapOutputWithContext(ctx context.Context) UserRoleAssignmentMapOutput {
	return o
}

func (o UserRoleAssignmentMapOutput) MapIndex(k pulumi.StringInput) UserRoleAssignmentOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) UserRoleAssignment {
		return vs[0].(map[string]UserRoleAssignment)[vs[1].(string)]
	}).(UserRoleAssignmentOutput)
}

// Mapping of user object ID to role assignments.
type UserRoleAssignmentResponse struct {
	// A map of roles to assign to the parent user.
	Roles map[string]EnvironmentRoleResponse `pulumi:"roles"`
}

// Mapping of user object ID to role assignments.
type UserRoleAssignmentResponseOutput struct{ *pulumi.OutputState }

func (UserRoleAssignmentResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserRoleAssignmentResponse)(nil)).Elem()
}

func (o UserRoleAssignmentResponseOutput) ToUserRoleAssignmentResponseOutput() UserRoleAssignmentResponseOutput {
	return o
}

func (o UserRoleAssignmentResponseOutput) ToUserRoleAssignmentResponseOutputWithContext(ctx context.Context) UserRoleAssignmentResponseOutput {
	return o
}

// A map of roles to assign to the parent user.
func (o UserRoleAssignmentResponseOutput) Roles() EnvironmentRoleResponseMapOutput {
	return o.ApplyT(func(v UserRoleAssignmentResponse) map[string]EnvironmentRoleResponse { return v.Roles }).(EnvironmentRoleResponseMapOutput)
}

type UserRoleAssignmentResponseMapOutput struct{ *pulumi.OutputState }

func (UserRoleAssignmentResponseMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]UserRoleAssignmentResponse)(nil)).Elem()
}

func (o UserRoleAssignmentResponseMapOutput) ToUserRoleAssignmentResponseMapOutput() UserRoleAssignmentResponseMapOutput {
	return o
}

func (o UserRoleAssignmentResponseMapOutput) ToUserRoleAssignmentResponseMapOutputWithContext(ctx context.Context) UserRoleAssignmentResponseMapOutput {
	return o
}

func (o UserRoleAssignmentResponseMapOutput) MapIndex(k pulumi.StringInput) UserRoleAssignmentResponseOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) UserRoleAssignmentResponse {
		return vs[0].(map[string]UserRoleAssignmentResponse)[vs[1].(string)]
	}).(UserRoleAssignmentResponseOutput)
}

func init() {
	pulumi.RegisterOutputType(CatalogConflictErrorResponseOutput{})
	pulumi.RegisterOutputType(CatalogConflictErrorResponseArrayOutput{})
	pulumi.RegisterOutputType(CatalogErrorDetailsResponseOutput{})
	pulumi.RegisterOutputType(CatalogErrorDetailsResponseArrayOutput{})
	pulumi.RegisterOutputType(CatalogSyncErrorResponseOutput{})
	pulumi.RegisterOutputType(CatalogSyncErrorResponseArrayOutput{})
	pulumi.RegisterOutputType(CustomerManagedKeyEncryptionOutput{})
	pulumi.RegisterOutputType(CustomerManagedKeyEncryptionPtrOutput{})
	pulumi.RegisterOutputType(CustomerManagedKeyEncryptionKeyEncryptionKeyIdentityOutput{})
	pulumi.RegisterOutputType(CustomerManagedKeyEncryptionKeyEncryptionKeyIdentityPtrOutput{})
	pulumi.RegisterOutputType(CustomerManagedKeyEncryptionResponseOutput{})
	pulumi.RegisterOutputType(CustomerManagedKeyEncryptionResponsePtrOutput{})
	pulumi.RegisterOutputType(CustomerManagedKeyEncryptionResponseKeyEncryptionKeyIdentityOutput{})
	pulumi.RegisterOutputType(CustomerManagedKeyEncryptionResponseKeyEncryptionKeyIdentityPtrOutput{})
	pulumi.RegisterOutputType(DevBoxProvisioningSettingsOutput{})
	pulumi.RegisterOutputType(DevBoxProvisioningSettingsPtrOutput{})
	pulumi.RegisterOutputType(DevBoxProvisioningSettingsResponseOutput{})
	pulumi.RegisterOutputType(DevBoxProvisioningSettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(DevCenterNetworkSettingsOutput{})
	pulumi.RegisterOutputType(DevCenterNetworkSettingsPtrOutput{})
	pulumi.RegisterOutputType(DevCenterNetworkSettingsResponseOutput{})
	pulumi.RegisterOutputType(DevCenterNetworkSettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(DevCenterProjectCatalogSettingsOutput{})
	pulumi.RegisterOutputType(DevCenterProjectCatalogSettingsPtrOutput{})
	pulumi.RegisterOutputType(DevCenterProjectCatalogSettingsResponseOutput{})
	pulumi.RegisterOutputType(DevCenterProjectCatalogSettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(EncryptionOutput{})
	pulumi.RegisterOutputType(EncryptionPtrOutput{})
	pulumi.RegisterOutputType(EncryptionResponseOutput{})
	pulumi.RegisterOutputType(EncryptionResponsePtrOutput{})
	pulumi.RegisterOutputType(EnvironmentRoleResponseOutput{})
	pulumi.RegisterOutputType(EnvironmentRoleResponseMapOutput{})
	pulumi.RegisterOutputType(GitCatalogOutput{})
	pulumi.RegisterOutputType(GitCatalogPtrOutput{})
	pulumi.RegisterOutputType(GitCatalogResponseOutput{})
	pulumi.RegisterOutputType(GitCatalogResponsePtrOutput{})
	pulumi.RegisterOutputType(HealthStatusDetailResponseOutput{})
	pulumi.RegisterOutputType(HealthStatusDetailResponseArrayOutput{})
	pulumi.RegisterOutputType(ImageReferenceOutput{})
	pulumi.RegisterOutputType(ImageReferenceResponseOutput{})
	pulumi.RegisterOutputType(ImageValidationErrorDetailsResponseOutput{})
	pulumi.RegisterOutputType(ManagedServiceIdentityOutput{})
	pulumi.RegisterOutputType(ManagedServiceIdentityPtrOutput{})
	pulumi.RegisterOutputType(ManagedServiceIdentityResponseOutput{})
	pulumi.RegisterOutputType(ManagedServiceIdentityResponsePtrOutput{})
	pulumi.RegisterOutputType(ProjectCatalogSettingsOutput{})
	pulumi.RegisterOutputType(ProjectCatalogSettingsPtrOutput{})
	pulumi.RegisterOutputType(ProjectCatalogSettingsResponseOutput{})
	pulumi.RegisterOutputType(ProjectCatalogSettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(ProjectEnvironmentTypeUpdatePropertiesCreatorRoleAssignmentOutput{})
	pulumi.RegisterOutputType(ProjectEnvironmentTypeUpdatePropertiesCreatorRoleAssignmentPtrOutput{})
	pulumi.RegisterOutputType(ProjectEnvironmentTypeUpdatePropertiesResponseCreatorRoleAssignmentOutput{})
	pulumi.RegisterOutputType(ProjectEnvironmentTypeUpdatePropertiesResponseCreatorRoleAssignmentPtrOutput{})
	pulumi.RegisterOutputType(ProjectNetworkSettingsResponseOutput{})
	pulumi.RegisterOutputType(SkuOutput{})
	pulumi.RegisterOutputType(SkuPtrOutput{})
	pulumi.RegisterOutputType(SkuResponseOutput{})
	pulumi.RegisterOutputType(SkuResponsePtrOutput{})
	pulumi.RegisterOutputType(StopOnDisconnectConfigurationOutput{})
	pulumi.RegisterOutputType(StopOnDisconnectConfigurationPtrOutput{})
	pulumi.RegisterOutputType(StopOnDisconnectConfigurationResponseOutput{})
	pulumi.RegisterOutputType(StopOnDisconnectConfigurationResponsePtrOutput{})
	pulumi.RegisterOutputType(SyncStatsResponseOutput{})
	pulumi.RegisterOutputType(SystemDataResponseOutput{})
	pulumi.RegisterOutputType(UserAssignedIdentityResponseOutput{})
	pulumi.RegisterOutputType(UserAssignedIdentityResponseMapOutput{})
	pulumi.RegisterOutputType(UserRoleAssignmentOutput{})
	pulumi.RegisterOutputType(UserRoleAssignmentMapOutput{})
	pulumi.RegisterOutputType(UserRoleAssignmentResponseOutput{})
	pulumi.RegisterOutputType(UserRoleAssignmentResponseMapOutput{})
}
