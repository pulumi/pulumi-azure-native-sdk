// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package devcenter

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Gets Environment Definition error details
// Azure REST API version: 2023-08-01-preview.
//
// Other available API versions: 2023-10-01-preview, 2024-02-01, 2024-05-01-preview.
func GetEnvironmentDefinitionErrorDetails(ctx *pulumi.Context, args *GetEnvironmentDefinitionErrorDetailsArgs, opts ...pulumi.InvokeOption) (*GetEnvironmentDefinitionErrorDetailsResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv GetEnvironmentDefinitionErrorDetailsResult
	err := ctx.Invoke("azure-native:devcenter:getEnvironmentDefinitionErrorDetails", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type GetEnvironmentDefinitionErrorDetailsArgs struct {
	// The name of the Catalog.
	CatalogName string `pulumi:"catalogName"`
	// The name of the devcenter.
	DevCenterName string `pulumi:"devCenterName"`
	// The name of the Environment Definition.
	EnvironmentDefinitionName string `pulumi:"environmentDefinitionName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// List of validator error details. Populated when changes are made to the resource or its dependent resources that impact the validity of the Catalog resource.
type GetEnvironmentDefinitionErrorDetailsResult struct {
	// Errors associated with resources synchronized from the catalog.
	Errors []CatalogErrorDetailsResponse `pulumi:"errors"`
}

func GetEnvironmentDefinitionErrorDetailsOutput(ctx *pulumi.Context, args GetEnvironmentDefinitionErrorDetailsOutputArgs, opts ...pulumi.InvokeOption) GetEnvironmentDefinitionErrorDetailsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetEnvironmentDefinitionErrorDetailsResult, error) {
			args := v.(GetEnvironmentDefinitionErrorDetailsArgs)
			r, err := GetEnvironmentDefinitionErrorDetails(ctx, &args, opts...)
			var s GetEnvironmentDefinitionErrorDetailsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetEnvironmentDefinitionErrorDetailsResultOutput)
}

type GetEnvironmentDefinitionErrorDetailsOutputArgs struct {
	// The name of the Catalog.
	CatalogName pulumi.StringInput `pulumi:"catalogName"`
	// The name of the devcenter.
	DevCenterName pulumi.StringInput `pulumi:"devCenterName"`
	// The name of the Environment Definition.
	EnvironmentDefinitionName pulumi.StringInput `pulumi:"environmentDefinitionName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
}

func (GetEnvironmentDefinitionErrorDetailsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEnvironmentDefinitionErrorDetailsArgs)(nil)).Elem()
}

// List of validator error details. Populated when changes are made to the resource or its dependent resources that impact the validity of the Catalog resource.
type GetEnvironmentDefinitionErrorDetailsResultOutput struct{ *pulumi.OutputState }

func (GetEnvironmentDefinitionErrorDetailsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEnvironmentDefinitionErrorDetailsResult)(nil)).Elem()
}

func (o GetEnvironmentDefinitionErrorDetailsResultOutput) ToGetEnvironmentDefinitionErrorDetailsResultOutput() GetEnvironmentDefinitionErrorDetailsResultOutput {
	return o
}

func (o GetEnvironmentDefinitionErrorDetailsResultOutput) ToGetEnvironmentDefinitionErrorDetailsResultOutputWithContext(ctx context.Context) GetEnvironmentDefinitionErrorDetailsResultOutput {
	return o
}

// Errors associated with resources synchronized from the catalog.
func (o GetEnvironmentDefinitionErrorDetailsResultOutput) Errors() CatalogErrorDetailsResponseArrayOutput {
	return o.ApplyT(func(v GetEnvironmentDefinitionErrorDetailsResult) []CatalogErrorDetailsResponse { return v.Errors }).(CatalogErrorDetailsResponseArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetEnvironmentDefinitionErrorDetailsResultOutput{})
}
