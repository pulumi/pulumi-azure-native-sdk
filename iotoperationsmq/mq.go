// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package iotoperationsmq

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// MQ resource
// Azure REST API version: 2023-10-04-preview.
type Mq struct {
	pulumi.CustomResourceState

	// Extended Location
	ExtendedLocation ExtendedLocationPropertyResponseOutput `pulumi:"extendedLocation"`
	// The geo-location where the resource lives
	Location pulumi.StringOutput `pulumi:"location"`
	// The name of the resource
	Name pulumi.StringOutput `pulumi:"name"`
	// The status of the last operation.
	ProvisioningState pulumi.StringOutput `pulumi:"provisioningState"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponseOutput `pulumi:"systemData"`
	// Resource tags.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewMq registers a new resource with the given unique name, arguments, and options.
func NewMq(ctx *pulumi.Context,
	name string, args *MqArgs, opts ...pulumi.ResourceOption) (*Mq, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ExtendedLocation == nil {
		return nil, errors.New("invalid value for required argument 'ExtendedLocation'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:iotoperationsmq/v20231004preview:Mq"),
		},
	})
	opts = append(opts, aliases)
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource Mq
	err := ctx.RegisterResource("azure-native:iotoperationsmq:Mq", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetMq gets an existing Mq resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetMq(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *MqState, opts ...pulumi.ResourceOption) (*Mq, error) {
	var resource Mq
	err := ctx.ReadResource("azure-native:iotoperationsmq:Mq", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Mq resources.
type mqState struct {
}

type MqState struct {
}

func (MqState) ElementType() reflect.Type {
	return reflect.TypeOf((*mqState)(nil)).Elem()
}

type mqArgs struct {
	// Extended Location
	ExtendedLocation ExtendedLocationProperty `pulumi:"extendedLocation"`
	// The geo-location where the resource lives
	Location *string `pulumi:"location"`
	// Name of MQ resource
	MqName *string `pulumi:"mqName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a Mq resource.
type MqArgs struct {
	// Extended Location
	ExtendedLocation ExtendedLocationPropertyInput
	// The geo-location where the resource lives
	Location pulumi.StringPtrInput
	// Name of MQ resource
	MqName pulumi.StringPtrInput
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput
	// Resource tags.
	Tags pulumi.StringMapInput
}

func (MqArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*mqArgs)(nil)).Elem()
}

type MqInput interface {
	pulumi.Input

	ToMqOutput() MqOutput
	ToMqOutputWithContext(ctx context.Context) MqOutput
}

func (*Mq) ElementType() reflect.Type {
	return reflect.TypeOf((**Mq)(nil)).Elem()
}

func (i *Mq) ToMqOutput() MqOutput {
	return i.ToMqOutputWithContext(context.Background())
}

func (i *Mq) ToMqOutputWithContext(ctx context.Context) MqOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MqOutput)
}

type MqOutput struct{ *pulumi.OutputState }

func (MqOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Mq)(nil)).Elem()
}

func (o MqOutput) ToMqOutput() MqOutput {
	return o
}

func (o MqOutput) ToMqOutputWithContext(ctx context.Context) MqOutput {
	return o
}

// Extended Location
func (o MqOutput) ExtendedLocation() ExtendedLocationPropertyResponseOutput {
	return o.ApplyT(func(v *Mq) ExtendedLocationPropertyResponseOutput { return v.ExtendedLocation }).(ExtendedLocationPropertyResponseOutput)
}

// The geo-location where the resource lives
func (o MqOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *Mq) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// The name of the resource
func (o MqOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Mq) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The status of the last operation.
func (o MqOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v *Mq) pulumi.StringOutput { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o MqOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v *Mq) SystemDataResponseOutput { return v.SystemData }).(SystemDataResponseOutput)
}

// Resource tags.
func (o MqOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Mq) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o MqOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *Mq) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(MqOutput{})
}
