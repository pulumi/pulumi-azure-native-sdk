// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package iotoperationsmq

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// MQ broker/authentication resource
// Azure REST API version: 2023-10-04-preview.
type BrokerAuthentication struct {
	pulumi.CustomResourceState

	// The list of authentication methods supported by the Authentication Resource. For each array element, NOTE - Enum only authenticator type supported.
	AuthenticationMethods BrokerAuthenticatorMethodsResponseArrayOutput `pulumi:"authenticationMethods"`
	// Extended Location
	ExtendedLocation ExtendedLocationPropertyResponseOutput `pulumi:"extendedLocation"`
	// The array of listener Resources it supports.
	ListenerRef pulumi.StringArrayOutput `pulumi:"listenerRef"`
	// The geo-location where the resource lives
	Location pulumi.StringOutput `pulumi:"location"`
	// The name of the resource
	Name pulumi.StringOutput `pulumi:"name"`
	// The status of the last operation.
	ProvisioningState pulumi.StringOutput `pulumi:"provisioningState"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponseOutput `pulumi:"systemData"`
	// Resource tags.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewBrokerAuthentication registers a new resource with the given unique name, arguments, and options.
func NewBrokerAuthentication(ctx *pulumi.Context,
	name string, args *BrokerAuthenticationArgs, opts ...pulumi.ResourceOption) (*BrokerAuthentication, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AuthenticationMethods == nil {
		return nil, errors.New("invalid value for required argument 'AuthenticationMethods'")
	}
	if args.BrokerName == nil {
		return nil, errors.New("invalid value for required argument 'BrokerName'")
	}
	if args.ExtendedLocation == nil {
		return nil, errors.New("invalid value for required argument 'ExtendedLocation'")
	}
	if args.ListenerRef == nil {
		return nil, errors.New("invalid value for required argument 'ListenerRef'")
	}
	if args.MqName == nil {
		return nil, errors.New("invalid value for required argument 'MqName'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:iotoperationsmq/v20231004preview:BrokerAuthentication"),
		},
	})
	opts = append(opts, aliases)
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource BrokerAuthentication
	err := ctx.RegisterResource("azure-native:iotoperationsmq:BrokerAuthentication", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetBrokerAuthentication gets an existing BrokerAuthentication resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetBrokerAuthentication(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *BrokerAuthenticationState, opts ...pulumi.ResourceOption) (*BrokerAuthentication, error) {
	var resource BrokerAuthentication
	err := ctx.ReadResource("azure-native:iotoperationsmq:BrokerAuthentication", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering BrokerAuthentication resources.
type brokerAuthenticationState struct {
}

type BrokerAuthenticationState struct {
}

func (BrokerAuthenticationState) ElementType() reflect.Type {
	return reflect.TypeOf((*brokerAuthenticationState)(nil)).Elem()
}

type brokerAuthenticationArgs struct {
	// The list of authentication methods supported by the Authentication Resource. For each array element, NOTE - Enum only authenticator type supported.
	AuthenticationMethods []BrokerAuthenticatorMethods `pulumi:"authenticationMethods"`
	// Name of MQ broker/authentication resource
	AuthenticationName *string `pulumi:"authenticationName"`
	// Name of MQ broker resource
	BrokerName string `pulumi:"brokerName"`
	// Extended Location
	ExtendedLocation ExtendedLocationProperty `pulumi:"extendedLocation"`
	// The array of listener Resources it supports.
	ListenerRef []string `pulumi:"listenerRef"`
	// The geo-location where the resource lives
	Location *string `pulumi:"location"`
	// Name of MQ resource
	MqName string `pulumi:"mqName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a BrokerAuthentication resource.
type BrokerAuthenticationArgs struct {
	// The list of authentication methods supported by the Authentication Resource. For each array element, NOTE - Enum only authenticator type supported.
	AuthenticationMethods BrokerAuthenticatorMethodsArrayInput
	// Name of MQ broker/authentication resource
	AuthenticationName pulumi.StringPtrInput
	// Name of MQ broker resource
	BrokerName pulumi.StringInput
	// Extended Location
	ExtendedLocation ExtendedLocationPropertyInput
	// The array of listener Resources it supports.
	ListenerRef pulumi.StringArrayInput
	// The geo-location where the resource lives
	Location pulumi.StringPtrInput
	// Name of MQ resource
	MqName pulumi.StringInput
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput
	// Resource tags.
	Tags pulumi.StringMapInput
}

func (BrokerAuthenticationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*brokerAuthenticationArgs)(nil)).Elem()
}

type BrokerAuthenticationInput interface {
	pulumi.Input

	ToBrokerAuthenticationOutput() BrokerAuthenticationOutput
	ToBrokerAuthenticationOutputWithContext(ctx context.Context) BrokerAuthenticationOutput
}

func (*BrokerAuthentication) ElementType() reflect.Type {
	return reflect.TypeOf((**BrokerAuthentication)(nil)).Elem()
}

func (i *BrokerAuthentication) ToBrokerAuthenticationOutput() BrokerAuthenticationOutput {
	return i.ToBrokerAuthenticationOutputWithContext(context.Background())
}

func (i *BrokerAuthentication) ToBrokerAuthenticationOutputWithContext(ctx context.Context) BrokerAuthenticationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BrokerAuthenticationOutput)
}

type BrokerAuthenticationOutput struct{ *pulumi.OutputState }

func (BrokerAuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BrokerAuthentication)(nil)).Elem()
}

func (o BrokerAuthenticationOutput) ToBrokerAuthenticationOutput() BrokerAuthenticationOutput {
	return o
}

func (o BrokerAuthenticationOutput) ToBrokerAuthenticationOutputWithContext(ctx context.Context) BrokerAuthenticationOutput {
	return o
}

// The list of authentication methods supported by the Authentication Resource. For each array element, NOTE - Enum only authenticator type supported.
func (o BrokerAuthenticationOutput) AuthenticationMethods() BrokerAuthenticatorMethodsResponseArrayOutput {
	return o.ApplyT(func(v *BrokerAuthentication) BrokerAuthenticatorMethodsResponseArrayOutput {
		return v.AuthenticationMethods
	}).(BrokerAuthenticatorMethodsResponseArrayOutput)
}

// Extended Location
func (o BrokerAuthenticationOutput) ExtendedLocation() ExtendedLocationPropertyResponseOutput {
	return o.ApplyT(func(v *BrokerAuthentication) ExtendedLocationPropertyResponseOutput { return v.ExtendedLocation }).(ExtendedLocationPropertyResponseOutput)
}

// The array of listener Resources it supports.
func (o BrokerAuthenticationOutput) ListenerRef() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *BrokerAuthentication) pulumi.StringArrayOutput { return v.ListenerRef }).(pulumi.StringArrayOutput)
}

// The geo-location where the resource lives
func (o BrokerAuthenticationOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *BrokerAuthentication) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// The name of the resource
func (o BrokerAuthenticationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *BrokerAuthentication) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The status of the last operation.
func (o BrokerAuthenticationOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v *BrokerAuthentication) pulumi.StringOutput { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o BrokerAuthenticationOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v *BrokerAuthentication) SystemDataResponseOutput { return v.SystemData }).(SystemDataResponseOutput)
}

// Resource tags.
func (o BrokerAuthenticationOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *BrokerAuthentication) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o BrokerAuthenticationOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *BrokerAuthentication) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(BrokerAuthenticationOutput{})
}
