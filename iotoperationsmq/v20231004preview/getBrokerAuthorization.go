// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20231004preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Get a BrokerAuthorizationResource
func LookupBrokerAuthorization(ctx *pulumi.Context, args *LookupBrokerAuthorizationArgs, opts ...pulumi.InvokeOption) (*LookupBrokerAuthorizationResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv LookupBrokerAuthorizationResult
	err := ctx.Invoke("azure-native:iotoperationsmq/v20231004preview:getBrokerAuthorization", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return rv.Defaults(), nil
}

type LookupBrokerAuthorizationArgs struct {
	// Name of MQ broker/authorization resource
	AuthorizationName string `pulumi:"authorizationName"`
	// Name of MQ broker resource
	BrokerName string `pulumi:"brokerName"`
	// Name of MQ resource
	MqName string `pulumi:"mqName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// MQ broker/authorization resource
type LookupBrokerAuthorizationResult struct {
	// The list of authorization policies supported by the Authorization Resource.
	AuthorizationPolicies AuthorizationConfigResponse `pulumi:"authorizationPolicies"`
	// Extended Location
	ExtendedLocation ExtendedLocationPropertyResponse `pulumi:"extendedLocation"`
	// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	Id string `pulumi:"id"`
	// The array of listener Resources it supports.
	ListenerRef []string `pulumi:"listenerRef"`
	// The geo-location where the resource lives
	Location string `pulumi:"location"`
	// The name of the resource
	Name string `pulumi:"name"`
	// The status of the last operation.
	ProvisioningState string `pulumi:"provisioningState"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponse `pulumi:"systemData"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type string `pulumi:"type"`
}

// Defaults sets the appropriate defaults for LookupBrokerAuthorizationResult
func (val *LookupBrokerAuthorizationResult) Defaults() *LookupBrokerAuthorizationResult {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.AuthorizationPolicies = *tmp.AuthorizationPolicies.Defaults()

	return &tmp
}

func LookupBrokerAuthorizationOutput(ctx *pulumi.Context, args LookupBrokerAuthorizationOutputArgs, opts ...pulumi.InvokeOption) LookupBrokerAuthorizationResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupBrokerAuthorizationResult, error) {
			args := v.(LookupBrokerAuthorizationArgs)
			r, err := LookupBrokerAuthorization(ctx, &args, opts...)
			var s LookupBrokerAuthorizationResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupBrokerAuthorizationResultOutput)
}

type LookupBrokerAuthorizationOutputArgs struct {
	// Name of MQ broker/authorization resource
	AuthorizationName pulumi.StringInput `pulumi:"authorizationName"`
	// Name of MQ broker resource
	BrokerName pulumi.StringInput `pulumi:"brokerName"`
	// Name of MQ resource
	MqName pulumi.StringInput `pulumi:"mqName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
}

func (LookupBrokerAuthorizationOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupBrokerAuthorizationArgs)(nil)).Elem()
}

// MQ broker/authorization resource
type LookupBrokerAuthorizationResultOutput struct{ *pulumi.OutputState }

func (LookupBrokerAuthorizationResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupBrokerAuthorizationResult)(nil)).Elem()
}

func (o LookupBrokerAuthorizationResultOutput) ToLookupBrokerAuthorizationResultOutput() LookupBrokerAuthorizationResultOutput {
	return o
}

func (o LookupBrokerAuthorizationResultOutput) ToLookupBrokerAuthorizationResultOutputWithContext(ctx context.Context) LookupBrokerAuthorizationResultOutput {
	return o
}

// The list of authorization policies supported by the Authorization Resource.
func (o LookupBrokerAuthorizationResultOutput) AuthorizationPolicies() AuthorizationConfigResponseOutput {
	return o.ApplyT(func(v LookupBrokerAuthorizationResult) AuthorizationConfigResponse { return v.AuthorizationPolicies }).(AuthorizationConfigResponseOutput)
}

// Extended Location
func (o LookupBrokerAuthorizationResultOutput) ExtendedLocation() ExtendedLocationPropertyResponseOutput {
	return o.ApplyT(func(v LookupBrokerAuthorizationResult) ExtendedLocationPropertyResponse { return v.ExtendedLocation }).(ExtendedLocationPropertyResponseOutput)
}

// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
func (o LookupBrokerAuthorizationResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBrokerAuthorizationResult) string { return v.Id }).(pulumi.StringOutput)
}

// The array of listener Resources it supports.
func (o LookupBrokerAuthorizationResultOutput) ListenerRef() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupBrokerAuthorizationResult) []string { return v.ListenerRef }).(pulumi.StringArrayOutput)
}

// The geo-location where the resource lives
func (o LookupBrokerAuthorizationResultOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBrokerAuthorizationResult) string { return v.Location }).(pulumi.StringOutput)
}

// The name of the resource
func (o LookupBrokerAuthorizationResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBrokerAuthorizationResult) string { return v.Name }).(pulumi.StringOutput)
}

// The status of the last operation.
func (o LookupBrokerAuthorizationResultOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBrokerAuthorizationResult) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o LookupBrokerAuthorizationResultOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v LookupBrokerAuthorizationResult) SystemDataResponse { return v.SystemData }).(SystemDataResponseOutput)
}

// Resource tags.
func (o LookupBrokerAuthorizationResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupBrokerAuthorizationResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o LookupBrokerAuthorizationResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBrokerAuthorizationResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupBrokerAuthorizationResultOutput{})
}
