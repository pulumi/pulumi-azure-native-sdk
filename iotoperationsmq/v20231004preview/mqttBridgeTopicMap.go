// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20231004preview

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// MQ mqttBridgeTopicMap resource
type MqttBridgeTopicMap struct {
	pulumi.CustomResourceState

	// Extended Location
	ExtendedLocation ExtendedLocationPropertyResponseOutput `pulumi:"extendedLocation"`
	// The geo-location where the resource lives
	Location pulumi.StringOutput `pulumi:"location"`
	// The MqttBridgeConnector CRD it refers to.
	MqttBridgeConnectorRef pulumi.StringOutput `pulumi:"mqttBridgeConnectorRef"`
	// The name of the resource
	Name pulumi.StringOutput `pulumi:"name"`
	// The status of the last operation.
	ProvisioningState pulumi.StringOutput `pulumi:"provisioningState"`
	// The route details for MqttBridge connector.
	Routes MqttBridgeRoutesResponseArrayOutput `pulumi:"routes"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponseOutput `pulumi:"systemData"`
	// Resource tags.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewMqttBridgeTopicMap registers a new resource with the given unique name, arguments, and options.
func NewMqttBridgeTopicMap(ctx *pulumi.Context,
	name string, args *MqttBridgeTopicMapArgs, opts ...pulumi.ResourceOption) (*MqttBridgeTopicMap, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ExtendedLocation == nil {
		return nil, errors.New("invalid value for required argument 'ExtendedLocation'")
	}
	if args.MqName == nil {
		return nil, errors.New("invalid value for required argument 'MqName'")
	}
	if args.MqttBridgeConnectorName == nil {
		return nil, errors.New("invalid value for required argument 'MqttBridgeConnectorName'")
	}
	if args.MqttBridgeConnectorRef == nil {
		return nil, errors.New("invalid value for required argument 'MqttBridgeConnectorRef'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:iotoperationsmq:MqttBridgeTopicMap"),
		},
	})
	opts = append(opts, aliases)
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource MqttBridgeTopicMap
	err := ctx.RegisterResource("azure-native:iotoperationsmq/v20231004preview:MqttBridgeTopicMap", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetMqttBridgeTopicMap gets an existing MqttBridgeTopicMap resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetMqttBridgeTopicMap(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *MqttBridgeTopicMapState, opts ...pulumi.ResourceOption) (*MqttBridgeTopicMap, error) {
	var resource MqttBridgeTopicMap
	err := ctx.ReadResource("azure-native:iotoperationsmq/v20231004preview:MqttBridgeTopicMap", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering MqttBridgeTopicMap resources.
type mqttBridgeTopicMapState struct {
}

type MqttBridgeTopicMapState struct {
}

func (MqttBridgeTopicMapState) ElementType() reflect.Type {
	return reflect.TypeOf((*mqttBridgeTopicMapState)(nil)).Elem()
}

type mqttBridgeTopicMapArgs struct {
	// Extended Location
	ExtendedLocation ExtendedLocationProperty `pulumi:"extendedLocation"`
	// The geo-location where the resource lives
	Location *string `pulumi:"location"`
	// Name of MQ resource
	MqName string `pulumi:"mqName"`
	// Name of MQ mqttBridgeConnector resource
	MqttBridgeConnectorName string `pulumi:"mqttBridgeConnectorName"`
	// The MqttBridgeConnector CRD it refers to.
	MqttBridgeConnectorRef string `pulumi:"mqttBridgeConnectorRef"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The route details for MqttBridge connector.
	Routes []MqttBridgeRoutes `pulumi:"routes"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// Name of MQ mqttBridgeTopicMap resource
	TopicMapName *string `pulumi:"topicMapName"`
}

// The set of arguments for constructing a MqttBridgeTopicMap resource.
type MqttBridgeTopicMapArgs struct {
	// Extended Location
	ExtendedLocation ExtendedLocationPropertyInput
	// The geo-location where the resource lives
	Location pulumi.StringPtrInput
	// Name of MQ resource
	MqName pulumi.StringInput
	// Name of MQ mqttBridgeConnector resource
	MqttBridgeConnectorName pulumi.StringInput
	// The MqttBridgeConnector CRD it refers to.
	MqttBridgeConnectorRef pulumi.StringInput
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput
	// The route details for MqttBridge connector.
	Routes MqttBridgeRoutesArrayInput
	// Resource tags.
	Tags pulumi.StringMapInput
	// Name of MQ mqttBridgeTopicMap resource
	TopicMapName pulumi.StringPtrInput
}

func (MqttBridgeTopicMapArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*mqttBridgeTopicMapArgs)(nil)).Elem()
}

type MqttBridgeTopicMapInput interface {
	pulumi.Input

	ToMqttBridgeTopicMapOutput() MqttBridgeTopicMapOutput
	ToMqttBridgeTopicMapOutputWithContext(ctx context.Context) MqttBridgeTopicMapOutput
}

func (*MqttBridgeTopicMap) ElementType() reflect.Type {
	return reflect.TypeOf((**MqttBridgeTopicMap)(nil)).Elem()
}

func (i *MqttBridgeTopicMap) ToMqttBridgeTopicMapOutput() MqttBridgeTopicMapOutput {
	return i.ToMqttBridgeTopicMapOutputWithContext(context.Background())
}

func (i *MqttBridgeTopicMap) ToMqttBridgeTopicMapOutputWithContext(ctx context.Context) MqttBridgeTopicMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MqttBridgeTopicMapOutput)
}

type MqttBridgeTopicMapOutput struct{ *pulumi.OutputState }

func (MqttBridgeTopicMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MqttBridgeTopicMap)(nil)).Elem()
}

func (o MqttBridgeTopicMapOutput) ToMqttBridgeTopicMapOutput() MqttBridgeTopicMapOutput {
	return o
}

func (o MqttBridgeTopicMapOutput) ToMqttBridgeTopicMapOutputWithContext(ctx context.Context) MqttBridgeTopicMapOutput {
	return o
}

// Extended Location
func (o MqttBridgeTopicMapOutput) ExtendedLocation() ExtendedLocationPropertyResponseOutput {
	return o.ApplyT(func(v *MqttBridgeTopicMap) ExtendedLocationPropertyResponseOutput { return v.ExtendedLocation }).(ExtendedLocationPropertyResponseOutput)
}

// The geo-location where the resource lives
func (o MqttBridgeTopicMapOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *MqttBridgeTopicMap) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// The MqttBridgeConnector CRD it refers to.
func (o MqttBridgeTopicMapOutput) MqttBridgeConnectorRef() pulumi.StringOutput {
	return o.ApplyT(func(v *MqttBridgeTopicMap) pulumi.StringOutput { return v.MqttBridgeConnectorRef }).(pulumi.StringOutput)
}

// The name of the resource
func (o MqttBridgeTopicMapOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *MqttBridgeTopicMap) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The status of the last operation.
func (o MqttBridgeTopicMapOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v *MqttBridgeTopicMap) pulumi.StringOutput { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The route details for MqttBridge connector.
func (o MqttBridgeTopicMapOutput) Routes() MqttBridgeRoutesResponseArrayOutput {
	return o.ApplyT(func(v *MqttBridgeTopicMap) MqttBridgeRoutesResponseArrayOutput { return v.Routes }).(MqttBridgeRoutesResponseArrayOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o MqttBridgeTopicMapOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v *MqttBridgeTopicMap) SystemDataResponseOutput { return v.SystemData }).(SystemDataResponseOutput)
}

// Resource tags.
func (o MqttBridgeTopicMapOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *MqttBridgeTopicMap) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o MqttBridgeTopicMapOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *MqttBridgeTopicMap) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(MqttBridgeTopicMapOutput{})
}
