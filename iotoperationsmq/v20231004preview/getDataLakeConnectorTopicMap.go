// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20231004preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Get a DataLakeTopicMapResource
func LookupDataLakeConnectorTopicMap(ctx *pulumi.Context, args *LookupDataLakeConnectorTopicMapArgs, opts ...pulumi.InvokeOption) (*LookupDataLakeConnectorTopicMapResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv LookupDataLakeConnectorTopicMapResult
	err := ctx.Invoke("azure-native:iotoperationsmq/v20231004preview:getDataLakeConnectorTopicMap", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return rv.Defaults(), nil
}

type LookupDataLakeConnectorTopicMapArgs struct {
	// Name of MQ dataLakeConnector resource
	DataLakeConnectorName string `pulumi:"dataLakeConnectorName"`
	// Name of MQ resource
	MqName string `pulumi:"mqName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Name of MQ dataLakeConnector/topicMap resource
	TopicMapName string `pulumi:"topicMapName"`
}

// MQ dataLakeConnector/topicMap resource
type LookupDataLakeConnectorTopicMapResult struct {
	// DataLake Connector CRD to use.
	DataLakeConnectorRef string `pulumi:"dataLakeConnectorRef"`
	// Extended Location
	ExtendedLocation ExtendedLocationPropertyResponse `pulumi:"extendedLocation"`
	// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	Id string `pulumi:"id"`
	// The geo-location where the resource lives
	Location string `pulumi:"location"`
	// TopicMap for DataLake connector.
	Mapping DataLakeConnectorMapResponse `pulumi:"mapping"`
	// The name of the resource
	Name string `pulumi:"name"`
	// The status of the last operation.
	ProvisioningState string `pulumi:"provisioningState"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponse `pulumi:"systemData"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type string `pulumi:"type"`
}

// Defaults sets the appropriate defaults for LookupDataLakeConnectorTopicMapResult
func (val *LookupDataLakeConnectorTopicMapResult) Defaults() *LookupDataLakeConnectorTopicMapResult {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.Mapping = *tmp.Mapping.Defaults()

	return &tmp
}

func LookupDataLakeConnectorTopicMapOutput(ctx *pulumi.Context, args LookupDataLakeConnectorTopicMapOutputArgs, opts ...pulumi.InvokeOption) LookupDataLakeConnectorTopicMapResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupDataLakeConnectorTopicMapResult, error) {
			args := v.(LookupDataLakeConnectorTopicMapArgs)
			r, err := LookupDataLakeConnectorTopicMap(ctx, &args, opts...)
			var s LookupDataLakeConnectorTopicMapResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupDataLakeConnectorTopicMapResultOutput)
}

type LookupDataLakeConnectorTopicMapOutputArgs struct {
	// Name of MQ dataLakeConnector resource
	DataLakeConnectorName pulumi.StringInput `pulumi:"dataLakeConnectorName"`
	// Name of MQ resource
	MqName pulumi.StringInput `pulumi:"mqName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
	// Name of MQ dataLakeConnector/topicMap resource
	TopicMapName pulumi.StringInput `pulumi:"topicMapName"`
}

func (LookupDataLakeConnectorTopicMapOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDataLakeConnectorTopicMapArgs)(nil)).Elem()
}

// MQ dataLakeConnector/topicMap resource
type LookupDataLakeConnectorTopicMapResultOutput struct{ *pulumi.OutputState }

func (LookupDataLakeConnectorTopicMapResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDataLakeConnectorTopicMapResult)(nil)).Elem()
}

func (o LookupDataLakeConnectorTopicMapResultOutput) ToLookupDataLakeConnectorTopicMapResultOutput() LookupDataLakeConnectorTopicMapResultOutput {
	return o
}

func (o LookupDataLakeConnectorTopicMapResultOutput) ToLookupDataLakeConnectorTopicMapResultOutputWithContext(ctx context.Context) LookupDataLakeConnectorTopicMapResultOutput {
	return o
}

// DataLake Connector CRD to use.
func (o LookupDataLakeConnectorTopicMapResultOutput) DataLakeConnectorRef() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDataLakeConnectorTopicMapResult) string { return v.DataLakeConnectorRef }).(pulumi.StringOutput)
}

// Extended Location
func (o LookupDataLakeConnectorTopicMapResultOutput) ExtendedLocation() ExtendedLocationPropertyResponseOutput {
	return o.ApplyT(func(v LookupDataLakeConnectorTopicMapResult) ExtendedLocationPropertyResponse {
		return v.ExtendedLocation
	}).(ExtendedLocationPropertyResponseOutput)
}

// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
func (o LookupDataLakeConnectorTopicMapResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDataLakeConnectorTopicMapResult) string { return v.Id }).(pulumi.StringOutput)
}

// The geo-location where the resource lives
func (o LookupDataLakeConnectorTopicMapResultOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDataLakeConnectorTopicMapResult) string { return v.Location }).(pulumi.StringOutput)
}

// TopicMap for DataLake connector.
func (o LookupDataLakeConnectorTopicMapResultOutput) Mapping() DataLakeConnectorMapResponseOutput {
	return o.ApplyT(func(v LookupDataLakeConnectorTopicMapResult) DataLakeConnectorMapResponse { return v.Mapping }).(DataLakeConnectorMapResponseOutput)
}

// The name of the resource
func (o LookupDataLakeConnectorTopicMapResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDataLakeConnectorTopicMapResult) string { return v.Name }).(pulumi.StringOutput)
}

// The status of the last operation.
func (o LookupDataLakeConnectorTopicMapResultOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDataLakeConnectorTopicMapResult) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o LookupDataLakeConnectorTopicMapResultOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v LookupDataLakeConnectorTopicMapResult) SystemDataResponse { return v.SystemData }).(SystemDataResponseOutput)
}

// Resource tags.
func (o LookupDataLakeConnectorTopicMapResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupDataLakeConnectorTopicMapResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o LookupDataLakeConnectorTopicMapResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDataLakeConnectorTopicMapResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupDataLakeConnectorTopicMapResultOutput{})
}
