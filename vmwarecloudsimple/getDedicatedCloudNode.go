// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vmwarecloudsimple

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Returns dedicated cloud node
// Azure REST API version: 2019-04-01.
func LookupDedicatedCloudNode(ctx *pulumi.Context, args *LookupDedicatedCloudNodeArgs, opts ...pulumi.InvokeOption) (*LookupDedicatedCloudNodeResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv LookupDedicatedCloudNodeResult
	err := ctx.Invoke("azure-native:vmwarecloudsimple:getDedicatedCloudNode", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupDedicatedCloudNodeArgs struct {
	// dedicated cloud node name
	DedicatedCloudNodeName string `pulumi:"dedicatedCloudNodeName"`
	// The name of the resource group
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// Dedicated cloud node model
type LookupDedicatedCloudNodeResult struct {
	// The Azure API version of the resource.
	AzureApiVersion string `pulumi:"azureApiVersion"`
	// /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/dedicatedCloudNodes/{dedicatedCloudNodeName}
	Id string `pulumi:"id"`
	// Azure region
	Location string `pulumi:"location"`
	// {dedicatedCloudNodeName}
	Name string `pulumi:"name"`
	// Dedicated Cloud Nodes properties
	Properties DedicatedCloudNodePropertiesResponse `pulumi:"properties"`
	// Dedicated Cloud Nodes SKU
	Sku *SkuResponse `pulumi:"sku"`
	// Dedicated Cloud Nodes tags
	Tags map[string]string `pulumi:"tags"`
	// {resourceProviderNamespace}/{resourceType}
	Type string `pulumi:"type"`
}

func LookupDedicatedCloudNodeOutput(ctx *pulumi.Context, args LookupDedicatedCloudNodeOutputArgs, opts ...pulumi.InvokeOption) LookupDedicatedCloudNodeResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupDedicatedCloudNodeResultOutput, error) {
			args := v.(LookupDedicatedCloudNodeArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: utilities.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("azure-native:vmwarecloudsimple:getDedicatedCloudNode", args, LookupDedicatedCloudNodeResultOutput{}, options).(LookupDedicatedCloudNodeResultOutput), nil
		}).(LookupDedicatedCloudNodeResultOutput)
}

type LookupDedicatedCloudNodeOutputArgs struct {
	// dedicated cloud node name
	DedicatedCloudNodeName pulumi.StringInput `pulumi:"dedicatedCloudNodeName"`
	// The name of the resource group
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
}

func (LookupDedicatedCloudNodeOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDedicatedCloudNodeArgs)(nil)).Elem()
}

// Dedicated cloud node model
type LookupDedicatedCloudNodeResultOutput struct{ *pulumi.OutputState }

func (LookupDedicatedCloudNodeResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDedicatedCloudNodeResult)(nil)).Elem()
}

func (o LookupDedicatedCloudNodeResultOutput) ToLookupDedicatedCloudNodeResultOutput() LookupDedicatedCloudNodeResultOutput {
	return o
}

func (o LookupDedicatedCloudNodeResultOutput) ToLookupDedicatedCloudNodeResultOutputWithContext(ctx context.Context) LookupDedicatedCloudNodeResultOutput {
	return o
}

// The Azure API version of the resource.
func (o LookupDedicatedCloudNodeResultOutput) AzureApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDedicatedCloudNodeResult) string { return v.AzureApiVersion }).(pulumi.StringOutput)
}

// /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/dedicatedCloudNodes/{dedicatedCloudNodeName}
func (o LookupDedicatedCloudNodeResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDedicatedCloudNodeResult) string { return v.Id }).(pulumi.StringOutput)
}

// Azure region
func (o LookupDedicatedCloudNodeResultOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDedicatedCloudNodeResult) string { return v.Location }).(pulumi.StringOutput)
}

// {dedicatedCloudNodeName}
func (o LookupDedicatedCloudNodeResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDedicatedCloudNodeResult) string { return v.Name }).(pulumi.StringOutput)
}

// Dedicated Cloud Nodes properties
func (o LookupDedicatedCloudNodeResultOutput) Properties() DedicatedCloudNodePropertiesResponseOutput {
	return o.ApplyT(func(v LookupDedicatedCloudNodeResult) DedicatedCloudNodePropertiesResponse { return v.Properties }).(DedicatedCloudNodePropertiesResponseOutput)
}

// Dedicated Cloud Nodes SKU
func (o LookupDedicatedCloudNodeResultOutput) Sku() SkuResponsePtrOutput {
	return o.ApplyT(func(v LookupDedicatedCloudNodeResult) *SkuResponse { return v.Sku }).(SkuResponsePtrOutput)
}

// Dedicated Cloud Nodes tags
func (o LookupDedicatedCloudNodeResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupDedicatedCloudNodeResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// {resourceProviderNamespace}/{resourceType}
func (o LookupDedicatedCloudNodeResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDedicatedCloudNodeResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupDedicatedCloudNodeResultOutput{})
}
