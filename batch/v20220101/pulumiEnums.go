// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20220101

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The authentication mode for the Batch account.
type AuthenticationMode string

const (
	// The authentication mode using shared keys.
	AuthenticationModeSharedKey = AuthenticationMode("SharedKey")
	// The authentication mode using Azure Active Directory.
	AuthenticationModeAAD = AuthenticationMode("AAD")
	// The authentication mode using task authentication tokens.
	AuthenticationModeTaskAuthenticationToken = AuthenticationMode("TaskAuthenticationToken")
)

func (AuthenticationMode) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthenticationMode)(nil)).Elem()
}

func (e AuthenticationMode) ToAuthenticationModeOutput() AuthenticationModeOutput {
	return pulumi.ToOutput(e).(AuthenticationModeOutput)
}

func (e AuthenticationMode) ToAuthenticationModeOutputWithContext(ctx context.Context) AuthenticationModeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AuthenticationModeOutput)
}

func (e AuthenticationMode) ToAuthenticationModePtrOutput() AuthenticationModePtrOutput {
	return e.ToAuthenticationModePtrOutputWithContext(context.Background())
}

func (e AuthenticationMode) ToAuthenticationModePtrOutputWithContext(ctx context.Context) AuthenticationModePtrOutput {
	return AuthenticationMode(e).ToAuthenticationModeOutputWithContext(ctx).ToAuthenticationModePtrOutputWithContext(ctx)
}

func (e AuthenticationMode) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AuthenticationMode) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AuthenticationMode) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AuthenticationMode) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AuthenticationModeOutput struct{ *pulumi.OutputState }

func (AuthenticationModeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthenticationMode)(nil)).Elem()
}

func (o AuthenticationModeOutput) ToAuthenticationModeOutput() AuthenticationModeOutput {
	return o
}

func (o AuthenticationModeOutput) ToAuthenticationModeOutputWithContext(ctx context.Context) AuthenticationModeOutput {
	return o
}

func (o AuthenticationModeOutput) ToAuthenticationModePtrOutput() AuthenticationModePtrOutput {
	return o.ToAuthenticationModePtrOutputWithContext(context.Background())
}

func (o AuthenticationModeOutput) ToAuthenticationModePtrOutputWithContext(ctx context.Context) AuthenticationModePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AuthenticationMode) *AuthenticationMode {
		return &v
	}).(AuthenticationModePtrOutput)
}

func (o AuthenticationModeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AuthenticationModeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AuthenticationMode) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AuthenticationModeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AuthenticationModeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AuthenticationMode) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AuthenticationModePtrOutput struct{ *pulumi.OutputState }

func (AuthenticationModePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AuthenticationMode)(nil)).Elem()
}

func (o AuthenticationModePtrOutput) ToAuthenticationModePtrOutput() AuthenticationModePtrOutput {
	return o
}

func (o AuthenticationModePtrOutput) ToAuthenticationModePtrOutputWithContext(ctx context.Context) AuthenticationModePtrOutput {
	return o
}

func (o AuthenticationModePtrOutput) Elem() AuthenticationModeOutput {
	return o.ApplyT(func(v *AuthenticationMode) AuthenticationMode {
		if v != nil {
			return *v
		}
		var ret AuthenticationMode
		return ret
	}).(AuthenticationModeOutput)
}

func (o AuthenticationModePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AuthenticationModePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AuthenticationMode) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AuthenticationModeInput is an input type that accepts values of the AuthenticationMode enum
// A concrete instance of `AuthenticationModeInput` can be one of the following:
//
//	AuthenticationModeSharedKey
//	AuthenticationModeAAD
//	AuthenticationModeTaskAuthenticationToken
type AuthenticationModeInput interface {
	pulumi.Input

	ToAuthenticationModeOutput() AuthenticationModeOutput
	ToAuthenticationModeOutputWithContext(context.Context) AuthenticationModeOutput
}

var authenticationModePtrType = reflect.TypeOf((**AuthenticationMode)(nil)).Elem()

type AuthenticationModePtrInput interface {
	pulumi.Input

	ToAuthenticationModePtrOutput() AuthenticationModePtrOutput
	ToAuthenticationModePtrOutputWithContext(context.Context) AuthenticationModePtrOutput
}

type authenticationModePtr string

func AuthenticationModePtr(v string) AuthenticationModePtrInput {
	return (*authenticationModePtr)(&v)
}

func (*authenticationModePtr) ElementType() reflect.Type {
	return authenticationModePtrType
}

func (in *authenticationModePtr) ToAuthenticationModePtrOutput() AuthenticationModePtrOutput {
	return pulumi.ToOutput(in).(AuthenticationModePtrOutput)
}

func (in *authenticationModePtr) ToAuthenticationModePtrOutputWithContext(ctx context.Context) AuthenticationModePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AuthenticationModePtrOutput)
}

// AuthenticationModeArrayInput is an input type that accepts AuthenticationModeArray and AuthenticationModeArrayOutput values.
// You can construct a concrete instance of `AuthenticationModeArrayInput` via:
//
//	AuthenticationModeArray{ AuthenticationModeArgs{...} }
type AuthenticationModeArrayInput interface {
	pulumi.Input

	ToAuthenticationModeArrayOutput() AuthenticationModeArrayOutput
	ToAuthenticationModeArrayOutputWithContext(context.Context) AuthenticationModeArrayOutput
}

type AuthenticationModeArray []AuthenticationMode

func (AuthenticationModeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AuthenticationMode)(nil)).Elem()
}

func (i AuthenticationModeArray) ToAuthenticationModeArrayOutput() AuthenticationModeArrayOutput {
	return i.ToAuthenticationModeArrayOutputWithContext(context.Background())
}

func (i AuthenticationModeArray) ToAuthenticationModeArrayOutputWithContext(ctx context.Context) AuthenticationModeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthenticationModeArrayOutput)
}

type AuthenticationModeArrayOutput struct{ *pulumi.OutputState }

func (AuthenticationModeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AuthenticationMode)(nil)).Elem()
}

func (o AuthenticationModeArrayOutput) ToAuthenticationModeArrayOutput() AuthenticationModeArrayOutput {
	return o
}

func (o AuthenticationModeArrayOutput) ToAuthenticationModeArrayOutputWithContext(ctx context.Context) AuthenticationModeArrayOutput {
	return o
}

func (o AuthenticationModeArrayOutput) Index(i pulumi.IntInput) AuthenticationModeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AuthenticationMode {
		return vs[0].([]AuthenticationMode)[vs[1].(int)]
	}).(AuthenticationModeOutput)
}

// The authentication mode which the Batch service will use to manage the auto-storage account.
type AutoStorageAuthenticationMode string

const (
	// The Batch service will authenticate requests to auto-storage using storage account keys.
	AutoStorageAuthenticationModeStorageKeys = AutoStorageAuthenticationMode("StorageKeys")
	// The Batch service will authenticate requests to auto-storage using the managed identity assigned to the Batch account.
	AutoStorageAuthenticationModeBatchAccountManagedIdentity = AutoStorageAuthenticationMode("BatchAccountManagedIdentity")
)

func (AutoStorageAuthenticationMode) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoStorageAuthenticationMode)(nil)).Elem()
}

func (e AutoStorageAuthenticationMode) ToAutoStorageAuthenticationModeOutput() AutoStorageAuthenticationModeOutput {
	return pulumi.ToOutput(e).(AutoStorageAuthenticationModeOutput)
}

func (e AutoStorageAuthenticationMode) ToAutoStorageAuthenticationModeOutputWithContext(ctx context.Context) AutoStorageAuthenticationModeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AutoStorageAuthenticationModeOutput)
}

func (e AutoStorageAuthenticationMode) ToAutoStorageAuthenticationModePtrOutput() AutoStorageAuthenticationModePtrOutput {
	return e.ToAutoStorageAuthenticationModePtrOutputWithContext(context.Background())
}

func (e AutoStorageAuthenticationMode) ToAutoStorageAuthenticationModePtrOutputWithContext(ctx context.Context) AutoStorageAuthenticationModePtrOutput {
	return AutoStorageAuthenticationMode(e).ToAutoStorageAuthenticationModeOutputWithContext(ctx).ToAutoStorageAuthenticationModePtrOutputWithContext(ctx)
}

func (e AutoStorageAuthenticationMode) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AutoStorageAuthenticationMode) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AutoStorageAuthenticationMode) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AutoStorageAuthenticationMode) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AutoStorageAuthenticationModeOutput struct{ *pulumi.OutputState }

func (AutoStorageAuthenticationModeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoStorageAuthenticationMode)(nil)).Elem()
}

func (o AutoStorageAuthenticationModeOutput) ToAutoStorageAuthenticationModeOutput() AutoStorageAuthenticationModeOutput {
	return o
}

func (o AutoStorageAuthenticationModeOutput) ToAutoStorageAuthenticationModeOutputWithContext(ctx context.Context) AutoStorageAuthenticationModeOutput {
	return o
}

func (o AutoStorageAuthenticationModeOutput) ToAutoStorageAuthenticationModePtrOutput() AutoStorageAuthenticationModePtrOutput {
	return o.ToAutoStorageAuthenticationModePtrOutputWithContext(context.Background())
}

func (o AutoStorageAuthenticationModeOutput) ToAutoStorageAuthenticationModePtrOutputWithContext(ctx context.Context) AutoStorageAuthenticationModePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AutoStorageAuthenticationMode) *AutoStorageAuthenticationMode {
		return &v
	}).(AutoStorageAuthenticationModePtrOutput)
}

func (o AutoStorageAuthenticationModeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AutoStorageAuthenticationModeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AutoStorageAuthenticationMode) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AutoStorageAuthenticationModeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AutoStorageAuthenticationModeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AutoStorageAuthenticationMode) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AutoStorageAuthenticationModePtrOutput struct{ *pulumi.OutputState }

func (AutoStorageAuthenticationModePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoStorageAuthenticationMode)(nil)).Elem()
}

func (o AutoStorageAuthenticationModePtrOutput) ToAutoStorageAuthenticationModePtrOutput() AutoStorageAuthenticationModePtrOutput {
	return o
}

func (o AutoStorageAuthenticationModePtrOutput) ToAutoStorageAuthenticationModePtrOutputWithContext(ctx context.Context) AutoStorageAuthenticationModePtrOutput {
	return o
}

func (o AutoStorageAuthenticationModePtrOutput) Elem() AutoStorageAuthenticationModeOutput {
	return o.ApplyT(func(v *AutoStorageAuthenticationMode) AutoStorageAuthenticationMode {
		if v != nil {
			return *v
		}
		var ret AutoStorageAuthenticationMode
		return ret
	}).(AutoStorageAuthenticationModeOutput)
}

func (o AutoStorageAuthenticationModePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AutoStorageAuthenticationModePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AutoStorageAuthenticationMode) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AutoStorageAuthenticationModeInput is an input type that accepts values of the AutoStorageAuthenticationMode enum
// A concrete instance of `AutoStorageAuthenticationModeInput` can be one of the following:
//
//	AutoStorageAuthenticationModeStorageKeys
//	AutoStorageAuthenticationModeBatchAccountManagedIdentity
type AutoStorageAuthenticationModeInput interface {
	pulumi.Input

	ToAutoStorageAuthenticationModeOutput() AutoStorageAuthenticationModeOutput
	ToAutoStorageAuthenticationModeOutputWithContext(context.Context) AutoStorageAuthenticationModeOutput
}

var autoStorageAuthenticationModePtrType = reflect.TypeOf((**AutoStorageAuthenticationMode)(nil)).Elem()

type AutoStorageAuthenticationModePtrInput interface {
	pulumi.Input

	ToAutoStorageAuthenticationModePtrOutput() AutoStorageAuthenticationModePtrOutput
	ToAutoStorageAuthenticationModePtrOutputWithContext(context.Context) AutoStorageAuthenticationModePtrOutput
}

type autoStorageAuthenticationModePtr string

func AutoStorageAuthenticationModePtr(v string) AutoStorageAuthenticationModePtrInput {
	return (*autoStorageAuthenticationModePtr)(&v)
}

func (*autoStorageAuthenticationModePtr) ElementType() reflect.Type {
	return autoStorageAuthenticationModePtrType
}

func (in *autoStorageAuthenticationModePtr) ToAutoStorageAuthenticationModePtrOutput() AutoStorageAuthenticationModePtrOutput {
	return pulumi.ToOutput(in).(AutoStorageAuthenticationModePtrOutput)
}

func (in *autoStorageAuthenticationModePtr) ToAutoStorageAuthenticationModePtrOutputWithContext(ctx context.Context) AutoStorageAuthenticationModePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AutoStorageAuthenticationModePtrOutput)
}

// Type of the key source.
type KeySource string

const (
	// Batch creates and manages the encryption keys used to protect the account data.
	KeySource_Microsoft_Batch = KeySource("Microsoft.Batch")
	// The encryption keys used to protect the account data are stored in an external key vault. If this is set then the Batch Account identity must be set to `SystemAssigned` and a valid Key Identifier must also be supplied under the keyVaultProperties.
	KeySource_Microsoft_KeyVault = KeySource("Microsoft.KeyVault")
)

func (KeySource) ElementType() reflect.Type {
	return reflect.TypeOf((*KeySource)(nil)).Elem()
}

func (e KeySource) ToKeySourceOutput() KeySourceOutput {
	return pulumi.ToOutput(e).(KeySourceOutput)
}

func (e KeySource) ToKeySourceOutputWithContext(ctx context.Context) KeySourceOutput {
	return pulumi.ToOutputWithContext(ctx, e).(KeySourceOutput)
}

func (e KeySource) ToKeySourcePtrOutput() KeySourcePtrOutput {
	return e.ToKeySourcePtrOutputWithContext(context.Background())
}

func (e KeySource) ToKeySourcePtrOutputWithContext(ctx context.Context) KeySourcePtrOutput {
	return KeySource(e).ToKeySourceOutputWithContext(ctx).ToKeySourcePtrOutputWithContext(ctx)
}

func (e KeySource) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e KeySource) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e KeySource) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e KeySource) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type KeySourceOutput struct{ *pulumi.OutputState }

func (KeySourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KeySource)(nil)).Elem()
}

func (o KeySourceOutput) ToKeySourceOutput() KeySourceOutput {
	return o
}

func (o KeySourceOutput) ToKeySourceOutputWithContext(ctx context.Context) KeySourceOutput {
	return o
}

func (o KeySourceOutput) ToKeySourcePtrOutput() KeySourcePtrOutput {
	return o.ToKeySourcePtrOutputWithContext(context.Background())
}

func (o KeySourceOutput) ToKeySourcePtrOutputWithContext(ctx context.Context) KeySourcePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KeySource) *KeySource {
		return &v
	}).(KeySourcePtrOutput)
}

func (o KeySourceOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o KeySourceOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e KeySource) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o KeySourceOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o KeySourceOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e KeySource) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type KeySourcePtrOutput struct{ *pulumi.OutputState }

func (KeySourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KeySource)(nil)).Elem()
}

func (o KeySourcePtrOutput) ToKeySourcePtrOutput() KeySourcePtrOutput {
	return o
}

func (o KeySourcePtrOutput) ToKeySourcePtrOutputWithContext(ctx context.Context) KeySourcePtrOutput {
	return o
}

func (o KeySourcePtrOutput) Elem() KeySourceOutput {
	return o.ApplyT(func(v *KeySource) KeySource {
		if v != nil {
			return *v
		}
		var ret KeySource
		return ret
	}).(KeySourceOutput)
}

func (o KeySourcePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o KeySourcePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *KeySource) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// KeySourceInput is an input type that accepts values of the KeySource enum
// A concrete instance of `KeySourceInput` can be one of the following:
//
//	KeySource_Microsoft_Batch
//	KeySource_Microsoft_KeyVault
type KeySourceInput interface {
	pulumi.Input

	ToKeySourceOutput() KeySourceOutput
	ToKeySourceOutputWithContext(context.Context) KeySourceOutput
}

var keySourcePtrType = reflect.TypeOf((**KeySource)(nil)).Elem()

type KeySourcePtrInput interface {
	pulumi.Input

	ToKeySourcePtrOutput() KeySourcePtrOutput
	ToKeySourcePtrOutputWithContext(context.Context) KeySourcePtrOutput
}

type keySourcePtr string

func KeySourcePtr(v string) KeySourcePtrInput {
	return (*keySourcePtr)(&v)
}

func (*keySourcePtr) ElementType() reflect.Type {
	return keySourcePtrType
}

func (in *keySourcePtr) ToKeySourcePtrOutput() KeySourcePtrOutput {
	return pulumi.ToOutput(in).(KeySourcePtrOutput)
}

func (in *keySourcePtr) ToKeySourcePtrOutputWithContext(ctx context.Context) KeySourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(KeySourcePtrOutput)
}

// The pool allocation mode also affects how clients may authenticate to the Batch Service API. If the mode is BatchService, clients may authenticate using access keys or Azure Active Directory. If the mode is UserSubscription, clients must use Azure Active Directory. The default is BatchService.
type PoolAllocationMode string

const (
	// Pools will be allocated in subscriptions owned by the Batch service.
	PoolAllocationModeBatchService = PoolAllocationMode("BatchService")
	// Pools will be allocated in a subscription owned by the user.
	PoolAllocationModeUserSubscription = PoolAllocationMode("UserSubscription")
)

func (PoolAllocationMode) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolAllocationMode)(nil)).Elem()
}

func (e PoolAllocationMode) ToPoolAllocationModeOutput() PoolAllocationModeOutput {
	return pulumi.ToOutput(e).(PoolAllocationModeOutput)
}

func (e PoolAllocationMode) ToPoolAllocationModeOutputWithContext(ctx context.Context) PoolAllocationModeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(PoolAllocationModeOutput)
}

func (e PoolAllocationMode) ToPoolAllocationModePtrOutput() PoolAllocationModePtrOutput {
	return e.ToPoolAllocationModePtrOutputWithContext(context.Background())
}

func (e PoolAllocationMode) ToPoolAllocationModePtrOutputWithContext(ctx context.Context) PoolAllocationModePtrOutput {
	return PoolAllocationMode(e).ToPoolAllocationModeOutputWithContext(ctx).ToPoolAllocationModePtrOutputWithContext(ctx)
}

func (e PoolAllocationMode) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e PoolAllocationMode) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e PoolAllocationMode) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e PoolAllocationMode) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type PoolAllocationModeOutput struct{ *pulumi.OutputState }

func (PoolAllocationModeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolAllocationMode)(nil)).Elem()
}

func (o PoolAllocationModeOutput) ToPoolAllocationModeOutput() PoolAllocationModeOutput {
	return o
}

func (o PoolAllocationModeOutput) ToPoolAllocationModeOutputWithContext(ctx context.Context) PoolAllocationModeOutput {
	return o
}

func (o PoolAllocationModeOutput) ToPoolAllocationModePtrOutput() PoolAllocationModePtrOutput {
	return o.ToPoolAllocationModePtrOutputWithContext(context.Background())
}

func (o PoolAllocationModeOutput) ToPoolAllocationModePtrOutputWithContext(ctx context.Context) PoolAllocationModePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoolAllocationMode) *PoolAllocationMode {
		return &v
	}).(PoolAllocationModePtrOutput)
}

func (o PoolAllocationModeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o PoolAllocationModeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PoolAllocationMode) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o PoolAllocationModeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PoolAllocationModeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PoolAllocationMode) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type PoolAllocationModePtrOutput struct{ *pulumi.OutputState }

func (PoolAllocationModePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolAllocationMode)(nil)).Elem()
}

func (o PoolAllocationModePtrOutput) ToPoolAllocationModePtrOutput() PoolAllocationModePtrOutput {
	return o
}

func (o PoolAllocationModePtrOutput) ToPoolAllocationModePtrOutputWithContext(ctx context.Context) PoolAllocationModePtrOutput {
	return o
}

func (o PoolAllocationModePtrOutput) Elem() PoolAllocationModeOutput {
	return o.ApplyT(func(v *PoolAllocationMode) PoolAllocationMode {
		if v != nil {
			return *v
		}
		var ret PoolAllocationMode
		return ret
	}).(PoolAllocationModeOutput)
}

func (o PoolAllocationModePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PoolAllocationModePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *PoolAllocationMode) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// PoolAllocationModeInput is an input type that accepts values of the PoolAllocationMode enum
// A concrete instance of `PoolAllocationModeInput` can be one of the following:
//
//	PoolAllocationModeBatchService
//	PoolAllocationModeUserSubscription
type PoolAllocationModeInput interface {
	pulumi.Input

	ToPoolAllocationModeOutput() PoolAllocationModeOutput
	ToPoolAllocationModeOutputWithContext(context.Context) PoolAllocationModeOutput
}

var poolAllocationModePtrType = reflect.TypeOf((**PoolAllocationMode)(nil)).Elem()

type PoolAllocationModePtrInput interface {
	pulumi.Input

	ToPoolAllocationModePtrOutput() PoolAllocationModePtrOutput
	ToPoolAllocationModePtrOutputWithContext(context.Context) PoolAllocationModePtrOutput
}

type poolAllocationModePtr string

func PoolAllocationModePtr(v string) PoolAllocationModePtrInput {
	return (*poolAllocationModePtr)(&v)
}

func (*poolAllocationModePtr) ElementType() reflect.Type {
	return poolAllocationModePtrType
}

func (in *poolAllocationModePtr) ToPoolAllocationModePtrOutput() PoolAllocationModePtrOutput {
	return pulumi.ToOutput(in).(PoolAllocationModePtrOutput)
}

func (in *poolAllocationModePtr) ToPoolAllocationModePtrOutputWithContext(ctx context.Context) PoolAllocationModePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(PoolAllocationModePtrOutput)
}

// If not specified, the default value is 'enabled'.
type PublicNetworkAccessType string

const (
	// Enables connectivity to Azure Batch through public DNS.
	PublicNetworkAccessTypeEnabled = PublicNetworkAccessType("Enabled")
	// Disables public connectivity and enables private connectivity to Azure Batch Service through private endpoint resource.
	PublicNetworkAccessTypeDisabled = PublicNetworkAccessType("Disabled")
)

func (PublicNetworkAccessType) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicNetworkAccessType)(nil)).Elem()
}

func (e PublicNetworkAccessType) ToPublicNetworkAccessTypeOutput() PublicNetworkAccessTypeOutput {
	return pulumi.ToOutput(e).(PublicNetworkAccessTypeOutput)
}

func (e PublicNetworkAccessType) ToPublicNetworkAccessTypeOutputWithContext(ctx context.Context) PublicNetworkAccessTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(PublicNetworkAccessTypeOutput)
}

func (e PublicNetworkAccessType) ToPublicNetworkAccessTypePtrOutput() PublicNetworkAccessTypePtrOutput {
	return e.ToPublicNetworkAccessTypePtrOutputWithContext(context.Background())
}

func (e PublicNetworkAccessType) ToPublicNetworkAccessTypePtrOutputWithContext(ctx context.Context) PublicNetworkAccessTypePtrOutput {
	return PublicNetworkAccessType(e).ToPublicNetworkAccessTypeOutputWithContext(ctx).ToPublicNetworkAccessTypePtrOutputWithContext(ctx)
}

func (e PublicNetworkAccessType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e PublicNetworkAccessType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e PublicNetworkAccessType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e PublicNetworkAccessType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type PublicNetworkAccessTypeOutput struct{ *pulumi.OutputState }

func (PublicNetworkAccessTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicNetworkAccessType)(nil)).Elem()
}

func (o PublicNetworkAccessTypeOutput) ToPublicNetworkAccessTypeOutput() PublicNetworkAccessTypeOutput {
	return o
}

func (o PublicNetworkAccessTypeOutput) ToPublicNetworkAccessTypeOutputWithContext(ctx context.Context) PublicNetworkAccessTypeOutput {
	return o
}

func (o PublicNetworkAccessTypeOutput) ToPublicNetworkAccessTypePtrOutput() PublicNetworkAccessTypePtrOutput {
	return o.ToPublicNetworkAccessTypePtrOutputWithContext(context.Background())
}

func (o PublicNetworkAccessTypeOutput) ToPublicNetworkAccessTypePtrOutputWithContext(ctx context.Context) PublicNetworkAccessTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PublicNetworkAccessType) *PublicNetworkAccessType {
		return &v
	}).(PublicNetworkAccessTypePtrOutput)
}

func (o PublicNetworkAccessTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o PublicNetworkAccessTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PublicNetworkAccessType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o PublicNetworkAccessTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PublicNetworkAccessTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PublicNetworkAccessType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type PublicNetworkAccessTypePtrOutput struct{ *pulumi.OutputState }

func (PublicNetworkAccessTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PublicNetworkAccessType)(nil)).Elem()
}

func (o PublicNetworkAccessTypePtrOutput) ToPublicNetworkAccessTypePtrOutput() PublicNetworkAccessTypePtrOutput {
	return o
}

func (o PublicNetworkAccessTypePtrOutput) ToPublicNetworkAccessTypePtrOutputWithContext(ctx context.Context) PublicNetworkAccessTypePtrOutput {
	return o
}

func (o PublicNetworkAccessTypePtrOutput) Elem() PublicNetworkAccessTypeOutput {
	return o.ApplyT(func(v *PublicNetworkAccessType) PublicNetworkAccessType {
		if v != nil {
			return *v
		}
		var ret PublicNetworkAccessType
		return ret
	}).(PublicNetworkAccessTypeOutput)
}

func (o PublicNetworkAccessTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PublicNetworkAccessTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *PublicNetworkAccessType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// PublicNetworkAccessTypeInput is an input type that accepts values of the PublicNetworkAccessType enum
// A concrete instance of `PublicNetworkAccessTypeInput` can be one of the following:
//
//	PublicNetworkAccessTypeEnabled
//	PublicNetworkAccessTypeDisabled
type PublicNetworkAccessTypeInput interface {
	pulumi.Input

	ToPublicNetworkAccessTypeOutput() PublicNetworkAccessTypeOutput
	ToPublicNetworkAccessTypeOutputWithContext(context.Context) PublicNetworkAccessTypeOutput
}

var publicNetworkAccessTypePtrType = reflect.TypeOf((**PublicNetworkAccessType)(nil)).Elem()

type PublicNetworkAccessTypePtrInput interface {
	pulumi.Input

	ToPublicNetworkAccessTypePtrOutput() PublicNetworkAccessTypePtrOutput
	ToPublicNetworkAccessTypePtrOutputWithContext(context.Context) PublicNetworkAccessTypePtrOutput
}

type publicNetworkAccessTypePtr string

func PublicNetworkAccessTypePtr(v string) PublicNetworkAccessTypePtrInput {
	return (*publicNetworkAccessTypePtr)(&v)
}

func (*publicNetworkAccessTypePtr) ElementType() reflect.Type {
	return publicNetworkAccessTypePtrType
}

func (in *publicNetworkAccessTypePtr) ToPublicNetworkAccessTypePtrOutput() PublicNetworkAccessTypePtrOutput {
	return pulumi.ToOutput(in).(PublicNetworkAccessTypePtrOutput)
}

func (in *publicNetworkAccessTypePtr) ToPublicNetworkAccessTypePtrOutputWithContext(ctx context.Context) PublicNetworkAccessTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(PublicNetworkAccessTypePtrOutput)
}

// The type of identity used for the Batch account.
type ResourceIdentityType string

const (
	// Batch account has a system assigned identity with it.
	ResourceIdentityTypeSystemAssigned = ResourceIdentityType("SystemAssigned")
	// Batch account has user assigned identities with it.
	ResourceIdentityTypeUserAssigned = ResourceIdentityType("UserAssigned")
	// Batch account has no identity associated with it. Setting `None` in update account will remove existing identities.
	ResourceIdentityTypeNone = ResourceIdentityType("None")
)

func (ResourceIdentityType) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceIdentityType)(nil)).Elem()
}

func (e ResourceIdentityType) ToResourceIdentityTypeOutput() ResourceIdentityTypeOutput {
	return pulumi.ToOutput(e).(ResourceIdentityTypeOutput)
}

func (e ResourceIdentityType) ToResourceIdentityTypeOutputWithContext(ctx context.Context) ResourceIdentityTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ResourceIdentityTypeOutput)
}

func (e ResourceIdentityType) ToResourceIdentityTypePtrOutput() ResourceIdentityTypePtrOutput {
	return e.ToResourceIdentityTypePtrOutputWithContext(context.Background())
}

func (e ResourceIdentityType) ToResourceIdentityTypePtrOutputWithContext(ctx context.Context) ResourceIdentityTypePtrOutput {
	return ResourceIdentityType(e).ToResourceIdentityTypeOutputWithContext(ctx).ToResourceIdentityTypePtrOutputWithContext(ctx)
}

func (e ResourceIdentityType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ResourceIdentityType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ResourceIdentityType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ResourceIdentityType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ResourceIdentityTypeOutput struct{ *pulumi.OutputState }

func (ResourceIdentityTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceIdentityType)(nil)).Elem()
}

func (o ResourceIdentityTypeOutput) ToResourceIdentityTypeOutput() ResourceIdentityTypeOutput {
	return o
}

func (o ResourceIdentityTypeOutput) ToResourceIdentityTypeOutputWithContext(ctx context.Context) ResourceIdentityTypeOutput {
	return o
}

func (o ResourceIdentityTypeOutput) ToResourceIdentityTypePtrOutput() ResourceIdentityTypePtrOutput {
	return o.ToResourceIdentityTypePtrOutputWithContext(context.Background())
}

func (o ResourceIdentityTypeOutput) ToResourceIdentityTypePtrOutputWithContext(ctx context.Context) ResourceIdentityTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ResourceIdentityType) *ResourceIdentityType {
		return &v
	}).(ResourceIdentityTypePtrOutput)
}

func (o ResourceIdentityTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ResourceIdentityTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ResourceIdentityType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ResourceIdentityTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ResourceIdentityTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ResourceIdentityType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ResourceIdentityTypePtrOutput struct{ *pulumi.OutputState }

func (ResourceIdentityTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceIdentityType)(nil)).Elem()
}

func (o ResourceIdentityTypePtrOutput) ToResourceIdentityTypePtrOutput() ResourceIdentityTypePtrOutput {
	return o
}

func (o ResourceIdentityTypePtrOutput) ToResourceIdentityTypePtrOutputWithContext(ctx context.Context) ResourceIdentityTypePtrOutput {
	return o
}

func (o ResourceIdentityTypePtrOutput) Elem() ResourceIdentityTypeOutput {
	return o.ApplyT(func(v *ResourceIdentityType) ResourceIdentityType {
		if v != nil {
			return *v
		}
		var ret ResourceIdentityType
		return ret
	}).(ResourceIdentityTypeOutput)
}

func (o ResourceIdentityTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ResourceIdentityTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ResourceIdentityType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ResourceIdentityTypeInput is an input type that accepts values of the ResourceIdentityType enum
// A concrete instance of `ResourceIdentityTypeInput` can be one of the following:
//
//	ResourceIdentityTypeSystemAssigned
//	ResourceIdentityTypeUserAssigned
//	ResourceIdentityTypeNone
type ResourceIdentityTypeInput interface {
	pulumi.Input

	ToResourceIdentityTypeOutput() ResourceIdentityTypeOutput
	ToResourceIdentityTypeOutputWithContext(context.Context) ResourceIdentityTypeOutput
}

var resourceIdentityTypePtrType = reflect.TypeOf((**ResourceIdentityType)(nil)).Elem()

type ResourceIdentityTypePtrInput interface {
	pulumi.Input

	ToResourceIdentityTypePtrOutput() ResourceIdentityTypePtrOutput
	ToResourceIdentityTypePtrOutputWithContext(context.Context) ResourceIdentityTypePtrOutput
}

type resourceIdentityTypePtr string

func ResourceIdentityTypePtr(v string) ResourceIdentityTypePtrInput {
	return (*resourceIdentityTypePtr)(&v)
}

func (*resourceIdentityTypePtr) ElementType() reflect.Type {
	return resourceIdentityTypePtrType
}

func (in *resourceIdentityTypePtr) ToResourceIdentityTypePtrOutput() ResourceIdentityTypePtrOutput {
	return pulumi.ToOutput(in).(ResourceIdentityTypePtrOutput)
}

func (in *resourceIdentityTypePtr) ToResourceIdentityTypePtrOutputWithContext(ctx context.Context) ResourceIdentityTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ResourceIdentityTypePtrOutput)
}

func init() {
	pulumi.RegisterOutputType(AuthenticationModeOutput{})
	pulumi.RegisterOutputType(AuthenticationModePtrOutput{})
	pulumi.RegisterOutputType(AuthenticationModeArrayOutput{})
	pulumi.RegisterOutputType(AutoStorageAuthenticationModeOutput{})
	pulumi.RegisterOutputType(AutoStorageAuthenticationModePtrOutput{})
	pulumi.RegisterOutputType(KeySourceOutput{})
	pulumi.RegisterOutputType(KeySourcePtrOutput{})
	pulumi.RegisterOutputType(PoolAllocationModeOutput{})
	pulumi.RegisterOutputType(PoolAllocationModePtrOutput{})
	pulumi.RegisterOutputType(PublicNetworkAccessTypeOutput{})
	pulumi.RegisterOutputType(PublicNetworkAccessTypePtrOutput{})
	pulumi.RegisterOutputType(ResourceIdentityTypeOutput{})
	pulumi.RegisterOutputType(ResourceIdentityTypePtrOutput{})
}
