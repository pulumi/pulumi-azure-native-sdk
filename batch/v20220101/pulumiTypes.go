// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20220101

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = utilities.GetEnvOrDefault

// The properties related to the auto-storage account.
type AutoStorageBaseProperties struct {
	// The authentication mode which the Batch service will use to manage the auto-storage account.
	AuthenticationMode *AutoStorageAuthenticationMode `pulumi:"authenticationMode"`
	// The identity referenced here must be assigned to pools which have compute nodes that need access to auto-storage.
	NodeIdentityReference *ComputeNodeIdentityReference `pulumi:"nodeIdentityReference"`
	// The resource ID of the storage account to be used for auto-storage account.
	StorageAccountId string `pulumi:"storageAccountId"`
}

// Defaults sets the appropriate defaults for AutoStorageBaseProperties
func (val *AutoStorageBaseProperties) Defaults() *AutoStorageBaseProperties {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.AuthenticationMode == nil {
		authenticationMode_ := AutoStorageAuthenticationMode("StorageKeys")
		tmp.AuthenticationMode = &authenticationMode_
	}
	return &tmp
}

// AutoStorageBasePropertiesInput is an input type that accepts AutoStorageBasePropertiesArgs and AutoStorageBasePropertiesOutput values.
// You can construct a concrete instance of `AutoStorageBasePropertiesInput` via:
//
//	AutoStorageBasePropertiesArgs{...}
type AutoStorageBasePropertiesInput interface {
	pulumi.Input

	ToAutoStorageBasePropertiesOutput() AutoStorageBasePropertiesOutput
	ToAutoStorageBasePropertiesOutputWithContext(context.Context) AutoStorageBasePropertiesOutput
}

// The properties related to the auto-storage account.
type AutoStorageBasePropertiesArgs struct {
	// The authentication mode which the Batch service will use to manage the auto-storage account.
	AuthenticationMode AutoStorageAuthenticationModePtrInput `pulumi:"authenticationMode"`
	// The identity referenced here must be assigned to pools which have compute nodes that need access to auto-storage.
	NodeIdentityReference ComputeNodeIdentityReferencePtrInput `pulumi:"nodeIdentityReference"`
	// The resource ID of the storage account to be used for auto-storage account.
	StorageAccountId pulumi.StringInput `pulumi:"storageAccountId"`
}

// Defaults sets the appropriate defaults for AutoStorageBasePropertiesArgs
func (val *AutoStorageBasePropertiesArgs) Defaults() *AutoStorageBasePropertiesArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.AuthenticationMode == nil {
		tmp.AuthenticationMode = AutoStorageAuthenticationMode("StorageKeys")
	}
	return &tmp
}
func (AutoStorageBasePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoStorageBaseProperties)(nil)).Elem()
}

func (i AutoStorageBasePropertiesArgs) ToAutoStorageBasePropertiesOutput() AutoStorageBasePropertiesOutput {
	return i.ToAutoStorageBasePropertiesOutputWithContext(context.Background())
}

func (i AutoStorageBasePropertiesArgs) ToAutoStorageBasePropertiesOutputWithContext(ctx context.Context) AutoStorageBasePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoStorageBasePropertiesOutput)
}

func (i AutoStorageBasePropertiesArgs) ToAutoStorageBasePropertiesPtrOutput() AutoStorageBasePropertiesPtrOutput {
	return i.ToAutoStorageBasePropertiesPtrOutputWithContext(context.Background())
}

func (i AutoStorageBasePropertiesArgs) ToAutoStorageBasePropertiesPtrOutputWithContext(ctx context.Context) AutoStorageBasePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoStorageBasePropertiesOutput).ToAutoStorageBasePropertiesPtrOutputWithContext(ctx)
}

// AutoStorageBasePropertiesPtrInput is an input type that accepts AutoStorageBasePropertiesArgs, AutoStorageBasePropertiesPtr and AutoStorageBasePropertiesPtrOutput values.
// You can construct a concrete instance of `AutoStorageBasePropertiesPtrInput` via:
//
//	        AutoStorageBasePropertiesArgs{...}
//
//	or:
//
//	        nil
type AutoStorageBasePropertiesPtrInput interface {
	pulumi.Input

	ToAutoStorageBasePropertiesPtrOutput() AutoStorageBasePropertiesPtrOutput
	ToAutoStorageBasePropertiesPtrOutputWithContext(context.Context) AutoStorageBasePropertiesPtrOutput
}

type autoStorageBasePropertiesPtrType AutoStorageBasePropertiesArgs

func AutoStorageBasePropertiesPtr(v *AutoStorageBasePropertiesArgs) AutoStorageBasePropertiesPtrInput {
	return (*autoStorageBasePropertiesPtrType)(v)
}

func (*autoStorageBasePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoStorageBaseProperties)(nil)).Elem()
}

func (i *autoStorageBasePropertiesPtrType) ToAutoStorageBasePropertiesPtrOutput() AutoStorageBasePropertiesPtrOutput {
	return i.ToAutoStorageBasePropertiesPtrOutputWithContext(context.Background())
}

func (i *autoStorageBasePropertiesPtrType) ToAutoStorageBasePropertiesPtrOutputWithContext(ctx context.Context) AutoStorageBasePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoStorageBasePropertiesPtrOutput)
}

// The properties related to the auto-storage account.
type AutoStorageBasePropertiesOutput struct{ *pulumi.OutputState }

func (AutoStorageBasePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoStorageBaseProperties)(nil)).Elem()
}

func (o AutoStorageBasePropertiesOutput) ToAutoStorageBasePropertiesOutput() AutoStorageBasePropertiesOutput {
	return o
}

func (o AutoStorageBasePropertiesOutput) ToAutoStorageBasePropertiesOutputWithContext(ctx context.Context) AutoStorageBasePropertiesOutput {
	return o
}

func (o AutoStorageBasePropertiesOutput) ToAutoStorageBasePropertiesPtrOutput() AutoStorageBasePropertiesPtrOutput {
	return o.ToAutoStorageBasePropertiesPtrOutputWithContext(context.Background())
}

func (o AutoStorageBasePropertiesOutput) ToAutoStorageBasePropertiesPtrOutputWithContext(ctx context.Context) AutoStorageBasePropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AutoStorageBaseProperties) *AutoStorageBaseProperties {
		return &v
	}).(AutoStorageBasePropertiesPtrOutput)
}

// The authentication mode which the Batch service will use to manage the auto-storage account.
func (o AutoStorageBasePropertiesOutput) AuthenticationMode() AutoStorageAuthenticationModePtrOutput {
	return o.ApplyT(func(v AutoStorageBaseProperties) *AutoStorageAuthenticationMode { return v.AuthenticationMode }).(AutoStorageAuthenticationModePtrOutput)
}

// The identity referenced here must be assigned to pools which have compute nodes that need access to auto-storage.
func (o AutoStorageBasePropertiesOutput) NodeIdentityReference() ComputeNodeIdentityReferencePtrOutput {
	return o.ApplyT(func(v AutoStorageBaseProperties) *ComputeNodeIdentityReference { return v.NodeIdentityReference }).(ComputeNodeIdentityReferencePtrOutput)
}

// The resource ID of the storage account to be used for auto-storage account.
func (o AutoStorageBasePropertiesOutput) StorageAccountId() pulumi.StringOutput {
	return o.ApplyT(func(v AutoStorageBaseProperties) string { return v.StorageAccountId }).(pulumi.StringOutput)
}

type AutoStorageBasePropertiesPtrOutput struct{ *pulumi.OutputState }

func (AutoStorageBasePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoStorageBaseProperties)(nil)).Elem()
}

func (o AutoStorageBasePropertiesPtrOutput) ToAutoStorageBasePropertiesPtrOutput() AutoStorageBasePropertiesPtrOutput {
	return o
}

func (o AutoStorageBasePropertiesPtrOutput) ToAutoStorageBasePropertiesPtrOutputWithContext(ctx context.Context) AutoStorageBasePropertiesPtrOutput {
	return o
}

func (o AutoStorageBasePropertiesPtrOutput) Elem() AutoStorageBasePropertiesOutput {
	return o.ApplyT(func(v *AutoStorageBaseProperties) AutoStorageBaseProperties {
		if v != nil {
			return *v
		}
		var ret AutoStorageBaseProperties
		return ret
	}).(AutoStorageBasePropertiesOutput)
}

// The authentication mode which the Batch service will use to manage the auto-storage account.
func (o AutoStorageBasePropertiesPtrOutput) AuthenticationMode() AutoStorageAuthenticationModePtrOutput {
	return o.ApplyT(func(v *AutoStorageBaseProperties) *AutoStorageAuthenticationMode {
		if v == nil {
			return nil
		}
		return v.AuthenticationMode
	}).(AutoStorageAuthenticationModePtrOutput)
}

// The identity referenced here must be assigned to pools which have compute nodes that need access to auto-storage.
func (o AutoStorageBasePropertiesPtrOutput) NodeIdentityReference() ComputeNodeIdentityReferencePtrOutput {
	return o.ApplyT(func(v *AutoStorageBaseProperties) *ComputeNodeIdentityReference {
		if v == nil {
			return nil
		}
		return v.NodeIdentityReference
	}).(ComputeNodeIdentityReferencePtrOutput)
}

// The resource ID of the storage account to be used for auto-storage account.
func (o AutoStorageBasePropertiesPtrOutput) StorageAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AutoStorageBaseProperties) *string {
		if v == nil {
			return nil
		}
		return &v.StorageAccountId
	}).(pulumi.StringPtrOutput)
}

// Contains information about the auto-storage account associated with a Batch account.
type AutoStoragePropertiesResponse struct {
	// The authentication mode which the Batch service will use to manage the auto-storage account.
	AuthenticationMode *string `pulumi:"authenticationMode"`
	// The UTC time at which storage keys were last synchronized with the Batch account.
	LastKeySync string `pulumi:"lastKeySync"`
	// The identity referenced here must be assigned to pools which have compute nodes that need access to auto-storage.
	NodeIdentityReference *ComputeNodeIdentityReferenceResponse `pulumi:"nodeIdentityReference"`
	// The resource ID of the storage account to be used for auto-storage account.
	StorageAccountId string `pulumi:"storageAccountId"`
}

// Defaults sets the appropriate defaults for AutoStoragePropertiesResponse
func (val *AutoStoragePropertiesResponse) Defaults() *AutoStoragePropertiesResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.AuthenticationMode == nil {
		authenticationMode_ := "StorageKeys"
		tmp.AuthenticationMode = &authenticationMode_
	}
	return &tmp
}

// Contains information about the auto-storage account associated with a Batch account.
type AutoStoragePropertiesResponseOutput struct{ *pulumi.OutputState }

func (AutoStoragePropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoStoragePropertiesResponse)(nil)).Elem()
}

func (o AutoStoragePropertiesResponseOutput) ToAutoStoragePropertiesResponseOutput() AutoStoragePropertiesResponseOutput {
	return o
}

func (o AutoStoragePropertiesResponseOutput) ToAutoStoragePropertiesResponseOutputWithContext(ctx context.Context) AutoStoragePropertiesResponseOutput {
	return o
}

// The authentication mode which the Batch service will use to manage the auto-storage account.
func (o AutoStoragePropertiesResponseOutput) AuthenticationMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AutoStoragePropertiesResponse) *string { return v.AuthenticationMode }).(pulumi.StringPtrOutput)
}

// The UTC time at which storage keys were last synchronized with the Batch account.
func (o AutoStoragePropertiesResponseOutput) LastKeySync() pulumi.StringOutput {
	return o.ApplyT(func(v AutoStoragePropertiesResponse) string { return v.LastKeySync }).(pulumi.StringOutput)
}

// The identity referenced here must be assigned to pools which have compute nodes that need access to auto-storage.
func (o AutoStoragePropertiesResponseOutput) NodeIdentityReference() ComputeNodeIdentityReferenceResponsePtrOutput {
	return o.ApplyT(func(v AutoStoragePropertiesResponse) *ComputeNodeIdentityReferenceResponse {
		return v.NodeIdentityReference
	}).(ComputeNodeIdentityReferenceResponsePtrOutput)
}

// The resource ID of the storage account to be used for auto-storage account.
func (o AutoStoragePropertiesResponseOutput) StorageAccountId() pulumi.StringOutput {
	return o.ApplyT(func(v AutoStoragePropertiesResponse) string { return v.StorageAccountId }).(pulumi.StringOutput)
}

// The identity of the Batch account, if configured. This is used when the user specifies 'Microsoft.KeyVault' as their Batch account encryption configuration or when `ManagedIdentity` is selected as the auto-storage authentication mode.
type BatchAccountIdentity struct {
	// The type of identity used for the Batch account.
	Type ResourceIdentityType `pulumi:"type"`
	// The list of user identities associated with the Batch account.
	UserAssignedIdentities []string `pulumi:"userAssignedIdentities"`
}

// BatchAccountIdentityInput is an input type that accepts BatchAccountIdentityArgs and BatchAccountIdentityOutput values.
// You can construct a concrete instance of `BatchAccountIdentityInput` via:
//
//	BatchAccountIdentityArgs{...}
type BatchAccountIdentityInput interface {
	pulumi.Input

	ToBatchAccountIdentityOutput() BatchAccountIdentityOutput
	ToBatchAccountIdentityOutputWithContext(context.Context) BatchAccountIdentityOutput
}

// The identity of the Batch account, if configured. This is used when the user specifies 'Microsoft.KeyVault' as their Batch account encryption configuration or when `ManagedIdentity` is selected as the auto-storage authentication mode.
type BatchAccountIdentityArgs struct {
	// The type of identity used for the Batch account.
	Type ResourceIdentityTypeInput `pulumi:"type"`
	// The list of user identities associated with the Batch account.
	UserAssignedIdentities pulumi.StringArrayInput `pulumi:"userAssignedIdentities"`
}

func (BatchAccountIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BatchAccountIdentity)(nil)).Elem()
}

func (i BatchAccountIdentityArgs) ToBatchAccountIdentityOutput() BatchAccountIdentityOutput {
	return i.ToBatchAccountIdentityOutputWithContext(context.Background())
}

func (i BatchAccountIdentityArgs) ToBatchAccountIdentityOutputWithContext(ctx context.Context) BatchAccountIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BatchAccountIdentityOutput)
}

func (i BatchAccountIdentityArgs) ToBatchAccountIdentityPtrOutput() BatchAccountIdentityPtrOutput {
	return i.ToBatchAccountIdentityPtrOutputWithContext(context.Background())
}

func (i BatchAccountIdentityArgs) ToBatchAccountIdentityPtrOutputWithContext(ctx context.Context) BatchAccountIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BatchAccountIdentityOutput).ToBatchAccountIdentityPtrOutputWithContext(ctx)
}

// BatchAccountIdentityPtrInput is an input type that accepts BatchAccountIdentityArgs, BatchAccountIdentityPtr and BatchAccountIdentityPtrOutput values.
// You can construct a concrete instance of `BatchAccountIdentityPtrInput` via:
//
//	        BatchAccountIdentityArgs{...}
//
//	or:
//
//	        nil
type BatchAccountIdentityPtrInput interface {
	pulumi.Input

	ToBatchAccountIdentityPtrOutput() BatchAccountIdentityPtrOutput
	ToBatchAccountIdentityPtrOutputWithContext(context.Context) BatchAccountIdentityPtrOutput
}

type batchAccountIdentityPtrType BatchAccountIdentityArgs

func BatchAccountIdentityPtr(v *BatchAccountIdentityArgs) BatchAccountIdentityPtrInput {
	return (*batchAccountIdentityPtrType)(v)
}

func (*batchAccountIdentityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BatchAccountIdentity)(nil)).Elem()
}

func (i *batchAccountIdentityPtrType) ToBatchAccountIdentityPtrOutput() BatchAccountIdentityPtrOutput {
	return i.ToBatchAccountIdentityPtrOutputWithContext(context.Background())
}

func (i *batchAccountIdentityPtrType) ToBatchAccountIdentityPtrOutputWithContext(ctx context.Context) BatchAccountIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BatchAccountIdentityPtrOutput)
}

// The identity of the Batch account, if configured. This is used when the user specifies 'Microsoft.KeyVault' as their Batch account encryption configuration or when `ManagedIdentity` is selected as the auto-storage authentication mode.
type BatchAccountIdentityOutput struct{ *pulumi.OutputState }

func (BatchAccountIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BatchAccountIdentity)(nil)).Elem()
}

func (o BatchAccountIdentityOutput) ToBatchAccountIdentityOutput() BatchAccountIdentityOutput {
	return o
}

func (o BatchAccountIdentityOutput) ToBatchAccountIdentityOutputWithContext(ctx context.Context) BatchAccountIdentityOutput {
	return o
}

func (o BatchAccountIdentityOutput) ToBatchAccountIdentityPtrOutput() BatchAccountIdentityPtrOutput {
	return o.ToBatchAccountIdentityPtrOutputWithContext(context.Background())
}

func (o BatchAccountIdentityOutput) ToBatchAccountIdentityPtrOutputWithContext(ctx context.Context) BatchAccountIdentityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BatchAccountIdentity) *BatchAccountIdentity {
		return &v
	}).(BatchAccountIdentityPtrOutput)
}

// The type of identity used for the Batch account.
func (o BatchAccountIdentityOutput) Type() ResourceIdentityTypeOutput {
	return o.ApplyT(func(v BatchAccountIdentity) ResourceIdentityType { return v.Type }).(ResourceIdentityTypeOutput)
}

// The list of user identities associated with the Batch account.
func (o BatchAccountIdentityOutput) UserAssignedIdentities() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BatchAccountIdentity) []string { return v.UserAssignedIdentities }).(pulumi.StringArrayOutput)
}

type BatchAccountIdentityPtrOutput struct{ *pulumi.OutputState }

func (BatchAccountIdentityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BatchAccountIdentity)(nil)).Elem()
}

func (o BatchAccountIdentityPtrOutput) ToBatchAccountIdentityPtrOutput() BatchAccountIdentityPtrOutput {
	return o
}

func (o BatchAccountIdentityPtrOutput) ToBatchAccountIdentityPtrOutputWithContext(ctx context.Context) BatchAccountIdentityPtrOutput {
	return o
}

func (o BatchAccountIdentityPtrOutput) Elem() BatchAccountIdentityOutput {
	return o.ApplyT(func(v *BatchAccountIdentity) BatchAccountIdentity {
		if v != nil {
			return *v
		}
		var ret BatchAccountIdentity
		return ret
	}).(BatchAccountIdentityOutput)
}

// The type of identity used for the Batch account.
func (o BatchAccountIdentityPtrOutput) Type() ResourceIdentityTypePtrOutput {
	return o.ApplyT(func(v *BatchAccountIdentity) *ResourceIdentityType {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(ResourceIdentityTypePtrOutput)
}

// The list of user identities associated with the Batch account.
func (o BatchAccountIdentityPtrOutput) UserAssignedIdentities() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *BatchAccountIdentity) []string {
		if v == nil {
			return nil
		}
		return v.UserAssignedIdentities
	}).(pulumi.StringArrayOutput)
}

// The identity of the Batch account, if configured. This is used when the user specifies 'Microsoft.KeyVault' as their Batch account encryption configuration or when `ManagedIdentity` is selected as the auto-storage authentication mode.
type BatchAccountIdentityResponse struct {
	// The principal id of the Batch account. This property will only be provided for a system assigned identity.
	PrincipalId string `pulumi:"principalId"`
	// The tenant id associated with the Batch account. This property will only be provided for a system assigned identity.
	TenantId string `pulumi:"tenantId"`
	// The type of identity used for the Batch account.
	Type string `pulumi:"type"`
	// The list of user identities associated with the Batch account.
	UserAssignedIdentities map[string]UserAssignedIdentitiesResponse `pulumi:"userAssignedIdentities"`
}

// The identity of the Batch account, if configured. This is used when the user specifies 'Microsoft.KeyVault' as their Batch account encryption configuration or when `ManagedIdentity` is selected as the auto-storage authentication mode.
type BatchAccountIdentityResponseOutput struct{ *pulumi.OutputState }

func (BatchAccountIdentityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BatchAccountIdentityResponse)(nil)).Elem()
}

func (o BatchAccountIdentityResponseOutput) ToBatchAccountIdentityResponseOutput() BatchAccountIdentityResponseOutput {
	return o
}

func (o BatchAccountIdentityResponseOutput) ToBatchAccountIdentityResponseOutputWithContext(ctx context.Context) BatchAccountIdentityResponseOutput {
	return o
}

// The principal id of the Batch account. This property will only be provided for a system assigned identity.
func (o BatchAccountIdentityResponseOutput) PrincipalId() pulumi.StringOutput {
	return o.ApplyT(func(v BatchAccountIdentityResponse) string { return v.PrincipalId }).(pulumi.StringOutput)
}

// The tenant id associated with the Batch account. This property will only be provided for a system assigned identity.
func (o BatchAccountIdentityResponseOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v BatchAccountIdentityResponse) string { return v.TenantId }).(pulumi.StringOutput)
}

// The type of identity used for the Batch account.
func (o BatchAccountIdentityResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v BatchAccountIdentityResponse) string { return v.Type }).(pulumi.StringOutput)
}

// The list of user identities associated with the Batch account.
func (o BatchAccountIdentityResponseOutput) UserAssignedIdentities() UserAssignedIdentitiesResponseMapOutput {
	return o.ApplyT(func(v BatchAccountIdentityResponse) map[string]UserAssignedIdentitiesResponse {
		return v.UserAssignedIdentities
	}).(UserAssignedIdentitiesResponseMapOutput)
}

type BatchAccountIdentityResponsePtrOutput struct{ *pulumi.OutputState }

func (BatchAccountIdentityResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BatchAccountIdentityResponse)(nil)).Elem()
}

func (o BatchAccountIdentityResponsePtrOutput) ToBatchAccountIdentityResponsePtrOutput() BatchAccountIdentityResponsePtrOutput {
	return o
}

func (o BatchAccountIdentityResponsePtrOutput) ToBatchAccountIdentityResponsePtrOutputWithContext(ctx context.Context) BatchAccountIdentityResponsePtrOutput {
	return o
}

func (o BatchAccountIdentityResponsePtrOutput) Elem() BatchAccountIdentityResponseOutput {
	return o.ApplyT(func(v *BatchAccountIdentityResponse) BatchAccountIdentityResponse {
		if v != nil {
			return *v
		}
		var ret BatchAccountIdentityResponse
		return ret
	}).(BatchAccountIdentityResponseOutput)
}

// The principal id of the Batch account. This property will only be provided for a system assigned identity.
func (o BatchAccountIdentityResponsePtrOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BatchAccountIdentityResponse) *string {
		if v == nil {
			return nil
		}
		return &v.PrincipalId
	}).(pulumi.StringPtrOutput)
}

// The tenant id associated with the Batch account. This property will only be provided for a system assigned identity.
func (o BatchAccountIdentityResponsePtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BatchAccountIdentityResponse) *string {
		if v == nil {
			return nil
		}
		return &v.TenantId
	}).(pulumi.StringPtrOutput)
}

// The type of identity used for the Batch account.
func (o BatchAccountIdentityResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BatchAccountIdentityResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// The list of user identities associated with the Batch account.
func (o BatchAccountIdentityResponsePtrOutput) UserAssignedIdentities() UserAssignedIdentitiesResponseMapOutput {
	return o.ApplyT(func(v *BatchAccountIdentityResponse) map[string]UserAssignedIdentitiesResponse {
		if v == nil {
			return nil
		}
		return v.UserAssignedIdentities
	}).(UserAssignedIdentitiesResponseMapOutput)
}

// The reference to a user assigned identity associated with the Batch pool which a compute node will use.
type ComputeNodeIdentityReference struct {
	// The ARM resource id of the user assigned identity.
	ResourceId *string `pulumi:"resourceId"`
}

// ComputeNodeIdentityReferenceInput is an input type that accepts ComputeNodeIdentityReferenceArgs and ComputeNodeIdentityReferenceOutput values.
// You can construct a concrete instance of `ComputeNodeIdentityReferenceInput` via:
//
//	ComputeNodeIdentityReferenceArgs{...}
type ComputeNodeIdentityReferenceInput interface {
	pulumi.Input

	ToComputeNodeIdentityReferenceOutput() ComputeNodeIdentityReferenceOutput
	ToComputeNodeIdentityReferenceOutputWithContext(context.Context) ComputeNodeIdentityReferenceOutput
}

// The reference to a user assigned identity associated with the Batch pool which a compute node will use.
type ComputeNodeIdentityReferenceArgs struct {
	// The ARM resource id of the user assigned identity.
	ResourceId pulumi.StringPtrInput `pulumi:"resourceId"`
}

func (ComputeNodeIdentityReferenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ComputeNodeIdentityReference)(nil)).Elem()
}

func (i ComputeNodeIdentityReferenceArgs) ToComputeNodeIdentityReferenceOutput() ComputeNodeIdentityReferenceOutput {
	return i.ToComputeNodeIdentityReferenceOutputWithContext(context.Background())
}

func (i ComputeNodeIdentityReferenceArgs) ToComputeNodeIdentityReferenceOutputWithContext(ctx context.Context) ComputeNodeIdentityReferenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeNodeIdentityReferenceOutput)
}

func (i ComputeNodeIdentityReferenceArgs) ToComputeNodeIdentityReferencePtrOutput() ComputeNodeIdentityReferencePtrOutput {
	return i.ToComputeNodeIdentityReferencePtrOutputWithContext(context.Background())
}

func (i ComputeNodeIdentityReferenceArgs) ToComputeNodeIdentityReferencePtrOutputWithContext(ctx context.Context) ComputeNodeIdentityReferencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeNodeIdentityReferenceOutput).ToComputeNodeIdentityReferencePtrOutputWithContext(ctx)
}

// ComputeNodeIdentityReferencePtrInput is an input type that accepts ComputeNodeIdentityReferenceArgs, ComputeNodeIdentityReferencePtr and ComputeNodeIdentityReferencePtrOutput values.
// You can construct a concrete instance of `ComputeNodeIdentityReferencePtrInput` via:
//
//	        ComputeNodeIdentityReferenceArgs{...}
//
//	or:
//
//	        nil
type ComputeNodeIdentityReferencePtrInput interface {
	pulumi.Input

	ToComputeNodeIdentityReferencePtrOutput() ComputeNodeIdentityReferencePtrOutput
	ToComputeNodeIdentityReferencePtrOutputWithContext(context.Context) ComputeNodeIdentityReferencePtrOutput
}

type computeNodeIdentityReferencePtrType ComputeNodeIdentityReferenceArgs

func ComputeNodeIdentityReferencePtr(v *ComputeNodeIdentityReferenceArgs) ComputeNodeIdentityReferencePtrInput {
	return (*computeNodeIdentityReferencePtrType)(v)
}

func (*computeNodeIdentityReferencePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeNodeIdentityReference)(nil)).Elem()
}

func (i *computeNodeIdentityReferencePtrType) ToComputeNodeIdentityReferencePtrOutput() ComputeNodeIdentityReferencePtrOutput {
	return i.ToComputeNodeIdentityReferencePtrOutputWithContext(context.Background())
}

func (i *computeNodeIdentityReferencePtrType) ToComputeNodeIdentityReferencePtrOutputWithContext(ctx context.Context) ComputeNodeIdentityReferencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeNodeIdentityReferencePtrOutput)
}

// The reference to a user assigned identity associated with the Batch pool which a compute node will use.
type ComputeNodeIdentityReferenceOutput struct{ *pulumi.OutputState }

func (ComputeNodeIdentityReferenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ComputeNodeIdentityReference)(nil)).Elem()
}

func (o ComputeNodeIdentityReferenceOutput) ToComputeNodeIdentityReferenceOutput() ComputeNodeIdentityReferenceOutput {
	return o
}

func (o ComputeNodeIdentityReferenceOutput) ToComputeNodeIdentityReferenceOutputWithContext(ctx context.Context) ComputeNodeIdentityReferenceOutput {
	return o
}

func (o ComputeNodeIdentityReferenceOutput) ToComputeNodeIdentityReferencePtrOutput() ComputeNodeIdentityReferencePtrOutput {
	return o.ToComputeNodeIdentityReferencePtrOutputWithContext(context.Background())
}

func (o ComputeNodeIdentityReferenceOutput) ToComputeNodeIdentityReferencePtrOutputWithContext(ctx context.Context) ComputeNodeIdentityReferencePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ComputeNodeIdentityReference) *ComputeNodeIdentityReference {
		return &v
	}).(ComputeNodeIdentityReferencePtrOutput)
}

// The ARM resource id of the user assigned identity.
func (o ComputeNodeIdentityReferenceOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComputeNodeIdentityReference) *string { return v.ResourceId }).(pulumi.StringPtrOutput)
}

type ComputeNodeIdentityReferencePtrOutput struct{ *pulumi.OutputState }

func (ComputeNodeIdentityReferencePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeNodeIdentityReference)(nil)).Elem()
}

func (o ComputeNodeIdentityReferencePtrOutput) ToComputeNodeIdentityReferencePtrOutput() ComputeNodeIdentityReferencePtrOutput {
	return o
}

func (o ComputeNodeIdentityReferencePtrOutput) ToComputeNodeIdentityReferencePtrOutputWithContext(ctx context.Context) ComputeNodeIdentityReferencePtrOutput {
	return o
}

func (o ComputeNodeIdentityReferencePtrOutput) Elem() ComputeNodeIdentityReferenceOutput {
	return o.ApplyT(func(v *ComputeNodeIdentityReference) ComputeNodeIdentityReference {
		if v != nil {
			return *v
		}
		var ret ComputeNodeIdentityReference
		return ret
	}).(ComputeNodeIdentityReferenceOutput)
}

// The ARM resource id of the user assigned identity.
func (o ComputeNodeIdentityReferencePtrOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComputeNodeIdentityReference) *string {
		if v == nil {
			return nil
		}
		return v.ResourceId
	}).(pulumi.StringPtrOutput)
}

// The reference to a user assigned identity associated with the Batch pool which a compute node will use.
type ComputeNodeIdentityReferenceResponse struct {
	// The ARM resource id of the user assigned identity.
	ResourceId *string `pulumi:"resourceId"`
}

// The reference to a user assigned identity associated with the Batch pool which a compute node will use.
type ComputeNodeIdentityReferenceResponseOutput struct{ *pulumi.OutputState }

func (ComputeNodeIdentityReferenceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ComputeNodeIdentityReferenceResponse)(nil)).Elem()
}

func (o ComputeNodeIdentityReferenceResponseOutput) ToComputeNodeIdentityReferenceResponseOutput() ComputeNodeIdentityReferenceResponseOutput {
	return o
}

func (o ComputeNodeIdentityReferenceResponseOutput) ToComputeNodeIdentityReferenceResponseOutputWithContext(ctx context.Context) ComputeNodeIdentityReferenceResponseOutput {
	return o
}

// The ARM resource id of the user assigned identity.
func (o ComputeNodeIdentityReferenceResponseOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComputeNodeIdentityReferenceResponse) *string { return v.ResourceId }).(pulumi.StringPtrOutput)
}

type ComputeNodeIdentityReferenceResponsePtrOutput struct{ *pulumi.OutputState }

func (ComputeNodeIdentityReferenceResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeNodeIdentityReferenceResponse)(nil)).Elem()
}

func (o ComputeNodeIdentityReferenceResponsePtrOutput) ToComputeNodeIdentityReferenceResponsePtrOutput() ComputeNodeIdentityReferenceResponsePtrOutput {
	return o
}

func (o ComputeNodeIdentityReferenceResponsePtrOutput) ToComputeNodeIdentityReferenceResponsePtrOutputWithContext(ctx context.Context) ComputeNodeIdentityReferenceResponsePtrOutput {
	return o
}

func (o ComputeNodeIdentityReferenceResponsePtrOutput) Elem() ComputeNodeIdentityReferenceResponseOutput {
	return o.ApplyT(func(v *ComputeNodeIdentityReferenceResponse) ComputeNodeIdentityReferenceResponse {
		if v != nil {
			return *v
		}
		var ret ComputeNodeIdentityReferenceResponse
		return ret
	}).(ComputeNodeIdentityReferenceResponseOutput)
}

// The ARM resource id of the user assigned identity.
func (o ComputeNodeIdentityReferenceResponsePtrOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComputeNodeIdentityReferenceResponse) *string {
		if v == nil {
			return nil
		}
		return v.ResourceId
	}).(pulumi.StringPtrOutput)
}

// Configures how customer data is encrypted inside the Batch account. By default, accounts are encrypted using a Microsoft managed key. For additional control, a customer-managed key can be used instead.
type EncryptionProperties struct {
	// Type of the key source.
	KeySource *KeySource `pulumi:"keySource"`
	// Additional details when using Microsoft.KeyVault
	KeyVaultProperties *KeyVaultProperties `pulumi:"keyVaultProperties"`
}

// EncryptionPropertiesInput is an input type that accepts EncryptionPropertiesArgs and EncryptionPropertiesOutput values.
// You can construct a concrete instance of `EncryptionPropertiesInput` via:
//
//	EncryptionPropertiesArgs{...}
type EncryptionPropertiesInput interface {
	pulumi.Input

	ToEncryptionPropertiesOutput() EncryptionPropertiesOutput
	ToEncryptionPropertiesOutputWithContext(context.Context) EncryptionPropertiesOutput
}

// Configures how customer data is encrypted inside the Batch account. By default, accounts are encrypted using a Microsoft managed key. For additional control, a customer-managed key can be used instead.
type EncryptionPropertiesArgs struct {
	// Type of the key source.
	KeySource KeySourcePtrInput `pulumi:"keySource"`
	// Additional details when using Microsoft.KeyVault
	KeyVaultProperties KeyVaultPropertiesPtrInput `pulumi:"keyVaultProperties"`
}

func (EncryptionPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EncryptionProperties)(nil)).Elem()
}

func (i EncryptionPropertiesArgs) ToEncryptionPropertiesOutput() EncryptionPropertiesOutput {
	return i.ToEncryptionPropertiesOutputWithContext(context.Background())
}

func (i EncryptionPropertiesArgs) ToEncryptionPropertiesOutputWithContext(ctx context.Context) EncryptionPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncryptionPropertiesOutput)
}

func (i EncryptionPropertiesArgs) ToEncryptionPropertiesPtrOutput() EncryptionPropertiesPtrOutput {
	return i.ToEncryptionPropertiesPtrOutputWithContext(context.Background())
}

func (i EncryptionPropertiesArgs) ToEncryptionPropertiesPtrOutputWithContext(ctx context.Context) EncryptionPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncryptionPropertiesOutput).ToEncryptionPropertiesPtrOutputWithContext(ctx)
}

// EncryptionPropertiesPtrInput is an input type that accepts EncryptionPropertiesArgs, EncryptionPropertiesPtr and EncryptionPropertiesPtrOutput values.
// You can construct a concrete instance of `EncryptionPropertiesPtrInput` via:
//
//	        EncryptionPropertiesArgs{...}
//
//	or:
//
//	        nil
type EncryptionPropertiesPtrInput interface {
	pulumi.Input

	ToEncryptionPropertiesPtrOutput() EncryptionPropertiesPtrOutput
	ToEncryptionPropertiesPtrOutputWithContext(context.Context) EncryptionPropertiesPtrOutput
}

type encryptionPropertiesPtrType EncryptionPropertiesArgs

func EncryptionPropertiesPtr(v *EncryptionPropertiesArgs) EncryptionPropertiesPtrInput {
	return (*encryptionPropertiesPtrType)(v)
}

func (*encryptionPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EncryptionProperties)(nil)).Elem()
}

func (i *encryptionPropertiesPtrType) ToEncryptionPropertiesPtrOutput() EncryptionPropertiesPtrOutput {
	return i.ToEncryptionPropertiesPtrOutputWithContext(context.Background())
}

func (i *encryptionPropertiesPtrType) ToEncryptionPropertiesPtrOutputWithContext(ctx context.Context) EncryptionPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncryptionPropertiesPtrOutput)
}

// Configures how customer data is encrypted inside the Batch account. By default, accounts are encrypted using a Microsoft managed key. For additional control, a customer-managed key can be used instead.
type EncryptionPropertiesOutput struct{ *pulumi.OutputState }

func (EncryptionPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EncryptionProperties)(nil)).Elem()
}

func (o EncryptionPropertiesOutput) ToEncryptionPropertiesOutput() EncryptionPropertiesOutput {
	return o
}

func (o EncryptionPropertiesOutput) ToEncryptionPropertiesOutputWithContext(ctx context.Context) EncryptionPropertiesOutput {
	return o
}

func (o EncryptionPropertiesOutput) ToEncryptionPropertiesPtrOutput() EncryptionPropertiesPtrOutput {
	return o.ToEncryptionPropertiesPtrOutputWithContext(context.Background())
}

func (o EncryptionPropertiesOutput) ToEncryptionPropertiesPtrOutputWithContext(ctx context.Context) EncryptionPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EncryptionProperties) *EncryptionProperties {
		return &v
	}).(EncryptionPropertiesPtrOutput)
}

// Type of the key source.
func (o EncryptionPropertiesOutput) KeySource() KeySourcePtrOutput {
	return o.ApplyT(func(v EncryptionProperties) *KeySource { return v.KeySource }).(KeySourcePtrOutput)
}

// Additional details when using Microsoft.KeyVault
func (o EncryptionPropertiesOutput) KeyVaultProperties() KeyVaultPropertiesPtrOutput {
	return o.ApplyT(func(v EncryptionProperties) *KeyVaultProperties { return v.KeyVaultProperties }).(KeyVaultPropertiesPtrOutput)
}

type EncryptionPropertiesPtrOutput struct{ *pulumi.OutputState }

func (EncryptionPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EncryptionProperties)(nil)).Elem()
}

func (o EncryptionPropertiesPtrOutput) ToEncryptionPropertiesPtrOutput() EncryptionPropertiesPtrOutput {
	return o
}

func (o EncryptionPropertiesPtrOutput) ToEncryptionPropertiesPtrOutputWithContext(ctx context.Context) EncryptionPropertiesPtrOutput {
	return o
}

func (o EncryptionPropertiesPtrOutput) Elem() EncryptionPropertiesOutput {
	return o.ApplyT(func(v *EncryptionProperties) EncryptionProperties {
		if v != nil {
			return *v
		}
		var ret EncryptionProperties
		return ret
	}).(EncryptionPropertiesOutput)
}

// Type of the key source.
func (o EncryptionPropertiesPtrOutput) KeySource() KeySourcePtrOutput {
	return o.ApplyT(func(v *EncryptionProperties) *KeySource {
		if v == nil {
			return nil
		}
		return v.KeySource
	}).(KeySourcePtrOutput)
}

// Additional details when using Microsoft.KeyVault
func (o EncryptionPropertiesPtrOutput) KeyVaultProperties() KeyVaultPropertiesPtrOutput {
	return o.ApplyT(func(v *EncryptionProperties) *KeyVaultProperties {
		if v == nil {
			return nil
		}
		return v.KeyVaultProperties
	}).(KeyVaultPropertiesPtrOutput)
}

// Configures how customer data is encrypted inside the Batch account. By default, accounts are encrypted using a Microsoft managed key. For additional control, a customer-managed key can be used instead.
type EncryptionPropertiesResponse struct {
	// Type of the key source.
	KeySource *string `pulumi:"keySource"`
	// Additional details when using Microsoft.KeyVault
	KeyVaultProperties *KeyVaultPropertiesResponse `pulumi:"keyVaultProperties"`
}

// Configures how customer data is encrypted inside the Batch account. By default, accounts are encrypted using a Microsoft managed key. For additional control, a customer-managed key can be used instead.
type EncryptionPropertiesResponseOutput struct{ *pulumi.OutputState }

func (EncryptionPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EncryptionPropertiesResponse)(nil)).Elem()
}

func (o EncryptionPropertiesResponseOutput) ToEncryptionPropertiesResponseOutput() EncryptionPropertiesResponseOutput {
	return o
}

func (o EncryptionPropertiesResponseOutput) ToEncryptionPropertiesResponseOutputWithContext(ctx context.Context) EncryptionPropertiesResponseOutput {
	return o
}

// Type of the key source.
func (o EncryptionPropertiesResponseOutput) KeySource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EncryptionPropertiesResponse) *string { return v.KeySource }).(pulumi.StringPtrOutput)
}

// Additional details when using Microsoft.KeyVault
func (o EncryptionPropertiesResponseOutput) KeyVaultProperties() KeyVaultPropertiesResponsePtrOutput {
	return o.ApplyT(func(v EncryptionPropertiesResponse) *KeyVaultPropertiesResponse { return v.KeyVaultProperties }).(KeyVaultPropertiesResponsePtrOutput)
}

// KeyVault configuration when using an encryption KeySource of Microsoft.KeyVault.
type KeyVaultProperties struct {
	// Full path to the versioned secret. Example https://mykeyvault.vault.azure.net/keys/testkey/6e34a81fef704045975661e297a4c053. To be usable the following prerequisites must be met:
	//
	//  The Batch Account has a System Assigned identity
	//  The account identity has been granted Key/Get, Key/Unwrap and Key/Wrap permissions
	//  The KeyVault has soft-delete and purge protection enabled
	KeyIdentifier *string `pulumi:"keyIdentifier"`
}

// KeyVaultPropertiesInput is an input type that accepts KeyVaultPropertiesArgs and KeyVaultPropertiesOutput values.
// You can construct a concrete instance of `KeyVaultPropertiesInput` via:
//
//	KeyVaultPropertiesArgs{...}
type KeyVaultPropertiesInput interface {
	pulumi.Input

	ToKeyVaultPropertiesOutput() KeyVaultPropertiesOutput
	ToKeyVaultPropertiesOutputWithContext(context.Context) KeyVaultPropertiesOutput
}

// KeyVault configuration when using an encryption KeySource of Microsoft.KeyVault.
type KeyVaultPropertiesArgs struct {
	// Full path to the versioned secret. Example https://mykeyvault.vault.azure.net/keys/testkey/6e34a81fef704045975661e297a4c053. To be usable the following prerequisites must be met:
	//
	//  The Batch Account has a System Assigned identity
	//  The account identity has been granted Key/Get, Key/Unwrap and Key/Wrap permissions
	//  The KeyVault has soft-delete and purge protection enabled
	KeyIdentifier pulumi.StringPtrInput `pulumi:"keyIdentifier"`
}

func (KeyVaultPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KeyVaultProperties)(nil)).Elem()
}

func (i KeyVaultPropertiesArgs) ToKeyVaultPropertiesOutput() KeyVaultPropertiesOutput {
	return i.ToKeyVaultPropertiesOutputWithContext(context.Background())
}

func (i KeyVaultPropertiesArgs) ToKeyVaultPropertiesOutputWithContext(ctx context.Context) KeyVaultPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeyVaultPropertiesOutput)
}

func (i KeyVaultPropertiesArgs) ToKeyVaultPropertiesPtrOutput() KeyVaultPropertiesPtrOutput {
	return i.ToKeyVaultPropertiesPtrOutputWithContext(context.Background())
}

func (i KeyVaultPropertiesArgs) ToKeyVaultPropertiesPtrOutputWithContext(ctx context.Context) KeyVaultPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeyVaultPropertiesOutput).ToKeyVaultPropertiesPtrOutputWithContext(ctx)
}

// KeyVaultPropertiesPtrInput is an input type that accepts KeyVaultPropertiesArgs, KeyVaultPropertiesPtr and KeyVaultPropertiesPtrOutput values.
// You can construct a concrete instance of `KeyVaultPropertiesPtrInput` via:
//
//	        KeyVaultPropertiesArgs{...}
//
//	or:
//
//	        nil
type KeyVaultPropertiesPtrInput interface {
	pulumi.Input

	ToKeyVaultPropertiesPtrOutput() KeyVaultPropertiesPtrOutput
	ToKeyVaultPropertiesPtrOutputWithContext(context.Context) KeyVaultPropertiesPtrOutput
}

type keyVaultPropertiesPtrType KeyVaultPropertiesArgs

func KeyVaultPropertiesPtr(v *KeyVaultPropertiesArgs) KeyVaultPropertiesPtrInput {
	return (*keyVaultPropertiesPtrType)(v)
}

func (*keyVaultPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KeyVaultProperties)(nil)).Elem()
}

func (i *keyVaultPropertiesPtrType) ToKeyVaultPropertiesPtrOutput() KeyVaultPropertiesPtrOutput {
	return i.ToKeyVaultPropertiesPtrOutputWithContext(context.Background())
}

func (i *keyVaultPropertiesPtrType) ToKeyVaultPropertiesPtrOutputWithContext(ctx context.Context) KeyVaultPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeyVaultPropertiesPtrOutput)
}

// KeyVault configuration when using an encryption KeySource of Microsoft.KeyVault.
type KeyVaultPropertiesOutput struct{ *pulumi.OutputState }

func (KeyVaultPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KeyVaultProperties)(nil)).Elem()
}

func (o KeyVaultPropertiesOutput) ToKeyVaultPropertiesOutput() KeyVaultPropertiesOutput {
	return o
}

func (o KeyVaultPropertiesOutput) ToKeyVaultPropertiesOutputWithContext(ctx context.Context) KeyVaultPropertiesOutput {
	return o
}

func (o KeyVaultPropertiesOutput) ToKeyVaultPropertiesPtrOutput() KeyVaultPropertiesPtrOutput {
	return o.ToKeyVaultPropertiesPtrOutputWithContext(context.Background())
}

func (o KeyVaultPropertiesOutput) ToKeyVaultPropertiesPtrOutputWithContext(ctx context.Context) KeyVaultPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KeyVaultProperties) *KeyVaultProperties {
		return &v
	}).(KeyVaultPropertiesPtrOutput)
}

// Full path to the versioned secret. Example https://mykeyvault.vault.azure.net/keys/testkey/6e34a81fef704045975661e297a4c053. To be usable the following prerequisites must be met:
//
//	The Batch Account has a System Assigned identity
//	The account identity has been granted Key/Get, Key/Unwrap and Key/Wrap permissions
//	The KeyVault has soft-delete and purge protection enabled
func (o KeyVaultPropertiesOutput) KeyIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KeyVaultProperties) *string { return v.KeyIdentifier }).(pulumi.StringPtrOutput)
}

type KeyVaultPropertiesPtrOutput struct{ *pulumi.OutputState }

func (KeyVaultPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KeyVaultProperties)(nil)).Elem()
}

func (o KeyVaultPropertiesPtrOutput) ToKeyVaultPropertiesPtrOutput() KeyVaultPropertiesPtrOutput {
	return o
}

func (o KeyVaultPropertiesPtrOutput) ToKeyVaultPropertiesPtrOutputWithContext(ctx context.Context) KeyVaultPropertiesPtrOutput {
	return o
}

func (o KeyVaultPropertiesPtrOutput) Elem() KeyVaultPropertiesOutput {
	return o.ApplyT(func(v *KeyVaultProperties) KeyVaultProperties {
		if v != nil {
			return *v
		}
		var ret KeyVaultProperties
		return ret
	}).(KeyVaultPropertiesOutput)
}

// Full path to the versioned secret. Example https://mykeyvault.vault.azure.net/keys/testkey/6e34a81fef704045975661e297a4c053. To be usable the following prerequisites must be met:
//
//	The Batch Account has a System Assigned identity
//	The account identity has been granted Key/Get, Key/Unwrap and Key/Wrap permissions
//	The KeyVault has soft-delete and purge protection enabled
func (o KeyVaultPropertiesPtrOutput) KeyIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KeyVaultProperties) *string {
		if v == nil {
			return nil
		}
		return v.KeyIdentifier
	}).(pulumi.StringPtrOutput)
}

// KeyVault configuration when using an encryption KeySource of Microsoft.KeyVault.
type KeyVaultPropertiesResponse struct {
	// Full path to the versioned secret. Example https://mykeyvault.vault.azure.net/keys/testkey/6e34a81fef704045975661e297a4c053. To be usable the following prerequisites must be met:
	//
	//  The Batch Account has a System Assigned identity
	//  The account identity has been granted Key/Get, Key/Unwrap and Key/Wrap permissions
	//  The KeyVault has soft-delete and purge protection enabled
	KeyIdentifier *string `pulumi:"keyIdentifier"`
}

// KeyVault configuration when using an encryption KeySource of Microsoft.KeyVault.
type KeyVaultPropertiesResponseOutput struct{ *pulumi.OutputState }

func (KeyVaultPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KeyVaultPropertiesResponse)(nil)).Elem()
}

func (o KeyVaultPropertiesResponseOutput) ToKeyVaultPropertiesResponseOutput() KeyVaultPropertiesResponseOutput {
	return o
}

func (o KeyVaultPropertiesResponseOutput) ToKeyVaultPropertiesResponseOutputWithContext(ctx context.Context) KeyVaultPropertiesResponseOutput {
	return o
}

// Full path to the versioned secret. Example https://mykeyvault.vault.azure.net/keys/testkey/6e34a81fef704045975661e297a4c053. To be usable the following prerequisites must be met:
//
//	The Batch Account has a System Assigned identity
//	The account identity has been granted Key/Get, Key/Unwrap and Key/Wrap permissions
//	The KeyVault has soft-delete and purge protection enabled
func (o KeyVaultPropertiesResponseOutput) KeyIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KeyVaultPropertiesResponse) *string { return v.KeyIdentifier }).(pulumi.StringPtrOutput)
}

type KeyVaultPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (KeyVaultPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KeyVaultPropertiesResponse)(nil)).Elem()
}

func (o KeyVaultPropertiesResponsePtrOutput) ToKeyVaultPropertiesResponsePtrOutput() KeyVaultPropertiesResponsePtrOutput {
	return o
}

func (o KeyVaultPropertiesResponsePtrOutput) ToKeyVaultPropertiesResponsePtrOutputWithContext(ctx context.Context) KeyVaultPropertiesResponsePtrOutput {
	return o
}

func (o KeyVaultPropertiesResponsePtrOutput) Elem() KeyVaultPropertiesResponseOutput {
	return o.ApplyT(func(v *KeyVaultPropertiesResponse) KeyVaultPropertiesResponse {
		if v != nil {
			return *v
		}
		var ret KeyVaultPropertiesResponse
		return ret
	}).(KeyVaultPropertiesResponseOutput)
}

// Full path to the versioned secret. Example https://mykeyvault.vault.azure.net/keys/testkey/6e34a81fef704045975661e297a4c053. To be usable the following prerequisites must be met:
//
//	The Batch Account has a System Assigned identity
//	The account identity has been granted Key/Get, Key/Unwrap and Key/Wrap permissions
//	The KeyVault has soft-delete and purge protection enabled
func (o KeyVaultPropertiesResponsePtrOutput) KeyIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KeyVaultPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.KeyIdentifier
	}).(pulumi.StringPtrOutput)
}

// Identifies the Azure key vault associated with a Batch account.
type KeyVaultReference struct {
	// The resource ID of the Azure key vault associated with the Batch account.
	Id string `pulumi:"id"`
	// The URL of the Azure key vault associated with the Batch account.
	Url string `pulumi:"url"`
}

// KeyVaultReferenceInput is an input type that accepts KeyVaultReferenceArgs and KeyVaultReferenceOutput values.
// You can construct a concrete instance of `KeyVaultReferenceInput` via:
//
//	KeyVaultReferenceArgs{...}
type KeyVaultReferenceInput interface {
	pulumi.Input

	ToKeyVaultReferenceOutput() KeyVaultReferenceOutput
	ToKeyVaultReferenceOutputWithContext(context.Context) KeyVaultReferenceOutput
}

// Identifies the Azure key vault associated with a Batch account.
type KeyVaultReferenceArgs struct {
	// The resource ID of the Azure key vault associated with the Batch account.
	Id pulumi.StringInput `pulumi:"id"`
	// The URL of the Azure key vault associated with the Batch account.
	Url pulumi.StringInput `pulumi:"url"`
}

func (KeyVaultReferenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KeyVaultReference)(nil)).Elem()
}

func (i KeyVaultReferenceArgs) ToKeyVaultReferenceOutput() KeyVaultReferenceOutput {
	return i.ToKeyVaultReferenceOutputWithContext(context.Background())
}

func (i KeyVaultReferenceArgs) ToKeyVaultReferenceOutputWithContext(ctx context.Context) KeyVaultReferenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeyVaultReferenceOutput)
}

func (i KeyVaultReferenceArgs) ToKeyVaultReferencePtrOutput() KeyVaultReferencePtrOutput {
	return i.ToKeyVaultReferencePtrOutputWithContext(context.Background())
}

func (i KeyVaultReferenceArgs) ToKeyVaultReferencePtrOutputWithContext(ctx context.Context) KeyVaultReferencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeyVaultReferenceOutput).ToKeyVaultReferencePtrOutputWithContext(ctx)
}

// KeyVaultReferencePtrInput is an input type that accepts KeyVaultReferenceArgs, KeyVaultReferencePtr and KeyVaultReferencePtrOutput values.
// You can construct a concrete instance of `KeyVaultReferencePtrInput` via:
//
//	        KeyVaultReferenceArgs{...}
//
//	or:
//
//	        nil
type KeyVaultReferencePtrInput interface {
	pulumi.Input

	ToKeyVaultReferencePtrOutput() KeyVaultReferencePtrOutput
	ToKeyVaultReferencePtrOutputWithContext(context.Context) KeyVaultReferencePtrOutput
}

type keyVaultReferencePtrType KeyVaultReferenceArgs

func KeyVaultReferencePtr(v *KeyVaultReferenceArgs) KeyVaultReferencePtrInput {
	return (*keyVaultReferencePtrType)(v)
}

func (*keyVaultReferencePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KeyVaultReference)(nil)).Elem()
}

func (i *keyVaultReferencePtrType) ToKeyVaultReferencePtrOutput() KeyVaultReferencePtrOutput {
	return i.ToKeyVaultReferencePtrOutputWithContext(context.Background())
}

func (i *keyVaultReferencePtrType) ToKeyVaultReferencePtrOutputWithContext(ctx context.Context) KeyVaultReferencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeyVaultReferencePtrOutput)
}

// Identifies the Azure key vault associated with a Batch account.
type KeyVaultReferenceOutput struct{ *pulumi.OutputState }

func (KeyVaultReferenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KeyVaultReference)(nil)).Elem()
}

func (o KeyVaultReferenceOutput) ToKeyVaultReferenceOutput() KeyVaultReferenceOutput {
	return o
}

func (o KeyVaultReferenceOutput) ToKeyVaultReferenceOutputWithContext(ctx context.Context) KeyVaultReferenceOutput {
	return o
}

func (o KeyVaultReferenceOutput) ToKeyVaultReferencePtrOutput() KeyVaultReferencePtrOutput {
	return o.ToKeyVaultReferencePtrOutputWithContext(context.Background())
}

func (o KeyVaultReferenceOutput) ToKeyVaultReferencePtrOutputWithContext(ctx context.Context) KeyVaultReferencePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KeyVaultReference) *KeyVaultReference {
		return &v
	}).(KeyVaultReferencePtrOutput)
}

// The resource ID of the Azure key vault associated with the Batch account.
func (o KeyVaultReferenceOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v KeyVaultReference) string { return v.Id }).(pulumi.StringOutput)
}

// The URL of the Azure key vault associated with the Batch account.
func (o KeyVaultReferenceOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v KeyVaultReference) string { return v.Url }).(pulumi.StringOutput)
}

type KeyVaultReferencePtrOutput struct{ *pulumi.OutputState }

func (KeyVaultReferencePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KeyVaultReference)(nil)).Elem()
}

func (o KeyVaultReferencePtrOutput) ToKeyVaultReferencePtrOutput() KeyVaultReferencePtrOutput {
	return o
}

func (o KeyVaultReferencePtrOutput) ToKeyVaultReferencePtrOutputWithContext(ctx context.Context) KeyVaultReferencePtrOutput {
	return o
}

func (o KeyVaultReferencePtrOutput) Elem() KeyVaultReferenceOutput {
	return o.ApplyT(func(v *KeyVaultReference) KeyVaultReference {
		if v != nil {
			return *v
		}
		var ret KeyVaultReference
		return ret
	}).(KeyVaultReferenceOutput)
}

// The resource ID of the Azure key vault associated with the Batch account.
func (o KeyVaultReferencePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KeyVaultReference) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

// The URL of the Azure key vault associated with the Batch account.
func (o KeyVaultReferencePtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KeyVaultReference) *string {
		if v == nil {
			return nil
		}
		return &v.Url
	}).(pulumi.StringPtrOutput)
}

// Identifies the Azure key vault associated with a Batch account.
type KeyVaultReferenceResponse struct {
	// The resource ID of the Azure key vault associated with the Batch account.
	Id string `pulumi:"id"`
	// The URL of the Azure key vault associated with the Batch account.
	Url string `pulumi:"url"`
}

// Identifies the Azure key vault associated with a Batch account.
type KeyVaultReferenceResponseOutput struct{ *pulumi.OutputState }

func (KeyVaultReferenceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KeyVaultReferenceResponse)(nil)).Elem()
}

func (o KeyVaultReferenceResponseOutput) ToKeyVaultReferenceResponseOutput() KeyVaultReferenceResponseOutput {
	return o
}

func (o KeyVaultReferenceResponseOutput) ToKeyVaultReferenceResponseOutputWithContext(ctx context.Context) KeyVaultReferenceResponseOutput {
	return o
}

// The resource ID of the Azure key vault associated with the Batch account.
func (o KeyVaultReferenceResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v KeyVaultReferenceResponse) string { return v.Id }).(pulumi.StringOutput)
}

// The URL of the Azure key vault associated with the Batch account.
func (o KeyVaultReferenceResponseOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v KeyVaultReferenceResponse) string { return v.Url }).(pulumi.StringOutput)
}

// Contains information about a private link resource.
type PrivateEndpointConnectionResponse struct {
	// The ETag of the resource, used for concurrency statements.
	Etag string `pulumi:"etag"`
	// The ID of the resource.
	Id string `pulumi:"id"`
	// The name of the resource.
	Name string `pulumi:"name"`
	// The private endpoint of the private endpoint connection.
	PrivateEndpoint *PrivateEndpointResponse `pulumi:"privateEndpoint"`
	// The private link service connection state of the private endpoint connection
	PrivateLinkServiceConnectionState *PrivateLinkServiceConnectionStateResponse `pulumi:"privateLinkServiceConnectionState"`
	ProvisioningState                 string                                     `pulumi:"provisioningState"`
	// The type of the resource.
	Type string `pulumi:"type"`
}

// Contains information about a private link resource.
type PrivateEndpointConnectionResponseOutput struct{ *pulumi.OutputState }

func (PrivateEndpointConnectionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateEndpointConnectionResponse)(nil)).Elem()
}

func (o PrivateEndpointConnectionResponseOutput) ToPrivateEndpointConnectionResponseOutput() PrivateEndpointConnectionResponseOutput {
	return o
}

func (o PrivateEndpointConnectionResponseOutput) ToPrivateEndpointConnectionResponseOutputWithContext(ctx context.Context) PrivateEndpointConnectionResponseOutput {
	return o
}

// The ETag of the resource, used for concurrency statements.
func (o PrivateEndpointConnectionResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// The ID of the resource.
func (o PrivateEndpointConnectionResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionResponse) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the resource.
func (o PrivateEndpointConnectionResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The private endpoint of the private endpoint connection.
func (o PrivateEndpointConnectionResponseOutput) PrivateEndpoint() PrivateEndpointResponsePtrOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionResponse) *PrivateEndpointResponse { return v.PrivateEndpoint }).(PrivateEndpointResponsePtrOutput)
}

// The private link service connection state of the private endpoint connection
func (o PrivateEndpointConnectionResponseOutput) PrivateLinkServiceConnectionState() PrivateLinkServiceConnectionStateResponsePtrOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionResponse) *PrivateLinkServiceConnectionStateResponse {
		return v.PrivateLinkServiceConnectionState
	}).(PrivateLinkServiceConnectionStateResponsePtrOutput)
}

func (o PrivateEndpointConnectionResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The type of the resource.
func (o PrivateEndpointConnectionResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionResponse) string { return v.Type }).(pulumi.StringOutput)
}

type PrivateEndpointConnectionResponseArrayOutput struct{ *pulumi.OutputState }

func (PrivateEndpointConnectionResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PrivateEndpointConnectionResponse)(nil)).Elem()
}

func (o PrivateEndpointConnectionResponseArrayOutput) ToPrivateEndpointConnectionResponseArrayOutput() PrivateEndpointConnectionResponseArrayOutput {
	return o
}

func (o PrivateEndpointConnectionResponseArrayOutput) ToPrivateEndpointConnectionResponseArrayOutputWithContext(ctx context.Context) PrivateEndpointConnectionResponseArrayOutput {
	return o
}

func (o PrivateEndpointConnectionResponseArrayOutput) Index(i pulumi.IntInput) PrivateEndpointConnectionResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PrivateEndpointConnectionResponse {
		return vs[0].([]PrivateEndpointConnectionResponse)[vs[1].(int)]
	}).(PrivateEndpointConnectionResponseOutput)
}

// The private endpoint of the private endpoint connection.
type PrivateEndpointResponse struct {
	Id string `pulumi:"id"`
}

// The private endpoint of the private endpoint connection.
type PrivateEndpointResponseOutput struct{ *pulumi.OutputState }

func (PrivateEndpointResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateEndpointResponse)(nil)).Elem()
}

func (o PrivateEndpointResponseOutput) ToPrivateEndpointResponseOutput() PrivateEndpointResponseOutput {
	return o
}

func (o PrivateEndpointResponseOutput) ToPrivateEndpointResponseOutputWithContext(ctx context.Context) PrivateEndpointResponseOutput {
	return o
}

func (o PrivateEndpointResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateEndpointResponse) string { return v.Id }).(pulumi.StringOutput)
}

type PrivateEndpointResponsePtrOutput struct{ *pulumi.OutputState }

func (PrivateEndpointResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateEndpointResponse)(nil)).Elem()
}

func (o PrivateEndpointResponsePtrOutput) ToPrivateEndpointResponsePtrOutput() PrivateEndpointResponsePtrOutput {
	return o
}

func (o PrivateEndpointResponsePtrOutput) ToPrivateEndpointResponsePtrOutputWithContext(ctx context.Context) PrivateEndpointResponsePtrOutput {
	return o
}

func (o PrivateEndpointResponsePtrOutput) Elem() PrivateEndpointResponseOutput {
	return o.ApplyT(func(v *PrivateEndpointResponse) PrivateEndpointResponse {
		if v != nil {
			return *v
		}
		var ret PrivateEndpointResponse
		return ret
	}).(PrivateEndpointResponseOutput)
}

func (o PrivateEndpointResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateEndpointResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

// The private link service connection state of the private endpoint connection
type PrivateLinkServiceConnectionStateResponse struct {
	ActionRequired string  `pulumi:"actionRequired"`
	Description    *string `pulumi:"description"`
	Status         string  `pulumi:"status"`
}

// The private link service connection state of the private endpoint connection
type PrivateLinkServiceConnectionStateResponseOutput struct{ *pulumi.OutputState }

func (PrivateLinkServiceConnectionStateResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkServiceConnectionStateResponse)(nil)).Elem()
}

func (o PrivateLinkServiceConnectionStateResponseOutput) ToPrivateLinkServiceConnectionStateResponseOutput() PrivateLinkServiceConnectionStateResponseOutput {
	return o
}

func (o PrivateLinkServiceConnectionStateResponseOutput) ToPrivateLinkServiceConnectionStateResponseOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionStateResponseOutput {
	return o
}

func (o PrivateLinkServiceConnectionStateResponseOutput) ActionRequired() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnectionStateResponse) string { return v.ActionRequired }).(pulumi.StringOutput)
}

func (o PrivateLinkServiceConnectionStateResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnectionStateResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o PrivateLinkServiceConnectionStateResponseOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnectionStateResponse) string { return v.Status }).(pulumi.StringOutput)
}

type PrivateLinkServiceConnectionStateResponsePtrOutput struct{ *pulumi.OutputState }

func (PrivateLinkServiceConnectionStateResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateLinkServiceConnectionStateResponse)(nil)).Elem()
}

func (o PrivateLinkServiceConnectionStateResponsePtrOutput) ToPrivateLinkServiceConnectionStateResponsePtrOutput() PrivateLinkServiceConnectionStateResponsePtrOutput {
	return o
}

func (o PrivateLinkServiceConnectionStateResponsePtrOutput) ToPrivateLinkServiceConnectionStateResponsePtrOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionStateResponsePtrOutput {
	return o
}

func (o PrivateLinkServiceConnectionStateResponsePtrOutput) Elem() PrivateLinkServiceConnectionStateResponseOutput {
	return o.ApplyT(func(v *PrivateLinkServiceConnectionStateResponse) PrivateLinkServiceConnectionStateResponse {
		if v != nil {
			return *v
		}
		var ret PrivateLinkServiceConnectionStateResponse
		return ret
	}).(PrivateLinkServiceConnectionStateResponseOutput)
}

func (o PrivateLinkServiceConnectionStateResponsePtrOutput) ActionRequired() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateLinkServiceConnectionStateResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ActionRequired
	}).(pulumi.StringPtrOutput)
}

func (o PrivateLinkServiceConnectionStateResponsePtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateLinkServiceConnectionStateResponse) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

func (o PrivateLinkServiceConnectionStateResponsePtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateLinkServiceConnectionStateResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Status
	}).(pulumi.StringPtrOutput)
}

// The list of associated user identities.
type UserAssignedIdentitiesResponse struct {
	// The client id of user assigned identity.
	ClientId string `pulumi:"clientId"`
	// The principal id of user assigned identity.
	PrincipalId string `pulumi:"principalId"`
}

// The list of associated user identities.
type UserAssignedIdentitiesResponseOutput struct{ *pulumi.OutputState }

func (UserAssignedIdentitiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserAssignedIdentitiesResponse)(nil)).Elem()
}

func (o UserAssignedIdentitiesResponseOutput) ToUserAssignedIdentitiesResponseOutput() UserAssignedIdentitiesResponseOutput {
	return o
}

func (o UserAssignedIdentitiesResponseOutput) ToUserAssignedIdentitiesResponseOutputWithContext(ctx context.Context) UserAssignedIdentitiesResponseOutput {
	return o
}

// The client id of user assigned identity.
func (o UserAssignedIdentitiesResponseOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v UserAssignedIdentitiesResponse) string { return v.ClientId }).(pulumi.StringOutput)
}

// The principal id of user assigned identity.
func (o UserAssignedIdentitiesResponseOutput) PrincipalId() pulumi.StringOutput {
	return o.ApplyT(func(v UserAssignedIdentitiesResponse) string { return v.PrincipalId }).(pulumi.StringOutput)
}

type UserAssignedIdentitiesResponseMapOutput struct{ *pulumi.OutputState }

func (UserAssignedIdentitiesResponseMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]UserAssignedIdentitiesResponse)(nil)).Elem()
}

func (o UserAssignedIdentitiesResponseMapOutput) ToUserAssignedIdentitiesResponseMapOutput() UserAssignedIdentitiesResponseMapOutput {
	return o
}

func (o UserAssignedIdentitiesResponseMapOutput) ToUserAssignedIdentitiesResponseMapOutputWithContext(ctx context.Context) UserAssignedIdentitiesResponseMapOutput {
	return o
}

func (o UserAssignedIdentitiesResponseMapOutput) MapIndex(k pulumi.StringInput) UserAssignedIdentitiesResponseOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) UserAssignedIdentitiesResponse {
		return vs[0].(map[string]UserAssignedIdentitiesResponse)[vs[1].(string)]
	}).(UserAssignedIdentitiesResponseOutput)
}

// A VM Family and its associated core quota for the Batch account.
type VirtualMachineFamilyCoreQuotaResponse struct {
	// The core quota for the VM family for the Batch account.
	CoreQuota int `pulumi:"coreQuota"`
	// The Virtual Machine family name.
	Name string `pulumi:"name"`
}

// A VM Family and its associated core quota for the Batch account.
type VirtualMachineFamilyCoreQuotaResponseOutput struct{ *pulumi.OutputState }

func (VirtualMachineFamilyCoreQuotaResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineFamilyCoreQuotaResponse)(nil)).Elem()
}

func (o VirtualMachineFamilyCoreQuotaResponseOutput) ToVirtualMachineFamilyCoreQuotaResponseOutput() VirtualMachineFamilyCoreQuotaResponseOutput {
	return o
}

func (o VirtualMachineFamilyCoreQuotaResponseOutput) ToVirtualMachineFamilyCoreQuotaResponseOutputWithContext(ctx context.Context) VirtualMachineFamilyCoreQuotaResponseOutput {
	return o
}

// The core quota for the VM family for the Batch account.
func (o VirtualMachineFamilyCoreQuotaResponseOutput) CoreQuota() pulumi.IntOutput {
	return o.ApplyT(func(v VirtualMachineFamilyCoreQuotaResponse) int { return v.CoreQuota }).(pulumi.IntOutput)
}

// The Virtual Machine family name.
func (o VirtualMachineFamilyCoreQuotaResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualMachineFamilyCoreQuotaResponse) string { return v.Name }).(pulumi.StringOutput)
}

type VirtualMachineFamilyCoreQuotaResponseArrayOutput struct{ *pulumi.OutputState }

func (VirtualMachineFamilyCoreQuotaResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualMachineFamilyCoreQuotaResponse)(nil)).Elem()
}

func (o VirtualMachineFamilyCoreQuotaResponseArrayOutput) ToVirtualMachineFamilyCoreQuotaResponseArrayOutput() VirtualMachineFamilyCoreQuotaResponseArrayOutput {
	return o
}

func (o VirtualMachineFamilyCoreQuotaResponseArrayOutput) ToVirtualMachineFamilyCoreQuotaResponseArrayOutputWithContext(ctx context.Context) VirtualMachineFamilyCoreQuotaResponseArrayOutput {
	return o
}

func (o VirtualMachineFamilyCoreQuotaResponseArrayOutput) Index(i pulumi.IntInput) VirtualMachineFamilyCoreQuotaResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualMachineFamilyCoreQuotaResponse {
		return vs[0].([]VirtualMachineFamilyCoreQuotaResponse)[vs[1].(int)]
	}).(VirtualMachineFamilyCoreQuotaResponseOutput)
}

func init() {
	pulumi.RegisterOutputType(AutoStorageBasePropertiesOutput{})
	pulumi.RegisterOutputType(AutoStorageBasePropertiesPtrOutput{})
	pulumi.RegisterOutputType(AutoStoragePropertiesResponseOutput{})
	pulumi.RegisterOutputType(BatchAccountIdentityOutput{})
	pulumi.RegisterOutputType(BatchAccountIdentityPtrOutput{})
	pulumi.RegisterOutputType(BatchAccountIdentityResponseOutput{})
	pulumi.RegisterOutputType(BatchAccountIdentityResponsePtrOutput{})
	pulumi.RegisterOutputType(ComputeNodeIdentityReferenceOutput{})
	pulumi.RegisterOutputType(ComputeNodeIdentityReferencePtrOutput{})
	pulumi.RegisterOutputType(ComputeNodeIdentityReferenceResponseOutput{})
	pulumi.RegisterOutputType(ComputeNodeIdentityReferenceResponsePtrOutput{})
	pulumi.RegisterOutputType(EncryptionPropertiesOutput{})
	pulumi.RegisterOutputType(EncryptionPropertiesPtrOutput{})
	pulumi.RegisterOutputType(EncryptionPropertiesResponseOutput{})
	pulumi.RegisterOutputType(KeyVaultPropertiesOutput{})
	pulumi.RegisterOutputType(KeyVaultPropertiesPtrOutput{})
	pulumi.RegisterOutputType(KeyVaultPropertiesResponseOutput{})
	pulumi.RegisterOutputType(KeyVaultPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(KeyVaultReferenceOutput{})
	pulumi.RegisterOutputType(KeyVaultReferencePtrOutput{})
	pulumi.RegisterOutputType(KeyVaultReferenceResponseOutput{})
	pulumi.RegisterOutputType(PrivateEndpointConnectionResponseOutput{})
	pulumi.RegisterOutputType(PrivateEndpointConnectionResponseArrayOutput{})
	pulumi.RegisterOutputType(PrivateEndpointResponseOutput{})
	pulumi.RegisterOutputType(PrivateEndpointResponsePtrOutput{})
	pulumi.RegisterOutputType(PrivateLinkServiceConnectionStateResponseOutput{})
	pulumi.RegisterOutputType(PrivateLinkServiceConnectionStateResponsePtrOutput{})
	pulumi.RegisterOutputType(UserAssignedIdentitiesResponseOutput{})
	pulumi.RegisterOutputType(UserAssignedIdentitiesResponseMapOutput{})
	pulumi.RegisterOutputType(VirtualMachineFamilyCoreQuotaResponseOutput{})
	pulumi.RegisterOutputType(VirtualMachineFamilyCoreQuotaResponseArrayOutput{})
}
