// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package batch

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// This operation applies only to Batch accounts with allowedAuthenticationModes containing 'SharedKey'. If the Batch account doesn't contain 'SharedKey' in its allowedAuthenticationMode, clients cannot use shared keys to authenticate, and must use another allowedAuthenticationModes instead. In this case, getting the keys will fail.
// Azure REST API version: 2023-05-01.
//
// Other available API versions: 2017-01-01, 2022-01-01.
func ListBatchAccountKeys(ctx *pulumi.Context, args *ListBatchAccountKeysArgs, opts ...pulumi.InvokeOption) (*ListBatchAccountKeysResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv ListBatchAccountKeysResult
	err := ctx.Invoke("azure-native:batch:listBatchAccountKeys", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type ListBatchAccountKeysArgs struct {
	// The name of the Batch account.
	AccountName string `pulumi:"accountName"`
	// The name of the resource group that contains the Batch account.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// A set of Azure Batch account keys.
type ListBatchAccountKeysResult struct {
	// The Batch account name.
	AccountName string `pulumi:"accountName"`
	// The primary key associated with the account.
	Primary string `pulumi:"primary"`
	// The secondary key associated with the account.
	Secondary string `pulumi:"secondary"`
}

func ListBatchAccountKeysOutput(ctx *pulumi.Context, args ListBatchAccountKeysOutputArgs, opts ...pulumi.InvokeOption) ListBatchAccountKeysResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (ListBatchAccountKeysResult, error) {
			args := v.(ListBatchAccountKeysArgs)
			r, err := ListBatchAccountKeys(ctx, &args, opts...)
			var s ListBatchAccountKeysResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(ListBatchAccountKeysResultOutput)
}

type ListBatchAccountKeysOutputArgs struct {
	// The name of the Batch account.
	AccountName pulumi.StringInput `pulumi:"accountName"`
	// The name of the resource group that contains the Batch account.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
}

func (ListBatchAccountKeysOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ListBatchAccountKeysArgs)(nil)).Elem()
}

// A set of Azure Batch account keys.
type ListBatchAccountKeysResultOutput struct{ *pulumi.OutputState }

func (ListBatchAccountKeysResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListBatchAccountKeysResult)(nil)).Elem()
}

func (o ListBatchAccountKeysResultOutput) ToListBatchAccountKeysResultOutput() ListBatchAccountKeysResultOutput {
	return o
}

func (o ListBatchAccountKeysResultOutput) ToListBatchAccountKeysResultOutputWithContext(ctx context.Context) ListBatchAccountKeysResultOutput {
	return o
}

func (o ListBatchAccountKeysResultOutput) ToOutput(ctx context.Context) pulumix.Output[ListBatchAccountKeysResult] {
	return pulumix.Output[ListBatchAccountKeysResult]{
		OutputState: o.OutputState,
	}
}

// The Batch account name.
func (o ListBatchAccountKeysResultOutput) AccountName() pulumi.StringOutput {
	return o.ApplyT(func(v ListBatchAccountKeysResult) string { return v.AccountName }).(pulumi.StringOutput)
}

// The primary key associated with the account.
func (o ListBatchAccountKeysResultOutput) Primary() pulumi.StringOutput {
	return o.ApplyT(func(v ListBatchAccountKeysResult) string { return v.Primary }).(pulumi.StringOutput)
}

// The secondary key associated with the account.
func (o ListBatchAccountKeysResultOutput) Secondary() pulumi.StringOutput {
	return o.ApplyT(func(v ListBatchAccountKeysResult) string { return v.Secondary }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(ListBatchAccountKeysResultOutput{})
}
