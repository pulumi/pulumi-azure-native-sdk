// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package hybridcontainerservice

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Gets the Hybrid AKS virtual network
// API Version: 2022-05-01-preview.
func GetvirtualNetworkRetrieve(ctx *pulumi.Context, args *GetvirtualNetworkRetrieveArgs, opts ...pulumi.InvokeOption) (*GetvirtualNetworkRetrieveResult, error) {
	var rv GetvirtualNetworkRetrieveResult
	err := ctx.Invoke("azure-native:hybridcontainerservice:getvirtualNetworkRetrieve", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type GetvirtualNetworkRetrieveArgs struct {
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Parameter for the name of the virtual network
	VirtualNetworksName string `pulumi:"virtualNetworksName"`
}

// The virtualNetworks resource definition.
type GetvirtualNetworkRetrieveResult struct {
	ExtendedLocation *VirtualNetworksResponseExtendedLocation `pulumi:"extendedLocation"`
	// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	Id string `pulumi:"id"`
	// The geo-location where the resource lives
	Location string `pulumi:"location"`
	// The name of the resource
	Name string `pulumi:"name"`
	// HybridAKSNetworkSpec defines the desired state of HybridAKSNetwork
	Properties VirtualNetworksPropertiesResponse `pulumi:"properties"`
	// Metadata pertaining to creation and last modification of the resource.
	SystemData SystemDataResponse `pulumi:"systemData"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type string `pulumi:"type"`
}

func GetvirtualNetworkRetrieveOutput(ctx *pulumi.Context, args GetvirtualNetworkRetrieveOutputArgs, opts ...pulumi.InvokeOption) GetvirtualNetworkRetrieveResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetvirtualNetworkRetrieveResult, error) {
			args := v.(GetvirtualNetworkRetrieveArgs)
			r, err := GetvirtualNetworkRetrieve(ctx, &args, opts...)
			var s GetvirtualNetworkRetrieveResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetvirtualNetworkRetrieveResultOutput)
}

type GetvirtualNetworkRetrieveOutputArgs struct {
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
	// Parameter for the name of the virtual network
	VirtualNetworksName pulumi.StringInput `pulumi:"virtualNetworksName"`
}

func (GetvirtualNetworkRetrieveOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetvirtualNetworkRetrieveArgs)(nil)).Elem()
}

// The virtualNetworks resource definition.
type GetvirtualNetworkRetrieveResultOutput struct{ *pulumi.OutputState }

func (GetvirtualNetworkRetrieveResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetvirtualNetworkRetrieveResult)(nil)).Elem()
}

func (o GetvirtualNetworkRetrieveResultOutput) ToGetvirtualNetworkRetrieveResultOutput() GetvirtualNetworkRetrieveResultOutput {
	return o
}

func (o GetvirtualNetworkRetrieveResultOutput) ToGetvirtualNetworkRetrieveResultOutputWithContext(ctx context.Context) GetvirtualNetworkRetrieveResultOutput {
	return o
}

func (o GetvirtualNetworkRetrieveResultOutput) ExtendedLocation() VirtualNetworksResponseExtendedLocationPtrOutput {
	return o.ApplyT(func(v GetvirtualNetworkRetrieveResult) *VirtualNetworksResponseExtendedLocation {
		return v.ExtendedLocation
	}).(VirtualNetworksResponseExtendedLocationPtrOutput)
}

// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
func (o GetvirtualNetworkRetrieveResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetvirtualNetworkRetrieveResult) string { return v.Id }).(pulumi.StringOutput)
}

// The geo-location where the resource lives
func (o GetvirtualNetworkRetrieveResultOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v GetvirtualNetworkRetrieveResult) string { return v.Location }).(pulumi.StringOutput)
}

// The name of the resource
func (o GetvirtualNetworkRetrieveResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetvirtualNetworkRetrieveResult) string { return v.Name }).(pulumi.StringOutput)
}

// HybridAKSNetworkSpec defines the desired state of HybridAKSNetwork
func (o GetvirtualNetworkRetrieveResultOutput) Properties() VirtualNetworksPropertiesResponseOutput {
	return o.ApplyT(func(v GetvirtualNetworkRetrieveResult) VirtualNetworksPropertiesResponse { return v.Properties }).(VirtualNetworksPropertiesResponseOutput)
}

// Metadata pertaining to creation and last modification of the resource.
func (o GetvirtualNetworkRetrieveResultOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v GetvirtualNetworkRetrieveResult) SystemDataResponse { return v.SystemData }).(SystemDataResponseOutput)
}

// Resource tags.
func (o GetvirtualNetworkRetrieveResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetvirtualNetworkRetrieveResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o GetvirtualNetworkRetrieveResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetvirtualNetworkRetrieveResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetvirtualNetworkRetrieveResultOutput{})
}
