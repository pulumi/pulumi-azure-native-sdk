// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20240101

// Indicates whether Azure Hybrid Benefit is opted in. Default value is false
type AzureHybridBenefit string

const (
	AzureHybridBenefitTrue          = AzureHybridBenefit("True")
	AzureHybridBenefitFalse         = AzureHybridBenefit("False")
	AzureHybridBenefitNotApplicable = AzureHybridBenefit("NotApplicable")
)

// If not specified, the default is 'random'. See [expanders](https://github.com/kubernetes/autoscaler/blob/master/cluster-autoscaler/FAQ.md#what-are-expanders) for more information.
type Expander string

const (
	// Selects the node group that will have the least idle CPU (if tied, unused memory) after scale-up. This is useful when you have different classes of nodes, for example, high CPU or high memory nodes, and only want to expand those when there are pending pods that need a lot of those resources.
	Expander_Least_Waste = Expander("least-waste")
	// Selects the node group that would be able to schedule the most pods when scaling up. This is useful when you are using nodeSelector to make sure certain pods land on certain nodes. Note that this won't cause the autoscaler to select bigger nodes vs. smaller, as it can add multiple smaller nodes at once.
	Expander_Most_Pods = Expander("most-pods")
	// Selects the node group that has the highest priority assigned by the user. It's configuration is described in more details [here](https://github.com/kubernetes/autoscaler/blob/master/cluster-autoscaler/expander/priority/readme.md).
	ExpanderPriority = Expander("priority")
	// Used when you don't have a particular need for the node groups to scale differently.
	ExpanderRandom = Expander("random")
)

// The extended location type. Allowed value: 'CustomLocation'
type ExtendedLocationTypes string

const (
	ExtendedLocationTypesCustomLocation = ExtendedLocationTypes("CustomLocation")
)

// Network policy used for building Kubernetes network. Possible values include: 'calico'.
type NetworkPolicy string

const (
	NetworkPolicyCalico = NetworkPolicy("calico")
)

// Specifies the OS SKU used by the agent pool. The default is CBLMariner if OSType is Linux. The default is Windows2019 when OSType is Windows.
type OSSKU string

const (
	// Use Mariner as the OS for node images.
	OSSKUCBLMariner = OSSKU("CBLMariner")
	// Use Windows2019 as the OS for node images.
	OSSKUWindows2019 = OSSKU("Windows2019")
	// Use Windows2022 as the OS for node images.
	OSSKUWindows2022 = OSSKU("Windows2022")
)

// OSType to be used to specify OS type for the VMs. Choose from Linux and Windows. Default to Linux. Possible values include: 'Linux', 'Windows'
type OsType string

const (
	OsTypeLinux   = OsType("Linux")
	OsTypeWindows = OsType("Windows")
)

func init() {
}
