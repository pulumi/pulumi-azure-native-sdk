// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20240101

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The Virtual Network resource definition.
type VirtualNetworkRetrieve struct {
	pulumi.CustomResourceState

	// Extended location pointing to the underlying infrastructure
	ExtendedLocation VirtualNetworkResponseExtendedLocationPtrOutput `pulumi:"extendedLocation"`
	// The geo-location where the resource lives
	Location pulumi.StringOutput `pulumi:"location"`
	// The name of the resource
	Name pulumi.StringOutput `pulumi:"name"`
	// Properties of the virtual network resource
	Properties VirtualNetworkPropertiesResponseOutput `pulumi:"properties"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponseOutput `pulumi:"systemData"`
	// Resource tags.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewVirtualNetworkRetrieve registers a new resource with the given unique name, arguments, and options.
func NewVirtualNetworkRetrieve(ctx *pulumi.Context,
	name string, args *VirtualNetworkRetrieveArgs, opts ...pulumi.ResourceOption) (*VirtualNetworkRetrieve, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:hybridcontainerservice/v20240101:virtualNetworkRetrieve"),
		},
		{
			Type: pulumi.String("azure-native:hybridcontainerservice:VirtualNetworkRetrieve"),
		},
		{
			Type: pulumi.String("azure-native:hybridcontainerservice:virtualNetworkRetrieve"),
		},
		{
			Type: pulumi.String("azure-native:hybridcontainerservice/v20220501preview:VirtualNetworkRetrieve"),
		},
		{
			Type: pulumi.String("azure-native:hybridcontainerservice/v20220501preview:virtualNetworkRetrieve"),
		},
		{
			Type: pulumi.String("azure-native:hybridcontainerservice/v20220901preview:VirtualNetworkRetrieve"),
		},
		{
			Type: pulumi.String("azure-native:hybridcontainerservice/v20220901preview:virtualNetworkRetrieve"),
		},
		{
			Type: pulumi.String("azure-native:hybridcontainerservice/v20231115preview:VirtualNetworkRetrieve"),
		},
		{
			Type: pulumi.String("azure-native:hybridcontainerservice/v20231115preview:virtualNetworkRetrieve"),
		},
	})
	opts = append(opts, aliases)
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource VirtualNetworkRetrieve
	err := ctx.RegisterResource("azure-native:hybridcontainerservice/v20240101:VirtualNetworkRetrieve", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetVirtualNetworkRetrieve gets an existing VirtualNetworkRetrieve resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetVirtualNetworkRetrieve(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *VirtualNetworkRetrieveState, opts ...pulumi.ResourceOption) (*VirtualNetworkRetrieve, error) {
	var resource VirtualNetworkRetrieve
	err := ctx.ReadResource("azure-native:hybridcontainerservice/v20240101:VirtualNetworkRetrieve", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering VirtualNetworkRetrieve resources.
type virtualNetworkRetrieveState struct {
}

type VirtualNetworkRetrieveState struct {
}

func (VirtualNetworkRetrieveState) ElementType() reflect.Type {
	return reflect.TypeOf((*virtualNetworkRetrieveState)(nil)).Elem()
}

type virtualNetworkRetrieveArgs struct {
	// Extended location pointing to the underlying infrastructure
	ExtendedLocation *VirtualNetworkExtendedLocation `pulumi:"extendedLocation"`
	// The geo-location where the resource lives
	Location *string `pulumi:"location"`
	// Properties of the virtual network resource
	Properties *VirtualNetworkProperties `pulumi:"properties"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// Parameter for the name of the virtual network
	VirtualNetworkName *string `pulumi:"virtualNetworkName"`
}

// The set of arguments for constructing a VirtualNetworkRetrieve resource.
type VirtualNetworkRetrieveArgs struct {
	// Extended location pointing to the underlying infrastructure
	ExtendedLocation VirtualNetworkExtendedLocationPtrInput
	// The geo-location where the resource lives
	Location pulumi.StringPtrInput
	// Properties of the virtual network resource
	Properties VirtualNetworkPropertiesPtrInput
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput
	// Resource tags.
	Tags pulumi.StringMapInput
	// Parameter for the name of the virtual network
	VirtualNetworkName pulumi.StringPtrInput
}

func (VirtualNetworkRetrieveArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*virtualNetworkRetrieveArgs)(nil)).Elem()
}

type VirtualNetworkRetrieveInput interface {
	pulumi.Input

	ToVirtualNetworkRetrieveOutput() VirtualNetworkRetrieveOutput
	ToVirtualNetworkRetrieveOutputWithContext(ctx context.Context) VirtualNetworkRetrieveOutput
}

func (*VirtualNetworkRetrieve) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNetworkRetrieve)(nil)).Elem()
}

func (i *VirtualNetworkRetrieve) ToVirtualNetworkRetrieveOutput() VirtualNetworkRetrieveOutput {
	return i.ToVirtualNetworkRetrieveOutputWithContext(context.Background())
}

func (i *VirtualNetworkRetrieve) ToVirtualNetworkRetrieveOutputWithContext(ctx context.Context) VirtualNetworkRetrieveOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkRetrieveOutput)
}

type VirtualNetworkRetrieveOutput struct{ *pulumi.OutputState }

func (VirtualNetworkRetrieveOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNetworkRetrieve)(nil)).Elem()
}

func (o VirtualNetworkRetrieveOutput) ToVirtualNetworkRetrieveOutput() VirtualNetworkRetrieveOutput {
	return o
}

func (o VirtualNetworkRetrieveOutput) ToVirtualNetworkRetrieveOutputWithContext(ctx context.Context) VirtualNetworkRetrieveOutput {
	return o
}

// Extended location pointing to the underlying infrastructure
func (o VirtualNetworkRetrieveOutput) ExtendedLocation() VirtualNetworkResponseExtendedLocationPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkRetrieve) VirtualNetworkResponseExtendedLocationPtrOutput {
		return v.ExtendedLocation
	}).(VirtualNetworkResponseExtendedLocationPtrOutput)
}

// The geo-location where the resource lives
func (o VirtualNetworkRetrieveOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *VirtualNetworkRetrieve) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// The name of the resource
func (o VirtualNetworkRetrieveOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *VirtualNetworkRetrieve) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Properties of the virtual network resource
func (o VirtualNetworkRetrieveOutput) Properties() VirtualNetworkPropertiesResponseOutput {
	return o.ApplyT(func(v *VirtualNetworkRetrieve) VirtualNetworkPropertiesResponseOutput { return v.Properties }).(VirtualNetworkPropertiesResponseOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o VirtualNetworkRetrieveOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v *VirtualNetworkRetrieve) SystemDataResponseOutput { return v.SystemData }).(SystemDataResponseOutput)
}

// Resource tags.
func (o VirtualNetworkRetrieveOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *VirtualNetworkRetrieve) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o VirtualNetworkRetrieveOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *VirtualNetworkRetrieve) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(VirtualNetworkRetrieveOutput{})
}
