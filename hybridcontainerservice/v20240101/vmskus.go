// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20240101

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The list of supported VM SKUs.
type VMSkus struct {
	pulumi.CustomResourceState

	// Extended location pointing to the underlying infrastructure
	ExtendedLocation ExtendedLocationResponsePtrOutput `pulumi:"extendedLocation"`
	// The name of the resource
	Name       pulumi.StringOutput                  `pulumi:"name"`
	Properties VmSkuProfileResponsePropertiesOutput `pulumi:"properties"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponseOutput `pulumi:"systemData"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewVMSkus registers a new resource with the given unique name, arguments, and options.
func NewVMSkus(ctx *pulumi.Context,
	name string, args *VMSkusArgs, opts ...pulumi.ResourceOption) (*VMSkus, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CustomLocationResourceUri == nil {
		return nil, errors.New("invalid value for required argument 'CustomLocationResourceUri'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:hybridcontainerservice/v20231115preview:VMSkus"),
		},
	})
	opts = append(opts, aliases)
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource VMSkus
	err := ctx.RegisterResource("azure-native:hybridcontainerservice/v20240101:VMSkus", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetVMSkus gets an existing VMSkus resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetVMSkus(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *VMSkusState, opts ...pulumi.ResourceOption) (*VMSkus, error) {
	var resource VMSkus
	err := ctx.ReadResource("azure-native:hybridcontainerservice/v20240101:VMSkus", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering VMSkus resources.
type vmskusState struct {
}

type VMSkusState struct {
}

func (VMSkusState) ElementType() reflect.Type {
	return reflect.TypeOf((*vmskusState)(nil)).Elem()
}

type vmskusArgs struct {
	// The fully qualified Azure Resource Manager identifier of the custom location resource.
	CustomLocationResourceUri string `pulumi:"customLocationResourceUri"`
	// Extended location pointing to the underlying infrastructure
	ExtendedLocation *ExtendedLocation `pulumi:"extendedLocation"`
}

// The set of arguments for constructing a VMSkus resource.
type VMSkusArgs struct {
	// The fully qualified Azure Resource Manager identifier of the custom location resource.
	CustomLocationResourceUri pulumi.StringInput
	// Extended location pointing to the underlying infrastructure
	ExtendedLocation ExtendedLocationPtrInput
}

func (VMSkusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*vmskusArgs)(nil)).Elem()
}

type VMSkusInput interface {
	pulumi.Input

	ToVMSkusOutput() VMSkusOutput
	ToVMSkusOutputWithContext(ctx context.Context) VMSkusOutput
}

func (*VMSkus) ElementType() reflect.Type {
	return reflect.TypeOf((**VMSkus)(nil)).Elem()
}

func (i *VMSkus) ToVMSkusOutput() VMSkusOutput {
	return i.ToVMSkusOutputWithContext(context.Background())
}

func (i *VMSkus) ToVMSkusOutputWithContext(ctx context.Context) VMSkusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMSkusOutput)
}

type VMSkusOutput struct{ *pulumi.OutputState }

func (VMSkusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VMSkus)(nil)).Elem()
}

func (o VMSkusOutput) ToVMSkusOutput() VMSkusOutput {
	return o
}

func (o VMSkusOutput) ToVMSkusOutputWithContext(ctx context.Context) VMSkusOutput {
	return o
}

// Extended location pointing to the underlying infrastructure
func (o VMSkusOutput) ExtendedLocation() ExtendedLocationResponsePtrOutput {
	return o.ApplyT(func(v *VMSkus) ExtendedLocationResponsePtrOutput { return v.ExtendedLocation }).(ExtendedLocationResponsePtrOutput)
}

// The name of the resource
func (o VMSkusOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *VMSkus) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o VMSkusOutput) Properties() VmSkuProfileResponsePropertiesOutput {
	return o.ApplyT(func(v *VMSkus) VmSkuProfileResponsePropertiesOutput { return v.Properties }).(VmSkuProfileResponsePropertiesOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o VMSkusOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v *VMSkus) SystemDataResponseOutput { return v.SystemData }).(SystemDataResponseOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o VMSkusOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *VMSkus) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(VMSkusOutput{})
}
