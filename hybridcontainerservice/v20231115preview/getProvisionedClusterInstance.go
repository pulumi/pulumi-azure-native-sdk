// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20231115preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Gets the Hybrid AKS provisioned cluster instance
func LookupProvisionedClusterInstance(ctx *pulumi.Context, args *LookupProvisionedClusterInstanceArgs, opts ...pulumi.InvokeOption) (*LookupProvisionedClusterInstanceResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv LookupProvisionedClusterInstanceResult
	err := ctx.Invoke("azure-native:hybridcontainerservice/v20231115preview:getProvisionedClusterInstance", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return rv.Defaults(), nil
}

type LookupProvisionedClusterInstanceArgs struct {
	// The fully qualified Azure Resource manager identifier of the connected cluster resource.
	ConnectedClusterResourceUri string `pulumi:"connectedClusterResourceUri"`
}

// The provisionedClusterInstances resource definition.
type LookupProvisionedClusterInstanceResult struct {
	// Extended Location definition
	ExtendedLocation *ExtendedLocationResponse `pulumi:"extendedLocation"`
	// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
	Id string `pulumi:"id"`
	// The name of the resource
	Name string `pulumi:"name"`
	// All properties of the provisioned cluster
	Properties ProvisionedClusterPropertiesResponse `pulumi:"properties"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponse `pulumi:"systemData"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type string `pulumi:"type"`
}

// Defaults sets the appropriate defaults for LookupProvisionedClusterInstanceResult
func (val *LookupProvisionedClusterInstanceResult) Defaults() *LookupProvisionedClusterInstanceResult {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.Properties = *tmp.Properties.Defaults()

	return &tmp
}

func LookupProvisionedClusterInstanceOutput(ctx *pulumi.Context, args LookupProvisionedClusterInstanceOutputArgs, opts ...pulumi.InvokeOption) LookupProvisionedClusterInstanceResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupProvisionedClusterInstanceResult, error) {
			args := v.(LookupProvisionedClusterInstanceArgs)
			r, err := LookupProvisionedClusterInstance(ctx, &args, opts...)
			var s LookupProvisionedClusterInstanceResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupProvisionedClusterInstanceResultOutput)
}

type LookupProvisionedClusterInstanceOutputArgs struct {
	// The fully qualified Azure Resource manager identifier of the connected cluster resource.
	ConnectedClusterResourceUri pulumi.StringInput `pulumi:"connectedClusterResourceUri"`
}

func (LookupProvisionedClusterInstanceOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupProvisionedClusterInstanceArgs)(nil)).Elem()
}

// The provisionedClusterInstances resource definition.
type LookupProvisionedClusterInstanceResultOutput struct{ *pulumi.OutputState }

func (LookupProvisionedClusterInstanceResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupProvisionedClusterInstanceResult)(nil)).Elem()
}

func (o LookupProvisionedClusterInstanceResultOutput) ToLookupProvisionedClusterInstanceResultOutput() LookupProvisionedClusterInstanceResultOutput {
	return o
}

func (o LookupProvisionedClusterInstanceResultOutput) ToLookupProvisionedClusterInstanceResultOutputWithContext(ctx context.Context) LookupProvisionedClusterInstanceResultOutput {
	return o
}

// Extended Location definition
func (o LookupProvisionedClusterInstanceResultOutput) ExtendedLocation() ExtendedLocationResponsePtrOutput {
	return o.ApplyT(func(v LookupProvisionedClusterInstanceResult) *ExtendedLocationResponse { return v.ExtendedLocation }).(ExtendedLocationResponsePtrOutput)
}

// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
func (o LookupProvisionedClusterInstanceResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupProvisionedClusterInstanceResult) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the resource
func (o LookupProvisionedClusterInstanceResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupProvisionedClusterInstanceResult) string { return v.Name }).(pulumi.StringOutput)
}

// All properties of the provisioned cluster
func (o LookupProvisionedClusterInstanceResultOutput) Properties() ProvisionedClusterPropertiesResponseOutput {
	return o.ApplyT(func(v LookupProvisionedClusterInstanceResult) ProvisionedClusterPropertiesResponse {
		return v.Properties
	}).(ProvisionedClusterPropertiesResponseOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o LookupProvisionedClusterInstanceResultOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v LookupProvisionedClusterInstanceResult) SystemDataResponse { return v.SystemData }).(SystemDataResponseOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o LookupProvisionedClusterInstanceResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupProvisionedClusterInstanceResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupProvisionedClusterInstanceResultOutput{})
}
