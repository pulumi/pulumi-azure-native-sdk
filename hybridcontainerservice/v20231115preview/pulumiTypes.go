// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20231115preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = utilities.GetEnvOrDefault

// Defines the addon status profile.
type AddonStatusProfileResponse struct {
	// Error message while deploying the addon
	ErrorMessage *string `pulumi:"errorMessage"`
	// Name of the addon
	Name *string `pulumi:"name"`
	// Observed phase of the addon on the target cluster. Possible values include: 'pending', 'provisioning', 'provisioning {HelmChartInstalled}', 'provisioning {MSICertificateDownloaded}', 'provisioned', 'deleting', 'failed', 'upgrading'
	Phase *string `pulumi:"phase"`
	// Indicates whether the addon is ready
	Ready *bool `pulumi:"ready"`
}

// Defines the addon status profile.
type AddonStatusProfileResponseOutput struct{ *pulumi.OutputState }

func (AddonStatusProfileResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AddonStatusProfileResponse)(nil)).Elem()
}

func (o AddonStatusProfileResponseOutput) ToAddonStatusProfileResponseOutput() AddonStatusProfileResponseOutput {
	return o
}

func (o AddonStatusProfileResponseOutput) ToAddonStatusProfileResponseOutputWithContext(ctx context.Context) AddonStatusProfileResponseOutput {
	return o
}

// Error message while deploying the addon
func (o AddonStatusProfileResponseOutput) ErrorMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AddonStatusProfileResponse) *string { return v.ErrorMessage }).(pulumi.StringPtrOutput)
}

// Name of the addon
func (o AddonStatusProfileResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AddonStatusProfileResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Observed phase of the addon on the target cluster. Possible values include: 'pending', 'provisioning', 'provisioning {HelmChartInstalled}', 'provisioning {MSICertificateDownloaded}', 'provisioned', 'deleting', 'failed', 'upgrading'
func (o AddonStatusProfileResponseOutput) Phase() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AddonStatusProfileResponse) *string { return v.Phase }).(pulumi.StringPtrOutput)
}

// Indicates whether the addon is ready
func (o AddonStatusProfileResponseOutput) Ready() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AddonStatusProfileResponse) *bool { return v.Ready }).(pulumi.BoolPtrOutput)
}

type AddonStatusProfileResponseArrayOutput struct{ *pulumi.OutputState }

func (AddonStatusProfileResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AddonStatusProfileResponse)(nil)).Elem()
}

func (o AddonStatusProfileResponseArrayOutput) ToAddonStatusProfileResponseArrayOutput() AddonStatusProfileResponseArrayOutput {
	return o
}

func (o AddonStatusProfileResponseArrayOutput) ToAddonStatusProfileResponseArrayOutputWithContext(ctx context.Context) AddonStatusProfileResponseArrayOutput {
	return o
}

func (o AddonStatusProfileResponseArrayOutput) Index(i pulumi.IntInput) AddonStatusProfileResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AddonStatusProfileResponse {
		return vs[0].([]AddonStatusProfileResponse)[vs[1].(int)]
	}).(AddonStatusProfileResponseOutput)
}

type AgentPoolProvisioningStatusError struct {
	Code    *string `pulumi:"code"`
	Message *string `pulumi:"message"`
}

// AgentPoolProvisioningStatusErrorInput is an input type that accepts AgentPoolProvisioningStatusErrorArgs and AgentPoolProvisioningStatusErrorOutput values.
// You can construct a concrete instance of `AgentPoolProvisioningStatusErrorInput` via:
//
//	AgentPoolProvisioningStatusErrorArgs{...}
type AgentPoolProvisioningStatusErrorInput interface {
	pulumi.Input

	ToAgentPoolProvisioningStatusErrorOutput() AgentPoolProvisioningStatusErrorOutput
	ToAgentPoolProvisioningStatusErrorOutputWithContext(context.Context) AgentPoolProvisioningStatusErrorOutput
}

type AgentPoolProvisioningStatusErrorArgs struct {
	Code    pulumi.StringPtrInput `pulumi:"code"`
	Message pulumi.StringPtrInput `pulumi:"message"`
}

func (AgentPoolProvisioningStatusErrorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentPoolProvisioningStatusError)(nil)).Elem()
}

func (i AgentPoolProvisioningStatusErrorArgs) ToAgentPoolProvisioningStatusErrorOutput() AgentPoolProvisioningStatusErrorOutput {
	return i.ToAgentPoolProvisioningStatusErrorOutputWithContext(context.Background())
}

func (i AgentPoolProvisioningStatusErrorArgs) ToAgentPoolProvisioningStatusErrorOutputWithContext(ctx context.Context) AgentPoolProvisioningStatusErrorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentPoolProvisioningStatusErrorOutput)
}

func (i AgentPoolProvisioningStatusErrorArgs) ToAgentPoolProvisioningStatusErrorPtrOutput() AgentPoolProvisioningStatusErrorPtrOutput {
	return i.ToAgentPoolProvisioningStatusErrorPtrOutputWithContext(context.Background())
}

func (i AgentPoolProvisioningStatusErrorArgs) ToAgentPoolProvisioningStatusErrorPtrOutputWithContext(ctx context.Context) AgentPoolProvisioningStatusErrorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentPoolProvisioningStatusErrorOutput).ToAgentPoolProvisioningStatusErrorPtrOutputWithContext(ctx)
}

// AgentPoolProvisioningStatusErrorPtrInput is an input type that accepts AgentPoolProvisioningStatusErrorArgs, AgentPoolProvisioningStatusErrorPtr and AgentPoolProvisioningStatusErrorPtrOutput values.
// You can construct a concrete instance of `AgentPoolProvisioningStatusErrorPtrInput` via:
//
//	        AgentPoolProvisioningStatusErrorArgs{...}
//
//	or:
//
//	        nil
type AgentPoolProvisioningStatusErrorPtrInput interface {
	pulumi.Input

	ToAgentPoolProvisioningStatusErrorPtrOutput() AgentPoolProvisioningStatusErrorPtrOutput
	ToAgentPoolProvisioningStatusErrorPtrOutputWithContext(context.Context) AgentPoolProvisioningStatusErrorPtrOutput
}

type agentPoolProvisioningStatusErrorPtrType AgentPoolProvisioningStatusErrorArgs

func AgentPoolProvisioningStatusErrorPtr(v *AgentPoolProvisioningStatusErrorArgs) AgentPoolProvisioningStatusErrorPtrInput {
	return (*agentPoolProvisioningStatusErrorPtrType)(v)
}

func (*agentPoolProvisioningStatusErrorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentPoolProvisioningStatusError)(nil)).Elem()
}

func (i *agentPoolProvisioningStatusErrorPtrType) ToAgentPoolProvisioningStatusErrorPtrOutput() AgentPoolProvisioningStatusErrorPtrOutput {
	return i.ToAgentPoolProvisioningStatusErrorPtrOutputWithContext(context.Background())
}

func (i *agentPoolProvisioningStatusErrorPtrType) ToAgentPoolProvisioningStatusErrorPtrOutputWithContext(ctx context.Context) AgentPoolProvisioningStatusErrorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentPoolProvisioningStatusErrorPtrOutput)
}

type AgentPoolProvisioningStatusErrorOutput struct{ *pulumi.OutputState }

func (AgentPoolProvisioningStatusErrorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentPoolProvisioningStatusError)(nil)).Elem()
}

func (o AgentPoolProvisioningStatusErrorOutput) ToAgentPoolProvisioningStatusErrorOutput() AgentPoolProvisioningStatusErrorOutput {
	return o
}

func (o AgentPoolProvisioningStatusErrorOutput) ToAgentPoolProvisioningStatusErrorOutputWithContext(ctx context.Context) AgentPoolProvisioningStatusErrorOutput {
	return o
}

func (o AgentPoolProvisioningStatusErrorOutput) ToAgentPoolProvisioningStatusErrorPtrOutput() AgentPoolProvisioningStatusErrorPtrOutput {
	return o.ToAgentPoolProvisioningStatusErrorPtrOutputWithContext(context.Background())
}

func (o AgentPoolProvisioningStatusErrorOutput) ToAgentPoolProvisioningStatusErrorPtrOutputWithContext(ctx context.Context) AgentPoolProvisioningStatusErrorPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AgentPoolProvisioningStatusError) *AgentPoolProvisioningStatusError {
		return &v
	}).(AgentPoolProvisioningStatusErrorPtrOutput)
}

func (o AgentPoolProvisioningStatusErrorOutput) Code() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentPoolProvisioningStatusError) *string { return v.Code }).(pulumi.StringPtrOutput)
}

func (o AgentPoolProvisioningStatusErrorOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentPoolProvisioningStatusError) *string { return v.Message }).(pulumi.StringPtrOutput)
}

type AgentPoolProvisioningStatusErrorPtrOutput struct{ *pulumi.OutputState }

func (AgentPoolProvisioningStatusErrorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentPoolProvisioningStatusError)(nil)).Elem()
}

func (o AgentPoolProvisioningStatusErrorPtrOutput) ToAgentPoolProvisioningStatusErrorPtrOutput() AgentPoolProvisioningStatusErrorPtrOutput {
	return o
}

func (o AgentPoolProvisioningStatusErrorPtrOutput) ToAgentPoolProvisioningStatusErrorPtrOutputWithContext(ctx context.Context) AgentPoolProvisioningStatusErrorPtrOutput {
	return o
}

func (o AgentPoolProvisioningStatusErrorPtrOutput) Elem() AgentPoolProvisioningStatusErrorOutput {
	return o.ApplyT(func(v *AgentPoolProvisioningStatusError) AgentPoolProvisioningStatusError {
		if v != nil {
			return *v
		}
		var ret AgentPoolProvisioningStatusError
		return ret
	}).(AgentPoolProvisioningStatusErrorOutput)
}

func (o AgentPoolProvisioningStatusErrorPtrOutput) Code() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AgentPoolProvisioningStatusError) *string {
		if v == nil {
			return nil
		}
		return v.Code
	}).(pulumi.StringPtrOutput)
}

func (o AgentPoolProvisioningStatusErrorPtrOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AgentPoolProvisioningStatusError) *string {
		if v == nil {
			return nil
		}
		return v.Message
	}).(pulumi.StringPtrOutput)
}

// Contains Provisioning errors
type AgentPoolProvisioningStatusOperationStatus struct {
	Error       *AgentPoolProvisioningStatusError `pulumi:"error"`
	OperationId *string                           `pulumi:"operationId"`
	Status      *string                           `pulumi:"status"`
}

// AgentPoolProvisioningStatusOperationStatusInput is an input type that accepts AgentPoolProvisioningStatusOperationStatusArgs and AgentPoolProvisioningStatusOperationStatusOutput values.
// You can construct a concrete instance of `AgentPoolProvisioningStatusOperationStatusInput` via:
//
//	AgentPoolProvisioningStatusOperationStatusArgs{...}
type AgentPoolProvisioningStatusOperationStatusInput interface {
	pulumi.Input

	ToAgentPoolProvisioningStatusOperationStatusOutput() AgentPoolProvisioningStatusOperationStatusOutput
	ToAgentPoolProvisioningStatusOperationStatusOutputWithContext(context.Context) AgentPoolProvisioningStatusOperationStatusOutput
}

// Contains Provisioning errors
type AgentPoolProvisioningStatusOperationStatusArgs struct {
	Error       AgentPoolProvisioningStatusErrorPtrInput `pulumi:"error"`
	OperationId pulumi.StringPtrInput                    `pulumi:"operationId"`
	Status      pulumi.StringPtrInput                    `pulumi:"status"`
}

func (AgentPoolProvisioningStatusOperationStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentPoolProvisioningStatusOperationStatus)(nil)).Elem()
}

func (i AgentPoolProvisioningStatusOperationStatusArgs) ToAgentPoolProvisioningStatusOperationStatusOutput() AgentPoolProvisioningStatusOperationStatusOutput {
	return i.ToAgentPoolProvisioningStatusOperationStatusOutputWithContext(context.Background())
}

func (i AgentPoolProvisioningStatusOperationStatusArgs) ToAgentPoolProvisioningStatusOperationStatusOutputWithContext(ctx context.Context) AgentPoolProvisioningStatusOperationStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentPoolProvisioningStatusOperationStatusOutput)
}

func (i AgentPoolProvisioningStatusOperationStatusArgs) ToAgentPoolProvisioningStatusOperationStatusPtrOutput() AgentPoolProvisioningStatusOperationStatusPtrOutput {
	return i.ToAgentPoolProvisioningStatusOperationStatusPtrOutputWithContext(context.Background())
}

func (i AgentPoolProvisioningStatusOperationStatusArgs) ToAgentPoolProvisioningStatusOperationStatusPtrOutputWithContext(ctx context.Context) AgentPoolProvisioningStatusOperationStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentPoolProvisioningStatusOperationStatusOutput).ToAgentPoolProvisioningStatusOperationStatusPtrOutputWithContext(ctx)
}

// AgentPoolProvisioningStatusOperationStatusPtrInput is an input type that accepts AgentPoolProvisioningStatusOperationStatusArgs, AgentPoolProvisioningStatusOperationStatusPtr and AgentPoolProvisioningStatusOperationStatusPtrOutput values.
// You can construct a concrete instance of `AgentPoolProvisioningStatusOperationStatusPtrInput` via:
//
//	        AgentPoolProvisioningStatusOperationStatusArgs{...}
//
//	or:
//
//	        nil
type AgentPoolProvisioningStatusOperationStatusPtrInput interface {
	pulumi.Input

	ToAgentPoolProvisioningStatusOperationStatusPtrOutput() AgentPoolProvisioningStatusOperationStatusPtrOutput
	ToAgentPoolProvisioningStatusOperationStatusPtrOutputWithContext(context.Context) AgentPoolProvisioningStatusOperationStatusPtrOutput
}

type agentPoolProvisioningStatusOperationStatusPtrType AgentPoolProvisioningStatusOperationStatusArgs

func AgentPoolProvisioningStatusOperationStatusPtr(v *AgentPoolProvisioningStatusOperationStatusArgs) AgentPoolProvisioningStatusOperationStatusPtrInput {
	return (*agentPoolProvisioningStatusOperationStatusPtrType)(v)
}

func (*agentPoolProvisioningStatusOperationStatusPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentPoolProvisioningStatusOperationStatus)(nil)).Elem()
}

func (i *agentPoolProvisioningStatusOperationStatusPtrType) ToAgentPoolProvisioningStatusOperationStatusPtrOutput() AgentPoolProvisioningStatusOperationStatusPtrOutput {
	return i.ToAgentPoolProvisioningStatusOperationStatusPtrOutputWithContext(context.Background())
}

func (i *agentPoolProvisioningStatusOperationStatusPtrType) ToAgentPoolProvisioningStatusOperationStatusPtrOutputWithContext(ctx context.Context) AgentPoolProvisioningStatusOperationStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentPoolProvisioningStatusOperationStatusPtrOutput)
}

// Contains Provisioning errors
type AgentPoolProvisioningStatusOperationStatusOutput struct{ *pulumi.OutputState }

func (AgentPoolProvisioningStatusOperationStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentPoolProvisioningStatusOperationStatus)(nil)).Elem()
}

func (o AgentPoolProvisioningStatusOperationStatusOutput) ToAgentPoolProvisioningStatusOperationStatusOutput() AgentPoolProvisioningStatusOperationStatusOutput {
	return o
}

func (o AgentPoolProvisioningStatusOperationStatusOutput) ToAgentPoolProvisioningStatusOperationStatusOutputWithContext(ctx context.Context) AgentPoolProvisioningStatusOperationStatusOutput {
	return o
}

func (o AgentPoolProvisioningStatusOperationStatusOutput) ToAgentPoolProvisioningStatusOperationStatusPtrOutput() AgentPoolProvisioningStatusOperationStatusPtrOutput {
	return o.ToAgentPoolProvisioningStatusOperationStatusPtrOutputWithContext(context.Background())
}

func (o AgentPoolProvisioningStatusOperationStatusOutput) ToAgentPoolProvisioningStatusOperationStatusPtrOutputWithContext(ctx context.Context) AgentPoolProvisioningStatusOperationStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AgentPoolProvisioningStatusOperationStatus) *AgentPoolProvisioningStatusOperationStatus {
		return &v
	}).(AgentPoolProvisioningStatusOperationStatusPtrOutput)
}

func (o AgentPoolProvisioningStatusOperationStatusOutput) Error() AgentPoolProvisioningStatusErrorPtrOutput {
	return o.ApplyT(func(v AgentPoolProvisioningStatusOperationStatus) *AgentPoolProvisioningStatusError { return v.Error }).(AgentPoolProvisioningStatusErrorPtrOutput)
}

func (o AgentPoolProvisioningStatusOperationStatusOutput) OperationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentPoolProvisioningStatusOperationStatus) *string { return v.OperationId }).(pulumi.StringPtrOutput)
}

func (o AgentPoolProvisioningStatusOperationStatusOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentPoolProvisioningStatusOperationStatus) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type AgentPoolProvisioningStatusOperationStatusPtrOutput struct{ *pulumi.OutputState }

func (AgentPoolProvisioningStatusOperationStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentPoolProvisioningStatusOperationStatus)(nil)).Elem()
}

func (o AgentPoolProvisioningStatusOperationStatusPtrOutput) ToAgentPoolProvisioningStatusOperationStatusPtrOutput() AgentPoolProvisioningStatusOperationStatusPtrOutput {
	return o
}

func (o AgentPoolProvisioningStatusOperationStatusPtrOutput) ToAgentPoolProvisioningStatusOperationStatusPtrOutputWithContext(ctx context.Context) AgentPoolProvisioningStatusOperationStatusPtrOutput {
	return o
}

func (o AgentPoolProvisioningStatusOperationStatusPtrOutput) Elem() AgentPoolProvisioningStatusOperationStatusOutput {
	return o.ApplyT(func(v *AgentPoolProvisioningStatusOperationStatus) AgentPoolProvisioningStatusOperationStatus {
		if v != nil {
			return *v
		}
		var ret AgentPoolProvisioningStatusOperationStatus
		return ret
	}).(AgentPoolProvisioningStatusOperationStatusOutput)
}

func (o AgentPoolProvisioningStatusOperationStatusPtrOutput) Error() AgentPoolProvisioningStatusErrorPtrOutput {
	return o.ApplyT(func(v *AgentPoolProvisioningStatusOperationStatus) *AgentPoolProvisioningStatusError {
		if v == nil {
			return nil
		}
		return v.Error
	}).(AgentPoolProvisioningStatusErrorPtrOutput)
}

func (o AgentPoolProvisioningStatusOperationStatusPtrOutput) OperationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AgentPoolProvisioningStatusOperationStatus) *string {
		if v == nil {
			return nil
		}
		return v.OperationId
	}).(pulumi.StringPtrOutput)
}

func (o AgentPoolProvisioningStatusOperationStatusPtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AgentPoolProvisioningStatusOperationStatus) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

type AgentPoolProvisioningStatusResponseError struct {
	Code    *string `pulumi:"code"`
	Message *string `pulumi:"message"`
}

type AgentPoolProvisioningStatusResponseErrorOutput struct{ *pulumi.OutputState }

func (AgentPoolProvisioningStatusResponseErrorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentPoolProvisioningStatusResponseError)(nil)).Elem()
}

func (o AgentPoolProvisioningStatusResponseErrorOutput) ToAgentPoolProvisioningStatusResponseErrorOutput() AgentPoolProvisioningStatusResponseErrorOutput {
	return o
}

func (o AgentPoolProvisioningStatusResponseErrorOutput) ToAgentPoolProvisioningStatusResponseErrorOutputWithContext(ctx context.Context) AgentPoolProvisioningStatusResponseErrorOutput {
	return o
}

func (o AgentPoolProvisioningStatusResponseErrorOutput) Code() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentPoolProvisioningStatusResponseError) *string { return v.Code }).(pulumi.StringPtrOutput)
}

func (o AgentPoolProvisioningStatusResponseErrorOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentPoolProvisioningStatusResponseError) *string { return v.Message }).(pulumi.StringPtrOutput)
}

type AgentPoolProvisioningStatusResponseErrorPtrOutput struct{ *pulumi.OutputState }

func (AgentPoolProvisioningStatusResponseErrorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentPoolProvisioningStatusResponseError)(nil)).Elem()
}

func (o AgentPoolProvisioningStatusResponseErrorPtrOutput) ToAgentPoolProvisioningStatusResponseErrorPtrOutput() AgentPoolProvisioningStatusResponseErrorPtrOutput {
	return o
}

func (o AgentPoolProvisioningStatusResponseErrorPtrOutput) ToAgentPoolProvisioningStatusResponseErrorPtrOutputWithContext(ctx context.Context) AgentPoolProvisioningStatusResponseErrorPtrOutput {
	return o
}

func (o AgentPoolProvisioningStatusResponseErrorPtrOutput) Elem() AgentPoolProvisioningStatusResponseErrorOutput {
	return o.ApplyT(func(v *AgentPoolProvisioningStatusResponseError) AgentPoolProvisioningStatusResponseError {
		if v != nil {
			return *v
		}
		var ret AgentPoolProvisioningStatusResponseError
		return ret
	}).(AgentPoolProvisioningStatusResponseErrorOutput)
}

func (o AgentPoolProvisioningStatusResponseErrorPtrOutput) Code() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AgentPoolProvisioningStatusResponseError) *string {
		if v == nil {
			return nil
		}
		return v.Code
	}).(pulumi.StringPtrOutput)
}

func (o AgentPoolProvisioningStatusResponseErrorPtrOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AgentPoolProvisioningStatusResponseError) *string {
		if v == nil {
			return nil
		}
		return v.Message
	}).(pulumi.StringPtrOutput)
}

// Contains Provisioning errors
type AgentPoolProvisioningStatusResponseOperationStatus struct {
	Error       *AgentPoolProvisioningStatusResponseError `pulumi:"error"`
	OperationId *string                                   `pulumi:"operationId"`
	Status      *string                                   `pulumi:"status"`
}

// Contains Provisioning errors
type AgentPoolProvisioningStatusResponseOperationStatusOutput struct{ *pulumi.OutputState }

func (AgentPoolProvisioningStatusResponseOperationStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentPoolProvisioningStatusResponseOperationStatus)(nil)).Elem()
}

func (o AgentPoolProvisioningStatusResponseOperationStatusOutput) ToAgentPoolProvisioningStatusResponseOperationStatusOutput() AgentPoolProvisioningStatusResponseOperationStatusOutput {
	return o
}

func (o AgentPoolProvisioningStatusResponseOperationStatusOutput) ToAgentPoolProvisioningStatusResponseOperationStatusOutputWithContext(ctx context.Context) AgentPoolProvisioningStatusResponseOperationStatusOutput {
	return o
}

func (o AgentPoolProvisioningStatusResponseOperationStatusOutput) Error() AgentPoolProvisioningStatusResponseErrorPtrOutput {
	return o.ApplyT(func(v AgentPoolProvisioningStatusResponseOperationStatus) *AgentPoolProvisioningStatusResponseError {
		return v.Error
	}).(AgentPoolProvisioningStatusResponseErrorPtrOutput)
}

func (o AgentPoolProvisioningStatusResponseOperationStatusOutput) OperationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentPoolProvisioningStatusResponseOperationStatus) *string { return v.OperationId }).(pulumi.StringPtrOutput)
}

func (o AgentPoolProvisioningStatusResponseOperationStatusOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentPoolProvisioningStatusResponseOperationStatus) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type AgentPoolProvisioningStatusResponseOperationStatusPtrOutput struct{ *pulumi.OutputState }

func (AgentPoolProvisioningStatusResponseOperationStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentPoolProvisioningStatusResponseOperationStatus)(nil)).Elem()
}

func (o AgentPoolProvisioningStatusResponseOperationStatusPtrOutput) ToAgentPoolProvisioningStatusResponseOperationStatusPtrOutput() AgentPoolProvisioningStatusResponseOperationStatusPtrOutput {
	return o
}

func (o AgentPoolProvisioningStatusResponseOperationStatusPtrOutput) ToAgentPoolProvisioningStatusResponseOperationStatusPtrOutputWithContext(ctx context.Context) AgentPoolProvisioningStatusResponseOperationStatusPtrOutput {
	return o
}

func (o AgentPoolProvisioningStatusResponseOperationStatusPtrOutput) Elem() AgentPoolProvisioningStatusResponseOperationStatusOutput {
	return o.ApplyT(func(v *AgentPoolProvisioningStatusResponseOperationStatus) AgentPoolProvisioningStatusResponseOperationStatus {
		if v != nil {
			return *v
		}
		var ret AgentPoolProvisioningStatusResponseOperationStatus
		return ret
	}).(AgentPoolProvisioningStatusResponseOperationStatusOutput)
}

func (o AgentPoolProvisioningStatusResponseOperationStatusPtrOutput) Error() AgentPoolProvisioningStatusResponseErrorPtrOutput {
	return o.ApplyT(func(v *AgentPoolProvisioningStatusResponseOperationStatus) *AgentPoolProvisioningStatusResponseError {
		if v == nil {
			return nil
		}
		return v.Error
	}).(AgentPoolProvisioningStatusResponseErrorPtrOutput)
}

func (o AgentPoolProvisioningStatusResponseOperationStatusPtrOutput) OperationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AgentPoolProvisioningStatusResponseOperationStatus) *string {
		if v == nil {
			return nil
		}
		return v.OperationId
	}).(pulumi.StringPtrOutput)
}

func (o AgentPoolProvisioningStatusResponseOperationStatusPtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AgentPoolProvisioningStatusResponseOperationStatus) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

// Defines the observed state of the agent pool
type AgentPoolProvisioningStatusResponseStatus struct {
	// ErrorMessage - Error messages during creation of agent pool
	ErrorMessage *string `pulumi:"errorMessage"`
	// Contains Provisioning errors
	OperationStatus *AgentPoolProvisioningStatusResponseOperationStatus `pulumi:"operationStatus"`
	ReadyReplicas   []AgentPoolUpdateProfileResponse                    `pulumi:"readyReplicas"`
}

// Defines the observed state of the agent pool
type AgentPoolProvisioningStatusResponseStatusOutput struct{ *pulumi.OutputState }

func (AgentPoolProvisioningStatusResponseStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentPoolProvisioningStatusResponseStatus)(nil)).Elem()
}

func (o AgentPoolProvisioningStatusResponseStatusOutput) ToAgentPoolProvisioningStatusResponseStatusOutput() AgentPoolProvisioningStatusResponseStatusOutput {
	return o
}

func (o AgentPoolProvisioningStatusResponseStatusOutput) ToAgentPoolProvisioningStatusResponseStatusOutputWithContext(ctx context.Context) AgentPoolProvisioningStatusResponseStatusOutput {
	return o
}

// ErrorMessage - Error messages during creation of agent pool
func (o AgentPoolProvisioningStatusResponseStatusOutput) ErrorMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentPoolProvisioningStatusResponseStatus) *string { return v.ErrorMessage }).(pulumi.StringPtrOutput)
}

// Contains Provisioning errors
func (o AgentPoolProvisioningStatusResponseStatusOutput) OperationStatus() AgentPoolProvisioningStatusResponseOperationStatusPtrOutput {
	return o.ApplyT(func(v AgentPoolProvisioningStatusResponseStatus) *AgentPoolProvisioningStatusResponseOperationStatus {
		return v.OperationStatus
	}).(AgentPoolProvisioningStatusResponseOperationStatusPtrOutput)
}

func (o AgentPoolProvisioningStatusResponseStatusOutput) ReadyReplicas() AgentPoolUpdateProfileResponseArrayOutput {
	return o.ApplyT(func(v AgentPoolProvisioningStatusResponseStatus) []AgentPoolUpdateProfileResponse {
		return v.ReadyReplicas
	}).(AgentPoolUpdateProfileResponseArrayOutput)
}

type AgentPoolProvisioningStatusResponseStatusPtrOutput struct{ *pulumi.OutputState }

func (AgentPoolProvisioningStatusResponseStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentPoolProvisioningStatusResponseStatus)(nil)).Elem()
}

func (o AgentPoolProvisioningStatusResponseStatusPtrOutput) ToAgentPoolProvisioningStatusResponseStatusPtrOutput() AgentPoolProvisioningStatusResponseStatusPtrOutput {
	return o
}

func (o AgentPoolProvisioningStatusResponseStatusPtrOutput) ToAgentPoolProvisioningStatusResponseStatusPtrOutputWithContext(ctx context.Context) AgentPoolProvisioningStatusResponseStatusPtrOutput {
	return o
}

func (o AgentPoolProvisioningStatusResponseStatusPtrOutput) Elem() AgentPoolProvisioningStatusResponseStatusOutput {
	return o.ApplyT(func(v *AgentPoolProvisioningStatusResponseStatus) AgentPoolProvisioningStatusResponseStatus {
		if v != nil {
			return *v
		}
		var ret AgentPoolProvisioningStatusResponseStatus
		return ret
	}).(AgentPoolProvisioningStatusResponseStatusOutput)
}

// ErrorMessage - Error messages during creation of agent pool
func (o AgentPoolProvisioningStatusResponseStatusPtrOutput) ErrorMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AgentPoolProvisioningStatusResponseStatus) *string {
		if v == nil {
			return nil
		}
		return v.ErrorMessage
	}).(pulumi.StringPtrOutput)
}

// Contains Provisioning errors
func (o AgentPoolProvisioningStatusResponseStatusPtrOutput) OperationStatus() AgentPoolProvisioningStatusResponseOperationStatusPtrOutput {
	return o.ApplyT(func(v *AgentPoolProvisioningStatusResponseStatus) *AgentPoolProvisioningStatusResponseOperationStatus {
		if v == nil {
			return nil
		}
		return v.OperationStatus
	}).(AgentPoolProvisioningStatusResponseOperationStatusPtrOutput)
}

func (o AgentPoolProvisioningStatusResponseStatusPtrOutput) ReadyReplicas() AgentPoolUpdateProfileResponseArrayOutput {
	return o.ApplyT(func(v *AgentPoolProvisioningStatusResponseStatus) []AgentPoolUpdateProfileResponse {
		if v == nil {
			return nil
		}
		return v.ReadyReplicas
	}).(AgentPoolUpdateProfileResponseArrayOutput)
}

// Defines the observed state of the agent pool
type AgentPoolProvisioningStatusStatus struct {
	// ErrorMessage - Error messages during creation of agent pool
	ErrorMessage *string `pulumi:"errorMessage"`
	// Contains Provisioning errors
	OperationStatus *AgentPoolProvisioningStatusOperationStatus `pulumi:"operationStatus"`
	ReadyReplicas   []AgentPoolUpdateProfile                    `pulumi:"readyReplicas"`
}

// AgentPoolProvisioningStatusStatusInput is an input type that accepts AgentPoolProvisioningStatusStatusArgs and AgentPoolProvisioningStatusStatusOutput values.
// You can construct a concrete instance of `AgentPoolProvisioningStatusStatusInput` via:
//
//	AgentPoolProvisioningStatusStatusArgs{...}
type AgentPoolProvisioningStatusStatusInput interface {
	pulumi.Input

	ToAgentPoolProvisioningStatusStatusOutput() AgentPoolProvisioningStatusStatusOutput
	ToAgentPoolProvisioningStatusStatusOutputWithContext(context.Context) AgentPoolProvisioningStatusStatusOutput
}

// Defines the observed state of the agent pool
type AgentPoolProvisioningStatusStatusArgs struct {
	// ErrorMessage - Error messages during creation of agent pool
	ErrorMessage pulumi.StringPtrInput `pulumi:"errorMessage"`
	// Contains Provisioning errors
	OperationStatus AgentPoolProvisioningStatusOperationStatusPtrInput `pulumi:"operationStatus"`
	ReadyReplicas   AgentPoolUpdateProfileArrayInput                   `pulumi:"readyReplicas"`
}

func (AgentPoolProvisioningStatusStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentPoolProvisioningStatusStatus)(nil)).Elem()
}

func (i AgentPoolProvisioningStatusStatusArgs) ToAgentPoolProvisioningStatusStatusOutput() AgentPoolProvisioningStatusStatusOutput {
	return i.ToAgentPoolProvisioningStatusStatusOutputWithContext(context.Background())
}

func (i AgentPoolProvisioningStatusStatusArgs) ToAgentPoolProvisioningStatusStatusOutputWithContext(ctx context.Context) AgentPoolProvisioningStatusStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentPoolProvisioningStatusStatusOutput)
}

func (i AgentPoolProvisioningStatusStatusArgs) ToAgentPoolProvisioningStatusStatusPtrOutput() AgentPoolProvisioningStatusStatusPtrOutput {
	return i.ToAgentPoolProvisioningStatusStatusPtrOutputWithContext(context.Background())
}

func (i AgentPoolProvisioningStatusStatusArgs) ToAgentPoolProvisioningStatusStatusPtrOutputWithContext(ctx context.Context) AgentPoolProvisioningStatusStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentPoolProvisioningStatusStatusOutput).ToAgentPoolProvisioningStatusStatusPtrOutputWithContext(ctx)
}

// AgentPoolProvisioningStatusStatusPtrInput is an input type that accepts AgentPoolProvisioningStatusStatusArgs, AgentPoolProvisioningStatusStatusPtr and AgentPoolProvisioningStatusStatusPtrOutput values.
// You can construct a concrete instance of `AgentPoolProvisioningStatusStatusPtrInput` via:
//
//	        AgentPoolProvisioningStatusStatusArgs{...}
//
//	or:
//
//	        nil
type AgentPoolProvisioningStatusStatusPtrInput interface {
	pulumi.Input

	ToAgentPoolProvisioningStatusStatusPtrOutput() AgentPoolProvisioningStatusStatusPtrOutput
	ToAgentPoolProvisioningStatusStatusPtrOutputWithContext(context.Context) AgentPoolProvisioningStatusStatusPtrOutput
}

type agentPoolProvisioningStatusStatusPtrType AgentPoolProvisioningStatusStatusArgs

func AgentPoolProvisioningStatusStatusPtr(v *AgentPoolProvisioningStatusStatusArgs) AgentPoolProvisioningStatusStatusPtrInput {
	return (*agentPoolProvisioningStatusStatusPtrType)(v)
}

func (*agentPoolProvisioningStatusStatusPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentPoolProvisioningStatusStatus)(nil)).Elem()
}

func (i *agentPoolProvisioningStatusStatusPtrType) ToAgentPoolProvisioningStatusStatusPtrOutput() AgentPoolProvisioningStatusStatusPtrOutput {
	return i.ToAgentPoolProvisioningStatusStatusPtrOutputWithContext(context.Background())
}

func (i *agentPoolProvisioningStatusStatusPtrType) ToAgentPoolProvisioningStatusStatusPtrOutputWithContext(ctx context.Context) AgentPoolProvisioningStatusStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentPoolProvisioningStatusStatusPtrOutput)
}

// Defines the observed state of the agent pool
type AgentPoolProvisioningStatusStatusOutput struct{ *pulumi.OutputState }

func (AgentPoolProvisioningStatusStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentPoolProvisioningStatusStatus)(nil)).Elem()
}

func (o AgentPoolProvisioningStatusStatusOutput) ToAgentPoolProvisioningStatusStatusOutput() AgentPoolProvisioningStatusStatusOutput {
	return o
}

func (o AgentPoolProvisioningStatusStatusOutput) ToAgentPoolProvisioningStatusStatusOutputWithContext(ctx context.Context) AgentPoolProvisioningStatusStatusOutput {
	return o
}

func (o AgentPoolProvisioningStatusStatusOutput) ToAgentPoolProvisioningStatusStatusPtrOutput() AgentPoolProvisioningStatusStatusPtrOutput {
	return o.ToAgentPoolProvisioningStatusStatusPtrOutputWithContext(context.Background())
}

func (o AgentPoolProvisioningStatusStatusOutput) ToAgentPoolProvisioningStatusStatusPtrOutputWithContext(ctx context.Context) AgentPoolProvisioningStatusStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AgentPoolProvisioningStatusStatus) *AgentPoolProvisioningStatusStatus {
		return &v
	}).(AgentPoolProvisioningStatusStatusPtrOutput)
}

// ErrorMessage - Error messages during creation of agent pool
func (o AgentPoolProvisioningStatusStatusOutput) ErrorMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentPoolProvisioningStatusStatus) *string { return v.ErrorMessage }).(pulumi.StringPtrOutput)
}

// Contains Provisioning errors
func (o AgentPoolProvisioningStatusStatusOutput) OperationStatus() AgentPoolProvisioningStatusOperationStatusPtrOutput {
	return o.ApplyT(func(v AgentPoolProvisioningStatusStatus) *AgentPoolProvisioningStatusOperationStatus {
		return v.OperationStatus
	}).(AgentPoolProvisioningStatusOperationStatusPtrOutput)
}

func (o AgentPoolProvisioningStatusStatusOutput) ReadyReplicas() AgentPoolUpdateProfileArrayOutput {
	return o.ApplyT(func(v AgentPoolProvisioningStatusStatus) []AgentPoolUpdateProfile { return v.ReadyReplicas }).(AgentPoolUpdateProfileArrayOutput)
}

type AgentPoolProvisioningStatusStatusPtrOutput struct{ *pulumi.OutputState }

func (AgentPoolProvisioningStatusStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentPoolProvisioningStatusStatus)(nil)).Elem()
}

func (o AgentPoolProvisioningStatusStatusPtrOutput) ToAgentPoolProvisioningStatusStatusPtrOutput() AgentPoolProvisioningStatusStatusPtrOutput {
	return o
}

func (o AgentPoolProvisioningStatusStatusPtrOutput) ToAgentPoolProvisioningStatusStatusPtrOutputWithContext(ctx context.Context) AgentPoolProvisioningStatusStatusPtrOutput {
	return o
}

func (o AgentPoolProvisioningStatusStatusPtrOutput) Elem() AgentPoolProvisioningStatusStatusOutput {
	return o.ApplyT(func(v *AgentPoolProvisioningStatusStatus) AgentPoolProvisioningStatusStatus {
		if v != nil {
			return *v
		}
		var ret AgentPoolProvisioningStatusStatus
		return ret
	}).(AgentPoolProvisioningStatusStatusOutput)
}

// ErrorMessage - Error messages during creation of agent pool
func (o AgentPoolProvisioningStatusStatusPtrOutput) ErrorMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AgentPoolProvisioningStatusStatus) *string {
		if v == nil {
			return nil
		}
		return v.ErrorMessage
	}).(pulumi.StringPtrOutput)
}

// Contains Provisioning errors
func (o AgentPoolProvisioningStatusStatusPtrOutput) OperationStatus() AgentPoolProvisioningStatusOperationStatusPtrOutput {
	return o.ApplyT(func(v *AgentPoolProvisioningStatusStatus) *AgentPoolProvisioningStatusOperationStatus {
		if v == nil {
			return nil
		}
		return v.OperationStatus
	}).(AgentPoolProvisioningStatusOperationStatusPtrOutput)
}

func (o AgentPoolProvisioningStatusStatusPtrOutput) ReadyReplicas() AgentPoolUpdateProfileArrayOutput {
	return o.ApplyT(func(v *AgentPoolProvisioningStatusStatus) []AgentPoolUpdateProfile {
		if v == nil {
			return nil
		}
		return v.ReadyReplicas
	}).(AgentPoolUpdateProfileArrayOutput)
}

// AgentPool update configuration
type AgentPoolUpdateProfile struct {
	// Count - Number of agents to host docker containers. Allowed values must be in the range of 1 to 100 (inclusive). The default value is 1.
	Count *int `pulumi:"count"`
	// VmSize - The size of the agent pool VMs.
	VmSize *string `pulumi:"vmSize"`
}

// Defaults sets the appropriate defaults for AgentPoolUpdateProfile
func (val *AgentPoolUpdateProfile) Defaults() *AgentPoolUpdateProfile {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Count == nil {
		count_ := 1
		tmp.Count = &count_
	}
	return &tmp
}

// AgentPoolUpdateProfileInput is an input type that accepts AgentPoolUpdateProfileArgs and AgentPoolUpdateProfileOutput values.
// You can construct a concrete instance of `AgentPoolUpdateProfileInput` via:
//
//	AgentPoolUpdateProfileArgs{...}
type AgentPoolUpdateProfileInput interface {
	pulumi.Input

	ToAgentPoolUpdateProfileOutput() AgentPoolUpdateProfileOutput
	ToAgentPoolUpdateProfileOutputWithContext(context.Context) AgentPoolUpdateProfileOutput
}

// AgentPool update configuration
type AgentPoolUpdateProfileArgs struct {
	// Count - Number of agents to host docker containers. Allowed values must be in the range of 1 to 100 (inclusive). The default value is 1.
	Count pulumi.IntPtrInput `pulumi:"count"`
	// VmSize - The size of the agent pool VMs.
	VmSize pulumi.StringPtrInput `pulumi:"vmSize"`
}

// Defaults sets the appropriate defaults for AgentPoolUpdateProfileArgs
func (val *AgentPoolUpdateProfileArgs) Defaults() *AgentPoolUpdateProfileArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Count == nil {
		tmp.Count = pulumi.IntPtr(1)
	}
	return &tmp
}
func (AgentPoolUpdateProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentPoolUpdateProfile)(nil)).Elem()
}

func (i AgentPoolUpdateProfileArgs) ToAgentPoolUpdateProfileOutput() AgentPoolUpdateProfileOutput {
	return i.ToAgentPoolUpdateProfileOutputWithContext(context.Background())
}

func (i AgentPoolUpdateProfileArgs) ToAgentPoolUpdateProfileOutputWithContext(ctx context.Context) AgentPoolUpdateProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentPoolUpdateProfileOutput)
}

// AgentPoolUpdateProfileArrayInput is an input type that accepts AgentPoolUpdateProfileArray and AgentPoolUpdateProfileArrayOutput values.
// You can construct a concrete instance of `AgentPoolUpdateProfileArrayInput` via:
//
//	AgentPoolUpdateProfileArray{ AgentPoolUpdateProfileArgs{...} }
type AgentPoolUpdateProfileArrayInput interface {
	pulumi.Input

	ToAgentPoolUpdateProfileArrayOutput() AgentPoolUpdateProfileArrayOutput
	ToAgentPoolUpdateProfileArrayOutputWithContext(context.Context) AgentPoolUpdateProfileArrayOutput
}

type AgentPoolUpdateProfileArray []AgentPoolUpdateProfileInput

func (AgentPoolUpdateProfileArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AgentPoolUpdateProfile)(nil)).Elem()
}

func (i AgentPoolUpdateProfileArray) ToAgentPoolUpdateProfileArrayOutput() AgentPoolUpdateProfileArrayOutput {
	return i.ToAgentPoolUpdateProfileArrayOutputWithContext(context.Background())
}

func (i AgentPoolUpdateProfileArray) ToAgentPoolUpdateProfileArrayOutputWithContext(ctx context.Context) AgentPoolUpdateProfileArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentPoolUpdateProfileArrayOutput)
}

// AgentPool update configuration
type AgentPoolUpdateProfileOutput struct{ *pulumi.OutputState }

func (AgentPoolUpdateProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentPoolUpdateProfile)(nil)).Elem()
}

func (o AgentPoolUpdateProfileOutput) ToAgentPoolUpdateProfileOutput() AgentPoolUpdateProfileOutput {
	return o
}

func (o AgentPoolUpdateProfileOutput) ToAgentPoolUpdateProfileOutputWithContext(ctx context.Context) AgentPoolUpdateProfileOutput {
	return o
}

// Count - Number of agents to host docker containers. Allowed values must be in the range of 1 to 100 (inclusive). The default value is 1.
func (o AgentPoolUpdateProfileOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AgentPoolUpdateProfile) *int { return v.Count }).(pulumi.IntPtrOutput)
}

// VmSize - The size of the agent pool VMs.
func (o AgentPoolUpdateProfileOutput) VmSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentPoolUpdateProfile) *string { return v.VmSize }).(pulumi.StringPtrOutput)
}

type AgentPoolUpdateProfileArrayOutput struct{ *pulumi.OutputState }

func (AgentPoolUpdateProfileArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AgentPoolUpdateProfile)(nil)).Elem()
}

func (o AgentPoolUpdateProfileArrayOutput) ToAgentPoolUpdateProfileArrayOutput() AgentPoolUpdateProfileArrayOutput {
	return o
}

func (o AgentPoolUpdateProfileArrayOutput) ToAgentPoolUpdateProfileArrayOutputWithContext(ctx context.Context) AgentPoolUpdateProfileArrayOutput {
	return o
}

func (o AgentPoolUpdateProfileArrayOutput) Index(i pulumi.IntInput) AgentPoolUpdateProfileOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AgentPoolUpdateProfile {
		return vs[0].([]AgentPoolUpdateProfile)[vs[1].(int)]
	}).(AgentPoolUpdateProfileOutput)
}

// AgentPool update configuration
type AgentPoolUpdateProfileResponse struct {
	// Count - Number of agents to host docker containers. Allowed values must be in the range of 1 to 100 (inclusive). The default value is 1.
	Count *int `pulumi:"count"`
	// VmSize - The size of the agent pool VMs.
	VmSize *string `pulumi:"vmSize"`
}

// Defaults sets the appropriate defaults for AgentPoolUpdateProfileResponse
func (val *AgentPoolUpdateProfileResponse) Defaults() *AgentPoolUpdateProfileResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Count == nil {
		count_ := 1
		tmp.Count = &count_
	}
	return &tmp
}

// AgentPool update configuration
type AgentPoolUpdateProfileResponseOutput struct{ *pulumi.OutputState }

func (AgentPoolUpdateProfileResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentPoolUpdateProfileResponse)(nil)).Elem()
}

func (o AgentPoolUpdateProfileResponseOutput) ToAgentPoolUpdateProfileResponseOutput() AgentPoolUpdateProfileResponseOutput {
	return o
}

func (o AgentPoolUpdateProfileResponseOutput) ToAgentPoolUpdateProfileResponseOutputWithContext(ctx context.Context) AgentPoolUpdateProfileResponseOutput {
	return o
}

// Count - Number of agents to host docker containers. Allowed values must be in the range of 1 to 100 (inclusive). The default value is 1.
func (o AgentPoolUpdateProfileResponseOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AgentPoolUpdateProfileResponse) *int { return v.Count }).(pulumi.IntPtrOutput)
}

// VmSize - The size of the agent pool VMs.
func (o AgentPoolUpdateProfileResponseOutput) VmSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentPoolUpdateProfileResponse) *string { return v.VmSize }).(pulumi.StringPtrOutput)
}

type AgentPoolUpdateProfileResponseArrayOutput struct{ *pulumi.OutputState }

func (AgentPoolUpdateProfileResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AgentPoolUpdateProfileResponse)(nil)).Elem()
}

func (o AgentPoolUpdateProfileResponseArrayOutput) ToAgentPoolUpdateProfileResponseArrayOutput() AgentPoolUpdateProfileResponseArrayOutput {
	return o
}

func (o AgentPoolUpdateProfileResponseArrayOutput) ToAgentPoolUpdateProfileResponseArrayOutputWithContext(ctx context.Context) AgentPoolUpdateProfileResponseArrayOutput {
	return o
}

func (o AgentPoolUpdateProfileResponseArrayOutput) Index(i pulumi.IntInput) AgentPoolUpdateProfileResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AgentPoolUpdateProfileResponse {
		return vs[0].([]AgentPoolUpdateProfileResponse)[vs[1].(int)]
	}).(AgentPoolUpdateProfileResponseOutput)
}

// CloudProviderProfile - The underlying cloud infra provider properties.
type CloudProviderProfile struct {
	// InfraNetworkProfile - List of infra network profiles for the provisioned cluster
	InfraNetworkProfile *CloudProviderProfileInfraNetworkProfile `pulumi:"infraNetworkProfile"`
}

// CloudProviderProfileInput is an input type that accepts CloudProviderProfileArgs and CloudProviderProfileOutput values.
// You can construct a concrete instance of `CloudProviderProfileInput` via:
//
//	CloudProviderProfileArgs{...}
type CloudProviderProfileInput interface {
	pulumi.Input

	ToCloudProviderProfileOutput() CloudProviderProfileOutput
	ToCloudProviderProfileOutputWithContext(context.Context) CloudProviderProfileOutput
}

// CloudProviderProfile - The underlying cloud infra provider properties.
type CloudProviderProfileArgs struct {
	// InfraNetworkProfile - List of infra network profiles for the provisioned cluster
	InfraNetworkProfile CloudProviderProfileInfraNetworkProfilePtrInput `pulumi:"infraNetworkProfile"`
}

func (CloudProviderProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudProviderProfile)(nil)).Elem()
}

func (i CloudProviderProfileArgs) ToCloudProviderProfileOutput() CloudProviderProfileOutput {
	return i.ToCloudProviderProfileOutputWithContext(context.Background())
}

func (i CloudProviderProfileArgs) ToCloudProviderProfileOutputWithContext(ctx context.Context) CloudProviderProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudProviderProfileOutput)
}

func (i CloudProviderProfileArgs) ToCloudProviderProfilePtrOutput() CloudProviderProfilePtrOutput {
	return i.ToCloudProviderProfilePtrOutputWithContext(context.Background())
}

func (i CloudProviderProfileArgs) ToCloudProviderProfilePtrOutputWithContext(ctx context.Context) CloudProviderProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudProviderProfileOutput).ToCloudProviderProfilePtrOutputWithContext(ctx)
}

// CloudProviderProfilePtrInput is an input type that accepts CloudProviderProfileArgs, CloudProviderProfilePtr and CloudProviderProfilePtrOutput values.
// You can construct a concrete instance of `CloudProviderProfilePtrInput` via:
//
//	        CloudProviderProfileArgs{...}
//
//	or:
//
//	        nil
type CloudProviderProfilePtrInput interface {
	pulumi.Input

	ToCloudProviderProfilePtrOutput() CloudProviderProfilePtrOutput
	ToCloudProviderProfilePtrOutputWithContext(context.Context) CloudProviderProfilePtrOutput
}

type cloudProviderProfilePtrType CloudProviderProfileArgs

func CloudProviderProfilePtr(v *CloudProviderProfileArgs) CloudProviderProfilePtrInput {
	return (*cloudProviderProfilePtrType)(v)
}

func (*cloudProviderProfilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudProviderProfile)(nil)).Elem()
}

func (i *cloudProviderProfilePtrType) ToCloudProviderProfilePtrOutput() CloudProviderProfilePtrOutput {
	return i.ToCloudProviderProfilePtrOutputWithContext(context.Background())
}

func (i *cloudProviderProfilePtrType) ToCloudProviderProfilePtrOutputWithContext(ctx context.Context) CloudProviderProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudProviderProfilePtrOutput)
}

// CloudProviderProfile - The underlying cloud infra provider properties.
type CloudProviderProfileOutput struct{ *pulumi.OutputState }

func (CloudProviderProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudProviderProfile)(nil)).Elem()
}

func (o CloudProviderProfileOutput) ToCloudProviderProfileOutput() CloudProviderProfileOutput {
	return o
}

func (o CloudProviderProfileOutput) ToCloudProviderProfileOutputWithContext(ctx context.Context) CloudProviderProfileOutput {
	return o
}

func (o CloudProviderProfileOutput) ToCloudProviderProfilePtrOutput() CloudProviderProfilePtrOutput {
	return o.ToCloudProviderProfilePtrOutputWithContext(context.Background())
}

func (o CloudProviderProfileOutput) ToCloudProviderProfilePtrOutputWithContext(ctx context.Context) CloudProviderProfilePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CloudProviderProfile) *CloudProviderProfile {
		return &v
	}).(CloudProviderProfilePtrOutput)
}

// InfraNetworkProfile - List of infra network profiles for the provisioned cluster
func (o CloudProviderProfileOutput) InfraNetworkProfile() CloudProviderProfileInfraNetworkProfilePtrOutput {
	return o.ApplyT(func(v CloudProviderProfile) *CloudProviderProfileInfraNetworkProfile { return v.InfraNetworkProfile }).(CloudProviderProfileInfraNetworkProfilePtrOutput)
}

type CloudProviderProfilePtrOutput struct{ *pulumi.OutputState }

func (CloudProviderProfilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudProviderProfile)(nil)).Elem()
}

func (o CloudProviderProfilePtrOutput) ToCloudProviderProfilePtrOutput() CloudProviderProfilePtrOutput {
	return o
}

func (o CloudProviderProfilePtrOutput) ToCloudProviderProfilePtrOutputWithContext(ctx context.Context) CloudProviderProfilePtrOutput {
	return o
}

func (o CloudProviderProfilePtrOutput) Elem() CloudProviderProfileOutput {
	return o.ApplyT(func(v *CloudProviderProfile) CloudProviderProfile {
		if v != nil {
			return *v
		}
		var ret CloudProviderProfile
		return ret
	}).(CloudProviderProfileOutput)
}

// InfraNetworkProfile - List of infra network profiles for the provisioned cluster
func (o CloudProviderProfilePtrOutput) InfraNetworkProfile() CloudProviderProfileInfraNetworkProfilePtrOutput {
	return o.ApplyT(func(v *CloudProviderProfile) *CloudProviderProfileInfraNetworkProfile {
		if v == nil {
			return nil
		}
		return v.InfraNetworkProfile
	}).(CloudProviderProfileInfraNetworkProfilePtrOutput)
}

// InfraNetworkProfile - List of infra network profiles for the provisioned cluster
type CloudProviderProfileInfraNetworkProfile struct {
	// Array of references to azure resource corresponding to the Network object e.g. /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/logicalNetworks/{logicalNetworkName}
	VnetSubnetIds []string `pulumi:"vnetSubnetIds"`
}

// CloudProviderProfileInfraNetworkProfileInput is an input type that accepts CloudProviderProfileInfraNetworkProfileArgs and CloudProviderProfileInfraNetworkProfileOutput values.
// You can construct a concrete instance of `CloudProviderProfileInfraNetworkProfileInput` via:
//
//	CloudProviderProfileInfraNetworkProfileArgs{...}
type CloudProviderProfileInfraNetworkProfileInput interface {
	pulumi.Input

	ToCloudProviderProfileInfraNetworkProfileOutput() CloudProviderProfileInfraNetworkProfileOutput
	ToCloudProviderProfileInfraNetworkProfileOutputWithContext(context.Context) CloudProviderProfileInfraNetworkProfileOutput
}

// InfraNetworkProfile - List of infra network profiles for the provisioned cluster
type CloudProviderProfileInfraNetworkProfileArgs struct {
	// Array of references to azure resource corresponding to the Network object e.g. /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/logicalNetworks/{logicalNetworkName}
	VnetSubnetIds pulumi.StringArrayInput `pulumi:"vnetSubnetIds"`
}

func (CloudProviderProfileInfraNetworkProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudProviderProfileInfraNetworkProfile)(nil)).Elem()
}

func (i CloudProviderProfileInfraNetworkProfileArgs) ToCloudProviderProfileInfraNetworkProfileOutput() CloudProviderProfileInfraNetworkProfileOutput {
	return i.ToCloudProviderProfileInfraNetworkProfileOutputWithContext(context.Background())
}

func (i CloudProviderProfileInfraNetworkProfileArgs) ToCloudProviderProfileInfraNetworkProfileOutputWithContext(ctx context.Context) CloudProviderProfileInfraNetworkProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudProviderProfileInfraNetworkProfileOutput)
}

func (i CloudProviderProfileInfraNetworkProfileArgs) ToCloudProviderProfileInfraNetworkProfilePtrOutput() CloudProviderProfileInfraNetworkProfilePtrOutput {
	return i.ToCloudProviderProfileInfraNetworkProfilePtrOutputWithContext(context.Background())
}

func (i CloudProviderProfileInfraNetworkProfileArgs) ToCloudProviderProfileInfraNetworkProfilePtrOutputWithContext(ctx context.Context) CloudProviderProfileInfraNetworkProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudProviderProfileInfraNetworkProfileOutput).ToCloudProviderProfileInfraNetworkProfilePtrOutputWithContext(ctx)
}

// CloudProviderProfileInfraNetworkProfilePtrInput is an input type that accepts CloudProviderProfileInfraNetworkProfileArgs, CloudProviderProfileInfraNetworkProfilePtr and CloudProviderProfileInfraNetworkProfilePtrOutput values.
// You can construct a concrete instance of `CloudProviderProfileInfraNetworkProfilePtrInput` via:
//
//	        CloudProviderProfileInfraNetworkProfileArgs{...}
//
//	or:
//
//	        nil
type CloudProviderProfileInfraNetworkProfilePtrInput interface {
	pulumi.Input

	ToCloudProviderProfileInfraNetworkProfilePtrOutput() CloudProviderProfileInfraNetworkProfilePtrOutput
	ToCloudProviderProfileInfraNetworkProfilePtrOutputWithContext(context.Context) CloudProviderProfileInfraNetworkProfilePtrOutput
}

type cloudProviderProfileInfraNetworkProfilePtrType CloudProviderProfileInfraNetworkProfileArgs

func CloudProviderProfileInfraNetworkProfilePtr(v *CloudProviderProfileInfraNetworkProfileArgs) CloudProviderProfileInfraNetworkProfilePtrInput {
	return (*cloudProviderProfileInfraNetworkProfilePtrType)(v)
}

func (*cloudProviderProfileInfraNetworkProfilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudProviderProfileInfraNetworkProfile)(nil)).Elem()
}

func (i *cloudProviderProfileInfraNetworkProfilePtrType) ToCloudProviderProfileInfraNetworkProfilePtrOutput() CloudProviderProfileInfraNetworkProfilePtrOutput {
	return i.ToCloudProviderProfileInfraNetworkProfilePtrOutputWithContext(context.Background())
}

func (i *cloudProviderProfileInfraNetworkProfilePtrType) ToCloudProviderProfileInfraNetworkProfilePtrOutputWithContext(ctx context.Context) CloudProviderProfileInfraNetworkProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudProviderProfileInfraNetworkProfilePtrOutput)
}

// InfraNetworkProfile - List of infra network profiles for the provisioned cluster
type CloudProviderProfileInfraNetworkProfileOutput struct{ *pulumi.OutputState }

func (CloudProviderProfileInfraNetworkProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudProviderProfileInfraNetworkProfile)(nil)).Elem()
}

func (o CloudProviderProfileInfraNetworkProfileOutput) ToCloudProviderProfileInfraNetworkProfileOutput() CloudProviderProfileInfraNetworkProfileOutput {
	return o
}

func (o CloudProviderProfileInfraNetworkProfileOutput) ToCloudProviderProfileInfraNetworkProfileOutputWithContext(ctx context.Context) CloudProviderProfileInfraNetworkProfileOutput {
	return o
}

func (o CloudProviderProfileInfraNetworkProfileOutput) ToCloudProviderProfileInfraNetworkProfilePtrOutput() CloudProviderProfileInfraNetworkProfilePtrOutput {
	return o.ToCloudProviderProfileInfraNetworkProfilePtrOutputWithContext(context.Background())
}

func (o CloudProviderProfileInfraNetworkProfileOutput) ToCloudProviderProfileInfraNetworkProfilePtrOutputWithContext(ctx context.Context) CloudProviderProfileInfraNetworkProfilePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CloudProviderProfileInfraNetworkProfile) *CloudProviderProfileInfraNetworkProfile {
		return &v
	}).(CloudProviderProfileInfraNetworkProfilePtrOutput)
}

// Array of references to azure resource corresponding to the Network object e.g. /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/logicalNetworks/{logicalNetworkName}
func (o CloudProviderProfileInfraNetworkProfileOutput) VnetSubnetIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CloudProviderProfileInfraNetworkProfile) []string { return v.VnetSubnetIds }).(pulumi.StringArrayOutput)
}

type CloudProviderProfileInfraNetworkProfilePtrOutput struct{ *pulumi.OutputState }

func (CloudProviderProfileInfraNetworkProfilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudProviderProfileInfraNetworkProfile)(nil)).Elem()
}

func (o CloudProviderProfileInfraNetworkProfilePtrOutput) ToCloudProviderProfileInfraNetworkProfilePtrOutput() CloudProviderProfileInfraNetworkProfilePtrOutput {
	return o
}

func (o CloudProviderProfileInfraNetworkProfilePtrOutput) ToCloudProviderProfileInfraNetworkProfilePtrOutputWithContext(ctx context.Context) CloudProviderProfileInfraNetworkProfilePtrOutput {
	return o
}

func (o CloudProviderProfileInfraNetworkProfilePtrOutput) Elem() CloudProviderProfileInfraNetworkProfileOutput {
	return o.ApplyT(func(v *CloudProviderProfileInfraNetworkProfile) CloudProviderProfileInfraNetworkProfile {
		if v != nil {
			return *v
		}
		var ret CloudProviderProfileInfraNetworkProfile
		return ret
	}).(CloudProviderProfileInfraNetworkProfileOutput)
}

// Array of references to azure resource corresponding to the Network object e.g. /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/logicalNetworks/{logicalNetworkName}
func (o CloudProviderProfileInfraNetworkProfilePtrOutput) VnetSubnetIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *CloudProviderProfileInfraNetworkProfile) []string {
		if v == nil {
			return nil
		}
		return v.VnetSubnetIds
	}).(pulumi.StringArrayOutput)
}

// CloudProviderProfile - The underlying cloud infra provider properties.
type CloudProviderProfileResponse struct {
	// InfraNetworkProfile - List of infra network profiles for the provisioned cluster
	InfraNetworkProfile *CloudProviderProfileResponseInfraNetworkProfile `pulumi:"infraNetworkProfile"`
}

// CloudProviderProfile - The underlying cloud infra provider properties.
type CloudProviderProfileResponseOutput struct{ *pulumi.OutputState }

func (CloudProviderProfileResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudProviderProfileResponse)(nil)).Elem()
}

func (o CloudProviderProfileResponseOutput) ToCloudProviderProfileResponseOutput() CloudProviderProfileResponseOutput {
	return o
}

func (o CloudProviderProfileResponseOutput) ToCloudProviderProfileResponseOutputWithContext(ctx context.Context) CloudProviderProfileResponseOutput {
	return o
}

// InfraNetworkProfile - List of infra network profiles for the provisioned cluster
func (o CloudProviderProfileResponseOutput) InfraNetworkProfile() CloudProviderProfileResponseInfraNetworkProfilePtrOutput {
	return o.ApplyT(func(v CloudProviderProfileResponse) *CloudProviderProfileResponseInfraNetworkProfile {
		return v.InfraNetworkProfile
	}).(CloudProviderProfileResponseInfraNetworkProfilePtrOutput)
}

type CloudProviderProfileResponsePtrOutput struct{ *pulumi.OutputState }

func (CloudProviderProfileResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudProviderProfileResponse)(nil)).Elem()
}

func (o CloudProviderProfileResponsePtrOutput) ToCloudProviderProfileResponsePtrOutput() CloudProviderProfileResponsePtrOutput {
	return o
}

func (o CloudProviderProfileResponsePtrOutput) ToCloudProviderProfileResponsePtrOutputWithContext(ctx context.Context) CloudProviderProfileResponsePtrOutput {
	return o
}

func (o CloudProviderProfileResponsePtrOutput) Elem() CloudProviderProfileResponseOutput {
	return o.ApplyT(func(v *CloudProviderProfileResponse) CloudProviderProfileResponse {
		if v != nil {
			return *v
		}
		var ret CloudProviderProfileResponse
		return ret
	}).(CloudProviderProfileResponseOutput)
}

// InfraNetworkProfile - List of infra network profiles for the provisioned cluster
func (o CloudProviderProfileResponsePtrOutput) InfraNetworkProfile() CloudProviderProfileResponseInfraNetworkProfilePtrOutput {
	return o.ApplyT(func(v *CloudProviderProfileResponse) *CloudProviderProfileResponseInfraNetworkProfile {
		if v == nil {
			return nil
		}
		return v.InfraNetworkProfile
	}).(CloudProviderProfileResponseInfraNetworkProfilePtrOutput)
}

// InfraNetworkProfile - List of infra network profiles for the provisioned cluster
type CloudProviderProfileResponseInfraNetworkProfile struct {
	// Array of references to azure resource corresponding to the Network object e.g. /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/logicalNetworks/{logicalNetworkName}
	VnetSubnetIds []string `pulumi:"vnetSubnetIds"`
}

// InfraNetworkProfile - List of infra network profiles for the provisioned cluster
type CloudProviderProfileResponseInfraNetworkProfileOutput struct{ *pulumi.OutputState }

func (CloudProviderProfileResponseInfraNetworkProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudProviderProfileResponseInfraNetworkProfile)(nil)).Elem()
}

func (o CloudProviderProfileResponseInfraNetworkProfileOutput) ToCloudProviderProfileResponseInfraNetworkProfileOutput() CloudProviderProfileResponseInfraNetworkProfileOutput {
	return o
}

func (o CloudProviderProfileResponseInfraNetworkProfileOutput) ToCloudProviderProfileResponseInfraNetworkProfileOutputWithContext(ctx context.Context) CloudProviderProfileResponseInfraNetworkProfileOutput {
	return o
}

// Array of references to azure resource corresponding to the Network object e.g. /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/logicalNetworks/{logicalNetworkName}
func (o CloudProviderProfileResponseInfraNetworkProfileOutput) VnetSubnetIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CloudProviderProfileResponseInfraNetworkProfile) []string { return v.VnetSubnetIds }).(pulumi.StringArrayOutput)
}

type CloudProviderProfileResponseInfraNetworkProfilePtrOutput struct{ *pulumi.OutputState }

func (CloudProviderProfileResponseInfraNetworkProfilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudProviderProfileResponseInfraNetworkProfile)(nil)).Elem()
}

func (o CloudProviderProfileResponseInfraNetworkProfilePtrOutput) ToCloudProviderProfileResponseInfraNetworkProfilePtrOutput() CloudProviderProfileResponseInfraNetworkProfilePtrOutput {
	return o
}

func (o CloudProviderProfileResponseInfraNetworkProfilePtrOutput) ToCloudProviderProfileResponseInfraNetworkProfilePtrOutputWithContext(ctx context.Context) CloudProviderProfileResponseInfraNetworkProfilePtrOutput {
	return o
}

func (o CloudProviderProfileResponseInfraNetworkProfilePtrOutput) Elem() CloudProviderProfileResponseInfraNetworkProfileOutput {
	return o.ApplyT(func(v *CloudProviderProfileResponseInfraNetworkProfile) CloudProviderProfileResponseInfraNetworkProfile {
		if v != nil {
			return *v
		}
		var ret CloudProviderProfileResponseInfraNetworkProfile
		return ret
	}).(CloudProviderProfileResponseInfraNetworkProfileOutput)
}

// Array of references to azure resource corresponding to the Network object e.g. /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/logicalNetworks/{logicalNetworkName}
func (o CloudProviderProfileResponseInfraNetworkProfilePtrOutput) VnetSubnetIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *CloudProviderProfileResponseInfraNetworkProfile) []string {
		if v == nil {
			return nil
		}
		return v.VnetSubnetIds
	}).(pulumi.StringArrayOutput)
}

// API server endpoint for the control plane
type ControlPlaneEndpointProfileControlPlaneEndpoint struct {
	// Host IP address for API server
	HostIP *string `pulumi:"hostIP"`
	// Port for the API server
	Port *int `pulumi:"port"`
}

// ControlPlaneEndpointProfileControlPlaneEndpointInput is an input type that accepts ControlPlaneEndpointProfileControlPlaneEndpointArgs and ControlPlaneEndpointProfileControlPlaneEndpointOutput values.
// You can construct a concrete instance of `ControlPlaneEndpointProfileControlPlaneEndpointInput` via:
//
//	ControlPlaneEndpointProfileControlPlaneEndpointArgs{...}
type ControlPlaneEndpointProfileControlPlaneEndpointInput interface {
	pulumi.Input

	ToControlPlaneEndpointProfileControlPlaneEndpointOutput() ControlPlaneEndpointProfileControlPlaneEndpointOutput
	ToControlPlaneEndpointProfileControlPlaneEndpointOutputWithContext(context.Context) ControlPlaneEndpointProfileControlPlaneEndpointOutput
}

// API server endpoint for the control plane
type ControlPlaneEndpointProfileControlPlaneEndpointArgs struct {
	// Host IP address for API server
	HostIP pulumi.StringPtrInput `pulumi:"hostIP"`
	// Port for the API server
	Port pulumi.IntPtrInput `pulumi:"port"`
}

func (ControlPlaneEndpointProfileControlPlaneEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ControlPlaneEndpointProfileControlPlaneEndpoint)(nil)).Elem()
}

func (i ControlPlaneEndpointProfileControlPlaneEndpointArgs) ToControlPlaneEndpointProfileControlPlaneEndpointOutput() ControlPlaneEndpointProfileControlPlaneEndpointOutput {
	return i.ToControlPlaneEndpointProfileControlPlaneEndpointOutputWithContext(context.Background())
}

func (i ControlPlaneEndpointProfileControlPlaneEndpointArgs) ToControlPlaneEndpointProfileControlPlaneEndpointOutputWithContext(ctx context.Context) ControlPlaneEndpointProfileControlPlaneEndpointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ControlPlaneEndpointProfileControlPlaneEndpointOutput)
}

func (i ControlPlaneEndpointProfileControlPlaneEndpointArgs) ToControlPlaneEndpointProfileControlPlaneEndpointPtrOutput() ControlPlaneEndpointProfileControlPlaneEndpointPtrOutput {
	return i.ToControlPlaneEndpointProfileControlPlaneEndpointPtrOutputWithContext(context.Background())
}

func (i ControlPlaneEndpointProfileControlPlaneEndpointArgs) ToControlPlaneEndpointProfileControlPlaneEndpointPtrOutputWithContext(ctx context.Context) ControlPlaneEndpointProfileControlPlaneEndpointPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ControlPlaneEndpointProfileControlPlaneEndpointOutput).ToControlPlaneEndpointProfileControlPlaneEndpointPtrOutputWithContext(ctx)
}

// ControlPlaneEndpointProfileControlPlaneEndpointPtrInput is an input type that accepts ControlPlaneEndpointProfileControlPlaneEndpointArgs, ControlPlaneEndpointProfileControlPlaneEndpointPtr and ControlPlaneEndpointProfileControlPlaneEndpointPtrOutput values.
// You can construct a concrete instance of `ControlPlaneEndpointProfileControlPlaneEndpointPtrInput` via:
//
//	        ControlPlaneEndpointProfileControlPlaneEndpointArgs{...}
//
//	or:
//
//	        nil
type ControlPlaneEndpointProfileControlPlaneEndpointPtrInput interface {
	pulumi.Input

	ToControlPlaneEndpointProfileControlPlaneEndpointPtrOutput() ControlPlaneEndpointProfileControlPlaneEndpointPtrOutput
	ToControlPlaneEndpointProfileControlPlaneEndpointPtrOutputWithContext(context.Context) ControlPlaneEndpointProfileControlPlaneEndpointPtrOutput
}

type controlPlaneEndpointProfileControlPlaneEndpointPtrType ControlPlaneEndpointProfileControlPlaneEndpointArgs

func ControlPlaneEndpointProfileControlPlaneEndpointPtr(v *ControlPlaneEndpointProfileControlPlaneEndpointArgs) ControlPlaneEndpointProfileControlPlaneEndpointPtrInput {
	return (*controlPlaneEndpointProfileControlPlaneEndpointPtrType)(v)
}

func (*controlPlaneEndpointProfileControlPlaneEndpointPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ControlPlaneEndpointProfileControlPlaneEndpoint)(nil)).Elem()
}

func (i *controlPlaneEndpointProfileControlPlaneEndpointPtrType) ToControlPlaneEndpointProfileControlPlaneEndpointPtrOutput() ControlPlaneEndpointProfileControlPlaneEndpointPtrOutput {
	return i.ToControlPlaneEndpointProfileControlPlaneEndpointPtrOutputWithContext(context.Background())
}

func (i *controlPlaneEndpointProfileControlPlaneEndpointPtrType) ToControlPlaneEndpointProfileControlPlaneEndpointPtrOutputWithContext(ctx context.Context) ControlPlaneEndpointProfileControlPlaneEndpointPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ControlPlaneEndpointProfileControlPlaneEndpointPtrOutput)
}

// API server endpoint for the control plane
type ControlPlaneEndpointProfileControlPlaneEndpointOutput struct{ *pulumi.OutputState }

func (ControlPlaneEndpointProfileControlPlaneEndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ControlPlaneEndpointProfileControlPlaneEndpoint)(nil)).Elem()
}

func (o ControlPlaneEndpointProfileControlPlaneEndpointOutput) ToControlPlaneEndpointProfileControlPlaneEndpointOutput() ControlPlaneEndpointProfileControlPlaneEndpointOutput {
	return o
}

func (o ControlPlaneEndpointProfileControlPlaneEndpointOutput) ToControlPlaneEndpointProfileControlPlaneEndpointOutputWithContext(ctx context.Context) ControlPlaneEndpointProfileControlPlaneEndpointOutput {
	return o
}

func (o ControlPlaneEndpointProfileControlPlaneEndpointOutput) ToControlPlaneEndpointProfileControlPlaneEndpointPtrOutput() ControlPlaneEndpointProfileControlPlaneEndpointPtrOutput {
	return o.ToControlPlaneEndpointProfileControlPlaneEndpointPtrOutputWithContext(context.Background())
}

func (o ControlPlaneEndpointProfileControlPlaneEndpointOutput) ToControlPlaneEndpointProfileControlPlaneEndpointPtrOutputWithContext(ctx context.Context) ControlPlaneEndpointProfileControlPlaneEndpointPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ControlPlaneEndpointProfileControlPlaneEndpoint) *ControlPlaneEndpointProfileControlPlaneEndpoint {
		return &v
	}).(ControlPlaneEndpointProfileControlPlaneEndpointPtrOutput)
}

// Host IP address for API server
func (o ControlPlaneEndpointProfileControlPlaneEndpointOutput) HostIP() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ControlPlaneEndpointProfileControlPlaneEndpoint) *string { return v.HostIP }).(pulumi.StringPtrOutput)
}

// Port for the API server
func (o ControlPlaneEndpointProfileControlPlaneEndpointOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ControlPlaneEndpointProfileControlPlaneEndpoint) *int { return v.Port }).(pulumi.IntPtrOutput)
}

type ControlPlaneEndpointProfileControlPlaneEndpointPtrOutput struct{ *pulumi.OutputState }

func (ControlPlaneEndpointProfileControlPlaneEndpointPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ControlPlaneEndpointProfileControlPlaneEndpoint)(nil)).Elem()
}

func (o ControlPlaneEndpointProfileControlPlaneEndpointPtrOutput) ToControlPlaneEndpointProfileControlPlaneEndpointPtrOutput() ControlPlaneEndpointProfileControlPlaneEndpointPtrOutput {
	return o
}

func (o ControlPlaneEndpointProfileControlPlaneEndpointPtrOutput) ToControlPlaneEndpointProfileControlPlaneEndpointPtrOutputWithContext(ctx context.Context) ControlPlaneEndpointProfileControlPlaneEndpointPtrOutput {
	return o
}

func (o ControlPlaneEndpointProfileControlPlaneEndpointPtrOutput) Elem() ControlPlaneEndpointProfileControlPlaneEndpointOutput {
	return o.ApplyT(func(v *ControlPlaneEndpointProfileControlPlaneEndpoint) ControlPlaneEndpointProfileControlPlaneEndpoint {
		if v != nil {
			return *v
		}
		var ret ControlPlaneEndpointProfileControlPlaneEndpoint
		return ret
	}).(ControlPlaneEndpointProfileControlPlaneEndpointOutput)
}

// Host IP address for API server
func (o ControlPlaneEndpointProfileControlPlaneEndpointPtrOutput) HostIP() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ControlPlaneEndpointProfileControlPlaneEndpoint) *string {
		if v == nil {
			return nil
		}
		return v.HostIP
	}).(pulumi.StringPtrOutput)
}

// Port for the API server
func (o ControlPlaneEndpointProfileControlPlaneEndpointPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ControlPlaneEndpointProfileControlPlaneEndpoint) *int {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.IntPtrOutput)
}

// API server endpoint for the control plane
type ControlPlaneEndpointProfileResponseControlPlaneEndpoint struct {
	// Host IP address for API server
	HostIP *string `pulumi:"hostIP"`
	// Port for the API server
	Port *int `pulumi:"port"`
}

// API server endpoint for the control plane
type ControlPlaneEndpointProfileResponseControlPlaneEndpointOutput struct{ *pulumi.OutputState }

func (ControlPlaneEndpointProfileResponseControlPlaneEndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ControlPlaneEndpointProfileResponseControlPlaneEndpoint)(nil)).Elem()
}

func (o ControlPlaneEndpointProfileResponseControlPlaneEndpointOutput) ToControlPlaneEndpointProfileResponseControlPlaneEndpointOutput() ControlPlaneEndpointProfileResponseControlPlaneEndpointOutput {
	return o
}

func (o ControlPlaneEndpointProfileResponseControlPlaneEndpointOutput) ToControlPlaneEndpointProfileResponseControlPlaneEndpointOutputWithContext(ctx context.Context) ControlPlaneEndpointProfileResponseControlPlaneEndpointOutput {
	return o
}

// Host IP address for API server
func (o ControlPlaneEndpointProfileResponseControlPlaneEndpointOutput) HostIP() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ControlPlaneEndpointProfileResponseControlPlaneEndpoint) *string { return v.HostIP }).(pulumi.StringPtrOutput)
}

// Port for the API server
func (o ControlPlaneEndpointProfileResponseControlPlaneEndpointOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ControlPlaneEndpointProfileResponseControlPlaneEndpoint) *int { return v.Port }).(pulumi.IntPtrOutput)
}

type ControlPlaneEndpointProfileResponseControlPlaneEndpointPtrOutput struct{ *pulumi.OutputState }

func (ControlPlaneEndpointProfileResponseControlPlaneEndpointPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ControlPlaneEndpointProfileResponseControlPlaneEndpoint)(nil)).Elem()
}

func (o ControlPlaneEndpointProfileResponseControlPlaneEndpointPtrOutput) ToControlPlaneEndpointProfileResponseControlPlaneEndpointPtrOutput() ControlPlaneEndpointProfileResponseControlPlaneEndpointPtrOutput {
	return o
}

func (o ControlPlaneEndpointProfileResponseControlPlaneEndpointPtrOutput) ToControlPlaneEndpointProfileResponseControlPlaneEndpointPtrOutputWithContext(ctx context.Context) ControlPlaneEndpointProfileResponseControlPlaneEndpointPtrOutput {
	return o
}

func (o ControlPlaneEndpointProfileResponseControlPlaneEndpointPtrOutput) Elem() ControlPlaneEndpointProfileResponseControlPlaneEndpointOutput {
	return o.ApplyT(func(v *ControlPlaneEndpointProfileResponseControlPlaneEndpoint) ControlPlaneEndpointProfileResponseControlPlaneEndpoint {
		if v != nil {
			return *v
		}
		var ret ControlPlaneEndpointProfileResponseControlPlaneEndpoint
		return ret
	}).(ControlPlaneEndpointProfileResponseControlPlaneEndpointOutput)
}

// Host IP address for API server
func (o ControlPlaneEndpointProfileResponseControlPlaneEndpointPtrOutput) HostIP() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ControlPlaneEndpointProfileResponseControlPlaneEndpoint) *string {
		if v == nil {
			return nil
		}
		return v.HostIP
	}).(pulumi.StringPtrOutput)
}

// Port for the API server
func (o ControlPlaneEndpointProfileResponseControlPlaneEndpointPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ControlPlaneEndpointProfileResponseControlPlaneEndpoint) *int {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.IntPtrOutput)
}

// ControlPlaneProfile - The control plane properties for the provisioned cluster.
type ControlPlaneProfile struct {
	// AvailabilityZones - The list of Availability zones to use for nodes. Datacenter racks modelled as zones
	AvailabilityZones []string `pulumi:"availabilityZones"`
	// API server endpoint for the control plane
	ControlPlaneEndpoint *ControlPlaneEndpointProfileControlPlaneEndpoint `pulumi:"controlPlaneEndpoint"`
	// Count - Number of agents to host docker containers. Allowed values must be in the range of 1 to 100 (inclusive). The default value is 1.
	Count *int `pulumi:"count"`
	// Profile for Linux VMs in the container service cluster.
	LinuxProfile *LinuxProfileProperties `pulumi:"linuxProfile"`
	// Unique name of the agent pool profile in the context of the subscription and resource group.
	Name *string `pulumi:"name"`
	// The version of node image
	NodeImageVersion *string `pulumi:"nodeImageVersion"`
	// Specifies the OS SKU used by the agent pool. The default is CBLMariner if OSType is Linux. The default is Windows2019 when OSType is Windows.
	OsSKU *string `pulumi:"osSKU"`
	// OsType - OsType to be used to specify os type. Choose from Linux and Windows. Default to Linux. Possible values include: 'Linux', 'Windows'
	OsType *string `pulumi:"osType"`
	// VmSize - The size of the agent pool VMs.
	VmSize *string `pulumi:"vmSize"`
}

// Defaults sets the appropriate defaults for ControlPlaneProfile
func (val *ControlPlaneProfile) Defaults() *ControlPlaneProfile {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Count == nil {
		count_ := 1
		tmp.Count = &count_
	}
	return &tmp
}

// ControlPlaneProfileInput is an input type that accepts ControlPlaneProfileArgs and ControlPlaneProfileOutput values.
// You can construct a concrete instance of `ControlPlaneProfileInput` via:
//
//	ControlPlaneProfileArgs{...}
type ControlPlaneProfileInput interface {
	pulumi.Input

	ToControlPlaneProfileOutput() ControlPlaneProfileOutput
	ToControlPlaneProfileOutputWithContext(context.Context) ControlPlaneProfileOutput
}

// ControlPlaneProfile - The control plane properties for the provisioned cluster.
type ControlPlaneProfileArgs struct {
	// AvailabilityZones - The list of Availability zones to use for nodes. Datacenter racks modelled as zones
	AvailabilityZones pulumi.StringArrayInput `pulumi:"availabilityZones"`
	// API server endpoint for the control plane
	ControlPlaneEndpoint ControlPlaneEndpointProfileControlPlaneEndpointPtrInput `pulumi:"controlPlaneEndpoint"`
	// Count - Number of agents to host docker containers. Allowed values must be in the range of 1 to 100 (inclusive). The default value is 1.
	Count pulumi.IntPtrInput `pulumi:"count"`
	// Profile for Linux VMs in the container service cluster.
	LinuxProfile LinuxProfilePropertiesPtrInput `pulumi:"linuxProfile"`
	// Unique name of the agent pool profile in the context of the subscription and resource group.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The version of node image
	NodeImageVersion pulumi.StringPtrInput `pulumi:"nodeImageVersion"`
	// Specifies the OS SKU used by the agent pool. The default is CBLMariner if OSType is Linux. The default is Windows2019 when OSType is Windows.
	OsSKU pulumi.StringPtrInput `pulumi:"osSKU"`
	// OsType - OsType to be used to specify os type. Choose from Linux and Windows. Default to Linux. Possible values include: 'Linux', 'Windows'
	OsType pulumi.StringPtrInput `pulumi:"osType"`
	// VmSize - The size of the agent pool VMs.
	VmSize pulumi.StringPtrInput `pulumi:"vmSize"`
}

// Defaults sets the appropriate defaults for ControlPlaneProfileArgs
func (val *ControlPlaneProfileArgs) Defaults() *ControlPlaneProfileArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Count == nil {
		tmp.Count = pulumi.IntPtr(1)
	}
	return &tmp
}
func (ControlPlaneProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ControlPlaneProfile)(nil)).Elem()
}

func (i ControlPlaneProfileArgs) ToControlPlaneProfileOutput() ControlPlaneProfileOutput {
	return i.ToControlPlaneProfileOutputWithContext(context.Background())
}

func (i ControlPlaneProfileArgs) ToControlPlaneProfileOutputWithContext(ctx context.Context) ControlPlaneProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ControlPlaneProfileOutput)
}

func (i ControlPlaneProfileArgs) ToControlPlaneProfilePtrOutput() ControlPlaneProfilePtrOutput {
	return i.ToControlPlaneProfilePtrOutputWithContext(context.Background())
}

func (i ControlPlaneProfileArgs) ToControlPlaneProfilePtrOutputWithContext(ctx context.Context) ControlPlaneProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ControlPlaneProfileOutput).ToControlPlaneProfilePtrOutputWithContext(ctx)
}

// ControlPlaneProfilePtrInput is an input type that accepts ControlPlaneProfileArgs, ControlPlaneProfilePtr and ControlPlaneProfilePtrOutput values.
// You can construct a concrete instance of `ControlPlaneProfilePtrInput` via:
//
//	        ControlPlaneProfileArgs{...}
//
//	or:
//
//	        nil
type ControlPlaneProfilePtrInput interface {
	pulumi.Input

	ToControlPlaneProfilePtrOutput() ControlPlaneProfilePtrOutput
	ToControlPlaneProfilePtrOutputWithContext(context.Context) ControlPlaneProfilePtrOutput
}

type controlPlaneProfilePtrType ControlPlaneProfileArgs

func ControlPlaneProfilePtr(v *ControlPlaneProfileArgs) ControlPlaneProfilePtrInput {
	return (*controlPlaneProfilePtrType)(v)
}

func (*controlPlaneProfilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ControlPlaneProfile)(nil)).Elem()
}

func (i *controlPlaneProfilePtrType) ToControlPlaneProfilePtrOutput() ControlPlaneProfilePtrOutput {
	return i.ToControlPlaneProfilePtrOutputWithContext(context.Background())
}

func (i *controlPlaneProfilePtrType) ToControlPlaneProfilePtrOutputWithContext(ctx context.Context) ControlPlaneProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ControlPlaneProfilePtrOutput)
}

// ControlPlaneProfile - The control plane properties for the provisioned cluster.
type ControlPlaneProfileOutput struct{ *pulumi.OutputState }

func (ControlPlaneProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ControlPlaneProfile)(nil)).Elem()
}

func (o ControlPlaneProfileOutput) ToControlPlaneProfileOutput() ControlPlaneProfileOutput {
	return o
}

func (o ControlPlaneProfileOutput) ToControlPlaneProfileOutputWithContext(ctx context.Context) ControlPlaneProfileOutput {
	return o
}

func (o ControlPlaneProfileOutput) ToControlPlaneProfilePtrOutput() ControlPlaneProfilePtrOutput {
	return o.ToControlPlaneProfilePtrOutputWithContext(context.Background())
}

func (o ControlPlaneProfileOutput) ToControlPlaneProfilePtrOutputWithContext(ctx context.Context) ControlPlaneProfilePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ControlPlaneProfile) *ControlPlaneProfile {
		return &v
	}).(ControlPlaneProfilePtrOutput)
}

// AvailabilityZones - The list of Availability zones to use for nodes. Datacenter racks modelled as zones
func (o ControlPlaneProfileOutput) AvailabilityZones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ControlPlaneProfile) []string { return v.AvailabilityZones }).(pulumi.StringArrayOutput)
}

// API server endpoint for the control plane
func (o ControlPlaneProfileOutput) ControlPlaneEndpoint() ControlPlaneEndpointProfileControlPlaneEndpointPtrOutput {
	return o.ApplyT(func(v ControlPlaneProfile) *ControlPlaneEndpointProfileControlPlaneEndpoint {
		return v.ControlPlaneEndpoint
	}).(ControlPlaneEndpointProfileControlPlaneEndpointPtrOutput)
}

// Count - Number of agents to host docker containers. Allowed values must be in the range of 1 to 100 (inclusive). The default value is 1.
func (o ControlPlaneProfileOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ControlPlaneProfile) *int { return v.Count }).(pulumi.IntPtrOutput)
}

// Profile for Linux VMs in the container service cluster.
func (o ControlPlaneProfileOutput) LinuxProfile() LinuxProfilePropertiesPtrOutput {
	return o.ApplyT(func(v ControlPlaneProfile) *LinuxProfileProperties { return v.LinuxProfile }).(LinuxProfilePropertiesPtrOutput)
}

// Unique name of the agent pool profile in the context of the subscription and resource group.
func (o ControlPlaneProfileOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ControlPlaneProfile) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The version of node image
func (o ControlPlaneProfileOutput) NodeImageVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ControlPlaneProfile) *string { return v.NodeImageVersion }).(pulumi.StringPtrOutput)
}

// Specifies the OS SKU used by the agent pool. The default is CBLMariner if OSType is Linux. The default is Windows2019 when OSType is Windows.
func (o ControlPlaneProfileOutput) OsSKU() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ControlPlaneProfile) *string { return v.OsSKU }).(pulumi.StringPtrOutput)
}

// OsType - OsType to be used to specify os type. Choose from Linux and Windows. Default to Linux. Possible values include: 'Linux', 'Windows'
func (o ControlPlaneProfileOutput) OsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ControlPlaneProfile) *string { return v.OsType }).(pulumi.StringPtrOutput)
}

// VmSize - The size of the agent pool VMs.
func (o ControlPlaneProfileOutput) VmSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ControlPlaneProfile) *string { return v.VmSize }).(pulumi.StringPtrOutput)
}

type ControlPlaneProfilePtrOutput struct{ *pulumi.OutputState }

func (ControlPlaneProfilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ControlPlaneProfile)(nil)).Elem()
}

func (o ControlPlaneProfilePtrOutput) ToControlPlaneProfilePtrOutput() ControlPlaneProfilePtrOutput {
	return o
}

func (o ControlPlaneProfilePtrOutput) ToControlPlaneProfilePtrOutputWithContext(ctx context.Context) ControlPlaneProfilePtrOutput {
	return o
}

func (o ControlPlaneProfilePtrOutput) Elem() ControlPlaneProfileOutput {
	return o.ApplyT(func(v *ControlPlaneProfile) ControlPlaneProfile {
		if v != nil {
			return *v
		}
		var ret ControlPlaneProfile
		return ret
	}).(ControlPlaneProfileOutput)
}

// AvailabilityZones - The list of Availability zones to use for nodes. Datacenter racks modelled as zones
func (o ControlPlaneProfilePtrOutput) AvailabilityZones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ControlPlaneProfile) []string {
		if v == nil {
			return nil
		}
		return v.AvailabilityZones
	}).(pulumi.StringArrayOutput)
}

// API server endpoint for the control plane
func (o ControlPlaneProfilePtrOutput) ControlPlaneEndpoint() ControlPlaneEndpointProfileControlPlaneEndpointPtrOutput {
	return o.ApplyT(func(v *ControlPlaneProfile) *ControlPlaneEndpointProfileControlPlaneEndpoint {
		if v == nil {
			return nil
		}
		return v.ControlPlaneEndpoint
	}).(ControlPlaneEndpointProfileControlPlaneEndpointPtrOutput)
}

// Count - Number of agents to host docker containers. Allowed values must be in the range of 1 to 100 (inclusive). The default value is 1.
func (o ControlPlaneProfilePtrOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ControlPlaneProfile) *int {
		if v == nil {
			return nil
		}
		return v.Count
	}).(pulumi.IntPtrOutput)
}

// Profile for Linux VMs in the container service cluster.
func (o ControlPlaneProfilePtrOutput) LinuxProfile() LinuxProfilePropertiesPtrOutput {
	return o.ApplyT(func(v *ControlPlaneProfile) *LinuxProfileProperties {
		if v == nil {
			return nil
		}
		return v.LinuxProfile
	}).(LinuxProfilePropertiesPtrOutput)
}

// Unique name of the agent pool profile in the context of the subscription and resource group.
func (o ControlPlaneProfilePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ControlPlaneProfile) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// The version of node image
func (o ControlPlaneProfilePtrOutput) NodeImageVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ControlPlaneProfile) *string {
		if v == nil {
			return nil
		}
		return v.NodeImageVersion
	}).(pulumi.StringPtrOutput)
}

// Specifies the OS SKU used by the agent pool. The default is CBLMariner if OSType is Linux. The default is Windows2019 when OSType is Windows.
func (o ControlPlaneProfilePtrOutput) OsSKU() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ControlPlaneProfile) *string {
		if v == nil {
			return nil
		}
		return v.OsSKU
	}).(pulumi.StringPtrOutput)
}

// OsType - OsType to be used to specify os type. Choose from Linux and Windows. Default to Linux. Possible values include: 'Linux', 'Windows'
func (o ControlPlaneProfilePtrOutput) OsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ControlPlaneProfile) *string {
		if v == nil {
			return nil
		}
		return v.OsType
	}).(pulumi.StringPtrOutput)
}

// VmSize - The size of the agent pool VMs.
func (o ControlPlaneProfilePtrOutput) VmSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ControlPlaneProfile) *string {
		if v == nil {
			return nil
		}
		return v.VmSize
	}).(pulumi.StringPtrOutput)
}

// ControlPlaneProfile - The control plane properties for the provisioned cluster.
type ControlPlaneProfileResponse struct {
	// AvailabilityZones - The list of Availability zones to use for nodes. Datacenter racks modelled as zones
	AvailabilityZones []string `pulumi:"availabilityZones"`
	// API server endpoint for the control plane
	ControlPlaneEndpoint *ControlPlaneEndpointProfileResponseControlPlaneEndpoint `pulumi:"controlPlaneEndpoint"`
	// Count - Number of agents to host docker containers. Allowed values must be in the range of 1 to 100 (inclusive). The default value is 1.
	Count *int `pulumi:"count"`
	// Profile for Linux VMs in the container service cluster.
	LinuxProfile *LinuxProfilePropertiesResponse `pulumi:"linuxProfile"`
	// Unique name of the agent pool profile in the context of the subscription and resource group.
	Name *string `pulumi:"name"`
	// The version of node image
	NodeImageVersion *string `pulumi:"nodeImageVersion"`
	// Specifies the OS SKU used by the agent pool. The default is CBLMariner if OSType is Linux. The default is Windows2019 when OSType is Windows.
	OsSKU *string `pulumi:"osSKU"`
	// OsType - OsType to be used to specify os type. Choose from Linux and Windows. Default to Linux. Possible values include: 'Linux', 'Windows'
	OsType *string `pulumi:"osType"`
	// VmSize - The size of the agent pool VMs.
	VmSize *string `pulumi:"vmSize"`
}

// Defaults sets the appropriate defaults for ControlPlaneProfileResponse
func (val *ControlPlaneProfileResponse) Defaults() *ControlPlaneProfileResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Count == nil {
		count_ := 1
		tmp.Count = &count_
	}
	return &tmp
}

// ControlPlaneProfile - The control plane properties for the provisioned cluster.
type ControlPlaneProfileResponseOutput struct{ *pulumi.OutputState }

func (ControlPlaneProfileResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ControlPlaneProfileResponse)(nil)).Elem()
}

func (o ControlPlaneProfileResponseOutput) ToControlPlaneProfileResponseOutput() ControlPlaneProfileResponseOutput {
	return o
}

func (o ControlPlaneProfileResponseOutput) ToControlPlaneProfileResponseOutputWithContext(ctx context.Context) ControlPlaneProfileResponseOutput {
	return o
}

// AvailabilityZones - The list of Availability zones to use for nodes. Datacenter racks modelled as zones
func (o ControlPlaneProfileResponseOutput) AvailabilityZones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ControlPlaneProfileResponse) []string { return v.AvailabilityZones }).(pulumi.StringArrayOutput)
}

// API server endpoint for the control plane
func (o ControlPlaneProfileResponseOutput) ControlPlaneEndpoint() ControlPlaneEndpointProfileResponseControlPlaneEndpointPtrOutput {
	return o.ApplyT(func(v ControlPlaneProfileResponse) *ControlPlaneEndpointProfileResponseControlPlaneEndpoint {
		return v.ControlPlaneEndpoint
	}).(ControlPlaneEndpointProfileResponseControlPlaneEndpointPtrOutput)
}

// Count - Number of agents to host docker containers. Allowed values must be in the range of 1 to 100 (inclusive). The default value is 1.
func (o ControlPlaneProfileResponseOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ControlPlaneProfileResponse) *int { return v.Count }).(pulumi.IntPtrOutput)
}

// Profile for Linux VMs in the container service cluster.
func (o ControlPlaneProfileResponseOutput) LinuxProfile() LinuxProfilePropertiesResponsePtrOutput {
	return o.ApplyT(func(v ControlPlaneProfileResponse) *LinuxProfilePropertiesResponse { return v.LinuxProfile }).(LinuxProfilePropertiesResponsePtrOutput)
}

// Unique name of the agent pool profile in the context of the subscription and resource group.
func (o ControlPlaneProfileResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ControlPlaneProfileResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The version of node image
func (o ControlPlaneProfileResponseOutput) NodeImageVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ControlPlaneProfileResponse) *string { return v.NodeImageVersion }).(pulumi.StringPtrOutput)
}

// Specifies the OS SKU used by the agent pool. The default is CBLMariner if OSType is Linux. The default is Windows2019 when OSType is Windows.
func (o ControlPlaneProfileResponseOutput) OsSKU() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ControlPlaneProfileResponse) *string { return v.OsSKU }).(pulumi.StringPtrOutput)
}

// OsType - OsType to be used to specify os type. Choose from Linux and Windows. Default to Linux. Possible values include: 'Linux', 'Windows'
func (o ControlPlaneProfileResponseOutput) OsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ControlPlaneProfileResponse) *string { return v.OsType }).(pulumi.StringPtrOutput)
}

// VmSize - The size of the agent pool VMs.
func (o ControlPlaneProfileResponseOutput) VmSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ControlPlaneProfileResponse) *string { return v.VmSize }).(pulumi.StringPtrOutput)
}

type ControlPlaneProfileResponsePtrOutput struct{ *pulumi.OutputState }

func (ControlPlaneProfileResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ControlPlaneProfileResponse)(nil)).Elem()
}

func (o ControlPlaneProfileResponsePtrOutput) ToControlPlaneProfileResponsePtrOutput() ControlPlaneProfileResponsePtrOutput {
	return o
}

func (o ControlPlaneProfileResponsePtrOutput) ToControlPlaneProfileResponsePtrOutputWithContext(ctx context.Context) ControlPlaneProfileResponsePtrOutput {
	return o
}

func (o ControlPlaneProfileResponsePtrOutput) Elem() ControlPlaneProfileResponseOutput {
	return o.ApplyT(func(v *ControlPlaneProfileResponse) ControlPlaneProfileResponse {
		if v != nil {
			return *v
		}
		var ret ControlPlaneProfileResponse
		return ret
	}).(ControlPlaneProfileResponseOutput)
}

// AvailabilityZones - The list of Availability zones to use for nodes. Datacenter racks modelled as zones
func (o ControlPlaneProfileResponsePtrOutput) AvailabilityZones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ControlPlaneProfileResponse) []string {
		if v == nil {
			return nil
		}
		return v.AvailabilityZones
	}).(pulumi.StringArrayOutput)
}

// API server endpoint for the control plane
func (o ControlPlaneProfileResponsePtrOutput) ControlPlaneEndpoint() ControlPlaneEndpointProfileResponseControlPlaneEndpointPtrOutput {
	return o.ApplyT(func(v *ControlPlaneProfileResponse) *ControlPlaneEndpointProfileResponseControlPlaneEndpoint {
		if v == nil {
			return nil
		}
		return v.ControlPlaneEndpoint
	}).(ControlPlaneEndpointProfileResponseControlPlaneEndpointPtrOutput)
}

// Count - Number of agents to host docker containers. Allowed values must be in the range of 1 to 100 (inclusive). The default value is 1.
func (o ControlPlaneProfileResponsePtrOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ControlPlaneProfileResponse) *int {
		if v == nil {
			return nil
		}
		return v.Count
	}).(pulumi.IntPtrOutput)
}

// Profile for Linux VMs in the container service cluster.
func (o ControlPlaneProfileResponsePtrOutput) LinuxProfile() LinuxProfilePropertiesResponsePtrOutput {
	return o.ApplyT(func(v *ControlPlaneProfileResponse) *LinuxProfilePropertiesResponse {
		if v == nil {
			return nil
		}
		return v.LinuxProfile
	}).(LinuxProfilePropertiesResponsePtrOutput)
}

// Unique name of the agent pool profile in the context of the subscription and resource group.
func (o ControlPlaneProfileResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ControlPlaneProfileResponse) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// The version of node image
func (o ControlPlaneProfileResponsePtrOutput) NodeImageVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ControlPlaneProfileResponse) *string {
		if v == nil {
			return nil
		}
		return v.NodeImageVersion
	}).(pulumi.StringPtrOutput)
}

// Specifies the OS SKU used by the agent pool. The default is CBLMariner if OSType is Linux. The default is Windows2019 when OSType is Windows.
func (o ControlPlaneProfileResponsePtrOutput) OsSKU() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ControlPlaneProfileResponse) *string {
		if v == nil {
			return nil
		}
		return v.OsSKU
	}).(pulumi.StringPtrOutput)
}

// OsType - OsType to be used to specify os type. Choose from Linux and Windows. Default to Linux. Possible values include: 'Linux', 'Windows'
func (o ControlPlaneProfileResponsePtrOutput) OsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ControlPlaneProfileResponse) *string {
		if v == nil {
			return nil
		}
		return v.OsType
	}).(pulumi.StringPtrOutput)
}

// VmSize - The size of the agent pool VMs.
func (o ControlPlaneProfileResponsePtrOutput) VmSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ControlPlaneProfileResponse) *string {
		if v == nil {
			return nil
		}
		return v.VmSize
	}).(pulumi.StringPtrOutput)
}

// The credential result response.
type CredentialResultResponse struct {
	// The name of the credential.
	Name string `pulumi:"name"`
	// Base64-encoded Kubernetes configuration file.
	Value string `pulumi:"value"`
}

// The credential result response.
type CredentialResultResponseOutput struct{ *pulumi.OutputState }

func (CredentialResultResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CredentialResultResponse)(nil)).Elem()
}

func (o CredentialResultResponseOutput) ToCredentialResultResponseOutput() CredentialResultResponseOutput {
	return o
}

func (o CredentialResultResponseOutput) ToCredentialResultResponseOutputWithContext(ctx context.Context) CredentialResultResponseOutput {
	return o
}

// The name of the credential.
func (o CredentialResultResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v CredentialResultResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Base64-encoded Kubernetes configuration file.
func (o CredentialResultResponseOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v CredentialResultResponse) string { return v.Value }).(pulumi.StringOutput)
}

type CredentialResultResponseArrayOutput struct{ *pulumi.OutputState }

func (CredentialResultResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CredentialResultResponse)(nil)).Elem()
}

func (o CredentialResultResponseArrayOutput) ToCredentialResultResponseArrayOutput() CredentialResultResponseArrayOutput {
	return o
}

func (o CredentialResultResponseArrayOutput) ToCredentialResultResponseArrayOutputWithContext(ctx context.Context) CredentialResultResponseArrayOutput {
	return o
}

func (o CredentialResultResponseArrayOutput) Index(i pulumi.IntInput) CredentialResultResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CredentialResultResponse {
		return vs[0].([]CredentialResultResponse)[vs[1].(int)]
	}).(CredentialResultResponseOutput)
}

// Extended Location definition
type ExtendedLocation struct {
	// The extended location name.
	Name *string `pulumi:"name"`
	// The extended location type.
	Type *string `pulumi:"type"`
}

// ExtendedLocationInput is an input type that accepts ExtendedLocationArgs and ExtendedLocationOutput values.
// You can construct a concrete instance of `ExtendedLocationInput` via:
//
//	ExtendedLocationArgs{...}
type ExtendedLocationInput interface {
	pulumi.Input

	ToExtendedLocationOutput() ExtendedLocationOutput
	ToExtendedLocationOutputWithContext(context.Context) ExtendedLocationOutput
}

// Extended Location definition
type ExtendedLocationArgs struct {
	// The extended location name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The extended location type.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (ExtendedLocationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtendedLocation)(nil)).Elem()
}

func (i ExtendedLocationArgs) ToExtendedLocationOutput() ExtendedLocationOutput {
	return i.ToExtendedLocationOutputWithContext(context.Background())
}

func (i ExtendedLocationArgs) ToExtendedLocationOutputWithContext(ctx context.Context) ExtendedLocationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtendedLocationOutput)
}

func (i ExtendedLocationArgs) ToExtendedLocationPtrOutput() ExtendedLocationPtrOutput {
	return i.ToExtendedLocationPtrOutputWithContext(context.Background())
}

func (i ExtendedLocationArgs) ToExtendedLocationPtrOutputWithContext(ctx context.Context) ExtendedLocationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtendedLocationOutput).ToExtendedLocationPtrOutputWithContext(ctx)
}

// ExtendedLocationPtrInput is an input type that accepts ExtendedLocationArgs, ExtendedLocationPtr and ExtendedLocationPtrOutput values.
// You can construct a concrete instance of `ExtendedLocationPtrInput` via:
//
//	        ExtendedLocationArgs{...}
//
//	or:
//
//	        nil
type ExtendedLocationPtrInput interface {
	pulumi.Input

	ToExtendedLocationPtrOutput() ExtendedLocationPtrOutput
	ToExtendedLocationPtrOutputWithContext(context.Context) ExtendedLocationPtrOutput
}

type extendedLocationPtrType ExtendedLocationArgs

func ExtendedLocationPtr(v *ExtendedLocationArgs) ExtendedLocationPtrInput {
	return (*extendedLocationPtrType)(v)
}

func (*extendedLocationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ExtendedLocation)(nil)).Elem()
}

func (i *extendedLocationPtrType) ToExtendedLocationPtrOutput() ExtendedLocationPtrOutput {
	return i.ToExtendedLocationPtrOutputWithContext(context.Background())
}

func (i *extendedLocationPtrType) ToExtendedLocationPtrOutputWithContext(ctx context.Context) ExtendedLocationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtendedLocationPtrOutput)
}

// Extended Location definition
type ExtendedLocationOutput struct{ *pulumi.OutputState }

func (ExtendedLocationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtendedLocation)(nil)).Elem()
}

func (o ExtendedLocationOutput) ToExtendedLocationOutput() ExtendedLocationOutput {
	return o
}

func (o ExtendedLocationOutput) ToExtendedLocationOutputWithContext(ctx context.Context) ExtendedLocationOutput {
	return o
}

func (o ExtendedLocationOutput) ToExtendedLocationPtrOutput() ExtendedLocationPtrOutput {
	return o.ToExtendedLocationPtrOutputWithContext(context.Background())
}

func (o ExtendedLocationOutput) ToExtendedLocationPtrOutputWithContext(ctx context.Context) ExtendedLocationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ExtendedLocation) *ExtendedLocation {
		return &v
	}).(ExtendedLocationPtrOutput)
}

// The extended location name.
func (o ExtendedLocationOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtendedLocation) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The extended location type.
func (o ExtendedLocationOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtendedLocation) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ExtendedLocationPtrOutput struct{ *pulumi.OutputState }

func (ExtendedLocationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExtendedLocation)(nil)).Elem()
}

func (o ExtendedLocationPtrOutput) ToExtendedLocationPtrOutput() ExtendedLocationPtrOutput {
	return o
}

func (o ExtendedLocationPtrOutput) ToExtendedLocationPtrOutputWithContext(ctx context.Context) ExtendedLocationPtrOutput {
	return o
}

func (o ExtendedLocationPtrOutput) Elem() ExtendedLocationOutput {
	return o.ApplyT(func(v *ExtendedLocation) ExtendedLocation {
		if v != nil {
			return *v
		}
		var ret ExtendedLocation
		return ret
	}).(ExtendedLocationOutput)
}

// The extended location name.
func (o ExtendedLocationPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtendedLocation) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// The extended location type.
func (o ExtendedLocationPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtendedLocation) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// Extended Location definition
type ExtendedLocationResponse struct {
	// The extended location name.
	Name *string `pulumi:"name"`
	// The extended location type.
	Type *string `pulumi:"type"`
}

// Extended Location definition
type ExtendedLocationResponseOutput struct{ *pulumi.OutputState }

func (ExtendedLocationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtendedLocationResponse)(nil)).Elem()
}

func (o ExtendedLocationResponseOutput) ToExtendedLocationResponseOutput() ExtendedLocationResponseOutput {
	return o
}

func (o ExtendedLocationResponseOutput) ToExtendedLocationResponseOutputWithContext(ctx context.Context) ExtendedLocationResponseOutput {
	return o
}

// The extended location name.
func (o ExtendedLocationResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtendedLocationResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The extended location type.
func (o ExtendedLocationResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtendedLocationResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ExtendedLocationResponsePtrOutput struct{ *pulumi.OutputState }

func (ExtendedLocationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExtendedLocationResponse)(nil)).Elem()
}

func (o ExtendedLocationResponsePtrOutput) ToExtendedLocationResponsePtrOutput() ExtendedLocationResponsePtrOutput {
	return o
}

func (o ExtendedLocationResponsePtrOutput) ToExtendedLocationResponsePtrOutputWithContext(ctx context.Context) ExtendedLocationResponsePtrOutput {
	return o
}

func (o ExtendedLocationResponsePtrOutput) Elem() ExtendedLocationResponseOutput {
	return o.ApplyT(func(v *ExtendedLocationResponse) ExtendedLocationResponse {
		if v != nil {
			return *v
		}
		var ret ExtendedLocationResponse
		return ret
	}).(ExtendedLocationResponseOutput)
}

// The extended location name.
func (o ExtendedLocationResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtendedLocationResponse) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// The extended location type.
func (o ExtendedLocationResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtendedLocationResponse) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// Kubernetes Patch Version profile
type KubernetesPatchVersionsResponse struct {
	// Whether the kubernetes version variant (Linux, Windows, Windows2022) is ready or not
	Readiness []KubernetesVersionReadinessResponse `pulumi:"readiness"`
	// Possible upgrade path for given patch version
	Upgrades []string `pulumi:"upgrades"`
}

// Kubernetes Patch Version profile
type KubernetesPatchVersionsResponseOutput struct{ *pulumi.OutputState }

func (KubernetesPatchVersionsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesPatchVersionsResponse)(nil)).Elem()
}

func (o KubernetesPatchVersionsResponseOutput) ToKubernetesPatchVersionsResponseOutput() KubernetesPatchVersionsResponseOutput {
	return o
}

func (o KubernetesPatchVersionsResponseOutput) ToKubernetesPatchVersionsResponseOutputWithContext(ctx context.Context) KubernetesPatchVersionsResponseOutput {
	return o
}

// Whether the kubernetes version variant (Linux, Windows, Windows2022) is ready or not
func (o KubernetesPatchVersionsResponseOutput) Readiness() KubernetesVersionReadinessResponseArrayOutput {
	return o.ApplyT(func(v KubernetesPatchVersionsResponse) []KubernetesVersionReadinessResponse { return v.Readiness }).(KubernetesVersionReadinessResponseArrayOutput)
}

// Possible upgrade path for given patch version
func (o KubernetesPatchVersionsResponseOutput) Upgrades() pulumi.StringArrayOutput {
	return o.ApplyT(func(v KubernetesPatchVersionsResponse) []string { return v.Upgrades }).(pulumi.StringArrayOutput)
}

type KubernetesPatchVersionsResponseMapOutput struct{ *pulumi.OutputState }

func (KubernetesPatchVersionsResponseMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]KubernetesPatchVersionsResponse)(nil)).Elem()
}

func (o KubernetesPatchVersionsResponseMapOutput) ToKubernetesPatchVersionsResponseMapOutput() KubernetesPatchVersionsResponseMapOutput {
	return o
}

func (o KubernetesPatchVersionsResponseMapOutput) ToKubernetesPatchVersionsResponseMapOutputWithContext(ctx context.Context) KubernetesPatchVersionsResponseMapOutput {
	return o
}

func (o KubernetesPatchVersionsResponseMapOutput) MapIndex(k pulumi.StringInput) KubernetesPatchVersionsResponseOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) KubernetesPatchVersionsResponse {
		return vs[0].(map[string]KubernetesPatchVersionsResponse)[vs[1].(string)]
	}).(KubernetesPatchVersionsResponseOutput)
}

// Capabilities on this kubernetes version
type KubernetesVersionCapabilitiesResponse struct {
	SupportPlan []string `pulumi:"supportPlan"`
}

// Capabilities on this kubernetes version
type KubernetesVersionCapabilitiesResponseOutput struct{ *pulumi.OutputState }

func (KubernetesVersionCapabilitiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesVersionCapabilitiesResponse)(nil)).Elem()
}

func (o KubernetesVersionCapabilitiesResponseOutput) ToKubernetesVersionCapabilitiesResponseOutput() KubernetesVersionCapabilitiesResponseOutput {
	return o
}

func (o KubernetesVersionCapabilitiesResponseOutput) ToKubernetesVersionCapabilitiesResponseOutputWithContext(ctx context.Context) KubernetesVersionCapabilitiesResponseOutput {
	return o
}

func (o KubernetesVersionCapabilitiesResponseOutput) SupportPlan() pulumi.StringArrayOutput {
	return o.ApplyT(func(v KubernetesVersionCapabilitiesResponse) []string { return v.SupportPlan }).(pulumi.StringArrayOutput)
}

type KubernetesVersionProfileResponseProperties struct {
	// Provisioning state of the resource
	ProvisioningState string `pulumi:"provisioningState"`
	// List of supported Kubernetes versions
	Values []KubernetesVersionPropertiesResponse `pulumi:"values"`
}

type KubernetesVersionProfileResponsePropertiesOutput struct{ *pulumi.OutputState }

func (KubernetesVersionProfileResponsePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesVersionProfileResponseProperties)(nil)).Elem()
}

func (o KubernetesVersionProfileResponsePropertiesOutput) ToKubernetesVersionProfileResponsePropertiesOutput() KubernetesVersionProfileResponsePropertiesOutput {
	return o
}

func (o KubernetesVersionProfileResponsePropertiesOutput) ToKubernetesVersionProfileResponsePropertiesOutputWithContext(ctx context.Context) KubernetesVersionProfileResponsePropertiesOutput {
	return o
}

// Provisioning state of the resource
func (o KubernetesVersionProfileResponsePropertiesOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v KubernetesVersionProfileResponseProperties) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// List of supported Kubernetes versions
func (o KubernetesVersionProfileResponsePropertiesOutput) Values() KubernetesVersionPropertiesResponseArrayOutput {
	return o.ApplyT(func(v KubernetesVersionProfileResponseProperties) []KubernetesVersionPropertiesResponse {
		return v.Values
	}).(KubernetesVersionPropertiesResponseArrayOutput)
}

// Kubernetes version profile for given major.minor release
type KubernetesVersionPropertiesResponse struct {
	// Capabilities on this kubernetes version
	Capabilities KubernetesVersionCapabilitiesResponse `pulumi:"capabilities"`
	// Whether this version is in preview mode.
	IsPreview bool `pulumi:"isPreview"`
	// Patch versions of a Kubernetes release
	PatchVersions map[string]KubernetesPatchVersionsResponse `pulumi:"patchVersions"`
	// major.minor version of Kubernetes release
	Version string `pulumi:"version"`
}

// Kubernetes version profile for given major.minor release
type KubernetesVersionPropertiesResponseOutput struct{ *pulumi.OutputState }

func (KubernetesVersionPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesVersionPropertiesResponse)(nil)).Elem()
}

func (o KubernetesVersionPropertiesResponseOutput) ToKubernetesVersionPropertiesResponseOutput() KubernetesVersionPropertiesResponseOutput {
	return o
}

func (o KubernetesVersionPropertiesResponseOutput) ToKubernetesVersionPropertiesResponseOutputWithContext(ctx context.Context) KubernetesVersionPropertiesResponseOutput {
	return o
}

// Capabilities on this kubernetes version
func (o KubernetesVersionPropertiesResponseOutput) Capabilities() KubernetesVersionCapabilitiesResponseOutput {
	return o.ApplyT(func(v KubernetesVersionPropertiesResponse) KubernetesVersionCapabilitiesResponse {
		return v.Capabilities
	}).(KubernetesVersionCapabilitiesResponseOutput)
}

// Whether this version is in preview mode.
func (o KubernetesVersionPropertiesResponseOutput) IsPreview() pulumi.BoolOutput {
	return o.ApplyT(func(v KubernetesVersionPropertiesResponse) bool { return v.IsPreview }).(pulumi.BoolOutput)
}

// Patch versions of a Kubernetes release
func (o KubernetesVersionPropertiesResponseOutput) PatchVersions() KubernetesPatchVersionsResponseMapOutput {
	return o.ApplyT(func(v KubernetesVersionPropertiesResponse) map[string]KubernetesPatchVersionsResponse {
		return v.PatchVersions
	}).(KubernetesPatchVersionsResponseMapOutput)
}

// major.minor version of Kubernetes release
func (o KubernetesVersionPropertiesResponseOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v KubernetesVersionPropertiesResponse) string { return v.Version }).(pulumi.StringOutput)
}

type KubernetesVersionPropertiesResponseArrayOutput struct{ *pulumi.OutputState }

func (KubernetesVersionPropertiesResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KubernetesVersionPropertiesResponse)(nil)).Elem()
}

func (o KubernetesVersionPropertiesResponseArrayOutput) ToKubernetesVersionPropertiesResponseArrayOutput() KubernetesVersionPropertiesResponseArrayOutput {
	return o
}

func (o KubernetesVersionPropertiesResponseArrayOutput) ToKubernetesVersionPropertiesResponseArrayOutputWithContext(ctx context.Context) KubernetesVersionPropertiesResponseArrayOutput {
	return o
}

func (o KubernetesVersionPropertiesResponseArrayOutput) Index(i pulumi.IntInput) KubernetesVersionPropertiesResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KubernetesVersionPropertiesResponse {
		return vs[0].([]KubernetesVersionPropertiesResponse)[vs[1].(int)]
	}).(KubernetesVersionPropertiesResponseOutput)
}

// Whether a particular kubernetes version's variant (CBLMariner, Windows, Windows2022) is ready or not
type KubernetesVersionReadinessResponse struct {
	// If image is not ready, the error message for version not being ready
	ErrorMessage string `pulumi:"errorMessage"`
	// Specifies the OS SKU used by the agent pool. The default is CBLMariner if OSType is Linux. The default is Windows2019 when OSType is Windows.
	OsSku *string `pulumi:"osSku"`
	// The particular KubernetesVersion's Image's OS Type (Linux, Windows)
	OsType string `pulumi:"osType"`
	// Whether or not the given image is ready
	Ready bool `pulumi:"ready"`
}

// Defaults sets the appropriate defaults for KubernetesVersionReadinessResponse
func (val *KubernetesVersionReadinessResponse) Defaults() *KubernetesVersionReadinessResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if utilities.IsZero(tmp.OsType) {
		tmp.OsType = "Linux"
	}
	return &tmp
}

// Whether a particular kubernetes version's variant (CBLMariner, Windows, Windows2022) is ready or not
type KubernetesVersionReadinessResponseOutput struct{ *pulumi.OutputState }

func (KubernetesVersionReadinessResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesVersionReadinessResponse)(nil)).Elem()
}

func (o KubernetesVersionReadinessResponseOutput) ToKubernetesVersionReadinessResponseOutput() KubernetesVersionReadinessResponseOutput {
	return o
}

func (o KubernetesVersionReadinessResponseOutput) ToKubernetesVersionReadinessResponseOutputWithContext(ctx context.Context) KubernetesVersionReadinessResponseOutput {
	return o
}

// If image is not ready, the error message for version not being ready
func (o KubernetesVersionReadinessResponseOutput) ErrorMessage() pulumi.StringOutput {
	return o.ApplyT(func(v KubernetesVersionReadinessResponse) string { return v.ErrorMessage }).(pulumi.StringOutput)
}

// Specifies the OS SKU used by the agent pool. The default is CBLMariner if OSType is Linux. The default is Windows2019 when OSType is Windows.
func (o KubernetesVersionReadinessResponseOutput) OsSku() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesVersionReadinessResponse) *string { return v.OsSku }).(pulumi.StringPtrOutput)
}

// The particular KubernetesVersion's Image's OS Type (Linux, Windows)
func (o KubernetesVersionReadinessResponseOutput) OsType() pulumi.StringOutput {
	return o.ApplyT(func(v KubernetesVersionReadinessResponse) string { return v.OsType }).(pulumi.StringOutput)
}

// Whether or not the given image is ready
func (o KubernetesVersionReadinessResponseOutput) Ready() pulumi.BoolOutput {
	return o.ApplyT(func(v KubernetesVersionReadinessResponse) bool { return v.Ready }).(pulumi.BoolOutput)
}

type KubernetesVersionReadinessResponseArrayOutput struct{ *pulumi.OutputState }

func (KubernetesVersionReadinessResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KubernetesVersionReadinessResponse)(nil)).Elem()
}

func (o KubernetesVersionReadinessResponseArrayOutput) ToKubernetesVersionReadinessResponseArrayOutput() KubernetesVersionReadinessResponseArrayOutput {
	return o
}

func (o KubernetesVersionReadinessResponseArrayOutput) ToKubernetesVersionReadinessResponseArrayOutputWithContext(ctx context.Context) KubernetesVersionReadinessResponseArrayOutput {
	return o
}

func (o KubernetesVersionReadinessResponseArrayOutput) Index(i pulumi.IntInput) KubernetesVersionReadinessResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KubernetesVersionReadinessResponse {
		return vs[0].([]KubernetesVersionReadinessResponse)[vs[1].(int)]
	}).(KubernetesVersionReadinessResponseOutput)
}

// LinuxProfile - Profile for Linux VMs in the container service cluster.
type LinuxProfileProperties struct {
	// SSH - SSH configuration for Linux-based VMs running on Azure.
	Ssh *LinuxProfilePropertiesSsh `pulumi:"ssh"`
}

// LinuxProfilePropertiesInput is an input type that accepts LinuxProfilePropertiesArgs and LinuxProfilePropertiesOutput values.
// You can construct a concrete instance of `LinuxProfilePropertiesInput` via:
//
//	LinuxProfilePropertiesArgs{...}
type LinuxProfilePropertiesInput interface {
	pulumi.Input

	ToLinuxProfilePropertiesOutput() LinuxProfilePropertiesOutput
	ToLinuxProfilePropertiesOutputWithContext(context.Context) LinuxProfilePropertiesOutput
}

// LinuxProfile - Profile for Linux VMs in the container service cluster.
type LinuxProfilePropertiesArgs struct {
	// SSH - SSH configuration for Linux-based VMs running on Azure.
	Ssh LinuxProfilePropertiesSshPtrInput `pulumi:"ssh"`
}

func (LinuxProfilePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LinuxProfileProperties)(nil)).Elem()
}

func (i LinuxProfilePropertiesArgs) ToLinuxProfilePropertiesOutput() LinuxProfilePropertiesOutput {
	return i.ToLinuxProfilePropertiesOutputWithContext(context.Background())
}

func (i LinuxProfilePropertiesArgs) ToLinuxProfilePropertiesOutputWithContext(ctx context.Context) LinuxProfilePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinuxProfilePropertiesOutput)
}

func (i LinuxProfilePropertiesArgs) ToLinuxProfilePropertiesPtrOutput() LinuxProfilePropertiesPtrOutput {
	return i.ToLinuxProfilePropertiesPtrOutputWithContext(context.Background())
}

func (i LinuxProfilePropertiesArgs) ToLinuxProfilePropertiesPtrOutputWithContext(ctx context.Context) LinuxProfilePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinuxProfilePropertiesOutput).ToLinuxProfilePropertiesPtrOutputWithContext(ctx)
}

// LinuxProfilePropertiesPtrInput is an input type that accepts LinuxProfilePropertiesArgs, LinuxProfilePropertiesPtr and LinuxProfilePropertiesPtrOutput values.
// You can construct a concrete instance of `LinuxProfilePropertiesPtrInput` via:
//
//	        LinuxProfilePropertiesArgs{...}
//
//	or:
//
//	        nil
type LinuxProfilePropertiesPtrInput interface {
	pulumi.Input

	ToLinuxProfilePropertiesPtrOutput() LinuxProfilePropertiesPtrOutput
	ToLinuxProfilePropertiesPtrOutputWithContext(context.Context) LinuxProfilePropertiesPtrOutput
}

type linuxProfilePropertiesPtrType LinuxProfilePropertiesArgs

func LinuxProfilePropertiesPtr(v *LinuxProfilePropertiesArgs) LinuxProfilePropertiesPtrInput {
	return (*linuxProfilePropertiesPtrType)(v)
}

func (*linuxProfilePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LinuxProfileProperties)(nil)).Elem()
}

func (i *linuxProfilePropertiesPtrType) ToLinuxProfilePropertiesPtrOutput() LinuxProfilePropertiesPtrOutput {
	return i.ToLinuxProfilePropertiesPtrOutputWithContext(context.Background())
}

func (i *linuxProfilePropertiesPtrType) ToLinuxProfilePropertiesPtrOutputWithContext(ctx context.Context) LinuxProfilePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinuxProfilePropertiesPtrOutput)
}

// LinuxProfile - Profile for Linux VMs in the container service cluster.
type LinuxProfilePropertiesOutput struct{ *pulumi.OutputState }

func (LinuxProfilePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LinuxProfileProperties)(nil)).Elem()
}

func (o LinuxProfilePropertiesOutput) ToLinuxProfilePropertiesOutput() LinuxProfilePropertiesOutput {
	return o
}

func (o LinuxProfilePropertiesOutput) ToLinuxProfilePropertiesOutputWithContext(ctx context.Context) LinuxProfilePropertiesOutput {
	return o
}

func (o LinuxProfilePropertiesOutput) ToLinuxProfilePropertiesPtrOutput() LinuxProfilePropertiesPtrOutput {
	return o.ToLinuxProfilePropertiesPtrOutputWithContext(context.Background())
}

func (o LinuxProfilePropertiesOutput) ToLinuxProfilePropertiesPtrOutputWithContext(ctx context.Context) LinuxProfilePropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LinuxProfileProperties) *LinuxProfileProperties {
		return &v
	}).(LinuxProfilePropertiesPtrOutput)
}

// SSH - SSH configuration for Linux-based VMs running on Azure.
func (o LinuxProfilePropertiesOutput) Ssh() LinuxProfilePropertiesSshPtrOutput {
	return o.ApplyT(func(v LinuxProfileProperties) *LinuxProfilePropertiesSsh { return v.Ssh }).(LinuxProfilePropertiesSshPtrOutput)
}

type LinuxProfilePropertiesPtrOutput struct{ *pulumi.OutputState }

func (LinuxProfilePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LinuxProfileProperties)(nil)).Elem()
}

func (o LinuxProfilePropertiesPtrOutput) ToLinuxProfilePropertiesPtrOutput() LinuxProfilePropertiesPtrOutput {
	return o
}

func (o LinuxProfilePropertiesPtrOutput) ToLinuxProfilePropertiesPtrOutputWithContext(ctx context.Context) LinuxProfilePropertiesPtrOutput {
	return o
}

func (o LinuxProfilePropertiesPtrOutput) Elem() LinuxProfilePropertiesOutput {
	return o.ApplyT(func(v *LinuxProfileProperties) LinuxProfileProperties {
		if v != nil {
			return *v
		}
		var ret LinuxProfileProperties
		return ret
	}).(LinuxProfilePropertiesOutput)
}

// SSH - SSH configuration for Linux-based VMs running on Azure.
func (o LinuxProfilePropertiesPtrOutput) Ssh() LinuxProfilePropertiesSshPtrOutput {
	return o.ApplyT(func(v *LinuxProfileProperties) *LinuxProfilePropertiesSsh {
		if v == nil {
			return nil
		}
		return v.Ssh
	}).(LinuxProfilePropertiesSshPtrOutput)
}

type LinuxProfilePropertiesPublicKeys struct {
	// KeyData - Certificate public key used to authenticate with VMs through SSH. The certificate must be in PEM format with or without headers.
	KeyData *string `pulumi:"keyData"`
}

// LinuxProfilePropertiesPublicKeysInput is an input type that accepts LinuxProfilePropertiesPublicKeysArgs and LinuxProfilePropertiesPublicKeysOutput values.
// You can construct a concrete instance of `LinuxProfilePropertiesPublicKeysInput` via:
//
//	LinuxProfilePropertiesPublicKeysArgs{...}
type LinuxProfilePropertiesPublicKeysInput interface {
	pulumi.Input

	ToLinuxProfilePropertiesPublicKeysOutput() LinuxProfilePropertiesPublicKeysOutput
	ToLinuxProfilePropertiesPublicKeysOutputWithContext(context.Context) LinuxProfilePropertiesPublicKeysOutput
}

type LinuxProfilePropertiesPublicKeysArgs struct {
	// KeyData - Certificate public key used to authenticate with VMs through SSH. The certificate must be in PEM format with or without headers.
	KeyData pulumi.StringPtrInput `pulumi:"keyData"`
}

func (LinuxProfilePropertiesPublicKeysArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LinuxProfilePropertiesPublicKeys)(nil)).Elem()
}

func (i LinuxProfilePropertiesPublicKeysArgs) ToLinuxProfilePropertiesPublicKeysOutput() LinuxProfilePropertiesPublicKeysOutput {
	return i.ToLinuxProfilePropertiesPublicKeysOutputWithContext(context.Background())
}

func (i LinuxProfilePropertiesPublicKeysArgs) ToLinuxProfilePropertiesPublicKeysOutputWithContext(ctx context.Context) LinuxProfilePropertiesPublicKeysOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinuxProfilePropertiesPublicKeysOutput)
}

// LinuxProfilePropertiesPublicKeysArrayInput is an input type that accepts LinuxProfilePropertiesPublicKeysArray and LinuxProfilePropertiesPublicKeysArrayOutput values.
// You can construct a concrete instance of `LinuxProfilePropertiesPublicKeysArrayInput` via:
//
//	LinuxProfilePropertiesPublicKeysArray{ LinuxProfilePropertiesPublicKeysArgs{...} }
type LinuxProfilePropertiesPublicKeysArrayInput interface {
	pulumi.Input

	ToLinuxProfilePropertiesPublicKeysArrayOutput() LinuxProfilePropertiesPublicKeysArrayOutput
	ToLinuxProfilePropertiesPublicKeysArrayOutputWithContext(context.Context) LinuxProfilePropertiesPublicKeysArrayOutput
}

type LinuxProfilePropertiesPublicKeysArray []LinuxProfilePropertiesPublicKeysInput

func (LinuxProfilePropertiesPublicKeysArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LinuxProfilePropertiesPublicKeys)(nil)).Elem()
}

func (i LinuxProfilePropertiesPublicKeysArray) ToLinuxProfilePropertiesPublicKeysArrayOutput() LinuxProfilePropertiesPublicKeysArrayOutput {
	return i.ToLinuxProfilePropertiesPublicKeysArrayOutputWithContext(context.Background())
}

func (i LinuxProfilePropertiesPublicKeysArray) ToLinuxProfilePropertiesPublicKeysArrayOutputWithContext(ctx context.Context) LinuxProfilePropertiesPublicKeysArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinuxProfilePropertiesPublicKeysArrayOutput)
}

type LinuxProfilePropertiesPublicKeysOutput struct{ *pulumi.OutputState }

func (LinuxProfilePropertiesPublicKeysOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LinuxProfilePropertiesPublicKeys)(nil)).Elem()
}

func (o LinuxProfilePropertiesPublicKeysOutput) ToLinuxProfilePropertiesPublicKeysOutput() LinuxProfilePropertiesPublicKeysOutput {
	return o
}

func (o LinuxProfilePropertiesPublicKeysOutput) ToLinuxProfilePropertiesPublicKeysOutputWithContext(ctx context.Context) LinuxProfilePropertiesPublicKeysOutput {
	return o
}

// KeyData - Certificate public key used to authenticate with VMs through SSH. The certificate must be in PEM format with or without headers.
func (o LinuxProfilePropertiesPublicKeysOutput) KeyData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LinuxProfilePropertiesPublicKeys) *string { return v.KeyData }).(pulumi.StringPtrOutput)
}

type LinuxProfilePropertiesPublicKeysArrayOutput struct{ *pulumi.OutputState }

func (LinuxProfilePropertiesPublicKeysArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LinuxProfilePropertiesPublicKeys)(nil)).Elem()
}

func (o LinuxProfilePropertiesPublicKeysArrayOutput) ToLinuxProfilePropertiesPublicKeysArrayOutput() LinuxProfilePropertiesPublicKeysArrayOutput {
	return o
}

func (o LinuxProfilePropertiesPublicKeysArrayOutput) ToLinuxProfilePropertiesPublicKeysArrayOutputWithContext(ctx context.Context) LinuxProfilePropertiesPublicKeysArrayOutput {
	return o
}

func (o LinuxProfilePropertiesPublicKeysArrayOutput) Index(i pulumi.IntInput) LinuxProfilePropertiesPublicKeysOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LinuxProfilePropertiesPublicKeys {
		return vs[0].([]LinuxProfilePropertiesPublicKeys)[vs[1].(int)]
	}).(LinuxProfilePropertiesPublicKeysOutput)
}

// LinuxProfile - Profile for Linux VMs in the container service cluster.
type LinuxProfilePropertiesResponse struct {
	// SSH - SSH configuration for Linux-based VMs running on Azure.
	Ssh *LinuxProfilePropertiesResponseSsh `pulumi:"ssh"`
}

// LinuxProfile - Profile for Linux VMs in the container service cluster.
type LinuxProfilePropertiesResponseOutput struct{ *pulumi.OutputState }

func (LinuxProfilePropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LinuxProfilePropertiesResponse)(nil)).Elem()
}

func (o LinuxProfilePropertiesResponseOutput) ToLinuxProfilePropertiesResponseOutput() LinuxProfilePropertiesResponseOutput {
	return o
}

func (o LinuxProfilePropertiesResponseOutput) ToLinuxProfilePropertiesResponseOutputWithContext(ctx context.Context) LinuxProfilePropertiesResponseOutput {
	return o
}

// SSH - SSH configuration for Linux-based VMs running on Azure.
func (o LinuxProfilePropertiesResponseOutput) Ssh() LinuxProfilePropertiesResponseSshPtrOutput {
	return o.ApplyT(func(v LinuxProfilePropertiesResponse) *LinuxProfilePropertiesResponseSsh { return v.Ssh }).(LinuxProfilePropertiesResponseSshPtrOutput)
}

type LinuxProfilePropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (LinuxProfilePropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LinuxProfilePropertiesResponse)(nil)).Elem()
}

func (o LinuxProfilePropertiesResponsePtrOutput) ToLinuxProfilePropertiesResponsePtrOutput() LinuxProfilePropertiesResponsePtrOutput {
	return o
}

func (o LinuxProfilePropertiesResponsePtrOutput) ToLinuxProfilePropertiesResponsePtrOutputWithContext(ctx context.Context) LinuxProfilePropertiesResponsePtrOutput {
	return o
}

func (o LinuxProfilePropertiesResponsePtrOutput) Elem() LinuxProfilePropertiesResponseOutput {
	return o.ApplyT(func(v *LinuxProfilePropertiesResponse) LinuxProfilePropertiesResponse {
		if v != nil {
			return *v
		}
		var ret LinuxProfilePropertiesResponse
		return ret
	}).(LinuxProfilePropertiesResponseOutput)
}

// SSH - SSH configuration for Linux-based VMs running on Azure.
func (o LinuxProfilePropertiesResponsePtrOutput) Ssh() LinuxProfilePropertiesResponseSshPtrOutput {
	return o.ApplyT(func(v *LinuxProfilePropertiesResponse) *LinuxProfilePropertiesResponseSsh {
		if v == nil {
			return nil
		}
		return v.Ssh
	}).(LinuxProfilePropertiesResponseSshPtrOutput)
}

type LinuxProfilePropertiesResponsePublicKeys struct {
	// KeyData - Certificate public key used to authenticate with VMs through SSH. The certificate must be in PEM format with or without headers.
	KeyData *string `pulumi:"keyData"`
}

type LinuxProfilePropertiesResponsePublicKeysOutput struct{ *pulumi.OutputState }

func (LinuxProfilePropertiesResponsePublicKeysOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LinuxProfilePropertiesResponsePublicKeys)(nil)).Elem()
}

func (o LinuxProfilePropertiesResponsePublicKeysOutput) ToLinuxProfilePropertiesResponsePublicKeysOutput() LinuxProfilePropertiesResponsePublicKeysOutput {
	return o
}

func (o LinuxProfilePropertiesResponsePublicKeysOutput) ToLinuxProfilePropertiesResponsePublicKeysOutputWithContext(ctx context.Context) LinuxProfilePropertiesResponsePublicKeysOutput {
	return o
}

// KeyData - Certificate public key used to authenticate with VMs through SSH. The certificate must be in PEM format with or without headers.
func (o LinuxProfilePropertiesResponsePublicKeysOutput) KeyData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LinuxProfilePropertiesResponsePublicKeys) *string { return v.KeyData }).(pulumi.StringPtrOutput)
}

type LinuxProfilePropertiesResponsePublicKeysArrayOutput struct{ *pulumi.OutputState }

func (LinuxProfilePropertiesResponsePublicKeysArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LinuxProfilePropertiesResponsePublicKeys)(nil)).Elem()
}

func (o LinuxProfilePropertiesResponsePublicKeysArrayOutput) ToLinuxProfilePropertiesResponsePublicKeysArrayOutput() LinuxProfilePropertiesResponsePublicKeysArrayOutput {
	return o
}

func (o LinuxProfilePropertiesResponsePublicKeysArrayOutput) ToLinuxProfilePropertiesResponsePublicKeysArrayOutputWithContext(ctx context.Context) LinuxProfilePropertiesResponsePublicKeysArrayOutput {
	return o
}

func (o LinuxProfilePropertiesResponsePublicKeysArrayOutput) Index(i pulumi.IntInput) LinuxProfilePropertiesResponsePublicKeysOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LinuxProfilePropertiesResponsePublicKeys {
		return vs[0].([]LinuxProfilePropertiesResponsePublicKeys)[vs[1].(int)]
	}).(LinuxProfilePropertiesResponsePublicKeysOutput)
}

// SSH - SSH configuration for Linux-based VMs running on Azure.
type LinuxProfilePropertiesResponseSsh struct {
	// PublicKeys - The list of SSH public keys used to authenticate with Linux-based VMs. Only expect one key specified.
	PublicKeys []LinuxProfilePropertiesResponsePublicKeys `pulumi:"publicKeys"`
}

// SSH - SSH configuration for Linux-based VMs running on Azure.
type LinuxProfilePropertiesResponseSshOutput struct{ *pulumi.OutputState }

func (LinuxProfilePropertiesResponseSshOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LinuxProfilePropertiesResponseSsh)(nil)).Elem()
}

func (o LinuxProfilePropertiesResponseSshOutput) ToLinuxProfilePropertiesResponseSshOutput() LinuxProfilePropertiesResponseSshOutput {
	return o
}

func (o LinuxProfilePropertiesResponseSshOutput) ToLinuxProfilePropertiesResponseSshOutputWithContext(ctx context.Context) LinuxProfilePropertiesResponseSshOutput {
	return o
}

// PublicKeys - The list of SSH public keys used to authenticate with Linux-based VMs. Only expect one key specified.
func (o LinuxProfilePropertiesResponseSshOutput) PublicKeys() LinuxProfilePropertiesResponsePublicKeysArrayOutput {
	return o.ApplyT(func(v LinuxProfilePropertiesResponseSsh) []LinuxProfilePropertiesResponsePublicKeys {
		return v.PublicKeys
	}).(LinuxProfilePropertiesResponsePublicKeysArrayOutput)
}

type LinuxProfilePropertiesResponseSshPtrOutput struct{ *pulumi.OutputState }

func (LinuxProfilePropertiesResponseSshPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LinuxProfilePropertiesResponseSsh)(nil)).Elem()
}

func (o LinuxProfilePropertiesResponseSshPtrOutput) ToLinuxProfilePropertiesResponseSshPtrOutput() LinuxProfilePropertiesResponseSshPtrOutput {
	return o
}

func (o LinuxProfilePropertiesResponseSshPtrOutput) ToLinuxProfilePropertiesResponseSshPtrOutputWithContext(ctx context.Context) LinuxProfilePropertiesResponseSshPtrOutput {
	return o
}

func (o LinuxProfilePropertiesResponseSshPtrOutput) Elem() LinuxProfilePropertiesResponseSshOutput {
	return o.ApplyT(func(v *LinuxProfilePropertiesResponseSsh) LinuxProfilePropertiesResponseSsh {
		if v != nil {
			return *v
		}
		var ret LinuxProfilePropertiesResponseSsh
		return ret
	}).(LinuxProfilePropertiesResponseSshOutput)
}

// PublicKeys - The list of SSH public keys used to authenticate with Linux-based VMs. Only expect one key specified.
func (o LinuxProfilePropertiesResponseSshPtrOutput) PublicKeys() LinuxProfilePropertiesResponsePublicKeysArrayOutput {
	return o.ApplyT(func(v *LinuxProfilePropertiesResponseSsh) []LinuxProfilePropertiesResponsePublicKeys {
		if v == nil {
			return nil
		}
		return v.PublicKeys
	}).(LinuxProfilePropertiesResponsePublicKeysArrayOutput)
}

// SSH - SSH configuration for Linux-based VMs running on Azure.
type LinuxProfilePropertiesSsh struct {
	// PublicKeys - The list of SSH public keys used to authenticate with Linux-based VMs. Only expect one key specified.
	PublicKeys []LinuxProfilePropertiesPublicKeys `pulumi:"publicKeys"`
}

// LinuxProfilePropertiesSshInput is an input type that accepts LinuxProfilePropertiesSshArgs and LinuxProfilePropertiesSshOutput values.
// You can construct a concrete instance of `LinuxProfilePropertiesSshInput` via:
//
//	LinuxProfilePropertiesSshArgs{...}
type LinuxProfilePropertiesSshInput interface {
	pulumi.Input

	ToLinuxProfilePropertiesSshOutput() LinuxProfilePropertiesSshOutput
	ToLinuxProfilePropertiesSshOutputWithContext(context.Context) LinuxProfilePropertiesSshOutput
}

// SSH - SSH configuration for Linux-based VMs running on Azure.
type LinuxProfilePropertiesSshArgs struct {
	// PublicKeys - The list of SSH public keys used to authenticate with Linux-based VMs. Only expect one key specified.
	PublicKeys LinuxProfilePropertiesPublicKeysArrayInput `pulumi:"publicKeys"`
}

func (LinuxProfilePropertiesSshArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LinuxProfilePropertiesSsh)(nil)).Elem()
}

func (i LinuxProfilePropertiesSshArgs) ToLinuxProfilePropertiesSshOutput() LinuxProfilePropertiesSshOutput {
	return i.ToLinuxProfilePropertiesSshOutputWithContext(context.Background())
}

func (i LinuxProfilePropertiesSshArgs) ToLinuxProfilePropertiesSshOutputWithContext(ctx context.Context) LinuxProfilePropertiesSshOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinuxProfilePropertiesSshOutput)
}

func (i LinuxProfilePropertiesSshArgs) ToLinuxProfilePropertiesSshPtrOutput() LinuxProfilePropertiesSshPtrOutput {
	return i.ToLinuxProfilePropertiesSshPtrOutputWithContext(context.Background())
}

func (i LinuxProfilePropertiesSshArgs) ToLinuxProfilePropertiesSshPtrOutputWithContext(ctx context.Context) LinuxProfilePropertiesSshPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinuxProfilePropertiesSshOutput).ToLinuxProfilePropertiesSshPtrOutputWithContext(ctx)
}

// LinuxProfilePropertiesSshPtrInput is an input type that accepts LinuxProfilePropertiesSshArgs, LinuxProfilePropertiesSshPtr and LinuxProfilePropertiesSshPtrOutput values.
// You can construct a concrete instance of `LinuxProfilePropertiesSshPtrInput` via:
//
//	        LinuxProfilePropertiesSshArgs{...}
//
//	or:
//
//	        nil
type LinuxProfilePropertiesSshPtrInput interface {
	pulumi.Input

	ToLinuxProfilePropertiesSshPtrOutput() LinuxProfilePropertiesSshPtrOutput
	ToLinuxProfilePropertiesSshPtrOutputWithContext(context.Context) LinuxProfilePropertiesSshPtrOutput
}

type linuxProfilePropertiesSshPtrType LinuxProfilePropertiesSshArgs

func LinuxProfilePropertiesSshPtr(v *LinuxProfilePropertiesSshArgs) LinuxProfilePropertiesSshPtrInput {
	return (*linuxProfilePropertiesSshPtrType)(v)
}

func (*linuxProfilePropertiesSshPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LinuxProfilePropertiesSsh)(nil)).Elem()
}

func (i *linuxProfilePropertiesSshPtrType) ToLinuxProfilePropertiesSshPtrOutput() LinuxProfilePropertiesSshPtrOutput {
	return i.ToLinuxProfilePropertiesSshPtrOutputWithContext(context.Background())
}

func (i *linuxProfilePropertiesSshPtrType) ToLinuxProfilePropertiesSshPtrOutputWithContext(ctx context.Context) LinuxProfilePropertiesSshPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinuxProfilePropertiesSshPtrOutput)
}

// SSH - SSH configuration for Linux-based VMs running on Azure.
type LinuxProfilePropertiesSshOutput struct{ *pulumi.OutputState }

func (LinuxProfilePropertiesSshOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LinuxProfilePropertiesSsh)(nil)).Elem()
}

func (o LinuxProfilePropertiesSshOutput) ToLinuxProfilePropertiesSshOutput() LinuxProfilePropertiesSshOutput {
	return o
}

func (o LinuxProfilePropertiesSshOutput) ToLinuxProfilePropertiesSshOutputWithContext(ctx context.Context) LinuxProfilePropertiesSshOutput {
	return o
}

func (o LinuxProfilePropertiesSshOutput) ToLinuxProfilePropertiesSshPtrOutput() LinuxProfilePropertiesSshPtrOutput {
	return o.ToLinuxProfilePropertiesSshPtrOutputWithContext(context.Background())
}

func (o LinuxProfilePropertiesSshOutput) ToLinuxProfilePropertiesSshPtrOutputWithContext(ctx context.Context) LinuxProfilePropertiesSshPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LinuxProfilePropertiesSsh) *LinuxProfilePropertiesSsh {
		return &v
	}).(LinuxProfilePropertiesSshPtrOutput)
}

// PublicKeys - The list of SSH public keys used to authenticate with Linux-based VMs. Only expect one key specified.
func (o LinuxProfilePropertiesSshOutput) PublicKeys() LinuxProfilePropertiesPublicKeysArrayOutput {
	return o.ApplyT(func(v LinuxProfilePropertiesSsh) []LinuxProfilePropertiesPublicKeys { return v.PublicKeys }).(LinuxProfilePropertiesPublicKeysArrayOutput)
}

type LinuxProfilePropertiesSshPtrOutput struct{ *pulumi.OutputState }

func (LinuxProfilePropertiesSshPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LinuxProfilePropertiesSsh)(nil)).Elem()
}

func (o LinuxProfilePropertiesSshPtrOutput) ToLinuxProfilePropertiesSshPtrOutput() LinuxProfilePropertiesSshPtrOutput {
	return o
}

func (o LinuxProfilePropertiesSshPtrOutput) ToLinuxProfilePropertiesSshPtrOutputWithContext(ctx context.Context) LinuxProfilePropertiesSshPtrOutput {
	return o
}

func (o LinuxProfilePropertiesSshPtrOutput) Elem() LinuxProfilePropertiesSshOutput {
	return o.ApplyT(func(v *LinuxProfilePropertiesSsh) LinuxProfilePropertiesSsh {
		if v != nil {
			return *v
		}
		var ret LinuxProfilePropertiesSsh
		return ret
	}).(LinuxProfilePropertiesSshOutput)
}

// PublicKeys - The list of SSH public keys used to authenticate with Linux-based VMs. Only expect one key specified.
func (o LinuxProfilePropertiesSshPtrOutput) PublicKeys() LinuxProfilePropertiesPublicKeysArrayOutput {
	return o.ApplyT(func(v *LinuxProfilePropertiesSsh) []LinuxProfilePropertiesPublicKeys {
		if v == nil {
			return nil
		}
		return v.PublicKeys
	}).(LinuxProfilePropertiesPublicKeysArrayOutput)
}

type ListCredentialResponseResponseError struct {
	Code    *string `pulumi:"code"`
	Message *string `pulumi:"message"`
}

type ListCredentialResponseResponseErrorOutput struct{ *pulumi.OutputState }

func (ListCredentialResponseResponseErrorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListCredentialResponseResponseError)(nil)).Elem()
}

func (o ListCredentialResponseResponseErrorOutput) ToListCredentialResponseResponseErrorOutput() ListCredentialResponseResponseErrorOutput {
	return o
}

func (o ListCredentialResponseResponseErrorOutput) ToListCredentialResponseResponseErrorOutputWithContext(ctx context.Context) ListCredentialResponseResponseErrorOutput {
	return o
}

func (o ListCredentialResponseResponseErrorOutput) Code() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListCredentialResponseResponseError) *string { return v.Code }).(pulumi.StringPtrOutput)
}

func (o ListCredentialResponseResponseErrorOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListCredentialResponseResponseError) *string { return v.Message }).(pulumi.StringPtrOutput)
}

type ListCredentialResponseResponseErrorPtrOutput struct{ *pulumi.OutputState }

func (ListCredentialResponseResponseErrorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ListCredentialResponseResponseError)(nil)).Elem()
}

func (o ListCredentialResponseResponseErrorPtrOutput) ToListCredentialResponseResponseErrorPtrOutput() ListCredentialResponseResponseErrorPtrOutput {
	return o
}

func (o ListCredentialResponseResponseErrorPtrOutput) ToListCredentialResponseResponseErrorPtrOutputWithContext(ctx context.Context) ListCredentialResponseResponseErrorPtrOutput {
	return o
}

func (o ListCredentialResponseResponseErrorPtrOutput) Elem() ListCredentialResponseResponseErrorOutput {
	return o.ApplyT(func(v *ListCredentialResponseResponseError) ListCredentialResponseResponseError {
		if v != nil {
			return *v
		}
		var ret ListCredentialResponseResponseError
		return ret
	}).(ListCredentialResponseResponseErrorOutput)
}

func (o ListCredentialResponseResponseErrorPtrOutput) Code() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ListCredentialResponseResponseError) *string {
		if v == nil {
			return nil
		}
		return v.Code
	}).(pulumi.StringPtrOutput)
}

func (o ListCredentialResponseResponseErrorPtrOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ListCredentialResponseResponseError) *string {
		if v == nil {
			return nil
		}
		return v.Message
	}).(pulumi.StringPtrOutput)
}

type ListCredentialResponseResponseProperties struct {
	// Base64-encoded Kubernetes configuration file.
	Kubeconfigs []CredentialResultResponse `pulumi:"kubeconfigs"`
}

type ListCredentialResponseResponsePropertiesOutput struct{ *pulumi.OutputState }

func (ListCredentialResponseResponsePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListCredentialResponseResponseProperties)(nil)).Elem()
}

func (o ListCredentialResponseResponsePropertiesOutput) ToListCredentialResponseResponsePropertiesOutput() ListCredentialResponseResponsePropertiesOutput {
	return o
}

func (o ListCredentialResponseResponsePropertiesOutput) ToListCredentialResponseResponsePropertiesOutputWithContext(ctx context.Context) ListCredentialResponseResponsePropertiesOutput {
	return o
}

// Base64-encoded Kubernetes configuration file.
func (o ListCredentialResponseResponsePropertiesOutput) Kubeconfigs() CredentialResultResponseArrayOutput {
	return o.ApplyT(func(v ListCredentialResponseResponseProperties) []CredentialResultResponse { return v.Kubeconfigs }).(CredentialResultResponseArrayOutput)
}

// Agent pool profile along with a name parameter
type NamedAgentPoolProfile struct {
	// AvailabilityZones - The list of Availability zones to use for nodes. Datacenter racks modelled as zones
	AvailabilityZones []string `pulumi:"availabilityZones"`
	// Count - Number of agents to host docker containers. Allowed values must be in the range of 1 to 100 (inclusive). The default value is 1.
	Count *int `pulumi:"count"`
	// Unique name of the agent pool profile in the context of the subscription and resource group.
	Name *string `pulumi:"name"`
	// The version of node image
	NodeImageVersion *string `pulumi:"nodeImageVersion"`
	// Specifies the OS SKU used by the agent pool. The default is CBLMariner if OSType is Linux. The default is Windows2019 when OSType is Windows.
	OsSKU *string `pulumi:"osSKU"`
	// OsType - OsType to be used to specify os type. Choose from Linux and Windows. Default to Linux. Possible values include: 'Linux', 'Windows'
	OsType *string `pulumi:"osType"`
	// VmSize - The size of the agent pool VMs.
	VmSize *string `pulumi:"vmSize"`
}

// Defaults sets the appropriate defaults for NamedAgentPoolProfile
func (val *NamedAgentPoolProfile) Defaults() *NamedAgentPoolProfile {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Count == nil {
		count_ := 1
		tmp.Count = &count_
	}
	return &tmp
}

// NamedAgentPoolProfileInput is an input type that accepts NamedAgentPoolProfileArgs and NamedAgentPoolProfileOutput values.
// You can construct a concrete instance of `NamedAgentPoolProfileInput` via:
//
//	NamedAgentPoolProfileArgs{...}
type NamedAgentPoolProfileInput interface {
	pulumi.Input

	ToNamedAgentPoolProfileOutput() NamedAgentPoolProfileOutput
	ToNamedAgentPoolProfileOutputWithContext(context.Context) NamedAgentPoolProfileOutput
}

// Agent pool profile along with a name parameter
type NamedAgentPoolProfileArgs struct {
	// AvailabilityZones - The list of Availability zones to use for nodes. Datacenter racks modelled as zones
	AvailabilityZones pulumi.StringArrayInput `pulumi:"availabilityZones"`
	// Count - Number of agents to host docker containers. Allowed values must be in the range of 1 to 100 (inclusive). The default value is 1.
	Count pulumi.IntPtrInput `pulumi:"count"`
	// Unique name of the agent pool profile in the context of the subscription and resource group.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The version of node image
	NodeImageVersion pulumi.StringPtrInput `pulumi:"nodeImageVersion"`
	// Specifies the OS SKU used by the agent pool. The default is CBLMariner if OSType is Linux. The default is Windows2019 when OSType is Windows.
	OsSKU pulumi.StringPtrInput `pulumi:"osSKU"`
	// OsType - OsType to be used to specify os type. Choose from Linux and Windows. Default to Linux. Possible values include: 'Linux', 'Windows'
	OsType pulumi.StringPtrInput `pulumi:"osType"`
	// VmSize - The size of the agent pool VMs.
	VmSize pulumi.StringPtrInput `pulumi:"vmSize"`
}

// Defaults sets the appropriate defaults for NamedAgentPoolProfileArgs
func (val *NamedAgentPoolProfileArgs) Defaults() *NamedAgentPoolProfileArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Count == nil {
		tmp.Count = pulumi.IntPtr(1)
	}
	return &tmp
}
func (NamedAgentPoolProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NamedAgentPoolProfile)(nil)).Elem()
}

func (i NamedAgentPoolProfileArgs) ToNamedAgentPoolProfileOutput() NamedAgentPoolProfileOutput {
	return i.ToNamedAgentPoolProfileOutputWithContext(context.Background())
}

func (i NamedAgentPoolProfileArgs) ToNamedAgentPoolProfileOutputWithContext(ctx context.Context) NamedAgentPoolProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NamedAgentPoolProfileOutput)
}

// NamedAgentPoolProfileArrayInput is an input type that accepts NamedAgentPoolProfileArray and NamedAgentPoolProfileArrayOutput values.
// You can construct a concrete instance of `NamedAgentPoolProfileArrayInput` via:
//
//	NamedAgentPoolProfileArray{ NamedAgentPoolProfileArgs{...} }
type NamedAgentPoolProfileArrayInput interface {
	pulumi.Input

	ToNamedAgentPoolProfileArrayOutput() NamedAgentPoolProfileArrayOutput
	ToNamedAgentPoolProfileArrayOutputWithContext(context.Context) NamedAgentPoolProfileArrayOutput
}

type NamedAgentPoolProfileArray []NamedAgentPoolProfileInput

func (NamedAgentPoolProfileArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NamedAgentPoolProfile)(nil)).Elem()
}

func (i NamedAgentPoolProfileArray) ToNamedAgentPoolProfileArrayOutput() NamedAgentPoolProfileArrayOutput {
	return i.ToNamedAgentPoolProfileArrayOutputWithContext(context.Background())
}

func (i NamedAgentPoolProfileArray) ToNamedAgentPoolProfileArrayOutputWithContext(ctx context.Context) NamedAgentPoolProfileArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NamedAgentPoolProfileArrayOutput)
}

// Agent pool profile along with a name parameter
type NamedAgentPoolProfileOutput struct{ *pulumi.OutputState }

func (NamedAgentPoolProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NamedAgentPoolProfile)(nil)).Elem()
}

func (o NamedAgentPoolProfileOutput) ToNamedAgentPoolProfileOutput() NamedAgentPoolProfileOutput {
	return o
}

func (o NamedAgentPoolProfileOutput) ToNamedAgentPoolProfileOutputWithContext(ctx context.Context) NamedAgentPoolProfileOutput {
	return o
}

// AvailabilityZones - The list of Availability zones to use for nodes. Datacenter racks modelled as zones
func (o NamedAgentPoolProfileOutput) AvailabilityZones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NamedAgentPoolProfile) []string { return v.AvailabilityZones }).(pulumi.StringArrayOutput)
}

// Count - Number of agents to host docker containers. Allowed values must be in the range of 1 to 100 (inclusive). The default value is 1.
func (o NamedAgentPoolProfileOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NamedAgentPoolProfile) *int { return v.Count }).(pulumi.IntPtrOutput)
}

// Unique name of the agent pool profile in the context of the subscription and resource group.
func (o NamedAgentPoolProfileOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NamedAgentPoolProfile) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The version of node image
func (o NamedAgentPoolProfileOutput) NodeImageVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NamedAgentPoolProfile) *string { return v.NodeImageVersion }).(pulumi.StringPtrOutput)
}

// Specifies the OS SKU used by the agent pool. The default is CBLMariner if OSType is Linux. The default is Windows2019 when OSType is Windows.
func (o NamedAgentPoolProfileOutput) OsSKU() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NamedAgentPoolProfile) *string { return v.OsSKU }).(pulumi.StringPtrOutput)
}

// OsType - OsType to be used to specify os type. Choose from Linux and Windows. Default to Linux. Possible values include: 'Linux', 'Windows'
func (o NamedAgentPoolProfileOutput) OsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NamedAgentPoolProfile) *string { return v.OsType }).(pulumi.StringPtrOutput)
}

// VmSize - The size of the agent pool VMs.
func (o NamedAgentPoolProfileOutput) VmSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NamedAgentPoolProfile) *string { return v.VmSize }).(pulumi.StringPtrOutput)
}

type NamedAgentPoolProfileArrayOutput struct{ *pulumi.OutputState }

func (NamedAgentPoolProfileArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NamedAgentPoolProfile)(nil)).Elem()
}

func (o NamedAgentPoolProfileArrayOutput) ToNamedAgentPoolProfileArrayOutput() NamedAgentPoolProfileArrayOutput {
	return o
}

func (o NamedAgentPoolProfileArrayOutput) ToNamedAgentPoolProfileArrayOutputWithContext(ctx context.Context) NamedAgentPoolProfileArrayOutput {
	return o
}

func (o NamedAgentPoolProfileArrayOutput) Index(i pulumi.IntInput) NamedAgentPoolProfileOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NamedAgentPoolProfile {
		return vs[0].([]NamedAgentPoolProfile)[vs[1].(int)]
	}).(NamedAgentPoolProfileOutput)
}

// Agent pool profile along with a name parameter
type NamedAgentPoolProfileResponse struct {
	// AvailabilityZones - The list of Availability zones to use for nodes. Datacenter racks modelled as zones
	AvailabilityZones []string `pulumi:"availabilityZones"`
	// Count - Number of agents to host docker containers. Allowed values must be in the range of 1 to 100 (inclusive). The default value is 1.
	Count *int `pulumi:"count"`
	// Unique name of the agent pool profile in the context of the subscription and resource group.
	Name *string `pulumi:"name"`
	// The version of node image
	NodeImageVersion *string `pulumi:"nodeImageVersion"`
	// Specifies the OS SKU used by the agent pool. The default is CBLMariner if OSType is Linux. The default is Windows2019 when OSType is Windows.
	OsSKU *string `pulumi:"osSKU"`
	// OsType - OsType to be used to specify os type. Choose from Linux and Windows. Default to Linux. Possible values include: 'Linux', 'Windows'
	OsType *string `pulumi:"osType"`
	// VmSize - The size of the agent pool VMs.
	VmSize *string `pulumi:"vmSize"`
}

// Defaults sets the appropriate defaults for NamedAgentPoolProfileResponse
func (val *NamedAgentPoolProfileResponse) Defaults() *NamedAgentPoolProfileResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Count == nil {
		count_ := 1
		tmp.Count = &count_
	}
	return &tmp
}

// Agent pool profile along with a name parameter
type NamedAgentPoolProfileResponseOutput struct{ *pulumi.OutputState }

func (NamedAgentPoolProfileResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NamedAgentPoolProfileResponse)(nil)).Elem()
}

func (o NamedAgentPoolProfileResponseOutput) ToNamedAgentPoolProfileResponseOutput() NamedAgentPoolProfileResponseOutput {
	return o
}

func (o NamedAgentPoolProfileResponseOutput) ToNamedAgentPoolProfileResponseOutputWithContext(ctx context.Context) NamedAgentPoolProfileResponseOutput {
	return o
}

// AvailabilityZones - The list of Availability zones to use for nodes. Datacenter racks modelled as zones
func (o NamedAgentPoolProfileResponseOutput) AvailabilityZones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NamedAgentPoolProfileResponse) []string { return v.AvailabilityZones }).(pulumi.StringArrayOutput)
}

// Count - Number of agents to host docker containers. Allowed values must be in the range of 1 to 100 (inclusive). The default value is 1.
func (o NamedAgentPoolProfileResponseOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NamedAgentPoolProfileResponse) *int { return v.Count }).(pulumi.IntPtrOutput)
}

// Unique name of the agent pool profile in the context of the subscription and resource group.
func (o NamedAgentPoolProfileResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NamedAgentPoolProfileResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The version of node image
func (o NamedAgentPoolProfileResponseOutput) NodeImageVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NamedAgentPoolProfileResponse) *string { return v.NodeImageVersion }).(pulumi.StringPtrOutput)
}

// Specifies the OS SKU used by the agent pool. The default is CBLMariner if OSType is Linux. The default is Windows2019 when OSType is Windows.
func (o NamedAgentPoolProfileResponseOutput) OsSKU() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NamedAgentPoolProfileResponse) *string { return v.OsSKU }).(pulumi.StringPtrOutput)
}

// OsType - OsType to be used to specify os type. Choose from Linux and Windows. Default to Linux. Possible values include: 'Linux', 'Windows'
func (o NamedAgentPoolProfileResponseOutput) OsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NamedAgentPoolProfileResponse) *string { return v.OsType }).(pulumi.StringPtrOutput)
}

// VmSize - The size of the agent pool VMs.
func (o NamedAgentPoolProfileResponseOutput) VmSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NamedAgentPoolProfileResponse) *string { return v.VmSize }).(pulumi.StringPtrOutput)
}

type NamedAgentPoolProfileResponseArrayOutput struct{ *pulumi.OutputState }

func (NamedAgentPoolProfileResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NamedAgentPoolProfileResponse)(nil)).Elem()
}

func (o NamedAgentPoolProfileResponseArrayOutput) ToNamedAgentPoolProfileResponseArrayOutput() NamedAgentPoolProfileResponseArrayOutput {
	return o
}

func (o NamedAgentPoolProfileResponseArrayOutput) ToNamedAgentPoolProfileResponseArrayOutputWithContext(ctx context.Context) NamedAgentPoolProfileResponseArrayOutput {
	return o
}

func (o NamedAgentPoolProfileResponseArrayOutput) Index(i pulumi.IntInput) NamedAgentPoolProfileResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NamedAgentPoolProfileResponse {
		return vs[0].([]NamedAgentPoolProfileResponse)[vs[1].(int)]
	}).(NamedAgentPoolProfileResponseOutput)
}

// NetworkProfile - Profile of network configuration.
type NetworkProfile struct {
	// LoadBalancerProfile - Profile of the cluster load balancer.
	LoadBalancerProfile *NetworkProfileLoadBalancerProfile `pulumi:"loadBalancerProfile"`
	// NetworkPolicy - Network policy used for building Kubernetes network. Possible values include: 'calico', 'flannel'. Default is 'calico'
	NetworkPolicy *string `pulumi:"networkPolicy"`
	// PodCidr - A CIDR notation IP range from which to assign pod IPs when kubenet is used.
	PodCidr *string `pulumi:"podCidr"`
}

// Defaults sets the appropriate defaults for NetworkProfile
func (val *NetworkProfile) Defaults() *NetworkProfile {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.LoadBalancerProfile = tmp.LoadBalancerProfile.Defaults()

	if tmp.NetworkPolicy == nil {
		networkPolicy_ := "calico"
		tmp.NetworkPolicy = &networkPolicy_
	}
	return &tmp
}

// NetworkProfileInput is an input type that accepts NetworkProfileArgs and NetworkProfileOutput values.
// You can construct a concrete instance of `NetworkProfileInput` via:
//
//	NetworkProfileArgs{...}
type NetworkProfileInput interface {
	pulumi.Input

	ToNetworkProfileOutput() NetworkProfileOutput
	ToNetworkProfileOutputWithContext(context.Context) NetworkProfileOutput
}

// NetworkProfile - Profile of network configuration.
type NetworkProfileArgs struct {
	// LoadBalancerProfile - Profile of the cluster load balancer.
	LoadBalancerProfile NetworkProfileLoadBalancerProfilePtrInput `pulumi:"loadBalancerProfile"`
	// NetworkPolicy - Network policy used for building Kubernetes network. Possible values include: 'calico', 'flannel'. Default is 'calico'
	NetworkPolicy pulumi.StringPtrInput `pulumi:"networkPolicy"`
	// PodCidr - A CIDR notation IP range from which to assign pod IPs when kubenet is used.
	PodCidr pulumi.StringPtrInput `pulumi:"podCidr"`
}

// Defaults sets the appropriate defaults for NetworkProfileArgs
func (val *NetworkProfileArgs) Defaults() *NetworkProfileArgs {
	if val == nil {
		return nil
	}
	tmp := *val

	if tmp.NetworkPolicy == nil {
		tmp.NetworkPolicy = pulumi.StringPtr("calico")
	}
	return &tmp
}
func (NetworkProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkProfile)(nil)).Elem()
}

func (i NetworkProfileArgs) ToNetworkProfileOutput() NetworkProfileOutput {
	return i.ToNetworkProfileOutputWithContext(context.Background())
}

func (i NetworkProfileArgs) ToNetworkProfileOutputWithContext(ctx context.Context) NetworkProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkProfileOutput)
}

func (i NetworkProfileArgs) ToNetworkProfilePtrOutput() NetworkProfilePtrOutput {
	return i.ToNetworkProfilePtrOutputWithContext(context.Background())
}

func (i NetworkProfileArgs) ToNetworkProfilePtrOutputWithContext(ctx context.Context) NetworkProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkProfileOutput).ToNetworkProfilePtrOutputWithContext(ctx)
}

// NetworkProfilePtrInput is an input type that accepts NetworkProfileArgs, NetworkProfilePtr and NetworkProfilePtrOutput values.
// You can construct a concrete instance of `NetworkProfilePtrInput` via:
//
//	        NetworkProfileArgs{...}
//
//	or:
//
//	        nil
type NetworkProfilePtrInput interface {
	pulumi.Input

	ToNetworkProfilePtrOutput() NetworkProfilePtrOutput
	ToNetworkProfilePtrOutputWithContext(context.Context) NetworkProfilePtrOutput
}

type networkProfilePtrType NetworkProfileArgs

func NetworkProfilePtr(v *NetworkProfileArgs) NetworkProfilePtrInput {
	return (*networkProfilePtrType)(v)
}

func (*networkProfilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkProfile)(nil)).Elem()
}

func (i *networkProfilePtrType) ToNetworkProfilePtrOutput() NetworkProfilePtrOutput {
	return i.ToNetworkProfilePtrOutputWithContext(context.Background())
}

func (i *networkProfilePtrType) ToNetworkProfilePtrOutputWithContext(ctx context.Context) NetworkProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkProfilePtrOutput)
}

// NetworkProfile - Profile of network configuration.
type NetworkProfileOutput struct{ *pulumi.OutputState }

func (NetworkProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkProfile)(nil)).Elem()
}

func (o NetworkProfileOutput) ToNetworkProfileOutput() NetworkProfileOutput {
	return o
}

func (o NetworkProfileOutput) ToNetworkProfileOutputWithContext(ctx context.Context) NetworkProfileOutput {
	return o
}

func (o NetworkProfileOutput) ToNetworkProfilePtrOutput() NetworkProfilePtrOutput {
	return o.ToNetworkProfilePtrOutputWithContext(context.Background())
}

func (o NetworkProfileOutput) ToNetworkProfilePtrOutputWithContext(ctx context.Context) NetworkProfilePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NetworkProfile) *NetworkProfile {
		return &v
	}).(NetworkProfilePtrOutput)
}

// LoadBalancerProfile - Profile of the cluster load balancer.
func (o NetworkProfileOutput) LoadBalancerProfile() NetworkProfileLoadBalancerProfilePtrOutput {
	return o.ApplyT(func(v NetworkProfile) *NetworkProfileLoadBalancerProfile { return v.LoadBalancerProfile }).(NetworkProfileLoadBalancerProfilePtrOutput)
}

// NetworkPolicy - Network policy used for building Kubernetes network. Possible values include: 'calico', 'flannel'. Default is 'calico'
func (o NetworkProfileOutput) NetworkPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkProfile) *string { return v.NetworkPolicy }).(pulumi.StringPtrOutput)
}

// PodCidr - A CIDR notation IP range from which to assign pod IPs when kubenet is used.
func (o NetworkProfileOutput) PodCidr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkProfile) *string { return v.PodCidr }).(pulumi.StringPtrOutput)
}

type NetworkProfilePtrOutput struct{ *pulumi.OutputState }

func (NetworkProfilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkProfile)(nil)).Elem()
}

func (o NetworkProfilePtrOutput) ToNetworkProfilePtrOutput() NetworkProfilePtrOutput {
	return o
}

func (o NetworkProfilePtrOutput) ToNetworkProfilePtrOutputWithContext(ctx context.Context) NetworkProfilePtrOutput {
	return o
}

func (o NetworkProfilePtrOutput) Elem() NetworkProfileOutput {
	return o.ApplyT(func(v *NetworkProfile) NetworkProfile {
		if v != nil {
			return *v
		}
		var ret NetworkProfile
		return ret
	}).(NetworkProfileOutput)
}

// LoadBalancerProfile - Profile of the cluster load balancer.
func (o NetworkProfilePtrOutput) LoadBalancerProfile() NetworkProfileLoadBalancerProfilePtrOutput {
	return o.ApplyT(func(v *NetworkProfile) *NetworkProfileLoadBalancerProfile {
		if v == nil {
			return nil
		}
		return v.LoadBalancerProfile
	}).(NetworkProfileLoadBalancerProfilePtrOutput)
}

// NetworkPolicy - Network policy used for building Kubernetes network. Possible values include: 'calico', 'flannel'. Default is 'calico'
func (o NetworkProfilePtrOutput) NetworkPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkProfile) *string {
		if v == nil {
			return nil
		}
		return v.NetworkPolicy
	}).(pulumi.StringPtrOutput)
}

// PodCidr - A CIDR notation IP range from which to assign pod IPs when kubenet is used.
func (o NetworkProfilePtrOutput) PodCidr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkProfile) *string {
		if v == nil {
			return nil
		}
		return v.PodCidr
	}).(pulumi.StringPtrOutput)
}

// LoadBalancerProfile - Profile of the cluster load balancer.
type NetworkProfileLoadBalancerProfile struct {
	// Count - Number of load balancer VMs. The default value is 0.
	Count *int `pulumi:"count"`
}

// Defaults sets the appropriate defaults for NetworkProfileLoadBalancerProfile
func (val *NetworkProfileLoadBalancerProfile) Defaults() *NetworkProfileLoadBalancerProfile {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Count == nil {
		count_ := 0
		tmp.Count = &count_
	}
	return &tmp
}

// NetworkProfileLoadBalancerProfileInput is an input type that accepts NetworkProfileLoadBalancerProfileArgs and NetworkProfileLoadBalancerProfileOutput values.
// You can construct a concrete instance of `NetworkProfileLoadBalancerProfileInput` via:
//
//	NetworkProfileLoadBalancerProfileArgs{...}
type NetworkProfileLoadBalancerProfileInput interface {
	pulumi.Input

	ToNetworkProfileLoadBalancerProfileOutput() NetworkProfileLoadBalancerProfileOutput
	ToNetworkProfileLoadBalancerProfileOutputWithContext(context.Context) NetworkProfileLoadBalancerProfileOutput
}

// LoadBalancerProfile - Profile of the cluster load balancer.
type NetworkProfileLoadBalancerProfileArgs struct {
	// Count - Number of load balancer VMs. The default value is 0.
	Count pulumi.IntPtrInput `pulumi:"count"`
}

// Defaults sets the appropriate defaults for NetworkProfileLoadBalancerProfileArgs
func (val *NetworkProfileLoadBalancerProfileArgs) Defaults() *NetworkProfileLoadBalancerProfileArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Count == nil {
		tmp.Count = pulumi.IntPtr(0)
	}
	return &tmp
}
func (NetworkProfileLoadBalancerProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkProfileLoadBalancerProfile)(nil)).Elem()
}

func (i NetworkProfileLoadBalancerProfileArgs) ToNetworkProfileLoadBalancerProfileOutput() NetworkProfileLoadBalancerProfileOutput {
	return i.ToNetworkProfileLoadBalancerProfileOutputWithContext(context.Background())
}

func (i NetworkProfileLoadBalancerProfileArgs) ToNetworkProfileLoadBalancerProfileOutputWithContext(ctx context.Context) NetworkProfileLoadBalancerProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkProfileLoadBalancerProfileOutput)
}

func (i NetworkProfileLoadBalancerProfileArgs) ToNetworkProfileLoadBalancerProfilePtrOutput() NetworkProfileLoadBalancerProfilePtrOutput {
	return i.ToNetworkProfileLoadBalancerProfilePtrOutputWithContext(context.Background())
}

func (i NetworkProfileLoadBalancerProfileArgs) ToNetworkProfileLoadBalancerProfilePtrOutputWithContext(ctx context.Context) NetworkProfileLoadBalancerProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkProfileLoadBalancerProfileOutput).ToNetworkProfileLoadBalancerProfilePtrOutputWithContext(ctx)
}

// NetworkProfileLoadBalancerProfilePtrInput is an input type that accepts NetworkProfileLoadBalancerProfileArgs, NetworkProfileLoadBalancerProfilePtr and NetworkProfileLoadBalancerProfilePtrOutput values.
// You can construct a concrete instance of `NetworkProfileLoadBalancerProfilePtrInput` via:
//
//	        NetworkProfileLoadBalancerProfileArgs{...}
//
//	or:
//
//	        nil
type NetworkProfileLoadBalancerProfilePtrInput interface {
	pulumi.Input

	ToNetworkProfileLoadBalancerProfilePtrOutput() NetworkProfileLoadBalancerProfilePtrOutput
	ToNetworkProfileLoadBalancerProfilePtrOutputWithContext(context.Context) NetworkProfileLoadBalancerProfilePtrOutput
}

type networkProfileLoadBalancerProfilePtrType NetworkProfileLoadBalancerProfileArgs

func NetworkProfileLoadBalancerProfilePtr(v *NetworkProfileLoadBalancerProfileArgs) NetworkProfileLoadBalancerProfilePtrInput {
	return (*networkProfileLoadBalancerProfilePtrType)(v)
}

func (*networkProfileLoadBalancerProfilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkProfileLoadBalancerProfile)(nil)).Elem()
}

func (i *networkProfileLoadBalancerProfilePtrType) ToNetworkProfileLoadBalancerProfilePtrOutput() NetworkProfileLoadBalancerProfilePtrOutput {
	return i.ToNetworkProfileLoadBalancerProfilePtrOutputWithContext(context.Background())
}

func (i *networkProfileLoadBalancerProfilePtrType) ToNetworkProfileLoadBalancerProfilePtrOutputWithContext(ctx context.Context) NetworkProfileLoadBalancerProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkProfileLoadBalancerProfilePtrOutput)
}

// LoadBalancerProfile - Profile of the cluster load balancer.
type NetworkProfileLoadBalancerProfileOutput struct{ *pulumi.OutputState }

func (NetworkProfileLoadBalancerProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkProfileLoadBalancerProfile)(nil)).Elem()
}

func (o NetworkProfileLoadBalancerProfileOutput) ToNetworkProfileLoadBalancerProfileOutput() NetworkProfileLoadBalancerProfileOutput {
	return o
}

func (o NetworkProfileLoadBalancerProfileOutput) ToNetworkProfileLoadBalancerProfileOutputWithContext(ctx context.Context) NetworkProfileLoadBalancerProfileOutput {
	return o
}

func (o NetworkProfileLoadBalancerProfileOutput) ToNetworkProfileLoadBalancerProfilePtrOutput() NetworkProfileLoadBalancerProfilePtrOutput {
	return o.ToNetworkProfileLoadBalancerProfilePtrOutputWithContext(context.Background())
}

func (o NetworkProfileLoadBalancerProfileOutput) ToNetworkProfileLoadBalancerProfilePtrOutputWithContext(ctx context.Context) NetworkProfileLoadBalancerProfilePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NetworkProfileLoadBalancerProfile) *NetworkProfileLoadBalancerProfile {
		return &v
	}).(NetworkProfileLoadBalancerProfilePtrOutput)
}

// Count - Number of load balancer VMs. The default value is 0.
func (o NetworkProfileLoadBalancerProfileOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NetworkProfileLoadBalancerProfile) *int { return v.Count }).(pulumi.IntPtrOutput)
}

type NetworkProfileLoadBalancerProfilePtrOutput struct{ *pulumi.OutputState }

func (NetworkProfileLoadBalancerProfilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkProfileLoadBalancerProfile)(nil)).Elem()
}

func (o NetworkProfileLoadBalancerProfilePtrOutput) ToNetworkProfileLoadBalancerProfilePtrOutput() NetworkProfileLoadBalancerProfilePtrOutput {
	return o
}

func (o NetworkProfileLoadBalancerProfilePtrOutput) ToNetworkProfileLoadBalancerProfilePtrOutputWithContext(ctx context.Context) NetworkProfileLoadBalancerProfilePtrOutput {
	return o
}

func (o NetworkProfileLoadBalancerProfilePtrOutput) Elem() NetworkProfileLoadBalancerProfileOutput {
	return o.ApplyT(func(v *NetworkProfileLoadBalancerProfile) NetworkProfileLoadBalancerProfile {
		if v != nil {
			return *v
		}
		var ret NetworkProfileLoadBalancerProfile
		return ret
	}).(NetworkProfileLoadBalancerProfileOutput)
}

// Count - Number of load balancer VMs. The default value is 0.
func (o NetworkProfileLoadBalancerProfilePtrOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NetworkProfileLoadBalancerProfile) *int {
		if v == nil {
			return nil
		}
		return v.Count
	}).(pulumi.IntPtrOutput)
}

// NetworkProfile - Profile of network configuration.
type NetworkProfileResponse struct {
	// LoadBalancerProfile - Profile of the cluster load balancer.
	LoadBalancerProfile *NetworkProfileResponseLoadBalancerProfile `pulumi:"loadBalancerProfile"`
	// NetworkPolicy - Network policy used for building Kubernetes network. Possible values include: 'calico', 'flannel'. Default is 'calico'
	NetworkPolicy *string `pulumi:"networkPolicy"`
	// PodCidr - A CIDR notation IP range from which to assign pod IPs when kubenet is used.
	PodCidr *string `pulumi:"podCidr"`
}

// Defaults sets the appropriate defaults for NetworkProfileResponse
func (val *NetworkProfileResponse) Defaults() *NetworkProfileResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.LoadBalancerProfile = tmp.LoadBalancerProfile.Defaults()

	if tmp.NetworkPolicy == nil {
		networkPolicy_ := "calico"
		tmp.NetworkPolicy = &networkPolicy_
	}
	return &tmp
}

// NetworkProfile - Profile of network configuration.
type NetworkProfileResponseOutput struct{ *pulumi.OutputState }

func (NetworkProfileResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkProfileResponse)(nil)).Elem()
}

func (o NetworkProfileResponseOutput) ToNetworkProfileResponseOutput() NetworkProfileResponseOutput {
	return o
}

func (o NetworkProfileResponseOutput) ToNetworkProfileResponseOutputWithContext(ctx context.Context) NetworkProfileResponseOutput {
	return o
}

// LoadBalancerProfile - Profile of the cluster load balancer.
func (o NetworkProfileResponseOutput) LoadBalancerProfile() NetworkProfileResponseLoadBalancerProfilePtrOutput {
	return o.ApplyT(func(v NetworkProfileResponse) *NetworkProfileResponseLoadBalancerProfile {
		return v.LoadBalancerProfile
	}).(NetworkProfileResponseLoadBalancerProfilePtrOutput)
}

// NetworkPolicy - Network policy used for building Kubernetes network. Possible values include: 'calico', 'flannel'. Default is 'calico'
func (o NetworkProfileResponseOutput) NetworkPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkProfileResponse) *string { return v.NetworkPolicy }).(pulumi.StringPtrOutput)
}

// PodCidr - A CIDR notation IP range from which to assign pod IPs when kubenet is used.
func (o NetworkProfileResponseOutput) PodCidr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkProfileResponse) *string { return v.PodCidr }).(pulumi.StringPtrOutput)
}

type NetworkProfileResponsePtrOutput struct{ *pulumi.OutputState }

func (NetworkProfileResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkProfileResponse)(nil)).Elem()
}

func (o NetworkProfileResponsePtrOutput) ToNetworkProfileResponsePtrOutput() NetworkProfileResponsePtrOutput {
	return o
}

func (o NetworkProfileResponsePtrOutput) ToNetworkProfileResponsePtrOutputWithContext(ctx context.Context) NetworkProfileResponsePtrOutput {
	return o
}

func (o NetworkProfileResponsePtrOutput) Elem() NetworkProfileResponseOutput {
	return o.ApplyT(func(v *NetworkProfileResponse) NetworkProfileResponse {
		if v != nil {
			return *v
		}
		var ret NetworkProfileResponse
		return ret
	}).(NetworkProfileResponseOutput)
}

// LoadBalancerProfile - Profile of the cluster load balancer.
func (o NetworkProfileResponsePtrOutput) LoadBalancerProfile() NetworkProfileResponseLoadBalancerProfilePtrOutput {
	return o.ApplyT(func(v *NetworkProfileResponse) *NetworkProfileResponseLoadBalancerProfile {
		if v == nil {
			return nil
		}
		return v.LoadBalancerProfile
	}).(NetworkProfileResponseLoadBalancerProfilePtrOutput)
}

// NetworkPolicy - Network policy used for building Kubernetes network. Possible values include: 'calico', 'flannel'. Default is 'calico'
func (o NetworkProfileResponsePtrOutput) NetworkPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkProfileResponse) *string {
		if v == nil {
			return nil
		}
		return v.NetworkPolicy
	}).(pulumi.StringPtrOutput)
}

// PodCidr - A CIDR notation IP range from which to assign pod IPs when kubenet is used.
func (o NetworkProfileResponsePtrOutput) PodCidr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkProfileResponse) *string {
		if v == nil {
			return nil
		}
		return v.PodCidr
	}).(pulumi.StringPtrOutput)
}

// LoadBalancerProfile - Profile of the cluster load balancer.
type NetworkProfileResponseLoadBalancerProfile struct {
	// Count - Number of load balancer VMs. The default value is 0.
	Count *int `pulumi:"count"`
}

// Defaults sets the appropriate defaults for NetworkProfileResponseLoadBalancerProfile
func (val *NetworkProfileResponseLoadBalancerProfile) Defaults() *NetworkProfileResponseLoadBalancerProfile {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Count == nil {
		count_ := 0
		tmp.Count = &count_
	}
	return &tmp
}

// LoadBalancerProfile - Profile of the cluster load balancer.
type NetworkProfileResponseLoadBalancerProfileOutput struct{ *pulumi.OutputState }

func (NetworkProfileResponseLoadBalancerProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkProfileResponseLoadBalancerProfile)(nil)).Elem()
}

func (o NetworkProfileResponseLoadBalancerProfileOutput) ToNetworkProfileResponseLoadBalancerProfileOutput() NetworkProfileResponseLoadBalancerProfileOutput {
	return o
}

func (o NetworkProfileResponseLoadBalancerProfileOutput) ToNetworkProfileResponseLoadBalancerProfileOutputWithContext(ctx context.Context) NetworkProfileResponseLoadBalancerProfileOutput {
	return o
}

// Count - Number of load balancer VMs. The default value is 0.
func (o NetworkProfileResponseLoadBalancerProfileOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NetworkProfileResponseLoadBalancerProfile) *int { return v.Count }).(pulumi.IntPtrOutput)
}

type NetworkProfileResponseLoadBalancerProfilePtrOutput struct{ *pulumi.OutputState }

func (NetworkProfileResponseLoadBalancerProfilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkProfileResponseLoadBalancerProfile)(nil)).Elem()
}

func (o NetworkProfileResponseLoadBalancerProfilePtrOutput) ToNetworkProfileResponseLoadBalancerProfilePtrOutput() NetworkProfileResponseLoadBalancerProfilePtrOutput {
	return o
}

func (o NetworkProfileResponseLoadBalancerProfilePtrOutput) ToNetworkProfileResponseLoadBalancerProfilePtrOutputWithContext(ctx context.Context) NetworkProfileResponseLoadBalancerProfilePtrOutput {
	return o
}

func (o NetworkProfileResponseLoadBalancerProfilePtrOutput) Elem() NetworkProfileResponseLoadBalancerProfileOutput {
	return o.ApplyT(func(v *NetworkProfileResponseLoadBalancerProfile) NetworkProfileResponseLoadBalancerProfile {
		if v != nil {
			return *v
		}
		var ret NetworkProfileResponseLoadBalancerProfile
		return ret
	}).(NetworkProfileResponseLoadBalancerProfileOutput)
}

// Count - Number of load balancer VMs. The default value is 0.
func (o NetworkProfileResponseLoadBalancerProfilePtrOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NetworkProfileResponseLoadBalancerProfile) *int {
		if v == nil {
			return nil
		}
		return v.Count
	}).(pulumi.IntPtrOutput)
}

// The license profile of the provisioned cluster.
type ProvisionedClusterLicenseProfile struct {
	// Indicates whether Azure Hybrid Benefit is opted in
	AzureHybridBenefit *string `pulumi:"azureHybridBenefit"`
}

// Defaults sets the appropriate defaults for ProvisionedClusterLicenseProfile
func (val *ProvisionedClusterLicenseProfile) Defaults() *ProvisionedClusterLicenseProfile {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.AzureHybridBenefit == nil {
		azureHybridBenefit_ := "NotApplicable"
		tmp.AzureHybridBenefit = &azureHybridBenefit_
	}
	return &tmp
}

// ProvisionedClusterLicenseProfileInput is an input type that accepts ProvisionedClusterLicenseProfileArgs and ProvisionedClusterLicenseProfileOutput values.
// You can construct a concrete instance of `ProvisionedClusterLicenseProfileInput` via:
//
//	ProvisionedClusterLicenseProfileArgs{...}
type ProvisionedClusterLicenseProfileInput interface {
	pulumi.Input

	ToProvisionedClusterLicenseProfileOutput() ProvisionedClusterLicenseProfileOutput
	ToProvisionedClusterLicenseProfileOutputWithContext(context.Context) ProvisionedClusterLicenseProfileOutput
}

// The license profile of the provisioned cluster.
type ProvisionedClusterLicenseProfileArgs struct {
	// Indicates whether Azure Hybrid Benefit is opted in
	AzureHybridBenefit pulumi.StringPtrInput `pulumi:"azureHybridBenefit"`
}

// Defaults sets the appropriate defaults for ProvisionedClusterLicenseProfileArgs
func (val *ProvisionedClusterLicenseProfileArgs) Defaults() *ProvisionedClusterLicenseProfileArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.AzureHybridBenefit == nil {
		tmp.AzureHybridBenefit = pulumi.StringPtr("NotApplicable")
	}
	return &tmp
}
func (ProvisionedClusterLicenseProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProvisionedClusterLicenseProfile)(nil)).Elem()
}

func (i ProvisionedClusterLicenseProfileArgs) ToProvisionedClusterLicenseProfileOutput() ProvisionedClusterLicenseProfileOutput {
	return i.ToProvisionedClusterLicenseProfileOutputWithContext(context.Background())
}

func (i ProvisionedClusterLicenseProfileArgs) ToProvisionedClusterLicenseProfileOutputWithContext(ctx context.Context) ProvisionedClusterLicenseProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProvisionedClusterLicenseProfileOutput)
}

func (i ProvisionedClusterLicenseProfileArgs) ToProvisionedClusterLicenseProfilePtrOutput() ProvisionedClusterLicenseProfilePtrOutput {
	return i.ToProvisionedClusterLicenseProfilePtrOutputWithContext(context.Background())
}

func (i ProvisionedClusterLicenseProfileArgs) ToProvisionedClusterLicenseProfilePtrOutputWithContext(ctx context.Context) ProvisionedClusterLicenseProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProvisionedClusterLicenseProfileOutput).ToProvisionedClusterLicenseProfilePtrOutputWithContext(ctx)
}

// ProvisionedClusterLicenseProfilePtrInput is an input type that accepts ProvisionedClusterLicenseProfileArgs, ProvisionedClusterLicenseProfilePtr and ProvisionedClusterLicenseProfilePtrOutput values.
// You can construct a concrete instance of `ProvisionedClusterLicenseProfilePtrInput` via:
//
//	        ProvisionedClusterLicenseProfileArgs{...}
//
//	or:
//
//	        nil
type ProvisionedClusterLicenseProfilePtrInput interface {
	pulumi.Input

	ToProvisionedClusterLicenseProfilePtrOutput() ProvisionedClusterLicenseProfilePtrOutput
	ToProvisionedClusterLicenseProfilePtrOutputWithContext(context.Context) ProvisionedClusterLicenseProfilePtrOutput
}

type provisionedClusterLicenseProfilePtrType ProvisionedClusterLicenseProfileArgs

func ProvisionedClusterLicenseProfilePtr(v *ProvisionedClusterLicenseProfileArgs) ProvisionedClusterLicenseProfilePtrInput {
	return (*provisionedClusterLicenseProfilePtrType)(v)
}

func (*provisionedClusterLicenseProfilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProvisionedClusterLicenseProfile)(nil)).Elem()
}

func (i *provisionedClusterLicenseProfilePtrType) ToProvisionedClusterLicenseProfilePtrOutput() ProvisionedClusterLicenseProfilePtrOutput {
	return i.ToProvisionedClusterLicenseProfilePtrOutputWithContext(context.Background())
}

func (i *provisionedClusterLicenseProfilePtrType) ToProvisionedClusterLicenseProfilePtrOutputWithContext(ctx context.Context) ProvisionedClusterLicenseProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProvisionedClusterLicenseProfilePtrOutput)
}

// The license profile of the provisioned cluster.
type ProvisionedClusterLicenseProfileOutput struct{ *pulumi.OutputState }

func (ProvisionedClusterLicenseProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProvisionedClusterLicenseProfile)(nil)).Elem()
}

func (o ProvisionedClusterLicenseProfileOutput) ToProvisionedClusterLicenseProfileOutput() ProvisionedClusterLicenseProfileOutput {
	return o
}

func (o ProvisionedClusterLicenseProfileOutput) ToProvisionedClusterLicenseProfileOutputWithContext(ctx context.Context) ProvisionedClusterLicenseProfileOutput {
	return o
}

func (o ProvisionedClusterLicenseProfileOutput) ToProvisionedClusterLicenseProfilePtrOutput() ProvisionedClusterLicenseProfilePtrOutput {
	return o.ToProvisionedClusterLicenseProfilePtrOutputWithContext(context.Background())
}

func (o ProvisionedClusterLicenseProfileOutput) ToProvisionedClusterLicenseProfilePtrOutputWithContext(ctx context.Context) ProvisionedClusterLicenseProfilePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProvisionedClusterLicenseProfile) *ProvisionedClusterLicenseProfile {
		return &v
	}).(ProvisionedClusterLicenseProfilePtrOutput)
}

// Indicates whether Azure Hybrid Benefit is opted in
func (o ProvisionedClusterLicenseProfileOutput) AzureHybridBenefit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProvisionedClusterLicenseProfile) *string { return v.AzureHybridBenefit }).(pulumi.StringPtrOutput)
}

type ProvisionedClusterLicenseProfilePtrOutput struct{ *pulumi.OutputState }

func (ProvisionedClusterLicenseProfilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProvisionedClusterLicenseProfile)(nil)).Elem()
}

func (o ProvisionedClusterLicenseProfilePtrOutput) ToProvisionedClusterLicenseProfilePtrOutput() ProvisionedClusterLicenseProfilePtrOutput {
	return o
}

func (o ProvisionedClusterLicenseProfilePtrOutput) ToProvisionedClusterLicenseProfilePtrOutputWithContext(ctx context.Context) ProvisionedClusterLicenseProfilePtrOutput {
	return o
}

func (o ProvisionedClusterLicenseProfilePtrOutput) Elem() ProvisionedClusterLicenseProfileOutput {
	return o.ApplyT(func(v *ProvisionedClusterLicenseProfile) ProvisionedClusterLicenseProfile {
		if v != nil {
			return *v
		}
		var ret ProvisionedClusterLicenseProfile
		return ret
	}).(ProvisionedClusterLicenseProfileOutput)
}

// Indicates whether Azure Hybrid Benefit is opted in
func (o ProvisionedClusterLicenseProfilePtrOutput) AzureHybridBenefit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProvisionedClusterLicenseProfile) *string {
		if v == nil {
			return nil
		}
		return v.AzureHybridBenefit
	}).(pulumi.StringPtrOutput)
}

// The license profile of the provisioned cluster.
type ProvisionedClusterLicenseProfileResponse struct {
	// Indicates whether Azure Hybrid Benefit is opted in
	AzureHybridBenefit *string `pulumi:"azureHybridBenefit"`
}

// Defaults sets the appropriate defaults for ProvisionedClusterLicenseProfileResponse
func (val *ProvisionedClusterLicenseProfileResponse) Defaults() *ProvisionedClusterLicenseProfileResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.AzureHybridBenefit == nil {
		azureHybridBenefit_ := "NotApplicable"
		tmp.AzureHybridBenefit = &azureHybridBenefit_
	}
	return &tmp
}

// The license profile of the provisioned cluster.
type ProvisionedClusterLicenseProfileResponseOutput struct{ *pulumi.OutputState }

func (ProvisionedClusterLicenseProfileResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProvisionedClusterLicenseProfileResponse)(nil)).Elem()
}

func (o ProvisionedClusterLicenseProfileResponseOutput) ToProvisionedClusterLicenseProfileResponseOutput() ProvisionedClusterLicenseProfileResponseOutput {
	return o
}

func (o ProvisionedClusterLicenseProfileResponseOutput) ToProvisionedClusterLicenseProfileResponseOutputWithContext(ctx context.Context) ProvisionedClusterLicenseProfileResponseOutput {
	return o
}

// Indicates whether Azure Hybrid Benefit is opted in
func (o ProvisionedClusterLicenseProfileResponseOutput) AzureHybridBenefit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProvisionedClusterLicenseProfileResponse) *string { return v.AzureHybridBenefit }).(pulumi.StringPtrOutput)
}

type ProvisionedClusterLicenseProfileResponsePtrOutput struct{ *pulumi.OutputState }

func (ProvisionedClusterLicenseProfileResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProvisionedClusterLicenseProfileResponse)(nil)).Elem()
}

func (o ProvisionedClusterLicenseProfileResponsePtrOutput) ToProvisionedClusterLicenseProfileResponsePtrOutput() ProvisionedClusterLicenseProfileResponsePtrOutput {
	return o
}

func (o ProvisionedClusterLicenseProfileResponsePtrOutput) ToProvisionedClusterLicenseProfileResponsePtrOutputWithContext(ctx context.Context) ProvisionedClusterLicenseProfileResponsePtrOutput {
	return o
}

func (o ProvisionedClusterLicenseProfileResponsePtrOutput) Elem() ProvisionedClusterLicenseProfileResponseOutput {
	return o.ApplyT(func(v *ProvisionedClusterLicenseProfileResponse) ProvisionedClusterLicenseProfileResponse {
		if v != nil {
			return *v
		}
		var ret ProvisionedClusterLicenseProfileResponse
		return ret
	}).(ProvisionedClusterLicenseProfileResponseOutput)
}

// Indicates whether Azure Hybrid Benefit is opted in
func (o ProvisionedClusterLicenseProfileResponsePtrOutput) AzureHybridBenefit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProvisionedClusterLicenseProfileResponse) *string {
		if v == nil {
			return nil
		}
		return v.AzureHybridBenefit
	}).(pulumi.StringPtrOutput)
}

// All properties of the provisioned cluster
type ProvisionedClusterProperties struct {
	// The agent pools of the cluster.
	AgentPoolProfiles []NamedAgentPoolProfile `pulumi:"agentPoolProfiles"`
	// The underlying cloud infra provider properties.
	CloudProviderProfile *CloudProviderProfile `pulumi:"cloudProviderProfile"`
	// ControlPlane - ControlPlane Configuration
	ControlPlane *ControlPlaneProfile `pulumi:"controlPlane"`
	// KubernetesVersion - Version of Kubernetes specified when creating the managed cluster.
	KubernetesVersion *string `pulumi:"kubernetesVersion"`
	// The license profile of the provisioned cluster.
	LicenseProfile *ProvisionedClusterLicenseProfile `pulumi:"licenseProfile"`
	// LinuxProfile - The profile for Linux VMs in the Provisioned Cluster.
	LinuxProfile *LinuxProfileProperties `pulumi:"linuxProfile"`
	// NetworkProfile - Profile of network configuration.
	NetworkProfile *NetworkProfile `pulumi:"networkProfile"`
}

// Defaults sets the appropriate defaults for ProvisionedClusterProperties
func (val *ProvisionedClusterProperties) Defaults() *ProvisionedClusterProperties {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.ControlPlane = tmp.ControlPlane.Defaults()

	tmp.LicenseProfile = tmp.LicenseProfile.Defaults()

	tmp.NetworkProfile = tmp.NetworkProfile.Defaults()

	return &tmp
}

// ProvisionedClusterPropertiesInput is an input type that accepts ProvisionedClusterPropertiesArgs and ProvisionedClusterPropertiesOutput values.
// You can construct a concrete instance of `ProvisionedClusterPropertiesInput` via:
//
//	ProvisionedClusterPropertiesArgs{...}
type ProvisionedClusterPropertiesInput interface {
	pulumi.Input

	ToProvisionedClusterPropertiesOutput() ProvisionedClusterPropertiesOutput
	ToProvisionedClusterPropertiesOutputWithContext(context.Context) ProvisionedClusterPropertiesOutput
}

// All properties of the provisioned cluster
type ProvisionedClusterPropertiesArgs struct {
	// The agent pools of the cluster.
	AgentPoolProfiles NamedAgentPoolProfileArrayInput `pulumi:"agentPoolProfiles"`
	// The underlying cloud infra provider properties.
	CloudProviderProfile CloudProviderProfilePtrInput `pulumi:"cloudProviderProfile"`
	// ControlPlane - ControlPlane Configuration
	ControlPlane ControlPlaneProfilePtrInput `pulumi:"controlPlane"`
	// KubernetesVersion - Version of Kubernetes specified when creating the managed cluster.
	KubernetesVersion pulumi.StringPtrInput `pulumi:"kubernetesVersion"`
	// The license profile of the provisioned cluster.
	LicenseProfile ProvisionedClusterLicenseProfilePtrInput `pulumi:"licenseProfile"`
	// LinuxProfile - The profile for Linux VMs in the Provisioned Cluster.
	LinuxProfile LinuxProfilePropertiesPtrInput `pulumi:"linuxProfile"`
	// NetworkProfile - Profile of network configuration.
	NetworkProfile NetworkProfilePtrInput `pulumi:"networkProfile"`
}

// Defaults sets the appropriate defaults for ProvisionedClusterPropertiesArgs
func (val *ProvisionedClusterPropertiesArgs) Defaults() *ProvisionedClusterPropertiesArgs {
	if val == nil {
		return nil
	}
	tmp := *val

	return &tmp
}
func (ProvisionedClusterPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProvisionedClusterProperties)(nil)).Elem()
}

func (i ProvisionedClusterPropertiesArgs) ToProvisionedClusterPropertiesOutput() ProvisionedClusterPropertiesOutput {
	return i.ToProvisionedClusterPropertiesOutputWithContext(context.Background())
}

func (i ProvisionedClusterPropertiesArgs) ToProvisionedClusterPropertiesOutputWithContext(ctx context.Context) ProvisionedClusterPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProvisionedClusterPropertiesOutput)
}

func (i ProvisionedClusterPropertiesArgs) ToProvisionedClusterPropertiesPtrOutput() ProvisionedClusterPropertiesPtrOutput {
	return i.ToProvisionedClusterPropertiesPtrOutputWithContext(context.Background())
}

func (i ProvisionedClusterPropertiesArgs) ToProvisionedClusterPropertiesPtrOutputWithContext(ctx context.Context) ProvisionedClusterPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProvisionedClusterPropertiesOutput).ToProvisionedClusterPropertiesPtrOutputWithContext(ctx)
}

// ProvisionedClusterPropertiesPtrInput is an input type that accepts ProvisionedClusterPropertiesArgs, ProvisionedClusterPropertiesPtr and ProvisionedClusterPropertiesPtrOutput values.
// You can construct a concrete instance of `ProvisionedClusterPropertiesPtrInput` via:
//
//	        ProvisionedClusterPropertiesArgs{...}
//
//	or:
//
//	        nil
type ProvisionedClusterPropertiesPtrInput interface {
	pulumi.Input

	ToProvisionedClusterPropertiesPtrOutput() ProvisionedClusterPropertiesPtrOutput
	ToProvisionedClusterPropertiesPtrOutputWithContext(context.Context) ProvisionedClusterPropertiesPtrOutput
}

type provisionedClusterPropertiesPtrType ProvisionedClusterPropertiesArgs

func ProvisionedClusterPropertiesPtr(v *ProvisionedClusterPropertiesArgs) ProvisionedClusterPropertiesPtrInput {
	return (*provisionedClusterPropertiesPtrType)(v)
}

func (*provisionedClusterPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProvisionedClusterProperties)(nil)).Elem()
}

func (i *provisionedClusterPropertiesPtrType) ToProvisionedClusterPropertiesPtrOutput() ProvisionedClusterPropertiesPtrOutput {
	return i.ToProvisionedClusterPropertiesPtrOutputWithContext(context.Background())
}

func (i *provisionedClusterPropertiesPtrType) ToProvisionedClusterPropertiesPtrOutputWithContext(ctx context.Context) ProvisionedClusterPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProvisionedClusterPropertiesPtrOutput)
}

// All properties of the provisioned cluster
type ProvisionedClusterPropertiesOutput struct{ *pulumi.OutputState }

func (ProvisionedClusterPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProvisionedClusterProperties)(nil)).Elem()
}

func (o ProvisionedClusterPropertiesOutput) ToProvisionedClusterPropertiesOutput() ProvisionedClusterPropertiesOutput {
	return o
}

func (o ProvisionedClusterPropertiesOutput) ToProvisionedClusterPropertiesOutputWithContext(ctx context.Context) ProvisionedClusterPropertiesOutput {
	return o
}

func (o ProvisionedClusterPropertiesOutput) ToProvisionedClusterPropertiesPtrOutput() ProvisionedClusterPropertiesPtrOutput {
	return o.ToProvisionedClusterPropertiesPtrOutputWithContext(context.Background())
}

func (o ProvisionedClusterPropertiesOutput) ToProvisionedClusterPropertiesPtrOutputWithContext(ctx context.Context) ProvisionedClusterPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProvisionedClusterProperties) *ProvisionedClusterProperties {
		return &v
	}).(ProvisionedClusterPropertiesPtrOutput)
}

// The agent pools of the cluster.
func (o ProvisionedClusterPropertiesOutput) AgentPoolProfiles() NamedAgentPoolProfileArrayOutput {
	return o.ApplyT(func(v ProvisionedClusterProperties) []NamedAgentPoolProfile { return v.AgentPoolProfiles }).(NamedAgentPoolProfileArrayOutput)
}

// The underlying cloud infra provider properties.
func (o ProvisionedClusterPropertiesOutput) CloudProviderProfile() CloudProviderProfilePtrOutput {
	return o.ApplyT(func(v ProvisionedClusterProperties) *CloudProviderProfile { return v.CloudProviderProfile }).(CloudProviderProfilePtrOutput)
}

// ControlPlane - ControlPlane Configuration
func (o ProvisionedClusterPropertiesOutput) ControlPlane() ControlPlaneProfilePtrOutput {
	return o.ApplyT(func(v ProvisionedClusterProperties) *ControlPlaneProfile { return v.ControlPlane }).(ControlPlaneProfilePtrOutput)
}

// KubernetesVersion - Version of Kubernetes specified when creating the managed cluster.
func (o ProvisionedClusterPropertiesOutput) KubernetesVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProvisionedClusterProperties) *string { return v.KubernetesVersion }).(pulumi.StringPtrOutput)
}

// The license profile of the provisioned cluster.
func (o ProvisionedClusterPropertiesOutput) LicenseProfile() ProvisionedClusterLicenseProfilePtrOutput {
	return o.ApplyT(func(v ProvisionedClusterProperties) *ProvisionedClusterLicenseProfile { return v.LicenseProfile }).(ProvisionedClusterLicenseProfilePtrOutput)
}

// LinuxProfile - The profile for Linux VMs in the Provisioned Cluster.
func (o ProvisionedClusterPropertiesOutput) LinuxProfile() LinuxProfilePropertiesPtrOutput {
	return o.ApplyT(func(v ProvisionedClusterProperties) *LinuxProfileProperties { return v.LinuxProfile }).(LinuxProfilePropertiesPtrOutput)
}

// NetworkProfile - Profile of network configuration.
func (o ProvisionedClusterPropertiesOutput) NetworkProfile() NetworkProfilePtrOutput {
	return o.ApplyT(func(v ProvisionedClusterProperties) *NetworkProfile { return v.NetworkProfile }).(NetworkProfilePtrOutput)
}

type ProvisionedClusterPropertiesPtrOutput struct{ *pulumi.OutputState }

func (ProvisionedClusterPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProvisionedClusterProperties)(nil)).Elem()
}

func (o ProvisionedClusterPropertiesPtrOutput) ToProvisionedClusterPropertiesPtrOutput() ProvisionedClusterPropertiesPtrOutput {
	return o
}

func (o ProvisionedClusterPropertiesPtrOutput) ToProvisionedClusterPropertiesPtrOutputWithContext(ctx context.Context) ProvisionedClusterPropertiesPtrOutput {
	return o
}

func (o ProvisionedClusterPropertiesPtrOutput) Elem() ProvisionedClusterPropertiesOutput {
	return o.ApplyT(func(v *ProvisionedClusterProperties) ProvisionedClusterProperties {
		if v != nil {
			return *v
		}
		var ret ProvisionedClusterProperties
		return ret
	}).(ProvisionedClusterPropertiesOutput)
}

// The agent pools of the cluster.
func (o ProvisionedClusterPropertiesPtrOutput) AgentPoolProfiles() NamedAgentPoolProfileArrayOutput {
	return o.ApplyT(func(v *ProvisionedClusterProperties) []NamedAgentPoolProfile {
		if v == nil {
			return nil
		}
		return v.AgentPoolProfiles
	}).(NamedAgentPoolProfileArrayOutput)
}

// The underlying cloud infra provider properties.
func (o ProvisionedClusterPropertiesPtrOutput) CloudProviderProfile() CloudProviderProfilePtrOutput {
	return o.ApplyT(func(v *ProvisionedClusterProperties) *CloudProviderProfile {
		if v == nil {
			return nil
		}
		return v.CloudProviderProfile
	}).(CloudProviderProfilePtrOutput)
}

// ControlPlane - ControlPlane Configuration
func (o ProvisionedClusterPropertiesPtrOutput) ControlPlane() ControlPlaneProfilePtrOutput {
	return o.ApplyT(func(v *ProvisionedClusterProperties) *ControlPlaneProfile {
		if v == nil {
			return nil
		}
		return v.ControlPlane
	}).(ControlPlaneProfilePtrOutput)
}

// KubernetesVersion - Version of Kubernetes specified when creating the managed cluster.
func (o ProvisionedClusterPropertiesPtrOutput) KubernetesVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProvisionedClusterProperties) *string {
		if v == nil {
			return nil
		}
		return v.KubernetesVersion
	}).(pulumi.StringPtrOutput)
}

// The license profile of the provisioned cluster.
func (o ProvisionedClusterPropertiesPtrOutput) LicenseProfile() ProvisionedClusterLicenseProfilePtrOutput {
	return o.ApplyT(func(v *ProvisionedClusterProperties) *ProvisionedClusterLicenseProfile {
		if v == nil {
			return nil
		}
		return v.LicenseProfile
	}).(ProvisionedClusterLicenseProfilePtrOutput)
}

// LinuxProfile - The profile for Linux VMs in the Provisioned Cluster.
func (o ProvisionedClusterPropertiesPtrOutput) LinuxProfile() LinuxProfilePropertiesPtrOutput {
	return o.ApplyT(func(v *ProvisionedClusterProperties) *LinuxProfileProperties {
		if v == nil {
			return nil
		}
		return v.LinuxProfile
	}).(LinuxProfilePropertiesPtrOutput)
}

// NetworkProfile - Profile of network configuration.
func (o ProvisionedClusterPropertiesPtrOutput) NetworkProfile() NetworkProfilePtrOutput {
	return o.ApplyT(func(v *ProvisionedClusterProperties) *NetworkProfile {
		if v == nil {
			return nil
		}
		return v.NetworkProfile
	}).(NetworkProfilePtrOutput)
}

// All properties of the provisioned cluster
type ProvisionedClusterPropertiesResponse struct {
	// The agent pools of the cluster.
	AgentPoolProfiles []NamedAgentPoolProfileResponse `pulumi:"agentPoolProfiles"`
	// The underlying cloud infra provider properties.
	CloudProviderProfile *CloudProviderProfileResponse `pulumi:"cloudProviderProfile"`
	// ControlPlane - ControlPlane Configuration
	ControlPlane *ControlPlaneProfileResponse `pulumi:"controlPlane"`
	// KubernetesVersion - Version of Kubernetes specified when creating the managed cluster.
	KubernetesVersion *string `pulumi:"kubernetesVersion"`
	// The license profile of the provisioned cluster.
	LicenseProfile *ProvisionedClusterLicenseProfileResponse `pulumi:"licenseProfile"`
	// LinuxProfile - The profile for Linux VMs in the Provisioned Cluster.
	LinuxProfile *LinuxProfilePropertiesResponse `pulumi:"linuxProfile"`
	// NetworkProfile - Profile of network configuration.
	NetworkProfile *NetworkProfileResponse `pulumi:"networkProfile"`
	// Provisioning state of the resource
	ProvisioningState string `pulumi:"provisioningState"`
	// HybridAKSClusterStatus defines the observed state of HybridAKSCluster
	Status ProvisionedClusterPropertiesResponseStatus `pulumi:"status"`
}

// Defaults sets the appropriate defaults for ProvisionedClusterPropertiesResponse
func (val *ProvisionedClusterPropertiesResponse) Defaults() *ProvisionedClusterPropertiesResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.ControlPlane = tmp.ControlPlane.Defaults()

	tmp.LicenseProfile = tmp.LicenseProfile.Defaults()

	tmp.NetworkProfile = tmp.NetworkProfile.Defaults()

	return &tmp
}

// All properties of the provisioned cluster
type ProvisionedClusterPropertiesResponseOutput struct{ *pulumi.OutputState }

func (ProvisionedClusterPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProvisionedClusterPropertiesResponse)(nil)).Elem()
}

func (o ProvisionedClusterPropertiesResponseOutput) ToProvisionedClusterPropertiesResponseOutput() ProvisionedClusterPropertiesResponseOutput {
	return o
}

func (o ProvisionedClusterPropertiesResponseOutput) ToProvisionedClusterPropertiesResponseOutputWithContext(ctx context.Context) ProvisionedClusterPropertiesResponseOutput {
	return o
}

// The agent pools of the cluster.
func (o ProvisionedClusterPropertiesResponseOutput) AgentPoolProfiles() NamedAgentPoolProfileResponseArrayOutput {
	return o.ApplyT(func(v ProvisionedClusterPropertiesResponse) []NamedAgentPoolProfileResponse {
		return v.AgentPoolProfiles
	}).(NamedAgentPoolProfileResponseArrayOutput)
}

// The underlying cloud infra provider properties.
func (o ProvisionedClusterPropertiesResponseOutput) CloudProviderProfile() CloudProviderProfileResponsePtrOutput {
	return o.ApplyT(func(v ProvisionedClusterPropertiesResponse) *CloudProviderProfileResponse {
		return v.CloudProviderProfile
	}).(CloudProviderProfileResponsePtrOutput)
}

// ControlPlane - ControlPlane Configuration
func (o ProvisionedClusterPropertiesResponseOutput) ControlPlane() ControlPlaneProfileResponsePtrOutput {
	return o.ApplyT(func(v ProvisionedClusterPropertiesResponse) *ControlPlaneProfileResponse { return v.ControlPlane }).(ControlPlaneProfileResponsePtrOutput)
}

// KubernetesVersion - Version of Kubernetes specified when creating the managed cluster.
func (o ProvisionedClusterPropertiesResponseOutput) KubernetesVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProvisionedClusterPropertiesResponse) *string { return v.KubernetesVersion }).(pulumi.StringPtrOutput)
}

// The license profile of the provisioned cluster.
func (o ProvisionedClusterPropertiesResponseOutput) LicenseProfile() ProvisionedClusterLicenseProfileResponsePtrOutput {
	return o.ApplyT(func(v ProvisionedClusterPropertiesResponse) *ProvisionedClusterLicenseProfileResponse {
		return v.LicenseProfile
	}).(ProvisionedClusterLicenseProfileResponsePtrOutput)
}

// LinuxProfile - The profile for Linux VMs in the Provisioned Cluster.
func (o ProvisionedClusterPropertiesResponseOutput) LinuxProfile() LinuxProfilePropertiesResponsePtrOutput {
	return o.ApplyT(func(v ProvisionedClusterPropertiesResponse) *LinuxProfilePropertiesResponse { return v.LinuxProfile }).(LinuxProfilePropertiesResponsePtrOutput)
}

// NetworkProfile - Profile of network configuration.
func (o ProvisionedClusterPropertiesResponseOutput) NetworkProfile() NetworkProfileResponsePtrOutput {
	return o.ApplyT(func(v ProvisionedClusterPropertiesResponse) *NetworkProfileResponse { return v.NetworkProfile }).(NetworkProfileResponsePtrOutput)
}

// Provisioning state of the resource
func (o ProvisionedClusterPropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v ProvisionedClusterPropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// HybridAKSClusterStatus defines the observed state of HybridAKSCluster
func (o ProvisionedClusterPropertiesResponseOutput) Status() ProvisionedClusterPropertiesResponseStatusOutput {
	return o.ApplyT(func(v ProvisionedClusterPropertiesResponse) ProvisionedClusterPropertiesResponseStatus {
		return v.Status
	}).(ProvisionedClusterPropertiesResponseStatusOutput)
}

type ProvisionedClusterPropertiesResponseError struct {
	Code    *string `pulumi:"code"`
	Message *string `pulumi:"message"`
}

type ProvisionedClusterPropertiesResponseErrorOutput struct{ *pulumi.OutputState }

func (ProvisionedClusterPropertiesResponseErrorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProvisionedClusterPropertiesResponseError)(nil)).Elem()
}

func (o ProvisionedClusterPropertiesResponseErrorOutput) ToProvisionedClusterPropertiesResponseErrorOutput() ProvisionedClusterPropertiesResponseErrorOutput {
	return o
}

func (o ProvisionedClusterPropertiesResponseErrorOutput) ToProvisionedClusterPropertiesResponseErrorOutputWithContext(ctx context.Context) ProvisionedClusterPropertiesResponseErrorOutput {
	return o
}

func (o ProvisionedClusterPropertiesResponseErrorOutput) Code() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProvisionedClusterPropertiesResponseError) *string { return v.Code }).(pulumi.StringPtrOutput)
}

func (o ProvisionedClusterPropertiesResponseErrorOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProvisionedClusterPropertiesResponseError) *string { return v.Message }).(pulumi.StringPtrOutput)
}

type ProvisionedClusterPropertiesResponseErrorPtrOutput struct{ *pulumi.OutputState }

func (ProvisionedClusterPropertiesResponseErrorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProvisionedClusterPropertiesResponseError)(nil)).Elem()
}

func (o ProvisionedClusterPropertiesResponseErrorPtrOutput) ToProvisionedClusterPropertiesResponseErrorPtrOutput() ProvisionedClusterPropertiesResponseErrorPtrOutput {
	return o
}

func (o ProvisionedClusterPropertiesResponseErrorPtrOutput) ToProvisionedClusterPropertiesResponseErrorPtrOutputWithContext(ctx context.Context) ProvisionedClusterPropertiesResponseErrorPtrOutput {
	return o
}

func (o ProvisionedClusterPropertiesResponseErrorPtrOutput) Elem() ProvisionedClusterPropertiesResponseErrorOutput {
	return o.ApplyT(func(v *ProvisionedClusterPropertiesResponseError) ProvisionedClusterPropertiesResponseError {
		if v != nil {
			return *v
		}
		var ret ProvisionedClusterPropertiesResponseError
		return ret
	}).(ProvisionedClusterPropertiesResponseErrorOutput)
}

func (o ProvisionedClusterPropertiesResponseErrorPtrOutput) Code() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProvisionedClusterPropertiesResponseError) *string {
		if v == nil {
			return nil
		}
		return v.Code
	}).(pulumi.StringPtrOutput)
}

func (o ProvisionedClusterPropertiesResponseErrorPtrOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProvisionedClusterPropertiesResponseError) *string {
		if v == nil {
			return nil
		}
		return v.Message
	}).(pulumi.StringPtrOutput)
}

// Contains Provisioning errors
type ProvisionedClusterPropertiesResponseOperationStatus struct {
	Error       *ProvisionedClusterPropertiesResponseError `pulumi:"error"`
	OperationId *string                                    `pulumi:"operationId"`
	Status      *string                                    `pulumi:"status"`
}

// Contains Provisioning errors
type ProvisionedClusterPropertiesResponseOperationStatusOutput struct{ *pulumi.OutputState }

func (ProvisionedClusterPropertiesResponseOperationStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProvisionedClusterPropertiesResponseOperationStatus)(nil)).Elem()
}

func (o ProvisionedClusterPropertiesResponseOperationStatusOutput) ToProvisionedClusterPropertiesResponseOperationStatusOutput() ProvisionedClusterPropertiesResponseOperationStatusOutput {
	return o
}

func (o ProvisionedClusterPropertiesResponseOperationStatusOutput) ToProvisionedClusterPropertiesResponseOperationStatusOutputWithContext(ctx context.Context) ProvisionedClusterPropertiesResponseOperationStatusOutput {
	return o
}

func (o ProvisionedClusterPropertiesResponseOperationStatusOutput) Error() ProvisionedClusterPropertiesResponseErrorPtrOutput {
	return o.ApplyT(func(v ProvisionedClusterPropertiesResponseOperationStatus) *ProvisionedClusterPropertiesResponseError {
		return v.Error
	}).(ProvisionedClusterPropertiesResponseErrorPtrOutput)
}

func (o ProvisionedClusterPropertiesResponseOperationStatusOutput) OperationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProvisionedClusterPropertiesResponseOperationStatus) *string { return v.OperationId }).(pulumi.StringPtrOutput)
}

func (o ProvisionedClusterPropertiesResponseOperationStatusOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProvisionedClusterPropertiesResponseOperationStatus) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type ProvisionedClusterPropertiesResponseOperationStatusPtrOutput struct{ *pulumi.OutputState }

func (ProvisionedClusterPropertiesResponseOperationStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProvisionedClusterPropertiesResponseOperationStatus)(nil)).Elem()
}

func (o ProvisionedClusterPropertiesResponseOperationStatusPtrOutput) ToProvisionedClusterPropertiesResponseOperationStatusPtrOutput() ProvisionedClusterPropertiesResponseOperationStatusPtrOutput {
	return o
}

func (o ProvisionedClusterPropertiesResponseOperationStatusPtrOutput) ToProvisionedClusterPropertiesResponseOperationStatusPtrOutputWithContext(ctx context.Context) ProvisionedClusterPropertiesResponseOperationStatusPtrOutput {
	return o
}

func (o ProvisionedClusterPropertiesResponseOperationStatusPtrOutput) Elem() ProvisionedClusterPropertiesResponseOperationStatusOutput {
	return o.ApplyT(func(v *ProvisionedClusterPropertiesResponseOperationStatus) ProvisionedClusterPropertiesResponseOperationStatus {
		if v != nil {
			return *v
		}
		var ret ProvisionedClusterPropertiesResponseOperationStatus
		return ret
	}).(ProvisionedClusterPropertiesResponseOperationStatusOutput)
}

func (o ProvisionedClusterPropertiesResponseOperationStatusPtrOutput) Error() ProvisionedClusterPropertiesResponseErrorPtrOutput {
	return o.ApplyT(func(v *ProvisionedClusterPropertiesResponseOperationStatus) *ProvisionedClusterPropertiesResponseError {
		if v == nil {
			return nil
		}
		return v.Error
	}).(ProvisionedClusterPropertiesResponseErrorPtrOutput)
}

func (o ProvisionedClusterPropertiesResponseOperationStatusPtrOutput) OperationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProvisionedClusterPropertiesResponseOperationStatus) *string {
		if v == nil {
			return nil
		}
		return v.OperationId
	}).(pulumi.StringPtrOutput)
}

func (o ProvisionedClusterPropertiesResponseOperationStatusPtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProvisionedClusterPropertiesResponseOperationStatus) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

// HybridAKSClusterStatus defines the observed state of HybridAKSCluster
type ProvisionedClusterPropertiesResponseStatus struct {
	// Status of the control plane components
	ControlPlaneStatus []AddonStatusProfileResponse `pulumi:"controlPlaneStatus"`
	// ErrorMessage - Error messages during creation of cluster
	ErrorMessage *string `pulumi:"errorMessage"`
	// Contains Provisioning errors
	OperationStatus *ProvisionedClusterPropertiesResponseOperationStatus `pulumi:"operationStatus"`
}

// HybridAKSClusterStatus defines the observed state of HybridAKSCluster
type ProvisionedClusterPropertiesResponseStatusOutput struct{ *pulumi.OutputState }

func (ProvisionedClusterPropertiesResponseStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProvisionedClusterPropertiesResponseStatus)(nil)).Elem()
}

func (o ProvisionedClusterPropertiesResponseStatusOutput) ToProvisionedClusterPropertiesResponseStatusOutput() ProvisionedClusterPropertiesResponseStatusOutput {
	return o
}

func (o ProvisionedClusterPropertiesResponseStatusOutput) ToProvisionedClusterPropertiesResponseStatusOutputWithContext(ctx context.Context) ProvisionedClusterPropertiesResponseStatusOutput {
	return o
}

// Status of the control plane components
func (o ProvisionedClusterPropertiesResponseStatusOutput) ControlPlaneStatus() AddonStatusProfileResponseArrayOutput {
	return o.ApplyT(func(v ProvisionedClusterPropertiesResponseStatus) []AddonStatusProfileResponse {
		return v.ControlPlaneStatus
	}).(AddonStatusProfileResponseArrayOutput)
}

// ErrorMessage - Error messages during creation of cluster
func (o ProvisionedClusterPropertiesResponseStatusOutput) ErrorMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProvisionedClusterPropertiesResponseStatus) *string { return v.ErrorMessage }).(pulumi.StringPtrOutput)
}

// Contains Provisioning errors
func (o ProvisionedClusterPropertiesResponseStatusOutput) OperationStatus() ProvisionedClusterPropertiesResponseOperationStatusPtrOutput {
	return o.ApplyT(func(v ProvisionedClusterPropertiesResponseStatus) *ProvisionedClusterPropertiesResponseOperationStatus {
		return v.OperationStatus
	}).(ProvisionedClusterPropertiesResponseOperationStatusPtrOutput)
}

// Metadata pertaining to creation and last modification of the resource.
type SystemDataResponse struct {
	// The timestamp of resource creation (UTC).
	CreatedAt *string `pulumi:"createdAt"`
	// The identity that created the resource.
	CreatedBy *string `pulumi:"createdBy"`
	// The type of identity that created the resource.
	CreatedByType *string `pulumi:"createdByType"`
	// The timestamp of resource last modification (UTC)
	LastModifiedAt *string `pulumi:"lastModifiedAt"`
	// The identity that last modified the resource.
	LastModifiedBy *string `pulumi:"lastModifiedBy"`
	// The type of identity that last modified the resource.
	LastModifiedByType *string `pulumi:"lastModifiedByType"`
}

// Metadata pertaining to creation and last modification of the resource.
type SystemDataResponseOutput struct{ *pulumi.OutputState }

func (SystemDataResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemDataResponse)(nil)).Elem()
}

func (o SystemDataResponseOutput) ToSystemDataResponseOutput() SystemDataResponseOutput {
	return o
}

func (o SystemDataResponseOutput) ToSystemDataResponseOutputWithContext(ctx context.Context) SystemDataResponseOutput {
	return o
}

// The timestamp of resource creation (UTC).
func (o SystemDataResponseOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedAt }).(pulumi.StringPtrOutput)
}

// The identity that created the resource.
func (o SystemDataResponseOutput) CreatedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedBy }).(pulumi.StringPtrOutput)
}

// The type of identity that created the resource.
func (o SystemDataResponseOutput) CreatedByType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedByType }).(pulumi.StringPtrOutput)
}

// The timestamp of resource last modification (UTC)
func (o SystemDataResponseOutput) LastModifiedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedAt }).(pulumi.StringPtrOutput)
}

// The identity that last modified the resource.
func (o SystemDataResponseOutput) LastModifiedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedBy }).(pulumi.StringPtrOutput)
}

// The type of identity that last modified the resource.
func (o SystemDataResponseOutput) LastModifiedByType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedByType }).(pulumi.StringPtrOutput)
}

type VirtualNetworkExtendedLocation struct {
	// The extended location name.
	Name *string `pulumi:"name"`
	// The extended location type.
	Type *string `pulumi:"type"`
}

// VirtualNetworkExtendedLocationInput is an input type that accepts VirtualNetworkExtendedLocationArgs and VirtualNetworkExtendedLocationOutput values.
// You can construct a concrete instance of `VirtualNetworkExtendedLocationInput` via:
//
//	VirtualNetworkExtendedLocationArgs{...}
type VirtualNetworkExtendedLocationInput interface {
	pulumi.Input

	ToVirtualNetworkExtendedLocationOutput() VirtualNetworkExtendedLocationOutput
	ToVirtualNetworkExtendedLocationOutputWithContext(context.Context) VirtualNetworkExtendedLocationOutput
}

type VirtualNetworkExtendedLocationArgs struct {
	// The extended location name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The extended location type.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (VirtualNetworkExtendedLocationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkExtendedLocation)(nil)).Elem()
}

func (i VirtualNetworkExtendedLocationArgs) ToVirtualNetworkExtendedLocationOutput() VirtualNetworkExtendedLocationOutput {
	return i.ToVirtualNetworkExtendedLocationOutputWithContext(context.Background())
}

func (i VirtualNetworkExtendedLocationArgs) ToVirtualNetworkExtendedLocationOutputWithContext(ctx context.Context) VirtualNetworkExtendedLocationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkExtendedLocationOutput)
}

func (i VirtualNetworkExtendedLocationArgs) ToVirtualNetworkExtendedLocationPtrOutput() VirtualNetworkExtendedLocationPtrOutput {
	return i.ToVirtualNetworkExtendedLocationPtrOutputWithContext(context.Background())
}

func (i VirtualNetworkExtendedLocationArgs) ToVirtualNetworkExtendedLocationPtrOutputWithContext(ctx context.Context) VirtualNetworkExtendedLocationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkExtendedLocationOutput).ToVirtualNetworkExtendedLocationPtrOutputWithContext(ctx)
}

// VirtualNetworkExtendedLocationPtrInput is an input type that accepts VirtualNetworkExtendedLocationArgs, VirtualNetworkExtendedLocationPtr and VirtualNetworkExtendedLocationPtrOutput values.
// You can construct a concrete instance of `VirtualNetworkExtendedLocationPtrInput` via:
//
//	        VirtualNetworkExtendedLocationArgs{...}
//
//	or:
//
//	        nil
type VirtualNetworkExtendedLocationPtrInput interface {
	pulumi.Input

	ToVirtualNetworkExtendedLocationPtrOutput() VirtualNetworkExtendedLocationPtrOutput
	ToVirtualNetworkExtendedLocationPtrOutputWithContext(context.Context) VirtualNetworkExtendedLocationPtrOutput
}

type virtualNetworkExtendedLocationPtrType VirtualNetworkExtendedLocationArgs

func VirtualNetworkExtendedLocationPtr(v *VirtualNetworkExtendedLocationArgs) VirtualNetworkExtendedLocationPtrInput {
	return (*virtualNetworkExtendedLocationPtrType)(v)
}

func (*virtualNetworkExtendedLocationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNetworkExtendedLocation)(nil)).Elem()
}

func (i *virtualNetworkExtendedLocationPtrType) ToVirtualNetworkExtendedLocationPtrOutput() VirtualNetworkExtendedLocationPtrOutput {
	return i.ToVirtualNetworkExtendedLocationPtrOutputWithContext(context.Background())
}

func (i *virtualNetworkExtendedLocationPtrType) ToVirtualNetworkExtendedLocationPtrOutputWithContext(ctx context.Context) VirtualNetworkExtendedLocationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkExtendedLocationPtrOutput)
}

type VirtualNetworkExtendedLocationOutput struct{ *pulumi.OutputState }

func (VirtualNetworkExtendedLocationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkExtendedLocation)(nil)).Elem()
}

func (o VirtualNetworkExtendedLocationOutput) ToVirtualNetworkExtendedLocationOutput() VirtualNetworkExtendedLocationOutput {
	return o
}

func (o VirtualNetworkExtendedLocationOutput) ToVirtualNetworkExtendedLocationOutputWithContext(ctx context.Context) VirtualNetworkExtendedLocationOutput {
	return o
}

func (o VirtualNetworkExtendedLocationOutput) ToVirtualNetworkExtendedLocationPtrOutput() VirtualNetworkExtendedLocationPtrOutput {
	return o.ToVirtualNetworkExtendedLocationPtrOutputWithContext(context.Background())
}

func (o VirtualNetworkExtendedLocationOutput) ToVirtualNetworkExtendedLocationPtrOutputWithContext(ctx context.Context) VirtualNetworkExtendedLocationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualNetworkExtendedLocation) *VirtualNetworkExtendedLocation {
		return &v
	}).(VirtualNetworkExtendedLocationPtrOutput)
}

// The extended location name.
func (o VirtualNetworkExtendedLocationOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkExtendedLocation) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The extended location type.
func (o VirtualNetworkExtendedLocationOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkExtendedLocation) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type VirtualNetworkExtendedLocationPtrOutput struct{ *pulumi.OutputState }

func (VirtualNetworkExtendedLocationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNetworkExtendedLocation)(nil)).Elem()
}

func (o VirtualNetworkExtendedLocationPtrOutput) ToVirtualNetworkExtendedLocationPtrOutput() VirtualNetworkExtendedLocationPtrOutput {
	return o
}

func (o VirtualNetworkExtendedLocationPtrOutput) ToVirtualNetworkExtendedLocationPtrOutputWithContext(ctx context.Context) VirtualNetworkExtendedLocationPtrOutput {
	return o
}

func (o VirtualNetworkExtendedLocationPtrOutput) Elem() VirtualNetworkExtendedLocationOutput {
	return o.ApplyT(func(v *VirtualNetworkExtendedLocation) VirtualNetworkExtendedLocation {
		if v != nil {
			return *v
		}
		var ret VirtualNetworkExtendedLocation
		return ret
	}).(VirtualNetworkExtendedLocationOutput)
}

// The extended location name.
func (o VirtualNetworkExtendedLocationPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkExtendedLocation) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// The extended location type.
func (o VirtualNetworkExtendedLocationPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkExtendedLocation) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// HybridAKSNetworkSpec defines the desired state of HybridAKSNetwork
type VirtualNetworkProperties struct {
	// Address of the DHCP servers associated with the network
	DhcpServers []string `pulumi:"dhcpServers"`
	// Address of the DNS servers associated with the network
	DnsServers []string `pulumi:"dnsServers"`
	// Address of the Gateway associated with the network
	Gateway          *string                                   `pulumi:"gateway"`
	InfraVnetProfile *VirtualNetworkPropertiesInfraVnetProfile `pulumi:"infraVnetProfile"`
	// IP Address Prefix of the network
	IpAddressPrefix *string `pulumi:"ipAddressPrefix"`
	// Virtual IP Pool for Kubernetes
	VipPool []VirtualNetworkPropertiesVipPool `pulumi:"vipPool"`
	// VLAN Id used by the network
	VlanID *int `pulumi:"vlanID"`
	// IP Pool for Virtual Machines
	VmipPool []VirtualNetworkPropertiesVmipPool `pulumi:"vmipPool"`
}

// VirtualNetworkPropertiesInput is an input type that accepts VirtualNetworkPropertiesArgs and VirtualNetworkPropertiesOutput values.
// You can construct a concrete instance of `VirtualNetworkPropertiesInput` via:
//
//	VirtualNetworkPropertiesArgs{...}
type VirtualNetworkPropertiesInput interface {
	pulumi.Input

	ToVirtualNetworkPropertiesOutput() VirtualNetworkPropertiesOutput
	ToVirtualNetworkPropertiesOutputWithContext(context.Context) VirtualNetworkPropertiesOutput
}

// HybridAKSNetworkSpec defines the desired state of HybridAKSNetwork
type VirtualNetworkPropertiesArgs struct {
	// Address of the DHCP servers associated with the network
	DhcpServers pulumi.StringArrayInput `pulumi:"dhcpServers"`
	// Address of the DNS servers associated with the network
	DnsServers pulumi.StringArrayInput `pulumi:"dnsServers"`
	// Address of the Gateway associated with the network
	Gateway          pulumi.StringPtrInput                            `pulumi:"gateway"`
	InfraVnetProfile VirtualNetworkPropertiesInfraVnetProfilePtrInput `pulumi:"infraVnetProfile"`
	// IP Address Prefix of the network
	IpAddressPrefix pulumi.StringPtrInput `pulumi:"ipAddressPrefix"`
	// Virtual IP Pool for Kubernetes
	VipPool VirtualNetworkPropertiesVipPoolArrayInput `pulumi:"vipPool"`
	// VLAN Id used by the network
	VlanID pulumi.IntPtrInput `pulumi:"vlanID"`
	// IP Pool for Virtual Machines
	VmipPool VirtualNetworkPropertiesVmipPoolArrayInput `pulumi:"vmipPool"`
}

func (VirtualNetworkPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkProperties)(nil)).Elem()
}

func (i VirtualNetworkPropertiesArgs) ToVirtualNetworkPropertiesOutput() VirtualNetworkPropertiesOutput {
	return i.ToVirtualNetworkPropertiesOutputWithContext(context.Background())
}

func (i VirtualNetworkPropertiesArgs) ToVirtualNetworkPropertiesOutputWithContext(ctx context.Context) VirtualNetworkPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkPropertiesOutput)
}

func (i VirtualNetworkPropertiesArgs) ToVirtualNetworkPropertiesPtrOutput() VirtualNetworkPropertiesPtrOutput {
	return i.ToVirtualNetworkPropertiesPtrOutputWithContext(context.Background())
}

func (i VirtualNetworkPropertiesArgs) ToVirtualNetworkPropertiesPtrOutputWithContext(ctx context.Context) VirtualNetworkPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkPropertiesOutput).ToVirtualNetworkPropertiesPtrOutputWithContext(ctx)
}

// VirtualNetworkPropertiesPtrInput is an input type that accepts VirtualNetworkPropertiesArgs, VirtualNetworkPropertiesPtr and VirtualNetworkPropertiesPtrOutput values.
// You can construct a concrete instance of `VirtualNetworkPropertiesPtrInput` via:
//
//	        VirtualNetworkPropertiesArgs{...}
//
//	or:
//
//	        nil
type VirtualNetworkPropertiesPtrInput interface {
	pulumi.Input

	ToVirtualNetworkPropertiesPtrOutput() VirtualNetworkPropertiesPtrOutput
	ToVirtualNetworkPropertiesPtrOutputWithContext(context.Context) VirtualNetworkPropertiesPtrOutput
}

type virtualNetworkPropertiesPtrType VirtualNetworkPropertiesArgs

func VirtualNetworkPropertiesPtr(v *VirtualNetworkPropertiesArgs) VirtualNetworkPropertiesPtrInput {
	return (*virtualNetworkPropertiesPtrType)(v)
}

func (*virtualNetworkPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNetworkProperties)(nil)).Elem()
}

func (i *virtualNetworkPropertiesPtrType) ToVirtualNetworkPropertiesPtrOutput() VirtualNetworkPropertiesPtrOutput {
	return i.ToVirtualNetworkPropertiesPtrOutputWithContext(context.Background())
}

func (i *virtualNetworkPropertiesPtrType) ToVirtualNetworkPropertiesPtrOutputWithContext(ctx context.Context) VirtualNetworkPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkPropertiesPtrOutput)
}

// HybridAKSNetworkSpec defines the desired state of HybridAKSNetwork
type VirtualNetworkPropertiesOutput struct{ *pulumi.OutputState }

func (VirtualNetworkPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkProperties)(nil)).Elem()
}

func (o VirtualNetworkPropertiesOutput) ToVirtualNetworkPropertiesOutput() VirtualNetworkPropertiesOutput {
	return o
}

func (o VirtualNetworkPropertiesOutput) ToVirtualNetworkPropertiesOutputWithContext(ctx context.Context) VirtualNetworkPropertiesOutput {
	return o
}

func (o VirtualNetworkPropertiesOutput) ToVirtualNetworkPropertiesPtrOutput() VirtualNetworkPropertiesPtrOutput {
	return o.ToVirtualNetworkPropertiesPtrOutputWithContext(context.Background())
}

func (o VirtualNetworkPropertiesOutput) ToVirtualNetworkPropertiesPtrOutputWithContext(ctx context.Context) VirtualNetworkPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualNetworkProperties) *VirtualNetworkProperties {
		return &v
	}).(VirtualNetworkPropertiesPtrOutput)
}

// Address of the DHCP servers associated with the network
func (o VirtualNetworkPropertiesOutput) DhcpServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VirtualNetworkProperties) []string { return v.DhcpServers }).(pulumi.StringArrayOutput)
}

// Address of the DNS servers associated with the network
func (o VirtualNetworkPropertiesOutput) DnsServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VirtualNetworkProperties) []string { return v.DnsServers }).(pulumi.StringArrayOutput)
}

// Address of the Gateway associated with the network
func (o VirtualNetworkPropertiesOutput) Gateway() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkProperties) *string { return v.Gateway }).(pulumi.StringPtrOutput)
}

func (o VirtualNetworkPropertiesOutput) InfraVnetProfile() VirtualNetworkPropertiesInfraVnetProfilePtrOutput {
	return o.ApplyT(func(v VirtualNetworkProperties) *VirtualNetworkPropertiesInfraVnetProfile { return v.InfraVnetProfile }).(VirtualNetworkPropertiesInfraVnetProfilePtrOutput)
}

// IP Address Prefix of the network
func (o VirtualNetworkPropertiesOutput) IpAddressPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkProperties) *string { return v.IpAddressPrefix }).(pulumi.StringPtrOutput)
}

// Virtual IP Pool for Kubernetes
func (o VirtualNetworkPropertiesOutput) VipPool() VirtualNetworkPropertiesVipPoolArrayOutput {
	return o.ApplyT(func(v VirtualNetworkProperties) []VirtualNetworkPropertiesVipPool { return v.VipPool }).(VirtualNetworkPropertiesVipPoolArrayOutput)
}

// VLAN Id used by the network
func (o VirtualNetworkPropertiesOutput) VlanID() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualNetworkProperties) *int { return v.VlanID }).(pulumi.IntPtrOutput)
}

// IP Pool for Virtual Machines
func (o VirtualNetworkPropertiesOutput) VmipPool() VirtualNetworkPropertiesVmipPoolArrayOutput {
	return o.ApplyT(func(v VirtualNetworkProperties) []VirtualNetworkPropertiesVmipPool { return v.VmipPool }).(VirtualNetworkPropertiesVmipPoolArrayOutput)
}

type VirtualNetworkPropertiesPtrOutput struct{ *pulumi.OutputState }

func (VirtualNetworkPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNetworkProperties)(nil)).Elem()
}

func (o VirtualNetworkPropertiesPtrOutput) ToVirtualNetworkPropertiesPtrOutput() VirtualNetworkPropertiesPtrOutput {
	return o
}

func (o VirtualNetworkPropertiesPtrOutput) ToVirtualNetworkPropertiesPtrOutputWithContext(ctx context.Context) VirtualNetworkPropertiesPtrOutput {
	return o
}

func (o VirtualNetworkPropertiesPtrOutput) Elem() VirtualNetworkPropertiesOutput {
	return o.ApplyT(func(v *VirtualNetworkProperties) VirtualNetworkProperties {
		if v != nil {
			return *v
		}
		var ret VirtualNetworkProperties
		return ret
	}).(VirtualNetworkPropertiesOutput)
}

// Address of the DHCP servers associated with the network
func (o VirtualNetworkPropertiesPtrOutput) DhcpServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *VirtualNetworkProperties) []string {
		if v == nil {
			return nil
		}
		return v.DhcpServers
	}).(pulumi.StringArrayOutput)
}

// Address of the DNS servers associated with the network
func (o VirtualNetworkPropertiesPtrOutput) DnsServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *VirtualNetworkProperties) []string {
		if v == nil {
			return nil
		}
		return v.DnsServers
	}).(pulumi.StringArrayOutput)
}

// Address of the Gateway associated with the network
func (o VirtualNetworkPropertiesPtrOutput) Gateway() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkProperties) *string {
		if v == nil {
			return nil
		}
		return v.Gateway
	}).(pulumi.StringPtrOutput)
}

func (o VirtualNetworkPropertiesPtrOutput) InfraVnetProfile() VirtualNetworkPropertiesInfraVnetProfilePtrOutput {
	return o.ApplyT(func(v *VirtualNetworkProperties) *VirtualNetworkPropertiesInfraVnetProfile {
		if v == nil {
			return nil
		}
		return v.InfraVnetProfile
	}).(VirtualNetworkPropertiesInfraVnetProfilePtrOutput)
}

// IP Address Prefix of the network
func (o VirtualNetworkPropertiesPtrOutput) IpAddressPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkProperties) *string {
		if v == nil {
			return nil
		}
		return v.IpAddressPrefix
	}).(pulumi.StringPtrOutput)
}

// Virtual IP Pool for Kubernetes
func (o VirtualNetworkPropertiesPtrOutput) VipPool() VirtualNetworkPropertiesVipPoolArrayOutput {
	return o.ApplyT(func(v *VirtualNetworkProperties) []VirtualNetworkPropertiesVipPool {
		if v == nil {
			return nil
		}
		return v.VipPool
	}).(VirtualNetworkPropertiesVipPoolArrayOutput)
}

// VLAN Id used by the network
func (o VirtualNetworkPropertiesPtrOutput) VlanID() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkProperties) *int {
		if v == nil {
			return nil
		}
		return v.VlanID
	}).(pulumi.IntPtrOutput)
}

// IP Pool for Virtual Machines
func (o VirtualNetworkPropertiesPtrOutput) VmipPool() VirtualNetworkPropertiesVmipPoolArrayOutput {
	return o.ApplyT(func(v *VirtualNetworkProperties) []VirtualNetworkPropertiesVmipPool {
		if v == nil {
			return nil
		}
		return v.VmipPool
	}).(VirtualNetworkPropertiesVmipPoolArrayOutput)
}

// Infra network profile for HCI platform
type VirtualNetworkPropertiesHci struct {
	// Resource group in MOC(Microsoft On-premises Cloud)
	MocGroup *string `pulumi:"mocGroup"`
	// Location in MOC(Microsoft On-premises Cloud)
	MocLocation *string `pulumi:"mocLocation"`
	// Virtual Network name in MOC(Microsoft On-premises Cloud)
	MocVnetName *string `pulumi:"mocVnetName"`
}

// VirtualNetworkPropertiesHciInput is an input type that accepts VirtualNetworkPropertiesHciArgs and VirtualNetworkPropertiesHciOutput values.
// You can construct a concrete instance of `VirtualNetworkPropertiesHciInput` via:
//
//	VirtualNetworkPropertiesHciArgs{...}
type VirtualNetworkPropertiesHciInput interface {
	pulumi.Input

	ToVirtualNetworkPropertiesHciOutput() VirtualNetworkPropertiesHciOutput
	ToVirtualNetworkPropertiesHciOutputWithContext(context.Context) VirtualNetworkPropertiesHciOutput
}

// Infra network profile for HCI platform
type VirtualNetworkPropertiesHciArgs struct {
	// Resource group in MOC(Microsoft On-premises Cloud)
	MocGroup pulumi.StringPtrInput `pulumi:"mocGroup"`
	// Location in MOC(Microsoft On-premises Cloud)
	MocLocation pulumi.StringPtrInput `pulumi:"mocLocation"`
	// Virtual Network name in MOC(Microsoft On-premises Cloud)
	MocVnetName pulumi.StringPtrInput `pulumi:"mocVnetName"`
}

func (VirtualNetworkPropertiesHciArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkPropertiesHci)(nil)).Elem()
}

func (i VirtualNetworkPropertiesHciArgs) ToVirtualNetworkPropertiesHciOutput() VirtualNetworkPropertiesHciOutput {
	return i.ToVirtualNetworkPropertiesHciOutputWithContext(context.Background())
}

func (i VirtualNetworkPropertiesHciArgs) ToVirtualNetworkPropertiesHciOutputWithContext(ctx context.Context) VirtualNetworkPropertiesHciOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkPropertiesHciOutput)
}

func (i VirtualNetworkPropertiesHciArgs) ToVirtualNetworkPropertiesHciPtrOutput() VirtualNetworkPropertiesHciPtrOutput {
	return i.ToVirtualNetworkPropertiesHciPtrOutputWithContext(context.Background())
}

func (i VirtualNetworkPropertiesHciArgs) ToVirtualNetworkPropertiesHciPtrOutputWithContext(ctx context.Context) VirtualNetworkPropertiesHciPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkPropertiesHciOutput).ToVirtualNetworkPropertiesHciPtrOutputWithContext(ctx)
}

// VirtualNetworkPropertiesHciPtrInput is an input type that accepts VirtualNetworkPropertiesHciArgs, VirtualNetworkPropertiesHciPtr and VirtualNetworkPropertiesHciPtrOutput values.
// You can construct a concrete instance of `VirtualNetworkPropertiesHciPtrInput` via:
//
//	        VirtualNetworkPropertiesHciArgs{...}
//
//	or:
//
//	        nil
type VirtualNetworkPropertiesHciPtrInput interface {
	pulumi.Input

	ToVirtualNetworkPropertiesHciPtrOutput() VirtualNetworkPropertiesHciPtrOutput
	ToVirtualNetworkPropertiesHciPtrOutputWithContext(context.Context) VirtualNetworkPropertiesHciPtrOutput
}

type virtualNetworkPropertiesHciPtrType VirtualNetworkPropertiesHciArgs

func VirtualNetworkPropertiesHciPtr(v *VirtualNetworkPropertiesHciArgs) VirtualNetworkPropertiesHciPtrInput {
	return (*virtualNetworkPropertiesHciPtrType)(v)
}

func (*virtualNetworkPropertiesHciPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNetworkPropertiesHci)(nil)).Elem()
}

func (i *virtualNetworkPropertiesHciPtrType) ToVirtualNetworkPropertiesHciPtrOutput() VirtualNetworkPropertiesHciPtrOutput {
	return i.ToVirtualNetworkPropertiesHciPtrOutputWithContext(context.Background())
}

func (i *virtualNetworkPropertiesHciPtrType) ToVirtualNetworkPropertiesHciPtrOutputWithContext(ctx context.Context) VirtualNetworkPropertiesHciPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkPropertiesHciPtrOutput)
}

// Infra network profile for HCI platform
type VirtualNetworkPropertiesHciOutput struct{ *pulumi.OutputState }

func (VirtualNetworkPropertiesHciOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkPropertiesHci)(nil)).Elem()
}

func (o VirtualNetworkPropertiesHciOutput) ToVirtualNetworkPropertiesHciOutput() VirtualNetworkPropertiesHciOutput {
	return o
}

func (o VirtualNetworkPropertiesHciOutput) ToVirtualNetworkPropertiesHciOutputWithContext(ctx context.Context) VirtualNetworkPropertiesHciOutput {
	return o
}

func (o VirtualNetworkPropertiesHciOutput) ToVirtualNetworkPropertiesHciPtrOutput() VirtualNetworkPropertiesHciPtrOutput {
	return o.ToVirtualNetworkPropertiesHciPtrOutputWithContext(context.Background())
}

func (o VirtualNetworkPropertiesHciOutput) ToVirtualNetworkPropertiesHciPtrOutputWithContext(ctx context.Context) VirtualNetworkPropertiesHciPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualNetworkPropertiesHci) *VirtualNetworkPropertiesHci {
		return &v
	}).(VirtualNetworkPropertiesHciPtrOutput)
}

// Resource group in MOC(Microsoft On-premises Cloud)
func (o VirtualNetworkPropertiesHciOutput) MocGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkPropertiesHci) *string { return v.MocGroup }).(pulumi.StringPtrOutput)
}

// Location in MOC(Microsoft On-premises Cloud)
func (o VirtualNetworkPropertiesHciOutput) MocLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkPropertiesHci) *string { return v.MocLocation }).(pulumi.StringPtrOutput)
}

// Virtual Network name in MOC(Microsoft On-premises Cloud)
func (o VirtualNetworkPropertiesHciOutput) MocVnetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkPropertiesHci) *string { return v.MocVnetName }).(pulumi.StringPtrOutput)
}

type VirtualNetworkPropertiesHciPtrOutput struct{ *pulumi.OutputState }

func (VirtualNetworkPropertiesHciPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNetworkPropertiesHci)(nil)).Elem()
}

func (o VirtualNetworkPropertiesHciPtrOutput) ToVirtualNetworkPropertiesHciPtrOutput() VirtualNetworkPropertiesHciPtrOutput {
	return o
}

func (o VirtualNetworkPropertiesHciPtrOutput) ToVirtualNetworkPropertiesHciPtrOutputWithContext(ctx context.Context) VirtualNetworkPropertiesHciPtrOutput {
	return o
}

func (o VirtualNetworkPropertiesHciPtrOutput) Elem() VirtualNetworkPropertiesHciOutput {
	return o.ApplyT(func(v *VirtualNetworkPropertiesHci) VirtualNetworkPropertiesHci {
		if v != nil {
			return *v
		}
		var ret VirtualNetworkPropertiesHci
		return ret
	}).(VirtualNetworkPropertiesHciOutput)
}

// Resource group in MOC(Microsoft On-premises Cloud)
func (o VirtualNetworkPropertiesHciPtrOutput) MocGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkPropertiesHci) *string {
		if v == nil {
			return nil
		}
		return v.MocGroup
	}).(pulumi.StringPtrOutput)
}

// Location in MOC(Microsoft On-premises Cloud)
func (o VirtualNetworkPropertiesHciPtrOutput) MocLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkPropertiesHci) *string {
		if v == nil {
			return nil
		}
		return v.MocLocation
	}).(pulumi.StringPtrOutput)
}

// Virtual Network name in MOC(Microsoft On-premises Cloud)
func (o VirtualNetworkPropertiesHciPtrOutput) MocVnetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkPropertiesHci) *string {
		if v == nil {
			return nil
		}
		return v.MocVnetName
	}).(pulumi.StringPtrOutput)
}

type VirtualNetworkPropertiesInfraVnetProfile struct {
	// Infra network profile for HCI platform
	Hci *VirtualNetworkPropertiesHci `pulumi:"hci"`
	// Infra network profile for VMware platform
	Vmware *VirtualNetworkPropertiesVmware `pulumi:"vmware"`
}

// VirtualNetworkPropertiesInfraVnetProfileInput is an input type that accepts VirtualNetworkPropertiesInfraVnetProfileArgs and VirtualNetworkPropertiesInfraVnetProfileOutput values.
// You can construct a concrete instance of `VirtualNetworkPropertiesInfraVnetProfileInput` via:
//
//	VirtualNetworkPropertiesInfraVnetProfileArgs{...}
type VirtualNetworkPropertiesInfraVnetProfileInput interface {
	pulumi.Input

	ToVirtualNetworkPropertiesInfraVnetProfileOutput() VirtualNetworkPropertiesInfraVnetProfileOutput
	ToVirtualNetworkPropertiesInfraVnetProfileOutputWithContext(context.Context) VirtualNetworkPropertiesInfraVnetProfileOutput
}

type VirtualNetworkPropertiesInfraVnetProfileArgs struct {
	// Infra network profile for HCI platform
	Hci VirtualNetworkPropertiesHciPtrInput `pulumi:"hci"`
	// Infra network profile for VMware platform
	Vmware VirtualNetworkPropertiesVmwarePtrInput `pulumi:"vmware"`
}

func (VirtualNetworkPropertiesInfraVnetProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkPropertiesInfraVnetProfile)(nil)).Elem()
}

func (i VirtualNetworkPropertiesInfraVnetProfileArgs) ToVirtualNetworkPropertiesInfraVnetProfileOutput() VirtualNetworkPropertiesInfraVnetProfileOutput {
	return i.ToVirtualNetworkPropertiesInfraVnetProfileOutputWithContext(context.Background())
}

func (i VirtualNetworkPropertiesInfraVnetProfileArgs) ToVirtualNetworkPropertiesInfraVnetProfileOutputWithContext(ctx context.Context) VirtualNetworkPropertiesInfraVnetProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkPropertiesInfraVnetProfileOutput)
}

func (i VirtualNetworkPropertiesInfraVnetProfileArgs) ToVirtualNetworkPropertiesInfraVnetProfilePtrOutput() VirtualNetworkPropertiesInfraVnetProfilePtrOutput {
	return i.ToVirtualNetworkPropertiesInfraVnetProfilePtrOutputWithContext(context.Background())
}

func (i VirtualNetworkPropertiesInfraVnetProfileArgs) ToVirtualNetworkPropertiesInfraVnetProfilePtrOutputWithContext(ctx context.Context) VirtualNetworkPropertiesInfraVnetProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkPropertiesInfraVnetProfileOutput).ToVirtualNetworkPropertiesInfraVnetProfilePtrOutputWithContext(ctx)
}

// VirtualNetworkPropertiesInfraVnetProfilePtrInput is an input type that accepts VirtualNetworkPropertiesInfraVnetProfileArgs, VirtualNetworkPropertiesInfraVnetProfilePtr and VirtualNetworkPropertiesInfraVnetProfilePtrOutput values.
// You can construct a concrete instance of `VirtualNetworkPropertiesInfraVnetProfilePtrInput` via:
//
//	        VirtualNetworkPropertiesInfraVnetProfileArgs{...}
//
//	or:
//
//	        nil
type VirtualNetworkPropertiesInfraVnetProfilePtrInput interface {
	pulumi.Input

	ToVirtualNetworkPropertiesInfraVnetProfilePtrOutput() VirtualNetworkPropertiesInfraVnetProfilePtrOutput
	ToVirtualNetworkPropertiesInfraVnetProfilePtrOutputWithContext(context.Context) VirtualNetworkPropertiesInfraVnetProfilePtrOutput
}

type virtualNetworkPropertiesInfraVnetProfilePtrType VirtualNetworkPropertiesInfraVnetProfileArgs

func VirtualNetworkPropertiesInfraVnetProfilePtr(v *VirtualNetworkPropertiesInfraVnetProfileArgs) VirtualNetworkPropertiesInfraVnetProfilePtrInput {
	return (*virtualNetworkPropertiesInfraVnetProfilePtrType)(v)
}

func (*virtualNetworkPropertiesInfraVnetProfilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNetworkPropertiesInfraVnetProfile)(nil)).Elem()
}

func (i *virtualNetworkPropertiesInfraVnetProfilePtrType) ToVirtualNetworkPropertiesInfraVnetProfilePtrOutput() VirtualNetworkPropertiesInfraVnetProfilePtrOutput {
	return i.ToVirtualNetworkPropertiesInfraVnetProfilePtrOutputWithContext(context.Background())
}

func (i *virtualNetworkPropertiesInfraVnetProfilePtrType) ToVirtualNetworkPropertiesInfraVnetProfilePtrOutputWithContext(ctx context.Context) VirtualNetworkPropertiesInfraVnetProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkPropertiesInfraVnetProfilePtrOutput)
}

type VirtualNetworkPropertiesInfraVnetProfileOutput struct{ *pulumi.OutputState }

func (VirtualNetworkPropertiesInfraVnetProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkPropertiesInfraVnetProfile)(nil)).Elem()
}

func (o VirtualNetworkPropertiesInfraVnetProfileOutput) ToVirtualNetworkPropertiesInfraVnetProfileOutput() VirtualNetworkPropertiesInfraVnetProfileOutput {
	return o
}

func (o VirtualNetworkPropertiesInfraVnetProfileOutput) ToVirtualNetworkPropertiesInfraVnetProfileOutputWithContext(ctx context.Context) VirtualNetworkPropertiesInfraVnetProfileOutput {
	return o
}

func (o VirtualNetworkPropertiesInfraVnetProfileOutput) ToVirtualNetworkPropertiesInfraVnetProfilePtrOutput() VirtualNetworkPropertiesInfraVnetProfilePtrOutput {
	return o.ToVirtualNetworkPropertiesInfraVnetProfilePtrOutputWithContext(context.Background())
}

func (o VirtualNetworkPropertiesInfraVnetProfileOutput) ToVirtualNetworkPropertiesInfraVnetProfilePtrOutputWithContext(ctx context.Context) VirtualNetworkPropertiesInfraVnetProfilePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualNetworkPropertiesInfraVnetProfile) *VirtualNetworkPropertiesInfraVnetProfile {
		return &v
	}).(VirtualNetworkPropertiesInfraVnetProfilePtrOutput)
}

// Infra network profile for HCI platform
func (o VirtualNetworkPropertiesInfraVnetProfileOutput) Hci() VirtualNetworkPropertiesHciPtrOutput {
	return o.ApplyT(func(v VirtualNetworkPropertiesInfraVnetProfile) *VirtualNetworkPropertiesHci { return v.Hci }).(VirtualNetworkPropertiesHciPtrOutput)
}

// Infra network profile for VMware platform
func (o VirtualNetworkPropertiesInfraVnetProfileOutput) Vmware() VirtualNetworkPropertiesVmwarePtrOutput {
	return o.ApplyT(func(v VirtualNetworkPropertiesInfraVnetProfile) *VirtualNetworkPropertiesVmware { return v.Vmware }).(VirtualNetworkPropertiesVmwarePtrOutput)
}

type VirtualNetworkPropertiesInfraVnetProfilePtrOutput struct{ *pulumi.OutputState }

func (VirtualNetworkPropertiesInfraVnetProfilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNetworkPropertiesInfraVnetProfile)(nil)).Elem()
}

func (o VirtualNetworkPropertiesInfraVnetProfilePtrOutput) ToVirtualNetworkPropertiesInfraVnetProfilePtrOutput() VirtualNetworkPropertiesInfraVnetProfilePtrOutput {
	return o
}

func (o VirtualNetworkPropertiesInfraVnetProfilePtrOutput) ToVirtualNetworkPropertiesInfraVnetProfilePtrOutputWithContext(ctx context.Context) VirtualNetworkPropertiesInfraVnetProfilePtrOutput {
	return o
}

func (o VirtualNetworkPropertiesInfraVnetProfilePtrOutput) Elem() VirtualNetworkPropertiesInfraVnetProfileOutput {
	return o.ApplyT(func(v *VirtualNetworkPropertiesInfraVnetProfile) VirtualNetworkPropertiesInfraVnetProfile {
		if v != nil {
			return *v
		}
		var ret VirtualNetworkPropertiesInfraVnetProfile
		return ret
	}).(VirtualNetworkPropertiesInfraVnetProfileOutput)
}

// Infra network profile for HCI platform
func (o VirtualNetworkPropertiesInfraVnetProfilePtrOutput) Hci() VirtualNetworkPropertiesHciPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkPropertiesInfraVnetProfile) *VirtualNetworkPropertiesHci {
		if v == nil {
			return nil
		}
		return v.Hci
	}).(VirtualNetworkPropertiesHciPtrOutput)
}

// Infra network profile for VMware platform
func (o VirtualNetworkPropertiesInfraVnetProfilePtrOutput) Vmware() VirtualNetworkPropertiesVmwarePtrOutput {
	return o.ApplyT(func(v *VirtualNetworkPropertiesInfraVnetProfile) *VirtualNetworkPropertiesVmware {
		if v == nil {
			return nil
		}
		return v.Vmware
	}).(VirtualNetworkPropertiesVmwarePtrOutput)
}

// HybridAKSNetworkSpec defines the desired state of HybridAKSNetwork
type VirtualNetworkPropertiesResponse struct {
	// Address of the DHCP servers associated with the network
	DhcpServers []string `pulumi:"dhcpServers"`
	// Address of the DNS servers associated with the network
	DnsServers []string `pulumi:"dnsServers"`
	// Address of the Gateway associated with the network
	Gateway          *string                                           `pulumi:"gateway"`
	InfraVnetProfile *VirtualNetworkPropertiesResponseInfraVnetProfile `pulumi:"infraVnetProfile"`
	// IP Address Prefix of the network
	IpAddressPrefix   *string `pulumi:"ipAddressPrefix"`
	ProvisioningState string  `pulumi:"provisioningState"`
	// HybridAKSNetworkStatus defines the observed state of HybridAKSNetwork
	Status VirtualNetworkPropertiesResponseStatus `pulumi:"status"`
	// Virtual IP Pool for Kubernetes
	VipPool []VirtualNetworkPropertiesResponseVipPool `pulumi:"vipPool"`
	// VLAN Id used by the network
	VlanID *int `pulumi:"vlanID"`
	// IP Pool for Virtual Machines
	VmipPool []VirtualNetworkPropertiesResponseVmipPool `pulumi:"vmipPool"`
}

// HybridAKSNetworkSpec defines the desired state of HybridAKSNetwork
type VirtualNetworkPropertiesResponseOutput struct{ *pulumi.OutputState }

func (VirtualNetworkPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkPropertiesResponse)(nil)).Elem()
}

func (o VirtualNetworkPropertiesResponseOutput) ToVirtualNetworkPropertiesResponseOutput() VirtualNetworkPropertiesResponseOutput {
	return o
}

func (o VirtualNetworkPropertiesResponseOutput) ToVirtualNetworkPropertiesResponseOutputWithContext(ctx context.Context) VirtualNetworkPropertiesResponseOutput {
	return o
}

// Address of the DHCP servers associated with the network
func (o VirtualNetworkPropertiesResponseOutput) DhcpServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VirtualNetworkPropertiesResponse) []string { return v.DhcpServers }).(pulumi.StringArrayOutput)
}

// Address of the DNS servers associated with the network
func (o VirtualNetworkPropertiesResponseOutput) DnsServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VirtualNetworkPropertiesResponse) []string { return v.DnsServers }).(pulumi.StringArrayOutput)
}

// Address of the Gateway associated with the network
func (o VirtualNetworkPropertiesResponseOutput) Gateway() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkPropertiesResponse) *string { return v.Gateway }).(pulumi.StringPtrOutput)
}

func (o VirtualNetworkPropertiesResponseOutput) InfraVnetProfile() VirtualNetworkPropertiesResponseInfraVnetProfilePtrOutput {
	return o.ApplyT(func(v VirtualNetworkPropertiesResponse) *VirtualNetworkPropertiesResponseInfraVnetProfile {
		return v.InfraVnetProfile
	}).(VirtualNetworkPropertiesResponseInfraVnetProfilePtrOutput)
}

// IP Address Prefix of the network
func (o VirtualNetworkPropertiesResponseOutput) IpAddressPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkPropertiesResponse) *string { return v.IpAddressPrefix }).(pulumi.StringPtrOutput)
}

func (o VirtualNetworkPropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNetworkPropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// HybridAKSNetworkStatus defines the observed state of HybridAKSNetwork
func (o VirtualNetworkPropertiesResponseOutput) Status() VirtualNetworkPropertiesResponseStatusOutput {
	return o.ApplyT(func(v VirtualNetworkPropertiesResponse) VirtualNetworkPropertiesResponseStatus { return v.Status }).(VirtualNetworkPropertiesResponseStatusOutput)
}

// Virtual IP Pool for Kubernetes
func (o VirtualNetworkPropertiesResponseOutput) VipPool() VirtualNetworkPropertiesResponseVipPoolArrayOutput {
	return o.ApplyT(func(v VirtualNetworkPropertiesResponse) []VirtualNetworkPropertiesResponseVipPool { return v.VipPool }).(VirtualNetworkPropertiesResponseVipPoolArrayOutput)
}

// VLAN Id used by the network
func (o VirtualNetworkPropertiesResponseOutput) VlanID() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualNetworkPropertiesResponse) *int { return v.VlanID }).(pulumi.IntPtrOutput)
}

// IP Pool for Virtual Machines
func (o VirtualNetworkPropertiesResponseOutput) VmipPool() VirtualNetworkPropertiesResponseVmipPoolArrayOutput {
	return o.ApplyT(func(v VirtualNetworkPropertiesResponse) []VirtualNetworkPropertiesResponseVmipPool { return v.VmipPool }).(VirtualNetworkPropertiesResponseVmipPoolArrayOutput)
}

type VirtualNetworkPropertiesResponseError struct {
	Code    *string `pulumi:"code"`
	Message *string `pulumi:"message"`
}

type VirtualNetworkPropertiesResponseErrorOutput struct{ *pulumi.OutputState }

func (VirtualNetworkPropertiesResponseErrorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkPropertiesResponseError)(nil)).Elem()
}

func (o VirtualNetworkPropertiesResponseErrorOutput) ToVirtualNetworkPropertiesResponseErrorOutput() VirtualNetworkPropertiesResponseErrorOutput {
	return o
}

func (o VirtualNetworkPropertiesResponseErrorOutput) ToVirtualNetworkPropertiesResponseErrorOutputWithContext(ctx context.Context) VirtualNetworkPropertiesResponseErrorOutput {
	return o
}

func (o VirtualNetworkPropertiesResponseErrorOutput) Code() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkPropertiesResponseError) *string { return v.Code }).(pulumi.StringPtrOutput)
}

func (o VirtualNetworkPropertiesResponseErrorOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkPropertiesResponseError) *string { return v.Message }).(pulumi.StringPtrOutput)
}

type VirtualNetworkPropertiesResponseErrorPtrOutput struct{ *pulumi.OutputState }

func (VirtualNetworkPropertiesResponseErrorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNetworkPropertiesResponseError)(nil)).Elem()
}

func (o VirtualNetworkPropertiesResponseErrorPtrOutput) ToVirtualNetworkPropertiesResponseErrorPtrOutput() VirtualNetworkPropertiesResponseErrorPtrOutput {
	return o
}

func (o VirtualNetworkPropertiesResponseErrorPtrOutput) ToVirtualNetworkPropertiesResponseErrorPtrOutputWithContext(ctx context.Context) VirtualNetworkPropertiesResponseErrorPtrOutput {
	return o
}

func (o VirtualNetworkPropertiesResponseErrorPtrOutput) Elem() VirtualNetworkPropertiesResponseErrorOutput {
	return o.ApplyT(func(v *VirtualNetworkPropertiesResponseError) VirtualNetworkPropertiesResponseError {
		if v != nil {
			return *v
		}
		var ret VirtualNetworkPropertiesResponseError
		return ret
	}).(VirtualNetworkPropertiesResponseErrorOutput)
}

func (o VirtualNetworkPropertiesResponseErrorPtrOutput) Code() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkPropertiesResponseError) *string {
		if v == nil {
			return nil
		}
		return v.Code
	}).(pulumi.StringPtrOutput)
}

func (o VirtualNetworkPropertiesResponseErrorPtrOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkPropertiesResponseError) *string {
		if v == nil {
			return nil
		}
		return v.Message
	}).(pulumi.StringPtrOutput)
}

// Infra network profile for HCI platform
type VirtualNetworkPropertiesResponseHci struct {
	// Resource group in MOC(Microsoft On-premises Cloud)
	MocGroup *string `pulumi:"mocGroup"`
	// Location in MOC(Microsoft On-premises Cloud)
	MocLocation *string `pulumi:"mocLocation"`
	// Virtual Network name in MOC(Microsoft On-premises Cloud)
	MocVnetName *string `pulumi:"mocVnetName"`
}

// Infra network profile for HCI platform
type VirtualNetworkPropertiesResponseHciOutput struct{ *pulumi.OutputState }

func (VirtualNetworkPropertiesResponseHciOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkPropertiesResponseHci)(nil)).Elem()
}

func (o VirtualNetworkPropertiesResponseHciOutput) ToVirtualNetworkPropertiesResponseHciOutput() VirtualNetworkPropertiesResponseHciOutput {
	return o
}

func (o VirtualNetworkPropertiesResponseHciOutput) ToVirtualNetworkPropertiesResponseHciOutputWithContext(ctx context.Context) VirtualNetworkPropertiesResponseHciOutput {
	return o
}

// Resource group in MOC(Microsoft On-premises Cloud)
func (o VirtualNetworkPropertiesResponseHciOutput) MocGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkPropertiesResponseHci) *string { return v.MocGroup }).(pulumi.StringPtrOutput)
}

// Location in MOC(Microsoft On-premises Cloud)
func (o VirtualNetworkPropertiesResponseHciOutput) MocLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkPropertiesResponseHci) *string { return v.MocLocation }).(pulumi.StringPtrOutput)
}

// Virtual Network name in MOC(Microsoft On-premises Cloud)
func (o VirtualNetworkPropertiesResponseHciOutput) MocVnetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkPropertiesResponseHci) *string { return v.MocVnetName }).(pulumi.StringPtrOutput)
}

type VirtualNetworkPropertiesResponseHciPtrOutput struct{ *pulumi.OutputState }

func (VirtualNetworkPropertiesResponseHciPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNetworkPropertiesResponseHci)(nil)).Elem()
}

func (o VirtualNetworkPropertiesResponseHciPtrOutput) ToVirtualNetworkPropertiesResponseHciPtrOutput() VirtualNetworkPropertiesResponseHciPtrOutput {
	return o
}

func (o VirtualNetworkPropertiesResponseHciPtrOutput) ToVirtualNetworkPropertiesResponseHciPtrOutputWithContext(ctx context.Context) VirtualNetworkPropertiesResponseHciPtrOutput {
	return o
}

func (o VirtualNetworkPropertiesResponseHciPtrOutput) Elem() VirtualNetworkPropertiesResponseHciOutput {
	return o.ApplyT(func(v *VirtualNetworkPropertiesResponseHci) VirtualNetworkPropertiesResponseHci {
		if v != nil {
			return *v
		}
		var ret VirtualNetworkPropertiesResponseHci
		return ret
	}).(VirtualNetworkPropertiesResponseHciOutput)
}

// Resource group in MOC(Microsoft On-premises Cloud)
func (o VirtualNetworkPropertiesResponseHciPtrOutput) MocGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkPropertiesResponseHci) *string {
		if v == nil {
			return nil
		}
		return v.MocGroup
	}).(pulumi.StringPtrOutput)
}

// Location in MOC(Microsoft On-premises Cloud)
func (o VirtualNetworkPropertiesResponseHciPtrOutput) MocLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkPropertiesResponseHci) *string {
		if v == nil {
			return nil
		}
		return v.MocLocation
	}).(pulumi.StringPtrOutput)
}

// Virtual Network name in MOC(Microsoft On-premises Cloud)
func (o VirtualNetworkPropertiesResponseHciPtrOutput) MocVnetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkPropertiesResponseHci) *string {
		if v == nil {
			return nil
		}
		return v.MocVnetName
	}).(pulumi.StringPtrOutput)
}

type VirtualNetworkPropertiesResponseInfraVnetProfile struct {
	// Infra network profile for HCI platform
	Hci *VirtualNetworkPropertiesResponseHci `pulumi:"hci"`
	// Infra network profile for VMware platform
	Vmware *VirtualNetworkPropertiesResponseVmware `pulumi:"vmware"`
}

type VirtualNetworkPropertiesResponseInfraVnetProfileOutput struct{ *pulumi.OutputState }

func (VirtualNetworkPropertiesResponseInfraVnetProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkPropertiesResponseInfraVnetProfile)(nil)).Elem()
}

func (o VirtualNetworkPropertiesResponseInfraVnetProfileOutput) ToVirtualNetworkPropertiesResponseInfraVnetProfileOutput() VirtualNetworkPropertiesResponseInfraVnetProfileOutput {
	return o
}

func (o VirtualNetworkPropertiesResponseInfraVnetProfileOutput) ToVirtualNetworkPropertiesResponseInfraVnetProfileOutputWithContext(ctx context.Context) VirtualNetworkPropertiesResponseInfraVnetProfileOutput {
	return o
}

// Infra network profile for HCI platform
func (o VirtualNetworkPropertiesResponseInfraVnetProfileOutput) Hci() VirtualNetworkPropertiesResponseHciPtrOutput {
	return o.ApplyT(func(v VirtualNetworkPropertiesResponseInfraVnetProfile) *VirtualNetworkPropertiesResponseHci {
		return v.Hci
	}).(VirtualNetworkPropertiesResponseHciPtrOutput)
}

// Infra network profile for VMware platform
func (o VirtualNetworkPropertiesResponseInfraVnetProfileOutput) Vmware() VirtualNetworkPropertiesResponseVmwarePtrOutput {
	return o.ApplyT(func(v VirtualNetworkPropertiesResponseInfraVnetProfile) *VirtualNetworkPropertiesResponseVmware {
		return v.Vmware
	}).(VirtualNetworkPropertiesResponseVmwarePtrOutput)
}

type VirtualNetworkPropertiesResponseInfraVnetProfilePtrOutput struct{ *pulumi.OutputState }

func (VirtualNetworkPropertiesResponseInfraVnetProfilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNetworkPropertiesResponseInfraVnetProfile)(nil)).Elem()
}

func (o VirtualNetworkPropertiesResponseInfraVnetProfilePtrOutput) ToVirtualNetworkPropertiesResponseInfraVnetProfilePtrOutput() VirtualNetworkPropertiesResponseInfraVnetProfilePtrOutput {
	return o
}

func (o VirtualNetworkPropertiesResponseInfraVnetProfilePtrOutput) ToVirtualNetworkPropertiesResponseInfraVnetProfilePtrOutputWithContext(ctx context.Context) VirtualNetworkPropertiesResponseInfraVnetProfilePtrOutput {
	return o
}

func (o VirtualNetworkPropertiesResponseInfraVnetProfilePtrOutput) Elem() VirtualNetworkPropertiesResponseInfraVnetProfileOutput {
	return o.ApplyT(func(v *VirtualNetworkPropertiesResponseInfraVnetProfile) VirtualNetworkPropertiesResponseInfraVnetProfile {
		if v != nil {
			return *v
		}
		var ret VirtualNetworkPropertiesResponseInfraVnetProfile
		return ret
	}).(VirtualNetworkPropertiesResponseInfraVnetProfileOutput)
}

// Infra network profile for HCI platform
func (o VirtualNetworkPropertiesResponseInfraVnetProfilePtrOutput) Hci() VirtualNetworkPropertiesResponseHciPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkPropertiesResponseInfraVnetProfile) *VirtualNetworkPropertiesResponseHci {
		if v == nil {
			return nil
		}
		return v.Hci
	}).(VirtualNetworkPropertiesResponseHciPtrOutput)
}

// Infra network profile for VMware platform
func (o VirtualNetworkPropertiesResponseInfraVnetProfilePtrOutput) Vmware() VirtualNetworkPropertiesResponseVmwarePtrOutput {
	return o.ApplyT(func(v *VirtualNetworkPropertiesResponseInfraVnetProfile) *VirtualNetworkPropertiesResponseVmware {
		if v == nil {
			return nil
		}
		return v.Vmware
	}).(VirtualNetworkPropertiesResponseVmwarePtrOutput)
}

// Contains Provisioning errors
type VirtualNetworkPropertiesResponseOperationStatus struct {
	Error       *VirtualNetworkPropertiesResponseError `pulumi:"error"`
	OperationId *string                                `pulumi:"operationId"`
	// Phase represents the current phase of the virtual network provisioning. E.g. Pending, Running, Terminating, Failed etc.
	Phase  *string `pulumi:"phase"`
	Status *string `pulumi:"status"`
}

// Contains Provisioning errors
type VirtualNetworkPropertiesResponseOperationStatusOutput struct{ *pulumi.OutputState }

func (VirtualNetworkPropertiesResponseOperationStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkPropertiesResponseOperationStatus)(nil)).Elem()
}

func (o VirtualNetworkPropertiesResponseOperationStatusOutput) ToVirtualNetworkPropertiesResponseOperationStatusOutput() VirtualNetworkPropertiesResponseOperationStatusOutput {
	return o
}

func (o VirtualNetworkPropertiesResponseOperationStatusOutput) ToVirtualNetworkPropertiesResponseOperationStatusOutputWithContext(ctx context.Context) VirtualNetworkPropertiesResponseOperationStatusOutput {
	return o
}

func (o VirtualNetworkPropertiesResponseOperationStatusOutput) Error() VirtualNetworkPropertiesResponseErrorPtrOutput {
	return o.ApplyT(func(v VirtualNetworkPropertiesResponseOperationStatus) *VirtualNetworkPropertiesResponseError {
		return v.Error
	}).(VirtualNetworkPropertiesResponseErrorPtrOutput)
}

func (o VirtualNetworkPropertiesResponseOperationStatusOutput) OperationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkPropertiesResponseOperationStatus) *string { return v.OperationId }).(pulumi.StringPtrOutput)
}

// Phase represents the current phase of the virtual network provisioning. E.g. Pending, Running, Terminating, Failed etc.
func (o VirtualNetworkPropertiesResponseOperationStatusOutput) Phase() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkPropertiesResponseOperationStatus) *string { return v.Phase }).(pulumi.StringPtrOutput)
}

func (o VirtualNetworkPropertiesResponseOperationStatusOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkPropertiesResponseOperationStatus) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type VirtualNetworkPropertiesResponseOperationStatusPtrOutput struct{ *pulumi.OutputState }

func (VirtualNetworkPropertiesResponseOperationStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNetworkPropertiesResponseOperationStatus)(nil)).Elem()
}

func (o VirtualNetworkPropertiesResponseOperationStatusPtrOutput) ToVirtualNetworkPropertiesResponseOperationStatusPtrOutput() VirtualNetworkPropertiesResponseOperationStatusPtrOutput {
	return o
}

func (o VirtualNetworkPropertiesResponseOperationStatusPtrOutput) ToVirtualNetworkPropertiesResponseOperationStatusPtrOutputWithContext(ctx context.Context) VirtualNetworkPropertiesResponseOperationStatusPtrOutput {
	return o
}

func (o VirtualNetworkPropertiesResponseOperationStatusPtrOutput) Elem() VirtualNetworkPropertiesResponseOperationStatusOutput {
	return o.ApplyT(func(v *VirtualNetworkPropertiesResponseOperationStatus) VirtualNetworkPropertiesResponseOperationStatus {
		if v != nil {
			return *v
		}
		var ret VirtualNetworkPropertiesResponseOperationStatus
		return ret
	}).(VirtualNetworkPropertiesResponseOperationStatusOutput)
}

func (o VirtualNetworkPropertiesResponseOperationStatusPtrOutput) Error() VirtualNetworkPropertiesResponseErrorPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkPropertiesResponseOperationStatus) *VirtualNetworkPropertiesResponseError {
		if v == nil {
			return nil
		}
		return v.Error
	}).(VirtualNetworkPropertiesResponseErrorPtrOutput)
}

func (o VirtualNetworkPropertiesResponseOperationStatusPtrOutput) OperationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkPropertiesResponseOperationStatus) *string {
		if v == nil {
			return nil
		}
		return v.OperationId
	}).(pulumi.StringPtrOutput)
}

// Phase represents the current phase of the virtual network provisioning. E.g. Pending, Running, Terminating, Failed etc.
func (o VirtualNetworkPropertiesResponseOperationStatusPtrOutput) Phase() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkPropertiesResponseOperationStatus) *string {
		if v == nil {
			return nil
		}
		return v.Phase
	}).(pulumi.StringPtrOutput)
}

func (o VirtualNetworkPropertiesResponseOperationStatusPtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkPropertiesResponseOperationStatus) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

// HybridAKSNetworkStatus defines the observed state of HybridAKSNetwork
type VirtualNetworkPropertiesResponseStatus struct {
	// Contains Provisioning errors
	OperationStatus *VirtualNetworkPropertiesResponseOperationStatus `pulumi:"operationStatus"`
}

// HybridAKSNetworkStatus defines the observed state of HybridAKSNetwork
type VirtualNetworkPropertiesResponseStatusOutput struct{ *pulumi.OutputState }

func (VirtualNetworkPropertiesResponseStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkPropertiesResponseStatus)(nil)).Elem()
}

func (o VirtualNetworkPropertiesResponseStatusOutput) ToVirtualNetworkPropertiesResponseStatusOutput() VirtualNetworkPropertiesResponseStatusOutput {
	return o
}

func (o VirtualNetworkPropertiesResponseStatusOutput) ToVirtualNetworkPropertiesResponseStatusOutputWithContext(ctx context.Context) VirtualNetworkPropertiesResponseStatusOutput {
	return o
}

// Contains Provisioning errors
func (o VirtualNetworkPropertiesResponseStatusOutput) OperationStatus() VirtualNetworkPropertiesResponseOperationStatusPtrOutput {
	return o.ApplyT(func(v VirtualNetworkPropertiesResponseStatus) *VirtualNetworkPropertiesResponseOperationStatus {
		return v.OperationStatus
	}).(VirtualNetworkPropertiesResponseOperationStatusPtrOutput)
}

type VirtualNetworkPropertiesResponseVipPool struct {
	// Ending IP address for the IP Pool
	EndIP *string `pulumi:"endIP"`
	// Starting IP address for the IP Pool
	StartIP *string `pulumi:"startIP"`
}

type VirtualNetworkPropertiesResponseVipPoolOutput struct{ *pulumi.OutputState }

func (VirtualNetworkPropertiesResponseVipPoolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkPropertiesResponseVipPool)(nil)).Elem()
}

func (o VirtualNetworkPropertiesResponseVipPoolOutput) ToVirtualNetworkPropertiesResponseVipPoolOutput() VirtualNetworkPropertiesResponseVipPoolOutput {
	return o
}

func (o VirtualNetworkPropertiesResponseVipPoolOutput) ToVirtualNetworkPropertiesResponseVipPoolOutputWithContext(ctx context.Context) VirtualNetworkPropertiesResponseVipPoolOutput {
	return o
}

// Ending IP address for the IP Pool
func (o VirtualNetworkPropertiesResponseVipPoolOutput) EndIP() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkPropertiesResponseVipPool) *string { return v.EndIP }).(pulumi.StringPtrOutput)
}

// Starting IP address for the IP Pool
func (o VirtualNetworkPropertiesResponseVipPoolOutput) StartIP() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkPropertiesResponseVipPool) *string { return v.StartIP }).(pulumi.StringPtrOutput)
}

type VirtualNetworkPropertiesResponseVipPoolArrayOutput struct{ *pulumi.OutputState }

func (VirtualNetworkPropertiesResponseVipPoolArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualNetworkPropertiesResponseVipPool)(nil)).Elem()
}

func (o VirtualNetworkPropertiesResponseVipPoolArrayOutput) ToVirtualNetworkPropertiesResponseVipPoolArrayOutput() VirtualNetworkPropertiesResponseVipPoolArrayOutput {
	return o
}

func (o VirtualNetworkPropertiesResponseVipPoolArrayOutput) ToVirtualNetworkPropertiesResponseVipPoolArrayOutputWithContext(ctx context.Context) VirtualNetworkPropertiesResponseVipPoolArrayOutput {
	return o
}

func (o VirtualNetworkPropertiesResponseVipPoolArrayOutput) Index(i pulumi.IntInput) VirtualNetworkPropertiesResponseVipPoolOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualNetworkPropertiesResponseVipPool {
		return vs[0].([]VirtualNetworkPropertiesResponseVipPool)[vs[1].(int)]
	}).(VirtualNetworkPropertiesResponseVipPoolOutput)
}

type VirtualNetworkPropertiesResponseVmipPool struct {
	// Ending IP address for the IP Pool
	EndIP *string `pulumi:"endIP"`
	// Starting IP address for the IP Pool
	StartIP *string `pulumi:"startIP"`
}

type VirtualNetworkPropertiesResponseVmipPoolOutput struct{ *pulumi.OutputState }

func (VirtualNetworkPropertiesResponseVmipPoolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkPropertiesResponseVmipPool)(nil)).Elem()
}

func (o VirtualNetworkPropertiesResponseVmipPoolOutput) ToVirtualNetworkPropertiesResponseVmipPoolOutput() VirtualNetworkPropertiesResponseVmipPoolOutput {
	return o
}

func (o VirtualNetworkPropertiesResponseVmipPoolOutput) ToVirtualNetworkPropertiesResponseVmipPoolOutputWithContext(ctx context.Context) VirtualNetworkPropertiesResponseVmipPoolOutput {
	return o
}

// Ending IP address for the IP Pool
func (o VirtualNetworkPropertiesResponseVmipPoolOutput) EndIP() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkPropertiesResponseVmipPool) *string { return v.EndIP }).(pulumi.StringPtrOutput)
}

// Starting IP address for the IP Pool
func (o VirtualNetworkPropertiesResponseVmipPoolOutput) StartIP() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkPropertiesResponseVmipPool) *string { return v.StartIP }).(pulumi.StringPtrOutput)
}

type VirtualNetworkPropertiesResponseVmipPoolArrayOutput struct{ *pulumi.OutputState }

func (VirtualNetworkPropertiesResponseVmipPoolArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualNetworkPropertiesResponseVmipPool)(nil)).Elem()
}

func (o VirtualNetworkPropertiesResponseVmipPoolArrayOutput) ToVirtualNetworkPropertiesResponseVmipPoolArrayOutput() VirtualNetworkPropertiesResponseVmipPoolArrayOutput {
	return o
}

func (o VirtualNetworkPropertiesResponseVmipPoolArrayOutput) ToVirtualNetworkPropertiesResponseVmipPoolArrayOutputWithContext(ctx context.Context) VirtualNetworkPropertiesResponseVmipPoolArrayOutput {
	return o
}

func (o VirtualNetworkPropertiesResponseVmipPoolArrayOutput) Index(i pulumi.IntInput) VirtualNetworkPropertiesResponseVmipPoolOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualNetworkPropertiesResponseVmipPool {
		return vs[0].([]VirtualNetworkPropertiesResponseVmipPool)[vs[1].(int)]
	}).(VirtualNetworkPropertiesResponseVmipPoolOutput)
}

// Infra network profile for VMware platform
type VirtualNetworkPropertiesResponseVmware struct {
	// Name of the network segment in VSphere
	SegmentName *string `pulumi:"segmentName"`
}

// Infra network profile for VMware platform
type VirtualNetworkPropertiesResponseVmwareOutput struct{ *pulumi.OutputState }

func (VirtualNetworkPropertiesResponseVmwareOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkPropertiesResponseVmware)(nil)).Elem()
}

func (o VirtualNetworkPropertiesResponseVmwareOutput) ToVirtualNetworkPropertiesResponseVmwareOutput() VirtualNetworkPropertiesResponseVmwareOutput {
	return o
}

func (o VirtualNetworkPropertiesResponseVmwareOutput) ToVirtualNetworkPropertiesResponseVmwareOutputWithContext(ctx context.Context) VirtualNetworkPropertiesResponseVmwareOutput {
	return o
}

// Name of the network segment in VSphere
func (o VirtualNetworkPropertiesResponseVmwareOutput) SegmentName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkPropertiesResponseVmware) *string { return v.SegmentName }).(pulumi.StringPtrOutput)
}

type VirtualNetworkPropertiesResponseVmwarePtrOutput struct{ *pulumi.OutputState }

func (VirtualNetworkPropertiesResponseVmwarePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNetworkPropertiesResponseVmware)(nil)).Elem()
}

func (o VirtualNetworkPropertiesResponseVmwarePtrOutput) ToVirtualNetworkPropertiesResponseVmwarePtrOutput() VirtualNetworkPropertiesResponseVmwarePtrOutput {
	return o
}

func (o VirtualNetworkPropertiesResponseVmwarePtrOutput) ToVirtualNetworkPropertiesResponseVmwarePtrOutputWithContext(ctx context.Context) VirtualNetworkPropertiesResponseVmwarePtrOutput {
	return o
}

func (o VirtualNetworkPropertiesResponseVmwarePtrOutput) Elem() VirtualNetworkPropertiesResponseVmwareOutput {
	return o.ApplyT(func(v *VirtualNetworkPropertiesResponseVmware) VirtualNetworkPropertiesResponseVmware {
		if v != nil {
			return *v
		}
		var ret VirtualNetworkPropertiesResponseVmware
		return ret
	}).(VirtualNetworkPropertiesResponseVmwareOutput)
}

// Name of the network segment in VSphere
func (o VirtualNetworkPropertiesResponseVmwarePtrOutput) SegmentName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkPropertiesResponseVmware) *string {
		if v == nil {
			return nil
		}
		return v.SegmentName
	}).(pulumi.StringPtrOutput)
}

type VirtualNetworkPropertiesVipPool struct {
	// Ending IP address for the IP Pool
	EndIP *string `pulumi:"endIP"`
	// Starting IP address for the IP Pool
	StartIP *string `pulumi:"startIP"`
}

// VirtualNetworkPropertiesVipPoolInput is an input type that accepts VirtualNetworkPropertiesVipPoolArgs and VirtualNetworkPropertiesVipPoolOutput values.
// You can construct a concrete instance of `VirtualNetworkPropertiesVipPoolInput` via:
//
//	VirtualNetworkPropertiesVipPoolArgs{...}
type VirtualNetworkPropertiesVipPoolInput interface {
	pulumi.Input

	ToVirtualNetworkPropertiesVipPoolOutput() VirtualNetworkPropertiesVipPoolOutput
	ToVirtualNetworkPropertiesVipPoolOutputWithContext(context.Context) VirtualNetworkPropertiesVipPoolOutput
}

type VirtualNetworkPropertiesVipPoolArgs struct {
	// Ending IP address for the IP Pool
	EndIP pulumi.StringPtrInput `pulumi:"endIP"`
	// Starting IP address for the IP Pool
	StartIP pulumi.StringPtrInput `pulumi:"startIP"`
}

func (VirtualNetworkPropertiesVipPoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkPropertiesVipPool)(nil)).Elem()
}

func (i VirtualNetworkPropertiesVipPoolArgs) ToVirtualNetworkPropertiesVipPoolOutput() VirtualNetworkPropertiesVipPoolOutput {
	return i.ToVirtualNetworkPropertiesVipPoolOutputWithContext(context.Background())
}

func (i VirtualNetworkPropertiesVipPoolArgs) ToVirtualNetworkPropertiesVipPoolOutputWithContext(ctx context.Context) VirtualNetworkPropertiesVipPoolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkPropertiesVipPoolOutput)
}

// VirtualNetworkPropertiesVipPoolArrayInput is an input type that accepts VirtualNetworkPropertiesVipPoolArray and VirtualNetworkPropertiesVipPoolArrayOutput values.
// You can construct a concrete instance of `VirtualNetworkPropertiesVipPoolArrayInput` via:
//
//	VirtualNetworkPropertiesVipPoolArray{ VirtualNetworkPropertiesVipPoolArgs{...} }
type VirtualNetworkPropertiesVipPoolArrayInput interface {
	pulumi.Input

	ToVirtualNetworkPropertiesVipPoolArrayOutput() VirtualNetworkPropertiesVipPoolArrayOutput
	ToVirtualNetworkPropertiesVipPoolArrayOutputWithContext(context.Context) VirtualNetworkPropertiesVipPoolArrayOutput
}

type VirtualNetworkPropertiesVipPoolArray []VirtualNetworkPropertiesVipPoolInput

func (VirtualNetworkPropertiesVipPoolArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualNetworkPropertiesVipPool)(nil)).Elem()
}

func (i VirtualNetworkPropertiesVipPoolArray) ToVirtualNetworkPropertiesVipPoolArrayOutput() VirtualNetworkPropertiesVipPoolArrayOutput {
	return i.ToVirtualNetworkPropertiesVipPoolArrayOutputWithContext(context.Background())
}

func (i VirtualNetworkPropertiesVipPoolArray) ToVirtualNetworkPropertiesVipPoolArrayOutputWithContext(ctx context.Context) VirtualNetworkPropertiesVipPoolArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkPropertiesVipPoolArrayOutput)
}

type VirtualNetworkPropertiesVipPoolOutput struct{ *pulumi.OutputState }

func (VirtualNetworkPropertiesVipPoolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkPropertiesVipPool)(nil)).Elem()
}

func (o VirtualNetworkPropertiesVipPoolOutput) ToVirtualNetworkPropertiesVipPoolOutput() VirtualNetworkPropertiesVipPoolOutput {
	return o
}

func (o VirtualNetworkPropertiesVipPoolOutput) ToVirtualNetworkPropertiesVipPoolOutputWithContext(ctx context.Context) VirtualNetworkPropertiesVipPoolOutput {
	return o
}

// Ending IP address for the IP Pool
func (o VirtualNetworkPropertiesVipPoolOutput) EndIP() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkPropertiesVipPool) *string { return v.EndIP }).(pulumi.StringPtrOutput)
}

// Starting IP address for the IP Pool
func (o VirtualNetworkPropertiesVipPoolOutput) StartIP() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkPropertiesVipPool) *string { return v.StartIP }).(pulumi.StringPtrOutput)
}

type VirtualNetworkPropertiesVipPoolArrayOutput struct{ *pulumi.OutputState }

func (VirtualNetworkPropertiesVipPoolArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualNetworkPropertiesVipPool)(nil)).Elem()
}

func (o VirtualNetworkPropertiesVipPoolArrayOutput) ToVirtualNetworkPropertiesVipPoolArrayOutput() VirtualNetworkPropertiesVipPoolArrayOutput {
	return o
}

func (o VirtualNetworkPropertiesVipPoolArrayOutput) ToVirtualNetworkPropertiesVipPoolArrayOutputWithContext(ctx context.Context) VirtualNetworkPropertiesVipPoolArrayOutput {
	return o
}

func (o VirtualNetworkPropertiesVipPoolArrayOutput) Index(i pulumi.IntInput) VirtualNetworkPropertiesVipPoolOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualNetworkPropertiesVipPool {
		return vs[0].([]VirtualNetworkPropertiesVipPool)[vs[1].(int)]
	}).(VirtualNetworkPropertiesVipPoolOutput)
}

type VirtualNetworkPropertiesVmipPool struct {
	// Ending IP address for the IP Pool
	EndIP *string `pulumi:"endIP"`
	// Starting IP address for the IP Pool
	StartIP *string `pulumi:"startIP"`
}

// VirtualNetworkPropertiesVmipPoolInput is an input type that accepts VirtualNetworkPropertiesVmipPoolArgs and VirtualNetworkPropertiesVmipPoolOutput values.
// You can construct a concrete instance of `VirtualNetworkPropertiesVmipPoolInput` via:
//
//	VirtualNetworkPropertiesVmipPoolArgs{...}
type VirtualNetworkPropertiesVmipPoolInput interface {
	pulumi.Input

	ToVirtualNetworkPropertiesVmipPoolOutput() VirtualNetworkPropertiesVmipPoolOutput
	ToVirtualNetworkPropertiesVmipPoolOutputWithContext(context.Context) VirtualNetworkPropertiesVmipPoolOutput
}

type VirtualNetworkPropertiesVmipPoolArgs struct {
	// Ending IP address for the IP Pool
	EndIP pulumi.StringPtrInput `pulumi:"endIP"`
	// Starting IP address for the IP Pool
	StartIP pulumi.StringPtrInput `pulumi:"startIP"`
}

func (VirtualNetworkPropertiesVmipPoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkPropertiesVmipPool)(nil)).Elem()
}

func (i VirtualNetworkPropertiesVmipPoolArgs) ToVirtualNetworkPropertiesVmipPoolOutput() VirtualNetworkPropertiesVmipPoolOutput {
	return i.ToVirtualNetworkPropertiesVmipPoolOutputWithContext(context.Background())
}

func (i VirtualNetworkPropertiesVmipPoolArgs) ToVirtualNetworkPropertiesVmipPoolOutputWithContext(ctx context.Context) VirtualNetworkPropertiesVmipPoolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkPropertiesVmipPoolOutput)
}

// VirtualNetworkPropertiesVmipPoolArrayInput is an input type that accepts VirtualNetworkPropertiesVmipPoolArray and VirtualNetworkPropertiesVmipPoolArrayOutput values.
// You can construct a concrete instance of `VirtualNetworkPropertiesVmipPoolArrayInput` via:
//
//	VirtualNetworkPropertiesVmipPoolArray{ VirtualNetworkPropertiesVmipPoolArgs{...} }
type VirtualNetworkPropertiesVmipPoolArrayInput interface {
	pulumi.Input

	ToVirtualNetworkPropertiesVmipPoolArrayOutput() VirtualNetworkPropertiesVmipPoolArrayOutput
	ToVirtualNetworkPropertiesVmipPoolArrayOutputWithContext(context.Context) VirtualNetworkPropertiesVmipPoolArrayOutput
}

type VirtualNetworkPropertiesVmipPoolArray []VirtualNetworkPropertiesVmipPoolInput

func (VirtualNetworkPropertiesVmipPoolArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualNetworkPropertiesVmipPool)(nil)).Elem()
}

func (i VirtualNetworkPropertiesVmipPoolArray) ToVirtualNetworkPropertiesVmipPoolArrayOutput() VirtualNetworkPropertiesVmipPoolArrayOutput {
	return i.ToVirtualNetworkPropertiesVmipPoolArrayOutputWithContext(context.Background())
}

func (i VirtualNetworkPropertiesVmipPoolArray) ToVirtualNetworkPropertiesVmipPoolArrayOutputWithContext(ctx context.Context) VirtualNetworkPropertiesVmipPoolArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkPropertiesVmipPoolArrayOutput)
}

type VirtualNetworkPropertiesVmipPoolOutput struct{ *pulumi.OutputState }

func (VirtualNetworkPropertiesVmipPoolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkPropertiesVmipPool)(nil)).Elem()
}

func (o VirtualNetworkPropertiesVmipPoolOutput) ToVirtualNetworkPropertiesVmipPoolOutput() VirtualNetworkPropertiesVmipPoolOutput {
	return o
}

func (o VirtualNetworkPropertiesVmipPoolOutput) ToVirtualNetworkPropertiesVmipPoolOutputWithContext(ctx context.Context) VirtualNetworkPropertiesVmipPoolOutput {
	return o
}

// Ending IP address for the IP Pool
func (o VirtualNetworkPropertiesVmipPoolOutput) EndIP() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkPropertiesVmipPool) *string { return v.EndIP }).(pulumi.StringPtrOutput)
}

// Starting IP address for the IP Pool
func (o VirtualNetworkPropertiesVmipPoolOutput) StartIP() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkPropertiesVmipPool) *string { return v.StartIP }).(pulumi.StringPtrOutput)
}

type VirtualNetworkPropertiesVmipPoolArrayOutput struct{ *pulumi.OutputState }

func (VirtualNetworkPropertiesVmipPoolArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualNetworkPropertiesVmipPool)(nil)).Elem()
}

func (o VirtualNetworkPropertiesVmipPoolArrayOutput) ToVirtualNetworkPropertiesVmipPoolArrayOutput() VirtualNetworkPropertiesVmipPoolArrayOutput {
	return o
}

func (o VirtualNetworkPropertiesVmipPoolArrayOutput) ToVirtualNetworkPropertiesVmipPoolArrayOutputWithContext(ctx context.Context) VirtualNetworkPropertiesVmipPoolArrayOutput {
	return o
}

func (o VirtualNetworkPropertiesVmipPoolArrayOutput) Index(i pulumi.IntInput) VirtualNetworkPropertiesVmipPoolOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualNetworkPropertiesVmipPool {
		return vs[0].([]VirtualNetworkPropertiesVmipPool)[vs[1].(int)]
	}).(VirtualNetworkPropertiesVmipPoolOutput)
}

// Infra network profile for VMware platform
type VirtualNetworkPropertiesVmware struct {
	// Name of the network segment in VSphere
	SegmentName *string `pulumi:"segmentName"`
}

// VirtualNetworkPropertiesVmwareInput is an input type that accepts VirtualNetworkPropertiesVmwareArgs and VirtualNetworkPropertiesVmwareOutput values.
// You can construct a concrete instance of `VirtualNetworkPropertiesVmwareInput` via:
//
//	VirtualNetworkPropertiesVmwareArgs{...}
type VirtualNetworkPropertiesVmwareInput interface {
	pulumi.Input

	ToVirtualNetworkPropertiesVmwareOutput() VirtualNetworkPropertiesVmwareOutput
	ToVirtualNetworkPropertiesVmwareOutputWithContext(context.Context) VirtualNetworkPropertiesVmwareOutput
}

// Infra network profile for VMware platform
type VirtualNetworkPropertiesVmwareArgs struct {
	// Name of the network segment in VSphere
	SegmentName pulumi.StringPtrInput `pulumi:"segmentName"`
}

func (VirtualNetworkPropertiesVmwareArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkPropertiesVmware)(nil)).Elem()
}

func (i VirtualNetworkPropertiesVmwareArgs) ToVirtualNetworkPropertiesVmwareOutput() VirtualNetworkPropertiesVmwareOutput {
	return i.ToVirtualNetworkPropertiesVmwareOutputWithContext(context.Background())
}

func (i VirtualNetworkPropertiesVmwareArgs) ToVirtualNetworkPropertiesVmwareOutputWithContext(ctx context.Context) VirtualNetworkPropertiesVmwareOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkPropertiesVmwareOutput)
}

func (i VirtualNetworkPropertiesVmwareArgs) ToVirtualNetworkPropertiesVmwarePtrOutput() VirtualNetworkPropertiesVmwarePtrOutput {
	return i.ToVirtualNetworkPropertiesVmwarePtrOutputWithContext(context.Background())
}

func (i VirtualNetworkPropertiesVmwareArgs) ToVirtualNetworkPropertiesVmwarePtrOutputWithContext(ctx context.Context) VirtualNetworkPropertiesVmwarePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkPropertiesVmwareOutput).ToVirtualNetworkPropertiesVmwarePtrOutputWithContext(ctx)
}

// VirtualNetworkPropertiesVmwarePtrInput is an input type that accepts VirtualNetworkPropertiesVmwareArgs, VirtualNetworkPropertiesVmwarePtr and VirtualNetworkPropertiesVmwarePtrOutput values.
// You can construct a concrete instance of `VirtualNetworkPropertiesVmwarePtrInput` via:
//
//	        VirtualNetworkPropertiesVmwareArgs{...}
//
//	or:
//
//	        nil
type VirtualNetworkPropertiesVmwarePtrInput interface {
	pulumi.Input

	ToVirtualNetworkPropertiesVmwarePtrOutput() VirtualNetworkPropertiesVmwarePtrOutput
	ToVirtualNetworkPropertiesVmwarePtrOutputWithContext(context.Context) VirtualNetworkPropertiesVmwarePtrOutput
}

type virtualNetworkPropertiesVmwarePtrType VirtualNetworkPropertiesVmwareArgs

func VirtualNetworkPropertiesVmwarePtr(v *VirtualNetworkPropertiesVmwareArgs) VirtualNetworkPropertiesVmwarePtrInput {
	return (*virtualNetworkPropertiesVmwarePtrType)(v)
}

func (*virtualNetworkPropertiesVmwarePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNetworkPropertiesVmware)(nil)).Elem()
}

func (i *virtualNetworkPropertiesVmwarePtrType) ToVirtualNetworkPropertiesVmwarePtrOutput() VirtualNetworkPropertiesVmwarePtrOutput {
	return i.ToVirtualNetworkPropertiesVmwarePtrOutputWithContext(context.Background())
}

func (i *virtualNetworkPropertiesVmwarePtrType) ToVirtualNetworkPropertiesVmwarePtrOutputWithContext(ctx context.Context) VirtualNetworkPropertiesVmwarePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkPropertiesVmwarePtrOutput)
}

// Infra network profile for VMware platform
type VirtualNetworkPropertiesVmwareOutput struct{ *pulumi.OutputState }

func (VirtualNetworkPropertiesVmwareOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkPropertiesVmware)(nil)).Elem()
}

func (o VirtualNetworkPropertiesVmwareOutput) ToVirtualNetworkPropertiesVmwareOutput() VirtualNetworkPropertiesVmwareOutput {
	return o
}

func (o VirtualNetworkPropertiesVmwareOutput) ToVirtualNetworkPropertiesVmwareOutputWithContext(ctx context.Context) VirtualNetworkPropertiesVmwareOutput {
	return o
}

func (o VirtualNetworkPropertiesVmwareOutput) ToVirtualNetworkPropertiesVmwarePtrOutput() VirtualNetworkPropertiesVmwarePtrOutput {
	return o.ToVirtualNetworkPropertiesVmwarePtrOutputWithContext(context.Background())
}

func (o VirtualNetworkPropertiesVmwareOutput) ToVirtualNetworkPropertiesVmwarePtrOutputWithContext(ctx context.Context) VirtualNetworkPropertiesVmwarePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualNetworkPropertiesVmware) *VirtualNetworkPropertiesVmware {
		return &v
	}).(VirtualNetworkPropertiesVmwarePtrOutput)
}

// Name of the network segment in VSphere
func (o VirtualNetworkPropertiesVmwareOutput) SegmentName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkPropertiesVmware) *string { return v.SegmentName }).(pulumi.StringPtrOutput)
}

type VirtualNetworkPropertiesVmwarePtrOutput struct{ *pulumi.OutputState }

func (VirtualNetworkPropertiesVmwarePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNetworkPropertiesVmware)(nil)).Elem()
}

func (o VirtualNetworkPropertiesVmwarePtrOutput) ToVirtualNetworkPropertiesVmwarePtrOutput() VirtualNetworkPropertiesVmwarePtrOutput {
	return o
}

func (o VirtualNetworkPropertiesVmwarePtrOutput) ToVirtualNetworkPropertiesVmwarePtrOutputWithContext(ctx context.Context) VirtualNetworkPropertiesVmwarePtrOutput {
	return o
}

func (o VirtualNetworkPropertiesVmwarePtrOutput) Elem() VirtualNetworkPropertiesVmwareOutput {
	return o.ApplyT(func(v *VirtualNetworkPropertiesVmware) VirtualNetworkPropertiesVmware {
		if v != nil {
			return *v
		}
		var ret VirtualNetworkPropertiesVmware
		return ret
	}).(VirtualNetworkPropertiesVmwareOutput)
}

// Name of the network segment in VSphere
func (o VirtualNetworkPropertiesVmwarePtrOutput) SegmentName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkPropertiesVmware) *string {
		if v == nil {
			return nil
		}
		return v.SegmentName
	}).(pulumi.StringPtrOutput)
}

type VirtualNetworkResponseExtendedLocation struct {
	// The extended location name.
	Name *string `pulumi:"name"`
	// The extended location type.
	Type *string `pulumi:"type"`
}

type VirtualNetworkResponseExtendedLocationOutput struct{ *pulumi.OutputState }

func (VirtualNetworkResponseExtendedLocationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkResponseExtendedLocation)(nil)).Elem()
}

func (o VirtualNetworkResponseExtendedLocationOutput) ToVirtualNetworkResponseExtendedLocationOutput() VirtualNetworkResponseExtendedLocationOutput {
	return o
}

func (o VirtualNetworkResponseExtendedLocationOutput) ToVirtualNetworkResponseExtendedLocationOutputWithContext(ctx context.Context) VirtualNetworkResponseExtendedLocationOutput {
	return o
}

// The extended location name.
func (o VirtualNetworkResponseExtendedLocationOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkResponseExtendedLocation) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The extended location type.
func (o VirtualNetworkResponseExtendedLocationOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkResponseExtendedLocation) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type VirtualNetworkResponseExtendedLocationPtrOutput struct{ *pulumi.OutputState }

func (VirtualNetworkResponseExtendedLocationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNetworkResponseExtendedLocation)(nil)).Elem()
}

func (o VirtualNetworkResponseExtendedLocationPtrOutput) ToVirtualNetworkResponseExtendedLocationPtrOutput() VirtualNetworkResponseExtendedLocationPtrOutput {
	return o
}

func (o VirtualNetworkResponseExtendedLocationPtrOutput) ToVirtualNetworkResponseExtendedLocationPtrOutputWithContext(ctx context.Context) VirtualNetworkResponseExtendedLocationPtrOutput {
	return o
}

func (o VirtualNetworkResponseExtendedLocationPtrOutput) Elem() VirtualNetworkResponseExtendedLocationOutput {
	return o.ApplyT(func(v *VirtualNetworkResponseExtendedLocation) VirtualNetworkResponseExtendedLocation {
		if v != nil {
			return *v
		}
		var ret VirtualNetworkResponseExtendedLocation
		return ret
	}).(VirtualNetworkResponseExtendedLocationOutput)
}

// The extended location name.
func (o VirtualNetworkResponseExtendedLocationPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkResponseExtendedLocation) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// The extended location type.
func (o VirtualNetworkResponseExtendedLocationPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkResponseExtendedLocation) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// describes the vm sku capabilities object
type VmSkuCapabilitiesResponse struct {
	// An invariant to describe the feature
	Name string `pulumi:"name"`
	// An invariant if the feature is measured by quantity
	Value string `pulumi:"value"`
}

// describes the vm sku capabilities object
type VmSkuCapabilitiesResponseOutput struct{ *pulumi.OutputState }

func (VmSkuCapabilitiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VmSkuCapabilitiesResponse)(nil)).Elem()
}

func (o VmSkuCapabilitiesResponseOutput) ToVmSkuCapabilitiesResponseOutput() VmSkuCapabilitiesResponseOutput {
	return o
}

func (o VmSkuCapabilitiesResponseOutput) ToVmSkuCapabilitiesResponseOutputWithContext(ctx context.Context) VmSkuCapabilitiesResponseOutput {
	return o
}

// An invariant to describe the feature
func (o VmSkuCapabilitiesResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v VmSkuCapabilitiesResponse) string { return v.Name }).(pulumi.StringOutput)
}

// An invariant if the feature is measured by quantity
func (o VmSkuCapabilitiesResponseOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v VmSkuCapabilitiesResponse) string { return v.Value }).(pulumi.StringOutput)
}

type VmSkuCapabilitiesResponseArrayOutput struct{ *pulumi.OutputState }

func (VmSkuCapabilitiesResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VmSkuCapabilitiesResponse)(nil)).Elem()
}

func (o VmSkuCapabilitiesResponseArrayOutput) ToVmSkuCapabilitiesResponseArrayOutput() VmSkuCapabilitiesResponseArrayOutput {
	return o
}

func (o VmSkuCapabilitiesResponseArrayOutput) ToVmSkuCapabilitiesResponseArrayOutputWithContext(ctx context.Context) VmSkuCapabilitiesResponseArrayOutput {
	return o
}

func (o VmSkuCapabilitiesResponseArrayOutput) Index(i pulumi.IntInput) VmSkuCapabilitiesResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VmSkuCapabilitiesResponse {
		return vs[0].([]VmSkuCapabilitiesResponse)[vs[1].(int)]
	}).(VmSkuCapabilitiesResponseOutput)
}

type VmSkuProfileResponseProperties struct {
	// Provisioning state of the resource
	ProvisioningState string `pulumi:"provisioningState"`
	// Array of HybridAKS Support VM Skus
	Values []VmSkuPropertiesResponse `pulumi:"values"`
}

type VmSkuProfileResponsePropertiesOutput struct{ *pulumi.OutputState }

func (VmSkuProfileResponsePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VmSkuProfileResponseProperties)(nil)).Elem()
}

func (o VmSkuProfileResponsePropertiesOutput) ToVmSkuProfileResponsePropertiesOutput() VmSkuProfileResponsePropertiesOutput {
	return o
}

func (o VmSkuProfileResponsePropertiesOutput) ToVmSkuProfileResponsePropertiesOutputWithContext(ctx context.Context) VmSkuProfileResponsePropertiesOutput {
	return o
}

// Provisioning state of the resource
func (o VmSkuProfileResponsePropertiesOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v VmSkuProfileResponseProperties) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Array of HybridAKS Support VM Skus
func (o VmSkuProfileResponsePropertiesOutput) Values() VmSkuPropertiesResponseArrayOutput {
	return o.ApplyT(func(v VmSkuProfileResponseProperties) []VmSkuPropertiesResponse { return v.Values }).(VmSkuPropertiesResponseArrayOutput)
}

// The profile for supported VM skus
type VmSkuPropertiesResponse struct {
	// A name value pair to describe the specific vm's capability
	Capabilities []VmSkuCapabilitiesResponse `pulumi:"capabilities"`
	// The name of the VM Family
	Name string `pulumi:"name"`
	// The resource type of the vm
	ResourceType string `pulumi:"resourceType"`
	// The size of the VM Family
	Size string `pulumi:"size"`
	// The tier of the VM Family
	Tier string `pulumi:"tier"`
}

// The profile for supported VM skus
type VmSkuPropertiesResponseOutput struct{ *pulumi.OutputState }

func (VmSkuPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VmSkuPropertiesResponse)(nil)).Elem()
}

func (o VmSkuPropertiesResponseOutput) ToVmSkuPropertiesResponseOutput() VmSkuPropertiesResponseOutput {
	return o
}

func (o VmSkuPropertiesResponseOutput) ToVmSkuPropertiesResponseOutputWithContext(ctx context.Context) VmSkuPropertiesResponseOutput {
	return o
}

// A name value pair to describe the specific vm's capability
func (o VmSkuPropertiesResponseOutput) Capabilities() VmSkuCapabilitiesResponseArrayOutput {
	return o.ApplyT(func(v VmSkuPropertiesResponse) []VmSkuCapabilitiesResponse { return v.Capabilities }).(VmSkuCapabilitiesResponseArrayOutput)
}

// The name of the VM Family
func (o VmSkuPropertiesResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v VmSkuPropertiesResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The resource type of the vm
func (o VmSkuPropertiesResponseOutput) ResourceType() pulumi.StringOutput {
	return o.ApplyT(func(v VmSkuPropertiesResponse) string { return v.ResourceType }).(pulumi.StringOutput)
}

// The size of the VM Family
func (o VmSkuPropertiesResponseOutput) Size() pulumi.StringOutput {
	return o.ApplyT(func(v VmSkuPropertiesResponse) string { return v.Size }).(pulumi.StringOutput)
}

// The tier of the VM Family
func (o VmSkuPropertiesResponseOutput) Tier() pulumi.StringOutput {
	return o.ApplyT(func(v VmSkuPropertiesResponse) string { return v.Tier }).(pulumi.StringOutput)
}

type VmSkuPropertiesResponseArrayOutput struct{ *pulumi.OutputState }

func (VmSkuPropertiesResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VmSkuPropertiesResponse)(nil)).Elem()
}

func (o VmSkuPropertiesResponseArrayOutput) ToVmSkuPropertiesResponseArrayOutput() VmSkuPropertiesResponseArrayOutput {
	return o
}

func (o VmSkuPropertiesResponseArrayOutput) ToVmSkuPropertiesResponseArrayOutputWithContext(ctx context.Context) VmSkuPropertiesResponseArrayOutput {
	return o
}

func (o VmSkuPropertiesResponseArrayOutput) Index(i pulumi.IntInput) VmSkuPropertiesResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VmSkuPropertiesResponse {
		return vs[0].([]VmSkuPropertiesResponse)[vs[1].(int)]
	}).(VmSkuPropertiesResponseOutput)
}

func init() {
	pulumi.RegisterOutputType(AddonStatusProfileResponseOutput{})
	pulumi.RegisterOutputType(AddonStatusProfileResponseArrayOutput{})
	pulumi.RegisterOutputType(AgentPoolProvisioningStatusErrorOutput{})
	pulumi.RegisterOutputType(AgentPoolProvisioningStatusErrorPtrOutput{})
	pulumi.RegisterOutputType(AgentPoolProvisioningStatusOperationStatusOutput{})
	pulumi.RegisterOutputType(AgentPoolProvisioningStatusOperationStatusPtrOutput{})
	pulumi.RegisterOutputType(AgentPoolProvisioningStatusResponseErrorOutput{})
	pulumi.RegisterOutputType(AgentPoolProvisioningStatusResponseErrorPtrOutput{})
	pulumi.RegisterOutputType(AgentPoolProvisioningStatusResponseOperationStatusOutput{})
	pulumi.RegisterOutputType(AgentPoolProvisioningStatusResponseOperationStatusPtrOutput{})
	pulumi.RegisterOutputType(AgentPoolProvisioningStatusResponseStatusOutput{})
	pulumi.RegisterOutputType(AgentPoolProvisioningStatusResponseStatusPtrOutput{})
	pulumi.RegisterOutputType(AgentPoolProvisioningStatusStatusOutput{})
	pulumi.RegisterOutputType(AgentPoolProvisioningStatusStatusPtrOutput{})
	pulumi.RegisterOutputType(AgentPoolUpdateProfileOutput{})
	pulumi.RegisterOutputType(AgentPoolUpdateProfileArrayOutput{})
	pulumi.RegisterOutputType(AgentPoolUpdateProfileResponseOutput{})
	pulumi.RegisterOutputType(AgentPoolUpdateProfileResponseArrayOutput{})
	pulumi.RegisterOutputType(CloudProviderProfileOutput{})
	pulumi.RegisterOutputType(CloudProviderProfilePtrOutput{})
	pulumi.RegisterOutputType(CloudProviderProfileInfraNetworkProfileOutput{})
	pulumi.RegisterOutputType(CloudProviderProfileInfraNetworkProfilePtrOutput{})
	pulumi.RegisterOutputType(CloudProviderProfileResponseOutput{})
	pulumi.RegisterOutputType(CloudProviderProfileResponsePtrOutput{})
	pulumi.RegisterOutputType(CloudProviderProfileResponseInfraNetworkProfileOutput{})
	pulumi.RegisterOutputType(CloudProviderProfileResponseInfraNetworkProfilePtrOutput{})
	pulumi.RegisterOutputType(ControlPlaneEndpointProfileControlPlaneEndpointOutput{})
	pulumi.RegisterOutputType(ControlPlaneEndpointProfileControlPlaneEndpointPtrOutput{})
	pulumi.RegisterOutputType(ControlPlaneEndpointProfileResponseControlPlaneEndpointOutput{})
	pulumi.RegisterOutputType(ControlPlaneEndpointProfileResponseControlPlaneEndpointPtrOutput{})
	pulumi.RegisterOutputType(ControlPlaneProfileOutput{})
	pulumi.RegisterOutputType(ControlPlaneProfilePtrOutput{})
	pulumi.RegisterOutputType(ControlPlaneProfileResponseOutput{})
	pulumi.RegisterOutputType(ControlPlaneProfileResponsePtrOutput{})
	pulumi.RegisterOutputType(CredentialResultResponseOutput{})
	pulumi.RegisterOutputType(CredentialResultResponseArrayOutput{})
	pulumi.RegisterOutputType(ExtendedLocationOutput{})
	pulumi.RegisterOutputType(ExtendedLocationPtrOutput{})
	pulumi.RegisterOutputType(ExtendedLocationResponseOutput{})
	pulumi.RegisterOutputType(ExtendedLocationResponsePtrOutput{})
	pulumi.RegisterOutputType(KubernetesPatchVersionsResponseOutput{})
	pulumi.RegisterOutputType(KubernetesPatchVersionsResponseMapOutput{})
	pulumi.RegisterOutputType(KubernetesVersionCapabilitiesResponseOutput{})
	pulumi.RegisterOutputType(KubernetesVersionProfileResponsePropertiesOutput{})
	pulumi.RegisterOutputType(KubernetesVersionPropertiesResponseOutput{})
	pulumi.RegisterOutputType(KubernetesVersionPropertiesResponseArrayOutput{})
	pulumi.RegisterOutputType(KubernetesVersionReadinessResponseOutput{})
	pulumi.RegisterOutputType(KubernetesVersionReadinessResponseArrayOutput{})
	pulumi.RegisterOutputType(LinuxProfilePropertiesOutput{})
	pulumi.RegisterOutputType(LinuxProfilePropertiesPtrOutput{})
	pulumi.RegisterOutputType(LinuxProfilePropertiesPublicKeysOutput{})
	pulumi.RegisterOutputType(LinuxProfilePropertiesPublicKeysArrayOutput{})
	pulumi.RegisterOutputType(LinuxProfilePropertiesResponseOutput{})
	pulumi.RegisterOutputType(LinuxProfilePropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(LinuxProfilePropertiesResponsePublicKeysOutput{})
	pulumi.RegisterOutputType(LinuxProfilePropertiesResponsePublicKeysArrayOutput{})
	pulumi.RegisterOutputType(LinuxProfilePropertiesResponseSshOutput{})
	pulumi.RegisterOutputType(LinuxProfilePropertiesResponseSshPtrOutput{})
	pulumi.RegisterOutputType(LinuxProfilePropertiesSshOutput{})
	pulumi.RegisterOutputType(LinuxProfilePropertiesSshPtrOutput{})
	pulumi.RegisterOutputType(ListCredentialResponseResponseErrorOutput{})
	pulumi.RegisterOutputType(ListCredentialResponseResponseErrorPtrOutput{})
	pulumi.RegisterOutputType(ListCredentialResponseResponsePropertiesOutput{})
	pulumi.RegisterOutputType(NamedAgentPoolProfileOutput{})
	pulumi.RegisterOutputType(NamedAgentPoolProfileArrayOutput{})
	pulumi.RegisterOutputType(NamedAgentPoolProfileResponseOutput{})
	pulumi.RegisterOutputType(NamedAgentPoolProfileResponseArrayOutput{})
	pulumi.RegisterOutputType(NetworkProfileOutput{})
	pulumi.RegisterOutputType(NetworkProfilePtrOutput{})
	pulumi.RegisterOutputType(NetworkProfileLoadBalancerProfileOutput{})
	pulumi.RegisterOutputType(NetworkProfileLoadBalancerProfilePtrOutput{})
	pulumi.RegisterOutputType(NetworkProfileResponseOutput{})
	pulumi.RegisterOutputType(NetworkProfileResponsePtrOutput{})
	pulumi.RegisterOutputType(NetworkProfileResponseLoadBalancerProfileOutput{})
	pulumi.RegisterOutputType(NetworkProfileResponseLoadBalancerProfilePtrOutput{})
	pulumi.RegisterOutputType(ProvisionedClusterLicenseProfileOutput{})
	pulumi.RegisterOutputType(ProvisionedClusterLicenseProfilePtrOutput{})
	pulumi.RegisterOutputType(ProvisionedClusterLicenseProfileResponseOutput{})
	pulumi.RegisterOutputType(ProvisionedClusterLicenseProfileResponsePtrOutput{})
	pulumi.RegisterOutputType(ProvisionedClusterPropertiesOutput{})
	pulumi.RegisterOutputType(ProvisionedClusterPropertiesPtrOutput{})
	pulumi.RegisterOutputType(ProvisionedClusterPropertiesResponseOutput{})
	pulumi.RegisterOutputType(ProvisionedClusterPropertiesResponseErrorOutput{})
	pulumi.RegisterOutputType(ProvisionedClusterPropertiesResponseErrorPtrOutput{})
	pulumi.RegisterOutputType(ProvisionedClusterPropertiesResponseOperationStatusOutput{})
	pulumi.RegisterOutputType(ProvisionedClusterPropertiesResponseOperationStatusPtrOutput{})
	pulumi.RegisterOutputType(ProvisionedClusterPropertiesResponseStatusOutput{})
	pulumi.RegisterOutputType(SystemDataResponseOutput{})
	pulumi.RegisterOutputType(VirtualNetworkExtendedLocationOutput{})
	pulumi.RegisterOutputType(VirtualNetworkExtendedLocationPtrOutput{})
	pulumi.RegisterOutputType(VirtualNetworkPropertiesOutput{})
	pulumi.RegisterOutputType(VirtualNetworkPropertiesPtrOutput{})
	pulumi.RegisterOutputType(VirtualNetworkPropertiesHciOutput{})
	pulumi.RegisterOutputType(VirtualNetworkPropertiesHciPtrOutput{})
	pulumi.RegisterOutputType(VirtualNetworkPropertiesInfraVnetProfileOutput{})
	pulumi.RegisterOutputType(VirtualNetworkPropertiesInfraVnetProfilePtrOutput{})
	pulumi.RegisterOutputType(VirtualNetworkPropertiesResponseOutput{})
	pulumi.RegisterOutputType(VirtualNetworkPropertiesResponseErrorOutput{})
	pulumi.RegisterOutputType(VirtualNetworkPropertiesResponseErrorPtrOutput{})
	pulumi.RegisterOutputType(VirtualNetworkPropertiesResponseHciOutput{})
	pulumi.RegisterOutputType(VirtualNetworkPropertiesResponseHciPtrOutput{})
	pulumi.RegisterOutputType(VirtualNetworkPropertiesResponseInfraVnetProfileOutput{})
	pulumi.RegisterOutputType(VirtualNetworkPropertiesResponseInfraVnetProfilePtrOutput{})
	pulumi.RegisterOutputType(VirtualNetworkPropertiesResponseOperationStatusOutput{})
	pulumi.RegisterOutputType(VirtualNetworkPropertiesResponseOperationStatusPtrOutput{})
	pulumi.RegisterOutputType(VirtualNetworkPropertiesResponseStatusOutput{})
	pulumi.RegisterOutputType(VirtualNetworkPropertiesResponseVipPoolOutput{})
	pulumi.RegisterOutputType(VirtualNetworkPropertiesResponseVipPoolArrayOutput{})
	pulumi.RegisterOutputType(VirtualNetworkPropertiesResponseVmipPoolOutput{})
	pulumi.RegisterOutputType(VirtualNetworkPropertiesResponseVmipPoolArrayOutput{})
	pulumi.RegisterOutputType(VirtualNetworkPropertiesResponseVmwareOutput{})
	pulumi.RegisterOutputType(VirtualNetworkPropertiesResponseVmwarePtrOutput{})
	pulumi.RegisterOutputType(VirtualNetworkPropertiesVipPoolOutput{})
	pulumi.RegisterOutputType(VirtualNetworkPropertiesVipPoolArrayOutput{})
	pulumi.RegisterOutputType(VirtualNetworkPropertiesVmipPoolOutput{})
	pulumi.RegisterOutputType(VirtualNetworkPropertiesVmipPoolArrayOutput{})
	pulumi.RegisterOutputType(VirtualNetworkPropertiesVmwareOutput{})
	pulumi.RegisterOutputType(VirtualNetworkPropertiesVmwarePtrOutput{})
	pulumi.RegisterOutputType(VirtualNetworkResponseExtendedLocationOutput{})
	pulumi.RegisterOutputType(VirtualNetworkResponseExtendedLocationPtrOutput{})
	pulumi.RegisterOutputType(VmSkuCapabilitiesResponseOutput{})
	pulumi.RegisterOutputType(VmSkuCapabilitiesResponseArrayOutput{})
	pulumi.RegisterOutputType(VmSkuProfileResponsePropertiesOutput{})
	pulumi.RegisterOutputType(VmSkuPropertiesResponseOutput{})
	pulumi.RegisterOutputType(VmSkuPropertiesResponseArrayOutput{})
}
