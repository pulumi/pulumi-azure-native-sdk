// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package hybridcontainerservice

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Gets the Hybrid AKS storage space object
// Azure REST API version: 2022-09-01-preview.
func LookupStorageSpaceRetrieve(ctx *pulumi.Context, args *LookupStorageSpaceRetrieveArgs, opts ...pulumi.InvokeOption) (*LookupStorageSpaceRetrieveResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv LookupStorageSpaceRetrieveResult
	err := ctx.Invoke("azure-native:hybridcontainerservice:getStorageSpaceRetrieve", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupStorageSpaceRetrieveArgs struct {
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Parameter for the name of the storage object
	StorageSpacesName string `pulumi:"storageSpacesName"`
}

// The storageSpaces resource definition.
type LookupStorageSpaceRetrieveResult struct {
	ExtendedLocation *StorageSpacesResponseExtendedLocation `pulumi:"extendedLocation"`
	// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	Id string `pulumi:"id"`
	// The geo-location where the resource lives
	Location string `pulumi:"location"`
	// The name of the resource
	Name string `pulumi:"name"`
	// HybridAKSStorageSpec defines the desired state of HybridAKSStorage
	Properties StorageSpacesPropertiesResponse `pulumi:"properties"`
	// Metadata pertaining to creation and last modification of the resource.
	SystemData SystemDataResponse `pulumi:"systemData"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type string `pulumi:"type"`
}

func LookupStorageSpaceRetrieveOutput(ctx *pulumi.Context, args LookupStorageSpaceRetrieveOutputArgs, opts ...pulumi.InvokeOption) LookupStorageSpaceRetrieveResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupStorageSpaceRetrieveResult, error) {
			args := v.(LookupStorageSpaceRetrieveArgs)
			r, err := LookupStorageSpaceRetrieve(ctx, &args, opts...)
			var s LookupStorageSpaceRetrieveResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupStorageSpaceRetrieveResultOutput)
}

type LookupStorageSpaceRetrieveOutputArgs struct {
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
	// Parameter for the name of the storage object
	StorageSpacesName pulumi.StringInput `pulumi:"storageSpacesName"`
}

func (LookupStorageSpaceRetrieveOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupStorageSpaceRetrieveArgs)(nil)).Elem()
}

// The storageSpaces resource definition.
type LookupStorageSpaceRetrieveResultOutput struct{ *pulumi.OutputState }

func (LookupStorageSpaceRetrieveResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupStorageSpaceRetrieveResult)(nil)).Elem()
}

func (o LookupStorageSpaceRetrieveResultOutput) ToLookupStorageSpaceRetrieveResultOutput() LookupStorageSpaceRetrieveResultOutput {
	return o
}

func (o LookupStorageSpaceRetrieveResultOutput) ToLookupStorageSpaceRetrieveResultOutputWithContext(ctx context.Context) LookupStorageSpaceRetrieveResultOutput {
	return o
}

func (o LookupStorageSpaceRetrieveResultOutput) ExtendedLocation() StorageSpacesResponseExtendedLocationPtrOutput {
	return o.ApplyT(func(v LookupStorageSpaceRetrieveResult) *StorageSpacesResponseExtendedLocation {
		return v.ExtendedLocation
	}).(StorageSpacesResponseExtendedLocationPtrOutput)
}

// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
func (o LookupStorageSpaceRetrieveResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupStorageSpaceRetrieveResult) string { return v.Id }).(pulumi.StringOutput)
}

// The geo-location where the resource lives
func (o LookupStorageSpaceRetrieveResultOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v LookupStorageSpaceRetrieveResult) string { return v.Location }).(pulumi.StringOutput)
}

// The name of the resource
func (o LookupStorageSpaceRetrieveResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupStorageSpaceRetrieveResult) string { return v.Name }).(pulumi.StringOutput)
}

// HybridAKSStorageSpec defines the desired state of HybridAKSStorage
func (o LookupStorageSpaceRetrieveResultOutput) Properties() StorageSpacesPropertiesResponseOutput {
	return o.ApplyT(func(v LookupStorageSpaceRetrieveResult) StorageSpacesPropertiesResponse { return v.Properties }).(StorageSpacesPropertiesResponseOutput)
}

// Metadata pertaining to creation and last modification of the resource.
func (o LookupStorageSpaceRetrieveResultOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v LookupStorageSpaceRetrieveResult) SystemDataResponse { return v.SystemData }).(SystemDataResponseOutput)
}

// Resource tags.
func (o LookupStorageSpaceRetrieveResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupStorageSpaceRetrieveResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o LookupStorageSpaceRetrieveResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupStorageSpaceRetrieveResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupStorageSpaceRetrieveResultOutput{})
}
