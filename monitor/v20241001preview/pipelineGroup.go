// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20241001preview

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// A pipeline group definition.
type PipelineGroup struct {
	pulumi.CustomResourceState

	// The complex type of the extended location.
	ExtendedLocation AzureResourceManagerCommonTypesExtendedLocationResponsePtrOutput `pulumi:"extendedLocation"`
	// The geo-location where the resource lives
	Location pulumi.StringOutput `pulumi:"location"`
	// The name of the resource
	Name pulumi.StringOutput `pulumi:"name"`
	// The resource-specific properties for this resource.
	Properties PipelineGroupPropertiesResponseOutput `pulumi:"properties"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponseOutput `pulumi:"systemData"`
	// Resource tags.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewPipelineGroup registers a new resource with the given unique name, arguments, and options.
func NewPipelineGroup(ctx *pulumi.Context,
	name string, args *PipelineGroupArgs, opts ...pulumi.ResourceOption) (*PipelineGroup, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:monitor/v20231001preview:PipelineGroup"),
		},
		{
			Type: pulumi.String("azure-native:monitor:PipelineGroup"),
		},
	})
	opts = append(opts, aliases)
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource PipelineGroup
	err := ctx.RegisterResource("azure-native:monitor/v20241001preview:PipelineGroup", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPipelineGroup gets an existing PipelineGroup resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPipelineGroup(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PipelineGroupState, opts ...pulumi.ResourceOption) (*PipelineGroup, error) {
	var resource PipelineGroup
	err := ctx.ReadResource("azure-native:monitor/v20241001preview:PipelineGroup", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering PipelineGroup resources.
type pipelineGroupState struct {
}

type PipelineGroupState struct {
}

func (PipelineGroupState) ElementType() reflect.Type {
	return reflect.TypeOf((*pipelineGroupState)(nil)).Elem()
}

type pipelineGroupArgs struct {
	// The complex type of the extended location.
	ExtendedLocation *AzureResourceManagerCommonTypesExtendedLocation `pulumi:"extendedLocation"`
	// The geo-location where the resource lives
	Location *string `pulumi:"location"`
	// The name of pipeline group. The name is case insensitive.
	PipelineGroupName *string `pulumi:"pipelineGroupName"`
	// The resource-specific properties for this resource.
	Properties *PipelineGroupProperties `pulumi:"properties"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a PipelineGroup resource.
type PipelineGroupArgs struct {
	// The complex type of the extended location.
	ExtendedLocation AzureResourceManagerCommonTypesExtendedLocationPtrInput
	// The geo-location where the resource lives
	Location pulumi.StringPtrInput
	// The name of pipeline group. The name is case insensitive.
	PipelineGroupName pulumi.StringPtrInput
	// The resource-specific properties for this resource.
	Properties PipelineGroupPropertiesPtrInput
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput
	// Resource tags.
	Tags pulumi.StringMapInput
}

func (PipelineGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*pipelineGroupArgs)(nil)).Elem()
}

type PipelineGroupInput interface {
	pulumi.Input

	ToPipelineGroupOutput() PipelineGroupOutput
	ToPipelineGroupOutputWithContext(ctx context.Context) PipelineGroupOutput
}

func (*PipelineGroup) ElementType() reflect.Type {
	return reflect.TypeOf((**PipelineGroup)(nil)).Elem()
}

func (i *PipelineGroup) ToPipelineGroupOutput() PipelineGroupOutput {
	return i.ToPipelineGroupOutputWithContext(context.Background())
}

func (i *PipelineGroup) ToPipelineGroupOutputWithContext(ctx context.Context) PipelineGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineGroupOutput)
}

type PipelineGroupOutput struct{ *pulumi.OutputState }

func (PipelineGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PipelineGroup)(nil)).Elem()
}

func (o PipelineGroupOutput) ToPipelineGroupOutput() PipelineGroupOutput {
	return o
}

func (o PipelineGroupOutput) ToPipelineGroupOutputWithContext(ctx context.Context) PipelineGroupOutput {
	return o
}

// The complex type of the extended location.
func (o PipelineGroupOutput) ExtendedLocation() AzureResourceManagerCommonTypesExtendedLocationResponsePtrOutput {
	return o.ApplyT(func(v *PipelineGroup) AzureResourceManagerCommonTypesExtendedLocationResponsePtrOutput {
		return v.ExtendedLocation
	}).(AzureResourceManagerCommonTypesExtendedLocationResponsePtrOutput)
}

// The geo-location where the resource lives
func (o PipelineGroupOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *PipelineGroup) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// The name of the resource
func (o PipelineGroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *PipelineGroup) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The resource-specific properties for this resource.
func (o PipelineGroupOutput) Properties() PipelineGroupPropertiesResponseOutput {
	return o.ApplyT(func(v *PipelineGroup) PipelineGroupPropertiesResponseOutput { return v.Properties }).(PipelineGroupPropertiesResponseOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o PipelineGroupOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v *PipelineGroup) SystemDataResponseOutput { return v.SystemData }).(SystemDataResponseOutput)
}

// Resource tags.
func (o PipelineGroupOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *PipelineGroup) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o PipelineGroupOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *PipelineGroup) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(PipelineGroupOutput{})
}
