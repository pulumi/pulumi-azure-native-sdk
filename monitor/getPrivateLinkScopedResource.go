// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package monitor

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v3/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Gets a scoped resource in a private link scope.
//
// Uses Azure REST API version 2023-06-01-preview.
//
// Other available API versions: 2021-07-01-preview. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native monitor [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
func LookupPrivateLinkScopedResource(ctx *pulumi.Context, args *LookupPrivateLinkScopedResourceArgs, opts ...pulumi.InvokeOption) (*LookupPrivateLinkScopedResourceResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv LookupPrivateLinkScopedResourceResult
	err := ctx.Invoke("azure-native:monitor:getPrivateLinkScopedResource", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupPrivateLinkScopedResourceArgs struct {
	// The name of the scoped resource object.
	Name string `pulumi:"name"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The name of the Azure Monitor PrivateLinkScope resource.
	ScopeName string `pulumi:"scopeName"`
}

// A private link scoped resource
type LookupPrivateLinkScopedResourceResult struct {
	// The Azure API version of the resource.
	AzureApiVersion string `pulumi:"azureApiVersion"`
	// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	Id string `pulumi:"id"`
	// The kind of scoped Azure monitor resource.
	Kind *string `pulumi:"kind"`
	// The resource id of the scoped Azure monitor resource.
	LinkedResourceId *string `pulumi:"linkedResourceId"`
	// The name of the resource
	Name string `pulumi:"name"`
	// State of the Azure monitor resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// The location of a scoped subscription. Only needs to be specified for metric dataplane subscriptions.
	SubscriptionLocation *string `pulumi:"subscriptionLocation"`
	// System data
	SystemData SystemDataResponse `pulumi:"systemData"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type string `pulumi:"type"`
}

func LookupPrivateLinkScopedResourceOutput(ctx *pulumi.Context, args LookupPrivateLinkScopedResourceOutputArgs, opts ...pulumi.InvokeOption) LookupPrivateLinkScopedResourceResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupPrivateLinkScopedResourceResultOutput, error) {
			args := v.(LookupPrivateLinkScopedResourceArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: utilities.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("azure-native:monitor:getPrivateLinkScopedResource", args, LookupPrivateLinkScopedResourceResultOutput{}, options).(LookupPrivateLinkScopedResourceResultOutput), nil
		}).(LookupPrivateLinkScopedResourceResultOutput)
}

type LookupPrivateLinkScopedResourceOutputArgs struct {
	// The name of the scoped resource object.
	Name pulumi.StringInput `pulumi:"name"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
	// The name of the Azure Monitor PrivateLinkScope resource.
	ScopeName pulumi.StringInput `pulumi:"scopeName"`
}

func (LookupPrivateLinkScopedResourceOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupPrivateLinkScopedResourceArgs)(nil)).Elem()
}

// A private link scoped resource
type LookupPrivateLinkScopedResourceResultOutput struct{ *pulumi.OutputState }

func (LookupPrivateLinkScopedResourceResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupPrivateLinkScopedResourceResult)(nil)).Elem()
}

func (o LookupPrivateLinkScopedResourceResultOutput) ToLookupPrivateLinkScopedResourceResultOutput() LookupPrivateLinkScopedResourceResultOutput {
	return o
}

func (o LookupPrivateLinkScopedResourceResultOutput) ToLookupPrivateLinkScopedResourceResultOutputWithContext(ctx context.Context) LookupPrivateLinkScopedResourceResultOutput {
	return o
}

// The Azure API version of the resource.
func (o LookupPrivateLinkScopedResourceResultOutput) AzureApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPrivateLinkScopedResourceResult) string { return v.AzureApiVersion }).(pulumi.StringOutput)
}

// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
func (o LookupPrivateLinkScopedResourceResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPrivateLinkScopedResourceResult) string { return v.Id }).(pulumi.StringOutput)
}

// The kind of scoped Azure monitor resource.
func (o LookupPrivateLinkScopedResourceResultOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupPrivateLinkScopedResourceResult) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// The resource id of the scoped Azure monitor resource.
func (o LookupPrivateLinkScopedResourceResultOutput) LinkedResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupPrivateLinkScopedResourceResult) *string { return v.LinkedResourceId }).(pulumi.StringPtrOutput)
}

// The name of the resource
func (o LookupPrivateLinkScopedResourceResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPrivateLinkScopedResourceResult) string { return v.Name }).(pulumi.StringOutput)
}

// State of the Azure monitor resource.
func (o LookupPrivateLinkScopedResourceResultOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPrivateLinkScopedResourceResult) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The location of a scoped subscription. Only needs to be specified for metric dataplane subscriptions.
func (o LookupPrivateLinkScopedResourceResultOutput) SubscriptionLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupPrivateLinkScopedResourceResult) *string { return v.SubscriptionLocation }).(pulumi.StringPtrOutput)
}

// System data
func (o LookupPrivateLinkScopedResourceResultOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v LookupPrivateLinkScopedResourceResult) SystemDataResponse { return v.SystemData }).(SystemDataResponseOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o LookupPrivateLinkScopedResourceResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPrivateLinkScopedResourceResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupPrivateLinkScopedResourceResultOutput{})
}
