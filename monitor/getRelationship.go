// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package monitor

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v3/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Get a Relationship
//
// Uses Azure REST API version 2025-05-03-preview.
func LookupRelationship(ctx *pulumi.Context, args *LookupRelationshipArgs, opts ...pulumi.InvokeOption) (*LookupRelationshipResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv LookupRelationshipResult
	err := ctx.Invoke("azure-native:monitor:getRelationship", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupRelationshipArgs struct {
	// The name of the Azure Monitor Workspace. The name is case insensitive
	AzureMonitorWorkspaceName string `pulumi:"azureMonitorWorkspaceName"`
	// Name of health model resource
	HealthModelName string `pulumi:"healthModelName"`
	// Name of the relationship. Must be unique within a health model. For example, a concatenation of parentEntityName and childEntityName can be used as the name.
	RelationshipName string `pulumi:"relationshipName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// A relationship (aka edge) between two entities in a health model
type LookupRelationshipResult struct {
	// The Azure API version of the resource.
	AzureApiVersion string `pulumi:"azureApiVersion"`
	// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
	Id string `pulumi:"id"`
	// The name of the resource
	Name string `pulumi:"name"`
	// The resource-specific properties for this resource.
	Properties RelationshipPropertiesResponse `pulumi:"properties"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponse `pulumi:"systemData"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type string `pulumi:"type"`
}

func LookupRelationshipOutput(ctx *pulumi.Context, args LookupRelationshipOutputArgs, opts ...pulumi.InvokeOption) LookupRelationshipResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupRelationshipResultOutput, error) {
			args := v.(LookupRelationshipArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: utilities.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("azure-native:monitor:getRelationship", args, LookupRelationshipResultOutput{}, options).(LookupRelationshipResultOutput), nil
		}).(LookupRelationshipResultOutput)
}

type LookupRelationshipOutputArgs struct {
	// The name of the Azure Monitor Workspace. The name is case insensitive
	AzureMonitorWorkspaceName pulumi.StringInput `pulumi:"azureMonitorWorkspaceName"`
	// Name of health model resource
	HealthModelName pulumi.StringInput `pulumi:"healthModelName"`
	// Name of the relationship. Must be unique within a health model. For example, a concatenation of parentEntityName and childEntityName can be used as the name.
	RelationshipName pulumi.StringInput `pulumi:"relationshipName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
}

func (LookupRelationshipOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupRelationshipArgs)(nil)).Elem()
}

// A relationship (aka edge) between two entities in a health model
type LookupRelationshipResultOutput struct{ *pulumi.OutputState }

func (LookupRelationshipResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupRelationshipResult)(nil)).Elem()
}

func (o LookupRelationshipResultOutput) ToLookupRelationshipResultOutput() LookupRelationshipResultOutput {
	return o
}

func (o LookupRelationshipResultOutput) ToLookupRelationshipResultOutputWithContext(ctx context.Context) LookupRelationshipResultOutput {
	return o
}

// The Azure API version of the resource.
func (o LookupRelationshipResultOutput) AzureApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRelationshipResult) string { return v.AzureApiVersion }).(pulumi.StringOutput)
}

// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
func (o LookupRelationshipResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRelationshipResult) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the resource
func (o LookupRelationshipResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRelationshipResult) string { return v.Name }).(pulumi.StringOutput)
}

// The resource-specific properties for this resource.
func (o LookupRelationshipResultOutput) Properties() RelationshipPropertiesResponseOutput {
	return o.ApplyT(func(v LookupRelationshipResult) RelationshipPropertiesResponse { return v.Properties }).(RelationshipPropertiesResponseOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o LookupRelationshipResultOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v LookupRelationshipResult) SystemDataResponse { return v.SystemData }).(SystemDataResponseOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o LookupRelationshipResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRelationshipResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupRelationshipResultOutput{})
}
