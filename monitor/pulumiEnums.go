// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package monitor

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Specifies the default access mode of queries through associated private endpoints in scope. If not specified default value is 'Open'. You can override this default setting for a specific private endpoint connection by adding an exclusion in the 'exclusions' array.
type AccessMode string

const (
	AccessModeOpen        = AccessMode("Open")
	AccessModePrivateOnly = AccessMode("PrivateOnly")
)

func (AccessMode) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessMode)(nil)).Elem()
}

func (e AccessMode) ToAccessModeOutput() AccessModeOutput {
	return pulumi.ToOutput(e).(AccessModeOutput)
}

func (e AccessMode) ToAccessModeOutputWithContext(ctx context.Context) AccessModeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AccessModeOutput)
}

func (e AccessMode) ToAccessModePtrOutput() AccessModePtrOutput {
	return e.ToAccessModePtrOutputWithContext(context.Background())
}

func (e AccessMode) ToAccessModePtrOutputWithContext(ctx context.Context) AccessModePtrOutput {
	return AccessMode(e).ToAccessModeOutputWithContext(ctx).ToAccessModePtrOutputWithContext(ctx)
}

func (e AccessMode) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AccessMode) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AccessMode) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AccessMode) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AccessModeOutput struct{ *pulumi.OutputState }

func (AccessModeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessMode)(nil)).Elem()
}

func (o AccessModeOutput) ToAccessModeOutput() AccessModeOutput {
	return o
}

func (o AccessModeOutput) ToAccessModeOutputWithContext(ctx context.Context) AccessModeOutput {
	return o
}

func (o AccessModeOutput) ToAccessModePtrOutput() AccessModePtrOutput {
	return o.ToAccessModePtrOutputWithContext(context.Background())
}

func (o AccessModeOutput) ToAccessModePtrOutputWithContext(ctx context.Context) AccessModePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AccessMode) *AccessMode {
		return &v
	}).(AccessModePtrOutput)
}

func (o AccessModeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AccessModeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AccessMode) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AccessModeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AccessModeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AccessMode) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AccessModePtrOutput struct{ *pulumi.OutputState }

func (AccessModePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AccessMode)(nil)).Elem()
}

func (o AccessModePtrOutput) ToAccessModePtrOutput() AccessModePtrOutput {
	return o
}

func (o AccessModePtrOutput) ToAccessModePtrOutputWithContext(ctx context.Context) AccessModePtrOutput {
	return o
}

func (o AccessModePtrOutput) Elem() AccessModeOutput {
	return o.ApplyT(func(v *AccessMode) AccessMode {
		if v != nil {
			return *v
		}
		var ret AccessMode
		return ret
	}).(AccessModeOutput)
}

func (o AccessModePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AccessModePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AccessMode) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AccessModeInput is an input type that accepts values of the AccessMode enum
// A concrete instance of `AccessModeInput` can be one of the following:
//
//	AccessModeOpen
//	AccessModePrivateOnly
type AccessModeInput interface {
	pulumi.Input

	ToAccessModeOutput() AccessModeOutput
	ToAccessModeOutputWithContext(context.Context) AccessModeOutput
}

var accessModePtrType = reflect.TypeOf((**AccessMode)(nil)).Elem()

type AccessModePtrInput interface {
	pulumi.Input

	ToAccessModePtrOutput() AccessModePtrOutput
	ToAccessModePtrOutputWithContext(context.Context) AccessModePtrOutput
}

type accessModePtr string

func AccessModePtr(v string) AccessModePtrInput {
	return (*accessModePtr)(&v)
}

func (*accessModePtr) ElementType() reflect.Type {
	return accessModePtrType
}

func (in *accessModePtr) ToAccessModePtrOutput() AccessModePtrOutput {
	return pulumi.ToOutput(in).(AccessModePtrOutput)
}

func (in *accessModePtr) ToAccessModePtrOutputWithContext(ctx context.Context) AccessModePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AccessModePtrOutput)
}

// the operator that is used to compare the metric data and the threshold.
type ComparisonOperationType string

const (
	ComparisonOperationTypeEquals             = ComparisonOperationType("Equals")
	ComparisonOperationTypeNotEquals          = ComparisonOperationType("NotEquals")
	ComparisonOperationTypeGreaterThan        = ComparisonOperationType("GreaterThan")
	ComparisonOperationTypeGreaterThanOrEqual = ComparisonOperationType("GreaterThanOrEqual")
	ComparisonOperationTypeLessThan           = ComparisonOperationType("LessThan")
	ComparisonOperationTypeLessThanOrEqual    = ComparisonOperationType("LessThanOrEqual")
)

func (ComparisonOperationType) ElementType() reflect.Type {
	return reflect.TypeOf((*ComparisonOperationType)(nil)).Elem()
}

func (e ComparisonOperationType) ToComparisonOperationTypeOutput() ComparisonOperationTypeOutput {
	return pulumi.ToOutput(e).(ComparisonOperationTypeOutput)
}

func (e ComparisonOperationType) ToComparisonOperationTypeOutputWithContext(ctx context.Context) ComparisonOperationTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ComparisonOperationTypeOutput)
}

func (e ComparisonOperationType) ToComparisonOperationTypePtrOutput() ComparisonOperationTypePtrOutput {
	return e.ToComparisonOperationTypePtrOutputWithContext(context.Background())
}

func (e ComparisonOperationType) ToComparisonOperationTypePtrOutputWithContext(ctx context.Context) ComparisonOperationTypePtrOutput {
	return ComparisonOperationType(e).ToComparisonOperationTypeOutputWithContext(ctx).ToComparisonOperationTypePtrOutputWithContext(ctx)
}

func (e ComparisonOperationType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ComparisonOperationType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ComparisonOperationType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ComparisonOperationType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ComparisonOperationTypeOutput struct{ *pulumi.OutputState }

func (ComparisonOperationTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ComparisonOperationType)(nil)).Elem()
}

func (o ComparisonOperationTypeOutput) ToComparisonOperationTypeOutput() ComparisonOperationTypeOutput {
	return o
}

func (o ComparisonOperationTypeOutput) ToComparisonOperationTypeOutputWithContext(ctx context.Context) ComparisonOperationTypeOutput {
	return o
}

func (o ComparisonOperationTypeOutput) ToComparisonOperationTypePtrOutput() ComparisonOperationTypePtrOutput {
	return o.ToComparisonOperationTypePtrOutputWithContext(context.Background())
}

func (o ComparisonOperationTypeOutput) ToComparisonOperationTypePtrOutputWithContext(ctx context.Context) ComparisonOperationTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ComparisonOperationType) *ComparisonOperationType {
		return &v
	}).(ComparisonOperationTypePtrOutput)
}

func (o ComparisonOperationTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ComparisonOperationTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ComparisonOperationType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ComparisonOperationTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ComparisonOperationTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ComparisonOperationType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ComparisonOperationTypePtrOutput struct{ *pulumi.OutputState }

func (ComparisonOperationTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ComparisonOperationType)(nil)).Elem()
}

func (o ComparisonOperationTypePtrOutput) ToComparisonOperationTypePtrOutput() ComparisonOperationTypePtrOutput {
	return o
}

func (o ComparisonOperationTypePtrOutput) ToComparisonOperationTypePtrOutputWithContext(ctx context.Context) ComparisonOperationTypePtrOutput {
	return o
}

func (o ComparisonOperationTypePtrOutput) Elem() ComparisonOperationTypeOutput {
	return o.ApplyT(func(v *ComparisonOperationType) ComparisonOperationType {
		if v != nil {
			return *v
		}
		var ret ComparisonOperationType
		return ret
	}).(ComparisonOperationTypeOutput)
}

func (o ComparisonOperationTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ComparisonOperationTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ComparisonOperationType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ComparisonOperationTypeInput is an input type that accepts values of the ComparisonOperationType enum
// A concrete instance of `ComparisonOperationTypeInput` can be one of the following:
//
//	ComparisonOperationTypeEquals
//	ComparisonOperationTypeNotEquals
//	ComparisonOperationTypeGreaterThan
//	ComparisonOperationTypeGreaterThanOrEqual
//	ComparisonOperationTypeLessThan
//	ComparisonOperationTypeLessThanOrEqual
type ComparisonOperationTypeInput interface {
	pulumi.Input

	ToComparisonOperationTypeOutput() ComparisonOperationTypeOutput
	ToComparisonOperationTypeOutputWithContext(context.Context) ComparisonOperationTypeOutput
}

var comparisonOperationTypePtrType = reflect.TypeOf((**ComparisonOperationType)(nil)).Elem()

type ComparisonOperationTypePtrInput interface {
	pulumi.Input

	ToComparisonOperationTypePtrOutput() ComparisonOperationTypePtrOutput
	ToComparisonOperationTypePtrOutputWithContext(context.Context) ComparisonOperationTypePtrOutput
}

type comparisonOperationTypePtr string

func ComparisonOperationTypePtr(v string) ComparisonOperationTypePtrInput {
	return (*comparisonOperationTypePtr)(&v)
}

func (*comparisonOperationTypePtr) ElementType() reflect.Type {
	return comparisonOperationTypePtrType
}

func (in *comparisonOperationTypePtr) ToComparisonOperationTypePtrOutput() ComparisonOperationTypePtrOutput {
	return pulumi.ToOutput(in).(ComparisonOperationTypePtrOutput)
}

func (in *comparisonOperationTypePtr) ToComparisonOperationTypePtrOutputWithContext(ctx context.Context) ComparisonOperationTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ComparisonOperationTypePtrOutput)
}

// The criteria operator. Relevant and required only for rules of the kind LogAlert.
type ConditionOperator string

const (
	ConditionOperatorEquals             = ConditionOperator("Equals")
	ConditionOperatorGreaterThan        = ConditionOperator("GreaterThan")
	ConditionOperatorGreaterThanOrEqual = ConditionOperator("GreaterThanOrEqual")
	ConditionOperatorLessThan           = ConditionOperator("LessThan")
	ConditionOperatorLessThanOrEqual    = ConditionOperator("LessThanOrEqual")
	ConditionOperatorGreaterOrLessThan  = ConditionOperator("GreaterOrLessThan")
)

func (ConditionOperator) ElementType() reflect.Type {
	return reflect.TypeOf((*ConditionOperator)(nil)).Elem()
}

func (e ConditionOperator) ToConditionOperatorOutput() ConditionOperatorOutput {
	return pulumi.ToOutput(e).(ConditionOperatorOutput)
}

func (e ConditionOperator) ToConditionOperatorOutputWithContext(ctx context.Context) ConditionOperatorOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ConditionOperatorOutput)
}

func (e ConditionOperator) ToConditionOperatorPtrOutput() ConditionOperatorPtrOutput {
	return e.ToConditionOperatorPtrOutputWithContext(context.Background())
}

func (e ConditionOperator) ToConditionOperatorPtrOutputWithContext(ctx context.Context) ConditionOperatorPtrOutput {
	return ConditionOperator(e).ToConditionOperatorOutputWithContext(ctx).ToConditionOperatorPtrOutputWithContext(ctx)
}

func (e ConditionOperator) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ConditionOperator) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ConditionOperator) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ConditionOperator) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ConditionOperatorOutput struct{ *pulumi.OutputState }

func (ConditionOperatorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConditionOperator)(nil)).Elem()
}

func (o ConditionOperatorOutput) ToConditionOperatorOutput() ConditionOperatorOutput {
	return o
}

func (o ConditionOperatorOutput) ToConditionOperatorOutputWithContext(ctx context.Context) ConditionOperatorOutput {
	return o
}

func (o ConditionOperatorOutput) ToConditionOperatorPtrOutput() ConditionOperatorPtrOutput {
	return o.ToConditionOperatorPtrOutputWithContext(context.Background())
}

func (o ConditionOperatorOutput) ToConditionOperatorPtrOutputWithContext(ctx context.Context) ConditionOperatorPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConditionOperator) *ConditionOperator {
		return &v
	}).(ConditionOperatorPtrOutput)
}

func (o ConditionOperatorOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ConditionOperatorOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ConditionOperator) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ConditionOperatorOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ConditionOperatorOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ConditionOperator) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ConditionOperatorPtrOutput struct{ *pulumi.OutputState }

func (ConditionOperatorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConditionOperator)(nil)).Elem()
}

func (o ConditionOperatorPtrOutput) ToConditionOperatorPtrOutput() ConditionOperatorPtrOutput {
	return o
}

func (o ConditionOperatorPtrOutput) ToConditionOperatorPtrOutputWithContext(ctx context.Context) ConditionOperatorPtrOutput {
	return o
}

func (o ConditionOperatorPtrOutput) Elem() ConditionOperatorOutput {
	return o.ApplyT(func(v *ConditionOperator) ConditionOperator {
		if v != nil {
			return *v
		}
		var ret ConditionOperator
		return ret
	}).(ConditionOperatorOutput)
}

func (o ConditionOperatorPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ConditionOperatorPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ConditionOperator) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ConditionOperatorInput is an input type that accepts values of the ConditionOperator enum
// A concrete instance of `ConditionOperatorInput` can be one of the following:
//
//	ConditionOperatorEquals
//	ConditionOperatorGreaterThan
//	ConditionOperatorGreaterThanOrEqual
//	ConditionOperatorLessThan
//	ConditionOperatorLessThanOrEqual
//	ConditionOperatorGreaterOrLessThan
type ConditionOperatorInput interface {
	pulumi.Input

	ToConditionOperatorOutput() ConditionOperatorOutput
	ToConditionOperatorOutputWithContext(context.Context) ConditionOperatorOutput
}

var conditionOperatorPtrType = reflect.TypeOf((**ConditionOperator)(nil)).Elem()

type ConditionOperatorPtrInput interface {
	pulumi.Input

	ToConditionOperatorPtrOutput() ConditionOperatorPtrOutput
	ToConditionOperatorPtrOutputWithContext(context.Context) ConditionOperatorPtrOutput
}

type conditionOperatorPtr string

func ConditionOperatorPtr(v string) ConditionOperatorPtrInput {
	return (*conditionOperatorPtr)(&v)
}

func (*conditionOperatorPtr) ElementType() reflect.Type {
	return conditionOperatorPtrType
}

func (in *conditionOperatorPtr) ToConditionOperatorPtrOutput() ConditionOperatorPtrOutput {
	return pulumi.ToOutput(in).(ConditionOperatorPtrOutput)
}

func (in *conditionOperatorPtr) ToConditionOperatorPtrOutputWithContext(ctx context.Context) ConditionOperatorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ConditionOperatorPtrOutput)
}

// Specifies the type of threshold criteria
type CriterionType string

const (
	CriterionTypeStaticThresholdCriterion  = CriterionType("StaticThresholdCriterion")
	CriterionTypeDynamicThresholdCriterion = CriterionType("DynamicThresholdCriterion")
)

func (CriterionType) ElementType() reflect.Type {
	return reflect.TypeOf((*CriterionType)(nil)).Elem()
}

func (e CriterionType) ToCriterionTypeOutput() CriterionTypeOutput {
	return pulumi.ToOutput(e).(CriterionTypeOutput)
}

func (e CriterionType) ToCriterionTypeOutputWithContext(ctx context.Context) CriterionTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(CriterionTypeOutput)
}

func (e CriterionType) ToCriterionTypePtrOutput() CriterionTypePtrOutput {
	return e.ToCriterionTypePtrOutputWithContext(context.Background())
}

func (e CriterionType) ToCriterionTypePtrOutputWithContext(ctx context.Context) CriterionTypePtrOutput {
	return CriterionType(e).ToCriterionTypeOutputWithContext(ctx).ToCriterionTypePtrOutputWithContext(ctx)
}

func (e CriterionType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e CriterionType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e CriterionType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e CriterionType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type CriterionTypeOutput struct{ *pulumi.OutputState }

func (CriterionTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CriterionType)(nil)).Elem()
}

func (o CriterionTypeOutput) ToCriterionTypeOutput() CriterionTypeOutput {
	return o
}

func (o CriterionTypeOutput) ToCriterionTypeOutputWithContext(ctx context.Context) CriterionTypeOutput {
	return o
}

func (o CriterionTypeOutput) ToCriterionTypePtrOutput() CriterionTypePtrOutput {
	return o.ToCriterionTypePtrOutputWithContext(context.Background())
}

func (o CriterionTypeOutput) ToCriterionTypePtrOutputWithContext(ctx context.Context) CriterionTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CriterionType) *CriterionType {
		return &v
	}).(CriterionTypePtrOutput)
}

func (o CriterionTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o CriterionTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e CriterionType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o CriterionTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o CriterionTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e CriterionType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type CriterionTypePtrOutput struct{ *pulumi.OutputState }

func (CriterionTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CriterionType)(nil)).Elem()
}

func (o CriterionTypePtrOutput) ToCriterionTypePtrOutput() CriterionTypePtrOutput {
	return o
}

func (o CriterionTypePtrOutput) ToCriterionTypePtrOutputWithContext(ctx context.Context) CriterionTypePtrOutput {
	return o
}

func (o CriterionTypePtrOutput) Elem() CriterionTypeOutput {
	return o.ApplyT(func(v *CriterionType) CriterionType {
		if v != nil {
			return *v
		}
		var ret CriterionType
		return ret
	}).(CriterionTypeOutput)
}

func (o CriterionTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o CriterionTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *CriterionType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// CriterionTypeInput is an input type that accepts values of the CriterionType enum
// A concrete instance of `CriterionTypeInput` can be one of the following:
//
//	CriterionTypeStaticThresholdCriterion
//	CriterionTypeDynamicThresholdCriterion
type CriterionTypeInput interface {
	pulumi.Input

	ToCriterionTypeOutput() CriterionTypeOutput
	ToCriterionTypeOutputWithContext(context.Context) CriterionTypeOutput
}

var criterionTypePtrType = reflect.TypeOf((**CriterionType)(nil)).Elem()

type CriterionTypePtrInput interface {
	pulumi.Input

	ToCriterionTypePtrOutput() CriterionTypePtrOutput
	ToCriterionTypePtrOutputWithContext(context.Context) CriterionTypePtrOutput
}

type criterionTypePtr string

func CriterionTypePtr(v string) CriterionTypePtrInput {
	return (*criterionTypePtr)(&v)
}

func (*criterionTypePtr) ElementType() reflect.Type {
	return criterionTypePtrType
}

func (in *criterionTypePtr) ToCriterionTypePtrOutput() CriterionTypePtrOutput {
	return pulumi.ToOutput(in).(CriterionTypePtrOutput)
}

func (in *criterionTypePtr) ToCriterionTypePtrOutputWithContext(ctx context.Context) CriterionTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(CriterionTypePtrOutput)
}

// Operator for dimension values
type DimensionOperator string

const (
	DimensionOperatorInclude = DimensionOperator("Include")
	DimensionOperatorExclude = DimensionOperator("Exclude")
)

func (DimensionOperator) ElementType() reflect.Type {
	return reflect.TypeOf((*DimensionOperator)(nil)).Elem()
}

func (e DimensionOperator) ToDimensionOperatorOutput() DimensionOperatorOutput {
	return pulumi.ToOutput(e).(DimensionOperatorOutput)
}

func (e DimensionOperator) ToDimensionOperatorOutputWithContext(ctx context.Context) DimensionOperatorOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DimensionOperatorOutput)
}

func (e DimensionOperator) ToDimensionOperatorPtrOutput() DimensionOperatorPtrOutput {
	return e.ToDimensionOperatorPtrOutputWithContext(context.Background())
}

func (e DimensionOperator) ToDimensionOperatorPtrOutputWithContext(ctx context.Context) DimensionOperatorPtrOutput {
	return DimensionOperator(e).ToDimensionOperatorOutputWithContext(ctx).ToDimensionOperatorPtrOutputWithContext(ctx)
}

func (e DimensionOperator) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DimensionOperator) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DimensionOperator) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DimensionOperator) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DimensionOperatorOutput struct{ *pulumi.OutputState }

func (DimensionOperatorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DimensionOperator)(nil)).Elem()
}

func (o DimensionOperatorOutput) ToDimensionOperatorOutput() DimensionOperatorOutput {
	return o
}

func (o DimensionOperatorOutput) ToDimensionOperatorOutputWithContext(ctx context.Context) DimensionOperatorOutput {
	return o
}

func (o DimensionOperatorOutput) ToDimensionOperatorPtrOutput() DimensionOperatorPtrOutput {
	return o.ToDimensionOperatorPtrOutputWithContext(context.Background())
}

func (o DimensionOperatorOutput) ToDimensionOperatorPtrOutputWithContext(ctx context.Context) DimensionOperatorPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DimensionOperator) *DimensionOperator {
		return &v
	}).(DimensionOperatorPtrOutput)
}

func (o DimensionOperatorOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DimensionOperatorOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DimensionOperator) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DimensionOperatorOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DimensionOperatorOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DimensionOperator) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DimensionOperatorPtrOutput struct{ *pulumi.OutputState }

func (DimensionOperatorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DimensionOperator)(nil)).Elem()
}

func (o DimensionOperatorPtrOutput) ToDimensionOperatorPtrOutput() DimensionOperatorPtrOutput {
	return o
}

func (o DimensionOperatorPtrOutput) ToDimensionOperatorPtrOutputWithContext(ctx context.Context) DimensionOperatorPtrOutput {
	return o
}

func (o DimensionOperatorPtrOutput) Elem() DimensionOperatorOutput {
	return o.ApplyT(func(v *DimensionOperator) DimensionOperator {
		if v != nil {
			return *v
		}
		var ret DimensionOperator
		return ret
	}).(DimensionOperatorOutput)
}

func (o DimensionOperatorPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DimensionOperatorPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DimensionOperator) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DimensionOperatorInput is an input type that accepts values of the DimensionOperator enum
// A concrete instance of `DimensionOperatorInput` can be one of the following:
//
//	DimensionOperatorInclude
//	DimensionOperatorExclude
type DimensionOperatorInput interface {
	pulumi.Input

	ToDimensionOperatorOutput() DimensionOperatorOutput
	ToDimensionOperatorOutputWithContext(context.Context) DimensionOperatorOutput
}

var dimensionOperatorPtrType = reflect.TypeOf((**DimensionOperator)(nil)).Elem()

type DimensionOperatorPtrInput interface {
	pulumi.Input

	ToDimensionOperatorPtrOutput() DimensionOperatorPtrOutput
	ToDimensionOperatorPtrOutputWithContext(context.Context) DimensionOperatorPtrOutput
}

type dimensionOperatorPtr string

func DimensionOperatorPtr(v string) DimensionOperatorPtrInput {
	return (*dimensionOperatorPtr)(&v)
}

func (*dimensionOperatorPtr) ElementType() reflect.Type {
	return dimensionOperatorPtrType
}

func (in *dimensionOperatorPtr) ToDimensionOperatorPtrOutput() DimensionOperatorPtrOutput {
	return pulumi.ToOutput(in).(DimensionOperatorPtrOutput)
}

func (in *dimensionOperatorPtr) ToDimensionOperatorPtrOutputWithContext(ctx context.Context) DimensionOperatorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DimensionOperatorPtrOutput)
}

// The type of exporter.
type ExporterType string

const (
	// Export logs to Azure Monitor Workspace.
	ExporterTypeAzureMonitorWorkspaceLogs = ExporterType("AzureMonitorWorkspaceLogs")
	// Export data to another pipeline group instance.
	ExporterTypePipelineGroup = ExporterType("PipelineGroup")
)

func (ExporterType) ElementType() reflect.Type {
	return reflect.TypeOf((*ExporterType)(nil)).Elem()
}

func (e ExporterType) ToExporterTypeOutput() ExporterTypeOutput {
	return pulumi.ToOutput(e).(ExporterTypeOutput)
}

func (e ExporterType) ToExporterTypeOutputWithContext(ctx context.Context) ExporterTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ExporterTypeOutput)
}

func (e ExporterType) ToExporterTypePtrOutput() ExporterTypePtrOutput {
	return e.ToExporterTypePtrOutputWithContext(context.Background())
}

func (e ExporterType) ToExporterTypePtrOutputWithContext(ctx context.Context) ExporterTypePtrOutput {
	return ExporterType(e).ToExporterTypeOutputWithContext(ctx).ToExporterTypePtrOutputWithContext(ctx)
}

func (e ExporterType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ExporterType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ExporterType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ExporterType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ExporterTypeOutput struct{ *pulumi.OutputState }

func (ExporterTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExporterType)(nil)).Elem()
}

func (o ExporterTypeOutput) ToExporterTypeOutput() ExporterTypeOutput {
	return o
}

func (o ExporterTypeOutput) ToExporterTypeOutputWithContext(ctx context.Context) ExporterTypeOutput {
	return o
}

func (o ExporterTypeOutput) ToExporterTypePtrOutput() ExporterTypePtrOutput {
	return o.ToExporterTypePtrOutputWithContext(context.Background())
}

func (o ExporterTypeOutput) ToExporterTypePtrOutputWithContext(ctx context.Context) ExporterTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ExporterType) *ExporterType {
		return &v
	}).(ExporterTypePtrOutput)
}

func (o ExporterTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ExporterTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ExporterType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ExporterTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ExporterTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ExporterType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ExporterTypePtrOutput struct{ *pulumi.OutputState }

func (ExporterTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExporterType)(nil)).Elem()
}

func (o ExporterTypePtrOutput) ToExporterTypePtrOutput() ExporterTypePtrOutput {
	return o
}

func (o ExporterTypePtrOutput) ToExporterTypePtrOutputWithContext(ctx context.Context) ExporterTypePtrOutput {
	return o
}

func (o ExporterTypePtrOutput) Elem() ExporterTypeOutput {
	return o.ApplyT(func(v *ExporterType) ExporterType {
		if v != nil {
			return *v
		}
		var ret ExporterType
		return ret
	}).(ExporterTypeOutput)
}

func (o ExporterTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ExporterTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ExporterType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ExporterTypeInput is an input type that accepts values of the ExporterType enum
// A concrete instance of `ExporterTypeInput` can be one of the following:
//
//	ExporterTypeAzureMonitorWorkspaceLogs
//	ExporterTypePipelineGroup
type ExporterTypeInput interface {
	pulumi.Input

	ToExporterTypeOutput() ExporterTypeOutput
	ToExporterTypeOutputWithContext(context.Context) ExporterTypeOutput
}

var exporterTypePtrType = reflect.TypeOf((**ExporterType)(nil)).Elem()

type ExporterTypePtrInput interface {
	pulumi.Input

	ToExporterTypePtrOutput() ExporterTypePtrOutput
	ToExporterTypePtrOutputWithContext(context.Context) ExporterTypePtrOutput
}

type exporterTypePtr string

func ExporterTypePtr(v string) ExporterTypePtrInput {
	return (*exporterTypePtr)(&v)
}

func (*exporterTypePtr) ElementType() reflect.Type {
	return exporterTypePtrType
}

func (in *exporterTypePtr) ToExporterTypePtrOutput() ExporterTypePtrOutput {
	return pulumi.ToOutput(in).(ExporterTypePtrOutput)
}

func (in *exporterTypePtr) ToExporterTypePtrOutputWithContext(ctx context.Context) ExporterTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ExporterTypePtrOutput)
}

// The type of the extended location.
type ExtendedLocationType string

const (
	// Azure Edge Zones location type
	ExtendedLocationTypeEdgeZone = ExtendedLocationType("EdgeZone")
	// Azure Custom Locations type
	ExtendedLocationTypeCustomLocation = ExtendedLocationType("CustomLocation")
)

func (ExtendedLocationType) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtendedLocationType)(nil)).Elem()
}

func (e ExtendedLocationType) ToExtendedLocationTypeOutput() ExtendedLocationTypeOutput {
	return pulumi.ToOutput(e).(ExtendedLocationTypeOutput)
}

func (e ExtendedLocationType) ToExtendedLocationTypeOutputWithContext(ctx context.Context) ExtendedLocationTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ExtendedLocationTypeOutput)
}

func (e ExtendedLocationType) ToExtendedLocationTypePtrOutput() ExtendedLocationTypePtrOutput {
	return e.ToExtendedLocationTypePtrOutputWithContext(context.Background())
}

func (e ExtendedLocationType) ToExtendedLocationTypePtrOutputWithContext(ctx context.Context) ExtendedLocationTypePtrOutput {
	return ExtendedLocationType(e).ToExtendedLocationTypeOutputWithContext(ctx).ToExtendedLocationTypePtrOutputWithContext(ctx)
}

func (e ExtendedLocationType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ExtendedLocationType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ExtendedLocationType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ExtendedLocationType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ExtendedLocationTypeOutput struct{ *pulumi.OutputState }

func (ExtendedLocationTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtendedLocationType)(nil)).Elem()
}

func (o ExtendedLocationTypeOutput) ToExtendedLocationTypeOutput() ExtendedLocationTypeOutput {
	return o
}

func (o ExtendedLocationTypeOutput) ToExtendedLocationTypeOutputWithContext(ctx context.Context) ExtendedLocationTypeOutput {
	return o
}

func (o ExtendedLocationTypeOutput) ToExtendedLocationTypePtrOutput() ExtendedLocationTypePtrOutput {
	return o.ToExtendedLocationTypePtrOutputWithContext(context.Background())
}

func (o ExtendedLocationTypeOutput) ToExtendedLocationTypePtrOutputWithContext(ctx context.Context) ExtendedLocationTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ExtendedLocationType) *ExtendedLocationType {
		return &v
	}).(ExtendedLocationTypePtrOutput)
}

func (o ExtendedLocationTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ExtendedLocationTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ExtendedLocationType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ExtendedLocationTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ExtendedLocationTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ExtendedLocationType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ExtendedLocationTypePtrOutput struct{ *pulumi.OutputState }

func (ExtendedLocationTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExtendedLocationType)(nil)).Elem()
}

func (o ExtendedLocationTypePtrOutput) ToExtendedLocationTypePtrOutput() ExtendedLocationTypePtrOutput {
	return o
}

func (o ExtendedLocationTypePtrOutput) ToExtendedLocationTypePtrOutputWithContext(ctx context.Context) ExtendedLocationTypePtrOutput {
	return o
}

func (o ExtendedLocationTypePtrOutput) Elem() ExtendedLocationTypeOutput {
	return o.ApplyT(func(v *ExtendedLocationType) ExtendedLocationType {
		if v != nil {
			return *v
		}
		var ret ExtendedLocationType
		return ret
	}).(ExtendedLocationTypeOutput)
}

func (o ExtendedLocationTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ExtendedLocationTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ExtendedLocationType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ExtendedLocationTypeInput is an input type that accepts values of the ExtendedLocationType enum
// A concrete instance of `ExtendedLocationTypeInput` can be one of the following:
//
//	ExtendedLocationTypeEdgeZone
//	ExtendedLocationTypeCustomLocation
type ExtendedLocationTypeInput interface {
	pulumi.Input

	ToExtendedLocationTypeOutput() ExtendedLocationTypeOutput
	ToExtendedLocationTypeOutputWithContext(context.Context) ExtendedLocationTypeOutput
}

var extendedLocationTypePtrType = reflect.TypeOf((**ExtendedLocationType)(nil)).Elem()

type ExtendedLocationTypePtrInput interface {
	pulumi.Input

	ToExtendedLocationTypePtrOutput() ExtendedLocationTypePtrOutput
	ToExtendedLocationTypePtrOutputWithContext(context.Context) ExtendedLocationTypePtrOutput
}

type extendedLocationTypePtr string

func ExtendedLocationTypePtr(v string) ExtendedLocationTypePtrInput {
	return (*extendedLocationTypePtr)(&v)
}

func (*extendedLocationTypePtr) ElementType() reflect.Type {
	return extendedLocationTypePtrType
}

func (in *extendedLocationTypePtr) ToExtendedLocationTypePtrOutput() ExtendedLocationTypePtrOutput {
	return pulumi.ToOutput(in).(ExtendedLocationTypePtrOutput)
}

func (in *extendedLocationTypePtr) ToExtendedLocationTypePtrOutputWithContext(ctx context.Context) ExtendedLocationTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ExtendedLocationTypePtrOutput)
}

// External networking mode.
type ExternalNetworkingMode string

const (
	// Load balancer only.
	ExternalNetworkingModeLoadBalancerOnly = ExternalNetworkingMode("LoadBalancerOnly")
)

func (ExternalNetworkingMode) ElementType() reflect.Type {
	return reflect.TypeOf((*ExternalNetworkingMode)(nil)).Elem()
}

func (e ExternalNetworkingMode) ToExternalNetworkingModeOutput() ExternalNetworkingModeOutput {
	return pulumi.ToOutput(e).(ExternalNetworkingModeOutput)
}

func (e ExternalNetworkingMode) ToExternalNetworkingModeOutputWithContext(ctx context.Context) ExternalNetworkingModeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ExternalNetworkingModeOutput)
}

func (e ExternalNetworkingMode) ToExternalNetworkingModePtrOutput() ExternalNetworkingModePtrOutput {
	return e.ToExternalNetworkingModePtrOutputWithContext(context.Background())
}

func (e ExternalNetworkingMode) ToExternalNetworkingModePtrOutputWithContext(ctx context.Context) ExternalNetworkingModePtrOutput {
	return ExternalNetworkingMode(e).ToExternalNetworkingModeOutputWithContext(ctx).ToExternalNetworkingModePtrOutputWithContext(ctx)
}

func (e ExternalNetworkingMode) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ExternalNetworkingMode) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ExternalNetworkingMode) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ExternalNetworkingMode) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ExternalNetworkingModeOutput struct{ *pulumi.OutputState }

func (ExternalNetworkingModeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExternalNetworkingMode)(nil)).Elem()
}

func (o ExternalNetworkingModeOutput) ToExternalNetworkingModeOutput() ExternalNetworkingModeOutput {
	return o
}

func (o ExternalNetworkingModeOutput) ToExternalNetworkingModeOutputWithContext(ctx context.Context) ExternalNetworkingModeOutput {
	return o
}

func (o ExternalNetworkingModeOutput) ToExternalNetworkingModePtrOutput() ExternalNetworkingModePtrOutput {
	return o.ToExternalNetworkingModePtrOutputWithContext(context.Background())
}

func (o ExternalNetworkingModeOutput) ToExternalNetworkingModePtrOutputWithContext(ctx context.Context) ExternalNetworkingModePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ExternalNetworkingMode) *ExternalNetworkingMode {
		return &v
	}).(ExternalNetworkingModePtrOutput)
}

func (o ExternalNetworkingModeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ExternalNetworkingModeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ExternalNetworkingMode) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ExternalNetworkingModeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ExternalNetworkingModeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ExternalNetworkingMode) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ExternalNetworkingModePtrOutput struct{ *pulumi.OutputState }

func (ExternalNetworkingModePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExternalNetworkingMode)(nil)).Elem()
}

func (o ExternalNetworkingModePtrOutput) ToExternalNetworkingModePtrOutput() ExternalNetworkingModePtrOutput {
	return o
}

func (o ExternalNetworkingModePtrOutput) ToExternalNetworkingModePtrOutputWithContext(ctx context.Context) ExternalNetworkingModePtrOutput {
	return o
}

func (o ExternalNetworkingModePtrOutput) Elem() ExternalNetworkingModeOutput {
	return o.ApplyT(func(v *ExternalNetworkingMode) ExternalNetworkingMode {
		if v != nil {
			return *v
		}
		var ret ExternalNetworkingMode
		return ret
	}).(ExternalNetworkingModeOutput)
}

func (o ExternalNetworkingModePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ExternalNetworkingModePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ExternalNetworkingMode) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ExternalNetworkingModeInput is an input type that accepts values of the ExternalNetworkingMode enum
// A concrete instance of `ExternalNetworkingModeInput` can be one of the following:
//
//	ExternalNetworkingModeLoadBalancerOnly
type ExternalNetworkingModeInput interface {
	pulumi.Input

	ToExternalNetworkingModeOutput() ExternalNetworkingModeOutput
	ToExternalNetworkingModeOutputWithContext(context.Context) ExternalNetworkingModeOutput
}

var externalNetworkingModePtrType = reflect.TypeOf((**ExternalNetworkingMode)(nil)).Elem()

type ExternalNetworkingModePtrInput interface {
	pulumi.Input

	ToExternalNetworkingModePtrOutput() ExternalNetworkingModePtrOutput
	ToExternalNetworkingModePtrOutputWithContext(context.Context) ExternalNetworkingModePtrOutput
}

type externalNetworkingModePtr string

func ExternalNetworkingModePtr(v string) ExternalNetworkingModePtrInput {
	return (*externalNetworkingModePtr)(&v)
}

func (*externalNetworkingModePtr) ElementType() reflect.Type {
	return externalNetworkingModePtrType
}

func (in *externalNetworkingModePtr) ToExternalNetworkingModePtrOutput() ExternalNetworkingModePtrOutput {
	return pulumi.ToOutput(in).(ExternalNetworkingModePtrOutput)
}

func (in *externalNetworkingModePtr) ToExternalNetworkingModePtrOutputWithContext(ctx context.Context) ExternalNetworkingModePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ExternalNetworkingModePtrOutput)
}

// Type of managed service identity.
type IdentityType string

const (
	IdentityTypeSystemAssigned = IdentityType("SystemAssigned")
	IdentityTypeUserAssigned   = IdentityType("UserAssigned")
	IdentityTypeNone           = IdentityType("None")
)

func (IdentityType) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityType)(nil)).Elem()
}

func (e IdentityType) ToIdentityTypeOutput() IdentityTypeOutput {
	return pulumi.ToOutput(e).(IdentityTypeOutput)
}

func (e IdentityType) ToIdentityTypeOutputWithContext(ctx context.Context) IdentityTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(IdentityTypeOutput)
}

func (e IdentityType) ToIdentityTypePtrOutput() IdentityTypePtrOutput {
	return e.ToIdentityTypePtrOutputWithContext(context.Background())
}

func (e IdentityType) ToIdentityTypePtrOutputWithContext(ctx context.Context) IdentityTypePtrOutput {
	return IdentityType(e).ToIdentityTypeOutputWithContext(ctx).ToIdentityTypePtrOutputWithContext(ctx)
}

func (e IdentityType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e IdentityType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e IdentityType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e IdentityType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type IdentityTypeOutput struct{ *pulumi.OutputState }

func (IdentityTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityType)(nil)).Elem()
}

func (o IdentityTypeOutput) ToIdentityTypeOutput() IdentityTypeOutput {
	return o
}

func (o IdentityTypeOutput) ToIdentityTypeOutputWithContext(ctx context.Context) IdentityTypeOutput {
	return o
}

func (o IdentityTypeOutput) ToIdentityTypePtrOutput() IdentityTypePtrOutput {
	return o.ToIdentityTypePtrOutputWithContext(context.Background())
}

func (o IdentityTypeOutput) ToIdentityTypePtrOutputWithContext(ctx context.Context) IdentityTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IdentityType) *IdentityType {
		return &v
	}).(IdentityTypePtrOutput)
}

func (o IdentityTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o IdentityTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e IdentityType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o IdentityTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o IdentityTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e IdentityType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type IdentityTypePtrOutput struct{ *pulumi.OutputState }

func (IdentityTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityType)(nil)).Elem()
}

func (o IdentityTypePtrOutput) ToIdentityTypePtrOutput() IdentityTypePtrOutput {
	return o
}

func (o IdentityTypePtrOutput) ToIdentityTypePtrOutputWithContext(ctx context.Context) IdentityTypePtrOutput {
	return o
}

func (o IdentityTypePtrOutput) Elem() IdentityTypeOutput {
	return o.ApplyT(func(v *IdentityType) IdentityType {
		if v != nil {
			return *v
		}
		var ret IdentityType
		return ret
	}).(IdentityTypeOutput)
}

func (o IdentityTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o IdentityTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *IdentityType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// IdentityTypeInput is an input type that accepts values of the IdentityType enum
// A concrete instance of `IdentityTypeInput` can be one of the following:
//
//	IdentityTypeSystemAssigned
//	IdentityTypeUserAssigned
//	IdentityTypeNone
type IdentityTypeInput interface {
	pulumi.Input

	ToIdentityTypeOutput() IdentityTypeOutput
	ToIdentityTypeOutputWithContext(context.Context) IdentityTypeOutput
}

var identityTypePtrType = reflect.TypeOf((**IdentityType)(nil)).Elem()

type IdentityTypePtrInput interface {
	pulumi.Input

	ToIdentityTypePtrOutput() IdentityTypePtrOutput
	ToIdentityTypePtrOutputWithContext(context.Context) IdentityTypePtrOutput
}

type identityTypePtr string

func IdentityTypePtr(v string) IdentityTypePtrInput {
	return (*identityTypePtr)(&v)
}

func (*identityTypePtr) ElementType() reflect.Type {
	return identityTypePtrType
}

func (in *identityTypePtr) ToIdentityTypePtrOutput() IdentityTypePtrOutput {
	return pulumi.ToOutput(in).(IdentityTypePtrOutput)
}

func (in *identityTypePtr) ToIdentityTypePtrOutputWithContext(ctx context.Context) IdentityTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(IdentityTypePtrOutput)
}

// The incident management service type
type IncidentManagementService string

const (
	IncidentManagementServiceIcm = IncidentManagementService("Icm")
)

func (IncidentManagementService) ElementType() reflect.Type {
	return reflect.TypeOf((*IncidentManagementService)(nil)).Elem()
}

func (e IncidentManagementService) ToIncidentManagementServiceOutput() IncidentManagementServiceOutput {
	return pulumi.ToOutput(e).(IncidentManagementServiceOutput)
}

func (e IncidentManagementService) ToIncidentManagementServiceOutputWithContext(ctx context.Context) IncidentManagementServiceOutput {
	return pulumi.ToOutputWithContext(ctx, e).(IncidentManagementServiceOutput)
}

func (e IncidentManagementService) ToIncidentManagementServicePtrOutput() IncidentManagementServicePtrOutput {
	return e.ToIncidentManagementServicePtrOutputWithContext(context.Background())
}

func (e IncidentManagementService) ToIncidentManagementServicePtrOutputWithContext(ctx context.Context) IncidentManagementServicePtrOutput {
	return IncidentManagementService(e).ToIncidentManagementServiceOutputWithContext(ctx).ToIncidentManagementServicePtrOutputWithContext(ctx)
}

func (e IncidentManagementService) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e IncidentManagementService) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e IncidentManagementService) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e IncidentManagementService) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type IncidentManagementServiceOutput struct{ *pulumi.OutputState }

func (IncidentManagementServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IncidentManagementService)(nil)).Elem()
}

func (o IncidentManagementServiceOutput) ToIncidentManagementServiceOutput() IncidentManagementServiceOutput {
	return o
}

func (o IncidentManagementServiceOutput) ToIncidentManagementServiceOutputWithContext(ctx context.Context) IncidentManagementServiceOutput {
	return o
}

func (o IncidentManagementServiceOutput) ToIncidentManagementServicePtrOutput() IncidentManagementServicePtrOutput {
	return o.ToIncidentManagementServicePtrOutputWithContext(context.Background())
}

func (o IncidentManagementServiceOutput) ToIncidentManagementServicePtrOutputWithContext(ctx context.Context) IncidentManagementServicePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IncidentManagementService) *IncidentManagementService {
		return &v
	}).(IncidentManagementServicePtrOutput)
}

func (o IncidentManagementServiceOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o IncidentManagementServiceOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e IncidentManagementService) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o IncidentManagementServiceOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o IncidentManagementServiceOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e IncidentManagementService) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type IncidentManagementServicePtrOutput struct{ *pulumi.OutputState }

func (IncidentManagementServicePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IncidentManagementService)(nil)).Elem()
}

func (o IncidentManagementServicePtrOutput) ToIncidentManagementServicePtrOutput() IncidentManagementServicePtrOutput {
	return o
}

func (o IncidentManagementServicePtrOutput) ToIncidentManagementServicePtrOutputWithContext(ctx context.Context) IncidentManagementServicePtrOutput {
	return o
}

func (o IncidentManagementServicePtrOutput) Elem() IncidentManagementServiceOutput {
	return o.ApplyT(func(v *IncidentManagementService) IncidentManagementService {
		if v != nil {
			return *v
		}
		var ret IncidentManagementService
		return ret
	}).(IncidentManagementServiceOutput)
}

func (o IncidentManagementServicePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o IncidentManagementServicePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *IncidentManagementService) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// IncidentManagementServiceInput is an input type that accepts values of the IncidentManagementService enum
// A concrete instance of `IncidentManagementServiceInput` can be one of the following:
//
//	IncidentManagementServiceIcm
type IncidentManagementServiceInput interface {
	pulumi.Input

	ToIncidentManagementServiceOutput() IncidentManagementServiceOutput
	ToIncidentManagementServiceOutputWithContext(context.Context) IncidentManagementServiceOutput
}

var incidentManagementServicePtrType = reflect.TypeOf((**IncidentManagementService)(nil)).Elem()

type IncidentManagementServicePtrInput interface {
	pulumi.Input

	ToIncidentManagementServicePtrOutput() IncidentManagementServicePtrOutput
	ToIncidentManagementServicePtrOutputWithContext(context.Context) IncidentManagementServicePtrOutput
}

type incidentManagementServicePtr string

func IncidentManagementServicePtr(v string) IncidentManagementServicePtrInput {
	return (*incidentManagementServicePtr)(&v)
}

func (*incidentManagementServicePtr) ElementType() reflect.Type {
	return incidentManagementServicePtrType
}

func (in *incidentManagementServicePtr) ToIncidentManagementServicePtrOutput() IncidentManagementServicePtrOutput {
	return pulumi.ToOutput(in).(IncidentManagementServicePtrOutput)
}

func (in *incidentManagementServicePtr) ToIncidentManagementServicePtrOutputWithContext(ctx context.Context) IncidentManagementServicePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(IncidentManagementServicePtrOutput)
}

// Define the destination's element. The element is the body or the attributes of the message, to which the json array mapper will write the output map.
type JsonMapperElement string

const (
	// Read or write the json array from or to the body of the message.
	JsonMapperElementBody = JsonMapperElement("body")
	// Read or write the json array from or to the attributes of the message.
	JsonMapperElementAttributes = JsonMapperElement("attributes")
)

func (JsonMapperElement) ElementType() reflect.Type {
	return reflect.TypeOf((*JsonMapperElement)(nil)).Elem()
}

func (e JsonMapperElement) ToJsonMapperElementOutput() JsonMapperElementOutput {
	return pulumi.ToOutput(e).(JsonMapperElementOutput)
}

func (e JsonMapperElement) ToJsonMapperElementOutputWithContext(ctx context.Context) JsonMapperElementOutput {
	return pulumi.ToOutputWithContext(ctx, e).(JsonMapperElementOutput)
}

func (e JsonMapperElement) ToJsonMapperElementPtrOutput() JsonMapperElementPtrOutput {
	return e.ToJsonMapperElementPtrOutputWithContext(context.Background())
}

func (e JsonMapperElement) ToJsonMapperElementPtrOutputWithContext(ctx context.Context) JsonMapperElementPtrOutput {
	return JsonMapperElement(e).ToJsonMapperElementOutputWithContext(ctx).ToJsonMapperElementPtrOutputWithContext(ctx)
}

func (e JsonMapperElement) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e JsonMapperElement) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e JsonMapperElement) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e JsonMapperElement) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type JsonMapperElementOutput struct{ *pulumi.OutputState }

func (JsonMapperElementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JsonMapperElement)(nil)).Elem()
}

func (o JsonMapperElementOutput) ToJsonMapperElementOutput() JsonMapperElementOutput {
	return o
}

func (o JsonMapperElementOutput) ToJsonMapperElementOutputWithContext(ctx context.Context) JsonMapperElementOutput {
	return o
}

func (o JsonMapperElementOutput) ToJsonMapperElementPtrOutput() JsonMapperElementPtrOutput {
	return o.ToJsonMapperElementPtrOutputWithContext(context.Background())
}

func (o JsonMapperElementOutput) ToJsonMapperElementPtrOutputWithContext(ctx context.Context) JsonMapperElementPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v JsonMapperElement) *JsonMapperElement {
		return &v
	}).(JsonMapperElementPtrOutput)
}

func (o JsonMapperElementOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o JsonMapperElementOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e JsonMapperElement) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o JsonMapperElementOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o JsonMapperElementOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e JsonMapperElement) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type JsonMapperElementPtrOutput struct{ *pulumi.OutputState }

func (JsonMapperElementPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**JsonMapperElement)(nil)).Elem()
}

func (o JsonMapperElementPtrOutput) ToJsonMapperElementPtrOutput() JsonMapperElementPtrOutput {
	return o
}

func (o JsonMapperElementPtrOutput) ToJsonMapperElementPtrOutputWithContext(ctx context.Context) JsonMapperElementPtrOutput {
	return o
}

func (o JsonMapperElementPtrOutput) Elem() JsonMapperElementOutput {
	return o.ApplyT(func(v *JsonMapperElement) JsonMapperElement {
		if v != nil {
			return *v
		}
		var ret JsonMapperElement
		return ret
	}).(JsonMapperElementOutput)
}

func (o JsonMapperElementPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o JsonMapperElementPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *JsonMapperElement) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// JsonMapperElementInput is an input type that accepts values of the JsonMapperElement enum
// A concrete instance of `JsonMapperElementInput` can be one of the following:
//
//	JsonMapperElementBody
//	JsonMapperElementAttributes
type JsonMapperElementInput interface {
	pulumi.Input

	ToJsonMapperElementOutput() JsonMapperElementOutput
	ToJsonMapperElementOutputWithContext(context.Context) JsonMapperElementOutput
}

var jsonMapperElementPtrType = reflect.TypeOf((**JsonMapperElement)(nil)).Elem()

type JsonMapperElementPtrInput interface {
	pulumi.Input

	ToJsonMapperElementPtrOutput() JsonMapperElementPtrOutput
	ToJsonMapperElementPtrOutputWithContext(context.Context) JsonMapperElementPtrOutput
}

type jsonMapperElementPtr string

func JsonMapperElementPtr(v string) JsonMapperElementPtrInput {
	return (*jsonMapperElementPtr)(&v)
}

func (*jsonMapperElementPtr) ElementType() reflect.Type {
	return jsonMapperElementPtrType
}

func (in *jsonMapperElementPtr) ToJsonMapperElementPtrOutput() JsonMapperElementPtrOutput {
	return pulumi.ToOutput(in).(JsonMapperElementPtrOutput)
}

func (in *jsonMapperElementPtr) ToJsonMapperElementPtrOutputWithContext(ctx context.Context) JsonMapperElementPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(JsonMapperElementPtrOutput)
}

// Indicates the type of scheduled query rule. The default is LogAlert.
type Kind string

const (
	KindLogAlert      = Kind("LogAlert")
	KindEventLogAlert = Kind("EventLogAlert")
	KindLogToMetric   = Kind("LogToMetric")
)

func (Kind) ElementType() reflect.Type {
	return reflect.TypeOf((*Kind)(nil)).Elem()
}

func (e Kind) ToKindOutput() KindOutput {
	return pulumi.ToOutput(e).(KindOutput)
}

func (e Kind) ToKindOutputWithContext(ctx context.Context) KindOutput {
	return pulumi.ToOutputWithContext(ctx, e).(KindOutput)
}

func (e Kind) ToKindPtrOutput() KindPtrOutput {
	return e.ToKindPtrOutputWithContext(context.Background())
}

func (e Kind) ToKindPtrOutputWithContext(ctx context.Context) KindPtrOutput {
	return Kind(e).ToKindOutputWithContext(ctx).ToKindPtrOutputWithContext(ctx)
}

func (e Kind) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e Kind) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e Kind) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e Kind) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type KindOutput struct{ *pulumi.OutputState }

func (KindOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Kind)(nil)).Elem()
}

func (o KindOutput) ToKindOutput() KindOutput {
	return o
}

func (o KindOutput) ToKindOutputWithContext(ctx context.Context) KindOutput {
	return o
}

func (o KindOutput) ToKindPtrOutput() KindPtrOutput {
	return o.ToKindPtrOutputWithContext(context.Background())
}

func (o KindOutput) ToKindPtrOutputWithContext(ctx context.Context) KindPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Kind) *Kind {
		return &v
	}).(KindPtrOutput)
}

func (o KindOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o KindOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e Kind) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o KindOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o KindOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e Kind) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type KindPtrOutput struct{ *pulumi.OutputState }

func (KindPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Kind)(nil)).Elem()
}

func (o KindPtrOutput) ToKindPtrOutput() KindPtrOutput {
	return o
}

func (o KindPtrOutput) ToKindPtrOutputWithContext(ctx context.Context) KindPtrOutput {
	return o
}

func (o KindPtrOutput) Elem() KindOutput {
	return o.ApplyT(func(v *Kind) Kind {
		if v != nil {
			return *v
		}
		var ret Kind
		return ret
	}).(KindOutput)
}

func (o KindPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o KindPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *Kind) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// KindInput is an input type that accepts values of the Kind enum
// A concrete instance of `KindInput` can be one of the following:
//
//	KindLogAlert
//	KindEventLogAlert
//	KindLogToMetric
type KindInput interface {
	pulumi.Input

	ToKindOutput() KindOutput
	ToKindOutputWithContext(context.Context) KindOutput
}

var kindPtrType = reflect.TypeOf((**Kind)(nil)).Elem()

type KindPtrInput interface {
	pulumi.Input

	ToKindPtrOutput() KindPtrOutput
	ToKindPtrOutputWithContext(context.Context) KindPtrOutput
}

type kindPtr string

func KindPtr(v string) KindPtrInput {
	return (*kindPtr)(&v)
}

func (*kindPtr) ElementType() reflect.Type {
	return kindPtrType
}

func (in *kindPtr) ToKindPtrOutput() KindPtrOutput {
	return pulumi.ToOutput(in).(KindPtrOutput)
}

func (in *kindPtr) ToKindPtrOutputWithContext(ctx context.Context) KindPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(KindPtrOutput)
}

// Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
type ManagedServiceIdentityType string

const (
	ManagedServiceIdentityTypeNone                         = ManagedServiceIdentityType("None")
	ManagedServiceIdentityTypeSystemAssigned               = ManagedServiceIdentityType("SystemAssigned")
	ManagedServiceIdentityTypeUserAssigned                 = ManagedServiceIdentityType("UserAssigned")
	ManagedServiceIdentityType_SystemAssigned_UserAssigned = ManagedServiceIdentityType("SystemAssigned,UserAssigned")
)

func (ManagedServiceIdentityType) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedServiceIdentityType)(nil)).Elem()
}

func (e ManagedServiceIdentityType) ToManagedServiceIdentityTypeOutput() ManagedServiceIdentityTypeOutput {
	return pulumi.ToOutput(e).(ManagedServiceIdentityTypeOutput)
}

func (e ManagedServiceIdentityType) ToManagedServiceIdentityTypeOutputWithContext(ctx context.Context) ManagedServiceIdentityTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ManagedServiceIdentityTypeOutput)
}

func (e ManagedServiceIdentityType) ToManagedServiceIdentityTypePtrOutput() ManagedServiceIdentityTypePtrOutput {
	return e.ToManagedServiceIdentityTypePtrOutputWithContext(context.Background())
}

func (e ManagedServiceIdentityType) ToManagedServiceIdentityTypePtrOutputWithContext(ctx context.Context) ManagedServiceIdentityTypePtrOutput {
	return ManagedServiceIdentityType(e).ToManagedServiceIdentityTypeOutputWithContext(ctx).ToManagedServiceIdentityTypePtrOutputWithContext(ctx)
}

func (e ManagedServiceIdentityType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ManagedServiceIdentityType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ManagedServiceIdentityType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ManagedServiceIdentityType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ManagedServiceIdentityTypeOutput struct{ *pulumi.OutputState }

func (ManagedServiceIdentityTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedServiceIdentityType)(nil)).Elem()
}

func (o ManagedServiceIdentityTypeOutput) ToManagedServiceIdentityTypeOutput() ManagedServiceIdentityTypeOutput {
	return o
}

func (o ManagedServiceIdentityTypeOutput) ToManagedServiceIdentityTypeOutputWithContext(ctx context.Context) ManagedServiceIdentityTypeOutput {
	return o
}

func (o ManagedServiceIdentityTypeOutput) ToManagedServiceIdentityTypePtrOutput() ManagedServiceIdentityTypePtrOutput {
	return o.ToManagedServiceIdentityTypePtrOutputWithContext(context.Background())
}

func (o ManagedServiceIdentityTypeOutput) ToManagedServiceIdentityTypePtrOutputWithContext(ctx context.Context) ManagedServiceIdentityTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ManagedServiceIdentityType) *ManagedServiceIdentityType {
		return &v
	}).(ManagedServiceIdentityTypePtrOutput)
}

func (o ManagedServiceIdentityTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ManagedServiceIdentityTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ManagedServiceIdentityType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ManagedServiceIdentityTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ManagedServiceIdentityTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ManagedServiceIdentityType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ManagedServiceIdentityTypePtrOutput struct{ *pulumi.OutputState }

func (ManagedServiceIdentityTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedServiceIdentityType)(nil)).Elem()
}

func (o ManagedServiceIdentityTypePtrOutput) ToManagedServiceIdentityTypePtrOutput() ManagedServiceIdentityTypePtrOutput {
	return o
}

func (o ManagedServiceIdentityTypePtrOutput) ToManagedServiceIdentityTypePtrOutputWithContext(ctx context.Context) ManagedServiceIdentityTypePtrOutput {
	return o
}

func (o ManagedServiceIdentityTypePtrOutput) Elem() ManagedServiceIdentityTypeOutput {
	return o.ApplyT(func(v *ManagedServiceIdentityType) ManagedServiceIdentityType {
		if v != nil {
			return *v
		}
		var ret ManagedServiceIdentityType
		return ret
	}).(ManagedServiceIdentityTypeOutput)
}

func (o ManagedServiceIdentityTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ManagedServiceIdentityTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ManagedServiceIdentityType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ManagedServiceIdentityTypeInput is an input type that accepts values of the ManagedServiceIdentityType enum
// A concrete instance of `ManagedServiceIdentityTypeInput` can be one of the following:
//
//	ManagedServiceIdentityTypeNone
//	ManagedServiceIdentityTypeSystemAssigned
//	ManagedServiceIdentityTypeUserAssigned
//	ManagedServiceIdentityType_SystemAssigned_UserAssigned
type ManagedServiceIdentityTypeInput interface {
	pulumi.Input

	ToManagedServiceIdentityTypeOutput() ManagedServiceIdentityTypeOutput
	ToManagedServiceIdentityTypeOutputWithContext(context.Context) ManagedServiceIdentityTypeOutput
}

var managedServiceIdentityTypePtrType = reflect.TypeOf((**ManagedServiceIdentityType)(nil)).Elem()

type ManagedServiceIdentityTypePtrInput interface {
	pulumi.Input

	ToManagedServiceIdentityTypePtrOutput() ManagedServiceIdentityTypePtrOutput
	ToManagedServiceIdentityTypePtrOutputWithContext(context.Context) ManagedServiceIdentityTypePtrOutput
}

type managedServiceIdentityTypePtr string

func ManagedServiceIdentityTypePtr(v string) ManagedServiceIdentityTypePtrInput {
	return (*managedServiceIdentityTypePtr)(&v)
}

func (*managedServiceIdentityTypePtr) ElementType() reflect.Type {
	return managedServiceIdentityTypePtrType
}

func (in *managedServiceIdentityTypePtr) ToManagedServiceIdentityTypePtrOutput() ManagedServiceIdentityTypePtrOutput {
	return pulumi.ToOutput(in).(ManagedServiceIdentityTypePtrOutput)
}

func (in *managedServiceIdentityTypePtr) ToManagedServiceIdentityTypePtrOutputWithContext(ctx context.Context) ManagedServiceIdentityTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ManagedServiceIdentityTypePtrOutput)
}

// the metric statistic type. How the metrics from multiple instances are combined.
type MetricStatisticType string

const (
	MetricStatisticTypeAverage = MetricStatisticType("Average")
	MetricStatisticTypeMin     = MetricStatisticType("Min")
	MetricStatisticTypeMax     = MetricStatisticType("Max")
	MetricStatisticTypeSum     = MetricStatisticType("Sum")
	MetricStatisticTypeCount   = MetricStatisticType("Count")
)

func (MetricStatisticType) ElementType() reflect.Type {
	return reflect.TypeOf((*MetricStatisticType)(nil)).Elem()
}

func (e MetricStatisticType) ToMetricStatisticTypeOutput() MetricStatisticTypeOutput {
	return pulumi.ToOutput(e).(MetricStatisticTypeOutput)
}

func (e MetricStatisticType) ToMetricStatisticTypeOutputWithContext(ctx context.Context) MetricStatisticTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(MetricStatisticTypeOutput)
}

func (e MetricStatisticType) ToMetricStatisticTypePtrOutput() MetricStatisticTypePtrOutput {
	return e.ToMetricStatisticTypePtrOutputWithContext(context.Background())
}

func (e MetricStatisticType) ToMetricStatisticTypePtrOutputWithContext(ctx context.Context) MetricStatisticTypePtrOutput {
	return MetricStatisticType(e).ToMetricStatisticTypeOutputWithContext(ctx).ToMetricStatisticTypePtrOutputWithContext(ctx)
}

func (e MetricStatisticType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e MetricStatisticType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e MetricStatisticType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e MetricStatisticType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type MetricStatisticTypeOutput struct{ *pulumi.OutputState }

func (MetricStatisticTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MetricStatisticType)(nil)).Elem()
}

func (o MetricStatisticTypeOutput) ToMetricStatisticTypeOutput() MetricStatisticTypeOutput {
	return o
}

func (o MetricStatisticTypeOutput) ToMetricStatisticTypeOutputWithContext(ctx context.Context) MetricStatisticTypeOutput {
	return o
}

func (o MetricStatisticTypeOutput) ToMetricStatisticTypePtrOutput() MetricStatisticTypePtrOutput {
	return o.ToMetricStatisticTypePtrOutputWithContext(context.Background())
}

func (o MetricStatisticTypeOutput) ToMetricStatisticTypePtrOutputWithContext(ctx context.Context) MetricStatisticTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MetricStatisticType) *MetricStatisticType {
		return &v
	}).(MetricStatisticTypePtrOutput)
}

func (o MetricStatisticTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o MetricStatisticTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e MetricStatisticType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o MetricStatisticTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o MetricStatisticTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e MetricStatisticType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type MetricStatisticTypePtrOutput struct{ *pulumi.OutputState }

func (MetricStatisticTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MetricStatisticType)(nil)).Elem()
}

func (o MetricStatisticTypePtrOutput) ToMetricStatisticTypePtrOutput() MetricStatisticTypePtrOutput {
	return o
}

func (o MetricStatisticTypePtrOutput) ToMetricStatisticTypePtrOutputWithContext(ctx context.Context) MetricStatisticTypePtrOutput {
	return o
}

func (o MetricStatisticTypePtrOutput) Elem() MetricStatisticTypeOutput {
	return o.ApplyT(func(v *MetricStatisticType) MetricStatisticType {
		if v != nil {
			return *v
		}
		var ret MetricStatisticType
		return ret
	}).(MetricStatisticTypeOutput)
}

func (o MetricStatisticTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o MetricStatisticTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *MetricStatisticType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// MetricStatisticTypeInput is an input type that accepts values of the MetricStatisticType enum
// A concrete instance of `MetricStatisticTypeInput` can be one of the following:
//
//	MetricStatisticTypeAverage
//	MetricStatisticTypeMin
//	MetricStatisticTypeMax
//	MetricStatisticTypeSum
//	MetricStatisticTypeCount
type MetricStatisticTypeInput interface {
	pulumi.Input

	ToMetricStatisticTypeOutput() MetricStatisticTypeOutput
	ToMetricStatisticTypeOutputWithContext(context.Context) MetricStatisticTypeOutput
}

var metricStatisticTypePtrType = reflect.TypeOf((**MetricStatisticType)(nil)).Elem()

type MetricStatisticTypePtrInput interface {
	pulumi.Input

	ToMetricStatisticTypePtrOutput() MetricStatisticTypePtrOutput
	ToMetricStatisticTypePtrOutputWithContext(context.Context) MetricStatisticTypePtrOutput
}

type metricStatisticTypePtr string

func MetricStatisticTypePtr(v string) MetricStatisticTypePtrInput {
	return (*metricStatisticTypePtr)(&v)
}

func (*metricStatisticTypePtr) ElementType() reflect.Type {
	return metricStatisticTypePtrType
}

func (in *metricStatisticTypePtr) ToMetricStatisticTypePtrOutput() MetricStatisticTypePtrOutput {
	return pulumi.ToOutput(in).(MetricStatisticTypePtrOutput)
}

func (in *metricStatisticTypePtr) ToMetricStatisticTypePtrOutputWithContext(ctx context.Context) MetricStatisticTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(MetricStatisticTypePtrOutput)
}

// the operation associated with the notification and its value must be "scale"
type OperationType string

const (
	OperationTypeScale = OperationType("Scale")
)

func (OperationType) ElementType() reflect.Type {
	return reflect.TypeOf((*OperationType)(nil)).Elem()
}

func (e OperationType) ToOperationTypeOutput() OperationTypeOutput {
	return pulumi.ToOutput(e).(OperationTypeOutput)
}

func (e OperationType) ToOperationTypeOutputWithContext(ctx context.Context) OperationTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(OperationTypeOutput)
}

func (e OperationType) ToOperationTypePtrOutput() OperationTypePtrOutput {
	return e.ToOperationTypePtrOutputWithContext(context.Background())
}

func (e OperationType) ToOperationTypePtrOutputWithContext(ctx context.Context) OperationTypePtrOutput {
	return OperationType(e).ToOperationTypeOutputWithContext(ctx).ToOperationTypePtrOutputWithContext(ctx)
}

func (e OperationType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e OperationType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e OperationType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e OperationType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type OperationTypeOutput struct{ *pulumi.OutputState }

func (OperationTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OperationType)(nil)).Elem()
}

func (o OperationTypeOutput) ToOperationTypeOutput() OperationTypeOutput {
	return o
}

func (o OperationTypeOutput) ToOperationTypeOutputWithContext(ctx context.Context) OperationTypeOutput {
	return o
}

func (o OperationTypeOutput) ToOperationTypePtrOutput() OperationTypePtrOutput {
	return o.ToOperationTypePtrOutputWithContext(context.Background())
}

func (o OperationTypeOutput) ToOperationTypePtrOutputWithContext(ctx context.Context) OperationTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OperationType) *OperationType {
		return &v
	}).(OperationTypePtrOutput)
}

func (o OperationTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o OperationTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e OperationType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o OperationTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o OperationTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e OperationType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type OperationTypePtrOutput struct{ *pulumi.OutputState }

func (OperationTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OperationType)(nil)).Elem()
}

func (o OperationTypePtrOutput) ToOperationTypePtrOutput() OperationTypePtrOutput {
	return o
}

func (o OperationTypePtrOutput) ToOperationTypePtrOutputWithContext(ctx context.Context) OperationTypePtrOutput {
	return o
}

func (o OperationTypePtrOutput) Elem() OperationTypeOutput {
	return o.ApplyT(func(v *OperationType) OperationType {
		if v != nil {
			return *v
		}
		var ret OperationType
		return ret
	}).(OperationTypeOutput)
}

func (o OperationTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o OperationTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *OperationType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// OperationTypeInput is an input type that accepts values of the OperationType enum
// A concrete instance of `OperationTypeInput` can be one of the following:
//
//	OperationTypeScale
type OperationTypeInput interface {
	pulumi.Input

	ToOperationTypeOutput() OperationTypeOutput
	ToOperationTypeOutputWithContext(context.Context) OperationTypeOutput
}

var operationTypePtrType = reflect.TypeOf((**OperationType)(nil)).Elem()

type OperationTypePtrInput interface {
	pulumi.Input

	ToOperationTypePtrOutput() OperationTypePtrOutput
	ToOperationTypePtrOutputWithContext(context.Context) OperationTypePtrOutput
}

type operationTypePtr string

func OperationTypePtr(v string) OperationTypePtrInput {
	return (*operationTypePtr)(&v)
}

func (*operationTypePtr) ElementType() reflect.Type {
	return operationTypePtrType
}

func (in *operationTypePtr) ToOperationTypePtrOutput() OperationTypePtrOutput {
	return pulumi.ToOutput(in).(OperationTypePtrOutput)
}

func (in *operationTypePtr) ToOperationTypePtrOutputWithContext(ctx context.Context) OperationTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(OperationTypePtrOutput)
}

// The type of pipeline
type PipelineType string

const (
	// Pipeline for logs telemetry.
	PipelineTypeLogs = PipelineType("Logs")
)

func (PipelineType) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineType)(nil)).Elem()
}

func (e PipelineType) ToPipelineTypeOutput() PipelineTypeOutput {
	return pulumi.ToOutput(e).(PipelineTypeOutput)
}

func (e PipelineType) ToPipelineTypeOutputWithContext(ctx context.Context) PipelineTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(PipelineTypeOutput)
}

func (e PipelineType) ToPipelineTypePtrOutput() PipelineTypePtrOutput {
	return e.ToPipelineTypePtrOutputWithContext(context.Background())
}

func (e PipelineType) ToPipelineTypePtrOutputWithContext(ctx context.Context) PipelineTypePtrOutput {
	return PipelineType(e).ToPipelineTypeOutputWithContext(ctx).ToPipelineTypePtrOutputWithContext(ctx)
}

func (e PipelineType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e PipelineType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e PipelineType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e PipelineType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type PipelineTypeOutput struct{ *pulumi.OutputState }

func (PipelineTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineType)(nil)).Elem()
}

func (o PipelineTypeOutput) ToPipelineTypeOutput() PipelineTypeOutput {
	return o
}

func (o PipelineTypeOutput) ToPipelineTypeOutputWithContext(ctx context.Context) PipelineTypeOutput {
	return o
}

func (o PipelineTypeOutput) ToPipelineTypePtrOutput() PipelineTypePtrOutput {
	return o.ToPipelineTypePtrOutputWithContext(context.Background())
}

func (o PipelineTypeOutput) ToPipelineTypePtrOutputWithContext(ctx context.Context) PipelineTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PipelineType) *PipelineType {
		return &v
	}).(PipelineTypePtrOutput)
}

func (o PipelineTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o PipelineTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PipelineType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o PipelineTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PipelineTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PipelineType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type PipelineTypePtrOutput struct{ *pulumi.OutputState }

func (PipelineTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PipelineType)(nil)).Elem()
}

func (o PipelineTypePtrOutput) ToPipelineTypePtrOutput() PipelineTypePtrOutput {
	return o
}

func (o PipelineTypePtrOutput) ToPipelineTypePtrOutputWithContext(ctx context.Context) PipelineTypePtrOutput {
	return o
}

func (o PipelineTypePtrOutput) Elem() PipelineTypeOutput {
	return o.ApplyT(func(v *PipelineType) PipelineType {
		if v != nil {
			return *v
		}
		var ret PipelineType
		return ret
	}).(PipelineTypeOutput)
}

func (o PipelineTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PipelineTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *PipelineType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// PipelineTypeInput is an input type that accepts values of the PipelineType enum
// A concrete instance of `PipelineTypeInput` can be one of the following:
//
//	PipelineTypeLogs
type PipelineTypeInput interface {
	pulumi.Input

	ToPipelineTypeOutput() PipelineTypeOutput
	ToPipelineTypeOutputWithContext(context.Context) PipelineTypeOutput
}

var pipelineTypePtrType = reflect.TypeOf((**PipelineType)(nil)).Elem()

type PipelineTypePtrInput interface {
	pulumi.Input

	ToPipelineTypePtrOutput() PipelineTypePtrOutput
	ToPipelineTypePtrOutputWithContext(context.Context) PipelineTypePtrOutput
}

type pipelineTypePtr string

func PipelineTypePtr(v string) PipelineTypePtrInput {
	return (*pipelineTypePtr)(&v)
}

func (*pipelineTypePtr) ElementType() reflect.Type {
	return pipelineTypePtrType
}

func (in *pipelineTypePtr) ToPipelineTypePtrOutput() PipelineTypePtrOutput {
	return pulumi.ToOutput(in).(PipelineTypePtrOutput)
}

func (in *pipelineTypePtr) ToPipelineTypePtrOutputWithContext(ctx context.Context) PipelineTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(PipelineTypePtrOutput)
}

// the predictive autoscale mode
type PredictiveAutoscalePolicyScaleMode string

const (
	PredictiveAutoscalePolicyScaleModeDisabled     = PredictiveAutoscalePolicyScaleMode("Disabled")
	PredictiveAutoscalePolicyScaleModeForecastOnly = PredictiveAutoscalePolicyScaleMode("ForecastOnly")
	PredictiveAutoscalePolicyScaleModeEnabled      = PredictiveAutoscalePolicyScaleMode("Enabled")
)

func (PredictiveAutoscalePolicyScaleMode) ElementType() reflect.Type {
	return reflect.TypeOf((*PredictiveAutoscalePolicyScaleMode)(nil)).Elem()
}

func (e PredictiveAutoscalePolicyScaleMode) ToPredictiveAutoscalePolicyScaleModeOutput() PredictiveAutoscalePolicyScaleModeOutput {
	return pulumi.ToOutput(e).(PredictiveAutoscalePolicyScaleModeOutput)
}

func (e PredictiveAutoscalePolicyScaleMode) ToPredictiveAutoscalePolicyScaleModeOutputWithContext(ctx context.Context) PredictiveAutoscalePolicyScaleModeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(PredictiveAutoscalePolicyScaleModeOutput)
}

func (e PredictiveAutoscalePolicyScaleMode) ToPredictiveAutoscalePolicyScaleModePtrOutput() PredictiveAutoscalePolicyScaleModePtrOutput {
	return e.ToPredictiveAutoscalePolicyScaleModePtrOutputWithContext(context.Background())
}

func (e PredictiveAutoscalePolicyScaleMode) ToPredictiveAutoscalePolicyScaleModePtrOutputWithContext(ctx context.Context) PredictiveAutoscalePolicyScaleModePtrOutput {
	return PredictiveAutoscalePolicyScaleMode(e).ToPredictiveAutoscalePolicyScaleModeOutputWithContext(ctx).ToPredictiveAutoscalePolicyScaleModePtrOutputWithContext(ctx)
}

func (e PredictiveAutoscalePolicyScaleMode) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e PredictiveAutoscalePolicyScaleMode) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e PredictiveAutoscalePolicyScaleMode) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e PredictiveAutoscalePolicyScaleMode) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type PredictiveAutoscalePolicyScaleModeOutput struct{ *pulumi.OutputState }

func (PredictiveAutoscalePolicyScaleModeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PredictiveAutoscalePolicyScaleMode)(nil)).Elem()
}

func (o PredictiveAutoscalePolicyScaleModeOutput) ToPredictiveAutoscalePolicyScaleModeOutput() PredictiveAutoscalePolicyScaleModeOutput {
	return o
}

func (o PredictiveAutoscalePolicyScaleModeOutput) ToPredictiveAutoscalePolicyScaleModeOutputWithContext(ctx context.Context) PredictiveAutoscalePolicyScaleModeOutput {
	return o
}

func (o PredictiveAutoscalePolicyScaleModeOutput) ToPredictiveAutoscalePolicyScaleModePtrOutput() PredictiveAutoscalePolicyScaleModePtrOutput {
	return o.ToPredictiveAutoscalePolicyScaleModePtrOutputWithContext(context.Background())
}

func (o PredictiveAutoscalePolicyScaleModeOutput) ToPredictiveAutoscalePolicyScaleModePtrOutputWithContext(ctx context.Context) PredictiveAutoscalePolicyScaleModePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PredictiveAutoscalePolicyScaleMode) *PredictiveAutoscalePolicyScaleMode {
		return &v
	}).(PredictiveAutoscalePolicyScaleModePtrOutput)
}

func (o PredictiveAutoscalePolicyScaleModeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o PredictiveAutoscalePolicyScaleModeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PredictiveAutoscalePolicyScaleMode) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o PredictiveAutoscalePolicyScaleModeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PredictiveAutoscalePolicyScaleModeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PredictiveAutoscalePolicyScaleMode) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type PredictiveAutoscalePolicyScaleModePtrOutput struct{ *pulumi.OutputState }

func (PredictiveAutoscalePolicyScaleModePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PredictiveAutoscalePolicyScaleMode)(nil)).Elem()
}

func (o PredictiveAutoscalePolicyScaleModePtrOutput) ToPredictiveAutoscalePolicyScaleModePtrOutput() PredictiveAutoscalePolicyScaleModePtrOutput {
	return o
}

func (o PredictiveAutoscalePolicyScaleModePtrOutput) ToPredictiveAutoscalePolicyScaleModePtrOutputWithContext(ctx context.Context) PredictiveAutoscalePolicyScaleModePtrOutput {
	return o
}

func (o PredictiveAutoscalePolicyScaleModePtrOutput) Elem() PredictiveAutoscalePolicyScaleModeOutput {
	return o.ApplyT(func(v *PredictiveAutoscalePolicyScaleMode) PredictiveAutoscalePolicyScaleMode {
		if v != nil {
			return *v
		}
		var ret PredictiveAutoscalePolicyScaleMode
		return ret
	}).(PredictiveAutoscalePolicyScaleModeOutput)
}

func (o PredictiveAutoscalePolicyScaleModePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PredictiveAutoscalePolicyScaleModePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *PredictiveAutoscalePolicyScaleMode) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// PredictiveAutoscalePolicyScaleModeInput is an input type that accepts values of the PredictiveAutoscalePolicyScaleMode enum
// A concrete instance of `PredictiveAutoscalePolicyScaleModeInput` can be one of the following:
//
//	PredictiveAutoscalePolicyScaleModeDisabled
//	PredictiveAutoscalePolicyScaleModeForecastOnly
//	PredictiveAutoscalePolicyScaleModeEnabled
type PredictiveAutoscalePolicyScaleModeInput interface {
	pulumi.Input

	ToPredictiveAutoscalePolicyScaleModeOutput() PredictiveAutoscalePolicyScaleModeOutput
	ToPredictiveAutoscalePolicyScaleModeOutputWithContext(context.Context) PredictiveAutoscalePolicyScaleModeOutput
}

var predictiveAutoscalePolicyScaleModePtrType = reflect.TypeOf((**PredictiveAutoscalePolicyScaleMode)(nil)).Elem()

type PredictiveAutoscalePolicyScaleModePtrInput interface {
	pulumi.Input

	ToPredictiveAutoscalePolicyScaleModePtrOutput() PredictiveAutoscalePolicyScaleModePtrOutput
	ToPredictiveAutoscalePolicyScaleModePtrOutputWithContext(context.Context) PredictiveAutoscalePolicyScaleModePtrOutput
}

type predictiveAutoscalePolicyScaleModePtr string

func PredictiveAutoscalePolicyScaleModePtr(v string) PredictiveAutoscalePolicyScaleModePtrInput {
	return (*predictiveAutoscalePolicyScaleModePtr)(&v)
}

func (*predictiveAutoscalePolicyScaleModePtr) ElementType() reflect.Type {
	return predictiveAutoscalePolicyScaleModePtrType
}

func (in *predictiveAutoscalePolicyScaleModePtr) ToPredictiveAutoscalePolicyScaleModePtrOutput() PredictiveAutoscalePolicyScaleModePtrOutput {
	return pulumi.ToOutput(in).(PredictiveAutoscalePolicyScaleModePtrOutput)
}

func (in *predictiveAutoscalePolicyScaleModePtr) ToPredictiveAutoscalePolicyScaleModePtrOutputWithContext(ctx context.Context) PredictiveAutoscalePolicyScaleModePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(PredictiveAutoscalePolicyScaleModePtrOutput)
}

// Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
type PrivateEndpointServiceConnectionStatus string

const (
	PrivateEndpointServiceConnectionStatusPending  = PrivateEndpointServiceConnectionStatus("Pending")
	PrivateEndpointServiceConnectionStatusApproved = PrivateEndpointServiceConnectionStatus("Approved")
	PrivateEndpointServiceConnectionStatusRejected = PrivateEndpointServiceConnectionStatus("Rejected")
)

func (PrivateEndpointServiceConnectionStatus) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateEndpointServiceConnectionStatus)(nil)).Elem()
}

func (e PrivateEndpointServiceConnectionStatus) ToPrivateEndpointServiceConnectionStatusOutput() PrivateEndpointServiceConnectionStatusOutput {
	return pulumi.ToOutput(e).(PrivateEndpointServiceConnectionStatusOutput)
}

func (e PrivateEndpointServiceConnectionStatus) ToPrivateEndpointServiceConnectionStatusOutputWithContext(ctx context.Context) PrivateEndpointServiceConnectionStatusOutput {
	return pulumi.ToOutputWithContext(ctx, e).(PrivateEndpointServiceConnectionStatusOutput)
}

func (e PrivateEndpointServiceConnectionStatus) ToPrivateEndpointServiceConnectionStatusPtrOutput() PrivateEndpointServiceConnectionStatusPtrOutput {
	return e.ToPrivateEndpointServiceConnectionStatusPtrOutputWithContext(context.Background())
}

func (e PrivateEndpointServiceConnectionStatus) ToPrivateEndpointServiceConnectionStatusPtrOutputWithContext(ctx context.Context) PrivateEndpointServiceConnectionStatusPtrOutput {
	return PrivateEndpointServiceConnectionStatus(e).ToPrivateEndpointServiceConnectionStatusOutputWithContext(ctx).ToPrivateEndpointServiceConnectionStatusPtrOutputWithContext(ctx)
}

func (e PrivateEndpointServiceConnectionStatus) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e PrivateEndpointServiceConnectionStatus) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e PrivateEndpointServiceConnectionStatus) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e PrivateEndpointServiceConnectionStatus) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type PrivateEndpointServiceConnectionStatusOutput struct{ *pulumi.OutputState }

func (PrivateEndpointServiceConnectionStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateEndpointServiceConnectionStatus)(nil)).Elem()
}

func (o PrivateEndpointServiceConnectionStatusOutput) ToPrivateEndpointServiceConnectionStatusOutput() PrivateEndpointServiceConnectionStatusOutput {
	return o
}

func (o PrivateEndpointServiceConnectionStatusOutput) ToPrivateEndpointServiceConnectionStatusOutputWithContext(ctx context.Context) PrivateEndpointServiceConnectionStatusOutput {
	return o
}

func (o PrivateEndpointServiceConnectionStatusOutput) ToPrivateEndpointServiceConnectionStatusPtrOutput() PrivateEndpointServiceConnectionStatusPtrOutput {
	return o.ToPrivateEndpointServiceConnectionStatusPtrOutputWithContext(context.Background())
}

func (o PrivateEndpointServiceConnectionStatusOutput) ToPrivateEndpointServiceConnectionStatusPtrOutputWithContext(ctx context.Context) PrivateEndpointServiceConnectionStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PrivateEndpointServiceConnectionStatus) *PrivateEndpointServiceConnectionStatus {
		return &v
	}).(PrivateEndpointServiceConnectionStatusPtrOutput)
}

func (o PrivateEndpointServiceConnectionStatusOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o PrivateEndpointServiceConnectionStatusOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PrivateEndpointServiceConnectionStatus) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o PrivateEndpointServiceConnectionStatusOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PrivateEndpointServiceConnectionStatusOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PrivateEndpointServiceConnectionStatus) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type PrivateEndpointServiceConnectionStatusPtrOutput struct{ *pulumi.OutputState }

func (PrivateEndpointServiceConnectionStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateEndpointServiceConnectionStatus)(nil)).Elem()
}

func (o PrivateEndpointServiceConnectionStatusPtrOutput) ToPrivateEndpointServiceConnectionStatusPtrOutput() PrivateEndpointServiceConnectionStatusPtrOutput {
	return o
}

func (o PrivateEndpointServiceConnectionStatusPtrOutput) ToPrivateEndpointServiceConnectionStatusPtrOutputWithContext(ctx context.Context) PrivateEndpointServiceConnectionStatusPtrOutput {
	return o
}

func (o PrivateEndpointServiceConnectionStatusPtrOutput) Elem() PrivateEndpointServiceConnectionStatusOutput {
	return o.ApplyT(func(v *PrivateEndpointServiceConnectionStatus) PrivateEndpointServiceConnectionStatus {
		if v != nil {
			return *v
		}
		var ret PrivateEndpointServiceConnectionStatus
		return ret
	}).(PrivateEndpointServiceConnectionStatusOutput)
}

func (o PrivateEndpointServiceConnectionStatusPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PrivateEndpointServiceConnectionStatusPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *PrivateEndpointServiceConnectionStatus) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// PrivateEndpointServiceConnectionStatusInput is an input type that accepts values of the PrivateEndpointServiceConnectionStatus enum
// A concrete instance of `PrivateEndpointServiceConnectionStatusInput` can be one of the following:
//
//	PrivateEndpointServiceConnectionStatusPending
//	PrivateEndpointServiceConnectionStatusApproved
//	PrivateEndpointServiceConnectionStatusRejected
type PrivateEndpointServiceConnectionStatusInput interface {
	pulumi.Input

	ToPrivateEndpointServiceConnectionStatusOutput() PrivateEndpointServiceConnectionStatusOutput
	ToPrivateEndpointServiceConnectionStatusOutputWithContext(context.Context) PrivateEndpointServiceConnectionStatusOutput
}

var privateEndpointServiceConnectionStatusPtrType = reflect.TypeOf((**PrivateEndpointServiceConnectionStatus)(nil)).Elem()

type PrivateEndpointServiceConnectionStatusPtrInput interface {
	pulumi.Input

	ToPrivateEndpointServiceConnectionStatusPtrOutput() PrivateEndpointServiceConnectionStatusPtrOutput
	ToPrivateEndpointServiceConnectionStatusPtrOutputWithContext(context.Context) PrivateEndpointServiceConnectionStatusPtrOutput
}

type privateEndpointServiceConnectionStatusPtr string

func PrivateEndpointServiceConnectionStatusPtr(v string) PrivateEndpointServiceConnectionStatusPtrInput {
	return (*privateEndpointServiceConnectionStatusPtr)(&v)
}

func (*privateEndpointServiceConnectionStatusPtr) ElementType() reflect.Type {
	return privateEndpointServiceConnectionStatusPtrType
}

func (in *privateEndpointServiceConnectionStatusPtr) ToPrivateEndpointServiceConnectionStatusPtrOutput() PrivateEndpointServiceConnectionStatusPtrOutput {
	return pulumi.ToOutput(in).(PrivateEndpointServiceConnectionStatusPtrOutput)
}

func (in *privateEndpointServiceConnectionStatusPtr) ToPrivateEndpointServiceConnectionStatusPtrOutputWithContext(ctx context.Context) PrivateEndpointServiceConnectionStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(PrivateEndpointServiceConnectionStatusPtrOutput)
}

// The type of processor.
type ProcessorType string

const (
	// Batch processor.
	ProcessorTypeBatch = ProcessorType("Batch")
)

func (ProcessorType) ElementType() reflect.Type {
	return reflect.TypeOf((*ProcessorType)(nil)).Elem()
}

func (e ProcessorType) ToProcessorTypeOutput() ProcessorTypeOutput {
	return pulumi.ToOutput(e).(ProcessorTypeOutput)
}

func (e ProcessorType) ToProcessorTypeOutputWithContext(ctx context.Context) ProcessorTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ProcessorTypeOutput)
}

func (e ProcessorType) ToProcessorTypePtrOutput() ProcessorTypePtrOutput {
	return e.ToProcessorTypePtrOutputWithContext(context.Background())
}

func (e ProcessorType) ToProcessorTypePtrOutputWithContext(ctx context.Context) ProcessorTypePtrOutput {
	return ProcessorType(e).ToProcessorTypeOutputWithContext(ctx).ToProcessorTypePtrOutputWithContext(ctx)
}

func (e ProcessorType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ProcessorType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ProcessorType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ProcessorType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ProcessorTypeOutput struct{ *pulumi.OutputState }

func (ProcessorTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProcessorType)(nil)).Elem()
}

func (o ProcessorTypeOutput) ToProcessorTypeOutput() ProcessorTypeOutput {
	return o
}

func (o ProcessorTypeOutput) ToProcessorTypeOutputWithContext(ctx context.Context) ProcessorTypeOutput {
	return o
}

func (o ProcessorTypeOutput) ToProcessorTypePtrOutput() ProcessorTypePtrOutput {
	return o.ToProcessorTypePtrOutputWithContext(context.Background())
}

func (o ProcessorTypeOutput) ToProcessorTypePtrOutputWithContext(ctx context.Context) ProcessorTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProcessorType) *ProcessorType {
		return &v
	}).(ProcessorTypePtrOutput)
}

func (o ProcessorTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ProcessorTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ProcessorType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ProcessorTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ProcessorTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ProcessorType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ProcessorTypePtrOutput struct{ *pulumi.OutputState }

func (ProcessorTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProcessorType)(nil)).Elem()
}

func (o ProcessorTypePtrOutput) ToProcessorTypePtrOutput() ProcessorTypePtrOutput {
	return o
}

func (o ProcessorTypePtrOutput) ToProcessorTypePtrOutputWithContext(ctx context.Context) ProcessorTypePtrOutput {
	return o
}

func (o ProcessorTypePtrOutput) Elem() ProcessorTypeOutput {
	return o.ApplyT(func(v *ProcessorType) ProcessorType {
		if v != nil {
			return *v
		}
		var ret ProcessorType
		return ret
	}).(ProcessorTypeOutput)
}

func (o ProcessorTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ProcessorTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ProcessorType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ProcessorTypeInput is an input type that accepts values of the ProcessorType enum
// A concrete instance of `ProcessorTypeInput` can be one of the following:
//
//	ProcessorTypeBatch
type ProcessorTypeInput interface {
	pulumi.Input

	ToProcessorTypeOutput() ProcessorTypeOutput
	ToProcessorTypeOutputWithContext(context.Context) ProcessorTypeOutput
}

var processorTypePtrType = reflect.TypeOf((**ProcessorType)(nil)).Elem()

type ProcessorTypePtrInput interface {
	pulumi.Input

	ToProcessorTypePtrOutput() ProcessorTypePtrOutput
	ToProcessorTypePtrOutputWithContext(context.Context) ProcessorTypePtrOutput
}

type processorTypePtr string

func ProcessorTypePtr(v string) ProcessorTypePtrInput {
	return (*processorTypePtr)(&v)
}

func (*processorTypePtr) ElementType() reflect.Type {
	return processorTypePtrType
}

func (in *processorTypePtr) ToProcessorTypePtrOutput() ProcessorTypePtrOutput {
	return pulumi.ToOutput(in).(ProcessorTypePtrOutput)
}

func (in *processorTypePtr) ToProcessorTypePtrOutputWithContext(ctx context.Context) ProcessorTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ProcessorTypePtrOutput)
}

// The type of receiver.
type ReceiverType string

const (
	// Linux syslog.
	ReceiverTypeSyslog = ReceiverType("Syslog")
	// Receives data from azure monitor agent receiver.
	ReceiverTypeAma = ReceiverType("Ama")
	// Receives data from another pipeline group.
	ReceiverTypePipelineGroup = ReceiverType("PipelineGroup")
	// Receives data from a OTLP collector.
	ReceiverTypeOTLP = ReceiverType("OTLP")
	// Receives data from an UDP collector.
	ReceiverTypeUDP = ReceiverType("UDP")
)

func (ReceiverType) ElementType() reflect.Type {
	return reflect.TypeOf((*ReceiverType)(nil)).Elem()
}

func (e ReceiverType) ToReceiverTypeOutput() ReceiverTypeOutput {
	return pulumi.ToOutput(e).(ReceiverTypeOutput)
}

func (e ReceiverType) ToReceiverTypeOutputWithContext(ctx context.Context) ReceiverTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ReceiverTypeOutput)
}

func (e ReceiverType) ToReceiverTypePtrOutput() ReceiverTypePtrOutput {
	return e.ToReceiverTypePtrOutputWithContext(context.Background())
}

func (e ReceiverType) ToReceiverTypePtrOutputWithContext(ctx context.Context) ReceiverTypePtrOutput {
	return ReceiverType(e).ToReceiverTypeOutputWithContext(ctx).ToReceiverTypePtrOutputWithContext(ctx)
}

func (e ReceiverType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ReceiverType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ReceiverType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ReceiverType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ReceiverTypeOutput struct{ *pulumi.OutputState }

func (ReceiverTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReceiverType)(nil)).Elem()
}

func (o ReceiverTypeOutput) ToReceiverTypeOutput() ReceiverTypeOutput {
	return o
}

func (o ReceiverTypeOutput) ToReceiverTypeOutputWithContext(ctx context.Context) ReceiverTypeOutput {
	return o
}

func (o ReceiverTypeOutput) ToReceiverTypePtrOutput() ReceiverTypePtrOutput {
	return o.ToReceiverTypePtrOutputWithContext(context.Background())
}

func (o ReceiverTypeOutput) ToReceiverTypePtrOutputWithContext(ctx context.Context) ReceiverTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ReceiverType) *ReceiverType {
		return &v
	}).(ReceiverTypePtrOutput)
}

func (o ReceiverTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ReceiverTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ReceiverType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ReceiverTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ReceiverTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ReceiverType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ReceiverTypePtrOutput struct{ *pulumi.OutputState }

func (ReceiverTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ReceiverType)(nil)).Elem()
}

func (o ReceiverTypePtrOutput) ToReceiverTypePtrOutput() ReceiverTypePtrOutput {
	return o
}

func (o ReceiverTypePtrOutput) ToReceiverTypePtrOutputWithContext(ctx context.Context) ReceiverTypePtrOutput {
	return o
}

func (o ReceiverTypePtrOutput) Elem() ReceiverTypeOutput {
	return o.ApplyT(func(v *ReceiverType) ReceiverType {
		if v != nil {
			return *v
		}
		var ret ReceiverType
		return ret
	}).(ReceiverTypeOutput)
}

func (o ReceiverTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ReceiverTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ReceiverType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ReceiverTypeInput is an input type that accepts values of the ReceiverType enum
// A concrete instance of `ReceiverTypeInput` can be one of the following:
//
//	ReceiverTypeSyslog
//	ReceiverTypeAma
//	ReceiverTypePipelineGroup
//	ReceiverTypeOTLP
//	ReceiverTypeUDP
type ReceiverTypeInput interface {
	pulumi.Input

	ToReceiverTypeOutput() ReceiverTypeOutput
	ToReceiverTypeOutputWithContext(context.Context) ReceiverTypeOutput
}

var receiverTypePtrType = reflect.TypeOf((**ReceiverType)(nil)).Elem()

type ReceiverTypePtrInput interface {
	pulumi.Input

	ToReceiverTypePtrOutput() ReceiverTypePtrOutput
	ToReceiverTypePtrOutputWithContext(context.Context) ReceiverTypePtrOutput
}

type receiverTypePtr string

func ReceiverTypePtr(v string) ReceiverTypePtrInput {
	return (*receiverTypePtr)(&v)
}

func (*receiverTypePtr) ElementType() reflect.Type {
	return receiverTypePtrType
}

func (in *receiverTypePtr) ToReceiverTypePtrOutput() ReceiverTypePtrOutput {
	return pulumi.ToOutput(in).(ReceiverTypePtrOutput)
}

func (in *receiverTypePtr) ToReceiverTypePtrOutputWithContext(ctx context.Context) ReceiverTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ReceiverTypePtrOutput)
}

// the recurrence frequency. How often the schedule profile should take effect. This value must be Week, meaning each week will have the same set of profiles. For example, to set a daily schedule, set **schedule** to every day of the week. The frequency property specifies that the schedule is repeated weekly.
type RecurrenceFrequency string

const (
	RecurrenceFrequencyNone   = RecurrenceFrequency("None")
	RecurrenceFrequencySecond = RecurrenceFrequency("Second")
	RecurrenceFrequencyMinute = RecurrenceFrequency("Minute")
	RecurrenceFrequencyHour   = RecurrenceFrequency("Hour")
	RecurrenceFrequencyDay    = RecurrenceFrequency("Day")
	RecurrenceFrequencyWeek   = RecurrenceFrequency("Week")
	RecurrenceFrequencyMonth  = RecurrenceFrequency("Month")
	RecurrenceFrequencyYear   = RecurrenceFrequency("Year")
)

func (RecurrenceFrequency) ElementType() reflect.Type {
	return reflect.TypeOf((*RecurrenceFrequency)(nil)).Elem()
}

func (e RecurrenceFrequency) ToRecurrenceFrequencyOutput() RecurrenceFrequencyOutput {
	return pulumi.ToOutput(e).(RecurrenceFrequencyOutput)
}

func (e RecurrenceFrequency) ToRecurrenceFrequencyOutputWithContext(ctx context.Context) RecurrenceFrequencyOutput {
	return pulumi.ToOutputWithContext(ctx, e).(RecurrenceFrequencyOutput)
}

func (e RecurrenceFrequency) ToRecurrenceFrequencyPtrOutput() RecurrenceFrequencyPtrOutput {
	return e.ToRecurrenceFrequencyPtrOutputWithContext(context.Background())
}

func (e RecurrenceFrequency) ToRecurrenceFrequencyPtrOutputWithContext(ctx context.Context) RecurrenceFrequencyPtrOutput {
	return RecurrenceFrequency(e).ToRecurrenceFrequencyOutputWithContext(ctx).ToRecurrenceFrequencyPtrOutputWithContext(ctx)
}

func (e RecurrenceFrequency) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e RecurrenceFrequency) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e RecurrenceFrequency) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e RecurrenceFrequency) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type RecurrenceFrequencyOutput struct{ *pulumi.OutputState }

func (RecurrenceFrequencyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RecurrenceFrequency)(nil)).Elem()
}

func (o RecurrenceFrequencyOutput) ToRecurrenceFrequencyOutput() RecurrenceFrequencyOutput {
	return o
}

func (o RecurrenceFrequencyOutput) ToRecurrenceFrequencyOutputWithContext(ctx context.Context) RecurrenceFrequencyOutput {
	return o
}

func (o RecurrenceFrequencyOutput) ToRecurrenceFrequencyPtrOutput() RecurrenceFrequencyPtrOutput {
	return o.ToRecurrenceFrequencyPtrOutputWithContext(context.Background())
}

func (o RecurrenceFrequencyOutput) ToRecurrenceFrequencyPtrOutputWithContext(ctx context.Context) RecurrenceFrequencyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RecurrenceFrequency) *RecurrenceFrequency {
		return &v
	}).(RecurrenceFrequencyPtrOutput)
}

func (o RecurrenceFrequencyOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o RecurrenceFrequencyOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RecurrenceFrequency) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o RecurrenceFrequencyOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RecurrenceFrequencyOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RecurrenceFrequency) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type RecurrenceFrequencyPtrOutput struct{ *pulumi.OutputState }

func (RecurrenceFrequencyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RecurrenceFrequency)(nil)).Elem()
}

func (o RecurrenceFrequencyPtrOutput) ToRecurrenceFrequencyPtrOutput() RecurrenceFrequencyPtrOutput {
	return o
}

func (o RecurrenceFrequencyPtrOutput) ToRecurrenceFrequencyPtrOutputWithContext(ctx context.Context) RecurrenceFrequencyPtrOutput {
	return o
}

func (o RecurrenceFrequencyPtrOutput) Elem() RecurrenceFrequencyOutput {
	return o.ApplyT(func(v *RecurrenceFrequency) RecurrenceFrequency {
		if v != nil {
			return *v
		}
		var ret RecurrenceFrequency
		return ret
	}).(RecurrenceFrequencyOutput)
}

func (o RecurrenceFrequencyPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RecurrenceFrequencyPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *RecurrenceFrequency) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// RecurrenceFrequencyInput is an input type that accepts values of the RecurrenceFrequency enum
// A concrete instance of `RecurrenceFrequencyInput` can be one of the following:
//
//	RecurrenceFrequencyNone
//	RecurrenceFrequencySecond
//	RecurrenceFrequencyMinute
//	RecurrenceFrequencyHour
//	RecurrenceFrequencyDay
//	RecurrenceFrequencyWeek
//	RecurrenceFrequencyMonth
//	RecurrenceFrequencyYear
type RecurrenceFrequencyInput interface {
	pulumi.Input

	ToRecurrenceFrequencyOutput() RecurrenceFrequencyOutput
	ToRecurrenceFrequencyOutputWithContext(context.Context) RecurrenceFrequencyOutput
}

var recurrenceFrequencyPtrType = reflect.TypeOf((**RecurrenceFrequency)(nil)).Elem()

type RecurrenceFrequencyPtrInput interface {
	pulumi.Input

	ToRecurrenceFrequencyPtrOutput() RecurrenceFrequencyPtrOutput
	ToRecurrenceFrequencyPtrOutputWithContext(context.Context) RecurrenceFrequencyPtrOutput
}

type recurrenceFrequencyPtr string

func RecurrenceFrequencyPtr(v string) RecurrenceFrequencyPtrInput {
	return (*recurrenceFrequencyPtr)(&v)
}

func (*recurrenceFrequencyPtr) ElementType() reflect.Type {
	return recurrenceFrequencyPtrType
}

func (in *recurrenceFrequencyPtr) ToRecurrenceFrequencyPtrOutput() RecurrenceFrequencyPtrOutput {
	return pulumi.ToOutput(in).(RecurrenceFrequencyPtrOutput)
}

func (in *recurrenceFrequencyPtr) ToRecurrenceFrequencyPtrOutputWithContext(ctx context.Context) RecurrenceFrequencyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(RecurrenceFrequencyPtrOutput)
}

// the scale direction. Whether the scaling action increases or decreases the number of instances.
type ScaleDirection string

const (
	ScaleDirectionNone     = ScaleDirection("None")
	ScaleDirectionIncrease = ScaleDirection("Increase")
	ScaleDirectionDecrease = ScaleDirection("Decrease")
)

func (ScaleDirection) ElementType() reflect.Type {
	return reflect.TypeOf((*ScaleDirection)(nil)).Elem()
}

func (e ScaleDirection) ToScaleDirectionOutput() ScaleDirectionOutput {
	return pulumi.ToOutput(e).(ScaleDirectionOutput)
}

func (e ScaleDirection) ToScaleDirectionOutputWithContext(ctx context.Context) ScaleDirectionOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ScaleDirectionOutput)
}

func (e ScaleDirection) ToScaleDirectionPtrOutput() ScaleDirectionPtrOutput {
	return e.ToScaleDirectionPtrOutputWithContext(context.Background())
}

func (e ScaleDirection) ToScaleDirectionPtrOutputWithContext(ctx context.Context) ScaleDirectionPtrOutput {
	return ScaleDirection(e).ToScaleDirectionOutputWithContext(ctx).ToScaleDirectionPtrOutputWithContext(ctx)
}

func (e ScaleDirection) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ScaleDirection) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ScaleDirection) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ScaleDirection) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ScaleDirectionOutput struct{ *pulumi.OutputState }

func (ScaleDirectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScaleDirection)(nil)).Elem()
}

func (o ScaleDirectionOutput) ToScaleDirectionOutput() ScaleDirectionOutput {
	return o
}

func (o ScaleDirectionOutput) ToScaleDirectionOutputWithContext(ctx context.Context) ScaleDirectionOutput {
	return o
}

func (o ScaleDirectionOutput) ToScaleDirectionPtrOutput() ScaleDirectionPtrOutput {
	return o.ToScaleDirectionPtrOutputWithContext(context.Background())
}

func (o ScaleDirectionOutput) ToScaleDirectionPtrOutputWithContext(ctx context.Context) ScaleDirectionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ScaleDirection) *ScaleDirection {
		return &v
	}).(ScaleDirectionPtrOutput)
}

func (o ScaleDirectionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ScaleDirectionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ScaleDirection) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ScaleDirectionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ScaleDirectionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ScaleDirection) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ScaleDirectionPtrOutput struct{ *pulumi.OutputState }

func (ScaleDirectionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ScaleDirection)(nil)).Elem()
}

func (o ScaleDirectionPtrOutput) ToScaleDirectionPtrOutput() ScaleDirectionPtrOutput {
	return o
}

func (o ScaleDirectionPtrOutput) ToScaleDirectionPtrOutputWithContext(ctx context.Context) ScaleDirectionPtrOutput {
	return o
}

func (o ScaleDirectionPtrOutput) Elem() ScaleDirectionOutput {
	return o.ApplyT(func(v *ScaleDirection) ScaleDirection {
		if v != nil {
			return *v
		}
		var ret ScaleDirection
		return ret
	}).(ScaleDirectionOutput)
}

func (o ScaleDirectionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ScaleDirectionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ScaleDirection) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ScaleDirectionInput is an input type that accepts values of the ScaleDirection enum
// A concrete instance of `ScaleDirectionInput` can be one of the following:
//
//	ScaleDirectionNone
//	ScaleDirectionIncrease
//	ScaleDirectionDecrease
type ScaleDirectionInput interface {
	pulumi.Input

	ToScaleDirectionOutput() ScaleDirectionOutput
	ToScaleDirectionOutputWithContext(context.Context) ScaleDirectionOutput
}

var scaleDirectionPtrType = reflect.TypeOf((**ScaleDirection)(nil)).Elem()

type ScaleDirectionPtrInput interface {
	pulumi.Input

	ToScaleDirectionPtrOutput() ScaleDirectionPtrOutput
	ToScaleDirectionPtrOutputWithContext(context.Context) ScaleDirectionPtrOutput
}

type scaleDirectionPtr string

func ScaleDirectionPtr(v string) ScaleDirectionPtrInput {
	return (*scaleDirectionPtr)(&v)
}

func (*scaleDirectionPtr) ElementType() reflect.Type {
	return scaleDirectionPtrType
}

func (in *scaleDirectionPtr) ToScaleDirectionPtrOutput() ScaleDirectionPtrOutput {
	return pulumi.ToOutput(in).(ScaleDirectionPtrOutput)
}

func (in *scaleDirectionPtr) ToScaleDirectionPtrOutputWithContext(ctx context.Context) ScaleDirectionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ScaleDirectionPtrOutput)
}

// the dimension operator. Only 'Equals' and 'NotEquals' are supported. 'Equals' being equal to any of the values. 'NotEquals' being not equal to all of the values
type ScaleRuleMetricDimensionOperationType string

const (
	ScaleRuleMetricDimensionOperationTypeEquals    = ScaleRuleMetricDimensionOperationType("Equals")
	ScaleRuleMetricDimensionOperationTypeNotEquals = ScaleRuleMetricDimensionOperationType("NotEquals")
)

func (ScaleRuleMetricDimensionOperationType) ElementType() reflect.Type {
	return reflect.TypeOf((*ScaleRuleMetricDimensionOperationType)(nil)).Elem()
}

func (e ScaleRuleMetricDimensionOperationType) ToScaleRuleMetricDimensionOperationTypeOutput() ScaleRuleMetricDimensionOperationTypeOutput {
	return pulumi.ToOutput(e).(ScaleRuleMetricDimensionOperationTypeOutput)
}

func (e ScaleRuleMetricDimensionOperationType) ToScaleRuleMetricDimensionOperationTypeOutputWithContext(ctx context.Context) ScaleRuleMetricDimensionOperationTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ScaleRuleMetricDimensionOperationTypeOutput)
}

func (e ScaleRuleMetricDimensionOperationType) ToScaleRuleMetricDimensionOperationTypePtrOutput() ScaleRuleMetricDimensionOperationTypePtrOutput {
	return e.ToScaleRuleMetricDimensionOperationTypePtrOutputWithContext(context.Background())
}

func (e ScaleRuleMetricDimensionOperationType) ToScaleRuleMetricDimensionOperationTypePtrOutputWithContext(ctx context.Context) ScaleRuleMetricDimensionOperationTypePtrOutput {
	return ScaleRuleMetricDimensionOperationType(e).ToScaleRuleMetricDimensionOperationTypeOutputWithContext(ctx).ToScaleRuleMetricDimensionOperationTypePtrOutputWithContext(ctx)
}

func (e ScaleRuleMetricDimensionOperationType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ScaleRuleMetricDimensionOperationType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ScaleRuleMetricDimensionOperationType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ScaleRuleMetricDimensionOperationType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ScaleRuleMetricDimensionOperationTypeOutput struct{ *pulumi.OutputState }

func (ScaleRuleMetricDimensionOperationTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScaleRuleMetricDimensionOperationType)(nil)).Elem()
}

func (o ScaleRuleMetricDimensionOperationTypeOutput) ToScaleRuleMetricDimensionOperationTypeOutput() ScaleRuleMetricDimensionOperationTypeOutput {
	return o
}

func (o ScaleRuleMetricDimensionOperationTypeOutput) ToScaleRuleMetricDimensionOperationTypeOutputWithContext(ctx context.Context) ScaleRuleMetricDimensionOperationTypeOutput {
	return o
}

func (o ScaleRuleMetricDimensionOperationTypeOutput) ToScaleRuleMetricDimensionOperationTypePtrOutput() ScaleRuleMetricDimensionOperationTypePtrOutput {
	return o.ToScaleRuleMetricDimensionOperationTypePtrOutputWithContext(context.Background())
}

func (o ScaleRuleMetricDimensionOperationTypeOutput) ToScaleRuleMetricDimensionOperationTypePtrOutputWithContext(ctx context.Context) ScaleRuleMetricDimensionOperationTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ScaleRuleMetricDimensionOperationType) *ScaleRuleMetricDimensionOperationType {
		return &v
	}).(ScaleRuleMetricDimensionOperationTypePtrOutput)
}

func (o ScaleRuleMetricDimensionOperationTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ScaleRuleMetricDimensionOperationTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ScaleRuleMetricDimensionOperationType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ScaleRuleMetricDimensionOperationTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ScaleRuleMetricDimensionOperationTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ScaleRuleMetricDimensionOperationType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ScaleRuleMetricDimensionOperationTypePtrOutput struct{ *pulumi.OutputState }

func (ScaleRuleMetricDimensionOperationTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ScaleRuleMetricDimensionOperationType)(nil)).Elem()
}

func (o ScaleRuleMetricDimensionOperationTypePtrOutput) ToScaleRuleMetricDimensionOperationTypePtrOutput() ScaleRuleMetricDimensionOperationTypePtrOutput {
	return o
}

func (o ScaleRuleMetricDimensionOperationTypePtrOutput) ToScaleRuleMetricDimensionOperationTypePtrOutputWithContext(ctx context.Context) ScaleRuleMetricDimensionOperationTypePtrOutput {
	return o
}

func (o ScaleRuleMetricDimensionOperationTypePtrOutput) Elem() ScaleRuleMetricDimensionOperationTypeOutput {
	return o.ApplyT(func(v *ScaleRuleMetricDimensionOperationType) ScaleRuleMetricDimensionOperationType {
		if v != nil {
			return *v
		}
		var ret ScaleRuleMetricDimensionOperationType
		return ret
	}).(ScaleRuleMetricDimensionOperationTypeOutput)
}

func (o ScaleRuleMetricDimensionOperationTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ScaleRuleMetricDimensionOperationTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ScaleRuleMetricDimensionOperationType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ScaleRuleMetricDimensionOperationTypeInput is an input type that accepts values of the ScaleRuleMetricDimensionOperationType enum
// A concrete instance of `ScaleRuleMetricDimensionOperationTypeInput` can be one of the following:
//
//	ScaleRuleMetricDimensionOperationTypeEquals
//	ScaleRuleMetricDimensionOperationTypeNotEquals
type ScaleRuleMetricDimensionOperationTypeInput interface {
	pulumi.Input

	ToScaleRuleMetricDimensionOperationTypeOutput() ScaleRuleMetricDimensionOperationTypeOutput
	ToScaleRuleMetricDimensionOperationTypeOutputWithContext(context.Context) ScaleRuleMetricDimensionOperationTypeOutput
}

var scaleRuleMetricDimensionOperationTypePtrType = reflect.TypeOf((**ScaleRuleMetricDimensionOperationType)(nil)).Elem()

type ScaleRuleMetricDimensionOperationTypePtrInput interface {
	pulumi.Input

	ToScaleRuleMetricDimensionOperationTypePtrOutput() ScaleRuleMetricDimensionOperationTypePtrOutput
	ToScaleRuleMetricDimensionOperationTypePtrOutputWithContext(context.Context) ScaleRuleMetricDimensionOperationTypePtrOutput
}

type scaleRuleMetricDimensionOperationTypePtr string

func ScaleRuleMetricDimensionOperationTypePtr(v string) ScaleRuleMetricDimensionOperationTypePtrInput {
	return (*scaleRuleMetricDimensionOperationTypePtr)(&v)
}

func (*scaleRuleMetricDimensionOperationTypePtr) ElementType() reflect.Type {
	return scaleRuleMetricDimensionOperationTypePtrType
}

func (in *scaleRuleMetricDimensionOperationTypePtr) ToScaleRuleMetricDimensionOperationTypePtrOutput() ScaleRuleMetricDimensionOperationTypePtrOutput {
	return pulumi.ToOutput(in).(ScaleRuleMetricDimensionOperationTypePtrOutput)
}

func (in *scaleRuleMetricDimensionOperationTypePtr) ToScaleRuleMetricDimensionOperationTypePtrOutputWithContext(ctx context.Context) ScaleRuleMetricDimensionOperationTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ScaleRuleMetricDimensionOperationTypePtrOutput)
}

// the type of action that should occur when the scale rule fires.
type ScaleType string

const (
	ScaleTypeChangeCount             = ScaleType("ChangeCount")
	ScaleTypePercentChangeCount      = ScaleType("PercentChangeCount")
	ScaleTypeExactCount              = ScaleType("ExactCount")
	ScaleTypeServiceAllowedNextValue = ScaleType("ServiceAllowedNextValue")
)

func (ScaleType) ElementType() reflect.Type {
	return reflect.TypeOf((*ScaleType)(nil)).Elem()
}

func (e ScaleType) ToScaleTypeOutput() ScaleTypeOutput {
	return pulumi.ToOutput(e).(ScaleTypeOutput)
}

func (e ScaleType) ToScaleTypeOutputWithContext(ctx context.Context) ScaleTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ScaleTypeOutput)
}

func (e ScaleType) ToScaleTypePtrOutput() ScaleTypePtrOutput {
	return e.ToScaleTypePtrOutputWithContext(context.Background())
}

func (e ScaleType) ToScaleTypePtrOutputWithContext(ctx context.Context) ScaleTypePtrOutput {
	return ScaleType(e).ToScaleTypeOutputWithContext(ctx).ToScaleTypePtrOutputWithContext(ctx)
}

func (e ScaleType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ScaleType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ScaleType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ScaleType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ScaleTypeOutput struct{ *pulumi.OutputState }

func (ScaleTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScaleType)(nil)).Elem()
}

func (o ScaleTypeOutput) ToScaleTypeOutput() ScaleTypeOutput {
	return o
}

func (o ScaleTypeOutput) ToScaleTypeOutputWithContext(ctx context.Context) ScaleTypeOutput {
	return o
}

func (o ScaleTypeOutput) ToScaleTypePtrOutput() ScaleTypePtrOutput {
	return o.ToScaleTypePtrOutputWithContext(context.Background())
}

func (o ScaleTypeOutput) ToScaleTypePtrOutputWithContext(ctx context.Context) ScaleTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ScaleType) *ScaleType {
		return &v
	}).(ScaleTypePtrOutput)
}

func (o ScaleTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ScaleTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ScaleType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ScaleTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ScaleTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ScaleType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ScaleTypePtrOutput struct{ *pulumi.OutputState }

func (ScaleTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ScaleType)(nil)).Elem()
}

func (o ScaleTypePtrOutput) ToScaleTypePtrOutput() ScaleTypePtrOutput {
	return o
}

func (o ScaleTypePtrOutput) ToScaleTypePtrOutputWithContext(ctx context.Context) ScaleTypePtrOutput {
	return o
}

func (o ScaleTypePtrOutput) Elem() ScaleTypeOutput {
	return o.ApplyT(func(v *ScaleType) ScaleType {
		if v != nil {
			return *v
		}
		var ret ScaleType
		return ret
	}).(ScaleTypeOutput)
}

func (o ScaleTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ScaleTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ScaleType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ScaleTypeInput is an input type that accepts values of the ScaleType enum
// A concrete instance of `ScaleTypeInput` can be one of the following:
//
//	ScaleTypeChangeCount
//	ScaleTypePercentChangeCount
//	ScaleTypeExactCount
//	ScaleTypeServiceAllowedNextValue
type ScaleTypeInput interface {
	pulumi.Input

	ToScaleTypeOutput() ScaleTypeOutput
	ToScaleTypeOutputWithContext(context.Context) ScaleTypeOutput
}

var scaleTypePtrType = reflect.TypeOf((**ScaleType)(nil)).Elem()

type ScaleTypePtrInput interface {
	pulumi.Input

	ToScaleTypePtrOutput() ScaleTypePtrOutput
	ToScaleTypePtrOutputWithContext(context.Context) ScaleTypePtrOutput
}

type scaleTypePtr string

func ScaleTypePtr(v string) ScaleTypePtrInput {
	return (*scaleTypePtr)(&v)
}

func (*scaleTypePtr) ElementType() reflect.Type {
	return scaleTypePtrType
}

func (in *scaleTypePtr) ToScaleTypePtrOutput() ScaleTypePtrOutput {
	return pulumi.ToOutput(in).(ScaleTypePtrOutput)
}

func (in *scaleTypePtr) ToScaleTypePtrOutputWithContext(ctx context.Context) ScaleTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ScaleTypePtrOutput)
}

// The kind of scoped Azure monitor resource.
type ScopedResourceKind string

const (
	ScopedResourceKindResource = ScopedResourceKind("Resource")
	ScopedResourceKindMetrics  = ScopedResourceKind("Metrics")
)

func (ScopedResourceKind) ElementType() reflect.Type {
	return reflect.TypeOf((*ScopedResourceKind)(nil)).Elem()
}

func (e ScopedResourceKind) ToScopedResourceKindOutput() ScopedResourceKindOutput {
	return pulumi.ToOutput(e).(ScopedResourceKindOutput)
}

func (e ScopedResourceKind) ToScopedResourceKindOutputWithContext(ctx context.Context) ScopedResourceKindOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ScopedResourceKindOutput)
}

func (e ScopedResourceKind) ToScopedResourceKindPtrOutput() ScopedResourceKindPtrOutput {
	return e.ToScopedResourceKindPtrOutputWithContext(context.Background())
}

func (e ScopedResourceKind) ToScopedResourceKindPtrOutputWithContext(ctx context.Context) ScopedResourceKindPtrOutput {
	return ScopedResourceKind(e).ToScopedResourceKindOutputWithContext(ctx).ToScopedResourceKindPtrOutputWithContext(ctx)
}

func (e ScopedResourceKind) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ScopedResourceKind) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ScopedResourceKind) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ScopedResourceKind) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ScopedResourceKindOutput struct{ *pulumi.OutputState }

func (ScopedResourceKindOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScopedResourceKind)(nil)).Elem()
}

func (o ScopedResourceKindOutput) ToScopedResourceKindOutput() ScopedResourceKindOutput {
	return o
}

func (o ScopedResourceKindOutput) ToScopedResourceKindOutputWithContext(ctx context.Context) ScopedResourceKindOutput {
	return o
}

func (o ScopedResourceKindOutput) ToScopedResourceKindPtrOutput() ScopedResourceKindPtrOutput {
	return o.ToScopedResourceKindPtrOutputWithContext(context.Background())
}

func (o ScopedResourceKindOutput) ToScopedResourceKindPtrOutputWithContext(ctx context.Context) ScopedResourceKindPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ScopedResourceKind) *ScopedResourceKind {
		return &v
	}).(ScopedResourceKindPtrOutput)
}

func (o ScopedResourceKindOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ScopedResourceKindOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ScopedResourceKind) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ScopedResourceKindOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ScopedResourceKindOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ScopedResourceKind) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ScopedResourceKindPtrOutput struct{ *pulumi.OutputState }

func (ScopedResourceKindPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ScopedResourceKind)(nil)).Elem()
}

func (o ScopedResourceKindPtrOutput) ToScopedResourceKindPtrOutput() ScopedResourceKindPtrOutput {
	return o
}

func (o ScopedResourceKindPtrOutput) ToScopedResourceKindPtrOutputWithContext(ctx context.Context) ScopedResourceKindPtrOutput {
	return o
}

func (o ScopedResourceKindPtrOutput) Elem() ScopedResourceKindOutput {
	return o.ApplyT(func(v *ScopedResourceKind) ScopedResourceKind {
		if v != nil {
			return *v
		}
		var ret ScopedResourceKind
		return ret
	}).(ScopedResourceKindOutput)
}

func (o ScopedResourceKindPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ScopedResourceKindPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ScopedResourceKind) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ScopedResourceKindInput is an input type that accepts values of the ScopedResourceKind enum
// A concrete instance of `ScopedResourceKindInput` can be one of the following:
//
//	ScopedResourceKindResource
//	ScopedResourceKindMetrics
type ScopedResourceKindInput interface {
	pulumi.Input

	ToScopedResourceKindOutput() ScopedResourceKindOutput
	ToScopedResourceKindOutputWithContext(context.Context) ScopedResourceKindOutput
}

var scopedResourceKindPtrType = reflect.TypeOf((**ScopedResourceKind)(nil)).Elem()

type ScopedResourceKindPtrInput interface {
	pulumi.Input

	ToScopedResourceKindPtrOutput() ScopedResourceKindPtrOutput
	ToScopedResourceKindPtrOutputWithContext(context.Context) ScopedResourceKindPtrOutput
}

type scopedResourceKindPtr string

func ScopedResourceKindPtr(v string) ScopedResourceKindPtrInput {
	return (*scopedResourceKindPtr)(&v)
}

func (*scopedResourceKindPtr) ElementType() reflect.Type {
	return scopedResourceKindPtrType
}

func (in *scopedResourceKindPtr) ToScopedResourceKindPtrOutput() ScopedResourceKindPtrOutput {
	return pulumi.ToOutput(in).(ScopedResourceKindPtrOutput)
}

func (in *scopedResourceKindPtr) ToScopedResourceKindPtrOutputWithContext(ctx context.Context) ScopedResourceKindPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ScopedResourceKindPtrOutput)
}

// The encoding of the stream being received.
type StreamEncodingType string

const (
	// No encoding validation. Treats the file as a stream of raw bytes.
	StreamEncodingTypeNop = StreamEncodingType("nop")
	// UTF-8 encoding.
	StreamEncodingType_Utf_8 = StreamEncodingType("utf-8")
	// UTF-16 encoding with little-endian byte order.
	StreamEncodingType_Utf_16le = StreamEncodingType("utf-16le")
	// UTF-16 encoding with little-endian byte order.
	StreamEncodingType_Utf_16be = StreamEncodingType("utf-16be")
	// ASCII encoding.
	StreamEncodingTypeAscii = StreamEncodingType("ascii")
	// The Big5 Chinese character encoding.
	StreamEncodingTypeBig5 = StreamEncodingType("big5")
)

func (StreamEncodingType) ElementType() reflect.Type {
	return reflect.TypeOf((*StreamEncodingType)(nil)).Elem()
}

func (e StreamEncodingType) ToStreamEncodingTypeOutput() StreamEncodingTypeOutput {
	return pulumi.ToOutput(e).(StreamEncodingTypeOutput)
}

func (e StreamEncodingType) ToStreamEncodingTypeOutputWithContext(ctx context.Context) StreamEncodingTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(StreamEncodingTypeOutput)
}

func (e StreamEncodingType) ToStreamEncodingTypePtrOutput() StreamEncodingTypePtrOutput {
	return e.ToStreamEncodingTypePtrOutputWithContext(context.Background())
}

func (e StreamEncodingType) ToStreamEncodingTypePtrOutputWithContext(ctx context.Context) StreamEncodingTypePtrOutput {
	return StreamEncodingType(e).ToStreamEncodingTypeOutputWithContext(ctx).ToStreamEncodingTypePtrOutputWithContext(ctx)
}

func (e StreamEncodingType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e StreamEncodingType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e StreamEncodingType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e StreamEncodingType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type StreamEncodingTypeOutput struct{ *pulumi.OutputState }

func (StreamEncodingTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StreamEncodingType)(nil)).Elem()
}

func (o StreamEncodingTypeOutput) ToStreamEncodingTypeOutput() StreamEncodingTypeOutput {
	return o
}

func (o StreamEncodingTypeOutput) ToStreamEncodingTypeOutputWithContext(ctx context.Context) StreamEncodingTypeOutput {
	return o
}

func (o StreamEncodingTypeOutput) ToStreamEncodingTypePtrOutput() StreamEncodingTypePtrOutput {
	return o.ToStreamEncodingTypePtrOutputWithContext(context.Background())
}

func (o StreamEncodingTypeOutput) ToStreamEncodingTypePtrOutputWithContext(ctx context.Context) StreamEncodingTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v StreamEncodingType) *StreamEncodingType {
		return &v
	}).(StreamEncodingTypePtrOutput)
}

func (o StreamEncodingTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o StreamEncodingTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e StreamEncodingType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o StreamEncodingTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o StreamEncodingTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e StreamEncodingType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type StreamEncodingTypePtrOutput struct{ *pulumi.OutputState }

func (StreamEncodingTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StreamEncodingType)(nil)).Elem()
}

func (o StreamEncodingTypePtrOutput) ToStreamEncodingTypePtrOutput() StreamEncodingTypePtrOutput {
	return o
}

func (o StreamEncodingTypePtrOutput) ToStreamEncodingTypePtrOutputWithContext(ctx context.Context) StreamEncodingTypePtrOutput {
	return o
}

func (o StreamEncodingTypePtrOutput) Elem() StreamEncodingTypeOutput {
	return o.ApplyT(func(v *StreamEncodingType) StreamEncodingType {
		if v != nil {
			return *v
		}
		var ret StreamEncodingType
		return ret
	}).(StreamEncodingTypeOutput)
}

func (o StreamEncodingTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o StreamEncodingTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *StreamEncodingType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// StreamEncodingTypeInput is an input type that accepts values of the StreamEncodingType enum
// A concrete instance of `StreamEncodingTypeInput` can be one of the following:
//
//	StreamEncodingTypeNop
//	StreamEncodingType_Utf_8
//	StreamEncodingType_Utf_16le
//	StreamEncodingType_Utf_16be
//	StreamEncodingTypeAscii
//	StreamEncodingTypeBig5
type StreamEncodingTypeInput interface {
	pulumi.Input

	ToStreamEncodingTypeOutput() StreamEncodingTypeOutput
	ToStreamEncodingTypeOutputWithContext(context.Context) StreamEncodingTypeOutput
}

var streamEncodingTypePtrType = reflect.TypeOf((**StreamEncodingType)(nil)).Elem()

type StreamEncodingTypePtrInput interface {
	pulumi.Input

	ToStreamEncodingTypePtrOutput() StreamEncodingTypePtrOutput
	ToStreamEncodingTypePtrOutputWithContext(context.Context) StreamEncodingTypePtrOutput
}

type streamEncodingTypePtr string

func StreamEncodingTypePtr(v string) StreamEncodingTypePtrInput {
	return (*streamEncodingTypePtr)(&v)
}

func (*streamEncodingTypePtr) ElementType() reflect.Type {
	return streamEncodingTypePtrType
}

func (in *streamEncodingTypePtr) ToStreamEncodingTypePtrOutput() StreamEncodingTypePtrOutput {
	return pulumi.ToOutput(in).(StreamEncodingTypePtrOutput)
}

func (in *streamEncodingTypePtr) ToStreamEncodingTypePtrOutputWithContext(ctx context.Context) StreamEncodingTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(StreamEncodingTypePtrOutput)
}

// Protocol to parse syslog messages. Default rfc3164
type SyslogProtocol string

const (
	// rfc3164 protocol.
	SyslogProtocolRfc3164 = SyslogProtocol("rfc3164")
	// rfc5424 protocol.
	SyslogProtocolRfc5424 = SyslogProtocol("rfc5424")
)

func (SyslogProtocol) ElementType() reflect.Type {
	return reflect.TypeOf((*SyslogProtocol)(nil)).Elem()
}

func (e SyslogProtocol) ToSyslogProtocolOutput() SyslogProtocolOutput {
	return pulumi.ToOutput(e).(SyslogProtocolOutput)
}

func (e SyslogProtocol) ToSyslogProtocolOutputWithContext(ctx context.Context) SyslogProtocolOutput {
	return pulumi.ToOutputWithContext(ctx, e).(SyslogProtocolOutput)
}

func (e SyslogProtocol) ToSyslogProtocolPtrOutput() SyslogProtocolPtrOutput {
	return e.ToSyslogProtocolPtrOutputWithContext(context.Background())
}

func (e SyslogProtocol) ToSyslogProtocolPtrOutputWithContext(ctx context.Context) SyslogProtocolPtrOutput {
	return SyslogProtocol(e).ToSyslogProtocolOutputWithContext(ctx).ToSyslogProtocolPtrOutputWithContext(ctx)
}

func (e SyslogProtocol) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e SyslogProtocol) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e SyslogProtocol) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e SyslogProtocol) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type SyslogProtocolOutput struct{ *pulumi.OutputState }

func (SyslogProtocolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SyslogProtocol)(nil)).Elem()
}

func (o SyslogProtocolOutput) ToSyslogProtocolOutput() SyslogProtocolOutput {
	return o
}

func (o SyslogProtocolOutput) ToSyslogProtocolOutputWithContext(ctx context.Context) SyslogProtocolOutput {
	return o
}

func (o SyslogProtocolOutput) ToSyslogProtocolPtrOutput() SyslogProtocolPtrOutput {
	return o.ToSyslogProtocolPtrOutputWithContext(context.Background())
}

func (o SyslogProtocolOutput) ToSyslogProtocolPtrOutputWithContext(ctx context.Context) SyslogProtocolPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SyslogProtocol) *SyslogProtocol {
		return &v
	}).(SyslogProtocolPtrOutput)
}

func (o SyslogProtocolOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o SyslogProtocolOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SyslogProtocol) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o SyslogProtocolOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SyslogProtocolOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SyslogProtocol) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type SyslogProtocolPtrOutput struct{ *pulumi.OutputState }

func (SyslogProtocolPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SyslogProtocol)(nil)).Elem()
}

func (o SyslogProtocolPtrOutput) ToSyslogProtocolPtrOutput() SyslogProtocolPtrOutput {
	return o
}

func (o SyslogProtocolPtrOutput) ToSyslogProtocolPtrOutputWithContext(ctx context.Context) SyslogProtocolPtrOutput {
	return o
}

func (o SyslogProtocolPtrOutput) Elem() SyslogProtocolOutput {
	return o.ApplyT(func(v *SyslogProtocol) SyslogProtocol {
		if v != nil {
			return *v
		}
		var ret SyslogProtocol
		return ret
	}).(SyslogProtocolOutput)
}

func (o SyslogProtocolPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SyslogProtocolPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *SyslogProtocol) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// SyslogProtocolInput is an input type that accepts values of the SyslogProtocol enum
// A concrete instance of `SyslogProtocolInput` can be one of the following:
//
//	SyslogProtocolRfc3164
//	SyslogProtocolRfc5424
type SyslogProtocolInput interface {
	pulumi.Input

	ToSyslogProtocolOutput() SyslogProtocolOutput
	ToSyslogProtocolOutputWithContext(context.Context) SyslogProtocolOutput
}

var syslogProtocolPtrType = reflect.TypeOf((**SyslogProtocol)(nil)).Elem()

type SyslogProtocolPtrInput interface {
	pulumi.Input

	ToSyslogProtocolPtrOutput() SyslogProtocolPtrOutput
	ToSyslogProtocolPtrOutputWithContext(context.Context) SyslogProtocolPtrOutput
}

type syslogProtocolPtr string

func SyslogProtocolPtr(v string) SyslogProtocolPtrInput {
	return (*syslogProtocolPtr)(&v)
}

func (*syslogProtocolPtr) ElementType() reflect.Type {
	return syslogProtocolPtrType
}

func (in *syslogProtocolPtr) ToSyslogProtocolPtrOutput() SyslogProtocolPtrOutput {
	return pulumi.ToOutput(in).(SyslogProtocolPtrOutput)
}

func (in *syslogProtocolPtr) ToSyslogProtocolPtrOutputWithContext(ctx context.Context) SyslogProtocolPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(SyslogProtocolPtrOutput)
}

// Aggregation type. Relevant and required only for rules of the kind LogAlert.
type TimeAggregation string

const (
	TimeAggregationCount   = TimeAggregation("Count")
	TimeAggregationAverage = TimeAggregation("Average")
	TimeAggregationMinimum = TimeAggregation("Minimum")
	TimeAggregationMaximum = TimeAggregation("Maximum")
	TimeAggregationTotal   = TimeAggregation("Total")
)

func (TimeAggregation) ElementType() reflect.Type {
	return reflect.TypeOf((*TimeAggregation)(nil)).Elem()
}

func (e TimeAggregation) ToTimeAggregationOutput() TimeAggregationOutput {
	return pulumi.ToOutput(e).(TimeAggregationOutput)
}

func (e TimeAggregation) ToTimeAggregationOutputWithContext(ctx context.Context) TimeAggregationOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TimeAggregationOutput)
}

func (e TimeAggregation) ToTimeAggregationPtrOutput() TimeAggregationPtrOutput {
	return e.ToTimeAggregationPtrOutputWithContext(context.Background())
}

func (e TimeAggregation) ToTimeAggregationPtrOutputWithContext(ctx context.Context) TimeAggregationPtrOutput {
	return TimeAggregation(e).ToTimeAggregationOutputWithContext(ctx).ToTimeAggregationPtrOutputWithContext(ctx)
}

func (e TimeAggregation) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TimeAggregation) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TimeAggregation) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TimeAggregation) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TimeAggregationOutput struct{ *pulumi.OutputState }

func (TimeAggregationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TimeAggregation)(nil)).Elem()
}

func (o TimeAggregationOutput) ToTimeAggregationOutput() TimeAggregationOutput {
	return o
}

func (o TimeAggregationOutput) ToTimeAggregationOutputWithContext(ctx context.Context) TimeAggregationOutput {
	return o
}

func (o TimeAggregationOutput) ToTimeAggregationPtrOutput() TimeAggregationPtrOutput {
	return o.ToTimeAggregationPtrOutputWithContext(context.Background())
}

func (o TimeAggregationOutput) ToTimeAggregationPtrOutputWithContext(ctx context.Context) TimeAggregationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TimeAggregation) *TimeAggregation {
		return &v
	}).(TimeAggregationPtrOutput)
}

func (o TimeAggregationOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TimeAggregationOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TimeAggregation) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TimeAggregationOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TimeAggregationOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TimeAggregation) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TimeAggregationPtrOutput struct{ *pulumi.OutputState }

func (TimeAggregationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TimeAggregation)(nil)).Elem()
}

func (o TimeAggregationPtrOutput) ToTimeAggregationPtrOutput() TimeAggregationPtrOutput {
	return o
}

func (o TimeAggregationPtrOutput) ToTimeAggregationPtrOutputWithContext(ctx context.Context) TimeAggregationPtrOutput {
	return o
}

func (o TimeAggregationPtrOutput) Elem() TimeAggregationOutput {
	return o.ApplyT(func(v *TimeAggregation) TimeAggregation {
		if v != nil {
			return *v
		}
		var ret TimeAggregation
		return ret
	}).(TimeAggregationOutput)
}

func (o TimeAggregationPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TimeAggregationPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TimeAggregation) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TimeAggregationInput is an input type that accepts values of the TimeAggregation enum
// A concrete instance of `TimeAggregationInput` can be one of the following:
//
//	TimeAggregationCount
//	TimeAggregationAverage
//	TimeAggregationMinimum
//	TimeAggregationMaximum
//	TimeAggregationTotal
type TimeAggregationInput interface {
	pulumi.Input

	ToTimeAggregationOutput() TimeAggregationOutput
	ToTimeAggregationOutputWithContext(context.Context) TimeAggregationOutput
}

var timeAggregationPtrType = reflect.TypeOf((**TimeAggregation)(nil)).Elem()

type TimeAggregationPtrInput interface {
	pulumi.Input

	ToTimeAggregationPtrOutput() TimeAggregationPtrOutput
	ToTimeAggregationPtrOutputWithContext(context.Context) TimeAggregationPtrOutput
}

type timeAggregationPtr string

func TimeAggregationPtr(v string) TimeAggregationPtrInput {
	return (*timeAggregationPtr)(&v)
}

func (*timeAggregationPtr) ElementType() reflect.Type {
	return timeAggregationPtrType
}

func (in *timeAggregationPtr) ToTimeAggregationPtrOutput() TimeAggregationPtrOutput {
	return pulumi.ToOutput(in).(TimeAggregationPtrOutput)
}

func (in *timeAggregationPtr) ToTimeAggregationPtrOutputWithContext(ctx context.Context) TimeAggregationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TimeAggregationPtrOutput)
}

// time aggregation type. How the data that is collected should be combined over time. The default value is Average.
type TimeAggregationType string

const (
	TimeAggregationTypeAverage = TimeAggregationType("Average")
	TimeAggregationTypeMinimum = TimeAggregationType("Minimum")
	TimeAggregationTypeMaximum = TimeAggregationType("Maximum")
	TimeAggregationTypeTotal   = TimeAggregationType("Total")
	TimeAggregationTypeCount   = TimeAggregationType("Count")
	TimeAggregationTypeLast    = TimeAggregationType("Last")
)

func (TimeAggregationType) ElementType() reflect.Type {
	return reflect.TypeOf((*TimeAggregationType)(nil)).Elem()
}

func (e TimeAggregationType) ToTimeAggregationTypeOutput() TimeAggregationTypeOutput {
	return pulumi.ToOutput(e).(TimeAggregationTypeOutput)
}

func (e TimeAggregationType) ToTimeAggregationTypeOutputWithContext(ctx context.Context) TimeAggregationTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TimeAggregationTypeOutput)
}

func (e TimeAggregationType) ToTimeAggregationTypePtrOutput() TimeAggregationTypePtrOutput {
	return e.ToTimeAggregationTypePtrOutputWithContext(context.Background())
}

func (e TimeAggregationType) ToTimeAggregationTypePtrOutputWithContext(ctx context.Context) TimeAggregationTypePtrOutput {
	return TimeAggregationType(e).ToTimeAggregationTypeOutputWithContext(ctx).ToTimeAggregationTypePtrOutputWithContext(ctx)
}

func (e TimeAggregationType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TimeAggregationType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TimeAggregationType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TimeAggregationType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TimeAggregationTypeOutput struct{ *pulumi.OutputState }

func (TimeAggregationTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TimeAggregationType)(nil)).Elem()
}

func (o TimeAggregationTypeOutput) ToTimeAggregationTypeOutput() TimeAggregationTypeOutput {
	return o
}

func (o TimeAggregationTypeOutput) ToTimeAggregationTypeOutputWithContext(ctx context.Context) TimeAggregationTypeOutput {
	return o
}

func (o TimeAggregationTypeOutput) ToTimeAggregationTypePtrOutput() TimeAggregationTypePtrOutput {
	return o.ToTimeAggregationTypePtrOutputWithContext(context.Background())
}

func (o TimeAggregationTypeOutput) ToTimeAggregationTypePtrOutputWithContext(ctx context.Context) TimeAggregationTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TimeAggregationType) *TimeAggregationType {
		return &v
	}).(TimeAggregationTypePtrOutput)
}

func (o TimeAggregationTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TimeAggregationTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TimeAggregationType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TimeAggregationTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TimeAggregationTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TimeAggregationType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TimeAggregationTypePtrOutput struct{ *pulumi.OutputState }

func (TimeAggregationTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TimeAggregationType)(nil)).Elem()
}

func (o TimeAggregationTypePtrOutput) ToTimeAggregationTypePtrOutput() TimeAggregationTypePtrOutput {
	return o
}

func (o TimeAggregationTypePtrOutput) ToTimeAggregationTypePtrOutputWithContext(ctx context.Context) TimeAggregationTypePtrOutput {
	return o
}

func (o TimeAggregationTypePtrOutput) Elem() TimeAggregationTypeOutput {
	return o.ApplyT(func(v *TimeAggregationType) TimeAggregationType {
		if v != nil {
			return *v
		}
		var ret TimeAggregationType
		return ret
	}).(TimeAggregationTypeOutput)
}

func (o TimeAggregationTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TimeAggregationTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TimeAggregationType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TimeAggregationTypeInput is an input type that accepts values of the TimeAggregationType enum
// A concrete instance of `TimeAggregationTypeInput` can be one of the following:
//
//	TimeAggregationTypeAverage
//	TimeAggregationTypeMinimum
//	TimeAggregationTypeMaximum
//	TimeAggregationTypeTotal
//	TimeAggregationTypeCount
//	TimeAggregationTypeLast
type TimeAggregationTypeInput interface {
	pulumi.Input

	ToTimeAggregationTypeOutput() TimeAggregationTypeOutput
	ToTimeAggregationTypeOutputWithContext(context.Context) TimeAggregationTypeOutput
}

var timeAggregationTypePtrType = reflect.TypeOf((**TimeAggregationType)(nil)).Elem()

type TimeAggregationTypePtrInput interface {
	pulumi.Input

	ToTimeAggregationTypePtrOutput() TimeAggregationTypePtrOutput
	ToTimeAggregationTypePtrOutputWithContext(context.Context) TimeAggregationTypePtrOutput
}

type timeAggregationTypePtr string

func TimeAggregationTypePtr(v string) TimeAggregationTypePtrInput {
	return (*timeAggregationTypePtr)(&v)
}

func (*timeAggregationTypePtr) ElementType() reflect.Type {
	return timeAggregationTypePtrType
}

func (in *timeAggregationTypePtr) ToTimeAggregationTypePtrOutput() TimeAggregationTypePtrOutput {
	return pulumi.ToOutput(in).(TimeAggregationTypePtrOutput)
}

func (in *timeAggregationTypePtr) ToTimeAggregationTypePtrOutputWithContext(ctx context.Context) TimeAggregationTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TimeAggregationTypePtrOutput)
}

func init() {
	pulumi.RegisterOutputType(AccessModeOutput{})
	pulumi.RegisterOutputType(AccessModePtrOutput{})
	pulumi.RegisterOutputType(ComparisonOperationTypeOutput{})
	pulumi.RegisterOutputType(ComparisonOperationTypePtrOutput{})
	pulumi.RegisterOutputType(ConditionOperatorOutput{})
	pulumi.RegisterOutputType(ConditionOperatorPtrOutput{})
	pulumi.RegisterOutputType(CriterionTypeOutput{})
	pulumi.RegisterOutputType(CriterionTypePtrOutput{})
	pulumi.RegisterOutputType(DimensionOperatorOutput{})
	pulumi.RegisterOutputType(DimensionOperatorPtrOutput{})
	pulumi.RegisterOutputType(ExporterTypeOutput{})
	pulumi.RegisterOutputType(ExporterTypePtrOutput{})
	pulumi.RegisterOutputType(ExtendedLocationTypeOutput{})
	pulumi.RegisterOutputType(ExtendedLocationTypePtrOutput{})
	pulumi.RegisterOutputType(ExternalNetworkingModeOutput{})
	pulumi.RegisterOutputType(ExternalNetworkingModePtrOutput{})
	pulumi.RegisterOutputType(IdentityTypeOutput{})
	pulumi.RegisterOutputType(IdentityTypePtrOutput{})
	pulumi.RegisterOutputType(IncidentManagementServiceOutput{})
	pulumi.RegisterOutputType(IncidentManagementServicePtrOutput{})
	pulumi.RegisterOutputType(JsonMapperElementOutput{})
	pulumi.RegisterOutputType(JsonMapperElementPtrOutput{})
	pulumi.RegisterOutputType(KindOutput{})
	pulumi.RegisterOutputType(KindPtrOutput{})
	pulumi.RegisterOutputType(ManagedServiceIdentityTypeOutput{})
	pulumi.RegisterOutputType(ManagedServiceIdentityTypePtrOutput{})
	pulumi.RegisterOutputType(MetricStatisticTypeOutput{})
	pulumi.RegisterOutputType(MetricStatisticTypePtrOutput{})
	pulumi.RegisterOutputType(OperationTypeOutput{})
	pulumi.RegisterOutputType(OperationTypePtrOutput{})
	pulumi.RegisterOutputType(PipelineTypeOutput{})
	pulumi.RegisterOutputType(PipelineTypePtrOutput{})
	pulumi.RegisterOutputType(PredictiveAutoscalePolicyScaleModeOutput{})
	pulumi.RegisterOutputType(PredictiveAutoscalePolicyScaleModePtrOutput{})
	pulumi.RegisterOutputType(PrivateEndpointServiceConnectionStatusOutput{})
	pulumi.RegisterOutputType(PrivateEndpointServiceConnectionStatusPtrOutput{})
	pulumi.RegisterOutputType(ProcessorTypeOutput{})
	pulumi.RegisterOutputType(ProcessorTypePtrOutput{})
	pulumi.RegisterOutputType(ReceiverTypeOutput{})
	pulumi.RegisterOutputType(ReceiverTypePtrOutput{})
	pulumi.RegisterOutputType(RecurrenceFrequencyOutput{})
	pulumi.RegisterOutputType(RecurrenceFrequencyPtrOutput{})
	pulumi.RegisterOutputType(ScaleDirectionOutput{})
	pulumi.RegisterOutputType(ScaleDirectionPtrOutput{})
	pulumi.RegisterOutputType(ScaleRuleMetricDimensionOperationTypeOutput{})
	pulumi.RegisterOutputType(ScaleRuleMetricDimensionOperationTypePtrOutput{})
	pulumi.RegisterOutputType(ScaleTypeOutput{})
	pulumi.RegisterOutputType(ScaleTypePtrOutput{})
	pulumi.RegisterOutputType(ScopedResourceKindOutput{})
	pulumi.RegisterOutputType(ScopedResourceKindPtrOutput{})
	pulumi.RegisterOutputType(StreamEncodingTypeOutput{})
	pulumi.RegisterOutputType(StreamEncodingTypePtrOutput{})
	pulumi.RegisterOutputType(SyslogProtocolOutput{})
	pulumi.RegisterOutputType(SyslogProtocolPtrOutput{})
	pulumi.RegisterOutputType(TimeAggregationOutput{})
	pulumi.RegisterOutputType(TimeAggregationPtrOutput{})
	pulumi.RegisterOutputType(TimeAggregationTypeOutput{})
	pulumi.RegisterOutputType(TimeAggregationTypePtrOutput{})
}
