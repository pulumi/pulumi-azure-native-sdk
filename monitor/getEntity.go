// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package monitor

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v3/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Get a Entity
//
// Uses Azure REST API version 2025-05-03-preview.
func LookupEntity(ctx *pulumi.Context, args *LookupEntityArgs, opts ...pulumi.InvokeOption) (*LookupEntityResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv LookupEntityResult
	err := ctx.Invoke("azure-native:monitor:getEntity", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return rv.Defaults(), nil
}

type LookupEntityArgs struct {
	// The name of the Azure Monitor Workspace. The name is case insensitive
	AzureMonitorWorkspaceName string `pulumi:"azureMonitorWorkspaceName"`
	// Name of the entity. Must be unique within a health model.
	EntityName string `pulumi:"entityName"`
	// Name of health model resource
	HealthModelName string `pulumi:"healthModelName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// An entity (aka node) of a health model
type LookupEntityResult struct {
	// The Azure API version of the resource.
	AzureApiVersion string `pulumi:"azureApiVersion"`
	// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
	Id string `pulumi:"id"`
	// The name of the resource
	Name string `pulumi:"name"`
	// The resource-specific properties for this resource.
	Properties EntityPropertiesResponse `pulumi:"properties"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponse `pulumi:"systemData"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type string `pulumi:"type"`
}

// Defaults sets the appropriate defaults for LookupEntityResult
func (val *LookupEntityResult) Defaults() *LookupEntityResult {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.Properties = *tmp.Properties.Defaults()

	return &tmp
}
func LookupEntityOutput(ctx *pulumi.Context, args LookupEntityOutputArgs, opts ...pulumi.InvokeOption) LookupEntityResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupEntityResultOutput, error) {
			args := v.(LookupEntityArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: utilities.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("azure-native:monitor:getEntity", args, LookupEntityResultOutput{}, options).(LookupEntityResultOutput), nil
		}).(LookupEntityResultOutput)
}

type LookupEntityOutputArgs struct {
	// The name of the Azure Monitor Workspace. The name is case insensitive
	AzureMonitorWorkspaceName pulumi.StringInput `pulumi:"azureMonitorWorkspaceName"`
	// Name of the entity. Must be unique within a health model.
	EntityName pulumi.StringInput `pulumi:"entityName"`
	// Name of health model resource
	HealthModelName pulumi.StringInput `pulumi:"healthModelName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
}

func (LookupEntityOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupEntityArgs)(nil)).Elem()
}

// An entity (aka node) of a health model
type LookupEntityResultOutput struct{ *pulumi.OutputState }

func (LookupEntityResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupEntityResult)(nil)).Elem()
}

func (o LookupEntityResultOutput) ToLookupEntityResultOutput() LookupEntityResultOutput {
	return o
}

func (o LookupEntityResultOutput) ToLookupEntityResultOutputWithContext(ctx context.Context) LookupEntityResultOutput {
	return o
}

// The Azure API version of the resource.
func (o LookupEntityResultOutput) AzureApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v LookupEntityResult) string { return v.AzureApiVersion }).(pulumi.StringOutput)
}

// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
func (o LookupEntityResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupEntityResult) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the resource
func (o LookupEntityResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupEntityResult) string { return v.Name }).(pulumi.StringOutput)
}

// The resource-specific properties for this resource.
func (o LookupEntityResultOutput) Properties() EntityPropertiesResponseOutput {
	return o.ApplyT(func(v LookupEntityResult) EntityPropertiesResponse { return v.Properties }).(EntityPropertiesResponseOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o LookupEntityResultOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v LookupEntityResult) SystemDataResponse { return v.SystemData }).(SystemDataResponseOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o LookupEntityResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupEntityResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupEntityResultOutput{})
}
