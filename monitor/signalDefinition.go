// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package monitor

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure-native-sdk/v3/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// A signal definition in a health model
//
// Uses Azure REST API version 2025-05-03-preview.
type SignalDefinition struct {
	pulumi.CustomResourceState

	// The Azure API version of the resource.
	AzureApiVersion pulumi.StringOutput `pulumi:"azureApiVersion"`
	// The name of the resource
	Name pulumi.StringOutput `pulumi:"name"`
	// The resource-specific properties for this resource.
	Properties pulumi.AnyOutput `pulumi:"properties"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponseOutput `pulumi:"systemData"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewSignalDefinition registers a new resource with the given unique name, arguments, and options.
func NewSignalDefinition(ctx *pulumi.Context,
	name string, args *SignalDefinitionArgs, opts ...pulumi.ResourceOption) (*SignalDefinition, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AzureMonitorWorkspaceName == nil {
		return nil, errors.New("invalid value for required argument 'AzureMonitorWorkspaceName'")
	}
	if args.HealthModelName == nil {
		return nil, errors.New("invalid value for required argument 'HealthModelName'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:monitor/v20250503preview:SignalDefinition"),
		},
	})
	opts = append(opts, aliases)
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource SignalDefinition
	err := ctx.RegisterResource("azure-native:monitor:SignalDefinition", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSignalDefinition gets an existing SignalDefinition resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSignalDefinition(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SignalDefinitionState, opts ...pulumi.ResourceOption) (*SignalDefinition, error) {
	var resource SignalDefinition
	err := ctx.ReadResource("azure-native:monitor:SignalDefinition", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SignalDefinition resources.
type signalDefinitionState struct {
}

type SignalDefinitionState struct {
}

func (SignalDefinitionState) ElementType() reflect.Type {
	return reflect.TypeOf((*signalDefinitionState)(nil)).Elem()
}

type signalDefinitionArgs struct {
	// The name of the Azure Monitor Workspace. The name is case insensitive
	AzureMonitorWorkspaceName string `pulumi:"azureMonitorWorkspaceName"`
	// Name of health model resource
	HealthModelName string `pulumi:"healthModelName"`
	// The resource-specific properties for this resource.
	Properties interface{} `pulumi:"properties"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Name of the signal definition. Must be unique within a health model.
	SignalDefinitionName *string `pulumi:"signalDefinitionName"`
}

// The set of arguments for constructing a SignalDefinition resource.
type SignalDefinitionArgs struct {
	// The name of the Azure Monitor Workspace. The name is case insensitive
	AzureMonitorWorkspaceName pulumi.StringInput
	// Name of health model resource
	HealthModelName pulumi.StringInput
	// The resource-specific properties for this resource.
	Properties pulumi.Input
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput
	// Name of the signal definition. Must be unique within a health model.
	SignalDefinitionName pulumi.StringPtrInput
}

func (SignalDefinitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*signalDefinitionArgs)(nil)).Elem()
}

type SignalDefinitionInput interface {
	pulumi.Input

	ToSignalDefinitionOutput() SignalDefinitionOutput
	ToSignalDefinitionOutputWithContext(ctx context.Context) SignalDefinitionOutput
}

func (*SignalDefinition) ElementType() reflect.Type {
	return reflect.TypeOf((**SignalDefinition)(nil)).Elem()
}

func (i *SignalDefinition) ToSignalDefinitionOutput() SignalDefinitionOutput {
	return i.ToSignalDefinitionOutputWithContext(context.Background())
}

func (i *SignalDefinition) ToSignalDefinitionOutputWithContext(ctx context.Context) SignalDefinitionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SignalDefinitionOutput)
}

type SignalDefinitionOutput struct{ *pulumi.OutputState }

func (SignalDefinitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SignalDefinition)(nil)).Elem()
}

func (o SignalDefinitionOutput) ToSignalDefinitionOutput() SignalDefinitionOutput {
	return o
}

func (o SignalDefinitionOutput) ToSignalDefinitionOutputWithContext(ctx context.Context) SignalDefinitionOutput {
	return o
}

// The Azure API version of the resource.
func (o SignalDefinitionOutput) AzureApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *SignalDefinition) pulumi.StringOutput { return v.AzureApiVersion }).(pulumi.StringOutput)
}

// The name of the resource
func (o SignalDefinitionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *SignalDefinition) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The resource-specific properties for this resource.
func (o SignalDefinitionOutput) Properties() pulumi.AnyOutput {
	return o.ApplyT(func(v *SignalDefinition) pulumi.AnyOutput { return v.Properties }).(pulumi.AnyOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o SignalDefinitionOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v *SignalDefinition) SystemDataResponseOutput { return v.SystemData }).(SystemDataResponseOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o SignalDefinitionOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *SignalDefinition) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(SignalDefinitionOutput{})
}
