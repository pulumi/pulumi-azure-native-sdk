// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20231001preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The type of exporter.
type ExporterType string

const (
	// Export logs to Azure Monitor Workspace.
	ExporterTypeAzureMonitorWorkspaceLogs = ExporterType("AzureMonitorWorkspaceLogs")
	// Export data to another pipeline group instance.
	ExporterTypePipelineGroup = ExporterType("PipelineGroup")
)

func (ExporterType) ElementType() reflect.Type {
	return reflect.TypeOf((*ExporterType)(nil)).Elem()
}

func (e ExporterType) ToExporterTypeOutput() ExporterTypeOutput {
	return pulumi.ToOutput(e).(ExporterTypeOutput)
}

func (e ExporterType) ToExporterTypeOutputWithContext(ctx context.Context) ExporterTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ExporterTypeOutput)
}

func (e ExporterType) ToExporterTypePtrOutput() ExporterTypePtrOutput {
	return e.ToExporterTypePtrOutputWithContext(context.Background())
}

func (e ExporterType) ToExporterTypePtrOutputWithContext(ctx context.Context) ExporterTypePtrOutput {
	return ExporterType(e).ToExporterTypeOutputWithContext(ctx).ToExporterTypePtrOutputWithContext(ctx)
}

func (e ExporterType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ExporterType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ExporterType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ExporterType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ExporterTypeOutput struct{ *pulumi.OutputState }

func (ExporterTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExporterType)(nil)).Elem()
}

func (o ExporterTypeOutput) ToExporterTypeOutput() ExporterTypeOutput {
	return o
}

func (o ExporterTypeOutput) ToExporterTypeOutputWithContext(ctx context.Context) ExporterTypeOutput {
	return o
}

func (o ExporterTypeOutput) ToExporterTypePtrOutput() ExporterTypePtrOutput {
	return o.ToExporterTypePtrOutputWithContext(context.Background())
}

func (o ExporterTypeOutput) ToExporterTypePtrOutputWithContext(ctx context.Context) ExporterTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ExporterType) *ExporterType {
		return &v
	}).(ExporterTypePtrOutput)
}

func (o ExporterTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ExporterTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ExporterType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ExporterTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ExporterTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ExporterType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ExporterTypePtrOutput struct{ *pulumi.OutputState }

func (ExporterTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExporterType)(nil)).Elem()
}

func (o ExporterTypePtrOutput) ToExporterTypePtrOutput() ExporterTypePtrOutput {
	return o
}

func (o ExporterTypePtrOutput) ToExporterTypePtrOutputWithContext(ctx context.Context) ExporterTypePtrOutput {
	return o
}

func (o ExporterTypePtrOutput) Elem() ExporterTypeOutput {
	return o.ApplyT(func(v *ExporterType) ExporterType {
		if v != nil {
			return *v
		}
		var ret ExporterType
		return ret
	}).(ExporterTypeOutput)
}

func (o ExporterTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ExporterTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ExporterType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ExporterTypeInput is an input type that accepts values of the ExporterType enum
// A concrete instance of `ExporterTypeInput` can be one of the following:
//
//	ExporterTypeAzureMonitorWorkspaceLogs
//	ExporterTypePipelineGroup
type ExporterTypeInput interface {
	pulumi.Input

	ToExporterTypeOutput() ExporterTypeOutput
	ToExporterTypeOutputWithContext(context.Context) ExporterTypeOutput
}

var exporterTypePtrType = reflect.TypeOf((**ExporterType)(nil)).Elem()

type ExporterTypePtrInput interface {
	pulumi.Input

	ToExporterTypePtrOutput() ExporterTypePtrOutput
	ToExporterTypePtrOutputWithContext(context.Context) ExporterTypePtrOutput
}

type exporterTypePtr string

func ExporterTypePtr(v string) ExporterTypePtrInput {
	return (*exporterTypePtr)(&v)
}

func (*exporterTypePtr) ElementType() reflect.Type {
	return exporterTypePtrType
}

func (in *exporterTypePtr) ToExporterTypePtrOutput() ExporterTypePtrOutput {
	return pulumi.ToOutput(in).(ExporterTypePtrOutput)
}

func (in *exporterTypePtr) ToExporterTypePtrOutputWithContext(ctx context.Context) ExporterTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ExporterTypePtrOutput)
}

// The type of extended location.
type ExtendedLocationType string

const (
	// Custom location.
	ExtendedLocationTypeCustomLocation = ExtendedLocationType("CustomLocation")
)

func (ExtendedLocationType) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtendedLocationType)(nil)).Elem()
}

func (e ExtendedLocationType) ToExtendedLocationTypeOutput() ExtendedLocationTypeOutput {
	return pulumi.ToOutput(e).(ExtendedLocationTypeOutput)
}

func (e ExtendedLocationType) ToExtendedLocationTypeOutputWithContext(ctx context.Context) ExtendedLocationTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ExtendedLocationTypeOutput)
}

func (e ExtendedLocationType) ToExtendedLocationTypePtrOutput() ExtendedLocationTypePtrOutput {
	return e.ToExtendedLocationTypePtrOutputWithContext(context.Background())
}

func (e ExtendedLocationType) ToExtendedLocationTypePtrOutputWithContext(ctx context.Context) ExtendedLocationTypePtrOutput {
	return ExtendedLocationType(e).ToExtendedLocationTypeOutputWithContext(ctx).ToExtendedLocationTypePtrOutputWithContext(ctx)
}

func (e ExtendedLocationType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ExtendedLocationType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ExtendedLocationType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ExtendedLocationType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ExtendedLocationTypeOutput struct{ *pulumi.OutputState }

func (ExtendedLocationTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtendedLocationType)(nil)).Elem()
}

func (o ExtendedLocationTypeOutput) ToExtendedLocationTypeOutput() ExtendedLocationTypeOutput {
	return o
}

func (o ExtendedLocationTypeOutput) ToExtendedLocationTypeOutputWithContext(ctx context.Context) ExtendedLocationTypeOutput {
	return o
}

func (o ExtendedLocationTypeOutput) ToExtendedLocationTypePtrOutput() ExtendedLocationTypePtrOutput {
	return o.ToExtendedLocationTypePtrOutputWithContext(context.Background())
}

func (o ExtendedLocationTypeOutput) ToExtendedLocationTypePtrOutputWithContext(ctx context.Context) ExtendedLocationTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ExtendedLocationType) *ExtendedLocationType {
		return &v
	}).(ExtendedLocationTypePtrOutput)
}

func (o ExtendedLocationTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ExtendedLocationTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ExtendedLocationType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ExtendedLocationTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ExtendedLocationTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ExtendedLocationType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ExtendedLocationTypePtrOutput struct{ *pulumi.OutputState }

func (ExtendedLocationTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExtendedLocationType)(nil)).Elem()
}

func (o ExtendedLocationTypePtrOutput) ToExtendedLocationTypePtrOutput() ExtendedLocationTypePtrOutput {
	return o
}

func (o ExtendedLocationTypePtrOutput) ToExtendedLocationTypePtrOutputWithContext(ctx context.Context) ExtendedLocationTypePtrOutput {
	return o
}

func (o ExtendedLocationTypePtrOutput) Elem() ExtendedLocationTypeOutput {
	return o.ApplyT(func(v *ExtendedLocationType) ExtendedLocationType {
		if v != nil {
			return *v
		}
		var ret ExtendedLocationType
		return ret
	}).(ExtendedLocationTypeOutput)
}

func (o ExtendedLocationTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ExtendedLocationTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ExtendedLocationType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ExtendedLocationTypeInput is an input type that accepts values of the ExtendedLocationType enum
// A concrete instance of `ExtendedLocationTypeInput` can be one of the following:
//
//	ExtendedLocationTypeCustomLocation
type ExtendedLocationTypeInput interface {
	pulumi.Input

	ToExtendedLocationTypeOutput() ExtendedLocationTypeOutput
	ToExtendedLocationTypeOutputWithContext(context.Context) ExtendedLocationTypeOutput
}

var extendedLocationTypePtrType = reflect.TypeOf((**ExtendedLocationType)(nil)).Elem()

type ExtendedLocationTypePtrInput interface {
	pulumi.Input

	ToExtendedLocationTypePtrOutput() ExtendedLocationTypePtrOutput
	ToExtendedLocationTypePtrOutputWithContext(context.Context) ExtendedLocationTypePtrOutput
}

type extendedLocationTypePtr string

func ExtendedLocationTypePtr(v string) ExtendedLocationTypePtrInput {
	return (*extendedLocationTypePtr)(&v)
}

func (*extendedLocationTypePtr) ElementType() reflect.Type {
	return extendedLocationTypePtrType
}

func (in *extendedLocationTypePtr) ToExtendedLocationTypePtrOutput() ExtendedLocationTypePtrOutput {
	return pulumi.ToOutput(in).(ExtendedLocationTypePtrOutput)
}

func (in *extendedLocationTypePtr) ToExtendedLocationTypePtrOutputWithContext(ctx context.Context) ExtendedLocationTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ExtendedLocationTypePtrOutput)
}

// External networking mode.
type ExternalNetworkingMode string

const (
	// Load balancer only.
	ExternalNetworkingModeLoadBalancerOnly = ExternalNetworkingMode("LoadBalancerOnly")
)

func (ExternalNetworkingMode) ElementType() reflect.Type {
	return reflect.TypeOf((*ExternalNetworkingMode)(nil)).Elem()
}

func (e ExternalNetworkingMode) ToExternalNetworkingModeOutput() ExternalNetworkingModeOutput {
	return pulumi.ToOutput(e).(ExternalNetworkingModeOutput)
}

func (e ExternalNetworkingMode) ToExternalNetworkingModeOutputWithContext(ctx context.Context) ExternalNetworkingModeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ExternalNetworkingModeOutput)
}

func (e ExternalNetworkingMode) ToExternalNetworkingModePtrOutput() ExternalNetworkingModePtrOutput {
	return e.ToExternalNetworkingModePtrOutputWithContext(context.Background())
}

func (e ExternalNetworkingMode) ToExternalNetworkingModePtrOutputWithContext(ctx context.Context) ExternalNetworkingModePtrOutput {
	return ExternalNetworkingMode(e).ToExternalNetworkingModeOutputWithContext(ctx).ToExternalNetworkingModePtrOutputWithContext(ctx)
}

func (e ExternalNetworkingMode) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ExternalNetworkingMode) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ExternalNetworkingMode) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ExternalNetworkingMode) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ExternalNetworkingModeOutput struct{ *pulumi.OutputState }

func (ExternalNetworkingModeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExternalNetworkingMode)(nil)).Elem()
}

func (o ExternalNetworkingModeOutput) ToExternalNetworkingModeOutput() ExternalNetworkingModeOutput {
	return o
}

func (o ExternalNetworkingModeOutput) ToExternalNetworkingModeOutputWithContext(ctx context.Context) ExternalNetworkingModeOutput {
	return o
}

func (o ExternalNetworkingModeOutput) ToExternalNetworkingModePtrOutput() ExternalNetworkingModePtrOutput {
	return o.ToExternalNetworkingModePtrOutputWithContext(context.Background())
}

func (o ExternalNetworkingModeOutput) ToExternalNetworkingModePtrOutputWithContext(ctx context.Context) ExternalNetworkingModePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ExternalNetworkingMode) *ExternalNetworkingMode {
		return &v
	}).(ExternalNetworkingModePtrOutput)
}

func (o ExternalNetworkingModeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ExternalNetworkingModeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ExternalNetworkingMode) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ExternalNetworkingModeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ExternalNetworkingModeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ExternalNetworkingMode) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ExternalNetworkingModePtrOutput struct{ *pulumi.OutputState }

func (ExternalNetworkingModePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExternalNetworkingMode)(nil)).Elem()
}

func (o ExternalNetworkingModePtrOutput) ToExternalNetworkingModePtrOutput() ExternalNetworkingModePtrOutput {
	return o
}

func (o ExternalNetworkingModePtrOutput) ToExternalNetworkingModePtrOutputWithContext(ctx context.Context) ExternalNetworkingModePtrOutput {
	return o
}

func (o ExternalNetworkingModePtrOutput) Elem() ExternalNetworkingModeOutput {
	return o.ApplyT(func(v *ExternalNetworkingMode) ExternalNetworkingMode {
		if v != nil {
			return *v
		}
		var ret ExternalNetworkingMode
		return ret
	}).(ExternalNetworkingModeOutput)
}

func (o ExternalNetworkingModePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ExternalNetworkingModePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ExternalNetworkingMode) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ExternalNetworkingModeInput is an input type that accepts values of the ExternalNetworkingMode enum
// A concrete instance of `ExternalNetworkingModeInput` can be one of the following:
//
//	ExternalNetworkingModeLoadBalancerOnly
type ExternalNetworkingModeInput interface {
	pulumi.Input

	ToExternalNetworkingModeOutput() ExternalNetworkingModeOutput
	ToExternalNetworkingModeOutputWithContext(context.Context) ExternalNetworkingModeOutput
}

var externalNetworkingModePtrType = reflect.TypeOf((**ExternalNetworkingMode)(nil)).Elem()

type ExternalNetworkingModePtrInput interface {
	pulumi.Input

	ToExternalNetworkingModePtrOutput() ExternalNetworkingModePtrOutput
	ToExternalNetworkingModePtrOutputWithContext(context.Context) ExternalNetworkingModePtrOutput
}

type externalNetworkingModePtr string

func ExternalNetworkingModePtr(v string) ExternalNetworkingModePtrInput {
	return (*externalNetworkingModePtr)(&v)
}

func (*externalNetworkingModePtr) ElementType() reflect.Type {
	return externalNetworkingModePtrType
}

func (in *externalNetworkingModePtr) ToExternalNetworkingModePtrOutput() ExternalNetworkingModePtrOutput {
	return pulumi.ToOutput(in).(ExternalNetworkingModePtrOutput)
}

func (in *externalNetworkingModePtr) ToExternalNetworkingModePtrOutputWithContext(ctx context.Context) ExternalNetworkingModePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ExternalNetworkingModePtrOutput)
}

// The type of pipeline
type PipelineType string

const (
	// Pipeline for logs telemetry.
	PipelineTypeLogs = PipelineType("logs")
)

func (PipelineType) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineType)(nil)).Elem()
}

func (e PipelineType) ToPipelineTypeOutput() PipelineTypeOutput {
	return pulumi.ToOutput(e).(PipelineTypeOutput)
}

func (e PipelineType) ToPipelineTypeOutputWithContext(ctx context.Context) PipelineTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(PipelineTypeOutput)
}

func (e PipelineType) ToPipelineTypePtrOutput() PipelineTypePtrOutput {
	return e.ToPipelineTypePtrOutputWithContext(context.Background())
}

func (e PipelineType) ToPipelineTypePtrOutputWithContext(ctx context.Context) PipelineTypePtrOutput {
	return PipelineType(e).ToPipelineTypeOutputWithContext(ctx).ToPipelineTypePtrOutputWithContext(ctx)
}

func (e PipelineType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e PipelineType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e PipelineType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e PipelineType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type PipelineTypeOutput struct{ *pulumi.OutputState }

func (PipelineTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineType)(nil)).Elem()
}

func (o PipelineTypeOutput) ToPipelineTypeOutput() PipelineTypeOutput {
	return o
}

func (o PipelineTypeOutput) ToPipelineTypeOutputWithContext(ctx context.Context) PipelineTypeOutput {
	return o
}

func (o PipelineTypeOutput) ToPipelineTypePtrOutput() PipelineTypePtrOutput {
	return o.ToPipelineTypePtrOutputWithContext(context.Background())
}

func (o PipelineTypeOutput) ToPipelineTypePtrOutputWithContext(ctx context.Context) PipelineTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PipelineType) *PipelineType {
		return &v
	}).(PipelineTypePtrOutput)
}

func (o PipelineTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o PipelineTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PipelineType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o PipelineTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PipelineTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PipelineType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type PipelineTypePtrOutput struct{ *pulumi.OutputState }

func (PipelineTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PipelineType)(nil)).Elem()
}

func (o PipelineTypePtrOutput) ToPipelineTypePtrOutput() PipelineTypePtrOutput {
	return o
}

func (o PipelineTypePtrOutput) ToPipelineTypePtrOutputWithContext(ctx context.Context) PipelineTypePtrOutput {
	return o
}

func (o PipelineTypePtrOutput) Elem() PipelineTypeOutput {
	return o.ApplyT(func(v *PipelineType) PipelineType {
		if v != nil {
			return *v
		}
		var ret PipelineType
		return ret
	}).(PipelineTypeOutput)
}

func (o PipelineTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PipelineTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *PipelineType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// PipelineTypeInput is an input type that accepts values of the PipelineType enum
// A concrete instance of `PipelineTypeInput` can be one of the following:
//
//	PipelineTypeLogs
type PipelineTypeInput interface {
	pulumi.Input

	ToPipelineTypeOutput() PipelineTypeOutput
	ToPipelineTypeOutputWithContext(context.Context) PipelineTypeOutput
}

var pipelineTypePtrType = reflect.TypeOf((**PipelineType)(nil)).Elem()

type PipelineTypePtrInput interface {
	pulumi.Input

	ToPipelineTypePtrOutput() PipelineTypePtrOutput
	ToPipelineTypePtrOutputWithContext(context.Context) PipelineTypePtrOutput
}

type pipelineTypePtr string

func PipelineTypePtr(v string) PipelineTypePtrInput {
	return (*pipelineTypePtr)(&v)
}

func (*pipelineTypePtr) ElementType() reflect.Type {
	return pipelineTypePtrType
}

func (in *pipelineTypePtr) ToPipelineTypePtrOutput() PipelineTypePtrOutput {
	return pulumi.ToOutput(in).(PipelineTypePtrOutput)
}

func (in *pipelineTypePtr) ToPipelineTypePtrOutputWithContext(ctx context.Context) PipelineTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(PipelineTypePtrOutput)
}

// The type of processor.
type ProcessorType string

const (
	// Batch processor.
	ProcessorTypeBatch = ProcessorType("Batch")
)

func (ProcessorType) ElementType() reflect.Type {
	return reflect.TypeOf((*ProcessorType)(nil)).Elem()
}

func (e ProcessorType) ToProcessorTypeOutput() ProcessorTypeOutput {
	return pulumi.ToOutput(e).(ProcessorTypeOutput)
}

func (e ProcessorType) ToProcessorTypeOutputWithContext(ctx context.Context) ProcessorTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ProcessorTypeOutput)
}

func (e ProcessorType) ToProcessorTypePtrOutput() ProcessorTypePtrOutput {
	return e.ToProcessorTypePtrOutputWithContext(context.Background())
}

func (e ProcessorType) ToProcessorTypePtrOutputWithContext(ctx context.Context) ProcessorTypePtrOutput {
	return ProcessorType(e).ToProcessorTypeOutputWithContext(ctx).ToProcessorTypePtrOutputWithContext(ctx)
}

func (e ProcessorType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ProcessorType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ProcessorType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ProcessorType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ProcessorTypeOutput struct{ *pulumi.OutputState }

func (ProcessorTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProcessorType)(nil)).Elem()
}

func (o ProcessorTypeOutput) ToProcessorTypeOutput() ProcessorTypeOutput {
	return o
}

func (o ProcessorTypeOutput) ToProcessorTypeOutputWithContext(ctx context.Context) ProcessorTypeOutput {
	return o
}

func (o ProcessorTypeOutput) ToProcessorTypePtrOutput() ProcessorTypePtrOutput {
	return o.ToProcessorTypePtrOutputWithContext(context.Background())
}

func (o ProcessorTypeOutput) ToProcessorTypePtrOutputWithContext(ctx context.Context) ProcessorTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProcessorType) *ProcessorType {
		return &v
	}).(ProcessorTypePtrOutput)
}

func (o ProcessorTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ProcessorTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ProcessorType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ProcessorTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ProcessorTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ProcessorType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ProcessorTypePtrOutput struct{ *pulumi.OutputState }

func (ProcessorTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProcessorType)(nil)).Elem()
}

func (o ProcessorTypePtrOutput) ToProcessorTypePtrOutput() ProcessorTypePtrOutput {
	return o
}

func (o ProcessorTypePtrOutput) ToProcessorTypePtrOutputWithContext(ctx context.Context) ProcessorTypePtrOutput {
	return o
}

func (o ProcessorTypePtrOutput) Elem() ProcessorTypeOutput {
	return o.ApplyT(func(v *ProcessorType) ProcessorType {
		if v != nil {
			return *v
		}
		var ret ProcessorType
		return ret
	}).(ProcessorTypeOutput)
}

func (o ProcessorTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ProcessorTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ProcessorType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ProcessorTypeInput is an input type that accepts values of the ProcessorType enum
// A concrete instance of `ProcessorTypeInput` can be one of the following:
//
//	ProcessorTypeBatch
type ProcessorTypeInput interface {
	pulumi.Input

	ToProcessorTypeOutput() ProcessorTypeOutput
	ToProcessorTypeOutputWithContext(context.Context) ProcessorTypeOutput
}

var processorTypePtrType = reflect.TypeOf((**ProcessorType)(nil)).Elem()

type ProcessorTypePtrInput interface {
	pulumi.Input

	ToProcessorTypePtrOutput() ProcessorTypePtrOutput
	ToProcessorTypePtrOutputWithContext(context.Context) ProcessorTypePtrOutput
}

type processorTypePtr string

func ProcessorTypePtr(v string) ProcessorTypePtrInput {
	return (*processorTypePtr)(&v)
}

func (*processorTypePtr) ElementType() reflect.Type {
	return processorTypePtrType
}

func (in *processorTypePtr) ToProcessorTypePtrOutput() ProcessorTypePtrOutput {
	return pulumi.ToOutput(in).(ProcessorTypePtrOutput)
}

func (in *processorTypePtr) ToProcessorTypePtrOutputWithContext(ctx context.Context) ProcessorTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ProcessorTypePtrOutput)
}

// The type of receiver.
type ReceiverType string

const (
	// Linux syslog.
	ReceiverTypeSyslog = ReceiverType("Syslog")
	// Receives data from azure monitor agent receiver.
	ReceiverTypeAma = ReceiverType("Ama")
	// Receives data from another pipeline group.
	ReceiverTypePipelineGroup = ReceiverType("PipelineGroup")
	// Receives data from a OTLP collector.
	ReceiverTypeOTLP = ReceiverType("OTLP")
	// Receives data from an UDP collector.
	ReceiverTypeUDP = ReceiverType("UDP")
)

func (ReceiverType) ElementType() reflect.Type {
	return reflect.TypeOf((*ReceiverType)(nil)).Elem()
}

func (e ReceiverType) ToReceiverTypeOutput() ReceiverTypeOutput {
	return pulumi.ToOutput(e).(ReceiverTypeOutput)
}

func (e ReceiverType) ToReceiverTypeOutputWithContext(ctx context.Context) ReceiverTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ReceiverTypeOutput)
}

func (e ReceiverType) ToReceiverTypePtrOutput() ReceiverTypePtrOutput {
	return e.ToReceiverTypePtrOutputWithContext(context.Background())
}

func (e ReceiverType) ToReceiverTypePtrOutputWithContext(ctx context.Context) ReceiverTypePtrOutput {
	return ReceiverType(e).ToReceiverTypeOutputWithContext(ctx).ToReceiverTypePtrOutputWithContext(ctx)
}

func (e ReceiverType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ReceiverType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ReceiverType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ReceiverType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ReceiverTypeOutput struct{ *pulumi.OutputState }

func (ReceiverTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReceiverType)(nil)).Elem()
}

func (o ReceiverTypeOutput) ToReceiverTypeOutput() ReceiverTypeOutput {
	return o
}

func (o ReceiverTypeOutput) ToReceiverTypeOutputWithContext(ctx context.Context) ReceiverTypeOutput {
	return o
}

func (o ReceiverTypeOutput) ToReceiverTypePtrOutput() ReceiverTypePtrOutput {
	return o.ToReceiverTypePtrOutputWithContext(context.Background())
}

func (o ReceiverTypeOutput) ToReceiverTypePtrOutputWithContext(ctx context.Context) ReceiverTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ReceiverType) *ReceiverType {
		return &v
	}).(ReceiverTypePtrOutput)
}

func (o ReceiverTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ReceiverTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ReceiverType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ReceiverTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ReceiverTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ReceiverType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ReceiverTypePtrOutput struct{ *pulumi.OutputState }

func (ReceiverTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ReceiverType)(nil)).Elem()
}

func (o ReceiverTypePtrOutput) ToReceiverTypePtrOutput() ReceiverTypePtrOutput {
	return o
}

func (o ReceiverTypePtrOutput) ToReceiverTypePtrOutputWithContext(ctx context.Context) ReceiverTypePtrOutput {
	return o
}

func (o ReceiverTypePtrOutput) Elem() ReceiverTypeOutput {
	return o.ApplyT(func(v *ReceiverType) ReceiverType {
		if v != nil {
			return *v
		}
		var ret ReceiverType
		return ret
	}).(ReceiverTypeOutput)
}

func (o ReceiverTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ReceiverTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ReceiverType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ReceiverTypeInput is an input type that accepts values of the ReceiverType enum
// A concrete instance of `ReceiverTypeInput` can be one of the following:
//
//	ReceiverTypeSyslog
//	ReceiverTypeAma
//	ReceiverTypePipelineGroup
//	ReceiverTypeOTLP
//	ReceiverTypeUDP
type ReceiverTypeInput interface {
	pulumi.Input

	ToReceiverTypeOutput() ReceiverTypeOutput
	ToReceiverTypeOutputWithContext(context.Context) ReceiverTypeOutput
}

var receiverTypePtrType = reflect.TypeOf((**ReceiverType)(nil)).Elem()

type ReceiverTypePtrInput interface {
	pulumi.Input

	ToReceiverTypePtrOutput() ReceiverTypePtrOutput
	ToReceiverTypePtrOutputWithContext(context.Context) ReceiverTypePtrOutput
}

type receiverTypePtr string

func ReceiverTypePtr(v string) ReceiverTypePtrInput {
	return (*receiverTypePtr)(&v)
}

func (*receiverTypePtr) ElementType() reflect.Type {
	return receiverTypePtrType
}

func (in *receiverTypePtr) ToReceiverTypePtrOutput() ReceiverTypePtrOutput {
	return pulumi.ToOutput(in).(ReceiverTypePtrOutput)
}

func (in *receiverTypePtr) ToReceiverTypePtrOutputWithContext(ctx context.Context) ReceiverTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ReceiverTypePtrOutput)
}

// The encoding of the stream being received.
type StreamEncodingType string

const (
	// No encoding validation. Treats the file as a stream of raw bytes.
	StreamEncodingTypeNop = StreamEncodingType("nop")
	// UTF-8 encoding.
	StreamEncodingType_Utf_8 = StreamEncodingType("utf-8")
	// UTF-16 encoding with little-endian byte order.
	StreamEncodingType_Utf_16le = StreamEncodingType("utf-16le")
	// UTF-16 encoding with little-endian byte order.
	StreamEncodingType_Utf_16be = StreamEncodingType("utf-16be")
	// ASCII encoding.
	StreamEncodingTypeAscii = StreamEncodingType("ascii")
	// The Big5 Chinese character encoding.
	StreamEncodingTypeBig5 = StreamEncodingType("big5")
)

func (StreamEncodingType) ElementType() reflect.Type {
	return reflect.TypeOf((*StreamEncodingType)(nil)).Elem()
}

func (e StreamEncodingType) ToStreamEncodingTypeOutput() StreamEncodingTypeOutput {
	return pulumi.ToOutput(e).(StreamEncodingTypeOutput)
}

func (e StreamEncodingType) ToStreamEncodingTypeOutputWithContext(ctx context.Context) StreamEncodingTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(StreamEncodingTypeOutput)
}

func (e StreamEncodingType) ToStreamEncodingTypePtrOutput() StreamEncodingTypePtrOutput {
	return e.ToStreamEncodingTypePtrOutputWithContext(context.Background())
}

func (e StreamEncodingType) ToStreamEncodingTypePtrOutputWithContext(ctx context.Context) StreamEncodingTypePtrOutput {
	return StreamEncodingType(e).ToStreamEncodingTypeOutputWithContext(ctx).ToStreamEncodingTypePtrOutputWithContext(ctx)
}

func (e StreamEncodingType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e StreamEncodingType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e StreamEncodingType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e StreamEncodingType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type StreamEncodingTypeOutput struct{ *pulumi.OutputState }

func (StreamEncodingTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StreamEncodingType)(nil)).Elem()
}

func (o StreamEncodingTypeOutput) ToStreamEncodingTypeOutput() StreamEncodingTypeOutput {
	return o
}

func (o StreamEncodingTypeOutput) ToStreamEncodingTypeOutputWithContext(ctx context.Context) StreamEncodingTypeOutput {
	return o
}

func (o StreamEncodingTypeOutput) ToStreamEncodingTypePtrOutput() StreamEncodingTypePtrOutput {
	return o.ToStreamEncodingTypePtrOutputWithContext(context.Background())
}

func (o StreamEncodingTypeOutput) ToStreamEncodingTypePtrOutputWithContext(ctx context.Context) StreamEncodingTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v StreamEncodingType) *StreamEncodingType {
		return &v
	}).(StreamEncodingTypePtrOutput)
}

func (o StreamEncodingTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o StreamEncodingTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e StreamEncodingType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o StreamEncodingTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o StreamEncodingTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e StreamEncodingType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type StreamEncodingTypePtrOutput struct{ *pulumi.OutputState }

func (StreamEncodingTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StreamEncodingType)(nil)).Elem()
}

func (o StreamEncodingTypePtrOutput) ToStreamEncodingTypePtrOutput() StreamEncodingTypePtrOutput {
	return o
}

func (o StreamEncodingTypePtrOutput) ToStreamEncodingTypePtrOutputWithContext(ctx context.Context) StreamEncodingTypePtrOutput {
	return o
}

func (o StreamEncodingTypePtrOutput) Elem() StreamEncodingTypeOutput {
	return o.ApplyT(func(v *StreamEncodingType) StreamEncodingType {
		if v != nil {
			return *v
		}
		var ret StreamEncodingType
		return ret
	}).(StreamEncodingTypeOutput)
}

func (o StreamEncodingTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o StreamEncodingTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *StreamEncodingType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// StreamEncodingTypeInput is an input type that accepts values of the StreamEncodingType enum
// A concrete instance of `StreamEncodingTypeInput` can be one of the following:
//
//	StreamEncodingTypeNop
//	StreamEncodingType_Utf_8
//	StreamEncodingType_Utf_16le
//	StreamEncodingType_Utf_16be
//	StreamEncodingTypeAscii
//	StreamEncodingTypeBig5
type StreamEncodingTypeInput interface {
	pulumi.Input

	ToStreamEncodingTypeOutput() StreamEncodingTypeOutput
	ToStreamEncodingTypeOutputWithContext(context.Context) StreamEncodingTypeOutput
}

var streamEncodingTypePtrType = reflect.TypeOf((**StreamEncodingType)(nil)).Elem()

type StreamEncodingTypePtrInput interface {
	pulumi.Input

	ToStreamEncodingTypePtrOutput() StreamEncodingTypePtrOutput
	ToStreamEncodingTypePtrOutputWithContext(context.Context) StreamEncodingTypePtrOutput
}

type streamEncodingTypePtr string

func StreamEncodingTypePtr(v string) StreamEncodingTypePtrInput {
	return (*streamEncodingTypePtr)(&v)
}

func (*streamEncodingTypePtr) ElementType() reflect.Type {
	return streamEncodingTypePtrType
}

func (in *streamEncodingTypePtr) ToStreamEncodingTypePtrOutput() StreamEncodingTypePtrOutput {
	return pulumi.ToOutput(in).(StreamEncodingTypePtrOutput)
}

func (in *streamEncodingTypePtr) ToStreamEncodingTypePtrOutputWithContext(ctx context.Context) StreamEncodingTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(StreamEncodingTypePtrOutput)
}

// Protocol to parse syslog messages. Default rfc3164
type SyslogProtocol string

const (
	// rfc3164 protocol.
	SyslogProtocolRfc3164 = SyslogProtocol("rfc3164")
	// rfc5424 protocol.
	SyslogProtocolRfc5424 = SyslogProtocol("rfc5424")
)

func (SyslogProtocol) ElementType() reflect.Type {
	return reflect.TypeOf((*SyslogProtocol)(nil)).Elem()
}

func (e SyslogProtocol) ToSyslogProtocolOutput() SyslogProtocolOutput {
	return pulumi.ToOutput(e).(SyslogProtocolOutput)
}

func (e SyslogProtocol) ToSyslogProtocolOutputWithContext(ctx context.Context) SyslogProtocolOutput {
	return pulumi.ToOutputWithContext(ctx, e).(SyslogProtocolOutput)
}

func (e SyslogProtocol) ToSyslogProtocolPtrOutput() SyslogProtocolPtrOutput {
	return e.ToSyslogProtocolPtrOutputWithContext(context.Background())
}

func (e SyslogProtocol) ToSyslogProtocolPtrOutputWithContext(ctx context.Context) SyslogProtocolPtrOutput {
	return SyslogProtocol(e).ToSyslogProtocolOutputWithContext(ctx).ToSyslogProtocolPtrOutputWithContext(ctx)
}

func (e SyslogProtocol) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e SyslogProtocol) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e SyslogProtocol) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e SyslogProtocol) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type SyslogProtocolOutput struct{ *pulumi.OutputState }

func (SyslogProtocolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SyslogProtocol)(nil)).Elem()
}

func (o SyslogProtocolOutput) ToSyslogProtocolOutput() SyslogProtocolOutput {
	return o
}

func (o SyslogProtocolOutput) ToSyslogProtocolOutputWithContext(ctx context.Context) SyslogProtocolOutput {
	return o
}

func (o SyslogProtocolOutput) ToSyslogProtocolPtrOutput() SyslogProtocolPtrOutput {
	return o.ToSyslogProtocolPtrOutputWithContext(context.Background())
}

func (o SyslogProtocolOutput) ToSyslogProtocolPtrOutputWithContext(ctx context.Context) SyslogProtocolPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SyslogProtocol) *SyslogProtocol {
		return &v
	}).(SyslogProtocolPtrOutput)
}

func (o SyslogProtocolOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o SyslogProtocolOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SyslogProtocol) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o SyslogProtocolOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SyslogProtocolOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SyslogProtocol) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type SyslogProtocolPtrOutput struct{ *pulumi.OutputState }

func (SyslogProtocolPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SyslogProtocol)(nil)).Elem()
}

func (o SyslogProtocolPtrOutput) ToSyslogProtocolPtrOutput() SyslogProtocolPtrOutput {
	return o
}

func (o SyslogProtocolPtrOutput) ToSyslogProtocolPtrOutputWithContext(ctx context.Context) SyslogProtocolPtrOutput {
	return o
}

func (o SyslogProtocolPtrOutput) Elem() SyslogProtocolOutput {
	return o.ApplyT(func(v *SyslogProtocol) SyslogProtocol {
		if v != nil {
			return *v
		}
		var ret SyslogProtocol
		return ret
	}).(SyslogProtocolOutput)
}

func (o SyslogProtocolPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SyslogProtocolPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *SyslogProtocol) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// SyslogProtocolInput is an input type that accepts values of the SyslogProtocol enum
// A concrete instance of `SyslogProtocolInput` can be one of the following:
//
//	SyslogProtocolRfc3164
//	SyslogProtocolRfc5424
type SyslogProtocolInput interface {
	pulumi.Input

	ToSyslogProtocolOutput() SyslogProtocolOutput
	ToSyslogProtocolOutputWithContext(context.Context) SyslogProtocolOutput
}

var syslogProtocolPtrType = reflect.TypeOf((**SyslogProtocol)(nil)).Elem()

type SyslogProtocolPtrInput interface {
	pulumi.Input

	ToSyslogProtocolPtrOutput() SyslogProtocolPtrOutput
	ToSyslogProtocolPtrOutputWithContext(context.Context) SyslogProtocolPtrOutput
}

type syslogProtocolPtr string

func SyslogProtocolPtr(v string) SyslogProtocolPtrInput {
	return (*syslogProtocolPtr)(&v)
}

func (*syslogProtocolPtr) ElementType() reflect.Type {
	return syslogProtocolPtrType
}

func (in *syslogProtocolPtr) ToSyslogProtocolPtrOutput() SyslogProtocolPtrOutput {
	return pulumi.ToOutput(in).(SyslogProtocolPtrOutput)
}

func (in *syslogProtocolPtr) ToSyslogProtocolPtrOutputWithContext(ctx context.Context) SyslogProtocolPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(SyslogProtocolPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(ExporterTypeOutput{})
	pulumi.RegisterOutputType(ExporterTypePtrOutput{})
	pulumi.RegisterOutputType(ExtendedLocationTypeOutput{})
	pulumi.RegisterOutputType(ExtendedLocationTypePtrOutput{})
	pulumi.RegisterOutputType(ExternalNetworkingModeOutput{})
	pulumi.RegisterOutputType(ExternalNetworkingModePtrOutput{})
	pulumi.RegisterOutputType(PipelineTypeOutput{})
	pulumi.RegisterOutputType(PipelineTypePtrOutput{})
	pulumi.RegisterOutputType(ProcessorTypeOutput{})
	pulumi.RegisterOutputType(ProcessorTypePtrOutput{})
	pulumi.RegisterOutputType(ReceiverTypeOutput{})
	pulumi.RegisterOutputType(ReceiverTypePtrOutput{})
	pulumi.RegisterOutputType(StreamEncodingTypeOutput{})
	pulumi.RegisterOutputType(StreamEncodingTypePtrOutput{})
	pulumi.RegisterOutputType(SyslogProtocolOutput{})
	pulumi.RegisterOutputType(SyslogProtocolPtrOutput{})
}
