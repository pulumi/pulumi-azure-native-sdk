// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package monitor

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure-native-sdk/v3/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// A discovery rule which automatically finds entities and relationships in a health model based on an Azure Resource Graph query
//
// Uses Azure REST API version 2025-05-03-preview.
type DiscoveryRule struct {
	pulumi.CustomResourceState

	// The Azure API version of the resource.
	AzureApiVersion pulumi.StringOutput `pulumi:"azureApiVersion"`
	// The name of the resource
	Name pulumi.StringOutput `pulumi:"name"`
	// The resource-specific properties for this resource.
	Properties pulumi.AnyOutput `pulumi:"properties"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponseOutput `pulumi:"systemData"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewDiscoveryRule registers a new resource with the given unique name, arguments, and options.
func NewDiscoveryRule(ctx *pulumi.Context,
	name string, args *DiscoveryRuleArgs, opts ...pulumi.ResourceOption) (*DiscoveryRule, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AzureMonitorWorkspaceName == nil {
		return nil, errors.New("invalid value for required argument 'AzureMonitorWorkspaceName'")
	}
	if args.HealthModelName == nil {
		return nil, errors.New("invalid value for required argument 'HealthModelName'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:monitor/v20250503preview:DiscoveryRule"),
		},
	})
	opts = append(opts, aliases)
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource DiscoveryRule
	err := ctx.RegisterResource("azure-native:monitor:DiscoveryRule", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDiscoveryRule gets an existing DiscoveryRule resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDiscoveryRule(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DiscoveryRuleState, opts ...pulumi.ResourceOption) (*DiscoveryRule, error) {
	var resource DiscoveryRule
	err := ctx.ReadResource("azure-native:monitor:DiscoveryRule", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DiscoveryRule resources.
type discoveryRuleState struct {
}

type DiscoveryRuleState struct {
}

func (DiscoveryRuleState) ElementType() reflect.Type {
	return reflect.TypeOf((*discoveryRuleState)(nil)).Elem()
}

type discoveryRuleArgs struct {
	// The name of the Azure Monitor Workspace. The name is case insensitive
	AzureMonitorWorkspaceName string `pulumi:"azureMonitorWorkspaceName"`
	// Name of the discovery rule. Must be unique within a health model.
	DiscoveryRuleName *string `pulumi:"discoveryRuleName"`
	// Name of health model resource
	HealthModelName string `pulumi:"healthModelName"`
	// The resource-specific properties for this resource.
	Properties interface{} `pulumi:"properties"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// The set of arguments for constructing a DiscoveryRule resource.
type DiscoveryRuleArgs struct {
	// The name of the Azure Monitor Workspace. The name is case insensitive
	AzureMonitorWorkspaceName pulumi.StringInput
	// Name of the discovery rule. Must be unique within a health model.
	DiscoveryRuleName pulumi.StringPtrInput
	// Name of health model resource
	HealthModelName pulumi.StringInput
	// The resource-specific properties for this resource.
	Properties pulumi.Input
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput
}

func (DiscoveryRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*discoveryRuleArgs)(nil)).Elem()
}

type DiscoveryRuleInput interface {
	pulumi.Input

	ToDiscoveryRuleOutput() DiscoveryRuleOutput
	ToDiscoveryRuleOutputWithContext(ctx context.Context) DiscoveryRuleOutput
}

func (*DiscoveryRule) ElementType() reflect.Type {
	return reflect.TypeOf((**DiscoveryRule)(nil)).Elem()
}

func (i *DiscoveryRule) ToDiscoveryRuleOutput() DiscoveryRuleOutput {
	return i.ToDiscoveryRuleOutputWithContext(context.Background())
}

func (i *DiscoveryRule) ToDiscoveryRuleOutputWithContext(ctx context.Context) DiscoveryRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DiscoveryRuleOutput)
}

type DiscoveryRuleOutput struct{ *pulumi.OutputState }

func (DiscoveryRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DiscoveryRule)(nil)).Elem()
}

func (o DiscoveryRuleOutput) ToDiscoveryRuleOutput() DiscoveryRuleOutput {
	return o
}

func (o DiscoveryRuleOutput) ToDiscoveryRuleOutputWithContext(ctx context.Context) DiscoveryRuleOutput {
	return o
}

// The Azure API version of the resource.
func (o DiscoveryRuleOutput) AzureApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *DiscoveryRule) pulumi.StringOutput { return v.AzureApiVersion }).(pulumi.StringOutput)
}

// The name of the resource
func (o DiscoveryRuleOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *DiscoveryRule) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The resource-specific properties for this resource.
func (o DiscoveryRuleOutput) Properties() pulumi.AnyOutput {
	return o.ApplyT(func(v *DiscoveryRule) pulumi.AnyOutput { return v.Properties }).(pulumi.AnyOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o DiscoveryRuleOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v *DiscoveryRule) SystemDataResponseOutput { return v.SystemData }).(SystemDataResponseOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o DiscoveryRuleOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *DiscoveryRule) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(DiscoveryRuleOutput{})
}
