// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package monitor

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// An Azure Monitor Workspace definition
// Azure REST API version: 2023-04-03. Prior API version in Azure Native 1.x: 2021-06-03-preview.
//
// Other available API versions: 2023-10-01-preview.
type AzureMonitorWorkspace struct {
	pulumi.CustomResourceState

	// The immutable Id of the Azure Monitor Workspace. This property is read-only.
	AccountId pulumi.StringOutput `pulumi:"accountId"`
	// The Data Collection Rule and Endpoint used for ingestion by default.
	DefaultIngestionSettings AzureMonitorWorkspaceResponseDefaultIngestionSettingsOutput `pulumi:"defaultIngestionSettings"`
	// Resource entity tag (ETag)
	Etag pulumi.StringOutput `pulumi:"etag"`
	// The geo-location where the resource lives
	Location pulumi.StringOutput `pulumi:"location"`
	// Properties related to the metrics container in the Azure Monitor Workspace
	Metrics AzureMonitorWorkspaceResponseMetricsOutput `pulumi:"metrics"`
	// The name of the resource
	Name pulumi.StringOutput `pulumi:"name"`
	// List of private endpoint connections
	PrivateEndpointConnections PrivateEndpointConnectionResponseArrayOutput `pulumi:"privateEndpointConnections"`
	// The provisioning state of the Azure Monitor Workspace. Set to Succeeded if everything is healthy.
	ProvisioningState pulumi.StringOutput `pulumi:"provisioningState"`
	// Gets or sets allow or disallow public network access to Azure Monitor Workspace
	PublicNetworkAccess pulumi.StringOutput `pulumi:"publicNetworkAccess"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponseOutput `pulumi:"systemData"`
	// Resource tags.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewAzureMonitorWorkspace registers a new resource with the given unique name, arguments, and options.
func NewAzureMonitorWorkspace(ctx *pulumi.Context,
	name string, args *AzureMonitorWorkspaceArgs, opts ...pulumi.ResourceOption) (*AzureMonitorWorkspace, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:monitor/v20210603preview:AzureMonitorWorkspace"),
		},
		{
			Type: pulumi.String("azure-native:monitor/v20230403:AzureMonitorWorkspace"),
		},
		{
			Type: pulumi.String("azure-native:monitor/v20231001preview:AzureMonitorWorkspace"),
		},
	})
	opts = append(opts, aliases)
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource AzureMonitorWorkspace
	err := ctx.RegisterResource("azure-native:monitor:AzureMonitorWorkspace", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAzureMonitorWorkspace gets an existing AzureMonitorWorkspace resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAzureMonitorWorkspace(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AzureMonitorWorkspaceState, opts ...pulumi.ResourceOption) (*AzureMonitorWorkspace, error) {
	var resource AzureMonitorWorkspace
	err := ctx.ReadResource("azure-native:monitor:AzureMonitorWorkspace", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AzureMonitorWorkspace resources.
type azureMonitorWorkspaceState struct {
}

type AzureMonitorWorkspaceState struct {
}

func (AzureMonitorWorkspaceState) ElementType() reflect.Type {
	return reflect.TypeOf((*azureMonitorWorkspaceState)(nil)).Elem()
}

type azureMonitorWorkspaceArgs struct {
	// The name of the Azure Monitor Workspace. The name is case insensitive
	AzureMonitorWorkspaceName *string `pulumi:"azureMonitorWorkspaceName"`
	// The geo-location where the resource lives
	Location *string `pulumi:"location"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a AzureMonitorWorkspace resource.
type AzureMonitorWorkspaceArgs struct {
	// The name of the Azure Monitor Workspace. The name is case insensitive
	AzureMonitorWorkspaceName pulumi.StringPtrInput
	// The geo-location where the resource lives
	Location pulumi.StringPtrInput
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput
	// Resource tags.
	Tags pulumi.StringMapInput
}

func (AzureMonitorWorkspaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*azureMonitorWorkspaceArgs)(nil)).Elem()
}

type AzureMonitorWorkspaceInput interface {
	pulumi.Input

	ToAzureMonitorWorkspaceOutput() AzureMonitorWorkspaceOutput
	ToAzureMonitorWorkspaceOutputWithContext(ctx context.Context) AzureMonitorWorkspaceOutput
}

func (*AzureMonitorWorkspace) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureMonitorWorkspace)(nil)).Elem()
}

func (i *AzureMonitorWorkspace) ToAzureMonitorWorkspaceOutput() AzureMonitorWorkspaceOutput {
	return i.ToAzureMonitorWorkspaceOutputWithContext(context.Background())
}

func (i *AzureMonitorWorkspace) ToAzureMonitorWorkspaceOutputWithContext(ctx context.Context) AzureMonitorWorkspaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureMonitorWorkspaceOutput)
}

type AzureMonitorWorkspaceOutput struct{ *pulumi.OutputState }

func (AzureMonitorWorkspaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureMonitorWorkspace)(nil)).Elem()
}

func (o AzureMonitorWorkspaceOutput) ToAzureMonitorWorkspaceOutput() AzureMonitorWorkspaceOutput {
	return o
}

func (o AzureMonitorWorkspaceOutput) ToAzureMonitorWorkspaceOutputWithContext(ctx context.Context) AzureMonitorWorkspaceOutput {
	return o
}

// The immutable Id of the Azure Monitor Workspace. This property is read-only.
func (o AzureMonitorWorkspaceOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v *AzureMonitorWorkspace) pulumi.StringOutput { return v.AccountId }).(pulumi.StringOutput)
}

// The Data Collection Rule and Endpoint used for ingestion by default.
func (o AzureMonitorWorkspaceOutput) DefaultIngestionSettings() AzureMonitorWorkspaceResponseDefaultIngestionSettingsOutput {
	return o.ApplyT(func(v *AzureMonitorWorkspace) AzureMonitorWorkspaceResponseDefaultIngestionSettingsOutput {
		return v.DefaultIngestionSettings
	}).(AzureMonitorWorkspaceResponseDefaultIngestionSettingsOutput)
}

// Resource entity tag (ETag)
func (o AzureMonitorWorkspaceOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *AzureMonitorWorkspace) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

// The geo-location where the resource lives
func (o AzureMonitorWorkspaceOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *AzureMonitorWorkspace) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// Properties related to the metrics container in the Azure Monitor Workspace
func (o AzureMonitorWorkspaceOutput) Metrics() AzureMonitorWorkspaceResponseMetricsOutput {
	return o.ApplyT(func(v *AzureMonitorWorkspace) AzureMonitorWorkspaceResponseMetricsOutput { return v.Metrics }).(AzureMonitorWorkspaceResponseMetricsOutput)
}

// The name of the resource
func (o AzureMonitorWorkspaceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *AzureMonitorWorkspace) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// List of private endpoint connections
func (o AzureMonitorWorkspaceOutput) PrivateEndpointConnections() PrivateEndpointConnectionResponseArrayOutput {
	return o.ApplyT(func(v *AzureMonitorWorkspace) PrivateEndpointConnectionResponseArrayOutput {
		return v.PrivateEndpointConnections
	}).(PrivateEndpointConnectionResponseArrayOutput)
}

// The provisioning state of the Azure Monitor Workspace. Set to Succeeded if everything is healthy.
func (o AzureMonitorWorkspaceOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v *AzureMonitorWorkspace) pulumi.StringOutput { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Gets or sets allow or disallow public network access to Azure Monitor Workspace
func (o AzureMonitorWorkspaceOutput) PublicNetworkAccess() pulumi.StringOutput {
	return o.ApplyT(func(v *AzureMonitorWorkspace) pulumi.StringOutput { return v.PublicNetworkAccess }).(pulumi.StringOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o AzureMonitorWorkspaceOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v *AzureMonitorWorkspace) SystemDataResponseOutput { return v.SystemData }).(SystemDataResponseOutput)
}

// Resource tags.
func (o AzureMonitorWorkspaceOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *AzureMonitorWorkspace) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o AzureMonitorWorkspaceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *AzureMonitorWorkspace) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(AzureMonitorWorkspaceOutput{})
}
