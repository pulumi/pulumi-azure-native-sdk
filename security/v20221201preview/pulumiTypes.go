// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20221201preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = utilities.GetEnvOrDefault

// Properties of Malware Scanning.
type MalwareScanningProperties struct {
	// Defines the max GB to be scanned per Month. Set to -1 if no capping is needed.
	CapGBPerMonth *int `pulumi:"capGBPerMonth"`
	// Indicates whether On Upload malware scanning should be enabled.
	IsEnabled *bool `pulumi:"isEnabled"`
	// Optional. Resource id of an Event Grid Topic to send scan results to.
	ScanResultsEventGridTopicResourceId *string `pulumi:"scanResultsEventGridTopicResourceId"`
}

// MalwareScanningPropertiesInput is an input type that accepts MalwareScanningPropertiesArgs and MalwareScanningPropertiesOutput values.
// You can construct a concrete instance of `MalwareScanningPropertiesInput` via:
//
//	MalwareScanningPropertiesArgs{...}
type MalwareScanningPropertiesInput interface {
	pulumi.Input

	ToMalwareScanningPropertiesOutput() MalwareScanningPropertiesOutput
	ToMalwareScanningPropertiesOutputWithContext(context.Context) MalwareScanningPropertiesOutput
}

// Properties of Malware Scanning.
type MalwareScanningPropertiesArgs struct {
	// Defines the max GB to be scanned per Month. Set to -1 if no capping is needed.
	CapGBPerMonth pulumi.IntPtrInput `pulumi:"capGBPerMonth"`
	// Indicates whether On Upload malware scanning should be enabled.
	IsEnabled pulumi.BoolPtrInput `pulumi:"isEnabled"`
	// Optional. Resource id of an Event Grid Topic to send scan results to.
	ScanResultsEventGridTopicResourceId pulumi.StringPtrInput `pulumi:"scanResultsEventGridTopicResourceId"`
}

func (MalwareScanningPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MalwareScanningProperties)(nil)).Elem()
}

func (i MalwareScanningPropertiesArgs) ToMalwareScanningPropertiesOutput() MalwareScanningPropertiesOutput {
	return i.ToMalwareScanningPropertiesOutputWithContext(context.Background())
}

func (i MalwareScanningPropertiesArgs) ToMalwareScanningPropertiesOutputWithContext(ctx context.Context) MalwareScanningPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MalwareScanningPropertiesOutput)
}

func (i MalwareScanningPropertiesArgs) ToMalwareScanningPropertiesPtrOutput() MalwareScanningPropertiesPtrOutput {
	return i.ToMalwareScanningPropertiesPtrOutputWithContext(context.Background())
}

func (i MalwareScanningPropertiesArgs) ToMalwareScanningPropertiesPtrOutputWithContext(ctx context.Context) MalwareScanningPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MalwareScanningPropertiesOutput).ToMalwareScanningPropertiesPtrOutputWithContext(ctx)
}

// MalwareScanningPropertiesPtrInput is an input type that accepts MalwareScanningPropertiesArgs, MalwareScanningPropertiesPtr and MalwareScanningPropertiesPtrOutput values.
// You can construct a concrete instance of `MalwareScanningPropertiesPtrInput` via:
//
//	        MalwareScanningPropertiesArgs{...}
//
//	or:
//
//	        nil
type MalwareScanningPropertiesPtrInput interface {
	pulumi.Input

	ToMalwareScanningPropertiesPtrOutput() MalwareScanningPropertiesPtrOutput
	ToMalwareScanningPropertiesPtrOutputWithContext(context.Context) MalwareScanningPropertiesPtrOutput
}

type malwareScanningPropertiesPtrType MalwareScanningPropertiesArgs

func MalwareScanningPropertiesPtr(v *MalwareScanningPropertiesArgs) MalwareScanningPropertiesPtrInput {
	return (*malwareScanningPropertiesPtrType)(v)
}

func (*malwareScanningPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MalwareScanningProperties)(nil)).Elem()
}

func (i *malwareScanningPropertiesPtrType) ToMalwareScanningPropertiesPtrOutput() MalwareScanningPropertiesPtrOutput {
	return i.ToMalwareScanningPropertiesPtrOutputWithContext(context.Background())
}

func (i *malwareScanningPropertiesPtrType) ToMalwareScanningPropertiesPtrOutputWithContext(ctx context.Context) MalwareScanningPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MalwareScanningPropertiesPtrOutput)
}

// Properties of Malware Scanning.
type MalwareScanningPropertiesOutput struct{ *pulumi.OutputState }

func (MalwareScanningPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MalwareScanningProperties)(nil)).Elem()
}

func (o MalwareScanningPropertiesOutput) ToMalwareScanningPropertiesOutput() MalwareScanningPropertiesOutput {
	return o
}

func (o MalwareScanningPropertiesOutput) ToMalwareScanningPropertiesOutputWithContext(ctx context.Context) MalwareScanningPropertiesOutput {
	return o
}

func (o MalwareScanningPropertiesOutput) ToMalwareScanningPropertiesPtrOutput() MalwareScanningPropertiesPtrOutput {
	return o.ToMalwareScanningPropertiesPtrOutputWithContext(context.Background())
}

func (o MalwareScanningPropertiesOutput) ToMalwareScanningPropertiesPtrOutputWithContext(ctx context.Context) MalwareScanningPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MalwareScanningProperties) *MalwareScanningProperties {
		return &v
	}).(MalwareScanningPropertiesPtrOutput)
}

// Defines the max GB to be scanned per Month. Set to -1 if no capping is needed.
func (o MalwareScanningPropertiesOutput) CapGBPerMonth() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MalwareScanningProperties) *int { return v.CapGBPerMonth }).(pulumi.IntPtrOutput)
}

// Indicates whether On Upload malware scanning should be enabled.
func (o MalwareScanningPropertiesOutput) IsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MalwareScanningProperties) *bool { return v.IsEnabled }).(pulumi.BoolPtrOutput)
}

// Optional. Resource id of an Event Grid Topic to send scan results to.
func (o MalwareScanningPropertiesOutput) ScanResultsEventGridTopicResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MalwareScanningProperties) *string { return v.ScanResultsEventGridTopicResourceId }).(pulumi.StringPtrOutput)
}

type MalwareScanningPropertiesPtrOutput struct{ *pulumi.OutputState }

func (MalwareScanningPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MalwareScanningProperties)(nil)).Elem()
}

func (o MalwareScanningPropertiesPtrOutput) ToMalwareScanningPropertiesPtrOutput() MalwareScanningPropertiesPtrOutput {
	return o
}

func (o MalwareScanningPropertiesPtrOutput) ToMalwareScanningPropertiesPtrOutputWithContext(ctx context.Context) MalwareScanningPropertiesPtrOutput {
	return o
}

func (o MalwareScanningPropertiesPtrOutput) Elem() MalwareScanningPropertiesOutput {
	return o.ApplyT(func(v *MalwareScanningProperties) MalwareScanningProperties {
		if v != nil {
			return *v
		}
		var ret MalwareScanningProperties
		return ret
	}).(MalwareScanningPropertiesOutput)
}

// Defines the max GB to be scanned per Month. Set to -1 if no capping is needed.
func (o MalwareScanningPropertiesPtrOutput) CapGBPerMonth() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MalwareScanningProperties) *int {
		if v == nil {
			return nil
		}
		return v.CapGBPerMonth
	}).(pulumi.IntPtrOutput)
}

// Indicates whether On Upload malware scanning should be enabled.
func (o MalwareScanningPropertiesPtrOutput) IsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MalwareScanningProperties) *bool {
		if v == nil {
			return nil
		}
		return v.IsEnabled
	}).(pulumi.BoolPtrOutput)
}

// Optional. Resource id of an Event Grid Topic to send scan results to.
func (o MalwareScanningPropertiesPtrOutput) ScanResultsEventGridTopicResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MalwareScanningProperties) *string {
		if v == nil {
			return nil
		}
		return v.ScanResultsEventGridTopicResourceId
	}).(pulumi.StringPtrOutput)
}

// Properties of Malware Scanning.
type MalwareScanningPropertiesResponse struct {
	// Defines the max GB to be scanned per Month. Set to -1 if no capping is needed.
	CapGBPerMonth *int `pulumi:"capGBPerMonth"`
	// Indicates whether On Upload malware scanning should be enabled.
	IsEnabled *bool `pulumi:"isEnabled"`
	// Upon failure or partial success. Additional data describing Malware Scanning enable/disable operation.
	OperationStatus OperationStatusResponse `pulumi:"operationStatus"`
	// Optional. Resource id of an Event Grid Topic to send scan results to.
	ScanResultsEventGridTopicResourceId *string `pulumi:"scanResultsEventGridTopicResourceId"`
}

// Properties of Malware Scanning.
type MalwareScanningPropertiesResponseOutput struct{ *pulumi.OutputState }

func (MalwareScanningPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MalwareScanningPropertiesResponse)(nil)).Elem()
}

func (o MalwareScanningPropertiesResponseOutput) ToMalwareScanningPropertiesResponseOutput() MalwareScanningPropertiesResponseOutput {
	return o
}

func (o MalwareScanningPropertiesResponseOutput) ToMalwareScanningPropertiesResponseOutputWithContext(ctx context.Context) MalwareScanningPropertiesResponseOutput {
	return o
}

// Defines the max GB to be scanned per Month. Set to -1 if no capping is needed.
func (o MalwareScanningPropertiesResponseOutput) CapGBPerMonth() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MalwareScanningPropertiesResponse) *int { return v.CapGBPerMonth }).(pulumi.IntPtrOutput)
}

// Indicates whether On Upload malware scanning should be enabled.
func (o MalwareScanningPropertiesResponseOutput) IsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MalwareScanningPropertiesResponse) *bool { return v.IsEnabled }).(pulumi.BoolPtrOutput)
}

// Upon failure or partial success. Additional data describing Malware Scanning enable/disable operation.
func (o MalwareScanningPropertiesResponseOutput) OperationStatus() OperationStatusResponseOutput {
	return o.ApplyT(func(v MalwareScanningPropertiesResponse) OperationStatusResponse { return v.OperationStatus }).(OperationStatusResponseOutput)
}

// Optional. Resource id of an Event Grid Topic to send scan results to.
func (o MalwareScanningPropertiesResponseOutput) ScanResultsEventGridTopicResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MalwareScanningPropertiesResponse) *string { return v.ScanResultsEventGridTopicResourceId }).(pulumi.StringPtrOutput)
}

type MalwareScanningPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (MalwareScanningPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MalwareScanningPropertiesResponse)(nil)).Elem()
}

func (o MalwareScanningPropertiesResponsePtrOutput) ToMalwareScanningPropertiesResponsePtrOutput() MalwareScanningPropertiesResponsePtrOutput {
	return o
}

func (o MalwareScanningPropertiesResponsePtrOutput) ToMalwareScanningPropertiesResponsePtrOutputWithContext(ctx context.Context) MalwareScanningPropertiesResponsePtrOutput {
	return o
}

func (o MalwareScanningPropertiesResponsePtrOutput) Elem() MalwareScanningPropertiesResponseOutput {
	return o.ApplyT(func(v *MalwareScanningPropertiesResponse) MalwareScanningPropertiesResponse {
		if v != nil {
			return *v
		}
		var ret MalwareScanningPropertiesResponse
		return ret
	}).(MalwareScanningPropertiesResponseOutput)
}

// Defines the max GB to be scanned per Month. Set to -1 if no capping is needed.
func (o MalwareScanningPropertiesResponsePtrOutput) CapGBPerMonth() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MalwareScanningPropertiesResponse) *int {
		if v == nil {
			return nil
		}
		return v.CapGBPerMonth
	}).(pulumi.IntPtrOutput)
}

// Indicates whether On Upload malware scanning should be enabled.
func (o MalwareScanningPropertiesResponsePtrOutput) IsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MalwareScanningPropertiesResponse) *bool {
		if v == nil {
			return nil
		}
		return v.IsEnabled
	}).(pulumi.BoolPtrOutput)
}

// Upon failure or partial success. Additional data describing Malware Scanning enable/disable operation.
func (o MalwareScanningPropertiesResponsePtrOutput) OperationStatus() OperationStatusResponsePtrOutput {
	return o.ApplyT(func(v *MalwareScanningPropertiesResponse) *OperationStatusResponse {
		if v == nil {
			return nil
		}
		return &v.OperationStatus
	}).(OperationStatusResponsePtrOutput)
}

// Optional. Resource id of an Event Grid Topic to send scan results to.
func (o MalwareScanningPropertiesResponsePtrOutput) ScanResultsEventGridTopicResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MalwareScanningPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.ScanResultsEventGridTopicResourceId
	}).(pulumi.StringPtrOutput)
}

// A status describing the success/failure of the enablement/disablement operation.
type OperationStatusResponse struct {
	// The operation status code.
	Code *string `pulumi:"code"`
	// Additional information regarding the success/failure of the operation.
	Message *string `pulumi:"message"`
}

// A status describing the success/failure of the enablement/disablement operation.
type OperationStatusResponseOutput struct{ *pulumi.OutputState }

func (OperationStatusResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OperationStatusResponse)(nil)).Elem()
}

func (o OperationStatusResponseOutput) ToOperationStatusResponseOutput() OperationStatusResponseOutput {
	return o
}

func (o OperationStatusResponseOutput) ToOperationStatusResponseOutputWithContext(ctx context.Context) OperationStatusResponseOutput {
	return o
}

// The operation status code.
func (o OperationStatusResponseOutput) Code() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OperationStatusResponse) *string { return v.Code }).(pulumi.StringPtrOutput)
}

// Additional information regarding the success/failure of the operation.
func (o OperationStatusResponseOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OperationStatusResponse) *string { return v.Message }).(pulumi.StringPtrOutput)
}

type OperationStatusResponsePtrOutput struct{ *pulumi.OutputState }

func (OperationStatusResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OperationStatusResponse)(nil)).Elem()
}

func (o OperationStatusResponsePtrOutput) ToOperationStatusResponsePtrOutput() OperationStatusResponsePtrOutput {
	return o
}

func (o OperationStatusResponsePtrOutput) ToOperationStatusResponsePtrOutputWithContext(ctx context.Context) OperationStatusResponsePtrOutput {
	return o
}

func (o OperationStatusResponsePtrOutput) Elem() OperationStatusResponseOutput {
	return o.ApplyT(func(v *OperationStatusResponse) OperationStatusResponse {
		if v != nil {
			return *v
		}
		var ret OperationStatusResponse
		return ret
	}).(OperationStatusResponseOutput)
}

// The operation status code.
func (o OperationStatusResponsePtrOutput) Code() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OperationStatusResponse) *string {
		if v == nil {
			return nil
		}
		return v.Code
	}).(pulumi.StringPtrOutput)
}

// Additional information regarding the success/failure of the operation.
func (o OperationStatusResponsePtrOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OperationStatusResponse) *string {
		if v == nil {
			return nil
		}
		return v.Message
	}).(pulumi.StringPtrOutput)
}

// Properties of Sensitive Data Discovery.
type SensitiveDataDiscoveryProperties struct {
	// Indicates whether Sensitive Data Discovery should be enabled.
	IsEnabled *bool `pulumi:"isEnabled"`
}

// SensitiveDataDiscoveryPropertiesInput is an input type that accepts SensitiveDataDiscoveryPropertiesArgs and SensitiveDataDiscoveryPropertiesOutput values.
// You can construct a concrete instance of `SensitiveDataDiscoveryPropertiesInput` via:
//
//	SensitiveDataDiscoveryPropertiesArgs{...}
type SensitiveDataDiscoveryPropertiesInput interface {
	pulumi.Input

	ToSensitiveDataDiscoveryPropertiesOutput() SensitiveDataDiscoveryPropertiesOutput
	ToSensitiveDataDiscoveryPropertiesOutputWithContext(context.Context) SensitiveDataDiscoveryPropertiesOutput
}

// Properties of Sensitive Data Discovery.
type SensitiveDataDiscoveryPropertiesArgs struct {
	// Indicates whether Sensitive Data Discovery should be enabled.
	IsEnabled pulumi.BoolPtrInput `pulumi:"isEnabled"`
}

func (SensitiveDataDiscoveryPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SensitiveDataDiscoveryProperties)(nil)).Elem()
}

func (i SensitiveDataDiscoveryPropertiesArgs) ToSensitiveDataDiscoveryPropertiesOutput() SensitiveDataDiscoveryPropertiesOutput {
	return i.ToSensitiveDataDiscoveryPropertiesOutputWithContext(context.Background())
}

func (i SensitiveDataDiscoveryPropertiesArgs) ToSensitiveDataDiscoveryPropertiesOutputWithContext(ctx context.Context) SensitiveDataDiscoveryPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SensitiveDataDiscoveryPropertiesOutput)
}

func (i SensitiveDataDiscoveryPropertiesArgs) ToSensitiveDataDiscoveryPropertiesPtrOutput() SensitiveDataDiscoveryPropertiesPtrOutput {
	return i.ToSensitiveDataDiscoveryPropertiesPtrOutputWithContext(context.Background())
}

func (i SensitiveDataDiscoveryPropertiesArgs) ToSensitiveDataDiscoveryPropertiesPtrOutputWithContext(ctx context.Context) SensitiveDataDiscoveryPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SensitiveDataDiscoveryPropertiesOutput).ToSensitiveDataDiscoveryPropertiesPtrOutputWithContext(ctx)
}

// SensitiveDataDiscoveryPropertiesPtrInput is an input type that accepts SensitiveDataDiscoveryPropertiesArgs, SensitiveDataDiscoveryPropertiesPtr and SensitiveDataDiscoveryPropertiesPtrOutput values.
// You can construct a concrete instance of `SensitiveDataDiscoveryPropertiesPtrInput` via:
//
//	        SensitiveDataDiscoveryPropertiesArgs{...}
//
//	or:
//
//	        nil
type SensitiveDataDiscoveryPropertiesPtrInput interface {
	pulumi.Input

	ToSensitiveDataDiscoveryPropertiesPtrOutput() SensitiveDataDiscoveryPropertiesPtrOutput
	ToSensitiveDataDiscoveryPropertiesPtrOutputWithContext(context.Context) SensitiveDataDiscoveryPropertiesPtrOutput
}

type sensitiveDataDiscoveryPropertiesPtrType SensitiveDataDiscoveryPropertiesArgs

func SensitiveDataDiscoveryPropertiesPtr(v *SensitiveDataDiscoveryPropertiesArgs) SensitiveDataDiscoveryPropertiesPtrInput {
	return (*sensitiveDataDiscoveryPropertiesPtrType)(v)
}

func (*sensitiveDataDiscoveryPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SensitiveDataDiscoveryProperties)(nil)).Elem()
}

func (i *sensitiveDataDiscoveryPropertiesPtrType) ToSensitiveDataDiscoveryPropertiesPtrOutput() SensitiveDataDiscoveryPropertiesPtrOutput {
	return i.ToSensitiveDataDiscoveryPropertiesPtrOutputWithContext(context.Background())
}

func (i *sensitiveDataDiscoveryPropertiesPtrType) ToSensitiveDataDiscoveryPropertiesPtrOutputWithContext(ctx context.Context) SensitiveDataDiscoveryPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SensitiveDataDiscoveryPropertiesPtrOutput)
}

// Properties of Sensitive Data Discovery.
type SensitiveDataDiscoveryPropertiesOutput struct{ *pulumi.OutputState }

func (SensitiveDataDiscoveryPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SensitiveDataDiscoveryProperties)(nil)).Elem()
}

func (o SensitiveDataDiscoveryPropertiesOutput) ToSensitiveDataDiscoveryPropertiesOutput() SensitiveDataDiscoveryPropertiesOutput {
	return o
}

func (o SensitiveDataDiscoveryPropertiesOutput) ToSensitiveDataDiscoveryPropertiesOutputWithContext(ctx context.Context) SensitiveDataDiscoveryPropertiesOutput {
	return o
}

func (o SensitiveDataDiscoveryPropertiesOutput) ToSensitiveDataDiscoveryPropertiesPtrOutput() SensitiveDataDiscoveryPropertiesPtrOutput {
	return o.ToSensitiveDataDiscoveryPropertiesPtrOutputWithContext(context.Background())
}

func (o SensitiveDataDiscoveryPropertiesOutput) ToSensitiveDataDiscoveryPropertiesPtrOutputWithContext(ctx context.Context) SensitiveDataDiscoveryPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SensitiveDataDiscoveryProperties) *SensitiveDataDiscoveryProperties {
		return &v
	}).(SensitiveDataDiscoveryPropertiesPtrOutput)
}

// Indicates whether Sensitive Data Discovery should be enabled.
func (o SensitiveDataDiscoveryPropertiesOutput) IsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SensitiveDataDiscoveryProperties) *bool { return v.IsEnabled }).(pulumi.BoolPtrOutput)
}

type SensitiveDataDiscoveryPropertiesPtrOutput struct{ *pulumi.OutputState }

func (SensitiveDataDiscoveryPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SensitiveDataDiscoveryProperties)(nil)).Elem()
}

func (o SensitiveDataDiscoveryPropertiesPtrOutput) ToSensitiveDataDiscoveryPropertiesPtrOutput() SensitiveDataDiscoveryPropertiesPtrOutput {
	return o
}

func (o SensitiveDataDiscoveryPropertiesPtrOutput) ToSensitiveDataDiscoveryPropertiesPtrOutputWithContext(ctx context.Context) SensitiveDataDiscoveryPropertiesPtrOutput {
	return o
}

func (o SensitiveDataDiscoveryPropertiesPtrOutput) Elem() SensitiveDataDiscoveryPropertiesOutput {
	return o.ApplyT(func(v *SensitiveDataDiscoveryProperties) SensitiveDataDiscoveryProperties {
		if v != nil {
			return *v
		}
		var ret SensitiveDataDiscoveryProperties
		return ret
	}).(SensitiveDataDiscoveryPropertiesOutput)
}

// Indicates whether Sensitive Data Discovery should be enabled.
func (o SensitiveDataDiscoveryPropertiesPtrOutput) IsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SensitiveDataDiscoveryProperties) *bool {
		if v == nil {
			return nil
		}
		return v.IsEnabled
	}).(pulumi.BoolPtrOutput)
}

// Properties of Sensitive Data Discovery.
type SensitiveDataDiscoveryPropertiesResponse struct {
	// Indicates whether Sensitive Data Discovery should be enabled.
	IsEnabled *bool `pulumi:"isEnabled"`
	// Upon failure or partial success. Additional data describing Sensitive Data Discovery enable/disable operation.
	OperationStatus OperationStatusResponse `pulumi:"operationStatus"`
}

// Properties of Sensitive Data Discovery.
type SensitiveDataDiscoveryPropertiesResponseOutput struct{ *pulumi.OutputState }

func (SensitiveDataDiscoveryPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SensitiveDataDiscoveryPropertiesResponse)(nil)).Elem()
}

func (o SensitiveDataDiscoveryPropertiesResponseOutput) ToSensitiveDataDiscoveryPropertiesResponseOutput() SensitiveDataDiscoveryPropertiesResponseOutput {
	return o
}

func (o SensitiveDataDiscoveryPropertiesResponseOutput) ToSensitiveDataDiscoveryPropertiesResponseOutputWithContext(ctx context.Context) SensitiveDataDiscoveryPropertiesResponseOutput {
	return o
}

// Indicates whether Sensitive Data Discovery should be enabled.
func (o SensitiveDataDiscoveryPropertiesResponseOutput) IsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SensitiveDataDiscoveryPropertiesResponse) *bool { return v.IsEnabled }).(pulumi.BoolPtrOutput)
}

// Upon failure or partial success. Additional data describing Sensitive Data Discovery enable/disable operation.
func (o SensitiveDataDiscoveryPropertiesResponseOutput) OperationStatus() OperationStatusResponseOutput {
	return o.ApplyT(func(v SensitiveDataDiscoveryPropertiesResponse) OperationStatusResponse { return v.OperationStatus }).(OperationStatusResponseOutput)
}

type SensitiveDataDiscoveryPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (SensitiveDataDiscoveryPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SensitiveDataDiscoveryPropertiesResponse)(nil)).Elem()
}

func (o SensitiveDataDiscoveryPropertiesResponsePtrOutput) ToSensitiveDataDiscoveryPropertiesResponsePtrOutput() SensitiveDataDiscoveryPropertiesResponsePtrOutput {
	return o
}

func (o SensitiveDataDiscoveryPropertiesResponsePtrOutput) ToSensitiveDataDiscoveryPropertiesResponsePtrOutputWithContext(ctx context.Context) SensitiveDataDiscoveryPropertiesResponsePtrOutput {
	return o
}

func (o SensitiveDataDiscoveryPropertiesResponsePtrOutput) Elem() SensitiveDataDiscoveryPropertiesResponseOutput {
	return o.ApplyT(func(v *SensitiveDataDiscoveryPropertiesResponse) SensitiveDataDiscoveryPropertiesResponse {
		if v != nil {
			return *v
		}
		var ret SensitiveDataDiscoveryPropertiesResponse
		return ret
	}).(SensitiveDataDiscoveryPropertiesResponseOutput)
}

// Indicates whether Sensitive Data Discovery should be enabled.
func (o SensitiveDataDiscoveryPropertiesResponsePtrOutput) IsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SensitiveDataDiscoveryPropertiesResponse) *bool {
		if v == nil {
			return nil
		}
		return v.IsEnabled
	}).(pulumi.BoolPtrOutput)
}

// Upon failure or partial success. Additional data describing Sensitive Data Discovery enable/disable operation.
func (o SensitiveDataDiscoveryPropertiesResponsePtrOutput) OperationStatus() OperationStatusResponsePtrOutput {
	return o.ApplyT(func(v *SensitiveDataDiscoveryPropertiesResponse) *OperationStatusResponse {
		if v == nil {
			return nil
		}
		return &v.OperationStatus
	}).(OperationStatusResponsePtrOutput)
}

func init() {
	pulumi.RegisterOutputType(MalwareScanningPropertiesOutput{})
	pulumi.RegisterOutputType(MalwareScanningPropertiesPtrOutput{})
	pulumi.RegisterOutputType(MalwareScanningPropertiesResponseOutput{})
	pulumi.RegisterOutputType(MalwareScanningPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(OperationStatusResponseOutput{})
	pulumi.RegisterOutputType(OperationStatusResponsePtrOutput{})
	pulumi.RegisterOutputType(SensitiveDataDiscoveryPropertiesOutput{})
	pulumi.RegisterOutputType(SensitiveDataDiscoveryPropertiesPtrOutput{})
	pulumi.RegisterOutputType(SensitiveDataDiscoveryPropertiesResponseOutput{})
	pulumi.RegisterOutputType(SensitiveDataDiscoveryPropertiesResponsePtrOutput{})
}
