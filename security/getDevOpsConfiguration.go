// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package security

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v3/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// DevOps Configuration resource.
//
// Uses Azure REST API version 2024-04-01.
//
// Other available API versions: 2023-09-01-preview, 2024-05-15-preview, 2025-03-01. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native security [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
func LookupDevOpsConfiguration(ctx *pulumi.Context, args *LookupDevOpsConfigurationArgs, opts ...pulumi.InvokeOption) (*LookupDevOpsConfigurationResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv LookupDevOpsConfigurationResult
	err := ctx.Invoke("azure-native:security:getDevOpsConfiguration", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupDevOpsConfigurationArgs struct {
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The security connector name.
	SecurityConnectorName string `pulumi:"securityConnectorName"`
}

// DevOps Configuration resource.
type LookupDevOpsConfigurationResult struct {
	// The Azure API version of the resource.
	AzureApiVersion string `pulumi:"azureApiVersion"`
	// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	Id string `pulumi:"id"`
	// The name of the resource
	Name string `pulumi:"name"`
	// DevOps Configuration properties.
	Properties DevOpsConfigurationPropertiesResponse `pulumi:"properties"`
	// Metadata pertaining to creation and last modification of the resource.
	SystemData SystemDataResponse `pulumi:"systemData"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type string `pulumi:"type"`
}

func LookupDevOpsConfigurationOutput(ctx *pulumi.Context, args LookupDevOpsConfigurationOutputArgs, opts ...pulumi.InvokeOption) LookupDevOpsConfigurationResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupDevOpsConfigurationResultOutput, error) {
			args := v.(LookupDevOpsConfigurationArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: utilities.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("azure-native:security:getDevOpsConfiguration", args, LookupDevOpsConfigurationResultOutput{}, options).(LookupDevOpsConfigurationResultOutput), nil
		}).(LookupDevOpsConfigurationResultOutput)
}

type LookupDevOpsConfigurationOutputArgs struct {
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
	// The security connector name.
	SecurityConnectorName pulumi.StringInput `pulumi:"securityConnectorName"`
}

func (LookupDevOpsConfigurationOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDevOpsConfigurationArgs)(nil)).Elem()
}

// DevOps Configuration resource.
type LookupDevOpsConfigurationResultOutput struct{ *pulumi.OutputState }

func (LookupDevOpsConfigurationResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDevOpsConfigurationResult)(nil)).Elem()
}

func (o LookupDevOpsConfigurationResultOutput) ToLookupDevOpsConfigurationResultOutput() LookupDevOpsConfigurationResultOutput {
	return o
}

func (o LookupDevOpsConfigurationResultOutput) ToLookupDevOpsConfigurationResultOutputWithContext(ctx context.Context) LookupDevOpsConfigurationResultOutput {
	return o
}

// The Azure API version of the resource.
func (o LookupDevOpsConfigurationResultOutput) AzureApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDevOpsConfigurationResult) string { return v.AzureApiVersion }).(pulumi.StringOutput)
}

// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
func (o LookupDevOpsConfigurationResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDevOpsConfigurationResult) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the resource
func (o LookupDevOpsConfigurationResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDevOpsConfigurationResult) string { return v.Name }).(pulumi.StringOutput)
}

// DevOps Configuration properties.
func (o LookupDevOpsConfigurationResultOutput) Properties() DevOpsConfigurationPropertiesResponseOutput {
	return o.ApplyT(func(v LookupDevOpsConfigurationResult) DevOpsConfigurationPropertiesResponse { return v.Properties }).(DevOpsConfigurationPropertiesResponseOutput)
}

// Metadata pertaining to creation and last modification of the resource.
func (o LookupDevOpsConfigurationResultOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v LookupDevOpsConfigurationResult) SystemDataResponse { return v.SystemData }).(SystemDataResponseOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o LookupDevOpsConfigurationResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDevOpsConfigurationResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupDevOpsConfigurationResultOutput{})
}
