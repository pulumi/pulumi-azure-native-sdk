// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20240515preview

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// DevOps Policy assignment resource.
type DevOpsPolicyAssignment struct {
	pulumi.CustomResourceState

	// The name of the resource
	Name pulumi.StringOutput `pulumi:"name"`
	// Properties of the DevOps policy assignment resource.
	Properties DevOpsPolicyAssignmentPropertiesResponseOutput `pulumi:"properties"`
	// Metadata pertaining to creation and last modification of the resource.
	SystemData SystemDataResponseOutput `pulumi:"systemData"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewDevOpsPolicyAssignment registers a new resource with the given unique name, arguments, and options.
func NewDevOpsPolicyAssignment(ctx *pulumi.Context,
	name string, args *DevOpsPolicyAssignmentArgs, opts ...pulumi.ResourceOption) (*DevOpsPolicyAssignment, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	if args.SecurityConnectorName == nil {
		return nil, errors.New("invalid value for required argument 'SecurityConnectorName'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:security:DevOpsPolicyAssignment"),
		},
	})
	opts = append(opts, aliases)
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource DevOpsPolicyAssignment
	err := ctx.RegisterResource("azure-native:security/v20240515preview:DevOpsPolicyAssignment", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDevOpsPolicyAssignment gets an existing DevOpsPolicyAssignment resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDevOpsPolicyAssignment(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DevOpsPolicyAssignmentState, opts ...pulumi.ResourceOption) (*DevOpsPolicyAssignment, error) {
	var resource DevOpsPolicyAssignment
	err := ctx.ReadResource("azure-native:security/v20240515preview:DevOpsPolicyAssignment", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DevOpsPolicyAssignment resources.
type devOpsPolicyAssignmentState struct {
}

type DevOpsPolicyAssignmentState struct {
}

func (DevOpsPolicyAssignmentState) ElementType() reflect.Type {
	return reflect.TypeOf((*devOpsPolicyAssignmentState)(nil)).Elem()
}

type devOpsPolicyAssignmentArgs struct {
	// The policy assignment Id.
	PolicyAssignmentId *string `pulumi:"policyAssignmentId"`
	// Properties of the DevOps policy assignment resource.
	Properties *DevOpsPolicyAssignmentProperties `pulumi:"properties"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The security connector name.
	SecurityConnectorName string `pulumi:"securityConnectorName"`
}

// The set of arguments for constructing a DevOpsPolicyAssignment resource.
type DevOpsPolicyAssignmentArgs struct {
	// The policy assignment Id.
	PolicyAssignmentId pulumi.StringPtrInput
	// Properties of the DevOps policy assignment resource.
	Properties DevOpsPolicyAssignmentPropertiesPtrInput
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput
	// The security connector name.
	SecurityConnectorName pulumi.StringInput
}

func (DevOpsPolicyAssignmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*devOpsPolicyAssignmentArgs)(nil)).Elem()
}

type DevOpsPolicyAssignmentInput interface {
	pulumi.Input

	ToDevOpsPolicyAssignmentOutput() DevOpsPolicyAssignmentOutput
	ToDevOpsPolicyAssignmentOutputWithContext(ctx context.Context) DevOpsPolicyAssignmentOutput
}

func (*DevOpsPolicyAssignment) ElementType() reflect.Type {
	return reflect.TypeOf((**DevOpsPolicyAssignment)(nil)).Elem()
}

func (i *DevOpsPolicyAssignment) ToDevOpsPolicyAssignmentOutput() DevOpsPolicyAssignmentOutput {
	return i.ToDevOpsPolicyAssignmentOutputWithContext(context.Background())
}

func (i *DevOpsPolicyAssignment) ToDevOpsPolicyAssignmentOutputWithContext(ctx context.Context) DevOpsPolicyAssignmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DevOpsPolicyAssignmentOutput)
}

type DevOpsPolicyAssignmentOutput struct{ *pulumi.OutputState }

func (DevOpsPolicyAssignmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DevOpsPolicyAssignment)(nil)).Elem()
}

func (o DevOpsPolicyAssignmentOutput) ToDevOpsPolicyAssignmentOutput() DevOpsPolicyAssignmentOutput {
	return o
}

func (o DevOpsPolicyAssignmentOutput) ToDevOpsPolicyAssignmentOutputWithContext(ctx context.Context) DevOpsPolicyAssignmentOutput {
	return o
}

// The name of the resource
func (o DevOpsPolicyAssignmentOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *DevOpsPolicyAssignment) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Properties of the DevOps policy assignment resource.
func (o DevOpsPolicyAssignmentOutput) Properties() DevOpsPolicyAssignmentPropertiesResponseOutput {
	return o.ApplyT(func(v *DevOpsPolicyAssignment) DevOpsPolicyAssignmentPropertiesResponseOutput { return v.Properties }).(DevOpsPolicyAssignmentPropertiesResponseOutput)
}

// Metadata pertaining to creation and last modification of the resource.
func (o DevOpsPolicyAssignmentOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v *DevOpsPolicyAssignment) SystemDataResponseOutput { return v.SystemData }).(SystemDataResponseOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o DevOpsPolicyAssignmentOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *DevOpsPolicyAssignment) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(DevOpsPolicyAssignmentOutput{})
}
