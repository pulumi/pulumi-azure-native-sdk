// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20240515preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = utilities.GetEnvOrDefault

// Configuration payload for PR Annotations.
type ActionableRemediationResponse struct {
	// Repository branch configuration for PR Annotations.
	BranchConfiguration *TargetBranchConfigurationResponse `pulumi:"branchConfiguration"`
	// Gets or sets list of categories and severity levels.
	CategoryConfigurations []CategoryConfigurationResponse `pulumi:"categoryConfigurations"`
	// Update Settings.
	//
	// Enabled - Resource should inherit configurations from parent.
	// Disabled - Resource should not inherit configurations from parent.
	InheritFromParentState *string `pulumi:"inheritFromParentState"`
	// ActionableRemediation Setting.
	// None - the setting was never set.
	// Enabled - ActionableRemediation is enabled.
	// Disabled - ActionableRemediation is disabled.
	State *string `pulumi:"state"`
}

// Configuration payload for PR Annotations.
type ActionableRemediationResponseOutput struct{ *pulumi.OutputState }

func (ActionableRemediationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ActionableRemediationResponse)(nil)).Elem()
}

func (o ActionableRemediationResponseOutput) ToActionableRemediationResponseOutput() ActionableRemediationResponseOutput {
	return o
}

func (o ActionableRemediationResponseOutput) ToActionableRemediationResponseOutputWithContext(ctx context.Context) ActionableRemediationResponseOutput {
	return o
}

// Repository branch configuration for PR Annotations.
func (o ActionableRemediationResponseOutput) BranchConfiguration() TargetBranchConfigurationResponsePtrOutput {
	return o.ApplyT(func(v ActionableRemediationResponse) *TargetBranchConfigurationResponse { return v.BranchConfiguration }).(TargetBranchConfigurationResponsePtrOutput)
}

// Gets or sets list of categories and severity levels.
func (o ActionableRemediationResponseOutput) CategoryConfigurations() CategoryConfigurationResponseArrayOutput {
	return o.ApplyT(func(v ActionableRemediationResponse) []CategoryConfigurationResponse { return v.CategoryConfigurations }).(CategoryConfigurationResponseArrayOutput)
}

// Update Settings.
//
// Enabled - Resource should inherit configurations from parent.
// Disabled - Resource should not inherit configurations from parent.
func (o ActionableRemediationResponseOutput) InheritFromParentState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ActionableRemediationResponse) *string { return v.InheritFromParentState }).(pulumi.StringPtrOutput)
}

// ActionableRemediation Setting.
// None - the setting was never set.
// Enabled - ActionableRemediation is enabled.
// Disabled - ActionableRemediation is disabled.
func (o ActionableRemediationResponseOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ActionableRemediationResponse) *string { return v.State }).(pulumi.StringPtrOutput)
}

type ActionableRemediationResponsePtrOutput struct{ *pulumi.OutputState }

func (ActionableRemediationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ActionableRemediationResponse)(nil)).Elem()
}

func (o ActionableRemediationResponsePtrOutput) ToActionableRemediationResponsePtrOutput() ActionableRemediationResponsePtrOutput {
	return o
}

func (o ActionableRemediationResponsePtrOutput) ToActionableRemediationResponsePtrOutputWithContext(ctx context.Context) ActionableRemediationResponsePtrOutput {
	return o
}

func (o ActionableRemediationResponsePtrOutput) Elem() ActionableRemediationResponseOutput {
	return o.ApplyT(func(v *ActionableRemediationResponse) ActionableRemediationResponse {
		if v != nil {
			return *v
		}
		var ret ActionableRemediationResponse
		return ret
	}).(ActionableRemediationResponseOutput)
}

// Repository branch configuration for PR Annotations.
func (o ActionableRemediationResponsePtrOutput) BranchConfiguration() TargetBranchConfigurationResponsePtrOutput {
	return o.ApplyT(func(v *ActionableRemediationResponse) *TargetBranchConfigurationResponse {
		if v == nil {
			return nil
		}
		return v.BranchConfiguration
	}).(TargetBranchConfigurationResponsePtrOutput)
}

// Gets or sets list of categories and severity levels.
func (o ActionableRemediationResponsePtrOutput) CategoryConfigurations() CategoryConfigurationResponseArrayOutput {
	return o.ApplyT(func(v *ActionableRemediationResponse) []CategoryConfigurationResponse {
		if v == nil {
			return nil
		}
		return v.CategoryConfigurations
	}).(CategoryConfigurationResponseArrayOutput)
}

// Update Settings.
//
// Enabled - Resource should inherit configurations from parent.
// Disabled - Resource should not inherit configurations from parent.
func (o ActionableRemediationResponsePtrOutput) InheritFromParentState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ActionableRemediationResponse) *string {
		if v == nil {
			return nil
		}
		return v.InheritFromParentState
	}).(pulumi.StringPtrOutput)
}

// ActionableRemediation Setting.
// None - the setting was never set.
// Enabled - ActionableRemediation is enabled.
// Disabled - ActionableRemediation is disabled.
func (o ActionableRemediationResponsePtrOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ActionableRemediationResponse) *string {
		if v == nil {
			return nil
		}
		return v.State
	}).(pulumi.StringPtrOutput)
}

// Authorization payload.
type Authorization struct {
	// Gets or sets one-time OAuth code to exchange for refresh and access tokens.
	//
	// Only used during PUT/PATCH operations. The secret is cleared during GET.
	Code *string `pulumi:"code"`
}

// AuthorizationInput is an input type that accepts AuthorizationArgs and AuthorizationOutput values.
// You can construct a concrete instance of `AuthorizationInput` via:
//
//	AuthorizationArgs{...}
type AuthorizationInput interface {
	pulumi.Input

	ToAuthorizationOutput() AuthorizationOutput
	ToAuthorizationOutputWithContext(context.Context) AuthorizationOutput
}

// Authorization payload.
type AuthorizationArgs struct {
	// Gets or sets one-time OAuth code to exchange for refresh and access tokens.
	//
	// Only used during PUT/PATCH operations. The secret is cleared during GET.
	Code pulumi.StringPtrInput `pulumi:"code"`
}

func (AuthorizationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Authorization)(nil)).Elem()
}

func (i AuthorizationArgs) ToAuthorizationOutput() AuthorizationOutput {
	return i.ToAuthorizationOutputWithContext(context.Background())
}

func (i AuthorizationArgs) ToAuthorizationOutputWithContext(ctx context.Context) AuthorizationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorizationOutput)
}

func (i AuthorizationArgs) ToAuthorizationPtrOutput() AuthorizationPtrOutput {
	return i.ToAuthorizationPtrOutputWithContext(context.Background())
}

func (i AuthorizationArgs) ToAuthorizationPtrOutputWithContext(ctx context.Context) AuthorizationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorizationOutput).ToAuthorizationPtrOutputWithContext(ctx)
}

// AuthorizationPtrInput is an input type that accepts AuthorizationArgs, AuthorizationPtr and AuthorizationPtrOutput values.
// You can construct a concrete instance of `AuthorizationPtrInput` via:
//
//	        AuthorizationArgs{...}
//
//	or:
//
//	        nil
type AuthorizationPtrInput interface {
	pulumi.Input

	ToAuthorizationPtrOutput() AuthorizationPtrOutput
	ToAuthorizationPtrOutputWithContext(context.Context) AuthorizationPtrOutput
}

type authorizationPtrType AuthorizationArgs

func AuthorizationPtr(v *AuthorizationArgs) AuthorizationPtrInput {
	return (*authorizationPtrType)(v)
}

func (*authorizationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Authorization)(nil)).Elem()
}

func (i *authorizationPtrType) ToAuthorizationPtrOutput() AuthorizationPtrOutput {
	return i.ToAuthorizationPtrOutputWithContext(context.Background())
}

func (i *authorizationPtrType) ToAuthorizationPtrOutputWithContext(ctx context.Context) AuthorizationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorizationPtrOutput)
}

// Authorization payload.
type AuthorizationOutput struct{ *pulumi.OutputState }

func (AuthorizationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Authorization)(nil)).Elem()
}

func (o AuthorizationOutput) ToAuthorizationOutput() AuthorizationOutput {
	return o
}

func (o AuthorizationOutput) ToAuthorizationOutputWithContext(ctx context.Context) AuthorizationOutput {
	return o
}

func (o AuthorizationOutput) ToAuthorizationPtrOutput() AuthorizationPtrOutput {
	return o.ToAuthorizationPtrOutputWithContext(context.Background())
}

func (o AuthorizationOutput) ToAuthorizationPtrOutputWithContext(ctx context.Context) AuthorizationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Authorization) *Authorization {
		return &v
	}).(AuthorizationPtrOutput)
}

// Gets or sets one-time OAuth code to exchange for refresh and access tokens.
//
// Only used during PUT/PATCH operations. The secret is cleared during GET.
func (o AuthorizationOutput) Code() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Authorization) *string { return v.Code }).(pulumi.StringPtrOutput)
}

type AuthorizationPtrOutput struct{ *pulumi.OutputState }

func (AuthorizationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Authorization)(nil)).Elem()
}

func (o AuthorizationPtrOutput) ToAuthorizationPtrOutput() AuthorizationPtrOutput {
	return o
}

func (o AuthorizationPtrOutput) ToAuthorizationPtrOutputWithContext(ctx context.Context) AuthorizationPtrOutput {
	return o
}

func (o AuthorizationPtrOutput) Elem() AuthorizationOutput {
	return o.ApplyT(func(v *Authorization) Authorization {
		if v != nil {
			return *v
		}
		var ret Authorization
		return ret
	}).(AuthorizationOutput)
}

// Gets or sets one-time OAuth code to exchange for refresh and access tokens.
//
// Only used during PUT/PATCH operations. The secret is cleared during GET.
func (o AuthorizationPtrOutput) Code() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Authorization) *string {
		if v == nil {
			return nil
		}
		return v.Code
	}).(pulumi.StringPtrOutput)
}

// Authorization payload.
type AuthorizationResponse struct {
	// Gets or sets one-time OAuth code to exchange for refresh and access tokens.
	//
	// Only used during PUT/PATCH operations. The secret is cleared during GET.
	Code *string `pulumi:"code"`
}

// Authorization payload.
type AuthorizationResponseOutput struct{ *pulumi.OutputState }

func (AuthorizationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthorizationResponse)(nil)).Elem()
}

func (o AuthorizationResponseOutput) ToAuthorizationResponseOutput() AuthorizationResponseOutput {
	return o
}

func (o AuthorizationResponseOutput) ToAuthorizationResponseOutputWithContext(ctx context.Context) AuthorizationResponseOutput {
	return o
}

// Gets or sets one-time OAuth code to exchange for refresh and access tokens.
//
// Only used during PUT/PATCH operations. The secret is cleared during GET.
func (o AuthorizationResponseOutput) Code() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AuthorizationResponse) *string { return v.Code }).(pulumi.StringPtrOutput)
}

type AuthorizationResponsePtrOutput struct{ *pulumi.OutputState }

func (AuthorizationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AuthorizationResponse)(nil)).Elem()
}

func (o AuthorizationResponsePtrOutput) ToAuthorizationResponsePtrOutput() AuthorizationResponsePtrOutput {
	return o
}

func (o AuthorizationResponsePtrOutput) ToAuthorizationResponsePtrOutputWithContext(ctx context.Context) AuthorizationResponsePtrOutput {
	return o
}

func (o AuthorizationResponsePtrOutput) Elem() AuthorizationResponseOutput {
	return o.ApplyT(func(v *AuthorizationResponse) AuthorizationResponse {
		if v != nil {
			return *v
		}
		var ret AuthorizationResponse
		return ret
	}).(AuthorizationResponseOutput)
}

// Gets or sets one-time OAuth code to exchange for refresh and access tokens.
//
// Only used during PUT/PATCH operations. The secret is cleared during GET.
func (o AuthorizationResponsePtrOutput) Code() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AuthorizationResponse) *string {
		if v == nil {
			return nil
		}
		return v.Code
	}).(pulumi.StringPtrOutput)
}

// Azure DevOps Organization properties.
type AzureDevOpsOrgPropertiesResponse struct {
	// Configuration payload for PR Annotations.
	ActionableRemediation *ActionableRemediationResponse `pulumi:"actionableRemediation"`
	// Details about resource onboarding status across all connectors.
	//
	// OnboardedByOtherConnector - this resource has already been onboarded to another connector. This is only applicable to top-level resources.
	// Onboarded - this resource has already been onboarded by the specified connector.
	// NotOnboarded - this resource has not been onboarded to any connector.
	// NotApplicable - the onboarding state is not applicable to the current endpoint.
	OnboardingState *string `pulumi:"onboardingState"`
	// The provisioning state of the resource.
	//
	// Pending - Provisioning pending.
	// Failed - Provisioning failed.
	// Succeeded - Successful provisioning.
	// Canceled - Provisioning canceled.
	// PendingDeletion - Deletion pending.
	// DeletionSuccess - Deletion successful.
	// DeletionFailure - Deletion failure.
	ProvisioningState string `pulumi:"provisioningState"`
	// Gets the resource status message.
	ProvisioningStatusMessage string `pulumi:"provisioningStatusMessage"`
	// Gets the time when resource was last checked.
	ProvisioningStatusUpdateTimeUtc string `pulumi:"provisioningStatusUpdateTimeUtc"`
}

// Azure DevOps Organization properties.
type AzureDevOpsOrgPropertiesResponseOutput struct{ *pulumi.OutputState }

func (AzureDevOpsOrgPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureDevOpsOrgPropertiesResponse)(nil)).Elem()
}

func (o AzureDevOpsOrgPropertiesResponseOutput) ToAzureDevOpsOrgPropertiesResponseOutput() AzureDevOpsOrgPropertiesResponseOutput {
	return o
}

func (o AzureDevOpsOrgPropertiesResponseOutput) ToAzureDevOpsOrgPropertiesResponseOutputWithContext(ctx context.Context) AzureDevOpsOrgPropertiesResponseOutput {
	return o
}

// Configuration payload for PR Annotations.
func (o AzureDevOpsOrgPropertiesResponseOutput) ActionableRemediation() ActionableRemediationResponsePtrOutput {
	return o.ApplyT(func(v AzureDevOpsOrgPropertiesResponse) *ActionableRemediationResponse {
		return v.ActionableRemediation
	}).(ActionableRemediationResponsePtrOutput)
}

// Details about resource onboarding status across all connectors.
//
// OnboardedByOtherConnector - this resource has already been onboarded to another connector. This is only applicable to top-level resources.
// Onboarded - this resource has already been onboarded by the specified connector.
// NotOnboarded - this resource has not been onboarded to any connector.
// NotApplicable - the onboarding state is not applicable to the current endpoint.
func (o AzureDevOpsOrgPropertiesResponseOutput) OnboardingState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureDevOpsOrgPropertiesResponse) *string { return v.OnboardingState }).(pulumi.StringPtrOutput)
}

// The provisioning state of the resource.
//
// Pending - Provisioning pending.
// Failed - Provisioning failed.
// Succeeded - Successful provisioning.
// Canceled - Provisioning canceled.
// PendingDeletion - Deletion pending.
// DeletionSuccess - Deletion successful.
// DeletionFailure - Deletion failure.
func (o AzureDevOpsOrgPropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v AzureDevOpsOrgPropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Gets the resource status message.
func (o AzureDevOpsOrgPropertiesResponseOutput) ProvisioningStatusMessage() pulumi.StringOutput {
	return o.ApplyT(func(v AzureDevOpsOrgPropertiesResponse) string { return v.ProvisioningStatusMessage }).(pulumi.StringOutput)
}

// Gets the time when resource was last checked.
func (o AzureDevOpsOrgPropertiesResponseOutput) ProvisioningStatusUpdateTimeUtc() pulumi.StringOutput {
	return o.ApplyT(func(v AzureDevOpsOrgPropertiesResponse) string { return v.ProvisioningStatusUpdateTimeUtc }).(pulumi.StringOutput)
}

type AzureDevOpsOrgPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (AzureDevOpsOrgPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureDevOpsOrgPropertiesResponse)(nil)).Elem()
}

func (o AzureDevOpsOrgPropertiesResponsePtrOutput) ToAzureDevOpsOrgPropertiesResponsePtrOutput() AzureDevOpsOrgPropertiesResponsePtrOutput {
	return o
}

func (o AzureDevOpsOrgPropertiesResponsePtrOutput) ToAzureDevOpsOrgPropertiesResponsePtrOutputWithContext(ctx context.Context) AzureDevOpsOrgPropertiesResponsePtrOutput {
	return o
}

func (o AzureDevOpsOrgPropertiesResponsePtrOutput) Elem() AzureDevOpsOrgPropertiesResponseOutput {
	return o.ApplyT(func(v *AzureDevOpsOrgPropertiesResponse) AzureDevOpsOrgPropertiesResponse {
		if v != nil {
			return *v
		}
		var ret AzureDevOpsOrgPropertiesResponse
		return ret
	}).(AzureDevOpsOrgPropertiesResponseOutput)
}

// Configuration payload for PR Annotations.
func (o AzureDevOpsOrgPropertiesResponsePtrOutput) ActionableRemediation() ActionableRemediationResponsePtrOutput {
	return o.ApplyT(func(v *AzureDevOpsOrgPropertiesResponse) *ActionableRemediationResponse {
		if v == nil {
			return nil
		}
		return v.ActionableRemediation
	}).(ActionableRemediationResponsePtrOutput)
}

// Details about resource onboarding status across all connectors.
//
// OnboardedByOtherConnector - this resource has already been onboarded to another connector. This is only applicable to top-level resources.
// Onboarded - this resource has already been onboarded by the specified connector.
// NotOnboarded - this resource has not been onboarded to any connector.
// NotApplicable - the onboarding state is not applicable to the current endpoint.
func (o AzureDevOpsOrgPropertiesResponsePtrOutput) OnboardingState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureDevOpsOrgPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.OnboardingState
	}).(pulumi.StringPtrOutput)
}

// The provisioning state of the resource.
//
// Pending - Provisioning pending.
// Failed - Provisioning failed.
// Succeeded - Successful provisioning.
// Canceled - Provisioning canceled.
// PendingDeletion - Deletion pending.
// DeletionSuccess - Deletion successful.
// DeletionFailure - Deletion failure.
func (o AzureDevOpsOrgPropertiesResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureDevOpsOrgPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// Gets the resource status message.
func (o AzureDevOpsOrgPropertiesResponsePtrOutput) ProvisioningStatusMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureDevOpsOrgPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ProvisioningStatusMessage
	}).(pulumi.StringPtrOutput)
}

// Gets the time when resource was last checked.
func (o AzureDevOpsOrgPropertiesResponsePtrOutput) ProvisioningStatusUpdateTimeUtc() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureDevOpsOrgPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ProvisioningStatusUpdateTimeUtc
	}).(pulumi.StringPtrOutput)
}

// Azure DevOps Organization resource.
type AzureDevOpsOrgResponse struct {
	// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	Id string `pulumi:"id"`
	// The name of the resource
	Name string `pulumi:"name"`
	// Azure DevOps Organization properties.
	Properties *AzureDevOpsOrgPropertiesResponse `pulumi:"properties"`
	// Metadata pertaining to creation and last modification of the resource.
	SystemData SystemDataResponse `pulumi:"systemData"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type string `pulumi:"type"`
}

// Azure DevOps Organization resource.
type AzureDevOpsOrgResponseOutput struct{ *pulumi.OutputState }

func (AzureDevOpsOrgResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureDevOpsOrgResponse)(nil)).Elem()
}

func (o AzureDevOpsOrgResponseOutput) ToAzureDevOpsOrgResponseOutput() AzureDevOpsOrgResponseOutput {
	return o
}

func (o AzureDevOpsOrgResponseOutput) ToAzureDevOpsOrgResponseOutputWithContext(ctx context.Context) AzureDevOpsOrgResponseOutput {
	return o
}

// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
func (o AzureDevOpsOrgResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v AzureDevOpsOrgResponse) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the resource
func (o AzureDevOpsOrgResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v AzureDevOpsOrgResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Azure DevOps Organization properties.
func (o AzureDevOpsOrgResponseOutput) Properties() AzureDevOpsOrgPropertiesResponsePtrOutput {
	return o.ApplyT(func(v AzureDevOpsOrgResponse) *AzureDevOpsOrgPropertiesResponse { return v.Properties }).(AzureDevOpsOrgPropertiesResponsePtrOutput)
}

// Metadata pertaining to creation and last modification of the resource.
func (o AzureDevOpsOrgResponseOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v AzureDevOpsOrgResponse) SystemDataResponse { return v.SystemData }).(SystemDataResponseOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o AzureDevOpsOrgResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v AzureDevOpsOrgResponse) string { return v.Type }).(pulumi.StringOutput)
}

type AzureDevOpsOrgResponseArrayOutput struct{ *pulumi.OutputState }

func (AzureDevOpsOrgResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AzureDevOpsOrgResponse)(nil)).Elem()
}

func (o AzureDevOpsOrgResponseArrayOutput) ToAzureDevOpsOrgResponseArrayOutput() AzureDevOpsOrgResponseArrayOutput {
	return o
}

func (o AzureDevOpsOrgResponseArrayOutput) ToAzureDevOpsOrgResponseArrayOutputWithContext(ctx context.Context) AzureDevOpsOrgResponseArrayOutput {
	return o
}

func (o AzureDevOpsOrgResponseArrayOutput) Index(i pulumi.IntInput) AzureDevOpsOrgResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AzureDevOpsOrgResponse {
		return vs[0].([]AzureDevOpsOrgResponse)[vs[1].(int)]
	}).(AzureDevOpsOrgResponseOutput)
}

// Severity level per category configuration for PR Annotations.
type CategoryConfigurationResponse struct {
	// Rule categories.
	// Code - code scanning results.
	// Artifact scanning results.
	// Dependencies scanning results.
	// IaC results.
	// Secrets scanning results.
	// Container scanning results.
	Category *string `pulumi:"category"`
	// Gets or sets minimum severity level for a given category.
	MinimumSeverityLevel *string `pulumi:"minimumSeverityLevel"`
}

// Severity level per category configuration for PR Annotations.
type CategoryConfigurationResponseOutput struct{ *pulumi.OutputState }

func (CategoryConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CategoryConfigurationResponse)(nil)).Elem()
}

func (o CategoryConfigurationResponseOutput) ToCategoryConfigurationResponseOutput() CategoryConfigurationResponseOutput {
	return o
}

func (o CategoryConfigurationResponseOutput) ToCategoryConfigurationResponseOutputWithContext(ctx context.Context) CategoryConfigurationResponseOutput {
	return o
}

// Rule categories.
// Code - code scanning results.
// Artifact scanning results.
// Dependencies scanning results.
// IaC results.
// Secrets scanning results.
// Container scanning results.
func (o CategoryConfigurationResponseOutput) Category() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CategoryConfigurationResponse) *string { return v.Category }).(pulumi.StringPtrOutput)
}

// Gets or sets minimum severity level for a given category.
func (o CategoryConfigurationResponseOutput) MinimumSeverityLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CategoryConfigurationResponse) *string { return v.MinimumSeverityLevel }).(pulumi.StringPtrOutput)
}

type CategoryConfigurationResponseArrayOutput struct{ *pulumi.OutputState }

func (CategoryConfigurationResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CategoryConfigurationResponse)(nil)).Elem()
}

func (o CategoryConfigurationResponseArrayOutput) ToCategoryConfigurationResponseArrayOutput() CategoryConfigurationResponseArrayOutput {
	return o
}

func (o CategoryConfigurationResponseArrayOutput) ToCategoryConfigurationResponseArrayOutputWithContext(ctx context.Context) CategoryConfigurationResponseArrayOutput {
	return o
}

func (o CategoryConfigurationResponseArrayOutput) Index(i pulumi.IntInput) CategoryConfigurationResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CategoryConfigurationResponse {
		return vs[0].([]CategoryConfigurationResponse)[vs[1].(int)]
	}).(CategoryConfigurationResponseOutput)
}

// Details about DevOps capability.
type DevOpsCapabilityResponse struct {
	// Gets the name of the DevOps capability.
	Name string `pulumi:"name"`
	// Gets the value of the DevOps capability.
	Value string `pulumi:"value"`
}

// Details about DevOps capability.
type DevOpsCapabilityResponseOutput struct{ *pulumi.OutputState }

func (DevOpsCapabilityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DevOpsCapabilityResponse)(nil)).Elem()
}

func (o DevOpsCapabilityResponseOutput) ToDevOpsCapabilityResponseOutput() DevOpsCapabilityResponseOutput {
	return o
}

func (o DevOpsCapabilityResponseOutput) ToDevOpsCapabilityResponseOutputWithContext(ctx context.Context) DevOpsCapabilityResponseOutput {
	return o
}

// Gets the name of the DevOps capability.
func (o DevOpsCapabilityResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DevOpsCapabilityResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Gets the value of the DevOps capability.
func (o DevOpsCapabilityResponseOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v DevOpsCapabilityResponse) string { return v.Value }).(pulumi.StringOutput)
}

type DevOpsCapabilityResponseArrayOutput struct{ *pulumi.OutputState }

func (DevOpsCapabilityResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DevOpsCapabilityResponse)(nil)).Elem()
}

func (o DevOpsCapabilityResponseArrayOutput) ToDevOpsCapabilityResponseArrayOutput() DevOpsCapabilityResponseArrayOutput {
	return o
}

func (o DevOpsCapabilityResponseArrayOutput) ToDevOpsCapabilityResponseArrayOutputWithContext(ctx context.Context) DevOpsCapabilityResponseArrayOutput {
	return o
}

func (o DevOpsCapabilityResponseArrayOutput) Index(i pulumi.IntInput) DevOpsCapabilityResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DevOpsCapabilityResponse {
		return vs[0].([]DevOpsCapabilityResponse)[vs[1].(int)]
	}).(DevOpsCapabilityResponseOutput)
}

// DevOps Configuration properties.
type DevOpsConfigurationProperties struct {
	// Authorization payload.
	Authorization *Authorization `pulumi:"authorization"`
	// AutoDiscovery states.
	AutoDiscovery *string `pulumi:"autoDiscovery"`
	// List of top-level inventory to select when AutoDiscovery is disabled.
	// This field is ignored when AutoDiscovery is enabled.
	TopLevelInventoryList []string `pulumi:"topLevelInventoryList"`
}

// DevOpsConfigurationPropertiesInput is an input type that accepts DevOpsConfigurationPropertiesArgs and DevOpsConfigurationPropertiesOutput values.
// You can construct a concrete instance of `DevOpsConfigurationPropertiesInput` via:
//
//	DevOpsConfigurationPropertiesArgs{...}
type DevOpsConfigurationPropertiesInput interface {
	pulumi.Input

	ToDevOpsConfigurationPropertiesOutput() DevOpsConfigurationPropertiesOutput
	ToDevOpsConfigurationPropertiesOutputWithContext(context.Context) DevOpsConfigurationPropertiesOutput
}

// DevOps Configuration properties.
type DevOpsConfigurationPropertiesArgs struct {
	// Authorization payload.
	Authorization AuthorizationPtrInput `pulumi:"authorization"`
	// AutoDiscovery states.
	AutoDiscovery pulumi.StringPtrInput `pulumi:"autoDiscovery"`
	// List of top-level inventory to select when AutoDiscovery is disabled.
	// This field is ignored when AutoDiscovery is enabled.
	TopLevelInventoryList pulumi.StringArrayInput `pulumi:"topLevelInventoryList"`
}

func (DevOpsConfigurationPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DevOpsConfigurationProperties)(nil)).Elem()
}

func (i DevOpsConfigurationPropertiesArgs) ToDevOpsConfigurationPropertiesOutput() DevOpsConfigurationPropertiesOutput {
	return i.ToDevOpsConfigurationPropertiesOutputWithContext(context.Background())
}

func (i DevOpsConfigurationPropertiesArgs) ToDevOpsConfigurationPropertiesOutputWithContext(ctx context.Context) DevOpsConfigurationPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DevOpsConfigurationPropertiesOutput)
}

func (i DevOpsConfigurationPropertiesArgs) ToDevOpsConfigurationPropertiesPtrOutput() DevOpsConfigurationPropertiesPtrOutput {
	return i.ToDevOpsConfigurationPropertiesPtrOutputWithContext(context.Background())
}

func (i DevOpsConfigurationPropertiesArgs) ToDevOpsConfigurationPropertiesPtrOutputWithContext(ctx context.Context) DevOpsConfigurationPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DevOpsConfigurationPropertiesOutput).ToDevOpsConfigurationPropertiesPtrOutputWithContext(ctx)
}

// DevOpsConfigurationPropertiesPtrInput is an input type that accepts DevOpsConfigurationPropertiesArgs, DevOpsConfigurationPropertiesPtr and DevOpsConfigurationPropertiesPtrOutput values.
// You can construct a concrete instance of `DevOpsConfigurationPropertiesPtrInput` via:
//
//	        DevOpsConfigurationPropertiesArgs{...}
//
//	or:
//
//	        nil
type DevOpsConfigurationPropertiesPtrInput interface {
	pulumi.Input

	ToDevOpsConfigurationPropertiesPtrOutput() DevOpsConfigurationPropertiesPtrOutput
	ToDevOpsConfigurationPropertiesPtrOutputWithContext(context.Context) DevOpsConfigurationPropertiesPtrOutput
}

type devOpsConfigurationPropertiesPtrType DevOpsConfigurationPropertiesArgs

func DevOpsConfigurationPropertiesPtr(v *DevOpsConfigurationPropertiesArgs) DevOpsConfigurationPropertiesPtrInput {
	return (*devOpsConfigurationPropertiesPtrType)(v)
}

func (*devOpsConfigurationPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DevOpsConfigurationProperties)(nil)).Elem()
}

func (i *devOpsConfigurationPropertiesPtrType) ToDevOpsConfigurationPropertiesPtrOutput() DevOpsConfigurationPropertiesPtrOutput {
	return i.ToDevOpsConfigurationPropertiesPtrOutputWithContext(context.Background())
}

func (i *devOpsConfigurationPropertiesPtrType) ToDevOpsConfigurationPropertiesPtrOutputWithContext(ctx context.Context) DevOpsConfigurationPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DevOpsConfigurationPropertiesPtrOutput)
}

// DevOps Configuration properties.
type DevOpsConfigurationPropertiesOutput struct{ *pulumi.OutputState }

func (DevOpsConfigurationPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DevOpsConfigurationProperties)(nil)).Elem()
}

func (o DevOpsConfigurationPropertiesOutput) ToDevOpsConfigurationPropertiesOutput() DevOpsConfigurationPropertiesOutput {
	return o
}

func (o DevOpsConfigurationPropertiesOutput) ToDevOpsConfigurationPropertiesOutputWithContext(ctx context.Context) DevOpsConfigurationPropertiesOutput {
	return o
}

func (o DevOpsConfigurationPropertiesOutput) ToDevOpsConfigurationPropertiesPtrOutput() DevOpsConfigurationPropertiesPtrOutput {
	return o.ToDevOpsConfigurationPropertiesPtrOutputWithContext(context.Background())
}

func (o DevOpsConfigurationPropertiesOutput) ToDevOpsConfigurationPropertiesPtrOutputWithContext(ctx context.Context) DevOpsConfigurationPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DevOpsConfigurationProperties) *DevOpsConfigurationProperties {
		return &v
	}).(DevOpsConfigurationPropertiesPtrOutput)
}

// Authorization payload.
func (o DevOpsConfigurationPropertiesOutput) Authorization() AuthorizationPtrOutput {
	return o.ApplyT(func(v DevOpsConfigurationProperties) *Authorization { return v.Authorization }).(AuthorizationPtrOutput)
}

// AutoDiscovery states.
func (o DevOpsConfigurationPropertiesOutput) AutoDiscovery() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DevOpsConfigurationProperties) *string { return v.AutoDiscovery }).(pulumi.StringPtrOutput)
}

// List of top-level inventory to select when AutoDiscovery is disabled.
// This field is ignored when AutoDiscovery is enabled.
func (o DevOpsConfigurationPropertiesOutput) TopLevelInventoryList() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DevOpsConfigurationProperties) []string { return v.TopLevelInventoryList }).(pulumi.StringArrayOutput)
}

type DevOpsConfigurationPropertiesPtrOutput struct{ *pulumi.OutputState }

func (DevOpsConfigurationPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DevOpsConfigurationProperties)(nil)).Elem()
}

func (o DevOpsConfigurationPropertiesPtrOutput) ToDevOpsConfigurationPropertiesPtrOutput() DevOpsConfigurationPropertiesPtrOutput {
	return o
}

func (o DevOpsConfigurationPropertiesPtrOutput) ToDevOpsConfigurationPropertiesPtrOutputWithContext(ctx context.Context) DevOpsConfigurationPropertiesPtrOutput {
	return o
}

func (o DevOpsConfigurationPropertiesPtrOutput) Elem() DevOpsConfigurationPropertiesOutput {
	return o.ApplyT(func(v *DevOpsConfigurationProperties) DevOpsConfigurationProperties {
		if v != nil {
			return *v
		}
		var ret DevOpsConfigurationProperties
		return ret
	}).(DevOpsConfigurationPropertiesOutput)
}

// Authorization payload.
func (o DevOpsConfigurationPropertiesPtrOutput) Authorization() AuthorizationPtrOutput {
	return o.ApplyT(func(v *DevOpsConfigurationProperties) *Authorization {
		if v == nil {
			return nil
		}
		return v.Authorization
	}).(AuthorizationPtrOutput)
}

// AutoDiscovery states.
func (o DevOpsConfigurationPropertiesPtrOutput) AutoDiscovery() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DevOpsConfigurationProperties) *string {
		if v == nil {
			return nil
		}
		return v.AutoDiscovery
	}).(pulumi.StringPtrOutput)
}

// List of top-level inventory to select when AutoDiscovery is disabled.
// This field is ignored when AutoDiscovery is enabled.
func (o DevOpsConfigurationPropertiesPtrOutput) TopLevelInventoryList() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DevOpsConfigurationProperties) []string {
		if v == nil {
			return nil
		}
		return v.TopLevelInventoryList
	}).(pulumi.StringArrayOutput)
}

// DevOps Configuration properties.
type DevOpsConfigurationPropertiesResponse struct {
	// Authorization payload.
	Authorization *AuthorizationResponse `pulumi:"authorization"`
	// AutoDiscovery states.
	AutoDiscovery *string `pulumi:"autoDiscovery"`
	// List of capabilities assigned to the DevOps configuration during the discovery process.
	Capabilities []DevOpsCapabilityResponse `pulumi:"capabilities"`
	// The provisioning state of the resource.
	//
	// Pending - Provisioning pending.
	// Failed - Provisioning failed.
	// Succeeded - Successful provisioning.
	// Canceled - Provisioning canceled.
	// PendingDeletion - Deletion pending.
	// DeletionSuccess - Deletion successful.
	// DeletionFailure - Deletion failure.
	ProvisioningState string `pulumi:"provisioningState"`
	// Gets the resource status message.
	ProvisioningStatusMessage string `pulumi:"provisioningStatusMessage"`
	// Gets the time when resource was last checked.
	ProvisioningStatusUpdateTimeUtc string `pulumi:"provisioningStatusUpdateTimeUtc"`
	// List of top-level inventory to select when AutoDiscovery is disabled.
	// This field is ignored when AutoDiscovery is enabled.
	TopLevelInventoryList []string `pulumi:"topLevelInventoryList"`
}

// DevOps Configuration properties.
type DevOpsConfigurationPropertiesResponseOutput struct{ *pulumi.OutputState }

func (DevOpsConfigurationPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DevOpsConfigurationPropertiesResponse)(nil)).Elem()
}

func (o DevOpsConfigurationPropertiesResponseOutput) ToDevOpsConfigurationPropertiesResponseOutput() DevOpsConfigurationPropertiesResponseOutput {
	return o
}

func (o DevOpsConfigurationPropertiesResponseOutput) ToDevOpsConfigurationPropertiesResponseOutputWithContext(ctx context.Context) DevOpsConfigurationPropertiesResponseOutput {
	return o
}

// Authorization payload.
func (o DevOpsConfigurationPropertiesResponseOutput) Authorization() AuthorizationResponsePtrOutput {
	return o.ApplyT(func(v DevOpsConfigurationPropertiesResponse) *AuthorizationResponse { return v.Authorization }).(AuthorizationResponsePtrOutput)
}

// AutoDiscovery states.
func (o DevOpsConfigurationPropertiesResponseOutput) AutoDiscovery() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DevOpsConfigurationPropertiesResponse) *string { return v.AutoDiscovery }).(pulumi.StringPtrOutput)
}

// List of capabilities assigned to the DevOps configuration during the discovery process.
func (o DevOpsConfigurationPropertiesResponseOutput) Capabilities() DevOpsCapabilityResponseArrayOutput {
	return o.ApplyT(func(v DevOpsConfigurationPropertiesResponse) []DevOpsCapabilityResponse { return v.Capabilities }).(DevOpsCapabilityResponseArrayOutput)
}

// The provisioning state of the resource.
//
// Pending - Provisioning pending.
// Failed - Provisioning failed.
// Succeeded - Successful provisioning.
// Canceled - Provisioning canceled.
// PendingDeletion - Deletion pending.
// DeletionSuccess - Deletion successful.
// DeletionFailure - Deletion failure.
func (o DevOpsConfigurationPropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v DevOpsConfigurationPropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Gets the resource status message.
func (o DevOpsConfigurationPropertiesResponseOutput) ProvisioningStatusMessage() pulumi.StringOutput {
	return o.ApplyT(func(v DevOpsConfigurationPropertiesResponse) string { return v.ProvisioningStatusMessage }).(pulumi.StringOutput)
}

// Gets the time when resource was last checked.
func (o DevOpsConfigurationPropertiesResponseOutput) ProvisioningStatusUpdateTimeUtc() pulumi.StringOutput {
	return o.ApplyT(func(v DevOpsConfigurationPropertiesResponse) string { return v.ProvisioningStatusUpdateTimeUtc }).(pulumi.StringOutput)
}

// List of top-level inventory to select when AutoDiscovery is disabled.
// This field is ignored when AutoDiscovery is enabled.
func (o DevOpsConfigurationPropertiesResponseOutput) TopLevelInventoryList() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DevOpsConfigurationPropertiesResponse) []string { return v.TopLevelInventoryList }).(pulumi.StringArrayOutput)
}

// Properties of the DevOps policy assignment resource.
type DevOpsPolicyAssignmentProperties struct {
	// Gets or sets time when the assignment was created in UTC.
	AssignedAt *string `pulumi:"assignedAt"`
	// The behavior of a policy on descendant resources.
	DescendantBehavior *string `pulumi:"descendantBehavior"`
	// Condensed information to identify a DevOps Policy resource.
	Policy *DevOpsPolicyDescriptor `pulumi:"policy"`
	// Gets or sets the Azure resource id.
	ResourceId *string `pulumi:"resourceId"`
}

// DevOpsPolicyAssignmentPropertiesInput is an input type that accepts DevOpsPolicyAssignmentPropertiesArgs and DevOpsPolicyAssignmentPropertiesOutput values.
// You can construct a concrete instance of `DevOpsPolicyAssignmentPropertiesInput` via:
//
//	DevOpsPolicyAssignmentPropertiesArgs{...}
type DevOpsPolicyAssignmentPropertiesInput interface {
	pulumi.Input

	ToDevOpsPolicyAssignmentPropertiesOutput() DevOpsPolicyAssignmentPropertiesOutput
	ToDevOpsPolicyAssignmentPropertiesOutputWithContext(context.Context) DevOpsPolicyAssignmentPropertiesOutput
}

// Properties of the DevOps policy assignment resource.
type DevOpsPolicyAssignmentPropertiesArgs struct {
	// Gets or sets time when the assignment was created in UTC.
	AssignedAt pulumi.StringPtrInput `pulumi:"assignedAt"`
	// The behavior of a policy on descendant resources.
	DescendantBehavior pulumi.StringPtrInput `pulumi:"descendantBehavior"`
	// Condensed information to identify a DevOps Policy resource.
	Policy DevOpsPolicyDescriptorPtrInput `pulumi:"policy"`
	// Gets or sets the Azure resource id.
	ResourceId pulumi.StringPtrInput `pulumi:"resourceId"`
}

func (DevOpsPolicyAssignmentPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DevOpsPolicyAssignmentProperties)(nil)).Elem()
}

func (i DevOpsPolicyAssignmentPropertiesArgs) ToDevOpsPolicyAssignmentPropertiesOutput() DevOpsPolicyAssignmentPropertiesOutput {
	return i.ToDevOpsPolicyAssignmentPropertiesOutputWithContext(context.Background())
}

func (i DevOpsPolicyAssignmentPropertiesArgs) ToDevOpsPolicyAssignmentPropertiesOutputWithContext(ctx context.Context) DevOpsPolicyAssignmentPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DevOpsPolicyAssignmentPropertiesOutput)
}

func (i DevOpsPolicyAssignmentPropertiesArgs) ToDevOpsPolicyAssignmentPropertiesPtrOutput() DevOpsPolicyAssignmentPropertiesPtrOutput {
	return i.ToDevOpsPolicyAssignmentPropertiesPtrOutputWithContext(context.Background())
}

func (i DevOpsPolicyAssignmentPropertiesArgs) ToDevOpsPolicyAssignmentPropertiesPtrOutputWithContext(ctx context.Context) DevOpsPolicyAssignmentPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DevOpsPolicyAssignmentPropertiesOutput).ToDevOpsPolicyAssignmentPropertiesPtrOutputWithContext(ctx)
}

// DevOpsPolicyAssignmentPropertiesPtrInput is an input type that accepts DevOpsPolicyAssignmentPropertiesArgs, DevOpsPolicyAssignmentPropertiesPtr and DevOpsPolicyAssignmentPropertiesPtrOutput values.
// You can construct a concrete instance of `DevOpsPolicyAssignmentPropertiesPtrInput` via:
//
//	        DevOpsPolicyAssignmentPropertiesArgs{...}
//
//	or:
//
//	        nil
type DevOpsPolicyAssignmentPropertiesPtrInput interface {
	pulumi.Input

	ToDevOpsPolicyAssignmentPropertiesPtrOutput() DevOpsPolicyAssignmentPropertiesPtrOutput
	ToDevOpsPolicyAssignmentPropertiesPtrOutputWithContext(context.Context) DevOpsPolicyAssignmentPropertiesPtrOutput
}

type devOpsPolicyAssignmentPropertiesPtrType DevOpsPolicyAssignmentPropertiesArgs

func DevOpsPolicyAssignmentPropertiesPtr(v *DevOpsPolicyAssignmentPropertiesArgs) DevOpsPolicyAssignmentPropertiesPtrInput {
	return (*devOpsPolicyAssignmentPropertiesPtrType)(v)
}

func (*devOpsPolicyAssignmentPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DevOpsPolicyAssignmentProperties)(nil)).Elem()
}

func (i *devOpsPolicyAssignmentPropertiesPtrType) ToDevOpsPolicyAssignmentPropertiesPtrOutput() DevOpsPolicyAssignmentPropertiesPtrOutput {
	return i.ToDevOpsPolicyAssignmentPropertiesPtrOutputWithContext(context.Background())
}

func (i *devOpsPolicyAssignmentPropertiesPtrType) ToDevOpsPolicyAssignmentPropertiesPtrOutputWithContext(ctx context.Context) DevOpsPolicyAssignmentPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DevOpsPolicyAssignmentPropertiesPtrOutput)
}

// Properties of the DevOps policy assignment resource.
type DevOpsPolicyAssignmentPropertiesOutput struct{ *pulumi.OutputState }

func (DevOpsPolicyAssignmentPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DevOpsPolicyAssignmentProperties)(nil)).Elem()
}

func (o DevOpsPolicyAssignmentPropertiesOutput) ToDevOpsPolicyAssignmentPropertiesOutput() DevOpsPolicyAssignmentPropertiesOutput {
	return o
}

func (o DevOpsPolicyAssignmentPropertiesOutput) ToDevOpsPolicyAssignmentPropertiesOutputWithContext(ctx context.Context) DevOpsPolicyAssignmentPropertiesOutput {
	return o
}

func (o DevOpsPolicyAssignmentPropertiesOutput) ToDevOpsPolicyAssignmentPropertiesPtrOutput() DevOpsPolicyAssignmentPropertiesPtrOutput {
	return o.ToDevOpsPolicyAssignmentPropertiesPtrOutputWithContext(context.Background())
}

func (o DevOpsPolicyAssignmentPropertiesOutput) ToDevOpsPolicyAssignmentPropertiesPtrOutputWithContext(ctx context.Context) DevOpsPolicyAssignmentPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DevOpsPolicyAssignmentProperties) *DevOpsPolicyAssignmentProperties {
		return &v
	}).(DevOpsPolicyAssignmentPropertiesPtrOutput)
}

// Gets or sets time when the assignment was created in UTC.
func (o DevOpsPolicyAssignmentPropertiesOutput) AssignedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DevOpsPolicyAssignmentProperties) *string { return v.AssignedAt }).(pulumi.StringPtrOutput)
}

// The behavior of a policy on descendant resources.
func (o DevOpsPolicyAssignmentPropertiesOutput) DescendantBehavior() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DevOpsPolicyAssignmentProperties) *string { return v.DescendantBehavior }).(pulumi.StringPtrOutput)
}

// Condensed information to identify a DevOps Policy resource.
func (o DevOpsPolicyAssignmentPropertiesOutput) Policy() DevOpsPolicyDescriptorPtrOutput {
	return o.ApplyT(func(v DevOpsPolicyAssignmentProperties) *DevOpsPolicyDescriptor { return v.Policy }).(DevOpsPolicyDescriptorPtrOutput)
}

// Gets or sets the Azure resource id.
func (o DevOpsPolicyAssignmentPropertiesOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DevOpsPolicyAssignmentProperties) *string { return v.ResourceId }).(pulumi.StringPtrOutput)
}

type DevOpsPolicyAssignmentPropertiesPtrOutput struct{ *pulumi.OutputState }

func (DevOpsPolicyAssignmentPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DevOpsPolicyAssignmentProperties)(nil)).Elem()
}

func (o DevOpsPolicyAssignmentPropertiesPtrOutput) ToDevOpsPolicyAssignmentPropertiesPtrOutput() DevOpsPolicyAssignmentPropertiesPtrOutput {
	return o
}

func (o DevOpsPolicyAssignmentPropertiesPtrOutput) ToDevOpsPolicyAssignmentPropertiesPtrOutputWithContext(ctx context.Context) DevOpsPolicyAssignmentPropertiesPtrOutput {
	return o
}

func (o DevOpsPolicyAssignmentPropertiesPtrOutput) Elem() DevOpsPolicyAssignmentPropertiesOutput {
	return o.ApplyT(func(v *DevOpsPolicyAssignmentProperties) DevOpsPolicyAssignmentProperties {
		if v != nil {
			return *v
		}
		var ret DevOpsPolicyAssignmentProperties
		return ret
	}).(DevOpsPolicyAssignmentPropertiesOutput)
}

// Gets or sets time when the assignment was created in UTC.
func (o DevOpsPolicyAssignmentPropertiesPtrOutput) AssignedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DevOpsPolicyAssignmentProperties) *string {
		if v == nil {
			return nil
		}
		return v.AssignedAt
	}).(pulumi.StringPtrOutput)
}

// The behavior of a policy on descendant resources.
func (o DevOpsPolicyAssignmentPropertiesPtrOutput) DescendantBehavior() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DevOpsPolicyAssignmentProperties) *string {
		if v == nil {
			return nil
		}
		return v.DescendantBehavior
	}).(pulumi.StringPtrOutput)
}

// Condensed information to identify a DevOps Policy resource.
func (o DevOpsPolicyAssignmentPropertiesPtrOutput) Policy() DevOpsPolicyDescriptorPtrOutput {
	return o.ApplyT(func(v *DevOpsPolicyAssignmentProperties) *DevOpsPolicyDescriptor {
		if v == nil {
			return nil
		}
		return v.Policy
	}).(DevOpsPolicyDescriptorPtrOutput)
}

// Gets or sets the Azure resource id.
func (o DevOpsPolicyAssignmentPropertiesPtrOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DevOpsPolicyAssignmentProperties) *string {
		if v == nil {
			return nil
		}
		return v.ResourceId
	}).(pulumi.StringPtrOutput)
}

// Properties of the DevOps policy assignment resource.
type DevOpsPolicyAssignmentPropertiesResponse struct {
	// Gets or sets time when the assignment was created in UTC.
	AssignedAt *string `pulumi:"assignedAt"`
	// The behavior of a policy on descendant resources.
	DescendantBehavior *string `pulumi:"descendantBehavior"`
	// Condensed information to identify a DevOps Policy resource.
	Policy *DevOpsPolicyDescriptorResponse `pulumi:"policy"`
	// The provisioning state of the resource.
	//
	// Pending - Provisioning pending.
	// Failed - Provisioning failed.
	// Succeeded - Successful provisioning.
	// Canceled - Provisioning canceled.
	// PendingDeletion - Deletion pending.
	// DeletionSuccess - Deletion successful.
	// DeletionFailure - Deletion failure.
	ProvisioningState string `pulumi:"provisioningState"`
	// Gets the resource status message.
	ProvisioningStatusMessage string `pulumi:"provisioningStatusMessage"`
	// Gets the time when resource was last checked.
	ProvisioningStatusUpdateTimeUtc string `pulumi:"provisioningStatusUpdateTimeUtc"`
	// Gets or sets the Azure resource id.
	ResourceId *string `pulumi:"resourceId"`
}

// Properties of the DevOps policy assignment resource.
type DevOpsPolicyAssignmentPropertiesResponseOutput struct{ *pulumi.OutputState }

func (DevOpsPolicyAssignmentPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DevOpsPolicyAssignmentPropertiesResponse)(nil)).Elem()
}

func (o DevOpsPolicyAssignmentPropertiesResponseOutput) ToDevOpsPolicyAssignmentPropertiesResponseOutput() DevOpsPolicyAssignmentPropertiesResponseOutput {
	return o
}

func (o DevOpsPolicyAssignmentPropertiesResponseOutput) ToDevOpsPolicyAssignmentPropertiesResponseOutputWithContext(ctx context.Context) DevOpsPolicyAssignmentPropertiesResponseOutput {
	return o
}

// Gets or sets time when the assignment was created in UTC.
func (o DevOpsPolicyAssignmentPropertiesResponseOutput) AssignedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DevOpsPolicyAssignmentPropertiesResponse) *string { return v.AssignedAt }).(pulumi.StringPtrOutput)
}

// The behavior of a policy on descendant resources.
func (o DevOpsPolicyAssignmentPropertiesResponseOutput) DescendantBehavior() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DevOpsPolicyAssignmentPropertiesResponse) *string { return v.DescendantBehavior }).(pulumi.StringPtrOutput)
}

// Condensed information to identify a DevOps Policy resource.
func (o DevOpsPolicyAssignmentPropertiesResponseOutput) Policy() DevOpsPolicyDescriptorResponsePtrOutput {
	return o.ApplyT(func(v DevOpsPolicyAssignmentPropertiesResponse) *DevOpsPolicyDescriptorResponse { return v.Policy }).(DevOpsPolicyDescriptorResponsePtrOutput)
}

// The provisioning state of the resource.
//
// Pending - Provisioning pending.
// Failed - Provisioning failed.
// Succeeded - Successful provisioning.
// Canceled - Provisioning canceled.
// PendingDeletion - Deletion pending.
// DeletionSuccess - Deletion successful.
// DeletionFailure - Deletion failure.
func (o DevOpsPolicyAssignmentPropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v DevOpsPolicyAssignmentPropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Gets the resource status message.
func (o DevOpsPolicyAssignmentPropertiesResponseOutput) ProvisioningStatusMessage() pulumi.StringOutput {
	return o.ApplyT(func(v DevOpsPolicyAssignmentPropertiesResponse) string { return v.ProvisioningStatusMessage }).(pulumi.StringOutput)
}

// Gets the time when resource was last checked.
func (o DevOpsPolicyAssignmentPropertiesResponseOutput) ProvisioningStatusUpdateTimeUtc() pulumi.StringOutput {
	return o.ApplyT(func(v DevOpsPolicyAssignmentPropertiesResponse) string { return v.ProvisioningStatusUpdateTimeUtc }).(pulumi.StringOutput)
}

// Gets or sets the Azure resource id.
func (o DevOpsPolicyAssignmentPropertiesResponseOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DevOpsPolicyAssignmentPropertiesResponse) *string { return v.ResourceId }).(pulumi.StringPtrOutput)
}

// Condensed information to identify a DevOps Policy resource.
type DevOpsPolicyDescriptor struct {
	// Gets or sets the policy GUID.
	PolicyId *string `pulumi:"policyId"`
	// Gets or sets the policy name.
	PolicyName *string `pulumi:"policyName"`
	// DevOps Policy resource types.
	PolicyType *string `pulumi:"policyType"`
	// Gets or sets the version.
	PolicyVersion *string `pulumi:"policyVersion"`
}

// DevOpsPolicyDescriptorInput is an input type that accepts DevOpsPolicyDescriptorArgs and DevOpsPolicyDescriptorOutput values.
// You can construct a concrete instance of `DevOpsPolicyDescriptorInput` via:
//
//	DevOpsPolicyDescriptorArgs{...}
type DevOpsPolicyDescriptorInput interface {
	pulumi.Input

	ToDevOpsPolicyDescriptorOutput() DevOpsPolicyDescriptorOutput
	ToDevOpsPolicyDescriptorOutputWithContext(context.Context) DevOpsPolicyDescriptorOutput
}

// Condensed information to identify a DevOps Policy resource.
type DevOpsPolicyDescriptorArgs struct {
	// Gets or sets the policy GUID.
	PolicyId pulumi.StringPtrInput `pulumi:"policyId"`
	// Gets or sets the policy name.
	PolicyName pulumi.StringPtrInput `pulumi:"policyName"`
	// DevOps Policy resource types.
	PolicyType pulumi.StringPtrInput `pulumi:"policyType"`
	// Gets or sets the version.
	PolicyVersion pulumi.StringPtrInput `pulumi:"policyVersion"`
}

func (DevOpsPolicyDescriptorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DevOpsPolicyDescriptor)(nil)).Elem()
}

func (i DevOpsPolicyDescriptorArgs) ToDevOpsPolicyDescriptorOutput() DevOpsPolicyDescriptorOutput {
	return i.ToDevOpsPolicyDescriptorOutputWithContext(context.Background())
}

func (i DevOpsPolicyDescriptorArgs) ToDevOpsPolicyDescriptorOutputWithContext(ctx context.Context) DevOpsPolicyDescriptorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DevOpsPolicyDescriptorOutput)
}

func (i DevOpsPolicyDescriptorArgs) ToDevOpsPolicyDescriptorPtrOutput() DevOpsPolicyDescriptorPtrOutput {
	return i.ToDevOpsPolicyDescriptorPtrOutputWithContext(context.Background())
}

func (i DevOpsPolicyDescriptorArgs) ToDevOpsPolicyDescriptorPtrOutputWithContext(ctx context.Context) DevOpsPolicyDescriptorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DevOpsPolicyDescriptorOutput).ToDevOpsPolicyDescriptorPtrOutputWithContext(ctx)
}

// DevOpsPolicyDescriptorPtrInput is an input type that accepts DevOpsPolicyDescriptorArgs, DevOpsPolicyDescriptorPtr and DevOpsPolicyDescriptorPtrOutput values.
// You can construct a concrete instance of `DevOpsPolicyDescriptorPtrInput` via:
//
//	        DevOpsPolicyDescriptorArgs{...}
//
//	or:
//
//	        nil
type DevOpsPolicyDescriptorPtrInput interface {
	pulumi.Input

	ToDevOpsPolicyDescriptorPtrOutput() DevOpsPolicyDescriptorPtrOutput
	ToDevOpsPolicyDescriptorPtrOutputWithContext(context.Context) DevOpsPolicyDescriptorPtrOutput
}

type devOpsPolicyDescriptorPtrType DevOpsPolicyDescriptorArgs

func DevOpsPolicyDescriptorPtr(v *DevOpsPolicyDescriptorArgs) DevOpsPolicyDescriptorPtrInput {
	return (*devOpsPolicyDescriptorPtrType)(v)
}

func (*devOpsPolicyDescriptorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DevOpsPolicyDescriptor)(nil)).Elem()
}

func (i *devOpsPolicyDescriptorPtrType) ToDevOpsPolicyDescriptorPtrOutput() DevOpsPolicyDescriptorPtrOutput {
	return i.ToDevOpsPolicyDescriptorPtrOutputWithContext(context.Background())
}

func (i *devOpsPolicyDescriptorPtrType) ToDevOpsPolicyDescriptorPtrOutputWithContext(ctx context.Context) DevOpsPolicyDescriptorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DevOpsPolicyDescriptorPtrOutput)
}

// Condensed information to identify a DevOps Policy resource.
type DevOpsPolicyDescriptorOutput struct{ *pulumi.OutputState }

func (DevOpsPolicyDescriptorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DevOpsPolicyDescriptor)(nil)).Elem()
}

func (o DevOpsPolicyDescriptorOutput) ToDevOpsPolicyDescriptorOutput() DevOpsPolicyDescriptorOutput {
	return o
}

func (o DevOpsPolicyDescriptorOutput) ToDevOpsPolicyDescriptorOutputWithContext(ctx context.Context) DevOpsPolicyDescriptorOutput {
	return o
}

func (o DevOpsPolicyDescriptorOutput) ToDevOpsPolicyDescriptorPtrOutput() DevOpsPolicyDescriptorPtrOutput {
	return o.ToDevOpsPolicyDescriptorPtrOutputWithContext(context.Background())
}

func (o DevOpsPolicyDescriptorOutput) ToDevOpsPolicyDescriptorPtrOutputWithContext(ctx context.Context) DevOpsPolicyDescriptorPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DevOpsPolicyDescriptor) *DevOpsPolicyDescriptor {
		return &v
	}).(DevOpsPolicyDescriptorPtrOutput)
}

// Gets or sets the policy GUID.
func (o DevOpsPolicyDescriptorOutput) PolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DevOpsPolicyDescriptor) *string { return v.PolicyId }).(pulumi.StringPtrOutput)
}

// Gets or sets the policy name.
func (o DevOpsPolicyDescriptorOutput) PolicyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DevOpsPolicyDescriptor) *string { return v.PolicyName }).(pulumi.StringPtrOutput)
}

// DevOps Policy resource types.
func (o DevOpsPolicyDescriptorOutput) PolicyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DevOpsPolicyDescriptor) *string { return v.PolicyType }).(pulumi.StringPtrOutput)
}

// Gets or sets the version.
func (o DevOpsPolicyDescriptorOutput) PolicyVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DevOpsPolicyDescriptor) *string { return v.PolicyVersion }).(pulumi.StringPtrOutput)
}

type DevOpsPolicyDescriptorPtrOutput struct{ *pulumi.OutputState }

func (DevOpsPolicyDescriptorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DevOpsPolicyDescriptor)(nil)).Elem()
}

func (o DevOpsPolicyDescriptorPtrOutput) ToDevOpsPolicyDescriptorPtrOutput() DevOpsPolicyDescriptorPtrOutput {
	return o
}

func (o DevOpsPolicyDescriptorPtrOutput) ToDevOpsPolicyDescriptorPtrOutputWithContext(ctx context.Context) DevOpsPolicyDescriptorPtrOutput {
	return o
}

func (o DevOpsPolicyDescriptorPtrOutput) Elem() DevOpsPolicyDescriptorOutput {
	return o.ApplyT(func(v *DevOpsPolicyDescriptor) DevOpsPolicyDescriptor {
		if v != nil {
			return *v
		}
		var ret DevOpsPolicyDescriptor
		return ret
	}).(DevOpsPolicyDescriptorOutput)
}

// Gets or sets the policy GUID.
func (o DevOpsPolicyDescriptorPtrOutput) PolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DevOpsPolicyDescriptor) *string {
		if v == nil {
			return nil
		}
		return v.PolicyId
	}).(pulumi.StringPtrOutput)
}

// Gets or sets the policy name.
func (o DevOpsPolicyDescriptorPtrOutput) PolicyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DevOpsPolicyDescriptor) *string {
		if v == nil {
			return nil
		}
		return v.PolicyName
	}).(pulumi.StringPtrOutput)
}

// DevOps Policy resource types.
func (o DevOpsPolicyDescriptorPtrOutput) PolicyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DevOpsPolicyDescriptor) *string {
		if v == nil {
			return nil
		}
		return v.PolicyType
	}).(pulumi.StringPtrOutput)
}

// Gets or sets the version.
func (o DevOpsPolicyDescriptorPtrOutput) PolicyVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DevOpsPolicyDescriptor) *string {
		if v == nil {
			return nil
		}
		return v.PolicyVersion
	}).(pulumi.StringPtrOutput)
}

// Condensed information to identify a DevOps Policy resource.
type DevOpsPolicyDescriptorResponse struct {
	// Gets or sets the policy GUID.
	PolicyId *string `pulumi:"policyId"`
	// Gets or sets the policy name.
	PolicyName *string `pulumi:"policyName"`
	// DevOps Policy resource types.
	PolicyType *string `pulumi:"policyType"`
	// Gets or sets the version.
	PolicyVersion *string `pulumi:"policyVersion"`
}

// Condensed information to identify a DevOps Policy resource.
type DevOpsPolicyDescriptorResponseOutput struct{ *pulumi.OutputState }

func (DevOpsPolicyDescriptorResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DevOpsPolicyDescriptorResponse)(nil)).Elem()
}

func (o DevOpsPolicyDescriptorResponseOutput) ToDevOpsPolicyDescriptorResponseOutput() DevOpsPolicyDescriptorResponseOutput {
	return o
}

func (o DevOpsPolicyDescriptorResponseOutput) ToDevOpsPolicyDescriptorResponseOutputWithContext(ctx context.Context) DevOpsPolicyDescriptorResponseOutput {
	return o
}

// Gets or sets the policy GUID.
func (o DevOpsPolicyDescriptorResponseOutput) PolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DevOpsPolicyDescriptorResponse) *string { return v.PolicyId }).(pulumi.StringPtrOutput)
}

// Gets or sets the policy name.
func (o DevOpsPolicyDescriptorResponseOutput) PolicyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DevOpsPolicyDescriptorResponse) *string { return v.PolicyName }).(pulumi.StringPtrOutput)
}

// DevOps Policy resource types.
func (o DevOpsPolicyDescriptorResponseOutput) PolicyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DevOpsPolicyDescriptorResponse) *string { return v.PolicyType }).(pulumi.StringPtrOutput)
}

// Gets or sets the version.
func (o DevOpsPolicyDescriptorResponseOutput) PolicyVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DevOpsPolicyDescriptorResponse) *string { return v.PolicyVersion }).(pulumi.StringPtrOutput)
}

type DevOpsPolicyDescriptorResponsePtrOutput struct{ *pulumi.OutputState }

func (DevOpsPolicyDescriptorResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DevOpsPolicyDescriptorResponse)(nil)).Elem()
}

func (o DevOpsPolicyDescriptorResponsePtrOutput) ToDevOpsPolicyDescriptorResponsePtrOutput() DevOpsPolicyDescriptorResponsePtrOutput {
	return o
}

func (o DevOpsPolicyDescriptorResponsePtrOutput) ToDevOpsPolicyDescriptorResponsePtrOutputWithContext(ctx context.Context) DevOpsPolicyDescriptorResponsePtrOutput {
	return o
}

func (o DevOpsPolicyDescriptorResponsePtrOutput) Elem() DevOpsPolicyDescriptorResponseOutput {
	return o.ApplyT(func(v *DevOpsPolicyDescriptorResponse) DevOpsPolicyDescriptorResponse {
		if v != nil {
			return *v
		}
		var ret DevOpsPolicyDescriptorResponse
		return ret
	}).(DevOpsPolicyDescriptorResponseOutput)
}

// Gets or sets the policy GUID.
func (o DevOpsPolicyDescriptorResponsePtrOutput) PolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DevOpsPolicyDescriptorResponse) *string {
		if v == nil {
			return nil
		}
		return v.PolicyId
	}).(pulumi.StringPtrOutput)
}

// Gets or sets the policy name.
func (o DevOpsPolicyDescriptorResponsePtrOutput) PolicyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DevOpsPolicyDescriptorResponse) *string {
		if v == nil {
			return nil
		}
		return v.PolicyName
	}).(pulumi.StringPtrOutput)
}

// DevOps Policy resource types.
func (o DevOpsPolicyDescriptorResponsePtrOutput) PolicyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DevOpsPolicyDescriptorResponse) *string {
		if v == nil {
			return nil
		}
		return v.PolicyType
	}).(pulumi.StringPtrOutput)
}

// Gets or sets the version.
func (o DevOpsPolicyDescriptorResponsePtrOutput) PolicyVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DevOpsPolicyDescriptorResponse) *string {
		if v == nil {
			return nil
		}
		return v.PolicyVersion
	}).(pulumi.StringPtrOutput)
}

// GitHub Owner properties.
type GitHubOwnerPropertiesResponse struct {
	// Gets or sets internal GitHub id.
	GitHubInternalId string `pulumi:"gitHubInternalId"`
	// Details about resource onboarding status across all connectors.
	//
	// OnboardedByOtherConnector - this resource has already been onboarded to another connector. This is only applicable to top-level resources.
	// Onboarded - this resource has already been onboarded by the specified connector.
	// NotOnboarded - this resource has not been onboarded to any connector.
	// NotApplicable - the onboarding state is not applicable to the current endpoint.
	OnboardingState *string `pulumi:"onboardingState"`
	// Gets or sets GitHub Owner url.
	OwnerUrl string `pulumi:"ownerUrl"`
	// The provisioning state of the resource.
	//
	// Pending - Provisioning pending.
	// Failed - Provisioning failed.
	// Succeeded - Successful provisioning.
	// Canceled - Provisioning canceled.
	// PendingDeletion - Deletion pending.
	// DeletionSuccess - Deletion successful.
	// DeletionFailure - Deletion failure.
	ProvisioningState string `pulumi:"provisioningState"`
	// Gets the resource status message.
	ProvisioningStatusMessage string `pulumi:"provisioningStatusMessage"`
	// Gets the time when resource was last checked.
	ProvisioningStatusUpdateTimeUtc string `pulumi:"provisioningStatusUpdateTimeUtc"`
}

// GitHub Owner properties.
type GitHubOwnerPropertiesResponseOutput struct{ *pulumi.OutputState }

func (GitHubOwnerPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GitHubOwnerPropertiesResponse)(nil)).Elem()
}

func (o GitHubOwnerPropertiesResponseOutput) ToGitHubOwnerPropertiesResponseOutput() GitHubOwnerPropertiesResponseOutput {
	return o
}

func (o GitHubOwnerPropertiesResponseOutput) ToGitHubOwnerPropertiesResponseOutputWithContext(ctx context.Context) GitHubOwnerPropertiesResponseOutput {
	return o
}

// Gets or sets internal GitHub id.
func (o GitHubOwnerPropertiesResponseOutput) GitHubInternalId() pulumi.StringOutput {
	return o.ApplyT(func(v GitHubOwnerPropertiesResponse) string { return v.GitHubInternalId }).(pulumi.StringOutput)
}

// Details about resource onboarding status across all connectors.
//
// OnboardedByOtherConnector - this resource has already been onboarded to another connector. This is only applicable to top-level resources.
// Onboarded - this resource has already been onboarded by the specified connector.
// NotOnboarded - this resource has not been onboarded to any connector.
// NotApplicable - the onboarding state is not applicable to the current endpoint.
func (o GitHubOwnerPropertiesResponseOutput) OnboardingState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitHubOwnerPropertiesResponse) *string { return v.OnboardingState }).(pulumi.StringPtrOutput)
}

// Gets or sets GitHub Owner url.
func (o GitHubOwnerPropertiesResponseOutput) OwnerUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GitHubOwnerPropertiesResponse) string { return v.OwnerUrl }).(pulumi.StringOutput)
}

// The provisioning state of the resource.
//
// Pending - Provisioning pending.
// Failed - Provisioning failed.
// Succeeded - Successful provisioning.
// Canceled - Provisioning canceled.
// PendingDeletion - Deletion pending.
// DeletionSuccess - Deletion successful.
// DeletionFailure - Deletion failure.
func (o GitHubOwnerPropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v GitHubOwnerPropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Gets the resource status message.
func (o GitHubOwnerPropertiesResponseOutput) ProvisioningStatusMessage() pulumi.StringOutput {
	return o.ApplyT(func(v GitHubOwnerPropertiesResponse) string { return v.ProvisioningStatusMessage }).(pulumi.StringOutput)
}

// Gets the time when resource was last checked.
func (o GitHubOwnerPropertiesResponseOutput) ProvisioningStatusUpdateTimeUtc() pulumi.StringOutput {
	return o.ApplyT(func(v GitHubOwnerPropertiesResponse) string { return v.ProvisioningStatusUpdateTimeUtc }).(pulumi.StringOutput)
}

type GitHubOwnerPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (GitHubOwnerPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GitHubOwnerPropertiesResponse)(nil)).Elem()
}

func (o GitHubOwnerPropertiesResponsePtrOutput) ToGitHubOwnerPropertiesResponsePtrOutput() GitHubOwnerPropertiesResponsePtrOutput {
	return o
}

func (o GitHubOwnerPropertiesResponsePtrOutput) ToGitHubOwnerPropertiesResponsePtrOutputWithContext(ctx context.Context) GitHubOwnerPropertiesResponsePtrOutput {
	return o
}

func (o GitHubOwnerPropertiesResponsePtrOutput) Elem() GitHubOwnerPropertiesResponseOutput {
	return o.ApplyT(func(v *GitHubOwnerPropertiesResponse) GitHubOwnerPropertiesResponse {
		if v != nil {
			return *v
		}
		var ret GitHubOwnerPropertiesResponse
		return ret
	}).(GitHubOwnerPropertiesResponseOutput)
}

// Gets or sets internal GitHub id.
func (o GitHubOwnerPropertiesResponsePtrOutput) GitHubInternalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GitHubOwnerPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.GitHubInternalId
	}).(pulumi.StringPtrOutput)
}

// Details about resource onboarding status across all connectors.
//
// OnboardedByOtherConnector - this resource has already been onboarded to another connector. This is only applicable to top-level resources.
// Onboarded - this resource has already been onboarded by the specified connector.
// NotOnboarded - this resource has not been onboarded to any connector.
// NotApplicable - the onboarding state is not applicable to the current endpoint.
func (o GitHubOwnerPropertiesResponsePtrOutput) OnboardingState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GitHubOwnerPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.OnboardingState
	}).(pulumi.StringPtrOutput)
}

// Gets or sets GitHub Owner url.
func (o GitHubOwnerPropertiesResponsePtrOutput) OwnerUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GitHubOwnerPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.OwnerUrl
	}).(pulumi.StringPtrOutput)
}

// The provisioning state of the resource.
//
// Pending - Provisioning pending.
// Failed - Provisioning failed.
// Succeeded - Successful provisioning.
// Canceled - Provisioning canceled.
// PendingDeletion - Deletion pending.
// DeletionSuccess - Deletion successful.
// DeletionFailure - Deletion failure.
func (o GitHubOwnerPropertiesResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GitHubOwnerPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// Gets the resource status message.
func (o GitHubOwnerPropertiesResponsePtrOutput) ProvisioningStatusMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GitHubOwnerPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ProvisioningStatusMessage
	}).(pulumi.StringPtrOutput)
}

// Gets the time when resource was last checked.
func (o GitHubOwnerPropertiesResponsePtrOutput) ProvisioningStatusUpdateTimeUtc() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GitHubOwnerPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ProvisioningStatusUpdateTimeUtc
	}).(pulumi.StringPtrOutput)
}

// GitHub Owner resource.
type GitHubOwnerResponse struct {
	// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	Id string `pulumi:"id"`
	// The name of the resource
	Name string `pulumi:"name"`
	// GitHub Owner properties.
	Properties *GitHubOwnerPropertiesResponse `pulumi:"properties"`
	// Metadata pertaining to creation and last modification of the resource.
	SystemData SystemDataResponse `pulumi:"systemData"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type string `pulumi:"type"`
}

// GitHub Owner resource.
type GitHubOwnerResponseOutput struct{ *pulumi.OutputState }

func (GitHubOwnerResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GitHubOwnerResponse)(nil)).Elem()
}

func (o GitHubOwnerResponseOutput) ToGitHubOwnerResponseOutput() GitHubOwnerResponseOutput {
	return o
}

func (o GitHubOwnerResponseOutput) ToGitHubOwnerResponseOutputWithContext(ctx context.Context) GitHubOwnerResponseOutput {
	return o
}

// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
func (o GitHubOwnerResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GitHubOwnerResponse) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the resource
func (o GitHubOwnerResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GitHubOwnerResponse) string { return v.Name }).(pulumi.StringOutput)
}

// GitHub Owner properties.
func (o GitHubOwnerResponseOutput) Properties() GitHubOwnerPropertiesResponsePtrOutput {
	return o.ApplyT(func(v GitHubOwnerResponse) *GitHubOwnerPropertiesResponse { return v.Properties }).(GitHubOwnerPropertiesResponsePtrOutput)
}

// Metadata pertaining to creation and last modification of the resource.
func (o GitHubOwnerResponseOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v GitHubOwnerResponse) SystemDataResponse { return v.SystemData }).(SystemDataResponseOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o GitHubOwnerResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GitHubOwnerResponse) string { return v.Type }).(pulumi.StringOutput)
}

type GitHubOwnerResponseArrayOutput struct{ *pulumi.OutputState }

func (GitHubOwnerResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GitHubOwnerResponse)(nil)).Elem()
}

func (o GitHubOwnerResponseArrayOutput) ToGitHubOwnerResponseArrayOutput() GitHubOwnerResponseArrayOutput {
	return o
}

func (o GitHubOwnerResponseArrayOutput) ToGitHubOwnerResponseArrayOutputWithContext(ctx context.Context) GitHubOwnerResponseArrayOutput {
	return o
}

func (o GitHubOwnerResponseArrayOutput) Index(i pulumi.IntInput) GitHubOwnerResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GitHubOwnerResponse {
		return vs[0].([]GitHubOwnerResponse)[vs[1].(int)]
	}).(GitHubOwnerResponseOutput)
}

// GitLab Group properties.
type GitLabGroupPropertiesResponse struct {
	// Gets or sets the human readable fully-qualified name of the Group object.
	//
	// This contains the entire namespace hierarchy as seen on GitLab UI where namespaces are separated by the '/' character.
	FullyQualifiedFriendlyName string `pulumi:"fullyQualifiedFriendlyName"`
	// Gets or sets the fully-qualified name of the Group object.
	//
	// This contains the entire namespace hierarchy where namespaces are separated by the '$' character.
	FullyQualifiedName string `pulumi:"fullyQualifiedName"`
	// Details about resource onboarding status across all connectors.
	//
	// OnboardedByOtherConnector - this resource has already been onboarded to another connector. This is only applicable to top-level resources.
	// Onboarded - this resource has already been onboarded by the specified connector.
	// NotOnboarded - this resource has not been onboarded to any connector.
	// NotApplicable - the onboarding state is not applicable to the current endpoint.
	OnboardingState *string `pulumi:"onboardingState"`
	// The provisioning state of the resource.
	//
	// Pending - Provisioning pending.
	// Failed - Provisioning failed.
	// Succeeded - Successful provisioning.
	// Canceled - Provisioning canceled.
	// PendingDeletion - Deletion pending.
	// DeletionSuccess - Deletion successful.
	// DeletionFailure - Deletion failure.
	ProvisioningState string `pulumi:"provisioningState"`
	// Gets the resource status message.
	ProvisioningStatusMessage string `pulumi:"provisioningStatusMessage"`
	// Gets the time when resource was last checked.
	ProvisioningStatusUpdateTimeUtc string `pulumi:"provisioningStatusUpdateTimeUtc"`
	// Gets or sets the url of the GitLab Group.
	Url string `pulumi:"url"`
}

// GitLab Group properties.
type GitLabGroupPropertiesResponseOutput struct{ *pulumi.OutputState }

func (GitLabGroupPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GitLabGroupPropertiesResponse)(nil)).Elem()
}

func (o GitLabGroupPropertiesResponseOutput) ToGitLabGroupPropertiesResponseOutput() GitLabGroupPropertiesResponseOutput {
	return o
}

func (o GitLabGroupPropertiesResponseOutput) ToGitLabGroupPropertiesResponseOutputWithContext(ctx context.Context) GitLabGroupPropertiesResponseOutput {
	return o
}

// Gets or sets the human readable fully-qualified name of the Group object.
//
// This contains the entire namespace hierarchy as seen on GitLab UI where namespaces are separated by the '/' character.
func (o GitLabGroupPropertiesResponseOutput) FullyQualifiedFriendlyName() pulumi.StringOutput {
	return o.ApplyT(func(v GitLabGroupPropertiesResponse) string { return v.FullyQualifiedFriendlyName }).(pulumi.StringOutput)
}

// Gets or sets the fully-qualified name of the Group object.
//
// This contains the entire namespace hierarchy where namespaces are separated by the '$' character.
func (o GitLabGroupPropertiesResponseOutput) FullyQualifiedName() pulumi.StringOutput {
	return o.ApplyT(func(v GitLabGroupPropertiesResponse) string { return v.FullyQualifiedName }).(pulumi.StringOutput)
}

// Details about resource onboarding status across all connectors.
//
// OnboardedByOtherConnector - this resource has already been onboarded to another connector. This is only applicable to top-level resources.
// Onboarded - this resource has already been onboarded by the specified connector.
// NotOnboarded - this resource has not been onboarded to any connector.
// NotApplicable - the onboarding state is not applicable to the current endpoint.
func (o GitLabGroupPropertiesResponseOutput) OnboardingState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitLabGroupPropertiesResponse) *string { return v.OnboardingState }).(pulumi.StringPtrOutput)
}

// The provisioning state of the resource.
//
// Pending - Provisioning pending.
// Failed - Provisioning failed.
// Succeeded - Successful provisioning.
// Canceled - Provisioning canceled.
// PendingDeletion - Deletion pending.
// DeletionSuccess - Deletion successful.
// DeletionFailure - Deletion failure.
func (o GitLabGroupPropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v GitLabGroupPropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Gets the resource status message.
func (o GitLabGroupPropertiesResponseOutput) ProvisioningStatusMessage() pulumi.StringOutput {
	return o.ApplyT(func(v GitLabGroupPropertiesResponse) string { return v.ProvisioningStatusMessage }).(pulumi.StringOutput)
}

// Gets the time when resource was last checked.
func (o GitLabGroupPropertiesResponseOutput) ProvisioningStatusUpdateTimeUtc() pulumi.StringOutput {
	return o.ApplyT(func(v GitLabGroupPropertiesResponse) string { return v.ProvisioningStatusUpdateTimeUtc }).(pulumi.StringOutput)
}

// Gets or sets the url of the GitLab Group.
func (o GitLabGroupPropertiesResponseOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v GitLabGroupPropertiesResponse) string { return v.Url }).(pulumi.StringOutput)
}

type GitLabGroupPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (GitLabGroupPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GitLabGroupPropertiesResponse)(nil)).Elem()
}

func (o GitLabGroupPropertiesResponsePtrOutput) ToGitLabGroupPropertiesResponsePtrOutput() GitLabGroupPropertiesResponsePtrOutput {
	return o
}

func (o GitLabGroupPropertiesResponsePtrOutput) ToGitLabGroupPropertiesResponsePtrOutputWithContext(ctx context.Context) GitLabGroupPropertiesResponsePtrOutput {
	return o
}

func (o GitLabGroupPropertiesResponsePtrOutput) Elem() GitLabGroupPropertiesResponseOutput {
	return o.ApplyT(func(v *GitLabGroupPropertiesResponse) GitLabGroupPropertiesResponse {
		if v != nil {
			return *v
		}
		var ret GitLabGroupPropertiesResponse
		return ret
	}).(GitLabGroupPropertiesResponseOutput)
}

// Gets or sets the human readable fully-qualified name of the Group object.
//
// This contains the entire namespace hierarchy as seen on GitLab UI where namespaces are separated by the '/' character.
func (o GitLabGroupPropertiesResponsePtrOutput) FullyQualifiedFriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GitLabGroupPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.FullyQualifiedFriendlyName
	}).(pulumi.StringPtrOutput)
}

// Gets or sets the fully-qualified name of the Group object.
//
// This contains the entire namespace hierarchy where namespaces are separated by the '$' character.
func (o GitLabGroupPropertiesResponsePtrOutput) FullyQualifiedName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GitLabGroupPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.FullyQualifiedName
	}).(pulumi.StringPtrOutput)
}

// Details about resource onboarding status across all connectors.
//
// OnboardedByOtherConnector - this resource has already been onboarded to another connector. This is only applicable to top-level resources.
// Onboarded - this resource has already been onboarded by the specified connector.
// NotOnboarded - this resource has not been onboarded to any connector.
// NotApplicable - the onboarding state is not applicable to the current endpoint.
func (o GitLabGroupPropertiesResponsePtrOutput) OnboardingState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GitLabGroupPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.OnboardingState
	}).(pulumi.StringPtrOutput)
}

// The provisioning state of the resource.
//
// Pending - Provisioning pending.
// Failed - Provisioning failed.
// Succeeded - Successful provisioning.
// Canceled - Provisioning canceled.
// PendingDeletion - Deletion pending.
// DeletionSuccess - Deletion successful.
// DeletionFailure - Deletion failure.
func (o GitLabGroupPropertiesResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GitLabGroupPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// Gets the resource status message.
func (o GitLabGroupPropertiesResponsePtrOutput) ProvisioningStatusMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GitLabGroupPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ProvisioningStatusMessage
	}).(pulumi.StringPtrOutput)
}

// Gets the time when resource was last checked.
func (o GitLabGroupPropertiesResponsePtrOutput) ProvisioningStatusUpdateTimeUtc() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GitLabGroupPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ProvisioningStatusUpdateTimeUtc
	}).(pulumi.StringPtrOutput)
}

// Gets or sets the url of the GitLab Group.
func (o GitLabGroupPropertiesResponsePtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GitLabGroupPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Url
	}).(pulumi.StringPtrOutput)
}

// GitLab Group resource.
type GitLabGroupResponse struct {
	// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	Id string `pulumi:"id"`
	// The name of the resource
	Name string `pulumi:"name"`
	// GitLab Group properties.
	Properties *GitLabGroupPropertiesResponse `pulumi:"properties"`
	// Metadata pertaining to creation and last modification of the resource.
	SystemData SystemDataResponse `pulumi:"systemData"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type string `pulumi:"type"`
}

// GitLab Group resource.
type GitLabGroupResponseOutput struct{ *pulumi.OutputState }

func (GitLabGroupResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GitLabGroupResponse)(nil)).Elem()
}

func (o GitLabGroupResponseOutput) ToGitLabGroupResponseOutput() GitLabGroupResponseOutput {
	return o
}

func (o GitLabGroupResponseOutput) ToGitLabGroupResponseOutputWithContext(ctx context.Context) GitLabGroupResponseOutput {
	return o
}

// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
func (o GitLabGroupResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GitLabGroupResponse) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the resource
func (o GitLabGroupResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GitLabGroupResponse) string { return v.Name }).(pulumi.StringOutput)
}

// GitLab Group properties.
func (o GitLabGroupResponseOutput) Properties() GitLabGroupPropertiesResponsePtrOutput {
	return o.ApplyT(func(v GitLabGroupResponse) *GitLabGroupPropertiesResponse { return v.Properties }).(GitLabGroupPropertiesResponsePtrOutput)
}

// Metadata pertaining to creation and last modification of the resource.
func (o GitLabGroupResponseOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v GitLabGroupResponse) SystemDataResponse { return v.SystemData }).(SystemDataResponseOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o GitLabGroupResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GitLabGroupResponse) string { return v.Type }).(pulumi.StringOutput)
}

type GitLabGroupResponseArrayOutput struct{ *pulumi.OutputState }

func (GitLabGroupResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GitLabGroupResponse)(nil)).Elem()
}

func (o GitLabGroupResponseArrayOutput) ToGitLabGroupResponseArrayOutput() GitLabGroupResponseArrayOutput {
	return o
}

func (o GitLabGroupResponseArrayOutput) ToGitLabGroupResponseArrayOutputWithContext(ctx context.Context) GitLabGroupResponseArrayOutput {
	return o
}

func (o GitLabGroupResponseArrayOutput) Index(i pulumi.IntInput) GitLabGroupResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GitLabGroupResponse {
		return vs[0].([]GitLabGroupResponse)[vs[1].(int)]
	}).(GitLabGroupResponseOutput)
}

// Metadata pertaining to creation and last modification of the resource.
type SystemDataResponse struct {
	// The timestamp of resource creation (UTC).
	CreatedAt *string `pulumi:"createdAt"`
	// The identity that created the resource.
	CreatedBy *string `pulumi:"createdBy"`
	// The type of identity that created the resource.
	CreatedByType *string `pulumi:"createdByType"`
	// The timestamp of resource last modification (UTC)
	LastModifiedAt *string `pulumi:"lastModifiedAt"`
	// The identity that last modified the resource.
	LastModifiedBy *string `pulumi:"lastModifiedBy"`
	// The type of identity that last modified the resource.
	LastModifiedByType *string `pulumi:"lastModifiedByType"`
}

// Metadata pertaining to creation and last modification of the resource.
type SystemDataResponseOutput struct{ *pulumi.OutputState }

func (SystemDataResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemDataResponse)(nil)).Elem()
}

func (o SystemDataResponseOutput) ToSystemDataResponseOutput() SystemDataResponseOutput {
	return o
}

func (o SystemDataResponseOutput) ToSystemDataResponseOutputWithContext(ctx context.Context) SystemDataResponseOutput {
	return o
}

// The timestamp of resource creation (UTC).
func (o SystemDataResponseOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedAt }).(pulumi.StringPtrOutput)
}

// The identity that created the resource.
func (o SystemDataResponseOutput) CreatedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedBy }).(pulumi.StringPtrOutput)
}

// The type of identity that created the resource.
func (o SystemDataResponseOutput) CreatedByType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedByType }).(pulumi.StringPtrOutput)
}

// The timestamp of resource last modification (UTC)
func (o SystemDataResponseOutput) LastModifiedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedAt }).(pulumi.StringPtrOutput)
}

// The identity that last modified the resource.
func (o SystemDataResponseOutput) LastModifiedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedBy }).(pulumi.StringPtrOutput)
}

// The type of identity that last modified the resource.
func (o SystemDataResponseOutput) LastModifiedByType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedByType }).(pulumi.StringPtrOutput)
}

// Repository branch configuration for PR Annotations.
type TargetBranchConfigurationResponse struct {
	// Configuration of PR Annotations on default branch.
	//
	// Enabled - PR Annotations are enabled on the resource's default branch.
	// Disabled - PR Annotations are disabled on the resource's default branch.
	AnnotateDefaultBranch *string `pulumi:"annotateDefaultBranch"`
	// Gets or sets branches that should have annotations.
	BranchNames []string `pulumi:"branchNames"`
}

// Repository branch configuration for PR Annotations.
type TargetBranchConfigurationResponseOutput struct{ *pulumi.OutputState }

func (TargetBranchConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetBranchConfigurationResponse)(nil)).Elem()
}

func (o TargetBranchConfigurationResponseOutput) ToTargetBranchConfigurationResponseOutput() TargetBranchConfigurationResponseOutput {
	return o
}

func (o TargetBranchConfigurationResponseOutput) ToTargetBranchConfigurationResponseOutputWithContext(ctx context.Context) TargetBranchConfigurationResponseOutput {
	return o
}

// Configuration of PR Annotations on default branch.
//
// Enabled - PR Annotations are enabled on the resource's default branch.
// Disabled - PR Annotations are disabled on the resource's default branch.
func (o TargetBranchConfigurationResponseOutput) AnnotateDefaultBranch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetBranchConfigurationResponse) *string { return v.AnnotateDefaultBranch }).(pulumi.StringPtrOutput)
}

// Gets or sets branches that should have annotations.
func (o TargetBranchConfigurationResponseOutput) BranchNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v TargetBranchConfigurationResponse) []string { return v.BranchNames }).(pulumi.StringArrayOutput)
}

type TargetBranchConfigurationResponsePtrOutput struct{ *pulumi.OutputState }

func (TargetBranchConfigurationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TargetBranchConfigurationResponse)(nil)).Elem()
}

func (o TargetBranchConfigurationResponsePtrOutput) ToTargetBranchConfigurationResponsePtrOutput() TargetBranchConfigurationResponsePtrOutput {
	return o
}

func (o TargetBranchConfigurationResponsePtrOutput) ToTargetBranchConfigurationResponsePtrOutputWithContext(ctx context.Context) TargetBranchConfigurationResponsePtrOutput {
	return o
}

func (o TargetBranchConfigurationResponsePtrOutput) Elem() TargetBranchConfigurationResponseOutput {
	return o.ApplyT(func(v *TargetBranchConfigurationResponse) TargetBranchConfigurationResponse {
		if v != nil {
			return *v
		}
		var ret TargetBranchConfigurationResponse
		return ret
	}).(TargetBranchConfigurationResponseOutput)
}

// Configuration of PR Annotations on default branch.
//
// Enabled - PR Annotations are enabled on the resource's default branch.
// Disabled - PR Annotations are disabled on the resource's default branch.
func (o TargetBranchConfigurationResponsePtrOutput) AnnotateDefaultBranch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TargetBranchConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.AnnotateDefaultBranch
	}).(pulumi.StringPtrOutput)
}

// Gets or sets branches that should have annotations.
func (o TargetBranchConfigurationResponsePtrOutput) BranchNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *TargetBranchConfigurationResponse) []string {
		if v == nil {
			return nil
		}
		return v.BranchNames
	}).(pulumi.StringArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(ActionableRemediationResponseOutput{})
	pulumi.RegisterOutputType(ActionableRemediationResponsePtrOutput{})
	pulumi.RegisterOutputType(AuthorizationOutput{})
	pulumi.RegisterOutputType(AuthorizationPtrOutput{})
	pulumi.RegisterOutputType(AuthorizationResponseOutput{})
	pulumi.RegisterOutputType(AuthorizationResponsePtrOutput{})
	pulumi.RegisterOutputType(AzureDevOpsOrgPropertiesResponseOutput{})
	pulumi.RegisterOutputType(AzureDevOpsOrgPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(AzureDevOpsOrgResponseOutput{})
	pulumi.RegisterOutputType(AzureDevOpsOrgResponseArrayOutput{})
	pulumi.RegisterOutputType(CategoryConfigurationResponseOutput{})
	pulumi.RegisterOutputType(CategoryConfigurationResponseArrayOutput{})
	pulumi.RegisterOutputType(DevOpsCapabilityResponseOutput{})
	pulumi.RegisterOutputType(DevOpsCapabilityResponseArrayOutput{})
	pulumi.RegisterOutputType(DevOpsConfigurationPropertiesOutput{})
	pulumi.RegisterOutputType(DevOpsConfigurationPropertiesPtrOutput{})
	pulumi.RegisterOutputType(DevOpsConfigurationPropertiesResponseOutput{})
	pulumi.RegisterOutputType(DevOpsPolicyAssignmentPropertiesOutput{})
	pulumi.RegisterOutputType(DevOpsPolicyAssignmentPropertiesPtrOutput{})
	pulumi.RegisterOutputType(DevOpsPolicyAssignmentPropertiesResponseOutput{})
	pulumi.RegisterOutputType(DevOpsPolicyDescriptorOutput{})
	pulumi.RegisterOutputType(DevOpsPolicyDescriptorPtrOutput{})
	pulumi.RegisterOutputType(DevOpsPolicyDescriptorResponseOutput{})
	pulumi.RegisterOutputType(DevOpsPolicyDescriptorResponsePtrOutput{})
	pulumi.RegisterOutputType(GitHubOwnerPropertiesResponseOutput{})
	pulumi.RegisterOutputType(GitHubOwnerPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(GitHubOwnerResponseOutput{})
	pulumi.RegisterOutputType(GitHubOwnerResponseArrayOutput{})
	pulumi.RegisterOutputType(GitLabGroupPropertiesResponseOutput{})
	pulumi.RegisterOutputType(GitLabGroupPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(GitLabGroupResponseOutput{})
	pulumi.RegisterOutputType(GitLabGroupResponseArrayOutput{})
	pulumi.RegisterOutputType(SystemDataResponseOutput{})
	pulumi.RegisterOutputType(TargetBranchConfigurationResponseOutput{})
	pulumi.RegisterOutputType(TargetBranchConfigurationResponsePtrOutput{})
}
