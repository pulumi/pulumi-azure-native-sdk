// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20231201preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = utilities.GetEnvOrDefault

// The target Event Hub to which event data will be exported. To learn more about Microsoft Defender for Cloud continuous export capabilities, visit https://aka.ms/ASCExportLearnMore
type AutomationActionEventHub struct {
	// The type of the action that will be triggered by the Automation
	// Expected value is 'EventHub'.
	ActionType string `pulumi:"actionType"`
	// The target Event Hub connection string (it will not be included in any response).
	ConnectionString *string `pulumi:"connectionString"`
	// The target Event Hub Azure Resource ID.
	EventHubResourceId *string `pulumi:"eventHubResourceId"`
	// Indicates whether the trusted service is enabled or not.
	IsTrustedServiceEnabled *bool `pulumi:"isTrustedServiceEnabled"`
}

// AutomationActionEventHubInput is an input type that accepts AutomationActionEventHubArgs and AutomationActionEventHubOutput values.
// You can construct a concrete instance of `AutomationActionEventHubInput` via:
//
//	AutomationActionEventHubArgs{...}
type AutomationActionEventHubInput interface {
	pulumi.Input

	ToAutomationActionEventHubOutput() AutomationActionEventHubOutput
	ToAutomationActionEventHubOutputWithContext(context.Context) AutomationActionEventHubOutput
}

// The target Event Hub to which event data will be exported. To learn more about Microsoft Defender for Cloud continuous export capabilities, visit https://aka.ms/ASCExportLearnMore
type AutomationActionEventHubArgs struct {
	// The type of the action that will be triggered by the Automation
	// Expected value is 'EventHub'.
	ActionType pulumi.StringInput `pulumi:"actionType"`
	// The target Event Hub connection string (it will not be included in any response).
	ConnectionString pulumi.StringPtrInput `pulumi:"connectionString"`
	// The target Event Hub Azure Resource ID.
	EventHubResourceId pulumi.StringPtrInput `pulumi:"eventHubResourceId"`
	// Indicates whether the trusted service is enabled or not.
	IsTrustedServiceEnabled pulumi.BoolPtrInput `pulumi:"isTrustedServiceEnabled"`
}

func (AutomationActionEventHubArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AutomationActionEventHub)(nil)).Elem()
}

func (i AutomationActionEventHubArgs) ToAutomationActionEventHubOutput() AutomationActionEventHubOutput {
	return i.ToAutomationActionEventHubOutputWithContext(context.Background())
}

func (i AutomationActionEventHubArgs) ToAutomationActionEventHubOutputWithContext(ctx context.Context) AutomationActionEventHubOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutomationActionEventHubOutput)
}

// The target Event Hub to which event data will be exported. To learn more about Microsoft Defender for Cloud continuous export capabilities, visit https://aka.ms/ASCExportLearnMore
type AutomationActionEventHubOutput struct{ *pulumi.OutputState }

func (AutomationActionEventHubOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutomationActionEventHub)(nil)).Elem()
}

func (o AutomationActionEventHubOutput) ToAutomationActionEventHubOutput() AutomationActionEventHubOutput {
	return o
}

func (o AutomationActionEventHubOutput) ToAutomationActionEventHubOutputWithContext(ctx context.Context) AutomationActionEventHubOutput {
	return o
}

// The type of the action that will be triggered by the Automation
// Expected value is 'EventHub'.
func (o AutomationActionEventHubOutput) ActionType() pulumi.StringOutput {
	return o.ApplyT(func(v AutomationActionEventHub) string { return v.ActionType }).(pulumi.StringOutput)
}

// The target Event Hub connection string (it will not be included in any response).
func (o AutomationActionEventHubOutput) ConnectionString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AutomationActionEventHub) *string { return v.ConnectionString }).(pulumi.StringPtrOutput)
}

// The target Event Hub Azure Resource ID.
func (o AutomationActionEventHubOutput) EventHubResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AutomationActionEventHub) *string { return v.EventHubResourceId }).(pulumi.StringPtrOutput)
}

// Indicates whether the trusted service is enabled or not.
func (o AutomationActionEventHubOutput) IsTrustedServiceEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AutomationActionEventHub) *bool { return v.IsTrustedServiceEnabled }).(pulumi.BoolPtrOutput)
}

// The target Event Hub to which event data will be exported. To learn more about Microsoft Defender for Cloud continuous export capabilities, visit https://aka.ms/ASCExportLearnMore
type AutomationActionEventHubResponse struct {
	// The type of the action that will be triggered by the Automation
	// Expected value is 'EventHub'.
	ActionType string `pulumi:"actionType"`
	// The target Event Hub connection string (it will not be included in any response).
	ConnectionString *string `pulumi:"connectionString"`
	// The target Event Hub Azure Resource ID.
	EventHubResourceId *string `pulumi:"eventHubResourceId"`
	// Indicates whether the trusted service is enabled or not.
	IsTrustedServiceEnabled *bool `pulumi:"isTrustedServiceEnabled"`
	// The target Event Hub SAS policy name.
	SasPolicyName string `pulumi:"sasPolicyName"`
}

// The target Event Hub to which event data will be exported. To learn more about Microsoft Defender for Cloud continuous export capabilities, visit https://aka.ms/ASCExportLearnMore
type AutomationActionEventHubResponseOutput struct{ *pulumi.OutputState }

func (AutomationActionEventHubResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutomationActionEventHubResponse)(nil)).Elem()
}

func (o AutomationActionEventHubResponseOutput) ToAutomationActionEventHubResponseOutput() AutomationActionEventHubResponseOutput {
	return o
}

func (o AutomationActionEventHubResponseOutput) ToAutomationActionEventHubResponseOutputWithContext(ctx context.Context) AutomationActionEventHubResponseOutput {
	return o
}

// The type of the action that will be triggered by the Automation
// Expected value is 'EventHub'.
func (o AutomationActionEventHubResponseOutput) ActionType() pulumi.StringOutput {
	return o.ApplyT(func(v AutomationActionEventHubResponse) string { return v.ActionType }).(pulumi.StringOutput)
}

// The target Event Hub connection string (it will not be included in any response).
func (o AutomationActionEventHubResponseOutput) ConnectionString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AutomationActionEventHubResponse) *string { return v.ConnectionString }).(pulumi.StringPtrOutput)
}

// The target Event Hub Azure Resource ID.
func (o AutomationActionEventHubResponseOutput) EventHubResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AutomationActionEventHubResponse) *string { return v.EventHubResourceId }).(pulumi.StringPtrOutput)
}

// Indicates whether the trusted service is enabled or not.
func (o AutomationActionEventHubResponseOutput) IsTrustedServiceEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AutomationActionEventHubResponse) *bool { return v.IsTrustedServiceEnabled }).(pulumi.BoolPtrOutput)
}

// The target Event Hub SAS policy name.
func (o AutomationActionEventHubResponseOutput) SasPolicyName() pulumi.StringOutput {
	return o.ApplyT(func(v AutomationActionEventHubResponse) string { return v.SasPolicyName }).(pulumi.StringOutput)
}

// The logic app action that should be triggered. To learn more about Microsoft Defender for Cloud's Workflow Automation capabilities, visit https://aka.ms/ASCWorkflowAutomationLearnMore
type AutomationActionLogicApp struct {
	// The type of the action that will be triggered by the Automation
	// Expected value is 'LogicApp'.
	ActionType string `pulumi:"actionType"`
	// The triggered Logic App Azure Resource ID. This can also reside on other subscriptions, given that you have permissions to trigger the Logic App
	LogicAppResourceId *string `pulumi:"logicAppResourceId"`
	// The Logic App trigger URI endpoint (it will not be included in any response).
	Uri *string `pulumi:"uri"`
}

// AutomationActionLogicAppInput is an input type that accepts AutomationActionLogicAppArgs and AutomationActionLogicAppOutput values.
// You can construct a concrete instance of `AutomationActionLogicAppInput` via:
//
//	AutomationActionLogicAppArgs{...}
type AutomationActionLogicAppInput interface {
	pulumi.Input

	ToAutomationActionLogicAppOutput() AutomationActionLogicAppOutput
	ToAutomationActionLogicAppOutputWithContext(context.Context) AutomationActionLogicAppOutput
}

// The logic app action that should be triggered. To learn more about Microsoft Defender for Cloud's Workflow Automation capabilities, visit https://aka.ms/ASCWorkflowAutomationLearnMore
type AutomationActionLogicAppArgs struct {
	// The type of the action that will be triggered by the Automation
	// Expected value is 'LogicApp'.
	ActionType pulumi.StringInput `pulumi:"actionType"`
	// The triggered Logic App Azure Resource ID. This can also reside on other subscriptions, given that you have permissions to trigger the Logic App
	LogicAppResourceId pulumi.StringPtrInput `pulumi:"logicAppResourceId"`
	// The Logic App trigger URI endpoint (it will not be included in any response).
	Uri pulumi.StringPtrInput `pulumi:"uri"`
}

func (AutomationActionLogicAppArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AutomationActionLogicApp)(nil)).Elem()
}

func (i AutomationActionLogicAppArgs) ToAutomationActionLogicAppOutput() AutomationActionLogicAppOutput {
	return i.ToAutomationActionLogicAppOutputWithContext(context.Background())
}

func (i AutomationActionLogicAppArgs) ToAutomationActionLogicAppOutputWithContext(ctx context.Context) AutomationActionLogicAppOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutomationActionLogicAppOutput)
}

// The logic app action that should be triggered. To learn more about Microsoft Defender for Cloud's Workflow Automation capabilities, visit https://aka.ms/ASCWorkflowAutomationLearnMore
type AutomationActionLogicAppOutput struct{ *pulumi.OutputState }

func (AutomationActionLogicAppOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutomationActionLogicApp)(nil)).Elem()
}

func (o AutomationActionLogicAppOutput) ToAutomationActionLogicAppOutput() AutomationActionLogicAppOutput {
	return o
}

func (o AutomationActionLogicAppOutput) ToAutomationActionLogicAppOutputWithContext(ctx context.Context) AutomationActionLogicAppOutput {
	return o
}

// The type of the action that will be triggered by the Automation
// Expected value is 'LogicApp'.
func (o AutomationActionLogicAppOutput) ActionType() pulumi.StringOutput {
	return o.ApplyT(func(v AutomationActionLogicApp) string { return v.ActionType }).(pulumi.StringOutput)
}

// The triggered Logic App Azure Resource ID. This can also reside on other subscriptions, given that you have permissions to trigger the Logic App
func (o AutomationActionLogicAppOutput) LogicAppResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AutomationActionLogicApp) *string { return v.LogicAppResourceId }).(pulumi.StringPtrOutput)
}

// The Logic App trigger URI endpoint (it will not be included in any response).
func (o AutomationActionLogicAppOutput) Uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AutomationActionLogicApp) *string { return v.Uri }).(pulumi.StringPtrOutput)
}

// The logic app action that should be triggered. To learn more about Microsoft Defender for Cloud's Workflow Automation capabilities, visit https://aka.ms/ASCWorkflowAutomationLearnMore
type AutomationActionLogicAppResponse struct {
	// The type of the action that will be triggered by the Automation
	// Expected value is 'LogicApp'.
	ActionType string `pulumi:"actionType"`
	// The triggered Logic App Azure Resource ID. This can also reside on other subscriptions, given that you have permissions to trigger the Logic App
	LogicAppResourceId *string `pulumi:"logicAppResourceId"`
	// The Logic App trigger URI endpoint (it will not be included in any response).
	Uri *string `pulumi:"uri"`
}

// The logic app action that should be triggered. To learn more about Microsoft Defender for Cloud's Workflow Automation capabilities, visit https://aka.ms/ASCWorkflowAutomationLearnMore
type AutomationActionLogicAppResponseOutput struct{ *pulumi.OutputState }

func (AutomationActionLogicAppResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutomationActionLogicAppResponse)(nil)).Elem()
}

func (o AutomationActionLogicAppResponseOutput) ToAutomationActionLogicAppResponseOutput() AutomationActionLogicAppResponseOutput {
	return o
}

func (o AutomationActionLogicAppResponseOutput) ToAutomationActionLogicAppResponseOutputWithContext(ctx context.Context) AutomationActionLogicAppResponseOutput {
	return o
}

// The type of the action that will be triggered by the Automation
// Expected value is 'LogicApp'.
func (o AutomationActionLogicAppResponseOutput) ActionType() pulumi.StringOutput {
	return o.ApplyT(func(v AutomationActionLogicAppResponse) string { return v.ActionType }).(pulumi.StringOutput)
}

// The triggered Logic App Azure Resource ID. This can also reside on other subscriptions, given that you have permissions to trigger the Logic App
func (o AutomationActionLogicAppResponseOutput) LogicAppResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AutomationActionLogicAppResponse) *string { return v.LogicAppResourceId }).(pulumi.StringPtrOutput)
}

// The Logic App trigger URI endpoint (it will not be included in any response).
func (o AutomationActionLogicAppResponseOutput) Uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AutomationActionLogicAppResponse) *string { return v.Uri }).(pulumi.StringPtrOutput)
}

// The�Log�Analytics�Workspace�to�which�event data will be exported. Security alerts data will reside in the 'SecurityAlert' table and the assessments data will reside in the 'SecurityRecommendation' table (under the 'Security'/'SecurityCenterFree' solutions). Note that in order to view the data in the workspace, the Security Center Log Analytics free/standard solution needs to be enabled on that workspace. To learn more about Microsoft Defender for Cloud continuous export capabilities, visit https://aka.ms/ASCExportLearnMore
type AutomationActionWorkspace struct {
	// The type of the action that will be triggered by the Automation
	// Expected value is 'Workspace'.
	ActionType string `pulumi:"actionType"`
	// The fully qualified Log Analytics Workspace Azure Resource ID.
	WorkspaceResourceId *string `pulumi:"workspaceResourceId"`
}

// AutomationActionWorkspaceInput is an input type that accepts AutomationActionWorkspaceArgs and AutomationActionWorkspaceOutput values.
// You can construct a concrete instance of `AutomationActionWorkspaceInput` via:
//
//	AutomationActionWorkspaceArgs{...}
type AutomationActionWorkspaceInput interface {
	pulumi.Input

	ToAutomationActionWorkspaceOutput() AutomationActionWorkspaceOutput
	ToAutomationActionWorkspaceOutputWithContext(context.Context) AutomationActionWorkspaceOutput
}

// The�Log�Analytics�Workspace�to�which�event data will be exported. Security alerts data will reside in the 'SecurityAlert' table and the assessments data will reside in the 'SecurityRecommendation' table (under the 'Security'/'SecurityCenterFree' solutions). Note that in order to view the data in the workspace, the Security Center Log Analytics free/standard solution needs to be enabled on that workspace. To learn more about Microsoft Defender for Cloud continuous export capabilities, visit https://aka.ms/ASCExportLearnMore
type AutomationActionWorkspaceArgs struct {
	// The type of the action that will be triggered by the Automation
	// Expected value is 'Workspace'.
	ActionType pulumi.StringInput `pulumi:"actionType"`
	// The fully qualified Log Analytics Workspace Azure Resource ID.
	WorkspaceResourceId pulumi.StringPtrInput `pulumi:"workspaceResourceId"`
}

func (AutomationActionWorkspaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AutomationActionWorkspace)(nil)).Elem()
}

func (i AutomationActionWorkspaceArgs) ToAutomationActionWorkspaceOutput() AutomationActionWorkspaceOutput {
	return i.ToAutomationActionWorkspaceOutputWithContext(context.Background())
}

func (i AutomationActionWorkspaceArgs) ToAutomationActionWorkspaceOutputWithContext(ctx context.Context) AutomationActionWorkspaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutomationActionWorkspaceOutput)
}

// The�Log�Analytics�Workspace�to�which�event data will be exported. Security alerts data will reside in the 'SecurityAlert' table and the assessments data will reside in the 'SecurityRecommendation' table (under the 'Security'/'SecurityCenterFree' solutions). Note that in order to view the data in the workspace, the Security Center Log Analytics free/standard solution needs to be enabled on that workspace. To learn more about Microsoft Defender for Cloud continuous export capabilities, visit https://aka.ms/ASCExportLearnMore
type AutomationActionWorkspaceOutput struct{ *pulumi.OutputState }

func (AutomationActionWorkspaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutomationActionWorkspace)(nil)).Elem()
}

func (o AutomationActionWorkspaceOutput) ToAutomationActionWorkspaceOutput() AutomationActionWorkspaceOutput {
	return o
}

func (o AutomationActionWorkspaceOutput) ToAutomationActionWorkspaceOutputWithContext(ctx context.Context) AutomationActionWorkspaceOutput {
	return o
}

// The type of the action that will be triggered by the Automation
// Expected value is 'Workspace'.
func (o AutomationActionWorkspaceOutput) ActionType() pulumi.StringOutput {
	return o.ApplyT(func(v AutomationActionWorkspace) string { return v.ActionType }).(pulumi.StringOutput)
}

// The fully qualified Log Analytics Workspace Azure Resource ID.
func (o AutomationActionWorkspaceOutput) WorkspaceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AutomationActionWorkspace) *string { return v.WorkspaceResourceId }).(pulumi.StringPtrOutput)
}

// The�Log�Analytics�Workspace�to�which�event data will be exported. Security alerts data will reside in the 'SecurityAlert' table and the assessments data will reside in the 'SecurityRecommendation' table (under the 'Security'/'SecurityCenterFree' solutions). Note that in order to view the data in the workspace, the Security Center Log Analytics free/standard solution needs to be enabled on that workspace. To learn more about Microsoft Defender for Cloud continuous export capabilities, visit https://aka.ms/ASCExportLearnMore
type AutomationActionWorkspaceResponse struct {
	// The type of the action that will be triggered by the Automation
	// Expected value is 'Workspace'.
	ActionType string `pulumi:"actionType"`
	// The fully qualified Log Analytics Workspace Azure Resource ID.
	WorkspaceResourceId *string `pulumi:"workspaceResourceId"`
}

// The�Log�Analytics�Workspace�to�which�event data will be exported. Security alerts data will reside in the 'SecurityAlert' table and the assessments data will reside in the 'SecurityRecommendation' table (under the 'Security'/'SecurityCenterFree' solutions). Note that in order to view the data in the workspace, the Security Center Log Analytics free/standard solution needs to be enabled on that workspace. To learn more about Microsoft Defender for Cloud continuous export capabilities, visit https://aka.ms/ASCExportLearnMore
type AutomationActionWorkspaceResponseOutput struct{ *pulumi.OutputState }

func (AutomationActionWorkspaceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutomationActionWorkspaceResponse)(nil)).Elem()
}

func (o AutomationActionWorkspaceResponseOutput) ToAutomationActionWorkspaceResponseOutput() AutomationActionWorkspaceResponseOutput {
	return o
}

func (o AutomationActionWorkspaceResponseOutput) ToAutomationActionWorkspaceResponseOutputWithContext(ctx context.Context) AutomationActionWorkspaceResponseOutput {
	return o
}

// The type of the action that will be triggered by the Automation
// Expected value is 'Workspace'.
func (o AutomationActionWorkspaceResponseOutput) ActionType() pulumi.StringOutput {
	return o.ApplyT(func(v AutomationActionWorkspaceResponse) string { return v.ActionType }).(pulumi.StringOutput)
}

// The fully qualified Log Analytics Workspace Azure Resource ID.
func (o AutomationActionWorkspaceResponseOutput) WorkspaceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AutomationActionWorkspaceResponse) *string { return v.WorkspaceResourceId }).(pulumi.StringPtrOutput)
}

// A rule set which evaluates all its rules upon an event interception. Only when all the included rules in the rule set will be evaluated as 'true', will the event trigger the defined actions.
type AutomationRuleSet struct {
	Rules []AutomationTriggeringRule `pulumi:"rules"`
}

// AutomationRuleSetInput is an input type that accepts AutomationRuleSetArgs and AutomationRuleSetOutput values.
// You can construct a concrete instance of `AutomationRuleSetInput` via:
//
//	AutomationRuleSetArgs{...}
type AutomationRuleSetInput interface {
	pulumi.Input

	ToAutomationRuleSetOutput() AutomationRuleSetOutput
	ToAutomationRuleSetOutputWithContext(context.Context) AutomationRuleSetOutput
}

// A rule set which evaluates all its rules upon an event interception. Only when all the included rules in the rule set will be evaluated as 'true', will the event trigger the defined actions.
type AutomationRuleSetArgs struct {
	Rules AutomationTriggeringRuleArrayInput `pulumi:"rules"`
}

func (AutomationRuleSetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AutomationRuleSet)(nil)).Elem()
}

func (i AutomationRuleSetArgs) ToAutomationRuleSetOutput() AutomationRuleSetOutput {
	return i.ToAutomationRuleSetOutputWithContext(context.Background())
}

func (i AutomationRuleSetArgs) ToAutomationRuleSetOutputWithContext(ctx context.Context) AutomationRuleSetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutomationRuleSetOutput)
}

// AutomationRuleSetArrayInput is an input type that accepts AutomationRuleSetArray and AutomationRuleSetArrayOutput values.
// You can construct a concrete instance of `AutomationRuleSetArrayInput` via:
//
//	AutomationRuleSetArray{ AutomationRuleSetArgs{...} }
type AutomationRuleSetArrayInput interface {
	pulumi.Input

	ToAutomationRuleSetArrayOutput() AutomationRuleSetArrayOutput
	ToAutomationRuleSetArrayOutputWithContext(context.Context) AutomationRuleSetArrayOutput
}

type AutomationRuleSetArray []AutomationRuleSetInput

func (AutomationRuleSetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AutomationRuleSet)(nil)).Elem()
}

func (i AutomationRuleSetArray) ToAutomationRuleSetArrayOutput() AutomationRuleSetArrayOutput {
	return i.ToAutomationRuleSetArrayOutputWithContext(context.Background())
}

func (i AutomationRuleSetArray) ToAutomationRuleSetArrayOutputWithContext(ctx context.Context) AutomationRuleSetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutomationRuleSetArrayOutput)
}

// A rule set which evaluates all its rules upon an event interception. Only when all the included rules in the rule set will be evaluated as 'true', will the event trigger the defined actions.
type AutomationRuleSetOutput struct{ *pulumi.OutputState }

func (AutomationRuleSetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutomationRuleSet)(nil)).Elem()
}

func (o AutomationRuleSetOutput) ToAutomationRuleSetOutput() AutomationRuleSetOutput {
	return o
}

func (o AutomationRuleSetOutput) ToAutomationRuleSetOutputWithContext(ctx context.Context) AutomationRuleSetOutput {
	return o
}

func (o AutomationRuleSetOutput) Rules() AutomationTriggeringRuleArrayOutput {
	return o.ApplyT(func(v AutomationRuleSet) []AutomationTriggeringRule { return v.Rules }).(AutomationTriggeringRuleArrayOutput)
}

type AutomationRuleSetArrayOutput struct{ *pulumi.OutputState }

func (AutomationRuleSetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AutomationRuleSet)(nil)).Elem()
}

func (o AutomationRuleSetArrayOutput) ToAutomationRuleSetArrayOutput() AutomationRuleSetArrayOutput {
	return o
}

func (o AutomationRuleSetArrayOutput) ToAutomationRuleSetArrayOutputWithContext(ctx context.Context) AutomationRuleSetArrayOutput {
	return o
}

func (o AutomationRuleSetArrayOutput) Index(i pulumi.IntInput) AutomationRuleSetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AutomationRuleSet {
		return vs[0].([]AutomationRuleSet)[vs[1].(int)]
	}).(AutomationRuleSetOutput)
}

// A rule set which evaluates all its rules upon an event interception. Only when all the included rules in the rule set will be evaluated as 'true', will the event trigger the defined actions.
type AutomationRuleSetResponse struct {
	Rules []AutomationTriggeringRuleResponse `pulumi:"rules"`
}

// A rule set which evaluates all its rules upon an event interception. Only when all the included rules in the rule set will be evaluated as 'true', will the event trigger the defined actions.
type AutomationRuleSetResponseOutput struct{ *pulumi.OutputState }

func (AutomationRuleSetResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutomationRuleSetResponse)(nil)).Elem()
}

func (o AutomationRuleSetResponseOutput) ToAutomationRuleSetResponseOutput() AutomationRuleSetResponseOutput {
	return o
}

func (o AutomationRuleSetResponseOutput) ToAutomationRuleSetResponseOutputWithContext(ctx context.Context) AutomationRuleSetResponseOutput {
	return o
}

func (o AutomationRuleSetResponseOutput) Rules() AutomationTriggeringRuleResponseArrayOutput {
	return o.ApplyT(func(v AutomationRuleSetResponse) []AutomationTriggeringRuleResponse { return v.Rules }).(AutomationTriggeringRuleResponseArrayOutput)
}

type AutomationRuleSetResponseArrayOutput struct{ *pulumi.OutputState }

func (AutomationRuleSetResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AutomationRuleSetResponse)(nil)).Elem()
}

func (o AutomationRuleSetResponseArrayOutput) ToAutomationRuleSetResponseArrayOutput() AutomationRuleSetResponseArrayOutput {
	return o
}

func (o AutomationRuleSetResponseArrayOutput) ToAutomationRuleSetResponseArrayOutputWithContext(ctx context.Context) AutomationRuleSetResponseArrayOutput {
	return o
}

func (o AutomationRuleSetResponseArrayOutput) Index(i pulumi.IntInput) AutomationRuleSetResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AutomationRuleSetResponse {
		return vs[0].([]AutomationRuleSetResponse)[vs[1].(int)]
	}).(AutomationRuleSetResponseOutput)
}

// A single automation scope.
type AutomationScope struct {
	// The resources scope description.
	Description *string `pulumi:"description"`
	// The resources scope path. Can be the subscription on which the automation is defined on or a resource group under that subscription (fully qualified Azure resource IDs).
	ScopePath *string `pulumi:"scopePath"`
}

// AutomationScopeInput is an input type that accepts AutomationScopeArgs and AutomationScopeOutput values.
// You can construct a concrete instance of `AutomationScopeInput` via:
//
//	AutomationScopeArgs{...}
type AutomationScopeInput interface {
	pulumi.Input

	ToAutomationScopeOutput() AutomationScopeOutput
	ToAutomationScopeOutputWithContext(context.Context) AutomationScopeOutput
}

// A single automation scope.
type AutomationScopeArgs struct {
	// The resources scope description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The resources scope path. Can be the subscription on which the automation is defined on or a resource group under that subscription (fully qualified Azure resource IDs).
	ScopePath pulumi.StringPtrInput `pulumi:"scopePath"`
}

func (AutomationScopeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AutomationScope)(nil)).Elem()
}

func (i AutomationScopeArgs) ToAutomationScopeOutput() AutomationScopeOutput {
	return i.ToAutomationScopeOutputWithContext(context.Background())
}

func (i AutomationScopeArgs) ToAutomationScopeOutputWithContext(ctx context.Context) AutomationScopeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutomationScopeOutput)
}

// AutomationScopeArrayInput is an input type that accepts AutomationScopeArray and AutomationScopeArrayOutput values.
// You can construct a concrete instance of `AutomationScopeArrayInput` via:
//
//	AutomationScopeArray{ AutomationScopeArgs{...} }
type AutomationScopeArrayInput interface {
	pulumi.Input

	ToAutomationScopeArrayOutput() AutomationScopeArrayOutput
	ToAutomationScopeArrayOutputWithContext(context.Context) AutomationScopeArrayOutput
}

type AutomationScopeArray []AutomationScopeInput

func (AutomationScopeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AutomationScope)(nil)).Elem()
}

func (i AutomationScopeArray) ToAutomationScopeArrayOutput() AutomationScopeArrayOutput {
	return i.ToAutomationScopeArrayOutputWithContext(context.Background())
}

func (i AutomationScopeArray) ToAutomationScopeArrayOutputWithContext(ctx context.Context) AutomationScopeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutomationScopeArrayOutput)
}

// A single automation scope.
type AutomationScopeOutput struct{ *pulumi.OutputState }

func (AutomationScopeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutomationScope)(nil)).Elem()
}

func (o AutomationScopeOutput) ToAutomationScopeOutput() AutomationScopeOutput {
	return o
}

func (o AutomationScopeOutput) ToAutomationScopeOutputWithContext(ctx context.Context) AutomationScopeOutput {
	return o
}

// The resources scope description.
func (o AutomationScopeOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AutomationScope) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The resources scope path. Can be the subscription on which the automation is defined on or a resource group under that subscription (fully qualified Azure resource IDs).
func (o AutomationScopeOutput) ScopePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AutomationScope) *string { return v.ScopePath }).(pulumi.StringPtrOutput)
}

type AutomationScopeArrayOutput struct{ *pulumi.OutputState }

func (AutomationScopeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AutomationScope)(nil)).Elem()
}

func (o AutomationScopeArrayOutput) ToAutomationScopeArrayOutput() AutomationScopeArrayOutput {
	return o
}

func (o AutomationScopeArrayOutput) ToAutomationScopeArrayOutputWithContext(ctx context.Context) AutomationScopeArrayOutput {
	return o
}

func (o AutomationScopeArrayOutput) Index(i pulumi.IntInput) AutomationScopeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AutomationScope {
		return vs[0].([]AutomationScope)[vs[1].(int)]
	}).(AutomationScopeOutput)
}

// A single automation scope.
type AutomationScopeResponse struct {
	// The resources scope description.
	Description *string `pulumi:"description"`
	// The resources scope path. Can be the subscription on which the automation is defined on or a resource group under that subscription (fully qualified Azure resource IDs).
	ScopePath *string `pulumi:"scopePath"`
}

// A single automation scope.
type AutomationScopeResponseOutput struct{ *pulumi.OutputState }

func (AutomationScopeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutomationScopeResponse)(nil)).Elem()
}

func (o AutomationScopeResponseOutput) ToAutomationScopeResponseOutput() AutomationScopeResponseOutput {
	return o
}

func (o AutomationScopeResponseOutput) ToAutomationScopeResponseOutputWithContext(ctx context.Context) AutomationScopeResponseOutput {
	return o
}

// The resources scope description.
func (o AutomationScopeResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AutomationScopeResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The resources scope path. Can be the subscription on which the automation is defined on or a resource group under that subscription (fully qualified Azure resource IDs).
func (o AutomationScopeResponseOutput) ScopePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AutomationScopeResponse) *string { return v.ScopePath }).(pulumi.StringPtrOutput)
}

type AutomationScopeResponseArrayOutput struct{ *pulumi.OutputState }

func (AutomationScopeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AutomationScopeResponse)(nil)).Elem()
}

func (o AutomationScopeResponseArrayOutput) ToAutomationScopeResponseArrayOutput() AutomationScopeResponseArrayOutput {
	return o
}

func (o AutomationScopeResponseArrayOutput) ToAutomationScopeResponseArrayOutputWithContext(ctx context.Context) AutomationScopeResponseArrayOutput {
	return o
}

func (o AutomationScopeResponseArrayOutput) Index(i pulumi.IntInput) AutomationScopeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AutomationScopeResponse {
		return vs[0].([]AutomationScopeResponse)[vs[1].(int)]
	}).(AutomationScopeResponseOutput)
}

// The source event types which evaluate the security automation set of rules. For example - security alerts and security assessments. To learn more about the supported security events data models schemas - please visit https://aka.ms/ASCAutomationSchemas.
type AutomationSource struct {
	// A valid event source type.
	EventSource *string `pulumi:"eventSource"`
	// A set of rules which evaluate upon event interception. A logical disjunction is applied between defined rule sets (logical 'or').
	RuleSets []AutomationRuleSet `pulumi:"ruleSets"`
}

// AutomationSourceInput is an input type that accepts AutomationSourceArgs and AutomationSourceOutput values.
// You can construct a concrete instance of `AutomationSourceInput` via:
//
//	AutomationSourceArgs{...}
type AutomationSourceInput interface {
	pulumi.Input

	ToAutomationSourceOutput() AutomationSourceOutput
	ToAutomationSourceOutputWithContext(context.Context) AutomationSourceOutput
}

// The source event types which evaluate the security automation set of rules. For example - security alerts and security assessments. To learn more about the supported security events data models schemas - please visit https://aka.ms/ASCAutomationSchemas.
type AutomationSourceArgs struct {
	// A valid event source type.
	EventSource pulumi.StringPtrInput `pulumi:"eventSource"`
	// A set of rules which evaluate upon event interception. A logical disjunction is applied between defined rule sets (logical 'or').
	RuleSets AutomationRuleSetArrayInput `pulumi:"ruleSets"`
}

func (AutomationSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AutomationSource)(nil)).Elem()
}

func (i AutomationSourceArgs) ToAutomationSourceOutput() AutomationSourceOutput {
	return i.ToAutomationSourceOutputWithContext(context.Background())
}

func (i AutomationSourceArgs) ToAutomationSourceOutputWithContext(ctx context.Context) AutomationSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutomationSourceOutput)
}

// AutomationSourceArrayInput is an input type that accepts AutomationSourceArray and AutomationSourceArrayOutput values.
// You can construct a concrete instance of `AutomationSourceArrayInput` via:
//
//	AutomationSourceArray{ AutomationSourceArgs{...} }
type AutomationSourceArrayInput interface {
	pulumi.Input

	ToAutomationSourceArrayOutput() AutomationSourceArrayOutput
	ToAutomationSourceArrayOutputWithContext(context.Context) AutomationSourceArrayOutput
}

type AutomationSourceArray []AutomationSourceInput

func (AutomationSourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AutomationSource)(nil)).Elem()
}

func (i AutomationSourceArray) ToAutomationSourceArrayOutput() AutomationSourceArrayOutput {
	return i.ToAutomationSourceArrayOutputWithContext(context.Background())
}

func (i AutomationSourceArray) ToAutomationSourceArrayOutputWithContext(ctx context.Context) AutomationSourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutomationSourceArrayOutput)
}

// The source event types which evaluate the security automation set of rules. For example - security alerts and security assessments. To learn more about the supported security events data models schemas - please visit https://aka.ms/ASCAutomationSchemas.
type AutomationSourceOutput struct{ *pulumi.OutputState }

func (AutomationSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutomationSource)(nil)).Elem()
}

func (o AutomationSourceOutput) ToAutomationSourceOutput() AutomationSourceOutput {
	return o
}

func (o AutomationSourceOutput) ToAutomationSourceOutputWithContext(ctx context.Context) AutomationSourceOutput {
	return o
}

// A valid event source type.
func (o AutomationSourceOutput) EventSource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AutomationSource) *string { return v.EventSource }).(pulumi.StringPtrOutput)
}

// A set of rules which evaluate upon event interception. A logical disjunction is applied between defined rule sets (logical 'or').
func (o AutomationSourceOutput) RuleSets() AutomationRuleSetArrayOutput {
	return o.ApplyT(func(v AutomationSource) []AutomationRuleSet { return v.RuleSets }).(AutomationRuleSetArrayOutput)
}

type AutomationSourceArrayOutput struct{ *pulumi.OutputState }

func (AutomationSourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AutomationSource)(nil)).Elem()
}

func (o AutomationSourceArrayOutput) ToAutomationSourceArrayOutput() AutomationSourceArrayOutput {
	return o
}

func (o AutomationSourceArrayOutput) ToAutomationSourceArrayOutputWithContext(ctx context.Context) AutomationSourceArrayOutput {
	return o
}

func (o AutomationSourceArrayOutput) Index(i pulumi.IntInput) AutomationSourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AutomationSource {
		return vs[0].([]AutomationSource)[vs[1].(int)]
	}).(AutomationSourceOutput)
}

// The source event types which evaluate the security automation set of rules. For example - security alerts and security assessments. To learn more about the supported security events data models schemas - please visit https://aka.ms/ASCAutomationSchemas.
type AutomationSourceResponse struct {
	// A valid event source type.
	EventSource *string `pulumi:"eventSource"`
	// A set of rules which evaluate upon event interception. A logical disjunction is applied between defined rule sets (logical 'or').
	RuleSets []AutomationRuleSetResponse `pulumi:"ruleSets"`
}

// The source event types which evaluate the security automation set of rules. For example - security alerts and security assessments. To learn more about the supported security events data models schemas - please visit https://aka.ms/ASCAutomationSchemas.
type AutomationSourceResponseOutput struct{ *pulumi.OutputState }

func (AutomationSourceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutomationSourceResponse)(nil)).Elem()
}

func (o AutomationSourceResponseOutput) ToAutomationSourceResponseOutput() AutomationSourceResponseOutput {
	return o
}

func (o AutomationSourceResponseOutput) ToAutomationSourceResponseOutputWithContext(ctx context.Context) AutomationSourceResponseOutput {
	return o
}

// A valid event source type.
func (o AutomationSourceResponseOutput) EventSource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AutomationSourceResponse) *string { return v.EventSource }).(pulumi.StringPtrOutput)
}

// A set of rules which evaluate upon event interception. A logical disjunction is applied between defined rule sets (logical 'or').
func (o AutomationSourceResponseOutput) RuleSets() AutomationRuleSetResponseArrayOutput {
	return o.ApplyT(func(v AutomationSourceResponse) []AutomationRuleSetResponse { return v.RuleSets }).(AutomationRuleSetResponseArrayOutput)
}

type AutomationSourceResponseArrayOutput struct{ *pulumi.OutputState }

func (AutomationSourceResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AutomationSourceResponse)(nil)).Elem()
}

func (o AutomationSourceResponseArrayOutput) ToAutomationSourceResponseArrayOutput() AutomationSourceResponseArrayOutput {
	return o
}

func (o AutomationSourceResponseArrayOutput) ToAutomationSourceResponseArrayOutputWithContext(ctx context.Context) AutomationSourceResponseArrayOutput {
	return o
}

func (o AutomationSourceResponseArrayOutput) Index(i pulumi.IntInput) AutomationSourceResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AutomationSourceResponse {
		return vs[0].([]AutomationSourceResponse)[vs[1].(int)]
	}).(AutomationSourceResponseOutput)
}

// A rule which is evaluated upon event interception. The rule is configured by comparing a specific value from the event model to an expected value. This comparison is done by using one of the supported operators set.
type AutomationTriggeringRule struct {
	// The expected value.
	ExpectedValue *string `pulumi:"expectedValue"`
	// A valid comparer operator to use. A case-insensitive comparison will be applied for String PropertyType.
	Operator *string `pulumi:"operator"`
	// The JPath of the entity model property that should be checked.
	PropertyJPath *string `pulumi:"propertyJPath"`
	// The data type of the compared operands (string, integer, floating point number or a boolean [true/false]]
	PropertyType *string `pulumi:"propertyType"`
}

// AutomationTriggeringRuleInput is an input type that accepts AutomationTriggeringRuleArgs and AutomationTriggeringRuleOutput values.
// You can construct a concrete instance of `AutomationTriggeringRuleInput` via:
//
//	AutomationTriggeringRuleArgs{...}
type AutomationTriggeringRuleInput interface {
	pulumi.Input

	ToAutomationTriggeringRuleOutput() AutomationTriggeringRuleOutput
	ToAutomationTriggeringRuleOutputWithContext(context.Context) AutomationTriggeringRuleOutput
}

// A rule which is evaluated upon event interception. The rule is configured by comparing a specific value from the event model to an expected value. This comparison is done by using one of the supported operators set.
type AutomationTriggeringRuleArgs struct {
	// The expected value.
	ExpectedValue pulumi.StringPtrInput `pulumi:"expectedValue"`
	// A valid comparer operator to use. A case-insensitive comparison will be applied for String PropertyType.
	Operator pulumi.StringPtrInput `pulumi:"operator"`
	// The JPath of the entity model property that should be checked.
	PropertyJPath pulumi.StringPtrInput `pulumi:"propertyJPath"`
	// The data type of the compared operands (string, integer, floating point number or a boolean [true/false]]
	PropertyType pulumi.StringPtrInput `pulumi:"propertyType"`
}

func (AutomationTriggeringRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AutomationTriggeringRule)(nil)).Elem()
}

func (i AutomationTriggeringRuleArgs) ToAutomationTriggeringRuleOutput() AutomationTriggeringRuleOutput {
	return i.ToAutomationTriggeringRuleOutputWithContext(context.Background())
}

func (i AutomationTriggeringRuleArgs) ToAutomationTriggeringRuleOutputWithContext(ctx context.Context) AutomationTriggeringRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutomationTriggeringRuleOutput)
}

// AutomationTriggeringRuleArrayInput is an input type that accepts AutomationTriggeringRuleArray and AutomationTriggeringRuleArrayOutput values.
// You can construct a concrete instance of `AutomationTriggeringRuleArrayInput` via:
//
//	AutomationTriggeringRuleArray{ AutomationTriggeringRuleArgs{...} }
type AutomationTriggeringRuleArrayInput interface {
	pulumi.Input

	ToAutomationTriggeringRuleArrayOutput() AutomationTriggeringRuleArrayOutput
	ToAutomationTriggeringRuleArrayOutputWithContext(context.Context) AutomationTriggeringRuleArrayOutput
}

type AutomationTriggeringRuleArray []AutomationTriggeringRuleInput

func (AutomationTriggeringRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AutomationTriggeringRule)(nil)).Elem()
}

func (i AutomationTriggeringRuleArray) ToAutomationTriggeringRuleArrayOutput() AutomationTriggeringRuleArrayOutput {
	return i.ToAutomationTriggeringRuleArrayOutputWithContext(context.Background())
}

func (i AutomationTriggeringRuleArray) ToAutomationTriggeringRuleArrayOutputWithContext(ctx context.Context) AutomationTriggeringRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutomationTriggeringRuleArrayOutput)
}

// A rule which is evaluated upon event interception. The rule is configured by comparing a specific value from the event model to an expected value. This comparison is done by using one of the supported operators set.
type AutomationTriggeringRuleOutput struct{ *pulumi.OutputState }

func (AutomationTriggeringRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutomationTriggeringRule)(nil)).Elem()
}

func (o AutomationTriggeringRuleOutput) ToAutomationTriggeringRuleOutput() AutomationTriggeringRuleOutput {
	return o
}

func (o AutomationTriggeringRuleOutput) ToAutomationTriggeringRuleOutputWithContext(ctx context.Context) AutomationTriggeringRuleOutput {
	return o
}

// The expected value.
func (o AutomationTriggeringRuleOutput) ExpectedValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AutomationTriggeringRule) *string { return v.ExpectedValue }).(pulumi.StringPtrOutput)
}

// A valid comparer operator to use. A case-insensitive comparison will be applied for String PropertyType.
func (o AutomationTriggeringRuleOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AutomationTriggeringRule) *string { return v.Operator }).(pulumi.StringPtrOutput)
}

// The JPath of the entity model property that should be checked.
func (o AutomationTriggeringRuleOutput) PropertyJPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AutomationTriggeringRule) *string { return v.PropertyJPath }).(pulumi.StringPtrOutput)
}

// The data type of the compared operands (string, integer, floating point number or a boolean [true/false]]
func (o AutomationTriggeringRuleOutput) PropertyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AutomationTriggeringRule) *string { return v.PropertyType }).(pulumi.StringPtrOutput)
}

type AutomationTriggeringRuleArrayOutput struct{ *pulumi.OutputState }

func (AutomationTriggeringRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AutomationTriggeringRule)(nil)).Elem()
}

func (o AutomationTriggeringRuleArrayOutput) ToAutomationTriggeringRuleArrayOutput() AutomationTriggeringRuleArrayOutput {
	return o
}

func (o AutomationTriggeringRuleArrayOutput) ToAutomationTriggeringRuleArrayOutputWithContext(ctx context.Context) AutomationTriggeringRuleArrayOutput {
	return o
}

func (o AutomationTriggeringRuleArrayOutput) Index(i pulumi.IntInput) AutomationTriggeringRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AutomationTriggeringRule {
		return vs[0].([]AutomationTriggeringRule)[vs[1].(int)]
	}).(AutomationTriggeringRuleOutput)
}

// A rule which is evaluated upon event interception. The rule is configured by comparing a specific value from the event model to an expected value. This comparison is done by using one of the supported operators set.
type AutomationTriggeringRuleResponse struct {
	// The expected value.
	ExpectedValue *string `pulumi:"expectedValue"`
	// A valid comparer operator to use. A case-insensitive comparison will be applied for String PropertyType.
	Operator *string `pulumi:"operator"`
	// The JPath of the entity model property that should be checked.
	PropertyJPath *string `pulumi:"propertyJPath"`
	// The data type of the compared operands (string, integer, floating point number or a boolean [true/false]]
	PropertyType *string `pulumi:"propertyType"`
}

// A rule which is evaluated upon event interception. The rule is configured by comparing a specific value from the event model to an expected value. This comparison is done by using one of the supported operators set.
type AutomationTriggeringRuleResponseOutput struct{ *pulumi.OutputState }

func (AutomationTriggeringRuleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutomationTriggeringRuleResponse)(nil)).Elem()
}

func (o AutomationTriggeringRuleResponseOutput) ToAutomationTriggeringRuleResponseOutput() AutomationTriggeringRuleResponseOutput {
	return o
}

func (o AutomationTriggeringRuleResponseOutput) ToAutomationTriggeringRuleResponseOutputWithContext(ctx context.Context) AutomationTriggeringRuleResponseOutput {
	return o
}

// The expected value.
func (o AutomationTriggeringRuleResponseOutput) ExpectedValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AutomationTriggeringRuleResponse) *string { return v.ExpectedValue }).(pulumi.StringPtrOutput)
}

// A valid comparer operator to use. A case-insensitive comparison will be applied for String PropertyType.
func (o AutomationTriggeringRuleResponseOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AutomationTriggeringRuleResponse) *string { return v.Operator }).(pulumi.StringPtrOutput)
}

// The JPath of the entity model property that should be checked.
func (o AutomationTriggeringRuleResponseOutput) PropertyJPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AutomationTriggeringRuleResponse) *string { return v.PropertyJPath }).(pulumi.StringPtrOutput)
}

// The data type of the compared operands (string, integer, floating point number or a boolean [true/false]]
func (o AutomationTriggeringRuleResponseOutput) PropertyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AutomationTriggeringRuleResponse) *string { return v.PropertyType }).(pulumi.StringPtrOutput)
}

type AutomationTriggeringRuleResponseArrayOutput struct{ *pulumi.OutputState }

func (AutomationTriggeringRuleResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AutomationTriggeringRuleResponse)(nil)).Elem()
}

func (o AutomationTriggeringRuleResponseArrayOutput) ToAutomationTriggeringRuleResponseArrayOutput() AutomationTriggeringRuleResponseArrayOutput {
	return o
}

func (o AutomationTriggeringRuleResponseArrayOutput) ToAutomationTriggeringRuleResponseArrayOutputWithContext(ctx context.Context) AutomationTriggeringRuleResponseArrayOutput {
	return o
}

func (o AutomationTriggeringRuleResponseArrayOutput) Index(i pulumi.IntInput) AutomationTriggeringRuleResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AutomationTriggeringRuleResponse {
		return vs[0].([]AutomationTriggeringRuleResponse)[vs[1].(int)]
	}).(AutomationTriggeringRuleResponseOutput)
}

// Alert notification source
type NotificationsSourceAlert struct {
	// Defines the minimal alert severity which will be sent as email notifications
	MinimalSeverity *string `pulumi:"minimalSeverity"`
	// The source type that will trigger the notification
	// Expected value is 'Alert'.
	SourceType string `pulumi:"sourceType"`
}

// NotificationsSourceAlertInput is an input type that accepts NotificationsSourceAlertArgs and NotificationsSourceAlertOutput values.
// You can construct a concrete instance of `NotificationsSourceAlertInput` via:
//
//	NotificationsSourceAlertArgs{...}
type NotificationsSourceAlertInput interface {
	pulumi.Input

	ToNotificationsSourceAlertOutput() NotificationsSourceAlertOutput
	ToNotificationsSourceAlertOutputWithContext(context.Context) NotificationsSourceAlertOutput
}

// Alert notification source
type NotificationsSourceAlertArgs struct {
	// Defines the minimal alert severity which will be sent as email notifications
	MinimalSeverity pulumi.StringPtrInput `pulumi:"minimalSeverity"`
	// The source type that will trigger the notification
	// Expected value is 'Alert'.
	SourceType pulumi.StringInput `pulumi:"sourceType"`
}

func (NotificationsSourceAlertArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NotificationsSourceAlert)(nil)).Elem()
}

func (i NotificationsSourceAlertArgs) ToNotificationsSourceAlertOutput() NotificationsSourceAlertOutput {
	return i.ToNotificationsSourceAlertOutputWithContext(context.Background())
}

func (i NotificationsSourceAlertArgs) ToNotificationsSourceAlertOutputWithContext(ctx context.Context) NotificationsSourceAlertOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotificationsSourceAlertOutput)
}

// Alert notification source
type NotificationsSourceAlertOutput struct{ *pulumi.OutputState }

func (NotificationsSourceAlertOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NotificationsSourceAlert)(nil)).Elem()
}

func (o NotificationsSourceAlertOutput) ToNotificationsSourceAlertOutput() NotificationsSourceAlertOutput {
	return o
}

func (o NotificationsSourceAlertOutput) ToNotificationsSourceAlertOutputWithContext(ctx context.Context) NotificationsSourceAlertOutput {
	return o
}

// Defines the minimal alert severity which will be sent as email notifications
func (o NotificationsSourceAlertOutput) MinimalSeverity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NotificationsSourceAlert) *string { return v.MinimalSeverity }).(pulumi.StringPtrOutput)
}

// The source type that will trigger the notification
// Expected value is 'Alert'.
func (o NotificationsSourceAlertOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v NotificationsSourceAlert) string { return v.SourceType }).(pulumi.StringOutput)
}

// Alert notification source
type NotificationsSourceAlertResponse struct {
	// Defines the minimal alert severity which will be sent as email notifications
	MinimalSeverity *string `pulumi:"minimalSeverity"`
	// The source type that will trigger the notification
	// Expected value is 'Alert'.
	SourceType string `pulumi:"sourceType"`
}

// Alert notification source
type NotificationsSourceAlertResponseOutput struct{ *pulumi.OutputState }

func (NotificationsSourceAlertResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NotificationsSourceAlertResponse)(nil)).Elem()
}

func (o NotificationsSourceAlertResponseOutput) ToNotificationsSourceAlertResponseOutput() NotificationsSourceAlertResponseOutput {
	return o
}

func (o NotificationsSourceAlertResponseOutput) ToNotificationsSourceAlertResponseOutputWithContext(ctx context.Context) NotificationsSourceAlertResponseOutput {
	return o
}

// Defines the minimal alert severity which will be sent as email notifications
func (o NotificationsSourceAlertResponseOutput) MinimalSeverity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NotificationsSourceAlertResponse) *string { return v.MinimalSeverity }).(pulumi.StringPtrOutput)
}

// The source type that will trigger the notification
// Expected value is 'Alert'.
func (o NotificationsSourceAlertResponseOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v NotificationsSourceAlertResponse) string { return v.SourceType }).(pulumi.StringOutput)
}

// Attack path notification source
type NotificationsSourceAttackPath struct {
	// Defines the minimal attach path risk level which will be sent as email notifications
	MinimalRiskLevel *string `pulumi:"minimalRiskLevel"`
	// The source type that will trigger the notification
	// Expected value is 'AttackPath'.
	SourceType string `pulumi:"sourceType"`
}

// NotificationsSourceAttackPathInput is an input type that accepts NotificationsSourceAttackPathArgs and NotificationsSourceAttackPathOutput values.
// You can construct a concrete instance of `NotificationsSourceAttackPathInput` via:
//
//	NotificationsSourceAttackPathArgs{...}
type NotificationsSourceAttackPathInput interface {
	pulumi.Input

	ToNotificationsSourceAttackPathOutput() NotificationsSourceAttackPathOutput
	ToNotificationsSourceAttackPathOutputWithContext(context.Context) NotificationsSourceAttackPathOutput
}

// Attack path notification source
type NotificationsSourceAttackPathArgs struct {
	// Defines the minimal attach path risk level which will be sent as email notifications
	MinimalRiskLevel pulumi.StringPtrInput `pulumi:"minimalRiskLevel"`
	// The source type that will trigger the notification
	// Expected value is 'AttackPath'.
	SourceType pulumi.StringInput `pulumi:"sourceType"`
}

func (NotificationsSourceAttackPathArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NotificationsSourceAttackPath)(nil)).Elem()
}

func (i NotificationsSourceAttackPathArgs) ToNotificationsSourceAttackPathOutput() NotificationsSourceAttackPathOutput {
	return i.ToNotificationsSourceAttackPathOutputWithContext(context.Background())
}

func (i NotificationsSourceAttackPathArgs) ToNotificationsSourceAttackPathOutputWithContext(ctx context.Context) NotificationsSourceAttackPathOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotificationsSourceAttackPathOutput)
}

// Attack path notification source
type NotificationsSourceAttackPathOutput struct{ *pulumi.OutputState }

func (NotificationsSourceAttackPathOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NotificationsSourceAttackPath)(nil)).Elem()
}

func (o NotificationsSourceAttackPathOutput) ToNotificationsSourceAttackPathOutput() NotificationsSourceAttackPathOutput {
	return o
}

func (o NotificationsSourceAttackPathOutput) ToNotificationsSourceAttackPathOutputWithContext(ctx context.Context) NotificationsSourceAttackPathOutput {
	return o
}

// Defines the minimal attach path risk level which will be sent as email notifications
func (o NotificationsSourceAttackPathOutput) MinimalRiskLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NotificationsSourceAttackPath) *string { return v.MinimalRiskLevel }).(pulumi.StringPtrOutput)
}

// The source type that will trigger the notification
// Expected value is 'AttackPath'.
func (o NotificationsSourceAttackPathOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v NotificationsSourceAttackPath) string { return v.SourceType }).(pulumi.StringOutput)
}

// Attack path notification source
type NotificationsSourceAttackPathResponse struct {
	// Defines the minimal attach path risk level which will be sent as email notifications
	MinimalRiskLevel *string `pulumi:"minimalRiskLevel"`
	// The source type that will trigger the notification
	// Expected value is 'AttackPath'.
	SourceType string `pulumi:"sourceType"`
}

// Attack path notification source
type NotificationsSourceAttackPathResponseOutput struct{ *pulumi.OutputState }

func (NotificationsSourceAttackPathResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NotificationsSourceAttackPathResponse)(nil)).Elem()
}

func (o NotificationsSourceAttackPathResponseOutput) ToNotificationsSourceAttackPathResponseOutput() NotificationsSourceAttackPathResponseOutput {
	return o
}

func (o NotificationsSourceAttackPathResponseOutput) ToNotificationsSourceAttackPathResponseOutputWithContext(ctx context.Context) NotificationsSourceAttackPathResponseOutput {
	return o
}

// Defines the minimal attach path risk level which will be sent as email notifications
func (o NotificationsSourceAttackPathResponseOutput) MinimalRiskLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NotificationsSourceAttackPathResponse) *string { return v.MinimalRiskLevel }).(pulumi.StringPtrOutput)
}

// The source type that will trigger the notification
// Expected value is 'AttackPath'.
func (o NotificationsSourceAttackPathResponseOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v NotificationsSourceAttackPathResponse) string { return v.SourceType }).(pulumi.StringOutput)
}

// Defines whether to send email notifications from Microsoft Defender for Cloud to persons with specific RBAC roles on the subscription.
type SecurityContactPropertiesNotificationsByRole struct {
	// Defines which RBAC roles will get email notifications from Microsoft Defender for Cloud. List of allowed RBAC roles:
	Roles []string `pulumi:"roles"`
	// Defines whether to send email notifications from AMicrosoft Defender for Cloud to persons with specific RBAC roles on the subscription.
	State *string `pulumi:"state"`
}

// SecurityContactPropertiesNotificationsByRoleInput is an input type that accepts SecurityContactPropertiesNotificationsByRoleArgs and SecurityContactPropertiesNotificationsByRoleOutput values.
// You can construct a concrete instance of `SecurityContactPropertiesNotificationsByRoleInput` via:
//
//	SecurityContactPropertiesNotificationsByRoleArgs{...}
type SecurityContactPropertiesNotificationsByRoleInput interface {
	pulumi.Input

	ToSecurityContactPropertiesNotificationsByRoleOutput() SecurityContactPropertiesNotificationsByRoleOutput
	ToSecurityContactPropertiesNotificationsByRoleOutputWithContext(context.Context) SecurityContactPropertiesNotificationsByRoleOutput
}

// Defines whether to send email notifications from Microsoft Defender for Cloud to persons with specific RBAC roles on the subscription.
type SecurityContactPropertiesNotificationsByRoleArgs struct {
	// Defines which RBAC roles will get email notifications from Microsoft Defender for Cloud. List of allowed RBAC roles:
	Roles pulumi.StringArrayInput `pulumi:"roles"`
	// Defines whether to send email notifications from AMicrosoft Defender for Cloud to persons with specific RBAC roles on the subscription.
	State pulumi.StringPtrInput `pulumi:"state"`
}

func (SecurityContactPropertiesNotificationsByRoleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityContactPropertiesNotificationsByRole)(nil)).Elem()
}

func (i SecurityContactPropertiesNotificationsByRoleArgs) ToSecurityContactPropertiesNotificationsByRoleOutput() SecurityContactPropertiesNotificationsByRoleOutput {
	return i.ToSecurityContactPropertiesNotificationsByRoleOutputWithContext(context.Background())
}

func (i SecurityContactPropertiesNotificationsByRoleArgs) ToSecurityContactPropertiesNotificationsByRoleOutputWithContext(ctx context.Context) SecurityContactPropertiesNotificationsByRoleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityContactPropertiesNotificationsByRoleOutput)
}

func (i SecurityContactPropertiesNotificationsByRoleArgs) ToSecurityContactPropertiesNotificationsByRolePtrOutput() SecurityContactPropertiesNotificationsByRolePtrOutput {
	return i.ToSecurityContactPropertiesNotificationsByRolePtrOutputWithContext(context.Background())
}

func (i SecurityContactPropertiesNotificationsByRoleArgs) ToSecurityContactPropertiesNotificationsByRolePtrOutputWithContext(ctx context.Context) SecurityContactPropertiesNotificationsByRolePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityContactPropertiesNotificationsByRoleOutput).ToSecurityContactPropertiesNotificationsByRolePtrOutputWithContext(ctx)
}

// SecurityContactPropertiesNotificationsByRolePtrInput is an input type that accepts SecurityContactPropertiesNotificationsByRoleArgs, SecurityContactPropertiesNotificationsByRolePtr and SecurityContactPropertiesNotificationsByRolePtrOutput values.
// You can construct a concrete instance of `SecurityContactPropertiesNotificationsByRolePtrInput` via:
//
//	        SecurityContactPropertiesNotificationsByRoleArgs{...}
//
//	or:
//
//	        nil
type SecurityContactPropertiesNotificationsByRolePtrInput interface {
	pulumi.Input

	ToSecurityContactPropertiesNotificationsByRolePtrOutput() SecurityContactPropertiesNotificationsByRolePtrOutput
	ToSecurityContactPropertiesNotificationsByRolePtrOutputWithContext(context.Context) SecurityContactPropertiesNotificationsByRolePtrOutput
}

type securityContactPropertiesNotificationsByRolePtrType SecurityContactPropertiesNotificationsByRoleArgs

func SecurityContactPropertiesNotificationsByRolePtr(v *SecurityContactPropertiesNotificationsByRoleArgs) SecurityContactPropertiesNotificationsByRolePtrInput {
	return (*securityContactPropertiesNotificationsByRolePtrType)(v)
}

func (*securityContactPropertiesNotificationsByRolePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecurityContactPropertiesNotificationsByRole)(nil)).Elem()
}

func (i *securityContactPropertiesNotificationsByRolePtrType) ToSecurityContactPropertiesNotificationsByRolePtrOutput() SecurityContactPropertiesNotificationsByRolePtrOutput {
	return i.ToSecurityContactPropertiesNotificationsByRolePtrOutputWithContext(context.Background())
}

func (i *securityContactPropertiesNotificationsByRolePtrType) ToSecurityContactPropertiesNotificationsByRolePtrOutputWithContext(ctx context.Context) SecurityContactPropertiesNotificationsByRolePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityContactPropertiesNotificationsByRolePtrOutput)
}

// Defines whether to send email notifications from Microsoft Defender for Cloud to persons with specific RBAC roles on the subscription.
type SecurityContactPropertiesNotificationsByRoleOutput struct{ *pulumi.OutputState }

func (SecurityContactPropertiesNotificationsByRoleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityContactPropertiesNotificationsByRole)(nil)).Elem()
}

func (o SecurityContactPropertiesNotificationsByRoleOutput) ToSecurityContactPropertiesNotificationsByRoleOutput() SecurityContactPropertiesNotificationsByRoleOutput {
	return o
}

func (o SecurityContactPropertiesNotificationsByRoleOutput) ToSecurityContactPropertiesNotificationsByRoleOutputWithContext(ctx context.Context) SecurityContactPropertiesNotificationsByRoleOutput {
	return o
}

func (o SecurityContactPropertiesNotificationsByRoleOutput) ToSecurityContactPropertiesNotificationsByRolePtrOutput() SecurityContactPropertiesNotificationsByRolePtrOutput {
	return o.ToSecurityContactPropertiesNotificationsByRolePtrOutputWithContext(context.Background())
}

func (o SecurityContactPropertiesNotificationsByRoleOutput) ToSecurityContactPropertiesNotificationsByRolePtrOutputWithContext(ctx context.Context) SecurityContactPropertiesNotificationsByRolePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecurityContactPropertiesNotificationsByRole) *SecurityContactPropertiesNotificationsByRole {
		return &v
	}).(SecurityContactPropertiesNotificationsByRolePtrOutput)
}

// Defines which RBAC roles will get email notifications from Microsoft Defender for Cloud. List of allowed RBAC roles:
func (o SecurityContactPropertiesNotificationsByRoleOutput) Roles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecurityContactPropertiesNotificationsByRole) []string { return v.Roles }).(pulumi.StringArrayOutput)
}

// Defines whether to send email notifications from AMicrosoft Defender for Cloud to persons with specific RBAC roles on the subscription.
func (o SecurityContactPropertiesNotificationsByRoleOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityContactPropertiesNotificationsByRole) *string { return v.State }).(pulumi.StringPtrOutput)
}

type SecurityContactPropertiesNotificationsByRolePtrOutput struct{ *pulumi.OutputState }

func (SecurityContactPropertiesNotificationsByRolePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecurityContactPropertiesNotificationsByRole)(nil)).Elem()
}

func (o SecurityContactPropertiesNotificationsByRolePtrOutput) ToSecurityContactPropertiesNotificationsByRolePtrOutput() SecurityContactPropertiesNotificationsByRolePtrOutput {
	return o
}

func (o SecurityContactPropertiesNotificationsByRolePtrOutput) ToSecurityContactPropertiesNotificationsByRolePtrOutputWithContext(ctx context.Context) SecurityContactPropertiesNotificationsByRolePtrOutput {
	return o
}

func (o SecurityContactPropertiesNotificationsByRolePtrOutput) Elem() SecurityContactPropertiesNotificationsByRoleOutput {
	return o.ApplyT(func(v *SecurityContactPropertiesNotificationsByRole) SecurityContactPropertiesNotificationsByRole {
		if v != nil {
			return *v
		}
		var ret SecurityContactPropertiesNotificationsByRole
		return ret
	}).(SecurityContactPropertiesNotificationsByRoleOutput)
}

// Defines which RBAC roles will get email notifications from Microsoft Defender for Cloud. List of allowed RBAC roles:
func (o SecurityContactPropertiesNotificationsByRolePtrOutput) Roles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SecurityContactPropertiesNotificationsByRole) []string {
		if v == nil {
			return nil
		}
		return v.Roles
	}).(pulumi.StringArrayOutput)
}

// Defines whether to send email notifications from AMicrosoft Defender for Cloud to persons with specific RBAC roles on the subscription.
func (o SecurityContactPropertiesNotificationsByRolePtrOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecurityContactPropertiesNotificationsByRole) *string {
		if v == nil {
			return nil
		}
		return v.State
	}).(pulumi.StringPtrOutput)
}

// Defines whether to send email notifications from Microsoft Defender for Cloud to persons with specific RBAC roles on the subscription.
type SecurityContactPropertiesResponseNotificationsByRole struct {
	// Defines which RBAC roles will get email notifications from Microsoft Defender for Cloud. List of allowed RBAC roles:
	Roles []string `pulumi:"roles"`
	// Defines whether to send email notifications from AMicrosoft Defender for Cloud to persons with specific RBAC roles on the subscription.
	State *string `pulumi:"state"`
}

// Defines whether to send email notifications from Microsoft Defender for Cloud to persons with specific RBAC roles on the subscription.
type SecurityContactPropertiesResponseNotificationsByRoleOutput struct{ *pulumi.OutputState }

func (SecurityContactPropertiesResponseNotificationsByRoleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityContactPropertiesResponseNotificationsByRole)(nil)).Elem()
}

func (o SecurityContactPropertiesResponseNotificationsByRoleOutput) ToSecurityContactPropertiesResponseNotificationsByRoleOutput() SecurityContactPropertiesResponseNotificationsByRoleOutput {
	return o
}

func (o SecurityContactPropertiesResponseNotificationsByRoleOutput) ToSecurityContactPropertiesResponseNotificationsByRoleOutputWithContext(ctx context.Context) SecurityContactPropertiesResponseNotificationsByRoleOutput {
	return o
}

// Defines which RBAC roles will get email notifications from Microsoft Defender for Cloud. List of allowed RBAC roles:
func (o SecurityContactPropertiesResponseNotificationsByRoleOutput) Roles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecurityContactPropertiesResponseNotificationsByRole) []string { return v.Roles }).(pulumi.StringArrayOutput)
}

// Defines whether to send email notifications from AMicrosoft Defender for Cloud to persons with specific RBAC roles on the subscription.
func (o SecurityContactPropertiesResponseNotificationsByRoleOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityContactPropertiesResponseNotificationsByRole) *string { return v.State }).(pulumi.StringPtrOutput)
}

type SecurityContactPropertiesResponseNotificationsByRolePtrOutput struct{ *pulumi.OutputState }

func (SecurityContactPropertiesResponseNotificationsByRolePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecurityContactPropertiesResponseNotificationsByRole)(nil)).Elem()
}

func (o SecurityContactPropertiesResponseNotificationsByRolePtrOutput) ToSecurityContactPropertiesResponseNotificationsByRolePtrOutput() SecurityContactPropertiesResponseNotificationsByRolePtrOutput {
	return o
}

func (o SecurityContactPropertiesResponseNotificationsByRolePtrOutput) ToSecurityContactPropertiesResponseNotificationsByRolePtrOutputWithContext(ctx context.Context) SecurityContactPropertiesResponseNotificationsByRolePtrOutput {
	return o
}

func (o SecurityContactPropertiesResponseNotificationsByRolePtrOutput) Elem() SecurityContactPropertiesResponseNotificationsByRoleOutput {
	return o.ApplyT(func(v *SecurityContactPropertiesResponseNotificationsByRole) SecurityContactPropertiesResponseNotificationsByRole {
		if v != nil {
			return *v
		}
		var ret SecurityContactPropertiesResponseNotificationsByRole
		return ret
	}).(SecurityContactPropertiesResponseNotificationsByRoleOutput)
}

// Defines which RBAC roles will get email notifications from Microsoft Defender for Cloud. List of allowed RBAC roles:
func (o SecurityContactPropertiesResponseNotificationsByRolePtrOutput) Roles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SecurityContactPropertiesResponseNotificationsByRole) []string {
		if v == nil {
			return nil
		}
		return v.Roles
	}).(pulumi.StringArrayOutput)
}

// Defines whether to send email notifications from AMicrosoft Defender for Cloud to persons with specific RBAC roles on the subscription.
func (o SecurityContactPropertiesResponseNotificationsByRolePtrOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecurityContactPropertiesResponseNotificationsByRole) *string {
		if v == nil {
			return nil
		}
		return v.State
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(AutomationActionEventHubOutput{})
	pulumi.RegisterOutputType(AutomationActionEventHubResponseOutput{})
	pulumi.RegisterOutputType(AutomationActionLogicAppOutput{})
	pulumi.RegisterOutputType(AutomationActionLogicAppResponseOutput{})
	pulumi.RegisterOutputType(AutomationActionWorkspaceOutput{})
	pulumi.RegisterOutputType(AutomationActionWorkspaceResponseOutput{})
	pulumi.RegisterOutputType(AutomationRuleSetOutput{})
	pulumi.RegisterOutputType(AutomationRuleSetArrayOutput{})
	pulumi.RegisterOutputType(AutomationRuleSetResponseOutput{})
	pulumi.RegisterOutputType(AutomationRuleSetResponseArrayOutput{})
	pulumi.RegisterOutputType(AutomationScopeOutput{})
	pulumi.RegisterOutputType(AutomationScopeArrayOutput{})
	pulumi.RegisterOutputType(AutomationScopeResponseOutput{})
	pulumi.RegisterOutputType(AutomationScopeResponseArrayOutput{})
	pulumi.RegisterOutputType(AutomationSourceOutput{})
	pulumi.RegisterOutputType(AutomationSourceArrayOutput{})
	pulumi.RegisterOutputType(AutomationSourceResponseOutput{})
	pulumi.RegisterOutputType(AutomationSourceResponseArrayOutput{})
	pulumi.RegisterOutputType(AutomationTriggeringRuleOutput{})
	pulumi.RegisterOutputType(AutomationTriggeringRuleArrayOutput{})
	pulumi.RegisterOutputType(AutomationTriggeringRuleResponseOutput{})
	pulumi.RegisterOutputType(AutomationTriggeringRuleResponseArrayOutput{})
	pulumi.RegisterOutputType(NotificationsSourceAlertOutput{})
	pulumi.RegisterOutputType(NotificationsSourceAlertResponseOutput{})
	pulumi.RegisterOutputType(NotificationsSourceAttackPathOutput{})
	pulumi.RegisterOutputType(NotificationsSourceAttackPathResponseOutput{})
	pulumi.RegisterOutputType(SecurityContactPropertiesNotificationsByRoleOutput{})
	pulumi.RegisterOutputType(SecurityContactPropertiesNotificationsByRolePtrOutput{})
	pulumi.RegisterOutputType(SecurityContactPropertiesResponseNotificationsByRoleOutput{})
	pulumi.RegisterOutputType(SecurityContactPropertiesResponseNotificationsByRolePtrOutput{})
}
