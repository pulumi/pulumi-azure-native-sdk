// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20220101preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// The owner type for the governance rule owner source
type GovernanceRuleOwnerSourceType string

const (
	// The rule source type defined using resource tag
	GovernanceRuleOwnerSourceTypeByTag = GovernanceRuleOwnerSourceType("ByTag")
	// The rule source type defined manually
	GovernanceRuleOwnerSourceTypeManually = GovernanceRuleOwnerSourceType("Manually")
)

func (GovernanceRuleOwnerSourceType) ElementType() reflect.Type {
	return reflect.TypeOf((*GovernanceRuleOwnerSourceType)(nil)).Elem()
}

func (e GovernanceRuleOwnerSourceType) ToGovernanceRuleOwnerSourceTypeOutput() GovernanceRuleOwnerSourceTypeOutput {
	return pulumi.ToOutput(e).(GovernanceRuleOwnerSourceTypeOutput)
}

func (e GovernanceRuleOwnerSourceType) ToGovernanceRuleOwnerSourceTypeOutputWithContext(ctx context.Context) GovernanceRuleOwnerSourceTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(GovernanceRuleOwnerSourceTypeOutput)
}

func (e GovernanceRuleOwnerSourceType) ToGovernanceRuleOwnerSourceTypePtrOutput() GovernanceRuleOwnerSourceTypePtrOutput {
	return e.ToGovernanceRuleOwnerSourceTypePtrOutputWithContext(context.Background())
}

func (e GovernanceRuleOwnerSourceType) ToGovernanceRuleOwnerSourceTypePtrOutputWithContext(ctx context.Context) GovernanceRuleOwnerSourceTypePtrOutput {
	return GovernanceRuleOwnerSourceType(e).ToGovernanceRuleOwnerSourceTypeOutputWithContext(ctx).ToGovernanceRuleOwnerSourceTypePtrOutputWithContext(ctx)
}

func (e GovernanceRuleOwnerSourceType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e GovernanceRuleOwnerSourceType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e GovernanceRuleOwnerSourceType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e GovernanceRuleOwnerSourceType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type GovernanceRuleOwnerSourceTypeOutput struct{ *pulumi.OutputState }

func (GovernanceRuleOwnerSourceTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GovernanceRuleOwnerSourceType)(nil)).Elem()
}

func (o GovernanceRuleOwnerSourceTypeOutput) ToGovernanceRuleOwnerSourceTypeOutput() GovernanceRuleOwnerSourceTypeOutput {
	return o
}

func (o GovernanceRuleOwnerSourceTypeOutput) ToGovernanceRuleOwnerSourceTypeOutputWithContext(ctx context.Context) GovernanceRuleOwnerSourceTypeOutput {
	return o
}

func (o GovernanceRuleOwnerSourceTypeOutput) ToGovernanceRuleOwnerSourceTypePtrOutput() GovernanceRuleOwnerSourceTypePtrOutput {
	return o.ToGovernanceRuleOwnerSourceTypePtrOutputWithContext(context.Background())
}

func (o GovernanceRuleOwnerSourceTypeOutput) ToGovernanceRuleOwnerSourceTypePtrOutputWithContext(ctx context.Context) GovernanceRuleOwnerSourceTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GovernanceRuleOwnerSourceType) *GovernanceRuleOwnerSourceType {
		return &v
	}).(GovernanceRuleOwnerSourceTypePtrOutput)
}

func (o GovernanceRuleOwnerSourceTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o GovernanceRuleOwnerSourceTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e GovernanceRuleOwnerSourceType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o GovernanceRuleOwnerSourceTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o GovernanceRuleOwnerSourceTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e GovernanceRuleOwnerSourceType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type GovernanceRuleOwnerSourceTypePtrOutput struct{ *pulumi.OutputState }

func (GovernanceRuleOwnerSourceTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GovernanceRuleOwnerSourceType)(nil)).Elem()
}

func (o GovernanceRuleOwnerSourceTypePtrOutput) ToGovernanceRuleOwnerSourceTypePtrOutput() GovernanceRuleOwnerSourceTypePtrOutput {
	return o
}

func (o GovernanceRuleOwnerSourceTypePtrOutput) ToGovernanceRuleOwnerSourceTypePtrOutputWithContext(ctx context.Context) GovernanceRuleOwnerSourceTypePtrOutput {
	return o
}

func (o GovernanceRuleOwnerSourceTypePtrOutput) Elem() GovernanceRuleOwnerSourceTypeOutput {
	return o.ApplyT(func(v *GovernanceRuleOwnerSourceType) GovernanceRuleOwnerSourceType {
		if v != nil {
			return *v
		}
		var ret GovernanceRuleOwnerSourceType
		return ret
	}).(GovernanceRuleOwnerSourceTypeOutput)
}

func (o GovernanceRuleOwnerSourceTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o GovernanceRuleOwnerSourceTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *GovernanceRuleOwnerSourceType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// GovernanceRuleOwnerSourceTypeInput is an input type that accepts values of the GovernanceRuleOwnerSourceType enum
// A concrete instance of `GovernanceRuleOwnerSourceTypeInput` can be one of the following:
//
//	GovernanceRuleOwnerSourceTypeByTag
//	GovernanceRuleOwnerSourceTypeManually
type GovernanceRuleOwnerSourceTypeInput interface {
	pulumi.Input

	ToGovernanceRuleOwnerSourceTypeOutput() GovernanceRuleOwnerSourceTypeOutput
	ToGovernanceRuleOwnerSourceTypeOutputWithContext(context.Context) GovernanceRuleOwnerSourceTypeOutput
}

var governanceRuleOwnerSourceTypePtrType = reflect.TypeOf((**GovernanceRuleOwnerSourceType)(nil)).Elem()

type GovernanceRuleOwnerSourceTypePtrInput interface {
	pulumi.Input

	ToGovernanceRuleOwnerSourceTypePtrOutput() GovernanceRuleOwnerSourceTypePtrOutput
	ToGovernanceRuleOwnerSourceTypePtrOutputWithContext(context.Context) GovernanceRuleOwnerSourceTypePtrOutput
}

type governanceRuleOwnerSourceTypePtr string

func GovernanceRuleOwnerSourceTypePtr(v string) GovernanceRuleOwnerSourceTypePtrInput {
	return (*governanceRuleOwnerSourceTypePtr)(&v)
}

func (*governanceRuleOwnerSourceTypePtr) ElementType() reflect.Type {
	return governanceRuleOwnerSourceTypePtrType
}

func (in *governanceRuleOwnerSourceTypePtr) ToGovernanceRuleOwnerSourceTypePtrOutput() GovernanceRuleOwnerSourceTypePtrOutput {
	return pulumi.ToOutput(in).(GovernanceRuleOwnerSourceTypePtrOutput)
}

func (in *governanceRuleOwnerSourceTypePtr) ToGovernanceRuleOwnerSourceTypePtrOutputWithContext(ctx context.Context) GovernanceRuleOwnerSourceTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(GovernanceRuleOwnerSourceTypePtrOutput)
}

func (in *governanceRuleOwnerSourceTypePtr) ToOutput(ctx context.Context) pulumix.Output[*GovernanceRuleOwnerSourceType] {
	return pulumix.Output[*GovernanceRuleOwnerSourceType]{
		OutputState: in.ToGovernanceRuleOwnerSourceTypePtrOutputWithContext(ctx).OutputState,
	}
}

// The governance rule source, what the rule affects, e.g. Assessments
type GovernanceRuleSourceResourceType string

const (
	// The source of the governance rule is assessments
	GovernanceRuleSourceResourceTypeAssessments = GovernanceRuleSourceResourceType("Assessments")
)

func (GovernanceRuleSourceResourceType) ElementType() reflect.Type {
	return reflect.TypeOf((*GovernanceRuleSourceResourceType)(nil)).Elem()
}

func (e GovernanceRuleSourceResourceType) ToGovernanceRuleSourceResourceTypeOutput() GovernanceRuleSourceResourceTypeOutput {
	return pulumi.ToOutput(e).(GovernanceRuleSourceResourceTypeOutput)
}

func (e GovernanceRuleSourceResourceType) ToGovernanceRuleSourceResourceTypeOutputWithContext(ctx context.Context) GovernanceRuleSourceResourceTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(GovernanceRuleSourceResourceTypeOutput)
}

func (e GovernanceRuleSourceResourceType) ToGovernanceRuleSourceResourceTypePtrOutput() GovernanceRuleSourceResourceTypePtrOutput {
	return e.ToGovernanceRuleSourceResourceTypePtrOutputWithContext(context.Background())
}

func (e GovernanceRuleSourceResourceType) ToGovernanceRuleSourceResourceTypePtrOutputWithContext(ctx context.Context) GovernanceRuleSourceResourceTypePtrOutput {
	return GovernanceRuleSourceResourceType(e).ToGovernanceRuleSourceResourceTypeOutputWithContext(ctx).ToGovernanceRuleSourceResourceTypePtrOutputWithContext(ctx)
}

func (e GovernanceRuleSourceResourceType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e GovernanceRuleSourceResourceType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e GovernanceRuleSourceResourceType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e GovernanceRuleSourceResourceType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type GovernanceRuleSourceResourceTypeOutput struct{ *pulumi.OutputState }

func (GovernanceRuleSourceResourceTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GovernanceRuleSourceResourceType)(nil)).Elem()
}

func (o GovernanceRuleSourceResourceTypeOutput) ToGovernanceRuleSourceResourceTypeOutput() GovernanceRuleSourceResourceTypeOutput {
	return o
}

func (o GovernanceRuleSourceResourceTypeOutput) ToGovernanceRuleSourceResourceTypeOutputWithContext(ctx context.Context) GovernanceRuleSourceResourceTypeOutput {
	return o
}

func (o GovernanceRuleSourceResourceTypeOutput) ToGovernanceRuleSourceResourceTypePtrOutput() GovernanceRuleSourceResourceTypePtrOutput {
	return o.ToGovernanceRuleSourceResourceTypePtrOutputWithContext(context.Background())
}

func (o GovernanceRuleSourceResourceTypeOutput) ToGovernanceRuleSourceResourceTypePtrOutputWithContext(ctx context.Context) GovernanceRuleSourceResourceTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GovernanceRuleSourceResourceType) *GovernanceRuleSourceResourceType {
		return &v
	}).(GovernanceRuleSourceResourceTypePtrOutput)
}

func (o GovernanceRuleSourceResourceTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o GovernanceRuleSourceResourceTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e GovernanceRuleSourceResourceType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o GovernanceRuleSourceResourceTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o GovernanceRuleSourceResourceTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e GovernanceRuleSourceResourceType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type GovernanceRuleSourceResourceTypePtrOutput struct{ *pulumi.OutputState }

func (GovernanceRuleSourceResourceTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GovernanceRuleSourceResourceType)(nil)).Elem()
}

func (o GovernanceRuleSourceResourceTypePtrOutput) ToGovernanceRuleSourceResourceTypePtrOutput() GovernanceRuleSourceResourceTypePtrOutput {
	return o
}

func (o GovernanceRuleSourceResourceTypePtrOutput) ToGovernanceRuleSourceResourceTypePtrOutputWithContext(ctx context.Context) GovernanceRuleSourceResourceTypePtrOutput {
	return o
}

func (o GovernanceRuleSourceResourceTypePtrOutput) Elem() GovernanceRuleSourceResourceTypeOutput {
	return o.ApplyT(func(v *GovernanceRuleSourceResourceType) GovernanceRuleSourceResourceType {
		if v != nil {
			return *v
		}
		var ret GovernanceRuleSourceResourceType
		return ret
	}).(GovernanceRuleSourceResourceTypeOutput)
}

func (o GovernanceRuleSourceResourceTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o GovernanceRuleSourceResourceTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *GovernanceRuleSourceResourceType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// GovernanceRuleSourceResourceTypeInput is an input type that accepts values of the GovernanceRuleSourceResourceType enum
// A concrete instance of `GovernanceRuleSourceResourceTypeInput` can be one of the following:
//
//	GovernanceRuleSourceResourceTypeAssessments
type GovernanceRuleSourceResourceTypeInput interface {
	pulumi.Input

	ToGovernanceRuleSourceResourceTypeOutput() GovernanceRuleSourceResourceTypeOutput
	ToGovernanceRuleSourceResourceTypeOutputWithContext(context.Context) GovernanceRuleSourceResourceTypeOutput
}

var governanceRuleSourceResourceTypePtrType = reflect.TypeOf((**GovernanceRuleSourceResourceType)(nil)).Elem()

type GovernanceRuleSourceResourceTypePtrInput interface {
	pulumi.Input

	ToGovernanceRuleSourceResourceTypePtrOutput() GovernanceRuleSourceResourceTypePtrOutput
	ToGovernanceRuleSourceResourceTypePtrOutputWithContext(context.Context) GovernanceRuleSourceResourceTypePtrOutput
}

type governanceRuleSourceResourceTypePtr string

func GovernanceRuleSourceResourceTypePtr(v string) GovernanceRuleSourceResourceTypePtrInput {
	return (*governanceRuleSourceResourceTypePtr)(&v)
}

func (*governanceRuleSourceResourceTypePtr) ElementType() reflect.Type {
	return governanceRuleSourceResourceTypePtrType
}

func (in *governanceRuleSourceResourceTypePtr) ToGovernanceRuleSourceResourceTypePtrOutput() GovernanceRuleSourceResourceTypePtrOutput {
	return pulumi.ToOutput(in).(GovernanceRuleSourceResourceTypePtrOutput)
}

func (in *governanceRuleSourceResourceTypePtr) ToGovernanceRuleSourceResourceTypePtrOutputWithContext(ctx context.Context) GovernanceRuleSourceResourceTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(GovernanceRuleSourceResourceTypePtrOutput)
}

func (in *governanceRuleSourceResourceTypePtr) ToOutput(ctx context.Context) pulumix.Output[*GovernanceRuleSourceResourceType] {
	return pulumix.Output[*GovernanceRuleSourceResourceType]{
		OutputState: in.ToGovernanceRuleSourceResourceTypePtrOutputWithContext(ctx).OutputState,
	}
}

// The rule type of the governance rule, defines the source of the rule e.g. Integrated
type GovernanceRuleType string

const (
	// The source of the rule type definition is integrated
	GovernanceRuleTypeIntegrated = GovernanceRuleType("Integrated")
	// The source of the rule type definition is ServiceNow
	GovernanceRuleTypeServiceNow = GovernanceRuleType("ServiceNow")
)

func (GovernanceRuleType) ElementType() reflect.Type {
	return reflect.TypeOf((*GovernanceRuleType)(nil)).Elem()
}

func (e GovernanceRuleType) ToGovernanceRuleTypeOutput() GovernanceRuleTypeOutput {
	return pulumi.ToOutput(e).(GovernanceRuleTypeOutput)
}

func (e GovernanceRuleType) ToGovernanceRuleTypeOutputWithContext(ctx context.Context) GovernanceRuleTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(GovernanceRuleTypeOutput)
}

func (e GovernanceRuleType) ToGovernanceRuleTypePtrOutput() GovernanceRuleTypePtrOutput {
	return e.ToGovernanceRuleTypePtrOutputWithContext(context.Background())
}

func (e GovernanceRuleType) ToGovernanceRuleTypePtrOutputWithContext(ctx context.Context) GovernanceRuleTypePtrOutput {
	return GovernanceRuleType(e).ToGovernanceRuleTypeOutputWithContext(ctx).ToGovernanceRuleTypePtrOutputWithContext(ctx)
}

func (e GovernanceRuleType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e GovernanceRuleType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e GovernanceRuleType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e GovernanceRuleType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type GovernanceRuleTypeOutput struct{ *pulumi.OutputState }

func (GovernanceRuleTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GovernanceRuleType)(nil)).Elem()
}

func (o GovernanceRuleTypeOutput) ToGovernanceRuleTypeOutput() GovernanceRuleTypeOutput {
	return o
}

func (o GovernanceRuleTypeOutput) ToGovernanceRuleTypeOutputWithContext(ctx context.Context) GovernanceRuleTypeOutput {
	return o
}

func (o GovernanceRuleTypeOutput) ToGovernanceRuleTypePtrOutput() GovernanceRuleTypePtrOutput {
	return o.ToGovernanceRuleTypePtrOutputWithContext(context.Background())
}

func (o GovernanceRuleTypeOutput) ToGovernanceRuleTypePtrOutputWithContext(ctx context.Context) GovernanceRuleTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GovernanceRuleType) *GovernanceRuleType {
		return &v
	}).(GovernanceRuleTypePtrOutput)
}

func (o GovernanceRuleTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o GovernanceRuleTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e GovernanceRuleType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o GovernanceRuleTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o GovernanceRuleTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e GovernanceRuleType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type GovernanceRuleTypePtrOutput struct{ *pulumi.OutputState }

func (GovernanceRuleTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GovernanceRuleType)(nil)).Elem()
}

func (o GovernanceRuleTypePtrOutput) ToGovernanceRuleTypePtrOutput() GovernanceRuleTypePtrOutput {
	return o
}

func (o GovernanceRuleTypePtrOutput) ToGovernanceRuleTypePtrOutputWithContext(ctx context.Context) GovernanceRuleTypePtrOutput {
	return o
}

func (o GovernanceRuleTypePtrOutput) Elem() GovernanceRuleTypeOutput {
	return o.ApplyT(func(v *GovernanceRuleType) GovernanceRuleType {
		if v != nil {
			return *v
		}
		var ret GovernanceRuleType
		return ret
	}).(GovernanceRuleTypeOutput)
}

func (o GovernanceRuleTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o GovernanceRuleTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *GovernanceRuleType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// GovernanceRuleTypeInput is an input type that accepts values of the GovernanceRuleType enum
// A concrete instance of `GovernanceRuleTypeInput` can be one of the following:
//
//	GovernanceRuleTypeIntegrated
//	GovernanceRuleTypeServiceNow
type GovernanceRuleTypeInput interface {
	pulumi.Input

	ToGovernanceRuleTypeOutput() GovernanceRuleTypeOutput
	ToGovernanceRuleTypeOutputWithContext(context.Context) GovernanceRuleTypeOutput
}

var governanceRuleTypePtrType = reflect.TypeOf((**GovernanceRuleType)(nil)).Elem()

type GovernanceRuleTypePtrInput interface {
	pulumi.Input

	ToGovernanceRuleTypePtrOutput() GovernanceRuleTypePtrOutput
	ToGovernanceRuleTypePtrOutputWithContext(context.Context) GovernanceRuleTypePtrOutput
}

type governanceRuleTypePtr string

func GovernanceRuleTypePtr(v string) GovernanceRuleTypePtrInput {
	return (*governanceRuleTypePtr)(&v)
}

func (*governanceRuleTypePtr) ElementType() reflect.Type {
	return governanceRuleTypePtrType
}

func (in *governanceRuleTypePtr) ToGovernanceRuleTypePtrOutput() GovernanceRuleTypePtrOutput {
	return pulumi.ToOutput(in).(GovernanceRuleTypePtrOutput)
}

func (in *governanceRuleTypePtr) ToGovernanceRuleTypePtrOutputWithContext(ctx context.Context) GovernanceRuleTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(GovernanceRuleTypePtrOutput)
}

func (in *governanceRuleTypePtr) ToOutput(ctx context.Context) pulumix.Output[*GovernanceRuleType] {
	return pulumix.Output[*GovernanceRuleType]{
		OutputState: in.ToGovernanceRuleTypePtrOutputWithContext(ctx).OutputState,
	}
}

func init() {
	pulumi.RegisterOutputType(GovernanceRuleOwnerSourceTypeOutput{})
	pulumi.RegisterOutputType(GovernanceRuleOwnerSourceTypePtrOutput{})
	pulumi.RegisterOutputType(GovernanceRuleSourceResourceTypeOutput{})
	pulumi.RegisterOutputType(GovernanceRuleSourceResourceTypePtrOutput{})
	pulumi.RegisterOutputType(GovernanceRuleTypeOutput{})
	pulumi.RegisterOutputType(GovernanceRuleTypePtrOutput{})
}
