// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package security

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v3/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// List of RP resources which supports pagination.
//
// Uses Azure REST API version 2024-04-01.
//
// Other available API versions: 2023-09-01-preview, 2024-05-15-preview, 2025-03-01. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native security [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
func ListGitLabGroupAvailable(ctx *pulumi.Context, args *ListGitLabGroupAvailableArgs, opts ...pulumi.InvokeOption) (*ListGitLabGroupAvailableResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv ListGitLabGroupAvailableResult
	err := ctx.Invoke("azure-native:security:listGitLabGroupAvailable", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type ListGitLabGroupAvailableArgs struct {
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The security connector name.
	SecurityConnectorName string `pulumi:"securityConnectorName"`
}

// List of RP resources which supports pagination.
type ListGitLabGroupAvailableResult struct {
	// Gets or sets next link to scroll over the results.
	NextLink *string `pulumi:"nextLink"`
	// Gets or sets list of resources.
	Value []GitLabGroupResponse `pulumi:"value"`
}

func ListGitLabGroupAvailableOutput(ctx *pulumi.Context, args ListGitLabGroupAvailableOutputArgs, opts ...pulumi.InvokeOption) ListGitLabGroupAvailableResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (ListGitLabGroupAvailableResultOutput, error) {
			args := v.(ListGitLabGroupAvailableArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: utilities.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("azure-native:security:listGitLabGroupAvailable", args, ListGitLabGroupAvailableResultOutput{}, options).(ListGitLabGroupAvailableResultOutput), nil
		}).(ListGitLabGroupAvailableResultOutput)
}

type ListGitLabGroupAvailableOutputArgs struct {
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
	// The security connector name.
	SecurityConnectorName pulumi.StringInput `pulumi:"securityConnectorName"`
}

func (ListGitLabGroupAvailableOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ListGitLabGroupAvailableArgs)(nil)).Elem()
}

// List of RP resources which supports pagination.
type ListGitLabGroupAvailableResultOutput struct{ *pulumi.OutputState }

func (ListGitLabGroupAvailableResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListGitLabGroupAvailableResult)(nil)).Elem()
}

func (o ListGitLabGroupAvailableResultOutput) ToListGitLabGroupAvailableResultOutput() ListGitLabGroupAvailableResultOutput {
	return o
}

func (o ListGitLabGroupAvailableResultOutput) ToListGitLabGroupAvailableResultOutputWithContext(ctx context.Context) ListGitLabGroupAvailableResultOutput {
	return o
}

// Gets or sets next link to scroll over the results.
func (o ListGitLabGroupAvailableResultOutput) NextLink() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListGitLabGroupAvailableResult) *string { return v.NextLink }).(pulumi.StringPtrOutput)
}

// Gets or sets list of resources.
func (o ListGitLabGroupAvailableResultOutput) Value() GitLabGroupResponseArrayOutput {
	return o.ApplyT(func(v ListGitLabGroupAvailableResult) []GitLabGroupResponse { return v.Value }).(GitLabGroupResponseArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(ListGitLabGroupAvailableResultOutput{})
}
