// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20240801

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Get a specific security standard for the requested scope by standardId
func LookupSecurityStandard(ctx *pulumi.Context, args *LookupSecurityStandardArgs, opts ...pulumi.InvokeOption) (*LookupSecurityStandardResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv LookupSecurityStandardResult
	err := ctx.Invoke("azure-native:security/v20240801:getSecurityStandard", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupSecurityStandardArgs struct {
	// The scope of the security standard. Valid scopes are: management group (format: 'providers/Microsoft.Management/managementGroups/{managementGroup}'), subscription (format: 'subscriptions/{subscriptionId}'), or security connector (format: 'subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Security/securityConnectors/{securityConnectorName})'
	Scope string `pulumi:"scope"`
	// The Security Standard key - unique key for the standard type
	StandardId string `pulumi:"standardId"`
}

// Security Standard on a resource
type LookupSecurityStandardResult struct {
	// List of assessment keys to apply to standard scope.
	Assessments []PartialAssessmentPropertiesResponse `pulumi:"assessments"`
	// List of all standard supported clouds.
	CloudProviders []string `pulumi:"cloudProviders"`
	// Description of the standard
	Description *string `pulumi:"description"`
	// Display name of the standard, equivalent to the standardId
	DisplayName *string `pulumi:"displayName"`
	// Resource Id
	Id string `pulumi:"id"`
	// The security standard metadata.
	Metadata *StandardMetadataResponse `pulumi:"metadata"`
	// Resource name
	Name string `pulumi:"name"`
	// The policy set definition id associated with the standard.
	PolicySetDefinitionId *string `pulumi:"policySetDefinitionId"`
	// Standard type (Custom or Default or Compliance only currently)
	StandardType string `pulumi:"standardType"`
	// Resource type
	Type string `pulumi:"type"`
}

func LookupSecurityStandardOutput(ctx *pulumi.Context, args LookupSecurityStandardOutputArgs, opts ...pulumi.InvokeOption) LookupSecurityStandardResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupSecurityStandardResultOutput, error) {
			args := v.(LookupSecurityStandardArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: utilities.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("azure-native:security/v20240801:getSecurityStandard", args, LookupSecurityStandardResultOutput{}, options).(LookupSecurityStandardResultOutput), nil
		}).(LookupSecurityStandardResultOutput)
}

type LookupSecurityStandardOutputArgs struct {
	// The scope of the security standard. Valid scopes are: management group (format: 'providers/Microsoft.Management/managementGroups/{managementGroup}'), subscription (format: 'subscriptions/{subscriptionId}'), or security connector (format: 'subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Security/securityConnectors/{securityConnectorName})'
	Scope pulumi.StringInput `pulumi:"scope"`
	// The Security Standard key - unique key for the standard type
	StandardId pulumi.StringInput `pulumi:"standardId"`
}

func (LookupSecurityStandardOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSecurityStandardArgs)(nil)).Elem()
}

// Security Standard on a resource
type LookupSecurityStandardResultOutput struct{ *pulumi.OutputState }

func (LookupSecurityStandardResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSecurityStandardResult)(nil)).Elem()
}

func (o LookupSecurityStandardResultOutput) ToLookupSecurityStandardResultOutput() LookupSecurityStandardResultOutput {
	return o
}

func (o LookupSecurityStandardResultOutput) ToLookupSecurityStandardResultOutputWithContext(ctx context.Context) LookupSecurityStandardResultOutput {
	return o
}

// List of assessment keys to apply to standard scope.
func (o LookupSecurityStandardResultOutput) Assessments() PartialAssessmentPropertiesResponseArrayOutput {
	return o.ApplyT(func(v LookupSecurityStandardResult) []PartialAssessmentPropertiesResponse { return v.Assessments }).(PartialAssessmentPropertiesResponseArrayOutput)
}

// List of all standard supported clouds.
func (o LookupSecurityStandardResultOutput) CloudProviders() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupSecurityStandardResult) []string { return v.CloudProviders }).(pulumi.StringArrayOutput)
}

// Description of the standard
func (o LookupSecurityStandardResultOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupSecurityStandardResult) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Display name of the standard, equivalent to the standardId
func (o LookupSecurityStandardResultOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupSecurityStandardResult) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// Resource Id
func (o LookupSecurityStandardResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSecurityStandardResult) string { return v.Id }).(pulumi.StringOutput)
}

// The security standard metadata.
func (o LookupSecurityStandardResultOutput) Metadata() StandardMetadataResponsePtrOutput {
	return o.ApplyT(func(v LookupSecurityStandardResult) *StandardMetadataResponse { return v.Metadata }).(StandardMetadataResponsePtrOutput)
}

// Resource name
func (o LookupSecurityStandardResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSecurityStandardResult) string { return v.Name }).(pulumi.StringOutput)
}

// The policy set definition id associated with the standard.
func (o LookupSecurityStandardResultOutput) PolicySetDefinitionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupSecurityStandardResult) *string { return v.PolicySetDefinitionId }).(pulumi.StringPtrOutput)
}

// Standard type (Custom or Default or Compliance only currently)
func (o LookupSecurityStandardResultOutput) StandardType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSecurityStandardResult) string { return v.StandardType }).(pulumi.StringOutput)
}

// Resource type
func (o LookupSecurityStandardResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSecurityStandardResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupSecurityStandardResultOutput{})
}
