// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20240801

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Attest category of this assignment
type AttestationComplianceState string

const (
	AttestationComplianceStateUnknown      = AttestationComplianceState("unknown")
	AttestationComplianceStateCompliant    = AttestationComplianceState("compliant")
	AttestationComplianceStateNonCompliant = AttestationComplianceState("nonCompliant")
)

func (AttestationComplianceState) ElementType() reflect.Type {
	return reflect.TypeOf((*AttestationComplianceState)(nil)).Elem()
}

func (e AttestationComplianceState) ToAttestationComplianceStateOutput() AttestationComplianceStateOutput {
	return pulumi.ToOutput(e).(AttestationComplianceStateOutput)
}

func (e AttestationComplianceState) ToAttestationComplianceStateOutputWithContext(ctx context.Context) AttestationComplianceStateOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AttestationComplianceStateOutput)
}

func (e AttestationComplianceState) ToAttestationComplianceStatePtrOutput() AttestationComplianceStatePtrOutput {
	return e.ToAttestationComplianceStatePtrOutputWithContext(context.Background())
}

func (e AttestationComplianceState) ToAttestationComplianceStatePtrOutputWithContext(ctx context.Context) AttestationComplianceStatePtrOutput {
	return AttestationComplianceState(e).ToAttestationComplianceStateOutputWithContext(ctx).ToAttestationComplianceStatePtrOutputWithContext(ctx)
}

func (e AttestationComplianceState) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AttestationComplianceState) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AttestationComplianceState) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AttestationComplianceState) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AttestationComplianceStateOutput struct{ *pulumi.OutputState }

func (AttestationComplianceStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AttestationComplianceState)(nil)).Elem()
}

func (o AttestationComplianceStateOutput) ToAttestationComplianceStateOutput() AttestationComplianceStateOutput {
	return o
}

func (o AttestationComplianceStateOutput) ToAttestationComplianceStateOutputWithContext(ctx context.Context) AttestationComplianceStateOutput {
	return o
}

func (o AttestationComplianceStateOutput) ToAttestationComplianceStatePtrOutput() AttestationComplianceStatePtrOutput {
	return o.ToAttestationComplianceStatePtrOutputWithContext(context.Background())
}

func (o AttestationComplianceStateOutput) ToAttestationComplianceStatePtrOutputWithContext(ctx context.Context) AttestationComplianceStatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AttestationComplianceState) *AttestationComplianceState {
		return &v
	}).(AttestationComplianceStatePtrOutput)
}

func (o AttestationComplianceStateOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AttestationComplianceStateOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AttestationComplianceState) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AttestationComplianceStateOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AttestationComplianceStateOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AttestationComplianceState) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AttestationComplianceStatePtrOutput struct{ *pulumi.OutputState }

func (AttestationComplianceStatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AttestationComplianceState)(nil)).Elem()
}

func (o AttestationComplianceStatePtrOutput) ToAttestationComplianceStatePtrOutput() AttestationComplianceStatePtrOutput {
	return o
}

func (o AttestationComplianceStatePtrOutput) ToAttestationComplianceStatePtrOutputWithContext(ctx context.Context) AttestationComplianceStatePtrOutput {
	return o
}

func (o AttestationComplianceStatePtrOutput) Elem() AttestationComplianceStateOutput {
	return o.ApplyT(func(v *AttestationComplianceState) AttestationComplianceState {
		if v != nil {
			return *v
		}
		var ret AttestationComplianceState
		return ret
	}).(AttestationComplianceStateOutput)
}

func (o AttestationComplianceStatePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AttestationComplianceStatePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AttestationComplianceState) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AttestationComplianceStateInput is an input type that accepts values of the AttestationComplianceState enum
// A concrete instance of `AttestationComplianceStateInput` can be one of the following:
//
//	AttestationComplianceStateUnknown
//	AttestationComplianceStateCompliant
//	AttestationComplianceStateNonCompliant
type AttestationComplianceStateInput interface {
	pulumi.Input

	ToAttestationComplianceStateOutput() AttestationComplianceStateOutput
	ToAttestationComplianceStateOutputWithContext(context.Context) AttestationComplianceStateOutput
}

var attestationComplianceStatePtrType = reflect.TypeOf((**AttestationComplianceState)(nil)).Elem()

type AttestationComplianceStatePtrInput interface {
	pulumi.Input

	ToAttestationComplianceStatePtrOutput() AttestationComplianceStatePtrOutput
	ToAttestationComplianceStatePtrOutputWithContext(context.Context) AttestationComplianceStatePtrOutput
}

type attestationComplianceStatePtr string

func AttestationComplianceStatePtr(v string) AttestationComplianceStatePtrInput {
	return (*attestationComplianceStatePtr)(&v)
}

func (*attestationComplianceStatePtr) ElementType() reflect.Type {
	return attestationComplianceStatePtrType
}

func (in *attestationComplianceStatePtr) ToAttestationComplianceStatePtrOutput() AttestationComplianceStatePtrOutput {
	return pulumi.ToOutput(in).(AttestationComplianceStatePtrOutput)
}

func (in *attestationComplianceStatePtr) ToAttestationComplianceStatePtrOutputWithContext(ctx context.Context) AttestationComplianceStatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AttestationComplianceStatePtrOutput)
}

// Expected effect of this assignment (Audit/Exempt/Attest)
type Effect string

const (
	EffectAudit  = Effect("Audit")
	EffectExempt = Effect("Exempt")
	EffectAttest = Effect("Attest")
)

func (Effect) ElementType() reflect.Type {
	return reflect.TypeOf((*Effect)(nil)).Elem()
}

func (e Effect) ToEffectOutput() EffectOutput {
	return pulumi.ToOutput(e).(EffectOutput)
}

func (e Effect) ToEffectOutputWithContext(ctx context.Context) EffectOutput {
	return pulumi.ToOutputWithContext(ctx, e).(EffectOutput)
}

func (e Effect) ToEffectPtrOutput() EffectPtrOutput {
	return e.ToEffectPtrOutputWithContext(context.Background())
}

func (e Effect) ToEffectPtrOutputWithContext(ctx context.Context) EffectPtrOutput {
	return Effect(e).ToEffectOutputWithContext(ctx).ToEffectPtrOutputWithContext(ctx)
}

func (e Effect) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e Effect) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e Effect) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e Effect) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type EffectOutput struct{ *pulumi.OutputState }

func (EffectOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Effect)(nil)).Elem()
}

func (o EffectOutput) ToEffectOutput() EffectOutput {
	return o
}

func (o EffectOutput) ToEffectOutputWithContext(ctx context.Context) EffectOutput {
	return o
}

func (o EffectOutput) ToEffectPtrOutput() EffectPtrOutput {
	return o.ToEffectPtrOutputWithContext(context.Background())
}

func (o EffectOutput) ToEffectPtrOutputWithContext(ctx context.Context) EffectPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Effect) *Effect {
		return &v
	}).(EffectPtrOutput)
}

func (o EffectOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o EffectOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e Effect) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o EffectOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o EffectOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e Effect) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type EffectPtrOutput struct{ *pulumi.OutputState }

func (EffectPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Effect)(nil)).Elem()
}

func (o EffectPtrOutput) ToEffectPtrOutput() EffectPtrOutput {
	return o
}

func (o EffectPtrOutput) ToEffectPtrOutputWithContext(ctx context.Context) EffectPtrOutput {
	return o
}

func (o EffectPtrOutput) Elem() EffectOutput {
	return o.ApplyT(func(v *Effect) Effect {
		if v != nil {
			return *v
		}
		var ret Effect
		return ret
	}).(EffectOutput)
}

func (o EffectPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o EffectPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *Effect) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// EffectInput is an input type that accepts values of the Effect enum
// A concrete instance of `EffectInput` can be one of the following:
//
//	EffectAudit
//	EffectExempt
//	EffectAttest
type EffectInput interface {
	pulumi.Input

	ToEffectOutput() EffectOutput
	ToEffectOutputWithContext(context.Context) EffectOutput
}

var effectPtrType = reflect.TypeOf((**Effect)(nil)).Elem()

type EffectPtrInput interface {
	pulumi.Input

	ToEffectPtrOutput() EffectPtrOutput
	ToEffectPtrOutputWithContext(context.Context) EffectPtrOutput
}

type effectPtr string

func EffectPtr(v string) EffectPtrInput {
	return (*effectPtr)(&v)
}

func (*effectPtr) ElementType() reflect.Type {
	return effectPtrType
}

func (in *effectPtr) ToEffectPtrOutput() EffectPtrOutput {
	return pulumi.ToOutput(in).(EffectPtrOutput)
}

func (in *effectPtr) ToEffectPtrOutputWithContext(ctx context.Context) EffectPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(EffectPtrOutput)
}

// Exemption category of this assignment
type ExemptionCategory string

const (
	ExemptionCategoryWaiver    = ExemptionCategory("waiver")
	ExemptionCategoryMitigated = ExemptionCategory("mitigated")
)

func (ExemptionCategory) ElementType() reflect.Type {
	return reflect.TypeOf((*ExemptionCategory)(nil)).Elem()
}

func (e ExemptionCategory) ToExemptionCategoryOutput() ExemptionCategoryOutput {
	return pulumi.ToOutput(e).(ExemptionCategoryOutput)
}

func (e ExemptionCategory) ToExemptionCategoryOutputWithContext(ctx context.Context) ExemptionCategoryOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ExemptionCategoryOutput)
}

func (e ExemptionCategory) ToExemptionCategoryPtrOutput() ExemptionCategoryPtrOutput {
	return e.ToExemptionCategoryPtrOutputWithContext(context.Background())
}

func (e ExemptionCategory) ToExemptionCategoryPtrOutputWithContext(ctx context.Context) ExemptionCategoryPtrOutput {
	return ExemptionCategory(e).ToExemptionCategoryOutputWithContext(ctx).ToExemptionCategoryPtrOutputWithContext(ctx)
}

func (e ExemptionCategory) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ExemptionCategory) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ExemptionCategory) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ExemptionCategory) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ExemptionCategoryOutput struct{ *pulumi.OutputState }

func (ExemptionCategoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExemptionCategory)(nil)).Elem()
}

func (o ExemptionCategoryOutput) ToExemptionCategoryOutput() ExemptionCategoryOutput {
	return o
}

func (o ExemptionCategoryOutput) ToExemptionCategoryOutputWithContext(ctx context.Context) ExemptionCategoryOutput {
	return o
}

func (o ExemptionCategoryOutput) ToExemptionCategoryPtrOutput() ExemptionCategoryPtrOutput {
	return o.ToExemptionCategoryPtrOutputWithContext(context.Background())
}

func (o ExemptionCategoryOutput) ToExemptionCategoryPtrOutputWithContext(ctx context.Context) ExemptionCategoryPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ExemptionCategory) *ExemptionCategory {
		return &v
	}).(ExemptionCategoryPtrOutput)
}

func (o ExemptionCategoryOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ExemptionCategoryOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ExemptionCategory) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ExemptionCategoryOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ExemptionCategoryOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ExemptionCategory) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ExemptionCategoryPtrOutput struct{ *pulumi.OutputState }

func (ExemptionCategoryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExemptionCategory)(nil)).Elem()
}

func (o ExemptionCategoryPtrOutput) ToExemptionCategoryPtrOutput() ExemptionCategoryPtrOutput {
	return o
}

func (o ExemptionCategoryPtrOutput) ToExemptionCategoryPtrOutputWithContext(ctx context.Context) ExemptionCategoryPtrOutput {
	return o
}

func (o ExemptionCategoryPtrOutput) Elem() ExemptionCategoryOutput {
	return o.ApplyT(func(v *ExemptionCategory) ExemptionCategory {
		if v != nil {
			return *v
		}
		var ret ExemptionCategory
		return ret
	}).(ExemptionCategoryOutput)
}

func (o ExemptionCategoryPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ExemptionCategoryPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ExemptionCategory) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ExemptionCategoryInput is an input type that accepts values of the ExemptionCategory enum
// A concrete instance of `ExemptionCategoryInput` can be one of the following:
//
//	ExemptionCategoryWaiver
//	ExemptionCategoryMitigated
type ExemptionCategoryInput interface {
	pulumi.Input

	ToExemptionCategoryOutput() ExemptionCategoryOutput
	ToExemptionCategoryOutputWithContext(context.Context) ExemptionCategoryOutput
}

var exemptionCategoryPtrType = reflect.TypeOf((**ExemptionCategory)(nil)).Elem()

type ExemptionCategoryPtrInput interface {
	pulumi.Input

	ToExemptionCategoryPtrOutput() ExemptionCategoryPtrOutput
	ToExemptionCategoryPtrOutputWithContext(context.Context) ExemptionCategoryPtrOutput
}

type exemptionCategoryPtr string

func ExemptionCategoryPtr(v string) ExemptionCategoryPtrInput {
	return (*exemptionCategoryPtr)(&v)
}

func (*exemptionCategoryPtr) ElementType() reflect.Type {
	return exemptionCategoryPtrType
}

func (in *exemptionCategoryPtr) ToExemptionCategoryPtrOutput() ExemptionCategoryPtrOutput {
	return pulumi.ToOutput(in).(ExemptionCategoryPtrOutput)
}

func (in *exemptionCategoryPtr) ToExemptionCategoryPtrOutputWithContext(ctx context.Context) ExemptionCategoryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ExemptionCategoryPtrOutput)
}

// The cloud that the recommendation is supported on.
type RecommendationSupportedClouds string

const (
	RecommendationSupportedCloudsAzure = RecommendationSupportedClouds("Azure")
	RecommendationSupportedCloudsAWS   = RecommendationSupportedClouds("AWS")
	RecommendationSupportedCloudsGCP   = RecommendationSupportedClouds("GCP")
)

func (RecommendationSupportedClouds) ElementType() reflect.Type {
	return reflect.TypeOf((*RecommendationSupportedClouds)(nil)).Elem()
}

func (e RecommendationSupportedClouds) ToRecommendationSupportedCloudsOutput() RecommendationSupportedCloudsOutput {
	return pulumi.ToOutput(e).(RecommendationSupportedCloudsOutput)
}

func (e RecommendationSupportedClouds) ToRecommendationSupportedCloudsOutputWithContext(ctx context.Context) RecommendationSupportedCloudsOutput {
	return pulumi.ToOutputWithContext(ctx, e).(RecommendationSupportedCloudsOutput)
}

func (e RecommendationSupportedClouds) ToRecommendationSupportedCloudsPtrOutput() RecommendationSupportedCloudsPtrOutput {
	return e.ToRecommendationSupportedCloudsPtrOutputWithContext(context.Background())
}

func (e RecommendationSupportedClouds) ToRecommendationSupportedCloudsPtrOutputWithContext(ctx context.Context) RecommendationSupportedCloudsPtrOutput {
	return RecommendationSupportedClouds(e).ToRecommendationSupportedCloudsOutputWithContext(ctx).ToRecommendationSupportedCloudsPtrOutputWithContext(ctx)
}

func (e RecommendationSupportedClouds) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e RecommendationSupportedClouds) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e RecommendationSupportedClouds) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e RecommendationSupportedClouds) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type RecommendationSupportedCloudsOutput struct{ *pulumi.OutputState }

func (RecommendationSupportedCloudsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RecommendationSupportedClouds)(nil)).Elem()
}

func (o RecommendationSupportedCloudsOutput) ToRecommendationSupportedCloudsOutput() RecommendationSupportedCloudsOutput {
	return o
}

func (o RecommendationSupportedCloudsOutput) ToRecommendationSupportedCloudsOutputWithContext(ctx context.Context) RecommendationSupportedCloudsOutput {
	return o
}

func (o RecommendationSupportedCloudsOutput) ToRecommendationSupportedCloudsPtrOutput() RecommendationSupportedCloudsPtrOutput {
	return o.ToRecommendationSupportedCloudsPtrOutputWithContext(context.Background())
}

func (o RecommendationSupportedCloudsOutput) ToRecommendationSupportedCloudsPtrOutputWithContext(ctx context.Context) RecommendationSupportedCloudsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RecommendationSupportedClouds) *RecommendationSupportedClouds {
		return &v
	}).(RecommendationSupportedCloudsPtrOutput)
}

func (o RecommendationSupportedCloudsOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o RecommendationSupportedCloudsOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RecommendationSupportedClouds) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o RecommendationSupportedCloudsOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RecommendationSupportedCloudsOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RecommendationSupportedClouds) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type RecommendationSupportedCloudsPtrOutput struct{ *pulumi.OutputState }

func (RecommendationSupportedCloudsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RecommendationSupportedClouds)(nil)).Elem()
}

func (o RecommendationSupportedCloudsPtrOutput) ToRecommendationSupportedCloudsPtrOutput() RecommendationSupportedCloudsPtrOutput {
	return o
}

func (o RecommendationSupportedCloudsPtrOutput) ToRecommendationSupportedCloudsPtrOutputWithContext(ctx context.Context) RecommendationSupportedCloudsPtrOutput {
	return o
}

func (o RecommendationSupportedCloudsPtrOutput) Elem() RecommendationSupportedCloudsOutput {
	return o.ApplyT(func(v *RecommendationSupportedClouds) RecommendationSupportedClouds {
		if v != nil {
			return *v
		}
		var ret RecommendationSupportedClouds
		return ret
	}).(RecommendationSupportedCloudsOutput)
}

func (o RecommendationSupportedCloudsPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RecommendationSupportedCloudsPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *RecommendationSupportedClouds) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// RecommendationSupportedCloudsInput is an input type that accepts values of the RecommendationSupportedClouds enum
// A concrete instance of `RecommendationSupportedCloudsInput` can be one of the following:
//
//	RecommendationSupportedCloudsAzure
//	RecommendationSupportedCloudsAWS
//	RecommendationSupportedCloudsGCP
type RecommendationSupportedCloudsInput interface {
	pulumi.Input

	ToRecommendationSupportedCloudsOutput() RecommendationSupportedCloudsOutput
	ToRecommendationSupportedCloudsOutputWithContext(context.Context) RecommendationSupportedCloudsOutput
}

var recommendationSupportedCloudsPtrType = reflect.TypeOf((**RecommendationSupportedClouds)(nil)).Elem()

type RecommendationSupportedCloudsPtrInput interface {
	pulumi.Input

	ToRecommendationSupportedCloudsPtrOutput() RecommendationSupportedCloudsPtrOutput
	ToRecommendationSupportedCloudsPtrOutputWithContext(context.Context) RecommendationSupportedCloudsPtrOutput
}

type recommendationSupportedCloudsPtr string

func RecommendationSupportedCloudsPtr(v string) RecommendationSupportedCloudsPtrInput {
	return (*recommendationSupportedCloudsPtr)(&v)
}

func (*recommendationSupportedCloudsPtr) ElementType() reflect.Type {
	return recommendationSupportedCloudsPtrType
}

func (in *recommendationSupportedCloudsPtr) ToRecommendationSupportedCloudsPtrOutput() RecommendationSupportedCloudsPtrOutput {
	return pulumi.ToOutput(in).(RecommendationSupportedCloudsPtrOutput)
}

func (in *recommendationSupportedCloudsPtr) ToRecommendationSupportedCloudsPtrOutputWithContext(ctx context.Context) RecommendationSupportedCloudsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(RecommendationSupportedCloudsPtrOutput)
}

// The severity to relate to the assessments generated by this Recommendation.
type SecurityIssue string

const (
	SecurityIssueVulnerability        = SecurityIssue("Vulnerability")
	SecurityIssueExcessivePermissions = SecurityIssue("ExcessivePermissions")
	SecurityIssueAnonymousAccess      = SecurityIssue("AnonymousAccess")
	SecurityIssueNetworkExposure      = SecurityIssue("NetworkExposure")
	SecurityIssueTrafficEncryption    = SecurityIssue("TrafficEncryption")
	SecurityIssueBestPractices        = SecurityIssue("BestPractices")
)

func (SecurityIssue) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityIssue)(nil)).Elem()
}

func (e SecurityIssue) ToSecurityIssueOutput() SecurityIssueOutput {
	return pulumi.ToOutput(e).(SecurityIssueOutput)
}

func (e SecurityIssue) ToSecurityIssueOutputWithContext(ctx context.Context) SecurityIssueOutput {
	return pulumi.ToOutputWithContext(ctx, e).(SecurityIssueOutput)
}

func (e SecurityIssue) ToSecurityIssuePtrOutput() SecurityIssuePtrOutput {
	return e.ToSecurityIssuePtrOutputWithContext(context.Background())
}

func (e SecurityIssue) ToSecurityIssuePtrOutputWithContext(ctx context.Context) SecurityIssuePtrOutput {
	return SecurityIssue(e).ToSecurityIssueOutputWithContext(ctx).ToSecurityIssuePtrOutputWithContext(ctx)
}

func (e SecurityIssue) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e SecurityIssue) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e SecurityIssue) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e SecurityIssue) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type SecurityIssueOutput struct{ *pulumi.OutputState }

func (SecurityIssueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityIssue)(nil)).Elem()
}

func (o SecurityIssueOutput) ToSecurityIssueOutput() SecurityIssueOutput {
	return o
}

func (o SecurityIssueOutput) ToSecurityIssueOutputWithContext(ctx context.Context) SecurityIssueOutput {
	return o
}

func (o SecurityIssueOutput) ToSecurityIssuePtrOutput() SecurityIssuePtrOutput {
	return o.ToSecurityIssuePtrOutputWithContext(context.Background())
}

func (o SecurityIssueOutput) ToSecurityIssuePtrOutputWithContext(ctx context.Context) SecurityIssuePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecurityIssue) *SecurityIssue {
		return &v
	}).(SecurityIssuePtrOutput)
}

func (o SecurityIssueOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o SecurityIssueOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SecurityIssue) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o SecurityIssueOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SecurityIssueOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SecurityIssue) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type SecurityIssuePtrOutput struct{ *pulumi.OutputState }

func (SecurityIssuePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecurityIssue)(nil)).Elem()
}

func (o SecurityIssuePtrOutput) ToSecurityIssuePtrOutput() SecurityIssuePtrOutput {
	return o
}

func (o SecurityIssuePtrOutput) ToSecurityIssuePtrOutputWithContext(ctx context.Context) SecurityIssuePtrOutput {
	return o
}

func (o SecurityIssuePtrOutput) Elem() SecurityIssueOutput {
	return o.ApplyT(func(v *SecurityIssue) SecurityIssue {
		if v != nil {
			return *v
		}
		var ret SecurityIssue
		return ret
	}).(SecurityIssueOutput)
}

func (o SecurityIssuePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SecurityIssuePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *SecurityIssue) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// SecurityIssueInput is an input type that accepts values of the SecurityIssue enum
// A concrete instance of `SecurityIssueInput` can be one of the following:
//
//	SecurityIssueVulnerability
//	SecurityIssueExcessivePermissions
//	SecurityIssueAnonymousAccess
//	SecurityIssueNetworkExposure
//	SecurityIssueTrafficEncryption
//	SecurityIssueBestPractices
type SecurityIssueInput interface {
	pulumi.Input

	ToSecurityIssueOutput() SecurityIssueOutput
	ToSecurityIssueOutputWithContext(context.Context) SecurityIssueOutput
}

var securityIssuePtrType = reflect.TypeOf((**SecurityIssue)(nil)).Elem()

type SecurityIssuePtrInput interface {
	pulumi.Input

	ToSecurityIssuePtrOutput() SecurityIssuePtrOutput
	ToSecurityIssuePtrOutputWithContext(context.Context) SecurityIssuePtrOutput
}

type securityIssuePtr string

func SecurityIssuePtr(v string) SecurityIssuePtrInput {
	return (*securityIssuePtr)(&v)
}

func (*securityIssuePtr) ElementType() reflect.Type {
	return securityIssuePtrType
}

func (in *securityIssuePtr) ToSecurityIssuePtrOutput() SecurityIssuePtrOutput {
	return pulumi.ToOutput(in).(SecurityIssuePtrOutput)
}

func (in *securityIssuePtr) ToSecurityIssuePtrOutputWithContext(ctx context.Context) SecurityIssuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(SecurityIssuePtrOutput)
}

// The severity to relate to the assessments generated by this Recommendation.
type SeverityEnum string

const (
	SeverityEnumHigh   = SeverityEnum("High")
	SeverityEnumMedium = SeverityEnum("Medium")
	SeverityEnumLow    = SeverityEnum("Low")
)

func (SeverityEnum) ElementType() reflect.Type {
	return reflect.TypeOf((*SeverityEnum)(nil)).Elem()
}

func (e SeverityEnum) ToSeverityEnumOutput() SeverityEnumOutput {
	return pulumi.ToOutput(e).(SeverityEnumOutput)
}

func (e SeverityEnum) ToSeverityEnumOutputWithContext(ctx context.Context) SeverityEnumOutput {
	return pulumi.ToOutputWithContext(ctx, e).(SeverityEnumOutput)
}

func (e SeverityEnum) ToSeverityEnumPtrOutput() SeverityEnumPtrOutput {
	return e.ToSeverityEnumPtrOutputWithContext(context.Background())
}

func (e SeverityEnum) ToSeverityEnumPtrOutputWithContext(ctx context.Context) SeverityEnumPtrOutput {
	return SeverityEnum(e).ToSeverityEnumOutputWithContext(ctx).ToSeverityEnumPtrOutputWithContext(ctx)
}

func (e SeverityEnum) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e SeverityEnum) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e SeverityEnum) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e SeverityEnum) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type SeverityEnumOutput struct{ *pulumi.OutputState }

func (SeverityEnumOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SeverityEnum)(nil)).Elem()
}

func (o SeverityEnumOutput) ToSeverityEnumOutput() SeverityEnumOutput {
	return o
}

func (o SeverityEnumOutput) ToSeverityEnumOutputWithContext(ctx context.Context) SeverityEnumOutput {
	return o
}

func (o SeverityEnumOutput) ToSeverityEnumPtrOutput() SeverityEnumPtrOutput {
	return o.ToSeverityEnumPtrOutputWithContext(context.Background())
}

func (o SeverityEnumOutput) ToSeverityEnumPtrOutputWithContext(ctx context.Context) SeverityEnumPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SeverityEnum) *SeverityEnum {
		return &v
	}).(SeverityEnumPtrOutput)
}

func (o SeverityEnumOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o SeverityEnumOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SeverityEnum) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o SeverityEnumOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SeverityEnumOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SeverityEnum) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type SeverityEnumPtrOutput struct{ *pulumi.OutputState }

func (SeverityEnumPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SeverityEnum)(nil)).Elem()
}

func (o SeverityEnumPtrOutput) ToSeverityEnumPtrOutput() SeverityEnumPtrOutput {
	return o
}

func (o SeverityEnumPtrOutput) ToSeverityEnumPtrOutputWithContext(ctx context.Context) SeverityEnumPtrOutput {
	return o
}

func (o SeverityEnumPtrOutput) Elem() SeverityEnumOutput {
	return o.ApplyT(func(v *SeverityEnum) SeverityEnum {
		if v != nil {
			return *v
		}
		var ret SeverityEnum
		return ret
	}).(SeverityEnumOutput)
}

func (o SeverityEnumPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SeverityEnumPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *SeverityEnum) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// SeverityEnumInput is an input type that accepts values of the SeverityEnum enum
// A concrete instance of `SeverityEnumInput` can be one of the following:
//
//	SeverityEnumHigh
//	SeverityEnumMedium
//	SeverityEnumLow
type SeverityEnumInput interface {
	pulumi.Input

	ToSeverityEnumOutput() SeverityEnumOutput
	ToSeverityEnumOutputWithContext(context.Context) SeverityEnumOutput
}

var severityEnumPtrType = reflect.TypeOf((**SeverityEnum)(nil)).Elem()

type SeverityEnumPtrInput interface {
	pulumi.Input

	ToSeverityEnumPtrOutput() SeverityEnumPtrOutput
	ToSeverityEnumPtrOutputWithContext(context.Context) SeverityEnumPtrOutput
}

type severityEnumPtr string

func SeverityEnumPtr(v string) SeverityEnumPtrInput {
	return (*severityEnumPtr)(&v)
}

func (*severityEnumPtr) ElementType() reflect.Type {
	return severityEnumPtrType
}

func (in *severityEnumPtr) ToSeverityEnumPtrOutput() SeverityEnumPtrOutput {
	return pulumi.ToOutput(in).(SeverityEnumPtrOutput)
}

func (in *severityEnumPtr) ToSeverityEnumPtrOutputWithContext(ctx context.Context) SeverityEnumPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(SeverityEnumPtrOutput)
}

// The cloud that the standard is supported on.
type StandardSupportedCloud string

const (
	StandardSupportedCloudAzure = StandardSupportedCloud("Azure")
	StandardSupportedCloudAWS   = StandardSupportedCloud("AWS")
	StandardSupportedCloudGCP   = StandardSupportedCloud("GCP")
)

func (StandardSupportedCloud) ElementType() reflect.Type {
	return reflect.TypeOf((*StandardSupportedCloud)(nil)).Elem()
}

func (e StandardSupportedCloud) ToStandardSupportedCloudOutput() StandardSupportedCloudOutput {
	return pulumi.ToOutput(e).(StandardSupportedCloudOutput)
}

func (e StandardSupportedCloud) ToStandardSupportedCloudOutputWithContext(ctx context.Context) StandardSupportedCloudOutput {
	return pulumi.ToOutputWithContext(ctx, e).(StandardSupportedCloudOutput)
}

func (e StandardSupportedCloud) ToStandardSupportedCloudPtrOutput() StandardSupportedCloudPtrOutput {
	return e.ToStandardSupportedCloudPtrOutputWithContext(context.Background())
}

func (e StandardSupportedCloud) ToStandardSupportedCloudPtrOutputWithContext(ctx context.Context) StandardSupportedCloudPtrOutput {
	return StandardSupportedCloud(e).ToStandardSupportedCloudOutputWithContext(ctx).ToStandardSupportedCloudPtrOutputWithContext(ctx)
}

func (e StandardSupportedCloud) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e StandardSupportedCloud) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e StandardSupportedCloud) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e StandardSupportedCloud) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type StandardSupportedCloudOutput struct{ *pulumi.OutputState }

func (StandardSupportedCloudOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StandardSupportedCloud)(nil)).Elem()
}

func (o StandardSupportedCloudOutput) ToStandardSupportedCloudOutput() StandardSupportedCloudOutput {
	return o
}

func (o StandardSupportedCloudOutput) ToStandardSupportedCloudOutputWithContext(ctx context.Context) StandardSupportedCloudOutput {
	return o
}

func (o StandardSupportedCloudOutput) ToStandardSupportedCloudPtrOutput() StandardSupportedCloudPtrOutput {
	return o.ToStandardSupportedCloudPtrOutputWithContext(context.Background())
}

func (o StandardSupportedCloudOutput) ToStandardSupportedCloudPtrOutputWithContext(ctx context.Context) StandardSupportedCloudPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v StandardSupportedCloud) *StandardSupportedCloud {
		return &v
	}).(StandardSupportedCloudPtrOutput)
}

func (o StandardSupportedCloudOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o StandardSupportedCloudOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e StandardSupportedCloud) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o StandardSupportedCloudOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o StandardSupportedCloudOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e StandardSupportedCloud) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type StandardSupportedCloudPtrOutput struct{ *pulumi.OutputState }

func (StandardSupportedCloudPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StandardSupportedCloud)(nil)).Elem()
}

func (o StandardSupportedCloudPtrOutput) ToStandardSupportedCloudPtrOutput() StandardSupportedCloudPtrOutput {
	return o
}

func (o StandardSupportedCloudPtrOutput) ToStandardSupportedCloudPtrOutputWithContext(ctx context.Context) StandardSupportedCloudPtrOutput {
	return o
}

func (o StandardSupportedCloudPtrOutput) Elem() StandardSupportedCloudOutput {
	return o.ApplyT(func(v *StandardSupportedCloud) StandardSupportedCloud {
		if v != nil {
			return *v
		}
		var ret StandardSupportedCloud
		return ret
	}).(StandardSupportedCloudOutput)
}

func (o StandardSupportedCloudPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o StandardSupportedCloudPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *StandardSupportedCloud) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// StandardSupportedCloudInput is an input type that accepts values of the StandardSupportedCloud enum
// A concrete instance of `StandardSupportedCloudInput` can be one of the following:
//
//	StandardSupportedCloudAzure
//	StandardSupportedCloudAWS
//	StandardSupportedCloudGCP
type StandardSupportedCloudInput interface {
	pulumi.Input

	ToStandardSupportedCloudOutput() StandardSupportedCloudOutput
	ToStandardSupportedCloudOutputWithContext(context.Context) StandardSupportedCloudOutput
}

var standardSupportedCloudPtrType = reflect.TypeOf((**StandardSupportedCloud)(nil)).Elem()

type StandardSupportedCloudPtrInput interface {
	pulumi.Input

	ToStandardSupportedCloudPtrOutput() StandardSupportedCloudPtrOutput
	ToStandardSupportedCloudPtrOutputWithContext(context.Context) StandardSupportedCloudPtrOutput
}

type standardSupportedCloudPtr string

func StandardSupportedCloudPtr(v string) StandardSupportedCloudPtrInput {
	return (*standardSupportedCloudPtr)(&v)
}

func (*standardSupportedCloudPtr) ElementType() reflect.Type {
	return standardSupportedCloudPtrType
}

func (in *standardSupportedCloudPtr) ToStandardSupportedCloudPtrOutput() StandardSupportedCloudPtrOutput {
	return pulumi.ToOutput(in).(StandardSupportedCloudPtrOutput)
}

func (in *standardSupportedCloudPtr) ToStandardSupportedCloudPtrOutputWithContext(ctx context.Context) StandardSupportedCloudPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(StandardSupportedCloudPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(AttestationComplianceStateOutput{})
	pulumi.RegisterOutputType(AttestationComplianceStatePtrOutput{})
	pulumi.RegisterOutputType(EffectOutput{})
	pulumi.RegisterOutputType(EffectPtrOutput{})
	pulumi.RegisterOutputType(ExemptionCategoryOutput{})
	pulumi.RegisterOutputType(ExemptionCategoryPtrOutput{})
	pulumi.RegisterOutputType(RecommendationSupportedCloudsOutput{})
	pulumi.RegisterOutputType(RecommendationSupportedCloudsPtrOutput{})
	pulumi.RegisterOutputType(SecurityIssueOutput{})
	pulumi.RegisterOutputType(SecurityIssuePtrOutput{})
	pulumi.RegisterOutputType(SeverityEnumOutput{})
	pulumi.RegisterOutputType(SeverityEnumPtrOutput{})
	pulumi.RegisterOutputType(StandardSupportedCloudOutput{})
	pulumi.RegisterOutputType(StandardSupportedCloudPtrOutput{})
}
