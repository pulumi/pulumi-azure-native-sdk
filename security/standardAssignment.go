// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package security

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure-native-sdk/v3/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Security Assignment on a resource group over a given scope
//
// Uses Azure REST API version 2024-08-01. In version 2.x of the Azure Native provider, it used API version 2024-08-01.
type StandardAssignment struct {
	pulumi.CustomResourceState

	// Standard item with key as applied to this standard assignment over the given scope
	AssignedStandard AssignedStandardItemResponsePtrOutput `pulumi:"assignedStandard"`
	// Additional data about assignment that has Attest effect
	AttestationData StandardAssignmentPropertiesResponseAttestationDataPtrOutput `pulumi:"attestationData"`
	// The Azure API version of the resource.
	AzureApiVersion pulumi.StringOutput `pulumi:"azureApiVersion"`
	// Description of the standardAssignment
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Display name of the standardAssignment
	DisplayName pulumi.StringPtrOutput `pulumi:"displayName"`
	// Expected effect of this assignment (Audit/Exempt/Attest)
	Effect pulumi.StringPtrOutput `pulumi:"effect"`
	// Excluded scopes, filter out the descendants of the scope (on management scopes)
	ExcludedScopes pulumi.StringArrayOutput `pulumi:"excludedScopes"`
	// Additional data about assignment that has Exempt effect
	ExemptionData StandardAssignmentPropertiesResponseExemptionDataPtrOutput `pulumi:"exemptionData"`
	// Expiration date of this assignment as a full ISO date
	ExpiresOn pulumi.StringPtrOutput `pulumi:"expiresOn"`
	// The standard assignment metadata.
	Metadata StandardAssignmentMetadataResponsePtrOutput `pulumi:"metadata"`
	// Resource name
	Name pulumi.StringOutput `pulumi:"name"`
	// Resource type
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewStandardAssignment registers a new resource with the given unique name, arguments, and options.
func NewStandardAssignment(ctx *pulumi.Context,
	name string, args *StandardAssignmentArgs, opts ...pulumi.ResourceOption) (*StandardAssignment, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ResourceId == nil {
		return nil, errors.New("invalid value for required argument 'ResourceId'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:security/v20240801:StandardAssignment"),
		},
	})
	opts = append(opts, aliases)
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource StandardAssignment
	err := ctx.RegisterResource("azure-native:security:StandardAssignment", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetStandardAssignment gets an existing StandardAssignment resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetStandardAssignment(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *StandardAssignmentState, opts ...pulumi.ResourceOption) (*StandardAssignment, error) {
	var resource StandardAssignment
	err := ctx.ReadResource("azure-native:security:StandardAssignment", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering StandardAssignment resources.
type standardAssignmentState struct {
}

type StandardAssignmentState struct {
}

func (StandardAssignmentState) ElementType() reflect.Type {
	return reflect.TypeOf((*standardAssignmentState)(nil)).Elem()
}

type standardAssignmentArgs struct {
	// Standard item with key as applied to this standard assignment over the given scope
	AssignedStandard *AssignedStandardItem `pulumi:"assignedStandard"`
	// Additional data about assignment that has Attest effect
	AttestationData *StandardAssignmentPropertiesAttestationData `pulumi:"attestationData"`
	// Description of the standardAssignment
	Description *string `pulumi:"description"`
	// Display name of the standardAssignment
	DisplayName *string `pulumi:"displayName"`
	// Expected effect of this assignment (Audit/Exempt/Attest)
	Effect *string `pulumi:"effect"`
	// Excluded scopes, filter out the descendants of the scope (on management scopes)
	ExcludedScopes []string `pulumi:"excludedScopes"`
	// Additional data about assignment that has Exempt effect
	ExemptionData *StandardAssignmentPropertiesExemptionData `pulumi:"exemptionData"`
	// Expiration date of this assignment as a full ISO date
	ExpiresOn *string `pulumi:"expiresOn"`
	// The identifier of the resource.
	ResourceId string `pulumi:"resourceId"`
	// The standard assignments assignment key - unique key for the standard assignment
	StandardAssignmentName *string `pulumi:"standardAssignmentName"`
}

// The set of arguments for constructing a StandardAssignment resource.
type StandardAssignmentArgs struct {
	// Standard item with key as applied to this standard assignment over the given scope
	AssignedStandard AssignedStandardItemPtrInput
	// Additional data about assignment that has Attest effect
	AttestationData StandardAssignmentPropertiesAttestationDataPtrInput
	// Description of the standardAssignment
	Description pulumi.StringPtrInput
	// Display name of the standardAssignment
	DisplayName pulumi.StringPtrInput
	// Expected effect of this assignment (Audit/Exempt/Attest)
	Effect pulumi.StringPtrInput
	// Excluded scopes, filter out the descendants of the scope (on management scopes)
	ExcludedScopes pulumi.StringArrayInput
	// Additional data about assignment that has Exempt effect
	ExemptionData StandardAssignmentPropertiesExemptionDataPtrInput
	// Expiration date of this assignment as a full ISO date
	ExpiresOn pulumi.StringPtrInput
	// The identifier of the resource.
	ResourceId pulumi.StringInput
	// The standard assignments assignment key - unique key for the standard assignment
	StandardAssignmentName pulumi.StringPtrInput
}

func (StandardAssignmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*standardAssignmentArgs)(nil)).Elem()
}

type StandardAssignmentInput interface {
	pulumi.Input

	ToStandardAssignmentOutput() StandardAssignmentOutput
	ToStandardAssignmentOutputWithContext(ctx context.Context) StandardAssignmentOutput
}

func (*StandardAssignment) ElementType() reflect.Type {
	return reflect.TypeOf((**StandardAssignment)(nil)).Elem()
}

func (i *StandardAssignment) ToStandardAssignmentOutput() StandardAssignmentOutput {
	return i.ToStandardAssignmentOutputWithContext(context.Background())
}

func (i *StandardAssignment) ToStandardAssignmentOutputWithContext(ctx context.Context) StandardAssignmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StandardAssignmentOutput)
}

type StandardAssignmentOutput struct{ *pulumi.OutputState }

func (StandardAssignmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StandardAssignment)(nil)).Elem()
}

func (o StandardAssignmentOutput) ToStandardAssignmentOutput() StandardAssignmentOutput {
	return o
}

func (o StandardAssignmentOutput) ToStandardAssignmentOutputWithContext(ctx context.Context) StandardAssignmentOutput {
	return o
}

// Standard item with key as applied to this standard assignment over the given scope
func (o StandardAssignmentOutput) AssignedStandard() AssignedStandardItemResponsePtrOutput {
	return o.ApplyT(func(v *StandardAssignment) AssignedStandardItemResponsePtrOutput { return v.AssignedStandard }).(AssignedStandardItemResponsePtrOutput)
}

// Additional data about assignment that has Attest effect
func (o StandardAssignmentOutput) AttestationData() StandardAssignmentPropertiesResponseAttestationDataPtrOutput {
	return o.ApplyT(func(v *StandardAssignment) StandardAssignmentPropertiesResponseAttestationDataPtrOutput {
		return v.AttestationData
	}).(StandardAssignmentPropertiesResponseAttestationDataPtrOutput)
}

// The Azure API version of the resource.
func (o StandardAssignmentOutput) AzureApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *StandardAssignment) pulumi.StringOutput { return v.AzureApiVersion }).(pulumi.StringOutput)
}

// Description of the standardAssignment
func (o StandardAssignmentOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StandardAssignment) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Display name of the standardAssignment
func (o StandardAssignmentOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StandardAssignment) pulumi.StringPtrOutput { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// Expected effect of this assignment (Audit/Exempt/Attest)
func (o StandardAssignmentOutput) Effect() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StandardAssignment) pulumi.StringPtrOutput { return v.Effect }).(pulumi.StringPtrOutput)
}

// Excluded scopes, filter out the descendants of the scope (on management scopes)
func (o StandardAssignmentOutput) ExcludedScopes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *StandardAssignment) pulumi.StringArrayOutput { return v.ExcludedScopes }).(pulumi.StringArrayOutput)
}

// Additional data about assignment that has Exempt effect
func (o StandardAssignmentOutput) ExemptionData() StandardAssignmentPropertiesResponseExemptionDataPtrOutput {
	return o.ApplyT(func(v *StandardAssignment) StandardAssignmentPropertiesResponseExemptionDataPtrOutput {
		return v.ExemptionData
	}).(StandardAssignmentPropertiesResponseExemptionDataPtrOutput)
}

// Expiration date of this assignment as a full ISO date
func (o StandardAssignmentOutput) ExpiresOn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StandardAssignment) pulumi.StringPtrOutput { return v.ExpiresOn }).(pulumi.StringPtrOutput)
}

// The standard assignment metadata.
func (o StandardAssignmentOutput) Metadata() StandardAssignmentMetadataResponsePtrOutput {
	return o.ApplyT(func(v *StandardAssignment) StandardAssignmentMetadataResponsePtrOutput { return v.Metadata }).(StandardAssignmentMetadataResponsePtrOutput)
}

// Resource name
func (o StandardAssignmentOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *StandardAssignment) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Resource type
func (o StandardAssignmentOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *StandardAssignment) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(StandardAssignmentOutput{})
}
