// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package appcomplianceautomation

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Get the evidence metadata
// Azure REST API version: 2024-06-27.
func LookupEvidence(ctx *pulumi.Context, args *LookupEvidenceArgs, opts ...pulumi.InvokeOption) (*LookupEvidenceResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv LookupEvidenceResult
	err := ctx.Invoke("azure-native:appcomplianceautomation:getEvidence", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupEvidenceArgs struct {
	// The evidence name.
	EvidenceName string `pulumi:"evidenceName"`
	// Report Name.
	ReportName string `pulumi:"reportName"`
}

// A class represent an AppComplianceAutomation evidence resource.
type LookupEvidenceResult struct {
	// Control id.
	ControlId *string `pulumi:"controlId"`
	// Evidence type.
	EvidenceType *string `pulumi:"evidenceType"`
	// Extra data considered as evidence.
	ExtraData *string `pulumi:"extraData"`
	// The path of the file in storage.
	FilePath string `pulumi:"filePath"`
	// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	Id string `pulumi:"id"`
	// The name of the resource
	Name string `pulumi:"name"`
	// Azure lifecycle management
	ProvisioningState string `pulumi:"provisioningState"`
	// Responsibility id.
	ResponsibilityId *string `pulumi:"responsibilityId"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponse `pulumi:"systemData"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type string `pulumi:"type"`
}

func LookupEvidenceOutput(ctx *pulumi.Context, args LookupEvidenceOutputArgs, opts ...pulumi.InvokeOption) LookupEvidenceResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupEvidenceResultOutput, error) {
			args := v.(LookupEvidenceArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: utilities.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("azure-native:appcomplianceautomation:getEvidence", args, LookupEvidenceResultOutput{}, options).(LookupEvidenceResultOutput), nil
		}).(LookupEvidenceResultOutput)
}

type LookupEvidenceOutputArgs struct {
	// The evidence name.
	EvidenceName pulumi.StringInput `pulumi:"evidenceName"`
	// Report Name.
	ReportName pulumi.StringInput `pulumi:"reportName"`
}

func (LookupEvidenceOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupEvidenceArgs)(nil)).Elem()
}

// A class represent an AppComplianceAutomation evidence resource.
type LookupEvidenceResultOutput struct{ *pulumi.OutputState }

func (LookupEvidenceResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupEvidenceResult)(nil)).Elem()
}

func (o LookupEvidenceResultOutput) ToLookupEvidenceResultOutput() LookupEvidenceResultOutput {
	return o
}

func (o LookupEvidenceResultOutput) ToLookupEvidenceResultOutputWithContext(ctx context.Context) LookupEvidenceResultOutput {
	return o
}

// Control id.
func (o LookupEvidenceResultOutput) ControlId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupEvidenceResult) *string { return v.ControlId }).(pulumi.StringPtrOutput)
}

// Evidence type.
func (o LookupEvidenceResultOutput) EvidenceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupEvidenceResult) *string { return v.EvidenceType }).(pulumi.StringPtrOutput)
}

// Extra data considered as evidence.
func (o LookupEvidenceResultOutput) ExtraData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupEvidenceResult) *string { return v.ExtraData }).(pulumi.StringPtrOutput)
}

// The path of the file in storage.
func (o LookupEvidenceResultOutput) FilePath() pulumi.StringOutput {
	return o.ApplyT(func(v LookupEvidenceResult) string { return v.FilePath }).(pulumi.StringOutput)
}

// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
func (o LookupEvidenceResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupEvidenceResult) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the resource
func (o LookupEvidenceResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupEvidenceResult) string { return v.Name }).(pulumi.StringOutput)
}

// Azure lifecycle management
func (o LookupEvidenceResultOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v LookupEvidenceResult) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Responsibility id.
func (o LookupEvidenceResultOutput) ResponsibilityId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupEvidenceResult) *string { return v.ResponsibilityId }).(pulumi.StringPtrOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o LookupEvidenceResultOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v LookupEvidenceResult) SystemDataResponse { return v.SystemData }).(SystemDataResponseOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o LookupEvidenceResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupEvidenceResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupEvidenceResultOutput{})
}
