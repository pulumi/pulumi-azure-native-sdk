// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package appcomplianceautomation

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Get the AppComplianceAutomation scoping configuration of the specific report.
//
// Uses Azure REST API version 2024-06-27.
func LookupScopingConfiguration(ctx *pulumi.Context, args *LookupScopingConfigurationArgs, opts ...pulumi.InvokeOption) (*LookupScopingConfigurationResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv LookupScopingConfigurationResult
	err := ctx.Invoke("azure-native:appcomplianceautomation:getScopingConfiguration", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupScopingConfigurationArgs struct {
	// Report Name.
	ReportName string `pulumi:"reportName"`
	// The scoping configuration of the specific report.
	ScopingConfigurationName string `pulumi:"scopingConfigurationName"`
}

// A class represent an AppComplianceAutomation scoping configuration resource.
type LookupScopingConfigurationResult struct {
	// List of scoping question answers.
	Answers []ScopingAnswerResponse `pulumi:"answers"`
	// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	Id string `pulumi:"id"`
	// The name of the resource
	Name string `pulumi:"name"`
	// Azure lifecycle management
	ProvisioningState string `pulumi:"provisioningState"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponse `pulumi:"systemData"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type string `pulumi:"type"`
}

func LookupScopingConfigurationOutput(ctx *pulumi.Context, args LookupScopingConfigurationOutputArgs, opts ...pulumi.InvokeOption) LookupScopingConfigurationResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupScopingConfigurationResultOutput, error) {
			args := v.(LookupScopingConfigurationArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: utilities.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("azure-native:appcomplianceautomation:getScopingConfiguration", args, LookupScopingConfigurationResultOutput{}, options).(LookupScopingConfigurationResultOutput), nil
		}).(LookupScopingConfigurationResultOutput)
}

type LookupScopingConfigurationOutputArgs struct {
	// Report Name.
	ReportName pulumi.StringInput `pulumi:"reportName"`
	// The scoping configuration of the specific report.
	ScopingConfigurationName pulumi.StringInput `pulumi:"scopingConfigurationName"`
}

func (LookupScopingConfigurationOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupScopingConfigurationArgs)(nil)).Elem()
}

// A class represent an AppComplianceAutomation scoping configuration resource.
type LookupScopingConfigurationResultOutput struct{ *pulumi.OutputState }

func (LookupScopingConfigurationResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupScopingConfigurationResult)(nil)).Elem()
}

func (o LookupScopingConfigurationResultOutput) ToLookupScopingConfigurationResultOutput() LookupScopingConfigurationResultOutput {
	return o
}

func (o LookupScopingConfigurationResultOutput) ToLookupScopingConfigurationResultOutputWithContext(ctx context.Context) LookupScopingConfigurationResultOutput {
	return o
}

// List of scoping question answers.
func (o LookupScopingConfigurationResultOutput) Answers() ScopingAnswerResponseArrayOutput {
	return o.ApplyT(func(v LookupScopingConfigurationResult) []ScopingAnswerResponse { return v.Answers }).(ScopingAnswerResponseArrayOutput)
}

// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
func (o LookupScopingConfigurationResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupScopingConfigurationResult) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the resource
func (o LookupScopingConfigurationResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupScopingConfigurationResult) string { return v.Name }).(pulumi.StringOutput)
}

// Azure lifecycle management
func (o LookupScopingConfigurationResultOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v LookupScopingConfigurationResult) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o LookupScopingConfigurationResultOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v LookupScopingConfigurationResult) SystemDataResponse { return v.SystemData }).(SystemDataResponseOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o LookupScopingConfigurationResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupScopingConfigurationResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupScopingConfigurationResultOutput{})
}
