// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package appcomplianceautomation

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// content type
type ContentType string

const (
	// The content type is application/json.
	ContentTypeApplicationJson = ContentType("application/json")
)

func (ContentType) ElementType() reflect.Type {
	return reflect.TypeOf((*ContentType)(nil)).Elem()
}

func (e ContentType) ToContentTypeOutput() ContentTypeOutput {
	return pulumi.ToOutput(e).(ContentTypeOutput)
}

func (e ContentType) ToContentTypeOutputWithContext(ctx context.Context) ContentTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ContentTypeOutput)
}

func (e ContentType) ToContentTypePtrOutput() ContentTypePtrOutput {
	return e.ToContentTypePtrOutputWithContext(context.Background())
}

func (e ContentType) ToContentTypePtrOutputWithContext(ctx context.Context) ContentTypePtrOutput {
	return ContentType(e).ToContentTypeOutputWithContext(ctx).ToContentTypePtrOutputWithContext(ctx)
}

func (e ContentType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ContentType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ContentType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ContentType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ContentTypeOutput struct{ *pulumi.OutputState }

func (ContentTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContentType)(nil)).Elem()
}

func (o ContentTypeOutput) ToContentTypeOutput() ContentTypeOutput {
	return o
}

func (o ContentTypeOutput) ToContentTypeOutputWithContext(ctx context.Context) ContentTypeOutput {
	return o
}

func (o ContentTypeOutput) ToContentTypePtrOutput() ContentTypePtrOutput {
	return o.ToContentTypePtrOutputWithContext(context.Background())
}

func (o ContentTypeOutput) ToContentTypePtrOutputWithContext(ctx context.Context) ContentTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ContentType) *ContentType {
		return &v
	}).(ContentTypePtrOutput)
}

func (o ContentTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ContentTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ContentType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ContentTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ContentTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ContentType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ContentTypePtrOutput struct{ *pulumi.OutputState }

func (ContentTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ContentType)(nil)).Elem()
}

func (o ContentTypePtrOutput) ToContentTypePtrOutput() ContentTypePtrOutput {
	return o
}

func (o ContentTypePtrOutput) ToContentTypePtrOutputWithContext(ctx context.Context) ContentTypePtrOutput {
	return o
}

func (o ContentTypePtrOutput) Elem() ContentTypeOutput {
	return o.ApplyT(func(v *ContentType) ContentType {
		if v != nil {
			return *v
		}
		var ret ContentType
		return ret
	}).(ContentTypeOutput)
}

func (o ContentTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ContentTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ContentType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ContentTypeInput is an input type that accepts values of the ContentType enum
// A concrete instance of `ContentTypeInput` can be one of the following:
//
//	ContentTypeApplicationJson
type ContentTypeInput interface {
	pulumi.Input

	ToContentTypeOutput() ContentTypeOutput
	ToContentTypeOutputWithContext(context.Context) ContentTypeOutput
}

var contentTypePtrType = reflect.TypeOf((**ContentType)(nil)).Elem()

type ContentTypePtrInput interface {
	pulumi.Input

	ToContentTypePtrOutput() ContentTypePtrOutput
	ToContentTypePtrOutputWithContext(context.Context) ContentTypePtrOutput
}

type contentTypePtr string

func ContentTypePtr(v string) ContentTypePtrInput {
	return (*contentTypePtr)(&v)
}

func (*contentTypePtr) ElementType() reflect.Type {
	return contentTypePtrType
}

func (in *contentTypePtr) ToContentTypePtrOutput() ContentTypePtrOutput {
	return pulumi.ToOutput(in).(ContentTypePtrOutput)
}

func (in *contentTypePtr) ToContentTypePtrOutputWithContext(ctx context.Context) ContentTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ContentTypePtrOutput)
}

// whether to enable ssl verification
type EnableSslVerification string

const (
	// The ssl verification is enabled.
	EnableSslVerificationTrue = EnableSslVerification("true")
	// The ssl verification is not enabled.
	EnableSslVerificationFalse = EnableSslVerification("false")
)

func (EnableSslVerification) ElementType() reflect.Type {
	return reflect.TypeOf((*EnableSslVerification)(nil)).Elem()
}

func (e EnableSslVerification) ToEnableSslVerificationOutput() EnableSslVerificationOutput {
	return pulumi.ToOutput(e).(EnableSslVerificationOutput)
}

func (e EnableSslVerification) ToEnableSslVerificationOutputWithContext(ctx context.Context) EnableSslVerificationOutput {
	return pulumi.ToOutputWithContext(ctx, e).(EnableSslVerificationOutput)
}

func (e EnableSslVerification) ToEnableSslVerificationPtrOutput() EnableSslVerificationPtrOutput {
	return e.ToEnableSslVerificationPtrOutputWithContext(context.Background())
}

func (e EnableSslVerification) ToEnableSslVerificationPtrOutputWithContext(ctx context.Context) EnableSslVerificationPtrOutput {
	return EnableSslVerification(e).ToEnableSslVerificationOutputWithContext(ctx).ToEnableSslVerificationPtrOutputWithContext(ctx)
}

func (e EnableSslVerification) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e EnableSslVerification) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e EnableSslVerification) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e EnableSslVerification) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type EnableSslVerificationOutput struct{ *pulumi.OutputState }

func (EnableSslVerificationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EnableSslVerification)(nil)).Elem()
}

func (o EnableSslVerificationOutput) ToEnableSslVerificationOutput() EnableSslVerificationOutput {
	return o
}

func (o EnableSslVerificationOutput) ToEnableSslVerificationOutputWithContext(ctx context.Context) EnableSslVerificationOutput {
	return o
}

func (o EnableSslVerificationOutput) ToEnableSslVerificationPtrOutput() EnableSslVerificationPtrOutput {
	return o.ToEnableSslVerificationPtrOutputWithContext(context.Background())
}

func (o EnableSslVerificationOutput) ToEnableSslVerificationPtrOutputWithContext(ctx context.Context) EnableSslVerificationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EnableSslVerification) *EnableSslVerification {
		return &v
	}).(EnableSslVerificationPtrOutput)
}

func (o EnableSslVerificationOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o EnableSslVerificationOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e EnableSslVerification) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o EnableSslVerificationOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o EnableSslVerificationOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e EnableSslVerification) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type EnableSslVerificationPtrOutput struct{ *pulumi.OutputState }

func (EnableSslVerificationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EnableSslVerification)(nil)).Elem()
}

func (o EnableSslVerificationPtrOutput) ToEnableSslVerificationPtrOutput() EnableSslVerificationPtrOutput {
	return o
}

func (o EnableSslVerificationPtrOutput) ToEnableSslVerificationPtrOutputWithContext(ctx context.Context) EnableSslVerificationPtrOutput {
	return o
}

func (o EnableSslVerificationPtrOutput) Elem() EnableSslVerificationOutput {
	return o.ApplyT(func(v *EnableSslVerification) EnableSslVerification {
		if v != nil {
			return *v
		}
		var ret EnableSslVerification
		return ret
	}).(EnableSslVerificationOutput)
}

func (o EnableSslVerificationPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o EnableSslVerificationPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *EnableSslVerification) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// EnableSslVerificationInput is an input type that accepts values of the EnableSslVerification enum
// A concrete instance of `EnableSslVerificationInput` can be one of the following:
//
//	EnableSslVerificationTrue
//	EnableSslVerificationFalse
type EnableSslVerificationInput interface {
	pulumi.Input

	ToEnableSslVerificationOutput() EnableSslVerificationOutput
	ToEnableSslVerificationOutputWithContext(context.Context) EnableSslVerificationOutput
}

var enableSslVerificationPtrType = reflect.TypeOf((**EnableSslVerification)(nil)).Elem()

type EnableSslVerificationPtrInput interface {
	pulumi.Input

	ToEnableSslVerificationPtrOutput() EnableSslVerificationPtrOutput
	ToEnableSslVerificationPtrOutputWithContext(context.Context) EnableSslVerificationPtrOutput
}

type enableSslVerificationPtr string

func EnableSslVerificationPtr(v string) EnableSslVerificationPtrInput {
	return (*enableSslVerificationPtr)(&v)
}

func (*enableSslVerificationPtr) ElementType() reflect.Type {
	return enableSslVerificationPtrType
}

func (in *enableSslVerificationPtr) ToEnableSslVerificationPtrOutput() EnableSslVerificationPtrOutput {
	return pulumi.ToOutput(in).(EnableSslVerificationPtrOutput)
}

func (in *enableSslVerificationPtr) ToEnableSslVerificationPtrOutputWithContext(ctx context.Context) EnableSslVerificationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(EnableSslVerificationPtrOutput)
}

// Evidence type.
type EvidenceType string

const (
	// The evidence is a file.
	EvidenceTypeFile = EvidenceType("File")
	// The evidence auto collected by App Compliance Automation.
	EvidenceTypeAutoCollectedEvidence = EvidenceType("AutoCollectedEvidence")
	// The evidence is data.
	EvidenceTypeData = EvidenceType("Data")
)

func (EvidenceType) ElementType() reflect.Type {
	return reflect.TypeOf((*EvidenceType)(nil)).Elem()
}

func (e EvidenceType) ToEvidenceTypeOutput() EvidenceTypeOutput {
	return pulumi.ToOutput(e).(EvidenceTypeOutput)
}

func (e EvidenceType) ToEvidenceTypeOutputWithContext(ctx context.Context) EvidenceTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(EvidenceTypeOutput)
}

func (e EvidenceType) ToEvidenceTypePtrOutput() EvidenceTypePtrOutput {
	return e.ToEvidenceTypePtrOutputWithContext(context.Background())
}

func (e EvidenceType) ToEvidenceTypePtrOutputWithContext(ctx context.Context) EvidenceTypePtrOutput {
	return EvidenceType(e).ToEvidenceTypeOutputWithContext(ctx).ToEvidenceTypePtrOutputWithContext(ctx)
}

func (e EvidenceType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e EvidenceType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e EvidenceType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e EvidenceType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type EvidenceTypeOutput struct{ *pulumi.OutputState }

func (EvidenceTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EvidenceType)(nil)).Elem()
}

func (o EvidenceTypeOutput) ToEvidenceTypeOutput() EvidenceTypeOutput {
	return o
}

func (o EvidenceTypeOutput) ToEvidenceTypeOutputWithContext(ctx context.Context) EvidenceTypeOutput {
	return o
}

func (o EvidenceTypeOutput) ToEvidenceTypePtrOutput() EvidenceTypePtrOutput {
	return o.ToEvidenceTypePtrOutputWithContext(context.Background())
}

func (o EvidenceTypeOutput) ToEvidenceTypePtrOutputWithContext(ctx context.Context) EvidenceTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EvidenceType) *EvidenceType {
		return &v
	}).(EvidenceTypePtrOutput)
}

func (o EvidenceTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o EvidenceTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e EvidenceType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o EvidenceTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o EvidenceTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e EvidenceType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type EvidenceTypePtrOutput struct{ *pulumi.OutputState }

func (EvidenceTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EvidenceType)(nil)).Elem()
}

func (o EvidenceTypePtrOutput) ToEvidenceTypePtrOutput() EvidenceTypePtrOutput {
	return o
}

func (o EvidenceTypePtrOutput) ToEvidenceTypePtrOutputWithContext(ctx context.Context) EvidenceTypePtrOutput {
	return o
}

func (o EvidenceTypePtrOutput) Elem() EvidenceTypeOutput {
	return o.ApplyT(func(v *EvidenceType) EvidenceType {
		if v != nil {
			return *v
		}
		var ret EvidenceType
		return ret
	}).(EvidenceTypeOutput)
}

func (o EvidenceTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o EvidenceTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *EvidenceType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// EvidenceTypeInput is an input type that accepts values of the EvidenceType enum
// A concrete instance of `EvidenceTypeInput` can be one of the following:
//
//	EvidenceTypeFile
//	EvidenceTypeAutoCollectedEvidence
//	EvidenceTypeData
type EvidenceTypeInput interface {
	pulumi.Input

	ToEvidenceTypeOutput() EvidenceTypeOutput
	ToEvidenceTypeOutputWithContext(context.Context) EvidenceTypeOutput
}

var evidenceTypePtrType = reflect.TypeOf((**EvidenceType)(nil)).Elem()

type EvidenceTypePtrInput interface {
	pulumi.Input

	ToEvidenceTypePtrOutput() EvidenceTypePtrOutput
	ToEvidenceTypePtrOutputWithContext(context.Context) EvidenceTypePtrOutput
}

type evidenceTypePtr string

func EvidenceTypePtr(v string) EvidenceTypePtrInput {
	return (*evidenceTypePtr)(&v)
}

func (*evidenceTypePtr) ElementType() reflect.Type {
	return evidenceTypePtrType
}

func (in *evidenceTypePtr) ToEvidenceTypePtrOutput() EvidenceTypePtrOutput {
	return pulumi.ToOutput(in).(EvidenceTypePtrOutput)
}

func (in *evidenceTypePtr) ToEvidenceTypePtrOutputWithContext(ctx context.Context) EvidenceTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(EvidenceTypePtrOutput)
}

// notification event.
type NotificationEvent string

const (
	// The subscribed report's snapshot is successfully generated.
	NotificationEvent_Generate_snapshot_success = NotificationEvent("generate_snapshot_success")
	// The subscribed report's snapshot is failed to generate.
	NotificationEvent_Generate_snapshot_failed = NotificationEvent("generate_snapshot_failed")
	// The subscribed report failed while collecting the assessments.
	NotificationEvent_Assessment_failure = NotificationEvent("assessment_failure")
	// The subscribed report's configuration is changed.
	NotificationEvent_Report_configuration_changes = NotificationEvent("report_configuration_changes")
	// The subscribed report is deleted.
	NotificationEvent_Report_deletion = NotificationEvent("report_deletion")
)

func (NotificationEvent) ElementType() reflect.Type {
	return reflect.TypeOf((*NotificationEvent)(nil)).Elem()
}

func (e NotificationEvent) ToNotificationEventOutput() NotificationEventOutput {
	return pulumi.ToOutput(e).(NotificationEventOutput)
}

func (e NotificationEvent) ToNotificationEventOutputWithContext(ctx context.Context) NotificationEventOutput {
	return pulumi.ToOutputWithContext(ctx, e).(NotificationEventOutput)
}

func (e NotificationEvent) ToNotificationEventPtrOutput() NotificationEventPtrOutput {
	return e.ToNotificationEventPtrOutputWithContext(context.Background())
}

func (e NotificationEvent) ToNotificationEventPtrOutputWithContext(ctx context.Context) NotificationEventPtrOutput {
	return NotificationEvent(e).ToNotificationEventOutputWithContext(ctx).ToNotificationEventPtrOutputWithContext(ctx)
}

func (e NotificationEvent) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e NotificationEvent) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e NotificationEvent) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e NotificationEvent) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type NotificationEventOutput struct{ *pulumi.OutputState }

func (NotificationEventOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NotificationEvent)(nil)).Elem()
}

func (o NotificationEventOutput) ToNotificationEventOutput() NotificationEventOutput {
	return o
}

func (o NotificationEventOutput) ToNotificationEventOutputWithContext(ctx context.Context) NotificationEventOutput {
	return o
}

func (o NotificationEventOutput) ToNotificationEventPtrOutput() NotificationEventPtrOutput {
	return o.ToNotificationEventPtrOutputWithContext(context.Background())
}

func (o NotificationEventOutput) ToNotificationEventPtrOutputWithContext(ctx context.Context) NotificationEventPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NotificationEvent) *NotificationEvent {
		return &v
	}).(NotificationEventPtrOutput)
}

func (o NotificationEventOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o NotificationEventOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e NotificationEvent) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o NotificationEventOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o NotificationEventOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e NotificationEvent) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type NotificationEventPtrOutput struct{ *pulumi.OutputState }

func (NotificationEventPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NotificationEvent)(nil)).Elem()
}

func (o NotificationEventPtrOutput) ToNotificationEventPtrOutput() NotificationEventPtrOutput {
	return o
}

func (o NotificationEventPtrOutput) ToNotificationEventPtrOutputWithContext(ctx context.Context) NotificationEventPtrOutput {
	return o
}

func (o NotificationEventPtrOutput) Elem() NotificationEventOutput {
	return o.ApplyT(func(v *NotificationEvent) NotificationEvent {
		if v != nil {
			return *v
		}
		var ret NotificationEvent
		return ret
	}).(NotificationEventOutput)
}

func (o NotificationEventPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o NotificationEventPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *NotificationEvent) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// NotificationEventInput is an input type that accepts values of the NotificationEvent enum
// A concrete instance of `NotificationEventInput` can be one of the following:
//
//	NotificationEvent_Generate_snapshot_success
//	NotificationEvent_Generate_snapshot_failed
//	NotificationEvent_Assessment_failure
//	NotificationEvent_Report_configuration_changes
//	NotificationEvent_Report_deletion
type NotificationEventInput interface {
	pulumi.Input

	ToNotificationEventOutput() NotificationEventOutput
	ToNotificationEventOutputWithContext(context.Context) NotificationEventOutput
}

var notificationEventPtrType = reflect.TypeOf((**NotificationEvent)(nil)).Elem()

type NotificationEventPtrInput interface {
	pulumi.Input

	ToNotificationEventPtrOutput() NotificationEventPtrOutput
	ToNotificationEventPtrOutputWithContext(context.Context) NotificationEventPtrOutput
}

type notificationEventPtr string

func NotificationEventPtr(v string) NotificationEventPtrInput {
	return (*notificationEventPtr)(&v)
}

func (*notificationEventPtr) ElementType() reflect.Type {
	return notificationEventPtrType
}

func (in *notificationEventPtr) ToNotificationEventPtrOutput() NotificationEventPtrOutput {
	return pulumi.ToOutput(in).(NotificationEventPtrOutput)
}

func (in *notificationEventPtr) ToNotificationEventPtrOutputWithContext(ctx context.Context) NotificationEventPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(NotificationEventPtrOutput)
}

// whether to send notification under any event.
type SendAllEvents string

const (
	// Need send notification under any event.
	SendAllEventsTrue = SendAllEvents("true")
	// No need to send notification under any event.
	SendAllEventsFalse = SendAllEvents("false")
)

func (SendAllEvents) ElementType() reflect.Type {
	return reflect.TypeOf((*SendAllEvents)(nil)).Elem()
}

func (e SendAllEvents) ToSendAllEventsOutput() SendAllEventsOutput {
	return pulumi.ToOutput(e).(SendAllEventsOutput)
}

func (e SendAllEvents) ToSendAllEventsOutputWithContext(ctx context.Context) SendAllEventsOutput {
	return pulumi.ToOutputWithContext(ctx, e).(SendAllEventsOutput)
}

func (e SendAllEvents) ToSendAllEventsPtrOutput() SendAllEventsPtrOutput {
	return e.ToSendAllEventsPtrOutputWithContext(context.Background())
}

func (e SendAllEvents) ToSendAllEventsPtrOutputWithContext(ctx context.Context) SendAllEventsPtrOutput {
	return SendAllEvents(e).ToSendAllEventsOutputWithContext(ctx).ToSendAllEventsPtrOutputWithContext(ctx)
}

func (e SendAllEvents) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e SendAllEvents) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e SendAllEvents) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e SendAllEvents) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type SendAllEventsOutput struct{ *pulumi.OutputState }

func (SendAllEventsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SendAllEvents)(nil)).Elem()
}

func (o SendAllEventsOutput) ToSendAllEventsOutput() SendAllEventsOutput {
	return o
}

func (o SendAllEventsOutput) ToSendAllEventsOutputWithContext(ctx context.Context) SendAllEventsOutput {
	return o
}

func (o SendAllEventsOutput) ToSendAllEventsPtrOutput() SendAllEventsPtrOutput {
	return o.ToSendAllEventsPtrOutputWithContext(context.Background())
}

func (o SendAllEventsOutput) ToSendAllEventsPtrOutputWithContext(ctx context.Context) SendAllEventsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SendAllEvents) *SendAllEvents {
		return &v
	}).(SendAllEventsPtrOutput)
}

func (o SendAllEventsOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o SendAllEventsOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SendAllEvents) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o SendAllEventsOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SendAllEventsOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SendAllEvents) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type SendAllEventsPtrOutput struct{ *pulumi.OutputState }

func (SendAllEventsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SendAllEvents)(nil)).Elem()
}

func (o SendAllEventsPtrOutput) ToSendAllEventsPtrOutput() SendAllEventsPtrOutput {
	return o
}

func (o SendAllEventsPtrOutput) ToSendAllEventsPtrOutputWithContext(ctx context.Context) SendAllEventsPtrOutput {
	return o
}

func (o SendAllEventsPtrOutput) Elem() SendAllEventsOutput {
	return o.ApplyT(func(v *SendAllEvents) SendAllEvents {
		if v != nil {
			return *v
		}
		var ret SendAllEvents
		return ret
	}).(SendAllEventsOutput)
}

func (o SendAllEventsPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SendAllEventsPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *SendAllEvents) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// SendAllEventsInput is an input type that accepts values of the SendAllEvents enum
// A concrete instance of `SendAllEventsInput` can be one of the following:
//
//	SendAllEventsTrue
//	SendAllEventsFalse
type SendAllEventsInput interface {
	pulumi.Input

	ToSendAllEventsOutput() SendAllEventsOutput
	ToSendAllEventsOutputWithContext(context.Context) SendAllEventsOutput
}

var sendAllEventsPtrType = reflect.TypeOf((**SendAllEvents)(nil)).Elem()

type SendAllEventsPtrInput interface {
	pulumi.Input

	ToSendAllEventsPtrOutput() SendAllEventsPtrOutput
	ToSendAllEventsPtrOutputWithContext(context.Context) SendAllEventsPtrOutput
}

type sendAllEventsPtr string

func SendAllEventsPtr(v string) SendAllEventsPtrInput {
	return (*sendAllEventsPtr)(&v)
}

func (*sendAllEventsPtr) ElementType() reflect.Type {
	return sendAllEventsPtrType
}

func (in *sendAllEventsPtr) ToSendAllEventsPtrOutput() SendAllEventsPtrOutput {
	return pulumi.ToOutput(in).(SendAllEventsPtrOutput)
}

func (in *sendAllEventsPtr) ToSendAllEventsPtrOutputWithContext(ctx context.Context) SendAllEventsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(SendAllEventsPtrOutput)
}

// whether to update webhookKey.
type UpdateWebhookKey string

const (
	// Need update the webhook key.
	UpdateWebhookKeyTrue = UpdateWebhookKey("true")
	// No need to update the webhook key.
	UpdateWebhookKeyFalse = UpdateWebhookKey("false")
)

func (UpdateWebhookKey) ElementType() reflect.Type {
	return reflect.TypeOf((*UpdateWebhookKey)(nil)).Elem()
}

func (e UpdateWebhookKey) ToUpdateWebhookKeyOutput() UpdateWebhookKeyOutput {
	return pulumi.ToOutput(e).(UpdateWebhookKeyOutput)
}

func (e UpdateWebhookKey) ToUpdateWebhookKeyOutputWithContext(ctx context.Context) UpdateWebhookKeyOutput {
	return pulumi.ToOutputWithContext(ctx, e).(UpdateWebhookKeyOutput)
}

func (e UpdateWebhookKey) ToUpdateWebhookKeyPtrOutput() UpdateWebhookKeyPtrOutput {
	return e.ToUpdateWebhookKeyPtrOutputWithContext(context.Background())
}

func (e UpdateWebhookKey) ToUpdateWebhookKeyPtrOutputWithContext(ctx context.Context) UpdateWebhookKeyPtrOutput {
	return UpdateWebhookKey(e).ToUpdateWebhookKeyOutputWithContext(ctx).ToUpdateWebhookKeyPtrOutputWithContext(ctx)
}

func (e UpdateWebhookKey) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e UpdateWebhookKey) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e UpdateWebhookKey) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e UpdateWebhookKey) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type UpdateWebhookKeyOutput struct{ *pulumi.OutputState }

func (UpdateWebhookKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UpdateWebhookKey)(nil)).Elem()
}

func (o UpdateWebhookKeyOutput) ToUpdateWebhookKeyOutput() UpdateWebhookKeyOutput {
	return o
}

func (o UpdateWebhookKeyOutput) ToUpdateWebhookKeyOutputWithContext(ctx context.Context) UpdateWebhookKeyOutput {
	return o
}

func (o UpdateWebhookKeyOutput) ToUpdateWebhookKeyPtrOutput() UpdateWebhookKeyPtrOutput {
	return o.ToUpdateWebhookKeyPtrOutputWithContext(context.Background())
}

func (o UpdateWebhookKeyOutput) ToUpdateWebhookKeyPtrOutputWithContext(ctx context.Context) UpdateWebhookKeyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v UpdateWebhookKey) *UpdateWebhookKey {
		return &v
	}).(UpdateWebhookKeyPtrOutput)
}

func (o UpdateWebhookKeyOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o UpdateWebhookKeyOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e UpdateWebhookKey) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o UpdateWebhookKeyOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o UpdateWebhookKeyOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e UpdateWebhookKey) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type UpdateWebhookKeyPtrOutput struct{ *pulumi.OutputState }

func (UpdateWebhookKeyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UpdateWebhookKey)(nil)).Elem()
}

func (o UpdateWebhookKeyPtrOutput) ToUpdateWebhookKeyPtrOutput() UpdateWebhookKeyPtrOutput {
	return o
}

func (o UpdateWebhookKeyPtrOutput) ToUpdateWebhookKeyPtrOutputWithContext(ctx context.Context) UpdateWebhookKeyPtrOutput {
	return o
}

func (o UpdateWebhookKeyPtrOutput) Elem() UpdateWebhookKeyOutput {
	return o.ApplyT(func(v *UpdateWebhookKey) UpdateWebhookKey {
		if v != nil {
			return *v
		}
		var ret UpdateWebhookKey
		return ret
	}).(UpdateWebhookKeyOutput)
}

func (o UpdateWebhookKeyPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o UpdateWebhookKeyPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *UpdateWebhookKey) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// UpdateWebhookKeyInput is an input type that accepts values of the UpdateWebhookKey enum
// A concrete instance of `UpdateWebhookKeyInput` can be one of the following:
//
//	UpdateWebhookKeyTrue
//	UpdateWebhookKeyFalse
type UpdateWebhookKeyInput interface {
	pulumi.Input

	ToUpdateWebhookKeyOutput() UpdateWebhookKeyOutput
	ToUpdateWebhookKeyOutputWithContext(context.Context) UpdateWebhookKeyOutput
}

var updateWebhookKeyPtrType = reflect.TypeOf((**UpdateWebhookKey)(nil)).Elem()

type UpdateWebhookKeyPtrInput interface {
	pulumi.Input

	ToUpdateWebhookKeyPtrOutput() UpdateWebhookKeyPtrOutput
	ToUpdateWebhookKeyPtrOutputWithContext(context.Context) UpdateWebhookKeyPtrOutput
}

type updateWebhookKeyPtr string

func UpdateWebhookKeyPtr(v string) UpdateWebhookKeyPtrInput {
	return (*updateWebhookKeyPtr)(&v)
}

func (*updateWebhookKeyPtr) ElementType() reflect.Type {
	return updateWebhookKeyPtrType
}

func (in *updateWebhookKeyPtr) ToUpdateWebhookKeyPtrOutput() UpdateWebhookKeyPtrOutput {
	return pulumi.ToOutput(in).(UpdateWebhookKeyPtrOutput)
}

func (in *updateWebhookKeyPtr) ToUpdateWebhookKeyPtrOutputWithContext(ctx context.Context) UpdateWebhookKeyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(UpdateWebhookKeyPtrOutput)
}

// Webhook status.
type WebhookStatus string

const (
	// The webhook is enabled.
	WebhookStatusEnabled = WebhookStatus("Enabled")
	// The webhook is disabled.
	WebhookStatusDisabled = WebhookStatus("Disabled")
)

func (WebhookStatus) ElementType() reflect.Type {
	return reflect.TypeOf((*WebhookStatus)(nil)).Elem()
}

func (e WebhookStatus) ToWebhookStatusOutput() WebhookStatusOutput {
	return pulumi.ToOutput(e).(WebhookStatusOutput)
}

func (e WebhookStatus) ToWebhookStatusOutputWithContext(ctx context.Context) WebhookStatusOutput {
	return pulumi.ToOutputWithContext(ctx, e).(WebhookStatusOutput)
}

func (e WebhookStatus) ToWebhookStatusPtrOutput() WebhookStatusPtrOutput {
	return e.ToWebhookStatusPtrOutputWithContext(context.Background())
}

func (e WebhookStatus) ToWebhookStatusPtrOutputWithContext(ctx context.Context) WebhookStatusPtrOutput {
	return WebhookStatus(e).ToWebhookStatusOutputWithContext(ctx).ToWebhookStatusPtrOutputWithContext(ctx)
}

func (e WebhookStatus) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e WebhookStatus) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e WebhookStatus) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e WebhookStatus) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type WebhookStatusOutput struct{ *pulumi.OutputState }

func (WebhookStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebhookStatus)(nil)).Elem()
}

func (o WebhookStatusOutput) ToWebhookStatusOutput() WebhookStatusOutput {
	return o
}

func (o WebhookStatusOutput) ToWebhookStatusOutputWithContext(ctx context.Context) WebhookStatusOutput {
	return o
}

func (o WebhookStatusOutput) ToWebhookStatusPtrOutput() WebhookStatusPtrOutput {
	return o.ToWebhookStatusPtrOutputWithContext(context.Background())
}

func (o WebhookStatusOutput) ToWebhookStatusPtrOutputWithContext(ctx context.Context) WebhookStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebhookStatus) *WebhookStatus {
		return &v
	}).(WebhookStatusPtrOutput)
}

func (o WebhookStatusOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o WebhookStatusOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e WebhookStatus) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o WebhookStatusOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o WebhookStatusOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e WebhookStatus) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type WebhookStatusPtrOutput struct{ *pulumi.OutputState }

func (WebhookStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebhookStatus)(nil)).Elem()
}

func (o WebhookStatusPtrOutput) ToWebhookStatusPtrOutput() WebhookStatusPtrOutput {
	return o
}

func (o WebhookStatusPtrOutput) ToWebhookStatusPtrOutputWithContext(ctx context.Context) WebhookStatusPtrOutput {
	return o
}

func (o WebhookStatusPtrOutput) Elem() WebhookStatusOutput {
	return o.ApplyT(func(v *WebhookStatus) WebhookStatus {
		if v != nil {
			return *v
		}
		var ret WebhookStatus
		return ret
	}).(WebhookStatusOutput)
}

func (o WebhookStatusPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o WebhookStatusPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *WebhookStatus) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// WebhookStatusInput is an input type that accepts values of the WebhookStatus enum
// A concrete instance of `WebhookStatusInput` can be one of the following:
//
//	WebhookStatusEnabled
//	WebhookStatusDisabled
type WebhookStatusInput interface {
	pulumi.Input

	ToWebhookStatusOutput() WebhookStatusOutput
	ToWebhookStatusOutputWithContext(context.Context) WebhookStatusOutput
}

var webhookStatusPtrType = reflect.TypeOf((**WebhookStatus)(nil)).Elem()

type WebhookStatusPtrInput interface {
	pulumi.Input

	ToWebhookStatusPtrOutput() WebhookStatusPtrOutput
	ToWebhookStatusPtrOutputWithContext(context.Context) WebhookStatusPtrOutput
}

type webhookStatusPtr string

func WebhookStatusPtr(v string) WebhookStatusPtrInput {
	return (*webhookStatusPtr)(&v)
}

func (*webhookStatusPtr) ElementType() reflect.Type {
	return webhookStatusPtrType
}

func (in *webhookStatusPtr) ToWebhookStatusPtrOutput() WebhookStatusPtrOutput {
	return pulumi.ToOutput(in).(WebhookStatusPtrOutput)
}

func (in *webhookStatusPtr) ToWebhookStatusPtrOutputWithContext(ctx context.Context) WebhookStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(WebhookStatusPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(ContentTypeOutput{})
	pulumi.RegisterOutputType(ContentTypePtrOutput{})
	pulumi.RegisterOutputType(EnableSslVerificationOutput{})
	pulumi.RegisterOutputType(EnableSslVerificationPtrOutput{})
	pulumi.RegisterOutputType(EvidenceTypeOutput{})
	pulumi.RegisterOutputType(EvidenceTypePtrOutput{})
	pulumi.RegisterOutputType(NotificationEventOutput{})
	pulumi.RegisterOutputType(NotificationEventPtrOutput{})
	pulumi.RegisterOutputType(SendAllEventsOutput{})
	pulumi.RegisterOutputType(SendAllEventsPtrOutput{})
	pulumi.RegisterOutputType(UpdateWebhookKeyOutput{})
	pulumi.RegisterOutputType(UpdateWebhookKeyPtrOutput{})
	pulumi.RegisterOutputType(WebhookStatusOutput{})
	pulumi.RegisterOutputType(WebhookStatusPtrOutput{})
}
