// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20240627

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = utilities.GetEnvOrDefault

// A class represent the certification record synchronized from app compliance.
type CertSyncRecordResponse struct {
	// Indicates the status of certification process.
	CertificationStatus *string `pulumi:"certificationStatus"`
	// The control records list to be synchronized.
	Controls []ControlSyncRecordResponse `pulumi:"controls"`
	// Indicates the status of compliance process.
	IngestionStatus *string `pulumi:"ingestionStatus"`
	// The offerGuid which mapping to the reports.
	OfferGuid *string `pulumi:"offerGuid"`
}

// A class represent the certification record synchronized from app compliance.
type CertSyncRecordResponseOutput struct{ *pulumi.OutputState }

func (CertSyncRecordResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CertSyncRecordResponse)(nil)).Elem()
}

func (o CertSyncRecordResponseOutput) ToCertSyncRecordResponseOutput() CertSyncRecordResponseOutput {
	return o
}

func (o CertSyncRecordResponseOutput) ToCertSyncRecordResponseOutputWithContext(ctx context.Context) CertSyncRecordResponseOutput {
	return o
}

// Indicates the status of certification process.
func (o CertSyncRecordResponseOutput) CertificationStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertSyncRecordResponse) *string { return v.CertificationStatus }).(pulumi.StringPtrOutput)
}

// The control records list to be synchronized.
func (o CertSyncRecordResponseOutput) Controls() ControlSyncRecordResponseArrayOutput {
	return o.ApplyT(func(v CertSyncRecordResponse) []ControlSyncRecordResponse { return v.Controls }).(ControlSyncRecordResponseArrayOutput)
}

// Indicates the status of compliance process.
func (o CertSyncRecordResponseOutput) IngestionStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertSyncRecordResponse) *string { return v.IngestionStatus }).(pulumi.StringPtrOutput)
}

// The offerGuid which mapping to the reports.
func (o CertSyncRecordResponseOutput) OfferGuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertSyncRecordResponse) *string { return v.OfferGuid }).(pulumi.StringPtrOutput)
}

type CertSyncRecordResponseArrayOutput struct{ *pulumi.OutputState }

func (CertSyncRecordResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CertSyncRecordResponse)(nil)).Elem()
}

func (o CertSyncRecordResponseArrayOutput) ToCertSyncRecordResponseArrayOutput() CertSyncRecordResponseArrayOutput {
	return o
}

func (o CertSyncRecordResponseArrayOutput) ToCertSyncRecordResponseArrayOutputWithContext(ctx context.Context) CertSyncRecordResponseArrayOutput {
	return o
}

func (o CertSyncRecordResponseArrayOutput) Index(i pulumi.IntInput) CertSyncRecordResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CertSyncRecordResponse {
		return vs[0].([]CertSyncRecordResponse)[vs[1].(int)]
	}).(CertSyncRecordResponseOutput)
}

// A class represent the control record synchronized from app compliance.
type ControlSyncRecordResponse struct {
	// The Id of the control. e.g. "Operational_Security_10"
	ControlId *string `pulumi:"controlId"`
	// Control status synchronized from app compliance.
	ControlStatus *string `pulumi:"controlStatus"`
}

// A class represent the control record synchronized from app compliance.
type ControlSyncRecordResponseOutput struct{ *pulumi.OutputState }

func (ControlSyncRecordResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ControlSyncRecordResponse)(nil)).Elem()
}

func (o ControlSyncRecordResponseOutput) ToControlSyncRecordResponseOutput() ControlSyncRecordResponseOutput {
	return o
}

func (o ControlSyncRecordResponseOutput) ToControlSyncRecordResponseOutputWithContext(ctx context.Context) ControlSyncRecordResponseOutput {
	return o
}

// The Id of the control. e.g. "Operational_Security_10"
func (o ControlSyncRecordResponseOutput) ControlId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ControlSyncRecordResponse) *string { return v.ControlId }).(pulumi.StringPtrOutput)
}

// Control status synchronized from app compliance.
func (o ControlSyncRecordResponseOutput) ControlStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ControlSyncRecordResponse) *string { return v.ControlStatus }).(pulumi.StringPtrOutput)
}

type ControlSyncRecordResponseArrayOutput struct{ *pulumi.OutputState }

func (ControlSyncRecordResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ControlSyncRecordResponse)(nil)).Elem()
}

func (o ControlSyncRecordResponseArrayOutput) ToControlSyncRecordResponseArrayOutput() ControlSyncRecordResponseArrayOutput {
	return o
}

func (o ControlSyncRecordResponseArrayOutput) ToControlSyncRecordResponseArrayOutputWithContext(ctx context.Context) ControlSyncRecordResponseArrayOutput {
	return o
}

func (o ControlSyncRecordResponseArrayOutput) Index(i pulumi.IntInput) ControlSyncRecordResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ControlSyncRecordResponse {
		return vs[0].([]ControlSyncRecordResponse)[vs[1].(int)]
	}).(ControlSyncRecordResponseOutput)
}

// The overview of the compliance result for one report.
type OverviewStatusResponse struct {
	// The count of all failed control.
	FailedCount int `pulumi:"failedCount"`
	// The count of all manual control.
	ManualCount int `pulumi:"manualCount"`
	// The count of all not applicable control.
	NotApplicableCount int `pulumi:"notApplicableCount"`
	// The count of all passed control.
	PassedCount int `pulumi:"passedCount"`
	// The count of all pending for approval control.
	PendingCount int `pulumi:"pendingCount"`
}

// The overview of the compliance result for one report.
type OverviewStatusResponseOutput struct{ *pulumi.OutputState }

func (OverviewStatusResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OverviewStatusResponse)(nil)).Elem()
}

func (o OverviewStatusResponseOutput) ToOverviewStatusResponseOutput() OverviewStatusResponseOutput {
	return o
}

func (o OverviewStatusResponseOutput) ToOverviewStatusResponseOutputWithContext(ctx context.Context) OverviewStatusResponseOutput {
	return o
}

// The count of all failed control.
func (o OverviewStatusResponseOutput) FailedCount() pulumi.IntOutput {
	return o.ApplyT(func(v OverviewStatusResponse) int { return v.FailedCount }).(pulumi.IntOutput)
}

// The count of all manual control.
func (o OverviewStatusResponseOutput) ManualCount() pulumi.IntOutput {
	return o.ApplyT(func(v OverviewStatusResponse) int { return v.ManualCount }).(pulumi.IntOutput)
}

// The count of all not applicable control.
func (o OverviewStatusResponseOutput) NotApplicableCount() pulumi.IntOutput {
	return o.ApplyT(func(v OverviewStatusResponse) int { return v.NotApplicableCount }).(pulumi.IntOutput)
}

// The count of all passed control.
func (o OverviewStatusResponseOutput) PassedCount() pulumi.IntOutput {
	return o.ApplyT(func(v OverviewStatusResponse) int { return v.PassedCount }).(pulumi.IntOutput)
}

// The count of all pending for approval control.
func (o OverviewStatusResponseOutput) PendingCount() pulumi.IntOutput {
	return o.ApplyT(func(v OverviewStatusResponse) int { return v.PendingCount }).(pulumi.IntOutput)
}

// A list which includes all the compliance result for one report.
type ReportComplianceStatusResponse struct {
	// The Microsoft 365 certification name.
	M365 OverviewStatusResponse `pulumi:"m365"`
}

// A list which includes all the compliance result for one report.
type ReportComplianceStatusResponseOutput struct{ *pulumi.OutputState }

func (ReportComplianceStatusResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReportComplianceStatusResponse)(nil)).Elem()
}

func (o ReportComplianceStatusResponseOutput) ToReportComplianceStatusResponseOutput() ReportComplianceStatusResponseOutput {
	return o
}

func (o ReportComplianceStatusResponseOutput) ToReportComplianceStatusResponseOutputWithContext(ctx context.Context) ReportComplianceStatusResponseOutput {
	return o
}

// The Microsoft 365 certification name.
func (o ReportComplianceStatusResponseOutput) M365() OverviewStatusResponseOutput {
	return o.ApplyT(func(v ReportComplianceStatusResponse) OverviewStatusResponse { return v.M365 }).(OverviewStatusResponseOutput)
}

// Single resource Id's metadata.
type ResourceMetadata struct {
	// Account Id. For example - the AWS account id.
	AccountId *string `pulumi:"accountId"`
	// Resource Id - e.g. "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rg1/providers/Microsoft.Compute/virtualMachines/vm1".
	ResourceId string `pulumi:"resourceId"`
	// Resource kind.
	ResourceKind *string `pulumi:"resourceKind"`
	// Resource Origin.
	ResourceOrigin *string `pulumi:"resourceOrigin"`
	// Resource type. e.g. "Microsoft.Compute/virtualMachines"
	ResourceType *string `pulumi:"resourceType"`
}

// ResourceMetadataInput is an input type that accepts ResourceMetadataArgs and ResourceMetadataOutput values.
// You can construct a concrete instance of `ResourceMetadataInput` via:
//
//	ResourceMetadataArgs{...}
type ResourceMetadataInput interface {
	pulumi.Input

	ToResourceMetadataOutput() ResourceMetadataOutput
	ToResourceMetadataOutputWithContext(context.Context) ResourceMetadataOutput
}

// Single resource Id's metadata.
type ResourceMetadataArgs struct {
	// Account Id. For example - the AWS account id.
	AccountId pulumi.StringPtrInput `pulumi:"accountId"`
	// Resource Id - e.g. "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rg1/providers/Microsoft.Compute/virtualMachines/vm1".
	ResourceId pulumi.StringInput `pulumi:"resourceId"`
	// Resource kind.
	ResourceKind pulumi.StringPtrInput `pulumi:"resourceKind"`
	// Resource Origin.
	ResourceOrigin pulumi.StringPtrInput `pulumi:"resourceOrigin"`
	// Resource type. e.g. "Microsoft.Compute/virtualMachines"
	ResourceType pulumi.StringPtrInput `pulumi:"resourceType"`
}

func (ResourceMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceMetadata)(nil)).Elem()
}

func (i ResourceMetadataArgs) ToResourceMetadataOutput() ResourceMetadataOutput {
	return i.ToResourceMetadataOutputWithContext(context.Background())
}

func (i ResourceMetadataArgs) ToResourceMetadataOutputWithContext(ctx context.Context) ResourceMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceMetadataOutput)
}

// ResourceMetadataArrayInput is an input type that accepts ResourceMetadataArray and ResourceMetadataArrayOutput values.
// You can construct a concrete instance of `ResourceMetadataArrayInput` via:
//
//	ResourceMetadataArray{ ResourceMetadataArgs{...} }
type ResourceMetadataArrayInput interface {
	pulumi.Input

	ToResourceMetadataArrayOutput() ResourceMetadataArrayOutput
	ToResourceMetadataArrayOutputWithContext(context.Context) ResourceMetadataArrayOutput
}

type ResourceMetadataArray []ResourceMetadataInput

func (ResourceMetadataArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResourceMetadata)(nil)).Elem()
}

func (i ResourceMetadataArray) ToResourceMetadataArrayOutput() ResourceMetadataArrayOutput {
	return i.ToResourceMetadataArrayOutputWithContext(context.Background())
}

func (i ResourceMetadataArray) ToResourceMetadataArrayOutputWithContext(ctx context.Context) ResourceMetadataArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceMetadataArrayOutput)
}

// Single resource Id's metadata.
type ResourceMetadataOutput struct{ *pulumi.OutputState }

func (ResourceMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceMetadata)(nil)).Elem()
}

func (o ResourceMetadataOutput) ToResourceMetadataOutput() ResourceMetadataOutput {
	return o
}

func (o ResourceMetadataOutput) ToResourceMetadataOutputWithContext(ctx context.Context) ResourceMetadataOutput {
	return o
}

// Account Id. For example - the AWS account id.
func (o ResourceMetadataOutput) AccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceMetadata) *string { return v.AccountId }).(pulumi.StringPtrOutput)
}

// Resource Id - e.g. "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rg1/providers/Microsoft.Compute/virtualMachines/vm1".
func (o ResourceMetadataOutput) ResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v ResourceMetadata) string { return v.ResourceId }).(pulumi.StringOutput)
}

// Resource kind.
func (o ResourceMetadataOutput) ResourceKind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceMetadata) *string { return v.ResourceKind }).(pulumi.StringPtrOutput)
}

// Resource Origin.
func (o ResourceMetadataOutput) ResourceOrigin() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceMetadata) *string { return v.ResourceOrigin }).(pulumi.StringPtrOutput)
}

// Resource type. e.g. "Microsoft.Compute/virtualMachines"
func (o ResourceMetadataOutput) ResourceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceMetadata) *string { return v.ResourceType }).(pulumi.StringPtrOutput)
}

type ResourceMetadataArrayOutput struct{ *pulumi.OutputState }

func (ResourceMetadataArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResourceMetadata)(nil)).Elem()
}

func (o ResourceMetadataArrayOutput) ToResourceMetadataArrayOutput() ResourceMetadataArrayOutput {
	return o
}

func (o ResourceMetadataArrayOutput) ToResourceMetadataArrayOutputWithContext(ctx context.Context) ResourceMetadataArrayOutput {
	return o
}

func (o ResourceMetadataArrayOutput) Index(i pulumi.IntInput) ResourceMetadataOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ResourceMetadata {
		return vs[0].([]ResourceMetadata)[vs[1].(int)]
	}).(ResourceMetadataOutput)
}

// Single resource Id's metadata.
type ResourceMetadataResponse struct {
	// Account Id. For example - the AWS account id.
	AccountId *string `pulumi:"accountId"`
	// Resource Id - e.g. "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rg1/providers/Microsoft.Compute/virtualMachines/vm1".
	ResourceId string `pulumi:"resourceId"`
	// Resource kind.
	ResourceKind *string `pulumi:"resourceKind"`
	// Resource Origin.
	ResourceOrigin *string `pulumi:"resourceOrigin"`
	// Resource type. e.g. "Microsoft.Compute/virtualMachines"
	ResourceType *string `pulumi:"resourceType"`
}

// Single resource Id's metadata.
type ResourceMetadataResponseOutput struct{ *pulumi.OutputState }

func (ResourceMetadataResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceMetadataResponse)(nil)).Elem()
}

func (o ResourceMetadataResponseOutput) ToResourceMetadataResponseOutput() ResourceMetadataResponseOutput {
	return o
}

func (o ResourceMetadataResponseOutput) ToResourceMetadataResponseOutputWithContext(ctx context.Context) ResourceMetadataResponseOutput {
	return o
}

// Account Id. For example - the AWS account id.
func (o ResourceMetadataResponseOutput) AccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceMetadataResponse) *string { return v.AccountId }).(pulumi.StringPtrOutput)
}

// Resource Id - e.g. "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rg1/providers/Microsoft.Compute/virtualMachines/vm1".
func (o ResourceMetadataResponseOutput) ResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v ResourceMetadataResponse) string { return v.ResourceId }).(pulumi.StringOutput)
}

// Resource kind.
func (o ResourceMetadataResponseOutput) ResourceKind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceMetadataResponse) *string { return v.ResourceKind }).(pulumi.StringPtrOutput)
}

// Resource Origin.
func (o ResourceMetadataResponseOutput) ResourceOrigin() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceMetadataResponse) *string { return v.ResourceOrigin }).(pulumi.StringPtrOutput)
}

// Resource type. e.g. "Microsoft.Compute/virtualMachines"
func (o ResourceMetadataResponseOutput) ResourceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceMetadataResponse) *string { return v.ResourceType }).(pulumi.StringPtrOutput)
}

type ResourceMetadataResponseArrayOutput struct{ *pulumi.OutputState }

func (ResourceMetadataResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResourceMetadataResponse)(nil)).Elem()
}

func (o ResourceMetadataResponseArrayOutput) ToResourceMetadataResponseArrayOutput() ResourceMetadataResponseArrayOutput {
	return o
}

func (o ResourceMetadataResponseArrayOutput) ToResourceMetadataResponseArrayOutputWithContext(ctx context.Context) ResourceMetadataResponseArrayOutput {
	return o
}

func (o ResourceMetadataResponseArrayOutput) Index(i pulumi.IntInput) ResourceMetadataResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ResourceMetadataResponse {
		return vs[0].([]ResourceMetadataResponse)[vs[1].(int)]
	}).(ResourceMetadataResponseOutput)
}

// Scoping answer.
type ScopingAnswer struct {
	// Question answer value list.
	Answers []string `pulumi:"answers"`
	// Question id.
	QuestionId string `pulumi:"questionId"`
}

// ScopingAnswerInput is an input type that accepts ScopingAnswerArgs and ScopingAnswerOutput values.
// You can construct a concrete instance of `ScopingAnswerInput` via:
//
//	ScopingAnswerArgs{...}
type ScopingAnswerInput interface {
	pulumi.Input

	ToScopingAnswerOutput() ScopingAnswerOutput
	ToScopingAnswerOutputWithContext(context.Context) ScopingAnswerOutput
}

// Scoping answer.
type ScopingAnswerArgs struct {
	// Question answer value list.
	Answers pulumi.StringArrayInput `pulumi:"answers"`
	// Question id.
	QuestionId pulumi.StringInput `pulumi:"questionId"`
}

func (ScopingAnswerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScopingAnswer)(nil)).Elem()
}

func (i ScopingAnswerArgs) ToScopingAnswerOutput() ScopingAnswerOutput {
	return i.ToScopingAnswerOutputWithContext(context.Background())
}

func (i ScopingAnswerArgs) ToScopingAnswerOutputWithContext(ctx context.Context) ScopingAnswerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScopingAnswerOutput)
}

// ScopingAnswerArrayInput is an input type that accepts ScopingAnswerArray and ScopingAnswerArrayOutput values.
// You can construct a concrete instance of `ScopingAnswerArrayInput` via:
//
//	ScopingAnswerArray{ ScopingAnswerArgs{...} }
type ScopingAnswerArrayInput interface {
	pulumi.Input

	ToScopingAnswerArrayOutput() ScopingAnswerArrayOutput
	ToScopingAnswerArrayOutputWithContext(context.Context) ScopingAnswerArrayOutput
}

type ScopingAnswerArray []ScopingAnswerInput

func (ScopingAnswerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ScopingAnswer)(nil)).Elem()
}

func (i ScopingAnswerArray) ToScopingAnswerArrayOutput() ScopingAnswerArrayOutput {
	return i.ToScopingAnswerArrayOutputWithContext(context.Background())
}

func (i ScopingAnswerArray) ToScopingAnswerArrayOutputWithContext(ctx context.Context) ScopingAnswerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScopingAnswerArrayOutput)
}

// Scoping answer.
type ScopingAnswerOutput struct{ *pulumi.OutputState }

func (ScopingAnswerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScopingAnswer)(nil)).Elem()
}

func (o ScopingAnswerOutput) ToScopingAnswerOutput() ScopingAnswerOutput {
	return o
}

func (o ScopingAnswerOutput) ToScopingAnswerOutputWithContext(ctx context.Context) ScopingAnswerOutput {
	return o
}

// Question answer value list.
func (o ScopingAnswerOutput) Answers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ScopingAnswer) []string { return v.Answers }).(pulumi.StringArrayOutput)
}

// Question id.
func (o ScopingAnswerOutput) QuestionId() pulumi.StringOutput {
	return o.ApplyT(func(v ScopingAnswer) string { return v.QuestionId }).(pulumi.StringOutput)
}

type ScopingAnswerArrayOutput struct{ *pulumi.OutputState }

func (ScopingAnswerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ScopingAnswer)(nil)).Elem()
}

func (o ScopingAnswerArrayOutput) ToScopingAnswerArrayOutput() ScopingAnswerArrayOutput {
	return o
}

func (o ScopingAnswerArrayOutput) ToScopingAnswerArrayOutputWithContext(ctx context.Context) ScopingAnswerArrayOutput {
	return o
}

func (o ScopingAnswerArrayOutput) Index(i pulumi.IntInput) ScopingAnswerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ScopingAnswer {
		return vs[0].([]ScopingAnswer)[vs[1].(int)]
	}).(ScopingAnswerOutput)
}

// Scoping answer.
type ScopingAnswerResponse struct {
	// Question answer value list.
	Answers []string `pulumi:"answers"`
	// Question id.
	QuestionId string `pulumi:"questionId"`
}

// Scoping answer.
type ScopingAnswerResponseOutput struct{ *pulumi.OutputState }

func (ScopingAnswerResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScopingAnswerResponse)(nil)).Elem()
}

func (o ScopingAnswerResponseOutput) ToScopingAnswerResponseOutput() ScopingAnswerResponseOutput {
	return o
}

func (o ScopingAnswerResponseOutput) ToScopingAnswerResponseOutputWithContext(ctx context.Context) ScopingAnswerResponseOutput {
	return o
}

// Question answer value list.
func (o ScopingAnswerResponseOutput) Answers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ScopingAnswerResponse) []string { return v.Answers }).(pulumi.StringArrayOutput)
}

// Question id.
func (o ScopingAnswerResponseOutput) QuestionId() pulumi.StringOutput {
	return o.ApplyT(func(v ScopingAnswerResponse) string { return v.QuestionId }).(pulumi.StringOutput)
}

type ScopingAnswerResponseArrayOutput struct{ *pulumi.OutputState }

func (ScopingAnswerResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ScopingAnswerResponse)(nil)).Elem()
}

func (o ScopingAnswerResponseArrayOutput) ToScopingAnswerResponseArrayOutput() ScopingAnswerResponseArrayOutput {
	return o
}

func (o ScopingAnswerResponseArrayOutput) ToScopingAnswerResponseArrayOutputWithContext(ctx context.Context) ScopingAnswerResponseArrayOutput {
	return o
}

func (o ScopingAnswerResponseArrayOutput) Index(i pulumi.IntInput) ScopingAnswerResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ScopingAnswerResponse {
		return vs[0].([]ScopingAnswerResponse)[vs[1].(int)]
	}).(ScopingAnswerResponseOutput)
}

// The definition of a scoping question.
type ScopingQuestionResponse struct {
	// Input type of the question answer.
	InputType string `pulumi:"inputType"`
	// Option id list.
	OptionIds []string `pulumi:"optionIds"`
	// Question id.
	QuestionId string `pulumi:"questionId"`
	// The rule of the question.
	Rules []string `pulumi:"rules"`
	// The answer value to show the sub questions.
	ShowSubQuestionsValue string `pulumi:"showSubQuestionsValue"`
	// Superior question id.
	SuperiorQuestionId string `pulumi:"superiorQuestionId"`
}

// The definition of a scoping question.
type ScopingQuestionResponseOutput struct{ *pulumi.OutputState }

func (ScopingQuestionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScopingQuestionResponse)(nil)).Elem()
}

func (o ScopingQuestionResponseOutput) ToScopingQuestionResponseOutput() ScopingQuestionResponseOutput {
	return o
}

func (o ScopingQuestionResponseOutput) ToScopingQuestionResponseOutputWithContext(ctx context.Context) ScopingQuestionResponseOutput {
	return o
}

// Input type of the question answer.
func (o ScopingQuestionResponseOutput) InputType() pulumi.StringOutput {
	return o.ApplyT(func(v ScopingQuestionResponse) string { return v.InputType }).(pulumi.StringOutput)
}

// Option id list.
func (o ScopingQuestionResponseOutput) OptionIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ScopingQuestionResponse) []string { return v.OptionIds }).(pulumi.StringArrayOutput)
}

// Question id.
func (o ScopingQuestionResponseOutput) QuestionId() pulumi.StringOutput {
	return o.ApplyT(func(v ScopingQuestionResponse) string { return v.QuestionId }).(pulumi.StringOutput)
}

// The rule of the question.
func (o ScopingQuestionResponseOutput) Rules() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ScopingQuestionResponse) []string { return v.Rules }).(pulumi.StringArrayOutput)
}

// The answer value to show the sub questions.
func (o ScopingQuestionResponseOutput) ShowSubQuestionsValue() pulumi.StringOutput {
	return o.ApplyT(func(v ScopingQuestionResponse) string { return v.ShowSubQuestionsValue }).(pulumi.StringOutput)
}

// Superior question id.
func (o ScopingQuestionResponseOutput) SuperiorQuestionId() pulumi.StringOutput {
	return o.ApplyT(func(v ScopingQuestionResponse) string { return v.SuperiorQuestionId }).(pulumi.StringOutput)
}

type ScopingQuestionResponseArrayOutput struct{ *pulumi.OutputState }

func (ScopingQuestionResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ScopingQuestionResponse)(nil)).Elem()
}

func (o ScopingQuestionResponseArrayOutput) ToScopingQuestionResponseArrayOutput() ScopingQuestionResponseArrayOutput {
	return o
}

func (o ScopingQuestionResponseArrayOutput) ToScopingQuestionResponseArrayOutputWithContext(ctx context.Context) ScopingQuestionResponseArrayOutput {
	return o
}

func (o ScopingQuestionResponseArrayOutput) Index(i pulumi.IntInput) ScopingQuestionResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ScopingQuestionResponse {
		return vs[0].([]ScopingQuestionResponse)[vs[1].(int)]
	}).(ScopingQuestionResponseOutput)
}

// Single status.
type StatusItemResponse struct {
	// Status name - e.g. "Active", "Failed".
	StatusName *string `pulumi:"statusName"`
	// Status value. e.g. "100", or "100%".
	StatusValue *string `pulumi:"statusValue"`
}

// Single status.
type StatusItemResponseOutput struct{ *pulumi.OutputState }

func (StatusItemResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StatusItemResponse)(nil)).Elem()
}

func (o StatusItemResponseOutput) ToStatusItemResponseOutput() StatusItemResponseOutput {
	return o
}

func (o StatusItemResponseOutput) ToStatusItemResponseOutputWithContext(ctx context.Context) StatusItemResponseOutput {
	return o
}

// Status name - e.g. "Active", "Failed".
func (o StatusItemResponseOutput) StatusName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StatusItemResponse) *string { return v.StatusName }).(pulumi.StringPtrOutput)
}

// Status value. e.g. "100", or "100%".
func (o StatusItemResponseOutput) StatusValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StatusItemResponse) *string { return v.StatusValue }).(pulumi.StringPtrOutput)
}

type StatusItemResponseArrayOutput struct{ *pulumi.OutputState }

func (StatusItemResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StatusItemResponse)(nil)).Elem()
}

func (o StatusItemResponseArrayOutput) ToStatusItemResponseArrayOutput() StatusItemResponseArrayOutput {
	return o
}

func (o StatusItemResponseArrayOutput) ToStatusItemResponseArrayOutputWithContext(ctx context.Context) StatusItemResponseArrayOutput {
	return o
}

func (o StatusItemResponseArrayOutput) Index(i pulumi.IntInput) StatusItemResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StatusItemResponse {
		return vs[0].([]StatusItemResponse)[vs[1].(int)]
	}).(StatusItemResponseOutput)
}

// The information of 'bring your own storage' account binding to the report
type StorageInfo struct {
	// 'bring your own storage' account name
	AccountName *string `pulumi:"accountName"`
	// The region of 'bring your own storage' account
	Location *string `pulumi:"location"`
	// The resourceGroup which 'bring your own storage' account belongs to
	ResourceGroup *string `pulumi:"resourceGroup"`
	// The subscription id which 'bring your own storage' account belongs to
	SubscriptionId *string `pulumi:"subscriptionId"`
}

// StorageInfoInput is an input type that accepts StorageInfoArgs and StorageInfoOutput values.
// You can construct a concrete instance of `StorageInfoInput` via:
//
//	StorageInfoArgs{...}
type StorageInfoInput interface {
	pulumi.Input

	ToStorageInfoOutput() StorageInfoOutput
	ToStorageInfoOutputWithContext(context.Context) StorageInfoOutput
}

// The information of 'bring your own storage' account binding to the report
type StorageInfoArgs struct {
	// 'bring your own storage' account name
	AccountName pulumi.StringPtrInput `pulumi:"accountName"`
	// The region of 'bring your own storage' account
	Location pulumi.StringPtrInput `pulumi:"location"`
	// The resourceGroup which 'bring your own storage' account belongs to
	ResourceGroup pulumi.StringPtrInput `pulumi:"resourceGroup"`
	// The subscription id which 'bring your own storage' account belongs to
	SubscriptionId pulumi.StringPtrInput `pulumi:"subscriptionId"`
}

func (StorageInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageInfo)(nil)).Elem()
}

func (i StorageInfoArgs) ToStorageInfoOutput() StorageInfoOutput {
	return i.ToStorageInfoOutputWithContext(context.Background())
}

func (i StorageInfoArgs) ToStorageInfoOutputWithContext(ctx context.Context) StorageInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageInfoOutput)
}

func (i StorageInfoArgs) ToStorageInfoPtrOutput() StorageInfoPtrOutput {
	return i.ToStorageInfoPtrOutputWithContext(context.Background())
}

func (i StorageInfoArgs) ToStorageInfoPtrOutputWithContext(ctx context.Context) StorageInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageInfoOutput).ToStorageInfoPtrOutputWithContext(ctx)
}

// StorageInfoPtrInput is an input type that accepts StorageInfoArgs, StorageInfoPtr and StorageInfoPtrOutput values.
// You can construct a concrete instance of `StorageInfoPtrInput` via:
//
//	        StorageInfoArgs{...}
//
//	or:
//
//	        nil
type StorageInfoPtrInput interface {
	pulumi.Input

	ToStorageInfoPtrOutput() StorageInfoPtrOutput
	ToStorageInfoPtrOutputWithContext(context.Context) StorageInfoPtrOutput
}

type storageInfoPtrType StorageInfoArgs

func StorageInfoPtr(v *StorageInfoArgs) StorageInfoPtrInput {
	return (*storageInfoPtrType)(v)
}

func (*storageInfoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageInfo)(nil)).Elem()
}

func (i *storageInfoPtrType) ToStorageInfoPtrOutput() StorageInfoPtrOutput {
	return i.ToStorageInfoPtrOutputWithContext(context.Background())
}

func (i *storageInfoPtrType) ToStorageInfoPtrOutputWithContext(ctx context.Context) StorageInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageInfoPtrOutput)
}

// The information of 'bring your own storage' account binding to the report
type StorageInfoOutput struct{ *pulumi.OutputState }

func (StorageInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageInfo)(nil)).Elem()
}

func (o StorageInfoOutput) ToStorageInfoOutput() StorageInfoOutput {
	return o
}

func (o StorageInfoOutput) ToStorageInfoOutputWithContext(ctx context.Context) StorageInfoOutput {
	return o
}

func (o StorageInfoOutput) ToStorageInfoPtrOutput() StorageInfoPtrOutput {
	return o.ToStorageInfoPtrOutputWithContext(context.Background())
}

func (o StorageInfoOutput) ToStorageInfoPtrOutputWithContext(ctx context.Context) StorageInfoPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v StorageInfo) *StorageInfo {
		return &v
	}).(StorageInfoPtrOutput)
}

// 'bring your own storage' account name
func (o StorageInfoOutput) AccountName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageInfo) *string { return v.AccountName }).(pulumi.StringPtrOutput)
}

// The region of 'bring your own storage' account
func (o StorageInfoOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageInfo) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// The resourceGroup which 'bring your own storage' account belongs to
func (o StorageInfoOutput) ResourceGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageInfo) *string { return v.ResourceGroup }).(pulumi.StringPtrOutput)
}

// The subscription id which 'bring your own storage' account belongs to
func (o StorageInfoOutput) SubscriptionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageInfo) *string { return v.SubscriptionId }).(pulumi.StringPtrOutput)
}

type StorageInfoPtrOutput struct{ *pulumi.OutputState }

func (StorageInfoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageInfo)(nil)).Elem()
}

func (o StorageInfoPtrOutput) ToStorageInfoPtrOutput() StorageInfoPtrOutput {
	return o
}

func (o StorageInfoPtrOutput) ToStorageInfoPtrOutputWithContext(ctx context.Context) StorageInfoPtrOutput {
	return o
}

func (o StorageInfoPtrOutput) Elem() StorageInfoOutput {
	return o.ApplyT(func(v *StorageInfo) StorageInfo {
		if v != nil {
			return *v
		}
		var ret StorageInfo
		return ret
	}).(StorageInfoOutput)
}

// 'bring your own storage' account name
func (o StorageInfoPtrOutput) AccountName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageInfo) *string {
		if v == nil {
			return nil
		}
		return v.AccountName
	}).(pulumi.StringPtrOutput)
}

// The region of 'bring your own storage' account
func (o StorageInfoPtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageInfo) *string {
		if v == nil {
			return nil
		}
		return v.Location
	}).(pulumi.StringPtrOutput)
}

// The resourceGroup which 'bring your own storage' account belongs to
func (o StorageInfoPtrOutput) ResourceGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageInfo) *string {
		if v == nil {
			return nil
		}
		return v.ResourceGroup
	}).(pulumi.StringPtrOutput)
}

// The subscription id which 'bring your own storage' account belongs to
func (o StorageInfoPtrOutput) SubscriptionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageInfo) *string {
		if v == nil {
			return nil
		}
		return v.SubscriptionId
	}).(pulumi.StringPtrOutput)
}

// The information of 'bring your own storage' account binding to the report
type StorageInfoResponse struct {
	// 'bring your own storage' account name
	AccountName *string `pulumi:"accountName"`
	// The region of 'bring your own storage' account
	Location *string `pulumi:"location"`
	// The resourceGroup which 'bring your own storage' account belongs to
	ResourceGroup *string `pulumi:"resourceGroup"`
	// The subscription id which 'bring your own storage' account belongs to
	SubscriptionId *string `pulumi:"subscriptionId"`
}

// The information of 'bring your own storage' account binding to the report
type StorageInfoResponseOutput struct{ *pulumi.OutputState }

func (StorageInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageInfoResponse)(nil)).Elem()
}

func (o StorageInfoResponseOutput) ToStorageInfoResponseOutput() StorageInfoResponseOutput {
	return o
}

func (o StorageInfoResponseOutput) ToStorageInfoResponseOutputWithContext(ctx context.Context) StorageInfoResponseOutput {
	return o
}

// 'bring your own storage' account name
func (o StorageInfoResponseOutput) AccountName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageInfoResponse) *string { return v.AccountName }).(pulumi.StringPtrOutput)
}

// The region of 'bring your own storage' account
func (o StorageInfoResponseOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageInfoResponse) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// The resourceGroup which 'bring your own storage' account belongs to
func (o StorageInfoResponseOutput) ResourceGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageInfoResponse) *string { return v.ResourceGroup }).(pulumi.StringPtrOutput)
}

// The subscription id which 'bring your own storage' account belongs to
func (o StorageInfoResponseOutput) SubscriptionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageInfoResponse) *string { return v.SubscriptionId }).(pulumi.StringPtrOutput)
}

type StorageInfoResponsePtrOutput struct{ *pulumi.OutputState }

func (StorageInfoResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageInfoResponse)(nil)).Elem()
}

func (o StorageInfoResponsePtrOutput) ToStorageInfoResponsePtrOutput() StorageInfoResponsePtrOutput {
	return o
}

func (o StorageInfoResponsePtrOutput) ToStorageInfoResponsePtrOutputWithContext(ctx context.Context) StorageInfoResponsePtrOutput {
	return o
}

func (o StorageInfoResponsePtrOutput) Elem() StorageInfoResponseOutput {
	return o.ApplyT(func(v *StorageInfoResponse) StorageInfoResponse {
		if v != nil {
			return *v
		}
		var ret StorageInfoResponse
		return ret
	}).(StorageInfoResponseOutput)
}

// 'bring your own storage' account name
func (o StorageInfoResponsePtrOutput) AccountName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.AccountName
	}).(pulumi.StringPtrOutput)
}

// The region of 'bring your own storage' account
func (o StorageInfoResponsePtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.Location
	}).(pulumi.StringPtrOutput)
}

// The resourceGroup which 'bring your own storage' account belongs to
func (o StorageInfoResponsePtrOutput) ResourceGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.ResourceGroup
	}).(pulumi.StringPtrOutput)
}

// The subscription id which 'bring your own storage' account belongs to
func (o StorageInfoResponsePtrOutput) SubscriptionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.SubscriptionId
	}).(pulumi.StringPtrOutput)
}

type StorageInfoResponseArrayOutput struct{ *pulumi.OutputState }

func (StorageInfoResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StorageInfoResponse)(nil)).Elem()
}

func (o StorageInfoResponseArrayOutput) ToStorageInfoResponseArrayOutput() StorageInfoResponseArrayOutput {
	return o
}

func (o StorageInfoResponseArrayOutput) ToStorageInfoResponseArrayOutputWithContext(ctx context.Context) StorageInfoResponseArrayOutput {
	return o
}

func (o StorageInfoResponseArrayOutput) Index(i pulumi.IntInput) StorageInfoResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StorageInfoResponse {
		return vs[0].([]StorageInfoResponse)[vs[1].(int)]
	}).(StorageInfoResponseOutput)
}

// Metadata pertaining to creation and last modification of the resource.
type SystemDataResponse struct {
	// The timestamp of resource creation (UTC).
	CreatedAt *string `pulumi:"createdAt"`
	// The identity that created the resource.
	CreatedBy *string `pulumi:"createdBy"`
	// The type of identity that created the resource.
	CreatedByType *string `pulumi:"createdByType"`
	// The timestamp of resource last modification (UTC)
	LastModifiedAt *string `pulumi:"lastModifiedAt"`
	// The identity that last modified the resource.
	LastModifiedBy *string `pulumi:"lastModifiedBy"`
	// The type of identity that last modified the resource.
	LastModifiedByType *string `pulumi:"lastModifiedByType"`
}

// Metadata pertaining to creation and last modification of the resource.
type SystemDataResponseOutput struct{ *pulumi.OutputState }

func (SystemDataResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemDataResponse)(nil)).Elem()
}

func (o SystemDataResponseOutput) ToSystemDataResponseOutput() SystemDataResponseOutput {
	return o
}

func (o SystemDataResponseOutput) ToSystemDataResponseOutputWithContext(ctx context.Context) SystemDataResponseOutput {
	return o
}

// The timestamp of resource creation (UTC).
func (o SystemDataResponseOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedAt }).(pulumi.StringPtrOutput)
}

// The identity that created the resource.
func (o SystemDataResponseOutput) CreatedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedBy }).(pulumi.StringPtrOutput)
}

// The type of identity that created the resource.
func (o SystemDataResponseOutput) CreatedByType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedByType }).(pulumi.StringPtrOutput)
}

// The timestamp of resource last modification (UTC)
func (o SystemDataResponseOutput) LastModifiedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedAt }).(pulumi.StringPtrOutput)
}

// The identity that last modified the resource.
func (o SystemDataResponseOutput) LastModifiedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedBy }).(pulumi.StringPtrOutput)
}

// The type of identity that last modified the resource.
func (o SystemDataResponseOutput) LastModifiedByType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedByType }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(CertSyncRecordResponseOutput{})
	pulumi.RegisterOutputType(CertSyncRecordResponseArrayOutput{})
	pulumi.RegisterOutputType(ControlSyncRecordResponseOutput{})
	pulumi.RegisterOutputType(ControlSyncRecordResponseArrayOutput{})
	pulumi.RegisterOutputType(OverviewStatusResponseOutput{})
	pulumi.RegisterOutputType(ReportComplianceStatusResponseOutput{})
	pulumi.RegisterOutputType(ResourceMetadataOutput{})
	pulumi.RegisterOutputType(ResourceMetadataArrayOutput{})
	pulumi.RegisterOutputType(ResourceMetadataResponseOutput{})
	pulumi.RegisterOutputType(ResourceMetadataResponseArrayOutput{})
	pulumi.RegisterOutputType(ScopingAnswerOutput{})
	pulumi.RegisterOutputType(ScopingAnswerArrayOutput{})
	pulumi.RegisterOutputType(ScopingAnswerResponseOutput{})
	pulumi.RegisterOutputType(ScopingAnswerResponseArrayOutput{})
	pulumi.RegisterOutputType(ScopingQuestionResponseOutput{})
	pulumi.RegisterOutputType(ScopingQuestionResponseArrayOutput{})
	pulumi.RegisterOutputType(StatusItemResponseOutput{})
	pulumi.RegisterOutputType(StatusItemResponseArrayOutput{})
	pulumi.RegisterOutputType(StorageInfoOutput{})
	pulumi.RegisterOutputType(StorageInfoPtrOutput{})
	pulumi.RegisterOutputType(StorageInfoResponseOutput{})
	pulumi.RegisterOutputType(StorageInfoResponsePtrOutput{})
	pulumi.RegisterOutputType(StorageInfoResponseArrayOutput{})
	pulumi.RegisterOutputType(SystemDataResponseOutput{})
}
