// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20240627

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// A class represent an AppComplianceAutomation webhook resource.
type Webhook struct {
	pulumi.CustomResourceState

	// content type
	ContentType pulumi.StringPtrOutput `pulumi:"contentType"`
	// webhook deliveryStatus
	DeliveryStatus pulumi.StringOutput `pulumi:"deliveryStatus"`
	// whether to enable ssl verification
	EnableSslVerification pulumi.StringPtrOutput `pulumi:"enableSslVerification"`
	// under which event notification should be sent.
	Events pulumi.StringArrayOutput `pulumi:"events"`
	// The name of the resource
	Name pulumi.StringOutput `pulumi:"name"`
	// webhook payload url
	PayloadUrl pulumi.StringPtrOutput `pulumi:"payloadUrl"`
	// Azure Resource Provisioning State
	ProvisioningState pulumi.StringOutput `pulumi:"provisioningState"`
	// whether to send notification under any event.
	SendAllEvents pulumi.StringPtrOutput `pulumi:"sendAllEvents"`
	// Webhook status.
	Status pulumi.StringPtrOutput `pulumi:"status"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponseOutput `pulumi:"systemData"`
	// Tenant id.
	TenantId pulumi.StringOutput `pulumi:"tenantId"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type pulumi.StringOutput `pulumi:"type"`
	// whether to update webhookKey.
	UpdateWebhookKey pulumi.StringPtrOutput `pulumi:"updateWebhookKey"`
	// Webhook id in database.
	WebhookId pulumi.StringOutput `pulumi:"webhookId"`
	// webhook secret token. If not set, this field value is null; otherwise, please set a string value.
	WebhookKey pulumi.StringPtrOutput `pulumi:"webhookKey"`
	// whether webhookKey is enabled.
	WebhookKeyEnabled pulumi.StringOutput `pulumi:"webhookKeyEnabled"`
}

// NewWebhook registers a new resource with the given unique name, arguments, and options.
func NewWebhook(ctx *pulumi.Context,
	name string, args *WebhookArgs, opts ...pulumi.ResourceOption) (*Webhook, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ReportName == nil {
		return nil, errors.New("invalid value for required argument 'ReportName'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:appcomplianceautomation:Webhook"),
		},
	})
	opts = append(opts, aliases)
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource Webhook
	err := ctx.RegisterResource("azure-native:appcomplianceautomation/v20240627:Webhook", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetWebhook gets an existing Webhook resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetWebhook(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *WebhookState, opts ...pulumi.ResourceOption) (*Webhook, error) {
	var resource Webhook
	err := ctx.ReadResource("azure-native:appcomplianceautomation/v20240627:Webhook", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Webhook resources.
type webhookState struct {
}

type WebhookState struct {
}

func (WebhookState) ElementType() reflect.Type {
	return reflect.TypeOf((*webhookState)(nil)).Elem()
}

type webhookArgs struct {
	// content type
	ContentType *string `pulumi:"contentType"`
	// whether to enable ssl verification
	EnableSslVerification *string `pulumi:"enableSslVerification"`
	// under which event notification should be sent.
	Events []string `pulumi:"events"`
	// webhook payload url
	PayloadUrl *string `pulumi:"payloadUrl"`
	// Report Name.
	ReportName string `pulumi:"reportName"`
	// whether to send notification under any event.
	SendAllEvents *string `pulumi:"sendAllEvents"`
	// Webhook status.
	Status *string `pulumi:"status"`
	// whether to update webhookKey.
	UpdateWebhookKey *string `pulumi:"updateWebhookKey"`
	// webhook secret token. If not set, this field value is null; otherwise, please set a string value.
	WebhookKey *string `pulumi:"webhookKey"`
	// Webhook Name.
	WebhookName *string `pulumi:"webhookName"`
}

// The set of arguments for constructing a Webhook resource.
type WebhookArgs struct {
	// content type
	ContentType pulumi.StringPtrInput
	// whether to enable ssl verification
	EnableSslVerification pulumi.StringPtrInput
	// under which event notification should be sent.
	Events pulumi.StringArrayInput
	// webhook payload url
	PayloadUrl pulumi.StringPtrInput
	// Report Name.
	ReportName pulumi.StringInput
	// whether to send notification under any event.
	SendAllEvents pulumi.StringPtrInput
	// Webhook status.
	Status pulumi.StringPtrInput
	// whether to update webhookKey.
	UpdateWebhookKey pulumi.StringPtrInput
	// webhook secret token. If not set, this field value is null; otherwise, please set a string value.
	WebhookKey pulumi.StringPtrInput
	// Webhook Name.
	WebhookName pulumi.StringPtrInput
}

func (WebhookArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*webhookArgs)(nil)).Elem()
}

type WebhookInput interface {
	pulumi.Input

	ToWebhookOutput() WebhookOutput
	ToWebhookOutputWithContext(ctx context.Context) WebhookOutput
}

func (*Webhook) ElementType() reflect.Type {
	return reflect.TypeOf((**Webhook)(nil)).Elem()
}

func (i *Webhook) ToWebhookOutput() WebhookOutput {
	return i.ToWebhookOutputWithContext(context.Background())
}

func (i *Webhook) ToWebhookOutputWithContext(ctx context.Context) WebhookOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebhookOutput)
}

type WebhookOutput struct{ *pulumi.OutputState }

func (WebhookOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Webhook)(nil)).Elem()
}

func (o WebhookOutput) ToWebhookOutput() WebhookOutput {
	return o
}

func (o WebhookOutput) ToWebhookOutputWithContext(ctx context.Context) WebhookOutput {
	return o
}

// content type
func (o WebhookOutput) ContentType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Webhook) pulumi.StringPtrOutput { return v.ContentType }).(pulumi.StringPtrOutput)
}

// webhook deliveryStatus
func (o WebhookOutput) DeliveryStatus() pulumi.StringOutput {
	return o.ApplyT(func(v *Webhook) pulumi.StringOutput { return v.DeliveryStatus }).(pulumi.StringOutput)
}

// whether to enable ssl verification
func (o WebhookOutput) EnableSslVerification() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Webhook) pulumi.StringPtrOutput { return v.EnableSslVerification }).(pulumi.StringPtrOutput)
}

// under which event notification should be sent.
func (o WebhookOutput) Events() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Webhook) pulumi.StringArrayOutput { return v.Events }).(pulumi.StringArrayOutput)
}

// The name of the resource
func (o WebhookOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Webhook) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// webhook payload url
func (o WebhookOutput) PayloadUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Webhook) pulumi.StringPtrOutput { return v.PayloadUrl }).(pulumi.StringPtrOutput)
}

// Azure Resource Provisioning State
func (o WebhookOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v *Webhook) pulumi.StringOutput { return v.ProvisioningState }).(pulumi.StringOutput)
}

// whether to send notification under any event.
func (o WebhookOutput) SendAllEvents() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Webhook) pulumi.StringPtrOutput { return v.SendAllEvents }).(pulumi.StringPtrOutput)
}

// Webhook status.
func (o WebhookOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Webhook) pulumi.StringPtrOutput { return v.Status }).(pulumi.StringPtrOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o WebhookOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v *Webhook) SystemDataResponseOutput { return v.SystemData }).(SystemDataResponseOutput)
}

// Tenant id.
func (o WebhookOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v *Webhook) pulumi.StringOutput { return v.TenantId }).(pulumi.StringOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o WebhookOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *Webhook) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

// whether to update webhookKey.
func (o WebhookOutput) UpdateWebhookKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Webhook) pulumi.StringPtrOutput { return v.UpdateWebhookKey }).(pulumi.StringPtrOutput)
}

// Webhook id in database.
func (o WebhookOutput) WebhookId() pulumi.StringOutput {
	return o.ApplyT(func(v *Webhook) pulumi.StringOutput { return v.WebhookId }).(pulumi.StringOutput)
}

// webhook secret token. If not set, this field value is null; otherwise, please set a string value.
func (o WebhookOutput) WebhookKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Webhook) pulumi.StringPtrOutput { return v.WebhookKey }).(pulumi.StringPtrOutput)
}

// whether webhookKey is enabled.
func (o WebhookOutput) WebhookKeyEnabled() pulumi.StringOutput {
	return o.ApplyT(func(v *Webhook) pulumi.StringOutput { return v.WebhookKeyEnabled }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(WebhookOutput{})
}
