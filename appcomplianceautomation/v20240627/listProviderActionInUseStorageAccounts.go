// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20240627

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// List the storage accounts which are in use by related reports
func ListProviderActionInUseStorageAccounts(ctx *pulumi.Context, args *ListProviderActionInUseStorageAccountsArgs, opts ...pulumi.InvokeOption) (*ListProviderActionInUseStorageAccountsResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv ListProviderActionInUseStorageAccountsResult
	err := ctx.Invoke("azure-native:appcomplianceautomation/v20240627:listProviderActionInUseStorageAccounts", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type ListProviderActionInUseStorageAccountsArgs struct {
	// List of subscription ids to be query. If the list is null or empty, the API will query all the subscriptions of the user.
	SubscriptionIds []string `pulumi:"subscriptionIds"`
}

// Parameters for listing in use storage accounts operation. If subscription list is null, it will check the user's all subscriptions.
type ListProviderActionInUseStorageAccountsResult struct {
	// The storage account list which in use in related reports.
	StorageAccountList []StorageInfoResponse `pulumi:"storageAccountList"`
}

func ListProviderActionInUseStorageAccountsOutput(ctx *pulumi.Context, args ListProviderActionInUseStorageAccountsOutputArgs, opts ...pulumi.InvokeOption) ListProviderActionInUseStorageAccountsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (ListProviderActionInUseStorageAccountsResultOutput, error) {
			args := v.(ListProviderActionInUseStorageAccountsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: utilities.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("azure-native:appcomplianceautomation/v20240627:listProviderActionInUseStorageAccounts", args, ListProviderActionInUseStorageAccountsResultOutput{}, options).(ListProviderActionInUseStorageAccountsResultOutput), nil
		}).(ListProviderActionInUseStorageAccountsResultOutput)
}

type ListProviderActionInUseStorageAccountsOutputArgs struct {
	// List of subscription ids to be query. If the list is null or empty, the API will query all the subscriptions of the user.
	SubscriptionIds pulumi.StringArrayInput `pulumi:"subscriptionIds"`
}

func (ListProviderActionInUseStorageAccountsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ListProviderActionInUseStorageAccountsArgs)(nil)).Elem()
}

// Parameters for listing in use storage accounts operation. If subscription list is null, it will check the user's all subscriptions.
type ListProviderActionInUseStorageAccountsResultOutput struct{ *pulumi.OutputState }

func (ListProviderActionInUseStorageAccountsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListProviderActionInUseStorageAccountsResult)(nil)).Elem()
}

func (o ListProviderActionInUseStorageAccountsResultOutput) ToListProviderActionInUseStorageAccountsResultOutput() ListProviderActionInUseStorageAccountsResultOutput {
	return o
}

func (o ListProviderActionInUseStorageAccountsResultOutput) ToListProviderActionInUseStorageAccountsResultOutputWithContext(ctx context.Context) ListProviderActionInUseStorageAccountsResultOutput {
	return o
}

// The storage account list which in use in related reports.
func (o ListProviderActionInUseStorageAccountsResultOutput) StorageAccountList() StorageInfoResponseArrayOutput {
	return o.ApplyT(func(v ListProviderActionInUseStorageAccountsResult) []StorageInfoResponse {
		return v.StorageAccountList
	}).(StorageInfoResponseArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(ListProviderActionInUseStorageAccountsResultOutput{})
}
