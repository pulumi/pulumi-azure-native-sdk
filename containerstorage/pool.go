// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package containerstorage

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Pool resource
// Azure REST API version: 2023-03-01-preview. Prior API version in Azure Native 1.x: 2023-03-01-preview
type Pool struct {
	pulumi.CustomResourceState

	// List of resources that should have access to the pool. Typically ARM references to AKS clusters or ACI Container Groups. For local and standard this must be a single reference. For portable there can be many.
	Assignments pulumi.StringArrayOutput `pulumi:"assignments"`
	// Disk Pool Properties
	DiskPoolProperties DiskPoolPropertiesResponsePtrOutput `pulumi:"diskPoolProperties"`
	// Elastic San Pool Properties
	ElasticSanPoolProperties ElasticSanPoolPropertiesResponseOutput `pulumi:"elasticSanPoolProperties"`
	// Ephemeral Pool Properties
	EphemeralPoolProperties EphemeralPoolPropertiesResponsePtrOutput `pulumi:"ephemeralPoolProperties"`
	// The geo-location where the resource lives
	Location pulumi.StringOutput `pulumi:"location"`
	// The name of the resource
	Name pulumi.StringOutput `pulumi:"name"`
	// Initial capacity of the pool in GiB.
	PoolCapacityGiB pulumi.Float64Output `pulumi:"poolCapacityGiB"`
	// Type of the Pool: ephemeral, disk, managed, or elasticsan.
	PoolType pulumi.Float64Output `pulumi:"poolType"`
	// The status of the last operation.
	ProvisioningState pulumi.StringOutput `pulumi:"provisioningState"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponseOutput `pulumi:"systemData"`
	// Resource tags.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type pulumi.StringOutput `pulumi:"type"`
	// List of availability zones that resources can be created in.
	Zones pulumi.StringArrayOutput `pulumi:"zones"`
}

// NewPool registers a new resource with the given unique name, arguments, and options.
func NewPool(ctx *pulumi.Context,
	name string, args *PoolArgs, opts ...pulumi.ResourceOption) (*Pool, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Assignments == nil {
		return nil, errors.New("invalid value for required argument 'Assignments'")
	}
	if args.ElasticSanPoolProperties == nil {
		return nil, errors.New("invalid value for required argument 'ElasticSanPoolProperties'")
	}
	if args.PoolCapacityGiB == nil {
		return nil, errors.New("invalid value for required argument 'PoolCapacityGiB'")
	}
	if args.PoolType == nil {
		return nil, errors.New("invalid value for required argument 'PoolType'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	if args.Zones == nil {
		return nil, errors.New("invalid value for required argument 'Zones'")
	}
	if args.DiskPoolProperties != nil {
		args.DiskPoolProperties = args.DiskPoolProperties.ToDiskPoolPropertiesPtrOutput().ApplyT(func(v *DiskPoolProperties) *DiskPoolProperties { return v.Defaults() }).(DiskPoolPropertiesPtrOutput)
	}
	if args.EphemeralPoolProperties != nil {
		args.EphemeralPoolProperties = args.EphemeralPoolProperties.ToEphemeralPoolPropertiesPtrOutput().ApplyT(func(v *EphemeralPoolProperties) *EphemeralPoolProperties { return v.Defaults() }).(EphemeralPoolPropertiesPtrOutput)
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:containerstorage/v20230301preview:Pool"),
		},
	})
	opts = append(opts, aliases)
	var resource Pool
	err := ctx.RegisterResource("azure-native:containerstorage:Pool", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPool gets an existing Pool resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPool(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PoolState, opts ...pulumi.ResourceOption) (*Pool, error) {
	var resource Pool
	err := ctx.ReadResource("azure-native:containerstorage:Pool", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Pool resources.
type poolState struct {
}

type PoolState struct {
}

func (PoolState) ElementType() reflect.Type {
	return reflect.TypeOf((*poolState)(nil)).Elem()
}

type poolArgs struct {
	// List of resources that should have access to the pool. Typically ARM references to AKS clusters or ACI Container Groups. For local and standard this must be a single reference. For portable there can be many.
	Assignments []string `pulumi:"assignments"`
	// Disk Pool Properties
	DiskPoolProperties *DiskPoolProperties `pulumi:"diskPoolProperties"`
	// Elastic San Pool Properties
	ElasticSanPoolProperties ElasticSanPoolProperties `pulumi:"elasticSanPoolProperties"`
	// Ephemeral Pool Properties
	EphemeralPoolProperties *EphemeralPoolProperties `pulumi:"ephemeralPoolProperties"`
	// The geo-location where the resource lives
	Location *string `pulumi:"location"`
	// Initial capacity of the pool in GiB.
	PoolCapacityGiB float64 `pulumi:"poolCapacityGiB"`
	// Pool Object
	PoolName *string `pulumi:"poolName"`
	// Type of the Pool: ephemeral, disk, managed, or elasticsan.
	PoolType float64 `pulumi:"poolType"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// List of availability zones that resources can be created in.
	Zones []string `pulumi:"zones"`
}

// The set of arguments for constructing a Pool resource.
type PoolArgs struct {
	// List of resources that should have access to the pool. Typically ARM references to AKS clusters or ACI Container Groups. For local and standard this must be a single reference. For portable there can be many.
	Assignments pulumi.StringArrayInput
	// Disk Pool Properties
	DiskPoolProperties DiskPoolPropertiesPtrInput
	// Elastic San Pool Properties
	ElasticSanPoolProperties ElasticSanPoolPropertiesInput
	// Ephemeral Pool Properties
	EphemeralPoolProperties EphemeralPoolPropertiesPtrInput
	// The geo-location where the resource lives
	Location pulumi.StringPtrInput
	// Initial capacity of the pool in GiB.
	PoolCapacityGiB pulumi.Float64Input
	// Pool Object
	PoolName pulumi.StringPtrInput
	// Type of the Pool: ephemeral, disk, managed, or elasticsan.
	PoolType pulumi.Float64Input
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput
	// Resource tags.
	Tags pulumi.StringMapInput
	// List of availability zones that resources can be created in.
	Zones pulumi.StringArrayInput
}

func (PoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*poolArgs)(nil)).Elem()
}

type PoolInput interface {
	pulumi.Input

	ToPoolOutput() PoolOutput
	ToPoolOutputWithContext(ctx context.Context) PoolOutput
}

func (*Pool) ElementType() reflect.Type {
	return reflect.TypeOf((**Pool)(nil)).Elem()
}

func (i *Pool) ToPoolOutput() PoolOutput {
	return i.ToPoolOutputWithContext(context.Background())
}

func (i *Pool) ToPoolOutputWithContext(ctx context.Context) PoolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolOutput)
}

type PoolOutput struct{ *pulumi.OutputState }

func (PoolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Pool)(nil)).Elem()
}

func (o PoolOutput) ToPoolOutput() PoolOutput {
	return o
}

func (o PoolOutput) ToPoolOutputWithContext(ctx context.Context) PoolOutput {
	return o
}

// List of resources that should have access to the pool. Typically ARM references to AKS clusters or ACI Container Groups. For local and standard this must be a single reference. For portable there can be many.
func (o PoolOutput) Assignments() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Pool) pulumi.StringArrayOutput { return v.Assignments }).(pulumi.StringArrayOutput)
}

// Disk Pool Properties
func (o PoolOutput) DiskPoolProperties() DiskPoolPropertiesResponsePtrOutput {
	return o.ApplyT(func(v *Pool) DiskPoolPropertiesResponsePtrOutput { return v.DiskPoolProperties }).(DiskPoolPropertiesResponsePtrOutput)
}

// Elastic San Pool Properties
func (o PoolOutput) ElasticSanPoolProperties() ElasticSanPoolPropertiesResponseOutput {
	return o.ApplyT(func(v *Pool) ElasticSanPoolPropertiesResponseOutput { return v.ElasticSanPoolProperties }).(ElasticSanPoolPropertiesResponseOutput)
}

// Ephemeral Pool Properties
func (o PoolOutput) EphemeralPoolProperties() EphemeralPoolPropertiesResponsePtrOutput {
	return o.ApplyT(func(v *Pool) EphemeralPoolPropertiesResponsePtrOutput { return v.EphemeralPoolProperties }).(EphemeralPoolPropertiesResponsePtrOutput)
}

// The geo-location where the resource lives
func (o PoolOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *Pool) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// The name of the resource
func (o PoolOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Pool) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Initial capacity of the pool in GiB.
func (o PoolOutput) PoolCapacityGiB() pulumi.Float64Output {
	return o.ApplyT(func(v *Pool) pulumi.Float64Output { return v.PoolCapacityGiB }).(pulumi.Float64Output)
}

// Type of the Pool: ephemeral, disk, managed, or elasticsan.
func (o PoolOutput) PoolType() pulumi.Float64Output {
	return o.ApplyT(func(v *Pool) pulumi.Float64Output { return v.PoolType }).(pulumi.Float64Output)
}

// The status of the last operation.
func (o PoolOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v *Pool) pulumi.StringOutput { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o PoolOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v *Pool) SystemDataResponseOutput { return v.SystemData }).(SystemDataResponseOutput)
}

// Resource tags.
func (o PoolOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Pool) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o PoolOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *Pool) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

// List of availability zones that resources can be created in.
func (o PoolOutput) Zones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Pool) pulumi.StringArrayOutput { return v.Zones }).(pulumi.StringArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(PoolOutput{})
}
