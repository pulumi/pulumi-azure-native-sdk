// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20230701preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Sku name
type AzureDiskSkuName string

const (
	// Premium_LRS SKU
	AzureDiskSkuName_Premium_LRS = AzureDiskSkuName("Premium_LRS")
	// Standard_LRS SKU
	AzureDiskSkuName_Standard_LRS = AzureDiskSkuName("Standard_LRS")
	// StandardSSD_LRS SKU
	AzureDiskSkuName_StandardSSD_LRS = AzureDiskSkuName("StandardSSD_LRS")
	// UltraSSD_LRS SKU
	AzureDiskSkuName_UltraSSD_LRS = AzureDiskSkuName("UltraSSD_LRS")
	// Premium_ZRS SKU
	AzureDiskSkuName_Premium_ZRS = AzureDiskSkuName("Premium_ZRS")
	// PremiumV2_LRS SKU
	AzureDiskSkuName_PremiumV2_LRS = AzureDiskSkuName("PremiumV2_LRS")
	// StandardSSD_ZRS SKU
	AzureDiskSkuName_StandardSSD_ZRS = AzureDiskSkuName("StandardSSD_ZRS")
)

func (AzureDiskSkuName) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureDiskSkuName)(nil)).Elem()
}

func (e AzureDiskSkuName) ToAzureDiskSkuNameOutput() AzureDiskSkuNameOutput {
	return pulumi.ToOutput(e).(AzureDiskSkuNameOutput)
}

func (e AzureDiskSkuName) ToAzureDiskSkuNameOutputWithContext(ctx context.Context) AzureDiskSkuNameOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AzureDiskSkuNameOutput)
}

func (e AzureDiskSkuName) ToAzureDiskSkuNamePtrOutput() AzureDiskSkuNamePtrOutput {
	return e.ToAzureDiskSkuNamePtrOutputWithContext(context.Background())
}

func (e AzureDiskSkuName) ToAzureDiskSkuNamePtrOutputWithContext(ctx context.Context) AzureDiskSkuNamePtrOutput {
	return AzureDiskSkuName(e).ToAzureDiskSkuNameOutputWithContext(ctx).ToAzureDiskSkuNamePtrOutputWithContext(ctx)
}

func (e AzureDiskSkuName) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AzureDiskSkuName) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AzureDiskSkuName) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AzureDiskSkuName) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AzureDiskSkuNameOutput struct{ *pulumi.OutputState }

func (AzureDiskSkuNameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureDiskSkuName)(nil)).Elem()
}

func (o AzureDiskSkuNameOutput) ToAzureDiskSkuNameOutput() AzureDiskSkuNameOutput {
	return o
}

func (o AzureDiskSkuNameOutput) ToAzureDiskSkuNameOutputWithContext(ctx context.Context) AzureDiskSkuNameOutput {
	return o
}

func (o AzureDiskSkuNameOutput) ToAzureDiskSkuNamePtrOutput() AzureDiskSkuNamePtrOutput {
	return o.ToAzureDiskSkuNamePtrOutputWithContext(context.Background())
}

func (o AzureDiskSkuNameOutput) ToAzureDiskSkuNamePtrOutputWithContext(ctx context.Context) AzureDiskSkuNamePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AzureDiskSkuName) *AzureDiskSkuName {
		return &v
	}).(AzureDiskSkuNamePtrOutput)
}

func (o AzureDiskSkuNameOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AzureDiskSkuNameOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AzureDiskSkuName) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AzureDiskSkuNameOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AzureDiskSkuNameOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AzureDiskSkuName) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AzureDiskSkuNamePtrOutput struct{ *pulumi.OutputState }

func (AzureDiskSkuNamePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureDiskSkuName)(nil)).Elem()
}

func (o AzureDiskSkuNamePtrOutput) ToAzureDiskSkuNamePtrOutput() AzureDiskSkuNamePtrOutput {
	return o
}

func (o AzureDiskSkuNamePtrOutput) ToAzureDiskSkuNamePtrOutputWithContext(ctx context.Context) AzureDiskSkuNamePtrOutput {
	return o
}

func (o AzureDiskSkuNamePtrOutput) Elem() AzureDiskSkuNameOutput {
	return o.ApplyT(func(v *AzureDiskSkuName) AzureDiskSkuName {
		if v != nil {
			return *v
		}
		var ret AzureDiskSkuName
		return ret
	}).(AzureDiskSkuNameOutput)
}

func (o AzureDiskSkuNamePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AzureDiskSkuNamePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AzureDiskSkuName) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AzureDiskSkuNameInput is an input type that accepts values of the AzureDiskSkuName enum
// A concrete instance of `AzureDiskSkuNameInput` can be one of the following:
//
//	AzureDiskSkuName_Premium_LRS
//	AzureDiskSkuName_Standard_LRS
//	AzureDiskSkuName_StandardSSD_LRS
//	AzureDiskSkuName_UltraSSD_LRS
//	AzureDiskSkuName_Premium_ZRS
//	AzureDiskSkuName_PremiumV2_LRS
//	AzureDiskSkuName_StandardSSD_ZRS
type AzureDiskSkuNameInput interface {
	pulumi.Input

	ToAzureDiskSkuNameOutput() AzureDiskSkuNameOutput
	ToAzureDiskSkuNameOutputWithContext(context.Context) AzureDiskSkuNameOutput
}

var azureDiskSkuNamePtrType = reflect.TypeOf((**AzureDiskSkuName)(nil)).Elem()

type AzureDiskSkuNamePtrInput interface {
	pulumi.Input

	ToAzureDiskSkuNamePtrOutput() AzureDiskSkuNamePtrOutput
	ToAzureDiskSkuNamePtrOutputWithContext(context.Context) AzureDiskSkuNamePtrOutput
}

type azureDiskSkuNamePtr string

func AzureDiskSkuNamePtr(v string) AzureDiskSkuNamePtrInput {
	return (*azureDiskSkuNamePtr)(&v)
}

func (*azureDiskSkuNamePtr) ElementType() reflect.Type {
	return azureDiskSkuNamePtrType
}

func (in *azureDiskSkuNamePtr) ToAzureDiskSkuNamePtrOutput() AzureDiskSkuNamePtrOutput {
	return pulumi.ToOutput(in).(AzureDiskSkuNamePtrOutput)
}

func (in *azureDiskSkuNamePtr) ToAzureDiskSkuNamePtrOutputWithContext(ctx context.Context) AzureDiskSkuNamePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AzureDiskSkuNamePtrOutput)
}

// Sku name
type ElasticSanSkuName string

const (
	// Premium_LRS SKU
	ElasticSanSkuName_Premium_LRS = ElasticSanSkuName("Premium_LRS")
	// Premium_ZRS SKU
	ElasticSanSkuName_Premium_ZRS = ElasticSanSkuName("Premium_ZRS")
)

func (ElasticSanSkuName) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticSanSkuName)(nil)).Elem()
}

func (e ElasticSanSkuName) ToElasticSanSkuNameOutput() ElasticSanSkuNameOutput {
	return pulumi.ToOutput(e).(ElasticSanSkuNameOutput)
}

func (e ElasticSanSkuName) ToElasticSanSkuNameOutputWithContext(ctx context.Context) ElasticSanSkuNameOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ElasticSanSkuNameOutput)
}

func (e ElasticSanSkuName) ToElasticSanSkuNamePtrOutput() ElasticSanSkuNamePtrOutput {
	return e.ToElasticSanSkuNamePtrOutputWithContext(context.Background())
}

func (e ElasticSanSkuName) ToElasticSanSkuNamePtrOutputWithContext(ctx context.Context) ElasticSanSkuNamePtrOutput {
	return ElasticSanSkuName(e).ToElasticSanSkuNameOutputWithContext(ctx).ToElasticSanSkuNamePtrOutputWithContext(ctx)
}

func (e ElasticSanSkuName) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ElasticSanSkuName) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ElasticSanSkuName) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ElasticSanSkuName) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ElasticSanSkuNameOutput struct{ *pulumi.OutputState }

func (ElasticSanSkuNameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticSanSkuName)(nil)).Elem()
}

func (o ElasticSanSkuNameOutput) ToElasticSanSkuNameOutput() ElasticSanSkuNameOutput {
	return o
}

func (o ElasticSanSkuNameOutput) ToElasticSanSkuNameOutputWithContext(ctx context.Context) ElasticSanSkuNameOutput {
	return o
}

func (o ElasticSanSkuNameOutput) ToElasticSanSkuNamePtrOutput() ElasticSanSkuNamePtrOutput {
	return o.ToElasticSanSkuNamePtrOutputWithContext(context.Background())
}

func (o ElasticSanSkuNameOutput) ToElasticSanSkuNamePtrOutputWithContext(ctx context.Context) ElasticSanSkuNamePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ElasticSanSkuName) *ElasticSanSkuName {
		return &v
	}).(ElasticSanSkuNamePtrOutput)
}

func (o ElasticSanSkuNameOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ElasticSanSkuNameOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ElasticSanSkuName) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ElasticSanSkuNameOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ElasticSanSkuNameOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ElasticSanSkuName) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ElasticSanSkuNamePtrOutput struct{ *pulumi.OutputState }

func (ElasticSanSkuNamePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticSanSkuName)(nil)).Elem()
}

func (o ElasticSanSkuNamePtrOutput) ToElasticSanSkuNamePtrOutput() ElasticSanSkuNamePtrOutput {
	return o
}

func (o ElasticSanSkuNamePtrOutput) ToElasticSanSkuNamePtrOutputWithContext(ctx context.Context) ElasticSanSkuNamePtrOutput {
	return o
}

func (o ElasticSanSkuNamePtrOutput) Elem() ElasticSanSkuNameOutput {
	return o.ApplyT(func(v *ElasticSanSkuName) ElasticSanSkuName {
		if v != nil {
			return *v
		}
		var ret ElasticSanSkuName
		return ret
	}).(ElasticSanSkuNameOutput)
}

func (o ElasticSanSkuNamePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ElasticSanSkuNamePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ElasticSanSkuName) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ElasticSanSkuNameInput is an input type that accepts values of the ElasticSanSkuName enum
// A concrete instance of `ElasticSanSkuNameInput` can be one of the following:
//
//	ElasticSanSkuName_Premium_LRS
//	ElasticSanSkuName_Premium_ZRS
type ElasticSanSkuNameInput interface {
	pulumi.Input

	ToElasticSanSkuNameOutput() ElasticSanSkuNameOutput
	ToElasticSanSkuNameOutputWithContext(context.Context) ElasticSanSkuNameOutput
}

var elasticSanSkuNamePtrType = reflect.TypeOf((**ElasticSanSkuName)(nil)).Elem()

type ElasticSanSkuNamePtrInput interface {
	pulumi.Input

	ToElasticSanSkuNamePtrOutput() ElasticSanSkuNamePtrOutput
	ToElasticSanSkuNamePtrOutputWithContext(context.Context) ElasticSanSkuNamePtrOutput
}

type elasticSanSkuNamePtr string

func ElasticSanSkuNamePtr(v string) ElasticSanSkuNamePtrInput {
	return (*elasticSanSkuNamePtr)(&v)
}

func (*elasticSanSkuNamePtr) ElementType() reflect.Type {
	return elasticSanSkuNamePtrType
}

func (in *elasticSanSkuNamePtr) ToElasticSanSkuNamePtrOutput() ElasticSanSkuNamePtrOutput {
	return pulumi.ToOutput(in).(ElasticSanSkuNamePtrOutput)
}

func (in *elasticSanSkuNamePtr) ToElasticSanSkuNamePtrOutputWithContext(ctx context.Context) ElasticSanSkuNamePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ElasticSanSkuNamePtrOutput)
}

// Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
type ManagedServiceIdentityType string

const (
	ManagedServiceIdentityTypeNone                         = ManagedServiceIdentityType("None")
	ManagedServiceIdentityTypeSystemAssigned               = ManagedServiceIdentityType("SystemAssigned")
	ManagedServiceIdentityTypeUserAssigned                 = ManagedServiceIdentityType("UserAssigned")
	ManagedServiceIdentityType_SystemAssigned_UserAssigned = ManagedServiceIdentityType("SystemAssigned, UserAssigned")
)

func (ManagedServiceIdentityType) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedServiceIdentityType)(nil)).Elem()
}

func (e ManagedServiceIdentityType) ToManagedServiceIdentityTypeOutput() ManagedServiceIdentityTypeOutput {
	return pulumi.ToOutput(e).(ManagedServiceIdentityTypeOutput)
}

func (e ManagedServiceIdentityType) ToManagedServiceIdentityTypeOutputWithContext(ctx context.Context) ManagedServiceIdentityTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ManagedServiceIdentityTypeOutput)
}

func (e ManagedServiceIdentityType) ToManagedServiceIdentityTypePtrOutput() ManagedServiceIdentityTypePtrOutput {
	return e.ToManagedServiceIdentityTypePtrOutputWithContext(context.Background())
}

func (e ManagedServiceIdentityType) ToManagedServiceIdentityTypePtrOutputWithContext(ctx context.Context) ManagedServiceIdentityTypePtrOutput {
	return ManagedServiceIdentityType(e).ToManagedServiceIdentityTypeOutputWithContext(ctx).ToManagedServiceIdentityTypePtrOutputWithContext(ctx)
}

func (e ManagedServiceIdentityType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ManagedServiceIdentityType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ManagedServiceIdentityType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ManagedServiceIdentityType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ManagedServiceIdentityTypeOutput struct{ *pulumi.OutputState }

func (ManagedServiceIdentityTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedServiceIdentityType)(nil)).Elem()
}

func (o ManagedServiceIdentityTypeOutput) ToManagedServiceIdentityTypeOutput() ManagedServiceIdentityTypeOutput {
	return o
}

func (o ManagedServiceIdentityTypeOutput) ToManagedServiceIdentityTypeOutputWithContext(ctx context.Context) ManagedServiceIdentityTypeOutput {
	return o
}

func (o ManagedServiceIdentityTypeOutput) ToManagedServiceIdentityTypePtrOutput() ManagedServiceIdentityTypePtrOutput {
	return o.ToManagedServiceIdentityTypePtrOutputWithContext(context.Background())
}

func (o ManagedServiceIdentityTypeOutput) ToManagedServiceIdentityTypePtrOutputWithContext(ctx context.Context) ManagedServiceIdentityTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ManagedServiceIdentityType) *ManagedServiceIdentityType {
		return &v
	}).(ManagedServiceIdentityTypePtrOutput)
}

func (o ManagedServiceIdentityTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ManagedServiceIdentityTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ManagedServiceIdentityType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ManagedServiceIdentityTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ManagedServiceIdentityTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ManagedServiceIdentityType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ManagedServiceIdentityTypePtrOutput struct{ *pulumi.OutputState }

func (ManagedServiceIdentityTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedServiceIdentityType)(nil)).Elem()
}

func (o ManagedServiceIdentityTypePtrOutput) ToManagedServiceIdentityTypePtrOutput() ManagedServiceIdentityTypePtrOutput {
	return o
}

func (o ManagedServiceIdentityTypePtrOutput) ToManagedServiceIdentityTypePtrOutputWithContext(ctx context.Context) ManagedServiceIdentityTypePtrOutput {
	return o
}

func (o ManagedServiceIdentityTypePtrOutput) Elem() ManagedServiceIdentityTypeOutput {
	return o.ApplyT(func(v *ManagedServiceIdentityType) ManagedServiceIdentityType {
		if v != nil {
			return *v
		}
		var ret ManagedServiceIdentityType
		return ret
	}).(ManagedServiceIdentityTypeOutput)
}

func (o ManagedServiceIdentityTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ManagedServiceIdentityTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ManagedServiceIdentityType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ManagedServiceIdentityTypeInput is an input type that accepts values of the ManagedServiceIdentityType enum
// A concrete instance of `ManagedServiceIdentityTypeInput` can be one of the following:
//
//	ManagedServiceIdentityTypeNone
//	ManagedServiceIdentityTypeSystemAssigned
//	ManagedServiceIdentityTypeUserAssigned
//	ManagedServiceIdentityType_SystemAssigned_UserAssigned
type ManagedServiceIdentityTypeInput interface {
	pulumi.Input

	ToManagedServiceIdentityTypeOutput() ManagedServiceIdentityTypeOutput
	ToManagedServiceIdentityTypeOutputWithContext(context.Context) ManagedServiceIdentityTypeOutput
}

var managedServiceIdentityTypePtrType = reflect.TypeOf((**ManagedServiceIdentityType)(nil)).Elem()

type ManagedServiceIdentityTypePtrInput interface {
	pulumi.Input

	ToManagedServiceIdentityTypePtrOutput() ManagedServiceIdentityTypePtrOutput
	ToManagedServiceIdentityTypePtrOutputWithContext(context.Context) ManagedServiceIdentityTypePtrOutput
}

type managedServiceIdentityTypePtr string

func ManagedServiceIdentityTypePtr(v string) ManagedServiceIdentityTypePtrInput {
	return (*managedServiceIdentityTypePtr)(&v)
}

func (*managedServiceIdentityTypePtr) ElementType() reflect.Type {
	return managedServiceIdentityTypePtrType
}

func (in *managedServiceIdentityTypePtr) ToManagedServiceIdentityTypePtrOutput() ManagedServiceIdentityTypePtrOutput {
	return pulumi.ToOutput(in).(ManagedServiceIdentityTypePtrOutput)
}

func (in *managedServiceIdentityTypePtr) ToManagedServiceIdentityTypePtrOutputWithContext(ctx context.Context) ManagedServiceIdentityTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ManagedServiceIdentityTypePtrOutput)
}

// ReclaimPolicy defines what happens to the backend storage when StoragePool is deleted
type ReclaimPolicy string

const (
	// Delete resource
	ReclaimPolicyDelete = ReclaimPolicy("Delete")
	// Retain resource
	ReclaimPolicyRetain = ReclaimPolicy("Retain")
)

func (ReclaimPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((*ReclaimPolicy)(nil)).Elem()
}

func (e ReclaimPolicy) ToReclaimPolicyOutput() ReclaimPolicyOutput {
	return pulumi.ToOutput(e).(ReclaimPolicyOutput)
}

func (e ReclaimPolicy) ToReclaimPolicyOutputWithContext(ctx context.Context) ReclaimPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ReclaimPolicyOutput)
}

func (e ReclaimPolicy) ToReclaimPolicyPtrOutput() ReclaimPolicyPtrOutput {
	return e.ToReclaimPolicyPtrOutputWithContext(context.Background())
}

func (e ReclaimPolicy) ToReclaimPolicyPtrOutputWithContext(ctx context.Context) ReclaimPolicyPtrOutput {
	return ReclaimPolicy(e).ToReclaimPolicyOutputWithContext(ctx).ToReclaimPolicyPtrOutputWithContext(ctx)
}

func (e ReclaimPolicy) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ReclaimPolicy) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ReclaimPolicy) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ReclaimPolicy) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ReclaimPolicyOutput struct{ *pulumi.OutputState }

func (ReclaimPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReclaimPolicy)(nil)).Elem()
}

func (o ReclaimPolicyOutput) ToReclaimPolicyOutput() ReclaimPolicyOutput {
	return o
}

func (o ReclaimPolicyOutput) ToReclaimPolicyOutputWithContext(ctx context.Context) ReclaimPolicyOutput {
	return o
}

func (o ReclaimPolicyOutput) ToReclaimPolicyPtrOutput() ReclaimPolicyPtrOutput {
	return o.ToReclaimPolicyPtrOutputWithContext(context.Background())
}

func (o ReclaimPolicyOutput) ToReclaimPolicyPtrOutputWithContext(ctx context.Context) ReclaimPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ReclaimPolicy) *ReclaimPolicy {
		return &v
	}).(ReclaimPolicyPtrOutput)
}

func (o ReclaimPolicyOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ReclaimPolicyOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ReclaimPolicy) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ReclaimPolicyOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ReclaimPolicyOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ReclaimPolicy) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ReclaimPolicyPtrOutput struct{ *pulumi.OutputState }

func (ReclaimPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ReclaimPolicy)(nil)).Elem()
}

func (o ReclaimPolicyPtrOutput) ToReclaimPolicyPtrOutput() ReclaimPolicyPtrOutput {
	return o
}

func (o ReclaimPolicyPtrOutput) ToReclaimPolicyPtrOutputWithContext(ctx context.Context) ReclaimPolicyPtrOutput {
	return o
}

func (o ReclaimPolicyPtrOutput) Elem() ReclaimPolicyOutput {
	return o.ApplyT(func(v *ReclaimPolicy) ReclaimPolicy {
		if v != nil {
			return *v
		}
		var ret ReclaimPolicy
		return ret
	}).(ReclaimPolicyOutput)
}

func (o ReclaimPolicyPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ReclaimPolicyPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ReclaimPolicy) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ReclaimPolicyInput is an input type that accepts values of the ReclaimPolicy enum
// A concrete instance of `ReclaimPolicyInput` can be one of the following:
//
//	ReclaimPolicyDelete
//	ReclaimPolicyRetain
type ReclaimPolicyInput interface {
	pulumi.Input

	ToReclaimPolicyOutput() ReclaimPolicyOutput
	ToReclaimPolicyOutputWithContext(context.Context) ReclaimPolicyOutput
}

var reclaimPolicyPtrType = reflect.TypeOf((**ReclaimPolicy)(nil)).Elem()

type ReclaimPolicyPtrInput interface {
	pulumi.Input

	ToReclaimPolicyPtrOutput() ReclaimPolicyPtrOutput
	ToReclaimPolicyPtrOutputWithContext(context.Context) ReclaimPolicyPtrOutput
}

type reclaimPolicyPtr string

func ReclaimPolicyPtr(v string) ReclaimPolicyPtrInput {
	return (*reclaimPolicyPtr)(&v)
}

func (*reclaimPolicyPtr) ElementType() reflect.Type {
	return reclaimPolicyPtrType
}

func (in *reclaimPolicyPtr) ToReclaimPolicyPtrOutput() ReclaimPolicyPtrOutput {
	return pulumi.ToOutput(in).(ReclaimPolicyPtrOutput)
}

func (in *reclaimPolicyPtr) ToReclaimPolicyPtrOutputWithContext(ctx context.Context) ReclaimPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ReclaimPolicyPtrOutput)
}

// Availability Zones
type Zone string

const (
	// First availability zone.
	ZoneZone1 = Zone("1")
	// Second availability zone.
	ZoneZone2 = Zone("2")
	// Third availability zone.
	ZoneZone3 = Zone("3")
)

func (Zone) ElementType() reflect.Type {
	return reflect.TypeOf((*Zone)(nil)).Elem()
}

func (e Zone) ToZoneOutput() ZoneOutput {
	return pulumi.ToOutput(e).(ZoneOutput)
}

func (e Zone) ToZoneOutputWithContext(ctx context.Context) ZoneOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ZoneOutput)
}

func (e Zone) ToZonePtrOutput() ZonePtrOutput {
	return e.ToZonePtrOutputWithContext(context.Background())
}

func (e Zone) ToZonePtrOutputWithContext(ctx context.Context) ZonePtrOutput {
	return Zone(e).ToZoneOutputWithContext(ctx).ToZonePtrOutputWithContext(ctx)
}

func (e Zone) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e Zone) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e Zone) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e Zone) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ZoneOutput struct{ *pulumi.OutputState }

func (ZoneOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Zone)(nil)).Elem()
}

func (o ZoneOutput) ToZoneOutput() ZoneOutput {
	return o
}

func (o ZoneOutput) ToZoneOutputWithContext(ctx context.Context) ZoneOutput {
	return o
}

func (o ZoneOutput) ToZonePtrOutput() ZonePtrOutput {
	return o.ToZonePtrOutputWithContext(context.Background())
}

func (o ZoneOutput) ToZonePtrOutputWithContext(ctx context.Context) ZonePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Zone) *Zone {
		return &v
	}).(ZonePtrOutput)
}

func (o ZoneOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ZoneOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e Zone) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ZoneOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ZoneOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e Zone) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ZonePtrOutput struct{ *pulumi.OutputState }

func (ZonePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Zone)(nil)).Elem()
}

func (o ZonePtrOutput) ToZonePtrOutput() ZonePtrOutput {
	return o
}

func (o ZonePtrOutput) ToZonePtrOutputWithContext(ctx context.Context) ZonePtrOutput {
	return o
}

func (o ZonePtrOutput) Elem() ZoneOutput {
	return o.ApplyT(func(v *Zone) Zone {
		if v != nil {
			return *v
		}
		var ret Zone
		return ret
	}).(ZoneOutput)
}

func (o ZonePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ZonePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *Zone) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ZoneInput is an input type that accepts values of the Zone enum
// A concrete instance of `ZoneInput` can be one of the following:
//
//	ZoneZone1
//	ZoneZone2
//	ZoneZone3
type ZoneInput interface {
	pulumi.Input

	ToZoneOutput() ZoneOutput
	ToZoneOutputWithContext(context.Context) ZoneOutput
}

var zonePtrType = reflect.TypeOf((**Zone)(nil)).Elem()

type ZonePtrInput interface {
	pulumi.Input

	ToZonePtrOutput() ZonePtrOutput
	ToZonePtrOutputWithContext(context.Context) ZonePtrOutput
}

type zonePtr string

func ZonePtr(v string) ZonePtrInput {
	return (*zonePtr)(&v)
}

func (*zonePtr) ElementType() reflect.Type {
	return zonePtrType
}

func (in *zonePtr) ToZonePtrOutput() ZonePtrOutput {
	return pulumi.ToOutput(in).(ZonePtrOutput)
}

func (in *zonePtr) ToZonePtrOutputWithContext(ctx context.Context) ZonePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ZonePtrOutput)
}

func init() {
	pulumi.RegisterOutputType(AzureDiskSkuNameOutput{})
	pulumi.RegisterOutputType(AzureDiskSkuNamePtrOutput{})
	pulumi.RegisterOutputType(ElasticSanSkuNameOutput{})
	pulumi.RegisterOutputType(ElasticSanSkuNamePtrOutput{})
	pulumi.RegisterOutputType(ManagedServiceIdentityTypeOutput{})
	pulumi.RegisterOutputType(ManagedServiceIdentityTypePtrOutput{})
	pulumi.RegisterOutputType(ReclaimPolicyOutput{})
	pulumi.RegisterOutputType(ReclaimPolicyPtrOutput{})
	pulumi.RegisterOutputType(ZoneOutput{})
	pulumi.RegisterOutputType(ZonePtrOutput{})
}
