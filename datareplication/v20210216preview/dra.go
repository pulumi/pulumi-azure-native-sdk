// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20210216preview

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Dra model.
type Dra struct {
	pulumi.CustomResourceState

	// Gets or sets the name of the resource.
	Name pulumi.StringOutput `pulumi:"name"`
	// Dra model properties.
	Properties DraModelPropertiesResponseOutput `pulumi:"properties"`
	SystemData DraModelResponseSystemDataOutput `pulumi:"systemData"`
	// Gets or sets the type of the resource.
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewDra registers a new resource with the given unique name, arguments, and options.
func NewDra(ctx *pulumi.Context,
	name string, args *DraArgs, opts ...pulumi.ResourceOption) (*Dra, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.FabricName == nil {
		return nil, errors.New("invalid value for required argument 'FabricName'")
	}
	if args.Properties == nil {
		return nil, errors.New("invalid value for required argument 'Properties'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:datareplication:Dra"),
		},
	})
	opts = append(opts, aliases)
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource Dra
	err := ctx.RegisterResource("azure-native:datareplication/v20210216preview:Dra", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDra gets an existing Dra resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDra(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DraState, opts ...pulumi.ResourceOption) (*Dra, error) {
	var resource Dra
	err := ctx.ReadResource("azure-native:datareplication/v20210216preview:Dra", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Dra resources.
type draState struct {
}

type DraState struct {
}

func (DraState) ElementType() reflect.Type {
	return reflect.TypeOf((*draState)(nil)).Elem()
}

type draArgs struct {
	// The fabric agent (Dra) name.
	FabricAgentName *string `pulumi:"fabricAgentName"`
	// The fabric name.
	FabricName string `pulumi:"fabricName"`
	// Dra model properties.
	Properties DraModelProperties `pulumi:"properties"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// The set of arguments for constructing a Dra resource.
type DraArgs struct {
	// The fabric agent (Dra) name.
	FabricAgentName pulumi.StringPtrInput
	// The fabric name.
	FabricName pulumi.StringInput
	// Dra model properties.
	Properties DraModelPropertiesInput
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput
}

func (DraArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*draArgs)(nil)).Elem()
}

type DraInput interface {
	pulumi.Input

	ToDraOutput() DraOutput
	ToDraOutputWithContext(ctx context.Context) DraOutput
}

func (*Dra) ElementType() reflect.Type {
	return reflect.TypeOf((**Dra)(nil)).Elem()
}

func (i *Dra) ToDraOutput() DraOutput {
	return i.ToDraOutputWithContext(context.Background())
}

func (i *Dra) ToDraOutputWithContext(ctx context.Context) DraOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DraOutput)
}

func (i *Dra) ToOutput(ctx context.Context) pulumix.Output[*Dra] {
	return pulumix.Output[*Dra]{
		OutputState: i.ToDraOutputWithContext(ctx).OutputState,
	}
}

type DraOutput struct{ *pulumi.OutputState }

func (DraOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Dra)(nil)).Elem()
}

func (o DraOutput) ToDraOutput() DraOutput {
	return o
}

func (o DraOutput) ToDraOutputWithContext(ctx context.Context) DraOutput {
	return o
}

func (o DraOutput) ToOutput(ctx context.Context) pulumix.Output[*Dra] {
	return pulumix.Output[*Dra]{
		OutputState: o.OutputState,
	}
}

// Gets or sets the name of the resource.
func (o DraOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Dra) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Dra model properties.
func (o DraOutput) Properties() DraModelPropertiesResponseOutput {
	return o.ApplyT(func(v *Dra) DraModelPropertiesResponseOutput { return v.Properties }).(DraModelPropertiesResponseOutput)
}

func (o DraOutput) SystemData() DraModelResponseSystemDataOutput {
	return o.ApplyT(func(v *Dra) DraModelResponseSystemDataOutput { return v.SystemData }).(DraModelResponseSystemDataOutput)
}

// Gets or sets the type of the resource.
func (o DraOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *Dra) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(DraOutput{})
}
