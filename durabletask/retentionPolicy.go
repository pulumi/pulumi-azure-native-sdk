// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package durabletask

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure-native-sdk/v3/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// A retention policy resource belonging to the scheduler
//
// Uses Azure REST API version 2025-04-01-preview.
type RetentionPolicy struct {
	pulumi.CustomResourceState

	// The Azure API version of the resource.
	AzureApiVersion pulumi.StringOutput `pulumi:"azureApiVersion"`
	// The name of the resource
	Name pulumi.StringOutput `pulumi:"name"`
	// The resource-specific properties for this resource.
	Properties RetentionPolicyPropertiesResponseOutput `pulumi:"properties"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponseOutput `pulumi:"systemData"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewRetentionPolicy registers a new resource with the given unique name, arguments, and options.
func NewRetentionPolicy(ctx *pulumi.Context,
	name string, args *RetentionPolicyArgs, opts ...pulumi.ResourceOption) (*RetentionPolicy, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	if args.SchedulerName == nil {
		return nil, errors.New("invalid value for required argument 'SchedulerName'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:durabletask/v20250401preview:RetentionPolicy"),
		},
	})
	opts = append(opts, aliases)
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource RetentionPolicy
	err := ctx.RegisterResource("azure-native:durabletask:RetentionPolicy", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetRetentionPolicy gets an existing RetentionPolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetRetentionPolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *RetentionPolicyState, opts ...pulumi.ResourceOption) (*RetentionPolicy, error) {
	var resource RetentionPolicy
	err := ctx.ReadResource("azure-native:durabletask:RetentionPolicy", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering RetentionPolicy resources.
type retentionPolicyState struct {
}

type RetentionPolicyState struct {
}

func (RetentionPolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*retentionPolicyState)(nil)).Elem()
}

type retentionPolicyArgs struct {
	// The resource-specific properties for this resource.
	Properties *RetentionPolicyProperties `pulumi:"properties"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The name of the Scheduler
	SchedulerName string `pulumi:"schedulerName"`
}

// The set of arguments for constructing a RetentionPolicy resource.
type RetentionPolicyArgs struct {
	// The resource-specific properties for this resource.
	Properties RetentionPolicyPropertiesPtrInput
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput
	// The name of the Scheduler
	SchedulerName pulumi.StringInput
}

func (RetentionPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*retentionPolicyArgs)(nil)).Elem()
}

type RetentionPolicyInput interface {
	pulumi.Input

	ToRetentionPolicyOutput() RetentionPolicyOutput
	ToRetentionPolicyOutputWithContext(ctx context.Context) RetentionPolicyOutput
}

func (*RetentionPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((**RetentionPolicy)(nil)).Elem()
}

func (i *RetentionPolicy) ToRetentionPolicyOutput() RetentionPolicyOutput {
	return i.ToRetentionPolicyOutputWithContext(context.Background())
}

func (i *RetentionPolicy) ToRetentionPolicyOutputWithContext(ctx context.Context) RetentionPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RetentionPolicyOutput)
}

type RetentionPolicyOutput struct{ *pulumi.OutputState }

func (RetentionPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RetentionPolicy)(nil)).Elem()
}

func (o RetentionPolicyOutput) ToRetentionPolicyOutput() RetentionPolicyOutput {
	return o
}

func (o RetentionPolicyOutput) ToRetentionPolicyOutputWithContext(ctx context.Context) RetentionPolicyOutput {
	return o
}

// The Azure API version of the resource.
func (o RetentionPolicyOutput) AzureApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *RetentionPolicy) pulumi.StringOutput { return v.AzureApiVersion }).(pulumi.StringOutput)
}

// The name of the resource
func (o RetentionPolicyOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *RetentionPolicy) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The resource-specific properties for this resource.
func (o RetentionPolicyOutput) Properties() RetentionPolicyPropertiesResponseOutput {
	return o.ApplyT(func(v *RetentionPolicy) RetentionPolicyPropertiesResponseOutput { return v.Properties }).(RetentionPolicyPropertiesResponseOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o RetentionPolicyOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v *RetentionPolicy) SystemDataResponseOutput { return v.SystemData }).(SystemDataResponseOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o RetentionPolicyOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *RetentionPolicy) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(RetentionPolicyOutput{})
}
