// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20241001preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = utilities.GetEnvOrDefault

// Details of the Scheduler
type SchedulerProperties struct {
	// IP allow list for durable task scheduler. Values can be IPv4, IPv6 or CIDR
	IpAllowlist []string `pulumi:"ipAllowlist"`
	// SKU of the durable task scheduler
	Sku SchedulerSku `pulumi:"sku"`
}

// SchedulerPropertiesInput is an input type that accepts SchedulerPropertiesArgs and SchedulerPropertiesOutput values.
// You can construct a concrete instance of `SchedulerPropertiesInput` via:
//
//	SchedulerPropertiesArgs{...}
type SchedulerPropertiesInput interface {
	pulumi.Input

	ToSchedulerPropertiesOutput() SchedulerPropertiesOutput
	ToSchedulerPropertiesOutputWithContext(context.Context) SchedulerPropertiesOutput
}

// Details of the Scheduler
type SchedulerPropertiesArgs struct {
	// IP allow list for durable task scheduler. Values can be IPv4, IPv6 or CIDR
	IpAllowlist pulumi.StringArrayInput `pulumi:"ipAllowlist"`
	// SKU of the durable task scheduler
	Sku SchedulerSkuInput `pulumi:"sku"`
}

func (SchedulerPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SchedulerProperties)(nil)).Elem()
}

func (i SchedulerPropertiesArgs) ToSchedulerPropertiesOutput() SchedulerPropertiesOutput {
	return i.ToSchedulerPropertiesOutputWithContext(context.Background())
}

func (i SchedulerPropertiesArgs) ToSchedulerPropertiesOutputWithContext(ctx context.Context) SchedulerPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SchedulerPropertiesOutput)
}

func (i SchedulerPropertiesArgs) ToSchedulerPropertiesPtrOutput() SchedulerPropertiesPtrOutput {
	return i.ToSchedulerPropertiesPtrOutputWithContext(context.Background())
}

func (i SchedulerPropertiesArgs) ToSchedulerPropertiesPtrOutputWithContext(ctx context.Context) SchedulerPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SchedulerPropertiesOutput).ToSchedulerPropertiesPtrOutputWithContext(ctx)
}

// SchedulerPropertiesPtrInput is an input type that accepts SchedulerPropertiesArgs, SchedulerPropertiesPtr and SchedulerPropertiesPtrOutput values.
// You can construct a concrete instance of `SchedulerPropertiesPtrInput` via:
//
//	        SchedulerPropertiesArgs{...}
//
//	or:
//
//	        nil
type SchedulerPropertiesPtrInput interface {
	pulumi.Input

	ToSchedulerPropertiesPtrOutput() SchedulerPropertiesPtrOutput
	ToSchedulerPropertiesPtrOutputWithContext(context.Context) SchedulerPropertiesPtrOutput
}

type schedulerPropertiesPtrType SchedulerPropertiesArgs

func SchedulerPropertiesPtr(v *SchedulerPropertiesArgs) SchedulerPropertiesPtrInput {
	return (*schedulerPropertiesPtrType)(v)
}

func (*schedulerPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SchedulerProperties)(nil)).Elem()
}

func (i *schedulerPropertiesPtrType) ToSchedulerPropertiesPtrOutput() SchedulerPropertiesPtrOutput {
	return i.ToSchedulerPropertiesPtrOutputWithContext(context.Background())
}

func (i *schedulerPropertiesPtrType) ToSchedulerPropertiesPtrOutputWithContext(ctx context.Context) SchedulerPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SchedulerPropertiesPtrOutput)
}

// Details of the Scheduler
type SchedulerPropertiesOutput struct{ *pulumi.OutputState }

func (SchedulerPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SchedulerProperties)(nil)).Elem()
}

func (o SchedulerPropertiesOutput) ToSchedulerPropertiesOutput() SchedulerPropertiesOutput {
	return o
}

func (o SchedulerPropertiesOutput) ToSchedulerPropertiesOutputWithContext(ctx context.Context) SchedulerPropertiesOutput {
	return o
}

func (o SchedulerPropertiesOutput) ToSchedulerPropertiesPtrOutput() SchedulerPropertiesPtrOutput {
	return o.ToSchedulerPropertiesPtrOutputWithContext(context.Background())
}

func (o SchedulerPropertiesOutput) ToSchedulerPropertiesPtrOutputWithContext(ctx context.Context) SchedulerPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SchedulerProperties) *SchedulerProperties {
		return &v
	}).(SchedulerPropertiesPtrOutput)
}

// IP allow list for durable task scheduler. Values can be IPv4, IPv6 or CIDR
func (o SchedulerPropertiesOutput) IpAllowlist() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SchedulerProperties) []string { return v.IpAllowlist }).(pulumi.StringArrayOutput)
}

// SKU of the durable task scheduler
func (o SchedulerPropertiesOutput) Sku() SchedulerSkuOutput {
	return o.ApplyT(func(v SchedulerProperties) SchedulerSku { return v.Sku }).(SchedulerSkuOutput)
}

type SchedulerPropertiesPtrOutput struct{ *pulumi.OutputState }

func (SchedulerPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SchedulerProperties)(nil)).Elem()
}

func (o SchedulerPropertiesPtrOutput) ToSchedulerPropertiesPtrOutput() SchedulerPropertiesPtrOutput {
	return o
}

func (o SchedulerPropertiesPtrOutput) ToSchedulerPropertiesPtrOutputWithContext(ctx context.Context) SchedulerPropertiesPtrOutput {
	return o
}

func (o SchedulerPropertiesPtrOutput) Elem() SchedulerPropertiesOutput {
	return o.ApplyT(func(v *SchedulerProperties) SchedulerProperties {
		if v != nil {
			return *v
		}
		var ret SchedulerProperties
		return ret
	}).(SchedulerPropertiesOutput)
}

// IP allow list for durable task scheduler. Values can be IPv4, IPv6 or CIDR
func (o SchedulerPropertiesPtrOutput) IpAllowlist() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SchedulerProperties) []string {
		if v == nil {
			return nil
		}
		return v.IpAllowlist
	}).(pulumi.StringArrayOutput)
}

// SKU of the durable task scheduler
func (o SchedulerPropertiesPtrOutput) Sku() SchedulerSkuPtrOutput {
	return o.ApplyT(func(v *SchedulerProperties) *SchedulerSku {
		if v == nil {
			return nil
		}
		return &v.Sku
	}).(SchedulerSkuPtrOutput)
}

// Details of the Scheduler
type SchedulerPropertiesResponse struct {
	// URL of the durable task scheduler
	Endpoint string `pulumi:"endpoint"`
	// IP allow list for durable task scheduler. Values can be IPv4, IPv6 or CIDR
	IpAllowlist []string `pulumi:"ipAllowlist"`
	// The status of the last operation
	ProvisioningState string `pulumi:"provisioningState"`
	// SKU of the durable task scheduler
	Sku SchedulerSkuResponse `pulumi:"sku"`
}

// Details of the Scheduler
type SchedulerPropertiesResponseOutput struct{ *pulumi.OutputState }

func (SchedulerPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SchedulerPropertiesResponse)(nil)).Elem()
}

func (o SchedulerPropertiesResponseOutput) ToSchedulerPropertiesResponseOutput() SchedulerPropertiesResponseOutput {
	return o
}

func (o SchedulerPropertiesResponseOutput) ToSchedulerPropertiesResponseOutputWithContext(ctx context.Context) SchedulerPropertiesResponseOutput {
	return o
}

// URL of the durable task scheduler
func (o SchedulerPropertiesResponseOutput) Endpoint() pulumi.StringOutput {
	return o.ApplyT(func(v SchedulerPropertiesResponse) string { return v.Endpoint }).(pulumi.StringOutput)
}

// IP allow list for durable task scheduler. Values can be IPv4, IPv6 or CIDR
func (o SchedulerPropertiesResponseOutput) IpAllowlist() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SchedulerPropertiesResponse) []string { return v.IpAllowlist }).(pulumi.StringArrayOutput)
}

// The status of the last operation
func (o SchedulerPropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v SchedulerPropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// SKU of the durable task scheduler
func (o SchedulerPropertiesResponseOutput) Sku() SchedulerSkuResponseOutput {
	return o.ApplyT(func(v SchedulerPropertiesResponse) SchedulerSkuResponse { return v.Sku }).(SchedulerSkuResponseOutput)
}

// The SKU (Stock Keeping Unit) assigned to this durable task scheduler
type SchedulerSku struct {
	// The SKU capacity. This allows scale out/in for the resource and impacts zone redundancy
	Capacity *int `pulumi:"capacity"`
	// The name of the SKU
	Name string `pulumi:"name"`
}

// SchedulerSkuInput is an input type that accepts SchedulerSkuArgs and SchedulerSkuOutput values.
// You can construct a concrete instance of `SchedulerSkuInput` via:
//
//	SchedulerSkuArgs{...}
type SchedulerSkuInput interface {
	pulumi.Input

	ToSchedulerSkuOutput() SchedulerSkuOutput
	ToSchedulerSkuOutputWithContext(context.Context) SchedulerSkuOutput
}

// The SKU (Stock Keeping Unit) assigned to this durable task scheduler
type SchedulerSkuArgs struct {
	// The SKU capacity. This allows scale out/in for the resource and impacts zone redundancy
	Capacity pulumi.IntPtrInput `pulumi:"capacity"`
	// The name of the SKU
	Name pulumi.StringInput `pulumi:"name"`
}

func (SchedulerSkuArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SchedulerSku)(nil)).Elem()
}

func (i SchedulerSkuArgs) ToSchedulerSkuOutput() SchedulerSkuOutput {
	return i.ToSchedulerSkuOutputWithContext(context.Background())
}

func (i SchedulerSkuArgs) ToSchedulerSkuOutputWithContext(ctx context.Context) SchedulerSkuOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SchedulerSkuOutput)
}

func (i SchedulerSkuArgs) ToSchedulerSkuPtrOutput() SchedulerSkuPtrOutput {
	return i.ToSchedulerSkuPtrOutputWithContext(context.Background())
}

func (i SchedulerSkuArgs) ToSchedulerSkuPtrOutputWithContext(ctx context.Context) SchedulerSkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SchedulerSkuOutput).ToSchedulerSkuPtrOutputWithContext(ctx)
}

// SchedulerSkuPtrInput is an input type that accepts SchedulerSkuArgs, SchedulerSkuPtr and SchedulerSkuPtrOutput values.
// You can construct a concrete instance of `SchedulerSkuPtrInput` via:
//
//	        SchedulerSkuArgs{...}
//
//	or:
//
//	        nil
type SchedulerSkuPtrInput interface {
	pulumi.Input

	ToSchedulerSkuPtrOutput() SchedulerSkuPtrOutput
	ToSchedulerSkuPtrOutputWithContext(context.Context) SchedulerSkuPtrOutput
}

type schedulerSkuPtrType SchedulerSkuArgs

func SchedulerSkuPtr(v *SchedulerSkuArgs) SchedulerSkuPtrInput {
	return (*schedulerSkuPtrType)(v)
}

func (*schedulerSkuPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SchedulerSku)(nil)).Elem()
}

func (i *schedulerSkuPtrType) ToSchedulerSkuPtrOutput() SchedulerSkuPtrOutput {
	return i.ToSchedulerSkuPtrOutputWithContext(context.Background())
}

func (i *schedulerSkuPtrType) ToSchedulerSkuPtrOutputWithContext(ctx context.Context) SchedulerSkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SchedulerSkuPtrOutput)
}

// The SKU (Stock Keeping Unit) assigned to this durable task scheduler
type SchedulerSkuOutput struct{ *pulumi.OutputState }

func (SchedulerSkuOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SchedulerSku)(nil)).Elem()
}

func (o SchedulerSkuOutput) ToSchedulerSkuOutput() SchedulerSkuOutput {
	return o
}

func (o SchedulerSkuOutput) ToSchedulerSkuOutputWithContext(ctx context.Context) SchedulerSkuOutput {
	return o
}

func (o SchedulerSkuOutput) ToSchedulerSkuPtrOutput() SchedulerSkuPtrOutput {
	return o.ToSchedulerSkuPtrOutputWithContext(context.Background())
}

func (o SchedulerSkuOutput) ToSchedulerSkuPtrOutputWithContext(ctx context.Context) SchedulerSkuPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SchedulerSku) *SchedulerSku {
		return &v
	}).(SchedulerSkuPtrOutput)
}

// The SKU capacity. This allows scale out/in for the resource and impacts zone redundancy
func (o SchedulerSkuOutput) Capacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SchedulerSku) *int { return v.Capacity }).(pulumi.IntPtrOutput)
}

// The name of the SKU
func (o SchedulerSkuOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v SchedulerSku) string { return v.Name }).(pulumi.StringOutput)
}

type SchedulerSkuPtrOutput struct{ *pulumi.OutputState }

func (SchedulerSkuPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SchedulerSku)(nil)).Elem()
}

func (o SchedulerSkuPtrOutput) ToSchedulerSkuPtrOutput() SchedulerSkuPtrOutput {
	return o
}

func (o SchedulerSkuPtrOutput) ToSchedulerSkuPtrOutputWithContext(ctx context.Context) SchedulerSkuPtrOutput {
	return o
}

func (o SchedulerSkuPtrOutput) Elem() SchedulerSkuOutput {
	return o.ApplyT(func(v *SchedulerSku) SchedulerSku {
		if v != nil {
			return *v
		}
		var ret SchedulerSku
		return ret
	}).(SchedulerSkuOutput)
}

// The SKU capacity. This allows scale out/in for the resource and impacts zone redundancy
func (o SchedulerSkuPtrOutput) Capacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SchedulerSku) *int {
		if v == nil {
			return nil
		}
		return v.Capacity
	}).(pulumi.IntPtrOutput)
}

// The name of the SKU
func (o SchedulerSkuPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SchedulerSku) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The SKU (Stock Keeping Unit) assigned to this durable task scheduler
type SchedulerSkuResponse struct {
	// The SKU capacity. This allows scale out/in for the resource and impacts zone redundancy
	Capacity *int `pulumi:"capacity"`
	// The name of the SKU
	Name string `pulumi:"name"`
	// Indicates whether the current SKU configuration is zone redundant
	RedundancyState string `pulumi:"redundancyState"`
}

// The SKU (Stock Keeping Unit) assigned to this durable task scheduler
type SchedulerSkuResponseOutput struct{ *pulumi.OutputState }

func (SchedulerSkuResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SchedulerSkuResponse)(nil)).Elem()
}

func (o SchedulerSkuResponseOutput) ToSchedulerSkuResponseOutput() SchedulerSkuResponseOutput {
	return o
}

func (o SchedulerSkuResponseOutput) ToSchedulerSkuResponseOutputWithContext(ctx context.Context) SchedulerSkuResponseOutput {
	return o
}

// The SKU capacity. This allows scale out/in for the resource and impacts zone redundancy
func (o SchedulerSkuResponseOutput) Capacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SchedulerSkuResponse) *int { return v.Capacity }).(pulumi.IntPtrOutput)
}

// The name of the SKU
func (o SchedulerSkuResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v SchedulerSkuResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Indicates whether the current SKU configuration is zone redundant
func (o SchedulerSkuResponseOutput) RedundancyState() pulumi.StringOutput {
	return o.ApplyT(func(v SchedulerSkuResponse) string { return v.RedundancyState }).(pulumi.StringOutput)
}

// Metadata pertaining to creation and last modification of the resource.
type SystemDataResponse struct {
	// The timestamp of resource creation (UTC).
	CreatedAt *string `pulumi:"createdAt"`
	// The identity that created the resource.
	CreatedBy *string `pulumi:"createdBy"`
	// The type of identity that created the resource.
	CreatedByType *string `pulumi:"createdByType"`
	// The timestamp of resource last modification (UTC)
	LastModifiedAt *string `pulumi:"lastModifiedAt"`
	// The identity that last modified the resource.
	LastModifiedBy *string `pulumi:"lastModifiedBy"`
	// The type of identity that last modified the resource.
	LastModifiedByType *string `pulumi:"lastModifiedByType"`
}

// Metadata pertaining to creation and last modification of the resource.
type SystemDataResponseOutput struct{ *pulumi.OutputState }

func (SystemDataResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemDataResponse)(nil)).Elem()
}

func (o SystemDataResponseOutput) ToSystemDataResponseOutput() SystemDataResponseOutput {
	return o
}

func (o SystemDataResponseOutput) ToSystemDataResponseOutputWithContext(ctx context.Context) SystemDataResponseOutput {
	return o
}

// The timestamp of resource creation (UTC).
func (o SystemDataResponseOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedAt }).(pulumi.StringPtrOutput)
}

// The identity that created the resource.
func (o SystemDataResponseOutput) CreatedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedBy }).(pulumi.StringPtrOutput)
}

// The type of identity that created the resource.
func (o SystemDataResponseOutput) CreatedByType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedByType }).(pulumi.StringPtrOutput)
}

// The timestamp of resource last modification (UTC)
func (o SystemDataResponseOutput) LastModifiedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedAt }).(pulumi.StringPtrOutput)
}

// The identity that last modified the resource.
func (o SystemDataResponseOutput) LastModifiedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedBy }).(pulumi.StringPtrOutput)
}

// The type of identity that last modified the resource.
func (o SystemDataResponseOutput) LastModifiedByType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedByType }).(pulumi.StringPtrOutput)
}

// The properties of Task Hub
type TaskHubPropertiesResponse struct {
	// URL of the durable task scheduler dashboard
	DashboardUrl string `pulumi:"dashboardUrl"`
	// The status of the last operation
	ProvisioningState string `pulumi:"provisioningState"`
}

// The properties of Task Hub
type TaskHubPropertiesResponseOutput struct{ *pulumi.OutputState }

func (TaskHubPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TaskHubPropertiesResponse)(nil)).Elem()
}

func (o TaskHubPropertiesResponseOutput) ToTaskHubPropertiesResponseOutput() TaskHubPropertiesResponseOutput {
	return o
}

func (o TaskHubPropertiesResponseOutput) ToTaskHubPropertiesResponseOutputWithContext(ctx context.Context) TaskHubPropertiesResponseOutput {
	return o
}

// URL of the durable task scheduler dashboard
func (o TaskHubPropertiesResponseOutput) DashboardUrl() pulumi.StringOutput {
	return o.ApplyT(func(v TaskHubPropertiesResponse) string { return v.DashboardUrl }).(pulumi.StringOutput)
}

// The status of the last operation
func (o TaskHubPropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v TaskHubPropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(SchedulerPropertiesOutput{})
	pulumi.RegisterOutputType(SchedulerPropertiesPtrOutput{})
	pulumi.RegisterOutputType(SchedulerPropertiesResponseOutput{})
	pulumi.RegisterOutputType(SchedulerSkuOutput{})
	pulumi.RegisterOutputType(SchedulerSkuPtrOutput{})
	pulumi.RegisterOutputType(SchedulerSkuResponseOutput{})
	pulumi.RegisterOutputType(SystemDataResponseOutput{})
	pulumi.RegisterOutputType(TaskHubPropertiesResponseOutput{})
}
