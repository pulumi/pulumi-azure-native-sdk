// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package durabletask

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Get a Scheduler
// Azure REST API version: 2024-10-01-preview.
func LookupScheduler(ctx *pulumi.Context, args *LookupSchedulerArgs, opts ...pulumi.InvokeOption) (*LookupSchedulerResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv LookupSchedulerResult
	err := ctx.Invoke("azure-native:durabletask:getScheduler", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupSchedulerArgs struct {
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The name of the Scheduler
	SchedulerName string `pulumi:"schedulerName"`
}

// A Durable Task Scheduler resource
type LookupSchedulerResult struct {
	// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
	Id string `pulumi:"id"`
	// The geo-location where the resource lives
	Location string `pulumi:"location"`
	// The name of the resource
	Name string `pulumi:"name"`
	// The resource-specific properties for this resource.
	Properties SchedulerPropertiesResponse `pulumi:"properties"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponse `pulumi:"systemData"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type string `pulumi:"type"`
}

func LookupSchedulerOutput(ctx *pulumi.Context, args LookupSchedulerOutputArgs, opts ...pulumi.InvokeOption) LookupSchedulerResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupSchedulerResultOutput, error) {
			args := v.(LookupSchedulerArgs)
			opts = utilities.PkgInvokeDefaultOpts(opts)
			var rv LookupSchedulerResult
			secret, err := ctx.InvokePackageRaw("azure-native:durabletask:getScheduler", args, &rv, "", opts...)
			if err != nil {
				return LookupSchedulerResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(LookupSchedulerResultOutput)
			if secret {
				return pulumi.ToSecret(output).(LookupSchedulerResultOutput), nil
			}
			return output, nil
		}).(LookupSchedulerResultOutput)
}

type LookupSchedulerOutputArgs struct {
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
	// The name of the Scheduler
	SchedulerName pulumi.StringInput `pulumi:"schedulerName"`
}

func (LookupSchedulerOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSchedulerArgs)(nil)).Elem()
}

// A Durable Task Scheduler resource
type LookupSchedulerResultOutput struct{ *pulumi.OutputState }

func (LookupSchedulerResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSchedulerResult)(nil)).Elem()
}

func (o LookupSchedulerResultOutput) ToLookupSchedulerResultOutput() LookupSchedulerResultOutput {
	return o
}

func (o LookupSchedulerResultOutput) ToLookupSchedulerResultOutputWithContext(ctx context.Context) LookupSchedulerResultOutput {
	return o
}

// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
func (o LookupSchedulerResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSchedulerResult) string { return v.Id }).(pulumi.StringOutput)
}

// The geo-location where the resource lives
func (o LookupSchedulerResultOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSchedulerResult) string { return v.Location }).(pulumi.StringOutput)
}

// The name of the resource
func (o LookupSchedulerResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSchedulerResult) string { return v.Name }).(pulumi.StringOutput)
}

// The resource-specific properties for this resource.
func (o LookupSchedulerResultOutput) Properties() SchedulerPropertiesResponseOutput {
	return o.ApplyT(func(v LookupSchedulerResult) SchedulerPropertiesResponse { return v.Properties }).(SchedulerPropertiesResponseOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o LookupSchedulerResultOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v LookupSchedulerResult) SystemDataResponse { return v.SystemData }).(SystemDataResponseOutput)
}

// Resource tags.
func (o LookupSchedulerResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupSchedulerResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o LookupSchedulerResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSchedulerResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupSchedulerResultOutput{})
}
