// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package durabletask

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The orchestration state to which this policy applies. If omitted, the policy applies to all purgeable orchestration states.
type PurgeableOrchestrationState string

const (
	// The orchestration is completed
	PurgeableOrchestrationStateCompleted = PurgeableOrchestrationState("Completed")
	// The orchestration is failed
	PurgeableOrchestrationStateFailed = PurgeableOrchestrationState("Failed")
	// The orchestration is terminated
	PurgeableOrchestrationStateTerminated = PurgeableOrchestrationState("Terminated")
	// The orchestration is canceled
	PurgeableOrchestrationStateCanceled = PurgeableOrchestrationState("Canceled")
)

func (PurgeableOrchestrationState) ElementType() reflect.Type {
	return reflect.TypeOf((*PurgeableOrchestrationState)(nil)).Elem()
}

func (e PurgeableOrchestrationState) ToPurgeableOrchestrationStateOutput() PurgeableOrchestrationStateOutput {
	return pulumi.ToOutput(e).(PurgeableOrchestrationStateOutput)
}

func (e PurgeableOrchestrationState) ToPurgeableOrchestrationStateOutputWithContext(ctx context.Context) PurgeableOrchestrationStateOutput {
	return pulumi.ToOutputWithContext(ctx, e).(PurgeableOrchestrationStateOutput)
}

func (e PurgeableOrchestrationState) ToPurgeableOrchestrationStatePtrOutput() PurgeableOrchestrationStatePtrOutput {
	return e.ToPurgeableOrchestrationStatePtrOutputWithContext(context.Background())
}

func (e PurgeableOrchestrationState) ToPurgeableOrchestrationStatePtrOutputWithContext(ctx context.Context) PurgeableOrchestrationStatePtrOutput {
	return PurgeableOrchestrationState(e).ToPurgeableOrchestrationStateOutputWithContext(ctx).ToPurgeableOrchestrationStatePtrOutputWithContext(ctx)
}

func (e PurgeableOrchestrationState) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e PurgeableOrchestrationState) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e PurgeableOrchestrationState) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e PurgeableOrchestrationState) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type PurgeableOrchestrationStateOutput struct{ *pulumi.OutputState }

func (PurgeableOrchestrationStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PurgeableOrchestrationState)(nil)).Elem()
}

func (o PurgeableOrchestrationStateOutput) ToPurgeableOrchestrationStateOutput() PurgeableOrchestrationStateOutput {
	return o
}

func (o PurgeableOrchestrationStateOutput) ToPurgeableOrchestrationStateOutputWithContext(ctx context.Context) PurgeableOrchestrationStateOutput {
	return o
}

func (o PurgeableOrchestrationStateOutput) ToPurgeableOrchestrationStatePtrOutput() PurgeableOrchestrationStatePtrOutput {
	return o.ToPurgeableOrchestrationStatePtrOutputWithContext(context.Background())
}

func (o PurgeableOrchestrationStateOutput) ToPurgeableOrchestrationStatePtrOutputWithContext(ctx context.Context) PurgeableOrchestrationStatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PurgeableOrchestrationState) *PurgeableOrchestrationState {
		return &v
	}).(PurgeableOrchestrationStatePtrOutput)
}

func (o PurgeableOrchestrationStateOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o PurgeableOrchestrationStateOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PurgeableOrchestrationState) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o PurgeableOrchestrationStateOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PurgeableOrchestrationStateOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PurgeableOrchestrationState) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type PurgeableOrchestrationStatePtrOutput struct{ *pulumi.OutputState }

func (PurgeableOrchestrationStatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PurgeableOrchestrationState)(nil)).Elem()
}

func (o PurgeableOrchestrationStatePtrOutput) ToPurgeableOrchestrationStatePtrOutput() PurgeableOrchestrationStatePtrOutput {
	return o
}

func (o PurgeableOrchestrationStatePtrOutput) ToPurgeableOrchestrationStatePtrOutputWithContext(ctx context.Context) PurgeableOrchestrationStatePtrOutput {
	return o
}

func (o PurgeableOrchestrationStatePtrOutput) Elem() PurgeableOrchestrationStateOutput {
	return o.ApplyT(func(v *PurgeableOrchestrationState) PurgeableOrchestrationState {
		if v != nil {
			return *v
		}
		var ret PurgeableOrchestrationState
		return ret
	}).(PurgeableOrchestrationStateOutput)
}

func (o PurgeableOrchestrationStatePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PurgeableOrchestrationStatePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *PurgeableOrchestrationState) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// PurgeableOrchestrationStateInput is an input type that accepts values of the PurgeableOrchestrationState enum
// A concrete instance of `PurgeableOrchestrationStateInput` can be one of the following:
//
//	PurgeableOrchestrationStateCompleted
//	PurgeableOrchestrationStateFailed
//	PurgeableOrchestrationStateTerminated
//	PurgeableOrchestrationStateCanceled
type PurgeableOrchestrationStateInput interface {
	pulumi.Input

	ToPurgeableOrchestrationStateOutput() PurgeableOrchestrationStateOutput
	ToPurgeableOrchestrationStateOutputWithContext(context.Context) PurgeableOrchestrationStateOutput
}

var purgeableOrchestrationStatePtrType = reflect.TypeOf((**PurgeableOrchestrationState)(nil)).Elem()

type PurgeableOrchestrationStatePtrInput interface {
	pulumi.Input

	ToPurgeableOrchestrationStatePtrOutput() PurgeableOrchestrationStatePtrOutput
	ToPurgeableOrchestrationStatePtrOutputWithContext(context.Context) PurgeableOrchestrationStatePtrOutput
}

type purgeableOrchestrationStatePtr string

func PurgeableOrchestrationStatePtr(v string) PurgeableOrchestrationStatePtrInput {
	return (*purgeableOrchestrationStatePtr)(&v)
}

func (*purgeableOrchestrationStatePtr) ElementType() reflect.Type {
	return purgeableOrchestrationStatePtrType
}

func (in *purgeableOrchestrationStatePtr) ToPurgeableOrchestrationStatePtrOutput() PurgeableOrchestrationStatePtrOutput {
	return pulumi.ToOutput(in).(PurgeableOrchestrationStatePtrOutput)
}

func (in *purgeableOrchestrationStatePtr) ToPurgeableOrchestrationStatePtrOutputWithContext(ctx context.Context) PurgeableOrchestrationStatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(PurgeableOrchestrationStatePtrOutput)
}

func init() {
	pulumi.RegisterOutputType(PurgeableOrchestrationStateOutput{})
	pulumi.RegisterOutputType(PurgeableOrchestrationStatePtrOutput{})
}
