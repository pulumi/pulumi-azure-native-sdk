// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cosmosdb

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v3/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Retrieves the properties of an existing Azure Cosmos DB fleetspace account under a fleetspace
//
// Uses Azure REST API version 2025-05-01-preview.
func LookupFleetspaceAccount(ctx *pulumi.Context, args *LookupFleetspaceAccountArgs, opts ...pulumi.InvokeOption) (*LookupFleetspaceAccountResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv LookupFleetspaceAccountResult
	err := ctx.Invoke("azure-native:cosmosdb:getFleetspaceAccount", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupFleetspaceAccountArgs struct {
	// Cosmos DB fleet name. Needs to be unique under a subscription.
	FleetName string `pulumi:"fleetName"`
	// Cosmos DB fleetspace account name.
	FleetspaceAccountName string `pulumi:"fleetspaceAccountName"`
	// Cosmos DB fleetspace name. Needs to be unique under a fleet.
	FleetspaceName string `pulumi:"fleetspaceName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// An Azure Cosmos DB Fleetspace Account
type LookupFleetspaceAccountResult struct {
	// The Azure API version of the resource.
	AzureApiVersion string `pulumi:"azureApiVersion"`
	// Configuration for fleetspace Account in the fleetspace.
	GlobalDatabaseAccountProperties *FleetspaceAccountPropertiesResponseGlobalDatabaseAccountProperties `pulumi:"globalDatabaseAccountProperties"`
	// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
	Id string `pulumi:"id"`
	// The name of the resource
	Name string `pulumi:"name"`
	// A provisioning state of the Fleetspace Account.
	ProvisioningState string `pulumi:"provisioningState"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponse `pulumi:"systemData"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type string `pulumi:"type"`
}

func LookupFleetspaceAccountOutput(ctx *pulumi.Context, args LookupFleetspaceAccountOutputArgs, opts ...pulumi.InvokeOption) LookupFleetspaceAccountResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupFleetspaceAccountResultOutput, error) {
			args := v.(LookupFleetspaceAccountArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: utilities.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("azure-native:cosmosdb:getFleetspaceAccount", args, LookupFleetspaceAccountResultOutput{}, options).(LookupFleetspaceAccountResultOutput), nil
		}).(LookupFleetspaceAccountResultOutput)
}

type LookupFleetspaceAccountOutputArgs struct {
	// Cosmos DB fleet name. Needs to be unique under a subscription.
	FleetName pulumi.StringInput `pulumi:"fleetName"`
	// Cosmos DB fleetspace account name.
	FleetspaceAccountName pulumi.StringInput `pulumi:"fleetspaceAccountName"`
	// Cosmos DB fleetspace name. Needs to be unique under a fleet.
	FleetspaceName pulumi.StringInput `pulumi:"fleetspaceName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
}

func (LookupFleetspaceAccountOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupFleetspaceAccountArgs)(nil)).Elem()
}

// An Azure Cosmos DB Fleetspace Account
type LookupFleetspaceAccountResultOutput struct{ *pulumi.OutputState }

func (LookupFleetspaceAccountResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupFleetspaceAccountResult)(nil)).Elem()
}

func (o LookupFleetspaceAccountResultOutput) ToLookupFleetspaceAccountResultOutput() LookupFleetspaceAccountResultOutput {
	return o
}

func (o LookupFleetspaceAccountResultOutput) ToLookupFleetspaceAccountResultOutputWithContext(ctx context.Context) LookupFleetspaceAccountResultOutput {
	return o
}

// The Azure API version of the resource.
func (o LookupFleetspaceAccountResultOutput) AzureApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFleetspaceAccountResult) string { return v.AzureApiVersion }).(pulumi.StringOutput)
}

// Configuration for fleetspace Account in the fleetspace.
func (o LookupFleetspaceAccountResultOutput) GlobalDatabaseAccountProperties() FleetspaceAccountPropertiesResponseGlobalDatabaseAccountPropertiesPtrOutput {
	return o.ApplyT(func(v LookupFleetspaceAccountResult) *FleetspaceAccountPropertiesResponseGlobalDatabaseAccountProperties {
		return v.GlobalDatabaseAccountProperties
	}).(FleetspaceAccountPropertiesResponseGlobalDatabaseAccountPropertiesPtrOutput)
}

// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
func (o LookupFleetspaceAccountResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFleetspaceAccountResult) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the resource
func (o LookupFleetspaceAccountResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFleetspaceAccountResult) string { return v.Name }).(pulumi.StringOutput)
}

// A provisioning state of the Fleetspace Account.
func (o LookupFleetspaceAccountResultOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFleetspaceAccountResult) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o LookupFleetspaceAccountResultOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v LookupFleetspaceAccountResult) SystemDataResponse { return v.SystemData }).(SystemDataResponseOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o LookupFleetspaceAccountResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFleetspaceAccountResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupFleetspaceAccountResultOutput{})
}
