// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cosmosdb

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v3/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Retrieves the connection info for the notebook workspace
//
// Uses Azure REST API version 2024-11-15.
//
// Other available API versions: 2019-08-01, 2019-12-12, 2020-03-01, 2020-04-01, 2020-06-01-preview, 2020-09-01, 2021-01-15, 2021-03-01-preview, 2021-03-15, 2021-04-01-preview, 2021-04-15, 2021-05-15, 2021-06-15, 2021-07-01-preview, 2021-10-15, 2021-10-15-preview, 2021-11-15-preview, 2022-02-15-preview, 2022-05-15, 2022-05-15-preview, 2022-08-15, 2022-08-15-preview, 2022-11-15, 2022-11-15-preview, 2023-03-01-preview, 2023-03-15, 2023-03-15-preview, 2023-04-15, 2023-09-15, 2023-09-15-preview, 2023-11-15, 2023-11-15-preview, 2024-02-15-preview, 2024-05-15, 2024-05-15-preview, 2024-08-15, 2024-09-01-preview, 2024-12-01-preview. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native cosmosdb [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
func ListNotebookWorkspaceConnectionInfo(ctx *pulumi.Context, args *ListNotebookWorkspaceConnectionInfoArgs, opts ...pulumi.InvokeOption) (*ListNotebookWorkspaceConnectionInfoResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv ListNotebookWorkspaceConnectionInfoResult
	err := ctx.Invoke("azure-native:cosmosdb:listNotebookWorkspaceConnectionInfo", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type ListNotebookWorkspaceConnectionInfoArgs struct {
	// Cosmos DB database account name.
	AccountName string `pulumi:"accountName"`
	// The name of the notebook workspace resource.
	NotebookWorkspaceName string `pulumi:"notebookWorkspaceName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// The connection info for the given notebook workspace
type ListNotebookWorkspaceConnectionInfoResult struct {
	// Specifies auth token used for connecting to Notebook server (uses token-based auth).
	AuthToken string `pulumi:"authToken"`
	// Specifies the endpoint of Notebook server.
	NotebookServerEndpoint string `pulumi:"notebookServerEndpoint"`
}

func ListNotebookWorkspaceConnectionInfoOutput(ctx *pulumi.Context, args ListNotebookWorkspaceConnectionInfoOutputArgs, opts ...pulumi.InvokeOption) ListNotebookWorkspaceConnectionInfoResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (ListNotebookWorkspaceConnectionInfoResultOutput, error) {
			args := v.(ListNotebookWorkspaceConnectionInfoArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: utilities.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("azure-native:cosmosdb:listNotebookWorkspaceConnectionInfo", args, ListNotebookWorkspaceConnectionInfoResultOutput{}, options).(ListNotebookWorkspaceConnectionInfoResultOutput), nil
		}).(ListNotebookWorkspaceConnectionInfoResultOutput)
}

type ListNotebookWorkspaceConnectionInfoOutputArgs struct {
	// Cosmos DB database account name.
	AccountName pulumi.StringInput `pulumi:"accountName"`
	// The name of the notebook workspace resource.
	NotebookWorkspaceName pulumi.StringInput `pulumi:"notebookWorkspaceName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
}

func (ListNotebookWorkspaceConnectionInfoOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ListNotebookWorkspaceConnectionInfoArgs)(nil)).Elem()
}

// The connection info for the given notebook workspace
type ListNotebookWorkspaceConnectionInfoResultOutput struct{ *pulumi.OutputState }

func (ListNotebookWorkspaceConnectionInfoResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListNotebookWorkspaceConnectionInfoResult)(nil)).Elem()
}

func (o ListNotebookWorkspaceConnectionInfoResultOutput) ToListNotebookWorkspaceConnectionInfoResultOutput() ListNotebookWorkspaceConnectionInfoResultOutput {
	return o
}

func (o ListNotebookWorkspaceConnectionInfoResultOutput) ToListNotebookWorkspaceConnectionInfoResultOutputWithContext(ctx context.Context) ListNotebookWorkspaceConnectionInfoResultOutput {
	return o
}

// Specifies auth token used for connecting to Notebook server (uses token-based auth).
func (o ListNotebookWorkspaceConnectionInfoResultOutput) AuthToken() pulumi.StringOutput {
	return o.ApplyT(func(v ListNotebookWorkspaceConnectionInfoResult) string { return v.AuthToken }).(pulumi.StringOutput)
}

// Specifies the endpoint of Notebook server.
func (o ListNotebookWorkspaceConnectionInfoResultOutput) NotebookServerEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v ListNotebookWorkspaceConnectionInfoResult) string { return v.NotebookServerEndpoint }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(ListNotebookWorkspaceConnectionInfoResultOutput{})
}
