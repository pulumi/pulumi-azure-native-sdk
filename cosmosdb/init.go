// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cosmosdb

import (
	"fmt"

	"github.com/blang/semver"
	"github.com/pulumi/pulumi-azure-native-sdk/v3/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type module struct {
	version semver.Version
}

func (m *module) Version() semver.Version {
	return m.version
}

func (m *module) Construct(ctx *pulumi.Context, name, typ, urn string) (r pulumi.Resource, err error) {
	switch typ {
	case "azure-native:cosmosdb:CassandraCluster":
		r = &CassandraCluster{}
	case "azure-native:cosmosdb:CassandraDataCenter":
		r = &CassandraDataCenter{}
	case "azure-native:cosmosdb:CassandraResourceCassandraKeyspace":
		r = &CassandraResourceCassandraKeyspace{}
	case "azure-native:cosmosdb:CassandraResourceCassandraRoleAssignment":
		r = &CassandraResourceCassandraRoleAssignment{}
	case "azure-native:cosmosdb:CassandraResourceCassandraRoleDefinition":
		r = &CassandraResourceCassandraRoleDefinition{}
	case "azure-native:cosmosdb:CassandraResourceCassandraTable":
		r = &CassandraResourceCassandraTable{}
	case "azure-native:cosmosdb:CassandraResourceCassandraView":
		r = &CassandraResourceCassandraView{}
	case "azure-native:cosmosdb:DatabaseAccount":
		r = &DatabaseAccount{}
	case "azure-native:cosmosdb:DatabaseAccountCassandraKeyspace":
		r = &DatabaseAccountCassandraKeyspace{}
	case "azure-native:cosmosdb:DatabaseAccountCassandraTable":
		r = &DatabaseAccountCassandraTable{}
	case "azure-native:cosmosdb:DatabaseAccountGremlinDatabase":
		r = &DatabaseAccountGremlinDatabase{}
	case "azure-native:cosmosdb:DatabaseAccountGremlinGraph":
		r = &DatabaseAccountGremlinGraph{}
	case "azure-native:cosmosdb:DatabaseAccountMongoDBCollection":
		r = &DatabaseAccountMongoDBCollection{}
	case "azure-native:cosmosdb:DatabaseAccountMongoDBDatabase":
		r = &DatabaseAccountMongoDBDatabase{}
	case "azure-native:cosmosdb:DatabaseAccountSqlContainer":
		r = &DatabaseAccountSqlContainer{}
	case "azure-native:cosmosdb:DatabaseAccountSqlDatabase":
		r = &DatabaseAccountSqlDatabase{}
	case "azure-native:cosmosdb:DatabaseAccountTable":
		r = &DatabaseAccountTable{}
	case "azure-native:cosmosdb:Fleet":
		r = &Fleet{}
	case "azure-native:cosmosdb:FleetAnalytic":
		r = &FleetAnalytic{}
	case "azure-native:cosmosdb:Fleetspace":
		r = &Fleetspace{}
	case "azure-native:cosmosdb:FleetspaceAccount":
		r = &FleetspaceAccount{}
	case "azure-native:cosmosdb:GraphResourceGraph":
		r = &GraphResourceGraph{}
	case "azure-native:cosmosdb:GremlinResourceGremlinDatabase":
		r = &GremlinResourceGremlinDatabase{}
	case "azure-native:cosmosdb:GremlinResourceGremlinGraph":
		r = &GremlinResourceGremlinGraph{}
	case "azure-native:cosmosdb:GremlinResourceGremlinRoleAssignment":
		r = &GremlinResourceGremlinRoleAssignment{}
	case "azure-native:cosmosdb:GremlinResourceGremlinRoleDefinition":
		r = &GremlinResourceGremlinRoleDefinition{}
	case "azure-native:cosmosdb:MongoCluster":
		r = &MongoCluster{}
	case "azure-native:cosmosdb:MongoClusterFirewallRule":
		r = &MongoClusterFirewallRule{}
	case "azure-native:cosmosdb:MongoDBResourceMongoDBCollection":
		r = &MongoDBResourceMongoDBCollection{}
	case "azure-native:cosmosdb:MongoDBResourceMongoDBDatabase":
		r = &MongoDBResourceMongoDBDatabase{}
	case "azure-native:cosmosdb:MongoDBResourceMongoRoleDefinition":
		r = &MongoDBResourceMongoRoleDefinition{}
	case "azure-native:cosmosdb:MongoDBResourceMongoUserDefinition":
		r = &MongoDBResourceMongoUserDefinition{}
	case "azure-native:cosmosdb:MongoMIResourceMongoMIRoleAssignment":
		r = &MongoMIResourceMongoMIRoleAssignment{}
	case "azure-native:cosmosdb:MongoMIResourceMongoMIRoleDefinition":
		r = &MongoMIResourceMongoMIRoleDefinition{}
	case "azure-native:cosmosdb:NotebookWorkspace":
		r = &NotebookWorkspace{}
	case "azure-native:cosmosdb:PrivateEndpointConnection":
		r = &PrivateEndpointConnection{}
	case "azure-native:cosmosdb:Service":
		r = &Service{}
	case "azure-native:cosmosdb:SqlResourceSqlContainer":
		r = &SqlResourceSqlContainer{}
	case "azure-native:cosmosdb:SqlResourceSqlDatabase":
		r = &SqlResourceSqlDatabase{}
	case "azure-native:cosmosdb:SqlResourceSqlRoleAssignment":
		r = &SqlResourceSqlRoleAssignment{}
	case "azure-native:cosmosdb:SqlResourceSqlRoleDefinition":
		r = &SqlResourceSqlRoleDefinition{}
	case "azure-native:cosmosdb:SqlResourceSqlStoredProcedure":
		r = &SqlResourceSqlStoredProcedure{}
	case "azure-native:cosmosdb:SqlResourceSqlTrigger":
		r = &SqlResourceSqlTrigger{}
	case "azure-native:cosmosdb:SqlResourceSqlUserDefinedFunction":
		r = &SqlResourceSqlUserDefinedFunction{}
	case "azure-native:cosmosdb:TableResourceTable":
		r = &TableResourceTable{}
	case "azure-native:cosmosdb:TableResourceTableRoleAssignment":
		r = &TableResourceTableRoleAssignment{}
	case "azure-native:cosmosdb:TableResourceTableRoleDefinition":
		r = &TableResourceTableRoleDefinition{}
	case "azure-native:cosmosdb:ThroughputPool":
		r = &ThroughputPool{}
	case "azure-native:cosmosdb:ThroughputPoolAccount":
		r = &ThroughputPoolAccount{}
	default:
		return nil, fmt.Errorf("unknown resource type: %s", typ)
	}

	err = ctx.RegisterResource(typ, name, nil, r, pulumi.URN_(urn))
	return
}

func init() {
	version, err := utilities.PkgVersion()
	if err != nil {
		version = semver.Version{Major: 1}
	}
	pulumi.RegisterResourceModule(
		"azure-native",
		"cosmosdb",
		&module{version},
	)
}
