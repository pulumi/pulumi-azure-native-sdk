// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cosmosdb

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure-native-sdk/v3/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// An Azure Cosmos DB FleetAnalytics.
//
// Uses Azure REST API version 2025-05-01-preview.
type FleetAnalytic struct {
	pulumi.CustomResourceState

	// The Azure API version of the resource.
	AzureApiVersion pulumi.StringOutput `pulumi:"azureApiVersion"`
	// The name of the resource
	Name pulumi.StringOutput `pulumi:"name"`
	// A provisioning state of the FleetAnalytics.
	ProvisioningState pulumi.StringOutput `pulumi:"provisioningState"`
	// The type of the fleet analytics resource.
	StorageLocationType pulumi.StringPtrOutput `pulumi:"storageLocationType"`
	// The unique identifier of the fleet analytics resource.
	StorageLocationUri pulumi.StringPtrOutput `pulumi:"storageLocationUri"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponseOutput `pulumi:"systemData"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewFleetAnalytic registers a new resource with the given unique name, arguments, and options.
func NewFleetAnalytic(ctx *pulumi.Context,
	name string, args *FleetAnalyticArgs, opts ...pulumi.ResourceOption) (*FleetAnalytic, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.FleetName == nil {
		return nil, errors.New("invalid value for required argument 'FleetName'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:cosmosdb/v20250501preview:FleetAnalytic"),
		},
	})
	opts = append(opts, aliases)
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource FleetAnalytic
	err := ctx.RegisterResource("azure-native:cosmosdb:FleetAnalytic", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetFleetAnalytic gets an existing FleetAnalytic resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFleetAnalytic(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *FleetAnalyticState, opts ...pulumi.ResourceOption) (*FleetAnalytic, error) {
	var resource FleetAnalytic
	err := ctx.ReadResource("azure-native:cosmosdb:FleetAnalytic", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering FleetAnalytic resources.
type fleetAnalyticState struct {
}

type FleetAnalyticState struct {
}

func (FleetAnalyticState) ElementType() reflect.Type {
	return reflect.TypeOf((*fleetAnalyticState)(nil)).Elem()
}

type fleetAnalyticArgs struct {
	// Cosmos DB fleetAnalytics name.
	FleetAnalyticsName *string `pulumi:"fleetAnalyticsName"`
	// Cosmos DB fleet name. Needs to be unique under a subscription.
	FleetName string `pulumi:"fleetName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The type of the fleet analytics resource.
	StorageLocationType *string `pulumi:"storageLocationType"`
	// The unique identifier of the fleet analytics resource.
	StorageLocationUri *string `pulumi:"storageLocationUri"`
}

// The set of arguments for constructing a FleetAnalytic resource.
type FleetAnalyticArgs struct {
	// Cosmos DB fleetAnalytics name.
	FleetAnalyticsName pulumi.StringPtrInput
	// Cosmos DB fleet name. Needs to be unique under a subscription.
	FleetName pulumi.StringInput
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput
	// The type of the fleet analytics resource.
	StorageLocationType pulumi.StringPtrInput
	// The unique identifier of the fleet analytics resource.
	StorageLocationUri pulumi.StringPtrInput
}

func (FleetAnalyticArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*fleetAnalyticArgs)(nil)).Elem()
}

type FleetAnalyticInput interface {
	pulumi.Input

	ToFleetAnalyticOutput() FleetAnalyticOutput
	ToFleetAnalyticOutputWithContext(ctx context.Context) FleetAnalyticOutput
}

func (*FleetAnalytic) ElementType() reflect.Type {
	return reflect.TypeOf((**FleetAnalytic)(nil)).Elem()
}

func (i *FleetAnalytic) ToFleetAnalyticOutput() FleetAnalyticOutput {
	return i.ToFleetAnalyticOutputWithContext(context.Background())
}

func (i *FleetAnalytic) ToFleetAnalyticOutputWithContext(ctx context.Context) FleetAnalyticOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FleetAnalyticOutput)
}

type FleetAnalyticOutput struct{ *pulumi.OutputState }

func (FleetAnalyticOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FleetAnalytic)(nil)).Elem()
}

func (o FleetAnalyticOutput) ToFleetAnalyticOutput() FleetAnalyticOutput {
	return o
}

func (o FleetAnalyticOutput) ToFleetAnalyticOutputWithContext(ctx context.Context) FleetAnalyticOutput {
	return o
}

// The Azure API version of the resource.
func (o FleetAnalyticOutput) AzureApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *FleetAnalytic) pulumi.StringOutput { return v.AzureApiVersion }).(pulumi.StringOutput)
}

// The name of the resource
func (o FleetAnalyticOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *FleetAnalytic) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// A provisioning state of the FleetAnalytics.
func (o FleetAnalyticOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v *FleetAnalytic) pulumi.StringOutput { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The type of the fleet analytics resource.
func (o FleetAnalyticOutput) StorageLocationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FleetAnalytic) pulumi.StringPtrOutput { return v.StorageLocationType }).(pulumi.StringPtrOutput)
}

// The unique identifier of the fleet analytics resource.
func (o FleetAnalyticOutput) StorageLocationUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FleetAnalytic) pulumi.StringPtrOutput { return v.StorageLocationUri }).(pulumi.StringPtrOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o FleetAnalyticOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v *FleetAnalytic) SystemDataResponseOutput { return v.SystemData }).(SystemDataResponseOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o FleetAnalyticOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *FleetAnalytic) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(FleetAnalyticOutput{})
}
