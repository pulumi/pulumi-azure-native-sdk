// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cosmosdb

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v3/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Lists the access keys for the specified Azure Cosmos DB database account.
//
// Uses Azure REST API version 2024-11-15.
//
// Other available API versions: 2015-04-01, 2015-04-08, 2015-11-06, 2016-03-19, 2016-03-31, 2019-08-01, 2019-12-12, 2020-03-01, 2020-04-01, 2020-06-01-preview, 2020-09-01, 2021-01-15, 2021-03-01-preview, 2021-03-15, 2021-04-01-preview, 2021-04-15, 2021-05-15, 2021-06-15, 2021-07-01-preview, 2021-10-15, 2021-10-15-preview, 2021-11-15-preview, 2022-02-15-preview, 2022-05-15, 2022-05-15-preview, 2022-08-15, 2022-08-15-preview, 2022-11-15, 2022-11-15-preview, 2023-03-01-preview, 2023-03-15, 2023-03-15-preview, 2023-04-15, 2023-09-15, 2023-09-15-preview, 2023-11-15, 2023-11-15-preview, 2024-02-15-preview, 2024-05-15, 2024-05-15-preview, 2024-08-15, 2024-09-01-preview, 2024-12-01-preview, 2025-04-15, 2025-05-01-preview. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native cosmosdb [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
func ListDatabaseAccountKeys(ctx *pulumi.Context, args *ListDatabaseAccountKeysArgs, opts ...pulumi.InvokeOption) (*ListDatabaseAccountKeysResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv ListDatabaseAccountKeysResult
	err := ctx.Invoke("azure-native:cosmosdb:listDatabaseAccountKeys", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type ListDatabaseAccountKeysArgs struct {
	// Cosmos DB database account name.
	AccountName string `pulumi:"accountName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// The access keys for the given database account.
type ListDatabaseAccountKeysResult struct {
	// Base 64 encoded value of the primary read-write key.
	PrimaryMasterKey string `pulumi:"primaryMasterKey"`
	// Base 64 encoded value of the primary read-only key.
	PrimaryReadonlyMasterKey string `pulumi:"primaryReadonlyMasterKey"`
	// Base 64 encoded value of the secondary read-write key.
	SecondaryMasterKey string `pulumi:"secondaryMasterKey"`
	// Base 64 encoded value of the secondary read-only key.
	SecondaryReadonlyMasterKey string `pulumi:"secondaryReadonlyMasterKey"`
}

func ListDatabaseAccountKeysOutput(ctx *pulumi.Context, args ListDatabaseAccountKeysOutputArgs, opts ...pulumi.InvokeOption) ListDatabaseAccountKeysResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (ListDatabaseAccountKeysResultOutput, error) {
			args := v.(ListDatabaseAccountKeysArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: utilities.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("azure-native:cosmosdb:listDatabaseAccountKeys", args, ListDatabaseAccountKeysResultOutput{}, options).(ListDatabaseAccountKeysResultOutput), nil
		}).(ListDatabaseAccountKeysResultOutput)
}

type ListDatabaseAccountKeysOutputArgs struct {
	// Cosmos DB database account name.
	AccountName pulumi.StringInput `pulumi:"accountName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
}

func (ListDatabaseAccountKeysOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ListDatabaseAccountKeysArgs)(nil)).Elem()
}

// The access keys for the given database account.
type ListDatabaseAccountKeysResultOutput struct{ *pulumi.OutputState }

func (ListDatabaseAccountKeysResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListDatabaseAccountKeysResult)(nil)).Elem()
}

func (o ListDatabaseAccountKeysResultOutput) ToListDatabaseAccountKeysResultOutput() ListDatabaseAccountKeysResultOutput {
	return o
}

func (o ListDatabaseAccountKeysResultOutput) ToListDatabaseAccountKeysResultOutputWithContext(ctx context.Context) ListDatabaseAccountKeysResultOutput {
	return o
}

// Base 64 encoded value of the primary read-write key.
func (o ListDatabaseAccountKeysResultOutput) PrimaryMasterKey() pulumi.StringOutput {
	return o.ApplyT(func(v ListDatabaseAccountKeysResult) string { return v.PrimaryMasterKey }).(pulumi.StringOutput)
}

// Base 64 encoded value of the primary read-only key.
func (o ListDatabaseAccountKeysResultOutput) PrimaryReadonlyMasterKey() pulumi.StringOutput {
	return o.ApplyT(func(v ListDatabaseAccountKeysResult) string { return v.PrimaryReadonlyMasterKey }).(pulumi.StringOutput)
}

// Base 64 encoded value of the secondary read-write key.
func (o ListDatabaseAccountKeysResultOutput) SecondaryMasterKey() pulumi.StringOutput {
	return o.ApplyT(func(v ListDatabaseAccountKeysResult) string { return v.SecondaryMasterKey }).(pulumi.StringOutput)
}

// Base 64 encoded value of the secondary read-only key.
func (o ListDatabaseAccountKeysResultOutput) SecondaryReadonlyMasterKey() pulumi.StringOutput {
	return o.ApplyT(func(v ListDatabaseAccountKeysResult) string { return v.SecondaryReadonlyMasterKey }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(ListDatabaseAccountKeysResultOutput{})
}
