// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cosmosdb

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v3/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Retrieves the properties of an existing Azure Cosmos DB Cassandra Role Assignment with the given Id.
//
// Uses Azure REST API version 2025-05-01-preview.
func LookupCassandraResourceCassandraRoleAssignment(ctx *pulumi.Context, args *LookupCassandraResourceCassandraRoleAssignmentArgs, opts ...pulumi.InvokeOption) (*LookupCassandraResourceCassandraRoleAssignmentResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv LookupCassandraResourceCassandraRoleAssignmentResult
	err := ctx.Invoke("azure-native:cosmosdb:getCassandraResourceCassandraRoleAssignment", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupCassandraResourceCassandraRoleAssignmentArgs struct {
	// Cosmos DB database account name.
	AccountName string `pulumi:"accountName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The GUID for the Role Assignment.
	RoleAssignmentId string `pulumi:"roleAssignmentId"`
}

// Parameters to create and update an Azure Cosmos DB Cassandra Role Assignment.
type LookupCassandraResourceCassandraRoleAssignmentResult struct {
	// The Azure API version of the resource.
	AzureApiVersion string `pulumi:"azureApiVersion"`
	// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
	Id string `pulumi:"id"`
	// The name of the resource
	Name string `pulumi:"name"`
	// The unique identifier for the associated AAD principal in the AAD graph to which access is being granted through this Cassandra Role Assignment. Tenant ID for the principal is inferred using the tenant associated with the subscription.
	PrincipalId *string `pulumi:"principalId"`
	// Provisioning state of the resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// The unique identifier for the associated Role Definition.
	RoleDefinitionId *string `pulumi:"roleDefinitionId"`
	// The data plane resource path for which access is being granted through this Cassandra Role Assignment.
	Scope *string `pulumi:"scope"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponse `pulumi:"systemData"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type string `pulumi:"type"`
}

func LookupCassandraResourceCassandraRoleAssignmentOutput(ctx *pulumi.Context, args LookupCassandraResourceCassandraRoleAssignmentOutputArgs, opts ...pulumi.InvokeOption) LookupCassandraResourceCassandraRoleAssignmentResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupCassandraResourceCassandraRoleAssignmentResultOutput, error) {
			args := v.(LookupCassandraResourceCassandraRoleAssignmentArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: utilities.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("azure-native:cosmosdb:getCassandraResourceCassandraRoleAssignment", args, LookupCassandraResourceCassandraRoleAssignmentResultOutput{}, options).(LookupCassandraResourceCassandraRoleAssignmentResultOutput), nil
		}).(LookupCassandraResourceCassandraRoleAssignmentResultOutput)
}

type LookupCassandraResourceCassandraRoleAssignmentOutputArgs struct {
	// Cosmos DB database account name.
	AccountName pulumi.StringInput `pulumi:"accountName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
	// The GUID for the Role Assignment.
	RoleAssignmentId pulumi.StringInput `pulumi:"roleAssignmentId"`
}

func (LookupCassandraResourceCassandraRoleAssignmentOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupCassandraResourceCassandraRoleAssignmentArgs)(nil)).Elem()
}

// Parameters to create and update an Azure Cosmos DB Cassandra Role Assignment.
type LookupCassandraResourceCassandraRoleAssignmentResultOutput struct{ *pulumi.OutputState }

func (LookupCassandraResourceCassandraRoleAssignmentResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupCassandraResourceCassandraRoleAssignmentResult)(nil)).Elem()
}

func (o LookupCassandraResourceCassandraRoleAssignmentResultOutput) ToLookupCassandraResourceCassandraRoleAssignmentResultOutput() LookupCassandraResourceCassandraRoleAssignmentResultOutput {
	return o
}

func (o LookupCassandraResourceCassandraRoleAssignmentResultOutput) ToLookupCassandraResourceCassandraRoleAssignmentResultOutputWithContext(ctx context.Context) LookupCassandraResourceCassandraRoleAssignmentResultOutput {
	return o
}

// The Azure API version of the resource.
func (o LookupCassandraResourceCassandraRoleAssignmentResultOutput) AzureApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCassandraResourceCassandraRoleAssignmentResult) string { return v.AzureApiVersion }).(pulumi.StringOutput)
}

// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
func (o LookupCassandraResourceCassandraRoleAssignmentResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCassandraResourceCassandraRoleAssignmentResult) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the resource
func (o LookupCassandraResourceCassandraRoleAssignmentResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCassandraResourceCassandraRoleAssignmentResult) string { return v.Name }).(pulumi.StringOutput)
}

// The unique identifier for the associated AAD principal in the AAD graph to which access is being granted through this Cassandra Role Assignment. Tenant ID for the principal is inferred using the tenant associated with the subscription.
func (o LookupCassandraResourceCassandraRoleAssignmentResultOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupCassandraResourceCassandraRoleAssignmentResult) *string { return v.PrincipalId }).(pulumi.StringPtrOutput)
}

// Provisioning state of the resource.
func (o LookupCassandraResourceCassandraRoleAssignmentResultOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCassandraResourceCassandraRoleAssignmentResult) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The unique identifier for the associated Role Definition.
func (o LookupCassandraResourceCassandraRoleAssignmentResultOutput) RoleDefinitionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupCassandraResourceCassandraRoleAssignmentResult) *string { return v.RoleDefinitionId }).(pulumi.StringPtrOutput)
}

// The data plane resource path for which access is being granted through this Cassandra Role Assignment.
func (o LookupCassandraResourceCassandraRoleAssignmentResultOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupCassandraResourceCassandraRoleAssignmentResult) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o LookupCassandraResourceCassandraRoleAssignmentResultOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v LookupCassandraResourceCassandraRoleAssignmentResult) SystemDataResponse { return v.SystemData }).(SystemDataResponseOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o LookupCassandraResourceCassandraRoleAssignmentResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCassandraResourceCassandraRoleAssignmentResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupCassandraResourceCassandraRoleAssignmentResultOutput{})
}
