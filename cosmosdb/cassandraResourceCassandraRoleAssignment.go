// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cosmosdb

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure-native-sdk/v3/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Parameters to create and update an Azure Cosmos DB Cassandra Role Assignment.
//
// Uses Azure REST API version 2025-05-01-preview.
type CassandraResourceCassandraRoleAssignment struct {
	pulumi.CustomResourceState

	// The Azure API version of the resource.
	AzureApiVersion pulumi.StringOutput `pulumi:"azureApiVersion"`
	// The name of the resource
	Name pulumi.StringOutput `pulumi:"name"`
	// The unique identifier for the associated AAD principal in the AAD graph to which access is being granted through this Cassandra Role Assignment. Tenant ID for the principal is inferred using the tenant associated with the subscription.
	PrincipalId pulumi.StringPtrOutput `pulumi:"principalId"`
	// Provisioning state of the resource.
	ProvisioningState pulumi.StringOutput `pulumi:"provisioningState"`
	// The unique identifier for the associated Role Definition.
	RoleDefinitionId pulumi.StringPtrOutput `pulumi:"roleDefinitionId"`
	// The data plane resource path for which access is being granted through this Cassandra Role Assignment.
	Scope pulumi.StringPtrOutput `pulumi:"scope"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponseOutput `pulumi:"systemData"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewCassandraResourceCassandraRoleAssignment registers a new resource with the given unique name, arguments, and options.
func NewCassandraResourceCassandraRoleAssignment(ctx *pulumi.Context,
	name string, args *CassandraResourceCassandraRoleAssignmentArgs, opts ...pulumi.ResourceOption) (*CassandraResourceCassandraRoleAssignment, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AccountName == nil {
		return nil, errors.New("invalid value for required argument 'AccountName'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:cosmosdb/v20250501preview:CassandraResourceCassandraRoleAssignment"),
		},
	})
	opts = append(opts, aliases)
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource CassandraResourceCassandraRoleAssignment
	err := ctx.RegisterResource("azure-native:cosmosdb:CassandraResourceCassandraRoleAssignment", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCassandraResourceCassandraRoleAssignment gets an existing CassandraResourceCassandraRoleAssignment resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCassandraResourceCassandraRoleAssignment(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CassandraResourceCassandraRoleAssignmentState, opts ...pulumi.ResourceOption) (*CassandraResourceCassandraRoleAssignment, error) {
	var resource CassandraResourceCassandraRoleAssignment
	err := ctx.ReadResource("azure-native:cosmosdb:CassandraResourceCassandraRoleAssignment", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CassandraResourceCassandraRoleAssignment resources.
type cassandraResourceCassandraRoleAssignmentState struct {
}

type CassandraResourceCassandraRoleAssignmentState struct {
}

func (CassandraResourceCassandraRoleAssignmentState) ElementType() reflect.Type {
	return reflect.TypeOf((*cassandraResourceCassandraRoleAssignmentState)(nil)).Elem()
}

type cassandraResourceCassandraRoleAssignmentArgs struct {
	// Cosmos DB database account name.
	AccountName string `pulumi:"accountName"`
	// The unique identifier for the associated AAD principal in the AAD graph to which access is being granted through this Cassandra Role Assignment. Tenant ID for the principal is inferred using the tenant associated with the subscription.
	PrincipalId *string `pulumi:"principalId"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The GUID for the Role Assignment.
	RoleAssignmentId *string `pulumi:"roleAssignmentId"`
	// The unique identifier for the associated Role Definition.
	RoleDefinitionId *string `pulumi:"roleDefinitionId"`
	// The data plane resource path for which access is being granted through this Cassandra Role Assignment.
	Scope *string `pulumi:"scope"`
}

// The set of arguments for constructing a CassandraResourceCassandraRoleAssignment resource.
type CassandraResourceCassandraRoleAssignmentArgs struct {
	// Cosmos DB database account name.
	AccountName pulumi.StringInput
	// The unique identifier for the associated AAD principal in the AAD graph to which access is being granted through this Cassandra Role Assignment. Tenant ID for the principal is inferred using the tenant associated with the subscription.
	PrincipalId pulumi.StringPtrInput
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput
	// The GUID for the Role Assignment.
	RoleAssignmentId pulumi.StringPtrInput
	// The unique identifier for the associated Role Definition.
	RoleDefinitionId pulumi.StringPtrInput
	// The data plane resource path for which access is being granted through this Cassandra Role Assignment.
	Scope pulumi.StringPtrInput
}

func (CassandraResourceCassandraRoleAssignmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*cassandraResourceCassandraRoleAssignmentArgs)(nil)).Elem()
}

type CassandraResourceCassandraRoleAssignmentInput interface {
	pulumi.Input

	ToCassandraResourceCassandraRoleAssignmentOutput() CassandraResourceCassandraRoleAssignmentOutput
	ToCassandraResourceCassandraRoleAssignmentOutputWithContext(ctx context.Context) CassandraResourceCassandraRoleAssignmentOutput
}

func (*CassandraResourceCassandraRoleAssignment) ElementType() reflect.Type {
	return reflect.TypeOf((**CassandraResourceCassandraRoleAssignment)(nil)).Elem()
}

func (i *CassandraResourceCassandraRoleAssignment) ToCassandraResourceCassandraRoleAssignmentOutput() CassandraResourceCassandraRoleAssignmentOutput {
	return i.ToCassandraResourceCassandraRoleAssignmentOutputWithContext(context.Background())
}

func (i *CassandraResourceCassandraRoleAssignment) ToCassandraResourceCassandraRoleAssignmentOutputWithContext(ctx context.Context) CassandraResourceCassandraRoleAssignmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CassandraResourceCassandraRoleAssignmentOutput)
}

type CassandraResourceCassandraRoleAssignmentOutput struct{ *pulumi.OutputState }

func (CassandraResourceCassandraRoleAssignmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CassandraResourceCassandraRoleAssignment)(nil)).Elem()
}

func (o CassandraResourceCassandraRoleAssignmentOutput) ToCassandraResourceCassandraRoleAssignmentOutput() CassandraResourceCassandraRoleAssignmentOutput {
	return o
}

func (o CassandraResourceCassandraRoleAssignmentOutput) ToCassandraResourceCassandraRoleAssignmentOutputWithContext(ctx context.Context) CassandraResourceCassandraRoleAssignmentOutput {
	return o
}

// The Azure API version of the resource.
func (o CassandraResourceCassandraRoleAssignmentOutput) AzureApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *CassandraResourceCassandraRoleAssignment) pulumi.StringOutput { return v.AzureApiVersion }).(pulumi.StringOutput)
}

// The name of the resource
func (o CassandraResourceCassandraRoleAssignmentOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *CassandraResourceCassandraRoleAssignment) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The unique identifier for the associated AAD principal in the AAD graph to which access is being granted through this Cassandra Role Assignment. Tenant ID for the principal is inferred using the tenant associated with the subscription.
func (o CassandraResourceCassandraRoleAssignmentOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CassandraResourceCassandraRoleAssignment) pulumi.StringPtrOutput { return v.PrincipalId }).(pulumi.StringPtrOutput)
}

// Provisioning state of the resource.
func (o CassandraResourceCassandraRoleAssignmentOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v *CassandraResourceCassandraRoleAssignment) pulumi.StringOutput { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The unique identifier for the associated Role Definition.
func (o CassandraResourceCassandraRoleAssignmentOutput) RoleDefinitionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CassandraResourceCassandraRoleAssignment) pulumi.StringPtrOutput { return v.RoleDefinitionId }).(pulumi.StringPtrOutput)
}

// The data plane resource path for which access is being granted through this Cassandra Role Assignment.
func (o CassandraResourceCassandraRoleAssignmentOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CassandraResourceCassandraRoleAssignment) pulumi.StringPtrOutput { return v.Scope }).(pulumi.StringPtrOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o CassandraResourceCassandraRoleAssignmentOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v *CassandraResourceCassandraRoleAssignment) SystemDataResponseOutput { return v.SystemData }).(SystemDataResponseOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o CassandraResourceCassandraRoleAssignmentOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *CassandraResourceCassandraRoleAssignment) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(CassandraResourceCassandraRoleAssignmentOutput{})
}
