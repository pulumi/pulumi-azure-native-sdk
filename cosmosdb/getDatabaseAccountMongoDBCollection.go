// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cosmosdb

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Gets the MongoDB collection under an existing Azure Cosmos DB database account.
//
// Uses Azure REST API version 2016-03-31.
//
// Other available API versions: 2015-04-01, 2015-04-08, 2015-11-06, 2016-03-19. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native cosmosdb [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
func LookupDatabaseAccountMongoDBCollection(ctx *pulumi.Context, args *LookupDatabaseAccountMongoDBCollectionArgs, opts ...pulumi.InvokeOption) (*LookupDatabaseAccountMongoDBCollectionResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv LookupDatabaseAccountMongoDBCollectionResult
	err := ctx.Invoke("azure-native:cosmosdb:getDatabaseAccountMongoDBCollection", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupDatabaseAccountMongoDBCollectionArgs struct {
	// Cosmos DB database account name.
	AccountName string `pulumi:"accountName"`
	// Cosmos DB collection name.
	CollectionName string `pulumi:"collectionName"`
	// Cosmos DB database name.
	DatabaseName string `pulumi:"databaseName"`
	// Name of an Azure resource group.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// An Azure Cosmos DB MongoDB collection.
type LookupDatabaseAccountMongoDBCollectionResult struct {
	// The Azure API version of the resource.
	AzureApiVersion string `pulumi:"azureApiVersion"`
	// The unique resource identifier of the database account.
	Id string `pulumi:"id"`
	// List of index keys
	Indexes []MongoIndexResponse `pulumi:"indexes"`
	// The location of the resource group to which the resource belongs.
	Location *string `pulumi:"location"`
	// The name of the database account.
	Name string `pulumi:"name"`
	// A key-value pair of shard keys to be applied for the request.
	ShardKey map[string]string `pulumi:"shardKey"`
	// Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with "defaultExperience": "Cassandra". Current "defaultExperience" values also include "Table", "Graph", "DocumentDB", and "MongoDB".
	Tags map[string]string `pulumi:"tags"`
	// The type of Azure resource.
	Type string `pulumi:"type"`
}

func LookupDatabaseAccountMongoDBCollectionOutput(ctx *pulumi.Context, args LookupDatabaseAccountMongoDBCollectionOutputArgs, opts ...pulumi.InvokeOption) LookupDatabaseAccountMongoDBCollectionResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupDatabaseAccountMongoDBCollectionResultOutput, error) {
			args := v.(LookupDatabaseAccountMongoDBCollectionArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: utilities.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("azure-native:cosmosdb:getDatabaseAccountMongoDBCollection", args, LookupDatabaseAccountMongoDBCollectionResultOutput{}, options).(LookupDatabaseAccountMongoDBCollectionResultOutput), nil
		}).(LookupDatabaseAccountMongoDBCollectionResultOutput)
}

type LookupDatabaseAccountMongoDBCollectionOutputArgs struct {
	// Cosmos DB database account name.
	AccountName pulumi.StringInput `pulumi:"accountName"`
	// Cosmos DB collection name.
	CollectionName pulumi.StringInput `pulumi:"collectionName"`
	// Cosmos DB database name.
	DatabaseName pulumi.StringInput `pulumi:"databaseName"`
	// Name of an Azure resource group.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
}

func (LookupDatabaseAccountMongoDBCollectionOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDatabaseAccountMongoDBCollectionArgs)(nil)).Elem()
}

// An Azure Cosmos DB MongoDB collection.
type LookupDatabaseAccountMongoDBCollectionResultOutput struct{ *pulumi.OutputState }

func (LookupDatabaseAccountMongoDBCollectionResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDatabaseAccountMongoDBCollectionResult)(nil)).Elem()
}

func (o LookupDatabaseAccountMongoDBCollectionResultOutput) ToLookupDatabaseAccountMongoDBCollectionResultOutput() LookupDatabaseAccountMongoDBCollectionResultOutput {
	return o
}

func (o LookupDatabaseAccountMongoDBCollectionResultOutput) ToLookupDatabaseAccountMongoDBCollectionResultOutputWithContext(ctx context.Context) LookupDatabaseAccountMongoDBCollectionResultOutput {
	return o
}

// The Azure API version of the resource.
func (o LookupDatabaseAccountMongoDBCollectionResultOutput) AzureApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDatabaseAccountMongoDBCollectionResult) string { return v.AzureApiVersion }).(pulumi.StringOutput)
}

// The unique resource identifier of the database account.
func (o LookupDatabaseAccountMongoDBCollectionResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDatabaseAccountMongoDBCollectionResult) string { return v.Id }).(pulumi.StringOutput)
}

// List of index keys
func (o LookupDatabaseAccountMongoDBCollectionResultOutput) Indexes() MongoIndexResponseArrayOutput {
	return o.ApplyT(func(v LookupDatabaseAccountMongoDBCollectionResult) []MongoIndexResponse { return v.Indexes }).(MongoIndexResponseArrayOutput)
}

// The location of the resource group to which the resource belongs.
func (o LookupDatabaseAccountMongoDBCollectionResultOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDatabaseAccountMongoDBCollectionResult) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// The name of the database account.
func (o LookupDatabaseAccountMongoDBCollectionResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDatabaseAccountMongoDBCollectionResult) string { return v.Name }).(pulumi.StringOutput)
}

// A key-value pair of shard keys to be applied for the request.
func (o LookupDatabaseAccountMongoDBCollectionResultOutput) ShardKey() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupDatabaseAccountMongoDBCollectionResult) map[string]string { return v.ShardKey }).(pulumi.StringMapOutput)
}

// Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with "defaultExperience": "Cassandra". Current "defaultExperience" values also include "Table", "Graph", "DocumentDB", and "MongoDB".
func (o LookupDatabaseAccountMongoDBCollectionResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupDatabaseAccountMongoDBCollectionResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// The type of Azure resource.
func (o LookupDatabaseAccountMongoDBCollectionResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDatabaseAccountMongoDBCollectionResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupDatabaseAccountMongoDBCollectionResultOutput{})
}
