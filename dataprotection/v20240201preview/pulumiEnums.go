// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20240201preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type AbsoluteMarker string

const (
	AbsoluteMarkerAllBackup    = AbsoluteMarker("AllBackup")
	AbsoluteMarkerFirstOfDay   = AbsoluteMarker("FirstOfDay")
	AbsoluteMarkerFirstOfMonth = AbsoluteMarker("FirstOfMonth")
	AbsoluteMarkerFirstOfWeek  = AbsoluteMarker("FirstOfWeek")
	AbsoluteMarkerFirstOfYear  = AbsoluteMarker("FirstOfYear")
)

func (AbsoluteMarker) ElementType() reflect.Type {
	return reflect.TypeOf((*AbsoluteMarker)(nil)).Elem()
}

func (e AbsoluteMarker) ToAbsoluteMarkerOutput() AbsoluteMarkerOutput {
	return pulumi.ToOutput(e).(AbsoluteMarkerOutput)
}

func (e AbsoluteMarker) ToAbsoluteMarkerOutputWithContext(ctx context.Context) AbsoluteMarkerOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AbsoluteMarkerOutput)
}

func (e AbsoluteMarker) ToAbsoluteMarkerPtrOutput() AbsoluteMarkerPtrOutput {
	return e.ToAbsoluteMarkerPtrOutputWithContext(context.Background())
}

func (e AbsoluteMarker) ToAbsoluteMarkerPtrOutputWithContext(ctx context.Context) AbsoluteMarkerPtrOutput {
	return AbsoluteMarker(e).ToAbsoluteMarkerOutputWithContext(ctx).ToAbsoluteMarkerPtrOutputWithContext(ctx)
}

func (e AbsoluteMarker) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AbsoluteMarker) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AbsoluteMarker) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AbsoluteMarker) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AbsoluteMarkerOutput struct{ *pulumi.OutputState }

func (AbsoluteMarkerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AbsoluteMarker)(nil)).Elem()
}

func (o AbsoluteMarkerOutput) ToAbsoluteMarkerOutput() AbsoluteMarkerOutput {
	return o
}

func (o AbsoluteMarkerOutput) ToAbsoluteMarkerOutputWithContext(ctx context.Context) AbsoluteMarkerOutput {
	return o
}

func (o AbsoluteMarkerOutput) ToAbsoluteMarkerPtrOutput() AbsoluteMarkerPtrOutput {
	return o.ToAbsoluteMarkerPtrOutputWithContext(context.Background())
}

func (o AbsoluteMarkerOutput) ToAbsoluteMarkerPtrOutputWithContext(ctx context.Context) AbsoluteMarkerPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AbsoluteMarker) *AbsoluteMarker {
		return &v
	}).(AbsoluteMarkerPtrOutput)
}

func (o AbsoluteMarkerOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AbsoluteMarkerOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AbsoluteMarker) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AbsoluteMarkerOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AbsoluteMarkerOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AbsoluteMarker) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AbsoluteMarkerPtrOutput struct{ *pulumi.OutputState }

func (AbsoluteMarkerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AbsoluteMarker)(nil)).Elem()
}

func (o AbsoluteMarkerPtrOutput) ToAbsoluteMarkerPtrOutput() AbsoluteMarkerPtrOutput {
	return o
}

func (o AbsoluteMarkerPtrOutput) ToAbsoluteMarkerPtrOutputWithContext(ctx context.Context) AbsoluteMarkerPtrOutput {
	return o
}

func (o AbsoluteMarkerPtrOutput) Elem() AbsoluteMarkerOutput {
	return o.ApplyT(func(v *AbsoluteMarker) AbsoluteMarker {
		if v != nil {
			return *v
		}
		var ret AbsoluteMarker
		return ret
	}).(AbsoluteMarkerOutput)
}

func (o AbsoluteMarkerPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AbsoluteMarkerPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AbsoluteMarker) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AbsoluteMarkerInput is an input type that accepts values of the AbsoluteMarker enum
// A concrete instance of `AbsoluteMarkerInput` can be one of the following:
//
//	AbsoluteMarkerAllBackup
//	AbsoluteMarkerFirstOfDay
//	AbsoluteMarkerFirstOfMonth
//	AbsoluteMarkerFirstOfWeek
//	AbsoluteMarkerFirstOfYear
type AbsoluteMarkerInput interface {
	pulumi.Input

	ToAbsoluteMarkerOutput() AbsoluteMarkerOutput
	ToAbsoluteMarkerOutputWithContext(context.Context) AbsoluteMarkerOutput
}

var absoluteMarkerPtrType = reflect.TypeOf((**AbsoluteMarker)(nil)).Elem()

type AbsoluteMarkerPtrInput interface {
	pulumi.Input

	ToAbsoluteMarkerPtrOutput() AbsoluteMarkerPtrOutput
	ToAbsoluteMarkerPtrOutputWithContext(context.Context) AbsoluteMarkerPtrOutput
}

type absoluteMarkerPtr string

func AbsoluteMarkerPtr(v string) AbsoluteMarkerPtrInput {
	return (*absoluteMarkerPtr)(&v)
}

func (*absoluteMarkerPtr) ElementType() reflect.Type {
	return absoluteMarkerPtrType
}

func (in *absoluteMarkerPtr) ToAbsoluteMarkerPtrOutput() AbsoluteMarkerPtrOutput {
	return pulumi.ToOutput(in).(AbsoluteMarkerPtrOutput)
}

func (in *absoluteMarkerPtr) ToAbsoluteMarkerPtrOutputWithContext(ctx context.Context) AbsoluteMarkerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AbsoluteMarkerPtrOutput)
}

type AlertsState string

const (
	AlertsStateEnabled  = AlertsState("Enabled")
	AlertsStateDisabled = AlertsState("Disabled")
)

func (AlertsState) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertsState)(nil)).Elem()
}

func (e AlertsState) ToAlertsStateOutput() AlertsStateOutput {
	return pulumi.ToOutput(e).(AlertsStateOutput)
}

func (e AlertsState) ToAlertsStateOutputWithContext(ctx context.Context) AlertsStateOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AlertsStateOutput)
}

func (e AlertsState) ToAlertsStatePtrOutput() AlertsStatePtrOutput {
	return e.ToAlertsStatePtrOutputWithContext(context.Background())
}

func (e AlertsState) ToAlertsStatePtrOutputWithContext(ctx context.Context) AlertsStatePtrOutput {
	return AlertsState(e).ToAlertsStateOutputWithContext(ctx).ToAlertsStatePtrOutputWithContext(ctx)
}

func (e AlertsState) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AlertsState) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AlertsState) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AlertsState) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AlertsStateOutput struct{ *pulumi.OutputState }

func (AlertsStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertsState)(nil)).Elem()
}

func (o AlertsStateOutput) ToAlertsStateOutput() AlertsStateOutput {
	return o
}

func (o AlertsStateOutput) ToAlertsStateOutputWithContext(ctx context.Context) AlertsStateOutput {
	return o
}

func (o AlertsStateOutput) ToAlertsStatePtrOutput() AlertsStatePtrOutput {
	return o.ToAlertsStatePtrOutputWithContext(context.Background())
}

func (o AlertsStateOutput) ToAlertsStatePtrOutputWithContext(ctx context.Context) AlertsStatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AlertsState) *AlertsState {
		return &v
	}).(AlertsStatePtrOutput)
}

func (o AlertsStateOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AlertsStateOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AlertsState) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AlertsStateOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AlertsStateOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AlertsState) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AlertsStatePtrOutput struct{ *pulumi.OutputState }

func (AlertsStatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AlertsState)(nil)).Elem()
}

func (o AlertsStatePtrOutput) ToAlertsStatePtrOutput() AlertsStatePtrOutput {
	return o
}

func (o AlertsStatePtrOutput) ToAlertsStatePtrOutputWithContext(ctx context.Context) AlertsStatePtrOutput {
	return o
}

func (o AlertsStatePtrOutput) Elem() AlertsStateOutput {
	return o.ApplyT(func(v *AlertsState) AlertsState {
		if v != nil {
			return *v
		}
		var ret AlertsState
		return ret
	}).(AlertsStateOutput)
}

func (o AlertsStatePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AlertsStatePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AlertsState) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AlertsStateInput is an input type that accepts values of the AlertsState enum
// A concrete instance of `AlertsStateInput` can be one of the following:
//
//	AlertsStateEnabled
//	AlertsStateDisabled
type AlertsStateInput interface {
	pulumi.Input

	ToAlertsStateOutput() AlertsStateOutput
	ToAlertsStateOutputWithContext(context.Context) AlertsStateOutput
}

var alertsStatePtrType = reflect.TypeOf((**AlertsState)(nil)).Elem()

type AlertsStatePtrInput interface {
	pulumi.Input

	ToAlertsStatePtrOutput() AlertsStatePtrOutput
	ToAlertsStatePtrOutputWithContext(context.Context) AlertsStatePtrOutput
}

type alertsStatePtr string

func AlertsStatePtr(v string) AlertsStatePtrInput {
	return (*alertsStatePtr)(&v)
}

func (*alertsStatePtr) ElementType() reflect.Type {
	return alertsStatePtrType
}

func (in *alertsStatePtr) ToAlertsStatePtrOutput() AlertsStatePtrOutput {
	return pulumi.ToOutput(in).(AlertsStatePtrOutput)
}

func (in *alertsStatePtr) ToAlertsStatePtrOutputWithContext(ctx context.Context) AlertsStatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AlertsStatePtrOutput)
}

// CrossRegionRestore state
type CrossRegionRestoreState string

const (
	CrossRegionRestoreStateDisabled = CrossRegionRestoreState("Disabled")
	CrossRegionRestoreStateEnabled  = CrossRegionRestoreState("Enabled")
)

func (CrossRegionRestoreState) ElementType() reflect.Type {
	return reflect.TypeOf((*CrossRegionRestoreState)(nil)).Elem()
}

func (e CrossRegionRestoreState) ToCrossRegionRestoreStateOutput() CrossRegionRestoreStateOutput {
	return pulumi.ToOutput(e).(CrossRegionRestoreStateOutput)
}

func (e CrossRegionRestoreState) ToCrossRegionRestoreStateOutputWithContext(ctx context.Context) CrossRegionRestoreStateOutput {
	return pulumi.ToOutputWithContext(ctx, e).(CrossRegionRestoreStateOutput)
}

func (e CrossRegionRestoreState) ToCrossRegionRestoreStatePtrOutput() CrossRegionRestoreStatePtrOutput {
	return e.ToCrossRegionRestoreStatePtrOutputWithContext(context.Background())
}

func (e CrossRegionRestoreState) ToCrossRegionRestoreStatePtrOutputWithContext(ctx context.Context) CrossRegionRestoreStatePtrOutput {
	return CrossRegionRestoreState(e).ToCrossRegionRestoreStateOutputWithContext(ctx).ToCrossRegionRestoreStatePtrOutputWithContext(ctx)
}

func (e CrossRegionRestoreState) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e CrossRegionRestoreState) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e CrossRegionRestoreState) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e CrossRegionRestoreState) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type CrossRegionRestoreStateOutput struct{ *pulumi.OutputState }

func (CrossRegionRestoreStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CrossRegionRestoreState)(nil)).Elem()
}

func (o CrossRegionRestoreStateOutput) ToCrossRegionRestoreStateOutput() CrossRegionRestoreStateOutput {
	return o
}

func (o CrossRegionRestoreStateOutput) ToCrossRegionRestoreStateOutputWithContext(ctx context.Context) CrossRegionRestoreStateOutput {
	return o
}

func (o CrossRegionRestoreStateOutput) ToCrossRegionRestoreStatePtrOutput() CrossRegionRestoreStatePtrOutput {
	return o.ToCrossRegionRestoreStatePtrOutputWithContext(context.Background())
}

func (o CrossRegionRestoreStateOutput) ToCrossRegionRestoreStatePtrOutputWithContext(ctx context.Context) CrossRegionRestoreStatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CrossRegionRestoreState) *CrossRegionRestoreState {
		return &v
	}).(CrossRegionRestoreStatePtrOutput)
}

func (o CrossRegionRestoreStateOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o CrossRegionRestoreStateOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e CrossRegionRestoreState) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o CrossRegionRestoreStateOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o CrossRegionRestoreStateOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e CrossRegionRestoreState) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type CrossRegionRestoreStatePtrOutput struct{ *pulumi.OutputState }

func (CrossRegionRestoreStatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CrossRegionRestoreState)(nil)).Elem()
}

func (o CrossRegionRestoreStatePtrOutput) ToCrossRegionRestoreStatePtrOutput() CrossRegionRestoreStatePtrOutput {
	return o
}

func (o CrossRegionRestoreStatePtrOutput) ToCrossRegionRestoreStatePtrOutputWithContext(ctx context.Context) CrossRegionRestoreStatePtrOutput {
	return o
}

func (o CrossRegionRestoreStatePtrOutput) Elem() CrossRegionRestoreStateOutput {
	return o.ApplyT(func(v *CrossRegionRestoreState) CrossRegionRestoreState {
		if v != nil {
			return *v
		}
		var ret CrossRegionRestoreState
		return ret
	}).(CrossRegionRestoreStateOutput)
}

func (o CrossRegionRestoreStatePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o CrossRegionRestoreStatePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *CrossRegionRestoreState) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// CrossRegionRestoreStateInput is an input type that accepts values of the CrossRegionRestoreState enum
// A concrete instance of `CrossRegionRestoreStateInput` can be one of the following:
//
//	CrossRegionRestoreStateDisabled
//	CrossRegionRestoreStateEnabled
type CrossRegionRestoreStateInput interface {
	pulumi.Input

	ToCrossRegionRestoreStateOutput() CrossRegionRestoreStateOutput
	ToCrossRegionRestoreStateOutputWithContext(context.Context) CrossRegionRestoreStateOutput
}

var crossRegionRestoreStatePtrType = reflect.TypeOf((**CrossRegionRestoreState)(nil)).Elem()

type CrossRegionRestoreStatePtrInput interface {
	pulumi.Input

	ToCrossRegionRestoreStatePtrOutput() CrossRegionRestoreStatePtrOutput
	ToCrossRegionRestoreStatePtrOutputWithContext(context.Context) CrossRegionRestoreStatePtrOutput
}

type crossRegionRestoreStatePtr string

func CrossRegionRestoreStatePtr(v string) CrossRegionRestoreStatePtrInput {
	return (*crossRegionRestoreStatePtr)(&v)
}

func (*crossRegionRestoreStatePtr) ElementType() reflect.Type {
	return crossRegionRestoreStatePtrType
}

func (in *crossRegionRestoreStatePtr) ToCrossRegionRestoreStatePtrOutput() CrossRegionRestoreStatePtrOutput {
	return pulumi.ToOutput(in).(CrossRegionRestoreStatePtrOutput)
}

func (in *crossRegionRestoreStatePtr) ToCrossRegionRestoreStatePtrOutputWithContext(ctx context.Context) CrossRegionRestoreStatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(CrossRegionRestoreStatePtrOutput)
}

// CrossSubscriptionRestore state
type CrossSubscriptionRestoreState string

const (
	CrossSubscriptionRestoreStateDisabled            = CrossSubscriptionRestoreState("Disabled")
	CrossSubscriptionRestoreStatePermanentlyDisabled = CrossSubscriptionRestoreState("PermanentlyDisabled")
	CrossSubscriptionRestoreStateEnabled             = CrossSubscriptionRestoreState("Enabled")
)

func (CrossSubscriptionRestoreState) ElementType() reflect.Type {
	return reflect.TypeOf((*CrossSubscriptionRestoreState)(nil)).Elem()
}

func (e CrossSubscriptionRestoreState) ToCrossSubscriptionRestoreStateOutput() CrossSubscriptionRestoreStateOutput {
	return pulumi.ToOutput(e).(CrossSubscriptionRestoreStateOutput)
}

func (e CrossSubscriptionRestoreState) ToCrossSubscriptionRestoreStateOutputWithContext(ctx context.Context) CrossSubscriptionRestoreStateOutput {
	return pulumi.ToOutputWithContext(ctx, e).(CrossSubscriptionRestoreStateOutput)
}

func (e CrossSubscriptionRestoreState) ToCrossSubscriptionRestoreStatePtrOutput() CrossSubscriptionRestoreStatePtrOutput {
	return e.ToCrossSubscriptionRestoreStatePtrOutputWithContext(context.Background())
}

func (e CrossSubscriptionRestoreState) ToCrossSubscriptionRestoreStatePtrOutputWithContext(ctx context.Context) CrossSubscriptionRestoreStatePtrOutput {
	return CrossSubscriptionRestoreState(e).ToCrossSubscriptionRestoreStateOutputWithContext(ctx).ToCrossSubscriptionRestoreStatePtrOutputWithContext(ctx)
}

func (e CrossSubscriptionRestoreState) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e CrossSubscriptionRestoreState) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e CrossSubscriptionRestoreState) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e CrossSubscriptionRestoreState) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type CrossSubscriptionRestoreStateOutput struct{ *pulumi.OutputState }

func (CrossSubscriptionRestoreStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CrossSubscriptionRestoreState)(nil)).Elem()
}

func (o CrossSubscriptionRestoreStateOutput) ToCrossSubscriptionRestoreStateOutput() CrossSubscriptionRestoreStateOutput {
	return o
}

func (o CrossSubscriptionRestoreStateOutput) ToCrossSubscriptionRestoreStateOutputWithContext(ctx context.Context) CrossSubscriptionRestoreStateOutput {
	return o
}

func (o CrossSubscriptionRestoreStateOutput) ToCrossSubscriptionRestoreStatePtrOutput() CrossSubscriptionRestoreStatePtrOutput {
	return o.ToCrossSubscriptionRestoreStatePtrOutputWithContext(context.Background())
}

func (o CrossSubscriptionRestoreStateOutput) ToCrossSubscriptionRestoreStatePtrOutputWithContext(ctx context.Context) CrossSubscriptionRestoreStatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CrossSubscriptionRestoreState) *CrossSubscriptionRestoreState {
		return &v
	}).(CrossSubscriptionRestoreStatePtrOutput)
}

func (o CrossSubscriptionRestoreStateOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o CrossSubscriptionRestoreStateOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e CrossSubscriptionRestoreState) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o CrossSubscriptionRestoreStateOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o CrossSubscriptionRestoreStateOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e CrossSubscriptionRestoreState) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type CrossSubscriptionRestoreStatePtrOutput struct{ *pulumi.OutputState }

func (CrossSubscriptionRestoreStatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CrossSubscriptionRestoreState)(nil)).Elem()
}

func (o CrossSubscriptionRestoreStatePtrOutput) ToCrossSubscriptionRestoreStatePtrOutput() CrossSubscriptionRestoreStatePtrOutput {
	return o
}

func (o CrossSubscriptionRestoreStatePtrOutput) ToCrossSubscriptionRestoreStatePtrOutputWithContext(ctx context.Context) CrossSubscriptionRestoreStatePtrOutput {
	return o
}

func (o CrossSubscriptionRestoreStatePtrOutput) Elem() CrossSubscriptionRestoreStateOutput {
	return o.ApplyT(func(v *CrossSubscriptionRestoreState) CrossSubscriptionRestoreState {
		if v != nil {
			return *v
		}
		var ret CrossSubscriptionRestoreState
		return ret
	}).(CrossSubscriptionRestoreStateOutput)
}

func (o CrossSubscriptionRestoreStatePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o CrossSubscriptionRestoreStatePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *CrossSubscriptionRestoreState) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// CrossSubscriptionRestoreStateInput is an input type that accepts values of the CrossSubscriptionRestoreState enum
// A concrete instance of `CrossSubscriptionRestoreStateInput` can be one of the following:
//
//	CrossSubscriptionRestoreStateDisabled
//	CrossSubscriptionRestoreStatePermanentlyDisabled
//	CrossSubscriptionRestoreStateEnabled
type CrossSubscriptionRestoreStateInput interface {
	pulumi.Input

	ToCrossSubscriptionRestoreStateOutput() CrossSubscriptionRestoreStateOutput
	ToCrossSubscriptionRestoreStateOutputWithContext(context.Context) CrossSubscriptionRestoreStateOutput
}

var crossSubscriptionRestoreStatePtrType = reflect.TypeOf((**CrossSubscriptionRestoreState)(nil)).Elem()

type CrossSubscriptionRestoreStatePtrInput interface {
	pulumi.Input

	ToCrossSubscriptionRestoreStatePtrOutput() CrossSubscriptionRestoreStatePtrOutput
	ToCrossSubscriptionRestoreStatePtrOutputWithContext(context.Context) CrossSubscriptionRestoreStatePtrOutput
}

type crossSubscriptionRestoreStatePtr string

func CrossSubscriptionRestoreStatePtr(v string) CrossSubscriptionRestoreStatePtrInput {
	return (*crossSubscriptionRestoreStatePtr)(&v)
}

func (*crossSubscriptionRestoreStatePtr) ElementType() reflect.Type {
	return crossSubscriptionRestoreStatePtrType
}

func (in *crossSubscriptionRestoreStatePtr) ToCrossSubscriptionRestoreStatePtrOutput() CrossSubscriptionRestoreStatePtrOutput {
	return pulumi.ToOutput(in).(CrossSubscriptionRestoreStatePtrOutput)
}

func (in *crossSubscriptionRestoreStatePtr) ToCrossSubscriptionRestoreStatePtrOutputWithContext(ctx context.Context) CrossSubscriptionRestoreStatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(CrossSubscriptionRestoreStatePtrOutput)
}

// type of datastore; Operational/Vault/Archive
type DataStoreTypes string

const (
	DataStoreTypesOperationalStore = DataStoreTypes("OperationalStore")
	DataStoreTypesVaultStore       = DataStoreTypes("VaultStore")
	DataStoreTypesArchiveStore     = DataStoreTypes("ArchiveStore")
)

func (DataStoreTypes) ElementType() reflect.Type {
	return reflect.TypeOf((*DataStoreTypes)(nil)).Elem()
}

func (e DataStoreTypes) ToDataStoreTypesOutput() DataStoreTypesOutput {
	return pulumi.ToOutput(e).(DataStoreTypesOutput)
}

func (e DataStoreTypes) ToDataStoreTypesOutputWithContext(ctx context.Context) DataStoreTypesOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DataStoreTypesOutput)
}

func (e DataStoreTypes) ToDataStoreTypesPtrOutput() DataStoreTypesPtrOutput {
	return e.ToDataStoreTypesPtrOutputWithContext(context.Background())
}

func (e DataStoreTypes) ToDataStoreTypesPtrOutputWithContext(ctx context.Context) DataStoreTypesPtrOutput {
	return DataStoreTypes(e).ToDataStoreTypesOutputWithContext(ctx).ToDataStoreTypesPtrOutputWithContext(ctx)
}

func (e DataStoreTypes) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DataStoreTypes) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DataStoreTypes) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DataStoreTypes) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DataStoreTypesOutput struct{ *pulumi.OutputState }

func (DataStoreTypesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataStoreTypes)(nil)).Elem()
}

func (o DataStoreTypesOutput) ToDataStoreTypesOutput() DataStoreTypesOutput {
	return o
}

func (o DataStoreTypesOutput) ToDataStoreTypesOutputWithContext(ctx context.Context) DataStoreTypesOutput {
	return o
}

func (o DataStoreTypesOutput) ToDataStoreTypesPtrOutput() DataStoreTypesPtrOutput {
	return o.ToDataStoreTypesPtrOutputWithContext(context.Background())
}

func (o DataStoreTypesOutput) ToDataStoreTypesPtrOutputWithContext(ctx context.Context) DataStoreTypesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataStoreTypes) *DataStoreTypes {
		return &v
	}).(DataStoreTypesPtrOutput)
}

func (o DataStoreTypesOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DataStoreTypesOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DataStoreTypes) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DataStoreTypesOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DataStoreTypesOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DataStoreTypes) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DataStoreTypesPtrOutput struct{ *pulumi.OutputState }

func (DataStoreTypesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataStoreTypes)(nil)).Elem()
}

func (o DataStoreTypesPtrOutput) ToDataStoreTypesPtrOutput() DataStoreTypesPtrOutput {
	return o
}

func (o DataStoreTypesPtrOutput) ToDataStoreTypesPtrOutputWithContext(ctx context.Context) DataStoreTypesPtrOutput {
	return o
}

func (o DataStoreTypesPtrOutput) Elem() DataStoreTypesOutput {
	return o.ApplyT(func(v *DataStoreTypes) DataStoreTypes {
		if v != nil {
			return *v
		}
		var ret DataStoreTypes
		return ret
	}).(DataStoreTypesOutput)
}

func (o DataStoreTypesPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DataStoreTypesPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DataStoreTypes) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DataStoreTypesInput is an input type that accepts values of the DataStoreTypes enum
// A concrete instance of `DataStoreTypesInput` can be one of the following:
//
//	DataStoreTypesOperationalStore
//	DataStoreTypesVaultStore
//	DataStoreTypesArchiveStore
type DataStoreTypesInput interface {
	pulumi.Input

	ToDataStoreTypesOutput() DataStoreTypesOutput
	ToDataStoreTypesOutputWithContext(context.Context) DataStoreTypesOutput
}

var dataStoreTypesPtrType = reflect.TypeOf((**DataStoreTypes)(nil)).Elem()

type DataStoreTypesPtrInput interface {
	pulumi.Input

	ToDataStoreTypesPtrOutput() DataStoreTypesPtrOutput
	ToDataStoreTypesPtrOutputWithContext(context.Context) DataStoreTypesPtrOutput
}

type dataStoreTypesPtr string

func DataStoreTypesPtr(v string) DataStoreTypesPtrInput {
	return (*dataStoreTypesPtr)(&v)
}

func (*dataStoreTypesPtr) ElementType() reflect.Type {
	return dataStoreTypesPtrType
}

func (in *dataStoreTypesPtr) ToDataStoreTypesPtrOutput() DataStoreTypesPtrOutput {
	return pulumi.ToOutput(in).(DataStoreTypesPtrOutput)
}

func (in *dataStoreTypesPtr) ToDataStoreTypesPtrOutputWithContext(ctx context.Context) DataStoreTypesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DataStoreTypesPtrOutput)
}

type DayOfWeek string

const (
	DayOfWeekFriday    = DayOfWeek("Friday")
	DayOfWeekMonday    = DayOfWeek("Monday")
	DayOfWeekSaturday  = DayOfWeek("Saturday")
	DayOfWeekSunday    = DayOfWeek("Sunday")
	DayOfWeekThursday  = DayOfWeek("Thursday")
	DayOfWeekTuesday   = DayOfWeek("Tuesday")
	DayOfWeekWednesday = DayOfWeek("Wednesday")
)

func (DayOfWeek) ElementType() reflect.Type {
	return reflect.TypeOf((*DayOfWeek)(nil)).Elem()
}

func (e DayOfWeek) ToDayOfWeekOutput() DayOfWeekOutput {
	return pulumi.ToOutput(e).(DayOfWeekOutput)
}

func (e DayOfWeek) ToDayOfWeekOutputWithContext(ctx context.Context) DayOfWeekOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DayOfWeekOutput)
}

func (e DayOfWeek) ToDayOfWeekPtrOutput() DayOfWeekPtrOutput {
	return e.ToDayOfWeekPtrOutputWithContext(context.Background())
}

func (e DayOfWeek) ToDayOfWeekPtrOutputWithContext(ctx context.Context) DayOfWeekPtrOutput {
	return DayOfWeek(e).ToDayOfWeekOutputWithContext(ctx).ToDayOfWeekPtrOutputWithContext(ctx)
}

func (e DayOfWeek) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DayOfWeek) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DayOfWeek) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DayOfWeek) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DayOfWeekOutput struct{ *pulumi.OutputState }

func (DayOfWeekOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DayOfWeek)(nil)).Elem()
}

func (o DayOfWeekOutput) ToDayOfWeekOutput() DayOfWeekOutput {
	return o
}

func (o DayOfWeekOutput) ToDayOfWeekOutputWithContext(ctx context.Context) DayOfWeekOutput {
	return o
}

func (o DayOfWeekOutput) ToDayOfWeekPtrOutput() DayOfWeekPtrOutput {
	return o.ToDayOfWeekPtrOutputWithContext(context.Background())
}

func (o DayOfWeekOutput) ToDayOfWeekPtrOutputWithContext(ctx context.Context) DayOfWeekPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DayOfWeek) *DayOfWeek {
		return &v
	}).(DayOfWeekPtrOutput)
}

func (o DayOfWeekOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DayOfWeekOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DayOfWeek) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DayOfWeekOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DayOfWeekOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DayOfWeek) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DayOfWeekPtrOutput struct{ *pulumi.OutputState }

func (DayOfWeekPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DayOfWeek)(nil)).Elem()
}

func (o DayOfWeekPtrOutput) ToDayOfWeekPtrOutput() DayOfWeekPtrOutput {
	return o
}

func (o DayOfWeekPtrOutput) ToDayOfWeekPtrOutputWithContext(ctx context.Context) DayOfWeekPtrOutput {
	return o
}

func (o DayOfWeekPtrOutput) Elem() DayOfWeekOutput {
	return o.ApplyT(func(v *DayOfWeek) DayOfWeek {
		if v != nil {
			return *v
		}
		var ret DayOfWeek
		return ret
	}).(DayOfWeekOutput)
}

func (o DayOfWeekPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DayOfWeekPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DayOfWeek) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DayOfWeekInput is an input type that accepts values of the DayOfWeek enum
// A concrete instance of `DayOfWeekInput` can be one of the following:
//
//	DayOfWeekFriday
//	DayOfWeekMonday
//	DayOfWeekSaturday
//	DayOfWeekSunday
//	DayOfWeekThursday
//	DayOfWeekTuesday
//	DayOfWeekWednesday
type DayOfWeekInput interface {
	pulumi.Input

	ToDayOfWeekOutput() DayOfWeekOutput
	ToDayOfWeekOutputWithContext(context.Context) DayOfWeekOutput
}

var dayOfWeekPtrType = reflect.TypeOf((**DayOfWeek)(nil)).Elem()

type DayOfWeekPtrInput interface {
	pulumi.Input

	ToDayOfWeekPtrOutput() DayOfWeekPtrOutput
	ToDayOfWeekPtrOutputWithContext(context.Context) DayOfWeekPtrOutput
}

type dayOfWeekPtr string

func DayOfWeekPtr(v string) DayOfWeekPtrInput {
	return (*dayOfWeekPtr)(&v)
}

func (*dayOfWeekPtr) ElementType() reflect.Type {
	return dayOfWeekPtrType
}

func (in *dayOfWeekPtr) ToDayOfWeekPtrOutput() DayOfWeekPtrOutput {
	return pulumi.ToOutput(in).(DayOfWeekPtrOutput)
}

func (in *dayOfWeekPtr) ToDayOfWeekPtrOutputWithContext(ctx context.Context) DayOfWeekPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DayOfWeekPtrOutput)
}

// Encryption state of the Backup Vault.
type EncryptionState string

const (
	// CMK encryption is enabled on the Backup Vault
	EncryptionStateEnabled = EncryptionState("Enabled")
	// CMK encryption is disabled on the Backup Vault. User can not set this state once Encryption State is 'Enabled'.
	EncryptionStateDisabled = EncryptionState("Disabled")
	// CMK encryption is in inconsistent state on the Backup Vault. This state indicates that user needs to retry the encryption settings operation immediately to correct the state.
	EncryptionStateInconsistent = EncryptionState("Inconsistent")
)

func (EncryptionState) ElementType() reflect.Type {
	return reflect.TypeOf((*EncryptionState)(nil)).Elem()
}

func (e EncryptionState) ToEncryptionStateOutput() EncryptionStateOutput {
	return pulumi.ToOutput(e).(EncryptionStateOutput)
}

func (e EncryptionState) ToEncryptionStateOutputWithContext(ctx context.Context) EncryptionStateOutput {
	return pulumi.ToOutputWithContext(ctx, e).(EncryptionStateOutput)
}

func (e EncryptionState) ToEncryptionStatePtrOutput() EncryptionStatePtrOutput {
	return e.ToEncryptionStatePtrOutputWithContext(context.Background())
}

func (e EncryptionState) ToEncryptionStatePtrOutputWithContext(ctx context.Context) EncryptionStatePtrOutput {
	return EncryptionState(e).ToEncryptionStateOutputWithContext(ctx).ToEncryptionStatePtrOutputWithContext(ctx)
}

func (e EncryptionState) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e EncryptionState) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e EncryptionState) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e EncryptionState) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type EncryptionStateOutput struct{ *pulumi.OutputState }

func (EncryptionStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EncryptionState)(nil)).Elem()
}

func (o EncryptionStateOutput) ToEncryptionStateOutput() EncryptionStateOutput {
	return o
}

func (o EncryptionStateOutput) ToEncryptionStateOutputWithContext(ctx context.Context) EncryptionStateOutput {
	return o
}

func (o EncryptionStateOutput) ToEncryptionStatePtrOutput() EncryptionStatePtrOutput {
	return o.ToEncryptionStatePtrOutputWithContext(context.Background())
}

func (o EncryptionStateOutput) ToEncryptionStatePtrOutputWithContext(ctx context.Context) EncryptionStatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EncryptionState) *EncryptionState {
		return &v
	}).(EncryptionStatePtrOutput)
}

func (o EncryptionStateOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o EncryptionStateOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e EncryptionState) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o EncryptionStateOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o EncryptionStateOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e EncryptionState) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type EncryptionStatePtrOutput struct{ *pulumi.OutputState }

func (EncryptionStatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EncryptionState)(nil)).Elem()
}

func (o EncryptionStatePtrOutput) ToEncryptionStatePtrOutput() EncryptionStatePtrOutput {
	return o
}

func (o EncryptionStatePtrOutput) ToEncryptionStatePtrOutputWithContext(ctx context.Context) EncryptionStatePtrOutput {
	return o
}

func (o EncryptionStatePtrOutput) Elem() EncryptionStateOutput {
	return o.ApplyT(func(v *EncryptionState) EncryptionState {
		if v != nil {
			return *v
		}
		var ret EncryptionState
		return ret
	}).(EncryptionStateOutput)
}

func (o EncryptionStatePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o EncryptionStatePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *EncryptionState) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// EncryptionStateInput is an input type that accepts values of the EncryptionState enum
// A concrete instance of `EncryptionStateInput` can be one of the following:
//
//	EncryptionStateEnabled
//	EncryptionStateDisabled
//	EncryptionStateInconsistent
type EncryptionStateInput interface {
	pulumi.Input

	ToEncryptionStateOutput() EncryptionStateOutput
	ToEncryptionStateOutputWithContext(context.Context) EncryptionStateOutput
}

var encryptionStatePtrType = reflect.TypeOf((**EncryptionState)(nil)).Elem()

type EncryptionStatePtrInput interface {
	pulumi.Input

	ToEncryptionStatePtrOutput() EncryptionStatePtrOutput
	ToEncryptionStatePtrOutputWithContext(context.Context) EncryptionStatePtrOutput
}

type encryptionStatePtr string

func EncryptionStatePtr(v string) EncryptionStatePtrInput {
	return (*encryptionStatePtr)(&v)
}

func (*encryptionStatePtr) ElementType() reflect.Type {
	return encryptionStatePtrType
}

func (in *encryptionStatePtr) ToEncryptionStatePtrOutput() EncryptionStatePtrOutput {
	return pulumi.ToOutput(in).(EncryptionStatePtrOutput)
}

func (in *encryptionStatePtr) ToEncryptionStatePtrOutputWithContext(ctx context.Context) EncryptionStatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(EncryptionStatePtrOutput)
}

// The identity type. 'SystemAssigned' and 'UserAssigned' are mutually exclusive. 'SystemAssigned' will use implicitly created managed identity.
type IdentityType string

const (
	IdentityTypeSystemAssigned = IdentityType("SystemAssigned")
	IdentityTypeUserAssigned   = IdentityType("UserAssigned")
)

func (IdentityType) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityType)(nil)).Elem()
}

func (e IdentityType) ToIdentityTypeOutput() IdentityTypeOutput {
	return pulumi.ToOutput(e).(IdentityTypeOutput)
}

func (e IdentityType) ToIdentityTypeOutputWithContext(ctx context.Context) IdentityTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(IdentityTypeOutput)
}

func (e IdentityType) ToIdentityTypePtrOutput() IdentityTypePtrOutput {
	return e.ToIdentityTypePtrOutputWithContext(context.Background())
}

func (e IdentityType) ToIdentityTypePtrOutputWithContext(ctx context.Context) IdentityTypePtrOutput {
	return IdentityType(e).ToIdentityTypeOutputWithContext(ctx).ToIdentityTypePtrOutputWithContext(ctx)
}

func (e IdentityType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e IdentityType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e IdentityType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e IdentityType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type IdentityTypeOutput struct{ *pulumi.OutputState }

func (IdentityTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityType)(nil)).Elem()
}

func (o IdentityTypeOutput) ToIdentityTypeOutput() IdentityTypeOutput {
	return o
}

func (o IdentityTypeOutput) ToIdentityTypeOutputWithContext(ctx context.Context) IdentityTypeOutput {
	return o
}

func (o IdentityTypeOutput) ToIdentityTypePtrOutput() IdentityTypePtrOutput {
	return o.ToIdentityTypePtrOutputWithContext(context.Background())
}

func (o IdentityTypeOutput) ToIdentityTypePtrOutputWithContext(ctx context.Context) IdentityTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IdentityType) *IdentityType {
		return &v
	}).(IdentityTypePtrOutput)
}

func (o IdentityTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o IdentityTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e IdentityType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o IdentityTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o IdentityTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e IdentityType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type IdentityTypePtrOutput struct{ *pulumi.OutputState }

func (IdentityTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityType)(nil)).Elem()
}

func (o IdentityTypePtrOutput) ToIdentityTypePtrOutput() IdentityTypePtrOutput {
	return o
}

func (o IdentityTypePtrOutput) ToIdentityTypePtrOutputWithContext(ctx context.Context) IdentityTypePtrOutput {
	return o
}

func (o IdentityTypePtrOutput) Elem() IdentityTypeOutput {
	return o.ApplyT(func(v *IdentityType) IdentityType {
		if v != nil {
			return *v
		}
		var ret IdentityType
		return ret
	}).(IdentityTypeOutput)
}

func (o IdentityTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o IdentityTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *IdentityType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// IdentityTypeInput is an input type that accepts values of the IdentityType enum
// A concrete instance of `IdentityTypeInput` can be one of the following:
//
//	IdentityTypeSystemAssigned
//	IdentityTypeUserAssigned
type IdentityTypeInput interface {
	pulumi.Input

	ToIdentityTypeOutput() IdentityTypeOutput
	ToIdentityTypeOutputWithContext(context.Context) IdentityTypeOutput
}

var identityTypePtrType = reflect.TypeOf((**IdentityType)(nil)).Elem()

type IdentityTypePtrInput interface {
	pulumi.Input

	ToIdentityTypePtrOutput() IdentityTypePtrOutput
	ToIdentityTypePtrOutputWithContext(context.Context) IdentityTypePtrOutput
}

type identityTypePtr string

func IdentityTypePtr(v string) IdentityTypePtrInput {
	return (*identityTypePtr)(&v)
}

func (*identityTypePtr) ElementType() reflect.Type {
	return identityTypePtrType
}

func (in *identityTypePtr) ToIdentityTypePtrOutput() IdentityTypePtrOutput {
	return pulumi.ToOutput(in).(IdentityTypePtrOutput)
}

func (in *identityTypePtr) ToIdentityTypePtrOutputWithContext(ctx context.Context) IdentityTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(IdentityTypePtrOutput)
}

// Immutability state
type ImmutabilityState string

const (
	ImmutabilityStateDisabled = ImmutabilityState("Disabled")
	ImmutabilityStateUnlocked = ImmutabilityState("Unlocked")
	ImmutabilityStateLocked   = ImmutabilityState("Locked")
)

func (ImmutabilityState) ElementType() reflect.Type {
	return reflect.TypeOf((*ImmutabilityState)(nil)).Elem()
}

func (e ImmutabilityState) ToImmutabilityStateOutput() ImmutabilityStateOutput {
	return pulumi.ToOutput(e).(ImmutabilityStateOutput)
}

func (e ImmutabilityState) ToImmutabilityStateOutputWithContext(ctx context.Context) ImmutabilityStateOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ImmutabilityStateOutput)
}

func (e ImmutabilityState) ToImmutabilityStatePtrOutput() ImmutabilityStatePtrOutput {
	return e.ToImmutabilityStatePtrOutputWithContext(context.Background())
}

func (e ImmutabilityState) ToImmutabilityStatePtrOutputWithContext(ctx context.Context) ImmutabilityStatePtrOutput {
	return ImmutabilityState(e).ToImmutabilityStateOutputWithContext(ctx).ToImmutabilityStatePtrOutputWithContext(ctx)
}

func (e ImmutabilityState) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ImmutabilityState) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ImmutabilityState) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ImmutabilityState) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ImmutabilityStateOutput struct{ *pulumi.OutputState }

func (ImmutabilityStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ImmutabilityState)(nil)).Elem()
}

func (o ImmutabilityStateOutput) ToImmutabilityStateOutput() ImmutabilityStateOutput {
	return o
}

func (o ImmutabilityStateOutput) ToImmutabilityStateOutputWithContext(ctx context.Context) ImmutabilityStateOutput {
	return o
}

func (o ImmutabilityStateOutput) ToImmutabilityStatePtrOutput() ImmutabilityStatePtrOutput {
	return o.ToImmutabilityStatePtrOutputWithContext(context.Background())
}

func (o ImmutabilityStateOutput) ToImmutabilityStatePtrOutputWithContext(ctx context.Context) ImmutabilityStatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ImmutabilityState) *ImmutabilityState {
		return &v
	}).(ImmutabilityStatePtrOutput)
}

func (o ImmutabilityStateOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ImmutabilityStateOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ImmutabilityState) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ImmutabilityStateOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ImmutabilityStateOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ImmutabilityState) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ImmutabilityStatePtrOutput struct{ *pulumi.OutputState }

func (ImmutabilityStatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ImmutabilityState)(nil)).Elem()
}

func (o ImmutabilityStatePtrOutput) ToImmutabilityStatePtrOutput() ImmutabilityStatePtrOutput {
	return o
}

func (o ImmutabilityStatePtrOutput) ToImmutabilityStatePtrOutputWithContext(ctx context.Context) ImmutabilityStatePtrOutput {
	return o
}

func (o ImmutabilityStatePtrOutput) Elem() ImmutabilityStateOutput {
	return o.ApplyT(func(v *ImmutabilityState) ImmutabilityState {
		if v != nil {
			return *v
		}
		var ret ImmutabilityState
		return ret
	}).(ImmutabilityStateOutput)
}

func (o ImmutabilityStatePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ImmutabilityStatePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ImmutabilityState) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ImmutabilityStateInput is an input type that accepts values of the ImmutabilityState enum
// A concrete instance of `ImmutabilityStateInput` can be one of the following:
//
//	ImmutabilityStateDisabled
//	ImmutabilityStateUnlocked
//	ImmutabilityStateLocked
type ImmutabilityStateInput interface {
	pulumi.Input

	ToImmutabilityStateOutput() ImmutabilityStateOutput
	ToImmutabilityStateOutputWithContext(context.Context) ImmutabilityStateOutput
}

var immutabilityStatePtrType = reflect.TypeOf((**ImmutabilityState)(nil)).Elem()

type ImmutabilityStatePtrInput interface {
	pulumi.Input

	ToImmutabilityStatePtrOutput() ImmutabilityStatePtrOutput
	ToImmutabilityStatePtrOutputWithContext(context.Context) ImmutabilityStatePtrOutput
}

type immutabilityStatePtr string

func ImmutabilityStatePtr(v string) ImmutabilityStatePtrInput {
	return (*immutabilityStatePtr)(&v)
}

func (*immutabilityStatePtr) ElementType() reflect.Type {
	return immutabilityStatePtrType
}

func (in *immutabilityStatePtr) ToImmutabilityStatePtrOutput() ImmutabilityStatePtrOutput {
	return pulumi.ToOutput(in).(ImmutabilityStatePtrOutput)
}

func (in *immutabilityStatePtr) ToImmutabilityStatePtrOutputWithContext(ctx context.Context) ImmutabilityStatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ImmutabilityStatePtrOutput)
}

// Enabling/Disabling the Double Encryption state
type InfrastructureEncryptionState string

const (
	InfrastructureEncryptionStateEnabled  = InfrastructureEncryptionState("Enabled")
	InfrastructureEncryptionStateDisabled = InfrastructureEncryptionState("Disabled")
)

func (InfrastructureEncryptionState) ElementType() reflect.Type {
	return reflect.TypeOf((*InfrastructureEncryptionState)(nil)).Elem()
}

func (e InfrastructureEncryptionState) ToInfrastructureEncryptionStateOutput() InfrastructureEncryptionStateOutput {
	return pulumi.ToOutput(e).(InfrastructureEncryptionStateOutput)
}

func (e InfrastructureEncryptionState) ToInfrastructureEncryptionStateOutputWithContext(ctx context.Context) InfrastructureEncryptionStateOutput {
	return pulumi.ToOutputWithContext(ctx, e).(InfrastructureEncryptionStateOutput)
}

func (e InfrastructureEncryptionState) ToInfrastructureEncryptionStatePtrOutput() InfrastructureEncryptionStatePtrOutput {
	return e.ToInfrastructureEncryptionStatePtrOutputWithContext(context.Background())
}

func (e InfrastructureEncryptionState) ToInfrastructureEncryptionStatePtrOutputWithContext(ctx context.Context) InfrastructureEncryptionStatePtrOutput {
	return InfrastructureEncryptionState(e).ToInfrastructureEncryptionStateOutputWithContext(ctx).ToInfrastructureEncryptionStatePtrOutputWithContext(ctx)
}

func (e InfrastructureEncryptionState) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e InfrastructureEncryptionState) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e InfrastructureEncryptionState) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e InfrastructureEncryptionState) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type InfrastructureEncryptionStateOutput struct{ *pulumi.OutputState }

func (InfrastructureEncryptionStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InfrastructureEncryptionState)(nil)).Elem()
}

func (o InfrastructureEncryptionStateOutput) ToInfrastructureEncryptionStateOutput() InfrastructureEncryptionStateOutput {
	return o
}

func (o InfrastructureEncryptionStateOutput) ToInfrastructureEncryptionStateOutputWithContext(ctx context.Context) InfrastructureEncryptionStateOutput {
	return o
}

func (o InfrastructureEncryptionStateOutput) ToInfrastructureEncryptionStatePtrOutput() InfrastructureEncryptionStatePtrOutput {
	return o.ToInfrastructureEncryptionStatePtrOutputWithContext(context.Background())
}

func (o InfrastructureEncryptionStateOutput) ToInfrastructureEncryptionStatePtrOutputWithContext(ctx context.Context) InfrastructureEncryptionStatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InfrastructureEncryptionState) *InfrastructureEncryptionState {
		return &v
	}).(InfrastructureEncryptionStatePtrOutput)
}

func (o InfrastructureEncryptionStateOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o InfrastructureEncryptionStateOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e InfrastructureEncryptionState) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o InfrastructureEncryptionStateOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o InfrastructureEncryptionStateOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e InfrastructureEncryptionState) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type InfrastructureEncryptionStatePtrOutput struct{ *pulumi.OutputState }

func (InfrastructureEncryptionStatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InfrastructureEncryptionState)(nil)).Elem()
}

func (o InfrastructureEncryptionStatePtrOutput) ToInfrastructureEncryptionStatePtrOutput() InfrastructureEncryptionStatePtrOutput {
	return o
}

func (o InfrastructureEncryptionStatePtrOutput) ToInfrastructureEncryptionStatePtrOutputWithContext(ctx context.Context) InfrastructureEncryptionStatePtrOutput {
	return o
}

func (o InfrastructureEncryptionStatePtrOutput) Elem() InfrastructureEncryptionStateOutput {
	return o.ApplyT(func(v *InfrastructureEncryptionState) InfrastructureEncryptionState {
		if v != nil {
			return *v
		}
		var ret InfrastructureEncryptionState
		return ret
	}).(InfrastructureEncryptionStateOutput)
}

func (o InfrastructureEncryptionStatePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o InfrastructureEncryptionStatePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *InfrastructureEncryptionState) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// InfrastructureEncryptionStateInput is an input type that accepts values of the InfrastructureEncryptionState enum
// A concrete instance of `InfrastructureEncryptionStateInput` can be one of the following:
//
//	InfrastructureEncryptionStateEnabled
//	InfrastructureEncryptionStateDisabled
type InfrastructureEncryptionStateInput interface {
	pulumi.Input

	ToInfrastructureEncryptionStateOutput() InfrastructureEncryptionStateOutput
	ToInfrastructureEncryptionStateOutputWithContext(context.Context) InfrastructureEncryptionStateOutput
}

var infrastructureEncryptionStatePtrType = reflect.TypeOf((**InfrastructureEncryptionState)(nil)).Elem()

type InfrastructureEncryptionStatePtrInput interface {
	pulumi.Input

	ToInfrastructureEncryptionStatePtrOutput() InfrastructureEncryptionStatePtrOutput
	ToInfrastructureEncryptionStatePtrOutputWithContext(context.Context) InfrastructureEncryptionStatePtrOutput
}

type infrastructureEncryptionStatePtr string

func InfrastructureEncryptionStatePtr(v string) InfrastructureEncryptionStatePtrInput {
	return (*infrastructureEncryptionStatePtr)(&v)
}

func (*infrastructureEncryptionStatePtr) ElementType() reflect.Type {
	return infrastructureEncryptionStatePtrType
}

func (in *infrastructureEncryptionStatePtr) ToInfrastructureEncryptionStatePtrOutput() InfrastructureEncryptionStatePtrOutput {
	return pulumi.ToOutput(in).(InfrastructureEncryptionStatePtrOutput)
}

func (in *infrastructureEncryptionStatePtr) ToInfrastructureEncryptionStatePtrOutputWithContext(ctx context.Context) InfrastructureEncryptionStatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(InfrastructureEncryptionStatePtrOutput)
}

type Month string

const (
	MonthApril     = Month("April")
	MonthAugust    = Month("August")
	MonthDecember  = Month("December")
	MonthFebruary  = Month("February")
	MonthJanuary   = Month("January")
	MonthJuly      = Month("July")
	MonthJune      = Month("June")
	MonthMarch     = Month("March")
	MonthMay       = Month("May")
	MonthNovember  = Month("November")
	MonthOctober   = Month("October")
	MonthSeptember = Month("September")
)

func (Month) ElementType() reflect.Type {
	return reflect.TypeOf((*Month)(nil)).Elem()
}

func (e Month) ToMonthOutput() MonthOutput {
	return pulumi.ToOutput(e).(MonthOutput)
}

func (e Month) ToMonthOutputWithContext(ctx context.Context) MonthOutput {
	return pulumi.ToOutputWithContext(ctx, e).(MonthOutput)
}

func (e Month) ToMonthPtrOutput() MonthPtrOutput {
	return e.ToMonthPtrOutputWithContext(context.Background())
}

func (e Month) ToMonthPtrOutputWithContext(ctx context.Context) MonthPtrOutput {
	return Month(e).ToMonthOutputWithContext(ctx).ToMonthPtrOutputWithContext(ctx)
}

func (e Month) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e Month) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e Month) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e Month) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type MonthOutput struct{ *pulumi.OutputState }

func (MonthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Month)(nil)).Elem()
}

func (o MonthOutput) ToMonthOutput() MonthOutput {
	return o
}

func (o MonthOutput) ToMonthOutputWithContext(ctx context.Context) MonthOutput {
	return o
}

func (o MonthOutput) ToMonthPtrOutput() MonthPtrOutput {
	return o.ToMonthPtrOutputWithContext(context.Background())
}

func (o MonthOutput) ToMonthPtrOutputWithContext(ctx context.Context) MonthPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Month) *Month {
		return &v
	}).(MonthPtrOutput)
}

func (o MonthOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o MonthOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e Month) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o MonthOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o MonthOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e Month) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type MonthPtrOutput struct{ *pulumi.OutputState }

func (MonthPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Month)(nil)).Elem()
}

func (o MonthPtrOutput) ToMonthPtrOutput() MonthPtrOutput {
	return o
}

func (o MonthPtrOutput) ToMonthPtrOutputWithContext(ctx context.Context) MonthPtrOutput {
	return o
}

func (o MonthPtrOutput) Elem() MonthOutput {
	return o.ApplyT(func(v *Month) Month {
		if v != nil {
			return *v
		}
		var ret Month
		return ret
	}).(MonthOutput)
}

func (o MonthPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o MonthPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *Month) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// MonthInput is an input type that accepts values of the Month enum
// A concrete instance of `MonthInput` can be one of the following:
//
//	MonthApril
//	MonthAugust
//	MonthDecember
//	MonthFebruary
//	MonthJanuary
//	MonthJuly
//	MonthJune
//	MonthMarch
//	MonthMay
//	MonthNovember
//	MonthOctober
//	MonthSeptember
type MonthInput interface {
	pulumi.Input

	ToMonthOutput() MonthOutput
	ToMonthOutputWithContext(context.Context) MonthOutput
}

var monthPtrType = reflect.TypeOf((**Month)(nil)).Elem()

type MonthPtrInput interface {
	pulumi.Input

	ToMonthPtrOutput() MonthPtrOutput
	ToMonthPtrOutputWithContext(context.Context) MonthPtrOutput
}

type monthPtr string

func MonthPtr(v string) MonthPtrInput {
	return (*monthPtr)(&v)
}

func (*monthPtr) ElementType() reflect.Type {
	return monthPtrType
}

func (in *monthPtr) ToMonthPtrOutput() MonthPtrOutput {
	return pulumi.ToOutput(in).(MonthPtrOutput)
}

func (in *monthPtr) ToMonthPtrOutputWithContext(ctx context.Context) MonthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(MonthPtrOutput)
}

// Type of the specific object - used for deserializing
type ResourcePropertiesObjectType string

const (
	ResourcePropertiesObjectTypeDefaultResourceProperties = ResourcePropertiesObjectType("DefaultResourceProperties")
)

// Gets or sets the type of secret store
type SecretStoreType string

const (
	SecretStoreTypeInvalid       = SecretStoreType("Invalid")
	SecretStoreTypeAzureKeyVault = SecretStoreType("AzureKeyVault")
)

func (SecretStoreType) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreType)(nil)).Elem()
}

func (e SecretStoreType) ToSecretStoreTypeOutput() SecretStoreTypeOutput {
	return pulumi.ToOutput(e).(SecretStoreTypeOutput)
}

func (e SecretStoreType) ToSecretStoreTypeOutputWithContext(ctx context.Context) SecretStoreTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(SecretStoreTypeOutput)
}

func (e SecretStoreType) ToSecretStoreTypePtrOutput() SecretStoreTypePtrOutput {
	return e.ToSecretStoreTypePtrOutputWithContext(context.Background())
}

func (e SecretStoreType) ToSecretStoreTypePtrOutputWithContext(ctx context.Context) SecretStoreTypePtrOutput {
	return SecretStoreType(e).ToSecretStoreTypeOutputWithContext(ctx).ToSecretStoreTypePtrOutputWithContext(ctx)
}

func (e SecretStoreType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e SecretStoreType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e SecretStoreType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e SecretStoreType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type SecretStoreTypeOutput struct{ *pulumi.OutputState }

func (SecretStoreTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreType)(nil)).Elem()
}

func (o SecretStoreTypeOutput) ToSecretStoreTypeOutput() SecretStoreTypeOutput {
	return o
}

func (o SecretStoreTypeOutput) ToSecretStoreTypeOutputWithContext(ctx context.Context) SecretStoreTypeOutput {
	return o
}

func (o SecretStoreTypeOutput) ToSecretStoreTypePtrOutput() SecretStoreTypePtrOutput {
	return o.ToSecretStoreTypePtrOutputWithContext(context.Background())
}

func (o SecretStoreTypeOutput) ToSecretStoreTypePtrOutputWithContext(ctx context.Context) SecretStoreTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreType) *SecretStoreType {
		return &v
	}).(SecretStoreTypePtrOutput)
}

func (o SecretStoreTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o SecretStoreTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SecretStoreType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o SecretStoreTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SecretStoreTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SecretStoreType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type SecretStoreTypePtrOutput struct{ *pulumi.OutputState }

func (SecretStoreTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreType)(nil)).Elem()
}

func (o SecretStoreTypePtrOutput) ToSecretStoreTypePtrOutput() SecretStoreTypePtrOutput {
	return o
}

func (o SecretStoreTypePtrOutput) ToSecretStoreTypePtrOutputWithContext(ctx context.Context) SecretStoreTypePtrOutput {
	return o
}

func (o SecretStoreTypePtrOutput) Elem() SecretStoreTypeOutput {
	return o.ApplyT(func(v *SecretStoreType) SecretStoreType {
		if v != nil {
			return *v
		}
		var ret SecretStoreType
		return ret
	}).(SecretStoreTypeOutput)
}

func (o SecretStoreTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SecretStoreTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *SecretStoreType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// SecretStoreTypeInput is an input type that accepts values of the SecretStoreType enum
// A concrete instance of `SecretStoreTypeInput` can be one of the following:
//
//	SecretStoreTypeInvalid
//	SecretStoreTypeAzureKeyVault
type SecretStoreTypeInput interface {
	pulumi.Input

	ToSecretStoreTypeOutput() SecretStoreTypeOutput
	ToSecretStoreTypeOutputWithContext(context.Context) SecretStoreTypeOutput
}

var secretStoreTypePtrType = reflect.TypeOf((**SecretStoreType)(nil)).Elem()

type SecretStoreTypePtrInput interface {
	pulumi.Input

	ToSecretStoreTypePtrOutput() SecretStoreTypePtrOutput
	ToSecretStoreTypePtrOutputWithContext(context.Context) SecretStoreTypePtrOutput
}

type secretStoreTypePtr string

func SecretStoreTypePtr(v string) SecretStoreTypePtrInput {
	return (*secretStoreTypePtr)(&v)
}

func (*secretStoreTypePtr) ElementType() reflect.Type {
	return secretStoreTypePtrType
}

func (in *secretStoreTypePtr) ToSecretStoreTypePtrOutput() SecretStoreTypePtrOutput {
	return pulumi.ToOutput(in).(SecretStoreTypePtrOutput)
}

func (in *secretStoreTypePtr) ToSecretStoreTypePtrOutputWithContext(ctx context.Context) SecretStoreTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(SecretStoreTypePtrOutput)
}

// State of soft delete
type SoftDeleteState string

const (
	// Soft Delete is turned off for the BackupVault
	SoftDeleteStateOff = SoftDeleteState("Off")
	// Soft Delete is enabled for the BackupVault but can be turned off
	SoftDeleteStateOn = SoftDeleteState("On")
	// Soft Delete is permanently enabled for the BackupVault and the setting cannot be changed
	SoftDeleteStateAlwaysOn = SoftDeleteState("AlwaysOn")
)

func (SoftDeleteState) ElementType() reflect.Type {
	return reflect.TypeOf((*SoftDeleteState)(nil)).Elem()
}

func (e SoftDeleteState) ToSoftDeleteStateOutput() SoftDeleteStateOutput {
	return pulumi.ToOutput(e).(SoftDeleteStateOutput)
}

func (e SoftDeleteState) ToSoftDeleteStateOutputWithContext(ctx context.Context) SoftDeleteStateOutput {
	return pulumi.ToOutputWithContext(ctx, e).(SoftDeleteStateOutput)
}

func (e SoftDeleteState) ToSoftDeleteStatePtrOutput() SoftDeleteStatePtrOutput {
	return e.ToSoftDeleteStatePtrOutputWithContext(context.Background())
}

func (e SoftDeleteState) ToSoftDeleteStatePtrOutputWithContext(ctx context.Context) SoftDeleteStatePtrOutput {
	return SoftDeleteState(e).ToSoftDeleteStateOutputWithContext(ctx).ToSoftDeleteStatePtrOutputWithContext(ctx)
}

func (e SoftDeleteState) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e SoftDeleteState) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e SoftDeleteState) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e SoftDeleteState) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type SoftDeleteStateOutput struct{ *pulumi.OutputState }

func (SoftDeleteStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SoftDeleteState)(nil)).Elem()
}

func (o SoftDeleteStateOutput) ToSoftDeleteStateOutput() SoftDeleteStateOutput {
	return o
}

func (o SoftDeleteStateOutput) ToSoftDeleteStateOutputWithContext(ctx context.Context) SoftDeleteStateOutput {
	return o
}

func (o SoftDeleteStateOutput) ToSoftDeleteStatePtrOutput() SoftDeleteStatePtrOutput {
	return o.ToSoftDeleteStatePtrOutputWithContext(context.Background())
}

func (o SoftDeleteStateOutput) ToSoftDeleteStatePtrOutputWithContext(ctx context.Context) SoftDeleteStatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SoftDeleteState) *SoftDeleteState {
		return &v
	}).(SoftDeleteStatePtrOutput)
}

func (o SoftDeleteStateOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o SoftDeleteStateOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SoftDeleteState) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o SoftDeleteStateOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SoftDeleteStateOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SoftDeleteState) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type SoftDeleteStatePtrOutput struct{ *pulumi.OutputState }

func (SoftDeleteStatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SoftDeleteState)(nil)).Elem()
}

func (o SoftDeleteStatePtrOutput) ToSoftDeleteStatePtrOutput() SoftDeleteStatePtrOutput {
	return o
}

func (o SoftDeleteStatePtrOutput) ToSoftDeleteStatePtrOutputWithContext(ctx context.Context) SoftDeleteStatePtrOutput {
	return o
}

func (o SoftDeleteStatePtrOutput) Elem() SoftDeleteStateOutput {
	return o.ApplyT(func(v *SoftDeleteState) SoftDeleteState {
		if v != nil {
			return *v
		}
		var ret SoftDeleteState
		return ret
	}).(SoftDeleteStateOutput)
}

func (o SoftDeleteStatePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SoftDeleteStatePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *SoftDeleteState) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// SoftDeleteStateInput is an input type that accepts values of the SoftDeleteState enum
// A concrete instance of `SoftDeleteStateInput` can be one of the following:
//
//	SoftDeleteStateOff
//	SoftDeleteStateOn
//	SoftDeleteStateAlwaysOn
type SoftDeleteStateInput interface {
	pulumi.Input

	ToSoftDeleteStateOutput() SoftDeleteStateOutput
	ToSoftDeleteStateOutputWithContext(context.Context) SoftDeleteStateOutput
}

var softDeleteStatePtrType = reflect.TypeOf((**SoftDeleteState)(nil)).Elem()

type SoftDeleteStatePtrInput interface {
	pulumi.Input

	ToSoftDeleteStatePtrOutput() SoftDeleteStatePtrOutput
	ToSoftDeleteStatePtrOutputWithContext(context.Context) SoftDeleteStatePtrOutput
}

type softDeleteStatePtr string

func SoftDeleteStatePtr(v string) SoftDeleteStatePtrInput {
	return (*softDeleteStatePtr)(&v)
}

func (*softDeleteStatePtr) ElementType() reflect.Type {
	return softDeleteStatePtrType
}

func (in *softDeleteStatePtr) ToSoftDeleteStatePtrOutput() SoftDeleteStatePtrOutput {
	return pulumi.ToOutput(in).(SoftDeleteStatePtrOutput)
}

func (in *softDeleteStatePtr) ToSoftDeleteStatePtrOutputWithContext(ctx context.Context) SoftDeleteStatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(SoftDeleteStatePtrOutput)
}

// Gets or sets the type of the datastore.
type StorageSettingStoreTypes string

const (
	StorageSettingStoreTypesArchiveStore     = StorageSettingStoreTypes("ArchiveStore")
	StorageSettingStoreTypesOperationalStore = StorageSettingStoreTypes("OperationalStore")
	StorageSettingStoreTypesVaultStore       = StorageSettingStoreTypes("VaultStore")
)

func (StorageSettingStoreTypes) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageSettingStoreTypes)(nil)).Elem()
}

func (e StorageSettingStoreTypes) ToStorageSettingStoreTypesOutput() StorageSettingStoreTypesOutput {
	return pulumi.ToOutput(e).(StorageSettingStoreTypesOutput)
}

func (e StorageSettingStoreTypes) ToStorageSettingStoreTypesOutputWithContext(ctx context.Context) StorageSettingStoreTypesOutput {
	return pulumi.ToOutputWithContext(ctx, e).(StorageSettingStoreTypesOutput)
}

func (e StorageSettingStoreTypes) ToStorageSettingStoreTypesPtrOutput() StorageSettingStoreTypesPtrOutput {
	return e.ToStorageSettingStoreTypesPtrOutputWithContext(context.Background())
}

func (e StorageSettingStoreTypes) ToStorageSettingStoreTypesPtrOutputWithContext(ctx context.Context) StorageSettingStoreTypesPtrOutput {
	return StorageSettingStoreTypes(e).ToStorageSettingStoreTypesOutputWithContext(ctx).ToStorageSettingStoreTypesPtrOutputWithContext(ctx)
}

func (e StorageSettingStoreTypes) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e StorageSettingStoreTypes) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e StorageSettingStoreTypes) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e StorageSettingStoreTypes) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type StorageSettingStoreTypesOutput struct{ *pulumi.OutputState }

func (StorageSettingStoreTypesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageSettingStoreTypes)(nil)).Elem()
}

func (o StorageSettingStoreTypesOutput) ToStorageSettingStoreTypesOutput() StorageSettingStoreTypesOutput {
	return o
}

func (o StorageSettingStoreTypesOutput) ToStorageSettingStoreTypesOutputWithContext(ctx context.Context) StorageSettingStoreTypesOutput {
	return o
}

func (o StorageSettingStoreTypesOutput) ToStorageSettingStoreTypesPtrOutput() StorageSettingStoreTypesPtrOutput {
	return o.ToStorageSettingStoreTypesPtrOutputWithContext(context.Background())
}

func (o StorageSettingStoreTypesOutput) ToStorageSettingStoreTypesPtrOutputWithContext(ctx context.Context) StorageSettingStoreTypesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v StorageSettingStoreTypes) *StorageSettingStoreTypes {
		return &v
	}).(StorageSettingStoreTypesPtrOutput)
}

func (o StorageSettingStoreTypesOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o StorageSettingStoreTypesOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e StorageSettingStoreTypes) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o StorageSettingStoreTypesOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o StorageSettingStoreTypesOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e StorageSettingStoreTypes) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type StorageSettingStoreTypesPtrOutput struct{ *pulumi.OutputState }

func (StorageSettingStoreTypesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageSettingStoreTypes)(nil)).Elem()
}

func (o StorageSettingStoreTypesPtrOutput) ToStorageSettingStoreTypesPtrOutput() StorageSettingStoreTypesPtrOutput {
	return o
}

func (o StorageSettingStoreTypesPtrOutput) ToStorageSettingStoreTypesPtrOutputWithContext(ctx context.Context) StorageSettingStoreTypesPtrOutput {
	return o
}

func (o StorageSettingStoreTypesPtrOutput) Elem() StorageSettingStoreTypesOutput {
	return o.ApplyT(func(v *StorageSettingStoreTypes) StorageSettingStoreTypes {
		if v != nil {
			return *v
		}
		var ret StorageSettingStoreTypes
		return ret
	}).(StorageSettingStoreTypesOutput)
}

func (o StorageSettingStoreTypesPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o StorageSettingStoreTypesPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *StorageSettingStoreTypes) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// StorageSettingStoreTypesInput is an input type that accepts values of the StorageSettingStoreTypes enum
// A concrete instance of `StorageSettingStoreTypesInput` can be one of the following:
//
//	StorageSettingStoreTypesArchiveStore
//	StorageSettingStoreTypesOperationalStore
//	StorageSettingStoreTypesVaultStore
type StorageSettingStoreTypesInput interface {
	pulumi.Input

	ToStorageSettingStoreTypesOutput() StorageSettingStoreTypesOutput
	ToStorageSettingStoreTypesOutputWithContext(context.Context) StorageSettingStoreTypesOutput
}

var storageSettingStoreTypesPtrType = reflect.TypeOf((**StorageSettingStoreTypes)(nil)).Elem()

type StorageSettingStoreTypesPtrInput interface {
	pulumi.Input

	ToStorageSettingStoreTypesPtrOutput() StorageSettingStoreTypesPtrOutput
	ToStorageSettingStoreTypesPtrOutputWithContext(context.Context) StorageSettingStoreTypesPtrOutput
}

type storageSettingStoreTypesPtr string

func StorageSettingStoreTypesPtr(v string) StorageSettingStoreTypesPtrInput {
	return (*storageSettingStoreTypesPtr)(&v)
}

func (*storageSettingStoreTypesPtr) ElementType() reflect.Type {
	return storageSettingStoreTypesPtrType
}

func (in *storageSettingStoreTypesPtr) ToStorageSettingStoreTypesPtrOutput() StorageSettingStoreTypesPtrOutput {
	return pulumi.ToOutput(in).(StorageSettingStoreTypesPtrOutput)
}

func (in *storageSettingStoreTypesPtr) ToStorageSettingStoreTypesPtrOutputWithContext(ctx context.Context) StorageSettingStoreTypesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(StorageSettingStoreTypesPtrOutput)
}

// Gets or sets the type.
type StorageSettingTypes string

const (
	StorageSettingTypesGeoRedundant     = StorageSettingTypes("GeoRedundant")
	StorageSettingTypesLocallyRedundant = StorageSettingTypes("LocallyRedundant")
	StorageSettingTypesZoneRedundant    = StorageSettingTypes("ZoneRedundant")
)

func (StorageSettingTypes) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageSettingTypes)(nil)).Elem()
}

func (e StorageSettingTypes) ToStorageSettingTypesOutput() StorageSettingTypesOutput {
	return pulumi.ToOutput(e).(StorageSettingTypesOutput)
}

func (e StorageSettingTypes) ToStorageSettingTypesOutputWithContext(ctx context.Context) StorageSettingTypesOutput {
	return pulumi.ToOutputWithContext(ctx, e).(StorageSettingTypesOutput)
}

func (e StorageSettingTypes) ToStorageSettingTypesPtrOutput() StorageSettingTypesPtrOutput {
	return e.ToStorageSettingTypesPtrOutputWithContext(context.Background())
}

func (e StorageSettingTypes) ToStorageSettingTypesPtrOutputWithContext(ctx context.Context) StorageSettingTypesPtrOutput {
	return StorageSettingTypes(e).ToStorageSettingTypesOutputWithContext(ctx).ToStorageSettingTypesPtrOutputWithContext(ctx)
}

func (e StorageSettingTypes) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e StorageSettingTypes) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e StorageSettingTypes) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e StorageSettingTypes) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type StorageSettingTypesOutput struct{ *pulumi.OutputState }

func (StorageSettingTypesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageSettingTypes)(nil)).Elem()
}

func (o StorageSettingTypesOutput) ToStorageSettingTypesOutput() StorageSettingTypesOutput {
	return o
}

func (o StorageSettingTypesOutput) ToStorageSettingTypesOutputWithContext(ctx context.Context) StorageSettingTypesOutput {
	return o
}

func (o StorageSettingTypesOutput) ToStorageSettingTypesPtrOutput() StorageSettingTypesPtrOutput {
	return o.ToStorageSettingTypesPtrOutputWithContext(context.Background())
}

func (o StorageSettingTypesOutput) ToStorageSettingTypesPtrOutputWithContext(ctx context.Context) StorageSettingTypesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v StorageSettingTypes) *StorageSettingTypes {
		return &v
	}).(StorageSettingTypesPtrOutput)
}

func (o StorageSettingTypesOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o StorageSettingTypesOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e StorageSettingTypes) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o StorageSettingTypesOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o StorageSettingTypesOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e StorageSettingTypes) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type StorageSettingTypesPtrOutput struct{ *pulumi.OutputState }

func (StorageSettingTypesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageSettingTypes)(nil)).Elem()
}

func (o StorageSettingTypesPtrOutput) ToStorageSettingTypesPtrOutput() StorageSettingTypesPtrOutput {
	return o
}

func (o StorageSettingTypesPtrOutput) ToStorageSettingTypesPtrOutputWithContext(ctx context.Context) StorageSettingTypesPtrOutput {
	return o
}

func (o StorageSettingTypesPtrOutput) Elem() StorageSettingTypesOutput {
	return o.ApplyT(func(v *StorageSettingTypes) StorageSettingTypes {
		if v != nil {
			return *v
		}
		var ret StorageSettingTypes
		return ret
	}).(StorageSettingTypesOutput)
}

func (o StorageSettingTypesPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o StorageSettingTypesPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *StorageSettingTypes) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// StorageSettingTypesInput is an input type that accepts values of the StorageSettingTypes enum
// A concrete instance of `StorageSettingTypesInput` can be one of the following:
//
//	StorageSettingTypesGeoRedundant
//	StorageSettingTypesLocallyRedundant
//	StorageSettingTypesZoneRedundant
type StorageSettingTypesInput interface {
	pulumi.Input

	ToStorageSettingTypesOutput() StorageSettingTypesOutput
	ToStorageSettingTypesOutputWithContext(context.Context) StorageSettingTypesOutput
}

var storageSettingTypesPtrType = reflect.TypeOf((**StorageSettingTypes)(nil)).Elem()

type StorageSettingTypesPtrInput interface {
	pulumi.Input

	ToStorageSettingTypesPtrOutput() StorageSettingTypesPtrOutput
	ToStorageSettingTypesPtrOutputWithContext(context.Context) StorageSettingTypesPtrOutput
}

type storageSettingTypesPtr string

func StorageSettingTypesPtr(v string) StorageSettingTypesPtrInput {
	return (*storageSettingTypesPtr)(&v)
}

func (*storageSettingTypesPtr) ElementType() reflect.Type {
	return storageSettingTypesPtrType
}

func (in *storageSettingTypesPtr) ToStorageSettingTypesPtrOutput() StorageSettingTypesPtrOutput {
	return pulumi.ToOutput(in).(StorageSettingTypesPtrOutput)
}

func (in *storageSettingTypesPtr) ToStorageSettingTypesPtrOutputWithContext(ctx context.Context) StorageSettingTypesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(StorageSettingTypesPtrOutput)
}

// Specifies the type of validation. In case of DeepValidation, all validations from /validateForBackup API will run again.
type ValidationType string

const (
	ValidationTypeShallowValidation = ValidationType("ShallowValidation")
	ValidationTypeDeepValidation    = ValidationType("DeepValidation")
)

func (ValidationType) ElementType() reflect.Type {
	return reflect.TypeOf((*ValidationType)(nil)).Elem()
}

func (e ValidationType) ToValidationTypeOutput() ValidationTypeOutput {
	return pulumi.ToOutput(e).(ValidationTypeOutput)
}

func (e ValidationType) ToValidationTypeOutputWithContext(ctx context.Context) ValidationTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ValidationTypeOutput)
}

func (e ValidationType) ToValidationTypePtrOutput() ValidationTypePtrOutput {
	return e.ToValidationTypePtrOutputWithContext(context.Background())
}

func (e ValidationType) ToValidationTypePtrOutputWithContext(ctx context.Context) ValidationTypePtrOutput {
	return ValidationType(e).ToValidationTypeOutputWithContext(ctx).ToValidationTypePtrOutputWithContext(ctx)
}

func (e ValidationType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ValidationType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ValidationType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ValidationType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ValidationTypeOutput struct{ *pulumi.OutputState }

func (ValidationTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ValidationType)(nil)).Elem()
}

func (o ValidationTypeOutput) ToValidationTypeOutput() ValidationTypeOutput {
	return o
}

func (o ValidationTypeOutput) ToValidationTypeOutputWithContext(ctx context.Context) ValidationTypeOutput {
	return o
}

func (o ValidationTypeOutput) ToValidationTypePtrOutput() ValidationTypePtrOutput {
	return o.ToValidationTypePtrOutputWithContext(context.Background())
}

func (o ValidationTypeOutput) ToValidationTypePtrOutputWithContext(ctx context.Context) ValidationTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ValidationType) *ValidationType {
		return &v
	}).(ValidationTypePtrOutput)
}

func (o ValidationTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ValidationTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ValidationType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ValidationTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ValidationTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ValidationType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ValidationTypePtrOutput struct{ *pulumi.OutputState }

func (ValidationTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ValidationType)(nil)).Elem()
}

func (o ValidationTypePtrOutput) ToValidationTypePtrOutput() ValidationTypePtrOutput {
	return o
}

func (o ValidationTypePtrOutput) ToValidationTypePtrOutputWithContext(ctx context.Context) ValidationTypePtrOutput {
	return o
}

func (o ValidationTypePtrOutput) Elem() ValidationTypeOutput {
	return o.ApplyT(func(v *ValidationType) ValidationType {
		if v != nil {
			return *v
		}
		var ret ValidationType
		return ret
	}).(ValidationTypeOutput)
}

func (o ValidationTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ValidationTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ValidationType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ValidationTypeInput is an input type that accepts values of the ValidationType enum
// A concrete instance of `ValidationTypeInput` can be one of the following:
//
//	ValidationTypeShallowValidation
//	ValidationTypeDeepValidation
type ValidationTypeInput interface {
	pulumi.Input

	ToValidationTypeOutput() ValidationTypeOutput
	ToValidationTypeOutputWithContext(context.Context) ValidationTypeOutput
}

var validationTypePtrType = reflect.TypeOf((**ValidationType)(nil)).Elem()

type ValidationTypePtrInput interface {
	pulumi.Input

	ToValidationTypePtrOutput() ValidationTypePtrOutput
	ToValidationTypePtrOutputWithContext(context.Context) ValidationTypePtrOutput
}

type validationTypePtr string

func ValidationTypePtr(v string) ValidationTypePtrInput {
	return (*validationTypePtr)(&v)
}

func (*validationTypePtr) ElementType() reflect.Type {
	return validationTypePtrType
}

func (in *validationTypePtr) ToValidationTypePtrOutput() ValidationTypePtrOutput {
	return pulumi.ToOutput(in).(ValidationTypePtrOutput)
}

func (in *validationTypePtr) ToValidationTypePtrOutputWithContext(ctx context.Context) ValidationTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ValidationTypePtrOutput)
}

type WeekNumber string

const (
	WeekNumberFirst  = WeekNumber("First")
	WeekNumberFourth = WeekNumber("Fourth")
	WeekNumberLast   = WeekNumber("Last")
	WeekNumberSecond = WeekNumber("Second")
	WeekNumberThird  = WeekNumber("Third")
)

func (WeekNumber) ElementType() reflect.Type {
	return reflect.TypeOf((*WeekNumber)(nil)).Elem()
}

func (e WeekNumber) ToWeekNumberOutput() WeekNumberOutput {
	return pulumi.ToOutput(e).(WeekNumberOutput)
}

func (e WeekNumber) ToWeekNumberOutputWithContext(ctx context.Context) WeekNumberOutput {
	return pulumi.ToOutputWithContext(ctx, e).(WeekNumberOutput)
}

func (e WeekNumber) ToWeekNumberPtrOutput() WeekNumberPtrOutput {
	return e.ToWeekNumberPtrOutputWithContext(context.Background())
}

func (e WeekNumber) ToWeekNumberPtrOutputWithContext(ctx context.Context) WeekNumberPtrOutput {
	return WeekNumber(e).ToWeekNumberOutputWithContext(ctx).ToWeekNumberPtrOutputWithContext(ctx)
}

func (e WeekNumber) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e WeekNumber) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e WeekNumber) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e WeekNumber) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type WeekNumberOutput struct{ *pulumi.OutputState }

func (WeekNumberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WeekNumber)(nil)).Elem()
}

func (o WeekNumberOutput) ToWeekNumberOutput() WeekNumberOutput {
	return o
}

func (o WeekNumberOutput) ToWeekNumberOutputWithContext(ctx context.Context) WeekNumberOutput {
	return o
}

func (o WeekNumberOutput) ToWeekNumberPtrOutput() WeekNumberPtrOutput {
	return o.ToWeekNumberPtrOutputWithContext(context.Background())
}

func (o WeekNumberOutput) ToWeekNumberPtrOutputWithContext(ctx context.Context) WeekNumberPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WeekNumber) *WeekNumber {
		return &v
	}).(WeekNumberPtrOutput)
}

func (o WeekNumberOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o WeekNumberOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e WeekNumber) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o WeekNumberOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o WeekNumberOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e WeekNumber) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type WeekNumberPtrOutput struct{ *pulumi.OutputState }

func (WeekNumberPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WeekNumber)(nil)).Elem()
}

func (o WeekNumberPtrOutput) ToWeekNumberPtrOutput() WeekNumberPtrOutput {
	return o
}

func (o WeekNumberPtrOutput) ToWeekNumberPtrOutputWithContext(ctx context.Context) WeekNumberPtrOutput {
	return o
}

func (o WeekNumberPtrOutput) Elem() WeekNumberOutput {
	return o.ApplyT(func(v *WeekNumber) WeekNumber {
		if v != nil {
			return *v
		}
		var ret WeekNumber
		return ret
	}).(WeekNumberOutput)
}

func (o WeekNumberPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o WeekNumberPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *WeekNumber) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// WeekNumberInput is an input type that accepts values of the WeekNumber enum
// A concrete instance of `WeekNumberInput` can be one of the following:
//
//	WeekNumberFirst
//	WeekNumberFourth
//	WeekNumberLast
//	WeekNumberSecond
//	WeekNumberThird
type WeekNumberInput interface {
	pulumi.Input

	ToWeekNumberOutput() WeekNumberOutput
	ToWeekNumberOutputWithContext(context.Context) WeekNumberOutput
}

var weekNumberPtrType = reflect.TypeOf((**WeekNumber)(nil)).Elem()

type WeekNumberPtrInput interface {
	pulumi.Input

	ToWeekNumberPtrOutput() WeekNumberPtrOutput
	ToWeekNumberPtrOutputWithContext(context.Context) WeekNumberPtrOutput
}

type weekNumberPtr string

func WeekNumberPtr(v string) WeekNumberPtrInput {
	return (*weekNumberPtr)(&v)
}

func (*weekNumberPtr) ElementType() reflect.Type {
	return weekNumberPtrType
}

func (in *weekNumberPtr) ToWeekNumberPtrOutput() WeekNumberPtrOutput {
	return pulumi.ToOutput(in).(WeekNumberPtrOutput)
}

func (in *weekNumberPtr) ToWeekNumberPtrOutputWithContext(ctx context.Context) WeekNumberPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(WeekNumberPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(AbsoluteMarkerOutput{})
	pulumi.RegisterOutputType(AbsoluteMarkerPtrOutput{})
	pulumi.RegisterOutputType(AlertsStateOutput{})
	pulumi.RegisterOutputType(AlertsStatePtrOutput{})
	pulumi.RegisterOutputType(CrossRegionRestoreStateOutput{})
	pulumi.RegisterOutputType(CrossRegionRestoreStatePtrOutput{})
	pulumi.RegisterOutputType(CrossSubscriptionRestoreStateOutput{})
	pulumi.RegisterOutputType(CrossSubscriptionRestoreStatePtrOutput{})
	pulumi.RegisterOutputType(DataStoreTypesOutput{})
	pulumi.RegisterOutputType(DataStoreTypesPtrOutput{})
	pulumi.RegisterOutputType(DayOfWeekOutput{})
	pulumi.RegisterOutputType(DayOfWeekPtrOutput{})
	pulumi.RegisterOutputType(EncryptionStateOutput{})
	pulumi.RegisterOutputType(EncryptionStatePtrOutput{})
	pulumi.RegisterOutputType(IdentityTypeOutput{})
	pulumi.RegisterOutputType(IdentityTypePtrOutput{})
	pulumi.RegisterOutputType(ImmutabilityStateOutput{})
	pulumi.RegisterOutputType(ImmutabilityStatePtrOutput{})
	pulumi.RegisterOutputType(InfrastructureEncryptionStateOutput{})
	pulumi.RegisterOutputType(InfrastructureEncryptionStatePtrOutput{})
	pulumi.RegisterOutputType(MonthOutput{})
	pulumi.RegisterOutputType(MonthPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreTypeOutput{})
	pulumi.RegisterOutputType(SecretStoreTypePtrOutput{})
	pulumi.RegisterOutputType(SoftDeleteStateOutput{})
	pulumi.RegisterOutputType(SoftDeleteStatePtrOutput{})
	pulumi.RegisterOutputType(StorageSettingStoreTypesOutput{})
	pulumi.RegisterOutputType(StorageSettingStoreTypesPtrOutput{})
	pulumi.RegisterOutputType(StorageSettingTypesOutput{})
	pulumi.RegisterOutputType(StorageSettingTypesPtrOutput{})
	pulumi.RegisterOutputType(ValidationTypeOutput{})
	pulumi.RegisterOutputType(ValidationTypePtrOutput{})
	pulumi.RegisterOutputType(WeekNumberOutput{})
	pulumi.RegisterOutputType(WeekNumberPtrOutput{})
}
