// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dataprotection

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// BaseBackupPolicy resource
// Azure REST API version: 2023-01-01. Prior API version in Azure Native 1.x: 2021-01-01.
//
// Other available API versions: 2023-04-01-preview, 2023-05-01, 2023-06-01-preview.
type BackupPolicy struct {
	pulumi.CustomResourceState

	// Resource name associated with the resource.
	Name pulumi.StringOutput `pulumi:"name"`
	// BaseBackupPolicyResource properties
	Properties BackupPolicyResponseOutput `pulumi:"properties"`
	// Metadata pertaining to creation and last modification of the resource.
	SystemData SystemDataResponseOutput `pulumi:"systemData"`
	// Resource type represents the complete path of the form Namespace/ResourceType/ResourceType/...
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewBackupPolicy registers a new resource with the given unique name, arguments, and options.
func NewBackupPolicy(ctx *pulumi.Context,
	name string, args *BackupPolicyArgs, opts ...pulumi.ResourceOption) (*BackupPolicy, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	if args.VaultName == nil {
		return nil, errors.New("invalid value for required argument 'VaultName'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:dataprotection/v20210101:BackupPolicy"),
		},
		{
			Type: pulumi.String("azure-native:dataprotection/v20210201preview:BackupPolicy"),
		},
		{
			Type: pulumi.String("azure-native:dataprotection/v20210601preview:BackupPolicy"),
		},
		{
			Type: pulumi.String("azure-native:dataprotection/v20210701:BackupPolicy"),
		},
		{
			Type: pulumi.String("azure-native:dataprotection/v20211001preview:BackupPolicy"),
		},
		{
			Type: pulumi.String("azure-native:dataprotection/v20211201preview:BackupPolicy"),
		},
		{
			Type: pulumi.String("azure-native:dataprotection/v20220101:BackupPolicy"),
		},
		{
			Type: pulumi.String("azure-native:dataprotection/v20220201preview:BackupPolicy"),
		},
		{
			Type: pulumi.String("azure-native:dataprotection/v20220301:BackupPolicy"),
		},
		{
			Type: pulumi.String("azure-native:dataprotection/v20220331preview:BackupPolicy"),
		},
		{
			Type: pulumi.String("azure-native:dataprotection/v20220401:BackupPolicy"),
		},
		{
			Type: pulumi.String("azure-native:dataprotection/v20220501:BackupPolicy"),
		},
		{
			Type: pulumi.String("azure-native:dataprotection/v20220901preview:BackupPolicy"),
		},
		{
			Type: pulumi.String("azure-native:dataprotection/v20221001preview:BackupPolicy"),
		},
		{
			Type: pulumi.String("azure-native:dataprotection/v20221101preview:BackupPolicy"),
		},
		{
			Type: pulumi.String("azure-native:dataprotection/v20221201:BackupPolicy"),
		},
		{
			Type: pulumi.String("azure-native:dataprotection/v20230101:BackupPolicy"),
		},
		{
			Type: pulumi.String("azure-native:dataprotection/v20230401preview:BackupPolicy"),
		},
		{
			Type: pulumi.String("azure-native:dataprotection/v20230501:BackupPolicy"),
		},
		{
			Type: pulumi.String("azure-native:dataprotection/v20230601preview:BackupPolicy"),
		},
	})
	opts = append(opts, aliases)
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource BackupPolicy
	err := ctx.RegisterResource("azure-native:dataprotection:BackupPolicy", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetBackupPolicy gets an existing BackupPolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetBackupPolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *BackupPolicyState, opts ...pulumi.ResourceOption) (*BackupPolicy, error) {
	var resource BackupPolicy
	err := ctx.ReadResource("azure-native:dataprotection:BackupPolicy", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering BackupPolicy resources.
type backupPolicyState struct {
}

type BackupPolicyState struct {
}

func (BackupPolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*backupPolicyState)(nil)).Elem()
}

type backupPolicyArgs struct {
	// Name of the policy
	BackupPolicyName *string `pulumi:"backupPolicyName"`
	// BaseBackupPolicyResource properties
	Properties *BackupPolicyType `pulumi:"properties"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The name of the backup vault.
	VaultName string `pulumi:"vaultName"`
}

// The set of arguments for constructing a BackupPolicy resource.
type BackupPolicyArgs struct {
	// Name of the policy
	BackupPolicyName pulumi.StringPtrInput
	// BaseBackupPolicyResource properties
	Properties BackupPolicyTypePtrInput
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput
	// The name of the backup vault.
	VaultName pulumi.StringInput
}

func (BackupPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*backupPolicyArgs)(nil)).Elem()
}

type BackupPolicyInput interface {
	pulumi.Input

	ToBackupPolicyOutput() BackupPolicyOutput
	ToBackupPolicyOutputWithContext(ctx context.Context) BackupPolicyOutput
}

func (*BackupPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((**BackupPolicy)(nil)).Elem()
}

func (i *BackupPolicy) ToBackupPolicyOutput() BackupPolicyOutput {
	return i.ToBackupPolicyOutputWithContext(context.Background())
}

func (i *BackupPolicy) ToBackupPolicyOutputWithContext(ctx context.Context) BackupPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupPolicyOutput)
}

func (i *BackupPolicy) ToOutput(ctx context.Context) pulumix.Output[*BackupPolicy] {
	return pulumix.Output[*BackupPolicy]{
		OutputState: i.ToBackupPolicyOutputWithContext(ctx).OutputState,
	}
}

type BackupPolicyOutput struct{ *pulumi.OutputState }

func (BackupPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BackupPolicy)(nil)).Elem()
}

func (o BackupPolicyOutput) ToBackupPolicyOutput() BackupPolicyOutput {
	return o
}

func (o BackupPolicyOutput) ToBackupPolicyOutputWithContext(ctx context.Context) BackupPolicyOutput {
	return o
}

func (o BackupPolicyOutput) ToOutput(ctx context.Context) pulumix.Output[*BackupPolicy] {
	return pulumix.Output[*BackupPolicy]{
		OutputState: o.OutputState,
	}
}

// Resource name associated with the resource.
func (o BackupPolicyOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *BackupPolicy) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// BaseBackupPolicyResource properties
func (o BackupPolicyOutput) Properties() BackupPolicyResponseOutput {
	return o.ApplyT(func(v *BackupPolicy) BackupPolicyResponseOutput { return v.Properties }).(BackupPolicyResponseOutput)
}

// Metadata pertaining to creation and last modification of the resource.
func (o BackupPolicyOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v *BackupPolicy) SystemDataResponseOutput { return v.SystemData }).(SystemDataResponseOutput)
}

// Resource type represents the complete path of the form Namespace/ResourceType/ResourceType/...
func (o BackupPolicyOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *BackupPolicy) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(BackupPolicyOutput{})
}
