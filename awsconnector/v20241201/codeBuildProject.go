// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20241201

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// A Microsoft.AwsConnector resource
type CodeBuildProject struct {
	pulumi.CustomResourceState

	// The geo-location where the resource lives
	Location pulumi.StringOutput `pulumi:"location"`
	// The name of the resource
	Name pulumi.StringOutput `pulumi:"name"`
	// The resource-specific properties for this resource.
	Properties CodeBuildProjectPropertiesResponseOutput `pulumi:"properties"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponseOutput `pulumi:"systemData"`
	// Resource tags.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewCodeBuildProject registers a new resource with the given unique name, arguments, and options.
func NewCodeBuildProject(ctx *pulumi.Context,
	name string, args *CodeBuildProjectArgs, opts ...pulumi.ResourceOption) (*CodeBuildProject, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:awsconnector:CodeBuildProject"),
		},
	})
	opts = append(opts, aliases)
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource CodeBuildProject
	err := ctx.RegisterResource("azure-native:awsconnector/v20241201:CodeBuildProject", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCodeBuildProject gets an existing CodeBuildProject resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCodeBuildProject(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CodeBuildProjectState, opts ...pulumi.ResourceOption) (*CodeBuildProject, error) {
	var resource CodeBuildProject
	err := ctx.ReadResource("azure-native:awsconnector/v20241201:CodeBuildProject", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CodeBuildProject resources.
type codeBuildProjectState struct {
}

type CodeBuildProjectState struct {
}

func (CodeBuildProjectState) ElementType() reflect.Type {
	return reflect.TypeOf((*codeBuildProjectState)(nil)).Elem()
}

type codeBuildProjectArgs struct {
	// The geo-location where the resource lives
	Location *string `pulumi:"location"`
	// Name of CodeBuildProject
	Name *string `pulumi:"name"`
	// The resource-specific properties for this resource.
	Properties *CodeBuildProjectProperties `pulumi:"properties"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a CodeBuildProject resource.
type CodeBuildProjectArgs struct {
	// The geo-location where the resource lives
	Location pulumi.StringPtrInput
	// Name of CodeBuildProject
	Name pulumi.StringPtrInput
	// The resource-specific properties for this resource.
	Properties CodeBuildProjectPropertiesPtrInput
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput
	// Resource tags.
	Tags pulumi.StringMapInput
}

func (CodeBuildProjectArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*codeBuildProjectArgs)(nil)).Elem()
}

type CodeBuildProjectInput interface {
	pulumi.Input

	ToCodeBuildProjectOutput() CodeBuildProjectOutput
	ToCodeBuildProjectOutputWithContext(ctx context.Context) CodeBuildProjectOutput
}

func (*CodeBuildProject) ElementType() reflect.Type {
	return reflect.TypeOf((**CodeBuildProject)(nil)).Elem()
}

func (i *CodeBuildProject) ToCodeBuildProjectOutput() CodeBuildProjectOutput {
	return i.ToCodeBuildProjectOutputWithContext(context.Background())
}

func (i *CodeBuildProject) ToCodeBuildProjectOutputWithContext(ctx context.Context) CodeBuildProjectOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CodeBuildProjectOutput)
}

type CodeBuildProjectOutput struct{ *pulumi.OutputState }

func (CodeBuildProjectOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CodeBuildProject)(nil)).Elem()
}

func (o CodeBuildProjectOutput) ToCodeBuildProjectOutput() CodeBuildProjectOutput {
	return o
}

func (o CodeBuildProjectOutput) ToCodeBuildProjectOutputWithContext(ctx context.Context) CodeBuildProjectOutput {
	return o
}

// The geo-location where the resource lives
func (o CodeBuildProjectOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *CodeBuildProject) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// The name of the resource
func (o CodeBuildProjectOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *CodeBuildProject) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The resource-specific properties for this resource.
func (o CodeBuildProjectOutput) Properties() CodeBuildProjectPropertiesResponseOutput {
	return o.ApplyT(func(v *CodeBuildProject) CodeBuildProjectPropertiesResponseOutput { return v.Properties }).(CodeBuildProjectPropertiesResponseOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o CodeBuildProjectOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v *CodeBuildProject) SystemDataResponseOutput { return v.SystemData }).(SystemDataResponseOutput)
}

// Resource tags.
func (o CodeBuildProjectOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *CodeBuildProject) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o CodeBuildProjectOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *CodeBuildProject) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(CodeBuildProjectOutput{})
}
